
fce310acedda0bfcde8e101b6717192804bf943d89e4e99703704cc2e971c9f5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0x7455e01a
  402b89:	pop    ebx
  402b8a:	inc    ebx
  402b8b:	into   
  402b8c:	jp     0x402c08
  402b8e:	jp     0x402c0a
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3a652f1b
  402b9e:	imul   esp,DWORD PTR [esi+0x2a],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x342f8bf
  402c38:	cwde   
  402c39:	pop    ebx
  402c3a:	mov    ah,0xc8
  402c3c:	sbb    BYTE PTR [edx+esi*4+0x567482ab],ch
  402c43:	clc    
  402c44:	xchg   BYTE PTR [esi-0x73686493],dl
  402c4a:	and    al,0x44
  402c4c:	ins    BYTE PTR es:[edi],dx
  402c4d:	call   FWORD PTR [edi+0x26]
  402c50:	lahf   
  402c51:	arpl   WORD PTR [edx],bp
  402c53:	mov    dh,BYTE PTR [ebp+0x6]
  402c56:	jge    0x402c9c
  402c58:	icebp  
  402c59:	mov    BYTE PTR ds:0x399b0fee,ch
  402c5f:	push   edi
  402c60:	sbb    DWORD PTR [ebp+edx*8+0x48824907],0xffffffda
  402c68:	inc    ebx
  402c69:	push   esp
  402c6a:	sbb    BYTE PTR [esi],0x99
  402c6d:	pop    esp
  402c6e:	repnz daa 
  402c70:	gs cdq 
  402c72:	jno    0x402c22
  402c74:	sub    al,0x90
  402c76:	test   BYTE PTR [edi+0x49],dh
  402c79:	or     eax,0x2da28cc9
  402c7e:	in     al,dx
  402c7f:	xchg   DWORD PTR [ebx],ecx
  402c81:	scas   al,BYTE PTR es:[edi]
  402c82:	mov    al,BYTE PTR [esp+edx*2-0x64]
  402c86:	ja     0x402cf8
  402c88:	add    BYTE PTR [ebx],bl
  402c8a:	pop    ds
  402c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c8c:	inc    esi
  402c8d:	(bad)  
  402c8e:	xlat   BYTE PTR ds:[ebx]
  402c8f:	loopne 0x402cad
  402c91:	outs   dx,BYTE PTR ds:[esi]
  402c92:	mov    eax,eax
  402c94:	add    DWORD PTR [ecx+0x35bf949d],eax
  402c9a:	test   DWORD PTR [edi-0x4b],ecx
  402c9d:	dec    ebx
  402c9e:	ja     0x818f7701
  402ca4:	dec    esp
  402ca5:	dec    ebp
  402ca6:	jo     0x402c35
  402ca8:	loope  0x402cba
  402caa:	leave  
  402cab:	xchg   edx,eax
  402cac:	push   ebx
  402cad:	cs aas 
  402caf:	pushf  
  402cb0:	pop    edi
  402cb1:	aad    0x29
  402cb3:	inc    edi
  402cb5:	fnstenv [esi+eax*1]
  402cb8:	(bad)  
  402cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cba:	(bad)  
  402cbb:	les    edx,FWORD PTR [edx]
  402cbd:	jp     0x402c67
  402cbf:	outs   dx,BYTE PTR ds:[esi]
  402cc0:	xchg   esp,eax
  402cc1:	sahf   
  402cc2:	scas   eax,DWORD PTR es:[edi]
  402cc3:	fst    DWORD PTR [edx-0x78]
  402cc6:	mov    ah,0xbd
  402cc8:	sar    cl,0x78
  402ccb:	test   eax,0x55108f7c
  402cd0:	xchg   ebp,eax
  402cd1:	fs dec edi
  402cd3:	add    ch,BYTE PTR [edi-0x64f21310]
  402cd9:	cmp    eax,0xcd93538e
  402cde:	test   dh,ch
  402ce0:	js     0x402c90
  402ce2:	sar    DWORD PTR [eax-0x3e],cl
  402ce5:	fimul  WORD PTR [eax]
  402ce7:	jge    0x402d56
  402ce9:	inc    eax
  402cea:	mov    ah,BYTE PTR ds:0x7f757d7
  402cf0:	les    edx,FWORD PTR [edx-0x13a11ab]
  402cf6:	inc    esi
  402cf7:	sbb    eax,0xb2ed0eb1
  402cfc:	fmul   QWORD PTR es:[ecx-0x44]
  402d00:	loop   0x402d26
  402d02:	or     DWORD PTR [eax-0x53fb9dc5],esp
  402d08:	arpl   WORD PTR [ecx+0x5bcdcdbc],bx
  402d0e:	addr16 push ds
  402d10:	xchg   al,bh
  402d12:	adc    ecx,edi
  402d14:	out    0x19,eax
  402d16:	or     BYTE PTR [edi],dl
  402d18:	xor    BYTE PTR [edi-0x44cb16c2],al
  402d1e:	fimul  DWORD PTR [ebp+edi*4-0x4e80b4aa]
  402d25:	sbb    eax,0x6514db62
  402d2a:	out    dx,al
  402d2b:	cwde   
  402d2c:	push   eax
  402d2d:	mov    dl,0xd7
  402d2f:	dec    esi
  402d30:	es jmp 0x3b061efa
  402d36:	pop    esi
  402d37:	jmp    0xb2e1:0x63280bfb
  402d3e:	xchg   edi,eax
  402d3f:	fwait
  402d40:	pop    ss
  402d41:	popa   
  402d42:	popf   
  402d43:	rcr    BYTE PTR [eax-0x416a0618],0x7f
  402d4a:	daa    
  402d4b:	push   edx
  402d4c:	or     dh,bh
  402d4e:	cdq    
  402d4f:	in     al,0x9f
  402d51:	cmp    DWORD PTR [edi],ebp
  402d53:	inc    ebx
  402d54:	data16 das 
  402d56:	bound  esi,QWORD PTR [edi+ecx*2]
  402d59:	pop    edi
  402d5a:	mov    edx,0x5d98d2b1
  402d5f:	addr16 sub eax,0xe8643c97
  402d65:	mov    ecx,0x3ad1f15
  402d6a:	jb     0x402d9c
  402d6c:	xchg   DWORD PTR [eax+0x406a4ccd],ebx
  402d72:	ret    0xa28d
  402d75:	outs   dx,DWORD PTR ds:[esi]
  402d76:	sub    DWORD PTR [ecx-0x6a],eax
  402d79:	add    DWORD PTR [edi+esi*2-0x1169806c],0x73be14c5
  402d84:	outs   dx,BYTE PTR ds:[esi]
  402d85:	cld    
  402d86:	(bad)  
  402d87:	pop    esi
  402d88:	sahf   
  402d89:	dec    esp
  402d8a:	mov    dl,0xec
  402d8c:	or     dh,dl
  402d8e:	push   ebx
  402d8f:	sti    
  402d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d91:	cs xchg ebp,eax
  402d93:	outs   dx,DWORD PTR ds:[esi]
  402d94:	add    dl,dh
  402d96:	jne    0x402e03
  402d98:	fs push esp
  402d9a:	adc    edx,esi
  402d9c:	call   0xd5ba:0xdd285757
  402da3:	xchg   ecx,eax
  402da4:	sub    DWORD PTR [edx-0x58],esi
  402da7:	nop
  402da8:	jecxz  0x402d9e
  402daa:	push   cs
  402dab:	pop    edi
  402dac:	adc    BYTE PTR [esi],dl
  402dae:	push   edx
  402daf:	out    dx,al
  402db0:	popa   
  402db1:	(bad)  
  402db2:	int    0xef
  402db4:	mov    cl,0xd
  402db6:	call   0xa5391db0
  402dbb:	mov    ch,0x83
  402dbd:	pushf  
  402dbe:	fild   WORD PTR [esi+0x3a]
  402dc1:	mov    esp,0xa1125acc
  402dc6:	es in  al,0xbe
  402dc9:	or     al,0x44
  402dcb:	ins    DWORD PTR es:[edi],dx
  402dcc:	mov    al,ds:0x6c1342eb
  402dd1:	test   DWORD PTR [ecx-0x38],0x5ea9bfb7
  402dd8:	pmaddwd mm5,QWORD PTR [ebp-0x15]
  402ddc:	xor    ch,BYTE PTR [ebp+0x7c7fde86]
  402de2:	cld    
  402de3:	(bad)  
  402de4:	dec    edx
  402de5:	jmp    0xc324:0x63a16d07
  402dec:	gs je  0x402d7f
  402def:	ret    
  402df0:	call   0x2bdb:0x47713eb9
  402df7:	mov    ds:0xc05a3f23,al
  402dfc:	jecxz  0x402e45
  402dfe:	and    ecx,DWORD PTR [edx]
  402e00:	cs inc ebp
  402e02:	and    al,0x93
  402e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e05:	xchg   ebp,eax
  402e06:	dec    eax
  402e07:	inc    ebx
  402e09:	sahf   
  402e0a:	stos   BYTE PTR es:[edi],al
  402e0b:	jns    0x402e70
  402e0d:	cld    
  402e0e:	fdivr  DWORD PTR [ebp+0x48]
  402e11:	arpl   WORD PTR [edi-0x5],cx
  402e14:	rol    BYTE PTR [ebp+esi*8-0x1740f468],cl
  402e1b:	(bad)  
  402e1c:	int3   
  402e1d:	and    BYTE PTR [eax],bl
  402e1f:	and    cl,BYTE PTR [esi]
  402e21:	jne    0x402dc6
  402e23:	cs xor eax,0x88813ea6
  402e29:	(bad)  
  402e2a:	jmp    0x2822:0x45c12df0
  402e31:	div    DWORD PTR [esi+0xfb5d00a]
  402e37:	scas   al,BYTE PTR es:[edi]
  402e38:	retf   0xbbdf
  402e3b:	and    eax,0x576596f9
  402e40:	mov    edx,0xdb28dbcc
  402e45:	pusha  
  402e46:	das    
  402e47:	enter  0x7b7c,0x99
  402e4b:	mov    cl,BYTE PTR ds:0xe819569a
  402e51:	push   ss
  402e52:	adc    BYTE PTR [edx-0x6134ebf5],bl
  402e58:	bound  eax,QWORD PTR [edi+0xd17598c]
  402e5e:	push   0x855e00b7
  402e63:	sar    BYTE PTR [ebx+0x76],0x9c
  402e67:	sbb    ecx,DWORD PTR ds:0x58b69445
  402e6d:	sbb    al,0xb0
  402e6f:	gs mov edx,0xc56dcf8a
  402e75:	jns    0x402ee3
  402e77:	stos   BYTE PTR es:[edi],al
  402e78:	xchg   esp,eax
  402e79:	pop    ebp
  402e7a:	in     eax,dx
  402e7b:	sti    
  402e7c:	mov    ch,0x9b
  402e7e:	dec    eax
  402e7f:	xchg   ebx,eax
  402e80:	int    0x52
  402e82:	dec    esp
  402e83:	cmp    BYTE PTR [esi-0x8],0x47
  402e87:	shl    ecx,1
  402e89:	and    BYTE PTR [ecx],0x28
  402e8c:	push   edi
  402e8d:	ret    
  402e8e:	mov    dh,0xfa
  402e90:	(bad)  [ebp*1+0x7c4e3971]
  402e97:	xchg   edi,eax
  402e98:	retf   
  402e99:	dec    ebp
  402e9a:	xchg   edi,eax
  402e9b:	ficom  DWORD PTR [eax]
  402e9d:	dec    edi
  402e9e:	int    0xc2
  402ea0:	dec    ecx
  402ea1:	or     eax,0x9a5e1f14
  402ea6:	sbb    DWORD PTR [ebx],0x993a3118
  402eac:	sbb    al,0x62
  402eae:	push   0x6639bb4e
  402eb3:	mul    BYTE PTR [esi-0xd072526]
  402eb9:	stc    
  402eba:	mov    ds:0x6767da3a,eax
  402ebf:	inc    ecx
  402ec0:	sahf   
  402ec1:	les    ecx,FWORD PTR [eax]
  402ec3:	mov    WORD PTR [ecx+0x2f],gs
  402ec6:	push   esi
  402ec7:	imul   DWORD PTR [esi-0x68c0807a]
  402ecd:	(bad)  
  402ece:	add    DWORD PTR [esp+eax*4+0x380939fb],0xfffffff3
  402ed6:	ja     0x402e5f
  402ed8:	and    BYTE PTR [esi+0x69],bh
  402edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402edc:	mov    dl,BYTE PTR [esi]
  402ede:	sub    eax,0x7f3b0630
  402ee3:	add    DWORD PTR [edi-0x68198b45],esp
  402ee9:	sub    BYTE PTR ds:0x27e0b823,ah
  402eef:	nop
  402ef0:	mov    eax,ds:0x37f0e146
  402ef5:	and    eax,0x84a4c413
  402efa:	push   0xffffffbc
  402efc:	pop    edi
  402efd:	bound  ecx,QWORD PTR [edx+0x2b8d47d1]
  402f03:	sbb    cl,BYTE PTR [ecx-0x45]
  402f06:	adc    al,0xb9
  402f08:	in     eax,dx
  402f09:	fild   QWORD PTR [edx]
  402f0b:	mul    DWORD PTR [edi]
  402f0d:	mov    ecx,0x70853424
  402f12:	push   ss
  402f13:	call   0x67076e6
  402f18:	add    BYTE PTR [edx+0x26],ch
  402f1b:	inc    ebx
  402f1c:	xor    BYTE PTR [esi],dl
  402f1e:	pop    esp
  402f1f:	scas   eax,DWORD PTR es:[edi]
  402f20:	xchg   esp,eax
  402f21:	jns    0x402f3b
  402f23:	(bad)  
  402f24:	out    0xed,al
  402f26:	data16 cli 
  402f28:	call   0x851e:0x56cbd6e4
  402f2f:	fdiv   QWORD PTR [ecx-0x61c1a894]
  402f35:	fbstp  TBYTE PTR [edi-0x1bb6ca11]
  402f3b:	sbb    BYTE PTR [ecx+ebp*8+0x3c8a09e7],dh
  402f42:	mov    ah,0xd8
  402f44:	jns    0x402f85
  402f46:	push   ds
  402f47:	mov    al,ds:0xad986f7d
  402f4c:	dec    esi
  402f4d:	sub    al,0xe4
  402f4f:	nop
  402f50:	push   esi
  402f51:	inc    eax
  402f52:	(bad)  
  402f54:	inc    edx
  402f55:	jno    0x402fbf
  402f57:	xchg   DWORD PTR [ebx+0x71],ebx
  402f5a:	das    
  402f5b:	mov    esi,0xc8f3edb1
  402f60:	inc    esp
  402f61:	pop    ecx
  402f62:	xchg   edi,eax
  402f63:	fidivr DWORD PTR [esi+0x78]
  402f66:	mov    eax,0x599ce600
  402f6b:	mov    ebx,0x5cd9324
  402f70:	xor    al,0x6b
  402f72:	call   0x8f359036
  402f77:	inc    esp
  402f78:	out    dx,al
  402f79:	jge    0x402ff0
  402f7b:	add    al,0xb
  402f7d:	test   BYTE PTR [ecx-0x326ae85f],dl
  402f83:	mov    eax,ds:0x19db6905
  402f88:	add    BYTE PTR [esi+edx*4+0x63],ah
  402f8c:	fstp   TBYTE PTR [eax+0x51]
  402f8f:	retf   0xd28b
  402f92:	sti    
  402f93:	mov    esi,0xd2f8defa
  402f98:	push   edx
  402f99:	xor    dl,BYTE PTR [ebp+0x2efcfb04]
  402f9f:	mov    edx,0x5119c034
  402fa4:	dec    ebx
  402fa5:	enter  0x364a,0xa0
  402fa9:	sbb    DWORD PTR fs:[ecx+esi*8+0x46],0x5b
  402faf:	cwde   
  402fb0:	test   al,0xc7
  402fb2:	push   0x7bbb03e9
  402fb7:	inc    edx
  402fb8:	adc    ch,BYTE PTR [edx+edx*2+0x640567a8]
  402fbf:	lock arpl WORD PTR [edi],ax
  402fc2:	sub    BYTE PTR [edx+0x18],ch
  402fc5:	sub    DWORD PTR [ebx],esp
  402fc7:	pop    edx
  402fc8:	outs   dx,BYTE PTR ds:[esi]
  402fc9:	test   eax,0x8625e055
  402fce:	dec    ecx
  402fcf:	bound  ecx,QWORD PTR [ecx+0x59]
  402fd2:	sbb    edx,DWORD PTR [eax]
  402fd4:	pusha  
  402fd5:	push   cs
  402fd6:	pop    ebx
  402fd7:	xor    ebx,DWORD PTR [edi+ebx*8+0x56c3fb9e]
  402fde:	and    DWORD PTR [ecx],0xcf32cee5
  402fe4:	sub    esi,DWORD PTR [edx+edx*2-0x5e22b9c6]
  402feb:	inc    ebx
  402fec:	mov    ds:0x9a8cbac4,al
  402ff1:	hlt    
  402ff2:	mov    dh,0x2a
  402ff4:	inc    edi
  402ff5:	pop    ecx
  402ff6:	adc    al,0xbf
  402ff8:	mov    eax,ds:0xbc79d55b
  402ffd:	xchg   ebp,eax
  402ffe:	cmc    
  402fff:	ja     0x402fb8
  403001:	clc    
  403002:	stos   DWORD PTR es:[edi],eax
  403003:	shl    DWORD PTR [edi],1
  403005:	dec    ebx
  403006:	xlat   BYTE PTR ds:[ebx]
  403007:	hlt    
  403008:	retf   
  403009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40300a:	push   ebp
  40300b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40300c:	out    0x3,al
  40300e:	cmc    
  40300f:	retf   
  403010:	dec    edi
  403011:	int3   
  403012:	adc    DWORD PTR [edi+ebx*2],edx
  403015:	aad    0xa6
  403017:	bound  ebp,QWORD PTR [edx]
  403019:	jmp    0x402fa6
  40301b:	sbb    al,0xa6
  40301d:	adc    al,0x88
  40301f:	xchg   edi,eax
  403020:	or     al,0x8b
  403022:	or     BYTE PTR ds:0x345e925d,ch
  403028:	xor    esi,ebp
  40302a:	mov    DWORD PTR [ebx-0x2e8bac34],eax
  403030:	mov    ecx,0x3e649ac
  403035:	mov    ch,0xe2
  403037:	adc    DWORD PTR [edi+0x2db2f28b],ebp
  40303d:	push   edi
  40303e:	neg    ebx
  403040:	ret    
  403041:	jnp    0x403095
  403043:	inc    esp
  403044:	in     al,dx
  403045:	dec    esi
  403046:	mov    ds:0xf5cf35a,al
  40304b:	pop    edi
  40304c:	in     al,0xac
  40304e:	cmp    al,0xf2
  403051:	into   
  403052:	arpl   WORD PTR [ecx],bx
  403054:	adc    al,0x6a
  403056:	dec    eax
  403057:	sub    BYTE PTR [ebx-0x6168f9ff],bh
  40305d:	push   ss
  40305e:	call   0x36fe:0xf966f49e
  403065:	std    
  403066:	mov    eax,ds:0xc6e081b9
  40306b:	cmp    eax,0x5d1f4152
  403070:	icebp  
  403071:	call   FWORD PTR [eax]
  403073:	dec    eax
  403074:	lahf   
  403075:	push   esp
  403076:	sub    al,0xe9
  403078:	fwait
  403079:	push   eax
  40307a:	outs   dx,BYTE PTR ds:[esi]
  40307b:	xchg   edi,eax
  40307c:	(bad)  
  40307d:	pop    ss
  40307e:	or     ecx,esp
  403080:	jns    0x4030ad
  403082:	repz pop ds
  403084:	pop    ebx
  403085:	pushf  
  403086:	pop    esi
  403087:	mov    ecx,0x19308c62
  40308c:	shr    DWORD PTR [esi],1
  40308e:	mov    eax,0x6ed5a974
  403093:	and    eax,DWORD PTR [edx]
  403095:	ror    DWORD PTR [ebx],cl
  403097:	out    dx,al
  403098:	fistp  QWORD PTR [edx+ebp*4]
  40309b:	mov    al,0x24
  40309d:	cmp    ecx,DWORD PTR [ecx+0x5bcfc995]
  4030a3:	jg     0x40306d
  4030a5:	or     al,0x35
  4030a7:	pop    ss
  4030a8:	jo     0x40304d
  4030aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030ab:	adc    DWORD PTR [ebx-0x7e],0x4c
  4030af:	xor    al,BYTE PTR [esi-0x42215294]
  4030b5:	mov    esi,0x838057fe
  4030ba:	jnp    0x403136
  4030bc:	imul   eax,ebx,0x24
  4030bf:	js     0x403085
  4030c1:	sub    DWORD PTR [esi+0x42],ebx
  4030c4:	mov    bl,0xc5
  4030c6:	out    dx,eax
  4030c7:	ror    DWORD PTR [edx],1
  4030c9:	jo     0x4030eb
  4030cb:	(bad)  [esi]
  4030cd:	push   edx
  4030ce:	push   es
  4030cf:	(bad)
  4030d2:	cmp    al,0xba
  4030d4:	add    al,0x1d
  4030d6:	add    al,0xbf
  4030d8:	jmp    0x40312c
  4030da:	push   eax
  4030db:	ja     0x403116
  4030dd:	mov    ds:0x7c8e8533,eax
  4030e2:	sub    ecx,DWORD PTR [edi]
  4030e4:	jne    0x40310b
  4030e6:	mov    al,ds:0xba91a31c
  4030eb:	xor    dh,BYTE PTR [ecx-0x4a]
  4030ee:	aam    0x34
  4030f0:	lahf   
  4030f1:	jbe    0x4030a9
  4030f3:	fcomp  DWORD PTR [ebx]
  4030f5:	daa    
  4030f6:	imul   edx,DWORD PTR [ebp+0x3d],0x8cea5ffd
  4030fd:	es push 0x604b9b63
  403103:	sbb    dl,BYTE PTR [ebp+0x5a5847df]
  403109:	push   eax
  40310a:	jno    0x403186
  40310c:	aad    0x15
  40310e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40310f:	shr    BYTE PTR [ebx],1
  403111:	xchg   BYTE PTR [esi+0x20],bh
  403114:	or     eax,0x90834fec
  403119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40311a:	pop    ss
  40311b:	sbb    BYTE PTR [edx+0x77],0xa2
  40311f:	cli    
  403120:	xchg   edi,eax
  403121:	cwde   
  403122:	popa   
  403123:	xchg   esi,eax
  403124:	dec    edi
  403125:	sub    al,0xf2
  403127:	pop    ds
  403128:	mov    ecx,0x2398d135
  40312d:	aam    0x54
  40312f:	out    dx,al
  403130:	ret    
  403131:	push   es
  403132:	sbb    esi,esp
  403134:	push   esp
  403135:	retf   
  403136:	hlt    
  403137:	adc    eax,0xc9fef3b
  40313c:	cs mov dl,0x15
  40313f:	xor    dh,ah
  403141:	xlat   BYTE PTR ds:[ebx]
  403142:	inc    esi
  403143:	loopne 0x4031ba
  403145:	add    al,ah
  403147:	jge    0x40316e
  403149:	jl     0x4030f1
  40314b:	mov    ebx,0x501691fc
  403150:	cmp    BYTE PTR [edx-0x38b5c58e],bl
  403156:	inc    esp
  403157:	mov    ebp,0xcce885b6
  40315c:	fdiv   QWORD PTR [eax+0x33]
  40315f:	mov    ?,WORD PTR [ecx-0x39]
  403162:	mov    esp,0x93bcc1ce
  403167:	xchg   esi,eax
  403168:	pop    edx
  403169:	enter  0x8afc,0xe1
  40316d:	mov    ecx,0x676516f9
  403172:	mov    esp,0xeda16f05
  403177:	xor    BYTE PTR [edi+0x63c3665a],ch
  40317d:	clc    
  40317e:	or     ah,cl
  403180:	jnp    0x4031f9
  403182:	dec    esp
  403183:	ret    
  403184:	test   dl,bl
  403186:	into   
  403187:	cwde   
  403188:	mov    DWORD PTR [esi],esp
  40318a:	or     esi,ebx
  40318c:	sub    bl,al
  40318e:	pushf  
  40318f:	and    ebp,DWORD PTR [esi+eiz*2-0x5ce0bb26]
  403196:	xor    DWORD PTR [edx+0x75],0x34
  40319a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40319b:	sub    dh,BYTE PTR [ecx-0x4d]
  40319e:	ret    
  40319f:	cdq    
  4031a0:	mov    ds,WORD PTR [edx+0xe]
  4031a3:	sbb    al,0x39
  4031a5:	addr16 mov eax,ds:0x1c7d
  4031a9:	push   ds
  4031aa:	xchg   edx,eax
  4031ab:	loopne 0x4031df
  4031ad:	pop    edi
  4031ae:	out    dx,al
  4031af:	mov    ebx,0x703e9027
  4031b4:	dec    esp
  4031b5:	push   ebp
  4031b6:	jle    0x4031ea
  4031b8:	pop    esi
  4031b9:	mov    eax,0xd378b9d2
  4031be:	fadd   DWORD PTR [ecx-0x30]
  4031c1:	inc    edx
  4031c2:	scas   al,BYTE PTR es:[edi]
  4031c3:	ja     0x403220
  4031c5:	outs   dx,DWORD PTR ds:[esi]
  4031c6:	in     al,dx
  4031c7:	pop    ebx
  4031c8:	xchg   esi,eax
  4031c9:	xchg   esp,eax
  4031ca:	scas   eax,DWORD PTR es:[edi]
  4031cb:	sti    
  4031cc:	adc    DWORD PTR [ecx],edi
  4031ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031cf:	sbb    DWORD PTR [ecx-0x4d],esp
  4031d2:	std    
  4031d3:	jns    0x403228
  4031d5:	pop    es
  4031d6:	ins    DWORD PTR es:[edi],dx
  4031d7:	dec    esi
  4031d8:	sub    eax,0x12f250cd
  4031dd:	jp     0x40318e
  4031df:	cwde   
  4031e0:	xchg   ebp,eax
  4031e1:	mov    dh,0xfc
  4031e3:	and    al,0xa3
  4031e5:	sbb    edi,DWORD PTR [si]
  4031e8:	sbb    ch,BYTE PTR [esi+0x7b61080a]
  4031ee:	cmp    ebx,DWORD PTR [edi+0x39]
  4031f1:	sbb    ch,BYTE PTR [esi+0x1ca8ce2]
  4031f7:	dec    edi
  4031f8:	iret   
  4031f9:	nop
  4031fa:	jmp    0x40319f
  4031fc:	lds    ebp,FWORD PTR [ecx+eax*2-0x5e]
  403200:	xor    esi,eax
  403202:	leave  
  403203:	adc    al,0x7
  403205:	pop    edi
  403206:	mov    dh,0xa4
  403208:	inc    esp
  403209:	mov    ch,bl
  40320b:	sub    eax,0xa46fb934
  403210:	xchg   DWORD PTR [eax+0x29da3aec],ebp
  403216:	mov    esi,0x92f70df8
  40321b:	enter  0x6122,0xab
  40321f:	and    al,0x21
  403221:	lahf   
  403222:	outs   dx,BYTE PTR ds:[esi]
  403223:	sbb    cl,bl
  403225:	das    
  403226:	cld    
  403227:	jo     0x403241
  403229:	pop    ebx
  40322a:	jle    0x4031f6
  40322c:	or     DWORD PTR [esi],0xffffffb2
  40322f:	sar    DWORD PTR ds:0x5eac543e,0xe2
  403236:	adc    ah,dl
  403238:	cmp    ecx,DWORD PTR [edi+0x15c62ba6]
  40323e:	scas   eax,DWORD PTR es:[edi]
  40323f:	js     0x4031fb
  403241:	mov    edx,0x2cd3f841
  403246:	stos   BYTE PTR es:[edi],al
  403247:	inc    ebp
  403248:	popf   
  403249:	pop    eax
  40324a:	xor    edx,ecx
  40324c:	int    0x77
  40324e:	cmp    cl,ch
  403250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403251:	(bad)  
  403252:	into   
  403253:	adc    eax,0xa33744ea
  403258:	int    0x9f
  40325a:	jne    0x40321e
  40325c:	call   0x6da788eb
  403261:	call   0xbcf19eca
  403266:	xchg   esp,eax
  403267:	shr    BYTE PTR [ebp+0x37],1
  40326a:	retf   
  40326b:	mov    bh,0x43
  40326d:	dec    esp
  40326e:	sbb    eax,0x397d5f2c
  403273:	lea    ebx,[edx]
  403275:	and    edi,edi
  403277:	ss pusha 
  403279:	xchg   esi,eax
  40327a:	ror    BYTE PTR [edi],cl
  40327c:	retf   
  40327d:	jb     0x403278
  40327f:	into   
  403280:	pop    ecx
  403281:	outs   dx,DWORD PTR ds:[esi]
  403282:	aam    0xbf
  403284:	in     al,0x84
  403286:	jno    0x403251
  403288:	jmp    0x6a25:0x30ca86b4
  40328f:	icebp  
  403290:	and    esp,DWORD PTR [ecx-0xe]
  403293:	mov    ds:0x8fde95e1,eax
  403298:	shl    DWORD PTR [edx],cl
  40329a:	stos   DWORD PTR es:[edi],eax
  40329b:	mov    al,0x38
  40329d:	cmp    cl,BYTE PTR [edi-0x575cb0a8]
  4032a3:	pop    edi
  4032a4:	nop
  4032a5:	loopne 0x403254
  4032a7:	push   cs
  4032a8:	cdq    
  4032a9:	jecxz  0x403241
  4032ab:	dec    ebp
  4032ac:	popa   
  4032ad:	gs es dec ebp
  4032b0:	fsubr  DWORD PTR [edx+0x96e3f30]
  4032b6:	fsubr  DWORD PTR [eax+0x746d77e5]
  4032bc:	ins    BYTE PTR es:[edi],dx
  4032bd:	sub    DWORD PTR [esp],0x848e9faf
  4032c4:	sub    DWORD PTR [ebp+edx*2+0x48],edi
  4032c8:	push   0x4067e89d
  4032cd:	pop    ecx
  4032ce:	mov    esp,0xe08ffa41
  4032d3:	inc    edi
  4032d4:	sbb    DWORD PTR ds:0xb734640f,ecx
  4032da:	push   esp
  4032db:	shl    DWORD PTR ds:0x47605970,0x0
  4032e2:	js     0x4032ef
  4032e4:	imul   ecx,edx,0xffffffa6
  4032e7:	adc    esp,DWORD PTR [edi+0x7e]
  4032ea:	cmp    al,0x12
  4032ec:	push   eax
  4032ed:	cwde   
  4032ee:	jnp    0x40330d
  4032f0:	test   eax,0xb509a842
  4032f5:	popa   
  4032f6:	in     eax,dx
  4032f7:	mov    bl,BYTE PTR [ecx]
  4032f9:	xchg   DWORD PTR [eax],ebx
  4032fb:	lahf   
  4032fc:	je     0x40328b
  4032fe:	mov    ah,0xb3
  403300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403301:	out    dx,eax
  403302:	and    BYTE PTR [ebx+0x62],0x59
  403306:	cmp    DWORD PTR [edx-0x3f],eax
  403309:	jmp    0x2225:0x5ed9d04d
  403310:	out    dx,eax
  403311:	ins    DWORD PTR es:[edi],dx
  403312:	stc    
  403313:	mov    DWORD PTR [edi+0x40644952],ebx
  403319:	pusha  
  40331a:	cli    
  40331b:	in     eax,dx
  40331c:	repz ss shl dl,1
  403320:	xchg   esi,eax
  403321:	mov    esp,ebp
  403323:	cmp    DWORD PTR [ebp-0x7ccbf83b],0x3e72be0d
  40332d:	mov    ecx,0x2c33417
  403332:	add    BYTE PTR [esi+0x7f],bh
  403335:	pop    ecx
  403336:	bound  ebp,QWORD PTR [ebp+0x291d7e7]
  40333c:	mov    DWORD PTR [ecx+0x6c1aa0cd],ecx
  403342:	xlat   BYTE PTR ds:[ebx]
  403343:	leave  
  403344:	and    DWORD PTR [eax-0x42],ebp
  403347:	arpl   di,si
  403349:	enter  0x83ee,0x86
  40334d:	inc    eax
  40334e:	mov    al,ds:0xbf56f68f
  403354:	xor    al,0x5f
  403356:	or     BYTE PTR [ebp+edi*1-0x4c791f56],cl
  40335d:	outs   dx,DWORD PTR ds:[esi]
  40335e:	push   esi
  40335f:	scas   eax,DWORD PTR es:[edi]
  403360:	out    0xe3,eax
  403362:	outs   dx,DWORD PTR ds:[esi]
  403363:	inc    esp
  403364:	xchg   esi,eax
  403365:	sbb    ecx,DWORD PTR [esi+0x62]
  403368:	xor    BYTE PTR [ebx-0x5b958e2d],al
  40336e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40336f:	xchg   esp,eax
  403370:	in     al,0x78
  403372:	xchg   BYTE PTR ds:0x1ee27d26,al
  403378:	mov    ds:0xdaddb57f,al
  40337d:	mov    edi,0xb4206f15
  403382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403383:	dec    edi
  403384:	imul   ebp,DWORD PTR [edx+0x6a2dd7dd],0xfffffff7
  40338b:	outs   dx,BYTE PTR ds:[esi]
  40338c:	pop    esi
  40338d:	clc    
  40338e:	push   0xcb8ba84a
  403393:	ds inc esi
  403395:	sahf   
  403396:	in     al,0x72
  403398:	or     bl,BYTE PTR [edi-0x33]
  40339b:	shl    DWORD PTR [ecx],1
  40339d:	cmp    al,0x28
  40339f:	dec    ecx
  4033a0:	push   edi
  4033a1:	frstor [ecx-0x1f]
  4033a4:	mov    ecx,0x8bb432cf
  4033a9:	add    al,0xa1
  4033ab:	xchg   ebx,eax
  4033ac:	push   eax
  4033ad:	inc    eax
  4033ae:	add    bl,bh
  4033b0:	mov    eax,ds:0x7f2ca170
  4033b5:	test   edi,ebx
  4033b7:	pop    ds
  4033b8:	xchg   BYTE PTR [eax+0x68e27dc3],dl
  4033be:	(bad)  
  4033bf:	push   edi
  4033c0:	shr    cl,0x2c
  4033c3:	jle    0x40334d
  4033c5:	sbb    DWORD PTR ds:0xa94adf5c,0x1fdcca1
  4033cf:	imul   esi,DWORD PTR [ebx+eax*4-0x19bc3b46],0xffffffe3
  4033d7:	and    eax,0xab323580
  4033dc:	inc    ebp
  4033dd:	arpl   WORD PTR [esi],di
  4033df:	shl    DWORD PTR [edx-0x1d],cl
  4033e2:	out    0x61,eax
  4033e4:	fs sub esi,0xa044985
  4033eb:	aas    
  4033ec:	out    0x5,eax
  4033ee:	push   es
  4033ef:	lods   al,BYTE PTR ds:[esi]
  4033f0:	xchg   esp,eax
  4033f1:	inc    ebx
  4033f2:	test   bl,ah
  4033f4:	dec    edx
  4033f5:	test   BYTE PTR [ecx],al
  4033f7:	jo     0x4033dd
  4033f9:	pushf  
  4033fa:	dec    esp
  4033fb:	gs push ecx
  4033fd:	lahf   
  4033fe:	push   0x7706a298
  403403:	push   ecx
  403404:	push   esi
  403405:	cmp    DWORD PTR [ebp+0x2e464040],ecx
  40340b:	push   cs
  40340c:	pop    ss
  40340d:	lods   al,BYTE PTR ds:[esi]
  40340e:	pslld  mm7,QWORD PTR [ebp+0x26dad594]
  403415:	(bad)  [eax-0xadc8a3a]
  40341b:	add    ch,BYTE PTR [esi]
  40341d:	mov    ch,BYTE PTR [esi-0x6a]
  403420:	pushf  
  403421:	mov    bl,0x84
  403423:	in     ax,0x41
  403426:	mov    dl,0xfc
  403428:	ror    BYTE PTR [ebx],0x6c
  40342b:	fidivr DWORD PTR [esi-0x6e1d3e89]
  403431:	pop    ebp
  403432:	jecxz  0x403465
  403434:	adc    DWORD PTR [edx-0x5af372aa],edx
  40343a:	nop
  40343b:	jecxz  0x403472
  40343d:	jmp    0x5ba6:0x612ce8f3
  403444:	mov    ebp,0xdcbaa127
  403449:	inc    DWORD PTR [ecx-0x62]
  40344c:	mov    dl,0xe1
  40344e:	cli    
  40344f:	pop    ebp
  403450:	loopne 0x40349a
  403452:	pop    eax
  403453:	dec    edx
  403454:	(bad)  
  403455:	ss int3 
  403457:	mov    fs,WORD PTR [ebp-0x68afe31a]
  40345d:	xchg   BYTE PTR [eax],ch
  40345f:	aad    0xa3
  403461:	data16 daa 
  403463:	test   BYTE PTR [bx+0x7370],al
  403468:	or     edx,DWORD PTR [ebx]
  40346a:	or     DWORD PTR [esi],esp
  40346c:	mov    ch,0x18
  40346e:	stc    
  40346f:	iret   
  403470:	data16 or al,0x3a
  403473:	jns    0x40347f
  403475:	psrlw  mm1,QWORD PTR [eax]
  403478:	aas    
  403479:	ins    BYTE PTR es:[edi],dx
  40347a:	xchg   DWORD PTR [ecx+esi*4],esp
  40347d:	shr    bl,0x34
  403480:	pop    ebp
  403481:	ss adc eax,0xcad3232a
  403487:	and    eax,0xae636582
  40348c:	xchg   BYTE PTR [edx-0x33],ch
  40348f:	xchg   esi,eax
  403490:	lds    edx,FWORD PTR [eax+0x3a]
  403493:	outs   dx,DWORD PTR ds:[esi]
  403494:	sbb    eax,0x66d14dc0
  403499:	and    ebx,DWORD PTR [eax]
  40349b:	retf   
  40349c:	fadd   QWORD PTR [edi]
  40349e:	sbb    DWORD PTR [eax-0x13],esi
  4034a1:	and    DWORD PTR [ebx-0x439c1381],edx
  4034a7:	mov    ds:0xd94e38ff,eax
  4034ac:	jo     0x403473
  4034ae:	jmp    0xaa8b1b71
  4034b3:	xchg   esp,eax
  4034b4:	xchg   esi,eax
  4034b5:	or     ebp,ecx
  4034b7:	(bad)  
  4034b8:	es push cs
  4034ba:	fwait
  4034bb:	mov    es:0xf8b0f0d0,eax
  4034c1:	mov    ds:0x49e33f7e,eax
  4034c6:	dec    BYTE PTR [esp+eiz*2+0x18d3ea93]
  4034cd:	fmul   QWORD PTR [esi-0x627bdc35]
  4034d3:	cld    
  4034d4:	hlt    
  4034d5:	or     al,0x19
  4034d7:	push   0xfffffff1
  4034d9:	xor    al,0xa0
  4034db:	js     0x403510
  4034dd:	mov    WORD PTR [esi+0x54],gs
  4034e0:	lds    esi,FWORD PTR [eax]
  4034e2:	xchg   edi,ebx
  4034e4:	mov    al,0xeb
  4034e6:	adc    al,0xee
  4034e8:	mul    DWORD PTR [ebx+0x39]
  4034eb:	out    dx,al
  4034ec:	inc    esp
  4034ed:	or     BYTE PTR [ebx-0x2adfdbbe],bl
  4034f3:	fsubp  st(6),st
  4034f5:	rcr    BYTE PTR [ebx],1
  4034f7:	fistp  WORD PTR [esi+0x58]
  4034fa:	add    al,0x64
  4034fc:	dec    ebp
  4034fd:	mov    dl,BYTE PTR [edi+eax*4]
  403500:	(bad)
  403503:	ret    0x5daf
  403506:	inc    esi
  403507:	call   0x88412e73
  40350c:	ss xchg bx,ax
  40350f:	and    dh,BYTE PTR [ebp-0x3703c59f]
  403515:	mov    cl,0x7c
  403517:	(bad)  [ecx]
  403519:	jb     0x40358c
  40351b:	cmp    bh,BYTE PTR [ecx-0x4c99b2b3]
  403521:	aam    0x14
  403523:	arpl   dx,bx
  403525:	es loop 0x40353c
  403528:	aam    0x9a
  40352a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40352b:	lods   al,BYTE PTR ds:[esi]
  40352c:	adc    BYTE PTR ds:0xd6e825db,dl
  403532:	imul   ebp,DWORD PTR [esi+0x7555ff84],0xef1a65e3
  40353c:	mov    cl,0x3d
  40353e:	xlat   BYTE PTR ds:[ebx]
  40353f:	daa    
  403540:	arpl   WORD PTR [eax-0x32f7a22e],dx
  403546:	jg     0x403560
  403548:	ins    BYTE PTR es:[edi],dx
  403549:	mov    esp,0x77f4b495
  40354e:	outs   dx,BYTE PTR ds:[esi]
  40354f:	mov    edx,0x9360d0c3
  403554:	push   es
  403555:	push   esi
  403556:	mov    WORD PTR [edx+0x197cbee7],?
  40355c:	repz sub eax,0x829a0aa
  403562:	sub    DWORD PTR [ebx],eax
  403564:	ror    DWORD PTR [ebx+0x150d6efe],1
  40356a:	das    
  40356b:	das    
  40356c:	imul   edx,DWORD PTR [eax-0x109e084f],0xffffffd4
  403573:	add    al,0x11
  403575:	(bad)  
  403576:	leave  
  403577:	shr    DWORD PTR ds:[edi+0xc747e92],0xdd
  40357f:	adc    edx,esp
  403581:	shl    DWORD PTR [edx+0x52],0xfa
  403585:	dec    ecx
  403586:	mov    bl,0xab
  403588:	pop    es
  403589:	iret   
  40358a:	fwait
  40358b:	jecxz  0x4035f6
  40358d:	outs   dx,BYTE PTR ds:[esi]
  40358e:	add    DWORD PTR [ebx],ebp
  403590:	mov    eax,ds:0xf981bd27
  403595:	cmp    eax,0xd1fc60c8
  40359a:	push   ecx
  40359b:	pop    ebp
  40359c:	sub    BYTE PTR [eax-0x87329e3],ch
  4035a2:	push   esi
  4035a3:	mov    ecx,0x2fd4db43
  4035a8:	aam    0xa6
  4035aa:	(bad)
  4035ad:	imul   esi,DWORD PTR fs:[ecx+ebp*2],0xffffffdd
  4035b2:	outs   dx,BYTE PTR ds:[esi]
  4035b3:	add    DWORD PTR [eax],ecx
  4035b5:	sbb    bh,BYTE PTR [eax+eiz*4+0x43167bfb]
  4035bc:	dec    esp
  4035bd:	pmaddwd mm3,QWORD PTR ss:[ecx+0x78115ee2]
  4035c5:	add    dl,BYTE PTR [ecx-0x31]
  4035c8:	fcomp  DWORD PTR [edx+0x4]
  4035cb:	fldcw  WORD PTR [edx-0x5b]
  4035ce:	pop    es
  4035cf:	adc    eax,0x2f00295
  4035d4:	aam    0xe
  4035d6:	xor    eax,ebp
  4035d8:	popf   
  4035d9:	in     al,0x73
  4035db:	pop    ss
  4035dc:	jmp    0x4035e2
  4035de:	lods   al,BYTE PTR ds:[esi]
  4035df:	add    al,0x6b
  4035e1:	imul   ecx,eax,0x212202ae
  4035e7:	in     eax,0x45
  4035e9:	or     DWORD PTR [edx+0x4],ecx
  4035ec:	mov    al,0xd4
  4035ee:	ret    0xae06
  4035f1:	lods   eax,DWORD PTR ds:[esi]
  4035f2:	ins    BYTE PTR es:[edi],dx
  4035f3:	shr    DWORD PTR [esi+0x14],0xf2
  4035f7:	aad    0x35
  4035f9:	cmp    eax,DWORD PTR [bx+di]
  4035fc:	fadd   QWORD PTR [edi+eax*4]
  4035ff:	mov    eax,0xc17770f5
  403604:	jae    0x4035c9
  403606:	jmp    0xa2f43b4d
  40360b:	ret    0xc3db
  40360e:	push   0x35
  403610:	shr    DWORD PTR [ebp+0x3192b2d0],cl
  403616:	jle    0x40360e
  403618:	mov    edi,DWORD PTR [ecx+0x19]
  40361b:	ja     0x40364b
  40361d:	xor    BYTE PTR [ebx],0xde
  403620:	call   FWORD PTR [edx-0xd]
  403623:	and    eax,0xb8e38907
  403628:	out    0xb7,al
  40362a:	call   FWORD PTR [esi-0x3c172268]
  403630:	pop    esi
  403631:	sbb    DWORD PTR [ebx],0xd0253a77
  403637:	ret    0x647
  40363a:	cwde   
  40363b:	cmp    al,0x21
  40363d:	imul   ecx,DWORD PTR ss:[ebx-0x6c],0xffffffa8
  403642:	inc    DWORD PTR [edx+0x77]
  403645:	push   0xe5c4e600
  40364a:	xchg   ebx,eax
  40364b:	mov    ebx,0xc2000619
  403650:	gs out dx,eax
  403652:	xor    edx,ebx
  403654:	gs inc ebx
  403656:	inc    esi
  403657:	pop    ds
  403658:	cdq    
  403659:	inc    edx
  40365a:	rcl    BYTE PTR [eax-0xa],0x14
  40365e:	mov    WORD PTR [edi],es
  403660:	cmp    al,0x8c
  403662:	mov    edi,0x833b7202
  403667:	mov    BYTE PTR ss:[edi],cl
  40366a:	mov    DWORD PTR [edx+0x22],ebp
  40366d:	ret    0x74d9
  403670:	mov    esp,0x3e972cc5
  403675:	mov    al,0x3c
  403677:	mov    ch,0x2a
  403679:	push   ebp
  40367a:	popa   
  40367b:	retf   0xc849
  40367e:	or     eax,0x8a4af46c
  403683:	imul   ecx,esi,0xa7335aaa
  403689:	sbb    BYTE PTR [ebx],bl
  40368b:	sbb    eax,DWORD PTR [eax+0x24670f1d]
  403691:	cwde   
  403692:	daa    
  403693:	inc    ebp
  403694:	mov    edx,0x862338c2
  403699:	cmp    bl,BYTE PTR [eax-0x18021354]
  40369f:	fs mov bl,0x34
  4036a2:	pop    esp
  4036a3:	pop    ecx
  4036a4:	add    eax,0xd20b57ee
  4036a9:	add    eax,0xe6679ceb
  4036ae:	inc    edi
  4036af:	rcr    DWORD PTR [eax+0x1ab4c6c7],cl
  4036b5:	ins    DWORD PTR es:[edi],dx
  4036b6:	frstpm(287 only) 
  4036b8:	cmp    bh,BYTE PTR [edx+0xad2ba30]
  4036be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036bf:	push   ss
  4036c0:	je     0x40368d
  4036c2:	xchg   ecx,eax
  4036c3:	fucomi st,st(1)
  4036c5:	xchg   DWORD PTR [eax+0x48],edi
  4036c8:	or     eax,0x4158dbd4
  4036cd:	jbe    0x40371c
  4036cf:	inc    ecx
  4036d0:	cmp    al,0x62
  4036d2:	shl    esp,1
  4036d4:	mov    ds:0x88e64078,eax
  4036d9:	push   esi
  4036da:	loope  0x403671
  4036dc:	iret   
  4036dd:	imul   esp,DWORD PTR [ebp-0x287905bb],0xebc0cb22
  4036e7:	div    cl
  4036e9:	das    
  4036ea:	addr16 neg esi
  4036ed:	lahf   
  4036ee:	and    eax,0xcfb17b5e
  4036f3:	je     0x403715
  4036f5:	push   edx
  4036f6:	jle    0x4036c1
  4036f8:	stc    
  4036f9:	ds out dx,al
  4036fb:	popa   
  4036fc:	mov    al,0x1d
  4036fe:	jmp    0x4036e3
  403700:	(bad)  
  403702:	sbb    al,0x91
  403704:	pop    esp
  403705:	push   0x79
  403707:	stos   BYTE PTR es:[edi],al
  403708:	jg     0x40375d
  40370a:	out    0x21,al
  40370c:	xchg   ecx,eax
  40370d:	jg     0x40374b
  40370f:	aaa    
  403710:	sbb    DWORD PTR ds:0x5f10efa0,0xfffffffd
  403717:	pop    edx
  403718:	jae    0x40377d
  40371a:	out    0x84,al
  40371c:	or     eax,0x74aad2fb
  403721:	fstp   QWORD PTR [ecx+0x14]
  403724:	stc    
  403725:	aam    0x7a
  403727:	xor    BYTE PTR [ebx-0x17a519e0],ah
  40372d:	je     0x4037a0
  40372f:	mov    dl,0xc0
  403731:	imul   DWORD PTR [edi+edi*8+0x6]
  403735:	mov    esi,0xd401ef58
  40373a:	inc    ecx
  40373b:	and    ebp,DWORD PTR [esi+esi*2-0x59]
  40373f:	shl    DWORD PTR ds:0xe3b6a457,cl
  403745:	sahf   
  403746:	jae    0x403756
  403748:	mov    al,0x9a
  40374a:	jne    0x40373d
  40374c:	xchg   DWORD PTR [eax+ebp*2-0x3b01b638],ebx
  403753:	and    al,ah
  403755:	jle    0x40377d
  403757:	xchg   ecx,eax
  403758:	test   eax,ebx
  40375a:	jbe    0x403797
  40375c:	xor    DWORD PTR [ebp+ebp*2+0x12],edx
  403760:	pop    esp
  403761:	sbb    dh,al
  403763:	ret    
  403764:	loope  0x403795
  403766:	pop    esi
  403767:	inc    esi
  403768:	lock jns 0x4036f7
  40376b:	dec    ebx
  40376c:	mov    ds,WORD PTR [eax-0x2a9d7127]
  403772:	imul   edi,DWORD PTR [esi-0x29],0x2d930b89
  403779:	sbb    edi,DWORD PTR [eax-0x195798ad]
  40377f:	popa   
  403780:	(bad)
  403783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403784:	pushf  
  403785:	xchg   edi,eax
  403786:	sub    al,0x42
  403788:	stos   DWORD PTR es:[edi],eax
  403789:	les    edx,FWORD PTR [ebx-0x72]
  40378c:	push   bx
  40378e:	or     BYTE PTR [ecx],cl
  403790:	rcr    DWORD PTR [ecx+0x5bb642da],0xa9
  403797:	adc    al,dh
  403799:	sub    bl,BYTE PTR [eax-0x69f16e83]
  40379f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037a0:	(bad)  
  4037a1:	xchg   ecx,eax
  4037a2:	ror    DWORD PTR [esi-0x79],0xc8
  4037a6:	and    BYTE PTR [esi-0x1dfb0700],dl
  4037ac:	and    eax,0x67c22556
  4037b1:	sub    bh,BYTE PTR [ebx]
  4037b3:	or     ebp,edx
  4037b5:	dec    esp
  4037b6:	xor    ebp,ebp
  4037b8:	dec    ecx
  4037b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ba:	jbe    0x40377a
  4037bc:	sub    edx,DWORD PTR ds:0xa9ef92e0
  4037c2:	push   edi
  4037c3:	scas   al,BYTE PTR es:[edi]
  4037c4:	mov    bh,cl
  4037c6:	sub    dh,dh
  4037c8:	dec    edi
  4037c9:	push   edx
  4037ca:	push   0xccb6b8c5
  4037cf:	xchg   esp,eax
  4037d0:	xor    bl,BYTE PTR [eax+0x32]
  4037d3:	(bad)  
  4037d4:	out    dx,al
  4037d5:	fst    st(5)
  4037d7:	inc    esi
  4037d8:	iret   
  4037d9:	pusha  
  4037da:	or     dl,BYTE PTR [edx+0x9]
  4037dd:	dec    edi
  4037de:	or     BYTE PTR [esi],0x3d
  4037e1:	gs ins DWORD PTR es:[edi],dx
  4037e3:	call   0x33656fa2
  4037e8:	xchg   ebx,eax
  4037e9:	jb     0x40384d
  4037eb:	push   ss
  4037ec:	fistp  DWORD PTR [di+0x8af]
  4037f1:	adc    dh,BYTE PTR [edx-0x57f7a187]
  4037f7:	xchg   ebx,eax
  4037f8:	lods   al,BYTE PTR ds:[esi]
  4037f9:	add    bh,cl
  4037fb:	(bad)  
  4037fc:	sub    eax,0x669ad9df
  403801:	xor    dl,BYTE PTR [ebx]
  403803:	pop    esp
  403804:	lahf   
  403805:	outs   dx,DWORD PTR ds:[esi]
  403806:	or     eax,0x24a4e11e
  40380b:	call   DWORD PTR [edi-0x36]
  40380e:	cli    
  40380f:	dec    eax
  403810:	sahf   
  403811:	pop    edx
  403812:	mov    WORD PTR [edi-0x2de4d43],gs
  403818:	stos   DWORD PTR es:[edi],eax
  403819:	jbe    0x4037cc
  40381b:	jne    0x8cd86ff4
  403821:	mov    al,ds:0xba6fb4fe
  403826:	mov    edx,0xd0d9701e
  40382b:	mov    ebx,0xf3e58cbd
  403830:	and    BYTE PTR [esi],ah
  403832:	mov    ebp,0x564afc6c
  403837:	xor    ebx,DWORD PTR [eax]
  403839:	sub    DWORD PTR ds:0x185187fb,edx
  40383f:	push   0x3a9520f0
  403844:	pusha  
  403845:	nop
  403846:	fsub   QWORD PTR [ebp-0x207d795e]
  40384c:	adc    eax,0x875995a6
  403851:	popa   
  403852:	dec    edx
  403853:	push   es
  403854:	adc    ch,BYTE PTR [ecx+ebx*2-0x2a]
  403858:	push   0xb0d5402d
  40385d:	in     al,dx
  40385e:	mov    WORD PTR [ebx+0x2b],ss
  403861:	mov    edi,0xb7775431
  403866:	repz and DWORD PTR [edx],edi
  403869:	scas   eax,DWORD PTR es:[edi]
  40386a:	(bad)  
  40386b:	fcom   QWORD PTR [ecx+0x13601d92]
  403871:	sub    al,0x4a
  403873:	fcomp  QWORD PTR [ebp-0x73]
  403876:	ds push ecx
  403878:	push   esi
  403879:	xchg   BYTE PTR [ebx-0x3b],cl
  40387c:	shl    DWORD PTR [esi+edi*1-0x58225cf8],cl
  403883:	add    BYTE PTR [ecx+0x2d],0x2f
  403887:	(bad)  [edi]
  403889:	jbe    0x4038fb
  40388b:	shl    BYTE PTR [ebp-0x7d850f64],cl
  403891:	dec    edx
  403892:	fidiv  WORD PTR [edi+edi*1+0xd]
  403896:	sbb    DWORD PTR ds:0x5db4dbc6,edx
  40389c:	mov    WORD PTR [edx],ss
  40389e:	jno    0x403850
  4038a0:	mov    DWORD PTR [edx],ecx
  4038a2:	addr16 xchg edi,eax
  4038a4:	(bad)  
  4038a5:	cld    
  4038a6:	cmc    
  4038a7:	mov    edx,0x33abb2d6
  4038ac:	sbb    al,bl
  4038ae:	retf   0x689
  4038b1:	mov    ds:0xb532b17,al
  4038b6:	mov    al,0x6c
  4038b8:	adc    DWORD PTR ds:0x95eeb5ef,ebx
  4038be:	aam    0xe
  4038c0:	mov    ah,0x1b
  4038c2:	out    dx,eax
  4038c3:	sbb    ah,bh
  4038c5:	add    dl,BYTE PTR [ebp+0xb]
  4038c8:	jb     0x4038b6
  4038ca:	add    eax,0x79efd9e5
  4038cf:	call   FWORD PTR [ebx]
  4038d1:	pop    esp
  4038d2:	xor    eax,0x249e114f
  4038d7:	call   0x1895:0xb9d1914f
  4038de:	mov    eax,ds:0xe94d88ad
  4038e3:	inc    esp
  4038e4:	stos   BYTE PTR es:[edi],al
  4038e5:	in     eax,dx
  4038e6:	jmp    0x6f82a97b
  4038eb:	xchg   esp,eax
  4038ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ed:	ss (bad) 
  4038f0:	mov    esi,0xf6be86d1
  4038f5:	inc    esi
  4038f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038f7:	or     eax,0x7458feb5
  4038fc:	sbb    DWORD PTR [esi+0x5e87277b],esp
  403902:	xchg   BYTE PTR [ecx+0x6f48e5a],bl
  403908:	imul   edx,esp,0xc789bfed
  40390e:	sub    BYTE PTR ds:[eax+0x0],ch
  403912:	sbb    DWORD PTR [ecx-0x6d819ffb],ebx
  403918:	add    eax,0xa4c7a267
  40391d:	adc    eax,0x6550a636
  403922:	mov    ebx,0xad187fe9
  403927:	sti    
  403928:	sahf   
  403929:	dec    esi
  40392a:	cmc    
  40392b:	dec    esp
  40392c:	mov    bh,0xef
  40392e:	sub    al,dh
  403930:	xor    bh,0xd9
  403933:	xor    edx,DWORD PTR [ecx+0x64]
  403936:	popf   
  403937:	xchg   ebp,eax
  403938:	mov    ah,0x15
  40393a:	xchg   esp,eax
  40393b:	aaa    
  40393c:	mov    ebp,0x37b14a69
  403941:	outs   dx,DWORD PTR ds:[esi]
  403942:	rcl    ebx,cl
  403944:	adc    eax,0x39572507
  403949:	or     ch,BYTE PTR [edi+eax*4+0x4d]
  40394d:	fadd   st(3),st
  40394f:	sar    dh,0x66
  403952:	add    eax,0x4bc8682e
  403957:	or     esp,DWORD PTR [esi+0x6d]
  40395a:	mov    dl,0x38
  40395c:	mov    ecx,0xb8ed65bf
  403961:	or     eax,0xd34cbacc
  403966:	lock dec ebx
  403968:	aas    
  403969:	inc    edi
  40396a:	pop    esp
  40396b:	add    al,0x3b
  40396d:	mov    al,0x2c
  40396f:	or     esi,DWORD PTR [ecx]
  403971:	in     al,dx
  403972:	fs (bad) 
  403974:	loopne 0x403912
  403976:	leave  
  403977:	out    dx,al
  403978:	es dec edi
  40397a:	and    dl,bl
  40397c:	push   ebp
  40397d:	iret   
  40397e:	push   0x79228335
  403983:	ret    0xe90a
  403986:	(bad)  
  403987:	jg     0x403924
  403989:	fidiv  WORD PTR [edi]
  40398b:	jnp    0x403952
  40398d:	sbb    ecx,DWORD PTR [ebx+0x60fc2bfb]
  403993:	cmc    
  403994:	adc    bh,bh
  403996:	loope  0x4039bb
  403998:	mov    ds:0x151a3e61,eax
  40399d:	ins    BYTE PTR es:[edi],dx
  40399e:	(bad)  
  40399f:	mov    esi,0xbcd6173f
  4039a4:	dec    edx
  4039a5:	mov    eax,ds:0xf0a0cc67
  4039aa:	fdivr  DWORD PTR [ecx-0x6d6f6cf4]
  4039b0:	add    ah,bh
  4039b2:	push   cs
  4039b3:	sbb    eax,0x9571130e
  4039b8:	inc    esi
  4039b9:	sar    DWORD PTR [edx],0x1a
  4039bc:	gs cmp al,0x86
  4039bf:	inc    edi
  4039c0:	adc    al,0x38
  4039c2:	js     0x4039cc
  4039c4:	cdq    
  4039c5:	jge    0x403987
  4039c7:	sbb    ah,BYTE PTR [edx+0x5766f3bf]
  4039cd:	ror    DWORD PTR [ecx],1
  4039cf:	cmp    ah,BYTE PTR [ebx-0x31]
  4039d2:	jle    0x403a0e
  4039d4:	push   esp
  4039d5:	add    ecx,DWORD PTR [edi+eiz*1]
  4039d8:	fst    DWORD PTR [ecx+0x31]
  4039db:	loop   0x403987
  4039dd:	ss (bad) 
  4039df:	mul    BYTE PTR [edx+0x7f]
  4039e2:	xchg   edi,eax
  4039e3:	mov    BYTE PTR [ebx+0x68],dh
  4039e6:	xchg   edx,eax
  4039e7:	mov    ch,0xa1
  4039e9:	fwait
  4039ea:	mov    es,WORD PTR [edi-0x5a]
  4039ed:	std    
  4039ee:	dec    ecx
  4039ef:	pop    ss
  4039f0:	mov    WORD PTR [esi+0x305cb5d2],cs
  4039f6:	loop   0x403a76
  4039f8:	(bad)
  4039fb:	adc    esi,DWORD PTR [esi-0x3f15b377]
  403a01:	pusha  
  403a02:	fnstenv [eax-0x76]
  403a05:	adc    al,0x54
  403a07:	push   ds
  403a08:	pop    esp
  403a09:	sub    bl,BYTE PTR [ebp+0x5ba5b4c3]
  403a0f:	add    bh,BYTE PTR [esi-0x54]
  403a12:	aas    
  403a13:	shl    DWORD PTR [esi],1
  403a15:	aas    
  403a16:	test   BYTE PTR [edi-0x39],dl
  403a19:	mov    edi,0xbbc3796e
  403a1e:	ds int3 
  403a20:	sbb    bl,BYTE PTR [esi+0x5a04004f]
  403a26:	rol    DWORD PTR [eax+0x13],cl
  403a29:	fiadd  DWORD PTR [eax+edx*1]
  403a2c:	out    0x31,eax
  403a2e:	nop
  403a2f:	mov    esp,0xa7e1f928
  403a34:	ins    BYTE PTR es:[edi],dx
  403a35:	cmp    cl,BYTE PTR [ecx]
  403a37:	xor    dl,BYTE PTR ds:0x77862909
  403a3d:	sar    BYTE PTR [ebx-0x58fb8997],0xc
  403a44:	adc    bl,BYTE PTR [eax+0x29]
  403a47:	retf   0xd9c5
  403a4a:	ret    
  403a4b:	out    dx,eax
  403a4c:	sahf   
  403a4d:	pop    esp
  403a4e:	clc    
  403a4f:	push   ss
  403a50:	(bad)  
  403a51:	ds mov ah,0xc8
  403a54:	vminps ymm2,ymm2,ymm5
  403a58:	in     al,0x47
  403a5a:	mov    bl,0x52
  403a5c:	loop   0x403a20
  403a5e:	jne    0x403ac4
  403a60:	outs   dx,BYTE PTR ds:[esi]
  403a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a62:	pop    si
  403a64:	or     BYTE PTR [esi+0x4a],0xa6
  403a68:	fild   QWORD PTR fs:[esi+0x22a9d714]
  403a6f:	cmp    DWORD PTR [edi-0x68],esp
  403a72:	in     al,dx
  403a73:	sub    esi,DWORD PTR [ebp*2-0x7030b19c]
  403a7a:	mov    esi,0xe4ed6e3
  403a7f:	aaa    
  403a80:	sbb    BYTE PTR [ebp+0x5c],al
  403a83:	loope  0x403a91
  403a85:	mov    edi,0x44c72f6b
  403a8a:	mov    bh,0xc1
  403a8c:	jl     0x403ab4
  403a8e:	add    ebx,DWORD PTR ds:0x6d2cd254
  403a94:	mov    dl,0x5e
  403a96:	fwait
  403a97:	push   ecx
  403a98:	push   edx
  403a99:	mov    al,0x90
  403a9b:	rcl    esp,0x4a
  403a9e:	and    dh,BYTE PTR [eax]
  403aa0:	mov    edx,0x81c7c0ef
  403aa5:	xchg   ecx,eax
  403aa6:	(bad)  
  403aa7:	repz leave 
  403aa9:	xor    edi,eax
  403aab:	xchg   esi,eax
  403aac:	sbb    al,0x18
  403aae:	xchg   esp,eax
  403aaf:	dec    esi
  403ab0:	or     edx,ebp
  403ab2:	pop    edi
  403ab3:	inc    esi
  403ab4:	out    0xef,eax
  403ab6:	jns    0x403a89
  403ab8:	nop
  403ab9:	mov    ch,0x74
  403abb:	in     al,0x52
  403abd:	mov    ah,0x42
  403abf:	add    ebx,edi
  403ac1:	xor    al,BYTE PTR [esi+edi*8+0x338ea1a9]
  403ac8:	jmp    0x28ef:0x98065258
  403acf:	sbb    eax,0x82b73697
  403ad4:	pop    ecx
  403ad5:	jmp    DWORD PTR [ebx-0x5e723fbc]
  403adb:	mov    DWORD PTR [eax],esi
  403add:	pop    ecx
  403ade:	adc    ah,BYTE PTR [edx-0x5f86efbe]
  403ae4:	sbb    eax,DWORD PTR [eax-0x4969c8d]
  403aea:	xor    eax,0x4e5c91cf
  403aef:	and    al,0x66
  403af1:	lds    ebx,FWORD PTR [edi+0x1f]
  403af4:	or     DWORD PTR ds:0xb356dce8,0x8bd719cf
  403afe:	or     dh,BYTE PTR [esi-0x41469739]
  403b04:	ins    BYTE PTR es:[edi],dx
  403b05:	jo     0x403ad3
  403b07:	add    esi,DWORD PTR [ebx-0x46e35060]
  403b0d:	lods   eax,DWORD PTR ds:[esi]
  403b0e:	dec    esi
  403b0f:	imul   esp,DWORD PTR [ecx+ebx*2+0x7dcf73a7],0xffffffc5
  403b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b18:	pop    esi
  403b19:	mov    ecx,DWORD PTR [eax]
  403b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b1c:	mov    ds:0xa98e243c,al
  403b21:	imul   eax,DWORD PTR [edx],0xde5443f9
  403b27:	jb     0x403b90
  403b29:	cmp    eax,0x95117e66
  403b2e:	jbe    0x403ba4
  403b30:	add    DWORD PTR [ebp-0x2ae1a14e],0x6a899e6c
  403b3a:	mov    cl,0x86
  403b3c:	in     eax,0xcd
  403b3e:	xchg   ecx,eax
  403b3f:	xchg   esi,eax
  403b40:	sub    BYTE PTR [eax-0x20],ch
  403b43:	push   esp
  403b44:	ficomp WORD PTR [ebp+0x2]
  403b47:	mov    edi,0xcee41430
  403b4c:	aas    
  403b4d:	push   edi
  403b4e:	lea    esi,[ebp+ecx*1-0x2e5a966e]
  403b55:	pop    esi
  403b56:	cmp    ah,dl
  403b58:	xor    eax,0x9cff9596
  403b5d:	clc    
  403b5e:	nop
  403b5f:	lock neg DWORD PTR [edx+0x32]
  403b63:	xchg   ebx,eax
  403b64:	inc    ebp
  403b65:	aam    0x69
  403b67:	push   es
  403b68:	dec    esp
  403b69:	retf   0x789f
  403b6c:	lock out 0x8f,eax
  403b6f:	cmp    dl,BYTE PTR [esi+0x44860316]
  403b75:	jle    0x403af7
  403b77:	xchg   DWORD PTR ds:0x4576b808,ebp
  403b7d:	add    ch,0x98
  403b80:	or     al,dl
  403b82:	js     0x403b3a
  403b84:	scas   al,BYTE PTR es:[edi]
  403b85:	sub    eax,0x8ac13161
  403b8a:	sub    dl,BYTE PTR [edi+0x2]
  403b8d:	inc    edi
  403b8e:	fisubr WORD PTR [edx]
  403b90:	sbb    eax,ecx
  403b92:	xchg   bh,dl
  403b94:	inc    ecx
  403b95:	je     0x403b46
  403b97:	(bad)  
  403b98:	mov    BYTE PTR [eax+0x4a],0xf3
  403b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b9d:	cli    
  403b9e:	pop    es
  403b9f:	adc    DWORD PTR [ebx-0x56],edi
  403ba2:	jnp    0x403b2e
  403ba4:	mov    cl,0x44
  403ba6:	int    0x4f
  403ba8:	dec    edi
  403ba9:	xchg   BYTE PTR [edi+0x29ee8cf9],ah
  403baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bb0:	ret    0xb9e0
  403bb3:	jmp    0xe9fb6a74
  403bb8:	push   esi
  403bb9:	mov    bh,0x27
  403bbb:	cmp    al,0xa7
  403bbd:	es ins DWORD PTR es:[edi],dx
  403bbf:	rcr    DWORD PTR [edx+0x51],cl
  403bc2:	ins    BYTE PTR es:[edi],dx
  403bc3:	pop    ebx
  403bc4:	cmp    ebp,DWORD PTR ds:0x93a66dda
  403bca:	cli    
  403bcb:	int3   
  403bcc:	xchg   esi,eax
  403bcd:	sbb    BYTE PTR [eax],0xb5
  403bd0:	retf   
  403bd1:	das    
  403bd2:	push   0x95fcf8ff
  403bd7:	sbb    eax,0x7430dcca
  403bdc:	cs and eax,0xed570bda
  403be2:	dec    edi
  403be3:	mov    ecx,0x8d97d8c0
  403be8:	cmp    bh,BYTE PTR [esp+ecx*1+0x24e73678]
  403bef:	dec    ebp
  403bf0:	mov    ds:0x9994d1b0,al
  403bf5:	inc    esi
  403bf6:	cs enter 0xcff1,0xca
  403bfb:	dec    ebx
  403bfc:	loope  0x403c77
  403bfe:	arpl   WORD PTR [eax+0xceefd18],si
  403c04:	bound  eax,QWORD PTR [eax+0x1f]
  403c07:	mov    esi,0xa1d93d3f
  403c0c:	xchg   ebp,eax
  403c0d:	dec    BYTE PTR [eax-0x189fb22]
  403c13:	pop    ebp
  403c14:	and    al,0xeb
  403c16:	cmc    
  403c17:	fs mov ah,0xb0
  403c1a:	xor    dl,BYTE PTR [eax-0x70]
  403c1d:	pushf  
  403c1e:	cwde   
  403c1f:	inc    edi
  403c20:	xor    al,0x90
  403c22:	mov    eax,ebp
  403c24:	iret   
  403c25:	sub    DWORD PTR [esi],edi
  403c27:	icebp  
  403c28:	jmp    0xd67b:0xe9c9f1e8
  403c2f:	repz fstp st(5)
  403c32:	dec    edx
  403c33:	push   ss
  403c34:	scas   al,BYTE PTR es:[edi]
  403c35:	inc    ebx
  403c36:	aaa    
  403c37:	mov    cl,bl
  403c39:	aaa    
  403c3a:	imul   ebp,DWORD PTR [edx+0x1b7f8250],0x4beae9ca
  403c44:	fs push es
  403c46:	les    esi,FWORD PTR [ebx-0x2]
  403c49:	repnz cmp eax,ebp
  403c4c:	jmp    0xd1e4:0x48a44392
  403c53:	outs   dx,DWORD PTR ds:[esi]
  403c54:	cmp    eax,0xe2bc2825
  403c59:	fisub  DWORD PTR [ebx+eax*2]
  403c5c:	fs push ds
  403c5e:	or     ebp,edx
  403c60:	test   BYTE PTR [ebx-0x70],ah
  403c63:	push   ebx
  403c64:	jbe    0x403c31
  403c66:	cmp    eax,ebp
  403c68:	(bad)  
  403c69:	in     al,0x9f
  403c6b:	shl    DWORD PTR [eax-0x5c5f7e57],1
  403c71:	sbb    eax,0xfca5bb7d
  403c76:	or     al,0x91
  403c78:	cmp    BYTE PTR [ebx-0x53],al
  403c7b:	or     al,0xe9
  403c7d:	shr    DWORD PTR [ecx],1
  403c7f:	pop    esp
  403c80:	jge    0x403c26
  403c82:	outs   dx,DWORD PTR ds:[esi]
  403c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c84:	jmp    0x1165:0x304dd810
  403c8b:	out    dx,al
  403c8c:	cwde   
  403c8d:	rol    BYTE PTR [ebx+0x109af6d],1
  403c93:	cmp    eax,0xfd3d14a3
  403c98:	clc    
  403c99:	dec    edx
  403c9a:	and    al,0x76
  403c9c:	in     eax,0xaa
  403c9e:	adc    edx,edx
  403ca0:	jno    0x403c3c
  403ca2:	cmp    BYTE PTR [ecx-0x27873270],bl
  403ca8:	jmp    0x65faa08d
  403cad:	pop    ecx
  403cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403caf:	jnp    0x403cf0
  403cb1:	jle    0x403ca7
  403cb3:	mov    bh,0x1c
  403cb5:	pop    edi
  403cb6:	pop    ebp
  403cb7:	div    DWORD PTR gs:[edx+edi*8+0x5c22d3c]
  403cbf:	pop    ecx
  403cc0:	(bad)  
  403cc1:	and    al,0xa8
  403cc3:	rcl    edx,0xc9
  403cc6:	sbb    edi,DWORD PTR ds:[esi+0x5189164]
  403ccd:	xor    bl,cl
  403ccf:	outs   dx,DWORD PTR ds:[esi]
  403cd0:	sbb    eax,0xa984e3b6
  403cd5:	(bad)  
  403cd6:	jb     0x403c58
  403cd8:	ret    
  403cd9:	pop    ss
  403cda:	mov    esp,0xae764ed
  403cdf:	xor    eax,0x6678a63b
  403ce4:	mov    al,0x5e
  403ce6:	cmp    eax,0xb74212f0
  403ceb:	xchg   esp,eax
  403cec:	push   ebx
  403ced:	mov    dh,0x3d
  403cef:	lods   al,BYTE PTR ds:[esi]
  403cf0:	pop    ecx
  403cf1:	mov    dl,0x90
  403cf3:	retf   0x45c7
  403cf6:	sub    al,0x10
  403cf8:	call   0x465fcbeb
  403cfd:	sub    eax,0x22c77a91
  403d02:	dec    edx
  403d03:	in     al,0xcc
  403d05:	leave  
  403d06:	fld    DWORD PTR [eax]
  403d08:	jno    0x403cb0
  403d0a:	dec    eax
  403d0b:	pop    edx
  403d0c:	in     eax,dx
  403d0d:	sbb    al,0x98
  403d0f:	inc    ecx
  403d10:	fmulp  st(7),st
  403d12:	ret    0xb18d
  403d15:	pusha  
  403d16:	xchg   BYTE PTR [ebp+0xb81e88],cl
  403d1c:	test   bh,dh
  403d1e:	mov    ?,WORD PTR [ebx]
  403d20:	les    ebp,FWORD PTR [edx-0x757c038c]
  403d26:	jg     0x403d2f
  403d28:	and    ecx,esi
  403d2a:	inc    esp
  403d2b:	in     eax,0xb8
  403d2d:	jne    0x403cca
  403d2f:	mov    ebx,0x21201f89
  403d34:	push   eax
  403d35:	lahf   
  403d36:	dec    ebx
  403d37:	ins    BYTE PTR es:[edi],dx
  403d38:	sbb    bh,BYTE PTR [ebx-0x3ebc4080]
  403d3e:	or     DWORD PTR gs:[eax],0x402b481f
  403d45:	fild   DWORD PTR [ebx+edi*2-0x358c6fc1]
  403d4c:	jo     0x403dc6
  403d4e:	push   0x24
  403d50:	cdq    
  403d51:	push   ds
  403d52:	scas   eax,DWORD PTR es:[edi]
  403d53:	jbe    0x403cd6
  403d55:	cmc    
  403d56:	ins    BYTE PTR es:[edi],dx
  403d57:	rcr    BYTE PTR [esi+ebx*4-0x5f27c20],0xa
  403d5f:	data16 repnz or WORD PTR es:[esi-0x2e],si
  403d66:	jl     0x403ced
  403d68:	sbb    eax,0x86a86c12
  403d6d:	xchg   ebx,eax
  403d6e:	pop    edx
  403d6f:	out    0x4b,al
  403d71:	inc    esi
  403d72:	mov    ah,0xa0
  403d74:	pop    esp
  403d75:	in     al,dx
  403d76:	retf   0x3460
  403d79:	lods   eax,DWORD PTR ds:[esi]
  403d7a:	sub    al,0x45
  403d7c:	xchg   WORD PTR [esi+0x5a47035c],di
  403d83:	mov    edi,0x6662871b
  403d88:	arpl   WORD PTR [eax+edi*4-0x27],ax
  403d8c:	cdq    
  403d8d:	call   0x9b2c9d7
  403d92:	adc    eax,ecx
  403d94:	cmp    DWORD PTR [eax],esi
  403d96:	push   edi
  403d97:	xor    ah,al
  403d99:	pusha  
  403d9a:	(bad)  
  403d9b:	mov    dh,0xb3
  403d9d:	push   ecx
  403d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d9f:	inc    ebp
  403da0:	xchg   BYTE PTR [ebx-0x1513f719],ah
  403da6:	dec    ecx
  403da7:	arpl   WORD PTR [esi+0x8195d16],di
  403dad:	and    DWORD PTR [edx-0x720c29ea],edx
  403db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403db4:	jmp    0xe83c:0xc12711e
  403dbb:	push   cs
  403dbc:	mov    ebx,0x773e3e4b
  403dc1:	push   ecx
  403dc2:	cmp    cl,BYTE PTR [esi+edi*8]
  403dc5:	inc    edx
  403dc6:	out    dx,eax
  403dc7:	add    DWORD PTR [eax],0x50
  403dca:	or     BYTE PTR [edi],bh
  403dcc:	jo     0x403d77
  403dce:	loope  0x403e4f
  403dd0:	jb     0x403d55
  403dd2:	mov    ecx,ecx
  403dd4:	inc    edi
  403dd5:	pop    eax
  403dd6:	jl     0x403e2e
  403dd8:	mov    ds:0xd84d6324,al
  403ddd:	std    
  403dde:	sbb    DWORD PTR [edi+0x9],ecx
  403de1:	leave  
  403de2:	or     ebx,DWORD PTR [edx+0x26]
  403de5:	jmp    0x403e37
  403de7:	int    0x65
  403de9:	cli    
  403dea:	push   edi
  403deb:	mov    ecx,0x853614c2
  403df0:	jne    0x403e6b
  403df2:	mov    bh,bh
  403df4:	cmp    BYTE PTR [ebx],dl
  403df6:	adc    bl,BYTE PTR [esi-0x21]
  403df9:	rcl    ecx,1
  403dfb:	or     al,0x4a
  403dfd:	and    BYTE PTR [edi],dh
  403dff:	ins    BYTE PTR es:[edi],dx
  403e00:	aas    
  403e01:	inc    ebx
  403e02:	adc    BYTE PTR [esi+0x2f0e112f],bl
  403e08:	fbstp  TBYTE PTR [ecx]
  403e0a:	mov    cl,BYTE PTR ds:0x9663f06b
  403e10:	cmp    eax,0x5df4e259
  403e15:	daa    
  403e16:	dec    edi
  403e18:	fwait
  403e19:	popf   
  403e1a:	mov    ah,0xeb
  403e1c:	leave  
  403e1d:	mov    bh,0x22
  403e1f:	pop    ebp
  403e20:	test   al,0x3e
  403e22:	mov    ebp,0x5880aa75
  403e27:	pop    esp
  403e28:	pop    eax
  403e29:	into   
  403e2a:	xor    al,0x23
  403e2c:	or     BYTE PTR [ecx+0x78d1d7fe],0x26
  403e33:	gs cld 
  403e35:	jmp    0xf23fc811
  403e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e3b:	cmp    al,0xfc
  403e3d:	in     al,0x5a
  403e3f:	lfs    ecx,FWORD PTR [eax+0x413924ab]
  403e46:	rdpmc  
  403e48:	cwde   
  403e49:	or     al,0x39
  403e4b:	push   eax
  403e4c:	inc    esp
  403e4d:	sbb    ecx,ebp
  403e4f:	scas   eax,DWORD PTR es:[edi]
  403e50:	jg     0x403e51
  403e52:	mov    ah,0xb4
  403e54:	stos   BYTE PTR es:[edi],al
  403e55:	stc    
  403e56:	(bad)  
  403e57:	mov    ah,0x17
  403e59:	popa   
  403e5a:	pop    edi
  403e5b:	call   0xb320:0x53b2e387
  403e62:	lds    esi,FWORD PTR [ebx+0x3]
  403e65:	xor    BYTE PTR [edi],ah
  403e67:	aas    
  403e68:	(bad)  
  403e69:	xor    al,BYTE PTR [eax+0xd]
  403e6c:	retf   
  403e6d:	fwait
  403e6e:	mov    cs,WORD PTR ds:0xaa5af1c0
  403e74:	(bad)  
  403e75:	scas   eax,DWORD PTR es:[edi]
  403e76:	lods   al,BYTE PTR ds:[esi]
  403e77:	jmp    0xa8e7:0xb0ffaf25
  403e7e:	jle    0x403edd
  403e80:	xor    eax,0xf53521fe
  403e85:	or     BYTE PTR [edx+0x427c5df3],0x4a
  403e8c:	push   0x5c
  403e8e:	imul   ebx,DWORD PTR [ecx-0x45],0x2c
  403e92:	cmp    al,0x98
  403e94:	fld    QWORD PTR [esi-0x29]
  403e97:	xchg   edx,eax
  403e98:	hlt    
  403e99:	jg     0x403ed5
  403e9b:	pop    ebp
  403e9c:	xchg   DWORD PTR [ecx+ebx*4+0x7f],edx
  403ea0:	pop    ds
  403ea1:	pop    edi
  403ea2:	fucomip st,st(3)
  403ea4:	jge    0x403ec4
  403ea6:	test   BYTE PTR [ebx-0x13f44922],ah
  403eac:	data16 mov ah,0x11
  403eaf:	pop    esi
  403eb0:	repnz cs sahf 
  403eb3:	rcl    BYTE PTR [ebx+ebx*1],0x8c
  403eb7:	enter  0x7b7e,0xf2
  403ebb:	cmp    dl,bh
  403ebd:	fcom   DWORD PTR [esi]
  403ebf:	enter  0xed88,0x4c
  403ec3:	mov    ebx,eax
  403ec5:	add    DWORD PTR [ebp+ecx*8-0x79fa183f],0xabec80e0
  403ed0:	aad    0xf5
  403ed2:	ret    0x1e4
  403ed5:	fadd   QWORD PTR [esi+0x5ed63632]
  403edb:	fadd   QWORD PTR [edi+0x52]
  403ede:	mov    dh,0x9c
  403ee0:	aaa    
  403ee1:	inc    ebx
  403ee2:	cmc    
  403ee3:	adc    al,bh
  403ee5:	ja     0x403ef3
  403ee7:	mov    ebx,DWORD PTR [ecx+0x4a6cf75c]
  403eed:	iret   
  403eee:	push   esp
  403eef:	dec    esp
  403ef0:	call   0xd6b8740
  403ef5:	cdq    
  403ef6:	add    bl,BYTE PTR [ebx]
  403ef8:	cmp    DWORD PTR [eax+0x69033281],0xffffffa7
  403eff:	lods   al,BYTE PTR ds:[esi]
  403f00:	je     0x403ed3
  403f02:	mov    bl,0xbf
  403f04:	add    al,0x37
  403f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f07:	ficomp WORD PTR [edi-0x6cc9bf84]
  403f0d:	call   FWORD PTR [edx-0x1c6bf99f]
  403f13:	outs   dx,DWORD PTR ds:[esi]
  403f14:	or     edi,DWORD PTR [ebx+0x1d]
  403f17:	into   
  403f18:	ja     0x403f73
  403f1a:	sbb    BYTE PTR [ebx+esi*2],cl
  403f1d:	and    DWORD PTR [ecx-0x292f61b9],ebp
  403f23:	mov    esp,0x64cf87fd
  403f28:	mov    ebx,0xd262a99f
  403f2d:	dec    eax
  403f2e:	cld    
  403f2f:	js     0x403eb6
  403f31:	sub    al,0x7d
  403f33:	sbb    al,0x69
  403f35:	xor    eax,0xba5419e7
  403f3a:	test   BYTE PTR [eax-0x63da956a],0x26
  403f41:	data16 int3 
  403f43:	popa   
  403f44:	lsl    edx,WORD PTR [esi+ecx*4-0x50]
  403f49:	push   edi
  403f4a:	add    esp,DWORD PTR [ebp+0x3f]
  403f4d:	pop    edi
  403f4e:	into   
  403f4f:	xor    DWORD PTR [esi+0x5b165589],esp
  403f55:	or     BYTE PTR [edx],cl
  403f57:	lds    edx,FWORD PTR [ecx]
  403f59:	dec    edi
  403f5a:	popf   
  403f5b:	push   es
  403f5c:	scas   eax,DWORD PTR es:[edi]
  403f5d:	add    esi,DWORD PTR [ebp+0x62]
  403f60:	fidiv  DWORD PTR [ebp+0x30]
  403f63:	push   esp
  403f64:	pushf  
  403f65:	mov    ah,0x49
  403f67:	sub    al,0x12
  403f69:	dec    eax
  403f6a:	enter  0x6d5,0xdc
  403f6e:	mov    ah,0x1e
  403f70:	xchg   esi,eax
  403f71:	mov    ds:0x7b64b7bf,al
  403f76:	out    0xc4,eax
  403f78:	adc    ebx,DWORD PTR [esi]
  403f7a:	retf   0x61fa
  403f7d:	xchg   ebp,eax
  403f7e:	jmp    0x403fdb
  403f80:	add    ah,BYTE PTR [eax+0x663af092]
  403f86:	add    al,0xb
  403f88:	xchg   esi,eax
  403f89:	(bad)  
  403f8a:	sbb    eax,0x593e0705
  403f8f:	cmc    
  403f90:	lods   eax,DWORD PTR ds:[esi]
  403f91:	add    eax,0xd4eed302
  403f96:	scas   eax,DWORD PTR es:[edi]
  403f97:	lahf   
  403f98:	hlt    
  403f99:	push   0x37
  403f9b:	frndint 
  403f9d:	jbe    0x403f92
  403f9f:	(bad)  [ecx+edx*2-0x58]
  403fa3:	sahf   
  403fa4:	mov    ecx,0x8ba4c181
  403fa9:	sbb    dl,BYTE PTR [esi+0x29]
  403fac:	pop    ds
  403fad:	clc    
  403fae:	cwde   
  403faf:	lea    eax,[ecx+edx*8-0x6c]
  403fb3:	adc    eax,0xd021ffd
  403fb8:	test   al,0xc2
  403fba:	xchg   ebp,eax
  403fbb:	repnz mov fs,WORD PTR [ecx+0x77]
  403fbf:	fs cmp eax,0xc73bbe53
  403fc5:	adc    DWORD PTR [ecx],ebx
  403fc7:	jl     0x40402c
  403fc9:	xchg   esp,eax
  403fca:	or     DWORD PTR [esi-0x75],ebx
  403fcd:	mov    esi,0x8f6de75a
  403fd2:	fs dec eax
  403fd4:	jo     0x403fe9
  403fd6:	xchg   esp,eax
  403fd7:	sub    eax,0x57f0f650
  403fdc:	fldenv [esi]
  403fde:	ins    BYTE PTR es:[edi],dx
  403fdf:	cmp    BYTE PTR [ebp+0x5f693530],bh
  403fe5:	fiadd  WORD PTR [esi-0x3f9c5349]
  403feb:	lods   eax,DWORD PTR ds:[esi]
  403fec:	mov    ebp,0xccd1a144
  403ff1:	xor    eax,0x94a497a6
  403ff6:	fwait
  403ff7:	add    ah,bl
  403ff9:	fxch   st(1)
  403ffb:	pop    ebp
  403ffc:	cmp    DWORD PTR [edi-0x3e],0x39
  404000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404001:	adc    esp,edx
  404003:	std    
  404004:	rcr    DWORD PTR [edi],cl
  404006:	inc    ebp
  404007:	push   0x24
  404009:	and    BYTE PTR [eax-0x75],ch
  40400c:	cdq    
  40400d:	push   edx
  40400e:	scas   al,BYTE PTR es:[edi]
  40400f:	fld    st(0)
  404011:	mov    ch,bl
  404013:	fwait
  404014:	and    ebp,DWORD PTR [ecx-0x4b1e6573]
  40401a:	icebp  
  40401b:	out    dx,eax
  40401c:	xchg   edi,eax
  40401d:	sub    DWORD PTR [ecx-0x639ced91],edi
  404023:	xchg   ecx,eax
  404024:	int3   
  404025:	push   ss
  404026:	jle    0x403fdd
  404028:	jmp    0x38095e2d
  40402d:	jne    0x403ff4
  40402f:	xor    dl,BYTE PTR [edi+0x60]
  404032:	mov    cl,0x3c
  404034:	mov    ebx,0xb4884e94
  404039:	je     0x40405a
  40403b:	gs inc eax
  40403d:	out    0x3d,eax
  40403f:	clc    
  404040:	xchg   BYTE PTR [esi+0x2f8182cd],ch
  404046:	mov    ebx,0x9b38c6cc
  40404b:	cmp    DWORD PTR [eax],0x52b13a77
  404051:	ror    BYTE PTR [esi-0x518fb656],1
  404057:	jg     0x403fe0
  404059:	jb     0x4040a4
  40405b:	sbb    ebp,DWORD PTR [edx+esi*2-0x3ae456df]
  404062:	enter  0xc68,0x6
  404066:	lea    eax,[esi+0x6e]
  404069:	pop    edi
  40406a:	outs   dx,BYTE PTR ds:[esi]
  40406b:	xchg   ebx,eax
  40406c:	scas   eax,DWORD PTR es:[edi]
  40406d:	xchg   ecx,eax
  40406e:	(bad)  
  40406f:	neg    DWORD PTR [eax+0x2]
  404072:	inc    ebp
  404073:	jmp    0x219c:0xe8df02dd
  40407a:	lods   eax,DWORD PTR ds:[esi]
  40407b:	cmp    al,0xc5
  40407d:	cmp    BYTE PTR [edi-0x4b],0x7
  404081:	jbe    0x4040bd
  404083:	sub    dl,BYTE PTR [ebx]
  404085:	pop    ebx
  404086:	jle    0x404048
  404088:	push   0x1a
  40408a:	pusha  
  40408b:	(bad)  
  40408c:	jmp    0xb9082b97
  404091:	dec    ebx
  404092:	inc    edx
  404093:	xlat   BYTE PTR ds:[ebx]
  404094:	lahf   
  404095:	mov    dh,0xc8
  404097:	in     eax,dx
  404098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404099:	mov    DWORD PTR [edx-0x3a92786f],esp
  40409f:	shl    BYTE PTR [eax+0x3],1
  4040a2:	lds    edx,FWORD PTR [esi+0x3f]
  4040a5:	icebp  
  4040a6:	cmp    bl,BYTE PTR [esi+0x7a]
  4040a9:	jnp    0x404125
  4040ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ac:	in     eax,0x3
  4040ae:	shr    BYTE PTR [edx+esi*1],1
  4040b1:	lods   al,BYTE PTR ds:[esi]
  4040b2:	ret    
  4040b3:	cmp    ah,dh
  4040b5:	sub    cl,ch
  4040b7:	cmc    
  4040b8:	jb     0x4040b1
  4040ba:	pop    ss
  4040bb:	mov    eax,0xae906790
  4040c0:	outs   dx,DWORD PTR ds:[esi]
  4040c1:	mov    esi,0xb3040dc6
  4040c6:	inc    ebx
  4040c7:	cmc    
  4040c8:	fnsave cs:[edi+0x51ab80aa]
  4040cf:	jmp    0x40413d
  4040d1:	pop    ecx
  4040d2:	test   DWORD PTR [ebx],eax
  4040d4:	mov    edi,0x116db4df
  4040d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040da:	xchg   BYTE PTR [edi],ch
  4040dc:	xchg   edx,eax
  4040dd:	das    
  4040de:	int    0xb9
  4040e0:	cdq    
  4040e1:	aaa    
  4040e2:	mov    BYTE PTR [esi],bl
  4040e4:	scas   al,BYTE PTR es:[edi]
  4040e5:	stos   BYTE PTR es:[edi],al
  4040e6:	dec    esi
  4040e7:	sub    al,0x21
  4040e9:	sub    ebp,DWORD PTR ds:0xb5c9aa68
  4040ef:	and    DWORD PTR [esi-0x21],ebp
  4040f2:	(bad)  
  4040f3:	pop    ebx
  4040f4:	mov    bh,0xbe
  4040f6:	mov    ds:0xede9b782,eax
  4040fb:	push   esp
  4040fc:	mov    ah,BYTE PTR [ebp-0x5a]
  4040ff:	dec    ebx
  404100:	inc    ebx
  404101:	sub    esi,DWORD PTR [ebx-0x76]
  404104:	dec    edi
  404105:	clc    
  404106:	mov    edx,0xaffff67f
  40410b:	sar    bh,cl
  40410d:	mov    dh,0x84
  40410f:	fwait
  404110:	adc    al,0x89
  404112:	xor    edi,ebx
  404114:	repz shr DWORD PTR [edi-0x22],1
  404118:	cmp    ecx,DWORD PTR [ebp+0x16]
  40411b:	jb     0x4040f7
  40411d:	pop    eax
  40411e:	icebp  
  40411f:	mov    dl,0xb8
  404121:	scas   eax,DWORD PTR es:[edi]
  404122:	mov    ebp,DWORD PTR [eax+0x366421d1]
  404128:	ret    0x86a2
  40412b:	push   edx
  40412c:	pop    esi
  40412d:	adc    eax,0x8f63f2b
  404132:	pop    es
  404133:	adc    ebp,DWORD PTR [esi+ecx*1]
  404136:	iret   
  404137:	xor    eax,DWORD PTR [eax-0x53]
  40413a:	inc    ebp
  40413b:	fcmovne st,st(6)
  40413d:	inc    ebp
  40413e:	mov    DWORD PTR [ecx+eax*4-0x56],ebp
  404142:	mov    ds:0xc517847d,eax
  404147:	push   esp
  404148:	push   ebx
  404149:	mov    DWORD PTR [ecx-0x21198463],eax
  40414f:	arpl   WORD PTR [ecx+0x1240cba9],dx
  404155:	into   
  404156:	loop   0x4041b9
  404158:	call   0x61fe:0xfc5c7d84
  40415f:	mov    esi,0x16e94c23
  404164:	sbb    eax,0x1e39ab2c
  404169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40416a:	add    al,0x43
  40416c:	inc    ebx
  40416d:	(bad)  
  40416e:	retf   0xf302
  404171:	push   0xaa8037ee
  404176:	xchg   esi,eax
  404177:	fist   WORD PTR [ecx+0x2e73ae31]
  40417d:	dec    ebx
  40417e:	jmp    0x40415f
  404180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404181:	and    al,ch
  404183:	add    eax,DWORD PTR [edx+edx*2+0x6c]
  404187:	ins    BYTE PTR es:[edi],dx
  404188:	mov    ds:0xaab5f7f5,al
  40418d:	and    cl,BYTE PTR [ebp-0x4f]
  404190:	xchg   esi,eax
  404191:	add    DWORD PTR [edi-0x72],ebp
  404194:	sbb    eax,0xe22d2030
  404199:	dec    esi
  40419a:	inc    DWORD PTR [edx+0x14]
  40419d:	in     al,0xad
  40419f:	loope  0x404200
  4041a1:	nop
  4041a2:	test   DWORD PTR [ecx-0x5c2705c9],0x808728fe
  4041ac:	je     0x404204
  4041ae:	jg     0x40418e
  4041b0:	sbb    ch,bh
  4041b2:	or     al,0xe2
  4041b4:	jbe    0x404184
  4041b6:	hlt    
  4041b7:	mov    bl,BYTE PTR [ebx+0x6ff9aca4]
  4041bd:	xor    eax,0x4bfba1e5
  4041c2:	mov    bl,0x69
  4041c4:	into   
  4041c5:	jno    0x4041f9
  4041c7:	pop    es
  4041c8:	mov    ebx,DWORD PTR [ebx-0xeacf56]
  4041ce:	xlat   BYTE PTR cs:[ebx]
  4041d0:	jns    0x404191
  4041d2:	out    0x21,al
  4041d4:	mov    dh,0xe8
  4041d6:	ret    
  4041d7:	xchg   ebp,eax
  4041d8:	outs   dx,BYTE PTR ds:[esi]
  4041d9:	sbb    DWORD PTR gs:[ebx+0x20],esp
  4041dd:	jmp    0x4041de
  4041df:	sar    BYTE PTR [ebx],cl
  4041e1:	xor    esi,edx
  4041e3:	aas    
  4041e4:	test   al,0x6b
  4041e6:	pop    edi
  4041e7:	std    
  4041e8:	mov    bh,0x19
  4041ea:	mov    ah,0x6d
  4041ec:	dec    eax
  4041ed:	dec    ebp
  4041ee:	ins    BYTE PTR es:[edi],dx
  4041ef:	int3   
  4041f0:	stos   DWORD PTR es:[edi],eax
  4041f1:	adc    BYTE PTR [eax],cl
  4041f3:	sbb    eax,0xbba00d45
  4041f8:	fst    QWORD PTR [ecx]
  4041fa:	popf   
  4041fb:	in     al,dx
  4041fc:	repnz mov al,es:0x64a601ac
  404203:	cld    
  404204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404205:	cmp    DWORD PTR [ebp+0xc],edx
  404208:	xor    ecx,DWORD PTR [edi-0x42]
  40420b:	call   0x99a:0x49468b8c
  404212:	and    al,0xa
  404214:	shl    cx,cl
  404217:	fcmove st,st(7)
  404219:	xchg   ebx,eax
  40421a:	push   eax
  40421b:	imul   ecx,edx,0xd668373a
  404221:	outs   dx,DWORD PTR ds:[esi]
  404222:	push   eax
  404223:	repz or al,0x6d
  404226:	pop    ss
  404227:	and    bl,BYTE PTR [eax-0x24d5b4e1]
  40422d:	je     0x4041fb
  40422f:	dec    ecx
  404230:	jmp    0x5eb2:0xe4f95d46
  404237:	imul   ecx,DWORD PTR [ebp+0x48],0x1f
  40423b:	jbe    0x4041f0
  40423d:	sahf   
  40423e:	cmp    bh,BYTE PTR [edi+0x13]
  404241:	les    edi,FWORD PTR [eax*1-0x320658ca]
  404248:	lahf   
  404249:	sbb    edi,DWORD PTR [ebx-0x31387fda]
  40424f:	pusha  
  404250:	mov    edi,0x6cc9e2e1
  404255:	xor    esp,esi
  404257:	dec    ecx
  404258:	mov    ax,0x76c7
  40425c:	sar    DWORD PTR [edi+0x17e76adf],0x2c
  404263:	mov    eax,ds:0x91483c7b
  404268:	rcl    BYTE PTR [esi+0x3fe63d9f],0xe9
  40426f:	lahf   
  404270:	pop    ebp
  404271:	sti    
  404272:	jmp    0x107e:0xa1fa4dbb
  404279:	or     BYTE PTR [edx-0x14432dd4],ah
  40427f:	ins    DWORD PTR es:[edi],dx
  404280:	sub    eax,DWORD PTR [ebp+0x4402ea31]
  404286:	and    eax,0x54cdfa3e
  40428b:	repz add esp,DWORD PTR [eax]
  40428e:	mov    al,ds:0x1c6723cc
  404293:	jmp    0xae1b:0x8b374a2
  40429a:	sahf   
  40429b:	sbb    cl,cl
  40429d:	stos   BYTE PTR es:[edi],al
  40429e:	xor    eax,0xfffffff9
  4042a1:	iret   
  4042a2:	sbb    al,0xa2
  4042a4:	cmp    al,0x1f
  4042a6:	fsubr  QWORD PTR [edi+0x4133b520]
  4042ac:	addr16 iret 
  4042ae:	out    0x68,al
  4042b0:	fs push edi
  4042b2:	push   ds
  4042b3:	inc    esi
  4042b4:	lods   al,BYTE PTR ds:[esi]
  4042b5:	adc    DWORD PTR [ebp+0x4a7d28d1],0x65
  4042bc:	adc    DWORD PTR [ebx+esi*4+0x5e314ff0],esi
  4042c3:	mov    bh,BYTE PTR es:[eax]
  4042c6:	push   ebx
  4042c7:	push   ebp
  4042c8:	dec    esp
  4042c9:	and    al,0xda
  4042cb:	jno    0x4042c9
  4042cd:	xor    DWORD PTR [esi+0x201cb3c3],eax
  4042d3:	(bad)  
  4042d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d5:	dec    ebx
  4042d6:	xchg   edx,eax
  4042d7:	mov    bh,0xcd
  4042d9:	lods   al,BYTE PTR ds:[esi]
  4042da:	stos   BYTE PTR es:[edi],al
  4042db:	jno    0x404299
  4042dd:	in     eax,dx
  4042de:	push   cs
  4042df:	popa   
  4042e0:	mov    cl,0xd1
  4042e2:	mov    ebx,0x3a9c1b85
  4042e7:	outs   dx,BYTE PTR ds:[esi]
  4042e8:	sbb    DWORD PTR gs:[eax+0x5a],ebx
  4042ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042ed:	jb     0x404321
  4042ef:	test   DWORD PTR [ebx+0x482afb47],edi
  4042f5:	ret    
  4042f6:	pop    esi
  4042f7:	or     BYTE PTR [eax+0x197635e2],cl
  4042fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042fe:	pop    eax
  4042ff:	sbb    DWORD PTR [eax-0x10],0xffffff87
  404303:	push   cs
  404304:	ins    DWORD PTR es:[edi],dx
  404305:	xchg   edi,eax
  404306:	xor    BYTE PTR [edi],0xd5
  404309:	jg     0x40434d
  40430b:	xor    BYTE PTR [esi],dh
  40430d:	sets   BYTE PTR [ebx-0x4a]
  404311:	test   eax,0xc834df63
  404316:	loop   0x4042e2
  404318:	and    bh,BYTE PTR [ebp+ebp*8+0x69]
  40431c:	sbb    ch,BYTE PTR [eax]
  40431e:	xchg   esi,eax
  40431f:	loop   0x40439f
  404321:	fld    DWORD PTR [eax+0xd84dd0e]
  404327:	adc    eax,0x17cadbb9
  40432c:	add    ebx,DWORD PTR [eax+0x25941d47]
  404332:	call   0x45ca:0x4f11f41
  404339:	inc    edi
  40433a:	into   
  40433b:	sbb    DWORD PTR ds:0x8378b383,ebx
  404341:	data16 (bad) 
  404344:	adc    DWORD PTR [edx+edx*2],0x28
  404348:	lock xchg ebx,eax
  40434a:	jo     0x404329
  40434c:	cld    
  40434d:	jecxz  0x40435c
  40434f:	dec    esi
  404350:	outs   dx,BYTE PTR ds:[esi]
  404351:	out    dx,al
  404352:	xchg   ebp,eax
  404353:	xchg   esp,eax
  404354:	or     edx,DWORD PTR [edx]
  404356:	clc    
  404357:	test   DWORD PTR [edx+0x2c],ecx
  40435a:	sub    al,0x60
  40435c:	dec    DWORD PTR [esi]
  40435e:	aaa    
  40435f:	fidivr WORD PTR [edx+0x5b46f1bc]
  404365:	sub    BYTE PTR [ebx-0x2ca21045],dh
  40436b:	mov    al,BYTE PTR [esi+0x1b398fc5]
  404371:	dec    ebp
  404372:	sub    DWORD PTR [ebp+0x5b],edx
  404375:	lock (bad) 
  404377:	out    dx,al
  404378:	and    esp,DWORD PTR [edx+edi*2]
  40437b:	push   0x5c6a6bb0
  404380:	mov    esi,0x67592726
  404385:	js     0x4043f8
  404387:	push   edi
  404388:	in     al,0x5a
  40438a:	fdivr  st,st(3)
  40438c:	sbb    ebp,DWORD PTR [ebx+0x23]
  40438f:	jne    0x40437c
  404391:	loopne 0x4043c2
  404393:	adc    ebp,DWORD PTR [eax]
  404395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404396:	inc    ebx
  404397:	je     0x40431f
  404399:	or     al,0xe3
  40439b:	inc    ecx
  40439c:	cmc    
  40439d:	mov    gs,WORD PTR [esi+0x77db7e09]
  4043a3:	outs   dx,BYTE PTR ds:[esi]
  4043a4:	xlat   BYTE PTR es:[ebx]
  4043a6:	arpl   WORD PTR [ecx],bp
  4043a8:	call   0xeae00e9f
  4043ad:	add    al,0xba
  4043af:	stos   BYTE PTR es:[edi],al
  4043b0:	pop    ecx
  4043b1:	sar    dh,0x29
  4043b4:	retf   
  4043b5:	aaa    
  4043b6:	and    DWORD PTR [ebx-0x10b35549],esi
  4043bc:	xor    ecx,esi
  4043be:	and    esi,DWORD PTR [eax]
  4043c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c1:	mov    BYTE PTR [edi+0x10327ce1],0xf3
  4043c8:	aam    0x25
  4043ca:	add    bh,BYTE PTR [ecx-0x52dc23a3]
  4043d0:	pop    ebx
  4043d1:	xor    DWORD PTR [edi],eax
  4043d3:	stos   BYTE PTR es:[edi],al
  4043d4:	xor    eax,0xf524118e
  4043d9:	repz dec esi
  4043db:	ins    BYTE PTR es:[edi],dx
  4043dc:	or     bh,BYTE PTR [eax-0x67]
  4043df:	(bad)  
  4043e0:	aam    0x68
  4043e2:	inc    ebp
  4043e3:	fwait
  4043e4:	mov    ecx,0x49e23d5e
  4043e9:	xor    ebp,ecx
  4043eb:	cld    
  4043ec:	mov    edx,0xbb05ce96
  4043f1:	xchg   edx,eax
  4043f2:	into   
  4043f3:	inc    eax
  4043f4:	cmp    eax,0xf2a34a0
  4043f9:	xchg   esp,eax
  4043fa:	fisttp QWORD PTR ds:0x1ba58cd8
  404400:	addr16 out 0x71,al
  404403:	mov    ebx,0xfa2efcd3
  404408:	inc    ebx
  404409:	in     eax,0x63
  40440b:	nop
  40440c:	mov    ah,0x91
  40440e:	pop    esp
  40440f:	or     al,0xdd
  404411:	shr    BYTE PTR [esi-0x2a067199],0x4c
  404418:	shl    BYTE PTR [ebx],cl
  40441a:	jb     0x4043db
  40441c:	sbb    al,0x95
  40441e:	inc    eax
  40441f:	neg    dh
  404421:	vpmulhw xmm1,xmm6,XMMWORD PTR ds:0x17d326d8
  404429:	add    ah,BYTE PTR fs:[edx+0x72]
  40442d:	jb     0x404419
  40442f:	pop    ecx
  404430:	pusha  
  404431:	in     eax,0x66
  404433:	mov    ebx,0xab14f52d
  404438:	sbb    DWORD PTR [ecx+0x22f47b02],esp
  40443e:	stos   DWORD PTR es:[edi],eax
  40443f:	xor    DWORD PTR [eax+0x30d1c220],esi
  404445:	xor    DWORD PTR [eax+0x36],esi
  404448:	test   ebp,ecx
  40444a:	ins    BYTE PTR es:[edi],dx
  40444b:	hlt    
  40444c:	fidivr DWORD PTR [edi+eax*8]
  40444f:	pop    eax
  404450:	das    
  404451:	jmp    0x2f791c94
  404456:	sub    esp,ebp
  404458:	call   0x46fb:0xf1320278
  40445f:	ds sub ah,dl
  404462:	pop    edi
  404463:	push   0x58
  404465:	test   esi,edi
  404467:	add    eax,0xdf01142
  40446c:	imul   eax,esp,0x1e
  40446f:	fmul   QWORD PTR [ecx-0x54]
  404472:	mov    ecx,eax
  404474:	out    0xd9,eax
  404476:	sbb    edx,DWORD PTR [ecx]
  404478:	mov    al,es:0x17b4348a
  40447e:	cmc    
  40447f:	ins    BYTE PTR es:[edi],dx
  404480:	in     eax,0x6c
  404482:	inc    eax
  404483:	int3   
  404484:	jae    0x40448d
  404486:	std    
  404487:	arpl   WORD PTR [eax-0x1a],cx
  40448a:	arpl   cx,bx
  40448c:	popa   
  40448d:	out    dx,al
  40448e:	nop
  40448f:	dec    ebx
  404490:	jo     0x40446a
  404492:	nop
  404493:	sbb    ecx,ebp
  404495:	dec    esi
  404496:	jmp    0x8aad:0xe25f425
  40449d:	ja     0x4044dc
  40449f:	inc    ecx
  4044a0:	pusha  
  4044a1:	test   DWORD PTR [ebx-0x12],edi
  4044a4:	inc    ebx
  4044a5:	mov    eax,0x51c471ea
  4044aa:	pop    ebx
  4044ab:	loopne 0x4044ce
  4044ad:	repnz out 0x2f,al
  4044b0:	enter  0x29f,0x34
  4044b4:	jnp    0x40448d
  4044b6:	inc    ecx
  4044b7:	mov    esi,0xde159f42
  4044bc:	fild   WORD PTR [ecx]
  4044be:	test   al,0xf9
  4044c0:	cmp    DWORD PTR [edx+0x16e99bf],ebx
  4044c6:	mov    al,0xcf
  4044c8:	dec    eax
  4044c9:	inc    ebx
  4044ca:	es add eax,0x6c54fcc1
  4044d0:	adc    dl,ch
  4044d2:	jbe    0x4044f6
  4044d4:	nop
  4044d5:	fs inc esi
  4044d7:	loopne 0x4044f2
  4044d9:	ja     0x40450f
  4044db:	cwde   
  4044dc:	mov    bh,BYTE PTR [esi]
  4044de:	dec    esp
  4044df:	jmp    0xfde8:0x3012aa31
  4044e6:	xor    ah,BYTE PTR ds:0x9398c84a
  4044ec:	xchg   edi,eax
  4044ed:	iret   
  4044ee:	iret   
  4044ef:	cmp    DWORD PTR [edx+0x27],ebx
  4044f2:	popf   
  4044f3:	jmp    0x40453e
  4044f5:	sbb    bh,bl
  4044f7:	jns    0x40455a
  4044f9:	push   cs
  4044fa:	mov    dh,0x16
  4044fc:	adc    BYTE PTR [ecx+0x2393f445],bl
  404502:	mov    al,0xdd
  404504:	xadd   BYTE PTR [edi],bl
  404507:	int    0x1b
  404509:	ja     0x404576
  40450b:	and    al,0xe1
  40450d:	inc    edx
  40450e:	in     al,dx
  40450f:	mov    ah,0xb9
  404511:	and    DWORD PTR [edx+0x42f86ebe],eax
  404517:	test   BYTE PTR [ecx-0x697db9e6],ah
  40451d:	int    0xd8
  40451f:	sbb    esi,0xc03d9287
  404525:	shr    BYTE PTR [ecx-0x500e7ba6],1
  40452b:	dec    eax
  40452c:	mov    eax,0x7e30c96b
  404531:	imul   edx,DWORD PTR [ebx-0x14],0xb6c3ebf4
  404538:	ror    DWORD PTR [ecx+0x67b951d1],1
  40453e:	cmp    al,0xb5
  404540:	outs   dx,DWORD PTR ds:[esi]
  404541:	out    dx,eax
  404542:	nop
  404543:	xchg   ebx,eax
  404544:	(bad)  
  404545:	adc    BYTE PTR [edx],cl
  404547:	outs   dx,DWORD PTR ds:[esi]
  404548:	mov    edi,0x25ec5a9e
  40454d:	dec    eax
  40454e:	jbe    0x404504
  404550:	sub    eax,0x1539010c
  404555:	gs mov edi,0x4cb907f3
  40455b:	push   ecx
  40455c:	or     ah,bl
  40455e:	or     BYTE PTR [edx],bh
  404560:	pusha  
  404561:	inc    esi
  404562:	in     eax,0x41
  404564:	gs mov ecx,0x4b4c5d64
  40456a:	xor    BYTE PTR [edi],al
  40456c:	mov    BYTE PTR [esi-0x29e7552d],ah
  404572:	(bad)  
  404573:	test   al,0x85
  404575:	js     0x40456c
  404577:	inc    esp
  404578:	stos   DWORD PTR es:[edi],eax
  404579:	push   DWORD PTR [ecx]
  40457b:	int3   
  40457c:	cld    
  40457d:	(bad)  
  40457e:	sti    
  40457f:	jnp    0x4045db
  404581:	cmc    
  404582:	sbb    BYTE PTR [esi+0x7d4c87b1],cl
  404588:	dec    ebp
  404589:	or     ebp,DWORD PTR ds:0x3e211059
  40458f:	jmp    0xc18b6eed
  404594:	daa    
  404595:	cwde   
  404596:	gs sbb al,0x69
  404599:	adc    esp,DWORD PTR [ebx+0x36390214]
  40459f:	daa    
  4045a0:	jecxz  0x40455d
  4045a2:	adc    al,0x49
  4045a4:	or     ebp,ecx
  4045a6:	jae    0x40453f
  4045a8:	and    ebx,DWORD PTR [edx-0x4a53c6cd]
  4045ae:	aam    0xa5
  4045b0:	js     0x4045f1
  4045b2:	mov    bh,0x47
  4045b4:	fcomp  QWORD PTR [ecx]
  4045b6:	sbb    eax,0x5b7f0ab4
  4045bb:	daa    
  4045bc:	inc    ebp
  4045bd:	call   0xbcd5f2a5
  4045c2:	cmp    BYTE PTR [ebx-0x45],dl
  4045c5:	imul   ebp,DWORD PTR [ebp-0x55fbcd61],0xcd332553
  4045cf:	cmp    ch,BYTE PTR [edi]
  4045d1:	mov    ebp,0xcc7b17a1
  4045d6:	aas    
  4045d7:	xor    al,0x6a
  4045d9:	fwait
  4045da:	and    bh,BYTE PTR [ebx-0x6e3cf07]
  4045e0:	mov    ah,0x9e
  4045e2:	jle    0x404641
  4045e4:	adc    al,0x54
  4045e6:	mov    ebp,DWORD PTR [eax-0x54d34d8d]
  4045ec:	jg     0x4045df
  4045ee:	icebp  
  4045ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f0:	mov    ah,0x5b
  4045f2:	imul   edx,DWORD PTR [edi-0x77],0xffffffdc
  4045f6:	push   esi
  4045f7:	data16 mov BYTE PTR [ebp-0x19398aea],ah
  4045fe:	pop    esp
  4045ff:	xchg   esp,eax
  404600:	daa    
  404601:	imul   edi,DWORD PTR [esp+ebp*1],0xffffffa4
  404605:	adc    edx,esp
  404607:	dec    esp
  404608:	xor    edx,ecx
  40460a:	xchg   edi,eax
  40460b:	aad    0xaf
  40460d:	mov    cl,0x28
  40460f:	dec    eax
  404610:	lods   al,BYTE PTR ds:[esi]
  404611:	loopne 0x404659
  404613:	repz fadd QWORD PTR [edx]
  404616:	pop    esp
  404617:	inc    ebp
  404618:	jmp    0x277ac188
  40461d:	add    DWORD PTR [edx-0x2],esi
  404620:	mov    DWORD PTR [edi+0x22],0x674365e9
  404627:	jle    0x404679
  404629:	cmp    DWORD PTR [esi],eax
  40462b:	cmp    bl,BYTE PTR [edx+0x17]
  40462e:	jnp    0x4046a2
  404630:	sbb    DWORD PTR [esi-0x641e02e],ebx
  404636:	jge    0x40469a
  404638:	loopne 0x404617
  40463a:	loop   0x40460b
  40463c:	adc    al,0x2a
  40463e:	cmp    eax,esi
  404640:	fcom   DWORD PTR [ecx-0x517062b5]
  404646:	mov    ebx,0x901d76d3
  40464b:	nop
  40464c:	stos   DWORD PTR es:[edi],eax
  40464d:	jns    0x404659
  40464f:	add    eax,0x438093a0
  404654:	push   edx
  404655:	mov    eax,ds:0x72cc07e
  40465a:	out    0xd3,al
  40465c:	push   0x5681a28f
  404661:	loopne 0x404616
  404663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404664:	jmp    0x3bc7781b
  404669:	and    edi,DWORD PTR [esi]
  40466b:	xlat   BYTE PTR ds:[ebx]
  40466c:	dec    ebp
  40466d:	mov    al,ds:0x1e0914f5
  404672:	or     eax,0xcc3e1fff
  404677:	mov    dh,0xfb
  404679:	sahf   
  40467a:	daa    
  40467b:	sbb    al,0x82
  40467d:	adc    BYTE PTR [ebx+0x1b465080],ch
  404683:	pop    ebp
  404684:	sbb    al,BYTE PTR [eax+0x112504dd]
  40468a:	xor    al,0xea
  40468c:	add    esi,ebp
  40468e:	xchg   edx,eax
  40468f:	mov    ch,0xd6
  404691:	fcomp  DWORD PTR [esi-0x76fc885e]
  404697:	xor    cl,BYTE PTR [edx]
  404699:	xchg   edx,eax
  40469a:	and    al,0xc1
  40469c:	jp     0x4046d1
  40469e:	dec    esi
  40469f:	jecxz  0x404665
  4046a1:	jmp    0x6b5:0x1f3be6b4
  4046a8:	mov    ebp,0xb354cdb7
  4046ad:	inc    edx
  4046ae:	mov    eax,0x9fcb8f5c
  4046b3:	xchg   BYTE PTR [eax+0x5a41222e],bl
  4046b9:	push   eax
  4046ba:	aas    
  4046bb:	call   0x7d60:0x65e9c420
  4046c2:	out    0xc,eax
  4046c4:	and    al,ah
  4046c6:	fsubr  st,st(4)
  4046c8:	xchg   edi,eax
  4046c9:	ins    BYTE PTR es:[edi],dx
  4046ca:	repz push 0x55ec805f
  4046d0:	sbb    DWORD PTR [edx-0x17],0xffffffcb
  4046d4:	(bad)  
  4046d5:	pop    ebp
  4046d6:	sub    BYTE PTR [edx-0x3c],ch
  4046d9:	sub    cl,BYTE PTR [ebx+0x544e5cf9]
  4046df:	stos   BYTE PTR es:[edi],al
  4046e0:	pop    es
  4046e1:	jns    0x404695
  4046e3:	jb     0x404716
  4046e5:	aad    0xd2
  4046e7:	add    cl,BYTE PTR [esi+eiz*2+0x25]
  4046eb:	pop    ebx
  4046ec:	jmp    0x40473f
  4046ee:	jae    0x40476e
  4046f0:	clc    
  4046f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046f2:	xor    al,0x6
  4046f4:	jae    0x404677
  4046f6:	dec    ebx
  4046f7:	xlat   BYTE PTR ds:[ebx]
  4046f8:	scas   eax,DWORD PTR es:[edi]
  4046f9:	inc    edx
  4046fa:	and    esp,DWORD PTR [ebx-0x502fa03b]
  404700:	mov    bh,0xac
  404702:	pop    es
  404703:	pop    ss
  404704:	inc    esp
  404705:	(bad)  
  404706:	gs mov bl,0x8f
  404709:	push   0x7b4d0e3c
  40470e:	or     eax,0xd8e71f07
  404713:	outs   dx,DWORD PTR ds:[esi]
  404714:	(bad)  
  404715:	dec    ebp
  404716:	push   ebx
  404717:	xchg   esp,eax
  404718:	mov    dl,0x44
  40471a:	rcl    BYTE PTR ds:0xac822a5e,0xe3
  404721:	cwde   
  404722:	sub    BYTE PTR [ecx+0x3d5cd83f],ah
  404728:	pop    ebp
  404729:	push   0xffffffec
  40472b:	in     eax,dx
  40472c:	imul   edi,edi,0xffffff97
  40472f:	test   eax,0x2371561
  404734:	and    DWORD PTR [ecx+0x67],esi
  404737:	fucomp st(3)
  404739:	imul   esp,DWORD PTR ds:[edx-0x52a232c3],0x54
  404741:	sub    esi,DWORD PTR [edi]
  404743:	data16 cld 
  404745:	jne    0x404759
  404747:	stc    
  404748:	cli    
  404749:	lds    eax,FWORD PTR [ecx]
  40474b:	imul   edi,DWORD PTR [eax+eiz*4],0xf7a0fa7d
  404752:	jmp    0x404742
  404754:	jbe    0x40477c
  404756:	fnsave [ecx]
  404758:	add    cl,BYTE PTR [edi+0x78cf151e]
  40475e:	jp     0x4046fe
  404760:	mov    ds:0x4a0178ff,al
  404765:	aas    
  404766:	push   esi
  404767:	ret    0x1081
  40476a:	ror    BYTE PTR [ebx+0x5c09e590],0x3f
  404771:	cmp    bl,ch
  404773:	je     0x404738
  404775:	adc    eax,0x40a76e20
  40477a:	xchg   DWORD PTR [ebx+esi*1-0x56],ebx
  40477e:	mov    al,ds:0x4cfc3c6d
  404783:	xor    edx,DWORD PTR [edi+0x5d]
  404786:	adc    al,0x6d
  404788:	loopne 0x40475f
  40478a:	fsubr  QWORD PTR [esi+0x216a9c7d]
  404790:	push   edi
  404791:	xchg   esi,eax
  404792:	and    edi,DWORD PTR [esi+0x31]
  404795:	out    dx,al
  404796:	call   0x2d49:0xc2b95cee
  40479d:	inc    ecx
  40479e:	jecxz  0x404789
  4047a0:	or     al,0x78
  4047a2:	es push es
  4047a4:	lds    ebp,FWORD PTR [eax]
  4047a6:	add    DWORD PTR [ebx+0x6faf993f],esp
  4047ac:	mov    ah,BYTE PTR [edx+ecx*2-0x2f52e101]
  4047b3:	xchg   BYTE PTR [ebp+0x3f],ah
  4047b6:	sub    ebp,DWORD PTR [ebx-0xc4da4e]
  4047bc:	data16 aaa 
  4047be:	sbb    ch,ch
  4047c0:	hlt    
  4047c1:	rcr    BYTE PTR ds:0x9dfa95d1,1
  4047c7:	push   0x7ae30be2
  4047cc:	icebp  
  4047cd:	call   0x1da68fa9
  4047d2:	in     al,0xcd
  4047d4:	cld    
  4047d5:	daa    
  4047d6:	and    eax,0xa50da819
  4047db:	not    BYTE PTR [ebx-0x774a6052]
  4047e1:	in     al,dx
  4047e2:	(bad)
  4047e5:	xchg   ebx,eax
  4047e6:	add    BYTE PTR [ecx],bh
  4047e8:	mov    al,BYTE PTR [eax-0x80]
  4047eb:	(bad)  
  4047ec:	fstp   TBYTE PTR [eax+0x44]
  4047ef:	inc    ebx
  4047f0:	es push ss
  4047f2:	shl    BYTE PTR [edi-0xf],0x72
  4047f6:	ja     0x4047aa
  4047f8:	fwait
  4047f9:	pop    ebp
  4047fa:	xchg   ebp,eax
  4047fb:	dec    ebx
  4047fc:	or     DWORD PTR [esi-0x79],eax
  4047ff:	xor    ah,ah
  404801:	mov    edx,0x227642c8
  404806:	int3   
  404807:	xor    dl,BYTE PTR [eax+0x9]
  40480a:	adc    ebx,ecx
  40480c:	pop    ds
  40480d:	mov    DWORD PTR [edx+esi*1],eax
  404810:	in     eax,dx
  404811:	in     eax,dx
  404812:	push   es
  404813:	je     0x4047f6
  404815:	leave  
  404816:	inc    edi
  404817:	pop    esi
  404818:	push   edi
  404819:	push   ds
  40481a:	cmp    ah,BYTE PTR [eax-0x37]
  40481d:	icebp  
  40481e:	adc    DWORD PTR [edx+0x68],edx
  404821:	cs pop ds
  404823:	in     al,dx
  404824:	fistp  QWORD PTR [ecx-0x1c08c99e]
  40482a:	xor    ebx,DWORD PTR [eax+0x11]
  40482d:	loopne 0x4047da
  40482f:	and    eax,edi
  404831:	popa   
  404832:	mov    dl,0x88
  404834:	sbb    eax,eax
  404836:	call   ebx
  404838:	mov    esi,0x2a5cbd8a
  40483d:	aam    0x83
  40483f:	push   ds
  404840:	cli    
  404841:	xor    esp,esi
  404843:	pop    esi
  404844:	out    dx,al
  404845:	scas   al,BYTE PTR es:[edi]
  404846:	push   0xffffffd5
  404848:	fcmovu st,st(6)
  40484a:	add    BYTE PTR [ecx],bh
  40484c:	test   eax,0x15a9620f
  404851:	fisttp DWORD PTR [esi-0x77c999f1]
  404857:	xchg   edi,eax
  404858:	sbb    BYTE PTR [ebp-0x55],cl
  40485b:	lds    edi,FWORD PTR [eax-0x16]
  40485e:	fdiv   st(7),st
  404860:	aaa    
  404861:	(bad)  
  404862:	shl    BYTE PTR [ebx],1
  404864:	stos   BYTE PTR es:[edi],al
  404865:	or     DWORD PTR [edi],0x7c854aeb
  40486b:	fild   WORD PTR [ebx+eiz*4-0x5a]
  40486f:	xchg   DWORD PTR [ecx],eax
  404871:	inc    edx
  404872:	xor    BYTE PTR [eax+ebp*8-0x3b],bh
  404876:	(bad)  
  404877:	ret    0x1ad9
  40487a:	xchg   esi,eax
  40487b:	stos   BYTE PTR es:[edi],al
  40487c:	mov    eax,0x9d6b8c41
  404881:	sbb    dh,BYTE PTR fs:[esi]
  404884:	mov    dl,0xfd
  404886:	clc    
  404887:	or     edx,ebx
  404889:	mov    ah,0x58
  40488b:	push   ecx
  40488c:	ja     0x404883
  40488e:	jmp    0x404851
  404890:	push   cs
  404891:	outs   dx,DWORD PTR ds:[esi]
  404892:	(bad)  
  404893:	adc    DWORD PTR [ebx+0x3b51a2fa],esi
  404899:	dec    ecx
  40489a:	inc    edx
  40489b:	adc    ecx,DWORD PTR [eax+0x26]
  40489e:	shl    dh,cl
  4048a0:	stos   DWORD PTR es:[edi],eax
  4048a1:	outs   dx,BYTE PTR ds:[esi]
  4048a2:	nop
  4048a3:	not    BYTE PTR [esi-0x7f]
  4048a6:	jae    0x40483c
  4048a8:	(bad)  
  4048a9:	push   cs
  4048aa:	outs   dx,DWORD PTR ds:[esi]
  4048ab:	or     DWORD PTR [eax+0x44],0xdffd2876
  4048b2:	call   0x4e1af392
  4048b7:	and    dh,dl
  4048b9:	pop    esp
  4048ba:	pop    edx
  4048bb:	lods   al,BYTE PTR ds:[esi]
  4048bc:	pop    ss
  4048bd:	or     eax,0x328a1645
  4048c2:	inc    esi
  4048c3:	and    al,0x8b
  4048c5:	mov    dh,0x36
  4048c7:	adc    eax,0x39f22c0c
  4048cc:	sbb    eax,0x7a2b5ccf
  4048d1:	pop    ecx
  4048d2:	dec    edx
  4048d3:	push   0x449fca92
  4048d8:	pop    edx
  4048d9:	inc    ebx
  4048da:	sti    
  4048db:	dec    ah
  4048dd:	inc    esi
  4048de:	mov    ebp,0xcaeb8325
  4048e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048e4:	xor    al,0x77
  4048e6:	or     al,0x78
  4048e8:	ret    0x134a
  4048eb:	jmp    0xcd441270
  4048f0:	mov    dh,0x1f
  4048f2:	push   eax
  4048f3:	inc    esp
  4048f4:	sbb    BYTE PTR [eax],0x64
  4048f7:	std    
  4048f8:	bound  esi,QWORD PTR [esi+0x48]
  4048fb:	jl     0x404952
  4048fd:	or     esi,0xd7f9e5a3
  404903:	adc    DWORD PTR [edx-0x18d18e01],0xb2558ef
  40490d:	jno    0x4048b0
  40490f:	jl     0x4048df
  404911:	bound  ecx,QWORD PTR [eax+edi*1-0x42626b4f]
  404918:	jg     0x404932
  40491a:	add    ch,BYTE PTR [ebx]
  40491c:	cmp    eax,0xe3b2750d
  404921:	xchg   esi,eax
  404922:	push   es
  404923:	(bad)  
  404925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404926:	xchg   ecx,ebp
  404928:	cmp    dh,BYTE PTR [ecx-0x44cdc35e]
  40492e:	(bad)
  404932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404933:	pusha  
  404934:	xor    al,0x36
  404936:	scas   al,BYTE PTR es:[edi]
  404937:	enter  0xff70,0xd9
  40493b:	fsubr  QWORD PTR [eax+eiz*2-0x69]
  40493f:	les    ebx,FWORD PTR [esi-0x750f080c]
  404945:	pusha  
  404946:	call   0xd3156b49
  40494b:	mov    dl,bh
  40494d:	test   esi,ebp
  40494f:	add    al,0xa
  404951:	fistp  QWORD PTR [ecx+edx*4-0x26dceef4]
  404958:	dec    eax
  404959:	cmp    al,0xc1
  40495b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40495c:	add    eax,0xbb669691
  404961:	in     al,dx
  404962:	mov    al,ds:0xfd371781
  404967:	add    DWORD PTR [eax+0x71],edx
  40496a:	fwait
  40496b:	(bad)  
  40496c:	pop    ebx
  40496d:	sahf   
  40496e:	jnp    0x404978
  404970:	fisubr DWORD PTR [edx+0xdcb316a]
  404976:	adc    al,0x3d
  404978:	arpl   WORD PTR [edx+ebx*8+0x62c42864],bx
  40497f:	adc    al,0x22
  404981:	cmp    eax,0x7ae78d46
  404986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404987:	jns    0x4049dc
  404989:	pop    ss
  40498a:	jnp    0x4049d6
  40498c:	es mov dl,0x30
  40498f:	sbb    eax,0xf3689ec8
  404994:	aaa    
  404995:	or     BYTE PTR [ebx+0x29fe409c],0x1e
  40499c:	sub    al,0xc7
  40499e:	xor    eax,0x599c41c5
  4049a3:	test   al,0x8a
  4049a5:	(bad)  
  4049a6:	iret   
  4049a7:	pop    ss
  4049a8:	mov    ah,0xb0
  4049aa:	mov    ah,0x67
  4049ac:	setae  BYTE PTR [edx+ebp*1-0x7a330a17]
  4049b4:	dec    ebp
  4049b5:	lea    ebx,[ebp+0x67]
  4049b8:	aam    0x49
  4049ba:	jae    0x40493d
  4049bc:	jo     0x404a0c
  4049be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049bf:	and    DWORD PTR [edi+0x57],eax
  4049c2:	pop    es
  4049c3:	fdivr  QWORD PTR [ecx-0x38]
  4049c6:	js     0x40498b
  4049c8:	dec    ebp
  4049c9:	push   ebp
  4049ca:	sbb    BYTE PTR [esi+0x5b],bh
  4049cd:	sub    al,0x65
  4049cf:	inc    ebp
  4049d0:	aad    0x23
  4049d2:	push   esp
  4049d3:	sub    BYTE PTR [eax+0x32],0x87
  4049d7:	push   esp
  4049d8:	dec    edi
  4049d9:	in     eax,0xb1
  4049db:	adc    DWORD PTR ds:0x6dd436a0,eax
  4049e1:	cmp    ebx,DWORD PTR [edx-0x36dbb47a]
  4049e7:	out    0xfc,al
  4049e9:	inc    ebp
  4049ea:	sub    DWORD PTR [edi-0x50],eax
  4049ed:	xchg   ecx,eax
  4049ee:	rol    DWORD PTR [eax+0x210643f8],0x53
  4049f5:	fwait
  4049f6:	std    
  4049f7:	mov    eax,0x2ed82b34
  4049fc:	adc    al,0x95
  4049fe:	mov    dl,0xec
  404a00:	jo     0x40499e
  404a02:	data16 fidivr DWORD PTR [ebx-0x9dd42f3]
  404a09:	mov    BYTE PTR ss:[edx+0x25],ch
  404a0d:	test   eax,0xc314d046
  404a12:	cmp    eax,0x8e584191
  404a17:	dec    edi
  404a18:	(bad)  
  404a19:	cmc    
  404a1a:	repnz gs in al,0x80
  404a1e:	mov    ah,0xd8
  404a20:	int    0xe5
  404a22:	jmp    0x404a8b
  404a24:	xor    cl,BYTE PTR [ebx+esi*1-0x37adf352]
  404a2b:	lds    esi,FWORD PTR [eax-0xa92b3c0]
  404a31:	adc    al,0x5b
  404a33:	sub    DWORD PTR [eax-0x1b],edi
  404a36:	xchg   esi,eax
  404a37:	xor    BYTE PTR [edi-0x31],al
  404a3a:	jmp    0xd3e0:0x430043f1
  404a41:	inc    ebx
  404a42:	sbb    ebp,eax
  404a44:	mov    al,0x5a
  404a46:	sbb    BYTE PTR [esi-0x4061eec6],0x30
  404a4d:	xor    esp,DWORD PTR [eax]
  404a4f:	sbb    DWORD PTR [edx+0x12],0xb64c3909
  404a56:	pop    es
  404a57:	xor    esi,DWORD PTR [ecx]
  404a59:	sub    eax,esp
  404a5b:	or     esp,edi
  404a5d:	or     DWORD PTR [ecx-0x1a],0xe9f15f1d
  404a64:	mov    ch,0x94
  404a66:	mov    ebp,0xbb60f1a2
  404a6b:	dec    esi
  404a6c:	aad    0x40
  404a6e:	mov    esp,0xd6225462
  404a73:	cmp    ecx,DWORD PTR [ebp+ecx*4-0x30]
  404a77:	jo     0x404ad0
  404a79:	inc    esp
  404a7a:	imul   edx,edi,0x23
  404a7d:	(bad)  
  404a7e:	test   DWORD PTR [edx+eiz*8],0x57d94042
  404a85:	ins    DWORD PTR es:[edi],dx
  404a86:	call   0xcf8002fb
  404a8b:	or     al,0x2e
  404a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a8e:	mov    al,ds:0xd4ee9b44
  404a94:	mov    es,WORD PTR [eax+ecx*1-0x114bdc69]
  404a9b:	sub    eax,0x6cfc830
  404aa0:	sbb    DWORD PTR [edx+0x7a],0xffffff95
  404aa4:	stc    
  404aa5:	pop    ds
  404aa6:	shl    BYTE PTR [edx-0x55],0x93
  404aaa:	sbb    DWORD PTR [esi-0x59ef2dba],esp
  404ab0:	xchg   edi,eax
  404ab1:	pop    esi
  404ab2:	dec    ebp
  404ab3:	std    
  404ab4:	popa   
  404ab5:	ds ja  0x404a75
  404ab8:	dec    esp
  404ab9:	mov    eax,ds:0x1e259499
  404abe:	push   ecx
  404abf:	sbb    eax,0xf31c3b25
  404ac4:	fbstp  TBYTE PTR [esi-0x6d]
  404ac7:	or     DWORD PTR [ebx],0x3d
  404aca:	xchg   ebp,eax
  404acb:	gs inc ecx
  404acd:	sub    eax,0x339338a7
  404ad2:	lods   eax,DWORD PTR ds:[esi]
  404ad3:	mov    ebx,0xbc85ba5a
  404ad8:	inc    eax
  404ad9:	dec    ecx
  404ada:	fcmovne st,st(2)
  404adc:	xlat   BYTE PTR cs:[ebx]
  404ade:	cmp    edi,DWORD PTR [edx+0x39e61c5f]
  404ae4:	dec    ebx
  404ae5:	xor    eax,0x427f4f61
  404aea:	jg     0x404a75
  404aec:	fadd   DWORD PTR [bx]
  404aef:	push   edi
  404af0:	test   eax,0x33b1ad85
  404af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404af6:	popf   
  404af7:	push   0x47e1350e
  404afc:	inc    esp
  404afd:	clc    
  404afe:	rcl    BYTE PTR [ebx-0x72bc486e],0x86
  404b05:	pop    es
  404b06:	loopne 0x404b64
  404b08:	shr    edi,1
  404b0a:	or     BYTE PTR [esi],0xdf
  404b0d:	push   ss
  404b0e:	sahf   
  404b0f:	jmp    0x404b8b
  404b11:	sub    eax,0x359b5fb7
  404b16:	test   eax,0xcce52429
  404b1b:	xor    eax,0xbe7f2cde
  404b20:	pop    ecx
  404b21:	test   BYTE PTR [ecx-0x76],ah
  404b24:	dec    ebp
  404b25:	aaa    
  404b26:	mov    BYTE PTR es:[edx-0x7d],ah
  404b2a:	clc    
  404b2b:	or     DWORD PTR [esp+eiz*4+0x27f631d8],ecx
  404b32:	jb     0x404ba9
  404b34:	or     DWORD PTR [edi],eax
  404b36:	sbb    eax,ebp
  404b38:	in     eax,0x13
  404b3a:	cmp    edi,DWORD PTR [esi-0x2a]
  404b3d:	or     al,BYTE PTR [edi]
  404b3f:	js     0x404acb
  404b41:	mov    ds:0x8b9b3d0,eax
  404b46:	or     al,0x7e
  404b48:	ss dec ebp
  404b4a:	mov    ah,0xd3
  404b4c:	pushf  
  404b4d:	into   
  404b4e:	in     eax,dx
  404b4f:	and    eax,0xd2af8cea
  404b54:	sub    BYTE PTR [ecx-0xc3bc485],bh
  404b5a:	sub    dh,BYTE PTR [edi-0x6f71b6cb]
  404b60:	cmp    esi,ebp
  404b62:	adc    al,0x95
  404b64:	retf   
  404b65:	sbb    edx,DWORD PTR [ebx]
  404b67:	das    
  404b68:	jle    0x404be0
  404b6a:	xchg   DWORD PTR [edi-0x991a6e0],edx
  404b70:	pushf  
  404b71:	xor    bl,BYTE PTR [ebx+edx*1]
  404b74:	pop    esp
  404b75:	inc    edi
  404b76:	jmp    0xd5c0:0xd004482
  404b7d:	pop    edi
  404b7e:	cmc    
  404b7f:	xchg   ebx,eax
  404b80:	in     al,0x0
  404b82:	fld    DWORD PTR fs:[ebx+0x32]
  404b86:	sub    edx,DWORD PTR [eax]
  404b88:	sbb    BYTE PTR [ecx+esi*2-0x2eb413cd],bl
  404b8f:	dec    edi
  404b90:	js     0x404ba0
  404b92:	ja     0x404b3c
  404b94:	jb     0x404b24
  404b96:	cdq    
  404b97:	cmp    al,bl
  404b99:	jmp    0x1b9c5c9d
  404b9e:	enter  0x1e7f,0xe7
  404ba2:	sbb    BYTE PTR [edi+0x1d],al
  404ba5:	jl     0x404bcf
  404ba7:	inc    esp
  404ba8:	xor    DWORD PTR [ebx-0x4b],edi
  404bab:	es je  0x404bac
  404bae:	mov    cl,0xca
  404bb0:	ja     0x404c1b
  404bb2:	mov    ecx,0x5acecbc5
  404bb7:	rcr    DWORD PTR [esi+esi*2],1
  404bba:	xchg   ecx,eax
  404bbb:	out    0x73,al
  404bbd:	cdq    
  404bbe:	sbb    BYTE PTR [ecx+0x67],ch
  404bc1:	fdivr  st(7),st
  404bc3:	add    dh,ch
  404bc5:	dec    eax
  404bc6:	push   edi
  404bc7:	je     0x404bda
  404bc9:	shl    DWORD PTR [ecx-0x46],0x4
  404bcd:	mov    ebp,0x9e632f20
  404bd2:	push   0x449dfb6d
  404bd7:	cmp    dl,BYTE PTR ds:0x6b85e290
  404bdd:	xor    ebp,DWORD PTR [edi+0x16]
  404be0:	sahf   
  404be1:	and    ecx,DWORD PTR [ecx+esi*2]
  404be4:	in     al,dx
  404be5:	es inc ecx
  404be7:	and    BYTE PTR [ebp-0x7dc8fb93],0xbf
  404bee:	push   ss
  404bef:	mov    cl,0x31
  404bf1:	test   BYTE PTR [esp+edi*2-0x2b],dh
  404bf5:	pop    ss
  404bf6:	out    0xb6,eax
  404bf8:	out    0xfd,al
  404bfa:	loope  0x404b80
  404bfc:	pop    edx
  404bfd:	test   al,0x30
  404bff:	cmc    
  404c00:	inc    esi
  404c01:	mov    bl,0x89
  404c03:	xchg   ebp,eax
  404c04:	cmp    dl,BYTE PTR [ecx+edi*4-0x5d]
  404c08:	retf   0xe2ea
  404c0b:	mov    esi,0x69c56a97
  404c10:	pushf  
  404c11:	inc    eax
  404c12:	aad    0x38
  404c14:	scas   eax,DWORD PTR es:[edi]
  404c15:	retf   0x94c2
  404c18:	sahf   
  404c19:	imul   edi,DWORD PTR [ebx],0xffffff89
  404c1c:	mov    edi,0x1e485b26
  404c21:	scas   al,BYTE PTR es:[edi]
  404c22:	inc    esi
  404c23:	mov    dl,0x22
  404c25:	xor    bl,BYTE PTR [edi]
  404c27:	shl    BYTE PTR [ebx],cl
  404c29:	push   cs
  404c2a:	push   0x7713d201
  404c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c30:	adc    al,0xac
  404c32:	aad    0x10
  404c34:	inc    edi
  404c35:	popa   
  404c36:	add    edx,esi
  404c38:	pop    ebx
  404c39:	xor    eax,0xd1c4c7af
  404c3e:	test   al,0xbf
  404c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c41:	adc    BYTE PTR [ecx+0x7f3a974a],ch
  404c47:	in     al,0xc1
  404c49:	mov    eax,0x87dadd3e
  404c4e:	js     0x404c74
  404c50:	out    dx,eax
  404c51:	pop    ebp
  404c52:	mov    edx,0x98c40c99
  404c57:	fcomp  QWORD PTR [ebx-0x42559875]
  404c5d:	mov    edi,esi
  404c5f:	cmc    
  404c60:	cmp    eax,0x5bd14a39
  404c65:	retf   
  404c66:	and    DWORD PTR [eax],ebp
  404c68:	cmp    BYTE PTR [edx],ah
  404c6a:	add    eax,0xd3abb8a5
  404c6f:	dec    edx
  404c70:	push   0xffffffb4
  404c72:	(bad)  
  404c73:	ss mov bl,0x9d
  404c76:	out    dx,eax
  404c77:	or     DWORD PTR [ebp+0x61b72e40],ecx
  404c7d:	sbb    bl,al
  404c7f:	mov    ecx,0x407614a8
  404c84:	dec    eax
  404c85:	xor    eax,0x7ce700cb
  404c8a:	pop    ecx
  404c8b:	mov    ebp,DWORD PTR [ebx+eax*4]
  404c8e:	test   esi,0x4f388671
  404c94:	add    BYTE PTR [ebx-0x4d],bl
  404c97:	(bad)  
  404c98:	out    0x79,eax
  404c9a:	xchg   edi,eax
  404c9b:	into   
  404c9c:	loope  0x404cee
  404c9e:	loop   0x404c7d
  404ca0:	inc    eax
  404ca1:	retf   
  404ca2:	adc    ch,al
  404ca4:	aam    0x71
  404ca6:	je     0x404d0e
  404ca8:	push   esi
  404ca9:	enter  0x8407,0x7b
  404cad:	or     BYTE PTR [edi],ch
  404caf:	jecxz  0x404c3e
  404cb1:	mov    bl,0xdb
  404cb3:	xor    DWORD PTR [ebx+0x33b2366a],0xc26dffe4
  404cbd:	(bad)  [edx+0x41608d9]
  404cc3:	xor    BYTE PTR [ebp+0x70],ah
  404cc6:	dec    edi
  404cc7:	ins    DWORD PTR es:[edi],dx
  404cc8:	imul   ebp,DWORD PTR [eax-0x275f5a13],0xffffff97
  404ccf:	push   esp
  404cd0:	not    DWORD PTR [ebx+0x4c1a17cd]
  404cd6:	xchg   ebx,eax
  404cd7:	outs   dx,DWORD PTR ds:[esi]
  404cd8:	or     DWORD PTR [eax+0x60],eax
  404cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cdc:	mov    ebp,0x395cf829
  404ce1:	nop
  404ce2:	in     al,dx
  404ce3:	cs leave 
  404ce5:	xor    ebx,esi
  404ce7:	adc    eax,0xdded76ed
  404cec:	pop    ss
  404ced:	dec    ebp
  404cee:	or     WORD PTR [ecx+0x29829b54],0x25
  404cf6:	fldcw  WORD PTR [ecx+0x4]
  404cf9:	neg    BYTE PTR [edx+0x3e]
  404cfc:	scas   al,BYTE PTR es:[edi]
  404cfd:	stos   DWORD PTR es:[edi],eax
  404cfe:	mov    ecx,0x424ea801
  404d03:	popf   
  404d04:	xchg   ebx,eax
  404d05:	(bad)  
  404d06:	sbb    al,0xcd
  404d08:	call   0xce2a:0x992c10cf
  404d0f:	shl    DWORD PTR [eax-0x53c58c15],0x25
  404d16:	or     DWORD PTR [eax+0x61],esi
  404d19:	adc    DWORD PTR ds:0x9db50dab,ebx
  404d1f:	add    DWORD PTR [esi],ebx
  404d21:	(bad)  
  404d22:	dec    esi
  404d23:	in     eax,dx
  404d24:	add    dh,BYTE PTR [edx-0x47]
  404d27:	cmovl  esi,DWORD PTR [eax]
  404d2a:	mov    al,ds:0x91dc517a
  404d2f:	cmp    eax,0x6afc63de
  404d34:	lea    esp,[esi+0x62a0258]
  404d3a:	jno    0x404ce7
  404d3c:	jae    0x404d62
  404d3e:	lods   al,BYTE PTR ds:[esi]
  404d3f:	push   0x55
  404d41:	push   0x8adcacd2
  404d46:	cmc    
  404d47:	inc    DWORD PTR [esi]
  404d49:	iret   
  404d4a:	inc    ebp
  404d4b:	les    ebx,FWORD PTR [edi-0x13f47ce4]
  404d51:	push   ss
  404d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d53:	test   BYTE PTR ds:0x7082171a,cl
  404d59:	and    esp,DWORD PTR [eax+esi*1-0x25620ddd]
  404d60:	xor    al,0x85
  404d62:	xchg   BYTE PTR [ecx-0x27],bl
  404d65:	mov    dl,0x71
  404d67:	jmp    0xde25510d
  404d6c:	in     al,dx
  404d6d:	sbb    al,0x75
  404d6f:	dec    ecx
  404d70:	cs je  0x404de5
  404d73:	inc    edx
  404d74:	out    dx,eax
  404d75:	push   eax
  404d76:	scas   eax,DWORD PTR es:[edi]
  404d77:	sbb    bh,BYTE PTR [edi-0x74fcda7e]
  404d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d7e:	jl     0x404d35
  404d80:	imul   esp,esi,0x6364bea4
  404d86:	nop
  404d87:	mov    ds:0x616f344c,al
  404d8c:	cmp    esi,DWORD PTR [edi-0x57777dc6]
  404d92:	jmp    0xd684:0xf16e030
  404d99:	adc    al,0x19
  404d9b:	sbb    DWORD PTR [esi+0x3a5f3c08],ebp
  404da1:	jecxz  0x404d35
  404da3:	retf   0x65eb
  404da6:	scas   eax,DWORD PTR es:[edi]
  404da7:	popw   es
  404da9:	addr16 ret 0x2a3c
  404dad:	inc    ebx
  404dae:	xchg   ebx,eax
  404daf:	inc    ecx
  404db0:	xchg   ebx,eax
  404db1:	lea    ebx,[eax-0x58723a32]
  404db7:	mul    edx
  404db9:	xchg   edx,eax
  404dba:	jge    0x404de3
  404dbc:	les    edx,FWORD PTR fs:[ecx+0x38]
  404dc0:	cmc    
  404dc1:	retf   
  404dc2:	cmp    eax,0xd47e9a63
  404dc7:	lods   eax,DWORD PTR ds:[esi]
  404dc8:	call   0x58c04791
  404dcd:	popa   
  404dce:	call   0x8ea8:0xf6ba606b
  404dd5:	lds    edx,FWORD PTR [ecx+edi*8]
  404dd8:	jne    0x404ddd
  404dda:	sbb    cl,BYTE PTR [ebx]
  404ddc:	adc    al,0x60
  404dde:	pop    ebp
  404ddf:	pop    ds
  404de0:	jp     0x404da4
  404de2:	iret   
  404de3:	jecxz  0x404e5e
  404de5:	push   ss
  404de6:	test   al,0xf4
  404de8:	cmp    edi,esi
  404dea:	pop    esi
  404deb:	ret    
  404dec:	imul   eax,DWORD PTR [ebx+0x7a2007c8],0xe9c706fb
  404df6:	ins    BYTE PTR es:[edi],dx
  404df7:	pop    ebx
  404df8:	mov    ebx,ecx
  404dfa:	aam    0x5e
  404dfc:	dec    ebp
  404dfd:	sbb    dl,dh
  404dff:	xchg   esi,eax
  404e01:	stos   BYTE PTR es:[edi],al
  404e02:	push   eax
  404e03:	jne    0x404ddd
  404e05:	or     ecx,0x2b
  404e08:	push   ebx
  404e0a:	inc    edx
  404e0b:	hlt    
  404e0c:	mov    DWORD PTR [esi-0xe],0x21f2bef5
  404e13:	cmp    al,0xe2
  404e15:	rep ins DWORD PTR es:[edi],dx
  404e17:	(bad)  
  404e18:	aad    0xc0
  404e1a:	arpl   sp,cx
  404e1c:	mov    al,ds:0xb48434d7
  404e21:	sub    ecx,esi
  404e23:	jmp    0xc2b6:0x9d23836c
  404e2a:	pop    ecx
  404e2b:	fmul   QWORD PTR [ecx-0x59]
  404e2e:	push   edx
  404e2f:	pushf  
  404e30:	outs   dx,BYTE PTR ds:[esi]
  404e31:	mov    esp,0xd58ddbcd
  404e36:	lea    ebp,[esi+0x50]
  404e39:	xchg   ebx,eax
  404e3a:	xlat   BYTE PTR ds:[ebx]
  404e3b:	inc    edx
  404e3c:	mov    ds:0x15175c6a,eax
  404e41:	mov    ebx,0x2b7770ae
  404e46:	jle    0x404dd3
  404e48:	bound  esp,QWORD PTR [ecx-0x3]
  404e4b:	rcl    DWORD PTR [eax],cl
  404e4d:	jno    0x404eaf
  404e4f:	and    al,0xd5
  404e51:	shr    BYTE PTR [eax+0x55cdf0ad],0x8a
  404e58:	sub    DWORD PTR [ecx+0x62],esp
  404e5b:	mov    al,ds:0xb2f2da02
  404e60:	dec    eax
  404e61:	mov    ecx,0xe51a1cfe
  404e66:	xlat   BYTE PTR ds:[ebx]
  404e67:	lahf   
  404e68:	mov    ecx,0xe9d8a7c3
  404e6d:	test   DWORD PTR [edx-0x102a30ba],0xd4cd132f
  404e77:	xchg   ah,ah
  404e79:	and    al,0xe1
  404e7b:	sub    ecx,DWORD PTR [edx+0x65]
  404e7e:	into   
  404e7f:	sbb    ch,BYTE PTR [edx+0x6c]
  404e82:	adc    eax,DWORD PTR [edx]
  404e84:	mov    edi,0xebd18afb
  404e89:	jo     0x404e86
  404e8b:	int3   
  404e8c:	popa   
  404e8d:	out    dx,eax
  404e8e:	xor    dl,BYTE PTR [esi+0x4b]
  404e91:	fwait
  404e92:	ins    DWORD PTR es:[edi],dx
  404e93:	fmul   st(1),st
  404e95:	mov    ecx,0xf6be3a6d
  404e9a:	pop    ebx
  404e9b:	lea    edx,[edx]
  404e9d:	sahf   
  404e9e:	sbb    esi,ecx
  404ea0:	add    eax,0x90f28428
  404ea5:	push   0xc1eb6253
  404eaa:	and    al,0x64
  404eac:	(bad)  
  404ead:	mov    ebx,0xc33bda6e
  404eb2:	and    eax,0x10ccc46b
  404eb7:	jge    0x404f34
  404eb9:	fisttp QWORD PTR [ebp+0x673bd210]
  404ebf:	mov    bh,0x29
  404ec1:	sbb    cl,BYTE PTR [esi-0xf]
  404ec4:	mov    ecx,eax
  404ec6:	adc    eax,0xd7c561c3
  404ecb:	sbb    bl,ah
  404ecd:	aas    
  404ece:	cmc    
  404ecf:	or     BYTE PTR [ecx],0x5b
  404ed2:	mov    eax,ds:0x9176d784
  404ed7:	int    0x4a
  404ed9:	loopne 0x404f2f
  404edb:	add    eax,0x3db98749
  404ee0:	das    
  404ee1:	mov    eax,0xc5a78ed1
  404ee6:	call   0xf397b77e
  404eeb:	jb     0x404f2a
  404eed:	dec    esi
  404eee:	push   ebx
  404eef:	xchg   ebx,edx
  404ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ef2:	stc    
  404ef3:	mov    eax,0xd2f900da
  404ef8:	dec    eax
  404ef9:	loop   0x404f24
  404efb:	inc    ebx
  404efc:	push   ds
  404efd:	mov    al,0xfb
  404eff:	and    al,0x71
  404f01:	xor    ebp,DWORD PTR [esi-0x129f8ddf]
  404f07:	cmp    eax,0x604dd091
  404f0c:	mov    ds:0x9fd44e3d,al
  404f11:	out    dx,eax
  404f12:	sub    al,0x3
  404f14:	shl    edi,0x57
  404f17:	nop
  404f18:	xchg   esi,eax
  404f19:	rol    BYTE PTR [ecx+edx*8],cl
  404f1c:	mov    eax,ds:0x4fdd756d
  404f21:	dec    esp
  404f22:	add    DWORD PTR [ecx+0x64],0x93cb26ce
  404f29:	aas    
  404f2a:	test   eax,0x2fe66485
  404f2f:	mov    eax,DWORD PTR [ebp-0x4]
  404f32:	mov    edi,DWORD PTR [ebp-0x8]
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0xb18ef58a
  405700:	push   ecx
  405701:	mov    edx,edi
  405703:	pop    edi
  405704:	jp     0x405780
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	jno    0x405723
  40570c:	fndisi(8087 only) 
  40570e:	mov    ebx,0xc5e0fafd
  405713:	push   cs
  405714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405715:	in     eax,0x54
  405717:	sbb    edi,DWORD PTR [ecx]
  405719:	add    DWORD PTR [edi-0x43],0x12
  40571d:	adc    edx,DWORD PTR [edi+eax*8-0x407e24d6]
  405724:	inc    ebp
  405725:	xchg   ebp,eax
  405726:	inc    edx
  405727:	mov    cl,0xa0
  405729:	sub    cl,0xfa
  40572c:	xchg   ebp,eax
  40572d:	jae    0x4056d5
  40572f:	push   ebx
  405730:	gs and eax,0x2310997c
  405736:	adc    al,0xa
  405738:	aaa    
  405739:	fisttp WORD PTR [ebx]
  40573b:	dec    esp
  40573c:	shr    BYTE PTR [eax],1
  40573e:	cmc    
  40573f:	iret   
  405740:	cmp    DWORD PTR [esi-0x6a],eax
  405743:	dec    edx
  405744:	dec    edi
  405745:	loope  0x40570b
  405747:	out    dx,eax
  405748:	pop    ebp
  405749:	push   esi
  40574a:	jmp    0x4056ed
  40574c:	(bad)  
  40574d:	and    dl,BYTE PTR [edx+eax*1]
  405750:	dec    edx
  405751:	je     0x4056d7
  405753:	mov    ah,0xc1
  405755:	adc    ebp,DWORD PTR [edi+0x49]
  405758:	scas   al,BYTE PTR es:[edi]
  405759:	sbb    al,BYTE PTR [esi]
  40575b:	out    dx,al
  40575c:	lods   al,BYTE PTR ds:[esi]
  40575d:	xchg   edi,eax
  40575e:	sub    al,BYTE PTR [ebp-0x43]
  405761:	lahf   
  405762:	push   ecx
  405763:	call   0x93321233
  405768:	cmp    esi,DWORD PTR [eax+0x2cca30a2]
  40576e:	aam    0x84
  405770:	jnp    0x405771
  405772:	es lahf 
  405774:	xchg   edx,eax
  405775:	push   ebx
  405776:	jge    0x405767
  405778:	lahf   
  405779:	inc    ebp
  40577a:	loopne 0x405707
  40577c:	hlt    
  40577d:	sbb    bl,al
  40577f:	repnz xchg ebx,eax
  405781:	jb     0x40578b
  405783:	cmp    ah,BYTE PTR [edi+0x42ef3e53]
  405789:	and    DWORD PTR ds:0x6afa9457,ebx
  40578f:	call   0xd5d7:0xfd2e6027
  405796:	push   cs
  405797:	sbb    DWORD PTR [eax-0x9654f54],edx
  40579d:	lock jmp 0x7e3d:0x39801333
  4057a5:	mov    al,ds:0x25642f4b
  4057aa:	repz sbb DWORD PTR [ebp+0x4fb96ab3],0x61
  4057b2:	push   ebp
  4057b3:	add    al,0x9
  4057b5:	es add eax,0xaca6dc0d
  4057bb:	mov    esi,0x10a7b31c
  4057c0:	icebp  
  4057c1:	jbe    0x405747
  4057c3:	xor    al,0x2f
  4057c5:	repnz fistp DWORD PTR [ecx-0x1b83ece8]
  4057cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057cd:	iret   
  4057ce:	mov    eax,ds:0xdd5cff71
  4057d3:	mov    esi,0xb78ee293
  4057d8:	add    ebp,DWORD PTR [ebx+0x2]
  4057db:	sub    BYTE PTR [edx],dl
  4057dd:	mov    dh,0xf
  4057df:	cdq    
  4057e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057e1:	fisttp QWORD PTR [eax+0x3f]
  4057e4:	js     0x405840
  4057e6:	jmp    FWORD PTR [ebx+0x68a6488]
  4057ec:	jbe    0x4057f2
  4057ee:	loop   0x40582d
  4057f0:	int    0x8f
  4057f2:	push   edx
  4057f3:	add    dh,BYTE PTR es:[eax]
  4057f6:	fnstcw WORD PTR [ebx+0x40]
  4057f9:	(bad)  
  4057fa:	mov    ebp,0xf3eabd53
  4057ff:	daa    
  405800:	in     eax,0x3b
  405802:	xchg   ecx,eax
  405803:	and    al,0x5d
  405805:	mov    dh,0x55
  405807:	packssdw mm7,QWORD PTR [ecx+0x60db61cf]
  40580e:	and    ecx,0x45
  405811:	xor    bl,BYTE PTR [ecx]
  405813:	call   FWORD PTR [edx]
  405815:	xchg   edx,eax
  405816:	add    bh,bl
  405818:	xor    dh,ah
  40581a:	sub    ch,cl
  40581c:	hlt    
  40581d:	mov    dl,bl
  40581f:	mov    esi,0xad969180
  405824:	out    dx,eax
  405825:	sub    esi,DWORD PTR [esi]
  405827:	add    BYTE PTR [edx+ebx*4-0x2c],dh
  40582b:	out    dx,al
  40582c:	(bad)  
  40582d:	pop    ss
  40582e:	pusha  
  40582f:	ins    DWORD PTR es:[edi],dx
  405830:	bound  esp,QWORD PTR [edi+0x622a2b0f]
  405836:	xchg   edi,eax
  405837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405838:	cmp    BYTE PTR [ebp+0x4c],0x3
  40583c:	dec    ecx
  40583d:	aam    0x5
  40583f:	call   0xf30c6ce
  405844:	jb     0x40580d
  405846:	xchg   ecx,eax
  405847:	push   ebp
  405848:	dec    edx
  405849:	sahf   
  40584a:	pop    ecx
  40584b:	inc    ebx
  40584c:	push   es
  40584d:	not    BYTE PTR [ebp+0x27bad593]
  405853:	mov    ebp,DWORD PTR [ebx-0x5e]
  405856:	xlat   BYTE PTR ds:[ebx]
  405857:	sub    BYTE PTR [ecx-0x7f],0xb
  40585b:	fwait
  40585c:	jecxz  0x405837
  40585e:	push   ds
  40585f:	jno    0x405855
  405861:	(bad)
  405865:	xor    esp,DWORD PTR [ebp-0xf2592c8]
  40586b:	neg    BYTE PTR [edx]
  40586d:	jne    0x4058b1
  40586f:	xor    edx,DWORD PTR [edi]
  405871:	jge    0x4058c0
  405873:	mov    edi,0x8e484672
  405878:	pushf  
  405879:	fimul  WORD PTR [ebp-0x14]
  40587c:	or     ch,ch
  40587e:	idiv   BYTE PTR [ebx-0x7fcaefc0]
  405884:	popa   
  405885:	sbb    eax,0x8799ff6b
  40588a:	xlat   BYTE PTR ds:[ebx]
  40588b:	imul   esp,DWORD PTR [ebx-0x55],0xfffffffa
  40588f:	xor    BYTE PTR [edi+0x54599eee],cl
  405895:	mov    ah,0xfb
  405897:	mov    esp,0x245b7856
  40589c:	mov    ah,0x88
  40589e:	in     al,0x7c
  4058a0:	outs   dx,DWORD PTR ds:[esi]
  4058a1:	mov    BYTE PTR [ebp+0x31939e61],ah
  4058a7:	js     0x40590b
  4058a9:	mov    cl,0x62
  4058ab:	ja     0x40584f
  4058ad:	xor    esp,DWORD PTR [esi]
  4058af:	(bad)  
  4058b0:	xor    bl,BYTE PTR [eax+0x57]
  4058b3:	popf   
  4058b4:	or     al,BYTE PTR [esi+eax*8+0x10e5c9fa]
  4058bb:	adc    eax,0xed6f297f
  4058c0:	cdq    
  4058c1:	mov    ecx,DWORD PTR [ecx+0x1507d483]
  4058c7:	lock inc edi
  4058c9:	add    DWORD PTR [eax+ebp*4],0xffffff9a
  4058cd:	out    dx,al
  4058ce:	or     al,0x4a
  4058d0:	add    ch,BYTE PTR [esi-0x62932b5c]
  4058d6:	lods   al,BYTE PTR ds:[esi]
  4058d7:	ja     0x405897
  4058d9:	adc    DWORD PTR [esi+edi*8-0x8360f58],ebp
  4058e0:	mov    ds:0x578f8764,eax
  4058e5:	mov    al,ds:0x6801f0b0
  4058ea:	fs enter 0x23bd,0xf1
  4058ef:	mov    edx,0x56261869
  4058f4:	arpl   WORD PTR [ebx+0x5944a378],cx
  4058fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058fb:	popa   
  4058fc:	inc    eax
  4058fd:	out    dx,al
  4058fe:	push   ebp
  4058ff:	jbe    0x40596a
  405901:	inc    edx
  405902:	push   edx
  405903:	adc    cl,dl
  405905:	fbld   TBYTE PTR [eax+0x540032b3]
  40590b:	mov    BYTE PTR es:[edx+esi*4+0x343b0c93],ch
  405913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405914:	add    ecx,ecx
  405916:	mov    edx,0x2fd1cab
  40591b:	sub    DWORD PTR [esi+ecx*8],ebx
  40591e:	ret    
  40591f:	lods   eax,DWORD PTR ds:[esi]
  405920:	ds adc al,0xcf
  405923:	(bad)  
  405924:	inc    esp
  405925:	mov    ebx,0xbfa64f7
  40592a:	out    0xb1,eax
  40592c:	clc    
  40592d:	lahf   
  40592e:	and    eax,0x4498145
  405933:	shl    dl,0xa7
  405936:	lock sub al,BYTE PTR [esi+0x38d57536]
  40593d:	ins    DWORD PTR es:[edi],dx
  40593e:	rol    BYTE PTR [eax+ebx*1-0x7e],0x34
  405943:	dec    ecx
  405944:	out    0xa8,eax
  405946:	mov    al,0x25
  405948:	sbb    al,0x20
  40594a:	pop    esi
  40594b:	pop    esi
  40594c:	cmc    
  40594d:	and    eax,0xa487b77c
  405952:	mov    dl,0x7d
  405954:	sbb    BYTE PTR [ecx],ch
  405956:	sti    
  405957:	push   edi
  405958:	push   esp
  405959:	stos   DWORD PTR es:[edi],eax
  40595a:	bound  ebp,QWORD PTR [ebx+0x5a5a0df7]
  405960:	ret    0xc4f4
  405963:	into   
  405964:	mov    al,0x73
  405966:	mul    ebx
  405968:	enter  0xf250,0x61
  40596c:	inc    esi
  40596d:	push   cs
  40596e:	cld    
  40596f:	mov    edi,0x5b24a898
  405974:	mov    cl,0x6e
  405976:	mov    ebx,0xe7a8197a
  40597b:	sbb    al,0xff
  40597d:	sub    al,0x29
  40597f:	mov    ds:0xa805f60f,al
  405984:	dec    edx
  405985:	std    
  405986:	jle    0x405981
  405988:	lock jb 0x4059ca
  40598b:	cmp    DWORD PTR [esi-0x3f70c6a4],ebp
  405991:	jl     0x405a0f
  405993:	jns    0x40592a
  405995:	dec    DWORD PTR [ebx]
  405997:	mov    ebp,0x1405dec4
  40599c:	loopne 0x405932
  40599e:	sar    ecx,1
  4059a0:	dec    edx
  4059a1:	dec    esp
  4059a2:	in     eax,dx
  4059a3:	cmp    DWORD PTR [esi+0x1b],esp
  4059a6:	dec    edx
  4059a7:	cmp    dl,BYTE PTR [esi]
  4059a9:	out    0x7a,eax
  4059ab:	jbe    0x4059b0
  4059ad:	mov    eax,0x5c203ab
  4059b2:	jmp    0x3de9da64
  4059b7:	xchg   esi,eax
  4059b8:	mov    ecx,DWORD PTR [ebp+0x2]
  4059bb:	out    0x50,eax
  4059bd:	std    
  4059be:	dec    edi
  4059c0:	ins    BYTE PTR es:[edi],dx
  4059c1:	or     esi,edx
  4059c3:	jnp    0x405962
  4059c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059c6:	pop    ebp
  4059c7:	into   
  4059c8:	mov    DWORD PTR [edi],ecx
  4059ca:	mov    al,ss:0x641f4d3d
  4059d0:	xlat   BYTE PTR ds:[ebx]
  4059d1:	test   eax,0xf8bbf1a6
  4059d6:	push   ds
  4059d7:	mov    ds:0x6269d04f,eax
  4059dc:	pusha  
  4059dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059de:	ss aas 
  4059e0:	sub    al,0x2d
  4059e2:	xchg   esp,eax
  4059e3:	or     eax,0x8bbc9b5f
  4059e8:	outs   dx,BYTE PTR ds:[esi]
  4059e9:	dec    ebx
  4059ea:	loope  0x405a41
  4059ec:	cld    
  4059ed:	out    0xd,eax
  4059ef:	add    bl,BYTE PTR ds:0x20fe5f7f
  4059f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059f6:	jg     0x4059ea
  4059f8:	cs fwait
  4059fa:	mov    dl,0x17
  4059fc:	(bad)  [edx+0x10b050c2]
  405a02:	and    BYTE PTR [esi-0x2],bh
  405a05:	ror    BYTE PTR [edx-0x4],1
  405a08:	outs   dx,BYTE PTR ds:[esi]
  405a09:	adc    eax,0xc408edc4
  405a0e:	mov    edx,0x6f6ce8cf
  405a13:	int    0xdc
  405a15:	jo     0x4059cb
  405a17:	test   bh,0x36
  405a1a:	mov    ch,0x9f
  405a1c:	push   ebx
  405a1d:	mov    esi,0x788416d3
  405a22:	jo     0x4059a6
  405a24:	push   ss
  405a25:	cmc    
  405a26:	cmp    al,0x5b
  405a28:	or     DWORD PTR [edi-0xdbd8907],edi
  405a2e:	or     DWORD PTR [eax+0x186c7a2d],edx
  405a34:	mov    edx,0xee444de6
  405a39:	in     eax,0x8d
  405a3b:	enter  0xcf4f,0x42
  405a3f:	mov    al,ds:0xcb2a1739
  405a44:	push   edx
  405a45:	mov    ah,0xca
  405a47:	idiv   BYTE PTR [ebx]
  405a49:	stos   BYTE PTR es:[edi],al
  405a4a:	add    eax,0x6e5aaa63
  405a4f:	jp     0x405aba
  405a51:	(bad)  
  405a53:	es js  0x405ace
  405a56:	ror    al,0x3f
  405a59:	sahf   
  405a5a:	ins    BYTE PTR es:[edi],dx
  405a5b:	js     0x405a50
  405a5d:	js     0x405a0c
  405a5f:	call   0xd5fb:0x2260bc9d
  405a66:	retf   0xdb56
  405a69:	sub    BYTE PTR [esi-0x638c9fe5],ch
  405a6f:	(bad)  [eax+0x649e6006]
  405a75:	daa    
  405a76:	sub    cl,BYTE PTR [ebx-0x1c]
  405a79:	div    DWORD PTR [ecx+ebx*1]
  405a7c:	(bad)  
  405a7d:	out    0xf1,eax
  405a7f:	adc    DWORD PTR ds:0xef553dbf,eax
  405a85:	or     al,0x25
  405a87:	inc    edx
  405a88:	sub    DWORD PTR ds:0x2bf2b9a7,ebp
  405a8e:	xor    BYTE PTR [edi],0xc4
  405a91:	jo     0x405a9a
  405a93:	sbb    eax,0x7515046a
  405a98:	mov    dl,0x4c
  405a9a:	sub    eax,0x2a8ac2c2
  405a9f:	add    eax,0x66563673
  405aa4:	jbe    0x405aed
  405aa6:	cdq    
  405aa7:	jmp    0x405aec
  405aa9:	cmp    DWORD PTR [ebp-0x41c62d08],esp
  405aaf:	cwde   
  405ab0:	push   eax
  405ab1:	pop    edi
  405ab2:	push   edx
  405ab3:	push   edi
  405ab4:	retf   0x8f47
  405ab7:	ss cld 
  405ab9:	inc    ecx
  405aba:	loop   0x405b16
  405abc:	pop    ecx
  405abd:	dec    edx
  405abe:	inc    esi
  405abf:	ss push ds
  405ac1:	ficomp DWORD PTR [esi+0x5a]
  405ac4:	or     eax,0xdb1ea2de
  405ac9:	popf   
  405aca:	test   ch,0x3c
  405acd:	dec    edx
  405ace:	mov    eax,0x358211e
  405ad3:	mov    eax,0xa8deb863
  405ad8:	mov    ch,0x55
  405ada:	cmp    ch,BYTE PTR [ebp+0x7c]
  405add:	popa   
  405ade:	add    BYTE PTR [edx+0xaa13b97],bl
  405ae4:	(bad)  
  405ae5:	mov    eax,0x9b8fda45
  405aea:	lods   eax,DWORD PTR ds:[esi]
  405aeb:	(bad)  
  405aec:	outs   dx,BYTE PTR ds:[esi]
  405aed:	sbb    eax,0x2a1911a7
  405af2:	popf   
  405af3:	pop    ss
  405af4:	sbb    BYTE PTR [ebx+ebp*4+0x21],ch
  405af8:	int    0x68
  405afa:	pop    esi
  405afb:	int3   
  405afc:	shr    DWORD PTR [ecx-0x66af7f0],cl
  405b02:	inc    edi
  405b03:	inc    esi
  405b04:	inc    edi
  405b05:	mov    esi,0xd344a54e
  405b0a:	es loope 0x405b89
  405b0d:	mov    BYTE PTR [edi-0x7d39f88d],ch
  405b13:	es leave 
  405b15:	dec    ebp
  405b16:	pop    ss
  405b17:	mov    esp,0xe186f198
  405b1c:	xchg   ebp,eax
  405b1d:	cmp    dl,dl
  405b1f:	lock jl 0x405b12
  405b22:	mov    dl,al
  405b24:	pop    ss
  405b25:	and    ebp,ebx
  405b27:	out    0xb5,al
  405b29:	jp     0x405b42
  405b2b:	mov    al,ds:0xa6e81f98
  405b30:	pop    ebp
  405b31:	inc    edi
  405b32:	push   ebx
  405b33:	xchg   ebx,eax
  405b34:	std    
  405b35:	jnp    0x405b22
  405b37:	xchg   esi,eax
  405b38:	lods   al,BYTE PTR ds:[esi]
  405b39:	mov    eax,0x1d139691
  405b3e:	xor    eax,0xedf28993
  405b43:	(bad)  
  405b44:	sub    DWORD PTR ds:0x99316d7,esi
  405b4a:	mov    bh,0xfc
  405b4c:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b4e:	sbb    al,0x5c
  405b50:	int    0x55
  405b52:	push   esp
  405b53:	aad    0xcd
  405b55:	mov    eax,0x97688f92
  405b5a:	push   ebp
  405b5b:	push   ebp
  405b5c:	add    eax,0x7d9451e9
  405b61:	jns    0x405b50
  405b63:	loop   0x405b6e
  405b65:	cld    
  405b66:	bound  ebx,QWORD PTR [edi-0x64]
  405b69:	arpl   ax,sp
  405b6b:	stos   BYTE PTR es:[edi],al
  405b6c:	mov    esi,0xec9c9fcd
  405b71:	and    eax,0x268412f
  405b76:	js     0x405b6b
  405b78:	(bad)  
  405b79:	popa   
  405b7a:	add    cl,BYTE PTR [ebp-0x1c815da5]
  405b80:	or     ebx,0x8c042cd1
  405b86:	push   ebx
  405b87:	cmp    eax,DWORD PTR [esi]
  405b89:	jmp    0x4350:0x69da8240
  405b90:	jle    0x405c10
  405b92:	call   0x59cd:0x810c438
  405b99:	hlt    
  405b9a:	ds iret 
  405b9c:	out    dx,al
  405b9d:	dec    ebx
  405b9e:	xor    eax,0x4958aad8
  405ba3:	mov    edx,0x269a1150
  405ba8:	jnp    0x405b88
  405baa:	mov    BYTE PTR [ecx],dl
  405bac:	popf   
  405bad:	xchg   BYTE PTR [edi+eiz*2+0x4f],ah
  405bb1:	cmp    al,0xda
  405bb3:	int    0xd4
  405bb5:	icebp  
  405bb6:	aad    0xc1
  405bb8:	inc    esp
  405bb9:	adc    bh,ah
  405bbb:	jmp    0x405b9a
  405bbd:	pop    ecx
  405bbe:	pop    ds
  405bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc0:	ja     0x405c2b
  405bc2:	sti    
  405bc3:	dec    esp
  405bc4:	loope  0x405c12
  405bc6:	cwde   
  405bc7:	pop    es
  405bc8:	jo     0x405bc8
  405bca:	xor    BYTE PTR [ebx],bh
  405bcc:	jns    0x405bdc
  405bce:	sbb    al,0x37
  405bd0:	scas   eax,DWORD PTR es:[edi]
  405bd1:	sbb    eax,0x747b615
  405bd6:	gs loop 0x405c17
  405bd9:	test   eax,0xae962476
  405bde:	fwait
  405bdf:	pop    ss
  405be0:	(bad)  
  405be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405be2:	(bad)  
  405be3:	sbb    dl,dl
  405be5:	shl    BYTE PTR [eax],0xc5
  405be8:	data16 sub al,0xf1
  405beb:	and    eax,0x8a41a96b
  405bf0:	call   FWORD PTR [ebx-0x6a]
  405bf3:	clc    
  405bf4:	dec    esp
  405bf5:	out    dx,al
  405bf6:	icebp  
  405bf7:	mov    ebp,0x33392056
  405bfc:	shl    BYTE PTR [esi+0x26],0x75
  405c00:	push   esi
  405c01:	(bad)
  405c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c05:	std    
  405c06:	call   0xf64d:0xde4402b1
  405c0d:	rcl    DWORD PTR [ecx],0x4f
  405c10:	xchg   ebx,eax
  405c11:	repz add al,0x1e
  405c14:	adc    al,0xba
  405c16:	inc    ebx
  405c17:	mov    edx,eax
  405c19:	mov    edi,edi
  405c1b:	gs clc 
  405c1d:	jbe    0x405bb5
  405c1f:	mov    eax,ss:0x589fb3e6
  405c25:	and    DWORD PTR [edx],ebp
  405c27:	inc    esp
  405c28:	pop    ds
  405c29:	inc    ebx
  405c2a:	js     0x405bda
  405c2c:	jmp    0x405be1
  405c2e:	cmp    BYTE PTR [ebx+0x55288120],0x4f
  405c35:	pop    es
  405c36:	pop    edi
  405c37:	aad    0x9d
  405c39:	fs aas 
  405c3b:	mov    ds,WORD PTR [esi-0x2ed31ab7]
  405c41:	xchg   BYTE PTR [esi-0x2f],ah
  405c44:	jne    0x405c3b
  405c46:	call   0xe32f0277
  405c4b:	outs   dx,BYTE PTR ds:[esi]
  405c4c:	repz or eax,0xcbf48d46
  405c52:	pop    esi
  405c53:	xor    BYTE PTR [ecx],cl
  405c55:	cmp    edx,DWORD PTR [ecx+0xf]
  405c58:	pop    eax
  405c59:	mov    esp,0x11aac431
  405c5e:	stos   BYTE PTR es:[edi],al
  405c5f:	stos   DWORD PTR es:[edi],eax
  405c60:	stos   DWORD PTR es:[edi],eax
  405c61:	mov    eax,ds:0xaecc7ca7
  405c66:	push   edi
  405c67:	add    DWORD PTR [ebx*2-0x200b9b69],ebx
  405c6e:	add    DWORD PTR [esi-0x399c71ee],0x28
  405c75:	out    dx,al
  405c76:	sub    esi,ecx
  405c78:	cmp    dh,BYTE PTR [ecx]
  405c7a:	cmp    esp,DWORD PTR [ebp+0x69ed56bb]
  405c80:	mov    ch,0x70
  405c82:	lock and al,0x9
  405c85:	pop    esi
  405c86:	jmp    FWORD PTR [edi]
  405c88:	inc    ebx
  405c89:	push   cs
  405c8a:	mov    ebp,0x122585e2
  405c8f:	xchg   edx,eax
  405c90:	sub    edi,DWORD PTR [ecx+0x5ae4af34]
  405c96:	shr    al,cl
  405c98:	cmp    BYTE PTR [ecx],bh
  405c9a:	xor    eax,0xb132502b
  405c9f:	xchg   DWORD PTR [ecx],edi
  405ca1:	jne    0x405cba
  405ca3:	inc    ebp
  405ca4:	xchg   ebx,eax
  405ca5:	(bad)  
  405ca6:	call   0xe3e4f94a
  405cab:	nop
  405cac:	or     ah,ah
  405cae:	push   esp
  405caf:	outs   dx,BYTE PTR ds:[esi]
  405cb0:	and    BYTE PTR [ecx-0x76],dl
  405cb3:	and    al,0x1d
  405cb5:	cmp    bh,dh
  405cb7:	leave  
  405cb8:	stos   BYTE PTR es:[edi],al
  405cb9:	enter  0x2713,0x36
  405cbd:	js     0x405d11
  405cbf:	or     eax,0x2345b101
  405cc4:	icebp  
  405cc5:	jg     0x405c4c
  405cc7:	test   DWORD PTR [ebx+0x68ae89d5],eax
  405ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cce:	sub    DWORD PTR [edx+0x5701bb8b],esp
  405cd4:	add    DWORD PTR ds:0x9275acee,esp
  405cda:	in     al,0x9e
  405cdc:	xchg   esi,eax
  405cdd:	or     eax,0x22e5b1b7
  405ce2:	outs   dx,BYTE PTR ds:[esi]
  405ce3:	enter  0xe279,0xd8
  405ce7:	push   esi
  405ce8:	(bad)  
  405ce9:	mov    ebx,0xac172871
  405cee:	cdq    
  405cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cf0:	hlt    
  405cf1:	sbb    ebx,esp
  405cf3:	test   dh,bl
  405cf5:	inc    ecx
  405cf6:	dec    BYTE PTR [edi]
  405cf8:	dec    edx
  405cf9:	dec    ebx
  405cfa:	les    eax,FWORD PTR [ecx-0x744157bf]
  405d00:	xchg   ebx,eax
  405d01:	pop    ds
  405d02:	sti    
  405d03:	cdq    
  405d04:	jns    0x405cb4
  405d06:	sbb    eax,ecx
  405d08:	repnz mov dh,0xb8
  405d0b:	push   ss
  405d0c:	push   ds
  405d0d:	fucomip st,st(0)
  405d0f:	adc    esi,esi
  405d11:	repnz sub al,0x4b
  405d14:	pop    edi
  405d15:	ins    BYTE PTR es:[edi],dx
  405d16:	lds    ebp,FWORD PTR [edi-0x51]
  405d19:	jnp    0x405d04
  405d1b:	mov    WORD PTR [esi*1+0x39752322],gs
  405d22:	jne    0x405da2
  405d24:	ret    
  405d25:	popf   
  405d26:	xchg   esp,eax
  405d27:	adc    DWORD PTR [edi+0x26],0xcc6130f2
  405d2e:	mov    esp,0x367a1371
  405d33:	mov    edx,0xebe1a1dd
  405d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d39:	dec    ebx
  405d3a:	loopne 0x405d32
  405d3c:	sti    
  405d3d:	mov    DWORD PTR [edi],ebx
  405d3f:	dec    ebx
  405d40:	mov    bl,0xba
  405d42:	loopne 0x405d09
  405d44:	hlt    
  405d45:	mov    cl,BYTE PTR [eax+0x1]
  405d48:	xchg   edx,eax
  405d49:	out    dx,al
  405d4a:	cmp    eax,DWORD PTR [edx+0x68]
  405d4d:	sub    eax,0xd8515eb8
  405d52:	lahf   
  405d53:	and    bh,0x91
  405d56:	das    
  405d57:	icebp  
  405d58:	adc    BYTE PTR [ebx],bh
  405d5a:	iret   
  405d5b:	sbb    DWORD PTR [esi],edi
  405d5d:	xchg   ecx,eax
  405d5e:	jo     0x405d9b
  405d60:	and    BYTE PTR [ebx+0x227c2ee9],al
  405d66:	xchg   ebx,eax
  405d67:	test   esi,ebx
  405d69:	cmc    
  405d6a:	adc    eax,0x329b6b26
  405d6f:	xor    eax,0x3dd6bb0b
  405d74:	stc    
  405d75:	or     BYTE PTR [edx+0x3d],cl
  405d78:	pushf  
  405d79:	bound  esp,QWORD PTR [ebx]
  405d7b:	inc    edx
  405d7c:	ds scas al,BYTE PTR es:[edi]
  405d7e:	fdivr  DWORD PTR [eax-0x6c]
  405d81:	jp     0x405d4b
  405d83:	add    BYTE PTR [ebx-0x6d],ch
  405d86:	sahf   
  405d87:	push   0x1b5241b7
  405d8c:	push   edx
  405d8d:	inc    ebx
  405d8e:	push   0x62749858
  405d93:	ficom  WORD PTR [edx]
  405d95:	test   DWORD PTR [esi*4+0x5f804f8e],edx
  405d9c:	push   ax
  405d9e:	xchg   edi,eax
  405d9f:	push   ds
  405da0:	inc    ecx
  405da1:	sti    
  405da2:	or     eax,0xa18354e4
  405da7:	xor    ecx,edi
  405da9:	xchg   ebx,eax
  405daa:	es mov ecx,eax
  405dad:	int    0xce
  405daf:	pop    ebx
  405db0:	mov    dl,0xd2
  405db2:	xchg   eax,ebp
  405db4:	out    dx,al
  405db5:	xchg   edi,eax
  405db6:	dec    ebp
  405db7:	xchg   ecx,eax
  405db8:	ror    al,cl
  405dba:	xchg   esi,eax
  405dbb:	jno    0x405de8
  405dbd:	jae    0x405d9d
  405dbf:	ret    
  405dc0:	cdq    
  405dc1:	add    al,ch
  405dc3:	lds    ebx,FWORD PTR [ecx]
  405dc5:	cld    
  405dc6:	mov    ah,0x6d
  405dc8:	aaa    
  405dc9:	mov    fs,WORD PTR [esi+edx*1]
  405dcc:	aaa    
  405dcd:	int    0xd8
  405dcf:	push   0xef903b1a
  405dd4:	jb     0x405da6
  405dd6:	dec    esi
  405dd7:	ret    0x3ff3
  405dda:	xor    al,0x2d
  405ddc:	or     al,0x78
  405dde:	ins    BYTE PTR es:[edi],dx
  405ddf:	dec    eax
  405de0:	xor    eax,0x2eb48ea4
  405de5:	cmp    BYTE PTR [edi-0x2c],cl
  405de8:	ss shr ecx,cl
  405deb:	mov    ebx,0x5ccbe6ab
  405df0:	and    al,0xb
  405df2:	imul   ecx,DWORD PTR [ebx+0x10a924cd],0xd68435f7
  405dfc:	js     0x405d9d
  405dfe:	mov    esi,0x6e379e1b
  405e03:	sbb    BYTE PTR [ebx+0x31],0xb9
  405e07:	ss dec ebp
  405e09:	aad    0x57
  405e0b:	scas   al,BYTE PTR es:[edi]
  405e0c:	mov    ah,0xd5
  405e0e:	mov    ds,WORD PTR [ebx-0x7e]
  405e11:	sub    al,0xa9
  405e13:	push   ecx
  405e14:	sbb    cl,dh
  405e16:	stos   BYTE PTR es:[edi],al
  405e17:	popa   
  405e18:	sar    DWORD PTR [ecx-0x3f],cl
  405e1b:	xchg   ebp,eax
  405e1c:	fstp   QWORD PTR [ecx-0xb]
  405e1f:	(bad)  
  405e20:	in     al,0x15
  405e22:	shr    BYTE PTR [ebp+0x59db5883],1
  405e28:	addr16 sahf 
  405e2a:	jge    0x405e03
  405e2c:	inc    eax
  405e2d:	jns    0x405e93
  405e2f:	sub    BYTE PTR ds:0x265c76da,dh
  405e35:	dec    ebx
  405e36:	and    edi,DWORD PTR [edi]
  405e38:	push   0xffffffd6
  405e3a:	(bad)  
  405e3c:	aaa    
  405e3d:	mov    ?,WORD PTR [esp+ecx*1]
  405e40:	scas   al,BYTE PTR es:[edi]
  405e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e42:	and    al,0xf7
  405e44:	xor    DWORD PTR [esi-0x5f877590],0xebe1bcdb
  405e4e:	sub    ebx,edx
  405e50:	fmul   DWORD PTR ds:0x146f873c
  405e56:	push   esi
  405e57:	dec    esi
  405e58:	and    DWORD PTR [edi+0x4b],ebx
  405e5b:	mov    esp,0x4f0d6881
  405e60:	gs dec edx
  405e62:	push   ebx
  405e63:	or     BYTE PTR [esi-0x24],dh
  405e66:	or     ebx,DWORD PTR ds:0x6dd922e0
  405e6c:	pop    ss
  405e6d:	repnz inc esp
  405e6f:	push   ecx
  405e70:	(bad)  
  405e71:	mov    edx,0x858089c1
  405e76:	xchg   BYTE PTR [ebp+0x17fde05],dh
  405e7c:	jne    0x405e9d
  405e7e:	dec    ebx
  405e7f:	stc    
  405e80:	xchg   edx,eax
  405e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e82:	jecxz  0x405e7f
  405e84:	in     eax,dx
  405e85:	sbb    eax,0xe10aab05
  405e8a:	(bad)  
  405e8b:	hlt    
  405e8c:	out    dx,eax
  405e8d:	sti    
  405e8e:	dec    ecx
  405e8f:	aas    
  405e90:	aas    
  405e91:	sti    
  405e92:	or     al,0xff
  405e94:	arpl   sp,bp
  405e96:	mov    WORD PTR ds:0x27dc2a18,ss
  405e9c:	(bad)  
  405e9d:	jae    0x405ef3
  405e9f:	fmul   DWORD PTR [ecx+0x51d64efe]
  405ea5:	cdq    
  405ea6:	pop    edi
  405ea7:	pushf  
  405ea8:	and    DWORD PTR [ecx+0x52],edx
  405eab:	pushf  
  405eac:	sub    eax,0xced82f04
  405eb1:	stos   DWORD PTR es:[edi],eax
  405eb2:	lea    ebx,[edx+0x199439f2]
  405eb8:	adc    ecx,DWORD PTR [eax-0x51defac8]
  405ebe:	cmp    eax,0xb42a3248
  405ec3:	fucomi st,st(7)
  405ec5:	(bad)  [ebp-0x209bc1f5]
  405ecb:	das    
  405ecc:	ins    DWORD PTR es:[edi],dx
  405ecd:	stc    
  405ece:	mov    bh,0xa
  405ed0:	pop    esi
  405ed1:	dec    ebx
  405ed2:	jbe    0x405ef3
  405ed4:	in     eax,dx
  405ed5:	nop
  405ed6:	int    0x8d
  405ed8:	inc    ebp
  405ed9:	dec    ecx
  405eda:	(bad)  
  405edb:	mov    ds:0xa642ac81,eax
  405ee0:	and    ecx,edi
  405ee2:	push   ds
  405ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ee4:	adc    bh,ah
  405ee6:	fcom   QWORD PTR [ecx]
  405ee8:	jno    0x405eca
  405eea:	mov    bh,0xeb
  405eec:	jns    0x405f55
  405eee:	and    ebp,edx
  405ef0:	mov    esp,edx
  405ef2:	xor    DWORD PTR [eax+ebx*1+0x2b],esp
  405ef6:	aam    0xc
  405ef8:	cmp    BYTE PTR [ebx-0x1931b48],al
  405efe:	cld    
  405eff:	push   0xfffffffd
  405f01:	loop   0x405e8e
  405f03:	mov    ebp,esp
  405f05:	es mov ecx,0xd77b0e74
  405f0b:	mov    DWORD PTR [esi+0x36],edx
  405f0e:	push   0x9ecd9e09
  405f13:	enter  0x3a0f,0x4a
  405f17:	mov    eax,ds:0xf2e0b7e8
  405f1c:	and    ebp,esi
  405f1e:	popa   
  405f1f:	hlt    
  405f20:	xlat   BYTE PTR ds:[ebx]
  405f21:	aad    0x9f
  405f23:	cmp    eax,0x11caea97
  405f28:	xor    eax,0xaccd6f02
  405f2d:	nop
  405f2e:	(bad)  
  405f2f:	(bad)  
  405f31:	xchg   edx,eax
  405f32:	pop    esp
  405f33:	jns    0x405fb0
  405f35:	sti    
  405f36:	sti    
  405f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f38:	or     eax,DWORD PTR [eax+0x2bb73624]
  405f3e:	inc    edi
  405f3f:	(bad)  
  405f40:	dec    esp
  405f41:	xchg   ecx,eax
  405f42:	cmp    bh,BYTE PTR [edx-0x24]
  405f45:	cmp    BYTE PTR [ecx+0x3d],bh
  405f48:	scas   eax,DWORD PTR es:[edi]
  405f49:	out    dx,al
  405f4a:	sbb    DWORD PTR [ecx],esp
  405f4c:	ret    
  405f4d:	mul    DWORD PTR [ebp+0x47]
  405f50:	inc    ebp
  405f51:	adc    edx,esi
  405f53:	(bad)  
  405f55:	sbb    al,0x73
  405f57:	inc    esi
  405f58:	(bad)  
  405f59:	dec    ebx
  405f5a:	xchg   ebx,eax
  405f5b:	or     DWORD PTR [edi],0xaf3126e4
  405f61:	test   al,0xc6
  405f63:	and    ebx,DWORD PTR [eax-0x4f]
  405f66:	mov    esp,0x8034a7e5
  405f6b:	lahf   
  405f6c:	stc    
  405f6d:	aad    0x0
  405f6f:	mov    eax,ds:0xe7ae39d3
  405f74:	mov    ecx,0xdc3341a2
  405f79:	unpckhps xmm4,XMMWORD PTR [ecx]
  405f7c:	lods   eax,DWORD PTR ds:[esi]
  405f7d:	jmp    0x405f60
  405f7f:	(bad)  
  405f81:	imul   DWORD PTR [edx-0x4c]
  405f84:	push   esi
  405f85:	mov    edx,0x64bb0451
  405f8a:	sar    BYTE PTR [edx-0x4],cl
  405f8d:	add    eax,0xd1e498b4
  405f92:	push   ss
  405f93:	cmp    eax,0xf80e6b9
  405f98:	sub    eax,0xb6b18059
  405f9d:	sub    dl,BYTE PTR [edi]
  405f9f:	cmp    esp,DWORD PTR [ebp-0x4bd81f71]
  405fa5:	jg     0x405ffb
  405fa7:	adc    BYTE PTR [edi+0x3fa368f2],al
  405fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fae:	adc    DWORD PTR [eax-0x23f3ebcb],esi
  405fb4:	jno    0x405fc8
  405fb6:	lock data16 lock sbb BYTE PTR [ecx-0x46161651],ch
  405fbf:	ret    0xa422
  405fc2:	dec    ebx
  405fc3:	stc    
  405fc4:	lods   al,BYTE PTR ds:[esi]
  405fc5:	or     DWORD PTR [ebx-0x11],edx
  405fc8:	sbb    DWORD PTR [ebp+0x722f1b3],esi
  405fce:	cmp    DWORD PTR [eax+0x130c9214],ebp
  405fd4:	jno    0x405ffe
  405fd6:	(bad)  
  405fd7:	jo     0x405f6b
  405fd9:	out    dx,eax
  405fda:	xchg   ecx,eax
  405fdb:	sbb    DWORD PTR [esi],ebx
  405fdd:	mov    BYTE PTR [esi],al
  405fdf:	xchg   ebx,eax
  405fe0:	data16 (bad) 
  405fe2:	xor    ecx,DWORD PTR [edi+edi*1-0x45daceb5]
  405fe9:	stos   BYTE PTR es:[edi],al
  405fea:	sub    eax,0x51a5618e
  405fef:	sbb    al,0x2a
  405ff1:	lods   al,BYTE PTR ds:[esi]
  405ff2:	xor    al,0x6b
  405ff4:	xor    BYTE PTR [ebx-0x64],ch
  405ff7:	xor    eax,0xbcab3294
  405ffc:	call   0x46fe935c
  406001:	mov    al,ds:0xad75e47e
  406006:	or     BYTE PTR [edx+0x5fef0a2f],bh
  40600c:	stos   DWORD PTR es:[edi],eax
  40600d:	stos   DWORD PTR es:[edi],eax
  40600e:	out    0x65,al
  406010:	mov    al,ds:0x795eb502
  406015:	lods   eax,DWORD PTR ds:[esi]
  406016:	fcmovnu st,st(7)
  406018:	test   eax,0x1766113b
  40601d:	sub    BYTE PTR [eax],bh
  40601f:	test   BYTE PTR [edi],bl
  406021:	out    dx,al
  406022:	add    eax,0xa564162d
  406027:	repz pop eax
  406029:	mov    edx,0x3c1b853b
  40602e:	lock cmp DWORD PTR [ebp-0x39a8b76f],esp
  406035:	mov    eax,ds:0xfed2c5cd
  40603a:	popa   
  40603b:	sbb    DWORD PTR [ecx-0x6a],ebx
  40603e:	(bad)  
  40603f:	(bad)
  406043:	scas   al,BYTE PTR es:[edi]
  406044:	sahf   
  406045:	mov    cl,0x80
  406047:	jl     0x40600f
  406049:	mov    ebp,0x347fba41
  40604e:	and    ah,BYTE PTR [di]
  406051:	lods   eax,DWORD PTR ds:[esi]
  406052:	xchg   edi,eax
  406053:	and    edx,0x26be12f9
  406059:	push   ds
  40605a:	mov    bl,0xfd
  40605c:	(bad)  
  40605d:	aas    
  40605e:	sar    BYTE PTR [ebp+edx*8+0x46],0x4f
  406063:	add    al,ch
  406065:	inc    ebp
  406066:	inc    edi
  406067:	sub    edi,DWORD PTR [ebx+0x16]
  40606a:	adc    eax,0x4abee1cc
  40606f:	add    DWORD PTR ds:0xa2cf024a,ebx
  406075:	push   cs
  406076:	ds or  cl,ch
  406079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40607a:	add    edi,eax
  40607c:	pop    ds
  40607d:	lods   eax,DWORD PTR es:[esi]
  40607f:	push   0x1f
  406081:	aaa    
  406082:	out    0xa4,al
  406084:	stos   DWORD PTR es:[edi],eax
  406085:	dec    edi
  406086:	sti    
  406087:	dec    edx
  406088:	mov    ebp,0xb0d09c29
  40608d:	dec    esi
  40608e:	call   0x4d4d5b3b
  406093:	xchg   ebp,eax
  406094:	bound  eax,QWORD PTR [eax]
  406096:	enter  0x8a3a,0x6d
  40609a:	hlt    
  40609b:	ins    DWORD PTR es:[edi],dx
  40609c:	xchg   esi,eax
  40609d:	test   BYTE PTR [esp+edi*8],0x89
  4060a1:	out    0x4,al
  4060a3:	mov    fs,WORD PTR [ebx]
  4060a5:	test   eax,0x41a7b9da
  4060aa:	rol    BYTE PTR ds:0xb1a9d255,cl
  4060b0:	int3   
  4060b1:	mov    al,ds:0xf69e151f
  4060b6:	test   BYTE PTR [edx+0x4240a86],dh
  4060bc:	mov    dl,0xba
  4060be:	scas   eax,DWORD PTR es:[edi]
  4060bf:	call   0xd19e:0xd4bb1149
  4060c6:	data16 or bh,BYTE PTR [ebp+0x1]
  4060ca:	xchg   ebp,eax
  4060cb:	lock sahf 
  4060cd:	int3   
  4060ce:	and    BYTE PTR [eax+0x62],dh
  4060d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060d2:	je     0x4060b7
  4060d4:	(bad)  
  4060d5:	repnz mov dx,0xff9d
  4060da:	popf   
  4060db:	mov    dh,BYTE PTR [esi+0x48]
  4060de:	sbb    dh,al
  4060e0:	jbe    0x406098
  4060e2:	cli    
  4060e3:	data16 aas 
  4060e5:	pop    edx
  4060e6:	mov    edx,0x4a9552fb
  4060eb:	and    bl,cl
  4060ed:	pop    ds
  4060ee:	ja     0x406110
  4060f0:	xchg   esp,eax
  4060f1:	loope  0x40608f
  4060f3:	xchg   esi,eax
  4060f4:	lods   al,BYTE PTR ds:[esi]
  4060f5:	dec    edi
  4060f6:	cs call 0xd0d:0x26a09be1
  4060fe:	in     al,dx
  4060ff:	cmc    
  406100:	push   0x51
  406102:	mov    ebp,0x11c35ed6
  406107:	test   al,0x7f
  406109:	xchg   edi,eax
  40610a:	ss retf 0xeeef
  40610e:	(bad)  
  40610f:	sub    BYTE PTR [edi+0x32a4003a],bh
  406115:	(bad)  
  406116:	daa    
  406117:	xor    al,0xbd
  406119:	push   edx
  40611a:	pop    es
  40611b:	mov    esp,0xc3a02d57
  406120:	and    DWORD PTR [ebp+0x4f],0x2bc013bb
  406127:	mov    eax,0x14248f24
  40612c:	lods   al,BYTE PTR ds:[esi]
  40612d:	adc    BYTE PTR [ecx-0x39b2332],ah
  406133:	or     DWORD PTR ds:0x52b4c7ad,0xfffffffa
  40613a:	test   eax,0x1c6f57c4
  40613f:	jle    0x406191
  406141:	and    al,0x72
  406143:	leave  
  406144:	and    DWORD PTR [edi+0x36],edi
  406147:	pop    eax
  406148:	hlt    
  406149:	cli    
  40614a:	pop    ss
  40614b:	push   esi
  40614c:	sub    esi,DWORD PTR [eax-0x45197125]
  406152:	out    0x8,al
  406154:	jbe    0x4061c6
  406156:	ja     0x406101
  406158:	xor    BYTE PTR [edi-0x71],ah
  40615b:	mov    al,ds:0xc47daac6
  406160:	call   0xc8002ad2
  406165:	pop    esi
  406166:	scas   al,BYTE PTR es:[di]
  406168:	loopne 0x4060f4
  40616a:	js     0x4061ae
  40616c:	and    eax,0x8679509
  406171:	ja     0x4061d3
  406173:	mov    eax,ds:0x15a243ad
  406178:	mov    eax,ds:0x7bc97c26
  40617d:	ss mov cs,esp
  406180:	jecxz  0x406189
  406182:	or     DWORD PTR cs:[esi-0x279fd9a0],ebx
  406189:	xchg   ebx,eax
  40618a:	jecxz  0x4061f1
  40618c:	mov    esp,0xfabc737e
  406191:	sbb    BYTE PTR [ecx+0x61],ch
  406194:	(bad)  
  406195:	pop    ebx
  406196:	call   0x74fe3042
  40619b:	sar    DWORD PTR [edx+edi*1],1
  40619e:	(bad)  
  40619f:	data16 test BYTE PTR [esi-0x8],0xc1
  4061a4:	adc    BYTE PTR [ebx+eiz*4+0x10a54110],dl
  4061ab:	(bad)  
  4061ac:	cld    
  4061ad:	jecxz  0x40615e
  4061af:	jns    0x406159
  4061b1:	int3   
  4061b2:	jle    0x406227
  4061b4:	push   ss
  4061b5:	push   ds
  4061b6:	or     eax,eax
  4061b8:	sub    al,0x5b
  4061ba:	push   edx
  4061bb:	lahf   
  4061bc:	(bad)  
  4061bd:	iret   
  4061be:	push   ss
  4061bf:	rol    BYTE PTR [eax+0x22],cl
  4061c2:	dec    edx
  4061c3:	sub    esi,esi
  4061c5:	(bad)
  4061c9:	in     eax,0x9a
  4061cb:	pop    es
  4061cc:	cmp    DWORD PTR [esi-0x2fdc2ba2],edx
  4061d2:	rcl    DWORD PTR [edi-0x57737d70],cl
  4061d8:	hlt    
  4061d9:	or     al,0x7
  4061db:	xor    DWORD PTR [edx-0x51],ebx
  4061de:	mov    bl,0xa4
  4061e0:	lods   eax,DWORD PTR ds:[esi]
  4061e1:	je     0x406165
  4061e3:	(bad)  
  4061e4:	mov    fs:0xabc3d2aa,eax
  4061ea:	test   BYTE PTR [edx],0x81
  4061ed:	add    BYTE PTR [edx+ecx*8],al
  4061f0:	test   al,0x8b
  4061f2:	in     al,dx
  4061f3:	xor    BYTE PTR [ecx+0x58],0x25
  4061f7:	leave  
  4061f8:	pusha  
  4061f9:	in     eax,dx
  4061fa:	jno    0x4061c4
  4061fc:	gs inc ebp
  4061fe:	inc    eax
  4061ff:	loope  0x40627b
  406201:	xchg   edi,eax
  406202:	stc    
  406203:	xchg   ecx,eax
  406204:	mov    gs,WORD PTR es:[edi-0x15]
  406208:	push   ss
  406209:	mov    ebx,0xbc64c5f3
  40620e:	stc    
  40620f:	sbb    bl,BYTE PTR [eax+0x7c]
  406212:	retf   0x5c7e
  406215:	push   es
  406216:	neg    cl
  406218:	in     al,dx
  406219:	or     dl,al
  40621b:	arpl   WORD PTR [edi+ecx*8+0x70],bx
  40621f:	popa   
  406220:	(bad)  
  406221:	loope  0x4061a7
  406223:	sub    eax,0x46bac701
  406228:	mov    bl,0x71
  40622a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40622b:	shr    DWORD PTR [edi-0x24c5286d],1
  406231:	xor    al,0x8c
  406233:	fwait
  406234:	das    
  406235:	dec    esp
  406236:	pop    edx
  406237:	push   0x74b335c1
  40623c:	mov    ebp,0x5ce2f82e
  406241:	neg    DWORD PTR [edi+ebp*1+0x6b]
  406245:	stos   BYTE PTR es:[edi],al
  406246:	xchg   edx,eax
  406247:	and    bl,BYTE PTR [esi+0x39b5c6d2]
  40624d:	aam    0x1b
  40624f:	or     DWORD PTR [edx],esi
  406251:	retf   0x5918
  406254:	loope  0x406266
  406256:	aad    0x7e
  406258:	mov    al,0xfe
  40625a:	cmp    BYTE PTR [eax+0x31],bh
  40625d:	adc    edx,ebp
  40625f:	cmp    BYTE PTR [edi],al
  406261:	test   eax,0xfb4b1275
  406266:	or     dl,BYTE PTR [ebx+ecx*4]
  406269:	mov    edi,0xd35ae3ef
  40626e:	xchg   edi,eax
  40626f:	out    0x88,eax
  406271:	sub    BYTE PTR [edx+0x54],cl
  406274:	jecxz  0x406251
  406276:	sbb    BYTE PTR [ecx+0x13],bh
  406279:	(bad)  
  40627a:	in     al,dx
  40627b:	pop    es
  40627c:	sub    BYTE PTR [edi+0x73],cl
  40627f:	out    0x70,al
  406281:	push   edx
  406282:	out    dx,eax
  406283:	sub    eax,0x9daddeb7
  406288:	push   ebp
  406289:	in     al,0xf6
  40628b:	xor    al,0x37
  40628d:	mov    ah,0xab
  40628f:	and    DWORD PTR [edx-0x3b],edi
  406292:	sub    eax,DWORD PTR [eax+0x8]
  406295:	xchg   DWORD PTR [ecx+0x78d2c270],ebp
  40629b:	add    DWORD PTR [eax],edi
  40629d:	sahf   
  40629e:	and    ebx,DWORD PTR [ebp+0x2c1e724c]
  4062a4:	test   al,dh
  4062a6:	dec    esp
  4062a7:	lods   eax,DWORD PTR ds:[esi]
  4062a8:	jo     0x4062c6
  4062aa:	in     eax,0xc0
  4062ac:	ret    0x8776
  4062af:	ins    DWORD PTR es:[edi],dx
  4062b0:	mov    eax,0x9598ddcd
  4062b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062b6:	sub    DWORD PTR [ecx+0x6d],0x9091c733
  4062bd:	es or  cl,dl
  4062c0:	inc    edi
  4062c1:	mov    cl,0xce
  4062c3:	cdq    
  4062c4:	pop    ecx
  4062c5:	add    DWORD PTR [esp+edi*1-0x39625ae8],ebp
  4062cc:	mov    ch,0x4a
  4062ce:	cmp    dh,dl
  4062d0:	jbe    0x406285
  4062d2:	add    eax,0x9f221463
  4062d7:	cli    
  4062d8:	(bad)  
  4062d9:	push   ebp
  4062da:	pop    ds
  4062db:	jl     0x406294
  4062dd:	xor    al,0x81
  4062df:	dec    edx
  4062e0:	aad    0x78
  4062e2:	sbb    DWORD PTR [esp+ecx*8-0xb],eax
  4062e6:	jns    0x4062ad
  4062e8:	es fucompp 
  4062eb:	aaa    
  4062ec:	pop    edx
  4062ed:	xor    edi,ebx
  4062ef:	sbb    edx,esi
  4062f1:	jmp    0x4062cc
  4062f3:	int3   
  4062f4:	test   al,0xaa
  4062f6:	lea    eax,[edi]
  4062f8:	rcl    DWORD PTR [esi],cl
  4062fa:	nop
  4062fb:	daa    
  4062fc:	jno    0x40637a
  4062fe:	lods   eax,DWORD PTR ds:[esi]
  4062ff:	cmp    edx,DWORD PTR [edi+0x30d8c7d9]
  406305:	pop    es
  406306:	lock pop ecx
  406308:	shl    BYTE PTR [ebp-0x5570d058],0x2e
  40630f:	sbb    DWORD PTR [eax],esi
  406311:	ds ret 
  406313:	or     eax,0xaffd45cd
  406318:	inc    esi
  406319:	jnp    0x4062e0
  40631b:	adc    al,0x86
  40631d:	addr16 into 
  40631f:	xchg   edi,eax
  406320:	popa   
  406321:	repnz ins BYTE PTR es:[edi],dx
  406323:	rol    BYTE PTR [edi],cl
  406325:	ja     0x4062be
  406327:	sbb    ebp,esi
  406329:	dec    esp
  40632a:	popa   
  40632b:	pop    edx
  40632c:	mov    WORD PTR [eax+0x71d7cc48],?
  406332:	js     0x4063b0
  406334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406335:	xchg   edi,eax
  406336:	mov    esi,0xbcbf360c
  40633b:	or     al,0x11
  40633d:	sub    DWORD PTR [ebx],esi
  40633f:	das    
  406340:	jno    0x40630d
  406342:	xchg   ebx,eax
  406343:	cmp    eax,0x9f37e275
  406348:	mov    ?,WORD PTR [eax]
  40634a:	stos   DWORD PTR es:[edi],eax
  40634b:	loop   0x4062d5
  40634d:	sbb    BYTE PTR [eax-0x2e768ce6],bl
  406353:	test   DWORD PTR [eax+0x24d1ef94],eax
  406359:	mov    ss,WORD PTR [edx+0x1c79c40c]
  40635f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406360:	fcom   QWORD PTR [ebx]
  406362:	mov    al,0x48
  406364:	lods   al,BYTE PTR ds:[esi]
  406365:	jmp    0x6ca96fb8
  40636a:	pop    ds
  40636b:	push   edi
  40636c:	(bad)  
  40636e:	or     BYTE PTR [eax+0x5f392fdb],cl
  406374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406375:	xor    BYTE PTR [ebp-0x7817cae4],ch
  40637b:	rcr    BYTE PTR [ebx-0x41],cl
  40637e:	pop    edx
  40637f:	out    0x1c,al
  406381:	js     0x4063a8
  406383:	rcr    BYTE PTR [ebx],cl
  406385:	inc    esp
  406386:	ins    BYTE PTR es:[edi],dx
  406387:	lahf   
  406388:	retf   
  406389:	and    al,0xf1
  40638b:	sbb    al,0x17
  40638d:	mov    ah,0x65
  40638f:	dec    edx
  406390:	push   0xffffffcd
  406392:	pushf  
  406393:	adc    ebx,DWORD PTR [esi]
  406395:	scas   eax,DWORD PTR es:[edi]
  406396:	les    ecx,FWORD PTR [eax+0x5925d36f]
  40639c:	(bad)  
  40639d:	jmp    0x620b:0x28a82b40
  4063a4:	add    BYTE PTR [ebx+0x28],ch
  4063a7:	lsl    ebx,WORD PTR [esi+0x32]
  4063ab:	mov    esp,0x65f576f7
  4063b0:	daa    
  4063b1:	sbb    ch,dl
  4063b3:	jne    0x406356
  4063b5:	adc    eax,0xb8400b4
  4063ba:	out    0x64,eax
  4063bc:	fist   WORD PTR [ebp-0x7b]
  4063bf:	dec    ebp
  4063c0:	(bad)  
  4063c1:	scas   eax,DWORD PTR es:[edi]
  4063c2:	mov    ah,0xd1
  4063c4:	into   
  4063c5:	xor    DWORD PTR [edi+edi*2-0x48],edi
  4063c9:	popa   
  4063ca:	inc    ch
  4063cc:	push   esi
  4063cd:	bound  edx,QWORD PTR [eax+0x64769da4]
  4063d3:	push   edi
  4063d4:	jo     0x4063d9
  4063d6:	mov    al,0xf7
  4063d8:	in     al,0x80
  4063da:	enter  0xf515,0x60
  4063de:	nop
  4063df:	adc    BYTE PTR [edx-0x3fd69043],cl
  4063e5:	and    eax,0x9250babc
  4063ea:	cli    
  4063eb:	in     eax,dx
  4063ec:	xchg   BYTE PTR [edi+0x6414b514],bh
  4063f2:	enter  0x921c,0xc8
  4063f6:	(bad)  
  4063f7:	mov    dl,0x7b
  4063f9:	inc    eax
  4063fa:	cmp    DWORD PTR [ebx-0x12],eax
  4063fd:	imul   esi,DWORD PTR [esi],0xdc6c2430
  406403:	test   BYTE PTR [ebp+0x1a49202],dh
  406409:	mov    edi,0x7c09fb97
  40640e:	imul   ebp,DWORD PTR [eax+0x47c126e5],0xe
  406415:	adc    cl,BYTE PTR [ebx]
  406417:	stos   DWORD PTR es:[edi],eax
  406418:	push   es
  406419:	loop   0x40642d
  40641b:	sub    eax,0xee358b54
  406420:	sub    al,ch
  406422:	adc    eax,0xfa827f4b
  406427:	dec    ecx
  406428:	dec    ebx
  406429:	jp     0x406496
  40642b:	cmp    edi,DWORD PTR [ebx+0x6681a4d]
  406431:	inc    edi
  406432:	fild   WORD PTR [ebp+0x35]
  406435:	add    bl,BYTE PTR [edi-0x7d]
  406438:	in     al,dx
  406439:	mov    eax,0x8b9f6df2
  40643e:	ins    BYTE PTR es:[edi],dx
  40643f:	dec    esi
  406440:	popa   
  406441:	ss rol ebx,cl
  406444:	sub    ebx,DWORD PTR [ecx-0x620cd932]
  40644a:	retf   
  40644b:	jl     0x406440
  40644d:	xchg   ebp,eax
  40644e:	or     DWORD PTR [ecx+0x16],esp
  406451:	fs cmp al,0x50
  406454:	fsubr  st(4),st
  406456:	push   cs
  406457:	mov    ecx,0x2056a605
  40645c:	fadd   st,st(7)
  40645e:	test   edx,eax
  406460:	popf   
  406461:	shr    DWORD PTR [ebp-0x2e],cl
  406464:	call   0x1dad4e6d
  406469:	out    dx,al
  40646a:	iret   
  40646b:	jge    0x406480
  40646d:	pop    ss
  40646e:	mov    dh,0xe1
  406470:	xchg   ecx,eax
  406471:	sbb    al,0xf6
  406473:	fdivr  st(0),st
  406475:	push   eax
  406476:	mov    ch,0x59
  406478:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40647a:	or     eax,0x6badb42a
  40647f:	inc    esi
  406480:	cmp    al,ah
  406482:	mov    ecx,ss
  406484:	inc    ecx
  406485:	jl     0x406494
  406487:	mov    DWORD PTR [eax+0x26],0x651b3e3e
  40648e:	arpl   WORD PTR [edx],di
  406490:	inc    edx
  406491:	(bad)  
  406492:	xchg   ebp,eax
  406493:	cmp    eax,0xee7adde5
  406498:	sub    al,0xf9
  40649a:	inc    ecx
  40649b:	and    bl,BYTE PTR [esi+ebp*8+0x45]
  40649f:	(bad)  [eax]
  4064a1:	cli    
  4064a2:	enter  0x557f,0x54
  4064a6:	dec    ebp
  4064a7:	push   ss
  4064a8:	push   cs
  4064a9:	dec    esp
  4064aa:	add    edx,0x32994337
  4064b0:	fld    QWORD PTR [ebx]
  4064b2:	cmc    
  4064b3:	jb     0x4064a7
  4064b5:	and    al,0xba
  4064b7:	daa    
  4064b8:	cmp    eax,0xeea36196
  4064bd:	or     DWORD PTR [ebx+0x1eaf6467],esp
  4064c3:	dec    ebx
  4064c4:	dec    ebx
  4064c5:	xchg   eax,ebp
  4064c7:	cdq    
  4064c8:	hlt    
  4064c9:	or     BYTE PTR [edi],bl
  4064cb:	sar    BYTE PTR [ebp-0x2a5a14cd],1
  4064d1:	mov    DWORD PTR [eax+ebp*4+0x5abc7813],edi
  4064d8:	lahf   
  4064d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064da:	push   ss
  4064db:	js     0x40651f
  4064dd:	pop    ss
  4064de:	pop    ebx
  4064df:	xchg   edx,eax
  4064e0:	retf   
  4064e1:	mov    ebp,0x5443d671
  4064e6:	inc    ebx
  4064e7:	sbb    ecx,ebx
  4064e9:	cdq    
  4064ea:	push   edi
  4064eb:	out    dx,eax
  4064ec:	pop    ds
  4064ed:	mov    esp,DWORD PTR [ecx-0x7d77d259]
  4064f3:	pop    ebx
  4064f4:	mov    edi,0xa49d10f3
  4064f9:	loop   0x40648d
  4064fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064fc:	fs jae 0x406497
  4064ff:	cwde   
  406500:	mov    eax,ds:0xc9bbd8ed
  406505:	ucomiss xmm7,DWORD PTR gs:[ecx]
  406509:	clc    
  40650a:	xor    DWORD PTR [ebx+0x7b],eax
  40650d:	add    BYTE PTR [esi+0x5],dl
  406510:	scas   al,BYTE PTR es:[edi]
  406511:	mov    bh,0xda
  406513:	sbb    bh,dh
  406515:	sti    
  406516:	xor    ebx,ebp
  406518:	dec    eax
  406519:	repnz call 0xe6e:0xeb33864
  406521:	inc    eax
  406522:	push   ebx
  406523:	rol    DWORD PTR cs:[edx+0x2ca880d4],1
  40652a:	ror    ah,0xcf
  40652d:	outs   dx,DWORD PTR ds:[esi]
  40652e:	pop    eax
  40652f:	pop    ecx
  406530:	das    
  406531:	xchg   edi,eax
  406532:	pop    esi
  406533:	scas   al,BYTE PTR es:[edi]
  406534:	pop    edi
  406535:	rol    BYTE PTR gs:[ebp-0x46a85b12],1
  40653c:	push   ebx
  40653d:	mov    DWORD PTR [ecx-0x5530d251],eax
  406543:	jmp    0x6139:0x2bc682ba
  40654a:	push   edi
  40654b:	mov    edi,0x6fce62c8
  406550:	test   eax,0xb84c8ed9
  406555:	and    cl,al
  406557:	lahf   
  406558:	fnsave [esi+0x19]
  40655b:	mov    esp,0x5d98da78
  406560:	pop    ebp
  406561:	in     al,0x94
  406563:	(bad)  
  406564:	pop    ebp
  406565:	es cld 
  406567:	int    0x24
  406569:	iret   
  40656a:	in     eax,0xa6
  40656c:	or     ebp,ebp
  40656e:	cmc    
  40656f:	mov    dh,0x3
  406571:	sub    esi,DWORD PTR [ebp+eax*8-0x36432aba]
  406578:	jns    0x406564
  40657a:	int3   
  40657b:	and    DWORD PTR [edx+esi*1],esp
  40657e:	add    ebp,edx
  406580:	cld    
  406581:	push   ebp
  406582:	cmc    
  406583:	outs   dx,DWORD PTR ds:[esi]
  406584:	test   BYTE PTR [esi-0x39],bl
  406587:	out    0x93,eax
  406589:	lods   al,BYTE PTR ds:[esi]
  40658a:	aad    0x4a
  40658c:	add    bl,BYTE PTR [ecx+0x6f95e8c5]
  406592:	inc    esp
  406593:	aaa    
  406594:	sub    BYTE PTR [eax-0xed4d295],bh
  40659a:	in     eax,dx
  40659b:	mov    cl,0xae
  40659d:	xor    ecx,DWORD PTR [edx+0x5883f107]
  4065a3:	mov    ds:0x2288a0e3,eax
  4065a8:	sbb    DWORD PTR [ebp-0x35c8f3a8],ecx
  4065ae:	inc    esp
  4065af:	bnd jg 0x406563
  4065b2:	popf   
  4065b3:	inc    ebp
  4065b4:	mov    bh,0xa6
  4065b6:	mov    cl,0x9e
  4065b8:	mov    DWORD PTR [eax],ebp
  4065ba:	mov    dl,BYTE PTR [edx-0x64f4ce3b]
  4065c0:	xor    DWORD PTR [ebp+0x2b161739],ebx
  4065c6:	mov    ah,0x6d
  4065c8:	add    dl,BYTE PTR [eax]
  4065ca:	sub    al,0x5f
  4065cc:	jo     0x4065b2
  4065ce:	adc    DWORD PTR [edi-0x7d],esi
  4065d1:	jle    0x40662f
  4065d3:	mov    dh,0x70
  4065d5:	or     DWORD PTR [edi+ecx*2+0x262c7d00],ecx
  4065dc:	dec    esp
  4065dd:	sub    ch,bh
  4065df:	cmp    eax,0x4cd662c1
  4065e4:	jns    0x4065d3
  4065e6:	stos   DWORD PTR es:[edi],eax
  4065e7:	cwde   
  4065e8:	stos   BYTE PTR es:[edi],al
  4065e9:	mov    dh,0x5
  4065eb:	cwde   
  4065ec:	and    ecx,edx
  4065ee:	lods   al,BYTE PTR ds:[esi]
  4065ef:	mov    eax,0xfcf087d7
  4065f4:	jecxz  0x406603
  4065f6:	sub    esi,0x47
  4065f9:	aam    0xdc
  4065fb:	sbb    cl,BYTE PTR [esi+eax*2]
  4065fe:	imul   edi,DWORD PTR [ecx-0x1c],0xffffff82
  406602:	(bad)  
  406604:	xor    BYTE PTR [ecx+0x631fb412],cl
  40660a:	jle    0xbeb0796c
  406610:	push   es
  406611:	dec    eax
  406612:	push   ss
  406613:	fnstenv [ecx-0x62d3b179]
  406619:	pop    eax
  40661a:	daa    
  40661b:	mov    ebp,0xc2ba5156
  406620:	mov    WORD PTR [ebp+edx*2-0x19],?
  406624:	mov    ah,0x30
  406626:	adc    BYTE PTR [esp+ebx*4+0x4f],bh
  40662a:	fisub  DWORD PTR [edx-0x61]
  40662d:	cdq    
  40662e:	rep outs dx,BYTE PTR ds:[esi]
  406630:	fadd   QWORD PTR es:[ebx]
  406633:	pop    DWORD PTR [ebp-0x68]
  406636:	lock xchg DWORD PTR [esi-0x7c],edi
  40663a:	gs test al,0x44
  40663d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40663f:	ror    DWORD PTR [edx-0x1a],cl
  406642:	imul   ecx,edx,0x8c14a37a
  406648:	fidivr DWORD PTR [ecx]
  40664a:	pop    edx
  40664b:	or     DWORD PTR [ecx+0x54],ebp
  40664e:	push   eax
  40664f:	xchg   ecx,eax
  406650:	in     eax,dx
  406651:	sub    DWORD PTR [ebx],esi
  406653:	aas    
  406654:	or     al,0x7
  406656:	xor    al,BYTE PTR [eax-0x78]
  406659:	xor    ebx,ebx
  40665b:	mov    ds:0xd4494ce3,eax
  406660:	add    BYTE PTR [edi-0x1e298414],al
  406666:	push   edi
  406667:	pop    esp
  406668:	jg     0x4066e4
  40666a:	push   ebp
  40666b:	dec    esp
  40666c:	(bad)  
  40666d:	jmp    0x2317:0xcde0d965
  406674:	les    ebx,FWORD PTR [eax+edi*2]
  406677:	jp     0x4066b3
  406679:	pop    ebp
  40667a:	fs sbb ah,dl
  40667d:	mov    eax,0x7e7557b7
  406682:	sub    BYTE PTR [eax],cl
  406684:	cmc    
  406685:	test   BYTE PTR [ebx],0x9e
  406688:	add    eax,0xac18b3f7
  40668d:	dec    edx
  40668e:	add    al,0x2c
  406690:	cmp    ch,al
  406692:	cmp    BYTE PTR [ecx],0x43
  406695:	push   ebp
  406696:	mov    edi,0x88ea0eb
  40669b:	adc    DWORD PTR ds:[ebx-0x7c43d5d8],esp
  4066a2:	repnz outs dx,DWORD PTR ds:[esi]
  4066a4:	mov    esp,0x4d26a2d2
  4066a9:	cli    
  4066aa:	mov    eax,esp
  4066ac:	pop    edi
  4066ad:	arpl   WORD PTR [esi],bp
  4066af:	loope  0x40671f
  4066b1:	jg     0x406669
  4066b3:	imul   edi,edx,0x15
  4066b6:	cli    
  4066b7:	mov    eax,0x52acfb9d
  4066bc:	xor    BYTE PTR [esp+edi*4+0x75],cl
  4066c0:	inc    eax
  4066c1:	pop    edi
  4066c2:	cmp    al,0xe8
  4066c4:	sub    BYTE PTR [edx],0xa6
  4066c7:	pop    esp
  4066c8:	repnz inc ecx
  4066ca:	scas   eax,DWORD PTR es:[edi]
  4066cb:	adc    esp,DWORD PTR [ebx-0x7f]
  4066ce:	inc    ebx
  4066cf:	mov    al,ch
  4066d1:	mov    dl,0x47
  4066d3:	push   ebx
  4066d4:	shr    BYTE PTR [esi-0x3d1c9062],cl
  4066da:	sub    al,0x2c
  4066dc:	push   cs
  4066dd:	int    0x3f
  4066df:	inc    ebx
  4066e0:	lods   al,BYTE PTR ds:[esi]
  4066e1:	es xor eax,0x9a3401dd
  4066e7:	mov    ebp,0xa81382e1
  4066ec:	adc    bl,BYTE PTR ds:0x5dd4d741
  4066f2:	sub    BYTE PTR [edx-0x24e44648],ah
  4066f8:	pop    edx
  4066f9:	xchg   esp,ecx
  4066fb:	pop    ebx
  4066fc:	pop    DWORD PTR [edi]
  4066fe:	cwde   
  4066ff:	call   edx
  406701:	cmp    dl,BYTE PTR [edx+0xa20db8f]
  406707:	lds    esp,FWORD PTR [ecx+ebp*4-0xfa02754]
  40670e:	shl    DWORD PTR [edx+0x5598e2b4],0x90
  406715:	mov    ch,0xb6
  406717:	push   ebx
  406718:	jno    0x4066ae
  40671a:	pop    ecx
  40671b:	xchg   edi,eax
  40671c:	jbe    0x406720
  40671e:	stos   DWORD PTR es:[edi],eax
  40671f:	int3   
  406720:	lahf   
  406721:	adc    al,0xa1
  406723:	retf   
  406724:	js     0x406752
  406726:	or     ecx,DWORD PTR [eax+0x27]
  406729:	jns    0x40675a
  40672b:	sbb    BYTE PTR [ebx-0x45a2dddc],cl
  406731:	fbld   TBYTE PTR [ecx-0x456e9686]
  406737:	repnz mov ch,BYTE PTR [ecx-0x1be0732a]
  40673e:	xchg   esi,eax
  40673f:	xor    ah,BYTE PTR ds:0xd4f03c15
  406745:	(bad)  
  406746:	in     al,dx
  406747:	add    DWORD PTR [edx+0x44c12eb5],esp
  40674d:	jae    0x4067bd
  40674f:	dec    ecx
  406750:	mov    dl,0x32
  406752:	push   cs
  406753:	int    0xe4
  406755:	push   ebx
  406756:	js     0x40678f
  406758:	jle    0x4066ea
  40675a:	(bad)  
  40675b:	push   ebx
  40675c:	pop    esp
  40675d:	push   ecx
  40675e:	pop    ds
  40675f:	add    DWORD PTR [edi+ebx*8-0x4754cbaf],eax
  406766:	cmp    al,0x32
  406768:	out    0x37,al
  40676a:	sbb    al,0xa6
  40676c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40676d:	push   ecx
  40676e:	and    BYTE PTR [esi-0x6c],0xbc
  406772:	inc    ecx
  406773:	clc    
  406774:	xchg   ebp,eax
  406775:	(bad)  
  406776:	in     al,dx
  406777:	xor    DWORD PTR [ecx+0x2f],0xb345f48d
  40677e:	dec    esp
  40677f:	fwait
  406780:	(bad)  
  406781:	leave  
  406782:	test   al,0x3c
  406784:	mov    al,cs:0xd68f5fc7
  40678a:	add    BYTE PTR [esi-0x6a1361de],0xe3
  406791:	push   DWORD PTR [edi-0x7c]
  406794:	pusha  
  406795:	aas    
  406796:	in     al,dx
  406797:	cld    
  406798:	push   es
  406799:	daa    
  40679a:	test   edi,ecx
  40679c:	add    eax,0x91e2b4d1
  4067a1:	dec    edi
  4067a2:	mov    al,ds:0x691632f9
  4067a7:	je     0x40680f
  4067a9:	mov    DWORD PTR [edi-0x3a],ecx
  4067ac:	mov    cl,0x75
  4067ae:	dec    DWORD PTR [edx+eax*4-0x6a]
  4067b2:	push   esp
  4067b3:	or     edi,DWORD PTR [eax-0x1f6f22f5]
  4067b9:	dec    BYTE PTR [ebx-0x6c664b9f]
  4067bf:	dec    edx
  4067c0:	lock dec ecx
  4067c2:	stos   BYTE PTR es:[edi],al
  4067c3:	adc    eax,0x75e0191
  4067c8:	sub    ebx,esp
  4067ca:	shr    BYTE PTR [edx+eax*2+0x6b],0xce
  4067cf:	inc    edx
  4067d0:	mov    dl,0x26
  4067d2:	enter  0x39c8,0x8c
  4067d6:	jb     0x40676f
  4067d8:	cmc    
  4067d9:	xor    DWORD PTR [ebx+edi*1+0x64734840],eax
  4067e0:	or     eax,0xa571ab4a
  4067e5:	aas    
  4067e6:	jo     0x406780
  4067e8:	push   eax
  4067e9:	pop    esp
  4067ea:	cli    
  4067eb:	jg     0x406833
  4067ed:	mov    edi,0x9dd7da1a
  4067f2:	das    
  4067f3:	retf   
  4067f4:	int    0x25
  4067f6:	out    dx,eax
  4067f7:	jmp    0x358c:0xbbb8104d
  4067fe:	inc    edx
  4067ff:	xor    ebx,DWORD PTR [ebx]
  406801:	or     ch,BYTE PTR [ebx-0x5]
  406804:	add    esi,DWORD PTR [edx+0x90f268]
  40680a:	mov    ds:0xd2c805e0,eax
  40680f:	or     DWORD PTR [ecx-0x407bdadc],edx
  406815:	pop    esi
  406816:	mov    eax,DWORD PTR [esi+ebp*8]
  406819:	jno    0x40682b
  40681b:	(bad)  
  40681c:	dec    esi
  40681d:	pop    esp
  40681e:	mov    edx,0xbd88603b
  406823:	xlat   BYTE PTR ds:[ebx]
  406824:	mov    BYTE PTR [esi+0x3308d4db],0xb8
  40682b:	add    eax,0xf879350d
  406830:	cli    
  406831:	stc    
  406832:	retf   0x2b8b
  406835:	mov    eax,ds:0x2e9797be
  40683a:	(bad)  
  40683b:	mov    es,ecx
  40683d:	pop    esp
  40683e:	add    esp,DWORD PTR [ecx-0x1d]
  406841:	outs   dx,DWORD PTR ds:[esi]
  406842:	jae    0x4067ed
  406844:	and    dh,BYTE PTR [ecx]
  406846:	jle    0x406871
  406848:	ficomp DWORD PTR [edi+0x1c662f21]
  40684e:	sar    dh,0xce
  406851:	sub    al,0xbd
  406853:	stos   BYTE PTR es:[edi],al
  406854:	fld    TBYTE PTR [ebp-0x62302d6a]
  40685a:	repz loop 0x4068c1
  40685d:	test   BYTE PTR [eax-0x72d299d1],cl
  406863:	dec    edi
  406864:	mov    bh,0xd3
  406866:	push   ecx
  406867:	jl     0x4068b5
  406869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40686a:	mov    dl,al
  40686c:	pop    ebx
  40686d:	test   DWORD PTR [eax+0x39],0x7a5698fa
  406874:	jmp    0x40682d
  406876:	mov    BYTE PTR [edx+0x7f],bl
  406879:	cmp    eax,0x4e18c5d2
  40687e:	push   0x4
  406880:	jg     0x406842
  406882:	ret    
  406883:	jp     0x40687f
  406885:	xor    edi,DWORD PTR [ebx+0x12dfaea5]
  40688b:	aam    0x21
  40688d:	pop    ebx
  40688e:	cli    
  40688f:	(bad)  
  406890:	retf   
  406891:	(bad)  
  406893:	(bad)  
  406894:	pop    esp
  406895:	cli    
  406896:	sti    
  406897:	arpl   WORD PTR [edi+0x7ed62369],dx
  40689d:	pop    ebp
  40689e:	mov    dl,0xc6
  4068a0:	ins    BYTE PTR es:[edi],dx
  4068a1:	pushf  
  4068a2:	stc    
  4068a3:	xor    ch,0xb4
  4068a6:	shl    dl,1
  4068a8:	sbb    DWORD PTR [esi+esi*8+0x7a],esp
  4068ac:	inc    esi
  4068ae:	shl    DWORD PTR [edx-0x2e],1
  4068b1:	mov    bl,0x5f
  4068b3:	push   cs
  4068b4:	(bad)  
  4068b5:	lods   eax,DWORD PTR es:[esi]
  4068b7:	push   es
  4068b8:	adc    eax,0x2afd0ca8
  4068bd:	pop    ebp
  4068be:	cmp    DWORD PTR [eax-0x7],edx
  4068c1:	jno    0x4068dc
  4068c3:	add    bl,BYTE PTR ds:0xf1822787
  4068c9:	call   0xced433a1
  4068ce:	push   ss
  4068cf:	loop   0x4068cb
  4068d1:	and    eax,DWORD PTR [edx-0x7a]
  4068d4:	fs add eax,0xda992a69
  4068da:	fwait
  4068db:	js     0x406915
  4068dd:	pop    es
  4068de:	xchg   ecx,eax
  4068df:	xchg   ebx,eax
  4068e0:	mov    BYTE PTR [esi-0x32],bh
  4068e3:	jmp    0x61fea487
  4068e8:	adc    eax,0xd99aa526
  4068ed:	sbb    eax,0xccc61098
  4068f2:	sbb    ebp,DWORD PTR [ecx]
  4068f4:	lahf   
  4068f5:	imul   DWORD PTR [esi-0x8]
  4068f8:	mov    ds:0x38ac3112,eax
  4068fd:	ret    
  4068fe:	push   0xad519fa0
  406903:	xor    BYTE PTR [ebx-0x20],bl
  406906:	repnz rcl eax,cl
  406909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40690a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40690b:	scas   al,BYTE PTR es:[edi]
  40690c:	sub    ch,BYTE PTR [edi-0xb]
  40690f:	test   al,0x24
  406911:	es std 
  406913:	icebp  
  406914:	ror    ebx,1
  406916:	cmp    al,0x21
  406918:	pop    ebp
  406919:	or     esi,DWORD PTR [edx+esi*8]
  40691c:	pop    ebp
  40691d:	jge    0x40694b
  40691f:	xor    DWORD PTR gs:[ebx+esi*4],ecx
  406923:	cmp    BYTE PTR ds:0x2e5469a1,0x9f
  40692a:	fiadd  DWORD PTR [edi]
  40692c:	sbb    al,0x51
  40692e:	ins    DWORD PTR es:[edi],dx
  40692f:	add    al,0x6f
  406931:	stc    
  406932:	test   esp,edx
  406934:	mov    esi,0x560db4bc
  406939:	popf   
  40693a:	out    dx,eax
  40693b:	pop    ds
  40693c:	test   eax,0x6d8f1a06
  406941:	xchg   edi,eax
  406942:	mov    ecx,0xa960870
  406947:	(bad)  
  406948:	cmp    al,0xea
  40694a:	outs   dx,DWORD PTR ds:[esi]
  40694b:	or     cl,BYTE PTR [esp+eax*8]
  40694e:	ins    BYTE PTR es:[edi],dx
  40694f:	adc    esi,DWORD PTR [edi-0x2308a0fa]
  406955:	aad    0x2c
  406957:	sub    al,0xac
  406959:	fbld   TBYTE PTR [eax+0x160596be]
  40695f:	leave  
  406960:	sub    eax,0x2891523
  406965:	pmaxsw mm1,mm1
  406968:	lds    esi,FWORD PTR [edx+0x60fa4b1]
  40696e:	pushf  
  40696f:	sbb    al,0x72
  406971:	add    eax,DWORD PTR [edx-0x5d]
  406974:	(bad)  
  406975:	jbe    0x4069aa
  406977:	pop    ss
  406978:	pop    ebp
  406979:	adc    ah,BYTE PTR [ebx]
  40697b:	xchg   esi,eax
  40697c:	aas    
  40697d:	aas    
  40697e:	pop    ebp
  40697f:	dec    ecx
  406980:	cmp    ebp,ebp
  406982:	xor    eax,0xd0ce2050
  406987:	out    0x3,al
  406989:	jne    0x40697f
  40698b:	out    dx,al
  40698c:	mov    ebx,0xf1d2f174
  406991:	test   DWORD PTR [eax-0x4],esi
  406994:	retf   
  406995:	or     al,0x41
  406997:	pop    ebp
  406998:	xchg   esi,eax
  406999:	push   cs
  40699a:	pop    edx
  40699b:	pop    eax
  40699c:	pop    esi
  40699d:	lods   al,BYTE PTR ds:[esi]
  40699e:	jo     0x4069ee
  4069a0:	fisubr DWORD PTR [edi+0x247e8fa7]
  4069a6:	scas   eax,DWORD PTR es:[edi]
  4069a7:	push   ss
  4069a8:	inc    esp
  4069a9:	test   DWORD PTR [edi-0x46],ebx
  4069ac:	mov    edx,0x3407a911
  4069b1:	into   
  4069b2:	mov    esp,0xdb390197
  4069b7:	daa    
  4069b8:	imul   esi,DWORD PTR [ecx],0xffffffb3
  4069bb:	ins    BYTE PTR es:[edi],dx
  4069bc:	out    0xb5,eax
  4069be:	mov    ds:0xf78bed13,al
  4069c3:	(bad)  
  4069c4:	adc    dl,bh
  4069c6:	bound  ebp,QWORD PTR [edi-0xe9dcc08]
  4069cc:	dec    esp
  4069cd:	mov    ebp,0xf3674785
  4069d2:	aad    0x47
  4069d4:	jg     0x4069f5
  4069d6:	gs dec ecx
  4069d8:	cwde   
  4069d9:	addr16 lock lahf 
  4069dc:	jp     0x4069e1
  4069de:	(bad)  
  4069e0:	ret    0xee0b
  4069e3:	xor    edx,esp
  4069e5:	xchg   esi,eax
  4069e6:	shl    DWORD PTR [esi],cl
  4069e8:	pop    eax
  4069e9:	mov    eax,ds:0x43a87ad9
  4069ee:	arpl   dx,ax
  4069f0:	lods   eax,DWORD PTR ds:[esi]
  4069f1:	push   ss
  4069f2:	sub    BYTE PTR [edx+0x16],bl
  4069f5:	dec    eax
  4069f6:	dec    ebp
  4069f7:	ins    BYTE PTR es:[edi],dx
  4069f8:	jle    0x4069bd
  4069fa:	retf   
  4069fb:	mov    bh,0x0
  4069fd:	ins    BYTE PTR es:[edi],dx
  4069fe:	lods   eax,DWORD PTR ds:[esi]
  4069ff:	jbe    0x4069bd
  406a01:	fcom   QWORD PTR [eax-0x9cdea93]
  406a07:	jbe    0x4069b6
  406a09:	jmp    DWORD PTR [eax-0x4d183a7c]
  406a0f:	aam    0xc
  406a11:	(bad)  
  406a12:	std    
  406a13:	loop   0x406a7d
  406a15:	and    dl,BYTE PTR [ecx]
  406a17:	and    al,0x67
  406a19:	push   ecx
  406a1a:	or     al,0x8
  406a1c:	push   edx
  406a1d:	push   ebp
  406a1e:	xchg   edx,eax
  406a1f:	pop    ebx
  406a20:	xchg   esi,eax
  406a21:	sahf   
  406a22:	jns    0x4069cb
  406a24:	sub    dl,BYTE PTR ds:0x6771895c
  406a2a:	mov    al,0x94
  406a2c:	outs   dx,BYTE PTR ds:[esi]
  406a2d:	push   ss
  406a2e:	(bad)  
  406a2f:	in     al,dx
  406a30:	arpl   di,si
  406a32:	shr    BYTE PTR [esi],0x2c
  406a35:	popf   
  406a36:	mov    esi,0xf201013f
  406a3b:	in     eax,0xa
  406a3d:	xor    eax,0x67d495be
  406a42:	lds    esi,FWORD PTR gs:[eax]
  406a45:	jo     0x406aae
  406a47:	jbe    0x406a3f
  406a49:	sub    al,0xd0
  406a4b:	or     BYTE PTR [ecx-0x661951e0],dh
  406a51:	test   DWORD PTR [ecx+0x215e399a],eax
  406a57:	dec    ecx
  406a58:	les    ecx,FWORD PTR [edx+0x6b]
  406a5b:	dec    edi
  406a5c:	test   BYTE PTR ss:[edi-0x2b],ah
  406a60:	fwait
  406a61:	(bad)  
  406a62:	(bad)  
  406a63:	test   DWORD PTR [edi],ebx
  406a65:	add    al,0x23
  406a67:	int    0x4
  406a69:	jno    0x406ace
  406a6b:	pop    ss
  406a6c:	jbe    0x406ae1
  406a6e:	mov    esi,0xa144ec24
  406a73:	mov    dl,0x8e
  406a75:	add    BYTE PTR [esi],0xa7
  406a78:	mov    edi,0x56976e90
  406a7d:	ja     0x406ad6
  406a7f:	cmp    ch,dl
  406a81:	mov    eax,ds:0x60c9d1d4
  406a86:	xchg   ebp,eax
  406a87:	pushf  
  406a88:	pop    ebx
  406a89:	test   al,0x12
  406a8b:	in     al,dx
  406a8c:	push   0x3025ef2
  406a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a92:	out    dx,eax
  406a93:	sbb    BYTE PTR [ebp+0x45],ah
  406a96:	stos   BYTE PTR es:[edi],al
  406a97:	mov    ebx,0x8da4c4b2
  406a9c:	in     eax,dx
  406a9d:	mov    BYTE PTR [edi],ch
  406a9f:	iret   
  406aa0:	test   BYTE PTR [esi-0x28],bh
  406aa3:	sub    BYTE PTR [edi],dh
  406aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aa6:	sahf   
  406aa7:	ficomp WORD PTR [esi+0x3]
  406aaa:	sub    al,0x17
  406aac:	pusha  
  406aad:	shr    DWORD PTR [edi+ecx*1+0x38],0x0
  406ab2:	pop    ebx
  406ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ab4:	jnp    0x406a7c
  406ab6:	popa   
  406ab7:	outs   dx,BYTE PTR ds:[esi]
  406ab8:	int3   
  406ab9:	aas    
  406aba:	jmp    0xfc667a1f
  406abf:	mov    ecx,0x1c7ab8ab
  406ac4:	ins    BYTE PTR es:[edi],dx
  406ac5:	cld    
  406ac6:	cmp    eax,0x26ba1d0a
  406acb:	(bad)  
  406acc:	les    ecx,FWORD PTR [edx]
  406ace:	push   esi
  406acf:	aam    0x76
  406ad1:	sbb    eax,0xaab8cc74
  406ad6:	cld    
  406ad7:	bound  edi,QWORD PTR [ecx]
  406ad9:	(bad)  
  406ada:	jmp    0xedb80649
  406adf:	and    al,0x89
  406ae1:	fdivr  DWORD PTR [esi]
  406ae3:	pop    ss
  406ae4:	fmul   QWORD PTR [eax+0xc]
  406ae7:	xchg   dl,bh
  406ae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aea:	and    al,0xe0
  406aec:	mov    cl,0x90
  406aee:	pcmpgtw mm4,mm2
  406af1:	and    DWORD PTR [esi+0xd0fb51d],ebp
  406af7:	inc    ebx
  406af8:	mov    bl,0xc1
  406afa:	enter  0x9a99,0x7e
  406afe:	or     eax,0xd9038f73
  406b03:	mov    eax,ds:0x262f6ddd
  406b08:	xor    BYTE PTR [ecx+edi*4+0x2b017553],ch
  406b0f:	js     0x406af1
  406b11:	xchg   esp,eax
  406b12:	adc    eax,0x73c74cc7
  406b17:	aad    0x7d
  406b19:	icebp  
  406b1a:	lds    ecx,FWORD PTR [ebx+0x45f4bf78]
  406b20:	out    dx,eax
  406b21:	pusha  
  406b22:	push   esi
  406b23:	pop    esp
  406b24:	jnp    0x406b1c
  406b26:	cmp    DWORD PTR [eax+0x6b562748],ebp
  406b2c:	ins    DWORD PTR es:[edi],dx
  406b2d:	xchg   edx,eax
  406b2e:	test   eax,0xd57e225
  406b33:	in     al,dx
  406b34:	repz mov ebx,0x6d307d1e
  406b3a:	leave  
  406b3b:	xor    al,0x5
  406b3d:	sar    BYTE PTR [ecx+0x272e0b0f],0xad
  406b44:	or     eax,0x73b476df
  406b49:	sti    
  406b4a:	sub    BYTE PTR [ebx-0x1cadbbdd],dh
  406b50:	mov    gs,WORD PTR [edi-0x31]
  406b53:	mov    ebp,0xed751376
  406b58:	adc    BYTE PTR [ecx],al
  406b5a:	lock arpl WORD PTR [edi-0x3d335e10],cx
  406b61:	dec    edi
  406b62:	(bad)  [ecx+esi*1-0x48e0392a]
  406b69:	gs cmp eax,0x4db37af3
  406b6f:	into   
  406b70:	je     0x406b75
  406b72:	mov    bl,0x10
  406b74:	xchg   edi,eax
  406b75:	xor    bh,BYTE PTR [edi+0x3]
  406b78:	out    dx,eax
  406b79:	adc    eax,0x3b5ecb90
  406b7e:	mov    ds:0x304296fd,eax
  406b83:	push   0x1d
  406b85:	cs cld 
  406b87:	jecxz  0x406bea
  406b89:	stos   DWORD PTR es:[edi],eax
  406b8a:	sbb    DWORD PTR [edi-0x37],ecx
  406b8d:	push   edx
  406b8e:	(bad)  
  406b8f:	cmp    eax,DWORD PTR [ebp-0x77]
  406b92:	loopne 0x406c0d
  406b94:	xchg   edx,eax
  406b95:	pusha  
  406b96:	inc    ebp
  406b97:	jne    0x406ba0
  406b99:	adc    al,BYTE PTR [ecx-0x6a]
  406b9c:	push   ebx
  406b9d:	jle    0x406bdb
  406b9f:	xchg   edi,eax
  406ba0:	push   0xffffffff
  406ba2:	and    eax,0x63f81c65
  406ba7:	dec    esp
  406ba8:	sub    eax,0x5662f66a
  406bad:	cmp    eax,0xf8b68db4
  406bb2:	and    dl,ah
  406bb4:	cli    
  406bb5:	jecxz  0x406c1b
  406bb7:	push   ebp
  406bb8:	ret    0xb918
  406bbb:	jmp    FWORD PTR [edi]
  406bbd:	jmp    0x91f57e04
  406bc2:	inc    ebx
  406bc3:	test   ecx,edi
  406bc5:	test   eax,0xb9ad6491
  406bca:	mov    al,ds:0x906f4187
  406bcf:	inc    ebx
  406bd0:	inc    esi
  406bd1:	loope  0x406bc2
  406bd3:	cmp    eax,0xb4ee37ea
  406bd8:	cwde   
  406bd9:	lods   eax,DWORD PTR ds:[esi]
  406bda:	jae    0x406c3d
  406bdc:	inc    ecx
  406bdd:	adc    eax,0x5ccb62ce
  406be2:	enter  0xf327,0xa9
  406be6:	in     eax,0x12
  406be8:	adc    al,0xe9
  406bea:	cdq    
  406beb:	sbb    BYTE PTR [eax-0x346ceb59],bh
  406bf1:	add    BYTE PTR [esi+esi*8],0xc
  406bf5:	ret    0x178c
  406bf8:	cmp    BYTE PTR [edx],ah
  406bfa:	ja     0x406bd5
  406bfc:	shl    DWORD PTR [edx-0x3724f11f],1
  406c02:	cmp    ch,BYTE PTR [esi-0x68c115bc]
  406c08:	rol    BYTE PTR [ecx-0x2a],0x98
  406c0c:	jbe    0x406bdd
  406c0e:	mov    ch,0xb2
  406c10:	mov    eax,0xc6aa8c5d
  406c15:	icebp  
  406c16:	daa    
  406c17:	sti    
  406c18:	cmp    DWORD PTR [edx+0x35],edi
  406c1b:	add    al,0xa3
  406c1d:	pop    eax
  406c1e:	xchg   edx,eax
  406c1f:	mov    al,0xbe
  406c21:	es mov esp,0x9a1921a5
  406c27:	lock xrelease add BYTE PTR [esi+ebx*4],dl
  406c2c:	xor    ebp,DWORD PTR [ebp-0x59]
  406c2f:	mov    al,0xd2
  406c31:	in     eax,dx
  406c32:	lea    edx,[eax]
  406c34:	jle    0x406c9a
  406c36:	add    DWORD PTR [ecx],0xffffffde
  406c39:	mov    DWORD PTR [edx+0x79fb57d8],ebx
  406c3f:	jnp    0x406be4
  406c41:	imul   esp,DWORD PTR gs:[ecx+ebp*2],0x661b0131
  406c49:	leave  
  406c4a:	sbb    DWORD PTR [esi+0x27],esi
  406c4d:	add    BYTE PTR [edx-0xa9a5245],bh
  406c53:	jge    0x406c69
  406c55:	cdq    
  406c56:	loopne 0x406cb5
  406c58:	ss jns 0x406cba
  406c5b:	(bad)  
  406c5c:	or     eax,0x4d90d3b6
  406c61:	mov    ds,WORD PTR [ecx+0x16132112]
  406c67:	xor    al,0xd5
  406c69:	jp     0x406ccb
  406c6b:	xor    BYTE PTR [esi],bl
  406c6d:	jg     0x406c0c
  406c6f:	xchg   ebx,eax
  406c70:	imul   edx,DWORD PTR ds:0xdb79e5d3,0x736a1061
  406c7a:	mov    dh,0xce
  406c7c:	ror    BYTE PTR [eax],0xb7
  406c7f:	es inc ecx
  406c81:	aas    
  406c82:	lahf   
  406c83:	push   es
  406c84:	pop    ebp
  406c85:	les    ebp,FWORD PTR [esi-0x1f]
  406c88:	push   edx
  406c89:	and    cl,BYTE PTR [edx+0x19774517]
  406c8f:	or     ebx,DWORD PTR [edi+0x435778f]
  406c95:	out    0x59,al
  406c97:	std    
  406c98:	xchg   edi,eax
  406c99:	jg     0x406cc6
  406c9b:	add    bh,BYTE PTR [edx+eiz*8+0x1d]
  406c9f:	das    
  406ca0:	out    0xe8,eax
  406ca2:	mov    edi,0x7bc836ba
  406ca7:	cmp    BYTE PTR [ebp+0x3e],0x1b
  406cab:	imul   ebx,DWORD PTR [ebx],0x31d0c63f
  406cb1:	popa   
  406cb2:	cli    
  406cb3:	and    DWORD PTR [edx+0x31],edx
  406cb6:	pop    edi
  406cb7:	(bad)  
  406cb8:	push   ebx
  406cb9:	inc    ebp
  406cba:	fninit 
  406cbc:	and    DWORD PTR [edi+0x4c7b43b],edi
  406cc2:	ja     0x406cc1
  406cc4:	leave  
  406cc5:	mov    eax,0x1578e547
  406cca:	adc    eax,0x2cb1608f
  406ccf:	addr16 int 0x73
  406cd2:	adc    ecx,DWORD PTR [edi-0x1b3c6a16]
  406cd8:	inc    ebp
  406cd9:	adc    al,BYTE PTR [ebx]
  406cdb:	cmp    eax,0x759fd192
  406ce0:	pop    edx
  406ce1:	call   0xd6c2:0xef52b122
  406ce8:	js     0x406ca3
  406cea:	pop    ebp
  406ceb:	xor    ecx,DWORD PTR [edx-0xe2911e5]
  406cf1:	pop    eax
  406cf2:	(bad)  
  406cf3:	in     al,dx
  406cf4:	or     cl,cl
  406cf6:	fstp   DWORD PTR [eax]
  406cf8:	adc    al,0xf6
  406cfa:	fdivr  QWORD PTR [edi+0xb268d77]
  406d00:	fcomp  QWORD PTR [edi+0x3c]
  406d03:	push   edx
  406d04:	xchg   ecx,eax
  406d05:	or     BYTE PTR gs:[ebx+0x1c],bh
  406d09:	sbb    dh,BYTE PTR [edx+0x2d6038ad]
  406d0f:	mov    al,0x7
  406d11:	jo     0x406cff
  406d13:	loop   0x406d34
  406d15:	sbb    BYTE PTR gs:[edx+0xb],dh
  406d19:	mov    ds:0x443ce2c8,al
  406d1e:	sbb    BYTE PTR [ecx+0x6],ah
  406d21:	dec    edx
  406d22:	and    ah,al
  406d24:	jg     0x5cc1ba62
  406d2a:	push   esp
  406d2b:	out    0x1a,eax
  406d2d:	inc    esp
  406d2e:	repz sti 
  406d30:	neg    DWORD PTR es:[edx+0x7d]
  406d34:	push   esp
  406d35:	ret    
  406d36:	adc    BYTE PTR [eax+0x50],al
  406d39:	cdq    
  406d3a:	pop    ebx
  406d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d3c:	out    0x56,eax
  406d3e:	sub    edx,DWORD PTR [edx]
  406d40:	jno    0x406d45
  406d42:	mov    ecx,0x2198f9e7
  406d47:	in     al,dx
  406d48:	ret    
  406d49:	rol    ecx,0x1a
  406d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d4d:	fdiv   QWORD PTR [ebx]
  406d4f:	or     DWORD PTR [edx],ebx
  406d51:	stc    
  406d52:	call   0x9b3d1874
  406d57:	add    eax,0xf9a12312
  406d5c:	pop    esp
  406d5d:	ins    BYTE PTR es:[edi],dx
  406d5e:	cmp    ch,BYTE PTR [ecx+0x446041e5]
  406d64:	mov    DWORD PTR [edx+0x74],edx
  406d67:	jnp    0x406d78
  406d69:	cmc    
  406d6a:	dec    esi
  406d6b:	adc    esi,DWORD PTR [esi+0x7b]
  406d6e:	mov    ch,0x77
  406d70:	dec    esi
  406d71:	or     dl,BYTE PTR [eax-0x6d96789b]
  406d77:	xchg   edx,eax
  406d78:	ror    DWORD PTR [ecx+0x26],0xe
  406d7c:	dec    esp
  406d7d:	sub    BYTE PTR [esi],al
  406d7f:	adc    ah,bl
  406d81:	cmc    
  406d82:	loopne 0x406de7
  406d84:	test   eax,0xb58785ff
  406d89:	call   0xab28eaf0
  406d8e:	in     eax,dx
  406d8f:	js     0x406d82
  406d91:	mov    ecx,0xa93a8032
  406d96:	push   esi
  406d97:	mov    edx,0xd86edf09
  406d9c:	lods   eax,DWORD PTR ds:[esi]
  406d9d:	sbb    bl,cl
  406d9f:	mov    fs,WORD PTR [ecx+ecx*1-0x4e]
  406da3:	test   DWORD PTR [esi],esi
  406da5:	cmp    DWORD PTR [esi-0x4e9a778b],ecx
  406dab:	xor    ch,BYTE PTR [ebx]
  406dad:	fbld   TBYTE PTR [edi]
  406daf:	xchg   ebx,eax
  406db0:	mov    al,ds:0xa0ebbd7a
  406db5:	lock cmp edx,0xca844ec8
  406dbc:	ret    
  406dbd:	add    edx,DWORD PTR [ebx-0x42849b1a]
  406dc3:	mov    DWORD PTR ds:0x5ce5ec21,esp
  406dc9:	pop    ebp
  406dca:	cdq    
  406dcb:	mov    ds:0x59413d22,eax
  406dd0:	mov    DWORD PTR [edx-0x72348419],edi
  406dd6:	bound  edi,QWORD PTR [edx]
  406dd8:	scas   al,BYTE PTR es:[edi]
  406dd9:	pusha  
  406dda:	adc    eax,0x1fbef138
  406ddf:	out    0x6d,al
  406de1:	pusha  
  406de2:	std    
  406de3:	nop
  406de4:	not    DWORD PTR [edi+0x6107d539]
  406dea:	push   ds
  406deb:	dec    ecx
  406dec:	or     eax,DWORD PTR [edi+0x59]
  406def:	pop    esi
  406df0:	and    eax,0x4a880656
  406df5:	mov    ?,WORD PTR [ebx+0x24b8cfe3]
  406dfb:	retf   
  406dfc:	(bad)  
  406dfd:	sbb    al,0x53
  406dff:	lahf   
  406e00:	cmp    esi,DWORD PTR [ebp+0x42368c02]
  406e06:	loop   0x406dfe
  406e08:	call   0xa1cc88ce
  406e0d:	sti    
  406e0e:	mov    BYTE PTR [ecx+0x6117e16b],dl
  406e14:	add    eax,0x5c901779
  406e19:	or     al,0x3f
  406e1b:	add    BYTE PTR [eax],0x8a
  406e1e:	int    0x71
  406e20:	lea    esi,[esi]
  406e22:	outs   dx,DWORD PTR ds:[esi]
  406e23:	fistp  WORD PTR [ebp+0x5d]
  406e26:	inc    esp
  406e27:	xor    DWORD PTR [esi],eax
  406e29:	sbb    ecx,DWORD PTR [eax+edi*4]
  406e2c:	mov    DWORD PTR ds:0x526b70e3,edx
  406e32:	mov    ds:0x37d35ae6,eax
  406e37:	ret    
  406e38:	mov    ch,0x38
  406e3a:	inc    ebx
  406e3b:	das    
  406e3c:	cmp    al,0xb9
  406e3e:	mov    dh,0xad
  406e40:	xchg   esp,eax
  406e41:	iret   
  406e42:	xor    BYTE PTR [ebp-0x1f088851],ch
  406e48:	add    BYTE PTR [ebx],ah
  406e4a:	mov    bh,0xc2
  406e4c:	popf   
  406e4d:	inc    ecx
  406e4e:	ins    DWORD PTR es:[edi],dx
  406e4f:	(bad)  
  406e50:	(bad)  
  406e51:	mov    edx,0xbaf2e809
  406e56:	mov    ch,0x55
  406e58:	xlat   BYTE PTR ds:[ebx]
  406e59:	(bad)  [edi]
  406e5b:	mov    esi,0x9642dce
  406e60:	cmp    esi,ebp
  406e62:	retf   0xd496
  406e65:	sbb    eax,0x3e3d0bfd
  406e6a:	retf   
  406e6b:	adc    ch,BYTE PTR [ebp+0x2125090f]
  406e71:	cmp    cl,ah
  406e73:	ss into 
  406e75:	hlt    
  406e76:	sbb    eax,0x20b0725c
  406e7b:	std    
  406e7c:	ror    DWORD PTR [edx],cl
  406e7e:	mov    al,0x49
  406e80:	inc    edx
  406e81:	scas   al,BYTE PTR es:[edi]
  406e82:	fiadd  WORD PTR [ebx+0x9]
  406e85:	ffreep st(7)
  406e87:	test   BYTE PTR [esi+0x3ff10c16],al
  406e8d:	shr    BYTE PTR [edi+0x40a72e1b],cl
  406e93:	and    bh,BYTE PTR [edi]
  406e95:	shl    BYTE PTR [eax],1
  406e97:	loopne 0x406ef0
  406e99:	neg    BYTE PTR [ecx]
  406e9b:	or     eax,edx
  406e9d:	sti    
  406e9e:	cmovae ebp,DWORD PTR [esi+esi*2+0x12135b13]
  406ea6:	or     al,0x43
  406ea8:	and    DWORD PTR es:[eax-0x41],edx
  406eac:	nop
  406ead:	or     eax,0x5ef5218c
  406eb2:	push   ebp
  406eb3:	(bad)  [edx+eax*4+0x5a9446a3]
  406eba:	loopne 0x406e47
  406ebc:	into   
  406ebd:	push   esp
  406ebe:	mov    eax,ds:0x774c1384
  406ec3:	and    al,BYTE PTR [edx+0x485669e5]
  406ec9:	mov    ebp,0xcaeea2c3
  406ece:	xor    ch,BYTE PTR [edx-0x8]
  406ed1:	pop    es
  406ed2:	mov    dl,0x69
  406ed4:	mov    DWORD PTR ds:0x56a7b948,eax
  406eda:	xor    eax,0x33c5226b
  406edf:	mov    bh,0x26
  406ee1:	cmp    al,0x85
  406ee3:	xchg   edi,eax
  406ee5:	repz adc al,BYTE PTR [eax-0x1f]
  406ee9:	rol    DWORD PTR [eax+edi*4+0x668649da],0x65
  406ef1:	in     al,0x69
  406ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ef4:	cmp    ebx,DWORD PTR [esi+0x7b6cf845]
  406efa:	push   ss
  406efb:	arpl   WORD PTR [esi],cx
  406efd:	stc    
  406efe:	or     eax,0xee513161
  406f03:	out    dx,al
  406f04:	inc    esi
  406f05:	mov    esi,DWORD PTR [ecx]
  406f07:	mov    al,0x19
  406f09:	push   ss
  406f0a:	cmp    DWORD PTR [ecx],edi
  406f0c:	outs   dx,DWORD PTR ds:[esi]
  406f0d:	mov    dl,0x85
  406f0f:	push   cs
  406f10:	mov    BYTE PTR [esi-0x2e],bh
  406f13:	rol    eax,cl
  406f15:	(bad)  
  406f16:	jns    0x406ec7
  406f18:	iret   
  406f19:	mov    dl,0x16
  406f1b:	aas    
  406f1c:	push   ecx
  406f1d:	add    eax,0xbe528b7e
  406f22:	aas    
  406f23:	clc    
  406f24:	mov    WORD PTR [eax-0x2a],ds
  406f27:	inc    esi
  406f28:	push   cs
  406f29:	popf   
  406f2a:	or     eax,0xd73a8b5d
  406f2f:	dec    ecx
  406f30:	mov    esp,0x400648ad
  406f35:	imul   ebx,DWORD PTR [edx+edi*1+0x7d],0x5c
  406f3a:	lods   al,BYTE PTR ds:[esi]
  406f3b:	jnp    0x406f0e
  406f3d:	ret    
  406f3e:	xchg   edx,eax
  406f3f:	push   edi
  406f40:	pop    esp
  406f41:	test   eax,0xaa45224a
  406f47:	pusha  
  406f48:	xchg   ecx,eax
  406f49:	sbb    DWORD PTR [edx+0x4fb7c97a],0xa97234a5
  406f53:	pop    edx
  406f54:	inc    edx
  406f55:	pop    ebx
  406f56:	xor    ah,BYTE PTR [ebp+0x6c5bf272]
  406f5c:	dec    esi
  406f5d:	imul   eax,DWORD PTR [ecx+0x54],0xbe020d5d
  406f64:	aaa    
  406f65:	call   0x3295:0x39043eca
  406f6c:	mov    ecx,DWORD PTR [eax]
  406f6e:	jae    0x406fee
  406f70:	aaa    
  406f71:	loope  0x406fea
  406f73:	xor    esp,DWORD PTR gs:[esi+0x6]
  406f77:	xchg   ecx,eax
  406f78:	push   ss
  406f79:	in     eax,dx
  406f7a:	stc    
  406f7b:	adc    DWORD PTR [edi],edx
  406f7d:	test   eax,0x4b7be718
  406f82:	adc    eax,0xc5ab2a9e
  406f87:	fnstcw WORD PTR [edx]
  406f89:	repz dec edi
  406f8b:	cmp    DWORD PTR [edx+0x44],ebp
  406f8e:	dec    ebp
  406f8f:	int3   
  406f90:	sub    eax,0xa90922c7
  406f95:	loope  0x406f25
  406f97:	fsubr  st,st(1)
  406f99:	pop    ds
  406f9a:	sbb    BYTE PTR [esi-0x6f],ch
  406f9d:	cmp    ebp,ebx
  406f9f:	pop    es
  406fa0:	mov    DWORD PTR [eax-0x48f69e55],0xd6274828
  406faa:	pop    edx
  406fab:	lds    ebx,FWORD PTR [ebx+ecx*4-0x64]
  406faf:	cs mov edi,0xdd6b04f
  406fb5:	into   
  406fb6:	test   DWORD PTR [ebx],0x8467d6dc
  406fbc:	(bad)  
  406fbd:	sbb    ah,BYTE PTR [esi+0x42]
  406fc0:	add    dh,BYTE PTR [ecx*8+0xc3999b3]
  406fc7:	(bad)  [edx-0x461d18c9]
  406fcd:	sahf   
  406fce:	imul   ebp,DWORD PTR [eax+eax*8-0x62],0x65b8467b
  406fd6:	or     DWORD PTR [ebx],edi
  406fd8:	mov    ecx,0x596bac9c
  406fdd:	pop    esp
  406fde:	call   0x9c999811
  406fe3:	test   DWORD PTR [ecx+0x40c42c9f],ebx
  406fe9:	mov    bl,BYTE PTR [ecx+ebp*8]
  406fec:	or     DWORD PTR [ebx-0x7b],edi
  406fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ff0:	mov    dl,0x89
  406ff2:	sar    esi,cl
  406ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ff5:	xchg   ebx,eax
  406ff6:	xor    ebx,ebp
  406ff8:	(bad)  
  406ff9:	mov    esp,DWORD PTR [ebx]
  406ffb:	retf   0xc297
  406ffe:	jecxz  0x40705a
  407000:	nop
  407001:	in     al,0xfc
  407003:	jmp    0x7377:0xe84ebe1e
  40700a:	hlt    
  40700b:	sub    al,0x17
  40700d:	push   esi
  40700e:	jnp    0x406ff1
  407010:	nop
  407011:	jecxz  0x407064
  407013:	pop    ecx
  407014:	es jp  0x406ff6
  407017:	mov    ebp,0xba47f975
  40701c:	test   eax,0x414395cc
  407021:	push   es
  407022:	fcomp  DWORD PTR [eax]
  407024:	inc    ebx
  407025:	fwait
  407026:	sub    edi,DWORD PTR ds:0xfdf62467
  40702c:	pop    edx
  40702d:	mov    cl,0x6b
  40702f:	ds fwait
  407031:	out    dx,eax
  407032:	(bad)  
  407033:	pop    esp
  407034:	daa    
  407035:	mov    ebp,0xc5cc7b9d
  40703a:	lock (bad) 
  40703c:	jno    0x40708f
  40703e:	mov    BYTE PTR [edx+esi*4-0x13df939f],0x6d
  407046:	inc    esi
  407047:	xchg   edi,eax
  407048:	inc    ecx
  407049:	mov    ch,0x5b
  40704b:	mov    fs,WORD PTR [edx-0x6651a27c]
  407051:	out    0x7c,eax
  407053:	push   0x46
  407055:	or     esi,esi
  407057:	hlt    
  407058:	xchg   edi,eax
  407059:	mov    ds:0x821ae87d,eax
  40705e:	adc    eax,esp
  407060:	(bad)  [ecx+0x3086ccd1]
  407066:	pop    eax
  407067:	pop    ebp
  407068:	jp     0x407045
  40706a:	pusha  
  40706b:	test   eax,0x7b380a00
  407070:	fldenv [ebx]
  407072:	jp     0x407085
  407074:	lock imul ecx,DWORD PTR [edx+0x1a],0xffffffcf
  407079:	retf   0x277c
  40707c:	xchg   BYTE PTR ds:[ebp-0x51],ah
  407080:	ins    DWORD PTR es:[edi],dx
  407081:	xor    eax,0x59412c9d
  407086:	popa   
  407087:	mov    esi,0xd322e1c
  40708c:	cmp    ch,0x28
  40708f:	cld    
  407090:	leave  
  407091:	mov    ebx,ds
  407093:	dec    edi
  407094:	xchg   edx,eax
  407095:	call   0xdc827033
  40709a:	inc    esi
  40709b:	pusha  
  40709c:	mov    eax,ds:0xd17a5038
  4070a1:	stos   BYTE PTR es:[edi],al
  4070a2:	inc    esi
  4070a3:	jl     0x4070b7
  4070a5:	shl    DWORD PTR fs:[ebx-0x14],1
  4070a9:	lods   eax,DWORD PTR ds:[esi]
  4070aa:	pop    eax
  4070ab:	outs   dx,BYTE PTR ds:[esi]
  4070ac:	leave  
  4070ad:	dec    esi
  4070ae:	push   ecx
  4070af:	or     DWORD PTR [eax+0x436c503],edi
  4070b5:	mov    dl,0xd3
  4070b7:	dec    eax
  4070b8:	mov    WORD PTR [edi+ebp*1],?
  4070bb:	les    edi,FWORD PTR [eax-0x7c4e936e]
  4070c1:	sahf   
  4070c2:	sub    eax,0xa78345c5
  4070c7:	fisub  WORD PTR [edi+eax*1+0x15]
  4070cb:	mov    esi,edi
  4070cd:	jnp    0x4070d6
  4070cf:	xchg   esp,eax
  4070d0:	into   
  4070d1:	pop    esp
  4070d2:	add    eax,0x931a2538
  4070d7:	mov    eax,ds:0x2b845727
  4070dc:	ret    
  4070dd:	or     bh,BYTE PTR [esp+ebx*8]
  4070e0:	lods   eax,DWORD PTR ds:[esi]
  4070e1:	jg     0x4070ed
  4070e3:	(bad)  
  4070e4:	out    dx,al
  4070e5:	pop    es
  4070e6:	xchg   ebp,eax
  4070e7:	stc    
  4070e8:	mov    al,es:0xeadaff67
  4070ee:	sbb    al,0x83
  4070f0:	dec    esp
  4070f1:	daa    
  4070f2:	mov    ebp,0x9f4d13dc
  4070f7:	fild   QWORD PTR [edi-0x27]
  4070fa:	jno    0x407087
  4070fc:	mov    esi,0x8c1d505
  407101:	call   0x2e50f64e
  407106:	mov    dh,0x85
  407108:	push   ss
  407109:	cmp    ebp,DWORD PTR [eax+0x4f5641fe]
  40710f:	sbb    DWORD PTR [ebp-0x3be92670],esi
  407115:	jp     0x407159
  407117:	or     ebx,DWORD PTR [edi+ecx*4]
  40711a:	xor    al,0xd4
  40711c:	inc    ebx
  40711d:	fwait
  40711e:	xchg   esi,eax
  40711f:	test   al,0xcc
  407121:	sub    DWORD PTR [ebp+0x69c1c2cd],edx
  407127:	push   es
  407128:	addr16 jle 0x4071a2
  40712b:	pop    ecx
  40712c:	fisubr WORD PTR [ecx-0x5c]
  40712f:	inc    edi
  407130:	sub    BYTE PTR [esi],cl
  407132:	xchg   DWORD PTR [ebp-0x21],eax
  407135:	inc    ecx
  407136:	adc    eax,0xd0b236e2
  40713b:	mov    ch,0xbd
  40713d:	imul   edx,edi,0xffffffd2
  407140:	shl    BYTE PTR [edx+0x3f],cl
  407143:	jl     0x407182
  407145:	mov    ebp,0x3214ce57
  40714a:	jl     0x4070fd
  40714c:	or     al,0x35
  40714e:	test   ebx,edx
  407150:	mov    ebx,0xade4ada3
  407155:	adc    dl,BYTE PTR [eax-0x37235f22]
  40715b:	mov    eax,ds:0xdac8fca7
  407160:	cmp    eax,0xb27be807
  407165:	or     al,0x3e
  407167:	les    esp,FWORD PTR [edi+eiz*1]
  40716a:	jnp    0x40712e
  40716c:	mov    eax,0x1dc946a7
  407171:	add    DWORD PTR [edx+0x13563f9c],ebx
  407177:	mov    edi,0xe656f2
  40717c:	out    dx,eax
  40717d:	fsubrp st(0),st
  40717f:	adc    eax,0xbed2106
  407184:	jmp    0x4071dc
  407186:	fidivr DWORD PTR [ecx]
  407188:	mov    eax,0x85d75ea2
  40718d:	jmp    0xc9b99779
  407192:	(bad)  
  407193:	sub    ebp,esi
  407195:	xchg   al,cl
  407197:	shl    DWORD PTR [ecx-0xa],0x6c
  40719b:	mov    eax,0x29277f46
  4071a0:	inc    edi
  4071a1:	js     0x4071b1
  4071a3:	pop    ds
  4071a4:	mov    bl,0xd8
  4071a6:	rcr    cl,1
  4071a8:	rcl    DWORD PTR [edx-0x7800dd44],cl
  4071ae:	aas    
  4071af:	les    edx,FWORD PTR [eax-0x20]
  4071b2:	add    ebx,DWORD PTR [eax+0x50]
  4071b5:	xor    edi,0x6c
  4071b8:	fadd   QWORD PTR [ebp-0x4c0ed953]
  4071be:	adc    ebp,DWORD PTR [edi]
  4071c0:	mov    edi,0xf231cc0f
  4071c5:	push   edx
  4071c6:	push   eax
  4071c7:	mov    ds:0xf9d7fa75,al
  4071cc:	out    0x7a,al
  4071ce:	sub    eax,0xba73b0cb
  4071d3:	lods   eax,DWORD PTR ds:[esi]
  4071d4:	mov    al,0x91
  4071d6:	(bad)  [edx+edi*1]
  4071d9:	jnp    0x407200
  4071db:	adc    eax,0xa16691c1
  4071e0:	pop    ds
  4071e1:	ja     0x407200
  4071e3:	or     dl,BYTE PTR [esi-0x5]
  4071e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071e7:	aam    0xc6
  4071e9:	pushf  
  4071ea:	dec    ebp
  4071eb:	mov    WORD PTR cs:[esp+ebx*1],ss
  4071ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f0:	mov    dh,0xd
  4071f2:	shr    BYTE PTR [esp+ebx*4+0x11527b65],cl
  4071f9:	arpl   WORD PTR [edx],bp
  4071fb:	inc    esp
  4071fc:	sub    bl,dh
  4071fe:	fsub   st(5),st
  407200:	add    BYTE PTR [eax+0x57],bh
  407203:	repnz hlt 
  407205:	jnp    0x4071d2
  407207:	imul   edi,ecx,0xb5ef89f1
  40720d:	jmp    0xeb53fb
  407212:	into   
  407213:	out    dx,eax
  407214:	or     BYTE PTR [edx-0x6e2382c3],al
  40721a:	popa   
  40721b:	es iret 
  40721d:	push   edi
  40721e:	pop    es
  40721f:	mov    dl,0x6e
  407221:	into   
  407222:	pop    esi
  407223:	inc    edx
  407224:	xchg   ebp,eax
  407225:	add    edi,DWORD PTR [ecx]
  407227:	mov    bl,0xe7
  407229:	cmc    
  40722a:	pmullw mm5,QWORD PTR [edi+0x16198051]
  407231:	lds    esi,FWORD PTR [ebp-0x3d]
  407234:	mov    BYTE PTR [ecx-0x61f27811],0x18
  40723b:	test   al,dl
  40723d:	cli    
  40723e:	sbb    ch,ch
  407240:	call   0x870222cc
  407245:	rol    esi,0x68
  407248:	xor    eax,0x4ebc93b2
  40724d:	call   0x2e3aba0c
  407252:	add    DWORD PTR [eax+esi*8-0x48],eax
  407256:	or     ecx,esp
  407258:	adc    eax,0xe5e934df
  40725d:	daa    
  40725e:	rol    cl,0xa0
  407261:	in     eax,0xc8
  407263:	jb     0x407260
  407265:	outs   dx,BYTE PTR ds:[esi]
  407266:	add    eax,0x12a54cdd
  40726b:	daa    
  40726c:	xchg   ebx,eax
  40726d:	aad    0x41
  40726f:	inc    esi
  407270:	cmp    BYTE PTR [ebx],cl
  407272:	pusha  
  407273:	nop
  407274:	and    eax,0x13f0d4bd
  407279:	xor    BYTE PTR [ecx],bl
  40727b:	lds    eax,FWORD PTR [edx-0x69e05862]
  407281:	mov    DWORD PTR [edi-0x21],ebp
  407284:	cmp    bl,bl
  407286:	pushf  
  407287:	lock imul ebx,ecx,0x46412151
  40728e:	cmc    
  40728f:	pop    edi
  407290:	(bad)  
  407291:	leave  
  407292:	arpl   WORD PTR [ebp+0x4c],ax
  407295:	jge    0x407283
  407297:	out    dx,al
  407298:	push   es
  407299:	push   edx
  40729a:	jb     0x40727c
  40729c:	retf   0x8189
  40729f:	jns    0x4072e8
  4072a1:	lds    edi,FWORD PTR [edi]
  4072a3:	cmp    eax,0xedd1b5c1
  4072a8:	pop    ebx
  4072a9:	out    dx,al
  4072aa:	xor    ebx,DWORD PTR [edx+edi*8-0x58aaf063]
  4072b1:	(bad)  
  4072b2:	mov    ah,BYTE PTR [esi-0x412a8ea9]
  4072b8:	in     al,dx
  4072b9:	cwde   
  4072ba:	push   cs
  4072bb:	cmp    DWORD PTR [edi],edx
  4072bd:	retf   
  4072be:	out    0x82,al
  4072c0:	xlat   BYTE PTR ds:[ebx]
  4072c1:	fs mov edx,0xade2a2f2
  4072c7:	push   ss
  4072c8:	xor    DWORD PTR [eax],0x43f5135
  4072ce:	jns    0x407254
  4072d0:	(bad)  
  4072d1:	mov    eax,es
  4072d3:	retf   
  4072d4:	retf   0xa61b
  4072d7:	out    dx,al
  4072d8:	pop    ds
  4072d9:	cmp    al,0x67
  4072db:	or     BYTE PTR [ebp+0x36],dl
  4072de:	sub    dh,BYTE PTR [eax-0x1a6f377c]
  4072e4:	sbb    al,0x5a
  4072e6:	outs   dx,BYTE PTR ds:[esi]
  4072e7:	push   0x5be5e9cc
  4072ec:	call   0x17a10144
  4072f1:	mov    bh,0xf0
  4072f3:	push   edi
  4072f4:	mov    bh,0x74
  4072f6:	add    al,0xb
  4072f8:	inc    esi
  4072f9:	outs   dx,BYTE PTR ds:[esi]
  4072fa:	cmp    edx,DWORD PTR [ecx]
  4072fc:	pop    esp
  4072fd:	dec    BYTE PTR [ebx-0x893f0f4]
  407303:	pop    ebp
  407304:	xor    eax,0x861ec84a
  407309:	mov    ebx,0x2b96a40
  40730e:	stc    
  40730f:	or     al,0xbc
  407311:	mov    ebx,0xcd0c6dd7
  407316:	das    
  407317:	add    al,0x80
  407319:	adc    eax,0x64688706
  40731f:	popa   
  407320:	mov    ah,0xad
  407322:	jge    0x4072cf
  407324:	inc    edi
  407325:	fld    st(4)
  407327:	adc    eax,0xa896a687
  40732c:	sbb    eax,DWORD PTR [ebp-0x66313df7]
  407332:	clc    
  407333:	adc    BYTE PTR [edx],0x44
  407336:	fisub  WORD PTR [ebx-0x4afb4d4a]
  40733c:	mov    ebp,0x7e720590
  407341:	dec    edi
  407342:	pusha  
  407343:	or     BYTE PTR [esi+0x5404d3b4],cl
  407349:	clc    
  40734a:	fldcw  WORD PTR [ebp-0x79]
  40734d:	xor    BYTE PTR [ebp+0x5b],al
  407350:	mov    BYTE PTR [esi+0xa],cl
  407353:	inc    edx
  407354:	push   0xc40311c9
  407359:	rcl    DWORD PTR [ebx+0x45],0xb4
  40735d:	pop    es
  40735e:	int    0xd4
  407360:	add    edi,DWORD PTR [eax+esi*1+0x2207f47f]
  407367:	or     ah,al
  407369:	ss cmp al,0x3d
  40736c:	adc    ebx,edx
  40736e:	lods   al,BYTE PTR ds:[esi]
  40736f:	loope  0x407360
  407371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407372:	dec    edx
  407373:	fwait
  407374:	xlat   BYTE PTR ds:[ebx]
  407375:	repnz clc 
  407377:	lahf   
  407378:	inc    ecx
  407379:	or     dh,BYTE PTR [edx-0x52]
  40737c:	out    dx,al
  40737d:	mov    WORD PTR [eax-0x22],ss
  407380:	sub    bl,bl
  407382:	xchg   BYTE PTR [edi+eax*4-0x37d4e1f6],bl
  407389:	sbb    DWORD PTR ds:0x75e48739,eax
  40738f:	sti    
  407390:	(bad)  
  407391:	jge    0x407328
  407393:	dec    edx
  407394:	mov    WORD PTR [ecx],gs
  407396:	and    eax,0x89385bee
  40739b:	cmp    al,0x50
  40739d:	jns    0x40733e
  40739f:	pop    ebp
  4073a0:	mov    esp,0xfdb82db6
  4073a5:	cdq    
  4073a6:	seto   BYTE PTR [esi]
  4073a9:	pop    eax
  4073aa:	mov    eax,ds:0xb962aee6
  4073af:	xor    eax,0x7cf5b1ea
  4073b4:	popf   
  4073b5:	retf   
  4073b6:	jmp    0x98b4:0xec529b27
  4073bd:	call   FWORD PTR [eax-0x59365872]
  4073c3:	aaa    
  4073c4:	xchg   edi,eax
  4073c5:	sbb    DWORD PTR [edi],ebx
  4073c7:	mov    ebx,DWORD PTR [ecx]
  4073c9:	sti    
  4073ca:	lahf   
  4073cb:	xor    DWORD PTR [eax],ebx
  4073cd:	inc    ebp
  4073ce:	out    dx,al
  4073cf:	fstp   TBYTE PTR [ecx+0x6c]
  4073d2:	dec    edi
  4073d3:	ret    
  4073d4:	sub    ah,bh
  4073d6:	mov    esi,0x1880c3c5
  4073db:	pop    edx
  4073dc:	xchg   ebp,eax
  4073dd:	iret   
  4073de:	rol    dl,0xfa
  4073e1:	and    cl,ch
  4073e3:	pop    esi
  4073e4:	sub    eax,0xfef1c88f
  4073e9:	mov    ds:0x454e556,al
  4073ee:	push   eax
  4073ef:	sbb    DWORD PTR [eax-0x24],0xef14b99f
  4073f6:	int    0x5d
  4073f8:	and    ebx,0xcb0eb4d2
  4073fe:	(bad)  
  4073ff:	fsubr  st(3),st
  407401:	jbe    0x40746a
  407403:	pusha  
  407404:	mov    ebx,0x32dc7e9d
  407409:	not    DWORD PTR [edx-0x5ab9f120]
  40740f:	loopne 0x40740c
  407411:	xchg   esi,edx
  407413:	std    
  407414:	inc    dl
  407416:	pop    ebp
  407417:	mov    ds:0xc4af5ff4,al
  40741c:	lea    eax,[eax-0x7570baae]
  407422:	jge    0x4073f6
  407424:	sub    al,0x43
  407426:	or     bh,BYTE PTR [edi]
  407428:	push   es
  407429:	sub    edx,DWORD PTR ds:0x8192183c
  40742f:	pop    es
  407430:	je     0x40747f
  407432:	sub    dh,BYTE PTR [esi]
  407434:	scas   eax,DWORD PTR es:[edi]
  407435:	popa   
  407436:	iret   
  407437:	cli    
  407438:	mov    eax,ds:0x83d28eb6
  40743d:	or     DWORD PTR [eax],ebx
  40743f:	dec    edi
  407440:	push   edx
  407441:	(bad)  
  407442:	int3   
  407443:	call   FWORD PTR [edi]
  407445:	les    edi,FWORD PTR [edi-0xa]
  407448:	int3   
  407449:	fidiv  WORD PTR [ebx-0x2c]
  40744c:	js     0x40745e
  40744e:	retf   
  40744f:	ror    edi,cl
  407451:	dec    edx
  407452:	int    0xaa
  407454:	push   ebx
  407455:	repz adc eax,0xd2c81c4
  40745b:	stc    
  40745c:	xchg   BYTE PTR [ebx+0x3a1037fa],dh
  407462:	jnp    0x4074d3
  407464:	pop    es
  407465:	pop    ecx
  407466:	cmp    al,BYTE PTR [esi+edx*8+0x12]
  40746a:	jae    0x40742f
  40746c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40746d:	adc    eax,0x2396e0eb
  407472:	daa    
  407473:	jb     0x4074c2
  407475:	ss push esp
  407477:	or     cl,BYTE PTR [ecx-0x6ef1e4ef]
  40747d:	dec    eax
  40747e:	mov    cl,BYTE PTR [esi+0x6b198cc5]
  407484:	xor    al,0x23
  407486:	ror    bl,cl
  407488:	(bad)  
  407489:	mov    bh,0x73
  40748b:	mov    bl,0xcc
  40748d:	les    eax,FWORD PTR [edx+0x61868458]
  407493:	xchg   BYTE PTR [edi+0x7341eeaf],dl
  407499:	rcl    ecx,1
  40749b:	or     ecx,edi
  40749d:	addr16 dec ebp
  40749f:	in     al,0x8
  4074a1:	sub    ah,bl
  4074a3:	add    DWORD PTR [ebp+0x1a],ebx
  4074a6:	cmp    al,0x31
  4074a8:	jbe    0x407456
  4074aa:	imul   edi,DWORD PTR [ebx-0x21778ba2],0xffffffd6
  4074b1:	cmp    DWORD PTR [esi-0x25],esi
  4074b4:	mov    ebx,0xc63c9e88
  4074b9:	fimul  WORD PTR [edx+0x7c]
  4074bc:	ror    BYTE PTR [eax],cl
  4074be:	xchg   esi,eax
  4074bf:	xor    al,0x96
  4074c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074c2:	sub    eax,0x6ddf30a2
  4074c7:	push   eax
  4074c8:	(bad)  
  4074c9:	sbb    DWORD PTR [esi-0x97ada88],esp
  4074cf:	(bad)  
  4074d0:	and    al,0x3a
  4074d2:	sar    BYTE PTR ds:0xea7ea68e,0x24
  4074d9:	stc    
  4074da:	or     eax,0xc79adefb
  4074df:	dec    ebp
  4074e0:	ss call 0x1a34a9de
  4074e6:	or     al,0xde
  4074e8:	jle    0x40751a
  4074ea:	fbstp  TBYTE PTR [eax]
  4074ec:	dec    eax
  4074ed:	jle    0x4074fb
  4074ef:	test   eax,0xca433de8
  4074f4:	cmp    eax,edx
  4074f6:	(bad)  
  4074f7:	mov    al,ds:0xffa511ba
  4074fc:	test   eax,0x19d0ee68
  407501:	jmp    0x86be:0x869f693c
  407508:	push   ss
  407509:	sti    
  40750a:	cli    
  40750b:	sub    BYTE PTR [eax+0x53],dl
  40750e:	pop    esi
  40750f:	out    0x17,al
  407511:	xor    al,0x0
  407513:	jg     0x407564
  407515:	xor    BYTE PTR [ecx+0x148bc285],bh
  40751b:	cmp    eax,esp
  40751d:	pop    esp
  40751e:	test   esp,0x174a7aa3
  407524:	loopne 0x4074bb
  407526:	push   es
  407527:	jle    0x407595
  407529:	mov    eax,0xe064e545
  40752e:	enter  0xc256,0xe6
  407532:	inc    ebx
  407533:	adc    BYTE PTR [ecx+0xb],al
  407536:	xchg   ecx,eax
  407537:	xor    bl,BYTE PTR [ecx]
  407539:	test   eax,0xb5c99a1c
  40753e:	lea    ecx,ds:0xb266d2dc
  407544:	scas   eax,DWORD PTR es:[edi]
  407545:	mov    al,0x42
  407547:	scas   al,BYTE PTR es:[edi]
  407548:	inc    ecx
  407549:	in     al,dx
  40754a:	push   edx
  40754b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40754c:	ds xor bh,ch
  40754f:	sbb    BYTE PTR [ebp+ebx*4-0x69],al
  407553:	xchg   edx,eax
  407554:	in     al,0xe2
  407556:	adc    eax,0x3f07b831
  40755b:	jmp    0xbcb7:0xd53093b6
  407562:	std    
  407563:	jl     0x4075af
  407565:	xchg   DWORD PTR [edx],ebp
  407567:	daa    
  407568:	pop    ebp
  407569:	push   esp
  40756a:	xor    eax,0xc061a5ea
  40756f:	xor    BYTE PTR [esi+0x36],0x1
  407573:	sbb    eax,0x942a6b87
  407578:	mov    ecx,0x8179560e
  40757d:	jne    0x40756a
  40757f:	mov    fs,WORD PTR [esi]
  407581:	pushf  
  407582:	jne    0x407546
  407584:	(bad)  
  407585:	popa   
  407586:	mov    dl,0x9b
  407588:	scas   al,BYTE PTR es:[edi]
  407589:	jmp    0xa2898a5
  40758e:	push   0x4851d04b
  407593:	xor    al,0xa9
  407595:	or     BYTE PTR ss:[ecx-0x24ce77b4],dl
  40759c:	outs   dx,DWORD PTR ds:[esi]
  40759d:	adc    eax,0x1bab0ddf
  4075a2:	sbb    DWORD PTR [esi-0x7b],ebx
  4075a5:	scas   al,BYTE PTR es:[edi]
  4075a6:	cmp    eax,0x7c6b53b6
  4075ab:	or     al,0xd2
  4075ad:	imul   eax,DWORD PTR [edi-0x64355d51],0x8d7d80b4
  4075b7:	call   0x203a:0x1d55fb07
  4075be:	mov    ah,0xfa
  4075c0:	dec    eax
  4075c1:	dec    esp
  4075c2:	cmp    eax,DWORD PTR [eax+0x6]
  4075c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075c6:	xchg   ebx,eax
  4075c7:	push   cs
  4075c8:	sbb    DWORD PTR [ebp+0x32],ebp
  4075cb:	loopne 0x4075e8
  4075cd:	xor    eax,0x51f4afb1
  4075d2:	mov    ecx,0x8c90d6b8
  4075d7:	loope  0x407627
  4075d9:	xchg   esp,eax
  4075da:	inc    esp
  4075db:	stos   DWORD PTR es:[edi],eax
  4075dc:	adc    DWORD PTR [edi-0x3a8230d],ebx
  4075e2:	push   ebp
  4075e3:	rol    DWORD PTR es:[ebx],0xd
  4075e7:	mov    ds:0x10aae458,al
  4075ec:	xchg   DWORD PTR [ecx-0x56],ebx
  4075ef:	cmc    
  4075f0:	cwde   
  4075f1:	je     0x4075b7
  4075f3:	mov    dh,0x4f
  4075f5:	hlt    
  4075f6:	jae    0x4075a4
  4075f8:	pop    ss
  4075f9:	add    al,dl
  4075fb:	add    eax,0x2a5cdc12
  407600:	ret    0x5caf
  407603:	mov    gs,WORD PTR [eax-0x4bf2ddeb]
  407609:	jmp    0xcc6b:0x8b5bc01d
  407610:	ficomp WORD PTR [eax+0x443ddc1a]
  407616:	dec    esp
  407617:	ss pusha 
  407619:	sbb    ebp,DWORD PTR [esi-0x61]
  40761c:	out    dx,al
  40761d:	sub    DWORD PTR [esi],edi
  40761f:	mov    al,ds:0xd9cb58c8
  407624:	fstp   TBYTE PTR [ebp+0x1b]
  407627:	pusha  
  407628:	imul   ebx,DWORD PTR [esi+eax*1],0xffffff9f
  40762c:	sbb    BYTE PTR fs:[edi+ecx*4],al
  407630:	dec    edi
  407631:	xchg   esi,eax
  407632:	(bad)  
  407633:	or     al,0x67
  407635:	in     eax,dx
  407636:	nop
  407637:	jg     0x4075f9
  407639:	es push edx
  40763b:	inc    ebp
  40763c:	or     DWORD PTR [ecx+edi*8],ecx
  40763f:	dec    ebx
  407640:	xchg   esp,eax
  407641:	adc    BYTE PTR [ebp+0xb],dh
  407644:	stc    
  407645:	sar    DWORD PTR [ebx+edi*1],cl
  407648:	into   
  407649:	sbb    dl,al
  40764b:	stc    
  40764c:	sti    
  40764d:	adc    ch,bl
  40764f:	add    BYTE PTR [esi-0x29b73ab8],bl
  407655:	imul   edx,ebx,0xefaa8e3
  40765b:	ins    BYTE PTR es:[edi],dx
  40765c:	jae    0x407653
  40765e:	aad    0x64
  407660:	xor    DWORD PTR [ebx+0x15a1b4fc],edi
  407666:	pop    esp
  407667:	xchg   ecx,eax
  407668:	mov    ecx,0xb7eda9d9
  40766d:	in     al,0x41
  40766f:	push   esp
  407670:	xor    eax,0x33319917
  407675:	sub    DWORD PTR [ebp+0x7a45f0b6],eax
  40767b:	push   ds
  40767c:	not    BYTE PTR [edi]
  40767e:	nop
  40767f:	das    
  407680:	mov    WORD PTR [ebx+0x66],gs
  407683:	or     DWORD PTR [esi+0x61d6c485],eax
  407689:	in     eax,0x55
  40768b:	ins    BYTE PTR es:[edi],dx
  40768c:	mov    esp,DWORD PTR [ebx-0x5197ce94]
  407692:	lock in al,dx
  407694:	cwde   
  407695:	cmp    eax,0xe359f51b
  40769a:	cmp    ah,bl
  40769c:	out    dx,al
  40769d:	(bad)
  4076a1:	dec    esp
  4076a2:	aad    0x69
  4076a4:	mov    bh,0x88
  4076a6:	push   esi
  4076a7:	or     eax,0x774e6972
  4076ac:	mov    ch,0xd1
  4076ae:	xchg   esi,eax
  4076af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076b0:	idiv   DWORD PTR [ebp-0x6d147faa]
  4076b6:	xchg   DWORD PTR [ecx-0x22b419a1],esp
  4076bc:	cmp    eax,eax
  4076be:	mov    edi,0x6dd8d1cd
  4076c3:	mov    al,0x27
  4076c5:	xor    eax,0xe8db0194
  4076ca:	or     eax,DWORD PTR [edi-0x5ae82441]
  4076d0:	push   ebp
  4076d1:	outs   dx,DWORD PTR ds:[esi]
  4076d2:	enter  0x9523,0x4b
  4076d6:	fsubr  st,st(7)
  4076d8:	mov    al,0x30
  4076da:	pop    ds
  4076db:	neg    dl
  4076dd:	mov    esp,0xbd723ca
  4076e2:	dec    ecx
  4076e3:	jmp    0xdf63:0x351f778b
  4076ea:	hlt    
  4076eb:	lods   eax,DWORD PTR ds:[esi]
  4076ec:	sbb    DWORD PTR [esi+0x11],ecx
  4076ef:	cli    
  4076f0:	popa   
  4076f1:	mov    ecx,0x89a4a062
  4076f6:	int    0xdd
  4076f8:	gs push edx
  4076fa:	jg     0x4076d3
  4076fc:	les    esp,FWORD PTR [esi-0xf]
  4076ff:	and    dl,BYTE PTR [esi+0x5a0a0fbe]
  407705:	shl    DWORD PTR [ebx-0x47],cl
  407708:	test   BYTE PTR ds:[eax],bl
  40770b:	daa    
  40770c:	pop    edi
  40770d:	sbb    al,0x2b
  40770f:	sbb    eax,0x17acd44f
  407714:	lds    ecx,FWORD PTR [ebx+0x3d]
  407717:	mov    ah,0xd0
  407719:	mov    esi,0xc6f7bc86
  40771e:	mov    esi,0x9f7bc10
  407723:	(bad)  
  407724:	jnp    0x407719
  407726:	mov    ecx,0x22058855
  40772b:	jmp    0xca63:0x632c1bdb
  407732:	add    esi,DWORD PTR [esi-0x602e48e]
  407738:	push   cs
  407739:	jmp    0x407703
  40773b:	adc    BYTE PTR [ecx],cl
  40773d:	imul   WORD PTR [ebx]
  407740:	dec    ebx
  407741:	sub    eax,DWORD PTR [edx-0x17]
  407744:	jl     0x4077be
  407746:	aad    0xe
  407748:	pop    ebx
  407749:	mov    ch,0xd3
  40774b:	or     cl,BYTE PTR [edx+0x79]
  40774e:	or     dh,BYTE PTR [eax]
  407750:	jo     0x4077c0
  407752:	es adc edi,esp
  407755:	cmp    DWORD PTR [ecx-0x4c097520],0x1e31e57c
  40775f:	and    al,0x10
  407761:	push   esi
  407762:	cmc    
  407763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407764:	cmp    cl,dh
  407766:	mov    al,0x7d
  407768:	mov    ebx,0x12e3ec9c
  40776d:	fcmovb st,st(4)
  40776f:	sbb    cl,0x83
  407772:	or     al,0x76
  407774:	out    0x46,eax
  407776:	lods   eax,DWORD PTR ds:[esi]
  407777:	(bad)  
  407778:	xor    ch,BYTE PTR [ecx]
  40777a:	adc    al,0xf3
  40777c:	mov    ebx,DWORD PTR [edi-0x4]
  40777f:	jno    0x407787
  407781:	jnp    0x4077d3
  407783:	jae    0x407800
  407785:	test   DWORD PTR [edx-0x2c],edi
  407788:	stos   BYTE PTR es:[edi],al
  407789:	xor    BYTE PTR [edi-0x7ccf6638],bl
  40778f:	inc    esp
  407790:	mov    al,ds:0x700e9ba
  407795:	dec    edi
  407796:	xchg   esp,eax
  407797:	mov    cl,0x45
  407799:	push   ecx
  40779a:	test   ecx,eax
  40779c:	push   esp
  40779d:	(bad)  
  40779e:	mov    ah,0x6
  4077a0:	ins    BYTE PTR es:[edi],dx
  4077a1:	std    
  4077a2:	icebp  
  4077a3:	inc    ebp
  4077a4:	cwde   
  4077a5:	or     eax,0x3af70e53
  4077aa:	adc    DWORD PTR [edx],edi
  4077ac:	int    0x4d
  4077ae:	add    BYTE PTR [edx-0x38],0x1d
  4077b2:	and    BYTE PTR [ebx+eax*2-0x4a0fd697],cl
  4077b9:	push   ecx
  4077ba:	pop    esi
  4077bb:	mov    al,ds:0xe45c0bf2
  4077c0:	push   ebp
  4077c1:	cmc    
  4077c2:	clc    
  4077c3:	repnz cmc 
  4077c5:	sub    edx,DWORD PTR [ebx]
  4077c7:	xlat   BYTE PTR ds:[ebx]
  4077c8:	or     dl,cl
  4077ca:	xor    eax,0xbc9bc6fd
  4077cf:	pop    edx
  4077d0:	inc    esp
  4077d1:	fwait
  4077d2:	and    al,0xee
  4077d4:	dec    esp
  4077d5:	mov    al,0x75
  4077d7:	fs jp  0x4077d8
  4077da:	pop    es
  4077db:	(bad)  
  4077dc:	mov    ah,0x0
  4077de:	push   esi
  4077df:	jno    0x40781d
  4077e1:	xchg   ecx,eax
  4077e2:	out    0xfc,al
  4077e4:	push   esp
  4077e5:	add    DWORD PTR [ecx-0x67],0xffffff92
  4077e9:	push   ss
  4077ea:	je     0x407812
  4077ec:	sar    DWORD PTR [esi+esi*4-0x3a],0x1a
  4077f1:	ret    
  4077f2:	jae    0x4077db
  4077f4:	adc    eax,0x845d3bc7
  4077f9:	push   cs
  4077fa:	mov    bh,0xc7
  4077fc:	push   ebx
  4077fd:	je     0x4077a5
  4077ff:	jecxz  0x40787b
  407801:	das    
  407802:	mov    ds:0x51581939,al
  407807:	push   es
  407808:	pop    ds
  407809:	mov    cl,0xaf
  40780b:	or     eax,0x949fd0e0
  407810:	and    edx,DWORD PTR [esi+0x34]
  407813:	xchg   BYTE PTR [ebx+ebp*4-0x23],dl
  407817:	clc    
  407818:	sahf   
  407819:	call   FWORD PTR [edx]
  40781b:	mov    al,0x97
  40781d:	lock push ebx
  40781f:	hlt    
  407820:	loop   0x407852
  407822:	sub    BYTE PTR [ebx],0xa1
  407825:	cmp    ebx,DWORD PTR [edi-0x10]
  407828:	mov    eax,ebx
  40782a:	adc    ch,BYTE PTR [ebp-0x28]
  40782d:	push   cs
  40782e:	aaa    
  40782f:	fistp  DWORD PTR [ecx]
  407831:	jp     0x40784e
  407833:	xor    BYTE PTR [ecx+edx*8+0x14],dh
  407837:	push   ebx
  407838:	adc    cl,bh
  40783a:	cdq    
  40783b:	jne    0x4077ee
  40783d:	xchg   esi,eax
  40783e:	dec    ebp
  40783f:	or     eax,0xeae55ae5
  407844:	sub    edx,DWORD PTR [edi-0x74ebc2df]
  40784a:	or     al,0x6e
  40784c:	or     eax,0x89f5058f
  407851:	in     eax,0xa0
  407853:	push   edi
  407854:	jmp    FWORD PTR [eax+edx*1]
  407857:	jmp    0x173e:0xd16960ff
  40785e:	xor    edx,DWORD PTR [ebx-0x34da3f74]
  407864:	xchg   bh,bh
  407866:	shr    DWORD PTR [edi],cl
  407868:	pop    esp
  407869:	test   BYTE PTR [esi-0x1d],ch
  40786c:	dec    edx
  40786d:	in     eax,0x52
  40786f:	push   esp
  407870:	sti    
  407871:	inc    edx
  407872:	ss or  ebx,esp
  407875:	dec    esp
  407876:	xor    al,0xcc
  407878:	and    eax,0xf18b3679
  40787d:	add    edx,DWORD PTR [edx+0x484cca04]
  407883:	adc    bl,BYTE PTR [esi-0x7a]
  407886:	fild   DWORD PTR [edi+ecx*4-0x2bcc2fc1]
  40788d:	xlat   BYTE PTR ds:[ebx]
  40788e:	mov    ch,0x1b
  407890:	adc    DWORD PTR [ebx-0x34],ecx
  407893:	cs push edx
  407895:	cmp    ebp,DWORD PTR fs:[ebp+edi*8+0x1adbea58]
  40789d:	sbb    al,0x4e
  40789f:	adc    al,0xcc
  4078a1:	jae    0x407858
  4078a3:	fmul   QWORD PTR [eax+0x4b]
  4078a6:	inc    eax
  4078a7:	dec    eax
  4078a8:	in     eax,0xc0
  4078aa:	inc    ebp
  4078ab:	test   al,0xae
  4078ad:	nop
  4078ae:	add    eax,0x3ea11161
  4078b3:	push   ebp
  4078b4:	popf   
  4078b5:	pop    edx
  4078b6:	cmp    edi,ebx
  4078b8:	pop    esp
  4078b9:	rol    DWORD PTR [ecx+0x7a3b2ba5],cl
  4078bf:	mov    al,0xc8
  4078c1:	cs add al,0x8b
  4078c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078c5:	cli    
  4078c6:	mov    ch,0x33
  4078c8:	and    eax,0xd8da708d
  4078cd:	mov    ah,0x91
  4078cf:	sbb    BYTE PTR [ebx],bh
  4078d1:	mul    DWORD PTR [edx-0x50]
  4078d4:	leave  
  4078d5:	popa   
  4078d6:	inc    ebp
  4078d7:	pop    ecx
  4078d8:	jmp    0xdca7:0x359ba89f
  4078df:	jmp    0xd1a6:0x2b13dd01
  4078e6:	sbb    BYTE PTR [esi],0xe
  4078e9:	fbld   TBYTE PTR [esi-0xf]
  4078ec:	jnp    0x4078ad
  4078ee:	mov    dh,0x77
  4078f0:	int3   
  4078f1:	add    DWORD PTR [edi-0x7cc7f689],0x437d219d
  4078fb:	out    dx,al
  4078fc:	daa    
  4078fd:	cmp    ecx,DWORD PTR [ebp+0x3bcd9876]
  407903:	sti    
  407904:	jp     0x4078d0
  407906:	mov    eax,ds:0x351ae67b
  40790b:	pop    esi
  40790c:	cmp    al,0x6
  40790e:	gs mov ebp,0xb1ad8abf
  407914:	into   
  407915:	and    BYTE PTR [esi],ch
  407917:	cmp    ah,al
  407919:	add    ebp,DWORD PTR [edi]
  40791b:	push   ds
  40791c:	imul   ebp,edx,0x4f
  40791f:	hlt    
  407920:	add    al,BYTE PTR [edx+0x5]
  407923:	push   ebx
  407924:	in     al,0x43
  407926:	jb     0x407908
  407928:	inc    esp
  407929:	cmp    DWORD PTR [esi-0x33807272],ebp
  40792f:	sub    al,0xb7
  407931:	add    edi,DWORD PTR [ecx+0x5c]
  407934:	addr16 mov eax,0x961a3e13
  40793a:	xchg   ebp,eax
  40793b:	clc    
  40793c:	pop    esp
  40793d:	add    eax,0x6e7b957d
  407942:	or     ecx,DWORD PTR [eax+0x48ce080b]
  407948:	and    esi,esi
  40794a:	out    dx,al
  40794b:	test   BYTE PTR [esi],ch
  40794d:	std    
  40794e:	ds mov dl,0xbd
  407951:	dec    esi
  407952:	adc    BYTE PTR [esi-0x37bd610c],al
  407958:	dec    ebx
  407959:	xor    esi,ecx
  40795b:	xchg   ebp,eax
  40795c:	idiv   BYTE PTR fs:[edx+0x1f]
  407960:	jge    0x407917
  407962:	daa    
  407963:	adc    al,0x27
  407965:	jecxz  0x407909
  407967:	sbb    ch,BYTE PTR [ecx]
  407969:	ds icebp 
  40796b:	jg     0x40792c
  40796d:	aas    
  40796e:	outs   dx,BYTE PTR ds:[esi]
  40796f:	lahf   
  407970:	es sub edx,ebx
  407973:	popf   
  407974:	dec    ecx
  407975:	mov    esp,0xd4e870af
  40797a:	add    al,BYTE PTR [esi+ebp*8+0x24d1754e]
  407981:	jge    0x40790b
  407983:	dec    eax
  407984:	repz call 0xae927970
  40798a:	fwait
  40798b:	test   al,0xad
  40798d:	nop
  40798e:	lock cld 
  407990:	jmp    0x169d695a
  407995:	call   0xa1d0:0xf61e5b65
  40799c:	mov    al,0x29
  40799e:	pop    eax
  40799f:	and    edx,DWORD PTR [edi+0x17]
  4079a2:	fimul  DWORD PTR [ebx+eax*1+0x5405d67d]
  4079a9:	and    BYTE PTR [edx+0x52],0x7f
  4079ad:	std    
  4079ae:	pop    edx
  4079af:	mov    ?,WORD PTR [esi]
  4079b1:	pop    eax
  4079b2:	push   0xffffffdd
  4079b4:	cmp    eax,0x7f0ea255
  4079b9:	or     al,0x72
  4079bb:	sti    
  4079bc:	(bad)  
  4079bd:	scas   al,BYTE PTR es:[edi]
  4079be:	ficom  WORD PTR ds:0x292b4875
  4079c4:	nop
  4079c5:	push   edx
  4079c6:	sub    al,0xdc
  4079c8:	dec    esp
  4079c9:	mov    esi,0xd2361b9a
  4079ce:	imul   edx,edi,0x69
  4079d1:	push   edx
  4079d2:	das    
  4079d3:	test   al,al
  4079d5:	outs   dx,BYTE PTR ds:[esi]
  4079d6:	add    edi,DWORD PTR [edx+0x55]
  4079d9:	scas   al,BYTE PTR es:[edi]
  4079da:	jp     0x407964
  4079dc:	add    dh,ch
  4079de:	or     al,dl
  4079e0:	sbb    al,0xe7
  4079e2:	cmp    eax,0x134c84a3
  4079e7:	pop    edx
  4079e9:	inc    ebx
  4079ea:	xor    DWORD PTR [ecx],ecx
  4079ec:	std    
  4079ed:	and    al,0x7d
  4079ef:	ins    BYTE PTR es:[edi],dx
  4079f0:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4079f2:	ret    
  4079f3:	outs   dx,BYTE PTR ds:[esi]
  4079f4:	lods   eax,DWORD PTR ds:[esi]
  4079f5:	pop    esi
  4079f6:	je     0x4079bc
  4079f8:	iret   
  4079f9:	jmp    0x4079ff
  4079fb:	pop    esp
  4079fc:	adc    BYTE PTR [ecx],bl
  4079fe:	ins    BYTE PTR es:[edi],dx
  4079ff:	or     ch,BYTE PTR [ebx-0x5c]
  407a02:	mov    bh,0xd
  407a04:	push   ebp
  407a05:	clc    
  407a06:	jle    0x4079c6
  407a08:	(bad)  
  407a09:	outs   dx,BYTE PTR gs:[esi]
  407a0b:	cmp    eax,0x349a999c
  407a10:	jmp    0x407a6a
  407a12:	xchg   ebx,eax
  407a13:	lahf   
  407a14:	sub    eax,0x350a3379
  407a19:	mov    ds:0x698e2250,eax
  407a1e:	xor    al,0x22
  407a20:	adc    DWORD PTR [esi],0x79f2bf9e
  407a26:	icebp  
  407a27:	add    BYTE PTR [edx+edx*8+0x508de575],bl
  407a2e:	inc    edx
  407a2f:	ror    BYTE PTR [ebp-0x661084b6],cl
  407a35:	sub    dl,BYTE PTR [eax]
  407a37:	xchg   esi,eax
  407a38:	les    edx,FWORD PTR [edi+0x2b3113cb]
  407a3e:	xor    eax,0x4d8c996
  407a43:	pusha  
  407a44:	add    ecx,DWORD PTR [ebx+0x558bfc4d]
  407a4a:	shl    BYTE PTR [ebx],1
  407a4c:	retf   
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0xb01f981a
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	cld    
  407b36:	push   es
  407b37:	ins    DWORD PTR es:[edi],dx
  407b38:	push   ebp
  407b39:	sete   BYTE PTR [esi+esi*2]
  407b3d:	scas   al,BYTE PTR es:[edi]
  407b3e:	mov    ch,0xe5
  407b40:	sbb    DWORD PTR [di],ebx
  407b43:	mov    al,0x3c
  407b45:	jle    0x407b6d
  407b47:	in     eax,dx
  407b48:	data16 mov ch,bh
  407b4b:	dec    esi
  407b4c:	jns    0x407ae1
  407b4e:	push   es
  407b4f:	mov    bl,0xbc
  407b51:	mov    ds:0xc712215f,al
  407b56:	sub    BYTE PTR [esi+edx*8+0x76],0x10
  407b5b:	mov    eax,0x8df4963a
  407b60:	and    bh,ah
  407b62:	push   0x62fb4135
  407b67:	sahf   
  407b68:	adc    DWORD PTR [edx],0x5a68d000
  407b6e:	in     al,dx
  407b6f:	repz add esp,DWORD PTR [esi+0x5a]
  407b73:	and    bl,bh
  407b75:	mov    bl,0x23
  407b77:	ror    DWORD PTR [edx],0xed
  407b7a:	std    
  407b7b:	sub    BYTE PTR [edx-0x3e],0x42
  407b7f:	into   
  407b80:	dec    edi
  407b81:	fst    DWORD PTR [esi+0x32]
  407b84:	(bad)  
  407b85:	std    
  407b86:	jmp    0x62f3:0xce5df4f8
  407b8d:	mov    bl,0x3f
  407b8f:	xor    esp,DWORD PTR [ebp+edi*8-0x5712cbda]
  407b96:	xchg   esp,eax
  407b97:	jno    0x407be8
  407b99:	nop
  407b9a:	mov    al,ds:0x13afb696
  407b9f:	add    eax,0x7b3252b5
  407ba4:	pop    es
  407ba5:	push   ss
  407ba6:	outs   dx,DWORD PTR ds:[esi]
  407ba7:	cwde   
  407ba8:	cmp    BYTE PTR [ebx+0x4b],0xe3
  407bac:	sub    al,0xe7
  407bae:	(bad)  
  407baf:	cdq    
  407bb0:	lods   eax,DWORD PTR ds:[esi]
  407bb1:	xor    eax,0xd9df764e
  407bb6:	jae    0x407b76
  407bb8:	or     eax,DWORD PTR [ebp+0x31]
  407bbb:	sbb    BYTE PTR [edi-0x55076b7e],bh
  407bc1:	out    dx,al
  407bc2:	lods   eax,DWORD PTR ds:[esi]
  407bc3:	sub    dh,bl
  407bc5:	mov    ebx,0x14bd353b
  407bca:	xchg   ebx,eax
  407bcb:	leave  
  407bcc:	xor    al,0x5a
  407bcf:	adc    DWORD PTR [ecx],ebx
  407bd1:	js     0x407c34
  407bd3:	icebp  
  407bd4:	not    esp
  407bd6:	mov    DWORD PTR [eax-0x6d32d60d],ebx
  407bdc:	xlat   BYTE PTR ds:[ebx]
  407bdd:	push   ecx
  407bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407be0:	out    dx,al
  407be1:	loopne 0x407c01
  407be3:	pop    edx
  407be4:	mov    al,0x93
  407be6:	push   ebp
  407be7:	mov    ecx,0xac46475a
  407bec:	cld    
  407bed:	inc    esi
  407bee:	inc    ebx
  407bef:	imul   ebp,DWORD PTR [esp+eax*8-0x646109ff],0x317a5f2e
  407bfa:	dec    ebx
  407bfb:	aam    0x47
  407bfd:	iret   
  407bfe:	lock jecxz 0x407c62
  407c01:	ins    DWORD PTR es:[edi],dx
  407c02:	lods   eax,DWORD PTR ds:[esi]
  407c03:	out    dx,al
  407c04:	xchg   esp,eax
  407c05:	and    ebp,esi
  407c07:	es cwde 
  407c09:	add    bh,BYTE PTR ds:0x75d78689
  407c0f:	dec    DWORD PTR [eax]
  407c11:	pop    ds
  407c12:	mov    ds:0xd691553f,al
  407c17:	xchg   ebp,eax
  407c18:	retf   
  407c19:	bound  edi,QWORD PTR [eax+0x5e]
  407c1c:	out    0xd9,eax
  407c1e:	add    BYTE PTR [ebx+0x68],bh
  407c21:	jmp    0xa00c051e
  407c26:	sbb    ah,bl
  407c28:	add    eax,0x64a81f4
  407c2d:	jge    0x407c98
  407c2f:	and    dl,al
  407c31:	dec    ebp
  407c32:	sbb    DWORD PTR [eax+0x43],edi
  407c35:	mov    edx,esi
  407c37:	jns    0x407c4c
  407c39:	sub    eax,0xa4e19511
  407c3e:	add    eax,0x878cfe88
  407c43:	mov    bh,0x51
  407c45:	adc    dl,bl
  407c47:	cmp    al,dh
  407c49:	inc    ecx
  407c4a:	lea    ebp,[edx]
  407c4c:	out    0x86,al
  407c4e:	ins    DWORD PTR es:[edi],dx
  407c4f:	loopne 0x407c80
  407c51:	addr16 push esi
  407c53:	jl     0x407bf9
  407c55:	(bad)  
  407c56:	sbb    ch,BYTE PTR [edi+0x2a]
  407c59:	neg    DWORD PTR [edi+0x236c8a04]
  407c5f:	cs dec edx
  407c61:	mov    bh,0x6a
  407c63:	xchg   ecx,eax
  407c64:	inc    BYTE PTR [ecx-0x18]
  407c67:	test   DWORD PTR [edi],edi
  407c69:	fnstsw WORD PTR [ecx+0x27]
  407c6c:	lods   eax,DWORD PTR ds:[esi]
  407c6d:	or     DWORD PTR fs:[ebp+esi*2+0x323ac91e],esi
  407c75:	or     bl,BYTE PTR [eax+eiz*2]
  407c78:	xchg   esp,esi
  407c7a:	loop   0x407cac
  407c7c:	pop    esp
  407c7d:	scas   al,BYTE PTR es:[edi]
  407c7e:	jbe    0x407ce3
  407c80:	push   esp
  407c81:	outs   dx,BYTE PTR ds:[esi]
  407c82:	xchg   DWORD PTR [edi+0x2047f12a],ecx
  407c88:	mov    dh,0xd8
  407c8a:	call   0xb2f71a35
  407c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c90:	jns    0x407c2b
  407c92:	and    eax,0x9898a50c
  407c97:	ins    DWORD PTR es:[edi],dx
  407c98:	call   0x27fa:0xc7fbe465
  407c9f:	scas   al,BYTE PTR es:[edi]
  407ca0:	sbb    al,0xb8
  407ca2:	fsub   DWORD PTR [ecx+0x57]
  407ca5:	and    esp,DWORD PTR [edi+0x6180af03]
  407cab:	jo     0x407c33
  407cad:	into   
  407cae:	leave  
  407caf:	cli    
  407cb0:	daa    
  407cb1:	adc    BYTE PTR ds:0x353f6493,bh
  407cb7:	fisttp DWORD PTR [esi-0x4cee7a9]
  407cbd:	jmp    FWORD PTR [edi-0x1]
  407cc0:	jns    0x407c4f
  407cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cc3:	mov    ecx,0x7002e47c
  407cc8:	mov    al,BYTE PTR [edx]
  407cca:	int3   
  407ccb:	mov    BYTE PTR [ebx+0x15b489ad],bl
  407cd1:	jecxz  0x407ca7
  407cd3:	lods   eax,DWORD PTR ds:[esi]
  407cd4:	sub    DWORD PTR [ebx+0x0],ebx
  407cd7:	ja     0x407c5d
  407cd9:	mov    al,0x95
  407cdb:	in     al,0x8c
  407cdd:	or     eax,0xbaead8fa
  407ce2:	test   ecx,edi
  407ce4:	lods   eax,DWORD PTR ds:[esi]
  407ce5:	leave  
  407ce6:	jg     0x407d45
  407ce8:	test   al,0x22
  407cea:	jnp    0x407c86
  407cec:	shr    DWORD PTR [edi+0x5ef27043],0x94
  407cf3:	mov    esp,DWORD PTR [ebp+0x7e]
  407cf6:	pop    ebx
  407cf7:	sahf   
  407cf8:	fiadd  DWORD PTR [edi]
  407cfa:	lds    ebx,FWORD PTR [edx-0x295bb5fa]
  407d00:	lahf   
  407d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d02:	or     BYTE PTR [edx],bl
  407d04:	pusha  
  407d05:	dec    ebp
  407d06:	les    eax,FWORD PTR [edi+ecx*4-0x40]
  407d0a:	sbb    al,0x9d
  407d0c:	inc    edx
  407d0d:	add    DWORD PTR [ecx],eax
  407d0f:	push   0x21
  407d11:	or     eax,0x184e74cd
  407d16:	push   ebp
  407d17:	pop    esi
  407d18:	mov    ebp,0x9271b420
  407d1d:	push   ds
  407d1e:	cwde   
  407d1f:	jae    0x407d4b
  407d21:	or     al,0x7b
  407d23:	mov    bl,0xde
  407d25:	pop    eax
  407d26:	dec    ebp
  407d27:	fnstcw WORD PTR [esp+eax*1+0x1e]
  407d2b:	(bad)
  407d2f:	pop    ss
  407d30:	mov    al,ds:0xc521b252
  407d35:	stos   BYTE PTR es:[edi],al
  407d36:	repnz pop ds
  407d38:	pop    es
  407d39:	mov    dl,0xb5
  407d3b:	out    dx,eax
  407d3c:	mov    eax,ds:0xf9ccabb5
  407d41:	int    0x5
  407d43:	clc    
  407d44:	adc    DWORD PTR [ebp-0x5648bf79],edi
  407d4a:	inc    esi
  407d4b:	jmp    0x6ac6559e
  407d50:	sahf   
  407d51:	les    edi,FWORD PTR [edi+0x50]
  407d54:	and    dh,ah
  407d56:	dec    edx
  407d57:	sub    esp,DWORD PTR [esi+0x6c9feefa]
  407d5d:	sub    ebx,esp
  407d5f:	add    eax,0xac4b7341
  407d64:	jo     0x407cff
  407d66:	mov    DWORD PTR [ebp+0x2ee0b506],edi
  407d6c:	das    
  407d6d:	xchg   ebp,eax
  407d6e:	dec    ebp
  407d6f:	xchg   esp,eax
  407d70:	test   eax,0x428894b5
  407d75:	fimul  WORD PTR [edi-0x6038716a]
  407d7b:	cld    
  407d7c:	fbld   TBYTE PTR [ecx-0xd]
  407d7f:	stos   BYTE PTR es:[edi],al
  407d80:	adc    bl,al
  407d82:	lahf   
  407d83:	mov    ch,0xdf
  407d85:	ror    bh,cl
  407d87:	cmp    DWORD PTR [ebp+0x9],edi
  407d8a:	sub    eax,eax
  407d8c:	lock pop ebx
  407d8e:	(bad)  [esi-0x7]
  407d91:	xlat   BYTE PTR ds:[ebx]
  407d92:	loop   0x407d8e
  407d94:	mov    eax,ds:0x31882d12
  407d99:	jmp    0x16773445
  407d9e:	fsubr  st,st(6)
  407da0:	cdq    
  407da1:	and    BYTE PTR [edx+0x3361c1d0],0x26
  407da8:	out    dx,eax
  407da9:	push   cs
  407daa:	mov    dl,0x7a
  407dac:	sbb    DWORD PTR [edi-0x12],esi
  407daf:	push   edi
  407db0:	popf   
  407db1:	pushf  
  407db2:	sub    al,0x92
  407db4:	jg     0x407e2d
  407db6:	cdq    
  407db7:	push   ss
  407db8:	sahf   
  407db9:	push   ds
  407dba:	or     DWORD PTR [edx-0x67],0x19b5ec24
  407dc1:	dec    edi
  407dc2:	or     DWORD PTR [eax+0x55201047],ecx
  407dc8:	ins    DWORD PTR es:[edi],dx
  407dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dca:	push   es
  407dcb:	xchg   edi,eax
  407dcc:	pusha  
  407dcd:	int3   
  407dce:	xor    DWORD PTR [esi+0x4f],edx
  407dd1:	and    bl,ch
  407dd3:	push   ds
  407dd4:	or     cl,BYTE PTR [ebx+0x39]
  407dd7:	popa   
  407dd8:	into   
  407dd9:	sub    al,0xa2
  407ddb:	rcl    DWORD PTR [eax],1
  407ddd:	arpl   WORD PTR [edx-0x5d548386],sp
  407de3:	sbb    BYTE PTR ds:0xbea5f025,0x77
  407dea:	add    eax,0x331b5c79
  407def:	dec    edx
  407df0:	lods   al,BYTE PTR ds:[esi]
  407df1:	in     eax,0x4d
  407df3:	push   es
  407df4:	cmp    ch,al
  407df6:	out    dx,eax
  407df7:	push   esp
  407df8:	xor    al,0x59
  407dfa:	mov    al,ds:0x2261809b
  407dff:	scas   al,BYTE PTR es:[edi]
  407e00:	inc    ecx
  407e01:	ror    BYTE PTR [eax+0x6d],cl
  407e04:	mov    si,0xbb44
  407e08:	je     0x407dfe
  407e0a:	inc    esi
  407e0b:	sub    al,0xa
  407e0d:	fwait
  407e0e:	(bad)  
  407e0f:	out    0xe0,eax
  407e11:	dec    edx
  407e12:	(bad)  
  407e14:	push   edx
  407e15:	cmp    edx,eax
  407e17:	and    bl,BYTE PTR [esi+0x2ece3192]
  407e1d:	xor    edi,DWORD PTR [edi]
  407e1f:	dec    edi
  407e20:	jmp    0x1c54:0x817d3f45
  407e27:	js     0x407e67
  407e29:	ret    
  407e2a:	xchg   esi,eax
  407e2b:	pop    ebp
  407e2c:	popa   
  407e2d:	adc    ebp,DWORD PTR ds:[ebx+0x1b78476]
  407e34:	push   esi
  407e35:	mov    ds:0xc47b5959,eax
  407e3a:	mov    esi,0x6b5cc51a
  407e3f:	mov    edi,0x45e3c8e2
  407e44:	daa    
  407e45:	mov    WORD PTR [ebx-0x9],gs
  407e48:	adc    ebp,esi
  407e4a:	retf   0xc837
  407e4d:	shl    DWORD PTR [edi-0x22],1
  407e50:	bound  ebx,QWORD PTR [edi]
  407e52:	jg     0x407e5c
  407e54:	xor    al,bh
  407e56:	add    al,bl
  407e58:	sub    DWORD PTR [esi+0x76],edx
  407e5b:	mov    cl,0x6c
  407e5d:	mov    al,0xb7
  407e5f:	or     ebp,ebx
  407e61:	mov    ecx,esp
  407e63:	ins    DWORD PTR es:[edi],dx
  407e64:	xor    BYTE PTR [esi],dh
  407e66:	mov    dl,0x48
  407e68:	hlt    
  407e69:	jl     0x407e11
  407e6b:	push   ss
  407e6c:	in     eax,dx
  407e6d:	enter  0x2175,0xb9
  407e71:	mov    ds:0xe2529dad,al
  407e76:	mov    ah,0x40
  407e78:	inc    edi
  407e79:	sbb    BYTE PTR [eax-0x7b],al
  407e7c:	jmp    0x407e26
  407e7e:	dec    ebp
  407e7f:	adc    eax,0x6a373e03
  407e84:	aaa    
  407e85:	sahf   
  407e86:	lea    edx,[esi-0x19215ee6]
  407e8c:	mov    al,0xaa
  407e8e:	ret    
  407e8f:	ficom  DWORD PTR [eax+0x51e3775f]
  407e95:	xchg   bh,dh
  407e97:	fistp  DWORD PTR [edx-0x14]
  407e9a:	imul   ebp,DWORD PTR [ebp+0x33],0xffffff91
  407e9e:	mov    al,0x81
  407ea0:	sbb    al,0x6e
  407ea2:	add    al,ch
  407ea4:	sub    DWORD PTR [ecx+0x689944db],eax
  407eaa:	int    0x47
  407eac:	push   ss
  407ead:	ins    BYTE PTR es:[edi],dx
  407eae:	(bad)  
  407eb0:	aad    0x4
  407eb2:	add    edi,DWORD PTR cs:0xa6511173
  407eb9:	mov    al,0x6a
  407ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ebc:	(bad)  
  407ebd:	jmp    0x407ec4
  407ebf:	out    0xbd,al
  407ec1:	dec    ebx
  407ec2:	xor    bl,ch
  407ec4:	xor    eax,0xdbf470b4
  407ec9:	in     al,dx
  407eca:	add    esp,DWORD PTR [ebx]
  407ecc:	mov    ebp,0x9897f90
  407ed1:	jo     0x407f3e
  407ed3:	(bad)  
  407ed4:	sbb    BYTE PTR [edx+ecx*2-0x4a],bh
  407ed8:	cmp    eax,0x31d63b8b
  407edd:	dec    eax
  407ede:	push   ebp
  407edf:	and    ebp,DWORD PTR [ebx+0x3207b05]
  407ee5:	cmp    edi,DWORD PTR [ebx+0x73ef9f4f]
  407eeb:	mov    esp,DWORD PTR [eax]
  407eed:	fcomip st,st(2)
  407eef:	push   ebp
  407ef0:	adc    DWORD PTR [ebx],eax
  407ef2:	and    BYTE PTR gs:[ecx],ch
  407ef5:	rcl    DWORD PTR [ebp+0x75],1
  407ef8:	mov    ah,0x7b
  407efa:	inc    ebx
  407efb:	add    BYTE PTR [edi+0x24],dh
  407efe:	adc    dl,BYTE PTR [ebp-0x7e394781]
  407f04:	jb     0x407f01
  407f06:	sbb    BYTE PTR [edx-0x30],0x9d
  407f0a:	sub    esp,DWORD PTR [ecx+0x1e6fdb5b]
  407f10:	jmp    0x407f14
  407f12:	out    0xc9,eax
  407f14:	dec    edi
  407f15:	and    ah,BYTE PTR [ebp+0x8]
  407f18:	out    dx,al
  407f19:	inc    ebp
  407f1a:	or     DWORD PTR [esi-0x242bbb5a],0x77fcce15
  407f24:	inc    esp
  407f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f26:	push   esp
  407f27:	xchg   edi,eax
  407f28:	mov    esp,edi
  407f2a:	jl     0x407f86
  407f2c:	push   eax
  407f2d:	aad    0x28
  407f2f:	shl    BYTE PTR [edx-0x72],cl
  407f32:	imul   esp,ebx,0x2b
  407f35:	add    BYTE PTR [eax],0xe1
  407f38:	inc    edx
  407f39:	aaa    
  407f3a:	mov    ds:0x61f9f869,al
  407f3f:	sub    DWORD PTR [ebx],ebx
  407f41:	mov    al,dh
  407f43:	and    BYTE PTR [edx-0x35],ch
  407f46:	repz xchg ebp,eax
  407f48:	xlat   BYTE PTR ds:[ebx]
  407f49:	push   ecx
  407f4a:	push   esi
  407f4b:	ins    DWORD PTR es:[edi],dx
  407f4c:	test   al,0xbd
  407f4e:	sbb    al,0xa5
  407f50:	jo     0x407fce
  407f52:	dec    ecx
  407f53:	adc    eax,0xd58560d
  407f58:	not    DWORD PTR [edx-0x4c]
  407f5b:	fcom   st(1)
  407f5d:	mov    es,WORD PTR [edx-0x1f423787]
  407f63:	(bad)  
  407f64:	xor    al,0xd0
  407f66:	hlt    
  407f67:	cdq    
  407f68:	repz add al,0x77
  407f6b:	dec    eax
  407f6c:	out    0x8c,eax
  407f6e:	out    dx,eax
  407f6f:	mov    ebp,ecx
  407f71:	mov    dl,al
  407f73:	dec    edi
  407f74:	mov    bh,0x78
  407f76:	xor    ebx,eax
  407f78:	push   edi
  407f79:	sbb    eax,0x40d5cd20
  407f7e:	mov    DWORD PTR ds:0x3e57d40f,esi
  407f84:	and    al,0xaf
  407f86:	and    ecx,DWORD PTR [ecx]
  407f88:	mov    eax,ds:0x9c725cfb
  407f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f8f:	call   0x4b209130
  407f94:	push   cs
  407f95:	aam    0x46
  407f97:	sar    DWORD PTR [esi-0x5c815fe8],0x80
  407f9e:	(bad)  [eax-0x14]
  407fa1:	sbb    al,0x24
  407fa3:	stos   BYTE PTR es:[edi],al
  407fa4:	push   esp
  407fa5:	(bad)  
  407fa6:	mov    edi,0x3d5f66fe
  407fab:	and    eax,0x41ac6cf
  407fb0:	xchg   esi,eax
  407fb1:	jp     0x407f4c
  407fb3:	ja     0x407f64
  407fb5:	xchg   ebp,eax
  407fb6:	aad    0x14
  407fb8:	das    
  407fb9:	hlt    
  407fba:	loopne 0x408020
  407fbc:	push   esp
  407fbd:	aam    0x22
  407fbf:	jne    0x408034
  407fc1:	call   0xd7cd:0xed97fd14
  407fc8:	(bad)  
  407fc9:	test   eax,0xf7acc2e
  407fce:	scas   al,BYTE PTR es:[edi]
  407fcf:	xor    al,0xba
  407fd1:	cli    
  407fd2:	jp     0x407fb8
  407fd4:	ins    BYTE PTR es:[edi],dx
  407fd5:	test   BYTE PTR [edi-0x6],bh
  407fd8:	and    eax,0x47675a8b
  407fdd:	sub    dh,BYTE PTR [ebp-0x74]
  407fe0:	add    DWORD PTR [eax],0xffffff9f
  407fe3:	cmp    eax,0x4eea7812
  407fe8:	(bad)  
  407fe9:	aam    0x94
  407feb:	sub    DWORD PTR [edi],ebx
  407fed:	hlt    
  407fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fef:	sahf   
  407ff0:	frstor [eax]
  407ff2:	js     0x407ffe
  407ff4:	adc    ebx,DWORD PTR [ecx]
  407ff6:	test   DWORD PTR [edi+0x67c47295],0xf09f565b
  408000:	xor    eax,0xd9d87ce9
  408005:	xor    eax,DWORD PTR [esi]
  408007:	adc    BYTE PTR [edi-0x68],0x1c
  40800b:	xor    esi,DWORD PTR ds:[ebp-0x2d]
  40800f:	jne    0x407ff0
  408011:	adc    ah,BYTE PTR [eax+esi*4+0x33a7b8e9]
  408018:	cdq    
  408019:	inc    edx
  40801a:	xchg   edi,eax
  40801b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40801c:	in     al,0x32
  40801e:	jnp    0x407fd0
  408020:	(bad)  
  408021:	and    DWORD PTR [edx+0x2c4ac24a],eax
  408027:	cmp    DWORD PTR [edx-0x58d2ac25],ebp
  40802d:	push   0xe39e5fb6
  408032:	je     0x407fc7
  408034:	dec    esp
  408035:	pop    ds
  408036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408037:	jl     0x407ff5
  408039:	pop    edi
  40803a:	xchg   DWORD PTR [ebp+0x1a902ce],ecx
  408040:	inc    esp
  408041:	lds    ecx,FWORD PTR [edx+0x25]
  408044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408045:	outs   dx,DWORD PTR ds:[esi]
  408046:	cmp    ecx,ecx
  408048:	mov    cl,BYTE PTR [edi]
  40804a:	lea    esp,[esi+ebx*8+0x725d7d2d]
  408051:	mov    WORD PTR [ebp+0x3150adf4],ds
  408057:	dec    ebx
  408058:	adc    al,0x73
  40805a:	mov    eax,DWORD PTR [eax]
  40805c:	jae    0x408083
  40805e:	lock setno BYTE PTR [ebx-0x17db8e90]
  408066:	push   0xffffffe2
  408068:	lods   eax,DWORD PTR ds:[esi]
  408069:	cdq    
  40806a:	xor    BYTE PTR [edi+0x1754adc3],dl
  408070:	inc    eax
  408071:	aas    
  408072:	(bad)  ss:[ecx+0x3a]
  408076:	(bad)  
  408077:	cmp    dh,ch
  408079:	push   ds
  40807a:	test   eax,0xe44cc4ae
  40807f:	xchg   esp,eax
  408080:	mov    al,0x1a
  408082:	jg     0x40804e
  408084:	stos   DWORD PTR es:[edi],eax
  408085:	xlat   BYTE PTR ds:[ebx]
  408086:	or     dh,BYTE PTR [edi]
  408088:	mov    dl,0x46
  40808a:	ficomp WORD PTR [edx]
  40808c:	mov    dl,0x6d
  40808e:	std    
  40808f:	add    BYTE PTR [esi],ch
  408091:	push   0xe91b37d6
  408096:	push   ebp
  408097:	sbb    dh,0x97
  40809a:	pop    ebx
  40809b:	and    al,0xef
  40809d:	inc    esi
  40809e:	or     DWORD PTR ds:0xb769c736,ebp
  4080a4:	shl    DWORD PTR [ebp+0x3d],cl
  4080a7:	iret   
  4080a8:	fldcw  WORD PTR [edi+0x5f9e2052]
  4080ae:	or     eax,0x9255c95c
  4080b3:	push   ds
  4080b4:	mov    es,WORD PTR [ebp-0x4]
  4080b7:	cli    
  4080b8:	mov    al,ch
  4080ba:	xchg   esp,eax
  4080bb:	jae    0x40806b
  4080bd:	mov    cl,0xfb
  4080bf:	jnp    0x408080
  4080c1:	(bad)  
  4080c2:	jmp    0xbd482be1
  4080c7:	cmp    DWORD PTR [esi+edi*2-0x3feeef3d],edx
  4080ce:	dec    eax
  4080cf:	popf   
  4080d0:	jo     0x408074
  4080d2:	mov    ecx,esi
  4080d4:	and    BYTE PTR [esi-0x35e0ba93],al
  4080da:	xchg   BYTE PTR [edi+ecx*1],bh
  4080dd:	lds    ecx,FWORD PTR [ebx]
  4080df:	sbb    bh,bl
  4080e1:	xchg   al,ch
  4080e3:	mov    esi,0xd296f24e
  4080e8:	adc    edi,DWORD PTR [eax]
  4080ea:	mov    ds,WORD PTR [eax+eax*2+0xef5cf63]
  4080f1:	pop    edx
  4080f2:	adc    BYTE PTR [edx+0x22],al
  4080f5:	xchg   esi,eax
  4080f6:	pop    esi
  4080f7:	lea    ebp,ds:0x1edbecab
  4080fd:	dec    eax
  4080fe:	add    al,BYTE PTR [eax-0x51]
  408101:	push   esi
  408102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408103:	sub    eax,0x53b936be
  408108:	and    ecx,esi
  40810a:	mov    ds:0x93b21f2e,al
  40810f:	fsubp  st(2),st
  408111:	mov    ah,cl
  408113:	lods   al,BYTE PTR ds:[esi]
  408114:	fsubr  st,st(6)
  408116:	sbb    ah,dl
  408118:	leave  
  408119:	dec    ecx
  40811a:	lahf   
  40811b:	sahf   
  40811c:	shr    esp,1
  40811e:	mov    ds:0x5ec7f1f6,eax
  408123:	cmp    al,0x5f
  408125:	test   eax,0x6d022d05
  40812a:	in     eax,0x42
  40812c:	or     bl,BYTE PTR [ebx]
  40812e:	scas   al,BYTE PTR es:[edi]
  40812f:	in     eax,0xbd
  408131:	in     al,dx
  408132:	test   al,0xf2
  408134:	mov    esp,0x3bf0db9f
  408139:	inc    ebp
  40813a:	nop
  40813b:	clc    
  40813c:	mov    ds:0x5636b569,eax
  408141:	(bad)  
  408142:	sti    
  408143:	test   eax,0x441e886c
  408148:	jge    0x40814d
  40814a:	stos   BYTE PTR es:[edi],al
  40814b:	push   0xd3bd71e6
  408150:	test   DWORD PTR [edx],edi
  408152:	sbb    al,ch
  408154:	mov    esp,0x98b40fb1
  408159:	fbstp  TBYTE PTR [ebx+ebx*8]
  40815c:	pop    ebp
  40815d:	(bad)  
  40815e:	sbb    eax,0x9b80b6bc
  408163:	iret   
  408164:	lock push cs
  408166:	gs jg  0x4081b5
  408169:	sub    ah,BYTE PTR [ecx+0x3829407b]
  40816f:	mov    ds:0x1ba94bfd,al
  408174:	adc    ebp,ecx
  408176:	xor    eax,DWORD PTR [ecx-0x3a]
  408179:	movhps xmm4,QWORD PTR [edi]
  40817c:	cs mov edx,0x1aea6d50
  408182:	(bad)  
  408183:	ds push es
  408185:	jl     0x4081f0
  408187:	mov    al,ds:0x731454de
  40818c:	mov    ?,WORD PTR [edx-0x5f59c378]
  408192:	popa   
  408193:	sbb    esp,edx
  408195:	in     al,dx
  408196:	xor    cl,cl
  408198:	in     al,0xef
  40819a:	lods   eax,DWORD PTR ds:[esi]
  40819b:	cmp    BYTE PTR [ebp+0x57c94e8e],0x38
  4081a2:	push   cs
  4081a3:	jb     0x40813a
  4081a5:	(bad)  
  4081a6:	mov    cl,0x69
  4081a8:	push   ebx
  4081a9:	mov    ecx,0x7fc8f639
  4081ae:	(bad)  
  4081af:	jns    0x408131
  4081b1:	ror    esi,0x47
  4081b4:	int    0x68
  4081b6:	stc    
  4081b7:	sar    BYTE PTR [ebx+0x33],1
  4081ba:	jmp    0x3781bd01
  4081bf:	cmp    DWORD PTR [esi+0x1f],edx
  4081c2:	(bad)  
  4081c3:	stc    
  4081c4:	inc    ebx
  4081c5:	sub    al,0x7c
  4081c7:	and    edx,DWORD PTR [esi-0x6a5d2223]
  4081cd:	push   esp
  4081ce:	sahf   
  4081cf:	mov    ch,0xbc
  4081d1:	inc    edi
  4081d2:	test   DWORD PTR [ecx],0xb150ba48
  4081d8:	test   BYTE PTR [edi-0x59e1a88c],dl
  4081de:	adc    DWORD PTR [bp+di-0x22],edx
  4081e2:	sahf   
  4081e3:	in     al,0xb
  4081e5:	mov    WORD PTR [edi+0x1696778c],?
  4081eb:	pop    ss
  4081ec:	xor    DWORD PTR [ebx-0x2539284],edi
  4081f2:	stc    
  4081f3:	mov    dl,0x61
  4081f5:	test   BYTE PTR [edx+edi*1-0x16d04454],bl
  4081fc:	outs   dx,DWORD PTR ds:[esi]
  4081fd:	es jge 0x4081bf
  408200:	ins    BYTE PTR es:[edi],dx
  408201:	sub    eax,DWORD PTR [ecx]
  408203:	(bad)  
  408204:	std    
  408205:	(bad)  
  408207:	arpl   WORD PTR [eax+0x9],sp
  40820a:	push   eax
  40820b:	pop    esi
  40820c:	shl    edi,1
  40820e:	inc    edi
  40820f:	cs mov ah,0xca
  408212:	(bad)  
  408214:	sbb    ch,BYTE PTR [ebx+esi*8]
  408217:	stos   DWORD PTR es:[edi],eax
  408218:	push   0xffffffd8
  40821a:	sahf   
  40821b:	lods   al,BYTE PTR ds:[esi]
  40821c:	sbb    ebx,ebp
  40821e:	lods   eax,DWORD PTR ds:[esi]
  40821f:	mov    ds:0x45c3895f,eax
  408224:	cmp    BYTE PTR [esp+edi*8-0x5e78c7d4],ah
  40822b:	cdq    
  40822c:	lahf   
  40822d:	jl     0x4081e5
  40822f:	iret   
  408230:	and    edx,0xffffffc7
  408233:	xchg   ecx,eax
  408234:	test   al,0x5a
  408236:	fwait
  408237:	repnz inc ecx
  408239:	sub    DWORD PTR [eax-0x31],ecx
  40823c:	icebp  
  40823d:	jb     0x408201
  40823f:	cmp    BYTE PTR [ebp-0x79294746],0xd
  408246:	fs mov ah,0x54
  408249:	mov    ecx,0xac41edc9
  40824e:	sub    ah,BYTE PTR [edx-0x49]
  408251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408252:	add    esi,DWORD PTR [ecx-0x20ddefd3]
  408258:	sub    dh,BYTE PTR [ebp+ecx*4-0x14]
  40825c:	xchg   ebx,eax
  40825d:	(bad)  
  40825e:	in     al,dx
  40825f:	call   0x7cc36ec7
  408264:	jnp    0x40827b
  408266:	sti    
  408267:	jecxz  0x40820a
  408269:	xchg   DWORD PTR [eax+0x4d],esi
  40826c:	retf   
  40826d:	arpl   WORD PTR [ebx+0x9],cx
  408270:	ins    DWORD PTR es:[edi],dx
  408271:	jge    0x408233
  408273:	cmp    esp,DWORD PTR [edi+0x61f2482f]
  408279:	cmp    ch,BYTE PTR [esi]
  40827b:	loope  0x4082a1
  40827d:	fwait
  40827e:	aad    0xdf
  408280:	clc    
  408281:	or     al,0x61
  408283:	jb     0x408220
  408285:	sub    ebx,DWORD PTR [ecx+ebp*2+0x41]
  408289:	push   0xfb069fae
  40828e:	xor    al,0x78
  408290:	sub    BYTE PTR [ebp+0x71],bl
  408293:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  408295:	test   esp,edx
  408297:	stc    
  408298:	sbb    eax,0xa7d098ae
  40829d:	jae    0x40828d
  40829f:	in     eax,dx
  4082a0:	daa    
  4082a1:	pop    ebx
  4082a2:	sbb    BYTE PTR [ecx],bl
  4082a4:	mov    DWORD PTR [esi],0x3e4d7273
  4082aa:	fnstcw WORD PTR [esi]
  4082ac:	lock int 0x43
  4082af:	ss jecxz 0x4082fd
  4082b2:	daa    
  4082b3:	repz pop ds
  4082b5:	fidivr WORD PTR [ecx-0x2]
  4082b8:	jecxz  0x4082db
  4082ba:	jae    0x408330
  4082bc:	gs cli 
  4082be:	inc    edx
  4082bf:	push   0xffffff89
  4082c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082c2:	dec    edi
  4082c3:	xor    eax,0x7848d93b
  4082c8:	mov    WORD PTR ss:[ebx-0x31],ds
  4082cc:	cmp    BYTE PTR [ebx-0x44eace92],al
  4082d2:	mov    ebx,0x94ae27e4
  4082d7:	ja     0x40831a
  4082d9:	in     eax,0xf5
  4082db:	gs jmp 0x20c8c070
  4082e1:	jecxz  0x40835a
  4082e3:	fdivr  st(3),st
  4082e5:	mov    BYTE PTR [edx],cl
  4082e7:	js     0x408368
  4082e9:	sahf   
  4082ea:	add    BYTE PTR [eax],ch
  4082ec:	repnz push edx
  4082ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082ef:	mov    eax,ds:0xa3a074b3
  4082f4:	dec    ebp
  4082f5:	test   al,0x42
  4082f7:	xor    al,0x33
  4082f9:	pop    esi
  4082fa:	gs out 0x3e,al
  4082fd:	jmp    0x4b9b359d
  408302:	jmp    0xb0e258e7
  408307:	mov    dh,0xdb
  408309:	add    eax,0x1820021d
  40830e:	push   0x36324000
  408313:	adc    bh,BYTE PTR [ecx+esi*4+0x1c]
  408317:	sub    BYTE PTR [eax+0x5da2fdc1],bl
  40831d:	test   DWORD PTR [esi],esp
  40831f:	hlt    
  408320:	call   0x97d68d5e
  408325:	pop    es
  408326:	mov    dh,0xc4
  408328:	neg    al
  40832a:	bound  esi,QWORD PTR [esi+edx*4-0x54]
  40832e:	push   eax
  40832f:	mov    ch,0x14
  408331:	sar    DWORD PTR [ebp-0x19],1
  408334:	in     al,0xe9
  408336:	fcomp  DWORD PTR [ecx+0x11cac3a1]
  40833c:	ret    0xa42d
  40833f:	stos   BYTE PTR es:[edi],al
  408340:	inc    ebp
  408341:	(bad)  
  408342:	hlt    
  408343:	jb     0x40836c
  408345:	sub    edi,0xffffffc3
  408348:	pop    ss
  408349:	cwde   
  40834a:	jmp    0xf72bec61
  40834f:	or     al,BYTE PTR [eax-0x57]
  408352:	inc    ebx
  408353:	jecxz  0x408375
  408355:	jmp    0x35ec03e7
  40835a:	mov    esp,0xdc45621a
  40835f:	or     DWORD PTR [ebx-0x76],esi
  408362:	sbb    dh,BYTE PTR [edx+0x7a]
  408365:	push   eax
  408366:	(bad)  
  408367:	and    BYTE PTR [ebp+eax*4+0xde1b704],al
  40836e:	shl    ah,1
  408370:	test   al,0x94
  408372:	(bad)  
  408374:	adc    BYTE PTR [esi-0x56c14989],dh
  40837a:	mov    edi,0x3eb9e49c
  40837f:	ffree  st(4)
  408381:	jmp    0x37862263
  408386:	mov    eax,0xccf2fe66
  40838b:	fnsave [eax+0x43e7d783]
  408391:	stos   BYTE PTR es:[edi],al
  408392:	sub    al,0xd2
  408394:	in     eax,dx
  408395:	lds    eax,FWORD PTR [ebp-0x60]
  408398:	mov    bh,0xac
  40839a:	sub    DWORD PTR [ebx+0x2ffa4f51],esi
  4083a0:	inc    edx
  4083a1:	ja     0x4083c3
  4083a3:	dec    eax
  4083a4:	xor    al,bl
  4083a6:	mov    al,ds:0xcb744607
  4083ab:	aaa    
  4083ac:	fwait
  4083ad:	pop    edx
  4083ae:	pop    ss
  4083af:	cmc    
  4083b0:	or     DWORD PTR [ebx+eax*2],ebp
  4083b3:	pop    edx
  4083b4:	jle    0x40839e
  4083b6:	sahf   
  4083b7:	sbb    DWORD PTR [esi],esp
  4083b9:	xchg   ebx,eax
  4083ba:	pop    edx
  4083bb:	xor    BYTE PTR [ebx],ch
  4083bd:	sbb    ebx,ebx
  4083bf:	(bad)  
  4083c0:	sub    cl,BYTE PTR [esi-0x54]
  4083c3:	mov    dh,0x2c
  4083c5:	loop   0x4083b2
  4083c7:	scas   al,BYTE PTR es:[edi]
  4083c8:	cmp    eax,0xa2c157be
  4083cd:	leave  
  4083ce:	aaa    
  4083cf:	test   DWORD PTR [edx],esp
  4083d1:	sbb    edi,edi
  4083d3:	outs   dx,DWORD PTR ds:[esi]
  4083d4:	cmc    
  4083d5:	mov    edx,0xc1ed46f7
  4083da:	imul   BYTE PTR [ebp-0x4c6d149f]
  4083e0:	shl    DWORD PTR [edx+0x23d1c33e],cl
  4083e6:	pop    ss
  4083e7:	ins    DWORD PTR es:[edi],dx
  4083e8:	mov    eax,0xe478ac22
  4083ed:	add    al,0x1c
  4083ef:	div    DWORD PTR [edi+0x22]
  4083f2:	mov    ebx,0xdf0605b5
  4083f7:	inc    edx
  4083f8:	xlat   BYTE PTR ds:[ebx]
  4083f9:	lea    edi,[bx+si-0x42]
  4083fd:	pop    edx
  4083fe:	pop    esp
  4083ff:	cmp    cl,BYTE PTR [edx-0x61cc9f52]
  408405:	fs xchg esp,eax
  408407:	mov    cl,0x3c
  408409:	mov    ebp,DWORD PTR [esi+ebp*1-0x20]
  40840d:	retf   0x4307
  408410:	add    eax,0xd1bb992
  408415:	jg     0x4083b5
  408417:	xor    bh,BYTE PTR ds:0x28aeb42c
  40841d:	add    DWORD PTR [esi],0x79b77a55
  408423:	bswap  ecx
  408425:	sub    edx,0x89e253f3
  40842b:	push   eax
  40842c:	mov    dl,BYTE PTR [eax+0x73d1267f]
  408432:	dec    ebp
  408433:	push   ebp
  408434:	(bad)  
  408435:	cld    
  408436:	push   ecx
  408437:	loope  0x4083c3
  408439:	add    DWORD PTR [edi],eax
  40843b:	jb     0x408496
  40843d:	cli    
  40843e:	jbe    0x40842c
  408440:	jb     0x40843e
  408442:	in     eax,0xe8
  408444:	push   esp
  408445:	sbb    eax,0x552832ec
  40844a:	xchg   esp,eax
  40844b:	iret   
  40844c:	imul   eax,DWORD PTR [ebx],0x4b
  40844f:	inc    edx
  408450:	add    ah,BYTE PTR [ebx+0x33]
  408453:	stos   DWORD PTR es:[edi],eax
  408454:	bound  edi,QWORD PTR [ebp-0x36]
  408457:	push   esp
  408458:	scas   eax,DWORD PTR es:[edi]
  408459:	fisttp QWORD PTR [edx]
  40845b:	mov    ds,WORD PTR [ecx-0x68afafd3]
  408461:	fisttp QWORD PTR [esi]
  408463:	and    al,0x97
  408465:	aaa    
  408466:	pop    eax
  408467:	xlat   BYTE PTR ds:[ebx]
  408468:	push   eax
  408469:	and    ecx,eax
  40846b:	call   0x5e6c:0x9ef5a222
  408472:	pop    ebp
  408473:	stc    
  408474:	lods   eax,DWORD PTR ds:[esi]
  408475:	fnsave [edx]
  408477:	scas   al,BYTE PTR es:[edi]
  408478:	push   0xfffffff3
  40847a:	mov    ds:0xab651ba9,al
  40847f:	pop    edi
  408480:	pushw  es
  408482:	jbe    0x408486
  408484:	jp     0x40849e
  408486:	mov    ch,bh
  408488:	fdivrp st(2),st
  40848a:	cmp    al,0x63
  40848c:	fstp   QWORD PTR [ecx]
  40848e:	fwait
  40848f:	lods   al,BYTE PTR ds:[esi]
  408490:	ins    DWORD PTR es:[edi],dx
  408491:	(bad)  
  408492:	jg     0x408425
  408494:	fisub  DWORD PTR [edx]
  408496:	pop    ss
  408497:	sbb    eax,0x49a48169
  40849c:	jmp    0x76d8:0xbb3bef37
  4084a3:	pop    ss
  4084a4:	cli    
  4084a5:	dec    edi
  4084a6:	push   esp
  4084a7:	cli    
  4084a8:	shl    BYTE PTR [edx-0x11a55c4a],cl
  4084ae:	cmc    
  4084af:	test   BYTE PTR [edx+0x2cfdd138],cl
  4084b5:	mov    ch,BYTE PTR [ebx-0x6a94f5ee]
  4084bb:	xor    ch,cl
  4084bd:	rcl    DWORD PTR [edi-0x2d],0x94
  4084c1:	bnd jge 0x4084a4
  4084c4:	dec    ecx
  4084c5:	arpl   dx,ax
  4084c7:	cld    
  4084c8:	adc    al,0x56
  4084ca:	sbb    eax,DWORD PTR ds:0x12793cfc
  4084d0:	aam    0x88
  4084d2:	sbb    al,0xdd
  4084d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084d5:	shr    BYTE PTR [ebp-0x43ddfa53],cl
  4084db:	xchg   ebx,eax
  4084dc:	xchg   edx,eax
  4084dd:	push   ebp
  4084de:	adc    al,0xf8
  4084e0:	xchg   esi,eax
  4084e1:	xchg   esp,eax
  4084e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084e3:	pop    esp
  4084e4:	mov    dh,0x2f
  4084e6:	lea    edi,[edi-0x36]
  4084e9:	lahf   
  4084ea:	int3   
  4084eb:	inc    ebx
  4084ec:	push   0x6d834a33
  4084f1:	dec    edx
  4084f2:	cmp    BYTE PTR [ebx-0x53],0x2e
  4084f6:	out    0xb5,al
  4084f8:	dec    esi
  4084f9:	mov    bh,0xda
  4084fb:	imul   esi,esp,0x4a3d18ba
  408501:	outs   dx,BYTE PTR ds:[esi]
  408502:	and    esp,ebp
  408504:	push   ebp
  408505:	loope  0x408541
  408507:	sub    ecx,DWORD PTR [ebx-0x252e1969]
  40850d:	icebp  
  40850e:	pop    es
  40850f:	mov    ah,0x21
  408511:	jmp    0x835f79ab
  408516:	retf   
  408517:	push   es
  408518:	dec    edi
  408519:	and    eax,0x3b3fdce5
  40851e:	inc    ebp
  40851f:	(bad)  
  408520:	jns    0x4084e8
  408522:	cdq    
  408523:	nop
  408524:	jg     0x40856b
  408526:	icebp  
  408527:	xor    bh,BYTE PTR [ebx-0x77c0e8f]
  40852d:	adc    bh,ah
  40852f:	xchg   ch,bl
  408531:	mov    ds:0x6c7e9d6d,al
  408536:	push   ss
  408537:	push   cs
  408538:	xor    eax,0xacca58c9
  40853d:	inc    edi
  40853e:	push   0x83b489be
  408543:	adc    eax,0x5ef6c977
  408548:	call   0xc162:0xe9ae9629
  40854f:	imul   esp,ebx,0xffffffff
  408552:	ss mov esp,0xce06d37d
  408558:	mov    bl,0x1e
  40855a:	sub    BYTE PTR [edx-0x725112ba],bl
  408560:	mov    ebx,0x6e05e53
  408565:	add    DWORD PTR [edi+0x58],ecx
  408568:	imul   ebp,ebx,0x65
  40856b:	cli    
  40856c:	inc    ebx
  40856d:	in     al,0x2a
  40856f:	call   0x61569a1d
  408574:	and    DWORD PTR ds:0xc85e72ab,esi
  40857a:	inc    esp
  40857b:	fmul   DWORD PTR [eax]
  40857d:	jmp    0x40851f
  40857f:	call   DWORD PTR [ebx+0x44ec0bbc]
  408585:	inc    ebx
  408586:	stos   BYTE PTR es:[edi],al
  408587:	jmp    0xd5eef87
  40858c:	shl    DWORD PTR [edi+0xc],0xae
  408590:	mov    edi,0xb1c1a193
  408595:	int    0xce
  408597:	(bad)  
  408598:	in     eax,0x9a
  40859a:	leave  
  40859b:	mov    BYTE PTR [esi+0x1f5eeee5],bl
  4085a1:	stc    
  4085a2:	cmp    ecx,DWORD PTR [ebx-0x40]
  4085a5:	xchg   ecx,eax
  4085a6:	fadd   QWORD PTR [ebx+0x1876c057]
  4085ac:	sti    
  4085ad:	xchg   DWORD PTR cs:[ebx-0x4d],ecx
  4085b1:	pop    ss
  4085b2:	sbb    dh,dl
  4085b4:	repz jb 0x4085c7
  4085b7:	ja     0x408613
  4085b9:	dec    BYTE PTR [edi-0x269074]
  4085bf:	clc    
  4085c0:	(bad)  
  4085c1:	pop    edi
  4085c2:	mov    ecx,0x6f6c4882
  4085c7:	xchg   edi,eax
  4085c8:	lock (bad) 
  4085cc:	sub    bl,BYTE PTR [ecx-0x5ce1f45a]
  4085d2:	push   ebx
  4085d3:	sub    eax,0xc154cb26
  4085d8:	mov    eax,0xd7dda56
  4085dd:	mov    cl,0x80
  4085df:	(bad)  
  4085e0:	cmp    BYTE PTR [ecx-0x666e6255],bh
  4085e6:	jno    0x408622
  4085e8:	aas    
  4085e9:	xchg   esi,eax
  4085ea:	fsub   DWORD PTR [edi-0x52]
  4085ed:	mov    dh,0x38
  4085ef:	lahf   
  4085f0:	jb     0x4085a4
  4085f2:	jnp    0x408656
  4085f4:	sub    edx,0xfffffffa
  4085f7:	dec    esi
  4085f8:	jnp    0x40864d
  4085fa:	popa   
  4085fb:	ds cmp al,0x4b
  4085fe:	rol    BYTE PTR [eax],1
  408600:	push   esi
  408601:	jne    0x40858f
  408603:	jne    0x40860f
  408605:	xchg   ebx,eax
  408607:	fadd   DWORD PTR [eax+0x60]
  40860a:	push   ecx
  40860b:	fsubr  QWORD PTR [ebx]
  40860d:	dec    ecx
  40860e:	cs ds into 
  408611:	iret   
  408612:	add    al,0xca
  408614:	or     BYTE PTR [ebx-0x59],bh
  408617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408618:	loope  0x40861e
  40861a:	jmp    0x408622
  40861c:	in     eax,0x63
  40861e:	gs cmp cl,dh
  408621:	ja     0x4085f2
  408623:	mov    edi,0x8e834e8f
  408628:	imul   esp,DWORD PTR [ebx+0x74bc0bd4],0xffffff87
  40862f:	lods   al,BYTE PTR ds:[esi]
  408630:	out    dx,al
  408631:	push   esi
  408632:	daa    
  408633:	enter  0x4737,0x6a
  408637:	rol    BYTE PTR [ebp-0xe],cl
  40863a:	mov    ah,0xd1
  40863c:	neg    DWORD PTR [eax+0x10c2f831]
  408642:	inc    edx
  408643:	daa    
  408644:	adc    dl,al
  408646:	mov    ds:0xf2d124ef,al
  40864b:	jae    0x408604
  40864d:	jmp    0x431d:0x94e6be3e
  408654:	push   ds
  408655:	or     dh,BYTE PTR [eax+0x52]
  408658:	push   esp
  408659:	pop    ss
  40865a:	mov    ebp,0xf840f867
  40865f:	mov    eax,ds:0xbc060a19
  408664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408665:	xchg   ebx,eax
  408666:	mov    dl,0x23
  408668:	cwde   
  408669:	(bad)  
  40866a:	daa    
  40866b:	sub    cl,BYTE PTR [edi-0x725aed25]
  408671:	mov    cl,0x1e
  408673:	pop    ds
  408674:	pop    ebx
  408675:	cmp    BYTE PTR [edx+edi*8],bl
  408678:	lock xor eax,0x9b890610
  40867e:	inc    edi
  40867f:	xor    DWORD PTR [edx+eiz*2+0x2c68e436],ecx
  408686:	mov    ebx,DWORD PTR [edx+0x8f5fd3e]
  40868c:	test   ch,bh
  40868e:	cmp    DWORD PTR [ebp+0x1add8e45],0x64
  408695:	cwde   
  408696:	inc    edx
  408697:	push   ds
  408698:	std    
  408699:	test   BYTE PTR [ecx+ebp*8-0x3b],bh
  40869d:	mov    edx,DWORD PTR [ebp-0x12]
  4086a0:	xor    WORD PTR [esi-0x3f],si
  4086a4:	push   ecx
  4086a5:	mov    ds:0xde616025,eax
  4086aa:	xchg   esi,eax
  4086ab:	cmp    bl,dh
  4086ad:	pop    ecx
  4086ae:	repz inc ebp
  4086b0:	mov    dh,0x90
  4086b2:	std    
  4086b3:	sbb    DWORD PTR [esi+0x6196eab7],ebp
  4086b9:	pusha  
  4086ba:	bound  ebp,QWORD PTR [esi-0x65]
  4086bd:	or     al,0x61
  4086bf:	imul   edi,DWORD PTR [edi+0x3cd1ae40],0xe568bf47
  4086c9:	push   es
  4086ca:	dec    edx
  4086cb:	push   0x26
  4086cd:	xchg   ecx,eax
  4086ce:	cmc    
  4086cf:	cld    
  4086d0:	sbb    eax,0x32fe522c
  4086d5:	pusha  
  4086d6:	test   al,0x71
  4086d8:	add    al,0x8e
  4086da:	dec    esp
  4086db:	popf   
  4086dc:	dec    edx
  4086dd:	xor    ebx,DWORD PTR [edx-0x338e8cf4]
  4086e3:	out    dx,al
  4086e4:	retf   
  4086e5:	sub    BYTE PTR [ebx+eax*2+0x8],0x93
  4086ea:	cld    
  4086eb:	xor    BYTE PTR [edx+0x5a],dl
  4086ee:	jno    0x4086bb
  4086f0:	adc    DWORD PTR [ebx+0xab679a7],eax
  4086f6:	mov    esi,0x3c7b8928
  4086fb:	and    cl,ch
  4086fd:	mov    eax,0x623cf9ea
  408702:	loop   0x40873d
  408704:	push   cs
  408705:	out    dx,eax
  408706:	add    BYTE PTR [ebx],cl
  408708:	pop    esi
  408709:	adc    eax,0xa539163b
  40870e:	jecxz  0x4086cb
  408710:	test   eax,0xc7d210d7
  408715:	mov    ebp,DWORD PTR [edx+0xd1cd2d2]
  40871b:	add    al,0xff
  40871d:	adc    DWORD PTR [eax-0x3e2b6cf5],esi
  408723:	mov    al,0x75
  408725:	mov    cl,0x2d
  408727:	fdivrp st(4),st
  408729:	jae    0x408704
  40872b:	mov    eax,ds:0x216e376
  408730:	pop    ebp
  408731:	add    BYTE PTR [edx],ah
  408733:	push   ebp
  408734:	rol    ch,cl
  408736:	mov    DWORD PTR [esi],edi
  408738:	jecxz  0x4087b4
  40873a:	push   ds
  40873b:	dec    ecx
  40873c:	or     dh,BYTE PTR [ecx]
  40873e:	add    al,0xcd
  408740:	push   edi
  408741:	dec    eax
  408742:	rcr    BYTE PTR [edi],1
  408744:	adc    BYTE PTR [ebx],ch
  408746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408747:	or     eax,0x44f2ab0
  40874c:	(bad)  
  40874e:	fnstcw WORD PTR [ecx-0x47]
  408751:	(bad)  
  408752:	stos   BYTE PTR es:[edi],al
  408753:	lahf   
  408754:	sbb    eax,0x6617c784
  408759:	add    DWORD PTR [esp+eiz*8-0x59],0xe2d02b44
  408761:	cmp    DWORD PTR [ebx+ebx*2],0x4f
  408765:	cmp    ch,BYTE PTR [edi-0x7858c2e0]
  40876b:	je     0x40870e
  40876d:	in     al,dx
  40876e:	int    0x29
  408770:	(bad)  
  408771:	fld    QWORD PTR [eax-0x3d]
  408774:	mul    BYTE PTR es:[esp+esi*4-0x5d]
  408779:	fidiv  WORD PTR [ebx]
  40877b:	mov    edx,edx
  40877d:	inc    ebp
  40877e:	mov    bl,0x9a
  408780:	dec    edx
  408781:	stc    
  408782:	adc    DWORD PTR [eax+0x58d10c1b],edx
  408788:	iret   
  408789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40878a:	xchg   ebp,eax
  40878b:	arpl   WORD PTR [edx+ebx*1],sp
  40878e:	sbb    dh,ah
  408790:	add    BYTE PTR [ecx-0x537d3eeb],0x7f
  408797:	xor    BYTE PTR [edx-0xc293068],ah
  40879d:	inc    edi
  40879e:	aaa    
  40879f:	sub    ebp,DWORD PTR [eax+eiz*1]
  4087a2:	mov    ?,WORD PTR [eax+0x24]
  4087a5:	xor    BYTE PTR [ecx],0x6b
  4087a8:	outs   dx,BYTE PTR ds:[esi]
  4087a9:	fcom   st(0)
  4087ab:	pop    eax
  4087ac:	in     eax,dx
  4087ad:	mov    eax,esi
  4087af:	xor    eax,0x95874230
  4087b4:	fmul   DWORD PTR [edi-0x2b723846]
  4087ba:	mov    ch,0x88
  4087bc:	mov    eax,0xe0690000
  4087c1:	mov    ebp,0x7061f86d
  4087c6:	aas    
  4087c7:	jmp    0x27d:0x3f6b8c44
  4087ce:	or     edx,DWORD PTR [ebx-0x80]
  4087d1:	clc    
  4087d2:	repz xor BYTE PTR [ebx+0x6567b320],dl
  4087d9:	sub    eax,0x1b231d43
  4087de:	retf   
  4087df:	test   edi,esi
  4087e1:	jl     0x408779
  4087e3:	dec    eax
  4087e4:	and    al,0x1f
  4087e6:	xchg   esp,eax
  4087e7:	aam    0xa
  4087e9:	test   eax,0xf9ed2ced
  4087ee:	in     eax,0x93
  4087f0:	adc    al,0xe5
  4087f2:	loop   0x408864
  4087f4:	or     al,0x82
  4087f6:	jne    0x4087f8
  4087f8:	adc    eax,0x8586c187
  4087fd:	das    
  4087fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ff:	dec    ebp
  408800:	mov    DWORD PTR gs:[ebp-0x49c1a202],esi
  408807:	sbb    dl,dh
  408809:	pusha  
  40880a:	out    0x21,eax
  40880c:	hlt    
  40880d:	pop    ecx
  40880e:	ffree  st(7)
  408810:	(bad)  [ebp-0x75]
  408813:	xchg   BYTE PTR [ebp+0x60],bh
  408816:	inc    esp
  408817:	je     0x408895
  408819:	cdq    
  40881a:	fiadd  DWORD PTR [edx-0x7cef1027]
  408820:	adc    al,0xce
  408822:	pop    ecx
  408823:	(bad)  
  408824:	pop    eax
  408825:	out    dx,al
  408826:	call   0xd19e:0x163bddb8
  40882d:	adc    eax,0xc88c5f43
  408832:	out    0x66,eax
  408834:	dec    ecx
  408835:	nop
  408836:	mov    ds:0xd0c58430,al
  40883b:	mov    ebx,0xe1ab75ba
  408840:	into   
  408841:	adc    DWORD PTR [edx+edi*4+0x3a],0xffffffbf
  408846:	mov    ds:0xd2888e6e,eax
  40884b:	pusha  
  40884c:	pop    ds
  40884d:	adc    BYTE PTR [esi+0x26f9ed11],bl
  408853:	scas   eax,DWORD PTR es:[edi]
  408854:	sbb    eax,0x127a6924
  408859:	inc    edx
  40885a:	nop
  40885b:	loope  0x408849
  40885d:	aas    
  40885e:	rcl    cl,1
  408860:	push   ebp
  408861:	sbb    DWORD PTR [ecx+0x61b6499b],esi
  408867:	add    al,0x5a
  408869:	enter  0xb31e,0xd4
  40886d:	adc    ch,BYTE PTR [esi-0x4d005c85]
  408873:	nop
  408874:	push   eax
  408875:	or     ebp,esi
  408877:	and    cl,al
  408879:	in     eax,dx
  40887a:	push   0x53390aff
  40887f:	dec    ebx
  408880:	ds jbe 0x4088f3
  408883:	xchg   edx,eax
  408884:	push   eax
  408885:	ret    0x8991
  408888:	mov    ebx,0xd260262e
  40888d:	inc    esp
  40888e:	dec    esp
  40888f:	sub    esi,ecx
  408891:	xor    dh,dh
  408893:	add    ebx,DWORD PTR [edx-0x41]
  408896:	add    DWORD PTR [edx+0x21],eax
  408899:	idiv   DWORD PTR [ebp-0x71]
  40889c:	dec    ecx
  40889d:	cmp    eax,0xb5f21fa1
  4088a2:	pusha  
  4088a3:	jmp    0x4ef6e222
  4088a8:	add    DWORD PTR [eax+0x7f2696bf],edi
  4088ae:	sbb    esp,DWORD PTR [ecx-0x49]
  4088b1:	sub    al,0xaf
  4088b3:	sar    BYTE PTR [esi],0x3b
  4088b6:	fs cmp al,ah
  4088b9:	arpl   WORD PTR [ecx],si
  4088bb:	dec    DWORD PTR [ebp-0x2846cae2]
  4088c1:	(bad)  
  4088c2:	outs   dx,BYTE PTR ds:[esi]
  4088c3:	fld    st(0)
  4088c5:	js     0x408893
  4088c7:	xchg   ebp,eax
  4088c8:	and    al,0x97
  4088ca:	push   0xffffffff
  4088cc:	dec    eax
  4088cd:	dec    edi
  4088ce:	lods   eax,DWORD PTR ds:[esi]
  4088cf:	add    eax,DWORD PTR [esp+ecx*8-0x46ec3e23]
  4088d6:	and    esp,DWORD PTR [ecx+ecx*4+0x4c]
  4088da:	addr16 out 0x29,eax
  4088dd:	dec    edi
  4088de:	adc    BYTE PTR [ebp-0x4d],bl
  4088e1:	and    eax,0xa41c9c8a
  4088e6:	(bad)  
  4088e7:	cmc    
  4088e8:	dec    eax
  4088e9:	mov    bl,0xd
  4088eb:	pop    eax
  4088ec:	test   eax,0xfd9e5b53
  4088f1:	in     eax,dx
  4088f2:	xchg   ecx,eax
  4088f3:	cmp    DWORD PTR ds:0x35bd61e0,ecx
  4088f9:	in     al,dx
  4088fa:	neg    DWORD PTR [edx]
  4088fc:	hlt    
  4088fd:	push   cs
  4088fe:	mov    ecx,0x45bd4068
  408903:	leave  
  408904:	imul   edx,DWORD PTR [ebp+edx*2-0x16],0xe0e53561
  40890c:	retf   
  40890d:	std    
  40890e:	(bad)  
  40890f:	sbb    eax,0x4dcddfea
  408914:	sbb    DWORD PTR [esi-0x7d],0x55
  408918:	in     al,dx
  408919:	inc    edi
  40891a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40891b:	mov    edi,0x62594c74
  408920:	cli    
  408921:	aad    0x3d
  408923:	cld    
  408924:	je     0x40893e
  408926:	adc    BYTE PTR [ecx+esi*8],0xec
  40892a:	clc    
  40892b:	xor    dl,dh
  40892d:	test   ebp,ecx
  40892f:	inc    ebx
  408930:	adc    ebx,DWORD PTR [ebx-0x13c4710]
  408936:	stos   BYTE PTR es:[edi],al
  408937:	lahf   
  408938:	sub    DWORD PTR [eax-0x6f],0xac5424d
  40893f:	jg     0x40898f
  408941:	pop    ebp
  408942:	jmp    edx
  408944:	jecxz  0x408957
  408946:	push   eax
  408947:	shr    BYTE PTR [ecx-0x61],0x99
  40894b:	xor    esp,DWORD PTR [ebx+0x17907414]
  408951:	adc    BYTE PTR es:[eax+0x4],ch
  408955:	enter  0x61,0x12
  408959:	add    ecx,DWORD PTR fs:[esi+0xd]
  40895d:	aas    
  40895e:	xchg   edx,eax
  40895f:	sub    ecx,DWORD PTR ds:0x47236e0d
  408965:	in     eax,dx
  408966:	xchg   edi,eax
  408967:	xchg   ecx,eax
  408968:	or     esp,DWORD PTR [esi]
  40896a:	(bad)  
  40896b:	cmp    BYTE PTR [esi+ebx*4+0x2b],al
  40896f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408970:	adc    DWORD PTR [edi+eax*4],esi
  408973:	fidivr WORD PTR [eax+0x6185ce84]
  408979:	jecxz  0x4088fc
  40897b:	aad    0x7
  40897d:	pop    es
  40897e:	push   eax
  40897f:	adc    bl,dl
  408981:	sub    al,0x1
  408983:	jge    0x408910
  408985:	in     eax,0xc4
  408987:	adc    al,0x51
  408989:	push   ebx
  40898a:	xlat   BYTE PTR ds:[ebx]
  40898b:	cmp    bl,ah
  40898d:	int3   
  40898e:	xchg   edx,eax
  40898f:	sbb    edi,DWORD PTR [ecx]
  408991:	dec    ebx
  408992:	pop    ss
  408993:	mov    esp,0x87270556
  408998:	cli    
  408999:	neg    BYTE PTR [edx-0x42301e27]
  40899f:	pop    edi
  4089a0:	sbb    BYTE PTR [esi-0x7b],dl
  4089a3:	inc    eax
  4089a4:	imul   eax,ecx,0x463b2dbc
  4089aa:	pop    esp
  4089ab:	gs std 
  4089ad:	xchg   ebp,eax
  4089ae:	dec    esp
  4089af:	sub    edi,DWORD PTR [edi+0xf4a85bc]
  4089b5:	push   edx
  4089b6:	mov    dl,0x1d
  4089b8:	inc    ebx
  4089b9:	pusha  
  4089ba:	inc    ecx
  4089bb:	pop    ebx
  4089bc:	push   es
  4089bd:	jno    0x408a07
  4089bf:	fild   QWORD PTR [esi+0x522f3b0f]
  4089c5:	or     al,0x7
  4089c7:	xlat   BYTE PTR ds:[ebx]
  4089c8:	cmp    DWORD PTR [edx-0x50],esi
  4089cb:	adc    al,0x7f
  4089cd:	fwait
  4089ce:	shl    DWORD PTR [ebx],1
  4089d0:	push   edx
  4089d1:	sub    al,BYTE PTR [edi+0x67]
  4089d4:	mov    edx,0xd6b1e013
  4089d9:	test   al,0xf7
  4089db:	mov    ds:0x4b48c3a8,eax
  4089e0:	mov    bh,0x44
  4089e2:	aam    0xbc
  4089e4:	fisub  WORD PTR [edx]
  4089e6:	adc    esi,DWORD PTR [edi]
  4089e8:	ja     0x4089be
  4089ea:	retf   0x5c6
  4089ed:	ins    BYTE PTR es:[edi],dx
  4089ee:	push   edi
  4089ef:	inc    esp
  4089f0:	sbb    DWORD PTR [esi+0x6d],edx
  4089f3:	(bad)  
  4089f4:	(bad)  
  4089f6:	jmp    0x9ea15ee3
  4089fb:	or     BYTE PTR [edi+0x45e61c44],bl
  408a01:	adc    DWORD PTR [ebx+0x4],0x5fc26d3d
  408a08:	cmp    BYTE PTR [edi],0xa9
  408a0b:	xchg   ebp,eax
  408a0c:	stc    
  408a0d:	add    eax,0x5178853
  408a12:	stos   BYTE PTR es:[edi],al
  408a13:	and    dl,ch
  408a15:	ret    
  408a16:	adc    bh,BYTE PTR [ebx-0x6664f57c]
  408a1c:	or     edi,DWORD PTR [eax+0x1e70119b]
  408a22:	call   0x1718:0x79488c47
  408a29:	mov    eax,0xbcfb5c18
  408a2e:	mov    cl,0x21
  408a30:	rol    DWORD PTR [ebx+0x3b946255],0x31
  408a37:	pop    ds
  408a38:	push   ds
  408a39:	add    DWORD PTR [esi],ebx
  408a3b:	mov    ds:0x2276a910,eax
  408a40:	shl    edi,0xff
  408a43:	test   DWORD PTR [ecx-0x63ef6dba],ebx
  408a49:	test   DWORD PTR [edx+0x6435b74b],ebx
  408a4f:	dec    esi
  408a50:	es imul edx,ecx,0xfffffff4
  408a54:	loop   0x408aae
  408a56:	cmp    BYTE PTR [edx-0xa],al
  408a59:	pusha  
  408a5a:	enter  0xc735,0x10
  408a5e:	push   ss
  408a5f:	xlat   BYTE PTR ds:[ebx]
  408a60:	mov    dh,0xdd
  408a62:	dec    eax
  408a63:	fnstsw WORD PTR [bp+0x57]
  408a67:	push   ebp
  408a68:	jg     0x408a6c
  408a6a:	sti    
  408a6b:	pop    ds
  408a6c:	mov    DWORD PTR [esi],edx
  408a6e:	sbb    ah,cl
  408a70:	jb     0x408a26
  408a72:	bswap  esi
  408a74:	(bad)  
  408a75:	aas    
  408a76:	xchg   DWORD PTR [ecx+0x37789625],edi
  408a7c:	mov    al,ds:0xd41d61a7
  408a81:	jmp    0x408a06
  408a83:	mov    dh,0x63
  408a85:	push   0xb730141
  408a8a:	int    0xf6
  408a8c:	dec    eax
  408a8d:	pop    eax
  408a8e:	retf   0xfb2a
  408a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a92:	imul   ebx,ecx,0xffffffe8
  408a95:	sub    al,0xee
  408a97:	mov    esi,0x43d59ad4
  408a9c:	fwait
  408a9d:	ins    DWORD PTR es:[edi],dx
  408a9e:	lahf   
  408a9f:	cli    
  408aa0:	les    eax,FWORD PTR [ecx]
  408aa2:	ins    BYTE PTR es:[edi],dx
  408aa3:	mov    esi,DWORD PTR [ebx+ebp*2+0x18b96e5e]
  408aaa:	xchg   BYTE PTR [edi+0x3f],dh
  408aad:	int3   
  408aae:	inc    eax
  408aaf:	mov    cs,WORD PTR [esi]
  408ab1:	mov    eax,0xdb46a92c
  408ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab7:	(bad)  
  408ab8:	jmp    0xac573d1c
  408abd:	mov    bl,0x2b
  408abf:	cdq    
  408ac0:	icebp  
  408ac1:	jno    0x408a93
  408ac3:	dec    edi
  408ac4:	jno    0x408a83
  408ac6:	jl     0x408b2f
  408ac8:	cmc    
  408ac9:	imul   ecx,DWORD PTR ds:0xc2833109,0xfc47aff6
  408ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ad4:	cli    
  408ad5:	retf   
  408ad6:	jne    0x408af1
  408ad8:	pop    ebp
  408ad9:	iret   
  408ada:	add    al,0x6
  408adc:	xchg   ecx,eax
  408add:	ud1    eax,DWORD PTR [edx-0x4ab26339]
  408ae4:	scas   al,BYTE PTR es:[edi]
  408ae5:	out    0xe,al
  408ae7:	imul   ebp,eax,0x9c4e2025
  408aed:	jge    0x408b41
  408aef:	xor    BYTE PTR ds:0xa131aca3,ah
  408af5:	push   ss
  408af6:	or     BYTE PTR [ecx+edi*2-0x5cf6a7e2],bh
  408afd:	les    ebp,FWORD PTR [eax]
  408aff:	sbb    al,0x60
  408b01:	mov    bh,0xb9
  408b03:	retf   0x4542
  408b06:	jne    0x408ae5
  408b08:	mov    eax,0x5cb6fbe0
  408b0d:	aas    
  408b0e:	jmp    0x408b1f
  408b10:	adc    esi,ebp
  408b12:	aam    0x1d
  408b14:	sub    BYTE PTR [edx-0x51],dh
  408b17:	xor    ah,al
  408b19:	hlt    
  408b1a:	and    edi,esi
  408b1c:	(bad)  
  408b1d:	fadd   QWORD PTR [edi+0x2bec78]
  408b23:	jnp    0x408ac2
  408b25:	loopne 0x408b9c
  408b27:	ret    0x59a1
  408b2a:	mov    dl,0x6c
  408b2c:	xor    eax,0x739955a9
  408b31:	xor    eax,edx
  408b33:	pop    ebx
  408b34:	xor    esp,0x7e
  408b37:	sbb    DWORD PTR [ebx-0x6d],ebx
  408b3a:	dec    ebp
  408b3b:	cmp    BYTE PTR [ebp+0x231ba0ce],bl
  408b41:	mov    dh,0xa3
  408b43:	mov    ds,WORD PTR [ecx-0x154ca5da]
  408b49:	(bad)
  408b4c:	mov    BYTE PTR [edx],bh
  408b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b50:	xor    BYTE PTR [edx-0x4f],0x88
  408b54:	lds    ecx,FWORD PTR [ecx-0x74]
  408b57:	aam    0x6c
  408b59:	or     ebp,ebp
  408b5b:	mov    fs,WORD PTR [esi+0x4e0d9a34]
  408b61:	fwait
  408b62:	sar    BYTE PTR [eax],0xe6
  408b65:	bound  edx,QWORD PTR [ebx+edx*2-0x456ad4bb]
  408b6c:	push   ecx
  408b6d:	xchg   edi,eax
  408b6e:	pop    ds
  408b6f:	test   al,0x6a
  408b71:	sbb    BYTE PTR [ecx-0x59491c26],0xe4
  408b78:	in     al,0xb8
  408b7a:	push   ecx
  408b7b:	inc    edx
  408b7c:	or     al,dh
  408b7e:	hlt    
  408b7f:	int3   
  408b80:	je     0x408b8f
  408b82:	pop    ecx
  408b83:	add    BYTE PTR [esp+ebp*1-0x75cb8dfa],bl
  408b8a:	dec    edx
  408b8b:	push   cs
  408b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b8d:	cdq    
  408b8e:	adc    DWORD PTR [ebp-0x73],ebx
  408b91:	xchg   ecx,eax
  408b92:	dec    edx
  408b93:	or     al,BYTE PTR [eax]
  408b95:	xchg   esi,eax
  408b96:	mov    edi,0x2d3687ba
  408b9b:	push   edx
  408b9c:	adc    dh,ah
  408b9e:	pop    ds
  408b9f:	call   0x62fb:0x6ea33379
  408ba6:	jmp    0x408b8c
  408ba8:	jle    0x408b60
  408baa:	or     BYTE PTR [ecx-0x30768a17],0x80
  408bb1:	es xchg edx,eax
  408bb3:	popf   
  408bb4:	dec    edx
  408bb5:	fcom   QWORD PTR [eax+0x54]
  408bb8:	push   ss
  408bb9:	clc    
  408bba:	mov    esp,0x88ac4370
  408bbf:	jmp    0xc14a:0x1c4cb40b
  408bc6:	pop    edx
  408bc7:	inc    edx
  408bc8:	je     0x408c13
  408bca:	js     0x408bfe
  408bcc:	cmp    eax,DWORD PTR [edx+edi*4-0x6d1acec4]
  408bd3:	pop    ebp
  408bd4:	sub    al,0x56
  408bd6:	cmp    ebp,eax
  408bd8:	and    DWORD PTR [ecx-0x7d],ebp
  408bdb:	std    
  408bdc:	fs jecxz 0x408b7c
  408bdf:	dec    eax
  408be0:	xor    BYTE PTR [ebx-0x62],dl
  408be3:	mov    ecx,?
  408be5:	push   0x36
  408be7:	mov    gs,WORD PTR [ebp+ebp*1-0x1c9ed240]
  408bee:	fcomip st,st(0)
  408bf0:	mov    eax,0xaa324f19
  408bf5:	jb     0x408bc4
  408bf7:	daa    
  408bf8:	sub    edx,esi
  408bfa:	loopne 0x408bce
  408bfc:	sbb    DWORD PTR [eax-0x21df9bb],ecx
  408c02:	add    DWORD PTR [edx+0x25],esi
  408c05:	mov    ds:0xb7054b86,eax
  408c0a:	repz std 
  408c0c:	int3   
  408c0d:	test   al,0xd2
  408c0f:	fnstsw WORD PTR [ecx-0x79]
  408c12:	mov    ecx,ebp
  408c14:	(bad)  [ebx]
  408c16:	xor    DWORD PTR [ebx],ecx
  408c18:	(bad)  
  408c19:	sbb    eax,0x85a4e714
  408c1e:	jbe    0x408bfe
  408c20:	mov    cl,0x3
  408c22:	sbb    dh,al
  408c24:	scas   al,BYTE PTR es:[edi]
  408c25:	dec    edi
  408c26:	ret    
  408c27:	jno    0x408c32
  408c29:	loopne 0x408c23
  408c2b:	add    eax,0xe8f1c654
  408c30:	pop    esp
  408c31:	fisubr WORD PTR [ebp-0x46]
  408c34:	pop    ss
  408c35:	xor    BYTE PTR [edi],ch
  408c37:	popa   
  408c38:	(bad)  
  408c3a:	xor    DWORD PTR [edi+0x1],ecx
  408c3d:	test   BYTE PTR [eax+edx*8-0x27446a53],al
  408c44:	xchg   esi,eax
  408c45:	xchg   ebp,eax
  408c46:	push   edi
  408c47:	leave  
  408c48:	pop    esi
  408c49:	and    eax,0xcf5b6a66
  408c4e:	mov    esi,0x92eeb7e3
  408c53:	fistp  QWORD PTR [eax-0x2dde8d9d]
  408c59:	daa    
  408c5a:	push   esi
  408c5b:	nop
  408c5c:	sbb    BYTE PTR [esi],ch
  408c5e:	ret    0x13e1
  408c61:	mov    ebp,0xddda9984
  408c66:	rcr    BYTE PTR [ebx],1
  408c68:	adc    ch,BYTE PTR [edi*4+0x7bcfa0cb]
  408c6f:	test   BYTE PTR [edi],cl
  408c71:	pushf  
  408c72:	xchg   ebx,eax
  408c73:	cmp    bh,ah
  408c75:	fbstp  TBYTE PTR [ecx-0x2ad7d48e]
  408c7b:	into   
  408c7c:	(bad)  
  408c7d:	xor    eax,0x5d95f374
  408c82:	xchg   edx,eax
  408c83:	loopne 0x408c32
  408c85:	test   eax,0x239bdfb6
  408c8a:	aas    
  408c8b:	sbb    dh,BYTE PTR [ebx]
  408c8d:	inc    ebx
  408c8e:	pop    ss
  408c8f:	cmc    
  408c90:	mov    cl,0x97
  408c92:	lods   eax,DWORD PTR ds:[esi]
  408c93:	xor    al,0x16
  408c95:	icebp  
  408c96:	dec    ebp
  408c97:	pop    ss
  408c98:	cs js  0x408ce9
  408c9b:	ss cmp cl,dl
  408c9e:	fdivr  DWORD PTR [ebp+0x7a]
  408ca1:	jns    0x408ca9
  408ca3:	cld    
  408ca4:	push   0x8b36a592
  408ca9:	fcom   DWORD PTR [edi+0x3a]
  408cac:	push   ds
  408cad:	fidivr WORD PTR [ebx+0x7c]
  408cb0:	mov    ebp,esp
  408cb2:	adc    edx,DWORD PTR [ecx]
  408cb4:	inc    ecx
  408cb5:	mov    ds:0xe322cf1b,eax
  408cba:	idiv   al
  408cbc:	jno    0x408c3f
  408cbe:	push   0x593792ff
  408cc3:	div    bh
  408cc5:	pop    ds
  408cc6:	(bad)  
  408cc7:	out    dx,al
  408cc8:	popf   
  408cc9:	xchg   esi,eax
  408cca:	adc    DWORD PTR [eax+0x6c72904b],0x32
  408cd1:	jnp    0x408ce0
  408cd3:	mov    ebp,0xbc345d89
  408cd8:	cwde   
  408cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cda:	jnp    0x408d53
  408cdc:	mov    bh,0x96
  408cde:	mov    ds:0x82fa5d92,al
  408ce3:	dec    ebx
  408ce4:	retf   0x4ce5
  408ce7:	(bad)  
  408ce9:	lahf   
  408cea:	gs pusha 
  408cec:	or     DWORD PTR [edi],edi
  408cee:	ja     0x408d28
  408cf0:	aaa    
  408cf1:	and    ebp,DWORD PTR [ebx]
  408cf3:	sub    eax,0xc5a3f755
  408cf8:	(bad)  [esi-0x79]
  408cfb:	xchg   ecx,eax
  408cfc:	(bad)  
  408cfd:	fisub  DWORD PTR [edx+0xa]
  408d00:	test   eax,0x3174cb9b
  408d05:	test   al,0x65
  408d07:	sbb    cl,BYTE PTR [edi+0x58312daa]
  408d0d:	cmp    ebp,DWORD PTR [edi]
  408d0f:	xor    ebp,DWORD PTR [esi-0x2d]
  408d12:	sar    ecx,0x4
  408d15:	imul   ebx,DWORD PTR [edi+0x3641cc18],0xffffff9d
  408d1c:	dec    edi
  408d1d:	jb     0x408d84
  408d1f:	dec    edi
  408d20:	xchg   edi,eax
  408d21:	mov    esp,0x6a9d7519
  408d26:	dec    esi
  408d27:	pop    edi
  408d28:	cwde   
  408d29:	pop    edx
  408d2a:	xor    al,0xf0
  408d2c:	push   ebp
  408d2d:	jecxz  0x408ccd
  408d2f:	mov    ds:0xa1bc3bac,al
  408d34:	cwde   
  408d35:	xor    bh,dh
  408d37:	es cli 
  408d39:	ret    
  408d3a:	sub    eax,0x6dc66252
  408d3f:	out    dx,al
  408d40:	jmp    0x961f:0x382d9790
  408d47:	xlat   BYTE PTR ds:[ebx]
  408d48:	outs   dx,BYTE PTR ds:[esi]
  408d49:	push   0xffffffcc
  408d4b:	mov    esi,0xafa83227
  408d50:	xor    DWORD PTR [edx+0x7c],edx
  408d53:	mov    WORD PTR [esp+eiz*8],ss
  408d56:	xor    al,0xc4
  408d58:	ror    BYTE PTR [eax],0x73
  408d5b:	adc    ch,BYTE PTR [edi+0x3f357fea]
  408d61:	jmp    0x408d7f
  408d63:	aaa    
  408d64:	push   0x6f
  408d66:	in     al,0x67
  408d68:	mov    bl,0xda
  408d6a:	jl     0x408d8e
  408d6c:	imul   edi,ecx,0x7b
  408d6f:	clc    
  408d70:	aam    0xdb
  408d72:	jne    0x408d97
  408d74:	ffree  st(2)
  408d76:	dec    ecx
  408d77:	xchg   ebp,eax
  408d78:	cmovl  ebp,DWORD PTR [ebx+0x65011be3]
  408d7f:	pop    es
  408d80:	xor    BYTE PTR [ecx+ebp*8-0x77],bl
  408d84:	sub    ah,BYTE PTR [esp+ebx*2+0xb491ede]
  408d8b:	xor    BYTE PTR [ebp-0x7f9cc587],cl
  408d91:	stos   BYTE PTR es:[edi],al
  408d92:	inc    esp
  408d93:	pop    ebx
  408d94:	xchg   ebx,eax
  408d95:	scas   al,BYTE PTR es:[edi]
  408d96:	bound  ebx,QWORD PTR [eax]
  408d98:	jb     0x408da5
  408d9a:	lods   al,BYTE PTR ds:[esi]
  408d9b:	push   ss
  408d9c:	(bad)  
  408d9d:	jns    0x408d4e
  408d9f:	jns    0x408d75
  408da1:	add    DWORD PTR [eax+0x2f],ecx
  408da4:	push   edx
  408da5:	sub    eax,0x236fffea
  408daa:	jmp    0x408de4
  408dac:	sub    BYTE PTR [edx-0x1e1e249],0x8e
  408db3:	add    DWORD PTR [edx],edx
  408db5:	dec    edx
  408db6:	jge    0x408d62
  408db8:	dec    esi
  408db9:	mov    ebp,0x7ed3d3f5
  408dbe:	aaa    
  408dbf:	add    DWORD PTR [ebx+0x62],edx
  408dc2:	popf   
  408dc3:	mov    dl,0xab
  408dc5:	out    dx,eax
  408dc6:	add    al,0x3e
  408dc8:	fbld   TBYTE PTR [ebx-0x69bc054e]
  408dce:	pop    ebx
  408dcf:	xchg   ebp,eax
  408dd0:	adc    ecx,ebp
  408dd2:	sub    al,BYTE PTR [esi+0x5f04e41]
  408dd8:	ret    
  408dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dda:	les    esi,FWORD PTR [ecx]
  408ddc:	repnz mov ds:0xc179543,eax
  408de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de3:	cwde   
  408de4:	sub    al,bl
  408de6:	js     0x408e38
  408de8:	fldenv [edx+ecx*8+0xca2856a]
  408def:	cs sbb al,0x9
  408df2:	arpl   WORD PTR [ebx],bp
  408df4:	sbb    ecx,DWORD PTR [edi-0x42982073]
  408dfa:	mov    edi,0xf743351e
  408dff:	or     BYTE PTR [ecx],0x86
  408e02:	mov    ds:0x86c647b5,eax
  408e07:	fild   WORD PTR [eax]
  408e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e0a:	cmc    
  408e0b:	repz jp 0x408da8
  408e0e:	mov    ah,0x3
  408e10:	mov    ch,cl
  408e12:	mov    dh,0x73
  408e14:	popf   
  408e15:	lock cmp al,0xa3
  408e18:	or     ah,dh
  408e1a:	daa    
  408e1b:	inc    esp
  408e1c:	push   ecx
  408e1d:	or     al,0xd
  408e1f:	adc    bl,BYTE PTR [ebx+0x50949a46]
  408e25:	pop    ss
  408e26:	int3   
  408e27:	dec    edi
  408e28:	dec    ebx
  408e29:	push   ss
  408e2a:	inc    edx
  408e2b:	pop    esi
  408e2c:	xor    ebx,0x25014930
  408e32:	popa   
  408e33:	mov    ds:0xdc4615e0,al
  408e38:	je     0x408dcc
  408e3a:	pop    edi
  408e3b:	das    
  408e3c:	repz sbb BYTE PTR [ebp-0x2f],al
  408e40:	jge    0x408dec
  408e42:	xor    BYTE PTR ds:0xfeebc05c,dh
  408e48:	push   ebp
  408e49:	stc    
  408e4a:	jo     0x408dfd
  408e4c:	jnp    0x408e4c
  408e4e:	fiadd  DWORD PTR [ebp+ecx*2+0x79e36db8]
  408e55:	push   ebx
  408e56:	xchg   DWORD PTR [esi],ebx
  408e58:	push   ds
  408e59:	call   0x4683:0x1c03e4d0
  408e60:	nop
  408e61:	sub    eax,DWORD PTR [ebp+ecx*4+0x1eec790d]
  408e68:	fwait
  408e69:	jo     0x408ebb
  408e6b:	dec    ebp
  408e6c:	scas   al,BYTE PTR es:[edi]
  408e6d:	cli    
  408e6e:	push   ss
  408e6f:	call   FWORD PTR [edi+edi*4+0x5bb62382]
  408e76:	retf   
  408e77:	clc    
  408e78:	call   0xf788734
  408e7d:	adc    al,0x51
  408e7f:	loop   0x408ecf
  408e81:	cmp    eax,0x8ee0aeff
  408e86:	in     eax,dx
  408e87:	mul    DWORD PTR [ecx]
  408e89:	adc    eax,0x2bdd5a16
  408e8e:	xchg   ecx,eax
  408e8f:	mov    cs,WORD PTR [ebx]
  408e91:	mov    eax,ds:0x93b9ceee
  408e96:	add    esp,esp
  408e98:	or     DWORD PTR [ebx+0x2a],edx
  408e9b:	xchg   ebx,eax
  408e9c:	mov    eax,0xfd59e91e
  408ea1:	sbb    ah,BYTE PTR [ecx-0x6e2dede1]
  408ea7:	push   0x7a
  408ea9:	das    
  408eaa:	push   0x919709d2
  408eaf:	sbb    DWORD PTR [esi+0x2e],0xffffff8d
  408eb3:	jae    0x408f01
  408eb5:	mov    esi,0xb3b6646c
  408eba:	mov    BYTE PTR [ebx+0xf],al
  408ebd:	test   eax,0xd66c5532
  408ec2:	sub    ecx,0x84b70aa4
  408ec8:	xchg   edx,eax
  408ec9:	test   BYTE PTR [esi+esi*4-0x6bbbefa5],0xee
  408ed1:	mov    DWORD PTR [edi],ecx
  408ed3:	dec    ebp
  408ed4:	jno    0x408f55
  408ed6:	stos   BYTE PTR es:[edi],al
  408ed7:	(bad)  
  408ed8:	mov    esi,0x5ecc9ce9
  408edd:	add    esp,0xffffffa4
  408ee0:	or     ch,ah
  408ee2:	not    DWORD PTR [esi-0x1d]
  408ee5:	popa   
  408ee6:	outs   dx,BYTE PTR ds:[esi]
  408ee7:	dec    edx
  408ee8:	sub    bh,0x16
  408eeb:	xor    DWORD PTR [eax+0x5e7cd08c],ecx
  408ef1:	jmp    0x1e3d189c
  408ef6:	xlat   BYTE PTR ds:[ebx]
  408ef7:	sub    BYTE PTR [ebx],ah
  408ef9:	mov    ah,0x5b
  408efb:	jns    0x408e84
  408efd:	nop
  408efe:	dec    eax
  408eff:	or     BYTE PTR [ebp-0x777bb8bb],dl
  408f05:	aaa    
  408f06:	mov    dl,0x52
  408f08:	xchg   esp,eax
  408f09:	rol    DWORD PTR [edi+0x58],0xd7
  408f0d:	and    eax,0xb233a389
  408f12:	inc    edi
  408f13:	sbb    DWORD PTR [edi+edx*4-0x19c139bd],ebx
  408f1a:	jo     0x408f36
  408f1c:	adc    BYTE PTR [eax+ebp*2],dl
  408f1f:	or     DWORD PTR [ebp+edi*2-0x14e7e97d],ebx
  408f26:	push   cs
  408f27:	xor    eax,0x4edbd804
  408f2c:	out    0x10,eax
  408f2e:	cld    
  408f2f:	int    0xb1
  408f31:	in     eax,dx
  408f32:	enter  0xc249,0x40
  408f36:	pop    ebp
  408f37:	push   edx
  408f38:	jae    0x408f17
  408f3a:	lock in al,0x94
  408f3d:	dec    edi
  408f3e:	sbb    eax,0x52fe86cf
  408f43:	push   ecx
  408f44:	mov    ds:0x172c50b3,al
  408f49:	imul   edi,DWORD PTR [eax+eiz*2+0x39f07f60],0x8f229b5c
  408f54:	sbb    al,0xe7
  408f56:	imul   ecx,DWORD PTR [ecx-0x4d15dfdd],0x9444ccac
  408f60:	mul    BYTE PTR [eax+0x18]
  408f63:	ins    DWORD PTR es:[edi],dx
  408f64:	lods   eax,DWORD PTR ds:[esi]
  408f65:	jl     0x408fa5
  408f67:	cmp    eax,0xd3d1d1c4
  408f6c:	ret    0x5273
  408f6f:	xchg   ebx,eax
  408f70:	or     al,0x33
  408f72:	dec    ebx
  408f73:	pop    esi
  408f74:	xchg   ebp,eax
  408f75:	aaa    
  408f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f77:	bound  edi,QWORD PTR [ecx]
  408f79:	adc    eax,0xf7888785
  408f7e:	lods   al,BYTE PTR ds:[esi]
  408f7f:	sub    DWORD PTR [edx+ebx*2],ebx
  408f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f83:	sub    esi,DWORD PTR [edx-0x10f19c2a]
  408f89:	rcl    DWORD PTR [ebx],cl
  408f8b:	out    dx,eax
  408f8c:	mov    eax,0x4a649f19
  408f91:	aad    0x59
  408f93:	rcr    BYTE PTR [ebx],cl
  408f95:	or     esi,DWORD PTR [eax]
  408f97:	(bad)  
  408f98:	sub    dl,BYTE PTR [esi+0x3]
  408f9b:	jo     0x408f7d
  408f9d:	mov    eax,ds:0x61a1fca8
  408fa2:	loopne 0x408fdb
  408fa4:	jl     0x408f27
  408fa6:	jg     0x408fb0
  408fa8:	and    eax,0x1a22174b
  408fad:	mov    dh,0x31
  408faf:	hlt    
  408fb0:	fdivr  DWORD PTR [eax]
  408fb2:	rcr    DWORD PTR ds:0xda9d8514,0xf
  408fb9:	jns    0x408fc8
  408fbb:	in     al,dx
  408fbc:	inc    edi
  408fbd:	sub    eax,0xbeac7dcb
  408fc2:	and    al,0x69
  408fc4:	and    dl,BYTE PTR [ebp+0x47da8f3c]
  408fca:	mov    al,ss:0x348ae4cd
  408fd0:	add    BYTE PTR [ebx+eax*4+0x1736f2d6],bl
  408fd7:	sar    BYTE PTR [esi-0x5f],cl
  408fda:	pop    edi
  408fdb:	das    
  408fdc:	cmp    ch,BYTE PTR ds:0x337c1f94
  408fe2:	imul   ecx,DWORD PTR [edi-0x6f13f2cd],0x54
  408fe9:	sub    esi,DWORD PTR [esi]
  408feb:	(bad)  
  408fec:	or     al,0xa9
  408fee:	pop    edi
  408fef:	cmp    BYTE PTR [edi],bh
  408ff1:	lahf   
  408ff2:	sbb    al,0x3
  408ff4:	jmp    0x409011
  408ff6:	aas    
  408ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ff8:	in     al,0x86
  408ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ffb:	mov    al,0xf3
  408ffd:	mov    al,ds:0x5a2e1c3d
  409002:	(bad)  
  409004:	xchg   esp,eax
  409005:	daa    
  409006:	push   cs
  409007:	push   0xffffffdd
  409009:	(bad)  
  40900a:	sbb    BYTE PTR [edx-0x7e],0x18
  40900e:	pop    ebp
  40900f:	outs   dx,BYTE PTR ds:[si]
  409011:	jg     0x408ff2
  409013:	sub    DWORD PTR [ebx+ebx*1],0xa85a147a
  40901a:	sbb    al,0xe9
  40901c:	fcomip st,st(6)
  40901e:	push   ecx
  40901f:	dec    edi
  409020:	cli    
  409021:	sub    ecx,DWORD PTR [edx+eiz*4+0x3407cdcf]
  409028:	adc    ebx,DWORD PTR [eax]
  40902a:	in     eax,dx
  40902b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40902c:	jns    0x409060
  40902e:	or     eax,0x1baba308
  409033:	fist   WORD PTR [ebp+0x5d5fbf33]
  409039:	in     al,dx
  40903a:	push   ebx
  40903b:	lods   eax,DWORD PTR ds:[esi]
  40903c:	pop    ecx
  40903d:	in     al,dx
  40903e:	pop    esp
  40903f:	sti    
  409040:	xor    ah,bh
  409042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409043:	fistp  WORD PTR [ecx+0x6b]
  409046:	xchg   edi,eax
  409047:	pop    eax
  409048:	mov    esi,DWORD PTR [esi+0x17]
  40904b:	mov    bl,0xc7
  40904d:	fist   DWORD PTR [ecx-0x55]
  409050:	sub    eax,0xb8adebed
  409055:	stc    
  409056:	lods   al,BYTE PTR ds:[esi]
  409057:	mov    ch,0xbe
  409059:	mov    edi,0x509bf2f8
  40905e:	mov    dl,0x1c
  409060:	in     al,0xd3
  409062:	hlt    
  409063:	mov    ebp,0x570286dc
  409068:	outs   dx,BYTE PTR ds:[esi]
  409069:	jmp    0x408ff6
  40906b:	sbb    BYTE PTR [ebp-0x41],0x44
  40906f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409070:	pushf  
  409071:	cmp    al,cl
  409073:	lea    edx,[edi-0x4d]
  409076:	pop    ds
  409077:	sbb    bh,cl
  409079:	les    edx,FWORD PTR [esi+0x11]
  40907c:	push   ss
  40907d:	inc    esp
  40907e:	add    dh,ch
  409080:	pop    ds
  409081:	adc    eax,0x7cba9833
  409086:	pop    eax
  409087:	loopne 0x4090af
  409089:	fdiv   DWORD PTR [esi-0x6c]
  40908c:	mov    ebx,0xc930a959
  409091:	stc    
  409092:	dec    esi
  409093:	cmp    al,0xd4
  409095:	mov    DWORD PTR [ebp+0x637d32a4],ebp
  40909b:	adc    eax,0x6b6d2250
  4090a0:	sar    DWORD PTR [edi+ebx*4+0x6edfcc71],cl
  4090a7:	jo     0x4090bd
  4090a9:	sub    DWORD PTR [esi+0x70],0x58c1eef3
  4090b0:	inc    esp
  4090b1:	icebp  
  4090b2:	or     eax,0x100e013a
  4090b7:	jecxz  0x4090b4
  4090b9:	jge    0x40912c
  4090bb:	xchg   ebp,eax
  4090bc:	call   0x4ab4:0x9c4bae86
  4090c3:	shl    BYTE PTR [esi+0x3c1385ee],cl
  4090c9:	xor    ebp,0xffffff8e
  4090cc:	add    ah,cl
  4090ce:	(bad)  
  4090d0:	sub    dh,BYTE PTR [ebp-0x2d]
  4090d3:	mov    al,BYTE PTR cs:[eax+0x44e5dd34]
  4090da:	jg     0x4090cf
  4090dc:	mov    eax,0x672ce52b
  4090e1:	test   ebp,esi
  4090e3:	mov    esi,DWORD PTR [ecx-0x45b67626]
  4090e9:	cwde   
  4090ea:	cmp    edx,DWORD PTR [ebp+ebp*8+0x45]
  4090ee:	mov    ebx,DWORD PTR [ebp-0xb]
  4090f1:	pushf  
  4090f2:	mov    ecx,0x57dc751b
  4090f7:	mov    esp,0xd6cbd510
  4090fc:	arpl   WORD PTR [ebx+0x79374cf8],si
  409102:	mov    esp,0x35e728ef
  409107:	inc    ebp
  409108:	add    DWORD PTR [ebx],ebp
  40910a:	mov    ebp,ecx
  40910c:	adc    BYTE PTR [edi+0x64],dl
  40910f:	neg    dl
  409111:	shr    DWORD PTR [edi+0x5415fb73],cl
  409117:	dec    eax
  409118:	cmp    bh,al
  40911a:	pop    esi
  40911b:	push   edi
  40911c:	pop    ebx
  40911d:	lods   eax,DWORD PTR ds:[esi]
  40911e:	arpl   WORD PTR [ebx+ebp*4],cx
  409121:	ficomp DWORD PTR [edx]
  409123:	int    0xdd
  409125:	xor    eax,0x807d5111
  40912a:	test   ebx,0x93dd1fcc
  409130:	inc    edx
  409131:	sbb    esi,DWORD PTR [ebp+0x59]
  409134:	loope  0x4091aa
  409136:	out    0xf3,eax
  409138:	stos   BYTE PTR es:[edi],al
  409139:	scas   al,BYTE PTR es:[edi]
  40913a:	mov    ecx,0xe3a71b01
  40913f:	sub    DWORD PTR [ebx-0x28456473],eax
  409145:	ret    
  409146:	xchg   dh,al
  409148:	shl    edx,1
  40914a:	cmp    al,0xc4
  40914c:	(bad)  
  40914d:	cmp    al,0x65
  40914f:	xchg   esp,eax
  409150:	dec    ebp
  409151:	and    eax,0x1142335c
  409156:	add    eax,0x34cb2614
  40915b:	push   edi
  40915c:	push   esi
  40915d:	ins    BYTE PTR es:[edi],dx
  40915e:	idiv   BYTE PTR [edi]
  409160:	jae    0x409157
  409162:	je     0x4091ca
  409164:	mov    ?,WORD PTR [eax-0x36]
  409167:	(bad)  
  409169:	jge    0x4091c7
  40916b:	and    BYTE PTR [esi+0x4],bl
  40916e:	mov    edx,0x32b2bc7e
  409173:	jmp    0x8511fd54
  409178:	push   0xffffffac
  40917a:	scas   eax,DWORD PTR es:[edi]
  40917b:	int3   
  40917c:	in     eax,dx
  40917d:	mov    ebx,0x6b8565f1
  409182:	and    BYTE PTR [ebp+0x5ed5c008],ch
  409188:	(bad)  
  409189:	and    esp,DWORD PTR [ebx]
  40918b:	ins    BYTE PTR es:[edi],dx
  40918c:	mov    ebx,0x1f731de8
  409191:	mov    bh,0x78
  409193:	sar    ch,0x52
  409196:	adc    al,0xa7
  409198:	mov    ds:0x5d310799,ax
  40919e:	push   ebp
  40919f:	jae    0x4091dd
  4091a1:	adc    BYTE PTR ds:0x9cb7f169,0x6
  4091a8:	xor    BYTE PTR ds:0x2349cec0,al
  4091af:	jmp    0xa1e6aaeb
  4091b4:	pusha  
  4091b5:	and    ch,ah
  4091b7:	sub    al,0x19
  4091ba:	sti    
  4091bb:	jne    0x4091ac
  4091bd:	repnz cld 
  4091bf:	add    ebp,DWORD PTR [edx+0x31]
  4091c2:	mov    al,0xf0
  4091c4:	gs mov dl,0x21
  4091c7:	push   edi
  4091c8:	mov    edi,0xd565125a
  4091cd:	bnd jge 0x4091c1
  4091d0:	push   0x26
  4091d2:	sbb    BYTE PTR [ebp+0x2b],0xe2
  4091d6:	jns    0x4091ce
  4091d8:	xlat   BYTE PTR ds:[ebx]
  4091d9:	and    BYTE PTR [ebx+0x4f],ch
  4091dc:	scas   al,BYTE PTR es:[edi]
  4091dd:	mov    esp,?
  4091df:	bound  eax,QWORD PTR [edi-0x6c6609f4]
  4091e5:	add    esp,edx
  4091e7:	(bad)  
  4091e8:	sbb    eax,0xeb8a9fcc
  4091ed:	mov    ah,0xc0
  4091ef:	inc    esp
  4091f0:	outs   dx,BYTE PTR ds:[esi]
  4091f1:	jge    0x409218
  4091f3:	cmp    esp,DWORD PTR [edx-0x1012ced4]
  4091f9:	and    bl,BYTE PTR [ebx]
  4091fb:	xor    esp,DWORD PTR [esi+0x2490052f]
  409201:	xor    edi,DWORD PTR [edx]
  409203:	dec    esi
  409204:	imul   ebp,DWORD PTR [esi+0x45],0xe4587712
  40920b:	(bad)  
  40920d:	aaa    
  40920e:	sbb    eax,0xf305aa87
  409213:	call   0xbf09:0x87caea8e
  40921a:	push   edi
  40921b:	(bad)  
  40921c:	cld    
  40921d:	add    eax,0xf2f4434
  409222:	xchg   edx,eax
  409223:	cmp    edi,DWORD PTR [ecx-0xb]
  409226:	sbb    eax,ebp
  409228:	outs   dx,BYTE PTR ds:[esi]
  409229:	inc    edx
  40922a:	bound  esp,QWORD PTR [ecx+0x7b07cde8]
  409230:	shl    BYTE PTR [eax],0xb8
  409233:	(bad)  [edi+eiz*2+0x3d]
  409237:	adc    eax,esi
  409239:	test   BYTE PTR [edx-0x70],dh
  40923c:	sub    DWORD PTR [ecx-0x58],esp
  40923f:	jns    0x4091ec
  409241:	push   ss
  409242:	adc    ebx,DWORD PTR [ecx-0x573e1faa]
  409248:	into   
  409249:	cmp    DWORD PTR [ebx],ebp
  40924b:	stos   BYTE PTR es:[edi],al
  40924c:	imul   ch
  40924e:	jns    0x409248
  409250:	nop
  409251:	rcl    DWORD PTR [eax-0x6d87fa4c],cl
  409257:	mov    dl,BYTE PTR [ecx-0x1285999c]
  40925d:	retf   
  40925e:	ja     0x4092d4
  409260:	jl     0x4092d3
  409262:	add    eax,0xfea76299
  409267:	retf   0xe20f
  40926a:	into   
  40926b:	inc    edi
  40926c:	call   0xce291368
  409271:	lea    ecx,[esi+0x65]
  409274:	sbb    eax,0x2954eef7
  409279:	jbe    0x409284
  40927b:	xchg   ebp,eax
  40927c:	cmp    BYTE PTR [edx+0x4a0393a9],al
  409282:	xchg   eax,esp
  409284:	push   cs
  409285:	sub    ch,BYTE PTR [ebp+ebp*2+0x2b]
  409289:	mov    BYTE PTR [ebx+ebp*2],bh
  40928c:	dec    ebp
  40928d:	jecxz  0x409288
  40928f:	cmp    dh,al
  409291:	sbb    eax,0x1cc5bd5e
  409296:	push   cs
  409297:	retf   
  409298:	dec    ebp
  409299:	push   ebx
  40929a:	hlt    
  40929b:	out    dx,al
  40929c:	and    BYTE PTR [edx-0x72],bl
  40929f:	xchg   edi,eax
  4092a0:	(bad)  
  4092a2:	push   eax
  4092a3:	xchg   esi,eax
  4092a4:	push   edi
  4092a5:	fcos   
  4092a7:	jp     0x4092ca
  4092a9:	iret   
  4092aa:	icebp  
  4092ab:	push   eax
  4092ac:	pushf  
  4092ad:	in     eax,dx
  4092ae:	es aaa 
  4092b0:	rcr    BYTE PTR gs:[ecx+ebx*2],1
  4092b4:	arpl   WORD PTR [esi+0x79],cx
  4092b7:	sbb    dh,dl
  4092b9:	mov    bh,0xfb
  4092bb:	ins    DWORD PTR es:[edi],dx
  4092bc:	mov    edi,0x7b94de7c
  4092c1:	loop   0x4092f0
  4092c3:	scas   al,BYTE PTR es:[edi]
  4092c4:	push   ss
  4092c5:	arpl   WORD PTR [edx+edx*2-0x5f],bx
  4092c9:	sbb    ebp,DWORD PTR [edi+0x42f2c746]
  4092cf:	out    dx,eax
  4092d0:	jo     0x4092c7
  4092d2:	xor    dh,bh
  4092d4:	inc    al
  4092d6:	dec    esi
  4092d7:	fstp   DWORD PTR [eax+edi*1+0x6a]
  4092db:	inc    esi
  4092dc:	and    al,0x1f
  4092de:	sub    eax,DWORD PTR [ebp+0xc7ea034]
  4092e4:	enter  0x532a,0x18
  4092e8:	lods   al,BYTE PTR ds:[esi]
  4092e9:	inc    edi
  4092ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092eb:	mov    ch,0xaf
  4092ed:	jle    0x409313
  4092ef:	adc    al,0x81
  4092f1:	sbb    ah,0xbf
  4092f4:	gs stos BYTE PTR es:[edi],al
  4092f6:	fs add eax,0x1dda80c6
  4092fc:	mov    dl,BYTE PTR [edx+0xe]
  4092ff:	lahf   
  409300:	popa   
  409301:	je     0x409331
  409303:	or     eax,DWORD PTR [esp+eax*1-0x2b]
  409307:	jne    0x4092ff
  409309:	test   al,0x16
  40930b:	mov    WORD PTR [ecx+0x23],ss
  40930e:	or     ecx,DWORD PTR [esi+0x3d5834c]
  409314:	adc    BYTE PTR [ebp+0x5b3c6225],ch
  40931a:	lods   eax,DWORD PTR ds:[esi]
  40931b:	mov    ecx,0xbcca3782
  409320:	sub    al,0x66
  409322:	mov    dl,dh
  409324:	adc    ecx,DWORD PTR [eax*2+0x39ea235e]
  40932b:	retf   
  40932c:	adc    DWORD PTR [ecx+ecx*4+0xb],esp
  409330:	push   esp
  409331:	or     DWORD PTR [ebp+esi*4+0x2bd9e2b8],edx
  409338:	aad    0x3c
  40933a:	pop    esp
  40933b:	jne    0x409390
  40933d:	xchg   DWORD PTR [edi+0x6924c579],edx
  409343:	out    0xd5,eax
  409345:	and    bl,BYTE PTR [edi+0x59a40c8f]
  40934b:	jno    0x40935c
  40934d:	sbb    eax,0x2a51654e
  409352:	add    DWORD PTR [esi+ebx*2],ebx
  409355:	inc    esi
  409356:	inc    ebp
  409357:	imul   eax,DWORD PTR [ebx+0x60],0x6e5654f6
  40935e:	lods   eax,DWORD PTR ds:[esi]
  40935f:	pop    esi
  409360:	inc    ebp
  409361:	and    al,0xd4
  409363:	bound  esp,QWORD PTR [ebx-0x2f]
  409366:	not    BYTE PTR [ecx+esi*2-0x7a]
  40936a:	pop    esp
  40936b:	lock cmp eax,0xcd014fe
  409372:	shr    BYTE PTR ds:[esi+eiz*1-0x2e33f619],1
  40937a:	das    
  40937b:	imul   ebp,DWORD PTR [eax+0x66],0xb0c291e1
  409382:	push   esi
  409383:	push   esi
  409384:	loop   0x4093b0
  409386:	ja     0x409360
  409388:	jmp    0x9fcaadab
  40938d:	jmp    0x8669a9ff
  409392:	lock inc edi
  409394:	sbb    DWORD PTR [edx+0x6a],ebx
  409397:	pop    ecx
  409398:	ret    0x4bbc
  40939b:	nop
  40939c:	push   DWORD PTR [eax-0x14356585]
  4093a2:	mov    eax,0xba0f1a1b
  4093a7:	jp     0x409369
  4093a9:	popf   
  4093aa:	push   edi
  4093ab:	add    al,BYTE PTR [esi+eiz*8]
  4093ae:	mov    ?,eax
  4093b0:	and    BYTE PTR [edi],bl
  4093b2:	aam    0xfa
  4093b4:	inc    esi
  4093b5:	std    
  4093b6:	sub    DWORD PTR [esi-0x13],ecx
  4093b9:	out    0x2c,eax
  4093bb:	loope  0x4093db
  4093bd:	std    
  4093be:	inc    edi
  4093bf:	mov    ch,0xa2
  4093c1:	jno    0x40935c
  4093c3:	daa    
  4093c4:	mov    cs,WORD PTR cs:[eax+edx*1+0x1efeb2de]
  4093cc:	je     0x409426
  4093ce:	sbb    al,0x9f
  4093d0:	jbe    0x40944a
  4093d2:	add    al,BYTE PTR [esi]
  4093d4:	mov    ebp,0x96e32d3c
  4093d9:	pop    eax
  4093da:	imul   ebx,DWORD PTR [edx-0x2f],0xffffffc9
  4093de:	aaa    
  4093df:	add    DWORD PTR [ebx-0x6c9ca878],0x5166dbf3
  4093e9:	cmc    
  4093ea:	adc    BYTE PTR [esi+0x6a],ah
  4093ed:	push   edi
  4093ee:	xor    al,0xf8
  4093f0:	inc    esi
  4093f1:	sub    BYTE PTR [ebx+eiz*2],dl
  4093f4:	repz aaa 
  4093f6:	ins    DWORD PTR es:[edi],dx
  4093f7:	fld    DWORD PTR [esi]
  4093f9:	add    al,0x5a
  4093fb:	mov    dl,ch
  4093fd:	jecxz  0x409458
  4093ff:	(bad)  
  409400:	push   esi
  409401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409402:	mov    BYTE PTR [ebx+edx*2+0x0],dl
  409406:	ins    DWORD PTR es:[edi],dx
  409407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409408:	pop    ds
  409409:	sti    
  40940a:	cmp    BYTE PTR [edi-0x6fe5b8a2],0x9c
  409411:	sbb    ah,BYTE PTR [edx+eiz*2-0x41]
  409415:	fcomp  DWORD PTR [ebp+0x67]
  409418:	fidiv  WORD PTR [ecx+0x52]
  40941b:	je     0x409460
  40941d:	jge    0x4093a5
  40941f:	outs   dx,BYTE PTR ds:[esi]
  409420:	adc    eax,0x2efcac2f
  409425:	rol    eax,cl
  409427:	push   eax
  409428:	out    0x15,eax
  40942a:	outs   dx,DWORD PTR ds:[esi]
  40942b:	xchg   ebp,eax
  40942c:	pop    ds
  40942d:	add    ebx,edi
  40942f:	cmp    al,0x9b
  409431:	icebp  
  409432:	ret    
  409433:	pop    ss
  409434:	mov    ch,0xab
  409436:	jns    0x409445
  409438:	or     eax,eax
  40943a:	ds pop ebp
  40943c:	(bad)  
  40943d:	int    0x56
  40943f:	mov    ch,0xb9
  409441:	jge    0x409480
  409443:	adc    al,0x59
  409445:	sar    ebx,0xf5
  409448:	cmp    DWORD PTR [ecx+0x7b],ebp
  40944b:	lods   eax,DWORD PTR ds:[esi]
  40944c:	cmp    bl,0xba
  40944f:	out    dx,eax
  409450:	call   FWORD PTR [edx-0x26e171e4]
  409456:	and    al,0x5b
  409458:	fist   WORD PTR [edx+0x5f]
  40945b:	pop    esi
  40945c:	cmp    BYTE PTR [esi+edi*4-0x70],cl
  409460:	aas    
  409461:	sub    ch,ah
  409463:	retf   
  409464:	fs lahf 
  409466:	nop
  409467:	jnp    0x409434
  409469:	fsubr  QWORD PTR [ebx+0x4d]
  40946c:	fcomp  QWORD PTR [ebx+0x3b]
  40946f:	and    al,0x5d
  409471:	enter  0xf2b,0xbb
  409475:	add    dl,0x1
  409478:	(bad)  
  40947a:	and    eax,DWORD PTR [ebx]
  40947c:	sbb    BYTE PTR [edi-0x5ae6458c],dl
  409482:	lods   al,BYTE PTR ds:[esi]
  409483:	fisttp DWORD PTR [ebx+0x54]
  409486:	dec    eax
  409487:	(bad)  
  409489:	jne    0x4094d8
  40948b:	ror    DWORD PTR [eax],1
  40948d:	mov    al,0x9b
  40948f:	stos   BYTE PTR es:[edi],al
  409490:	shl    BYTE PTR [eax+edi*8-0x2a],1
  409494:	mov    al,ds:0x7b03d4b7
  409499:	push   es
  40949a:	pop    ds
  40949b:	cwde   
  40949c:	js     0x40944b
  40949e:	inc    esp
  40949f:	outs   dx,BYTE PTR ds:[esi]
  4094a0:	mov    BYTE PTR [eax],cl
  4094a2:	pop    ecx
  4094a3:	dec    ecx
  4094a4:	fwait
  4094a5:	rol    DWORD PTR [ebx+0x6ffba98a],cl
  4094ab:	mov    ah,0x72
  4094ad:	(bad)  
  4094ae:	pop    esi
  4094af:	test   DWORD PTR [edi+0x65],edx
  4094b2:	jmp    0xc4dc:0x41e7d14d
  4094b9:	push   edi
  4094ba:	inc    edx
  4094bb:	(bad)  
  4094bc:	not    esi
  4094be:	add    al,0x5
  4094c0:	push   eax
  4094c1:	xchg   ah,dl
  4094c3:	idiv   DWORD PTR [ecx]
  4094c5:	call   0xd5f8:0xc138c479
  4094cc:	ret    0x2194
  4094cf:	rol    DWORD PTR ds:0x7212c714,1
  4094d5:	popa   
  4094d6:	ret    
  4094d7:	aas    
  4094d8:	xchg   esi,eax
  4094d9:	push   0x8996ec5f
  4094de:	or     eax,0xa584f2d3
  4094e3:	fisttp QWORD PTR [edx]
  4094e5:	ds ss push eax
  4094e8:	adc    al,0xb1
  4094ea:	mov    dl,0x54
  4094ec:	sub    al,0x2f
  4094ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094ef:	cwde   
  4094f0:	fisub  DWORD PTR [ecx+0x24]
  4094f3:	push   0x5d
  4094f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f6:	aas    
  4094f7:	in     al,0xc
  4094f9:	(bad)
  4094fc:	mov    bl,0x35
  4094fe:	sbb    bh,BYTE PTR [esi]
  409500:	(bad)  
  409501:	rcl    al,0x3b
  409504:	mov    bl,0x38
  409506:	pop    ebp
  409507:	inc    ebp
  409508:	push   ds
  409509:	bound  edx,QWORD PTR [edi]
  40950b:	enter  0x79f7,0x15
  40950f:	repz xchg esp,eax
  409511:	nop
  409512:	xchg   esi,eax
  409513:	fbld   TBYTE PTR [ecx]
  409515:	mov    eax,0x1bbdeca9
  40951a:	adc    ch,BYTE PTR [edi+0x2]
  40951d:	test   BYTE PTR [edx-0x3d],0xc2
  409521:	add    BYTE PTR [eax],al
  409523:	sti    
  409524:	push   edx
  409525:	ret    0xf7f5
  409528:	popa   
  409529:	test   al,0x3e
  40952b:	jle    0x4094c8
  40952d:	jb     0x4094bd
  40952f:	ins    BYTE PTR es:[edi],dx
  409530:	xchg   DWORD PTR [edi+ebp*8+0x56],ebx
  409534:	rcr    BYTE PTR [ebx+ebx*8-0x79],0xa1
  409539:	adc    DWORD PTR [edx-0x36bdc362],edi
  40953f:	mov    dl,0x31
  409541:	lahf   
  409542:	jns    0x4094c9
  409544:	push   0x6f
  409546:	imul   eax,DWORD PTR [ebp-0x29],0x4b
  40954a:	mov    ?,WORD PTR [ebp+0x541ba44a]
  409550:	sbb    esi,DWORD PTR [esi]
  409552:	pop    esi
  409553:	cmp    al,0x24
  409555:	mov    al,0x1b
  409557:	(bad)  
  409559:	adc    al,0x2a
  40955b:	rcl    BYTE PTR [ebp+0x7c],1
  40955e:	popa   
  40955f:	sub    dl,bh
  409561:	push   ecx
  409562:	stos   BYTE PTR es:[edi],al
  409563:	jns    0x4095cc
  409565:	push   ss
  409566:	xchg   DWORD PTR [eax+0x41243a],edx
  40956c:	cwde   
  40956d:	sbb    BYTE PTR [ecx],ch
  40956f:	push   eax
  409570:	test   al,0xf2
  409572:	inc    bx
  409574:	cdq    
  409575:	push   0x13
  409577:	mov    ch,0x10
  409579:	lahf   
  40957a:	push   ds
  40957b:	adc    al,0x9d
  40957d:	sub    al,0xd1
  40957f:	dec    edx
  409580:	and    BYTE PTR [edi-0x6c],bh
  409583:	jae    0x409521
  409585:	and    al,0x15
  409587:	sub    esi,DWORD PTR [ebx-0x3901bdc]
  40958d:	jno    0x4095ba
  40958f:	jbe    0x4095ed
  409591:	pop    edx
  409592:	xchg   edx,eax
  409593:	loopne 0x409600
  409595:	and    DWORD PTR [edx+0x2fd31235],ebp
  40959b:	test   ch,dl
  40959d:	dec    esi
  40959e:	test   eax,0xc6a3ef09
  4095a3:	(bad)  
  4095a4:	popa   
  4095a5:	and    dh,bl
  4095a7:	cmc    
  4095a8:	mov    ch,0xbc
  4095aa:	outs   dx,DWORD PTR ds:[esi]
  4095ab:	cwde   
  4095ac:	pusha  
  4095ad:	pop    esi
  4095ae:	or     bl,BYTE PTR [ebp+0x4f]
  4095b1:	pop    ss
  4095b2:	or     al,0x26
  4095b4:	push   ecx
  4095b5:	sbb    eax,0x3fc127c0
  4095ba:	adc    ebp,DWORD PTR [ebx+0xd1862b]
  4095c0:	xor    BYTE PTR [edi+0x70f81ceb],ch
  4095c6:	aam    0xad
  4095c8:	(bad)  
  4095c9:	ror    DWORD PTR [edx+ebx*4+0x4a2d006a],1
  4095d0:	dec    esi
  4095d1:	xchg   esi,eax
  4095d2:	jno    0x40964d
  4095d4:	in     al,0x48
  4095d6:	paddusb mm0,QWORD PTR [ebp+edx*2+0x22]
  4095db:	and    DWORD PTR [ecx+0x71636965],ecx
  4095e1:	ins    BYTE PTR es:[edi],dx
  4095e2:	push   es
  4095e3:	idiv   BYTE PTR [edx+0x29da0257]
  4095e9:	cwde   
  4095ea:	pop    ss
  4095eb:	mov    edx,0x112f4154
  4095f0:	inc    ecx
  4095f1:	jg     0x4095dc
  4095f3:	xchg   edx,eax
  4095f4:	ins    DWORD PTR es:[edi],dx
  4095f5:	retf   
  4095f6:	dec    esp
  4095f7:	mov    ebp,0xf760f3ce
  4095fc:	mov    WORD PTR [ecx+0x7709fb2],gs
  409602:	retf   
  409603:	jmp    0xa0408528
  409608:	mov    eax,0x48a9c575
  40960d:	add    al,bh
  40960f:	mul    DWORD PTR [ebx]
  409611:	xchg   esp,eax
  409612:	dec    eax
  409613:	cwde   
  409614:	ins    BYTE PTR es:[edi],dx
  409615:	mov    bh,0xd9
  409617:	retf   
  409618:	cli    
  409619:	or     ebp,eax
  40961b:	mov    ecx,0x3eb638c7
  409620:	add    bl,BYTE PTR [edi-0x74]
  409623:	or     BYTE PTR [ecx+esi*4-0x19821d93],0x2a
  40962b:	(bad)  
  40962c:	aam    0x9c
  40962e:	push   0x2f
  409630:	inc    ebx
  409631:	leave  
  409632:	inc    esp
  409633:	jl     0x4095db
  409635:	bound  ebp,QWORD PTR [eax+ebp*2]
  409638:	fisubr DWORD PTR [ecx]
  40963a:	xchg   ecx,eax
  40963b:	addr16 loopne 0x4095eb
  40963e:	mov    DWORD PTR [edx],ebp
  409640:	cs (bad) 
  409642:	faddp  st(3),st
  409644:	push   ss
  409645:	push   edi
  409646:	xchg   ebx,esp
  409648:	push   es
  409649:	sbb    DWORD PTR [eax+0x37c1cdad],edi
  40964f:	or     dh,BYTE PTR [edx-0x57]
  409652:	pop    ebx
  409653:	adc    ecx,DWORD PTR [edi]
  409655:	fnstcw WORD PTR [edx+0x4e9f7dce]
  40965b:	xor    BYTE PTR [esi-0x74ec8bbb],cl
  409661:	ds mov edx,0x209639d9
  409667:	in     al,0x19
  409669:	call   0x9d4e2957
  40966e:	in     eax,0x6f
  409670:	jmp    0x4096a2
  409672:	or     edx,eax
  409674:	pop    ecx
  409675:	sub    al,0x46
  409677:	xchg   edx,eax
  409678:	cmp    DWORD PTR [ebx+0x6d],edx
  40967b:	je     0x4096cf
  40967d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40967e:	sub    bh,BYTE PTR [ebx+ecx*4+0x1e]
  409682:	sbb    eax,0x649af12f
  409687:	mov    ebp,0x8bdbb6e9
  40968c:	xchg   esp,eax
  40968d:	lods   eax,DWORD PTR ds:[esi]
  40968e:	fcom   st(6)
  409690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409691:	enter  0x6016,0xce
  409695:	xor    eax,0x18c7fa9f
  40969a:	scas   eax,DWORD PTR es:[edi]
  40969b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40969c:	pop    eax
  40969d:	or     DWORD PTR [edi-0x55432cfc],esp
  4096a3:	cmp    eax,0x1a468a03
  4096a8:	or     BYTE PTR ds:0x8a207287,ah
  4096ae:	arpl   WORD PTR [ecx-0x28be04b5],si
  4096b4:	jle    0x4096e9
  4096b6:	xchg   esp,eax
  4096b7:	jecxz  0x4096ed
  4096b9:	data16 sub BYTE PTR [esi],ah
  4096bc:	popa   
  4096bd:	push   cs
  4096be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096bf:	sub    al,0x1e
  4096c1:	sbb    WORD PTR [edi],si
  4096c4:	je     0x40964c
  4096c6:	(bad)  
  4096c7:	push   edx
  4096c8:	into   
  4096c9:	xor    edi,DWORD PTR [edx]
  4096cb:	and    dh,dl
  4096cd:	stc    
  4096ce:	dec    esp
  4096cf:	mov    ds:0x2c1f3469,eax
  4096d4:	sub    al,BYTE PTR [ebx+0x5c55b0b]
  4096da:	sti    
  4096db:	pop    edx
  4096dc:	mov    al,ds:0x90ab8938
  4096e1:	xor    ch,dl
  4096e3:	mov    edi,0x3282e4fa
  4096e8:	stos   DWORD PTR es:[edi],eax
  4096e9:	mov    cl,0x40
  4096eb:	mov    esi,0x4c58be51
  4096f0:	test   eax,0xd5e441b6
  4096f5:	in     al,dx
  4096f6:	(bad)  
  4096f7:	les    esp,FWORD PTR [edx+0x75b9ed06]
  4096fd:	dec    ecx
  4096fe:	xor    al,0xa2
  409700:	sbb    BYTE PTR [ecx],0x29
  409703:	xor    al,0xcf
  409706:	xsha256 (bad)
  409707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409708:	nop
  409709:	jb     0x409730
  40970b:	popa   
  40970c:	aas    
  40970d:	push   eax
  40970e:	xchg   ecx,eax
  40970f:	cmc    
  409710:	retf   0x948c
  409713:	dec    eax
  409714:	and    al,0x5
  409716:	xchg   edi,eax
  409717:	fs pop esi
  409719:	push   0xf7a85602
  40971e:	fdivr  DWORD PTR [edx]
  409720:	mov    bl,0x37
  409722:	push   ebx
  409723:	xor    eax,0xfe17ba11
  409728:	sti    
  409729:	inc    edx
  40972a:	mov    ebp,0x7c304a84
  40972f:	mov    bh,0xeb
  409731:	mov    edx,0xddfa28da
  409736:	pop    esi
  409737:	jle    0x4097b8
  409739:	jb     0x409796
  40973b:	test   edi,ebx
  40973d:	push   cs
  40973e:	fsubr  QWORD PTR [ecx-0x45ec2305]
  409744:	dec    ecx
  409745:	test   al,0xdc
  409747:	adc    DWORD PTR [edx],0xffffffe7
  40974a:	stos   DWORD PTR es:[edi],eax
  40974b:	xor    al,0x57
  40974d:	call   0xf2839799
  409752:	sti    
  409753:	sti    
  409754:	(bad)  
  409755:	scas   eax,DWORD PTR es:[edi]
  409756:	mov    eax,ds:0x64a3367b
  40975b:	adc    DWORD PTR [edi+0x2e2e1221],0x76f18dc
  409765:	push   es
  409766:	mov    al,ds:0x7a6b8729
  40976c:	into   
  40976d:	hlt    
  40976e:	out    0xa2,eax
  409770:	mov    eax,0x88a04545
  409775:	pushf  
  409776:	(bad)  
  409777:	in     eax,dx
  409778:	xchg   edi,eax
  409779:	dec    edi
  40977a:	cmp    bl,dl
  40977c:	jl     0x409785
  40977e:	mov    ebx,edi
  409780:	mov    cl,0x80
  409782:	push   0xeb597cdd
  409787:	ret    0x8e4a
  40978a:	out    dx,eax
  40978b:	xchg   BYTE PTR [edi+0x7865930a],dl
  409791:	jnp    0x4097ed
  409793:	add    dh,BYTE PTR [ebx]
  409795:	mov    DWORD PTR [esi+0x6b1f4ec0],ebx
  40979b:	je     0x409761
  40979d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40979f:	int3   
  4097a0:	add    edx,DWORD PTR gs:[ecx+0x7aab91e4]
  4097a7:	pop    ebx
  4097a8:	adc    eax,0x91cfb1f1
  4097ad:	ds dec esi
  4097af:	mov    eax,0x6b9d4662
  4097b4:	lock jl 0x409744
  4097b7:	add    cl,BYTE PTR [ebp+0x5d861cd2]
  4097bd:	mov    eax,ds:0x88a6c6d6
  4097c2:	enter  0xbb9e,0x33
  4097c6:	mov    ebx,0xd31809ed
  4097cb:	retf   
  4097cc:	stos   BYTE PTR es:[edi],al
  4097cd:	add    ebp,eax
  4097cf:	fiadd  DWORD PTR [ebx+0x3e16414a]
  4097d5:	outs   dx,DWORD PTR ds:[esi]
  4097d6:	add    DWORD PTR [ebp-0x73d93906],0xd542334e
  4097e0:	pop    es
  4097e1:	pop    ebx
  4097e2:	aaa    
  4097e3:	addr16 jo 0x409779
  4097e6:	(bad)  
  4097e8:	in     al,dx
  4097e9:	jo     0x409817
  4097eb:	out    dx,eax
  4097ec:	and    ch,BYTE PTR [esi+ebx*8-0x6f2063c0]
  4097f3:	inc    esi
  4097f4:	das    
  4097f5:	inc    ecx
  4097f6:	xor    eax,0x42b8de3c
  4097fb:	lods   eax,DWORD PTR ds:[esi]
  4097fc:	dec    esi
  4097fd:	rcl    bh,1
  4097ff:	pop    ecx
  409800:	push   cs
  409801:	lock aaa 
  409803:	inc    ebx
  409804:	mov    dh,0x2b
  409806:	psubw  mm4,QWORD PTR [esi]
  409809:	xchg   edx,eax
  40980a:	test   BYTE PTR [eax+eiz*2-0x3b],dh
  40980e:	mov    ecx,0x7e87e973
  409813:	call   0x58ddee0f
  409818:	mov    edx,DWORD PTR [esi+0x6c340406]
  40981e:	std    
  40981f:	(bad)  
  409820:	mov    WORD PTR [ebx+0x46a3b4a7],?
  409826:	pop    esi
  409827:	xor    BYTE PTR [edi-0x4f7c014e],dl
  40982d:	xlat   BYTE PTR ds:[ebx]
  40982e:	sbb    BYTE PTR [eax+0x79345db8],0x78
  409835:	je     0x409847
  409837:	jmp    0x40987a
  409839:	test   BYTE PTR [eax-0x7bd0d787],dl
  40983f:	test   eax,0xfce5d7d8
  409844:	push   ds
  409845:	inc    ebp
  409846:	sub    DWORD PTR [esi-0x2cb32cc3],esp
  40984c:	and    ah,BYTE PTR [ecx-0x201a073f]
  409852:	xchg   ecx,eax
  409853:	arpl   WORD PTR [ebp+0x72],di
  409856:	jge    0x4098d7
  409858:	push   cs
  409859:	mov    edi,0xe5df778c
  40985e:	cwde   
  40985f:	cmp    dl,0xcb
  409862:	jo     0x4098c3
  409864:	inc    eax
  409865:	scas   eax,DWORD PTR es:[edi]
  409866:	daa    
  409867:	nop
  409868:	dec    ebx
  409869:	fimul  DWORD PTR ds:0x1e0a84b
  40986f:	mov    ch,0xfe
  409871:	mov    ch,0xbc
  409873:	fbld   TBYTE PTR [esi+0x12]
  409876:	mov    BYTE PTR [edx+0x65e93968],bl
  40987c:	retf   
  40987d:	shr    DWORD PTR [ebx],cl
  40987f:	out    dx,eax
  409880:	dec    ebp
  409881:	mov    ch,0x81
  409883:	loopne 0x4098a0
  409885:	push   ebx
  409886:	cmp    ah,BYTE PTR [ebp+0x6c]
  409889:	outs   dx,BYTE PTR ds:[esi]
  40988a:	nop
  40988b:	and    eax,0xfad71439
  409890:	pop    esp
  409891:	pop    ds
  409892:	adc    al,0x5e
  409894:	lods   eax,DWORD PTR ds:[esi]
  409895:	xchg   DWORD PTR [edx],esi
  409897:	xor    al,0xb7
  409899:	mov    WORD PTR [ebx+0x3e],fs
  40989c:	out    0xa4,eax
  40989e:	pop    esi
  40989f:	mov    gs,ebp
  4098a1:	jge    0x4098ec
  4098a3:	aam    0xbe
  4098a5:	sahf   
  4098a6:	dec    ebp
  4098a7:	aas    
  4098a8:	imul   esp,DWORD PTR [eax+esi*1+0x48],0x2e
  4098ad:	clc    
  4098ae:	or     bh,0xa2
  4098b1:	test   bl,0x44
  4098b4:	shr    BYTE PTR [ebx],1
  4098b6:	stc    
  4098b7:	imul   BYTE PTR ds:0x8e96df6b
  4098bd:	or     al,0xe6
  4098bf:	test   al,0xc
  4098c1:	jp     0x40988f
  4098c3:	(bad)
  4098c7:	sub    esp,DWORD PTR [ecx-0x12]
  4098ca:	call   0xde67:0x6fdda317
  4098d1:	pushf  
  4098d2:	aas    
  4098d3:	div    DWORD PTR [ebp+ebx*2+0x1fbf81f7]
  4098da:	push   ebx
  4098db:	mov    esi,0xbbc857f2
  4098e0:	nop
  4098e1:	sahf   
  4098e2:	or     al,0x88
  4098e4:	shl    ch,0x33
  4098e7:	and    DWORD PTR [ebp+0x42ad53c6],eax
  4098ed:	add    BYTE PTR [ecx-0x12ea3da5],0xed
  4098f4:	inc    ebx
  4098f5:	or     DWORD PTR ds:0xaba47f08,edx
  4098fb:	lds    ebp,FWORD PTR [edi+0x26f612f5]
  409901:	mov    al,ds:0x8ec4f63b
  409906:	pop    ebx
  409907:	inc    edx
  409908:	repz ret 
  40990a:	mov    ebp,0xe006382c
  40990f:	out    dx,eax
  409910:	dec    edx
  409911:	xchg   ecx,eax
  409912:	cmp    al,0xef
  409914:	pop    eax
  409915:	sub    DWORD PTR [ecx],ebp
  409917:	push   eax
  409918:	cmp    al,0x8
  40991a:	iret   
  40991b:	sbb    ebx,DWORD PTR [ecx-0x31]
  40991e:	shl    BYTE PTR [esi+edi*4],cl
  409921:	xchg   esp,eax
  409922:	cs xchg ebp,eax
  409924:	jbe    0x409958
  409926:	mov    ds:0x59202f87,al
  40992b:	jnp    0x4098e9
  40992d:	sbb    DWORD PTR [esi],0x58
  409930:	cmp    al,0xe7
  409932:	stos   BYTE PTR es:[edi],al
  409933:	mov    DWORD PTR [edi+0x962df86],esp
  409939:	(bad)  
  40993a:	sbb    DWORD PTR [edx-0x57936edb],edx
  409940:	mov    ecx,0x8f304680
  409945:	cs ret 
  409947:	ret    
  409948:	and    dl,cl
  40994a:	sub    esi,DWORD PTR [eax+0x1a6a212c]
  409950:	jp     0x409989
  409952:	in     eax,0x50
  409954:	xor    eax,0xb5cfebc1
  409959:	add    DWORD PTR [ecx+0x48d6a3ad],esi
  40995f:	push   ebx
  409960:	xor    DWORD PTR [edx-0x18],esi
  409963:	shr    BYTE PTR ds:0xdc2e648a,1
  409969:	pop    ds
  40996a:	mov    al,0xa7
  40996c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40996d:	fld    st(2)
  40996f:	sahf   
  409970:	loopne 0x409992
  409972:	cmp    bh,bh
  409974:	push   ebx
  409975:	xor    DWORD PTR [edx+edi*1-0x40],eax
  409979:	add    dl,BYTE PTR [ebx]
  40997b:	iret   
  40997c:	test   DWORD PTR [ebx+0x63],eax
  40997f:	sbb    BYTE PTR ds:0x63640f4c,cl
  409985:	and    dl,BYTE PTR [ebx+0x2705d438]
  40998b:	bound  esp,QWORD PTR [edi+0x17]
  40998e:	dec    ebx
  40998f:	fimul  WORD PTR [eax+ecx*1+0x48609740]
  409996:	clc    
  409997:	sahf   
  409998:	sbb    DWORD PTR [eax+0x23a9fc64],ecx
  40999e:	adc    esi,DWORD PTR [edi-0x6b08ff43]
  4099a4:	adc    dl,BYTE PTR [eax]
  4099a6:	loop   0x4099e4
  4099a8:	retf   0x8bda
  4099ab:	shr    DWORD PTR [ebx+0x4266351f],cl
  4099b1:	call   DWORD PTR [esi]
  4099b3:	push   ds
  4099b4:	ja     0x4099dc
  4099b6:	(bad)  
  4099b7:	jmp    0xb3fa:0x8545b766
  4099be:	aaa    
  4099bf:	inc    ebx
  4099c0:	pop    esi
  4099c1:	fmul   st,st(4)
  4099c3:	sbb    DWORD PTR [ebp-0x46],ebp
  4099c6:	shl    BYTE PTR [esi-0x63],1
  4099c9:	xor    DWORD PTR [eax-0x51],0x4e
  4099cd:	sbb    DWORD PTR [ebp-0x793933dc],edi
  4099d3:	jle    0x4099d2
  4099d5:	lahf   
  4099d6:	mov    dl,0x9f
  4099d8:	lds    esp,FWORD PTR [edx+edi*4+0x19ef7370]
  4099df:	sbb    BYTE PTR [ebx+ebp*8+0x67],ah
  4099e3:	and    ebp,DWORD PTR [eax+0x225f586d]
  4099e9:	inc    edi
  4099ea:	psubusw mm6,QWORD PTR [ecx-0x6d]
  4099ee:	add    edi,ebp
  4099f0:	pop    edx
  4099f1:	pop    esi
  4099f2:	and    eax,0x2cffcec
  4099f7:	or     bh,ah
  4099f9:	adc    dl,BYTE PTR [esi]
  4099fb:	sub    BYTE PTR [ecx+0x9f84da9],0x5
  409a02:	sbb    BYTE PTR [edi-0x3ff1e035],dl
  409a08:	adc    BYTE PTR [ebp-0x294e57f0],al
  409a0e:	lods   al,BYTE PTR ds:[esi]
  409a0f:	mov    ah,0xf1
  409a11:	fstp   st(3)
  409a13:	or     eax,0x461ac87c
  409a18:	in     eax,0x2c
  409a1a:	loopne 0x4099f3
  409a1c:	xchg   ecx,eax
  409a1d:	add    ah,al
  409a1f:	mov    edi,0x1db25d5f
  409a24:	(bad)  
  409a25:	xchg   edx,eax
  409a26:	mov    al,ds:0xd6b330fc
  409a2b:	cmp    bh,BYTE PTR [esi]
  409a2d:	sub    eax,0xafffbafa
  409a32:	xor    ecx,DWORD PTR [edi-0x52]
  409a35:	adc    al,0xd9
  409a37:	xchg   ebx,eax
  409a38:	cmp    al,0x7b
  409a3a:	dec    DWORD PTR [eax+0x77]
  409a3d:	add    eax,0xfb20f5b5
  409a42:	imul   BYTE PTR [eax+0x286e8329]
  409a48:	mov    al,ds:0xf4b21456
  409a4d:	pushf  
  409a4e:	push   0x63
  409a50:	pushf  
  409a51:	out    dx,al
  409a52:	data16 sar cl,1
  409a55:	ror    BYTE PTR [edi],0xaa
  409a58:	enter  0x459f,0xde
  409a5c:	sub    esp,DWORD PTR [edx]
  409a5e:	leave  
  409a5f:	pop    ebx
  409a60:	pop    esp
  409a61:	mov    ebp,0x1f3fb476
  409a66:	push   cs
  409a67:	test   al,0xc
  409a69:	mov    ds:0x658cbc11,eax
  409a6e:	cs inc edi
  409a70:	outs   dx,BYTE PTR ds:[esi]
  409a71:	test   al,0xfd
  409a73:	adc    ah,cl
  409a75:	fs out 0x4f,eax
  409a78:	loopne 0x409ac4
  409a7a:	daa    
  409a7b:	dec    ebx
  409a7c:	sar    DWORD PTR [edx],1
  409a7e:	mov    edi,0x65d1bc52
  409a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a84:	xor    BYTE PTR [edi],0xfb
  409a87:	jns    0x409a0d
  409a89:	and    al,BYTE PTR [ebx]
  409a8b:	cmc    
  409a8c:	mov    dl,BYTE PTR [esi-0x55]
  409a8f:	call   0x2d91578b
  409a94:	adc    cl,BYTE PTR [edx+0x24]
  409a97:	sub    BYTE PTR [esi+0x6e],0x16
  409a9b:	cmp    dl,BYTE PTR [edi]
  409a9d:	adc    eax,DWORD PTR [ecx-0x72]
  409aa0:	mov    al,ds:0x63185e76
  409aa5:	push   0x635f89f7
  409aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aab:	push   esi
  409aac:	dec    ebp
  409aad:	ss jcxz 0x409a79
  409ab1:	sub    al,0x84
  409ab3:	xor    dl,BYTE PTR [edx+eiz*2]
  409ab6:	xor    DWORD PTR [ebx],0x7a
  409ab9:	mov    esp,0x5b92d14b
  409abe:	jmp    0x409a92
  409ac0:	in     al,dx
  409ac1:	shr    BYTE PTR [edi-0x19c6ab01],1
  409ac7:	sti    
  409ac8:	mov    ds:0x938874b4,al
  409acd:	and    DWORD PTR [edi+0x47],edi
  409ad0:	sub    al,BYTE PTR [esi+eiz*4]
  409ad3:	cmc    
  409ad4:	aam    0xf4
  409ad6:	and    edx,DWORD PTR [ebx-0x6264c8bc]
  409adc:	jae    0x409ad6
  409ade:	push   eax
  409adf:	jae    0x409b21
  409ae1:	pop    esi
  409ae2:	jecxz  0x409ad3
  409ae4:	sub    eax,0xa01b99e8
  409ae9:	adc    al,0x4
  409aeb:	mov    dh,BYTE PTR [esi+0x62ab0686]
  409af1:	mov    eax,0x948793b1
  409af6:	xor    DWORD PTR [ebx],0xffffffc7
  409af9:	adc    eax,0xf6a8e380
  409aff:	jecxz  0x409b24
  409b01:	icebp  
  409b02:	cmp    BYTE PTR [edx+0x45],cl
  409b05:	mov    eax,0xa3bb827
  409b0a:	adc    eax,0x6e071d94
  409b0f:	shl    dh,cl
  409b11:	xchg   ebx,eax
  409b12:	or     DWORD PTR [eax-0xa],edi
  409b15:	std    
  409b16:	outs   dx,BYTE PTR ds:[esi]
  409b17:	mov    eax,0x8c9bfd7b
  409b1c:	inc    eax
  409b1d:	xchg   DWORD PTR [ebx+ebx*8+0x4a0c16cb],esp
  409b24:	push   edx
  409b25:	adc    al,0x60
  409b27:	retf   0xffdc
  409b2a:	pop    ebp
  409b2b:	mov    esi,DWORD PTR ds:0x428be717
  409b31:	add    al,BYTE PTR [edx+0x6c3810ad]
  409b37:	mov    ch,0x2f
  409b39:	arpl   WORD PTR [eax+0x498e49a6],cx
  409b3f:	in     eax,dx
  409b40:	mov    ah,0xb1
  409b42:	hlt    
  409b43:	div    DWORD PTR [ecx+0x3c42299d]
  409b49:	icebp  
  409b4a:	mov    dh,0xaa
  409b4d:	int3   
  409b4e:	mov    cl,0xc4
  409b50:	xchg   esi,eax
  409b51:	xchg   ebx,eax
  409b52:	jmp    0x49e623bd
  409b57:	sahf   
  409b58:	sbb    bh,cl
  409b5a:	sar    BYTE PTR [bp+di+0x39dc],1
  409b5f:	imul   esp,DWORD PTR [ecx-0x32aca33c],0x35a15b4
  409b69:	xor    eax,0xa6f028a2
  409b6e:	mov    eax,ds:0x83c5fb25
  409b73:	sbb    al,0x52
  409b75:	ret    
  409b76:	les    ebp,FWORD PTR [ecx]
  409b78:	mov    bh,0xb1
  409b7a:	adc    DWORD PTR [ecx+0x1704b5b8],edi
  409b80:	push   edx
  409b81:	mov    ebp,0xc40e4c4
  409b86:	ds fyl2x 
  409b89:	lahf   
  409b8a:	ffreep st(6)
  409b8c:	xor    dl,al
  409b8e:	ss popa 
  409b90:	or     dh,ah
  409b92:	add    DWORD PTR [edx+0x230578b],ecx
  409b98:	sbb    al,0x85
  409b9a:	sahf   
  409b9b:	push   ss
  409b9c:	stc    
  409b9d:	fistp  QWORD PTR [eax+0x5e]
  409ba0:	js     0x409b99
  409ba2:	out    dx,al
  409ba3:	mov    ds:0x6675a4dd,eax
  409ba8:	sbb    al,0xc4
  409baa:	push   ss
  409bab:	sti    
  409bac:	cli    
  409bad:	jbe    0x409c1d
  409baf:	cmp    ecx,ebp
  409bb1:	rol    DWORD PTR [eax],cl
  409bb3:	jl     0x409b6a
  409bb5:	stos   DWORD PTR es:[edi],eax
  409bb6:	jle    0x409c21
  409bb8:	push   DWORD PTR [ecx-0x92ce1cb]
  409bbe:	enter  0x707b,0xda
  409bc2:	sbb    DWORD PTR [esi-0x38],0xffffffae
  409bc6:	test   eax,0x9d14a1b2
  409bcb:	mov    ch,0x5d
  409bcd:	movzx  ebp,WORD PTR [eax]
  409bd0:	jmp    0xff40:0x52a95381
  409bd7:	mov    edx,0xebc422e9
  409bdc:	pop    eax
  409bdd:	(bad)  
  409bdf:	sub    al,0x93
  409be1:	je     0x409bfb
  409be3:	push   edi
  409be4:	xchg   edx,eax
  409be5:	push   ds
  409be6:	or     BYTE PTR [eax-0x6ac65f64],0x38
  409bed:	sbb    bl,BYTE PTR [ecx+0x69]
  409bf0:	ss bswap eax
  409bf3:	sub    eax,0x69c3eb86
  409bf8:	inc    edi
  409bf9:	lock cmp eax,0xb8896ee8
  409bff:	mov    ecx,0xd41d0869
  409c04:	lods   eax,DWORD PTR ds:[esi]
  409c05:	pop    edi
  409c06:	outs   dx,BYTE PTR ds:[esi]
  409c07:	repnz sbb cl,cl
  409c0a:	fsubp  st(4),st
  409c0c:	add    eax,0xbfcdbfc4
  409c11:	dec    esp
  409c12:	sub    BYTE PTR [ebp-0x6cdd4c23],cl
  409c18:	call   0xfe0f:0x6e9d8a94
  409c1f:	cmp    al,0xc7
  409c21:	shl    BYTE PTR [edx+0x47],1
  409c24:	pop    es
  409c25:	xchg   ebx,eax
  409c26:	push   ds
  409c27:	cwde   
  409c28:	jl     0x409c6c
  409c2a:	lahf   
  409c2b:	nop
  409c2c:	out    dx,eax
  409c2d:	out    0xe,eax
  409c2f:	iret   
  409c30:	xchg   ecx,eax
  409c31:	dec    ebx
  409c32:	lea    edi,[ebp+0x5ec7b615]
  409c38:	sub    dh,BYTE PTR [eax+0x79e294bb]
  409c3e:	loopne 0x409c73
  409c40:	jecxz  0x409cb0
  409c42:	ja     0x409be6
  409c44:	pusha  
  409c45:	mov    es,edi
  409c47:	test   eax,0xb1414a4f
  409c4c:	arpl   WORD PTR [ebp-0x360a83fb],si
  409c52:	xchg   edx,eax
  409c53:	xor    al,0x41
  409c55:	lahf   
  409c56:	inc    ebp
  409c57:	jl     0x409cc6
  409c59:	adc    al,0x56
  409c5b:	int    0x3b
  409c5d:	dec    esi
  409c5e:	and    DWORD PTR [edi-0x25],esp
  409c61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c62:	mov    dh,0x51
  409c64:	fwait
  409c65:	div    DWORD PTR [eax+0x5abc87c]
  409c6b:	out    dx,eax
  409c6c:	fild   DWORD PTR [ebx]
  409c6e:	push   ds
  409c6f:	test   ebx,0x31d76fcd
  409c75:	idiv   DWORD PTR [esi]
  409c77:	or     ecx,edi
  409c79:	pop    edx
  409c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c7b:	les    edi,FWORD PTR [edi-0x2f]
  409c7e:	in     eax,0x63
  409c80:	sahf   
  409c81:	outs   dx,DWORD PTR ds:[esi]
  409c82:	frstor [ebx+0x60b29163]
  409c88:	loop   0x409cec
  409c8a:	adc    cl,BYTE PTR [edx-0x69f25c94]
  409c90:	into   
  409c91:	cmp    esp,DWORD PTR [ecx+0x18686168]
  409c97:	rcr    ebp,0x47
  409c9a:	inc    edi
  409c9b:	popf   
  409c9c:	jns    0x409c77
  409c9e:	sahf   
  409c9f:	sti    
  409ca0:	or     eax,0xf9faabae
  409ca5:	cmp    eax,0x8db132dc
  409caa:	dec    ebx
  409cab:	loopne 0x409c6d
  409cad:	test   al,0x83
  409caf:	(bad)  
  409cb0:	cmp    dl,bl
  409cb2:	sbb    al,0xe3
  409cb4:	dec    esp
  409cb5:	mov    esi,0x58d6eea7
  409cba:	cwde   
  409cbb:	dec    ecx
  409cbc:	inc    edx
  409cbd:	xor    al,0xf5
  409cbf:	outs   dx,BYTE PTR ds:[esi]
  409cc0:	test   eax,0x411038da
  409cc5:	ja     0x409cbb
  409cc7:	xor    dl,cl
  409cc9:	mov    ebx,0x206aedfc
  409cce:	fcomp  DWORD PTR [eax]
  409cd0:	or     ebp,DWORD PTR [ebx+edi*4+0x7c]
  409cd4:	add    ebp,esp
  409cd6:	mov    dh,0x5c
  409cd8:	sbb    esp,DWORD PTR [ebx+0x21]
  409cdb:	and    ebp,DWORD PTR ds:[edx+esi*8]
  409cdf:	jle    0x409c82
  409ce1:	mov    ds,esp
  409ce3:	icebp  
  409ce4:	mov    ds:0x2361939f,al
  409ce9:	jo     0x409d41
  409ceb:	push   edi
  409cec:	xor    dl,BYTE PTR [ebp+ebp*2-0x2c]
  409cf0:	pop    ebx
  409cf1:	add    eax,ebp
  409cf3:	js     0x409c7f
  409cf5:	adc    esi,DWORD PTR [edx+0x14b71f4c]
  409cfb:	mov    ds:0x53f5124b,eax
  409d00:	xchg   ebp,eax
  409d01:	mov    al,0x4e
  409d03:	stc    
  409d04:	cwde   
  409d05:	xor    eax,0xf8991e6
  409d0a:	pop    esi
  409d0b:	add    BYTE PTR [ecx],bh
  409d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d0e:	add    ebp,ebx
  409d10:	lock jmp 0x18a1f92e
  409d16:	js     0x409d1b
  409d18:	ds addr16 retf 0x772f
  409d1d:	xchg   ecx,eax
  409d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d1f:	cmovle ebx,DWORD PTR [esi-0x1b5dbd0c]
  409d26:	pop    esi
  409d27:	imul   esp,DWORD PTR [eax],0x7d
  409d2a:	shr    edi,cl
  409d2c:	std    
  409d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d2e:	dec    ecx
  409d2f:	xor    esp,DWORD PTR [ecx+0x24]
  409d32:	dec    edx
  409d33:	xcrypt-cbc (bad)
  409d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d35:	pop    ss
  409d36:	das    
  409d37:	cmp    dl,BYTE PTR [edx+0x57cb8b3f]
  409d3d:	les    eax,FWORD PTR [esi-0x73a1282e]
  409d43:	pushf  
  409d44:	push   ecx
  409d45:	lock push esi
  409d47:	push   ds
  409d48:	lahf   
  409d49:	in     eax,dx
  409d4a:	retf   0xa9e5
  409d4d:	pop    ss
  409d4e:	imul   esp,DWORD PTR [eax-0x53f0fec2],0xc4bc62dc
  409d58:	stos   DWORD PTR es:[edi],eax
  409d59:	sbb    ah,BYTE PTR [edx]
  409d5b:	mov    esp,0xcad8452b
  409d60:	mov    eax,ds:0x2a6946fb
  409d65:	cmp    esi,DWORD PTR [eax+0x14]
  409d68:	mov    al,ds:0x2f969dd
  409d6d:	arpl   WORD PTR [ebx-0x7aca2b4b],cx
  409d73:	enter  0xad42,0x8b
  409d77:	popa   
  409d78:	inc    esi
  409d79:	cwde   
  409d7a:	inc    ecx
  409d7b:	cmp    cl,BYTE PTR [eax]
  409d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d7e:	lods   al,BYTE PTR ds:[esi]
  409d7f:	scas   al,BYTE PTR es:[edi]
  409d80:	jg     0x409db8
  409d82:	add    DWORD PTR [eax+0xc],0xbed5d18
  409d89:	rcl    ecx,cl
  409d8b:	mov    edx,0xbbef75fa
  409d90:	pop    esi
  409d91:	gs sub esi,edx
  409d94:	pushf  
  409d95:	mov    al,ds:0x8792ee30
  409d9a:	icebp  
  409d9b:	(bad)  
  409d9c:	xlat   BYTE PTR ds:[ebx]
  409d9d:	fbld   TBYTE PTR [ebp+0x74]
  409da0:	push   0xffffffc7
  409da2:	jmp    0x123d:0x981e0e4b
  409da9:	out    dx,al
  409daa:	inc    ebx
  409dab:	xchg   esp,eax
  409dac:	int    0x77
  409dae:	(bad)  [ebx]
  409db0:	pop    ecx
  409db1:	sti    
  409db2:	jmp    0xc4a40d2c
  409db7:	ss push es
  409db9:	mov    ah,0x2c
  409dbb:	add    eax,DWORD PTR [ebx]
  409dbd:	mov    edx,0x1ce43dbb
  409dc2:	out    dx,eax
  409dc3:	pop    esi
  409dc4:	push   esp
  409dc5:	mov    esp,0x326c404d
  409dca:	fs leave 
  409dcc:	sub    DWORD PTR [edx*4-0x1ff16049],ebx
  409dd3:	push   cs
  409dd4:	bound  ebp,QWORD PTR [edx-0x754594c8]
  409dda:	sti    
  409ddb:	sub    BYTE PTR [edx],0x7c
  409dde:	jne    0x409e27
  409de0:	out    0x46,al
  409de2:	mov    cl,0x1
  409de4:	xlat   BYTE PTR ds:[ebx]
  409de5:	ss xchg edi,eax
  409de7:	fs ins BYTE PTR es:[edi],dx
  409de9:	div    DWORD PTR [edi+0x75]
  409dec:	in     eax,0x31
  409dee:	push   0x5b
  409df0:	popf   
  409df1:	or     edx,DWORD PTR [esi+0x51]
  409df4:	or     eax,0x70323443
  409df9:	outs   dx,BYTE PTR ds:[esi]
  409dfa:	(bad)  
  409dfb:	mov    ch,0xce
  409dfd:	push   esi
  409dfe:	aam    0x65
  409e00:	sub    al,0x12
  409e02:	sub    DWORD PTR [ebp-0x33],edx
  409e05:	loopne 0x409e6e
  409e07:	div    DWORD PTR [edx+eiz*8]
  409e0a:	add    ch,BYTE PTR [ecx-0x4078155e]
  409e10:	adc    al,0xdb
  409e12:	popa   
  409e13:	pop    ebx
  409e14:	inc    eax
  409e15:	cmp    DWORD PTR [ebp-0x18594ddc],eax
  409e1b:	sbb    DWORD PTR [ecx+edi*1+0x4b],ebp
  409e1f:	fst    DWORD PTR [ebp-0x6d7aeff8]
  409e25:	xchg   BYTE PTR [ecx],bh
  409e27:	jl     0x409dcd
  409e29:	adc    ecx,DWORD PTR [ebx-0x10]
  409e2c:	clc    
  409e2d:	lods   al,BYTE PTR ds:[esi]
  409e2e:	test   DWORD PTR [esi+0x9],ebx
  409e31:	lods   al,BYTE PTR ds:[esi]
  409e32:	es stos BYTE PTR es:[edi],al
  409e34:	int    0x20
  409e36:	adc    DWORD PTR [eax],ecx
  409e38:	(bad)  [edx-0x78]
  409e3b:	jns    0x409e11
  409e3d:	rcr    esi,1
  409e3f:	(bad)  
  409e40:	or     DWORD PTR [esi],ebx
  409e42:	jne    0x409dfe
  409e44:	rcr    DWORD PTR [esp+edi*4-0x2f],1
  409e48:	and    al,0xa1
  409e4a:	push   ebp
  409e4b:	sbb    BYTE PTR fs:0xb47818e,dh
  409e52:	jecxz  0x409e9a
  409e54:	(bad)  
  409e55:	adc    eax,0x5cb0f58f
  409e5a:	cdq    
  409e5b:	push   ecx
  409e5c:	push   edx
  409e5d:	mov    eax,ds:0x7d4a7f56
  409e62:	mov    fs,WORD PTR [esi-0xd]
  409e65:	mov    eax,ds:0x17c08a83
  409e6a:	jg     0x409ee4
  409e6c:	shl    BYTE PTR [eax+0x5e],cl
  409e6f:	xor    al,0xf
  409e71:	scas   eax,DWORD PTR es:[edi]
  409e72:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx+0x2057c083],bl
  40a717:	iret   
  40a718:	jmp    0x40a75d
  40a71a:	ins    DWORD PTR es:[edi],dx
  40a71b:	add    al,0x7a
  40a71d:	jp     0x40a705
  40a71f:	pop    edi
  40a720:	jp     0x40a79c
  40a722:	add    BYTE PTR [edx],dh
  40a724:	push   0x2d25a47a
  40a729:	out    dx,eax
  40a72a:	push   edx
  40a72b:	in     eax,dx
  40a72c:	mov    eax,0x7d10f22
  40a731:	out    dx,al
  40a732:	jo     0x40a797
  40a734:	or     ecx,ecx
  40a736:	cmp    BYTE PTR [ebp+0x25e51a0],al
  40a73c:	(bad)  
  40a73d:	and    BYTE PTR [ebx+0x3b],bl
  40a740:	push   esi
  40a741:	sahf   
  40a742:	or     eax,0xde91119e
  40a747:	aaa    
  40a748:	sub    edx,DWORD PTR [esi]
  40a74a:	mov    eax,ds:0x89c28e29
  40a74f:	ror    DWORD PTR [edx-0x79],cl
  40a752:	sbb    DWORD PTR [esi],ebx
  40a754:	or     esp,DWORD PTR [ecx+0x4b8f5ce5]
  40a75a:	mov    esi,0xc0c2c714
  40a75f:	fwait
  40a760:	jge    0x40a6ff
  40a762:	push   esi
  40a763:	jmp    0x29f89aa8
  40a768:	mov    dh,0x51
  40a76a:	mov    edx,0x9fb09de7
  40a76f:	push   eax
  40a770:	(bad)  
  40a771:	fld    DWORD PTR [eax]
  40a773:	xchg   DWORD PTR [edi-0x7b2e982b],ebp
  40a779:	out    dx,al
  40a77a:	mov    bh,0x13
  40a77c:	in     eax,0x43
  40a77e:	dec    edi
  40a77f:	sub    sp,WORD PTR [ebp+0x4c3ba493]
  40a786:	(bad)  
  40a787:	or     esp,DWORD PTR [esi-0x36]
  40a78a:	lea    esi,[esi]
  40a78c:	xchg   edi,eax
  40a78d:	add    edi,DWORD PTR [ecx+0x30]
  40a790:	(bad)  
  40a791:	jne    0x40a786
  40a793:	or     ebp,ecx
  40a795:	ret    0x5bce
  40a798:	stos   DWORD PTR es:[edi],eax
  40a799:	mov    BYTE PTR [ecx-0x6d],ch
  40a79c:	stos   BYTE PTR es:[edi],al
  40a79d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a79e:	div    dh
  40a7a0:	sub    al,BYTE PTR [edi+0x395ccf20]
  40a7a6:	adc    BYTE PTR [esi+0x44],ah
  40a7a9:	lods   eax,DWORD PTR ds:[esi]
  40a7aa:	dec    ecx
  40a7ac:	outs   dx,DWORD PTR ds:[esi]
  40a7ad:	enter  0x7b6d,0x51
  40a7b1:	xchg   edx,eax
  40a7b2:	jno    0x40a749
  40a7b4:	loope  0x40a78d
  40a7b6:	lds    edi,FWORD PTR [ecx-0x150dc933]
  40a7bc:	push   ecx
  40a7bd:	jmp    0x580d9dd4
  40a7c2:	test   eax,0x782654cc
  40a7c7:	and    DWORD PTR [edi],ebx
  40a7c9:	stos   DWORD PTR es:[edi],eax
  40a7ca:	(bad)  
  40a7cb:	popf   
  40a7cc:	or     ah,dh
  40a7ce:	ja     0x40a82d
  40a7d0:	xchg   ecx,eax
  40a7d1:	fisttp DWORD PTR [esi-0x35]
  40a7d4:	sub    al,0xfe
  40a7d6:	push   ss
  40a7d7:	test   al,0x86
  40a7d9:	xlat   BYTE PTR ds:[ebx]
  40a7da:	xlat   BYTE PTR ds:[ebx]
  40a7db:	nop
  40a7dc:	mov    al,0xb2
  40a7de:	sub    eax,0x6f839718
  40a7e3:	jp     0x40a79a
  40a7e5:	add    bh,BYTE PTR [esi]
  40a7e7:	sbb    al,0x49
  40a7e9:	aam    0x2b
  40a7eb:	jns    0x40a774
  40a7ed:	cmp    DWORD PTR [edi],ebp
  40a7ef:	push   edi
  40a7f0:	add    DWORD PTR [edx-0x7af08bac],esi
  40a7f6:	xchg   esi,eax
  40a7f7:	lds    edi,FWORD PTR [ebp+0x67f1c00]
  40a7fd:	jp     0x40a825
  40a7ff:	pop    edx
  40a800:	ins    DWORD PTR es:[edi],dx
  40a801:	mov    bh,BYTE PTR [edx]
  40a803:	or     ah,BYTE PTR ds:0x6b4cb972
  40a809:	bound  ebp,QWORD PTR [ecx+0x36]
  40a80c:	sub    BYTE PTR [ebp+0x76],ah
  40a80f:	les    edi,FWORD PTR [edi-0x2]
  40a812:	add    al,0xb6
  40a814:	aaa    
  40a815:	(bad)  
  40a816:	xchg   ecx,eax
  40a817:	call   0x4adb1e79
  40a81c:	jle    0x40a89d
  40a81e:	(bad)  
  40a81f:	mov    al,ds:0x15a7b41e
  40a824:	aad    0x7
  40a826:	imul   edx,ebx,0xedb66867
  40a82c:	dec    esp
  40a82d:	pop    esi
  40a82e:	jecxz  0x40a7f4
  40a830:	jo     0x40a892
  40a832:	imul   BYTE PTR [ebp-0x58]
  40a835:	or     ebx,DWORD PTR [edx]
  40a837:	cli    
  40a838:	adc    DWORD PTR [edi+0x51],ebp
  40a83b:	mov    edi,0xe7def684
  40a840:	(bad)  
  40a841:	fstcw  WORD PTR [edx]
  40a844:	ss or  al,bh
  40a847:	mov    ecx,0x442c6a8
  40a84c:	arpl   WORD PTR [edi+0x4d4925c6],bx
  40a852:	enter  0xbe27,0xf1
  40a856:	dec    ebx
  40a857:	and    DWORD PTR [eax-0x73f73cac],ebx
  40a85d:	xchg   ebp,eax
  40a85e:	fnstsw WORD PTR [ebp-0x1a0f3d27]
  40a864:	and    DWORD PTR ds:0x40a9066a,edx
  40a86a:	sub    DWORD PTR [eax],eax
  40a86c:	call   0x7a3e:0x7f7c5288
  40a873:	icebp  
  40a874:	mov    ds:0x31964d2f,eax
  40a879:	adc    al,bh
  40a87b:	cmp    eax,0x89d1a58a
  40a880:	push   eax
  40a881:	call   0x9266:0x551685d9
  40a888:	mov    eax,ds:0x9367a586
  40a88d:	repz into 
  40a88f:	lea    ebx,[eax+0x3313f1cf]
  40a895:	addr16 mov dh,0x2d
  40a898:	(bad)  
  40a899:	in     al,0xc3
  40a89b:	inc    edx
  40a89c:	lds    ebx,FWORD PTR [ebx-0x78d4b70a]
  40a8a2:	pop    esi
  40a8a3:	dec    ebx
  40a8a4:	mov    ds:0xa8128cd8,eax
  40a8a9:	das    
  40a8aa:	and    al,0xd9
  40a8ac:	(bad)  
  40a8ad:	lods   al,BYTE PTR ds:[esi]
  40a8ae:	adc    BYTE PTR [edi-0x2c],ch
  40a8b1:	xor    eax,0x4974ba04
  40a8b6:	daa    
  40a8b7:	sahf   
  40a8b8:	pusha  
  40a8b9:	retf   0xc933
  40a8bc:	xchg   edi,eax
  40a8bd:	add    ebx,DWORD PTR [edx-0x1602b588]
  40a8c3:	pop    esp
  40a8c4:	fs jae 0x40a885
  40a8c7:	lea    ebx,ss:[ecx]
  40a8ca:	jbe    0x40a938
  40a8cc:	ficom  DWORD PTR [eax]
  40a8ce:	js     0x40a8be
  40a8d0:	mov    ds:0xd7056749,eax
  40a8d5:	imul   edi,ebp,0x14
  40a8d8:	rcl    DWORD PTR [esi],0xc9
  40a8db:	push   edx
  40a8dc:	jmp    0xbd7fbfa8
  40a8e1:	std    
  40a8e2:	dec    ecx
  40a8e3:	sbb    cl,BYTE PTR [ebx+ebp*2+0x7d2c6ee1]
  40a8ea:	mov    bh,0xaa
  40a8ec:	mov    esi,0x530787e3
  40a8f1:	fcom   QWORD PTR [edi-0x3c681390]
  40a8f7:	stc    
  40a8f8:	dec    esi
  40a8f9:	jp     0x40a957
  40a8fb:	retf   
  40a8fc:	out    0xa4,al
  40a8fe:	pop    ss
  40a8ff:	fistp  DWORD PTR [ebp-0x26cb3e43]
  40a905:	test   BYTE PTR [eax+0x54],dl
  40a908:	push   0x9c3fc36b
  40a90d:	call   0x2460:0xb3096619
  40a914:	cdq    
  40a915:	div    DWORD PTR [esi-0x66913f93]
  40a91b:	fnstsw WORD PTR [ebx-0x9]
  40a91e:	ins    BYTE PTR es:[edi],dx
  40a91f:	lods   eax,DWORD PTR ds:[esi]
  40a920:	jecxz  0x40a924
  40a922:	push   ds
  40a923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a924:	mov    ss,WORD PTR [eax-0x73d93be8]
  40a92a:	xor    DWORD PTR [eax],0x71de73d7
  40a930:	fwait
  40a931:	test   DWORD PTR [eax+0x767624e3],0xed230b57
  40a93b:	ins    DWORD PTR es:[edi],dx
  40a93c:	cmc    
  40a93d:	or     eax,0x24f0c6bf
  40a942:	fidivr DWORD PTR [eax*2-0x3e198b06]
  40a949:	mov    eax,0xc4855d8e
  40a94e:	fsub   DWORD PTR [eax-0x3d3a440d]
  40a954:	cmp    DWORD PTR [esi+0x26],0x4c
  40a958:	jne    0x40a9d3
  40a95a:	sahf   
  40a95b:	mov    DWORD PTR [esi],edi
  40a95d:	ins    BYTE PTR es:[edi],dx
  40a95e:	jge    0x40a94b
  40a960:	and    al,BYTE PTR [edi+0x59]
  40a963:	xor    DWORD PTR es:[eax+0x7f5dfe2],eax
  40a96a:	xlat   BYTE PTR ds:[ebx]
  40a96b:	push   es
  40a96c:	dec    ebx
  40a96d:	push   esp
  40a96e:	rcr    BYTE PTR [ecx-0x1a],cl
  40a971:	jne    0x40a99b
  40a973:	mov    ss:0x6b2a374b,eax
  40a979:	mul    BYTE PTR [ebx]
  40a97b:	jp     0x40a94c
  40a97d:	jns    0x40a903
  40a97f:	test   al,0xf1
  40a981:	jle    0x40a927
  40a983:	mul    BYTE PTR [ecx-0x3b29eb13]
  40a989:	or     eax,DWORD PTR [esi]
  40a98b:	test   DWORD PTR [ecx+esi*4-0x7cd933f0],esp
  40a992:	retf   0xd529
  40a995:	je     0x40a946
  40a997:	and    ah,BYTE PTR [edi+0x5ac9cfb9]
  40a99d:	adc    ebp,eax
  40a99f:	in     eax,0x20
  40a9a1:	and    esi,ebp
  40a9a3:	push   ebp
  40a9a4:	mov    ?,WORD PTR ds:0xb42786ce
  40a9aa:	push   eax
  40a9ab:	push   ss
  40a9ac:	mov    al,0x87
  40a9ae:	dec    ebp
  40a9af:	mov    ds:0x2d378bd4,eax
  40a9b4:	cwde   
  40a9b5:	and    al,0x30
  40a9b7:	dec    esp
  40a9b8:	xchg   ecx,eax
  40a9b9:	fadd   QWORD PTR [ecx+edx*2]
  40a9bc:	push   ds
  40a9bd:	xor    al,0x6c
  40a9bf:	sbb    eax,0xf5ecc473
  40a9c4:	(bad)  
  40a9c6:	ficomp WORD PTR [edx]
  40a9c8:	mov    ebx,0x5ca25c3b
  40a9cd:	aam    0xe4
  40a9cf:	dec    ebp
  40a9d0:	scas   eax,DWORD PTR es:[edi]
  40a9d1:	and    BYTE PTR [edx+0xb],bh
  40a9d4:	and    al,0xc8
  40a9d6:	cmp    DWORD PTR [eax-0x40],ebx
  40a9d9:	fwait
  40a9da:	loopne 0x40a981
  40a9dc:	pop    eax
  40a9dd:	sbb    eax,0x233280bb
  40a9e2:	outs   dx,BYTE PTR ds:[esi]
  40a9e3:	jp     0x40aa4f
  40a9e5:	and    DWORD PTR ds:0x7ab9f39,ecx
  40a9eb:	ret    0xed8b
  40a9ee:	jmp    0x46c0:0x8c55d249
  40a9f5:	repnz cmp BYTE PTR gs:[eax+0x1d41b99d],dh
  40a9fd:	icebp  
  40a9fe:	shl    DWORD PTR [eax],cl
  40aa00:	repnz sub dl,0x3e
  40aa04:	sar    BYTE PTR [eax-0x4c147719],1
  40aa0a:	inc    esi
  40aa0b:	std    
  40aa0c:	js     0x40a995
  40aa0e:	sbb    DWORD PTR [edi-0x38],edx
  40aa11:	cs inc eax
  40aa13:	je     0x40a9bb
  40aa15:	and    BYTE PTR [eax+0x48],bl
  40aa18:	cmp    BYTE PTR [ebx+0x2c],0x5c
  40aa1c:	fimul  DWORD PTR [ebx+ebp*1+0x61]
  40aa20:	daa    
  40aa21:	and    eax,0xef6ac9a2
  40aa26:	xor    esi,DWORD PTR [ecx+0x4ca83366]
  40aa2c:	data16 data16 cli 
  40aa2f:	call   0xea7:0xfeddf8c
  40aa36:	fiadd  DWORD PTR [edx+0x75]
  40aa39:	dec    esi
  40aa3a:	or     al,0x22
  40aa3c:	retf   
  40aa3d:	dec    edi
  40aa3e:	jmp    0x272d2e98
  40aa43:	pop    ebp
  40aa44:	mov    eax,0xf01cdf3b
  40aa49:	jmp    0xc2e3:0xf494bd4b
  40aa50:	xchg   esi,eax
  40aa51:	push   esp
  40aa52:	test   BYTE PTR [ecx-0x57],dh
  40aa55:	es std 
  40aa57:	lahf   
  40aa58:	int    0x1c
  40aa5a:	inc    ecx
  40aa5b:	icebp  
  40aa5c:	or     BYTE PTR [edx-0x2c079e41],ch
  40aa62:	test   al,0x86
  40aa64:	lea    edx,[ebx-0x44]
  40aa67:	pop    ecx
  40aa68:	jo     0x40aadb
  40aa6a:	push   ss
  40aa6b:	push   ebx
  40aa6c:	dec    ebp
  40aa6d:	sbb    al,BYTE PTR [edx]
  40aa6f:	(bad)  
  40aa70:	loope  0x40aa83
  40aa72:	test   DWORD PTR [ebx-0x18418206],edi
  40aa78:	hlt    
  40aa79:	das    
  40aa7a:	bound  eax,QWORD PTR [edx-0x4b2bea47]
  40aa80:	jne    0x40aa9d
  40aa82:	dec    esp
  40aa83:	pop    ds
  40aa84:	inc    ecx
  40aa85:	mov    bh,0x2e
  40aa87:	mov    al,ds:0xfb720642
  40aa8c:	or     ebx,DWORD PTR [ebx+0x46f3729d]
  40aa92:	push   edi
  40aa93:	xchg   esp,eax
  40aa94:	daa    
  40aa95:	push   ds
  40aa96:	ficomp WORD PTR [eax+0x60f1a18b]
  40aa9c:	dec    ebp
  40aa9d:	imul   eax,DWORD PTR [edx],0xffffffb3
  40aaa0:	pushf  
  40aaa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaa2:	int3   
  40aaa3:	mov    DWORD PTR [edi+0x7ed890f],edi
  40aaa9:	dec    ecx
  40aaaa:	sbb    DWORD PTR [ebx+0x26],esp
  40aaad:	popa   
  40aaae:	lods   al,BYTE PTR ds:[esi]
  40aaaf:	jecxz  0x40aa5a
  40aab1:	scas   al,BYTE PTR es:[edi]
  40aab2:	jl     0x40ab29
  40aab4:	xor    BYTE PTR [edx-0x3c],bh
  40aab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aab8:	cmp    DWORD PTR [ebp+0x4b],0xcc7c6df5
  40aabf:	and    al,0x95
  40aac1:	repz jecxz 0x40aa8f
  40aac4:	xchg   edi,eax
  40aac5:	jne    0x40ab1b
  40aac7:	and    BYTE PTR [edx+0x1c9d01fc],cl
  40aacd:	out    dx,al
  40aace:	xchg   BYTE PTR [edi+0xb23dcf2],al
  40aad4:	out    dx,al
  40aad5:	shr    BYTE PTR [edx-0x14],0xac
  40aad9:	ret    0x499f
  40aadc:	add    ch,ch
  40aade:	out    0x7,eax
  40aae0:	inc    ecx
  40aae1:	jb     0x40ab49
  40aae3:	cmp    DWORD PTR [ebp+0x2e9ed5a1],edi
  40aae9:	lahf   
  40aaea:	repz jge 0x40aa75
  40aaed:	retf   
  40aaee:	xor    al,BYTE PTR [ecx]
  40aaf0:	fisttp QWORD PTR [esi+edi*4]
  40aaf3:	mov    ebp,0xbd3f2ca6
  40aaf8:	push   es
  40aaf9:	aam    0x49
  40aafb:	mov    cl,0xa
  40aafd:	int3   
  40aafe:	ret    
  40aaff:	repnz dec edi
  40ab01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab02:	push   cs
  40ab03:	stos   BYTE PTR es:[edi],al
  40ab04:	cmp    eax,0x93cf683b
  40ab09:	jnp    0x40aae9
  40ab0b:	pop    edi
  40ab0c:	sbb    BYTE PTR [eax],al
  40ab0e:	cmp    BYTE PTR [ecx],0xa
  40ab11:	pop    ebp
  40ab12:	mov    ecx,0xdb3b8781
  40ab17:	mov    edx,0x9d9d40fb
  40ab1c:	jecxz  0x40ab51
  40ab1e:	mov    eax,ds:0xbe895aa5
  40ab23:	cmp    al,0xc0
  40ab25:	push   0xea4270e5
  40ab2a:	jne    0x40abaa
  40ab2c:	sub    eax,0x56e35103
  40ab31:	in     eax,dx
  40ab32:	cmc    
  40ab33:	xor    ch,0xdd
  40ab36:	cmp    DWORD PTR [ebx-0xe],0x49
  40ab3a:	loopne 0x40ab60
  40ab3c:	retf   
  40ab3d:	scas   eax,DWORD PTR es:[edi]
  40ab3e:	pop    ebp
  40ab3f:	jbe    0x40ab9a
  40ab41:	jecxz  0x40ab52
  40ab43:	sub    edx,ebp
  40ab45:	mov    ah,0x85
  40ab47:	addr16 daa 
  40ab49:	xor    esi,ebp
  40ab4b:	cmp    al,0x9c
  40ab4d:	jb     0x40ab6e
  40ab4f:	test   DWORD PTR [esi],edi
  40ab51:	mov    BYTE PTR [eax],dl
  40ab53:	and    ebx,DWORD PTR [edi+edx*8-0x79d37684]
  40ab5a:	inc    edx
  40ab5b:	(bad)  
  40ab5c:	inc    ebx
  40ab5d:	push   ss
  40ab5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab5f:	sub    esp,ecx
  40ab61:	stos   BYTE PTR es:[edi],al
  40ab62:	je     0x40ab71
  40ab64:	jne    0x40aaf9
  40ab66:	mov    esp,0xddf2bab5
  40ab6b:	sub    al,0xb4
  40ab6d:	push   edx
  40ab6e:	or     bh,BYTE PTR [edi+0x29a868e3]
  40ab74:	cmp    eax,0x6737ce38
  40ab79:	cwde   
  40ab7a:	stos   BYTE PTR es:[edi],al
  40ab7b:	fnstsw WORD PTR [ecx]
  40ab7d:	pop    bp
  40ab7f:	add    al,0x9
  40ab81:	and    DWORD PTR [edx],esp
  40ab83:	dec    ebx
  40ab84:	hlt    
  40ab85:	push   0xa0d36fb1
  40ab8a:	mov    ebx,0xa85f215
  40ab8f:	xchg   esp,eax
  40ab90:	push   esi
  40ab91:	mov    ch,0xd4
  40ab93:	cmp    eax,DWORD PTR ds:0xeb789449
  40ab99:	sar    DWORD PTR ds:0x3cab8547,0xba
  40aba0:	jmp    0x40abdd
  40aba2:	and    eax,DWORD PTR [esi]
  40aba4:	in     al,0xaa
  40aba6:	xor    edi,DWORD PTR [ecx]
  40aba8:	xor    BYTE PTR [ebx-0x1eeceb24],dl
  40abae:	lods   eax,DWORD PTR ds:[esi]
  40abaf:	dec    esp
  40abb0:	jl     0x40ac27
  40abb2:	push   ebx
  40abb3:	leave  
  40abb4:	repnz mov cl,0xc0
  40abb7:	jno    0x40ab43
  40abb9:	icebp  
  40abba:	jmp    0x40ac37
  40abbc:	push   eax
  40abbd:	jmp    0xbc13dade
  40abc2:	mov    al,ds:0x714472cc
  40abc7:	pop    ecx
  40abc8:	cmp    BYTE PTR [edi+0x7bdebc1c],ch
  40abce:	aam    0xde
  40abd0:	test   eax,0x935a2c64
  40abd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abd6:	aas    
  40abd7:	aad    0xec
  40abd9:	mov    edi,0xbec3b993
  40abde:	sub    eax,0xfbb2c13b
  40abe3:	not    DWORD PTR [esi+0x3b]
  40abe6:	and    al,0xac
  40abe8:	dec    esp
  40abe9:	(bad)  
  40abea:	cmp    BYTE PTR [esi+0x23091bdc],dh
  40abf0:	jnp    0x40ac5a
  40abf2:	pop    eax
  40abf3:	cs jl  0xf3afa96a
  40abfa:	cmp    BYTE PTR [esi+esi*8],bh
  40abfd:	gs add al,0xe2
  40ac00:	and    al,0x29
  40ac02:	rcl    BYTE PTR [edx],1
  40ac04:	push   0xffffffad
  40ac06:	frstor [edx-0x51]
  40ac09:	popa   
  40ac0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac0b:	in     al,0x55
  40ac0d:	jg     0x40ac41
  40ac0f:	push   eax
  40ac10:	stc    
  40ac11:	mov    al,ds:0x1bcbf6ec
  40ac16:	cmp    BYTE PTR [ebx+0x26],0xca
  40ac1a:	jae    0x40abab
  40ac1c:	mov    ebp,0xaecadc83
  40ac21:	cmc    
  40ac22:	inc    esi
  40ac23:	pop    edx
  40ac24:	mov    ds:0xe6b819c4,al
  40ac29:	push   ebp
  40ac2a:	test   BYTE PTR [ebx+0x572d4b70],0xb2
  40ac31:	sbb    BYTE PTR [ebp+0x14],0x75
  40ac35:	push   esp
  40ac36:	je     0x40ac27
  40ac38:	mov    ch,0x61
  40ac3a:	pop    ebp
  40ac3b:	jl     0x40abc5
  40ac3d:	adc    al,0x11
  40ac3f:	xchg   edx,eax
  40ac40:	pop    ss
  40ac41:	test   BYTE PTR [edx+ebx*1],dl
  40ac44:	(bad)  
  40ac46:	dec    esi
  40ac47:	pop    ecx
  40ac48:	jmp    0xca5:0xa18169ee
  40ac4f:	xchg   esi,eax
  40ac50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac51:	pop    ss
  40ac52:	in     al,dx
  40ac53:	es and esi,esp
  40ac56:	or     dl,ah
  40ac58:	xor    dl,bh
  40ac5a:	call   0x5a02:0x92d56178
  40ac61:	push   ss
  40ac62:	cld    
  40ac63:	mov    eax,0xb70e91b7
  40ac68:	les    ebx,FWORD PTR [eax+0x50]
  40ac6b:	cld    
  40ac6c:	sub    ecx,DWORD PTR [ecx]
  40ac6e:	inc    ebp
  40ac6f:	cmp    bh,cl
  40ac71:	stos   BYTE PTR es:[edi],al
  40ac72:	mov    ebx,0xf0572cab
  40ac77:	and    bh,BYTE PTR [edi+0x26]
  40ac7a:	xchg   ebp,eax
  40ac7b:	popa   
  40ac7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac7d:	dec    esi
  40ac7e:	mov    al,ds:0x84782d34
  40ac83:	jne    0x40acce
  40ac85:	cmp    dl,BYTE PTR [edx-0x76]
  40ac88:	cs ja  0x40ac2c
  40ac8b:	fdiv   DWORD PTR [eax]
  40ac8d:	dec    ebp
  40ac8e:	lods   eax,DWORD PTR ds:[esi]
  40ac8f:	push   ebx
  40ac90:	call   0x8479:0x6a62c226
  40ac97:	xchg   BYTE PTR fs:[edx],bl
  40ac9a:	mov    edx,0x70c4d137
  40ac9f:	mov    gs,WORD PTR [esi]
  40aca1:	shr    BYTE PTR [esi-0x53d6c0f9],1
  40aca7:	test   al,0x23
  40aca9:	sbb    al,0x50
  40acab:	pop    edx
  40acac:	mov    edx,0x38c3315a
  40acb1:	adc    eax,0xc28a4c4a
  40acb6:	dec    ecx
  40acb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb8:	sub    ah,BYTE PTR [edx-0x76]
  40acbb:	into   
  40acbc:	(bad)  
  40acbd:	daa    
  40acbe:	add    DWORD PTR ds:0xef6455ff,0xfffffffb
  40acc5:	ss mov edx,esi
  40acc8:	cmp    ebp,DWORD PTR [esi]
  40acca:	das    
  40accb:	mov    ebp,0xf57ea77f
  40acd0:	call   0xa339:0x1ebaf2c8
  40acd7:	xchg   DWORD PTR [ecx],ecx
  40acd9:	jmp    0xc77d:0x682d0d2c
  40ace0:	fist   DWORD PTR [edi-0x2]
  40ace3:	nop
  40ace4:	fcom   st(2)
  40ace6:	cmp    edx,edx
  40ace8:	xchg   ebp,eax
  40ace9:	add    al,al
  40aceb:	mov    BYTE PTR [ecx],dl
  40aced:	mov    bh,0xfb
  40acef:	mov    al,0xb2
  40acf1:	imul   ebp,DWORD PTR [esi-0x38],0xffffffef
  40acf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acf6:	aas    
  40acf7:	cmp    dl,0xf9
  40acfa:	cmp    eax,0xba17d66c
  40acff:	inc    ecx
  40ad00:	or     ebx,DWORD PTR [ebx-0x4536263f]
  40ad06:	sbb    ebp,DWORD PTR [edi+0x58]
  40ad09:	div    ebx
  40ad0b:	repz std 
  40ad0d:	(bad)  
  40ad0e:	mov    edx,0x713d5e52
  40ad13:	pop    ebx
  40ad14:	mov    bh,0xe0
  40ad16:	xor    edx,ebp
  40ad18:	mov    ah,0x74
  40ad1a:	inc    ebp
  40ad1b:	dec    ah
  40ad1d:	adc    BYTE PTR [ebp+0x7c],bh
  40ad20:	retf   
  40ad21:	rol    DWORD PTR [eax],1
  40ad23:	jo     0x40ad60
  40ad25:	shl    DWORD PTR [edi],1
  40ad27:	clc    
  40ad28:	paddusb mm2,QWORD PTR [edi+0x38]
  40ad2c:	mov    BYTE PTR [edi],al
  40ad2e:	cmp    DWORD PTR ds:0xf52d216f,ecx
  40ad34:	sub    WORD PTR [ecx-0x1b],0x6e
  40ad39:	mov    al,0x43
  40ad3b:	sub    dl,BYTE PTR [edi]
  40ad3d:	and    eax,0xc224ad34
  40ad42:	sub    BYTE PTR [esi+eiz*8],bh
  40ad45:	push   ss
  40ad46:	(bad)  
  40ad47:	jno    0x40acfc
  40ad49:	pop    edi
  40ad4a:	xor    al,BYTE PTR [esi+0x7d493a7]
  40ad50:	or     DWORD PTR [edi+0x63f77e54],ebx
  40ad56:	sub    al,0x59
  40ad58:	clc    
  40ad59:	mov    ecx,0x6187bd03
  40ad5e:	in     al,dx
  40ad5f:	fnsave [edx]
  40ad61:	dec    ecx
  40ad62:	jo     0x40adca
  40ad64:	jo     0x40acf3
  40ad66:	push   ds
  40ad67:	add    BYTE PTR [eax+0x52],0xff
  40ad6b:	ret    0x51e3
  40ad6e:	call   0x4fdb:0x2ead30f7
  40ad75:	xchg   di,ax
  40ad77:	xchg   ebp,eax
  40ad78:	sar    BYTE PTR [esp+ecx*4+0x2339d35c],0x75
  40ad80:	call   0xbb82:0x69e3dc06
  40ad87:	mov    ?,WORD PTR [esi+0xe]
  40ad8a:	sahf   
  40ad8b:	stc    
  40ad8c:	fstp   DWORD PTR [eax]
  40ad8e:	js     0x40ad87
  40ad90:	fbld   TBYTE PTR [edx]
  40ad92:	cmp    dh,BYTE PTR [esp+ecx*4+0x2e4eccfb]
  40ad99:	xchg   edi,eax
  40ad9a:	daa    
  40ad9b:	push   0xb20fb134
  40ada0:	push   ds
  40ada1:	je     0x2cf5b678
  40ada7:	aad    0xfc
  40ada9:	icebp  
  40adaa:	in     al,0xa1
  40adac:	mov    edx,0x8518f86f
  40adb1:	add    cl,ch
  40adb3:	ja     0x40ae00
  40adb5:	stos   BYTE PTR es:[edi],al
  40adb6:	scas   eax,DWORD PTR es:[edi]
  40adb7:	sub    eax,0xe184519a
  40adbc:	jg     0x40ad41
  40adbe:	ret    
  40adbf:	les    eax,FWORD PTR [ecx+0x7ff95674]
  40adc5:	add    DWORD PTR ds:0x48279b67,esi
  40adcb:	xor    ch,BYTE PTR [ebx+ebp*2]
  40adce:	cmc    
  40adcf:	loopne 0x40ade6
  40add1:	repnz fld DWORD PTR [edx+edx*4-0x33]
  40add6:	jmp    FWORD PTR [ecx+0x3a]
  40add9:	pop    eax
  40adda:	fcmove st,st(2)
  40addc:	jge    0x40ae40
  40adde:	dec    edx
  40addf:	add    al,0xba
  40ade1:	ret    
  40ade2:	pop    ebx
  40ade3:	jo     0x40ad79
  40ade5:	dec    edx
  40ade6:	lods   al,BYTE PTR ds:[esi]
  40ade7:	test   al,0xb4
  40ade9:	jne    0x40adab
  40adeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adec:	and    BYTE PTR [edi-0x3fbac31e],ch
  40adf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adf3:	inc    eax
  40adf4:	push   ebp
  40adf5:	lds    ebp,FWORD PTR [ecx-0x6636b24]
  40adfb:	mov    BYTE PTR [eax+0x6f],ch
  40adfe:	not    BYTE PTR [ebx-0x65]
  40ae01:	lods   eax,DWORD PTR ds:[esi]
  40ae02:	retf   0xc1bb
  40ae05:	adc    ebx,ebp
  40ae07:	mov    al,ds:0x8a0215b6
  40ae0c:	ins    DWORD PTR es:[edi],dx
  40ae0d:	leave  
  40ae0e:	mov    ch,0x10
  40ae10:	out    dx,al
  40ae11:	sub    BYTE PTR [ecx-0x58995b90],dh
  40ae17:	arpl   WORD PTR [ebp+0x3d],bx
  40ae1a:	enter  0x5546,0x93
  40ae1e:	dec    edx
  40ae1f:	xchg   BYTE PTR [ebx+eiz*1+0x57],dl
  40ae23:	adc    DWORD PTR [edi],ecx
  40ae25:	fwait
  40ae26:	lahf   
  40ae27:	inc    ecx
  40ae28:	nop
  40ae29:	dec    eax
  40ae2a:	in     al,0x85
  40ae2c:	stc    
  40ae2d:	mov    cs,WORD PTR [esi+0x2bc815b1]
  40ae33:	jge    0x40ae5c
  40ae35:	pop    es
  40ae36:	mov    eax,DWORD PTR [esi-0x21]
  40ae39:	in     al,0xe1
  40ae3b:	outs   dx,BYTE PTR ds:[esi]
  40ae3c:	lock inc esi
  40ae3e:	push   edi
  40ae3f:	repnz lock dec edx
  40ae42:	ror    cl,1
  40ae44:	pop    edi
  40ae45:	push   ss
  40ae46:	jae    0x40ae56
  40ae48:	mov    esp,0x1f1ca4c9
  40ae4d:	or     ebp,DWORD PTR [ecx]
  40ae4f:	inc    edi
  40ae50:	xchg   ebx,eax
  40ae51:	dec    DWORD PTR [ecx-0x25fcb437]
  40ae57:	push   eax
  40ae58:	xchg   esp,eax
  40ae59:	das    
  40ae5a:	mov    ds:0x57cd4823,eax
  40ae5f:	cmc    
  40ae60:	add    ah,BYTE PTR [edi-0x30499d51]
  40ae66:	xchg   esp,eax
  40ae67:	mov    ebx,0xea82ab06
  40ae6c:	lea    ebx,[ebx+0x4b1c81f5]
  40ae72:	out    0xf0,eax
  40ae74:	mov    cl,0x7c
  40ae76:	fs mov dl,0x78
  40ae79:	cli    
  40ae7a:	sub    ebx,DWORD PTR [edx]
  40ae7c:	cs test al,0x38
  40ae7f:	mov    al,ds:0xeca47c28
  40ae84:	outs   dx,DWORD PTR ds:[esi]
  40ae85:	adc    ecx,DWORD PTR [ecx]
  40ae87:	inc    esi
  40ae88:	and    esp,0x9aff88bc
  40ae8e:	adc    esi,DWORD PTR [ebp-0x11]
  40ae91:	inc    ebp
  40ae92:	fucomi st,st(3)
  40ae94:	or     BYTE PTR [ebp+ebx*2+0x37143970],ch
  40ae9b:	mov    ch,0xaa
  40ae9d:	sub    BYTE PTR [ebp+0x3fd5c418],ch
  40aea3:	sti    
  40aea4:	lds    ecx,FWORD PTR [edx-0x3012c880]
  40aeaa:	jnp    0x40ae90
  40aeac:	sahf   
  40aead:	mov    edi,0x791f313c
  40aeb2:	add    eax,0x228f5f41
  40aeb7:	or     edx,DWORD PTR [ebp-0x1709d33a]
  40aebd:	adc    DWORD PTR [esp+ebx*4],eax
  40aec0:	lea    ecx,[esi]
  40aec2:	ins    BYTE PTR es:[edi],dx
  40aec3:	rcl    DWORD PTR ds:0x2d88abb0,cl
  40aec9:	dec    esi
  40aeca:	ret    0x594
  40aecd:	fiadd  DWORD PTR [ebx-0x34]
  40aed0:	retf   
  40aed1:	adc    DWORD PTR [ecx+0x3c9aef82],ebx
  40aed7:	mov    ah,0x64
  40aed9:	jl     0x40ae7f
  40aedb:	jl     0x40af3f
  40aedd:	enter  0x2e0a,0x4e
  40aee1:	xor    DWORD PTR [ebx],edx
  40aee3:	(bad)  
  40aee4:	aas    
  40aee5:	sbb    al,0x31
  40aee7:	dec    edi
  40aee8:	aaa    
  40aee9:	jne    0x40ae8e
  40aeeb:	and    eax,0x204e1a81
  40aef0:	je     0x40ae86
  40aef2:	xlat   BYTE PTR gs:[ebx]
  40aef4:	adc    eax,0x7836e0f5
  40aef9:	mov    ah,0x5d
  40aefb:	push   0x40
  40aefd:	cmc    
  40aefe:	sbb    BYTE PTR [ebp-0x47013c0],bl
  40af04:	xadd   al,ah
  40af07:	jmp    0x40af44
  40af09:	in     eax,dx
  40af0a:	lock xor eax,0x7257f27b
  40af10:	pusha  
  40af11:	idiv   BYTE PTR [ebx-0x5afab13e]
  40af17:	in     eax,dx
  40af18:	mov    ebp,0xbf415643
  40af1d:	pop    edi
  40af1e:	popf   
  40af1f:	ins    BYTE PTR es:[edi],dx
  40af20:	and    eax,0x2fb3bd95
  40af25:	or     bh,BYTE PTR [eax+0x11]
  40af28:	cs sti 
  40af2a:	(bad)  
  40af2b:	test   eax,0xbcf8dfe0
  40af30:	pusha  
  40af31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af32:	and    eax,0x6a36d8c
  40af37:	jne    0x40afb6
  40af39:	cli    
  40af3a:	lods   eax,DWORD PTR ds:[esi]
  40af3b:	inc    ecx
  40af3c:	push   0x6627235b
  40af41:	add    DWORD PTR [edi-0x4a],ebx
  40af44:	jmp    0x72e1:0x8330043a
  40af4b:	dec    edi
  40af4c:	loopne 0x40af62
  40af4e:	stos   DWORD PTR es:[edi],eax
  40af4f:	loopne 0x40af50
  40af51:	mov    ebx,0x9cd147f7
  40af56:	inc    edi
  40af57:	into   
  40af58:	aad    0x83
  40af5a:	inc    ecx
  40af5b:	xchg   edi,eax
  40af5c:	cmp    al,0x95
  40af5e:	cld    
  40af5f:	add    al,0xff
  40af61:	adc    eax,DWORD PTR [eax+0x18d0733a]
  40af67:	push   edi
  40af68:	and    edx,DWORD PTR [eax-0xe]
  40af6b:	sub    BYTE PTR [eax-0x1f],bh
  40af6e:	mul    BYTE PTR [eax]
  40af70:	shl    eax,0xcb
  40af73:	(bad)  
  40af74:	retf   
  40af75:	adc    ah,bh
  40af77:	inc    edi
  40af78:	gs inc ecx
  40af7a:	rcr    BYTE PTR [ecx+0x631ba026],cl
  40af80:	iret   
  40af81:	aad    0x2d
  40af83:	dec    ebp
  40af84:	mov    ah,0x4f
  40af86:	xchg   ebx,eax
  40af87:	ins    BYTE PTR es:[edi],dx
  40af88:	sbb    BYTE PTR [edi+0x54],al
  40af8b:	mov    edx,edi
  40af8d:	or     ah,BYTE PTR [eax-0x34392383]
  40af93:	fisub  WORD PTR [ebp+0x3b]
  40af96:	in     al,dx
  40af97:	retf   0x5f82
  40af9a:	pop    ebx
  40af9b:	mov    edi,0x7f23f9d2
  40afa0:	fcomp  QWORD PTR [edi-0x75]
  40afa3:	(bad)  
  40afa5:	xchg   DWORD PTR ss:[esi+0x27dfc7a5],eax
  40afac:	cs inc edi
  40afae:	out    0x78,al
  40afb0:	fnstenv [edi-0x7a]
  40afb3:	push   cs
  40afb4:	sti    
  40afb5:	or     BYTE PTR [ebp-0x68],0x64
  40afb9:	or     dh,bl
  40afbb:	fs push 0x1e
  40afbe:	out    dx,al
  40afbf:	sbb    ch,dl
  40afc1:	xor    al,0xca
  40afc3:	pop    ds
  40afc4:	xchg   ebp,eax
  40afc5:	jmp    FWORD PTR [edi+0xf]
  40afc8:	mov    cl,0x78
  40afca:	xchg   edi,eax
  40afcb:	js     0x40b00f
  40afcd:	xchg   DWORD PTR [edi+0x6732d5c4],esi
  40afd3:	aaa    
  40afd4:	xor    eax,esi
  40afd6:	imul   esp,DWORD PTR [ebx-0xf],0x8182448
  40afdd:	mov    bl,0x5f
  40afdf:	fdivp  st(4),st
  40afe1:	mov    ebx,edi
  40afe3:	and    al,BYTE PTR [ecx]
  40afe5:	cmp    BYTE PTR [edi+0x4b81b198],al
  40afeb:	and    DWORD PTR [ebx],esi
  40afed:	sbb    al,0x9d
  40afef:	xchg   esp,eax
  40aff0:	cs out dx,eax
  40aff2:	ffree  st(3)
  40aff4:	dec    edx
  40aff5:	stos   BYTE PTR es:[edi],al
  40aff6:	out    dx,eax
  40aff7:	push   edx
  40aff8:	add    cl,bl
  40affa:	(bad)  
  40affb:	push   0x96587d69
  40b000:	xchg   esi,eax
  40b001:	dec    bl
  40b003:	push   es
  40b004:	cmp    BYTE PTR [eax+0xb],bl
  40b007:	ja     0x40afa7
  40b009:	adc    DWORD PTR [esi+0x2f8efbad],0xffffff8a
  40b010:	addr16 inc esi
  40b012:	adc    bl,BYTE PTR [ebx+0x4b203e2c]
  40b018:	xor    edx,DWORD PTR [ebx+eax*4+0x7e]
  40b01c:	mov    dh,bl
  40b01e:	fild   QWORD PTR [ebx-0x44f63dd7]
  40b024:	inc    esp
  40b025:	addr16 jne 0x40b003
  40b028:	mov    eax,0xc7a69327
  40b02d:	sub    ecx,eax
  40b02f:	enter  0xa9b,0x74
  40b033:	cwde   
  40b034:	stc    
  40b035:	cmp    BYTE PTR [ebx-0x4b69d05d],cl
  40b03b:	mov    ch,0xc
  40b03d:	xor    edx,edx
  40b03f:	mov    fs,WORD PTR [esi+eiz*2]
  40b042:	into   
  40b043:	adc    al,0xe9
  40b045:	loop   0x40b027
  40b047:	test   eax,0xf07b6cd3
  40b04c:	das    
  40b04d:	loopne 0x40b018
  40b04f:	outs   dx,DWORD PTR ds:[esi]
  40b050:	imul   BYTE PTR [ebp+edx*8-0x72]
  40b054:	mov    eax,0xf5503601
  40b059:	xor    al,0x8b
  40b05b:	adc    al,0xe6
  40b05d:	aaa    
  40b05e:	jbe    0x40aff1
  40b060:	push   ebx
  40b061:	scas   al,BYTE PTR es:[edi]
  40b062:	enter  0x5d36,0x7
  40b066:	dec    esp
  40b067:	jb     0x40b00e
  40b069:	add    DWORD PTR [edi],0xfffffff8
  40b06c:	imul   ebp,esi,0xbc4928d9
  40b072:	xor    eax,DWORD PTR [ecx]
  40b074:	xchg   BYTE PTR [esi-0x79126678],dl
  40b07a:	jp     0x40b075
  40b07c:	jg     0x40b025
  40b07e:	ja     0x40b008
  40b080:	cmp    BYTE PTR [edi-0xcd9d3ec],0x5
  40b087:	jne    0x40b0cc
  40b089:	jmp    0xca30:0xa3969ff5
  40b090:	iret   
  40b091:	dec    ecx
  40b092:	cmc    
  40b093:	sbb    DWORD PTR [ebx],ebx
  40b095:	inc    esp
  40b096:	jg     0x40b0ca
  40b098:	push   es
  40b099:	inc    esp
  40b09a:	stos   BYTE PTR es:[edi],al
  40b09b:	jecxz  0x40b0cb
  40b09d:	push   ebx
  40b09e:	inc    edi
  40b09f:	lea    ebx,[ebp-0x6cef0396]
  40b0a5:	das    
  40b0a6:	inc    edx
  40b0a7:	daa    
  40b0a8:	ja     0x40b0f0
  40b0aa:	enter  0x2291,0xff
  40b0ae:	aam    0x71
  40b0b0:	xchg   BYTE PTR [ebx+0x0],dl
  40b0b3:	scas   eax,DWORD PTR es:[edi]
  40b0b4:	les    edi,FWORD PTR [edi]
  40b0b6:	aas    
  40b0b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b8:	es xchg ebp,eax
  40b0ba:	(bad)  
  40b0bb:	mov    BYTE PTR [ebx-0xf],bl
  40b0be:	and    ebx,DWORD PTR [edx]
  40b0c0:	cmp    dl,BYTE PTR [ebx-0x27]
  40b0c3:	clc    
  40b0c4:	sub    BYTE PTR [edx],al
  40b0c6:	pop    ecx
  40b0c7:	retf   
  40b0c8:	call   0x918f1b03
  40b0cd:	enter  0x8c87,0x4b
  40b0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0d2:	sbb    al,bh
  40b0d4:	and    BYTE PTR [edx+eax*2+0x2f],ch
  40b0d8:	jns    0x40b14a
  40b0da:	xlat   BYTE PTR ds:[ebx]
  40b0db:	xor    al,BYTE PTR [eax]
  40b0dd:	out    dx,eax
  40b0de:	mov    al,0xae
  40b0e0:	adc    esi,esi
  40b0e2:	shl    BYTE PTR [edx+esi*1-0x4f],1
  40b0e6:	je     0x40b0a0
  40b0e8:	cs jmp 0x40b084
  40b0eb:	fcom   DWORD PTR [edx]
  40b0ed:	lock test BYTE PTR [ecx],ch
  40b0f0:	mov    al,0xfe
  40b0f2:	stc    
  40b0f3:	(bad)  
  40b0f4:	pop    ecx
  40b0f5:	add    dl,al
  40b0f7:	mov    WORD PTR [edx+ebp*2],es
  40b0fa:	jbe    0x40b152
  40b0fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0fd:	mov    edx,DWORD PTR [esi+edi*8+0x2f]
  40b101:	aas    
  40b102:	or     al,0x64
  40b104:	or     DWORD PTR [esi+0x3b],ebx
  40b107:	pusha  
  40b108:	and    DWORD PTR [edi+0x6a],esi
  40b10b:	jge    0x40b0f5
  40b10d:	and    eax,DWORD PTR [edx+0x79]
  40b110:	mov    edx,0x374e2882
  40b115:	add    al,0x59
  40b117:	sub    ah,BYTE PTR [edi-0x3d67af30]
  40b11d:	pop    es
  40b11e:	and    ecx,DWORD PTR [edi]
  40b120:	daa    
  40b121:	cdq    
  40b122:	js     0x40b0e5
  40b124:	cld    
  40b125:	mov    ebx,0xa1cdb442
  40b12a:	mov    ebx,0xa4470f65
  40b12f:	mov    ds:0xb6162eba,eax
  40b134:	nop
  40b135:	xchg   ecx,eax
  40b136:	add    DWORD PTR [ecx+0x41],esi
  40b139:	cwde   
  40b13a:	test   DWORD PTR [esi],ecx
  40b13c:	xchg   edi,eax
  40b13d:	frstor [ebp+0x4f]
  40b140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b141:	outs   dx,DWORD PTR ds:[esi]
  40b142:	scas   eax,DWORD PTR es:[edi]
  40b143:	and    al,bl
  40b145:	push   ebp
  40b146:	cs nop
  40b148:	outs   dx,DWORD PTR ds:[esi]
  40b149:	repz dec edx
  40b14b:	pop    edi
  40b14c:	out    dx,eax
  40b14d:	mov    dh,ah
  40b14f:	jo     0x40b135
  40b151:	dec    edi
  40b152:	ret    
  40b153:	sbb    BYTE PTR [edi-0x4c],bh
  40b156:	or     dh,BYTE PTR [ecx+ebx*4+0x56]
  40b15a:	test   esi,ebp
  40b15c:	or     esp,ebx
  40b15e:	std    
  40b15f:	sub    BYTE PTR [ebp-0x66],bl
  40b162:	pop    ebx
  40b163:	mov    bl,0xf4
  40b165:	stc    
  40b166:	sub    dh,BYTE PTR [eax+esi*4+0x60b248c7]
  40b16d:	lods   eax,DWORD PTR ds:[esi]
  40b16e:	add    edi,DWORD PTR [eax+0x2c]
  40b171:	pop    ebp
  40b172:	xchg   esi,eax
  40b173:	push   ecx
  40b174:	cmp    dl,ch
  40b176:	enter  0xfff9,0x33
  40b17a:	pop    esp
  40b17b:	call   0x3a3a:0xc0b5b401
  40b182:	push   es
  40b183:	in     al,0x6
  40b185:	popf   
  40b186:	and    dl,BYTE PTR [eax+0x7]
  40b189:	(bad)  
  40b18a:	or     al,BYTE PTR cs:[eax+0x7b]
  40b18e:	sbb    BYTE PTR [edx+0x162dd17f],dl
  40b194:	adc    eax,0x50a7b0bf
  40b199:	popa   
  40b19a:	inc    esp
  40b19b:	rcl    DWORD PTR [edx+eax*1],cl
  40b19e:	sub    eax,0x6c9b5db7
  40b1a3:	js     0x40b20d
  40b1a5:	bound  edx,QWORD PTR [eax+0x28]
  40b1a8:	lahf   
  40b1a9:	push   0xffffff97
  40b1ab:	pop    ss
  40b1ac:	sub    BYTE PTR [eax+0x69],0xa7
  40b1b0:	jno    0x40b214
  40b1b2:	cmp    DWORD PTR [ebx+eiz*4-0x4a],edi
  40b1b6:	mov    bl,0x5a
  40b1b8:	xchg   ebp,eax
  40b1b9:	mov    eax,0x4119eba
  40b1be:	and    bl,0xd3
  40b1c1:	ror    DWORD PTR [ecx-0x5],0x60
  40b1c5:	add    al,0xfc
  40b1c7:	fucomp st(5)
  40b1c9:	xchg   BYTE PTR [eax],ch
  40b1cb:	inc    eax
  40b1cc:	add    al,BYTE PTR [ecx+0x391ff02a]
  40b1d2:	pop    edi
  40b1d3:	iret   
  40b1d4:	xchg   esi,eax
  40b1d5:	enter  0x5cb,0x2e
  40b1d9:	addr16 push ecx
  40b1db:	mov    bh,BYTE PTR [eax-0x324f63b5]
  40b1e1:	loop   0x40b24f
  40b1e3:	sub    DWORD PTR [edx],eax
  40b1e5:	pop    ebp
  40b1e6:	mov    bh,0x74
  40b1e8:	mov    dh,0x22
  40b1ea:	retf   
  40b1eb:	fimul  WORD PTR [ecx-0x2c]
  40b1ee:	pop    edi
  40b1ef:	sahf   
  40b1f0:	scas   eax,DWORD PTR es:[edi]
  40b1f1:	retf   
  40b1f2:	(bad)  
  40b1f3:	not    BYTE PTR [eax]
  40b1f5:	in     eax,dx
  40b1f6:	shl    BYTE PTR [esi],cl
  40b1f8:	std    
  40b1f9:	add    esi,DWORD PTR [edx]
  40b1fb:	pop    eax
  40b1fc:	mov    dh,cl
  40b1fe:	jne    0x40b24a
  40b200:	lods   eax,DWORD PTR ds:[esi]
  40b201:	inc    eax
  40b202:	retf   
  40b203:	fcomp  QWORD PTR [ebp+0x7c]
  40b206:	mov    eax,ds:0xd137dcc4
  40b20b:	mov    edi,0xe75f4345
  40b210:	push   ds
  40b211:	(bad)  
  40b212:	lea    ebx,[ebx]
  40b214:	pop    esp
  40b215:	cmp    DWORD PTR [edi],esp
  40b217:	mov    bl,0xf1
  40b219:	or     dl,bh
  40b21b:	mov    ch,0x20
  40b21d:	int3   
  40b21e:	mov    ch,0x8d
  40b220:	ss jae 0x40b273
  40b223:	es stc 
  40b225:	add    DWORD PTR [ebx-0x36],0xffffff8f
  40b229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b22a:	push   ebx
  40b22b:	sbb    al,BYTE PTR [ecx]
  40b22d:	jns    0x40b21d
  40b22f:	fst    DWORD PTR [edi+0x1e6148d4]
  40b235:	jp     0x40b22c
  40b237:	mov    bl,0x3b
  40b239:	push   ds
  40b23a:	jne    0x40b1d1
  40b23c:	xor    DWORD PTR [ebp+0x6b],edi
  40b23f:	mov    esi,0xc2997318
  40b244:	xchg   edi,eax
  40b245:	(bad)  
  40b246:	lods   al,BYTE PTR ds:[esi]
  40b247:	lods   al,BYTE PTR ds:[esi]
  40b248:	stc    
  40b249:	push   eax
  40b24a:	sub    BYTE PTR [eax],al
  40b24c:	call   0x99cd:0x611871e3
  40b253:	sbb    DWORD PTR [esi+0x3f292064],edi
  40b259:	ins    BYTE PTR es:[edi],dx
  40b25a:	adc    eax,0x42133aaf
  40b25f:	sti    
  40b260:	cmp    edx,DWORD PTR [ebp+0x69]
  40b263:	xlat   BYTE PTR ds:[ebx]
  40b264:	sub    eax,0x3a714bd0
  40b269:	inc    ebx
  40b26a:	jp     0x40b29c
  40b26c:	jns    0x40b22f
  40b26e:	gs jl  0x40b2d2
  40b271:	inc    ecx
  40b272:	sti    
  40b273:	mov    edx,0x435cb6fa
  40b278:	and    al,cl
  40b27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b27b:	mov    edx,0xbffd20d8
  40b280:	jmp    0x86a6:0xac7f6aec
  40b287:	push   esp
  40b288:	retf   
  40b289:	adc    eax,0xd45c4da4
  40b28e:	scas   eax,DWORD PTR es:[edi]
  40b28f:	xor    ebx,DWORD PTR [edx-0x2f]
  40b292:	(bad)  
  40b293:	fcomp  st(7)
  40b295:	int3   
  40b296:	jmp    0x40b2db
  40b298:	aam    0x1a
  40b29a:	xchg   ecx,eax
  40b29b:	fnstsw ax
  40b29d:	inc    ebx
  40b29e:	jp     0x40b223
  40b2a0:	adc    BYTE PTR [ebx-0x4c],ah
  40b2a3:	xchg   ebp,eax
  40b2a4:	arpl   WORD PTR [eax-0x272d22c4],si
  40b2aa:	mov    al,ds:0xe96f0e85
  40b2af:	or     bl,BYTE PTR [ebx-0x7429d830]
  40b2b5:	gs inc esp
  40b2b7:	push   0x53
  40b2b9:	xor    al,0x2
  40b2bb:	in     al,0xe3
  40b2bd:	lea    esi,[ecx]
  40b2bf:	or     eax,0xac87de3b
  40b2c4:	(bad)  [edx]
  40b2c6:	cmp    esp,DWORD PTR [edx]
  40b2c8:	test   DWORD PTR [ecx],ecx
  40b2ca:	pop    eax
  40b2cb:	outs   dx,DWORD PTR ds:[esi]
  40b2cc:	mov    cl,BYTE PTR [ebp-0x7e]
  40b2cf:	dec    ecx
  40b2d0:	test   edx,0x76d67ca9
  40b2d6:	shr    esp,0x90
  40b2d9:	jb     0x40b26b
  40b2db:	adc    eax,0xff9bae29
  40b2e0:	push   ds
  40b2e1:	push   esp
  40b2e2:	add    esp,ebp
  40b2e4:	jge    0x40b297
  40b2e6:	sbb    eax,0xa0ab93d8
  40b2eb:	sbb    eax,0xa342888f
  40b2f0:	int3   
  40b2f1:	sar    BYTE PTR [esp+ebx*8-0x1080a73b],0xba
  40b2f9:	adc    al,bh
  40b2fb:	fisubr WORD PTR [ebx+edi*1+0x1c]
  40b2ff:	shl    BYTE PTR [ebx-0x5280ac8b],0xe2
  40b306:	pop    ebp
  40b307:	push   ds
  40b308:	push   ds
  40b309:	xchg   ecx,eax
  40b30a:	mov    ds:0xa1d17a9,al
  40b30f:	shl    BYTE PTR [esi],cl
  40b311:	(bad)  
  40b312:	and    esp,DWORD PTR [ebp-0x3b]
  40b315:	in     eax,dx
  40b316:	push   ecx
  40b317:	outs   dx,BYTE PTR ds:[esi]
  40b318:	push   esi
  40b319:	jmp    0x40b33b
  40b31b:	ja     0x40b2e9
  40b31d:	mov    ds:0x7751809b,eax
  40b322:	mov    dh,0x96
  40b324:	push   ss
  40b325:	or     eax,DWORD PTR [edx]
  40b327:	xchg   edx,eax
  40b328:	bound  eax,QWORD PTR [edx]
  40b32a:	xchg   edi,eax
  40b32b:	pop    ss
  40b32c:	bound  ebx,QWORD PTR [edx]
  40b32e:	nop
  40b32f:	jnp    0x40b2be
  40b331:	dec    eax
  40b333:	fadd   DWORD PTR [eax]
  40b335:	imul   ebx,DWORD PTR [ecx-0x3f],0x3f
  40b339:	xor    eax,0xcf5936d2
  40b33e:	arpl   cx,bp
  40b340:	rol    esp,cl
  40b342:	add    DWORD PTR [ebx-0x39],0x3a3e4935
  40b349:	outs   dx,DWORD PTR ds:[esi]
  40b34a:	xchg   esp,eax
  40b34b:	sbb    dh,BYTE PTR [ebx]
  40b34d:	push   cs
  40b34e:	fdiv   DWORD PTR [eax]
  40b350:	popa   
  40b351:	dec    eax
  40b352:	inc    eax
  40b353:	sub    ecx,DWORD PTR [edi-0x27]
  40b356:	xchg   esp,eax
  40b357:	cmp    eax,0x668e7f9a
  40b35c:	or     eax,0xd6cc2f72
  40b361:	jg     0x40b38e
  40b363:	ins    DWORD PTR es:[edi],dx
  40b364:	xlat   BYTE PTR ds:[ebx]
  40b365:	and    DWORD PTR [esi-0x6fd5be6e],edi
  40b36b:	(bad)  
  40b36c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b36d:	mov    esi,0xc81298ad
  40b372:	fwait
  40b373:	mov    esi,0x14787e6a
  40b378:	daa    
  40b379:	into   
  40b37a:	(bad)  [ebp-0xdceeedd]
  40b380:	push   0x4a58cd25
  40b385:	and    al,0xd8
  40b387:	and    dh,bl
  40b389:	pusha  
  40b38a:	adc    DWORD PTR [edi+0x7f17c153],eax
  40b390:	adc    eax,0x646803e4
  40b395:	bound  ecx,QWORD PTR [ecx]
  40b397:	jns    0x40b388
  40b399:	lods   al,BYTE PTR ds:[esi]
  40b39a:	xchg   ebx,eax
  40b39b:	aaa    
  40b39c:	jle    0x40b337
  40b39e:	lock ret 0x44f9
  40b3a2:	push   eax
  40b3a3:	adc    BYTE PTR [ecx],bh
  40b3a5:	push   ss
  40b3a6:	and    eax,esi
  40b3a8:	stc    
  40b3a9:	jecxz  0x40b3d5
  40b3ab:	popf   
  40b3ac:	loop   0x40b3b4
  40b3ae:	mov    bl,0xb5
  40b3b0:	jo     0x40b41b
  40b3b2:	pop    esi
  40b3b3:	add    eax,0xafe42afb
  40b3b8:	pushf  
  40b3b9:	dec    ch
  40b3bb:	int3   
  40b3bc:	push   0x3d
  40b3be:	(bad)  
  40b3bf:	and    DWORD PTR [ebx+0x78],eax
  40b3c2:	jge    0x40b34f
  40b3c4:	in     eax,dx
  40b3c5:	mov    esp,0x6182ea87
  40b3ca:	stos   BYTE PTR es:[edi],al
  40b3cb:	loop   0x40b3d0
  40b3cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ce:	and    dl,BYTE PTR [eax-0x63]
  40b3d1:	or     al,0xb1
  40b3d3:	push   ecx
  40b3d4:	pop    ecx
  40b3d5:	cmp    eax,0x127f970e
  40b3da:	data16 mov dh,0x54
  40b3dd:	neg    BYTE PTR [esi]
  40b3df:	mov    ch,0x56
  40b3e1:	(bad)  [esi+0x4239f534]
  40b3e7:	xchg   edi,eax
  40b3e8:	mov    ds:0x2fdf6fab,eax
  40b3ed:	cld    
  40b3ee:	push   ebx
  40b3ef:	cmp    DWORD PTR [edi-0x75d42ba1],edi
  40b3f5:	xchg   esi,eax
  40b3f6:	test   DWORD PTR [edx-0x47159746],eax
  40b3fc:	sub    eax,0x8ea252bb
  40b401:	push   es
  40b402:	cli    
  40b403:	and    eax,DWORD PTR [edi-0x4e43c8dc]
  40b409:	mov    al,ds:0x84f8a6b9
  40b40e:	mov    edi,0x6e5ef160
  40b413:	xchg   bh,cl
  40b415:	das    
  40b416:	and    al,BYTE PTR [edi+0x481a7bd2]
  40b41c:	jmp    0x40b3cd
  40b41e:	cmp    ebp,DWORD PTR [ebx]
  40b420:	sbb    BYTE PTR [ecx+0x5a7c8202],dh
  40b426:	mov    bl,0xc
  40b428:	dec    ecx
  40b429:	adc    DWORD PTR [eax],edi
  40b42b:	xor    dl,BYTE PTR [esi+ebx*1]
  40b42e:	psrlq  mm5,mm2
  40b431:	xchg   edx,eax
  40b432:	sbb    al,0x10
  40b434:	repz (bad) ds:0xefd6eb13
  40b43b:	mov    ebx,0x5ddc867c
  40b440:	and    eax,0x28ba7b8b
  40b445:	fmul   QWORD PTR [edx+0x75]
  40b448:	add    esi,DWORD PTR [edi-0x6e]
  40b44b:	popa   
  40b44c:	dec    edi
  40b44d:	pop    esp
  40b44e:	jne    0x40b434
  40b450:	sub    BYTE PTR [edi],0xed
  40b453:	popf   
  40b454:	pop    edx
  40b455:	fidiv  DWORD PTR [eax-0x27556da7]
  40b45b:	pop    esp
  40b45c:	int3   
  40b45d:	int    0x4d
  40b45f:	push   ecx
  40b460:	test   BYTE PTR [edx-0x18],cl
  40b463:	loope  0x40b477
  40b465:	pop    es
  40b466:	retf   
  40b467:	xor    BYTE PTR [ebx+0x7c],dh
  40b46a:	das    
  40b46b:	cmp    eax,0x9b4f577b
  40b470:	rol    DWORD PTR ds:0x72ee7a21,0xa4
  40b477:	mov    ds:0x6cce53c7,eax
  40b47c:	mov    eax,esp
  40b47e:	scas   al,BYTE PTR es:[edi]
  40b47f:	push   ecx
  40b480:	inc    esp
  40b481:	inc    eax
  40b482:	push   0xffffffeb
  40b484:	cli    
  40b485:	js     0x40b41c
  40b487:	dec    esp
  40b488:	sbb    BYTE PTR ds:0xac337623,ah
  40b48e:	mov    cl,BYTE PTR ss:[ecx-0x71ac4afc]
  40b495:	pop    es
  40b496:	mov    cl,ch
  40b498:	push   0x206f3a14
  40b49d:	pop    ebx
  40b49e:	retf   
  40b49f:	iret   
  40b4a0:	push   ss
  40b4a1:	std    
  40b4a2:	ins    DWORD PTR es:[edi],dx
  40b4a3:	xor    eax,0x49569a5e
  40b4a8:	out    dx,eax
  40b4a9:	popa   
  40b4aa:	mov    al,0xb5
  40b4ac:	mov    al,0x83
  40b4ae:	jnp    0x40b4db
  40b4b0:	sub    al,dl
  40b4b2:	hlt    
  40b4b3:	cli    
  40b4b4:	jae    0x40b500
  40b4b6:	aam    0x73
  40b4b8:	mov    esp,0x85885eb
  40b4bd:	mov    ds:0xf51224ec,eax
  40b4c2:	mov    dl,0x4
  40b4c4:	push   es
  40b4c5:	call   0xd20b7116
  40b4ca:	aad    0x37
  40b4cc:	mov    ds:0xec61fbb8,al
  40b4d1:	nop
  40b4d2:	or     DWORD PTR [edx-0x53a13884],edi
  40b4d8:	fwait
  40b4d9:	push   eax
  40b4da:	xchg   ecx,eax
  40b4db:	enter  0x47b4,0x64
  40b4df:	or     ebx,DWORD PTR [edx+0x54d394bb]
  40b4e5:	mov    ds:0x66c2143,al
  40b4ea:	adc    eax,0x7c5cea84
  40b4ef:	fwait
  40b4f0:	bound  ebp,QWORD PTR [esi]
  40b4f2:	mov    eax,0x5348b674
  40b4f7:	(bad)  
  40b4f8:	fs adc eax,0x74c04325
  40b4fe:	pop    ss
  40b4ff:	imul   esi,DWORD PTR es:[edx+0x7d],0xd40dd393
  40b507:	pusha  
  40b508:	cmp    BYTE PTR [ebx-0x3a436345],ch
  40b50e:	(bad)  
  40b50f:	int    0x4e
  40b511:	stos   BYTE PTR es:[edi],al
  40b512:	or     BYTE PTR [eax+0x16],dh
  40b515:	xor    al,0xd4
  40b517:	aas    
  40b518:	pop    edi
  40b519:	(bad)  
  40b51a:	sbb    DWORD PTR [esi+esi*4],ebp
  40b51d:	aad    0x71
  40b51f:	in     al,0x76
  40b521:	pushf  
  40b522:	lods   eax,DWORD PTR ds:[esi]
  40b523:	sahf   
  40b524:	mov    cl,0x2f
  40b526:	sub    cl,cl
  40b528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b529:	pop    ebx
  40b52a:	out    dx,al
  40b52b:	pop    eax
  40b52c:	out    0xe2,eax
  40b52e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b52f:	lods   eax,DWORD PTR ds:[esi]
  40b530:	dec    edx
  40b531:	enter  0xa7bc,0x46
  40b535:	popa   
  40b536:	cwde   
  40b537:	cmp    ebp,DWORD PTR [edx]
  40b539:	daa    
  40b53a:	ins    DWORD PTR es:[edi],dx
  40b53b:	sub    BYTE PTR [ecx-0x47],dh
  40b53e:	adc    eax,0xbba3770a
  40b543:	add    eax,0xfa0a88f0
  40b548:	pop    ebp
  40b549:	inc    eax
  40b54a:	gs inc eax
  40b54c:	mov    edi,0xbe6f3edb
  40b551:	adc    ecx,DWORD PTR [esi-0x17]
  40b554:	mov    ds:0x739f524f,al
  40b559:	mov    ecx,DWORD PTR [ecx+0x65f9fde0]
  40b55f:	enter  0xf6ca,0x1a
  40b563:	xor    eax,0xef45c266
  40b568:	psrad  mm1,mm7
  40b56b:	xchg   DWORD PTR [ecx+0x6e2384d1],edi
  40b571:	xor    BYTE PTR [edx+0x76],0x96
  40b575:	adc    dl,BYTE PTR [ebx-0x58]
  40b578:	dec    esp
  40b579:	mov    BYTE PTR [eax],dh
  40b57b:	repnz stos BYTE PTR es:[edi],al
  40b57d:	mov    BYTE PTR [ebx],bh
  40b57f:	mov    eax,0x250d7a2b
  40b584:	adc    ah,BYTE PTR [edx]
  40b586:	mov    ebp,0xd7034260
  40b58b:	push   cs
  40b58c:	jno    0x40b51d
  40b58e:	pop    ecx
  40b58f:	sub    esp,0x1177a21b
  40b595:	ss jbe 0x40b604
  40b598:	jmp    0x4fdd:0xb302d362
  40b59f:	push   ebx
  40b5a0:	push   edx
  40b5a1:	dec    edx
  40b5a2:	push   edx
  40b5a3:	sbb    esp,DWORD PTR [ebp+0x7c]
  40b5a6:	push   ebp
  40b5a7:	(bad)  
  40b5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a9:	mov    bl,0xca
  40b5ab:	fnstcw WORD PTR [edx-0x1c]
  40b5ae:	jns    0x40b56b
  40b5b0:	clc    
  40b5b1:	sbb    bl,bl
  40b5b3:	pop    edi
  40b5b4:	xor    eax,0xf6efe182
  40b5b9:	jbe    0x40b586
  40b5bb:	sahf   
  40b5bc:	sbb    eax,0xb56d1d35
  40b5c1:	cwde   
  40b5c2:	mov    edx,0x3c57c8ab
  40b5c7:	std    
  40b5c8:	adc    DWORD PTR [esi+0x39],0x671b38a7
  40b5cf:	out    dx,al
  40b5d0:	test   BYTE PTR cs:[edi-0x3b],bl
  40b5d4:	(bad)  
  40b5d6:	das    
  40b5d7:	out    0x99,al
  40b5d9:	inc    ebx
  40b5da:	in     eax,dx
  40b5db:	jbe    0x40b606
  40b5dd:	call   0xb440a093
  40b5e2:	fs jecxz 0x40b663
  40b5e5:	aaa    
  40b5e6:	adc    BYTE PTR [esi+0x4],al
  40b5e9:	out    dx,eax
  40b5ea:	pop    esi
  40b5eb:	mov    ebx,DWORD PTR [eax]
  40b5ed:	daa    
  40b5ee:	ret    0xa4ad
  40b5f1:	nop
  40b5f2:	mov    ?,ebx
  40b5f4:	icebp  
  40b5f5:	jle    0x40b663
  40b5f7:	jbe    0x40b5bb
  40b5f9:	cld    
  40b5fa:	sub    esi,eax
  40b5fc:	cwde   
  40b5fd:	xor    DWORD PTR [eax+0x7c],edi
  40b600:	cmp    eax,0xbf68c95
  40b605:	cli    
  40b606:	mov    ecx,0xae4ae622
  40b60b:	mov    ds:0x7f8ff8fa,eax
  40b610:	xchg   DWORD PTR [esi-0x1a506c32],ebx
  40b616:	or     bl,0x56
  40b619:	addr16 test al,0x1a
  40b61c:	shr    esi,0x47
  40b61f:	xchg   edi,eax
  40b620:	mov    ch,0xc0
  40b622:	ret    
  40b623:	test   BYTE PTR [eax],dh
  40b625:	mov    edx,DWORD PTR [ebx+0x4c5bedc8]
  40b62b:	ss pop edx
  40b62d:	xchg   ecx,eax
  40b62e:	or     edi,DWORD PTR [ebp+ecx*2-0x706f7c1b]
  40b635:	lods   eax,DWORD PTR ds:[esi]
  40b636:	and    ah,al
  40b638:	retf   
  40b639:	xchg   edi,eax
  40b63a:	jnp    0x40b6b4
  40b63c:	jl     0x40b636
  40b63e:	mov    dl,0xe
  40b640:	fs mov edx,0x1e444f5c
  40b646:	test   al,0xe
  40b648:	shl    BYTE PTR [edx],0xdb
  40b64b:	and    eax,0xa510cd8d
  40b650:	adc    DWORD PTR [ecx+0x5de92b00],edi
  40b656:	mov    bh,0x80
  40b658:	imul   edx,DWORD PTR [ebx+ebx*1],0xffffffcf
  40b65c:	popa   
  40b65d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b65e:	and    DWORD PTR [ebx-0x5567317e],esp
  40b664:	mov    dl,0xf9
  40b666:	imul   edi
  40b668:	iret   
  40b669:	and    DWORD PTR [ebx-0x431ede94],ebx
  40b66f:	ficomp DWORD PTR [edi+0x16]
  40b672:	fisttp QWORD PTR [ebx+0x4ed2fc02]
  40b678:	sbb    ebp,ebx
  40b67a:	or     eax,0x3b7df26e
  40b67f:	pusha  
  40b680:	cmp    ch,cl
  40b682:	jmp    0x2c02c136
  40b687:	ror    DWORD PTR ss:[edx+0x62b55dba],0x43
  40b68f:	mov    dh,0x4e
  40b691:	daa    
  40b692:	or     esp,DWORD PTR [edx+0x4]
  40b695:	call   0xc542256c
  40b69a:	(bad)  
  40b69b:	jp     0x40b646
  40b69d:	aaa    
  40b69e:	test   eax,0xc437541d
  40b6a3:	inc    ebp
  40b6a4:	mov    al,0x35
  40b6a6:	inc    ecx
  40b6a7:	enter  0xce0b,0xd1
  40b6ab:	jg     0x40b6be
  40b6ad:	repz mov al,0xb
  40b6b0:	js     0x40b6a8
  40b6b2:	fsubr  QWORD PTR [edi-0x4a03e95b]
  40b6b8:	ins    DWORD PTR es:[edi],dx
  40b6b9:	pusha  
  40b6ba:	into   
  40b6bb:	popa   
  40b6bc:	push   ss
  40b6bd:	aas    
  40b6be:	cwde   
  40b6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6c0:	mov    BYTE PTR [edx],dl
  40b6c2:	xor    BYTE PTR [ebp-0x66],al
  40b6c5:	xchg   DWORD PTR [esi+0x63],ecx
  40b6c8:	dec    ecx
  40b6c9:	mov    edi,0x8a86ac11
  40b6ce:	or     al,0x35
  40b6d0:	adc    al,0x2
  40b6d2:	nop
  40b6d3:	arpl   sp,si
  40b6d5:	(bad)  
  40b6d7:	push   es
  40b6d8:	ins    BYTE PTR es:[edi],dx
  40b6d9:	fwait
  40b6da:	jecxz  0x40b702
  40b6dc:	pop    esi
  40b6dd:	and    al,0x6d
  40b6df:	loopne 0x40b6f3
  40b6e1:	(bad)  
  40b6e2:	pop    esi
  40b6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6e4:	push   ecx
  40b6e5:	cli    
  40b6e6:	jle    0x40b696
  40b6e8:	dec    esi
  40b6e9:	xor    BYTE PTR [edx],al
  40b6eb:	pusha  
  40b6ec:	mov    ah,0xcf
  40b6ee:	scas   eax,DWORD PTR es:[edi]
  40b6ef:	or     BYTE PTR [edi+eiz*2+0x483541f6],dl
  40b6f6:	cld    
  40b6f7:	or     esi,DWORD PTR ds:0xbaff1c58
  40b6fd:	sbb    esi,DWORD PTR [edx-0x28]
  40b700:	repz push esi
  40b702:	(bad)  
  40b703:	loopne 0x40b6f7
  40b705:	xchg   esi,eax
  40b706:	in     al,0x4f
  40b708:	jmp    0x40b6e9
  40b70a:	pushf  
  40b70b:	and    dh,ch
  40b70d:	jb     0x40b780
  40b70f:	mov    ?,WORD PTR [edi]
  40b711:	push   ds
  40b712:	out    0xe6,eax
  40b714:	xor    ebp,DWORD PTR [bx+di+0x41cb]
  40b719:	sar    DWORD PTR [ecx+0x44db1f7a],1
  40b71f:	inc    ebx
  40b720:	or     DWORD PTR [ebp+0x1c],0xffffffab
  40b724:	outs   dx,DWORD PTR ds:[esi]
  40b725:	cmp    DWORD PTR [ebp+0x7a],esi
  40b728:	test   eax,0xf6c88984
  40b72d:	stc    
  40b72e:	stos   BYTE PTR es:[edi],al
  40b72f:	mov    ds:0x5121ef51,al
  40b734:	popf   
  40b735:	push   esp
  40b736:	popf   
  40b737:	mul    ebx
  40b739:	loopne 0x40b6e9
  40b73b:	fiadd  WORD PTR [edx]
  40b73d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b73e:	or     eax,0x63490b1f
  40b743:	mov    ds:0x7bd5ffc3,eax
  40b748:	cmp    eax,0x6cd7b50d
  40b74d:	sti    
  40b74e:	test   BYTE PTR [esi-0x45],bl
  40b751:	(bad)  
  40b752:	push   ecx
  40b753:	clc    
  40b754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b755:	imul   ebx,DWORD PTR [ecx],0x5084a3bb
  40b75b:	test   DWORD PTR [ebx],esp
  40b75d:	dec    ebp
  40b75e:	adc    BYTE PTR [esi-0x74],0xdd
  40b762:	out    0xf,al
  40b764:	jg     0x40b6fa
  40b766:	push   ebx
  40b767:	sbb    eax,0x2e6e3226
  40b76c:	mov    al,0x5b
  40b76e:	cmp    edi,DWORD PTR [ebx+0x6f]
  40b771:	ds call 0xfff53e9a
  40b777:	xchg   BYTE PTR [ebx+ebp*4],bl
  40b77a:	mov    al,ds:0x4ee64018
  40b77f:	add    al,0xc9
  40b781:	push   edi
  40b782:	push   edi
  40b783:	cwde   
  40b784:	loopne 0x40b76e
  40b786:	fs nop
  40b788:	jle    0x40b760
  40b78a:	aad    0x78
  40b78c:	add    DWORD PTR [eax],edx
  40b78e:	dec    esp
  40b78f:	mov    ch,0x16
  40b791:	retf   
  40b792:	jns    0x40b79e
  40b794:	cmp    ebx,ecx
  40b796:	jns    0x40b768
  40b798:	es push eax
  40b79a:	jb     0x40b789
  40b79c:	push   ebx
  40b79d:	jnp    0x40b780
  40b79f:	test   eax,0x75124ec4
  40b7a4:	sub    DWORD PTR [eax],edi
  40b7a6:	rcl    DWORD PTR [ebx],1
  40b7a8:	push   ecx
  40b7a9:	test   DWORD PTR [eax],0x2909d94f
  40b7af:	test   al,0x8b
  40b7b1:	sub    al,0x99
  40b7b3:	xchg   esi,eax
  40b7b4:	call   0x74dfd8d0
  40b7b9:	mov    dl,0xcd
  40b7bb:	iret   
  40b7bc:	xor    esp,esp
  40b7be:	xchg   edi,eax
  40b7bf:	push   edx
  40b7c0:	loope  0x40b767
  40b7c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7c3:	scas   eax,DWORD PTR es:[edi]
  40b7c4:	pop    ecx
  40b7c5:	mov    ecx,DWORD PTR [ebp+0x1d]
  40b7c8:	xor    cl,al
  40b7ca:	es push ss
  40b7cc:	rol    BYTE PTR [esi],0x11
  40b7cf:	or     ch,BYTE PTR [edi+0x38]
  40b7d2:	add    al,0xb0
  40b7d4:	ret    0xbff1
  40b7d7:	pop    edx
  40b7d8:	adc    al,0xf5
  40b7da:	and    bh,BYTE PTR [edx-0x365c0b9a]
  40b7e0:	pusha  
  40b7e1:	sbb    dl,dl
  40b7e3:	xchg   esi,eax
  40b7e4:	cli    
  40b7e5:	jg     0x40b78d
  40b7e7:	stos   DWORD PTR es:[edi],eax
  40b7e8:	scas   al,BYTE PTR es:[edi]
  40b7e9:	test   DWORD PTR [edx-0x63],edi
  40b7ec:	jbe    0x40b856
  40b7ee:	mov    esi,0x61276bd9
  40b7f3:	aad    0xb
  40b7f5:	xchg   DWORD PTR [edi+esi*8],esp
  40b7f8:	aam    0x32
  40b7fa:	mov    DWORD PTR [eax],ebp
  40b7fc:	js     0x40b821
  40b7fe:	adc    eax,0xa2a4bf16
  40b803:	jno    0x40b79d
  40b805:	out    dx,eax
  40b806:	bound  edx,QWORD PTR [edi-0x5b]
  40b809:	js     0x40b875
  40b80b:	les    eax,FWORD PTR [ecx+0x25]
  40b80e:	mov    esi,0x22521b60
  40b813:	fs mov ebx,0xf5244f6f
  40b819:	cwde   
  40b81a:	push   ss
  40b81b:	push   esi
  40b81c:	in     al,0x2
  40b81e:	outs   dx,BYTE PTR ds:[esi]
  40b81f:	into   
  40b820:	out    dx,eax
  40b821:	or     BYTE PTR [edx-0x4d],ah
  40b824:	pop    ds
  40b825:	mov    ecx,0xf0e2d81d
  40b82a:	sbb    BYTE PTR [esp+ebx*4+0x7b],dl
  40b82e:	dec    ebp
  40b82f:	push   edx
  40b830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b831:	push   ss
  40b832:	xor    al,0x9b
  40b834:	test   al,0x36
  40b836:	test   eax,0x777fd495
  40b83b:	pusha  
  40b83c:	dec    eax
  40b83d:	xchg   edx,eax
  40b83e:	inc    ebx
  40b83f:	jne    0x40b8ba
  40b841:	call   0xb80fafde
  40b846:	outs   dx,BYTE PTR ds:[esi]
  40b847:	js     0x40b803
  40b849:	not    BYTE PTR [ebx]
  40b84b:	enter  0x6a85,0x99
  40b84f:	addr16 push edi
  40b851:	inc    esi
  40b852:	dec    ebp
  40b853:	adc    DWORD PTR [ebx+edi*1+0x5f61b796],esi
  40b85a:	dec    esp
  40b85b:	jmp    FWORD PTR ds:0x15d536ee
  40b861:	mov    esi,0x4636c02e
  40b866:	sub    eax,0xaf34566a
  40b86b:	or     eax,0x744a9ec1
  40b870:	inc    ebx
  40b871:	xor    DWORD PTR [edx-0x444b0a2c],esi
  40b877:	sub    al,0xa1
  40b879:	nop
  40b87a:	sbb    eax,DWORD PTR [esi]
  40b87c:	repnz int 0x6a
  40b87f:	imul   ebx,edx,0xba3662dc
  40b885:	add    al,0xf5
  40b887:	(bad)
  40b88c:	jge    0x40b876
  40b88e:	jne    0x40b90e
  40b890:	sub    DWORD PTR [esi],esi
  40b892:	xor    bl,ah
  40b894:	mov    BYTE PTR [ebp+0x1e03148a],ch
  40b89a:	dec    edx
  40b89b:	pop    esp
  40b89c:	dec    esp
  40b89d:	lods   eax,DWORD PTR gs:[esi]
  40b89f:	shl    DWORD PTR [ebx+0x1d],1
  40b8a2:	pop    ebx
  40b8a3:	push   cs
  40b8a4:	xchg   esi,eax
  40b8a5:	cdq    
  40b8a6:	sti    
  40b8a7:	inc    edi
  40b8a8:	adc    al,BYTE PTR ds:0xe5ec5f04
  40b8ae:	xchg   ebp,eax
  40b8af:	rcl    esi,1
  40b8b1:	lods   al,BYTE PTR ds:[esi]
  40b8b2:	jns    0x40b913
  40b8b4:	and    al,0x4d
  40b8b6:	stos   DWORD PTR es:[edi],eax
  40b8b7:	fxrstor [ebp-0x7e5c26cf]
  40b8be:	dec    edx
  40b8bf:	(bad)  
  40b8c0:	mov    dl,0x2f
  40b8c2:	mov    al,ds:0x46bb5434
  40b8c7:	xchg   edi,eax
  40b8c8:	push   ebx
  40b8c9:	fstp   DWORD PTR [ecx-0x7d380ff9]
  40b8cf:	add    esp,DWORD PTR [ebx+0x2a]
  40b8d2:	cli    
  40b8d3:	jp     0x40b868
  40b8d5:	jno    0x40b8fe
  40b8d7:	stos   DWORD PTR es:[edi],eax
  40b8d8:	mov    ebx,ecx
  40b8da:	shr    edx,cl
  40b8dc:	and    edi,DWORD PTR [edx-0x76ece7e2]
  40b8e2:	sub    BYTE PTR [ebp+0x58f713bf],al
  40b8e8:	das    
  40b8e9:	into   
  40b8ea:	jle    0x40b883
  40b8ec:	leave  
  40b8ed:	and    al,0xbe
  40b8ef:	dec    esp
  40b8f0:	fwait
  40b8f1:	int    0x5b
  40b8f3:	call   0x8a2086fc
  40b8f8:	or     eax,0xd4e061ce
  40b8fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8fe:	bound  edi,QWORD PTR [eax+edx*4-0x59056e57]
  40b905:	mov    al,ds:0x45de8bb6
  40b90a:	pop    ds
  40b90b:	ret    0x1fae
  40b90e:	pop    ebp
  40b90f:	mov    ebp,ebx
  40b911:	fdiv   QWORD PTR [esp+0x47]
  40b915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b916:	mov    bl,BYTE PTR [ebx+0x3cd2de3d]
  40b91c:	into   
  40b91d:	adc    bh,ah
  40b91f:	xchg   BYTE PTR [esi+0x33e156a],al
  40b925:	mov    bl,0xbd
  40b927:	gs scas al,BYTE PTR es:[edi]
  40b929:	shl    BYTE PTR [eax-0x50c0720b],cl
  40b92f:	scas   al,BYTE PTR es:[edi]
  40b930:	dec    ebx
  40b931:	arpl   WORD PTR [edx+0x10024a09],cx
  40b937:	add    BYTE PTR [esi+0x20],dh
  40b93a:	repnz scas al,BYTE PTR es:[edi]
  40b93c:	pop    es
  40b93d:	lock mov dh,0xde
  40b940:	sbb    eax,0xede5f528
  40b945:	ja     0x40b97c
  40b947:	data16 cmp BYTE PTR [edi],dl
  40b94a:	sbb    al,0x9d
  40b94c:	add    bh,BYTE PTR [edi-0x48]
  40b94f:	mov    ebp,0xdde923
  40b954:	ins    BYTE PTR es:[edi],dx
  40b955:	sar    DWORD PTR [ecx+edx*4-0x24],0xc9
  40b95a:	ins    BYTE PTR es:[edi],dx
  40b95b:	inc    ebp
  40b95c:	mov    ecx,0x1c7a87c1
  40b961:	cs jo  0x40b941
  40b964:	jno    0x40b91e
  40b966:	mov    esi,0x4ad61cfb
  40b96b:	cs cld 
  40b96d:	loope  0x40b959
  40b96f:	(bad)  
  40b970:	call   0xf1b7:0x70fe2f4c
  40b977:	(bad)  
  40b979:	out    dx,eax
  40b97a:	mov    bl,BYTE PTR [ebx+0x2a35b124]
  40b980:	or     dl,bl
  40b982:	xor    BYTE PTR [ecx+ecx*2],bh
  40b985:	ins    DWORD PTR es:[edi],dx
  40b986:	xchg   esp,eax
  40b987:	or     DWORD PTR [esi+ebp*8+0x5],0x116d2749
  40b98f:	neg    DWORD PTR [eax]
  40b991:	mov    bl,0x13
  40b993:	mov    dl,0x4b
  40b995:	adc    bh,0x2b
  40b998:	gs inc esi
  40b99a:	inc    edi
  40b99b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b99d:	inc    esp
  40b99e:	mov    dl,0xc2
  40b9a0:	das    
  40b9a1:	iret   
  40b9a2:	xchg   BYTE PTR [edx],ch
  40b9a4:	sub    BYTE PTR [esp+eiz*4+0x237a81f5],ch
  40b9ab:	gs enter 0xe488,0x6b
  40b9b0:	xchg   ebx,eax
  40b9b1:	rcl    esp,1
  40b9b3:	xchg   BYTE PTR [edx+0x2453d89a],ah
  40b9b9:	fist   WORD PTR [ebx-0x2c]
  40b9bc:	pushf  
  40b9bd:	sbb    BYTE PTR [eax-0x6e],0x35
  40b9c1:	sbb    eax,0x98cfa676
  40b9c6:	jbe    0x40ba0e
  40b9c8:	call   0x6a18e104
  40b9cd:	jbe    0x40ba30
  40b9cf:	mov    cl,0xfd
  40b9d1:	mov    si,0x1bd0
  40b9d5:	pop    esi
  40b9d6:	mov    dl,0xad
  40b9d8:	ret    
  40b9d9:	push   0x16
  40b9db:	mov    cl,0x54
  40b9dd:	cmp    BYTE PTR [edx+0x19988c88],0xc5
  40b9e4:	ss inc esi
  40b9e6:	es call 0x6f1:0x8db5c1d6
  40b9ee:	push   cs
  40b9ef:	inc    ebp
  40b9f0:	stos   BYTE PTR es:[edi],al
  40b9f1:	jg     0x40ba20
  40b9f3:	add    al,0x0
  40b9f5:	sbb    DWORD PTR [ebx-0x34],0x2
  40b9f9:	mov    ss,WORD PTR [eax-0x57a51015]
  40b9ff:	jle    0x40ba64
  40ba01:	sub    eax,0xfac12905
  40ba06:	inc    esi
  40ba07:	repz jmp 0xbb6f9707
  40ba0d:	xchg   edi,eax
  40ba0e:	mov    eax,ds:0x9365c910
  40ba13:	mov    eax,ds:0xaccb756d
  40ba18:	cwde   
  40ba19:	cwde   
  40ba1a:	jmp    0xd7cf962f
  40ba1f:	repnz div bh
  40ba22:	mov    esp,0x59d79de3
  40ba27:	pop    esp
  40ba28:	mov    ebp,0xfce61215
  40ba2d:	pop    esi
  40ba2e:	dec    ecx
  40ba2f:	ss ds aas 
  40ba32:	cdq    
  40ba33:	data16 adc bl,BYTE PTR ds:0xe5c74a3
  40ba3a:	cmp    bh,bh
  40ba3c:	mov    ds:0x9666b3bf,eax
  40ba41:	mov    edx,DWORD PTR [ebp+0xf]
  40ba44:	outs   dx,DWORD PTR ds:[esi]
  40ba45:	sub    ch,BYTE PTR [ecx]
  40ba47:	ror    BYTE PTR [eax+0x73],cl
  40ba4a:	push   eax
  40ba4b:	out    0xa7,al
  40ba4d:	aam    0xad
  40ba4f:	imul   ebp,DWORD PTR [ecx],0x78217ed8
  40ba55:	xchg   esp,eax
  40ba56:	cld    
  40ba57:	ficom  DWORD PTR [ebx+0x3f2d203f]
  40ba5d:	js     0x40ba34
  40ba5f:	xchg   edi,eax
  40ba60:	mov    eax,ds:0xfb3f7c0f
  40ba65:	icebp  
  40ba66:	ret    
  40ba67:	stos   BYTE PTR es:[edi],al
  40ba68:	mov    al,0x4d
  40ba6a:	mov    BYTE PTR [edx+0x716efb10],al
  40ba70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba71:	and    BYTE PTR [edi-0x62db609d],ah
  40ba77:	adc    DWORD PTR [ebp-0x52],0x4a0360d2
  40ba7e:	or     DWORD PTR [edx-0x8c49831],eax
  40ba84:	fild   DWORD PTR [ecx+edi*2]
  40ba87:	in     al,0xf0
  40ba89:	jmp    0x867808d7
  40ba8e:	and    DWORD PTR [edx-0x26],esi
  40ba91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba92:	shr    DWORD PTR [edx-0x2a],1
  40ba95:	outs   dx,DWORD PTR ds:[esi]
  40ba96:	mov    esi,0x967e6ac7
  40ba9b:	cmp    DWORD PTR [esi-0x6],ebx
  40ba9e:	add    al,0x5c
  40baa0:	in     eax,dx
  40baa1:	sub    bh,BYTE PTR [edi+esi*8]
  40baa4:	dec    ecx
  40baa5:	mov    esp,0x6699b7c5
  40baaa:	imul   esp,DWORD PTR [edx],0xffffff8d
  40baad:	sbb    DWORD PTR [ebp+0x1f6816a1],0xb
  40bab4:	stos   BYTE PTR es:[edi],al
  40bab5:	popf   
  40bab6:	leave  
  40bab7:	pop    ss
  40bab8:	daa    
  40bab9:	ror    DWORD PTR [ecx+0x18],cl
  40babc:	ret    0x76e8
  40babf:	test   BYTE PTR [esi+eiz*8-0x2e8122db],ah
  40bac6:	es push 0x7737db79
  40bacc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bacd:	push   ecx
  40bace:	and    al,dh
  40bad0:	push   edx
  40bad1:	stos   BYTE PTR es:[edi],al
  40bad2:	push   cs
  40bad3:	push   ebx
  40bad4:	dec    ecx
  40bad5:	data16 xor ah,BYTE PTR [edi+0x4e]
  40bad9:	call   0xd884:0xf556a519
  40bae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bae1:	jnp    0x40ba94
  40bae3:	lea    eax,[ecx]
  40bae5:	xor    BYTE PTR [ebx+0x3868cebb],0xff
  40baec:	xchg   edi,eax
  40baed:	test   eax,0xf220b920
  40baf2:	hlt    
  40baf3:	cmp    dl,BYTE PTR [edx+eax*1+0x1490656b]
  40bafa:	cmp    eax,0x8b8cb8b3
  40baff:	xchg   ecx,esp
  40bb01:	fsubr  QWORD PTR [esi+0x2c]
  40bb04:	mov    edi,0xd9453890
  40bb09:	add    edx,ecx
  40bb0b:	fcmove st,st(4)
  40bb0d:	mov    eax,DWORD PTR [ebx]
  40bb0f:	aad    0x2e
  40bb11:	xchg   ebp,eax
  40bb12:	scas   al,BYTE PTR es:[edi]
  40bb13:	shr    DWORD PTR [ebp+0xf],cl
  40bb16:	or     dh,ah
  40bb18:	mov    dh,0xf7
  40bb1a:	add    eax,DWORD PTR [eax+0x50fc2169]
  40bb20:	xchg   BYTE PTR [esi-0xd],ah
  40bb23:	mov    BYTE PTR [esi-0x13],ah
  40bb26:	xchg   esi,eax
  40bb27:	inc    ebp
  40bb28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb29:	test   eax,0xaea77ee9
  40bb2e:	adc    BYTE PTR ds:0x6632b426,ch
  40bb34:	mov    ah,0xdd
  40bb36:	dec    ebx
  40bb37:	call   0x9021:0x970ee3c4
  40bb3e:	cli    
  40bb3f:	mov    al,ds:0x143ee2ec
  40bb44:	inc    esi
  40bb45:	and    DWORD PTR [ebp+0x497d391a],edx
  40bb4b:	clc    
  40bb4c:	cdq    
  40bb4d:	adc    al,0xad
  40bb4f:	js     0x40bb09
  40bb51:	fs gs gs ss add bl,dh
  40bb57:	mov    dh,0x7c
  40bb59:	icebp  
  40bb5a:	pop    eax
  40bb5b:	add    eax,0xdac1daa3
  40bb60:	popa   
  40bb61:	(bad)  
  40bb62:	adc    BYTE PTR [eax],dh
  40bb64:	xor    eax,0xed7cd8ec
  40bb69:	adc    eax,0xa50c710e
  40bb6e:	in     al,dx
  40bb6f:	push   edi
  40bb70:	pop    ebx
  40bb71:	fiadd  DWORD PTR ss:[ebx-0x119b10b]
  40bb78:	and    eax,0x5aaf015f
  40bb7d:	rol    dl,cl
  40bb7f:	inc    edx
  40bb80:	icebp  
  40bb81:	int3   
  40bb82:	mov    eax,ds:0x8c916012
  40bb87:	loope  0x40bb78
  40bb89:	sbb    eax,0x82569b71
  40bb8e:	pop    esp
  40bb8f:	test   al,0x4d
  40bb91:	and    al,0x28
  40bb93:	xchg   esp,eax
  40bb94:	invd   
  40bb96:	test   al,0x14
  40bb98:	push   ebp
  40bb99:	jb     0x40bb6c
  40bb9b:	cwde   
  40bb9c:	scas   eax,DWORD PTR es:[edi]
  40bb9d:	jg     0x40bb83
  40bb9f:	arpl   WORD PTR [edi],cx
  40bba1:	mov    DWORD PTR ds:0x926abb91,edi
  40bba7:	aaa    
  40bba8:	fwait
  40bba9:	adc    edx,DWORD PTR [edi+eiz*4-0x28]
  40bbad:	leave  
  40bbae:	dec    ebp
  40bbaf:	push   esp
  40bbb0:	and    DWORD PTR cs:[ebx+0x23],eax
  40bbb4:	or     BYTE PTR [esp+esi*1+0x2b],ch
  40bbb8:	jle    0x40bb5e
  40bbba:	shl    BYTE PTR [ebp-0x651a642b],cl
  40bbc0:	out    dx,al
  40bbc1:	inc    eax
  40bbc2:	int    0x2f
  40bbc4:	outs   dx,DWORD PTR ds:[esi]
  40bbc5:	stos   BYTE PTR es:[edi],al
  40bbc6:	adc    dh,BYTE PTR [edx]
  40bbc8:	or     eax,0x47b8aa83
  40bbcd:	shl    DWORD PTR ds:0x4a30da30,0x93
  40bbd4:	jmp    0x6e22:0x67db0ba6
  40bbdb:	inc    esi
  40bbdc:	(bad)  
  40bbdd:	clc    
  40bbde:	mov    esp,0x6a3aeddd
  40bbe3:	fcmovnu st,st(3)
  40bbe5:	mov    eax,0xf5a6ee36
  40bbea:	pop    eax
  40bbeb:	es dec edi
  40bbed:	test   eax,0xb6c49e08
  40bbf2:	add    BYTE PTR [esi+0x18af874e],0x5c
  40bbf9:	fcom   DWORD PTR [edx+0x373bf4d7]
  40bbff:	imul   ebp,DWORD PTR [edx+0xadb476b],0xf9d04854
  40bc09:	scas   eax,DWORD PTR es:[edi]
  40bc0a:	fst    st(6)
  40bc0c:	scas   al,BYTE PTR es:[edi]
  40bc0d:	inc    esp
  40bc0e:	dec    esi
  40bc0f:	push   0xffffffe8
  40bc11:	arpl   WORD PTR [eax],bx
  40bc13:	inc    esi
  40bc14:	mov    ah,0x9e
  40bc16:	fsubp  st(0),st
  40bc18:	(bad)  
  40bc19:	out    0xd7,al
  40bc1b:	icebp  
  40bc1c:	mov    ds:0xcb4db43e,eax
  40bc21:	rcr    BYTE PTR [ecx],1
  40bc23:	fnstcw WORD PTR [edx-0x53]
  40bc26:	ins    BYTE PTR es:[edi],dx
  40bc27:	and    al,0x9
  40bc29:	mov    WORD PTR [edi-0x28],ss
  40bc2c:	xor    eax,0xd9fe8e82
  40bc31:	lock scas al,BYTE PTR es:[edi]
  40bc33:	test   al,0xf8
  40bc35:	ret    
  40bc36:	lahf   
  40bc37:	lds    ebx,FWORD PTR [edi-0x49]
  40bc3a:	out    0x34,eax
  40bc3c:	cmp    BYTE PTR [ebp+0x5b],al
  40bc3f:	test   DWORD PTR ds:0xe90cc1cb,esi
  40bc45:	lahf   
  40bc46:	inc    edx
  40bc47:	sub    BYTE PTR [ecx],bh
  40bc49:	inc    edi
  40bc4a:	js     0x40bc95
  40bc4c:	or     bl,BYTE PTR [edx-0x2]
  40bc4f:	stos   DWORD PTR es:[edi],eax
  40bc50:	jl     0x40bc54
  40bc52:	cmp    dh,BYTE PTR [ebp+edx*2-0x7d]
  40bc56:	mov    al,0xd2
  40bc58:	xor    al,0x95
  40bc5a:	mov    esp,0x89e0f53a
  40bc5f:	scas   al,BYTE PTR es:[edi]
  40bc60:	out    0x70,al
  40bc62:	popa   
  40bc63:	xchg   ecx,eax
  40bc64:	(bad)  
  40bc65:	(bad)  
  40bc66:	mov    dh,0x7c
  40bc68:	les    edx,FWORD PTR ds:0xf56ad80d
  40bc6e:	inc    esp
  40bc6f:	cmp    BYTE PTR [ebp-0x44],ah
  40bc72:	cmc    
  40bc73:	push   cs
  40bc74:	(bad)
  40bc78:	cmc    
  40bc79:	in     eax,dx
  40bc7a:	shl    ah,0xea
  40bc7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc7e:	lods   al,BYTE PTR ds:[esi]
  40bc7f:	rcr    DWORD PTR [edx+0x18],0xd9
  40bc83:	data16 cli 
  40bc85:	mov    ebp,0x1e63157f
  40bc8a:	out    0xf,eax
  40bc8c:	inc    eax
  40bc8d:	push   es
  40bc8e:	jnp    0x40bc37
  40bc90:	fs sbb al,0x4a
  40bc93:	mov    al,0x49
  40bc95:	jl     0x40bcba
  40bc97:	sbb    al,0x31
  40bc99:	(bad)  
  40bc9a:	lahf   
  40bc9b:	fcom   QWORD PTR [ebp+0x17]
  40bc9e:	and    DWORD PTR [ebp-0x4b],eax
  40bca1:	gs inc esi
  40bca3:	je     0x40bcc7
  40bca5:	fistp  WORD PTR ds:0xbc1e7a7b
  40bcab:	cmp    eax,ebx
  40bcad:	xchg   esi,eax
  40bcae:	outs   dx,BYTE PTR ds:[esi]
  40bcaf:	in     al,dx
  40bcb0:	xlat   BYTE PTR ds:[ebx]
  40bcb1:	pop    edx
  40bcb2:	hlt    
  40bcb3:	cs sbb edi,eax
  40bcb6:	mov    ds:0xdc8bde4,eax
  40bcbb:	sub    edi,0xffffffbc
  40bcbe:	or     eax,0x9649b25c
  40bcc3:	jbe    0x40bd2b
  40bcc5:	push   ebx
  40bcc6:	test   eax,0x33f7581a
  40bccb:	mov    ch,0x28
  40bccd:	popf   
  40bcce:	mov    ah,0x8c
  40bcd0:	mov    ah,0xec
  40bcd2:	jmp    0xdcdf52d3
  40bcd7:	fadd   QWORD PTR [edi+0x72]
  40bcda:	sbb    BYTE PTR [ebx+edx*1+0x256b5b2c],al
  40bce1:	fisttp WORD PTR [edi-0x2314ba6b]
  40bce7:	jnp    0x40bcbf
  40bce9:	sbb    DWORD PTR [esi+ebx*8-0x18b9c150],esi
  40bcf0:	pop    esi
  40bcf1:	jae    0x40bc98
  40bcf3:	jb     0x40bd0b
  40bcf5:	inc    esi
  40bcf6:	ficom  WORD PTR [ebx]
  40bcf8:	pop    ecx
  40bcf9:	loopne 0x40bcf4
  40bcfb:	test   BYTE PTR [edx+0x41],dh
  40bcfe:	cmp    BYTE PTR [edi+0x4b72e3cc],dl
  40bd04:	into   
  40bd05:	inc    esp
  40bd06:	push   ebp
  40bd07:	dec    ebp
  40bd08:	push   cs
  40bd09:	adc    ch,BYTE PTR [eax-0x3b4b64bb]
  40bd0f:	inc    eax
  40bd10:	xlat   BYTE PTR ds:[ebx]
  40bd11:	xor    ebx,ecx
  40bd13:	shl    BYTE PTR [ecx-0x1c2d119e],cl
  40bd19:	push   0xffffffeb
  40bd1b:	pop    esi
  40bd1c:	ror    bl,cl
  40bd1e:	cs popf 
  40bd20:	ins    BYTE PTR es:[edi],dx
  40bd21:	ret    0x4fe4
  40bd24:	inc    edx
  40bd25:	loopne 0x40bda1
  40bd27:	sahf   
  40bd28:	sbb    eax,0x4836c893
  40bd2d:	sub    ebx,esi
  40bd2f:	loop   0x40bd9d
  40bd31:	fidiv  DWORD PTR [esi]
  40bd33:	adc    BYTE PTR [ebx],ch
  40bd35:	xor    al,0x5
  40bd37:	sti    
  40bd38:	pusha  
  40bd39:	pop    ebx
  40bd3a:	mov    dl,0x1a
  40bd3c:	push   ss
  40bd3d:	nop
  40bd3e:	jb     0x40bcf7
  40bd40:	ss cli 
  40bd42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd43:	pop    ebx
  40bd44:	and    eax,0xe50750f1
  40bd49:	inc    edi
  40bd4a:	sti    
  40bd4b:	ins    BYTE PTR es:[edi],dx
  40bd4c:	pop    edx
  40bd4d:	mov    cl,0x18
  40bd4f:	sar    dl,1
  40bd51:	ret    0x519c
  40bd54:	and    esi,DWORD PTR [ebx-0x23]
  40bd57:	in     eax,0xc2
  40bd59:	cmp    al,0xd8
  40bd5b:	mov    ah,BYTE PTR [esp+edx*1-0x5]
  40bd5f:	stos   DWORD PTR es:[edi],eax
  40bd60:	and    al,0x89
  40bd62:	and    ch,BYTE PTR [eax]
  40bd64:	push   es
  40bd65:	in     eax,0x94
  40bd67:	sub    edx,ecx
  40bd69:	and    DWORD PTR [ebp+esi*8+0x1c],eax
  40bd6d:	jo     0x40bdab
  40bd6f:	test   BYTE PTR [edx+0x37621b5c],ah
  40bd75:	pop    es
  40bd76:	xchg   DWORD PTR [ebx],esi
  40bd78:	add    al,0xa8
  40bd7a:	in     al,dx
  40bd7b:	outs   dx,DWORD PTR ds:[esi]
  40bd7c:	shr    esi,1
  40bd7e:	inc    DWORD PTR [ebx-0x6]
  40bd81:	jmp    0x9b73:0x4b2b3f53
  40bd88:	mov    ecx,0xbe41b13
  40bd8d:	inc    ecx
  40bd8e:	xor    esi,DWORD PTR [eax+ecx*8]
  40bd91:	inc    ebx
  40bd92:	push   ds
  40bd93:	out    0xb1,eax
  40bd95:	gs (bad) 
  40bd97:	iret   
  40bd98:	push   esp
  40bd99:	push   esp
  40bd9a:	sub    ebp,esi
  40bd9c:	fiadd  WORD PTR [esi]
  40bd9e:	shr    DWORD PTR [ebx+0x44b7b38e],1
  40bda4:	pop    esp
  40bda5:	pop    ecx
  40bda6:	push   ds
  40bda7:	mov    al,0xfd
  40bda9:	call   0x8fb2:0x82d95b
  40bdb0:	lock sbb DWORD PTR [ecx+0x678484fa],esp
  40bdb7:	clc    
  40bdb8:	mov    edx,0x3b7c7da
  40bdbd:	add    edi,DWORD PTR [edx]
  40bdbf:	lahf   
  40bdc0:	mov    WORD PTR [esi],?
  40bdc2:	scas   al,BYTE PTR es:[edi]
  40bdc3:	adc    DWORD PTR [ebx+eiz*4+0x4c],esp
  40bdc7:	sub    DWORD PTR [ecx-0x70],0x1e
  40bdcb:	dec    eax
  40bdcc:	aaa    
  40bdcd:	mov    ?,WORD PTR ds:0x773622e9
  40bdd3:	addr16 pop edx
  40bdd5:	cdq    
  40bdd6:	cs repz xchg ebp,eax
  40bdd9:	imul   ebp,DWORD PTR gs:[edx],0xffffffe2
  40bddd:	lds    edi,FWORD PTR [eax+0x578b9fc5]
  40bde3:	js     0x40bdb5
  40bde5:	rcr    BYTE PTR [eax],0xbb
  40bde8:	push   ss
  40bde9:	imul   ecx,DWORD PTR [eax-0x10df5e85],0xffffffbe
  40bdf0:	mov    bl,0x5b
  40bdf2:	jp     0x40bd9e
  40bdf4:	in     al,0x5
  40bdf6:	jne    0x40be01
  40bdf8:	stos   DWORD PTR es:[edi],eax
  40bdf9:	mov    edi,0x499c626d
  40bdfe:	in     al,0x7b
  40be00:	xchg   ecx,eax
  40be01:	xchg   ch,ah
  40be03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be04:	shr    BYTE PTR [edi-0x3f2272e8],1
  40be0a:	ja     0x40be7a
  40be0c:	std    
  40be0d:	in     al,dx
  40be0e:	(bad)  
  40be10:	xchg   ebx,eax
  40be11:	push   ebx
  40be12:	call   0x26e3:0x5a919d3f
  40be19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be1a:	xchg   ebx,eax
  40be1b:	cmp    DWORD PTR [eax+esi*1],ecx
  40be1e:	in     eax,0x4a
  40be20:	mov    edi,DWORD PTR [esi+0x7d]
  40be23:	mov    ah,0x3d
  40be25:	(bad)  
  40be26:	mov    ds:0x12dcb439,eax
  40be2b:	pop    ebp
  40be2c:	repnz addr16 xchg esi,eax
  40be2f:	loope  0x40bdcb
  40be31:	xor    ecx,DWORD PTR [eax+0x301f5bc4]
  40be37:	jnp    0x40beb1
  40be39:	and    ebx,esi
  40be3b:	mov    ebx,0x29bda190
  40be40:	cmp    ecx,edi
  40be42:	jle    0x40bdca
  40be44:	das    
  40be45:	mov    ebx,0x19d0f355
  40be4a:	in     eax,dx
  40be4b:	outs   dx,BYTE PTR ds:[esi]
  40be4c:	paddb  mm6,QWORD PTR [esi]
  40be4f:	fs into 
  40be51:	cmp    DWORD PTR [ecx+eiz*1-0x36],edx
  40be55:	aad    0xa4
  40be57:	test   al,0x33
  40be59:	or     ch,bl
  40be5b:	adc    eax,0x998c85ac
  40be60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be61:	das    
  40be62:	xchg   ecx,eax
  40be63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be64:	sti    
  40be65:	sub    al,0x21
  40be67:	mov    WORD PTR [esi-0x75],cs
  40be6a:	jmp    0xdc6072c0
  40be6f:	xor    BYTE PTR [eax],al
  40be71:	in     al,0x30
  40be73:	and    eax,0x1822f717
  40be78:	imul   esi,DWORD PTR [ecx+0x3b],0x6319eef5
  40be7f:	mov    esi,0xdc60dc65
  40be84:	ror    BYTE PTR [ebp+0xa53da4c],0xca
  40be8b:	ss in  eax,0x81
  40be8e:	pop    esi
  40be8f:	pop    ebx
  40be90:	jl     0x40bed6
  40be92:	adc    DWORD PTR [edi-0x5b],ebx
  40be95:	mov    cl,BYTE PTR [eax]
  40be97:	add    al,0x2c
  40be99:	mov    es:0x7c8f279f,al
  40be9f:	jnp    0x40be2f
  40bea1:	mov    esp,0x46ee00bb
  40bea6:	inc    edi
  40bea7:	call   0x4bde4aa4
  40beac:	mov    edi,0xdd2a0e0b
  40beb1:	std    
  40beb2:	push   edi
  40beb3:	xor    al,0xeb
  40beb5:	mov    al,BYTE PTR [edi+ebp*4-0x64]
  40beb9:	pop    edi
  40beba:	mov    ebp,0xc37b59d7
  40bebf:	mov    DWORD PTR [eax-0x400d4397],edx
  40bec5:	outs   dx,BYTE PTR ds:[esi]
  40bec6:	(bad)  
  40bec7:	leave  
  40bec8:	daa    
  40bec9:	xchg   edi,eax
  40beca:	pop    ebp
  40becb:	out    dx,al
  40becc:	lods   al,BYTE PTR ds:[esi]
  40becd:	mov    dh,0x2f
  40becf:	xchg   edi,eax
  40bed0:	hlt    
  40bed1:	loope  0x40bef1
  40bed3:	repz repnz push eax
  40bed6:	mov    al,ds:0xa946fc94
  40bedb:	push   edi
  40bedc:	mov    es,WORD PTR [eax+0x27ea9fd9]
  40bee2:	xchg   edx,eax
  40bee3:	cmc    
  40bee4:	lods   al,BYTE PTR ds:[esi]
  40bee5:	scas   al,BYTE PTR es:[edi]
  40bee6:	or     al,0xf4
  40bee8:	jp     0x40bf3e
  40beea:	lea    eax,[ecx-0x68721a2e]
  40bef0:	pop    sp
  40bef2:	leave  
  40bef3:	pop    eax
  40bef4:	dec    edx
  40bef5:	adc    ecx,ecx
  40bef7:	cdq    
  40bef8:	xchg   esp,eax
  40bef9:	mov    edi,0xb61686f4
  40befe:	int3   
  40beff:	fsub   DWORD PTR [edx]
  40bf01:	jge    0x40beb5
  40bf03:	fsubr  QWORD PTR [ecx]
  40bf05:	sti    
  40bf06:	cmp    eax,DWORD PTR [edx+0x14]
  40bf09:	dec    edi
  40bf0a:	push   0x769af3ec
  40bf0f:	cmp    dl,bh
  40bf11:	aam    0x1d
  40bf13:	adc    al,0x85
  40bf15:	fistp  WORD PTR [eax-0x42]
  40bf18:	int    0x9d
  40bf1a:	and    ebp,0x21b380d5
  40bf20:	push   eax
  40bf21:	mov    ecx,0xa25b8b59
  40bf26:	dec    esi
  40bf27:	fucompp 
  40bf29:	sti    
  40bf2a:	rcl    ch,cl
  40bf2c:	sahf   
  40bf2d:	je     0x40bf7f
  40bf2f:	enter  0xab7f,0xe8
  40bf33:	repz jo 0x40bedf
  40bf36:	push   eax
  40bf37:	fwait
  40bf38:	mov    bl,0x87
  40bf3a:	hlt    
  40bf3b:	or     al,BYTE PTR [esi]
  40bf3d:	shl    DWORD PTR [ebx],0x37
  40bf40:	std    
  40bf41:	lods   eax,DWORD PTR ds:[esi]
  40bf42:	sti    
  40bf43:	cdq    
  40bf44:	popa   
  40bf45:	ja     0x40bf1a
  40bf47:	lea    eax,[ebx+0x321fd9c2]
  40bf4d:	inc    esi
  40bf4e:	add    DWORD PTR [esi+0x8],ebp
  40bf51:	adc    ah,al
  40bf53:	outs   dx,BYTE PTR ds:[esi]
  40bf54:	inc    ebx
  40bf55:	leave  
  40bf56:	in     al,dx
  40bf57:	mov    esp,0x95b4e4d3
  40bf5c:	jl     0x40bf18
  40bf5e:	test   eax,0x98e89479
  40bf63:	shl    DWORD PTR [ecx-0xeda7690],cl
  40bf69:	mov    ds:0xcaa2598a,al
  40bf6e:	inc    eax
  40bf6f:	and    eax,0xad9d259e
  40bf74:	scas   al,BYTE PTR es:[edi]
  40bf75:	enter  0x2292,0x82
  40bf79:	sub    eax,0xed5e09fe
  40bf7e:	jo     0x40bf5f
  40bf80:	inc    ebp
  40bf81:	fwait
  40bf82:	sub    DWORD PTR [edx+0x2f],esp
  40bf85:	pop    edx
  40bf86:	or     eax,0x74ed334
  40bf8b:	lea    ebx,[ecx+0x3a]
  40bf8e:	pop    esp
  40bf8f:	shl    DWORD PTR [ecx-0x76],0x74
  40bf93:	imul   ebx,DWORD PTR ds:0x52b46496,0xffffffad
  40bf9a:	inc    edx
  40bf9b:	xor    cl,BYTE PTR [eax+0x7ea14e59]
  40bfa1:	enter  0x454b,0x6f
  40bfa5:	mov    eax,0xd3662c09
  40bfaa:	sub    bl,BYTE PTR [ecx]
  40bfac:	inc    edx
  40bfad:	pop    edi
  40bfae:	retf   0x3628
  40bfb1:	fimul  DWORD PTR [edx-0x6e]
  40bfb4:	xor    bl,BYTE PTR [eax]
  40bfb6:	jns    0x40c036
  40bfb8:	in     eax,dx
  40bfb9:	dec    eax
  40bfba:	scas   al,BYTE PTR es:[edi]
  40bfbb:	loopne 0x40c038
  40bfbd:	aaa    
  40bfbe:	add    esi,esp
  40bfc0:	push   esp
  40bfc1:	ins    DWORD PTR es:[edi],dx
  40bfc2:	xchg   ebx,eax
  40bfc3:	push   ecx
  40bfc4:	pop    eax
  40bfc5:	popa   
  40bfc6:	pop    ecx
  40bfc7:	aas    
  40bfc8:	mov    esi,0x8f2bb297
  40bfcd:	mov    ch,0x8b
  40bfcf:	(bad)  
  40bfd0:	jecxz  0x40bf7d
  40bfd2:	cwde   
  40bfd3:	jns    0x40bfc2
  40bfd5:	xchg   esp,eax
  40bfd6:	mov    esi,0x750be3af
  40bfdb:	dec    esi
  40bfdc:	xchg   esp,eax
  40bfdd:	jl     0x40c009
  40bfdf:	pop    edi
  40bfe0:	xor    eax,0x29ebe3b6
  40bfe5:	jl     0x40bf73
  40bfe7:	dec    ebp
  40bfe8:	or     cl,BYTE PTR [eax+0x6226f480]
  40bfee:	lahf   
  40bfef:	not    DWORD PTR [eax+0x35]
  40bff2:	sbb    BYTE PTR [edi-0x17],dh
  40bff5:	push   ss
  40bff6:	loope  0x40bfa6
  40bff8:	cld    
  40bff9:	jmp    0x6b256296
  40bffe:	mov    esi,0x99d7a0a
  40c003:	test   edx,eax
  40c005:	call   DWORD PTR [edi]
  40c007:	addr16 fwait
  40c009:	and    al,0x6a
  40c00b:	loope  0x40c05d
  40c00d:	repnz mov eax,ds:0xb7909f40
  40c013:	xor    DWORD PTR [edi],edi
  40c015:	adc    eax,0x68a03911
  40c01a:	push   ds
  40c01b:	cs in  eax,0xb2
  40c01e:	test   al,0xeb
  40c020:	push   esi
  40c021:	push   ebp
  40c022:	xor    al,0x2e
  40c024:	ja     0x40c041
  40c026:	xchg   esp,eax
  40c027:	fsub   QWORD PTR [ebp+0x3dc9cf44]
  40c02d:	mov    BYTE PTR [edx+eiz*4-0x31],al
  40c031:	imul   esp,DWORD PTR [ebx],0x1c
  40c034:	lock inc edx
  40c036:	pop    edi
  40c037:	cmc    
  40c038:	sar    DWORD PTR [eax+0x6464790a],0x7
  40c03f:	(bad)  
  40c040:	js     0x40c090
  40c042:	mov    eax,ds:0xc662deb8
  40c047:	aas    
  40c048:	or     ecx,DWORD PTR [ebp-0x7a98c2f6]
  40c04e:	outs   dx,DWORD PTR ds:[esi]
  40c04f:	pop    ebx
  40c050:	add    DWORD PTR [edx+0x53],ebp
  40c053:	fld    TBYTE PTR [ecx]
  40c055:	sbb    al,0x51
  40c057:	sbb    bl,BYTE PTR [ecx-0x1ed033d]
  40c05d:	mov    edx,0xfd883385
  40c062:	jne    0x40bff7
  40c064:	jl     0x40c097
  40c066:	mov    eax,0xa6ad19e
  40c06b:	pop    ds
  40c06c:	aad    0x24
  40c06e:	inc    ebx
  40c06f:	es xor edi,ebp
  40c072:	pop    eax
  40c073:	div    BYTE PTR [edi+0x9]
  40c076:	adc    ebx,edi
  40c078:	sub    bl,BYTE PTR [edi-0x30]
  40c07b:	shl    BYTE PTR [edx+0x41097ad1],0xcf
  40c082:	pushf  
  40c083:	popa   
  40c084:	xlat   BYTE PTR ds:[ebx]
  40c085:	jecxz  0x40c028
  40c087:	push   ebx
  40c088:	jne    0x40c0dc
  40c08a:	push   eax
  40c08b:	fld    QWORD PTR [ebp+0x5f]
  40c08e:	adc    eax,0x5b118200
  40c093:	pop    edx
  40c094:	pop    ss
  40c095:	aas    
  40c096:	fdiv   st,st(3)
  40c098:	jae    0x40c06d
  40c09a:	sbb    BYTE PTR [ecx],0xbe
  40c09d:	cmc    
  40c09e:	mov    esp,0x5f59642b
  40c0a3:	mov    ds:0xec9fb5b0,eax
  40c0a8:	in     eax,dx
  40c0a9:	sub    al,0x2a
  40c0ab:	rcl    dl,0xeb
  40c0ae:	pop    edx
  40c0af:	jb     0x40c125
  40c0b1:	pop    DWORD PTR [ebx-0x80]
  40c0b4:	ds inc edx
  40c0b6:	loopne 0x40c09f
  40c0b8:	ror    DWORD PTR [edi],cl
  40c0ba:	xchg   BYTE PTR [eax+0x77],ah
  40c0bd:	std    
  40c0be:	xchg   bl,ah
  40c0c0:	inc    edi
  40c0c1:	in     al,0xe1
  40c0c3:	pop    esi
  40c0c4:	dec    esp
  40c0c5:	mov    eax,ds
  40c0c7:	(bad)  
  40c0c8:	lods   al,BYTE PTR ds:[esi]
  40c0c9:	cs add eax,0xfac1cf39
  40c0cf:	jmp    0x2c12cc7f
  40c0d4:	addr16 cmp al,0x28
  40c0d7:	xlat   BYTE PTR ds:[ebx]
  40c0d8:	jbe    0x40c0de
  40c0da:	push   edx
  40c0db:	jecxz  0x40c08a
  40c0dd:	je     0x40c0d0
  40c0df:	aam    0x8b
  40c0e1:	call   0x52a6771d
  40c0e6:	adc    esi,DWORD PTR [eax]
  40c0e8:	and    BYTE PTR [edx],ch
  40c0ea:	mov    ebp,0xe83f6953
  40c0ef:	inc    esi
  40c0f0:	int3   
  40c0f1:	mov    al,ds:0xf225293
  40c0f6:	nop
  40c0f7:	(bad)
  40c0fa:	fst    DWORD PTR [esi-0x68fd33b]
  40c100:	xlat   BYTE PTR ds:[ebx]
  40c101:	cld    
  40c102:	outs   dx,BYTE PTR ds:[esi]
  40c103:	dec    edi
  40c104:	mov    edi,0x919a75b1
  40c109:	push   ebx
  40c10a:	cmp    ecx,DWORD PTR [esi+0x65]
  40c10d:	xchg   ebp,eax
  40c10e:	add    edx,DWORD PTR [edx+0x43187da]
  40c114:	mov    ecx,0x75e1d375
  40c119:	sub    dh,dl
  40c11b:	icebp  
  40c11c:	or     eax,0x3556d92d
  40c121:	mov    edx,0x41344305
  40c126:	push   cs
  40c127:	stos   BYTE PTR es:[edi],al
  40c128:	xchg   ebx,eax
  40c129:	rol    DWORD PTR [ebx],cl
  40c12b:	xchg   edx,eax
  40c12c:	test   eax,esi
  40c12e:	fsubp  st(0),st
  40c130:	push   ecx
  40c131:	jae    0x40c0eb
  40c133:	and    ebx,ebp
  40c135:	fcom   DWORD PTR [ebx-0x26]
  40c138:	adc    DWORD PTR [esi],ebx
  40c13a:	xchg   BYTE PTR [esi+edx*1+0x13e5ad13],ch
  40c141:	push   es
  40c142:	lods   al,BYTE PTR ds:[esi]
  40c143:	sbb    esi,DWORD PTR [eax]
  40c145:	cmp    dh,dl
  40c147:	unpcklps xmm0,XMMWORD PTR [edx+0x4e1d26c3]
  40c14e:	mov    WORD PTR [edx],fs
  40c150:	in     al,dx
  40c151:	or     al,0xbf
  40c153:	dec    esp
  40c154:	adc    al,0xef
  40c156:	scas   al,BYTE PTR es:[edi]
  40c157:	out    dx,eax
  40c158:	mov    cl,0xa9
  40c15a:	enter  0xa81f,0xba
  40c15e:	loope  0x40c143
  40c160:	push   ecx
  40c161:	pop    edi
  40c162:	das    
  40c163:	dec    ecx
  40c164:	or     DWORD PTR [edx+0x118c656],0x8d0765cb
  40c16e:	test   DWORD PTR [ebx],0xa44ffe49
  40c174:	loope  0x40c12b
  40c176:	mov    al,ds:0xd98f9c1a
  40c17b:	mov    ah,0x5f
  40c17d:	cmc    
  40c17e:	shl    BYTE PTR [edi-0x2afd27cb],cl
  40c184:	rol    BYTE PTR [ecx-0x4153b3d3],1
  40c18a:	sti    
  40c18b:	sbb    eax,0x1a60b8e
  40c190:	pop    ecx
  40c191:	mov    al,0x0
  40c193:	or     bl,BYTE PTR [eax-0x1e]
  40c196:	(bad)  
  40c197:	and    cl,BYTE PTR [eax]
  40c199:	test   BYTE PTR [ebp-0xcdfd457],bl
  40c19f:	(bad)  
  40c1a1:	mov    WORD PTR [edi],gs
  40c1a3:	mov    ecx,0xced883a2
  40c1a8:	in     eax,dx
  40c1a9:	mov    bh,0xfa
  40c1ab:	add    al,0xf8
  40c1ad:	scas   eax,DWORD PTR es:[edi]
  40c1ae:	stc    
  40c1af:	and    esp,DWORD PTR [esi+0x79aa1179]
  40c1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1b6:	jge    0x40c20c
  40c1b8:	xchg   ebp,eax
  40c1b9:	xchg   esi,eax
  40c1ba:	addr16 ret 0x5261
  40c1be:	xor    BYTE PTR [edx+eiz*4-0x37],ch
  40c1c2:	or     al,0x37
  40c1c4:	cmp    eax,0x245d8d2a
  40c1c9:	clc    
  40c1ca:	push   0x57
  40c1cc:	fmul   DWORD PTR [ebx+0x1abd40d5]
  40c1d2:	mov    cl,0xc3
  40c1d4:	push   ds
  40c1d5:	ss aam 0x3b
  40c1d8:	call   0x2acf4c71
  40c1dd:	jo     0x40c162
  40c1df:	hlt    
  40c1e0:	or     al,0x29
  40c1e2:	dec    ecx
  40c1e3:	mov    esi,0x2034b843
  40c1e8:	pushf  
  40c1e9:	ret    
  40c1ea:	jo     0x40c201
  40c1ec:	jl     0x40c241
  40c1ee:	jmp    0x217e:0xc6f929d4
  40c1f5:	cli    
  40c1f6:	adc    DWORD PTR [esi+0x73],eax
  40c1f9:	rol    dh,1
  40c1fb:	sbb    DWORD PTR [ecx-0x80],edi
  40c1fe:	cmp    DWORD PTR [ebp+0x3556934c],0x24612d38
  40c208:	mov    cl,0x3c
  40c20a:	aad    0xb0
  40c20c:	fdiv   st,st(1)
  40c20e:	test   DWORD PTR [edx+ebp*8+0x9363302],esp
  40c215:	xchg   esp,eax
  40c216:	push   esp
  40c217:	into   
  40c218:	xor    esp,DWORD PTR [esi+0x5]
  40c21b:	cmp    eax,0x9e1c984
  40c220:	pop    edx
  40c221:	ja     0x40c20b
  40c223:	lahf   
  40c224:	retf   
  40c225:	or     ch,bl
  40c227:	inc    ecx
  40c228:	cmp    ch,0x2e
  40c22b:	pop    es
  40c22c:	push   0x1229928d
  40c231:	pop    es
  40c232:	add    ebp,ebp
  40c234:	jge    0x40c24d
  40c236:	adc    al,ah
  40c238:	ss jg  0x40c1f0
  40c23b:	or     BYTE PTR [esi],bh
  40c23d:	add    DWORD PTR [esi-0x6b],ebp
  40c240:	push   0x60517ef
  40c245:	cs xchg esp,eax
  40c247:	sub    al,0xff
  40c249:	xchg   esi,eax
  40c24a:	test   eax,0xc7d3d2f3
  40c24f:	sar    BYTE PTR [edi],0xd3
  40c252:	ins    BYTE PTR es:[edi],dx
  40c253:	aas    
  40c254:	arpl   WORD PTR [edx],si
  40c256:	outs   dx,BYTE PTR ds:[esi]
  40c257:	out    dx,eax
  40c258:	and    dl,0x6f
  40c25b:	sahf   
  40c25c:	mov    al,ds:0xf1ae39f2
  40c261:	retf   
  40c262:	test   eax,0x7e131d43
  40c267:	pop    esp
  40c268:	imul   edx,ecx,0xffffffa3
  40c26b:	stos   BYTE PTR es:[edi],al
  40c26c:	lods   al,BYTE PTR ds:[esi]
  40c26e:	shl    al,0x63
  40c271:	and    al,0x42
  40c273:	outs   dx,DWORD PTR ds:[esi]
  40c274:	or     eax,0x8ea4bd3d
  40c279:	inc    edx
  40c27a:	div    edx
  40c27c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c27d:	jge    0x40c2ea
  40c27f:	std    
  40c280:	fsubr  QWORD PTR [ecx]
  40c282:	inc    edi
  40c283:	xchg   ecx,eax
  40c284:	sbb    eax,0x50243e8e
  40c289:	push   ds
  40c28a:	aas    
  40c28b:	lods   eax,DWORD PTR ds:[esi]
  40c28c:	sar    BYTE PTR [ecx+0x5830c88d],1
  40c292:	jae    0x40c29f
  40c294:	dec    ebp
  40c295:	dec    edx
  40c296:	xchg   edx,eax
  40c297:	fistp  QWORD PTR [edi+0x4b]
  40c29a:	or     ebx,DWORD PTR [ecx+0x12]
  40c29d:	out    0xc7,eax
  40c29f:	fs neg esp
  40c2a2:	and    DWORD PTR [ebx-0x62],ebx
  40c2a5:	xchg   BYTE PTR [esi+ebx*1-0x7bad248],bl
  40c2ac:	repnz mov ah,0x72
  40c2af:	xor    al,0xb9
  40c2b1:	sete   BYTE PTR [esi+0x0]
  40c2b5:	std    
  40c2b6:	cli    
  40c2b7:	cmp    ecx,DWORD PTR [edi-0x2c]
  40c2ba:	lods   eax,DWORD PTR ds:[esi]
  40c2bb:	dec    edx
  40c2bc:	mov    ch,0x72
  40c2be:	jecxz  0x40c242
  40c2c0:	xor    BYTE PTR [ebx+ebx*8-0x4a],ch
  40c2c4:	aas    
  40c2c5:	xchg   esp,eax
  40c2c6:	push   es
  40c2c7:	mov    al,ds:0x9a5dab28
  40c2cc:	inc    ebx
  40c2cd:	fsubr  QWORD PTR [ebx-0x6cbc930d]
  40c2d3:	jg     0x40c320
  40c2d5:	imul   bh
  40c2d7:	icebp  
  40c2d8:	fisubr WORD PTR [edx+0x354f5d19]
  40c2de:	int3   
  40c2df:	xchg   DWORD PTR [edx-0x63],edi
  40c2e2:	std    
  40c2e3:	jnp    0x40c27c
  40c2e5:	out    0x9d,al
  40c2e7:	xchg   ebp,eax
  40c2e8:	lods   eax,DWORD PTR ds:[esi]
  40c2e9:	out    0x79,eax
  40c2eb:	jns    0x40c2aa
  40c2ed:	cmp    BYTE PTR [ebx+ebp*4+0x17],cl
  40c2f1:	mov    edx,0x32edd017
  40c2f6:	xor    dl,al
  40c2f8:	add    edi,DWORD PTR [ecx]
  40c2fa:	sbb    eax,0x7a6a3ac3
  40c2ff:	push   edi
  40c300:	(bad)  
  40c301:	cmp    al,0x80
  40c303:	call   FWORD PTR [eax]
  40c305:	out    0x53,al
  40c307:	fsubr  DWORD PTR [eax+0x28bb1005]
  40c30d:	int    0x9d
  40c30f:	test   al,0xf7
  40c311:	out    dx,al
  40c312:	ins    DWORD PTR es:[edi],dx
  40c313:	enter  0x8203,0xe1
  40c317:	lods   eax,DWORD PTR ds:[esi]
  40c318:	cmp    DWORD PTR [ecx-0x75f81d71],ebp
  40c31e:	fwait
  40c31f:	das    
  40c320:	jno    0x40c302
  40c322:	cwde   
  40c323:	adc    ch,BYTE PTR [ecx+0x1b8104c0]
  40c329:	addr16 sbb al,0x2d
  40c32c:	lock cs fs xchg ebp,eax
  40c330:	stos   DWORD PTR es:[edi],eax
  40c331:	(bad)  
  40c332:	outs   dx,BYTE PTR ds:[esi]
  40c333:	pop    esi
  40c334:	sbb    eax,esi
  40c336:	push   ss
  40c337:	stc    
  40c338:	ins    DWORD PTR es:[edi],dx
  40c339:	inc    edx
  40c33a:	sbb    al,0xfe
  40c33c:	cmp    ebx,DWORD PTR [edi+0x65]
  40c33f:	loope  0x40c331
  40c341:	jb     0x40c36a
  40c343:	jp     0x40c2cf
  40c345:	sub    bl,dl
  40c347:	push   es
  40c348:	cli    
  40c349:	daa    
  40c34a:	push   edx
  40c34b:	jnp    0x40c328
  40c34d:	int3   
  40c34e:	pop    es
  40c34f:	in     al,dx
  40c350:	sbb    al,0x5b
  40c352:	pop    ebx
  40c353:	sub    ebx,ebx
  40c355:	add    BYTE PTR [edi+0x22ba7516],ah
  40c35b:	jg     0x40c324
  40c35d:	pop    edx
  40c35e:	and    BYTE PTR [ecx],0xcc
  40c361:	mov    ecx,0xaadf0ff7
  40c366:	mov    eax,0x8e300aa9
  40c36b:	es sti 
  40c36d:	fisubr DWORD PTR [ecx+0x26a93ab3]
  40c373:	aad    0x31
  40c375:	jae    0x40c3d9
  40c377:	add    BYTE PTR [ecx],dh
  40c379:	adc    ah,BYTE PTR [esi+0x58a4a755]
  40c37f:	pop    ss
  40c380:	xchg   ebp,eax
  40c381:	and    eax,0xbf7b2b1d
  40c386:	call   0x8d89e002
  40c38b:	into   
  40c38c:	in     al,0xbf
  40c38e:	push   es
  40c38f:	ret    0xd5fa
  40c392:	sbb    cl,BYTE PTR [ebx]
  40c394:	out    dx,eax
  40c395:	push   ebx
  40c396:	sub    dl,al
  40c398:	fs jge 0x40c366
  40c39b:	rcr    DWORD PTR [edi+edi*2],cl
  40c39e:	jp     0x40c33a
  40c3a0:	js     0x40c3bd
  40c3a2:	out    dx,eax
  40c3a3:	es dec eax
  40c3a5:	push   ebx
  40c3a6:	loopne 0x40c363
  40c3a8:	mov    eax,DWORD PTR [ebp-0x5d28279e]
  40c3ae:	(bad)  
  40c3af:	out    dx,eax
  40c3b0:	inc    eax
  40c3b1:	xor    al,0x54
  40c3b3:	dec    esi
  40c3b4:	fisubr WORD PTR [edx+esi*1]
  40c3b7:	enter  0xc720,0x2f
  40c3bb:	iret   
  40c3bc:	pop    ebx
  40c3bd:	je     0x40c34e
  40c3bf:	pop    ebx
  40c3c0:	sbb    ebp,edx
  40c3c2:	sub    al,0x23
  40c3c4:	cli    
  40c3c5:	mov    DWORD PTR [edx],eax
  40c3c7:	sbb    ebp,DWORD PTR [ebx]
  40c3c9:	push   DWORD PTR [ebp+0x8]
  40c3cc:	pop    ds
  40c3cd:	lahf   
  40c3ce:	adc    BYTE PTR [esi+0x5d],ch
  40c3d1:	mov    ds:0x9ea5ef49,eax
  40c3d6:	clc    
  40c3d7:	repnz std 
  40c3d9:	jp     0x40c404
  40c3db:	cmp    esp,DWORD PTR [edi+0x6d]
  40c3de:	xchg   ebx,eax
  40c3df:	mov    ebp,0x48bfaa5a
  40c3e4:	pop    eax
  40c3e5:	(bad)  
  40c3e6:	lods   eax,DWORD PTR es:[esi]
  40c3e8:	shl    BYTE PTR [edi-0x2e],0x59
  40c3ec:	retf   
  40c3ed:	call   0xe1a3:0x5626c389
  40c3f4:	clc    
  40c3f5:	int    0x1b
  40c3f7:	add    eax,0x5d3a243d
  40c3fc:	and    BYTE PTR [eax-0x5cdd585d],0x2d
  40c403:	jb     0x40c3fc
  40c405:	mov    esp,0xebd3e2ba
  40c40a:	jecxz  0x40c3da
  40c40c:	ins    BYTE PTR es:[edi],dx
  40c40d:	add    al,0x9d
  40c40f:	jg     0x40c453
  40c411:	push   eax
  40c412:	dec    ebx
  40c413:	retf   0xb6f
  40c416:	cmp    eax,0x1754a3dd
  40c41b:	add    eax,0xd62be7d2
  40c420:	push   esp
  40c421:	js     0x40c3f6
  40c423:	push   edi
  40c424:	rcr    cl,0x5c
  40c427:	or     DWORD PTR [eax+0x2a],esi
  40c42a:	lea    esi,[ebx+0x5e9c956f]
  40c430:	je     0x40c3fb
  40c432:	dec    eax
  40c433:	dec    eax
  40c434:	xchg   edx,eax
  40c435:	or     BYTE PTR [eax+0x1be6d6a4],ah
  40c43b:	addr16 inc ebp
  40c43d:	std    
  40c43e:	aaa    
  40c43f:	imul   eax,DWORD PTR [edx-0x33bee954],0xb3b64c78
  40c449:	stos   DWORD PTR es:[edi],eax
  40c44a:	pusha  
  40c44b:	jo     0x40c449
  40c44d:	pop    ebx
  40c44e:	popf   
  40c44f:	jecxz  0x40c449
  40c451:	imul   edi,DWORD PTR [ebp-0x28980c66],0x70ce986e
  40c45b:	sub    al,0x72
  40c45d:	inc    ebx
  40c45e:	jb     0x40c3e2
  40c460:	mov    dl,0x9f
  40c462:	shl    DWORD PTR [ebp+0x497cde2e],cl
  40c468:	dec    ebx
  40c469:	sbb    BYTE PTR [eax],0x87
  40c46c:	outs   dx,DWORD PTR ds:[esi]
  40c46d:	adc    BYTE PTR [esi],0xde
  40c470:	outs   dx,DWORD PTR ds:[esi]
  40c471:	adc    dh,0x2e
  40c474:	data16 sbb BYTE PTR [esp+esi*2-0x6c],cl
  40c479:	call   0x8e4e:0xa822a393
  40c480:	xlat   BYTE PTR ds:[ebx]
  40c481:	lds    ebp,FWORD PTR [edi+ecx*8-0xc3da494]
  40c488:	xchg   edx,eax
  40c489:	mov    edx,0xfcb7d299
  40c48e:	add    DWORD PTR [ebx+ebp*8+0x3a],edi
  40c492:	je     0x40c4fc
  40c494:	arpl   bp,ax
  40c496:	repz lahf 
  40c498:	mov    dh,0x2e
  40c49a:	lea    ebp,[edx+0x6357fc9]
  40c4a0:	xor    eax,0x1329189a
  40c4a5:	aas    
  40c4a6:	jno    0x40c440
  40c4a8:	int    0xee
  40c4aa:	mov    al,0xe
  40c4ac:	loopne 0x40c4d5
  40c4ae:	cmovo  edx,esp
  40c4b1:	mov    esi,0xa2cb461e
  40c4b6:	inc    ebp
  40c4b7:	bound  ebp,QWORD PTR [esi]
  40c4b9:	xchg   ebp,eax
  40c4ba:	ret    
  40c4bb:	and    esi,DWORD PTR [esi]
  40c4bd:	(bad)
  40c4c0:	cmc    
  40c4c1:	sub    al,0x48
  40c4c3:	call   0x99a3:0x53c627d2
  40c4ca:	aaa    
  40c4cb:	popf   
  40c4cc:	cs jb  0x40c4bc
  40c4cf:	dec    ebx
  40c4d0:	shl    DWORD PTR [edx+0x64],cl
  40c4d3:	jmp    0xaefc6c81
  40c4d8:	std    
  40c4d9:	adc    al,0x5
  40c4db:	outs   dx,DWORD PTR ds:[esi]
  40c4dc:	or     BYTE PTR [eax-0x61],0x2a
  40c4e0:	or     DWORD PTR [edx+0x1d],esi
  40c4e3:	dec    esi
  40c4e4:	add    dh,BYTE PTR [edi+0x55]
  40c4e7:	mov    esi,0xad491512
  40c4ec:	push   edi
  40c4ed:	adc    BYTE PTR [ecx-0x224b3af9],ch
  40c4f3:	out    dx,eax
  40c4f4:	ds pop es
  40c4f6:	cs dec edi
  40c4f8:	dec    esi
  40c4f9:	fld    QWORD PTR [ebp+0x2d]
  40c4fc:	xor    al,0x49
  40c4fe:	mov    BYTE PTR [edx+ebp*8],bh
  40c501:	mov    ah,0xb3
  40c503:	cmp    eax,0xd79e43e8
  40c508:	mov    BYTE PTR [edx],ch
  40c50a:	mov    esp,DWORD PTR [esi+0x5876511a]
  40c510:	aas    
  40c511:	rcl    BYTE PTR [ecx+0x1fc81dab],cl
  40c517:	sub    eax,DWORD PTR [edx-0x29]
  40c51a:	fnstcw WORD PTR [edx-0x3c]
  40c51d:	rcr    BYTE PTR [edi+0x42],cl
  40c520:	enter  0xff4,0x13
  40c524:	cli    
  40c525:	sbb    eax,0x77d19c2
  40c52a:	or     ebx,DWORD PTR [eax]
  40c52c:	and    DWORD PTR [esi+0x4d076b26],esi
  40c532:	outs   dx,BYTE PTR ds:[esi]
  40c533:	mov    edi,0x201fb2c3
  40c538:	inc    edi
  40c539:	mov    ecx,DWORD PTR [ebx+0x7274f542]
  40c53f:	cli    
  40c540:	adc    edi,DWORD PTR [eax]
  40c542:	jmp    0x2bbb0e9d
  40c547:	jmp    0x40c5ab
  40c549:	jmp    0xc9a0d88b
  40c54e:	mov    dl,0xfb
  40c550:	adc    eax,0x623b82d7
  40c555:	mov    ds:0xb0dd16b6,al
  40c55a:	cs xchg esi,eax
  40c55c:	sub    DWORD PTR [esi-0x72406bb5],esi
  40c562:	(bad)  
  40c563:	loopne 0x40c508
  40c565:	dec    esi
  40c566:	loopne 0x40c5b7
  40c568:	mov    edi,0xbbde5bb6
  40c56d:	stos   DWORD PTR es:[edi],eax
  40c56e:	in     eax,dx
  40c56f:	je     0x40c54b
  40c571:	mov    ecx,0xd021fefb
  40c576:	stos   DWORD PTR es:[edi],eax
  40c577:	or     BYTE PTR [ebx+0x3a],ch
  40c57a:	shr    DWORD PTR [eax+0x6f3eebeb],1
  40c580:	pop    ebp
  40c581:	shl    BYTE PTR [eax],cl
  40c583:	sbb    BYTE PTR [ebp-0x8],dh
  40c586:	mov    gs,edx
  40c588:	mov    bl,0xa9
  40c58a:	xlat   BYTE PTR ds:[ebx]
  40c58b:	cdq    
  40c58c:	data16 mov dl,0xdd
  40c58f:	mov    es,ebx
  40c591:	or     eax,0x2ba2e17a
  40c596:	test   BYTE PTR [ebx+0x18],dl
  40c599:	adc    bl,BYTE PTR [eax-0x78]
  40c59c:	test   eax,0xd601aee8
  40c5a1:	adc    al,0x25
  40c5a3:	mov    ah,0xfa
  40c5a5:	jecxz  0x40c5a3
  40c5a7:	bound  edi,QWORD PTR [edi-0x57]
  40c5aa:	mov    dh,0xf3
  40c5ac:	pop    esi
  40c5ad:	xchg   esp,eax
  40c5ae:	xchg   esp,eax
  40c5af:	enter  0x5794,0x97
  40c5b3:	mov    eax,ds:0xf0338aa5
  40c5b8:	ss ss enter 0xc6f1,0x60
  40c5be:	fisub  WORD PTR [esi]
  40c5c0:	outs   dx,DWORD PTR ds:[esi]
  40c5c1:	pop    ebp
  40c5c2:	lock xor cl,dl
  40c5c5:	ins    BYTE PTR es:[edi],dx
  40c5c6:	mov    ah,0xf3
  40c5c8:	daa    
  40c5c9:	das    
  40c5ca:	fiadd  WORD PTR ds:0x419d51d8
  40c5d0:	xchg   BYTE PTR [ebx-0x40d5add7],dh
  40c5d6:	lods   al,BYTE PTR ds:[esi]
  40c5d7:	mov    ds:0xce36e94a,al
  40c5dc:	hlt    
  40c5dd:	test   al,0xd9
  40c5df:	loope  0x40c630
  40c5e1:	adc    eax,0x4a3633f9
  40c5e6:	dec    BYTE PTR [ebx+0x4224814b]
  40c5ec:	dec    ebp
  40c5ed:	or     eax,0xd4729237
  40c5f2:	xor    ecx,DWORD PTR [ebx+0x3a]
  40c5f5:	cmp    dl,BYTE PTR [esi+0x2607bacf]
  40c5fb:	mov    esi,0xf459e7b9
  40c600:	(bad)  
  40c601:	je     0x40c668
  40c603:	jg     0x40c5e6
  40c605:	imul   ebx,DWORD PTR [edi],0x5a
  40c608:	pop    ecx
  40c609:	in     eax,0x47
  40c60b:	rol    esp,1
  40c60d:	inc    esp
  40c60e:	xor    BYTE PTR [ebx],bl
  40c610:	jp     0x40c673
  40c612:	xor    al,0xed
  40c614:	xor    dl,ah
  40c616:	cdq    
  40c617:	inc    eax
  40c618:	xor    eax,0x7452f976
  40c61d:	mov    eax,0x31376056
  40c622:	(bad)  
  40c623:	and    eax,0x12954367
  40c628:	call   0x2af7b3d8
  40c62d:	xor    eax,0x3b725079
  40c632:	mov    edi,0x27793f83
  40c637:	fstp   DWORD PTR [eax]
  40c639:	inc    eax
  40c63a:	cdq    
  40c63b:	stc    
  40c63c:	daa    
  40c63d:	jbe    0x40c5c6
  40c63f:	sub    BYTE PTR [eax+eiz*2+0x6d],cl
  40c643:	push   ecx
  40c644:	gs inc esi
  40c646:	idiv   dl
  40c648:	pop    es
  40c649:	mov    ebp,0xbd8b8abe
  40c64e:	fbstp  TBYTE PTR [edx+0x50]
  40c651:	out    dx,eax
  40c652:	cs jecxz 0x40c657
  40c655:	loop   0x40c5e8
  40c657:	adc    BYTE PTR [edx],al
  40c659:	cmp    eax,0xfc8d09c7
  40c65e:	fwait
  40c65f:	jge    0x40c673
  40c661:	dec    esi
  40c662:	add    edx,DWORD PTR [edx+edx*4+0x410cd6fe]
  40c669:	inc    ecx
  40c66a:	mov    dl,BYTE PTR [edx]
  40c66c:	(bad)  
  40c66d:	call   0xec7339c1
  40c672:	cmp    BYTE PTR [ebp+0xa],0x10
  40c676:	pushf  
  40c677:	push   ebx
  40c678:	retf   
  40c679:	sbb    eax,0x8771a576
  40c67e:	mov    ch,0x1c
  40c680:	std    
  40c681:	fst    DWORD PTR [edx]
  40c683:	out    dx,al
  40c684:	daa    
  40c685:	inc    ecx
  40c686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c687:	repz xchg esi,eax
  40c689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c68a:	push   es
  40c68b:	inc    esp
  40c68c:	ret    0x8df2
  40c68f:	cmp    al,0xf1
  40c691:	(bad)  
  40c692:	(bad)  [ecx+esi*1+0x10f544b9]
  40c699:	or     dh,0x54
  40c69c:	shl    BYTE PTR [ebx+edx*1],1
  40c69f:	push   ecx
  40c6a0:	daa    
  40c6a1:	and    BYTE PTR [ebx+0x60],dl
  40c6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a5:	ret    0xaebd
  40c6a8:	pop    ss
  40c6a9:	outs   dx,BYTE PTR ds:[esi]
  40c6aa:	jne    0x40c642
  40c6ac:	(bad)  
  40c6ad:	mov    cl,0x78
  40c6af:	dec    eax
  40c6b0:	ret    
  40c6b1:	adc    al,0x73
  40c6b3:	pop    eax
  40c6b4:	jge    0x40c708
  40c6b6:	enter  0x124d,0x51
  40c6ba:	inc    eax
  40c6bb:	sub    dh,BYTE PTR [esi]
  40c6bd:	or     al,0x30
  40c6bf:	jmp    0xcfa8:0x7b6f
  40c6c5:	adc    DWORD PTR [esi+0x70de7679],esp
  40c6cb:	add    al,0x99
  40c6cd:	and    eax,0xe3963838
  40c6d2:	add    ebp,DWORD PTR [edi]
  40c6d4:	pop    edx
  40c6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6d6:	adc    DWORD PTR [ecx-0x9aff1e0],ebp
  40c6dc:	mov    ecx,0x77e96b9a
  40c6e1:	sahf   
  40c6e2:	push   esp
  40c6e3:	(bad)  
  40c6e4:	lock mov eax,ds:0x3ba9fbfe
  40c6ea:	mov    eax,ds:0x1bc4344c
  40c6ef:	out    0x4b,al
  40c6f1:	mov    ch,0xb5
  40c6f3:	add    al,BYTE PTR gs:[bx+di]
  40c6f7:	push   0x566f0cd3
  40c6fc:	mov    edi,0x3964fefc
  40c701:	sti    
  40c702:	adc    BYTE PTR [ebx],ch
  40c704:	jae    0x40c6df
  40c706:	sbb    si,WORD PTR [edi+0x6b1346c2]
  40c70d:	inc    edi
  40c70f:	adc    ah,BYTE PTR [eax*2+0x2efed90a]
  40c716:	xchg   ecx,eax
  40c717:	(bad)  
  40c719:	sub    dl,BYTE PTR [edx]
  40c71b:	mov    ds:0xb4d60382,eax
  40c720:	fst    DWORD PTR [edx+0x4d481e64]
  40c726:	xor    edx,DWORD PTR [eax*8+0x55b8d1c4]
  40c72d:	aad    0xd7
  40c72f:	inc    esp
  40c730:	mov    ?,WORD PTR [ebx-0x35]
  40c733:	popf   
  40c734:	cmp    al,0x7
  40c736:	and    eax,0x57c55c9e
  40c73b:	inc    esi
  40c73c:	arpl   di,cx
  40c73e:	push   ebx
  40c73f:	and    esi,eax
  40c741:	sub    al,0x4f
  40c743:	cmp    al,bh
  40c745:	pop    es
  40c746:	aam    0xd6
  40c748:	push   esi
  40c749:	inc    esp
  40c74a:	(bad)  [ebp+0x24]
  40c74d:	call   DWORD PTR [esi-0x35]
  40c750:	shr    DWORD PTR [esi+0x3158634],cl
  40c756:	push   ds
  40c757:	jmp    0x405816a
  40c75c:	mov    BYTE PTR [ebp-0x6d],0x80
  40c760:	pop    edi
  40c761:	mov    esi,db1
  40c764:	ret    0xb438
  40c767:	rol    BYTE PTR [ecx+0x21],1
  40c76a:	ret    0x73cf
  40c76d:	iretw  
  40c76f:	xchg   edi,eax
  40c770:	xor    al,0x5b
  40c772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c773:	adc    al,0xa6
  40c775:	or     ebp,DWORD PTR [eax+0x11abcb79]
  40c77b:	aam    0x18
  40c77d:	fwait
  40c77e:	test   eax,0x340751cc
  40c783:	xor    DWORD PTR [ebx-0x32193e93],ebp
  40c789:	inc    DWORD PTR [ebx-0x1]
  40c78c:	xchg   dh,dl
  40c78e:	cmp    dh,0xa5
  40c791:	sub    DWORD PTR [edx-0x5],edi
  40c794:	test   BYTE PTR [esi],ch
  40c796:	xchg   ebx,eax
  40c797:	std    
  40c798:	lods   eax,DWORD PTR ds:[esi]
  40c799:	jno    0x40c7d6
  40c79b:	out    dx,al
  40c79c:	leave  
  40c79d:	enter  0x3cee,0xaa
  40c7a1:	or     esp,DWORD PTR [edx]
  40c7a3:	es pop ebp
  40c7a5:	cli    
  40c7a6:	push   ebx
  40c7a7:	dec    esi
  40c7a8:	push   0x4c
  40c7aa:	(bad)  
  40c7ab:	aad    0x3b
  40c7ad:	mov    ebx,0x2dcb261e
  40c7b2:	cmp    DWORD PTR ds:0xe3c8c27a,ecx
  40c7b8:	dec    edx
  40c7b9:	scas   al,BYTE PTR es:[edi]
  40c7ba:	cli    
  40c7bb:	or     bh,BYTE PTR [edx-0x4db80a04]
  40c7c1:	mov    dh,0x90
  40c7c3:	pop    ebx
  40c7c4:	leave  
  40c7c5:	jb     0x40c7e9
  40c7c7:	add    BYTE PTR [eax+0x46],dh
  40c7ca:	push   ss
  40c7cb:	adc    eax,0x43d486c8
  40c7d0:	shl    esp,1
  40c7d2:	add    ebx,DWORD PTR [ebx-0x13]
  40c7d5:	pusha  
  40c7d6:	popf   
  40c7d7:	sti    
  40c7d8:	sub    ebp,DWORD PTR es:[edi]
  40c7db:	daa    
  40c7dc:	fs int 0xcd
  40c7df:	lods   eax,DWORD PTR ds:[esi]
  40c7e0:	xchg   cl,ch
  40c7e2:	test   al,0x9d
  40c7e4:	push   ebp
  40c7e5:	lods   al,BYTE PTR ds:[esi]
  40c7e6:	dec    esi
  40c7e7:	ins    DWORD PTR es:[edi],dx
  40c7e8:	mov    ebp,0xaf488cdb
  40c7ed:	pop    ebp
  40c7ee:	or     dl,ch
  40c7f0:	jb     0x40c7a8
  40c7f2:	mov    bh,0xfa
  40c7f4:	and    BYTE PTR [esi-0x1f],0xea
  40c7f8:	sbb    BYTE PTR [ecx],dl
  40c7fa:	sub    eax,0xf8b9d43c
  40c7ff:	sub    bl,al
  40c801:	sub    al,0xc5
  40c803:	test   eax,0x83c1f90a
  40c808:	clc    
  40c809:	fsubr  st(7),st
  40c80b:	test   eax,0x3de9aa6d
  40c810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c811:	ins    BYTE PTR es:[edi],dx
  40c812:	in     al,0xea
  40c814:	outs   dx,DWORD PTR ds:[esi]
  40c815:	retf   
  40c816:	imul   BYTE PTR es:[edx-0x7fb012f3]
  40c81d:	stc    
  40c81e:	jp     0x40c884
  40c820:	sub    BYTE PTR [eax+0x45b4a8e1],ah
  40c826:	jne    0x40c81e
  40c828:	ins    DWORD PTR es:[edi],dx
  40c829:	xchg   ebx,eax
  40c82a:	imul   edx,DWORD PTR [eax],0x43
  40c82d:	das    
  40c82e:	aad    0x7
  40c830:	adc    BYTE PTR [eax-0x3394e220],ah
  40c836:	mov    ebp,DWORD PTR [edx]
  40c838:	xor    al,0x15
  40c83a:	cmp    al,0xf1
  40c83c:	xchg   edx,eax
  40c83d:	lds    ebp,FWORD PTR [esi-0xa]
  40c840:	mov    bl,0x5e
  40c842:	bound  edi,QWORD PTR [ebx]
  40c844:	cmp    ecx,DWORD PTR [ecx]
  40c846:	inc    esp
  40c847:	aad    0xfb
  40c849:	ins    BYTE PTR es:[edi],dx
  40c84a:	pop    eax
  40c84b:	test   BYTE PTR [edx+0x3f3d6ee8],0x16
  40c852:	popa   
  40c853:	cs adc eax,0x7b0b2ef3
  40c859:	sub    eax,0xb7e70d5d
  40c85e:	add    al,0xdf
  40c860:	ds icebp 
  40c862:	fdiv   st(0),st
  40c864:	xchg   esi,eax
  40c865:	dec    ebx
  40c866:	jle    0x40c806
  40c868:	mov    BYTE PTR [eax],0xc5
  40c86b:	or     DWORD PTR [esi],ecx
  40c86d:	fwait
  40c86e:	dec    ecx
  40c86f:	push   edi
  40c870:	xor    bl,BYTE PTR [ebx]
  40c872:	les    eax,FWORD PTR [ebp-0xf]
  40c875:	sub    esp,edi
  40c877:	call   0x891b:0x74068725
  40c87e:	mov    ah,0x4e
  40c880:	jae    0x40c8cd
  40c882:	sar    bl,cl
  40c884:	loopne 0x40c8a1
  40c886:	xor    BYTE PTR [ebx+0x3f],cl
  40c889:	repz loope 0x40c8d5
  40c88c:	jmp    0x40c8ed
  40c88e:	lods   eax,DWORD PTR ds:[esi]
  40c88f:	retf   0x6c7a
  40c892:	jmp    0xeff3:0x1485e45d
  40c899:	mov    ch,0x6c
  40c89b:	mov    BYTE PTR [esi-0x6f],dl
  40c89e:	loopne 0x40c8c5
  40c8a0:	mov    bl,0xdb
  40c8a2:	xchg   DWORD PTR ds:0x487ae3ee,ecx
  40c8a8:	and    al,0x6
  40c8aa:	bound  edx,QWORD PTR [eax]
  40c8ac:	je     0x40c8b8
  40c8ae:	jo     0x40c8cd
  40c8b0:	sbb    ch,0x62
  40c8b3:	sub    dh,cl
  40c8b5:	mov    al,0x33
  40c8b7:	xlat   BYTE PTR ds:[ebx]
  40c8b8:	cli    
  40c8b9:	retf   
  40c8ba:	xor    al,0x47
  40c8bc:	ss loop 0x40c891
  40c8bf:	jae    0x40c8f6
  40c8c1:	fs in  al,dx
  40c8c3:	jecxz  0x40c8fe
  40c8c5:	out    dx,eax
  40c8c6:	inc    ebx
  40c8c7:	inc    esp
  40c8c8:	test   DWORD PTR [ebp-0x4f66a48c],0xb291642c
  40c8d2:	and    BYTE PTR [ebx+0x3ecda02f],ch
  40c8d8:	out    dx,eax
  40c8d9:	push   esp
  40c8da:	add    al,0xf9
  40c8dc:	rol    DWORD PTR [ebx],cl
  40c8de:	icebp  
  40c8df:	sbb    eax,0xdf17bfa8
  40c8e4:	adc    al,0x78
  40c8e6:	aam    0x43
  40c8e8:	mov    ch,0x68
  40c8ea:	int3   
  40c8eb:	mov    al,0xb2
  40c8ed:	mov    bl,0x2b
  40c8ef:	int3   
  40c8f0:	call   FWORD PTR [ecx]
  40c8f2:	hlt    
  40c8f3:	or     cl,BYTE PTR [ebx-0x1d8f6ba7]
  40c8f9:	sub    eax,0xfdbece5f
  40c8fe:	and    al,0xa1
  40c900:	(bad)
  40c904:	call   0x9e42:0xf075c351
  40c90b:	dec    ebx
  40c90c:	out    0xda,al
  40c90e:	mov    eax,ds:0x920b4545
  40c913:	loop   0x40c992
  40c915:	pop    ss
  40c916:	jo     0x40c973
  40c918:	xchg   ecx,eax
  40c919:	sub    DWORD PTR [edi-0x68],eax
  40c91c:	sbb    al,0x93
  40c91e:	pop    eax
  40c91f:	fmul   st,st(3)
  40c921:	loop   0x40c8ad
  40c923:	leave  
  40c924:	enter  0x245,0xe0
  40c928:	bound  ecx,QWORD PTR [eax+0x719e1b88]
  40c92e:	call   0x87ae:0x7f6cbbff
  40c935:	xor    BYTE PTR [ecx-0x519177c6],dl
  40c93b:	sub    eax,0xe90a46d7
  40c940:	lods   al,BYTE PTR ds:[esi]
  40c941:	xchg   esp,eax
  40c942:	in     eax,dx
  40c943:	sbb    eax,0x16568378
  40c948:	push   ebp
  40c949:	adc    eax,0xf35cd03e
  40c94e:	std    
  40c94f:	rcr    DWORD PTR [edi],1
  40c951:	dec    edi
  40c952:	data16 mov ch,0x62
  40c955:	and    bl,ch
  40c957:	push   es
  40c958:	stos   DWORD PTR es:[edi],eax
  40c959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c95a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c95b:	shl    BYTE PTR [ebx+0x192de7ad],1
  40c961:	push   ebx
  40c962:	push   edx
  40c963:	push   esi
  40c964:	mov    ds:0xb316fa32,eax
  40c969:	gs push ds
  40c96b:	jb     0x40c9eb
  40c96d:	or     esi,0x50
  40c970:	xchg   esi,eax
  40c971:	hlt    
  40c972:	mov    esi,ecx
  40c974:	ss xchg ebp,eax
  40c976:	mov    eax,0x3b497576
  40c97b:	xchg   ebp,eax
  40c97c:	jmp    0x40c918
  40c97e:	mov    esp,ss
  40c980:	and    BYTE PTR [esi+ebp*2+0x2fe46df3],ch
  40c987:	inc    ebp
  40c988:	add    DWORD PTR [edi],ebp
  40c98a:	aas    
  40c98b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c98c:	loop   0x40c993
  40c98e:	and    BYTE PTR [ebp-0x82e070c],0x83
  40c995:	jge    0x40c942
  40c997:	mov    ds:0xcf7d382c,al
  40c99c:	mov    bl,0x25
  40c99e:	jp     0x40c9ca
  40c9a0:	mov    al,0xa6
  40c9a2:	pushaw 
  40c9a4:	mov    al,ds:0x8a861a0b
  40c9a9:	(bad)  
  40c9ac:	in     eax,dx
  40c9ad:	sar    edi,0x9c
  40c9b0:	mov    DWORD PTR ds:[edi],edx
  40c9b3:	push   edi
  40c9b4:	pop    ss
  40c9b5:	fwait
  40c9b6:	pop    ebp
  40c9b7:	jb     0x40c9fb
  40c9b9:	dec    esp
  40c9ba:	xchg   ecx,eax
  40c9bb:	bound  esp,QWORD PTR [eax+eiz*1]
  40c9be:	les    eax,FWORD PTR [edx-0x10]
  40c9c1:	(bad)  [ebx-0x1198fd9e]
  40c9c7:	sub    esi,DWORD PTR [ecx+0x434fdb27]
  40c9cd:	jne    0x40c9ca
  40c9cf:	aas    
  40c9d0:	sahf   
  40c9d1:	xchg   DWORD PTR [edx+0x69],ebx
  40c9d4:	cmp    BYTE PTR [esi],dl
  40c9d6:	inc    edx
  40c9d7:	outs   dx,DWORD PTR ds:[esi]
  40c9d8:	cmp    BYTE PTR [ebx-0xf6b7458],dh
  40c9de:	and    al,0x80
  40c9e0:	jmp    0xc4c67449
  40c9e5:	mov    ch,0xa9
  40c9e7:	dec    ebp
  40c9e8:	mov    edi,0x174e1b38
  40c9ed:	leave  
  40c9ee:	out    0x30,al
  40c9f0:	or     al,bl
  40c9f2:	fwait
  40c9f3:	test   BYTE PTR [edi],bh
  40c9f5:	mov    BYTE PTR [edx+ebx*1+0x622e0e89],bh
  40c9fc:	mov    BYTE PTR [edi+0x6e18c25d],cl
  40ca02:	inc    ebx
  40ca03:	out    dx,eax
  40ca04:	ret    0xf053
  40ca07:	xor    eax,0xf52c19d8
  40ca0c:	add    DWORD PTR [edx],eax
  40ca0e:	add    BYTE PTR [edi+0x127d07d1],dl
  40ca14:	stos   BYTE PTR es:[edi],al
  40ca15:	pop    eax
  40ca16:	dec    ebp
  40ca17:	adc    BYTE PTR [esi+eiz*4+0x5af5ea94],dh
  40ca1e:	and    dl,dl
  40ca20:	jbe    0x40c9ba
  40ca22:	mov    gs,WORD PTR [edx-0x427ee06]
  40ca28:	pop    ds
  40ca29:	xchg   ebp,eax
  40ca2a:	mov    edx,0x696f593c
  40ca2f:	into   
  40ca30:	adc    BYTE PTR [esi],ch
  40ca32:	pop    ds
  40ca33:	adc    eax,esi
  40ca35:	mov    BYTE PTR [eax+0x59],al
  40ca38:	sbb    cl,BYTE PTR [ecx-0x2e]
  40ca3b:	fwait
  40ca3c:	js     0x40c9eb
  40ca3e:	push   ebp
  40ca3f:	mov    edi,0xf4abf730
  40ca44:	adc    DWORD PTR [ebp+0x2fac493a],0x4
  40ca4b:	call   0xdd71:0xabdc19f4
  40ca52:	and    al,0x9
  40ca54:	pop    esp
  40ca55:	add    eax,0xc7a2dd7c
  40ca5a:	xchg   esi,eax
  40ca5b:	inc    eax
  40ca5c:	scas   eax,DWORD PTR es:[edi]
  40ca5d:	daa    
  40ca5e:	cs int 0xd8
  40ca61:	cmp    dh,al
  40ca63:	fsubr  QWORD PTR [ebp-0x78]
  40ca66:	jp     0x40ca8e
  40ca68:	fsubr  DWORD PTR [esp+eiz*8]
  40ca6b:	cs in  al,dx
  40ca6d:	fist   DWORD PTR [ebx-0x5f]
  40ca70:	sti    
  40ca71:	add    DWORD PTR [edi+0x4f],esp
  40ca74:	inc    ebp
  40ca75:	mov    ch,0x5d
  40ca77:	mov    ah,0xcd
  40ca79:	rcr    WORD PTR [edi-0x70228925],cl
  40ca80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca81:	popf   
  40ca82:	mov    edi,ebx
  40ca84:	sbb    al,0xcc
  40ca86:	clc    
  40ca87:	pop    ss
  40ca88:	iret   
  40ca89:	loope  0x40caf9
  40ca8b:	or     al,0x1
  40ca8d:	push   0xbbbdf1f8
  40ca92:	adc    eax,0x7e0b00a2
  40ca97:	fmul   QWORD PTR [ecx-0x30]
  40ca9a:	mov    esp,0x45dfb2e9
  40ca9f:	and    BYTE PTR [eax+0x104e3f1c],dl
  40caa5:	inc    ebp
  40caa6:	jns    0x40cae5
  40caa8:	push   ebp
  40caa9:	clc    
  40caaa:	and    al,0x8c
  40caac:	(bad)  
  40caad:	adc    DWORD PTR [ecx],eax
  40caaf:	sbb    BYTE PTR [ebx+0x7d8bfc45],cl
  40cab5:	clc    
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0x7ee7bac5,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40cdab
  40cde1:	pop    ds
  40cde2:	test   DWORD PTR [edx-0x2f07663e],ecx
  40cde8:	dec    esi
  40cde9:	fs fprem1 
  40cdec:	pop    ebp
  40cded:	es gs loopne 0x40cdd7
  40cdf1:	stc    
  40cdf2:	xchg   ah,ah
  40cdf4:	fcomi  st,st(6)
  40cdf6:	jle    0x40cdaf
  40cdf8:	shl    BYTE PTR [eax],1
  40cdfa:	xor    BYTE PTR [ebp-0x2b742bf9],bh
  40ce00:	xor    eax,0x6972be19
  40ce05:	(bad)  
  40ce06:	leave  
  40ce07:	(bad)  
  40ce08:	leave  
  40ce09:	std    
  40ce0a:	in     eax,0x19
  40ce0c:	jae    0x40cdf1
  40ce0e:	and    DWORD PTR [eax],eax
  40ce10:	rol    BYTE PTR [esi+0x7073de00],0xd3
  40ce17:	out    dx,al
  40ce18:	ss xchg esp,eax
  40ce1a:	jo     0x40ce2c
  40ce1c:	xchg   esi,eax
  40ce1d:	(bad)  
  40ce1e:	jmp    0x40ce81
  40ce20:	and    dl,BYTE PTR [ebx]
  40ce22:	les    ecx,FWORD PTR [ecx-0x60]
  40ce25:	jae    0x40cdb2
  40ce27:	mov    eax,0x2164da31
  40ce2c:	push   ebp
  40ce2d:	sub    bh,cl
  40ce2f:	dec    esi
  40ce30:	lods   al,BYTE PTR ds:[esi]
  40ce31:	push   es
  40ce32:	(bad)  
  40ce33:	push   edi
  40ce34:	lea    ebx,[ecx-0x1e]
  40ce37:	xchg   esi,eax
  40ce38:	or     BYTE PTR [bp+0x2],cl
  40ce3c:	test   DWORD PTR [ebx+0x0],eax
  40ce3f:	out    0xf8,eax
  40ce41:	(bad)  
  40ce42:	or     BYTE PTR [ebx],ch
  40ce44:	add    edx,0x78
  40ce47:	aas    
  40ce48:	inc    ebp
  40ce49:	sbb    al,0x49
  40ce4b:	sbb    dh,BYTE PTR [ecx-0x3c102265]
  40ce51:	jno    0x40ce47
  40ce53:	pop    ss
  40ce54:	call   0xc4b142d2
  40ce59:	sbb    eax,0xceb31fb9
  40ce5e:	inc    edx
  40ce5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce60:	or     eax,0x6f3ef1fd
  40ce65:	push   edi
  40ce66:	mov    ah,0x33
  40ce68:	pop    es
  40ce69:	(bad)  
  40ce6b:	(bad)  
  40ce6c:	adc    DWORD PTR [ecx+0x56037c7f],ebx
  40ce72:	cmp    cl,al
  40ce74:	aas    
  40ce75:	sbb    eax,0xe170d186
  40ce7a:	data16 and BYTE PTR [edx+0x27],bh
  40ce7e:	leave  
  40ce7f:	sub    eax,0x1f823cf9
  40ce84:	ja     0x40ce2b
  40ce86:	mov    dl,0x2
  40ce88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce89:	and    esi,DWORD PTR [eax+edi*8+0x3398d87e]
  40ce90:	shl    eax,cl
  40ce92:	push   esi
  40ce93:	jae    0x40cea0
  40ce95:	std    
  40ce96:	rol    BYTE PTR [eax-0x67],1
  40ce99:	aam    0xe1
  40ce9b:	cmp    eax,0x9f0b353c
  40cea0:	in     eax,dx
  40cea1:	push   ss
  40cea2:	shl    al,0x8b
  40cea5:	xlat   BYTE PTR ds:[ebx]
  40cea6:	pop    ss
  40cea7:	call   0x36ebf172
  40ceac:	jae    0x40cee9
  40ceae:	cmp    dh,BYTE PTR [ebx+0x16]
  40ceb1:	jae    0x40cecc
  40ceb3:	test   BYTE PTR [ebp-0x258f8449],bl
  40ceb9:	test   DWORD PTR [eax],0xb306c253
  40cebf:	xor    edx,esi
  40cec1:	shl    BYTE PTR [edx-0x2e6a317],1
  40cec7:	ror    BYTE PTR [ecx+ebx*2],0xbb
  40cecb:	push   ebx
  40cecc:	test   al,0x5b
  40cece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cecf:	sbb    ebx,eax
  40ced1:	jge    0x40cea1
  40ced3:	xchg   DWORD PTR [edx-0x5c],ecx
  40ced6:	sbb    eax,DWORD PTR [edx-0x7c]
  40ced9:	add    al,0xf2
  40cedb:	popa   
  40cedc:	ficomp DWORD PTR [edx-0x21]
  40cedf:	daa    
  40cee0:	push   eax
  40cee1:	and    ebp,ebx
  40cee3:	jl     0x40ce81
  40cee5:	(bad)  
  40cee6:	pop    esp
  40cee7:	jb     0x40ce96
  40cee9:	rcl    ebp,0x2a
  40ceec:	jnp    0x40cf64
  40ceee:	add    ah,BYTE PTR ds:0xbf9f61ee
  40cef4:	cmp    bh,BYTE PTR [ebx+ebp*4]
  40cef7:	mov    bl,0x4d
  40cef9:	seta   dh
  40cefc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cefd:	int3   
  40cefe:	clc    
  40ceff:	sahf   
  40cf00:	jmp    0xec88:0x39d2d83a
  40cf07:	ficom  DWORD PTR [eax-0x656ebf0a]
  40cf0d:	xchg   ecx,eax
  40cf0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf0f:	shl    DWORD PTR [ebp+0x3c],0x28
  40cf13:	mov    eax,ds:0xe0a2adc7
  40cf18:	mov    al,0xc2
  40cf1a:	cwde   
  40cf1b:	inc    eax
  40cf1c:	jne    0x40cf8e
  40cf1e:	jb     0x40cf0d
  40cf20:	pop    edx
  40cf21:	mov    bl,0x9d
  40cf23:	add    bh,BYTE PTR [ebx-0x270abaaf]
  40cf29:	mul    BYTE PTR [ebp+0x7d]
  40cf2c:	jmp    0x40cf73
  40cf2e:	je     0x40cf96
  40cf30:	mov    dh,0x1a
  40cf32:	pop    ecx
  40cf33:	in     eax,0x6b
  40cf35:	call   0x33c75572
  40cf3a:	lock cmp DWORD PTR [ebx+edi*2-0x34],ecx
  40cf3f:	sbb    BYTE PTR [eax+0x32ba43bc],cl
  40cf45:	adc    al,0x7c
  40cf47:	shr    DWORD PTR [esi],cl
  40cf49:	fistp  WORD PTR [ebx-0x4525a47d]
  40cf4f:	sub    bh,dh
  40cf51:	sub    al,0xf4
  40cf53:	imul   eax,DWORD PTR [ecx+0x5e307faa],0xffffffe4
  40cf5a:	sub    ah,cl
  40cf5c:	addr16 loope 0x40cf93
  40cf5f:	(bad)  
  40cf60:	ja     0x40cf95
  40cf62:	mov    eax,ds:0x1731daf5
  40cf67:	or     eax,0xdbee6952
  40cf6c:	push   ebx
  40cf6d:	inc    ebx
  40cf6e:	xor    edi,ebx
  40cf70:	das    
  40cf71:	jbe    0x40cf52
  40cf73:	mov    BYTE PTR [edx-0x514d2e01],dh
  40cf79:	and    bh,cl
  40cf7b:	and    eax,0x4c79eb6f
  40cf80:	mov    bh,0xdb
  40cf82:	lock sub al,0xe3
  40cf85:	mov    esi,0x9d953c1
  40cf8a:	jl     0x40cf3c
  40cf8c:	shl    dh,cl
  40cf8e:	test   ecx,ebp
  40cf90:	mov    ebp,0x6104405
  40cf95:	(bad)  
  40cf96:	and    eax,0x1c786cf8
  40cf9b:	jmp    0x40cfbe
  40cf9d:	loope  0x40cf5f
  40cf9f:	mov    al,ds:0x92287dbd
  40cfa4:	mul    ecx
  40cfa6:	add    eax,0xf69e5a0a
  40cfab:	test   DWORD PTR ds:0x3002bcdc,eax
  40cfb1:	cld    
  40cfb2:	push   0xffffff84
  40cfb4:	aaa    
  40cfb5:	outs   dx,DWORD PTR ds:[esi]
  40cfb6:	test   al,0xf9
  40cfb8:	jo     0x40cfd3
  40cfba:	popa   
  40cfbb:	cdq    
  40cfbc:	adc    edx,DWORD PTR [eax+0x67]
  40cfbf:	add    DWORD PTR [eax+0x70d6bab8],ebx
  40cfc5:	jbe    0x40cff0
  40cfc7:	inc    ecx
  40cfc8:	push   esp
  40cfc9:	xlat   BYTE PTR ds:[ebx]
  40cfca:	push   edx
  40cfcb:	dec    ebp
  40cfcc:	sbb    esp,edx
  40cfce:	shr    DWORD PTR [ecx+ebx*8+0xf],cl
  40cfd2:	rcl    ch,0x5f
  40cfd5:	adc    eax,0x17e30b4
  40cfda:	push   es
  40cfdb:	lods   eax,DWORD PTR ds:[esi]
  40cfdc:	xor    bh,BYTE PTR [edi+ecx*4+0x79373d]
  40cfe3:	imul   esi,DWORD PTR [eax],0x9010051d
  40cfe9:	xor    al,0x9f
  40cfeb:	out    0x1e,eax
  40cfed:	xchg   ecx,eax
  40cfee:	sbb    ebp,DWORD PTR [edx-0x4c822e15]
  40cff4:	cmp    dl,BYTE PTR [eax-0x31975a34]
  40cffa:	lahf   
  40cffb:	sbb    al,0x54
  40cffd:	xor    ah,dh
  40cfff:	test   ah,bh
  40d001:	aaa    
  40d002:	sub    ah,BYTE PTR [esi+esi*1-0x1]
  40d006:	pusha  
  40d007:	and    BYTE PTR [edi-0x5cdb56d1],bh
  40d00d:	push   esi
  40d00e:	adc    eax,0xb54ff69c
  40d013:	test   BYTE PTR [esi+edi*4],ch
  40d016:	xor    esi,DWORD PTR [ecx]
  40d018:	pushf  
  40d019:	fld    QWORD PTR [ebx+0x63e817d9]
  40d01f:	mov    dl,0x1
  40d021:	sub    DWORD PTR [edi-0x72],0x9c853f6c
  40d028:	lods   al,BYTE PTR ds:[esi]
  40d029:	push   es
  40d02a:	xchg   ebx,eax
  40d02b:	xchg   ebx,eax
  40d02c:	push   esi
  40d02d:	push   es
  40d02e:	hlt    
  40d02f:	out    0x1c,eax
  40d031:	mov    ebx,0xf65fe5e9
  40d036:	ins    BYTE PTR es:[edi],dx
  40d037:	leave  
  40d038:	out    0xc5,eax
  40d03a:	pop    ebx
  40d03b:	or     al,0x5c
  40d03d:	xchg   ebp,eax
  40d03e:	or     BYTE PTR [edi],0x8
  40d041:	jl     0x40d04a
  40d043:	xchg   edi,eax
  40d044:	int3   
  40d045:	pop    ebx
  40d046:	and    bl,al
  40d048:	addr16 jo 0x40d0a2
  40d04b:	jno    0x40d051
  40d04d:	xor    ebx,DWORD PTR [eax+0x6853ef66]
  40d053:	mov    DWORD PTR [ebp-0x32],esi
  40d056:	in     al,0x7e
  40d058:	daa    
  40d059:	xor    dl,BYTE PTR [edx-0x40]
  40d05c:	mov    eax,0x25384318
  40d061:	dec    ebp
  40d062:	mov    esi,0x19efd25e
  40d067:	jno    0x40d03c
  40d069:	cmp    DWORD PTR [eax-0x31],edx
  40d06c:	in     al,dx
  40d06d:	ds push eax
  40d06f:	(bad)  [esi+0x78cbca93]
  40d075:	fbld   TBYTE PTR [ebp-0x1e1dcf33]
  40d07b:	ret    
  40d07c:	int3   
  40d07d:	inc    eax
  40d07e:	(bad)  
  40d080:	aam    0xda
  40d082:	enter  0xd65,0x77
  40d086:	repnz sub al,0xca
  40d089:	push   esi
  40d08a:	repz popf 
  40d08c:	js     0x40d0e0
  40d08e:	add    BYTE PTR [esi-0x6c],0x5b
  40d092:	adc    ch,bh
  40d094:	not    DWORD PTR [edx+0x25]
  40d097:	pop    eax
  40d098:	xchg   esi,eax
  40d099:	dec    ebp
  40d09a:	in     al,0xd1
  40d09c:	shl    BYTE PTR [edx-0x234db51a],cl
  40d0a2:	xchg   edx,eax
  40d0a3:	or     DWORD PTR [ecx+0x2601616a],0x65
  40d0aa:	xor    edx,esi
  40d0ac:	pushf  
  40d0ad:	sub    eax,0xf4f593f
  40d0b2:	lea    edi,[ecx+0x137a5920]
  40d0b8:	into   
  40d0b9:	popa   
  40d0ba:	adc    eax,0x970980fc
  40d0bf:	mov    ebx,esi
  40d0c1:	push   esp
  40d0c2:	rcl    DWORD PTR [eax-0xd],0x26
  40d0c6:	fnstenv [edi+0x5c]
  40d0c9:	dec    edx
  40d0ca:	(bad)  
  40d0cb:	and    eax,0x85e9d17b
  40d0d0:	fwait
  40d0d1:	rcr    BYTE PTR [eax-0x6c879122],0xb4
  40d0d8:	pop    esp
  40d0d9:	cmp    dh,BYTE PTR [ebx+edi*8-0x7e912507]
  40d0e0:	jl     0x40d143
  40d0e2:	and    eax,0x67181e4
  40d0e7:	and    ebx,DWORD PTR [ebx]
  40d0e9:	jbe    0x40d0a5
  40d0eb:	sbb    cl,bh
  40d0ed:	cwde   
  40d0ee:	jns    0x40d133
  40d0f0:	xor    DWORD PTR [ecx+0x4f811058],esi
  40d0f6:	pop    ds
  40d0f7:	in     al,0x7c
  40d0f9:	(bad)  
  40d0fa:	mov    bl,0xca
  40d0fc:	jne    0x40d15a
  40d0fe:	out    0x65,al
  40d100:	int    0x92
  40d102:	ja     0x40d168
  40d104:	inc    ecx
  40d105:	fsub   st,st(0)
  40d107:	sti    
  40d108:	pop    edi
  40d109:	ss rcl ebp,1
  40d10c:	mov    ebx,0x69b6a8b0
  40d111:	xor    DWORD PTR [eax+0x7d],ebp
  40d114:	es int 0x23
  40d117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d118:	or     esi,eax
  40d11a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d11b:	je     0x40d11b
  40d11d:	push   esi
  40d11e:	pushf  
  40d11f:	mov    edi,0x7471180d
  40d124:	mov    ebx,0x91d7d73e
  40d129:	jle    0x40d17a
  40d12b:	add    BYTE PTR [edi-0x64],al
  40d12e:	mov    ah,0x56
  40d130:	cli    
  40d131:	popf   
  40d132:	fisub  WORD PTR [edi+edi*2]
  40d135:	mov    ch,0x4e
  40d137:	arpl   WORD PTR [ebx+0x32],bp
  40d13a:	test   al,0xbc
  40d13c:	mov    esi,0x183045b8
  40d141:	sub    eax,DWORD PTR [edx-0x406e6f3c]
  40d147:	sub    eax,0xbe75592e
  40d14c:	pop    esi
  40d14d:	int    0xc8
  40d14f:	jmp    0x40d0f7
  40d151:	sub    dl,ah
  40d153:	mov    edx,0xe4c71940
  40d158:	ret    0x275e
  40d15b:	xchg   ebx,eax
  40d15c:	cld    
  40d15d:	jns    0x40d17d
  40d15f:	into   
  40d160:	push   ecx
  40d161:	and    edx,DWORD PTR [esi]
  40d163:	sub    ecx,DWORD PTR [eax+eiz*1+0x2d]
  40d167:	cmp    BYTE PTR [ebx-0x43],bl
  40d16a:	pop    ecx
  40d16b:	(bad)  
  40d16c:	(bad)  
  40d16d:	clc    
  40d16e:	sub    eax,0xca07562c
  40d173:	dec    esp
  40d174:	ret    
  40d175:	mov    edx,esp
  40d177:	mov    eax,ds:0xa6a909e5
  40d17c:	cwde   
  40d17d:	mov    ecx,0xf8306883
  40d182:	nop
  40d183:	mov    dl,0x6a
  40d185:	pop    es
  40d186:	fisttp WORD PTR [ebx]
  40d188:	sub    DWORD PTR [esi],ecx
  40d18a:	push   edi
  40d18b:	or     ebp,ecx
  40d18d:	adc    al,0xe9
  40d18f:	cmp    al,0x77
  40d191:	leave  
  40d192:	adc    dl,bl
  40d194:	pop    ss
  40d195:	push   ds
  40d196:	jb     0x40d130
  40d198:	lods   eax,DWORD PTR ds:[esi]
  40d199:	xchg   edi,eax
  40d19a:	shrd   DWORD PTR [ebp+0x21f6d1c0],ebp,0x83
  40d1a2:	adc    al,0xa3
  40d1a4:	xor    bl,0xd1
  40d1a7:	aas    
  40d1a8:	xor    ah,BYTE PTR [eax+0x4f]
  40d1ab:	popf   
  40d1ac:	xor    al,0xc3
  40d1ae:	inc    edx
  40d1af:	(bad)  
  40d1b0:	cmp    al,0x8a
  40d1b2:	scas   eax,DWORD PTR es:[edi]
  40d1b3:	cli    
  40d1b4:	mov    esp,0xf7f0e5f9
  40d1b9:	or     edi,edx
  40d1bb:	call   0x7e6655bc
  40d1c0:	push   ss
  40d1c1:	xchg   DWORD PTR gs:[esi+0x398d3ad5],esi
  40d1c8:	sbb    BYTE PTR [edi+0xc2e0ae4],cl
  40d1ce:	push   ss
  40d1cf:	xchg   esi,eax
  40d1d0:	mov    dl,0xa0
  40d1d2:	rol    DWORD PTR [ebx-0x5c],0xb7
  40d1d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1d7:	inc    eax
  40d1d8:	adc    DWORD PTR ds:0x3aff9760,esp
  40d1de:	ss dec esi
  40d1e0:	jno    0x40d194
  40d1e2:	add    al,0x9f
  40d1e4:	rcl    BYTE PTR [eax],0x82
  40d1e7:	lods   eax,DWORD PTR ds:[esi]
  40d1e8:	mov    cl,0xda
  40d1ea:	js     0x40d1cf
  40d1ec:	xchg   esi,eax
  40d1ed:	ja     0x40d20a
  40d1ef:	cmp    BYTE PTR [ecx+0x4c],0x20
  40d1f3:	das    
  40d1f4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1f6:	call   0xa915e913
  40d1fb:	xchg   esi,eax
  40d1fc:	stos   BYTE PTR es:[edi],al
  40d1fd:	lods   al,BYTE PTR ds:[esi]
  40d1fe:	outs   dx,BYTE PTR ds:[esi]
  40d1ff:	mov    ah,0xe8
  40d201:	ficom  DWORD PTR [eax]
  40d203:	adc    DWORD PTR [ebp+ebx*2+0x6d4f1695],ebp
  40d20a:	outs   dx,DWORD PTR ds:[esi]
  40d20b:	pop    eax
  40d20c:	call   0xbb07:0x7895cfc3
  40d213:	dec    DWORD PTR ds:0x427895b8
  40d219:	pop    ds
  40d21a:	(bad)  
  40d21b:	call   0x5d39:0x3456b7c9
  40d222:	sub    al,0xd1
  40d224:	add    al,BYTE PTR [ebx+0x4fbfa11]
  40d22a:	cmp    BYTE PTR [eax-0x32],dl
  40d22d:	push   ebp
  40d22e:	inc    edx
  40d22f:	out    0x34,eax
  40d231:	bound  edi,QWORD PTR [edi]
  40d233:	inc    edi
  40d234:	imul   eax,ebp,0x74
  40d237:	pop    ecx
  40d238:	pop    es
  40d239:	dec    esp
  40d23a:	mov    fs,edx
  40d23c:	hlt    
  40d23d:	dec    edx
  40d23e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d23f:	lahf   
  40d240:	(bad)  
  40d241:	cmp    BYTE PTR [eax+0x447c464c],ch
  40d247:	jl     0x40d227
  40d249:	dec    ebp
  40d24a:	cmp    ah,bl
  40d24c:	ffreep st(1)
  40d24e:	cld    
  40d24f:	loopne 0x40d23d
  40d251:	popf   
  40d252:	xor    ecx,DWORD PTR [esi]
  40d254:	lods   eax,DWORD PTR ds:[esi]
  40d255:	sbb    BYTE PTR [ecx+0x8],cl
  40d258:	mov    ecx,0x8ec6329b
  40d25d:	jo     0x40d1f1
  40d25f:	scas   al,BYTE PTR es:[edi]
  40d260:	add    dl,BYTE PTR [esi+0x43f13324]
  40d266:	xor    DWORD PTR [ebp-0x14a5b0e2],ebx
  40d26c:	vorps  ymm2,ymm7,ymm5
  40d270:	stc    
  40d271:	xchg   esp,eax
  40d272:	scas   eax,DWORD PTR es:[edi]
  40d273:	fnstenv [eax+0x7b6c00fc]
  40d279:	sub    eax,0x9f9fb923
  40d27e:	pop    ebp
  40d27f:	imul   esp,DWORD PTR [edi+0xbe1dcfa],0xfffffff9
  40d286:	in     al,dx
  40d287:	ret    0xd3e9
  40d28a:	xor    eax,0x1d214a9
  40d28f:	imul   ebx,ecx,0x2b
  40d292:	in     al,0x5e
  40d294:	jmp    0x40d252
  40d296:	fcomp  QWORD PTR [esp+eax*8-0x57]
  40d29a:	dec    ecx
  40d29b:	(bad)  
  40d29c:	adc    al,0xfe
  40d29e:	and    BYTE PTR [ebx],bl
  40d2a0:	lea    edx,[edi]
  40d2a2:	sub    eax,DWORD PTR ds:0x279c4cd6
  40d2a8:	xchg   esi,eax
  40d2a9:	fdivr  DWORD PTR [edi+0x3]
  40d2ac:	sub    eax,DWORD PTR [edx+0x25]
  40d2af:	ds loope 0x40d248
  40d2b2:	scas   eax,DWORD PTR es:[edi]
  40d2b3:	(bad)  
  40d2b4:	rol    edx,cl
  40d2b6:	inc    esi
  40d2b7:	xchg   esp,eax
  40d2b8:	jle    0x40d246
  40d2ba:	stos   BYTE PTR es:[edi],al
  40d2bb:	jmp    0x3774:0xeea578ea
  40d2c2:	mov    esi,ss
  40d2c4:	or     BYTE PTR [esi-0xf],bh
  40d2c7:	repz jns 0x40d29d
  40d2ca:	fiadd  DWORD PTR [ecx]
  40d2cc:	push   esp
  40d2cd:	and    ebp,DWORD PTR [ecx-0x3a]
  40d2d0:	fisubr DWORD PTR ds:0x3737f496
  40d2d6:	xchg   edx,eax
  40d2d7:	dec    eax
  40d2d8:	retf   
  40d2d9:	cli    
  40d2da:	mov    al,0x52
  40d2dc:	loop   0x40d355
  40d2de:	add    eax,0xee6f847e
  40d2e3:	xchg   ecx,eax
  40d2e4:	push   esi
  40d2e5:	pop    edi
  40d2e6:	mov    esi,0x57670fcf
  40d2eb:	adc    al,0x22
  40d2ed:	loop   0x40d279
  40d2ef:	rcl    DWORD PTR [eax-0x18803904],0x29
  40d2f6:	call   0x98ea3a69
  40d2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2fc:	ins    DWORD PTR es:[edi],dx
  40d2fd:	fistp  QWORD PTR [esi]
  40d2ff:	inc    esp
  40d300:	adc    eax,0x6b92ed65
  40d305:	clc    
  40d306:	daa    
  40d307:	push   cs
  40d308:	(bad)  
  40d309:	mov    esp,0xd861509c
  40d30e:	xor    bl,bl
  40d310:	lds    eax,FWORD PTR [edi-0x55]
  40d313:	pop    es
  40d314:	or     BYTE PTR [edi-0x48e18662],0x40
  40d31b:	leave  
  40d31c:	retf   0x677a
  40d31f:	bound  esi,QWORD PTR [ecx+0x20a3c967]
  40d325:	mov    esp,0xf465bcd4
  40d32a:	sbb    BYTE PTR [edx-0x7e],bh
  40d32d:	stc    
  40d32e:	adc    cl,ah
  40d330:	xchg   ebp,eax
  40d331:	adc    eax,0x126a4d11
  40d336:	aaa    
  40d337:	xchg   edx,eax
  40d338:	jg     0x40d31c
  40d33a:	push   ebx
  40d33b:	dec    edi
  40d33c:	push   0x66f94168
  40d341:	push   ecx
  40d342:	jno    0x40d385
  40d344:	and    BYTE PTR [edi+0x63],dl
  40d347:	pop    eax
  40d348:	mov    dl,0xa7
  40d34a:	push   edx
  40d34b:	cmp    BYTE PTR [ecx],0xff
  40d34e:	ins    DWORD PTR es:[edi],dx
  40d34f:	xor    dh,BYTE PTR [esi-0x570b4af]
  40d355:	pop    ebp
  40d356:	pop    ds
  40d357:	inc    eax
  40d358:	mov    ebx,DWORD PTR [ecx+0x2a886dae]
  40d35e:	pop    es
  40d35f:	and    BYTE PTR [ebp+0x726fab15],bh
  40d365:	mov    dh,0xa6
  40d367:	fsubr  st(0),st
  40d369:	and    ah,BYTE PTR [eax+0x7]
  40d36c:	xchg   BYTE PTR [ebx],ah
  40d36e:	mov    ecx,DWORD PTR [esi+0x3d7058b]
  40d374:	ds call 0xf66:0x925a0b41
  40d37c:	movsx  ebx,WORD PTR [edx+0x60481e73]
  40d383:	pop    esi
  40d384:	ret    0x625a
  40d387:	sbb    bh,BYTE PTR ds:0xb0160c8
  40d38d:	bound  ebp,QWORD PTR [ecx-0x54]
  40d390:	fucomp st(6)
  40d392:	jo     0x40d34c
  40d394:	out    dx,eax
  40d395:	icebp  
  40d396:	pop    ss
  40d397:	pusha  
  40d398:	jmp    0x40d31d
  40d39a:	push   0x5ef3f063
  40d39f:	into   
  40d3a0:	jo     0x40d332
  40d3a2:	ret    0x37d4
  40d3a5:	out    0x38,al
  40d3a7:	(bad)  
  40d3a8:	pop    ebx
  40d3a9:	or     bl,0xba
  40d3ac:	dec    eax
  40d3ad:	mov    ebp,edi
  40d3af:	test   DWORD PTR [ebp+0x78],edi
  40d3b2:	sar    BYTE PTR [ebx],cl
  40d3b4:	or     edx,DWORD PTR [edi+0x2b1299a3]
  40d3ba:	pusha  
  40d3bb:	sub    eax,0x9e176574
  40d3c0:	jo     0x40d375
  40d3c2:	out    0x52,al
  40d3c4:	xor    ebp,DWORD PTR [esi+edx*1+0x67]
  40d3c8:	push   0xd204eda5
  40d3cd:	inc    edi
  40d3ce:	sbb    eax,0x8d1f9f9f
  40d3d3:	out    0xf9,eax
  40d3d5:	out    dx,al
  40d3d6:	jne    0x40d372
  40d3d8:	popf   
  40d3d9:	in     eax,dx
  40d3da:	mov    edi,?
  40d3dc:	aam    0x3b
  40d3de:	jmp    0x2393:0x1605fc80
  40d3e5:	shl    dl,cl
  40d3e7:	cmp    eax,0x621671c0
  40d3ec:	outs   dx,DWORD PTR ds:[esi]
  40d3ed:	inc    eax
  40d3ee:	sar    BYTE PTR [edi-0x596f9d23],cl
  40d3f4:	jle    0x40d402
  40d3f6:	sub    BYTE PTR [ebp-0x1b06ca9d],0x7c
  40d3fd:	test   eax,eax
  40d3ff:	or     DWORD PTR [eax+ebx*1-0x6d],ebx
  40d403:	dec    eax
  40d404:	in     eax,dx
  40d405:	mov    al,0x2a
  40d407:	push   cs
  40d408:	pop    eax
  40d409:	add    DWORD PTR [edx-0x13],ecx
  40d40c:	xor    BYTE PTR [edx+ecx*8],dl
  40d40f:	pop    esp
  40d410:	cmp    al,cl
  40d412:	cld    
  40d413:	and    BYTE PTR [ecx-0x2d],dh
  40d416:	add    DWORD PTR [ecx+eax*4-0x1bbf2d6c],esp
  40d41d:	test   eax,0xa1efa5ba
  40d422:	int    0xcd
  40d424:	xor    ecx,DWORD PTR [ebp+0x15d6f6ab]
  40d42a:	in     eax,0xbb
  40d42c:	aam    0xd9
  40d42e:	mov    eax,0x2a22d78e
  40d433:	mov    cl,0x9
  40d435:	add    ah,bh
  40d437:	outs   dx,BYTE PTR ds:[esi]
  40d438:	jno    0x40d3c2
  40d43a:	jb     0x40d3ff
  40d43c:	jge    0x40d400
  40d43e:	mov    bh,0x17
  40d440:	popf   
  40d441:	addr16 adc bh,cl
  40d444:	test   ch,dh
  40d446:	shl    bh,0x32
  40d449:	aad    0x76
  40d44b:	inc    eax
  40d44c:	pop    esp
  40d44d:	mov    ah,0xba
  40d44f:	rcr    BYTE PTR [edi-0x2f],0x8a
  40d453:	dec    eax
  40d454:	mov    eax,ds:0x621b245
  40d459:	or     DWORD PTR [edx],eax
  40d45b:	popa   
  40d45c:	or     dh,BYTE PTR [ebx+0x1d230f86]
  40d462:	je     0x40d3f3
  40d464:	repnz jmp 0x3e9a:0xcab54b89
  40d46c:	es aam 0xdb
  40d46f:	(bad)  
  40d470:	ss call 0x9b8c:0x24a1eb29
  40d478:	mov    ds:0xbf8a5424,al
  40d47d:	push   ebx
  40d47e:	mov    esp,0xbb7daf96
  40d483:	dec    ebx
  40d484:	pop    edx
  40d485:	gs jae 0x40d42e
  40d488:	jg     0x40d4a4
  40d48a:	out    dx,al
  40d48b:	or     dh,0x48
  40d48e:	and    BYTE PTR [edx+edi*4+0x4179db8a],0x32
  40d496:	add    ebp,ebp
  40d498:	xchg   esi,eax
  40d499:	hlt    
  40d49a:	mov    ds:0x46a26df5,eax
  40d49f:	or     esi,eax
  40d4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4a2:	repnz in al,0x5f
  40d4a5:	push   ecx
  40d4a6:	test   eax,0xecf4bf5b
  40d4ab:	sub    ebx,DWORD PTR [edx-0x3e]
  40d4ae:	mov    eax,0x58eccd93
  40d4b3:	mov    ebx,0x5865f6f5
  40d4b8:	daa    
  40d4b9:	push   di
  40d4bb:	js     0x40d4c4
  40d4bd:	ret    0x7a74
  40d4c0:	sahf   
  40d4c1:	sub    al,0xef
  40d4c3:	mov    ah,0xd6
  40d4c5:	and    al,0x25
  40d4c7:	xor    DWORD PTR ds:0x8b63dd9a,edi
  40d4cd:	call   0x342f:0x922b7bb0
  40d4d4:	xor    esp,DWORD PTR [esi*1+0x430ccba4]
  40d4db:	pop    ebp
  40d4dc:	je     0x40d490
  40d4de:	leave  
  40d4df:	sub    eax,0xcee85359
  40d4e4:	jne    0x40d4d0
  40d4e6:	retf   0x10ac
  40d4e9:	jnp    0x40d46c
  40d4eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4ec:	xchg   DWORD PTR [ebx-0x53],edx
  40d4ef:	ret    
  40d4f0:	test   BYTE PTR ds:0x81b9c4e5,ch
  40d4f6:	ss out 0x91,eax
  40d4f9:	ins    DWORD PTR es:[edi],dx
  40d4fa:	icebp  
  40d4fb:	in     eax,0xba
  40d4fd:	(bad)  
  40d4fe:	fisub  WORD PTR [eax+0x48]
  40d501:	adc    eax,0x36b8aee6
  40d506:	jle    0x40d4de
  40d508:	add    BYTE PTR [ecx-0x785175b],bh
  40d50e:	mov    dh,0x33
  40d510:	xor    al,0x69
  40d512:	test   ebx,ecx
  40d514:	push   0xffffffae
  40d516:	ja     0x40d54d
  40d518:	cmp    bl,BYTE PTR [esp+ebx*1-0xad3f6ee]
  40d51f:	shl    DWORD PTR [edx],0x65
  40d522:	hlt    
  40d523:	cwde   
  40d524:	call   0x4c51963f
  40d529:	sub    esi,DWORD PTR [esi+eiz*1-0x7b]
  40d52d:	(bad)  [ecx-0x40]
  40d530:	mov    ch,0x92
  40d532:	call   0x8ff:0xebd521
  40d539:	lahf   
  40d53a:	imul   edi,edx,0x68
  40d53d:	dec    ebx
  40d53e:	dec    ebp
  40d53f:	adc    DWORD PTR [esi-0x9381507],0x89ffd416
  40d549:	adc    DWORD PTR [edx+0x6e],eax
  40d54c:	sti    
  40d54d:	fs and ebp,esp
  40d550:	loope  0x40d55c
  40d552:	pop    ss
  40d553:	bound  edx,QWORD PTR [ecx]
  40d555:	jg     0x40d512
  40d557:	add    ebp,DWORD PTR [edx]
  40d559:	mov    esp,ebp
  40d55b:	mov    cs,WORD PTR [esi]
  40d55d:	xor    bl,BYTE PTR [ebx-0x68]
  40d560:	shl    BYTE PTR [ebx],cl
  40d562:	and    DWORD PTR [ebx+0x7ea62e39],esi
  40d568:	(bad)  
  40d569:	mov    DWORD PTR [ebx+ebp*4],0x63ebd7f2
  40d570:	xor    DWORD PTR [ebx+eiz*8-0x6d],ecx
  40d574:	mov    esp,0x45238c30
  40d579:	sbb    BYTE PTR [ecx],ch
  40d57b:	int3   
  40d57c:	retf   
  40d57d:	xchg   BYTE PTR [esi],bl
  40d57f:	lahf   
  40d580:	dec    edx
  40d581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d582:	sbb    DWORD PTR [ebp+0x40eb9927],ebx
  40d588:	cmp    ebx,DWORD PTR [eax-0x33828636]
  40d58e:	cwde   
  40d58f:	and    esp,DWORD PTR [esi-0x7a]
  40d592:	cld    
  40d593:	jp     0x40d526
  40d595:	repnz scas al,BYTE PTR es:[edi]
  40d597:	in     al,dx
  40d598:	sbb    eax,0x7823112f
  40d59d:	pcmpeqw mm7,mm5
  40d5a0:	fild   DWORD PTR [ecx+0x74]
  40d5a3:	loop   0x40d5db
  40d5a5:	mov    ebx,0xd1e42020
  40d5aa:	xor    al,0xa8
  40d5ac:	(bad)  
  40d5ad:	inc    ebx
  40d5ae:	adc    al,0x43
  40d5b0:	xchg   edi,eax
  40d5b1:	inc    edi
  40d5b2:	aaa    
  40d5b3:	add    al,0x77
  40d5b5:	or     BYTE PTR ds:0xaaca80ed,dh
  40d5bb:	cmp    DWORD PTR [ebx+0x4c],esp
  40d5be:	push   edx
  40d5bf:	or     ch,BYTE PTR [edi]
  40d5c1:	loope  0x40d617
  40d5c3:	test   BYTE PTR [eax-0x76],0x1c
  40d5c7:	outs   dx,DWORD PTR ds:[esi]
  40d5c8:	in     al,dx
  40d5c9:	jb     0x40d622
  40d5cb:	stos   DWORD PTR es:[edi],eax
  40d5cc:	in     al,0xbb
  40d5ce:	ret    0xab5f
  40d5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d2:	mov    esp,edx
  40d5d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d5:	les    eax,FWORD PTR [bx-0x24a6]
  40d5da:	outs   dx,DWORD PTR ds:[esi]
  40d5db:	stos   DWORD PTR es:[edi],eax
  40d5dc:	scas   eax,DWORD PTR es:[edi]
  40d5dd:	out    0xb3,al
  40d5df:	xchg   edx,eax
  40d5e0:	aas    
  40d5e1:	loop   0x40d642
  40d5e3:	inc    esp
  40d5e4:	adc    eax,0xa07bdfa4
  40d5e9:	xchg   ecx,eax
  40d5ea:	cwde   
  40d5eb:	xor    DWORD PTR [edi+eiz*4-0x1f46954f],esp
  40d5f2:	sbb    eax,DWORD PTR [esi]
  40d5f4:	xchg   esp,eax
  40d5f5:	mov    ebp,0x7916cafd
  40d5fa:	jmp    0xa2ff:0x6a81ce2c
  40d601:	jecxz  0x40d652
  40d603:	data16 scas al,BYTE PTR es:[edi]
  40d605:	and    dh,ah
  40d607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d608:	xchg   ebp,eax
  40d609:	in     al,0xc6
  40d60b:	sbb    BYTE PTR [ebx+0x4bcdde51],bl
  40d611:	fwait
  40d612:	ss sbb ch,ah
  40d615:	cs retf 0x9764
  40d619:	cmp    DWORD PTR [esi-0x7a67fab5],0xd1eae962
  40d623:	pop    es
  40d624:	xchg   DWORD PTR [ebx],esi
  40d626:	adc    ecx,ebx
  40d628:	xor    eax,0x93b07cac
  40d62d:	sub    DWORD PTR ds:0x8231ae56,eax
  40d633:	(bad)  
  40d635:	sbb    eax,0xc0738905
  40d63a:	cmc    
  40d63b:	ret    
  40d63c:	sub    ch,BYTE PTR [ecx-0x44f79d47]
  40d642:	pop    ecx
  40d643:	aas    
  40d644:	sbb    al,0xe8
  40d646:	adc    eax,0x2b5e837b
  40d64b:	aaa    
  40d64c:	cld    
  40d64d:	and    ebp,esi
  40d64f:	jge    0x40d604
  40d651:	xor    DWORD PTR [esi-0x1e],eax
  40d654:	add    ch,BYTE PTR ds:[ebp-0x14]
  40d658:	inc    edi
  40d659:	xchg   esp,eax
  40d65a:	je     0x40d617
  40d65c:	and    BYTE PTR [eax],ch
  40d65e:	mov    dh,0x9b
  40d660:	out    0x9c,eax
  40d662:	add    eax,0x22e94567
  40d667:	mov    ecx,0x576d52d4
  40d66c:	into   
  40d66d:	adc    eax,0xae2b7ee4
  40d672:	xor    dh,BYTE PTR [ecx+0x61]
  40d675:	imul   edx,DWORD PTR [eax-0x56],0x43
  40d679:	into   
  40d67a:	mov    ebp,0x8934b559
  40d67f:	xchg   BYTE PTR [eax+ecx*4-0x5d8ff75e],ah
  40d686:	and    BYTE PTR [ebx+0x3ecc7fcb],ch
  40d68c:	repnz xchg esi,eax
  40d68e:	and    edx,ebx
  40d690:	xchg   DWORD PTR [eax-0x608ed981],eax
  40d696:	mov    esp,0xf659bc96
  40d69b:	xchg   ecx,eax
  40d69c:	jne    0x40d62f
  40d69e:	push   edi
  40d69f:	xor    ah,BYTE PTR [esp+ebp*4+0x73f7cc1b]
  40d6a6:	fist   DWORD PTR [edi+0x14]
  40d6a9:	or     DWORD PTR [eax-0x560ae5a2],ebp
  40d6af:	jnp    0x40d72f
  40d6b1:	and    eax,0x42e2b333
  40d6b6:	cmc    
  40d6b7:	mov    DWORD PTR [ebx+0x6d173db5],edx
  40d6bd:	loop   0x40d6ef
  40d6bf:	and    eax,0x44766ed8
  40d6c4:	xchg   esp,eax
  40d6c5:	arpl   bx,bx
  40d6c7:	nop
  40d6c8:	xchg   esi,eax
  40d6c9:	mov    ds:0xff4f4628,al
  40d6ce:	add    DWORD PTR [ebx-0x2f],0x8f43b6e9
  40d6d5:	adc    BYTE PTR [eax+ebx*4],dh
  40d6d8:	scas   al,BYTE PTR es:[edi]
  40d6d9:	jmp    0x2be4a648
  40d6de:	outs   dx,DWORD PTR ds:[esi]
  40d6df:	inc    esp
  40d6e0:	outs   dx,BYTE PTR ds:[esi]
  40d6e1:	mov    al,fs:0x6e64c1cd
  40d6e7:	fisubr DWORD PTR [ebp-0x1b]
  40d6ea:	mov    dl,0xf
  40d6ec:	jg     0x40d70d
  40d6ee:	lods   al,BYTE PTR ds:[esi]
  40d6ef:	mov    BYTE PTR [eax],dh
  40d6f1:	push   eax
  40d6f2:	sub    DWORD PTR [edi-0x58],0x55c9b768
  40d6f9:	mov    edi,0x814d3553
  40d6fe:	inc    esi
  40d6ff:	adc    esi,eax
  40d701:	aam    0x6c
  40d703:	mov    DWORD PTR [edx+0x6072bb4a],0x483a51
  40d70d:	xor    edx,DWORD PTR ds:0x7f36a0d0
  40d713:	stc    
  40d714:	cli    
  40d715:	and    DWORD PTR [edx+0x7a],ebp
  40d718:	cmp    DWORD PTR [edi],0xffffffba
  40d71b:	inc    edx
  40d71c:	mov    ebx,DWORD PTR [edx+0x1b96e86e]
  40d722:	jle    0x40d6b4
  40d724:	or     eax,0xef8d50c7
  40d729:	std    
  40d72a:	ins    BYTE PTR es:[edi],dx
  40d72b:	add    DWORD PTR [ebx+ecx*4+0xdced8c9],eax
  40d732:	jae    0x40d78f
  40d734:	xor    BYTE PTR [edx+0x30e71d78],bl
  40d73a:	lods   eax,DWORD PTR ds:[esi]
  40d73b:	xor    ecx,edx
  40d73d:	cmp    DWORD PTR [eax+0x35],esi
  40d740:	pushf  
  40d741:	loope  0x40d72a
  40d743:	mov    ecx,0xf38eaad2
  40d748:	adc    bl,ch
  40d74a:	push   es
  40d74b:	sub    al,0x70
  40d74d:	sub    al,BYTE PTR [ebx+eiz*8-0x17cdbd6c]
  40d754:	xor    BYTE PTR [ebp-0x4b],ch
  40d757:	loopne 0x40d79a
  40d759:	push   0x8e1e3b97
  40d75e:	popf   
  40d75f:	sub    edx,edx
  40d761:	dec    esi
  40d762:	inc    eax
  40d763:	jmp    0x5de8:0x27d3a4d0
  40d76a:	pop    ss
  40d76b:	or     BYTE PTR [ecx+ecx*8-0x1e],0xe8
  40d770:	outs   dx,BYTE PTR ds:[esi]
  40d771:	jp     0x40d768
  40d773:	pop    esi
  40d774:	cmp    bl,dh
  40d776:	(bad)  
  40d778:	aaa    
  40d779:	mov    ah,0xd6
  40d77b:	nop
  40d77c:	pushf  
  40d77d:	ret    
  40d77e:	pop    ebp
  40d77f:	data16 jns 0x40d795
  40d782:	ins    DWORD PTR es:[edi],dx
  40d783:	cmp    dl,al
  40d785:	mov    esp,0xa061c6b3
  40d78a:	add    DWORD PTR [edx+0x4f],0x488e6068
  40d791:	xchg   ecx,eax
  40d792:	int    0xc0
  40d794:	cmp    BYTE PTR [edi+0x16],ch
  40d797:	jns    0x40d785
  40d799:	int    0x56
  40d79b:	cmp    al,0x4e
  40d79d:	xchg   BYTE PTR [ecx],bl
  40d79f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7a0:	jp     0x40d748
  40d7a2:	xor    BYTE PTR [esi-0x7d],al
  40d7a5:	mov    ah,0xe3
  40d7a7:	and    DWORD PTR [ecx-0x9],ecx
  40d7aa:	and    eax,esi
  40d7ac:	popa   
  40d7ad:	aam    0xa9
  40d7af:	pop    esi
  40d7b0:	cli    
  40d7b1:	retf   
  40d7b2:	mov    dl,0x84
  40d7b4:	push   ds
  40d7b5:	retf   0xd1b4
  40d7b8:	les    ecx,FWORD PTR ds:0xc967fa98
  40d7be:	add    BYTE PTR [edi],cl
  40d7c0:	out    0xfc,al
  40d7c2:	xchg   DWORD PTR [ecx+0x5],ebp
  40d7c5:	cmc    
  40d7c6:	cdq    
  40d7c7:	ins    DWORD PTR es:[edi],dx
  40d7c8:	pusha  
  40d7c9:	leave  
  40d7ca:	add    eax,0xbaab4bd4
  40d7cf:	pop    ds
  40d7d0:	cmc    
  40d7d1:	sub    eax,0xc9ce309c
  40d7d6:	out    0xcd,eax
  40d7d8:	xor    eax,0x6584c972
  40d7dd:	or     eax,0xac7e9747
  40d7e2:	(bad)  
  40d7e3:	mov    bl,0x5
  40d7e5:	ret    0xee02
  40d7e8:	inc    ebp
  40d7e9:	sbb    BYTE PTR [edx],ch
  40d7eb:	imul   edi,DWORD PTR [edi+0x393018e9],0x7a
  40d7f2:	cmovge esp,edx
  40d7f5:	push   ss
  40d7f6:	cmc    
  40d7f7:	and    DWORD PTR [edx],0x33b7e4b8
  40d7fd:	sbb    dh,ah
  40d7ff:	cmp    eax,0x868e9c12
  40d804:	sbb    edi,DWORD PTR [ecx+ebp*1-0x6125c4ce]
  40d80b:	adc    BYTE PTR [edx+ebp*8+0x3b],0xa4
  40d810:	inc    edi
  40d811:	hlt    
  40d812:	xchg   ecx,eax
  40d813:	adc    DWORD PTR [edx],edi
  40d815:	pop    esp
  40d816:	popf   
  40d817:	xchg   esp,eax
  40d818:	jne    0x40d892
  40d81a:	(bad)  
  40d81b:	fnstcw WORD PTR [ebx-0x206e609f]
  40d821:	xor    al,0x9e
  40d823:	scas   eax,DWORD PTR es:[edi]
  40d824:	pop    edi
  40d825:	and    al,BYTE PTR [eax+0x20ceb2ca]
  40d82b:	pop    ds
  40d82c:	into   
  40d82d:	rol    DWORD PTR [esp+edx*4-0x49dc0acd],1
  40d834:	inc    esi
  40d835:	fld    DWORD PTR [ebx+0x18]
  40d838:	or     ah,BYTE PTR [ebx+ecx*2+0x94f09ca]
  40d83f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d840:	sub    al,0x9a
  40d842:	sahf   
  40d843:	jg     0x40d8ad
  40d845:	push   0xa3ea0267
  40d84a:	dec    esi
  40d84b:	mov    ss,WORD PTR [eax]
  40d84d:	(bad)  
  40d84e:	stc    
  40d84f:	push   ecx
  40d850:	mov    cl,0xe0
  40d852:	iret   
  40d853:	jmp    0x2d2c3fb
  40d858:	mov    esi,DWORD PTR es:[ecx+0x77421a72]
  40d85f:	stc    
  40d860:	mov    eax,0x6f768d25
  40d865:	sbb    bl,BYTE PTR [ecx+0x53791b]
  40d86b:	xchg   edx,eax
  40d86c:	stc    
  40d86d:	mov    ebx,0x5a26cbfa
  40d872:	fdiv   DWORD PTR [ecx+0x6145fdc0]
  40d878:	sbb    DWORD PTR [ebx+0x1b2bd63a],ecx
  40d87e:	or     edi,ebx
  40d880:	add    al,0xef
  40d882:	arpl   WORD PTR [ebx+0xd],dx
  40d885:	or     DWORD PTR [eax],eax
  40d887:	cmc    
  40d888:	fdivr  DWORD PTR [edi]
  40d88a:	push   ss
  40d88b:	sbb    esi,ebx
  40d88d:	mov    ds:0xe5eacd56,al
  40d892:	xor    esp,DWORD PTR [esi+0x1d8be0c1]
  40d898:	retf   0x1053
  40d89b:	mov    ebp,0x607d9888
  40d8a0:	stos   DWORD PTR es:[edi],eax
  40d8a1:	mov    ebp,0x8395b5aa
  40d8a6:	(bad)  
  40d8a7:	(bad)  
  40d8a8:	nop
  40d8a9:	mov    DWORD PTR [ecx+0x396859fd],edx
  40d8af:	push   edx
  40d8b0:	mov    ds:0xac892a6f,al
  40d8b5:	imul   ecx,ecx,0x8cc1464a
  40d8bb:	jnp    0x40d8c3
  40d8bd:	inc    esi
  40d8be:	imul   eax,ebp,0xffffff97
  40d8c1:	cli    
  40d8c2:	fcomi  st,st(0)
  40d8c4:	mov    al,0xb7
  40d8c6:	or     BYTE PTR [esi-0x69518c62],0xcc
  40d8cd:	sbb    eax,DWORD PTR [eax+0x14]
  40d8d0:	dec    ebp
  40d8d1:	mov    dh,BYTE PTR [esi-0x23]
  40d8d4:	jge    0x40d8d9
  40d8d6:	jno    0x40d881
  40d8d8:	jno    0x40d8d2
  40d8da:	dec    edx
  40d8db:	bound  edi,QWORD PTR [ebp-0xff10454]
  40d8e1:	inc    ebx
  40d8e2:	jmp    0x40d8e2
  40d8e4:	cmp    edx,0x62523415
  40d8ea:	xchg   ebp,eax
  40d8eb:	es test al,0xd5
  40d8ee:	mov    cl,0xdc
  40d8f0:	push   eax
  40d8f1:	out    dx,al
  40d8f2:	(bad)  
  40d8f3:	call   0xdd6de175
  40d8f8:	retf   
  40d8f9:	arpl   WORD PTR ss:[ecx],ax
  40d8fc:	jge    0x40d958
  40d8fe:	sar    DWORD PTR [esi],cl
  40d900:	enter  0x2b3c,0xd7
  40d904:	bound  eax,QWORD PTR [edi+ebx*8+0x4393a51]
  40d90b:	sub    esi,esi
  40d90d:	pavgb  mm1,QWORD PTR [ebp-0x73]
  40d911:	mov    ebx,0xc850e57
  40d916:	imul   edi,DWORD PTR [ebp+0x206e7ab5],0x3d9a7037
  40d920:	ss stos BYTE PTR es:[edi],al
  40d922:	pushf  
  40d923:	fadd   st(4),st
  40d925:	dec    edx
  40d926:	sub    DWORD PTR [ecx],esp
  40d928:	push   ebp
  40d929:	fistp  WORD PTR [ecx+0x463f52f]
  40d92f:	lea    ebx,[esi+0x439b410c]
  40d935:	add    BYTE PTR ds:0xbf3491e9,bh
  40d93b:	repz xchg edi,eax
  40d93d:	dec    esi
  40d93e:	hlt    
  40d93f:	and    BYTE PTR [edx-0x132e7063],ah
  40d945:	pop    esi
  40d946:	fwait
  40d947:	push   eax
  40d948:	pusha  
  40d949:	add    eax,0x5c76ad9d
  40d94e:	pop    es
  40d94f:	xchg   ebx,eax
  40d950:	and    eax,0x9021fda
  40d955:	and    al,0x78
  40d957:	inc    ebx
  40d958:	imul   edi,ebp,0xd3a94711
  40d95e:	jmp    0xe88:0xbf4856b0
  40d965:	ror    DWORD PTR [ecx-0x66],1
  40d968:	cmp    dl,BYTE PTR [esi-0x6190b6a2]
  40d96e:	mov    eax,0x8c7ca23b
  40d973:	aam    0xf9
  40d975:	scas   al,BYTE PTR es:[edi]
  40d976:	mov    esi,0x344cd8f3
  40d97b:	dec    eax
  40d97c:	sbb    cl,bl
  40d97e:	dec    esp
  40d97f:	push   esi
  40d980:	push   edi
  40d981:	jmp    0x2316d2a4
  40d986:	and    al,0xd
  40d988:	scas   al,BYTE PTR es:[edi]
  40d989:	add    eax,0xaac55794
  40d98e:	retf   
  40d98f:	push   es
  40d990:	pop    ebp
  40d991:	(bad)  
  40d992:	sbb    cl,dh
  40d994:	dec    esi
  40d995:	add    BYTE PTR [ecx+0x58],bh
  40d998:	inc    edx
  40d999:	mov    edi,0x2464b04f
  40d99e:	sub    BYTE PTR [ebx+0x21],ch
  40d9a1:	and    eax,0xe3b9a8a1
  40d9a6:	sub    DWORD PTR es:0x2e945a72,edi
  40d9ad:	cdq    
  40d9ae:	inc    edi
  40d9af:	push   ebx
  40d9b0:	sbb    eax,0x3e675bbf
  40d9b5:	adc    BYTE PTR [esi],bh
  40d9b7:	jne    0x40d990
  40d9b9:	sub    DWORD PTR [ebp-0x16],eax
  40d9bc:	(bad)  
  40d9bd:	(bad)
  40d9c2:	or     BYTE PTR [eax+0x1d],0x63
  40d9c6:	cs pop es
  40d9c8:	sub    eax,0xa602fbcc
  40d9cd:	cmp    eax,0x3ada7202
  40d9d2:	lahf   
  40d9d3:	shr    ah,cl
  40d9d5:	retf   0xc521
  40d9d8:	in     eax,dx
  40d9d9:	leave  
  40d9da:	xor    DWORD PTR [eax],esi
  40d9dc:	mov    edx,DWORD PTR [ebp-0x176fc41e]
  40d9e2:	out    dx,al
  40d9e3:	lock stos DWORD PTR es:[edi],eax
  40d9e5:	scas   eax,DWORD PTR es:[edi]
  40d9e6:	mov    ch,0x3d
  40d9e8:	push   es
  40d9e9:	xchg   ebp,eax
  40d9ea:	inc    esi
  40d9eb:	mov    esi,0xa4ccea95
  40d9f0:	jl     0x40da28
  40d9f2:	dec    esp
  40d9f3:	xor    BYTE PTR [ecx-0x4],0x5c
  40d9f7:	loopne 0x40da5d
  40d9f9:	jmp    0xc3b0:0xc12b6ba1
  40da00:	mov    al,ds:0x989053f8
  40da05:	xchg   esp,eax
  40da06:	iret   
  40da07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da08:	(bad)  
  40da09:	pushf  
  40da0a:	and    BYTE PTR [edi-0x8],0x5a
  40da0e:	bound  esi,QWORD PTR [ebp-0x1d]
  40da11:	out    dx,eax
  40da12:	xchg   esp,eax
  40da13:	ret    
  40da14:	mov    edx,0xf99d2b0c
  40da19:	loope  0x40da2b
  40da1b:	jg     0x40da55
  40da1d:	sar    eax,1
  40da1f:	popa   
  40da20:	dec    ebp
  40da21:	sub    bh,ah
  40da23:	repnz in al,dx
  40da25:	inc    ecx
  40da26:	mov    al,0xe0
  40da28:	add    eax,0x861d842a
  40da2d:	loopne 0x40da46
  40da2f:	mov    eax,ds
  40da31:	xchg   esp,eax
  40da32:	test   BYTE PTR [eax+edi*1-0x1fa36dbf],bl
  40da39:	sub    DWORD PTR [esi+0x288c4a74],0x30f187c5
  40da43:	xchg   DWORD PTR [eax-0x40],ebx
  40da46:	mov    eax,ecx
  40da48:	das    
  40da49:	inc    ecx
  40da4a:	mov    ebx,0x22739f2e
  40da4f:	sbb    BYTE PTR [esi-0x6b0f274],ah
  40da55:	adc    BYTE PTR [edi-0xd188aa0],0xd6
  40da5c:	into   
  40da5d:	scas   eax,DWORD PTR es:[edi]
  40da5e:	stos   BYTE PTR es:[edi],al
  40da5f:	ret    0xcd22
  40da62:	fimul  DWORD PTR [ebx]
  40da64:	and    edx,DWORD PTR [ecx-0xf]
  40da67:	ret    0x61a2
  40da6a:	int3   
  40da6b:	into   
  40da6c:	(bad)  
  40da6d:	fild   DWORD PTR [ebx-0x32]
  40da70:	sahf   
  40da71:	pop    edi
  40da72:	push   cs
  40da73:	xchg   DWORD PTR [ecx-0x16d191ea],ecx
  40da79:	cmp    dh,0xac
  40da7c:	or     dh,al
  40da7e:	int    0xc
  40da80:	adc    bh,BYTE PTR [eax]
  40da82:	sub    al,0xbb
  40da84:	shr    edx,cl
  40da86:	imul   edx,DWORD PTR [edi],0x2a
  40da89:	and    eax,0x45ce82ac
  40da8e:	js     0x40da36
  40da90:	into   
  40da91:	sbb    DWORD PTR [esi-0x42],ebp
  40da94:	sub    ecx,DWORD PTR [ebx]
  40da96:	invd   
  40da98:	mov    esp,DWORD PTR [ecx]
  40da9a:	cmp    eax,0x21686eb9
  40da9f:	in     eax,dx
  40daa0:	xor    eax,0xa6158376
  40daa5:	rcl    eax,1
  40daa7:	add    al,0x3
  40daa9:	jmp    0xe144c209
  40daae:	push   ebp
  40daaf:	xchg   esi,eax
  40dab0:	data16 mov ds:0xdc799351,al
  40dab6:	adc    BYTE PTR [ebp+0x4eeb4436],dh
  40dabc:	aaa    
  40dabd:	jo     0x40da66
  40dabf:	push   0xc83a183d
  40dac4:	push   0x9e08ab3f
  40dac9:	dec    ecx
  40daca:	nop
  40dacb:	pop    es
  40dacc:	iret   
  40dacd:	iret   
  40dace:	add    eax,0x608ae896
  40dad3:	dec    eax
  40dad4:	inc    esi
  40dad5:	jne    0x40db41
  40dad7:	into   
  40dad8:	loop   0x40da9a
  40dada:	mov    ebx,0xef2e4c24
  40dadf:	xor    al,0xe3
  40dae1:	jge    0x40db32
  40dae3:	and    eax,0x11ad84f0
  40dae8:	or     BYTE PTR [ecx+0x7a11ed1d],0x4f
  40daef:	sahf   
  40daf0:	lea    ebx,[ecx]
  40daf2:	adc    DWORD PTR [esi+0x2c1aa149],edi
  40daf8:	push   edx
  40daf9:	in     eax,dx
  40dafa:	loop   0x40dad7
  40dafc:	mov    ds:0x458ac79a,eax
  40db01:	push   ebx
  40db02:	bound  esp,QWORD PTR [eax+eax*4+0x61]
  40db06:	xor    esi,edi
  40db08:	loop   0x40db2b
  40db0a:	cmp    BYTE PTR [edx+0x31be586f],dl
  40db10:	inc    edi
  40db11:	shl    BYTE PTR [esi],0x3e
  40db14:	xchg   edi,eax
  40db15:	dec    eax
  40db16:	mov    ds:0x5f29d81f,al
  40db1b:	nop
  40db1c:	sub    ah,BYTE PTR [esi+0x2a]
  40db1f:	out    dx,eax
  40db20:	add    al,0x86
  40db22:	inc    edx
  40db23:	sbb    cl,BYTE PTR [esi]
  40db25:	xor    dl,BYTE PTR [edx]
  40db27:	je     0x40db70
  40db29:	adc    DWORD PTR [ebx+0x78],esp
  40db2c:	lea    esi,[ebx+0x1c5a6a44]
  40db32:	pop    ss
  40db33:	pop    ebx
  40db34:	sti    
  40db35:	loopne 0x40db24
  40db37:	dec    ebx
  40db38:	iret   
  40db39:	dec    ebp
  40db3a:	xchg   edx,eax
  40db3b:	fimul  DWORD PTR [eax]
  40db3d:	leave  
  40db3e:	out    dx,eax
  40db3f:	pop    esp
  40db40:	ins    BYTE PTR es:[edi],dx
  40db41:	imul   esp,DWORD PTR [eax+0x3f],0xe378a918
  40db48:	mov    dh,0x89
  40db4a:	retf   
  40db4b:	cmp    DWORD PTR [edi],ebx
  40db4d:	push   eax
  40db4e:	scas   al,BYTE PTR es:[edi]
  40db4f:	jns    0x40db6d
  40db51:	pusha  
  40db52:	pop    edx
  40db53:	call   0xd2f9:0xd03cc4e4
  40db5a:	push   cs
  40db5b:	jmp    0xa6cc:0x9ceafda8
  40db62:	sub    DWORD PTR [ebp+0x7],esi
  40db65:	ficomp WORD PTR [eax-0x21]
  40db68:	adc    eax,0x19129d79
  40db6d:	cmp    al,0x38
  40db6f:	jns    0x40db17
  40db71:	inc    esi
  40db72:	add    esi,esp
  40db74:	cmc    
  40db75:	pusha  
  40db76:	ja     0x40dbf4
  40db78:	push   ecx
  40db79:	sbb    DWORD PTR [ebp-0x1d33dcb4],esi
  40db7f:	mov    DWORD PTR [ebx],ebx
  40db81:	pop    ss
  40db82:	call   0xe3a6:0x53798233
  40db89:	jl     0x40db10
  40db8b:	jg     0x40dbc8
  40db8d:	pop    es
  40db8e:	xor    edi,DWORD PTR [eax+0x51]
  40db91:	or     ebx,eax
  40db93:	add    eax,0xe67946ad
  40db98:	and    eax,0xa71b9e9e
  40db9d:	lods   al,BYTE PTR ds:[esi]
  40db9e:	jns    0x40db8e
  40dba0:	mov    BYTE PTR [eax+eax*4-0x6c50457],dh
  40dba7:	outs   dx,DWORD PTR ds:[esi]
  40dba8:	cwde   
  40dba9:	jae    0x40db7f
  40dbab:	push   ebp
  40dbac:	mov    ds:0x9cea961c,al
  40dbb1:	ret    0x8552
  40dbb4:	inc    ebx
  40dbb5:	xor    DWORD PTR [esi+ebx*8-0x8],ebp
  40dbb9:	test   ecx,0xe811e52a
  40dbbf:	jg     0x40dbfc
  40dbc1:	adc    eax,0xee669f44
  40dbc6:	shr    BYTE PTR [edx],cl
  40dbc8:	jp     0x40dbac
  40dbca:	inc    ecx
  40dbcb:	scas   al,BYTE PTR es:[edi]
  40dbcc:	or     al,0x18
  40dbce:	ret    0xc746
  40dbd1:	gs push esi
  40dbd3:	out    dx,eax
  40dbd4:	mov    esp,0xb19760f0
  40dbd9:	xor    BYTE PTR [eax-0x1b644cc0],ch
  40dbdf:	aad    0xe8
  40dbe1:	and    eax,0x5d7a8e65
  40dbe6:	mov    eax,0xc187e118
  40dbeb:	inc    edx
  40dbec:	fwait
  40dbed:	mov    ecx,0x35740752
  40dbf2:	cmp    eax,0x297a9fa5
  40dbf7:	add    DWORD PTR [eax],0x4f
  40dbfa:	xor    ecx,DWORD PTR [eax-0x42]
  40dbfd:	inc    ecx
  40dbfe:	push   ebp
  40dbff:	fsub   DWORD PTR [eax-0x7e0ca8ea]
  40dc05:	cmp    DWORD PTR [esi],0x7d
  40dc08:	sti    
  40dc09:	ret    0x866b
  40dc0c:	js     0x40dc56
  40dc0e:	sar    DWORD PTR [eax-0x6a675a95],1
  40dc14:	xlat   BYTE PTR ds:[ebx]
  40dc15:	and    ah,ch
  40dc17:	jmp    0x82f6fc52
  40dc1c:	scas   eax,DWORD PTR es:[edi]
  40dc1d:	out    dx,eax
  40dc1e:	stc    
  40dc1f:	lods   eax,DWORD PTR ds:[esi]
  40dc20:	das    
  40dc21:	gs shl ch,cl
  40dc24:	inc    esp
  40dc25:	mov    esi,0xb88061d6
  40dc2a:	cmp    eax,0x68b26d23
  40dc2f:	dec    edi
  40dc30:	retf   0xfb69
  40dc33:	pop    esi
  40dc34:	xlat   BYTE PTR ds:[ebx]
  40dc35:	ficom  DWORD PTR [edx+0x3c]
  40dc38:	(bad)  
  40dc39:	call   FWORD PTR [ecx-0x1b43856d]
  40dc3f:	lahf   
  40dc40:	out    0x89,al
  40dc42:	mov    ds:0x49ea73d6,eax
  40dc47:	(bad)  
  40dc49:	jmp    0x40dc80
  40dc4b:	dec    esp
  40dc4c:	adc    edi,DWORD PTR [esi+ebx*1-0x5]
  40dc50:	rcl    BYTE PTR [ecx],cl
  40dc52:	xchg   edx,eax
  40dc53:	push   esp
  40dc54:	fxch   st(3)
  40dc56:	xor    BYTE PTR [edx-0x22],ch
  40dc59:	sub    ebx,ecx
  40dc5b:	pop    eax
  40dc5c:	mov    ebp,0x590aa4d7
  40dc61:	out    dx,eax
  40dc62:	adc    eax,0xea1aa718
  40dc67:	scas   al,BYTE PTR es:[edi]
  40dc68:	pop    edx
  40dc69:	xor    BYTE PTR [esi+edi*1],cl
  40dc6c:	call   DWORD PTR [eax+esi*2]
  40dc6f:	scas   al,BYTE PTR es:[edi]
  40dc70:	mov    ecx,?
  40dc72:	add    bh,BYTE PTR [ecx]
  40dc74:	retf   0x7874
  40dc77:	das    
  40dc78:	cmp    bl,ch
  40dc7a:	cli    
  40dc7b:	popa   
  40dc7c:	sbb    BYTE PTR [edi+0x42ae669d],al
  40dc82:	adc    bh,bh
  40dc84:	xor    BYTE PTR [ebx-0x7318e3fb],ah
  40dc8a:	push   es
  40dc8b:	addr16 dec esi
  40dc8d:	mov    dl,0x7b
  40dc8f:	and    BYTE PTR [edi-0x2f],bh
  40dc92:	gs aad 0xd
  40dc95:	jle    0x40dc63
  40dc97:	or     edx,DWORD PTR [eax-0x5]
  40dc9a:	mov    ds:0x316a1555,eax
  40dc9f:	push   ss
  40dca0:	ror    DWORD PTR [edi+eax*4+0x3af9c959],0xea
  40dca8:	jo     0x40dc42
  40dcaa:	pop    es
  40dcab:	ror    DWORD PTR ds:0x411ef63a,0x20
  40dcb2:	xlat   BYTE PTR ds:[ebx]
  40dcb3:	sub    ah,BYTE PTR [esi-0x6b]
  40dcb6:	imul   ecx,ebp,0x47cd6b2d
  40dcbc:	add    al,0xe3
  40dcbe:	int3   
  40dcbf:	mov    esi,0xe9e067c3
  40dcc4:	fimul  DWORD PTR [esi]
  40dcc6:	imul   ebx,DWORD PTR [eax+ecx*8-0x14ccf295],0xffffff88
  40dcce:	cmp    al,0xf7
  40dcd0:	mov    DWORD PTR [eax-0x30729412],ebx
  40dcd6:	pop    ebx
  40dcd7:	pushf  
  40dcd8:	(bad)  
  40dcda:	std    
  40dcdb:	mov    ebx,0xdf50c5b1
  40dce0:	adc    BYTE PTR [ebx-0x6],al
  40dce3:	in     eax,dx
  40dce4:	cmp    cl,0x4e
  40dce7:	jl     0x40dd40
  40dce9:	fsub   QWORD PTR [ecx]
  40dceb:	pop    esp
  40dcec:	jnp    0x40dc79
  40dcee:	dec    edi
  40dcef:	scas   al,BYTE PTR es:[edi]
  40dcf0:	mov    edi,0x96f978d9
  40dcf5:	lods   al,BYTE PTR ds:[esi]
  40dcf6:	mov    al,0x28
  40dcf8:	dec    ebp
  40dcf9:	mov    ecx,0x6b862de3
  40dcfe:	add    ecx,DWORD PTR [esi+eax*2-0x56578442]
  40dd05:	dec    edi
  40dd06:	sbb    BYTE PTR [eax],dl
  40dd08:	pop    es
  40dd09:	(bad)  
  40dd0a:	or     edi,DWORD PTR [ebx+eax*4+0x12378d34]
  40dd11:	int3   
  40dd12:	mov    ch,BYTE PTR [ebx-0x37cf5ccb]
  40dd18:	ja     0x40dd17
  40dd1a:	jns    0x40dd40
  40dd1c:	and    DWORD PTR [eax],esi
  40dd1e:	xchg   ebx,eax
  40dd1f:	ret    0xeba8
  40dd22:	aas    
  40dd23:	ret    0x4809
  40dd26:	into   
  40dd27:	dec    edi
  40dd28:	ret    0xeea2
  40dd2b:	mov    edx,0xcda95f4
  40dd30:	aaa    
  40dd31:	xchg   edi,eax
  40dd32:	loop   0x40dd13
  40dd34:	dec    edi
  40dd35:	sar    dl,cl
  40dd37:	cmp    eax,0xfff6e258
  40dd3c:	mov    DWORD PTR [ebx],esi
  40dd3e:	into   
  40dd3f:	push   cs
  40dd40:	enter  0xc5f2,0x15
  40dd44:	aaa    
  40dd45:	nop
  40dd46:	icebp  
  40dd47:	data16 sub al,BYTE PTR ds:0x69083a0e
  40dd4e:	fst    DWORD PTR [esi-0x14]
  40dd51:	add    bh,dh
  40dd53:	imul   ecx,esp,0x1d
  40dd56:	mov    esp,0x416af5b9
  40dd5b:	cmp    ebp,edi
  40dd5d:	pop    ebp
  40dd5e:	push   esi
  40dd5f:	jns    0x40dcea
  40dd61:	cmp    DWORD PTR [edx*8-0x3982d298],edi
  40dd68:	jmp    0x40dd73
  40dd6a:	aam    0x2f
  40dd6c:	pop    edx
  40dd6d:	jno    0x40dde5
  40dd6f:	inc    esi
  40dd70:	int3   
  40dd71:	xchg   esi,eax
  40dd72:	mov    al,ds:0x70f1b1e7
  40dd77:	mov    ds:0x1ab22307,al
  40dd7c:	shr    BYTE PTR [esi-0x21],1
  40dd7f:	leave  
  40dd80:	fmul   QWORD PTR [ebp-0x451be49b]
  40dd86:	mov    eax,0x42aac72b
  40dd8b:	mov    ds:0x84cf16ab,eax
  40dd90:	retf   
  40dd91:	adc    bh,BYTE PTR [ecx]
  40dd93:	outs   dx,DWORD PTR ds:[esi]
  40dd94:	adc    dl,BYTE PTR ds:0xba309003
  40dd9a:	mov    al,ds:0xf113f818
  40dd9f:	sub    BYTE PTR [edi],dl
  40dda1:	arpl   WORD PTR [edi+0x59164895],di
  40dda7:	add    al,0x9e
  40dda9:	nop
  40ddaa:	or     eax,0x158adfaa
  40ddaf:	loopne 0x40dd36
  40ddb1:	dec    ebp
  40ddb2:	and    al,dl
  40ddb4:	fst    DWORD PTR [ecx+ecx*1+0xf35d60b]
  40ddbb:	inc    ebx
  40ddbc:	dec    ebp
  40ddbd:	push   edi
  40ddbe:	jl     0x40de04
  40ddc0:	iret   
  40ddc1:	sbb    esp,0x3a
  40ddc4:	inc    esi
  40ddc5:	dec    esp
  40ddc6:	ins    BYTE PTR es:[edi],dx
  40ddc7:	xor    dh,0xaa
  40ddca:	adc    BYTE PTR [eax-0x3d],bl
  40ddcd:	clc    
  40ddce:	inc    edi
  40ddcf:	lea    ebx,[ebp+0x5a554abf]
  40ddd5:	add    BYTE PTR [eax+0x3e],bl
  40ddd8:	mov    dl,0x28
  40ddda:	loop   0x40de59
  40dddc:	jg     0x40dd8c
  40ddde:	call   0x2f6f:0x7e2ea447
  40dde5:	push   esp
  40dde6:	dec    ebx
  40dde7:	add    ebx,DWORD PTR [eax]
  40dde9:	int    0xc
  40ddeb:	xlat   BYTE PTR ds:[ebx]
  40ddec:	scas   eax,DWORD PTR es:[edi]
  40dded:	loop   0x40dd71
  40ddef:	gs push ss
  40ddf1:	or     esp,ebx
  40ddf3:	out    0x2c,al
  40ddf5:	dec    eax
  40ddf6:	loopne 0x40de45
  40ddf8:	in     eax,0x30
  40ddfa:	aad    0x7
  40ddfc:	int    0x82
  40ddfe:	shr    ch,0xa0
  40de01:	cli    
  40de02:	add    BYTE PTR [eax+0x34e4bdd6],dl
  40de08:	jge    0x40dde4
  40de0a:	(bad)  
  40de0b:	mov    ebx,0x988d0741
  40de10:	test   edx,edi
  40de12:	push   eax
  40de13:	aam    0xc6
  40de15:	or     BYTE PTR [esi-0x5808808f],0x3c
  40de1c:	adc    edi,edx
  40de1e:	es push esp
  40de20:	je     0x40ddf0
  40de22:	xor    esi,edx
  40de24:	xor    eax,0x54e0e07a
  40de29:	(bad)  
  40de2a:	xchg   esi,eax
  40de2b:	sahf   
  40de2c:	cdq    
  40de2d:	imul   ecx,DWORD PTR [esi+eax*4-0x926b28b],0xffffff87
  40de35:	mov    BYTE PTR [ebx+0x49],ah
  40de38:	pop    esp
  40de39:	sbb    al,0xc9
  40de3b:	dec    esp
  40de3c:	jle    0x40de28
  40de3e:	mov    bl,0xa5
  40de40:	jno    0x40ddc2
  40de42:	lods   al,BYTE PTR ds:[esi]
  40de43:	and    bl,BYTE PTR ds:0x23e66be4
  40de49:	push   ss
  40de4a:	loope  0x40de07
  40de4c:	dec    ecx
  40de4d:	sar    DWORD PTR [edx+0x6b130eef],cl
  40de53:	scas   eax,DWORD PTR es:[edi]
  40de54:	dec    esi
  40de55:	cmp    eax,0x9a21bb6d
  40de5a:	mov    ebp,0x63118ba4
  40de5f:	dec    ebp
  40de60:	cmp    eax,0xc7923145
  40de65:	pop    edi
  40de66:	mov    eax,0xe864f427
  40de6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de6c:	aas    
  40de6d:	repnz fwait
  40de6f:	cdq    
  40de70:	and    dl,dl
  40de72:	call   0x357fa9b3
  40de77:	xchg   DWORD PTR [esi+0x6c],edi
  40de7a:	pop    ecx
  40de7b:	lahf   
  40de7c:	and    ebx,DWORD PTR ds:0x523d682e
  40de82:	dec    edi
  40de83:	shr    BYTE PTR [ebx-0x24dcbc03],0xd8
  40de8a:	pop    es
  40de8b:	jno    0x40deb8
  40de8d:	sub    dl,dh
  40de8f:	loope  0x40de64
  40de91:	dec    esi
  40de92:	jle    0x40debd
  40de94:	pusha  
  40de95:	push   esi
  40de96:	xor    al,0xdd
  40de98:	les    ebx,FWORD PTR [ebx+0x46]
  40de9b:	pop    eax
  40de9c:	loop   0x40de93
  40de9e:	mov    eax,ds:0xd2292cea
  40dea3:	dec    ebx
  40dea4:	lahf   
  40dea5:	push   eax
  40dea6:	std    
  40dea7:	push   ss
  40dea8:	or     BYTE PTR fs:[ecx+0x3c745dd7],cl
  40deaf:	push   esi
  40deb0:	shr    DWORD PTR ds:0x15fb63a6,cl
  40deb6:	ror    edx,cl
  40deb8:	or     eax,0x980b584a
  40debd:	add    al,0x10
  40debf:	adc    eax,0x7da16a7c
  40dec4:	add    BYTE PTR [ebp+0x35],dh
  40dec7:	and    eax,0x1959b492
  40decc:	add    al,BYTE PTR fs:[edx+edx*8-0x2fee88b3]
  40ded4:	fwait
  40ded5:	mov    dh,0xf8
  40ded7:	outs   dx,BYTE PTR ds:[esi]
  40ded8:	mov    al,ds:0xfb9a6f41
  40dedd:	out    dx,al
  40dede:	mul    eax
  40dee0:	sub    dh,BYTE PTR [ebx]
  40dee2:	data16 add al,0x97
  40dee5:	ja     0x40df37
  40dee7:	push   cs
  40dee8:	outs   dx,BYTE PTR ds:[esi]
  40dee9:	addr16 je 0x40def3
  40deec:	or     ah,BYTE PTR [ecx+0x62]
  40deef:	stos   BYTE PTR es:[edi],al
  40def0:	jmp    0x78d734ee
  40def5:	cli    
  40def6:	(bad)
  40defa:	test   al,0x31
  40defc:	shr    DWORD PTR [eax+esi*1-0x698a56ec],cl
  40df03:	push   ecx
  40df04:	cld    
  40df05:	fmul   QWORD PTR [esi+edx*2]
  40df08:	in     al,dx
  40df09:	xchg   ah,al
  40df0b:	jecxz  0x40df63
  40df0d:	mov    BYTE PTR [esi],bh
  40df0f:	mov    ecx,0xce13e446
  40df14:	nop
  40df15:	imul   edx,ecx,0xffffffe4
  40df18:	jp     0x40df80
  40df1a:	mov    ecx,0x3824d4cf
  40df1f:	sbb    DWORD PTR [ebx+0x3f],0x7
  40df23:	inc    ebp
  40df24:	les    edi,FWORD PTR [eax+0x2d]
  40df27:	mov    ?,esp
  40df29:	or     BYTE PTR [ecx+0x2443118f],0xcf
  40df30:	push   es
  40df31:	dec    ebx
  40df32:	xor    al,0x8e
  40df34:	sbb    DWORD PTR [ebx+0x133fc363],esi
  40df3a:	iret   
  40df3b:	lea    ebx,[edi-0x7d]
  40df3e:	test   eax,0xa42c9b0f
  40df43:	out    dx,al
  40df44:	es (bad) 
  40df46:	mov    bl,0x36
  40df48:	or     BYTE PTR [ebx+0x51],0x4a
  40df4c:	pushf  
  40df4d:	mov    cl,0x28
  40df4f:	scas   eax,DWORD PTR es:[edi]
  40df50:	add    eax,DWORD PTR [ebp+ecx*8+0x30]
  40df54:	pop    ds
  40df55:	popa   
  40df56:	inc    esi
  40df57:	and    al,0x43
  40df59:	test   al,0xc2
  40df5b:	jg     0x40df50
  40df5d:	xor    al,0x5d
  40df5f:	lods   eax,DWORD PTR ds:[esi]
  40df60:	cli    
  40df61:	sbb    dl,0xd7
  40df64:	push   ss
  40df65:	test   DWORD PTR [edi-0xe],ebp
  40df68:	in     eax,0x80
  40df6a:	ds retf 0x97c9
  40df6e:	cmp    esi,edx
  40df70:	xor    bl,BYTE PTR [edx+0x32]
  40df73:	scas   al,BYTE PTR es:[edi]
  40df74:	js     0x40dfd0
  40df76:	ss push es
  40df78:	xor    eax,0xae315a99
  40df7d:	sar    BYTE PTR gs:[edx+0x51],cl
  40df81:	test   DWORD PTR [eax],edx
  40df83:	and    ax,0xdbeb
  40df87:	add    eax,0x9d352a8a
  40df8c:	loopne 0x40df88
  40df8e:	lea    ecx,[edx+0x62]
  40df91:	mov    bl,0x58
  40df93:	jmp    0x40df69
  40df95:	xor    BYTE PTR [eax],al
  40df97:	das    
  40df98:	and    BYTE PTR [edi-0x6b40a294],ch
  40df9e:	arpl   bp,sp
  40dfa0:	js     0x40dfe4
  40dfa2:	and    ebx,esi
  40dfa4:	sub    edi,ebp
  40dfa6:	sbb    ebp,ebx
  40dfa8:	sar    DWORD PTR [ebp-0x2ca314d6],cl
  40dfae:	inc    ecx
  40dfaf:	sar    BYTE PTR [edi-0x49],cl
  40dfb2:	test   al,bl
  40dfb4:	or     BYTE PTR [edx-0x63],bh
  40dfb7:	dec    edi
  40dfb8:	add    BYTE PTR [eax+0x63],dl
  40dfbb:	call   0xcb1882ec
  40dfc0:	adc    ch,0x64
  40dfc3:	xchg   ecx,eax
  40dfc4:	loope  0x40dffa
  40dfc6:	cmp    BYTE PTR [eax-0x2fa2345d],bl
  40dfcc:	inc    edx
  40dfcd:	aas    
  40dfce:	mov    esp,0x8864f7e4
  40dfd3:	ret    
  40dfd4:	mov    DWORD PTR [edx+0x2b],0xda8fc7fe
  40dfdb:	push   edi
  40dfdc:	repz push edx
  40dfde:	lock mov BYTE PTR gs:0x110554d1,dl
  40dfe6:	aaa    
  40dfe7:	cmp    eax,0x95879219
  40dfec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfed:	pop    ss
  40dfee:	push   esi
  40dfef:	mov    esi,0x807696b0
  40dff4:	cmp    al,0x72
  40dff6:	adc    edi,DWORD PTR [eax-0x4f]
  40dff9:	(bad)  
  40dffb:	xor    eax,0x46014de5
  40e000:	lods   eax,DWORD PTR ds:[esi]
  40e001:	push   cs
  40e002:	out    dx,eax
  40e003:	rcl    bl,cl
  40e005:	std    
  40e006:	dec    ebx
  40e007:	cmp    esp,DWORD PTR [edi]
  40e009:	fdiv   QWORD PTR [edx-0x9]
  40e00c:	inc    edx
  40e00d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e00e:	out    0x10,eax
  40e010:	push   ecx
  40e011:	mov    cl,0xb3
  40e013:	push   ss
  40e014:	xchg   ebp,eax
  40e015:	(bad)  
  40e016:	lods   eax,DWORD PTR ds:[esi]
  40e017:	sbb    edi,DWORD PTR [ecx]
  40e019:	fwait
  40e01a:	or     eax,0x1f23d6c6
  40e01f:	sbb    bl,BYTE PTR [esi-0x7b]
  40e022:	aad    0xcf
  40e024:	imul   eax,ebx,0xc2538db0
  40e02a:	fidivr WORD PTR [ebp-0x67e3a85b]
  40e030:	inc    esi
  40e031:	mov    esi,0x75ec4751
  40e036:	xchg   ebp,eax
  40e037:	pop    ebp
  40e038:	fwait
  40e039:	sub    BYTE PTR gs:[edi],bh
  40e03c:	xor    eax,0x92e40421
  40e041:	sahf   
  40e042:	mov    ds:0xec63d280,al
  40e047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e048:	out    0xed,eax
  40e04a:	inc    esi
  40e04b:	in     al,dx
  40e04c:	scas   eax,DWORD PTR es:[edi]
  40e04d:	je     0x40e09e
  40e04f:	push   es
  40e050:	xlat   BYTE PTR ds:[ebx]
  40e051:	test   DWORD PTR [edx-0x59],edi
  40e054:	bnd jmp 0xc19e5b57
  40e05a:	push   ebx
  40e05b:	cld    
  40e05c:	(bad)  
  40e05d:	pop    ebx
  40e05e:	out    0x19,eax
  40e060:	cwde   
  40e061:	enter  0x5e97,0x19
  40e065:	push   esp
  40e066:	call   0x4c128286
  40e06b:	xor    eax,0xcde06bdc
  40e070:	cmp    esi,DWORD PTR [eax-0x3fc39f7d]
  40e076:	cld    
  40e077:	push   ebx
  40e078:	xchg   ebx,eax
  40e079:	pop    eax
  40e07a:	and    ch,BYTE PTR ss:[edx-0x43]
  40e07e:	cmp    eax,0x32ef72ac
  40e083:	jmp    0xb69d6cba
  40e088:	test   bh,dh
  40e08a:	cwde   
  40e08b:	into   
  40e08c:	cmp    al,al
  40e08e:	les    esp,FWORD PTR [ebp+0x24]
  40e091:	sub    esp,DWORD PTR [eax]
  40e093:	mov    WORD PTR [eax+0x3d],?
  40e096:	push   esi
  40e097:	ror    BYTE PTR gs:[esi+0xf],0xd0
  40e09c:	sbb    edx,esp
  40e09e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e09f:	dec    ebp
  40e0a0:	bound  edx,QWORD PTR [eax]
  40e0a2:	sbb    eax,0xa45adc51
  40e0a7:	arpl   WORD PTR [ebx-0x66],si
  40e0aa:	mov    dl,0xa2
  40e0ac:	xlat   BYTE PTR ds:[ebx]
  40e0ad:	inc    eax
  40e0ae:	(bad)  
  40e0b1:	repnz loop 0x40e07d
  40e0b4:	shl    DWORD PTR [ebp-0x15],cl
  40e0b7:	outs   dx,BYTE PTR ds:[esi]
  40e0b8:	xchg   ecx,eax
  40e0b9:	jbe    0x40e054
  40e0bb:	inc    ebp
  40e0bc:	in     eax,dx
  40e0bd:	clc    
  40e0be:	mov    eax,ds:0x643f69db
  40e0c3:	mov    ecx,DWORD PTR [esp+esi*8+0x1b]
  40e0c7:	nop
  40e0c8:	cmp    al,0xf7
  40e0ca:	or     BYTE PTR [ecx+0x2e],ch
  40e0cd:	push   es
  40e0ce:	cmp    eax,0xd5a66bfa
  40e0d3:	and    ebp,ebx
  40e0d5:	cmp    al,0x24
  40e0d7:	push   es
  40e0d8:	shl    BYTE PTR [edi+0x5],cl
  40e0db:	cmp    DWORD PTR [edi-0x42],ebp
  40e0de:	into   
  40e0df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0e0:	cld    
  40e0e1:	cmp    BYTE PTR [esi+esi*1-0x5b2f3680],ch
  40e0e8:	loop   0x40e0b2
  40e0ea:	xchg   edi,eax
  40e0eb:	inc    ecx
  40e0ec:	mov    ch,0xd4
  40e0ee:	or     al,BYTE PTR [edi+0x6a0ae794]
  40e0f4:	icebp  
  40e0f5:	iret   
  40e0f6:	pandn  mm2,QWORD PTR [edx]
  40e0f9:	popf   
  40e0fa:	out    0x10,al
  40e0fc:	mov    edx,0x475664b
  40e101:	dec    eax
  40e102:	fwait
  40e103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e104:	pop    ds
  40e105:	xor    DWORD PTR [eax],edx
  40e107:	test   eax,0xd9f13280
  40e10c:	sahf   
  40e10d:	jmp    0x40e0af
  40e10f:	xor    BYTE PTR [ecx+0x40],ah
  40e112:	out    0xc9,eax
  40e114:	(bad)  
  40e115:	sub    ecx,DWORD PTR [eax-0x1d]
  40e118:	into   
  40e119:	popf   
  40e11a:	cmp    dh,BYTE PTR [ebp+0x1b]
  40e11d:	or     BYTE PTR [edi+0x612f12d3],dl
  40e123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e124:	(bad)  
  40e125:	test   al,0x93
  40e127:	xchg   esi,eax
  40e128:	mov    ds:0x5081cee,al
  40e12d:	pop    esi
  40e12e:	aam    0xeb
  40e130:	jb     0x40e0c8
  40e132:	xor    BYTE PTR [ebx-0x187c1b57],ch
  40e138:	call   0x8213:0x579b42cd
  40e13f:	push   ecx
  40e140:	lods   eax,DWORD PTR ds:[esi]
  40e141:	int3   
  40e142:	adc    DWORD PTR [esi],edx
  40e144:	jge    0x40e1c5
  40e146:	cmp    DWORD PTR [ecx+0x54b440c4],0x24
  40e14d:	push   0x69
  40e14f:	ins    BYTE PTR es:[edi],dx
  40e150:	gs jmp 0xd8360e86
  40e156:	pop    ss
  40e157:	hlt    
  40e158:	xor    eax,0x4eeb21a
  40e15d:	pushf  
  40e15e:	xchg   ebx,eax
  40e15f:	mov    esi,0x83642dbb
  40e164:	ficom  DWORD PTR [ecx-0x7d39af13]
  40e16a:	lea    ecx,[ebx]
  40e16c:	jns    0x40e1c5
  40e16e:	add    BYTE PTR [ebx+0x7bacf10b],ah
  40e174:	xchg   esp,eax
  40e175:	mov    eax,ds:0x4fb9b538
  40e17a:	bound  eax,QWORD PTR [ebx-0x15]
  40e17d:	jmp    0x9d37:0x38654c74
  40e184:	push   0x58
  40e186:	jmp    0x40e11d
  40e188:	pop    edi
  40e189:	pop    ds
  40e18a:	push   ss
  40e18b:	add    esi,esp
  40e18d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e18e:	push   cs
  40e18f:	mov    BYTE PTR [edi-0x5e673bf],ah
  40e195:	in     eax,0x4d
  40e197:	loopne 0x40e18b
  40e199:	leave  
  40e19a:	lods   eax,DWORD PTR ds:[esi]
  40e19b:	mov    eax,ds:0xeb0abdf0
  40e1a0:	aam    0x52
  40e1a2:	xlat   BYTE PTR ds:[bx]
  40e1a4:	and    ch,BYTE PTR [edi+0x59]
  40e1a7:	sub    bl,BYTE PTR [edi-0x37da1ba0]
  40e1ad:	adc    bl,BYTE PTR ds:0x4dec8059
  40e1b3:	inc    eax
  40e1b4:	add    DWORD PTR ds:[eax-0x55e19341],ecx
  40e1bb:	inc    ebp
  40e1bc:	jge    0x40e1db
  40e1be:	aad    0x4c
  40e1c0:	mov    edi,0xc8e1fdb4
  40e1c5:	xchg   edx,eax
  40e1c6:	mov    BYTE PTR [ecx],bl
  40e1c8:	mov    ds:0x35ac9fcb,eax
  40e1cd:	hlt    
  40e1ce:	dec    esp
  40e1cf:	rol    ch,0x73
  40e1d2:	ins    BYTE PTR es:[edi],dx
  40e1d3:	cli    
  40e1d4:	and    eax,0xca50467b
  40e1d9:	xor    DWORD PTR [edi],edi
  40e1db:	mov    al,ds:0x873aef6c
  40e1e0:	or     al,0x91
  40e1e2:	or     al,0x22
  40e1e4:	(bad)  
  40e1e5:	test   DWORD PTR [ecx-0x49e777e],0x7b264981
  40e1ef:	mov    cs,WORD PTR [ebp-0x3c]
  40e1f2:	loope  0x40e1ce
  40e1f4:	or     al,0x84
  40e1f6:	mov    ebx,0xee909c8
  40e1fb:	push   0xe966a2ca
  40e200:	fist   DWORD PTR [ebx-0x675d5727]
  40e206:	xor    edx,ebx
  40e208:	fist   DWORD PTR [eax-0x40]
  40e20b:	push   es
  40e20c:	addps  xmm2,XMMWORD PTR [eax-0x1f596d18]
  40e213:	test   BYTE PTR [esi+0x53],bl
  40e216:	clc    
  40e217:	pop    ss
  40e218:	mov    esi,0x90afffbb
  40e21d:	mov    bl,0xd0
  40e21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e220:	mov    al,0x58
  40e222:	lock ret 
  40e224:	xor    eax,0x4d3005f6
  40e229:	push   esp
  40e22a:	cli    
  40e22b:	shl    al,1
  40e22d:	xchg   edx,eax
  40e22e:	les    edi,FWORD PTR ds:0x1e20016
  40e234:	add    eax,0x9c44e53b
  40e239:	jecxz  0x40e1cd
  40e23b:	bound  esp,QWORD PTR [esi]
  40e23d:	sub    DWORD PTR [esi+0x53],esp
  40e240:	rcr    BYTE PTR [edx],0xea
  40e243:	mov    ch,BYTE PTR [eax-0x38]
  40e246:	jg     0x40e1e5
  40e248:	pushf  
  40e249:	mov    al,0x5a
  40e24b:	add    eax,ebp
  40e24d:	mov    ?,WORD PTR [eax]
  40e24f:	shr    DWORD PTR [edx-0x3729cc9e],0xcf
  40e256:	pop    edi
  40e257:	outs   dx,BYTE PTR ds:[esi]
  40e258:	add    eax,0xa2466ab7
  40e25d:	jae    0x40e21b
  40e25f:	aad    0xc4
  40e261:	pop    ss
  40e262:	stos   DWORD PTR es:[edi],eax
  40e263:	in     eax,dx
  40e264:	loop   0x40e29f
  40e266:	es in  eax,dx
  40e268:	je     0x40e26d
  40e26a:	sbb    ch,bh
  40e26c:	xchg   ebp,eax
  40e26d:	dec    ecx
  40e26e:	loopne 0x40e26b
  40e270:	sub    al,BYTE PTR [ebx]
  40e272:	jmp    FWORD PTR [ebx+edi*2]
  40e275:	mov    ch,bl
  40e277:	and    eax,0xaa20cc4f
  40e27c:	and    al,0x27
  40e27e:	mov    al,BYTE PTR [esi]
  40e280:	pop    eax
  40e281:	das    
  40e282:	dec    ecx
  40e283:	outs   dx,DWORD PTR ds:[si]
  40e285:	inc    edi
  40e286:	xor    bh,BYTE PTR [ebp-0x50d0a84d]
  40e28c:	mov    ecx,0x7f6b06dc
  40e291:	lmsw   WORD PTR [esi+0x42]
  40e295:	adc    eax,0x4f6d5775
  40e29a:	(bad)  
  40e29b:	mov    ds:0xaacadcdc,eax
  40e2a0:	sahf   
  40e2a1:	hlt    
  40e2a2:	fucom  st(6)
  40e2a4:	dec    esi
  40e2a5:	ss xor al,0xce
  40e2a8:	out    0xd5,eax
  40e2aa:	iret   
  40e2ab:	stos   DWORD PTR es:[edi],eax
  40e2ac:	xchg   DWORD PTR [ecx-0x7fbbd623],ebp
  40e2b2:	push   0xf0493273
  40e2b7:	cmp    DWORD PTR [edx],eax
  40e2b9:	mov    al,0x5
  40e2bb:	push   edx
  40e2bc:	inc    edx
  40e2bd:	popf   
  40e2be:	inc    edi
  40e2bf:	mov    DWORD PTR [edi+0x72ee9d9a],esi
  40e2c5:	in     al,dx
  40e2c6:	adc    DWORD PTR [edx],ebx
  40e2c8:	fsub   QWORD PTR [edi+0x1f]
  40e2cb:	cmp    BYTE PTR [edx],0x32
  40e2ce:	sbb    BYTE PTR [edx+0x5649e529],dh
  40e2d4:	aad    0x2b
  40e2d6:	cdq    
  40e2d7:	mov    gs,WORD PTR es:[ebx+ebp*2+0x623cc8d2]
  40e2df:	lahf   
  40e2e0:	push   eax
  40e2e1:	fild   DWORD PTR [ebp-0x7650499f]
  40e2e7:	es pop edi
  40e2e9:	and    DWORD PTR [eax+0x3d],ecx
  40e2ec:	xchg   ecx,eax
  40e2ed:	sub    al,0x59
  40e2ef:	mov    ecx,0x1cdf9e36
  40e2f4:	mov    ebp,0x1d363d80
  40e2f9:	call   0x8b46a428
  40e2fe:	fist   WORD PTR [edi-0x18]
  40e301:	loop   0x40e299
  40e303:	mov    dl,BYTE PTR [edx-0x60edffaf]
  40e309:	mov    ds:0x8ef3e532,al
  40e30e:	mov    ch,ah
  40e310:	pushf  
  40e311:	stc    
  40e312:	inc    ecx
  40e313:	out    0x44,eax
  40e315:	in     al,0xb0
  40e317:	and    ecx,DWORD PTR [esi]
  40e319:	sub    ch,BYTE PTR [ebp+edx*1+0x78]
  40e31d:	pop    es
  40e31e:	push   edi
  40e31f:	scas   al,BYTE PTR es:[edi]
  40e320:	sbb    BYTE PTR [ebp-0x2d],0xd8
  40e324:	inc    edx
  40e325:	push   eax
  40e326:	cmp    edx,DWORD PTR ds:0x5399c77e
  40e32c:	call   0x956f1b23
  40e331:	mov    bl,0xd9
  40e333:	lods   eax,DWORD PTR ds:[esi]
  40e334:	nop
  40e335:	xchg   ecx,eax
  40e336:	in     eax,dx
  40e337:	std    
  40e338:	inc    edi
  40e339:	push   0xb19bfb29
  40e33e:	or     al,0x23
  40e340:	add    eax,0xc4618731
  40e345:	and    edx,DWORD PTR [ebp+0x57]
  40e348:	jbe    0x40e38e
  40e34a:	push   ss
  40e34b:	jp     0x40e2e0
  40e34d:	out    0x70,eax
  40e34f:	sub    ch,BYTE PTR [edi+0x52695c22]
  40e355:	arpl   sp,si
  40e357:	push   es
  40e358:	or     bh,BYTE PTR [esi+0x71]
  40e35b:	xchg   dl,bl
  40e35d:	out    0x3f,al
  40e35f:	cdq    
  40e360:	sub    ecx,DWORD PTR [edx+0x6be861ff]
  40e366:	mov    edi,0x7165a225
  40e36b:	sbb    eax,0x22d2ee78
  40e370:	dec    edi
  40e371:	sub    eax,0x26fe5517
  40e376:	jmp    0xb687a06c
  40e37b:	xchg   esp,eax
  40e37c:	xchg   esp,eax
  40e37d:	push   0xffffff91
  40e37f:	xchg   ecx,eax
  40e380:	call   0x64ea:0x2daf6823
  40e387:	pop    esi
  40e388:	mov    cl,0xfe
  40e38a:	xlat   BYTE PTR ds:[ebx]
  40e38b:	dec    esi
  40e38c:	pop    es
  40e38d:	aad    0x2d
  40e38f:	test   ah,ch
  40e391:	mov    dh,0x44
  40e393:	sub    DWORD PTR ds:0xd4ecf450,0xffffffe0
  40e39a:	lock into 
  40e39c:	sub    BYTE PTR [esi],dh
  40e39e:	inc    edi
  40e39f:	sar    DWORD PTR [eax-0x3f9b9430],cl
  40e3a5:	mov    ah,0xd0
  40e3a7:	adc    BYTE PTR ds:0xa04d9bab,al
  40e3ad:	vshufps ymm1,ymm2,YMMWORD PTR [esi+0x4266a040],0x6b
  40e3b6:	push   eax
  40e3b7:	scas   eax,DWORD PTR es:[edi]
  40e3b8:	inc    edi
  40e3b9:	dec    esi
  40e3ba:	sub    BYTE PTR [ebx+0x14bfe640],ch
  40e3c0:	imul   ebx,DWORD PTR [ecx-0xd],0x38cca3b4
  40e3c7:	mov    ebx,0x4ba1a7a5
  40e3cc:	sbb    cl,ah
  40e3ce:	scas   eax,DWORD PTR es:[edi]
  40e3cf:	pop    es
  40e3d0:	cmp    edi,DWORD PTR gs:[edx-0x3955bd3e]
  40e3d7:	sub    al,0xc6
  40e3d9:	dec    esp
  40e3da:	out    dx,eax
  40e3db:	pop    ebp
  40e3dc:	sbb    cl,BYTE PTR [ecx+0x6a3be0ec]
  40e3e2:	push   es
  40e3e3:	ja     0x40e454
  40e3e5:	mov    cl,0x66
  40e3e7:	push   edx
  40e3e8:	sahf   
  40e3e9:	xchg   ecx,eax
  40e3ea:	and    ebx,DWORD PTR [esi-0x42]
  40e3ed:	push   esi
  40e3ee:	test   bl,dh
  40e3f0:	and    eax,0x33c90474
  40e3f5:	cwde   
  40e3f6:	push   ebx
  40e3f7:	mov    eax,0x6c53d8d1
  40e3fc:	dec    edx
  40e3fd:	into   
  40e3fe:	ins    BYTE PTR es:[edi],dx
  40e3ff:	push   esp
  40e400:	push   esp
  40e401:	neg    BYTE PTR [ebp-0x74]
  40e404:	xor    eax,0xdb133abf
  40e409:	lahf   
  40e40a:	cmp    al,0xda
  40e40c:	adc    al,0x97
  40e40e:	call   FWORD PTR [edi+ecx*1+0x2b8e7f5c]
  40e415:	mov    bl,0x65
  40e417:	(bad)  
  40e418:	sbb    edx,edx
  40e41a:	pop    esi
  40e41b:	dec    ebp
  40e41c:	fs dec edi
  40e41e:	jmp    0x40e3b1
  40e420:	into   
  40e421:	and    eax,0xad6964a1
  40e426:	int3   
  40e427:	mov    esp,0x4c8a81c4
  40e42c:	mov    ch,BYTE PTR [ebp-0x64]
  40e42f:	pop    edx
  40e430:	clc    
  40e431:	imul   esp,ebx,0xffffffea
  40e434:	mov    ebx,0x32775caa
  40e439:	inc    ecx
  40e43a:	ja     0x40e4a1
  40e43c:	fidiv  DWORD PTR [eax]
  40e43e:	pop    ds
  40e43f:	sub    eax,eax
  40e441:	je     0x40e425
  40e443:	repnz lea ecx,[eax+0x50478fe4]
  40e44a:	mov    al,ds:0xa1031292
  40e44f:	(bad)  
  40e450:	ds jbe 0x40e4b2
  40e453:	jns    0x40e4ce
  40e455:	and    eax,0xc1d996c6
  40e45a:	mov    al,es:0x97e5b3ca
  40e460:	ins    DWORD PTR es:[edi],dx
  40e461:	mov    ebp,0x5b965cad
  40e466:	adc    BYTE PTR [eax],0x7a
  40e469:	xchg   esi,eax
  40e46a:	in     eax,dx
  40e46b:	jg     0x40e455
  40e46d:	mov    edx,0xb073cc96
  40e472:	fs jle 0x40e4aa
  40e475:	loop   0x40e429
  40e477:	out    dx,al
  40e478:	(bad)  
  40e479:	repz aad 0x6f
  40e47c:	fild   QWORD PTR [ecx-0x3eddb64]
  40e482:	je     0x40e4ea
  40e484:	cld    
  40e485:	mov    esi,0xb4c892fc
  40e48a:	cs push 0x87bc4abe
  40e490:	arpl   ax,ax
  40e492:	xor    DWORD PTR [edx-0x2c],0x633359a
  40e499:	push   0xa6b65e98
  40e49e:	push   ecx
  40e49f:	(bad)  
  40e4a0:	pop    edi
  40e4a1:	and    DWORD PTR [edi-0x27],esi
  40e4a4:	inc    esp
  40e4a5:	push   0xffffffdf
  40e4a7:	push   ebx
  40e4a8:	push   cs
  40e4a9:	mov    ah,0xf7
  40e4ab:	jb     0x40e4bd
  40e4ad:	jecxz  0x40e458
  40e4af:	(bad)  
  40e4b0:	fst    DWORD PTR [edx+edi*4-0x6c72b8b9]
  40e4b7:	loop   0x40e466
  40e4b9:	adc    eax,0xa4f022ec
  40e4be:	daa    
  40e4bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4c0:	or     al,0x98
  40e4c2:	imul   ebp,DWORD PTR [ecx+eiz*2+0x63],0xfffffffc
  40e4c7:	and    DWORD PTR [ebx+0x194775a6],eax
  40e4cd:	push   0x65
  40e4cf:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40e4d1:	test   DWORD PTR [edi+0x45],eax
  40e4d4:	arpl   WORD PTR [ecx-0x11],di
  40e4d7:	add    esi,DWORD PTR [eax]
  40e4d9:	sub    BYTE PTR [esp+esi*8+0x59],bh
  40e4dd:	leave  
  40e4de:	nop
  40e4df:	add    cl,BYTE PTR [ebx+esi*4]
  40e4e2:	pop    esp
  40e4e3:	lock and al,0x3f
  40e4e6:	sbb    edx,DWORD PTR [esp+edi*4+0x28080431]
  40e4ed:	fnstcw WORD PTR [eax]
  40e4ef:	mov    bh,BYTE PTR [esi-0x1a141335]
  40e4f5:	push   ss
  40e4f6:	dec    esp
  40e4f7:	ficomp DWORD PTR [esi+0x7]
  40e4fa:	pop    esi
  40e4fb:	or     BYTE PTR [edi-0x72c67c36],bl
  40e501:	test   eax,0x6ad53606
  40e506:	fsubr  QWORD PTR [esi]
  40e508:	sbb    BYTE PTR [ebx-0x64],dh
  40e50b:	mov    esi,0x1d8ec542
  40e510:	mov    bl,0x5a
  40e512:	xor    dh,BYTE PTR [ebp-0x74]
  40e515:	and    esp,DWORD PTR ds:0xe11a5dab
  40e51b:	out    0xe3,al
  40e51d:	add    ebx,DWORD PTR [edx+0x24]
  40e520:	or     DWORD PTR [edx+0x787455fe],esi
  40e526:	xor    dl,BYTE PTR [edi+edx*4-0x26dae38]
  40e52d:	jbe    0x40e51d
  40e52f:	(bad)  
  40e530:	or     eax,edx
  40e532:	inc    DWORD PTR [eax+edi*4-0x287550ca]
  40e539:	aaa    
  40e53a:	adc    DWORD PTR ds:0x83df7a0,0x40
  40e541:	and    al,0x95
  40e543:	xchg   ebx,eax
  40e544:	and    DWORD PTR [ebx+0xc],ebp
  40e547:	xor    DWORD PTR [eax],edi
  40e549:	mov    ebx,0xb25304ea
  40e54e:	sbb    eax,0xd287c7b2
  40e553:	shl    ah,cl
  40e555:	std    
  40e556:	(bad)  
  40e557:	lahf   
  40e558:	and    eax,0xd29935ea
  40e55d:	mov    cl,0xd8
  40e55f:	add    al,0x71
  40e561:	adc    al,0x95
  40e563:	lahf   
  40e564:	aad    0xa0
  40e566:	js     0x40e587
  40e568:	push   cs
  40e569:	mov    ch,0x25
  40e56b:	clc    
  40e56c:	test   DWORD PTR [ebp+0x5824d9b0],ecx
  40e572:	xor    al,BYTE PTR [edx-0x60]
  40e575:	jmp    0x40e5f0
  40e577:	inc    esi
  40e578:	popf   
  40e579:	sahf   
  40e57a:	add    DWORD PTR [edi+eax*8-0x8],ebx
  40e57e:	sbb    ebx,DWORD PTR [edi-0x7b]
  40e581:	bnd jle 0x40e59d
  40e584:	jge    0x40e54c
  40e586:	out    dx,al
  40e587:	add    al,0x2d
  40e589:	out    0x57,al
  40e58b:	mov    eax,ds:0xadf6af95
  40e590:	jl     0x40e55c
  40e592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e593:	sahf   
  40e594:	mov    cs:0x4a252fd8,eax
  40e59a:	loop   0x40e555
  40e59c:	cli    
  40e59d:	jecxz  0x40e59a
  40e59f:	xchg   ebp,eax
  40e5a0:	enter  0xbf3a,0xa7
  40e5a4:	sub    al,0xb2
  40e5a6:	repnz sub BYTE PTR [edx-0x3800849e],dl
  40e5ad:	xchg   esp,eax
  40e5ae:	mov    ebx,0xdeb4cdff
  40e5b3:	ffreep st(6)
  40e5b5:	leave  
  40e5b6:	jg     0x40e610
  40e5b8:	les    ebx,FWORD PTR ds:0x79416e31
  40e5be:	mov    cl,0x57
  40e5c0:	jbe    0x40e601
  40e5c2:	cdq    
  40e5c3:	xchg   DWORD PTR [ebx+0x1a],esp
  40e5c6:	dec    edi
  40e5c7:	cmp    dl,BYTE PTR [edx+0x65]
  40e5ca:	test   al,0x61
  40e5cc:	inc    edx
  40e5cd:	fist   WORD PTR [eax]
  40e5cf:	xor    BYTE PTR [eax],dh
  40e5d1:	(bad)  
  40e5d2:	cld    
  40e5d3:	shl    ebx,1
  40e5d5:	in     eax,dx
  40e5d6:	out    0xdc,eax
  40e5d8:	mov    DWORD PTR [eax+0x29],eax
  40e5db:	jb     0x40e579
  40e5dd:	and    bh,al
  40e5df:	sbb    ebx,esi
  40e5e1:	push   esp
  40e5e2:	mov    esp,0x7d94737f
  40e5e7:	pusha  
  40e5e8:	test   BYTE PTR [edi+0xd],0x4f
  40e5ec:	std    
  40e5ed:	mov    ch,BYTE PTR [eax-0x58]
  40e5f0:	in     al,dx
  40e5f1:	int    0x1e
  40e5f3:	inc    edx
  40e5f4:	imul   ebp,DWORD PTR [ebp+0x48],0x6
  40e5f8:	mov    dl,BYTE PTR ds:0xbda70241
  40e5fe:	cmp    dh,bl
  40e600:	ja     0x40e618
  40e602:	outs   dx,BYTE PTR ds:[esi]
  40e603:	jge    0x40e61c
  40e605:	xor    esp,DWORD PTR [edi]
  40e607:	ja     0x40e680
  40e609:	adc    eax,0x29e0a349
  40e60e:	pop    es
  40e60f:	xchg   cl,cl
  40e611:	popf   
  40e612:	push   0xe31feaf7
  40e617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e618:	ror    BYTE PTR [ecx],1
  40e61a:	loop   0x40e5cc
  40e61c:	scas   al,BYTE PTR es:[edi]
  40e61d:	pop    esp
  40e61e:	mov    ebx,0xd783d04c
  40e623:	loopne 0x40e66b
  40e625:	sbb    eax,0x83e92c70
  40e62a:	push   ds
  40e62b:	dec    esp
  40e62c:	pop    edx
  40e62d:	and    dh,BYTE PTR [ecx-0x4a]
  40e630:	call   0xc1b5:0xb0ad3359
  40e637:	in     eax,0xaa
  40e639:	aam    0xae
  40e63b:	dec    ecx
  40e63c:	popf   
  40e63d:	mov    bh,0xa3
  40e63f:	pop    eax
  40e640:	enter  0x2aad,0x17
  40e644:	and    ecx,DWORD PTR [ebx+0x2a]
  40e647:	cmp    edx,edx
  40e649:	pushf  
  40e64a:	js     0x40e699
  40e64c:	ret    
  40e64d:	cmp    eax,0x64d60bbb
  40e652:	sbb    ebx,edi
  40e654:	mov    esi,0xa42bcb96
  40e659:	das    
  40e65a:	(bad)  
  40e65d:	dec    edx
  40e65e:	inc    esi
  40e65f:	(bad)  
  40e661:	neg    DWORD PTR [eax+0x1e]
  40e664:	jp     0x40e6a8
  40e666:	mov    al,0xf5
  40e668:	fsubp  st(4),st
  40e66a:	(bad)  
  40e66b:	ja     0x40e620
  40e66d:	push   esp
  40e66e:	cmc    
  40e66f:	hlt    
  40e670:	xchg   al,ah
  40e672:	stos   BYTE PTR es:[edi],al
  40e673:	push   edi
  40e674:	xor    al,dh
  40e676:	test   al,0x64
  40e678:	or     eax,0x43cc27c2
  40e67d:	inc    ebx
  40e67e:	pushf  
  40e67f:	pop    ds
  40e680:	stc    
  40e681:	jmp    0x40e658
  40e683:	cwde   
  40e684:	lods   eax,DWORD PTR ds:[esi]
  40e685:	xchg   edx,eax
  40e686:	pop    ds
  40e687:	dec    edi
  40e688:	fist   DWORD PTR ds:0x4188072c
  40e68e:	sti    
  40e68f:	out    0xfb,al
  40e691:	xor    BYTE PTR [eax+ebp*2-0x9afad0],ah
  40e698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e699:	enter  0xcc0a,0xd0
  40e69d:	push   ss
  40e69e:	mov    eax,0x18e34025
  40e6a3:	sub    BYTE PTR [eax],dh
  40e6a5:	shl    BYTE PTR [edx+0x431810c2],cl
  40e6ab:	xchg   ebx,eax
  40e6ac:	(bad)  
  40e6ad:	sub    DWORD PTR [ecx+0xd13a72c],esp
  40e6b3:	mov    DWORD PTR [ebx-0x61dfd9a1],edx
  40e6b9:	pop    edx
  40e6ba:	jmp    0x6cb82826
  40e6bf:	xor    ebp,DWORD PTR [ebx]
  40e6c1:	lahf   
  40e6c2:	fidivr WORD PTR [esi+edi*4]
  40e6c5:	mov    bl,0x89
  40e6c7:	dec    esi
  40e6c8:	cld    
  40e6c9:	in     eax,dx
  40e6ca:	ret    0xe13e
  40e6cd:	in     al,dx
  40e6ce:	xchg   ebx,eax
  40e6cf:	aad    0xb5
  40e6d1:	cld    
  40e6d2:	push   0x689bb5fd
  40e6d7:	jmp    0xb54f2998
  40e6dc:	xchg   DWORD PTR [ebx],eax
  40e6de:	div    DWORD PTR [edx+0x7e]
  40e6e1:	fistp  QWORD PTR [esi-0x42c3f757]
  40e6e7:	push   esp
  40e6e8:	call   0xb4825135
  40e6ed:	sub    BYTE PTR [ebx+0x5d5c0ab1],0x56
  40e6f4:	inc    esi
  40e6f5:	imul   esi,DWORD PTR [ebx-0x2d],0xa
  40e6f9:	jge    0x40e6d2
  40e6fb:	adc    al,0x65
  40e6fd:	(bad)  
  40e6fe:	cmp    dh,bh
  40e700:	fld    QWORD PTR [esi]
  40e702:	test   eax,0xe4b87c91
  40e707:	push   es
  40e708:	imul   ebx,DWORD PTR [edi+0x27],0x46
  40e70c:	mov    eax,0xeb1b8c48
  40e711:	cli    
  40e712:	inc    edi
  40e713:	push   ds
  40e714:	mov    es,ebx
  40e716:	xor    al,0x90
  40e718:	jl     0x40e717
  40e71a:	ror    DWORD PTR [ebp+0x2d],1
  40e71d:	xchg   BYTE PTR [ebx+0x4f],bh
  40e720:	adc    DWORD PTR [edi],ecx
  40e722:	fcmovnb st,st(2)
  40e724:	and    BYTE PTR [ecx-0x58],bl
  40e727:	lahf   
  40e728:	dec    edi
  40e729:	cmc    
  40e72a:	mov    gs,WORD PTR [edx+0x53]
  40e72d:	dec    eax
  40e72e:	sti    
  40e72f:	dec    ecx
  40e730:	ror    BYTE PTR [eax],cl
  40e732:	daa    
  40e733:	xchg   ebx,eax
  40e734:	scas   al,BYTE PTR es:[edi]
  40e735:	fbld   TBYTE PTR [eax+0x5446041b]
  40e73b:	sbb    eax,0x3f8fbba
  40e740:	(bad)  [eax]
  40e742:	dec    eax
  40e743:	and    al,BYTE PTR [ecx]
  40e745:	loopne 0x40e74d
  40e747:	std    
  40e748:	xchg   edx,eax
  40e749:	mov    ebx,0x6bf256ba
  40e74e:	xor    bl,BYTE PTR [ebp-0x743aab26]
  40e754:	iret   
  40e755:	shl    bl,cl
  40e757:	das    
  40e758:	addr16 push edi
  40e75a:	clc    
  40e75b:	add    al,0xc
  40e75d:	loopne 0x40e7cf
  40e75f:	lock mov eax,0x98896d13
  40e765:	(bad)  
  40e766:	jae    0x40e722
  40e768:	test   dl,dh
  40e76a:	ret    
  40e76b:	cmc    
  40e76c:	test   DWORD PTR [ecx+0x6b4503bc],edi
  40e772:	or     al,BYTE PTR [ebp+0x5b23cbf1]
  40e778:	scas   al,BYTE PTR es:[edi]
  40e779:	or     al,0x0
  40e77b:	push   esp
  40e77c:	pop    ebx
  40e77d:	and    ebp,ebx
  40e77f:	out    dx,al
  40e780:	repz mov ch,bl
  40e783:	and    esp,edi
  40e785:	call   0x5a55:0xfe3483e7
  40e78c:	adc    esp,DWORD PTR [eax+0x1e487a78]
  40e792:	jmp    FWORD PTR [ebp-0x21]
  40e795:	fimul  WORD PTR [esi+0x7dc1571d]
  40e79b:	pusha  
  40e79c:	xor    ch,BYTE PTR [edx+0x3ea34e46]
  40e7a2:	outs   dx,BYTE PTR ds:[esi]
  40e7a4:	in     eax,0xc3
  40e7a6:	in     al,0xf2
  40e7a8:	sub    eax,0x6128260f
  40e7ad:	cmp    esi,DWORD PTR [ebx-0x63]
  40e7b0:	push   edx
  40e7b1:	cmp    al,BYTE PTR [ebx]
  40e7b3:	es enter 0x54a7,0xa3
  40e7b8:	pop    ebp
  40e7b9:	push   edx
  40e7ba:	retf   0xdb95
  40e7bd:	xor    eax,0xb485af4e
  40e7c2:	mov    bl,0x40
  40e7c4:	mov    BYTE PTR [ecx+ebx*4+0x5976cfe9],ch
  40e7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7cc:	push   ecx
  40e7cd:	add    eax,0xff0ba901
  40e7d2:	(bad)  
  40e7d3:	in     eax,0x3d
  40e7d5:	mov    dl,0xdc
  40e7d7:	xchg   ebp,esi
  40e7d9:	repnz push 0xffffffcc
  40e7dc:	je     0x40e78a
  40e7de:	xchg   esp,edi
  40e7e0:	iret   
  40e7e1:	pop    ss
  40e7e2:	sbb    ch,BYTE PTR [eax-0x180d661b]
  40e7e8:	dec    ebx
  40e7e9:	(bad)  
  40e7ea:	push   ebx
  40e7eb:	jl     0x40e7e3
  40e7ed:	in     al,dx
  40e7ee:	in     eax,0x14
  40e7f0:	rol    dl,cl
  40e7f2:	push   0x105164a
  40e7f7:	in     eax,dx
  40e7f8:	jns    0x40e848
  40e7fa:	or     dl,bh
  40e7fc:	dec    esi
  40e7fd:	icebp  
  40e7fe:	adc    BYTE PTR [esi+ebp*1+0x52],0x35
  40e803:	dec    ecx
  40e804:	inc    esp
  40e805:	cwde   
  40e806:	add    edx,DWORD PTR [ebp+0x2f]
  40e809:	xor    bh,BYTE PTR [ecx-0x3b32365f]
  40e80f:	inc    ebp
  40e810:	fsubp  st(2),st
  40e812:	sbb    edx,edx
  40e814:	pop    esi
  40e815:	cmp    al,0x80
  40e817:	or     eax,DWORD PTR [ebx-0x6f]
  40e81a:	jge    0x40e7d4
  40e81c:	add    ah,cl
  40e81e:	in     al,0xfb
  40e820:	fcomip st,st(7)
  40e822:	adc    DWORD PTR fs:[ebp-0x61],0x70f50af7
  40e82a:	xchg   edi,eax
  40e82b:	mov    ebx,0xe8786a56
  40e830:	bound  esi,QWORD PTR [edx+0x6]
  40e833:	fld    QWORD PTR [edx-0x7af7e1a1]
  40e839:	inc    ebp
  40e83a:	test   al,0xc8
  40e83c:	adc    BYTE PTR [esi+esi*2-0x6560c921],dl
  40e843:	push   ds
  40e844:	shl    esp,cl
  40e846:	adc    esi,ecx
  40e848:	xchg   ecx,eax
  40e849:	mov    ch,0x9b
  40e84b:	push   ds
  40e84c:	push   edi
  40e84d:	sub    BYTE PTR [eax-0x1da0eb9b],0x71
  40e854:	rcr    BYTE PTR [edx-0x27],1
  40e857:	pop    edx
  40e858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e859:	in     eax,0xe8
  40e85b:	adc    eax,0x282a7a33
  40e860:	and    DWORD PTR [esp+edi*4+0x12],edi
  40e864:	jnp    0x40e86c
  40e866:	jecxz  0x40e86b
  40e868:	jecxz  0x40e7f0
  40e86a:	mov    edi,0x4f68be01
  40e86f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e870:	sub    eax,0x2028e0f0
  40e875:	jno    0x40e8dc
  40e877:	outs   dx,BYTE PTR ds:[esi]
  40e878:	bnd jno 0x40e8b9
  40e87b:	lds    ebp,FWORD PTR [ebx]
  40e87d:	addsubpd xmm3,XMMWORD PTR [edx]
  40e881:	pop    ebx
  40e882:	stos   BYTE PTR es:[edi],al
  40e883:	addps  xmm4,XMMWORD PTR [esi+0x13]
  40e887:	js     0x40e815
  40e889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e88a:	fbld   TBYTE PTR [eax-0x42]
  40e88d:	cdq    
  40e88e:	or     ebp,DWORD PTR [ecx+0x44604444]
  40e894:	cs xchg ebx,eax
  40e896:	rcr    DWORD PTR [edi],1
  40e898:	sbb    eax,0x21dd5fa5
  40e89d:	sub    BYTE PTR [edi],dl
  40e89f:	int    0x94
  40e8a1:	xor    ebx,DWORD PTR [ebx-0x5bd6b782]
  40e8a7:	mov    bh,0x14
  40e8a9:	call   0xa295f8b5
  40e8ae:	jmp    0x6841d942
  40e8b3:	mov    ds:0xc1dc18e,al
  40e8b8:	cli    
  40e8b9:	out    dx,eax
  40e8ba:	out    0xf2,al
  40e8bc:	iret   
  40e8bd:	sar    DWORD PTR [ebx],1
  40e8bf:	push   ecx
  40e8c0:	sbb    eax,DWORD PTR [ebx+0x70]
  40e8c3:	add    esi,DWORD PTR [ebx+edi*8+0x3d0c3daf]
  40e8ca:	sbb    al,0xb4
  40e8cc:	(bad)  
  40e8cd:	xor    BYTE PTR [esi+0x7cb47adb],dl
  40e8d3:	push   edx
  40e8d4:	les    esi,FWORD PTR [ebx+0x4]
  40e8d7:	test   eax,0xcbdf7272
  40e8dc:	add    esi,edi
  40e8de:	jns    0x40e8e5
  40e8e0:	jge    0x40e90e
  40e8e2:	lods   eax,DWORD PTR ds:[esi]
  40e8e3:	hlt    
  40e8e4:	in     eax,dx
  40e8e5:	add    BYTE PTR [edi],dl
  40e8e7:	sub    eax,0xc424450
  40e8ec:	das    
  40e8ed:	retf   0xaa7a
  40e8f0:	ds xchg edi,eax
  40e8f2:	inc    eax
  40e8f3:	mov    edx,0x9928198b
  40e8f8:	pop    es
  40e8f9:	mov    dh,0x2e
  40e8fb:	add    ecx,DWORD PTR [ebp-0x37]
  40e8fe:	dec    ecx
  40e8ff:	fcomp  QWORD PTR [edx-0x6a]
  40e902:	sti    
  40e903:	lea    edi,[edi+0x5f]
  40e906:	arpl   WORD PTR [eax],cx
  40e908:	loop   0x40e914
  40e90a:	pop    esp
  40e90b:	lods   eax,DWORD PTR ds:[esi]
  40e90c:	lds    edi,FWORD PTR [ecx+0x58]
  40e90f:	or     BYTE PTR [ebx-0x75f599e0],ah
  40e915:	sub    DWORD PTR [edx+edx*4],0xb97fc5d9
  40e91c:	sbb    DWORD PTR [edx],0x61d0776c
  40e922:	lock mov WORD PTR [ebp+0x5240e779],gs
  40e929:	jp     0x40e997
  40e92b:	dec    edx
  40e92c:	loopne 0x40e96e
  40e92e:	sbb    eax,0x4eaca2dd
  40e933:	pusha  
  40e934:	xchg   BYTE PTR [eax-0x11],al
  40e937:	cld    
  40e938:	and    BYTE PTR [eax],ah
  40e93a:	xlat   BYTE PTR ds:[ebx]
  40e93b:	out    dx,eax
  40e93c:	(bad)  
  40e93d:	dec    edx
  40e93e:	sbb    al,0x73
  40e940:	dec    esi
  40e941:	ins    DWORD PTR es:[edi],dx
  40e942:	pop    edx
  40e943:	mov    gs,WORD PTR [ebp+0x69cddc7d]
  40e949:	stos   BYTE PTR es:[edi],al
  40e94a:	(bad)  
  40e94b:	pusha  
  40e94c:	xor    al,0xef
  40e94e:	add    edi,DWORD PTR [ecx+eiz*8-0x585f1c40]
  40e955:	pop    ebx
  40e956:	jmp    FWORD PTR [esi]
  40e958:	mov    ds:0x6ce2c202,al
  40e95d:	das    
  40e95e:	imul   esi,esi,0xffffffdc
  40e961:	push   ss
  40e962:	xchg   ecx,eax
  40e963:	adc    BYTE PTR [edx+ebx*8+0x77],0xc7
  40e968:	and    ch,bh
  40e96a:	(bad)  
  40e96b:	sbb    al,0xad
  40e96d:	xor    eax,0xdbd28571
  40e972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e973:	push   cs
  40e974:	xchg   esi,eax
  40e975:	mov    ah,0xd5
  40e977:	mov    dh,0x8d
  40e979:	pop    ebp
  40e97a:	push   esp
  40e97b:	retf   
  40e97c:	push   ebx
  40e97d:	lock or DWORD PTR [ebp-0x6593b99e],0xffffff82
  40e985:	cmc    
  40e986:	popf   
  40e987:	aaa    
  40e988:	or     ch,cl
  40e98a:	push   ds
  40e98b:	and    ch,BYTE PTR [esi]
  40e98d:	(bad)  
  40e98e:	adc    ch,BYTE PTR [esi+0x5b]
  40e991:	jmp    0xccb8:0x49674d37
  40e998:	lods   eax,DWORD PTR ds:[esi]
  40e999:	lahf   
  40e99a:	push   cs
  40e99b:	cwde   
  40e99c:	lods   al,BYTE PTR ds:[esi]
  40e99d:	sub    DWORD PTR [eax-0x23],edi
  40e9a0:	scas   al,BYTE PTR es:[edi]
  40e9a1:	popf   
  40e9a2:	or     al,0x96
  40e9a4:	adc    dl,dl
  40e9a6:	pop    ebp
  40e9a7:	pop    ebx
  40e9a8:	dec    esi
  40e9a9:	(bad)  
  40e9aa:	cdq    
  40e9ab:	sub    DWORD PTR [esi+0x4342b045],ebx
  40e9b1:	(bad)  
  40e9b2:	aad    0xa8
  40e9b4:	xor    ebx,esp
  40e9b6:	outs   dx,DWORD PTR ds:[esi]
  40e9b7:	xchg   esi,eax
  40e9b8:	fs hlt 
  40e9ba:	and    edi,DWORD PTR [edi-0x1c]
  40e9bd:	fst    DWORD PTR [edi+0x35]
  40e9c0:	adc    DWORD PTR [eax-0x6c923508],ecx
  40e9c6:	inc    edx
  40e9c7:	mov    ah,bh
  40e9c9:	adc    bl,bl
  40e9cb:	inc    ebp
  40e9cc:	lock mov ebx,ebp
  40e9cf:	in     al,0x5
  40e9d1:	std    
  40e9d2:	(bad)  
  40e9d3:	or     ebx,eax
  40e9d5:	cmp    al,0x49
  40e9d7:	ja     0x40e9da
  40e9d9:	jae    0x40ea36
  40e9db:	adc    al,0xda
  40e9dd:	adc    ax,0x3006
  40e9e1:	(bad)  
  40e9e2:	aaa    
  40e9e3:	adc    al,0x17
  40e9e5:	(bad)  
  40e9e6:	adc    ebx,ebx
  40e9e8:	fs dec esp
  40e9ea:	add    BYTE PTR [edi],dl
  40e9ec:	mov    ecx,0xbbd30960
  40e9f1:	std    
  40e9f2:	xchg   ecx,eax
  40e9f3:	add    dh,BYTE PTR [ebx]
  40e9f5:	mov    eax,0x5f58d717
  40e9fa:	dec    ebx
  40e9fb:	mov    eax,ds:0xab334f82
  40ea00:	arpl   WORD PTR [ebx+0x690cb984],bp
  40ea06:	enter  0xcd01,0xd5
  40ea0a:	neg    esp
  40ea0c:	in     al,dx
  40ea0d:	imul   edx,DWORD PTR [eax+0x68],0xffffffeb
  40ea11:	loop   0x40ea48
  40ea13:	cdq    
  40ea14:	mov    eax,0xc9e227c2
  40ea19:	(bad)
  40ea1d:	jg     0x40e9d4
  40ea1f:	inc    esi
  40ea20:	sar    BYTE PTR [ebx+0x73e59802],1
  40ea26:	(bad)  
  40ea28:	push   ebx
  40ea29:	xchg   ebx,eax
  40ea2a:	mov    ch,0xd1
  40ea2c:	cmp    esi,ebx
  40ea2e:	cs jl  0x40ea1b
  40ea31:	shl    DWORD PTR [edx+ecx*1],0x57
  40ea35:	je     0x40ea08
  40ea37:	xchg   edx,eax
  40ea38:	cmp    ch,BYTE PTR [ebx+edi*2-0x6d546ad7]
  40ea3f:	repnz xor al,0xad
  40ea42:	cmp    dl,ch
  40ea44:	daa    
  40ea45:	cs pop ds
  40ea47:	sub    edi,ecx
  40ea49:	xor    bl,BYTE PTR [ebp+0x6b3c141e]
  40ea4f:	mov    bl,0x49
  40ea51:	jle    0x40ea7e
  40ea53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea54:	and    esi,DWORD PTR [ecx]
  40ea56:	cmp    al,0xd
  40ea58:	arpl   ax,dx
  40ea5a:	test   BYTE PTR [ebp+0x35e568bc],dh
  40ea60:	push   eax
  40ea61:	leave  
  40ea62:	or     eax,0xa468a4e6
  40ea67:	sbb    eax,0x58dfaf47
  40ea6c:	xchg   esi,eax
  40ea6d:	ins    DWORD PTR es:[edi],dx
  40ea6e:	(bad)  [eax]
  40ea70:	ret    
  40ea71:	push   ebp
  40ea72:	dec    ebx
  40ea73:	jle    0x40ea9d
  40ea75:	push   ebx
  40ea76:	adc    al,BYTE PTR [ebx-0x50]
  40ea79:	fcomp  DWORD PTR [ebx+0x15660a6b]
  40ea7f:	xchg   ebx,eax
  40ea80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea81:	cmc    
  40ea82:	bound  ecx,QWORD PTR [ecx+0x5e]
  40ea85:	jecxz  0x40ea80
  40ea87:	faddp  st(3),st
  40ea89:	in     al,0xdb
  40ea8b:	mov    al,0xd6
  40ea8d:	nop
  40ea8e:	lock popf 
  40ea90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea91:	sub    al,0x9f
  40ea93:	pop    esp
  40ea94:	xor    al,0x62
  40ea96:	(bad)  
  40ea97:	aad    0xe
  40ea99:	(bad)  
  40ea9a:	cmp    al,0xea
  40ea9c:	xor    eax,0x528449c6
  40eaa1:	imul   BYTE PTR [ecx+edi*4]
  40eaa4:	call   0xd25f9249
  40eaa9:	pop    edi
  40eaaa:	ficomp WORD PTR [edx-0x50]
  40eaad:	fdiv   DWORD PTR [ebx-0x1d7f6e08]
  40eab3:	shl    ebp,cl
  40eab5:	xchg   DWORD PTR [edi-0x3d],esi
  40eab8:	add    edx,edx
  40eaba:	dec    edx
  40eabb:	call   0x6d167150
  40eac0:	push   0x52be0698
  40eac5:	or     al,0x88
  40eac7:	and    ecx,DWORD PTR [esi-0x7f]
  40eaca:	dec    ebp
  40eacb:	mov    ?,WORD PTR [ebx-0xe5f58e5]
  40ead1:	dec    ebx
  40ead2:	inc    esp
  40ead3:	lahf   
  40ead4:	aas    
  40ead5:	les    edi,FWORD PTR [ebx+0x12ddd435]
  40eadb:	inc    eax
  40eadc:	add    eax,0xd9118157
  40eae1:	mov    esp,esi
  40eae3:	mov    al,0xe5
  40eae5:	jbe    0x40eadc
  40eae7:	retf   0xa76b
  40eaea:	inc    edx
  40eaeb:	push   eax
  40eaec:	out    0x8d,eax
  40eaee:	inc    esp
  40eaef:	sbb    al,0x2f
  40eaf1:	cld    
  40eaf2:	iret   
  40eaf3:	mov    DWORD PTR [ecx+0x406f363],ebx
  40eaf9:	xor    bl,ch
  40eafb:	leave  
  40eafc:	stos   DWORD PTR es:[edi],eax
  40eafd:	adc    BYTE PTR [edx+0x791e50b6],dh
  40eb03:	cmp    esi,DWORD PTR [edi-0x79179222]
  40eb09:	mov    ?,WORD PTR [edx-0x1c]
  40eb0c:	mov    dl,0x4d
  40eb0e:	push   ecx
  40eb0f:	push   ds
  40eb10:	jbe    0x40ea94
  40eb12:	jg     0x40eb29
  40eb14:	cmp    DWORD PTR [edi+0x5a],esi
  40eb17:	(bad)  
  40eb18:	cld    
  40eb19:	xor    DWORD PTR [edx+0x39],ecx
  40eb1c:	add    al,0x7d
  40eb1e:	addr16 push ecx
  40eb20:	outs   dx,BYTE PTR ds:[esi]
  40eb21:	fs call 0x62c38385
  40eb27:	mov    ds:0x5eee928c,eax
  40eb2c:	popa   
  40eb2d:	aaa    
  40eb2e:	pushf  
  40eb2f:	fucomip st,st(0)
  40eb31:	xchg   esi,eax
  40eb32:	fs sbb al,bl
  40eb35:	aad    0x32
  40eb37:	retf   0xbd2e
  40eb3a:	(bad)  [ebp+0x7e]
  40eb3d:	sub    al,BYTE PTR [ebx-0x4f]
  40eb40:	(bad)  ds:0xffa43de3
  40eb46:	sbb    BYTE PTR [esi+ecx*8+0x71d20df1],ah
  40eb4d:	dec    ebx
  40eb4e:	loop   0x40eb49
  40eb50:	or     ebx,DWORD PTR [eax+0x1d4ef58d]
  40eb56:	jo     0x40eb37
  40eb58:	clc    
  40eb59:	test   DWORD PTR [ebx+ebx*1+0x6c],0x54f03254
  40eb61:	cmp    al,BYTE PTR [edx+0x6e4d7fc9]
  40eb67:	nop
  40eb68:	clc    
  40eb69:	mov    cl,0xc7
  40eb6b:	sahf   
  40eb6c:	mov    ds:0x3f420bf4,eax
  40eb71:	push   ss
  40eb72:	push   esi
  40eb73:	stos   DWORD PTR es:[edi],eax
  40eb74:	mov    ah,0x97
  40eb76:	dec    esp
  40eb77:	loope  0x40eb25
  40eb79:	iret   
  40eb7a:	and    DWORD PTR [eax-0x45cafa61],esp
  40eb80:	adc    BYTE PTR [ecx],bl
  40eb82:	hlt    
  40eb83:	ja     0x40eb7e
  40eb85:	push   eax
  40eb86:	mov    fs,ebp
  40eb88:	xchg   ecx,eax
  40eb89:	ret    
  40eb8a:	jbe    0x40eb31
  40eb8c:	mov    eax,ds:0xc5961c07
  40eb91:	xchg   BYTE PTR [eax+0x45],bl
  40eb94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb95:	repz push edi
  40eb97:	fld    QWORD PTR [eax-0x5f]
  40eb9a:	xchg   edx,eax
  40eb9b:	mov    ah,0xba
  40eb9d:	bound  esi,QWORD PTR [eax-0x3f]
  40eba0:	inc    edx
  40eba1:	mov    ebx,0x12008b61
  40eba6:	cld    
  40eba7:	outs   dx,DWORD PTR ds:[esi]
  40eba8:	jno    0x40ebaf
  40ebaa:	xchg   BYTE PTR [esi],bl
  40ebac:	sar    ebx,0x36
  40ebaf:	lds    ebx,FWORD PTR [edi+0x7d]
  40ebb2:	dec    edx
  40ebb3:	jmp    0x40ebe3
  40ebb5:	imul   ebx,edi,0xffffffad
  40ebb8:	dec    edi
  40ebb9:	mov    al,ds:0xd2bea506
  40ebbe:	adc    edx,edx
  40ebc0:	in     eax,dx
  40ebc1:	sti    
  40ebc2:	imul   eax,DWORD PTR ds:0x1fe36ed,0xc688c1f
  40ebcc:	cmp    ch,ch
  40ebce:	fdivr  DWORD PTR ds:0x16e31f60
  40ebd4:	mov    BYTE PTR ds:0x6b81fdbb,0xac
  40ebdb:	mov    ds:0x429a59f3,eax
  40ebe0:	fs mov ah,0xc8
  40ebe3:	jmp    0x40ec5b
  40ebe5:	sbb    ebp,DWORD PTR [edx+0x77441066]
  40ebeb:	dec    ebx
  40ebec:	stos   BYTE PTR es:[edi],al
  40ebed:	jecxz  0x40eb96
  40ebef:	xor    DWORD PTR [edx-0x21a09691],ebx
  40ebf5:	jecxz  0x40ebbb
  40ebf7:	fild   QWORD PTR [ebp-0x6c]
  40ebfa:	inc    edi
  40ebfb:	mov    ebp,0xde349128
  40ec00:	or     al,0x9
  40ec02:	jg     0x40eb98
  40ec04:	stos   BYTE PTR es:[edi],al
  40ec05:	loop   0x40ec17
  40ec07:	shl    DWORD PTR [ecx+0x1],0x43
  40ec0b:	out    0x32,al
  40ec0d:	arpl   WORD PTR [edi+0x32],di
  40ec10:	imul   ecx,DWORD PTR [edi],0xfffffffd
  40ec13:	xor    eax,0x555158b0
  40ec18:	jo     0x40ec62
  40ec1a:	inc    ebp
  40ec1b:	std    
  40ec1c:	and    DWORD PTR [ecx],ebx
  40ec1e:	fild   DWORD PTR [eax]
  40ec20:	adc    eax,0x18bb8621
  40ec25:	(bad)  [edi-0x10d86cab]
  40ec2b:	inc    esp
  40ec2c:	int3   
  40ec2d:	mov    edi,gs
  40ec2f:	jbe    0x40ec05
  40ec31:	mul    DWORD PTR [esi+0x7d215e35]
  40ec37:	imul   ebx,DWORD PTR [edi+ecx*4],0x78ffe0b7
  40ec3e:	mov    ebp,ebx
  40ec40:	enter  0x94bc,0x47
  40ec44:	push   ss
  40ec45:	pop    ebx
  40ec46:	lahf   
  40ec47:	adc    ebp,DWORD PTR [ebp+0x68]
  40ec4a:	clc    
  40ec4b:	es xor ebx,ecx
  40ec4e:	sub    BYTE PTR [esi-0x33],ch
  40ec51:	lock mov edi,DWORD PTR [eax-0x63]
  40ec55:	adc    eax,0xd99939a4
  40ec5a:	jmp    0x40ecd7
  40ec5c:	inc    edx
  40ec5d:	pop    esi
  40ec5e:	jmp    0x40ec20
  40ec60:	xchg   ebp,eax
  40ec61:	pushf  
  40ec62:	ror    DWORD PTR [esi+0x75821676],cl
  40ec68:	xor    ecx,esi
  40ec6a:	aam    0xce
  40ec6c:	sbb    al,0xfa
  40ec6e:	ds xor eax,0xf72983fb
  40ec74:	test   BYTE PTR [ebx-0x14],bh
  40ec77:	xchg   esp,eax
  40ec78:	cmp    dl,ch
  40ec7a:	cmp    al,0xeb
  40ec7c:	aad    0xb
  40ec7e:	int3   
  40ec7f:	cmp    eax,0xfdebbd66
  40ec84:	(bad)  
  40ec85:	mov    ch,0x6d
  40ec87:	jo     0x40ec30
  40ec89:	adc    al,0x20
  40ec8b:	jno    0x40ec4d
  40ec8d:	push   ds
  40ec8e:	xchg   esi,eax
  40ec8f:	std    
  40ec90:	aad    0x3b
  40ec92:	inc    ebx
  40ec93:	mov    edi,0x8345a85e
  40ec98:	push   ss
  40ec99:	(bad)  
  40ec9a:	jg     0x40ecc5
  40ec9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec9d:	test   BYTE PTR [esi+0x6554f20c],bl
  40eca3:	xchg   DWORD PTR [ebp+0x37],edx
  40eca6:	dec    eax
  40eca7:	adc    esi,ecx
  40eca9:	loopne 0x40ec2f
  40ecab:	xchg   edx,eax
  40ecac:	add    dl,BYTE PTR [ecx-0x1b]
  40ecaf:	sub    DWORD PTR ds:0xd6f1fd5d,esp
  40ecb5:	loopne 0x40ece4
  40ecb7:	jae    0x40ecde
  40ecb9:	mov    BYTE PTR [edi],al
  40ecbb:	jge    0x40ec93
  40ecbd:	mov    BYTE PTR [edx],dl
  40ecbf:	adc    BYTE PTR [eax+eiz*8],dh
  40ecc2:	dec    edi
  40ecc3:	outs   dx,BYTE PTR es:[esi]
  40ecc5:	loop   0x40ec77
  40ecc7:	sbb    al,0xd9
  40ecc9:	push   ecx
  40ecca:	call   0x232f:0x84d8e9aa
  40ecd1:	popf   
  40ecd2:	xor    eax,0x6291111f
  40ecd7:	sub    eax,0xb368e09
  40ecdc:	lods   eax,DWORD PTR ds:[esi]
  40ecdd:	pop    edx
  40ecde:	arpl   WORD PTR [eax+0x49],cx
  40ece1:	fimul  DWORD PTR [edx]
  40ece3:	pop    ecx
  40ece4:	push   ebx
  40ece5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ece6:	pop    ds
  40ece7:	pop    eax
  40ece8:	sbb    esp,DWORD PTR [ebx+0x6f]
  40eceb:	cmp    dh,BYTE PTR [edi-0x1c0d9a7b]
  40ecf1:	(bad)  
  40ecf2:	jp     0x40eccd
  40ecf4:	and    bl,dh
  40ecf6:	sbb    eax,DWORD PTR [esi-0x35]
  40ecf9:	inc    ebx
  40ecfa:	and    esp,0xbeb2de3b
  40ed00:	adc    al,0x95
  40ed02:	adc    DWORD PTR [eax-0x526f8bca],0xfffffff7
  40ed09:	(bad)  
  40ed0a:	pusha  
  40ed0b:	fidiv  DWORD PTR [ebx+0x32]
  40ed0e:	fiadd  DWORD PTR [eax-0x6a848ab4]
  40ed14:	fwait
  40ed15:	jg     0x40ecf1
  40ed17:	and    ch,BYTE PTR [esi]
  40ed19:	push   cs
  40ed1a:	cmp    dl,BYTE PTR [ecx-0x4812d407]
  40ed20:	imul   edx,DWORD PTR [ecx+0xc268663],0xffffffc8
  40ed27:	push   esp
  40ed28:	stos   BYTE PTR es:[edi],al
  40ed29:	stos   DWORD PTR es:[edi],eax
  40ed2a:	jl     0x40ed32
  40ed2c:	mov    ebx,0xfa02b5df
  40ed31:	push   esi
  40ed32:	mov    ecx,0x9412351a
  40ed37:	in     eax,0xad
  40ed39:	mov    edx,0xe2a78858
  40ed3e:	push   es
  40ed3f:	int    0xe9
  40ed41:	into   
  40ed42:	clc    
  40ed43:	ret    0xc017
  40ed46:	fucomip st,st(0)
  40ed48:	pop    edi
  40ed49:	add    eax,0x99d1270d
  40ed4e:	jno    0x40ecdb
  40ed50:	push   cs
  40ed51:	mov    ds:0x8aceb550,al
  40ed56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed57:	add    al,0x71
  40ed59:	jmp    0xf79f:0xf277a367
  40ed60:	std    
  40ed61:	je     0x40ece8
  40ed63:	mov    ch,0x94
  40ed65:	loope  0x40ed3f
  40ed67:	cli    
  40ed68:	mul    BYTE PTR [eax]
  40ed6a:	aam    0x54
  40ed6c:	(bad)  
  40ed6d:	jbe    0x40ed55
  40ed6f:	imul   esp,DWORD PTR [edi],0x4b
  40ed72:	xor    al,0x2e
  40ed74:	pop    DWORD PTR [edi+0x5fc41d22]
  40ed7a:	jo     0x40ed9f
  40ed7c:	sar    DWORD PTR [esi+0x53],cl
  40ed7f:	std    
  40ed80:	fild   DWORD PTR [ecx+0x1b4cf809]
  40ed86:	out    dx,eax
  40ed87:	pop    esi
  40ed88:	push   esp
  40ed89:	adc    dl,BYTE PTR [bx+si-0x49]
  40ed8d:	out    dx,eax
  40ed8e:	pop    edx
  40ed8f:	push   esi
  40ed90:	mov    ecx,0xad322a6
  40ed95:	loopne 0x40edd2
  40ed97:	mov    edx,0x33b730a0
  40ed9c:	and    al,0xbc
  40ed9e:	arpl   ax,cx
  40eda0:	aaa    
  40eda1:	sbb    DWORD PTR [esi],ebp
  40eda3:	adc    bh,BYTE PTR [edx-0x65]
  40eda6:	ret    
  40eda7:	sar    BYTE PTR [edx],cl
  40eda9:	fs mov bl,dl
  40edac:	xor    ch,BYTE PTR [ebx]
  40edae:	jno    0x40eda4
  40edb0:	(bad)  
  40edb1:	mov    ebp,DWORD PTR [ecx-0x58]
  40edb4:	enter  0x97a6,0xe
  40edb8:	int    0xe2
  40edba:	pop    edx
  40edbb:	icebp  
  40edbc:	cs mov ebx,0x65aff959
  40edc2:	add    DWORD PTR [ebx+esi*2],0x1b23eab8
  40edc9:	scas   al,BYTE PTR es:[edi]
  40edca:	pop    es
  40edcb:	ds cmp eax,0x58aa6c8d
  40edd1:	push   edi
  40edd2:	mov    dl,0x88
  40edd4:	pop    edx
  40edd5:	cmp    al,BYTE PTR [ebx-0x35]
  40edd8:	pop    ds
  40edd9:	popa   
  40edda:	call   FWORD PTR [edi-0x3a]
  40eddd:	mov    esp,0x7f934669
  40ede2:	pop    es
  40ede3:	popf   
  40ede4:	ins    BYTE PTR es:[edi],dx
  40ede5:	mov    esi,0x9f159055
  40edea:	xchg   edi,eax
  40edeb:	repz fcomi st,st(6)
  40edee:	jb     0x40edc9
  40edf0:	xor    dl,BYTE PTR [edi]
  40edf2:	jns    0x40edee
  40edf4:	in     eax,dx
  40edf5:	push   0xffffffc6
  40edf7:	(bad)  
  40edf8:	bound  ebx,QWORD PTR [edx+eiz*8]
  40edfb:	mov    ebx,0x47814790
  40ee00:	xchg   edx,eax
  40ee01:	(bad)
  40ee05:	in     eax,dx
  40ee06:	dec    esp
  40ee07:	or     al,0x67
  40ee09:	(bad)  
  40ee0a:	fwait
  40ee0b:	jecxz  0x40edec
  40ee0d:	sub    eax,0x80fe7fda
  40ee12:	pusha  
  40ee13:	pop    eax
  40ee14:	pop    ss
  40ee15:	mov    ecx,0xea8d1ba5
  40ee1a:	inc    ecx
  40ee1b:	es push ds
  40ee1d:	hlt    
  40ee1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee1f:	ins    DWORD PTR es:[edi],dx
  40ee20:	popa   
  40ee21:	sbb    dl,BYTE PTR [eax+edx*4-0x77]
  40ee25:	loopne 0x40ede5
  40ee27:	ins    DWORD PTR es:[edi],dx
  40ee28:	add    BYTE PTR [esi],0xc4
  40ee2b:	lods   al,BYTE PTR ds:[esi]
  40ee2c:	mov    cl,0x51
  40ee2e:	push   ebp
  40ee2f:	mov    bl,0xb8
  40ee31:	mov    ebx,0xce40ee4
  40ee36:	pop    ss
  40ee37:	inc    ebx
  40ee38:	setne  dl
  40ee3b:	leave  
  40ee3c:	aad    0xb5
  40ee3e:	add    BYTE PTR [edx+ebp*4],bl
  40ee41:	adc    eax,0x3d5f7744
  40ee46:	cwde   
  40ee47:	repnz popf 
  40ee49:	cmp    ch,bl
  40ee4b:	mov    bl,0x7f
  40ee4d:	adc    BYTE PTR [ebx*8+0x14742937],0x4a
  40ee55:	sub    eax,0xce1c4ef8
  40ee5a:	dec    eax
  40ee5b:	adc    BYTE PTR [ecx+0x583a6b0d],dh
  40ee61:	pop    ss
  40ee62:	mov    al,dh
  40ee64:	(bad)  
  40ee65:	(bad)  
  40ee66:	xchg   edx,eax
  40ee67:	jbe    0x40ee5e
  40ee69:	dec    ebx
  40ee6a:	push   0x43
  40ee6c:	push   ecx
  40ee6d:	dec    edx
  40ee6e:	or     eax,0xb01f52ff
  40ee73:	push   es
  40ee74:	xlat   BYTE PTR ds:[ebx]
  40ee75:	or     ah,BYTE PTR [edx+0x1861e47c]
  40ee7b:	lock stc 
  40ee7d:	push   ebx
  40ee7e:	jl     0x40ee68
  40ee80:	in     al,dx
  40ee81:	pop    ds
  40ee82:	sbb    eax,ebp
  40ee84:	(bad)  
  40ee85:	loopne 0x40ee90
  40ee87:	mov    ecx,DWORD PTR [ebp+0x16]
  40ee8a:	cmp    DWORD PTR [edi],esp
  40ee8c:	pop    ecx
  40ee8d:	bound  edi,QWORD PTR [edx-0x1abde784]
  40ee93:	sbb    al,0x2e
  40ee95:	mov    eax,ds:0x16842061
  40ee9a:	std    
  40ee9b:	out    dx,eax
  40ee9c:	pushf  
  40ee9d:	sub    BYTE PTR [edi+0x3e],bh
  40eea0:	test   eax,0xeab06d75
  40eea5:	push   esp
  40eea6:	ror    BYTE PTR [edi],1
  40eea8:	fs mov al,0xeb
  40eeab:	xor    eax,DWORD PTR [ebx+0x3a]
  40eeae:	iret   
  40eeaf:	pop    edx
  40eeb0:	push   esp
  40eeb1:	scas   eax,DWORD PTR es:[edi]
  40eeb2:	mov    bh,0xbb
  40eeb4:	or     eax,0x4076471a
  40eeb9:	jmp    0x40ee48
  40eebb:	pop    ebx
  40eebc:	aad    0x19
  40eebe:	cli    
  40eebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eec0:	push   eax
  40eec1:	(bad)  
  40eec2:	jnp    0x40eec6
  40eec4:	sub    DWORD PTR [ebp-0x44b766e9],0x7a
  40eecb:	rcr    DWORD PTR [ebp-0x6b6e3585],0xaf
  40eed2:	jo     0x40ee56
  40eed4:	addr16 pop ss
  40eed6:	scas   al,BYTE PTR es:[edi]
  40eed7:	sbb    dl,0xa4
  40eeda:	jl     0x40ef59
  40eedc:	add    eax,0xb03c9c57
  40eee1:	cli    
  40eee2:	repnz mov ds:0x5007e30b,al
  40eee8:	test   eax,0x6b9b569c
  40eeed:	jmp    0x40ef03
  40eeef:	jecxz  0x40eeb3
  40eef1:	data16 aad 0x71
  40eef4:	push   cs
  40eef5:	js     0x40ef74
  40eef7:	and    eax,0x31ad7510
  40eefc:	dec    esi
  40eefd:	sbb    esi,DWORD PTR [esi-0x502f7561]
  40ef03:	(bad)  
  40ef04:	jmp    FWORD PTR [edx+esi*2]
  40ef07:	sbb    al,0x99
  40ef09:	adc    eax,0xd7caad83
  40ef0e:	sbb    DWORD PTR [ecx+0x413dcb32],esi
  40ef14:	loop   0x40ef40
  40ef16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef17:	cli    
  40ef18:	fwait
  40ef19:	les    eax,FWORD PTR cs:[eax+0x4c]
  40ef1d:	mov    DWORD PTR cs:[ebx+0xa],edi
  40ef21:	pop    esi
  40ef22:	sbb    bl,BYTE PTR [edi]
  40ef24:	mov    bh,0xc6
  40ef26:	pop    esp
  40ef27:	cmp    edi,DWORD PTR [edx+0x24]
  40ef2a:	mov    WORD PTR [ebx+0x4c],gs
  40ef2d:	jp     0x40ef66
  40ef2f:	sar    ch,0x12
  40ef32:	inc    eax
  40ef33:	dec    esi
  40ef34:	mov    bl,BYTE PTR [ebx]
  40ef36:	sub    ah,bl
  40ef38:	adc    ah,BYTE PTR [edi+0x48f1606e]
  40ef3e:	in     al,0x97
  40ef40:	pop    ds
  40ef41:	jle    0x40ef23
  40ef43:	xchg   esp,eax
  40ef44:	push   eax
  40ef45:	lds    edi,FWORD PTR [ebp-0x41]
  40ef48:	(bad)  
  40ef49:	sahf   
  40ef4a:	in     eax,0xf
  40ef4c:	or     BYTE PTR [ebx],ch
  40ef4e:	pop    ebx
  40ef4f:	js     0x40ef82
  40ef51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef52:	pop    ecx
  40ef53:	retf   0xe016
  40ef56:	aas    
  40ef57:	imul   edx
  40ef59:	je     0x40ef52
  40ef5b:	rdmsr  
  40ef5d:	mov    ch,0x36
  40ef5f:	mov    esi,0x36ccebcf
  40ef65:	and    al,0x92
  40ef67:	sub    al,BYTE PTR [esi+0x60d3cf96]
  40ef6d:	test   eax,0x2f713a41
  40ef72:	inc    eax
  40ef73:	pop    es
  40ef74:	xlat   BYTE PTR ds:[ebx]
  40ef75:	test   al,0xf9
  40ef77:	mov    ebx,0xf8c280e8
  40ef7c:	cmp    ecx,ebx
  40ef7e:	adc    cl,BYTE PTR [ebx+0x73]
  40ef81:	in     eax,dx
  40ef82:	mov    ebp,0x6b69f8ed
  40ef87:	cli    
  40ef88:	or     BYTE PTR [edi+ebp*1-0x5],al
  40ef8c:	jmp    0xed501db5
  40ef91:	push   ss
  40ef92:	jo     0x40ef3f
  40ef94:	mov    esp,?
  40ef96:	rcl    DWORD PTR [ecx],0x28
  40ef99:	stos   DWORD PTR es:[edi],eax
  40ef9a:	cld    
  40ef9b:	(bad)  
  40ef9d:	or     eax,0xeb26655d
  40efa2:	inc    ecx
  40efa4:	sahf   
  40efa5:	or     eax,0x9d832e0f
  40efaa:	dec    esi
  40efab:	ja     0x40efee
  40efad:	push   ebp
  40efae:	jecxz  0x40efab
  40efb0:	test   bl,bl
  40efb2:	(bad)  
  40efb4:	xlat   BYTE PTR ds:[ebx]
  40efb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efb6:	pop    ebp
  40efb7:	sar    dh,0x83
  40efba:	xchg   edi,eax
  40efbb:	xor    eax,0x8a0baf5a
  40efc0:	push   ds
  40efc1:	cmp    dh,ch
  40efc3:	shl    BYTE PTR [edi+0x34],0xe3
  40efc7:	push   eax
  40efc8:	pop    eax
  40efc9:	jbe    0x40ef73
  40efcb:	xor    eax,0xef589e61
  40efd0:	inc    eax
  40efd1:	das    
  40efd2:	mov    al,0xca
  40efd4:	push   0xffffffa9
  40efd6:	push   ecx
  40efd7:	and    DWORD PTR [esi],eax
  40efd9:	mov    al,0x8
  40efdb:	rcl    BYTE PTR [esi-0x62],1
  40efde:	sti    
  40efdf:	inc    esp
  40efe0:	cdq    
  40efe1:	scas   al,BYTE PTR es:[edi]
  40efe2:	xchg   ebp,eax
  40efe3:	cmp    cl,bl
  40efe5:	stos   DWORD PTR es:[edi],eax
  40efe6:	into   
  40efe7:	jp     0x40effe
  40efe9:	les    ebp,FWORD PTR [edx-0x6927512d]
  40efef:	stos   BYTE PTR es:[edi],al
  40eff0:	jb     0x40f006
  40eff2:	(bad)  
  40eff3:	mov    al,ds:0x70c6a302
  40eff8:	inc    esi
  40eff9:	push   edx
  40effa:	xor    DWORD PTR [esi],edi
  40effc:	test   eax,0x42a85b21
  40f001:	adc    BYTE PTR [ebp-0x747443c4],ah
  40f007:	xor    dl,BYTE PTR [esi-0x4486086c]
  40f00d:	daa    
  40f00e:	cmp    ebx,edx
  40f010:	mov    eax,0xbca10389
  40f015:	stc    
  40f016:	xchg   ecx,eax
  40f017:	test   al,0x5
  40f019:	aad    0x86
  40f01b:	or     al,ah
  40f01d:	mov    ds:0xde22b122,al
  40f022:	fldcw  WORD PTR [ecx]
  40f024:	dec    eax
  40f025:	push   es
  40f026:	inc    esi
  40f027:	inc    edi
  40f028:	inc    edi
  40f029:	mov    ch,0x2c
  40f02b:	jne    0x40efcf
  40f02d:	das    
  40f02e:	fidivr WORD PTR [edx-0x33]
  40f031:	pop    edx
  40f032:	js     0x40efff
  40f034:	fld    st(0)
  40f036:	les    ebx,FWORD PTR [esi+0x32]
  40f039:	xchg   ecx,eax
  40f03a:	ins    BYTE PTR es:[edi],dx
  40f03b:	mov    ds:0x28548e92,eax
  40f040:	mov    WORD PTR [edi+esi*4],es
  40f043:	nop
  40f044:	add    ch,BYTE PTR [edi+edi*2-0x75]
  40f048:	mov    ?,esp
  40f04a:	xchg   edi,eax
  40f04b:	xchg   ecx,eax
  40f04c:	pop    ebx
  40f04d:	xor    al,0xc6
  40f04f:	adc    BYTE PTR [ebp-0xc1d25f],dh
  40f055:	test   DWORD PTR [ebp-0x15],edi
  40f058:	and    edi,DWORD PTR [edx+eiz*1+0xf]
  40f05c:	mov    ebp,0xa8568777
  40f061:	xor    eax,0x6f0d6e1a
  40f066:	and    al,0xb7
  40f068:	into   
  40f069:	sub    al,0x65
  40f06b:	lds    eax,FWORD PTR [ebp+0xeb69eae]
  40f071:	jns    0x40f0b1
  40f073:	inc    esp
  40f074:	inc    ebp
  40f075:	jmp    0x6c42a8bc
  40f07a:	jle    0x40f0e7
  40f07c:	leave  
  40f07d:	repnz idiv BYTE PTR fs:[edx-0x37df65eb]
  40f085:	sbb    BYTE PTR [esi+eax*8+0x29f5aa7],bl
  40f08c:	mov    al,ds:0x9b1b7551
  40f091:	push   edx
  40f092:	test   al,0x14
  40f094:	icebp  
  40f095:	pcmpeqb mm1,mm5
  40f098:	scas   eax,DWORD PTR es:[edi]
  40f099:	sub    BYTE PTR [esi+0x53],bh
  40f09c:	mov    gs,WORD PTR [eax+0x4f]
  40f09f:	ds (bad) 
  40f0a1:	ins    BYTE PTR es:[edi],dx
  40f0a2:	hlt    
  40f0a3:	push   edi
  40f0a4:	mov    ecx,0xfc2315ad
  40f0a9:	aas    
  40f0aa:	es loop 0x40f078
  40f0ad:	je     0x40f043
  40f0af:	push   es
  40f0b0:	xchg   ecx,eax
  40f0b1:	scas   eax,DWORD PTR es:[edi]
  40f0b2:	in     al,0x30
  40f0b4:	jecxz  0x40f0b8
  40f0b6:	test   DWORD PTR [esi+0x49],ecx
  40f0b9:	and    ebp,DWORD PTR [ebp-0x24]
  40f0bc:	packuswb mm7,QWORD PTR fs:[ecx+0x2c]
  40f0c1:	or     cl,ch
  40f0c3:	test   al,0x6f
  40f0c5:	dec    edi
  40f0c6:	xchg   esi,eax
  40f0c7:	aam    0x34
  40f0c9:	sbb    ebx,DWORD PTR [edi]
  40f0cb:	lea    ecx,[esi+0x44]
  40f0ce:	add    DWORD PTR [ebx+0x7f210b5b],0xbb0249e5
  40f0d8:	leave  
  40f0d9:	repz xchg ebx,eax
  40f0db:	inc    edi
  40f0dc:	mov    ds:0x49b7a5a5,eax
  40f0e1:	mov    al,0xf6
  40f0e3:	and    esp,0xd2c01e0e
  40f0e9:	jne    0x40f09c
  40f0eb:	adc    edx,DWORD PTR [ecx]
  40f0ed:	lea    edx,[edx]
  40f0ef:	add    al,0xa4
  40f0f1:	out    0xe9,al
  40f0f3:	inc    edx
  40f0f4:	test   DWORD PTR [ebx-0x58007bd1],0xbc230d3
  40f0fe:	add    eax,esp
  40f100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f101:	dec    eax
  40f102:	sub    bl,BYTE PTR ds:0x511b51ff
  40f108:	ret    
  40f109:	add    DWORD PTR [ecx+0x6e],0x58
  40f10d:	stc    
  40f10e:	mov    edx,0x4a70189e
  40f113:	shl    BYTE PTR [edx],cl
  40f115:	mov    ds:0x61e6d267,al
  40f11a:	mov    al,0x63
  40f11c:	push   eax
  40f11d:	jp     0x40f0a8
  40f11f:	push   es
  40f120:	dec    esp
  40f121:	outs   dx,DWORD PTR ds:[esi]
  40f122:	cmp    ch,BYTE PTR [eax+eiz*4-0x3f14c77b]
  40f129:	push   ebp
  40f12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f12b:	in     eax,0xd9
  40f12d:	cmc    
  40f12e:	sub    ch,BYTE PTR ds:0x23cd2147
  40f134:	sbb    edx,DWORD PTR [ebp-0x75]
  40f137:	xor    ebp,DWORD PTR [ebp+0xd]
  40f13a:	mov    dh,0xae
  40f13c:	mov    ecx,0x3b0c758b
  40f141:	lock mov eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	bswap  esp
  40fa18:	pop    eax
  40fa19:	sbb    al,0x74
  40fa1b:	retf   0x7a7a
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	lahf   
  40fa23:	jo     0x40fa96
  40fa25:	cwde   
  40fa26:	sbb    esi,DWORD PTR [esi+0x12]
  40fa29:	pop    ebp
  40fa2a:	jne    0x40f9c4
  40fa2c:	popf   
  40fa2d:	add    BYTE PTR [ebx-0x693db169],0x1e
  40fa34:	sbb    DWORD PTR [ebp-0xb],esi
  40fa37:	push   esi
  40fa38:	mov    eax,ds:0x606cd10f
  40fa3d:	sbb    ch,ch
  40fa3f:	shl    BYTE PTR [ebp+0x2d5b2454],0x4d
  40fa46:	xchg   esp,eax
  40fa47:	jmp    0x40fa29
  40fa49:	or     al,0xc7
  40fa4b:	es adc eax,0x4431181e
  40fa51:	sub    al,0x8
  40fa53:	addr16 xor cl,0x3b
  40fa57:	cs jg  0x40f9f5
  40fa5a:	pop    eax
  40fa5b:	pop    ecx
  40fa5c:	bound  edx,QWORD PTR [ebp+esi*8+0x73]
  40fa60:	ficomp DWORD PTR [ecx-0x2f]
  40fa63:	mov    bh,0x9c
  40fa65:	sub    dh,cl
  40fa67:	pusha  
  40fa68:	hlt    
  40fa69:	sub    dh,BYTE PTR [edx+0x7f050877]
  40fa6f:	sbb    esi,DWORD PTR [esi]
  40fa71:	mov    esi,DWORD PTR [eax+0x3d]
  40fa74:	lea    edi,[ebp-0x72]
  40fa77:	push   cs
  40fa78:	sub    BYTE PTR ds:0xe1f84f36,0x59
  40fa7f:	shl    BYTE PTR [ecx],cl
  40fa81:	cmp    BYTE PTR [esi+edi*4],cl
  40fa84:	jbe    0x40fad3
  40fa86:	dec    esp
  40fa87:	pop    eax
  40fa88:	popa   
  40fa89:	shl    BYTE PTR [ecx-0x21b8e1ba],0x30
  40fa90:	mov    ds:0x7c293323,eax
  40fa95:	bound  ebp,QWORD PTR [ecx+0x1a]
  40fa98:	ins    BYTE PTR es:[edi],dx
  40fa99:	cs dec esp
  40fa9b:	mov    dh,0x27
  40fa9d:	inc    esi
  40fa9e:	cmp    cl,0x93
  40faa1:	and    BYTE PTR [ecx+0x6172a264],al
  40faa7:	or     BYTE PTR [edi],dl
  40faa9:	xchg   ebp,eax
  40faaa:	push   es
  40faab:	pop    esi
  40faac:	sbb    BYTE PTR [edx-0x60a2a654],al
  40fab2:	mov    dh,0x61
  40fab4:	jg     0x40faa3
  40fab6:	dec    edi
  40fab7:	push   ebx
  40fab8:	fs int 0x8b
  40fabb:	stos   BYTE PTR es:[edi],al
  40fabc:	aaa    
  40fabd:	xor    cl,BYTE PTR [edx]
  40fabf:	sbb    BYTE PTR [ecx-0x9],ch
  40fac2:	jne    0x40fa6a
  40fac4:	fstp   QWORD PTR [edi+0x25c8a0fe]
  40faca:	xlat   BYTE PTR ds:[ebx]
  40facb:	mov    ch,BYTE PTR [esi-0x3b5a7882]
  40fad1:	pop    es
  40fad2:	pop    es
  40fad3:	jg     0x40fb01
  40fad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad6:	in     al,0xbe
  40fad8:	arpl   WORD PTR [ebx+eiz*1-0x1a],sp
  40fadc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fadd:	sbb    BYTE PTR [edi-0x5694c79a],0x90
  40fae4:	imul   ecx,DWORD PTR [ebp+0x73d17d18],0xa6f30f46
  40faee:	js     0x40faed
  40faf0:	xchg   BYTE PTR [edi+eax*8+0x19],ch
  40faf4:	sbb    dl,BYTE PTR [eax+ecx*2-0x7a]
  40faf8:	data16 xchg BYTE PTR [eax+0x360d0657],ch
  40faff:	inc    ecx
  40fb00:	jmp    0xb705:0x28a5bada
  40fb07:	mov    eax,0x8541d8b1
  40fb0c:	es pusha 
  40fb0e:	(bad)  
  40fb0f:	retf   0x6817
  40fb12:	jb     0x40faf2
  40fb14:	fnstenv [ecx]
  40fb16:	mov    DWORD PTR [ebp+0x62],esi
  40fb19:	pop    ss
  40fb1a:	pusha  
  40fb1b:	add    al,0x66
  40fb1d:	pushf  
  40fb1e:	stos   BYTE PTR es:[edi],al
  40fb1f:	inc    ebp
  40fb20:	adc    BYTE PTR [ebp-0x20],bl
  40fb23:	mov    ds:0xa3e40b,al
  40fb28:	into   
  40fb29:	mov    ecx,0xcaf46561
  40fb2e:	dec    esi
  40fb2f:	sti    
  40fb30:	jecxz  0x40fba6
  40fb32:	test   BYTE PTR [esi],0xb7
  40fb35:	sub    BYTE PTR [esi+0x619e19f1],0x22
  40fb3c:	jns    0x40faf2
  40fb3e:	(bad)  
  40fb3f:	mov    ebx,0xd7d54ec7
  40fb44:	mov    WORD PTR [esi+0x5c96d9b7],cs
  40fb4a:	jl     0x40fb38
  40fb4c:	daa    
  40fb4d:	out    dx,al
  40fb4e:	test   eax,ecx
  40fb50:	ret    0x7597
  40fb53:	sbb    cl,BYTE PTR [edi-0x77]
  40fb56:	sub    dl,0xa8
  40fb59:	jge    0x40fb6d
  40fb5b:	inc    ebx
  40fb5c:	mov    eax,ds:0xaf648cbe
  40fb61:	scas   al,BYTE PTR es:[edi]
  40fb62:	cwde   
  40fb63:	jb     0x40fb4a
  40fb65:	(bad)  
  40fb66:	dec    esi
  40fb67:	mov    eax,ds:0x8d527699
  40fb6c:	loope  0x40fb08
  40fb6e:	sub    eax,0x497930ab
  40fb73:	das    
  40fb74:	scas   al,BYTE PTR es:[edi]
  40fb75:	cmp    al,bh
  40fb77:	sbb    DWORD PTR [edx+0x7b],0x76c84c3a
  40fb7e:	inc    ebx
  40fb7f:	std    
  40fb80:	into   
  40fb81:	rcr    DWORD PTR ds:0x6c05345a,1
  40fb87:	(bad)  
  40fb88:	in     al,dx
  40fb89:	ss mov ah,0x33
  40fb8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb8d:	iret   
  40fb8e:	push   0xb51ac767
  40fb93:	das    
  40fb94:	(bad)  
  40fb96:	cld    
  40fb97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb98:	adc    al,0x63
  40fb9a:	shl    DWORD PTR [ebp-0x7ba1db66],cl
  40fba0:	sub    DWORD PTR [ebx],0xffffff95
  40fba3:	mov    bl,BYTE PTR [eax+ebx*4-0x4631adfd]
  40fbaa:	mov    ecx,0x408bf8d1
  40fbaf:	xor    BYTE PTR [esi-0x67],cl
  40fbb2:	push   eax
  40fbb3:	les    esp,FWORD PTR [edi+esi*2]
  40fbb6:	sub    bl,BYTE PTR [esi+0x18]
  40fbb9:	adc    al,0x25
  40fbbb:	jne    0x40fc3b
  40fbbd:	lods   eax,DWORD PTR ds:[esi]
  40fbbe:	(bad)  
  40fbc0:	xor    DWORD PTR [ebp-0x36232ecb],edi
  40fbc6:	lock inc ebp
  40fbc8:	clc    
  40fbc9:	add    dl,dl
  40fbcb:	ds sar ch,cl
  40fbce:	mov    es,WORD PTR [esi-0x29c3b1aa]
  40fbd4:	call   0x646c:0x3435bc43
  40fbdb:	sub    ch,BYTE PTR [edx-0x1b]
  40fbde:	sbb    BYTE PTR [ecx-0x14],ch
  40fbe1:	cmp    al,0xdb
  40fbe3:	sbb    edi,DWORD PTR [edi+0x60]
  40fbe6:	fmul   DWORD PTR [edx+0x61247e9d]
  40fbec:	mov    ah,0x43
  40fbee:	push   eax
  40fbef:	retf   0xb944
  40fbf2:	push   eax
  40fbf3:	lds    esi,FWORD PTR [ebx+edx*8]
  40fbf6:	push   edx
  40fbf7:	mov    edi,0x21b7379
  40fbfc:	jg     0x40fc17
  40fbfe:	mov    ch,0xf9
  40fc00:	jle    0x40fc22
  40fc02:	shl    BYTE PTR [edi-0x55],0xb4
  40fc06:	jno    0x40fc7b
  40fc08:	test   BYTE PTR [esi+0x2aeeab25],bh
  40fc0e:	push   ebx
  40fc0f:	aad    0xad
  40fc11:	xchg   edx,eax
  40fc12:	pop    es
  40fc13:	push   ebp
  40fc14:	scas   eax,DWORD PTR es:[edi]
  40fc15:	ret    
  40fc16:	inc    ecx
  40fc17:	popa   
  40fc18:	xor    DWORD PTR [edx],eax
  40fc1a:	ins    BYTE PTR es:[edi],dx
  40fc1b:	mov    ds:0xd86eb4ac,al
  40fc20:	adc    edi,DWORD PTR [ecx]
  40fc22:	mov    cl,BYTE PTR [eax+eiz*4+0xd]
  40fc26:	inc    edi
  40fc27:	ins    DWORD PTR es:[edi],dx
  40fc28:	(bad)  
  40fc29:	cs mov cl,0x23
  40fc2c:	jmp    0xfc30:0xd03e2399
  40fc33:	push   edi
  40fc34:	jmp    0xd337:0x4536ebc4
  40fc3b:	sbb    dl,BYTE PTR [eax+0x20]
  40fc3e:	shl    dh,cl
  40fc40:	retf   0xd09d
  40fc43:	int    0x50
  40fc45:	dec    ebx
  40fc46:	pop    esp
  40fc47:	xor    BYTE PTR [eax+0x33adb6f6],ch
  40fc4d:	int    0x4d
  40fc4f:	cld    
  40fc50:	scas   al,BYTE PTR es:[edi]
  40fc51:	retf   
  40fc52:	cmp    al,0xb4
  40fc54:	cmp    DWORD PTR [ebp+edx*1+0x1a],edx
  40fc58:	aam    0x7d
  40fc5a:	shr    DWORD PTR [ebx],0x8d
  40fc5d:	mov    bh,cl
  40fc5f:	dec    edx
  40fc60:	aam    0x8a
  40fc62:	mov    eax,DWORD PTR [ebp+0x5cd206d1]
  40fc68:	cmp    DWORD PTR [ebx-0x7b25e113],0xfd649f4b
  40fc72:	jle    0x40fc26
  40fc74:	cwde   
  40fc75:	leave  
  40fc76:	dec    eax
  40fc77:	das    
  40fc78:	lods   eax,DWORD PTR ds:[esi]
  40fc79:	pmullw mm3,mm7
  40fc7c:	adc    al,0xa
  40fc7e:	cmp    eax,DWORD PTR [ebx+0x2479c250]
  40fc84:	ss call 0xa1ac72a2
  40fc8a:	aad    0x5c
  40fc8c:	rcr    BYTE PTR [ecx],cl
  40fc8e:	sub    al,0x87
  40fc90:	in     al,0xa2
  40fc92:	retf   
  40fc93:	call   0xbb5b6c4e
  40fc98:	pusha  
  40fc99:	sub    dh,cl
  40fc9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc9c:	add    ah,0x71
  40fc9f:	iret   
  40fca0:	mov    esp,0x3b8d2e12
  40fca5:	mov    ds:0xb9f1ba38,al
  40fcaa:	xor    eax,0xbebb504b
  40fcaf:	pop    es
  40fcb0:	jp     0x40fc41
  40fcb2:	xchg   ecx,eax
  40fcb3:	outs   dx,BYTE PTR ds:[esi]
  40fcb4:	enter  0x35c9,0x49
  40fcb8:	xlat   BYTE PTR ds:[ebx]
  40fcb9:	sbb    eax,0xd63a712e
  40fcbe:	jmp    0x40fcae
  40fcc0:	push   esi
  40fcc1:	ss jae 0x40fcdd
  40fcc4:	add    dl,ah
  40fcc6:	into   
  40fcc7:	and    al,0x4b
  40fcc9:	ret    
  40fcca:	repz jle 0x40fcb2
  40fccd:	bound  ecx,QWORD PTR ds:0x8849ec77
  40fcd3:	pop    ss
  40fcd4:	cmp    eax,0xda36b602
  40fcd9:	add    al,0x2b
  40fcdb:	aad    0x79
  40fcdd:	stos   BYTE PTR es:[edi],al
  40fcde:	ins    DWORD PTR es:[edi],dx
  40fcdf:	xchg   edi,eax
  40fce0:	or     DWORD PTR [esi],edi
  40fce2:	add    eax,0xd0c8a115
  40fce7:	and    BYTE PTR ds:0x1054a614,dl
  40fced:	pop    ebp
  40fcee:	je     0x40fd41
  40fcf0:	pushf  
  40fcf1:	dec    eax
  40fcf2:	cli    
  40fcf3:	push   edx
  40fcf4:	xchg   ecx,eax
  40fcf5:	cmc    
  40fcf6:	ret    
  40fcf7:	(bad)  
  40fcf8:	push   cs
  40fcf9:	jle    0x40fd3e
  40fcfb:	sbb    ebp,edi
  40fcfd:	jecxz  0x40fce3
  40fcff:	mov    ebp,0x7ed660cd
  40fd04:	fwait
  40fd05:	hlt    
  40fd06:	pop    ebx
  40fd07:	lds    edi,FWORD PTR [ebp-0x3824d8b8]
  40fd0d:	xchg   ebp,esp
  40fd0f:	scas   al,BYTE PTR es:[edi]
  40fd10:	aas    
  40fd11:	loope  0x40fcb6
  40fd13:	and    al,0x36
  40fd15:	jbe    0x40fd17
  40fd17:	(bad)
  40fd1a:	pop    esp
  40fd1b:	lods   al,BYTE PTR ds:[esi]
  40fd1c:	jmp    0x40fcb5
  40fd1e:	sbb    DWORD PTR [eax+0x744909f5],ebx
  40fd24:	xchg   edx,eax
  40fd25:	pop    edx
  40fd26:	nop
  40fd27:	xchg   esi,eax
  40fd28:	pop    cx
  40fd2a:	push   0xffffffb2
  40fd2c:	cld    
  40fd2d:	xchg   ecx,eax
  40fd2e:	js     0x40fcfe
  40fd30:	nop
  40fd31:	(bad)  
  40fd32:	(bad)  
  40fd34:	dec    ebp
  40fd35:	push   eax
  40fd36:	push   ebx
  40fd37:	add    eax,DWORD PTR [ecx-0x1fe37041]
  40fd3d:	ja     0x40fd19
  40fd3f:	cmp    ecx,eax
  40fd41:	leave  
  40fd42:	dec    edi
  40fd43:	fmul   DWORD PTR [edi]
  40fd45:	not    DWORD PTR [eax-0x7083a291]
  40fd4b:	call   0xa9a9:0xbb4a0f99
  40fd52:	nop
  40fd53:	jo     0x40fce2
  40fd55:	adc    eax,0xb63f0798
  40fd5a:	js     0x40fddb
  40fd5c:	mov    bl,0x19
  40fd5e:	inc    ebx
  40fd5f:	mov    bl,0xe1
  40fd61:	mov    dh,0x98
  40fd63:	daa    
  40fd64:	xor    al,0x96
  40fd66:	jmp    0x40fd18
  40fd68:	or     edx,DWORD PTR [ecx+0x56]
  40fd6b:	popa   
  40fd6c:	mov    dh,0xdc
  40fd6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd6f:	test   eax,0xa935c4c8
  40fd74:	js     0x40fd6d
  40fd76:	fst    QWORD PTR [ebx+0x4a]
  40fd79:	mov    ch,0x22
  40fd7b:	rol    BYTE PTR [ebp+0x50],cl
  40fd7e:	ret    0xecda
  40fd81:	nop
  40fd82:	mov    ah,BYTE PTR [ebp-0x72bf23e1]
  40fd88:	mov    dl,0xf9
  40fd8a:	sub    BYTE PTR [eax-0x1a],cl
  40fd8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd8e:	test   ah,0xfe
  40fd91:	dec    dh
  40fd93:	into   
  40fd94:	inc    ecx
  40fd95:	outs   dx,BYTE PTR ds:[esi]
  40fd96:	fnsetpm(287 only) 
  40fd98:	add    DWORD PTR [ecx-0xa7e4308],edi
  40fd9e:	daa    
  40fd9f:	imul   ecx,DWORD PTR [ecx-0x330a30f6],0x67
  40fda6:	sbb    BYTE PTR [esi+0x0],bl
  40fda9:	xchg   edi,eax
  40fdaa:	aas    
  40fdab:	add    BYTE PTR [esi+0x44],0x9
  40fdaf:	mov    ebp,0x96b92f57
  40fdb4:	adc    BYTE PTR [esi+0x6ea695c1],ah
  40fdba:	mov    edx,DWORD PTR [edi-0x319b2d93]
  40fdc0:	push   eax
  40fdc1:	sub    al,0x6a
  40fdc3:	xchg   ecx,eax
  40fdc4:	pop    ebp
  40fdc5:	shl    DWORD PTR ds:0xe81688b8,cl
  40fdcb:	push   ecx
  40fdcc:	das    
  40fdcd:	xlat   BYTE PTR fs:[ebx]
  40fdcf:	and    ebx,DWORD PTR [ebp+0xf0fb936]
  40fdd5:	lea    esi,[ebp-0x52cae55]
  40fddb:	push   0x7c
  40fddd:	stos   DWORD PTR es:[edi],eax
  40fdde:	stos   DWORD PTR es:[edi],eax
  40fddf:	jl     0x40fe1b
  40fde1:	adc    al,0x61
  40fde3:	dec    ebp
  40fde4:	mov    bl,0x5e
  40fde6:	and    DWORD PTR [ebx],esp
  40fde8:	adc    BYTE PTR [edi+0x35],0x3d
  40fdec:	imul   esi,DWORD PTR [edx+0x1b],0xffffffcf
  40fdf0:	test   dh,ch
  40fdf2:	xchg   BYTE PTR [edi+0x41a110c0],dl
  40fdf8:	inc    ebp
  40fdf9:	jb     0x40fdf4
  40fdfb:	sub    al,0xe2
  40fdfd:	mov    esp,0x5b840e7c
  40fe02:	sar    DWORD PTR [edi-0x1c1b038f],0x25
  40fe09:	data16 sahf 
  40fe0b:	xchg   ebx,eax
  40fe0c:	dec    ebx
  40fe0d:	xchg   ecx,eax
  40fe0e:	xchg   ebp,eax
  40fe0f:	loopne 0x40fdec
  40fe11:	xor    BYTE PTR [ebx+0x306dc53],ah
  40fe17:	xor    al,0x71
  40fe19:	sbb    BYTE PTR [esi+0xb2dd54c],cl
  40fe1f:	loop   0x40fdc1
  40fe21:	adc    dh,cl
  40fe23:	(bad)  
  40fe24:	push   eax
  40fe25:	(bad)  
  40fe26:	out    0x2c,eax
  40fe28:	scas   al,BYTE PTR es:[edi]
  40fe29:	dec    eax
  40fe2a:	ror    DWORD PTR [eax+0x75],0xd4
  40fe2e:	ficomp DWORD PTR [ebp+0x2c5fbccf]
  40fe34:	and    ebp,eax
  40fe36:	or     al,0xa4
  40fe38:	jl     0x40fe06
  40fe3a:	mov    gs:0xcbf77455,eax
  40fe40:	ret    0x7d93
  40fe43:	loop   0x40fdd8
  40fe45:	jge    0x40fe0e
  40fe47:	xchg   BYTE PTR [ebx+0x6c],dh
  40fe4a:	lods   eax,DWORD PTR ds:[esi]
  40fe4b:	test   DWORD PTR [ecx],esp
  40fe4d:	mov    WORD PTR [ebp-0x3c],?
  40fe50:	inc    BYTE PTR [edi+edx*8-0x32]
  40fe54:	data16 mov bl,0x1e
  40fe57:	mov    esp,0xcb09be27
  40fe5c:	and    eax,0xb9aeb22d
  40fe61:	scas   al,BYTE PTR es:[edi]
  40fe62:	stc    
  40fe63:	push   0x674da680
  40fe68:	lds    ecx,FWORD PTR [eax-0x56598726]
  40fe6e:	icebp  
  40fe6f:	stos   DWORD PTR es:[edi],eax
  40fe70:	cmp    edx,eax
  40fe72:	sub    BYTE PTR [esi-0x2],cl
  40fe75:	mov    dl,0xe2
  40fe77:	addr16 cmc 
  40fe79:	std    
  40fe7a:	sbb    edx,ebp
  40fe7c:	sahf   
  40fe7d:	loope  0x40fee8
  40fe7f:	cmp    al,0x95
  40fe81:	lods   eax,DWORD PTR ds:[esi]
  40fe82:	fs push edx
  40fe84:	repz mov eax,ds:0xdeaf7fa6
  40fe8a:	int3   
  40fe8b:	ja     0x40fe75
  40fe8d:	dec    ecx
  40fe8e:	jle    0x40fe19
  40fe90:	es pop es
  40fe92:	popa   
  40fe93:	adc    BYTE PTR [ebp-0x3d160c72],cl
  40fe99:	repnz mov bh,0x4e
  40fe9c:	addr16 out 0x30,al
  40fe9f:	adc    eax,0x33bd991
  40fea4:	inc    esi
  40fea5:	sbb    ah,bh
  40fea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea8:	sub    DWORD PTR [eax],esi
  40feaa:	sub    esi,DWORD PTR [ebp+0x68]
  40fead:	xchg   ebx,eax
  40feae:	adc    ch,ah
  40feb0:	or     al,0x8d
  40feb2:	or     ch,BYTE PTR [edx+esi*4+0x7f]
  40feb6:	outs   dx,DWORD PTR ds:[esi]
  40feb7:	mov    esi,0xaffae124
  40febc:	mov    eax,ds:0xc8d0526f
  40fec1:	add    dl,0x39
  40fec4:	jp     0x40ff15
  40fec6:	fwait
  40fec7:	mov    ds:0xcec03dae,al
  40fecc:	xchg   ebx,eax
  40fecd:	cdq    
  40fece:	ss and al,0x20
  40fed1:	mov    al,0x20
  40fed3:	cmp    esi,edi
  40fed5:	cmc    
  40fed6:	ins    BYTE PTR es:[edi],dx
  40fed7:	(bad)  
  40fed8:	(bad)  
  40fed9:	ins    DWORD PTR es:[edi],dx
  40feda:	and    edx,eax
  40fedc:	pop    ebp
  40fedd:	sub    al,0x28
  40fedf:	jmp    FWORD PTR [edi-0x33f5806d]
  40fee5:	sub    bh,BYTE PTR [ebx-0x16]
  40fee8:	rcl    DWORD PTR [edx+0x27],1
  40feeb:	int    0xd
  40feed:	pop    esp
  40feee:	dec    ecx
  40feef:	leave  
  40fef0:	retf   
  40fef1:	outs   dx,DWORD PTR ds:[esi]
  40fef2:	js     0x40ff02
  40fef4:	sub    esp,DWORD PTR [esi+0x36b6e29f]
  40fefa:	ret    0x13fb
  40fefd:	push   ebp
  40fefe:	(bad)  
  40feff:	popf   
  40ff00:	jp     0x40fec2
  40ff02:	retf   
  40ff03:	pop    edi
  40ff04:	xor    al,0xff
  40ff06:	jne    0x40fed5
  40ff08:	and    al,BYTE PTR [ebx]
  40ff0a:	inc    ebp
  40ff0b:	or     al,0x32
  40ff0d:	and    eax,0x153daf60
  40ff12:	int3   
  40ff13:	int3   
  40ff14:	out    0xa4,eax
  40ff16:	pop    es
  40ff17:	xor    ebp,DWORD PTR [ebp+0x5b]
  40ff1a:	les    esi,FWORD PTR [ebp-0x40]
  40ff1d:	pop    ecx
  40ff1e:	add    al,0xce
  40ff20:	mov    esp,0xa6cdd376
  40ff25:	adc    DWORD PTR [ebx-0x31],0x60
  40ff29:	test   eax,0x3c6df9ab
  40ff2e:	pusha  
  40ff2f:	pop    ecx
  40ff30:	test   eax,0xea4f70b6
  40ff35:	and    DWORD PTR [edx-0x7a84b506],ebx
  40ff3b:	jmp    0x40ff06
  40ff3d:	stc    
  40ff3e:	fs cwde 
  40ff40:	shl    DWORD PTR [edx+ebp*4-0x1f91e5b4],1
  40ff47:	mov    ecx,0x21a5e939
  40ff4c:	xchg   DWORD PTR [ebx],esi
  40ff4e:	mov    esp,0x6c258566
  40ff53:	and    ch,0x1e
  40ff56:	mov    edi,0x75d562c4
  40ff5b:	mov    ecx,es
  40ff5d:	sbb    eax,0x2860477a
  40ff62:	jb     0x40ff52
  40ff64:	or     eax,0xc6ec5b0b
  40ff69:	(bad)
  40ff6d:	fisub  WORD PTR [eax-0xe]
  40ff70:	shr    DWORD PTR [ecx],cl
  40ff72:	add    bh,BYTE PTR [ecx]
  40ff74:	jg     0x40ff15
  40ff76:	xlat   BYTE PTR ds:[ebx]
  40ff77:	xchg   edi,esi
  40ff79:	adc    al,dh
  40ff7b:	stos   BYTE PTR es:[edi],al
  40ff7c:	xchg   ebx,eax
  40ff7d:	out    0xb0,al
  40ff7f:	std    
  40ff80:	stos   DWORD PTR es:[edi],eax
  40ff81:	xor    bh,al
  40ff83:	mov    ah,0xfa
  40ff85:	sbb    bh,cl
  40ff87:	les    ebx,FWORD PTR [ebx-0x5d]
  40ff8a:	scas   al,BYTE PTR es:[edi]
  40ff8b:	add    BYTE PTR [esi+eax*4+0x75],0x80
  40ff90:	fistp  DWORD PTR [edi-0x57a5f360]
  40ff96:	xor    cl,BYTE PTR [esi-0x51]
  40ff99:	std    
  40ff9a:	popf   
  40ff9b:	mov    ebp,0x792dee55
  40ffa0:	cmp    al,0xc3
  40ffa2:	mov    bh,dl
  40ffa4:	repz aad 0x39
  40ffa7:	ds out dx,al
  40ffa9:	jge    0x40ff80
  40ffab:	arpl   WORD PTR [esi+0x19],ax
  40ffae:	xor    DWORD PTR [ecx-0x73a01691],eax
  40ffb4:	jle    0x40ff66
  40ffb6:	mov    ds:0x46e89fdb,eax
  40ffbb:	out    0x3d,eax
  40ffbd:	sub    al,0xde
  40ffbf:	fld    DWORD PTR [ecx+0x55589a02]
  40ffc5:	rcl    DWORD PTR [edi+eiz*1-0x3f],1
  40ffc9:	inc    edi
  40ffca:	mov    cl,0x1c
  40ffcc:	sbb    bl,BYTE PTR [edx]
  40ffce:	bnd ja 0x40ffbf
  40ffd1:	retf   
  40ffd2:	fldcw  WORD PTR [edi]
  40ffd4:	mov    dl,0xce
  40ffd6:	sub    DWORD PTR [ebp+0x29f08a73],ebx
  40ffdc:	xor    edi,DWORD PTR [edx-0x49]
  40ffdf:	sbb    DWORD PTR [esi+0x5],0xffffffcb
  40ffe3:	enter  0xfece,0x10
  40ffe7:	xchg   esp,eax
  40ffe8:	inc    ebx
  40ffe9:	sbb    al,0xe4
  40ffeb:	in     eax,dx
  40ffec:	sub    ebx,esp
  40ffee:	fidivr DWORD PTR [esi]
  40fff0:	xchg   edi,eax
  40fff1:	pop    eax
  40fff2:	inc    esi
  40fff3:	lahf   
  40fff4:	sub    eax,0x47
  40fff7:	cmp    BYTE PTR [eax-0x21],dl
  40fffa:	push   ss
  40fffb:	outs   dx,BYTE PTR ds:[esi]
  40fffc:	adc    DWORD PTR [edi-0xc6d2551],edx
  410002:	inc    esi
  410003:	rcr    BYTE PTR [eax],1
  410005:	call   0x395d:0xdd26dd2
  41000c:	xlat   BYTE PTR ds:[ebx]
  41000d:	gs ins DWORD PTR es:[edi],dx
  41000f:	lock push edx
  410011:	repz aas 
  410013:	mov    esp,0xda4bb348
  410018:	dec    ecx
  410019:	es jle 0x40ffe3
  41001c:	fild   QWORD PTR [eax+eiz*8+0x6d]
  410020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410021:	mov    bl,0xd2
  410023:	mov    ch,0x55
  410025:	cmp    eax,0xd9207da4
  41002a:	int    0xf
  41002c:	lods   al,BYTE PTR ds:[esi]
  41002d:	(bad)  
  41002e:	aam    0x22
  410030:	lahf   
  410031:	lods   al,BYTE PTR es:[esi]
  410033:	or     DWORD PTR [edi-0x73318c7a],ebx
  410039:	sbb    cl,ch
  41003b:	out    dx,eax
  41003c:	addr16 jbe 0x41003c
  41003f:	adc    DWORD PTR [ebx-0x43],0xffffff8e
  410043:	aas    
  410044:	mov    edx,0x3c3dfe39
  410049:	repnz and cl,BYTE PTR [edx]
  41004c:	test   al,0x6c
  41004f:	mov    ebx,0x1ad3df8e
  410054:	pop    ebp
  410055:	cmp    ecx,DWORD PTR [edi+0x37bd7526]
  41005b:	and    dh,BYTE PTR [esi-0x4e639f0d]
  410061:	adc    al,0x8d
  410063:	adc    esp,DWORD PTR [ebx+0x46]
  410066:	mov    ah,0xc7
  410068:	mov    ?,WORD PTR [esp+ebx*8]
  41006b:	pop    ebp
  41006c:	cmp    esp,DWORD PTR ds:0x4366e251
  410072:	pop    eax
  410073:	out    0x9f,eax
  410075:	inc    eax
  410076:	cmp    al,BYTE PTR [edx-0x21]
  410079:	jne    0x4100b3
  41007b:	inc    edi
  41007c:	jne    0x410046
  41007e:	mov    bl,0xf3
  410080:	jnp    0x410009
  410082:	mov    ebp,0x846eae06
  410087:	push   edx
  410088:	pop    ebx
  410089:	xlat   BYTE PTR ds:[ebx]
  41008a:	jl     0x4100f2
  41008c:	jle    0x410094
  41008e:	inc    BYTE PTR [ecx+0x67576e2d]
  410094:	sub    eax,0x4936c1a6
  410099:	jne    0x4100f8
  41009b:	jl     0x41006d
  41009d:	outs   dx,DWORD PTR ds:[esi]
  41009e:	in     eax,0x9a
  4100a0:	lds    ebp,FWORD PTR [ecx+0x51]
  4100a3:	jb     0x410035
  4100a5:	mov    ecx,esi
  4100a7:	cmp    eax,0xfa2fad7e
  4100ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ad:	inc    eax
  4100ae:	push   cs
  4100af:	pop    ebx
  4100b0:	dec    edx
  4100b1:	je     0x410094
  4100b3:	shl    BYTE PTR [edx],0x38
  4100b6:	and    DWORD PTR [ebx+0x28],eax
  4100b9:	jnp    0x4100a5
  4100bb:	shl    DWORD PTR [ebp-0x79b8c069],1
  4100c1:	jecxz  0x410092
  4100c3:	adc    al,0x26
  4100c5:	fldl2t 
  4100c7:	js     0x4100bc
  4100c9:	(bad)  
  4100ca:	daa    
  4100cb:	xchg   ecx,eax
  4100cc:	in     al,dx
  4100cd:	sub    al,0xe9
  4100cf:	fst    st(7)
  4100d1:	dec    eax
  4100d2:	add    eax,DWORD PTR [eax-0xb]
  4100d5:	pop    ds
  4100d6:	adc    BYTE PTR [esp+ebp*1+0x7d],dl
  4100da:	loop   0x410086
  4100dc:	cmp    eax,0xab5b90eb
  4100e1:	jns    0x4100fc
  4100e3:	loope  0x4100d0
  4100e5:	mov    ds:0x79096e02,al
  4100ea:	jnp    0x4100dd
  4100ec:	push   ebp
  4100ed:	jmp    0xd02a327b
  4100f2:	jns    0x4100e4
  4100f4:	fsubp  st(4),st
  4100f6:	push   ebp
  4100f7:	out    dx,eax
  4100f8:	iret   
  4100f9:	xor    DWORD PTR ds:0x98c4c743,0xde51a088
  410103:	push   esp
  410104:	repnz add bl,BYTE PTR [edx+0x412fe2cf]
  41010b:	sub    edi,DWORD PTR [edi]
  41010d:	mov    edx,0x832a9b6f
  410112:	add    ecx,esi
  410114:	adc    eax,0x4199355c
  410119:	addr16 cdq 
  41011b:	xchg   esi,eax
  41011c:	mov    ebp,0xfbebfebb
  410121:	ins    DWORD PTR es:[edi],dx
  410122:	push   0xffffffb1
  410124:	add    eax,0xd9a3753
  410129:	fmul   DWORD PTR [ebx+0x6f]
  41012c:	out    dx,eax
  41012d:	xor    bl,bl
  41012f:	sub    DWORD PTR [esp+ebp*2+0x7e],eax
  410133:	mov    es,WORD PTR [esi+0x35792198]
  410139:	xchg   ebx,eax
  41013a:	mov    al,0x17
  41013c:	stos   BYTE PTR es:[edi],al
  41013d:	sub    edx,esi
  41013f:	sbb    DWORD PTR [edx-0x4844ee06],esi
  410145:	adc    DWORD PTR [ebp+esi*2-0x6c287626],ebp
  41014c:	sbb    edi,0xcc586bea
  410152:	xchg   ecx,eax
  410153:	jnp    0x4101ab
  410155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410156:	out    0x9,eax
  410158:	aas    
  410159:	daa    
  41015a:	icebp  
  41015b:	mov    ds:0x6c12ac93,al
  410160:	cmp    esp,ecx
  410162:	scas   eax,DWORD PTR es:[edi]
  410163:	push   ebx
  410164:	sti    
  410165:	jg     0x410168
  410167:	and    cl,BYTE PTR [ecx-0x9bb755b]
  41016d:	jno    0x410106
  41016f:	in     al,dx
  410170:	mov    ds:0x4abdf76d,al
  410175:	test   al,0x44
  410177:	jge    0x410186
  410179:	fldenv [eax]
  41017b:	push   ss
  41017c:	retf   0xb75f
  41017f:	add    DWORD PTR [ecx],edx
  410181:	sbb    eax,0xe5003774
  410186:	adc    BYTE PTR [ecx+0x6151672e],0xf7
  41018d:	mov    esp,esp
  41018f:	xor    eax,0x659a0f61
  410194:	mov    ecx,0xe38eff76
  410199:	dec    esi
  41019a:	call   0x9eee:0x4fba069d
  4101a1:	(bad)  
  4101a2:	inc    ebp
  4101a3:	and    ch,BYTE PTR [esi+0x57]
  4101a6:	loope  0x4101c6
  4101a8:	adc    BYTE PTR [ebp+0x61af5531],ch
  4101ae:	jmp    ebp
  4101b0:	in     al,0xf6
  4101b2:	sub    ebp,DWORD PTR [ebp+0x27]
  4101b5:	in     al,dx
  4101b6:	call   esi
  4101b8:	sub    ebx,DWORD PTR [eax+0xe]
  4101bb:	mov    dh,BYTE PTR [edi]
  4101bd:	pop    ss
  4101be:	outs   dx,BYTE PTR ds:[esi]
  4101bf:	inc    ebx
  4101c0:	add    ecx,DWORD PTR [ebp+0x92d8d70]
  4101c6:	aas    
  4101c7:	div    BYTE PTR [esi+0x4]
  4101ca:	jb     0x4101f5
  4101cc:	xor    ch,BYTE PTR [eax]
  4101ce:	mov    eax,ds:0x5e307eb7
  4101d3:	sub    DWORD PTR [ebx+edx*4-0x45],0x1851485b
  4101db:	xor    dh,BYTE PTR ds:0x406c2343
  4101e1:	or     BYTE PTR [edx],bl
  4101e3:	fsub   QWORD PTR [edx+0x3b]
  4101e6:	push   0xffffffdd
  4101e8:	and    BYTE PTR [edi+0x3a],cl
  4101eb:	jp     0x41018d
  4101ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ee:	or     eax,0xc9c2135
  4101f3:	xor    al,0x94
  4101f5:	std    
  4101f6:	mov    edx,0x57948d1f
  4101fb:	or     ebx,esi
  4101fd:	sub    al,0x4c
  4101ff:	jb     0x410278
  410201:	pop    edx
  410202:	cmp    BYTE PTR [ecx],dl
  410204:	adc    bl,ch
  410206:	xor    BYTE PTR [edx+0x5a],bh
  410209:	mov    ebx,DWORD PTR [edi+0xc]
  41020c:	arpl   WORD PTR [ecx],cx
  41020e:	adc    cl,BYTE PTR [edi]
  410210:	jo     0x4101df
  410212:	mov    WORD PTR [eax+0x14],cs
  410215:	jmp    0xf82e:0x927eb6b0
  41021c:	shl    DWORD PTR [ecx+edi*1+0x37],1
  410220:	scas   al,BYTE PTR es:[edi]
  410221:	clc    
  410222:	cld    
  410223:	xor    eax,0xa873b7fb
  410228:	daa    
  410229:	fidivr DWORD PTR [edx+0x13b28f17]
  41022f:	test   eax,0x29b74d47
  410234:	outs   dx,BYTE PTR ds:[esi]
  410235:	arpl   WORD PTR [ecx+ebp*4-0x52],bx
  410239:	sub    DWORD PTR [edx],esi
  41023b:	scas   al,BYTE PTR es:[edi]
  41023c:	pop    ecx
  41023d:	push   ss
  41023e:	jge    0x41023e
  410240:	loopne 0x4101eb
  410242:	pop    eax
  410243:	add    al,BYTE PTR [esp+eiz*2-0x30749af3]
  41024a:	fisubr WORD PTR [edx]
  41024c:	call   0x93d9:0xc945895f
  410253:	cld    
  410254:	je     0x41023e
  410256:	std    
  410257:	inc    esp
  410258:	inc    edi
  410259:	data16 jmp 0x41020f
  41025c:	sar    dl,0x77
  41025f:	mov    ebx,0x3f96d13d
  410264:	push   edx
  410265:	in     eax,0x6f
  410267:	push   0x169b8290
  41026c:	(bad)  
  41026d:	mov    al,0xc9
  41026f:	inc    edx
  410270:	or     DWORD PTR [ebx-0x44],ebp
  410273:	popa   
  410274:	cli    
  410275:	dec    ebx
  410276:	test   al,0x76
  410278:	dec    edi
  410279:	cmp    BYTE PTR [edx+0x28845a31],bh
  41027f:	add    DWORD PTR ds:0x25361186,esp
  410285:	lods   al,BYTE PTR ds:[esi]
  410286:	or     al,0x91
  410288:	and    dl,BYTE PTR [ebp+0x52]
  41028b:	jmp    0x50c8743a
  410290:	into   
  410291:	dec    esp
  410292:	xlat   BYTE PTR ds:[ebx]
  410293:	push   es
  410294:	bound  edx,QWORD PTR [edi]
  410296:	push   ebp
  410297:	jl     0x4102b4
  410299:	xor    al,dl
  41029b:	ins    BYTE PTR es:[edi],dx
  41029c:	dec    ecx
  41029d:	cli    
  41029e:	cmp    ebx,DWORD PTR [edi+0x5e]
  4102a1:	retf   
  4102a2:	ja     0x4102a9
  4102a4:	test   BYTE PTR ds:[edx-0x46],0x5d
  4102a9:	retf   0x2268
  4102ac:	stos   DWORD PTR es:[edi],eax
  4102ad:	test   DWORD PTR [ecx],0x9f029ee2
  4102b3:	pop    ss
  4102b4:	fild   DWORD PTR [esi]
  4102b6:	mov    dl,0x6
  4102b8:	ret    
  4102b9:	fmul   DWORD PTR [ebp+0x61]
  4102bc:	jbe    0x41030c
  4102be:	bound  ecx,QWORD PTR [ecx+0x5b]
  4102c1:	mov    dl,0x64
  4102c3:	pop    esi
  4102c4:	or     BYTE PTR [esi+0x59544a91],bh
  4102ca:	cld    
  4102cb:	out    0xc8,al
  4102cd:	adc    dl,BYTE PTR [ebp-0x3a]
  4102d0:	(bad)  
  4102d1:	push   ebp
  4102d2:	dec    edi
  4102d3:	lds    edi,FWORD PTR [ebx+eax*2-0x5d395938]
  4102da:	lds    ecx,FWORD PTR [ebp+ebp*8-0x49dc0e40]
  4102e1:	mov    edx,0xdc1b959d
  4102e6:	jne    0x4102dd
  4102e8:	cmp    bl,bl
  4102ea:	lahf   
  4102eb:	into   
  4102ec:	push   edx
  4102ed:	retf   0x77c7
  4102f0:	out    0x27,eax
  4102f2:	jb     0x410317
  4102f4:	cdq    
  4102f5:	push   cs
  4102f6:	add    eax,0x6cf79b45
  4102fb:	mov    ah,0x4e
  4102fd:	dec    ebx
  4102fe:	xchg   DWORD PTR [esi],ecx
  410300:	test   eax,0x5dd4cbb8
  410305:	pop    edx
  410306:	in     eax,0xbb
  410308:	dec    ebp
  410309:	and    al,0xae
  41030b:	rcr    BYTE PTR [ebp+0x73],cl
  41030e:	retf   0xefb
  410311:	dec    ebp
  410312:	mov    dl,BYTE PTR [esi+0x74]
  410315:	(bad)  
  410317:	cmp    DWORD PTR [ebx],edi
  410319:	mov    ds:0xffb96f3d,eax
  41031e:	in     eax,dx
  41031f:	test   BYTE PTR [edi-0x56],al
  410322:	push   0xffffffae
  410324:	or     al,0x36
  410326:	and    DWORD PTR [edx-0x69],edi
  410329:	xor    DWORD PTR [ebx+ecx*8+0x2bb0a2eb],ecx
  410330:	sbb    dh,BYTE PTR [esi-0x2ee2c3dd]
  410336:	xor    ch,BYTE PTR [ecx-0xcffe595]
  41033c:	push   0x7401891
  410341:	inc    ebp
  410342:	hlt    
  410343:	jmp    0xc9b6343f
  410348:	push   ss
  410349:	xchg   esi,eax
  41034a:	dec    esi
  41034b:	mov    es,WORD PTR cs:[esi-0x65]
  41034f:	ins    DWORD PTR es:[edi],dx
  410350:	xor    al,0xe1
  410352:	pop    ds
  410353:	mov    bh,BYTE PTR [esi-0x5e]
  410356:	aam    0xcf
  410358:	dec    BYTE PTR [edi+0x52]
  41035b:	add    esp,DWORD PTR [ebx-0x4a6b8ab5]
  410361:	xchg   edi,eax
  410362:	dec    edx
  410363:	aad    0x9b
  410365:	ficom  DWORD PTR [ebx]
  410368:	dec    ebp
  410369:	xor    eax,0x47d637d4
  41036e:	xor    cl,BYTE PTR [bx-0x2e]
  410372:	pop    edi
  410373:	mov    ebp,0xf0a6188d
  410378:	inc    ebx
  410379:	xor    BYTE PTR [ecx+0x6c4fb716],bl
  41037f:	jmp    0x8715b50a
  410384:	mov    dl,BYTE PTR [esi]
  410386:	sub    DWORD PTR [edi+0x29],esi
  410389:	push   eax
  41038a:	cld    
  41038b:	rcr    BYTE PTR [edi-0x62],0x52
  41038f:	cmp    eax,0x24a7ebf4
  410394:	out    dx,eax
  410395:	sub    DWORD PTR [edi+edx*1+0x27],esp
  410399:	aad    0xc6
  41039b:	sbb    edx,esp
  41039d:	mov    DWORD PTR [edx],edi
  41039f:	inc    al
  4103a1:	jmp    0x41039e
  4103a3:	les    esi,FWORD PTR [ecx]
  4103a5:	jl     0x41038b
  4103a7:	sti    
  4103a8:	adc    bl,bh
  4103aa:	adc    eax,0x6282fa95
  4103af:	mov    ebp,DWORD PTR [eax]
  4103b1:	cmp    ch,dl
  4103b3:	imul   ecx,edx,0xfffffff0
  4103b6:	push   dx
  4103b8:	xchg   edi,eax
  4103b9:	push   eax
  4103ba:	mov    ss,eax
  4103bc:	cld    
  4103bd:	daa    
  4103be:	sbb    eax,0xab9c2c46
  4103c3:	test   bl,al
  4103c5:	xchg   ecx,eax
  4103c6:	add    eax,0xc20c9a6a
  4103cb:	iret   
  4103cc:	inc    ecx
  4103cd:	pop    edi
  4103ce:	in     al,0x44
  4103d0:	jo     0x4103f3
  4103d2:	imul   ebp,edx,0x41
  4103d5:	add    BYTE PTR [edi+0xdd0a43c],cl
  4103db:	lods   al,BYTE PTR ds:[esi]
  4103dc:	scas   eax,DWORD PTR es:[edi]
  4103dd:	sub    esp,DWORD PTR [ecx]
  4103df:	shr    DWORD PTR [ecx+0x6],cl
  4103e2:	(bad)  
  4103e3:	test   BYTE PTR [edi],ah
  4103e5:	aad    0x55
  4103e7:	sub    BYTE PTR [ebp+0x33610c4],al
  4103ed:	mov    esi,0xbf1a0de7
  4103f2:	int3   
  4103f3:	das    
  4103f4:	lahf   
  4103f5:	jge    0x41046c
  4103f7:	inc    esp
  4103f8:	push   ebp
  4103f9:	in     eax,0xd6
  4103fb:	mov    al,0x22
  4103fd:	adc    eax,0x4f879043
  410402:	cld    
  410403:	stos   BYTE PTR es:[edi],al
  410404:	xchg   esi,eax
  410405:	jns    0x41040d
  410407:	sub    BYTE PTR [edi-0x49],cl
  41040a:	add    al,0x0
  41040c:	pop    esp
  41040d:	push   ss
  41040e:	scas   al,BYTE PTR es:[edi]
  41040f:	dec    ebp
  410410:	cmp    DWORD PTR [ebp+0x1560bee2],esi
  410416:	cmp    dh,BYTE PTR [ecx-0x3d815c0d]
  41041c:	dec    ecx
  41041d:	pop    esi
  41041e:	neg    BYTE PTR [esi]
  410420:	(bad)  
  410422:	jecxz  0x41042e
  410424:	out    dx,eax
  410425:	mov    bl,0x80
  410427:	imul   esp,ebp,0xa
  41042a:	ret    
  41042b:	into   
  41042c:	fstp   TBYTE PTR [ecx+0x407011d8]
  410432:	mov    eax,0x2ced3b45
  410437:	out    dx,al
  410438:	mov    ah,BYTE PTR [esi]
  41043a:	out    0xd4,al
  41043c:	sbb    al,0xc6
  41043e:	adc    eax,0x19d4934f
  410443:	les    ebp,FWORD PTR [ebp-0x58]
  410446:	fcom   DWORD PTR [esi-0x38]
  410449:	stos   BYTE PTR es:[edi],al
  41044a:	outs   dx,DWORD PTR ds:[esi]
  41044b:	jge    0x410400
  41044d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41044e:	adc    al,0x97
  410450:	mov    dl,0xd6
  410452:	push   cs
  410453:	cld    
  410454:	out    dx,al
  410455:	cmc    
  410456:	mov    WORD PTR [eax],fs
  410458:	dec    edi
  410459:	lods   eax,DWORD PTR ds:[esi]
  41045a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41045b:	mov    ebp,0x3c15c99b
  410460:	cwde   
  410461:	and    bl,BYTE PTR [esi+edi*8]
  410464:	(bad)  
  410465:	pop    ds
  410466:	fiadd  DWORD PTR [ecx-0x7f8fe112]
  41046c:	les    edi,FWORD PTR [eax]
  41046e:	dec    esp
  41046f:	fsubp  st(5),st
  410471:	test   esp,esi
  410473:	jmp    0xd3ef:0x2aff48b8
  41047a:	leave  
  41047b:	out    0x89,al
  41047d:	pop    eax
  41047e:	pop    ds
  41047f:	mov    esp,0x2c65eb99
  410484:	fisub  WORD PTR [edi]
  410486:	adc    edx,esi
  410488:	adc    eax,0x2f52bac6
  41048d:	or     ah,al
  41048f:	xchg   esi,eax
  410490:	inc    ecx
  410491:	ss icebp 
  410493:	bnd jne 0x410424
  410496:	stc    
  410497:	dec    edi
  410498:	and    eax,0x346f86f7
  41049d:	(bad)  
  41049e:	(bad)  
  41049f:	out    0xed,eax
  4104a1:	jecxz  0x410442
  4104a3:	and    ch,BYTE PTR [eax-0x685ba09f]
  4104a9:	dec    ah
  4104ab:	sbb    BYTE PTR [edi-0x47],dh
  4104ae:	out    dx,eax
  4104af:	cmp    DWORD PTR [ebx],0x4f
  4104b2:	xchg   BYTE PTR [edx+0xa638bab],bl
  4104b8:	sbb    al,0xbb
  4104ba:	mov    BYTE PTR [esi],dl
  4104bc:	icebp  
  4104bd:	int    0xd7
  4104bf:	sar    DWORD PTR [edi-0x5],1
  4104c2:	into   
  4104c3:	jb     0x410543
  4104c5:	or     al,0x5b
  4104c7:	cmp    eax,0xddef5d1f
  4104cc:	xor    eax,0x69c4f33
  4104d1:	lahf   
  4104d2:	mov    edi,0x8fe5a18f
  4104d7:	in     al,0x37
  4104d9:	test   al,0xc7
  4104db:	pop    DWORD PTR [eax+ebx*2+0x8]
  4104df:	lahf   
  4104e0:	xor    ebp,esp
  4104e2:	mov    ds:0x32e1a77e,eax
  4104e7:	xchg   ebx,eax
  4104e8:	jp     0x410517
  4104ea:	scas   eax,DWORD PTR es:[edi]
  4104eb:	aaa    
  4104ec:	and    DWORD PTR [esi+ebx*4-0x7afb442c],0xf5c49cf6
  4104f7:	adc    dl,0x6
  4104fa:	jmp    0x87b959ab
  4104ff:	jecxz  0x410493
  410501:	(bad)  
  410502:	add    BYTE PTR [ebx+0x9],ch
  410505:	test   al,0x87
  410507:	or     BYTE PTR [edi-0x58],ch
  41050a:	gs jmp 0x8a223a01
  410510:	das    
  410511:	rcl    DWORD PTR [edi-0x80],1
  410514:	mov    bl,0xd9
  410516:	(bad)  
  410517:	push   ebx
  410518:	dec    ecx
  410519:	cdq    
  41051a:	xor    BYTE PTR ds:0x499a0c74,ah
  410520:	jno    0x410560
  410522:	push   cs
  410523:	sahf   
  410524:	cmp    al,0x93
  410526:	cld    
  410527:	inc    edi
  410528:	enter  0xe11,0x44
  41052c:	stc    
  41052d:	fild   WORD PTR [eax+edi*4]
  410530:	mov    esi,0x38290c09
  410535:	mov    WORD PTR [eax+0x40],?
  410538:	xor    al,BYTE PTR [edx-0x61]
  41053b:	ss xchg ebx,eax
  41053d:	push   cs
  41053e:	and    cl,0xa5
  410541:	(bad)  
  410542:	in     al,dx
  410543:	ss pop es
  410545:	adc    eax,0xb62e21f3
  41054a:	push   ebx
  41054b:	add    edi,DWORD PTR [esi]
  41054d:	pop    eax
  41054e:	fistp  WORD PTR [ebp+0x10b68aa6]
  410554:	dec    edx
  410555:	scas   al,BYTE PTR es:[edi]
  410556:	xor    esi,esp
  410558:	lahf   
  410559:	arpl   WORD PTR [edi+0x581526cd],ax
  41055f:	sbb    al,0x3b
  410561:	inc    ebx
  410562:	inc    edx
  410563:	mov    dl,0xd7
  410565:	inc    ebx
  410566:	jp     0x41056a
  410568:	rol    DWORD PTR [edx+eiz*4],0xab
  41056c:	fisttp QWORD PTR [edx+0x68057620]
  410572:	lds    edi,FWORD PTR [edx-0x1c1fb333]
  410578:	and    DWORD PTR [eax+edx*1-0x12a748b9],ebx
  41057f:	add    DWORD PTR [eax+ebx*2+0x40a1a4d8],ebx
  410586:	jmp    0x76fc573c
  41058b:	out    dx,eax
  41058c:	mov    dh,0xf2
  41058e:	int    0x81
  410590:	dec    esp
  410591:	cmp    ecx,edx
  410593:	inc    eax
  410594:	push   esi
  410595:	sbb    al,0xe1
  410597:	inc    eax
  410598:	xchg   esp,eax
  410599:	test   DWORD PTR [edx+0x43],ebx
  41059c:	pop    eax
  41059d:	jns    0x4105fc
  41059f:	adc    DWORD PTR [ebp-0xd],ebx
  4105a2:	push   esi
  4105a3:	push   esp
  4105a4:	in     eax,dx
  4105a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105a6:	sbb    eax,0x74f7aa10
  4105ab:	xchg   edi,eax
  4105ac:	pop    esp
  4105ad:	or     DWORD PTR [ebx+0x313cded6],edx
  4105b3:	xchg   ecx,eax
  4105b4:	add    al,0xf6
  4105b6:	in     eax,0xb
  4105b8:	and    eax,0xf891c820
  4105bd:	call   0x345d:0x9d72ed6f
  4105c4:	cmp    BYTE PTR [ecx],ah
  4105c6:	ds xchg edx,eax
  4105c8:	sbb    al,BYTE PTR [edi-0x37]
  4105cb:	popf   
  4105cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105cd:	ja     0x41063d
  4105cf:	lds    ebx,FWORD PTR [edx+esi*1+0x1b7be4e8]
  4105d6:	call   0x4dacc694
  4105db:	adc    DWORD PTR [edi-0x4d1f2820],edi
  4105e1:	cmp    ah,BYTE PTR [ebx+0x3e]
  4105e4:	nop
  4105e5:	std    
  4105e6:	push   ebp
  4105e7:	xor    eax,esp
  4105e9:	xor    edi,DWORD PTR [ebp+0x15]
  4105ec:	cmp    edx,esi
  4105ee:	xchg   esi,eax
  4105ef:	je     0x4105ea
  4105f1:	adc    DWORD PTR [edx+0x1ae61c41],edi
  4105f7:	nop
  4105f8:	or     eax,0x391cef71
  4105fd:	test   BYTE PTR [ebx-0x17910fb4],bh
  410603:	adc    DWORD PTR ds:0xdd643cac,edx
  410609:	xor    bh,cl
  41060b:	mov    bl,BYTE PTR [eax]
  41060d:	or     bl,BYTE PTR [esi-0x401ab3cc]
  410613:	mov    eax,ds:0x75d9ab69
  410618:	retf   
  410619:	jmp    0x5eeec3ab
  41061e:	xchg   esp,eax
  41061f:	mov    DWORD PTR [edx+0x35b5bc61],ebp
  410625:	data16 add ch,ch
  410628:	cli    
  410629:	xor    DWORD PTR [ebx-0x2db8e9b],0x95cfadfe
  410633:	xchg   ebp,eax
  410634:	pop    ss
  410635:	add    DWORD PTR ds:0xd064a8f0,ebx
  41063b:	mov    dh,0xbc
  41063d:	push   esp
  41063e:	sbb    ebp,DWORD PTR [edx]
  410640:	sahf   
  410641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410642:	cdq    
  410643:	rol    edx,cl
  410645:	sub    eax,0x1e4b593f
  41064a:	fs add eax,0xa3e00678
  410650:	sbb    eax,0x370b619c
  410655:	mov    cl,0x12
  410657:	shr    DWORD PTR [edx],0xcb
  41065a:	scas   eax,DWORD PTR es:[edi]
  41065b:	(bad)  
  41065c:	cld    
  41065d:	addr16 jmp 0xc69b:0x2d954d41
  410665:	xchg   ecx,eax
  410666:	dec    eax
  410667:	mov    bl,0x7f
  410669:	mov    eax,0xe8b1a3ea
  41066e:	data16 mov bh,0x22
  410671:	mov    ah,0x55
  410673:	add    eax,0xe53a0f6a
  410678:	ficom  WORD PTR [edx-0x5]
  41067b:	mov    esp,0x2b3fc579
  410680:	popf   
  410681:	push   edx
  410682:	popa   
  410683:	test   DWORD PTR [eax+0x153e66d1],esi
  410689:	cmp    BYTE PTR [edx],dl
  41068b:	and    BYTE PTR [ebx-0x5c],dh
  41068e:	inc    esp
  41068f:	fiadd  DWORD PTR [eax-0x496f1e10]
  410695:	fidivr DWORD PTR [edx-0x362146d6]
  41069b:	js     0x410715
  41069d:	aad    0xb4
  41069f:	les    eax,FWORD PTR [edx+0x6a]
  4106a2:	shl    DWORD PTR [edx-0x206392d6],cl
  4106a8:	push   esp
  4106a9:	test   BYTE PTR [esi+0x12427365],bl
  4106af:	jp     0x41063a
  4106b1:	in     eax,0x92
  4106b3:	mov    ds:0xa978bd15,eax
  4106b8:	pop    esp
  4106b9:	cmp    dh,BYTE PTR [eax+0xf]
  4106bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106bd:	adc    ebx,DWORD PTR [esi]
  4106bf:	and    eax,0x3752c043
  4106c4:	add    bl,BYTE PTR [ebx]
  4106c6:	aas    
  4106c7:	and    BYTE PTR [ebx-0x61],0xc
  4106cb:	sub    al,0xaa
  4106cd:	stos   DWORD PTR es:[edi],eax
  4106ce:	rcr    DWORD PTR [ebp+0x26],0xa
  4106d2:	xor    DWORD PTR [esi+0x36],eax
  4106d5:	xchg   ebx,eax
  4106d6:	dec    ecx
  4106d7:	into   
  4106d8:	fild   WORD PTR [edx+0x75032d1e]
  4106de:	or     ebp,DWORD PTR [ecx+0x7f]
  4106e1:	pop    edx
  4106e2:	aam    0x4e
  4106e4:	stos   BYTE PTR es:[edi],al
  4106e5:	mov    ds:0xed9d972d,eax
  4106ea:	dec    esi
  4106eb:	jl     0x4106f9
  4106ed:	ret    0x5f78
  4106f0:	rcr    DWORD PTR [edi+0x11b811e2],1
  4106f6:	xor    ch,BYTE PTR [edx]
  4106f8:	mov    eax,0x4c08730a
  4106fd:	jbe    0x4106e6
  4106ff:	std    
  410700:	sub    edi,ebx
  410702:	xchg   ebp,eax
  410703:	iret   
  410704:	xor    al,0xdd
  410706:	int3   
  410707:	sub    ebx,DWORD PTR [esi-0x5940859]
  41070d:	je     0x41070c
  41070f:	ret    
  410710:	or     eax,0xab4d9b26
  410715:	popa   
  410716:	or     al,0x7b
  410718:	cmp    DWORD PTR [ebx+0x1c],ecx
  41071b:	dec    ebp
  41071c:	nop
  41071d:	jno    0x4106ae
  41071f:	in     al,dx
  410720:	dec    esp
  410721:	loop   0x4106f2
  410723:	seto   BYTE PTR [esi]
  410726:	ins    BYTE PTR es:[edi],dx
  410727:	and    eax,0xe32d7574
  41072c:	sub    esp,DWORD PTR [esi]
  41072e:	dec    edi
  41072f:	or     esp,DWORD PTR [esi]
  410731:	sub    bh,bh
  410733:	ins    BYTE PTR es:[edi],dx
  410734:	lods   eax,DWORD PTR ds:[esi]
  410735:	rcl    BYTE PTR [esi-0x3534385b],cl
  41073b:	mov    esi,edx
  41073d:	sbb    eax,0x647acace
  410742:	test   DWORD PTR ds:0xf283bca1,edx
  410748:	hlt    
  410749:	dec    eax
  41074a:	jo     0x41071a
  41074c:	mov    al,0x57
  41074e:	pusha  
  41074f:	pop    ss
  410750:	nop
  410751:	fs push es
  410753:	sar    BYTE PTR [edi],cl
  410755:	cmp    ch,dh
  410757:	dec    esp
  410758:	mov    esp,0x754637a
  41075d:	repnz lock pop ss
  410760:	shr    DWORD PTR [eax],cl
  410762:	mov    esp,0xbcdbe783
  410767:	mov    WORD PTR [ecx-0x3511d8d8],fs
  41076d:	pushf  
  41076e:	lock xor eax,0x69c5740
  410774:	fdivr  DWORD PTR [ecx]
  410776:	in     eax,dx
  410777:	cmc    
  410778:	mov    WORD PTR [esi-0x21],?
  41077b:	xchg   ecx,eax
  41077c:	or     BYTE PTR [ecx],0x7d
  41077f:	ret    0x4868
  410782:	cwde   
  410783:	add    cl,bl
  410785:	mov    esi,0x7f4e50
  41078a:	mov    al,0x9b
  41078c:	cmp    eax,ebp
  41078e:	daa    
  41078f:	dec    ebp
  410790:	mov    bl,0x65
  410792:	aam    0x92
  410794:	imul   ebx,DWORD PTR [edx-0x65]
  410798:	or     al,0x23
  41079a:	int    0x80
  41079c:	lods   al,BYTE PTR ds:[esi]
  41079d:	xchg   ebp,eax
  41079e:	pop    ecx
  41079f:	scas   al,BYTE PTR es:[edi]
  4107a0:	bound  ebp,QWORD PTR ds:0x50a7b4ac
  4107a6:	push   ecx
  4107a7:	pop    ds
  4107a8:	push   0xf1fe7916
  4107ad:	mov    al,0xa4
  4107af:	add    eax,0x5e22872
  4107b4:	mov    al,0xf3
  4107b6:	adc    bh,BYTE PTR [esp+edx*1+0x1dfc885c]
  4107bd:	push   0xeaa617f1
  4107c2:	jmp    0x8574a7ef
  4107c7:	jne    0x4107fc
  4107c9:	push   ecx
  4107ca:	daa    
  4107cb:	and    DWORD PTR [edx],ecx
  4107cd:	adc    edx,edx
  4107cf:	add    cl,dh
  4107d1:	dec    edx
  4107d2:	(bad)  
  4107d4:	or     DWORD PTR [ebp-0x80],ecx
  4107d7:	aam    0xb7
  4107d9:	imul   edx,DWORD PTR [edx+0x62],0xfac6a06a
  4107e0:	lahf   
  4107e1:	or     eax,0xfccb6276
  4107e6:	or     al,0xf3
  4107e8:	xchg   esp,eax
  4107e9:	lahf   
  4107ea:	fistp  QWORD PTR [esi]
  4107ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ed:	mov    ds:0x485479f9,al
  4107f2:	call   0x8e12:0xe6dd6163
  4107f9:	lds    eax,FWORD PTR [edi]
  4107fb:	ret    
  4107fc:	dec    ebx
  4107fd:	loop   0x41083b
  4107ff:	push   esi
  410800:	bound  ecx,QWORD PTR [eax]
  410802:	jmp    FWORD PTR [ebx+ebp*1-0x63]
  410806:	and    BYTE PTR [esp+edi*4+0x3e],dl
  41080a:	mov    bh,0xcc
  41080c:	mov    eax,ds:0xeee23614
  410811:	in     eax,0xea
  410813:	sbb    BYTE PTR [ebp-0x63e2855],bh
  410819:	jae    0x410875
  41081b:	xor    DWORD PTR [edi],esp
  41081d:	out    dx,al
  41081e:	jle    0x41082b
  410820:	imul   eax,DWORD PTR [edx],0x23
  410823:	repz mov esi,DWORD PTR ds:0xe9d5f65a
  41082a:	rcl    DWORD PTR [esi-0x301963c0],1
  410830:	sbb    DWORD PTR [esi+0x3be17f56],edi
  410836:	fist   WORD PTR [ebx+0x29]
  410839:	not    DWORD PTR [ecx-0x619a13e4]
  41083f:	pop    es
  410840:	cmp    al,0x38
  410842:	in     eax,dx
  410843:	mov    eax,ds:0x6e4254f8
  410848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410849:	adc    DWORD PTR [ebx],0x73
  41084c:	dec    eax
  41084d:	retf   
  41084e:	pop    edx
  41084f:	mov    eax,0xb0111b5
  410854:	(bad)  
  410855:	test   esp,0xe6027601
  41085b:	add    eax,0xe58c349f
  410860:	xchg   dh,dh
  410862:	or     al,al
  410864:	scas   al,BYTE PTR es:[edi]
  410865:	retf   
  410866:	or     eax,0x103ad94
  41086b:	test   BYTE PTR [esi-0x27081ef0],bl
  410871:	sbb    ecx,DWORD PTR [eax-0x71237d59]
  410877:	or     esp,DWORD PTR [bx+di-0x61]
  41087b:	(bad)  
  41087c:	dec    ebx
  41087d:	jmp    0xe10a:0xd9d04002
  410884:	cmp    al,0x96
  410886:	pop    eax
  410887:	sub    bl,BYTE PTR ds:0x1716017f
  41088d:	mov    al,0xa2
  41088f:	fsub   QWORD PTR [esi+0x2d8c3178]
  410895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410896:	xchg   edx,eax
  410897:	inc    ebx
  410898:	cmp    ebx,DWORD PTR [eax+0x19]
  41089b:	into   
  41089c:	pop    esi
  41089d:	sahf   
  41089e:	lea    edi,[eax+0x6f]
  4108a1:	sbb    DWORD PTR [ebx+0x13],esi
  4108a4:	cmp    DWORD PTR [ecx+0x1c8fdeff],edi
  4108aa:	cdq    
  4108ab:	inc    ecx
  4108ac:	sbb    al,0xff
  4108ae:	push   ebx
  4108af:	es inc ebp
  4108b1:	jns    0x41092f
  4108b3:	push   ebx
  4108b4:	push   ecx
  4108b5:	or     al,0xfe
  4108b7:	pop    ebx
  4108b8:	xor    BYTE PTR [edx+0x277486ed],bl
  4108be:	jae    0x410896
  4108c0:	xor    cl,BYTE PTR [ebx+0x3d]
  4108c3:	cmp    DWORD PTR [ebx],edx
  4108c5:	jo     0x4108ae
  4108c7:	cld    
  4108c8:	ret    0x6f34
  4108cb:	scas   al,BYTE PTR es:[edi]
  4108cc:	enter  0x7d48,0xaf
  4108d0:	mov    BYTE PTR [esi],bh
  4108d2:	push   edi
  4108d3:	pop    ds
  4108d4:	imul   ebx,DWORD PTR [ebx],0xffffffd7
  4108d7:	(bad)  
  4108d8:	cmp    ch,BYTE PTR [ecx]
  4108da:	mov    edi,ds
  4108dc:	and    ah,BYTE PTR [ecx]
  4108de:	ss pop edi
  4108e0:	stos   BYTE PTR es:[edi],al
  4108e1:	outs   dx,BYTE PTR ds:[esi]
  4108e2:	jbe    0x410864
  4108e4:	jae    0x410930
  4108e6:	rol    cl,1
  4108e8:	add    bh,BYTE PTR [eax+edx*1]
  4108eb:	push   edx
  4108ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108ed:	rol    DWORD PTR [ebp-0x5d09fdbc],1
  4108f3:	and    al,0xfb
  4108f5:	cmp    edi,eax
  4108f7:	cmp    ch,bh
  4108f9:	out    dx,al
  4108fa:	test   eax,0x971cbb18
  4108ff:	mov    ds:0x902ea15d,al
  410904:	retf   0x4337
  410907:	xor    al,0x71
  410909:	add    bl,cl
  41090b:	outs   dx,BYTE PTR ds:[esi]
  41090c:	sbb    eax,0x48d3c87c
  410911:	push   ds
  410912:	aas    
  410913:	sbb    bl,0xbd
  410916:	add    edi,esi
  410918:	dec    edx
  410919:	ret    0x3fd2
  41091c:	imul   BYTE PTR [ebp-0x7c4f9208]
  410922:	adc    al,0xc7
  410924:	cdq    
  410925:	mov    dl,0xbf
  410927:	dec    esp
  410928:	in     al,0x6c
  41092a:	(bad)  
  41092b:	dec    ebx
  41092c:	xchg   ecx,eax
  41092d:	cmp    dh,BYTE PTR [esi-0x178c59e2]
  410933:	scas   eax,DWORD PTR es:[edi]
  410934:	data16 sar BYTE PTR [ebx+0x7d3ce0bb],cl
  41093b:	clc    
  41093c:	lahf   
  41093d:	fcomip st,st(6)
  41093f:	mov    bh,cl
  410941:	jbe    0x410931
  410943:	mov    cl,0x2e
  410945:	jle    0x410996
  410947:	inc    ebp
  410948:	(bad)  
  410949:	sbb    al,0x7b
  41094b:	ftst   
  41094d:	pop    ds
  41094e:	pop    esi
  41094f:	mov    esp,0xd12640fd
  410954:	icebp  
  410955:	xor    bh,ch
  410957:	fnsave [ebx-0x1d]
  41095a:	pushf  
  41095b:	sbb    BYTE PTR [ebp+ebp*2+0x70],al
  41095f:	xor    eax,0x1090e3ad
  410964:	rol    DWORD PTR [edi-0x1a85ab7f],cl
  41096a:	stos   BYTE PTR es:[edi],al
  41096b:	aas    
  41096c:	dec    ebx
  41096d:	cmp    BYTE PTR [esi+0x24],bh
  410970:	mov    ds:0xe90b9893,eax
  410975:	div    DWORD PTR [edi-0x79]
  410978:	clc    
  410979:	mov    dh,0xab
  41097b:	pop    ecx
  41097c:	cmp    al,0x17
  41097e:	add    edx,DWORD PTR [ebp-0x61]
  410981:	add    bh,BYTE PTR [esi+0x7a]
  410984:	pushf  
  410985:	mov    eax,0xcec3b57e
  41098a:	sub    eax,0x91159484
  41098f:	ins    BYTE PTR es:[edi],dx
  410990:	cmp    BYTE PTR [ebp+ecx*4-0x41245692],dh
  410997:	dec    edi
  410998:	pop    eax
  410999:	pop    edx
  41099a:	pop    ss
  41099b:	adc    eax,0xac57022
  4109a0:	sbb    al,0xbf
  4109a2:	test   al,0xb
  4109a4:	mov    edi,0x54861e40
  4109a9:	fs dec edi
  4109ab:	adc    DWORD PTR [ebp+0x2592f15f],eax
  4109b1:	aas    
  4109b2:	xchg   esi,eax
  4109b3:	jo     0x410985
  4109b5:	ja     0x4109b8
  4109b7:	dec    ebx
  4109b8:	dec    eax
  4109b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ba:	dec    edx
  4109bb:	fidivr DWORD PTR [ebp+0x91cf309]
  4109c1:	mov    ds:0xe5a4d2be,al
  4109c6:	call   0x211b3a1e
  4109cb:	hlt    
  4109cc:	fmul   st,st(1)
  4109ce:	(bad)  
  4109cf:	xor    ch,BYTE PTR [esp+edx*1+0x1326b171]
  4109d6:	inc    ebx
  4109d7:	push   edi
  4109d8:	test   DWORD PTR [edx],ecx
  4109da:	scas   eax,DWORD PTR es:[edi]
  4109db:	cmp    edx,DWORD PTR [eax+edi*8-0x5f]
  4109df:	pop    ebp
  4109e0:	dec    esi
  4109e1:	sub    BYTE PTR [bp-0x15],ch
  4109e5:	xchg   esi,eax
  4109e6:	push   eax
  4109e7:	mov    al,ds:0x7e4eb7c8
  4109ec:	mov    dh,0x87
  4109ee:	inc    BYTE PTR [eax-0x41]
  4109f1:	mov    al,ds:0x91b742d
  4109f6:	cmc    
  4109f7:	pop    eax
  4109f8:	fwait
  4109f9:	sbb    BYTE PTR [edi-0x2e4fedda],ch
  4109ff:	ror    BYTE PTR [esi+edi*8],0x69
  410a03:	sbb    eax,0x1a
  410a06:	bound  edx,QWORD PTR [eax-0x23ccaecb]
  410a0c:	and    BYTE PTR [ecx-0x13],dh
  410a0f:	loop   0x410a38
  410a11:	imul   ebp,DWORD PTR [edx],0x6d795f0d
  410a17:	cmp    DWORD PTR [ebp-0x4f],0xa2507a7b
  410a1e:	addr16 sbb eax,0xb89d9f18
  410a24:	addr16 jmp 0x9c4a:0x70f33c5f
  410a2c:	inc    edi
  410a2d:	loop   0x410a02
  410a2f:	lahf   
  410a30:	xor    eax,0x1b4282a4
  410a35:	mov    ?,WORD PTR [ebp-0x60]
  410a38:	inc    edx
  410a39:	shr    DWORD PTR [esi+0x64],0xf4
  410a3d:	and    edi,DWORD PTR [esi]
  410a3f:	push   es
  410a40:	mov    al,ds:0xe331724
  410a45:	leave  
  410a46:	push   ebp
  410a47:	lock jle 0x410ac4
  410a4a:	call   0x29339781
  410a4f:	retf   0xbad1
  410a52:	aaa    
  410a53:	cmp    al,0xc2
  410a55:	movzx  ebx,WORD PTR [ebp-0x2b]
  410a59:	xchg   ebx,eax
  410a5a:	in     eax,0x50
  410a5c:	out    0xc8,al
  410a5e:	cs (bad) 
  410a60:	jne    0x410aca
  410a62:	mov    edx,0xc5aec2f9
  410a67:	push   es
  410a68:	lods   al,BYTE PTR ds:[esi]
  410a69:	sti    
  410a6a:	test   al,0x7a
  410a6c:	jge    0x410aa8
  410a6e:	aam    0x1c
  410a70:	fistp  QWORD PTR [eax+0x7f]
  410a73:	rcr    edx,cl
  410a75:	add    BYTE PTR [eax+0x39],cl
  410a78:	outs   dx,DWORD PTR ds:[esi]
  410a79:	in     al,0x24
  410a7b:	mov    edi,0x40ea0c1b
  410a80:	fistp  QWORD PTR [esi+0x2833677b]
  410a86:	mov    dh,0xdc
  410a88:	cmc    
  410a89:	sub    eax,0xdf20ebd6
  410a8f:	out    0xa1,eax
  410a91:	jecxz  0x410a22
  410a93:	add    ch,ch
  410a95:	(bad)  
  410a96:	dec    ecx
  410a97:	std    
  410a98:	int    0x25
  410a9a:	arpl   WORD PTR [edi-0x177f7510],dx
  410aa0:	push   0x19
  410aa2:	cmp    BYTE PTR [edx-0x68],0xbb
  410aa6:	stos   BYTE PTR es:[edi],al
  410aa7:	pusha  
  410aa8:	rcl    DWORD PTR [ebx-0x2e72e7fa],1
  410aae:	pop    edi
  410aaf:	cmp    eax,0xe19d8e29
  410ab4:	icebp  
  410ab5:	inc    ebx
  410ab6:	adc    esp,ebp
  410ab8:	jg     0x410a44
  410aba:	ins    DWORD PTR es:[edi],dx
  410abb:	sbb    DWORD PTR [edx+0x6fcbc23b],edi
  410ac1:	mov    ds:0x46968315,al
  410ac6:	add    esp,DWORD PTR [edx-0x5d]
  410ac9:	inc    edi
  410aca:	out    0xb0,eax
  410acc:	sar    BYTE PTR [eax],1
  410ace:	enter  0x8298,0x8a
  410ad2:	loopne 0x410b0b
  410ad4:	js     0x410a6c
  410ad6:	xchg   esp,eax
  410ad7:	push   ss
  410ad8:	(bad)  
  410ad9:	dec    ecx
  410ada:	std    
  410adb:	mov    edi,0xdbb4d552
  410ae0:	mov    eax,ds:0xe5e5dd2e
  410ae5:	out    0xfd,al
  410ae7:	add    eax,0xb819a575
  410aec:	test   eax,0xbfdbb9d9
  410af1:	jne    0x410b44
  410af3:	lods   eax,DWORD PTR ds:[esi]
  410af4:	ret    0xa921
  410af7:	lds    ebx,FWORD PTR [edi+0x7ac2d2a5]
  410afd:	stc    
  410afe:	add    eax,0xe8808a4e
  410b03:	mov    edx,DWORD PTR ds:0x6f165a77
  410b09:	cli    
  410b0a:	ds push cs
  410b0c:	rol    ah,cl
  410b0e:	into   
  410b0f:	ret    
  410b10:	loop   0x410adb
  410b12:	daa    
  410b13:	sub    al,0x26
  410b15:	sbb    al,0x90
  410b17:	ret    0xedec
  410b1a:	in     eax,0xfc
  410b1c:	call   0xc542ae38
  410b21:	xchg   edx,eax
  410b22:	imul   BYTE PTR [eax-0x38]
  410b25:	cli    
  410b26:	scas   al,BYTE PTR es:[edi]
  410b27:	je     0x410ac3
  410b29:	aaa    
  410b2a:	test   DWORD PTR [ebp-0x61],0xc64c0eda
  410b31:	and    al,BYTE PTR [ebx]
  410b33:	inc    eax
  410b34:	cmp    cl,BYTE PTR [ebp-0x2d]
  410b37:	push   ebp
  410b38:	push   0x3f
  410b3a:	xchg   ebp,eax
  410b3b:	add    eax,0x3b4df434
  410b40:	lods   al,BYTE PTR ds:[esi]
  410b41:	and    DWORD PTR [ebp+0x27da5a12],eax
  410b47:	fistp  QWORD PTR [eax-0x236acf3c]
  410b4d:	xor    al,0xfe
  410b4f:	pop    esp
  410b50:	sub    al,0x93
  410b52:	lea    edx,[eax-0x5f]
  410b55:	cmp    al,0x31
  410b57:	or     ch,BYTE PTR [esi-0x6c989fc6]
  410b5d:	test   DWORD PTR ds:0xa50c18b2,eax
  410b63:	dec    ecx
  410b64:	ss in  eax,0x8a
  410b67:	sub    al,0x2b
  410b69:	rcpps  xmm5,XMMWORD PTR [ebx+0x36]
  410b6d:	repnz push 0x167ea22e
  410b73:	pop    es
  410b74:	sub    DWORD PTR [edi+0x7a87c1e2],edi
  410b7a:	pushf  
  410b7b:	jl     0x410bc9
  410b7d:	lods   al,BYTE PTR ds:[esi]
  410b7e:	fadd   st(3),st
  410b80:	cmp    BYTE PTR [edx+0x2b2dfac5],ah
  410b86:	out    dx,eax
  410b87:	jno    0x410be2
  410b89:	push   eax
  410b8a:	imul   BYTE PTR [esi-0x7738ccd5]
  410b90:	pushf  
  410b91:	stos   DWORD PTR es:[edi],eax
  410b92:	sbb    esi,DWORD PTR [edx]
  410b94:	mov    WORD PTR [ebx+0x4c],cs
  410b97:	imul   ebp,DWORD PTR [esi],0x30
  410b9a:	dec    ebp
  410b9b:	repz scas eax,DWORD PTR es:[edi]
  410b9d:	popa   
  410b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b9f:	adc    al,0x74
  410ba1:	(bad)  [edi+0x4f]
  410ba4:	out    0x4,eax
  410ba6:	fs das 
  410ba8:	test   BYTE PTR [ebx+0x2b],dh
  410bab:	mov    ebp,0x9564864e
  410bb0:	sub    eax,0x3fabd620
  410bb5:	fbstp  TBYTE PTR [edx-0x94bbd2d]
  410bbb:	jbe    0x410bbf
  410bbd:	enter  0xce42,0x7a
  410bc1:	xor    BYTE PTR [edx-0x17],dh
  410bc4:	fdivr  st(1),st
  410bc6:	out    dx,al
  410bc7:	aad    0xa2
  410bc9:	loope  0x410bf9
  410bcb:	add    edx,eax
  410bcd:	ret    
  410bce:	push   esp
  410bcf:	jecxz  0x410bab
  410bd1:	leave  
  410bd2:	shl    edi,0x63
  410bd5:	add    ebp,DWORD PTR [ebp+0x4]
  410bd8:	cdq    
  410bd9:	std    
  410bda:	out    dx,eax
  410bdb:	mov    bl,0xc0
  410bdd:	fsub   QWORD PTR [ebx-0x19]
  410be0:	out    0xf2,al
  410be2:	jno    0x410bc8
  410be4:	ins    BYTE PTR es:[edi],dx
  410be5:	jns    0x410c3d
  410be7:	(bad)  
  410be9:	sti    
  410bea:	aas    
  410beb:	dec    esi
  410bec:	cmp    ebx,edx
  410bee:	retf   
  410bef:	sub    DWORD PTR [eax],edi
  410bf1:	jmp    0x410c4c
  410bf3:	rol    ebx,cl
  410bf5:	dec    eax
  410bf6:	cmp    dh,BYTE PTR [ecx+0x52bc09e8]
  410bfc:	in     eax,dx
  410bfd:	or     esi,DWORD PTR [ebx-0x7c]
  410c00:	or     al,0xf1
  410c02:	popf   
  410c03:	sbb    DWORD PTR [ecx],ebx
  410c05:	push   ss
  410c06:	call   0x9f91280a
  410c0b:	ss or  al,0x67
  410c0e:	xchg   DWORD PTR [esi-0xd1e7d26],edi
  410c14:	xor    dl,BYTE PTR [ecx+0x47]
  410c17:	(bad)  
  410c18:	popa   
  410c19:	adc    BYTE PTR [ecx-0x188a8ebc],dl
  410c1f:	and    BYTE PTR [ebp+0x72],cl
  410c22:	sti    
  410c23:	push   0xd128ed87
  410c28:	call   0x2fd5b67b
  410c2d:	fist   DWORD PTR [ecx+esi*2+0x5efc2b5]
  410c34:	adc    DWORD PTR cs:[ebx+ebx*1+0x70],eax
  410c39:	sbb    al,0x5d
  410c3b:	dec    ecx
  410c3c:	test   DWORD PTR [ecx+0x5],esi
  410c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c40:	adc    ecx,DWORD PTR [ecx+0x3f]
  410c43:	fisttp WORD PTR [ecx-0x2d385de0]
  410c49:	adc    eax,DWORD PTR [ecx]
  410c4b:	and    DWORD PTR ds:0xb417ddd2,0x1c
  410c52:	add    eax,0xe9b6679
  410c57:	rol    WORD PTR [esi+0x1a867f37],cl
  410c5e:	pushf  
  410c5f:	daa    
  410c60:	mov    edi,0xd5476c1b
  410c65:	ret    0x1758
  410c68:	cdq    
  410c69:	test   eax,0x88548488
  410c6e:	in     eax,0x8e
  410c70:	out    0x41,eax
  410c72:	ret    0x20c9
  410c75:	mov    ds:0xdb3a4e2c,eax
  410c7a:	adc    BYTE PTR [edi+0x59],ch
  410c7d:	stos   BYTE PTR es:[edi],al
  410c7e:	adc    bl,dh
  410c80:	adc    al,0x36
  410c82:	push   cs
  410c83:	mov    eax,ds:0x6df7f326
  410c88:	adc    DWORD PTR [edx-0x6827557f],esi
  410c8e:	mov    edx,DWORD PTR [ebx]
  410c90:	or     al,0x64
  410c92:	push   esp
  410c93:	test   DWORD PTR [esi+0xd6bcad5],edi
  410c99:	fdiv   QWORD PTR [esi+eax*4+0x45]
  410c9d:	push   0xffb749ca
  410ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ca3:	mov    edx,0x62744961
  410ca8:	or     ah,0xb5
  410cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cac:	aam    0xc7
  410cae:	xchg   ecx,eax
  410caf:	ret    0x96da
  410cb2:	and    eax,0xe2d984a2
  410cb7:	xchg   ebp,eax
  410cb8:	push   edi
  410cb9:	push   edx
  410cba:	test   BYTE PTR [edx+0xa24a3ab],bh
  410cc0:	jmp    0xf112:0xb6b0bf62
  410cc7:	or     ecx,esp
  410cc9:	pop    es
  410cca:	xchg   al,dl
  410ccc:	mov    ds:0xd85f07ef,al
  410cd1:	push   0xffffffc1
  410cd3:	and    eax,0xef7ecf9
  410cd8:	shl    DWORD PTR [edx-0x1d],1
  410cdb:	push   edi
  410cdc:	pop    esp
  410cdd:	mov    ds:0xdf46fff5,al
  410ce2:	dec    ebx
  410ce3:	mov    bl,0x64
  410ce5:	sbb    eax,0xc1c8b0df
  410cea:	ret    0x3ce6
  410ced:	mov    dh,0x78
  410cef:	fwait
  410cf0:	mov    DWORD PTR [ebp-0x4e8d8c03],edi
  410cf6:	mov    bl,0x63
  410cf8:	jp     0x410ca6
  410cfa:	inc    edi
  410cfb:	or     dl,dh
  410cfd:	jl     0x410d7a
  410cff:	ret    0x127
  410d02:	out    dx,eax
  410d03:	rcl    BYTE PTR [ecx],1
  410d05:	jns    0x410c9b
  410d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d08:	pop    esp
  410d09:	xor    ah,BYTE PTR [ebx-0xf]
  410d0c:	dec    ebx
  410d0d:	push   ebx
  410d0e:	push   es
  410d0f:	xor    BYTE PTR [edx],ah
  410d11:	lock pop ebp
  410d13:	cmp    eax,edx
  410d15:	das    
  410d16:	jmp    0x66ad35a4
  410d1b:	fnsave ds:0x8cbaf093
  410d21:	dec    ebx
  410d22:	popf   
  410d23:	jo     0x410d92
  410d25:	mov    DWORD PTR [edx-0x4e],0xa47f1fd5
  410d2c:	daa    
  410d2d:	pop    ebp
  410d2e:	dec    ebp
  410d2f:	pop    ecx
  410d30:	xor    BYTE PTR [esi+0xb],bh
  410d33:	or     ch,ch
  410d35:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d37:	push   ds
  410d38:	jb     0x410d8a
  410d3a:	shl    BYTE PTR [ebx],1
  410d3c:	cmp    DWORD PTR [ebp-0x3e7117a4],edx
  410d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d43:	jmp    0x46b58678
  410d48:	dec    esi
  410d49:	fisub  DWORD PTR [eax+0x7c]
  410d4c:	cmp    al,0x93
  410d4e:	cmc    
  410d4f:	add    eax,0x903e2eff
  410d54:	push   ebx
  410d55:	push   ds
  410d56:	jmp    0x410d40
  410d58:	ret    
  410d59:	pop    ss
  410d5a:	sub    ah,dl
  410d5c:	and    al,BYTE PTR [edi]
  410d5e:	aam    0xc9
  410d60:	push   ebp
  410d61:	loopne 0x410d10
  410d63:	pusha  
  410d64:	push   edx
  410d65:	loopne 0x410d80
  410d67:	sbb    bh,ch
  410d69:	mov    ch,0x36
  410d6b:	cld    
  410d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d6d:	xchg   BYTE PTR [edi+ecx*2],dl
  410d70:	mov    bh,0xab
  410d72:	lahf   
  410d73:	cmp    al,0x70
  410d75:	push   esp
  410d76:	sti    
  410d77:	loop   0x410de3
  410d79:	jge    0x410da7
  410d7b:	dec    edi
  410d7c:	out    dx,eax
  410d7d:	jbe    0x410d4f
  410d7f:	xor    DWORD PTR [edi-0x17801361],ecx
  410d85:	push   edx
  410d86:	aas    
  410d87:	loope  0x410d16
  410d89:	test   BYTE PTR [ebp+0x20],ch
  410d8c:	jmp    0x6332:0x7c6b842f
  410d93:	inc    esi
  410d94:	les    edi,FWORD PTR [esi+0x32]
  410d97:	pop    edi
  410d98:	push   0xffffff88
  410d9a:	in     al,dx
  410d9b:	sti    
  410d9c:	je     0x410d6d
  410d9e:	enter  0x657a,0xe7
  410da2:	outs   dx,BYTE PTR ds:[esi]
  410da3:	sbb    DWORD PTR [ebp-0x4c],0xffffff92
  410da7:	das    
  410da8:	mov    bh,0x4d
  410daa:	ds jmp 0x410dc9
  410dad:	mov    eax,ds:0x95fa16db
  410db2:	div    DWORD PTR [esi+0x32]
  410db5:	retf   0xe51
  410db8:	sbb    eax,0xe1bf887d
  410dbd:	shl    DWORD PTR [edx],0xe8
  410dc0:	inc    ecx
  410dc1:	test   BYTE PTR [esi+0x4bded377],ch
  410dc7:	or     DWORD PTR [edi+0x5c65fbf4],eax
  410dcd:	jnp    0x410d88
  410dcf:	aad    0x7
  410dd1:	pop    es
  410dd2:	out    dx,eax
  410dd3:	mov    bh,0xee
  410dd5:	push   ebx
  410dd6:	ret    0x92a4
  410dd9:	loope  0x410d5b
  410ddb:	std    
  410ddc:	sbb    ebp,DWORD PTR [edx-0x755e327c]
  410de2:	(bad)  
  410de3:	fwait
  410de4:	out    dx,eax
  410de5:	push   cs
  410de6:	xchg   ecx,eax
  410de7:	jo     0x410e1d
  410de9:	ret    0x43e9
  410dec:	stos   BYTE PTR es:[edi],al
  410ded:	dec    ebp
  410dee:	push   eax
  410def:	dec    esp
  410df0:	shl    BYTE PTR [ebp-0x151f13e8],1
  410df6:	push   es
  410df7:	and    DWORD PTR [esi],esp
  410df9:	push   edi
  410dfa:	sti    
  410dfb:	mul    BYTE PTR [esi+0x5d]
  410dfe:	dec    esi
  410dff:	sbb    dh,ah
  410e01:	test   eax,0xfa68e2ec
  410e06:	je     0x410e11
  410e08:	dec    ebp
  410e09:	or     eax,ecx
  410e0b:	out    dx,eax
  410e0c:	hlt    
  410e0d:	mov    ds:0x7846c2fb,al
  410e12:	push   es
  410e13:	cmc    
  410e14:	sub    BYTE PTR [ebp+0x27],al
  410e17:	clc    
  410e18:	sub    bl,BYTE PTR [edx+0x53]
  410e1b:	out    dx,eax
  410e1c:	daa    
  410e1d:	iret   
  410e1e:	rol    BYTE PTR [esi],cl
  410e20:	xor    eax,0x21d295af
  410e25:	xor    dl,BYTE PTR [eax-0x6f920772]
  410e2b:	add    eax,0x233843b4
  410e30:	ins    DWORD PTR es:[edi],dx
  410e31:	clc    
  410e32:	mov    ecx,0x41599d5d
  410e37:	(bad)  
  410e39:	scas   al,BYTE PTR es:[edi]
  410e3a:	mov    eax,ds:0x3fe3e35f
  410e3f:	repz leave 
  410e41:	sar    esi,1
  410e43:	test   BYTE PTR [ebx-0x15562b2c],dh
  410e49:	outs   dx,BYTE PTR ds:[esi]
  410e4a:	jbe    0x410dff
  410e4c:	daa    
  410e4d:	inc    ecx
  410e4e:	jge    0x410e0b
  410e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e51:	dec    eax
  410e52:	out    dx,eax
  410e53:	loop   0x410e52
  410e55:	loop   0x410e8a
  410e57:	inc    ebp
  410e58:	push   ecx
  410e59:	fwait
  410e5a:	mov    edx,0x3261bb3a
  410e5f:	inc    esp
  410e60:	cmp    ecx,DWORD PTR [esp+ebp*1+0x7a]
  410e64:	push   cs
  410e65:	lea    edx,[ecx]
  410e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e68:	test   eax,0xbfb8f03e
  410e6d:	test   BYTE PTR [esp+edi*2],ch
  410e70:	sti    
  410e71:	push   es
  410e72:	mov    dl,0xda
  410e74:	mov    esp,0x1910eb72
  410e79:	or     BYTE PTR [ecx+ebx*1],dh
  410e7c:	push   ecx
  410e7d:	std    
  410e7e:	dec    ebp
  410e7f:	mov    eax,ds:0xb96e24b8
  410e84:	in     eax,dx
  410e85:	out    0x9f,eax
  410e87:	out    0x6c,al
  410e89:	fstp   DWORD PTR [ecx]
  410e8b:	lods   eax,DWORD PTR ds:[esi]
  410e8c:	mov    al,ds:0xabdb8f88
  410e91:	or     BYTE PTR [esi],dh
  410e93:	inc    ecx
  410e94:	xlat   BYTE PTR ds:[ebx]
  410e95:	ror    eax,cl
  410e97:	xchg   ecx,eax
  410e98:	push   edx
  410e99:	rol    DWORD PTR [esi],1
  410e9b:	mov    dh,0x4c
  410e9d:	jge    0x410ecc
  410e9f:	retf   0x9f66
  410ea2:	test   eax,0x61b9c43c
  410ea7:	xchg   edi,eax
  410ea8:	jl     0x410e6a
  410eaa:	std    
  410eab:	push   esi
  410eac:	adc    bl,ah
  410eae:	or     DWORD PTR [edx-0xe322b8f],edi
  410eb4:	cmc    
  410eb5:	cwde   
  410eb6:	jo     0x410f21
  410eb8:	imul   edx,DWORD PTR [edx-0x40],0xffffffef
  410ebc:	dec    edx
  410ebd:	pop    ebx
  410ebe:	inc    edi
  410ebf:	int    0xa0
  410ec1:	mov    ecx,0xae2dcedd
  410ec6:	mov    esp,0x4afaa918
  410ecb:	and    BYTE PTR [edx],dh
  410ecd:	pop    ss
  410ece:	xlat   BYTE PTR ds:[ebx]
  410ecf:	inc    eax
  410ed0:	mov    ds:0x6508bac,eax
  410ed5:	shl    DWORD PTR [edi+0x1bdb2dd2],0xea
  410edc:	aaa    
  410edd:	test   al,0x95
  410edf:	dec    esi
  410ee0:	cmp    dl,al
  410ee2:	pop    eax
  410ee3:	pop    es
  410ee4:	outs   dx,BYTE PTR ds:[esi]
  410ee5:	(bad)  
  410ee6:	into   
  410ee7:	inc    ecx
  410ee8:	ja     0x410e80
  410eea:	xchg   ebp,edx
  410eec:	sub    dl,dh
  410eee:	and    dl,al
  410ef0:	jnp    0x410e80
  410ef2:	lahf   
  410ef3:	aas    
  410ef4:	or     DWORD PTR [eax-0x7f64189a],eax
  410efa:	xchg   edx,eax
  410efb:	fucomip st,st(4)
  410efd:	bound  eax,QWORD PTR [ebp+0x461db866]
  410f03:	int3   
  410f04:	pusha  
  410f05:	sti    
  410f06:	jae    0x410eab
  410f08:	lods   al,BYTE PTR ds:[esi]
  410f09:	ins    DWORD PTR es:[edi],dx
  410f0a:	sub    esi,edi
  410f0c:	rcr    edi,1
  410f0e:	(bad)  
  410f0f:	mov    ebp,0x4e6c0470
  410f14:	int3   
  410f15:	cwde   
  410f16:	lea    edx,[ebx-0x387bb097]
  410f1c:	jno    0x410f6e
  410f1e:	sbb    esi,DWORD PTR [ebp-0x5]
  410f21:	jo     0x410f37
  410f23:	lods   eax,DWORD PTR ds:[esi]
  410f24:	outs   dx,DWORD PTR ds:[esi]
  410f25:	push   ss
  410f26:	and    DWORD PTR [ebx-0x72e3a440],edi
  410f2c:	int3   
  410f2d:	sub    esi,DWORD PTR [eax+0xc89104e]
  410f33:	or     eax,0x6ce60b1f
  410f38:	lods   eax,DWORD PTR ds:[esi]
  410f39:	inc    edx
  410f3a:	and    eax,0xa823c048
  410f3f:	js     0x410f02
  410f41:	(bad)  
  410f42:	push   esi
  410f43:	dec    edx
  410f44:	sub    dh,ch
  410f46:	jns    0x410f33
  410f48:	dec    ebx
  410f49:	mov    al,0x93
  410f4b:	clc    
  410f4c:	cmp    eax,0xe9a4a8fb
  410f51:	test   DWORD PTR ds:0x334fa567,esp
  410f57:	and    DWORD PTR [esi+0x6d3c3d60],esp
  410f5d:	ins    BYTE PTR es:[edi],dx
  410f5e:	aas    
  410f5f:	fdiv   QWORD PTR [eax-0x749e389]
  410f65:	mov    al,dh
  410f67:	add    BYTE PTR [edx-0x7656c9de],cl
  410f6d:	lock pop edx
  410f6f:	in     al,0x59
  410f71:	push   0xffffff9b
  410f73:	mov    al,0xfc
  410f75:	das    
  410f76:	outs   dx,DWORD PTR ds:[esi]
  410f77:	in     eax,dx
  410f78:	dec    ebp
  410f79:	add    eax,0xea021bfd
  410f7e:	mov    eax,ds:0x6cd54cb3
  410f83:	cmp    edi,DWORD PTR [eax-0x23]
  410f86:	hlt    
  410f87:	sbb    DWORD PTR [ecx],ebx
  410f89:	daa    
  410f8a:	xchg   ecx,eax
  410f8b:	jae    0x410f5b
  410f8d:	aas    
  410f8e:	test   eax,0xd352ce33
  410f93:	rol    BYTE PTR [ebx-0x79],1
  410f96:	mul    ecx
  410f98:	and    esi,DWORD PTR [ebp-0x4e]
  410f9b:	push   eax
  410f9c:	fisubr DWORD PTR [ecx+0x117d85a]
  410fa2:	pop    ebp
  410fa3:	jg     0x410fb6
  410fa5:	std    
  410fa6:	pop    eax
  410fa7:	nop
  410fa8:	jmp    0x410fdb
  410faa:	mov    WORD PTR [edi-0x629a0aec],fs
  410fb0:	cmpxchg BYTE PTR [edi],dh
  410fb3:	sub    edi,DWORD PTR [ebp-0x2d]
  410fb6:	pushf  
  410fb7:	mov    bh,0x54
  410fb9:	inc    edi
  410fba:	mov    eax,ds:0xa0336867
  410fbf:	fisub  DWORD PTR [edx]
  410fc1:	xor    bp,sp
  410fc4:	bound  ecx,QWORD PTR [eax-0x17]
  410fc7:	dec    esi
  410fc8:	retf   
  410fc9:	cmp    DWORD PTR [edx-0x4b],0xd1c7c2fd
  410fd0:	out    0x64,eax
  410fd2:	xchg   bl,dh
  410fd4:	adc    al,0x4
  410fd6:	sti    
  410fd7:	and    bl,BYTE PTR [ecx-0x44]
  410fda:	mov    ebx,0x2c5f4bc7
  410fdf:	(bad)  
  410fe0:	cmp    eax,0x1c671f2b
  410fe5:	jmp    0x8b0cafd1
  410fea:	pop    ecx
  410feb:	out    0x5d,eax
  410fed:	inc    ebp
  410fee:	pop    ecx
  410fef:	outs   dx,DWORD PTR ds:[esi]
  410ff0:	mov    WORD PTR [esp+edx*2-0x6fcdda20],gs
  410ff7:	or     BYTE PTR [esi+0x600a876e],ch
  410ffd:	popf   
  410ffe:	inc    edx
  410fff:	dec    edi
  411000:	cmc    
  411001:	mov    dl,0x3
  411003:	ja     0x411018
  411005:	test   eax,0xc8ffb8a8
  41100a:	cs aas 
  41100c:	push   ds
  41100d:	adc    bh,bh
  41100f:	mov    edi,0x12ff5766
  411014:	cdq    
  411015:	cmp    bl,0x93
  411018:	cmp    al,0x57
  41101a:	inc    esp
  41101b:	push   0xffffff9d
  41101d:	inc    edx
  41101e:	pop    ebp
  41101f:	aad    0x1f
  411021:	lock retf 0xecd9
  411025:	scas   al,BYTE PTR es:[edi]
  411026:	fsubr  DWORD PTR [edx]
  411028:	inc    ebx
  411029:	mov    ebp,0xe21d76cc
  41102e:	pop    esi
  41102f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411030:	ds leave 
  411032:	add    eax,0xac23f845
  411037:	pop    ecx
  411038:	icebp  
  411039:	fcmovne st,st(5)
  41103b:	push   edi
  41103c:	or     DWORD PTR [esi+0x0],ebp
  41103f:	adc    bh,BYTE PTR [edx]
  411041:	or     bl,bh
  411043:	xor    al,0xfa
  411045:	pop    ebp
  411046:	cmp    dl,bl
  411048:	dec    ebp
  411049:	cmp    ebx,ebp
  41104b:	jmp    DWORD PTR [ecx]
  41104d:	in     eax,0x4
  41104f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411050:	std    
  411051:	daa    
  411052:	jbe    0x411025
  411054:	add    eax,DWORD PTR [esi+0x64]
  411057:	push   edi
  411058:	pop    ecx
  411059:	and    eax,0xa3a2b7
  41105e:	and    al,0x54
  411060:	fs pop esi
  411062:	sbb    eax,edi
  411064:	dec    ebp
  411065:	retf   0xd572
  411068:	add    eax,0xd0b4358f
  41106d:	fwait
  41106e:	pop    edi
  41106f:	mov    BYTE PTR [esi-0x6f],0x7f
  411073:	cwde   
  411074:	dec    esp
  411075:	pop    esp
  411076:	mov    esi,0x52a432b0
  41107b:	add    eax,0x75c4fb72
  411080:	frstor [edi-0x35]
  411083:	ja     0x411062
  411085:	xchg   edx,eax
  411086:	push   ss
  411087:	mov    eax,0xe422a96b
  41108c:	mov    dl,0x9c
  41108e:	mov    edx,0x547d49d8
  411093:	inc    esp
  411094:	in     al,0x6e
  411096:	stc    
  411097:	mov    ebx,0xe45bf43
  41109c:	sub    eax,0xbfdbce4e
  4110a1:	jecxz  0x41106e
  4110a3:	sbb    DWORD PTR [ebx+0x19753752],ebp
  4110a9:	xchg   edi,eax
  4110aa:	mov    ah,0x18
  4110ac:	adc    al,0x99
  4110ae:	ja     0x4110e1
  4110b0:	cmp    BYTE PTR [esi+0x4a],dl
  4110b3:	cmp    DWORD PTR [esi-0x34],ecx
  4110b6:	adc    al,0xcf
  4110b8:	aaa    
  4110b9:	ret    
  4110ba:	add    al,ah
  4110bc:	xchg   ecx,eax
  4110bd:	ficom  DWORD PTR [edi-0xf]
  4110c0:	neg    DWORD PTR [edx+0x4b]
  4110c3:	pushf  
  4110c4:	adc    eax,0x27b381da
  4110c9:	and    eax,0x19293d56
  4110ce:	es pop ebp
  4110d0:	xor    al,0x95
  4110d2:	jmp    DWORD PTR [edi]
  4110d4:	ffree  st(3)
  4110d6:	push   edx
  4110d7:	xor    eax,0xc7905f57
  4110dc:	test   eax,0xbda83615
  4110e1:	(bad)  
  4110e2:	daa    
  4110e3:	and    DWORD PTR [ecx-0x6e98d8ef],esi
  4110e9:	add    BYTE PTR [edi],al
  4110eb:	mov    BYTE PTR [edi+0x736e44fc],al
  4110f1:	push   0xffffffd7
  4110f3:	push   0x7345b4fb
  4110f8:	sub    al,cl
  4110fa:	or     eax,0x61374135
  4110ff:	dec    edx
  411100:	push   ds
  411101:	js     0x411114
  411103:	pop    ds
  411104:	pop    ecx
  411105:	push   ecx
  411106:	and    BYTE PTR ds:0x660deda,ch
  41110c:	imul   edx,eax,0x2b
  41110f:	lea    ebp,[eax-0x4c]
  411112:	xchg   edi,eax
  411113:	fldpi  
  411115:	jo     0x4110bc
  411117:	mov    es,WORD PTR [ebp+0x10879d28]
  41111d:	adc    BYTE PTR [ebp+0x14673517],dh
  411123:	xchg   edx,eax
  411124:	xchg   DWORD PTR [ecx+0x2eea9bc5],ebx
  41112a:	shr    DWORD PTR [ecx],0x73
  41112d:	dec    esp
  41112e:	mov    al,0xd7
  411130:	ins    DWORD PTR es:[edi],dx
  411131:	pop    eax
  411132:	xchg   esp,esp
  411134:	out    dx,al
  411135:	nop
  411136:	mov    bh,0x71
  411138:	jmp    0x4f1962
  41113d:	imul   esp,DWORD PTR [edi-0x19],0x2f
  411141:	shl    BYTE PTR [eax+0x50],1
  411144:	ja     0x411168
  411146:	xchg   DWORD PTR [edi-0x61],edx
  411149:	and    al,0x1a
  41114b:	mov    dl,0xd7
  41114d:	aaa    
  41114e:	div    BYTE PTR [edx+0x6e]
  411151:	or     al,BYTE PTR [edi+0x6c]
  411154:	bound  eax,QWORD PTR [eax+0x462c9acb]
  41115a:	push   0xffffffc4
  41115c:	xor    bl,bh
  41115e:	aam    0xd2
  411160:	addr16 iret 
  411162:	je     0x4111b2
  411164:	mov    DWORD PTR [ebx-0x8],ebp
  411167:	pop    edi
  411168:	add    BYTE PTR [eax-0x48f0f0f7],0x23
  41116f:	(bad)  
  411170:	out    0xd3,al
  411172:	mov    ebx,ecx
  411174:	mov    cl,0x3c
  411176:	mov    ecx,0xcf2659f0
  41117b:	jl     0x411184
  41117d:	sbb    BYTE PTR [edx+eax*1],0x40
  411181:	or     edx,DWORD PTR [edx]
  411183:	js     0x411196
  411185:	fisub  WORD PTR ds:0x9f99f48f
  41118b:	push   eax
  41118c:	test   DWORD PTR [ecx-0x453a2fe5],ebp
  411192:	leave  
  411193:	les    ebx,FWORD PTR [edi-0x78]
  411196:	mov    eax,0xf1ff5aee
  41119b:	icebp  
  41119c:	lock int3 
  41119e:	inc    ebx
  41119f:	xor    ebp,DWORD PTR [edx-0x1a]
  4111a2:	cmc    
  4111a3:	icebp  
  4111a4:	fstp   DWORD PTR [ebx+0x642b2b70]
  4111aa:	sbb    eax,edx
  4111ac:	pop    ecx
  4111ad:	cmp    cl,dh
  4111af:	into   
  4111b0:	cmp    BYTE PTR [edx+0x3793ff8f],al
  4111b6:	es pop edx
  4111b8:	adc    al,BYTE PTR [edx+0x45]
  4111bb:	and    eax,0xb454d79b
  4111c0:	(bad)  
  4111c1:	xchg   edx,eax
  4111c2:	xchg   esp,eax
  4111c3:	in     al,0x41
  4111c5:	push   esi
  4111c6:	inc    eax
  4111c7:	mov    esp,0x24459b4f
  4111cc:	shr    DWORD PTR [edx+eax*2-0x26],0x3c
  4111d1:	xchg   DWORD PTR [ebx-0x7fe5417],ebx
  4111d7:	div    eax
  4111d9:	dec    edi
  4111da:	adc    ah,dh
  4111dc:	sbb    DWORD PTR [ebx+0x5d],0x20
  4111e0:	jmp    0xd688:0xecd9da91
  4111e7:	dec    BYTE PTR [eax-0x43091079]
  4111ed:	fsub   QWORD PTR [eax+0x3eebc509]
  4111f3:	sbb    DWORD PTR [edx+0x1ff96d46],edi
  4111f9:	scas   al,BYTE PTR es:[edi]
  4111fa:	xchg   esp,eax
  4111fb:	int3   
  4111fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111fd:	xor    eax,0xfa53ab9e
  411202:	iret   
  411203:	es popf 
  411205:	loop   0x411236
  411207:	xchg   esi,eax
  411208:	add    esp,DWORD PTR [ecx-0x6e]
  41120b:	(bad)  
  41120c:	clc    
  41120d:	in     eax,dx
  41120e:	adc    DWORD PTR [ebp+edx*2+0x3e],ebx
  411212:	sti    
  411213:	loope  0x4111c0
  411215:	sbb    esp,DWORD PTR [edi]
  411217:	mov    ecx,0x87a52bc8
  41121c:	leave  
  41121d:	pop    esp
  41121e:	push   ecx
  41121f:	jno    0x4111d7
  411221:	pop    ebx
  411222:	in     al,0x13
  411224:	jb     0x4111f1
  411226:	mov    eax,ds:0x81b24fde
  41122b:	inc    esi
  41122c:	retf   
  41122d:	sahf   
  41122e:	loope  0x411254
  411230:	add    BYTE PTR [edi-0x6a],dl
  411233:	pushf  
  411234:	push   ds
  411235:	inc    ebp
  411236:	or     BYTE PTR [edx],dl
  411238:	mov    ebx,0xf30eb538
  41123d:	(bad)  
  41123e:	xchg   ebp,eax
  41123f:	mov    ebp,0x2442080b
  411244:	and    BYTE PTR [eax+0x2c],0x25
  411248:	(bad)  
  411249:	sbb    BYTE PTR [edi],dh
  41124b:	addr16 pop ebp
  41124d:	push   ebp
  41124e:	xchg   bh,al
  411250:	adc    ch,BYTE PTR [edi-0x216f5ae7]
  411256:	repnz out 0x8,eax
  411259:	push   ebp
  41125a:	dec    esi
  41125b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41125c:	iret   
  41125d:	sbb    esp,DWORD PTR [eax+edx*4-0x70]
  411261:	les    esi,FWORD PTR [eax-0x59ccaf33]
  411267:	sub    eax,0x24e795a6
  41126c:	adc    al,0xef
  41126e:	aad    0x12
  411270:	fimul  DWORD PTR [ecx+ecx*4]
  411273:	fnstsw WORD PTR [edi]
  411275:	push   cs
  411276:	int3   
  411277:	ins    BYTE PTR es:[edi],dx
  411278:	or     BYTE PTR [eax-0x6c],bl
  41127b:	mov    esi,0x9c34d3f2
  411280:	dec    edi
  411281:	cli    
  411282:	pop    esp
  411283:	daa    
  411284:	retf   0x3d65
  411287:	pop    ebp
  411288:	scas   eax,DWORD PTR es:[edi]
  411289:	in     eax,dx
  41128a:	sbb    BYTE PTR [ebx+0x65d21286],dl
  411290:	push   esp
  411291:	push   es
  411292:	push   ebp
  411293:	int3   
  411294:	push   eax
  411295:	outs   dx,BYTE PTR ds:[esi]
  411296:	cmp    bl,ah
  411298:	push   esi
  411299:	push   ecx
  41129a:	(bad)  
  41129c:	loope  0x41124e
  41129e:	adc    BYTE PTR [ebp+0x31],cl
  4112a1:	(bad)  
  4112a2:	aad    0xc3
  4112a4:	xchg   esi,eax
  4112a5:	jmp    DWORD PTR [ecx]
  4112a7:	arpl   WORD PTR [ebx-0x287897de],si
  4112ad:	jbe    0x4112d4
  4112af:	mov    DWORD PTR [esi+0x4b],esp
  4112b2:	mov    edx,0x23b68018
  4112b7:	jne    0x41128f
  4112b9:	pusha  
  4112ba:	mov    dh,0x76
  4112bc:	mov    bh,0x2b
  4112be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112bf:	ror    BYTE PTR [ebp+0x4],cl
  4112c2:	bnd jo 0x41133f
  4112c5:	icebp  
  4112c6:	inc    edx
  4112c7:	jmp    0x411267
  4112c9:	out    dx,eax
  4112ca:	lock neg ch
  4112cd:	pop    ds
  4112ce:	add    ch,BYTE PTR [eax+0x5c]
  4112d1:	int3   
  4112d2:	fcomp  QWORD PTR [esi]
  4112d4:	frstor [ebx]
  4112d6:	sahf   
  4112d7:	or     al,0x8e
  4112d9:	mov    al,BYTE PTR [ecx]
  4112db:	jge    0x41127a
  4112dd:	push   edi
  4112de:	sub    al,0x7b
  4112e0:	xor    bh,BYTE PTR [ecx]
  4112e2:	xor    BYTE PTR [eax-0xc9f1038],0x9d
  4112e9:	jo     0x4112a8
  4112eb:	dec    ecx
  4112ec:	push   ds
  4112ed:	ret    0xf3d6
  4112f0:	sar    dh,1
  4112f2:	cwde   
  4112f3:	push   edx
  4112f4:	fbstp  TBYTE PTR [edx]
  4112f6:	inc    ebp
  4112f7:	in     eax,0xb9
  4112f9:	leave  
  4112fa:	sbb    al,0x67
  4112fc:	adc    esp,DWORD PTR [bp+si]
  4112ff:	dec    edx
  411300:	jb     0x4112b9
  411302:	jge    0x411310
  411304:	push   ss
  411305:	pop    ss
  411306:	push   ecx
  411307:	icebp  
  411308:	mov    esi,0x354fad69
  41130d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41130e:	sbb    DWORD PTR [edi],ebx
  411310:	sbb    al,0x82
  411312:	lods   eax,DWORD PTR ds:[esi]
  411313:	jno    0x41130d
  411315:	fist   WORD PTR [ecx+0x71]
  411318:	mov    ah,0x6c
  41131a:	fild   WORD PTR ds:[esi+0x4b]
  41131e:	fcom   QWORD PTR [eax+0x11d9cfa2]
  411324:	das    
  411325:	xor    BYTE PTR [edx+0x3a],0x55
  411329:	mov    eax,ds:0x9f4e2590
  41132e:	enter  0x237d,0x3f
  411332:	retf   
  411333:	push   esp
  411334:	inc    esp
  411335:	mov    ah,0x1b
  411337:	stos   BYTE PTR es:[edi],al
  411338:	pop    ds
  411339:	add    dl,cl
  41133b:	adc    ebp,DWORD PTR [ebx-0x14d735d]
  411341:	mov    cl,0x3b
  411343:	mov    ah,0x2d
  411345:	loopne 0x4113ae
  411347:	sub    al,ah
  411349:	leave  
  41134a:	js     0x411308
  41134c:	test   BYTE PTR [edi+ebp*8-0x40509959],ah
  411353:	cmp    cl,al
  411355:	jae    0x411312
  411357:	or     dl,BYTE PTR [edi]
  411359:	mov    bh,0x26
  41135b:	sbb    cl,BYTE PTR [edi]
  41135d:	sbb    BYTE PTR [ecx+ebx*8-0x13],dl
  411361:	ins    DWORD PTR es:[edi],dx
  411362:	mov    ds:0xc503f10a,eax
  411367:	jb     0x41135b
  411369:	sub    BYTE PTR [ecx+ebx*1-0x5e1aa5eb],bl
  411370:	sbb    ecx,edi
  411372:	sbb    al,0x35
  411374:	mov    ?,WORD PTR [esi-0x217196cf]
  41137a:	mov    BYTE PTR [esi+0x65],bl
  41137d:	out    0x5a,al
  41137f:	mov    al,0x70
  411381:	std    
  411382:	out    dx,al
  411383:	sti    
  411384:	mov    BYTE PTR [ebx-0x1543d3ec],dl
  41138a:	out    dx,eax
  41138b:	mov    ebx,0xf996f464
  411390:	mov    bh,0xa1
  411392:	xor    ebp,DWORD PTR [eax]
  411394:	pop    ecx
  411395:	and    eax,0x575576a8
  41139a:	stos   BYTE PTR es:[edi],al
  41139b:	test   eax,0xb175938
  4113a0:	fisubr DWORD PTR [ecx+0x7]
  4113a3:	aas    
  4113a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113a5:	ins    BYTE PTR es:[edi],dx
  4113a6:	xchg   ebx,eax
  4113a7:	das    
  4113a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113a9:	in     eax,0xa2
  4113ab:	mov    eax,0xfafa10ea
  4113b0:	shr    BYTE PTR [edx+0x259e73ab],0xf8
  4113b7:	popa   
  4113b8:	lock or dl,cl
  4113bb:	adc    ebx,edi
  4113bd:	jmp    0xdde9:0x1bfb0cd
  4113c4:	xor    eax,0x342e4773
  4113c9:	push   esp
  4113ca:	cmp    BYTE PTR [edx],bh
  4113cc:	fsubrp st(4),st
  4113ce:	add    ebp,DWORD PTR [edx+0x2d2606dc]
  4113d4:	in     al,dx
  4113d5:	jae    0x41138e
  4113d7:	xchg   DWORD PTR [esi+0x49],ebp
  4113da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113db:	sbb    eax,DWORD PTR [esp+ecx*4+0x654a1cba]
  4113e2:	(bad)  
  4113e3:	repz adc ah,BYTE PTR [esi]
  4113e6:	loope  0x4113d9
  4113e8:	xlat   BYTE PTR ds:[ebx]
  4113e9:	fidiv  WORD PTR [ecx+0x73]
  4113ec:	retf   0x7f8c
  4113ef:	stc    
  4113f0:	mov    bh,0x64
  4113f2:	cmp    eax,0xde073636
  4113f7:	xchg   edi,eax
  4113f8:	push   ebx
  4113f9:	mov    edi,0xcef8660c
  4113fe:	cmp    ah,BYTE PTR [esp+ebx*2]
  411401:	add    DWORD PTR ds:0x3db04422,edi
  411407:	jmp    0xe65ca2c8
  41140c:	and    eax,0x97041922
  411411:	xor    BYTE PTR [ebp-0x28],ah
  411414:	mov    ebx,0x1791d37d
  411419:	push   ebp
  41141a:	aaa    
  41141b:	into   
  41141c:	cdq    
  41141d:	push   es
  41141e:	pop    ebx
  41141f:	das    
  411420:	div    DWORD PTR [esp+eiz*8+0x2faa67de]
  411427:	stos   BYTE PTR es:[edi],al
  411428:	cmp    BYTE PTR [ecx+ecx*1],bl
  41142b:	shl    BYTE PTR [ecx-0x15cb4d4d],cl
  411431:	jb     0x4113ff
  411433:	xchg   ecx,eax
  411434:	mov    ebx,edx
  411436:	xchg   ebx,eax
  411437:	push   es
  411438:	mov    al,0x85
  41143a:	lock pop edx
  41143c:	out    dx,eax
  41143d:	jo     0x41143f
  41143f:	out    dx,eax
  411440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411441:	std    
  411442:	test   al,0x5c
  411444:	push   edi
  411445:	add    eax,0x495d341a
  41144a:	test   DWORD PTR [esi],0xa57747b3
  411450:	sub    ebx,DWORD PTR [eax+0x3db7268f]
  411456:	fnstenv [ebx-0x24]
  411459:	jg     0x4113f5
  41145b:	inc    esi
  41145c:	pop    esp
  41145d:	scas   eax,DWORD PTR es:[edi]
  41145e:	stos   BYTE PTR es:[edi],al
  41145f:	push   ebx
  411460:	push   0xffffffa3
  411462:	hlt    
  411463:	jno    0x4114cc
  411465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411466:	pop    esp
  411467:	jno    0x4114dd
  411469:	jmp    0x7998abcb
  41146e:	stc    
  41146f:	push   es
  411470:	inc    edx
  411471:	(bad)
  411475:	in     al,dx
  411476:	cmp    BYTE PTR ds:0xb59fe0b5,al
  41147c:	mov    ds:0x461b9405,al
  411481:	push   edi
  411482:	push   ebp
  411483:	je     0x41141d
  411485:	pop    ebx
  411486:	ins    BYTE PTR es:[di],dx
  411488:	hlt    
  411489:	call   0x9671:0xb58c82a1
  411490:	mov    cl,0xf6
  411492:	and    edi,DWORD PTR [eax+0x2]
  411495:	test   eax,0xb402f215
  41149a:	fidiv  DWORD PTR [esi-0x3c]
  41149d:	inc    ecx
  41149e:	retf   0x140c
  4114a1:	adc    ah,dh
  4114a3:	std    
  4114a4:	dec    ecx
  4114a5:	mov    esp,0x7b09a76f
  4114aa:	test   al,0x41
  4114ac:	mov    edi,DWORD PTR [eax]
  4114ae:	mov    dh,0xa0
  4114b0:	and    BYTE PTR [ebx],bh
  4114b2:	jmp    0x411437
  4114b4:	rcr    BYTE PTR ds:0xfc081a7c,1
  4114ba:	fwait
  4114bb:	and    bl,ah
  4114bd:	sbb    al,0x69
  4114bf:	pop    ebp
  4114c0:	lahf   
  4114c1:	mov    ch,0xf7
  4114c3:	sbb    BYTE PTR [ebx],0x65
  4114c6:	add    BYTE PTR [ebp+0x47],0xca
  4114ca:	pusha  
  4114cb:	retf   
  4114cc:	shl    DWORD PTR [eax+esi*1],cl
  4114cf:	mov    bh,0x5a
  4114d1:	jb     0x4114d0
  4114d3:	cmp    BYTE PTR [eax-0xb8034b7],bh
  4114d9:	sbb    bl,BYTE PTR [eax+0x39]
  4114dc:	call   0x9ef91ee0
  4114e1:	(bad)  
  4114e2:	mov    ah,0xa2
  4114e4:	or     eax,0x2f42afa8
  4114e9:	adc    DWORD PTR [ecx-0x48f2ebd5],esp
  4114ef:	push   eax
  4114f0:	adc    al,BYTE PTR [esi-0x78]
  4114f3:	mov    ebx,0x43c6beea
  4114f8:	mov    gs,ebp
  4114fa:	jp     0x41148c
  4114fc:	pop    eax
  4114fd:	sub    DWORD PTR [eax+0x35],0x48
  411501:	xchg   edi,eax
  411502:	xchg   ebp,eax
  411503:	push   ebp
  411504:	mov    esi,0x237b2f0a
  411509:	jmp    0x190d14f4
  41150e:	ins    DWORD PTR es:[edi],dx
  41150f:	(bad)  [esi]
  411511:	xchg   ebx,eax
  411512:	sbb    bh,bh
  411514:	xchg   ebp,eax
  411515:	iret   
  411516:	call   0x525c:0x5104cabc
  41151d:	int    0x42
  41151f:	adc    al,0x7e
  411521:	dec    esi
  411522:	sbb    eax,DWORD PTR [eax+ebp*8-0x31]
  411526:	cmp    bl,BYTE PTR [edi-0x7d]
  411529:	cmc    
  41152a:	pop    ebp
  41152b:	mov    ebp,0xe10bc3d0
  411530:	xchg   ebp,eax
  411531:	jno    0x4114c7
  411533:	xor    BYTE PTR [edx],dl
  411535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411536:	call   0x3c82:0x5f72a35a
  41153d:	mov    ebp,0xdd1a76b0
  411542:	mov    eax,ds:0xbf1e88d8
  411547:	(bad)  
  411548:	sub    al,0x6b
  41154a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41154c:	mov    ?,WORD PTR [ebx+0x5b6a7b4e]
  411552:	xor    eax,0x1829043e
  411557:	outs   dx,DWORD PTR ds:[esi]
  411558:	pop    esi
  411559:	push   0xffffff99
  41155b:	sahf   
  41155c:	data16 fimul DWORD PTR [edx+0x9]
  411560:	sbb    ah,0x30
  411563:	popa   
  411564:	retf   0x37be
  411567:	mov    ecx,0xf5f3c5ed
  41156c:	rdpmc  
  41156e:	and    edi,DWORD PTR [ecx+ecx*4-0x1510219e]
  411575:	push   ss
  411576:	ror    BYTE PTR [ebx-0x382331ed],0x2b
  41157d:	rcl    DWORD PTR [esi],cl
  41157f:	adc    BYTE PTR [eax+esi*2-0x2bc81da1],ah
  411586:	shr    DWORD PTR [eax],cl
  411588:	test   al,0x1
  41158a:	and    al,0x9f
  41158c:	or     BYTE PTR [esi],bh
  41158e:	ud0    ecx,DWORD PTR [edx-0x6efe8f42]
  411595:	jns    0x411611
  411597:	hlt    
  411598:	call   FWORD PTR [ecx+0x1c1be40]
  41159e:	mov    ds:0xa8e90a3e,al
  4115a3:	cmc    
  4115a4:	cmp    eax,0xaba26a93
  4115a9:	push   eax
  4115aa:	xor    eax,0xbe50972
  4115af:	or     DWORD PTR ds:0x3b3c47b1,0x2c118419
  4115b9:	jno    0x4115a3
  4115bb:	shl    BYTE PTR [ebp+0x699f47e3],cl
  4115c1:	bound  ecx,QWORD PTR [eax-0x17]
  4115c4:	inc    ecx
  4115c5:	push   esp
  4115c6:	jecxz  0x4115a3
  4115c8:	pop    edi
  4115c9:	repz ds popa 
  4115cc:	imul   esp,DWORD PTR [edx-0x23],0x3f
  4115d0:	mov    bh,0x5d
  4115d2:	sub    BYTE PTR [ebp+0x5b250d4d],bl
  4115d8:	pop    ecx
  4115d9:	sbb    BYTE PTR [edi+0x3a],ch
  4115dc:	sar    DWORD PTR [eax+ecx*1],cl
  4115df:	inc    eax
  4115e0:	xor    DWORD PTR [eax-0x4a],0xffffff8d
  4115e4:	push   edi
  4115e5:	inc    esi
  4115e6:	div    BYTE PTR [ebp+0x22138512]
  4115ec:	pop    es
  4115ed:	leave  
  4115ee:	nop
  4115ef:	in     eax,dx
  4115f0:	push   0x4457c8fc
  4115f5:	xlat   BYTE PTR ds:[ebx]
  4115f6:	sbb    DWORD PTR [esi+edi*4-0x6c294523],ebp
  4115fd:	ins    DWORD PTR es:[edi],dx
  4115fe:	div    BYTE PTR [edi]
  411600:	fisub  WORD PTR [ecx+0x3d82f793]
  411606:	rcr    BYTE PTR [esi+0x0],0x2f
  41160a:	pop    esi
  41160b:	test   DWORD PTR [ebp-0x52],esi
  41160e:	cmp    eax,0x979bdc44
  411613:	hlt    
  411614:	sub    DWORD PTR [edi-0x7b2e23e5],edi
  41161a:	iret   
  41161b:	sub    DWORD PTR [eax-0x50977128],edx
  411621:	or     BYTE PTR [edi-0x5d],bl
  411624:	call   0x8e6e:0x722bbbe5
  41162b:	popa   
  41162c:	neg    ebp
  41162e:	push   esp
  41162f:	int3   
  411630:	and    al,0xa6
  411633:	adc    dh,ch
  411635:	xchg   esi,eax
  411636:	lahf   
  411637:	scas   eax,DWORD PTR es:[edi]
  411638:	sahf   
  411639:	xor    bl,dh
  41163b:	fidivr WORD PTR [ebp-0x4be990f4]
  411641:	mov    bl,0x8e
  411643:	shl    DWORD PTR [eax-0x1e4d4bbc],1
  411649:	push   ss
  41164a:	loopne 0x411605
  41164c:	pop    eax
  41164d:	xchg   edx,eax
  41164e:	fisttp DWORD PTR [eax+0x27cdc448]
  411654:	repz in eax,0xaf
  411657:	(bad)  
  411658:	shl    dh,1
  41165a:	push   esi
  41165b:	jmp    0xf201:0xaf57106c
  411662:	ins    DWORD PTR es:[edi],dx
  411663:	stos   BYTE PTR es:[edi],al
  411664:	sbb    al,0x25
  411666:	sub    BYTE PTR [ebx],bl
  411668:	mov    ebp,0x949b8adf
  41166d:	inc    eax
  41166e:	les    esp,FWORD PTR [ebx]
  411670:	fdivr  DWORD PTR [edx]
  411672:	jae    0x41162e
  411674:	bound  esi,QWORD PTR [ebx+0x379828e2]
  41167a:	dec    ecx
  41167b:	fldcw  WORD PTR [ecx-0x7a]
  41167e:	adc    DWORD PTR [edi-0xc83a43a],ebx
  411684:	je     0x411689
  411686:	xor    DWORD PTR [edx],0xfffffff0
  411689:	sbb    DWORD PTR [esi+0x10],0xb3b144b6
  411690:	stos   BYTE PTR es:[edi],al
  411691:	shr    BYTE PTR [edi],cl
  411693:	push   ebp
  411694:	fstp   st(2)
  411696:	les    edi,FWORD PTR [eax-0x70e36f]
  41169c:	mov    dl,0x4a
  41169e:	cwde   
  41169f:	jg     0x411631
  4116a1:	inc    ebp
  4116a2:	ja     0x4116cd
  4116a4:	in     eax,dx
  4116a5:	or     eax,0x68f77a01
  4116aa:	imul   eax,ebp,0xcc11fbd9
  4116b0:	lea    esp,[ecx-0x4a82daab]
  4116b6:	test   DWORD PTR [esi],ebx
  4116b8:	jmp    0xb750599a
  4116bd:	lds    ebx,FWORD PTR [ecx-0x1bc921cb]
  4116c3:	int3   
  4116c4:	dec    ecx
  4116c5:	and    dl,bl
  4116c7:	jge    0x4116de
  4116c9:	icebp  
  4116ca:	in     al,0x55
  4116cc:	sti    
  4116cd:	mov    ds:0x27086e12,eax
  4116d2:	push   ss
  4116d3:	arpl   WORD PTR [ebx],bp
  4116d5:	call   0x3b96:0xc0be8380
  4116dc:	pop    esp
  4116dd:	imul   esi,DWORD PTR [edx+0xead3348],0x4b8c4e33
  4116e7:	add    ebp,DWORD PTR [eax-0x4c281252]
  4116ed:	fucomp st(4)
  4116ef:	test   DWORD PTR [eax-0x72],0xa75dbec0
  4116f6:	jno    0x411748
  4116f8:	les    ebp,FWORD PTR [eax]
  4116fa:	or     ch,cl
  4116fc:	jno    0x4116b2
  4116fe:	daa    
  4116ff:	leave  
  411700:	mov    ?,WORD PTR [ebx-0x3ffa906a]
  411706:	mov    ?,WORD PTR [edx]
  411708:	pop    ss
  411709:	pop    esp
  41170a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41170b:	and    bh,BYTE PTR [ebx-0x145336ac]
  411711:	loopne 0x411704
  411713:	jmp    0x3b9d13ed
  411718:	cmp    al,BYTE PTR [ebp-0x6612da33]
  41171e:	pop    esi
  41171f:	ror    cl,0xc
  411722:	outs   dx,BYTE PTR ds:[esi]
  411723:	mov    bh,0x73
  411725:	cmc    
  411726:	out    0xad,al
  411728:	or     eax,0xa9f3772b
  41172d:	dec    ecx
  41172e:	push   ds
  41172f:	ficomp WORD PTR [eax+0x199adfa7]
  411735:	sti    
  411736:	pop    ebx
  411737:	jae    0x4116d0
  411739:	in     al,dx
  41173a:	add    al,al
  41173c:	sub    DWORD PTR [ebx],eax
  41173e:	dec    eax
  41173f:	loop   0x4116c4
  411741:	push   esp
  411742:	inc    edi
  411743:	sub    eax,0x5d33beac
  411748:	cmp    BYTE PTR [esi],ah
  41174a:	fwait
  41174b:	adc    esp,DWORD PTR [ebp+edi*1-0xf]
  41174f:	mov    eax,0x9019cdc4
  411754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411755:	jge    0x4117c4
  411757:	in     eax,dx
  411758:	gs push 0x2f
  41175b:	outs   dx,DWORD PTR ds:[esi]
  41175c:	ins    DWORD PTR es:[edi],dx
  41175d:	stos   DWORD PTR es:[edi],eax
  41175e:	loopne 0x41172b
  411760:	jmp    0xd996:0xb3fd7c4c
  411767:	popa   
  411768:	mov    ebx,DWORD PTR [ecx-0x7]
  41176b:	enter  0x5e89,0x9c
  41176f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411770:	push   edi
  411771:	jbe    0x411700
  411773:	pop    esp
  411774:	pop    esp
  411775:	push   esi
  411776:	and    BYTE PTR [esi],cl
  411778:	rol    DWORD PTR [edi],0x2f
  41177b:	add    DWORD PTR [ecx+eiz*4-0x3c],ebx
  41177f:	pusha  
  411780:	in     eax,dx
  411781:	pop    ds
  411782:	xchg   DWORD PTR [edx+eax*2],ebx
  411785:	sbb    eax,0xd5b7992a
  41178a:	cwde   
  41178b:	loope  0x41176f
  41178d:	pop    es
  41178e:	dec    esi
  41178f:	lds    edi,FWORD PTR [edi-0x3073154c]
  411795:	fwait
  411796:	mov    edi,0xe6b1ce5f
  41179b:	rcl    DWORD PTR [eax-0x6b],0x35
  41179f:	mov    ebx,0x50990978
  4117a4:	dec    eax
  4117a5:	and    eax,0x87c0a0b8
  4117aa:	gs ds xchg esi,eax
  4117ad:	fsubr  st(2),st
  4117af:	daa    
  4117b0:	add    cl,al
  4117b2:	xchg   esi,eax
  4117b3:	retf   0x7840
  4117b6:	sti    
  4117b7:	dec    edx
  4117b8:	ret    
  4117b9:	xor    al,0x1e
  4117bb:	mov    BYTE PTR [edi-0x6a6730ef],ch
  4117c1:	inc    edx
  4117c2:	add    BYTE PTR [eax],dl
  4117c4:	ja     0x4117fe
  4117c6:	pop    edi
  4117c7:	aam    0x35
  4117c9:	jno    0x4117d9
  4117cb:	lods   al,BYTE PTR ds:[esi]
  4117cc:	pop    edi
  4117cd:	and    edx,DWORD PTR [ecx]
  4117cf:	mov    eax,0xbdb63629
  4117d4:	push   es
  4117d5:	push   DWORD PTR [ebx]
  4117d7:	fwait
  4117d8:	or     BYTE PTR [eax+eax*2-0x3cc095e5],bl
  4117df:	(bad)  
  4117e0:	leave  
  4117e1:	jmp    0x3fc240bf
  4117e6:	mov    DWORD PTR [edx-0x26f2b12],esp
  4117ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ed:	in     al,0xb8
  4117ef:	ins    BYTE PTR es:[edi],dx
  4117f0:	test   BYTE PTR [esi],al
  4117f2:	shl    BYTE PTR [esi],0x31
  4117f5:	cdq    
  4117f6:	outs   dx,BYTE PTR ds:[esi]
  4117f7:	push   ebp
  4117f8:	ficomp DWORD PTR [edx+ebx*2-0x6]
  4117fc:	aad    0x6e
  4117fe:	push   es
  4117ff:	jp     0x4117d6
  411801:	mov    edi,ecx
  411803:	xor    edx,ebx
  411805:	js     0x411858
  411807:	pop    eax
  411808:	sub    al,0x85
  41180a:	call   0x9500:0x18d4d403
  411811:	push   esp
  411812:	test   eax,0xafe300d4
  411817:	fst    st(0)
  411819:	lods   al,BYTE PTR ds:[esi]
  41181a:	dec    edi
  41181b:	adc    eax,0xc8af9248
  411820:	cmp    DWORD PTR [eax-0x635c014f],ecx
  411826:	clc    
  411827:	inc    ebp
  411828:	ficom  WORD PTR ds:0x2460bc92
  41182e:	jmp    0x411890
  411830:	and    al,0x4c
  411832:	or     DWORD PTR [eax-0x5c],edx
  411835:	fstp   QWORD PTR [eax-0x2b8d6a93]
  41183b:	fadd   DWORD PTR [ecx+edi*2+0x32]
  41183f:	ret    0x404
  411842:	pop    ss
  411843:	arpl   WORD PTR [ecx+0x2eb9884b],ax
  411849:	lea    edx,[ebx-0x49]
  41184c:	mov    ch,0xfb
  41184e:	les    ebx,FWORD PTR [edi]
  411850:	popa   
  411851:	mov    ch,0x24
  411853:	mov    bl,0x30
  411855:	iret   
  411856:	xchg   esi,eax
  411857:	loopne 0x411867
  411859:	xchg   ecx,eax
  41185a:	iret   
  41185b:	enter  0x4514,0x6c
  41185f:	jecxz  0x411837
  411861:	pop    ss
  411862:	test   bl,ch
  411864:	sbb    ebp,DWORD PTR [edi]
  411866:	pop    ds
  411867:	jmp    0x33f81f9
  41186c:	jecxz  0x41187f
  41186e:	mov    al,ds:0x78055021
  411873:	fwait
  411874:	leave  
  411875:	push   esp
  411876:	aam    0xb0
  411878:	call   0x7b650f5d
  41187d:	dec    ebx
  41187e:	push   eax
  41187f:	cmp    al,0x8d
  411881:	int3   
  411882:	cdq    
  411883:	sbb    bl,bh
  411885:	mov    bh,0xb0
  411887:	push   0xbdde33c0
  41188c:	or     esi,eax
  41188e:	push   esp
  41188f:	or     DWORD PTR ds:0xf97f28a3,ecx
  411895:	fs mov ecx,0xad179ccb
  41189b:	inc    ebp
  41189c:	daa    
  41189d:	iret   
  41189e:	xchg   bp,ax
  4118a0:	add    BYTE PTR fs:0xcc18121e,0x55
  4118a8:	dec    edi
  4118a9:	add    al,0xdc
  4118ab:	and    cl,bl
  4118ad:	loopne 0x41184e
  4118af:	in     eax,0xc7
  4118b1:	jbe    0x41186a
  4118b3:	xchg   esi,edi
  4118b5:	jnp    0x4118c9
  4118b7:	jbe    0x4118c7
  4118b9:	scas   eax,DWORD PTR es:[edi]
  4118ba:	adc    al,BYTE PTR [ecx-0x797cb126]
  4118c0:	add    eax,0xabf1f2f5
  4118c5:	repz push ebx
  4118c7:	mov    bh,0x66
  4118c9:	inc    eax
  4118ca:	popa   
  4118cb:	sbb    BYTE PTR [eax+esi*8-0x2d04fff6],al
  4118d2:	(bad)  
  4118d3:	cli    
  4118d4:	in     eax,dx
  4118d5:	(bad)  
  4118d6:	mov    bh,0xe0
  4118d8:	ret    
  4118d9:	xchg   esi,eax
  4118da:	jmp    0x411880
  4118dc:	add    eax,0x1dfdd10d
  4118e1:	xlat   BYTE PTR ds:[ebx]
  4118e2:	repz push ss
  4118e4:	(bad)  
  4118e5:	mov    eax,0xa6e99986
  4118ea:	sbb    DWORD PTR [eax-0x1e2b5382],0xffffffdb
  4118f1:	add    esi,DWORD PTR [esi]
  4118f3:	jne    0x4118ec
  4118f5:	repz sbb al,0xb3
  4118f8:	adc    al,0x9d
  4118fa:	cmp    dh,dh
  4118fc:	mov    dh,0x2d
  4118fe:	jo     0x4118fb
  411900:	jmp    0xa76553b8
  411905:	jl     0x41188e
  411907:	imul   ecx,DWORD PTR [ebp-0x67e4d6fd],0xfffffffb
  41190e:	cmp    DWORD PTR [ebx],ebp
  411910:	stos   BYTE PTR es:[edi],al
  411911:	aaa    
  411912:	dec    ebp
  411913:	pop    esi
  411914:	lods   al,BYTE PTR ds:[esi]
  411915:	sub    al,BYTE PTR [edx]
  411917:	ror    BYTE PTR [esi+0x8],0x66
  41191b:	loope  0x41190a
  41191d:	dec    ebp
  41191e:	mov    ebp,0x8734cc23
  411923:	pop    esi
  411924:	mov    edx,ebp
  411926:	or     bl,ch
  411928:	inc    esi
  411929:	push   edx
  41192a:	lods   eax,DWORD PTR ds:[esi]
  41192b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41192c:	inc    edx
  41192d:	xchg   edx,eax
  41192e:	push   ebp
  41192f:	cmp    BYTE PTR [eax+0x544d152d],dl
  411935:	mov    es,WORD PTR [edx-0x485468f4]
  41193b:	loopne 0x41198e
  41193d:	inc    ecx
  41193e:	sub    ah,BYTE PTR ds:0x89527e1
  411944:	out    0x8b,eax
  411946:	arpl   si,bp
  411948:	out    0xba,eax
  41194a:	hlt    
  41194b:	and    al,0xff
  41194d:	popa   
  41194e:	div    DWORD PTR [ecx-0x5b]
  411951:	cmp    DWORD PTR [ebp+eiz*2+0x6512afa],esi
  411958:	mov    bl,0xfe
  41195a:	outs   dx,DWORD PTR ds:[esi]
  41195b:	pop    edi
  41195c:	pop    esi
  41195d:	mov    ah,0xf3
  41195f:	loop   0x41194a
  411961:	push   es
  411962:	and    dl,ch
  411964:	das    
  411965:	and    eax,0x36135b75
  41196a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41196b:	icebp  
  41196c:	and    DWORD PTR [ecx],edi
  41196e:	fnstsw WORD PTR [esi]
  411970:	pop    es
  411971:	aaa    
  411972:	lods   eax,DWORD PTR ds:[esi]
  411973:	int3   
  411974:	sbb    al,0x71
  411976:	sbb    BYTE PTR [ebx-0x47],bl
  411979:	out    0x57,eax
  41197b:	or     esi,ebx
  41197d:	test   esp,esi
  41197f:	and    dl,BYTE PTR [edi]
  411981:	push   0x8686faa
  411986:	jecxz  0x4119ed
  411988:	add    DWORD PTR [eax-0x14606dd9],ebp
  41198e:	push   es
  41198f:	imul   ah
  411991:	pop    esi
  411992:	data16 div BYTE PTR [eax+0x10ee16d6]
  411999:	xor    DWORD PTR [esi-0x15],edi
  41199c:	out    0x3e,eax
  41199e:	jl     0x4119f3
  4119a0:	call   0x1c9d:0x2033b93d
  4119a7:	js     0x411a0c
  4119a9:	mov    ah,0xb4
  4119ab:	mov    cl,0x78
  4119ad:	cmp    BYTE PTR [edi+0x1b2f1f45],bl
  4119b3:	nop
  4119b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b5:	lods   eax,DWORD PTR ds:[esi]
  4119b6:	fstp   TBYTE PTR [ebp-0x6e]
  4119b9:	cmp    eax,0x74dfec
  4119be:	ret    0xa772
  4119c1:	ss mov ch,bl
  4119c4:	mov    ds:0x5bc77f8,eax
  4119c9:	push   eax
  4119ca:	ret    0xf5d2
  4119cd:	mov    ah,0xb3
  4119cf:	es mov al,0xb0
  4119d2:	pop    ecx
  4119d3:	lods   eax,DWORD PTR ds:[esi]
  4119d4:	and    eax,0xf13b7ef4
  4119d9:	push   esi
  4119da:	xchg   eax,edx
  4119dc:	cli    
  4119dd:	pusha  
  4119de:	cmp    al,0xb
  4119e0:	xchg   edx,eax
  4119e1:	rcl    BYTE PTR [ebx+0x7cfb4a92],cl
  4119e7:	mov    ebp,ebx
  4119e9:	add    al,0x81
  4119eb:	fmul   QWORD PTR [edi-0x21245a28]
  4119f1:	in     eax,dx
  4119f2:	push   ebx
  4119f3:	cmp    bl,cl
  4119f5:	xchg   esi,eax
  4119f6:	lods   eax,DWORD PTR ds:[esi]
  4119f7:	shr    DWORD PTR [edi-0x60],0xa6
  4119fb:	in     eax,0x16
  4119fd:	sub    ecx,edx
  4119ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a00:	push   eax
  411a01:	sbb    DWORD PTR [ecx+0xf0695ab],ecx
  411a07:	daa    
  411a08:	scas   al,BYTE PTR es:[edi]
  411a09:	push   edi
  411a0a:	adc    eax,0x5f8e8394
  411a0f:	data16 mov BYTE PTR [eax+0x18],bh
  411a13:	sbb    eax,0xa0064837
  411a18:	in     al,dx
  411a19:	pop    ds
  411a1a:	pusha  
  411a1b:	mov    WORD PTR [eax+edx*1+0x13],?
  411a1f:	cmp    eax,0xa07f0ba9
  411a24:	and    edx,DWORD PTR [edx-0x135e2df6]
  411a2a:	and    dh,BYTE PTR [ebx+0x6a]
  411a2d:	jbe    0x411a10
  411a2f:	sar    cl,1
  411a31:	push   es
  411a32:	sar    BYTE PTR [ebp+0x1b],cl
  411a35:	mov    al,ds:0x5db2c42d
  411a3a:	js     0x411a0f
  411a3c:	inc    esp
  411a3d:	pop    ds
  411a3e:	aas    
  411a3f:	push   edx
  411a40:	addr16 add eax,0xe2fff763
  411a46:	(bad)  
  411a47:	enter  0xc7f,0xc7
  411a4b:	les    ebp,FWORD PTR [edi]
  411a4d:	rcr    DWORD PTR [edx],0x1f
  411a50:	jp     0x411a44
  411a52:	xchg   esp,eax
  411a53:	sahf   
  411a54:	mov    esp,?
  411a56:	int    0xf0
  411a58:	inc    edx
  411a59:	(bad)  
  411a5a:	call   0xb5e957a1
  411a5f:	xor    eax,0x60860d85
  411a64:	adc    eax,0x89220214
  411a69:	ds jecxz 0x411a0b
  411a6c:	mov    cl,0xd0
  411a6e:	jmp    0x2897:0x8422519e
  411a75:	xchg   ebx,eax
  411a76:	fistp  QWORD PTR [ecx+eiz*8-0x33]
  411a7a:	sbb    dh,cl
  411a7c:	call   0x4ad452a
  411a81:	ins    DWORD PTR es:[edi],dx
  411a82:	push   0xffffff96
  411a84:	cli    
  411a85:	ins    BYTE PTR es:[edi],dx
  411a86:	mov    ?,WORD PTR [ebx+0x54ea0587]
  411a8c:	aad    0xd8
  411a8e:	inc    esi
  411a8f:	out    0x85,al
  411a91:	in     al,0x6d
  411a93:	ret    
  411a94:	(bad)
  411a97:	outs   dx,DWORD PTR ds:[esi]
  411a98:	pop    ebx
  411a99:	out    0xc6,al
  411a9b:	pop    eax
  411a9c:	call   0x6dc1855b
  411aa1:	cli    
  411aa2:	lea    ebx,[esi-0x1b]
  411aa5:	aas    
  411aa6:	dec    edx
  411aa7:	loopne 0x411aa9
  411aa9:	outs   dx,BYTE PTR ds:[esi]
  411aaa:	loopne 0x411af7
  411aac:	dec    edi
  411aad:	cmp    DWORD PTR [edx+0x2bc26ba6],edx
  411ab3:	das    
  411ab4:	mov    ebx,0xa3112c25
  411ab9:	jp     0x411adc
  411abb:	cmp    DWORD PTR [eax+0x3d291ef4],ebp
  411ac1:	in     eax,dx
  411ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ac3:	rol    ah,0x6e
  411ac6:	mov    edi,0x4279b317
  411acb:	xor    bl,BYTE PTR [esi+0x136f834f]
  411ad1:	pop    eax
  411ad2:	or     eax,ebp
  411ad4:	push   cs
  411ad5:	nop
  411ad6:	loop   0x411ae1
  411ad8:	xchg   edx,eax
  411ad9:	inc    ecx
  411ada:	repz (bad) 
  411adc:	and    DWORD PTR [ebx+0x6180cfcd],esi
  411ae2:	mov    dh,0xa3
  411ae4:	mov    bh,BYTE PTR [esi]
  411ae6:	cli    
  411ae7:	not    DWORD PTR [edi+ecx*1+0xb]
  411aeb:	aad    0x8b
  411aed:	stos   DWORD PTR es:[edi],eax
  411aee:	cmp    al,0x43
  411af0:	mov    bl,0x83
  411af2:	push   esi
  411af3:	mov    BYTE PTR [ebp-0x16f33f36],ch
  411af9:	lds    esp,FWORD PTR [ebx-0x4b0ee03a]
  411aff:	xchg   edi,eax
  411b00:	and    edx,esi
  411b02:	in     eax,dx
  411b03:	and    eax,0xacf405cf
  411b08:	ds pop ds
  411b0a:	mov    ds:0xa440036d,eax
  411b0f:	inc    eax
  411b10:	mov    cl,0xef
  411b12:	jge    0x411b2d
  411b14:	gs push ss
  411b16:	ja     0x411b26
  411b18:	outs   dx,BYTE PTR ds:[esi]
  411b19:	sub    DWORD PTR [edi-0x41],edx
  411b1c:	add    DWORD PTR [esp+edx*4+0x1647d876],eax
  411b23:	push   edx
  411b24:	jge    0x411b72
  411b26:	or     eax,0x6d546740
  411b2b:	add    esp,DWORD PTR [esp+esi*2]
  411b2e:	xor    al,0xac
  411b30:	shl    esi,cl
  411b32:	xchg   ecx,eax
  411b33:	loopne 0x411ba3
  411b35:	les    ebp,FWORD PTR [ecx+eax*1]
  411b38:	jne    0x411b65
  411b3a:	mov    esp,fs
  411b3c:	loop   0x411b2d
  411b3e:	inc    esi
  411b3f:	cld    
  411b40:	xchg   edx,eax
  411b41:	jb     0x411b51
  411b43:	loopne 0x411b56
  411b45:	xchg   esp,eax
  411b46:	js     0x411bc1
  411b48:	pop    ds
  411b49:	and    DWORD PTR [esi],esp
  411b4b:	sahf   
  411b4c:	and    eax,0x190e3a4b
  411b51:	dec    ecx
  411b52:	dec    ebx
  411b53:	cmp    DWORD PTR [edx+0x12],eax
  411b56:	fadd   st,st(1)
  411b58:	xlat   BYTE PTR ds:[ebx]
  411b59:	mov    al,ds:0xed881d07
  411b5e:	sub    DWORD PTR ds:0xb8e637c9,ebp
  411b64:	daa    
  411b65:	or     ebp,DWORD PTR [esi-0x61]
  411b68:	mov    bl,0x72
  411b6a:	ja     0x411b7b
  411b6c:	jle    0x411bda
  411b6e:	inc    ebp
  411b6f:	xchg   esi,eax
  411b70:	jo     0x411b5e
  411b72:	mov    eax,ds:0x1c027573
  411b77:	mov    es:0x7b6b229c,eax
  411b7d:	ins    BYTE PTR es:[edi],dx
  411b7e:	push   cs
  411b7f:	scas   al,BYTE PTR es:[edi]
  411b80:	out    dx,eax
  411b81:	outs   dx,BYTE PTR ds:[esi]
  411b82:	fcmovnb st,st(1)
  411b84:	xor    al,0x70
  411b86:	cmc    
  411b87:	std    
  411b88:	gs fcomp st(4)
  411b8b:	inc    edx
  411b8c:	inc    edx
  411b8d:	mov    esi,0x87ab9092
  411b92:	xor    edi,edi
  411b94:	retf   0x8083
  411b97:	jge    0x411bed
  411b99:	aad    0xe2
  411b9b:	and    edi,edx
  411b9d:	jecxz  0x411b5f
  411b9f:	enterw 0x8d1e,0xe2
  411ba4:	adc    eax,0x3f852d53
  411ba9:	push   0xf5ad26ff
  411bae:	xchg   DWORD PTR [ebp-0x36],esp
  411bb1:	mul    BYTE PTR [ebx-0x7bba3ddd]
  411bb7:	or     DWORD PTR [edx],ebx
  411bb9:	add    edi,DWORD PTR [ebx+0x4e858a7d]
  411bbf:	mov    fs,edi
  411bc1:	je     0x411b6f
  411bc3:	in     eax,dx
  411bc4:	mov    WORD PTR [ebp+esi*4-0x408d25c4],gs
  411bcb:	sbb    BYTE PTR [edi-0x40],al
  411bce:	inc    ebp
  411bcf:	adc    eax,0x27b264b1
  411bd4:	mov    WORD PTR [esi-0x4a8ce6f],ss
  411bda:	mov    WORD PTR [esi+edi*4-0x1e131536],fs
  411be1:	(bad)  
  411be2:	shl    BYTE PTR [ecx+edi*8],1
  411be5:	not    BYTE PTR [ebx-0x13ffa071]
  411beb:	loopne 0x411bbd
  411bed:	inc    esi
  411bee:	cmp    ebp,edi
  411bf0:	add    ecx,edx
  411bf2:	jecxz  0x411ba4
  411bf4:	adc    edi,ecx
  411bf6:	sub    ebp,ebx
  411bf8:	pop    ecx
  411bf9:	mov    dl,0xdb
  411bfb:	jmp    0xdeb8:0x93f968f3
  411c02:	dec    esi
  411c03:	mov    ah,0xf6
  411c05:	hlt    
  411c06:	ins    BYTE PTR es:[edi],dx
  411c07:	(bad)  
  411c08:	and    DWORD PTR [esi+eax*1-0x13],ebx
  411c0c:	push   es
  411c0d:	jmp    0x75951221
  411c12:	cwde   
  411c13:	cld    
  411c14:	cmp    ebp,DWORD PTR [ecx]
  411c16:	rcr    DWORD PTR [ebx],0x3c
  411c19:	cmp    ah,ah
  411c1b:	nop
  411c1c:	mov    dl,BYTE PTR [eax+0x19]
  411c1f:	les    ebp,FWORD PTR [edx+0x29fafc9]
  411c25:	jne    0x411c2c
  411c27:	(bad)  
  411c28:	fistp  QWORD PTR [ecx-0x334e1ec9]
  411c2e:	or     bh,cl
  411c30:	inc    ecx
  411c31:	inc    esp
  411c32:	push   esi
  411c33:	push   edi
  411c34:	loop   0x411bd6
  411c36:	inc    ecx
  411c37:	cli    
  411c38:	into   
  411c39:	jo     0x411ca4
  411c3b:	lods   al,BYTE PTR ds:[esi]
  411c3c:	add    eax,0x267c6012
  411c41:	and    BYTE PTR [ecx-0x7d],dh
  411c44:	jecxz  0x411be9
  411c46:	retf   
  411c47:	sub    al,dh
  411c49:	cmp    BYTE PTR [eax+0x24],bl
  411c4c:	pop    es
  411c4d:	adc    bh,BYTE PTR [edi]
  411c4f:	add    esp,esp
  411c51:	mov    ebx,0x2404f582
  411c56:	ins    BYTE PTR es:[edi],dx
  411c57:	fadd   QWORD PTR [esi-0x62bfa4ef]
  411c5d:	lds    edi,FWORD PTR [ebp-0x1221f608]
  411c63:	mov    ds:0xc398de19,eax
  411c68:	out    dx,al
  411c69:	jae    0x411c64
  411c6b:	in     eax,dx
  411c6c:	mov    DWORD PTR [eax-0x4612361c],edi
  411c72:	add    DWORD PTR [edi],eax
  411c74:	retf   
  411c75:	outs   dx,DWORD PTR ds:[esi]
  411c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c77:	leave  
  411c78:	shl    DWORD PTR [eax-0x64],1
  411c7b:	dec    edi
  411c7c:	nop
  411c7d:	sahf   
  411c7e:	sbb    BYTE PTR [esi-0x45fbf2be],0x1
  411c85:	jmp    0x411cf6
  411c87:	adc    ch,BYTE PTR [ebp-0x4d1da5b8]
  411c8d:	jg     0x411cd1
  411c8f:	jg     0x411ca5
  411c91:	loope  0x411cfc
  411c93:	scas   eax,DWORD PTR es:[edi]
  411c94:	mov    dh,0x12
  411c96:	out    dx,al
  411c97:	inc    edx
  411c98:	(bad)  
  411c99:	es mov esi,0x16941ffe
  411c9f:	pushf  
  411ca0:	test   al,0x15
  411ca2:	(bad)  
  411ca3:	aas    
  411ca4:	jle    0x411c60
  411ca6:	sbb    al,0xd
  411ca8:	sbb    BYTE PTR cs:[eax-0x38],bl
  411cac:	test   al,0x94
  411cae:	jae    0x411cbb
  411cb0:	jle    0x411d0c
  411cb2:	imul   BYTE PTR [eax]
  411cb4:	add    eax,0xb9abf3b4
  411cb9:	dec    eax
  411cba:	fild   DWORD PTR [esi+0x28]
  411cbd:	sub    ebx,DWORD PTR [ecx-0x50]
  411cc0:	icebp  
  411cc1:	(bad)  
  411cc2:	xchg   esp,eax
  411cc3:	inc    edi
  411cc4:	inc    eax
  411cc5:	mov    BYTE PTR [ecx],0x8b
  411cc8:	cmp    DWORD PTR [esi],0xfffffff6
  411ccb:	mov    edi,0x295a73e3
  411cd0:	pop    ebp
  411cd1:	pusha  
  411cd2:	sbb    BYTE PTR [edx-0x5492cf34],ch
  411cd8:	hlt    
  411cd9:	js     0x411c5e
  411cdb:	mov    ds:0x80b223cd,eax
  411ce0:	jae    0x411d05
  411ce2:	cli    
  411ce3:	lods   al,BYTE PTR ds:[esi]
  411ce4:	aas    
  411ce5:	and    al,0x89
  411ce7:	mov    eax,0x644a8a34
  411cec:	call   0xc40ff242
  411cf1:	mov    cs,WORD PTR [ecx]
  411cf3:	lods   al,BYTE PTR ds:[esi]
  411cf4:	int3   
  411cf5:	int    0x22
  411cf7:	xchg   DWORD PTR [ebx-0xe],ecx
  411cfa:	scas   eax,DWORD PTR es:[di]
  411cfc:	xor    al,0x36
  411cfe:	(bad)  
  411cff:	aam    0xdf
  411d01:	inc    esi
  411d02:	arpl   WORD PTR [esi-0x4d],sp
  411d05:	xor    eax,0x4e36b5c6
  411d0a:	xor    edx,DWORD PTR ds:0xfec43108
  411d10:	jg     0x411ccc
  411d12:	and    al,0x7a
  411d14:	stc    
  411d15:	je     0x411d82
  411d17:	mov    esp,DWORD PTR [edi-0x5056f647]
  411d1d:	(bad)  
  411d1e:	jge    0x411cdf
  411d20:	push   es
  411d21:	jge    0x411d4b
  411d23:	int3   
  411d24:	arpl   di,si
  411d26:	jmp    0x84d4:0xe35b1217
  411d2d:	xor    ch,bl
  411d2f:	ret    0x2e01
  411d32:	and    DWORD PTR [edx+ecx*4],edi
  411d35:	cwde   
  411d36:	mov    ecx,0xa8e7fc8f
  411d3b:	dec    ecx
  411d3c:	jb     0x411dbd
  411d3e:	repz dec edi
  411d40:	mov    ah,0x73
  411d42:	je     0x411ccc
  411d44:	mov    edi,0x239b15cd
  411d49:	xchg   esi,eax
  411d4a:	push   edx
  411d4b:	int    0x28
  411d4d:	not    DWORD PTR [esi+0x518a2757]
  411d53:	cli    
  411d54:	fld    TBYTE PTR [ebx]
  411d56:	sub    eax,ecx
  411d58:	dec    esi
  411d59:	(bad)  
  411d5a:	mov    dl,0x7f
  411d5c:	popf   
  411d5d:	xchg   DWORD PTR [edi-0x27],esp
  411d60:	dec    ebx
  411d61:	xchg   esp,eax
  411d62:	lods   eax,DWORD PTR ds:[esi]
  411d63:	inc    eax
  411d64:	test   al,0xd9
  411d66:	loopne 0x411d96
  411d68:	and    BYTE PTR [esi],0xaa
  411d6b:	mov    edi,DWORD PTR [esi+edx*2]
  411d6e:	or     edx,DWORD PTR [ebx+edi*1+0x4d]
  411d72:	ds push 0x1b
  411d75:	push   0x13
  411d77:	jge    0x411d72
  411d79:	ds mov bl,0xac
  411d7c:	shl    DWORD PTR [edi+0x3ad6e6e9],0xfc
  411d83:	jp     0x411d9b
  411d85:	pusha  
  411d86:	pop    es
  411d87:	fst    DWORD PTR [ecx+ecx*4-0x13]
  411d8b:	push   ecx
  411d8c:	dec    edx
  411d8d:	and    ecx,ecx
  411d8f:	mov    eax,0xe6d4db16
  411d94:	push   edi
  411d95:	inc    eax
  411d96:	out    0x92,al
  411d98:	sbb    al,0x10
  411d9a:	push   eax
  411d9b:	jo     0x411dd6
  411d9d:	imul   ebp,DWORD PTR [ebx],0xca3b980a
  411da3:	jb     0x40f9d0
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412035:	mov    ds:0xa139c927,al
  41203a:	fild   WORD PTR [ebp-0x72]
  41203d:	inc    dx
  41203f:	xor    cl,bl
  412041:	and    BYTE PTR [esi+ebp*8+0x1],bh
  412045:	add    BYTE PTR [eax],al
  412047:	add    BYTE PTR [ebx+0x3a],al
  41204a:	pop    esp
  41204b:	inc    ebx
  41204c:	jne    0x4120c0
  41204e:	jb     0x4120b5
  412050:	outs   dx,BYTE PTR ds:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	add    cl,BYTE PTR [ecx+edx*4+0xd47951]
  415645:	add    bl,dh
  415647:	add    al,0x0
  415649:	add    BYTE PTR [ecx],dl
  41564b:	jb     0x415682
  41564d:	cld    
  41564e:	mov    ecx,0xb1dedc0d
  415653:	test   eax,0x90997e36
  415658:	xchg   esp,eax
  415659:	pop    ds
  41565a:	mov    dh,BYTE PTR [ebx-0x20e994d7]
  415660:	lds    edi,FWORD PTR [esi]
  415662:	and    BYTE PTR [ecx-0x6c],bh
  415665:	ds pop ebx
  415667:	xor    al,0xf9
  415669:	adc    bl,dh
  41566b:	sub    ah,BYTE PTR [edx+0x3032d6fa]
  415671:	adc    bh,ch
  415673:	mov    cl,0xfa
  415675:	dec    ebp
  415676:	mov    ds:0x307247e4,al
  41567b:	out    dx,eax
  41567c:	ja     0x4156ec
  41567e:	add    DWORD PTR [ebp-0x4c],edx
  415681:	shr    BYTE PTR [ebp+esi*8-0x60],0xb1
  415686:	and    BYTE PTR gs:[ebp+0x32298839],al
  41568d:	xchg   ecx,eax
  41568e:	add    DWORD PTR [esi],ebp
  415690:	(bad)  
  415691:	cmp    esi,DWORD PTR [edx-0x13]
  415694:	icebp  
  415695:	xor    eax,0x6d54a547
  41569a:	int    0xd6
  41569c:	(bad)  
  41569d:	(bad)  
  41569e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41569f:	arpl   bp,ax
  4156a1:	mov    esp,0x9e93aa30
  4156a6:	imul   eax,ebx,0x90ae3bcc
  4156ac:	les    ebx,FWORD PTR [edi+eiz*4-0xcfc7549]
  4156b3:	inc    esi
  4156b4:	mov    edx,0x85084289
  4156b9:	popa   
  4156ba:	inc    ecx
  4156bb:	pushf  
  4156bc:	out    0x5,eax
  4156be:	lock mov ah,BYTE PTR [ecx]
  4156c1:	push   esi
  4156c2:	xor    al,BYTE PTR [ebx+ecx*1+0x2075077c]
  4156c9:	js     0x4156fe
  4156cb:	pop    ecx
  4156cc:	sub    ch,BYTE PTR [edi+0x5a6b087b]
  4156d2:	popf   
  4156d3:	xchg   BYTE PTR [edx-0x3d9135cb],ah
  4156d9:	mov    bl,0xad
  4156db:	or     al,0xaa
  4156dd:	and    al,0x6a
  4156df:	push   ebx
  4156e0:	fsub   QWORD PTR [esi]
  4156e2:	jns    0x4156bd
  4156e4:	mov    dl,0x23
  4156e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156e7:	push   ss
  4156e8:	in     eax,dx
  4156e9:	or     al,0xd8
  4156eb:	call   0x15126d9c
  4156f0:	les    eax,FWORD PTR [edi]
  4156f2:	and    eax,0x6b07d696
  4156f7:	fisttp WORD PTR [ebp-0x4d]
  4156fa:	lods   al,BYTE PTR ds:[esi]
  4156fc:	imul   esp,DWORD PTR [eax],0x2d
  4156ff:	push   es
  415700:	mov    ah,0x8a
  415702:	add    esi,edi
  415704:	lea    ebx,[esi+0x5fe54d26]
  41570a:	pop    edi
  41570b:	xchg   esp,eax
  41570c:	cmp    al,0xbc
  41570e:	jmp    0xdf90d920
  415713:	imul   ebx,ebx,0x6c
  415716:	jne    0x4156c7
  415718:	(bad)  
  415719:	pop    ecx
  41571a:	stos   BYTE PTR es:[edi],al
  41571b:	jge    0x4156a5
  41571d:	(bad)
  415721:	outs   dx,BYTE PTR ss:[esi]
  415723:	mov    bl,0x9c
  415725:	call   0xada2:0x2b9a26b6
  41572c:	inc    esp
  41572d:	jae    0x4156d1
  41572f:	sbb    eax,0xf3887db9
  415734:	add    eax,0xc0683591
  415739:	dec    esi
  41573a:	sti    
  41573b:	mov    ds:0x8f35f5c1,eax
  415740:	pushf  
  415741:	jnp    0x4156d2
  415743:	xchg   BYTE PTR [ebx+0x5f51cb96],bl
  415749:	or     al,0x29
  41574b:	xchg   esi,eax
  41574c:	fld    QWORD PTR [ebp+0x1f219151]
  415752:	jb     0x41575e
  415754:	out    0x0,eax
  415756:	mov    ah,0x19
  415758:	sub    DWORD PTR [esi],esi
  41575a:	sbb    ebp,DWORD PTR [edi-0x8]
  41575d:	mov    ?,WORD PTR [ebx]
  41575f:	retf   
  415760:	popa   
  415761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415762:	inc    eax
  415763:	xor    DWORD PTR [edi+edx*8+0xb],esp
  415767:	and    edx,edx
  415769:	pop    eax
  41576a:	jns    0x415701
  41576c:	cwde   
  41576d:	cmp    eax,0xf5425748
  415772:	sub    esi,DWORD PTR [ecx]
  415774:	mov    cl,0x53
  415776:	pop    es
  415777:	dec    ecx
  415778:	mov    edi,0x34137c7
  41577d:	inc    ecx
  41577e:	imul   edi,DWORD PTR [edx-0x20],0xffffffb2
  415782:	push   ebx
  415783:	ss test al,0xac
  415786:	popf   
  415787:	lods   al,BYTE PTR ds:[esi]
  415788:	test   esp,esi
  41578a:	out    0x14,eax
  41578c:	stos   BYTE PTR es:[edi],al
  41578d:	pushf  
  41578e:	mov    ss,esi
  415790:	fisubr DWORD PTR ds:0x2f7947a5
  415796:	in     eax,0x37
  415798:	and    eax,0xa2a3315b
  41579d:	sbb    BYTE PTR [ecx+edi*4],al
  4157a0:	sbb    edx,ecx
  4157a2:	jno    0x4157bc
  4157a4:	dec    ebp
  4157a5:	xchg   ecx,eax
  4157a6:	push   esi
  4157a7:	cmp    esp,ebx
  4157a9:	mov    ebx,0xa0ef3030
  4157ae:	jmp    FWORD PTR [ecx+0x65]
  4157b1:	in     al,0x97
  4157b3:	mov    ch,0xaf
  4157b5:	mov    al,ds:0xbb784fff
  4157ba:	imul   esp,eax,0xd
  4157bd:	mov    BYTE PTR [esi],ah
  4157bf:	and    dh,BYTE PTR [eax-0x76839d8a]
  4157c5:	and    eax,0x40e6c3bb
  4157ca:	daa    
  4157cb:	addr16 test eax,0xa2326e95
  4157d1:	test   eax,0x16287b20
  4157d6:	add    DWORD PTR [eax-0x6a],ebx
  4157d9:	add    DWORD PTR [ebx+0x45],0xffffff86
  4157dd:	mov    ebx,0xeac09ec4
  4157e2:	(bad)  
  4157e3:	pop    edi
  4157e4:	push   cs
  4157e5:	push   edx
  4157e6:	or     DWORD PTR [eax],ebx
  4157e8:	retf   
  4157e9:	dec    esi
  4157ea:	add    BYTE PTR [edx],dh
  4157ec:	out    dx,eax
  4157ed:	outs   dx,DWORD PTR ds:[esi]
  4157ee:	mov    ch,ch
  4157f0:	in     al,0x65
  4157f2:	dec    esp
  4157f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157f4:	cwde   
  4157f5:	mov    bh,0x0
  4157f7:	jmp    DWORD PTR [esi+0x2f]
  4157fa:	aas    
  4157fb:	jge    0x4157f9
  4157fd:	imul   eax,DWORD PTR [ecx+0x62],0x8db7b165
  415804:	test   eax,0xafed07f9
  415809:	aad    0x26
  41580b:	and    DWORD PTR [esi-0x17],esi
  41580e:	arpl   WORD PTR [edi+eax*4+0x423eda0a],bx
  415815:	push   esp
  415816:	xchg   edi,eax
  415817:	outs   dx,DWORD PTR ds:[esi]
  415818:	xchg   DWORD PTR [edx+0x40dca4f4],ebx
  41581e:	mov    BYTE PTR [edi],0x88
  415821:	hlt    
  415822:	mov    ebx,gs
  415824:	shl    eax,1
  415826:	push   eax
  415827:	arpl   WORD PTR cs:[ebx+0x5201eef6],ax
  41582e:	push   0x48
  415830:	dec    esp
  415831:	jp     0x415811
  415833:	int    0x69
  415835:	mov    ebx,0x7d71bfd
  41583a:	cmp    bh,0x9a
  41583d:	push   eax
  41583e:	adc    dh,cl
  415840:	push   es
  415841:	ret    
  415842:	mov    edi,0x4643269c
  415847:	inc    ecx
  415848:	in     eax,dx
  415849:	outs   dx,BYTE PTR ds:[esi]
  41584a:	(bad)  
  41584b:	int3   
  41584c:	pop    ecx
  41584d:	mov    ds:0x5ccdbab3,eax
  415852:	push   eax
  415853:	lods   al,BYTE PTR ds:[esi]
  415854:	aaa    
  415855:	pushf  
  415856:	test   dh,ah
  415858:	aaa    
  415859:	adc    DWORD PTR [ebx+0x34],ebp
  41585c:	jle    0x415885
  41585e:	ss and dh,0xd1
  415862:	or     bh,BYTE PTR [ebx]
  415864:	pop    ss
  415865:	add    eax,0x8fff91f9
  41586a:	and    dl,0xc
  41586d:	mov    al,ds:0xd9d41070
  415872:	rcl    DWORD PTR [eax+0x6c],1
  415875:	cs fdiv st,st(7)
  415878:	aam    0xb0
  41587a:	test   eax,0x9717a473
  41587f:	pop    ds
  415880:	ins    BYTE PTR es:[edi],dx
  415881:	cdq    
  415882:	jg     0x41582c
  415884:	stc    
  415885:	jmp    0x41582e
  415887:	dec    eax
  415888:	out    dx,eax
  415889:	dec    ecx
  41588a:	xchg   edi,eax
  41588b:	mov    dl,0xca
  41588d:	add    al,0xd2
  41588f:	fisttp QWORD PTR [ebx+0xe]
  415892:	add    BYTE PTR [ecx+0x26],0xda
  415896:	cmp    eax,0x3f5207a
  41589b:	sub    al,0xc1
  41589d:	jnp    0x41582c
  41589f:	clc    
  4158a0:	ins    DWORD PTR es:[edi],dx
  4158a1:	cld    
  4158a2:	jae    0x4158ff
  4158a4:	ret    
  4158a5:	les    ebp,FWORD PTR [eax+eiz*8]
  4158a8:	mov    bl,0x2
  4158aa:	les    ebp,FWORD PTR [ecx-0x5339ae99]
  4158b0:	cmp    ah,BYTE PTR ds:0xe1d869a1
  4158b6:	rol    esp,1
  4158b8:	mov    al,ds:0x10e925da
  4158bd:	in     eax,dx
  4158be:	cwde   
  4158bf:	dec    esp
  4158c0:	mov    dh,BYTE PTR [ebx+0x76]
  4158c3:	das    
  4158c4:	push   ebx
  4158c5:	out    dx,eax
  4158c6:	aas    
  4158c7:	ins    DWORD PTR es:[edi],dx
  4158c8:	adc    DWORD PTR [edi+0x244b60d9],0xffffffb3
  4158cf:	rol    DWORD PTR [ecx-0x76d611cf],1
  4158d5:	pop    eax
  4158d6:	lds    esi,FWORD PTR [esi]
  4158d8:	mov    ds:0x23f843fa,al
  4158dd:	or     edi,DWORD PTR [esi-0x5b]
  4158e0:	in     al,0x99
  4158e2:	sub    BYTE PTR [ebp-0x695059b8],0xf3
  4158e9:	popf   
  4158ea:	push   es
  4158eb:	enter  0xc6c1,0xfa
  4158ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158f0:	fld    TBYTE PTR [ebx-0x54d40794]
  4158f6:	in     eax,0xd4
  4158f8:	ja     0x41593a
  4158fa:	icebp  
  4158fb:	rol    BYTE PTR [ebx-0x59bd72b4],0x28
  415902:	rcl    DWORD PTR [eax+0x415fc78f],0xd2
  415909:	inc    BYTE PTR ds:0x5a3146a5
  41590f:	popa   
  415910:	sbb    ecx,edi
  415912:	bound  ecx,QWORD PTR [edi+0x7100861e]
  415918:	mov    ds:0x94cd0e70,al
  41591d:	out    0xcb,al
  41591f:	outs   dx,BYTE PTR ds:[esi]
  415920:	xor    eax,0x76702700
  415925:	aas    
  415926:	lock pushf 
  415928:	dec    esi
  415929:	xor    DWORD PTR [edx-0x35],0xfffffff1
  41592d:	xor    ah,cl
  41592f:	jle    0x415931
  415931:	xor    edx,DWORD PTR [ecx]
  415933:	(bad)  
  415934:	mov    al,0xb3
  415936:	sbb    al,BYTE PTR [edx-0x19]
  415939:	leave  
  41593a:	jle    0x4158cc
  41593c:	cmp    BYTE PTR [edx+0x411cadd5],ch
  415942:	pop    edx
  415943:	sbb    al,dh
  415945:	div    BYTE PTR [esi+eax*4-0x36]
  415949:	pusha  
  41594a:	(bad)  
  41594b:	jge    0x415985
  41594d:	xchg   BYTE PTR [esi],cl
  41594f:	inc    esp
  415950:	pop    ebp
  415951:	ins    DWORD PTR es:[edi],dx
  415952:	sbb    DWORD PTR [ebx+esi*8-0x35],ebx
  415956:	hlt    
  415957:	mov    DWORD PTR [ecx+0x76578928],ecx
  41595d:	fisub  WORD PTR [edx+0x258e30d8]
  415963:	jnp    0x4159a1
  415965:	xchg   edi,eax
  415966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415967:	les    edi,FWORD PTR [ebx-0x4]
  41596a:	add    DWORD PTR ds:0x2a7ff7e8,edx
  415970:	(bad)  
  415971:	aas    
  415972:	fs and ah,dh
  415975:	fs jmp 0xd42404da
  41597b:	xchg   ebp,eax
  41597c:	pushf  
  41597d:	cmp    eax,0x2b6db2f4
  415982:	inc    ebx
  415983:	fstp   QWORD PTR [esi+0xa]
  415986:	mov    bh,0x84
  415988:	push   0x8c863aa9
  41598d:	add    eax,0xadbf3799
  415992:	and    BYTE PTR [esi+0x56],al
  415995:	imul   ebp,DWORD PTR [ecx],0x22c8e4b8
  41599b:	mov    ebx,0xff79f756
  4159a0:	je     0x4159a6
  4159a2:	fptan  
  4159a4:	xchg   ebp,eax
  4159a5:	push   ss
  4159a6:	jbe    0x4159b6
  4159a8:	or     DWORD PTR [edx+0x75],edx
  4159ab:	mov    edi,DWORD PTR [eax+0x499abe63]
  4159b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159b2:	cmp    ebp,esi
  4159b4:	enter  0x5229,0x63
  4159b8:	xor    eax,0x962be5ef
  4159bd:	call   0xed2b:0xb3aec032
  4159c4:	cmp    al,0x20
  4159c6:	aam    0x26
  4159c8:	mov    al,0xd1
  4159ca:	addr16 add eax,0x43570513
  4159d0:	addr16 test eax,0x6a2ff1d5
  4159d6:	js     0x4159d7
  4159d8:	xor    al,dl
  4159da:	inc    edi
  4159db:	das    
  4159dc:	iret   
  4159dd:	mov    ds:0xfb4aa48d,eax
  4159e2:	add    DWORD PTR [ecx+0x6d],ebx
  4159e5:	repz adc al,0xeb
  4159e8:	out    0xa9,eax
  4159ea:	loop   0x4159af
  4159ec:	cmc    
  4159ed:	aaa    
  4159ee:	mov    ch,0xe5
  4159f0:	in     ax,dx
  4159f2:	mul    esi
  4159f4:	or     al,0x2b
  4159f6:	pusha  
  4159f7:	or     BYTE PTR [edi-0x2c],0x73
  4159fb:	fs pop ecx
  4159fd:	mov    edi,0x7110dde9
  415a02:	sub    edx,ecx
  415a04:	leave  
  415a05:	push   ss
  415a06:	sub    ah,cl
  415a08:	out    0x20,al
  415a0a:	push   esp
  415a0b:	pop    esp
  415a0c:	sub    eax,0xa5fe301e
  415a11:	cwde   
  415a12:	jbe    0x415a7a
  415a14:	iret   
  415a15:	adc    eax,eax
  415a17:	mov    ebx,0x2c1e44e1
  415a1c:	mov    eax,ds:0xc646d97f
  415a21:	aam    0x72
  415a23:	push   0x9a775151
  415a28:	mov    edi,0x3ef9dd8a
  415a2d:	jo     0x415aa5
  415a2f:	mov    bl,BYTE PTR [esi+ebx*2+0x2b]
  415a33:	int3   
  415a34:	add    eax,0x5b602fb7
  415a39:	bound  ebp,QWORD PTR [esi-0x58]
  415a3c:	xor    dh,BYTE PTR [eax]
  415a3e:	repnz fisttp QWORD PTR [edx+0x6a]
  415a42:	jge    0x415a8f
  415a44:	sub    cl,BYTE PTR [ebp+0x26]
  415a47:	or     DWORD PTR [edi],ecx
  415a49:	xor    al,0xce
  415a4b:	pop    DWORD PTR [esi]
  415a4d:	sub    eax,0xdef03cf7
  415a52:	cdq    
  415a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a54:	or     DWORD PTR [edx-0x5f880938],eax
  415a5a:	dec    edx
  415a5b:	inc    ebp
  415a5c:	imul   edi,DWORD PTR [eax],0xb5c10dbd
  415a62:	xchg   edi,eax
  415a63:	jno    0x415a97
  415a65:	jne    0x415a9c
  415a67:	aad    0xfa
  415a69:	pop    ebp
  415a6a:	mov    ah,0xc
  415a6c:	std    
  415a6d:	std    
  415a6e:	inc    eax
  415a6f:	je     0x415a7c
  415a71:	and    BYTE PTR [edx],dl
  415a73:	cli    
  415a74:	jp     0x415a02
  415a76:	add    DWORD PTR [ebx-0x4d],0x9ab89565
  415a7d:	imul   edi,DWORD PTR [eax+0x4e82179f],0x29f67f99
  415a87:	xchg   esi,eax
  415a88:	adc    esp,DWORD PTR [ecx]
  415a8a:	gs std 
  415a8c:	mov    ebp,0xd65a71f9
  415a91:	adc    al,0x7b
  415a93:	inc    edx
  415a94:	xor    BYTE PTR [edx-0x766eaa91],cl
  415a9a:	rcr    DWORD PTR es:[edx-0x2b],cl
  415a9e:	sahf   
  415a9f:	inc    edx
  415aa0:	xchg   edx,eax
  415aa1:	ficomp DWORD PTR [eax+0x76]
  415aa4:	sahf   
  415aa5:	lahf   
  415aa6:	add    eax,0xb745c27c
  415aab:	daa    
  415aac:	loope  0x415b1e
  415aae:	xor    BYTE PTR [edi],al
  415ab0:	ins    BYTE PTR es:[edi],dx
  415ab1:	out    dx,eax
  415ab2:	call   0x3397de58
  415ab7:	inc    ebp
  415ab8:	and    edi,DWORD PTR [edx+0x5c004716]
  415abe:	pop    ecx
  415abf:	sar    DWORD PTR [esi],0x72
  415ac2:	mov    eax,ds:0x9af25c6a
  415ac7:	add    al,al
  415ac9:	mov    dl,0x34
  415acb:	adc    bh,ah
  415acd:	cdq    
  415ace:	aas    
  415acf:	fnstcw WORD PTR [eax-0x73]
  415ad2:	push   ss
  415ad3:	push   0x5f15f00a
  415ad8:	jns    0x415a7f
  415ada:	jg     0x415b1c
  415adc:	push   ebx
  415add:	iret   
  415ade:	sbb    dl,BYTE PTR [ebx-0x34712e73]
  415ae4:	cwde   
  415ae5:	into   
  415ae6:	xor    dl,cl
  415ae8:	in     al,dx
  415ae9:	pop    edi
  415aea:	mov    cl,0x6c
  415aec:	test   DWORD PTR [ebp+ebx*1-0x17],ebp
  415af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af1:	retf   
  415af2:	or     dl,BYTE PTR [ebx+0x3e]
  415af5:	adc    DWORD PTR [edx],esp
  415af7:	repz cmp al,0xa3
  415afa:	sub    dh,BYTE PTR [ecx+ebx*4-0x561d208e]
  415b01:	xchg   esi,eax
  415b02:	leave  
  415b03:	into   
  415b04:	inc    ecx
  415b05:	push   0x47
  415b07:	mov    ch,0xc9
  415b09:	(bad)  
  415b0a:	mov    al,0xd4
  415b0c:	pop    esp
  415b0d:	ds lahf 
  415b0f:	sbb    eax,0xc853c1ff
  415b14:	cli    
  415b15:	adc    al,0x4f
  415b17:	push   ecx
  415b18:	sub    DWORD PTR [esi-0xc],0x24da71eb
  415b1f:	(bad)  
  415b20:	jge    0x415af3
  415b22:	bnd jnp 0x415ac8
  415b25:	xchg   ebp,eax
  415b26:	jbe    0x415b1a
  415b28:	add    ah,bh
  415b2a:	inc    ebp
  415b2b:	add    eax,0x327db818
  415b30:	test   eax,0xfe6c91a9
  415b35:	cmp    al,0x48
  415b37:	jle    0x415aea
  415b39:	or     bh,BYTE PTR [ebx-0x34]
  415b3c:	jbe    0x415b3e
  415b3e:	add    BYTE PTR [eax],al
  415b40:	add    BYTE PTR [eax],al
  415b42:	rcl    BYTE PTR [esi],0x80
  415b45:	pop    ebx
  415b46:	(bad)  
  415b47:	(bad)  
  415b49:	lahf   
  415b4a:	jg     0x415ae1
  415b4c:	gs (bad) 
  415b4f:	fs dec edx
  415b51:	pop    esp
  415b52:	ins    BYTE PTR es:[edi],dx
  415b53:	fld    DWORD PTR [eax]
  415b55:	add    bl,dh
  415b57:	add    al,0x0
  415b59:	add    bl,al
  415b5b:	call   DWORD PTR [eax+eiz*4+0x29a5ccc7]
  415b62:	stc    
  415b63:	gs aad 0x98
  415b66:	inc    edx
  415b67:	xchg   ebx,eax
  415b68:	dec    edx
  415b69:	arpl   WORD PTR [ebp-0x67178bea],si
  415b6f:	in     al,dx
  415b70:	add    ebx,ebx
  415b72:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  415b74:	test   BYTE PTR [ebx],ch
  415b76:	cli    
  415b77:	addr16 jge 0x415b7d
  415b7a:	call   0x8634408b
  415b7f:	xchg   edx,eax
  415b80:	or     ch,BYTE PTR [ebx+0x6961c48f]
  415b86:	das    
  415b87:	popf   
  415b88:	jl     0x415b6c
  415b8a:	retf   0x34b7
  415b8d:	out    dx,eax
  415b8e:	mov    edi,0x865e5d0a
  415b93:	lods   al,BYTE PTR ds:[esi]
  415b94:	inc    esp
  415b95:	adc    DWORD PTR [ecx+0x6a],edx
  415b98:	test   DWORD PTR [esi-0x795c048f],ecx
  415b9e:	pop    DWORD PTR [edi+0xf]
  415ba1:	mov    ds:0xf1e6b804,eax
  415ba6:	mov    dh,dl
  415ba8:	daa    
  415ba9:	mov    ecx,0x3e506ef
  415bae:	and    eax,0x8adfecc6
  415bb3:	xor    dl,BYTE PTR [ecx+0x58185522]
  415bb9:	jle    0x415ba8
  415bbb:	pop    edi
  415bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bbd:	adc    BYTE PTR [esi],ch
  415bbf:	jnp    0x415bba
  415bc1:	add    ebp,DWORD PTR ds:0x637c2dd3
  415bc7:	xor    ebp,DWORD PTR [esi]
  415bc9:	lea    ebp,[edi-0x3305b9a6]
  415bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bd0:	dec    ecx
  415bd1:	out    dx,al
  415bd2:	dec    ecx
  415bd3:	pop    ebp
  415bd4:	cwde   
  415bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bd6:	leave  
  415bd7:	or     al,dh
  415bd9:	pop    ecx
  415bda:	mov    ds:0xb6a8ad43,al
  415bdf:	inc    bx
  415be1:	fidiv  WORD PTR [ebp-0x1e]
  415be4:	and    eax,0xaf1ccbf5
  415be9:	cmp    al,0x9d
  415beb:	test   al,0x3b
  415bed:	or     al,0xc4
  415bef:	pop    ebp
  415bf0:	inc    ecx
  415bf1:	repz mov bl,0x3
  415bf4:	sbb    DWORD PTR [ebx+0x15a0304d],eax
  415bfa:	bound  ecx,QWORD PTR [eax]
  415bfc:	xchg   esi,eax
  415bfd:	test   DWORD PTR [esi-0x10],edx
  415c00:	mov    eax,0x4fe7f6e3
  415c05:	push   ecx
  415c06:	repnz cmp dh,BYTE PTR [eax]
  415c09:	pop    ss
  415c0a:	je     0x415c1c
  415c0c:	rcr    ebp,0xd6
  415c0f:	sub    DWORD PTR [ecx-0x3e],eax
  415c12:	aas    
  415c13:	or     al,BYTE PTR [ebx-0x5]
  415c16:	dec    edx
  415c17:	jo     0x415c08
  415c19:	test   al,0xdd
  415c1b:	sar    BYTE PTR [edi-0x70],1
  415c1e:	mov    bl,0xf2
  415c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c21:	push   ss
  415c22:	mov    dl,0x1
  415c24:	mov    DWORD PTR [ebp-0x6b799d2d],0x24cf7be3
  415c2e:	mov    edi,0xbb4c7cd4
  415c33:	sahf   
  415c34:	mov    eax,0x1bfbe4ea
  415c39:	enter  0xd6f0,0x17
  415c3d:	ret    
  415c3e:	xor    BYTE PTR [eax],0xbd
  415c41:	call   0x74a7:0x59239e3f
  415c48:	int3   
  415c49:	mov    esi,0x6a8417da
  415c4e:	fdivr  st,st(7)
  415c50:	shr    BYTE PTR [ebx+0x1bc8e724],0x52
  415c57:	xor    esi,ecx
  415c59:	adc    eax,0x8041d274
  415c5e:	(bad)  [eax]
  415c60:	mov    es,WORD PTR [edx]
  415c62:	sub    al,BYTE PTR [ecx]
  415c64:	cdq    
  415c65:	(bad)  
  415c67:	xor    DWORD PTR [ecx+0x5a4c9094],edx
  415c6d:	push   esp
  415c6e:	popa   
  415c6f:	not    al
  415c71:	sbb    al,0x84
  415c73:	add    al,0xd9
  415c75:	aad    0x9d
  415c77:	sbb    bl,ch
  415c79:	aas    
  415c7a:	aam    0xc6
  415c7c:	stc    
  415c7d:	sbb    DWORD PTR [esi],edi
  415c7f:	ins    DWORD PTR es:[edi],dx
  415c80:	loop   0x415c71
  415c82:	or     BYTE PTR ds:0x247b2be3,ch
  415c88:	ins    DWORD PTR es:[edi],dx
  415c89:	(bad)  
  415c8a:	int3   
  415c8b:	push   edx
  415c8c:	sub    al,0xa
  415c8e:	fsubr  QWORD PTR [ebp-0x12]
  415c91:	mov    esi,0xc96f93fc
  415c96:	pop    es
  415c97:	vpsraw ymm2,ymm5,XMMWORD PTR [edi-0x5d555dea]
  415c9f:	xchg   BYTE PTR [edi-0x5884082c],dl
  415ca5:	pop    ss
  415ca6:	push   0xffffff8e
  415ca8:	test   al,0x72
  415caa:	push   esi
  415cab:	lods   al,BYTE PTR ds:[esi]
  415cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cad:	mov    edx,0x70a5b216
  415cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cb3:	stc    
  415cb4:	fnsave [ebp-0x74]
  415cb7:	stc    
  415cb8:	or     BYTE PTR [ecx+0xa],bl
  415cbb:	push   ss
  415cbc:	xor    esp,DWORD PTR [ecx+edi*8+0x31]
  415cc0:	adc    BYTE PTR [ecx-0x44],dh
  415cc3:	(bad)  
  415cc4:	pusha  
  415cc5:	(bad)  ds:0xcfe396e8
  415ccb:	inc    ebx
  415ccc:	jecxz  0x415c59
  415cce:	mov    ecx,0x536f9bae
  415cd3:	rol    dh,1
  415cd5:	adc    DWORD PTR [ebp-0x6],edx
  415cd8:	rcl    BYTE PTR [edi+0x67],1
  415cdb:	mov    ebx,0x81926daf
  415ce0:	les    edx,FWORD PTR [esp+eax*1]
  415ce3:	je     0x415ca8
  415ce5:	push   ds
  415ce6:	xor    cl,bl
  415ce8:	pop    ecx
  415ce9:	mov    ebp,0xea9585e6
  415cee:	iret   
  415cef:	dec    ebx
  415cf0:	add    bl,bl
  415cf2:	mov    edx,0x3342ae7b
  415cf7:	sbb    al,0x3a
  415cf9:	pop    ss
  415cfa:	lods   eax,DWORD PTR ds:[esi]
  415cfb:	mov    ah,0xcb
  415cfd:	(bad)
  415d00:	arpl   ax,dx
  415d02:	shr    eax,1
  415d04:	inc    edi
  415d05:	jmp    0x415cc2
  415d07:	fadd   QWORD PTR [ebp+0xd]
  415d0a:	fucomi st,st(5)
  415d0c:	outs   dx,DWORD PTR ds:[esi]
  415d0d:	aas    
  415d0e:	mov    edx,0xf6668f46
  415d13:	mov    eax,ds:0xb16ba059
  415d18:	(bad)
  415d1d:	adc    eax,0x88bee90d
  415d22:	mov    eax,ds:0xa2ef3497
  415d27:	mov    eax,ds:0xd7a941c2
  415d2c:	mov    ebx,DWORD PTR [edx-0x5f6179b3]
  415d32:	mov    dl,0x6b
  415d34:	aas    
  415d35:	jg     0x415cf4
  415d37:	jmp    0xf44d:0xd9c5af19
  415d3e:	cmp    ah,ah
  415d40:	loop   0x415d03
  415d42:	xor    eax,0x1fd56ce2
  415d47:	adc    ebx,esp
  415d49:	push   es
  415d4a:	shr    BYTE PTR [edx-0x7fa93856],1
  415d50:	add    dl,BYTE PTR [edi-0xc2edfe7]
  415d56:	in     eax,0xf1
  415d58:	dec    ecx
  415d59:	xor    bl,BYTE PTR [edi+edi*1]
  415d5c:	out    dx,al
  415d5d:	push   es
  415d5e:	dec    edx
  415d5f:	xlat   BYTE PTR ds:[ebx]
  415d60:	mov    esp,0xbaeab750
  415d65:	adc    BYTE PTR [ecx-0x4288c7a9],dl
  415d6b:	imul   esp,DWORD PTR [ebx+0x6becc251],0x6ab1d042
  415d75:	je     0x415d8d
  415d77:	dec    ebp
  415d78:	clc    
  415d79:	fcomi  st,st(6)
  415d7b:	shl    cl,0xb8
  415d7e:	mov    bh,dh
  415d80:	pop    eax
  415d81:	jae    0x415d5c
  415d83:	mov    edx,DWORD PTR [eax+0x30]
  415d86:	cmc    
  415d87:	arpl   WORD PTR [eax],cx
  415d89:	xlat   BYTE PTR ds:[ebx]
  415d8a:	dec    ebx
  415d8b:	push   cs
  415d8c:	mov    edx,0xd577a96f
  415d91:	fwait
  415d92:	cmp    BYTE PTR [esi-0x7952189c],dl
  415d98:	pop    ebp
  415d99:	es ins BYTE PTR es:[edi],dx
  415d9b:	int3   
  415d9c:	scas   eax,DWORD PTR es:[edi]
  415d9d:	shl    ah,0xde
  415da0:	mov    ds:0xe076b3d1,al
  415da5:	xchg   ebx,eax
  415da6:	js     0x415d6c
  415da8:	mov    ebp,0xbafd6071
  415dad:	inc    eax
  415dae:	ja     0x415dfd
  415db0:	clc    
  415db1:	push   cs
  415db2:	or     eax,0x90a8ccbe
  415db7:	scas   eax,DWORD PTR es:[edi]
  415db8:	xor    DWORD PTR [edx+ebx*2-0x1f],esp
  415dbc:	inc    ecx
  415dbd:	add    esi,DWORD PTR [ebx+0x7402e720]
  415dc3:	mov    ebx,DWORD PTR [ebp+0x3a43307a]
  415dc9:	jle    0x415d58
  415dcb:	repz cmp edx,DWORD PTR [ecx+0xd70019]
  415dd2:	sub    BYTE PTR [edx],dl
  415dd4:	mov    esi,0x5a77060e
  415dd9:	out    dx,al
  415dda:	fnsave [eax]
  415ddc:	mov    edi,0x315eebbf
  415de1:	pop    esi
  415de2:	call   0xf27e:0x17638d75
  415de9:	jle    0x415dbd
  415deb:	sar    DWORD PTR [ebp+0x1b2ca004],0xf4
  415df2:	push   esi
  415df3:	push   edi
  415df4:	add    ecx,DWORD PTR [edi-0x3d]
  415df7:	ret    
  415df8:	inc    esi
  415df9:	cmc    
  415dfa:	in     al,dx
  415dfb:	push   0xbc1c692d
  415e00:	sbb    al,0x7c
  415e02:	mov    esi,edi
  415e04:	test   BYTE PTR [ecx],cl
  415e06:	dec    eax
  415e07:	ret    
  415e08:	jle    0x415e70
  415e0a:	(bad)  
  415e0b:	retf   0xa38b
  415e0e:	gs push ss
  415e10:	jbe    0x415dd7
  415e12:	xchg   ebx,eax
  415e13:	mov    DWORD PTR [ecx+0x7b2107ff],edx
  415e19:	jbe    0x415e1a
  415e1b:	rol    DWORD PTR [eax],cl
  415e1d:	cmc    
  415e1e:	pop    DWORD PTR [ebp+0x4d223783]
  415e24:	mov    bh,BYTE PTR [edi]
  415e26:	mov    eax,ds:0xad27a555
  415e2b:	add    al,0x58
  415e2d:	aas    
  415e2e:	paddsw mm4,QWORD PTR [ecx+eax*2+0x13ee092]
  415e36:	das    
  415e37:	add    eax,0xffffff8a
  415e3a:	call   0x5ac3a4f4
  415e3f:	jp     0x415dd7
  415e41:	test   al,0x3c
  415e43:	push   edi
  415e44:	loop   0x415e29
  415e46:	cs dec edx
  415e48:	inc    edx
  415e49:	dec    ebx
  415e4a:	sar    DWORD PTR [eax+0xd736b4a],1
  415e50:	fscale 
  415e52:	jb     0x415eba
  415e54:	push   eax
  415e55:	loopne 0x415e2a
  415e57:	and    al,0x33
  415e59:	lods   eax,DWORD PTR ds:[esi]
  415e5a:	pop    edx
  415e5b:	push   ss
  415e5c:	xchg   ebp,eax
  415e5d:	add    DWORD PTR [edi],esi
  415e5f:	in     al,dx
  415e60:	test   al,0x69
  415e62:	sar    DWORD PTR [edx-0x1a],1
  415e65:	ret    0xeb4a
  415e68:	pop    eax
  415e69:	mov    eax,0x8793a95d
  415e6e:	test   eax,0x21e7efab
  415e73:	out    dx,al
  415e74:	lock xor cl,0x68
  415e78:	cli    
  415e79:	xchg   edx,eax
  415e7a:	rcr    ch,1
  415e7c:	(bad)  
  415e7d:	lea    esp,[ecx+0x6ad1e237]
  415e83:	adc    edi,DWORD PTR [esi+0x64]
  415e86:	into   
  415e87:	xchg   ebx,eax
  415e88:	sar    dl,0xe0
  415e8b:	cli    
  415e8c:	adc    edi,DWORD PTR [eax]
  415e8e:	mov    cs,WORD PTR [esi-0xe]
  415e91:	mov    ch,0x4e
  415e93:	sbb    eax,0x8cc169f3
  415e98:	push   ebp
  415e99:	adc    DWORD PTR [edx+esi*4+0x6f],ebx
  415e9d:	mov    ds:0x841b73cf,al
  415ea2:	cdq    
  415ea3:	sbb    edi,DWORD PTR [edx+0x39]
  415ea6:	xchg   ebp,eax
  415ea7:	dec    ecx
  415ea8:	adc    al,0xa0
  415eaa:	imul   edx,DWORD PTR [edx],0xffffffc5
  415ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eae:	push   edx
  415eaf:	cmp    eax,0xa45b7e2f
  415eb4:	iret   
  415eb5:	mov    cl,cl
  415eb7:	push   0x72
  415eb9:	cmp    DWORD PTR [esi+0x56],edx
  415ebc:	jne    0x415e3e
  415ebe:	xor    edx,ecx
  415ec0:	js     0x415e60
  415ec2:	aas    
  415ec3:	sub    eax,0xda40d549
  415ec8:	stc    
  415ec9:	cmp    al,0xde
  415ecb:	dec    ecx
  415ecc:	xchg   esi,eax
  415ecd:	ror    DWORD PTR [edx],0xb9
  415ed0:	scas   al,BYTE PTR es:[edi]
  415ed1:	pop    edi
  415ed2:	mov    dl,0x49
  415ed4:	and    DWORD PTR [ecx],esp
  415ed6:	xchg   esi,eax
  415ed7:	pop    ecx
  415ed8:	retf   
  415ed9:	jle    0x415ee3
  415edb:	mov    ebp,0x569c9fdd
  415ee0:	and    al,BYTE PTR [edx]
  415ee2:	add    eax,0x837f4c67
  415ee7:	sbb    edx,0x3206b62
  415eed:	imul   edx,DWORD PTR [esi+0x59],0xffffffe3
  415ef1:	test   DWORD PTR [ebp-0x21962a72],edi
  415ef7:	in     al,dx
  415ef8:	jno    0x415f01
  415efa:	out    dx,al
  415efb:	sahf   
  415efc:	ret    0xbf0
  415eff:	out    0x67,al
  415f01:	jl     0x415f47
  415f03:	inc    eax
  415f04:	fsubr  DWORD PTR [ebp-0x3a]
  415f07:	test   edx,esp
  415f09:	add    BYTE PTR ds:0xd57f5536,ch
  415f0f:	jo     0x415f16
  415f11:	cmp    esp,DWORD PTR [eax]
  415f13:	dec    ecx
  415f14:	es push ecx
  415f16:	dec    ebx
  415f17:	add    eax,0x7180300
  415f1c:	mov    bh,0x19
  415f1e:	cld    
  415f1f:	addr16 push esp
  415f21:	rol    BYTE PTR [eax+ebx*2],1
  415f24:	shld   DWORD PTR [ecx+0x395852c3],edx,cl
  415f2b:	and    ch,BYTE PTR [edx]
  415f2d:	or     eax,0x41d2e363
  415f32:	je     0x415f75
  415f34:	lahf   
  415f35:	or     eax,0x286ef959
  415f3a:	pop    esp
  415f3b:	push   ebx
  415f3c:	stos   BYTE PTR es:[edi],al
  415f3d:	sar    DWORD PTR [ebx-0x30],cl
  415f40:	dec    edx
  415f41:	cdq    
  415f42:	retf   0x2211
  415f45:	sbb    eax,0x643aca93
  415f4a:	call   0x3607b11
  415f4f:	out    dx,eax
  415f50:	cli    
  415f51:	push   edx
  415f52:	ret    
  415f53:	and    DWORD PTR [ecx],0xe5f4e33d
  415f59:	dec    ecx
  415f5a:	push   0xffffff82
  415f5c:	retf   
  415f5d:	mov    dl,0xc8
  415f5f:	add    al,0x2b
  415f61:	daa    
  415f62:	mov    ch,0xe2
  415f64:	in     al,0xee
  415f66:	dec    edx
  415f67:	jl     0x415f20
  415f69:	jle    0x415f0c
  415f6b:	jnp    0x415f0e
  415f6d:	inc    ebx
  415f6e:	fst    DWORD PTR [ebx+0x53]
  415f71:	fdivp  st(4),st
  415f73:	add    al,0xc2
  415f75:	mov    bl,0x77
  415f77:	in     al,0x40
  415f79:	xor    eax,0x502ca1f3
  415f7e:	push   es
  415f7f:	add    bh,bl
  415f81:	and    eax,0x57dde126
  415f86:	and    al,BYTE PTR [ebx-0x5bd84f9f]
  415f8c:	cmp    eax,0x78b8a46f
  415f91:	or     BYTE PTR [edi],dl
  415f93:	aas    
  415f94:	mov    es,WORD PTR [esp+ecx*2+0x4f8f3a1a]
  415f9b:	xor    eax,0x23876d7f
  415fa0:	sub    eax,0x7b86492
  415fa5:	push   ecx
  415fa6:	pop    esi
  415fa7:	test   al,0xc3
  415fa9:	push   es
  415faa:	push   ebp
  415fab:	xor    cl,BYTE PTR fs:[ebp+0x66d96c86]
  415fb2:	repz inc edi
  415fb4:	shl    BYTE PTR [edi+ecx*2+0x7d],1
  415fb8:	lock (bad) 
  415fba:	mov    ah,0x2a
  415fbc:	int    0x7b
  415fbe:	outs   dx,BYTE PTR ds:[esi]
  415fbf:	retf   0xb647
  415fc2:	fstp   TBYTE PTR [eax-0x5b]
  415fc5:	jo     0x415f71
  415fc7:	adc    DWORD PTR [ebx],0xffffff97
  415fca:	frstor [ebp+0x2b]
  415fcd:	and    eax,0x5e3704d9
  415fd2:	in     ax,0xcb
  415fd5:	scas   al,BYTE PTR es:[edi]
  415fd6:	dec    ebp
  415fd7:	inc    ebx
  415fd8:	jne    0x415ffe
  415fda:	jno    0x416056
  415fdc:	push   cs
  415fdd:	sub    al,0xc7
  415fdf:	lock or DWORD PTR [eax+eiz*8-0x2],ebx
  415fe4:	scas   al,BYTE PTR es:[edi]
  415fe5:	mov    esp,0xe25e834f
  415fea:	es push ds
  415fec:	fmul   QWORD PTR [eax+0x3a4d23be]
  415ff2:	mov    eax,ds:0x805efd69
  415ff7:	mov    cl,0x7
  415ff9:	jmp    0xbd16a103
  415ffe:	mov    bh,0xa3
  416000:	cmc    
  416001:	leave  
  416002:	adc    al,0xf
  416004:	inc    ebp
  416005:	add    edi,DWORD PTR [edx-0x56]
  416008:	addr16 dec edx
  41600a:	mov    esp,0xe375586c
  41600f:	mov    cl,0x2b
  416011:	mov    al,0x4
  416013:	add    al,0x7c
  416015:	mov    ecx,0xb9f864ed
  41601a:	xchg   DWORD PTR [ebx],esi
  41601c:	xchg   esp,eax
  41601d:	push   ebp
  41601e:	xchg   ebp,eax
  41601f:	adc    al,0xbd
  416021:	lds    esp,FWORD PTR [eax]
  416023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416024:	push   esi
  416025:	inc    ebx
  416026:	jecxz  0x416094
  416028:	inc    esi
  416029:	cs into 
  41602b:	imul   esp,DWORD PTR [ebp-0x12da9e6b],0x9ef23ca9
  416035:	xor    al,0x16
  416037:	jecxz  0x416068
  416039:	stos   BYTE PTR es:[edi],al
  41603a:	sahf   
  41603b:	cwde   
  41603c:	bound  ebp,QWORD PTR [edi-0x34]
  41603f:	xor    dl,BYTE PTR ds:0xb3ecf5ee
  416045:	icebp  
  416046:	or     ecx,DWORD PTR ds:0x20bab95d
  41604c:	xchg   ebp,eax
  41604d:	add    BYTE PTR [eax],al
  41604f:	add    BYTE PTR [eax],al
  416051:	add    BYTE PTR [edx],bh
  416053:	jne    0x416091
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x4160d7
  41605f:	jp     0x416023
  416061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416062:	pop    edi
  416063:	fiadd  WORD PTR [eax]
  416065:	add    bl,dh
  416067:	add    al,0x0
  416069:	add    BYTE PTR [esi],bl
  41606b:	xchg   ebx,eax
  41606c:	mov    al,ds:0xbfc5e8f
  416071:	cmp    esp,DWORD PTR ds:0xe2a432cd
  416077:	lea    ecx,[bx]
  41607a:	jns    0x416050
  41607c:	retf   
  41607d:	je     0x4160f4
  41607f:	cs ds cwde 
  416082:	or     ebp,DWORD PTR [ebp-0x62]
  416085:	cld    
  416086:	fsub   st(2),st
  416088:	add    DWORD PTR [edx+0x57fdc799],edi
  41608e:	pop    ebx
  41608f:	std    
  416090:	jo     0x416072
  416092:	and    ebx,DWORD PTR [edi-0x71]
  416095:	in     al,0x56
  416097:	xchg   ecx,eax
  416098:	push   es
  416099:	mov    ebp,DWORD PTR [esp+eax*1-0x79]
  41609d:	xchg   ebx,eax
  41609e:	push   edx
  41609f:	test   eax,0xfba767cf
  4160a4:	push   ecx
  4160a5:	mov    al,BYTE PTR [ebp+0x5aa36c61]
  4160ab:	pop    ds
  4160ac:	lock push eax
  4160ae:	xchg   DWORD PTR [ecx],edi
  4160b0:	repz pop eax
  4160b2:	sahf   
  4160b3:	retf   0xf706
  4160b6:	inc    edi
  4160b7:	xor    al,0x8a
  4160b9:	push   ecx
  4160ba:	jge    0x416088
  4160bc:	inc    edx
  4160bd:	fisttp DWORD PTR [edx-0x254f8a86]
  4160c3:	cmp    BYTE PTR [eax],ch
  4160c5:	cwde   
  4160c6:	xrelease mov DWORD PTR [ecx+0x15],ebx
  4160ca:	dec    ebx
  4160cb:	jno    0x416095
  4160cd:	xor    al,BYTE PTR [esi-0x66]
  4160d0:	cs or  eax,0x673ce60d
  4160d6:	inc    ecx
  4160d7:	popa   
  4160d8:	test   BYTE PTR [edi],0x7c
  4160db:	loopne 0x41608b
  4160dd:	out    dx,eax
  4160de:	jnp    0x416155
  4160e0:	mov    dh,0x34
  4160e2:	xor    eax,0x783474d6
  4160e7:	lock add BYTE PTR [eax-0xf],ah
  4160eb:	aaa    
  4160ec:	cli    
  4160ed:	stos   DWORD PTR es:[edi],eax
  4160ee:	shr    DWORD PTR [esi+eiz*2+0x54d50e02],1
  4160f5:	clc    
  4160f6:	test   DWORD PTR [edi+0x2d],ebx
  4160f9:	push   ecx
  4160fa:	add    BYTE PTR [ebx-0x80],bl
  4160fd:	pop    esp
  4160fe:	fdiv   QWORD PTR [edx-0x5d6c6033]
  416104:	mov    DWORD PTR [edi+0x372a6c69],edx
  41610a:	fstp   TBYTE PTR [edx-0x20]
  41610d:	mov    bl,0xf3
  41610f:	mov    ecx,0xbad434e1
  416114:	ins    BYTE PTR es:[edi],dx
  416115:	fcom   DWORD PTR [ecx+0x2edb667c]
  41611b:	jl     0x41613d
  41611d:	dec    ebx
  41611e:	dec    edx
  41611f:	stos   DWORD PTR es:[edi],eax
  416120:	ins    DWORD PTR es:[edi],dx
  416121:	mov    ds:0xfdf64f5,eax
  416126:	idiv   BYTE PTR [ecx]
  416128:	jecxz  0x416106
  41612a:	scas   al,BYTE PTR es:[edi]
  41612b:	cdq    
  41612c:	mov    bl,0x32
  41612e:	push   0x3d
  416130:	fnstcw WORD PTR [edi-0x6d6208f7]
  416136:	fisubr WORD PTR [ecx-0x3945c75]
  41613c:	inc    ebp
  41613d:	mov    al,BYTE PTR [eax-0x538ca181]
  416143:	sbb    eax,0xee04ebd6
  416148:	pop    ss
  416149:	mov    eax,0x96feee38
  41614e:	fcmovu st,st(4)
  416150:	add    DWORD PTR [ebx-0x4fc147c4],ecx
  416156:	mov    cl,cl
  416158:	xchg   BYTE PTR ds:0xa12e58c6,ah
  41615e:	mov    dh,0xda
  416160:	sub    BYTE PTR [ebx+0x34cde011],dl
  416166:	mov    edi,0xd6f96346
  41616b:	mov    ds:0x798be644,al
  416170:	out    dx,eax
  416171:	xor    BYTE PTR [eax-0x7f],ah
  416174:	cli    
  416175:	and    al,0x7c
  416177:	add    DWORD PTR [esi+eiz*1],ecx
  41617a:	aad    0x2f
  41617c:	retf   0x8d7d
  41617f:	jae    0x416192
  416181:	xchg   ebx,eax
  416182:	out    0x8d,al
  416184:	pop    eax
  416185:	stc    
  416186:	shl    DWORD PTR [esi-0x61],0x74
  41618a:	pop    ebp
  41618b:	sbb    eax,0x1b58c298
  416190:	dec    eax
  416191:	outs   dx,BYTE PTR ds:[esi]
  416192:	out    dx,eax
  416193:	xor    bl,bl
  416195:	xchg   esp,ebx
  416197:	(bad)  
  416198:	repz jmp 0xd10d8de3
  41619e:	arpl   dx,di
  4161a0:	or     eax,0x573e1e0e
  4161a5:	dec    eax
  4161a6:	inc    esi
  4161a7:	sub    eax,0xa1173151
  4161ac:	fdivr  QWORD PTR [edx-0x6c]
  4161af:	jb     0x4161a9
  4161b1:	idiv   BYTE PTR [edx+0x1752ac7c]
  4161b7:	cli    
  4161b8:	push   0xbb73d3e2
  4161bd:	xor    dh,BYTE PTR [edx]
  4161bf:	xor    DWORD PTR [esi],esp
  4161c1:	retf   
  4161c2:	fdivr  QWORD PTR [eax+0x695969fa]
  4161c8:	not    DWORD PTR [esi+0x8]
  4161cb:	retf   0x880
  4161ce:	daa    
  4161cf:	hlt    
  4161d0:	cmp    eax,DWORD PTR ds:0xbf418335
  4161d7:	jae    0x41622f
  4161d9:	sbb    ch,dh
  4161db:	cdq    
  4161dc:	frstor ds:0xd629509
  4161e2:	in     al,0xf2
  4161e4:	inc    ecx
  4161e5:	bound  ecx,QWORD PTR ds:0x1a6dffb3
  4161eb:	stc    
  4161ec:	push   eax
  4161ed:	cli    
  4161ee:	int    0xba
  4161f0:	jecxz  0x4161fc
  4161f2:	jmp    0x91e1:0xe87a3778
  4161f9:	jmp    0x19c63712
  4161fe:	xor    al,BYTE PTR [ebx]
  416200:	cli    
  416201:	int    0x4d
  416203:	sub    DWORD PTR [edi+0x2f],0xf2110eca
  41620a:	xor    cl,BYTE PTR [ecx+0x6b]
  41620d:	xlat   BYTE PTR ds:[ebx]
  41620e:	inc    esi
  41620f:	fwait
  416210:	cmp    al,0x89
  416212:	out    dx,al
  416213:	outs   dx,BYTE PTR ds:[esi]
  416214:	and    al,0x79
  416216:	int3   
  416217:	jae    0x416253
  416219:	add    BYTE PTR [esi+0x7e092ad2],al
  41621f:	stos   BYTE PTR es:[edi],al
  416220:	or     BYTE PTR [edi],bh
  416222:	mov    BYTE PTR [esi+0x69],dl
  416225:	lods   eax,DWORD PTR ds:[esi]
  416226:	dec    eax
  416227:	ins    BYTE PTR es:[edi],dx
  416228:	cmp    dl,dl
  41622a:	inc    ecx
  41622b:	cmp    DWORD PTR [ecx+0x2f],0xc467b137
  416232:	repnz push esi
  416234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416235:	test   eax,0xb5b7e7da
  41623a:	stos   BYTE PTR es:[edi],al
  41623b:	iret   
  41623c:	lock ins DWORD PTR es:[edi],dx
  41623e:	pushf  
  41623f:	pop    ecx
  416240:	add    esp,eax
  416242:	inc    esp
  416243:	retf   
  416244:	xchg   esi,eax
  416245:	mov    ds:0x6653a963,al
  41624a:	(bad)  
  41624b:	stc    
  41624c:	pop    ecx
  41624d:	cmp    ebx,DWORD PTR [eax+0x5f]
  416250:	pop    edx
  416251:	fs inc esi
  416253:	xchg   BYTE PTR [eax],dl
  416255:	fidivr WORD PTR [edi]
  416257:	aam    0xdb
  416259:	dec    ecx
  41625a:	and    eax,0x4b1cdb28
  41625f:	mov    edx,0xc1c16909
  416264:	pushf  
  416265:	and    bh,bh
  416267:	in     al,0xa3
  416269:	sbb    DWORD PTR [ecx-0x6b7be76],ebx
  41626f:	je     0x4161fd
  416271:	lds    ebp,FWORD PTR [edx+0x6166a793]
  416277:	adc    dh,bh
  416279:	xchg   BYTE PTR [edx-0xd],dh
  41627c:	cmp    al,0x0
  41627e:	lds    edx,FWORD PTR [esi+0x22]
  416281:	popa   
  416282:	(bad)  
  416283:	leave  
  416284:	inc    ebp
  416285:	cmc    
  416286:	sub    ebp,ecx
  416288:	jp     0x41625c
  41628a:	xor    DWORD PTR [edi+0x7fb895de],esp
  416290:	jecxz  0x41629f
  416292:	loope  0x4162f8
  416294:	mov    eax,ds:0x43246742
  416299:	adc    BYTE PTR [ecx-0x19],dh
  41629c:	(bad)  
  41629d:	xchg   edx,eax
  41629e:	rol    BYTE PTR [edi],1
  4162a0:	popa   
  4162a1:	sbb    BYTE PTR [ebx+0x21],ah
  4162a4:	dec    edi
  4162a5:	pushf  
  4162a6:	mov    ds:0x4d1ddd59,al
  4162ab:	mov    eax,ds:0x6414aef5
  4162b0:	cmp    bh,BYTE PTR ds:0xf626a207
  4162b6:	fs cmc 
  4162b8:	xchg   ebx,eax
  4162b9:	gs je  0x416330
  4162bc:	mov    dl,0xaf
  4162be:	pop    es
  4162bf:	cdq    
  4162c0:	sub    ebp,edx
  4162c2:	ret    
  4162c3:	push   ecx
  4162c4:	gs push ss
  4162c6:	jg     0x4162b2
  4162c8:	int3   
  4162c9:	aam    0xa5
  4162cb:	ffree  st(5)
  4162cd:	bswap  edx
  4162cf:	xchg   ebp,eax
  4162d0:	push   0x5d
  4162d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162d3:	add    bl,dh
  4162d5:	xchg   esp,eax
  4162d6:	scas   al,BYTE PTR es:[edi]
  4162d7:	lock ss leave 
  4162da:	in     eax,0x81
  4162dc:	test   BYTE PTR [edx+0x5],dl
  4162df:	push   es
  4162e0:	pop    DWORD PTR [ecx]
  4162e2:	mov    ds:0x34b23935,eax
  4162e7:	mov    esi,0x822dc84d
  4162ec:	fs in  eax,0x2e
  4162ef:	fadd   st,st(0)
  4162f1:	or     DWORD PTR [edx-0x55],esp
  4162f4:	jbe    0x41633e
  4162f6:	xchg   esp,eax
  4162f7:	dec    esp
  4162f8:	(bad)
  4162fb:	repz xchg ebp,eax
  4162fd:	add    DWORD PTR ds:0xe95622bd,0xfffffff6
  416304:	push   ds
  416305:	pop    ebp
  416306:	add    DWORD PTR [edx+0x41],0x66
  41630a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41630b:	and    eax,0x5d4771cc
  416310:	or     eax,0xb0981a62
  416315:	dec    edx
  416316:	jge    0x4162d5
  416318:	cdq    
  416319:	rol    bh,0x51
  41631c:	mov    ebx,0xda85eed2
  416321:	icebp  
  416322:	mov    ch,0xa6
  416324:	sahf   
  416325:	(bad)
  416328:	faddp  st(7),st
  41632a:	jge    0x4163a3
  41632c:	mov    edx,0x322f7a7f
  416331:	lods   al,BYTE PTR ds:[esi]
  416332:	jne    0x41632c
  416334:	std    
  416335:	mov    ch,0xda
  416337:	fld    st(6)
  416339:	pop    es
  41633a:	test   BYTE PTR [edx],dh
  41633c:	push   esi
  41633d:	sub    BYTE PTR [ebp-0x57],bl
  416340:	sub    DWORD PTR [edx+eiz*8+0x3153b621],ebp
  416347:	add    DWORD PTR [ecx-0x3c415c73],esp
  41634d:	cmp    eax,0xfd65ac1c
  416352:	xchg   edi,eax
  416353:	cmp    eax,0x144a52f1
  416358:	loop   0x416340
  41635a:	loopne 0x416315
  41635c:	mov    ecx,0xfde7aa5c
  416361:	push   DWORD PTR [esi]
  416363:	pop    ebx
  416364:	adc    eax,0x8b54af57
  416369:	mov    ds:0x626ba7de,al
  41636e:	out    dx,eax
  41636f:	mov    dh,0x67
  416371:	dec    ecx
  416372:	bound  ebp,QWORD PTR [eax]
  416374:	add    DWORD PTR [ecx],ebx
  416376:	or     BYTE PTR [ecx-0x78],ch
  416379:	mov    ecx,0x827abd2
  41637e:	sub    eax,0x817a57f0
  416383:	loopne 0x41632f
  416385:	or     DWORD PTR [edx],eax
  416387:	js     0x4163d6
  416389:	mov    ch,0x98
  41638b:	and    DWORD PTR [ebx],edi
  41638d:	mov    ch,0xcd
  41638f:	and    DWORD PTR [ebx],0x79
  416392:	adc    eax,0xd1cf801f
  416397:	pushf  
  416398:	jmp    0x71efb50b
  41639d:	and    BYTE PTR [ebp-0x5ab054b9],0x30
  4163a4:	daa    
  4163a5:	repz sbb esi,DWORD PTR ds:0xf011238d
  4163ac:	or     bh,BYTE PTR [eax]
  4163ae:	jmp    0xbc57:0x1fdc2b4c
  4163b5:	neg    BYTE PTR [eax+0x40]
  4163b8:	xchg   esp,eax
  4163b9:	ss out 0x28,al
  4163bc:	dec    eax
  4163bd:	jp     0x4163a5
  4163bf:	adc    BYTE PTR [ebx],dh
  4163c1:	mov    ebx,es
  4163c3:	jbe    0x4163aa
  4163c5:	xor    BYTE PTR [ebp+0x48ac42d6],dh
  4163cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163cc:	push   ebp
  4163cd:	mov    dh,BYTE PTR [edi]
  4163cf:	adc    BYTE PTR cs:[eax+0x5e],dl
  4163d3:	sbb    esi,DWORD PTR [ebx+ecx*4+0x11]
  4163d7:	outs   dx,BYTE PTR ds:[esi]
  4163d8:	and    al,0x8b
  4163da:	jno    0x41636d
  4163dc:	mov    dh,0xbc
  4163de:	pop    esi
  4163df:	push   cs
  4163e0:	(bad)  
  4163e1:	adc    bh,bl
  4163e3:	dec    edi
  4163e4:	cmc    
  4163e5:	jp     0x416384
  4163e7:	push   cs
  4163e8:	icebp  
  4163e9:	mov    ecx,0xa655fc36
  4163ee:	jbe    0x41644c
  4163f0:	add    bh,cl
  4163f2:	add    eax,0xc7fbf2
  4163f7:	icebp  
  4163f8:	mov    esi,ds
  4163fa:	test   BYTE PTR [esi+esi*4-0x16],dh
  4163fe:	adc    eax,eax
  416400:	std    
  416401:	adc    al,0x28
  416403:	mov    edi,0xa63b36eb
  416408:	sub    eax,0xb407928
  41640d:	cmc    
  41640e:	mov    ebx,ecx
  416410:	ret    0xddb6
  416413:	lahf   
  416414:	das    
  416415:	packuswb mm7,QWORD PTR [edi-0x7a]
  416419:	mov    ebp,?
  41641b:	ficomp DWORD PTR [ebx+0xb]
  41641e:	rcr    edx,1
  416420:	inc    ebx
  416421:	cs and al,0x1
  416424:	xchg   esi,eax
  416425:	push   ds
  416426:	or     dl,BYTE PTR [edi-0x75]
  416429:	les    eax,FWORD PTR [edi+0x9]
  41642c:	mov    cl,0xc1
  41642e:	shr    DWORD PTR [ebp+esi*2-0x47ec4e84],0x40
  416436:	cli    
  416437:	dec    esp
  416438:	mov    dh,0x50
  41643a:	in     eax,dx
  41643b:	mov    al,ds:0x4b364ef8
  416440:	adc    al,0x91
  416442:	int3   
  416443:	pop    ss
  416444:	iret   
  416445:	lods   eax,DWORD PTR ds:[esi]
  416446:	ins    DWORD PTR es:[edi],dx
  416447:	fstp   st(4)
  416449:	push   0xa56b56cb
  41644e:	sub    ebx,DWORD PTR ds:0x71fca83
  416454:	fidivr DWORD PTR [esi+0x4b]
  416457:	fcmovne st,st(3)
  416459:	arpl   dx,sp
  41645b:	test   BYTE PTR [ecx+ecx*1+0x50],0x52
  416460:	cmp    al,0x47
  416462:	xor    al,0xbf
  416464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416465:	(bad)  
  416466:	(bad)  [ebx+eax*2-0x1a62b001]
  41646d:	push   edi
  41646e:	ficomp DWORD PTR [eax+0x6543ab19]
  416474:	sbb    ebx,DWORD PTR [edx+eiz*8]
  416477:	mov    ds:0xf9a14cc9,al
  41647c:	and    esp,edi
  41647e:	loope  0x41647c
  416480:	xor    bl,0x12
  416483:	inc    edi
  416484:	or     DWORD PTR [edi-0x33842115],ecx
  41648a:	mov    edi,0xa3bbb3cb
  41648f:	ret    0x4dfe
  416492:	imul   esi,DWORD PTR [edx],0xffffffa8
  416495:	sub    DWORD PTR [ebx-0x1e],eax
  416498:	std    
  416499:	push   esp
  41649a:	inc    esp
  41649b:	loope  0x4164e2
  41649d:	adc    bh,BYTE PTR [esi+0x63a0f9b6]
  4164a3:	and    esp,esi
  4164a5:	sub    BYTE PTR [edi+0xfd53f3e],dh
  4164ab:	xchg   edx,eax
  4164ac:	jno    0x4164ee
  4164ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164af:	xor    al,dl
  4164b1:	pop    esi
  4164b2:	in     al,0xce
  4164b4:	jo     0x41649a
  4164b6:	sahf   
  4164b7:	cmc    
  4164b8:	sbb    ch,BYTE PTR [ebp-0x64]
  4164bb:	dec    ecx
  4164bc:	mov    dh,0xb8
  4164be:	fstp   QWORD PTR [eax-0x2a]
  4164c1:	mov    ecx,0x7880ac6f
  4164c6:	jmp    0x3a9ce316
  4164cb:	or     bh,BYTE PTR [ecx-0x3bad9e2b]
  4164d1:	inc    esp
  4164d2:	out    dx,eax
  4164d3:	sbb    esp,DWORD PTR [ebx-0x14ca47b9]
  4164d9:	out    0xa0,al
  4164db:	loopne 0x4164a7
  4164dd:	or     al,0x71
  4164df:	jl     0x4164ea
  4164e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164e2:	mov    bl,BYTE PTR [ebx]
  4164e4:	add    al,0x29
  4164e6:	cld    
  4164e7:	or     BYTE PTR [edi],al
  4164e9:	jbe    0x416523
  4164eb:	lahf   
  4164ec:	inc    ebp
  4164ed:	mov    ds:0x4b462d2b,eax
  4164f2:	push   eax
  4164f3:	adc    al,0xa1
  4164f5:	iret   
  4164f6:	mov    ds:0x2d28f29e,eax
  4164fb:	ret    
  4164fc:	inc    ebp
  4164fd:	call   0x82de4fe1
  416502:	hlt    
  416503:	jl     0x416525
  416505:	repnz ficom WORD PTR [esi+esi*8+0x23]
  41650a:	inc    edi
  41650b:	mov    eax,ds:0x563f97c1
  416510:	fs sub esp,edx
  416513:	jnp    0x41649c
  416515:	xor    al,0x38
  416517:	ja     0x4164f0
  416519:	fnstenv [esi-0x77]
  41651c:	jle    0x416574
  41651e:	pop    eax
  41651f:	xrelease mov DWORD PTR [edi],edi
  416522:	xor    BYTE PTR [edi-0x5e],dh
  416525:	dec    edx
  416526:	push   ebp
  416527:	inc    edx
  416528:	pop    edx
  416529:	sar    DWORD PTR ds:[ecx+0x3f22e7d3],1
  416530:	or     ecx,esp
  416532:	das    
  416533:	jmp    0x4164e0
  416535:	cmp    ebx,DWORD PTR ds:0xa5edb834
  41653b:	out    0x15,al
  41653d:	retf   
  41653e:	xchg   ecx,eax
  41653f:	xor    dh,dl
  416541:	jnp    0x416564
  416543:	xchg   ecx,eax
  416544:	rcl    DWORD PTR [ecx-0x375ad82f],0x87
  41654b:	cld    
  41654c:	rol    BYTE PTR [esi+0x28],1
  41654f:	fmul   DWORD PTR [eax-0x58]
  416552:	sub    eax,DWORD PTR [edi-0x15]
  416555:	cmp    ch,ch
  416557:	adc    al,0x7e
  416559:	sti    
  41655a:	daa    
  41655b:	or     dl,BYTE PTR [ebp+0x0]
  41655e:	add    BYTE PTR [eax],al
  416560:	add    BYTE PTR [eax],al
  416562:	clc    
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0x79f1
  41656f:	add    BYTE PTR [esi-0x13],bh
  416572:	push   edx
  416573:	jecxz  0x416575
  416575:	add    bl,dh
  416577:	add    al,0x0
  416579:	add    BYTE PTR [ecx+esi*1],bh
  41657c:	xchg   ebx,eax
  41657d:	out    0xee,al
  41657f:	mov    ds:0xfd104543,eax
  416584:	add    eax,0x5b06e5ee
  416589:	adc    eax,0xec89ec40
  41658e:	mov    sp,0x244c
  416592:	inc    ebp
  416593:	repnz cmp ebx,eax
  416596:	pushf  
  416597:	jp     0x41657e
  416599:	std    
  41659a:	sbb    bl,dl
  41659c:	adc    BYTE PTR [edx+0x5bd29dd1],0x59
  4165a3:	sbb    DWORD PTR [ecx+0x65536823],edi
  4165a9:	inc    edi
  4165aa:	sub    eax,0x9c16df04
  4165af:	xlat   BYTE PTR ds:[ebx]
  4165b0:	xchg   edx,eax
  4165b1:	add    eax,DWORD PTR [edx+0x5c1c7c1d]
  4165b7:	sub    bl,dl
  4165b9:	xchg   ebx,eax
  4165ba:	mov    bh,0x85
  4165bc:	add    eax,0xa6b7e8cb
  4165c1:	les    edi,FWORD PTR [edx]
  4165c3:	dec    esp
  4165c4:	or     bh,BYTE PTR [edi+0xc]
  4165c7:	fwait
  4165c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165c9:	std    
  4165ca:	mov    DWORD PTR [ecx+edx*8],edi
  4165cd:	(bad)  
  4165cf:	mov    bl,0xfe
  4165d1:	fisubr WORD PTR [ecx-0x63958471]
  4165d7:	out    0x85,eax
  4165d9:	cmp    DWORD PTR [ebx+0x5],0xa03abd53
  4165e0:	fmul   QWORD PTR [edi-0x3bfe6b17]
  4165e6:	neg    DWORD PTR [edi]
  4165e8:	xor    ah,BYTE PTR [edi]
  4165ea:	out    dx,al
  4165eb:	into   
  4165ec:	ins    DWORD PTR es:[edi],dx
  4165ed:	int    0x20
  4165ef:	sub    eax,eax
  4165f1:	test   BYTE PTR [ebp+0x509704b3],cl
  4165f7:	test   eax,0x89aa4734
  4165fc:	test   eax,0x186585e3
  416601:	fsubr  QWORD PTR [edi]
  416603:	pop    edx
  416604:	dec    esi
  416605:	mov    ds:0xdf4e59cc,al
  41660a:	mov    edx,0x517ae755
  41660f:	loopne 0x416662
  416611:	cs pop ecx
  416613:	mov    al,ds:0x6b6f89d5
  416618:	pop    edi
  416619:	into   
  41661a:	cmp    DWORD PTR [ebp+0x8c4e73c],ebp
  416620:	cwde   
  416621:	sub    al,0xdc
  416623:	or     bh,BYTE PTR [ebx-0x44]
  416626:	adc    esi,DWORD PTR [edx-0xc]
  416629:	add    ebp,esi
  41662b:	sahf   
  41662c:	(bad)  
  41662d:	(bad)  
  41662f:	mov    ch,0xc1
  416631:	repz ja 0x4165c6
  416634:	push   ss
  416635:	push   0x9335e034
  41663a:	mov    al,0xf0
  41663c:	test   DWORD PTR [edi+0x290f26ce],ecx
  416642:	push   edx
  416643:	lods   al,BYTE PTR ds:[esi]
  416644:	cwde   
  416645:	push   esp
  416646:	in     al,0x2e
  416648:	pop    eax
  416649:	fidiv  WORD PTR ds:[ebx]
  41664c:	sub    eax,0x46a28805
  416651:	jmp    0x34528771
  416656:	stc    
  416657:	cmp    al,0x69
  416659:	test   al,0x1
  41665b:	cmp    BYTE PTR [esi+edx*2+0x1b],bh
  41665f:	daa    
  416660:	mov    ds:0x9c132acc,al
  416665:	mov    esp,0xdf16db1e
  41666a:	xor    BYTE PTR [eax+0x10703c23],cl
  416670:	jnp    0x4166e6
  416672:	xchg   esi,eax
  416673:	sub    ebx,ebx
  416675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416676:	mov    cl,0x3b
  416678:	stos   DWORD PTR es:[edi],eax
  416679:	inc    ecx
  41667a:	loop   0x41661c
  41667c:	daa    
  41667d:	cld    
  41667e:	add    BYTE PTR [eax-0x11],dl
  416681:	mov    esp,0xccda431
  416686:	mov    ch,0x6a
  416688:	or     al,0x44
  41668a:	ins    BYTE PTR es:[edi],dx
  41668b:	daa    
  41668c:	sbb    al,0xe2
  41668e:	pop    esp
  41668f:	retf   0xb4f0
  416692:	dec    esp
  416693:	add    bl,BYTE PTR [edi-0x4d]
  416696:	stc    
  416697:	adc    esp,ebp
  416699:	test   DWORD PTR [ebx-0x68],eax
  41669c:	stos   DWORD PTR es:[edi],eax
  41669d:	or     BYTE PTR [edi],0xc2
  4166a0:	and    BYTE PTR [edx],bl
  4166a2:	test   BYTE PTR [esi-0x72],0x7a
  4166a6:	clc    
  4166a7:	adc    BYTE PTR [edi],dl
  4166a9:	push   esi
  4166aa:	dec    esp
  4166ab:	push   edx
  4166ac:	jmp    0xd26f4530
  4166b1:	adc    ch,BYTE PTR [edx]
  4166b3:	pop    ebp
  4166b4:	sub    eax,DWORD PTR [esi-0x23]
  4166b7:	shl    DWORD PTR [esi+ebp*2-0xbacefbc],cl
  4166be:	int    0x74
  4166c0:	add    bl,BYTE PTR [ebx+0x45821397]
  4166c6:	cwde   
  4166c7:	and    DWORD PTR [eax+0x4b],eax
  4166ca:	repnz inc edi
  4166cc:	sub    DWORD PTR [esi-0x6afd21d3],edi
  4166d2:	dec    edi
  4166d3:	mov    cl,dh
  4166d5:	push   edi
  4166d6:	aas    
  4166d7:	inc    ebp
  4166d8:	ret    
  4166d9:	ss xchg ecx,eax
  4166db:	(bad)
  4166df:	loope  0x41675b
  4166e1:	cmp    eax,0x5d8dfb18
  4166e6:	adc    al,BYTE PTR [eax]
  4166e8:	xor    ah,BYTE PTR [ecx-0x59f9efed]
  4166ee:	lods   al,BYTE PTR ds:[esi]
  4166ef:	fcmovne st,st(7)
  4166f1:	sub    DWORD PTR [ebx+0x568ba99d],edi
  4166f7:	es iret 
  4166f9:	inc    ebp
  4166fa:	or     DWORD PTR [ecx+0xd6bcf16],esi
  416700:	jno    0x416738
  416702:	ss mov esp,0x605c64ae
  416708:	mov    ebp,0x3cafad5c
  41670d:	xor    DWORD PTR [ebx-0x3b],0xe29511ed
  416714:	iret   
  416715:	mov    esi,0x883dabb9
  41671a:	rcl    edi,cl
  41671c:	and    DWORD PTR [esp+edi*1+0x40],edx
  416720:	iret   
  416721:	call   0xad0c:0x7b8672f7
  416728:	repz or al,0xe7
  41672b:	addr16 popa 
  41672d:	jg     0x416783
  41672f:	adc    dh,BYTE PTR [ebp-0x44e52741]
  416735:	fsubp  st(2),st
  416737:	push   edx
  416738:	dec    edx
  416739:	or     edx,DWORD PTR [esi+0x1a]
  41673c:	inc    esi
  41673d:	retf   
  41673e:	sub    al,0x27
  416740:	std    
  416741:	sub    al,0x19
  416743:	mov    bh,0xc
  416745:	sbb    edi,DWORD PTR [esi+0x5e986fc7]
  41674b:	mov    ch,0x40
  41674d:	out    0x54,eax
  41674f:	pop    esi
  416750:	retf   
  416751:	repnz cwde 
  416753:	mov    eax,ds:0xecc51910
  416758:	in     al,0x61
  41675a:	call   DWORD PTR [ecx-0x54ea1be]
  416760:	imul   eax,ecx,0xa5e56f74
  416766:	jno    0x4166fb
  416768:	mov    bh,0xd3
  41676a:	xor    cl,BYTE PTR [ebx]
  41676c:	sahf   
  41676d:	pop    ds
  41676e:	bnd je 0x41674f
  416771:	push   es
  416772:	loopne 0x416759
  416774:	es aad 0x58
  416777:	adc    DWORD PTR [esi+0x1fed31b5],esp
  41677d:	xor    ebx,DWORD PTR [eax+0x2f]
  416780:	mov    esi,0x34441fa8
  416785:	dec    ecx
  416786:	retf   
  416787:	out    dx,al
  416788:	xchg   esp,eax
  416789:	cmp    ch,ch
  41678b:	push   eax
  41678c:	in     eax,dx
  41678d:	test   eax,0xa79c7060
  416792:	rcr    BYTE PTR [esi-0x2a],1
  416795:	or     DWORD PTR [eax+0x5fb7da1c],eax
  41679b:	pop    esi
  41679c:	ret    0xd6cf
  41679f:	pop    esp
  4167a0:	pop    es
  4167a1:	mov    edi,0x1500f597
  4167a6:	aas    
  4167a7:	fdiv   DWORD PTR [edx+0x71ac2dd9]
  4167ad:	push   ebp
  4167ae:	popf   
  4167af:	sar    DWORD PTR [esi],1
  4167b1:	mov    esi,0xa8a63ed1
  4167b6:	imul   ebx,DWORD PTR [ecx-0x49],0x91ba31d1
  4167bd:	addr16 xchg esi,eax
  4167bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c0:	mov    al,0xd4
  4167c2:	mov    ds:0x10185c71,al
  4167c7:	shr    BYTE PTR [ecx-0x4723899a],cl
  4167cd:	pushf  
  4167ce:	shl    DWORD PTR [ebx+ebx*1-0x413c4ddc],0x8b
  4167d6:	jmp    0x416759
  4167d8:	xchg   edi,eax
  4167d9:	and    eax,0x5e339616
  4167de:	mov    eax,ds:0xacbe3682
  4167e3:	mov    esp,0x28997213
  4167e8:	ins    DWORD PTR es:[edi],dx
  4167e9:	jecxz  0x4167fe
  4167eb:	mov    al,0x7
  4167ed:	dec    edx
  4167ee:	sub    eax,edi
  4167f0:	cmp    edi,DWORD PTR [edx+0x72]
  4167f3:	jmp    0x416777
  4167f5:	jae    0x41684d
  4167f7:	mov    ds:0x182a597e,al
  4167fc:	push   ecx
  4167fd:	inc    esi
  4167fe:	and    dh,ah
  416800:	mov    esp,DWORD PTR [esi]
  416802:	mov    al,ds:0x93321e1c
  416807:	stc    
  416808:	push   ebx
  416809:	(bad)  
  41680a:	pusha  
  41680b:	test   eax,0xb595f203
  416810:	push   eax
  416811:	add    eax,0x779b1121
  416816:	retf   
  416817:	hlt    
  416818:	(bad)
  41681c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41681d:	mov    BYTE PTR [ecx],bl
  41681f:	sub    BYTE PTR ds:0x9668660f,bh
  416825:	and    ebp,DWORD PTR [eax-0x66]
  416828:	icebp  
  416829:	icebp  
  41682a:	mov    ch,0x7b
  41682c:	cmp    edx,DWORD PTR [edx+0x18]
  41682f:	sbb    cl,BYTE PTR [edi+0x72f404bc]
  416835:	sbb    esp,DWORD PTR [edi-0x44]
  416838:	cwde   
  416839:	test   al,0x8
  41683b:	je     0x41687b
  41683d:	inc    esp
  41683e:	dec    ebx
  41683f:	pop    edx
  416840:	add    BYTE PTR [edx-0x1cb6bc1f],cl
  416846:	pop    ds
  416847:	lods   al,BYTE PTR ds:[esi]
  416848:	adc    eax,0xb8bc08fa
  41684d:	push   ecx
  41684e:	add    DWORD PTR [edi-0x6d],ebx
  416851:	shl    BYTE PTR [ecx],0xfa
  416854:	popa   
  416855:	call   0x81c5:0x2347c68c
  41685c:	mov    BYTE PTR [ecx-0xf],cl
  41685f:	repz pop eax
  416861:	fwait
  416862:	adc    eax,0x1f60db14
  416867:	pop    edi
  416868:	xchg   ecx,eax
  416869:	or     al,0x28
  41686b:	mov    esp,0xfde75ab1
  416870:	or     ch,BYTE PTR [ecx-0x3b071f16]
  416876:	add    al,0x8e
  416878:	inc    edx
  416879:	outs   dx,BYTE PTR ds:[esi]
  41687a:	adc    eax,0xa103c5a9
  41687f:	(bad)  
  416880:	xchg   esi,eax
  416881:	add    esi,esp
  416883:	outs   dx,BYTE PTR ds:[esi]
  416884:	mov    al,0xad
  416886:	repnz push ebp
  416888:	add    esp,esp
  41688a:	fisttp QWORD PTR [eax]
  41688c:	shl    BYTE PTR [edx+ebp*1+0xa],cl
  416890:	jl     0x416864
  416892:	call   0xdd7f9b82
  416897:	adc    ah,bl
  416899:	iret   
  41689a:	push   es
  41689b:	adc    eax,0xd524da98
  4168a0:	(bad)  
  4168a1:	and    DWORD PTR [edi],eax
  4168a3:	call   0x9726:0x264989ce
  4168aa:	mov    al,ds:0xe072dc24
  4168af:	xor    eax,0xabadc508
  4168b4:	test   BYTE PTR [ecx-0x63ff5bfa],ch
  4168ba:	shld   DWORD PTR [ecx],ecx,0xd3
  4168be:	jmp    0xdbd62af
  4168c3:	adc    eax,0xd6f66234
  4168c8:	mov    WORD PTR [edx-0x3e9e4c41],cs
  4168ce:	or     al,BYTE PTR [edx-0x370efaf5]
  4168d4:	lds    ebx,FWORD PTR [esi-0x56]
  4168d7:	cli    
  4168d8:	inc    esi
  4168d9:	aad    0xce
  4168db:	add    eax,0xa7545171
  4168e0:	cmp    esi,eax
  4168e2:	cmp    al,BYTE PTR [ecx-0x4968f288]
  4168e8:	test   BYTE PTR [bp+di-0x5c51],dl
  4168ed:	jmp    0x4168f5
  4168ef:	adc    DWORD PTR [esi],ecx
  4168f1:	dec    eax
  4168f2:	push   esp
  4168f3:	shr    edx,cl
  4168f5:	mov    ch,0xba
  4168f7:	iret   
  4168f8:	dec    eax
  4168f9:	bound  ecx,QWORD PTR [esi-0xb0f3aa]
  4168ff:	fsubr  QWORD PTR [edi+eax*8-0x3a74adc2]
  416906:	arpl   WORD PTR ds:0x3ebac927,ax
  41690c:	stos   DWORD PTR es:[edi],eax
  41690d:	adc    eax,0xe11dd96d
  416912:	add    eax,0xe0ab167c
  416917:	mov    ?,WORD PTR [edi+0x720b740f]
  41691d:	pop    esi
  41691e:	in     al,dx
  41691f:	mov    BYTE PTR [edx],bh
  416921:	mov    dl,0x1f
  416923:	test   al,0x8a
  416925:	adc    al,0xf
  416927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416928:	in     al,dx
  416929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41692a:	push   edx
  41692b:	aad    0x8f
  41692d:	jnp    0x4168cc
  41692f:	mov    eax,ds:0x60233aad
  416934:	stos   BYTE PTR es:[edi],al
  416935:	cli    
  416936:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416938:	mov    eax,0x65c571ab
  41693d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41693e:	pop    esp
  41693f:	mov    ebx,0xaef21ba2
  416944:	cmc    
  416945:	jp     0x4168ca
  416947:	sub    ebp,DWORD PTR [ebx]
  416949:	and    DWORD PTR [esi-0x4b],ebp
  41694c:	xchg   edi,eax
  41694d:	fiadd  DWORD PTR [ecx+0x7f]
  416950:	add    al,0xad
  416952:	cmp    al,0x54
  416954:	sub    edx,eax
  416956:	in     eax,dx
  416957:	xchg   edi,eax
  416958:	xchg   ebp,eax
  416959:	imul   eax,ebx,0xbd1a602c
  41695f:	ss push edi
  416961:	outs   dx,BYTE PTR ds:[esi]
  416962:	clc    
  416963:	fsub   QWORD PTR ss:[edi]
  416966:	cmp    ebx,DWORD PTR [esp+edi*4+0x20cfb75c]
  41696d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41696e:	adc    al,0xd5
  416970:	(bad)  
  416971:	in     eax,0x57
  416973:	pusha  
  416974:	(bad)  [ebx+0x3f34b719]
  41697a:	push   ebx
  41697b:	add    BYTE PTR [ecx+0x46],ah
  41697e:	icebp  
  41697f:	xchg   ecx,eax
  416980:	dec    esp
  416981:	xlat   BYTE PTR ds:[ebx]
  416982:	inc    eax
  416983:	sbb    ecx,DWORD PTR [edi-0xe]
  416986:	sbb    BYTE PTR [edi+0x4cd88115],bl
  41698c:	pop    esp
  41698d:	enter  0xe414,0x2
  416991:	mov    edi,0x60dd86b2
  416996:	xchg   edx,eax
  416997:	mov    edi,0xa7630c80
  41699c:	push   0x62587a83
  4169a1:	jb     0x4169cc
  4169a3:	daa    
  4169a4:	ss retf 0xa610
  4169a8:	mov    bh,0x45
  4169aa:	push   0xbbe70519
  4169af:	xchg   BYTE PTR [eax],bh
  4169b1:	int3   
  4169b2:	fnstenv [ecx-0x47]
  4169b5:	push   ds
  4169b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169b7:	push   ss
  4169b8:	xchg   ecx,eax
  4169b9:	fisttp WORD PTR [ebp+0x4a6f614b]
  4169bf:	xchg   ecx,eax
  4169c0:	popa   
  4169c1:	mov    al,ds:0xaad7ac12
  4169c6:	sbb    esi,DWORD PTR [ebx]
  4169c8:	cmp    ecx,ecx
  4169ca:	repz mov ebp,DWORD PTR [edi]
  4169cd:	loope  0x4169de
  4169cf:	add    ah,cl
  4169d1:	std    
  4169d2:	sti    
  4169d3:	stos   DWORD PTR es:[edi],eax
  4169d4:	lods   al,BYTE PTR ds:[esi]
  4169d5:	xor    eax,0x358cd3ce
  4169da:	(bad)  
  4169db:	mov    al,0x9e
  4169dd:	(bad)  
  4169de:	pop    ss
  4169df:	aaa    
  4169e0:	ret    0xf8cb
  4169e3:	inc    esi
  4169e4:	pop    esi
  4169e5:	(bad)  
  4169e6:	add    ch,BYTE PTR [edx-0x6]
  4169e9:	imul   esp,edi,0xfffffffa
  4169ec:	mov    bl,0xf8
  4169ee:	adc    DWORD PTR [edx-0x48a0d94],edx
  4169f4:	sub    dl,bh
  4169f6:	in     eax,0xef
  4169f8:	sub    al,0x12
  4169fa:	test   DWORD PTR [ebp+0x7de96f68],esi
  416a00:	jne    0x416a4e
  416a02:	jmp    0x147c848c
  416a07:	aam    0xfb
  416a09:	xchg   DWORD PTR [edx+0x5a],esp
  416a0c:	add    esp,DWORD PTR [eax+eax*8-0x5da8e1]
  416a13:	xchg   edx,eax
  416a14:	push   esp
  416a15:	sub    ah,BYTE PTR [edx-0x22303d34]
  416a1b:	retf   
  416a1c:	cli    
  416a1d:	ds or  al,0xef
  416a20:	pop    eax
  416a21:	or     eax,0x8c5b161
  416a26:	pop    es
  416a27:	add    eax,0x112de692
  416a2c:	sar    DWORD PTR [eax+0x3e],0xe8
  416a30:	xor    BYTE PTR [esi-0x4e00f90a],0xe
  416a37:	loopne 0x416a3c
  416a39:	hlt    
  416a3a:	xchg   esp,eax
  416a3b:	cld    
  416a3c:	sbb    ah,cl
  416a3e:	inc    ebp
  416a3f:	and    al,0x16
  416a41:	fsubr  QWORD PTR [edi+0x62]
  416a44:	cmc    
  416a45:	cmp    BYTE PTR [ecx+0x59],cl
  416a48:	push   0xffffffa6
  416a4a:	xchg   ecx,eax
  416a4b:	pop    ebx
  416a4c:	sbb    BYTE PTR [edx-0x5d],dh
  416a4f:	adc    dl,bh
  416a51:	jb     0x416a11
  416a53:	jge    0x416ab7
  416a55:	rcr    ch,0x14
  416a58:	mov    ebp,0x8f43067f
  416a5d:	aam    0xfe
  416a5f:	and    eax,0xd1693959
  416a64:	sub    al,0xd7
  416a66:	push   0xffffffe9
  416a68:	ficom  WORD PTR [ecx+0x3a28f]
  416a6e:	add    BYTE PTR [eax],al
  416a70:	add    BYTE PTR [eax],al
  416a72:	call   0xfb7c3508
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx+0x54f3b875],cl
  416a7f:	test   al,0x29
  416a81:	cmp    DWORD PTR [ebp-0x18],eax
  416a84:	add    BYTE PTR [eax],al
  416a86:	repz add al,0x0
  416a89:	add    BYTE PTR ds:0xe46d8204,ah
  416a8f:	pop    eax
  416a90:	scas   al,BYTE PTR es:[edi]
  416a91:	rcr    ah,1
  416a93:	fld    DWORD PTR [ebx+0x222d662]
  416a99:	pop    ebx
  416a9a:	clc    
  416a9b:	out    0xb6,eax
  416a9d:	sub    edx,ebx
  416a9f:	xor    ebp,DWORD PTR [eax+0xe]
  416aa2:	mov    dh,0x50
  416aa4:	hlt    
  416aa5:	mov    al,ds:0x431991a1
  416aaa:	loop   0x416af1
  416aac:	test   eax,0xd97520cb
  416ab1:	js     0x416a57
  416ab3:	daa    
  416ab4:	push   edi
  416ab5:	scas   eax,DWORD PTR es:[edi]
  416ab6:	(bad)  
  416ab7:	fiadd  DWORD PTR [eax+eax*1]
  416aba:	lods   eax,DWORD PTR ds:[esi]
  416abb:	mov    dh,0x8f
  416abd:	mov    ch,0xa9
  416abf:	out    dx,eax
  416ac0:	les    eax,FWORD PTR [ebx]
  416ac2:	in     eax,0x2b
  416ac4:	sbb    ebp,DWORD PTR [eax+0x2a8cbf4f]
  416aca:	jmp    0x371b8314
  416acf:	sub    BYTE PTR [ebp-0x4878ce1e],0x3a
  416ad6:	shr    esi,0x66
  416ad9:	mov    WORD PTR [ecx+esi*4+0x13],es
  416add:	mov    al,ds:0x5576dda5
  416ae2:	mov    edx,0xe28c6874
  416ae7:	pop    ds
  416ae8:	mov    ch,BYTE PTR [edx+eax*4+0x43e843b7]
  416aef:	mov    eax,0xfd3d498
  416af4:	mov    al,dh
  416af6:	mov    bh,0xeb
  416af8:	or     al,0xb0
  416afa:	add    eax,0x3cb709a2
  416aff:	cwde   
  416b00:	pop    edi
  416b01:	jae    0x416ad8
  416b03:	xchg   edx,eax
  416b04:	rol    bh,1
  416b06:	stos   BYTE PTR es:[edi],al
  416b07:	mov    ch,0x3
  416b09:	add    eax,0x5088d25c
  416b0e:	test   eax,0x4cf1e19
  416b13:	lahf   
  416b14:	cmovl  esp,ebx
  416b17:	or     eax,0x22e63382
  416b1c:	sub    al,0xa3
  416b1e:	mov    esi,0x2561c7b1
  416b23:	xor    DWORD PTR [ebx],ebp
  416b25:	sar    dl,0xfb
  416b28:	pop    esp
  416b29:	xchg   ebx,eax
  416b2a:	mov    DWORD PTR [ecx+eiz*2+0x13],edi
  416b2e:	jecxz  0x416ab2
  416b30:	std    
  416b31:	push   es
  416b32:	out    dx,eax
  416b33:	stos   BYTE PTR es:[edi],al
  416b34:	ins    BYTE PTR es:[edi],dx
  416b35:	pop    ds
  416b36:	push   ecx
  416b37:	jb     0x416acc
  416b39:	inc    edx
  416b3a:	or     bl,BYTE PTR [edi]
  416b3c:	mov    ecx,0x8ef81936
  416b41:	fidiv  DWORD PTR [esi+0x15]
  416b44:	jbe    0x416b3e
  416b46:	in     al,0x22
  416b48:	ins    BYTE PTR es:[edi],dx
  416b49:	or     al,0xa
  416b4b:	xsave  [eax]
  416b4e:	scas   al,BYTE PTR es:[edi]
  416b4f:	xchg   ebp,eax
  416b50:	retf   
  416b51:	cli    
  416b52:	(bad)  
  416b53:	leave  
  416b54:	loopne 0x416ae9
  416b56:	(bad)  
  416b57:	int    0x92
  416b59:	out    dx,al
  416b5a:	test   al,0x47
  416b5c:	retf   0x9580
  416b5f:	ffree  st(3)
  416b61:	pandn  mm2,QWORD PTR [eax]
  416b64:	jnp    0x416bd5
  416b66:	mov    DWORD PTR [esi+esi*8-0x55aebd57],edx
  416b6d:	ret    
  416b6e:	cmp    al,0xd7
  416b70:	pop    ebx
  416b71:	sub    bl,BYTE PTR [ebp+0x718a2c81]
  416b77:	loope  0x416b0a
  416b79:	mov    bh,0xe0
  416b7b:	sahf   
  416b7c:	jo     0x416b32
  416b7e:	mov    cs,WORD PTR [edx+0x54]
  416b81:	ret    0x3e18
  416b84:	(bad)  
  416b85:	push   esi
  416b86:	mov    edi,0x9f5b92bd
  416b8b:	test   bl,ch
  416b8d:	out    0x5,eax
  416b8f:	test   BYTE PTR [ebx+0x176275cc],cl
  416b95:	retf   
  416b96:	retf   
  416b97:	call   0x7fdb:0x9d00344a
  416b9e:	test   al,0xb1
  416ba0:	inc    edi
  416ba1:	ss cs loopne 0x416b2d
  416ba5:	std    
  416ba6:	and    ah,BYTE PTR ds:0x294e3b7f
  416bac:	adc    ch,dl
  416bae:	jecxz  0x416c21
  416bb0:	in     al,dx
  416bb1:	inc    eax
  416bb2:	xlat   BYTE PTR ds:[ebx]
  416bb3:	sar    DWORD PTR ds:0x11089f37,1
  416bb9:	mov    ch,0x7a
  416bbb:	or     edx,DWORD PTR [eax+0x76138a7b]
  416bc1:	loope  0x416bf2
  416bc3:	aaa    
  416bc4:	cmc    
  416bc5:	fwait
  416bc6:	adc    eax,0x9d5b0705
  416bcb:	aas    
  416bcc:	fistp  WORD PTR [eax]
  416bce:	pop    edx
  416bcf:	pop    esi
  416bd0:	aas    
  416bd1:	jne    0x416c1f
  416bd3:	sqrtps xmm4,XMMWORD PTR [ebp-0x79]
  416bd7:	mov    ah,0x39
  416bd9:	mov    ah,0x28
  416bdb:	inc    ebx
  416bdc:	pop    edx
  416bdd:	iret   
  416bde:	hlt    
  416bdf:	mov    dh,0x35
  416be1:	mov    dl,0xc6
  416be3:	cmp    ch,cl
  416be5:	mov    esp,0x71480fa6
  416bea:	idiv   DWORD PTR [edx-0x37f98178]
  416bf0:	out    dx,eax
  416bf1:	lods   al,BYTE PTR ds:[esi]
  416bf2:	xchg   esi,edi
  416bf4:	jne    0x416c4a
  416bf6:	push   0x14cee1c0
  416bfb:	retf   0x44a9
  416bfe:	(bad)
  416c01:	inc    DWORD PTR [edx]
  416c03:	fst    DWORD PTR [eax-0x77]
  416c06:	push   ss
  416c07:	jns    0x416be2
  416c09:	xor    esi,DWORD PTR [esi]
  416c0b:	pop    ss
  416c0c:	aas    
  416c0d:	cmp    eax,ecx
  416c0f:	jle    0x416c56
  416c11:	pop    edx
  416c12:	mov    esi,0xe42c72c3
  416c17:	jne    0x416bea
  416c19:	mov    dh,0x91
  416c1b:	add    al,0xc6
  416c1d:	mov    ebp,0xcb116528
  416c22:	and    ah,al
  416c24:	ss mov edx,0x892b77b4
  416c2a:	inc    eax
  416c2b:	xor    al,0x4b
  416c2d:	cmp    DWORD PTR [edx+0x3d],0x744f0e8f
  416c34:	inc    edi
  416c35:	jbe    0x416c9b
  416c37:	aaa    
  416c38:	sub    eax,0xb9a77d89
  416c3d:	push   eax
  416c3e:	xor    ch,bh
  416c40:	test   DWORD PTR [ecx+edx*1+0x42c1ecf2],edi
  416c47:	(bad)  
  416c48:	scas   eax,DWORD PTR es:[edi]
  416c49:	xchg   BYTE PTR [eax-0x1b7661ee],dh
  416c4f:	clc    
  416c50:	rcr    DWORD PTR [esi],1
  416c52:	add    DWORD PTR [ecx],0x2b
  416c55:	inc    edx
  416c56:	push   eax
  416c57:	pop    es
  416c58:	arpl   WORD PTR [edi+0x26d07f41],si
  416c5e:	lea    ebx,[eax-0x50]
  416c61:	cmp    esp,DWORD PTR [eax+0x229847d4]
  416c67:	inc    ebx
  416c68:	arpl   WORD PTR [ebx-0x6e],si
  416c6b:	mov    al,0xf4
  416c6d:	inc    edi
  416c6e:	cwde   
  416c6f:	out    dx,eax
  416c70:	cld    
  416c71:	fldcw  WORD PTR [ebx]
  416c73:	push   ebx
  416c74:	adc    ah,BYTE PTR [edi]
  416c76:	cmp    esp,esi
  416c78:	clc    
  416c79:	add    BYTE PTR [esi],0xab
  416c7c:	sbb    eax,0xee805922
  416c81:	daa    
  416c82:	dec    ecx
  416c83:	les    edi,FWORD PTR [edi+0x5a212bee]
  416c89:	xor    DWORD PTR [eax],edx
  416c8b:	pop    ebx
  416c8c:	icebp  
  416c8d:	sbb    eax,DWORD PTR [edi]
  416c8f:	les    ecx,FWORD PTR [ecx-0x368c58ac]
  416c95:	shr    DWORD PTR [ecx],cl
  416c97:	mov    cl,0x7c
  416c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c9a:	rcl    ch,0x8
  416c9d:	xor    bh,dh
  416c9f:	xchg   DWORD PTR [esi],edx
  416ca1:	mov    ebx,0xd1e460ca
  416ca6:	jmp    0x416d13
  416ca8:	sub    edi,DWORD PTR [edi-0x44e9cf14]
  416cae:	inc    ebp
  416caf:	loope  0x416d0a
  416cb1:	adc    esi,edi
  416cb3:	push   cs
  416cb4:	out    0xb4,eax
  416cb6:	pushf  
  416cb7:	fidivr WORD PTR [ecx-0x3]
  416cba:	mov    ch,0x59
  416cbc:	or     cl,dl
  416cbe:	jae    0x416c6d
  416cc0:	or     al,0xbd
  416cc2:	sub    cl,dl
  416cc4:	imul   edx,DWORD PTR [esi+ebx*8],0x26
  416cc8:	add    ah,BYTE PTR [eax-0x4e]
  416ccb:	addr16 push edx
  416ccd:	nop
  416cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ccf:	mov    ecx,ebp
  416cd1:	pop    edx
  416cd2:	stc    
  416cd3:	xchg   esi,eax
  416cd4:	leave  
  416cd5:	mov    bh,0x1c
  416cd7:	mov    dl,0x8
  416cd9:	jns    0x416d17
  416cdb:	(bad)  
  416cdc:	icebp  
  416cdd:	or     al,0xfa
  416cdf:	xor    BYTE PTR [edi-0x1cac505e],0x74
  416ce6:	cmp    BYTE PTR [edi+0x438f5108],ah
  416cec:	lahf   
  416ced:	shl    ebx,0x88
  416cf0:	or     al,0x5f
  416cf2:	inc    ebx
  416cf3:	call   0xa435:0x1a144a73
  416cfa:	ss pusha 
  416cfc:	cmp    ebx,DWORD PTR [edi+0x127cf6de]
  416d02:	mov    ecx,0xa07b2fff
  416d07:	and    DWORD PTR [ebp-0x58],ecx
  416d0a:	mov    bl,0x82
  416d0c:	jg     0x416d4b
  416d0e:	cdq    
  416d0f:	loop   0x416d68
  416d11:	push   cs
  416d12:	adc    BYTE PTR [edi+0x38],0xd4
  416d16:	mov    dh,0x97
  416d18:	mov    esp,0x2843837f
  416d1d:	add    eax,DWORD PTR [esi+esi*2]
  416d20:	imul   eax,DWORD PTR [ebx+0x73f0c8f3],0x8cedadb
  416d2a:	(bad)  
  416d2b:	inc    edx
  416d2d:	xor    al,0x47
  416d2f:	int3   
  416d30:	in     eax,dx
  416d31:	add    DWORD PTR [edx],edx
  416d33:	gs test eax,0x6f5740e4
  416d39:	and    eax,0xe7bfb5d7
  416d3e:	mov    ebx,0x2fe20ae
  416d43:	test   eax,0x9905640a
  416d48:	sub    eax,0xa3ba8562
  416d4d:	mov    bh,0x59
  416d4f:	jp     0x416d7f
  416d51:	test   BYTE PTR [edx],cl
  416d53:	cmp    BYTE PTR [esi+0x55],bh
  416d56:	out    0xc8,eax
  416d58:	in     eax,0x10
  416d5a:	xchg   ecx,eax
  416d5b:	mov    ch,dh
  416d5d:	mov    ah,0x22
  416d5f:	imul   ebp,eax,0xd454c150
  416d65:	out    0xa9,eax
  416d67:	int3   
  416d68:	xchg   DWORD PTR [edx],esi
  416d6a:	shl    BYTE PTR [edi],1
  416d6c:	emms   
  416d6e:	jg     0x416cf9
  416d70:	sub    al,0x27
  416d72:	fld    QWORD PTR [ebp+0x6e]
  416d75:	fild   DWORD PTR [esi+0x7960e41c]
  416d7b:	dec    esp
  416d7c:	test   eax,0x2df92f8e
  416d81:	adc    eax,0xc0db782a
  416d86:	call   0x5c0c4af8
  416d8b:	sbb    bh,ah
  416d8d:	popf   
  416d8e:	lods   al,BYTE PTR ds:[esi]
  416d8f:	sbb    BYTE PTR [ecx-0x19f075d5],dh
  416d95:	in     eax,0x97
  416d97:	jge    0x416d84
  416d99:	ror    cl,0x3b
  416d9c:	jb     0x416dca
  416d9e:	mov    bl,0x93
  416da1:	mov    al,ds:0x6be9f743
  416da6:	adc    DWORD PTR [ebp+0x4dfc688f],0xffffffce
  416dad:	jnp    0x416e1d
  416daf:	hlt    
  416db0:	inc    ecx
  416db1:	or     BYTE PTR [ebp+0x1bc7a752],bh
  416db7:	fst    DWORD PTR [ecx+0x6d9bd788]
  416dbd:	pop    esi
  416dbe:	push   0x4e93eae
  416dc3:	push   0x350ea5cb
  416dc8:	inc    ebp
  416dc9:	mov    es,WORD PTR [eax]
  416dcb:	(bad)  [ecx]
  416dcd:	ds dec ebx
  416dcf:	jb     0x416d92
  416dd1:	test   al,0xe1
  416dd3:	outs   dx,BYTE PTR ds:[esi]
  416dd4:	cwde   
  416dd5:	xchg   ecx,eax
  416dd6:	es inc esp
  416dd8:	cmp    eax,0x32541eb7
  416ddd:	mov    esp,0xfd8423bf
  416de2:	push   esi
  416de3:	sbb    dl,0xf8
  416de6:	cmp    eax,0xffffff8e
  416de9:	cld    
  416dea:	and    al,0xfd
  416dec:	pop    ss
  416ded:	les    ecx,FWORD PTR [ebx+esi*8-0x15]
  416df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416df2:	sub    ebx,DWORD PTR [ebp-0x27dfbc6a]
  416df8:	rcr    BYTE PTR [ecx],cl
  416dfa:	pop    edx
  416dfb:	rcl    DWORD PTR [edx+0x3a1ef23b],0x85
  416e02:	xchg   esi,eax
  416e03:	pop    ecx
  416e04:	(bad)  
  416e05:	pusha  
  416e06:	xchg   ecx,eax
  416e07:	aaa    
  416e08:	adc    eax,0x1214f4a3
  416e0d:	jbe    0x416df1
  416e0f:	out    0x72,al
  416e11:	mov    ch,0xd8
  416e13:	push   es
  416e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e17:	sbb    al,0x47
  416e19:	scas   al,BYTE PTR es:[edi]
  416e1a:	stc    
  416e1b:	(bad)  
  416e1c:	jecxz  0x416e79
  416e1e:	and    eax,DWORD PTR ds:0x5a8d0f6c
  416e24:	sbb    DWORD PTR [ecx+0x26],esi
  416e27:	arpl   WORD PTR [ebx-0x24f81e71],dx
  416e2d:	rol    DWORD PTR [ebp-0x45df5e78],1
  416e33:	add    bh,BYTE PTR [ecx-0x7a]
  416e36:	push   edx
  416e37:	xchg   ecx,eax
  416e38:	aad    0x56
  416e3a:	mov    al,0x78
  416e3c:	gs (bad) 
  416e3e:	cmp    ecx,edi
  416e40:	mov    ebx,0x6176622f
  416e45:	mov    dl,0x86
  416e47:	cmp    al,0x45
  416e49:	jne    0x416e80
  416e4b:	push   cs
  416e4c:	xor    al,0x20
  416e4e:	push   eax
  416e4f:	hlt    
  416e50:	push   0xffffffd5
  416e52:	test   dh,ch
  416e54:	cmp    DWORD PTR [esi-0x3d],edx
  416e57:	rcl    BYTE PTR [esi+0x42],cl
  416e5a:	xchg   edi,eax
  416e5b:	adc    al,0x8a
  416e5d:	hlt    
  416e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e5f:	inc    si
  416e61:	fadd   QWORD PTR [edx-0x6c]
  416e64:	mov    BYTE PTR [esi+ebp*4-0x39],bl
  416e68:	jp     0x416e56
  416e6a:	enter  0x924a,0x11
  416e6e:	retf   
  416e6f:	les    esp,FWORD PTR [ebx+ebp*1]
  416e72:	push   esp
  416e73:	push   cs
  416e74:	rol    DWORD PTR [edi+ecx*4-0x71],1
  416e78:	cmp    al,0x3a
  416e7a:	jp     0x416ef4
  416e7c:	sbb    eax,0x94441aaf
  416e81:	stos   BYTE PTR es:[edi],al
  416e82:	mov    ah,0xff
  416e84:	and    BYTE PTR [ebx+0x3d16529e],0x29
  416e8b:	inc    eax
  416e8c:	ins    DWORD PTR es:[edi],dx
  416e8d:	jp     0x416e83
  416e8f:	call   0xb66b0077
  416e94:	mov    ch,0x59
  416e96:	or     eax,0x7a2f1308
  416e9b:	sub    al,0x8f
  416e9d:	int3   
  416e9e:	shr    DWORD PTR [esp+edi*4-0x567a5029],0x55
  416ea6:	dec    esp
  416ea7:	les    edx,FWORD PTR [edi+edx*4-0x361d6506]
  416eae:	inc    eax
  416eaf:	out    0xb9,al
  416eb1:	mov    eax,ds:0xeafa487d
  416eb6:	addr16 inc esp
  416eb8:	fdivrp st(2),st
  416eba:	nop
  416ebb:	mov    ch,0x72
  416ebd:	add    DWORD PTR [ecx-0x76],esp
  416ec0:	mov    WORD PTR [ecx-0x9983b55],gs
  416ec6:	fcomip st,st(7)
  416ec8:	dec    eax
  416eca:	adc    BYTE PTR [edi-0x381a7462],bh
  416ed0:	jmp    0x4b7f:0xd5ab0acc
  416ed7:	sbb    eax,0xf37172a0
  416edc:	in     al,dx
  416edd:	push   ss
  416ede:	dec    ebx
  416edf:	pop    ds
  416ee0:	pop    esp
  416ee1:	frstor [edi-0x7e]
  416ee4:	(bad)  
  416ee5:	xor    eax,0x8b0b8a81
  416eea:	mov    WORD PTR [ecx+edi*4],fs
  416eed:	pop    ds
  416eee:	add    BYTE PTR [edx-0x23],al
  416ef1:	cmp    eax,0xf8ff519c
  416ef6:	inc    ecx
  416ef7:	adc    BYTE PTR [ebx+0x5ec1902],ch
  416efd:	call   0x7266:0x501b5330
  416f04:	jmp    0xe1f:0xa7687517
  416f0b:	jecxz  0x416f61
  416f0d:	inc    esi
  416f0e:	pop    eax
  416f0f:	sub    DWORD PTR [ebx+0x677925d6],esp
  416f15:	push   0x8cd066bd
  416f1a:	call   0xf1a3c59d
  416f1f:	ja     0x416f1f
  416f21:	sub    bl,BYTE PTR [edi+0x59]
  416f24:	outs   dx,DWORD PTR ds:[esi]
  416f25:	(bad)  
  416f26:	jmp    0xe7a9:0xac9c776f
  416f2d:	adc    ebp,DWORD PTR [esi-0x19]
  416f30:	fild   DWORD PTR [edx]
  416f32:	in     eax,0xa0
  416f34:	(bad)  
  416f35:	imul   ecx,esp,0xb64c4826
  416f3b:	data16 jae 0x416fa4
  416f3e:	(bad)  
  416f3f:	hlt    
  416f40:	mov    eax,DWORD PTR [ebx]
  416f42:	in     eax,dx
  416f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f45:	out    dx,al
  416f46:	cli    
  416f47:	rol    DWORD PTR [eax-0xed53437],0xbf
  416f4e:	pusha  
  416f4f:	pop    ds
  416f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f51:	pop    ebp
  416f52:	xchg   ecx,ebp
  416f54:	mov    cl,0x62
  416f56:	bound  ebx,QWORD PTR [eax+edx*2+0x40ac91e4]
  416f5d:	sbb    DWORD PTR [edi+0x15aea2f7],edx
  416f63:	cmp    eax,0xbde8d98f
  416f68:	dec    eax
  416f69:	mov    ds:0xfc76e0b7,eax
  416f6e:	std    
  416f6f:	inc    eax
  416f70:	mov    ds:0xad6eef7e,eax
  416f75:	dec    edi
  416f76:	xor    dl,BYTE PTR [eax-0x362d6c87]
  416f7c:	add    BYTE PTR [eax],0x0
  416f7f:	add    BYTE PTR [eax],al
  416f81:	add    BYTE PTR [ebp+0x2c],dl
  416f84:	pop    edi
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx-0x3fbc09da]
  416f90:	sbb    al,0x8
  416f92:	cmp    ch,ch
  416f94:	add    BYTE PTR [eax],al
  416f96:	repz add al,0x0
  416f99:	add    BYTE PTR [ebp-0x61b4825f],ch
  416f9f:	sbb    cl,BYTE PTR [edx]
  416fa1:	fcomp  st(2)
  416fa3:	cld    
  416fa4:	xchg   bh,ch
  416fa6:	stos   BYTE PTR es:[edi],al
  416fa7:	and    al,bl
  416fa9:	test   edi,esi
  416fab:	and    bh,ch
  416fad:	push   0x11
  416faf:	add    eax,0xc5ff2b55
  416fb4:	(bad)  
  416fb6:	pop    ebp
  416fb7:	mov    ebx,0xa280a9f2
  416fbc:	xlat   BYTE PTR ds:[ebx]
  416fbd:	push   ebx
  416fbe:	push   esp
  416fbf:	cwde   
  416fc0:	and    BYTE PTR [eax],bh
  416fc2:	cwde   
  416fc3:	mov    cs,WORD PTR [eax]
  416fc5:	cdq    
  416fc6:	xor    al,0x9a
  416fc8:	retf   
  416fc9:	mov    ah,0x84
  416fcb:	jl     0x416fb6
  416fcd:	in     al,0x1a
  416fcf:	cmp    al,dl
  416fd1:	cmc    
  416fd2:	and    eax,0xb2ae1618
  416fd7:	or     al,bh
  416fd9:	outs   dx,DWORD PTR ds:[esi]
  416fda:	fiadd  WORD PTR [esi-0x28f01996]
  416fe0:	xchg   esi,eax
  416fe1:	inc    ebx
  416fe2:	imul   ecx,DWORD PTR [ebx],0xf6eb58ac
  416fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fe9:	push   ebp
  416fea:	xor    al,0x11
  416fec:	std    
  416fed:	add    DWORD PTR [edx+0x575348ea],esi
  416ff3:	rcr    DWORD PTR [eax],1
  416ff5:	jecxz  0x417039
  416ff7:	push   esp
  416ff8:	sbb    al,0x3b
  416ffa:	mov    ah,0xa7
  416ffc:	sub    al,0x96
  416ffe:	dec    esp
  417000:	retf   0x1689
  417003:	lock jae 0x416fe0
  417006:	(bad)  
  417007:	lock mov edx,0x7c74118b
  41700d:	inc    edx
  41700e:	sub    eax,0xcc1f8d1e
  417013:	rcl    DWORD PTR [ebx+0x79550eb0],cl
  417019:	pop    ebx
  41701a:	call   0x6805:0xd53df33b
  417021:	shl    DWORD PTR [edi-0x5b4b3d7d],0x9e
  417028:	cmp    al,0x3d
  41702a:	lds    ebp,FWORD PTR [ebx-0x46c373ff]
  417030:	mov    BYTE PTR es:[eax-0x621986ca],0xad
  417038:	push   ds
  417039:	xchg   ebx,eax
  41703a:	pop    edx
  41703b:	inc    edi
  41703c:	push   edx
  41703d:	fld    st(2)
  41703f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417040:	xchg   edi,eax
  417041:	inc    esp
  417042:	(bad)  
  417043:	sbb    eax,0x3e29bbf6
  417048:	(bad)  
  417049:	out    0xe0,al
  41704b:	sub    ecx,edi
  41704d:	repnz stos DWORD PTR es:[edi],eax
  41704f:	ds xchg ebp,eax
  417051:	xlat   BYTE PTR ds:[ebx]
  417052:	and    esi,eax
  417054:	add    ebx,DWORD PTR [eax]
  417056:	jmp    0x41704f
  417058:	mov    eax,ds:0x43c78714
  41705d:	xchg   ecx,eax
  41705e:	or     ebp,ebx
  417060:	into   
  417061:	loop   0x4170d4
  417063:	mov    WORD PTR [esp+ebx*2+0x13a4b492],ds
  41706a:	sub    al,0x4f
  41706c:	cmp    edi,ecx
  41706e:	adc    ebx,ebp
  417070:	inc    ecx
  417071:	lock jecxz 0x4170d3
  417074:	inc    eax
  417075:	lods   eax,DWORD PTR ds:[esi]
  417076:	or     BYTE PTR [edi-0x448cc111],bh
  41707c:	outs   dx,DWORD PTR ds:[esi]
  41707d:	jns    0x417066
  41707f:	cmp    edx,DWORD PTR [esi]
  417081:	push   es
  417082:	mov    al,0x7
  417084:	ret    
  417085:	mov    ds:0xa4587e55,eax
  41708a:	sbb    eax,0xd3c6f832
  41708f:	cmc    
  417090:	mov    dl,0x1d
  417092:	mov    ah,0x5b
  417094:	scas   al,BYTE PTR es:[edi]
  417095:	stos   BYTE PTR es:[edi],al
  417096:	sub    eax,0xfd5f535a
  41709b:	cmc    
  41709c:	cs and eax,0x14a516aa
  4170a2:	cmp    bl,BYTE PTR [edx]
  4170a4:	xchg   edx,eax
  4170a5:	xor    ebp,DWORD PTR [edi]
  4170a7:	mov    bh,0x5a
  4170a9:	fwait
  4170aa:	inc    ebp
  4170ab:	lea    ebp,[edi]
  4170ad:	in     eax,dx
  4170ae:	lds    esi,FWORD PTR [ecx-0x4fa058f6]
  4170b4:	jmp    0x2f27:0xafdd1764
  4170bb:	imul   ebp,DWORD PTR ds:0x2794dab4,0x3d
  4170c2:	icebp  
  4170c3:	sar    esp,1
  4170c5:	add    dh,bl
  4170c7:	mov    es,WORD PTR [eax-0x1c]
  4170ca:	popa   
  4170cb:	pop    eax
  4170cc:	sti    
  4170cd:	into   
  4170ce:	test   DWORD PTR [ebx+0x7a300fc],eax
  4170d4:	fnstsw WORD PTR [edi-0x2c8b02ef]
  4170da:	jno    0x417137
  4170dc:	cmp    al,0xf
  4170de:	in     eax,0xda
  4170e0:	push   0xffffffaf
  4170e2:	test   eax,ecx
  4170e4:	xchg   DWORD PTR [ebp-0x50],ebp
  4170e7:	pop    ecx
  4170e8:	mov    WORD PTR [edx-0x5b3d04ac],es
  4170ee:	mov    bl,BYTE PTR [ebx-0x27c71064]
  4170f4:	comiss xmm3,DWORD PTR [eax+0x4aeb617e]
  4170fb:	(bad)  
  4170fc:	pop    edi
  4170fd:	push   0x3c
  4170ff:	fidivr WORD PTR [ecx]
  417101:	out    dx,eax
  417102:	(bad)  
  417103:	add    esp,DWORD PTR [edi]
  417105:	iret   
  417106:	and    eax,0xda5837cd
  41710b:	inc    edi
  41710c:	mov    edx,0xd30dc7f6
  417111:	fwait
  417112:	adc    eax,0x54601558
  417117:	push   cs
  417118:	inc    ebp
  417119:	jp     0x4170a7
  41711b:	mov    ch,0x5d
  41711d:	call   FWORD PTR ss:[ebx+0x7d]
  417121:	mov    esi,0xe5fa3a86
  417126:	pop    edi
  417127:	lods   eax,DWORD PTR ds:[esi]
  417128:	out    dx,eax
  417129:	arpl   WORD PTR [edx+edx*1],di
  41712c:	aas    
  41712d:	outs   dx,BYTE PTR ds:[esi]
  41712e:	(bad)  
  41712f:	mov    ss,WORD PTR [eax+0x376208df]
  417135:	adc    bl,ch
  417137:	adc    BYTE PTR [edx+0x7e86062c],bh
  41713d:	fcmovu st,st(0)
  41713f:	jb     0x4171b6
  417141:	sbb    ecx,DWORD PTR [edi+0x67]
  417144:	scas   eax,DWORD PTR es:[edi]
  417145:	and    al,0xd8
  417147:	sub    BYTE PTR [esi],dh
  417149:	and    DWORD PTR [edi],0xeb4dd644
  41714f:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417151:	stc    
  417152:	or     edi,DWORD PTR [edx+0x5b397e63]
  417158:	ss out dx,al
  41715a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41715b:	outs   dx,BYTE PTR ds:[esi]
  41715c:	sub    dh,bh
  41715e:	js     0x4171a4
  417160:	cmp    al,0xa0
  417162:	les    edx,FWORD PTR ds:0x8fac5ef3
  417168:	push   edx
  417169:	loope  0x41715f
  41716b:	sbb    eax,0x9b663435
  417170:	push   0x77
  417172:	pusha  
  417173:	sub    edi,DWORD PTR [eax]
  417175:	mov    esi,edx
  417177:	push   cs
  417178:	mov    ds,WORD PTR [esi]
  41717a:	mov    esp,0xbaa585b1
  41717f:	and    bl,BYTE PTR [ebx+0x5c]
  417182:	pop    es
  417183:	sub    BYTE PTR [ecx],dh
  417185:	adc    esp,ebp
  417187:	pop    edx
  417188:	jle    0x417135
  41718a:	pop    esi
  41718b:	repnz sbb edx,DWORD PTR [ebx]
  41718e:	repz xchg esp,eax
  417190:	mov    BYTE PTR [ecx-0x2837bad6],ah
  417196:	jmp    0x663b4375
  41719b:	xor    BYTE PTR [eax],dl
  41719d:	pop    ebp
  41719e:	sub    BYTE PTR [edx-0x7eb2f01c],0x69
  4171a5:	lods   al,BYTE PTR ds:[esi]
  4171a6:	or     al,BYTE PTR [ebp-0x36]
  4171a9:	dec    ebp
  4171aa:	fbstp  TBYTE PTR [edi]
  4171ac:	and    DWORD PTR [eax],ebp
  4171ae:	ins    DWORD PTR es:[edi],dx
  4171af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171b0:	inc    edi
  4171b1:	mov    ds:0x7a4e50d,eax
  4171b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171b7:	mov    es,WORD PTR ds:0x570e72dd
  4171bd:	and    eax,0xf0fac20e
  4171c2:	push   0xffffffdd
  4171c4:	mov    ah,0x7f
  4171c6:	pusha  
  4171c7:	mov    esi,0x7ed9ad3d
  4171cc:	push   ecx
  4171cd:	sbb    DWORD PTR [esi],0xcfb85f69
  4171d3:	adc    eax,0x56c20f89
  4171d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171d9:	mov    ?,WORD PTR [eax]
  4171db:	mov    eax,0xba8b5e2d
  4171e0:	frndint 
  4171e2:	and    bh,BYTE PTR ds:0xb0ecfe81
  4171e8:	imul   esp,DWORD PTR [ebx-0xc03a47d],0xe
  4171ef:	xchg   esp,eax
  4171f0:	lea    ebp,[ebx]
  4171f2:	in     al,dx
  4171f3:	jae    0x41717a
  4171f5:	lock dec eax
  4171f7:	push   ebp
  4171f8:	xor    DWORD PTR [bp+di-0xd7c],ecx
  4171fd:	and    DWORD PTR [edx+eax*2+0x33],edi
  417201:	in     eax,dx
  417202:	cwde   
  417203:	int    0x9d
  417205:	push   ecx
  417206:	iret   
  417207:	sub    esi,DWORD PTR [ebp-0x2dfb4004]
  41720d:	shl    BYTE PTR [ecx-0xc876504],cl
  417213:	test   eax,0x7495b46d
  417218:	into   
  417219:	xlat   BYTE PTR ds:[ebx]
  41721a:	mov    bl,0x4b
  41721c:	rol    DWORD PTR [esi+0x4e],0xe5
  417220:	shr    BYTE PTR gs:[edi-0x15],cl
  417224:	loopne 0x41727b
  417226:	mov    al,0x42
  417228:	sub    BYTE PTR [edx],cl
  41722a:	into   
  41722b:	je     0x417206
  41722d:	iret   
  41722e:	xor    dl,BYTE PTR [eax+0x24]
  417231:	mov    dh,0x19
  417233:	push   0xffef5fb3
  417238:	sti    
  417239:	sbb    edi,DWORD PTR [edi-0x7a]
  41723c:	mov    esi,ecx
  41723e:	popa   
  41723f:	int3   
  417240:	data16 and bl,ch
  417243:	bound  edx,QWORD PTR [ebp+0x776ebc10]
  417249:	not    DWORD PTR [ebp-0x25792308]
  41724f:	push   ecx
  417250:	ins    DWORD PTR es:[edi],dx
  417251:	fiadd  DWORD PTR [ebx-0x20a9cbdf]
  417257:	jns    0x4172ca
  417259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41725a:	add    esi,DWORD PTR [ecx+0x58]
  41725d:	mov    ss,eax
  41725f:	dec    esp
  417260:	shl    DWORD PTR [edx-0x709a9d8b],cl
  417266:	ror    DWORD PTR [edx+0x4a],1
  417269:	push   bp
  41726b:	mov    ds:0x312421a7,al
  417270:	adc    al,0xce
  417272:	adc    eax,0x2452e780
  417277:	rcl    BYTE PTR [eax],1
  417279:	adc    bh,ch
  41727b:	and    al,0x44
  41727d:	xor    eax,0xe960e1a0
  417282:	cmc    
  417283:	sub    eax,0xf209d776
  417288:	ins    BYTE PTR es:[edi],dx
  417289:	or     al,0xf2
  41728b:	and    BYTE PTR ds:0x69ee504,dh
  417291:	pop    ebp
  417292:	jo     0x41721d
  417294:	iret   
  417295:	and    cl,BYTE PTR [eax]
  417297:	jmp    DWORD PTR [ebx]
  417299:	mov    ebp,es
  41729b:	cwde   
  41729c:	xor    BYTE PTR [eax-0x771c3df1],bl
  4172a2:	loope  0x417299
  4172a4:	sub    bl,BYTE PTR [ebp+0x20]
  4172a7:	retf   
  4172a8:	mov    gs,WORD PTR [edi]
  4172aa:	nop
  4172ab:	inc    edx
  4172ac:	pusha  
  4172ad:	aad    0x7b
  4172af:	mov    DWORD PTR [esi+0x647eb0a9],eax
  4172b5:	arpl   WORD PTR [ebx-0x3381293e],ax
  4172bb:	sub    BYTE PTR [esi],ch
  4172bd:	cmp    al,0x0
  4172bf:	(bad)  
  4172c0:	mov    ecx,ecx
  4172c2:	fidivr WORD PTR [edx]
  4172c4:	or     bh,bh
  4172c6:	xchg   BYTE PTR [ebx-0x6f3550b8],al
  4172cc:	jp     0x41726c
  4172ce:	dec    ebp
  4172cf:	jne    0x417274
  4172d1:	xchg   DWORD PTR [esi+edx*8+0x70],eax
  4172d5:	or     DWORD PTR [ecx-0x37],0x37c6b1ad
  4172dc:	xchg   edx,eax
  4172dd:	xchg   DWORD PTR [ebp+0x3c090091],edi
  4172e3:	fisub  DWORD PTR [edx+0x54]
  4172e6:	adc    esi,0xffffffd1
  4172e9:	rcl    BYTE PTR [edx+0x304094d4],0xe5
  4172f0:	jnp    0x41733f
  4172f2:	push   esi
  4172f3:	inc    ebx
  4172f4:	stos   DWORD PTR es:[edi],eax
  4172f5:	daa    
  4172f6:	add    eax,0x7a74d376
  4172fb:	loope  0x41728a
  4172fd:	(bad)
  417302:	sbb    ecx,DWORD PTR [ebx+0x459622f1]
  417308:	or     ebx,DWORD PTR [ecx-0x48]
  41730b:	sub    esp,esp
  41730d:	jl     0x417332
  41730f:	in     al,0x30
  417311:	pop    eax
  417313:	and    eax,0x8bd40ebb
  417318:	push   0x21fdff8f
  41731d:	sbb    eax,0xcecc4d6f
  417322:	adc    cl,ah
  417324:	rol    esi,1
  417326:	cli    
  417327:	test   al,0x48
  417329:	adc    DWORD PTR [eax+0x69],0xffffffed
  41732d:	shr    DWORD PTR [edx],0xb
  417330:	(bad)  
  417331:	sbb    al,0x87
  417333:	and    al,0xfa
  417335:	xchg   esi,ecx
  417337:	mov    eax,ds:0x2f149935
  41733c:	lods   al,BYTE PTR ds:[esi]
  41733d:	inc    ecx
  41733e:	sub    BYTE PTR [ebx+ebp*2],0xfd
  417342:	lods   al,BYTE PTR ds:[esi]
  417343:	test   eax,0xd5254082
  417348:	add    al,0xd5
  41734a:	mov    esi,0xaf54ffda
  41734f:	aam    0x5
  417351:	cld    
  417352:	pop    ecx
  417353:	icebp  
  417354:	mov    ebx,0xf873b25d
  417359:	and    eax,0xe91d1c2e
  41735e:	test   DWORD PTR [edi],eax
  417360:	mov    ah,0xf0
  417362:	scas   al,BYTE PTR es:[edi]
  417363:	nop
  417364:	and    ebx,DWORD PTR [esi]
  417366:	dec    edi
  417367:	xor    al,0x49
  417369:	sub    DWORD PTR [ecx],0xffffffea
  41736c:	xchg   esp,eax
  41736d:	pop    eax
  41736e:	int3   
  41736f:	add    eax,0xeab2ab87
  417374:	mov    al,ds:0x9a2972e6
  417379:	arpl   WORD PTR [esi],si
  41737b:	push   ebp
  41737c:	pop    esp
  41737d:	mov    ch,0xa9
  41737f:	aas    
  417380:	mov    ecx,0x81156685
  417385:	lods   al,BYTE PTR ds:[esi]
  417386:	cdq    
  417387:	inc    esp
  417388:	and    esi,DWORD PTR [eax-0x84363f7]
  41738e:	ja     0x41738b
  417390:	in     al,0x2a
  417392:	sub    dh,bh
  417394:	mov    esp,0x739db602
  417399:	stos   DWORD PTR es:[edi],eax
  41739a:	dec    esi
  41739b:	mov    edx,0xe949ccab
  4173a0:	popa   
  4173a1:	rcl    esi,cl
  4173a3:	cld    
  4173a4:	dec    ebp
  4173a5:	jge    0x417401
  4173a7:	addr16 xchg ecx,eax
  4173a9:	jge    0x4173f4
  4173ab:	adc    DWORD PTR [edx],0xf0302d3a
  4173b1:	mov    cl,BYTE PTR [ebp+0x38910979]
  4173b7:	mov    ch,0x96
  4173b9:	ret    0x9ee
  4173bc:	lods   al,BYTE PTR ds:[esi]
  4173bd:	sbb    al,0x56
  4173bf:	push   cs
  4173c0:	repz scas al,BYTE PTR es:[edi]
  4173c2:	(bad)  
  4173c3:	sti    
  4173c4:	mov    edi,0x65cb297f
  4173c9:	xor    eax,0x1b4faeea
  4173ce:	mov    dh,0xfe
  4173d0:	cs int3 
  4173d2:	scas   al,BYTE PTR es:[edi]
  4173d3:	inc    eax
  4173d4:	add    eax,0x51dbbad
  4173d9:	xor    edi,esp
  4173db:	enter  0xa701,0x5b
  4173df:	ds jmp 0x417364
  4173e2:	add    eax,0xcefc4308
  4173e7:	pop    ds
  4173e8:	sub    al,0x15
  4173ea:	repz aad 0x47
  4173ed:	push   esp
  4173ee:	mov    ebx,0xa0681d0a
  4173f3:	clc    
  4173f4:	mov    bh,0x2b
  4173f6:	stc    
  4173f7:	scas   eax,DWORD PTR es:[edi]
  4173f8:	ja     0x417402
  4173fa:	jb     0x417393
  4173fc:	mov    edi,0x347da208
  417401:	push   ebx
  417402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417403:	iret   
  417404:	sbb    eax,0x64db512
  417409:	or     DWORD PTR [esp+esi*4],esi
  41740c:	ret    
  41740d:	adc    al,0x40
  417410:	into   
  417411:	adc    edi,DWORD PTR [eax+eax*4-0x69]
  417415:	cmp    al,0xb3
  417417:	adc    BYTE PTR [ebp+0x3a382da3],0x4f
  41741e:	jp     0x4173e5
  417420:	in     eax,dx
  417421:	and    BYTE PTR [ecx+0x7bfbee5d],dh
  417427:	fidiv  WORD PTR [eax+0x17]
  41742a:	push   es
  41742b:	into   
  41742c:	push   0x5
  41742e:	ins    DWORD PTR es:[edi],dx
  41742f:	ror    dh,0x1e
  417432:	sub    eax,0xed9b3ff3
  417437:	push   edx
  417438:	sahf   
  417439:	fs in  eax,0xf6
  41743c:	jmp    0x417428
  41743e:	pop    ebx
  41743f:	pop    esi
  417440:	fidiv  WORD PTR [ecx]
  417442:	mov    ebx,0xede93734
  417447:	out    dx,eax
  417448:	cmp    al,0x4a
  41744a:	and    eax,0x326b9524
  41744f:	ins    BYTE PTR es:[edi],dx
  417450:	jle    0x417480
  417452:	xor    eax,0x94440574
  417458:	sbb    BYTE PTR [eax+0x3a],dl
  41745b:	push   ecx
  41745c:	repnz icebp 
  41745e:	jmp    0x1826d713
  417463:	mov    fs,edx
  417465:	mov    dh,0xfc
  417467:	ins    BYTE PTR es:[edi],dx
  417468:	push   esp
  417469:	push   0x218e5d65
  41746e:	fs jecxz 0x4174a8
  417471:	xchg   DWORD PTR [edx-0xb5019a],ebp
  417477:	mov    ah,0xdc
  417479:	test   eax,0xc1380802
  41747e:	add    eax,0xbb2f5e2c
  417483:	xchg   edx,eax
  417484:	xchg   esp,eax
  417485:	jle    0x417500
  417487:	and    BYTE PTR [ebx-0x68],al
  41748a:	mov    dl,0x7c
  41748c:	mov    es,WORD PTR [eax]
  41748e:	add    BYTE PTR [eax],al
  417490:	add    BYTE PTR [eax],al
  417492:	fisttp WORD PTR [ebp-0x66]
  417495:	mov    DWORD PTR [edx+0x305fdfdf],ebx
  41749b:	adc    al,0x61
  41749d:	retf   0xeca4
  4174a0:	jmp    0x41745c
  4174a2:	sub    esi,edx
  4174a4:	add    BYTE PTR [eax],al
  4174a6:	repz add al,0x0
  4174a9:	add    dh,dh
  4174ab:	mov    ecx,0xbb92d77f
  4174b0:	imul   edi,DWORD PTR [ecx],0xd
  4174b3:	arpl   WORD PTR [eax-0x1a],dx
  4174b6:	sbb    al,ah
  4174b8:	loope  0x4174f8
  4174ba:	dec    ebx
  4174bb:	jb     0x4174e9
  4174bd:	cwde   
  4174be:	jnp    0x417449
  4174c0:	jp     0x4174ee
  4174c2:	fstp   DWORD PTR [ebx+0x1217af46]
  4174c8:	mov    bl,0xb4
  4174ca:	repnz lods al,BYTE PTR ds:[esi]
  4174cc:	pop    esp
  4174cd:	pop    ebx
  4174ce:	jae    0x4174d8
  4174d0:	fst    DWORD PTR [ecx-0x511a1bfc]
  4174d6:	fcom   st(1)
  4174d8:	lods   al,BYTE PTR ds:[esi]
  4174d9:	sbb    al,0xa0
  4174db:	mov    ah,0xb3
  4174dd:	mov    ds:0x36788f17,al
  4174e2:	mov    ebx,DWORD PTR [ecx]
  4174e4:	pop    ecx
  4174e5:	aad    0x34
  4174e7:	xchg   DWORD PTR [esi-0x70],esp
  4174ea:	xchg   ecx,eax
  4174eb:	scas   al,BYTE PTR es:[edi]
  4174ec:	add    DWORD PTR [ebx],ebp
  4174ee:	das    
  4174ef:	jg     0x417486
  4174f1:	add    BYTE PTR gs:[eax],bl
  4174f4:	cld    
  4174f5:	mov    WORD PTR [esi-0x1e],fs
  4174f8:	cmp    esp,DWORD PTR [ebp-0xf46cd11]
  4174fe:	dec    ebx
  4174ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417500:	inc    ecx
  417501:	(bad)  
  417502:	vpmaddwd ymm3,ymm6,YMMWORD PTR [ebx]
  417506:	mov    edi,0x128b2e75
  41750b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41750c:	xor    eax,0xa874f4c0
  417511:	sar    BYTE PTR [esi-0x2de7ab4],1
  417517:	leave  
  417518:	mov    edx,0xf1cd8f72
  41751d:	jge    0x41752d
  41751f:	jnp    0x417540
  417521:	cli    
  417522:	loopne 0x41750d
  417524:	es inc esp
  417526:	hlt    
  417527:	repz repz cmp BYTE PTR [ebp-0x3c],dh
  41752c:	retf   0x3636
  41752f:	dec    esp
  417530:	mov    eax,0x17c62813
  417535:	not    BYTE PTR [edi]
  417537:	cmp    al,0xe
  417539:	inc    edx
  41753a:	pop    edi
  41753b:	repnz sbb DWORD PTR [ecx-0x2727304d],0xc
  417543:	dec    ebx
  417544:	rol    BYTE PTR [edx],cl
  417546:	and    esi,DWORD PTR [ecx]
  417548:	jo     0x4175c5
  41754a:	sub    BYTE PTR [ecx-0x71b7b0ee],ah
  417550:	jl     0x4174e0
  417552:	not    BYTE PTR [ecx-0x2e51753c]
  417558:	sub    esp,edx
  41755a:	jp     0x417524
  41755c:	pop    ds
  41755d:	(bad)  
  41755e:	sub    DWORD PTR [ebx+0x7bd45cc8],edi
  417564:	pop    edi
  417565:	packssdw mm1,QWORD PTR [edi]
  417568:	mov    DWORD PTR [ecx-0x72b4a046],ebp
  41756e:	mov    ecx,0xb9487ec2
  417573:	call   0xb073:0xdfa9b77e
  41757a:	ret    0x5d8d
  41757d:	ror    DWORD PTR [ecx+esi*2],1
  417580:	push   0xdb1521aa
  417585:	mov    al,ds:0x61213488
  41758a:	out    0xc0,eax
  41758c:	sub    DWORD PTR [ecx],esi
  41758e:	or     eax,0x2b063899
  417593:	xchg   ebp,eax
  417594:	(bad)
  417597:	sbb    eax,0x2366176d
  41759c:	jecxz  0x417592
  41759e:	push   ss
  41759f:	inc    eax
  4175a0:	or     bh,dh
  4175a2:	cdq    
  4175a3:	loopne 0x4175a3
  4175a5:	out    0x69,eax
  4175a7:	int    0x77
  4175a9:	push   ds
  4175aa:	jge    0x41753c
  4175ac:	arpl   WORD PTR [ebp-0x7588b968],si
  4175b2:	mov    eax,ds:0x329f902
  4175b7:	imul   edx,DWORD PTR [esi+0x43],0x323b56
  4175be:	push   ss
  4175bf:	scas   eax,DWORD PTR es:[edi]
  4175c0:	mov    dh,0x2f
  4175c2:	mov    edx,DWORD PTR [esi]
  4175c4:	add    al,0x63
  4175c6:	inc    ecx
  4175c7:	add    eax,0xb97cb435
  4175cc:	push   0x6702b882
  4175d1:	adc    al,0x7
  4175d3:	and    dh,BYTE PTR [esi+0x24]
  4175d6:	jne    0x41755b
  4175d8:	mov    ds:0x6bfd007,al
  4175dd:	add    esp,esp
  4175df:	ja     0x41756f
  4175e1:	ret    
  4175e2:	repz in eax,dx
  4175e4:	bound  esp,QWORD PTR [edx+0x2c]
  4175e7:	arpl   WORD PTR [ecx+0x6dbc209],bp
  4175ed:	pop    eax
  4175ee:	into   
  4175ef:	mov    al,0xf0
  4175f1:	cmp    BYTE PTR [ebp+edx*8+0x19cc8b6d],dl
  4175f8:	jecxz  0x417630
  4175fa:	int    0xac
  4175fc:	outs   dx,DWORD PTR ds:[esi]
  4175fd:	(bad)  
  4175fe:	mov    dh,0x9
  417600:	or     BYTE PTR [esi],0x1c
  417603:	out    0x1c,al
  417605:	das    
  417606:	or     BYTE PTR [ecx+0x55],dl
  417609:	mov    bl,0x4d
  41760b:	push   esi
  41760c:	(bad)  [edx-0x32]
  41760f:	cmp    BYTE PTR [eax],bh
  417611:	ficom  DWORD PTR [edi]
  417613:	xor    al,0xc5
  417615:	ret    0xc242
  417618:	mov    ah,BYTE PTR [eax-0x1cd55570]
  41761e:	jmp    FWORD PTR [esi+0x2864350a]
  417624:	xor    eax,0xf92b5a88
  417629:	xchg   esp,eax
  41762a:	mov    cl,0x63
  41762c:	pusha  
  41762d:	or     DWORD PTR [esi-0x3c],ecx
  417630:	inc    esi
  417631:	xchg   edi,eax
  417632:	imul   ecx,DWORD PTR [edi-0x35],0xffffff82
  417636:	sbb    eax,0x1dff2763
  41763b:	ss xchg esi,eax
  41763d:	push   edx
  41763e:	out    dx,eax
  41763f:	xchg   esi,eax
  417640:	mov    al,ds:0x63d8f5c6
  417645:	push   es
  417646:	xchg   esp,eax
  417647:	add    bh,BYTE PTR [esi]
  417649:	mov    dh,cl
  41764b:	mov    DWORD PTR [ecx],edi
  41764d:	sbb    eax,0x9c6554b9
  417652:	cmp    BYTE PTR [edi+0x409e7b3],ch
  417658:	inc    edx
  417659:	out    dx,eax
  41765a:	xchg   ebx,eax
  41765b:	mov    ch,0x7d
  41765d:	stos   BYTE PTR es:[edi],al
  41765e:	adc    eax,0x19441fb7
  417663:	push   esp
  417664:	sbb    DWORD PTR [edi],esp
  417666:	jmp    0x133e:0xe4ea4f4b
  41766d:	push   edi
  41766e:	int3   
  41766f:	mov    al,ds:0x4a7353a6
  417674:	nop
  417675:	call   0x6503:0x9c5ee0a4
  41767c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41767d:	dec    ebx
  41767e:	es shl ah,1
  417681:	mov    cl,0x8d
  417683:	dec    ecx
  417684:	inc    ecx
  417685:	aaa    
  417686:	sar    BYTE PTR gs:[eax-0x17],0x4
  41768b:	or     BYTE PTR [esi],bl
  41768d:	pop    esp
  41768e:	pop    ds
  41768f:	stos   BYTE PTR es:[edi],al
  417690:	dec    esi
  417691:	mov    ds:0xe81866f5,eax
  417696:	mov    ebx,?
  417698:	maskmovq mm5,(bad)
  417699:	imul   DWORD PTR [ebp-0x2db12cb3]
  41769f:	fstp   QWORD PTR [eax-0x4e]
  4176a2:	scas   eax,DWORD PTR es:[edi]
  4176a3:	xor    esi,ecx
  4176a5:	leave  
  4176a6:	push   ebx
  4176a7:	jecxz  0x417668
  4176a9:	test   eax,0x781c751f
  4176ae:	jne    0x4176c4
  4176b0:	(bad)  
  4176b1:	sub    eax,0xded5cefd
  4176b6:	shr    BYTE PTR [ebx+0x2d02e900],cl
  4176bc:	sbb    al,0x76
  4176be:	lods   eax,DWORD PTR ds:[esi]
  4176bf:	sub    esp,edi
  4176c1:	add    al,0xc8
  4176c3:	mov    ds:0xffa1df7d,al
  4176c8:	jg     0x4176f8
  4176ca:	loopne 0x4176a5
  4176cc:	jae    0x4176e8
  4176ce:	push   edi
  4176cf:	xchg   edx,eax
  4176d0:	sti    
  4176d1:	outs   dx,DWORD PTR ds:[esi]
  4176d2:	push   edx
  4176d3:	mov    ds:0xcaeb09f0,eax
  4176d8:	dec    ebx
  4176d9:	loopne 0x4176ed
  4176db:	pop    edi
  4176dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176dd:	lds    ecx,FWORD PTR [ecx-0x704906b1]
  4176e3:	in     eax,0x52
  4176e5:	les    ebp,FWORD PTR [edi]
  4176e7:	dec    eax
  4176e8:	mov    edi,0xf4d48ec0
  4176ed:	cmp    dl,0x63
  4176f0:	inc    ecx
  4176f1:	adc    al,BYTE PTR [ebx+0x25421feb]
  4176f7:	imul   edx,DWORD PTR [ebx+edi*8-0x5d],0xf0b34158
  4176ff:	fwait
  417700:	cmp    dh,BYTE PTR [edi*8-0x3961b04b]
  417707:	inc    ebp
  417709:	pop    ss
  41770a:	push   ecx
  41770b:	jb     0x41773c
  41770d:	push   cs
  41770e:	enter  0xa1bc,0xad
  417712:	retf   
  417713:	sub    al,0xe7
  417715:	mov    al,0x67
  417717:	int    0x2a
  417719:	inc    edx
  41771a:	jg     0x417772
  41771c:	loopne 0x417745
  41771e:	pop    edi
  41771f:	out    dx,al
  417720:	ret    0x300d
  417723:	xor    BYTE PTR [eax],0x81
  417726:	fs out 0x9c,al
  417729:	rcr    DWORD PTR [ecx+0x0],0x49
  41772d:	in     al,0xc4
  41772f:	in     eax,0xc8
  417731:	sbb    edx,DWORD PTR [edi+0x2afe24f1]
  417737:	xchg   BYTE PTR [eax+0x4],dh
  41773a:	sub    DWORD PTR [edx+ebp*4],0x44636936
  417741:	xor    esi,DWORD PTR [ebx]
  417743:	dec    edi
  417744:	mov    ch,0x6f
  417746:	mov    ds:0xca98c5b6,al
  41774b:	rcr    esp,1
  41774d:	jle    0x417736
  41774f:	sbb    DWORD PTR [esi-0x24d12536],ebp
  417755:	rol    bh,0xd2
  417758:	frstor [edx-0x1dc18230]
  41775e:	add    ch,BYTE PTR [edx]
  417760:	push   ecx
  417761:	dec    ecx
  417762:	xchg   esi,eax
  417763:	in     eax,dx
  417764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417765:	sar    DWORD PTR es:[edi+0x438eac0f],0x3f
  41776d:	sbb    dl,BYTE PTR [edi+0x68]
  417770:	fwait
  417771:	in     al,dx
  417772:	add    al,0x6b
  417774:	jp     0x417713
  417776:	(bad)  
  417777:	pushf  
  417778:	push   ds
  417779:	ds out 0xb7,al
  41777c:	ja     0x4177df
  41777e:	leave  
  41777f:	xchg   esp,eax
  417780:	mov    ds:0xd64d007d,eax
  417785:	xchg   esi,eax
  417786:	loop   0x417729
  417788:	test   al,0xb4
  41778a:	int    0x69
  41778c:	push   0x4f
  41778e:	shl    BYTE PTR [edx+0x195a258a],cl
  417794:	scas   al,BYTE PTR es:[edi]
  417795:	repz fucomp st(2)
  417798:	shr    DWORD PTR [edi-0x6],0x14
  41779c:	pop    ds
  41779d:	(bad)  
  41779e:	sbb    ebx,DWORD PTR [edi+0x7d]
  4177a1:	int    0xed
  4177a3:	mov    eax,0x1160c30a
  4177a8:	aam    0xc7
  4177aa:	pusha  
  4177ab:	(bad)  
  4177ac:	call   FWORD PTR [ecx+ecx*2]
  4177af:	push   0xae6836e0
  4177b4:	fcom   st(0)
  4177b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177b7:	arpl   WORD PTR [esi],di
  4177b9:	jo     0x417800
  4177bb:	xchg   ecx,eax
  4177bc:	add    BYTE PTR [esi],ah
  4177be:	dec    ebx
  4177bf:	je     0x4177db
  4177c1:	mov    esp,0x1396a4fc
  4177c6:	jl     0x417814
  4177c8:	mov    al,ds:0x1a9e2f15
  4177cd:	ja     0x4177b8
  4177cf:	loopne 0x417834
  4177d1:	mov    al,0x98
  4177d3:	inc    eax
  4177d4:	xchg   DWORD PTR [esi+0x4c68c603],eax
  4177da:	mov    cl,0x89
  4177dc:	pop    esi
  4177dd:	jg     0x41776d
  4177df:	xchg   edx,eax
  4177e0:	or     esi,DWORD PTR [edi]
  4177e2:	push   ecx
  4177e3:	sub    DWORD PTR [edx-0x18],edx
  4177e6:	std    
  4177e7:	pop    ds
  4177e8:	stc    
  4177e9:	dec    eax
  4177ea:	jno    0x4177a9
  4177ec:	dec    edi
  4177ed:	and    al,0xd0
  4177ef:	mov    ch,0x43
  4177f1:	mov    eax,0xbb4fad57
  4177f6:	pushf  
  4177f7:	adc    BYTE PTR [esi+esi*2-0x5610051a],al
  4177fe:	rcl    edi,0x10
  417801:	push   0xda069312
  417806:	sbb    al,0x7b
  417808:	out    0x30,al
  41780a:	adc    edx,DWORD PTR ds:0xdbe41e50
  417810:	and    BYTE PTR [ebx+ecx*8+0x4f669ca5],0xae
  417818:	(bad)  
  417819:	pop    ecx
  41781a:	js     0x417830
  41781c:	scas   al,BYTE PTR es:[edi]
  41781d:	mov    ebp,0xef08499
  417822:	dec    ebx
  417823:	test   eax,0xf104e0a
  417828:	into   
  417829:	add    ah,al
  41782b:	jmp    0xf7e7:0xa8320353
  417832:	inc    eax
  417833:	out    0xf0,eax
  417835:	push   eax
  417836:	enter  0x4e5e,0x96
  41783a:	popa   
  41783b:	adc    dh,BYTE PTR [esp+eax*8+0x6]
  41783f:	ret    
  417840:	ret    
  417841:	inc    edi
  417842:	jne    0x41780b
  417844:	mov    ebx,0x4188dffb
  417849:	jno    0x41784c
  41784b:	scas   eax,DWORD PTR es:[edi]
  41784c:	push   ds
  41784d:	xor    edx,eax
  41784f:	or     bl,BYTE PTR [eax-0x2e]
  417852:	fsqrt  
  417854:	pop    ebp
  417855:	dec    ebx
  417856:	loop   0x417866
  417858:	sbb    eax,0xe4a857d1
  41785d:	in     al,0xd0
  41785f:	shr    DWORD PTR [esi+0x2351bcb5],1
  417865:	mov    al,0xc3
  417867:	push   ss
  417868:	dec    ebp
  417869:	adc    BYTE PTR [esi+edi*4-0x34ee7538],cl
  417870:	pop    ebx
  417871:	das    
  417872:	mov    ebp,0xa5e9435f
  417877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417879:	call   0xd2a9e9c
  41787e:	shl    DWORD PTR [esi+0x2f],cl
  417881:	jge    0x417809
  417883:	dec    ebp
  417884:	aam    0x7e
  417886:	arpl   sp,sp
  417888:	and    eax,0x3d2f2cf9
  41788d:	or     DWORD PTR [ebx-0x6fd01f3b],edi
  417893:	xor    eax,0x98aa46a7
  417898:	pop    ss
  417899:	dec    esp
  41789a:	jne    0x4178b3
  41789c:	mov    ds:0x8a0d451f,al
  4178a1:	ins    BYTE PTR es:[edi],dx
  4178a2:	das    
  4178a3:	or     al,0xab
  4178a5:	ins    BYTE PTR es:[edi],dx
  4178a6:	in     eax,dx
  4178a7:	in     eax,0x1b
  4178a9:	cwde   
  4178aa:	cwde   
  4178ab:	ds mov bh,0x60
  4178ae:	jbe    0x417921
  4178b0:	lods   eax,DWORD PTR ds:[esi]
  4178b1:	int    0xcd
  4178b3:	shl    WORD PTR [edi+0x64],cl
  4178b7:	in     eax,dx
  4178b8:	mov    esp,0x804e7fb9
  4178bd:	pop    edi
  4178be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178bf:	mov    bl,cl
  4178c1:	cs push esi
  4178c3:	xor    al,0x23
  4178c5:	or     al,0x1
  4178c7:	lahf   
  4178c8:	ins    DWORD PTR es:[edi],dx
  4178c9:	(bad)  
  4178cb:	cmp    BYTE PTR [ecx],dl
  4178cd:	test   edx,esp
  4178cf:	popf   
  4178d0:	shl    BYTE PTR [ecx+0x3c],1
  4178d3:	xor    eax,0xc380d6f0
  4178d8:	adc    ch,0xf7
  4178db:	cmc    
  4178dc:	cli    
  4178dd:	sbb    eax,DWORD PTR [esi]
  4178df:	push   ds
  4178e0:	mov    edx,ds
  4178e2:	and    eax,DWORD PTR [ebp+0x35]
  4178e5:	mov    edx,0x82a17ef5
  4178ea:	repnz mov ah,0x88
  4178ed:	(bad)  
  4178ee:	pop    ebx
  4178ef:	test   eax,0xc88a4671
  4178f4:	xchg   ebx,eax
  4178f5:	or     eax,0x6a33365e
  4178fa:	xor    BYTE PTR [ecx],bh
  4178fc:	xlat   BYTE PTR ds:[ebx]
  4178fd:	stos   BYTE PTR es:[edi],al
  4178fe:	pop    ebp
  4178ff:	jmp    0x417887
  417901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417902:	pop    edx
  417903:	ja     0x417902
  417905:	adc    ch,BYTE PTR [ebx]
  417907:	mov    eax,ds:0x7366af52
  41790c:	or     eax,0x95ca92ab
  417911:	sub    al,0x84
  417913:	scas   al,BYTE PTR es:[edi]
  417914:	adc    dh,BYTE PTR [eax-0xfccf751]
  41791a:	loopne 0x4178ff
  41791c:	hlt    
  41791d:	je     0x4178b8
  41791f:	sbb    eax,0x933a2c02
  417924:	add    al,BYTE PTR [ecx-0x1e]
  417927:	mov    dl,0x3a
  417929:	or     ebx,DWORD PTR [ebx]
  41792b:	mov    al,ds:0xcfe869db
  417930:	and    ebx,DWORD PTR [esi+0x364d1532]
  417936:	and    eax,0xa37540b3
  41793b:	mov    cl,0xfb
  41793e:	fld    QWORD PTR [esi]
  417940:	mov    ebx,0x2ff5d0f0
  417945:	sub    ch,cl
  417947:	or     DWORD PTR [ebx+0x6095cb73],esi
  41794d:	dec    ecx
  41794e:	jge    0x417957
  417950:	stc    
  417951:	daa    
  417952:	ins    DWORD PTR es:[edi],dx
  417953:	jno    0x4179c0
  417955:	jae    0x4179ba
  417957:	or     DWORD PTR ds:0x2f1bf2c8,edi
  41795d:	or     ebx,DWORD PTR [eax-0x6cf623eb]
  417963:	and    eax,0x27e8212b
  417968:	xchg   ebx,eax
  417969:	gs popf 
  41796b:	cmp    BYTE PTR [edx+0x268a1dda],0x28
  417972:	int    0xab
  417974:	xor    BYTE PTR [eax],0x99
  417977:	push   esp
  417978:	push   ebx
  417979:	pop    ds
  41797a:	cmp    bl,ch
  41797c:	push   edx
  41797d:	xchg   ebp,eax
  41797e:	sbb    dl,BYTE PTR ds:[ecx]
  417981:	pop    edx
  417982:	loop   0x41793b
  417984:	stos   DWORD PTR es:[edi],eax
  417985:	ror    BYTE PTR [esi-0x6d],cl
  417988:	dec    esi
  417989:	sbb    cl,BYTE PTR [eax+0x33186f45]
  41798f:	pop    ecx
  417990:	aas    
  417991:	lds    ebp,FWORD PTR [esi-0x1b6d8df7]
  417997:	sub    ebx,eax
  417999:	aas    
  41799a:	and    DWORD PTR [edx],edx
  41799c:	mov    edx,0x0
  4179a1:	add    BYTE PTR [esi],ah
  4179a3:	mov    ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x116b5275
  4179b1:	sbb    DWORD PTR [esi],ebx
  4179b3:	test   DWORD PTR [eax],0x4f300
  4179b9:	add    BYTE PTR [edi-0x4bbf4a28],bl
  4179bf:	in     eax,dx
  4179c0:	stos   DWORD PTR es:[edi],eax
  4179c1:	test   BYTE PTR [edx-0x47a6e277],bh
  4179c7:	adc    esi,DWORD PTR [esp+ebx*8+0x2cfc0c1a]
  4179ce:	das    
  4179cf:	gs or  al,0xe1
  4179d2:	ds pop eax
  4179d4:	xchg   esp,eax
  4179d5:	jmp    0x4002:0xae5d9b0a
  4179dc:	mov    cs:0x556f357e,eax
  4179e2:	and    esp,edx
  4179e4:	adc    edi,DWORD PTR [ebx+0x7724bca0]
  4179ea:	push   edi
  4179eb:	addr16 out dx,eax
  4179ed:	mov    edx,0x569f7412
  4179f2:	adc    al,0x71
  4179f4:	push   ebp
  4179f5:	push   ebp
  4179f6:	call   0x80b3267f
  4179fb:	sar    BYTE PTR [edi],cl
  4179fd:	pop    eax
  4179fe:	(bad)  
  4179ff:	test   ecx,0xe78fe1ba
  417a05:	retf   0x96f9
  417a08:	fcmovb st,st(1)
  417a0a:	cmc    
  417a0b:	add    DWORD PTR [ebx+0xc5b8cd1],esi
  417a11:	ret    0x2e02
  417a14:	xor    esp,DWORD PTR [eax+0x6e]
  417a17:	adc    DWORD PTR [ecx+0x485d84ea],ebp
  417a1d:	daa    
  417a1e:	xchg   ecx,eax
  417a1f:	ficom  DWORD PTR [esi-0x18]
  417a22:	int    0x70
  417a24:	dec    ecx
  417a25:	mov    ecx,0xa6c4060e
  417a2a:	sbb    al,0x80
  417a2c:	(bad)  [ebx+0x2714a431]
  417a32:	repz or esp,edx
  417a35:	lea    edi,[ebx]
  417a37:	(bad)  
  417a38:	push   esp
  417a39:	fistp  WORD PTR [ebx+0x26]
  417a3c:	mov    eax,0x79a3529
  417a41:	sbb    DWORD PTR [ebx+0x490eb226],edi
  417a47:	pop    ebp
  417a48:	push   eax
  417a49:	sub    bl,BYTE PTR [edi]
  417a4b:	jo     0x417aae
  417a4d:	pop    DWORD PTR [edi+0x10]
  417a50:	or     eax,0x44f2e46b
  417a55:	jno    0x417ac6
  417a57:	shl    DWORD PTR [edi],1
  417a59:	mov    al,ds:0xda2ed30d
  417a5e:	rcr    DWORD PTR [ebp-0x5],cl
  417a61:	sbb    eax,0xadf163c
  417a66:	ret    0x81ca
  417a69:	cmp    eax,0xe74e6d7c
  417a6e:	pop    edx
  417a6f:	shl    DWORD PTR [ecx+edi*2-0x10],0xef
  417a74:	or     DWORD PTR [ebp+0x5f3b856a],ebp
  417a7a:	inc    edi
  417a7b:	cld    
  417a7c:	fs faddp st(7),st
  417a7f:	lock shl BYTE PTR gs:[ebp-0x77],1
  417a84:	lods   eax,DWORD PTR ds:[esi]
  417a85:	xchg   edi,eax
  417a86:	fadd   QWORD PTR [esp+eiz*2]
  417a89:	pop    esp
  417a8a:	cwde   
  417a8b:	mov    ebp,0xf9cc8bc
  417a90:	inc    ebx
  417a91:	(bad)  
  417a93:	push   cs
  417a94:	lods   eax,DWORD PTR ds:[esi]
  417a95:	sub    al,0xed
  417a97:	je     0x417a30
  417a99:	mov    esi,0x8265fcdb
  417a9e:	pop    ds
  417a9f:	push   0x3e
  417aa1:	xor    BYTE PTR [edi-0x426ba326],dl
  417aa7:	sbb    ebx,eax
  417aa9:	scas   al,BYTE PTR es:[edi]
  417aaa:	and    al,0x70
  417aac:	out    dx,eax
  417aad:	add    esi,DWORD PTR [ecx+edi*1+0x67]
  417ab1:	js     0x417b03
  417ab3:	in     al,0xcf
  417ab5:	xlat   BYTE PTR ds:[ebx]
  417ab6:	ret    
  417ab7:	test   eax,0x6090572d
  417abc:	jl     0x417a72
  417abe:	fbld   TBYTE PTR [esi-0xd5dcaf3]
  417ac4:	sub    DWORD PTR [ebp+0x16],esp
  417ac7:	push   esp
  417ac8:	cmc    
  417ac9:	bound  edi,QWORD PTR [ebx+0x416f2b77]
  417acf:	retf   0x8330
  417ad2:	jo     0x417af0
  417ad4:	inc    edx
  417ad5:	xchg   esi,eax
  417ad6:	fst    QWORD PTR [esi+0x54be1de0]
  417adc:	inc    edx
  417add:	mov    al,0xea
  417adf:	ins    DWORD PTR es:[edi],dx
  417ae0:	dec    eax
  417ae1:	pop    ecx
  417ae2:	add    al,0xbf
  417ae4:	and    DWORD PTR [edi],eax
  417ae6:	pusha  
  417ae7:	jp     0x417a83
  417ae9:	or     cl,cl
  417aeb:	inc    esp
  417aec:	lahf   
  417aed:	cmp    al,0x74
  417aef:	jle    0x417b6a
  417af1:	outs   dx,DWORD PTR ds:[esi]
  417af2:	pop    edx
  417af3:	dec    eax
  417af4:	jmp    0x5699:0x7154651f
  417afb:	adc    DWORD PTR [ebx+edx*4+0x100d3170],ebp
  417b02:	shl    DWORD PTR ds:0x55b9ec7c,cl
  417b08:	lahf   
  417b09:	cmp    eax,0xfa473c10
  417b0e:	push   esi
  417b0f:	aaa    
  417b10:	xchg   ebp,eax
  417b11:	add    DWORD PTR [ecx],ebp
  417b13:	xchg   esi,eax
  417b14:	aad    0x26
  417b16:	jle    0x417b6d
  417b18:	jo     0x417aae
  417b1a:	jle    0x417b38
  417b1c:	mov    eax,ds:0x13c08991
  417b21:	pop    esp
  417b22:	dec    esp
  417b23:	lock pusha 
  417b25:	or     dh,bl
  417b27:	in     eax,0x73
  417b29:	sbb    ebp,eax
  417b2b:	sti    
  417b2c:	inc    eax
  417b2d:	outs   dx,BYTE PTR ds:[esi]
  417b2e:	cs jae 0x417b50
  417b31:	pop    edi
  417b32:	sbb    DWORD PTR [edx+0x6a],ebx
  417b35:	xchg   esi,eax
  417b36:	out    0x82,eax
  417b38:	lods   al,BYTE PTR ds:[esi]
  417b39:	pushf  
  417b3a:	repz loopne 0x417b5c
  417b3d:	sub    eax,0x417fce75
  417b42:	or     cl,BYTE PTR ds:[ebp+0x33]
  417b46:	pop    ss
  417b47:	(bad)  
  417b48:	retf   0x44d1
  417b4b:	mov    cl,0xe3
  417b4d:	imul   ebp,DWORD PTR [ebp+0x323b2b90],0xef2dc0b8
  417b57:	sbb    ebx,DWORD PTR [ecx-0x9957924]
  417b5d:	mov    esi,0xdf0be8e5
  417b62:	aaa    
  417b63:	popf   
  417b64:	jle    0x417bc5
  417b66:	xchg   esp,eax
  417b67:	sti    
  417b68:	pop    eax
  417b69:	push   es
  417b6a:	ins    BYTE PTR es:[edi],dx
  417b6b:	push   esp
  417b6c:	data16 je 0x417bba
  417b6f:	jb     0x417b7b
  417b71:	mov    ds:0x63603986,al
  417b76:	mov    al,ds:0x9b822d9b
  417b7b:	jmp    0x417b7f
  417b7d:	mov    ah,0x36
  417b7f:	adc    ch,BYTE PTR [ecx+0x5e]
  417b82:	ss int 0x73
  417b85:	aaa    
  417b86:	clc    
  417b87:	jp     0x417b19
  417b89:	or     edx,ecx
  417b8b:	outs   dx,DWORD PTR ds:[esi]
  417b8c:	mov    ebp,0xd44f4ce7
  417b91:	icebp  
  417b92:	pop    esi
  417b93:	mov    ah,0x33
  417b95:	fisttp QWORD PTR [ebp-0x79]
  417b98:	add    eax,0xb0644f97
  417b9d:	adc    edx,DWORD PTR ds:[ecx+ebx*2-0x39]
  417ba2:	mov    ebx,0x4a3b3a6f
  417ba7:	inc    eax
  417ba8:	sub    dl,bh
  417baa:	popa   
  417bab:	xor    al,0xed
  417bad:	cmp    cl,BYTE PTR [eax]
  417baf:	xchg   ecx,eax
  417bb0:	test   BYTE PTR [ecx],0xa1
  417bb3:	cmp    eax,0x1c76bec4
  417bb8:	ds adc edx,ebx
  417bbb:	fnsave [esi-0x5e]
  417bbe:	(bad)  
  417bbf:	and    BYTE PTR [edx-0x250a8bd9],cl
  417bc5:	push   edx
  417bc6:	lahf   
  417bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bc8:	xor    BYTE PTR [edx],al
  417bca:	(bad)  
  417bcb:	pop    ebp
  417bcc:	xchg   esi,eax
  417bcd:	cmp    DWORD PTR [edx+0x67],edx
  417bd0:	xor    eax,0x44bc3b80
  417bd5:	push   ds
  417bd6:	push   ecx
  417bd7:	outs   dx,DWORD PTR ds:[esi]
  417bd8:	ss jno 0x417b68
  417bdb:	inc    esi
  417bdc:	hlt    
  417bdd:	pop    edi
  417bde:	ins    DWORD PTR es:[edi],dx
  417bdf:	xchg   ecx,eax
  417be0:	inc    eax
  417be1:	pop    edx
  417be2:	mov    bh,0xdb
  417be4:	lock (bad) 
  417be6:	shr    bl,0xbb
  417be9:	leave  
  417bea:	fild   QWORD PTR cs:[ecx-0x60]
  417bee:	addr16 adc eax,0x18c98972
  417bf4:	aaa    
  417bf5:	neg    BYTE PTR [ebx]
  417bf7:	dec    esp
  417bf8:	cmp    DWORD PTR [eax+edi*1],edx
  417bfb:	test   al,0xb4
  417bfd:	xor    esi,DWORD PTR [eax]
  417bff:	xchg   ecx,eax
  417c00:	sbb    al,0x85
  417c02:	leave  
  417c03:	dec    ecx
  417c04:	push   esi
  417c05:	jmp    0x86e0:0x76633517
  417c0c:	ins    BYTE PTR es:[edi],dx
  417c0d:	mov    ds:0x50c7b6ac,al
  417c12:	pavgw  mm5,QWORD PTR [ebp-0x73]
  417c16:	int    0x77
  417c18:	jae    0x417c3d
  417c1a:	fsubr  st(6),st
  417c1c:	mov    ch,0xdf
  417c1e:	(bad)  
  417c1f:	pushf  
  417c20:	fsubr  st,st(5)
  417c22:	fwait
  417c23:	out    0x1d,al
  417c25:	ror    BYTE PTR [ebp+ecx*2+0x571332e8],1
  417c2c:	mov    ebx,0xc97e8366
  417c31:	cmp    BYTE PTR [edi-0x2a],bl
  417c34:	(bad)  
  417c35:	fadd   DWORD PTR [esi+ebp*8-0x7c1d3a40]
  417c3c:	pop    edi
  417c3d:	pop    eax
  417c3e:	xchg   ecx,eax
  417c3f:	out    dx,al
  417c40:	mov    BYTE PTR [eax+0x7ede7bb0],bh
  417c46:	scas   eax,DWORD PTR es:[edi]
  417c47:	jecxz  0x417c6b
  417c49:	in     al,dx
  417c4a:	xor    al,BYTE PTR [ebx-0x69]
  417c4d:	stos   DWORD PTR es:[edi],eax
  417c4e:	xor    ch,BYTE PTR [ebp-0x1e75432c]
  417c54:	out    0x1f,eax
  417c56:	or     ch,ch
  417c58:	(bad)  
  417c59:	shl    DWORD PTR [esi-0x6e],cl
  417c5c:	cmp    BYTE PTR [edi+0x463ded88],bl
  417c62:	xor    ecx,DWORD PTR [ecx+0x4a8f8924]
  417c68:	push   0xa0c406ea
  417c6d:	jecxz  0x417cb8
  417c6f:	cli    
  417c70:	fs and dl,dh
  417c73:	mov    cs,WORD PTR [esi-0x16]
  417c76:	adc    DWORD PTR [esi],edx
  417c78:	cli    
  417c79:	cwde   
  417c7a:	xchg   ebp,eax
  417c7b:	loopne 0x417cbb
  417c7d:	push   edi
  417c7e:	lds    esi,FWORD PTR [eax]
  417c80:	adc    al,0x1a
  417c82:	push   ebx
  417c83:	int    0x6d
  417c85:	fwait
  417c86:	arpl   ax,dx
  417c88:	and    ecx,DWORD PTR [edx]
  417c8a:	dec    edi
  417c8b:	inc    ecx
  417c8c:	int3   
  417c8d:	jmp    0x687469e
  417c92:	mov    dh,0xee
  417c94:	sahf   
  417c95:	sbb    eax,0xb3f8afb5
  417c9a:	out    dx,eax
  417c9b:	retf   0xbc28
  417c9e:	in     al,dx
  417c9f:	xor    DWORD PTR [ebx],esi
  417ca1:	leave  
  417ca2:	dec    edi
  417ca3:	inc    ecx
  417ca4:	mov    bh,0x9b
  417ca6:	sub    BYTE PTR [ebx-0x35292b92],dh
  417cac:	les    edx,FWORD PTR [eax+0x4fd7c9ed]
  417cb2:	cwde   
  417cb3:	mov    edi,0xca4f6a88
  417cb8:	jno    0x417ca6
  417cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cbb:	push   cs
  417cbc:	jno    0x417c72
  417cbe:	sub    BYTE PTR [esi],bh
  417cc0:	inc    esi
  417cc1:	gs dec ecx
  417cc3:	push   esi
  417cc4:	dec    edx
  417cc5:	lods   al,BYTE PTR ds:[esi]
  417cc6:	dec    esp
  417cc7:	dec    esp
  417cc8:	retf   
  417cc9:	cmc    
  417cca:	push   ebp
  417ccb:	rcr    dl,0x17
  417cce:	inc    eax
  417ccf:	inc    ebx
  417cd0:	and    ecx,DWORD PTR [ebp-0x28ff5d74]
  417cd6:	mov    esi,0x3523bc39
  417cdb:	xchg   ecx,eax
  417cdc:	cmp    cl,BYTE PTR [edx-0x6e]
  417cdf:	xchg   edi,eax
  417ce0:	gs lahf 
  417ce2:	call   0x7620:0x5d07262
  417ce9:	xor    al,0xfd
  417cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ced:	xor    esi,DWORD PTR [ebx]
  417cef:	pop    ebx
  417cf0:	push   0xa5db84f9
  417cf5:	jp     0x417ce2
  417cf7:	dec    edi
  417cf8:	pop    es
  417cf9:	dec    esp
  417cfa:	pop    ds
  417cfb:	push   eax
  417cfc:	in     eax,dx
  417cfd:	in     eax,dx
  417cfe:	test   eax,0x85ec63f6
  417d03:	ret    
  417d04:	cli    
  417d05:	and    DWORD PTR [ecx],edi
  417d07:	add    DWORD PTR [ebx],ebp
  417d09:	dec    edi
  417d0a:	push   esi
  417d0b:	mul    BYTE PTR [esi+edi*4-0x65403c1a]
  417d12:	inc    edi
  417d13:	test   DWORD PTR [ebx+0x70],esi
  417d16:	or     ecx,DWORD PTR [esi+edx*8-0x4f]
  417d1a:	int    0xc1
  417d1c:	scas   al,BYTE PTR es:[edi]
  417d1d:	jb     0x417d05
  417d1f:	and    DWORD PTR [ebp-0x64],edx
  417d22:	les    esp,FWORD PTR [eax+esi*8]
  417d25:	mov    ebx,0x6f16b51
  417d2a:	stos   BYTE PTR es:[edi],al
  417d2b:	shl    BYTE PTR [edx-0x7b],cl
  417d2e:	test   BYTE PTR [ebx+0x3036b9df],al
  417d34:	push   0xffffffd1
  417d36:	cmp    BYTE PTR [ecx+edx*8-0x15],0x87
  417d3b:	pop    edx
  417d3c:	dec    ebp
  417d3d:	nop
  417d3e:	pmullw mm3,QWORD PTR [esi]
  417d41:	add    esi,ecx
  417d43:	jmp    0x7c2b:0x876a9198
  417d4a:	push   cs
  417d4b:	test   al,0x99
  417d4d:	loope  0x417cea
  417d4f:	push   0x50
  417d51:	dec    ebx
  417d52:	push   esi
  417d53:	or     al,0xfe
  417d55:	les    edx,FWORD PTR cs:[ebx-0x481e9b72]
  417d5c:	adc    eax,0xe1d9791b
  417d61:	pusha  
  417d62:	pop    DWORD PTR [ecx-0x69bf8868]
  417d68:	test   eax,0x21188130
  417d6d:	xor    BYTE PTR [edi],dh
  417d6f:	iret   
  417d70:	daa    
  417d71:	jg     0x417d54
  417d73:	sub    dh,ch
  417d75:	repz cmp ch,BYTE PTR [ebx]
  417d78:	and    eax,0xea226b4c
  417d7d:	and    esi,DWORD PTR [esi-0x40]
  417d80:	mov    ds:0xa527bdaf,al
  417d85:	push   0xff188e4c
  417d8a:	scas   al,BYTE PTR es:[edi]
  417d8b:	inc    edi
  417d8c:	mov    bl,0xf3
  417d8e:	pop    es
  417d8f:	sub    DWORD PTR [edx-0x3b],esi
  417d92:	add    al,0x13
  417d94:	xchg   edx,eax
  417d95:	inc    esi
  417d96:	sbb    BYTE PTR [esi],bh
  417d98:	pop    ss
  417d99:	pop    eax
  417d9a:	mov    al,ds:0xdf4b0af3
  417d9f:	xchg   BYTE PTR [ebx+ebx*8],dh
  417da2:	pop    ecx
  417da3:	mov    al,ds:0x5f1a2697
  417da8:	call   0x2e0349d
  417dad:	xor    ecx,DWORD PTR [esi-0x23]
  417db0:	inc    edi
  417db1:	sub    bh,BYTE PTR [edx+0x63b8f9ed]
  417db7:	dec    edi
  417db8:	daa    
  417db9:	jmp    0x417db8
  417dbb:	shr    al,cl
  417dbd:	sub    esp,DWORD PTR cs:[edx-0x4e]
  417dc1:	mov    bl,0x11
  417dc3:	repnz mov ebx,0xa2c63374
  417dc9:	mov    BYTE PTR [ebx+0x27],bl
  417dcc:	mov    eax,ds:0x7b1a9cb4
  417dd1:	retf   
  417dd2:	adc    al,0x8e
  417dd4:	jle    0x417e06
  417dd6:	(bad)  
  417dd7:	sbb    esi,ebp
  417dd9:	stc    
  417dda:	mov    bl,0x93
  417ddc:	inc    edi
  417ddd:	and    esp,DWORD PTR [ecx+eiz*4-0x5d493d15]
  417de4:	or     BYTE PTR [eax-0x24],cl
  417de7:	adc    dh,BYTE PTR [edx+eax*1+0x4e41bc75]
  417dee:	adc    BYTE PTR [ecx+0x2e4bc115],dh
  417df4:	dec    esp
  417df5:	pop    ecx
  417df6:	jb     0x417de8
  417df8:	sub    al,0xc6
  417dfa:	mov    DWORD PTR [edx+0x35],eax
  417dfd:	sbb    al,0x88
  417dff:	bound  ecx,QWORD PTR [ebx-0x313184c2]
  417e05:	scas   al,BYTE PTR es:[edi]
  417e06:	and    esp,ebp
  417e08:	or     al,0xf7
  417e0a:	jo     0x417e45
  417e0c:	mov    eax,0xb965eccc
  417e11:	or     esi,esp
  417e13:	push   edi
  417e14:	or     dl,BYTE PTR [eax-0x7ea19da9]
  417e1a:	xor    al,dh
  417e1c:	mov    ecx,0xfdc4b694
  417e21:	mov    cl,0x34
  417e23:	jae    0x417e0a
  417e25:	stos   DWORD PTR es:[edi],eax
  417e26:	enter  0xed02,0x19
  417e2a:	sbb    eax,0xb2fd1c4
  417e2f:	dec    ebx
  417e30:	cmc    
  417e31:	mov    eax,0x6dc9c33
  417e36:	mov    WORD PTR [ebx],es
  417e38:	jl     0x417eaf
  417e3a:	fsubr  QWORD PTR [ecx]
  417e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e3d:	aad    0x58
  417e3f:	aam    0xb5
  417e41:	mov    BYTE PTR [ebp-0x731047c2],al
  417e47:	jns    0x417eb8
  417e49:	mov    DWORD PTR ds:0xb89b8764,edx
  417e4f:	mov    eax,0xe7dd9f1e
  417e54:	mov    DWORD PTR [esi+0x1c],ebx
  417e57:	jns    0x417ec0
  417e59:	ss in  al,0x94
  417e5c:	mul    DWORD PTR [ecx]
  417e5e:	xchg   esi,eax
  417e5f:	hlt    
  417e60:	pop    ds
  417e61:	push   0xffffff94
  417e63:	or     al,0x51
  417e65:	cs inc ebp
  417e67:	shl    BYTE PTR [eax],cl
  417e69:	ins    BYTE PTR es:[edi],dx
  417e6a:	mov    ebp,0xfecadc9a
  417e6f:	inc    ebx
  417e70:	sbb    al,0xe0
  417e72:	jecxz  0x417e02
  417e74:	or     ch,BYTE PTR [ecx+edi*2-0x2753f0f6]
  417e7b:	addr16 xchg edi,eax
  417e7d:	leavew 
  417e7f:	popa   
  417e80:	lea    eax,[ecx+0x59]
  417e83:	xor    BYTE PTR [esi+0x57],dh
  417e86:	popa   
  417e87:	sub    BYTE PTR [ebx+0x5546d152],0x9a
  417e8e:	jmp    0x37e9:0x97a9dbcd
  417e95:	lock test BYTE PTR [edx+edx*1],bh
  417e99:	xor    DWORD PTR [di-0x4e],esp
  417e9d:	jle    0x417e8f
  417e9f:	mov    dl,0x67
  417ea1:	mov    BYTE PTR [ebx-0x1c],ah
  417ea4:	in     al,0x3d
  417ea6:	sbb    BYTE PTR [esi],al
  417ea8:	sbb    al,0xf8
  417eaa:	scas   eax,DWORD PTR es:[edi]
  417eab:	adc    dh,dh
  417ead:	add    BYTE PTR [eax],al
  417eaf:	add    BYTE PTR [eax],al
  417eb1:	add    dl,al
  417eb3:	sahf   
  417eb4:	xchg   ebx,eax
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	movhps QWORD PTR [eax],xmm4
  417ec0:	adc    eax,0xfc1183
  417ec5:	add    bl,dh
  417ec7:	add    al,0x0
  417ec9:	add    BYTE PTR [ebx+0x702d7edc],dh
  417ecf:	loope  0x417e6d
  417ed1:	es aad 0x1f
  417ed4:	jo     0x417e5e
  417ed6:	fdivrp st(3),st
  417ed8:	pushf  
  417ed9:	pop    es
  417eda:	imul   eax,DWORD PTR [edx],0xca30b383
  417ee0:	add    al,BYTE PTR [ecx-0x2]
  417ee3:	sub    ebx,DWORD PTR [edi-0x457c004b]
  417ee9:	or     al,BYTE PTR [edi+ebx*2]
  417eec:	popa   
  417eed:	imul   edx,DWORD PTR [esi],0x25c9b458
  417ef3:	dec    esp
  417ef4:	bound  edi,QWORD PTR [ebp-0x20b6d6f6]
  417efa:	stc    
  417efb:	mov    ecx,0xf7cea347
  417f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f01:	pop    edx
  417f02:	xor    dh,BYTE PTR [ebx+0x82c4fb1]
  417f08:	sub    DWORD PTR [edx+eiz*4-0xa],edx
  417f0c:	push   ds
  417f0d:	shl    BYTE PTR fs:[ebx+ebp*2+0x53],cl
  417f12:	mov    ds:0x528867df,al
  417f17:	xchg   ebx,eax
  417f18:	push   edx
  417f19:	sbb    ch,BYTE PTR [eax+0x30]
  417f1c:	test   esp,eax
  417f1e:	jge    0x417ecf
  417f20:	lods   eax,DWORD PTR ds:[esi]
  417f21:	mov    eax,ds:0xbc6ad959
  417f26:	fnstsw WORD PTR [ecx+edi*1-0x3b]
  417f2a:	stos   DWORD PTR es:[edi],eax
  417f2b:	int3   
  417f2c:	imul   ebx,DWORD PTR [eax],0x21
  417f2f:	ror    BYTE PTR [esi+0x29],1
  417f32:	inc    esp
  417f33:	jmp    0x417f46
  417f35:	sub    DWORD PTR [ecx],ecx
  417f37:	and    DWORD PTR [ebx],ebx
  417f39:	out    0xc4,eax
  417f3b:	jecxz  0x417f31
  417f3d:	xor    dl,BYTE PTR [ebp-0x39fc6344]
  417f43:	or     al,0x45
  417f45:	jp     0x417fad
  417f47:	idiv   DWORD PTR [ebx+eiz*2-0x6b]
  417f4b:	dec    ecx
  417f4c:	leave  
  417f4d:	rol    cl,1
  417f4f:	or     eax,0xa52525eb
  417f54:	mov    dl,0xdb
  417f56:	test   al,0xdc
  417f58:	push   eax
  417f59:	hlt    
  417f5a:	mov    edx,0xe1aaa2bc
  417f5f:	dec    ecx
  417f60:	pop    es
  417f61:	cmp    eax,0x38604c1c
  417f66:	popf   
  417f67:	pop    DWORD PTR [eax]
  417f69:	inc    esp
  417f6a:	inc    edx
  417f6b:	cmp    ebp,ebx
  417f6d:	int    0x48
  417f6f:	push   edx
  417f70:	stos   DWORD PTR es:[edi],eax
  417f71:	push   ss
  417f72:	in     eax,0xd1
  417f74:	out    dx,ax
  417f76:	out    dx,eax
  417f77:	rcr    DWORD PTR [eax+0x3959df5c],0x84
  417f7e:	sbb    BYTE PTR [esi+0x34597541],ah
  417f84:	popf   
  417f85:	scas   eax,DWORD PTR es:[edi]
  417f86:	inc    esp
  417f87:	mov    ecx,0xd4ce9d8e
  417f8c:	dec    eax
  417f8d:	xor    al,0x68
  417f8f:	sbb    bh,ah
  417f91:	(bad)  
  417f92:	push   ss
  417f93:	mov    dl,0x1c
  417f95:	int    0x56
  417f97:	fild   DWORD PTR [edi-0x7a]
  417f9a:	inc    edx
  417f9b:	jmp    0xc14d248f
  417fa0:	mov    ebx,DWORD PTR [esi-0x7b]
  417fa3:	enter  0x7ca9,0xc
  417fa7:	lock add cl,BYTE PTR [ebp+0x20fd261e]
  417fae:	(bad)  
  417fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb1:	popa   
  417fb2:	mov    eax,ds:0x43083c18
  417fb7:	lahf   
  417fb8:	(bad)
  417fbd:	cmp    eax,0xc8305904
  417fc2:	or     cl,cl
  417fc4:	fstp   TBYTE PTR [esi]
  417fc6:	dec    ebx
  417fc7:	cmp    ch,al
  417fc9:	int3   
  417fca:	out    dx,ax
  417fcc:	outs   dx,BYTE PTR ds:[esi]
  417fcd:	sub    BYTE PTR [ebp+ebx*1-0x5df9221f],bh
  417fd4:	stc    
  417fd5:	daa    
  417fd6:	or     edi,ebp
  417fd8:	push   ds
  417fd9:	cli    
  417fda:	out    0x53,eax
  417fdc:	jmp    0x8cc5:0x7c209432
  417fe3:	xchg   ecx,eax
  417fe4:	cld    
  417fe5:	or     ah,cl
  417fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fe8:	scas   eax,DWORD PTR es:[edi]
  417fe9:	pop    edi
  417fea:	ficom  WORD PTR [ebx+0x6cdd6b38]
  417ff0:	dec    edx
  417ff1:	repz pop DWORD PTR [edi-0x557ad712]
  417ff8:	js     0x41801b
  417ffa:	retf   0xe63b
  417ffd:	ins    BYTE PTR es:[edi],dx
  417ffe:	push   ebp
  417fff:	stos   BYTE PTR es:[di],al
  418001:	xchg   BYTE PTR [ebx+edi*1+0x70],cl
  418005:	mov    esi,0x2a8beee5
  41800a:	popa   
  41800b:	adc    DWORD PTR [esi+0x5a915237],0x12
  418012:	jg     0x417fd0
  418014:	jmp    0xccb8:0xce70e8
  41801b:	shr    DWORD PTR [edx+0x76],1
  41801e:	or     al,0x1b
  418020:	dec    esi
  418021:	stc    
  418022:	jo     0x418036
  418024:	sub    al,BYTE PTR [esi+0x2f7ade64]
  41802a:	aaa    
  41802b:	push   ebx
  41802c:	leave  
  41802d:	xor    BYTE PTR [edi+0x50],bl
  418030:	inc    ecx
  418031:	pop    esp
  418032:	hlt    
  418033:	mov    cl,0xc2
  418035:	sub    al,0xf9
  418037:	icebp  
  418038:	mov    DWORD PTR [eax+0x7e],0x5c4dff93
  41803f:	push   ds
  418040:	or     esi,esi
  418042:	mov    al,0x86
  418044:	test   al,0xb0
  418046:	pusha  
  418047:	push   ss
  418048:	ins    BYTE PTR es:[edi],dx
  418049:	mov    WORD PTR [eax],?
  41804b:	lds    eax,FWORD PTR [esi-0x57]
  41804e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41804f:	inc    DWORD PTR [edx]
  418051:	bound  esp,QWORD PTR cs:[ebp-0x39db9636]
  418058:	push   ebx
  418059:	mov    bl,0x9f
  41805b:	and    esi,DWORD PTR [edi+ecx*1-0x466795cc]
  418062:	gs xchg edi,eax
  418064:	fwait
  418065:	rcl    BYTE PTR [edi],1
  418067:	clc    
  418068:	pop    ss
  418069:	jmp    0xe2835d4c
  41806e:	cmp    DWORD PTR [ecx],esp
  418070:	cld    
  418071:	jp     0x4180b6
  418073:	out    dx,eax
  418074:	adc    ch,BYTE PTR [eax+edx*2-0x594187ab]
  41807b:	mov    ch,0xb7
  41807d:	jnp    0x4180a2
  41807f:	xor    eax,0x9b181375
  418084:	mov    esi,0x5815473c
  418089:	mov    BYTE PTR [ecx+0x53],bh
  41808c:	push   ebx
  41808d:	jg     0x4180b2
  41808f:	enter  0x2b4e,0xa0
  418093:	xor    al,0x84
  418095:	retf   0xda08
  418098:	and    eax,0x35cc7ee9
  41809d:	jle    0x4180cf
  41809f:	mov    ds:0x846cab64,al
  4180a4:	repnz mov ds:0x264a6fb5,eax
  4180aa:	jb     0x41805a
  4180ac:	adc    ebx,DWORD PTR [edi]
  4180ae:	outs   dx,DWORD PTR ds:[esi]
  4180af:	call   0xcaaeda90
  4180b4:	mov    al,0x60
  4180b6:	into   
  4180b7:	and    bh,ah
  4180b9:	add    edx,DWORD PTR [eax+edx*1]
  4180bc:	fidivr WORD PTR [esp+esi*8+0x40c1bf7c]
  4180c3:	or     cl,BYTE PTR [esi]
  4180c5:	pop    ecx
  4180c6:	mov    ecx,0x3e30d3ae
  4180cb:	imul   eax,DWORD PTR [edi-0x1f],0xffffffe6
  4180cf:	mov    edx,0x66b45110
  4180d4:	imul   eax
  4180d6:	sbb    ebx,DWORD PTR [eax+0xe5b4078]
  4180dc:	shr    edi,cl
  4180de:	push   esp
  4180df:	daa    
  4180e0:	cmp    eax,0xce750cf1
  4180e5:	mov    eax,ds:0xa5f2bbb
  4180ea:	inc    edi
  4180eb:	dec    ecx
  4180ec:	pop    ebx
  4180ed:	out    dx,al
  4180ee:	pop    ss
  4180ef:	ja     0x41809f
  4180f1:	fmul   QWORD PTR [esi+0x27]
  4180f4:	and    DWORD PTR [ecx+0x8532729],eax
  4180fa:	popf   
  4180fb:	pop    ds
  4180fc:	cmp    al,0xf3
  4180fe:	and    ah,al
  418100:	jg     0x418115
  418102:	out    dx,al
  418103:	and    edx,esi
  418105:	or     al,0x66
  418107:	rcr    dl,cl
  418109:	adc    al,0xc3
  41810b:	icebp  
  41810c:	lods   eax,DWORD PTR ds:[esi]
  41810d:	icebp  
  41810e:	imul   ebx,DWORD PTR [ecx-0x7],0xffffff97
  418112:	imul   esi,edx,0xffffff80
  418115:	lea    ecx,[eax-0x6f]
  418118:	mov    ecx,DWORD PTR [eax-0x606ac6a6]
  41811e:	push   0x10ca8ee1
  418123:	fcom   DWORD PTR [eax]
  418125:	dec    ebx
  418126:	es pushf 
  418128:	sahf   
  418129:	or     bl,ch
  41812b:	fucomi st,st(6)
  41812d:	xchg   edx,eax
  41812e:	fisubr DWORD PTR [edi-0x5d134bb1]
  418134:	ret    
  418135:	int3   
  418136:	rcr    BYTE PTR [eax],0x30
  418139:	or     eax,0xdaa86d8c
  41813e:	rcl    DWORD PTR [ecx-0x4fe04b8f],0x4b
  418145:	int3   
  418146:	mov    edx,gs
  418148:	arpl   WORD PTR [edx+esi*4],sp
  41814b:	fimul  WORD PTR ds:0x172ab1a9
  418151:	stc    
  418152:	jge    0x41810f
  418154:	mov    esi,0x92b5c39a
  418159:	sub    bh,bh
  41815b:	enter  0x52f1,0xa5
  41815f:	shr    BYTE PTR [esi],0xc4
  418162:	mov    al,0x15
  418164:	jmp    FWORD PTR [esi-0x4f]
  418167:	pop    ecx
  418168:	push   eax
  418169:	cmp    eax,0x6aa36837
  41816e:	mov    eax,ds:0x74adc0fb
  418173:	ror    edi,0xbb
  418176:	mov    ah,0x7c
  418178:	jnp    0x41819f
  41817a:	sub    ah,dh
  41817c:	mov    cl,0xfb
  41817e:	outs   dx,DWORD PTR ds:[esi]
  41817f:	iret   
  418180:	call   0xe4cc:0x3f31ee35
  418187:	jb     0x418123
  418189:	add    bh,bl
  41818b:	(bad)  
  41818c:	lock cli 
  41818e:	jge    0x41817b
  418190:	retf   0xbd21
  418193:	push   0xbaf5a225
  418198:	shl    DWORD PTR [edx],1
  41819a:	push   eax
  41819b:	push   ss
  41819c:	and    eax,0x43acf408
  4181a1:	push   es
  4181a2:	cmp    al,0x3c
  4181a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181a5:	or     eax,0xa7e11454
  4181aa:	adc    DWORD PTR [edx+edi*2-0x18],ecx
  4181ae:	adc    dl,BYTE PTR [edx+0x792d018a]
  4181b4:	scas   eax,DWORD PTR es:[edi]
  4181b5:	jb     0x4181e5
  4181b7:	jne    0x418195
  4181b9:	xor    eax,0xac96d45c
  4181be:	imul   eax,DWORD PTR [edx-0x38],0x22487ec5
  4181c5:	mov    BYTE PTR [esi],cl
  4181c7:	ds cs inc edi
  4181ca:	push   0x65f14cfa
  4181cf:	xor    bh,BYTE PTR [ebx+0x42]
  4181d2:	add    eax,0xde3e5c44
  4181d7:	fstp   DWORD PTR [eax+0x1d]
  4181da:	call   0x6f87368a
  4181df:	icebp  
  4181e0:	mov    edi,0x74eff76d
  4181e5:	adc    DWORD PTR [edi+0x6c0c0bf9],0xffffffc1
  4181ec:	push   cs
  4181ed:	mov    eax,ds:0x51bc150a
  4181f2:	sbb    ah,BYTE PTR [edi]
  4181f4:	popa   
  4181f5:	pop    edx
  4181f6:	aas    
  4181f7:	nop
  4181f8:	call   0xd9cd:0xd1c687dd
  4181ff:	mov    ch,0x5d
  418201:	push   ss
  418202:	sbb    bh,0xc6
  418205:	mov    ah,0xb8
  418207:	aaa    
  418208:	fisubr DWORD PTR [eax]
  41820a:	pop    esi
  41820b:	or     al,0xc6
  41820d:	pop    ss
  41820e:	bound  esp,QWORD PTR [eax+0x640ef7ab]
  418214:	xchg   ebx,eax
  418215:	jae    0x41824b
  418217:	xlat   BYTE PTR ds:[ebx]
  418218:	cmp    al,al
  41821a:	imul   edx,DWORD PTR [edx+0x3c98a596],0x6fa28f09
  418224:	cdq    
  418225:	mov    bh,0xb
  418227:	pop    edi
  418228:	ja     0x418294
  41822a:	adc    eax,0x1acdb2fe
  41822f:	sbb    edx,DWORD PTR [ebx+0x44d38755]
  418235:	xchg   ecx,eax
  418236:	rcr    DWORD PTR [ecx-0x569a66d9],0x44
  41823d:	or     eax,0x2b822066
  418242:	add    al,0xe7
  418244:	mov    al,ds:0x1a9038c9
  418249:	sub    DWORD PTR [eax-0xae02e80],ebp
  41824f:	cmp    eax,0xa334d300
  418254:	clc    
  418255:	inc    edi
  418256:	lock xor esp,ebx
  418259:	mov    cl,ah
  41825b:	jne    0x4182b3
  41825d:	mov    WORD PTR [edi+0x6e661d77],?
  418263:	test   al,0xa
  418265:	jnp    0x4182d5
  418267:	sbb    ebp,DWORD PTR [ecx+eax*1]
  41826a:	push   es
  41826b:	lods   al,BYTE PTR ds:[esi]
  41826d:	adc    edx,DWORD PTR [ebp-0x13]
  418270:	out    0x9a,eax
  418272:	cmc    
  418273:	pusha  
  418274:	xchg   edi,eax
  418275:	lock adc bl,bh
  418278:	push   esp
  418279:	outs   dx,DWORD PTR ds:[esi]
  41827a:	pop    edx
  41827b:	pop    eax
  41827c:	add    DWORD PTR [eax+0x4125d57f],ebx
  418282:	cmp    al,bl
  418284:	adc    DWORD PTR [edx],edi
  418286:	pop    es
  418287:	(bad)  
  418288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418289:	sar    BYTE PTR [edx],0xad
  41828c:	int3   
  41828d:	dec    edi
  41828e:	push   0x6d0a9491
  418293:	sbb    edi,DWORD PTR [edx-0x4f6038c8]
  418299:	mov    edx,0x83155937
  41829e:	mov    cl,0xc2
  4182a0:	xchg   esi,eax
  4182a1:	repnz add DWORD PTR es:[edx+eax*4+0x56464cdf],eax
  4182aa:	sbb    DWORD PTR [ebx],0xcea86e73
  4182b0:	retf   0x2954
  4182b3:	sti    
  4182b4:	inc    eax
  4182b5:	icebp  
  4182b6:	repnz push 0xfffffff1
  4182b9:	daa    
  4182ba:	lea    ebx,[ebp+ebx*2-0x38]
  4182be:	mov    DWORD PTR [esi],esi
  4182c0:	fsub   QWORD PTR [esi-0x68]
  4182c3:	push   ds
  4182c4:	push   edx
  4182c5:	shr    BYTE PTR [esi-0x54a5d0f1],1
  4182cb:	retf   
  4182cc:	nop
  4182cd:	adc    eax,0xf509fba3
  4182d2:	int    0x89
  4182d4:	xlat   BYTE PTR ds:[ebx]
  4182d5:	inc    eax
  4182d6:	dec    edx
  4182d7:	dec    eax
  4182d8:	xchg   edi,eax
  4182d9:	mov    ds:0x7d140e68,al
  4182de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182df:	fs jno 0x4182c4
  4182e2:	sub    ecx,esp
  4182e4:	arpl   WORD PTR [ecx-0x3bc63051],bp
  4182ea:	out    0x34,al
  4182ec:	fcmovb st,st(4)
  4182ee:	dec    esi
  4182ef:	loopne 0x418276
  4182f1:	addr16 je 0x41833a
  4182f4:	and    esp,ebx
  4182f6:	jb     0x418298
  4182f8:	pop    ebx
  4182f9:	fcom   QWORD PTR [ebp+0x6]
  4182fc:	xchg   edx,edi
  4182fe:	std    
  4182ff:	dec    ecx
  418300:	sbb    eax,0x62142ef1
  418305:	push   esi
  418306:	jne    0x418304
  418308:	imul   eax,edx,0xfffffff7
  41830b:	sub    al,0xa8
  41830d:	test   eax,0x3805c3bd
  418312:	mov    DWORD PTR [edx-0x44015684],0x65f08a63
  41831c:	test   DWORD PTR [esi+0x15],esi
  41831f:	add    eax,0x715597b3
  418324:	xchg   dh,ch
  418326:	xchg   ebx,eax
  418327:	cmp    eax,0x3bcd9ce8
  41832c:	in     al,dx
  41832d:	cmp    DWORD PTR [edi],ecx
  41832f:	add    ebp,ecx
  418331:	jmp    FWORD PTR [eax]
  418333:	sbb    esp,DWORD PTR [ecx]
  418335:	test   eax,0xc02e50b8
  41833a:	jmp    0x4182ce
  41833c:	sub    esi,DWORD PTR [ebp-0x6b]
  41833f:	int    0xb3
  418341:	sub    bl,dh
  418343:	mov    edi,0x51dd4239
  418348:	mov    dl,0x56
  41834a:	jmp    0x4183b5
  41834c:	mov    ds:0xc05908bb,eax
  418351:	pop    eax
  418352:	mov    ds:0x5088d627,al
  418357:	inc    eax
  418358:	retf   
  418359:	mov    esi,0x3e58053c
  41835e:	ror    DWORD PTR [edi-0x33650acc],1
  418364:	inc    esp
  418365:	dec    ebp
  418366:	pop    ss
  418367:	(bad)  
  418369:	ins    BYTE PTR es:[edi],dx
  41836a:	jecxz  0x4183bb
  41836c:	xor    DWORD PTR [ebx-0x38],eax
  41836f:	out    0x77,al
  418371:	fcmovnu st,st(3)
  418373:	jecxz  0x4183a1
  418375:	loopne 0x4183b2
  418377:	cwde   
  418378:	push   ebx
  418379:	mov    eax,0x6ff1d044
  41837e:	std    
  41837f:	adc    DWORD PTR [eax+0x63],eax
  418382:	mov    cl,0x87
  418384:	adc    ecx,edx
  418386:	mov    ds:0x62c5e0f1,eax
  41838b:	inc    ebp
  41838c:	fild   QWORD PTR [edx]
  41838e:	dec    eax
  41838f:	add    al,0x52
  418391:	(bad)  
  418392:	frstor [edi+0x3f]
  418395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418396:	jae    0x418416
  418398:	ss cs push eax
  41839b:	jnp    0x418348
  41839d:	in     al,0x75
  41839f:	shl    BYTE PTR [eiz*4-0x7aeec49d],0xd6
  4183a7:	out    0xe9,eax
  4183a9:	xor    eax,0xf6a4638e
  4183ae:	shl    DWORD PTR [ebx],1
  4183b0:	sbb    ebx,0x44
  4183b3:	cli    
  4183b4:	test   eax,0xd6240e66
  4183b9:	das    
  4183ba:	iret   
  4183bb:	xor    BYTE PTR [edx],dl
  4183bd:	add    BYTE PTR [eax],al
  4183bf:	add    BYTE PTR [eax],al
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	cmp    DWORD PTR [edi-0x1d],0xffffff8e
  4183d1:	jae    0x4183d7
  4183d3:	add    DWORD PTR [ecx],eax
  4183d5:	add    bl,dh
  4183d7:	add    al,0x0
  4183d9:	add    ch,dl
  4183db:	push   ss
  4183dc:	test   DWORD PTR [edx],ebx
  4183de:	adc    al,0xf8
  4183e0:	xor    al,0x4f
  4183e2:	rcl    BYTE PTR [eax],0x5d
  4183e5:	retf   0x9555
  4183e8:	xchg   ecx,eax
  4183e9:	or     al,0xe6
  4183eb:	adc    BYTE PTR ds:0x72cdaa4c,al
  4183f1:	test   dl,0x34
  4183f4:	ret    0x900d
  4183f7:	mov    edx,0xa76a3aa3
  4183fc:	hlt    
  4183fd:	jg     0x4183fb
  4183ff:	xchg   edi,eax
  418400:	dec    esp
  418401:	dec    ecx
  418402:	push   ebx
  418403:	jb     0x4183e5
  418405:	pop    es
  418406:	adc    esp,DWORD PTR [esi-0x48]
  418409:	pop    edx
  41840a:	sub    al,0x4d
  41840c:	les    ecx,FWORD PTR [ebp+0x12852b5b]
  418412:	add    ebp,DWORD PTR [eax+0x1b03f9b6]
  418418:	aad    0xc1
  41841a:	inc    esi
  41841b:	fadd   QWORD PTR [edi+0x62e9d5a0]
  418421:	fsub   st,st(6)
  418423:	inc    esp
  418424:	and    ecx,DWORD PTR [edi-0x24]
  418427:	xchg   ebx,eax
  418428:	ja     0x4183db
  41842a:	call   DWORD PTR [edx]
  41842c:	stc    
  41842d:	cmp    BYTE PTR [edx+0x38],0x3f
  418431:	fnsave [ebp+0x1f]
  418434:	inc    ebp
  418435:	popf   
  418436:	out    dx,eax
  418437:	scas   eax,DWORD PTR es:[edi]
  418438:	frstor [edi+0xdd860e4]
  41843e:	dec    ecx
  41843f:	push   ss
  418440:	mov    DWORD PTR [ecx-0x26f46532],ebp
  418446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418447:	ret    
  418448:	int    0xba
  41844a:	fwait
  41844b:	and    DWORD PTR [ecx],esi
  41844d:	retf   0xdad8
  418450:	push   eax
  418451:	sbb    al,0x49
  418453:	xchg   DWORD PTR [edx+0x1794d5ef],ebp
  418459:	or     esi,esi
  41845b:	pushf  
  41845c:	mov    BYTE PTR [ecx+ecx*1+0x5f838666],ch
  418463:	push   esp
  418464:	jae    0x418498
  418466:	int    0xc4
  418468:	or     DWORD PTR [edi+0x3e],ebx
  41846b:	fwait
  41846c:	loope  0x4184ac
  41846e:	jle    0x418461
  418470:	cmc    
  418471:	scas   eax,DWORD PTR es:[edi]
  418472:	addr16 xchg ecx,eax
  418474:	sbb    bh,BYTE PTR [esi]
  418476:	or     ebp,DWORD PTR [ecx-0x2d]
  418479:	xlat   BYTE PTR ds:[ebx]
  41847a:	popf   
  41847b:	jnp    0x418478
  41847d:	iret   
  41847e:	(bad)  
  418480:	pusha  
  418481:	adc    ebx,0x66
  418484:	mov    ebp,0xb2c57d87
  418489:	push   ebx
  41848a:	sub    al,BYTE PTR [esi+0x11]
  41848d:	int    0xbf
  41848f:	mov    esp,0x23f2517c
  418494:	imul   eax,DWORD PTR [ebx-0x16],0xffffff9e
  418498:	test   BYTE PTR [edx],ch
  41849a:	sub    ah,BYTE PTR [ecx+0x65]
  41849d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41849e:	and    eax,0x555614c7
  4184a3:	add    BYTE PTR [eax],bl
  4184a5:	ficom  WORD PTR gs:[ebp+ebp*2-0x51]
  4184aa:	addr16 pop esi
  4184ac:	(bad)  
  4184ad:	pop    edx
  4184ae:	mov    ebx,0xa26bf76c
  4184b3:	jnp    0x41850b
  4184b5:	repnz xor ch,cl
  4184b8:	adc    dh,cl
  4184ba:	fsubr  DWORD PTR [esi+0x44]
  4184bd:	inc    edi
  4184be:	data16 icebp 
  4184c0:	mov    esi,0xdcbe8b45
  4184c5:	shr    BYTE PTR [ebx],1
  4184c7:	and    BYTE PTR [edx],ch
  4184c9:	ins    BYTE PTR es:[edi],dx
  4184ca:	sub    BYTE PTR [edi+0x79299351],0xa5
  4184d1:	es mov ch,0xf4
  4184d4:	aaa    
  4184d5:	lea    ebx,[edx]
  4184d7:	(bad)  
  4184d8:	cmp    BYTE PTR es:[ecx+eiz*4-0x7ae6ed3e],al
  4184e0:	mov    ch,BYTE PTR cs:[edx+0x29715d4]
  4184e7:	scas   al,BYTE PTR es:[edi]
  4184e8:	pusha  
  4184e9:	mov    cl,BYTE PTR [edx]
  4184eb:	mov    esp,0x344a73f5
  4184f0:	lea    ebp,[ebx-0x56]
  4184f3:	push   edx
  4184f4:	mov    gs,WORD PTR [edi+0x2c086fe7]
  4184fa:	cli    
  4184fb:	adc    esi,DWORD PTR [edi-0x56]
  4184fe:	xchg   esi,eax
  4184ff:	je     0x418576
  418501:	aaa    
  418502:	lods   al,BYTE PTR ds:[esi]
  418503:	inc    dx
  418505:	pop    ebp
  418506:	xchg   ebp,eax
  418507:	mov    ah,0x3
  418509:	loopne 0x41855c
  41850b:	pop    edi
  41850c:	hlt    
  41850d:	stos   DWORD PTR es:[edi],eax
  41850e:	clc    
  41850f:	push   ecx
  418510:	or     esp,ebp
  418512:	push   ebp
  418513:	mov    edx,0x4268a029
  418518:	pop    ebx
  418519:	mov    dl,0xac
  41851b:	fdiv   st,st(4)
  41851d:	mov    edi,0xacd7453a
  418522:	adc    dh,BYTE PTR [edx-0xf8f82e1]
  418528:	adc    eax,0xca37b8a6
  41852d:	xor    BYTE PTR [ebx+eiz*2-0x4a16910],al
  418534:	xchg   esi,eax
  418535:	je     0x41853e
  418537:	mov    esp,0x5b6556e2
  41853c:	ins    BYTE PTR es:[edi],dx
  41853d:	mov    edi,cs
  41853f:	es clc 
  418541:	mov    al,ds:0x414c81d
  418546:	mov    bh,0xca
  418548:	push   esp
  418549:	sbb    DWORD PTR [eax],esi
  41854b:	loop   0x41853d
  41854d:	xor    ebp,esi
  41854f:	not    BYTE PTR [esi+0x6d]
  418552:	inc    ebp
  418553:	mov    dl,0x69
  418555:	enter  0xb2fd,0x3a
  418559:	into   
  41855a:	clc    
  41855b:	sub    dl,BYTE PTR [eax-0x77]
  41855e:	int3   
  41855f:	pop    ss
  418560:	test   DWORD PTR [ebx-0x5a],edi
  418563:	xchg   edi,eax
  418564:	lahf   
  418565:	mov    ds:0xf5a59eee,al
  41856a:	ja     0x4184f8
  41856c:	xchg   ecx,eax
  41856d:	sub    eax,0x195e0532
  418572:	loop   0x418554
  418574:	mov    eax,0xa6d94b63
  418579:	jo     0x4185fa
  41857b:	pusha  
  41857c:	and    DWORD PTR [ebx-0x5d53e6a5],0xffffffc0
  418583:	sub    ecx,DWORD PTR [eax]
  418585:	in     al,dx
  418586:	cmp    al,ch
  418588:	and    DWORD PTR [ebx+0x5a3373e1],esi
  41858e:	js     0x4185e5
  418590:	(bad)  
  418591:	or     esi,DWORD PTR [esi-0x2d7c4b45]
  418597:	mov    dh,0x11
  418599:	cmovae ebx,DWORD PTR [edx]
  41859c:	mov    ecx,0x9174a678
  4185a1:	je     0x41861b
  4185a3:	add    eax,0xd3abce0b
  4185a8:	jmp    0x4185ab
  4185aa:	mov    edx,0xc1cb9003
  4185af:	stos   DWORD PTR es:[edi],eax
  4185b0:	fwait
  4185b1:	sbb    dl,ch
  4185b3:	clc    
  4185b4:	ss addr16 jmp 0xc9fd09eb
  4185bb:	psrlq  mm6,QWORD PTR [ebp+0x796a903d]
  4185c2:	mov    ds:0x1cda2531,eax
  4185c7:	and    al,0x8c
  4185c9:	or     al,0x48
  4185cb:	ins    BYTE PTR es:[edi],dx
  4185cc:	(bad)  
  4185cd:	dec    eax
  4185ce:	jne    0x4185b0
  4185d0:	and    eax,0x8fca0bdb
  4185d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185d6:	fcmovbe st,st(5)
  4185d8:	add    ebp,0x6f2a727f
  4185de:	(bad)  
  4185df:	jo     0x418562
  4185e1:	fs enter 0xc0e9,0xe7
  4185e6:	inc    ebx
  4185e7:	jmp    0xc641f4c1
  4185ec:	xchg   esi,eax
  4185ed:	inc    edx
  4185ee:	mov    esp,0x5919ab12
  4185f3:	add    DWORD PTR [esi*8-0x5fceba6f],edx
  4185fa:	loopne 0x4185c9
  4185fc:	push   ebx
  4185fd:	lock stos BYTE PTR es:[edi],al
  4185ff:	sub    bl,cl
  418601:	lods   eax,DWORD PTR ds:[esi]
  418602:	push   0x5e0cc217
  418607:	dec    esp
  418608:	cmc    
  418609:	ror    DWORD PTR [edi*1+0x77b18742],1
  418610:	add    DWORD PTR ss:[edi+0x1e],ebx
  418614:	xchg   BYTE PTR [ebx],cl
  418616:	xchg   edi,eax
  418617:	dec    esp
  418619:	ret    0x8968
  41861c:	push   esi
  41861d:	outs   dx,BYTE PTR ds:[esi]
  41861e:	fcom   DWORD PTR [ecx+0x2c]
  418621:	aas    
  418622:	adc    al,0x47
  418624:	stos   BYTE PTR es:[edi],al
  418625:	xchg   esp,eax
  418626:	call   FWORD PTR [ebx]
  418628:	and    bh,BYTE PTR [eax+0x5b66fe7f]
  41862e:	add    ecx,DWORD PTR [eax-0x2e69fbe9]
  418634:	sub    al,BYTE PTR [ecx]
  418636:	mov    edi,DWORD PTR [esi]
  418638:	pop    eax
  418639:	and    edx,ebx
  41863b:	xchg   eax,esi
  41863d:	mov    dh,0x95
  41863f:	call   0x89c9923f
  418644:	mov    ebx,0x76f6c4b5
  418649:	fcom   QWORD PTR [esi]
  41864b:	adc    bh,BYTE PTR [ebp+0x13]
  41864e:	out    dx,al
  41864f:	imul   ebx,DWORD PTR [ecx-0xcc8f58c],0x6f78e31d
  418659:	inc    esp
  41865a:	jo     0x4185e4
  41865c:	repz out 0x84,eax
  41865f:	jne    0x418603
  418661:	adc    DWORD PTR [edi+eiz*8-0x38],0xd989c4dc
  418669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41866a:	push   edx
  41866b:	outs   dx,DWORD PTR ds:[si]
  41866d:	inc    ebp
  41866e:	mov    eax,0x4b4d6688
  418673:	xchg   ebp,eax
  418674:	push   edi
  418675:	aaa    
  418676:	add    eax,edx
  418678:	dec    eax
  418679:	xor    bh,ch
  41867b:	dec    BYTE PTR [eax]
  41867d:	xor    DWORD PTR [ecx-0x1d9f7a23],edx
  418683:	idiv   DWORD PTR [edx+0x44]
  418686:	in     eax,0xe8
  418688:	mov    cl,0xa6
  41868a:	mov    ebp,DWORD PTR [ebx]
  41868c:	inc    ecx
  41868d:	cmp    DWORD PTR [ebp-0x8],ecx
  418690:	stc    
  418691:	test   DWORD PTR [edi-0x302b6ca9],esp
  418697:	popa   
  418698:	adc    ecx,esp
  41869a:	bound  ebp,QWORD PTR [eax-0x61]
  41869d:	mov    ah,0xdc
  41869f:	or     esi,ebx
  4186a1:	xor    eax,0x57968ce
  4186a6:	or     al,bh
  4186a8:	mov    esp,0x2a3ca8f5
  4186ad:	retf   
  4186ae:	(bad)  
  4186af:	in     eax,dx
  4186b0:	pop    ecx
  4186b1:	xchg   DWORD PTR [ecx],edi
  4186b3:	sbb    BYTE PTR [edi+0x3d],0x9c
  4186b7:	jg     0x4186ef
  4186b9:	iret   
  4186ba:	fnstcw WORD PTR [eax]
  4186bc:	retf   0xa5cd
  4186bf:	pushf  
  4186c0:	scas   eax,DWORD PTR es:[edi]
  4186c1:	pop    edx
  4186c2:	fdiv   st(5),st
  4186c4:	add    edx,esi
  4186c6:	pop    es
  4186c7:	psubusb mm1,QWORD PTR [ecx+0xfa1a1b5]
  4186ce:	xchg   esp,eax
  4186cf:	adc    esi,DWORD PTR ds:0x966e688f
  4186d5:	and    ah,BYTE PTR [ebx+edx*8+0x409f1aca]
  4186dc:	test   DWORD PTR [edx+0x3809e0a],ecx
  4186e2:	pushf  
  4186e3:	push   esp
  4186e4:	(bad)  
  4186e5:	xlat   BYTE PTR ds:[ebx]
  4186e6:	mov    esi,0x495d04ef
  4186eb:	and    al,0x31
  4186ed:	jnp    0x41871e
  4186ef:	sub    DWORD PTR [ecx+0x61],edi
  4186f2:	and    dl,BYTE PTR [edx+0x66f64375]
  4186f8:	and    BYTE PTR [ecx+0x5b],bl
  4186fb:	mov    esp,0x3696596a
  418700:	pop    ss
  418701:	xchg   ebp,eax
  418702:	sub    eax,0x1e9572f6
  418707:	push   esp
  418708:	pop    ecx
  418709:	dec    ebx
  41870a:	in     eax,dx
  41870b:	pop    es
  41870c:	and    DWORD PTR [eax-0x37e8d366],ebp
  418712:	add    al,0xd1
  418714:	or     BYTE PTR [edi+0x7f],al
  418717:	dec    ebx
  418718:	mov    dl,0x4
  41871a:	retf   
  41871b:	(bad)  
  41871c:	in     al,dx
  41871d:	pop    eax
  41871e:	(bad)  
  41871f:	scas   eax,DWORD PTR es:[edi]
  418720:	push   ebx
  418721:	xor    edi,DWORD PTR [ecx+0x7e]
  418724:	and    esi,DWORD PTR [eax]
  418726:	(bad)  
  418727:	fidivr WORD PTR [ecx+ecx*8-0x4ef233f7]
  41872e:	and    DWORD PTR [eax+0x13],ecx
  418731:	(bad)  
  418732:	std    
  418733:	shr    BYTE PTR [eax+0x77],cl
  418736:	sahf   
  418737:	jbe    0x41875e
  418739:	sub    dh,ah
  41873b:	pushf  
  41873c:	mov    gs,ecx
  41873e:	mov    bl,0xb1
  418740:	fild   WORD PTR [esi+0x3a9af2ba]
  418746:	je     0x41879a
  418748:	push   esi
  418749:	push   0xffffffa4
  41874b:	in     al,0x9a
  41874d:	xchg   esi,eax
  41874e:	enter  0x97e3,0x9a
  418752:	mov    ecx,0x937478c9
  418757:	icebp  
  418758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418759:	sbb    DWORD PTR [edx-0x62],ebp
  41875c:	ret    0x9f94
  41875f:	adc    al,BYTE PTR [esi+0x2e]
  418762:	pop    edi
  418763:	adc    eax,0x6c465397
  418768:	pushf  
  418769:	xor    bh,BYTE PTR [ebx+0x59]
  41876c:	out    dx,eax
  41876d:	jbe    0x4187d1
  41876f:	lahf   
  418770:	sub    DWORD PTR [ebx+0x2b],ecx
  418773:	add    ecx,DWORD PTR [eax-0x47]
  418776:	mov    edi,0xea0d768f
  41877b:	pop    esi
  41877c:	mov    esi,0xa808ef2c
  418781:	pop    ebp
  418782:	cmp    bl,al
  418784:	cmp    DWORD PTR [ebp+0x74a773dd],ebp
  41878a:	enter  0xd36a,0x36
  41878e:	adc    ebx,DWORD PTR [edx-0x4393c752]
  418794:	mov    edx,0xbb36d595
  418799:	stc    
  41879a:	ror    DWORD PTR [eax-0x4f47f87e],1
  4187a0:	std    
  4187a1:	mov    ds:0x7356a52e,al
  4187a6:	loope  0x418790
  4187a8:	fsubr  QWORD PTR [edi+0x3226ca65]
  4187ae:	fdivr  QWORD PTR [edx+0x4f36e6a0]
  4187b4:	jmp    0x8d4a9884
  4187b9:	jbe    0x418761
  4187bb:	mov    BYTE PTR [ebx+0x772fb402],ah
  4187c1:	in     eax,dx
  4187c2:	mov    al,0x8a
  4187c4:	ret    
  4187c5:	addr16 jle 0x418773
  4187c8:	(bad)  
  4187c9:	loope  0x418783
  4187cb:	mov    ds:0x872b6651,al
  4187d0:	mov    ch,0xbc
  4187d2:	jns    0x4187f9
  4187d4:	xchg   ebp,eax
  4187d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187d6:	jbe    0x4187db
  4187d8:	cdq    
  4187d9:	sbb    ebx,DWORD PTR [edx]
  4187db:	push   esp
  4187dc:	stc    
  4187dd:	mov    cl,ah
  4187df:	lock scas eax,DWORD PTR es:[edi]
  4187e1:	xchg   edi,eax
  4187e2:	mov    ds:0xcf84987,al
  4187e7:	dec    esp
  4187e8:	mov    edx,0x6e4239cd
  4187ed:	sbb    edx,DWORD PTR [ecx+0x64]
  4187f0:	mov    eax,ds:0xb48c0e94
  4187f5:	cwde   
  4187f6:	mov    al,ds:0x9a958219
  4187fb:	xor    BYTE PTR cs:[ecx],al
  4187fe:	stos   DWORD PTR es:[edi],eax
  4187ff:	lahf   
  418800:	sub    eax,0x2a4102ed
  418805:	push   es
  418806:	sub    BYTE PTR ds:0x6436eb5f,dh
  41880c:	call   0x34bf:0x17e121fa
  418813:	lea    ebp,[esi]
  418815:	cmovnp ebx,DWORD PTR [edx-0x13d88240]
  41881c:	arpl   bx,ax
  41881e:	ret    
  41881f:	ror    DWORD PTR [ebx+0x3b71596d],0xa9
  418826:	jle    0x41887d
  418828:	mov    dl,0x3b
  41882a:	push   ebx
  41882b:	inc    ebx
  41882c:	mov    esi,0x60dc7555
  418831:	jmp    0x216c:0x4758997b
  418838:	or     al,0x17
  41883a:	jp     0x4187be
  41883c:	cmp    al,0xa4
  41883e:	xor    BYTE PTR ds:[ebp+0x73],ch
  418842:	enter  0x1d21,0x97
  418846:	pop    es
  418847:	mov    cl,0xde
  418849:	jp     0x418854
  41884b:	mov    ch,0xf8
  41884d:	and    eax,0xe25c1ab1
  418852:	scas   eax,DWORD PTR es:[edi]
  418853:	dec    edi
  418854:	in     eax,dx
  418855:	mov    ecx,0x4d355d72
  41885a:	sbb    eax,0xcd56869d
  41885f:	mov    ebp,0x4b13be0c
  418864:	xchg   esi,eax
  418865:	popf   
  418866:	push   eax
  418867:	adc    BYTE PTR [esi-0x22906a21],ah
  41886d:	jae    0x41883a
  41886f:	out    dx,eax
  418870:	sub    BYTE PTR [edx-0x5e],dh
  418873:	pop    ds
  418874:	xchg   ebx,eax
  418875:	fnsave [edx]
  418877:	lea    esi,[edx]
  418879:	enter  0x51ca,0xae
  41887d:	pop    es
  41887e:	jp     0x418846
  418880:	push   cs
  418881:	cmpxchg BYTE PTR [eax-0x5b],ch
  418885:	stos   DWORD PTR es:[edi],eax
  418886:	adc    BYTE PTR [ecx],cl
  418888:	add    esp,ebx
  41888a:	sbb    DWORD PTR [eax+esi*2+0x6cf3a8b0],0x6c
  418892:	mov    ecx,0xe8355010
  418897:	cmp    cl,bh
  418899:	xor    BYTE PTR [esi-0x39],bl
  41889c:	out    0x16,al
  41889e:	jecxz  0x418860
  4188a0:	or     bl,al
  4188a2:	pop    ds
  4188a3:	xchg   esi,eax
  4188a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188a5:	pushf  
  4188a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188a7:	test   DWORD PTR [ecx],edi
  4188a9:	jb     0x4188a5
  4188ab:	xchg   BYTE PTR [ecx-0x38],cl
  4188ae:	ret    
  4188af:	or     edi,DWORD PTR [edx-0x69b74fdb]
  4188b5:	out    dx,al
  4188b6:	shl    DWORD PTR [ecx],1
  4188b8:	fcom   st(3)
  4188ba:	mov    ds:0x756e26db,eax
  4188bf:	(bad)  
  4188c1:	nop
  4188c2:	fist   DWORD PTR [ebp-0x30708682]
  4188c8:	mov    eax,ds:0xb20a1aec
  4188cd:	add    BYTE PTR [eax],al
  4188cf:	add    BYTE PTR [eax],al
  4188d1:	add    BYTE PTR [esi-0x8290893],bl
  4188d7:	fidivr WORD PTR [edi-0x61f42993]
  4188dd:	int    0x1a
  4188df:	out    dx,al
  4188e0:	add    esp,DWORD PTR [eax]
  4188e2:	test   DWORD PTR ds:0x4f30001,0xbd250000
  4188ec:	inc    ebp
  4188ed:	jns    0x418893
  4188ef:	jmp    0x6df9403
  4188f4:	scas   al,BYTE PTR es:[edi]
  4188f5:	icebp  
  4188f6:	clc    
  4188f7:	les    esi,FWORD PTR [edi]
  4188f9:	adc    al,BYTE PTR [esi]
  4188fb:	and    esi,0x5
  4188fe:	adc    eax,0xf9dacecb
  418903:	scas   eax,DWORD PTR es:[edi]
  418904:	jp     0x4188e1
  418906:	pop    ecx
  418907:	int    0x9c
  418909:	mov    esi,0x3def25b9
  41890e:	or     cl,BYTE PTR [edx-0x28]
  418911:	xchg   ebx,eax
  418912:	lahf   
  418913:	les    eax,FWORD PTR ds:0x87e4b579
  418919:	or     bh,BYTE PTR [ebp+0x5]
  41891c:	or     BYTE PTR [edi+0x6325d95c],ch
  418922:	xor    ch,BYTE PTR [ebp+0x4d]
  418925:	sahf   
  418926:	ror    BYTE PTR [edi-0x44e917ae],1
  41892c:	adc    BYTE PTR [ebp+0x3512121],bh
  418932:	mov    ?,esi
  418934:	stc    
  418935:	inc    ebp
  418936:	sub    al,BYTE PTR [ecx+ebp*2+0x55]
  41893a:	aaa    
  41893b:	stos   DWORD PTR es:[edi],eax
  41893c:	xchg   BYTE PTR [edx],dl
  41893e:	mov    ds:0x5eb14a8b,al
  418943:	icebp  
  418944:	xlat   BYTE PTR ds:[ebx]
  418945:	(bad)  
  418946:	jmp    0x418920
  418948:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41894a:	mov    WORD PTR [esp+edx*8-0x1b],ds
  41894e:	pop    es
  41894f:	cli    
  418950:	gs aas 
  418952:	cs push cs
  418954:	jae    0x418920
  418956:	sti    
  418957:	inc    ecx
  418958:	stc    
  418959:	mov    BYTE PTR [ebp-0x63],dl
  41895c:	cmp    al,0x20
  41895e:	xor    DWORD PTR [eax+0x38],0x807b70f5
  418965:	mov    ebx,0xe7c9db34
  41896a:	xchg   esi,eax
  41896b:	(bad)  
  41896d:	add    BYTE PTR [esi*2-0x11c6d10d],al
  418974:	sbb    al,BYTE PTR [edx]
  418976:	fs jl  0x41898e
  418979:	push   cs
  41897a:	sbb    al,0x9c
  41897c:	gs out 0xc2,al
  41897f:	dec    esp
  418980:	push   ebx
  418981:	jne    0x418951
  418983:	repz jmp 0x418921
  418986:	mov    ebx,0x9111144b
  41898b:	sbb    eax,0x4b118d3c
  418990:	arpl   WORD PTR [esi-0x48],ax
  418993:	mov    eax,0x8643d476
  418998:	or     eax,0x7439b54e
  41899d:	jnp    0x4189d9
  41899f:	or     dh,BYTE PTR [ebx-0x65cb0095]
  4189a5:	enter  0xbe07,0x79
  4189a9:	push   ecx
  4189aa:	fild   DWORD PTR [ecx-0x4ad0df1a]
  4189b0:	retf   0xc2fe
  4189b3:	repnz mov eax,0x5c2b2237
  4189b9:	(bad)  
  4189bb:	clc    
  4189bc:	push   esi
  4189bd:	mov    cl,0x49
  4189bf:	aad    0x98
  4189c1:	test   al,0x36
  4189c3:	pop    edi
  4189c4:	loopne 0x4189db
  4189c6:	inc    ebp
  4189c7:	pop    edx
  4189c8:	xchg   edi,eax
  4189c9:	in     eax,dx
  4189ca:	jg     0x418958
  4189cc:	aad    0xd2
  4189ce:	pop    ds
  4189cf:	out    dx,al
  4189d0:	stos   DWORD PTR es:[edi],eax
  4189d1:	jmp    0x18ee:0x4f2849b5
  4189d8:	jg     0x418969
  4189da:	lods   eax,DWORD PTR ds:[esi]
  4189db:	cmc    
  4189dc:	sbb    al,bl
  4189de:	inc    DWORD PTR [eax]
  4189e0:	jnp    0x41898b
  4189e2:	clc    
  4189e3:	call   0xaf55:0x80a4c400
  4189ea:	(bad)  
  4189eb:	push   ecx
  4189ec:	xor    dh,bh
  4189ee:	add    eax,DWORD PTR [eax-0x5c143cfc]
  4189f4:	(bad)  
  4189f5:	sbb    edx,ecx
  4189f7:	es jno 0x418a64
  4189fa:	test   eax,0xb04d6bd1
  4189ff:	(bad)  
  418a00:	fnstsw WORD PTR [edi-0x1]
  418a03:	scas   eax,DWORD PTR es:[edi]
  418a04:	mov    ch,dl
  418a06:	pop    ebp
  418a07:	or     cl,BYTE PTR [esi-0x78]
  418a0a:	fmul   QWORD PTR [ebp+0x78]
  418a0d:	add    eax,0x246b43dc
  418a12:	iret   
  418a13:	push   edx
  418a14:	or     BYTE PTR [edi-0x6b],bl
  418a17:	sub    al,0xae
  418a19:	in     al,dx
  418a1a:	clc    
  418a1b:	sub    al,BYTE PTR [edx+0x30]
  418a1e:	les    eax,FWORD PTR [esi-0x4f]
  418a21:	inc    eax
  418a22:	mov    ebp,0xb9fb6f7b
  418a27:	add    esp,esi
  418a29:	and    eax,ecx
  418a2b:	jae    0x418a3f
  418a2d:	loop   0x4189f0
  418a2f:	adc    BYTE PTR [esi+0x68],bh
  418a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a33:	fnsave [ecx]
  418a35:	cmp    eax,0xed0b1c71
  418a3a:	jbe    0x4189ff
  418a3c:	es jb  0x418ab4
  418a3f:	stc    
  418a40:	xor    bh,BYTE PTR [edi+0x1b34f6a4]
  418a46:	jge    0x418a03
  418a48:	add    al,0x2e
  418a4a:	and    DWORD PTR [ebx-0x240c3969],ebx
  418a50:	jnp    0x418a6e
  418a52:	test   BYTE PTR [ecx+edx*8+0x2ebc674a],bl
  418a59:	add    al,0x5
  418a5b:	adc    eax,DWORD PTR gs:[esp+edx*4]
  418a5f:	inc    edx
  418a60:	xlat   BYTE PTR ds:[ebx]
  418a61:	adc    ebp,ebx
  418a63:	mov    bl,0xa0
  418a65:	addr16 (bad) 
  418a67:	pop    ss
  418a68:	push   ss
  418a69:	int3   
  418a6a:	loope  0x418aca
  418a6c:	dec    ebx
  418a6d:	sbb    eax,0xd9a47a21
  418a72:	ja     0x418aa2
  418a74:	sbb    al,0x29
  418a76:	test   DWORD PTR [eax+0x68],0x22dc4237
  418a7d:	(bad)  
  418a7e:	mov    eax,0x2499d6b6
  418a83:	in     al,dx
  418a84:	push   esp
  418a85:	inc    esp
  418a86:	mov    bh,dl
  418a88:	inc    eax
  418a89:	and    ebp,edx
  418a8b:	xor    dl,BYTE PTR [edx]
  418a8d:	xor    DWORD PTR [edi+0x5128510],esi
  418a93:	call   0x9f96:0x547ca5f2
  418a9a:	adc    al,0x9
  418a9c:	add    al,bl
  418a9e:	shl    ebx,0xf8
  418aa1:	push   edi
  418aa2:	dec    ecx
  418aa3:	sbb    BYTE PTR [edi],0xa6
  418aa6:	(bad)  
  418aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aa8:	and    dh,BYTE PTR [esp-0x7e03f656]
  418aaf:	js     0x418ab9
  418ab1:	mov    eax,ds:0x3bb7ecc4
  418ab6:	add    BYTE PTR [ebp-0x4998bfa4],ah
  418abc:	mov    WORD PTR [ecx],gs
  418abe:	outs   dx,DWORD PTR ds:[esi]
  418abf:	(bad)  
  418ac1:	push   ss
  418ac2:	test   BYTE PTR [ecx+edi*4+0x73a2f213],al
  418ac9:	cdq    
  418aca:	div    BYTE PTR ds:0xd44f3cfb
  418ad0:	stos   BYTE PTR es:[edi],al
  418ad1:	sbb    al,0x6b
  418ad3:	mov    BYTE PTR [ebx-0x15],0x26
  418ad7:	sbb    DWORD PTR [eax+esi*8-0x1eabd0e1],edi
  418ade:	or     dh,BYTE PTR [ebp-0x751d647c]
  418ae4:	clc    
  418ae5:	imul   edx,ebp,0x5f
  418ae8:	jne    0x418aad
  418aea:	sbb    al,0xd8
  418aec:	mov    al,0xe7
  418aee:	ret    0xfa7b
  418af1:	scas   eax,DWORD PTR es:[edi]
  418af2:	mov    esi,0xaed39e24
  418af7:	and    edi,edx
  418af9:	jge    0x418b6a
  418afb:	sub    ebx,DWORD PTR [ebx]
  418afd:	hlt    
  418afe:	int3   
  418aff:	mov    al,ds:0x254fffa4
  418b04:	push   eax
  418b05:	xchg   edx,eax
  418b06:	pusha  
  418b07:	pop    bx
  418b09:	sub    DWORD PTR [esi-0x1a27e2fc],0xffffff9a
  418b10:	inc    esi
  418b11:	push   esi
  418b12:	cs jno 0x418b2e
  418b15:	adc    ecx,eax
  418b17:	loope  0x418b89
  418b19:	mov    ebx,0x9a6c3818
  418b1e:	inc    DWORD PTR [edx-0x78]
  418b21:	inc    ebp
  418b22:	cmp    DWORD PTR ds:0x92686a84,edx
  418b28:	sar    BYTE PTR [esi+edx*2],cl
  418b2b:	inc    ebx
  418b2c:	shl    DWORD PTR [eax-0x3b],1
  418b2f:	cmp    edx,DWORD PTR [ecx+0x7223216d]
  418b35:	sti    
  418b36:	push   eax
  418b37:	adc    DWORD PTR gs:[edi-0x14],esi
  418b3b:	sub    eax,0xefe3838b
  418b40:	into   
  418b41:	jle    0x418ba7
  418b43:	jmp    0x398c:0xcdd886e1
  418b4a:	in     eax,dx
  418b4b:	aas    
  418b4c:	repz inc edi
  418b4e:	mov    bl,0x23
  418b50:	push   ecx
  418b51:	push   0x831905d3
  418b56:	scas   eax,DWORD PTR es:[edi]
  418b57:	sbb    al,0x9
  418b59:	shl    DWORD PTR [ebx+ebp*2-0x4628d9ab],0xb
  418b61:	pop    ecx
  418b62:	add    DWORD PTR [eax-0xb],esi
  418b65:	int    0x25
  418b67:	or     DWORD PTR [eax],esp
  418b69:	ins    BYTE PTR es:[edi],dx
  418b6a:	cmp    BYTE PTR [edx-0x8417ca],ah
  418b70:	dec    edi
  418b71:	jae    0x418b73
  418b73:	mov    ds:0x999134ad,eax
  418b78:	push   eax
  418b79:	arpl   WORD PTR ss:[eax+0x3c4ceed],ax
  418b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b81:	jb     0x418b50
  418b83:	xor    eax,0x8eaf7025
  418b88:	sub    dh,BYTE PTR [eax]
  418b8a:	inc    edx
  418b8b:	push   edi
  418b8c:	xchg   DWORD PTR [ebx],edi
  418b8e:	xchg   ebp,eax
  418b8f:	adc    bh,al
  418b91:	adc    ah,ch
  418b93:	sub    esp,DWORD PTR [ebp-0x3c4e27d6]
  418b99:	mov    al,ds:0xee280c3d
  418b9e:	cwde   
  418b9f:	nop
  418ba0:	aaa    
  418ba1:	jae    0x418bbf
  418ba3:	cs jmp 0xb529:0x6b27f5b5
  418bab:	in     al,0xb
  418bad:	sub    BYTE PTR [ecx-0x5af9aaea],bh
  418bb3:	aas    
  418bb4:	add    dh,ch
  418bb6:	cvtdq2ps xmm3,XMMWORD PTR [ecx-0x6586beae]
  418bbd:	cdq    
  418bbe:	aaa    
  418bbf:	inc    edx
  418bc0:	mov    ds:0x94764cf1,al
  418bc5:	mov    dl,cl
  418bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bc8:	enter  0x9f6f,0x33
  418bcc:	mov    cl,0x8d
  418bce:	out    dx,al
  418bcf:	xor    al,0x31
  418bd1:	stc    
  418bd2:	call   0x583037ce
  418bd7:	aad    0xa
  418bd9:	sbb    BYTE PTR [ebx-0x799ee6d5],dh
  418bdf:	enter  0xc522,0xd7
  418be3:	mov    ecx,0xb3ac573e
  418be8:	aaa    
  418be9:	sti    
  418bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418beb:	ins    BYTE PTR es:[edi],dx
  418bec:	ins    DWORD PTR es:[edi],dx
  418bed:	(bad)  
  418bee:	mov    bl,ah
  418bf0:	aaa    
  418bf1:	shr    BYTE PTR [esi+ebx*2],cl
  418bf4:	out    dx,eax
  418bf5:	dec    edx
  418bf6:	jo     0x418be6
  418bf8:	or     al,0xd3
  418bfa:	(bad)
  418bfd:	or     al,0xb4
  418bff:	push   0x5d521c1f
  418c04:	jo     0x418bbe
  418c06:	out    0xf4,eax
  418c08:	dec    esp
  418c09:	lods   al,BYTE PTR ds:[esi]
  418c0a:	inc    BYTE PTR [ebp+0x72fa7324]
  418c10:	cwde   
  418c11:	push   0xffffffc3
  418c13:	cli    
  418c14:	aad    0xdb
  418c16:	ret    
  418c17:	xchg   di,ax
  418c19:	pop    edx
  418c1a:	pop    di
  418c1c:	lods   al,BYTE PTR ds:[esi]
  418c1d:	xchg   edi,eax
  418c1e:	push   cs
  418c1f:	fldcw  WORD PTR [eax]
  418c21:	fxch   st(7)
  418c23:	jno    0x418c32
  418c25:	push   0x3f6d6935
  418c2a:	pop    es
  418c2b:	fwait
  418c2c:	cdq    
  418c2d:	std    
  418c2e:	stos   BYTE PTR es:[edi],al
  418c2f:	mov    BYTE PTR [eax+eiz*2],bl
  418c32:	enter  0x385c,0xf6
  418c36:	sar    DWORD PTR [edx-0x51ba24eb],0xe0
  418c3d:	stos   BYTE PTR es:[edi],al
  418c3e:	xchg   esp,eax
  418c3f:	sub    al,0x32
  418c41:	popa   
  418c42:	pop    ds
  418c43:	inc    eax
  418c44:	mov    al,ds:0xb75c91a4
  418c49:	sar    DWORD PTR [eax+edx*2+0x69],1
  418c4d:	jge    0x418c08
  418c4f:	ret    0x710b
  418c52:	xchg   ebp,eax
  418c53:	dec    esp
  418c54:	and    al,0x4d
  418c56:	cmc    
  418c57:	jae    0x418c74
  418c59:	outs   dx,DWORD PTR ds:[esi]
  418c5a:	push   0xffffffa6
  418c5c:	enter  0xb92a,0x9f
  418c60:	jbe    0x418c37
  418c62:	out    dx,eax
  418c63:	out    0x73,eax
  418c65:	pop    eax
  418c66:	pop    es
  418c67:	ror    DWORD PTR [esi-0x1c],0x18
  418c6b:	push   cs
  418c6c:	jae    0x418c12
  418c6e:	push   ss
  418c6f:	sub    BYTE PTR [edi-0x67fca81c],ch
  418c75:	lods   eax,DWORD PTR ds:[esi]
  418c76:	inc    ecx
  418c77:	bound  ecx,QWORD PTR [ebx+eiz*4-0x14fae5a4]
  418c7e:	mov    BYTE PTR [esi],bl
  418c80:	push   es
  418c81:	mov    ebx,cs
  418c83:	sub    al,0xbe
  418c85:	(bad)  
  418c86:	cmc    
  418c87:	mov    bh,0x8
  418c89:	pop    ss
  418c8a:	clc    
  418c8b:	add    edx,esi
  418c8d:	and    eax,0x46a2aad
  418c92:	xchg   ebx,eax
  418c93:	fwait
  418c94:	xchg   ebp,eax
  418c95:	arpl   WORD PTR [ebx+0x25],bx
  418c98:	jmp    0x418d0b
  418c9a:	pop    esp
  418c9b:	jns    0x418d08
  418c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c9e:	mov    esi,0x77323379
  418ca3:	popf   
  418ca4:	adc    bl,ch
  418ca6:	add    eax,0xb2500e79
  418cab:	push   esi
  418cac:	out    0xdd,eax
  418cae:	lds    ebx,FWORD PTR [edx]
  418cb0:	ret    0x94e5
  418cb3:	add    BYTE PTR [ebx],bl
  418cb5:	(bad)  
  418cb6:	ret    0x2f44
  418cb9:	ins    BYTE PTR es:[edi],dx
  418cba:	outs   dx,BYTE PTR ds:[esi]
  418cbb:	xlat   BYTE PTR ds:[ebx]
  418cbc:	inc    eax
  418cbd:	push   ss
  418cbe:	fwait
  418cbf:	loope  0x418d26
  418cc1:	arpl   WORD PTR [ebp-0x120256ac],di
  418cc7:	and    eax,0xbcbc5781
  418ccc:	sbb    al,0x42
  418cce:	mov    eax,ds:0x424ef342
  418cd3:	test   ebp,esi
  418cd5:	xchg   DWORD PTR [edx+0x55a51bee],eax
  418cdb:	loope  0x418d0e
  418cdd:	xchg   esi,eax
  418cde:	fst    QWORD PTR [ebp+0x5ae1c522]
  418ce4:	ror    dl,0x4
  418ce7:	adc    dl,0x90
  418cea:	aam    0xbb
  418cec:	inc    edi
  418ced:	aam    0x3a
  418cef:	mov    cl,0x18
  418cf1:	inc    esp
  418cf2:	mov    WORD PTR [ebx-0x65],?
  418cf5:	adc    al,0xf5
  418cf7:	sti    
  418cf8:	call   0xf7bfad29
  418cfd:	lds    edx,FWORD PTR [esi-0x771a3df2]
  418d03:	mov    ch,0x8c
  418d05:	sahf   
  418d06:	xchg   esi,eax
  418d07:	jmp    0x418d45
  418d09:	and    bl,dh
  418d0b:	lahf   
  418d0c:	sub    eax,0xe31b0569
  418d11:	push   edx
  418d12:	cs or  esi,ebx
  418d15:	jp     0x418cf6
  418d17:	add    al,0xd6
  418d19:	or     BYTE PTR [ebx+0x22],al
  418d1c:	repnz lds ecx,FWORD PTR [ebp+0x62]
  418d20:	push   ss
  418d21:	push   edi
  418d22:	push   esp
  418d23:	or     ah,BYTE PTR [ecx+0x27]
  418d26:	xor    DWORD PTR [esi-0x37],0x6fbb1000
  418d2d:	xor    BYTE PTR [ebx],al
  418d2f:	data16 cmp BYTE PTR [edi],ah
  418d32:	ret    0x2656
  418d35:	xor    BYTE PTR [ecx],ch
  418d37:	cmp    eax,edx
  418d39:	pop    esi
  418d3a:	(bad)  
  418d3b:	mov    ebp,0x74890490
  418d40:	lea    esp,[esi]
  418d42:	div    bh
  418d44:	lahf   
  418d45:	shl    BYTE PTR [edi+ecx*1-0x2d104cb5],1
  418d4c:	push   ecx
  418d4d:	inc    esi
  418d4e:	push   0xc0ff8c4b
  418d53:	jecxz  0x418d5d
  418d55:	ss in  al,0xb2
  418d58:	cmp    eax,0x5eddb719
  418d5d:	jmp    0xdf20:0xa08b6a9
  418d64:	jne    0x418de1
  418d66:	jl     0x418cee
  418d68:	stc    
  418d69:	inc    edx
  418d6a:	jno    0x418d18
  418d6c:	sbb    eax,0xb4d51b6a
  418d71:	and    eax,0xdf892d5e
  418d76:	shl    BYTE PTR [edi-0x56],1
  418d79:	ins    DWORD PTR es:[edi],dx
  418d7a:	inc    DWORD PTR [esi-0x1d5555f9]
  418d80:	outs   dx,DWORD PTR ds:[esi]
  418d81:	mov    ?,WORD PTR [eax+ebp*2-0x47]
  418d85:	inc    ebp
  418d86:	or     BYTE PTR [esi],dh
  418d88:	cli    
  418d89:	clc    
  418d8a:	inc    eax
  418d8b:	aam    0x4e
  418d8d:	mov    edi,0xdfd02741
  418d92:	mov    dl,0x65
  418d94:	fcomp  QWORD PTR [ebp-0x37]
  418d97:	mov    BYTE PTR [eax-0x80],dl
  418d9a:	je     0x418d26
  418d9c:	xor    DWORD PTR [edx+edi*4-0x744aff92],esp
  418da3:	mov    BYTE PTR [ecx],cl
  418da5:	and    al,0x57
  418da7:	repnz or DWORD PTR ds:0xcc8e2224,edx
  418dae:	iret   
  418daf:	dec    eax
  418db0:	inc    edx
  418db1:	xchg   ebp,eax
  418db2:	cmp    edi,esp
  418db4:	xlat   BYTE PTR ds:[ebx]
  418db5:	jb     0x418d8c
  418db7:	lds    edx,FWORD PTR ds:0x505af6a
  418dbd:	push   esp
  418dbe:	test   ebp,ecx
  418dc0:	jno    0x418d4a
  418dc2:	mov    ds,WORD PTR [ecx]
  418dc4:	pushf  
  418dc5:	neg    BYTE PTR [ecx+0x558cc17a]
  418dcb:	shl    BYTE PTR [ebp-0x5378f16a],0x4d
  418dd2:	aad    0x5
  418dd4:	pop    ecx
  418dd5:	pusha  
  418dd6:	mov    bh,0x67
  418dd8:	jmp    DWORD PTR gs:[edx+0x19]
  418ddc:	pop    ebp
  418ddd:	add    BYTE PTR [eax],al
  418ddf:	add    BYTE PTR [eax],al
  418de1:	add    BYTE PTR [edx-0x103695a9],dh
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0x68937863
  418df2:	jmp    0x4:0xf300010a
  418df9:	add    BYTE PTR [ecx+0x62],ch
  418dfc:	iret   
  418dfd:	or     DWORD PTR [ecx-0x7da3c50e],ebp
  418e03:	pop    ecx
  418e04:	retf   0xf41f
  418e07:	dec    ebx
  418e08:	nop
  418e09:	mov    al,0x4b
  418e0b:	lock push 0xfffffff9
  418e0e:	jg     0x418e52
  418e10:	sub    edx,ecx
  418e12:	sti    
  418e13:	mov    eax,cs:0x2d6546cb
  418e19:	pusha  
  418e1a:	imul   eax,DWORD PTR [esi+0x7c],0x50af7920
  418e21:	fld    QWORD PTR [ecx-0x9e8a6d1]
  418e27:	cmp    eax,0x6dc677e8
  418e2c:	jmp    0x418dfb
  418e2e:	sbb    eax,0xe4d75695
  418e33:	and    ch,dh
  418e35:	outs   dx,DWORD PTR ds:[esi]
  418e36:	pop    ebp
  418e37:	add    eax,DWORD PTR [ebx+esi*2+0x646ebf98]
  418e3e:	jo     0x418e7b
  418e40:	dec    ecx
  418e41:	(bad)  
  418e42:	xchg   esp,eax
  418e43:	iret   
  418e44:	cld    
  418e45:	xor    al,BYTE PTR [edi+edi*2]
  418e48:	add    eax,0x654489ca
  418e4d:	add    bh,BYTE PTR [edi+0x1605de7d]
  418e53:	test   eax,0xc5234e19
  418e58:	mov    edx,0xc5c82fad
  418e5d:	aas    
  418e5e:	test   BYTE PTR [ebp-0x74821517],bh
  418e64:	icebp  
  418e65:	call   0x858b:0xba45ca85
  418e6c:	xchg   esp,eax
  418e6d:	sbb    bh,BYTE PTR [esi+0x47]
  418e70:	dec    ebp
  418e71:	jnp    0x418e34
  418e73:	add    DWORD PTR [ebx],edi
  418e75:	and    BYTE PTR [edx-0x2e5aa1a0],ch
  418e7b:	ja     0x418ef3
  418e7d:	icebp  
  418e7e:	rol    dh,0x74
  418e81:	loop   0x418ec6
  418e83:	hlt    
  418e84:	inc    ebp
  418e85:	cmc    
  418e86:	adc    DWORD PTR [ebx-0x5b94065f],0x15
  418e8d:	cwde   
  418e8e:	out    0x4d,al
  418e90:	xchg   edi,edi
  418e92:	outs   dx,DWORD PTR ds:[esi]
  418e93:	add    ah,BYTE PTR [ecx]
  418e95:	mov    ds:0xaa037d1,al
  418e9a:	call   0xb01bcb89
  418e9f:	je     0x418f0f
  418ea1:	(bad)  
  418ea2:	call   0xb03ac6c7
  418ea7:	aas    
  418ea8:	mov    cl,0x1
  418eaa:	scas   al,BYTE PTR es:[edi]
  418eab:	pop    ecx
  418eac:	in     eax,0x38
  418eae:	sbb    DWORD PTR [edx],ebp
  418eb0:	loopne 0x418e7a
  418eb2:	fucom  st(5)
  418eb4:	arpl   WORD PTR [eax],si
  418eb6:	popa   
  418eb7:	repz jno 0x418e83
  418eba:	out    0x4c,eax
  418ebc:	cmp    eax,0x8bbd4cbe
  418ec1:	inc    eax
  418ec2:	xchg   DWORD PTR [ecx+ebp*2-0x69],eax
  418ec6:	ins    BYTE PTR es:[edi],dx
  418ec7:	std    
  418ec8:	dec    eax
  418ec9:	cdq    
  418eca:	clc    
  418ecb:	stos   DWORD PTR es:[di],eax
  418ecd:	cld    
  418ece:	call   0xcd27aa5a
  418ed3:	jmp    0xb82a:0xd29bf1fa
  418eda:	scas   eax,DWORD PTR es:[edi]
  418edb:	push   ebx
  418edc:	pusha  
  418edd:	cmp    al,BYTE PTR [edx-0x7]
  418ee0:	ja     0x418eef
  418ee2:	pop    ebp
  418ee3:	pop    ebx
  418ee4:	fmul   st,st(4)
  418ee6:	or     ah,BYTE PTR [ebp+0x56]
  418ee9:	sbb    al,0xc4
  418eeb:	sbb    ch,BYTE PTR [edx-0x4bb3de91]
  418ef1:	cli    
  418ef2:	cmp    eax,0x87068675
  418ef7:	xor    edi,edx
  418ef9:	imul   DWORD PTR [ebx-0x25126816]
  418eff:	inc    esi
  418f00:	push   0xffffff8c
  418f02:	cmc    
  418f03:	inc    ebx
  418f04:	loope  0x418f16
  418f06:	std    
  418f07:	test   DWORD PTR ds:0x99ffdfdf,eax
  418f0d:	bound  edx,QWORD PTR ds:0xa8d4ef7f
  418f13:	ins    BYTE PTR es:[edi],dx
  418f14:	jmp    0x6376:0xe48f3d70
  418f1b:	xchg   ecx,eax
  418f1c:	pop    ds
  418f1d:	fs addr16 or al,0x41
  418f21:	or     al,0xbe
  418f23:	cdq    
  418f24:	push   edx
  418f25:	es pushf 
  418f27:	add    ah,bh
  418f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f2a:	lock icebp 
  418f2c:	jne    0x418ee1
  418f2e:	push   ebp
  418f2f:	sbb    bl,BYTE PTR [ebp+0x13796917]
  418f35:	adc    BYTE PTR [eax+0x75b9f45d],bh
  418f3b:	test   al,0xa4
  418f3d:	xchg   esi,eax
  418f3e:	sbb    DWORD PTR [esi+0x3e],edi
  418f41:	sbb    eax,0xf41fc249
  418f46:	pop    edi
  418f47:	xchg   esi,eax
  418f48:	jns    0x418eef
  418f4a:	pop    ds
  418f4b:	iret   
  418f4c:	fst    DWORD PTR [ebp+0x66638ac9]
  418f52:	aam    0x8c
  418f54:	dec    edx
  418f55:	and    DWORD PTR [edi],ecx
  418f57:	into   
  418f58:	fisubr WORD PTR [ecx+0x45]
  418f5b:	dec    ecx
  418f5c:	or     al,0xba
  418f5e:	lea    ecx,[edx]
  418f60:	inc    esi
  418f61:	je     0x418f68
  418f63:	shl    BYTE PTR [ebx+ecx*1],1
  418f66:	test   BYTE PTR ds:0x1e90efda,dl
  418f6c:	xchg   esi,eax
  418f6d:	sbb    al,0xa4
  418f6f:	out    0xa0,eax
  418f71:	mov    eax,DWORD PTR [eax]
  418f73:	jne    0x418f6d
  418f75:	jg     0x418f42
  418f77:	sub    al,0x52
  418f79:	cmp    BYTE PTR [ebx-0x29],dl
  418f7c:	add    al,0x4f
  418f7e:	fcom   QWORD PTR [ecx]
  418f80:	cdq    
  418f81:	(bad)  
  418f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f83:	aas    
  418f84:	cmove  eax,DWORD PTR [ebx]
  418f87:	(bad)  
  418f88:	es retf 0x8cd3
  418f8c:	sub    DWORD PTR [edi],eax
  418f8e:	sub    al,0x26
  418f90:	cmp    esp,DWORD PTR [esi+0x5d]
  418f93:	mov    ds:0xc3740b87,eax
  418f98:	or     BYTE PTR [ecx-0x6f3c551],bh
  418f9e:	idiv   edi
  418fa0:	jb     0x419021
  418fa2:	xchg   DWORD PTR [edx],esp
  418fa4:	cmc    
  418fa5:	test   eax,0x23f2ac40
  418faa:	and    eax,0x9196a979
  418faf:	sbb    eax,0x55d7fe9f
  418fb4:	outs   dx,BYTE PTR ds:[esi]
  418fb5:	cmp    al,0xb6
  418fb7:	rol    BYTE PTR [edi+0x6491f255],cl
  418fbd:	cmp    al,BYTE PTR [ebx+0x2f]
  418fc0:	jecxz  0x418f8c
  418fc2:	test   al,0x2f
  418fc4:	push   ds
  418fc5:	repz das 
  418fc7:	dec    eax
  418fc8:	retf   0x59b9
  418fcb:	or     ah,BYTE PTR [eax-0x7ebf248b]
  418fd1:	pop    edi
  418fd2:	fs and al,0x83
  418fd5:	push   ss
  418fd6:	mov    bh,0x1c
  418fd8:	dec    esi
  418fd9:	call   0x6676:0xadfa114d
  418fe0:	mov    DWORD PTR [ebp-0x2f],ebx
  418fe3:	in     al,dx
  418fe4:	push   edx
  418fe5:	inc    esp
  418fe6:	jmp    0x3844:0x36e2229
  418fed:	idiv   ch
  418fef:	test   eax,0x8351e564
  418ff4:	sbb    DWORD PTR [ebp+eiz*1+0x75],ecx
  418ff8:	dec    edi
  418ff9:	aad    0x95
  418ffb:	outs   dx,BYTE PTR ds:[esi]
  418ffc:	push   0xffffffd4
  418ffe:	test   BYTE PTR [ebx+0x48],ah
  419001:	fisubr DWORD PTR [edi]
  419003:	inc    ebx
  419004:	loope  0x418f8a
  419006:	(bad)  
  419007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419008:	lock pop ecx
  41900a:	mov    esp,0x800ad2d9
  41900f:	rol    BYTE PTR [ecx+0x3e18a5a2],0xd8
  419016:	add    eax,0x916ad6ed
  41901b:	imul   ecx,DWORD PTR [esi-0x7f],0xffffffbe
  41901f:	xchg   esi,eax
  419020:	fcom   DWORD PTR [esi-0x57]
  419023:	push   edx
  419024:	and    bl,dh
  419026:	jg     0x418fdd
  419028:	and    ebx,esp
  41902a:	mov    al,0x9c
  41902c:	test   bh,bh
  41902e:	mov    ch,0x37
  419030:	ret    
  419031:	cld    
  419032:	je     0x41900d
  419034:	ret    
  419035:	inc    ebx
  419036:	cs icebp 
  419038:	mov    bh,0xa6
  41903a:	fs mov eax,0x986845b9
  419040:	stos   DWORD PTR es:[edi],eax
  419041:	dec    ebp
  419042:	cwde   
  419043:	neg    BYTE PTR [ebx+0x21]
  419046:	dec    ecx
  419047:	cmp    ch,cl
  419049:	push   ss
  41904a:	mov    DWORD PTR [edi],edx
  41904c:	xor    ah,bl
  41904e:	fisttp WORD PTR [edi+0x3]
  419051:	or     BYTE PTR [ecx],dh
  419053:	in     al,0x2e
  419055:	xor    BYTE PTR [edx+0x69127fab],bl
  41905b:	outs   dx,DWORD PTR ds:[esi]
  41905c:	in     al,0x2c
  41905e:	js     0x419096
  419060:	jp     0x418fe2
  419062:	ss (bad) ds:[ebx+0x4e]
  419067:	xor    edx,esp
  419069:	pushf  
  41906a:	jle    0x419066
  41906c:	add    DWORD PTR [ecx-0x64],esi
  41906f:	mov    ds:0x861770a4,al
  419074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419075:	pop    ecx
  419076:	mov    ss,WORD PTR [esi+0x3c]
  419079:	adc    al,0x4f
  41907b:	cmp    DWORD PTR ds:0x76ec8742,esi
  419081:	lahf   
  419082:	loop   0x4190d7
  419084:	add    eax,0x56c5d2c4
  419089:	retf   
  41908a:	mov    edx,0x4f47e024
  41908f:	mov    al,0xf1
  419091:	push   es
  419092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419093:	call   0x60fd:0xfdd705bd
  41909a:	(bad)
  41909d:	into   
  41909e:	cmp    bl,dh
  4190a0:	or     ebp,DWORD PTR [edi]
  4190a2:	cmp    al,0x6c
  4190a4:	test   BYTE PTR [edx],cl
  4190a6:	rol    DWORD PTR [eax-0x7c],cl
  4190a9:	ds in  al,dx
  4190ab:	inc    esi
  4190ac:	or     DWORD PTR [esi],ebx
  4190ae:	aad    0x1c
  4190b0:	cwde   
  4190b1:	xor    eax,0xcb831d20
  4190b6:	pop    ebx
  4190b7:	push   ebp
  4190b8:	xor    eax,0xbfd7f460
  4190bd:	stos   DWORD PTR es:[edi],eax
  4190be:	sar    BYTE PTR [esi-0x27],1
  4190c1:	adc    BYTE PTR es:[ebx-0x5e4dfbb],0x68
  4190c9:	inc    esi
  4190ca:	pop    ecx
  4190cb:	or     eax,0x1c14de8a
  4190d0:	call   0x2be2:0xa906405d
  4190d7:	mov    ebx,0x715d84ba
  4190dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190dd:	mov    al,0x44
  4190df:	and    ah,ch
  4190e1:	push   edx
  4190e2:	xchg   ebp,eax
  4190e3:	into   
  4190e4:	mov    al,0x81
  4190e6:	xor    eax,DWORD PTR [esi+0x4c]
  4190e9:	ror    BYTE PTR [esi-0x62],0xd8
  4190ed:	xor    ch,BYTE PTR [edi]
  4190ef:	enter  0x3e21,0xee
  4190f3:	fcomp  QWORD PTR [edx+ecx*8-0x4c]
  4190f7:	ds pop eax
  4190f9:	dec    ecx
  4190fa:	popf   
  4190fb:	mov    esp,0xd7f3acf9
  419100:	sbb    al,0xd2
  419102:	mov    edx,0x913db06c
  419107:	jb     0x4190b5
  419109:	xlat   BYTE PTR ds:[ebx]
  41910a:	jge    0x4190db
  41910c:	lock pop edi
  41910e:	retf   
  41910f:	test   BYTE PTR [edx-0x57],bl
  419112:	cmp    ebp,DWORD PTR [ebx+edx*4]
  419115:	mov    bl,0xb0
  419117:	mov    bh,0x9b
  419119:	pushf  
  41911a:	mov    bh,0xd3
  41911c:	sbb    ah,BYTE PTR [ebx-0x4b169ccc]
  419122:	or     bh,BYTE PTR ds:0x3f9eaa9b
  419128:	sahf   
  419129:	push   edi
  41912a:	or     eax,0x884c7236
  41912f:	in     eax,dx
  419130:	in     al,dx
  419131:	fcmovu st,st(7)
  419133:	fisttp WORD PTR [eax+edx*8-0x26]
  419137:	loope  0x4190ba
  419139:	cmp    BYTE PTR [edx-0x676f1e1],dh
  41913f:	push   es
  419140:	push   es
  419141:	aas    
  419142:	jb     0x4190ec
  419144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419145:	and    al,0x7d
  419147:	mov    esp,0xc25b7db3
  41914c:	outs   dx,BYTE PTR ds:[esi]
  41914d:	or     al,0xde
  41914f:	imul   ebp,DWORD PTR [ecx+0x57757004],0xf40ff2df
  419159:	jecxz  0x4191c1
  41915b:	push   ecx
  41915c:	jp     0x41915d
  41915e:	cli    
  41915f:	outs   dx,DWORD PTR ds:[esi]
  419160:	fdivr  QWORD PTR [esi+0x38]
  419163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419164:	in     eax,0x8a
  419166:	pop    eax
  419167:	xlat   BYTE PTR ds:[ebx]
  419168:	std    
  419169:	into   
  41916a:	push   ebp
  41916b:	push   0x94138654
  419170:	iret   
  419171:	std    
  419172:	in     al,0x71
  419174:	ds xor eax,0x4e83a6f6
  41917a:	addr16 sti 
  41917c:	sti    
  41917d:	add    ebp,DWORD PTR [ebp-0x1559c920]
  419183:	mov    cl,0x2
  419185:	and    DWORD PTR [edx-0x34cbee63],eax
  41918b:	add    eax,0x2e6a64f3
  419190:	sub    ch,BYTE PTR [ecx+0xe98a988]
  419196:	sub    cl,BYTE PTR fs:[esi+0x444a1661]
  41919d:	cs fsubrp st(7),st
  4191a0:	xchg   esp,eax
  4191a1:	cld    
  4191a2:	stos   DWORD PTR es:[edi],eax
  4191a3:	fwait
  4191a4:	jle    0x41914d
  4191a6:	pop    esp
  4191a7:	sub    BYTE PTR [esi-0x6b],al
  4191aa:	jmp    0x62da:0x21da135
  4191b1:	xor    BYTE PTR [ebx+ebp*2+0x141a7e3c],dl
  4191b8:	add    BYTE PTR ds:0xe3c0bdf9,cl
  4191be:	outs   dx,DWORD PTR ds:[esi]
  4191bf:	imul   BYTE PTR [ebx+0x51]
  4191c2:	add    al,0x62
  4191c4:	and    DWORD PTR [edi],edx
  4191c6:	sbb    eax,0x506f5d3f
  4191cb:	dec    esi
  4191cc:	jg     0x419190
  4191ce:	fiadd  DWORD PTR [ecx-0x275fcb3c]
  4191d4:	stos   BYTE PTR es:[edi],al
  4191d5:	in     eax,dx
  4191d6:	in     al,0xe4
  4191d8:	mov    al,0xc3
  4191da:	xchg   ecx,eax
  4191db:	into   
  4191dc:	(bad)  
  4191dd:	imul   BYTE PTR [edx]
  4191df:	xchg   esi,eax
  4191e0:	jl     0x419187
  4191e2:	icebp  
  4191e3:	jmp    0x41916a
  4191e5:	fst    DWORD PTR [eax]
  4191e7:	mov    esi,0xd8ef5d58
  4191ec:	xor    BYTE PTR [eax+0xaa2dfe9],cl
  4191f2:	imul   ebp,DWORD PTR [esi],0x192bf8ac
  4191f8:	mov    WORD PTR [edx-0x2],gs
  4191fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191fc:	push   cs
  4191fd:	mov    cl,0xe9
  4191ff:	jmp    0x419267
  419201:	add    BYTE PTR [edi-0xd],cl
  419204:	pop    eax
  419205:	jl     0x4191fe
  419207:	push   edx
  419208:	ss xchg esi,eax
  41920a:	pusha  
  41920b:	dec    ebp
  41920c:	addr16 out dx,eax
  41920e:	pop    ds
  41920f:	test   DWORD PTR [ebp-0x54e47d33],eax
  419215:	sahf   
  419216:	lahf   
  419217:	in     eax,0xd
  419219:	sub    al,BYTE PTR [ebp-0x5dd10510]
  41921f:	mov    edx,DWORD PTR [edi+0xa]
  419222:	aad    0x8e
  419224:	fwait
  419225:	(bad)  
  419227:	imul   edi,DWORD PTR [ebx-0x28],0xffffff97
  41922b:	add    BYTE PTR [esi-0x1c85eedd],bl
  419231:	push   edi
  419232:	push   0xfffffff2
  419234:	inc    esp
  419235:	hlt    
  419236:	dec    DWORD PTR [ecx]
  419238:	ret    
  419239:	nop
  41923a:	ror    BYTE PTR ss:[esp+esi*4],cl
  41923e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41923f:	xchg   ecx,eax
  419240:	sahf   
  419241:	pop    ebx
  419242:	adc    eax,ebx
  419244:	das    
  419245:	pop    esi
  419246:	lods   eax,DWORD PTR ds:[esi]
  419247:	xchg   ebx,eax
  419248:	jb     0x41927f
  41924a:	les    ebx,FWORD PTR [edx]
  41924c:	cs push es
  41924e:	push   ss
  41924f:	repz fisttp WORD PTR [esi]
  419252:	imul   ebp,DWORD PTR [ebx-0x27db3e3f],0xc70da576
  41925c:	pop    esp
  41925d:	jns    0x419247
  41925f:	repz push 0x46eb1100
  419265:	int    0xdd
  419267:	daa    
  419268:	lock (bad) 
  41926a:	xchg   esi,eax
  41926b:	inc    ebp
  41926c:	inc    ebp
  41926d:	mov    ds:0xb78248af,al
  419272:	xchg   edi,eax
  419273:	xor    BYTE PTR [edi],dh
  419275:	fadd   DWORD PTR [edi+0x5]
  419278:	aas    
  419279:	pop    ds
  41927a:	data16 and BYTE PTR ds:0x35a2c375,bh
  419281:	test   eax,0xad4a49f3
  419286:	dec    ecx
  419287:	jne    0x419279
  419289:	stos   BYTE PTR es:[edi],al
  41928a:	pop    esi
  41928b:	xchg   esp,eax
  41928c:	pop    edx
  41928d:	stos   DWORD PTR es:[edi],eax
  41928e:	cmp    al,BYTE PTR [eax+ecx*4+0x4189b5ba]
  419295:	call   DWORD PTR [eax]
  419297:	retf   
  419298:	jae    0x4192f0
  41929a:	inc    edi
  41929b:	sub    eax,0x3d1a5141
  4192a0:	retf   
  4192a1:	pop    edx
  4192a2:	retf   0x1126
  4192a5:	into   
  4192a6:	bound  esp,QWORD PTR [edi-0xde1ed6b]
  4192ac:	mov    ecx,0x31c82691
  4192b1:	dec    edx
  4192b2:	or     BYTE PTR [ecx+ebx*2],cl
  4192b5:	imul   edx,DWORD PTR [edx+0x29cdc508],0xffffffa1
  4192bc:	fld    TBYTE PTR [eax+0x7]
  4192bf:	push   0x29
  4192c1:	xchg   BYTE PTR [edi-0x75],bh
  4192c4:	sbb    DWORD PTR [ebx+0x3a8eee5e],eax
  4192ca:	out    0x57,eax
  4192cc:	arpl   WORD PTR [eax+0x52],ax
  4192cf:	add    eax,0x705c4a17
  4192d4:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4192d6:	mov    edx,0x111d9690
  4192db:	push   ebx
  4192dc:	les    ebx,FWORD PTR [ebx]
  4192de:	jno    0x419315
  4192e0:	xor    DWORD PTR [edi],ebx
  4192e2:	dec    edi
  4192e3:	fnstenv [esi]
  4192e5:	in     al,0x5f
  4192e7:	jecxz  0x4192a8
  4192e9:	adc    dh,BYTE PTR [ebx+ebp*8]
  4192ec:	mov    ebp,0x0
  4192f1:	add    BYTE PTR [ebp+0xe],al
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x96e95d81
  419300:	add    ch,BYTE PTR [edx-0x23]
  419303:	sgdtd  [eax]
  419306:	repz add al,0x0
  419309:	add    BYTE PTR [ecx+0x1a3592c1],ah
  41930f:	mov    DWORD PTR [ebx],ebx
  419311:	pop    edx
  419312:	pop    esp
  419313:	ja     0x419366
  419315:	retf   0x49f7
  419318:	adc    BYTE PTR [ebp+0x72],0x1d
  41931c:	les    edi,FWORD PTR [esi]
  41931e:	out    dx,eax
  41931f:	daa    
  419320:	cmp    al,0x4
  419322:	ss jno 0x4192dc
  419325:	sbb    DWORD PTR [ecx],ebx
  419327:	in     eax,0xf
  419329:	jnp    0x419371
  41932b:	push   cs
  41932c:	xor    al,0xd7
  41932e:	repz mov dl,0x6d
  419331:	mov    bl,0x1d
  419333:	mov    dh,0xf0
  419335:	outs   dx,BYTE PTR ds:[esi]
  419336:	or     BYTE PTR [ecx],bl
  419338:	shr    al,cl
  41933a:	sub    cl,al
  41933c:	xchg   esi,eax
  41933d:	shr    BYTE PTR [ecx],1
  41933f:	mov    ch,0xb0
  419341:	pop    edi
  419342:	and    BYTE PTR [edx],ch
  419344:	xor    eax,0x3a249b98
  419349:	test   al,0x8a
  41934b:	and    bh,al
  41934d:	(bad)  
  41934e:	jae    0x41936e
  419350:	data16 mov ds:0x6e0a0077,al
  419356:	jle    0x41932c
  419358:	imul   ebx,DWORD PTR [ebp+0x7a],0xffffffd7
  41935c:	sbb    edx,ecx
  41935e:	xchg   ecx,eax
  41935f:	test   DWORD PTR ss:[edx-0x14b1dab3],ebp
  419366:	jae    0x41936a
  419368:	ja     0x4192f3
  41936a:	das    
  41936b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41936c:	jnp    0x419390
  41936e:	mov    esi,0x4891de06
  419373:	mov    cl,ch
  419375:	cmp    cl,dh
  419377:	add    eax,0xcd2d16b9
  41937c:	sub    dh,al
  41937e:	dec    ebx
  41937f:	fwait
  419380:	leave  
  419381:	clc    
  419382:	and    edx,esi
  419384:	add    eax,0x1aa232cd
  419389:	push   0xb5ba3a30
  41938e:	popa   
  41938f:	(bad)  
  419390:	mov    ds:0xcabd3afd,eax
  419395:	mov    esp,0x8e393fd9
  41939a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41939b:	in     al,dx
  41939c:	das    
  41939d:	ficomp WORD PTR [edx]
  41939f:	sub    edx,esi
  4193a1:	add    BYTE PTR [edi],bl
  4193a3:	jecxz  0x419412
  4193a5:	gs ss mov ah,0x62
  4193a9:	pusha  
  4193aa:	es jge 0x41934c
  4193ad:	test   BYTE PTR [esi-0x5d57d710],bh
  4193b3:	inc    edx
  4193b4:	call   0x2176:0xfcd85ff8
  4193bb:	cmp    edx,DWORD PTR [edi]
  4193bd:	test   eax,0x27898c7c
  4193c2:	jge    0x419429
  4193c4:	inc    esp
  4193c5:	add    DWORD PTR fs:[ebx-0x3],ebx
  4193c9:	pop    eax
  4193ca:	pop    ds
  4193cb:	push   es
  4193cc:	inc    esp
  4193cd:	push   ebp
  4193ce:	mov    esi,0x59d4f11b
  4193d3:	mov    ebp,0xf584e812
  4193d8:	dec    ecx
  4193d9:	or     dh,al
  4193db:	in     eax,dx
  4193dc:	sbb    BYTE PTR [ebx],ah
  4193de:	popf   
  4193df:	jmp    0xb6291f91
  4193e4:	sbb    bl,BYTE PTR [esi]
  4193e6:	add    cl,BYTE PTR [edi+0xc]
  4193e9:	pop    es
  4193ea:	mov    dl,0xf4
  4193ec:	ret    0x47f0
  4193ef:	in     al,0x2d
  4193f1:	fs shl ecx,0x5a
  4193f5:	cs iret 
  4193f7:	daa    
  4193f8:	out    0x57,eax
  4193fa:	add    al,0x76
  4193fc:	jle    0x419397
  4193fe:	and    BYTE PTR [ebx],ch
  419400:	stos   BYTE PTR es:[edi],al
  419401:	xchg   esp,eax
  419402:	fidiv  DWORD PTR [eax]
  419404:	adc    ch,BYTE PTR [ebp-0x1d]
  419407:	std    
  419408:	gs (bad) 
  41940a:	mov    al,ds:0xd63231ad
  41940f:	out    dx,eax
  419410:	ins    BYTE PTR es:[edi],dx
  419411:	sbb    DWORD PTR ds:0xe04914a5,eax
  419417:	into   
  419418:	cmp    bl,ah
  41941a:	js     0x419429
  41941c:	or     dh,BYTE PTR [ebx]
  41941e:	repnz popf 
  419420:	dec    eax
  419421:	enter  0x67b9,0xce
  419425:	jmp    0xa494:0x9309e596
  41942c:	fsubr  st(5),st
  41942e:	mov    dl,0xe7
  419430:	add    edi,esi
  419432:	push   esp
  419433:	arpl   WORD PTR [edi],si
  419435:	jne    0x4193c3
  419437:	arpl   WORD PTR [edi],bp
  419439:	pop    esp
  41943a:	sti    
  41943b:	cmp    cl,BYTE PTR [eax+0x6e6f1993]
  419441:	retf   0x93f4
  419444:	and    al,0x3f
  419446:	jg     0x4194a3
  419448:	or     esi,DWORD PTR [eax+0x24703c08]
  41944e:	ins    DWORD PTR es:[edi],dx
  41944f:	xor    BYTE PTR [ebx],al
  419451:	out    dx,eax
  419452:	push   ds
  419453:	add    BYTE PTR [edi+0x5d114352],0xdd
  41945a:	mov    cl,0x5a
  41945c:	pop    ecx
  41945d:	add    DWORD PTR ds:0x9b1a65f8,edx
  419463:	or     al,BYTE PTR [edx]
  419465:	(bad)  
  419466:	lods   eax,DWORD PTR ds:[esi]
  419467:	jae    0x4194cc
  419469:	sub    ebx,DWORD PTR [ebp+0x10]
  41946c:	daa    
  41946d:	push   cs
  41946e:	enter  0xef3f,0xc8
  419472:	xor    eax,0x4a71c3ba
  419477:	(bad)  
  419478:	pop    ds
  419479:	lea    ebp,[esi-0x57]
  41947c:	scas   al,BYTE PTR es:[edi]
  41947d:	call   0x16b7:0xe7a20ed9
  419484:	push   esp
  419485:	retf   0xadc9
  419488:	or     al,0xfe
  41948a:	jg     0x41947c
  41948c:	ret    
  41948d:	ds xor esi,ecx
  419490:	jle    0x4194a7
  419492:	arpl   WORD PTR [edx],ax
  419494:	clc    
  419495:	je     0x419473
  419497:	jl     0x419439
  419499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41949a:	bound  esp,QWORD PTR [ebp+esi*8-0x2edceaa]
  4194a1:	pop    es
  4194a2:	das    
  4194a3:	or     al,0x5
  4194a5:	xchg   edi,eax
  4194a6:	and    DWORD PTR [edx-0x7a1f5731],edx
  4194ac:	xchg   ecx,eax
  4194ad:	xor    eax,0x41633a05
  4194b2:	xchg   al,dh
  4194b4:	std    
  4194b5:	inc    edi
  4194b6:	sbb    dh,BYTE PTR [edx-0x24]
  4194b9:	shl    DWORD PTR [ebp-0x7e757df7],cl
  4194bf:	push   ebp
  4194c0:	jge    0x4194fc
  4194c2:	jae    0x4194d9
  4194c4:	mov    ebp,0xdbba5b49
  4194c9:	push   cs
  4194ca:	adc    ch,0x32
  4194cd:	mov    edi,0xf6478662
  4194d2:	pop    ds
  4194d3:	dec    esp
  4194d4:	pop    ecx
  4194d5:	xor    al,0x49
  4194d7:	dec    ebp
  4194d8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4194da:	or     eax,0x756cbe98
  4194df:	and    eax,0x9ce4c105
  4194e4:	adc    dl,BYTE PTR [ecx]
  4194e6:	and    DWORD PTR [edi-0x4bedea95],ecx
  4194ec:	xchg   edx,eax
  4194ed:	bound  ebx,QWORD PTR [ebp-0x74b46b56]
  4194f3:	test   eax,0xcdfb1321
  4194f8:	retf   0x3603
  4194fb:	ins    DWORD PTR es:[edi],dx
  4194fc:	and    DWORD PTR [esi+0x47],ebp
  4194ff:	and    eax,0x81e032b8
  419504:	data16 std 
  419506:	out    0x3e,eax
  419508:	fdiv   DWORD PTR [eax+0x5ab6e930]
  41950e:	push   ss
  41950f:	out    0xff,al
  419511:	dec    esp
  419512:	je     0x419555
  419514:	ds daa 
  419516:	retf   
  419517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419518:	and    DWORD PTR [edx-0x27],eax
  41951b:	sahf   
  41951c:	sbb    DWORD PTR [ebx],eax
  41951e:	dec    ebx
  41951f:	push   ebp
  419520:	jnp    0x41953b
  419522:	sbb    DWORD PTR [ebp-0x4f375b20],ecx
  419528:	daa    
  419529:	into   
  41952a:	jle    0x41953f
  41952c:	outs   dx,DWORD PTR ds:[esi]
  41952d:	xor    DWORD PTR [esi+0x14463581],esp
  419533:	scas   eax,DWORD PTR es:[edi]
  419534:	pop    ss
  419535:	ret    0xe3e7
  419538:	jae    0x419524
  41953a:	add    BYTE PTR [edi+0x71],ah
  41953d:	sub    al,0x6c
  41953f:	imul   edx,esp,0xffffff9b
  419542:	xchg   edi,eax
  419543:	xor    al,BYTE PTR [esi-0x53]
  419546:	pop    ebp
  419547:	mov    bl,0xb6
  419549:	mov    dl,BYTE PTR [edx+edx*8-0x68406111]
  419550:	jge    0x419596
  419552:	fldenv [eax-0x112e59fd]
  419558:	push   0xffffffb6
  41955a:	or     esp,0xb35f3c77
  419560:	in     al,dx
  419561:	ins    BYTE PTR es:[edi],dx
  419562:	sbb    dl,BYTE PTR [edx]
  419564:	enter  0xe8b3,0x46
  419568:	mov    ah,0x13
  41956a:	imul   edx,DWORD PTR [esp+esi*1+0x7e],0x399047e5
  419572:	xchg   BYTE PTR [ebx+0x50],ah
  419575:	cs mov esp,0x2d6ab1c7
  41957b:	sub    DWORD PTR [ecx-0x72],ebp
  41957e:	popf   
  41957f:	jae    0x4195fe
  419581:	sbb    ah,BYTE PTR [edi+0x74]
  419584:	dec    esp
  419585:	xor    dh,BYTE PTR [edx+0x4fd35fe8]
  41958b:	fstp   QWORD PTR ds:0x465a42bd
  419591:	pop    edx
  419592:	mov    ebp,0x51ff0f7
  419597:	xchg   edi,eax
  419598:	enter  0x8078,0x52
  41959c:	xchg   esp,eax
  41959d:	push   ds
  41959e:	daa    
  41959f:	arpl   di,bp
  4195a1:	enter  0x5014,0xde
  4195a5:	pop    es
  4195a6:	mov    ds:0x8cb8701e,eax
  4195ab:	out    dx,al
  4195ac:	dec    edx
  4195ad:	hlt    
  4195ae:	mov    al,ds:0xd0adea6c
  4195b3:	push   0xd0ca4035
  4195b8:	shl    esi,cl
  4195ba:	pop    ds
  4195bb:	lods   eax,DWORD PTR ds:[esi]
  4195bc:	lds    esp,FWORD PTR [edi]
  4195be:	imul   edx
  4195c0:	push   ebx
  4195c1:	mov    eax,ds:0xe334b904
  4195c6:	inc    ecx
  4195c7:	mov    DWORD PTR ss:[ecx-0x1df4c11a],ebx
  4195ce:	js     0x419584
  4195d0:	sbb    edx,DWORD PTR [eax-0x76]
  4195d3:	inc    esp
  4195d4:	cli    
  4195d5:	das    
  4195d6:	je     0x4195c4
  4195d8:	aas    
  4195d9:	out    dx,eax
  4195da:	(bad)  
  4195db:	out    dx,eax
  4195dc:	popa   
  4195dd:	pop    edi
  4195de:	xchg   BYTE PTR [eax],bh
  4195e0:	add    BYTE PTR [edi+esi*8+0x28],bl
  4195e4:	cmp    BYTE PTR [ecx+0x5e],bh
  4195e7:	outs   dx,BYTE PTR ds:[esi]
  4195e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195e9:	sbb    al,0x25
  4195eb:	leave  
  4195ec:	(bad)  [edi+edx*4-0x6d8ef49a]
  4195f3:	mov    ch,0x20
  4195f5:	arpl   WORD PTR [ebx+0x7a2f7554],si
  4195fb:	hlt    
  4195fc:	and    eax,0x4c90f3b6
  419601:	inc    esi
  419602:	push   ds
  419603:	pop    ebx
  419604:	shl    BYTE PTR [edi+eiz*2],0xcb
  419608:	xlat   BYTE PTR es:[ebx]
  41960a:	loope  0x419612
  41960c:	shr    DWORD PTR [edx-0x61],cl
  41960f:	out    0x2e,al
  419611:	repz push esp
  419613:	out    0x3f,al
  419615:	addr16 in eax,dx
  419617:	(bad)  
  419618:	in     eax,0x68
  41961a:	pop    edi
  41961b:	into   
  41961c:	cmp    eax,0x9072fed0
  419621:	mov    bl,BYTE PTR [esi-0x261a9f77]
  419627:	mov    eax,DWORD PTR [edx-0x6e]
  41962a:	sub    ecx,DWORD PTR [edi-0x28]
  41962d:	cdq    
  41962e:	sbb    al,0x5b
  419630:	push   ecx
  419631:	(bad)  
  419632:	sub    bh,ch
  419634:	cs sub esp,ecx
  419637:	retf   
  419638:	xor    BYTE PTR [edi],dh
  41963a:	jmp    0x41969d
  41963c:	or     BYTE PTR [ecx-0x16dc2f91],0x67
  419643:	sahf   
  419644:	stos   DWORD PTR es:[edi],eax
  419645:	inc    eax
  419646:	xor    DWORD PTR [ebx],ebp
  419648:	lds    ebx,FWORD PTR [ebp+0x69]
  41964b:	aaa    
  41964c:	rcr    BYTE PTR [edi-0xa367e87],cl
  419652:	adc    al,0xac
  419654:	push   eax
  419655:	xchg   edi,eax
  419656:	addr16 cmp al,0xe
  41965a:	pop    esp
  41965b:	and    ecx,DWORD PTR [edx]
  41965d:	pusha  
  41965e:	out    0xdb,al
  419660:	dec    edx
  419661:	ins    BYTE PTR es:[edi],dx
  419662:	xor    edx,DWORD PTR [eax+0x6b]
  419665:	xchg   edx,eax
  419666:	std    
  419667:	out    dx,eax
  419668:	jbe    0x4195ec
  41966a:	xor    ah,BYTE PTR [ebx]
  41966c:	cmp    al,0x4b
  41966e:	mov    DWORD PTR [esi-0x744e1ce],ebp
  419674:	adc    DWORD PTR [esi+0x32],esi
  419677:	adc    DWORD PTR [eax],esi
  419679:	or     dl,BYTE PTR [eax+edx*4-0x6a]
  41967d:	call   DWORD PTR [esi]
  41967f:	adc    cl,BYTE PTR [edi-0x4f]
  419682:	(bad)  
  419683:	ss loopne 0x4196b4
  419686:	mov    esp,0xe0ff8154
  41968b:	pop    edi
  41968c:	mov    ebp,0x550ce4e4
  419691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419692:	or     DWORD PTR [ebx-0x5f],edx
  419695:	xor    BYTE PTR [ebx+0x463ad75],al
  41969b:	push   esi
  41969c:	push   edx
  41969d:	push   ds
  41969e:	icebp  
  41969f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196a0:	dec    eax
  4196a1:	nop
  4196a2:	rcr    ah,1
  4196a4:	fucomi st,st(1)
  4196a6:	xor    eax,0xb7f7d10b
  4196ab:	or     eax,0xc68bcb3d
  4196b0:	sub    BYTE PTR [esi],bh
  4196b2:	scas   al,BYTE PTR es:[edi]
  4196b3:	pop    ds
  4196b4:	cs dec ecx
  4196b6:	stos   BYTE PTR es:[edi],al
  4196b7:	mov    WORD PTR [edx+0x7e45ce84],gs
  4196bd:	lock (bad) 
  4196c0:	std    
  4196c1:	aam    0xe7
  4196c3:	adc    eax,0xadc734a
  4196c8:	sbb    BYTE PTR [ebp-0x68],dh
  4196cb:	pushf  
  4196cc:	dec    ecx
  4196cd:	call   0xa295:0xb127b7a1
  4196d4:	inc    esp
  4196d5:	mov    edx,DWORD PTR [ecx-0x62]
  4196d8:	xchg   esp,eax
  4196d9:	push   edx
  4196da:	arpl   WORD PTR [edx+ebp*2],ax
  4196dd:	and    eax,0xb6b155f8
  4196e2:	add    cl,cl
  4196e4:	out    dx,eax
  4196e5:	pop    ecx
  4196e6:	jnp    0x4196bc
  4196e8:	sbb    al,0xe8
  4196ea:	lods   al,BYTE PTR ds:[esi]
  4196eb:	dec    esi
  4196ec:	imul   ebp,edi,0xc2d1bd5e
  4196f2:	retf   
  4196f3:	adc    ecx,DWORD PTR fs:[esi-0x2d]
  4196f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196f8:	stc    
  4196f9:	xor    eax,0xfa442963
  4196fe:	xchg   BYTE PTR [ecx-0x59470195],ch
  419704:	jle    0x4196bc
  419706:	js     0x419714
  419708:	xchg   esp,eax
  419709:	lock iret 
  41970b:	(bad)  
  41970d:	mov    BYTE PTR ds:0x755d5e46,ch
  419713:	mov    dh,0x65
  419715:	call   0x8b1b7d0b
  41971a:	pop    ebp
  41971b:	fimul  WORD PTR [edx+0x1dfb3b6d]
  419721:	adc    ah,BYTE PTR [ecx+0x683ecad3]
  419727:	mov    ds:0x9b60a09e,eax
  41972c:	in     eax,0x27
  41972e:	mov    esi,0xad73ddd2
  419733:	push   cs
  419734:	lods   al,BYTE PTR ds:[esi]
  419735:	mov    ebp,0x6b2b5e78
  41973a:	into   
  41973b:	cmp    edx,DWORD PTR [esi+0x1e]
  41973e:	mov    DWORD PTR [esi+0x75f369e8],ebp
  419744:	les    ebx,FWORD PTR [eax]
  419746:	push   ebx
  419747:	mov    dl,BYTE PTR [esi-0x6a1d9cc4]
  41974d:	push   ebp
  41974e:	xor    bl,BYTE PTR [edi]
  419750:	adc    BYTE PTR [edi],ch
  419752:	stos   DWORD PTR es:[edi],eax
  419753:	jmp    0xad752051
  419758:	xor    BYTE PTR [edi+esi*8-0x659b28c6],bl
  41975f:	jg     0x419793
  419761:	xchg   ebp,eax
  419762:	pop    ebx
  419763:	xchg   edi,eax
  419764:	xchg   esi,eax
  419765:	pop    ss
  419766:	xchg   esp,eax
  419767:	callw  0x12b4
  41976b:	xor    BYTE PTR [eax+0x5bf4848],dl
  419771:	leave  
  419772:	mov    DWORD PTR [esi-0x3b],esi
  419775:	lea    eax,[eax]
  419777:	iret   
  419778:	int    0xae
  41977a:	pop    ebx
  41977b:	add    eax,0x4d2b0970
  419780:	mov    eax,ds:0x6649109c
  419785:	inc    edx
  419786:	mov    dl,0xc9
  419788:	sub    DWORD PTR [esi+0x75],edi
  41978b:	or     bh,BYTE PTR [ecx-0x57ee9c1d]
  419791:	and    BYTE PTR [ecx],0xbc
  419794:	jecxz  0x41975f
  419796:	pop    ds
  419797:	sbb    BYTE PTR [ebx],dl
  419799:	pop    ecx
  41979a:	dec    ebx
  41979b:	lock outs dx,DWORD PTR ds:[esi]
  41979d:	in     eax,dx
  41979e:	push   0xf30c548e
  4197a3:	xlat   BYTE PTR ds:[ebx]
  4197a4:	dec    edi
  4197a5:	cmp    eax,0xfa473fa1
  4197aa:	xor    ecx,esi
  4197ac:	mov    dl,0x27
  4197ae:	cld    
  4197af:	repz jecxz 0x4197c9
  4197b2:	jmp    0x65c038b1
  4197b7:	xchg   DWORD PTR [eax-0x7a6ffedd],eax
  4197bd:	adc    cl,bh
  4197bf:	inc    ebx
  4197c0:	leave  
  4197c1:	add    al,0xae
  4197c3:	xchg   ebx,eax
  4197c4:	dec    eax
  4197c5:	push   ss
  4197c6:	loopne 0x419756
  4197c8:	(bad)  
  4197c9:	cld    
  4197ca:	out    0xb3,eax
  4197cc:	test   dh,ch
  4197ce:	mov    ds:0x4728ea41,al
  4197d3:	jp     0x4197f6
  4197d5:	(bad)  
  4197d7:	(bad)
  4197da:	cmp    ecx,esi
  4197dc:	sub    DWORD PTR [edx+0x1994d9cf],edi
  4197e2:	int3   
  4197e3:	ror    ebp,cl
  4197e5:	dec    edx
  4197e6:	cs aad 0xd7
  4197e9:	cmp    esi,DWORD PTR [esi+0x14]
  4197ec:	xchg   esp,eax
  4197ed:	push   ebx
  4197ee:	das    
  4197ef:	pushf  
  4197f0:	retf   
  4197f1:	or     BYTE PTR [edi-0x2685198c],bh
  4197f7:	into   
  4197f8:	ds dec esi
  4197fa:	xor    DWORD PTR [esi+0x84],esp
  419800:	add    BYTE PTR [eax],al
  419802:	adc    al,0xe9
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	sar    dh,1
  41980f:	mov    eax,0x14d05a20
  419814:	add    DWORD PTR [eax],eax
  419816:	repz add al,0x0
  419819:	add    ah,ah
  41981b:	les    ebx,FWORD PTR [ecx]
  41981d:	xchg   ebx,eax
  41981e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41981f:	loop   0x419843
  419821:	fsub   DWORD PTR [esi+0x5a0d4a2]
  419827:	jmp    0x4232:0xebacb336
  41982e:	dec    edx
  41982f:	fiadd  WORD PTR [esi]
  419831:	shl    cl,0x76
  419834:	sub    eax,0xa7f298f9
  419839:	mov    bl,0x44
  41983b:	xor    al,BYTE PTR [edi-0x5cbf95d2]
  419841:	int    0x84
  419843:	paddd  mm1,QWORD PTR [ecx-0x24a5e710]
  41984a:	arpl   WORD PTR [edi+0x74f03440],bp
  419850:	fdivr  DWORD PTR [ebx-0x61289917]
  419856:	inc    esp
  419857:	pop    edi
  419858:	or     BYTE PTR [edi-0x33],bl
  41985b:	mov    eax,ds:0x7ea4719
  419860:	stos   BYTE PTR es:[edi],al
  419861:	call   0x8c95d47e
  419866:	(bad)  
  419867:	fadd   QWORD PTR [edi+0x2dfa8143]
  41986d:	and    eax,0xbf1f1019
  419872:	(bad)  
  419873:	push   ebx
  419874:	jmp    0x4198b0
  419876:	pop    es
  419877:	xchg   esi,eax
  419878:	iret   
  419879:	out    0xbd,eax
  41987b:	stos   DWORD PTR es:[edi],eax
  41987c:	test   eax,edi
  41987e:	xor    al,0xe3
  419880:	mov    ?,edx
  419882:	retf   0x507b
  419885:	xchg   esi,eax
  419886:	dec    edi
  419887:	frstor [eax+edi*1]
  41988a:	sub    bh,ch
  41988c:	outs   dx,BYTE PTR cs:[esi]
  41988e:	ins    DWORD PTR es:[edi],dx
  41988f:	sub    al,0x6d
  419891:	in     al,dx
  419892:	stos   BYTE PTR es:[edi],al
  419893:	adc    al,0x55
  419895:	pop    ecx
  419896:	fld    QWORD PTR ds:[ebx-0x66]
  41989a:	lea    esp,[ebx]
  41989c:	scas   al,BYTE PTR es:[edi]
  41989d:	pop    esp
  41989e:	aad    0x2b
  4198a0:	retf   
  4198a1:	adc    al,0x2b
  4198a3:	out    dx,al
  4198a4:	sub    eax,DWORD PTR [edx+0x4c]
  4198a7:	xchg   BYTE PTR [ecx+ecx*1+0x73],bh
  4198ab:	cmp    al,0x96
  4198ad:	std    
  4198ae:	xor    ecx,eax
  4198b0:	jge    0x4198f9
  4198b2:	fucom  st(1)
  4198b4:	jle    0x4198e8
  4198b6:	es in  eax,0x20
  4198b9:	stc    
  4198ba:	mov    bl,0x69
  4198bc:	sbb    al,0x5c
  4198be:	frstor [eax+0x27]
  4198c1:	rcl    DWORD PTR [ebx],0xe6
  4198c4:	shl    DWORD PTR [eax+0x6ccccfef],1
  4198ca:	js     0x419889
  4198cc:	iret   
  4198cd:	jbe    0x419911
  4198cf:	ret    0xdabd
  4198d2:	mov    ecx,0x47a518a4
  4198d7:	xchg   ebp,eax
  4198d8:	add    BYTE PTR [eax-0x11080b19],dl
  4198de:	dec    eax
  4198df:	jl     0x4198f4
  4198e1:	cmp    eax,0xc0e9eba4
  4198e6:	daa    
  4198e7:	sub    al,0xd4
  4198ea:	or     eax,0x53dc9ad0
  4198ef:	cwde   
  4198f0:	add    eax,0xa15a9d5a
  4198f5:	push   ecx
  4198f6:	mov    fs,esi
  4198f8:	mov    dh,0xf2
  4198fa:	push   edi
  4198fb:	stos   DWORD PTR es:[edi],eax
  4198fc:	jg     0x419930
  4198fe:	fs addr16 (bad) 
  419901:	les    edi,FWORD PTR [ecx]
  419903:	xor    DWORD PTR [esi],edi
  419905:	push   0x97be6546
  41990a:	das    
  41990b:	sbb    BYTE PTR [edx-0x3b],bl
  41990e:	cmp    BYTE PTR [esi+0x531a09],0xad
  419915:	leave  
  419916:	inc    eax
  419917:	ds clc 
  419919:	lods   eax,DWORD PTR ds:[esi]
  41991a:	clc    
  41991b:	xor    al,0xde
  41991d:	push   ebp
  41991e:	or     esi,ebp
  419920:	in     al,0xb2
  419922:	ret    
  419923:	push   cs
  419924:	xor    al,0x26
  419926:	push   0x283922cf
  41992b:	push   ds
  41992c:	in     al,0xb4
  41992e:	loopne 0x4198dc
  419930:	sbb    DWORD PTR [ecx],ebx
  419932:	not    BYTE PTR [ebx+0x3a33868f]
  419938:	adc    al,0xfb
  41993a:	fcom   DWORD PTR [ecx]
  41993c:	iret   
  41993d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41993e:	ficom  DWORD PTR [esi+0x27308f42]
  419944:	push   edi
  419945:	and    eax,0x3a451f49
  41994a:	mov    DWORD PTR [edi+0x3b],edx
  41994d:	mov    eax,0xff03d83c
  419952:	push   0xae8577ce
  419957:	icebp  
  419958:	adc    eax,0xe51aba3d
  41995d:	or     ch,al
  41995f:	adc    al,0x5d
  419961:	xchg   DWORD PTR [ebp+0x23b201f9],ecx
  419967:	shr    BYTE PTR [eax],cl
  419969:	dec    eax
  41996a:	fist   WORD PTR [ecx]
  41996c:	xchg   ebx,eax
  41996d:	xchg   ebx,eax
  41996e:	jb     0x419954
  419970:	mov    esi,DWORD PTR [edx+0x7a53bfb7]
  419976:	shl    DWORD PTR [ebx+edx*2+0x1a],1
  41997a:	inc    esp
  41997b:	adc    al,bl
  41997d:	enter  0x269e,0x1a
  419981:	loope  0x419947
  419983:	push   esp
  419984:	mov    eax,0x874870b8
  419989:	pop    esp
  41998a:	sub    DWORD PTR [ecx-0x405eaaec],edi
  419990:	dec    eax
  419991:	mov    ecx,0xbce38eef
  419996:	sbb    eax,0x6867bafa
  41999b:	shl    BYTE PTR [ecx+ebx*1],0x21
  41999f:	imul   DWORD PTR [ecx]
  4199a1:	pop    ebx
  4199a2:	inc    ebp
  4199a3:	mov    dh,BYTE PTR [esi-0x7d109ff6]
  4199a9:	cmp    al,0xcb
  4199ab:	stos   BYTE PTR es:[di],al
  4199ad:	mov    ah,0x53
  4199af:	sub    dh,BYTE PTR [eax]
  4199b1:	push   cs
  4199b2:	inc    ebp
  4199b3:	out    dx,eax
  4199b4:	add    BYTE PTR [esi+0x8],dl
  4199b7:	(bad)  
  4199b8:	push   eax
  4199b9:	popf   
  4199ba:	jno    0x41999e
  4199bc:	sahf   
  4199bd:	or     esp,DWORD PTR [edi-0x26eb8de1]
  4199c3:	outs   dx,BYTE PTR ds:[esi]
  4199c4:	push   cs
  4199c5:	(bad)  
  4199c6:	cli    
  4199c7:	loopne 0x419a18
  4199c9:	and    ch,cl
  4199cb:	mov    eax,ds:0xc529274c
  4199d0:	mov    dh,BYTE PTR [ebx+0x28a43684]
  4199d6:	int    0x28
  4199d8:	stc    
  4199d9:	(bad)  
  4199db:	sub    DWORD PTR [ebx],0x42
  4199de:	or     al,0x1
  4199e0:	sbb    al,0xb9
  4199e2:	lock xchg ecx,eax
  4199e4:	fs inc esp
  4199e6:	repz xchg ecx,eax
  4199e8:	add    DWORD PTR [edi],eax
  4199ea:	in     eax,0xf2
  4199ec:	push   cs
  4199ed:	retf   0x973c
  4199f0:	addr16 push edx
  4199f2:	inc    esp
  4199f3:	dec    ecx
  4199f4:	push   ss
  4199f5:	bound  esp,QWORD PTR [edi]
  4199f7:	hlt    
  4199f8:	pop    ss
  4199f9:	imul   eax,DWORD PTR ds:0x5ae2130a,0x4a
  419a00:	popf   
  419a01:	mov    al,0x64
  419a03:	dec    ebx
  419a04:	ret    
  419a05:	xchg   edi,eax
  419a06:	xchg   esi,eax
  419a07:	jnp    0x419a4e
  419a09:	mov    eax,0xb506bd47
  419a0e:	mov    ah,0x7f
  419a10:	imul   ebp,DWORD PTR [esi+0x7e],0xffffffe7
  419a14:	jge    0x419a93
  419a16:	or     ebp,DWORD PTR [edx]
  419a18:	adc    ah,BYTE PTR [edx]
  419a1a:	loope  0x419a07
  419a1c:	rol    BYTE PTR [ebx+0x29],0x80
  419a20:	cli    
  419a21:	dec    esi
  419a22:	xchg   BYTE PTR [ecx+0x57],dh
  419a25:	arpl   WORD PTR [ebx+0x1c3a7f89],sp
  419a2b:	aad    0xa
  419a2d:	psadbw mm3,QWORD PTR [ecx]
  419a30:	mov    ah,BYTE PTR [ecx]
  419a32:	aad    0xd3
  419a34:	rcr    BYTE PTR [ebx+0x55],cl
  419a37:	loop   0x419a0c
  419a39:	dec    edx
  419a3a:	xor    bl,ah
  419a3c:	imul   edi,DWORD PTR [ecx+0x32d1ab6c],0x11
  419a43:	or     eax,0x9632c08b
  419a48:	clc    
  419a49:	popf   
  419a4a:	xchg   esi,eax
  419a4b:	bound  eax,QWORD PTR [edi-0x5c]
  419a4e:	add    ch,0x4b
  419a51:	popf   
  419a52:	cwde   
  419a53:	xchg   esp,eax
  419a54:	lock fs mov esp,0x606b3fd1
  419a5b:	ret    0xf798
  419a5e:	xchg   DWORD PTR [ebp-0x28],ebx
  419a61:	or     al,0xae
  419a63:	test   al,0x9
  419a65:	sbb    esi,DWORD PTR [edx+ecx*8]
  419a68:	adc    al,0x86
  419a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a6b:	pop    ecx
  419a6c:	adc    al,0xce
  419a6e:	xchg   ebx,eax
  419a6f:	stc    
  419a70:	cli    
  419a71:	cld    
  419a72:	aam    0xad
  419a74:	lahf   
  419a75:	stos   BYTE PTR es:[edi],al
  419a76:	mov    cl,0x3a
  419a78:	inc    esi
  419a79:	sub    eax,DWORD PTR [ebx-0x625c08b8]
  419a7f:	pop    ebx
  419a80:	out    0xee,eax
  419a82:	ror    BYTE PTR [ebp+0x3cf53400],0x3c
  419a89:	loope  0x419a99
  419a8b:	les    ebp,FWORD PTR [edi-0x6a]
  419a8e:	ins    DWORD PTR es:[edi],dx
  419a8f:	mov    al,0x24
  419a91:	mov    ecx,0x44a08183
  419a96:	fisubr DWORD PTR [eax]
  419a98:	sbb    esp,DWORD PTR ds:0x4ddd0ed
  419a9e:	or     ch,BYTE PTR ds:0x9a9d3a7b
  419aa4:	mov    esp,0x98d49f90
  419aa9:	xor    esp,DWORD PTR [ebp-0x1c6a0a3]
  419aaf:	icebp  
  419ab0:	add    DWORD PTR [esi],edi
  419ab2:	mov    cl,0xb6
  419ab4:	nop
  419ab5:	cmp    eax,0x119e6d53
  419aba:	dec    ebp
  419abb:	aad    0x79
  419abd:	and    eax,DWORD PTR [ebp-0x27]
  419ac0:	pop    ebx
  419ac1:	stos   BYTE PTR es:[edi],al
  419ac2:	pushf  
  419ac3:	enter  0xabf,0xd7
  419ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac8:	(bad)  [ecx-0xd74c8e3]
  419ace:	pop    esi
  419acf:	xlat   BYTE PTR ds:[ebx]
  419ad0:	xchg   esi,eax
  419ad1:	hlt    
  419ad2:	enter  0x48cd,0x43
  419ad6:	jle    0x419a68
  419ad8:	adc    edi,esp
  419ada:	fisub  WORD PTR [edx]
  419adc:	stos   DWORD PTR es:[edi],eax
  419add:	outs   dx,BYTE PTR ds:[esi]
  419ade:	std    
  419adf:	test   DWORD PTR ds:0x550191a4,0xb82ba5bb
  419ae9:	mov    fs,WORD PTR [ecx-0xff3e529]
  419aef:	sub    ah,BYTE PTR [esi]
  419af1:	lods   al,BYTE PTR ds:[esi]
  419af2:	ror    DWORD PTR [ebx-0x63822d01],0xe3
  419af9:	lods   al,BYTE PTR ds:[esi]
  419afa:	out    0x6,al
  419afc:	xor    DWORD PTR [edx],edi
  419afe:	mov    ebp,0xafe63538
  419b03:	leave  
  419b04:	inc    eax
  419b05:	sbb    edx,0xffffffc7
  419b08:	pushf  
  419b09:	dec    esi
  419b0a:	leave  
  419b0b:	sbb    ah,ch
  419b0d:	fsubr  QWORD PTR [esi]
  419b0f:	cwde   
  419b10:	out    dx,eax
  419b11:	xor    al,0x3c
  419b13:	mov    ah,0x49
  419b15:	(bad)  
  419b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b17:	cdq    
  419b18:	jbe    0x419ab4
  419b1a:	push   cs
  419b1b:	jnp    0x419b2f
  419b1d:	pop    ebx
  419b1e:	dec    ecx
  419b1f:	enter  0x150f,0x15
  419b23:	mov    edx,0x1fd9d9fb
  419b28:	rol    DWORD PTR [edi-0x17],1
  419b2b:	mov    es,WORD PTR [edx-0x335b75f1]
  419b31:	inc    ebx
  419b32:	into   
  419b33:	sti    
  419b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b35:	sub    BYTE PTR [edi+ecx*8+0x4b3cc63e],0xcd
  419b3d:	jmp    0x419b44
  419b3f:	loop   0x419ad5
  419b41:	and    cl,ah
  419b43:	out    0xe7,eax
  419b45:	fsubr  st,st(7)
  419b47:	fnstcw WORD PTR [eax+0x3895d1d2]
  419b4d:	pop    esi
  419b4e:	in     eax,dx
  419b4f:	add    bh,BYTE PTR ds:0xcc209f34
  419b55:	jl     0x419b44
  419b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b58:	jp     0x419b8a
  419b5a:	jo     0x419bc9
  419b5c:	jbe    0x419b91
  419b5e:	cli    
  419b5f:	mov    ebp,es
  419b61:	dec    ebx
  419b62:	adc    DWORD PTR [esp+edx*1-0x31],ebx
  419b66:	cmp    esp,edi
  419b68:	xchg   edx,eax
  419b69:	repnz adc DWORD PTR [eax-0x67],esp
  419b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b6e:	sub    BYTE PTR [ecx-0x1f],0xce
  419b72:	into   
  419b73:	push   ebx
  419b74:	inc    eax
  419b75:	pop    ss
  419b76:	pop    esi
  419b77:	mov    dh,0x91
  419b79:	xchg   BYTE PTR ds:0x83c61371,cl
  419b7f:	arpl   dx,sp
  419b81:	jge    0x419b4a
  419b83:	fld    st(6)
  419b85:	sti    
  419b86:	cs xchg ecx,eax
  419b88:	or     BYTE PTR [eax],al
  419b8a:	nop
  419b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b8c:	rcr    DWORD PTR [eax+ebx*1],0xdb
  419b90:	out    0x2b,eax
  419b92:	push   0x6bdc1b5b
  419b97:	das    
  419b98:	xlat   BYTE PTR ds:[ebx]
  419b99:	inc    esi
  419b9a:	sub    al,0x2
  419b9c:	(bad)  
  419b9d:	xor    DWORD PTR [edx],edx
  419b9f:	dec    edi
  419ba0:	pusha  
  419ba1:	call   0x9ad18a74
  419ba6:	repnz fbstp TBYTE PTR [edx]
  419ba9:	sub    eax,0xca562f8
  419bae:	pushf  
  419baf:	push   esi
  419bb0:	stos   BYTE PTR es:[edi],al
  419bb1:	cld    
  419bb2:	xchg   ebx,eax
  419bb3:	test   eax,0x287932a8
  419bb8:	mov    dh,0x36
  419bba:	jno    0x419ba8
  419bbc:	adc    eax,0x1d6b72ad
  419bc1:	div    BYTE PTR [eax-0x38cd70d0]
  419bc7:	pop    ss
  419bc8:	fwait
  419bc9:	mov    al,ds:0x705eca2c
  419bce:	popa   
  419bcf:	out    dx,eax
  419bd0:	fwait
  419bd1:	cmp    DWORD PTR [esi],edx
  419bd3:	iret   
  419bd4:	push   ebx
  419bd5:	sbb    BYTE PTR ds:0xb43a0082,bh
  419bdb:	sbb    al,0xd
  419bdd:	and    BYTE PTR [ebp+0x68],cl
  419be0:	ins    BYTE PTR es:[edi],dx
  419be1:	xchg   ebp,eax
  419be2:	icebp  
  419be3:	outs   dx,BYTE PTR ds:[esi]
  419be4:	stc    
  419be5:	bswap  edi
  419be7:	inc    ecx
  419be8:	repz mov esp,0xda5a7f6e
  419bee:	(bad)  
  419bef:	jp     0x419bc4
  419bf1:	call   0x3e605d59
  419bf6:	cmp    esp,DWORD PTR [esi]
  419bf8:	rol    BYTE PTR [ecx],cl
  419bfa:	out    0x57,al
  419bfc:	es push ebp
  419bfe:	(bad)  
  419bff:	ss retf 0xf98c
  419c03:	mov    al,0xf9
  419c05:	data16 jge 0x419bd6
  419c08:	mov    cl,dl
  419c0a:	jae    0x419c75
  419c0c:	dec    edi
  419c0d:	xor    BYTE PTR ds:0x2c12cc0,al
  419c13:	stc    
  419c14:	fcmove st,st(2)
  419c16:	repnz out 0xe0,al
  419c19:	inc    esi
  419c1a:	enter  0x6ddb,0xb2
  419c1e:	(bad)
  419c22:	inc    esp
  419c23:	mov    bl,0x38
  419c25:	(bad)  
  419c26:	rcr    dl,cl
  419c28:	(bad)
  419c2b:	pop    ecx
  419c2c:	retf   
  419c2d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  419c2f:	mov    eax,0x86ebd25b
  419c34:	add    ch,BYTE PTR [edi-0x74]
  419c37:	sbb    DWORD PTR [ebx-0x25890945],ecx
  419c3d:	je     0x419be2
  419c3f:	retf   
  419c40:	sbb    DWORD PTR [eax],esp
  419c42:	push   edx
  419c43:	xor    al,0x7b
  419c45:	push   edi
  419c46:	imul   edx,DWORD PTR [esi+0x48],0xfffffff2
  419c4a:	lea    edi,[edx-0x36]
  419c4d:	sub    eax,DWORD PTR [edx+0x58]
  419c50:	popa   
  419c51:	inc    esp
  419c52:	xchg   ebx,eax
  419c53:	test   eax,0x9a8e90c5
  419c58:	arpl   WORD PTR [ebp-0x4db9cdb8],ax
  419c5e:	cwde   
  419c5f:	mov    edx,0xdcbc4b2
  419c64:	push   0xffffffcb
  419c66:	mov    ds:0xa7fb719d,eax
  419c6b:	mov    BYTE PTR [eax],dl
  419c6d:	cld    
  419c6e:	pop    esi
  419c6f:	jne    0x419c58
  419c71:	sub    eax,0xb850ce80
  419c76:	mov    dh,0x9e
  419c78:	(bad)  
  419c79:	das    
  419c7a:	and    dh,cl
  419c7c:	mov    esi,eax
  419c7e:	inc    ebx
  419c7f:	pushf  
  419c80:	retf   
  419c81:	jmp    0x419cc7
  419c83:	push   ss
  419c84:	adc    eax,ebx
  419c86:	xchg   DWORD PTR [edi-0x53],esi
  419c89:	fcmovb st,st(7)
  419c8b:	leave  
  419c8c:	jno    0x419d00
  419c8e:	enter  0xa865,0x5b
  419c92:	pop    ds
  419c93:	cmp    cl,BYTE PTR [eax]
  419c95:	sbb    al,0x28
  419c97:	or     BYTE PTR [ecx],dh
  419c99:	loop   0x419c65
  419c9b:	imul   edx,DWORD PTR [eax-0x80],0x438d79c3
  419ca2:	sub    DWORD PTR [edx+0x60],ebp
  419ca5:	aad    0x16
  419ca7:	aam    0x58
  419ca9:	ja     0x419c7f
  419cab:	xor    ebp,edx
  419cad:	in     eax,dx
  419cae:	les    ebp,FWORD PTR [ebp-0x1e]
  419cb1:	inc    esp
  419cb2:	xchg   ecx,eax
  419cb3:	(bad)  
  419cb4:	jbe    0x419c46
  419cb6:	pop    ds
  419cb7:	jae    0x419ca1
  419cb9:	retf   0x6633
  419cbc:	loopne 0x419ce9
  419cbe:	loope  0x419d1a
  419cc0:	mov    WORD PTR [ebp+0x19ed84a8],?
  419cc6:	sbb    eax,0xd748594d
  419ccb:	pop    ebx
  419ccc:	adc    al,0x5a
  419cce:	dec    ebp
  419ccf:	sub    BYTE PTR [ebp+0x5c],dh
  419cd2:	mov    ebx,DWORD PTR [ebp+0x28]
  419cd5:	mov    cl,0xa2
  419cd7:	and    dl,al
  419cd9:	mov    bh,0x62
  419cdb:	int3   
  419cdc:	pop    ebp
  419cdd:	fidivr DWORD PTR [ebx-0x5a]
  419ce0:	gs mov ebx,0xa3dabd50
  419ce6:	push   edi
  419ce7:	and    ecx,eax
  419ce9:	outs   dx,DWORD PTR ds:[esi]
  419cea:	and    eax,0xf8c25266
  419cef:	push   esp
  419cf0:	push   ebx
  419cf1:	jbe    0x419d3d
  419cf3:	adc    DWORD PTR [esi+0x301781bf],ecx
  419cf9:	mov    esp,cs
  419cfb:	jmp    0xf3d8796c
  419d00:	xor    bh,bh
  419d02:	mov    bl,BYTE PTR [esi-0x3545e64d]
  419d08:	dec    edi
  419d09:	or     ebx,DWORD PTR [ebp-0x29]
  419d0c:	add    al,0x0
  419d0e:	add    BYTE PTR [eax],al
  419d10:	add    BYTE PTR [eax],al
  419d12:	mov    BYTE PTR [ebp-0x40],al
  419d15:	fs int 0xe5
  419d18:	lods   al,BYTE PTR ds:[esi]
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp+0x627d077c]
  419d20:	mov    ecx,0x119c330
  419d25:	add    bl,dh
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [edx+0x1dbed598],ch
  419d2f:	jp     0x419cb2
  419d31:	ret    0xd492
  419d34:	xchg   ebx,eax
  419d35:	pop    esi
  419d36:	scas   al,BYTE PTR es:[edi]
  419d37:	(bad)  
  419d38:	mov    bl,0xd8
  419d3a:	pop    ebx
  419d3b:	sysenter 
  419d3d:	neg    BYTE PTR [edi-0x3a8924f4]
  419d43:	cmp    al,0x9f
  419d45:	xchg   esp,eax
  419d46:	mov    ch,0xa0
  419d48:	sub    dh,al
  419d4a:	out    dx,al
  419d4b:	adc    eax,0xe950f4d7
  419d50:	push   edx
  419d51:	enter  0xf1e7,0xaf
  419d55:	mov    ds:0x58053b0b,eax
  419d5a:	aas    
  419d5b:	pop    eax
  419d5c:	dec    esi
  419d5d:	js     0x419d06
  419d5f:	pop    ds
  419d60:	jle    0x419d0c
  419d62:	sub    dh,BYTE PTR [ebx-0x4d]
  419d65:	sub    DWORD PTR [edx-0x42a8f971],0x6b
  419d6c:	pop    edi
  419d6d:	stos   DWORD PTR es:[edi],eax
  419d6e:	pop    edx
  419d6f:	inc    edx
  419d70:	bnd jae 0x419dc6
  419d73:	loop   0x419d56
  419d75:	das    
  419d76:	repnz mov cl,0x5
  419d79:	lds    ebp,FWORD PTR [edx]
  419d7b:	test   eax,0xdd034e2f
  419d80:	add    eax,0xe908073f
  419d85:	aas    
  419d86:	push   es
  419d87:	add    DWORD PTR [esp+ebx*2+0x5ab4ecf8],0xf7385e07
  419d92:	jle    0x419d1b
  419d94:	mov    eax,ds:0x9c72a066
  419d99:	sub    eax,0x90d03127
  419d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d9f:	jl     0x419d90
  419da1:	hlt    
  419da2:	push   eax
  419da3:	jle    0x419d26
  419da5:	clc    
  419da6:	xchg   BYTE PTR [esi],cl
  419da8:	pop    esi
  419da9:	add    cl,BYTE PTR [edi+ebx*8+0x568e6db0]
  419db0:	test   dl,cl
  419db2:	sbb    BYTE PTR [eax],cl
  419db4:	dec    edx
  419db5:	xchg   edx,eax
  419db6:	shl    DWORD PTR [ecx+0x5b4bca69],cl
  419dbc:	(bad)  
  419dbd:	outs   dx,DWORD PTR ds:[esi]
  419dbe:	and    DWORD PTR [ebx],edx
  419dc0:	aam    0xe8
  419dc2:	ret    0x2673
  419dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dc6:	add    eax,0x7504315b
  419dcb:	pusha  
  419dcc:	inc    esi
  419dcd:	xchg   BYTE PTR [esi-0x41],dh
  419dd0:	dec    ebx
  419dd1:	popf   
  419dd2:	aas    
  419dd3:	pop    edx
  419dd4:	or     cl,al
  419dd6:	and    DWORD PTR [ecx],0x42
  419dd9:	in     eax,dx
  419dda:	push   DWORD PTR [ebx-0x1d]
  419ddd:	add    eax,0x2c3fdbdb
  419de2:	das    
  419de3:	push   0x7b
  419de5:	pop    ss
  419de6:	mov    dh,0x4e
  419de8:	xor    eax,0xe33e08b
  419ded:	xor    esi,DWORD PTR [ebp+0x5bb355b9]
  419df3:	mov    dl,0x46
  419df5:	mov    ah,0xc0
  419df7:	and    BYTE PTR [edi+0x51],dl
  419dfa:	push   0x3b3e84cc
  419dff:	pop    edi
  419e00:	lock xchg DWORD PTR [edx-0x47],edi
  419e04:	lock leave 
  419e06:	ret    
  419e07:	adc    esi,edx
  419e09:	ins    DWORD PTR es:[edi],dx
  419e0a:	mov    ds:0xb229ed6,al
  419e0f:	push   ds
  419e10:	mov    ebp,0x42d4e566
  419e15:	ss xchg ebx,eax
  419e17:	shl    BYTE PTR [eax+0x70],0xf1
  419e1b:	gs aad 0x4
  419e1e:	jmp    0x33108fcf
  419e23:	or     cl,BYTE PTR [edi+0x21]
  419e26:	mov    ch,0x9
  419e28:	mov    edx,0xeff0369
  419e2d:	std    
  419e2e:	ins    DWORD PTR es:[edi],dx
  419e2f:	and    dh,bl
  419e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e32:	and    eax,esp
  419e34:	or     ah,bl
  419e36:	mov    dl,0x26
  419e38:	push   esi
  419e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e3a:	dec    edi
  419e3b:	mov    edi,0xd1ed2a5b
  419e40:	js     0x419dee
  419e42:	int3   
  419e43:	mov    eax,0x2ee2c4f1
  419e48:	(bad)  
  419e49:	jp     0x419ea4
  419e4b:	mov    ecx,0x170b61b2
  419e50:	xchg   esi,eax
  419e51:	sbb    al,0x2c
  419e53:	mov    ah,0x96
  419e55:	daa    
  419e56:	add    ebx,DWORD PTR [ebx]
  419e58:	xchg   ebx,eax
  419e59:	popa   
  419e5a:	pusha  
  419e5b:	sub    eax,0xaff81d28
  419e60:	(bad)  
  419e61:	int3   
  419e62:	add    BYTE PTR [ebx-0x50],dl
  419e65:	add    esp,DWORD PTR [eax+0x1a7bf55e]
  419e6b:	(bad)  [ecx]
  419e6d:	xlat   BYTE PTR ds:[ebx]
  419e6e:	repnz stc 
  419e70:	mov    ecx,0x2f3cd966
  419e75:	inc    eax
  419e76:	retf   0x2959
  419e79:	popf   
  419e7a:	popf   
  419e7b:	xor    BYTE PTR [edi+0x279c731f],0xd4
  419e82:	pop    ebx
  419e83:	fdivr  QWORD PTR [eax]
  419e85:	sbb    ah,BYTE PTR cs:[edi+eiz*2-0x63bacd91]
  419e8d:	ss lahf 
  419e8f:	dec    esp
  419e90:	dec    ebp
  419e91:	outs   dx,BYTE PTR ds:[esi]
  419e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e93:	xor    bh,BYTE PTR [esi-0x59]
  419e96:	js     0x419e3e
  419e98:	xchg   esi,eax
  419e99:	(bad)  
  419e9a:	xor    dl,cl
  419e9c:	push   edx
  419e9d:	and    eax,0xf04dfea7
  419ea2:	hlt    
  419ea3:	jbe    0x419f0b
  419ea5:	ret    
  419ea6:	in     al,dx
  419ea7:	cmp    DWORD PTR [edi-0x48],ecx
  419eaa:	and    BYTE PTR ds:0x64a80741,dl
  419eb0:	cli    
  419eb1:	stos   BYTE PTR es:[edi],al
  419eb2:	jb     0x419e3d
  419eb4:	cmp    BYTE PTR [eax],dh
  419eb6:	cmp    al,0x94
  419eb8:	adc    DWORD PTR [eax-0xe4d04f6],ebp
  419ebe:	jmp    0x419eec
  419ec0:	pop    esi
  419ec1:	js     0x419ef6
  419ec3:	cmp    al,0xf3
  419ec5:	mov    esi,0xfcf5538d
  419eca:	and    dl,BYTE PTR [edx+0x67]
  419ecd:	repz mov esi,0xeb1fe612
  419ed3:	aas    
  419ed4:	mov    dh,0xf0
  419ed6:	push   es
  419ed7:	pop    es
  419ed8:	fs xor eax,0xb555705b
  419ede:	mov    ch,0x76
  419ee0:	sub    BYTE PTR [esi],cl
  419ee2:	inc    esp
  419ee3:	mov    al,0xd5
  419ee5:	and    ecx,ecx
  419ee7:	inc    edi
  419ee8:	retf   
  419ee9:	mov    dh,0x1a
  419eeb:	jne    0x419f6c
  419eed:	cmp    eax,0x6c81c9ea
  419ef2:	mov    ds:0xe615b520,al
  419ef7:	jne    0x419e93
  419ef9:	fwait
  419efa:	or     DWORD PTR es:[edx],0x6b25fe49
  419f01:	xor    DWORD PTR [edx-0x35723081],edx
  419f07:	mov    eax,ds:0x3391db2
  419f0c:	ins    BYTE PTR es:[edi],dx
  419f0d:	push   ss
  419f0e:	ror    dh,1
  419f10:	jo     0x419eee
  419f12:	jae    0x419ecd
  419f14:	(bad)  
  419f15:	mov    ebx,0xf4fa0cd5
  419f1a:	sbb    al,0xe9
  419f1c:	mov    edx,0x69461adc
  419f21:	xchg   ecx,eax
  419f22:	ins    BYTE PTR es:[edi],dx
  419f23:	loope  0x419ed1
  419f25:	mov    ch,0x58
  419f27:	mul    BYTE PTR [edx-0x8]
  419f2a:	jmp    0x441ec1ac
  419f2f:	pop    es
  419f30:	(bad)  
  419f31:	ror    ecx,1
  419f33:	jnp    0x419f39
  419f35:	xor    BYTE PTR ds:0xa51ca93f,dl
  419f3b:	pop    ds
  419f3c:	add    ebp,esp
  419f3e:	les    eax,FWORD PTR [esp+ecx*1]
  419f41:	retf   
  419f42:	mov    edi,0x2a5d99ff
  419f47:	mov    al,ds:0x8aeb266d
  419f4c:	dec    esp
  419f4d:	loope  0x419f4c
  419f4f:	jmp    FWORD PTR [ebp+0xa09bb39]
  419f55:	in     al,0x86
  419f57:	xchg   edi,eax
  419f58:	outs   dx,BYTE PTR ds:[esi]
  419f59:	xor    edx,DWORD PTR [ebx]
  419f5b:	lds    eax,FWORD PTR [ebx]
  419f5d:	scas   eax,DWORD PTR es:[edi]
  419f5e:	pusha  
  419f5f:	and    ebx,ebx
  419f61:	repz jl 0x419f83
  419f64:	imul   esp,eax,0xcd8ba635
  419f6a:	jbe    0x419f09
  419f6c:	jb     0x419f3c
  419f6e:	mov    bh,cl
  419f70:	sbb    DWORD PTR [ebp*1+0x1e518a99],ecx
  419f77:	jmp    0xf410:0xaf4e5dfe
  419f7e:	retf   0xa6b2
  419f81:	xor    al,0xc7
  419f83:	pop    es
  419f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f85:	dec    ecx
  419f86:	fs test edx,esp
  419f89:	push   esp
  419f8a:	mov    bl,0x5e
  419f8c:	aas    
  419f8d:	push   ecx
  419f8e:	(bad)  
  419f8f:	(bad)  
  419f90:	pusha  
  419f91:	inc    esp
  419f92:	das    
  419f93:	jne    0x419f40
  419f95:	xor    edi,DWORD PTR [edi+0x6dbba404]
  419f9b:	nop
  419f9c:	jb     0x419f4f
  419f9e:	js     0x419f52
  419fa0:	hlt    
  419fa1:	loopne 0x419f7c
  419fa3:	dec    ecx
  419fa4:	add    eax,0x181ab47e
  419fa9:	and    eax,0xd8ce2981
  419fae:	ins    BYTE PTR es:[edi],dx
  419faf:	sub    DWORD PTR [ebx+esi*8+0x67b081c6],eax
  419fb6:	and    eax,DWORD PTR [ebx-0x40]
  419fb9:	push   cs
  419fba:	sbb    eax,DWORD PTR [esi]
  419fbc:	inc    eax
  419fbd:	cld    
  419fbe:	cli    
  419fbf:	hlt    
  419fc0:	jno    0x419fbf
  419fc2:	test   dh,bl
  419fc4:	leave  
  419fc5:	sub    al,0x81
  419fc7:	push   eax
  419fc8:	mov    ds:0xa9369196,al
  419fcd:	data16 stc 
  419fcf:	pop    esi
  419fd0:	xor    ebp,DWORD PTR [esi]
  419fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd3:	mov    edx,0x841ea2e8
  419fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fd9:	jg     0x41a022
  419fdb:	mov    ds:0x70b96efa,al
  419fe0:	jo     0x419f88
  419fe2:	fwait
  419fe3:	sbb    DWORD PTR [edi+0x755e7ee5],edx
  419fe9:	in     al,dx
  419fea:	enter  0x8388,0x32
  419fee:	imul   ecx,DWORD PTR [edx+0x69],0x4033ecec
  419ff5:	(bad)  
  419ff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ff7:	test   DWORD PTR [ebp+0x6f],edx
  419ffa:	popf   
  419ffb:	dec    DWORD PTR [edi-0x1ea9af62]
  41a001:	push   cs
  41a002:	push   ecx
  41a003:	hlt    
  41a004:	or     ebp,esi
  41a006:	push   edi
  41a007:	xchg   edx,eax
  41a008:	mov    bh,0x9e
  41a00a:	mov    edx,0x62cebe61
  41a00f:	mov    ds:0xa99e359c,al
  41a014:	and    DWORD PTR [edi],esi
  41a016:	cmc    
  41a017:	jg     0x419fac
  41a019:	aaa    
  41a01a:	adc    eax,0x288c8300
  41a01f:	pushf  
  41a020:	xchg   edi,eax
  41a021:	scas   al,BYTE PTR es:[edi]
  41a022:	pop    esp
  41a023:	jmp    0xbb6e880
  41a028:	clc    
  41a029:	sbb    eax,0xce92e1c5
  41a02e:	inc    ebp
  41a02f:	pop    ebx
  41a030:	dec    eax
  41a031:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41a033:	sub    eax,0x14f140ff
  41a038:	xor    BYTE PTR [esi-0x3c],ah
  41a03b:	outs   dx,BYTE PTR es:[esi]
  41a03d:	adc    BYTE PTR [esi+0x52],al
  41a040:	fsubr  st,st(6)
  41a042:	test   eax,0x30f1f19b
  41a047:	adc    DWORD PTR [ebx-0x34],ecx
  41a04a:	mov    ecx,0x15fc2531
  41a04f:	push   edi
  41a050:	inc    edx
  41a051:	inc    ecx
  41a052:	xchg   ebp,eax
  41a053:	xor    al,0xf6
  41a055:	or     DWORD PTR [ebx],esp
  41a057:	mov    esi,0x41a85e91
  41a05c:	repnz nop
  41a05e:	adc    ah,bh
  41a060:	dec    edx
  41a061:	mov    esp,0xc15ee9d0
  41a066:	lock gs xor eax,0xd8b15a74
  41a06d:	loopne 0x41a03f
  41a06f:	outs   dx,BYTE PTR ds:[esi]
  41a070:	nop
  41a071:	adc    DWORD PTR [ecx],eax
  41a073:	mov    dl,0x7
  41a075:	imul   esp,DWORD PTR [eax+0x2e],0x841ca57d
  41a07c:	mov    dh,BYTE PTR [ebx+0x3c]
  41a07f:	add    al,0x2
  41a081:	(bad)  
  41a082:	lea    eax,[edi]
  41a084:	fadd   st,st(6)
  41a086:	cmp    ebx,ebp
  41a088:	jmp    0x41a067
  41a08a:	ins    BYTE PTR es:[edi],dx
  41a08b:	add    DWORD PTR [esi-0x2b],edi
  41a08e:	mov    ah,0x5
  41a090:	(bad)  
  41a091:	fdivr  DWORD PTR [edi-0x33]
  41a094:	into   
  41a095:	push   cs
  41a096:	jbe    0x41a0a1
  41a098:	sub    dh,BYTE PTR [esi+0x76d4f053]
  41a09e:	sbb    BYTE PTR [ecx+ecx*4],al
  41a0a1:	jl     0x41a102
  41a0a3:	test   al,0x4b
  41a0a5:	cmp    esp,edx
  41a0a7:	clc    
  41a0a8:	fld    QWORD PTR [ecx-0x29]
  41a0ab:	and    BYTE PTR [esi+0x2a],bh
  41a0ae:	in     eax,dx
  41a0af:	inc    esp
  41a0b0:	jge    0x41a107
  41a0b2:	mov    ah,0xf
  41a0b4:	add    eax,ebp
  41a0b6:	lock xor edx,ebx
  41a0b9:	xchg   ebp,eax
  41a0ba:	xlat   BYTE PTR ds:[ebx]
  41a0bb:	or     BYTE PTR [ebx+ebx*2-0x67975017],dl
  41a0c2:	outs   dx,BYTE PTR ds:[esi]
  41a0c3:	lods   al,BYTE PTR ds:[esi]
  41a0c4:	push   edx
  41a0c5:	push   ds
  41a0c6:	aam    0x74
  41a0c8:	and    ebp,DWORD PTR [ebx+edi*8+0x76ed5dca]
  41a0cf:	aad    0x8a
  41a0d1:	fdiv   st,st(6)
  41a0d3:	fstp   QWORD PTR [esi-0x63]
  41a0d6:	and    esp,esp
  41a0d8:	adc    al,0x97
  41a0da:	aas    
  41a0db:	pop    edi
  41a0dc:	lods   al,BYTE PTR ds:[esi]
  41a0dd:	push   es
  41a0de:	and    ah,BYTE PTR [ecx]
  41a0e0:	push   0xffffff84
  41a0e2:	xchg   DWORD PTR [ebp-0xa9b7029],ebx
  41a0e8:	mov    ah,0xc3
  41a0ea:	mov    cl,0x3d
  41a0ec:	jl     0x41a108
  41a0ee:	rol    DWORD PTR [esi-0x34],0xb5
  41a0f2:	dec    esp
  41a0f3:	jns    0x41a140
  41a0f5:	lea    ebp,[ebp+0x68]
  41a0f8:	mov    ah,0x7
  41a0fa:	push   0x86cedb29
  41a0ff:	outs   dx,DWORD PTR ds:[esi]
  41a100:	hlt    
  41a101:	loop   0x41a10a
  41a103:	(bad)  
  41a105:	cmp    eax,0xd08c208b
  41a10a:	push   cs
  41a10b:	mov    bl,0xfb
  41a10d:	test   al,0x3e
  41a10f:	(bad)  
  41a110:	xchg   edx,eax
  41a111:	jo     0x41a18f
  41a113:	fadd   DWORD PTR [eax-0x272c9c4b]
  41a119:	sar    ch,1
  41a11b:	fsubp  st(4),st
  41a11d:	sub    DWORD PTR [eax-0x217b4c4d],esi
  41a123:	retf   0x93e
  41a126:	push   esi
  41a127:	imul   BYTE PTR [esi-0x6a]
  41a12a:	jmp    0x9b23a9e6
  41a12f:	lods   al,BYTE PTR ds:[esi]
  41a130:	xchg   esi,edi
  41a132:	pop    edi
  41a133:	cmp    ah,bh
  41a135:	mov    ah,bl
  41a137:	mov    ds:0x12c86df0,eax
  41a13c:	add    ebp,DWORD PTR [esi-0x4bd96687]
  41a142:	mov    eax,ds:0x504e321d
  41a147:	mov    esp,db2
  41a14a:	sub    eax,0x1839e121
  41a14f:	popf   
  41a150:	mov    DWORD PTR [esi+0x145c981d],edi
  41a156:	cmp    al,0xb3
  41a158:	(bad)  
  41a159:	lods   eax,DWORD PTR ds:[esi]
  41a15a:	dec    edx
  41a15b:	retf   0xf4b1
  41a15e:	test   al,0xf2
  41a160:	mov    bl,0x23
  41a162:	xor    dl,BYTE PTR [ecx+0x62]
  41a165:	int3   
  41a166:	adc    al,BYTE PTR [esi+0x6f]
  41a169:	inc    edi
  41a16a:	or     DWORD PTR [eax-0x7f],ebp
  41a16d:	test   al,0xb1
  41a16f:	cmp    BYTE PTR ds:0xa626ee45,0xe2
  41a176:	or     bl,BYTE PTR [edi+0x34]
  41a179:	sahf   
  41a17a:	mov    dl,BYTE PTR [ecx-0x1d]
  41a17d:	imul   esi,DWORD PTR [eax+0x5a],0x2fadfe98
  41a184:	mov    eax,ds:0x26354d59
  41a189:	dec    eax
  41a18a:	mov    ebp,0xc74144b5
  41a18f:	adc    al,0x1a
  41a191:	test   dh,ah
  41a193:	retf   
  41a194:	lods   al,BYTE PTR ds:[esi]
  41a195:	mov    dl,0xbb
  41a197:	test   DWORD PTR [esp+ebx*8+0x57],eax
  41a19b:	jo     0x41a188
  41a19d:	pop    ds
  41a19e:	sub    DWORD PTR [edx+0x4a725bbd],0x9069868c
  41a1a8:	add    dh,BYTE PTR [ecx]
  41a1aa:	xor    ah,BYTE PTR [edx-0x13]
  41a1ad:	cld    
  41a1ae:	mov    ebp,0x4c766009
  41a1b3:	data16 mov bh,0x73
  41a1b6:	xchg   DWORD PTR [ecx-0x59],ebx
  41a1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1ba:	aad    0x80
  41a1bc:	dec    ebx
  41a1bd:	loope  0x41a215
  41a1bf:	sub    BYTE PTR [ebx-0x45f8d4e7],dh
  41a1c5:	inc    ebp
  41a1c6:	clc    
  41a1c7:	jno    0x41a182
  41a1c9:	dec    ebp
  41a1ca:	test   ch,cl
  41a1cc:	mov    ds,ecx
  41a1ce:	rcr    dl,1
  41a1d0:	push   0x37
  41a1d2:	cmp    BYTE PTR [ebp+0x40],bh
  41a1d5:	xchg   DWORD PTR ss:[ebp+0x25],edx
  41a1d9:	jle    0x41a218
  41a1db:	dec    esp
  41a1dc:	jno    0x41a1cf
  41a1de:	mov    BYTE PTR [ecx-0x7],al
  41a1e1:	cdq    
  41a1e2:	xlat   BYTE PTR ds:[ebx]
  41a1e3:	aad    0x4d
  41a1e5:	lods   al,BYTE PTR ds:[esi]
  41a1e6:	jno    0x41a23d
  41a1e8:	xchg   ebp,eax
  41a1e9:	(bad)
  41a1ec:	pop    es
  41a1ed:	data16 adc BYTE PTR [eax-0x39],ch
  41a1f1:	cmp    DWORD PTR [ebx-0x7b],esi
  41a1f4:	add    DWORD PTR [esi+0x4da5046c],ecx
  41a1fa:	test   eax,0xe15013bb
  41a1ff:	leave  
  41a200:	xor    BYTE PTR [edx+esi*1],0xfd
  41a204:	out    0x1f,eax
  41a206:	add    BYTE PTR [edi],ch
  41a208:	in     al,dx
  41a209:	stos   BYTE PTR es:[edi],al
  41a20a:	scas   al,BYTE PTR es:[edi]
  41a20b:	mov    dl,0xab
  41a20d:	out    0xf,eax
  41a20f:	sbb    ch,BYTE PTR [esi-0x2a4b7f24]
  41a215:	xchg   ebp,eax
  41a216:	jmp    0x41a28b
  41a218:	add    bh,BYTE PTR [eax+0x6d]
  41a21b:	jnp    0x41a219
  41a21d:	add    BYTE PTR [eax],al
  41a21f:	add    BYTE PTR [eax],al
  41a221:	add    BYTE PTR [eax],bl
  41a223:	push   ebp
  41a224:	push   cs
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs int 0x83
  41a230:	inc    ecx
  41a231:	mov    al,0xb6
  41a233:	push   ds
  41a234:	add    DWORD PTR [eax],eax
  41a236:	repz add al,0x0
  41a239:	add    BYTE PTR [edx-0x33],ch
  41a23c:	pushf  
  41a23d:	aaa    
  41a23e:	push   eax
  41a23f:	sbb    eax,0x2c004191
  41a244:	push   0x5d
  41a246:	hlt    
  41a247:	and    BYTE PTR [edi+0x69],ch
  41a24a:	mov    al,0xc0
  41a24c:	inc    eax
  41a24d:	in     eax,dx
  41a24e:	in     al,dx
  41a24f:	mov    dh,0x93
  41a251:	jmp    0xff59b5f9
  41a256:	sbb    BYTE PTR [ebx],dh
  41a258:	mov    ebx,0xc3d5ada
  41a25d:	pop    edi
  41a25e:	push   edi
  41a25f:	and    edx,DWORD PTR [edi+0x9]
  41a262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a264:	xor    al,0xc2
  41a266:	xchg   edi,eax
  41a267:	mov    bl,0xbe
  41a26a:	or     esi,DWORD PTR [edi-0x6cf2d434]
  41a270:	pop    esp
  41a271:	mov    al,ds:0x37872180
  41a276:	shl    DWORD PTR [edx],0xd0
  41a279:	or     esp,edx
  41a27b:	retf   
  41a27c:	fstp   QWORD PTR [edx-0x2c31e136]
  41a282:	fild   QWORD PTR ds:0x8a3bc210
  41a288:	(bad)  
  41a289:	fild   QWORD PTR [esp+ebp*8]
  41a28c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a28d:	pop    ss
  41a28e:	add    DWORD PTR ds:0x6002dab1,ebx
  41a294:	neg    DWORD PTR [edi-0x71b5ceeb]
  41a29a:	mov    ecx,0x9c868a2a
  41a29f:	pushf  
  41a2a0:	out    0x64,al
  41a2a2:	(bad)  
  41a2a3:	dec    edx
  41a2a4:	call   0xc752:0x89cfd8e2
  41a2ab:	add    dl,ah
  41a2ad:	mov    eax,ds:0x33a2853c
  41a2b2:	add    esi,0xf2e923d7
  41a2b8:	push   ebp
  41a2b9:	mov    eax,ds:0xbff8b4ae
  41a2be:	cmp    ecx,DWORD PTR [edx]
  41a2c0:	loop   0x41a318
  41a2c2:	xchg   ebx,eax
  41a2c3:	push   ebp
  41a2c4:	aaa    
  41a2c5:	mov    bl,0x7b
  41a2c7:	outs   dx,DWORD PTR ds:[esi]
  41a2c8:	sub    al,0xd0
  41a2ca:	mov    cl,dh
  41a2cc:	nop
  41a2cd:	mov    eax,ds:0x2ccb33d
  41a2d2:	xchg   al,bl
  41a2d4:	rcr    BYTE PTR [esi],1
  41a2d6:	lea    esp,[ebx+0x4c]
  41a2d9:	clc    
  41a2da:	or     BYTE PTR [esi],ah
  41a2dc:	and    bh,BYTE PTR [edx+0x6ad402e2]
  41a2e2:	or     BYTE PTR [edx],0xb0
  41a2e5:	call   0x41a7da59
  41a2ea:	jnp    0x41a33b
  41a2ec:	mov    edx,es
  41a2ee:	cdq    
  41a2ef:	cmp    dl,BYTE PTR [edi+0x30dd8804]
  41a2f5:	cmp    BYTE PTR [edx],al
  41a2f7:	xchg   edi,eax
  41a2f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2f9:	jmp    0x11d73b0e
  41a2fe:	and    BYTE PTR [esi-0x7b],ch
  41a301:	inc    eax
  41a302:	mov    WORD PTR [ecx+edi*2],gs
  41a305:	pusha  
  41a306:	retf   0x5692
  41a309:	cmp    eax,DWORD PTR [ecx]
  41a30b:	cs xchg ecx,edx
  41a30e:	mov    BYTE PTR [ebx],cl
  41a310:	jne    0x41a2f4
  41a312:	in     al,0x94
  41a314:	mov    esi,0xb0632a7e
  41a319:	xor    edi,DWORD PTR [esp+ebx*4+0x66fd4f2]
  41a320:	pop    edi
  41a321:	inc    ecx
  41a322:	mov    eax,0xa7411967
  41a327:	stc    
  41a328:	or     DWORD PTR [esi-0x79cd29de],esi
  41a32e:	cmc    
  41a32f:	mov    cl,0x96
  41a331:	test   DWORD PTR [ebx-0x46],ebp
  41a334:	gs inc eax
  41a336:	inc    ebp
  41a337:	push   edi
  41a338:	sahf   
  41a339:	outs   dx,BYTE PTR ds:[esi]
  41a33a:	fdiv   QWORD PTR [eax+ecx*4]
  41a33d:	jge    0x41a32d
  41a33f:	aad    0xb4
  41a341:	int3   
  41a342:	and    eax,DWORD PTR [edi+0x8]
  41a345:	xorps  xmm2,XMMWORD PTR [edi-0x3a0f9a]
  41a34c:	jb     0x41a363
  41a34e:	mov    al,ds:0xf838ae67
  41a353:	or     ebx,DWORD PTR [ebp+0x363ff369]
  41a359:	ds sti 
  41a35b:	ds repnz push es
  41a35e:	sbb    BYTE PTR [ebx-0x4a],0x27
  41a362:	xor    al,0x3d
  41a364:	iret   
  41a365:	mov    ecx,0x8ee6b744
  41a36a:	call   0x8b4cab06
  41a36f:	sti    
  41a370:	push   edi
  41a371:	dec    esp
  41a372:	or     DWORD PTR [eax],0x8de0e3a2
  41a378:	and    eax,0xe0adc839
  41a37d:	mov    eax,0xeea3b74
  41a382:	outs   dx,DWORD PTR ds:[esi]
  41a383:	ins    BYTE PTR es:[edi],dx
  41a384:	icebp  
  41a385:	push   edx
  41a386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a387:	jge    0x41a3f9
  41a389:	jge    0x41a34d
  41a38b:	rol    BYTE PTR [eax-0x2d],cl
  41a38e:	lds    esi,FWORD PTR [eax]
  41a390:	jmp    0x855c747a
  41a395:	cmp    dl,BYTE PTR ds:0x2861971
  41a39b:	icebp  
  41a39c:	mov    edx,0x54fff3b4
  41a3a1:	icebp  
  41a3a2:	(bad)  
  41a3a3:	jmp    0x99b55b0a
  41a3a8:	push   ss
  41a3a9:	xchg   esp,eax
  41a3aa:	mov    dl,0x29
  41a3ac:	in     al,0xc0
  41a3ae:	mul    DWORD PTR [esi+0x143340ea]
  41a3b4:	enter  0x6664,0x26
  41a3b8:	aas    
  41a3b9:	(bad)  
  41a3ba:	cmp    edx,DWORD PTR [edx-0x4239f1a2]
  41a3c0:	xchg   BYTE PTR [edx],cl
  41a3c2:	jg     0x41a370
  41a3c4:	pop    esp
  41a3c5:	imul   eax,DWORD PTR [edx+0x6ab35d8f],0xe
  41a3cc:	jns    0x41a3f2
  41a3ce:	test   BYTE PTR ds:0xca52389b,0xd3
  41a3d5:	inc    esi
  41a3d6:	pop    ebp
  41a3d7:	fldpi  
  41a3d9:	adc    edx,DWORD PTR [esi-0x68]
  41a3dc:	js     0x41a426
  41a3de:	shl    DWORD PTR [edx+ecx*8],1
  41a3e1:	mov    ch,0x42
  41a3e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e5:	xchg   BYTE PTR [edx-0x7b],ah
  41a3e8:	pop    esi
  41a3e9:	xchg   edi,eax
  41a3ea:	adc    eax,0xc215c476
  41a3ef:	jg     0x41a3ec
  41a3f1:	ror    BYTE PTR [ecx],0x88
  41a3f4:	(bad)  
  41a3f5:	mov    dh,0x4b
  41a3f7:	fs push edi
  41a3f9:	xor    ecx,ebp
  41a3fb:	and    ebx,esp
  41a3fd:	jb     0x41a3fe
  41a3ff:	adc    al,0x99
  41a401:	test   eax,0x4067cf69
  41a406:	push   eax
  41a407:	dec    ebp
  41a408:	cmp    bl,BYTE PTR [edx-0x51]
  41a40b:	pop    ebp
  41a40c:	in     al,0x7b
  41a40e:	pop    esi
  41a40f:	sub    ecx,DWORD PTR [eax]
  41a411:	nop
  41a412:	imul   esp,DWORD PTR [ecx+0xdcc91ac],0xbde99da6
  41a41c:	popf   
  41a41d:	push   ss
  41a41e:	pop    ss
  41a41f:	mov    ecx,0x3040fffc
  41a424:	data16 (bad) 
  41a426:	pop    edx
  41a427:	shl    DWORD PTR [ebx+0x31e059a4],cl
  41a42d:	dec    esi
  41a42e:	mov    bh,0xa6
  41a430:	fmul   QWORD PTR [edx+0x61449319]
  41a436:	jp     0x41a4a5
  41a438:	mov    bl,0xa1
  41a43a:	xor    edx,DWORD PTR [ebp-0x6be501ff]
  41a440:	outs   dx,BYTE PTR ds:[esi]
  41a441:	fsubr  DWORD PTR [ecx-0x2c]
  41a444:	inc    ebp
  41a445:	aam    0x1
  41a447:	(bad)  
  41a449:	lods   al,BYTE PTR ds:[esi]
  41a44a:	push   es
  41a44b:	fchs   
  41a44d:	xchg   esp,eax
  41a44e:	xor    DWORD PTR [ebp-0x40beff23],edx
  41a454:	adc    eax,0xbc3e7bd0
  41a459:	sbb    cl,bl
  41a45b:	adc    bl,BYTE PTR [ebp-0xf]
  41a45e:	out    dx,al
  41a45f:	js     0x41a433
  41a461:	ss jmp 0x41a3f3
  41a464:	inc    esi
  41a465:	mov    ecx,0xfd01ffff
  41a46a:	stc    
  41a46b:	push   ds
  41a46c:	dec    esp
  41a46d:	enter  0xd30d,0x13
  41a471:	ins    BYTE PTR es:[edi],dx
  41a472:	(bad)  
  41a473:	push   ebx
  41a474:	inc    esp
  41a475:	cld    
  41a476:	mov    ch,0x96
  41a478:	pop    eax
  41a479:	mov    bh,0x9e
  41a47b:	jbe    0x41a448
  41a47d:	jecxz  0x41a43e
  41a47f:	mul    DWORD PTR [esi]
  41a481:	lods   eax,DWORD PTR ds:[esi]
  41a482:	sbb    al,0x5e
  41a484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a485:	addr16 mov bl,0xa1
  41a488:	sbb    al,0x39
  41a48a:	popa   
  41a48b:	sbb    BYTE PTR [eax],ch
  41a48d:	adc    edi,edx
  41a48f:	jbe    0x41a4db
  41a491:	jg     0x41a46c
  41a493:	sbb    al,0x2b
  41a495:	adc    BYTE PTR [eax+0x4ef18e3e],al
  41a49b:	lods   al,BYTE PTR ds:[esi]
  41a49c:	mov    dl,0x76
  41a49e:	cmp    ch,cl
  41a4a0:	das    
  41a4a1:	js     0x41a471
  41a4a3:	test   ch,ch
  41a4a5:	mov    eax,0x7d8c94cf
  41a4aa:	sbb    bl,BYTE PTR [ebp+0x7acc92c1]
  41a4b0:	mov    WORD PTR [esi-0x2d],?
  41a4b3:	mov    ebx,0x41379ee5
  41a4b8:	push   0xffffff9f
  41a4ba:	adc    dh,BYTE PTR [ebx+0x34]
  41a4bd:	cmc    
  41a4be:	inc    ecx
  41a4bf:	fld    QWORD PTR [ebx]
  41a4c1:	inc    esi
  41a4c2:	sti    
  41a4c3:	or     eax,0xf1116813
  41a4c8:	(bad)  [eax+0x55816c8d]
  41a4ce:	sub    esi,esi
  41a4d0:	mov    edx,0x3414e7ae
  41a4d5:	jno    0x41a513
  41a4d7:	inc    edi
  41a4d8:	rcr    DWORD PTR [eax-0x4ade5397],1
  41a4de:	xor    dh,BYTE PTR [edi]
  41a4e0:	add    DWORD PTR [eax+0x3],esi
  41a4e3:	retf   0x6447
  41a4e6:	inc    BYTE PTR [ecx]
  41a4e8:	mov    bl,0x62
  41a4ea:	scas   al,BYTE PTR es:[edi]
  41a4eb:	fldenv [edx+0x464fe57c]
  41a4f1:	jbe    0x41a4cd
  41a4f3:	aam    0x2
  41a4f5:	out    dx,eax
  41a4f6:	retf   0x9f3d
  41a4f9:	mov    esp,DWORD PTR [edi]
  41a4fb:	das    
  41a4fc:	xlat   BYTE PTR ds:[ebx]
  41a4fd:	mov    DWORD PTR [esi+0x3b1b26ae],0x205b9e9e
  41a507:	push   esi
  41a508:	inc    ebx
  41a509:	jge    0x41a4e8
  41a50b:	adc    BYTE PTR [esi],ah
  41a50d:	fadd   DWORD PTR [esi+0x5fb35110]
  41a513:	comiss xmm5,xmm5
  41a516:	lods   al,BYTE PTR ds:[esi]
  41a517:	xor    DWORD PTR [edx+0x20efb71a],ebp
  41a51d:	push   ds
  41a51e:	sti    
  41a51f:	and    cl,BYTE PTR [esi]
  41a521:	xchg   BYTE PTR [edx+0x46],bl
  41a524:	add    al,BYTE PTR [edx]
  41a526:	pop    edx
  41a527:	xchg   DWORD PTR [edx-0x25],ebp
  41a52a:	js     0x41a558
  41a52c:	mov    edx,0x4334e87d
  41a531:	stos   DWORD PTR es:[edi],eax
  41a532:	(bad)  
  41a533:	fsub   DWORD PTR [eax-0x34]
  41a536:	leave  
  41a537:	inc    ecx
  41a538:	daa    
  41a539:	fld    DWORD PTR [ecx]
  41a53b:	or     al,0x74
  41a53d:	jp     0x41a502
  41a53f:	xor    eax,0xfefaf208
  41a544:	push   edx
  41a545:	(bad)  
  41a546:	ret    
  41a547:	out    0x71,eax
  41a549:	xchg   esi,eax
  41a54a:	inc    ebp
  41a54b:	fwait
  41a54c:	add    esi,0xffffffe7
  41a54f:	xchg   ebp,eax
  41a550:	(bad)  
  41a552:	mov    DWORD PTR [ecx-0x655bb54d],edi
  41a558:	push   es
  41a559:	lods   eax,DWORD PTR ds:[esi]
  41a55a:	mov    es,WORD PTR [edi-0x46ae8fc5]
  41a560:	fcmovne st,st(5)
  41a562:	test   BYTE PTR ds:0x64ae0cd0,bl
  41a568:	(bad)  
  41a569:	cmp    eax,0x92d1a485
  41a56e:	inc    ebx
  41a56f:	pop    esp
  41a570:	push   esp
  41a571:	fnstenv [eax+esi*4-0x3c]
  41a575:	mov    eax,0x3309feb1
  41a57a:	rcr    DWORD PTR [ebx-0x365f9e9d],cl
  41a580:	(bad)  
  41a581:	pop    ecx
  41a582:	mov    ebp,0xbbdbd000
  41a587:	pop    ebp
  41a588:	jo     0x41a5bb
  41a58a:	mov    dh,0xb7
  41a58c:	cwde   
  41a58d:	loope  0x41a549
  41a58f:	test   al,0xe9
  41a591:	add    eax,0x23079507
  41a596:	loop   0x41a5ca
  41a598:	pop    esi
  41a599:	in     eax,0xaf
  41a59b:	jbe    0x41a58e
  41a59d:	loop   0x41a5d5
  41a59f:	je     0x41a5e7
  41a5a1:	pop    esi
  41a5a2:	test   eax,0xcfbf92e3
  41a5a7:	mov    ds:0xb7bfad0a,al
  41a5ac:	mov    dh,0x43
  41a5ae:	je     0x41a5e6
  41a5b0:	imul   ecx,ecx,0x4e
  41a5b3:	mov    edi,0xae1c7891
  41a5b8:	adc    DWORD PTR [edi+edx*2],edi
  41a5bb:	sbb    eax,0x5a5e7449
  41a5c0:	sar    esi,1
  41a5c2:	jmp    0xa2eb6c63
  41a5c7:	call   0xab66:0x88536143
  41a5ce:	or     dl,BYTE PTR [ecx+edx*8]
  41a5d1:	cld    
  41a5d2:	adc    eax,0x492bbb33
  41a5d7:	jge    0x41a630
  41a5d9:	retf   
  41a5da:	mov    dl,0x51
  41a5dc:	std    
  41a5dd:	and    eax,DWORD PTR [edi-0x13df781e]
  41a5e3:	test   al,0x71
  41a5e5:	mov    ebp,0x831a7268
  41a5ea:	push   ebx
  41a5ec:	xchg   edx,eax
  41a5ed:	dec    ebp
  41a5ee:	popf   
  41a5ef:	add    ecx,DWORD PTR [edi+eiz*8+0x5a]
  41a5f3:	fdiv   DWORD PTR [ecx+0x250f1aaf]
  41a5f9:	fidivr WORD PTR ds:0x15a07f0b
  41a5ff:	ja     0x41a5b1
  41a601:	dec    ecx
  41a602:	xchg   edx,eax
  41a603:	ins    DWORD PTR es:[edi],dx
  41a604:	pop    edi
  41a605:	pop    ecx
  41a606:	ss push 0xa1ef57b7
  41a60c:	mul    DWORD PTR ds:0x45496d1
  41a612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a613:	sbb    bl,BYTE PTR [ecx-0x7bd54ab7]
  41a619:	jg     0x41a622
  41a61b:	mov    ecx,?
  41a61d:	dec    ebx
  41a61e:	ins    BYTE PTR es:[edi],dx
  41a61f:	fadd   DWORD PTR [ecx-0x3a1efd24]
  41a625:	sbb    ecx,esp
  41a627:	lock dec edx
  41a629:	lock or ebx,DWORD PTR [edi+0x5d1c891e]
  41a630:	xchg   edx,eax
  41a631:	and    edi,ebx
  41a633:	fmulp  st(4),st
  41a635:	xor    DWORD PTR [ecx],ebp
  41a637:	retf   
  41a638:	enter  0x62f,0xd3
  41a63c:	bnd jge 0x41a60a
  41a63f:	pop    DWORD PTR [edi+0x1b]
  41a642:	out    dx,eax
  41a643:	loop   0x41a647
  41a645:	popf   
  41a646:	jge    0x41a601
  41a648:	cmp    DWORD PTR [ebp+0x47],edi
  41a64b:	push   0x1e0c9816
  41a650:	cmp    bl,BYTE PTR ds:0xced7c20e
  41a656:	inc    ecx
  41a657:	mov    ecx,0x9bcd4a33
  41a65c:	xlat   BYTE PTR ds:[ebx]
  41a65d:	pop    esp
  41a65e:	xchg   bh,cl
  41a660:	inc    ebx
  41a661:	ds stos DWORD PTR es:[edi],eax
  41a663:	inc    esi
  41a664:	push   0x8a27a537
  41a669:	pop    esp
  41a66a:	dec    esi
  41a66b:	mov    ebp,0x5c29230d
  41a670:	xor    ecx,DWORD PTR [ecx]
  41a672:	push   ecx
  41a673:	std    
  41a674:	adc    al,0xe0
  41a676:	mov    eax,ds:0xfebfe3fc
  41a67b:	clc    
  41a67c:	fsub   st(1),st
  41a67e:	and    al,0xa6
  41a680:	or     eax,0x1b2b43a1
  41a685:	popf   
  41a686:	lahf   
  41a687:	fwait
  41a688:	in     al,0xfe
  41a68a:	or     eax,0x9a9217f0
  41a68f:	into   
  41a690:	iret   
  41a691:	mov    edi,0x220a3fe9
  41a696:	pop    esp
  41a697:	aam    0xaa
  41a699:	mov    eax,ds:0x22dd4465
  41a69e:	sbb    eax,0x1f5f760c
  41a6a3:	outs   dx,BYTE PTR ds:[esi]
  41a6a4:	pop    ecx
  41a6a5:	scas   al,BYTE PTR es:[edi]
  41a6a6:	and    al,0x50
  41a6a8:	bound  esi,QWORD PTR [ebp+0x2094aacc]
  41a6ae:	sub    BYTE PTR [edi-0x5],bh
  41a6b1:	jle    0x41a6d1
  41a6b3:	ret    
  41a6b4:	lods   al,BYTE PTR ds:[esi]
  41a6b5:	es ins DWORD PTR es:[edi],dx
  41a6b7:	fsubr  DWORD PTR [ebp-0x4402244b]
  41a6bd:	mov    ebx,0x9952a48f
  41a6c2:	dec    ebp
  41a6c3:	pop    ds
  41a6c4:	mov    edx,0x87b6fb
  41a6c9:	jmp    0xbb77:0xe715b585
  41a6d0:	repnz add DWORD PTR [eax-0x10],eax
  41a6d4:	jns    0x41a6e0
  41a6d6:	in     eax,dx
  41a6d7:	sub    eax,0x1f79feac
  41a6dc:	mov    BYTE PTR [eax-0x3f],dh
  41a6df:	in     al,0x24
  41a6e1:	xchg   edx,eax
  41a6e2:	das    
  41a6e3:	push   edx
  41a6e4:	lock cld 
  41a6e6:	adc    esp,DWORD PTR [edi+0x52c96358]
  41a6ec:	in     eax,0x9d
  41a6ee:	aaa    
  41a6ef:	retf   0x1636
  41a6f2:	jg     0x41a696
  41a6f4:	xchg   DWORD PTR [ecx+eax*4+0x51],eax
  41a6f8:	xchg   edi,eax
  41a6f9:	ja     0x41a717
  41a6fb:	in     al,dx
  41a6fc:	xor    esp,ecx
  41a6fe:	inc    esi
  41a6ff:	sub    bh,BYTE PTR [eax-0x776a30ef]
  41a705:	cwde   
  41a706:	xchg   ebp,eax
  41a707:	push   ebp
  41a708:	test   DWORD PTR [edx-0x22],esp
  41a70b:	mov    gs,esi
  41a70d:	fcomip st,st(0)
  41a70f:	cwde   
  41a710:	sbb    DWORD PTR [edi],esi
  41a712:	pop    ebx
  41a713:	sub    DWORD PTR [ecx+0x16],0xffffffbc
  41a717:	sbb    esp,0x57
  41a71a:	into   
  41a71b:	cmp    al,0xd6
  41a71d:	mov    dh,0xe9
  41a71f:	xchg   ebp,eax
  41a720:	push   es
  41a721:	sub    DWORD PTR [ecx+0x5d],esp
  41a724:	ins    DWORD PTR es:[edi],dx
  41a725:	push   0x8af468a6
  41a72a:	jp     0x41a741
  41a72c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a72d:	add    BYTE PTR [eax],al
  41a72f:	add    BYTE PTR [eax],al
  41a731:	add    BYTE PTR [esi+0x6f],cl
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	hlt    
  41a73f:	jbe    0x41a7be
  41a741:	test   ax,0x123
  41a745:	add    bl,dh
  41a747:	add    al,0x0
  41a749:	add    BYTE PTR [ecx+0xb],dh
  41a74c:	scas   al,BYTE PTR es:[edi]
  41a74d:	pop    es
  41a74e:	das    
  41a74f:	mov    dl,0x85
  41a751:	in     eax,dx
  41a752:	jp     0x41a6db
  41a754:	fs xchg esi,eax
  41a756:	ret    
  41a757:	adc    edx,DWORD PTR es:[edi-0x2c]
  41a75b:	call   0x7e2fb177
  41a760:	fdivr  QWORD PTR [edx-0x42]
  41a763:	mov    cl,0x2e
  41a765:	sbb    eax,edx
  41a767:	ja     0x41a7d6
  41a769:	lods   eax,DWORD PTR ds:[esi]
  41a76a:	push   edi
  41a76b:	mov    fs,WORD PTR [ebp+0x73]
  41a76e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a76f:	sbb    BYTE PTR [edx],ch
  41a771:	mov    ds:0xb58995d8,al
  41a776:	xor    DWORD PTR [esi],ebp
  41a778:	mov    es,WORD PTR [eax-0x26]
  41a77b:	mov    ds:0xa17b6979,eax
  41a780:	fisttp QWORD PTR [ecx+0x3562d47]
  41a786:	sub    esp,DWORD PTR [ecx+0x75]
  41a789:	(bad)  
  41a78a:	cld    
  41a78b:	cmc    
  41a78c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a78d:	sbb    BYTE PTR [ebp-0x46],dh
  41a790:	inc    ecx
  41a791:	and    BYTE PTR [edx-0x2163c0f0],ah
  41a797:	fmul   DWORD PTR [ecx-0x57]
  41a79a:	mov    ch,0x52
  41a79c:	sbb    al,0x1a
  41a79e:	jecxz  0x41a7ad
  41a7a0:	dec    edi
  41a7a1:	repnz push edi
  41a7a3:	xor    eax,0xc195bd86
  41a7a8:	adc    BYTE PTR [edi],cl
  41a7aa:	fdiv   QWORD PTR [eax+0x5a]
  41a7ad:	jo     0x41a816
  41a7af:	cmp    eax,0xa3386db6
  41a7b4:	inc    edi
  41a7b5:	(bad)  
  41a7b6:	stos   DWORD PTR es:[edi],eax
  41a7b7:	imul   edx,DWORD PTR [ebp-0x17],0x2ba0c71a
  41a7be:	jp     0x41a80e
  41a7c0:	shl    BYTE PTR [ebp-0x6d],1
  41a7c3:	pop    ss
  41a7c4:	dec    ebp
  41a7c5:	and    eax,DWORD PTR [eax-0x60]
  41a7c8:	mov    dl,0xad
  41a7ca:	mov    bl,0x4a
  41a7cc:	scas   al,BYTE PTR es:[edi]
  41a7cd:	mov    dh,0x8a
  41a7cf:	out    0xa6,al
  41a7d1:	cmp    al,0xdd
  41a7d3:	(bad)
  41a7d6:	dec    esi
  41a7d7:	les    ecx,FWORD PTR [esi]
  41a7d9:	leave  
  41a7da:	pop    ebx
  41a7db:	out    0xe9,eax
  41a7dd:	jnp    0x41a81d
  41a7df:	xchg   BYTE PTR [esi],al
  41a7e1:	fs in  al,dx
  41a7e3:	push   edx
  41a7e4:	ins    DWORD PTR es:[edi],dx
  41a7e5:	xor    al,0x8e
  41a7e7:	sub    esi,edx
  41a7e9:	hlt    
  41a7ea:	adc    esi,esi
  41a7ec:	pop    ss
  41a7ed:	aad    0x21
  41a7ef:	xor    eax,0xb204be82
  41a7f4:	enter  0x8eb2,0xac
  41a7f8:	jns    0x41a7d0
  41a7fa:	sbb    dl,al
  41a7fc:	jno    0x41a7db
  41a7fe:	out    0x28,al
  41a800:	jbe    0x41a7c0
  41a802:	jo     0x41a867
  41a804:	int    0xeb
  41a806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a807:	call   0x5b4d:0xedb92892
  41a80e:	xchg   ebx,eax
  41a80f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a810:	mov    cx,0xbc3e
  41a814:	fldenv ds:0x8e0d470c
  41a81a:	or     BYTE PTR [edx+0x19fcea26],dh
  41a820:	arpl   WORD PTR [edx-0x7e2e4cf8],dx
  41a826:	xchg   ecx,eax
  41a827:	clc    
  41a828:	gs adc al,0xc5
  41a82b:	xor    esi,DWORD PTR [ebp-0x4f]
  41a82e:	mov    BYTE PTR [ecx],bh
  41a830:	pop    esp
  41a831:	js     0x41a821
  41a833:	mov    ebp,0x90487edf
  41a838:	mov    esi,0x679745e5
  41a83d:	sbb    BYTE PTR [eax+0x16785c4],ch
  41a843:	pop    ss
  41a844:	int    0xba
  41a846:	or     cl,BYTE PTR [ecx+0x65]
  41a849:	daa    
  41a84a:	loopne 0x41a861
  41a84c:	gs jnp 0x41a86e
  41a84f:	xchg   ebp,eax
  41a850:	ret    
  41a851:	outs   dx,BYTE PTR ds:[esi]
  41a852:	pop    edx
  41a853:	push   ds
  41a854:	jae    0x41a899
  41a856:	cld    
  41a857:	pushf  
  41a858:	xchg   BYTE PTR [eax],bh
  41a85a:	(bad)  
  41a85b:	push   edx
  41a85c:	or     eax,0x77e330b4
  41a861:	jne    0x41a852
  41a863:	sub    ebp,DWORD PTR [edi-0x45]
  41a866:	xchg   esi,eax
  41a867:	push   esp
  41a868:	jp     0x41a8dd
  41a86a:	mov    ch,BYTE PTR [esi+0x5cc317bf]
  41a870:	lods   eax,DWORD PTR ds:[esi]
  41a871:	and    ah,BYTE PTR [esp+ebp*1-0x45c1d063]
  41a878:	popa   
  41a879:	jl     0x41a863
  41a87b:	mov    WORD PTR [edi],gs
  41a87d:	push   es
  41a87e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a87f:	mov    dl,BYTE PTR [ebp-0x51]
  41a882:	scas   eax,DWORD PTR es:[edi]
  41a883:	imul   esi,ecx,0x90270176
  41a889:	repz add cl,BYTE PTR [ebx-0x599c8236]
  41a890:	cmp    BYTE PTR [ebp+eiz*4-0xbfa9758],bl
  41a897:	int3   
  41a898:	adc    eax,0xf4afa5c0
  41a89d:	mov    ah,0xfc
  41a89f:	shl    esi,cl
  41a8a1:	pop    esi
  41a8a2:	mov    cl,0x51
  41a8a4:	pop    eax
  41a8a5:	mov    fs,esi
  41a8a7:	jmp    0x41a875
  41a8a9:	test   al,0x89
  41a8ab:	or     edi,DWORD PTR [ecx]
  41a8ad:	aad    0xa4
  41a8af:	xchg   esp,eax
  41a8b0:	retf   
  41a8b1:	dec    ebp
  41a8b2:	or     al,ch
  41a8b4:	loope  0x41a8fc
  41a8b6:	jno    0x41a86a
  41a8b8:	pop    eax
  41a8b9:	push   0x9ba6ce28
  41a8be:	inc    ecx
  41a8bf:	inc    ecx
  41a8c0:	loopne 0x41a919
  41a8c2:	xchg   DWORD PTR ss:[ebp-0x42],ebx
  41a8c6:	dec    edi
  41a8c7:	jp     0x41a8cb
  41a8c9:	lea    esp,[ebx-0x50]
  41a8cc:	fwait
  41a8cd:	icebp  
  41a8ce:	loop   0x41a939
  41a8d0:	mov    ds:0xcb0b4868,eax
  41a8d5:	push   edx
  41a8d6:	pusha  
  41a8d7:	cmp    edx,DWORD PTR [ebx-0xc]
  41a8da:	mov    eax,ds:0x4999f12b
  41a8df:	mov    al,ds:0x35a104a4
  41a8e4:	cmp    ebx,esi
  41a8e6:	cli    
  41a8e7:	inc    esp
  41a8e8:	ffreep st(1)
  41a8ea:	sub    BYTE PTR [ebx-0x4f],dl
  41a8ed:	pop    ebp
  41a8ee:	sar    BYTE PTR [ecx+eax*4+0x1c2ca008],cl
  41a8f5:	mov    dh,0x42
  41a8f7:	outs   dx,DWORD PTR ds:[esi]
  41a8f8:	and    eax,0xa428f28f
  41a8fd:	in     eax,dx
  41a8fe:	in     eax,0x5c
  41a900:	ss mov esp,0x40d6e09e
  41a906:	add    DWORD PTR [esi+eax*8],ecx
  41a909:	pushf  
  41a90a:	cdq    
  41a90b:	adc    cl,cl
  41a90d:	and    ecx,DWORD PTR [ecx]
  41a90f:	fiadd  WORD PTR [esi-0x2a]
  41a912:	push   ds
  41a913:	xchg   esp,eax
  41a914:	sbb    ebp,DWORD PTR [ebx+0x3677fb96]
  41a91a:	outs   dx,DWORD PTR ds:[esi]
  41a91b:	fcomp  QWORD PTR [edi]
  41a91d:	push   ss
  41a91e:	mov    ah,0x5f
  41a920:	adc    al,0xda
  41a922:	into   
  41a923:	pop    es
  41a924:	bound  esp,QWORD PTR [esi+eiz*4]
  41a927:	hlt    
  41a928:	xor    DWORD PTR [ebp-0x14],esp
  41a92b:	fcomp  DWORD PTR [esi+edx*1-0xa]
  41a92f:	pop    es
  41a930:	outs   dx,DWORD PTR ds:[esi]
  41a931:	loop   0x41a974
  41a933:	fld    TBYTE PTR [ecx+0x5afd3f10]
  41a939:	mov    DWORD PTR ds:0x4d5a9841,edi
  41a93f:	vmovlps xmm0,xmm7,QWORD PTR [ebx]
  41a943:	mov    esp,0x7519f716
  41a948:	cmp    ah,BYTE PTR [esi+0xb]
  41a94b:	imul   ebx,ebx,0x5c01d552
  41a951:	sub    ah,BYTE PTR [edx-0x72]
  41a954:	and    al,0xe1
  41a956:	imul   edi,ecx,0x83f5d586
  41a95c:	nop
  41a95d:	js     0x41a9c8
  41a95f:	imul   esi,ecx,0xfffffff2
  41a962:	(bad)  
  41a964:	retw   
  41a966:	and    cl,cl
  41a968:	inc    edx
  41a969:	or     DWORD PTR [edi],0x1a
  41a96c:	mov    al,ds:0x3aba1cd
  41a971:	push   0xffffffdf
  41a973:	in     al,0x54
  41a975:	adc    DWORD PTR [edi],edi
  41a977:	aad    0x4b
  41a979:	pop    ebp
  41a97a:	iret   
  41a97b:	je     0x41a9d6
  41a97d:	cs push ds
  41a97f:	jp     0x41a92e
  41a981:	or     BYTE PTR [edx],al
  41a983:	fild   WORD PTR [esi]
  41a985:	xor    cl,al
  41a987:	cdq    
  41a988:	cmp    al,0xc8
  41a98a:	arpl   WORD PTR [ebp+0x6c],dx
  41a98d:	cmp    ch,BYTE PTR [ecx-0x567000a0]
  41a993:	mov    edx,DWORD PTR [eax]
  41a995:	dec    ebx
  41a996:	fisub  WORD PTR [edx]
  41a998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a999:	mov    al,0xb
  41a99b:	pop    ebp
  41a99c:	test   DWORD PTR [ebp+esi*8-0x32],ecx
  41a9a0:	xchg   ecx,eax
  41a9a1:	repnz sbb DWORD PTR ds:0xa84972e6,0x8c4f5a52
  41a9ac:	mov    al,0xe5
  41a9ae:	mov    ah,0xa2
  41a9b0:	inc    esp
  41a9b1:	inc    ebp
  41a9b2:	hlt    
  41a9b3:	adc    DWORD PTR [eax-0x7e],0xffffffa7
  41a9b7:	(bad)  
  41a9b8:	adc    eax,0xe96d69ea
  41a9bd:	ret    0xb616
  41a9c0:	lea    esp,[esi+0x3b32850e]
  41a9c6:	sub    BYTE PTR [edx+0x2ddd92b2],cl
  41a9cc:	adc    bl,BYTE PTR [esi-0x4]
  41a9cf:	test   DWORD PTR [ecx],ecx
  41a9d1:	jo     0x41aa24
  41a9d3:	outs   dx,DWORD PTR ds:[esi]
  41a9d4:	mov    ds:0xf57ac052,al
  41a9d9:	int3   
  41a9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9db:	pop    ds
  41a9dc:	mov    bh,0x20
  41a9de:	mov    DWORD PTR [eax+0x15626f53],esp
  41a9e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e5:	(bad)  
  41a9e6:	sbb    esi,DWORD PTR [ebx+0x5dd58a27]
  41a9ec:	iret   
  41a9ed:	shl    DWORD PTR [edi+0x14],cl
  41a9f0:	push   edx
  41a9f1:	mov    DWORD PTR [ecx-0x21],eax
  41a9f4:	call   DWORD PTR [eax-0x47]
  41a9f7:	xchg   BYTE PTR [eax],dh
  41a9f9:	out    dx,eax
  41a9fa:	pusha  
  41a9fb:	pushf  
  41a9fc:	out    0xe,eax
  41a9fe:	fst    QWORD PTR [ebp+0x31]
  41aa01:	jle    0x41a9a6
  41aa03:	call   0xb4cb:0x7c89c58f
  41aa0a:	dec    eax
  41aa0b:	and    BYTE PTR [esi],dl
  41aa0d:	add    ecx,esp
  41aa0f:	or     DWORD PTR [ecx+0x3218078e],edx
  41aa15:	aas    
  41aa16:	out    dx,al
  41aa17:	jmp    0x1c1fd20d
  41aa1c:	cmp    DWORD PTR [edx+0x75e47fc9],edi
  41aa22:	cmp    al,0x84
  41aa24:	pop    ebp
  41aa25:	loop   0x41aa7b
  41aa27:	lock fst QWORD PTR [ebp+0x50]
  41aa2b:	xchg   edx,eax
  41aa2c:	push   eax
  41aa2d:	sahf   
  41aa2e:	in     al,0xda
  41aa30:	pop    es
  41aa31:	xlat   BYTE PTR ds:[ebx]
  41aa32:	inc    esp
  41aa33:	or     esi,DWORD PTR [ebx-0x4c]
  41aa36:	mov    al,0x74
  41aa38:	mov    ds:0xb7f13674,al
  41aa3d:	(bad)
  41aa40:	cdq    
  41aa41:	xor    esp,DWORD PTR ds:0x5f59f3f0
  41aa47:	mov    eax,ds:0x5b4db9d2
  41aa4c:	imul   ecx,DWORD PTR [ebp+0x0],0xc00619ce
  41aa53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa54:	aam    0x6c
  41aa56:	mov    cl,0x72
  41aa58:	adc    BYTE PTR [eax+0x1e],dh
  41aa5b:	inc    edx
  41aa5c:	int    0xb5
  41aa5e:	cwde   
  41aa5f:	idiv   al
  41aa61:	dec    edx
  41aa62:	sbb    eax,0x8a4e6cf6
  41aa67:	jl     0x41aa93
  41aa69:	mov    al,ds:0x69a76274
  41aa6e:	cdq    
  41aa6f:	out    0x68,al
  41aa71:	jnp    0x41aae7
  41aa73:	mov    es,WORD PTR [ebx]
  41aa75:	mov    ecx,0x978d4fef
  41aa7a:	add    eax,DWORD PTR [ebx-0x46]
  41aa7d:	xor    BYTE PTR [ecx-0x2f],bl
  41aa80:	sub    al,0xf7
  41aa82:	fadd   st,st(2)
  41aa84:	std    
  41aa85:	or     al,0x71
  41aa87:	cmp    eax,0x9f8ae0a7
  41aa8c:	xor    esi,DWORD PTR [ecx+0x29093eb]
  41aa92:	and    al,ch
  41aa94:	ja     0x41aacb
  41aa96:	pop    eax
  41aa97:	ret    0x3813
  41aa9a:	retf   0x3ffc
  41aa9d:	push   edx
  41aa9e:	ret    0xc32c
  41aaa1:	and    eax,0x9e20f8eb
  41aaa6:	pop    edi
  41aaa7:	xchg   ebx,eax
  41aaa8:	outs   dx,BYTE PTR ds:[esi]
  41aaa9:	mov    esp,0x8c5acb02
  41aaae:	sar    BYTE PTR [ebp*8+0x13671df9],0x4d
  41aab6:	pop    esp
  41aab7:	xor    bl,al
  41aab9:	jo     0x41aac9
  41aabb:	xor    ecx,edx
  41aabd:	stos   DWORD PTR es:[edi],eax
  41aabe:	pop    ss
  41aabf:	sbb    al,0x2b
  41aac1:	push   esp
  41aac2:	xor    eax,0x89b6490f
  41aac7:	push   eax
  41aac8:	fs xchg ebx,eax
  41aaca:	mov    bh,BYTE PTR [esi+0x3c]
  41aacd:	(bad)  
  41aace:	je     0x41ab33
  41aad0:	cmp    DWORD PTR [si-0x331b],ebp
  41aad5:	push   0xa764d8fc
  41aada:	shr    DWORD PTR [ebp+0x6970e3a7],1
  41aae0:	ins    BYTE PTR es:[edi],dx
  41aae1:	ss jbe 0x41aa72
  41aae4:	das    
  41aae5:	mov    edx,0x9740ee35
  41aaea:	pop    edx
  41aaeb:	cmp    BYTE PTR [edi+0x2],al
  41aaee:	sub    ah,0xd
  41aaf1:	xchg   ebp,eax
  41aaf2:	mov    al,0xa9
  41aaf4:	sub    al,0xc0
  41aaf6:	pop    ecx
  41aaf7:	adc    DWORD PTR [eax+0x7dd17135],ebx
  41aafd:	pop    ss
  41aafe:	sbb    ecx,DWORD PTR [eax-0x37238ead]
  41ab04:	adc    eax,0x8995e45f
  41ab09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab0b:	mov    eax,ds:0xbf4e963a
  41ab10:	ficom  WORD PTR [esi-0x42]
  41ab13:	add    ebx,DWORD PTR [esi-0x1b]
  41ab16:	mov    esp,0x28c9bd74
  41ab1b:	sub    al,0x10
  41ab1d:	push   cs
  41ab1e:	pusha  
  41ab1f:	push   edx
  41ab20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab21:	retf   0x7041
  41ab24:	outs   dx,DWORD PTR ds:[esi]
  41ab25:	xor    al,0x52
  41ab27:	test   DWORD PTR [ecx],0x721ac0bd
  41ab2d:	xchg   esi,eax
  41ab2e:	cmp    BYTE PTR [eax+0x3],0x55
  41ab32:	mov    DWORD PTR [edx],ecx
  41ab34:	mov    bh,0x57
  41ab36:	xor    DWORD PTR [ebp-0x7c36cb57],ecx
  41ab3c:	add    cl,0x39
  41ab3f:	in     eax,dx
  41ab40:	jecxz  0x41ab30
  41ab42:	or     cl,BYTE PTR ds:0x23c3865
  41ab48:	mov    cl,0xff
  41ab4a:	sti    
  41ab4b:	iret   
  41ab4c:	push   0xb4c04581
  41ab51:	mov    ds:0x2417b9da,al
  41ab56:	pop    edi
  41ab57:	shr    DWORD PTR [eax+0x1a],0x67
  41ab5b:	stc    
  41ab5c:	add    bh,cl
  41ab5e:	lods   eax,DWORD PTR ds:[esi]
  41ab5f:	rcl    BYTE PTR [esi-0x2da698e2],1
  41ab65:	ins    DWORD PTR es:[edi],dx
  41ab66:	jno    0x41ab3a
  41ab68:	pop    ecx
  41ab69:	pop    ecx
  41ab6a:	fnstcw WORD PTR [ecx]
  41ab6c:	mov    ebx,DWORD PTR [ebx]
  41ab6e:	inc    esi
  41ab6f:	hlt    
  41ab70:	clts   
  41ab72:	imul   edi,edx,0x75
  41ab75:	imul   ebp,DWORD PTR [ecx+0x6f86b93e],0xffffff81
  41ab7c:	mov    al,ds:0x15d50fcc
  41ab81:	mov    edi,0x58dcbfad
  41ab86:	jmp    0xa71c:0xc189642b
  41ab8d:	neg    BYTE PTR [edi+0x60]
  41ab90:	or     esi,0xffffffce
  41ab93:	retf   0x25e0
  41ab96:	fidiv  WORD PTR [edi]
  41ab98:	mov    ebx,0xddfd5be7
  41ab9d:	xor    al,0xad
  41ab9f:	fist   WORD PTR [ebp+edx*1-0x41]
  41aba3:	or     dh,ch
  41aba5:	push   ecx
  41aba6:	jge    0x41abad
  41aba8:	in     eax,dx
  41aba9:	daa    
  41abaa:	jbe    0x41ab47
  41abac:	dec    ebp
  41abad:	vpsrld xmm7,xmm2,xmm6
  41abb1:	xchg   ecx,eax
  41abb2:	ror    BYTE PTR [ebx-0x10648100],1
  41abb8:	mov    bh,0x6f
  41abba:	test   DWORD PTR [edi+0x23],0x2bc0f47
  41abc1:	aaa    
  41abc2:	neg    BYTE PTR [ebx-0x17]
  41abc5:	mov    dh,BYTE PTR [ecx-0x34]
  41abc8:	push   ebx
  41abc9:	rol    BYTE PTR [ecx-0x18],cl
  41abcc:	cdq    
  41abcd:	stos   DWORD PTR es:[edi],eax
  41abce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abcf:	pop    ebx
  41abd0:	addr16 or eax,ebp
  41abd3:	mov    ds:0x5a397e34,eax
  41abd8:	cmp    ch,BYTE PTR [edi-0x8]
  41abdb:	push   esp
  41abdc:	mov    ecx,0xcc883e29
  41abe1:	push   esp
  41abe2:	js     0x41ac3b
  41abe4:	push   esp
  41abe5:	inc    ebp
  41abe6:	mov    edi,0x6962a57d
  41abeb:	in     al,0x89
  41abed:	adc    cl,BYTE PTR [edx+0x43aaab81]
  41abf3:	inc    eax
  41abf4:	pop    edx
  41abf5:	nop
  41abf6:	out    0x23,al
  41abf8:	fs inc edi
  41abfa:	xchg   esi,eax
  41abfb:	or     ah,BYTE PTR [ecx+0x53037f33]
  41ac01:	fbld   TBYTE PTR ds:0xd72cc9cd
  41ac07:	int    0x6f
  41ac09:	sub    bl,BYTE PTR [edi+0x77]
  41ac0c:	fisttp DWORD PTR [edi]
  41ac0e:	or     DWORD PTR [ecx+edx*8-0x71],edx
  41ac12:	adc    DWORD PTR [ebp-0x3d],edi
  41ac15:	sbb    esp,ebp
  41ac17:	xor    DWORD PTR [eax],esp
  41ac19:	les    eax,FWORD PTR [ebp+0x59962f8e]
  41ac1f:	jb     0x41ac20
  41ac21:	icebp  
  41ac22:	mov    ecx,0x9db48fa0
  41ac27:	add    al,0x9
  41ac29:	rcr    DWORD PTR [esi+0x2f],cl
  41ac2c:	mov    esp,0x25e99ee3
  41ac31:	sbb    ecx,DWORD PTR [edx]
  41ac33:	sub    al,0x22
  41ac35:	mov    ds:0x2e0b5182,eax
  41ac3a:	sti    
  41ac3b:	scas   eax,DWORD PTR es:[edi]
  41ac3c:	int    0x0
  41ac3e:	add    BYTE PTR [eax],al
  41ac40:	add    BYTE PTR [eax],al
  41ac42:	dec    ebp
  41ac43:	dec    ebp
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	or     bl,BYTE PTR [ebp+0x289c56dc]
  41ac54:	add    DWORD PTR [eax],eax
  41ac56:	repz add al,0x0
  41ac59:	add    BYTE PTR [ecx-0x7e],bl
  41ac5c:	mov    BYTE PTR [ebp-0x16],dh
  41ac5f:	jl     0x41acda
  41ac61:	scas   al,BYTE PTR es:[edi]
  41ac62:	mov    BYTE PTR [esi+0x74b333d5],ch
  41ac68:	jb     0x41ac70
  41ac6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac6b:	lea    ecx,[eax+ebx*4-0x7b]
  41ac6f:	icebp  
  41ac70:	jae    0x41ac6c
  41ac72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac73:	(bad)  
  41ac74:	rol    BYTE PTR [eax-0x1c],cl
  41ac77:	inc    edx
  41ac78:	(bad)  
  41ac79:	xor    al,BYTE PTR [esi-0x52d5499]
  41ac7f:	push   esp
  41ac80:	adc    esp,DWORD PTR [ebx-0x14]
  41ac83:	sub    eax,0x53c25bf9
  41ac88:	sahf   
  41ac89:	pop    edi
  41ac8a:	inc    edx
  41ac8b:	imul   ebp,DWORD PTR [ebx-0x42],0x5acefe9c
  41ac92:	gs je  0x41acd9
  41ac95:	pusha  
  41ac96:	pop    ss
  41ac97:	xchg   edi,eax
  41ac98:	ins    BYTE PTR es:[edi],dx
  41ac99:	push   ecx
  41ac9a:	xor    eax,0x52560f1e
  41ac9f:	fld    TBYTE PTR [edx-0x4f]
  41aca2:	sahf   
  41aca3:	push   edx
  41aca4:	push   ds
  41aca5:	clc    
  41aca6:	push   cs
  41aca7:	mov    al,0x29
  41aca9:	sbb    eax,0x40a12aa6
  41acae:	mov    ecx,0x3dcdefab
  41acb3:	loopne 0x41acff
  41acb5:	add    eax,0x42b34c3e
  41acba:	mov    bh,0xde
  41acbc:	jmp    0xac17f6a1
  41acc1:	sbb    al,0xd0
  41acc3:	or     al,0xa4
  41acc5:	in     eax,0xe0
  41acc7:	xchg   ecx,eax
  41acc9:	mov    ah,0xb6
  41accb:	push   0x874975d8
  41acd0:	adc    al,0xf2
  41acd2:	outs   dx,BYTE PTR ds:[esi]
  41acd3:	(bad)  
  41acd4:	xchg   ecx,eax
  41acd5:	mov    al,0x10
  41acd7:	out    0x4,al
  41acd9:	cmp    eax,DWORD PTR [edx+0x4b]
  41acdc:	sbb    BYTE PTR [edx-0x21],al
  41acdf:	cmp    ebx,DWORD PTR ds:0x6947a731
  41ace5:	cmp    dh,BYTE PTR [ebp+0x2f]
  41ace8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace9:	pop    ebx
  41acea:	dec    edx
  41aceb:	in     al,dx
  41acec:	or     eax,0x96a198df
  41acf1:	cmp    esi,DWORD PTR [eax]
  41acf3:	dec    edx
  41acf4:	add    eax,0xabdb0b17
  41acf9:	jp     0x41ad18
  41acfb:	jp     0x41ad25
  41acfd:	push   edx
  41acfe:	and    cl,bl
  41ad00:	cmp    esp,DWORD PTR [eax-0x18a47e0c]
  41ad06:	pop    eax
  41ad07:	scas   eax,DWORD PTR es:[edi]
  41ad08:	in     al,0x6a
  41ad0a:	or     ecx,ebx
  41ad0c:	test   eax,0x902d3054
  41ad11:	imul   edi,DWORD PTR [esi+0x6f],0xebdd2083
  41ad18:	and    eax,0x370e3aab
  41ad1d:	scas   eax,DWORD PTR es:[edi]
  41ad1e:	sbb    BYTE PTR [ebx],dh
  41ad20:	aad    0x62
  41ad22:	push   ecx
  41ad23:	push   esp
  41ad24:	int    0x4f
  41ad26:	stc    
  41ad27:	pop    edi
  41ad28:	call   DWORD PTR [edi+esi*1-0x7404150d]
  41ad2f:	lods   eax,DWORD PTR ds:[esi]
  41ad30:	mov    dh,bl
  41ad32:	add    BYTE PTR [ecx+0x72],0x9c
  41ad36:	ret    
  41ad37:	inc    ebp
  41ad38:	push   ebx
  41ad39:	daa    
  41ad3a:	pop    esi
  41ad3b:	or     eax,0x2f6aed53
  41ad40:	xchg   ebx,eax
  41ad41:	xchg   ebp,eax
  41ad42:	ret    0xed3b
  41ad45:	jp     0x41ad43
  41ad47:	pop    edx
  41ad48:	call   0x13cd4fee
  41ad4d:	xor    edi,esp
  41ad4f:	pop    edi
  41ad50:	les    edx,FWORD PTR [eax-0x7]
  41ad53:	ds lock inc edi
  41ad56:	dec    eax
  41ad57:	aaa    
  41ad58:	addr16 dec eax
  41ad5a:	push   ecx
  41ad5b:	adc    DWORD PTR [ebp+0x10eed25a],esp
  41ad61:	fidiv  DWORD PTR [ebp+0x341bf2c9]
  41ad67:	sbb    dh,dh
  41ad69:	js     0x41add7
  41ad6b:	sub    DWORD PTR [edx-0x70],esp
  41ad6e:	or     BYTE PTR [eax+0x27e6d408],0x22
  41ad75:	xchg   esi,eax
  41ad76:	sub    ebp,DWORD PTR [edx]
  41ad78:	xor    eax,0x388174fe
  41ad7d:	xchg   ecx,eax
  41ad7e:	sbb    dh,cl
  41ad80:	mov    ecx,0x64f20ba0
  41ad85:	push   0xffffffa9
  41ad87:	inc    ecx
  41ad88:	hlt    
  41ad89:	ja     0x41ad6a
  41ad8b:	or     eax,0x6720ba2
  41ad90:	mov    ds:0x1d04abee,al
  41ad95:	mov    ebx,0xdbc54ba5
  41ad9a:	mov    BYTE PTR [ebx+0x76],dh
  41ad9d:	retf   
  41ad9e:	mov    ebp,DWORD PTR [edi+0x537deb52]
  41ada4:	inc    esi
  41ada5:	dec    esp
  41ada6:	sub    DWORD PTR [eax],ecx
  41ada8:	retf   0x90c2
  41adab:	and    BYTE PTR [edi],bl
  41adad:	js     0x41ad69
  41adaf:	cwde   
  41adb0:	push   edx
  41adb1:	xor    edi,DWORD PTR [edi]
  41adb3:	mov    cl,0x4e
  41adb5:	mov    ds:0xdc1e54be,eax
  41adba:	mov    cl,0xf9
  41adbd:	scas   al,BYTE PTR es:[edi]
  41adbe:	pop    esp
  41adbf:	fdiv   DWORD PTR [eax+ebx*8]
  41adc2:	shl    DWORD PTR [ebp-0x6f],cl
  41adc5:	int3   
  41adc6:	sub    DWORD PTR [eax+ebx*1],0xffffffa7
  41adca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adcb:	std    
  41adcc:	fadd   QWORD PTR [edi-0x4]
  41adcf:	aad    0x8e
  41add1:	mov    al,0x36
  41add3:	push   ecx
  41add4:	sbb    DWORD PTR [esi],ebp
  41add6:	ja     0x41ad8f
  41add8:	jnp    0x41ad8a
  41adda:	scas   al,BYTE PTR es:[edi]
  41addb:	add    al,0xc6
  41addd:	mov    esp,0x136af16
  41ade2:	jle    0x41ae5c
  41ade4:	popf   
  41ade5:	cli    
  41ade6:	and    BYTE PTR [edx+edx*1+0x3b],cl
  41adea:	adc    eax,0x6bd350b3
  41adef:	mov    ah,0xc4
  41adf1:	dec    edi
  41adf2:	in     eax,dx
  41adf3:	(bad)  
  41adf5:	jge    0x41ae48
  41adf7:	arpl   WORD PTR [edi],dx
  41adf9:	lods   al,BYTE PTR ds:[esi]
  41adfa:	(bad)  
  41adfb:	std    
  41adfc:	mov    dl,BYTE PTR [edx-0x2970ff70]
  41ae02:	mov    eax,DWORD PTR [edx+0x64]
  41ae05:	xchg   ebp,eax
  41ae06:	and    al,0x2d
  41ae08:	push   edx
  41ae09:	sub    eax,0xbda41f76
  41ae0e:	leave  
  41ae0f:	push   ebx
  41ae10:	lea    ebp,[esi-0xe]
  41ae13:	cmp    al,0x41
  41ae15:	daa    
  41ae16:	pop    ebx
  41ae17:	pop    ds
  41ae18:	mov    ah,0xe9
  41ae1a:	adc    esi,DWORD PTR [ebx-0xa]
  41ae1d:	bound  ecx,QWORD PTR [edx]
  41ae1f:	cmp    edi,DWORD PTR [edi+eax*8-0x36ff0878]
  41ae26:	test   BYTE PTR [edi],bl
  41ae28:	mov    cl,0x9d
  41ae2a:	mov    ecx,DWORD PTR [edx+0x3fabefc4]
  41ae30:	shl    DWORD PTR [ecx-0x23],0x71
  41ae34:	mov    ecx,0x4a888daa
  41ae39:	add    BYTE PTR [eax-0x10],0x94
  41ae3d:	jg     0x41ae7a
  41ae3f:	and    eax,0x8c84be0d
  41ae44:	mov    ecx,0xfd4656bc
  41ae49:	sbb    dh,al
  41ae4b:	adc    DWORD PTR [ebp+0x15],eax
  41ae4e:	add    ebp,DWORD PTR [ebx+0x74]
  41ae51:	pop    ds
  41ae52:	aad    0x4e
  41ae54:	outs   dx,BYTE PTR ds:[esi]
  41ae55:	test   eax,0x145239f0
  41ae5a:	jle    0x41ade7
  41ae5c:	shr    cl,1
  41ae5e:	jl     0x41aed1
  41ae60:	fwait
  41ae61:	and    eax,0x34f1c1fc
  41ae66:	and    al,BYTE PTR [ecx-0x4d]
  41ae69:	pop    ss
  41ae6a:	mov    ds:0xdf2e68ef,eax
  41ae6f:	dec    edi
  41ae70:	mov    esi,0xdedd6088
  41ae75:	pop    ebp
  41ae76:	mov    ecx,0x2aa2dab1
  41ae7b:	mov    edi,0x3e4201bf
  41ae80:	or     al,0x57
  41ae82:	lahf   
  41ae83:	pop    ss
  41ae84:	or     BYTE PTR ds:0xe4357f46,dh
  41ae8a:	jge    0x41ae69
  41ae8c:	cmp    dl,BYTE PTR [ecx+0x6b]
  41ae8f:	jns    0x41ae65
  41ae91:	mov    edi,0xfcd1a6f5
  41ae96:	dec    ebp
  41ae97:	dec    esp
  41ae98:	(bad)  
  41ae99:	std    
  41ae9a:	sub    BYTE PTR [esi],ch
  41ae9c:	bound  ebx,QWORD PTR [ecx+0xf7e1e6d]
  41aea2:	pop    es
  41aea3:	mov    dh,0xc9
  41aea5:	cdq    
  41aea6:	jae    0x41aedd
  41aea8:	dec    edi
  41aea9:	shr    BYTE PTR [edx+0x22a17810],1
  41aeaf:	push   ss
  41aeb0:	retf   0x4e77
  41aeb3:	adc    BYTE PTR [eax+0x35eeed31],dh
  41aeb9:	dec    dx
  41aebb:	(bad)  
  41aebc:	ins    BYTE PTR es:[edi],dx
  41aebd:	in     eax,dx
  41aebe:	enter  0x6dbe,0x7
  41aec2:	mov    WORD PTR [edx],ss
  41aec4:	es cmp al,0x13
  41aec7:	inc    esp
  41aec8:	test   DWORD PTR [esi+esi*8-0x3e5068b4],edi
  41aecf:	jns    0x41ae8c
  41aed1:	push   ss
  41aed2:	or     al,0x9a
  41aed4:	in     al,0xdc
  41aed6:	add    al,BYTE PTR [ecx]
  41aed8:	mov    edi,0xb0cf0035
  41aedd:	stos   BYTE PTR es:[edi],al
  41aede:	popa   
  41aedf:	xchg   ebp,eax
  41aee0:	nop
  41aee1:	sbb    bh,dh
  41aee3:	popa   
  41aee4:	sub    al,0xf6
  41aee6:	fs popf 
  41aee8:	jl     0x41aeea
  41aeea:	(bad)  
  41aeeb:	popf   
  41aeec:	cmp    cl,BYTE PTR [edx+0xc]
  41aeef:	mov    dl,0x7c
  41aef1:	jg     0x41af01
  41aef3:	xchg   edx,eax
  41aef4:	or     al,0x6f
  41aef6:	jge    0x41ae7f
  41aef8:	jne    0x41af2f
  41aefa:	xor    eax,0x4cc03a7d
  41aeff:	icebp  
  41af00:	(bad)  
  41af02:	xor    BYTE PTR [edi+0x166cbb8e],ah
  41af08:	lahf   
  41af09:	push   0xffffffe7
  41af0b:	int3   
  41af0c:	mov    dh,BYTE PTR [eax+0x54]
  41af0f:	ins    BYTE PTR es:[edi],dx
  41af10:	pop    edx
  41af11:	pushf  
  41af12:	cdq    
  41af13:	sub    eax,0xe5da978e
  41af18:	jno    0x41aea6
  41af1a:	mov    dl,0x26
  41af1c:	adc    DWORD PTR [esi],edx
  41af1e:	dec    edi
  41af1f:	adc    cl,BYTE PTR [eax+eax*8-0x47]
  41af23:	arpl   ax,si
  41af25:	add    BYTE PTR [edx-0x4bc415c2],al
  41af2b:	jmp    0x26cd:0xac1b8b43
  41af32:	pop    esi
  41af33:	cli    
  41af34:	add    BYTE PTR [eax+eax*8+0x2a],0xc7
  41af39:	test   DWORD PTR [edx+0x3e1d2df0],ecx
  41af3f:	sub    al,0x9a
  41af41:	pop    ds
  41af42:	cwde   
  41af43:	cwde   
  41af44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af45:	sbb    ch,BYTE PTR [ecx-0x1e]
  41af48:	mov    bl,0x38
  41af4a:	iret   
  41af4b:	add    eax,DWORD PTR [eax+ebx*1]
  41af4e:	mov    bh,0x32
  41af50:	mov    edx,0x870c2309
  41af55:	add    al,0x55
  41af57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af58:	pop    ss
  41af59:	mov    esp,0xa41d5881
  41af5e:	add    eax,DWORD PTR [ecx-0x9]
  41af61:	sub    edx,edx
  41af63:	test   bl,bh
  41af65:	or     al,0x87
  41af67:	jmp    0xc332e0f7
  41af6c:	or     ebp,DWORD PTR [ebx+0x5]
  41af6f:	mov    ecx,0xc75c47fe
  41af74:	adc    ah,BYTE PTR [edx-0x2cbb4025]
  41af7a:	pop    esp
  41af7b:	repnz sar BYTE PTR [ebp-0x8b95d7d],1
  41af82:	loopne 0x41afe0
  41af84:	lea    edi,[edi+0x60]
  41af87:	sbb    al,0x73
  41af89:	aas    
  41af8a:	loopne 0x41afd1
  41af8c:	cmp    BYTE PTR [eax-0x65d0c781],0x32
  41af93:	ins    DWORD PTR es:[edi],dx
  41af94:	aas    
  41af95:	out    dx,eax
  41af96:	inc    esi
  41af97:	add    DWORD PTR [ebx],ebx
  41af99:	mov    dh,0xcd
  41af9b:	scas   al,BYTE PTR es:[edi]
  41af9c:	dec    ebp
  41af9d:	idiv   BYTE PTR [edx-0x15415cee]
  41afa3:	(bad)  
  41afa4:	add    al,0x3
  41afa6:	arpl   WORD PTR [edi],di
  41afa8:	push   esi
  41afa9:	xor    al,0x41
  41afab:	pusha  
  41afac:	mov    dl,0x4d
  41afae:	imul   edx,edi,0x5eb72626
  41afb4:	dec    edi
  41afb5:	and    DWORD PTR [esi+0x4e],edx
  41afb8:	jmp    0x2848965a
  41afbd:	sub    edx,edx
  41afbf:	int    0xde
  41afc1:	lods   eax,DWORD PTR ds:[esi]
  41afc2:	test   eax,0x257907db
  41afc7:	cld    
  41afc8:	sbb    BYTE PTR [edx-0x3458f6d1],dl
  41afce:	stc    
  41afcf:	pop    ecx
  41afd0:	jl     0x41afd6
  41afd2:	int3   
  41afd3:	xchg   edx,eax
  41afd4:	outs   dx,DWORD PTR ds:[esi]
  41afd5:	adc    ch,BYTE PTR [ebp+0x56]
  41afd8:	sub    BYTE PTR [edx],bl
  41afda:	loop   0x41afb8
  41afdc:	out    dx,al
  41afdd:	neg    al
  41afdf:	pop    edx
  41afe0:	cdq    
  41afe1:	fisubr WORD PTR [ebx-0x79895125]
  41afe7:	mov    ds:0x6e688a43,eax
  41afec:	stc    
  41afed:	sub    eax,0xc70d4cda
  41aff2:	mov    eax,0x94936166
  41aff7:	fs (bad) 
  41aff9:	mul    DWORD PTR [eax]
  41affb:	xor    BYTE PTR [eax],dh
  41affd:	loope  0x41b01b
  41afff:	sti    
  41b000:	jmp    0x28a5:0x6b51007b
  41b007:	es jge 0x41af8f
  41b00a:	and    edx,esi
  41b00c:	enter  0xe802,0x3f
  41b010:	es iret 
  41b012:	mov    gs,WORD PTR [edi-0x4762e0d2]
  41b018:	sub    al,0xde
  41b01a:	arpl   WORD PTR [esp+esi*8],sp
  41b01d:	ss sti 
  41b01f:	mov    ecx,edi
  41b021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b022:	and    al,0xa0
  41b024:	repnz and ebp,edi
  41b027:	add    ebp,edi
  41b029:	fsubr  QWORD PTR [edx-0x62df54b]
  41b02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b030:	xchg   ebx,eax
  41b031:	(bad)  [edx]
  41b033:	sbb    edi,DWORD PTR [eax+eiz*8-0x72]
  41b037:	std    
  41b038:	push   es
  41b039:	sbb    dl,BYTE PTR [ecx]
  41b03b:	and    BYTE PTR [ecx-0xc],cl
  41b03e:	inc    edx
  41b03f:	mov    dh,0xb7
  41b041:	pop    esp
  41b042:	leave  
  41b043:	aas    
  41b044:	fisub  WORD PTR [edi+ebx*4-0x59]
  41b048:	mov    bl,dl
  41b04a:	aad    0x51
  41b04c:	out    dx,al
  41b04d:	popa   
  41b04e:	js     0x41b090
  41b050:	mov    eax,0x5378d264
  41b055:	cmc    
  41b056:	aas    
  41b057:	mov    dl,0x8c
  41b059:	repz xchg esp,eax
  41b05b:	jge    0x41b0ca
  41b05d:	xor    al,0x9c
  41b05f:	jae    0x41b044
  41b061:	dec    esi
  41b062:	lods   al,BYTE PTR ds:[esi]
  41b063:	xor    eax,0x38f57ce
  41b068:	cmp    dh,al
  41b06a:	data16 aas 
  41b06c:	adc    DWORD PTR [ebx+0x5b820bdf],edx
  41b072:	cld    
  41b073:	ret    0xd25a
  41b076:	lds    ecx,FWORD PTR [eax-0x6f]
  41b079:	sbb    al,dh
  41b07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b07c:	add    al,bl
  41b07e:	and    DWORD PTR [eax+0x1db56bd8],0xffffffdc
  41b085:	xlat   BYTE PTR ds:[ebx]
  41b086:	push   ds
  41b087:	fcmovnu st,st(0)
  41b089:	jb     0x41b0ee
  41b08b:	mov    eax,0xf3fc69cb
  41b090:	rol    BYTE PTR [esi-0x36],0x48
  41b094:	jnp    0x41b053
  41b096:	test   esp,eax
  41b098:	hlt    
  41b099:	fs dec ebp
  41b09b:	imul   ebx,ecx,0x2401ef5a
  41b0a1:	int    0x33
  41b0a3:	mov    dl,0xbc
  41b0a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0a6:	sahf   
  41b0a7:	mov    ebx,0x38d945d
  41b0ac:	adc    eax,0xae656f05
  41b0b1:	icebp  
  41b0b2:	mov    ds:0xadee2af6,al
  41b0b7:	retf   
  41b0b8:	cmc    
  41b0b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0bb:	sti    
  41b0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0bd:	(bad)  
  41b0be:	adc    edi,DWORD PTR [bx+si-0x3fdd]
  41b0c3:	jge    0x41b124
  41b0c5:	or     BYTE PTR ds:0x63f87c2a,0x49
  41b0cc:	fmul   DWORD PTR [ebp-0x61]
  41b0cf:	mov    ds:0xe999cc5a,al
  41b0d4:	jmp    0x41b107
  41b0d6:	je     0x41b131
  41b0d8:	divps  xmm3,XMMWORD PTR [eax-0x46]
  41b0dc:	mov    bl,0xa1
  41b0de:	mov    edi,0xca519d52
  41b0e3:	mov    ah,0xb7
  41b0e5:	cs mov esi,0x8d59e9c3
  41b0eb:	xchg   ecx,eax
  41b0ec:	push   es
  41b0ed:	push   edx
  41b0ee:	(bad)
  41b0f1:	pop    es
  41b0f2:	jg     0x41b125
  41b0f4:	pushf  
  41b0f5:	or     eax,0x8f5a4741
  41b0fa:	dec    esi
  41b0fb:	xor    DWORD PTR [ebx+0x4f13bf4b],0x16041e3c
  41b105:	inc    ebp
  41b106:	lds    ebx,FWORD PTR [edi+0x34aa849e]
  41b10c:	fist   WORD PTR [esi+0x68]
  41b10f:	mov    ecx,0x3a0233b8
  41b114:	inc    edi
  41b115:	push   edi
  41b116:	xchg   ebx,eax
  41b117:	push   es
  41b118:	xor    BYTE PTR [edx],0x16
  41b11b:	std    
  41b11c:	dec    esi
  41b11d:	push   ss
  41b11e:	mov    ch,0x95
  41b120:	xor    edi,DWORD PTR [edx-0x15e84ab0]
  41b126:	xchg   DWORD PTR [esp+edx*8],ebx
  41b129:	xchg   ebp,eax
  41b12a:	ret    
  41b12b:	dec    edi
  41b12c:	int    0x52
  41b12e:	pop    edx
  41b12f:	pop    eax
  41b130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b131:	sub    al,0xf3
  41b133:	(bad)  
  41b134:	mov    al,ds:0x5d63b3e5
  41b139:	hlt    
  41b13a:	cs jmp 0xbacf:0x962ef574
  41b142:	daa    
  41b143:	aas    
  41b144:	cmp    DWORD PTR [eax],esi
  41b146:	sbb    dh,ch
  41b148:	cwde   
  41b149:	or     BYTE PTR [edx+ecx*1-0x35],al
  41b14d:	add    BYTE PTR [eax],al
  41b14f:	add    BYTE PTR [eax],al
  41b151:	add    ah,bh
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	or     eax,eax
  41b160:	or     DWORD PTR [edx+0x12d8f],ebp
  41b166:	repz add al,0x0
  41b169:	add    al,dl
  41b16b:	jmp    0xcaae2a26
  41b170:	sbb    DWORD PTR [eax+edi*4-0x3cde9bd],ecx
  41b177:	mov    eax,0x76148288
  41b17c:	ins    DWORD PTR es:[edi],dx
  41b17d:	mov    bh,0xd1
  41b17f:	push   ebp
  41b180:	and    al,BYTE PTR [ecx-0x3ca48e3e]
  41b186:	mov    ebp,0x4f7cd08f
  41b18b:	into   
  41b18c:	std    
  41b18d:	xchg   BYTE PTR [ebx],ch
  41b18f:	mov    ecx,0x9081ec65
  41b194:	repz es out 0xae,al
  41b198:	mov    ebp,esp
  41b19a:	push   esi
  41b19b:	cli    
  41b19c:	das    
  41b19d:	imul   ecx,DWORD PTR ds:0x6e816faf,0xa13650b0
  41b1a7:	arpl   WORD PTR [ebp+0x2dcb1cfe],si
  41b1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1ae:	jne    0x41b1aa
  41b1b0:	or     DWORD PTR [edi+0x19],0x320fb059
  41b1b7:	das    
  41b1b8:	cmp    eax,0x15c501ca
  41b1bd:	xlat   BYTE PTR ds:[ebx]
  41b1be:	lahf   
  41b1bf:	and    ebp,DWORD PTR [ebx]
  41b1c1:	jecxz  0x41b216
  41b1c3:	retf   
  41b1c4:	and    bh,0xd
  41b1c7:	(bad)  
  41b1c8:	fbld   TBYTE PTR [eax+0x12]
  41b1cb:	xchg   bh,bh
  41b1cd:	push   ss
  41b1ce:	sbb    BYTE PTR [edx-0x71],cl
  41b1d1:	mov    bl,0x9b
  41b1d3:	sbb    ebp,ebp
  41b1d5:	into   
  41b1d6:	(bad)  
  41b1d7:	xlat   BYTE PTR ds:[ebx]
  41b1d8:	add    al,0x1d
  41b1da:	mov    edi,0xe6785fa7
  41b1df:	add    ecx,DWORD PTR [eax+0x1d9c7087]
  41b1e5:	test   edi,esp
  41b1e7:	jae    0x41b1c1
  41b1e9:	push   eax
  41b1ea:	mov    ebx,DWORD PTR [edi+0xbe796bb]
  41b1f0:	mov    ch,0x1f
  41b1f2:	into   
  41b1f3:	ss mov bh,0x80
  41b1f6:	imul   ebx,DWORD PTR [edx+0x1],0xffffffee
  41b1fa:	sub    ch,BYTE PTR [edx]
  41b1fc:	ds icebp 
  41b1fe:	and    DWORD PTR [edx+edi*4+0x6c846058],ecx
  41b205:	scas   al,BYTE PTR es:[edi]
  41b206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b207:	push   es
  41b208:	jnp    0x41b243
  41b20a:	mov    esp,DWORD PTR [ebx-0x60c31a0b]
  41b210:	xchg   edi,eax
  41b211:	fwait
  41b212:	pop    edx
  41b213:	xor    bl,BYTE PTR [ebp+0x545ecb2f]
  41b219:	sysexit 
  41b21b:	fdivrp st(6),st
  41b21d:	test   BYTE PTR cs:[ebx+0x4b00e1cc],bh
  41b224:	aas    
  41b225:	push   edi
  41b226:	int    0x67
  41b228:	xor    dl,BYTE PTR [edx]
  41b22a:	ins    DWORD PTR es:[edi],dx
  41b22b:	shr    DWORD PTR [esi],0xb7
  41b22e:	xchg   edi,eax
  41b22f:	mov    eax,esi
  41b231:	push   0xffffff99
  41b233:	cs mov ecx,esp
  41b236:	arpl   bx,di
  41b238:	arpl   WORD PTR [ebp+eiz*1-0x70],sp
  41b23c:	jns    0x41b243
  41b23e:	addr16 mov esi,0x1f0622bc
  41b244:	imul   eax,DWORD PTR [ebp-0x59e97486],0xa58c7718
  41b24e:	mov    ebx,0xa3479b60
  41b253:	nop
  41b254:	dec    esi
  41b255:	fcmovb st,st(0)
  41b257:	sub    eax,0x4054d09
  41b25c:	in     al,dx
  41b25d:	leave  
  41b25e:	or     bh,cl
  41b260:	rcr    BYTE PTR [esi],cl
  41b262:	or     BYTE PTR [ebx],ch
  41b264:	mov    al,ds:0xccea9252
  41b269:	push   ss
  41b26a:	iret   
  41b26b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41b26d:	mov    cl,0xd5
  41b26f:	adc    DWORD PTR [eax],esi
  41b271:	sar    BYTE PTR [edx+0x3942e6f2],cl
  41b277:	push   ss
  41b278:	add    edi,edi
  41b27a:	xor    bh,BYTE PTR [eax+0x781a78bd]
  41b280:	fnsave [edi+0x42]
  41b283:	fsub   DWORD PTR [eax]
  41b285:	push   ds
  41b286:	and    ebx,esp
  41b288:	dec    edi
  41b289:	out    dx,eax
  41b28a:	out    dx,al
  41b28b:	pop    ss
  41b28c:	loopne 0x41b307
  41b28e:	and    DWORD PTR [edi-0x5c50f78e],0xb9da712f
  41b298:	(bad)  
  41b299:	test   al,0x6e
  41b29b:	cmp    eax,0x3b30877f
  41b2a0:	ror    dh,0x29
  41b2a3:	shl    BYTE PTR ds:0x5138f96b,1
  41b2a9:	mov    ah,0x33
  41b2ab:	jge    0x41b2da
  41b2ad:	retf   0x69bd
  41b2b0:	pmulhuw mm1,mm4
  41b2b3:	addr16 pop esi
  41b2b5:	loop   0x41b306
  41b2b7:	aad    0x53
  41b2b9:	shl    ebp,1
  41b2bb:	pushf  
  41b2bc:	dec    ebp
  41b2bd:	xor    DWORD PTR [ecx+eiz*2-0x2d],esp
  41b2c1:	xchg   edx,eax
  41b2c2:	jl     0x41b2cd
  41b2c4:	rcr    BYTE PTR ds:0x7a934245,0x2a
  41b2cb:	not    edx
  41b2cd:	xchg   esp,eax
  41b2ce:	loopne 0x41b2d5
  41b2d0:	cmp    eax,0x2e899637
  41b2d5:	sbb    eax,0x4dd85b7d
  41b2da:	mov    es,WORD PTR [edi]
  41b2dc:	mov    ah,0x9d
  41b2de:	pop    esi
  41b2df:	dec    eax
  41b2e0:	dec    esi
  41b2e1:	into   
  41b2e2:	jp     0x41b295
  41b2e4:	rcr    DWORD PTR [eax-0x16],cl
  41b2e7:	mov    ecx,0x2d4ba2ac
  41b2ec:	mov    eax,ecx
  41b2ee:	mov    ss,WORD PTR [ebx+0x7b]
  41b2f1:	fisttp DWORD PTR [eax]
  41b2f3:	stos   DWORD PTR es:[edi],eax
  41b2f4:	shl    esp,0x35
  41b2f7:	addr16 into 
  41b2f9:	inc    esp
  41b2fa:	xchg   ecx,eax
  41b2fb:	xor    ebp,edx
  41b2fd:	adc    eax,0xd5a1a538
  41b303:	jne    0x41b29c
  41b305:	sbb    eax,0x2c5a7a44
  41b30a:	inc    eax
  41b30b:	and    BYTE PTR [eax-0x77],al
  41b30e:	loope  0x41b345
  41b310:	(bad)  
  41b311:	add    dh,BYTE PTR [edx]
  41b313:	sbb    eax,0x31198ee0
  41b318:	xchg   BYTE PTR [eax+0x559cedf],dh
  41b31e:	sub    al,0x65
  41b320:	jb     0x41b2fe
  41b322:	cwde   
  41b323:	lods   al,BYTE PTR ds:[esi]
  41b324:	push   eax
  41b325:	fst    QWORD PTR [esi]
  41b327:	jge    0x41b2ef
  41b329:	sbb    BYTE PTR cs:[edx+edi*1-0x6a],cl
  41b32e:	mov    WORD PTR [ecx+0x6f],ds
  41b331:	sub    eax,0x78b9a56
  41b336:	mov    ebx,0x31f44660
  41b33b:	sbb    DWORD PTR [edi-0x1ca4d85],eax
  41b341:	pop    es
  41b342:	fst    DWORD PTR [edi-0x74]
  41b345:	mov    ebp,0x702650df
  41b34a:	test   eax,0x9e4b178e
  41b34f:	or     al,0x88
  41b351:	pop    edi
  41b352:	cmp    ch,al
  41b354:	cli    
  41b355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b356:	pop    ss
  41b357:	fcom   QWORD PTR [ebx+edx*4-0x6e501ca8]
  41b35e:	mov    esi,0xea15acb3
  41b363:	adc    bh,BYTE PTR [ecx-0x5b]
  41b366:	sbb    edi,DWORD PTR ds:0xacfeb130
  41b36c:	fiadd  DWORD PTR [edx-0x3d]
  41b36f:	aaa    
  41b370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b371:	sar    DWORD PTR [edi-0x49],1
  41b374:	in     al,0x58
  41b376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b377:	sti    
  41b378:	xor    ah,ah
  41b37a:	nop
  41b37b:	jle    0x41b313
  41b37d:	adc    ch,ah
  41b37f:	xlat   BYTE PTR ds:[ebx]
  41b380:	sbb    eax,0x7a4d907d
  41b385:	leave  
  41b386:	push   0x55a5189a
  41b38b:	add    ebx,esp
  41b38d:	mov    esi,0xc4684017
  41b392:	bound  esp,QWORD PTR [ebx+0x496f0b28]
  41b398:	ror    BYTE PTR [edx],1
  41b39a:	arpl   ax,dx
  41b39c:	cld    
  41b39d:	loope  0x41b41d
  41b39f:	xor    al,BYTE PTR [ebx]
  41b3a1:	xchg   esp,eax
  41b3a2:	mov    ds:0x8c00a39e,al
  41b3a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3a8:	jmp    0x6817:0x54fdff89
  41b3af:	(bad)  
  41b3b0:	in     eax,dx
  41b3b1:	jg     0x41b3ef
  41b3b3:	dec    esi
  41b3b4:	jo     0x41b3cc
  41b3b6:	retf   0x40b0
  41b3b9:	jbe    0x41b40b
  41b3bb:	push   edi
  41b3bc:	dec    esi
  41b3bd:	nop
  41b3be:	loopne 0x41b401
  41b3c0:	jb     0x41b3b1
  41b3c2:	mov    cl,0xdc
  41b3c4:	fistp  WORD PTR [ebx+esi*1-0x2c6d8d03]
  41b3cb:	aaa    
  41b3cc:	out    0xe,al
  41b3ce:	dec    ecx
  41b3cf:	retf   0x7a62
  41b3d2:	in     eax,0xf
  41b3d4:	push   es
  41b3d5:	xor    eax,0x87fbb669
  41b3da:	pusha  
  41b3db:	sbb    bl,BYTE PTR [ecx]
  41b3dd:	daa    
  41b3de:	sbb    ecx,DWORD PTR [esi]
  41b3e0:	les    edx,FWORD PTR [ebx]
  41b3e2:	cmp    ch,dh
  41b3e4:	ret    
  41b3e5:	daa    
  41b3e6:	pushf  
  41b3e7:	cld    
  41b3e8:	test   eax,0x4e73d4c6
  41b3ed:	(bad)  
  41b3ee:	and    BYTE PTR [esi+0x4c44c40b],dl
  41b3f4:	cli    
  41b3f5:	mov    esi,0x4f5d38ce
  41b3fa:	push   edi
  41b3fb:	inc    edx
  41b3fc:	mov    ebp,0xb09d103c
  41b401:	push   ecx
  41b402:	mov    al,ds:0xc7e46418
  41b407:	cld    
  41b408:	in     eax,dx
  41b409:	jne    0x41b469
  41b40b:	jns    0x41b42f
  41b40d:	ret    0xcc13
  41b410:	push   esp
  41b411:	jnp    0x41b48f
  41b413:	je     0x41b3c2
  41b415:	icebp  
  41b416:	into   
  41b417:	retf   0x38c1
  41b41a:	test   eax,0x9dd76be3
  41b41f:	leave  
  41b420:	adc    ecx,esi
  41b422:	mov    bl,0xf0
  41b424:	pop    ebx
  41b425:	or     eax,0xa2de251c
  41b42a:	jg     0x41b3ea
  41b42c:	xchg   ecx,eax
  41b42d:	pop    eax
  41b42e:	inc    ebx
  41b42f:	dec    esi
  41b430:	test   eax,0xb285632d
  41b435:	es andnps xmm3,xmm5
  41b439:	mov    esp,0x7a550d9b
  41b43e:	clc    
  41b43f:	pop    edi
  41b440:	inc    esp
  41b441:	dec    esp
  41b442:	ja     0x41b494
  41b444:	loopne 0x41b3e3
  41b446:	or     ecx,DWORD PTR [eax]
  41b448:	and    ebx,DWORD PTR [bp-0x7626]
  41b44d:	mov    ebp,0x247b3957
  41b452:	pop    es
  41b453:	das    
  41b454:	jb     0x41b48d
  41b456:	adc    eax,DWORD PTR ss:[ebx-0x6017d522]
  41b45d:	test   eax,0x7dfadeaa
  41b462:	xlat   BYTE PTR ds:[ebx]
  41b463:	xlat   BYTE PTR ds:[ebx]
  41b464:	shl    esi,cl
  41b466:	jg     0x41b406
  41b468:	jbe    0x41b454
  41b46a:	clc    
  41b46b:	mov    dl,0xf0
  41b46e:	paddw  mm6,QWORD PTR [edi]
  41b471:	dec    ebx
  41b472:	enter  0xadcb,0x63
  41b476:	outs   dx,DWORD PTR ds:[esi]
  41b477:	mov    bl,0xf1
  41b479:	xor    ebp,DWORD PTR [edx-0x37]
  41b47c:	leave  
  41b47d:	gs mov ebx,0x7b71a7f7
  41b483:	aad    0x66
  41b485:	push   es
  41b486:	add    BYTE PTR [edx+0x42],0xe2
  41b48a:	pop    ebp
  41b48b:	(bad)  
  41b48c:	fnstsw WORD PTR [edi+0x13]
  41b48f:	pusha  
  41b490:	pop    edx
  41b491:	call   0xccbb725a
  41b496:	icebp  
  41b497:	fcmovbe st,st(7)
  41b499:	lahf   
  41b49a:	sub    DWORD PTR [ebx],0xffffffdf
  41b49d:	jo     0x41b4ec
  41b49f:	out    0x2d,eax
  41b4a1:	xchg   esp,eax
  41b4a2:	lock fsubp st(7),st
  41b4a5:	call   0x2224a198
  41b4aa:	loopne 0x41b466
  41b4ac:	mov    cl,0xd3
  41b4ae:	(bad)  
  41b4af:	imul   edx,DWORD PTR [esi+0x1b],0xffffffc0
  41b4b3:	ins    DWORD PTR es:[edi],dx
  41b4b4:	retf   
  41b4b5:	or     dh,0x56
  41b4b8:	mov    ebx,0xba20c8c
  41b4bd:	bound  ecx,QWORD PTR cs:[ebx]
  41b4c0:	add    cl,BYTE PTR [edi]
  41b4c2:	jb     0x41b49d
  41b4c4:	or     BYTE PTR [ebp+0x5f],0x6c
  41b4c8:	adc    BYTE PTR ds:0x88016d89,bl
  41b4ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4cf:	gs das 
  41b4d1:	sub    edi,DWORD PTR [ecx+edi*1+0x14eb39bc]
  41b4d8:	inc    ebx
  41b4d9:	test   eax,0x3af3e57b
  41b4de:	dec    eax
  41b4df:	es xor al,0x4d
  41b4e2:	sub    BYTE PTR [ebp-0x675e7531],cl
  41b4e8:	dec    ecx
  41b4e9:	pop    edi
  41b4ea:	nop
  41b4eb:	aad    0xf2
  41b4ed:	test   eax,0xf0c1c8de
  41b4f2:	dec    ebx
  41b4f3:	add    al,0x64
  41b4f5:	add    bh,dl
  41b4f7:	push   esp
  41b4f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4f9:	outs   dx,DWORD PTR ds:[esi]
  41b4fa:	retf   0x65f8
  41b4fd:	xchg   ebp,eax
  41b4fe:	mov    ds:0x73dbd2a9,al
  41b503:	adc    edi,edx
  41b505:	test   esp,ebx
  41b507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b508:	fucomip st,st(7)
  41b50a:	jge    0x41b503
  41b50c:	(bad)  
  41b50d:	icebp  
  41b50e:	lds    edi,FWORD PTR [esi-0x1f4bf903]
  41b514:	adc    BYTE PTR [esi-0x5f],ch
  41b517:	xchg   edx,eax
  41b518:	xchg   ecx,eax
  41b519:	sub    ebp,DWORD PTR [esi*1-0x12493bbb]
  41b520:	out    0x62,eax
  41b522:	xor    cl,BYTE PTR [edx+0x3c20c12]
  41b528:	xor    eax,0xcc48a4c2
  41b52d:	(bad)  
  41b52e:	push   ss
  41b52f:	lods   al,BYTE PTR ds:[esi]
  41b530:	test   DWORD PTR [ebx],esp
  41b532:	jne    0x41b4f6
  41b534:	mov    ds:0xe5ec64f8,al
  41b539:	dec    ecx
  41b53a:	retf   
  41b53b:	adc    eax,0xb6b2311c
  41b540:	adc    DWORD PTR [eax-0x3843cda1],0xffffffa8
  41b547:	dec    esi
  41b548:	mov    BYTE PTR [esi+0x42],bl
  41b54b:	ds scas eax,DWORD PTR es:[edi]
  41b54d:	dec    eax
  41b54e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41b550:	lea    ebx,ds:0xfe460764
  41b556:	push   0x2fecbe91
  41b55b:	neg    bh
  41b55d:	jl     0x41b529
  41b55f:	pop    edi
  41b560:	clc    
  41b561:	add    BYTE PTR [ebx-0x42],bh
  41b564:	sub    eax,0xf389433e
  41b569:	pop    ecx
  41b56a:	mov    esi,0xebf44965
  41b56f:	or     eax,0x7eee0653
  41b574:	mov    ebp,0x55e8020e
  41b579:	(bad)  
  41b57a:	xchg   esi,eax
  41b57b:	sub    DWORD PTR [edx],ebp
  41b57d:	loope  0x41b5fd
  41b57f:	repz or BYTE PTR ds:[eax-0xc19e7a9],dh
  41b587:	sbb    BYTE PTR [eax+0x34],dh
  41b58a:	sar    BYTE PTR [ecx+0x29],1
  41b58d:	rol    esi,cl
  41b58f:	inc    esp
  41b590:	fstp   st(7)
  41b592:	in     eax,dx
  41b593:	stos   DWORD PTR es:[edi],eax
  41b594:	lds    eax,FWORD PTR [esp+eiz*2-0x6b3f84eb]
  41b59b:	imul   ebp,DWORD PTR [esi-0x52],0xff7c2f39
  41b5a2:	jmp    0x41b5c6
  41b5a4:	mov    fs,ebx
  41b5a6:	push   ecx
  41b5a7:	mov    edi,0x2976cad4
  41b5ac:	ret    0xec29
  41b5af:	dec    esp
  41b5b0:	mov    edx,0xbbb9c773
  41b5b5:	add    bl,BYTE PTR [esi-0xe]
  41b5b8:	jns    0x41b577
  41b5ba:	mov    al,0x56
  41b5bc:	add    BYTE PTR [ebp-0x61],ah
  41b5bf:	cli    
  41b5c0:	popf   
  41b5c1:	jmp    0x10c71968
  41b5c6:	jl     0x41b5ea
  41b5c8:	inc    ecx
  41b5c9:	xchg   bl,dl
  41b5cb:	cmp    bh,0xa9
  41b5ce:	vmread DWORD PTR [esi+0x4f],edx
  41b5d2:	dec    edx
  41b5d3:	push   0x15b1d3e1
  41b5d8:	xchg   edx,eax
  41b5d9:	clc    
  41b5da:	inc    esi
  41b5db:	out    0x88,al
  41b5dd:	test   al,0xd1
  41b5df:	js     0x41b565
  41b5e1:	cmp    eax,0x89260e2
  41b5e6:	add    BYTE PTR [ebx],ah
  41b5e8:	push   edi
  41b5e9:	in     eax,0x41
  41b5eb:	xor    ah,BYTE PTR [eax+0x8e2005f]
  41b5f1:	push   0xffffffa2
  41b5f3:	xchg   esi,eax
  41b5f4:	sbb    al,BYTE PTR [esi+0x30dd5429]
  41b5fa:	in     eax,dx
  41b5fb:	aaa    
  41b5fc:	jne    0x41b605
  41b5fe:	pop    ecx
  41b5ff:	jae    0x41b5d0
  41b601:	in     al,0x43
  41b603:	inc    esp
  41b604:	(bad)  
  41b605:	jae    0x41b67a
  41b607:	pop    edi
  41b608:	test   eax,ecx
  41b60a:	clc    
  41b60b:	ss ins BYTE PTR es:[edi],dx
  41b60d:	and    eax,0x95c23a1e
  41b612:	mov    ?,WORD PTR [edi+0x3feaf99d]
  41b618:	cmp    ecx,DWORD PTR [esi]
  41b61a:	test   BYTE PTR [esi],bl
  41b61c:	mov    esi,0x3fbdeee5
  41b621:	sub    bh,BYTE PTR [eax]
  41b623:	jnp    0x41b67d
  41b625:	xchg   BYTE PTR [esp+edx*1+0x32],ch
  41b629:	fwait
  41b62a:	xchg   ebp,eax
  41b62b:	xor    al,0x23
  41b62d:	jge    0x41b696
  41b62f:	mov    al,ds:0xad9baa33
  41b634:	repz xchg esi,eax
  41b636:	or     esp,DWORD PTR [ebx+ebx*2-0x48]
  41b63a:	dec    ebp
  41b63b:	or     DWORD PTR fs:[eax+edi*4],edi
  41b63f:	inc    eax
  41b640:	mov    ebx,0x6dc68ab5
  41b645:	fs loope 0x41b681
  41b648:	fidiv  DWORD PTR [ebx-0x1bb39e5f]
  41b64e:	test   BYTE PTR [ebx+0x6f345b8b],bl
  41b654:	cmp    bh,BYTE PTR [eax]
  41b656:	out    0xba,eax
  41b658:	push   es
  41b659:	mov    ch,dh
  41b65b:	sub    al,0x21
  41b65d:	add    BYTE PTR [eax],al
  41b65f:	add    BYTE PTR [eax],al
  41b661:	add    dh,al
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	rcl    BYTE PTR [ecx+0x53],0xa9
  41b672:	xor    BYTE PTR [edx],0x1
  41b675:	add    bl,dh
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [edi-0x4],dl
  41b67c:	data16 jle 0x41b6c5
  41b67f:	mov    BYTE PTR [edx-0x354cceb5],ch
  41b685:	mov    ebx,0x3db11595
  41b68a:	sar    DWORD PTR es:[esp+eiz*4+0x1d27b8a0],0xf4
  41b693:	mov    ah,0xa3
  41b695:	pop    edx
  41b696:	(bad)  
  41b697:	sub    eax,0x3b630ee1
  41b69c:	and    bh,BYTE PTR [edi+0x30]
  41b69f:	rcl    dh,0x0
  41b6a2:	and    edx,DWORD PTR [eax]
  41b6a4:	mov    DWORD PTR [edx+0x11e372bc],ebp
  41b6aa:	pop    ebp
  41b6ab:	add    BYTE PTR [edi],bh
  41b6ad:	test   eax,0xecb2868d
  41b6b2:	arpl   WORD PTR [esi],si
  41b6b4:	psubusw mm7,QWORD PTR [ecx-0x7e]
  41b6b8:	mov    esi,0x8953d4ab
  41b6bd:	mov    cl,BYTE PTR cs:[edi]
  41b6c0:	std    
  41b6c1:	out    dx,eax
  41b6c2:	(bad)  
  41b6c3:	jo     0x41b721
  41b6c5:	push   ecx
  41b6c6:	pop    ds
  41b6c7:	fld    DWORD PTR [eax]
  41b6c9:	push   ebp
  41b6ca:	int3   
  41b6cb:	xor    eax,0x3fb5da2c
  41b6d0:	sub    eax,0x77433a53
  41b6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6d6:	and    eax,0x1b771dc7
  41b6db:	sbb    eax,0x4069e3cf
  41b6e0:	sub    bh,al
  41b6e2:	repz mov ecx,0x8917c596
  41b6e8:	mov    DWORD PTR ds:0x1130e8fe,esp
  41b6ee:	mov    esi,0xd3f93eea
  41b6f3:	mov    ecx,0xeb5eb3f3
  41b6f8:	pusha  
  41b6f9:	cmc    
  41b6fa:	sub    al,0xdb
  41b6fc:	sub    BYTE PTR [edx],0x2e
  41b6ff:	xchg   edi,eax
  41b700:	sbb    ch,BYTE PTR [edx-0x339ae74a]
  41b706:	popa   
  41b707:	aaa    
  41b708:	xor    al,0x27
  41b70a:	mov    bh,0x56
  41b70c:	call   0x68f566d1
  41b711:	fcomp  QWORD PTR [ebx-0x7b873bd7]
  41b717:	mov    ecx,0xa4b1412f
  41b71c:	lods   eax,DWORD PTR ds:[esi]
  41b71d:	cmp    ah,BYTE PTR [edi-0x12]
  41b720:	pop    esi
  41b721:	xchg   esp,eax
  41b722:	mov    edi,0x3148ebbd
  41b727:	xchg   esp,eax
  41b728:	add    cl,BYTE PTR [edi+0x37]
  41b72b:	cmp    bl,BYTE PTR [edi-0x2163c757]
  41b731:	cli    
  41b732:	add    BYTE PTR [edi],al
  41b734:	sub    edx,DWORD PTR [ebp+0x46]
  41b737:	fnstenv [esi]
  41b739:	sbb    BYTE PTR [edi+eax*4],dl
  41b73c:	mov    bl,0x84
  41b73e:	xchg   ecx,eax
  41b73f:	sbb    ecx,DWORD PTR [ecx+0x19]
  41b742:	loopne 0x41b73b
  41b744:	adc    BYTE PTR [esp+ebp*1-0x7af3ca48],ah
  41b74b:	retf   0xeea9
  41b74e:	dec    ecx
  41b74f:	inc    eax
  41b750:	lods   al,BYTE PTR ds:[esi]
  41b751:	lahf   
  41b752:	ds push ds
  41b754:	xchg   BYTE PTR [esi],dl
  41b756:	dec    edi
  41b757:	pusha  
  41b758:	out    0x32,al
  41b75a:	mov    dh,0x9
  41b75c:	sbb    DWORD PTR [ebx-0x3d],0xffffff93
  41b760:	jecxz  0x41b73a
  41b762:	mov    ah,BYTE PTR [edi+esi*1]
  41b765:	clc    
  41b766:	pop    ecx
  41b767:	pop    es
  41b768:	jmp    FWORD PTR ds:0x76f36f84
  41b76e:	fidiv  WORD PTR [esi+ebp*8-0x3c]
  41b772:	fcom   DWORD PTR [ecx]
  41b774:	cmp    DWORD PTR [eax-0x22],ecx
  41b777:	ret    
  41b778:	fild   WORD PTR [esi-0x1a]
  41b77b:	ins    BYTE PTR es:[edi],dx
  41b77c:	fisub  DWORD PTR [ecx+0x5d]
  41b77f:	adc    al,0xec
  41b781:	pop    eax
  41b782:	loopne 0x41b750
  41b784:	dec    ebp
  41b785:	and    ch,BYTE PTR [esi-0x779be0e5]
  41b78b:	adc    eax,0x8e2e4425
  41b790:	mov    al,0x57
  41b792:	sbb    ebp,DWORD PTR [edi+ebp*4-0x133f2be3]
  41b799:	add    dl,BYTE PTR [eax+eiz*2-0x57]
  41b79d:	jle    0x41b745
  41b79f:	clc    
  41b7a0:	or     ch,BYTE PTR [edx-0x72]
  41b7a3:	outs   dx,DWORD PTR ds:[esi]
  41b7a4:	dec    esi
  41b7a5:	mov    bh,0xa
  41b7a7:	imul   ebp,ebp,0x2e0206fc
  41b7ad:	or     BYTE PTR [edi],al
  41b7af:	(bad)  
  41b7b0:	jl     0x41b802
  41b7b2:	xchg   BYTE PTR [edx],ch
  41b7b4:	out    0xdd,al
  41b7b6:	sub    BYTE PTR [edx-0x264eb83f],bl
  41b7bc:	mov    bl,0x3d
  41b7be:	(bad)  
  41b7bf:	aad    0x3a
  41b7c1:	add    ecx,DWORD PTR [edx]
  41b7c3:	xor    DWORD PTR [edx+0x3c],esi
  41b7c6:	je     0x41b793
  41b7c8:	mov    ecx,0xadca5c2b
  41b7cd:	fwait
  41b7ce:	icebp  
  41b7cf:	push   esp
  41b7d0:	iret   
  41b7d1:	ins    DWORD PTR es:[edi],dx
  41b7d2:	das    
  41b7d3:	jns    0x41b848
  41b7d5:	iret   
  41b7d6:	mov    ecx,0xe75051d8
  41b7db:	shl    DWORD PTR [eax],0xb
  41b7de:	jg     0x41b84f
  41b7e0:	inc    edi
  41b7e1:	in     al,0xc7
  41b7e3:	dec    ecx
  41b7e4:	cmp    eax,0xb93b8ed6
  41b7e9:	sti    
  41b7ea:	pop    ebx
  41b7eb:	lock hlt 
  41b7ed:	ret    
  41b7ee:	dec    ebp
  41b7ef:	call   0x87d9:0xd52ce431
  41b7f6:	add    edi,eax
  41b7f8:	jno    0x41b7c7
  41b7fa:	inc    ecx
  41b7fb:	lock pop ebp
  41b7fd:	int3   
  41b7fe:	jecxz  0x41b7a2
  41b800:	mov    eax,DWORD PTR [edi+0x7372b1d2]
  41b806:	fwait
  41b807:	pop    ds
  41b808:	pop    ss
  41b809:	xchg   ebx,eax
  41b80a:	aas    
  41b80b:	lahf   
  41b80c:	jne    0x41b7ae
  41b80e:	popa   
  41b80f:	gs or  ebx,0xf
  41b813:	fcomp  DWORD PTR [eax+0x20]
  41b816:	stos   BYTE PTR es:[edi],al
  41b817:	pop    ds
  41b818:	mov    ch,0xe5
  41b81a:	add    dl,BYTE PTR [eax]
  41b81c:	bound  edx,QWORD PTR [edx]
  41b81e:	rol    BYTE PTR [edx-0x5c34c255],cl
  41b824:	jae    0x41b89e
  41b826:	sti    
  41b827:	cmp    al,0xb0
  41b829:	(bad)  
  41b82a:	mov    dl,0xb
  41b82c:	push   cs
  41b82d:	fst    QWORD PTR ds:0xea04107
  41b833:	out    dx,al
  41b834:	cld    
  41b835:	push   eax
  41b836:	sar    DWORD PTR [eax-0x9],cl
  41b839:	fisub  DWORD PTR [esi-0x14e046c0]
  41b83f:	sbb    cl,ch
  41b841:	jnp    0x41b87e
  41b843:	lahf   
  41b844:	add    BYTE PTR [edx-0x46eca6ca],ch
  41b84a:	mov    al,0x62
  41b84c:	aam    0xc4
  41b84e:	lahf   
  41b84f:	lods   al,BYTE PTR ds:[esi]
  41b850:	xchg   esp,eax
  41b851:	mov    bl,BYTE PTR [esi]
  41b853:	cmp    DWORD PTR [esi+0x751c9679],0x907326c1
  41b85d:	pop    eax
  41b85e:	push   cs
  41b85f:	xchg   ecx,eax
  41b860:	or     eax,0x6818a063
  41b865:	shl    ecx,1
  41b867:	xchg   edx,eax
  41b868:	mov    ds:0xf16ac1ab,al
  41b86d:	iret   
  41b86e:	imul   ecx,DWORD PTR ds:0xc2c0,0xffffff89
  41b874:	retf   0x9c0b
  41b877:	xchg   edx,eax
  41b878:	cmp    edi,edi
  41b87a:	idiv   ebx
  41b87c:	push   0xffffff88
  41b87e:	sub    dh,BYTE PTR [ebx-0x56]
  41b881:	jbe    0x41b8a4
  41b883:	data16 (bad) [edi]
  41b886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b887:	cmp    dh,BYTE PTR [esp+eiz*4+0x345fee83]
  41b88e:	cmp    al,0xb1
  41b890:	push   ds
  41b891:	add    esp,ebp
  41b893:	mov    ds:0x4edd07da,al
  41b898:	xchg   esi,eax
  41b899:	pushf  
  41b89a:	(bad)  
  41b89b:	cmp    edi,DWORD PTR [ecx+ecx*8-0xa]
  41b89f:	repz push 0x4e
  41b8a2:	or     eax,0xd5ade830
  41b8a7:	inc    edi
  41b8a8:	js     0x41b8de
  41b8aa:	pop    ds
  41b8ab:	mov    cl,0x3d
  41b8ad:	dec    esp
  41b8ae:	xchg   esp,eax
  41b8af:	pop    esi
  41b8b0:	pushf  
  41b8b1:	sub    BYTE PTR [edi-0x16],0x49
  41b8b5:	jo     0x41b89a
  41b8b7:	push   edi
  41b8b8:	jbe    0x41b8d3
  41b8ba:	dec    esi
  41b8bb:	inc    esp
  41b8bc:	repz jns 0x41b87d
  41b8bf:	xor    eax,0x5a6ee65b
  41b8c4:	int3   
  41b8c5:	inc    DWORD PTR [eax+0xb]
  41b8c8:	push   esp
  41b8c9:	push   eax
  41b8ca:	fwait
  41b8cb:	neg    ah
  41b8cd:	ja     0x41b857
  41b8cf:	pop    edx
  41b8d0:	inc    ebx
  41b8d1:	sti    
  41b8d2:	not    BYTE PTR [edi-0x1e36083b]
  41b8d8:	loop   0x41b92b
  41b8da:	lock jecxz 0x41b935
  41b8dd:	push   esp
  41b8de:	dec    edx
  41b8df:	push   0xd16af81f
  41b8e4:	adc    BYTE PTR [edi-0x621636be],ah
  41b8ea:	mov    esp,0x1b21e520
  41b8ef:	ja     0x41b8f5
  41b8f1:	adc    edi,DWORD PTR [eax]
  41b8f3:	mov    dl,0xde
  41b8f5:	jns    0x41b8cb
  41b8f7:	pcmpgtb mm7,QWORD PTR [eax-0x25c438e6]
  41b8fe:	ja     0x41b970
  41b900:	out    dx,al
  41b901:	aaa    
  41b902:	popf   
  41b903:	jecxz  0x41b8d8
  41b905:	or     BYTE PTR [esi],al
  41b907:	fwait
  41b908:	xchg   DWORD PTR [edi-0x56],ecx
  41b90b:	xor    eax,esp
  41b90d:	rcr    DWORD PTR [edx],1
  41b90f:	mov    ebp,0x245190b7
  41b914:	out    dx,eax
  41b915:	dec    ecx
  41b916:	clc    
  41b917:	dec    ebp
  41b918:	adc    al,0x7b
  41b91a:	inc    ebp
  41b91b:	shr    cl,0xeb
  41b91e:	call   0xbc3d:0x8862e86d
  41b925:	mov    dl,0xc8
  41b927:	cvtdq2ps xmm6,XMMWORD PTR [ebx+0x45]
  41b92b:	aas    
  41b92c:	test   al,0xdd
  41b92e:	inc    eax
  41b92f:	dec    esi
  41b930:	xchg   BYTE PTR [ebx-0x49],dh
  41b933:	add    DWORD PTR [ecx+esi*2],ecx
  41b936:	(bad)  [esi+0x7d]
  41b939:	inc    ebp
  41b93a:	or     dh,dh
  41b93c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b93d:	(bad)  
  41b93f:	fisub  DWORD PTR [esi+0x111be81d]
  41b945:	addr16 popf 
  41b947:	lods   al,BYTE PTR ds:[esi]
  41b948:	pop    es
  41b949:	stos   BYTE PTR es:[edi],al
  41b94a:	push   ds
  41b94b:	lods   al,BYTE PTR ds:[esi]
  41b94c:	scas   eax,DWORD PTR es:[edi]
  41b94d:	fidivr WORD PTR [ecx]
  41b94f:	jo     0x41b8ee
  41b951:	cmp    al,0x66
  41b953:	cld    
  41b954:	call   0xd308:0x6dd0b928
  41b95b:	outs   dx,DWORD PTR ds:[esi]
  41b95c:	xor    eax,0xd8db3840
  41b961:	jne    0x41b946
  41b963:	pop    ebp
  41b964:	inc    eax
  41b965:	mov    esp,fs
  41b967:	and    DWORD PTR [ecx],edx
  41b969:	xor    BYTE PTR [esi+0x66db578b],dl
  41b96f:	add    bl,cl
  41b971:	test   DWORD PTR [ecx],eax
  41b973:	(bad)  
  41b974:	jne    0x41b988
  41b976:	push   edx
  41b977:	mov    al,0xd4
  41b979:	sbb    DWORD PTR [ebx-0x7cfe73da],ecx
  41b97f:	sub    esp,DWORD PTR [ecx+edi*4+0x33]
  41b983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b984:	adc    BYTE PTR [edi-0x1885cb4e],dh
  41b98a:	rol    esi,cl
  41b98c:	in     al,0x55
  41b98e:	das    
  41b98f:	jle    0x41b9f1
  41b991:	popf   
  41b992:	xchg   ecx,eax
  41b993:	repnz shr DWORD PTR [edx+0x3933ca7],1
  41b99a:	jle    0x41b932
  41b99c:	add    ebp,DWORD PTR [edi]
  41b99e:	pop    eax
  41b99f:	das    
  41b9a0:	rcr    BYTE PTR [ecx+eax*8],cl
  41b9a3:	lea    esp,[eax]
  41b9a5:	jns    0x41b9aa
  41b9a7:	mov    esi,0xc0322813
  41b9ac:	push   cs
  41b9ad:	sbb    DWORD PTR ds:0xcbedc1e9,0x90417679
  41b9b7:	test   al,0xc4
  41b9b9:	dec    esi
  41b9ba:	mov    ebp,0xdaa08988
  41b9bf:	out    0xa5,al
  41b9c1:	mov    ebx,0x11ebbf80
  41b9c6:	sbb    cl,0x43
  41b9c9:	std    
  41b9ca:	loope  0x41ba29
  41b9cc:	jle    0x41b9bf
  41b9ce:	pushf  
  41b9cf:	fstp   QWORD PTR [ebx-0x8a6d266]
  41b9d5:	in     al,0x87
  41b9d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9d8:	test   al,0x91
  41b9db:	call   0xf4fe15d1
  41b9e0:	mov    cl,0xa4
  41b9e2:	fisubr DWORD PTR [ebp-0x59]
  41b9e5:	jb     0x41ba4b
  41b9e7:	sub    BYTE PTR [ecx],0x45
  41b9ea:	sub    BYTE PTR [ecx],0xac
  41b9ed:	mov    edx,0xd53add4b
  41b9f2:	or     bh,BYTE PTR [ebp-0x45]
  41b9f5:	and    al,0x42
  41b9f7:	push   es
  41b9f8:	add    BYTE PTR [ebx-0x2bd558b],dl
  41b9fe:	aaa    
  41b9ff:	cmc    
  41ba00:	jne    0x41ba15
  41ba02:	jecxz  0x41ba1e
  41ba04:	mov    ds:0x33ad572d,al
  41ba09:	in     eax,dx
  41ba0a:	dec    eax
  41ba0b:	mov    edi,0x8658dd44
  41ba10:	and    DWORD PTR [ecx-0x5b],ecx
  41ba13:	clc    
  41ba14:	retf   
  41ba15:	adc    esi,ebp
  41ba17:	dec    ebx
  41ba18:	sbb    DWORD PTR [esi+0x79],0x52
  41ba1c:	pop    ebx
  41ba1d:	sbb    edx,DWORD PTR [edx+0x16fd6d91]
  41ba23:	sub    eax,DWORD PTR [eax+edi*8+0x3f51a4f6]
  41ba2a:	xor    al,0xd2
  41ba2c:	cmp    eax,0xf4979850
  41ba31:	mov    ebx,DWORD PTR [edx-0x2bbd01c]
  41ba37:	push   ebp
  41ba38:	(bad)  
  41ba39:	lods   al,BYTE PTR ds:[esi]
  41ba3a:	pop    esi
  41ba3b:	pop    ebp
  41ba3c:	xor    bl,al
  41ba3e:	sbb    cl,BYTE PTR [ebp+ebp*1-0x2f856d5e]
  41ba45:	into   
  41ba46:	and    BYTE PTR [eax],ah
  41ba48:	out    0x77,eax
  41ba4a:	xchg   ecx,eax
  41ba4b:	or     BYTE PTR [ebp-0x6792b508],0x9d
  41ba52:	xchg   ebp,eax
  41ba53:	popa   
  41ba54:	add    eax,0x7ef05683
  41ba59:	xchg   ebx,eax
  41ba5a:	sbb    eax,0x17978534
  41ba5f:	call   0xe02880a7
  41ba64:	inc    esp
  41ba65:	fnstsw WORD PTR [ebx-0x2e]
  41ba68:	sub    DWORD PTR [esi+0x6c31a060],0xffffffda
  41ba6f:	or     bl,BYTE PTR [ebx-0x71112c29]
  41ba75:	pop    ds
  41ba76:	inc    ebx
  41ba77:	out    0x7e,al
  41ba79:	dec    ecx
  41ba7a:	jns    0x41badb
  41ba7c:	fldcw  WORD PTR [edi+eiz*8]
  41ba7f:	aaa    
  41ba80:	push   ebx
  41ba81:	imul   esp,DWORD PTR [edi+0x46],0x10dfdb6f
  41ba88:	ja     0x41baaf
  41ba8a:	pop    ebx
  41ba8b:	or     eax,0xa392856
  41ba90:	mov    al,0x31
  41ba92:	pop    eax
  41ba93:	das    
  41ba94:	pop    ss
  41ba95:	sbb    BYTE PTR fs:[edi-0x6c347797],ah
  41ba9c:	xchg   edi,eax
  41ba9d:	addr16 loopne 0x41bad6
  41baa0:	loopne 0x41bb0e
  41baa2:	mov    ?,WORD PTR [edx+0x39]
  41baa5:	mov    al,ds:0xcc30faac
  41baaa:	and    eax,DWORD PTR [esi]
  41baac:	inc    edi
  41baad:	push   esp
  41baae:	(bad)  
  41baaf:	(bad)  
  41bab0:	aam    0x8b
  41bab2:	dec    ecx
  41bab3:	not    BYTE PTR [ecx+edi*2-0x23fe6fe2]
  41baba:	push   0x52487c3a
  41babf:	push   edx
  41bac0:	lods   al,BYTE PTR ds:[esi]
  41bac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bac2:	inc    esi
  41bac3:	ins    BYTE PTR es:[edi],dx
  41bac4:	xchg   DWORD PTR [eax-0x57],edx
  41bac7:	dec    ecx
  41bac8:	pop    ds
  41bac9:	jno    0x41bb46
  41bacb:	pop    ebp
  41bacc:	push   cs
  41bacd:	lods   eax,DWORD PTR ds:[esi]
  41bace:	and    al,0x81
  41bad0:	adc    dl,al
  41bad2:	push   esp
  41bad3:	ins    DWORD PTR es:[edi],dx
  41bad4:	fisttp DWORD PTR [ebx+eiz*2]
  41bad7:	aas    
  41bad8:	mov    bh,0x3c
  41bada:	mov    ecx,0x1ee03f20
  41badf:	inc    eax
  41bae0:	mov    al,ds:0xd5e92ba4
  41bae5:	das    
  41bae6:	sub    dh,BYTE PTR [eax+ebx*8+0x37]
  41baea:	xlat   BYTE PTR ds:[ebx]
  41baeb:	push   cs
  41baec:	add    BYTE PTR [esi+0x6e41e4db],0x34
  41baf3:	push   edx
  41baf4:	and    cl,cl
  41baf6:	xchg   esi,eax
  41baf7:	sub    al,0x7e
  41baf9:	dec    edx
  41bafa:	fs pop edi
  41bafc:	(bad)  
  41bafd:	cmp    DWORD PTR [ecx-0x6b796b44],ecx
  41bb03:	bound  ecx,QWORD PTR [esi]
  41bb05:	sar    BYTE PTR [ebp+0xd],1
  41bb08:	fs addr16 cs loopne 0x41bb59
  41bb0d:	xchg   ecx,eax
  41bb0e:	aam    0x3c
  41bb10:	mov    dh,BYTE PTR [esi]
  41bb12:	loope  0x41bb16
  41bb14:	adc    ch,BYTE PTR [edx+edx*8+0x11]
  41bb18:	sub    BYTE PTR [edx+ebx*2-0x16afdab3],ch
  41bb1f:	add    ah,ch
  41bb21:	sbb    dh,BYTE PTR [ebx]
  41bb23:	jl     0x41bb6d
  41bb25:	in     eax,0x9f
  41bb27:	jns    0x41bb61
  41bb29:	pop    edx
  41bb2a:	out    0x7d,eax
  41bb2c:	cmp    dh,0x2e
  41bb2f:	pop    edi
  41bb30:	test   eax,0x1158bb6a
  41bb35:	lods   al,BYTE PTR ds:[esi]
  41bb36:	out    0xfe,eax
  41bb38:	adc    ch,BYTE PTR [eax+0x2867d372]
  41bb3e:	sbb    dh,al
  41bb40:	cwde   
  41bb41:	push   ss
  41bb42:	push   0xdd9ced94
  41bb47:	fs dec ax
  41bb4a:	daa    
  41bb4b:	jge    0x41bb06
  41bb4d:	scas   al,BYTE PTR es:[edi]
  41bb4e:	pushf  
  41bb4f:	inc    esi
  41bb50:	cmp    DWORD PTR [ecx],ebp
  41bb52:	push   0x25bafcec
  41bb57:	bound  edi,QWORD PTR [eax+edi*4+0x1026e04d]
  41bb5e:	bound  ebp,QWORD PTR [ecx-0x5c]
  41bb61:	pop    esi
  41bb62:	call   0xd08:0xbd18a659
  41bb69:	fild   QWORD PTR [ecx]
  41bb6b:	sbb    ebx,0x0
  41bb71:	add    dh,ah
  41bb73:	inc    eax
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0xb442583
  41bb7f:	jmp    0x1:0x3775bc3e
  41bb86:	repz add al,0x0
  41bb89:	add    BYTE PTR [ecx-0x10],cl
  41bb8c:	mov    ecx,0x8f60d567
  41bb91:	int    0x5c
  41bb93:	xchg   edx,eax
  41bb94:	ret    0x1caa
  41bb97:	test   DWORD PTR [ecx-0x1237f3c8],0xbcdedbaa
  41bba1:	add    esp,DWORD PTR [eax+0x2dd08f47]
  41bba7:	push   es
  41bba8:	(bad)  
  41bba9:	pop    eax
  41bbaa:	call   0xdca0:0x9f8c4e77
  41bbb1:	ins    BYTE PTR es:[edi],dx
  41bbb2:	cmp    DWORD PTR [esi+0x4],0xb62021f5
  41bbb9:	sbb    al,BYTE PTR [edx]
  41bbbb:	pop    ss
  41bbbc:	sbb    al,0x50
  41bbbe:	fnstsw WORD PTR [eax]
  41bbc0:	mov    ah,0x10
  41bbc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbc3:	push   eax
  41bbc4:	aaa    
  41bbc5:	lds    ebx,FWORD PTR [ecx-0x3cb26fbd]
  41bbcb:	adc    al,0x93
  41bbcd:	stos   BYTE PTR es:[edi],al
  41bbce:	lock and DWORD PTR [edi+0x71cf418b],ebp
  41bbd5:	mov    ds:0x9713938d,eax
  41bbda:	adc    eax,DWORD PTR [esi]
  41bbdc:	xor    eax,0xd191bb8d
  41bbe1:	in     eax,0x6d
  41bbe3:	xchg   edi,eax
  41bbe4:	rol    DWORD PTR [ecx],1
  41bbe6:	mov    bl,0xee
  41bbe8:	mov    eax,ds:0x51f9ceca
  41bbed:	mov    ebx,0xfa6856e
  41bbf2:	shl    ch,0xbb
  41bbf5:	or     cl,BYTE PTR [eax+0x75]
  41bbf8:	cld    
  41bbf9:	push   edx
  41bbfa:	ds fcomi st,st(1)
  41bbfd:	stos   BYTE PTR es:[edi],al
  41bbfe:	sub    DWORD PTR [esi-0x58d6cca6],0xffffffbe
  41bc05:	push   ss
  41bc06:	xchg   esp,eax
  41bc07:	ins    DWORD PTR es:[edi],dx
  41bc08:	imul   DWORD PTR [ebx-0x61]
  41bc0b:	jle    0x41bbfd
  41bc0d:	cmp    ecx,ebp
  41bc0f:	xlat   BYTE PTR ds:[ebx]
  41bc10:	push   ss
  41bc11:	je     0x41bc2f
  41bc13:	dec    eax
  41bc14:	xlat   BYTE PTR ds:[ebx]
  41bc15:	sbb    bh,BYTE PTR [eax+ebp*1]
  41bc18:	xchg   BYTE PTR [esi+0x6f],bh
  41bc1b:	pusha  
  41bc1c:	nop
  41bc1d:	repnz in al,dx
  41bc1f:	jmp    0xf1d3:0x1274fb22
  41bc26:	not    DWORD PTR [ebx]
  41bc28:	cld    
  41bc29:	mov    ebp,0x689d616b
  41bc2e:	sub    esp,edx
  41bc30:	cmp    bh,BYTE PTR [edi-0x23a72104]
  41bc36:	mov    edi,0x2aa3b7fe
  41bc3b:	jl     0x41bcae
  41bc3d:	sub    esi,edx
  41bc3f:	inc    ebx
  41bc40:	mov    al,0x64
  41bc42:	test   eax,0x54317c25
  41bc47:	ins    DWORD PTR es:[edi],dx
  41bc48:	call   0x778d:0x75d7f059
  41bc4f:	cwde   
  41bc50:	jno    0x41bbeb
  41bc52:	fs in  al,0xf5
  41bc55:	or     dl,BYTE PTR [edx-0x4ada9dac]
  41bc5b:	(bad)  
  41bc5c:	or     al,0x6e
  41bc5e:	dec    ebx
  41bc5f:	or     DWORD PTR [ebx-0x26ce421e],esi
  41bc65:	dec    ecx
  41bc66:	out    dx,al
  41bc67:	test   eax,0xc09f5633
  41bc6c:	call   0xc7530e6a
  41bc71:	fldlg2 
  41bc73:	inc    esp
  41bc74:	and    eax,0x131140af
  41bc79:	cmp    dl,cl
  41bc7b:	out    0x77,eax
  41bc7d:	or     al,0x62
  41bc7f:	adc    ecx,DWORD PTR [edx]
  41bc81:	sub    DWORD PTR [edi],esi
  41bc83:	push   edx
  41bc84:	lea    esp,[edx]
  41bc86:	(bad)  
  41bc87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc88:	pop    esp
  41bc89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc8a:	push   edx
  41bc8b:	cmp    al,0x31
  41bc8d:	sub    BYTE PTR [ebp+0x4],dl
  41bc90:	pop    ss
  41bc91:	sub    eax,0x4bea4f23
  41bc96:	mov    bh,ch
  41bc98:	sub    ebp,DWORD PTR [eax+0x43592b79]
  41bc9e:	ffreep st(7)
  41bca0:	lahf   
  41bca1:	lock xchg edi,eax
  41bca3:	jp     0x41bd15
  41bca5:	into   
  41bca6:	xor    edx,DWORD PTR ss:[edx-0x67]
  41bcaa:	icebp  
  41bcab:	fstp   TBYTE PTR [esi]
  41bcad:	lds    esi,FWORD PTR [ebx]
  41bcaf:	dec    esi
  41bcb0:	cmc    
  41bcb1:	imul   edi,DWORD PTR [ebx],0xc60a1d74
  41bcb7:	ds pop edi
  41bcb9:	mov    eax,ds:0x18962ece
  41bcbe:	add    eax,0xaf60ec22
  41bcc3:	and    eax,0x8f84a959
  41bcc8:	sub    eax,0xfa26fa
  41bccd:	push   es
  41bcce:	dec    ecx
  41bccf:	and    dh,al
  41bcd1:	in     al,dx
  41bcd2:	inc    eax
  41bcd3:	dec    ebx
  41bcd4:	shr    ecx,1
  41bcd6:	xchg   esp,eax
  41bcd7:	mov    al,ds:0x4223fd5b
  41bcdc:	pusha  
  41bcdd:	dec    ebp
  41bcde:	mov    ah,0xf4
  41bce0:	adc    BYTE PTR [ebp+ecx*1-0xa3e35d9],ch
  41bce7:	cmp    eax,0x62ac1337
  41bcec:	cmp    al,0x64
  41bcee:	aam    0x63
  41bcf0:	sub    eax,0x6e3ff8f2
  41bcf5:	mov    bh,dl
  41bcf7:	cli    
  41bcf8:	ds call 0x4cff:0x455cc3ef
  41bd00:	(bad)  [ebp+0xe6f503b]
  41bd06:	cld    
  41bd07:	jo     0x41bc9d
  41bd09:	dec    ecx
  41bd0a:	push   cs
  41bd0b:	add    WORD PTR [ecx+0x6b311204],si
  41bd12:	add    al,0x1f
  41bd14:	scas   eax,DWORD PTR es:[edi]
  41bd15:	fist   DWORD PTR [ebp+ecx*1+0x3]
  41bd19:	call   0x960b68e9
  41bd1e:	in     al,dx
  41bd1f:	jg     0x41bd3d
  41bd21:	mov    dl,al
  41bd23:	and    DWORD PTR [ebp+0x39],edi
  41bd26:	inc    esi
  41bd27:	mov    al,ds:0x85cfcded
  41bd2c:	mov    ecx,0x8ca7c12d
  41bd31:	data16 add BYTE PTR [esp+ecx*1],dh
  41bd35:	scas   al,BYTE PTR es:[edi]
  41bd36:	in     al,dx
  41bd37:	lods   al,BYTE PTR ds:[esi]
  41bd38:	jno    0x41bd3e
  41bd3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd3b:	in     al,0xe3
  41bd3d:	and    al,0x83
  41bd3f:	retf   
  41bd40:	jge    0x41bcc8
  41bd42:	push   ss
  41bd43:	cmp    edx,DWORD PTR [eax]
  41bd45:	jbe    0x41bd37
  41bd47:	jno    0x41bd18
  41bd49:	xchg   BYTE PTR [ecx+edi*8],dh
  41bd4c:	mov    ds:0x9ec26ecd,al
  41bd51:	inc    ecx
  41bd52:	dec    ebp
  41bd53:	out    dx,al
  41bd54:	pop    ecx
  41bd55:	into   
  41bd56:	std    
  41bd57:	push   eax
  41bd58:	push   ebx
  41bd59:	mov    edx,0x8eb47524
  41bd5e:	test   al,0xed
  41bd60:	icebp  
  41bd61:	pop    esp
  41bd62:	inc    esi
  41bd63:	jns    0x41bd1b
  41bd65:	and    al,0xc3
  41bd67:	int    0x15
  41bd69:	mov    dh,0xf0
  41bd6b:	test   al,0xbc
  41bd6d:	xor    al,0xbb
  41bd6f:	push   ds
  41bd70:	fld    DWORD PTR [ecx]
  41bd72:	mov    fs,WORD PTR [esi]
  41bd74:	mov    al,0x62
  41bd76:	and    al,0x28
  41bd78:	cmp    DWORD PTR [edx],ebp
  41bd7a:	sub    ch,dl
  41bd7c:	adc    BYTE PTR [edi-0x80],ah
  41bd7f:	pop    edi
  41bd80:	adc    DWORD PTR [esi-0x7e],esp
  41bd83:	push   ebp
  41bd84:	pushf  
  41bd85:	cmp    dl,BYTE PTR [edx]
  41bd87:	data16 cli 
  41bd89:	aas    
  41bd8a:	add    al,0xd0
  41bd8c:	cmp    al,0xfa
  41bd8e:	sbb    eax,0x311e38a
  41bd93:	ins    BYTE PTR es:[edi],dx
  41bd94:	test   eax,0xd66b6a28
  41bd99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd9a:	jmp    0x52b31aad
  41bd9f:	inc    ebp
  41bda0:	hlt    
  41bda1:	out    dx,al
  41bda2:	sbb    al,0x9e
  41bda4:	xchg   esp,eax
  41bda5:	int3   
  41bda6:	jmp    0x800a:0x6a1351fa
  41bdad:	inc    ebp
  41bdae:	clc    
  41bdaf:	jns    0x41bdd5
  41bdb1:	enter  0xbbd2,0xab
  41bdb5:	cmp    al,0xe2
  41bdb7:	rol    esp,1
  41bdb9:	ror    ch,cl
  41bdbb:	repnz gs dec edx
  41bdbe:	jmp    0x41bd53
  41bdc0:	ret    
  41bdc1:	pop    ebx
  41bdc2:	loop   0x41be32
  41bdc4:	adc    BYTE PTR [ecx+edx*4-0x7d],al
  41bdc8:	add    DWORD PTR [ebp-0x6836bdd6],ebx
  41bdce:	xchg   edi,eax
  41bdcf:	adc    BYTE PTR [edi],0x71
  41bdd2:	jmp    0x41bddb
  41bdd4:	call   0xca7451d8
  41bdd9:	fisttp DWORD PTR [esi+0x78]
  41bddc:	icebp  
  41bddd:	in     eax,dx
  41bdde:	pop    edx
  41bddf:	stc    
  41bde0:	in     eax,dx
  41bde1:	cwde   
  41bde2:	dec    eax
  41bde3:	mov    esp,0x24c2e47f
  41bde8:	les    ebp,FWORD PTR [edx]
  41bdea:	sbb    eax,0xbd1ec5d8
  41bdef:	into   
  41bdf0:	inc    esi
  41bdf1:	jne    0x41bdf3
  41bdf3:	imul   esi,DWORD PTR [eax+0x6801b33a],0xfffffff7
  41bdfa:	loope  0x41be4e
  41bdfc:	ins    DWORD PTR es:[edi],dx
  41bdfd:	pop    ds
  41bdfe:	add    BYTE PTR [edi+0x4a507932],ah
  41be04:	xor    BYTE PTR [esi+0x17e819ff],bl
  41be0a:	xor    ch,BYTE PTR ds:0xcf782c4e
  41be10:	pop    ss
  41be11:	das    
  41be12:	popa   
  41be13:	in     al,0x77
  41be15:	push   eax
  41be16:	jno    0x41be7a
  41be18:	push   edx
  41be19:	aam    0x5e
  41be1b:	cmp    eax,0x5a9f83a9
  41be20:	and    al,0x44
  41be22:	mov    al,ds:0x88d4466c
  41be27:	(bad)  
  41be28:	mov    dl,0xb8
  41be2a:	es lock sub eax,ebx
  41be2e:	aam    0x1d
  41be30:	adc    al,0xa
  41be32:	sub    bl,BYTE PTR [edx+edx*2+0x1d57e311]
  41be39:	outs   dx,DWORD PTR ds:[esi]
  41be3a:	rol    bl,0x6b
  41be3d:	xor    al,0x8a
  41be3f:	test   DWORD PTR gs:[ebp+edi*2-0x64de9006],edx
  41be47:	xor    ebp,ebx
  41be49:	sub    eax,0xa6881fab
  41be4e:	in     al,0x9
  41be50:	and    esi,edi
  41be52:	push   edi
  41be53:	push   0x1d
  41be55:	push   ebp
  41be56:	outs   dx,BYTE PTR ds:[esi]
  41be57:	add    BYTE PTR [esi+ebp*8],0xc0
  41be5b:	inc    esp
  41be5c:	sbb    al,0xac
  41be5e:	inc    eax
  41be5f:	pop    esp
  41be60:	mov    ds:0xf0c43a2b,al
  41be65:	out    dx,eax
  41be66:	xchg   edi,eax
  41be67:	(bad)  
  41be68:	retf   
  41be69:	mov    esi,0x4d50e743
  41be6e:	aad    0x60
  41be70:	xchg   ecx,eax
  41be71:	sahf   
  41be72:	mov    cl,0xa2
  41be74:	fimul  DWORD PTR [esi]
  41be76:	hlt    
  41be77:	cmp    DWORD PTR [eax-0x33cee448],0x7f
  41be7e:	push   eax
  41be7f:	sbb    dh,BYTE PTR [edi+0x60]
  41be82:	or     al,0x7
  41be84:	or     eax,0x9e1ef162
  41be89:	mov    ah,0xbe
  41be8b:	cmp    al,0xbf
  41be8d:	jmp    0xfa0b5502
  41be92:	int3   
  41be93:	leave  
  41be94:	pop    ebx
  41be95:	push   cs
  41be96:	jnp    0x41bedc
  41be98:	mul    BYTE PTR [ebx+0x1b60d74]
  41be9e:	jns    0x41bef5
  41bea0:	inc    esi
  41bea1:	outs   dx,DWORD PTR ds:[esi]
  41bea2:	push   edx
  41bea3:	sub    DWORD PTR [ecx+esi*1+0x2f982bbc],0x1c
  41beab:	push   ecx
  41beac:	xchg   esp,eax
  41bead:	push   cs
  41beae:	push   esp
  41beaf:	mov    esp,0x68e58327
  41beb4:	xchg   ebp,eax
  41beb5:	push   esi
  41beb6:	fild   QWORD PTR fs:[edi]
  41beb9:	xor    eax,0xa1588bae
  41bebe:	addr16 in al,dx
  41bec0:	(bad)  
  41bec2:	or     ecx,DWORD PTR [esp+edi*1-0x326c990b]
  41bec9:	inc    ebx
  41beca:	(bad)  
  41becc:	sbb    ebx,DWORD PTR [ecx-0x1c5bbbcc]
  41bed2:	mov    ds:0x7a39e8d5,eax
  41bed7:	mov    BYTE PTR [edi+0x288ef348],cl
  41bedd:	or     ebx,DWORD PTR [edx+0x41]
  41bee0:	and    ebp,DWORD PTR [edx-0x47c024d7]
  41bee6:	mov    cl,0x29
  41bee8:	mov    bl,0x86
  41beea:	xchg   DWORD PTR [ebx],ecx
  41beec:	sub    eax,0xb8525481
  41bef1:	mov    bl,ch
  41bef3:	add    BYTE PTR [eax+edi*1],dh
  41bef6:	fidiv  DWORD PTR [eax-0x52]
  41bef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41befa:	cmp    BYTE PTR [ebx+0x5834109b],al
  41bf00:	mov    fs,eax
  41bf02:	inc    eax
  41bf03:	inc    esi
  41bf04:	jne    0x41bed4
  41bf06:	test   eax,0x2b217c42
  41bf0b:	dec    ecx
  41bf0c:	push   0x8d300da8
  41bf11:	add    eax,0x88db2005
  41bf16:	mov    dh,0xfa
  41bf18:	aas    
  41bf19:	push   esp
  41bf1a:	sbb    esp,eax
  41bf1c:	xchg   esp,eax
  41bf1d:	in     al,dx
  41bf1e:	stos   DWORD PTR es:[edi],eax
  41bf1f:	push   edi
  41bf20:	xchg   ebp,eax
  41bf21:	push   0xffffffaa
  41bf23:	mov    ebp,DWORD PTR [ebp-0x1632e08e]
  41bf29:	hlt    
  41bf2a:	call   0x9e0362cc
  41bf2f:	dec    ecx
  41bf30:	inc    BYTE PTR [esi+ecx*8]
  41bf33:	imul   BYTE PTR [edi+0x4]
  41bf36:	(bad)  
  41bf37:	loopne 0x41befa
  41bf39:	fidivr WORD PTR [esi-0x32]
  41bf3c:	sahf   
  41bf3d:	sti    
  41bf3e:	fidivr DWORD PTR [ebp-0x77]
  41bf41:	mov    ebp,0xd5b4370a
  41bf46:	jmp    0xbfb62786
  41bf4b:	lods   eax,DWORD PTR ds:[esi]
  41bf4c:	or     ecx,DWORD PTR [ecx+0x20]
  41bf4f:	(bad)  
  41bf50:	push   esi
  41bf51:	mov    ds:0x78bf1170,eax
  41bf56:	dec    edi
  41bf57:	inc    ebx
  41bf58:	adc    al,0xe1
  41bf5a:	push   ss
  41bf5b:	jo     0x41bfaa
  41bf5d:	lock punpckhbw mm0,QWORD PTR [eax+0x63]
  41bf62:	cmp    al,0x56
  41bf64:	pop    ebx
  41bf65:	(bad)  
  41bf66:	rol    DWORD PTR [ecx-0x622d59c0],1
  41bf6c:	jle    0x41bef6
  41bf6e:	not    bl
  41bf70:	jp     0x41bf2a
  41bf72:	adc    eax,0xa293f923
  41bf77:	adc    ch,BYTE PTR [ebp+0x61]
  41bf7a:	push   cs
  41bf7b:	cli    
  41bf7c:	add    DWORD PTR [ebx-0x22],esi
  41bf7f:	clc    
  41bf80:	xor    esp,DWORD PTR [ecx-0x9e0f63a]
  41bf86:	dec    eax
  41bf87:	arpl   bx,cx
  41bf89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf8a:	pop    edx
  41bf8b:	jg     0x41bfa4
  41bf8d:	xchg   ebx,eax
  41bf8e:	ins    DWORD PTR es:[edi],dx
  41bf8f:	jp     0x41bfec
  41bf91:	pop    ebp
  41bf92:	(bad)  
  41bf93:	xchg   ecx,eax
  41bf94:	mov    cs,ebp
  41bf96:	pop    ebp
  41bf97:	ror    BYTE PTR ds:0x2bdd678a,1
  41bf9d:	fdivr  st,st(7)
  41bf9f:	into   
  41bfa0:	and    eax,0x6d43cef0
  41bfa5:	test   BYTE PTR [ebx-0x35],dl
  41bfa8:	retf   
  41bfa9:	sbb    bh,BYTE PTR [edx+0xd9df3f8]
  41bfaf:	scas   eax,DWORD PTR es:[edi]
  41bfb0:	push   ebx
  41bfb1:	in     al,0xe1
  41bfb3:	imul   DWORD PTR [edx+eax*2-0x79]
  41bfb7:	sbb    dh,BYTE PTR [esi]
  41bfb9:	dec    ebp
  41bfba:	bound  ecx,QWORD PTR [eax+0x289c4cb]
  41bfc0:	arpl   WORD PTR [ecx-0x30bd5dea],cx
  41bfc6:	and    BYTE PTR [esi-0x48f774a2],al
  41bfcc:	cmp    al,0x16
  41bfce:	ins    DWORD PTR es:[edi],dx
  41bfcf:	mov    cl,0x45
  41bfd1:	and    DWORD PTR [edx-0x21456974],ebx
  41bfd7:	jmp    0x720a0e5b
  41bfdc:	push   0x43
  41bfde:	in     eax,0x6c
  41bfe0:	and    DWORD PTR [ecx],edi
  41bfe2:	outs   dx,BYTE PTR ds:[esi]
  41bfe3:	cwde   
  41bfe4:	dec    eax
  41bfe5:	adc    dl,BYTE PTR [ebx-0x5]
  41bfe8:	out    dx,eax
  41bfe9:	cmp    bl,BYTE PTR [edx-0x4e23a6c9]
  41bfef:	dec    edi
  41bff0:	fstp   TBYTE PTR [esp+eax*4]
  41bff3:	out    dx,al
  41bff4:	xor    DWORD PTR [eax],ecx
  41bff6:	push   edi
  41bff7:	aad    0x6f
  41bff9:	xchg   ebp,eax
  41bffa:	test   al,0x8f
  41bffc:	bound  ebp,QWORD PTR [ebx]
  41bffe:	aad    0xb0
  41c000:	pop    ebx
  41c001:	adc    al,0xbf
  41c003:	je     0x41bfa2
  41c005:	retf   
  41c006:	adc    esi,esp
  41c008:	ja     0x41c038
  41c00a:	push   0xffffffb9
  41c00c:	enter  0x73e3,0x4a
  41c010:	mov    ebp,0x50c70419
  41c015:	xor    al,0xa2
  41c017:	mov    edx,0xf303cdcb
  41c01c:	cmc    
  41c01d:	mov    dl,0x47
  41c01f:	xlat   BYTE PTR ds:[ebx]
  41c020:	jecxz  0x41c00a
  41c022:	hlt    
  41c023:	xchg   ebp,eax
  41c024:	and    al,0xe4
  41c026:	mov    dl,0x1
  41c028:	or     cl,BYTE PTR [esi-0xa]
  41c02b:	mov    ds:0xccb7c8ec,eax
  41c030:	imul   edi,ecx,0x49
  41c033:	std    
  41c034:	mov    ebx,0x6913bb36
  41c039:	icebp  
  41c03a:	cmp    dh,BYTE PTR [edi]
  41c03c:	jb     0x41c081
  41c03e:	std    
  41c03f:	daa    
  41c040:	test   DWORD PTR [edx-0x73],edi
  41c043:	sahf   
  41c044:	push   edi
  41c045:	adc    ebp,edi
  41c047:	cmp    ecx,0x9295b3c1
  41c04d:	popf   
  41c04e:	repnz mov edi,0x6d19b621
  41c054:	fwait
  41c055:	pop    edi
  41c056:	cwde   
  41c057:	mov    eax,0xf5871683
  41c05c:	ins    BYTE PTR es:[edi],dx
  41c05d:	fst    DWORD PTR [eax+edx*2]
  41c060:	std    
  41c061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c062:	lock inc ecx
  41c064:	and    BYTE PTR ds:[edx+0xe],dl
  41c068:	xchg   ebp,eax
  41c069:	or     al,0x94
  41c06b:	cmc    
  41c06c:	add    dh,BYTE PTR [ecx]
  41c06e:	ss jg  0x41c009
  41c071:	ins    DWORD PTR es:[edi],dx
  41c072:	rcr    BYTE PTR [edi-0x2c],0x8d
  41c076:	sti    
  41c077:	push   0xe7ea3366
  41c07c:	adc    al,BYTE PTR [eax]
  41c07e:	add    BYTE PTR [eax],al
  41c080:	add    BYTE PTR [eax],al
  41c082:	mov    dh,0x3a
  41c084:	out    0x1,eax
  41c086:	out    dx,eax
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	push   esi
  41c08f:	push   0x3c68bd9d
  41c094:	add    DWORD PTR [eax],eax
  41c096:	repz add al,0x0
  41c099:	add    BYTE PTR [ebp+0x47f1e462],dl
  41c09f:	outs   dx,DWORD PTR ds:[esi]
  41c0a0:	xchg   BYTE PTR [edi],ch
  41c0a2:	inc    eax
  41c0a3:	scas   al,BYTE PTR es:[edi]
  41c0a4:	xor    eax,0xa55bfcd7
  41c0a9:	outs   dx,BYTE PTR ds:[esi]
  41c0aa:	adc    al,0xa
  41c0ac:	repnz dec edi
  41c0ae:	ss or  ch,0x21
  41c0b2:	cli    
  41c0b3:	push   esp
  41c0b4:	lock scas al,BYTE PTR es:[edi]
  41c0b6:	hlt    
  41c0b7:	or     ebx,ebp
  41c0b9:	push   ecx
  41c0ba:	pop    ss
  41c0bb:	js     0x41c129
  41c0bd:	inc    esi
  41c0be:	bound  edx,QWORD PTR [edi-0x54]
  41c0c1:	call   0x9e305c84
  41c0c6:	(bad)  
  41c0c7:	shr    al,0x4e
  41c0ca:	dec    edi
  41c0cb:	ret    
  41c0cc:	pop    edi
  41c0cd:	cmp    BYTE PTR [esi],0xea
  41c0d0:	test   edx,ecx
  41c0d2:	retf   
  41c0d3:	jmp    0xa4c:0x727c3f1e
  41c0da:	add    al,BYTE PTR [edi]
  41c0dc:	xor    al,0x6f
  41c0de:	jns    0x41c0b0
  41c0e0:	call   0xa5d15969
  41c0e5:	aas    
  41c0e6:	jmp    0x5894bf2b
  41c0eb:	mov    ds:0x16bad07,eax
  41c0f0:	xlat   BYTE PTR ds:[ebx]
  41c0f1:	lahf   
  41c0f2:	xor    al,0x42
  41c0f4:	adc    cl,ah
  41c0f6:	pop    dx
  41c0f8:	test   DWORD PTR [ebx],ecx
  41c0fa:	xchg   ebx,eax
  41c0fb:	cmp    ecx,eax
  41c0fd:	ror    BYTE PTR [ebx],cl
  41c0ff:	push   DWORD PTR [ecx]
  41c101:	ja     0x41c15f
  41c103:	xchg   edi,eax
  41c104:	jg     0x41c09b
  41c106:	daa    
  41c107:	add    eax,0x6b8dd24f
  41c10c:	fcomp  DWORD PTR [eax-0x3d]
  41c10f:	push   ecx
  41c110:	adc    cl,BYTE PTR [ebp-0x56]
  41c113:	pop    esp
  41c114:	push   edi
  41c115:	(bad)  
  41c116:	fisub  WORD PTR [edx+0x25]
  41c119:	out    dx,al
  41c11a:	jge    0x41c0cc
  41c11c:	div    dl
  41c11e:	js     0x41c158
  41c120:	rol    DWORD PTR [esi],cl
  41c122:	test   eax,0x46ad56bb
  41c127:	repnz or eax,ecx
  41c12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c12b:	out    0xfd,eax
  41c12d:	add    DWORD PTR [eax],edx
  41c12f:	dec    esp
  41c130:	outs   dx,DWORD PTR ds:[esi]
  41c131:	and    DWORD PTR [edx],esi
  41c133:	or     al,bh
  41c135:	lods   al,BYTE PTR ds:[esi]
  41c136:	inc    ebp
  41c137:	xor    BYTE PTR [ecx-0x3ae92e8e],bl
  41c13d:	add    eax,0x42cef15d
  41c142:	and    ch,BYTE PTR [ecx+0x26cb0956]
  41c148:	clc    
  41c149:	xchg   dl,ah
  41c14b:	pop    ds
  41c14c:	loopne 0x41c1a2
  41c14e:	dec    esi
  41c14f:	dec    esi
  41c150:	xor    BYTE PTR [esi+0x22dff84],bl
  41c156:	cmc    
  41c157:	stos   DWORD PTR es:[edi],eax
  41c158:	loop   0x41c145
  41c15a:	cmp    DWORD PTR [edi+0x2e839576],ebp
  41c160:	xchg   ebp,eax
  41c161:	mov    WORD PTR [edi-0x6d1683b6],es
  41c167:	pop    edi
  41c168:	dec    esp
  41c169:	aam    0x6b
  41c16b:	mov    cl,0x48
  41c16d:	mov    esp,0x51a4b167
  41c172:	pop    ebp
  41c173:	push   esi
  41c174:	mov    esi,0x6f170f72
  41c179:	(bad)  
  41c17a:	retf   0xd514
  41c17d:	mov    WORD PTR [esi],es
  41c17f:	(bad)  
  41c180:	sbb    cl,BYTE PTR [ebp+0x8]
  41c183:	bnd jne 0x41c1cc
  41c186:	mov    ebx,0x35f72059
  41c18b:	xchg   BYTE PTR [ebx-0x70093baa],bl
  41c191:	cmp    al,0x1c
  41c193:	mov    WORD PTR [edi-0x3677e510],cs
  41c199:	nop
  41c19a:	jo     0x41c120
  41c19c:	mov    WORD PTR [esi+0x6f9db517],ss
  41c1a2:	hlt    
  41c1a3:	les    esi,FWORD PTR [edx-0x7ede86d9]
  41c1a9:	adc    edx,esp
  41c1ab:	int3   
  41c1ac:	jnp    0x41c12f
  41c1ae:	pop    edi
  41c1af:	sbb    DWORD PTR [ebx+0xe],ebx
  41c1b2:	push   ecx
  41c1b3:	mov    bh,0xde
  41c1b5:	inc    eax
  41c1b6:	mov    edi,0x857ae7d3
  41c1bb:	mov    eax,ds:0xf4318941
  41c1c0:	jo     0x41c1e3
  41c1c2:	shl    DWORD PTR [eax],cl
  41c1c4:	jb     0x41c1dc
  41c1c6:	dec    esi
  41c1c7:	adc    ebx,esi
  41c1c9:	daa    
  41c1ca:	dec    ecx
  41c1cb:	dec    esi
  41c1cc:	aas    
  41c1cd:	lock sbb eax,0x3fce65c0
  41c1d3:	jp     0x41c160
  41c1d5:	(bad)  
  41c1d6:	mov    eax,0x9abd47c4
  41c1db:	push   eax
  41c1dc:	ss sbb al,0x3f
  41c1df:	or     ah,cl
  41c1e1:	shr    BYTE PTR [edi],0xf0
  41c1e4:	xor    edi,DWORD PTR [ecx-0xc]
  41c1e7:	in     eax,0x83
  41c1e9:	adc    BYTE PTR [esi+edi*2],0x42
  41c1ed:	xor    eax,0x6c6d3428
  41c1f2:	xchg   DWORD PTR [edx+0x6a],edi
  41c1f5:	adc    ch,cl
  41c1f7:	loop   0x41c231
  41c1f9:	jmp    0xd89f00a
  41c1fe:	popf   
  41c1ff:	(bad)  
  41c200:	addr16 aaa 
  41c202:	mov    al,ds:0x33548877
  41c207:	xlat   BYTE PTR ds:[bx]
  41c209:	shr    DWORD PTR [eax+ebx*4-0x6e],0x6d
  41c20e:	in     al,dx
  41c20f:	cdq    
  41c210:	pop    es
  41c211:	mov    ax,0x30c
  41c215:	dec    BYTE PTR [eax+0x2fbbf1bd]
  41c21b:	or     esi,DWORD PTR [edx+edi*8-0x22ba3fdf]
  41c222:	mov    ds:0x14075462,al
  41c227:	fldcw  WORD PTR ds:0x15662f21
  41c22d:	loop   0x41c20c
  41c22f:	push   0xffffff96
  41c231:	mov    ebp,0xd01ffed
  41c236:	mov    esp,0xc942d464
  41c23b:	es jns 0x41c204
  41c23e:	fcmovnbe st,st(4)
  41c240:	ret    
  41c241:	sub    DWORD PTR [edx],ecx
  41c243:	mov    ds:0x17b58824,al
  41c248:	mov    esp,0x4e656839
  41c24d:	daa    
  41c24e:	(bad)  
  41c24f:	dec    ebp
  41c250:	push   es
  41c251:	push   ebx
  41c252:	pop    ss
  41c253:	nop
  41c254:	sbb    eax,0x57073ffe
  41c259:	cmp    eax,0x4711ff38
  41c25e:	jb     0x41c2cd
  41c260:	lds    ebx,FWORD PTR [esi]
  41c262:	inc    esi
  41c263:	imul   ecx,ecx,0x22
  41c266:	arpl   WORD PTR [ebx-0x2322d2c4],ax
  41c26c:	sahf   
  41c26d:	(bad)  
  41c26e:	shl    BYTE PTR [ebx-0x21a4fc65],1
  41c274:	xchg   DWORD PTR [ebx+ecx*2+0x427f7f21],ebp
  41c27b:	cmp    DWORD PTR cs:[ecx+ecx*4],ecx
  41c27f:	imul   esi,DWORD PTR [ecx],0xf9ffe322
  41c285:	cmp    ch,0xe2
  41c288:	mov    ss,WORD PTR [edx]
  41c28a:	pop    eax
  41c28b:	and    bl,BYTE PTR [esi]
  41c28d:	pop    esp
  41c28e:	(bad)  
  41c28f:	int3   
  41c290:	(bad)  
  41c291:	mov    dh,0x5e
  41c293:	cmc    
  41c294:	outs   dx,BYTE PTR ds:[esi]
  41c295:	mov    ecx,0x1c5e875e
  41c29a:	pop    ebp
  41c29b:	call   0x70f7085b
  41c2a0:	pop    ss
  41c2a1:	mov    bh,0x9
  41c2a3:	and    eax,0x1117e06a
  41c2a8:	loope  0x41c2ae
  41c2aa:	popf   
  41c2ab:	out    0xa4,eax
  41c2ad:	xor    al,0x5
  41c2af:	sar    DWORD PTR [ebp+eiz*8+0x34],1
  41c2b3:	dec    ebp
  41c2b4:	mov    bh,0xa8
  41c2b6:	xchg   edx,ecx
  41c2b8:	adc    DWORD PTR [ebx+0x2d],esp
  41c2bb:	jno    0x41c317
  41c2bd:	jle    0x41c31c
  41c2bf:	lea    edi,[ecx+esi*4-0x7f8f8989]
  41c2c6:	test   BYTE PTR [ecx+0xc6e5724],bh
  41c2cc:	or     DWORD PTR [ecx+0x77885b15],ebx
  41c2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2d3:	dec    eax
  41c2d4:	daa    
  41c2d5:	cmp    bl,cl
  41c2d7:	enter  0x8336,0xe8
  41c2db:	ficom  WORD PTR [ecx+0x3b]
  41c2de:	pop    ebx
  41c2df:	jg     0x41c2d0
  41c2e1:	mov    eax,0x4cb7e758
  41c2e6:	mov    ch,0x68
  41c2e8:	and    edx,ecx
  41c2ea:	add    eax,0x672bb385
  41c2ef:	add    DWORD PTR [esi+ecx*2],ecx
  41c2f2:	push   0x589a7908
  41c2f7:	jmp    0xaa071270
  41c2fc:	fwait
  41c2fd:	dec    esp
  41c2fe:	push   ecx
  41c2ff:	xor    bl,BYTE PTR [esi-0x4369853a]
  41c305:	hlt    
  41c306:	xchg   BYTE PTR [ecx],ch
  41c308:	cmc    
  41c309:	sti    
  41c30a:	mov    DWORD PTR [esi+ebp*8-0x4a187b94],eax
  41c311:	popf   
  41c312:	retf   0x2bbf
  41c315:	mov    esi,edi
  41c317:	xlat   BYTE PTR ds:[ebx]
  41c318:	mov    esi,0xfc2f38d2
  41c31d:	push   ebx
  41c31e:	lahf   
  41c31f:	(bad)  
  41c320:	arpl   bp,sp
  41c322:	into   
  41c323:	xor    esi,eax
  41c325:	fimul  DWORD PTR [ebx+0x60]
  41c328:	pop    ecx
  41c329:	mov    ah,0x65
  41c32b:	jb     0x41c37c
  41c32d:	add    al,0x69
  41c32f:	add    DWORD PTR [ecx-0x13],edi
  41c332:	inc    edx
  41c333:	fisub  DWORD PTR [ebp-0x69d919e1]
  41c339:	adc    al,0x33
  41c33b:	mov    esp,0x17c74fe2
  41c340:	jmp    0x41c3ab
  41c342:	push   esp
  41c343:	or     bl,al
  41c345:	jmp    0x18c9d6ce
  41c34a:	jbe    0x41c3c4
  41c34c:	sbb    al,0x70
  41c34e:	out    0x37,eax
  41c350:	xlat   BYTE PTR ds:[ebx]
  41c351:	xchg   DWORD PTR [eax],ebx
  41c353:	xchg   DWORD PTR [edi+0x7b37e9a0],eax
  41c359:	test   eax,0xad637176
  41c35e:	(bad)  
  41c35f:	or     al,BYTE PTR [esi]
  41c361:	adc    BYTE PTR [esi+0x5e56ad00],ch
  41c367:	(bad)  
  41c368:	mov    cs,WORD PTR [ebx-0x5d]
  41c36b:	icebp  
  41c36c:	fidiv  WORD PTR [edx+0x6e29d5e0]
  41c372:	stos   BYTE PTR es:[edi],al
  41c373:	(bad)  
  41c374:	mov    esp,0x9c715674
  41c379:	into   
  41c37a:	popf   
  41c37b:	sti    
  41c37c:	into   
  41c37d:	ret    
  41c37e:	ret    
  41c37f:	icebp  
  41c380:	repnz push ebp
  41c382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c383:	aad    0x41
  41c385:	jae    0x41c3c6
  41c387:	xor    cl,BYTE PTR [ebx]
  41c389:	jl     0x41c365
  41c38b:	mov    ecx,0x61a7263
  41c390:	xchg   ecx,eax
  41c391:	dec    edx
  41c392:	push   edx
  41c393:	test   DWORD PTR [ecx+ebp*2+0x33],ecx
  41c397:	and    DWORD PTR [bx+si+0x11],edi
  41c39b:	inc    edx
  41c39c:	add    al,0x0
  41c39e:	mov    ecx,0x72452b2a
  41c3a3:	(bad)  
  41c3a4:	std    
  41c3a5:	pop    ebp
  41c3a6:	mov    ah,0x9e
  41c3a8:	std    
  41c3a9:	sbb    al,BYTE PTR ds:0x79040cf6
  41c3af:	fidiv  DWORD PTR [eax]
  41c3b1:	icebp  
  41c3b2:	out    0xce,eax
  41c3b4:	sub    al,0xe1
  41c3b6:	out    0x16,eax
  41c3b8:	into   
  41c3b9:	sbb    ah,BYTE PTR [esi+ebx*1+0x74]
  41c3bd:	pushf  
  41c3be:	lods   al,BYTE PTR ds:[esi]
  41c3bf:	or     dl,bl
  41c3c1:	push   esp
  41c3c2:	xchg   edx,eax
  41c3c3:	fwait
  41c3c4:	aaa    
  41c3c5:	div    DWORD PTR [edi]
  41c3c7:	mov    cl,BYTE PTR [edx+ecx*1-0x50c776ea]
  41c3ce:	mov    DWORD PTR ds:[ecx],edx
  41c3d1:	hlt    
  41c3d2:	mov    bl,0xcc
  41c3d4:	xchg   DWORD PTR [ebp+0x22],esi
  41c3d7:	add    al,0x4b
  41c3d9:	imul   esp,DWORD PTR [edi+0x1ce2b4ef],0x8
  41c3e0:	and    dl,BYTE PTR [eax+0x1a988c55]
  41c3e6:	xchg   esp,eax
  41c3e7:	inc    eax
  41c3e8:	js     0x41c3c3
  41c3ea:	dec    esp
  41c3eb:	data16 mov ss,WORD PTR [esi]
  41c3ee:	aas    
  41c3ef:	dec    edx
  41c3f0:	jne    0x41c376
  41c3f2:	fs jno 0x41c45b
  41c3f5:	cmp    al,0x13
  41c3f7:	cld    
  41c3f8:	mov    bh,0xa4
  41c3fa:	rcl    BYTE PTR [edi+0x48],1
  41c3fd:	call   0xcbab4764
  41c402:	mov    esp,0x54d2b3d2
  41c407:	ret    0x629e
  41c40a:	push   es
  41c40b:	mov    esi,DWORD PTR [esp+edi*1+0x58]
  41c40f:	add    BYTE PTR [edx+0x71b779cf],bl
  41c415:	mov    ebp,0xfeb2d435
  41c41a:	mov    edx,0x9d3d0292
  41c41f:	out    0xeb,eax
  41c421:	addr16 cmc 
  41c423:	jo     0x41c44a
  41c425:	push   edi
  41c426:	loopne 0x41c45c
  41c428:	lds    esi,FWORD PTR [edx]
  41c42a:	and    ebx,DWORD PTR [ebx+0x5559618f]
  41c430:	jns    0x41c3b8
  41c432:	dec    edi
  41c433:	sti    
  41c434:	jmp    0x259b:0xd0d82bf0
  41c43b:	push   ebx
  41c43c:	pop    ebx
  41c43d:	ins    BYTE PTR es:[edi],dx
  41c43e:	inc    edi
  41c43f:	not    ebp
  41c441:	cmp    eax,esi
  41c443:	daa    
  41c444:	mov    bl,0xf3
  41c446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c447:	int3   
  41c448:	cmp    ebp,DWORD PTR [edi]
  41c44a:	mov    eax,ds:0xc5383be
  41c44f:	or     eax,0x1b8c8fa0
  41c454:	retf   
  41c455:	jge    0x41c4be
  41c457:	jl     0x41c4c6
  41c459:	(bad)  
  41c45a:	std    
  41c45b:	inc    ebx
  41c45c:	push   ss
  41c45d:	jnp    0x41c467
  41c45f:	popf   
  41c460:	sti    
  41c461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c462:	iret   
  41c463:	mov    ds:0x315fa97f,eax
  41c468:	bound  ebp,QWORD PTR [eax]
  41c46a:	sub    DWORD PTR [esi],esp
  41c46c:	ins    DWORD PTR es:[edi],dx
  41c46d:	mov    ds,WORD PTR [ecx]
  41c46f:	scas   al,BYTE PTR es:[edi]
  41c470:	mov    esi,eax
  41c472:	jae    0x41c4b9
  41c474:	or     BYTE PTR [ecx+0x6e19adc7],al
  41c47a:	push   ss
  41c47b:	iret   
  41c47c:	pop    ds
  41c47d:	sub    al,0x4d
  41c47f:	xchg   edx,eax
  41c480:	dec    ebx
  41c481:	sub    edx,DWORD PTR [edi-0x35]
  41c484:	and    eax,0x56315530
  41c489:	pop    edx
  41c48a:	stos   DWORD PTR es:[edi],eax
  41c48b:	inc    esp
  41c48c:	fcomp  QWORD PTR [ebp-0x20]
  41c48f:	pop    es
  41c490:	dec    eax
  41c491:	mov    ecx,0x7f150820
  41c496:	neg    bl
  41c498:	push   eax
  41c499:	push   edi
  41c49a:	lods   eax,DWORD PTR ds:[esi]
  41c49b:	scas   al,BYTE PTR es:[edi]
  41c49c:	lods   al,BYTE PTR ds:[esi]
  41c49d:	ss pusha 
  41c49f:	ret    0x3239
  41c4a2:	dec    esp
  41c4a3:	in     eax,dx
  41c4a4:	in     al,0x46
  41c4a6:	(bad)  
  41c4a7:	in     eax,0x2a
  41c4a9:	adc    BYTE PTR [edi-0xa3c7bff],bh
  41c4af:	call   0xbb41:0x29e00737
  41c4b6:	inc    ebp
  41c4b7:	and    eax,0x1976a3c0
  41c4bc:	repz aas 
  41c4be:	aad    0x83
  41c4c0:	mov    dl,0x5c
  41c4c2:	push   ss
  41c4c3:	jp     0x41c4e6
  41c4c5:	call   0x7b14ed34
  41c4ca:	(bad)
  41c4cd:	leave  
  41c4ce:	jns    0x41c48d
  41c4d0:	in     eax,0xf5
  41c4d2:	mov    al,ds:0x1ff3f2f3
  41c4d7:	daa    
  41c4d8:	xchg   cl,cl
  41c4da:	push   ebx
  41c4db:	(bad)  
  41c4dc:	shl    BYTE PTR [esi],1
  41c4de:	or     ch,bh
  41c4e0:	add    eax,0x9cd863a1
  41c4e5:	shl    ebx,1
  41c4e7:	sub    al,0x1f
  41c4e9:	sar    BYTE PTR [edi+0x6e],cl
  41c4ec:	repnz nop
  41c4ee:	mov    bh,0x1d
  41c4f0:	sub    eax,DWORD PTR [ecx+0xb]
  41c4f3:	cli    
  41c4f4:	in     al,dx
  41c4f5:	sbb    eax,0x409da4c1
  41c4fa:	push   ds
  41c4fb:	jae    0x41c497
  41c4fd:	mov    ecx,0xfcc3a2e4
  41c502:	stos   DWORD PTR es:[edi],eax
  41c503:	pop    ds
  41c504:	inc    esi
  41c505:	adc    edx,DWORD PTR [edi-0x45bec90a]
  41c50b:	clc    
  41c50c:	cwde   
  41c50d:	mov    esp,0xe3100613
  41c512:	fstp   QWORD PTR [esi-0x41]
  41c515:	shl    edx,1
  41c517:	repnz (bad) 
  41c519:	mov    cl,0xb3
  41c51b:	mov    ebx,0x3f1ee4e
  41c520:	leave  
  41c521:	mov    bl,0x27
  41c523:	in     eax,0x52
  41c525:	test   DWORD PTR ds:0xf2393fad,0x313d45ac
  41c52f:	pop    edi
  41c530:	loop   0x41c524
  41c532:	and    al,0x8d
  41c534:	and    eax,0x90424a3b
  41c539:	aaa    
  41c53a:	fadd   QWORD PTR [esi-0x2b]
  41c53d:	aam    0xf9
  41c53f:	ret    
  41c540:	mov    al,BYTE PTR [ecx-0x25]
  41c543:	mov    edx,0x270d321f
  41c548:	pusha  
  41c549:	shl    ecx,cl
  41c54b:	cmpps  xmm2,XMMWORD PTR [esi-0x76],0xf3
  41c550:	ja     0x41c5c2
  41c552:	jge    0x41c57e
  41c554:	jecxz  0x41c524
  41c556:	add    al,0x86
  41c558:	jecxz  0x41c5d2
  41c55a:	adc    ah,BYTE PTR [esp+ecx*8-0x46]
  41c55e:	(bad)  
  41c55f:	jae    0x41c5a1
  41c561:	dec    ecx
  41c562:	cmp    eax,0x49d5d0df
  41c567:	daa    
  41c568:	test   DWORD PTR [esi],ebx
  41c56a:	hlt    
  41c56b:	ret    
  41c56c:	sbb    bl,ch
  41c56e:	xchg   ebp,eax
  41c56f:	pusha  
  41c570:	shr    DWORD PTR [eax-0xd],1
  41c573:	add    BYTE PTR ds:0xe45f4844,0xf2
  41c57a:	(bad)  
  41c57b:	cmp    bl,BYTE PTR [eax]
  41c57d:	dec    ebx
  41c57e:	out    0xba,al
  41c580:	jno    0x41c51e
  41c582:	nop    DWORD PTR [edx]
  41c585:	jg     0x41c54a
  41c587:	cs scas eax,DWORD PTR es:[edi]
  41c589:	jmp    0x41c583
  41c58b:	sahf   
  41c58c:	mov    esp,0x0
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	fcmovne st,st(3)
  41c5a0:	or     BYTE PTR [eax+0x1415b],cl
  41c5a6:	repz add al,0x0
  41c5a9:	add    BYTE PTR [edi-0x1c],al
  41c5ac:	jno    0x41c5e3
  41c5ae:	adc    BYTE PTR [edi],0xaf
  41c5b1:	push   edx
  41c5b2:	mov    al,ds:0x13ef0342
  41c5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b8:	mov    ecx,0x84bf4f2e
  41c5bd:	and    al,cl
  41c5bf:	shr    DWORD PTR [ebx+0x59],0x2f
  41c5c3:	cs push cs
  41c5c5:	rcl    DWORD PTR [ebx-0x4f340037],1
  41c5cb:	clc    
  41c5cc:	xor    esp,DWORD PTR [ecx]
  41c5ce:	arpl   WORD PTR [ebx-0x4d],sp
  41c5d1:	(bad)  
  41c5d2:	and    ecx,DWORD PTR [ebx+esi*4+0x20b0b656]
  41c5d9:	repnz cwde 
  41c5db:	bnd jg 0x41c626
  41c5de:	sbb    BYTE PTR [edi],ch
  41c5e0:	clc    
  41c5e1:	jl     0x41c590
  41c5e3:	in     al,0x58
  41c5e5:	fsubp  st(0),st
  41c5e7:	or     al,0x8c
  41c5e9:	popa   
  41c5ea:	shr    BYTE PTR [ebx+0x21],cl
  41c5ed:	or     al,0xdc
  41c5ef:	pop    ecx
  41c5f0:	jg     0x41c5a4
  41c5f2:	sbb    ch,BYTE PTR [edx]
  41c5f4:	icebp  
  41c5f5:	cmp    BYTE PTR [ebx-0xbc9750b],dh
  41c5fb:	mov    bl,0x48
  41c5fd:	mov    DWORD PTR [edx],esp
  41c5ff:	arpl   WORD PTR [edi],ax
  41c601:	dec    ebx
  41c602:	pop    esp
  41c603:	mov    edx,0x1afdd18b
  41c608:	(bad)  
  41c609:	cs jp  0x41c66d
  41c60c:	rol    BYTE PTR [esi+0x20dff67f],1
  41c612:	sub    BYTE PTR [esi+ebp*4],ah
  41c615:	cmp    esi,DWORD PTR [eax-0x6c145303]
  41c61b:	daa    
  41c61c:	push   es
  41c61d:	cmp    edx,DWORD PTR [ebx-0x170bcf14]
  41c623:	cmp    eax,0x956c5e3d
  41c628:	lahf   
  41c629:	ja     0x41c5f8
  41c62b:	(bad)  
  41c62c:	fld    QWORD PTR [ebp+0x449c6ac7]
  41c632:	inc    esi
  41c633:	hlt    
  41c634:	sbb    al,bl
  41c636:	fwait
  41c637:	outs   dx,BYTE PTR ds:[esi]
  41c638:	sahf   
  41c639:	std    
  41c63a:	or     BYTE PTR ds:0xe8f0ea52,cl
  41c640:	lea    ecx,[edi-0x76]
  41c643:	cld    
  41c644:	or     eax,0x5f04f5d1
  41c649:	rcr    BYTE PTR [esi],1
  41c64b:	retf   0x93c0
  41c64e:	popf   
  41c64f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c650:	pop    ds
  41c651:	imul   ebx,esp,0x706762d3
  41c657:	out    0x15,al
  41c659:	jmp    0x1bf6:0x9be39bbc
  41c660:	sbb    ebx,DWORD PTR [esi-0x7]
  41c663:	cmc    
  41c664:	jmp    0x41c686
  41c666:	pop    edi
  41c667:	mov    ecx,esi
  41c669:	or     cl,BYTE PTR [edx+0x24]
  41c66c:	stos   DWORD PTR es:[edi],eax
  41c66d:	mov    al,0xce
  41c66f:	jne    0x41c6aa
  41c671:	das    
  41c672:	setne  al
  41c675:	mov    edi,0xc188e425
  41c67a:	leave  
  41c67b:	test   al,0xa1
  41c67e:	inc    ebp
  41c67f:	fisub  WORD PTR [eiz*1-0x47a147f6]
  41c686:	shr    BYTE PTR [edi-0x57],1
  41c689:	mov    edi,0xe3308bd8
  41c68e:	mov    BYTE PTR [edx],al
  41c690:	xchg   edi,eax
  41c691:	pop    ss
  41c692:	inc    ebx
  41c693:	inc    edx
  41c694:	or     DWORD PTR [esi-0xbbf532],edi
  41c69a:	xor    cl,al
  41c69c:	jns    0x41c631
  41c69e:	in     al,dx
  41c69f:	push   ds
  41c6a0:	cmp    al,0x1a
  41c6a2:	add    eax,0x4b336614
  41c6a7:	(bad)
  41c6ac:	xor    eax,0x8b708d8a
  41c6b1:	dec    eax
  41c6b2:	or     esi,ebx
  41c6b4:	or     BYTE PTR ds:0x5149f9b9,0xea
  41c6bb:	neg    DWORD PTR [eax-0x7b]
  41c6be:	lods   al,BYTE PTR ds:[esi]
  41c6bf:	mov    al,0x53
  41c6c1:	out    dx,eax
  41c6c2:	shl    bh,0xbe
  41c6c5:	adc    ah,al
  41c6c7:	retf   
  41c6c8:	test   ch,al
  41c6ca:	lods   al,BYTE PTR ds:[esi]
  41c6cb:	fimul  DWORD PTR [edx]
  41c6cd:	repnz and eax,0xb242c3c3
  41c6d3:	mov    al,ds:0x5378fe4d
  41c6d8:	dec    ebp
  41c6d9:	jmp    0xee10c37c
  41c6de:	stos   BYTE PTR es:[edi],al
  41c6df:	add    eax,0xcdb352a2
  41c6e4:	or     al,0xac
  41c6e6:	icebp  
  41c6e7:	add    al,0x69
  41c6e9:	ret    
  41c6ea:	push   ss
  41c6eb:	push   cs
  41c6ec:	jmp    0x6c8e:0x2bf559a8
  41c6f3:	adc    BYTE PTR [esi+0x62],ch
  41c6f6:	adc    eax,0xded71dab
  41c6fb:	aas    
  41c6fc:	xchg   esi,eax
  41c6fd:	and    al,0x2
  41c6ff:	popa   
  41c700:	jno    0x41c6a1
  41c702:	outs   dx,BYTE PTR ds:[esi]
  41c703:	push   edx
  41c704:	inc    ebp
  41c705:	sbb    ebx,DWORD PTR [eax-0x1a]
  41c708:	pop    ecx
  41c709:	lock xor cl,dh
  41c70c:	fadd   st,st(6)
  41c70e:	div    DWORD PTR [ecx+0x3463c2ac]
  41c714:	inc    esi
  41c715:	push   ds
  41c716:	mov    al,0x2b
  41c718:	add    ebx,esp
  41c71a:	cmp    eax,0x3693d8cc
  41c71f:	push   ebp
  41c720:	test   DWORD PTR [eax-0x7f],edi
  41c723:	ds fcomi st,st(4)
  41c726:	inc    eax
  41c727:	shr    DWORD PTR [edi-0xba49e72],cl
  41c72d:	rcl    DWORD PTR [edi+eax*4],cl
  41c730:	mov    esp,0xab8281ae
  41c735:	xor    BYTE PTR [eax-0x6f44ac53],bh
  41c73b:	ds dec ecx
  41c73d:	add    dl,BYTE PTR [eax+0x3dbfc3a5]
  41c743:	pop    eax
  41c744:	add    al,0xfd
  41c746:	and    al,0x42
  41c748:	dec    ebx
  41c749:	push   ebx
  41c74a:	ja     0x41c71d
  41c74c:	shl    BYTE PTR [edx+0x43],1
  41c74f:	ret    0x5f02
  41c752:	mov    DWORD PTR [ebp-0x327f918c],eax
  41c758:	mov    ebp,0x973b0bec
  41c75d:	and    bl,bh
  41c75f:	inc    esi
  41c760:	adc    bl,ch
  41c762:	ins    BYTE PTR es:[edi],dx
  41c763:	mov    ebp,0x125213ee
  41c768:	xchg   edi,eax
  41c769:	arpl   di,sp
  41c76b:	loope  0x41c7b7
  41c76d:	jl     0x41c6fe
  41c76f:	cmp    al,0x31
  41c771:	repz (bad) 
  41c773:	cmp    eax,0x9c5b7265
  41c778:	and    eax,0x9dddd5a8
  41c77d:	shl    BYTE PTR [eax-0x5e],0x5b
  41c781:	xchg   ebx,eax
  41c782:	icebp  
  41c783:	test   al,0x5b
  41c785:	cmp    al,0xe8
  41c787:	fucomip st,st(1)
  41c789:	retf   0x53cb
  41c78c:	hlt    
  41c78d:	aas    
  41c78e:	maskmovq mm2,(bad)
  41c78f:	not    DWORD PTR [ebp+esi*4+0x4609f5d]
  41c796:	jmp    0xa870d888
  41c79b:	mov    dl,0x43
  41c79d:	inc    ebp
  41c79e:	aaa    
  41c79f:	rol    DWORD PTR [esi-0x6917b2af],0x49
  41c7a6:	add    al,0xc3
  41c7a8:	mov    ch,BYTE PTR [eax+0x7d]
  41c7ab:	push   cs
  41c7ac:	shr    DWORD PTR [esi-0x1032e5f2],0xf1
  41c7b3:	lea    ebx,[eax]
  41c7b5:	ins    BYTE PTR es:[edi],dx
  41c7b6:	mov    esi,0xe35e8192
  41c7bb:	jno    0x41c834
  41c7bd:	test   al,0x61
  41c7bf:	add    BYTE PTR [ecx+0x1bee606b],0x61
  41c7c6:	jmp    0x41c79b
  41c7c8:	int    0xa
  41c7ca:	test   DWORD PTR [eax+0x3c],esp
  41c7cd:	sub    DWORD PTR [edx+0x24],edx
  41c7d0:	adc    ebx,esp
  41c7d2:	sub    eax,0x11bd6f1d
  41c7d7:	test   al,0x21
  41c7d9:	jne    0x41c7e2
  41c7db:	cmp    eax,DWORD PTR [eax+edi*2+0x6e07b4be]
  41c7e2:	adc    edx,ebx
  41c7e4:	push   0xffffffae
  41c7e6:	or     eax,0x56731938
  41c7eb:	adc    ebx,0x9e1e2da6
  41c7f1:	push   es
  41c7f2:	call   0xa7f8:0x92d41637
  41c7f9:	pop    ds
  41c7fa:	pusha  
  41c7fb:	scas   eax,DWORD PTR es:[edi]
  41c7fc:	call   0xfb3d8d2c
  41c801:	ret    0xb0ae
  41c804:	dec    ecx
  41c805:	jns    0x41c7f6
  41c807:	test   al,0x4c
  41c809:	add    ebx,edi
  41c80b:	loop   0x41c88a
  41c80d:	es jecxz 0x41c7db
  41c810:	outs   dx,BYTE PTR ds:[esi]
  41c811:	scas   al,BYTE PTR es:[edi]
  41c812:	pop    ecx
  41c813:	fs jp  0x41c7a1
  41c816:	pop    es
  41c817:	call   DWORD PTR [esi+ecx*2]
  41c81a:	inc    ebp
  41c81b:	repnz les edx,FWORD PTR ds:0x8f1e373c
  41c822:	xor    BYTE PTR [esp+esi*4+0x7209db05],ah
  41c829:	and    DWORD PTR [esi],0x7e
  41c82c:	cmp    eax,0x6bd0aaa1
  41c831:	gs retf 
  41c833:	std    
  41c834:	mov    ah,0x6d
  41c836:	jl     0x41c7ef
  41c838:	jmp    0x41c7f5
  41c83a:	fstp   QWORD PTR [eax]
  41c83c:	push   0xffffffde
  41c83e:	cli    
  41c83f:	in     eax,0x8b
  41c841:	repnz call 0x4668:0x98d8cd35
  41c849:	in     eax,dx
  41c84a:	mov    cl,0x13
  41c84c:	in     eax,0xc5
  41c84e:	loopne 0x41c7eb
  41c850:	mov    ebx,0xc6fb84a3
  41c855:	ret    
  41c856:	mov    bl,dh
  41c858:	xlat   BYTE PTR es:[ebx]
  41c85a:	mov    ds:0x5b6b70bf,eax
  41c85f:	call   0xa09eaf3a
  41c864:	dec    esi
  41c865:	mov    bh,0xf9
  41c867:	sub    dl,0xc7
  41c86a:	pop    eax
  41c86b:	lods   eax,DWORD PTR ds:[esi]
  41c86c:	jbe    0x41c898
  41c86e:	xor    DWORD PTR [edx-0x34],0x98200442
  41c875:	inc    ecx
  41c876:	into   
  41c877:	mov    al,ds:0x381407c9
  41c87c:	(bad)  
  41c87d:	xchg   edx,eax
  41c87e:	mov    eax,0xd7b64a1a
  41c883:	sbb    eax,0x372998d8
  41c888:	xchg   ebp,eax
  41c889:	leave  
  41c88a:	test   al,0x94
  41c88c:	imul   esi,DWORD PTR [ebp-0x537c2e50],0x4984cb24
  41c896:	pop    eax
  41c897:	add    eax,0x2bb40001
  41c89c:	xchg   edi,eax
  41c89d:	cld    
  41c89e:	loopne 0x41c8d9
  41c8a0:	lahf   
  41c8a1:	cdq    
  41c8a2:	inc    ebx
  41c8a3:	sbb    DWORD PTR [esi],edi
  41c8a5:	or     BYTE PTR [ebx-0x31],cl
  41c8a8:	(bad)  
  41c8a9:	dec    edi
  41c8aa:	lock sbb cl,BYTE PTR [ecx-0x22]
  41c8ae:	push   ds
  41c8af:	aad    0x31
  41c8b1:	in     al,dx
  41c8b2:	(bad)  
  41c8b4:	imul   edx,ebp,0xb42e2b34
  41c8ba:	enter  0x4c99,0xfd
  41c8be:	clc    
  41c8bf:	push   edx
  41c8c0:	arpl   WORD PTR [ebx+0x54cd8bb5],ax
  41c8c6:	cmp    ecx,DWORD PTR [eax+0x5e]
  41c8c9:	imul   ebp,DWORD PTR [eax-0x50],0xffffffe7
  41c8cd:	cmc    
  41c8ce:	cmp    BYTE PTR [ecx+0x37945122],ah
  41c8d4:	retf   0x3d0
  41c8d7:	mov    esi,0xc00912b6
  41c8dc:	jle    0x41c8d6
  41c8de:	mov    dl,0x20
  41c8e0:	xchg   DWORD PTR [ebx+0x6e7662b2],esi
  41c8e6:	out    0x9c,eax
  41c8e8:	out    0x6d,al
  41c8ea:	add    dl,BYTE PTR [edx-0x69]
  41c8ed:	adc    ebx,DWORD PTR [esp+ebx*4+0xd57e0e8]
  41c8f4:	push   esi
  41c8f5:	fcomp  QWORD PTR [ebx+esi*4]
  41c8f8:	(bad)  
  41c8fa:	sub    bl,0x7d
  41c8fd:	not    ch
  41c8ff:	sub    bl,BYTE PTR [ecx+0x3f06dd29]
  41c905:	mov    eax,ds:0xc01cf366
  41c90a:	cmp    esi,ebx
  41c90c:	mov    esi,0x5820a268
  41c911:	sub    ecx,DWORD PTR [edx+0x6f5689d9]
  41c917:	add    al,0xc3
  41c919:	push   es
  41c91a:	(bad)  
  41c91b:	xchg   ebp,eax
  41c91c:	cmp    cl,BYTE PTR [edx+edx*1]
  41c91f:	jmp    0x41c987
  41c921:	push   0x52
  41c923:	lods   eax,DWORD PTR ds:[esi]
  41c924:	add    eax,0x4ed0cb9c
  41c929:	inc    esi
  41c92a:	iret   
  41c92b:	test   al,0xe2
  41c92d:	xor    al,0xdf
  41c92f:	inc    ecx
  41c930:	jge    0x41c907
  41c932:	add    DWORD PTR [esi],edi
  41c934:	mov    ecx,0xce46bcb8
  41c939:	mov    eax,0x7d310f4a
  41c93e:	ret    
  41c93f:	arpl   WORD PTR [eax-0x30],dx
  41c942:	nop
  41c943:	xor    BYTE PTR [edx],dl
  41c945:	(bad)  
  41c946:	mov    ebp,0x8af169c5
  41c94b:	sbb    cl,dh
  41c94d:	jae    0x41c9cd
  41c94f:	push   esi
  41c950:	or     al,0x89
  41c952:	fild   DWORD PTR [edx]
  41c954:	cmp    eax,0x138d88b1
  41c959:	mov    eax,0xc69cb0a6
  41c95e:	push   cs
  41c95f:	mov    ah,0x7d
  41c961:	cld    
  41c962:	xchg   ebp,eax
  41c963:	loope  0x41c914
  41c965:	loop   0x41c925
  41c967:	push   es
  41c968:	aad    0xe4
  41c96a:	mov    al,ds:0x9c7b4df8
  41c96f:	or     BYTE PTR [ebp-0x3eafcadf],0x5d
  41c976:	sub    dh,0xb8
  41c979:	fprem  
  41c97b:	imul   edi,DWORD PTR [esi],0x99e24803
  41c981:	mov    esp,0x3d2f7ccf
  41c986:	mov    DWORD PTR [ecx+eax*2+0x6a],esp
  41c98a:	dec    edx
  41c98b:	pusha  
  41c98c:	mov    edi,0xb7737661
  41c991:	aas    
  41c992:	adc    eax,0xc270238d
  41c997:	mov    cl,0x38
  41c999:	sbb    edx,DWORD PTR [ebx+0x3c0be172]
  41c99f:	in     al,dx
  41c9a0:	test   BYTE PTR [edx+0x40],bl
  41c9a3:	cmp    eax,0x9c03e4a3
  41c9a8:	dec    ebx
  41c9a9:	bound  esp,QWORD PTR [ebp-0x53a4d8bf]
  41c9af:	mov    ecx,0x1d7592a
  41c9b4:	shl    DWORD PTR [esi],1
  41c9b6:	inc    esp
  41c9b7:	fidiv  WORD PTR [eax-0x1a]
  41c9ba:	pop    esi
  41c9bb:	push   ds
  41c9bc:	(bad)  [ebp-0x293bfa18]
  41c9c2:	jge    0x41c9c9
  41c9c4:	lock es popf 
  41c9c7:	cmc    
  41c9c8:	test   BYTE PTR ds:0xbfe649c8,0x28
  41c9cf:	push   edx
  41c9d0:	ins    BYTE PTR es:[edi],dx
  41c9d1:	xchg   edx,eax
  41c9d2:	jbe    0x41c997
  41c9d4:	outs   dx,BYTE PTR ds:[esi]
  41c9d5:	or     ebp,ebx
  41c9d7:	mov    BYTE PTR [edi+0x4bbbee9b],cl
  41c9dd:	call   0xfeed:0xbc32c622
  41c9e4:	mov    gs,WORD PTR [ebp+0x4]
  41c9e7:	std    
  41c9e8:	xchg   edi,eax
  41c9e9:	cld    
  41c9ea:	cli    
  41c9eb:	pop    ss
  41c9ec:	loopne 0x41c99c
  41c9ee:	lds    ebx,FWORD PTR ds:0xc4646cb
  41c9f4:	lea    edi,[edx-0xf]
  41c9f7:	ror    bl,0xb6
  41c9fa:	fisttp QWORD PTR [ecx]
  41c9fc:	mov    ah,0x81
  41c9fe:	jno    0x41ca5f
  41ca00:	push   eax
  41ca01:	fsubr  DWORD PTR ds:0x2391b2cc
  41ca07:	ficomp WORD PTR [edi-0x1aedb633]
  41ca0d:	mov    ecx,0xe9e03291
  41ca12:	stc    
  41ca13:	test   eax,0x4b3edf98
  41ca18:	addr16 call 0x1e0c0883
  41ca1e:	jnp    0x41ca8e
  41ca20:	in     eax,0x56
  41ca22:	push   ebp
  41ca23:	mov    dh,0x34
  41ca25:	aam    0x3f
  41ca27:	ret    
  41ca28:	lods   eax,DWORD PTR ds:[esi]
  41ca29:	mov    edx,0x734c62e8
  41ca2e:	in     eax,0x2c
  41ca30:	stos   DWORD PTR es:[edi],eax
  41ca31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca32:	mov    ebp,0xbeacf9dc
  41ca37:	jns    0x41c9d4
  41ca39:	dec    edx
  41ca3a:	in     al,0xd9
  41ca3c:	shl    ch,cl
  41ca3e:	push   cs
  41ca3f:	sbb    bl,BYTE PTR ds:0x8355258a
  41ca45:	mov    eax,0x4eaca163
  41ca4a:	and    BYTE PTR [ebp+0x32cb7486],ah
  41ca50:	mov    al,0x1e
  41ca52:	mov    al,0x99
  41ca54:	xchg   ecx,eax
  41ca55:	xchg   ebx,eax
  41ca56:	mul    dh
  41ca58:	shr    DWORD PTR [ebx],1
  41ca5a:	xor    DWORD PTR [ebx-0x308d973c],0x6c9ff661
  41ca64:	sahf   
  41ca65:	repz mov eax,ds:0xa1e5f1f0
  41ca6b:	mov    al,0x98
  41ca6d:	sbb    eax,0xb9df83af
  41ca72:	and    ch,BYTE PTR [eax]
  41ca74:	pop    eax
  41ca75:	add    eax,0xab0627f
  41ca7a:	jno    0x41ca99
  41ca7c:	add    BYTE PTR [edi],0x53
  41ca7f:	(bad)  
  41ca81:	clc    
  41ca82:	dec    ecx
  41ca83:	or     eax,0x22840aa3
  41ca88:	mov    al,0x66
  41ca8a:	mul    esp
  41ca8c:	cmp    eax,0xa634fc89
  41ca91:	in     al,dx
  41ca92:	daa    
  41ca93:	or     eax,0xb88cd506
  41ca98:	jns    0x41cb13
  41ca9a:	xchg   ecx,eax
  41ca9b:	cmc    
  41ca9c:	fiadd  WORD PTR [eax]
  41ca9e:	add    BYTE PTR [eax],al
  41caa0:	add    BYTE PTR [eax],al
  41caa2:	in     al,0x3e
  41caa4:	mov    esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx+0x78]
  41caaf:	(bad)  
  41cab0:	jecxz  0x41cb2a
  41cab2:	dec    esi
  41cab3:	inc    esi
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	repz add al,0x0
  41cab9:	add    BYTE PTR [ecx+eax*4+0x3f8ea48a],ah
  41cac0:	outs   dx,BYTE PTR ds:[esi]
  41cac1:	mov    esi,0x694011d8
  41cac6:	pop    ds
  41cac7:	clc    
  41cac8:	jne    0x41ca8b
  41caca:	idiv   BYTE PTR [esi]
  41cacc:	mov    al,ds:0x61e5f25f
  41cad1:	inc    ebx
  41cad2:	adc    bl,BYTE PTR [ecx+edx*1-0x3c]
  41cad6:	jp     0x41cb14
  41cad8:	ins    BYTE PTR es:[edi],dx
  41cad9:	pusha  
  41cada:	or     bh,ah
  41cadc:	fdiv   DWORD PTR [esi]
  41cade:	xchg   DWORD PTR [eax+0x77d8600c],eax
  41cae4:	xor    esi,0x58
  41cae7:	sub    dl,BYTE PTR [eax-0x58]
  41caea:	dec    eax
  41caeb:	hlt    
  41caec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caee:	dec    eax
  41caef:	mov    cl,0xf8
  41caf1:	adc    eax,0x9013c254
  41caf6:	mov    cl,0xbc
  41caf8:	ss icebp 
  41cafa:	mov    esp,0x3389b301
  41caff:	push   cs
  41cb00:	jb     0x41cb59
  41cb02:	pop    ebx
  41cb03:	add    BYTE PTR [edi+0x3a61462e],cl
  41cb09:	xchg   ecx,eax
  41cb0a:	out    dx,al
  41cb0b:	mov    dh,BYTE PTR [eax-0x216e6df7]
  41cb11:	xchg   edx,eax
  41cb12:	js     0x41cb61
  41cb14:	adc    esi,DWORD PTR [esi+eax*8-0x10]
  41cb18:	mov    edx,0xe1911d95
  41cb1d:	xor    dh,BYTE PTR [esi+ebx*8+0x78b3a77f]
  41cb24:	loopne 0x41cb00
  41cb26:	or     BYTE PTR [edi+0x2f9e4e67],ah
  41cb2c:	pop    edx
  41cb2d:	mov    esi,0xe7c07f91
  41cb32:	sar    BYTE PTR [ebp*8+0x5a3eaacd],cl
  41cb39:	pop    edx
  41cb3a:	das    
  41cb3b:	retf   0xfdfe
  41cb3e:	and    eax,0x99a2ff2c
  41cb43:	call   0xdf462bee
  41cb48:	and    ah,ch
  41cb4a:	loopne 0x41cb07
  41cb4c:	or     eax,DWORD PTR [edi]
  41cb4e:	push   0xf7101ee5
  41cb53:	out    dx,eax
  41cb54:	(bad)  
  41cb55:	sar    BYTE PTR [eax-0xd],1
  41cb58:	mov    al,ch
  41cb5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb5b:	ror    ch,cl
  41cb5d:	push   esi
  41cb5e:	push   0x82870474
  41cb63:	pushf  
  41cb64:	sub    DWORD PTR [ebp-0x5b023834],eax
  41cb6a:	outs   dx,BYTE PTR gs:[esi]
  41cb6c:	jmp    0x87d8:0xe570391b
  41cb73:	shl    DWORD PTR [edi],cl
  41cb75:	push   eax
  41cb76:	icebp  
  41cb77:	xchg   edx,eax
  41cb78:	mov    esi,es
  41cb7a:	mov    ecx,0xcb0a6ca
  41cb7f:	test   al,0xf8
  41cb81:	sbb    ebx,DWORD PTR [ebx+0x14d0554f]
  41cb87:	xchg   DWORD PTR [esi-0x7f99098c],ebp
  41cb8d:	mov    bl,0xdd
  41cb8f:	mov    al,0xa1
  41cb91:	cmp    BYTE PTR [esi],al
  41cb93:	cmp    esi,esp
  41cb95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb96:	repz inc esi
  41cb98:	(bad)  
  41cb99:	and    ecx,edi
  41cb9b:	(bad)  
  41cb9c:	sub    al,0xa9
  41cb9e:	adc    edx,DWORD PTR cs:[ecx+0x66429908]
  41cba5:	sbb    dl,BYTE PTR ds:0x11d78359
  41cbab:	leave  
  41cbac:	mov    ch,0x1a
  41cbae:	in     al,0x92
  41cbb0:	test   DWORD PTR [edi],esi
  41cbb2:	cwde   
  41cbb3:	pushf  
  41cbb4:	iret   
  41cbb5:	std    
  41cbb6:	fnstsw WORD PTR [edx+0x51]
  41cbb9:	inc    eax
  41cbba:	xchg   edi,eax
  41cbbb:	sub    edi,ebp
  41cbbd:	jp     0x41cb7d
  41cbbf:	push   es
  41cbc0:	and    eax,0xde8a71db
  41cbc5:	jle    0x41cbac
  41cbc7:	(bad)  
  41cbc8:	push   ebp
  41cbc9:	mov    ecx,0xe1ffcee1
  41cbce:	leave  
  41cbcf:	gs xor al,0x37
  41cbd2:	mov    al,0xf5
  41cbd4:	adc    ah,bl
  41cbd6:	xor    al,0x7
  41cbd8:	cmp    DWORD PTR [esi+0x2845d768],ebx
  41cbde:	stos   DWORD PTR es:[edi],eax
  41cbdf:	aad    0x32
  41cbe1:	nop
  41cbe2:	neg    BYTE PTR [ebp-0x34aca379]
  41cbe8:	outs   dx,BYTE PTR ds:[esi]
  41cbe9:	(bad)  
  41cbeb:	stos   DWORD PTR es:[edi],eax
  41cbec:	cdq    
  41cbed:	cmp    edi,DWORD PTR [edx+edi*1]
  41cbf0:	jae    0x41cb73
  41cbf2:	dec    esp
  41cbf3:	or     BYTE PTR [eax+0xf1c33b6],al
  41cbf9:	push   edi
  41cbfa:	fsubr  QWORD PTR [edx+0x42]
  41cbfd:	inc    ebx
  41cbfe:	div    DWORD PTR [ecx+0x73a63f34]
  41cc04:	or     eax,DWORD PTR [edi+0x1d789ba3]
  41cc0a:	(bad)  
  41cc0b:	int3   
  41cc0c:	stos   BYTE PTR es:[edi],al
  41cc0d:	push   eax
  41cc0e:	inc    ebp
  41cc0f:	fs jl  0x41cbd7
  41cc12:	(bad)  
  41cc13:	int    0x8f
  41cc15:	pushf  
  41cc16:	jb     0x41cc40
  41cc18:	icebp  
  41cc19:	data16 adc al,0x34
  41cc1c:	and    edx,ebx
  41cc1e:	cmp    eax,0x244249fb
  41cc23:	aad    0xd1
  41cc25:	call   0xba994221
  41cc2a:	dec    esp
  41cc2b:	sub    BYTE PTR [esi+0x25],cl
  41cc2e:	scas   ax,WORD PTR es:[edi]
  41cc30:	iret   
  41cc31:	punpckhwd mm4,mm6
  41cc34:	push   esp
  41cc35:	sub    bl,al
  41cc37:	stc    
  41cc38:	or     BYTE PTR [edx],bh
  41cc3a:	adc    al,0xce
  41cc3c:	test   al,0x9b
  41cc3e:	add    al,0x79
  41cc40:	inc    esp
  41cc41:	je     0x41cc5f
  41cc43:	test   bh,ch
  41cc45:	scas   al,BYTE PTR es:[edi]
  41cc46:	mov    dh,0xb0
  41cc48:	iret   
  41cc49:	or     dl,ch
  41cc4b:	int    0x5b
  41cc4d:	lahf   
  41cc4e:	icebp  
  41cc4f:	dec    ebp
  41cc50:	adc    eax,0xffa6eca1
  41cc55:	sub    al,0x99
  41cc57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc58:	or     eax,0xa552c71a
  41cc5d:	mov    dh,0x37
  41cc5f:	sar    BYTE PTR [ecx],cl
  41cc61:	popa   
  41cc62:	mov    esi,0x7d9b8223
  41cc67:	into   
  41cc68:	mov    ebp,0x9fb966e5
  41cc6d:	in     al,dx
  41cc6e:	int3   
  41cc6f:	in     al,dx
  41cc70:	repz pop ebx
  41cc72:	sbb    eax,0x13968230
  41cc77:	adc    eax,0x24ee11d6
  41cc7c:	sub    eax,DWORD PTR ss:[eax-0x7a]
  41cc80:	sub    BYTE PTR [ebx+eiz*1],dh
  41cc83:	loopne 0x41cc63
  41cc85:	(bad)  
  41cc86:	std    
  41cc87:	xor    al,0x7f
  41cc89:	shl    DWORD PTR [ebx+0x76],0x9e
  41cc8d:	fnstenv [ecx+0x7b]
  41cc90:	stos   DWORD PTR es:[edi],eax
  41cc91:	int    0xe1
  41cc93:	sbb    bh,BYTE PTR [esi-0x6363aaf8]
  41cc99:	fst    DWORD PTR [ecx+0x28]
  41cc9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc9d:	push   eax
  41cc9e:	add    al,0x60
  41cca0:	cmp    al,0xee
  41cca2:	jmp    0x41cd0e
  41cca4:	or     BYTE PTR [ebx],bh
  41cca6:	xor    dl,al
  41cca8:	pop    edx
  41cca9:	xchg   esp,eax
  41ccaa:	xor    eax,0xd4610aa0
  41ccaf:	pop    esi
  41ccb0:	and    DWORD PTR [eax+eiz*8-0x9acb05],ebx
  41ccb7:	push   cs
  41ccb8:	(bad)  
  41ccba:	vpackuswb xmm2,xmm0,XMMWORD PTR [ecx]
  41ccbe:	sbb    ch,dh
  41ccc0:	jle    0x41cc9f
  41ccc2:	gs stos DWORD PTR es:[edi],eax
  41ccc4:	std    
  41ccc5:	in     eax,0xba
  41ccc7:	call   0xfa65:0x218016df
  41ccce:	jns    0x41cc97
  41ccd0:	aas    
  41ccd1:	loope  0x41cc59
  41ccd3:	lock push edx
  41ccd5:	out    dx,al
  41ccd6:	mov    bh,0xe1
  41ccd8:	xor    esi,esi
  41ccda:	push   cs
  41ccdb:	xchg   edi,eax
  41ccdc:	lds    ebx,FWORD PTR [esi+0xe]
  41ccdf:	sub    BYTE PTR [esi+0x3a458678],bl
  41cce5:	sub    DWORD PTR [eax],ecx
  41cce7:	icebp  
  41cce8:	cmc    
  41cce9:	stos   DWORD PTR es:[edi],eax
  41ccea:	sbb    ebx,DWORD PTR ds:0x401cab65
  41ccf0:	fisubr WORD PTR [ebx]
  41ccf2:	xor    al,0xd7
  41ccf4:	cmp    edi,ebx
  41ccf6:	and    DWORD PTR fs:[esi],eax
  41ccf9:	xchg   edx,eax
  41ccfa:	push   esp
  41ccfb:	and    eax,DWORD PTR [esi]
  41ccfd:	mov    edx,0x6dd5f16b
  41cd02:	nop
  41cd03:	(bad)  
  41cd04:	dec    esp
  41cd05:	loope  0x41cd52
  41cd07:	xsaves [esi-0x12]
  41cd0b:	hlt    
  41cd0c:	push   esp
  41cd0d:	ds mov cl,0x67
  41cd10:	xchg   edx,eax
  41cd11:	cmp    dl,BYTE PTR [ecx]
  41cd13:	(bad)  
  41cd14:	in     al,0x65
  41cd16:	mov    cl,0x85
  41cd18:	inc    edi
  41cd19:	mov    esi,0x414b5e9d
  41cd1e:	pop    ds
  41cd1f:	mov    ebp,0xc0072004
  41cd24:	es sahf 
  41cd26:	aad    0x2a
  41cd28:	int3   
  41cd29:	lds    eax,FWORD PTR [ecx-0x3b]
  41cd2c:	sub    DWORD PTR [edi-0x28e70b11],esp
  41cd32:	stos   DWORD PTR es:[edi],eax
  41cd33:	pop    ebp
  41cd34:	xchg   ebx,eax
  41cd35:	cvtps2pi mm1,QWORD PTR [esi+0x64296f62]
  41cd3c:	in     al,dx
  41cd3d:	mov    al,0xe0
  41cd3f:	popa   
  41cd40:	data16 sbb bl,BYTE PTR ds:0x119f9b33
  41cd47:	inc    ebp
  41cd48:	add    esp,DWORD PTR [edx-0x5dae87dd]
  41cd4e:	push   ebp
  41cd4f:	outs   dx,DWORD PTR ds:[si]
  41cd51:	test   DWORD PTR [edi],eax
  41cd53:	jns    0x41cda2
  41cd55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd56:	dec    ebx
  41cd57:	jl     0x41cd74
  41cd59:	jle    0x41cd95
  41cd5b:	xchg   esp,eax
  41cd5c:	aam    0xf
  41cd5e:	push   ss
  41cd5f:	xor    bl,bh
  41cd61:	adc    ebp,DWORD PTR [ecx+0x3e]
  41cd64:	data16 add al,0x24
  41cd67:	xor    al,0x41
  41cd69:	cmp    DWORD PTR gs:[ecx+ebx*1-0x158c7170],esp
  41cd71:	js     0x41cd9a
  41cd73:	adc    al,0x21
  41cd75:	inc    ebp
  41cd76:	mov    edi,DWORD PTR [ebx-0x1a35ae60]
  41cd7c:	dec    edx
  41cd7e:	imul   edx,ebx,0x3b894d38
  41cd84:	xor    esi,esp
  41cd86:	sbb    edi,DWORD PTR [ebp+0x2c]
  41cd89:	fdiv   DWORD PTR ds:0x19da227
  41cd8f:	fld    st(7)
  41cd91:	fisub  DWORD PTR [eax]
  41cd93:	std    
  41cd94:	jmp    0xc58f:0x56ee8bbd
  41cd9b:	sub    eax,0x7453f964
  41cda0:	cmp    dh,BYTE PTR [esi-0xc]
  41cda3:	sbb    BYTE PTR [ebx+0x2d052858],ch
  41cda9:	jne    0x41cdfb
  41cdab:	(bad)  [ebx-0x4630f6d0]
  41cdb1:	ret    0x35e3
  41cdb4:	push   ecx
  41cdb5:	mov    ds:0xf018506a,al
  41cdba:	push   ebp
  41cdbb:	cmp    al,0x60
  41cdbd:	pop    edx
  41cdbe:	mov    ah,0xfc
  41cdc0:	mov    eax,ds:0x4ff04f47
  41cdc5:	repz and eax,0xcc55f7e4
  41cdcb:	mov    al,BYTE PTR [ebx+0x13]
  41cdce:	lods   eax,DWORD PTR ds:[esi]
  41cdcf:	sti    
  41cdd0:	cmp    eax,0x87638d17
  41cdd5:	xor    al,0x34
  41cdd7:	cmp    al,0xf3
  41cdd9:	repnz sbb BYTE PTR [edx],dh
  41cddc:	rcl    DWORD PTR [esi+0x7e],1
  41cddf:	lds    esi,FWORD PTR [edx+edx*8+0x10]
  41cde3:	fsubr  QWORD PTR [esi]
  41cde5:	bound  esi,QWORD PTR [esi+0x4b]
  41cde8:	pop    ebp
  41cde9:	mov    bh,BYTE PTR [edi-0x11d0a2c0]
  41cdef:	mov    ah,0x5
  41cdf1:	jo     0x41ce5c
  41cdf3:	inc    esi
  41cdf4:	call   0xe532bb6e
  41cdf9:	loope  0x41ce21
  41cdfb:	mov    edx,0x8f9eea54
  41ce00:	sbb    esp,DWORD PTR [esp+ebx*8-0x52]
  41ce04:	push   0x60dc5dc0
  41ce09:	push   0xffabc034
  41ce0e:	inc    edx
  41ce0f:	pop    esp
  41ce10:	jge    0x41ce29
  41ce12:	je     0x41cde5
  41ce14:	ja     0x41ce47
  41ce16:	int    0x72
  41ce18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce19:	mov    bl,0xe0
  41ce1b:	sti    
  41ce1c:	lock iret 
  41ce1e:	ja     0x41ce8a
  41ce20:	fcom   st(6)
  41ce22:	or     cl,BYTE PTR [ecx]
  41ce24:	mov    esi,DWORD PTR [ecx-0x5b]
  41ce27:	lahf   
  41ce28:	pop    ds
  41ce29:	xchg   ebx,eax
  41ce2a:	clc    
  41ce2b:	push   ss
  41ce2c:	rcl    DWORD PTR [esi+0x4da03483],0xcf
  41ce33:	mov    eax,0x242da85b
  41ce38:	jnp    0x41ce56
  41ce3a:	inc    esp
  41ce3b:	push   esi
  41ce3c:	push   edi
  41ce3d:	imul   edi,DWORD PTR [esi],0x3c
  41ce40:	daa    
  41ce41:	aas    
  41ce42:	cwde   
  41ce43:	push   eax
  41ce44:	xchg   ecx,eax
  41ce45:	sbb    ch,cl
  41ce47:	shr    DWORD PTR [eax],cl
  41ce49:	push   ecx
  41ce4a:	loope  0x41cecb
  41ce4c:	mov    ebx,0xe865e58a
  41ce51:	cs retf 0xe406
  41ce55:	shl    DWORD PTR [edi-0x702324e3],cl
  41ce5b:	daa    
  41ce5c:	mov    ebp,esi
  41ce5e:	ret    
  41ce5f:	pop    edx
  41ce60:	out    dx,al
  41ce61:	mov    edx,0x1ad3ddbb
  41ce66:	push   es
  41ce67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce69:	addr16 out dx,eax
  41ce6b:	arpl   WORD PTR [ebp-0x73],dx
  41ce6e:	dec    edx
  41ce6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce70:	mov    edx,0x1ebbd852
  41ce75:	jg     0x41cef4
  41ce77:	xor    BYTE PTR [ecx+0x7b8faf88],0xe4
  41ce7e:	iret   
  41ce7f:	cmp    BYTE PTR [edx+0x33],al
  41ce82:	cmp    DWORD PTR [esi+0x31],edi
  41ce85:	(bad)  
  41ce86:	pop    ebx
  41ce87:	mov    esi,0x663d124a
  41ce8c:	push   ds
  41ce8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce8e:	pusha  
  41ce8f:	mov    esi,0x8e177535
  41ce94:	inc    eax
  41ce95:	dec    eax
  41ce96:	int    0x6
  41ce98:	js     0x41cf0f
  41ce9a:	call   0x779b644e
  41ce9f:	pop    eax
  41cea0:	pop    edi
  41cea1:	push   cs
  41cea2:	lods   al,BYTE PTR ds:[esi]
  41cea3:	into   
  41cea4:	dec    ebx
  41cea5:	push   edi
  41cea6:	addr16 out dx,eax
  41cea8:	repnz leave 
  41ceaa:	test   DWORD PTR [eax],ecx
  41ceac:	vmptrld QWORD PTR [ecx+0x56e08918]
  41ceb3:	pop    ecx
  41ceb4:	adc    al,0xcc
  41ceb6:	pusha  
  41ceb7:	rcr    BYTE PTR [edi-0x3a],1
  41ceba:	sahf   
  41cebb:	stc    
  41cebc:	inc    esp
  41cebd:	jne    0x41ce56
  41cebf:	jb     0x41ceb6
  41cec1:	push   ebp
  41cec2:	jmp    0xac697e3
  41cec7:	mov    BYTE PTR [ebx],0x6b
  41ceca:	or     ecx,DWORD PTR [esi+0x5efeca06]
  41ced0:	lock mov ebx,0x761274f7
  41ced6:	sub    BYTE PTR [ebp+0x5f],0x44
  41ceda:	(bad)  
  41cedb:	in     al,0xaf
  41cedd:	out    dx,eax
  41cede:	enter  0x1b41,0x74
  41cee2:	imul   edi,edi,0x2bc8a4e3
  41cee8:	lods   al,BYTE PTR ds:[esi]
  41cee9:	out    dx,eax
  41ceea:	xchg   esp,eax
  41ceeb:	jns    0x41cf30
  41ceed:	jmp    0x41cf1b
  41ceef:	ror    BYTE PTR [esi+0x4b],1
  41cef2:	or     eax,0x3981c533
  41cef7:	mov    al,ds:0xd4781383
  41cefc:	or     al,0x2d
  41cefe:	aaa    
  41ceff:	into   
  41cf00:	rol    DWORD PTR [esi],cl
  41cf02:	(bad)  
  41cf04:	rcl    DWORD PTR [esi+eax*2-0x48],1
  41cf08:	jae    0x41cf43
  41cf0a:	ficomp WORD PTR [edi+0x82a9f2e]
  41cf10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf11:	outs   dx,BYTE PTR ds:[esi]
  41cf12:	cmp    BYTE PTR [ebx],cl
  41cf14:	outs   dx,BYTE PTR ds:[esi]
  41cf15:	and    edi,edi
  41cf17:	push   edx
  41cf18:	ret    
  41cf19:	inc    edx
  41cf1a:	xchg   ecx,eax
  41cf1b:	pop    edx
  41cf1c:	je     0x41cecd
  41cf1e:	iret   
  41cf1f:	cld    
  41cf20:	push   ds
  41cf21:	mov    bh,0x5c
  41cf23:	add    DWORD PTR [ebx+esi*8-0x21],edi
  41cf27:	xor    esi,DWORD PTR [edx]
  41cf29:	hlt    
  41cf2a:	sbb    al,ah
  41cf2c:	push   edx
  41cf2d:	lea    ebx,[eax+0x4c]
  41cf30:	xchg   edx,eax
  41cf31:	int    0xfc
  41cf33:	mov    ch,0x1a
  41cf35:	adc    ebx,edx
  41cf37:	mov    ebp,0xd5bf91bb
  41cf3c:	aam    0x2
  41cf3e:	cdq    
  41cf3f:	and    eax,0x4d
  41cf42:	test   al,0xa7
  41cf44:	cmp    bl,0xe2
  41cf47:	test   BYTE PTR [esi-0x40],0xb3
  41cf4b:	push   0xabc1b569
  41cf50:	adc    al,0x79
  41cf52:	loope  0x41cf12
  41cf54:	mov    ecx,0x6372f402
  41cf59:	ins    DWORD PTR es:[edi],dx
  41cf5a:	or     esp,DWORD PTR [eax-0x46e24099]
  41cf60:	jg     0x41cf65
  41cf62:	lock cld 
  41cf64:	fld    TBYTE PTR [ebx+0x32]
  41cf67:	cmp    eax,0x55c662de
  41cf6c:	inc    esp
  41cf6d:	rol    DWORD PTR [esi-0x34],cl
  41cf70:	das    
  41cf71:	dec    eax
  41cf72:	fst    QWORD PTR [ebx-0x28]
  41cf75:	cs xchg esi,eax
  41cf77:	inc    edx
  41cf78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf79:	push   esp
  41cf7a:	mov    ch,0xa0
  41cf7c:	retf   
  41cf7d:	or     eax,0x4189d4a0
  41cf82:	inc    esp
  41cf83:	fst    QWORD PTR [eax-0x24c1ed2c]
  41cf89:	mov    eax,0xaf781735
  41cf8e:	js     0x41cf7b
  41cf90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf91:	cwde   
  41cf92:	xchg   esi,eax
  41cf93:	mov    edx,0xb6059bd
  41cf98:	sub    ebp,esi
  41cf9a:	cli    
  41cf9b:	mov    esi,0xb9c68ddb
  41cfa0:	xor    DWORD PTR [eax],ebp
  41cfa2:	mov    bh,0x39
  41cfa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfa5:	mov    esp,0xf7ffb011
  41cfaa:	push   ebp
  41cfab:	xor    DWORD PTR [edx],ecx
  41cfad:	add    BYTE PTR [eax],al
  41cfaf:	add    BYTE PTR [eax],al
  41cfb1:	add    BYTE PTR [ebx-0x37],bh
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0x1d876fa2
  41cfc2:	inc    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	repz add al,0x0
  41cfc9:	add    BYTE PTR [esi+esi*1],dl
  41cfcc:	into   
  41cfcd:	pop    esi
  41cfce:	arpl   bp,dx
  41cfd0:	seta   bl
  41cfd3:	sahf   
  41cfd4:	dec    edx
  41cfd5:	or     ebp,DWORD PTR [ebx]
  41cfd7:	dec    eax
  41cfd8:	jno    0x41d039
  41cfda:	repnz dec ebx
  41cfdc:	outs   dx,BYTE PTR ds:[esi]
  41cfdd:	sbb    dl,ah
  41cfdf:	and    bl,al
  41cfe1:	push   0x71
  41cfe3:	mov    ebp,0x7f8ecbd7
  41cfe8:	lods   eax,DWORD PTR ds:[esi]
  41cfe9:	cmp    BYTE PTR [eax],dh
  41cfeb:	and    DWORD PTR [edi*1-0x3f3aa62b],0xffffffca
  41cff3:	sahf   
  41cff4:	and    eax,0xe88f286f
  41cff9:	jns    0x41cfec
  41cffb:	sub    BYTE PTR [esi+0x73],al
  41cffe:	jle    0x41d056
  41d000:	mov    ebp,0xea520c53
  41d005:	pmaxsw mm5,QWORD PTR [eax+0x49]
  41d009:	push   0xffffffb7
  41d00b:	pop    esi
  41d00c:	loope  0x41d088
  41d00e:	inc    edx
  41d00f:	pop    ecx
  41d010:	mov    ds:0xb8d8ba2c,eax
  41d015:	or     BYTE PTR [ecx+0x7],ch
  41d018:	mov    dh,0xd9
  41d01a:	(bad)
  41d01f:	outs   dx,DWORD PTR ds:[esi]
  41d020:	test   al,0x4d
  41d022:	lds    ecx,FWORD PTR [edi-0x59]
  41d025:	cs jo  0x41cfc1
  41d028:	nop
  41d029:	cli    
  41d02a:	push   esp
  41d02b:	sub    esi,DWORD PTR [ebx-0xf]
  41d02e:	das    
  41d02f:	dec    ecx
  41d030:	ffreep st(4)
  41d032:	pushf  
  41d033:	jecxz  0x41d026
  41d035:	stc    
  41d036:	adc    BYTE PTR [edx+0x633f24c2],dh
  41d03c:	(bad)  
  41d03d:	das    
  41d03e:	mov    dl,0xf5
  41d040:	or     eax,DWORD PTR [eax]
  41d042:	fidiv  WORD PTR [edx+eax*1+0x3abf59f1]
  41d049:	mov    cl,0x30
  41d04b:	rcr    DWORD PTR [eax-0x6c6f425b],0x4
  41d052:	retf   0x1a46
  41d055:	int3   
  41d056:	mov    dh,0xda
  41d058:	pop    DWORD PTR [edx-0x71]
  41d05b:	jecxz  0x41d03a
  41d05d:	cmp    eax,0x665865ed
  41d062:	mov    edi,0x195407ea
  41d067:	inc    ebp
  41d068:	pop    edx
  41d069:	jbe    0x41d03f
  41d06b:	aaa    
  41d06c:	retf   
  41d06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d06e:	retf   0x6ad9
  41d071:	inc    ebx
  41d072:	mov    fs,edx
  41d074:	jbe    0x41d064
  41d076:	mov    ds:0xa6877c01,eax
  41d07b:	mov    bh,0xb3
  41d07d:	ins    DWORD PTR es:[edi],dx
  41d07e:	dec    esp
  41d07f:	stos   DWORD PTR es:[edi],eax
  41d080:	cwde   
  41d081:	popa   
  41d082:	cmp    DWORD PTR [ecx+edi*2],esp
  41d085:	inc    edi
  41d086:	(bad)  
  41d087:	imul   BYTE PTR [ebp+ecx*2+0x26b39d09]
  41d08e:	in     eax,0xd3
  41d090:	mov    ds:0xd21df7da,al
  41d095:	sub    eax,0x9825582b
  41d09a:	stos   BYTE PTR es:[edi],al
  41d09b:	or     al,0x4
  41d09d:	test   eax,0x175a2906
  41d0a2:	adc    cl,dh
  41d0a4:	(bad)  
  41d0a5:	mov    cl,0xf5
  41d0a7:	nop
  41d0a8:	mov    bl,0xd1
  41d0aa:	mov    edx,0x38b6a7ca
  41d0af:	mov    ah,0x62
  41d0b1:	mov    ah,BYTE PTR [esi+ebp*4-0x56]
  41d0b5:	aas    
  41d0b6:	cmc    
  41d0b7:	clc    
  41d0b8:	cwde   
  41d0b9:	std    
  41d0ba:	rol    DWORD PTR [edx-0x1c],0xa1
  41d0be:	xchg   ebx,eax
  41d0bf:	call   0x21b7:0x2e0330d9
  41d0c6:	nop
  41d0c7:	jmp    0x6f2c:0xafebce20
  41d0ce:	mov    ah,0x3f
  41d0d0:	fcom   st(1)
  41d0d2:	xor    al,dh
  41d0d4:	and    DWORD PTR [edx],edi
  41d0d6:	cwde   
  41d0d7:	imul   ah
  41d0d9:	pop    edx
  41d0da:	pusha  
  41d0db:	push   ds
  41d0dc:	mov    esi,0xfaeefa42
  41d0e1:	mov    bh,0x17
  41d0e3:	push   ebp
  41d0e4:	mov    ch,0x69
  41d0e6:	stc    
  41d0e7:	cdq    
  41d0e8:	call   0x1785:0x907db654
  41d0ef:	jp     0x41d16d
  41d0f1:	outs   dx,BYTE PTR ds:[esi]
  41d0f2:	sti    
  41d0f3:	pushf  
  41d0f4:	pop    edx
  41d0f5:	mov    eax,ds:0x16ed7239
  41d0fa:	pusha  
  41d0fb:	enter  0x2877,0x13
  41d0ff:	and    ecx,DWORD PTR [edi]
  41d101:	test   DWORD PTR [eax-0x2b],0x6d6e35d9
  41d108:	int3   
  41d109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d10a:	push   esi
  41d10b:	xchg   ebx,eax
  41d10c:	test   DWORD PTR [esi],edi
  41d10e:	push   ebp
  41d10f:	add    dl,cl
  41d111:	or     DWORD PTR [edi-0x5b2b0754],esi
  41d117:	pushf  
  41d118:	loop   0x41d154
  41d11a:	sbb    eax,DWORD PTR [esi+0x56e056bc]
  41d120:	(bad)  
  41d121:	sub    al,0x8c
  41d123:	cwde   
  41d124:	sbb    bh,bl
  41d126:	outs   dx,BYTE PTR ds:[esi]
  41d127:	mov    dl,0xcd
  41d129:	pop    edi
  41d12a:	das    
  41d12b:	test   eax,0x984854f1
  41d130:	call   0x8e18ed52
  41d135:	mov    esi,0xe1251488
  41d13a:	(bad)  
  41d13b:	call   0xc624:0x289f7352
  41d142:	mov    DWORD PTR [ebp+eiz*8-0x383be330],ebx
  41d149:	sar    DWORD PTR [ebx],1
  41d14b:	push   ecx
  41d14c:	mov    ah,0x65
  41d14e:	sbb    bh,al
  41d150:	jae    0x41d113
  41d152:	adc    eax,0x6c52bc83
  41d157:	aas    
  41d158:	fidiv  WORD PTR [edx+0x12a4d33d]
  41d15e:	jb     0x41d0f4
  41d160:	xor    dh,BYTE PTR [edx-0x482dad7a]
  41d166:	xchg   ebp,eax
  41d167:	mov    ah,BYTE PTR [edi-0x42]
  41d16a:	lods   al,BYTE PTR ds:[esi]
  41d16b:	lods   eax,DWORD PTR ds:[esi]
  41d16c:	sub    ebp,ebx
  41d16e:	dec    ebx
  41d16f:	xchg   ecx,eax
  41d170:	fmul   DWORD PTR [edx]
  41d172:	lds    eax,FWORD PTR [ecx+0x618b8071]
  41d178:	aas    
  41d179:	xor    ah,BYTE PTR [eax-0x44]
  41d17c:	mov    edi,0xfd969760
  41d181:	push   cs
  41d182:	xchg   esp,eax
  41d183:	retf   0x37cc
  41d186:	dec    edx
  41d187:	cmp    esi,edi
  41d189:	aaa    
  41d18a:	jne    0x41d157
  41d18c:	repz mov esp,0xdb3ccfd3
  41d192:	jnp    0x41d20f
  41d194:	popf   
  41d195:	arpl   WORD PTR [ebp+0x538ca609],bx
  41d19b:	loop   0x41d166
  41d19d:	ror    edi,0xbf
  41d1a0:	push   esp
  41d1a1:	mov    eax,ds:0x10bad213
  41d1a6:	out    dx,eax
  41d1a7:	xchg   ebx,eax
  41d1a8:	fild   DWORD PTR [edx]
  41d1aa:	mov    ebx,0xadb3b43b
  41d1af:	push   cs
  41d1b0:	retf   0xade
  41d1b3:	add    BYTE PTR [ebx+0x7c99b64c],bh
  41d1b9:	cmp    eax,DWORD PTR [edi+eiz*1]
  41d1bc:	pop    ss
  41d1bd:	push   gs
  41d1bf:	push   ds
  41d1c0:	jo     0x41d1b4
  41d1c2:	retf   
  41d1c3:	fidivr WORD PTR [esi+0x4]
  41d1c6:	std    
  41d1c7:	test   ch,dl
  41d1c9:	(bad)  
  41d1ca:	inc    ebx
  41d1cb:	push   ds
  41d1cc:	push   ebp
  41d1cd:	xchg   esi,eax
  41d1ce:	ins    DWORD PTR es:[edi],dx
  41d1cf:	pop    edx
  41d1d0:	jmp    0x4493:0xe3de6a4e
  41d1d7:	push   esp
  41d1d8:	xor    BYTE PTR [ecx+esi*1-0x51],dl
  41d1dc:	aad    0xc3
  41d1de:	cwde   
  41d1df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1e0:	(bad)  
  41d1e1:	retf   
  41d1e2:	sub    al,0xde
  41d1e4:	add    al,0x8
  41d1e6:	ins    DWORD PTR es:[edi],dx
  41d1e7:	stos   DWORD PTR es:[edi],eax
  41d1e8:	jae    0x41d25d
  41d1ea:	(bad)
  41d1ed:	fnstcw WORD PTR [ecx]
  41d1ef:	inc    esp
  41d1f0:	push   0x26c30179
  41d1f5:	push   0xfffffffd
  41d1f7:	lds    ebp,FWORD PTR [edx]
  41d1f9:	dec    esp
  41d1fa:	sbb    ebx,DWORD PTR [esi-0x39]
  41d1fd:	daa    
  41d1fe:	or     eax,0xe5fb72f2
  41d203:	or     BYTE PTR [edx],ch
  41d205:	stos   BYTE PTR es:[edi],al
  41d206:	sub    DWORD PTR [edi],ebp
  41d208:	pop    ecx
  41d209:	mov    ecx,0x3452b840
  41d20e:	aad    0xcf
  41d210:	xchg   edi,eax
  41d211:	inc    ebx
  41d212:	xlat   BYTE PTR ds:[ebx]
  41d213:	cmp    BYTE PTR [ebx+esi*4-0xa],dh
  41d217:	dec    esi
  41d218:	mov    dl,0x79
  41d21a:	push   ds
  41d21b:	dec    ebx
  41d21c:	sub    eax,0x92a168f3
  41d221:	icebp  
  41d222:	je     0x41d247
  41d224:	popf   
  41d225:	sub    al,0x62
  41d227:	mov    WORD PTR [ebx+ecx*4],?
  41d22a:	pop    es
  41d22b:	mov    esi,0x7ed8c0b5
  41d230:	loope  0x41d25f
  41d232:	ret    0xcb
  41d235:	sbb    WORD PTR es:[ebp-0x384966e7],sp
  41d23d:	stc    
  41d23e:	push   edi
  41d23f:	mov    eax,DWORD PTR [ebx+0x48]
  41d242:	gs xchg esp,eax
  41d244:	add    ch,BYTE PTR [eax-0x5a]
  41d247:	fadd   DWORD PTR [ebp-0x57]
  41d24a:	mov    bl,0x3a
  41d24c:	hlt    
  41d24d:	out    dx,eax
  41d24e:	into   
  41d24f:	push   0x7567f5d2
  41d254:	jo     0x41d1ea
  41d256:	lods   al,BYTE PTR ds:[esi]
  41d257:	das    
  41d258:	(bad)  
  41d25a:	push   esi
  41d25b:	imul   eax,esp,0xb4f4ded9
  41d261:	jg     0x41d2d0
  41d263:	icebp  
  41d264:	pop    ss
  41d265:	jmp    0xcfba:0xd3e58b50
  41d26c:	xchg   ebx,eax
  41d26d:	jns    0x41d286
  41d26f:	js     0x41d236
  41d271:	fdivr  DWORD PTR [edi-0xa]
  41d274:	pop    edi
  41d275:	sti    
  41d276:	xchg   edi,eax
  41d277:	fisttp WORD PTR [eax-0x368dd7bc]
  41d27d:	xlat   BYTE PTR ds:[ebx]
  41d27e:	enter  0xe4b9,0xaa
  41d282:	and    al,0x58
  41d284:	pop    ebx
  41d285:	or     DWORD PTR [eax-0x2b],ebp
  41d288:	in     eax,dx
  41d289:	xor    al,0xcc
  41d28b:	aam    0x82
  41d28d:	sti    
  41d28e:	rcr    ebp,cl
  41d290:	dec    ecx
  41d291:	mov    al,ds:0x95a1b75d
  41d296:	sub    si,WORD PTR [ecx]
  41d299:	(bad)  
  41d29a:	dec    ebp
  41d29b:	xchg   esp,eax
  41d29c:	mov    al,0xae
  41d29e:	fst    st(1)
  41d2a0:	daa    
  41d2a1:	xor    dl,ah
  41d2a3:	std    
  41d2a4:	pop    ds
  41d2a5:	loope  0x41d24c
  41d2a7:	dec    ecx
  41d2a8:	pop    edx
  41d2a9:	ds xchg ebp,eax
  41d2ab:	popf   
  41d2ac:	pop    esp
  41d2ad:	sbb    ah,cl
  41d2af:	sbb    BYTE PTR [edx+0x6ff14dab],dl
  41d2b5:	or     DWORD PTR [ecx],ebx
  41d2b7:	test   DWORD PTR [esi+0xce6a748],0xc13edfc2
  41d2c1:	jg     0x41d294
  41d2c3:	test   BYTE PTR [ebp+0x24e33b07],ah
  41d2c9:	outs   dx,BYTE PTR ds:[esi]
  41d2ca:	mov    dh,0x8a
  41d2cc:	js     0x41d324
  41d2ce:	imul   ecx,DWORD PTR [ecx+edx*1-0x7fdbc3f5],0x27
  41d2d6:	push   eax
  41d2d7:	pop    esi
  41d2d8:	jb     0x41d28e
  41d2da:	es call 0xa79:0x21f4d20f
  41d2e2:	pop    edi
  41d2e3:	add    DWORD PTR [ecx],ebx
  41d2e5:	cmp    eax,0x1e116711
  41d2ea:	inc    esp
  41d2eb:	jne    0x41d31a
  41d2ed:	das    
  41d2ee:	mov    bh,0x3d
  41d2f0:	push   ebx
  41d2f1:	add    al,0xf6
  41d2f3:	cmp    al,ch
  41d2f5:	add    bl,cl
  41d2f7:	inc    ecx
  41d2f8:	test   al,0x16
  41d2fa:	enter  0xbce8,0x90
  41d2fe:	iret   
  41d2ff:	aaa    
  41d300:	rol    bh,0x63
  41d303:	push   eax
  41d304:	out    0xda,al
  41d306:	enter  0xd3e4,0x47
  41d30a:	mov    dl,0x5e
  41d30c:	xor    bl,BYTE PTR [eax+0x653b57]
  41d312:	loopne 0x41d30a
  41d314:	fs inc esi
  41d316:	adc    eax,0x7406a95d
  41d31b:	mov    dh,0x6c
  41d31d:	pop    ebx
  41d31e:	in     eax,0xbb
  41d320:	add    eax,0x2814a557
  41d325:	loope  0x41d34d
  41d327:	xlat   BYTE PTR ds:[ebx]
  41d328:	lock cmc 
  41d32a:	sti    
  41d32b:	aam    0x5f
  41d32d:	into   
  41d32e:	dec    edx
  41d32f:	mov    edi,0x6b12394a
  41d334:	je     0x41d310
  41d336:	sub    al,0x6f
  41d338:	sub    esp,DWORD PTR [ebx]
  41d33a:	lods   al,BYTE PTR ds:[esi]
  41d33b:	sbb    edx,edx
  41d33d:	sar    BYTE PTR [ebp+0x74fd6b6c],0x73
  41d344:	lods   eax,DWORD PTR ds:[esi]
  41d345:	sub    ecx,DWORD PTR [eax+0xc933590]
  41d34b:	mov    eax,ds:0x8ea51c60
  41d350:	jle    0x41d323
  41d352:	jno    0x41d338
  41d354:	xor    edx,edx
  41d356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d357:	test   BYTE PTR [ebp-0x25],al
  41d35a:	xchg   BYTE PTR [eax-0x145999c7],bh
  41d360:	jmp    0x41d347
  41d362:	xchg   edx,eax
  41d363:	pop    esp
  41d364:	movups xmm5,XMMWORD PTR [eax+0x56]
  41d368:	mov    dh,0x63
  41d36a:	dec    esp
  41d36b:	xchg   ebx,eax
  41d36c:	ds test eax,0x6392f9eb
  41d372:	adc    ecx,edx
  41d374:	push   ebx
  41d375:	inc    edx
  41d376:	sub    BYTE PTR [edx+0x3cd577c6],cl
  41d37c:	jns    0x41d3ad
  41d37e:	cmp    BYTE PTR [edx],cl
  41d380:	or     ecx,edi
  41d382:	into   
  41d383:	aam    0xee
  41d385:	int3   
  41d386:	and    al,0xb5
  41d388:	jne    0x41d381
  41d38a:	xor    ecx,DWORD PTR [edx-0x1]
  41d38d:	iret   
  41d38e:	and    DWORD PTR [edx],ecx
  41d390:	lea    edi,[esi+0x3f]
  41d393:	in     eax,dx
  41d394:	ret    
  41d395:	or     eax,ebx
  41d397:	adc    al,0xf
  41d399:	jg     0x41d3b3
  41d39b:	jae    0x41d344
  41d39d:	dec    esi
  41d39e:	pop    edx
  41d39f:	xor    eax,0x8b6acf37
  41d3a4:	ret    
  41d3a5:	and    al,0xf3
  41d3a7:	in     al,dx
  41d3a8:	in     al,dx
  41d3a9:	into   
  41d3aa:	sub    eax,0x858229c8
  41d3af:	mov    ebx,0x11095e6f
  41d3b4:	popa   
  41d3b5:	add    BYTE PTR [ecx-0x21c19786],bh
  41d3bb:	popw   es
  41d3bd:	(bad)  
  41d3be:	jbe    0x41d3c0
  41d3c0:	out    dx,eax
  41d3c1:	push   ss
  41d3c2:	xchg   ebx,eax
  41d3c3:	scas   eax,DWORD PTR es:[edi]
  41d3c4:	pop    edx
  41d3c5:	in     al,dx
  41d3c6:	js     0x41d415
  41d3c8:	out    0xed,al
  41d3ca:	rcl    edi,cl
  41d3cc:	or     ebp,DWORD PTR [eax-0x5860b56b]
  41d3d2:	mov    WORD PTR es:[eax-0x2e],?
  41d3d6:	repnz (bad) 
  41d3d8:	pop    ecx
  41d3d9:	push   0xffffffab
  41d3db:	mov    cl,0x81
  41d3dd:	leave  
  41d3de:	push   ss
  41d3df:	lea    edi,[ebx-0x12fbac07]
  41d3e5:	adc    BYTE PTR [edx+0x236f76ce],al
  41d3eb:	(bad)  
  41d3ec:	int    0x59
  41d3ee:	add    BYTE PTR [edi+0x5320b1e2],ah
  41d3f4:	push   ebx
  41d3f6:	aaa    
  41d3f7:	dec    edi
  41d3f8:	mov    edi,0x644ad2f8
  41d3fd:	dec    ebx
  41d3fe:	mov    ds:0x3f827e44,al
  41d403:	pop    ds
  41d404:	sub    BYTE PTR [edi+0x21836002],0xf
  41d40b:	pop    edx
  41d40c:	dec    eax
  41d40d:	push   ebp
  41d40e:	clc    
  41d40f:	jge    0x41d490
  41d411:	mov    al,0xd
  41d413:	pop    ds
  41d414:	adc    eax,0x376e5c9b
  41d419:	sub    dh,bl
  41d41b:	sub    BYTE PTR [esi-0x29],cl
  41d41e:	cmp    DWORD PTR [edi+0x6bae6b87],edx
  41d424:	xchg   ebp,eax
  41d425:	inc    edx
  41d426:	data16 jg 0x41d425
  41d429:	add    BYTE PTR [esi-0x3933b75f],ch
  41d42f:	jl     0x41d48d
  41d431:	stos   DWORD PTR es:[edi],eax
  41d432:	fwait
  41d433:	xchg   DWORD PTR [ebp+0x45],edi
  41d436:	push   0x3c2b9063
  41d43b:	mov    dh,0x9b
  41d43d:	push   DWORD PTR [edx]
  41d43f:	jge    0x41d410
  41d441:	enter  0xa314,0x66
  41d445:	je     0x41d49f
  41d447:	xor    esp,DWORD PTR [eax+0x31]
  41d44a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d44b:	jge    0x41d4a0
  41d44d:	sub    edi,DWORD PTR [edi+0x6fe0bc49]
  41d453:	je     0x41d4b1
  41d455:	cmp    BYTE PTR [eax-0x47],bl
  41d458:	dec    edi
  41d459:	cmp    BYTE PTR [ecx+0x5c7d423b],cl
  41d45f:	mov    ebx,0xa6b0987b
  41d464:	inc    esi
  41d465:	data16 gs xor dh,0xf8
  41d46a:	adc    eax,0x41e0da03
  41d46f:	mov    dl,0xe9
  41d471:	mov    eax,ds:0x8750969b
  41d476:	inc    edx
  41d477:	jno    0x41d4a9
  41d479:	and    edx,DWORD PTR [edx-0x44]
  41d47c:	mov    edi,DWORD PTR [esi+0x43]
  41d47f:	mov    DWORD PTR [eax-0x7a8f02e1],esp
  41d485:	hlt    
  41d486:	jp     0x41d412
  41d488:	pusha  
  41d489:	int3   
  41d48a:	and    al,0x90
  41d48c:	call   0x6ed3898
  41d491:	pminsw mm4,QWORD PTR [eax-0x1]
  41d495:	(bad)  
  41d496:	enter  0x11cc,0x5
  41d49a:	mov    ds:0xa15cb412,al
  41d49f:	xchg   ecx,eax
  41d4a0:	push   ds
  41d4a1:	cmp    dl,BYTE PTR [ebx-0x752f2fa3]
  41d4a7:	cmp    eax,0xc8485375
  41d4ac:	js     0x41d4d1
  41d4ae:	icebp  
  41d4af:	xor    dh,BYTE PTR [ecx-0x68]
  41d4b2:	ud0    edi,DWORD PTR [ecx+ecx*2]
  41d4b6:	mov    edi,0xf0cbddf5
  41d4bb:	imul   ebx,DWORD PTR [eax+0x0],0x0
  41d4c2:	loop   0x41d4ce
  41d4c4:	add    DWORD PTR [ecx+0x7bf29be9],edx
  41d4ca:	mov    ebp,0x415ff411
  41d4cf:	mov    ebx,0x50340966
  41d4d4:	add    DWORD PTR [eax],eax
  41d4d6:	repz add al,0x0
  41d4d9:	add    BYTE PTR [edx],dl
  41d4db:	sbb    eax,0xb1eda8cc
  41d4e0:	icebp  
  41d4e1:	out    0x1d,eax
  41d4e3:	adc    al,bh
  41d4e5:	add    BYTE PTR [eax+0x73a22107],dl
  41d4eb:	pop    esi
  41d4ec:	xor    BYTE PTR [eax-0xe32a545],al
  41d4f2:	sbb    BYTE PTR [ecx+0x573a2200],0xc6
  41d4f9:	inc    edi
  41d4fa:	lock or eax,0x7a93f8ad
  41d500:	pop    ebx
  41d501:	mov    ebp,0x123628b
  41d506:	mov    bh,0x6a
  41d508:	push   0xcb6050d6
  41d50d:	xchg   edi,eax
  41d50e:	rcr    DWORD PTR [edi+0x57],1
  41d511:	push   cs
  41d512:	cmp    DWORD PTR [esi+0x7],0xffffffb8
  41d516:	inc    esp
  41d517:	jb     0x41d567
  41d519:	in     eax,dx
  41d51a:	add    al,0xb
  41d51c:	mov    al,0xf9
  41d51e:	gs call 0x4f8:0xad82ae50
  41d526:	ror    BYTE PTR [edx+0x65],cl
  41d529:	xchg   edx,eax
  41d52a:	(bad)  
  41d52b:	loope  0x41d505
  41d52d:	push   ss
  41d52e:	push   cs
  41d52f:	pop    edi
  41d530:	out    dx,al
  41d531:	popa   
  41d532:	sbb    BYTE PTR [esi],al
  41d534:	push   eax
  41d535:	jbe    0x41d524
  41d537:	push   ebx
  41d538:	xchg   esp,eax
  41d539:	imul   ecx,DWORD PTR ds:0x5595894c,0x7683f5f1
  41d543:	fild   QWORD PTR [ebx]
  41d545:	jno    0x41d52b
  41d547:	dec    ecx
  41d548:	test   dl,0xa2
  41d54b:	jns    0x41d588
  41d54d:	ins    BYTE PTR es:[edi],dx
  41d54e:	int3   
  41d54f:	stc    
  41d550:	mov    esi,0xb1f65dd7
  41d555:	push   esp
  41d556:	addr16 fcomi st,st(6)
  41d559:	lods   eax,DWORD PTR ds:[esi]
  41d55a:	add    dl,0x3a
  41d55d:	std    
  41d55e:	push   edx
  41d55f:	mov    al,ds:0xc1cf7fb0
  41d564:	push   es
  41d565:	imul   eax,ebp,0x20
  41d568:	hlt    
  41d569:	fwait
  41d56a:	popw   ds
  41d56c:	mov    bh,0x99
  41d56e:	push   edx
  41d56f:	pop    ebx
  41d570:	sbb    eax,0x32a03429
  41d575:	xor    DWORD PTR [ebx],edi
  41d577:	(bad)  
  41d578:	push   0xd02254c9
  41d57d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41d57f:	pop    edi
  41d580:	int3   
  41d581:	sub    bh,ch
  41d583:	lea    ecx,[edi-0x4c]
  41d586:	xor    eax,0x68bc4a4e
  41d58b:	idiv   edx
  41d58d:	dec    ebp
  41d58e:	xor    BYTE PTR [ecx+0x19],dl
  41d591:	sbb    ah,0x7f
  41d594:	and    al,0x81
  41d596:	cmp    DWORD PTR [esi+0x7],0xffffff82
  41d59a:	cmp    BYTE PTR [ebx],ch
  41d59c:	mov    esp,0x9eb82f
  41d5a1:	push   esp
  41d5a2:	clc    
  41d5a3:	das    
  41d5a4:	fdiv   QWORD PTR [eax]
  41d5a6:	mov    cl,0x64
  41d5a8:	mov    DWORD PTR [eax],ebx
  41d5aa:	pop    eax
  41d5ab:	push   eax
  41d5ac:	dec    esp
  41d5ad:	adc    ah,BYTE PTR ds:0xd00d80d7
  41d5b3:	cli    
  41d5b4:	lahf   
  41d5b5:	push   0xffffff89
  41d5b7:	loopne 0x41d5af
  41d5b9:	(bad)  
  41d5ba:	adc    dh,dh
  41d5bc:	mov    cl,0x4f
  41d5be:	jp     0x41d57d
  41d5c0:	pop    edx
  41d5c1:	cdq    
  41d5c2:	inc    ecx
  41d5c3:	mov    edx,0x89d5c8d3
  41d5c8:	dec    esp
  41d5c9:	clc    
  41d5ca:	add    al,0x43
  41d5cc:	jno    0x41d59f
  41d5ce:	and    ch,BYTE PTR [ecx+0x73253154]
  41d5d4:	mov    edx,0x27812044
  41d5d9:	jnp    0x41d659
  41d5db:	ja     0x41d633
  41d5dd:	push   ebx
  41d5de:	fbstp  TBYTE PTR [eax]
  41d5e0:	into   
  41d5e1:	cmp    ah,0x58
  41d5e4:	or     eax,0x508f99d9
  41d5e9:	fwait
  41d5ea:	mov    edi,DWORD PTR [ecx+ebx*1]
  41d5ed:	xchg   ecx,eax
  41d5ee:	inc    eax
  41d5ef:	mov    ebp,0xc1ebd38a
  41d5f4:	or     eax,DWORD PTR [ebx+0xb]
  41d5f7:	popa   
  41d5f8:	shr    BYTE PTR [ebx+0x40],1
  41d5fb:	sahf   
  41d5fc:	and    eax,0x5c46121c
  41d601:	es das 
  41d603:	inc    esp
  41d604:	mov    ah,al
  41d606:	add    BYTE PTR [ebx+0x7f],ah
  41d609:	lods   al,BYTE PTR ds:[esi]
  41d60a:	int    0x6e
  41d60c:	adc    al,0xb6
  41d60e:	push   edx
  41d60f:	test   DWORD PTR ds:0x8494824,edi
  41d615:	jmp    0x41d64f
  41d617:	push   eax
  41d618:	cmp    al,0x21
  41d61a:	mov    edx,0xd9f90e66
  41d61f:	or     eax,0xcbb665af
  41d624:	in     eax,dx
  41d625:	test   eax,0x11efc4ad
  41d62a:	lahf   
  41d62b:	std    
  41d62c:	mov    bh,0xb7
  41d62e:	cld    
  41d62f:	sub    eax,0x7e806ec
  41d634:	sahf   
  41d635:	rcr    BYTE PTR [eax],0x76
  41d638:	adc    al,0xb3
  41d63a:	push   ss
  41d63b:	push   ss
  41d63c:	mov    ah,0x80
  41d63e:	push   es
  41d63f:	add    al,0x89
  41d641:	icebp  
  41d642:	arpl   WORD PTR [ebx-0xb],si
  41d645:	repnz (bad) 
  41d647:	(bad)  
  41d649:	scas   eax,DWORD PTR es:[edi]
  41d64a:	inc    ebp
  41d64b:	jge    0x41d5da
  41d64d:	retf   0x6563
  41d650:	test   BYTE PTR [ebx+ebx*2],0xcc
  41d654:	iret   
  41d655:	xor    DWORD PTR [ebx+0xf],ecx
  41d658:	mov    edx,0xe8615684
  41d65d:	sub    dh,BYTE PTR [edi+0x6c]
  41d660:	sub    DWORD PTR [eax-0x2c],0x8445cb94
  41d667:	xchg   BYTE PTR [esi],cl
  41d669:	loop   0x41d693
  41d66b:	xchg   esi,eax
  41d66c:	stc    
  41d66d:	dec    ebx
  41d66e:	cmp    DWORD PTR [ecx-0x3b6ba65a],edi
  41d674:	add    BYTE PTR [edi],al
  41d676:	sub    eax,0x55205907
  41d67b:	mov    ebx,0xbbbbb3c0
  41d680:	lea    ebp,[edx+0x18d38338]
  41d686:	push   edx
  41d687:	nop
  41d688:	out    dx,eax
  41d689:	outs   dx,DWORD PTR ds:[esi]
  41d68a:	cmp    edi,DWORD PTR [ecx-0x26]
  41d68d:	xlat   BYTE PTR ds:[ebx]
  41d68e:	and    BYTE PTR [esp+edx*8-0x4a],dl
  41d692:	dec    ebx
  41d693:	jecxz  0x41d65a
  41d695:	es cs into 
  41d698:	xchg   esi,eax
  41d699:	or     BYTE PTR [edx-0x46a3f40a],al
  41d69f:	xchg   ebp,eax
  41d6a0:	lds    ecx,FWORD PTR [edi]
  41d6a2:	sbb    edx,ebx
  41d6a4:	cs cld 
  41d6a6:	pop    ecx
  41d6a7:	lods   eax,DWORD PTR ds:[esi]
  41d6a8:	xchg   esp,eax
  41d6a9:	or     al,0x79
  41d6ab:	arpl   bp,di
  41d6ad:	mov    ecx,0xd5672da6
  41d6b2:	lods   al,BYTE PTR ds:[esi]
  41d6b3:	inc    eax
  41d6b4:	jge    0x41d6fb
  41d6b6:	daa    
  41d6b7:	loopne 0x41d708
  41d6b9:	mov    ebp,0x109b2f3f
  41d6be:	xchg   BYTE PTR [esi+0x19],ah
  41d6c1:	repz push edi
  41d6c3:	stc    
  41d6c4:	push   ebx
  41d6c5:	gs dec edi
  41d6c7:	cmc    
  41d6c8:	sti    
  41d6c9:	sbb    al,0xb0
  41d6cb:	ficom  WORD PTR [eax+edi*1-0x7333a607]
  41d6d2:	ficomp DWORD PTR ds:0xc6287688
  41d6d9:	shl    DWORD PTR [edi],0x22
  41d6dc:	push   ss
  41d6dd:	jl     0x41d6d2
  41d6df:	inc    edi
  41d6e0:	(bad)  
  41d6e2:	imul   eax,DWORD PTR [esi],0x6c
  41d6e5:	sub    cl,bl
  41d6e7:	ss cmp al,0xb
  41d6ea:	dec    esp
  41d6eb:	mov    ebp,0x3d1599a9
  41d6f0:	out    0x46,eax
  41d6f2:	fild   WORD PTR [edi-0x13]
  41d6f5:	jecxz  0x41d6cd
  41d6f7:	xchg   esp,eax
  41d6f8:	inc    edi
  41d6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6fa:	mov    ebx,0x32c02735
  41d6ff:	call   0x8e2cb3c5
  41d704:	popf   
  41d705:	fisubr WORD PTR [ebp-0x5b]
  41d708:	maskmovq mm6,mm6
  41d70b:	adc    esi,esi
  41d70d:	sbb    DWORD PTR [ecx+eiz*8],ebx
  41d710:	jno    0x41d6fd
  41d712:	mov    edi,0xedc51bb6
  41d717:	push   ds
  41d718:	mov    ebx,0xeb64357f
  41d71d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d71e:	test   BYTE PTR [esi],ch
  41d720:	xchg   esp,eax
  41d721:	push   esp
  41d722:	cmc    
  41d723:	std    
  41d724:	pop    es
  41d725:	and    al,0xd1
  41d727:	mov    eax,0xcc92d106
  41d72c:	xchg   edx,eax
  41d72d:	fisubr WORD PTR [eax]
  41d72f:	mov    dl,0xe3
  41d731:	inc    edi
  41d732:	dec    edx
  41d733:	gs jg  0x41d72a
  41d736:	cld    
  41d737:	inc    ecx
  41d738:	and    al,0xa1
  41d73a:	dec    edi
  41d73b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d73c:	retf   0x1ce2
  41d73f:	outs   dx,DWORD PTR ds:[esi]
  41d740:	jp     0x41d749
  41d742:	adc    BYTE PTR [eax-0x4f],bh
  41d745:	add    al,BYTE PTR [edi]
  41d747:	stos   DWORD PTR es:[edi],eax
  41d748:	outs   dx,DWORD PTR ds:[esi]
  41d749:	call   0x825066ab
  41d74e:	loopne 0x41d74e
  41d750:	dec    esi
  41d751:	enter  0xb8a4,0x47
  41d755:	dec    eax
  41d756:	ins    DWORD PTR es:[edi],dx
  41d757:	test   eax,0x5f275f0a
  41d75c:	or     eax,ebp
  41d75e:	cmp    DWORD PTR [esi-0x3f1056bc],ebx
  41d764:	adc    ah,dh
  41d766:	and    ch,0x57
  41d769:	xor    eax,0x9fccefa0
  41d76e:	jp     0x41d739
  41d770:	sar    bl,cl
  41d772:	psubsw mm2,mm5
  41d775:	add    eax,0xaea45e42
  41d77a:	sbb    DWORD PTR [ebx+edx*2+0x7a],eax
  41d77e:	add    BYTE PTR ds:0x9c346557,al
  41d784:	cmp    eax,0xf2c69fa6
  41d789:	pop    esp
  41d78a:	fs jne 0x41d756
  41d78d:	sbb    edi,ebp
  41d78f:	xor    al,0x81
  41d791:	mov    cl,0xcb
  41d793:	call   0x779b5d4e
  41d798:	xor    BYTE PTR ds:0x515773c2,bl
  41d79e:	std    
  41d79f:	imul   edx,DWORD PTR [edi+0x45cf2b46],0x39db0cb3
  41d7a9:	es pop ds
  41d7ab:	sub    BYTE PTR [ecx],bl
  41d7ad:	and    ch,BYTE PTR [eax-0x920813e]
  41d7b3:	pop    ecx
  41d7b4:	inc    ebp
  41d7b5:	retf   
  41d7b6:	push   eax
  41d7b7:	jge    0x41d754
  41d7b9:	push   ds
  41d7ba:	(bad)  
  41d7bb:	rcl    BYTE PTR [ebx],1
  41d7bd:	sub    DWORD PTR [eax],0x51
  41d7c0:	jp     0x41d77e
  41d7c2:	neg    cl
  41d7c4:	dec    ebx
  41d7c5:	int    0xe1
  41d7c7:	sub    al,0x69
  41d7c9:	dec    ecx
  41d7ca:	aad    0xfd
  41d7cc:	push   ds
  41d7cd:	data16 loopne 0x41d7bf
  41d7d0:	stos   BYTE PTR es:[edi],al
  41d7d1:	add    bl,ch
  41d7d3:	jecxz  0x41d7bc
  41d7d5:	xor    esp,eax
  41d7d7:	pusha  
  41d7d8:	and    esp,ebx
  41d7da:	sbb    al,0x55
  41d7dc:	jl     0x41d822
  41d7de:	pop    edi
  41d7df:	ret    0xc109
  41d7e2:	sub    bl,BYTE PTR [ecx-0x6feca84d]
  41d7e8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d7ea:	cld    
  41d7eb:	lea    ebx,[edx-0x79bff7ea]
  41d7f1:	retf   
  41d7f2:	jmp    0x6230:0x432c38ff
  41d7f9:	into   
  41d7fa:	jmp    0xd264:0xbe115585
  41d801:	js     0x41d806
  41d803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d804:	aas    
  41d805:	sbb    bh,BYTE PTR [edx-0x76]
  41d808:	les    eax,FWORD PTR [eax-0x7c]
  41d80b:	push   es
  41d80c:	ja     0x41d803
  41d80e:	mov    ds,WORD PTR [edi-0xe1a4350]
  41d814:	lahf   
  41d815:	dec    ecx
  41d816:	mov    esi,0x8ed55d7b
  41d81b:	aam    0x36
  41d81d:	frstor [eax-0x5660782a]
  41d823:	icebp  
  41d824:	pushf  
  41d825:	inc    ebx
  41d826:	iret   
  41d827:	adc    BYTE PTR [ebx+0x4d],dh
  41d82a:	int    0xc3
  41d82c:	xor    al,0x69
  41d82e:	outs   dx,BYTE PTR ds:[esi]
  41d82f:	js     0x41d81c
  41d831:	sub    ebx,ebp
  41d833:	clc    
  41d834:	sub    esp,ebp
  41d836:	add    eax,0xb9933f36
  41d83b:	arpl   WORD PTR [esi],si
  41d83d:	fdiv   QWORD PTR [edx-0x7cfcc5f0]
  41d843:	pop    eax
  41d844:	inc    edi
  41d845:	in     eax,0xae
  41d847:	cmp    dh,ah
  41d849:	xor    dl,BYTE PTR [ebp-0x14]
  41d84c:	arpl   WORD PTR ds:0x4e80d28,sp
  41d852:	push   es
  41d853:	mov    ax,0xe91b
  41d857:	cmp    bh,BYTE PTR [ecx+0x5]
  41d85a:	cmp    BYTE PTR [ecx],0xb4
  41d85d:	mov    edi,0xd1263133
  41d862:	mov    bl,0xc7
  41d864:	adc    DWORD PTR [esi+0x5e],ecx
  41d867:	into   
  41d868:	(bad)
  41d86b:	push   cs
  41d86c:	mov    ds:0x108aa2dd,al
  41d871:	pop    esi
  41d872:	mov    esp,DWORD PTR [edx+ebx*8+0x52]
  41d876:	test   DWORD PTR [ebp-0x40],0x91f2b40d
  41d87d:	mov    DWORD PTR [edi+0xd4ae0ef],edi
  41d883:	xor    al,0x9f
  41d885:	jecxz  0x41d870
  41d887:	or     DWORD PTR [edx+0x1b],edi
  41d88a:	or     bh,dh
  41d88c:	je     0x41d877
  41d88e:	dec    edx
  41d88f:	jg     0x41d8af
  41d891:	pop    esp
  41d892:	stos   BYTE PTR es:[edi],al
  41d893:	cs pop ecx
  41d895:	int3   
  41d896:	fcmovnb st,st(7)
  41d898:	mov    bh,dh
  41d89a:	sub    ecx,DWORD PTR [esi+0x31c5fd44]
  41d8a0:	sbb    BYTE PTR [esi+eax*8+0x62f8353d],dh
  41d8a7:	mov    gs,WORD PTR [ebx]
  41d8a9:	sbb    eax,0xa3a4e800
  41d8ae:	hlt    
  41d8af:	sbb    dh,0x5a
  41d8b2:	cli    
  41d8b3:	inc    esp
  41d8b4:	adc    al,BYTE PTR [edx]
  41d8b6:	fs rcl eax,cl
  41d8b9:	mov    cl,0x2b
  41d8bb:	sahf   
  41d8bc:	lea    edx,[edi+0xb66dfb8]
  41d8c2:	out    dx,al
  41d8c3:	icebp  
  41d8c4:	sbb    ch,dl
  41d8c6:	iret   
  41d8c7:	or     al,0x9f
  41d8c9:	push   0x9768323f
  41d8ce:	push   cs
  41d8cf:	sbb    DWORD PTR [eax+0x7e],ebx
  41d8d2:	mov    al,ds:0xd96f4689
  41d8d7:	xchg   edx,eax
  41d8d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8d9:	cmp    eax,0xc6711dcd
  41d8de:	out    dx,eax
  41d8df:	xchg   ebx,eax
  41d8e0:	test   DWORD PTR [esi-0x7b5ce21f],ebx
  41d8e6:	test   DWORD PTR [edi+0x7b],eax
  41d8e9:	cdq    
  41d8ea:	test   al,0xbf
  41d8ec:	sbb    eax,0x598e7109
  41d8f1:	mov    ds:0x9eecd86,al
  41d8f6:	ret    0xec27
  41d8f9:	icebp  
  41d8fa:	mov    gs,ebp
  41d8fc:	add    al,0x5e
  41d8fe:	jno    0x41d8ed
  41d900:	fcom   QWORD PTR ss:[ebx-0x6f4eb735]
  41d907:	and    BYTE PTR [edx+edx*8-0x26cf9d4],dl
  41d90e:	cs loop 0x41d891
  41d911:	out    0x74,al
  41d913:	out    0x7c,al
  41d915:	pusha  
  41d916:	cmc    
  41d917:	sub    eax,0x30450f15
  41d91c:	dec    edi
  41d91d:	push   es
  41d91e:	aaa    
  41d91f:	xor    DWORD PTR [eax],ebx
  41d921:	sub    ecx,DWORD PTR [edx+0x60]
  41d924:	lahf   
  41d925:	jns    0x41d979
  41d927:	dec    eax
  41d928:	xor    bl,BYTE PTR [ecx]
  41d92a:	pushf  
  41d92b:	fmul   st(1),st
  41d92d:	sbb    BYTE PTR [esi],cl
  41d92f:	nop
  41d930:	icebp  
  41d931:	pushf  
  41d932:	sar    ebp,1
  41d934:	mov    eax,ds:0xd07bf609
  41d939:	cmp    BYTE PTR [ecx-0x78ff2bae],dl
  41d93f:	mov    DWORD PTR [eax+0x43],ebx
  41d942:	fucomp st(0)
  41d944:	cmp    eax,0xea372d19
  41d949:	mov    ds:0x456a4125,eax
  41d94e:	enter  0xe29b,0xc
  41d952:	ret    
  41d953:	sqrtps xmm2,xmm4
  41d956:	fst    QWORD PTR ds:[esi]
  41d959:	imul   eax,DWORD PTR [eax],0xe4cf58f0
  41d95f:	or     ecx,DWORD PTR [edi-0x19d9113b]
  41d965:	jno    0x41d9a9
  41d967:	push   eax
  41d968:	mov    cl,0xe6
  41d96a:	ins    DWORD PTR es:[edi],dx
  41d96b:	test   DWORD PTR [ecx+0x1d],esi
  41d96e:	jge    0x41d986
  41d970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d971:	push   esi
  41d972:	cmc    
  41d973:	cmp    eax,0x1ca3f901
  41d978:	mov    eax,0xac3652e6
  41d97d:	mov    dh,0x4a
  41d97f:	cmp    DWORD PTR [esi-0x538ae08a],esi
  41d985:	ret    0xb487
  41d988:	mov    al,0xae
  41d98a:	sti    
  41d98b:	or     DWORD PTR [esp+ebp*4],eax
  41d98e:	jns    0x41d9e2
  41d990:	aaa    
  41d991:	push   ebx
  41d992:	push   ebx
  41d993:	or     al,0xc0
  41d995:	push   ss
  41d996:	cmc    
  41d997:	pop    esi
  41d998:	sti    
  41d999:	mov    BYTE PTR [eax+edi*4-0x8],al
  41d99d:	cmp    ecx,esp
  41d99f:	aad    0xf1
  41d9a1:	(bad)  
  41d9a2:	addr16 add al,0xad
  41d9a5:	and    esp,DWORD PTR [ebx-0x1946c4e2]
  41d9ab:	shr    DWORD PTR [eax-0x4b3e4916],0x56
  41d9b2:	pop    edi
  41d9b3:	mov    WORD PTR [esi-0x16],fs
  41d9b6:	jg     0x41d94b
  41d9b8:	sub    edx,DWORD PTR [esi+edx*8-0x7e]
  41d9bc:	retf   0xe1e6
  41d9bf:	fld    DWORD PTR [edi]
  41d9c1:	(bad)  
  41d9c2:	call   0x765f:0x6df94545
  41d9c9:	cmp    DWORD PTR [ecx+0x8ffa],esp
  41d9cf:	add    BYTE PTR [eax],al
  41d9d1:	add    BYTE PTR [esi+0x5e],bl
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	ss dec ebp
  41d9e0:	dec    edx
  41d9e1:	add    BYTE PTR [edi],ah
  41d9e3:	push   ebp
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	repz add al,0x0
  41d9e9:	add    BYTE PTR [esi],al
  41d9eb:	sar    bl,0x27
  41d9ee:	mov    ds:0x332469f9,al
  41d9f3:	out    0xcd,al
  41d9f5:	xchg   ebp,eax
  41d9f6:	jno    0x41d9ae
  41d9f8:	data16 mov al,ds:0x78e2068
  41d9fe:	cmp    BYTE PTR [esi],bh
  41da00:	push   ebp
  41da01:	fbld   TBYTE PTR [eax+ebx*1+0x2d]
  41da05:	aas    
  41da06:	mov    eax,ds:0xb98373d6
  41da0b:	add    eax,0x4d3b83d0
  41da10:	(bad)  
  41da11:	leave  
  41da12:	mov    BYTE PTR [ecx-0x75],dl
  41da15:	(bad)  
  41da16:	xlat   BYTE PTR ds:[ebx]
  41da17:	rol    DWORD PTR [esi+0x5],1
  41da1a:	int    0x32
  41da1c:	adc    dh,bl
  41da1e:	mov    ecx,0x8640d6e4
  41da23:	ja     0x41da05
  41da25:	stc    
  41da26:	or     al,0x12
  41da28:	test   DWORD PTR [edi+ecx*8],edx
  41da2b:	push   esi
  41da2c:	inc    eax
  41da2d:	jne    0x41da2f
  41da2f:	xor    bh,BYTE PTR [eax-0x6d]
  41da32:	pop    edi
  41da33:	ja     0x41d9b7
  41da35:	xchg   ecx,eax
  41da36:	jle    0x41da14
  41da38:	in     eax,dx
  41da39:	or     dh,BYTE PTR [edx]
  41da3b:	inc    eax
  41da3c:	xor    DWORD PTR [ebp-0x30],ebx
  41da3f:	inc    eax
  41da40:	fiadd  DWORD PTR [esi]
  41da42:	adc    edi,esi
  41da44:	cmc    
  41da45:	dec    eax
  41da46:	das    
  41da47:	adc    eax,0xe8411a80
  41da4c:	jmp    0x41da49
  41da4e:	xor    esp,DWORD PTR [ecx+0x5c]
  41da51:	inc    eax
  41da52:	push   ss
  41da53:	arpl   WORD PTR [ebx],ax
  41da55:	and    bh,BYTE PTR fs:[esi]
  41da58:	mov    eax,0x7ca99ebe
  41da5d:	(bad)  
  41da5e:	jmp    0x30b8:0x3b18c4ca
  41da65:	and    ah,BYTE PTR [edx-0x595ed30c]
  41da6b:	jne    0x41da3d
  41da6d:	jb     0x41da43
  41da6f:	ret    
  41da70:	pop    es
  41da71:	ret    
  41da72:	pop    esp
  41da73:	pushf  
  41da74:	cmp    DWORD PTR [eax-0x31],ecx
  41da77:	mov    edi,0x54542db1
  41da7c:	das    
  41da7d:	and    ebx,DWORD PTR [edi+edi*8]
  41da80:	mov    esp,0xa4476df6
  41da85:	jbe    0x41da3e
  41da87:	cli    
  41da88:	shl    DWORD PTR [ebx+0x65],0x38
  41da8c:	mov    eax,0x7f801d50
  41da91:	cld    
  41da92:	cwde   
  41da93:	sbb    bh,ch
  41da95:	ss aam 0xd9
  41da98:	leave  
  41da99:	push   0x48414134
  41da9e:	push   eax
  41da9f:	pop    edi
  41daa0:	test   BYTE PTR [esi],cl
  41daa2:	xor    al,0x5c
  41daa4:	inc    esp
  41daa5:	mov    cl,0xc
  41daa7:	mov    es,WORD PTR [eax-0x3b]
  41daaa:	js     0x41da81
  41daac:	sub    BYTE PTR [eax],bh
  41daae:	fwait
  41daaf:	or     al,0x8f
  41dab1:	gs popf 
  41dab3:	repz inc eax
  41dab5:	pop    ds
  41dab6:	(bad)  
  41dab7:	fadd   st,st(3)
  41dab9:	add    esi,DWORD PTR [edi+0x68]
  41dabc:	test   BYTE PTR [ebp+eiz*4+0x78ce9152],ah
  41dac3:	mov    bh,0xc0
  41dac5:	xor    DWORD PTR [ecx-0x2f],eax
  41dac8:	push   ds
  41dac9:	sbb    al,0xc
  41dacb:	jge    0x41db47
  41dacd:	(bad)  
  41dace:	loopne 0x41daca
  41dad0:	dec    esp
  41dad1:	pop    ss
  41dad2:	outs   dx,BYTE PTR ds:[esi]
  41dad3:	repz jo 0x41db32
  41dad6:	fisub  WORD PTR [edi+0x2c]
  41dad9:	ins    BYTE PTR es:[edi],dx
  41dada:	clc    
  41dadb:	(bad)  
  41dadc:	pop    edx
  41dadd:	rcl    BYTE PTR ds:0x5529694,0x4b
  41dae4:	pop    es
  41dae5:	xor    cl,BYTE PTR [esp+eax*1+0x2f1f0a9b]
  41daec:	push   es
  41daed:	cmc    
  41daee:	jle    0x41db08
  41daf0:	gs fs fwait
  41daf3:	xor    eax,0x85aaf66e
  41daf8:	test   BYTE PTR [edi+0x557765bc],bh
  41dafe:	addr16 jo 0x41db53
  41db01:	pop    edi
  41db02:	cdq    
  41db03:	in     eax,dx
  41db04:	sub    eax,0x38ce6a73
  41db09:	jbe    0x41db52
  41db0b:	mov    ecx,0xb87b349d
  41db10:	in     eax,0x66
  41db12:	adc    edi,DWORD PTR [edx-0x5e]
  41db15:	adc    al,0x76
  41db17:	push   ecx
  41db18:	jne    0x41db78
  41db1a:	adc    DWORD PTR [edx],ecx
  41db1c:	or     DWORD PTR [eax-0x56],edi
  41db1f:	pop    es
  41db20:	sti    
  41db21:	xchg   ebp,eax
  41db22:	mov    ds:0x91dcb413,al
  41db27:	jne    0x41db5e
  41db29:	sbb    al,0xa
  41db2b:	in     al,dx
  41db2c:	push   ds
  41db2d:	pop    esp
  41db2e:	(bad)  
  41db2f:	(bad)  
  41db30:	not    DWORD PTR [esi+eiz*4]
  41db33:	lahf   
  41db34:	into   
  41db35:	xchg   ebx,eax
  41db36:	and    esi,ecx
  41db38:	je     0x41db8d
  41db3a:	xlat   BYTE PTR ds:[ebx]
  41db3b:	fisub  DWORD PTR [ebx+0x753ae98d]
  41db41:	or     DWORD PTR [edi-0x7c9d6290],ebp
  41db47:	mov    edi,0xfdabfe40
  41db4c:	adc    eax,0xaf6f23b6
  41db51:	xchg   esi,eax
  41db52:	test   al,0xbe
  41db54:	adc    bh,bl
  41db56:	jmp    0x41db7d
  41db58:	in     al,0x77
  41db5a:	add    DWORD PTR [edx-0x25],esi
  41db5d:	add    ecx,DWORD PTR [edi]
  41db5f:	pusha  
  41db60:	daa    
  41db61:	cdq    
  41db62:	add    cl,al
  41db64:	das    
  41db65:	inc    esi
  41db66:	in     al,dx
  41db67:	dec    edi
  41db68:	mov    ch,0xb1
  41db6a:	dec    eax
  41db6b:	adc    ch,BYTE PTR [edi+0x64]
  41db6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db6f:	bound  ebp,QWORD PTR [edi+0x227beb3a]
  41db75:	out    dx,eax
  41db76:	js     0x41db83
  41db78:	fild   WORD PTR [eax-0x1f]
  41db7b:	hlt    
  41db7c:	push   0xda07a207
  41db81:	test   DWORD PTR [ebp+0x3e],edx
  41db84:	mov    bl,0x42
  41db86:	inc    esp
  41db87:	mov    ch,0x9b
  41db89:	fstp   DWORD PTR [ebx]
  41db8b:	fcom   DWORD PTR [esi+edx*4-0x20]
  41db8f:	push   ebp
  41db90:	sub    BYTE PTR [edx+0x1a3eb1ca],dh
  41db96:	jb     0x41db87
  41db98:	jns    0x41dc02
  41db9a:	std    
  41db9b:	push   ecx
  41db9c:	arpl   WORD PTR [eax],dx
  41db9e:	test   ch,bl
  41dba0:	(bad)  [ebx+0x71]
  41dba3:	adc    DWORD PTR [ecx],esp
  41dba5:	call   0xfc13dc96
  41dbaa:	(bad)  
  41dbab:	dec    esp
  41dbac:	push   edi
  41dbad:	inc    edx
  41dbae:	rcl    DWORD PTR [edi+0xf],1
  41dbb1:	jmp    0x41db8f
  41dbb3:	xor    eax,0x97b6030a
  41dbb8:	sbb    DWORD PTR [ebx-0x2e],ebp
  41dbbb:	fwait
  41dbbc:	loope  0x41dbd6
  41dbbe:	or     ch,BYTE PTR [edi+edi*8+0x77d81bd5]
  41dbc5:	scas   eax,DWORD PTR es:[edi]
  41dbc6:	fild   WORD PTR [edi]
  41dbc8:	lock int3 
  41dbca:	lea    esp,[esi]
  41dbcc:	pop    edx
  41dbcd:	in     al,0x52
  41dbcf:	mov    DWORD PTR [ebp-0x5b910624],ebx
  41dbd5:	(bad)  
  41dbd7:	lods   eax,DWORD PTR ds:[esi]
  41dbd8:	dec    ebx
  41dbd9:	xor    ebx,ebx
  41dbdb:	aas    
  41dbdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbdd:	or     eax,esp
  41dbdf:	push   edi
  41dbe0:	xchg   ebx,eax
  41dbe1:	imul   eax,DWORD PTR [esi],0x64986397
  41dbe7:	mov    bh,0xd4
  41dbe9:	pop    ecx
  41dbea:	lods   eax,DWORD PTR ds:[esi]
  41dbeb:	loop   0x41dc32
  41dbed:	push   ebp
  41dbee:	push   edi
  41dbef:	ror    DWORD PTR [ebp-0x62],cl
  41dbf2:	adc    ebp,eax
  41dbf4:	sbb    BYTE PTR [edi+0x5a],ch
  41dbf7:	sahf   
  41dbf8:	icebp  
  41dbf9:	fwait
  41dbfa:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41dbfc:	add    ebp,esp
  41dbfe:	sub    edx,eax
  41dc00:	dec    ebx
  41dc01:	call   0x9263:0x3ff87269
  41dc08:	jecxz  0x41dc46
  41dc0a:	into   
  41dc0b:	mov    bh,0xd5
  41dc0d:	lahf   
  41dc0e:	push   esi
  41dc0f:	inc    ebx
  41dc10:	mov    ds:0xcd2be4bb,al
  41dc15:	in     eax,dx
  41dc16:	jne    0x41dc74
  41dc18:	jns    0x41dc95
  41dc1a:	mov    eax,ds:0x7cd74695
  41dc1f:	fbstp  TBYTE PTR [ebx+0x7]
  41dc22:	pextrw edi,mm7,0xcb
  41dc26:	cmp    DWORD PTR [edi+0x13],esp
  41dc29:	es dec ebx
  41dc2b:	or     eax,0xff272ec4
  41dc30:	jno    0x41dc08
  41dc32:	jo     0x41dc04
  41dc34:	out    dx,al
  41dc35:	fidiv  WORD PTR [edx-0x5e]
  41dc38:	mov    esi,0xd78234fc
  41dc3d:	push   cs
  41dc3e:	cld    
  41dc3f:	(bad)  
  41dc40:	xchg   edx,eax
  41dc41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc42:	xchg   edi,eax
  41dc43:	fbstp  TBYTE PTR [ebx-0x4cf0c632]
  41dc49:	test   al,0x50
  41dc4b:	aas    
  41dc4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc4d:	pop    ecx
  41dc4e:	jp     0x41dc35
  41dc50:	jg     0x41dc45
  41dc52:	arpl   di,dx
  41dc54:	mov    esi,0xb57b3b6d
  41dc59:	jbe    0x41dcbc
  41dc5b:	sbb    al,BYTE PTR [ecx]
  41dc5d:	scas   al,BYTE PTR es:[edi]
  41dc5e:	cmp    eax,0xbaa9ce73
  41dc63:	xor    al,0xb8
  41dc65:	add    edx,0xb21dacb0
  41dc6b:	sbb    al,dh
  41dc6d:	repz retf 
  41dc6f:	dec    edx
  41dc70:	mov    bl,0xf6
  41dc72:	dec    ebp
  41dc73:	jmp    0x41dc7f
  41dc75:	js     0x41dcbb
  41dc77:	hlt    
  41dc78:	inc    edx
  41dc79:	dec    ebp
  41dc7a:	jle    0x41dc50
  41dc7c:	xchg   ecx,eax
  41dc7d:	adc    cl,BYTE PTR [ecx+0xda8af]
  41dc83:	cmp    DWORD PTR [esi+edx*8-0x7c],esi
  41dc87:	sub    DWORD PTR [edx+0xa73d216],edx
  41dc8d:	aaa    
  41dc8e:	xchg   esp,eax
  41dc8f:	xchg   ecx,eax
  41dc90:	dec    edi
  41dc91:	xchg   edi,eax
  41dc92:	dec    BYTE PTR [eax-0x3b]
  41dc95:	ss repnz pop ebx
  41dc98:	cmp    esi,0x59
  41dc9b:	fnsave [edx]
  41dc9d:	and    esi,edi
  41dc9f:	aam    0x48
  41dca1:	je     0x41dc3d
  41dca3:	lock pop edi
  41dca5:	cmp    eax,0x33dbd900
  41dcaa:	and    cl,0x1e
  41dcad:	fistp  WORD PTR [edi+0x30]
  41dcb0:	outs   dx,BYTE PTR ds:[esi]
  41dcb1:	jl     0x41dcfd
  41dcb3:	mov    eax,ds:0xfb2fe3e2
  41dcb8:	mov    ds:0x3aa960be,al
  41dcbd:	sbb    BYTE PTR [ebx+esi*8+0x1d1e6b10],dl
  41dcc4:	pop    esp
  41dcc5:	lea    edi,[ebx-0x7]
  41dcc8:	xor    edx,DWORD PTR [ebx+0x52]
  41dccb:	sahf   
  41dccc:	mov    ecx,0xc64b292
  41dcd1:	imul   ecx,DWORD PTR [ebp-0x55c88e02],0xffffff9b
  41dcd8:	fwait
  41dcd9:	jbe    0x41dceb
  41dcdb:	mov    ds:0x6f658280,eax
  41dce0:	add    al,0x1a
  41dce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dce3:	jmp    0x5ed64fb4
  41dce8:	inc    edi
  41dce9:	pop    esp
  41dcea:	inc    ebx
  41dceb:	cmp    al,0xe5
  41dced:	push   esp
  41dcee:	lea    ebp,[edi+edx*4-0x2e]
  41dcf2:	inc    esp
  41dcf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcf4:	dec    ebp
  41dcf5:	mov    esp,0x611f690f
  41dcfa:	mov    esi,0xc530a562
  41dcff:	sbb    DWORD PTR [edx],esi
  41dd01:	out    0x48,eax
  41dd03:	jbe    0x41dce2
  41dd05:	xor    dh,ah
  41dd07:	inc    ebp
  41dd08:	or     ebp,ebx
  41dd0a:	(bad)  
  41dd0b:	adc    eax,0xcaf0709c
  41dd10:	add    BYTE PTR [edi-0xfd6caac],0x43
  41dd17:	mov    ah,BYTE PTR [eax-0x30a0a1bc]
  41dd1d:	inc    eax
  41dd1e:	cld    
  41dd1f:	mov    ebx,0x1300a640
  41dd24:	icebp  
  41dd25:	pop    edi
  41dd26:	int    0xe
  41dd28:	push   eax
  41dd29:	repz add eax,DWORD PTR [ecx-0x81bbc37]
  41dd30:	cld    
  41dd31:	fistp  WORD PTR ds:0x89584a7c
  41dd37:	(bad)  
  41dd38:	jbe    0x41dd20
  41dd3a:	imul   ecx,ecx,0xc6d30bc7
  41dd40:	fmul   DWORD PTR [ebp-0x2]
  41dd43:	rol    DWORD PTR [ebx-0x43],cl
  41dd46:	sbb    bl,dl
  41dd48:	pop    DWORD PTR [edx+ecx*8-0x5955e177]
  41dd4f:	ins    DWORD PTR es:[edi],dx
  41dd50:	sbb    BYTE PTR [eax+0x6e],ah
  41dd53:	pop    es
  41dd54:	pop    esi
  41dd56:	lahf   
  41dd57:	xor    ah,ch
  41dd59:	ret    0x8831
  41dd5c:	stc    
  41dd5d:	(bad)  
  41dd5f:	je     0x41ddd3
  41dd61:	xchg   edi,eax
  41dd62:	fdiv   DWORD PTR [esi-0x41]
  41dd65:	out    dx,eax
  41dd66:	fdivr  QWORD PTR [eax-0x6b]
  41dd69:	lods   eax,DWORD PTR ds:[esi]
  41dd6a:	leave  
  41dd6b:	dec    ebp
  41dd6c:	scas   al,BYTE PTR es:[edi]
  41dd6d:	cmp    DWORD PTR [ebp+0x48f51213],ebp
  41dd73:	test   eax,0xc45a140e
  41dd78:	fiadd  DWORD PTR [edi+0xe]
  41dd7b:	mov    ah,0xb0
  41dd7d:	rcr    DWORD PTR [edi+ecx*8],0x9b
  41dd81:	hlt    
  41dd82:	pop    ecx
  41dd83:	dec    edi
  41dd84:	mov    bh,0xa1
  41dd86:	pop    ebp
  41dd87:	push   ebx
  41dd88:	clc    
  41dd89:	add    bl,BYTE PTR [edx+0x1c909119]
  41dd8f:	mov    eax,ds:0xde52b637
  41dd94:	int3   
  41dd95:	push   ds
  41dd96:	test   eax,0x687da3a7
  41dd9b:	jecxz  0x41de12
  41dd9d:	or     BYTE PTR [ecx+0x77c1836d],dh
  41dda3:	pop    es
  41dda4:	xchg   edx,eax
  41dda5:	push   cs
  41dda6:	xor    ch,BYTE PTR [edx]
  41dda8:	mov    ebp,0xad77ce4d
  41ddad:	popa   
  41ddae:	enter  0x16a3,0xab
  41ddb2:	lahf   
  41ddb3:	nop
  41ddb4:	enter  0x134d,0x39
  41ddb8:	pop    esp
  41ddb9:	push   ecx
  41ddba:	les    esi,FWORD PTR [ebx]
  41ddbc:	sbb    ch,0x7e
  41ddbf:	cmp    DWORD PTR [edi-0x66],esp
  41ddc2:	mov    WORD PTR [ecx],fs
  41ddc4:	fld    QWORD PTR [ebx+0x7c870dab]
  41ddca:	syscall 
  41ddcc:	ror    BYTE PTR ds:0xc4ff432b,0x42
  41ddd3:	inc    edx
  41ddd4:	push   ds
  41ddd5:	mov    ebx,fs
  41ddd7:	jmp    0x25d9:0x3cac1de0
  41ddde:	mov    esi,0x102c4
  41dde3:	ret    
  41dde4:	adc    DWORD PTR [ebp+0x569e9b8e],0x63bde5a5
  41ddee:	sub    ecx,esi
  41ddf0:	ret    
  41ddf1:	test   al,0x9b
  41ddf3:	or     WORD PTR [edx+0x3dfde054],ax
  41ddfa:	jo     0x41de0f
  41ddfc:	adc    edx,DWORD PTR [ebx]
  41ddfe:	lock adc bh,BYTE PTR [ecx]
  41de01:	lahf   
  41de02:	dec    edx
  41de03:	cwde   
  41de04:	rol    BYTE PTR [ecx-0x49],cl
  41de07:	ja     0x41de2f
  41de09:	ret    0x9d09
  41de0c:	sub    DWORD PTR [eax+0x99833b7],eax
  41de12:	in     eax,0x5e
  41de14:	rcl    DWORD PTR [edx],0x2c
  41de17:	lea    edx,[edi-0x18]
  41de1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de1c:	or     ebx,DWORD PTR ds:0x127aa64e
  41de22:	fwait
  41de23:	or     eax,0xb72dc38
  41de28:	pusha  
  41de29:	cmp    ecx,eax
  41de2b:	nop
  41de2c:	aad    0x78
  41de2e:	push   0xffffffb6
  41de30:	retf   0x494c
  41de33:	shl    BYTE PTR [ecx],0x11
  41de36:	adc    BYTE PTR [ebx-0xc],ah
  41de39:	mov    ah,0xa3
  41de3b:	mov    edx,0x58928fe5
  41de40:	dec    esi
  41de41:	push   ebp
  41de42:	xor    eax,0x9a07e4fe
  41de47:	lds    esi,FWORD PTR [edx-0x4840cebd]
  41de4d:	pop    es
  41de4e:	pop    ecx
  41de4f:	cwde   
  41de50:	(bad)  [edx-0x54]
  41de53:	jg     0x41de7e
  41de55:	add    dl,BYTE PTR [ebp+0x30]
  41de58:	ret    0xb62
  41de5b:	push   DWORD PTR [eax-0x70]
  41de5e:	dec    ebx
  41de5f:	cmp    al,0x94
  41de61:	sub    edi,ebp
  41de63:	and    DWORD PTR [ecx+ecx*1-0x985a6c9],0x539dd60c
  41de6e:	push   ebp
  41de6f:	add    DWORD PTR [eax-0x688836da],edx
  41de75:	scas   al,BYTE PTR es:[edi]
  41de76:	xor    ecx,esp
  41de78:	fistp  DWORD PTR [ecx+0x215e6c67]
  41de7e:	int    0x61
  41de80:	outs   dx,BYTE PTR ds:[esi]
  41de81:	loop   0x41de70
  41de83:	aad    0x39
  41de85:	lock test eax,0x48a90dc8
  41de8b:	scas   eax,DWORD PTR es:[edi]
  41de8c:	arpl   WORD PTR [edi+0x2ee509ef],sp
  41de92:	div    DWORD PTR [edx]
  41de94:	popf   
  41de95:	and    bh,bl
  41de97:	rcl    DWORD PTR [ebp-0x7b],0x5d
  41de9b:	jl     0x41de9d
  41de9d:	sbb    ebp,esp
  41de9f:	pop    edi
  41dea0:	ja     0x41de60
  41dea2:	xor    DWORD PTR [eax+0x4e],ecx
  41dea5:	xchg   edx,eax
  41dea6:	les    ebp,FWORD PTR [esi-0x41]
  41dea9:	ret    0xa1d7
  41deac:	mov    bh,0x44
  41deae:	xor    BYTE PTR [esp+edx*4+0x5a],cl
  41deb2:	push   esp
  41deb3:	pop    edi
  41deb4:	(bad)  
  41deb5:	stos   DWORD PTR es:[edi],eax
  41deb6:	pop    ss
  41deb7:	jnp    0x41deea
  41deb9:	inc    esp
  41deba:	cmp    ecx,ebx
  41debc:	cmp    eax,0x154fd975
  41dec1:	mov    edi,0xec680ae
  41dec6:	xchg   DWORD PTR ds:0x4552035,ebp
  41decc:	mov    ds:0x138f596b,al
  41ded1:	jecxz  0x41de53
  41ded3:	jno    0x41dee7
  41ded5:	enter  0x834a,0x26
  41ded9:	jge    0x41df3d
  41dedb:	xchg   ebx,eax
  41dedc:	add    al,BYTE PTR [eax]
  41dede:	add    BYTE PTR [eax],al
  41dee0:	add    BYTE PTR [eax],al
  41dee2:	loope  0x41de68
  41dee4:	xchg   al,dh
  41dee6:	out    0xf2,eax
  41dee8:	not    DWORD PTR [ebp-0x25c4ffdf]
  41deee:	pop    ebp
  41deef:	std    
  41def0:	push   ds
  41def1:	cmp    BYTE PTR [edx],bl
  41def3:	pop    edx
  41def4:	add    DWORD PTR [eax],eax
  41def6:	repz add al,0x0
  41def9:	add    bh,al
  41defb:	mov    ds:0xfb0be261,al
  41df00:	aad    0x24
  41df02:	dec    ebp
  41df03:	push   edi
  41df04:	loopne 0x41deed
  41df06:	push   ebx
  41df07:	je     0x41df43
  41df09:	xchg   ebp,eax
  41df0a:	jae    0x41df20
  41df0c:	xor    bl,BYTE PTR [eax-0x18]
  41df0f:	imul   esi,DWORD PTR [ecx],0x7b44c280
  41df15:	cdq    
  41df16:	aaa    
  41df17:	jbe    0x41df70
  41df19:	xchg   ebp,edx
  41df1b:	fist   WORD PTR [esp+edi*4]
  41df1e:	push   edi
  41df1f:	ficomp WORD PTR [esi+0x2a]
  41df22:	div    ch
  41df24:	popf   
  41df25:	or     al,BYTE PTR [edx+0x67]
  41df28:	repnz mov al,BYTE PTR [edx+0x174294d8]
  41df2f:	ror    cl,1
  41df31:	adc    esi,DWORD PTR [esi-0x4d]
  41df34:	aad    0xd1
  41df36:	mov    dh,0x12
  41df38:	and    DWORD PTR [ebx-0x26065873],ecx
  41df3e:	and    ch,BYTE PTR [ecx]
  41df40:	ds mov eax,0xd688f491
  41df46:	out    dx,eax
  41df47:	lods   eax,DWORD PTR ds:[esi]
  41df48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df49:	cmp    edx,DWORD PTR [eax]
  41df4b:	cmp    eax,0xfdb01657
  41df50:	imul   esi,DWORD PTR [edx-0x53],0x90728996
  41df57:	sbb    ch,BYTE PTR [edx]
  41df59:	or     bh,BYTE PTR [ebp+0x40]
  41df5c:	mov    al,ds:0xaa7fd2b
  41df61:	jecxz  0x41df6a
  41df63:	aad    0x42
  41df65:	retf   0xde3e
  41df68:	lea    edx,[esp+eax*1-0x30dc95b7]
  41df6f:	push   cs
  41df70:	xor    al,0x13
  41df72:	inc    esi
  41df73:	push   eax
  41df74:	fstp   DWORD PTR [esi-0x4d]
  41df77:	ins    DWORD PTR es:[edi],dx
  41df78:	lds    ebp,FWORD PTR [ebx-0xf915493]
  41df7e:	xchg   ecx,eax
  41df7f:	fs lahf 
  41df81:	jbe    0x41df7b
  41df83:	xor    al,0xfe
  41df85:	sub    dl,BYTE PTR [edi-0x791ce1a3]
  41df8b:	leave  
  41df8c:	dec    ecx
  41df8d:	ds lahf 
  41df8f:	cld    
  41df90:	out    dx,eax
  41df91:	adc    eax,DWORD PTR [ecx+0x5242ced]
  41df97:	mov    cs,WORD PTR ds:[ecx+0xcb7594f]
  41df9e:	xchg   edi,eax
  41df9f:	fidiv  WORD PTR [ebx-0x48]
  41dfa2:	jno    0x41dfcd
  41dfa4:	xor    edx,DWORD PTR [ecx+0x2a]
  41dfa7:	scas   eax,DWORD PTR es:[edi]
  41dfa8:	sub    eax,0xfebf224
  41dfad:	int    0x5e
  41dfaf:	inc    esp
  41dfb0:	aas    
  41dfb1:	mov    ds:0xa331ea09,al
  41dfb6:	add    BYTE PTR [edi],bl
  41dfb8:	test   esp,esi
  41dfba:	call   0xc1da:0x800b320e
  41dfc1:	push   cs
  41dfc2:	jmp    0xc654:0xba118555
  41dfc9:	xor    DWORD PTR [ebp-0x1a],ebx
  41dfcc:	fidiv  WORD PTR [ebx-0x31ab1ab5]
  41dfd2:	popf   
  41dfd3:	jb     0x41dfb9
  41dfd5:	dec    eax
  41dfd6:	xor    ebx,DWORD PTR [esi-0x13]
  41dfd9:	jmp    0xf8e7:0x4dd2345a
  41dfe0:	fwait
  41dfe1:	cdq    
  41dfe2:	sti    
  41dfe3:	outs   dx,DWORD PTR ds:[esi]
  41dfe4:	dec    esp
  41dfe5:	fwait
  41dfe6:	adc    eax,0x7f1b88d5
  41dfeb:	mov    bl,0xdb
  41dfed:	loop   0x41e029
  41dfef:	add    eax,0x89e3a32b
  41dff4:	xor    esp,DWORD PTR [edi-0x38fd18d3]
  41dffa:	aad    0x2e
  41dffc:	ds cs pop ecx
  41dfff:	es div ch
  41e002:	sbb    DWORD PTR [eax-0x65],0xdf9e1d4a
  41e009:	jg     0x41e014
  41e00b:	fs mov edi,0x2f8cb704
  41e011:	loopne 0x41e011
  41e013:	ret    0xc92a
  41e016:	cmp    ebx,DWORD PTR [ecx+0x50]
  41e019:	iret   
  41e01a:	imul   eax,DWORD PTR [edi+edx*1-0x7b],0x8a9f2de2
  41e022:	dec    edx
  41e023:	or     al,BYTE PTR [edi]
  41e025:	adc    ebx,DWORD PTR [edi]
  41e027:	or     DWORD PTR [edx+0x44],0x18
  41e02b:	inc    esi
  41e02c:	pop    ebp
  41e02d:	mov    BYTE PTR [esi+eax*4+0x50230201],dh
  41e034:	push   ds
  41e035:	mov    WORD PTR [edi+0x3ee0af2f],cs
  41e03b:	fwait
  41e03c:	pop    ebx
  41e03d:	jnp    0x41e08f
  41e03f:	sub    al,0x4b
  41e041:	sbb    esi,eax
  41e043:	loope  0x41dff1
  41e045:	inc    ebp
  41e046:	div    BYTE PTR [ecx+0x1524ef31]
  41e04c:	and    cl,BYTE PTR [edx]
  41e04e:	xchg   ebx,eax
  41e04f:	push   ebp
  41e050:	stos   BYTE PTR es:[edi],al
  41e051:	cmp    edi,esi
  41e053:	in     eax,0x1c
  41e055:	pop    ebp
  41e056:	sbb    DWORD PTR [eax],edx
  41e058:	dec    esi
  41e059:	jecxz  0x41e027
  41e05b:	or     eax,0x80020c40
  41e060:	sbb    ebp,DWORD PTR [ebp-0x73]
  41e063:	rcr    ah,0x8b
  41e066:	mov    al,ds:0xbc781370
  41e06b:	sub    al,0xec
  41e06d:	test   dl,al
  41e06f:	push   ss
  41e070:	popa   
  41e071:	mov    ds:0x4b84f9d0,eax
  41e076:	jmp    0x41e067
  41e078:	inc    eax
  41e079:	jb     0x41e0a7
  41e07b:	in     eax,0x14
  41e07d:	in     al,dx
  41e07e:	ins    DWORD PTR es:[edi],dx
  41e07f:	sub    eax,DWORD PTR ss:[ebx+0x1fd679e9]
  41e086:	(bad)  
  41e087:	pop    edx
  41e088:	mov    ebp,0x23600ca1
  41e08d:	pop    DWORD PTR [eax-0x43]
  41e090:	sbb    BYTE PTR [edi],bh
  41e092:	mov    ch,0x64
  41e094:	sar    BYTE PTR [ecx+0x7a],0x4c
  41e098:	or     BYTE PTR [ebp+0x718e9a84],dh
  41e09e:	std    
  41e09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0a0:	mov    ebp,0xeb35d673
  41e0a5:	jns    0x41e04e
  41e0a7:	retf   0x396e
  41e0aa:	fs fwait
  41e0ac:	dec    ebx
  41e0ad:	mov    eax,0x908140a7
  41e0b2:	call   0xe0c5:0x1aba14ac
  41e0b9:	push   edi
  41e0ba:	mov    DWORD PTR [edi],0xf62b8faa
  41e0c0:	push   DWORD PTR [ebx+edx*4]
  41e0c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0c4:	sbb    DWORD PTR [edx-0x52],edi
  41e0c7:	clc    
  41e0c8:	push   cs
  41e0c9:	xlat   BYTE PTR ds:[ebx]
  41e0ca:	dec    esp
  41e0cb:	stos   DWORD PTR es:[edi],eax
  41e0cc:	pusha  
  41e0cd:	push   0x49
  41e0cf:	call   0xc0d05ea3
  41e0d4:	push   0x0
  41e0d6:	mov    dl,0x9
  41e0d8:	popf   
  41e0d9:	and    BYTE PTR ss:[edi-0x1],dh
  41e0dd:	cmp    eax,0x6195291a
  41e0e2:	sbb    BYTE PTR [eax+0x171233a4],dl
  41e0e8:	fstp   DWORD PTR [eax-0x118fd0fb]
  41e0ee:	and    esi,0x7e
  41e0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0f2:	mov    ds:0x67c510f,al
  41e0f7:	lods   eax,DWORD PTR ds:[esi]
  41e0f8:	(bad)  
  41e0f9:	loopne 0x41e121
  41e0fb:	pop    ss
  41e0fc:	mov    ds:0x62b36bf3,eax
  41e101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e102:	loopne 0x41e139
  41e104:	aaa    
  41e105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e106:	mov    cl,0x41
  41e108:	push   0x25
  41e10a:	sbb    ch,BYTE PTR [ecx]
  41e10c:	xor    ch,BYTE PTR ds:0x2a0b0fba
  41e112:	das    
  41e113:	adc    esp,DWORD PTR [ecx+0x2d]
  41e116:	lock and al,0xd0
  41e119:	jae    0x41e12f
  41e11b:	lods   eax,DWORD PTR ds:[esi]
  41e11c:	dec    ebx
  41e11d:	jge    0x41e171
  41e11f:	es not ch
  41e122:	rol    DWORD PTR [edi],0x1d
  41e125:	out    dx,al
  41e126:	xchg   ebx,eax
  41e127:	sbb    DWORD PTR [ecx+0x77],esi
  41e12a:	lds    edx,FWORD PTR [ebx]
  41e12c:	and    BYTE PTR [ecx+0x32c659c6],ah
  41e132:	adc    bh,BYTE PTR [eax-0x62]
  41e135:	mov    edx,0x664bbbbf
  41e13a:	and    eax,0xfd0ac2a
  41e13f:	and    cl,BYTE PTR [edi+0xa]
  41e142:	push   es
  41e143:	push   ebp
  41e144:	cmp    BYTE PTR [eax+0x1c3df49c],bh
  41e14a:	fimul  WORD PTR [ebx-0x15448597]
  41e150:	mov    esp,0x7be2edb
  41e155:	jnp    0x41e0e4
  41e157:	mov    dl,ah
  41e159:	shl    BYTE PTR [ebx+0x63e5567],1
  41e15f:	daa    
  41e160:	imul   BYTE PTR [ebx+0x1]
  41e163:	outs   dx,BYTE PTR ds:[esi]
  41e164:	out    0xe1,al
  41e166:	mov    bh,0x61
  41e168:	aad    0x44
  41e16a:	add    DWORD PTR [edx-0xe40c483],eax
  41e170:	sub    edi,esp
  41e172:	sub    eax,0xc6b4e23e
  41e177:	fs push es
  41e179:	push   cs
  41e17a:	jg     0x41e1db
  41e17c:	mov    eax,DWORD PTR [ecx+eiz*4-0x3e]
  41e180:	scas   al,BYTE PTR es:[edi]
  41e181:	int3   
  41e182:	stos   BYTE PTR es:[edi],al
  41e183:	stos   BYTE PTR es:[edi],al
  41e184:	inc    edi
  41e185:	and    eax,0x88053576
  41e18a:	jp     0x41e1ee
  41e18c:	bound  ecx,QWORD PTR [esp+edx*2]
  41e18f:	outs   dx,DWORD PTR ds:[esi]
  41e190:	shl    BYTE PTR [esi],cl
  41e192:	add    edx,DWORD PTR [edx+0x3c]
  41e195:	mov    ds:0xe5f2ade4,eax
  41e19a:	dec    edi
  41e19b:	push   es
  41e19c:	sar    DWORD PTR [ebp+0x3b],cl
  41e19f:	jecxz  0x41e1d9
  41e1a1:	arpl   WORD PTR [esi-0xf],sp
  41e1a4:	or     esi,edi
  41e1a6:	rol    BYTE PTR [ecx],1
  41e1a8:	jecxz  0x41e1b9
  41e1aa:	test   eax,0xf539f594
  41e1af:	loop   0x41e1b2
  41e1b1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1b3:	aam    0xba
  41e1b5:	push   ss
  41e1b6:	pop    edx
  41e1b7:	xor    cl,BYTE PTR [edi+0x5c4a0235]
  41e1bd:	inc    eax
  41e1be:	lock inc edx
  41e1c0:	pusha  
  41e1c1:	call   0x86f8f204
  41e1c6:	(bad)  
  41e1c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1c8:	pop    ebp
  41e1c9:	in     eax,dx
  41e1ca:	or     BYTE PTR [edx+0x6e],0x32
  41e1ce:	sub    BYTE PTR [edx+edi*2+0x5e],dl
  41e1d2:	int3   
  41e1d3:	mov    bl,0xae
  41e1d5:	xor    ecx,DWORD PTR [esi]
  41e1d7:	cld    
  41e1d8:	retf   
  41e1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1da:	comiss xmm7,xmm0
  41e1dd:	aaa    
  41e1de:	rcr    DWORD PTR [ebp+0x65],cl
  41e1e1:	nop
  41e1e2:	adc    BYTE PTR [edx],al
  41e1e4:	inc    ecx
  41e1e5:	fistp  QWORD PTR [ebp-0x2b5534e1]
  41e1eb:	lahf   
  41e1ec:	and    DWORD PTR [ebx],ecx
  41e1ee:	xor    al,0x89
  41e1f0:	jle    0x41e24a
  41e1f2:	sub    edx,DWORD PTR [ebp-0x263db52a]
  41e1f8:	out    0x7f,al
  41e1fa:	push   ebp
  41e1fb:	jl     0x41e247
  41e1fd:	cmp    al,0x2b
  41e1ff:	clc    
  41e200:	ins    DWORD PTR es:[edi],dx
  41e201:	sar    ch,cl
  41e203:	fcomp  QWORD PTR [ecx-0x1b]
  41e206:	paddw  mm2,QWORD PTR [esi-0x77cd0eb7]
  41e20d:	in     al,dx
  41e20e:	mov    ebp,0x407b5340
  41e213:	in     eax,0x1b
  41e215:	xchg   BYTE PTR [edx],al
  41e217:	mov    DWORD PTR [ebx-0x18973aa4],eax
  41e21d:	test   eax,0x1bcd9162
  41e222:	shl    DWORD PTR [edi-0x3ce9f450],cl
  41e228:	mov    esi,0xd8207d3d
  41e22d:	cdq    
  41e22e:	xchg   DWORD PTR [esi],edi
  41e230:	jle    0x41e217
  41e232:	das    
  41e233:	ror    ah,cl
  41e235:	dec    ebp
  41e236:	fistp  WORD PTR [edi-0x527122f8]
  41e23c:	sbb    eax,0x1bcd283e
  41e241:	sub    eax,0x52308af5
  41e246:	call   0x87cf:0xbc3db84e
  41e24d:	or     al,0x9e
  41e24f:	adc    bh,ah
  41e251:	push   eax
  41e252:	pop    ebp
  41e253:	jb     0x41e28b
  41e255:	ins    BYTE PTR es:[edi],dx
  41e256:	add    eax,0xfa76ba91
  41e25b:	and    al,BYTE PTR [edx+0x30200fc3]
  41e261:	cld    
  41e262:	sbb    esp,DWORD PTR [esi+0x61]
  41e265:	mov    bh,0x0
  41e267:	add    ah,cl
  41e269:	xor    al,0x96
  41e26b:	mov    edx,0xe1b43d99
  41e270:	lds    ebx,FWORD PTR [ebx+0x6b4e5f0a]
  41e276:	jg     0x41e2f5
  41e278:	push   ss
  41e279:	out    0xa,eax
  41e27b:	cmp    BYTE PTR [ebp-0x4c],al
  41e27e:	pushf  
  41e27f:	fneni(8087 only) 
  41e281:	push   0xed28f3b4
  41e286:	cdq    
  41e287:	in     al,dx
  41e288:	inc    ebp
  41e289:	out    dx,al
  41e28a:	push   esi
  41e28b:	pop    eax
  41e28c:	or     BYTE PTR [eax],cl
  41e28e:	or     DWORD PTR [esp+edx*4-0x7a48ddb3],0xffffffe0
  41e296:	jl     0x41e2f0
  41e298:	mov    edi,0x69627c80
  41e29d:	hlt    
  41e29e:	mov    edi,DWORD PTR [ecx]
  41e2a0:	loope  0x41e2ac
  41e2a2:	popa   
  41e2a3:	dec    edi
  41e2a4:	push   esi
  41e2a5:	inc    eax
  41e2a6:	out    dx,eax
  41e2a7:	or     al,0x28
  41e2aa:	xor    BYTE PTR [ebx+0x43],bh
  41e2ad:	fistp  QWORD PTR ds:0xebb2ca49
  41e2b3:	and    edi,DWORD PTR [edi+0x1e]
  41e2b6:	(bad)  
  41e2b7:	clc    
  41e2b8:	cmp    ch,BYTE PTR [edx-0x6509d0bb]
  41e2be:	sbb    eax,0xf30cabc1
  41e2c3:	or     al,ah
  41e2c5:	sbb    dh,cl
  41e2c7:	cmp    DWORD PTR [ebp-0x59e98367],edx
  41e2cd:	(bad)  
  41e2ce:	icebp  
  41e2cf:	test   al,0xe3
  41e2d1:	adc    BYTE PTR [ecx+0x3f00b52e],dl
  41e2d7:	imul   edx,DWORD PTR [ecx]
  41e2da:	retf   0xc48a
  41e2dd:	adc    al,0xbb
  41e2df:	loopne 0x41e326
  41e2e1:	or     al,0xf9
  41e2e3:	scas   eax,DWORD PTR es:[edi]
  41e2e4:	int3   
  41e2e5:	setns  BYTE PTR [ecx]
  41e2e8:	test   BYTE PTR [esi-0x70],ah
  41e2eb:	dec    esi
  41e2ec:	stos   BYTE PTR es:[edi],al
  41e2ed:	loopne 0x41e30d
  41e2ef:	(bad)  
  41e2f0:	fmul   QWORD PTR [ebx+0x791efc27]
  41e2f6:	call   0xc6812655
  41e2fb:	fwait
  41e2fc:	sbb    DWORD PTR [ecx+eiz*2+0x34],edi
  41e300:	pop    edi
  41e301:	jg     0x41e367
  41e303:	or     al,0xf9
  41e305:	jp     0x41e2a1
  41e307:	ret    
  41e308:	and    ecx,esi
  41e30a:	lds    ecx,FWORD PTR [eax+0x13258a89]
  41e310:	inc    edi
  41e311:	shl    BYTE PTR [edx-0x2d678d9d],0xd7
  41e318:	stos   DWORD PTR es:[edi],eax
  41e319:	jno    0x41e2e5
  41e31b:	push   eax
  41e31c:	mov    al,ds:0x42956f1b
  41e321:	lods   al,BYTE PTR ds:[esi]
  41e322:	jp     0x41e304
  41e324:	aam    0x61
  41e326:	scas   eax,DWORD PTR es:[edi]
  41e327:	cs data16 and al,0x7d
  41e32b:	cmp    eax,0xfc3c12a4
  41e330:	jns    0x41e39a
  41e332:	leave  
  41e333:	push   eax
  41e334:	and    BYTE PTR [edi-0x71],0xe4
  41e338:	pop    edi
  41e339:	mov    ebx,0xb94d8a4e
  41e33e:	push   edi
  41e33f:	and    al,0x28
  41e341:	cmp    al,dh
  41e343:	hlt    
  41e344:	scas   eax,DWORD PTR es:[edi]
  41e345:	push   ss
  41e346:	mov    ah,BYTE PTR [ebx+esi*4-0x7]
  41e34a:	(bad)  
  41e34b:	rcl    esi,1
  41e34d:	fwait
  41e34e:	jmp    0x41e30d
  41e350:	fldenv [esi]
  41e352:	std    
  41e353:	mov    edi,0x27ddbcfe
  41e358:	jg     0x41e343
  41e35a:	dec    ebx
  41e35b:	xchg   esi,eax
  41e35c:	mov    eax,ds:0xdea25bef
  41e361:	jns    0x41e30d
  41e363:	leave  
  41e364:	push   ss
  41e365:	pop    ds
  41e366:	or     eax,0xb4533ffb
  41e36b:	es dec edx
  41e36d:	mov    ch,0xe9
  41e36f:	mov    WORD PTR [eax+0x1dd1efe9],es
  41e375:	cld    
  41e376:	sbb    DWORD PTR [edx-0x6a],ebp
  41e379:	dec    ecx
  41e37a:	cmp    eax,0x129ee27f
  41e37f:	pop    ds
  41e380:	(bad)  
  41e381:	call   0xeb2cdeca
  41e386:	mov    dl,0xc4
  41e388:	pop    eax
  41e389:	xor    DWORD PTR [ebx-0x55],eax
  41e38c:	imul   edi,DWORD PTR [edx],0xffffff8b
  41e38f:	mov    ebp,0x8395dc34
  41e394:	jb     0x41e3d4
  41e396:	xor    BYTE PTR [edx+0x4b24d289],0x29
  41e39d:	shl    DWORD PTR [edi-0x55],1
  41e3a0:	bound  ebx,QWORD PTR [eax+0x51]
  41e3a3:	and    eax,0xba3ddd52
  41e3a8:	mov    al,ds:0x75d3a1ca
  41e3ad:	bound  ebx,QWORD PTR [eax+eax*4-0x3c]
  41e3b1:	(bad)  
  41e3b3:	or     edx,DWORD PTR [edx]
  41e3b5:	cmc    
  41e3b6:	xchg   ebx,eax
  41e3b7:	adc    al,0xd6
  41e3b9:	push   edx
  41e3ba:	pop    ecx
  41e3bb:	loope  0x41e395
  41e3bd:	adc    esi,ebp
  41e3bf:	shl    BYTE PTR [esi],cl
  41e3c1:	(bad)  
  41e3c3:	lock push ecx
  41e3c5:	xor    DWORD PTR [edx],ebp
  41e3c7:	ins    BYTE PTR es:[edi],dx
  41e3c8:	out    0x26,eax
  41e3ca:	loope  0x41e34f
  41e3cc:	jg     0x41e382
  41e3ce:	in     eax,dx
  41e3cf:	rcr    BYTE PTR [ebp+0x19],cl
  41e3d2:	dec    edx
  41e3d3:	daa    
  41e3d4:	or     bl,BYTE PTR [edx+0x7214ec66]
  41e3da:	jmp    0x1f4c:0x8f83acec
  41e3e1:	and    eax,0x77e593ec
  41e3e6:	jmp    0x41e368
  41e3e8:	repz rcr DWORD PTR fs:[ebx+0x2f],1
  41e3f0:	add    BYTE PTR [eax],al
  41e3f2:	add    al,0xf8
  41e3f5:	and    eax,edi
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0x8534fc94
  41e400:	into   
  41e401:	jge    0x41e410
  41e403:	pop    edi
  41e404:	add    DWORD PTR [eax],eax
  41e406:	repz add al,0x0
  41e409:	add    BYTE PTR [ecx+0x15d9dd30],bl
  41e40f:	or     edi,DWORD PTR [ecx-0x1a]
  41e412:	int3   
  41e413:	adc    esp,edx
  41e415:	ins    DWORD PTR es:[edi],dx
  41e416:	pop    esi
  41e417:	mov    bl,0x20
  41e419:	repz fst st(1)
  41e41c:	cdq    
  41e41d:	jne    0x41e3b9
  41e41f:	fwait
  41e420:	jno    0x41e3f4
  41e422:	pop    ds
  41e423:	xchg   ebp,eax
  41e424:	inc    edi
  41e425:	into   
  41e426:	jbe    0x41e3c9
  41e428:	int3   
  41e429:	or     al,0x44
  41e42b:	ss jle 0x41e3bd
  41e42e:	mov    DWORD PTR [edi],edi
  41e430:	arpl   WORD PTR [ecx+0x44883ecb],di
  41e436:	leave  
  41e437:	addr16 pop edx
  41e439:	mul    DWORD PTR [ebx+0x5b2fb57f]
  41e43f:	dec    ecx
  41e440:	pop    ss
  41e441:	inc    esp
  41e442:	xchg   esp,eax
  41e443:	and    BYTE PTR [eax+0x5b],0xd2
  41e447:	test   eax,0x1bc72a86
  41e44c:	adc    ch,BYTE PTR [ebp-0x13]
  41e44f:	lods   al,BYTE PTR ds:[esi]
  41e450:	push   edx
  41e451:	stc    
  41e452:	fcmovb st,st(4)
  41e454:	iret   
  41e455:	fwait
  41e456:	push   edi
  41e457:	and    bh,dl
  41e459:	fwait
  41e45a:	std    
  41e45b:	pop    esi
  41e45c:	aam    0x95
  41e45e:	inc    ecx
  41e45f:	dec    ecx
  41e460:	pop    ds
  41e461:	sub    BYTE PTR [eax],al
  41e463:	mov    ecx,0x3a2e45c5
  41e468:	(bad)  
  41e46a:	mov    bl,BYTE PTR [esi+esi*2+0x66]
  41e46e:	lods   eax,DWORD PTR ds:[esi]
  41e46f:	ins    BYTE PTR es:[edi],dx
  41e470:	ins    DWORD PTR es:[edi],dx
  41e471:	sbb    dl,0x3f
  41e474:	fst    QWORD PTR [edi+0x7e338e65]
  41e47a:	dec    edx
  41e47b:	and    eax,ecx
  41e47d:	push   ds
  41e47e:	fwait
  41e47f:	andps  xmm2,XMMWORD PTR [ebp-0x53fadf71]
  41e486:	sub    DWORD PTR ds:0x9bedd181,0xffffffe9
  41e48d:	imul   ecx,DWORD PTR [ecx],0x92339969
  41e493:	pusha  
  41e494:	add    bh,0xe3
  41e497:	cmp    BYTE PTR [edi],al
  41e499:	cs mov edx,0x5ef38ec9
  41e49f:	pop    ss
  41e4a0:	pop    edx
  41e4a1:	stc    
  41e4a2:	xor    ebx,eax
  41e4a4:	push   ebp
  41e4a5:	jns    0x41e4a0
  41e4a7:	pop    esi
  41e4a8:	mov    esi,0xa27df352
  41e4ad:	repnz inc esi
  41e4af:	std    
  41e4b0:	lea    esi,[edi-0x10]
  41e4b3:	adc    edx,ecx
  41e4b5:	jl     0x41e46f
  41e4b7:	mov    al,ds:0x8d5a6f99
  41e4bc:	or     eax,DWORD PTR [eax+0x265ab39d]
  41e4c2:	sahf   
  41e4c3:	rol    BYTE PTR [ecx-0x40],cl
  41e4c6:	lea    edi,[eax+0x474a2b53]
  41e4cc:	adc    ch,BYTE PTR [edx]
  41e4ce:	adc    dh,dl
  41e4d0:	sub    cl,BYTE PTR [ebx-0x450b170]
  41e4d6:	mov    bh,0x33
  41e4d8:	sub    BYTE PTR [edi],al
  41e4da:	or     BYTE PTR [ebx+0x55c4375a],ch
  41e4e0:	push   ds
  41e4e1:	out    dx,al
  41e4e2:	push   esi
  41e4e3:	inc    edx
  41e4e4:	sbb    ah,BYTE PTR [ebp-0x2913bad5]
  41e4ea:	and    DWORD PTR [edi+0x66],edi
  41e4ed:	scas   eax,DWORD PTR es:[edi]
  41e4ee:	test   al,0x6b
  41e4f0:	retf   
  41e4f1:	sbb    dh,dl
  41e4f3:	inc    ebx
  41e4f4:	or     al,0x68
  41e4f6:	mov    dl,0x34
  41e4f8:	loop   0x41e50a
  41e4fa:	mov    eax,0x4dde8e69
  41e4ff:	xlat   BYTE PTR ds:[ebx]
  41e500:	inc    ecx
  41e501:	cmp    DWORD PTR [ebx+0x38],esi
  41e504:	call   0xea6d:0xee188f2
  41e50b:	les    ecx,FWORD PTR [ebp+0x5d681904]
  41e511:	mov    ds:0xe5c41977,eax
  41e516:	add    cl,BYTE PTR ds:0x8cae12d1
  41e51c:	xchg   esi,eax
  41e51d:	and    ebp,DWORD PTR [edi]
  41e51f:	lods   al,BYTE PTR ds:[esi]
  41e520:	clc    
  41e521:	test   esp,ebx
  41e523:	das    
  41e524:	or     ecx,DWORD PTR ds:0xf589f0f8
  41e52a:	bound  ebx,QWORD PTR [ebp-0x20911132]
  41e530:	into   
  41e531:	pop    eax
  41e532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e533:	cmp    ebx,esi
  41e535:	inc    esi
  41e536:	sahf   
  41e537:	lds    ebx,FWORD PTR [eax]
  41e539:	std    
  41e53a:	outs   dx,BYTE PTR ds:[esi]
  41e53b:	dec    ecx
  41e53c:	xchg   BYTE PTR [ecx],dh
  41e53e:	push   eax
  41e53f:	mov    dh,0x33
  41e541:	daa    
  41e542:	out    0x75,al
  41e544:	mov    eax,cs:0x74b23a62
  41e54a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e54b:	nop
  41e54c:	(bad)  
  41e54d:	cli    
  41e54e:	or     bl,BYTE PTR [esi+0x1e]
  41e551:	fadd   DWORD PTR ds:0x134dde3
  41e557:	xor    al,dh
  41e559:	sub    DWORD PTR [ebp+0x1a400fd3],ecx
  41e55f:	stos   DWORD PTR es:[edi],eax
  41e560:	(bad)
  41e563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e564:	in     al,0xe3
  41e566:	call   0x1eef4cb7
  41e56b:	jae    0x41e5b8
  41e56d:	pushf  
  41e56e:	aas    
  41e56f:	pop    esp
  41e570:	add    DWORD PTR [ebx-0x1748cfc0],ebp
  41e576:	fdiv   DWORD PTR [edx]
  41e578:	loop   0x41e50e
  41e57a:	cmp    esi,ebp
  41e57c:	pop    edx
  41e57d:	pushf  
  41e57e:	add    ebx,ebp
  41e580:	jg     0x41e5d6
  41e582:	arpl   WORD PTR [edx-0x59],dx
  41e585:	lock shl BYTE PTR [di],cl
  41e589:	std    
  41e58a:	scas   al,BYTE PTR es:[edi]
  41e58b:	rcl    esi,cl
  41e58d:	or     cl,bl
  41e58f:	int3   
  41e590:	ret    0x7f80
  41e593:	jbe    0x41e5c8
  41e595:	push   0x7cc76597
  41e59a:	dec    ebp
  41e59b:	imul   esp,ebx,0xfc2b9197
  41e5a1:	ds ss syscall 
  41e5a5:	jle    0x41e5b1
  41e5a7:	push   eax
  41e5a8:	aad    0x1b
  41e5aa:	xchg   edi,eax
  41e5ab:	fisttp WORD PTR [ecx]
  41e5ad:	das    
  41e5ae:	(bad)  
  41e5af:	aas    
  41e5b0:	jns    0x41e5cf
  41e5b2:	inc    esi
  41e5b3:	mov    ds:0x74ed186c,eax
  41e5b8:	push   es
  41e5b9:	mov    ebp,0x7b197289
  41e5be:	dec    ebp
  41e5bf:	xchg   DWORD PTR [eax+edi*8],edx
  41e5c2:	jb     0x41e627
  41e5c4:	iret   
  41e5c5:	retf   0x4aa8
  41e5c8:	jno    0x41e5b4
  41e5ca:	call   0xac1e9f6f
  41e5cf:	pop    esp
  41e5d0:	xlat   BYTE PTR ds:[ebx]
  41e5d1:	mov    eax,ds:0x28e594dd
  41e5d6:	imul   ebp,DWORD PTR [ebp+0x3e4f4e19],0xffffff8a
  41e5dd:	sub    eax,0xd272df6f
  41e5e2:	pop    ebx
  41e5e3:	repnz mov bh,0xb6
  41e5e6:	or     cl,dl
  41e5e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5e9:	jnp    0x41e635
  41e5eb:	inc    eax
  41e5ec:	loop   0x41e5c7
  41e5ee:	mov    al,0x9c
  41e5f0:	push   ebx
  41e5f1:	cld    
  41e5f2:	int3   
  41e5f3:	aad    0xe6
  41e5f5:	lods   eax,DWORD PTR ds:[esi]
  41e5f6:	mov    al,ds:0x3965d1e9
  41e5fb:	pop    eax
  41e5fc:	sar    BYTE PTR [eax-0x7726eafe],1
  41e602:	(bad)  
  41e603:	(bad)  
  41e604:	jb     0x41e5ec
  41e606:	hlt    
  41e607:	mov    ds:0xcd5446d3,eax
  41e60c:	xchg   ebx,eax
  41e60d:	cs in  eax,0x6e
  41e610:	mov    ds:0xff3917e1,eax
  41e615:	test   al,0xdb
  41e617:	test   al,0x8d
  41e619:	push   edi
  41e61a:	mov    eax,0x6a9ca289
  41e61f:	mov    bl,0x65
  41e621:	int3   
  41e622:	pusha  
  41e623:	sbb    ecx,DWORD PTR [esp+ecx*1-0x3290a4d5]
  41e62a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e62b:	fwait
  41e62c:	ja     0x41e5b2
  41e62e:	fistp  WORD PTR [eax]
  41e630:	rcr    BYTE PTR [esi],1
  41e632:	cmp    edi,ecx
  41e634:	pop    edx
  41e635:	clc    
  41e636:	mov    ecx,0xe8a8c409
  41e63b:	pop    edx
  41e63c:	ins    BYTE PTR es:[edi],dx
  41e63d:	rol    BYTE PTR [esi],cl
  41e63f:	ret    0xd485
  41e642:	bound  ecx,QWORD PTR [esi-0x25]
  41e645:	adc    BYTE PTR [ebx+0x6c85ab85],0x69
  41e64c:	jmp    0xebd708e4
  41e651:	adc    bh,BYTE PTR [esi-0x25fb636]
  41e657:	mov    al,0x1e
  41e659:	cmp    eax,DWORD PTR [eax-0x3c]
  41e65c:	lds    ebp,FWORD PTR [esi+0x77]
  41e65f:	xlat   BYTE PTR ds:[ebx]
  41e660:	push   ds
  41e661:	test   ecx,0x370b6aab
  41e667:	in     al,dx
  41e668:	jbe    0x41e666
  41e66a:	push   ds
  41e66b:	xor    esp,DWORD PTR [ebx+ebp*8-0x6d2c1ac3]
  41e672:	jbe    0x41e638
  41e674:	jecxz  0x41e6c0
  41e676:	stos   DWORD PTR es:[edi],eax
  41e677:	mov    bh,0x5f
  41e679:	mov    esi,0x96ef67f4
  41e67e:	cli    
  41e67f:	addr16 mov edx,0x23294845
  41e685:	fild   QWORD PTR [ebp+0xd]
  41e688:	push   ebx
  41e689:	(bad)  [ebp+0x3454d55b]
  41e68f:	shl    ebx,cl
  41e691:	and    al,BYTE PTR [ecx]
  41e693:	jmp    0x41e658
  41e695:	mov    cl,0x91
  41e697:	inc    ebp
  41e698:	or     DWORD PTR [edx],ebp
  41e69a:	adc    eax,0x5d26f01e
  41e69f:	sub    DWORD PTR [edx-0x488b59e2],0xffffffd9
  41e6a6:	jno    0x41e6ed
  41e6a8:	jecxz  0x41e6e5
  41e6aa:	fmul   QWORD PTR [ebx-0x636358ed]
  41e6b0:	out    0x3d,al
  41e6b2:	jle    0x41e635
  41e6b4:	ss aam 0xf3
  41e6b7:	call   0xa5795913
  41e6bc:	mov    al,0x91
  41e6be:	adc    al,0x4a
  41e6c0:	aas    
  41e6c1:	pop    ebp
  41e6c2:	add    al,0xf2
  41e6c4:	shr    ch,1
  41e6c6:	or     eax,0xf9a9b3b8
  41e6cb:	ds adc al,0xb0
  41e6ce:	sahf   
  41e6cf:	adc    al,0xb
  41e6d1:	fstp   DWORD PTR [edi]
  41e6d3:	xor    al,0x9
  41e6d5:	add    BYTE PTR [ecx],dl
  41e6d7:	outs   dx,BYTE PTR cs:[esi]
  41e6d9:	fst    st(2)
  41e6db:	nop
  41e6dc:	js     0x41e6d1
  41e6de:	stc    
  41e6df:	fidivr WORD PTR [esi-0x2cfefd7c]
  41e6e5:	adc    ebp,esp
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	and    DWORD PTR [esi+0x61eb58d],ecx
  41e6ee:	sbb    DWORD PTR [edx-0x63],0xb45dbc4e
  41e6f5:	pop    es
  41e6f6:	add    eax,0x98a3916
  41e6fb:	mov    cl,0x7e
  41e6fd:	(bad)  
  41e6fe:	mov    bh,0x50
  41e700:	das    
  41e701:	push   ebx
  41e702:	and    al,0xdc
  41e704:	adc    al,0x67
  41e706:	xchg   cl,bl
  41e708:	fmul   QWORD PTR [esi-0x21e034a2]
  41e70e:	dec    edi
  41e70f:	push   esp
  41e710:	test   eax,0x6acbe59d
  41e715:	repz xor DWORD PTR [ecx],edi
  41e718:	xor    eax,0x79de3084
  41e71d:	mov    BYTE PTR [ecx-0xc],dh
  41e720:	dec    ebx
  41e721:	fs call 0x726067e3
  41e727:	mov    ah,0x4
  41e729:	xchg   edx,eax
  41e72a:	js     0x41e747
  41e72c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e72d:	xor    eax,0x1a0c2105
  41e732:	push   edx
  41e733:	mov    ah,0x54
  41e735:	aam    0x9
  41e737:	jge    0x41e708
  41e739:	ja     0x41e704
  41e73b:	(bad)  
  41e73c:	retf   0xefd4
  41e73f:	cli    
  41e740:	stos   BYTE PTR es:[edi],al
  41e741:	arpl   WORD PTR [edx-0x49],bp
  41e744:	sub    al,0xd
  41e746:	inc    ebx
  41e747:	fisubr DWORD PTR [edx]
  41e749:	je     0x41e6e3
  41e74b:	jl     0x41e7a7
  41e74d:	add    DWORD PTR [ebx-0x7a],esi
  41e750:	int    0x73
  41e752:	pop    ebx
  41e753:	pop    eax
  41e754:	and    al,0xe
  41e756:	jne    0x41e758
  41e758:	cmp    bl,cl
  41e75a:	les    eax,FWORD PTR [ecx]
  41e75c:	rol    BYTE PTR [ecx-0x62],cl
  41e75f:	(bad)  
  41e760:	adc    bl,BYTE PTR [esi+0x109ca6de]
  41e766:	test   BYTE PTR [ecx-0xb539494],al
  41e76c:	dec    esi
  41e76d:	icebp  
  41e76e:	adc    ebp,eax
  41e770:	pop    eax
  41e771:	scas   eax,DWORD PTR es:[edi]
  41e772:	sahf   
  41e773:	mov    esi,0xd81bd047
  41e778:	mov    ds:0x7de1a464,eax
  41e77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e77e:	or     esi,DWORD PTR [ecx-0x40]
  41e781:	mov    eax,ds:0x425b3274
  41e786:	scas   al,BYTE PTR es:[edi]
  41e787:	dec    eax
  41e788:	lds    esp,FWORD PTR [eax-0x42]
  41e78b:	mov    ds:0x3ac39d9b,al
  41e790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e791:	pop    edi
  41e792:	test   al,0x94
  41e794:	mov    ch,0x3b
  41e796:	xor    DWORD PTR [eax+0x3e3da951],esi
  41e79c:	adc    DWORD PTR [esi+0x3d],ecx
  41e79f:	out    dx,al
  41e7a0:	rol    BYTE PTR [ebx+0x23b0db69],1
  41e7a6:	or     edx,eax
  41e7a8:	xchg   esi,eax
  41e7a9:	repz mul DWORD PTR [edi+0x56c0790b]
  41e7b0:	fnstcw WORD PTR [ebx]
  41e7b2:	in     al,dx
  41e7b3:	jnp    0x41e7b0
  41e7b5:	and    cl,BYTE PTR [edx+eax*4]
  41e7b8:	data16 jae 0x41e81d
  41e7bb:	ss pop edi
  41e7bd:	xchg   ebp,eax
  41e7be:	xchg   ebp,eax
  41e7bf:	int    0xaf
  41e7c1:	mov    dl,0xff
  41e7c3:	es mov al,al
  41e7c6:	mov    esp,0x351002d5
  41e7cb:	fsub   DWORD PTR [ecx+0x0]
  41e7ce:	push   edx
  41e7cf:	sti    
  41e7d0:	jnp    0x41e825
  41e7d2:	pop    dx
  41e7d4:	jg     0x41e7b4
  41e7d6:	mov    cs,WORD PTR [ecx-0x4a]
  41e7d9:	lods   al,BYTE PTR ds:[esi]
  41e7da:	pop    edi
  41e7db:	shr    BYTE PTR [eax+0x72da3649],cl
  41e7e1:	(bad)  [ecx-0x4ad0050e]
  41e7e7:	jecxz  0x41e7c9
  41e7e9:	or     al,0x3
  41e7eb:	xchg   ebp,eax
  41e7ec:	in     al,dx
  41e7ed:	and    ch,BYTE PTR fs:[eax]
  41e7f0:	push   esp
  41e7f1:	test   BYTE PTR [edi],dl
  41e7f3:	inc    eax
  41e7f4:	cwde   
  41e7f5:	pop    ecx
  41e7f6:	mov    eax,ds:0xd7565c17
  41e7fb:	or     cl,BYTE PTR [edi+0x4cdb84b1]
  41e801:	addr16 xchg ecx,eax
  41e803:	sbb    eax,0x5e3bc9eb
  41e808:	aam    0x77
  41e80a:	inc    ecx
  41e80b:	pop    edx
  41e80c:	xlat   BYTE PTR ds:[ebx]
  41e80d:	popf   
  41e80e:	retf   0x8b01
  41e811:	xor    bl,al
  41e813:	arpl   WORD PTR [ecx-0x69],bp
  41e816:	and    ecx,esi
  41e818:	mov    dh,BYTE PTR [ebp+0x6f]
  41e81b:	pop    ebp
  41e81c:	sbb    al,0x53
  41e81e:	push   edx
  41e81f:	mov    cl,0xc8
  41e821:	cwde   
  41e822:	scas   eax,DWORD PTR es:[edi]
  41e823:	out    dx,al
  41e824:	inc    BYTE PTR [ecx+0x4f3cfd39]
  41e82a:	pop    esp
  41e82b:	mov    dl,0xef
  41e82d:	mov    bl,0xc2
  41e82f:	mov    dl,0xcc
  41e831:	jnp    0x41e7bc
  41e833:	xor    ah,al
  41e835:	push   ss
  41e836:	int3   
  41e837:	and    ebp,esp
  41e839:	std    
  41e83a:	aam    0x1f
  41e83c:	xchg   esp,eax
  41e83d:	outs   dx,DWORD PTR ds:[esi]
  41e83e:	adc    DWORD PTR [edx],edi
  41e840:	sbb    edi,DWORD PTR [ecx+0x77838627]
  41e846:	pop    esi
  41e847:	mov    DWORD PTR [ecx+edi*4],edi
  41e84a:	or     dh,al
  41e84c:	(bad)  
  41e84d:	in     al,0x9d
  41e84f:	gs jmp 0x8b25e2ed
  41e855:	mov    al,0xb4
  41e857:	cmp    BYTE PTR [eax],dl
  41e859:	mov    esp,0x77b760ba
  41e85e:	aad    0x98
  41e860:	pushw  0xff92
  41e863:	pushf  
  41e864:	out    0x43,al
  41e866:	rdpmc  
  41e868:	outs   dx,DWORD PTR ds:[esi]
  41e869:	(bad)
  41e86d:	mov    edx,0x21a551c
  41e872:	xchg   ebp,eax
  41e873:	inc    ecx
  41e874:	or     al,BYTE PTR [eax-0x8]
  41e877:	inc    ebx
  41e878:	add    dl,dh
  41e87a:	cmp    al,BYTE PTR [esi]
  41e87c:	retf   
  41e87d:	sub    ebx,DWORD PTR [ecx+0x7e]
  41e880:	repnz mov BYTE PTR [edi-0x41],ah
  41e884:	inc    ebx
  41e885:	paddq  mm6,QWORD PTR [esi+0x1f0f4c19]
  41e88c:	(bad)  
  41e88d:	and    eax,0x991fb738
  41e892:	std    
  41e893:	xchg   edx,eax
  41e894:	ss out dx,al
  41e896:	std    
  41e897:	mov    esp,0x8a2c5fce
  41e89c:	jbe    0x41e905
  41e89e:	hlt    
  41e89f:	repz gs pop esi
  41e8a2:	out    dx,eax
  41e8a3:	jge    0x41e850
  41e8a5:	sub    eax,DWORD PTR [edx]
  41e8a7:	or     BYTE PTR [esi-0x10f8df6d],dh
  41e8ad:	aas    
  41e8ae:	dec    esi
  41e8af:	dec    esi
  41e8b0:	ja     0x41e891
  41e8b2:	aad    0xa1
  41e8b4:	sub    BYTE PTR [eax],0x81
  41e8b7:	push   edx
  41e8b8:	xor    ebx,DWORD PTR [edx]
  41e8ba:	icebp  
  41e8bb:	cmp    cl,0x3b
  41e8be:	repnz shl BYTE PTR [eax-0x42],0x78
  41e8c3:	enter  0x335,0xf1
  41e8c7:	imul   DWORD PTR [edi+0xb34e502]
  41e8cd:	bound  eax,QWORD PTR [eax-0x44]
  41e8d0:	loope  0x41e8bc
  41e8d2:	in     al,0x98
  41e8d4:	cmp    bl,dh
  41e8d6:	mov    esi,0x388d7929
  41e8db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8dc:	pop    ebp
  41e8dd:	sbb    ah,BYTE PTR [eax-0x674d9e05]
  41e8e3:	mov    ebx,0x29038b45
  41e8e8:	out    dx,al
  41e8e9:	mov    bh,0xaf
  41e8eb:	fcomp  DWORD PTR [edi-0x11]
  41e8ee:	mov    edx,0xca1d85b8
  41e8f3:	dec    ebp
  41e8f4:	fbld   TBYTE PTR [eax+ebx*2]
  41e8f7:	pop    edi
  41e8f8:	enter  0x7672,0x38
  41e8fc:	and    al,BYTE PTR [eax]
  41e8fe:	add    BYTE PTR [eax],al
  41e900:	add    BYTE PTR [eax],al
  41e902:	jg     0x41e97c
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	retf   0x7851
  41e911:	lea    eax,[eax]
  41e913:	add    DWORD PTR fs:[eax],eax
  41e916:	repz add al,0x0
  41e919:	add    BYTE PTR [ecx],dl
  41e91b:	(bad)
  41e91e:	test   eax,0x3775f119
  41e923:	jns    0x41e8f0
  41e925:	cmp    BYTE PTR [ecx],ah
  41e927:	inc    esp
  41e928:	out    0xec,eax
  41e92a:	inc    ebx
  41e92b:	push   esp
  41e92c:	es hlt 
  41e92e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e92f:	mov    al,0x27
  41e931:	cwde   
  41e932:	call   0xe441:0xa09974d6
  41e939:	pop    eax
  41e93a:	jb     0x41e8ee
  41e93c:	std    
  41e93d:	stos   BYTE PTR es:[edi],al
  41e93e:	(bad)  
  41e93f:	xor    ebx,DWORD PTR [ecx+esi*8+0x4c1b2aae]
  41e946:	push   es
  41e947:	mov    gs:0xfd417a1,al
  41e94d:	xchg   ebx,eax
  41e94e:	xchg   edi,eax
  41e94f:	fwait
  41e950:	mov    DWORD PTR [edx+0x36908a01],edx
  41e956:	mov    bl,0xca
  41e958:	or     al,BYTE PTR [edx]
  41e95a:	inc    esi
  41e95b:	adc    ebx,DWORD PTR [edi-0x5d17e368]
  41e961:	rol    bh,cl
  41e963:	xlat   BYTE PTR ds:[ebx]
  41e964:	stos   DWORD PTR es:[edi],eax
  41e965:	out    dx,al
  41e966:	mov    ds:0x984212f,al
  41e96b:	out    0xa7,eax
  41e96d:	daa    
  41e96e:	jmp    0x503a84a9
  41e973:	dec    esi
  41e974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e975:	xor    edx,DWORD PTR [edx]
  41e977:	xor    ebx,DWORD PTR [ebp-0xb]
  41e97a:	pop    ds
  41e97b:	les    edi,FWORD PTR [edx-0x28d5a8f5]
  41e981:	in     al,dx
  41e982:	mov    dh,0xe8
  41e984:	lahf   
  41e985:	jmp    0x14f5:0xaa98cc16
  41e98c:	mov    eax,0xedc635c7
  41e991:	xor    DWORD PTR [ecx-0x576eef85],edx
  41e997:	lods   al,BYTE PTR ds:[esi]
  41e998:	repz ror eax,0xf
  41e99c:	fist   DWORD PTR [esp+eax*1-0x20]
  41e9a0:	imul   ebp,esp,0xe6c7372
  41e9a6:	xor    bl,bl
  41e9a8:	imul   esp,DWORD PTR [ebp+0x3022bc32],0xffffffe9
  41e9af:	or     al,0xd1
  41e9b1:	sbb    ah,ch
  41e9b3:	fdivr  QWORD PTR [ebx+0x2d]
  41e9b6:	mov    eax,ds:0x9b88ec0f
  41e9bb:	jbe    0x41e976
  41e9bd:	gs jmp 0x2fe8fca3
  41e9c3:	aam    0x72
  41e9c5:	mov    BYTE PTR [edi+0x15],0x34
  41e9c9:	xchg   esi,eax
  41e9ca:	push   esp
  41e9cb:	js     0x41e9eb
  41e9cd:	ret    
  41e9ce:	inc    ebx
  41e9cf:	pop    ebx
  41e9d0:	pop    edi
  41e9d1:	jno    0x41e994
  41e9d3:	data16 ficom WORD PTR es:[esi+ebx*8-0x15]
  41e9d9:	pop    ebx
  41e9da:	fstp   TBYTE PTR [esi]
  41e9dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9dd:	cmp    DWORD PTR [eax+edi*8+0x5c627228],ecx
  41e9e4:	push   es
  41e9e5:	sub    BYTE PTR [eax],bh
  41e9e7:	and    ebp,DWORD PTR [edi]
  41e9e9:	or     ch,BYTE PTR [eax-0x54441cef]
  41e9ef:	repnz loope 0x41e9b6
  41e9f2:	push   ebx
  41e9f3:	rcl    BYTE PTR [esi+0x55ef0d81],cl
  41e9f9:	ud0    eax,edi
  41e9fc:	cmp    BYTE PTR [esi+0x74],cl
  41e9ff:	jb     0x41ea29
  41ea01:	inc    ebp
  41ea02:	rcr    DWORD PTR [eax],0x2d
  41ea05:	mov    bl,bh
  41ea07:	cs aaa 
  41ea09:	push   ss
  41ea0a:	daa    
  41ea0b:	xchg   esi,eax
  41ea0c:	add    DWORD PTR ds:0x5dbf240c,edi
  41ea12:	xchg   ebx,eax
  41ea13:	xchg   esi,eax
  41ea14:	sub    DWORD PTR [ecx+ecx*4+0x757fb7c4],esi
  41ea1b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41ea1d:	xchg   esi,eax
  41ea1e:	addr16 pushf 
  41ea20:	xlat   BYTE PTR ds:[ebx]
  41ea21:	repnz test eax,0xf5f753d2
  41ea27:	in     eax,0x3d
  41ea29:	mov    ebx,DWORD PTR [ebp-0x25]
  41ea2c:	in     eax,dx
  41ea2d:	push   ebx
  41ea2e:	or     BYTE PTR [ebx+0x2105631],cl
  41ea34:	pushf  
  41ea35:	mov    ah,0x84
  41ea37:	ret    0x8f78
  41ea3a:	add    dh,dl
  41ea3c:	and    BYTE PTR ds:0xb308e136,bl
  41ea42:	dec    edx
  41ea43:	mov    BYTE PTR [ebp-0x4f],0x91
  41ea47:	cmc    
  41ea48:	(bad)  
  41ea49:	hlt    
  41ea4a:	aas    
  41ea4b:	outs   dx,BYTE PTR ds:[esi]
  41ea4c:	lods   al,BYTE PTR ds:[esi]
  41ea4d:	pop    ecx
  41ea4e:	test   DWORD PTR [eax-0x5283556e],ebp
  41ea54:	or     eax,0x60b85d13
  41ea59:	aas    
  41ea5a:	test   eax,0x4fdf9101
  41ea5f:	stos   DWORD PTR es:[edi],eax
  41ea60:	inc    ecx
  41ea61:	outs   dx,BYTE PTR ds:[esi]
  41ea62:	push   0x3427e219
  41ea67:	pop    edi
  41ea68:	loop   0x41ea23
  41ea6a:	cs and eax,0xf2dac79b
  41ea70:	iret   
  41ea71:	outs   dx,BYTE PTR ds:[esi]
  41ea72:	std    
  41ea73:	add    DWORD PTR cs:0x80b62994,esp
  41ea7a:	test   eax,0xcd3ef7c2
  41ea7f:	dec    esi
  41ea80:	or     BYTE PTR [esi],ch
  41ea82:	push   ebx
  41ea83:	cmp    edx,DWORD PTR [ecx]
  41ea85:	sbb    eax,0x69eacb49
  41ea8a:	sar    DWORD PTR [ebp+0x8b914ef],cl
  41ea90:	jmp    0x41ea66
  41ea92:	cmc    
  41ea93:	xchg   edi,eax
  41ea94:	icebp  
  41ea95:	xor    eax,ebx
  41ea97:	mov    ds:0x9ffcc7df,al
  41ea9c:	(bad)  
  41ea9d:	push   eax
  41ea9e:	push   0x149cba8a
  41eaa3:	inc    ecx
  41eaa4:	icebp  
  41eaa5:	inc    eax
  41eaa6:	imul   ecx,DWORD PTR [ecx],0x78
  41eaa9:	aad    0xe5
  41eaab:	rcl    DWORD PTR [bx+di+0x38],0x1a
  41eab0:	gs ja  0x41ea75
  41eab3:	test   al,0xfa
  41eab5:	xlat   BYTE PTR ds:[ebx]
  41eab6:	sub    eax,0x7f598b0a
  41eabb:	stc    
  41eabc:	out    dx,eax
  41eabd:	stos   DWORD PTR es:[edi],eax
  41eabe:	mov    ds:0xbdd0f850,al
  41eac3:	ret    
  41eac4:	adc    eax,0xc6f904f0
  41eac9:	add    al,0xa5
  41eacb:	mov    ecx,0xb9a085d1
  41ead0:	or     eax,DWORD PTR [eax-0x4b]
  41ead3:	ss mov edi,0xfdd389c6
  41ead9:	pop    esp
  41eada:	loopne 0x41ea6b
  41eadc:	shl    BYTE PTR [ebp+0x7c66f922],0xe6
  41eae3:	jne    0x41eb4a
  41eae5:	sub    eax,ebp
  41eae7:	loopne 0x41eb0b
  41eae9:	cmp    eax,0x54aa08e4
  41eaee:	outs   dx,BYTE PTR ds:[esi]
  41eaef:	aad    0x41
  41eaf1:	inc    ecx
  41eaf2:	sbb    edi,0xffffffc4
  41eaf5:	inc    eax
  41eaf6:	add    BYTE PTR [eiz*1+0x6a8b8cc6],0x5b
  41eafe:	pop    edi
  41eaff:	aas    
  41eb00:	fcom   DWORD PTR [edx+0x11]
  41eb03:	mov    eax,ds:0xcaf10bba
  41eb08:	bound  ebx,QWORD PTR [ecx-0x6f]
  41eb0b:	jmp    0x14ad7c05
  41eb10:	in     eax,dx
  41eb11:	mov    gs,edx
  41eb13:	dec    esi
  41eb14:	(bad)  
  41eb15:	xchg   ebp,eax
  41eb16:	pop    esi
  41eb17:	mov    ds:0xd9902cef,al
  41eb1c:	popf   
  41eb1d:	mov    ebx,0xba4ce77d
  41eb22:	sbb    eax,0xa252c2f1
  41eb27:	sub    ecx,ebp
  41eb29:	imul   edi,DWORD PTR [eiz*8+0xe1e3d3b],0x7f
  41eb31:	pushf  
  41eb32:	pop    eax
  41eb33:	in     al,dx
  41eb34:	lahf   
  41eb35:	fstp   TBYTE PTR [ebp-0x6c]
  41eb38:	rcr    BYTE PTR [eax+edi*2],0x19
  41eb3c:	mov    BYTE PTR [eax],al
  41eb3e:	int    0xe6
  41eb40:	cmp    BYTE PTR [ecx-0x2e],ah
  41eb43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb44:	jmp    0x6e25:0xe49d8062
  41eb4b:	fisttp WORD PTR [esi+esi*4-0x6f3aca1d]
  41eb52:	fstp   QWORD PTR [ecx+0x735172d8]
  41eb58:	fucomi st,st(5)
  41eb5a:	pop    es
  41eb5b:	mov    ecx,0x769f8146
  41eb60:	pusha  
  41eb61:	mov    BYTE PTR [esi+edx*1],dh
  41eb64:	jne    0x41eba5
  41eb66:	push   0x54369f1f
  41eb6b:	add    esp,DWORD PTR [edi]
  41eb6d:	ins    DWORD PTR es:[edi],dx
  41eb6e:	stos   DWORD PTR es:[edi],eax
  41eb6f:	inc    ecx
  41eb70:	je     0x41eba9
  41eb72:	sbb    al,0x20
  41eb74:	xchg   BYTE PTR [ebx+0x2f],cl
  41eb77:	and    edx,DWORD PTR [esi-0xa]
  41eb7a:	shr    BYTE PTR [ebp+edx*1+0x4a57e1e0],1
  41eb81:	nop
  41eb82:	xchg   ebp,eax
  41eb83:	ja     0x41eb82
  41eb85:	in     eax,0x95
  41eb87:	jae    0x41eb92
  41eb89:	cmc    
  41eb8a:	jmp    0x1b9ac066
  41eb8f:	adc    al,BYTE PTR [esi-0x6e9b8d97]
  41eb95:	ins    BYTE PTR es:[edi],dx
  41eb96:	sbb    al,0xba
  41eb98:	daa    
  41eb99:	jns    0x41eb96
  41eb9b:	ins    BYTE PTR es:[edi],dx
  41eb9c:	pop    ss
  41eb9d:	cmp    BYTE PTR [edx-0x3c],cl
  41eba0:	sar    ecx,cl
  41eba2:	xor    al,dh
  41eba4:	js     0x41eb8e
  41eba6:	imul   esi,edi,0x275653d3
  41ebac:	dec    eax
  41ebad:	fucom  st(3)
  41ebaf:	das    
  41ebb0:	and    DWORD PTR [eax+0x46],ebp
  41ebb3:	mov    esi,0x79bf68ba
  41ebb8:	jmp    0x41ec0f
  41ebba:	hlt    
  41ebbb:	aas    
  41ebbc:	adc    eax,0xd69861c3
  41ebc1:	in     eax,dx
  41ebc2:	aaa    
  41ebc3:	inc    edi
  41ebc4:	rol    esp,0xfa
  41ebc7:	push   es
  41ebc8:	fist   DWORD PTR [esp+eiz*2+0x5]
  41ebcc:	mov    DWORD PTR [eax+0x22b793f6],edx
  41ebd2:	retf   
  41ebd3:	daa    
  41ebd4:	repnz mov DWORD PTR ds:0xc071c141,ecx
  41ebdb:	sub    BYTE PTR [edi-0x9],0x89
  41ebdf:	sahf   
  41ebe0:	lea    ebp,[edi+0x58]
  41ebe3:	popa   
  41ebe4:	aaa    
  41ebe5:	pop    ecx
  41ebe6:	dec    eax
  41ebe7:	shl    ch,1
  41ebe9:	daa    
  41ebea:	std    
  41ebeb:	jb     0x41ebec
  41ebed:	out    dx,eax
  41ebee:	push   0xffffffdb
  41ebf0:	cdq    
  41ebf1:	cwde   
  41ebf2:	mov    esi,DWORD PTR [esi]
  41ebf4:	test   BYTE PTR [ecx],bh
  41ebf6:	cld    
  41ebf7:	stc    
  41ebf8:	inc    edx
  41ebf9:	push   es
  41ebfa:	pop    ss
  41ebfb:	sti    
  41ebfc:	add    DWORD PTR [eax-0x25427431],ebx
  41ec02:	lds    ebp,FWORD PTR [eax-0x80]
  41ec05:	dec    esi
  41ec06:	pop    ebp
  41ec07:	sub    ch,BYTE PTR [eax-0x2c7850d8]
  41ec0d:	arpl   WORD PTR [ebx],di
  41ec0f:	iret   
  41ec10:	test   eax,0x5e252ef1
  41ec15:	sub    ch,BYTE PTR [esi-0x15]
  41ec18:	fistp  QWORD PTR [edx+0x19]
  41ec1b:	pop    ecx
  41ec1c:	icebp  
  41ec1d:	push   cs
  41ec1e:	jb     0x41ec9c
  41ec20:	and    DWORD PTR [esi-0x4985654f],ebp
  41ec26:	(bad)  
  41ec28:	js     0x41ec34
  41ec2a:	les    esi,FWORD PTR [ecx-0x36]
  41ec2d:	mov    BYTE PTR [eax-0x47],bh
  41ec30:	and    esi,DWORD PTR [esi+edx*2]
  41ec33:	xchg   edi,eax
  41ec34:	loop   0x41ebb7
  41ec36:	das    
  41ec37:	arpl   WORD PTR [edx],si
  41ec39:	dec    ecx
  41ec3a:	jns    0x41ec0d
  41ec3c:	ds fs push esp
  41ec3f:	loope  0x41eca9
  41ec41:	mov    ds:0xfa957146,al
  41ec46:	push   ss
  41ec47:	push   es
  41ec48:	mov    ch,0xe3
  41ec4a:	mov    eax,0x5eec6466
  41ec4f:	(bad)  
  41ec50:	push   ecx
  41ec51:	inc    DWORD PTR [edx+0x5e]
  41ec54:	shl    BYTE PTR [eax+0x36],cl
  41ec57:	ds pop sp
  41ec5a:	nop
  41ec5b:	(bad)  
  41ec5c:	in     eax,dx
  41ec5d:	test   al,0x5d
  41ec5f:	dec    ebp
  41ec60:	inc    esi
  41ec61:	rcl    ecx,cl
  41ec63:	pop    ss
  41ec64:	stos   BYTE PTR es:[edi],al
  41ec65:	call   0x19adb469
  41ec6a:	imul   ebx,DWORD PTR [edx+0x15],0xfffffff1
  41ec6e:	sub    BYTE PTR [ebp-0x71ab772d],al
  41ec74:	inc    ebp
  41ec75:	les    ebp,FWORD PTR [esi]
  41ec77:	mov    edx,0x461ca42b
  41ec7c:	lock (bad) 
  41ec7e:	fisttp QWORD PTR [ebp-0x32844759]
  41ec84:	test   al,0x4b
  41ec86:	div    BYTE PTR [edi-0xb]
  41ec89:	test   al,0xe3
  41ec8b:	out    0x4b,eax
  41ec8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec8e:	xchg   edi,eax
  41ec8f:	dec    ebx
  41ec90:	pop    edi
  41ec91:	jl     0x41ec69
  41ec93:	mov    eax,ds:0x6b1fbd10
  41ec98:	pop    edi
  41ec99:	imul   esi,DWORD PTR [ebx+0x521387f0],0x11
  41eca0:	arpl   WORD PTR [esi+ecx*8+0x3ff4234c],si
  41eca7:	lahf   
  41eca8:	mov    edi,0xadbf8c4d
  41ecad:	test   eax,0x8f035f4b
  41ecb2:	and    bh,0xfd
  41ecb5:	ds push 0x5a466a6b
  41ecbb:	sub    al,0x72
  41ecbd:	mov    dl,0xc3
  41ecbf:	jne    0x41ec93
  41ecc1:	mov    ds:0x7f639076,eax
  41ecc6:	dec    esp
  41ecc7:	rcr    DWORD PTR [edx+ebp*4],0xf2
  41eccb:	and    DWORD PTR [edx-0x2c],ebx
  41ecce:	shl    DWORD PTR [ecx+0x3e261e83],0x12
  41ecd5:	jns    0x41ed22
  41ecd7:	arpl   WORD PTR [edx+edx*2+0x1121966c],bx
  41ecde:	xor    DWORD PTR [eax+0x20f70561],ecx
  41ece4:	jle    0x41ecec
  41ece6:	mov    al,0xa9
  41ece8:	push   ds
  41ece9:	xchg   ecx,eax
  41ecea:	sub    cl,BYTE PTR [eax-0x5d76f2ef]
  41ecf0:	sub    al,bl
  41ecf2:	imul   ecx,edi,0x7f
  41ecf5:	xor    esi,DWORD PTR [edx+0x5f]
  41ecf8:	call   0xdaf7:0x7385dbeb
  41ecff:	xchg   ebp,eax
  41ed00:	clc    
  41ed01:	xor    BYTE PTR [eax+0x53372e47],al
  41ed07:	scas   eax,DWORD PTR es:[edi]
  41ed08:	pop    edx
  41ed09:	push   ebx
  41ed0a:	popf   
  41ed0b:	xchg   edi,eax
  41ed0c:	dec    ebp
  41ed0d:	xor    cl,BYTE PTR [ecx+0xd]
  41ed10:	pop    es
  41ed11:	pop    ss
  41ed12:	cmp    eax,0x531f1c2e
  41ed17:	sbb    eax,0xb6ff764a
  41ed1c:	daa    
  41ed1d:	add    edx,DWORD PTR [edx-0x37b036ef]
  41ed23:	sbb    BYTE PTR [ecx-0x18],cl
  41ed26:	lock pop ebx
  41ed28:	hlt    
  41ed29:	pop    esp
  41ed2a:	dec    ebx
  41ed2b:	(bad)  
  41ed2c:	cmp    ebx,eax
  41ed2e:	sub    eax,0xa0438fa5
  41ed33:	outs   dx,DWORD PTR ds:[esi]
  41ed34:	in     al,0x9d
  41ed36:	out    0x4b,eax
  41ed38:	loope  0x41eccc
  41ed3a:	add    ch,BYTE PTR [ebp+0x61c35d59]
  41ed40:	pop    ds
  41ed41:	add    dh,BYTE PTR [ecx]
  41ed43:	inc    ecx
  41ed44:	adc    ch,BYTE PTR [eax+0x36]
  41ed47:	test   BYTE PTR [edx-0x41e7d155],0x23
  41ed4e:	es mov dh,0xaa
  41ed51:	inc    eax
  41ed52:	mov    ch,0xaf
  41ed54:	fcomp  DWORD PTR [ebx]
  41ed56:	int3   
  41ed57:	and    edi,0x35
  41ed5a:	sbb    esi,ebx
  41ed5c:	xor    BYTE PTR [edi+0x6eac91e6],ah
  41ed62:	dec    eax
  41ed63:	stc    
  41ed64:	imul   ebx,esi,0xfffffffa
  41ed67:	xor    esi,esp
  41ed69:	scas   al,BYTE PTR es:[edi]
  41ed6a:	jg     0x41edbe
  41ed6c:	and    eax,0x83c8f6d8
  41ed71:	adc    ebx,DWORD PTR [esi+0x38]
  41ed74:	ret    
  41ed75:	retf   0xe9ba
  41ed78:	or     al,0xdd
  41ed7a:	pop    edi
  41ed7b:	into   
  41ed7c:	push   ebx
  41ed7d:	add    BYTE PTR ds:0x2483c72b,bh
  41ed83:	imul   eax,DWORD PTR [edx+0x45],0x64
  41ed87:	lods   eax,DWORD PTR ds:[esi]
  41ed88:	push   cs
  41ed89:	icebp  
  41ed8a:	sbb    DWORD PTR [ecx-0x32],eax
  41ed8d:	mov    ecx,0xb0eb8a01
  41ed92:	pushf  
  41ed93:	mov    dh,0xa0
  41ed95:	rcl    dh,cl
  41ed97:	push   esp
  41ed98:	(bad)  
  41ed99:	fs inc edi
  41ed9b:	fsubr  QWORD PTR [ebx+0x2ae8a19c]
  41eda1:	sbb    ecx,DWORD PTR [esi]
  41eda3:	rcr    BYTE PTR fs:[ecx+edi*4+0x77],cl
  41eda8:	in     eax,0x6
  41edaa:	sti    
  41edab:	dec    di
  41edad:	cmp    DWORD PTR [ebx+0x60],edx
  41edb0:	pop    ebp
  41edb1:	push   eax
  41edb2:	std    
  41edb3:	ror    DWORD PTR ds:0xf3a2ee0,1
  41edb9:	cmc    
  41edba:	es int3 
  41edbc:	add    eax,0xa0db7aeb
  41edc1:	outs   dx,BYTE PTR ds:[esi]
  41edc2:	mov    al,0x5f
  41edc4:	ret    
  41edc5:	adc    eax,0x9c141fd
  41edca:	xchg   ebx,eax
  41edcb:	jl     0x41edc0
  41edcd:	jle    0x41ee13
  41edcf:	sbb    DWORD PTR cs:[esi+0x1b5af7a8],ebx
  41edd6:	out    dx,eax
  41edd7:	dec    esp
  41edd8:	call   0xb93de2ca
  41eddd:	jecxz  0x41ed69
  41eddf:	sub    eax,0x89a70244
  41ede4:	push   ss
  41ede5:	jl     0x41edd0
  41ede7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ede8:	clc    
  41ede9:	cmp    eax,0xa3adbcef
  41edee:	fidivr DWORD PTR ss:[eax-0x18fd5d8e]
  41edf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edf6:	lods   eax,DWORD PTR ds:[esi]
  41edf7:	adc    al,0xe4
  41edf9:	cmp    DWORD PTR [ebx+0x77],esp
  41edfc:	sbb    BYTE PTR [ebx-0x5e71fef2],ch
  41ee02:	dec    ebx
  41ee03:	mov    esp,0xedb515b0
  41ee08:	adc    ah,bl
  41ee0a:	jae    0x41ee3e
  41ee0c:	data16 add BYTE PTR [eax],al
  41ee0f:	add    BYTE PTR [eax],al
  41ee11:	add    BYTE PTR [edx+0x51],dl
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	loopne 0x41eddd
  41ee20:	je     0x41ee31
  41ee22:	repz push 0x4f30001
  41ee28:	add    BYTE PTR [eax],al
  41ee2a:	es sbb eax,0xbdcf58f7
  41ee30:	pusha  
  41ee31:	jno    0x41ee75
  41ee33:	and    DWORD PTR [ebp-0x21b4ab30],eax
  41ee39:	jg     0x41ee26
  41ee3b:	ret    0x69e1
  41ee3e:	cmp    DWORD PTR [eax],0x93a6a82c
  41ee44:	stos   BYTE PTR es:[edi],al
  41ee45:	pop    eax
  41ee46:	dec    ebp
  41ee47:	add    DWORD PTR [eax+ebx*4-0x4111a382],esi
  41ee4e:	dec    ebx
  41ee4f:	pop    ebx
  41ee50:	icebp  
  41ee51:	arpl   WORD PTR [esi],cx
  41ee53:	mov    cs,ebx
  41ee55:	test   BYTE PTR [esi+0x59701bf5],0x9a
  41ee5c:	retf   
  41ee5d:	xlat   BYTE PTR ds:[ebx]
  41ee5e:	sbb    DWORD PTR [edi-0x4b],eax
  41ee61:	sti    
  41ee62:	lea    esi,[ecx-0x80]
  41ee65:	or     esi,DWORD PTR [eax+0x640349e5]
  41ee6b:	ret    0x5aac
  41ee6e:	stos   DWORD PTR es:[edi],eax
  41ee6f:	repnz stos DWORD PTR es:[edi],eax
  41ee71:	test   BYTE PTR ds:0xebc5b7f,0x8a
  41ee78:	xchg   esp,eax
  41ee79:	aam    0x2d
  41ee7b:	or     BYTE PTR [ecx+0x36],ah
  41ee7e:	outs   dx,DWORD PTR ds:[esi]
  41ee7f:	mov    eax,ds:0xa0e64ab8
  41ee84:	fstp   DWORD PTR [ebp-0xa]
  41ee87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee88:	cmp    cl,BYTE PTR [eax]
  41ee8a:	mov    dl,0xc8
  41ee8c:	jne    0x41ee42
  41ee8e:	lock jmp 0x41eeb8
  41ee91:	ins    BYTE PTR es:[edi],dx
  41ee92:	xchg   ebp,eax
  41ee93:	mov    esi,0xcddd7acd
  41ee98:	icebp  
  41ee99:	ror    cl,1
  41ee9b:	sub    DWORD PTR [ebx-0x266f3c87],ebp
  41eea1:	call   esi
  41eea3:	jle    0x41eea5
  41eea5:	cld    
  41eea6:	mov    ecx,0x93a13f8c
  41eeab:	push   edi
  41eeac:	push   edi
  41eead:	test   DWORD PTR [ebp+0x12],ebx
  41eeb0:	sub    bh,BYTE PTR [edx-0x5d]
  41eeb3:	and    al,0xec
  41eeb5:	das    
  41eeb6:	push   ds
  41eeb7:	arpl   si,ax
  41eeb9:	sub    DWORD PTR [eax+ecx*2-0x6c],edx
  41eebd:	popa   
  41eebe:	inc    ebx
  41eebf:	push   esp
  41eec0:	loope  0x41eef8
  41eec2:	mov    esi,0x9fb79f78
  41eec7:	sahf   
  41eec8:	ins    BYTE PTR es:[edi],dx
  41eec9:	out    dx,eax
  41eeca:	mov    cs,WORD PTR [eax-0x5c]
  41eecd:	and    eax,0xe78c413
  41eed2:	adc    eax,DWORD PTR [eax-0x39]
  41eed5:	sub    BYTE PTR [edx-0x55],dl
  41eed8:	xor    DWORD PTR [ebx],esi
  41eeda:	jecxz  0x41ef37
  41eedc:	fucom  st(5)
  41eede:	push   ss
  41eedf:	add    eax,0xd4fc9944
  41eee4:	inc    esp
  41eee5:	stos   BYTE PTR es:[edi],al
  41eee6:	jae    0x41eee5
  41eee8:	mov    ds:0x17844f7a,eax
  41eeed:	jo     0x41ee8d
  41eeef:	cmc    
  41eef0:	xor    ecx,eax
  41eef2:	pop    ebx
  41eef4:	das    
  41eef5:	pop    ds
  41eef6:	push   ds
  41eef7:	test   edi,eax
  41eef9:	sbb    eax,0xa74a224c
  41eefe:	mov    esp,0xb36d543e
  41ef03:	mov    bl,0x97
  41ef05:	je     0x41ef78
  41ef07:	ins    DWORD PTR es:[edi],dx
  41ef08:	push   0x8ff30dd0
  41ef0d:	and    DWORD PTR [esi],edx
  41ef0f:	fisttp WORD PTR [ebx]
  41ef11:	cmc    
  41ef12:	daa    
  41ef13:	xlat   BYTE PTR ds:[ebx]
  41ef14:	ret    
  41ef15:	inc    edx
  41ef16:	in     eax,dx
  41ef17:	int3   
  41ef18:	lods   eax,DWORD PTR ds:[esi]
  41ef19:	retf   0xf3a0
  41ef1c:	(bad)  
  41ef1d:	push   esi
  41ef1e:	fdivr  DWORD PTR ds:0x772bd0df
  41ef24:	mov    al,ds:0xeda091cf
  41ef29:	or     al,0x9b
  41ef2b:	mov    dh,0x13
  41ef2d:	adc    DWORD PTR [edi-0x26],eax
  41ef30:	call   DWORD PTR [ebp+ecx*1+0x6b]
  41ef34:	push   ds
  41ef35:	pop    esi
  41ef36:	jmp    0x47b23279
  41ef3b:	mov    bh,0x9c
  41ef3d:	(bad)  
  41ef3e:	fiadd  DWORD PTR [eax+0x5a]
  41ef41:	aam    0xeb
  41ef43:	aad    0x77
  41ef45:	sub    DWORD PTR [ebx+0x2d58f853],esi
  41ef4b:	and    al,0x26
  41ef4d:	inc    ebp
  41ef4e:	mov    dh,0x2a
  41ef50:	(bad)  
  41ef51:	lods   al,BYTE PTR ds:[esi]
  41ef52:	in     eax,dx
  41ef53:	xchg   ecx,eax
  41ef54:	test   DWORD PTR [ebx],edi
  41ef56:	lds    eax,FWORD PTR [edi]
  41ef58:	push   ss
  41ef59:	mov    DWORD PTR [eax-0x37],ecx
  41ef5c:	popa   
  41ef5d:	jnp    0x41eee2
  41ef5f:	mov    ebp,DWORD PTR [esi+0x69]
  41ef62:	xchg   esp,eax
  41ef63:	pop    esp
  41ef64:	jp     0x41efad
  41ef66:	push   ebp
  41ef67:	mov    dh,0x6b
  41ef69:	adc    eax,0xab75291f
  41ef6e:	jne    0x41ef09
  41ef70:	add    bl,BYTE PTR [esi+esi*4-0x2d]
  41ef74:	adc    DWORD PTR [ecx+0x44],0xffffffb6
  41ef78:	and    DWORD PTR [ecx-0x4591ce85],edi
  41ef7e:	sbb    DWORD PTR [eax-0x38],esi
  41ef81:	icebp  
  41ef82:	aas    
  41ef83:	fisttp DWORD PTR [eax]
  41ef85:	into   
  41ef86:	pop    ebp
  41ef87:	push   cs
  41ef88:	jl     0x41efd8
  41ef8a:	mov    dh,0x54
  41ef8c:	add    DWORD PTR [esi+0x5dd67b5f],ecx
  41ef92:	retf   0x46eb
  41ef95:	inc    eax
  41ef96:	retf   
  41ef97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef98:	adc    BYTE PTR [edi+0x17a19a34],ah
  41ef9e:	retf   
  41ef9f:	jns    0x41ef3b
  41efa1:	ins    DWORD PTR es:[edi],dx
  41efa2:	push   edx
  41efa3:	push   esp
  41efa4:	lods   eax,DWORD PTR ds:[esi]
  41efa5:	retf   0x96d1
  41efa8:	dec    ebx
  41efa9:	ret    
  41efaa:	push   es
  41efab:	or     bl,BYTE PTR [esi-0x4ed55393]
  41efb1:	jge    0x41ef8e
  41efb3:	sub    cl,bl
  41efb5:	popa   
  41efb6:	pop    eax
  41efb7:	jae    0x41f001
  41efb9:	push   esp
  41efba:	in     al,0xd8
  41efbc:	mov    esp,0xb89ffae
  41efc1:	dec    ebp
  41efc2:	ja     0x41efb4
  41efc4:	ja     0x41efe0
  41efc6:	lahf   
  41efc7:	imul   eax,DWORD PTR [ebp+edi*2+0x5d],0xffffffbb
  41efcc:	jne    0x41ef55
  41efce:	sbb    eax,DWORD PTR [esi-0x48]
  41efd1:	and    ebx,DWORD PTR [edx+0x5f]
  41efd4:	iret   
  41efd5:	xchg   sp,ax
  41efd7:	aad    0xa3
  41efd9:	mov    esi,0x6ad1836c
  41efde:	add    DWORD PTR [edi-0x6e961aad],esi
  41efe4:	inc    ebp
  41efe5:	dec    edx
  41efe6:	leave  
  41efe7:	mul    ebp
  41efe9:	push   es
  41efea:	xchg   BYTE PTR [di],ah
  41efed:	push   edx
  41efee:	and    BYTE PTR [edi+0x6097f576],dl
  41eff4:	mov    ch,0x10
  41eff6:	dec    esp
  41eff7:	arpl   WORD PTR [ecx],dx
  41eff9:	imul   BYTE PTR [ebx-0x3e]
  41effc:	xchg   edi,eax
  41effd:	add    eax,0x1eeee742
  41f002:	nop
  41f003:	sbb    ebp,ebp
  41f005:	mov    WORD PTR [ecx-0x43df8b01],ss
  41f00b:	in     eax,0x35
  41f00d:	in     al,0x34
  41f00f:	mov    ebx,0x56972bd3
  41f014:	(bad)  
  41f015:	cmp    al,0x18
  41f017:	aad    0xe9
  41f019:	retf   
  41f01a:	add    eax,0x104140af
  41f01f:	cmp    eax,0x19a490e8
  41f024:	mov    ecx,DWORD PTR [ecx+ebp*1-0x45c4eaa2]
  41f02b:	xor    eax,0xc24c3836
  41f030:	int3   
  41f031:	jns    0x41f01d
  41f033:	dec    eax
  41f034:	dec    edi
  41f035:	sbb    dh,BYTE PTR [eax-0x48]
  41f038:	mov    ds:0x50dedfb7,eax
  41f03d:	(bad)  
  41f03e:	repnz dec DWORD PTR [esi]
  41f041:	pop    ebx
  41f042:	outs   dx,BYTE PTR ds:[esi]
  41f043:	lods   eax,DWORD PTR ds:[esi]
  41f044:	jb     0x41efcc
  41f046:	mov    edx,0x1db36879
  41f04b:	repz (bad) 
  41f04d:	in     al,dx
  41f04e:	call   0x7c9b6a24
  41f053:	loopne 0x41f0b7
  41f055:	xchg   ebp,eax
  41f056:	pop    ss
  41f057:	popa   
  41f058:	les    ecx,FWORD PTR [ebx]
  41f05a:	push   0xffffffaa
  41f05c:	mov    esi,0x483ba2ea
  41f061:	jns    0x41f070
  41f063:	pushf  
  41f064:	test   al,0xce
  41f066:	mov    ah,0xd0
  41f068:	mov    al,0x57
  41f06a:	jmp    0x41f043
  41f06c:	jbe    0x41f061
  41f06e:	mov    edi,0x24bc905e
  41f073:	(bad)  
  41f074:	pop    edi
  41f075:	pop    es
  41f076:	mov    dl,BYTE PTR [ecx+0xf]
  41f079:	rol    edi,cl
  41f07b:	cmp    eax,DWORD PTR ds:0xf32dbb7f
  41f081:	test   eax,0x35e0c405
  41f086:	fistp  WORD PTR [ebp+0x5b3de674]
  41f08c:	and    esp,DWORD PTR [edi+0x58f2fc43]
  41f092:	add    al,0x1
  41f094:	femms  
  41f096:	mov    eax,ds:0x2ad64f79
  41f09b:	ret    0x7f01
  41f09e:	fcmove st,st(2)
  41f0a0:	scas   al,BYTE PTR es:[edi]
  41f0a1:	adc    ah,BYTE PTR [ecx-0x67]
  41f0a4:	or     BYTE PTR [esp+ebp*8-0x9547b3f],ah
  41f0ab:	push   cs
  41f0ac:	(bad)  
  41f0ad:	pop    eax
  41f0ae:	les    ebp,FWORD PTR [eax]
  41f0b0:	aam    0xb6
  41f0b2:	dec    ebp
  41f0b3:	push   es
  41f0b4:	leave  
  41f0b5:	clc    
  41f0b6:	call   DWORD PTR [ebp-0x7249e734]
  41f0bc:	mov    ch,BYTE PTR [ecx-0x6a41be03]
  41f0c2:	ins    DWORD PTR es:[edi],dx
  41f0c3:	mov    al,0x2e
  41f0c5:	mov    al,ds:0x9f60deb5
  41f0ca:	fimul  WORD PTR [ecx-0x69a79bb2]
  41f0d0:	lods   eax,DWORD PTR ds:[esi]
  41f0d1:	cmovbe ebx,DWORD PTR [ebp-0x6a]
  41f0d5:	loop   0x41f0ee
  41f0d7:	stc    
  41f0d8:	dec    ebx
  41f0d9:	dec    esp
  41f0da:	xor    al,0xa6
  41f0dc:	fiadd  DWORD PTR [ebx+0x49]
  41f0df:	pusha  
  41f0e0:	out    dx,al
  41f0e1:	out    dx,al
  41f0e2:	pop    esp
  41f0e3:	fild   WORD PTR [ebx-0x64]
  41f0e6:	ja     0x41f0ae
  41f0e8:	popf   
  41f0e9:	mov    ecx,0x9109f295
  41f0ee:	adc    al,0xc2
  41f0f0:	and    BYTE PTR [ecx+0x53672dc6],bl
  41f0f6:	pop    es
  41f0f7:	(bad)  
  41f0f8:	(bad)  
  41f0f9:	loopne 0x41f140
  41f0fb:	pushf  
  41f0fc:	mov    ecx,0x5302807f
  41f101:	xchg   cl,bl
  41f103:	ret    0xe1c7
  41f106:	dec    ebx
  41f107:	inc    ecx
  41f108:	adc    al,0x8d
  41f10a:	shl    BYTE PTR [ebp-0x6d],cl
  41f10d:	pop    esp
  41f10e:	pop    ecx
  41f10f:	jnp    0x41f18d
  41f111:	xchg   edx,eax
  41f112:	jae    0x41f16d
  41f114:	aad    0x78
  41f116:	jecxz  0x41f09c
  41f118:	ss into 
  41f11a:	push   eax
  41f11b:	inc    ebx
  41f11c:	repz push es
  41f11e:	and    BYTE PTR [esp+eax*8],dl
  41f121:	lock aaa 
  41f123:	js     0x41f143
  41f125:	sub    al,0xae
  41f127:	mov    edi,0x398f6539
  41f12c:	icebp  
  41f12d:	sbb    dl,BYTE PTR [ecx+eiz*1]
  41f130:	js     0x41f17d
  41f132:	pop    ebp
  41f133:	or     DWORD PTR [edx-0x70275222],edi
  41f139:	sbb    DWORD PTR ds:0xe9b2cc8f,0x5
  41f140:	repnz cdq 
  41f142:	push   eax
  41f143:	jl     0x41f13f
  41f145:	std    
  41f146:	sbb    bh,bl
  41f148:	jno    0x41f1b4
  41f14a:	call   0x68c74f66
  41f14f:	mov    ecx,0xc48564c7
  41f154:	shl    ch,cl
  41f156:	jmp    0x41f164
  41f158:	enter  0x1208,0xdc
  41f15c:	and    eax,0xfbdbab9e
  41f161:	jns    0x41f1d2
  41f163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f164:	fsub   DWORD PTR [ecx]
  41f166:	jb     0x41f0f3
  41f168:	add    eax,0x902e09b7
  41f16d:	gs dec ebx
  41f16f:	push   edi
  41f170:	leave  
  41f171:	inc    esi
  41f172:	jmp    0x7e76dfbd
  41f177:	sbb    bl,BYTE PTR [esi-0x7c]
  41f17a:	cmp    al,0xfe
  41f17c:	dec    ebp
  41f17d:	jmp    0x41f13d
  41f17f:	and    edx,DWORD PTR [ebx]
  41f181:	ret    
  41f182:	mov    ecx,0xb099ed84
  41f187:	pop    esp
  41f188:	pop    eax
  41f189:	call   0xd3c1:0xd1a86a56
  41f190:	rcl    DWORD PTR [edi],0xef
  41f193:	xor    al,0xcc
  41f195:	xor    ch,BYTE PTR [edi-0x36]
  41f198:	xchg   ebp,eax
  41f199:	cmp    esp,eax
  41f19b:	repnz stos BYTE PTR es:[edi],al
  41f19d:	inc    ebp
  41f19e:	loopne 0x41f172
  41f1a0:	fst    st(1)
  41f1a2:	mov    ecx,0xf8f2e608
  41f1a7:	neg    edx
  41f1a9:	push   edi
  41f1aa:	and    DWORD PTR [ebx+ebx*1],ebx
  41f1ad:	addr16 cwde 
  41f1af:	leave  
  41f1b0:	not    BYTE PTR [eax+0x24146c54]
  41f1b6:	imul   esp,DWORD PTR [eax+eiz*8],0x27
  41f1ba:	dec    esi
  41f1bb:	test   eax,0x43f930af
  41f1c0:	cmp    ebx,DWORD PTR [esi-0x186c90dd]
  41f1c6:	dec    esi
  41f1c7:	arpl   WORD PTR ds:0x215d5152,ax
  41f1cd:	xchg   ebx,eax
  41f1ce:	sbb    DWORD PTR [edi-0x6d],0x9871ba81
  41f1d5:	jecxz  0x41f20a
  41f1d7:	jns    0x41f1cb
  41f1d9:	jne    0x41f1de
  41f1db:	addr16 pop esp
  41f1dd:	outs   dx,DWORD PTR ds:[esi]
  41f1de:	cmp    eax,0x7b2465e4
  41f1e3:	int3   
  41f1e4:	inc    edi
  41f1e5:	test   bh,ch
  41f1e7:	sbb    BYTE PTR [eax-0x72a74bc0],dh
  41f1ed:	fnstcw WORD PTR [ebx-0x1cd2d472]
  41f1f3:	mov    ch,0xd1
  41f1f5:	stos   DWORD PTR es:[edi],eax
  41f1f6:	frstor es:[esi+0x53]
  41f1fa:	out    dx,eax
  41f1fb:	inc    ecx
  41f1fc:	pop    eax
  41f1fd:	and    BYTE PTR [ecx],cl
  41f1ff:	loop   0x41f25e
  41f201:	push   edi
  41f202:	mov    ebp,DWORD PTR [ebx+0x265323e1]
  41f208:	sbb    eax,0x79efe9c6
  41f20d:	push   edi
  41f20e:	inc    esi
  41f20f:	mov    bl,0x15
  41f211:	loope  0x41f21d
  41f213:	dec    ebp
  41f214:	fcom   QWORD PTR [eax-0x76]
  41f217:	outs   dx,DWORD PTR ds:[esi]
  41f218:	xchg   esi,eax
  41f219:	and    dl,BYTE PTR [eax]
  41f21b:	xchg   edi,eax
  41f21c:	cli    
  41f21d:	dec    eax
  41f21e:	in     al,0x63
  41f220:	xor    ebp,DWORD PTR [esi+0x3]
  41f223:	and    DWORD PTR [eax-0x319e510b],esp
  41f229:	mov    ds:0x5df87170,eax
  41f22e:	dec    ebp
  41f22f:	ins    DWORD PTR es:[edi],dx
  41f230:	scas   al,BYTE PTR es:[edi]
  41f231:	mov    ecx,0x731a9fb9
  41f236:	adc    cl,BYTE PTR [edx-0x3a]
  41f239:	or     edx,ebx
  41f23b:	dec    esi
  41f23c:	es cmp eax,0xe9a3b6e8
  41f242:	xor    al,0x85
  41f244:	loopne 0x41f26c
  41f246:	mov    esp,esp
  41f248:	push   esp
  41f249:	retf   0x9723
  41f24c:	sbb    al,0x10
  41f24e:	or     eax,0xcbb61496
  41f253:	cld    
  41f254:	hlt    
  41f255:	cdq    
  41f256:	retf   
  41f257:	out    dx,al
  41f258:	inc    ebx
  41f259:	loop   0x41f203
  41f25b:	pop    edx
  41f25c:	scas   al,BYTE PTR es:[edi]
  41f25d:	fisttp QWORD PTR ds:0x3f662de4
  41f263:	mov    cl,BYTE PTR [ebx]
  41f265:	and    al,0x8b
  41f267:	test   BYTE PTR [ecx],ch
  41f269:	addr16 ja 0x41f283
  41f26c:	call   0x6df4:0x7c748527
  41f273:	add    al,0x15
  41f275:	dec    esi
  41f276:	mov    WORD PTR ds:[eax+eiz*4-0x38],ds
  41f27b:	dec    esi
  41f27c:	cs and al,0x6f
  41f27f:	xchg   ebx,eax
  41f280:	scas   eax,DWORD PTR es:[edi]
  41f281:	inc    ecx
  41f282:	add    DWORD PTR [eax+eiz*1],0x12c9a8ae
  41f289:	sub    ebp,DWORD PTR [edi]
  41f28b:	inc    ebx
  41f28c:	xchg   edx,eax
  41f28d:	(bad)  
  41f28e:	enter  0xaaf3,0x83
  41f292:	fisttp DWORD PTR [edi+ecx*1+0x52]
  41f296:	popf   
  41f297:	add    eax,0xb262a948
  41f29c:	outs   dx,BYTE PTR ds:[esi]
  41f29d:	sub    eax,0x41d24eae
  41f2a2:	je     0x41f321
  41f2a4:	cmp    dl,BYTE PTR [edi+0x26141e65]
  41f2aa:	sbb    DWORD PTR [ebx+0x6453fdc5],ebp
  41f2b0:	jp     0x41f2de
  41f2b2:	push   esp
  41f2b3:	stc    
  41f2b4:	jle    0x41f2af
  41f2b6:	push   ss
  41f2b7:	sub    cl,BYTE PTR [ecx]
  41f2b9:	ret    0xf86f
  41f2bc:	js     0x41f302
  41f2be:	ins    DWORD PTR es:[edi],dx
  41f2bf:	or     DWORD PTR [ebp+0x18],0x9d9f930e
  41f2c6:	(bad)  
  41f2c7:	out    0x8e,al
  41f2c9:	sbb    esp,eax
  41f2cb:	jecxz  0x41f2c6
  41f2cd:	sub    al,0xa6
  41f2cf:	and    bl,BYTE PTR [edx-0x548b8718]
  41f2d5:	adc    esp,DWORD PTR [eax]
  41f2d7:	xchg   ebp,eax
  41f2d8:	pop    edi
  41f2d9:	xchg   edi,eax
  41f2da:	mov    al,ds:0x7ad8eff5
  41f2df:	sub    cl,BYTE PTR [ebp+0x380e647e]
  41f2e5:	add    dl,BYTE PTR [ebx-0x57e398b2]
  41f2eb:	push   eax
  41f2ec:	dec    ebx
  41f2ed:	jge    0x41f287
  41f2ef:	mov    bl,0xdf
  41f2f1:	inc    ebx
  41f2f2:	mov    edx,0x7e63e29b
  41f2f7:	and    eax,0x25455535
  41f2fc:	xchg   esp,eax
  41f2fd:	outs   dx,BYTE PTR ds:[esi]
  41f2fe:	mov    esp,edx
  41f300:	cwde   
  41f301:	mov    eax,ds:0x8f188729
  41f306:	jle    0x41f35a
  41f308:	mov    eax,0xcbcb0cc8
  41f30d:	xchg   ecx,eax
  41f30e:	and    ch,al
  41f310:	out    0xab,eax
  41f312:	mov    esi,0xb4616643
  41f317:	js     0x41f353
  41f319:	xor    DWORD PTR [edi+ebx*2-0xb],ebx
  41f31d:	add    BYTE PTR [eax],al
  41f31f:	add    BYTE PTR [eax],al
  41f321:	add    BYTE PTR [ebx],ch
  41f323:	mov    eax,ds:0xf6cb1443
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	sub    BYTE PTR [ecx],0xea
  41f330:	in     eax,0x1
  41f332:	out    0x6d,al
  41f334:	add    DWORD PTR [eax],eax
  41f336:	repz add al,0x0
  41f339:	add    dl,dh
  41f33b:	sub    esp,edx
  41f33d:	rol    DWORD PTR [ecx-0x1b],0x52
  41f341:	and    al,0xb1
  41f343:	lods   al,BYTE PTR ds:[esi]
  41f344:	jp     0x41f3a1
  41f346:	adc    al,0x1f
  41f348:	xchg   esi,eax
  41f349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f34a:	lds    ebp,FWORD PTR [eax]
  41f34c:	lahf   
  41f34d:	mov    edx,0xedcb8868
  41f352:	add    cl,cl
  41f354:	mov    edx,0x4f3893c1
  41f359:	jb     0xd2700075
  41f35f:	xchg   ebp,eax
  41f360:	dec    ecx
  41f361:	push   ecx
  41f362:	jg     0x41f326
  41f364:	mov    ebx,DWORD PTR [eax+0x2150521b]
  41f36a:	add    ch,ah
  41f36c:	and    DWORD PTR ds:0x175e9279,edx
  41f372:	fisttp QWORD PTR [esi-0x71]
  41f375:	dec    ecx
  41f376:	sub    BYTE PTR ds:0xe19be9d5,al
  41f37c:	push   ecx
  41f37d:	adc    ebp,DWORD PTR [ecx+0x64]
  41f380:	mul    BYTE PTR [eax]
  41f382:	add    al,0xa9
  41f384:	ret    0x268f
  41f387:	popa   
  41f388:	(bad)  
  41f389:	xchg   esp,eax
  41f38a:	jl     0x41f31b
  41f38c:	xchg   ebp,eax
  41f38d:	leave  
  41f38e:	pushf  
  41f38f:	dec    ebx
  41f390:	retf   0x93bb
  41f393:	dec    esp
  41f394:	ins    BYTE PTR es:[edi],dx
  41f395:	add    DWORD PTR [ecx+0x383e0a62],0xf
  41f39c:	xor    edi,DWORD PTR [esp+ecx*8]
  41f39f:	sar    BYTE PTR [ebp+0x4ce59d55],0xcb
  41f3a6:	xor    al,0xdf
  41f3a8:	outs   dx,DWORD PTR ds:[esi]
  41f3a9:	int    0xa6
  41f3ab:	aam    0xbc
  41f3ad:	jmp    0xffd454e5
  41f3b2:	inc    ebx
  41f3b3:	test   eax,0xd64fd34b
  41f3b8:	jge    0x41f3bd
  41f3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3bb:	jns    0x41f3c0
  41f3bd:	outs   dx,BYTE PTR ds:[esi]
  41f3be:	cld    
  41f3bf:	(bad)
  41f3c2:	call   0x2b2e01d4
  41f3c7:	mov    ebx,0x257ef48e
  41f3cc:	repz in al,0xc9
  41f3cf:	mov    al,BYTE PTR [edx+0x8]
  41f3d2:	(bad)  
  41f3d3:	(bad)  
  41f3d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3d5:	xchg   BYTE PTR [eax+0x5cea017],al
  41f3db:	ss push esi
  41f3dd:	pop    ebp
  41f3de:	sub    DWORD PTR [edx+0x2],0x9c8d0742
  41f3e5:	je     0x41f43f
  41f3e7:	cmp    bh,BYTE PTR [edi]
  41f3e9:	int3   
  41f3ea:	pop    ds
  41f3eb:	adc    ecx,DWORD PTR [edi]
  41f3ed:	and    BYTE PTR [eax+0x2e],dh
  41f3f0:	sbb    BYTE PTR [ebx],bh
  41f3f2:	repnz cmp al,0xc8
  41f3f5:	mov    bl,0x64
  41f3f7:	std    
  41f3f8:	js     0x41f468
  41f3fa:	mov    ebx,0x792b7fb6
  41f3ff:	ret    0xb96e
  41f402:	es xchg dh,bh
  41f405:	(bad)  
  41f406:	dec    edi
  41f407:	ret    
  41f408:	mov    ebx,0xbaca0f42
  41f40d:	adc    ah,bl
  41f40f:	cwde   
  41f410:	inc    esi
  41f411:	or     al,0x2
  41f413:	pop    ss
  41f414:	das    
  41f415:	int3   
  41f416:	cmp    BYTE PTR [ecx+ebx*8+0x7a],ah
  41f41a:	inc    edx
  41f41b:	popa   
  41f41c:	arpl   WORD PTR [eax],bp
  41f41e:	inc    edi
  41f41f:	inc    esp
  41f420:	sbb    al,0x23
  41f422:	inc    ebx
  41f423:	mov    al,0x58
  41f425:	xchg   esi,eax
  41f426:	pop    ebx
  41f427:	jg     0x41f3c1
  41f429:	ins    BYTE PTR es:[edi],dx
  41f42a:	arpl   WORD PTR [eax+0xa],dx
  41f42d:	pop    eax
  41f42e:	mov    ebx,0x91be264c
  41f433:	xor    eax,0x82b84ac5
  41f438:	mov    eax,0x3738f2cd
  41f43d:	pop    ss
  41f43e:	jge    0x41f47f
  41f440:	sub    dh,BYTE PTR [esi-0x24]
  41f443:	shr    BYTE PTR [edi-0x20872b6],cl
  41f449:	out    0xc7,al
  41f44b:	data16 mov BYTE PTR es:[edi+ebp*8],bl
  41f450:	inc    eax
  41f451:	adc    DWORD PTR [ebp-0x61f3535d],0x58f562c7
  41f45b:	mov    dh,0xdd
  41f45d:	xchg   ebx,eax
  41f45e:	dec    eax
  41f45f:	sub    esi,DWORD PTR [ecx]
  41f461:	imul   edx,DWORD PTR [edx],0x19
  41f464:	cdq    
  41f465:	aaa    
  41f466:	into   
  41f467:	cmp    ebx,ecx
  41f469:	sub    BYTE PTR [esi],dl
  41f46b:	repz fadd QWORD PTR [eax+ecx*4-0x76662b85]
  41f473:	jge    0x41f476
  41f475:	test   al,0x46
  41f477:	push   0x6c32f9b3
  41f47c:	imul   BYTE PTR [esi+0x2]
  41f47f:	lahf   
  41f480:	jno    0x41f44b
  41f482:	mov    eax,ds:0x1361e762
  41f487:	adc    BYTE PTR ds:0x95e5bde4,dh
  41f48d:	pusha  
  41f48e:	inc    ebp
  41f48f:	idiv   BYTE PTR [esi-0x7d4ed23]
  41f495:	leave  
  41f496:	das    
  41f497:	xchg   edi,eax
  41f498:	pop    esi
  41f499:	je     0x41f49f
  41f49b:	in     al,dx
  41f49c:	mov    ebp,0xc670f06b
  41f4a1:	pop    edx
  41f4a2:	mov    al,0xbf
  41f4a4:	stos   BYTE PTR es:[edi],al
  41f4a5:	xchg   edx,eax
  41f4a6:	pop    edx
  41f4a7:	jmp    0x44b8:0x99d0f3f2
  41f4ae:	sbb    al,0x4b
  41f4b0:	sub    eax,DWORD PTR [ebp-0x14877ddd]
  41f4b6:	retf   0x109d
  41f4b9:	add    al,bl
  41f4bb:	ja     0x41f4e1
  41f4bd:	aad    0xfd
  41f4bf:	imul   ecx,DWORD PTR [ebx-0x1c],0xe7089cb9
  41f4c6:	add    eax,DWORD PTR [esi]
  41f4c8:	xchg   DWORD PTR [edx-0x79e41863],ebp
  41f4ce:	nop
  41f4cf:	push   ds
  41f4d0:	jnp    0x41f464
  41f4d2:	(bad)  
  41f4d3:	cmp    al,0x50
  41f4d5:	cmp    edi,ecx
  41f4d7:	mov    bh,0xf0
  41f4d9:	int3   
  41f4da:	scas   al,BYTE PTR es:[edi]
  41f4db:	in     al,0xd4
  41f4dd:	inc    esi
  41f4de:	pop    esp
  41f4df:	in     al,dx
  41f4e0:	or     al,0x14
  41f4e2:	in     al,dx
  41f4e3:	out    0x69,al
  41f4e5:	sbb    eax,0x9cee67b5
  41f4ea:	pusha  
  41f4eb:	fdivr  QWORD PTR [esi+0x6]
  41f4ee:	jmp    FWORD PTR [ecx]
  41f4f0:	sub    ch,BYTE PTR [edi]
  41f4f2:	aad    0xf8
  41f4f4:	or     BYTE PTR [esi+0x67],al
  41f4f7:	lea    eax,[edi+esi*8-0x46fee69b]
  41f4fe:	aaa    
  41f4ff:	or     BYTE PTR [esi],bl
  41f501:	adc    esi,DWORD PTR [ebp-0x79]
  41f504:	popf   
  41f505:	xlat   BYTE PTR ds:[ebx]
  41f506:	sub    eax,edx
  41f508:	iret   
  41f509:	inc    edx
  41f50a:	fnop   
  41f50c:	and    ebx,DWORD PTR [edi-0x1a]
  41f50f:	cmp    al,dl
  41f511:	lods   al,BYTE PTR ds:[esi]
  41f512:	lds    edi,FWORD PTR [ecx+0x1eaba1df]
  41f518:	sbb    esp,DWORD PTR [edi-0x7c]
  41f51b:	mov    esp,0x4b0a7fd5
  41f520:	adc    DWORD PTR [edi],esi
  41f522:	mov    ss,WORD PTR [ecx]
  41f524:	imul   ecx,DWORD PTR [ecx],0x34a3a1e8
  41f52a:	sub    edx,DWORD PTR [ebx-0x40]
  41f52d:	and    bl,al
  41f52f:	popf   
  41f530:	(bad)
  41f534:	mov    ecx,0xce29c35d
  41f539:	mov    ch,0xad
  41f53b:	add    BYTE PTR [ecx-0x69670d3c],0x72
  41f542:	int    0xa6
  41f544:	inc    esp
  41f545:	cmp    ch,al
  41f547:	in     al,dx
  41f548:	mov    ebp,0x3d8f3b92
  41f54d:	push   esi
  41f54e:	nop
  41f54f:	adc    cl,dh
  41f551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f552:	retf   
  41f553:	mov    eax,0xa109a6fc
  41f558:	inc    ebx
  41f559:	mov    ebp,0xa46e5206
  41f55e:	(bad)  
  41f560:	adc    eax,0xed00fd67
  41f565:	scas   eax,DWORD PTR es:[edi]
  41f566:	push   eax
  41f567:	dec    edi
  41f568:	test   DWORD PTR [ecx],ebp
  41f56a:	mov    WORD PTR [eax+0x35],fs
  41f56d:	pop    ebp
  41f56e:	sbb    BYTE PTR [esi-0x230d11a8],ah
  41f574:	test   BYTE PTR [edi],ah
  41f576:	fcom   QWORD PTR [edx-0x1cbc86b8]
  41f57c:	(bad)  
  41f57d:	(bad)  [esi-0x72]
  41f580:	xor    bh,0x8
  41f583:	outs   dx,DWORD PTR ds:[esi]
  41f584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f585:	sbb    dh,BYTE PTR [eax+0x4921ad55]
  41f58b:	clc    
  41f58c:	lods   eax,DWORD PTR ds:[esi]
  41f58d:	imul   eax,DWORD PTR [edx+0x62],0xffffff93
  41f591:	lods   al,BYTE PTR ds:[esi]
  41f592:	jl     0x41f603
  41f594:	outs   dx,DWORD PTR ds:[esi]
  41f595:	adc    BYTE PTR [ecx],ah
  41f597:	pop    esi
  41f598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f599:	jae    0x41f57b
  41f59b:	jmp    0x360f:0x81804260
  41f5a2:	popa   
  41f5a3:	dec    BYTE PTR [ebp-0xf234489]
  41f5a9:	inc    esi
  41f5aa:	mov    edx,0xb8f85a6b
  41f5af:	sbb    ecx,esp
  41f5b1:	mov    al,0x92
  41f5b3:	and    eax,0xe4db73ee
  41f5b8:	mov    cl,0x36
  41f5ba:	adc    DWORD PTR [esi],eax
  41f5bc:	ins    BYTE PTR es:[edi],dx
  41f5bd:	in     eax,0xdf
  41f5bf:	pop    esp
  41f5c0:	retf   
  41f5c1:	hlt    
  41f5c2:	aad    0xd0
  41f5c4:	arpl   WORD PTR [edx-0x36],ax
  41f5c7:	mov    al,ds:0xa5722f8f
  41f5cc:	stos   BYTE PTR es:[edi],al
  41f5cd:	adc    dl,BYTE PTR [esi]
  41f5cf:	pop    es
  41f5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5d1:	cmp    ecx,DWORD PTR [eax]
  41f5d3:	dec    eax
  41f5d4:	arpl   WORD PTR [ebx-0x5c],bx
  41f5d7:	inc    eax
  41f5d8:	fcomp  QWORD PTR [edi-0x49]
  41f5db:	fdiv   QWORD PTR [edi]
  41f5dd:	dec    esi
  41f5de:	xor    bl,dh
  41f5e0:	adc    edi,DWORD PTR [ebx+edx*4]
  41f5e3:	ret    
  41f5e4:	and    edi,0x48
  41f5e7:	inc    esi
  41f5e8:	ret    
  41f5e9:	test   DWORD PTR fs:[ebx],eax
  41f5ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5ed:	jb     0x41f629
  41f5ef:	shl    BYTE PTR [edi+0x330dee45],0x3e
  41f5f6:	(bad)  
  41f5f7:	scas   eax,DWORD PTR es:[edi]
  41f5f8:	int3   
  41f5f9:	clc    
  41f5fa:	and    eax,0x77aef52a
  41f5ff:	or     al,0x4e
  41f601:	lods   al,BYTE PTR ds:[esi]
  41f602:	xor    al,dl
  41f604:	pop    es
  41f605:	lahf   
  41f606:	xor    bl,dh
  41f608:	sub    eax,DWORD PTR [edx]
  41f60a:	int    0x21
  41f60c:	lahf   
  41f60d:	lds    esp,FWORD PTR [esi-0x58]
  41f610:	ins    BYTE PTR es:[edi],dx
  41f611:	lods   al,BYTE PTR ds:[esi]
  41f612:	lea    ebx,[ebx+0x7bf0b5f5]
  41f618:	adc    DWORD PTR [esi+0x4a],esi
  41f61b:	fcmovu st,st(6)
  41f61d:	xchg   edx,eax
  41f61e:	sbb    esp,ebp
  41f620:	popa   
  41f621:	jbe    0x41f5f3
  41f623:	add    bh,BYTE PTR [edi-0x1b]
  41f626:	pop    esp
  41f627:	in     al,0x26
  41f629:	mov    ds:0xf30c0508,al
  41f62e:	lods   eax,DWORD PTR ds:[esi]
  41f62f:	or     eax,0xc958161b
  41f634:	cmp    eax,0xf1b4feb9
  41f639:	mov    esp,0x25f3c924
  41f63e:	in     al,0x78
  41f640:	(bad)  
  41f641:	fisub  DWORD PTR [ecx-0x3015f34b]
  41f647:	enter  0xa146,0xde
  41f64b:	cmp    al,0x35
  41f64d:	jb     0x41f633
  41f64f:	fimul  WORD PTR [ebp-0x49]
  41f652:	sbb    eax,0xf4169ad2
  41f657:	loope  0x41f627
  41f659:	shl    BYTE PTR [ebx-0x30],1
  41f65c:	sbb    eax,0x8c4622f5
  41f661:	cmc    
  41f662:	mov    dh,0xba
  41f664:	cdq    
  41f665:	pop    ss
  41f666:	sub    BYTE PTR [edx],0xc
  41f669:	or     BYTE PTR gs:[ecx+0x1d3f20c2],dh
  41f670:	sbb    BYTE PTR [eax+0x38],dh
  41f673:	adc    BYTE PTR ds:0xb0b5ee96,bl
  41f679:	jp     0x41f673
  41f67b:	inc    eax
  41f67c:	lods   eax,DWORD PTR ds:[esi]
  41f67d:	cmp    al,0xfa
  41f67f:	popa   
  41f680:	xchg   ebp,eax
  41f681:	aaa    
  41f682:	pop    edi
  41f683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f684:	sbb    DWORD PTR [ecx+0x37da530c],ecx
  41f68a:	push   eax
  41f68b:	mov    dl,0xf3
  41f68d:	cs or  eax,0xec1903e8
  41f693:	xchg   ebx,eax
  41f694:	and    al,0x1a
  41f696:	repnz or BYTE PTR [eax],bl
  41f699:	inc    eax
  41f69a:	aam    0xfd
  41f69c:	(bad)  
  41f69d:	sbb    ebp,edx
  41f69f:	jae    0x41f630
  41f6a1:	push   0x45472a53
  41f6a6:	loope  0x41f688
  41f6a8:	push   eax
  41f6a9:	(bad)  
  41f6aa:	clc    
  41f6ab:	out    dx,eax
  41f6ac:	xor    esp,DWORD PTR [edx-0x1f32bf7c]
  41f6b2:	cmp    ch,ch
  41f6b4:	inc    ecx
  41f6b5:	push   es
  41f6b6:	push   0x78
  41f6b8:	(bad)  
  41f6b9:	dec    ebp
  41f6ba:	dec    ebx
  41f6bb:	sbb    esi,DWORD PTR [ebx-0x45]
  41f6be:	lods   eax,DWORD PTR ds:[esi]
  41f6bf:	or     al,0xd1
  41f6c1:	jge    0x41f6b8
  41f6c3:	push   ss
  41f6c4:	fild   QWORD PTR [ecx-0x9]
  41f6c7:	daa    
  41f6c8:	push   ds
  41f6c9:	xchg   ebp,eax
  41f6ca:	adc    eax,0xb92d3523
  41f6cf:	(bad)  
  41f6d0:	neg    BYTE PTR [ebx+0x7c]
  41f6d3:	outs   dx,BYTE PTR ds:[esi]
  41f6d4:	inc    ebp
  41f6d5:	lahf   
  41f6d6:	in     al,dx
  41f6d7:	mov    ecx,0xad4ea2e5
  41f6dc:	data16 jno 0x41f713
  41f6df:	or     al,0x56
  41f6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6e2:	repnz pop edx
  41f6e4:	cli    
  41f6e5:	mov    al,0x10
  41f6e7:	leave  
  41f6e8:	and    BYTE PTR [edx-0x624f5e0c],al
  41f6ee:	lahf   
  41f6ef:	adc    al,0x7d
  41f6f1:	sbb    ebp,0x6f20e495
  41f6f7:	stc    
  41f6f8:	dec    ebp
  41f6f9:	xchg   esi,eax
  41f6fa:	push   0xf
  41f6fc:	mul    BYTE PTR [eax]
  41f6fe:	iret   
  41f6ff:	mov    ch,0x88
  41f701:	sti    
  41f702:	add    BYTE PTR [edx-0x4e],cl
  41f705:	lea    ecx,[edi+0x4b8c7c4a]
  41f70b:	push   0x51e2394
  41f710:	iret   
  41f711:	and    ch,BYTE PTR [edx+eiz*2]
  41f714:	nop
  41f715:	repnz xchg edi,eax
  41f717:	aam    0xb8
  41f719:	jmp    0x44aa:0xa8397616
  41f720:	mov    ebp,0x100970b3
  41f725:	mov    ah,0xe1
  41f727:	call   0xae2865ee
  41f72c:	xchg   ebp,eax
  41f72d:	add    eax,0xa822927f
  41f732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f733:	dec    esi
  41f734:	daa    
  41f735:	pushf  
  41f736:	rol    DWORD PTR [eax+ebp*4],0xd1
  41f73a:	inc    ecx
  41f73b:	jae    0x41f6d6
  41f73d:	xchg   ecx,eax
  41f73e:	sbb    eax,0xe6898ca4
  41f743:	das    
  41f744:	adc    al,bl
  41f746:	loope  0x41f6d3
  41f748:	arpl   WORD PTR [edx+0x46a437aa],di
  41f74e:	xlat   BYTE PTR ds:[ebx]
  41f74f:	ds mov ecx,0x911dbed9
  41f755:	neg    DWORD PTR [esi+ebx*4+0x58]
  41f759:	imul   esi,DWORD PTR [edx],0x99d00de4
  41f75f:	push   ds
  41f760:	jmp    0x41f737
  41f762:	or     BYTE PTR [eax-0x127b4b6],ah
  41f768:	push   edi
  41f769:	inc    edx
  41f76b:	imul   edi,esi,0xffffffc1
  41f76e:	xor    BYTE PTR [ebx+0x47c29a5d],cl
  41f774:	mov    cl,0x24
  41f776:	cld    
  41f777:	lods   eax,DWORD PTR ds:[esi]
  41f778:	mov    eax,ds:0x83b8be81
  41f77d:	fdivr  QWORD PTR [eax]
  41f77f:	sbb    cl,BYTE PTR [eax+0x51]
  41f782:	(bad)  
  41f783:	repz dec ecx
  41f785:	(bad)  
  41f786:	das    
  41f787:	leave  
  41f788:	pop    edi
  41f789:	pop    ebp
  41f78a:	int    0x2a
  41f78c:	adc    al,0x46
  41f78e:	xchg   DWORD PTR [ebx],eax
  41f790:	xchg   edx,eax
  41f791:	fs nop
  41f793:	(bad)
  41f797:	push   ebx
  41f798:	ficom  WORD PTR [eax]
  41f79a:	mov    esi,0x736df60c
  41f79f:	ins    BYTE PTR es:[edi],dx
  41f7a0:	imul   edx,esi,0x6434a38c
  41f7a6:	int    0xe4
  41f7a8:	jg     0x41f732
  41f7aa:	imul   esp,DWORD PTR [eax+0x14],0x6f8088a
  41f7b1:	fimul  WORD PTR [ebp-0x59b27f58]
  41f7b7:	add    al,BYTE PTR [ebp+ebp*4+0x6]
  41f7bb:	mov    esi,0xa88dbf94
  41f7c0:	repz je 0x41f833
  41f7c3:	imul   esi,edx,0x15d57fb4
  41f7c9:	adc    cl,BYTE PTR [ebp+0x10]
  41f7cc:	fisttp WORD PTR [eax]
  41f7ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7cf:	dec    ebx
  41f7d0:	mov    al,0xd7
  41f7d2:	add    ecx,DWORD PTR [esi-0x2d54eb58]
  41f7d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d9:	sbb    BYTE PTR [ecx],al
  41f7db:	adc    DWORD PTR [edx-0x17],ebp
  41f7de:	xchg   edx,eax
  41f7e0:	(bad)  
  41f7e1:	(bad)  
  41f7e2:	outs   dx,BYTE PTR ds:[esi]
  41f7e3:	loope  0x41f832
  41f7e5:	dec    esp
  41f7e6:	call   0xba1a0fee
  41f7eb:	ja     0x41f782
  41f7ed:	daa    
  41f7ee:	jp     0x41f7b1
  41f7f0:	or     eax,0x863091ce
  41f7f5:	cmp    BYTE PTR [edx-0x6621865c],0xca
  41f7fc:	out    0x63,eax
  41f7fe:	xchg   DWORD PTR [ecx],esp
  41f800:	lods   al,BYTE PTR ds:[esi]
  41f801:	add    cl,BYTE PTR [edx+0x11]
  41f804:	xchg   esp,eax
  41f805:	push   es
  41f806:	pop    ecx
  41f807:	dec    ebp
  41f808:	jo     0x41f86f
  41f80a:	push   ebx
  41f80b:	cmc    
  41f80c:	ret    0x3765
  41f80f:	dec    eax
  41f810:	outs   dx,DWORD PTR ds:[esi]
  41f811:	and    DWORD PTR [esi+0x71],0x16
  41f815:	sub    bh,BYTE PTR [esi]
  41f817:	clc    
  41f818:	clc    
  41f819:	mov    cs,WORD PTR [edx]
  41f81b:	(bad)  
  41f81c:	push   ebx
  41f81d:	mov    ds:0x7ad22bc2,eax
  41f822:	(bad)  
  41f824:	imul   edx,DWORD PTR [ebx+0x9e4db53],0x6f
  41f82b:	mov    cl,0x77
  41f82d:	add    BYTE PTR [eax],al
  41f82f:	add    BYTE PTR [eax],al
  41f831:	add    BYTE PTR [eax+0x64],cl
  41f834:	mul    BYTE PTR [eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	sub    eax,0xd91cbedb
  41f843:	jb     0x41f846
  41f845:	add    bl,dh
  41f847:	add    al,0x0
  41f849:	add    BYTE PTR [ebp+0x55],dh
  41f84c:	pop    es
  41f84d:	pop    ebp
  41f84f:	and    al,0x39
  41f851:	mov    bh,0xb6
  41f853:	sub    al,0xa3
  41f855:	out    dx,al
  41f856:	add    ah,BYTE PTR [eax+0x16a3d0b0]
  41f85c:	sbb    bl,BYTE PTR [ecx+0x67ba13f0]
  41f862:	pop    ecx
  41f863:	cmp    eax,0xf76b0754
  41f868:	pop    es
  41f869:	xlat   BYTE PTR ds:[ebx]
  41f86a:	loope  0x41f8c4
  41f86c:	xor    DWORD PTR [esi-0x1459e725],edx
  41f872:	cmp    BYTE PTR [esi+0x0],dh
  41f875:	push   cs
  41f876:	mov    cl,0xe7
  41f878:	mov    edx,0x16b37d3b
  41f87d:	mov    ecx,0x1ef50c92
  41f882:	dec    ebx
  41f883:	(bad)  
  41f884:	pop    eax
  41f885:	mov    ds,WORD PTR [edi]
  41f887:	add    edx,DWORD PTR [eax+0x3d3acd63]
  41f88d:	mov    bl,0xef
  41f88f:	xlat   BYTE PTR ds:[ebx]
  41f890:	push   cs
  41f891:	sub    eax,0x776966fd
  41f896:	jmp    0x41f8ae
  41f898:	xor    al,0x17
  41f89a:	add    al,0x59
  41f89c:	cs stc 
  41f89e:	xor    DWORD PTR [ecx],edi
  41f8a0:	mov    edi,0x5b23d49f
  41f8a5:	imul   BYTE PTR [edx+edx*4-0x3e]
  41f8a9:	mov    eax,0x872be030
  41f8ae:	(bad)  
  41f8af:	jge    0x41f83a
  41f8b1:	mov    edi,0x64017803
  41f8b6:	pop    ecx
  41f8b7:	mov    BYTE PTR [ebp+0x5c],cl
  41f8ba:	js     0x41f8c0
  41f8bc:	popf   
  41f8bd:	or     ebx,DWORD PTR ds:0xffe93317
  41f8c3:	jne    0x41f8ef
  41f8c5:	jb     0x41f8ba
  41f8c7:	stos   DWORD PTR es:[edi],eax
  41f8c8:	mov    BYTE PTR [ebx-0x2a805c4c],0x23
  41f8cf:	inc    edx
  41f8d0:	inc    edi
  41f8d1:	mov    WORD PTR [ebp-0x6239be89],ds
  41f8d7:	repnz mov edx,0x40cc5ec8
  41f8dd:	(bad)  
  41f8de:	loopne 0x41f8b7
  41f8e0:	cmp    ah,BYTE PTR [ebp-0x39]
  41f8e3:	retf   
  41f8e4:	nop
  41f8e5:	jmp    0x41f941
  41f8e7:	lds    edi,FWORD PTR [ebp+0x41871603]
  41f8ed:	dec    edx
  41f8ee:	adc    al,0xd
  41f8f0:	mov    ds:0xae235508,eax
  41f8f5:	sbb    eax,0xf910d5fe
  41f8fa:	cmp    esi,DWORD PTR [eax-0x4e]
  41f8fd:	(bad)  
  41f8fe:	mov    esp,0x405fffd6
  41f903:	sahf   
  41f904:	and    eax,0xe8351743
  41f909:	(bad)  
  41f90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f90d:	sub    al,0xfa
  41f90f:	(bad)  
  41f910:	jle    0x41f962
  41f912:	repz (bad) 
  41f914:	jecxz  0x41f95e
  41f916:	loop   0x41f8f9
  41f918:	push   cs
  41f919:	mov    edi,0x2cfc1d4b
  41f91e:	out    dx,al
  41f91f:	sbb    bl,BYTE PTR [ebx]
  41f921:	or     cl,BYTE PTR [ecx+0x2]
  41f924:	xchg   esp,eax
  41f925:	adc    DWORD PTR [eax],0x1f
  41f928:	push   cs
  41f929:	int3   
  41f92a:	push   esp
  41f92b:	dec    esi
  41f92c:	inc    edi
  41f92d:	add    dl,BYTE PTR ss:[eax-0x614ecb08]
  41f934:	sti    
  41f935:	jbe    0x41f901
  41f937:	(bad)  
  41f938:	lock pop ebp
  41f93a:	(bad)  
  41f93b:	stc    
  41f93c:	pop    ds
  41f93d:	sbb    al,0x76
  41f93f:	xchg   BYTE PTR [bp+si],cl
  41f942:	xchg   edi,eax
  41f943:	jo     0x41f8f4
  41f945:	mov    al,0x6e
  41f947:	fcomi  st,st(4)
  41f949:	imul   esi,DWORD PTR [edi+0x525ddffb],0x63f6553a
  41f953:	sub    al,0xf9
  41f955:	int3   
  41f956:	push   ds
  41f957:	dec    esp
  41f958:	mov    al,0xda
  41f95a:	aam    0x19
  41f95c:	or     edx,DWORD PTR [ebp-0x2b]
  41f95f:	out    dx,eax
  41f960:	outs   dx,DWORD PTR ds:[esi]
  41f961:	(bad)  
  41f962:	call   0x7a6e:0xdfef126a
  41f969:	push   ecx
  41f96a:	shr    BYTE PTR [edx],0x11
  41f96d:	dec    ebp
  41f96e:	imul   ebp,ebx,0xffffffc2
  41f971:	xchg   ebx,eax
  41f972:	sti    
  41f973:	inc    eax
  41f974:	mov    ch,0x8d
  41f976:	push   esp
  41f977:	loope  0x41f999
  41f979:	dec    edi
  41f97a:	outs   dx,BYTE PTR ds:[esi]
  41f97b:	inc    esi
  41f97c:	popf   
  41f97d:	dec    edx
  41f97e:	test   eax,0xb58921c1
  41f983:	cld    
  41f984:	xchg   ecx,eax
  41f985:	stos   BYTE PTR es:[edi],al
  41f986:	imul   ebp,DWORD PTR cs:[ecx],0x76991461
  41f98d:	outs   dx,BYTE PTR ds:[esi]
  41f98e:	je     0x41f960
  41f990:	push   ds
  41f991:	scas   al,BYTE PTR es:[edi]
  41f992:	int    0x7f
  41f994:	pop    esi
  41f995:	mov    BYTE PTR [esi-0x32],dh
  41f998:	js     0x41f967
  41f99a:	xor    eax,0xa6ac1b99
  41f99f:	mov    al,0x93
  41f9a1:	pop    ebp
  41f9a2:	push   esp
  41f9a3:	jg     0x41f9de
  41f9a5:	cmp    bh,BYTE PTR [ebx+0x62]
  41f9a8:	jecxz  0x41f9d8
  41f9aa:	cwde   
  41f9ab:	cwde   
  41f9ac:	pop    edx
  41f9ad:	fs repz pushf 
  41f9b0:	test   eax,0x7a8862e
  41f9b5:	jmp    0xe80e:0xfcbffa8d
  41f9bc:	lods   al,BYTE PTR ds:[esi]
  41f9bd:	imul   esp,ecx,0x3d
  41f9c0:	pop    es
  41f9c1:	xchg   ebp,eax
  41f9c2:	es gs jo 0x41f957
  41f9c6:	test   BYTE PTR [ebp+0x76],bh
  41f9c9:	cmp    DWORD PTR [edx],eax
  41f9cb:	xchg   esi,eax
  41f9cc:	pop    edi
  41f9cd:	out    dx,al
  41f9ce:	loop   0x41f9be
  41f9d0:	mov    esp,0xbe8602ab
  41f9d5:	adc    eax,0x9ef0d507
  41f9da:	jmp    0xec94d34e
  41f9df:	sub    DWORD PTR [edi],ebx
  41f9e1:	and    ebp,DWORD PTR [ecx+0x47]
  41f9e4:	cmc    
  41f9e5:	stos   BYTE PTR es:[edi],al
  41f9e6:	mov    ds:0xb81be641,eax
  41f9eb:	sar    DWORD PTR [esi+0x36ac57ef],0xe2
  41f9f2:	(bad)  
  41f9f3:	or     BYTE PTR [ebx-0x26],bl
  41f9f6:	mov    al,ds:0x617d1b7b
  41f9fb:	test   al,0x69
  41f9fd:	dec    esp
  41f9fe:	push   ds
  41f9ff:	adc    BYTE PTR [esi-0x8bc930],dh
  41fa05:	mov    ebp,0xb7ccdc78
  41fa0a:	pop    ss
  41fa0b:	cmp    al,0xf8
  41fa0d:	mov    ah,0x6a
  41fa0f:	or     BYTE PTR [edi],dh
  41fa11:	lods   eax,DWORD PTR ds:[esi]
  41fa12:	pop    ebp
  41fa13:	fistp  QWORD PTR [ebp-0x10180ce5]
  41fa19:	jmp    FWORD PTR [esi+ebp*1-0x3aeefc2]
  41fa20:	pop    ebx
  41fa21:	std    
  41fa22:	inc    edx
  41fa23:	loope  0x41f9c0
  41fa25:	cld    
  41fa26:	rcr    BYTE PTR ds:0x6ddc7967,1
  41fa2c:	mov    al,ds:0xd69fe1f5
  41fa31:	popa   
  41fa32:	sbb    DWORD PTR [edx+eax*4],eax
  41fa35:	lock shl cl,0x9c
  41fa39:	dec    ebp
  41fa3a:	jns    0x41fa84
  41fa3c:	push   ecx
  41fa3d:	popa   
  41fa3e:	ret    0x8607
  41fa41:	xchg   edi,eax
  41fa42:	int3   
  41fa43:	fs xor al,0x2e
  41fa46:	xor    eax,0xaacf2453
  41fa4b:	dec    edx
  41fa4c:	pushf  
  41fa4d:	xchg   BYTE PTR [ebx],bh
  41fa4f:	dec    ebx
  41fa50:	cld    
  41fa51:	cld    
  41fa52:	ficomp DWORD PTR [edx+0x1f257a69]
  41fa58:	jg     0x41fa72
  41fa5a:	pushf  
  41fa5b:	jbe    0x41fa79
  41fa5d:	clc    
  41fa5e:	cmp    bh,BYTE PTR [edi+0x465fdce0]
  41fa64:	dec    esp
  41fa65:	xchg   edx,eax
  41fa66:	dec    esi
  41fa67:	ds jae 0x41faad
  41fa6a:	and    BYTE PTR [ebx+0x4e3c8dbf],dl
  41fa70:	sbb    DWORD PTR [ebx-0x80],ecx
  41fa73:	in     eax,0x31
  41fa75:	jne    0x41fa0b
  41fa77:	xchg   esi,eax
  41fa78:	popa   
  41fa79:	daa    
  41fa7a:	fcom   DWORD PTR [ebx-0x65]
  41fa7d:	cld    
  41fa7e:	data16 arpl cx,dx
  41fa81:	mov    eax,0xb074ffba
  41fa86:	mov    ecx,DWORD PTR [eax+ecx*2+0x5030f6f3]
  41fa8d:	push   0x15ae5814
  41fa92:	shl    al,1
  41fa94:	pop    es
  41fa95:	call   0xcd1f:0x85395513
  41fa9c:	xor    eax,0xf0724af2
  41faa1:	push   es
  41faa2:	or     al,0x6f
  41faa4:	vpsrad xmm5,xmm7,xmm5
  41faa8:	cs jl  0x41faf6
  41faab:	jmp    0x4edef2db
  41fab0:	sbb    BYTE PTR [eax],bh
  41fab2:	aas    
  41fab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fab4:	add    ebp,DWORD PTR [esi]
  41fab6:	xchg   DWORD PTR [ecx],ebx
  41fab8:	loop   0x41fb35
  41faba:	out    0xaa,al
  41fabc:	dec    esp
  41fabd:	aaa    
  41fabe:	aam    0xff
  41fac0:	mov    esp,0x8c25baf1
  41fac5:	ins    BYTE PTR es:[edi],dx
  41fac6:	xor    dl,bl
  41fac8:	xchg   esp,eax
  41fac9:	mov    ds:0xb4b1916f,eax
  41face:	test   cx,0xc130
  41fad3:	addr16 popa 
  41fad5:	inc    esi
  41fad6:	pop    ecx
  41fad7:	jb     0x41facf
  41fad9:	mov    edx,0xf2d94c4c
  41fade:	cmp    cl,dl
  41fae0:	xchg   BYTE PTR [ecx],ch
  41fae2:	dec    esi
  41fae3:	je     0x41fa67
  41fae5:	pop    ecx
  41fae6:	add    eax,0x98d16270
  41faeb:	jg     0x41fae2
  41faed:	data16 out 0x12,al
  41faf0:	dec    ebp
  41faf1:	inc    ecx
  41faf2:	out    0xc1,al
  41faf4:	sub    ebx,ebx
  41faf6:	lahf   
  41faf7:	pop    esp
  41faf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faf9:	cmp    BYTE PTR [ecx],0x94
  41fafc:	mov    esi,0x5d293d0a
  41fb01:	jp     0x41fb0b
  41fb03:	push   0x66
  41fb05:	repnz gs mov esi,0xc800cd61
  41fb0c:	in     eax,0x24
  41fb0e:	jmp    0x4fe6:0xf283e049
  41fb15:	cmp    bh,BYTE PTR [ebx]
  41fb17:	push   ebp
  41fb18:	dec    eax
  41fb19:	xchg   edi,eax
  41fb1a:	and    al,0x9a
  41fb1c:	rcr    dh,cl
  41fb1e:	cdq    
  41fb1f:	jge    0x41fb55
  41fb21:	rcr    cl,0xc8
  41fb24:	pop    ebp
  41fb25:	push   edi
  41fb26:	and    bh,BYTE PTR [ebx-0x5b5d44d0]
  41fb2c:	data16 xor al,BYTE PTR [ebx-0x4]
  41fb30:	outs   dx,DWORD PTR ds:[esi]
  41fb31:	cmp    eax,0x4a136998
  41fb36:	mov    db4,esi
  41fb39:	dec    ebx
  41fb3a:	imul   edx,DWORD PTR [ebx],0x7825ff86
  41fb40:	sub    ch,BYTE PTR [edx+0x7c]
  41fb43:	sti    
  41fb44:	xchg   esi,eax
  41fb45:	dec    eax
  41fb46:	and    eax,edx
  41fb48:	stc    
  41fb49:	(bad)  
  41fb4a:	jl     0x41fb12
  41fb4c:	dec    edx
  41fb4d:	add    esp,DWORD PTR [edx]
  41fb4f:	je     0x41faff
  41fb51:	mov    ?,WORD PTR [esp+edi*2-0x5462ce8c]
  41fb58:	dec    edx
  41fb59:	ror    edx,cl
  41fb5b:	call   0x4ec1:0x5c420900
  41fb62:	jno    0x41fb97
  41fb64:	gs mov esp,0xf1c4d089
  41fb6a:	js     0x41fb7c
  41fb6c:	dec    esp
  41fb6d:	ins    BYTE PTR es:[edi],dx
  41fb6e:	xor    ah,dh
  41fb70:	shl    DWORD PTR [ecx-0xca8057a],cl
  41fb76:	mov    ds:0x31e9cb85,eax
  41fb7b:	push   0x5378f2c7
  41fb80:	mov    ebx,0xdd117e9d
  41fb85:	pop    edi
  41fb86:	push   0x97235248
  41fb8b:	jmp    0x41fc02
  41fb8d:	cmp    al,0x53
  41fb8f:	push   cs
  41fb90:	or     al,0x3d
  41fb92:	shr    DWORD PTR [edx+0x367d4e3e],cl
  41fb98:	adc    DWORD PTR [ebp-0x34],esp
  41fb9b:	popf   
  41fb9c:	fdiv   DWORD PTR [edx-0x46]
  41fb9f:	add    BYTE PTR [ecx+0x2027a425],ch
  41fba5:	in     eax,0x0
  41fba7:	xor    bl,BYTE PTR [edx+0x18f5eff0]
  41fbad:	add    ecx,DWORD PTR [edi+0x22f9a9fb]
  41fbb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbb4:	das    
  41fbb5:	xchg   esp,eax
  41fbb6:	popa   
  41fbb7:	lods   eax,DWORD PTR ds:[esi]
  41fbb8:	xor    ch,BYTE PTR [esi+0x49]
  41fbbb:	and    al,0x4c
  41fbbd:	adc    dh,0xab
  41fbc0:	mov    edx,es
  41fbc2:	xor    DWORD PTR [ebx-0x3389d2a1],esi
  41fbc8:	xor    al,0x99
  41fbca:	inc    edx
  41fbcb:	pop    ds
  41fbcc:	mov    al,0x1e
  41fbce:	sbb    BYTE PTR [ebp-0x1ba8bb14],cl
  41fbd4:	jge    0x41fb63
  41fbd6:	mov    ds:0x6caf7b47,al
  41fbdb:	mov    eax,0xfeff9d05
  41fbe0:	ins    DWORD PTR es:[edi],dx
  41fbe1:	fucom  st(0)
  41fbe3:	out    0x25,al
  41fbe5:	pop    DWORD PTR [esi+0x23]
  41fbe8:	outs   dx,DWORD PTR ds:[esi]
  41fbe9:	inc    edx
  41fbea:	jmp    0xf3f9f4bf
  41fbef:	sbb    DWORD PTR [edx+0x6a],esi
  41fbf2:	mov    WORD PTR [esp-0x2481d7c9],sp
  41fbfa:	adc    DWORD PTR ds:[edi+0x78],esp
  41fbfe:	leave  
  41fbff:	or     al,0x4
  41fc01:	push   ss
  41fc02:	add    edx,DWORD PTR [esi-0x277d94b6]
  41fc08:	fcmovnbe st,st(6)
  41fc0a:	stos   DWORD PTR es:[edi],eax
  41fc0b:	in     al,dx
  41fc0c:	sar    BYTE PTR [eax],1
  41fc0e:	xor    edi,DWORD PTR [eax+0x7ab037c1]
  41fc14:	pop    ss
  41fc15:	mov    edi,0x66b0af62
  41fc1a:	jno    0x41fc26
  41fc1c:	in     al,dx
  41fc1d:	mov    bh,0xa8
  41fc1f:	loope  0x41fbe0
  41fc21:	popa   
  41fc22:	stos   BYTE PTR es:[edi],al
  41fc23:	push   cs
  41fc24:	xor    esi,DWORD PTR [ebx-0xb]
  41fc27:	popa   
  41fc28:	add    eax,DWORD PTR [edx]
  41fc2a:	(bad)
  41fc2e:	call   0x809d1490
  41fc33:	or     ah,BYTE PTR [edi+0x49bbb1e6]
  41fc39:	mov    al,0xc4
  41fc3b:	ror    bh,cl
  41fc3d:	mul    DWORD PTR [edi-0x3632755d]
  41fc43:	mov    cl,0x70
  41fc45:	fistp  QWORD PTR [edi]
  41fc47:	adc    DWORD PTR [edi+0x68de5427],ebx
  41fc4d:	cmp    DWORD PTR [ebp+0x3515f544],ebp
  41fc53:	jecxz  0x41fcc6
  41fc55:	fld    QWORD PTR [edi]
  41fc57:	bound  edx,QWORD PTR [eax+0x51]
  41fc5a:	(bad)  
  41fc5c:	enter  0xfad7,0x9e
  41fc60:	fnstcw WORD PTR [ebx+0x3cc1e645]
  41fc66:	mov    ebx,0x59d325b
  41fc6b:	pop    eax
  41fc6c:	call   0x8eec:0xa127610f
  41fc73:	or     cl,BYTE PTR [edi+0x67]
  41fc76:	sbb    ch,BYTE PTR [edi+0x68]
  41fc79:	jg     0x41fc39
  41fc7b:	add    eax,0x20eb844f
  41fc80:	xor    esp,DWORD PTR [ecx-0x37acd9e7]
  41fc86:	fwait
  41fc87:	into   
  41fc88:	fldcw  WORD PTR [eax+0x42]
  41fc8b:	adc    DWORD PTR [edi+ebx*1+0x10],edi
  41fc8f:	or     ch,BYTE PTR [ecx+0x66215b84]
  41fc95:	mov    dh,0x9d
  41fc97:	ins    DWORD PTR es:[edi],dx
  41fc98:	sub    edi,eax
  41fc9a:	stos   BYTE PTR es:[edi],al
  41fc9b:	inc    ebp
  41fc9c:	lock (bad) 
  41fc9e:	xchg   esi,eax
  41fc9f:	pop    ebp
  41fca0:	pop    ss
  41fca1:	aaa    
  41fca2:	dec    esp
  41fca3:	cmp    ecx,0x5fee5ce8
  41fca9:	jmp    0x41fd13
  41fcab:	xor    al,al
  41fcad:	call   0xf353:0xd474d31b
  41fcb4:	loope  0x41fc77
  41fcb6:	jb     0x41fd04
  41fcb8:	gs jle 0x41fd05
  41fcbb:	sbb    BYTE PTR [eax],bh
  41fcbd:	adc    ch,BYTE PTR ds:0xc222e763
  41fcc3:	adc    BYTE PTR ds:0x81109f33,dh
  41fcc9:	jae    0x41fd38
  41fccb:	cmp    BYTE PTR [esp+edi*4],ch
  41fcce:	loop   0x41fcf9
  41fcd0:	retf   0x3a3b
  41fcd3:	gs ret 0xe876
  41fcd7:	call   0xf836:0x4c309026
  41fcde:	jne    0x41fd31
  41fce0:	ret    
  41fce1:	and    eax,0xaafd6440
  41fce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fce7:	inc    ebp
  41fce8:	mov    al,ds:0xc85e407
  41fced:	pop    edi
  41fcee:	push   esi
  41fcef:	jns    0x41fc9a
  41fcf1:	das    
  41fcf2:	jae    0x41fcf9
  41fcf4:	and    DWORD PTR [ecx+0x3b5af155],eax
  41fcfa:	mov    cl,0xb2
  41fcfc:	jb     0x41fce1
  41fcfe:	pop    ecx
  41fcff:	shr    BYTE PTR [esi-0x4ec9ed23],cl
  41fd05:	loop   0x41fd41
  41fd07:	xor    bl,BYTE PTR ds:0xd77e755d
  41fd0d:	sbb    al,0x9f
  41fd0f:	jne    0x41fcb5
  41fd11:	leave  
  41fd12:	mov    al,0x49
  41fd14:	out    dx,eax
  41fd15:	xor    BYTE PTR [ebx],ah
  41fd17:	cmp    edi,DWORD PTR ds:[esi]
  41fd1a:	push   eax
  41fd1b:	ficomp WORD PTR [eax]
  41fd1d:	(bad)  
  41fd1e:	(bad)  
  41fd20:	retf   0x85e0
  41fd23:	mov    eax,0xd62481a2
  41fd28:	imul   ebp,DWORD PTR [ecx+0x249c35cc],0x2a462bfe
  41fd32:	lds    edx,FWORD PTR [edi+0x6766965d]
  41fd38:	jb     0x41fd80
  41fd3a:	dec    ecx
  41fd3b:	pop    edx
  41fd3c:	ret    0x0
  41fd3f:	add    BYTE PTR [eax],al
  41fd41:	add    BYTE PTR [edx-0x48ec49e9],ah
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi-0x27e62b24],dh
  41fd51:	clc    
  41fd52:	int3   
  41fd53:	ja     0x41fd56
  41fd55:	add    bl,dh
  41fd57:	add    al,0x0
  41fd59:	add    BYTE PTR [eax+0x4f7bbaf9],ch
  41fd5f:	cwde   
  41fd60:	inc    edi
  41fd61:	fs mov bl,0x80
  41fd64:	aad    0x26
  41fd66:	test   ch,dh
  41fd68:	das    
  41fd69:	dec    esi
  41fd6a:	(bad)  
  41fd6b:	enter  0x5611,0x6a
  41fd6f:	adc    esi,DWORD PTR [edi+0x10]
  41fd72:	xor    ebx,DWORD PTR [eax+0x6b]
  41fd75:	fild   WORD PTR es:[esi+0x58e4180a]
  41fd7c:	cmp    ah,BYTE PTR [edx+ebp*8-0x4dbab67a]
  41fd83:	dec    edi
  41fd84:	ja     0x41fd36
  41fd86:	dec    edx
  41fd87:	xchg   edx,eax
  41fd88:	cs sub al,0xf9
  41fd8b:	js     0x41fde1
  41fd8d:	or     ax,0xc68a
  41fd91:	push   ebp
  41fd92:	add    al,BYTE PTR [edx+0x4d8e997a]
  41fd98:	imul   eax,esi,0xdf104ca8
  41fd9e:	faddp  st(2),st
  41fda0:	jmp    0xad28:0xe1b8b300
  41fda7:	lahf   
  41fda8:	adc    eax,0x2c98bb7f
  41fdad:	cdq    
  41fdae:	push   edx
  41fdaf:	sub    dx,WORD PTR [ebx+0x461c7edd]
  41fdb6:	outs   dx,DWORD PTR ds:[esi]
  41fdb7:	and    cl,cl
  41fdb9:	dec    ebx
  41fdba:	dec    esp
  41fdbb:	stc    
  41fdbc:	jmp    0x41fdda
  41fdbe:	add    eax,0xf05598aa
  41fdc3:	scas   eax,DWORD PTR es:[edi]
  41fdc4:	mov    edi,0xab981a47
  41fdc9:	pushf  
  41fdca:	pop    ecx
  41fdcb:	add    eax,eax
  41fdcd:	std    
  41fdce:	pushf  
  41fdcf:	sahf   
  41fdd0:	aas    
  41fdd1:	mov    ebp,0x13887364
  41fdd6:	jle    0x41fd67
  41fdd8:	ins    DWORD PTR es:[edi],dx
  41fdd9:	je     0x41fd94
  41fddb:	mov    bl,0x75
  41fddd:	hlt    
  41fdde:	pextrw edx,mm4,0x6f
  41fde2:	sbb    bh,BYTE PTR [edi]
  41fde4:	test   al,0x69
  41fde6:	xor    al,0xd8
  41fde8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fde9:	pop    es
  41fdea:	repz pop ds
  41fdec:	xor    al,0x14
  41fdee:	das    
  41fdef:	mov    dl,dl
  41fdf1:	jmp    0x41fe00
  41fdf3:	sbb    DWORD PTR [edx-0x38],ebx
  41fdf6:	dec    ebx
  41fdf7:	mov    edi,0x1ea17e27
  41fdfc:	bound  edx,QWORD PTR [edi]
  41fdfe:	scas   al,BYTE PTR es:[edi]
  41fdff:	enter  0x4262,0x2c
  41fe03:	xchg   ecx,eax
  41fe04:	or     BYTE PTR [ebp-0x9765093],dh
  41fe0a:	dec    edx
  41fe0b:	xor    BYTE PTR [eax],0x64
  41fe0e:	inc    esp
  41fe0f:	add    dh,BYTE PTR [esi-0x53]
  41fe12:	imul   ebx,DWORD PTR [eax+0x36c0f295],0x37
  41fe19:	dec    edi
  41fe1a:	cmp    eax,DWORD PTR [eax+ebp*8]
  41fe1d:	mov    ds:0xbcdf68d,al
  41fe22:	loopne 0x41fded
  41fe24:	pop    ebp
  41fe25:	in     eax,0x2f
  41fe27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe28:	jle    0x41fdae
  41fe2a:	cli    
  41fe2b:	in     al,0xf2
  41fe2d:	jne    0x41fdf4
  41fe2f:	adc    ecx,DWORD PTR [eax*8-0x4a1cf6bd]
  41fe36:	in     al,0xb4
  41fe38:	test   al,bl
  41fe3a:	mov    edx,0xd7014b55
  41fe3f:	addr16 test eax,0xa545ba9
  41fe45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe46:	enter  0xaf98,0x67
  41fe4a:	cli    
  41fe4b:	or     edi,edx
  41fe4d:	retf   
  41fe4e:	fwait
  41fe4f:	sub    DWORD PTR [edx-0xe],esi
  41fe52:	xor    dl,ah
  41fe54:	jae    0x41fe15
  41fe56:	and    eax,0x813dde53
  41fe5b:	mov    gs,WORD PTR [ebx]
  41fe5d:	xor    al,0xda
  41fe5f:	mov    ebx,0xde9481c7
  41fe64:	cmp    bl,bl
  41fe66:	sbb    DWORD PTR [esi+0x52da729a],esp
  41fe6c:	xchg   BYTE PTR [ecx-0x2f],ah
  41fe6f:	bound  esp,QWORD PTR [esi]
  41fe71:	xor    ah,BYTE PTR [edx+0x6b]
  41fe74:	dec    edx
  41fe75:	rcl    BYTE PTR [esi+0x318576a8],0xa3
  41fe7c:	in     eax,0xfa
  41fe7e:	sbb    esp,DWORD PTR [esi]
  41fe80:	xbegin 0x887f9ef0
  41fe86:	xchg   DWORD PTR [edi-0x6885ce5c],esi
  41fe8c:	xchg   edx,eax
  41fe8d:	mov    eax,ds:0x60c9bab7
  41fe92:	and    dl,ch
  41fe94:	add    esi,esi
  41fe96:	test   DWORD PTR [edx-0x6dae1d18],0xb9ff3b25
  41fea0:	jmp    0x41fead
  41fea2:	lds    ebp,FWORD PTR [edi]
  41fea4:	pop    es
  41fea5:	out    dx,eax
  41fea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fea7:	xor    ecx,DWORD PTR [eax+0x64]
  41feaa:	pop    ss
  41feab:	(bad)  
  41feac:	pop    edi
  41fead:	xchg   ecx,eax
  41feae:	fdivp  st(4),st
  41feb0:	addr16 int 0x97
  41feb3:	cmc    
  41feb4:	pop    ds
  41feb5:	xchg   edx,eax
  41feb6:	jno    0x41fece
  41feb8:	nop
  41feb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feba:	and    edx,DWORD PTR [ecx]
  41febc:	lea    eax,[edi-0x22]
  41febf:	aaa    
  41fec0:	frstor [edx]
  41fec2:	(bad)  
  41fec3:	jmp    0x41fefb
  41fec5:	data16 (bad) 
  41fec8:	adc    al,0x72
  41feca:	(bad)  
  41fecb:	dec    esp
  41fecc:	mov    ebp,0xf600dd85
  41fed1:	pop    esi
  41fed2:	test   eax,0xf0fca3d
  41fed7:	out    0xe4,eax
  41fed9:	dec    ebp
  41feda:	dec    DWORD PTR [edx+0x3]
  41fedd:	or     edx,DWORD PTR [eax+0x24]
  41fee0:	and    cl,BYTE PTR [edx+edx*2-0x64361a92]
  41fee7:	pop    ebx
  41fee8:	inc    esi
  41fee9:	(bad)  [esi+0x7e584a05]
  41feef:	dec    ecx
  41fef0:	and    cl,BYTE PTR [edx+0x4e299767]
  41fef6:	lods   al,BYTE PTR ds:[esi]
  41fef7:	call   0x1800622e
  41fefc:	pushf  
  41fefd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fefe:	cmp    dh,0xc9
  41ff01:	xor    eax,0xe2707e8b
  41ff06:	or     edi,eax
  41ff08:	scas   eax,DWORD PTR es:[edi]
  41ff09:	jae    0x41ff69
  41ff0b:	clc    
  41ff0c:	and    edi,DWORD PTR [eax]
  41ff0e:	mov    bl,0x9d
  41ff10:	sbb    esi,DWORD PTR [eax]
  41ff12:	and    BYTE PTR [edx],0x76
  41ff15:	retf   
  41ff16:	pop    esp
  41ff17:	stos   DWORD PTR es:[edi],eax
  41ff18:	add    esp,ebx
  41ff1a:	push   0x180f434
  41ff1f:	xor    eax,ebx
  41ff21:	jno    0x41ff1a
  41ff23:	jbe    0x41fee1
  41ff25:	and    cl,cl
  41ff27:	dec    esi
  41ff28:	pop    es
  41ff29:	gs popa 
  41ff2b:	sbb    BYTE PTR [eax],bh
  41ff2d:	cmc    
  41ff2e:	mov    bl,0xfb
  41ff30:	mov    bh,0xbe
  41ff32:	dec    ecx
  41ff33:	test   eax,0x30f4c14d
  41ff38:	rcr    BYTE PTR [edx-0x6f],0x8e
  41ff3c:	lods   eax,DWORD PTR ds:[esi]
  41ff3d:	cs dec ecx
  41ff3f:	fucomi st,st(0)
  41ff41:	pop    ebp
  41ff42:	jnp    0x41fecb
  41ff44:	popa   
  41ff45:	sar    DWORD PTR [edi],1
  41ff47:	jno    0x41ff9d
  41ff49:	jge    0x41ff1b
  41ff4b:	fst    QWORD PTR [ecx-0x21416677]
  41ff51:	sbb    ah,BYTE PTR [ebp+0x3952543]
  41ff57:	pop    edx
  41ff58:	stos   DWORD PTR es:[edi],eax
  41ff59:	mov    ch,0x82
  41ff5b:	and    DWORD PTR [edx-0x43],edx
  41ff5e:	std    
  41ff5f:	ror    BYTE PTR [edx+0x9371fc],cl
  41ff65:	scas   al,BYTE PTR es:[edi]
  41ff66:	sar    DWORD PTR [ebx],1
  41ff68:	sbb    al,0x98
  41ff6a:	fs ja  0x41ffbb
  41ff6d:	repz add BYTE PTR [edx],0x89
  41ff71:	in     al,dx
  41ff72:	fwait
  41ff73:	or     al,0x28
  41ff75:	shr    BYTE PTR [esi-0x1c],cl
  41ff78:	fbstp  TBYTE PTR [esi-0x6b50d9f4]
  41ff7e:	jmp    0x41ff3d
  41ff80:	gs (bad) 
  41ff82:	adc    DWORD PTR [edx+0x50],esi
  41ff85:	add    al,0x3f
  41ff87:	lea    esi,[ecx+0x60c4417f]
  41ff8d:	shl    cl,1
  41ff8f:	inc    esi
  41ff90:	mov    esi,0x9621162c
  41ff95:	cmp    BYTE PTR [ecx-0x185df340],bh
  41ff9b:	and    ch,BYTE PTR ds:0x35fb5022
  41ffa1:	add    al,0x90
  41ffa3:	or     DWORD PTR [ebp+0x1c],edx
  41ffa6:	push   ebx
  41ffa7:	fcomi  st,st(6)
  41ffa9:	xor    ecx,DWORD PTR ds:0x895dc018
  41ffaf:	mov    bh,0xb5
  41ffb1:	ins    BYTE PTR es:[edi],dx
  41ffb2:	mov    ecx,0xa90a2dd0
  41ffb7:	icebp  
  41ffb8:	mov    DWORD PTR [ebx],edi
  41ffba:	cmp    al,0xc7
  41ffbc:	jg     0x41ffc4
  41ffbe:	ror    al,0xf1
  41ffc1:	shr    BYTE PTR [edi+0x3c],0xa6
  41ffc5:	sub    ch,BYTE PTR [ecx+eiz*1-0x677b5669]
  41ffcc:	cwde   
  41ffcd:	xchg   DWORD PTR [ebx],esi
  41ffcf:	or     bh,BYTE PTR [ebx+0x2]
  41ffd2:	and    al,0xf6
  41ffd4:	ins    BYTE PTR es:[edi],dx
  41ffd5:	dec    esi
  41ffd6:	aas    
  41ffd7:	test   BYTE PTR [ecx+0x48bd25e7],al
  41ffdd:	push   0x26d33c9c
  41ffe2:	loopne 0x42002e
  41ffe4:	in     eax,0xb7
  41ffe6:	jae    0x41ffa2
  41ffe8:	or     al,0x56
  41ffea:	xchg   ebx,esp
  41ffec:	das    
  41ffed:	mov    esi,0x224e7b73
  41fff2:	and    al,0xb5
  41fff4:	(bad)  
  41fff5:	jle    0x41ff85
  41fff7:	repnz lock inc esp
  41fffa:	mov    edi,0x857a75d1
  41ffff:	repnz dec edi
  420001:	dec    ecx
  420002:	push   es
  420003:	mov    ch,0x2a
  420005:	sbb    DWORD PTR [ebx-0x16a8d3b4],ebp
  42000b:	xor    al,0x5f
  42000d:	pop    ebp
  42000e:	xlat   BYTE PTR ds:[ebx]
  42000f:	nop
  420010:	mov    edi,0x9d41b610
  420015:	ficom  WORD PTR [esi+0x7f5514db]
  42001b:	xchg   ebx,eax
  42001c:	mov    ds:0x2114d010,eax
  420021:	arpl   WORD PTR [esi-0x37],dx
  420024:	mov    WORD PTR [edx],gs
  420026:	add    eax,0xcbf05632
  42002b:	test   al,0xce
  42002d:	xchg   esp,eax
  42002e:	add    eax,esi
  420030:	mov    BYTE PTR [edx+0xd],bl
  420033:	xchg   DWORD PTR [ebx-0x28],ebp
  420036:	es pop ecx
  420038:	jg     0x420074
  42003a:	rcl    ebx,cl
  42003c:	mov    cl,BYTE PTR gs:[ebp-0x4a8f810f]
  420043:	daa    
  420044:	(bad)
  420049:	mov    bh,0xd3
  42004b:	mulps  xmm5,XMMWORD PTR [edi+0x4031ab4d]
  420052:	mov    edi,esp
  420054:	lock push edx
  420056:	sub    eax,0xb9c99357
  42005b:	pusha  
  42005c:	xchg   edi,eax
  42005d:	cmp    eax,0xfb9f2780
  420062:	rcr    BYTE PTR [eax+ebp*1+0x48],0xe6
  420067:	sahf   
  420068:	fisubr DWORD PTR [ecx]
  42006a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42006b:	mov    dl,0xb0
  42006d:	stos   BYTE PTR es:[edi],al
  42006e:	xchg   ecx,eax
  42006f:	inc    ecx
  420070:	or     al,0xeb
  420072:	cvtps2pi mm6,QWORD PTR [edx+eax*4-0x117b11b4]
  42007a:	dec    edx
  42007b:	daa    
  42007c:	gs nop
  42007e:	xor    edi,DWORD PTR [ecx-0x71]
  420081:	dec    edx
  420082:	clc    
  420083:	xlat   BYTE PTR ds:[ebx]
  420084:	jbe    0x42003f
  420086:	cmp    esp,esp
  420088:	dec    edx
  420089:	mov    ecx,ebx
  42008b:	call   DWORD PTR [edx+0x24]
  42008e:	jnp    0x420074
  420090:	inc    ebp
  420091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420092:	cmp    al,0xb2
  420094:	retf   
  420095:	adc    DWORD PTR [edi+0xd],esi
  420098:	xchg   edx,eax
  420099:	sub    esi,edx
  42009b:	inc    ebx
  42009c:	stc    
  42009d:	dec    esp
  42009e:	xchg   DWORD PTR [esi+0x6d],edx
  4200a1:	sbb    BYTE PTR [edx+0x6260a15],bl
  4200a7:	cmp    dh,BYTE PTR ds:0x7de8a68e
  4200ad:	push   ds
  4200ae:	and    DWORD PTR [edi-0x44],esp
  4200b1:	clc    
  4200b2:	ins    DWORD PTR es:[edi],dx
  4200b3:	dec    ecx
  4200b4:	lea    edi,[ecx+0x6e]
  4200b7:	jle    0x420090
  4200b9:	xchg   esi,eax
  4200ba:	push   ebp
  4200bb:	ins    BYTE PTR es:[edi],dx
  4200bc:	test   DWORD PTR [eax+0x17],0xa1248d72
  4200c3:	mov    ah,0xd1
  4200c5:	mov    ecx,DWORD PTR [edi-0x536a3c45]
  4200cb:	add    edi,DWORD PTR [edi]
  4200cd:	dec    esp
  4200ce:	scas   al,BYTE PTR es:[edi]
  4200cf:	sub    al,0x11
  4200d1:	test   eax,0x7f3ab51c
  4200d6:	adc    edi,DWORD PTR [ecx]
  4200d8:	cmp    eax,0xd25eb972
  4200dd:	add    BYTE PTR [ecx-0x35dbae34],cl
  4200e3:	in     eax,dx
  4200e4:	mov    esp,0xd9f84849
  4200e9:	aaa    
  4200ea:	mov    ecx,0x85dc80cf
  4200ef:	loop   0x420098
  4200f1:	sub    ch,BYTE PTR [edi-0x11]
  4200f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200f5:	add    eax,0x4772eacf
  4200fa:	sti    
  4200fb:	xor    al,0x11
  4200fd:	lods   eax,DWORD PTR ds:[esi]
  4200fe:	ja     0x42014b
  420100:	loop   0x4200f9
  420102:	in     eax,0xcc
  420104:	std    
  420105:	mov    dl,0xa
  420107:	adc    edi,DWORD PTR [eax+0x45]
  42010a:	inc    edi
  42010b:	aad    0xbe
  42010d:	push   esp
  42010e:	cdq    
  42010f:	ds push edi
  420111:	hlt    
  420112:	mov    al,ds:0xa636a60c
  420117:	dec    edx
  420118:	pop    edx
  420119:	mov    bh,0xe3
  42011b:	push   eax
  42011c:	loop   0x42013e
  42011e:	or     eax,0x63da3ba6
  420123:	cs xchg edi,eax
  420125:	dec    ebp
  420126:	std    
  420127:	dec    esi
  420128:	out    dx,al
  420129:	mov    ch,0x5e
  42012b:	sub    ch,bl
  42012d:	sbb    DWORD PTR [edi-0x15],0xa81c9d36
  420134:	jmp    0xf0e8ba48
  420139:	push   es
  42013a:	std    
  42013b:	sub    bl,BYTE PTR [esi+eax*4+0x4869d7e7]
  420142:	adc    ah,BYTE PTR [edx-0x5babb083]
  420148:	aas    
  420149:	push   ecx
  42014a:	pop    edx
  42014b:	adc    ecx,ebx
  42014d:	jecxz  0x42012d
  42014f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  420151:	xor    al,0x84
  420153:	in     al,0x30
  420155:	dec    eax
  420156:	sbb    eax,0xefe9c70c
  42015b:	and    dl,BYTE PTR [ebx-0x4afc0fba]
  420161:	(bad)  
  420162:	fcmovne st,st(0)
  420164:	aaa    
  420165:	stos   DWORD PTR es:[edi],eax
  420166:	js     0x420104
  420168:	cmp    cl,BYTE PTR [esi+eiz*8-0x4cd503f6]
  42016f:	test   eax,0x2080783
  420174:	jne    0x42016d
  420176:	sub    esp,DWORD PTR [edx+0x3c3e2680]
  42017c:	xor    al,0xaa
  42017e:	enter  0xb9c3,0xd8
  420182:	pop    esp
  420183:	(bad)  
  420184:	lods   al,BYTE PTR ds:[esi]
  420185:	jne    0x420139
  420187:	data16 mov ah,0x90
  42018a:	ror    BYTE PTR [ecx],0x48
  42018d:	jnp    0x4201bd
  42018f:	push   edx
  420190:	dec    edi
  420191:	push   ds
  420192:	(bad)
  420195:	mov    ch,0xfc
  420197:	or     DWORD PTR [edx],edx
  420199:	cli    
  42019a:	stos   DWORD PTR es:[edi],eax
  42019b:	pop    ebx
  42019c:	mov    ss,WORD PTR [ecx+ecx*2-0x34]
  4201a0:	mov    edx,0x3e98062
  4201a5:	arpl   WORD PTR [esi-0x1f275cf5],bp
  4201ab:	cmp    esp,edi
  4201ad:	gs mov ebx,0x5353bcde
  4201b3:	cmp    DWORD PTR [ebx+0x4c],ebx
  4201b6:	ins    BYTE PTR es:[edi],dx
  4201b7:	jmp    0x93e6:0xaa77203a
  4201be:	sbb    DWORD PTR [ecx],edx
  4201c0:	push   0xffffff98
  4201c2:	xor    dh,ch
  4201c4:	jnp    0x42018e
  4201c6:	into   
  4201c7:	jmp    0x4201cc
  4201c9:	add    BYTE PTR [esi+edx*4-0x2295557e],cl
  4201d0:	adc    ebx,DWORD PTR [edx-0x1a7fa3eb]
  4201d6:	add    DWORD PTR [ebp-0x5ac80b27],eax
  4201dc:	mov    ch,0x6d
  4201de:	push   es
  4201df:	out    0x44,al
  4201e1:	mov    ecx,0xb0d90b61
  4201e6:	fist   DWORD PTR ds:0x1bec1591
  4201ec:	mov    ds:0x39d24bfc,eax
  4201f1:	ins    BYTE PTR es:[edi],dx
  4201f2:	push   eax
  4201f3:	pavgb  mm0,QWORD PTR [ebp-0x2f11287]
  4201fa:	(bad)  
  4201fb:	jg     0x420242
  4201fd:	jno    0x420216
  4201ff:	ins    DWORD PTR es:[edi],dx
  420200:	lods   al,BYTE PTR ds:[esi]
  420201:	fbstp  TBYTE PTR ds:0xd519eaae
  420207:	std    
  420208:	fidivr DWORD PTR [ecx]
  42020a:	sbb    al,0x3f
  42020c:	pusha  
  42020d:	mov    ah,0xaa
  42020f:	std    
  420210:	nop
  420211:	dec    ecx
  420212:	fldenv [edi+edi*4]
  420215:	push   gs
  420217:	mov    ch,0x42
  420219:	xor    DWORD PTR [ebx],edx
  42021b:	(bad)
  42021e:	dec    ebx
  42021f:	sbb    BYTE PTR [esi-0x6d],al
  420222:	(bad)  
  420223:	sub    DWORD PTR [eax],esp
  420225:	rcr    BYTE PTR [ebx],1
  420227:	cdq    
  420228:	xchg   edx,eax
  420229:	sar    BYTE PTR [eax+edi*4+0x66bb214b],0x79
  420231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420232:	bnd jl 0x4201f7
  420235:	inc    ebp
  420236:	sbb    ah,BYTE PTR [eax-0x19]
  420239:	(bad)  
  42023a:	fistp  WORD PTR [ebx-0x32]
  42023d:	pop    ebx
  42023e:	dec    esi
  42023f:	in     al,0x2f
  420241:	mov    ch,BYTE PTR [edx]
  420243:	dec    eax
  420244:	cdq    
  420245:	inc    ecx
  420246:	jbe    0x4202be
  420248:	xchg   BYTE PTR [ecx-0x79],ah
  42024b:	retf   
  42024c:	jo     0x42024e
  42024e:	add    BYTE PTR [eax],al
  420250:	add    BYTE PTR [eax],al
  420252:	xchg   esi,eax
  420253:	test   BYTE PTR [ebp-0x2],al
  420256:	push   edi
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [ecx-0x20],bh
  420260:	adc    BYTE PTR [edx],al
  420262:	mov    edi,0xf300017c
  420267:	add    al,0x0
  420269:	add    al,bl
  42026b:	fidiv  WORD PTR [edi+0x52]
  42026e:	cs adc eax,0xdaac778c
  420274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420275:	stos   DWORD PTR es:[edi],eax
  420276:	mov    edi,0x47c40455
  42027b:	fisttp QWORD PTR [ebx]
  42027d:	sahf   
  42027e:	int3   
  42027f:	pop    esi
  420280:	xchg   esp,eax
  420281:	push   edx
  420282:	sahf   
  420283:	lea    ecx,[eax+ecx*2]
  420286:	add    edx,DWORD PTR [ecx]
  420288:	mov    ecx,0x40341649
  42028d:	(bad)  
  42028e:	retf   0xb618
  420291:	xchg   DWORD PTR [esi-0x73b0b7c1],ecx
  420297:	popa   
  420298:	dec    ecx
  420299:	popf   
  42029a:	jmp    0x420310
  42029c:	fidiv  WORD PTR [edi+0x7f9884b8]
  4202a2:	add    eax,0xa191e819
  4202a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202a8:	(bad)  
  4202a9:	push   esi
  4202aa:	xchg   BYTE PTR [edi],ch
  4202ac:	in     eax,dx
  4202ad:	push   esp
  4202ae:	jecxz  0x4202bd
  4202b0:	add    ecx,esp
  4202b2:	jmp    0x4202b8
  4202b4:	xor    bx,dx
  4202b7:	pusha  
  4202b8:	pop    ss
  4202b9:	js     0x4202da
  4202bb:	shl    ebp,0x4a
  4202be:	or     eax,0xf0e6de9e
  4202c3:	lea    edx,[ecx-0x39]
  4202c6:	sub    eax,0x2ad0fbef
  4202cb:	sbb    ebp,DWORD PTR [eax+0x39]
  4202ce:	out    dx,al
  4202cf:	jno    0x4202f4
  4202d1:	cwde   
  4202d2:	data16 jbe 0x420278
  4202d5:	sub    al,0xe1
  4202d7:	cs and al,0x98
  4202da:	sub    eax,0x87143dd9
  4202df:	(bad)  
  4202e0:	jge    0x4202f4
  4202e2:	(bad)  
  4202e3:	jne    0x420319
  4202e5:	mov    ah,0xa8
  4202e7:	retf   
  4202e8:	xchg   DWORD PTR [ebx-0x35],eax
  4202eb:	sub    esi,ecx
  4202ed:	xor    eax,0x5e9785a6
  4202f2:	jmp    0x643a1ae0
  4202f7:	loope  0x4202ec
  4202f9:	(bad)
  4202fd:	or     eax,0xd10a6acb
  420302:	dec    ebp
  420303:	jl     0x4202aa
  420305:	scas   eax,DWORD PTR es:[edi]
  420306:	add    edx,DWORD PTR [esi+0x76]
  420309:	rcl    DWORD PTR [eax+0x36ae8c7f],cl
  42030f:	cmp    eax,0x1afd6d36
  420314:	retf   0x667
  420317:	push   ecx
  420318:	sub    BYTE PTR [esi],cl
  42031a:	xor    ah,bl
  42031c:	add    al,0xdc
  42031e:	push   ds
  42031f:	leave  
  420320:	dec    ecx
  420321:	cli    
  420322:	dec    ebp
  420323:	(bad)  
  420324:	popf   
  420325:	adc    BYTE PTR [edx-0x3f],0xd6
  420329:	shl    BYTE PTR [ecx+0x56941fa3],0xf0
  420330:	mov    WORD PTR [ebx-0x2218f7b4],ss
  420336:	dec    ebp
  420337:	cmp    edx,DWORD PTR [ebx-0x4f5884f]
  42033d:	xchg   edi,eax
  42033e:	popf   
  42033f:	jge    0x42035b
  420341:	in     al,dx
  420342:	inc    esp
  420343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420344:	xchg   esi,eax
  420345:	aas    
  420346:	and    al,0x10
  420348:	and    DWORD PTR [edi-0xdac7f8a],0xe5acf8c6
  420352:	shr    BYTE PTR [ecx+0x6a],0x3
  420356:	repz scas eax,DWORD PTR es:[edi]
  420358:	and    eax,0x301cfae8
  42035d:	cwde   
  42035e:	adc    eax,edx
  420360:	adc    cl,BYTE PTR [ebx+0x4a]
  420363:	dec    edi
  420364:	mov    eax,DWORD PTR [ecx-0x44a1e20c]
  42036a:	adc    BYTE PTR [ebp-0x6e82e94e],0xca
  420371:	pop    esi
  420372:	std    
  420373:	add    esi,DWORD PTR [edx-0x3ff08d0e]
  420379:	xor    eax,0xcec0e8c1
  42037e:	aad    0x32
  420380:	pop    edx
  420381:	into   
  420382:	jmp    0xdb65305b
  420387:	pop    es
  420388:	int    0xcd
  42038a:	repnz test eax,0x4b7ebc91
  420390:	jae    0x42039c
  420392:	or     eax,0xc6fc3822
  420397:	pop    esi
  420398:	repnz mov edi,0x9bd0cb21
  42039e:	jns    0x4203ff
  4203a0:	or     DWORD PTR [edx-0x16638a44],0xfe84be2d
  4203aa:	mov    ds:0xd84d2948,eax
  4203af:	adc    al,0xac
  4203b1:	sbb    eax,0xe3e46e56
  4203b6:	xchg   ebp,eax
  4203b7:	pop    ebx
  4203b8:	pop    edx
  4203b9:	rol    DWORD PTR [edi+0x743475fa],1
  4203bf:	adc    esp,DWORD PTR [ecx+0x6b8e1cd1]
  4203c5:	pushf  
  4203c6:	sbb    BYTE PTR [esi-0x2bb0a633],dl
  4203cc:	lock mov ds,WORD PTR [ebx+0x51]
  4203d0:	add    edx,DWORD PTR [ebx+0xebd4d72]
  4203d6:	hlt    
  4203d7:	cld    
  4203d8:	dec    edi
  4203d9:	jl     0x4203b8
  4203db:	xchg   ecx,eax
  4203dc:	icebp  
  4203dd:	adc    ah,ah
  4203df:	adc    ebp,DWORD PTR [eax]
  4203e1:	pop    edx
  4203e2:	xchg   ebp,eax
  4203e3:	jl     0x42041e
  4203e5:	das    
  4203e6:	(bad)  
  4203e7:	je     0x4203b3
  4203e9:	rol    BYTE PTR [ecx+0x72d27ccf],0x7
  4203f0:	fsubr  DWORD PTR [esi-0x3c9bf9dc]
  4203f6:	bound  edx,QWORD PTR [ebp+0x2da76af8]
  4203fc:	mov    esi,0x81cd3071
  420401:	cmp    bh,dl
  420403:	and    BYTE PTR [edx],al
  420405:	jbe    0x420389
  420407:	and    BYTE PTR [edx],bh
  420409:	out    0x62,eax
  42040b:	xor    BYTE PTR [ebx],bl
  42040d:	xchg   ecx,eax
  42040e:	mov    eax,ds:0xa5584376
  420413:	aam    0xa1
  420415:	jmp    0xfe59:0xac69e009
  42041c:	je     0x42047a
  42041e:	mov    edx,edx
  420420:	sub    cl,ch
  420422:	add    ecx,ebx
  420424:	popa   
  420425:	jnp    0x4204a5
  420427:	mov    cl,0xfb
  420429:	lock sub ebp,DWORD PTR [esi+0x6c]
  42042d:	and    bl,BYTE PTR [edi+0x41efaaea]
  420433:	scas   al,BYTE PTR es:[edi]
  420434:	js     0x420483
  420436:	retf   
  420437:	jne    0x4203fd
  420439:	(bad)  
  42043b:	ja     0x42049a
  42043d:	jae    0x420404
  42043f:	aaa    
  420440:	adc    DWORD PTR [edx],edx
  420442:	xchg   ebp,eax
  420443:	not    DWORD PTR [ecx-0x6e4d73ee]
  420449:	jno    0x4204ae
  42044b:	add    eax,0xd5b276dd
  420450:	sbb    DWORD PTR [edx-0x75],ecx
  420453:	outs   dx,DWORD PTR ds:[esi]
  420454:	mov    dh,0xa3
  420456:	push   ebx
  420457:	jmp    0xb4cc:0x4524f6c2
  42045e:	arpl   WORD PTR gs:[esi],cx
  420461:	jl     0x420445
  420463:	aas    
  420464:	int    0xa5
  420466:	mov    bh,0xba
  420468:	imul   ebp,DWORD PTR [ebx-0x2],0x62
  42046c:	dec    ecx
  42046d:	pop    ecx
  42046e:	fstp   st(6)
  420470:	jp     0x42048d
  420472:	lea    edi,[ebx+eax*4-0x6a]
  420476:	jne    0x4204b3
  420478:	inc    esp
  420479:	test   eax,0x54651e2e
  42047e:	push   0xffffffe1
  420480:	mov    edi,edi
  420482:	pop    esp
  420483:	mov    cs,WORD PTR [ecx+eiz*8-0x4fe2e4b9]
  42048a:	push   ds
  42048b:	rcr    DWORD PTR [ebx-0x1],cl
  42048e:	sub    eax,0x7861c6dd
  420493:	inc    ebx
  420494:	jnp    0x42043d
  420496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420497:	in     eax,0x27
  420499:	les    ecx,FWORD PTR [ebp-0x5cd04aee]
  42049f:	cmp    al,0xce
  4204a1:	aas    
  4204a2:	rep lods al,BYTE PTR ds:[esi]
  4204a4:	push   ebp
  4204a5:	mov    eax,0x548c4123
  4204aa:	gs je  0x42044e
  4204ad:	mov    dl,0x58
  4204af:	ret    
  4204b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204b1:	mov    eax,0x4872faa2
  4204b6:	loopne 0x420529
  4204b8:	loopne 0x4204f6
  4204ba:	jne    0x420512
  4204bc:	sbb    al,0xca
  4204be:	pop    esp
  4204bf:	xor    eax,DWORD PTR [edi-0x60425975]
  4204c5:	adc    eax,0xbf8652b
  4204ca:	and    DWORD PTR [ecx-0x32],0xffffffc2
  4204ce:	add    DWORD PTR [ebx+0x11],eax
  4204d1:	and    eax,0x9c8ee6ce
  4204d6:	popf   
  4204d7:	retf   
  4204d8:	retf   0x6081
  4204db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204dc:	mov    cl,0xbb
  4204de:	xchg   ebp,eax
  4204df:	or     esp,DWORD PTR ds:0x9c1eb743
  4204e5:	aam    0xeb
  4204e7:	sub    ch,BYTE PTR [ebx-0x3b]
  4204ea:	fsubr  st,st(3)
  4204ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204ed:	stos   DWORD PTR es:[edi],eax
  4204ee:	fdivr  DWORD PTR [ebp+0x4c83f7da]
  4204f4:	arpl   WORD PTR [ebx],cx
  4204f6:	add    BYTE PTR [eax-0x4e516611],ah
  4204fc:	fisub  WORD PTR [eax-0x19407ea8]
  420502:	adc    bl,al
  420504:	inc    edx
  420505:	pusha  
  420506:	or     BYTE PTR [edi+0x6e],dl
  420509:	ret    
  42050a:	xor    al,0x4
  42050c:	cmp    eax,0x3075ffbe
  420511:	fsubr  DWORD PTR [ebp-0x3f9d1a2e]
  420517:	repnz in al,0xd4
  42051a:	mov    ds:0xce9e22a5,eax
  42051f:	shr    esi,1
  420521:	sub    edi,DWORD PTR ds:[esi-0x4451bca9]
  420528:	adc    al,0x2a
  42052a:	stos   BYTE PTR es:[edi],al
  42052b:	adc    al,0x87
  42052d:	scas   eax,DWORD PTR es:[edi]
  42052e:	mov    eax,0x99fc52ac
  420533:	jne    0x4204db
  420535:	jb     0x42053a
  420537:	(bad)  
  420538:	in     eax,0x4e
  42053a:	bswap  ecx
  42053c:	lahf   
  42053d:	js     0x4205a8
  42053f:	and    bl,BYTE PTR [edx]
  420541:	mov    cl,0x12
  420543:	pop    ds
  420544:	inc    esi
  420545:	rol    BYTE PTR [esi-0x4cf53959],1
  42054b:	imul   edx,DWORD PTR [eax+0x65d33ccc],0xffffffe2
  420552:	mov    bh,0xa8
  420554:	shl    bh,1
  420556:	sub    DWORD PTR [eax+ecx*8-0x7da1dcf4],0x47
  42055e:	in     eax,0x7d
  420560:	dec    esp
  420561:	aam    0xf7
  420563:	and    eax,0x304dfaaa
  420568:	dec    ecx
  420569:	test   eax,0x13aaa8d3
  42056e:	lock push esp
  420570:	fld    TBYTE PTR [edx]
  420572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420573:	sahf   
  420574:	and    al,0xed
  420576:	ja     0x420511
  420578:	mov    eax,ds:0x4fcffdc5
  42057d:	mov    edi,0xd1000912
  420582:	aad    0x2f
  420584:	pop    esi
  420585:	or     eax,0x6733863e
  42058a:	xlat   BYTE PTR ds:[ebx]
  42058b:	jg     0x420574
  42058d:	pushf  
  42058e:	imul   edx
  420590:	clc    
  420591:	cmovge eax,DWORD PTR [ecx+0x507b4af0]
  420598:	jl     0x420608
  42059a:	fcom   QWORD PTR [eax+0x3a787c54]
  4205a0:	outs   dx,DWORD PTR ds:[esi]
  4205a1:	(bad)  [edx-0x64ab3206]
  4205a7:	(bad)  
  4205a9:	sar    DWORD PTR [ebx-0x1e],cl
  4205ac:	test   al,0x82
  4205ae:	test   DWORD PTR ds:0xb1418d3c,0xf9dfe9aa
  4205b8:	xchg   edi,eax
  4205b9:	inc    ebx
  4205ba:	push   eax
  4205bb:	stos   BYTE PTR es:[edi],al
  4205bc:	push   ebp
  4205bd:	adc    eax,0xb1a82e4f
  4205c2:	cmp    BYTE PTR [edi],ah
  4205c4:	stos   BYTE PTR es:[edi],al
  4205c5:	lods   al,BYTE PTR ds:[esi]
  4205c6:	outs   dx,DWORD PTR ds:[esi]
  4205c7:	pop    es
  4205c8:	dec    edx
  4205c9:	loope  0x420557
  4205cb:	and    esi,DWORD PTR ds:0xa8adc25
  4205d1:	out    dx,eax
  4205d2:	cmp    BYTE PTR [edi],0x58
  4205d5:	push   0xffffffa2
  4205d7:	xchg   edi,eax
  4205d8:	sbb    BYTE PTR [ebx],dh
  4205da:	add    ebp,DWORD PTR [ecx-0x66dc3ebf]
  4205e0:	adc    eax,0xa858fac9
  4205e5:	xchg   esi,eax
  4205e6:	dec    edx
  4205e7:	popa   
  4205e8:	(bad)  
  4205e9:	test   DWORD PTR [edx+0x43c1fa39],0x6be2b84a
  4205f3:	es jg  0x420602
  4205f6:	inc    ebx
  4205f7:	rcr    BYTE PTR [edi-0x6a342293],cl
  4205fd:	in     al,0xbd
  4205ff:	xacquire xchg BYTE PTR [ebx],ch
  420602:	into   
  420603:	loope  0x420669
  420605:	les    eax,FWORD PTR [esi+0x0]
  420608:	mov    al,0xac
  42060a:	mov    WORD PTR [ecx],fs
  42060c:	dec    edx
  42060d:	int    0xd8
  42060f:	xchg   esp,eax
  420610:	dec    ebp
  420611:	xlat   BYTE PTR ds:[ebx]
  420612:	es mov bl,0xa6
  420615:	shl    DWORD PTR [edi-0x75],1
  420618:	loop   0x42062f
  42061a:	cld    
  42061b:	xchg   ecx,eax
  42061c:	push   esi
  42061d:	mul    eax
  42061f:	dec    BYTE PTR [ebx+ebp*4-0x29]
  420623:	test   al,0xce
  420625:	js     0x4205eb
  420627:	inc    ecx
  420628:	aam    0x2b
  42062a:	pop    edx
  42062b:	test   al,0x4a
  42062d:	jae    0x4205d8
  42062f:	lock inc edi
  420631:	sub    eax,0x60da404c
  420636:	jp     0x420624
  420638:	enter  0x8526,0xcf
  42063c:	xor    eax,0x9293bd11
  420641:	pop    ds
  420642:	xchg   DWORD PTR [ebx],ecx
  420644:	lds    esp,FWORD PTR cs:[ebx+0x79dd8486]
  42064b:	sbb    eax,0x8d20d7f4
  420650:	add    DWORD PTR [ebx],0xa0eedc9f
  420656:	push   cs
  420657:	jo     0x4205fe
  420659:	mov    ah,0x3b
  42065b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42065c:	loope  0x420641
  42065e:	mov    al,0xbc
  420660:	push   edi
  420661:	pop    bx
  420663:	mov    al,ds:0xea628326
  420668:	pop    esi
  420669:	ret    
  42066a:	jmp    0x9ac37d3f
  42066f:	scas   al,BYTE PTR es:[edi]
  420670:	jmp    0x8ce03e97
  420675:	push   ebx
  420676:	icebp  
  420677:	cwde   
  420678:	iret   
  420679:	and    eax,0x6dcf9789
  42067f:	arpl   WORD PTR [edx+0x302c2bdf],si
  420685:	retf   0xff8
  420688:	sar    DWORD PTR [eax-0x2f278b8a],0x56
  42068f:	jno    0x4206ba
  420691:	call   0x47e6:0xfb9fc16b
  420698:	cmc    
  420699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42069a:	mov    ch,0x28
  42069c:	and    eax,0x6b208fa7
  4206a1:	jmp    0x6a90:0xc75e887b
  4206a8:	lods   al,BYTE PTR ds:[esi]
  4206a9:	cmp    BYTE PTR [edi],bl
  4206ab:	inc    edx
  4206ac:	sti    
  4206ad:	inc    ebp
  4206ae:	mov    gs,WORD PTR [ecx+eiz*1+0x46]
  4206b2:	jne    0x42064a
  4206b4:	retf   
  4206b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206b6:	adc    eax,0xd117783f
  4206bb:	jmp    0x59f27111
  4206c0:	mov    WORD PTR [edi-0x2a9f32a4],?
  4206c6:	lods   eax,DWORD PTR ds:[esi]
  4206c7:	cmp    DWORD PTR [edi-0x33],eax
  4206ca:	jl     0x4206fa
  4206cc:	pop    ds
  4206cd:	(bad)  
  4206ce:	lea    ebp,[edx-0x2c]
  4206d1:	mov    cl,0x1
  4206d3:	xchg   esi,eax
  4206d4:	scas   al,BYTE PTR es:[edi]
  4206d5:	and    eax,0xf61487b2
  4206da:	pusha  
  4206db:	mov    BYTE PTR [ebx+0x7ab0518a],ah
  4206e1:	repnz arpl WORD PTR ds:0x78b89e47,di
  4206e8:	push   eax
  4206e9:	test   al,0x88
  4206eb:	mov    DWORD PTR fs:[ebp-0x1ae6de35],edx
  4206f2:	(bad)
  4206f5:	jae    0x4206f3
  4206f7:	fnstcw WORD PTR [edx-0x7c]
  4206fa:	out    dx,al
  4206fb:	jmp    0x4206aa
  4206fd:	xor    BYTE PTR [eax],al
  4206ff:	and    DWORD PTR [ebp+ebp*2-0x230eb2c2],0xffffff97
  420707:	icebp  
  420708:	adc    BYTE PTR [ebx+0x874a8d2],ah
  42070e:	ret    
  42070f:	mov    eax,ds:0x503efe17
  420714:	in     al,dx
  420715:	cmp    DWORD PTR [edi],ebp
  420717:	leave  
  420718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420719:	clc    
  42071a:	outs   dx,DWORD PTR ds:[esi]
  42071b:	es and cl,dh
  42071e:	in     al,0x4d
  420720:	jns    0x42071e
  420722:	(bad)  
  420724:	imul   edx
  420726:	dec    ecx
  420727:	jecxz  0x42076d
  420729:	out    dx,al
  42072a:	dec    ebp
  42072b:	or     BYTE PTR [ebx-0x3616ec9d],cl
  420731:	sbb    cl,cl
  420733:	fst    QWORD PTR [ebx+eax*4+0x2]
  420737:	dec    edx
  420738:	ror    DWORD PTR [eax-0x1ee38d4c],1
  42073e:	scas   al,BYTE PTR es:[edi]
  42073f:	dec    esi
  420740:	not    DWORD PTR [ecx-0x731a4c70]
  420746:	arpl   si,bx
  420748:	arpl   di,dx
  42074a:	inc    si
  42074c:	push   0x3432f41c
  420751:	retf   0x4f0c
  420754:	mov    bl,0x27
  420756:	mov    cl,0xf6
  420758:	out    dx,al
  420759:	in     al,dx
  42075a:	out    dx,al
  42075b:	dec    ebp
  42075c:	test   DWORD PTR [eax],0x0
  420762:	and    DWORD PTR [edi],ebx
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	xchg   esp,eax
  42076f:	lock inc esp
  420771:	mov    dh,BYTE PTR [edx-0xcfffe7f]
  420777:	add    al,0x0
  420779:	add    BYTE PTR [esi+0x5f],ch
  42077c:	arpl   di,di
  42077e:	test   DWORD PTR [eax+0x45],ecx
  420781:	cmp    edx,DWORD PTR [edi]
  420783:	cmc    
  420784:	mov    ah,0xaa
  420786:	inc    ebp
  420787:	pushf  
  420788:	int    0x41
  42078a:	sbb    dh,BYTE PTR [edi]
  42078c:	iret   
  42078d:	into   
  42078e:	or     eax,0x637a4e28
  420793:	outs   dx,DWORD PTR ds:[esi]
  420794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420795:	and    DWORD PTR [eax+eiz*4-0x1e],0xffffffe9
  42079a:	(bad)  
  42079b:	cmp    BYTE PTR [eax+0x67cd137a],ah
  4207a1:	mov    al,ds:0xba60ade7
  4207a6:	pop    esi
  4207a7:	lahf   
  4207a8:	adc    BYTE PTR [esi-0x4f],al
  4207ab:	ss jecxz 0x420766
  4207ae:	jg     0x42079a
  4207b0:	push   ebp
  4207b1:	dec    edi
  4207b2:	dec    ebx
  4207b3:	pop    ebx
  4207b4:	in     eax,dx
  4207b5:	lea    ebx,[ebx+ecx*2]
  4207b8:	test   ebp,esp
  4207ba:	adc    dh,BYTE PTR [edi+0x47]
  4207bd:	dec    ebx
  4207be:	aas    
  4207bf:	rcr    bl,1
  4207c1:	and    al,dl
  4207c3:	jg     0x4207cf
  4207c5:	js     0x420749
  4207c7:	and    dl,0xe1
  4207ca:	test   eax,0xf50f7a2b
  4207cf:	mov    ds:0x41525712,al
  4207d4:	and    DWORD PTR [esi+0x68],ebx
  4207d7:	jnp    0x420842
  4207d9:	cmp    al,0x12
  4207db:	mov    esp,0xb90d426a
  4207e0:	mov    bl,0x7f
  4207e2:	cmp    esi,ebp
  4207e4:	fcom   st(3)
  4207e6:	jmp    0x420832
  4207e8:	add    BYTE PTR [ebx+0x3f7f8807],cl
  4207ee:	pop    edx
  4207ef:	movd   DWORD PTR [esi+0x2c],mm0
  4207f3:	fist   DWORD PTR [edx-0x39caa6bf]
  4207f9:	xor    BYTE PTR [ebp+0x39d45892],cl
  4207ff:	cli    
  420800:	push   edx
  420801:	das    
  420802:	jmp    0x4207f8
  420804:	xor    bh,al
  420806:	rcr    DWORD PTR [ebp+0x450c3f7c],0xf
  42080d:	call   0x7e14c66e
  420812:	adc    eax,0x52e8ae3f
  420817:	sub    dl,ah
  420819:	cs mov dh,0xd9
  42081c:	ins    BYTE PTR es:[edi],dx
  42081d:	popf   
  42081e:	jnp    0x42082a
  420820:	std    
  420821:	gs pop ebp
  420823:	xor    ebp,0x61
  420826:	retf   0x5295
  420829:	dec    BYTE PTR [edx-0x70]
  42082c:	mov    eax,ds:0x8eee5fa6
  420831:	cdq    
  420832:	cmp    bh,dl
  420834:	fst    DWORD PTR [ebp+0x6c]
  420837:	out    0x7d,al
  420839:	mov    ah,0x27
  42083b:	inc    eax
  42083c:	mov    ds:0x263daac6,eax
  420841:	fsub   QWORD PTR [ebx]
  420843:	imul   esp,DWORD PTR [ebp+0x6f],0x377ea004
  42084a:	lahf   
  42084b:	pop    ebx
  42084c:	fdivp  st(5),st
  42084e:	xchg   edx,eax
  42084f:	out    0x57,al
  420851:	hlt    
  420852:	cmp    esi,DWORD PTR [edx-0x3686d888]
  420858:	mov    al,ds:0x7df44947
  42085d:	adc    ch,BYTE PTR [edx+ebp*4]
  420860:	arpl   WORD PTR [edi+0x305135b7],dx
  420866:	inc    ecx
  420867:	cdq    
  420868:	int3   
  420869:	mov    bh,0x18
  42086b:	cld    
  42086c:	mov    eax,0xd2d34e29
  420871:	(bad)  
  420872:	in     al,0xb4
  420874:	ins    DWORD PTR es:[edi],dx
  420875:	cmp    cl,dl
  420877:	mov    dh,0xe4
  420879:	bswap  esi
  42087b:	adc    esp,ecx
  42087d:	push   es
  42087e:	sub    DWORD PTR ds:0x3a4aa33c,eax
  420884:	sub    al,0xd4
  420886:	stc    
  420887:	mov    ch,0xca
  420889:	ret    0x9bf0
  42088c:	push   esi
  42088d:	dec    ebp
  42088e:	ror    esp,0x76
  420891:	xchg   bl,al
  420893:	jge    0x420867
  420895:	mov    ds:0x57d52752,al
  42089a:	jl     0x4208ad
  42089c:	scas   al,BYTE PTR es:[edi]
  42089d:	jno    0x4208a0
  42089f:	mov    al,0xf
  4208a1:	add    DWORD PTR [edi-0x76],eax
  4208a4:	pop    eax
  4208a5:	adc    DWORD PTR [ecx+0x35],0xca4d708a
  4208ac:	push   ecx
  4208ad:	dec    ebp
  4208ae:	add    bh,BYTE PTR ds:0x109d01e9
  4208b4:	cmp    BYTE PTR [edx+0x10089cf],bh
  4208ba:	push   0x6e
  4208bc:	xor    eax,DWORD PTR [ebp+0x0]
  4208bf:	setns  BYTE PTR [edx]
  4208c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208c3:	iret   
  4208c4:	das    
  4208c5:	ins    DWORD PTR es:[edi],dx
  4208c6:	in     al,0x61
  4208c8:	push   0x4c
  4208ca:	cld    
  4208cb:	fincstp 
  4208cd:	push   ebx
  4208ce:	adc    DWORD PTR [edx],0xffffff94
  4208d1:	cmc    
  4208d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208d3:	mov    cl,cl
  4208d5:	cmp    DWORD PTR [edi+0x3943f50c],eax
  4208db:	sti    
  4208dc:	setb   BYTE PTR [edx]
  4208df:	das    
  4208e0:	int3   
  4208e1:	push   ecx
  4208e2:	cmp    eax,0x612341a2
  4208e7:	push   edi
  4208e8:	into   
  4208e9:	dec    esi
  4208ea:	cdq    
  4208eb:	hlt    
  4208ec:	pop    edi
  4208ed:	sub    BYTE PTR [ebx+0x18],al
  4208f0:	xlat   BYTE PTR ds:[ebx]
  4208f1:	jae    0x4208f9
  4208f3:	or     edi,esi
  4208f5:	jmp    0x4b92:0x5cc4e76b
  4208fc:	ror    DWORD PTR [ecx+eax*1],cl
  4208ff:	jne    0x42092c
  420901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420902:	jmp    0xe888:0xdafc8c38
  420909:	(bad)  
  42090a:	int3   
  42090b:	repnz sub esp,DWORD PTR [ecx-0x1f]
  42090f:	stos   DWORD PTR es:[edi],eax
  420910:	shr    bh,1
  420912:	scas   eax,DWORD PTR es:[edi]
  420913:	mov    ah,0xc7
  420915:	push   ebx
  420916:	aam    0x78
  420918:	xchg   edi,eax
  420919:	clc    
  42091a:	jecxz  0x420919
  42091c:	cmc    
  42091d:	(bad)  
  42091e:	loop   0x4208e1
  420920:	xchg   esi,eax
  420921:	inc    ecx
  420922:	xor    al,0x2b
  420924:	add    esp,DWORD PTR [esi]
  420926:	jnp    0x4208b8
  420928:	inc    ecx
  420929:	popf   
  42092a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42092b:	add    esi,DWORD PTR [ebx]
  42092d:	lds    edi,FWORD PTR [eax-0x7626496b]
  420933:	pop    ds
  420934:	xchg   esi,eax
  420935:	mov    edi,gs
  420937:	push   eax
  420938:	mov    ds:0x75c1f484,eax
  42093d:	cmp    ebp,DWORD PTR [edx+ebx*1+0x52bb182d]
  420944:	aaa    
  420945:	mov    esi,0x596f574
  42094a:	sbb    bh,cl
  42094c:	push   ecx
  42094d:	jae    0x420974
  42094f:	outs   dx,DWORD PTR ds:[esi]
  420950:	jno    0x420959
  420952:	nop
  420953:	inc    ecx
  420954:	jo     0x4209a3
  420956:	arpl   sp,ax
  420958:	push   esi
  420959:	fwait
  42095a:	adc    eax,0x3a0fcfd8
  42095f:	pop    eax
  420960:	fsub   st(4),st
  420962:	fbld   TBYTE PTR [eax-0x68]
  420965:	sti    
  420966:	into   
  420967:	push   es
  420968:	ficom  WORD PTR [eax]
  42096a:	(bad)  
  42096b:	arpl   di,dx
  42096d:	std    
  42096e:	mov    BYTE PTR [eax],dl
  420970:	jb     0x420997
  420972:	dec    edi
  420973:	dec    edi
  420974:	jns    0x4209d5
  420976:	std    
  420977:	clc    
  420978:	cmp    eax,0x435fd9
  42097d:	rcr    ebp,cl
  42097f:	sbb    dl,BYTE PTR [edx]
  420981:	addr16 in eax,0x4b
  420984:	(bad)  
  420985:	jp     0x4209d7
  420987:	into   
  420988:	fwait
  420989:	test   cl,0x2b
  42098c:	cmp    BYTE PTR [eax-0x1],ch
  42098f:	mov    edx,0xe015e35b
  420994:	arpl   WORD PTR [edx+0x1ed7f71d],dx
  42099a:	pop    ebx
  42099b:	xchg   ebp,eax
  42099c:	fwait
  42099d:	or     dh,bh
  42099f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209a0:	test   esp,ebx
  4209a2:	test   DWORD PTR [ebx],esi
  4209a4:	mov    bl,0x89
  4209a6:	mov    gs,ecx
  4209a8:	jge    0x4209c0
  4209aa:	dec    ebp
  4209ab:	xchg   BYTE PTR [ebx],dl
  4209ad:	loop   0x420975
  4209af:	je     0x420a17
  4209b1:	je     0x420a0a
  4209b3:	mov    edx,0x32a20ddf
  4209b8:	dec    esi
  4209b9:	pop    ss
  4209ba:	push   edi
  4209bb:	jecxz  0x420994
  4209bd:	ret    0xe390
  4209c0:	xchg   DWORD PTR [esi-0x7d0ac076],eax
  4209c6:	into   
  4209c7:	js     0x4209af
  4209c9:	std    
  4209ca:	adc    DWORD PTR [edi-0x2f],esp
  4209cd:	xchg   BYTE PTR [esi+0x4b8a147e],ch
  4209d3:	(bad)  
  4209d4:	aad    0x9e
  4209d6:	jae    0x420a2d
  4209d8:	hlt    
  4209d9:	and    bh,BYTE PTR [ebp+0x64e0c388]
  4209df:	cmp    BYTE PTR ds:0x1de023f2,0xc5
  4209e6:	popa   
  4209e7:	ret    
  4209e8:	xlat   BYTE PTR ds:[ebx]
  4209e9:	jne    0x4209d1
  4209eb:	sub    dl,dl
  4209ed:	inc    edi
  4209ee:	and    al,0x20
  4209f0:	push   0xd868f9b8
  4209f5:	enter  0xd070,0xba
  4209f9:	mov    ds:0xa43e9b04,al
  4209fe:	test   DWORD PTR [edi],0x29e9907d
  420a04:	call   0xfde4ad0b
  420a09:	test   DWORD PTR ds:0x9cf6544f,esi
  420a0f:	or     edi,ebp
  420a11:	sub    eax,0x6c8c47c
  420a16:	(bad)  
  420a17:	adc    al,0xdd
  420a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a1a:	push   0xffffffe0
  420a1c:	mov    DWORD PTR [ecx-0x67d65de5],edi
  420a22:	jmp    0x4209b7
  420a24:	inc    ecx
  420a25:	inc    di
  420a27:	retf   
  420a28:	out    0xea,al
  420a2a:	push   es
  420a2b:	adc    BYTE PTR ds:0x32426746,dh
  420a31:	sbb    esi,DWORD PTR [ebx-0x5e]
  420a34:	xchg   ebx,eax
  420a35:	xchg   edx,eax
  420a36:	cld    
  420a37:	mov    dl,0x73
  420a39:	fnstsw WORD PTR [ecx-0x54]
  420a3c:	mov    eax,ds:0x72e70b3d
  420a41:	adc    eax,0x1c37ec12
  420a46:	in     al,0x52
  420a48:	inc    ecx
  420a49:	sbb    ecx,0xffffffa1
  420a4c:	pusha  
  420a4d:	or     DWORD PTR [ebx],edi
  420a4f:	add    edx,DWORD PTR [ebx+0x11]
  420a52:	das    
  420a53:	das    
  420a54:	push   ebp
  420a55:	adc    BYTE PTR ds:0x1ebf6a5d,dh
  420a5b:	test   BYTE PTR [eax],dh
  420a5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a5e:	sbb    esp,esp
  420a60:	inc    BYTE PTR [esi-0x52]
  420a63:	inc    ecx
  420a64:	outs   dx,BYTE PTR ds:[esi]
  420a65:	sbb    eax,0x386a4367
  420a6a:	inc    eax
  420a6b:	ror    BYTE PTR [esi-0x6],cl
  420a6e:	fild   DWORD PTR [edx+esi*1-0x3d]
  420a72:	xor    al,dh
  420a74:	ss cld 
  420a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a77:	or     esi,DWORD PTR [ebx]
  420a79:	lods   eax,DWORD PTR gs:[esi]
  420a7b:	and    al,0x6b
  420a7d:	jmp    0xe11d:0xeed946c3
  420a84:	aaa    
  420a85:	pop    ecx
  420a86:	and    BYTE PTR [edx],0xd1
  420a89:	ret    0xb52e
  420a8c:	or     DWORD PTR [esi],esi
  420a8e:	pop    esi
  420a8f:	ficomp DWORD PTR [eax]
  420a91:	aad    0x4e
  420a93:	sbb    edi,DWORD PTR [ebp-0x5878c59f]
  420a99:	inc    esi
  420a9a:	jns    0x420a61
  420a9c:	in     eax,dx
  420a9d:	jmp    0x832e:0x271ada11
  420aa4:	xchg   ebp,eax
  420aa5:	(bad)  
  420aa6:	not    BYTE PTR [ebx+0x1fa92104]
  420aac:	adc    ebp,ebp
  420aae:	aam    0xe6
  420ab0:	sti    
  420ab1:	or     BYTE PTR [edi+0x64a3a46f],cl
  420ab7:	pop    edx
  420ab8:	int    0xc5
  420aba:	ds popf 
  420abc:	xor    eax,0x8a770495
  420ac1:	fstp   TBYTE PTR [ecx+0x5fea9e67]
  420ac7:	and    edx,DWORD PTR [ebx]
  420ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420aca:	and    ebx,ecx
  420acc:	dec    edx
  420acd:	mov    eax,0x34369303
  420ad2:	inc    esi
  420ad3:	jo     0x420b3d
  420ad5:	jp     0x420a6b
  420ad7:	inc    esi
  420ad8:	mov    eax,ds:0x371a2b6a
  420add:	inc    edi
  420ade:	loopne 0x420ad7
  420ae0:	out    0x69,al
  420ae2:	iret   
  420ae3:	xchg   edx,eax
  420ae4:	loopne 0x420aa2
  420ae6:	push   es
  420ae7:	jno    0x420a7e
  420ae9:	pop    esp
  420aea:	and    dl,bh
  420aec:	mov    ds:0xcedd0457,al
  420af1:	retf   0x3131
  420af4:	inc    eax
  420af5:	dec    ecx
  420af6:	outs   dx,BYTE PTR ds:[esi]
  420af7:	dec    ebp
  420af8:	stos   BYTE PTR es:[edi],al
  420af9:	push   edi
  420afa:	ss mov bl,0x6f
  420afd:	adc    esi,ecx
  420aff:	ss ins BYTE PTR es:[edi],dx
  420b01:	add    DWORD PTR [edi-0x5e],0x75b6d809
  420b08:	push   0xffffffa3
  420b0a:	push   0x4e
  420b0c:	cmp    eax,0x4973f5ff
  420b11:	or     DWORD PTR [eax+0x46],edi
  420b14:	and    ebp,DWORD PTR [esi]
  420b16:	xor    BYTE PTR [eax],al
  420b18:	ror    BYTE PTR [esi],1
  420b1a:	cli    
  420b1b:	mov    cl,0x8c
  420b1d:	mov    ch,0xae
  420b1f:	std    
  420b20:	frstor [ebp+0x1506580c]
  420b26:	rcr    bh,cl
  420b28:	fstp   DWORD PTR [ebx+0x130ecfd6]
  420b2e:	leave  
  420b2f:	mov    bh,0x38
  420b31:	dec    eax
  420b32:	dec    ecx
  420b33:	or     al,0x83
  420b35:	mov    edx,0xee01f327
  420b3a:	mov    eax,ds:0xaeeebfa3
  420b3f:	sbb    ebp,DWORD PTR [edx+0x13eab787]
  420b45:	mov    ch,0xba
  420b47:	loop   0x420b30
  420b49:	shl    DWORD PTR [eax-0x38],cl
  420b4c:	adc    DWORD PTR [esi+0x3a],0xa62fd477
  420b53:	and    eax,0x48581e7c
  420b58:	mov    al,0xe6
  420b5a:	jl     0x420b89
  420b5c:	add    bh,dh
  420b5e:	dec    eax
  420b5f:	jne    0x420b34
  420b61:	jbe    0x420b36
  420b63:	sub    DWORD PTR [esi+0xb],ebp
  420b66:	mov    ah,0xce
  420b68:	loopne 0x420bbd
  420b6a:	(bad)  
  420b6b:	adc    al,0x5a
  420b6d:	in     eax,0x7
  420b6f:	out    0x1,al
  420b71:	sub    ebx,ecx
  420b73:	jns    0x420b15
  420b75:	out    0xce,eax
  420b77:	xchg   edx,eax
  420b78:	call   0xb1aa:0x989535c5
  420b7f:	je     0x420bea
  420b81:	mov    edi,0x9a23a40
  420b86:	je     0x420b85
  420b88:	xor    DWORD PTR ds:0xf3ae827a,ecx
  420b8e:	loop   0x420bd5
  420b90:	and    eax,0xa2d4c7ca
  420b95:	adc    al,0xbd
  420b98:	mov    dl,0x7c
  420b9a:	fdiv   QWORD PTR [edi-0x30]
  420b9d:	out    dx,eax
  420b9e:	sbb    cl,BYTE PTR [ebp+0x49]
  420ba1:	(bad)  
  420ba2:	enter  0x81e5,0x99
  420ba6:	outs   dx,BYTE PTR ds:[esi]
  420ba7:	fmul   QWORD PTR [ecx]
  420ba9:	xchg   esi,eax
  420baa:	adc    ch,cl
  420bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bad:	cwde   
  420bae:	add    eax,0xbb1585ef
  420bb3:	mov    ?,WORD PTR [edx-0x5c1c4090]
  420bb9:	cmp    eax,0x4001b681
  420bbe:	push   esp
  420bbf:	data16 sbb bh,BYTE PTR [ecx+edi*1+0x78]
  420bc4:	adc    ah,bl
  420bc6:	pusha  
  420bc7:	xchg   esi,eax
  420bc8:	imul   esp,DWORD PTR [edx],0xffffffc9
  420bcb:	jmp    0x15cf3249
  420bd0:	loopne 0x420c34
  420bd2:	call   0xb2d7:0x314e5548
  420bd9:	xor    bh,BYTE PTR [edx-0x3e47a5eb]
  420bdf:	repz sub ebp,DWORD PTR [ebx]
  420be2:	fldcw  WORD PTR es:[esp+ecx*8]
  420be6:	add    DWORD PTR [eax+0x70],0x8116765a
  420bed:	jns    0x420b80
  420bef:	jecxz  0x420bf9
  420bf1:	mov    ds:0xf1451971,al
  420bf6:	or     dl,dl
  420bf8:	inc    esi
  420bf9:	ss scas al,BYTE PTR es:[edi]
  420bfb:	push   esi
  420bfc:	mov    dl,ah
  420bfe:	xchg   ebp,eax
  420bff:	jle    0x420c63
  420c01:	(bad)  
  420c02:	int3   
  420c03:	or     BYTE PTR [eax],ah
  420c05:	add    esi,DWORD PTR [eax+0x5d94cef2]
  420c0b:	mov    ecx,0xb8fc2b75
  420c10:	sbb    DWORD PTR [ebx+0x4d],ebx
  420c13:	xor    al,0x9b
  420c15:	mov    ebp,?
  420c17:	sbb    ah,BYTE PTR [ebp-0x6749a195]
  420c1d:	shr    al,1
  420c1f:	test   DWORD PTR ds:0xf29b5487,esi
  420c25:	(bad)  
  420c26:	fxch   st(1)
  420c28:	mov    esp,DWORD PTR [ecx+esi*4]
  420c2b:	jl     0x420be8
  420c2d:	stos   BYTE PTR es:[edi],al
  420c2e:	adc    al,0x8d
  420c30:	add    ebx,DWORD PTR [ebp-0x36e981a6]
  420c36:	add    bl,BYTE PTR [ebx-0x69]
  420c39:	cdq    
  420c3a:	and    eax,edx
  420c3c:	ret    
  420c3d:	shr    BYTE PTR [edi],1
  420c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c40:	jo     0x420bd9
  420c42:	mov    ecx,0x4b0d669a
  420c47:	dec    edx
  420c48:	jmp    0x80b8:0xccc33187
  420c4f:	or     al,0xdb
  420c51:	push   0xd3a1cfc3
  420c56:	repnz adc BYTE PTR [esi-0x50],dh
  420c5a:	daa    
  420c5b:	xchg   BYTE PTR [ebx-0x1dccd204],cl
  420c61:	push   eax
  420c62:	mov    dl,al
  420c64:	pop    es
  420c65:	fsub   QWORD PTR [ebx-0x6abede19]
  420c6b:	loope  0x420c14
  420c6d:	add    BYTE PTR [eax],al
  420c6f:	add    BYTE PTR [eax],al
  420c71:	add    BYTE PTR [ecx],al
  420c73:	jge    0x420c4d
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx+0xf0ab857]
  420c80:	ins    BYTE PTR es:[edi],dx
  420c81:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  420c83:	xchg   BYTE PTR [ecx],al
  420c85:	add    bl,dh
  420c87:	add    al,0x0
  420c89:	add    bl,bl
  420c8b:	stc    
  420c8c:	push   es
  420c8d:	push   ebx
  420c8e:	and    DWORD PTR [ebp+0x20],0x4
  420c92:	mov    ah,0x54
  420c94:	xor    ecx,DWORD PTR [eax+ebp*1+0x10]
  420c98:	dec    ebx
  420c99:	sub    DWORD PTR [ebx-0x4416943e],ecx
  420c9f:	cwde   
  420ca0:	adc    al,BYTE PTR ss:[eax+0x3a]
  420ca4:	jg     0x420c6d
  420ca6:	pop    ds
  420ca7:	addr16 cmp al,0x85
  420caa:	jge    0x420d00
  420cac:	(bad)  
  420cae:	push   eax
  420caf:	inc    eax
  420cb0:	mov    cl,bl
  420cb2:	mov    edi,DWORD PTR ds:0x2eea6c92
  420cb8:	or     eax,0x2fdeeaaf
  420cbd:	test   DWORD PTR [ebx],ebp
  420cbf:	add    DWORD PTR [ebp-0x4b08bcf9],0xffffff9c
  420cc6:	cli    
  420cc7:	clc    
  420cc8:	sar    dh,1
  420cca:	cmp    eax,0x50a7c289
  420ccf:	mov    DWORD PTR [edi],edi
  420cd1:	test   eax,0xe4b329ad
  420cd6:	mov    BYTE PTR [ebx-0x78],bl
  420cd9:	xor    BYTE PTR [edi-0x5a],0xb5
  420cdd:	push   edx
  420cde:	sbb    ah,BYTE PTR [ebx+0x6b7acd57]
  420ce4:	jp     0x420d3a
  420ce6:	in     eax,dx
  420ce7:	test   BYTE PTR [ebx],0x79
  420cea:	js     0x420d59
  420cec:	call   0x4bdf905a
  420cf1:	dec    esi
  420cf2:	sub    eax,0x80754808
  420cf7:	pop    eax
  420cf8:	icebp  
  420cf9:	retf   0x9586
  420cfc:	add    eax,0x485a65b5
  420d01:	push   esp
  420d02:	xchg   ecx,eax
  420d03:	pop    esi
  420d04:	dec    ebp
  420d05:	xchg   edi,eax
  420d06:	ss je  0x420d5f
  420d09:	clc    
  420d0a:	daa    
  420d0b:	cmp    eax,edx
  420d0d:	or     BYTE PTR [ecx+0x3cfd4055],bl
  420d13:	in     al,0x57
  420d15:	ficom  DWORD PTR [ebp-0x5567b9ef]
  420d1b:	xor    cl,BYTE PTR [edi+0x511648e9]
  420d21:	add    eax,0xca5847d4
  420d26:	add    BYTE PTR [esi-0x4b],0x7f
  420d2a:	ret    0x92f6
  420d2d:	imul   edx,DWORD PTR [ebp-0x34],0xe8b8c410
  420d34:	arpl   WORD PTR [si],di
  420d37:	jns    0x420d1c
  420d39:	xchg   edx,eax
  420d3a:	mov    WORD PTR [eax+esi*2+0x7819467e],fs
  420d41:	mov    al,0x23
  420d43:	stos   DWORD PTR es:[edi],eax
  420d44:	sahf   
  420d45:	or     DWORD PTR [ecx+edx*2+0x16],0xffffffb8
  420d4a:	addr16 sbb dh,cl
  420d4d:	test   BYTE PTR [ebx-0x66],ch
  420d50:	retf   
  420d51:	in     eax,dx
  420d52:	mov    eax,0xf100196a
  420d57:	mov    cl,0x91
  420d59:	or     eax,ecx
  420d5b:	int3   
  420d5c:	in     al,0x93
  420d5e:	aaa    
  420d5f:	adc    DWORD PTR [ecx-0x68f8f90c],ebx
  420d65:	and    edi,DWORD PTR [edi]
  420d67:	cmp    ecx,DWORD PTR [ebp+0x55]
  420d6a:	xchg   esp,eax
  420d6b:	iret   
  420d6c:	imul   ebp,esi,0x6f94ce66
  420d72:	inc    esp
  420d73:	popf   
  420d74:	pop    ebx
  420d75:	add    edx,DWORD PTR [ebx-0x49]
  420d78:	repnz ficomp WORD PTR [esi+0x3250d5d]
  420d7f:	sub    edx,DWORD PTR [ebx+edx*8]
  420d82:	jae    0x420d14
  420d84:	js     0x420d94
  420d86:	mov    esp,DWORD PTR [ebx+0x56]
  420d89:	push   es
  420d8a:	or     eax,DWORD PTR [eax-0x5e]
  420d8d:	imul   ebp,ebx,0x51
  420d90:	pop    es
  420d91:	loopne 0x420dbb
  420d93:	pop    edi
  420d94:	frstor [edx]
  420d96:	ret    
  420d97:	(bad)  
  420d98:	mov    ah,0x1b
  420d9a:	jns    0x420d4f
  420d9c:	pushf  
  420d9d:	xchg   bl,bl
  420d9f:	call   0x38ff:0xe976befa
  420da6:	mov    al,cl
  420da8:	jge    0x420da3
  420daa:	cdq    
  420dab:	das    
  420dac:	cmp    DWORD PTR [ebx],0xffffffd2
  420daf:	not    BYTE PTR [edi+0x74]
  420db2:	push   esi
  420db3:	dec    ebp
  420db4:	into   
  420db5:	outs   dx,DWORD PTR ds:[esi]
  420db6:	add    BYTE PTR [ebp+0x48],ch
  420db9:	sbb    edi,eax
  420dbb:	sbb    al,0x16
  420dbd:	pop    eax
  420dbe:	loopne 0x420e3b
  420dc0:	lahf   
  420dc1:	(bad)  
  420dc2:	sbb    edx,0x32
  420dc5:	or     BYTE PTR [ecx],al
  420dc7:	lds    edx,FWORD PTR [ebx]
  420dc9:	sub    DWORD PTR [edi-0x5b],0xfb232981
  420dd0:	(bad)  
  420dd1:	push   esp
  420dd2:	sub    esp,DWORD PTR [ebp+ebp*8+0x55]
  420dd6:	js     0x420e48
  420dd8:	stos   DWORD PTR es:[edi],eax
  420dd9:	in     al,0x47
  420ddb:	setns  BYTE PTR [esi]
  420dde:	mov    ecx,?
  420de0:	cmp    eax,0x3635a17a
  420de5:	push   edx
  420de6:	dec    edi
  420de7:	push   0x3c
  420de9:	es retf 
  420deb:	fnstenv [ecx]
  420ded:	sub    BYTE PTR [edi+0xecdf3d0],ah
  420df3:	inc    esp
  420df4:	xchg   ecx,eax
  420df5:	or     bh,bl
  420df7:	mov    BYTE PTR [ecx-0x51aad704],ah
  420dfd:	sub    cl,bl
  420dff:	push   ebp
  420e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e01:	(bad)  [edi+0x13]
  420e04:	xor    esi,DWORD PTR [ebx]
  420e06:	xchg   eax,ecx
  420e08:	js     0x420e3f
  420e0a:	push   ecx
  420e0b:	ins    DWORD PTR es:[edi],dx
  420e0c:	jge    0x420dee
  420e0e:	pusha  
  420e0f:	jnp    0x420e8a
  420e11:	jecxz  0x420e5d
  420e13:	ds out dx,eax
  420e15:	mov    ds:0x6e397359,al
  420e1a:	mov    edx,DWORD PTR [edx+esi*4+0x47afc8c6]
  420e21:	arpl   WORD PTR [edi+0x11],di
  420e24:	mov    al,ds:0xa4fa1f7c
  420e29:	aas    
  420e2a:	pop    ebp
  420e2b:	xor    ah,BYTE PTR [esp+ebp*2-0xe]
  420e2f:	loope  0x420ddb
  420e31:	test   eax,0x83d2ae0
  420e36:	outs   dx,BYTE PTR ds:[esi]
  420e37:	inc    ebp
  420e38:	cs or  al,0x5c
  420e3b:	add    BYTE PTR [edx-0x56756f91],dl
  420e41:	adc    al,0xbc
  420e43:	push   esp
  420e44:	dec    esi
  420e45:	cwde   
  420e46:	and    eax,0x7fa32adf
  420e4b:	ret    0x85d6
  420e4e:	sub    ebp,DWORD PTR [esi+ebp*2]
  420e51:	js     0x420eb1
  420e53:	push   esp
  420e54:	xor    al,0x15
  420e56:	imul   BYTE PTR [eax]
  420e58:	dec    eax
  420e59:	cli    
  420e5a:	mov    esi,0x95f4492c
  420e5f:	and    esp,DWORD PTR [eax+edi*8]
  420e62:	mov    ds,WORD PTR [esi]
  420e64:	setne  BYTE PTR es:[esi]
  420e68:	mov    eax,ds:0xa024fa7b
  420e6d:	les    ebp,FWORD PTR [eax]
  420e6f:	cmp    eax,0xfb7c32f
  420e74:	arpl   WORD PTR [edi-0xc],sp
  420e77:	(bad)  
  420e78:	xor    BYTE PTR [edi-0x3cba93cd],cl
  420e7e:	adc    al,0x1b
  420e80:	jmp    0x9364:0x2cb3d855
  420e87:	imul   edi,DWORD PTR [ebp+ebx*8-0x22e3943],0xbaf965d8
  420e92:	jecxz  0x420ef2
  420e94:	jnp    0x420ef6
  420e96:	inc    ebp
  420e97:	mov    eax,0x667e3288
  420e9c:	fwait
  420e9d:	push   eax
  420e9e:	aas    
  420e9f:	sbb    BYTE PTR [edi+0x359a1832],0x56
  420ea6:	test   DWORD PTR [edi+eiz*1],edx
  420ea9:	repnz enter 0x496e,0xad
  420eae:	std    
  420eaf:	ss inc edx
  420eb1:	xlat   BYTE PTR ds:[ebx]
  420eb2:	dec    esp
  420eb3:	loopne 0x420e9f
  420eb5:	out    0xac,al
  420eb7:	pop    ebp
  420eb8:	sub    al,0x3f
  420eba:	addr16 mov al,0x41
  420ebd:	data16 xor al,0xb6
  420ec0:	addr16 pop ds
  420ec2:	fwait
  420ec3:	cs popf 
  420ec5:	mov    al,0x57
  420ec7:	or     DWORD PTR [ebx-0x3],0x4b96a05c
  420ece:	dec    esp
  420ecf:	adc    BYTE PTR [edi-0x4f07ec81],dh
  420ed5:	or     ebp,DWORD PTR [edx+ebp*2+0x6a]
  420ed9:	gs ret 0xbf1
  420edd:	jl     0x420ef4
  420edf:	call   0x5d1a4b0a
  420ee4:	mov    eax,0x7f710e04
  420ee9:	retf   
  420eea:	dec    ebp
  420eeb:	jle    0x420e6d
  420eed:	cli    
  420eee:	or     ebp,DWORD PTR [ebx]
  420ef0:	pop    ds
  420ef1:	dec    ebx
  420ef2:	and    eax,ebp
  420ef4:	jg     0x420f11
  420ef6:	stc    
  420ef7:	add    DWORD PTR [eax+0x1d],ecx
  420efa:	jb     0x420e92
  420efc:	scas   al,BYTE PTR es:[edi]
  420efd:	push   edx
  420efe:	frstor [eax]
  420f00:	sbb    eax,0x3ae12feb
  420f05:	cmp    esi,DWORD PTR [esi]
  420f07:	shl    BYTE PTR [edi+eax*8],0xc5
  420f0b:	sti    
  420f0c:	push   esp
  420f0d:	and    eax,0x31c9a62d
  420f12:	rol    DWORD PTR [ebx],1
  420f14:	test   BYTE PTR [eax+0x56c93391],dl
  420f1a:	adc    BYTE PTR [edi+0x4ef77811],cl
  420f20:	sbb    DWORD PTR [esi+0x7f],esp
  420f23:	hlt    
  420f24:	loopne 0x420f1a
  420f26:	dec    ecx
  420f27:	mov    dh,0x9f
  420f29:	cmp    al,0x5b
  420f2b:	sub    edi,DWORD PTR [edi+ecx*1+0x2b]
  420f2f:	aam    0xc8
  420f31:	fld    QWORD PTR [ebx+0x14]
  420f34:	jns    0x420f97
  420f36:	mov    dl,0xea
  420f38:	jns    0x420f74
  420f3a:	sbb    BYTE PTR [ecx-0x3d0a8c6d],bh
  420f40:	sub    DWORD PTR [edx],edi
  420f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f43:	lock bound ecx,QWORD PTR [edx-0x567775c5]
  420f4a:	push   edx
  420f4b:	ror    BYTE PTR [esp+eiz*8+0x55],0xa8
  420f50:	(bad)  
  420f51:	leave  
  420f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f53:	sahf   
  420f54:	mov    ss:0x81b40b89,eax
  420f5a:	lds    edi,FWORD PTR [eax-0x48bba9c6]
  420f60:	(bad)  
  420f61:	mov    DWORD PTR [esi-0x12703660],ebx
  420f67:	xlat   BYTE PTR ds:[ebx]
  420f68:	(bad)  
  420f69:	int3   
  420f6a:	xchg   ebp,eax
  420f6b:	out    dx,al
  420f6c:	adc    al,0x1e
  420f6e:	push   ds
  420f6f:	data16 fstp TBYTE PTR ds:0xb03823e7
  420f76:	ret    
  420f77:	xchg   edx,eax
  420f78:	js     0x420f90
  420f7a:	call   0x7c6a:0x3e39625a
  420f81:	or     ch,BYTE PTR [ecx-0x36]
  420f84:	adc    BYTE PTR [ecx+0x26],bl
  420f87:	lea    edx,[eax+ebx*8]
  420f8a:	mov    eax,esp
  420f8c:	rol    BYTE PTR [esi-0x9],1
  420f8f:	nop
  420f90:	cmp    BYTE PTR [ebx],0xcc
  420f93:	in     al,dx
  420f94:	pop    ss
  420f95:	retf   0xf0ab
  420f98:	dec    edx
  420f99:	xchg   edx,eax
  420f9a:	jb     0x420f8a
  420f9c:	sub    esi,ebp
  420f9e:	sub    al,0xe
  420fa0:	(bad)  
  420fa1:	jl     0x420fc1
  420fa3:	cmp    eax,ebp
  420fa5:	lea    esi,[eax-0x693e7177]
  420fab:	jns    0x420f75
  420fad:	xchg   DWORD PTR [eax+0x7baaea8e],eax
  420fb3:	dec    esp
  420fb4:	pop    ebx
  420fb5:	fs mov al,0xee
  420fb8:	sbb    eax,0xc0fb786d
  420fbd:	dec    ecx
  420fbe:	mov    ah,BYTE PTR [edi]
  420fc0:	int    0x9
  420fc2:	jmp    0x5c2d:0x71eb2efd
  420fc9:	das    
  420fca:	test   BYTE PTR [ecx+0x5b],ah
  420fcd:	and    BYTE PTR [eax+0x5],bl
  420fd0:	lahf   
  420fd1:	ret    
  420fd2:	outs   dx,BYTE PTR ds:[esi]
  420fd3:	add    edx,edx
  420fd5:	pop    ecx
  420fd6:	aad    0x12
  420fd8:	mov    ch,0xbc
  420fda:	data16 int3 
  420fdc:	out    0xfd,eax
  420fde:	ins    DWORD PTR es:[edi],dx
  420fdf:	pop    eax
  420fe0:	ins    DWORD PTR es:[edi],dx
  420fe1:	ret    
  420fe2:	leave  
  420fe3:	shr    DWORD PTR [edx],0xa6
  420fe6:	mov    WORD PTR [esi],fs
  420fe8:	dec    eax
  420fe9:	push   ecx
  420fea:	pop    edi
  420feb:	outs   dx,BYTE PTR ds:[esi]
  420fec:	fidiv  WORD PTR [edi+0x2e00e2ba]
  420ff2:	loopne 0x420fd4
  420ff4:	pushf  
  420ff5:	int3   
  420ff6:	jp     0x421054
  420ff8:	repz dec ecx
  420ffa:	xor    ch,bh
  420ffc:	cwde   
  420ffd:	push   es
  420ffe:	jl     0x420fc2
  421000:	or     esi,DWORD PTR [edx+0x28]
  421003:	inc    edx
  421004:	lea    esp,[edx-0x2f453a59]
  42100a:	nop    eax
  42100d:	imul   cl
  42100f:	dec    ecx
  421010:	dec    edi
  421011:	gs xchg ecx,eax
  421013:	gs pop eax
  421015:	push   edx
  421016:	or     bh,BYTE PTR [edi]
  421018:	pop    eax
  42101a:	mov    esi,0x49da8d63
  42101f:	xchg   edi,eax
  421020:	cld    
  421021:	test   al,0xb9
  421023:	out    dx,eax
  421024:	arpl   ax,cx
  421026:	gs enter 0x9a4d,0x2
  42102b:	sub    eax,0x9dbb4d1c
  421030:	cld    
  421031:	sbb    ebx,DWORD PTR [esi+0x69375cf3]
  421037:	add    ebx,DWORD PTR [ecx]
  421039:	test   eax,0x972fb72c
  42103e:	pop    edi
  42103f:	xor    eax,0x7daf942c
  421044:	mov    esi,0xe160c85c
  421049:	jb     0x420fd9
  42104b:	add    ecx,DWORD PTR [edx+0x54]
  42104e:	push   ecx
  42104f:	jbe    0x421012
  421051:	(bad)  
  421052:	stc    
  421053:	adc    eax,0x8b2146af
  421058:	rcr    eax,0x6e
  42105b:	mov    DWORD PTR [eax+0x2b],ebx
  42105e:	cmp    eax,0x9a2ad286
  421063:	push   edx
  421064:	test   BYTE PTR [ecx+0x4a8089d6],al
  42106a:	dec    edx
  42106b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42106c:	xchg   esi,eax
  42106d:	sar    bl,0x73
  421070:	bound  eax,QWORD PTR [esi]
  421072:	jnp    0x4210c5
  421074:	out    0x70,eax
  421076:	inc    ebx
  421077:	sbb    ebx,DWORD PTR [ecx-0x2dd4e95a]
  42107d:	mov    eax,edx
  42107f:	and    dh,BYTE PTR ds:0xaf48eee2
  421085:	rsm    
  421087:	cmp    cl,BYTE PTR [ecx+eiz*8-0x61]
  42108b:	mov    ds:0x781d677b,al
  421090:	add    BYTE PTR [edi-0x2b70fdf4],ah
  421096:	cmp    DWORD PTR [ecx+0x30],0x6ffcd31c
  42109d:	dec    ebp
  42109e:	test   eax,0xc103f833
  4210a3:	mov    ebx,0xb25dcd99
  4210a8:	loop   0x42107a
  4210aa:	mov    esi,0xe4aae172
  4210af:	in     eax,0x9d
  4210b1:	cmp    dh,bl
  4210b3:	adc    BYTE PTR [edi],bl
  4210b5:	sub    al,0x5e
  4210b7:	xor    al,0x17
  4210b9:	call   0xb94931ca
  4210be:	js     0x4210d4
  4210c0:	push   edx
  4210c1:	pop    ecx
  4210c2:	(bad)  
  4210c3:	push   esi
  4210c4:	mov    dl,0x7b
  4210c6:	lods   eax,DWORD PTR ds:[esi]
  4210c7:	push   esp
  4210c8:	jnp    0x421103
  4210ca:	nop
  4210cb:	add    ebx,DWORD PTR [esi]
  4210cd:	or     esi,DWORD PTR [esi-0x42]
  4210d0:	test   eax,0xb996489c
  4210d5:	rcr    BYTE PTR [ebx-0x17f00706],0x73
  4210dc:	in     eax,0xd4
  4210de:	jecxz  0x421153
  4210e0:	popa   
  4210e1:	add    bl,BYTE PTR [ebx-0x242b547a]
  4210e7:	xchg   DWORD PTR [ecx-0x24],esp
  4210ea:	enter  0xb1dd,0xbb
  4210ee:	or     cl,BYTE PTR [ecx+0x49]
  4210f1:	xor    eax,0x647f5724
  4210f6:	sbb    ecx,DWORD PTR [ebp+0x12]
  4210f9:	(bad)  
  4210fa:	fsubr  DWORD PTR ds:0x26eec0d0
  421100:	pop    edi
  421101:	popf   
  421102:	ins    DWORD PTR es:[edi],dx
  421103:	repz ja 0x42117d
  421106:	and    eax,0x7c6dec3e
  42110b:	xor    ebp,DWORD PTR [eax]
  42110d:	add    ebx,DWORD PTR [eax]
  42110f:	xor    DWORD PTR [ebx-0x630d6b40],eax
  421115:	fnsave [ecx-0xbcf7b36]
  42111b:	ja     0x42110a
  42111d:	ret    
  42111e:	mov    DWORD PTR [ebp+0x27],ebx
  421121:	retf   0xb502
  421124:	pop    ebp
  421125:	fsubp  st(2),st
  421127:	call   0x6a6c:0xfd98e1af
  42112e:	stos   DWORD PTR es:[edi],eax
  42112f:	out    0x7d,al
  421131:	(bad)  
  421132:	jae    0x42118f
  421134:	aam    0x6f
  421136:	xor    esp,DWORD PTR ds:0xbaae4de4
  42113c:	addr16 mov cl,0x92
  42113f:	inc    ecx
  421140:	test   al,0xc3
  421142:	cmp    BYTE PTR [edi+ebx*4+0x6a038be8],0x6
  42114a:	mov    WORD PTR [eax],ds
  42114c:	pop    ebx
  42114d:	push   ds
  42114e:	stc    
  42114f:	mov    WORD PTR [edi+eiz*2+0x13],?
  421153:	popf   
  421154:	jle    0x4210d8
  421156:	arpl   WORD PTR [ebx],ax
  421158:	adc    eax,0x71aea8b2
  42115d:	lahf   
  42115e:	sub    DWORD PTR [esp+ebp*1+0x3c],ebp
  421162:	sub    edi,esi
  421164:	and    al,0x8e
  421167:	cli    
  421168:	fwait
  421169:	cmp    BYTE PTR [esi-0x17a0668e],cl
  42116f:	and    eax,0x9b9bab88
  421174:	mov    dh,0x14
  421176:	rcr    DWORD PTR [ecx-0x5f],cl
  421179:	outs   dx,BYTE PTR ds:[esi]
  42117a:	sar    BYTE PTR [ecx],1
  42117c:	pop    ss
  42117d:	add    BYTE PTR [eax],al
  42117f:	add    BYTE PTR [eax],al
  421181:	add    BYTE PTR [edi+0x5b2a13cf],al
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [ecx-0x67e985fa],ah
  421193:	mov    eax,DWORD PTR [ecx]
  421195:	add    bl,dh
  421197:	add    al,0x0
  421199:	add    BYTE PTR ds:0xc8f8c15d,dh
  42119f:	mov    fs,WORD PTR [esi-0x57]
  4211a2:	aam    0x5e
  4211a4:	and    al,0xf4
  4211a6:	adc    bl,ah
  4211a8:	retf   0xc88
  4211ab:	lea    esp,ds:0x47b51f72
  4211b1:	sub    al,0x95
  4211b3:	int    0xb0
  4211b5:	pcmpgtd mm0,QWORD PTR [ebx-0x5c]
  4211b9:	mov    ch,bh
  4211bb:	addr16 or eax,0x51302dec
  4211c1:	xor    ebx,DWORD PTR [edx]
  4211c3:	pop    edi
  4211c4:	xor    DWORD PTR [esi+0x7cf4d87],0x17f01c8f
  4211ce:	mov    ds:0x2d78d1b6,eax
  4211d3:	pop    edx
  4211d4:	xor    al,0x19
  4211d6:	mov    edx,0x1d0c4057
  4211db:	mov    dh,0x8
  4211dd:	xor    DWORD PTR [eax-0x19],eax
  4211e0:	cld    
  4211e1:	inc    edi
  4211e2:	lods   al,BYTE PTR ds:[esi]
  4211e3:	push   0x4a
  4211e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211e6:	and    ebp,ecx
  4211e8:	jge    0x4211b3
  4211ea:	retf   
  4211eb:	push   cs
  4211ec:	sub    bl,BYTE PTR [edi]
  4211ee:	in     eax,0xb
  4211f0:	push   ebp
  4211f1:	mov    eax,ds:0x60c79e30
  4211f6:	cmp    al,0x8
  4211f8:	leave  
  4211f9:	pop    ss
  4211fa:	loop   0x42123e
  4211fc:	xchg   ebx,eax
  4211fd:	xor    al,0x21
  4211ff:	ficomp WORD PTR [ebx+0x59505910]
  421205:	pop    ds
  421206:	sub    eax,eax
  421208:	and    edx,edx
  42120a:	mov    esp,0x548bf34
  42120f:	or     dh,BYTE PTR [ebx-0x1a0d7f47]
  421215:	or     DWORD PTR [eax],esi
  421217:	sbb    al,0x50
  421219:	mov    eax,0x34c4b6ef
  42121e:	add    cl,BYTE PTR [edi-0xc]
  421221:	add    DWORD PTR [ebp+0x7a431ab9],ebx
  421227:	jne    0x42121f
  421229:	mov    eax,ds:0x6d69aba2
  42122e:	rcl    BYTE PTR [edi-0x6d10586a],0x2a
  421235:	pop    esp
  421236:	sbb    dl,ch
  421238:	push   ecx
  421239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42123a:	js     0x4211d3
  42123c:	jle    0x4211ed
  42123e:	pop    esp
  42123f:	add    eax,0x7240a701
  421244:	loop   0x4212b8
  421246:	adc    eax,0xe20f57e9
  42124b:	(bad)  
  42124c:	(bad)  
  42124d:	hlt    
  42124e:	and    BYTE PTR [ebx-0x30],cl
  421251:	(bad)  
  421253:	es mov eax,0x333c4c8e
  421259:	cli    
  42125a:	rcl    ebp,cl
  42125c:	sub    ah,BYTE PTR [edi+0x62611d88]
  421262:	add    bl,dh
  421264:	repnz push es
  421266:	jge    0x421241
  421268:	dec    ecx
  421269:	mov    cl,0x26
  42126b:	jae    0x421217
  42126d:	adc    eax,0x5544cf4c
  421272:	adc    dl,cl
  421274:	dec    ebx
  421275:	das    
  421276:	aaa    
  421277:	data16 xor ah,ch
  42127a:	stc    
  42127b:	hlt    
  42127c:	push   cs
  42127d:	cmp    al,0x15
  42127f:	std    
  421280:	sub    edi,DWORD PTR [ebx]
  421282:	adc    BYTE PTR [edx+0x78],bh
  421285:	repz into 
  421287:	mov    bl,0x91
  421289:	fidivr DWORD PTR [esp+eax*1]
  42128c:	aad    0xec
  42128e:	adc    ecx,eax
  421290:	and    bl,BYTE PTR [ebx+0x53edd65]
  421296:	inc    ebp
  421297:	add    esp,esp
  421299:	fsubr  st,st(0)
  42129b:	sub    edx,esp
  42129d:	push   ebx
  42129e:	aas    
  42129f:	pop    ss
  4212a0:	out    0xc4,al
  4212a2:	test   ch,bl
  4212a4:	test   eax,0x7d6b7c63
  4212aa:	push   0x59a83dc8
  4212af:	mul    BYTE PTR [ebx]
  4212b1:	pushf  
  4212b2:	leave  
  4212b3:	test   DWORD PTR [esi],esi
  4212b5:	xchg   edx,eax
  4212b6:	aam    0xab
  4212b8:	mov    dh,0x13
  4212ba:	rol    DWORD PTR [ecx],1
  4212bc:	std    
  4212bd:	(bad)  
  4212be:	in     al,0xaf
  4212c0:	icebp  
  4212c1:	ins    DWORD PTR es:[edi],dx
  4212c2:	(bad)  
  4212c3:	lods   eax,DWORD PTR ds:[esi]
  4212c4:	shl    BYTE PTR [eax+0x3c58f590],cl
  4212ca:	xor    bh,BYTE PTR [esi+0xef7b80a]
  4212d0:	mov    al,ds:0xa49e9ed1
  4212d5:	fldenv [ebx]
  4212d7:	cs (bad) 
  4212d9:	icebp  
  4212da:	dec    edx
  4212db:	gs sub eax,0x4dfaa241
  4212e1:	pop    edx
  4212e2:	pop    ss
  4212e3:	xchg   ebx,eax
  4212e4:	repz inc ebp
  4212e6:	(bad)  
  4212e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212e8:	sqrtps xmm0,XMMWORD PTR [ebx+0x2a]
  4212ec:	jno    0x42131d
  4212ee:	jno    0x421294
  4212f0:	and    BYTE PTR [esi],bl
  4212f2:	(bad)  
  4212f3:	out    0xe,al
  4212f5:	ins    BYTE PTR es:[edi],dx
  4212f6:	or     al,0x57
  4212f8:	pop    eax
  4212f9:	pushf  
  4212fa:	push   esi
  4212fb:	xor    edx,DWORD PTR ss:[bp+di-0x4d8e]
  421301:	inc    esi
  421302:	jno    0x421367
  421304:	jae    0x421293
  421306:	je     0x4212d0
  421308:	aad    0x65
  42130a:	mov    al,0x4
  42130c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42130d:	in     eax,dx
  42130e:	loope  0x421338
  421310:	lods   ax,WORD PTR ds:[esi]
  421312:	adc    eax,0x890486c2
  421317:	ins    DWORD PTR es:[edi],dx
  421318:	push   cs
  421319:	jp     0x42129f
  42131b:	mov    ebp,DWORD PTR [eax-0x60]
  42131e:	dec    ebx
  42131f:	cs pop es
  421321:	jno    0x42131f
  421323:	fmul   QWORD PTR [ebx+0x3cb51983]
  421329:	inc    edx
  42132a:	mov    ah,BYTE PTR [ecx]
  42132c:	xchg   esp,eax
  42132d:	fidivr DWORD PTR [ebx+0x18]
  421330:	mov    eax,0x3dd8c2e3
  421335:	dec    BYTE PTR ds:0x6800d342
  42133b:	add    ecx,DWORD PTR [eax+0x2b6f8056]
  421341:	retf   0x740d
  421344:	jmp    0x398c894c
  421349:	out    dx,al
  42134a:	repnz cs scas al,BYTE PTR es:[edi]
  42134d:	pusha  
  42134e:	rcl    edi,1
  421350:	pop    edx
  421351:	add    BYTE PTR [edi],0x85
  421354:	sti    
  421355:	loopne 0x4213bf
  421357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421358:	xor    al,0xda
  42135a:	jns    0x421318
  42135c:	ret    
  42135d:	mov    bh,0x78
  42135f:	adc    eax,0x12569f28
  421364:	cmp    dh,BYTE PTR [ebp+0x2c]
  421367:	in     al,dx
  421368:	loopne 0x4213bc
  42136a:	mov    ds:0x58b68199,al
  42136f:	pop    eax
  421370:	inc    DWORD PTR [ebp-0xdc1762]
  421376:	mov    WORD PTR [ecx+0x2a],gs
  421379:	push   0x42
  42137b:	les    ecx,FWORD PTR [esi]
  42137d:	mov    dl,0xb5
  42137f:	mov    WORD PTR [ebx-0x3886b2b8],cs
  421385:	jmp    0x28a0:0xb24f4072
  42138c:	loopne 0x4213c6
  42138e:	sbb    al,0x79
  421390:	pushf  
  421391:	es (bad) 
  421393:	fiadd  DWORD PTR [edx]
  421395:	enter  0x39aa,0x1a
  421399:	pop    ebp
  42139a:	add    al,BYTE PTR [esi]
  42139c:	push   esi
  42139d:	loopne 0x4213df
  42139f:	in     al,0x5d
  4213a1:	jmp    0x1c07:0xc1bc5e91
  4213a8:	cmp    al,0xe3
  4213aa:	adc    eax,0x83a17772
  4213af:	push   ecx
  4213b0:	lahf   
  4213b1:	adc    esp,edi
  4213b3:	jne    0x421352
  4213b5:	mov    al,0x9
  4213b7:	in     al,dx
  4213b8:	out    dx,al
  4213b9:	in     eax,0x6f
  4213bb:	pop    esi
  4213bc:	cmp    dh,BYTE PTR [ecx]
  4213be:	scas   al,BYTE PTR es:[edi]
  4213bf:	xchg   ebx,eax
  4213c0:	and    al,0x2
  4213c2:	pop    ebp
  4213c3:	test   BYTE PTR [ecx+0x7e],0xd
  4213c7:	int    0x53
  4213c9:	fld    TBYTE PTR [ecx-0x61]
  4213cc:	fiadd  DWORD PTR [edi]
  4213ce:	or     al,0x1a
  4213d0:	call   0xbaac:0xeff46ab7
  4213d7:	vpsraw ymm6,ymm0,XMMWORD PTR ds:[edi+0x71]
  4213dd:	mov    BYTE PTR [edi+0x76379783],dl
  4213e3:	ficom  DWORD PTR [ecx-0x3]
  4213e6:	inc    esp
  4213e7:	out    dx,eax
  4213e8:	xor    al,BYTE PTR [edx]
  4213ea:	mov    esi,0x5ab7c7d3
  4213ef:	mov    ch,0xe6
  4213f1:	mov    edi,0xafcc2842
  4213f6:	push   esp
  4213f7:	jecxz  0x42139f
  4213f9:	(bad)  
  4213fa:	pop    ds
  4213fb:	arpl   WORD PTR [eax-0x3a],bx
  4213fe:	ror    BYTE PTR [ecx-0x3d2590ab],cl
  421404:	and    al,0x8e
  421406:	ret    0xcb38
  421409:	and    DWORD PTR [ebp+0x6d7f14c2],ebx
  42140f:	xor    BYTE PTR [esi-0x685db08e],cl
  421415:	aas    
  421416:	push   esi
  421417:	push   esi
  421418:	mov    al,ds:0xae2b0da5
  42141d:	mov    cs,WORD PTR [edx-0x1a]
  421420:	bound  esi,QWORD PTR [eax+0x1b]
  421423:	cmp    BYTE PTR [esi],0x5e
  421426:	push   0xffffffd6
  421428:	or     ah,al
  42142a:	test   DWORD PTR [edi-0x57],edx
  42142d:	out    0xd9,al
  42142f:	push   ds
  421430:	inc    esp
  421431:	test   BYTE PTR [ebx],0xc7
  421434:	and    ecx,esp
  421436:	ja     0x421487
  421438:	mov    ds:0xad1ca6,eax
  42143d:	adc    BYTE PTR [ebp-0x20],dh
  421440:	mov    ds:0x7d29579d,al
  421445:	jle    0x42142d
  421447:	adc    ecx,DWORD PTR [ebx+0x4f]
  42144a:	test   DWORD PTR [esi],ebx
  42144c:	push   ebx
  42144d:	inc    esp
  42144e:	xchg   esi,eax
  42144f:	ss int 0xa7
  421452:	jnp    0x42146d
  421454:	adc    dl,cl
  421456:	addr16 xchg esp,eax
  421458:	sub    dl,BYTE PTR [esi+0x7312667e]
  42145e:	jne    0x4213fa
  421460:	xor    cl,BYTE PTR [esi-0xdc55f09]
  421466:	dec    ebx
  421467:	xchg   edi,eax
  421468:	mov    ds:0x5019946e,al
  42146d:	push   edx
  42146e:	inc    ebx
  42146f:	xlat   BYTE PTR ds:[ebx]
  421470:	ficom  DWORD PTR [edi]
  421472:	xchg   edi,eax
  421473:	push   cs
  421474:	cld    
  421475:	sti    
  421476:	mov    eax,ds:0x8547a210
  42147b:	loopne 0x4214a4
  42147d:	mov    ecx,0x4bb67cbf
  421482:	jmp    0x4214b1
  421484:	in     al,dx
  421485:	cli    
  421486:	xor    bh,dh
  421488:	jbe    0x42140e
  42148a:	(bad)  [eax-0x70]
  42148d:	push   edi
  42148e:	neg    al
  421490:	pushf  
  421491:	stos   DWORD PTR es:[edi],eax
  421492:	adc    al,BYTE PTR [edi-0x8f1efb5]
  421498:	cmp    BYTE PTR [ebx],ch
  42149a:	fidivr DWORD PTR [ecx]
  42149c:	stos   DWORD PTR es:[edi],eax
  42149d:	clc    
  42149e:	or     cl,dh
  4214a0:	fsubr  st(2),st
  4214a2:	shl    BYTE PTR [esi+eiz*8],0x20
  4214a6:	shl    ah,0x92
  4214a9:	push   esi
  4214aa:	nop
  4214ab:	fstp   TBYTE PTR ds:0xa61b6977
  4214b1:	out    dx,al
  4214b2:	out    0x9,eax
  4214b4:	stc    
  4214b5:	jmp    0x3f7b:0xb87966b9
  4214bc:	add    BYTE PTR [eax-0x26a9b5dc],bl
  4214c2:	sub    eax,esp
  4214c4:	cdq    
  4214c5:	push   esi
  4214c6:	aas    
  4214c7:	leave  
  4214c8:	scas   eax,DWORD PTR es:[edi]
  4214c9:	jge    0x421477
  4214cb:	fs xchg ebx,eax
  4214cd:	sahf   
  4214ce:	jmp    0x42149a
  4214d0:	jnp    0x4214c2
  4214d2:	pop    ecx
  4214d3:	rcl    DWORD PTR [eax-0x6],cl
  4214d6:	jge    0x421474
  4214d8:	mov    esp,0x179ab938
  4214dd:	xchg   edx,eax
  4214de:	push   es
  4214df:	or     BYTE PTR fs:[ecx-0x47c15a00],al
  4214e6:	jmp    0x42148f
  4214e8:	pop    ebx
  4214e9:	ins    BYTE PTR es:[edi],dx
  4214ea:	ror    DWORD PTR [ecx],cl
  4214ec:	not    DWORD PTR [ecx+0x10]
  4214ef:	leavew 
  4214f1:	fadd   QWORD PTR [eax+0x6]
  4214f4:	sbb    cl,ah
  4214f6:	fwait
  4214f7:	xlat   BYTE PTR ds:[ebx]
  4214f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214f9:	push   ebx
  4214fa:	sbb    eax,0xaef9f10b
  4214ff:	cmc    
  421500:	aas    
  421501:	adc    ebx,DWORD PTR [eax+eax*2-0x32236cfa]
  421508:	imul   ebp,DWORD PTR [eax],0x3f
  42150b:	mov    dl,0x68
  42150d:	fstp   TBYTE PTR [ecx+0x6a2dbaa7]
  421513:	outs   dx,BYTE PTR ds:[esi]
  421514:	mov    esp,0x25b77bf
  421519:	xor    edx,DWORD PTR [eax]
  42151b:	clc    
  42151c:	popa   
  42151d:	in     al,dx
  42151e:	(bad)  
  42151f:	je     0x421528
  421521:	test   al,0xcb
  421523:	outs   dx,DWORD PTR ds:[esi]
  421524:	xor    al,0x56
  421526:	mov    bh,0xb0
  421528:	or     DWORD PTR [ecx+0xd60310c],esp
  42152e:	stos   BYTE PTR es:[edi],al
  42152f:	cmp    esp,esp
  421531:	xchg   ecx,eax
  421532:	shr    DWORD PTR [edi-0x12],0xa1
  421536:	sbb    ebx,esp
  421538:	and    al,bl
  42153a:	mov    dh,0xaf
  42153c:	xchg   ecx,eax
  42153d:	dec    eax
  42153e:	les    ebx,FWORD PTR [edi-0x59640685]
  421544:	or     al,0x86
  421546:	adc    esp,ebx
  421548:	retf   0xf52f
  42154b:	pop    ebp
  42154c:	adc    eax,0x97b0a370
  421551:	test   al,0xde
  421553:	sub    ebx,DWORD PTR [edi]
  421555:	dec    edx
  421556:	(bad)  
  421557:	mov    WORD PTR ds:0x943b4019,es
  42155d:	push   DWORD PTR [edx]
  42155f:	fcom   QWORD PTR [ebp+0x33e8730c]
  421565:	popa   
  421566:	pop    edx
  421567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421568:	fist   WORD PTR [eax]
  42156a:	daa    
  42156b:	leave  
  42156c:	icebp  
  42156d:	in     al,dx
  42156e:	jne    0x42158a
  421570:	rcr    DWORD PTR [ebx-0x54982a5a],1
  421576:	enter  0xa48f,0xec
  42157a:	out    dx,al
  42157b:	xchg   ebx,eax
  42157c:	xchg   ebp,eax
  42157d:	inc    edx
  42157e:	cmp    edi,esp
  421580:	adc    eax,0x2b5fa7af
  421585:	xchg   esi,eax
  421586:	cli    
  421587:	ds add bl,0xdd
  42158b:	adc    ecx,DWORD PTR fs:[ecx-0x7651dfdd]
  421592:	inc    esp
  421593:	data16 daa 
  421595:	sbb    ah,BYTE PTR [eax-0x5d]
  421598:	retf   
  421599:	in     eax,0x89
  42159b:	iret   
  42159c:	cdq    
  42159d:	jae    0x42153c
  42159f:	js     0x421593
  4215a1:	ins    BYTE PTR es:[edi],dx
  4215a2:	jae    0x4215a1
  4215a4:	(bad)  
  4215a5:	pop    ss
  4215a6:	das    
  4215a7:	jnp    0x4215cf
  4215a9:	push   ds
  4215aa:	push   ss
  4215ab:	popa   
  4215ac:	cmp    BYTE PTR [ebx+0x76],bh
  4215af:	mov    cl,0x50
  4215b1:	sbb    al,0x9b
  4215b3:	and    eax,0x4527a276
  4215b8:	sar    BYTE PTR [ecx],1
  4215ba:	xchg   esp,eax
  4215bb:	dec    edx
  4215bc:	or     DWORD PTR ds:0xba15812,edx
  4215c2:	mov    ah,0x9f
  4215c4:	jmp    0x42154d
  4215c6:	xchg   ebx,eax
  4215c7:	mov    ebx,0x37761b5a
  4215cc:	fdivr  st,st(3)
  4215ce:	xchg   ebx,eax
  4215cf:	mov    ds:0x995999a2,al
  4215d4:	cwde   
  4215d5:	mov    al,0xa6
  4215d7:	stos   DWORD PTR es:[edi],eax
  4215d8:	pop    esi
  4215da:	jmp    0xddc3:0x76cdd5c4
  4215e1:	xor    ecx,ebp
  4215e3:	push   0xf
  4215e5:	das    
  4215e6:	popa   
  4215e7:	lea    esi,[ebx]
  4215e9:	add    al,0x79
  4215eb:	inc    DWORD PTR [edi+0x175cfe6f]
  4215f1:	ror    DWORD PTR [eax+0x41c63306],0x80
  4215f8:	jge    0x42161c
  4215fa:	(bad)  
  4215fb:	out    dx,al
  4215fc:	fisttp QWORD PTR [ecx-0x1]
  4215ff:	es jno 0x42161f
  421602:	mov    eax,ds:0xa22ef520
  421607:	cmp    edi,esp
  421609:	pop    esi
  42160a:	pop    ebx
  42160b:	dec    ecx
  42160c:	adc    BYTE PTR [eax-0x6a],cl
  42160f:	cwde   
  421610:	fisttp DWORD PTR [ebp+0x79daea76]
  421616:	(bad)  
  421617:	jecxz  0x4215b8
  421619:	inc    ebp
  42161a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42161b:	out    dx,al
  42161c:	sbb    ecx,ebp
  42161e:	fldcw  WORD PTR [edi+edx*1+0x702e85a4]
  421625:	loopne 0x421677
  421627:	fnstsw WORD PTR ds:0x6e9b3a3d
  42162d:	dec    esp
  42162e:	pop    ebp
  42162f:	sub    ah,BYTE PTR [eax+ebx*4]
  421632:	lods   eax,DWORD PTR ds:[esi]
  421633:	xor    BYTE PTR [ebx],cl
  421635:	mov    bl,0x20
  421637:	xchg   edi,eax
  421638:	xor    BYTE PTR [edi+ebx*2-0x120150d2],bh
  42163f:	and    eax,0x2d320aa6
  421644:	mov    ecx,DWORD PTR [ebx-0x2a]
  421647:	cmp    BYTE PTR [ebp+0x1f],dh
  42164a:	stos   BYTE PTR es:[edi],al
  42164b:	sub    DWORD PTR [ecx],0xa45a6d00
  421651:	inc    bl
  421653:	push   edi
  421654:	fst    QWORD PTR [ebx]
  421656:	mov    bl,0xee
  421658:	or     ch,BYTE PTR [ebp+0x14]
  42165b:	push   cs
  42165c:	icebp  
  42165d:	mov    al,ds:0x58fe659f
  421662:	push   eax
  421663:	mov    ah,0xb6
  421665:	nop
  421666:	mov    ecx,0xf08bd28a
  42166b:	push   ds
  42166c:	retf   
  42166d:	mov    bh,0xde
  42166f:	fdiv   st(4),st
  421671:	dec    BYTE PTR [edi]
  421673:	dec    esp
  421674:	into   
  421675:	and    DWORD PTR [ebx+0x53983ca4],ebx
  42167b:	test   eax,0x6a0424aa
  421680:	xor    eax,DWORD PTR ds:0x313a2ca9
  421686:	adc    al,BYTE PTR [edx]
  421688:	mov    ah,0x67
  42168a:	and    edx,DWORD PTR [edi]
  42168c:	daa    
  42168d:	add    BYTE PTR [eax],al
  42168f:	add    BYTE PTR [eax],al
  421691:	add    bl,bh
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x1952ddc6
  4216a1:	enter  0x908b,0x1
  4216a5:	add    bl,dh
  4216a7:	add    al,0x0
  4216a9:	add    dh,bh
  4216ab:	outs   dx,DWORD PTR ds:[esi]
  4216ac:	cs or  eax,0xe62e76fe
  4216b2:	fwait
  4216b3:	jmp    0xff16:0x4ec4b9b9
  4216ba:	mov    fs,WORD PTR [edi]
  4216bc:	shl    BYTE PTR [ebp+0x4af4bbd8],1
  4216c2:	repz cld 
  4216c4:	loop   0x4216fc
  4216c6:	shl    bh,cl
  4216c8:	sub    dh,BYTE PTR [ebp+esi*1-0x5c]
  4216cc:	cwde   
  4216cd:	jl     0x421684
  4216cf:	add    eax,0xdc70cafa
  4216d4:	mov    edx,0x54a7f27
  4216d9:	outs   dx,BYTE PTR ds:[esi]
  4216da:	call   DWORD PTR [ebp+0x1938f0ca]
  4216e0:	xchg   edi,eax
  4216e1:	dec    edi
  4216e2:	ins    DWORD PTR es:[edi],dx
  4216e3:	or     eax,0x90102bbd
  4216e8:	popf   
  4216e9:	lahf   
  4216ea:	sub    eax,0xe3539696
  4216ef:	ror    DWORD PTR [esi],1
  4216f1:	aaa    
  4216f2:	je     0x42170d
  4216f4:	popf   
  4216f5:	cmp    ecx,DWORD PTR [ebx-0x57d02aaf]
  4216fb:	gs jo  0x4216d1
  4216fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216ff:	mov    ebx,0x81ba4f67
  421704:	loope  0x4216df
  421706:	xchg   esp,eax
  421707:	adc    BYTE PTR [esp+ebx*1-0x25888bf8],ah
  42170e:	cmp    eax,0x518d78e0
  421713:	sbb    eax,0x3eb4a24c
  421718:	dec    esp
  421719:	sub    al,al
  42171b:	lds    esp,FWORD PTR [eax]
  42171d:	retf   
  42171e:	dec    ebp
  42171f:	sar    BYTE PTR [esi],1
  421721:	mov    edx,0x9e7d28d2
  421726:	mov    eax,0x10405323
  42172b:	push   cs
  42172c:	mov    esp,DWORD PTR [eax]
  42172e:	and    eax,edi
  421730:	outs   dx,BYTE PTR ds:[esi]
  421731:	pop    edi
  421732:	adc    eax,0x30d6227a
  421737:	cli    
  421738:	mov    eax,ds:0x710d78e5
  42173d:	dec    esp
  42173e:	stos   BYTE PTR es:[edi],al
  42173f:	inc    ecx
  421740:	mov    bh,0x93
  421742:	inc    ebx
  421743:	pop    edx
  421744:	(bad)  
  421745:	jge    0x4217b1
  421747:	push   cs
  421748:	ins    DWORD PTR es:[edi],dx
  421749:	jb     0x421701
  42174b:	jbe    0x421738
  42174d:	adc    dl,ah
  42174f:	mov    cl,BYTE PTR es:[ebx+0x6198cdc3]
  421756:	(bad)  
  421757:	pop    ds
  421758:	adc    esp,DWORD PTR [ebx-0x7d255fce]
  42175e:	std    
  42175f:	in     eax,dx
  421760:	ja     0x4217dc
  421762:	inc    edi
  421763:	xor    al,0xdb
  421765:	adc    DWORD PTR [edx+0x18],0x73
  421769:	adc    al,0xd9
  42176b:	pop    eax
  42176c:	inc    esi
  42176d:	stos   BYTE PTR es:[edi],al
  42176e:	addr16 pop ecx
  421770:	dec    ebp
  421771:	int    0x0
  421773:	retf   0xb658
  421776:	xor    BYTE PTR [edx+edi*8],bh
  421779:	jne    0x42170a
  42177b:	add    al,0xa1
  42177d:	push   esp
  42177e:	inc    ecx
  42177f:	lea    eax,[edi-0x5aaf64f]
  421785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421786:	xor    DWORD PTR [edx+0x231f4619],edx
  42178c:	out    dx,eax
  42178d:	ret    0x2a12
  421790:	sbb    edi,DWORD PTR [ebp-0x56198833]
  421796:	das    
  421797:	cmp    esp,esi
  421799:	push   ss
  42179a:	xchg   DWORD PTR [edi-0x3c552694],edx
  4217a0:	dec    esi
  4217a1:	popa   
  4217a2:	xor    cl,bl
  4217a4:	ins    DWORD PTR es:[edi],dx
  4217a5:	popa   
  4217a6:	jecxz  0x421801
  4217a8:	mov    bh,BYTE PTR [ebx+0x3355f838]
  4217ae:	push   edi
  4217af:	push   esi
  4217b0:	mov    al,0x79
  4217b2:	sbb    al,0xa0
  4217b4:	ficom  WORD PTR [edi-0xe0b10b4]
  4217ba:	xlat   BYTE PTR ds:[ebx]
  4217bb:	pop    ebp
  4217bc:	jb     0x4217f0
  4217be:	add    al,0x1e
  4217c0:	shl    edx,1
  4217c2:	adc    ecx,DWORD PTR [ebp-0x5a]
  4217c5:	or     edx,edx
  4217c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217c8:	mov    ah,0x40
  4217ca:	or     DWORD PTR [ebx],ecx
  4217cc:	xchg   edx,ebx
  4217ce:	jg     0x421846
  4217d0:	cdq    
  4217d1:	sub    ebx,esp
  4217d3:	push   eax
  4217d4:	inc    ebp
  4217d5:	xchg   edx,eax
  4217d6:	imul   ebp,DWORD PTR ds:0xa28b38eb,0x29da1481
  4217e0:	nop
  4217e1:	add    edx,edi
  4217e3:	xchg   ebx,eax
  4217e4:	frstor [ebp+0x77313717]
  4217ea:	out    0x96,al
  4217ec:	shl    DWORD PTR [edx+0x62],0x1a
  4217f0:	xor    eax,0x4e177e81
  4217f5:	fdiv   DWORD PTR [edx-0x5f8d4d46]
  4217fb:	das    
  4217fc:	in     eax,0xae
  4217fe:	ror    DWORD PTR [eax+0x6a],cl
  421801:	addr16 sbb eax,0xe196d52d
  421807:	xor    dl,BYTE PTR [edx]
  421809:	inc    ecx
  42180a:	adc    cl,dl
  42180c:	cmp    bh,bh
  42180e:	push   ebp
  42180f:	nop    DWORD PTR [edi+eiz*1+0x6c801efa]
  421817:	(bad)  
  421818:	lods   al,BYTE PTR ds:[esi]
  421819:	xchg   ecx,eax
  42181a:	ss popf 
  42181c:	data16 cmp BYTE PTR ds:0x253b391c,al
  421823:	xchg   esi,eax
  421825:	mov    ecx,0x4556b53b
  42182a:	sar    dh,1
  42182c:	or     eax,0x911d87de
  421831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421832:	pushf  
  421833:	addr16 loope 0x421871
  421836:	and    BYTE PTR [ecx-0x540224f5],bh
  42183c:	mov    ebx,0x3502c35
  421841:	ret    
  421842:	xor    DWORD PTR [ecx],esp
  421844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421845:	mov    al,0xe4
  421847:	ins    DWORD PTR es:[edi],dx
  421848:	sub    BYTE PTR [ebp-0x2c],cl
  42184b:	sub    ch,bl
  42184d:	sbb    DWORD PTR [ecx+0x56],0xffffff96
  421851:	inc    edi
  421852:	fld    TBYTE PTR [ecx+0x6b]
  421855:	clc    
  421856:	shr    BYTE PTR [ebp-0x42],1
  421859:	push   esp
  42185a:	nop
  42185b:	fist   WORD PTR ds:0xeaf04f8a
  421861:	fsub   DWORD PTR [esi-0x46]
  421864:	add    al,BYTE PTR [esp+eax*1]
  421867:	dec    edx
  421868:	aas    
  421869:	cmp    eax,0x49b5ef1a
  42186e:	mov    edx,0xe43d5d49
  421873:	or     eax,0x7dfe8bc7
  421878:	inc    edi
  421879:	sbb    BYTE PTR [ebp+0x97acdc4],cl
  42187f:	fs pop esi
  421881:	pop    ss
  421882:	inc    DWORD PTR [esi]
  421884:	or     esp,esi
  421886:	push   esp
  421887:	push   ebp
  421888:	retf   0xa4f8
  42188b:	stos   BYTE PTR es:[edi],al
  42188c:	xor    BYTE PTR [eax-0x19],bh
  42188f:	pop    ecx
  421890:	pusha  
  421891:	xchg   ecx,eax
  421892:	push   esp
  421893:	lock imul edi,eax,0x81ac128d
  42189a:	mov    ah,BYTE PTR cs:[ebp+0x2588c4b9]
  4218a1:	sbb    eax,0x479c6f67
  4218a6:	daa    
  4218a7:	int    0x7c
  4218a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218aa:	mov    cl,0x40
  4218ac:	xor    BYTE PTR [esi],ah
  4218ae:	sbb    BYTE PTR [ebp+eiz*2-0x73b5677b],al
  4218b5:	int3   
  4218b6:	cmp    ebp,0x70
  4218b9:	mov    ebx,DWORD PTR [edx+0x47]
  4218bc:	imul   edi,eax,0xfa96865
  4218c2:	(bad)  
  4218c3:	in     eax,dx
  4218c4:	push   ds
  4218c5:	mov    cl,0x20
  4218c7:	ss xchg esp,eax
  4218c9:	mov    cl,0xca
  4218cb:	mov    al,ds:0xa73497bc
  4218d0:	and    ebp,DWORD PTR [ebp+0x71]
  4218d3:	dec    ecx
  4218d4:	add    al,0xd9
  4218d6:	sbb    esi,esp
  4218d8:	cmp    bl,cl
  4218da:	sub    bl,al
  4218dc:	ds mov bh,0xb8
  4218df:	push   0xffffffaf
  4218e1:	int    0x35
  4218e3:	xlat   BYTE PTR ds:[ebx]
  4218e4:	arpl   WORD PTR [esi+edi*2],ax
  4218e7:	or     ebp,DWORD PTR [ecx]
  4218e9:	out    dx,al
  4218ea:	sbb    DWORD PTR [eax],esp
  4218ec:	xlat   BYTE PTR ds:[ebx]
  4218ed:	push   esp
  4218ee:	xor    dh,BYTE PTR [eax]
  4218f0:	popf   
  4218f1:	mov    ch,0x24
  4218f3:	xchg   ebx,eax
  4218f4:	and    al,0xe
  4218f6:	mov    eax,0xaf4c03a0
  4218fb:	mov    esi,0xfaa22285
  421900:	sbb    sp,WORD PTR [ebx+ecx*8]
  421904:	push   ds
  421905:	in     al,dx
  421906:	xchg   esp,eax
  421907:	rcr    BYTE PTR [ecx],cl
  421909:	and    ch,BYTE PTR [ebx]
  42190b:	les    ebp,FWORD PTR [edi+0x66]
  42190e:	add    al,0x43
  421910:	outs   dx,DWORD PTR ds:[esi]
  421911:	xchg   BYTE PTR [ebx],dh
  421913:	pop    edi
  421914:	imul   ebp,DWORD PTR [edx+edi*4],0x98940c90
  42191b:	cli    
  42191c:	fisttp WORD PTR [edi+0x5ac71108]
  421922:	push   edx
  421923:	cld    
  421924:	inc    ebp
  421925:	cmp    DWORD PTR [ebp+0x7760e5cd],edx
  42192b:	mov    edx,0x1159b186
  421930:	clc    
  421931:	aaa    
  421932:	cmp    ah,BYTE PTR [esi-0x63]
  421935:	pop    ecx
  421936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421937:	push   es
  421938:	enter  0xb6e5,0x25
  42193c:	and    eax,0x73fe37c5
  421941:	xlat   BYTE PTR ds:[ebx]
  421942:	into   
  421943:	iret   
  421944:	xchg   esi,eax
  421945:	xchg   ebx,eax
  421946:	fld    QWORD PTR [ebx+0x7a]
  421949:	in     al,dx
  42194a:	out    0xcc,eax
  42194c:	in     eax,dx
  42194d:	sub    DWORD PTR [ebp+0x5f],edx
  421950:	jbe    0x42191a
  421952:	pop    ebp
  421953:	aad    0xb8
  421955:	mov    cs,WORD PTR [edi-0x3a]
  421958:	add    eax,0xf92d79d3
  42195d:	out    0x8d,al
  42195f:	fisub  DWORD PTR [ebx+0x69ddfe1b]
  421965:	imul   ecx,DWORD PTR [edx],0xffffffe9
  421968:	fnstcw WORD PTR [ebx+0x9]
  42196b:	in     al,dx
  42196c:	sbb    DWORD PTR [edx],ecx
  42196e:	aaa    
  42196f:	jg     0x42199b
  421971:	add    ecx,DWORD PTR [edi-0x45]
  421974:	scas   al,BYTE PTR es:[edi]
  421975:	and    dh,bh
  421977:	(bad)  
  421978:	jb     0x4219bb
  42197a:	mov    ch,0x36
  42197c:	lahf   
  42197d:	dec    ebp
  42197e:	push   ebx
  42197f:	int3   
  421980:	loop   0x4219fa
  421982:	in     al,0x97
  421984:	aaa    
  421985:	adc    DWORD PTR [ebp-0x3c34a0d4],eax
  42198b:	ror    BYTE PTR [ebx],1
  42198d:	rcr    BYTE PTR [edx+0x635b9a4b],0x16
  421994:	test   BYTE PTR [edi+ecx*8-0x4c],dh
  421998:	xchg   esp,eax
  421999:	inc    esi
  42199a:	mov    cl,0x7d
  42199c:	mov    esi,DWORD PTR [esi]
  42199e:	test   eax,0x23628fd9
  4219a3:	leave  
  4219a4:	mov    BYTE PTR [esi+0x43],bl
  4219a7:	mov    cl,0x2e
  4219a9:	mov    BYTE PTR ds:[ecx],bh
  4219ac:	xor    al,0xce
  4219ae:	xchg   esp,eax
  4219af:	sbb    esi,eax
  4219b1:	loopne 0x421980
  4219b3:	push   ss
  4219b4:	in     al,dx
  4219b5:	push   cs
  4219b6:	mov    dl,0x7
  4219b8:	xor    eax,0xd6a47094
  4219bd:	ss jge 0x421a38
  4219c0:	mov    eax,ds:0xea7c764f
  4219c5:	lds    edi,FWORD PTR [ebp-0x1c359e11]
  4219cb:	sbb    cl,ah
  4219cd:	cs mov bh,0x83
  4219d0:	int3   
  4219d1:	(bad)  
  4219d2:	pop    ebp
  4219d3:	xchg   DWORD PTR [eax],ecx
  4219d5:	imul   edi,DWORD PTR [esi+ebp*8-0x5e1bbc38],0x8ac4684e
  4219e0:	mov    ecx,0xfa271c54
  4219e5:	jb     0x421a2d
  4219e7:	sets   BYTE PTR [edi+0x25b8edd1]
  4219ee:	mov    bl,cl
  4219f0:	arpl   WORD PTR ds:0xbef90751,ax
  4219f6:	jo     0xe4ade6ce
  4219fc:	pop    ds
  4219fd:	test   BYTE PTR [eax-0x5],ch
  421a00:	leave  
  421a01:	frstor [eax+0x7]
  421a04:	enter  0xd6ef,0xfb
  421a08:	push   esp
  421a09:	xor    eax,0x52e31214
  421a0e:	xor    cl,bl
  421a10:	nop
  421a11:	mov    ebp,0x99e54383
  421a16:	retf   0xaf7a
  421a19:	inc    edi
  421a1a:	add    DWORD PTR [esi-0x50],ebp
  421a1d:	enter  0x7202,0xcc
  421a21:	xchg   eax,eax
  421a23:	rcr    DWORD PTR [ebx+ecx*1-0x49],cl
  421a27:	sub    cl,bh
  421a29:	push   ds
  421a2a:	aam    0xf8
  421a2c:	mov    ch,0xba
  421a2e:	pop    ecx
  421a2f:	ret    0xd1ab
  421a32:	stc    
  421a33:	jmp    FWORD PTR [ebx]
  421a35:	add    al,BYTE PTR [ebx-0x6ff2ae9f]
  421a3b:	pop    ds
  421a3c:	sbb    DWORD PTR [eax-0x6dc6c033],esi
  421a42:	xchg   ebx,eax
  421a43:	inc    ecx
  421a44:	mov    bl,0x2c
  421a46:	imul   esi,esi,0xffffffcd
  421a49:	xchg   ebp,eax
  421a4a:	dec    eax
  421a4b:	stc    
  421a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a4d:	dec    edi
  421a4e:	push   ebx
  421a4f:	iret   
  421a50:	jg     0x421a91
  421a52:	mov    al,ds:0x6abbd296
  421a57:	xchg   ebp,eax
  421a58:	adc    ebp,DWORD PTR [edx+0x21d6b45e]
  421a5e:	lahf   
  421a5f:	call   0x1dea92a4
  421a64:	in     al,0x92
  421a66:	pop    edx
  421a67:	mov    dl,0xc3
  421a69:	jecxz  0x4219ef
  421a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a6c:	xchg   DWORD PTR [edx],edi
  421a6e:	int3   
  421a6f:	dec    esi
  421a70:	add    al,0x9b
  421a72:	or     eax,0xd7884d6f
  421a77:	cmc    
  421a78:	aad    0xda
  421a7a:	mov    esi,edi
  421a7c:	mov    esi,0x32cc89ad
  421a81:	inc    esi
  421a82:	sub    esp,DWORD PTR [ebx+0x55]
  421a85:	add    esi,ebp
  421a87:	push   cs
  421a88:	add    al,0xc3
  421a8a:	sbb    dl,bh
  421a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a8d:	arpl   WORD PTR [ebx+eax*1-0x75b513da],si
  421a94:	cmc    
  421a95:	fidiv  WORD PTR [eax-0x557c1b4b]
  421a9b:	xor    BYTE PTR [edi+ebp*2+0x3ee0906b],dl
  421aa2:	jmp    0x99418697
  421aa7:	adc    al,0x52
  421aa9:	sti    
  421aaa:	xor    BYTE PTR [ebp-0x39],bl
  421aad:	xchg   ecx,eax
  421aae:	dec    esp
  421aaf:	sub    DWORD PTR [edx-0x5cdf23d0],esi
  421ab5:	adc    edx,DWORD PTR [esi]
  421ab7:	data16 fstp TBYTE PTR [ebx]
  421aba:	mov    eax,0xa20b103b
  421abf:	and    eax,0xdea73c1e
  421ac4:	out    dx,al
  421ac5:	into   
  421ac6:	jmp    0x7bf97ecd
  421acb:	icebp  
  421acc:	add    BYTE PTR [eax-0x73],al
  421acf:	jbe    0x421a70
  421ad1:	inc    edx
  421ad2:	(bad)  [ebx-0x68]
  421ad5:	je     0x421ae8
  421ad7:	mov    BYTE PTR [edi-0x49],ah
  421ada:	mov    bl,0x6a
  421adc:	sbb    al,0xa1
  421ade:	mov    ecx,0xcc658bf6
  421ae3:	adc    al,0x91
  421ae5:	fidivr WORD PTR [edx]
  421ae7:	pusha  
  421ae8:	ret    0x9138
  421aeb:	jne    0x421b13
  421aed:	retf   
  421aee:	in     eax,dx
  421aef:	adc    BYTE PTR [edi],bh
  421af1:	fist   DWORD PTR [ebx-0x14]
  421af4:	shl    DWORD PTR [ecx-0x14],1
  421af7:	push   ss
  421af8:	push   eax
  421af9:	inc    ecx
  421afa:	sub    DWORD PTR [ebx+0xe],0x12dad6c0
  421b01:	xor    al,0xcd
  421b03:	loop   0x421ab3
  421b05:	sub    dl,BYTE PTR [edx+edx*2]
  421b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b09:	mov    esi,0xbde9db90
  421b0e:	fdiv   DWORD PTR [ebp-0x46d6ef8]
  421b14:	xchg   BYTE PTR [ebp+esi*1+0x4aea8ca5],dh
  421b1b:	les    edi,FWORD PTR [eax-0x7d]
  421b1e:	(bad)  [eax]
  421b20:	pop    ds
  421b21:	xor    al,0x3b
  421b23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b24:	neg    BYTE PTR [ebx-0x11eb247f]
  421b2a:	popf   
  421b2b:	adc    DWORD PTR [edi],esi
  421b2d:	in     al,0xcd
  421b2f:	sbb    esp,ebp
  421b31:	scas   eax,DWORD PTR es:[edi]
  421b32:	pop    eax
  421b33:	fwait
  421b34:	repz mov ebx,fs
  421b37:	jnp    0x421af0
  421b39:	dec    edi
  421b3a:	loopne 0x421b51
  421b3c:	das    
  421b3d:	imul   ebx,DWORD PTR [esp+ecx*4],0xe68869d4
  421b44:	and    dh,BYTE PTR [ebp-0x7a]
  421b47:	leave  
  421b48:	test   DWORD PTR [eax+ecx*4],0xb3dc7355
  421b4f:	inc    ecx
  421b50:	stc    
  421b51:	repz push 0x6c
  421b54:	sub    eax,0xb225ee77
  421b59:	mov    eax,ds:0xd2229d29
  421b5e:	sahf   
  421b5f:	cwde   
  421b60:	aad    0xb7
  421b62:	or     eax,0x46672b64
  421b67:	xor    al,0xde
  421b69:	push   esi
  421b6a:	les    edx,FWORD PTR [edi]
  421b6c:	cmc    
  421b6d:	test   BYTE PTR [ecx-0x29641936],0xb
  421b74:	aas    
  421b75:	adc    BYTE PTR [eax],ah
  421b77:	xor    BYTE PTR [ebx-0x22a3fdee],0x6e
  421b7e:	test   bl,al
  421b80:	fldenv [eax]
  421b82:	idiv   al
  421b84:	mov    WORD PTR [eax+0x6a1d6d0e],fs
  421b8a:	xor    DWORD PTR [ebp-0xc702ac1],esp
  421b90:	ins    BYTE PTR es:[edi],dx
  421b91:	cmc    
  421b92:	adc    DWORD PTR [ebx-0x623b0f7e],edx
  421b98:	pop    ss
  421b99:	push   ebp
  421b9a:	dec    edx
  421b9b:	loop   0x421beb
  421b9d:	add    BYTE PTR [eax],al
  421b9f:	add    BYTE PTR [eax],al
  421ba1:	add    BYTE PTR [ebx],bl
  421ba3:	mov    esi,0xdaef9aee
  421ba8:	jg     0x421b69
  421baa:	call   0xc57d:0x1f770da0
  421bb1:	cmp    DWORD PTR [esi-0x6b],0x4f30001
  421bb8:	add    BYTE PTR [eax],al
  421bba:	int    0x83
  421bbc:	cdq    
  421bbd:	mov    ebp,DWORD PTR [eax+0x7487fec9]
  421bc3:	xchg   esp,eax
  421bc4:	lods   eax,DWORD PTR ds:[esi]
  421bc5:	jmp    0x52fb8abb
  421bca:	lds    ebx,FWORD PTR es:[ebp+0x1cfbae88]
  421bd1:	ins    BYTE PTR es:[edi],dx
  421bd2:	dec    edi
  421bd3:	call   0xbadb7966
  421bd8:	repz adc eax,0xa1f5dff5
  421bde:	or     dh,BYTE PTR [ebp+edx*2+0x28]
  421be2:	loope  0x421bbc
  421be4:	cld    
  421be5:	dec    esi
  421be6:	cs push ebp
  421be8:	jecxz  0x421c2a
  421bea:	xor    esi,0xffffffda
  421bed:	int    0xc5
  421bef:	fcomp  QWORD PTR [esi]
  421bf1:	addr16 pop esp
  421bf3:	sbb    BYTE PTR [eax+0x6c4fffc6],al
  421bf9:	test   esp,edi
  421bfb:	mov    cl,BYTE PTR [eax-0x164a9af]
  421c01:	mov    ds:0xc4b9445,al
  421c06:	fst    DWORD PTR [edx+0x8]
  421c09:	pop    es
  421c0a:	xor    ebx,DWORD PTR [edx-0x65249e65]
  421c10:	or     DWORD PTR ds:[esp+ebx*4],ecx
  421c14:	pop    esi
  421c15:	int    0x50
  421c17:	inc    eax
  421c18:	add    DWORD PTR [ebx],edi
  421c1a:	ds pusha 
  421c1c:	shr    BYTE PTR [edi+0x249eb123],1
  421c22:	pop    ebp
  421c23:	jo     0x421c33
  421c25:	xchg   edx,eax
  421c26:	call   0xaf68ed03
  421c2b:	cdq    
  421c2c:	les    edi,FWORD PTR [esi+0x6dad4afa]
  421c32:	pop    ds
  421c33:	imul   esp,edx,0xee8181bf
  421c39:	xchg   edi,eax
  421c3a:	jns    0x421be3
  421c3c:	pop    edx
  421c3d:	sbb    al,0xf2
  421c3f:	js     0x421c9c
  421c41:	pushaw 
  421c43:	shl    BYTE PTR [esi+esi*4-0x26],cl
  421c47:	lods   al,BYTE PTR ss:[si]
  421c4a:	xchg   edi,eax
  421c4b:	sbb    BYTE PTR [ecx],bh
  421c4d:	lods   eax,DWORD PTR ds:[esi]
  421c4e:	inc    esi
  421c4f:	(bad)  [edi+ebp*2+0x3e]
  421c53:	rol    BYTE PTR [edi-0x5331dc18],1
  421c59:	dec    edx
  421c5a:	xlat   BYTE PTR ds:[ebx]
  421c5b:	leave  
  421c5c:	(bad)  
  421c5d:	sets   BYTE PTR [esp+edx*1-0x5e59b85f]
  421c65:	mov    al,ds:0x89aca0e7
  421c6a:	dec    eax
  421c6b:	repz test DWORD PTR [esi+0x1afac246],0x22b5a78f
  421c76:	jmp    0xb3a1:0x2335b758
  421c7d:	dec    edi
  421c7e:	ins    DWORD PTR es:[edi],dx
  421c7f:	ror    BYTE PTR [esi+0x41],0xa5
  421c83:	mov    bh,0x1f
  421c85:	pop    ss
  421c86:	dec    edi
  421c87:	pop    ss
  421c88:	ror    al,1
  421c8a:	mov    BYTE PTR [edi+0x255cd154],dh
  421c90:	pop    edx
  421c91:	imul   ebp,DWORD PTR [edi+0x7e546632],0x3a
  421c98:	pop    eax
  421c99:	(bad)  
  421c9a:	shl    BYTE PTR [ecx+eax*1-0x3b],cl
  421c9e:	fisub  WORD PTR [ebx+0x25]
  421ca1:	sti    
  421ca2:	cld    
  421ca3:	rol    DWORD PTR [esi+0x6d],1
  421ca6:	mov    al,0x9f
  421ca8:	arpl   WORD PTR ds:0x1d39fb81,ax
  421cae:	call   0x316b:0xf64e5f40
  421cb5:	inc    eax
  421cb6:	jne    0x421cc8
  421cb8:	xor    BYTE PTR [ebx+0x1b077f4c],bl
  421cbe:	adc    esi,ebx
  421cc0:	cs aaa 
  421cc2:	jmp    0x335:0x418f9f2b
  421cc9:	push   esi
  421cca:	aam    0x66
  421ccc:	push   ebp
  421ccd:	xchg   esi,eax
  421cce:	aam    0x40
  421cd0:	imul   ebx,DWORD PTR [edx+0x28d282ac],0x15cff820
  421cda:	(bad)  
  421cdb:	sti    
  421cdc:	xchg   edi,eax
  421cdd:	or     BYTE PTR [ecx+0x32f28a37],dh
  421ce3:	hlt    
  421ce4:	push   eax
  421ce5:	out    dx,al
  421ce6:	repz cmp BYTE PTR [ebx+0x58],0x3b
  421ceb:	mov    al,ds:0x64b6d62c
  421cf0:	imul   ebx,DWORD PTR [esi-0x47],0x260af2cc
  421cf7:	shr    DWORD PTR [edx-0xfa79d81],1
  421cfd:	daa    
  421cfe:	xor    BYTE PTR ds:0x7784a61e,dl
  421d04:	pop    ss
  421d05:	cdq    
  421d06:	and    BYTE PTR [edx-0x45818452],dl
  421d0c:	xchg   BYTE PTR [ebx+eiz*4-0x3a],cl
  421d10:	sub    BYTE PTR [edi],ah
  421d12:	cli    
  421d13:	cmp    al,0xfa
  421d15:	addr16 sahf 
  421d17:	cwde   
  421d18:	xor    al,0xae
  421d1a:	dec    edi
  421d1b:	scas   eax,DWORD PTR es:[edi]
  421d1c:	sbb    eax,0x6430c676
  421d21:	and    al,0x66
  421d23:	jp     0x421d5f
  421d25:	add    BYTE PTR [ebx-0x80],bh
  421d28:	loop   0x421d6b
  421d2a:	adc    ebx,DWORD PTR [edi-0x26]
  421d2d:	loope  0x421cdc
  421d2f:	lods   eax,DWORD PTR ds:[esi]
  421d30:	popa   
  421d31:	pop    ss
  421d32:	dec    ebx
  421d33:	stos   DWORD PTR es:[edi],eax
  421d34:	mov    dl,0x30
  421d36:	jmp    0x421cb9
  421d38:	cmp    DWORD PTR [ebx],ecx
  421d3a:	jbe    0x421d9f
  421d3c:	fidiv  WORD PTR [eax+0x3]
  421d3f:	imul   edx,edx,0xffffff9f
  421d42:	and    BYTE PTR [ecx+0x1b],dh
  421d45:	adc    eax,0xa0460e64
  421d4a:	je     0x421d1f
  421d4c:	xchg   esi,eax
  421d4d:	xor    BYTE PTR [edx-0x560b03ba],bh
  421d53:	mov    dh,0xbe
  421d55:	jle    0x421d06
  421d57:	(bad)  
  421d58:	and    cl,dl
  421d5a:	not    DWORD PTR [ecx-0x7dd9001c]
  421d60:	mov    dh,0x4e
  421d62:	sub    al,BYTE PTR [esi+0x45]
  421d65:	pop    ss
  421d66:	rcl    BYTE PTR [eax],1
  421d68:	mov    eax,gs:0xfb9a2530
  421d6e:	xor    ecx,esi
  421d70:	rcl    BYTE PTR [ebp+0x660ba3ca],1
  421d76:	adc    DWORD PTR [ebp-0x429aa6d],edx
  421d7c:	or     BYTE PTR [ebx+0x6dafa76],0xbc
  421d83:	rol    BYTE PTR [ecx-0x23dba32d],cl
  421d89:	dec    ebx
  421d8a:	pushf  
  421d8b:	int    0xa2
  421d8d:	cmc    
  421d8e:	cli    
  421d8f:	in     ax,0x8c
  421d92:	pop    eax
  421d93:	popa   
  421d94:	mov    bh,0xf6
  421d96:	and    BYTE PTR [edx-0x12985546],al
  421d9c:	scas   al,BYTE PTR es:[edi]
  421d9d:	je     0x421df1
  421d9f:	xchg   ebp,eax
  421da0:	sub    BYTE PTR [edx+edx*2+0x7efd1ab0],cl
  421da7:	adc    edi,DWORD PTR [ecx+ebp*2-0x49]
  421dab:	jge    0x82d58fb0
  421db1:	rcl    dl,0x6e
  421db4:	inc    eax
  421db5:	and    eax,ebp
  421db7:	popa   
  421db8:	sub    bl,BYTE PTR [edx+0x79]
  421dbb:	(bad)  
  421dbc:	loop   0x421d6f
  421dbe:	pop    ds
  421dbf:	mov    ds:0xd1f0d82f,eax
  421dc4:	les    esi,FWORD PTR [esi-0x4ca8c920]
  421dca:	push   0x2a
  421dcc:	adc    eax,0x8906de1f
  421dd1:	mov    al,0xde
  421dd3:	aam    0xf
  421dd5:	fisttp WORD PTR [eax+ecx*2+0x21]
  421dd9:	mov    edi,0x4b03ac90
  421dde:	lea    edx,[eax-0x688fdd2e]
  421de4:	mov    esp,0xc7997d76
  421de9:	fisub  DWORD PTR [ebx]
  421deb:	pop    eax
  421dec:	stos   DWORD PTR es:[edi],eax
  421ded:	ret    
  421dee:	adc    BYTE PTR [esi],dh
  421df0:	fxch   st(0)
  421df2:	sbb    eax,DWORD PTR ds:0x437422c7
  421df8:	div    DWORD PTR [ebx+eax*1+0x33]
  421dfc:	jg     0x421df9
  421dfe:	cmp    esi,DWORD PTR [ebp-0x32c8b5ff]
  421e04:	pushf  
  421e05:	lahf   
  421e06:	popa   
  421e07:	retf   
  421e08:	jae    0x421da3
  421e0a:	cmp    al,0x9b
  421e0c:	cld    
  421e0d:	enter  0xe511,0xd5
  421e11:	out    dx,eax
  421e12:	adc    edx,edx
  421e14:	es xchg edx,eax
  421e16:	scas   eax,DWORD PTR es:[edi]
  421e17:	leave  
  421e18:	pushf  
  421e19:	jmp    0x421e13
  421e1b:	jmp    0x1bf34965
  421e20:	mov    DWORD PTR [edi],esp
  421e22:	and    ah,BYTE PTR [ecx-0x7883dbeb]
  421e28:	lea    esp,[ebx-0x1104f190]
  421e2e:	les    edi,FWORD PTR ds:0x21ed9760
  421e34:	cmp    eax,0xa2d09b09
  421e39:	pop    edi
  421e3a:	pop    edi
  421e3b:	cmp    eax,0x957af42c
  421e40:	push   0x12
  421e42:	push   ebp
  421e43:	sub    bl,BYTE PTR [edi+ebp*1+0x4ea35256]
  421e4a:	or     esp,ebx
  421e4c:	call   0x1632:0xeaddd0f4
  421e53:	adc    al,0xdc
  421e55:	push   0xa64fa142
  421e5a:	out    dx,eax
  421e5b:	push   es
  421e5c:	cmc    
  421e5d:	mov    ds:0x1880cd2,al
  421e62:	dec    ecx
  421e63:	outs   dx,DWORD PTR ds:[esi]
  421e64:	loopne 0x421e37
  421e66:	jl     0x421ee0
  421e68:	pop    esp
  421e69:	inc    ecx
  421e6a:	cmp    bl,BYTE PTR [edi]
  421e6c:	inc    esi
  421e6d:	call   0x5822e6a4
  421e72:	and    BYTE PTR [esi+0x55],ch
  421e75:	mov    cl,bl
  421e77:	in     al,0xe8
  421e79:	outs   dx,BYTE PTR ds:[esi]
  421e7a:	mov    ds:0xfbc5dde6,al
  421e7f:	(bad)  
  421e80:	mov    DWORD PTR [edx],ebx
  421e82:	test   bh,dl
  421e84:	retf   0x564
  421e87:	imul   esi,DWORD PTR [esi-0x5b],0xffffffea
  421e8b:	push   esi
  421e8c:	cmp    eax,0xa703df13
  421e91:	cmp    eax,DWORD PTR [edx-0x73]
  421e94:	pop    esp
  421e95:	adc    BYTE PTR [esi],ah
  421e97:	dec    edx
  421e98:	int    0x16
  421e9a:	sbb    al,0x5c
  421e9c:	pop    ebx
  421e9d:	icebp  
  421e9e:	adc    DWORD PTR [edi-0x46],0xffffffb1
  421ea2:	xchg   edi,eax
  421ea3:	adc    edi,0x6c
  421ea6:	popf   
  421ea7:	daa    
  421ea8:	inc    ebx
  421ea9:	test   al,0x71
  421eab:	add    DWORD PTR [ecx+0x31e4023a],ebx
  421eb1:	je     0x421eea
  421eb3:	sahf   
  421eb4:	call   0xc844:0x4ed8c8f
  421ebb:	cmp    edi,DWORD PTR [edx]
  421ebd:	or     BYTE PTR [ebx+0x3e80dfb1],0x56
  421ec4:	aam    0xf4
  421ec6:	pop    esi
  421ec7:	mov    ah,0x23
  421ec9:	dec    edi
  421eca:	ret    
  421ecb:	mov    dh,0x2a
  421ecd:	fild   QWORD PTR [ebx-0xb7cba21]
  421ed3:	jl     0x421e7d
  421ed5:	out    dx,eax
  421ed6:	lods   al,BYTE PTR ds:[esi]
  421ed7:	scas   al,BYTE PTR es:[edi]
  421ed8:	mov    ecx,DWORD PTR [eax-0x49bf7f80]
  421ede:	pop    edx
  421edf:	cmc    
  421ee0:	and    bh,0x17
  421ee3:	dec    esi
  421ee4:	outs   dx,BYTE PTR ds:[esi]
  421ee5:	ror    DWORD PTR [esi],1
  421ee7:	stos   BYTE PTR es:[edi],al
  421ee8:	ja     0x421e76
  421eea:	mov    ah,0x9e
  421eec:	dec    edi
  421eed:	std    
  421eee:	daa    
  421eef:	mov    al,ds:0x2ebe5e56
  421ef4:	dec    esp
  421ef5:	and    ch,BYTE PTR [ebp+0x21]
  421ef8:	jae    0x421e80
  421efa:	test   ebp,esi
  421efc:	xchg   esi,eax
  421efd:	es pop ds
  421eff:	imul   ebx,DWORD PTR [eax-0x64],0x29
  421f03:	das    
  421f04:	fadd   DWORD PTR [edi+0x1d54740b]
  421f0a:	idiv   ecx
  421f0c:	inc    edi
  421f0d:	and    ch,BYTE PTR [eax-0x6d]
  421f10:	push   ecx
  421f11:	mov    ah,0x9d
  421f13:	outs   dx,BYTE PTR ds:[esi]
  421f14:	xor    al,0xf6
  421f16:	or     al,0x32
  421f18:	(bad)  
  421f19:	popf   
  421f1a:	arpl   WORD PTR [ebp-0x70cfcdd3],bp
  421f20:	pop    ebp
  421f21:	sbb    dl,BYTE PTR [edx]
  421f23:	mov    al,ds:0x2f354182
  421f28:	and    DWORD PTR [eax],edi
  421f2a:	loope  0x421f2d
  421f2c:	mov    dh,0xd2
  421f2e:	add    DWORD PTR [edx-0x8],ebp
  421f31:	dec    edi
  421f32:	jle    0x421f6d
  421f34:	push   ss
  421f35:	xchg   edx,eax
  421f36:	retf   0x10ab
  421f39:	xchg   esp,eax
  421f3a:	cmp    ecx,DWORD PTR [esi]
  421f3c:	mov    ah,0xd1
  421f3e:	and    DWORD PTR ss:[eax-0x61],edi
  421f42:	push   edi
  421f43:	mov    eax,ds:0x3539655f
  421f48:	das    
  421f49:	xor    dl,BYTE PTR [eax-0x44]
  421f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f4d:	imul   ecx,DWORD PTR [eax+0x37],0x5f4a5b78
  421f54:	mov    DWORD PTR [edx+0x63efb7a2],ecx
  421f5a:	fist   DWORD PTR [edi]
  421f5c:	cmc    
  421f5d:	ret    
  421f5e:	not    DWORD PTR [ebp+0x53ecfe75]
  421f64:	hlt    
  421f65:	daa    
  421f66:	imul   edx,DWORD PTR [esi-0xd],0x9d6e0f28
  421f6d:	push   0x243cb902
  421f72:	in     al,0x31
  421f74:	shr    DWORD PTR [ebx-0x50],1
  421f77:	ins    DWORD PTR es:[edi],dx
  421f78:	fdivr  DWORD PTR [esi-0x35]
  421f7b:	ja     0x421f9e
  421f7d:	xor    al,0x1
  421f7f:	pop    ebp
  421f80:	out    0x34,al
  421f82:	add    eax,0x2e667d72
  421f87:	cmp    al,0x62
  421f89:	mov    dh,0xf5
  421f8b:	pop    ds
  421f8c:	in     al,0xba
  421f8e:	loop   0x422002
  421f90:	scas   eax,DWORD PTR es:[edi]
  421f91:	xchg   edx,eax
  421f92:	or     BYTE PTR [ebp-0x14],ah
  421f95:	push   edx
  421f96:	or     eax,0x89cf08a
  421f9b:	mov    eax,0x3566c732
  421fa0:	xchg   DWORD PTR [esi+0x17],edx
  421fa3:	stos   DWORD PTR es:[edi],eax
  421fa4:	hlt    
  421fa5:	loopne 0x421f49
  421fa7:	das    
  421fa8:	stc    
  421fa9:	cdq    
  421faa:	pop    ds
  421fab:	iret   
  421fac:	add    ebx,DWORD PTR [esi+0xab778a4]
  421fb2:	xchg   esi,eax
  421fb3:	data16 sti 
  421fb5:	mov    al,0xa2
  421fb7:	push   es
  421fb8:	dec    ebx
  421fb9:	ins    BYTE PTR es:[edi],dx
  421fba:	mov    dh,0xac
  421fbc:	push   edi
  421fbd:	inc    ebx
  421fbe:	jne    0x421fd3
  421fc0:	repnz adc esp,edi
  421fc3:	jmp    0x3859446
  421fc8:	push   es
  421fc9:	shr    DWORD PTR [edi],0x21
  421fcc:	ror    DWORD PTR [esi],cl
  421fce:	call   0xa9ac:0x19079314
  421fd5:	mov    eax,0xe3efd9c
  421fda:	add    ecx,DWORD PTR [ecx+0x46]
  421fdd:	sahf   
  421fde:	aaa    
  421fdf:	jp     0x421fc2
  421fe1:	xchg   ecx,eax
  421fe2:	jge    0x421fb7
  421fe4:	add    BYTE PTR ds:0x91e7eeb5,dl
  421fea:	add    esi,DWORD PTR [eax+0x5]
  421fed:	lock jne 0x42202b
  421ff0:	(bad)  
  421ff1:	(bad)  
  421ff2:	xchg   esi,eax
  421ff3:	push   esi
  421ff4:	push   ebp
  421ff5:	ret    
  421ff6:	in     eax,dx
  421ff7:	(bad)  
  421ff8:	mov    al,ds:0x30bc8867
  421ffd:	fwait
  421ffe:	cmp    DWORD PTR [edx+0x6e],esp
  422001:	and    ebx,DWORD PTR [esi]
  422003:	out    0x9a,eax
  422005:	icebp  
  422006:	sub    al,0x2f
  422008:	adc    al,0xd6
  42200a:	xor    eax,0xc986f402
  42200f:	sbb    DWORD PTR [eax+0x5d],ebx
  422012:	inc    ebx
  422013:	or     al,0xd1
  422015:	outs   dx,BYTE PTR ds:[esi]
  422016:	out    dx,al
  422017:	cmp    eax,0x65fe69d4
  42201c:	dec    esi
  42201d:	jo     0x421fde
  42201f:	js     0x422078
  422021:	outs   dx,DWORD PTR ds:[esi]
  422022:	and    DWORD PTR [ebx],ecx
  422024:	(bad)  
  422026:	jne    0x421fdb
  422028:	push   es
  422029:	jle    0x421fb8
  42202b:	mov    ah,0xf7
  42202d:	jecxz  0x42204f
  42202f:	lods   eax,DWORD PTR ds:[esi]
  422030:	out    0xc9,al
  422032:	and    al,0x67
  422034:	pop    ds
  422035:	popa   
  422036:	jg     0x421fd9
  422038:	or     eax,0xb23a6e64
  42203d:	push   eax
  42203e:	(bad)  
  42203f:	daa    
  422040:	mov    al,ds:0xc2fb5237
  422045:	enter  0x55c5,0x95
  422049:	sub    eax,0x83130b76
  42204e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42204f:	push   ds
  422050:	cld    
  422051:	sub    DWORD PTR [ecx],esp
  422053:	sub    bh,ah
  422055:	retf   
  422056:	aaa    
  422057:	std    
  422058:	pop    ecx
  422059:	ror    DWORD PTR [edi],1
  42205b:	push   ecx
  42205c:	outs   dx,BYTE PTR ds:[esi]
  42205d:	(bad)  
  42205e:	adc    ah,bl
  422060:	sub    eax,0xb155b
  422065:	xlat   BYTE PTR ds:[ebx]
  422066:	popa   
  422067:	icebp  
  422068:	(bad)  
  422069:	sti    
  42206a:	inc    edx
  42206b:	popf   
  42206c:	cmp    BYTE PTR [ebx],ah
  42206e:	dec    ebx
  42206f:	scas   eax,DWORD PTR es:[edi]
  422070:	adc    edi,DWORD PTR [ebx-0x2b]
  422073:	rcr    DWORD PTR [esi-0x66],0x31
  422077:	push   eax
  422078:	nop    edi
  42207b:	cmp    dl,0x34
  42207e:	mov    edi,0xa7354c8d
  422083:	push   es
  422084:	rcr    BYTE PTR [ecx],1
  422086:	mov    bh,0xef
  422088:	out    dx,al
  422089:	(bad)
  42208c:	cmove  edx,DWORD PTR ds:0x5b4b8bd3
  422093:	stos   BYTE PTR es:[edi],al
  422094:	dec    ecx
  422095:	mov    ch,0x14
  422097:	stc    
  422098:	adc    ebx,esp
  42209a:	pop    esp
  42209b:	test   BYTE PTR [ecx-0xa3b32dd],al
  4220a1:	fcos   
  4220a3:	xchg   edi,esp
  4220a5:	add    ch,BYTE PTR [ebp-0x7549683a]
  4220ab:	leave  
  4220ac:	jbe    0x4220ae
  4220ae:	add    BYTE PTR [eax],al
  4220b0:	add    BYTE PTR [eax],al
  4220b2:	cmp    ecx,edi
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	push   es
  4220bf:	dec    ebx
  4220c0:	aam    0x34
  4220c2:	jno    0x42205e
  4220c4:	add    DWORD PTR [eax],eax
  4220c6:	repz add al,0x0
  4220c9:	add    ah,bl
  4220cb:	fs xor bh,al
  4220ce:	pushf  
  4220cf:	inc    esp
  4220d0:	add    ah,dl
  4220d2:	test   BYTE PTR [ebx],ch
  4220d4:	ins    BYTE PTR es:[edi],dx
  4220d5:	pop    eax
  4220d6:	fmul   DWORD PTR [ebp+edx*2-0x61c19fbc]
  4220dd:	inc    esp
  4220de:	mov    eax,ds:0x35ed3ae2
  4220e3:	push   esi
  4220e4:	aaa    
  4220e5:	lods   eax,DWORD PTR ds:[esi]
  4220e6:	les    ecx,FWORD PTR [edx]
  4220e8:	xlat   BYTE PTR ds:[ebx]
  4220e9:	leave  
  4220ea:	leave  
  4220eb:	xor    al,0xb4
  4220ed:	adc    esi,DWORD PTR [eax+0x1e1ce4cd]
  4220f3:	jle    0x422142
  4220f5:	lea    ebx,[ebp-0x56233fb3]
  4220fb:	and    BYTE PTR [edx+0x4a],dl
  4220fe:	pop    ebx
  4220ff:	sub    DWORD PTR [edi+edi*2+0x63760a53],ebp
  422106:	jno    0x422158
  422108:	repz pop ss
  42210a:	fucomip st,st(1)
  42210c:	jnp    0x422156
  42210e:	or     ebx,eax
  422110:	outs   dx,BYTE PTR ds:[esi]
  422111:	jecxz  0x4220ba
  422113:	adc    DWORD PTR ds:0x90d98f47,0x445c7008
  42211d:	out    0xef,eax
  42211f:	(bad)  
  422121:	and    esp,DWORD PTR [ebx-0x28a2ae73]
  422127:	js     0x422169
  422129:	hlt    
  42212a:	jmp    0x4220bc
  42212c:	jmp    0xba6fb355
  422131:	aam    0xcd
  422133:	mov    WORD PTR [ebx],?
  422135:	scas   al,BYTE PTR es:[edi]
  422136:	jl     0x422166
  422138:	pop    ecx
  422139:	push   es
  42213a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42213b:	arpl   WORD PTR [edi],dx
  42213d:	adc    eax,0x74216ac6
  422142:	jnp    0x422175
  422144:	dec    esp
  422145:	test   DWORD PTR [eax-0x63b7522b],ebx
  42214b:	aam    0x69
  42214d:	push   0x8afae21e
  422152:	popa   
  422153:	repnz mov ch,0xf7
  422156:	mov    bh,ch
  422158:	adc    al,0x34
  42215a:	test   al,0x1f
  42215c:	(bad)  
  42215d:	mov    ebp,0x335f00f4
  422162:	pop    ebx
  422163:	pop    ebp
  422164:	add    ecx,DWORD PTR [edx-0x2f]
  422167:	js     0x422179
  422169:	dec    edi
  42216a:	push   ss
  42216b:	sub    BYTE PTR [edx+0x6b],bl
  42216e:	jge    0x422102
  422170:	adc    eax,0xbb2da2cc
  422175:	dec    edx
  422176:	fdivr  st,st(1)
  422178:	mov    bh,BYTE PTR [eax+eiz*8-0x7f8adb61]
  42217f:	or     BYTE PTR [edi+0x64f6541d],ah
  422185:	mov    ah,0x2
  422187:	clc    
  422188:	mov    edx,0x18e8d48d
  42218d:	outs   dx,BYTE PTR ds:[esi]
  42218e:	mov    esp,0xb5572fbe
  422193:	mov    dl,0xf2
  422195:	add    edx,DWORD PTR [edx]
  422197:	jns    0x4221d9
  422199:	inc    edx
  42219a:	xchg   DWORD PTR [ebx+0x7c],ebp
  42219d:	xchg   ebx,eax
  42219e:	inc    ecx
  42219f:	lods   eax,DWORD PTR ds:[esi]
  4221a0:	fsub   DWORD PTR [eax+0x49]
  4221a3:	aam    0xbc
  4221a5:	mov    eax,ds:0x6707403c
  4221aa:	stos   BYTE PTR es:[edi],al
  4221ab:	(bad)  
  4221ad:	sub    esp,DWORD PTR [ecx]
  4221af:	rcl    BYTE PTR [edi-0xa03cbf],0xb
  4221b6:	or     eax,0x65257f6a
  4221bc:	leave  
  4221bd:	mov    ds:0x3d670272,al
  4221c2:	mov    dl,0x52
  4221c4:	call   0x71ba:0xe08a9009
  4221cb:	das    
  4221cc:	sub    ah,BYTE PTR [eax+0x28f9efc5]
  4221d2:	clc    
  4221d3:	inc    eax
  4221d4:	test   dh,dl
  4221d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221d7:	jb     0x422246
  4221d9:	adc    al,0x10
  4221db:	add    ebp,DWORD PTR [ebp-0x20]
  4221de:	mov    fs,esi
  4221e0:	push   ss
  4221e1:	dec    eax
  4221e2:	mov    bh,0x70
  4221e4:	std    
  4221e5:	dec    ebx
  4221e6:	ins    DWORD PTR es:[edi],dx
  4221e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221e8:	jae    0x422192
  4221ea:	mov    WORD PTR [edx+0x37],cs
  4221ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221ee:	cmp    bh,ah
  4221f0:	and    dh,al
  4221f2:	and    BYTE PTR [esi+0x1b322f27],dh
  4221f8:	mov    eax,DWORD PTR [ebp-0x67b0b5da]
  4221fe:	rcr    BYTE PTR [edi],cl
  422200:	retf   0x8307
  422203:	dec    edx
  422204:	out    0x34,al
  422206:	xor    BYTE PTR [esi+0x55],0x29
  42220a:	rcr    bl,1
  42220c:	aam    0x1b
  42220e:	shl    DWORD PTR [ecx],0xf5
  422211:	inc    sp
  422213:	(bad)  [ebx-0x97c06f6]
  422219:	outs   dx,BYTE PTR ds:[esi]
  42221a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42221b:	inc    eax
  42221c:	ret    0xa063
  42221f:	inc    eax
  422220:	dec    ebp
  422221:	test   eax,0xb6bdbaf6
  422226:	xchg   edx,esi
  422228:	dec    ebx
  422229:	scas   al,BYTE PTR es:[edi]
  42222a:	inc    esi
  42222b:	aas    
  42222c:	inc    ebx
  42222d:	ds ret 0x7f94
  422231:	in     al,0x73
  422233:	(bad)  
  422234:	in     eax,dx
  422235:	push   ebp
  422236:	sub    BYTE PTR [eax+0x47],ch
  422239:	jne    0x42229f
  42223b:	mov    bl,0xe5
  42223d:	test   DWORD PTR [ebx-0x4165af2b],ebx
  422243:	jae    0x422236
  422245:	sub    cl,BYTE PTR [ebx]
  422247:	in     eax,dx
  422248:	pop    esp
  422249:	arpl   ax,di
  42224b:	pop    ds
  42224c:	stos   BYTE PTR es:[edi],al
  42224d:	push   0xffffff89
  42224f:	mov    edx,0xe99c0682
  422254:	pop    ebp
  422255:	xor    DWORD PTR [esi],edi
  422257:	mov    edx,0x32e00528
  42225c:	add    BYTE PTR [ebp+edx*8+0x24],cl
  422260:	adc    eax,0xab0ace89
  422265:	es lock mov dl,0xf2
  422269:	int    0xfe
  42226b:	or     DWORD PTR [esi+0x28],eax
  42226e:	rcl    bh,0x95
  422271:	xchg   ebp,eax
  422272:	cdq    
  422273:	ins    BYTE PTR es:[edi],dx
  422274:	push   esp
  422275:	int3   
  422276:	jmp    0x1cc3fa23
  42227b:	or     DWORD PTR [eax+0x3305b48c],edx
  422281:	sbb    DWORD PTR ds:0x66f3c30b,0xffffffe8
  422288:	aaa    
  422289:	adc    DWORD PTR ds:0xff822913,ebx
  42228f:	push   0x6db4382
  422294:	in     eax,dx
  422295:	shl    BYTE PTR [esi+0x52],1
  422298:	mov    cl,0xc6
  42229a:	jmp    0x7089:0x2d4bcf77
  4222a1:	aad    0x45
  4222a3:	or     DWORD PTR [ebp-0x69c6f54d],ecx
  4222a9:	imul   ebx,DWORD PTR [edx-0x46],0x6115e0f9
  4222b0:	ficom  WORD PTR [edx]
  4222b2:	mov    al,ds:0x191ad9bd
  4222b7:	push   esp
  4222b8:	aam    0x1c
  4222ba:	dec    ebx
  4222bb:	popf   
  4222bc:	shr    ebp,cl
  4222be:	pop    es
  4222bf:	es and ecx,ebp
  4222c2:	cmp    BYTE PTR [ecx+0x9],0xc5
  4222c6:	nop
  4222c7:	jne    0x42224d
  4222c9:	dec    ebp
  4222ca:	and    BYTE PTR [ebx-0x6d],0xf3
  4222ce:	push   esp
  4222cf:	cmp    esp,DWORD PTR [ecx]
  4222d1:	mov    BYTE PTR [ebp+0x31],ah
  4222d4:	push   eax
  4222d5:	in     eax,dx
  4222d6:	fld    st(5)
  4222d8:	pop    ebx
  4222d9:	jmp    FWORD PTR [edx]
  4222db:	xor    ecx,DWORD PTR [ebx]
  4222dd:	dec    esi
  4222de:	adc    al,0x2f
  4222e0:	loopne 0x422278
  4222e2:	jg     0x422268
  4222e4:	sbb    esp,eax
  4222e6:	js     0x42232c
  4222e8:	ins    BYTE PTR es:[edi],dx
  4222e9:	int    0xa5
  4222eb:	xchg   ebp,eax
  4222ec:	jp     0x422351
  4222ee:	addr16 push es
  4222f0:	jmp    0x8058:0xeef744c1
  4222f7:	cmp    eax,0x37328469
  4222fc:	add    edx,DWORD PTR [esi+ebx*1-0x15]
  422300:	repz jbe 0x422344
  422303:	stc    
  422304:	shl    DWORD PTR ds:0xaca9c3,0x35
  42230b:	xor    edi,DWORD PTR [ecx]
  42230d:	sbb    DWORD PTR [ebx],esi
  42230f:	inc    ecx
  422310:	mov    ecx,0x7a5ae19b
  422315:	or     eax,0x2160a1c8
  42231a:	xchg   edi,eax
  42231b:	in     al,dx
  42231c:	mov    ebx,0x710c1b0b
  422321:	aad    0x77
  422323:	call   FWORD PTR [ebp+0x78de3a8e]
  422329:	push   edi
  42232a:	adc    eax,0xc9b6e3a4
  42232f:	mov    ds:0x8eeba768,al
  422334:	pop    esi
  422335:	shl    DWORD PTR [esi],1
  422337:	cmp    al,0xc2
  422339:	ficom  WORD PTR [esi+0x57]
  42233c:	adc    dl,al
  42233e:	loop   0x4223ae
  422340:	inc    edx
  422341:	imul   esp,ebp,0xfffffff4
  422344:	retf   
  422345:	pop    edx
  422346:	mov    ebp,0xaf339600
  42234b:	adc    bl,cl
  42234d:	in     al,0x1c
  42234f:	sbb    DWORD PTR [ebx],esp
  422351:	fsin   
  422353:	fst    QWORD PTR [edx+0x40]
  422356:	jmp    0x4222e5
  422358:	jg     0x422324
  42235a:	pusha  
  42235b:	dec    edx
  42235c:	mov    ch,0xaa
  42235e:	lods   eax,DWORD PTR ds:[esi]
  42235f:	inc    esi
  422360:	fwait
  422361:	iret   
  422362:	pop    ecx
  422363:	rcr    BYTE PTR [esi+0x70],cl
  422366:	mov    cl,0x27
  422368:	jae    0x422373
  42236a:	mov    WORD PTR [edx],fs
  42236c:	dec    esi
  42236d:	ud2    
  42236f:	pop    eax
  422370:	fbld   TBYTE PTR [edx+ebp*1-0x35]
  422374:	stc    
  422375:	daa    
  422376:	dec    ecx
  422377:	or     dh,BYTE PTR [ebx+ecx*8]
  42237a:	jp     0x4223bd
  42237c:	dec    ebp
  42237d:	loope  0x422330
  42237f:	lods   al,BYTE PTR ds:[esi]
  422380:	and    ah,BYTE PTR [ebx+eiz*2+0x77]
  422384:	in     eax,0x55
  422386:	push   0x5587d6a5
  42238b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42238c:	jl     0x422316
  42238e:	or     eax,0xc3ae005c
  422393:	xor    BYTE PTR [eax-0x579a0ffb],dl
  422399:	rcr    BYTE PTR [edi-0xd2831e7],0x1e
  4223a0:	hlt    
  4223a1:	ss mov eax,0x9931bb4b
  4223a7:	test   BYTE PTR [bx-0x5a35],0x48
  4223ad:	retf   
  4223ae:	dec    esi
  4223af:	adc    ah,ah
  4223b1:	inc    eax
  4223b2:	xchg   BYTE PTR [edi+0x70],bh
  4223b5:	jmp    0x422423
  4223b7:	out    dx,eax
  4223b8:	inc    edx
  4223b9:	xor    al,0x1b
  4223bb:	jg     0x4223f4
  4223bd:	pop    edx
  4223be:	add    bl,al
  4223c0:	js     0x42242d
  4223c2:	or     eax,0x90b10257
  4223c7:	inc    esi
  4223c8:	push   ss
  4223c9:	jmp    0xf56c9810
  4223ce:	add    eax,0xfc494108
  4223d3:	retf   0xdc7d
  4223d6:	ja     0x42236d
  4223d8:	sbb    eax,0xe5167c7e
  4223dd:	cmp    BYTE PTR [ecx+0x2f51c87d],dl
  4223e3:	mov    cl,0x75
  4223e5:	js     0x42238e
  4223e7:	sub    bh,bh
  4223e9:	fistp  WORD PTR ds:0xc4f06b98
  4223ef:	(bad)  
  4223f0:	fimul  WORD PTR [edi+0x6b1978a7]
  4223f6:	push   edi
  4223f7:	idiv   DWORD PTR [ecx-0xe]
  4223fa:	and    DWORD PTR [esi+0x1b7c4601],esp
  422400:	mul    bl
  422402:	std    
  422403:	scas   al,BYTE PTR es:[edi]
  422404:	xor    al,0xc1
  422406:	mov    eax,0xc578bdbb
  42240b:	loop   0x42247d
  42240d:	mov    eax,ds:0x823bee3a
  422412:	test   BYTE PTR [ebx+eiz*8],bh
  422415:	adc    eax,0x8c34c8b
  42241a:	(bad)  
  42241b:	cmp    DWORD PTR [ebx+0x17a4f18b],ecx
  422421:	adc    al,ch
  422423:	lea    edx,[edx]
  422425:	shr    BYTE PTR [esi],1
  422427:	mov    BYTE PTR [ebx-0x30],dh
  42242a:	pusha  
  42242b:	xor    esp,DWORD PTR [ecx+0x40aded88]
  422431:	fwait
  422432:	sub    DWORD PTR [edi],0x63644b91
  422438:	xchg   edi,eax
  422439:	dec    edi
  42243a:	gs push ecx
  42243c:	jno    0x4223d0
  42243e:	mov    esp,0x1552e829
  422443:	pusha  
  422444:	leave  
  422445:	add    cl,BYTE PTR [esi]
  422447:	jo     0x4223d0
  422449:	int3   
  42244a:	inc    esp
  42244b:	push   edi
  42244c:	mov    eax,ds:0x634b36a0
  422451:	enter  0x8c08,0xa2
  422455:	in     eax,dx
  422456:	sub    DWORD PTR [esi+0x2968e2da],ebp
  42245c:	in     eax,0x9c
  42245e:	iret   
  42245f:	or     dl,0xf0
  422462:	xchg   esp,eax
  422463:	sti    
  422464:	jns    0x422415
  422466:	xor    eax,0xebde5783
  42246b:	iret   
  42246c:	scas   eax,DWORD PTR es:[edi]
  42246d:	mov    ecx,0xb3fd85ae
  422472:	inc    edx
  422473:	cmp    al,0xb8
  422475:	(bad)  
  422476:	pop    edi
  422477:	ds pop ds
  422479:	mov    bl,0xae
  42247b:	and    eax,0xbbcbe80f
  422480:	mov    ah,0xf3
  422482:	xchg   ebp,eax
  422483:	dec    eax
  422484:	test   al,0x1a
  422486:	sahf   
  422487:	test   ecx,0xfd6f3d7c
  42248d:	mov    esi,0xb2c7ea38
  422492:	sub    cl,BYTE PTR [eax]
  422494:	(bad)  
  422495:	rcr    DWORD PTR [edi+0x7957d24b],1
  42249b:	mov    al,0x39
  42249d:	push   edx
  42249e:	aaa    
  42249f:	jmp    0x42244c
  4224a1:	and    eax,0xe6e00870
  4224a6:	(bad)  
  4224a7:	jns    0x422499
  4224a9:	sbb    dl,BYTE PTR [eax+edx*2+0x18c7ced7]
  4224b0:	push   edi
  4224b1:	push   es
  4224b2:	pop    ecx
  4224b3:	pop    edx
  4224b4:	dec    ecx
  4224b5:	mov    ebp,0x6d536b8d
  4224ba:	pop    ebx
  4224bb:	fisttp WORD PTR [ebx+0x3ab8a01e]
  4224c1:	ror    DWORD PTR [esi-0x1],1
  4224c4:	into   
  4224c5:	(bad)  
  4224c6:	and    eax,0xa802a983
  4224cb:	pop    ss
  4224cc:	addr16 inc ecx
  4224ce:	leave  
  4224cf:	retf   0x3361
  4224d2:	cli    
  4224d3:	mov    cl,0xd6
  4224d5:	mov    ds:0xd05bef8a,al
  4224da:	and    eax,0x1266089c
  4224df:	loope  0x422530
  4224e1:	xor    BYTE PTR [ecx],0xe5
  4224e4:	or     DWORD PTR [ebp-0x53],ecx
  4224e7:	fimul  DWORD PTR [ecx+0x34197e25]
  4224ed:	mov    eax,0x6e1ed823
  4224f2:	adc    al,0x20
  4224f4:	jno    0x42250c
  4224f6:	cld    
  4224f7:	fbstp  TBYTE PTR [edx-0x41]
  4224fa:	push   edi
  4224fb:	and    DWORD PTR [eax],0x36ab701e
  422501:	xchg   DWORD PTR [esp+eax*4+0x2f9d777e],esp
  422508:	test   eax,0xf08fa3e1
  42250d:	pop    edi
  42250e:	sar    BYTE PTR [esi-0x56],cl
  422511:	xchg   esp,eax
  422512:	push   eax
  422513:	or     bl,BYTE PTR [eax-0x49025cc2]
  422519:	ins    BYTE PTR es:[edi],dx
  42251a:	pop    esp
  42251b:	mov    al,ds:0x2a73e4c6
  422520:	sbb    dh,bh
  422522:	stos   BYTE PTR es:[edi],al
  422523:	cmp    al,0xc4
  422525:	cdq    
  422526:	push   ebx
  422527:	outs   dx,BYTE PTR ds:[esi]
  422528:	mov    ds:0x6fd9fd8d,eax
  42252d:	adc    ebx,eax
  42252f:	xchg   edx,eax
  422530:	dec    ebx
  422531:	mov    bh,0x8
  422533:	pop    edi
  422534:	dec    edi
  422535:	pop    ebx
  422536:	pop    ebx
  422537:	test   al,0x6e
  422539:	adc    eax,edi
  42253b:	test   eax,edx
  42253d:	sbb    eax,0xaad2b4cb
  422542:	mov    edx,0x41de246d
  422547:	cmp    al,0x8a
  422549:	mov    bh,0x21
  42254b:	test   DWORD PTR [ebx],ecx
  42254d:	fwait
  42254e:	mov    ebx,0x77817548
  422553:	and    BYTE PTR [esp+edx*4],al
  422556:	pop    ebx
  422557:	inc    edi
  422558:	sub    ebp,eax
  42255a:	ins    BYTE PTR es:[edi],dx
  42255b:	cwde   
  42255c:	idiv   DWORD PTR [eax-0x2f]
  42255f:	add    eax,0x3381db31
  422564:	mov    edi,0x3ce17ddb
  422569:	add    ebp,DWORD PTR [edi+0x59]
  42256c:	xchg   DWORD PTR [esi-0x1ab2a902],edi
  422572:	mov    cl,0x4
  422574:	cli    
  422575:	hlt    
  422576:	mov    eax,ds:0x14106929
  42257b:	lods   eax,DWORD PTR ds:[esi]
  42257c:	enter  0xcb78,0x18
  422580:	cmp    ebx,DWORD PTR [ebx+ebp*2-0xb]
  422584:	aaa    
  422585:	or     eax,0x3c120dc1
  42258a:	call   0x6bf:0x5979fea0
  422591:	add    al,BYTE PTR [ebx+edi*8+0x76a1769e]
  422598:	rol    al,1
  42259a:	add    BYTE PTR ds:0xd5e28e3f,cl
  4225a0:	mov    bl,0xfb
  4225a2:	and    ecx,ecx
  4225a4:	add    bl,BYTE PTR [ecx-0x3d]
  4225a7:	(bad)  
  4225a8:	or     edx,DWORD PTR [edx]
  4225aa:	int3   
  4225ab:	fcomp  QWORD PTR [edi+0x17]
  4225ae:	loope  0x4225dd
  4225b0:	mov    al,0xd9
  4225b2:	mov    ch,ah
  4225b4:	pop    ss
  4225b5:	lods   eax,DWORD PTR ds:[esi]
  4225b6:	hlt    
  4225b7:	sub    BYTE PTR cs:[esi],dl
  4225ba:	xchg   esi,eax
  4225bb:	lods   al,BYTE PTR ds:[esi]
  4225bc:	push   ss
  4225bd:	add    BYTE PTR [eax],al
  4225bf:	add    BYTE PTR [eax],al
  4225c1:	add    dl,cl
  4225c3:	adc    al,0x69
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f64:0xd4ed7af0
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	repz add al,0x0
  4225d9:	add    BYTE PTR [edi+edx*8],cl
  4225dc:	aaa    
  4225dd:	call   DWORD PTR [edi+0x6bc0341f]
  4225e3:	test   ebp,esp
  4225e5:	jmp    FWORD PTR [ecx+0x4468d3ce]
  4225eb:	push   edx
  4225ec:	dec    ebx
  4225ed:	sub    al,dl
  4225ef:	dec    esp
  4225f0:	cmp    DWORD PTR [edi+ebp*4-0x7],edi
  4225f4:	loope  0x4225dc
  4225f6:	and    al,0xb1
  4225f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225f9:	int3   
  4225fa:	jge    0x42262e
  4225fc:	inc    esi
  4225fd:	cmp    DWORD PTR [ecx],0xb0f8de64
  422603:	ror    BYTE PTR [edx],0x67
  422606:	clc    
  422607:	jl     0x42260e
  422609:	mov    dh,0x91
  42260b:	sub    ecx,DWORD PTR [ebp-0x7d2be2c7]
  422611:	jbe    0x4225e8
  422613:	or     DWORD PTR [esi+0x240a62d9],ebp
  422619:	fdivr  st,st(0)
  42261b:	adc    ah,bh
  42261d:	inc    esi
  42261e:	sub    DWORD PTR [si-0x63],esp
  422622:	jmp    0xa6bbb44e
  422627:	sub    BYTE PTR [esi],ah
  422629:	aad    0xbd
  42262b:	pop    ebx
  42262c:	pop    eax
  42262d:	rol    BYTE PTR [edi-0xd],0x76
  422631:	into   
  422632:	in     eax,0x70
  422634:	inc    ecx
  422635:	push   ecx
  422636:	jb     0x4225e1
  422638:	out    0xd,al
  42263a:	xor    ecx,esi
  42263c:	sbb    al,0xbb
  42263e:	push   edi
  42263f:	(bad)  [esi+0x3d]
  422642:	mov    esi,fs
  422644:	push   ss
  422645:	cmp    al,0xfa
  422647:	repnz add al,bh
  42264a:	xor    eax,0x23345eba
  42264f:	fdiv   QWORD PTR [esi-0x347cf311]
  422655:	(bad)  
  422656:	bnd jl 0x422655
  422659:	xchg   ebp,eax
  42265a:	das    
  42265b:	adc    BYTE PTR [ebp-0x1e6cc250],ah
  422661:	push   ss
  422662:	mov    ebp,0x76d6334
  422667:	inc    ecx
  422668:	in     eax,0x37
  42266a:	jns    0x422619
  42266c:	jno    0x4226bf
  42266e:	in     al,0x9c
  422670:	inc    eax
  422671:	dec    esp
  422672:	mov    WORD PTR [esi],?
  422674:	jbe    0x422625
  422676:	sub    ch,dh
  422678:	lods   eax,DWORD PTR ds:[esi]
  422679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267a:	jo     0x4226c6
  42267c:	sti    
  42267d:	movups xmm6,XMMWORD PTR [eax-0x4fe0a810]
  422684:	sahf   
  422685:	(bad)  
  422686:	mov    edi,0xc435a0bc
  42268b:	jb     0x4226ca
  42268d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42268e:	mov    al,ds:0x4e1517ec
  422693:	push   DWORD PTR [edi]
  422695:	inc    eax
  422696:	outs   dx,DWORD PTR ds:[esi]
  422697:	cmp    BYTE PTR [ecx-0x10],0x3e
  42269b:	imul   ebp,edx,0xc14322f8
  4226a1:	xor    dl,bh
  4226a3:	inc    eax
  4226a4:	pop    ecx
  4226a5:	push   eax
  4226a6:	loopne 0x42271c
  4226a8:	hlt    
  4226a9:	stc    
  4226aa:	jbe    0x4226c6
  4226ac:	ins    BYTE PTR es:[edi],dx
  4226ad:	call   0xbcd24f2b
  4226b2:	dec    esi
  4226b3:	stc    
  4226b4:	and    ebp,DWORD PTR [esi-0x48e49370]
  4226ba:	and    esi,ecx
  4226bc:	xchg   ecx,eax
  4226bd:	or     al,0x87
  4226bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c0:	push   eax
  4226c1:	test   eax,0xdedd5a62
  4226c6:	sub    eax,DWORD PTR [ecx-0x71]
  4226c9:	daa    
  4226ca:	cmp    al,0xab
  4226cc:	fcomp  st(5)
  4226ce:	inc    ebx
  4226cf:	ja     0x422661
  4226d1:	mul    BYTE PTR [edx+ebx*8-0x1e]
  4226d5:	pop    eax
  4226d6:	aas    
  4226d7:	sub    BYTE PTR [ebx-0x5b9b2533],bl
  4226dd:	lods   al,BYTE PTR ds:[esi]
  4226de:	das    
  4226df:	xor    BYTE PTR [ecx+0x74],ch
  4226e2:	dec    ebp
  4226e3:	xor    eax,0x2fe25da1
  4226e8:	push   DWORD PTR [ecx+ecx*1]
  4226eb:	inc    esp
  4226ec:	ret    0xe59
  4226ef:	scas   eax,DWORD PTR es:[edi]
  4226f0:	xor    BYTE PTR [edi+0x796b351d],dh
  4226f6:	and    BYTE PTR [eax+0x18],ch
  4226f9:	and    bh,BYTE PTR [esi+ebp*1-0x7d]
  4226fd:	hlt    
  4226fe:	int    0x1b
  422700:	bound  ebx,QWORD PTR [ebp+0x22]
  422703:	and    DWORD PTR [ecx-0x5d893e36],edi
  422709:	cmp    eax,0xe91890dd
  42270e:	test   esi,ebx
  422710:	fwait
  422711:	dec    ebx
  422712:	cmp    DWORD PTR [edi+0x70d06642],0x7b
  422719:	cmc    
  42271a:	(bad)  
  42271b:	stos   DWORD PTR es:[edi],eax
  42271c:	sti    
  42271d:	out    0x54,al
  42271f:	add    al,0xac
  422721:	call   0x431e:0xf814ce93
  422728:	mov    WORD PTR ds:0xea32e8b7,gs
  42272e:	add    al,0x78
  422730:	fwait
  422731:	lahf   
  422732:	pop    esp
  422733:	data16 addr16 mov cl,0x46
  422737:	outs   dx,BYTE PTR ds:[esi]
  422738:	je     0x422791
  42273a:	arpl   WORD PTR [ecx-0x58158935],di
  422740:	lods   al,BYTE PTR ds:[esi]
  422741:	sbb    BYTE PTR [esi],cl
  422743:	shr    dl,1
  422745:	or     al,BYTE PTR [eax]
  422747:	out    0xd2,al
  422749:	in     al,dx
  42274a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42274b:	cdq    
  42274c:	test   al,0x35
  42274e:	and    eax,ebx
  422750:	repnz cmp edi,0xffffffff
  422754:	adc    DWORD PTR [ebp+0x2775e577],ebp
  42275a:	scas   eax,DWORD PTR es:[edi]
  42275b:	mov    cs,ecx
  42275d:	lods   eax,DWORD PTR ds:[esi]
  42275e:	clc    
  42275f:	ror    DWORD PTR [edx+0xe],0xae
  422763:	mov    edx,eax
  422765:	outs   dx,BYTE PTR ds:[esi]
  422766:	and    dh,BYTE PTR [esi+0x34f77ede]
  42276c:	shl    BYTE PTR [eax],cl
  42276e:	mov    dl,BYTE PTR [ebx-0x4541fe38]
  422774:	pop    ebx
  422775:	call   FWORD PTR [edx+0x126d3169]
  42277b:	cmp    ch,cl
  42277d:	int    0xee
  42277f:	das    
  422780:	xchg   ebx,eax
  422781:	adc    DWORD PTR [ecx-0x3a],ebp
  422784:	adc    dl,BYTE PTR [edx]
  422786:	out    0xb6,al
  422788:	inc    ebp
  422789:	sti    
  42278a:	adc    eax,0x22b4c88e
  42278f:	pop    ss
  422790:	dec    esp
  422791:	mov    ebx,0x8ec2711b
  422796:	js     0x42274d
  422798:	push   esi
  422799:	xlat   BYTE PTR ds:[ebx]
  42279a:	cs push esi
  42279c:	or     ah,ch
  42279e:	scas   al,BYTE PTR es:[edi]
  42279f:	cs inc esi
  4227a1:	inc    ecx
  4227a2:	inc    esi
  4227a3:	test   BYTE PTR [edx+esi*1+0x320b476e],0xad
  4227ab:	in     al,0x66
  4227ad:	cs push ss
  4227af:	mov    bl,0xe8
  4227b1:	(bad)  
  4227b2:	push   DWORD PTR [edi]
  4227b4:	mov    ah,0xd4
  4227b6:	push   eax
  4227b7:	jne    0x42275f
  4227b9:	push   es
  4227ba:	cmp    BYTE PTR [esi],bl
  4227bc:	dec    ecx
  4227bd:	pop    edx
  4227be:	mov    ds:0x8bce2d68,eax
  4227c3:	not    dl
  4227c5:	mov    ebx,0x35b2f112
  4227ca:	xor    dh,BYTE PTR [ebp-0x20335d3d]
  4227d0:	pop    ebp
  4227d1:	xchg   edi,eax
  4227d2:	sbb    BYTE PTR [esi+0x27],bl
  4227d5:	jne    0x422831
  4227d7:	icebp  
  4227d8:	cmp    al,0xfe
  4227da:	fdiv   QWORD PTR ds:0x6ad57d5c
  4227e0:	stos   BYTE PTR es:[edi],al
  4227e1:	scas   eax,DWORD PTR es:[edi]
  4227e2:	mov    dh,0x2a
  4227e4:	inc    edx
  4227e5:	xchg   ebx,eax
  4227e6:	inc    ecx
  4227e7:	add    ebx,DWORD PTR [edx]
  4227e9:	into   
  4227ea:	sbb    ch,ah
  4227ec:	mov    esp,0xce7659bf
  4227f1:	push   ss
  4227f2:	ja     0x422796
  4227f4:	mov    esp,0x373a94c
  4227f9:	and    DWORD PTR gs:[edi],esp
  4227fc:	push   ss
  4227fd:	int3   
  4227fe:	sbb    edx,DWORD PTR [esi+0x6b93bb3c]
  422804:	push   esp
  422805:	mov    ecx,0x35977f2
  42280a:	and    bl,BYTE PTR [ebx+0x3195906]
  422810:	sub    al,BYTE PTR [ecx+edx*1+0x50346115]
  422817:	mov    ch,0xcc
  422819:	daa    
  42281a:	ja     0x42287d
  42281c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42281d:	mov    edi,0x7fd9c379
  422822:	fdivr  QWORD PTR [esi-0x5a]
  422825:	enter  0x1050,0x68
  422829:	out    0x1e,al
  42282b:	into   
  42282c:	test   DWORD PTR [esi+0x1e],0x5f01902c
  422833:	push   ss
  422834:	ja     0x4227ee
  422836:	in     eax,0x9c
  422838:	adc    ebp,DWORD PTR [esi+0x317a7ce5]
  42283e:	sbb    esi,0xf08d89c0
  422844:	aad    0x1b
  422846:	lea    ecx,[eax*4-0x52c4796d]
  42284d:	sub    cl,BYTE PTR [eax+0x1a]
  422850:	inc    ebp
  422851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422852:	jle    0x422843
  422854:	loop   0x4228bc
  422856:	mov    edi,0x1d911a99
  42285b:	pmaxub mm3,QWORD PTR [edx+0x711898b5]
  422862:	jl     0x422876
  422864:	xlat   BYTE PTR ds:[ebx]
  422865:	shl    DWORD PTR [ebx+0x31],0xff
  422869:	ins    BYTE PTR es:[edi],dx
  42286a:	out    dx,al
  42286b:	fld    QWORD PTR [edi-0x6a]
  42286e:	or     al,0xe6
  422870:	int3   
  422871:	pusha  
  422872:	jae    0x4228bd
  422874:	mov    bh,0x7c
  422876:	scas   eax,DWORD PTR es:[edi]
  422877:	mov    edi,DWORD PTR [esp+eiz*2+0xb]
  42287b:	inc    ebp
  42287c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287d:	inc    esp
  42287e:	mov    edi,DWORD PTR [ebp+0x5a]
  422881:	sbb    ch,BYTE PTR [edx-0x3cd19053]
  422887:	xchg   ebx,eax
  422888:	loop   0x4228b9
  42288a:	cmp    al,0x8c
  42288c:	sub    esp,DWORD PTR [ebx]
  42288e:	mov    ebp,0xa63018c
  422893:	call   0xa0ed2b23
  422898:	(bad)  
  422899:	or     DWORD PTR [ebx+0x34975a3f],esp
  42289f:	mov    dl,bl
  4228a1:	inc    edx
  4228a2:	mov    ah,0x98
  4228a4:	ins    DWORD PTR es:[edi],dx
  4228a5:	dec    ecx
  4228a6:	ret    0xe05e
  4228a9:	rep lods eax,DWORD PTR ds:[esi]
  4228ab:	lds    esi,FWORD PTR [ebx+0x66a6be58]
  4228b1:	je     0x422907
  4228b3:	out    0x8f,al
  4228b5:	mov    ah,dh
  4228b7:	bound  ebp,QWORD PTR [edi+0x6a45f4d6]
  4228bd:	out    dx,al
  4228be:	xor    BYTE PTR [edx-0x3cc7cf71],al
  4228c4:	or     al,0x45
  4228c6:	pushf  
  4228c7:	in     eax,dx
  4228c8:	mov    eax,ds:0x36222b65
  4228cd:	ret    
  4228ce:	sbb    al,0x73
  4228d0:	fisubr WORD PTR [ebx]
  4228d2:	ds fs pop esp
  4228d5:	loop   0x4228df
  4228d7:	xchg   esp,eax
  4228d8:	bswap  eax
  4228da:	push   ebp
  4228db:	jbe    0x4228cd
  4228dd:	mov    dh,0x5
  4228df:	pushf  
  4228e0:	jg     0x4228b1
  4228e2:	inc    ecx
  4228e3:	and    ebx,DWORD PTR [ebx-0x3c]
  4228e6:	push   ebp
  4228e7:	ret    
  4228e8:	out    0xca,eax
  4228ea:	gs int 0x2
  4228ed:	call   0x32a3:0xea8574
  4228f4:	fcmovbe st,st(7)
  4228f6:	pop    ss
  4228f7:	mov    bh,0xbf
  4228f9:	sahf   
  4228fa:	ins    DWORD PTR es:[edi],dx
  4228fb:	xor    bh,cl
  4228fd:	push   cs
  4228fe:	push   edi
  4228ff:	dec    esi
  422900:	stos   DWORD PTR es:[edi],eax
  422901:	and    BYTE PTR [edx-0x426cde9c],bh
  422907:	jecxz  0x4228f0
  422909:	xor    edi,DWORD PTR [ebp+0x3a53f4c9]
  42290f:	lock xchg ebx,eax
  422911:	and    al,0x58
  422913:	jl     0x422972
  422915:	xor    eax,0x56049f5a
  42291a:	ss iret 
  42291c:	mov    ebx,0x396e2b32
  422921:	nop
  422922:	xor    bh,bl
  422924:	daa    
  422925:	push   es
  422926:	or     al,bl
  422928:	lods   eax,DWORD PTR ds:[esi]
  422929:	sbb    al,0xf9
  42292b:	stos   BYTE PTR es:[edi],al
  42292c:	ja     0x422931
  42292e:	icebp  
  42292f:	aam    0x47
  422931:	stos   DWORD PTR es:[edi],eax
  422932:	mov    ch,0x12
  422934:	sbb    dh,BYTE PTR [eax+0x3f]
  422937:	adc    al,0x46
  422939:	xor    DWORD PTR [edi+0x956cd40],0xee324b39
  422943:	mov    ah,0x24
  422945:	dec    edi
  422946:	sub    BYTE PTR [esi+0x78],dh
  422949:	aaa    
  42294a:	push   edx
  42294b:	push   0x4
  42294d:	fs jno 0xa991cda1
  422954:	sbb    DWORD PTR [ecx+0x68],esi
  422957:	adc    BYTE PTR [edx+eax*4+0x1b],ah
  42295b:	mov    DWORD PTR [ebx],ebx
  42295d:	repz or edi,DWORD PTR [ebx-0x3062fdd]
  422964:	cld    
  422965:	and    BYTE PTR ss:[esi],ah
  422968:	ja     0x422908
  42296a:	sub    ah,al
  42296c:	outs   dx,DWORD PTR ds:[esi]
  42296d:	sub    DWORD PTR [ebx],ebx
  42296f:	push   ebx
  422970:	mov    esi,0xbf6db639
  422975:	aaa    
  422976:	add    edi,DWORD PTR [ebx]
  422978:	push   cs
  422979:	push   edi
  42297a:	and    esi,esp
  42297c:	sbb    DWORD PTR [ebx],eax
  42297e:	repnz mov esp,0xf2a99a93
  422984:	sbb    DWORD PTR [ebp+eax*1-0xa396532],edx
  42298b:	adc    DWORD PTR [ecx+0x19fb0f4b],edi
  422991:	pop    edi
  422992:	xor    al,0xf7
  422994:	(bad)  
  422995:	iret   
  422996:	add    dl,BYTE PTR ds:0xf946aba1
  42299c:	cdq    
  42299d:	lds    eax,FWORD PTR [edx+eax*2]
  4229a0:	adc    BYTE PTR [edi-0x1d183e75],dl
  4229a6:	pop    edi
  4229a7:	in     al,dx
  4229a8:	mov    eax,0x122fd14d
  4229ad:	pop    eax
  4229ae:	leave  
  4229af:	mov    esi,0xebf43222
  4229b4:	iret   
  4229b5:	loop   0x4229ef
  4229b7:	jmp    0x422972
  4229b9:	sub    ebp,edi
  4229bb:	push   cs
  4229bc:	cdq    
  4229bd:	sub    BYTE PTR [edx+eax*8-0x429ab5dc],cl
  4229c4:	pushf  
  4229c5:	add    DWORD PTR [ecx],ebx
  4229c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229c8:	rcl    BYTE PTR [edi-0x69],cl
  4229cb:	jo     0x422a4b
  4229cd:	dec    ebx
  4229ce:	xchg   ebx,eax
  4229cf:	stos   BYTE PTR es:[edi],al
  4229d0:	mov    ebx,DWORD PTR [edi+eiz*2-0x6a]
  4229d4:	jl     0x4229d9
  4229d6:	mov    edx,0xfe65bf60
  4229db:	push   0x7920c47c
  4229e0:	or     ecx,DWORD PTR [edx+0xfbbd267]
  4229e6:	retf   0x8c22
  4229e9:	iret   
  4229ea:	jecxz  0x422a4e
  4229ec:	jp     0x4229c6
  4229ee:	outs   dx,DWORD PTR ds:[esi]
  4229ef:	outs   dx,DWORD PTR ds:[esi]
  4229f0:	test   eax,0x1346e9d9
  4229f5:	mov    cl,0x51
  4229f7:	cmp    esi,DWORD PTR [ebp-0x62acfd30]
  4229fd:	push   edx
  4229fe:	cwde   
  4229ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a00:	add    DWORD PTR [edx+0x33],ebp
  422a03:	and    ecx,esp
  422a05:	lea    ebx,[ebx-0x1]
  422a08:	retf   0xa944
  422a0b:	scas   eax,DWORD PTR es:[edi]
  422a0c:	jge    0x4229dc
  422a0e:	xlat   BYTE PTR ds:[ebx]
  422a0f:	scas   al,BYTE PTR es:[edi]
  422a10:	add    eax,0x20d4a442
  422a15:	and    eax,0x5da6aa15
  422a1a:	inc    edx
  422a1b:	add    BYTE PTR [edi+0x70355334],al
  422a21:	push   0x4b
  422a23:	inc    ecx
  422a24:	mov    al,ds:0xb1b057db
  422a29:	pop    esp
  422a2a:	addr16 add al,0x34
  422a2d:	ins    BYTE PTR es:[edi],dx
  422a2e:	inc    ebx
  422a2f:	retf   0x8e95
  422a32:	sub    eax,0x97943e4b
  422a37:	(bad)  
  422a38:	cs dec eax
  422a3a:	cmp    BYTE PTR [edx-0x68],ch
  422a3d:	add    esi,esi
  422a3f:	repnz jmp 0x9e34:0x56e6a922
  422a47:	ss push 0x25f9561f
  422a4d:	fs push ebx
  422a4f:	aaa    
  422a50:	sub    al,0xe4
  422a52:	retf   
  422a53:	lds    eax,FWORD PTR [eax-0x9fb8387]
  422a59:	mov    ch,0xe3
  422a5b:	in     eax,0x55
  422a5d:	sub    al,al
  422a5f:	dec    ecx
  422a60:	inc    esp
  422a61:	xchg   bh,al
  422a63:	ret    0xc299
  422a66:	cmp    dl,dh
  422a68:	xchg   edx,eax
  422a69:	inc    edx
  422a6a:	leave  
  422a6b:	dec    ecx
  422a6c:	adc    bh,0x32
  422a6f:	stos   DWORD PTR es:[edi],eax
  422a70:	retf   0x642d
  422a73:	mov    edi,0x95ab0232
  422a78:	or     DWORD PTR [eax+ecx*4],0x526d5143
  422a7f:	cmp    bl,dh
  422a81:	popf   
  422a82:	outs   dx,DWORD PTR ds:[esi]
  422a83:	cmp    DWORD PTR [eax+0x21159f0],0xffffffb6
  422a8a:	nop
  422a8b:	(bad)  
  422a8c:	in     eax,0xa1
  422a8e:	cli    
  422a8f:	jo     0x422ab3
  422a91:	mov    eax,0xb674d9c9
  422a96:	jecxz  0x422a92
  422a98:	jns    0x422afa
  422a9a:	xor    ebp,edx
  422a9c:	retf   0x7570
  422a9f:	xchg   ebx,eax
  422aa0:	into   
  422aa1:	add    eax,edx
  422aa3:	jno    0x422ad9
  422aa5:	sahf   
  422aa6:	dec    esp
  422aa7:	sbb    esp,DWORD PTR [edx-0x7cec0607]
  422aad:	adc    al,0xe
  422aaf:	shl    BYTE PTR [eax],1
  422ab1:	inc    eax
  422ab2:	fsqrt  
  422ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ab5:	adc    esp,ecx
  422ab7:	mov    bh,0x5a
  422ab9:	loop   0x422aeb
  422abb:	(bad)  
  422abc:	push   ebx
  422abd:	not    BYTE PTR [ecx+0x60]
  422ac0:	or     eax,0x2966efec
  422ac5:	scas   al,BYTE PTR es:[edi]
  422ac6:	mov    ah,0x46
  422ac8:	adc    al,0x98
  422aca:	cmp    ah,BYTE PTR [esi+0xc8]
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx+0x7fc6055a],bh
  422ae2:	push   edi
  422ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae4:	add    DWORD PTR [eax],eax
  422ae6:	repz add al,0x0
  422ae9:	add    BYTE PTR [ebx],cl
  422aeb:	mov    edi,0xd59f7177
  422af0:	into   
  422af1:	jnp    0x422a97
  422af3:	shl    BYTE PTR [ebx+0x14],0xf2
  422af7:	mov    eax,0x2591eb53
  422afc:	mov    BYTE PTR [edx],ch
  422afe:	mov    ds:0x8ea4b69d,al
  422b03:	and    DWORD PTR [ebx],eax
  422b05:	jns    0x422ab5
  422b07:	or     bl,BYTE PTR [edx+0x70d3df34]
  422b0d:	mov    BYTE PTR [ecx+0x701e967c],ch
  422b13:	add    bl,BYTE PTR [ecx-0x638a9dcc]
  422b19:	push   edi
  422b1a:	cmp    al,0x42
  422b1c:	pop    ebx
  422b1d:	jno    0x422b6c
  422b1f:	sahf   
  422b20:	mov    ah,0x2e
  422b22:	ret    
  422b23:	loopne 0x422b0f
  422b25:	iret   
  422b26:	adc    DWORD PTR [ebp-0x11158c60],edi
  422b2c:	xchg   esi,eax
  422b2d:	cli    
  422b2e:	outs   dx,DWORD PTR ds:[esi]
  422b2f:	fs push es
  422b31:	mov    cl,0x7b
  422b33:	loopne 0x422b01
  422b35:	ins    BYTE PTR es:[edi],dx
  422b36:	inc    edx
  422b37:	dec    ecx
  422b38:	(bad)  [edi]
  422b3a:	std    
  422b3b:	push   cx
  422b3d:	mov    ebx,0xc8e481b7
  422b42:	pop    edx
  422b43:	sub    eax,0x99b52883
  422b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b49:	cmp    eax,0xd5175a86
  422b4e:	pop    esp
  422b4f:	(bad)  
  422b50:	sub    eax,0x6af5beb4
  422b55:	sub    eax,0xb883736f
  422b5a:	dec    edx
  422b5b:	stos   DWORD PTR es:[edi],eax
  422b5c:	shl    DWORD PTR [ecx+0x6a],1
  422b5f:	(bad)  
  422b60:	mov    ds:0x363c3f2,al
  422b65:	sub    al,0xf6
  422b67:	xor    ch,BYTE PTR [di+0x0]
  422b6b:	hlt    
  422b6c:	lahf   
  422b6d:	rcr    DWORD PTR [ebp+edx*2-0x79],0xa6
  422b72:	(bad)  
  422b73:	jmp    0x422b21
  422b75:	loop   0x422b9f
  422b77:	mov    dh,0x8b
  422b79:	mov    eax,ds:0xae1581b
  422b7e:	jno    0x422b9f
  422b80:	popa   
  422b81:	enter  0x8b2a,0xe
  422b85:	mov    dh,BYTE PTR [ecx-0xfb9df7c]
  422b8b:	lock push edx
  422b8d:	add    eax,0x9c27d270
  422b92:	popf   
  422b93:	inc    esi
  422b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b95:	ds ffreep st(7)
  422b98:	mov    bl,bh
  422b9a:	cmp    BYTE PTR [ebp+0x2b6cbc1c],bl
  422ba0:	xor    eax,0x51533491
  422ba5:	sbb    al,0x60
  422ba7:	jne    0x422c24
  422ba9:	fld    DWORD PTR [eax]
  422bab:	sbb    al,BYTE PTR ds:0x5cbae3b7
  422bb1:	add    al,0x47
  422bb3:	jmp    0x5702:0x986b6151
  422bba:	cs pop ss
  422bbc:	cmp    ch,BYTE PTR [edi-0x561ae0fa]
  422bc2:	push   DWORD PTR [edi+esi*8+0x7b]
  422bc6:	cs mov edx,0xc26a4dca
  422bcc:	aam    0x18
  422bce:	mov    ch,0x3a
  422bd0:	mul    dl
  422bd2:	out    0x2c,al
  422bd4:	rol    ebx,cl
  422bd6:	sub    BYTE PTR [esi+0x4d0f3807],cl
  422bdc:	pop    es
  422bdd:	enter  0xee17,0x90
  422be1:	in     al,0x7c
  422be3:	mov    eax,ds:0x299ac1a
  422be8:	push   edi
  422be9:	in     al,0xeb
  422beb:	pop    ebp
  422bec:	loope  0x422bab
  422bee:	stos   DWORD PTR es:[edi],eax
  422bef:	lds    esp,FWORD PTR [esi]
  422bf1:	gs in  al,0x74
  422bf4:	push   ebp
  422bf5:	and    esi,DWORD PTR ds:0xd79df19f
  422bfb:	cmp    eax,0xe6cdab6d
  422c00:	clc    
  422c01:	nop
  422c02:	push   edi
  422c03:	in     eax,dx
  422c04:	ins    DWORD PTR es:[edi],dx
  422c05:	(bad)  
  422c07:	jle    0x422c27
  422c09:	push   0x37
  422c0b:	and    eax,0x68339b9e
  422c10:	xor    esp,DWORD PTR [eax-0x5a]
  422c13:	xchg   edx,eax
  422c14:	inc    ecx
  422c15:	lahf   
  422c16:	jae    0x422c2b
  422c18:	fiadd  DWORD PTR [ecx+0xb]
  422c1b:	dec    edx
  422c1c:	push   0xc
  422c1e:	ror    BYTE PTR [ebx+0x7e],0x90
  422c22:	mov    dh,0x92
  422c24:	sbb    eax,0x2a485987
  422c29:	push   esp
  422c2a:	scas   al,BYTE PTR es:[edi]
  422c2b:	adc    cl,cl
  422c2d:	(bad)  
  422c2e:	jno    0x422c51
  422c30:	(bad)  
  422c31:	or     ecx,DWORD PTR [eax-0x6118bf2a]
  422c37:	fild   WORD PTR [eiz*4-0x6fa956d6]
  422c3e:	test   BYTE PTR [esi],bh
  422c40:	in     al,0x54
  422c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c43:	cld    
  422c44:	ss out dx,al
  422c46:	pop    eax
  422c47:	adc    bh,BYTE PTR [ecx+0x9]
  422c4a:	repz sub eax,DWORD PTR [ecx-0x79]
  422c4e:	ins    BYTE PTR es:[edi],dx
  422c4f:	xor    di,WORD PTR [esi+0x67a37ae8]
  422c56:	or     ecx,DWORD PTR [edx]
  422c58:	xor    BYTE PTR [edi+ebx*1+0x303cadcb],dh
  422c5f:	pushf  
  422c60:	jmp    0x422c18
  422c62:	add    al,0xc1
  422c64:	sahf   
  422c65:	cs or  eax,0x53ebc37e
  422c6b:	mov    eax,0xbb8f5d2c
  422c70:	jge    0x422c00
  422c72:	and    al,0x16
  422c74:	jg     0x422c6f
  422c76:	xchg   ecx,eax
  422c77:	aaa    
  422c78:	popa   
  422c79:	sbb    ch,BYTE PTR [ebx+edi*8]
  422c7c:	int3   
  422c7d:	js     0x422c68
  422c7f:	pavgw  mm3,QWORD PTR [edi]
  422c82:	retf   
  422c83:	das    
  422c84:	rcr    al,0xcd
  422c87:	jno    0x422c4a
  422c89:	je     0x422c7e
  422c8b:	adc    bl,BYTE PTR [eax]
  422c8d:	xlat   BYTE PTR ds:[ebx]
  422c8e:	jmp    0x422c5d
  422c90:	lea    ebp,[edi]
  422c92:	pop    edx
  422c93:	jo     0x422c70
  422c95:	add    edi,DWORD PTR [ebx]
  422c97:	loop   0x422c5e
  422c99:	xchg   ebx,eax
  422c9a:	(bad)  
  422c9b:	pop    edx
  422c9c:	lods   al,BYTE PTR ds:[esi]
  422c9d:	pop    ss
  422c9e:	loope  0x422cdc
  422ca0:	rol    DWORD PTR [edx+edx*4-0x4c],0xde
  422ca5:	mov    BYTE PTR [ebx-0x6e],cl
  422ca8:	aam    0xbe
  422caa:	xchg   esp,eax
  422cab:	cld    
  422cac:	shl    BYTE PTR [edx],0xa0
  422caf:	ss xchg ebx,eax
  422cb1:	int3   
  422cb2:	or     eax,0x185497fa
  422cb7:	xchg   BYTE PTR [ebx],dh
  422cb9:	jp     0x422c46
  422cbb:	inc    eax
  422cbc:	push   ds
  422cbd:	dec    esp
  422cbe:	icebp  
  422cbf:	cmp    al,0x43
  422cc1:	push   es
  422cc2:	and    eax,0xe70adce
  422cc7:	pop    esp
  422cc8:	aaa    
  422cc9:	cmp    al,0xe7
  422ccb:	lods   eax,DWORD PTR ds:[esi]
  422ccc:	mov    ebx,0x49a1512
  422cd1:	jne    0x422cbc
  422cd3:	and    ecx,esp
  422cd5:	sahf   
  422cd6:	cmp    eax,DWORD PTR [ebx-0x414a0a7e]
  422cdc:	mov    edi,0xb821fb6e
  422ce1:	dec    edx
  422ce2:	mov    BYTE PTR [ecx],bh
  422ce4:	xor    DWORD PTR [ebp+ecx*8-0x47f50b9b],ebx
  422ceb:	inc    esp
  422cec:	add    eax,0x5b3ad096
  422cf1:	ja     0x422c82
  422cf3:	mov    dl,0x47
  422cf5:	(bad)
  422cf8:	mov    dl,0x2f
  422cfa:	add    ch,BYTE PTR [ebp+0x2a]
  422cfd:	add    ah,BYTE PTR [edi]
  422cff:	xchg   BYTE PTR [ebx+0x32ea6745],bh
  422d05:	mov    dl,0x8b
  422d07:	pop    edx
  422d08:	jmp    0x422d87
  422d0a:	shl    BYTE PTR [eax],0x47
  422d0d:	mov    DWORD PTR ds:0x79e0630e,ebp
  422d13:	lea    esp,[eax+edi*4]
  422d16:	mov    dl,0x4a
  422d18:	xchg   BYTE PTR [edi],ch
  422d1a:	into   
  422d1b:	lahf   
  422d1c:	sub    ch,dl
  422d1e:	(bad)  
  422d1f:	aam    0x3e
  422d21:	mov    dl,BYTE PTR [ecx-0x6efe39cf]
  422d27:	dec    esp
  422d28:	out    dx,al
  422d29:	mov    eax,0x9056d2dc
  422d2e:	add    BYTE PTR [ebx],cl
  422d30:	mov    dl,0xd1
  422d32:	js     0x422cf3
  422d34:	fnstcw WORD PTR [eax+ebp*2-0x2d]
  422d38:	or     al,0x6a
  422d3a:	outs   dx,DWORD PTR ds:[esi]
  422d3b:	and    DWORD PTR [edi+eax*1-0x59db38cf],edx
  422d42:	push   ecx
  422d43:	lods   eax,DWORD PTR ds:[esi]
  422d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d45:	sbb    al,cl
  422d47:	jmp    DWORD PTR [ebx+eax*8-0x52]
  422d4b:	push   ebp
  422d4c:	mov    dl,0xf7
  422d4e:	pusha  
  422d4f:	or     eax,0xb1c852bf
  422d54:	pcmpeqw mm1,mm4
  422d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d58:	pushf  
  422d59:	into   
  422d5a:	or     BYTE PTR [edx-0x6a],dh
  422d5d:	sti    
  422d5e:	push   esi
  422d5f:	cmp    DWORD PTR [esi+0x1a],esp
  422d62:	dec    edx
  422d63:	outs   dx,DWORD PTR ds:[esi]
  422d64:	mov    al,BYTE PTR [ebx-0x6c]
  422d67:	pop    eax
  422d68:	retf   
  422d69:	jecxz  0x422d7f
  422d6b:	sbb    eax,0x5d6e2e2c
  422d70:	push   edi
  422d71:	cmp    DWORD PTR [ebp-0x21a36edb],0xfffffff4
  422d78:	int    0xa5
  422d7a:	dec    ebp
  422d7b:	jno    0x422d98
  422d7d:	jns    0x422dbb
  422d7f:	mov    ecx,0xdc50faa7
  422d84:	cmp    DWORD PTR [esi],ecx
  422d86:	out    0xfb,eax
  422d88:	div    DWORD PTR [ebx+0x68]
  422d8b:	push   cs
  422d8c:	cmp    eax,0x19916222
  422d91:	in     al,dx
  422d92:	scas   al,BYTE PTR es:[edi]
  422d93:	xchg   ebp,eax
  422d94:	or     eax,DWORD PTR [eax-0x73]
  422d97:	fsubr  QWORD PTR [edi-0x5d]
  422d9a:	daa    
  422d9b:	fadd   QWORD PTR [esp+edi*1]
  422d9e:	mov    ds:0x93f27ed4,al
  422da3:	mov    bl,0x79
  422da5:	mov    eax,ebp
  422da7:	pop    esp
  422da8:	jg     0x422dac
  422daa:	mov    esp,0x53181ad3
  422daf:	fcom   DWORD PTR [esi-0x53]
  422db2:	mov    ecx,?
  422db4:	(bad)  [edx-0x1f736a85]
  422dba:	pop    esi
  422dbb:	push   cs
  422dbc:	mov    bl,0x94
  422dbe:	repz (bad) 
  422dc0:	pop    edi
  422dc1:	test   al,0x57
  422dc3:	mov    ah,0xca
  422dc5:	repz icebp 
  422dc7:	aas    
  422dc8:	mov    eax,ds:0x5da61796
  422dcd:	in     al,dx
  422dce:	mov    edi,0x736588f1
  422dd3:	cmp    esi,DWORD PTR ds:0x8e1c0b35
  422dd9:	(bad)  
  422dda:	lea    ebx,[ebp-0x2cc2a358]
  422de0:	cs xor al,0xa6
  422de3:	add    al,0x1e
  422de5:	pop    ds
  422de6:	adc    ch,ah
  422de8:	push   0x41
  422dea:	mov    edx,0x26f20fab
  422def:	pop    ebx
  422df0:	shl    DWORD PTR [edi+ebp*2-0x680df7],0x38
  422df8:	mov    esp,0x73c2fb3a
  422dfd:	pop    esp
  422dfe:	je     0x422e16
  422e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e01:	inc    eax
  422e02:	nop
  422e03:	mov    ch,0x46
  422e05:	out    0xd7,eax
  422e07:	jg     0x422e4b
  422e09:	fmul   QWORD PTR [ecx+edi*4]
  422e0c:	imul   esi,DWORD PTR [eax+0x9],0x4c
  422e10:	imul   edi,DWORD PTR [esi],0x2c
  422e13:	jle    0x422e7f
  422e15:	cmp    DWORD PTR [edi],ebx
  422e17:	sbb    al,0xac
  422e19:	push   esp
  422e1a:	icebp  
  422e1b:	push   esi
  422e1c:	pushf  
  422e1d:	xchg   ebx,eax
  422e1e:	inc    eax
  422e1f:	push   edi
  422e20:	rcr    BYTE PTR [ebx-0x15e8818b],0x68
  422e27:	imul   edx,DWORD PTR [edi+0xc],0x1d
  422e2b:	mov    esp,0x11fcd193
  422e30:	shl    DWORD PTR [esi-0x798417e5],1
  422e36:	into   
  422e37:	cmp    al,0x74
  422e39:	mov    cl,0xcb
  422e3b:	(bad)  
  422e3c:	mov    BYTE PTR [edx-0x5],dh
  422e3f:	ret    0x45f2
  422e42:	adc    esi,DWORD PTR [ebp-0x606b3dbc]
  422e48:	sub    esi,ecx
  422e4a:	add    esp,DWORD PTR ds:0x7d81148b
  422e50:	pushf  
  422e51:	(bad)  [ecx-0x23bf62ea]
  422e57:	xor    al,0x1d
  422e59:	dec    eax
  422e5a:	xchg   ebp,eax
  422e5b:	lahf   
  422e5c:	out    dx,al
  422e5d:	pop    ebx
  422e5e:	jge    0x422e51
  422e60:	pop    esi
  422e61:	mov    ecx,0x2e33b019
  422e66:	(bad)  [ecx]
  422e68:	dec    esi
  422e69:	push   cs
  422e6a:	add    cl,0x2
  422e6d:	popa   
  422e6e:	or     bl,dh
  422e70:	push   ss
  422e71:	jo     0x422e4d
  422e73:	retf   0x8e39
  422e76:	cwde   
  422e77:	xor    al,0x8d
  422e79:	pop    DWORD PTR [esi-0x76a556fd]
  422e7f:	aam    0xaf
  422e81:	mov    ecx,0xda38f6c6
  422e86:	pop    esp
  422e87:	or     bh,BYTE PTR [edi]
  422e89:	pop    ebx
  422e8a:	aas    
  422e8b:	neg    bl
  422e8d:	or     cl,ah
  422e8f:	sub    ecx,ebx
  422e91:	cmp    ch,dh
  422e93:	test   eax,0x935ba767
  422e98:	sub    edi,edx
  422e9a:	mov    eax,ds:0x90148304
  422e9f:	jnp    0x422eac
  422ea1:	out    0xae,eax
  422ea3:	lahf   
  422ea4:	outs   dx,BYTE PTR ss:[esi]
  422ea6:	inc    esp
  422ea7:	dec    edi
  422ea8:	hlt    
  422ea9:	pop    ebp
  422eaa:	xchg   ecx,eax
  422eab:	cmp    esp,DWORD PTR [ebp-0x39]
  422eae:	pop    eax
  422eaf:	sub    ch,al
  422eb1:	xor    esi,eax
  422eb3:	mov    ebx,0xb3781c3e
  422eb8:	(bad)  
  422ebb:	retf   0x2f73
  422ebe:	test   al,0x6e
  422ec0:	fwait
  422ec1:	out    dx,al
  422ec2:	ja     0x422ebf
  422ec4:	pop    edi
  422ec5:	rcl    DWORD PTR [ecx+esi*8-0x6f8fe0e4],1
  422ecc:	rcl    ecx,cl
  422ece:	cs push esp
  422ed0:	pop    ss
  422ed1:	in     eax,dx
  422ed2:	cmp    eax,0xb4f60d3b
  422ed7:	(bad)  
  422ed8:	push   eax
  422ed9:	pop    ebp
  422eda:	cmp    bl,ch
  422edc:	aad    0x16
  422ede:	aaa    
  422edf:	jae    0x422ed5
  422ee1:	shr    BYTE PTR [edx],0x6d
  422ee4:	pop    ds
  422ee5:	(bad)  
  422ee6:	rcl    BYTE PTR [edi-0x734ece0],1
  422eec:	leave  
  422eed:	pop    eax
  422eee:	out    0x8a,eax
  422ef0:	sub    al,0xa9
  422ef2:	mov    ecx,DWORD PTR [eax]
  422ef4:	and    ah,BYTE PTR [ebx+0x295c5b13]
  422efa:	std    
  422efb:	or     DWORD PTR gs:[edx],0x2a
  422eff:	jno    0x422f65
  422f01:	mov    ds:0xa4fda947,al
  422f06:	xchg   ebp,eax
  422f07:	ds repnz inc ebp
  422f0a:	push   ss
  422f0b:	out    0x6a,eax
  422f0d:	adc    al,bh
  422f0f:	fisttp WORD PTR [ebp+0x51]
  422f12:	dec    edx
  422f13:	and    BYTE PTR [ebp+0x1a],dh
  422f16:	mov    eax,ds:0x314c2abe
  422f1b:	add    DWORD PTR [edx+0x2f536fc3],edx
  422f21:	and    eax,0x215bd35c
  422f26:	out    0x68,eax
  422f28:	fist   DWORD PTR [edi+0x73e6104c]
  422f2e:	dec    edi
  422f2f:	(bad)  
  422f30:	imul   ebp,DWORD PTR [edi],0x75
  422f33:	clc    
  422f34:	mov    bl,0x5e
  422f36:	xlat   BYTE PTR ds:[ebx]
  422f37:	aad    0x8
  422f39:	add    DWORD PTR [ebx],esi
  422f3b:	adc    al,0xe
  422f3d:	xor    ebp,DWORD PTR [ebx+0x5c12aeb8]
  422f43:	sbb    al,0x8d
  422f45:	mov    ds:0xfc16705,al
  422f4a:	sar    dl,cl
  422f4c:	cmp    edx,DWORD PTR [esp+edi*2-0x1a]
  422f50:	mov    eax,0x45f29fd5
  422f55:	sbb    DWORD PTR [ecx-0x11616221],0x589747a7
  422f5f:	dec    ebp
  422f60:	repnz int3 
  422f62:	ret    0xad6a
  422f65:	add    dh,ch
  422f67:	and    eax,0xe1143234
  422f6c:	jl     0x422f09
  422f6e:	xlat   BYTE PTR ds:[ebx]
  422f6f:	mul    DWORD PTR ds:0x87ff4e06
  422f75:	add    BYTE PTR [edi],al
  422f77:	retf   
  422f78:	cmc    
  422f79:	mov    ebp,0xc716bdd4
  422f7e:	ja     0x422f9d
  422f80:	test   BYTE PTR [edi+ebx*4-0x3c],al
  422f84:	mov    ah,0xbb
  422f86:	sbb    al,0xe0
  422f88:	cmc    
  422f89:	push   ss
  422f8a:	dec    edi
  422f8b:	outs   dx,DWORD PTR ds:[esi]
  422f8c:	or     cl,BYTE PTR [ecx+edi*1]
  422f8f:	outs   dx,DWORD PTR ds:[esi]
  422f90:	push   eax
  422f91:	(bad)  
  422f93:	cvttps2pi mm3,QWORD PTR ds:0x6990696
  422f9a:	adc    BYTE PTR [edx+edx*4+0x43500a5],dl
  422fa1:	cmp    BYTE PTR [esi-0x17],dh
  422fa4:	or     al,0xf9
  422fa6:	inc    ebp
  422fa7:	or     ebx,DWORD PTR [ecx+esi*1]
  422faa:	mov    ebx,0xb8090315
  422faf:	push   ds
  422fb0:	and    al,0xb2
  422fb2:	sub    dh,BYTE PTR [esi]
  422fb4:	test   BYTE PTR [edi+0x32ae53b9],bl
  422fba:	xchg   edx,eax
  422fbb:	add    BYTE PTR [ecx-0xb3d0f5c],dh
  422fc1:	inc    edi
  422fc2:	jo     0x423033
  422fc4:	push   edi
  422fc5:	xor    eax,0xe8db185b
  422fca:	cli    
  422fcb:	cs ins BYTE PTR es:[edi],dx
  422fcd:	mov    ecx,0x6ffc5629
  422fd2:	(bad)  
  422fd3:	idiv   DWORD PTR [esi]
  422fd5:	jb     0x422f99
  422fd7:	dec    ecx
  422fd8:	neg    BYTE PTR [edi+0xb]
  422fdb:	mov    edx,0xcf
  422fe0:	add    BYTE PTR [eax],al
  422fe2:	cvtdq2ps xmm0,XMMWORD PTR [esi+edx*1+0x5b9fdfd4]
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    ebp,DWORD PTR [esi+0x4a9ae237]
  422ff3:	test   eax,0x4f30001
  422ff8:	add    BYTE PTR [eax],al
  422ffa:	cwde   
  422ffb:	and    al,0xc2
  422ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ffe:	add    eax,0x74a707a5
  423003:	cmp    eax,0x31f84431
  423008:	mov    esp,0xff901a57
  42300d:	xlat   BYTE PTR ds:[ebx]
  42300e:	mov    ebp,eax
  423010:	and    bl,BYTE PTR [esi+esi*8-0x65]
  423014:	inc    ebp
  423015:	ret    0x2fe8
  423018:	fwait
  423019:	jmp    0x423066
  42301b:	add    eax,0x93451ccc
  423020:	adc    BYTE PTR [edi+0x2428cce8],bh
  423026:	imul   ebx,DWORD PTR [ebp+esi*4-0x63],0xffffffd1
  42302b:	xor    al,0x83
  42302d:	mov    cl,BYTE PTR [ebx+0x73010166]
  423033:	cmc    
  423034:	int    0x2f
  423036:	rol    DWORD PTR [eax+0x50a41c99],0x57
  42303d:	inc    esi
  42303e:	ret    0xcc21
  423041:	lock cmp ebp,DWORD PTR [esi]
  423044:	jnp    0x423011
  423046:	test   al,0xfd
  423048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423049:	(bad)  
  42304a:	in     eax,0x2e
  42304c:	(bad)  
  42304d:	in     al,0x30
  42304f:	jb     0x42302e
  423051:	div    dl
  423053:	sbb    cl,BYTE PTR [ebp+0x2282fba3]
  423059:	test   BYTE PTR [edi+0x616053fc],ah
  42305f:	cmp    esi,esi
  423061:	sub    BYTE PTR [edi],cl
  423063:	aam    0xa6
  423065:	pop    ss
  423066:	jne    0x423055
  423068:	dec    edx
  423069:	add    eax,DWORD PTR [ecx-0xc60c083]
  42306f:	nop
  423070:	mov    ecx,0x92468138
  423075:	and    DWORD PTR [eax],0xa2843f4e
  42307b:	push   ds
  42307c:	loope  0x423036
  42307e:	daa    
  42307f:	xor    BYTE PTR [edx+0x5a],dl
  423082:	nop
  423083:	xor    al,0xdf
  423085:	(bad)  
  423086:	jno    0x423072
  423088:	retf   
  423089:	mov    ch,0x89
  42308b:	sbb    DWORD PTR [ebx+0x66d72bc7],0xffffffae
  423092:	jbe    0x423089
  423094:	stc    
  423095:	ds mov bl,0x3
  423098:	lods   al,BYTE PTR ds:[esi]
  423099:	mov    ds:0x19c8b3cd,al
  42309e:	stc    
  42309f:	ins    DWORD PTR es:[edi],dx
  4230a0:	dec    edx
  4230a1:	outs   dx,DWORD PTR ds:[esi]
  4230a2:	pop    edx
  4230a3:	ja     0x4230a0
  4230a5:	stos   DWORD PTR es:[edi],eax
  4230a6:	loop   0x4230e9
  4230a8:	cmc    
  4230a9:	add    eax,0xd86b76c1
  4230ae:	jmp    FWORD PTR [ecx+eax*4]
  4230b1:	lods   eax,DWORD PTR ds:[esi]
  4230b2:	jecxz  0x42306a
  4230b4:	mov    al,ds:0xb94c6dd2
  4230b9:	pushf  
  4230ba:	inc    edx
  4230bb:	loopne 0x423066
  4230bd:	mov    bh,0x3b
  4230bf:	xchg   DWORD PTR ss:[esi],esi
  4230c2:	pushf  
  4230c3:	mov    BYTE PTR [ecx+0x34],al
  4230c6:	xor    BYTE PTR [ebx],ch
  4230c8:	pop    esi
  4230c9:	inc    ecx
  4230ca:	loope  0x4230a1
  4230cc:	jne    0x4230e2
  4230ce:	or     esi,DWORD PTR [ebx-0x100255d9]
  4230d4:	test   eax,0x3e7322e3
  4230d9:	xchg   ebp,eax
  4230da:	sub    eax,0xfeaa576b
  4230df:	cdq    
  4230e0:	imul   ecx,DWORD PTR [edx+eiz*8+0x3e],0xf4129600
  4230e8:	in     eax,0xa
  4230ea:	sub    al,0x61
  4230ec:	or     esp,edx
  4230ee:	gs jb  0x423155
  4230f1:	in     al,dx
  4230f2:	sbb    ah,BYTE PTR [eax-0x45]
  4230f5:	add    BYTE PTR [esi+0x4b],bl
  4230f8:	dec    esp
  4230f9:	or     BYTE PTR [ecx],ah
  4230fb:	pop    ebp
  4230fc:	xor    al,0xe
  4230fe:	pushf  
  4230ff:	test   al,0x6e
  423101:	inc    esp
  423102:	mov    ds:0x906a2460,eax
  423107:	pop    es
  423108:	imul   edi,DWORD PTR [ebp+0x62f3d04e],0xe5aae28a
  423112:	sub    bl,0x9f
  423115:	in     al,dx
  423116:	(bad)  
  423117:	sar    DWORD PTR [esi-0xb2b8c1b],1
  42311d:	stos   DWORD PTR es:[edi],eax
  42311e:	xor    al,0x20
  423120:	(bad)  
  423121:	retf   0x7056
  423124:	jnp    0x423105
  423126:	or     ebp,DWORD PTR [esi]
  423128:	icebp  
  423129:	inc    ecx
  42312a:	fisub  WORD PTR [eax]
  42312c:	add    dl,BYTE PTR [esi]
  42312e:	es cwde 
  423130:	test   DWORD PTR [ebx-0x8],esp
  423133:	or     ebp,DWORD PTR [edi+ecx*2-0x76]
  423137:	pop    ebp
  423138:	inc    esi
  423139:	mov    esp,0xf34e0d8
  42313e:	neg    BYTE PTR [ecx-0x78]
  423141:	in     al,0x5d
  423143:	push   esi
  423144:	addr16 cdq 
  423146:	lods   al,BYTE PTR ds:[esi]
  423147:	dec    esi
  423148:	test   eax,esp
  42314a:	jl     0x42316b
  42314c:	sub    DWORD PTR [eax+eax*4-0x22ab415],eax
  423153:	nop
  423154:	cli    
  423155:	scas   al,BYTE PTR es:[edi]
  423156:	or     BYTE PTR [esi+0x68],cl
  423159:	mov    BYTE PTR [eax-0x1d],dh
  42315c:	xchg   edx,eax
  42315d:	push   ss
  42315e:	(bad)  
  42315f:	and    ch,BYTE PTR [edi+0x7ee4c677]
  423165:	cmp    ebx,ebx
  423167:	dec    edx
  423168:	pop    es
  423169:	or     DWORD PTR [edx],0x54
  42316c:	test   eax,0x30c8a394
  423171:	daa    
  423172:	add    BYTE PTR ds:0x9f65f637,dh
  423178:	pusha  
  423179:	(bad)  
  42317a:	pop    ebx
  42317b:	aam    0x47
  42317d:	or     edi,esi
  42317f:	ja     0x4231e6
  423181:	xor    cl,BYTE PTR [esi-0x60fc8501]
  423187:	push   0x36
  423189:	repnz mov ds:0xedd3e245,al
  42318f:	lds    esp,FWORD PTR [ebx-0x45c92af2]
  423195:	adc    ebp,edi
  423197:	sub    eax,0xade077b5
  42319c:	mov    cs,WORD PTR ds:0x8732222f
  4231a2:	pop    esi
  4231a3:	adc    DWORD PTR [ecx+ebp*2+0x193d1416],esi
  4231aa:	gs es pop eax
  4231ad:	xchg   edx,eax
  4231ae:	sbb    eax,0x577d1bfd
  4231b3:	pop    esp
  4231b4:	or     BYTE PTR [edx],ch
  4231b6:	dec    ecx
  4231b7:	push   0x9d0128c1
  4231bc:	cmp    edi,DWORD PTR ds:0x78314fc3
  4231c2:	shl    BYTE PTR [ebp+0x19],1
  4231c5:	pop    ebx
  4231c6:	jo     0x4231f5
  4231c8:	ins    BYTE PTR es:[edi],dx
  4231c9:	in     eax,dx
  4231ca:	lea    eax,[ebp+0xb]
  4231cd:	dec    esi
  4231ce:	test   eax,0xfb19f11c
  4231d3:	or     al,0x7
  4231d5:	dec    eax
  4231d6:	out    dx,al
  4231d7:	jns    0x42323b
  4231d9:	mov    dl,0x55
  4231db:	out    0x72,eax
  4231dd:	jo     0x4231ec
  4231df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231e0:	dec    ebx
  4231e1:	mov    bh,0x28
  4231e3:	daa    
  4231e4:	mov    dl,0xcc
  4231e6:	lods   al,BYTE PTR ds:[esi]
  4231e7:	std    
  4231e8:	adc    BYTE PTR [edx+ecx*2+0x78],bh
  4231ec:	adc    edx,esi
  4231ee:	out    0xdf,eax
  4231f0:	cdq    
  4231f1:	stc    
  4231f2:	mov    esp,0xf93fe013
  4231f7:	push   esi
  4231f8:	div    DWORD PTR [esi+0x182f409d]
  4231fe:	jne    0x423269
  423200:	nop
  423201:	dec    ebx
  423202:	push   ebp
  423203:	shl    BYTE PTR [ebx+0x3c],cl
  423206:	jo     0x42324f
  423208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423209:	popa   
  42320a:	popa   
  42320b:	pop    ebp
  42320c:	lock (bad) 
  42320e:	mov    eax,0xe1853574
  423213:	dec    ebp
  423214:	or     BYTE PTR [eax+0x62],ah
  423217:	mov    eax,ds:0x4855b1bd
  42321c:	and    ah,ch
  42321e:	stos   BYTE PTR es:[edi],al
  42321f:	jae    0x42323c
  423221:	sub    ebx,DWORD PTR [edx+0x36]
  423224:	xor    BYTE PTR [ebp+0x43],dl
  423227:	scas   al,BYTE PTR es:[edi]
  423228:	aas    
  423229:	popf   
  42322a:	jb     0x423286
  42322c:	sub    BYTE PTR [ecx],ah
  42322e:	in     eax,0x3d
  423230:	cmp    DWORD PTR [edx],0xcf894b90
  423236:	ss jle 0x42323c
  423239:	and    al,0x71
  42323b:	icebp  
  42323c:	shr    dl,0xe5
  42323f:	dec    BYTE PTR [eax-0x63]
  423242:	pop    edx
  423243:	jbe    0x42324a
  423245:	xchg   esp,eax
  423246:	mov    ss,WORD PTR [ebx+0x49db12a0]
  42324c:	cmp    BYTE PTR [ebx],0x20
  42324f:	into   
  423250:	jbe    0x423289
  423252:	iret   
  423253:	sub    DWORD PTR [ebp+0x551d4c4a],edi
  423259:	xor    al,0x8f
  42325b:	in     al,dx
  42325c:	sub    DWORD PTR [ecx-0x173e81f4],edx
  423262:	cld    
  423263:	jle    0x423269
  423265:	mov    ebx,0xb1587339
  42326a:	push   ss
  42326b:	add    eax,0x93095991
  423270:	inc    esi
  423271:	mov    esp,0x2abd4d00
  423276:	lods   al,BYTE PTR ds:[esi]
  423277:	js     0x423204
  423279:	jp     0x4232c0
  42327b:	push   ds
  42327c:	cli    
  42327d:	hlt    
  42327e:	shl    BYTE PTR [edi],1
  423280:	stos   BYTE PTR es:[edi],al
  423281:	mov    eax,0xc4cd945e
  423286:	xor    DWORD PTR [edx+0x4cd25da8],eax
  42328c:	sub    bl,ch
  42328e:	shl    bh,0x11
  423291:	sbb    ebx,edx
  423293:	pop    ss
  423294:	fst    st(2)
  423296:	inc    eax
  423297:	add    eax,0x293b8dbe
  42329c:	mov    bl,0xd9
  42329e:	mov    WORD PTR [esi-0x66],es
  4232a1:	out    dx,eax
  4232a2:	dec    eax
  4232a3:	ss das 
  4232a5:	dec    ebx
  4232a6:	(bad)
  4232aa:	into   
  4232ab:	sub    dh,dl
  4232ad:	fimul  WORD PTR [eax-0x192173d3]
  4232b3:	stos   BYTE PTR es:[edi],al
  4232b4:	das    
  4232b5:	ds call 0xd68bf7b4
  4232bb:	sub    edx,DWORD PTR [esi+0x60]
  4232be:	shl    BYTE PTR [eax+0xd],0x6f
  4232c2:	or     dl,BYTE PTR [ecx]
  4232c4:	mov    edx,0xb105486e
  4232c9:	adc    al,BYTE PTR [esp+edi*1-0x37c89fea]
  4232d0:	fdiv   DWORD PTR [eax+0x7b]
  4232d3:	push   ecx
  4232d4:	and    esi,edx
  4232d6:	push   cs
  4232d7:	div    edi
  4232d9:	aaa    
  4232da:	jb     0x423293
  4232dc:	lods   eax,DWORD PTR ds:[esi]
  4232dd:	sbb    al,dl
  4232df:	clc    
  4232e0:	or     eax,0xd9a2ef3c
  4232e5:	out    0xbb,al
  4232e7:	cld    
  4232e8:	nop
  4232e9:	retf   
  4232ea:	and    DWORD PTR [eax+0x54],ecx
  4232ed:	xchg   BYTE PTR [edx-0x60],al
  4232f0:	aas    
  4232f1:	(bad)  
  4232f3:	mov    bh,0x82
  4232f5:	sbb    al,BYTE PTR [edi]
  4232f7:	or     bh,BYTE PTR [eax]
  4232f9:	aam    0xc8
  4232fb:	arpl   WORD PTR [ebx+ecx*2],sp
  4232fe:	hlt    
  4232ff:	inc    ebp
  423300:	dec    ecx
  423301:	stos   DWORD PTR es:[edi],eax
  423302:	adc    eax,0xf0907384
  423307:	pop    esp
  423308:	mov    bl,0xe3
  42330a:	dec    esp
  42330b:	mov    bh,0xd8
  42330d:	loopne 0x42329e
  42330f:	or     ch,BYTE PTR [edx-0x74]
  423312:	add    al,0xe8
  423314:	or     eax,eax
  423316:	scas   eax,DWORD PTR es:[edi]
  423317:	or     ah,BYTE PTR [esi+0x39]
  42331a:	cwde   
  42331b:	das    
  42331c:	pop    ebp
  42331d:	xchg   DWORD PTR [esi],ebx
  42331f:	push   esp
  423320:	mov    bh,0xee
  423322:	fucom  st(5)
  423324:	mov    WORD PTR [ebx+0x194e1983],es
  42332a:	inc    ecx
  42332b:	mov    ah,0xc7
  42332d:	pop    ebx
  42332e:	jle    0x4233a7
  423330:	or     eax,0xde2c8629
  423335:	mov    ecx,DWORD PTR [eax]
  423337:	sahf   
  423338:	mov    cl,0x7a
  42333a:	pop    esp
  42333b:	jo     0x42334d
  42333d:	fnstcw WORD PTR [ecx]
  42333f:	xchg   edx,eax
  423340:	fs (bad) 
  423342:	sub    eax,0x1debd8a1
  423347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423348:	test   BYTE PTR [esi],ah
  42334a:	xchg   DWORD PTR [ebx],eax
  42334c:	and    DWORD PTR [ebp+0x656e49],ebp
  423352:	and    BYTE PTR [ebp-0x504e6a8e],al
  423358:	and    BYTE PTR [esi-0x20],ah
  42335b:	push   ds
  42335c:	sub    DWORD PTR [edi],esi
  42335e:	pop    ebx
  42335f:	idiv   DWORD PTR [esi]
  423361:	add    BYTE PTR [edi],ah
  423363:	mov    al,ds:0xfc7688ac
  423368:	xchg   DWORD PTR [esi-0x20a4b592],esp
  42336e:	cli    
  42336f:	inc    eax
  423370:	leave  
  423371:	out    dx,eax
  423372:	xor    DWORD PTR [eax],esp
  423374:	push   esp
  423375:	(bad)  
  423376:	pop    ss
  423377:	imul   ebp,DWORD PTR [esi],0x1bf08981
  42337d:	inc    edx
  42337e:	or     BYTE PTR [eax-0x8],cl
  423381:	mov    esp,0xdb4febc1
  423386:	repnz test BYTE PTR [edi],dl
  423389:	dec    ebx
  42338a:	xchg   esp,eax
  42338b:	mov    ebp,0x916e8996
  423390:	fdiv   QWORD PTR [edx-0x7090ed17]
  423396:	fidivr WORD PTR [ecx]
  423398:	sbb    BYTE PTR [ecx],ah
  42339a:	js     0x423401
  42339c:	in     eax,dx
  42339d:	ds jne 0x42336e
  4233a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233a1:	ins    BYTE PTR es:[edi],dx
  4233a2:	(bad)  
  4233a4:	dec    edx
  4233a5:	xchg   DWORD PTR [esi+ebx*8-0x4f],esi
  4233a9:	popa   
  4233aa:	in     al,dx
  4233ab:	or     al,0x56
  4233ad:	nop
  4233ae:	arpl   WORD PTR [edi+0x13b94ebc],ax
  4233b4:	mov    bh,0x93
  4233b6:	lods   eax,DWORD PTR es:[esi]
  4233b8:	mov    dl,0x2d
  4233ba:	in     eax,0xca
  4233bc:	push   ebx
  4233bd:	call   0xaeb015b1
  4233c2:	xchg   ebp,eax
  4233c3:	rol    ebp,1
  4233c5:	sti    
  4233c6:	or     DWORD PTR [ecx],ebx
  4233c8:	jmp    0x4233d2
  4233ca:	sub    BYTE PTR [edi+ecx*4-0x4c],dl
  4233ce:	cs loope 0x4233f4
  4233d1:	sub    BYTE PTR ds:0xaeee5376,ah
  4233d7:	xchg   ecx,eax
  4233d8:	adc    eax,esp
  4233da:	dec    edi
  4233db:	shl    BYTE PTR ds:0x29c15b3e,1
  4233e1:	pop    ds
  4233e2:	jo     0x42338e
  4233e4:	jne    0x423401
  4233e6:	and    ecx,DWORD PTR [ebx-0x76]
  4233e9:	(bad)  
  4233ea:	sahf   
  4233eb:	pop    esp
  4233ec:	test   BYTE PTR [ecx],ah
  4233ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233ef:	push   es
  4233f0:	jbe    0x42344d
  4233f2:	push   ecx
  4233f3:	clc    
  4233f4:	and    BYTE PTR [ebx+0x0],ch
  4233f7:	mov    bl,0xf8
  4233f9:	sti    
  4233fa:	in     al,0x5c
  4233fc:	ret    0xc446
  4233ff:	cwde   
  423400:	dec    edi
  423401:	adc    cl,BYTE PTR [ebx]
  423403:	dec    edx
  423404:	in     eax,dx
  423405:	lock jle 0x4233e1
  423408:	xchg   ebp,eax
  423409:	out    dx,al
  42340a:	mov    fs,WORD PTR [ebp+0x5a]
  42340d:	cmp    BYTE PTR [ecx+0x3e],bl
  423410:	or     bh,0xa0
  423413:	aaa    
  423414:	sub    al,0xb4
  423416:	data16 sbb BYTE PTR [ebx+0x2a],0x19
  42341b:	ficom  WORD PTR [edi-0x44]
  42341e:	test   BYTE PTR [ebp+eax*4-0xc],al
  423422:	mov    cl,0xa0
  423424:	jge    0x42347c
  423426:	ins    BYTE PTR es:[edi],dx
  423427:	add    al,0x34
  423429:	mov    DWORD PTR [ebx],ecx
  42342b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42342c:	jp     0x42348c
  42342e:	xchg   esi,eax
  42342f:	sub    DWORD PTR [eax-0x35],esi
  423432:	imul   ebx,DWORD PTR [ebx],0xffffffcf
  423435:	imul   esp,DWORD PTR [eax-0x4b],0x9c0e8dde
  42343c:	lea    eax,[eax-0x7c3c70ca]
  423442:	mov    eax,0x850b4a94
  423447:	sahf   
  423448:	fild   QWORD PTR [esi]
  42344a:	iret   
  42344b:	data16 cmp al,0x8c
  42344e:	(bad)  
  42344f:	retf   
  423450:	test   al,0x2b
  423452:	es xor ebx,0xbadb50a8
  423459:	inc    edx
  42345a:	inc    ebp
  42345b:	je     0x4234af
  42345d:	jge    0x423479
  42345f:	jle    0x423462
  423461:	ja     0x4233ef
  423463:	les    ecx,FWORD PTR [ebp+0x5edebd3d]
  423469:	jl     0x4234e3
  42346b:	xchg   DWORD PTR [di-0xa],edi
  42346f:	cld    
  423470:	sti    
  423471:	mov    eax,0x895ac2f
  423476:	(bad)  
  423477:	sub    eax,0xda36665c
  42347c:	inc    edi
  42347d:	loope  0x4234b6
  42347f:	mov    cl,0x7e
  423481:	loope  0x4234e8
  423483:	sub    eax,0xfd0c6525
  423488:	and    BYTE PTR [eax+0x35711423],ch
  42348e:	bound  ecx,QWORD PTR [eax]
  423490:	repz mov ds:0xc11472c,al
  423496:	jg     0x4234e9
  423498:	sub    BYTE PTR [eax],ah
  42349a:	jg     0x423462
  42349c:	push   ds
  42349d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42349e:	loopne 0x4234e8
  4234a0:	out    0x56,eax
  4234a2:	ja     0x423510
  4234a4:	out    0x82,eax
  4234a6:	ins    BYTE PTR es:[edi],dx
  4234a7:	fdiv   QWORD PTR [ecx+0x2a]
  4234aa:	push   eax
  4234ab:	dec    esi
  4234ac:	fwait
  4234ad:	cmp    eax,0x7c51c8d2
  4234b2:	jb     0x4234a3
  4234b4:	je     0x4234d5
  4234b6:	stos   DWORD PTR es:[edi],eax
  4234b7:	mov    al,gs:0xeff89cd7
  4234bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234be:	xor    al,0xdb
  4234c0:	jb     0x42346d
  4234c2:	ins    BYTE PTR es:[edi],dx
  4234c3:	adc    al,0x65
  4234c5:	dec    esi
  4234c6:	xlat   BYTE PTR ds:[ebx]
  4234c7:	pop    esi
  4234c8:	bnd jnp 0x4234eb
  4234cb:	ins    BYTE PTR es:[edi],dx
  4234cc:	inc    eax
  4234cd:	inc    ebp
  4234ce:	fs xchg esi,eax
  4234d0:	imul   ebx,eax,0xcffa5cee
  4234d6:	push   ds
  4234d7:	bound  eax,QWORD PTR [eax]
  4234d9:	mov    ebx,0x49758443
  4234de:	inc    ebp
  4234df:	nop
  4234e0:	test   BYTE PTR [ecx],dh
  4234e2:	mov    bh,0x7d
  4234e4:	mov    edi,0x1c6963e
  4234e9:	cs loopne 0x4234e0
  4234ec:	sub    DWORD PTR [eax],eax
  4234ee:	add    BYTE PTR [eax],al
  4234f0:	add    BYTE PTR [eax],al
  4234f2:	dec    ecx
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	xchg   edx,eax
  4234ff:	test   al,0xb6
  423501:	push   ds
  423502:	cmp    eax,0xf30001ae
  423507:	add    al,0x0
  423509:	add    BYTE PTR [edx+0x5a],ah
  42350c:	aaa    
  42350d:	mov    esp,0x2ab21391
  423512:	mov    bl,dl
  423514:	mov    bh,0x81
  423516:	loope  0x42350f
  423518:	sti    
  423519:	ins    DWORD PTR es:[edi],dx
  42351a:	add    BYTE PTR cs:[eax+0x49],bh
  42351e:	retf   
  42351f:	adc    eax,DWORD PTR ds:0x8ef5658a
  423525:	mov    eax,ds:0x48bb1c09
  42352a:	pop    esi
  42352b:	test   DWORD PTR [esi+0x22],edi
  42352e:	scas   eax,DWORD PTR es:[edi]
  42352f:	out    dx,al
  423530:	gs dec ebp
  423532:	cs inc ebp
  423534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423535:	mov    ch,0x10
  423537:	rcl    DWORD PTR [edi],cl
  423539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42353a:	jmp    0x87d348bf
  42353f:	cdq    
  423540:	or     al,0xf6
  423542:	or     edi,edx
  423544:	jecxz  0x4234f9
  423546:	mov    eax,ds:0x76439f05
  42354b:	ja     0x423521
  42354d:	adc    BYTE PTR [ebp-0x3e062530],bl
  423553:	retf   0x79f0
  423556:	mov    ebp,0xaf23ef29
  42355b:	inc    ecx
  42355c:	jecxz  0x4235bf
  42355e:	or     eax,0x58c5c442
  423563:	or     ah,dh
  423565:	adc    al,0x8e
  423567:	add    bh,BYTE PTR [edx]
  423569:	xor    eax,0x1e287ba7
  42356e:	pop    edx
  42356f:	cmp    eax,eax
  423571:	sub    ah,ch
  423573:	clc    
  423574:	(bad)  
  423575:	(bad)  [edx]
  423577:	lock mov edi,DWORD PTR [edx+0x2d76ceed]
  42357e:	pusha  
  42357f:	adc    DWORD PTR [esi+0x291454df],esi
  423585:	pop    edi
  423586:	sar    BYTE PTR [edx+0x61],1
  423589:	pushf  
  42358a:	pop    ecx
  42358b:	jo     0x4235f6
  42358d:	sub    DWORD PTR [edx],eax
  42358f:	add    DWORD PTR [eax+0xe0e4b18],edi
  423595:	mov    eax,ds:0x7c078df9
  42359a:	in     eax,dx
  42359b:	enter  0x1448,0x51
  42359f:	enter  0x30d,0xbc
  4235a3:	sbb    ebx,DWORD PTR [esi+0x56]
  4235a6:	push   edi
  4235a7:	out    dx,eax
  4235a8:	lock outs dx,BYTE PTR ds:[esi]
  4235aa:	and    al,0x50
  4235ac:	dec    ecx
  4235ad:	das    
  4235ae:	icebp  
  4235af:	fldz   
  4235b1:	lds    ebx,FWORD PTR [esi-0x3c]
  4235b4:	cdq    
  4235b5:	rol    DWORD PTR [ecx+ebp*8+0x55],0x9d
  4235ba:	mov    ebp,0x34fe5070
  4235bf:	and    edi,esi
  4235c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235c2:	sahf   
  4235c3:	fisttp WORD PTR [edi+0x6e20088b]
  4235c9:	dec    DWORD PTR [edi-0x60d0bad3]
  4235cf:	push   esi
  4235d0:	shl    BYTE PTR [ecx-0x753773c1],0x2
  4235d7:	or     BYTE PTR [ebp-0x455dbcab],al
  4235dd:	mov    ds:0x21fda2e0,eax
  4235e2:	xor    BYTE PTR [esi-0x12],0x47
  4235e6:	sbb    al,0x3c
  4235e8:	fnsave [eax-0x60771a89]
  4235ee:	lahf   
  4235ef:	psraw  mm5,QWORD PTR [edi+0x77]
  4235f3:	and    DWORD PTR [edi-0x6d],0xf75f5e87
  4235fa:	xor    eax,DWORD PTR [edx+ebx*2+0x5b6be4fb]
  423601:	int    0xb4
  423603:	pop    ebx
  423604:	mov    ds:0x40758160,eax
  423609:	and    bl,al
  42360b:	push   0x43
  42360d:	or     eax,esi
  42360f:	dec    eax
  423610:	mov    WORD PTR [edx+0x5f],fs
  423613:	sbb    BYTE PTR ds:0xa11bdc66,bh
  423619:	mov    bh,BYTE PTR [ebp+0x40]
  42361c:	sahf   
  42361d:	cld    
  42361e:	(bad)  
  42361f:	xor    cl,cl
  423621:	stos   DWORD PTR es:[edi],eax
  423622:	mov    ebx,0x396e2761
  423627:	std    
  423628:	add    eax,0x43baa42c
  42362d:	repnz add DWORD PTR [ecx-0x22],0x29
  423632:	sub    al,0x77
  423634:	mov    ebx,0xb6b14c30
  423639:	sbb    eax,0x36cb6d34
  42363e:	test   BYTE PTR [ebx],al
  423640:	aas    
  423641:	fldenv [edx]
  423643:	xchg   ebx,eax
  423644:	icebp  
  423645:	enter  0xce05,0xd6
  423649:	cld    
  42364a:	fdivr  QWORD PTR [edx]
  42364c:	lds    esp,FWORD PTR [edi+0x6f]
  42364f:	mov    dh,0x25
  423651:	pop    eax
  423652:	push   es
  423653:	lods   eax,DWORD PTR ds:[esi]
  423654:	lods   al,BYTE PTR ds:[esi]
  423655:	dec    ebp
  423656:	hlt    
  423657:	lds    ecx,FWORD PTR [edi+0x5e2dab1f]
  42365d:	fs pushf 
  42365f:	and    bh,BYTE PTR [ecx+0x1b]
  423662:	jmp    0x17bf5a0e
  423667:	inc    ebx
  423668:	mov    edi,0xd41f2d0d
  42366d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42366e:	in     al,0x1b
  423670:	stos   BYTE PTR es:[edi],al
  423671:	imul   ecx,DWORD PTR [eax-0x3a],0xd788d0d5
  423678:	jle    0x423650
  42367a:	out    dx,al
  42367b:	das    
  42367c:	mov    WORD PTR ds:0xaf7fdb66,es
  423682:	dec    esi
  423683:	pusha  
  423684:	and    eax,0xffe81ce4
  423689:	mov    bh,0xe6
  42368b:	mov    eax,0x2ea60e16
  423690:	inc    esp
  423691:	out    0x4e,eax
  423693:	stos   DWORD PTR es:[edi],eax
  423694:	in     al,dx
  423695:	loope  0x423649
  423697:	repnz inc ecx
  423699:	outs   dx,BYTE PTR ds:[esi]
  42369a:	pop    eax
  42369b:	loope  0x4236f4
  42369d:	jl     0x423694
  42369f:	aam    0x67
  4236a1:	enter  0x7aa8,0x9c
  4236a5:	cdq    
  4236a6:	in     eax,0x5
  4236a8:	mov    edx,0xdf64a3f9
  4236ad:	bound  ebp,QWORD PTR [ebx+0x12]
  4236b0:	mov    DWORD PTR ds:0x21a541db,edi
  4236b6:	push   es
  4236b7:	mov    dl,0xc7
  4236b9:	and    bh,bh
  4236bb:	mov    esp,0x858d916
  4236c0:	(bad)  
  4236c2:	jmp    0x423721
  4236c4:	mov    ds:0xab21fcf6,eax
  4236c9:	push   edi
  4236ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236cb:	lahf   
  4236cc:	ror    DWORD PTR [edi],cl
  4236ce:	call   0x9b6c:0x70f
  4236d4:	add    dh,bl
  4236d6:	fstp   QWORD PTR [bp+si+0x60]
  4236da:	push   ebx
  4236db:	mov    edi,0x27ec27d0
  4236e0:	adc    edi,esp
  4236e2:	pop    es
  4236e3:	(bad)  
  4236e4:	xlat   BYTE PTR ds:[ebx]
  4236e5:	cmc    
  4236e6:	loopne 0x423752
  4236e8:	mov    esp,0xbe93078b
  4236ed:	xor    esp,DWORD PTR ds:0xeb4cb9ea
  4236f3:	add    eax,DWORD PTR [ebx+0x7344c7d2]
  4236f9:	in     eax,dx
  4236fa:	pop    es
  4236fb:	inc    eax
  4236fc:	push   cs
  4236fd:	test   BYTE PTR [eax-0x7c],bl
  423700:	push   edx
  423701:	pop    ecx
  423702:	jmp    0x7f2d:0xc9fc464b
  423709:	adc    BYTE PTR [esi+0x2b],bh
  42370c:	mov    WORD PTR [esi-0x39],gs
  42370f:	adc    ch,BYTE PTR [edx-0x679944a4]
  423715:	lea    eax,[ecx+ebx*2-0x7e]
  423719:	es mov es,edi
  42371c:	dec    edi
  42371d:	sti    
  42371e:	(bad)
  423722:	jp     0x423720
  423724:	adc    BYTE PTR [ebx],al
  423726:	mov    ecx,0x8fad8628
  42372b:	cwde   
  42372c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42372d:	cmovl  ecx,DWORD PTR [edx-0x6a]
  423731:	pop    ebx
  423732:	cli    
  423733:	xor    dl,BYTE PTR [ebp-0xb]
  423736:	or     esi,edi
  423738:	mov    edx,DWORD PTR [edx+0x1c]
  42373b:	add    eax,0xd1660928
  423740:	inc    ecx
  423741:	add    al,0xf8
  423743:	std    
  423744:	dec    edx
  423745:	mov    bl,0x46
  423747:	dec    eax
  423748:	das    
  423749:	add    ebp,esp
  42374b:	sbb    al,dl
  42374d:	dec    edx
  42374e:	cmc    
  42374f:	in     eax,dx
  423750:	pop    edx
  423751:	(bad)  [edi-0xe]
  423754:	aas    
  423755:	dec    edx
  423756:	xor    dl,BYTE PTR [esi-0xa323ceb]
  42375c:	add    bl,BYTE PTR [ecx+0x7c315f06]
  423762:	dec    edi
  423763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423764:	mov    ah,BYTE PTR [eax+0x6403b5cc]
  42376a:	xor    eax,DWORD PTR [eax+edx*8]
  42376d:	inc    ebp
  42376e:	loope  0x4237a8
  423770:	aad    0x1c
  423772:	adc    eax,0x434dd8b5
  423777:	aaa    
  423778:	sbb    ebp,DWORD PTR [esi+edx*8+0x40]
  42377c:	pop    ebp
  42377d:	outs   dx,DWORD PTR ds:[esi]
  42377e:	and    eax,0x5c72fce8
  423783:	sub    al,0xc2
  423785:	inc    edi
  423786:	and    BYTE PTR [edi],dl
  423788:	test   ecx,edx
  42378a:	shl    BYTE PTR [ebp+0x5011ada1],0x4f
  423791:	repz das 
  423793:	and    eax,0xc3c4b276
  423798:	outs   dx,DWORD PTR ds:[esi]
  423799:	out    0x9c,eax
  42379b:	les    ecx,FWORD PTR [ecx+0x43]
  42379e:	xchg   DWORD PTR [eax-0x55d91904],eax
  4237a4:	xchg   DWORD PTR [ebx+edx*2+0x8],ebx
  4237a8:	pushf  
  4237a9:	scas   eax,DWORD PTR es:[edi]
  4237aa:	repnz fiadd DWORD PTR [edi-0x59]
  4237ae:	mov    al,ds:0x76a7cbfa
  4237b3:	neg    BYTE PTR [esp+ebx*8]
  4237b6:	clc    
  4237b7:	aaa    
  4237b8:	push   0xd5f0c5ad
  4237bd:	and    dl,BYTE PTR [edx-0x1e17a428]
  4237c3:	clc    
  4237c4:	sbb    DWORD PTR [ecx],esp
  4237c6:	pop    edi
  4237c7:	push   ecx
  4237c8:	shr    BYTE PTR [eax],0xc
  4237cb:	mov    esi,0x6a889c7e
  4237d0:	adc    ah,dh
  4237d2:	mov    bl,dh
  4237d4:	in     eax,dx
  4237d5:	stos   DWORD PTR es:[edi],eax
  4237d6:	ja     0x423775
  4237d8:	pop    ss
  4237d9:	mov    dh,0x78
  4237db:	xor    dh,BYTE PTR [esi+edx*4+0x3c2aff94]
  4237e2:	bound  eax,QWORD PTR [ecx]
  4237e4:	leave  
  4237e5:	das    
  4237e6:	cld    
  4237e7:	sbb    ah,BYTE PTR [edx-0x24]
  4237ea:	sbb    DWORD PTR [ecx+0x13a6b5fc],ebx
  4237f0:	xor    DWORD PTR [ecx+0xf940cee],edi
  4237f6:	xor    BYTE PTR [ecx],0x2a
  4237f9:	inc    ebx
  4237fa:	or     al,0x44
  4237fc:	jno    0x423816
  4237fe:	dec    edx
  4237ff:	adc    dl,BYTE PTR [edx]
  423801:	xchg   DWORD PTR [si+0x37],ecx
  423805:	inc    ebx
  423806:	dec    eax
  423807:	clc    
  423808:	xchg   esp,eax
  423809:	ins    BYTE PTR es:[edi],dx
  42380a:	push   ecx
  42380b:	fs pushf 
  42380d:	inc    edx
  42380e:	cld    
  42380f:	and    cl,0x59
  423812:	mov    ebx,0xad326f13
  423817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423818:	in     eax,0xc9
  42381a:	fdivr  QWORD PTR [ecx+ebp*1-0x15863d0c]
  423821:	inc    eax
  423822:	shl    DWORD PTR [edx],1
  423824:	jle    0x42382d
  423826:	les    ebx,FWORD PTR [ebx-0x6b45511b]
  42382c:	pop    ebx
  42382d:	lock push es
  42382f:	xchg   esi,eax
  423830:	daa    
  423831:	loopne 0x42383e
  423833:	fisttp WORD PTR [ebp-0x67b9ee32]
  423839:	cwde   
  42383a:	mov    al,0xe0
  42383c:	aaa    
  42383d:	sahf   
  42383e:	fld    QWORD PTR [eax]
  423840:	repnz mov ebx,DWORD PTR [ebx-0x691bfc48]
  423847:	sub    esi,DWORD PTR [edi-0x54]
  42384a:	es addr16 jg 0x423835
  42384e:	cwde   
  42384f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423850:	nop
  423851:	lods   eax,DWORD PTR ds:[esi]
  423852:	pop    ebx
  423853:	aas    
  423854:	dec    esi
  423855:	cdq    
  423856:	mov    bh,0xe2
  423858:	mov    DWORD PTR [edi+0x304bd759],esp
  42385e:	imul   esp,DWORD PTR [edx],0x6811706c
  423864:	inc    ecx
  423865:	sub    edx,edx
  423867:	push   edi
  423868:	jbe    0x423883
  42386a:	mov    eax,ds:0x4abc6ee3
  42386f:	pop    ds
  423870:	adc    eax,0x96b905ef
  423875:	push   ebp
  423876:	clc    
  423877:	pop    edi
  423878:	sub    bl,BYTE PTR [eax+0x48]
  42387b:	mov    bh,0x2e
  42387d:	sub    dh,BYTE PTR [ebx]
  42387f:	or     esi,edi
  423881:	cmp    ecx,DWORD PTR [eax-0x3f325ced]
  423887:	(bad)  
  423889:	fdiv   DWORD PTR [edx-0x3471627c]
  42388f:	mul    bh
  423891:	jle    0x423865
  423893:	ja     0x4238f1
  423895:	add    eax,0x9068766a
  42389a:	in     eax,0x44
  42389c:	and    ah,BYTE PTR [esi-0x73]
  42389f:	fnstsw WORD PTR [edi+eax*1-0x72]
  4238a3:	or     dl,BYTE PTR [edx-0x21fad272]
  4238a9:	jns    0x42383f
  4238ab:	sahf   
  4238ac:	sbb    BYTE PTR [edi+edx*1-0x3d],ch
  4238b0:	jecxz  0x423861
  4238b2:	adc    BYTE PTR [ebp-0x9b8472a],ch
  4238b8:	leave  
  4238b9:	scas   eax,DWORD PTR es:[edi]
  4238ba:	ret    0x57fc
  4238bd:	lds    esp,FWORD PTR [eax+edx*4]
  4238c0:	mov    es,WORD PTR [ecx+0x33e5d01d]
  4238c6:	pop    edi
  4238c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238c8:	and    al,ch
  4238ca:	(bad)  
  4238cb:	fst    QWORD PTR [edx+0x66bd9972]
  4238d1:	push   esp
  4238d2:	dec    esi
  4238d3:	inc    edi
  4238d4:	not    DWORD PTR [ebx]
  4238d6:	and    eax,0x9137a6ac
  4238db:	test   al,0xcc
  4238dd:	cli    
  4238de:	ficomp DWORD PTR [eax]
  4238e0:	leave  
  4238e1:	in     al,0x8e
  4238e3:	fs inc esi
  4238e5:	and    dh,BYTE PTR [ebx-0x44cbe29b]
  4238eb:	cld    
  4238ec:	bound  edi,QWORD PTR [edi+0x4602d8b6]
  4238f2:	int    0x6d
  4238f4:	test   ecx,edi
  4238f6:	enter  0x3286,0xa2
  4238fa:	and    DWORD PTR [edi+0x15d8e03b],eax
  423900:	dec    bl
  423902:	mov    ecx,0xecc0e85c
  423907:	rol    bl,cl
  423909:	xchg   ebx,eax
  42390a:	stos   DWORD PTR es:[edi],eax
  42390b:	mov    cl,0x4d
  42390d:	sbb    DWORD PTR [edi],esp
  42390f:	sub    bh,ch
  423911:	pop    edi
  423912:	fidiv  WORD PTR [esi]
  423914:	nop
  423915:	adc    ch,BYTE PTR [eax+0x5f75ca10]
  42391b:	push   ebx
  42391c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42391d:	inc    edx
  42391e:	rcl    DWORD PTR [edx+0x8],0xb
  423922:	sar    DWORD PTR [ebx],cl
  423924:	xchg   edi,eax
  423925:	cmp    ebx,edx
  423927:	push   ds
  423928:	adc    BYTE PTR [ecx+0x3caef072],cl
  42392e:	add    edx,eax
  423930:	std    
  423931:	push   ebp
  423932:	xchg   edx,eax
  423933:	mov    al,al
  423935:	lock stos BYTE PTR es:[edi],al
  423937:	scas   eax,DWORD PTR es:[edi]
  423938:	mov    ebp,0x78937d19
  42393d:	rcl    dh,1
  42393f:	mov    eax,ds:0x5b271b42
  423944:	and    DWORD PTR [eax-0x25],esp
  423947:	adc    DWORD PTR [esp+ebx*2+0x541d7674],esp
  42394e:	xor    ch,0x2c
  423951:	adc    BYTE PTR [esi],ah
  423953:	cmp    edx,DWORD PTR [ebx+0x47]
  423956:	pop    ebp
  423957:	fwait
  423958:	inc    ebp
  423959:	push   esp
  42395a:	arpl   WORD PTR [eax+0x14],di
  42395d:	loope  0x4239d5
  42395f:	out    dx,eax
  423960:	add    BYTE PTR [eax],bh
  423962:	outs   dx,BYTE PTR ds:[esi]
  423963:	jne    0x423986
  423965:	jecxz  0x4239c1
  423967:	dec    esi
  423968:	xchg   ebp,eax
  423969:	or     eax,0x4b486be1
  42396e:	lea    eax,[edi+0xa]
  423971:	jp     0x4239d4
  423973:	inc    eax
  423974:	arpl   di,si
  423976:	repz pop ebx
  423978:	ja     0x4239b4
  42397a:	pop    ss
  42397b:	in     al,dx
  42397c:	adc    dl,BYTE PTR [ecx-0x6e]
  42397f:	sbb    edx,DWORD PTR [ecx+0x58]
  423982:	stos   DWORD PTR es:[edi],eax
  423983:	div    dh
  423985:	addr16 push cs
  423987:	sbb    DWORD PTR [esi+0x4c],edi
  42398a:	std    
  42398b:	in     al,0xc7
  42398d:	mov    esi,0xa05f9106
  423992:	repnz out 0x2e,ax
  423996:	or     dh,ch
  423998:	mov    eax,0x4a9dcef7
  42399d:	jne    0x423a0d
  42399f:	mov    dl,0x42
  4239a1:	fs jo  0x423999
  4239a4:	addr16 push ss
  4239a6:	sbb    ecx,DWORD PTR [eax+esi*2-0x4c]
  4239aa:	in     al,0xeb
  4239ac:	bound  eax,QWORD PTR [ebx+ebx*2-0x19]
  4239b0:	sub    edx,ebp
  4239b2:	leave  
  4239b3:	xor    BYTE PTR [esp+eiz*8-0x2d48f66],cl
  4239ba:	mov    al,0x81
  4239bc:	dec    ebp
  4239bd:	aad    0xe
  4239bf:	mov    ebp,0xaf5f79aa
  4239c4:	call   0x1eb173db
  4239c9:	xchg   ecx,eax
  4239ca:	inc    edi
  4239cb:	or     DWORD PTR [ecx],edi
  4239cd:	outs   dx,BYTE PTR ss:[esi]
  4239cf:	popf   
  4239d0:	and    eax,DWORD PTR [eax+0x3351bd06]
  4239d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239d7:	xchg   ebx,eax
  4239d8:	sub    eax,0x3b67b6fd
  4239dd:	data16 jns 0x423a37
  4239e0:	call   0x81d3cc1
  4239e5:	jecxz  0x423a23
  4239e7:	adc    ecx,ecx
  4239e9:	jns    0x4239bf
  4239eb:	or     DWORD PTR [eax],ecx
  4239ed:	adc    al,0xcd
  4239ef:	jge    0x4239ad
  4239f1:	imul   edx,DWORD PTR [edx+ecx*8-0x1d],0x21
  4239f6:	int    0xf5
  4239f8:	ret    
  4239f9:	sub    DWORD PTR [edx],ecx
  4239fb:	ret    0x54
  4239fe:	add    BYTE PTR [eax],al
  423a00:	add    BYTE PTR [eax],al
  423a02:	inc    esi
  423a03:	xchg   edi,eax
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp-0x20cb0497]
  423a12:	xor    BYTE PTR [ebx+0x4f30001],dh
  423a18:	add    BYTE PTR [eax],al
  423a1a:	cmp    edi,DWORD PTR [eax]
  423a1c:	ret    0x3413
  423a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a20:	js     0x423a26
  423a22:	mov    al,0xcc
  423a24:	or     DWORD PTR [esi+0x71e63c70],0x6270790c
  423a2e:	xor    DWORD PTR [edi-0x7af6625d],eax
  423a34:	sbb    BYTE PTR [eax-0x43b0a25b],dh
  423a3a:	or     dh,BYTE PTR [edx]
  423a3c:	imul   ebp,DWORD PTR [ecx+0x7897351a],0x220abcf6
  423a46:	push   edi
  423a47:	loopne 0x423a25
  423a49:	loop   0x423a9c
  423a4b:	ja     0x423a43
  423a4d:	lock cdq 
  423a4f:	cmp    cl,BYTE PTR [ebx-0x2ba4f549]
  423a55:	pop    ss
  423a56:	inc    ebx
  423a57:	rol    ah,1
  423a59:	add    DWORD PTR ds:0xb6c558e1,esi
  423a5f:	mov    al,0x22
  423a61:	ins    BYTE PTR es:[edi],dx
  423a62:	lock mov BYTE PTR [edi+0x3f8fbec5],ah
  423a69:	ret    0x651b
  423a6c:	ss push ds
  423a6e:	jno    0x423a9f
  423a70:	dec    edi
  423a71:	mov    BYTE PTR ds:0xd1144e6c,ch
  423a77:	pop    WORD PTR [edx-0x4dec8965]
  423a7e:	fmul   st,st(7)
  423a80:	jnp    0x423a33
  423a82:	xor    ah,dl
  423a84:	out    dx,eax
  423a85:	mov    bl,0x4
  423a87:	int    0x99
  423a89:	jnp    0x423a5c
  423a8b:	and    al,0x50
  423a8d:	sub    al,dh
  423a8f:	fld    TBYTE PTR [esi-0x3dc0cddd]
  423a95:	cmp    eax,0x9d1cc310
  423a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a9b:	imul   esp,edx,0xffffffb4
  423a9e:	jmp    0x423ac3
  423aa0:	imul   ebp,DWORD PTR [edi+0x2405b54c],0xbfc4b7
  423aaa:	nop
  423aab:	xchg   edx,eax
  423aac:	dec    edi
  423aad:	jge    0x423ab9
  423aaf:	mov    ecx,0x742479b2
  423ab4:	xchg   DWORD PTR [edi-0x2fc2b465],eax
  423aba:	xlat   BYTE PTR ds:[ebx]
  423abb:	mov    BYTE PTR [esp+ebx*1],dl
  423abe:	push   es
  423abf:	or     eax,DWORD PTR [ecx-0x51]
  423ac2:	jmp    0xa62569a2
  423ac7:	add    al,0x21
  423ac9:	mov    BYTE PTR [ebx],bh
  423acb:	dec    ebx
  423acc:	mov    ebp,0xc5467005
  423ad1:	fldln2 
  423ad3:	les    esi,FWORD PTR [ebp+0x3b]
  423ad6:	xchg   edi,eax
  423ad7:	out    dx,eax
  423ad8:	enter  0x3498,0x1
  423adc:	adc    edi,DWORD PTR [edi]
  423ade:	scas   eax,DWORD PTR es:[edi]
  423adf:	imul   eax,edi,0xffffff9c
  423ae2:	pop    ss
  423ae3:	fistp  DWORD PTR [ebp+0x11]
  423ae6:	in     al,0xe8
  423ae8:	les    edx,FWORD PTR [edi-0x7]
  423aeb:	in     al,0x4f
  423aed:	jecxz  0x423afa
  423aef:	add    eax,0xd936008d
  423af4:	das    
  423af5:	retf   
  423af6:	jg     0x423ab1
  423af8:	pop    ds
  423af9:	test   BYTE PTR [ebx-0x6e],0x1e
  423afd:	iret   
  423afe:	shl    BYTE PTR [edi-0x51],cl
  423b01:	or     eax,0xf469f03c
  423b06:	and    ch,al
  423b08:	sub    ecx,DWORD PTR [eax+0x39f1bc2f]
  423b0e:	mov    ebx,0x7e5f68e4
  423b13:	mov    ecx,0x7f5a16
  423b18:	fisubr DWORD PTR [edi-0x20]
  423b1b:	cmp    eax,DWORD PTR [eax+ecx*8]
  423b1e:	daa    
  423b1f:	in     al,0x16
  423b21:	xor    bh,bh
  423b23:	jae    0x423b5c
  423b25:	aam    0xd9
  423b27:	lods   al,BYTE PTR ds:[esi]
  423b28:	(bad)  
  423b29:	jnp    0x423b82
  423b2b:	test   DWORD PTR [eax-0x46],ebx
  423b2e:	imul   eax,eax,0x73
  423b31:	pop    eax
  423b32:	lods   al,BYTE PTR ds:[esi]
  423b33:	add    BYTE PTR [esi-0x55],al
  423b36:	cld    
  423b37:	push   es
  423b38:	cmp    eax,0x4660b3de
  423b3d:	retf   0xfd57
  423b40:	cli    
  423b41:	rcr    DWORD PTR [esi-0x69],cl
  423b44:	add    DWORD PTR [ebx+eiz*8+0x63f768a8],eax
  423b4b:	mov    al,ds:0x74ccbb46
  423b50:	push   cs
  423b51:	cmc    
  423b52:	mov    ecx,0x2f9b0fb8
  423b57:	sub    esi,DWORD PTR [ecx-0x62]
  423b5a:	jl     0x423bd2
  423b5c:	cmc    
  423b5d:	sub    BYTE PTR [edi],al
  423b5f:	pop    eax
  423b60:	xor    eax,0x5136d722
  423b65:	push   ebx
  423b66:	sbb    BYTE PTR [esi-0x52],dl
  423b69:	xchg   ecx,eax
  423b6a:	jne    0x423b6f
  423b6c:	pusha  
  423b6d:	stos   BYTE PTR es:[edi],al
  423b6e:	aad    0xfd
  423b70:	cwde   
  423b71:	mov    cl,0xaf
  423b73:	mov    edx,0xd06c0f2f
  423b78:	imul   ebp,DWORD PTR [ecx+0xf],0x46
  423b7c:	repnz inc ebx
  423b7e:	push   ebp
  423b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b80:	sub    eax,0x51f92ae6
  423b85:	(bad)  
  423b86:	and    ch,BYTE PTR [ebx]
  423b88:	xchg   ebp,eax
  423b89:	inc    esi
  423b8a:	and    al,BYTE PTR [esi-0x6a]
  423b8d:	ins    BYTE PTR es:[edi],dx
  423b8e:	pop    ds
  423b8f:	jmp    0x9071:0x5bbd2605
  423b96:	rol    ah,1
  423b98:	aas    
  423b99:	cmp    DWORD PTR [ebx-0x44],esp
  423b9c:	or     edi,ebp
  423b9e:	loope  0x423b7a
  423ba0:	ret    
  423ba1:	add    al,0x22
  423ba3:	push   ebx
  423ba4:	push   eax
  423ba5:	inc    eax
  423ba6:	or     BYTE PTR [ebp+0x2abc5d46],bh
  423bac:	iret   
  423bad:	mov    edi,0xc7fb6eac
  423bb2:	cmp    ch,dh
  423bb4:	lods   al,BYTE PTR ds:[esi]
  423bb5:	sub    ch,BYTE PTR [esi]
  423bb7:	int3   
  423bb8:	ror    DWORD PTR [edi],0xb7
  423bbb:	lea    ecx,[eax]
  423bbd:	out    0x94,eax
  423bbf:	cld    
  423bc0:	je     0x423b88
  423bc2:	inc    edi
  423bc3:	arpl   WORD PTR [ebx],dx
  423bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bc6:	mov    bl,0xa1
  423bc8:	pop    ds
  423bc9:	in     al,0x26
  423bcb:	rcr    BYTE PTR [ebx-0x74],cl
  423bce:	adc    DWORD PTR [ecx-0x2b],ebp
  423bd1:	push   edx
  423bd2:	pop    es
  423bd3:	mov    edx,ss
  423bd5:	jae    0x4ad34369
  423bdb:	pop    esi
  423bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bdd:	lds    esi,FWORD PTR [esi+0x4c]
  423be0:	sti    
  423be1:	inc    edx
  423be2:	and    edi,DWORD PTR [ecx-0xee7f0a1]
  423be8:	sbb    BYTE PTR [edi+ebx*4],al
  423beb:	aam    0xb7
  423bed:	fbld   TBYTE PTR [edi+0x12fa4b1d]
  423bf3:	push   cs
  423bf4:	mov    cl,0x17
  423bf6:	fstp   QWORD PTR [ecx+ecx*4]
  423bf9:	xchg   esi,eax
  423bfa:	mov    bh,0xb0
  423bfc:	iret   
  423bfd:	mov    ah,0x48
  423bff:	pop    edi
  423c00:	ss hlt 
  423c02:	mov    cl,0xfc
  423c04:	lock mov bh,0x7
  423c07:	inc    esp
  423c08:	jmp    0x92a:0x470de367
  423c0f:	loop   0x423c05
  423c11:	aam    0x86
  423c13:	jmp    0x713d:0xbe1cc21e
  423c1a:	adc    eax,0x811ed23
  423c1f:	sahf   
  423c20:	arpl   WORD PTR [eax+0x45],di
  423c23:	mov    bh,BYTE PTR [ecx+0x2533af2b]
  423c29:	adc    ebx,DWORD PTR [edi]
  423c2b:	not    BYTE PTR [ebx]
  423c2d:	adc    eax,0x2ba372d5
  423c32:	ins    DWORD PTR es:[edi],dx
  423c33:	sbb    eax,0x9a105fb5
  423c38:	mov    eax,cs
  423c3a:	stos   BYTE PTR es:[edi],al
  423c3b:	and    esp,DWORD PTR [edx+0x47]
  423c3e:	xchg   esp,eax
  423c3f:	add    DWORD PTR ds:0x2d5fb66,edi
  423c45:	mov    ch,0x37
  423c47:	es inc ebp
  423c49:	mov    eax,ds:0xd7baa75d
  423c4e:	jnp    0x423c2f
  423c50:	pop    ds
  423c51:	mov    ebx,DWORD PTR [edi+0x27]
  423c54:	jae    0x423c84
  423c56:	cwde   
  423c57:	xchg   esp,eax
  423c58:	inc    edx
  423c59:	popa   
  423c5a:	xor    cl,BYTE PTR [ebx]
  423c5c:	(bad)  
  423c5d:	jg     0x423c74
  423c5f:	sbb    al,dh
  423c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c62:	xlat   BYTE PTR ds:[ebx]
  423c63:	adc    edi,ebp
  423c65:	ret    
  423c66:	inc    edi
  423c67:	lock xchg esi,eax
  423c69:	dec    edi
  423c6a:	add    eax,0x7629f638
  423c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c70:	or     ecx,DWORD PTR [ebx-0x44]
  423c73:	jno    0x423c4d
  423c75:	and    eax,0x10117aa2
  423c7a:	dec    esp
  423c7b:	icebp  
  423c7c:	lods   al,BYTE PTR ds:[esi]
  423c7d:	xchg   esi,eax
  423c7e:	sbb    eax,0xd813304e
  423c83:	jp     0x423c29
  423c85:	jmp    0x9350b4bf
  423c8a:	sbb    eax,0xd60f3bad
  423c8f:	add    eax,0x7212380b
  423c94:	sbb    ebp,edi
  423c96:	out    dx,eax
  423c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c98:	adc    ebp,DWORD PTR [eax+0x47]
  423c9b:	ret    
  423c9c:	pushf  
  423c9d:	push   eax
  423c9e:	aas    
  423c9f:	(bad)  
  423ca0:	in     eax,0xe4
  423ca2:	sar    BYTE PTR [eax-0x7ea6a863],0x61
  423ca9:	sub    dh,cl
  423cab:	mov    cl,0xc5
  423cad:	daa    
  423cae:	push   ebx
  423caf:	push   ss
  423cb0:	mov    ds:0xc3414048,eax
  423cb5:	xchg   ebx,eax
  423cb6:	mov    al,0x63
  423cb8:	aaa    
  423cb9:	and    al,0x66
  423cbb:	outs   dx,DWORD PTR ds:[esi]
  423cbc:	push   esi
  423cbd:	mov    al,0x28
  423cbf:	xor    ecx,DWORD PTR [esi+0x2343f8c8]
  423cc5:	xchg   ecx,eax
  423cc6:	clc    
  423cc7:	cdq    
  423cc8:	(bad)  [edx]
  423cca:	or     ch,BYTE PTR [edx+0x30]
  423ccd:	call   0x331c:0xf93f402
  423cd4:	ret    0x8259
  423cd7:	je     0x423ce3
  423cd9:	out    dx,eax
  423cda:	imul   esp,DWORD PTR ds:0xf7682ce1,0x6a4c8160
  423ce4:	sub    dh,BYTE PTR [ebp+0x19]
  423ce7:	imul   ecx,DWORD PTR [eax-0xe0d58b6],0xb65957de
  423cf1:	push   cs
  423cf2:	iret   
  423cf3:	sub    dh,cl
  423cf5:	(bad)  
  423cf6:	sbb    ch,bh
  423cf8:	xchg   edi,eax
  423cf9:	fwait
  423cfa:	rcr    DWORD PTR [eax+0x7a],cl
  423cfd:	jno    0x423d55
  423cff:	mov    esi,0x697dfe7c
  423d04:	imul   esi,DWORD PTR [eax+0x62],0xfffffff8
  423d08:	cmp    al,0x9d
  423d0a:	aaa    
  423d0b:	fstp   TBYTE PTR [ebx+ebp*8-0x70557575]
  423d12:	push   edi
  423d13:	rcl    BYTE PTR [edi+0x48605fe8],0x30
  423d1a:	jmp    0x423ce5
  423d1c:	stc    
  423d1d:	and    ecx,DWORD PTR [ebp+0x57ca9358]
  423d23:	ins    BYTE PTR es:[edi],dx
  423d24:	imul   eax,DWORD PTR [esi+esi*1],0x24ece6d5
  423d2b:	add    ebp,DWORD PTR fs:[edi+0x126c1745]
  423d32:	test   BYTE PTR [ecx-0x3ef7c5d0],bh
  423d38:	jae    0x423d4a
  423d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d3b:	jle    0x423d90
  423d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d3e:	mov    eax,ds:0xf6e6f357
  423d43:	lock mov dh,0xa0
  423d46:	aas    
  423d47:	jne    0x423cd2
  423d49:	jg     0x423dc1
  423d4b:	cdq    
  423d4c:	xor    DWORD PTR [esi],edi
  423d4e:	cld    
  423d4f:	pop    edi
  423d50:	xor    esi,DWORD PTR [edi]
  423d52:	ret    
  423d53:	cmp    dh,BYTE PTR es:[edx-0x18]
  423d57:	inc    esp
  423d58:	pop    ebx
  423d59:	mov    dh,0xe4
  423d5b:	pop    ds
  423d5c:	test   esi,0xcadadb1b
  423d62:	mov    al,0xc8
  423d64:	mul    DWORD PTR [ebp+edx*2-0x59]
  423d68:	or     edx,DWORD PTR [esp+edi*2-0x799fc062]
  423d6f:	jno    0x423d8d
  423d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d72:	cmp    ebx,esp
  423d74:	mov    edx,eax
  423d76:	xchg   BYTE PTR [edx+0x7274ee54],ah
  423d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d7d:	jo     0x423dee
  423d7f:	push   ds
  423d80:	pusha  
  423d81:	dec    esi
  423d82:	aad    0x8c
  423d84:	outs   dx,DWORD PTR ds:[esi]
  423d85:	in     eax,0x3
  423d87:	jle    0x423d9c
  423d89:	jp     0x423d94
  423d8b:	imul   ecx,DWORD PTR [edi],0x40
  423d8e:	in     al,dx
  423d8f:	outs   dx,DWORD PTR ds:[esi]
  423d90:	fsubr  DWORD PTR [edx-0x57a9c556]
  423d96:	add    DWORD PTR [esi-0x781b6752],edx
  423d9c:	das    
  423d9d:	and    dl,BYTE PTR es:[ecx-0x28]
  423da1:	leave  
  423da2:	cdq    
  423da3:	pop    ebx
  423da4:	sbb    al,0xc3
  423da6:	mov    eax,0xcef532b5
  423dab:	or     al,0x1
  423dad:	or     esp,DWORD PTR [ebp+0x6b]
  423db0:	aaa    
  423db1:	dec    edi
  423db2:	xchg   esi,eax
  423db3:	jle    0x423d43
  423db5:	mov    bl,0xfa
  423db7:	das    
  423db8:	sub    BYTE PTR [esi],0x81
  423dbb:	push   edi
  423dbc:	cli    
  423dbd:	mov    eax,0xab35a26
  423dc2:	dec    edx
  423dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dc4:	aad    0x35
  423dc6:	(bad)  
  423dc7:	in     al,dx
  423dc8:	aas    
  423dc9:	imul   edi,DWORD PTR [edx+0x4c],0x9669b7e0
  423dd0:	into   
  423dd1:	jecxz  0x423d94
  423dd3:	into   
  423dd4:	fisttp DWORD PTR [edi-0x5a348347]
  423dda:	lds    edx,FWORD PTR [ebp-0x681b2b79]
  423de0:	mov    DWORD PTR [ebp+0x667d173b],edi
  423de6:	lods   al,BYTE PTR ds:[esi]
  423de7:	ds cli 
  423de9:	lahf   
  423dea:	fild   DWORD PTR [ebp-0x37]
  423ded:	push   ds
  423dee:	cmp    eax,0x3cafd874
  423df3:	inc    esi
  423df4:	jge    0x423d89
  423df6:	je     0x423dc3
  423df8:	addr16 dec ecx
  423dfa:	div    DWORD PTR [eax+0x52c42160]
  423e00:	fld    st(4)
  423e02:	pusha  
  423e03:	adc    al,BYTE PTR [esi+0x7d6f823]
  423e09:	pop    edi
  423e0a:	xchg   DWORD PTR [edx+0x70],esp
  423e0d:	fsubr  st(2),st
  423e0f:	inc    ecx
  423e10:	into   
  423e11:	xchg   esp,eax
  423e12:	push   ds
  423e13:	sub    DWORD PTR [ecx+0x18],ecx
  423e16:	jb     0x423e72
  423e18:	push   cs
  423e19:	jne    0x423e74
  423e1b:	push   ss
  423e1c:	arpl   WORD PTR ds:0x99976eed,dx
  423e22:	sub    BYTE PTR [eax-0x46323674],dh
  423e28:	cli    
  423e29:	test   DWORD PTR gs:[ebp-0x3c],ebx
  423e2d:	mov    dh,0x60
  423e2f:	ret    0x9d62
  423e32:	sbb    DWORD PTR [ecx-0x6c],esi
  423e35:	neg    BYTE PTR [esi+0x3b]
  423e38:	aam    0x59
  423e3a:	fwait
  423e3b:	pop    ss
  423e3c:	sar    cl,0xc6
  423e3f:	jecxz  0x423e22
  423e41:	sahf   
  423e42:	push   es
  423e43:	aaa    
  423e44:	outs   dx,DWORD PTR ds:[esi]
  423e45:	jo     0x423dfa
  423e47:	lods   eax,DWORD PTR ds:[esi]
  423e48:	ins    DWORD PTR es:[edi],dx
  423e49:	or     al,0xbc
  423e4b:	and    al,BYTE PTR [edi-0x5a]
  423e4e:	leave  
  423e4f:	adc    esp,DWORD PTR [ecx+0x7]
  423e52:	stos   BYTE PTR es:[edi],al
  423e53:	inc    ebx
  423e54:	(bad)  
  423e55:	(bad)  
  423e56:	scas   eax,DWORD PTR es:[edi]
  423e57:	inc    esp
  423e58:	in     eax,dx
  423e59:	dec    ebp
  423e5a:	dec    ebx
  423e5b:	mov    ds:0xf31cddf9,al
  423e60:	pop    es
  423e61:	xlat   BYTE PTR ds:[bx]
  423e63:	dec    edi
  423e64:	xchg   esp,eax
  423e65:	mov    ah,cl
  423e67:	xchg   esi,eax
  423e68:	iret   
  423e69:	push   0xffffffed
  423e6b:	sahf   
  423e6c:	mov    edi,0xe6a19f6d
  423e71:	je     0x423e37
  423e73:	call   0xbbf1:0x6f665102
  423e7a:	clc    
  423e7b:	ds clc 
  423e7d:	push   ebx
  423e7e:	add    DWORD PTR [edx+0x12],eax
  423e81:	lock mov ah,0xb0
  423e84:	(bad)  [edi-0xa]
  423e87:	out    0x35,eax
  423e89:	das    
  423e8a:	shr    bh,1
  423e8c:	jmp    0x423e2d
  423e8e:	in     eax,0x73
  423e90:	push   ebx
  423e91:	mov    ds:0x38c1a23,al
  423e96:	jmp    0x423f07
  423e98:	push   esi
  423e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e9a:	lea    ecx,[ebx+0x66fa5abf]
  423ea0:	sbb    al,0x2d
  423ea2:	and    esp,DWORD PTR [ecx+0x5727312e]
  423ea8:	call   0xb28d:0xb10fbd79
  423eaf:	xor    DWORD PTR [edx+esi*2+0x74],esp
  423eb3:	jecxz  0x423f04
  423eb5:	inc    ebp
  423eb6:	jl     0x423f1a
  423eb8:	dec    ebp
  423eb9:	push   eax
  423eba:	pop    edx
  423ebb:	retf   
  423ebc:	hlt    
  423ebd:	jge    0x423ed8
  423ebf:	scas   al,BYTE PTR es:[edi]
  423ec0:	jmp    0x8171491
  423ec5:	lea    esi,[esi+0x3]
  423ec8:	adc    al,0x88
  423eca:	jp     0x423e60
  423ecc:	je     0x423e8b
  423ece:	or     ebp,ebp
  423ed0:	ret    
  423ed1:	call   0x4afd3e3f
  423ed6:	iret   
  423ed7:	push   es
  423ed8:	mov    eax,0xb441445a
  423edd:	lods   eax,DWORD PTR ds:[esi]
  423ede:	and    al,0x7d
  423ee0:	or     cl,0x61
  423ee3:	jmp    0xaa428dde
  423ee8:	retf   0xc019
  423eeb:	fmul   QWORD PTR [ecx]
  423eed:	mov    bl,0xf3
  423eef:	sub    DWORD PTR [eax+0x532bd323],esp
  423ef5:	out    dx,eax
  423ef6:	outs   dx,BYTE PTR ds:[esi]
  423ef7:	loop   0x423f70
  423ef9:	mov    ebp,0xbe3ffe1e
  423efe:	dec    edx
  423eff:	cld    
  423f00:	sub    BYTE PTR [ecx],ah
  423f02:	jae    0x423ed9
  423f04:	(bad)  
  423f05:	imul   ebp,DWORD PTR [eax+0x1f9d3ef9],0x4ee1
  423f0f:	add    BYTE PTR [eax],al
  423f11:	add    dl,dl
  423f13:	clc    
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	ficom  DWORD PTR [ebp+0x23248d23]
  423f23:	mov    eax,0x4f30001
  423f28:	add    BYTE PTR [eax],al
  423f2a:	or     al,0x16
  423f2c:	sbb    al,0xec
  423f2e:	aas    
  423f2f:	xor    edi,0x9613462a
  423f35:	arpl   sp,di
  423f37:	imul   eax,DWORD PTR ds:0x49766789,0xffffffb5
  423f3e:	or     al,0x7e
  423f40:	(bad)  
  423f41:	(bad)  
  423f42:	pop    ebp
  423f43:	fcom   QWORD PTR [edi+0x484fc119]
  423f49:	ins    BYTE PTR es:[edi],dx
  423f4a:	fs xchg edi,eax
  423f4c:	sahf   
  423f4d:	dec    esp
  423f4e:	or     dh,BYTE PTR [ebx-0x4ccde277]
  423f54:	xchg   ebx,eax
  423f55:	(bad)  
  423f56:	mov    fs,WORD PTR [eax+edi*8-0x6a]
  423f5a:	stos   DWORD PTR es:[edi],eax
  423f5b:	aaa    
  423f5c:	sbb    DWORD PTR [ecx+0x5e],eax
  423f5f:	push   edi
  423f60:	push   eax
  423f61:	inc    eax
  423f62:	xchg   ebx,eax
  423f63:	adc    eax,0xddcfcb1a
  423f68:	pop    edi
  423f69:	call   0xe65e0d53
  423f6e:	or     BYTE PTR [ebx-0x71],al
  423f71:	test   al,0x99
  423f73:	daa    
  423f74:	mov    eax,0xa5428833
  423f79:	stos   BYTE PTR es:[edi],al
  423f7a:	xchg   edx,eax
  423f7b:	jno    0x423fe8
  423f7d:	mov    al,ds:0x857df056
  423f82:	push   0x6cbbce71
  423f87:	fstp   DWORD PTR [ebx]
  423f89:	sti    
  423f8a:	clc    
  423f8b:	test   eax,0x98afc125
  423f90:	push   ebx
  423f91:	cmc    
  423f92:	cmc    
  423f93:	xor    eax,0x678c053d
  423f98:	std    
  423f99:	mov    dl,0xb
  423f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f9c:	and    BYTE PTR [edi],dl
  423f9e:	in     al,0x8c
  423fa0:	mov    ch,0x30
  423fa2:	(bad)  [esi-0x59d7a1e1]
  423fa8:	add    eax,0x1a2ce942
  423fad:	add    bl,0x2d
  423fb0:	scas   al,BYTE PTR es:[edi]
  423fb1:	jmp    0x2650ad59
  423fb6:	jns    0x423fb8
  423fb8:	sbb    ah,bl
  423fba:	add    al,0x4
  423fbc:	arpl   WORD PTR [eax-0x6aef0fe0],dx
  423fc2:	out    0x43,eax
  423fc4:	mov    es,WORD PTR [eax]
  423fc6:	jnp    0x423f52
  423fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fc9:	arpl   WORD PTR [edx],bp
  423fcb:	in     eax,0xfd
  423fcd:	xchg   edx,eax
  423fce:	xchg   ebx,eax
  423fcf:	xlat   BYTE PTR ds:[ebx]
  423fd0:	jmp    0x423ffd
  423fd2:	cld    
  423fd3:	pop    eax
  423fd4:	adc    eax,0xc5cbda06
  423fd9:	into   
  423fda:	jmp    0x8cd40176
  423fdf:	xchg   esp,eax
  423fe0:	adc    al,0xc7
  423fe2:	jmp    0x423fb7
  423fe4:	adc    BYTE PTR [edi-0x43],ah
  423fe7:	cmp    BYTE PTR [ecx-0x54],dl
  423fea:	fld    DWORD PTR [ebx+0x70]
  423fed:	xor    ch,BYTE PTR [edi]
  423fef:	or     BYTE PTR [edi+0x50cd0e7a],bh
  423ff5:	lahf   
  423ff6:	mov    dh,0x15
  423ff8:	jae    0x423ffc
  423ffa:	xchg   esp,eax
  423ffb:	xor    DWORD PTR [eax+esi*1],ecx
  423ffe:	sub    ebx,edi
  424000:	mov    ecx,DWORD PTR [ebp+0x1b]
  424003:	pop    esi
  424004:	mov    eax,DWORD PTR [ebp-0x3ffd401d]
  42400a:	xor    al,0xf6
  42400c:	repz xchg esi,eax
  42400e:	in     eax,0x2b
  424010:	aas    
  424011:	adc    edx,DWORD PTR [edx-0x72]
  424014:	mov    ds:0xa6737a42,al
  424019:	inc    edx
  42401a:	or     al,0xfa
  42401c:	jg     0x424083
  42401e:	repz dec esp
  424020:	jmp    0xeeacec00
  424025:	icebp  
  424026:	aad    0x26
  424028:	daa    
  424029:	fs inc eax
  42402b:	clc    
  42402c:	shr    DWORD PTR [eax+0x6c4c3285],cl
  424032:	js     0x424061
  424034:	popa   
  424035:	push   esi
  424036:	pop    edi
  424037:	stc    
  424038:	test   BYTE PTR [eax+0x77],bl
  42403b:	xchg   esi,eax
  42403c:	test   al,0xcb
  42403e:	inc    edi
  42403f:	es dec esp
  424041:	adc    BYTE PTR [esi],0xa7
  424044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424045:	inc    edi
  424046:	dec    edi
  424047:	jl     0x4240a8
  424049:	sar    ah,cl
  42404b:	test   DWORD PTR [edi+0x1198809b],ecx
  424051:	dec    edi
  424052:	(bad)  
  424053:	jecxz  0x4240bf
  424055:	xchg   DWORD PTR [edx],edi
  424057:	xlat   BYTE PTR fs:[ebx]
  424059:	mov    al,0x44
  42405b:	mov    BYTE PTR [ecx],cl
  42405d:	stos   BYTE PTR es:[edi],al
  42405e:	fstp   TBYTE PTR [esi+0x44ff83c9]
  424064:	imul   edx,DWORD PTR [ebx+0x24acf9a],0xffffffac
  42406b:	mov    eax,0x81214718
  424070:	mov    ebp,0x29204157
  424075:	inc    ecx
  424076:	arpl   WORD PTR [edi+0x6e9e76a6],di
  42407c:	int3   
  42407d:	inc    edx
  42407e:	mov    eax,ds:0x416002a3
  424083:	inc    edx
  424084:	arpl   WORD PTR [esi+0x3f6d8915],si
  42408a:	sbb    edx,DWORD PTR [ecx-0x22bbc73b]
  424090:	leave  
  424091:	mov    bh,0x70
  424093:	or     DWORD PTR [ecx+esi*4-0x57],ebp
  424097:	mov    cl,0x77
  424099:	out    dx,al
  42409a:	loop   0x424020
  42409c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42409d:	stc    
  42409e:	outs   dx,BYTE PTR ds:[esi]
  42409f:	pop    ss
  4240a0:	loope  0x42407a
  4240a2:	mov    bh,0x1
  4240a4:	adc    esp,eax
  4240a6:	dec    esp
  4240a7:	popf   
  4240a8:	pop    ebx
  4240a9:	cmp    eax,0x427f4431
  4240ae:	pop    eax
  4240af:	shl    DWORD PTR [ecx-0x3eff66cb],0x7
  4240b6:	mov    al,0x79
  4240b8:	push   edi
  4240b9:	call   0x52149f8b
  4240be:	ret    0x6125
  4240c1:	xchg   BYTE PTR [esi-0x4],ch
  4240c4:	les    ecx,FWORD PTR [esi]
  4240c6:	push   ss
  4240c7:	call   0x68a1:0xbb92ff10
  4240ce:	sbb    eax,0x6f871779
  4240d3:	ret    
  4240d4:	jae    0x424146
  4240d6:	das    
  4240d7:	out    dx,eax
  4240d8:	dec    esp
  4240d9:	mov    esp,0x50cedc25
  4240de:	inc    esp
  4240df:	mov    edi,0xe3b9332d
  4240e4:	cmp    ecx,DWORD PTR ds:0x4f1fa329
  4240ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240eb:	mov    ebp,0xfbe03761
  4240f0:	arpl   WORD PTR [esi],si
  4240f2:	jbe    0x424078
  4240f4:	loop   0x4240a2
  4240f6:	out    dx,eax
  4240f7:	retf   
  4240f8:	push   ebx
  4240f9:	or     eax,0xec70caf2
  4240fe:	xchg   esi,eax
  4240ff:	push   ebx
  424100:	scas   eax,DWORD PTR es:[edi]
  424101:	xchg   esp,eax
  424102:	and    dl,BYTE PTR [bx-0x38dc]
  424107:	or     bl,BYTE PTR [ebp+0x2e]
  42410a:	sti    
  42410b:	cmc    
  42410c:	and    eax,0x2e9d2859
  424111:	sub    BYTE PTR [ecx+0x27],cl
  424114:	in     eax,0xd3
  424116:	dec    ebp
  424117:	stc    
  424118:	inc    esi
  424119:	xchg   ebx,edx
  42411b:	jnp    0x42414c
  42411d:	jecxz  0x424181
  42411f:	rcr    ebp,cl
  424121:	xor    al,0xf0
  424123:	scas   al,BYTE PTR es:[edi]
  424124:	pop    ebp
  424125:	push   edx
  424126:	push   edx
  424127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424128:	stos   BYTE PTR es:[edi],al
  424129:	xchg   edx,eax
  42412a:	xchg   ecx,eax
  42412b:	nop
  42412c:	xchg   BYTE PTR [edx],bh
  42412e:	pop    esi
  42412f:	or     eax,0x692554f
  424134:	jne    0x424145
  424136:	add    al,0xc1
  424138:	xchg   edi,eax
  424139:	rol    BYTE PTR [ebp+0x799e4999],1
  42413f:	es jne 0x42412f
  424142:	ja     0x424173
  424144:	fadd   QWORD PTR [esi]
  424146:	mov    eax,0x22e39e4b
  42414b:	les    esp,FWORD PTR [ebx+edx*2]
  42414e:	mov    ebx,0x2b1670ed
  424153:	out    0xd2,al
  424155:	mov    ebx,0x90e86cc5
  42415a:	dec    ebx
  42415b:	fdivp  st(7),st
  42415d:	and    eax,0x9c2cc1b7
  424162:	lahf   
  424163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424164:	icebp  
  424165:	sbb    al,0x42
  424167:	jmp    0x1a92:0xa694c698
  42416e:	or     BYTE PTR [edi+0x3e],cl
  424171:	out    dx,eax
  424172:	movntps XMMWORD PTR [esi-0x77bf8c3a],xmm2
  424179:	lea    edi,[ecx-0x553c2085]
  42417f:	jne    0x424195
  424181:	cmp    esp,0xfffffffb
  424184:	stos   BYTE PTR es:[edi],al
  424185:	mov    bh,0x62
  424187:	loope  0x4241b3
  424189:	push   ebp
  42418a:	mov    ds:0x92bb3869,al
  42418f:	ret    
  424190:	ret    0xea20
  424193:	jge    0x4241d0
  424195:	mov    edx,0xc44273dc
  42419a:	ss sbb eax,ebx
  42419d:	jl     0x4241e4
  42419f:	xchg   ebx,eax
  4241a0:	push   ss
  4241a1:	jge    0x424153
  4241a3:	dec    esi
  4241a4:	fsubr  QWORD PTR ds:0xbaea1266
  4241aa:	jle    0x42418d
  4241ac:	xchg   DWORD PTR [ecx-0x6150b896],edi
  4241b2:	cmc    
  4241b3:	add    ch,BYTE PTR [ebx-0x38]
  4241b6:	add    BYTE PTR [eax+0x0],al
  4241b9:	ja     0x424237
  4241bb:	pop    esp
  4241bc:	gs push 0x4dcb9639
  4241c2:	(bad)  
  4241c3:	fcmovbe st,st(6)
  4241c5:	aas    
  4241c6:	loopne 0x424207
  4241c8:	scas   eax,DWORD PTR es:[edi]
  4241c9:	not    bh
  4241cb:	mov    ebp,0x3060d76b
  4241d0:	mov    BYTE PTR [edi+0x52],cl
  4241d3:	ror    DWORD PTR [eiz*8-0x6c21d491],0xd6
  4241db:	iret   
  4241dc:	sti    
  4241dd:	xchg   ecx,eax
  4241de:	vsubss xmm0,xmm2,DWORD PTR [eax+0x5e]
  4241e3:	adc    ebx,DWORD PTR [ebp+0x6c]
  4241e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241e7:	test   eax,edi
  4241e9:	pop    ebx
  4241ea:	jge    0x424197
  4241ec:	outs   dx,DWORD PTR ds:[esi]
  4241ed:	mov    cl,0xe0
  4241ef:	test   cl,al
  4241f1:	std    
  4241f2:	dec    esp
  4241f3:	fstp   DWORD PTR [ebx]
  4241f5:	cmp    eax,0x36881dc7
  4241fa:	mov    cl,0x91
  4241fc:	sti    
  4241fd:	sub    eax,0xa4b4e289
  424202:	cli    
  424203:	push   ss
  424204:	outs   dx,DWORD PTR ds:[esi]
  424205:	pop    edx
  424206:	shl    BYTE PTR [edi],cl
  424208:	push   cs
  424209:	inc    ebp
  42420a:	ret    0x8324
  42420d:	repz das 
  42420f:	lods   ax,WORD PTR ds:[esi]
  424211:	scas   al,BYTE PTR es:[edi]
  424212:	leave  
  424213:	leave  
  424214:	xor    al,0x2a
  424216:	gs pop ebx
  424218:	repz sub DWORD PTR [ebp-0x7d],0x59c54487
  424220:	cdq    
  424221:	adc    DWORD PTR [ebx-0x1a],ebx
  424224:	es pusha 
  424226:	push   0x49aab842
  42422b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42422c:	hlt    
  42422d:	dec    edx
  42422e:	bound  esi,QWORD PTR [esi]
  424230:	xor    DWORD PTR [ebx-0x3e9ddcbb],ebx
  424236:	xchg   ecx,eax
  424237:	lahf   
  424238:	call   FWORD PTR [edi+0x750fafed]
  42423e:	(bad)  
  42423f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424240:	mov    dh,0x9d
  424242:	outs   dx,DWORD PTR ds:[esi]
  424243:	in     al,0x8e
  424245:	xchg   esp,eax
  424246:	test   al,0x40
  424248:	loop   0x42420f
  42424a:	push   ds
  42424b:	push   ebp
  42424c:	sbb    al,BYTE PTR [ecx+0x9]
  42424f:	ins    BYTE PTR es:[edi],dx
  424250:	sub    esi,DWORD PTR [ecx]
  424252:	xor    DWORD PTR [ecx+0x50312e5c],edx
  424258:	je     0x42429b
  42425a:	sahf   
  42425b:	mov    edi,0x6ebf4262
  424260:	bound  ebp,QWORD PTR [ebx+0x6d0e46e6]
  424266:	mov    ebp,0x268d0618
  42426b:	adc    cl,BYTE PTR [edi+0x42]
  42426e:	mov    ?,WORD PTR [edi]
  424270:	sub    eax,0x1f6f5fdf
  424275:	mov    es,WORD PTR [eax+0x16]
  424278:	lods   eax,DWORD PTR ds:[esi]
  424279:	cs inc edi
  42427b:	push   ebp
  42427c:	call   0xfb4a5765
  424281:	xor    BYTE PTR [edi+0x3f],bl
  424284:	jmp    0xa751:0x8a769a2f
  42428b:	sbb    esp,esi
  42428d:	mov    eax,0x25c43b14
  424292:	sbb    ebx,edx
  424294:	cli    
  424295:	lea    edx,[esi+0x2e31e39d]
  42429b:	sbb    al,0xf2
  42429d:	sahf   
  42429e:	retf   
  42429f:	pop    esi
  4242a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242a1:	int    0xa5
  4242a3:	push   0x7b92779a
  4242a8:	add    DWORD PTR [ecx-0x54],0x74fb944c
  4242af:	fistp  WORD PTR [edx+0x448cab4e]
  4242b5:	xchg   al,dh
  4242b7:	cs iret 
  4242b9:	sbb    BYTE PTR [esi],cl
  4242bb:	push   ds
  4242bc:	pop    ecx
  4242bd:	sub    BYTE PTR [ecx+0x5a],0x98
  4242c1:	ins    DWORD PTR es:[edi],dx
  4242c2:	cwde   
  4242c3:	fidivr DWORD PTR [esi+eiz*8]
  4242c6:	icebp  
  4242c7:	xchg   edi,eax
  4242c8:	xor    DWORD PTR ds:0x94a9a05c,esi
  4242ce:	sub    al,BYTE PTR [ebx+0x34e8de68]
  4242d4:	or     al,0x61
  4242d6:	aam    0x54
  4242d8:	addr16 popa 
  4242da:	retf   
  4242db:	sub    ebp,DWORD PTR [eax-0x4c]
  4242de:	lea    eax,[ebx+0x20]
  4242e1:	fs jp  0x4242e7
  4242e4:	xchg   ebx,eax
  4242e5:	mov    esp,0x1cab1522
  4242ea:	clc    
  4242eb:	xchg   ebp,eax
  4242ec:	inc    esp
  4242ed:	add    edi,DWORD PTR [ecx]
  4242ef:	(bad)  
  4242f0:	mov    ch,0x10
  4242f2:	mov    cl,BYTE PTR [edx-0x62]
  4242f5:	jecxz  0x4242fd
  4242f7:	jno    0x4242f7
  4242f9:	test   eax,edx
  4242fb:	mov    DWORD PTR [eax+0x1d],esi
  4242fe:	fcom   DWORD PTR [edx+0x57]
  424301:	idiv   BYTE PTR [ecx+0x53725f9c]
  424307:	lods   eax,DWORD PTR ds:[esi]
  424308:	mov    edx,0x2c55f774
  42430d:	scas   eax,DWORD PTR es:[edi]
  42430e:	xchg   BYTE PTR [eax-0x167892dd],bh
  424314:	lds    edx,FWORD PTR [eax]
  424316:	add    eax,0x7875a07d
  42431b:	dec    esp
  42431c:	cdq    
  42431d:	inc    edx
  42431e:	icebp  
  42431f:	inc    eax
  424320:	sbb    eax,0x4db36dd6
  424325:	fsub   st(3),st
  424327:	daa    
  424328:	sti    
  424329:	imul   esp,DWORD PTR [eax],0x896343c0
  42432f:	fst    QWORD PTR [ebp+0x4f886fe6]
  424335:	cs leave 
  424337:	ins    BYTE PTR es:[edi],dx
  424338:	push   edx
  424339:	pop    es
  42433a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42433b:	in     al,0x69
  42433d:	out    0xb7,eax
  42433f:	loope  0x4243b4
  424341:	push   ds
  424342:	scas   eax,DWORD PTR es:[edi]
  424343:	ret    
  424344:	or     eax,0x69931175
  424349:	xchg   cl,ah
  42434b:	lahf   
  42434c:	mov    ebp,DWORD PTR [ebx-0x5bc7fc20]
  424352:	test   DWORD PTR [esi-0x56],eax
  424355:	inc    eax
  424356:	add    edi,DWORD PTR [ebx+0x49ab421e]
  42435c:	mov    dl,0x7f
  42435e:	out    0x5a,al
  424360:	dec    edx
  424361:	inc    edi
  424362:	xchg   edi,eax
  424363:	out    0xcd,al
  424365:	shr    esp,0xf9
  424368:	mov    esp,0x1395d912
  42436d:	mov    esp,0x503844ae
  424372:	(bad)  
  424373:	jns    0x424384
  424375:	push   cs
  424376:	mov    cl,0xc2
  424378:	push   edi
  424379:	in     al,0x4b
  42437b:	mov    di,0x15e7
  42437f:	xlat   BYTE PTR ds:[ebx]
  424380:	(bad)  
  424381:	lea    ebx,[ebx+edx*8-0x61a78d72]
  424388:	jge    0x4243ab
  42438a:	repnz sbb BYTE PTR [edx-0x1527c6f8],0x7
  424392:	push   0xde53f833
  424397:	xor    BYTE PTR [edx-0x4a],dh
  42439a:	test   al,0x96
  42439c:	sub    cl,BYTE PTR [edi-0x6ce59390]
  4243a2:	fcmove st,st(1)
  4243a4:	sti    
  4243a5:	and    edi,DWORD PTR [edx]
  4243a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243a8:	fsubr  QWORD PTR [ebx+edi*1]
  4243ab:	pushf  
  4243ac:	in     eax,0xff
  4243ae:	dec    esp
  4243af:	stos   DWORD PTR es:[edi],eax
  4243b0:	sar    BYTE PTR [eax],0x75
  4243b3:	dec    esp
  4243b4:	loop   0x424400
  4243b6:	fnstenv [edx]
  4243b8:	or     ebp,DWORD PTR [edi]
  4243ba:	aaa    
  4243bb:	xchg   esi,eax
  4243bc:	xchg   esi,eax
  4243bd:	jge    0x424410
  4243bf:	cli    
  4243c0:	lock test al,0x2f
  4243c3:	mov    ah,0x31
  4243c5:	inc    edi
  4243c6:	cmp    al,0xa5
  4243c8:	out    dx,al
  4243c9:	and    ch,BYTE PTR [ebp-0xf]
  4243cc:	lods   al,BYTE PTR ds:[esi]
  4243cd:	int    0x54
  4243cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243d0:	mov    ch,0x60
  4243d2:	sub    DWORD PTR [esi+edx*4-0x35],ebx
  4243d6:	bound  ecx,QWORD PTR [eax*8-0x6d382aca]
  4243dd:	test   eax,0xe0ae7a1e
  4243e2:	jns    0x424400
  4243e4:	or     DWORD PTR [ebx-0x7d],esp
  4243e7:	mov    edx,DWORD PTR [edx]
  4243e9:	loop   0x424456
  4243eb:	call   0xe89e:0x9102e89e
  4243f2:	repnz out 0x23,al
  4243f5:	mov    ah,0x87
  4243f7:	mov    WORD PTR [ecx],?
  4243f9:	cdq    
  4243fa:	pop    ebp
  4243fb:	mov    dl,0x71
  4243fd:	xchg   esi,eax
  4243fe:	imul   eax,edi,0x1b
  424401:	mov    ah,0xf3
  424403:	adc    eax,0xaf6d36a9
  424408:	adc    DWORD PTR [eax],edi
  42440a:	adc    BYTE PTR [edi],ch
  42440c:	mov    ds:0x4f13aa20,eax
  424411:	loop   0x42446c
  424413:	stos   BYTE PTR es:[edi],al
  424414:	pushf  
  424415:	dec    ebp
  424416:	mov    bh,0x6d
  424418:	jge    0x42444a
  42441a:	out    0xe6,al
  42441c:	adc    DWORD PTR [eax],eax
  42441e:	add    BYTE PTR [eax],al
  424420:	add    BYTE PTR [eax],al
  424422:	sub    al,0xda
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	aaa    
  42442f:	shr    ah,cl
  424431:	adc    DWORD PTR [esi],0xf30001bd
  424437:	add    al,0x0
  424439:	add    BYTE PTR [edx],ch
  42443b:	xor    BYTE PTR [edi],dh
  42443d:	inc    ebp
  42443e:	xor    eax,0xdb7b1c3a
  424443:	xchg   edi,eax
  424444:	aas    
  424445:	fnstenv [ecx+0x2b]
  424448:	mov    ecx,0xa596891d
  42444d:	lea    ebx,[edx-0x41]
  424450:	sbb    ebx,DWORD PTR [esi-0x17159c73]
  424456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424457:	mov    ebx,DWORD PTR [ebx]
  424459:	fld    DWORD PTR [ecx]
  42445b:	push   ebx
  42445c:	xchg   BYTE PTR [edx],dh
  42445e:	xor    edx,esi
  424460:	xchg   BYTE PTR [esi+0x60cc264c],bh
  424466:	test   eax,0x66707d5b
  42446b:	mov    BYTE PTR [ecx],ah
  42446d:	jmp    0x42443c
  42446f:	push   es
  424470:	shl    bl,1
  424472:	dec    ebp
  424473:	shr    ebx,0xbd
  424476:	pop    ds
  424477:	xchg   edi,eax
  424478:	xlat   BYTE PTR ds:[ebx]
  424479:	sbb    cl,BYTE PTR [ebx]
  42447b:	mov    dh,0xf8
  42447d:	into   
  42447e:	adc    BYTE PTR [ebx-0x37],0xc1
  424482:	jp     0x42441d
  424484:	mov    ebp,0xb6f68a1e
  424489:	sbb    ecx,eax
  42448b:	rcl    DWORD PTR [esi-0x50],cl
  42448e:	mov    edi,0xdd1bbc72
  424493:	pop    esp
  424494:	jnp    0x4244e0
  424496:	push   ebp
  424497:	ret    0x982d
  42449a:	xchg   edi,eax
  42449b:	xor    eax,0x63a7893e
  4244a0:	jecxz  0x424497
  4244a2:	inc    edx
  4244a3:	sbb    al,0x7d
  4244a5:	push   DWORD PTR [edi]
  4244a7:	cmp    ebx,eax
  4244a9:	rol    DWORD PTR [edx],1
  4244ab:	sbb    eax,0x2ae075d1
  4244b0:	dec    esi
  4244b1:	jmp    0x3cde:0xea38caca
  4244b8:	ja     0x42451c
  4244ba:	aas    
  4244bb:	jns    0x4244b6
  4244bd:	lea    ebx,[ecx-0x242686f8]
  4244c3:	sub    eax,eax
  4244c5:	hlt    
  4244c6:	fwait
  4244c7:	dec    eax
  4244c8:	outs   dx,DWORD PTR ds:[esi]
  4244c9:	mov    ah,0xd5
  4244cb:	jl     0x424510
  4244cd:	ins    BYTE PTR es:[edi],dx
  4244ce:	mov    bl,0xf2
  4244d0:	sbb    BYTE PTR [eax+0x48c67fc7],bh
  4244d6:	retf   0x32c1
  4244d9:	xchg   esi,eax
  4244da:	shr    DWORD PTR [ebp-0x22],1
  4244dd:	js     0x42449a
  4244df:	and    BYTE PTR [edi-0x2a],cl
  4244e2:	ins    DWORD PTR es:[edi],dx
  4244e3:	push   cs
  4244e4:	pushaw 
  4244e6:	pop    ecx
  4244e7:	pop    ebp
  4244e8:	fld    st(4)
  4244ea:	in     al,dx
  4244eb:	pop    ecx
  4244ec:	jo     0x4244a7
  4244ee:	sub    al,0xa4
  4244f0:	sub    ebx,edi
  4244f2:	cmp    dh,BYTE PTR [ecx+0x27]
  4244f5:	cmp    DWORD PTR [edx-0x6b85df57],eax
  4244fb:	lahf   
  4244fc:	mov    edi,0x27bc592e
  424501:	or     edi,DWORD PTR [ebp-0x651cefec]
  424507:	scas   eax,DWORD PTR es:[edi]
  424508:	jp     0x424528
  42450a:	test   DWORD PTR [eax+0x42],ebp
  42450d:	js     0x42452f
  42450f:	sub    DWORD PTR ds:0x8181c92c,esi
  424515:	jp     0x4244aa
  424517:	or     bl,bl
  424519:	sub    al,0xaa
  42451b:	dec    ecx
  42451c:	add    ch,bh
  42451e:	pop    edi
  42451f:	clc    
  424520:	das    
  424521:	arpl   WORD PTR [esi],ax
  424523:	xor    al,0xd5
  424525:	sub    al,0x1d
  424527:	adc    BYTE PTR [esi-0x3c1a4958],bh
  42452d:	nop
  42452e:	mov    ch,0xbf
  424530:	inc    ecx
  424531:	test   DWORD PTR [edx],ebx
  424533:	shr    WORD PTR [esi-0x5b],0x7
  424538:	pop    edx
  424539:	or     eax,0xc6fcd315
  42453e:	ror    BYTE PTR [ebp+0x4ec89117],0x98
  424545:	fmul   st,st(6)
  424547:	ja     0x4244ed
  424549:	fimul  DWORD PTR [edx+0x39]
  42454c:	cmp    edi,DWORD PTR [ecx+0x5e]
  42454f:	loopne 0x424540
  424551:	ret    0xabd8
  424554:	push   ds
  424555:	sub    BYTE PTR [esi],bl
  424557:	ja     0x42451a
  424559:	dec    eax
  42455a:	or     ebx,DWORD PTR [esi]
  42455c:	jmp    0x42451c
  42455e:	out    dx,al
  42455f:	cwde   
  424560:	push   eax
  424561:	jmp    0x68f08588
  424566:	les    eax,FWORD PTR [ebx-0x5f]
  424569:	xchg   ebx,eax
  42456a:	test   DWORD PTR [ecx-0x27c81149],ecx
  424570:	or     dh,ch
  424572:	call   0x9efa44eb
  424577:	out    0xdc,eax
  424579:	or     BYTE PTR [edx-0x7dc3b862],ch
  42457f:	aaa    
  424580:	adc    cl,BYTE PTR [edx-0x4be9fe85]
  424586:	jmp    0x4245f9
  424588:	hlt    
  424589:	sub    BYTE PTR [ecx+ebp*4-0x5],bl
  42458d:	or     BYTE PTR [eax+0x3f8961a3],al
  424593:	(bad)  
  424594:	push   esp
  424595:	add    ecx,DWORD PTR [esi+0x96621d1]
  42459b:	inc    edi
  42459c:	(bad)  
  42459e:	pushf  
  42459f:	loope  0x4245a6
  4245a1:	sub    eax,0xe19b21c5
  4245a6:	push   ds
  4245a7:	inc    esp
  4245a8:	and    dl,BYTE PTR [esi-0x34]
  4245ab:	dec    edx
  4245ac:	cs in  al,0x22
  4245af:	mov    ds:0x232938c,al
  4245b4:	or     eax,ebx
  4245b6:	jnp    0x42454d
  4245b8:	sbb    BYTE PTR [esi+0x6d478aac],dl
  4245be:	fadd   st(0),st
  4245c0:	mov    ds:0x87ce5e57,al
  4245c5:	scas   al,BYTE PTR es:[edi]
  4245c6:	jns    0x4245db
  4245c8:	stos   BYTE PTR es:[edi],al
  4245c9:	dec    ebp
  4245ca:	mov    bl,0xc
  4245cc:	jmp    FWORD PTR [ecx+edx*1+0x1e]
  4245d0:	leave  
  4245d1:	ds lds edx,FWORD PTR ss:[ebp+ebp*2-0x2d]
  4245d7:	(bad)  
  4245d8:	std    
  4245d9:	(bad)  
  4245da:	cmp    edx,DWORD PTR [edi-0x76216580]
  4245e0:	test   eax,0xfc0b52dc
  4245e5:	test   eax,0xd170ac7f
  4245ea:	sub    al,0xed
  4245ec:	jnp    0x4245f0
  4245ee:	add    al,0x70
  4245f0:	es jbe 0x4245e3
  4245f3:	dec    eax
  4245f4:	je     0x424625
  4245f6:	pushf  
  4245f7:	inc    edi
  4245f8:	or     al,0xa0
  4245fa:	lock fstp QWORD PTR [ecx]
  4245fd:	jle    0x424638
  4245ff:	and    esi,DWORD PTR [edx+0x77]
  424602:	lods   al,BYTE PTR ds:[esi]
  424603:	scas   al,BYTE PTR es:[edi]
  424604:	push   es
  424605:	mov    ds:0x1346c25,eax
  42460a:	xchg   esi,eax
  42460b:	adc    esi,ebp
  42460d:	test   BYTE PTR [esp+edx*8],dl
  424610:	nop    DWORD PTR es:[eax-0x67]
  424615:	jmp    0x42465c
  424617:	repz cwde 
  424619:	push   ecx
  42461a:	mov    ss,WORD PTR [eax]
  42461c:	retf   0x1c6c
  42461f:	push   ds
  424620:	pop    ecx
  424621:	daa    
  424622:	ret    0xc36
  424625:	aam    0x47
  424627:	mov    ds:0x4ab560e9,eax
  42462c:	jl     0x42465c
  42462e:	mov    dl,0x77
  424630:	and    cl,al
  424632:	les    eax,FWORD PTR [edi+ebp*4+0x5d]
  424636:	and    al,0x71
  424638:	pop    ebp
  424639:	fs jg  0x4245cb
  42463c:	sbb    DWORD PTR [eax+eiz*4],esp
  42463f:	sbb    al,BYTE PTR [ebx+0x187923b4]
  424645:	cs push cs
  424647:	xor    DWORD PTR [ebp-0x52bbd7e2],edx
  42464d:	xchg   DWORD PTR [esi],edx
  42464f:	adc    DWORD PTR [ebp-0x7b],esi
  424652:	loopne 0x424602
  424654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424655:	adc    BYTE PTR [esi-0x4274227a],ch
  42465b:	lea    esi,[esi+0x6db023e4]
  424661:	mov    ch,BYTE PTR [edx+0x50]
  424664:	sti    
  424665:	test   al,0xbc
  424667:	xchg   edx,eax
  424668:	scas   al,BYTE PTR es:[edi]
  424669:	test   dl,bh
  42466b:	mov    al,0x6b
  42466d:	es popf 
  42466f:	or     BYTE PTR [ebx-0x4597b5a0],ah
  424675:	add    ch,BYTE PTR [ebx+ecx*4]
  424678:	mov    WORD PTR [bp+si+0x1bb3],?
  42467d:	or     ebx,DWORD PTR [edi+0x61f50916]
  424683:	xchg   ecx,eax
  424684:	fbld   TBYTE PTR [edx+0xd]
  424687:	or     al,0x4d
  424689:	mov    al,0xd
  42468b:	das    
  42468c:	xlat   BYTE PTR ds:[ebx]
  42468d:	je     0x424639
  42468f:	pop    ebp
  424690:	leave  
  424691:	fmul   QWORD PTR [ebx]
  424693:	aad    0xc2
  424695:	dec    esp
  424696:	aad    0x83
  424698:	push   esi
  424699:	push   0x67
  42469b:	push   ebx
  42469c:	jno    0x424658
  42469e:	lock int 0xb2
  4246a1:	es or  esi,edx
  4246a4:	mov    ds:0x5084f259,eax
  4246a9:	or     dh,dh
  4246ab:	jmp    0xf1d78687
  4246b0:	test   al,0x67
  4246b2:	jae    0x42468f
  4246b4:	cli    
  4246b5:	adc    BYTE PTR [ebx+0x2],ch
  4246b8:	xchg   BYTE PTR [ebx+0x6a1a7817],dh
  4246be:	or     eax,0xabf29266
  4246c3:	fadd   DWORD PTR [edx+0x327a5fc0]
  4246c9:	out    dx,al
  4246ca:	push   esi
  4246cb:	jle    0x4246bb
  4246cd:	jb     0x424678
  4246cf:	mov    ebx,0xb2517800
  4246d4:	pop    es
  4246d5:	ret    0x8d12
  4246d8:	popa   
  4246d9:	clc    
  4246da:	inc    esi
  4246db:	cli    
  4246dc:	mov    ebx,DWORD PTR [ecx+0x12]
  4246df:	adc    ebx,esi
  4246e1:	inc    esi
  4246e2:	or     al,0xc3
  4246e4:	pop    edi
  4246e5:	and    eax,DWORD PTR [ebx-0x9]
  4246e8:	div    DWORD PTR [esi+ecx*1+0x66]
  4246ec:	rcl    DWORD PTR [ebx],1
  4246ee:	leave  
  4246ef:	xor    dl,BYTE PTR [esi+ecx*4-0x22]
  4246f3:	mov    ah,0xb1
  4246f5:	cmp    eax,0xe65d6872
  4246fa:	shr    DWORD PTR [esi+0x50],cl
  4246fd:	pop    eax
  4246fe:	rol    BYTE PTR [esi],cl
  424700:	ror    DWORD PTR [edx+ebx*2],1
  424703:	and    esi,DWORD PTR [ecx+0x20]
  424706:	mov    dl,0xbc
  424708:	arpl   WORD PTR [edi-0x16b34c18],sp
  42470e:	pop    ecx
  42470f:	mov    esp,0x3bb06aa4
  424714:	fldcw  WORD PTR [edi+ebx*1]
  424717:	fist   DWORD PTR [esi-0x4368cca6]
  42471d:	inc    ebx
  42471e:	adc    eax,ecx
  424720:	les    ecx,FWORD PTR [ecx+0x3b]
  424723:	mov    bh,0x1a
  424725:	pop    edi
  424726:	push   0xffffffbe
  424728:	and    bh,BYTE PTR [ebx]
  42472a:	xchg   ebx,eax
  42472b:	sub    BYTE PTR [ecx],cl
  42472d:	loop   0x4246ff
  42472f:	imul   esp,DWORD PTR [edi+0x2477b666],0xa4206e01
  424739:	(bad)  
  42473a:	push   eax
  42473b:	xchg   ch,dl
  42473d:	loop   0x424755
  42473f:	push   ebp
  424740:	mov    ds:0x41ba3baa,eax
  424745:	xchg   DWORD PTR [edi+0x0],esi
  424748:	or     al,0x8d
  42474a:	cmp    edx,DWORD PTR [ebx]
  42474c:	retf   0x3b03
  42474f:	xor    dl,BYTE PTR [ebx+0x37e7d697]
  424755:	xor    bh,bh
  424757:	dec    ebx
  424758:	xor    BYTE PTR [ebp+0x6c],ch
  42475b:	hlt    
  42475c:	xor    DWORD PTR [ebp-0x29],eax
  42475f:	mov    edx,0x868cd70a
  424764:	(bad)  
  424765:	dec    ebx
  424766:	test   DWORD PTR fs:[ebp+0x7c],0xea156ab8
  42476e:	xchg   esp,esp
  424770:	test   BYTE PTR [ebp+edx*2-0x2f20ae67],dh
  424777:	popa   
  424778:	in     eax,0x3d
  42477a:	xor    eax,DWORD PTR [esi-0x6c]
  42477d:	dec    esp
  42477e:	cmp    bh,BYTE PTR [ebp+0x7d87c635]
  424784:	pcmpeqd mm7,QWORD PTR [edx]
  424787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424788:	imul   eax,DWORD PTR [edi-0x8],0x94952c82
  42478f:	adc    eax,0x2a9da86e
  424794:	jmp    0x424758
  424796:	cmp    edi,0xffffff80
  424799:	and    al,0x4b
  42479b:	jge    0x4247a8
  42479d:	mov    ah,cl
  42479f:	ds lahf 
  4247a1:	add    ch,BYTE PTR [edx]
  4247a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247a4:	jecxz  0x42481f
  4247a6:	push   0xa
  4247a8:	and    dl,ch
  4247aa:	das    
  4247ab:	sub    DWORD PTR [esi-0x9],ecx
  4247ae:	or     al,0xf1
  4247b0:	cld    
  4247b1:	mov    ds:0x25c8edc6,al
  4247b6:	jg     0x424836
  4247b8:	mov    dh,0x58
  4247ba:	jbe    0x42478d
  4247bc:	add    cl,ch
  4247be:	(bad)
  4247c1:	xlat   BYTE PTR ds:[ebx]
  4247c2:	inc    ebp
  4247c3:	fild   WORD PTR [edi-0x286cbf43]
  4247c9:	(bad)  
  4247ca:	mov    ebx,0x80e9ba00
  4247cf:	mov    eax,0x8211689c
  4247d4:	and    DWORD PTR [edi-0x28b34866],ecx
  4247da:	adc    esp,DWORD PTR [ecx*8-0x4b449f3c]
  4247e1:	mov    ds:0x5027af26,al
  4247e6:	sbb    DWORD PTR [esi],edx
  4247e8:	fs adc dh,ah
  4247eb:	push   ecx
  4247ec:	jle    0x42486b
  4247ee:	test   esp,0xf60516ec
  4247f4:	sub    eax,0x64636e78
  4247f9:	and    BYTE PTR ds:0x3662ce57,al
  4247ff:	push   eax
  424800:	pop    edi
  424801:	jnp    0x42479b
  424803:	pop    ds
  424804:	fadd   st(6),st
  424806:	stos   BYTE PTR es:[edi],al
  424807:	cmp    DWORD PTR [ecx],esi
  424809:	popf   
  42480a:	add    ah,BYTE PTR [eax+0x2d]
  42480d:	sbb    BYTE PTR [edi+edx*8-0x7a],dl
  424811:	test   dh,dl
  424813:	jno    0x4247fd
  424815:	hlt    
  424816:	test   al,0x84
  424818:	rol    ecx,0x4a
  42481b:	cmp    ecx,esi
  42481d:	xchg   esi,eax
  42481e:	pusha  
  42481f:	xor    al,0x4a
  424821:	std    
  424822:	rcl    BYTE PTR [ebx],1
  424824:	nop
  424825:	rcl    DWORD PTR [esi],cl
  424827:	out    dx,al
  424828:	inc    esp
  424829:	pop    ss
  42482a:	adc    DWORD PTR [edi+0x4c],0x31495d66
  424831:	xor    DWORD PTR [eax+0x7d],esi
  424834:	mov    al,ds:0x712ec6d5
  424839:	in     al,dx
  42483a:	cs cmp ah,cl
  42483d:	jo     0x424804
  42483f:	mov    bh,0x8a
  424841:	inc    esp
  424842:	mov    eax,0xfd4dcb19
  424847:	shl    edx,1
  424849:	je     0x42488c
  42484b:	jge    0x4248c3
  42484d:	inc    eax
  42484e:	mov    cl,0x21
  424850:	stos   BYTE PTR es:[edi],al
  424851:	outs   dx,DWORD PTR ds:[esi]
  424852:	sbb    bp,WORD PTR [esi]
  424855:	test   al,0xfe
  424858:	inc    DWORD PTR [eax-0x6]
  42485b:	ret    0xd861
  42485e:	inc    esi
  42485f:	out    0xe2,al
  424861:	shl    DWORD PTR [eax-0x1b31bf5f],1
  424867:	iret   
  424868:	dec    esp
  424869:	fisub  DWORD PTR [edi]
  42486b:	rcr    dh,1
  42486d:	(bad)  
  42486e:	mov    esp,0x3cda4d8e
  424873:	(bad)  [eax+0x23]
  424876:	(bad)  fs:[eax-0x6d76fedf]
  42487d:	push   ebp
  42487e:	leave  
  42487f:	imul   esi,DWORD PTR [edi+0x44],0x8
  424883:	push   ds
  424884:	pop    ecx
  424885:	pop    edx
  424886:	dec    ebp
  424887:	addr16 push edx
  424889:	aas    
  42488a:	lds    eax,FWORD PTR [esi-0x2b12a2c6]
  424890:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  424892:	jns    0x424884
  424894:	xor    esi,DWORD PTR [edi-0x515a4d07]
  42489a:	and    BYTE PTR [ecx+0x2d235f48],cl
  4248a0:	adc    dh,ch
  4248a2:	jp     0x42486e
  4248a4:	jnp    0x4248dc
  4248a6:	daa    
  4248a7:	push   0x24795176
  4248ac:	push   es
  4248ad:	mov    ecx,0x485cc701
  4248b2:	call   0x32a89b0d
  4248b7:	retf   0x888a
  4248ba:	in     al,0xc3
  4248bc:	xchg   esi,eax
  4248bd:	xchg   ecx,eax
  4248be:	inc    BYTE PTR [edi+0x6d]
  4248c1:	vpsrlw ymm1,ymm5,XMMWORD PTR [ebx+0x34]
  4248c6:	cld    
  4248c7:	aas    
  4248c8:	mov    ds:0x5f3dc467,al
  4248cd:	shl    DWORD PTR [eax+0xf],cl
  4248d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248d1:	pop    ds
  4248d2:	int    0xd2
  4248d4:	add    al,0xf0
  4248d6:	and    bh,BYTE PTR [edx+0x6e131ce]
  4248dc:	dec    ecx
  4248dd:	sbb    esp,DWORD PTR [ebx-0x69]
  4248e0:	das    
  4248e1:	std    
  4248e2:	mov    edx,0x42c0c440
  4248e7:	xchg   edi,eax
  4248e8:	call   0xb2f9:0x52076896
  4248ef:	aam    0x2e
  4248f1:	lock xchg ebx,eax
  4248f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248f4:	sti    
  4248f5:	jmp    0x4248be
  4248f7:	mov    al,0xe2
  4248f9:	add    ebx,DWORD PTR [ecx]
  4248fb:	imul   esp,DWORD PTR [edi+0x6ff97602],0xffffffb0
  424902:	lock fidiv WORD PTR [ecx]
  424905:	cmp    esi,esp
  424907:	retf   0x206b
  42490a:	cli    
  42490b:	das    
  42490c:	or     eax,0x45985df8
  424911:	add    dh,BYTE PTR [edx]
  424913:	mov    dh,0x4f
  424915:	imul   ecx,DWORD PTR [esi],0xffffff90
  424918:	adc    ah,BYTE PTR [edx+ebp*2+0x2f]
  42491c:	ins    BYTE PTR es:[edi],dx
  42491d:	je     0x4248ce
  42491f:	push   ss
  424920:	fstp   TBYTE PTR [edi]
  424922:	mov    esp,DWORD PTR [ecx+ebx*8+0x40bfa96e]
  424929:	stos   DWORD PTR es:[edi],eax
  42492a:	mov    al,ds:0x7791
  42492f:	add    BYTE PTR [eax],al
  424931:	add    BYTE PTR [ebx],dl
  424933:	lea    ebp,[ecx]
  424935:	imul   edi,DWORD PTR [edi+0x23fd53ef],0x6b
  42493c:	fcmovnb st,st(6)
  42493e:	sub    bl,BYTE PTR [esi+ebx*2]
  424941:	mov    eax,0x1c209
  424946:	repz add al,0x0
  424949:	add    bl,bl
  42494b:	or     eax,0x4d672454
  424950:	sbb    DWORD PTR [ebp-0x35e2a417],edx
  424956:	mov    edx,0x38e1dee5
  42495b:	(bad)  
  42495c:	add    dh,dl
  42495e:	xchg   ecx,eax
  42495f:	cmp    al,BYTE PTR [edx]
  424961:	fsub   DWORD PTR [edi-0x60]
  424964:	mov    dh,0x45
  424966:	jo     0x42498e
  424968:	in     eax,0x32
  42496a:	cmp    cl,ah
  42496c:	sub    ebp,esp
  42496e:	mov    edx,0xf62e3a27
  424973:	call   0xdc6b2346
  424978:	loope  0x424931
  42497a:	mov    al,0x95
  42497c:	mov    esp,0x1f631cda
  424981:	mov    eax,ds:0xf09ddc63
  424986:	mov    WORD PTR [ecx+edx*2-0x20e989ae],es
  42498d:	mov    bh,0x93
  42498f:	aad    0xb7
  424991:	inc    ebx
  424992:	sub    DWORD PTR [edx],0xd9924124
  424998:	(bad)  
  424999:	pushf  
  42499a:	jnp    0x424935
  42499c:	mov    bh,0xca
  42499e:	cmp    esp,ebx
  4249a0:	call   0xdbac8537
  4249a5:	jp     0x424a0c
  4249a7:	xor    DWORD PTR [eax+0x66308f87],0xa312aa5a
  4249b1:	popa   
  4249b2:	(bad)  
  4249b3:	pop    edi
  4249b4:	xlat   BYTE PTR ds:[ebx]
  4249b5:	repnz ins BYTE PTR es:[edi],dx
  4249b7:	rcl    BYTE PTR [edi-0x7bfa55d6],1
  4249bd:	mov    bh,0x99
  4249bf:	pop    ecx
  4249c0:	(bad)  
  4249c1:	mov    ecx,0x81350c6d
  4249c6:	pop    ecx
  4249c7:	popf   
  4249c8:	sbb    BYTE PTR [esi-0x34d59484],bh
  4249ce:	stos   DWORD PTR es:[edi],eax
  4249cf:	bnd jp 0x42496d
  4249d2:	(bad)
  4249d5:	add    edi,DWORD PTR [edi+0x33]
  4249d8:	push   0x3fb9e9ff
  4249dd:	(bad)  
  4249de:	mov    ebx,0xf6f1e99
  4249e3:	lea    ebp,[edx-0x68]
  4249e6:	lock sbb al,0x75
  4249e9:	repz arpl bx,bx
  4249ec:	mov    BYTE PTR [esp+0x14eb411e],dh
  4249f3:	adc    al,0xf9
  4249f5:	sub    al,0xe
  4249f7:	lock (bad) 
  4249f9:	dec    ebx
  4249fa:	xchg   ebp,eax
  4249fb:	xchg   edi,eax
  4249fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249fd:	fst    QWORD PTR [edi]
  4249ff:	bound  esp,QWORD PTR [edi+0x72aae5e4]
  424a05:	jmp    0x4a7d:0xfa64e438
  424a0c:	push   esp
  424a0d:	pop    edi
  424a0e:	jb     0x424a7a
  424a10:	test   BYTE PTR ds:0xb06aad9a,ch
  424a16:	in     eax,dx
  424a17:	stc    
  424a18:	jne    0x4249e4
  424a1a:	retf   
  424a1b:	clc    
  424a1c:	test   eax,0x310522b2
  424a21:	jmp    0x424a93
  424a23:	(bad)  
  424a24:	fiadd  WORD PTR [edx+edx*8]
  424a27:	mov    eax,ds:0xde9cb3b6
  424a2c:	and    eax,0xf889f061
  424a31:	data16 adc al,0x6b
  424a34:	pop    esp
  424a35:	es dec edx
  424a37:	idiv   DWORD PTR [edi-0x6d]
  424a3a:	mov    bl,0x6f
  424a3c:	addr16 or al,0xd6
  424a3f:	retf   
  424a40:	das    
  424a41:	pop    esi
  424a42:	out    0xc9,al
  424a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a45:	out    dx,eax
  424a46:	jp     0x424a74
  424a48:	inc    ebx
  424a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a4a:	retf   
  424a4b:	lahf   
  424a4c:	add    DWORD PTR [esi],eax
  424a4e:	dec    esi
  424a4f:	clc    
  424a50:	div    DWORD PTR [eax-0x52]
  424a53:	popf   
  424a54:	cmp    BYTE PTR [ebp-0x59],dl
  424a57:	fnsave [eax-0x29]
  424a5a:	sub    esp,DWORD PTR [edx]
  424a5c:	stos   DWORD PTR es:[edi],eax
  424a5d:	ret    0xd650
  424a60:	aad    0x34
  424a62:	xchg   edx,eax
  424a63:	dec    edi
  424a64:	mov    edi,0x223c5400
  424a69:	hlt    
  424a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a6b:	(bad)  
  424a6c:	cmp    bl,BYTE PTR [ebx+edx*1]
  424a6f:	or     al,0xd1
  424a71:	(bad)  
  424a72:	cld    
  424a73:	cmp    BYTE PTR [edx],bh
  424a75:	rcr    BYTE PTR [ecx],0x28
  424a78:	(bad)  
  424a79:	xchg   ebp,eax
  424a7a:	stc    
  424a7b:	mov    ebp,DWORD PTR [eax+esi*1+0x2a]
  424a7f:	aad    0xee
  424a81:	xchg   esp,eax
  424a82:	mov    ds:0x82cc2b6d,al
  424a87:	scas   al,BYTE PTR es:[edi]
  424a88:	cli    
  424a89:	mov    dh,ch
  424a8b:	inc    DWORD PTR [ebx-0x7cde1d54]
  424a91:	sub    ah,BYTE PTR [ebx-0x36]
  424a94:	mov    BYTE PTR [esi],cl
  424a96:	loopne 0x424a7c
  424a98:	lock mov ecx,0xdc12cdeb
  424a9e:	mov    ch,0xf0
  424aa0:	popf   
  424aa1:	cli    
  424aa2:	in     eax,0xfe
  424aa4:	in     al,0xdf
  424aa6:	xor    eax,0xb8f3999e
  424aab:	fistp  DWORD PTR [ebp-0x7adc8281]
  424ab1:	dec    edx
  424ab2:	fld    TBYTE PTR [edx+0x32aec506]
  424ab8:	rcr    BYTE PTR [ecx+0x46],0x91
  424abc:	fstp   TBYTE PTR [esp+eiz*8+0xb]
  424ac0:	outs   dx,DWORD PTR ds:[esi]
  424ac1:	dec    edi
  424ac2:	push   edx
  424ac3:	fisub  DWORD PTR [edx]
  424ac5:	(bad)  
  424ac6:	(bad)  
  424ac7:	push   esi
  424ac8:	jmp    0x22d8d72f
  424acd:	in     eax,0x4
  424acf:	jmp    0x9cd9:0x273cd73f
  424ad6:	(bad)  
  424ad7:	repnz ror DWORD PTR ds:0x1a428765,1
  424ade:	pop    esp
  424adf:	pop    ecx
  424ae0:	or     ch,bh
  424ae2:	into   
  424ae3:	mov    cs,WORD PTR [ecx]
  424ae5:	inc    ebp
  424ae6:	shr    DWORD PTR [ecx-0x12],cl
  424ae9:	dec    ebp
  424aea:	mov    al,ds:0x61316488
  424aef:	xchg   ecx,eax
  424af0:	push   ds
  424af1:	sub    ah,BYTE PTR [edx+esi*2]
  424af4:	in     eax,0x46
  424af6:	ffree  st(4)
  424af8:	dec    edx
  424af9:	jnp    0x424a99
  424afb:	mov    ecx,ebx
  424afd:	xor    al,0xc2
  424aff:	xor    al,BYTE PTR [ebx+eax*1]
  424b02:	jmp    0x4204:0x820e881
  424b09:	ret    
  424b0a:	sbb    al,0x58
  424b0c:	pop    es
  424b0d:	idiv   ecx
  424b0f:	scas   eax,DWORD PTR es:[edi]
  424b10:	shl    BYTE PTR [eax-0x763d5cb5],1
  424b16:	test   BYTE PTR [eax-0x48],ch
  424b19:	pop    ss
  424b1a:	push   0xfe84e47d
  424b1f:	mov    ah,0xcf
  424b21:	adc    esp,ebx
  424b23:	jo     0x424b6e
  424b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b26:	adc    eax,0xf75ae0aa
  424b2b:	sti    
  424b2c:	mov    eax,ds:0xfa4232eb
  424b31:	out    dx,eax
  424b32:	push   ecx
  424b33:	push   ebp
  424b34:	cmp    dl,al
  424b36:	and    eax,0x6a5000f
  424b3b:	push   ss
  424b3c:	xor    esp,edx
  424b3e:	mov    ah,0xd4
  424b40:	push   ecx
  424b41:	xchg   ecx,eax
  424b42:	repz pop ebp
  424b44:	add    ecx,edi
  424b46:	dec    esp
  424b47:	mov    eax,0xa59f600c
  424b4c:	pop    es
  424b4d:	xchg   al,dh
  424b4f:	add    DWORD PTR [edx+0x32],esp
  424b52:	cld    
  424b53:	ds pop edx
  424b55:	dec    ebx
  424b56:	dec    ebx
  424b57:	imul   ebp,esp,0x75
  424b5a:	cmp    BYTE PTR [eax-0x3aaa944d],dh
  424b60:	sbb    eax,DWORD PTR [esi-0x7edc2a6f]
  424b66:	mov    BYTE PTR [ebp-0x6bedf33b],cl
  424b6c:	mov    ecx,0xad03e140
  424b72:	ds push ebx
  424b74:	mov    cs,WORD PTR [ebp-0x30a9bc11]
  424b7a:	clc    
  424b7b:	mov    eax,0xc23d0e46
  424b80:	inc    esi
  424b81:	jle    0x424b4c
  424b83:	xchg   ecx,eax
  424b84:	loope  0x424b99
  424b86:	retf   0x3989
  424b89:	xchg   BYTE PTR [esi+0x38],bl
  424b8c:	ret    0xe9a4
  424b8f:	inc    edi
  424b90:	cwde   
  424b91:	test   DWORD PTR [eax-0x7c483d80],ebp
  424b97:	xor    DWORD PTR [esi+0x57d30b79],0xffffffc6
  424b9e:	std    
  424b9f:	jae    0x424bea
  424ba1:	pop    ebp
  424ba2:	loopne 0x424be6
  424ba4:	ret    
  424ba5:	sahf   
  424ba6:	xchg   esi,eax
  424ba7:	push   esp
  424ba8:	outs   dx,DWORD PTR ds:[esi]
  424ba9:	fcom   DWORD PTR [edi-0x28b4bc4]
  424baf:	cmp    bl,BYTE PTR ds:0x63ae05a3
  424bb5:	inc    esi
  424bb6:	mov    dh,BYTE PTR [ecx+0x48]
  424bb9:	mov    esi,0xb4dfd5ac
  424bbe:	xor    esp,edx
  424bc0:	sbb    ah,al
  424bc2:	enter  0x42d4,0x5d
  424bc6:	scas   eax,DWORD PTR es:[edi]
  424bc7:	stc    
  424bc8:	mov    edx,0xbcb783e2
  424bcd:	pushf  
  424bce:	icebp  
  424bcf:	mov    WORD PTR ds:0xe96c3552,fs
  424bd5:	shr    ebp,0x34
  424bd8:	imul   ebp,DWORD PTR [ebx+ecx*8],0x57
  424bdc:	and    eax,0xa069cded
  424be1:	xchg   ebp,eax
  424be2:	popa   
  424be3:	ret    0xb190
  424be6:	pop    edi
  424be7:	cmp    al,0xed
  424be9:	and    ebx,0xffffffae
  424bec:	pop    edx
  424bed:	cli    
  424bee:	lds    esi,FWORD PTR [esi]
  424bf0:	mov    dh,0xa
  424bf2:	retf   0x13b6
  424bf5:	mov    eax,ds:0x7aab90c1
  424bfa:	fucomp st(1)
  424bfc:	int3   
  424bfd:	test   al,0x65
  424bff:	aam    0x82
  424c01:	aaa    
  424c02:	loope  0x424b87
  424c04:	call   FWORD PTR [ecx+0x5e56e823]
  424c0a:	inc    ebp
  424c0b:	test   DWORD PTR [esi+0x31368839],eax
  424c11:	pop    ss
  424c12:	mov    edx,0x52581985
  424c17:	or     eax,0xc2b53163
  424c1c:	mov    ebx,DWORD PTR [ecx-0x7ad8daec]
  424c22:	lock aad 0x2d
  424c25:	not    DWORD PTR [ebx+ebx*1-0x6cd32cd]
  424c2c:	frstor [eax]
  424c2e:	jp     0x424c88
  424c30:	mov    esi,0xa2dcc569
  424c35:	scas   al,BYTE PTR es:[edi]
  424c36:	lods   al,BYTE PTR ds:[esi]
  424c37:	sub    eax,0x8dbd9b93
  424c3c:	sub    dl,BYTE PTR [ecx-0x28494b83]
  424c42:	mov    ds:0x851e3226,eax
  424c47:	jo     0x424c5c
  424c49:	jnp    0x424bce
  424c4b:	mov    dh,ch
  424c4d:	retf   
  424c4e:	popf   
  424c4f:	cld    
  424c50:	bound  esp,QWORD PTR [edi+edx*2+0x6b]
  424c54:	loope  0x424cb6
  424c56:	cmp    al,BYTE PTR [edx]
  424c58:	mov    ds:0xe4892ea1,al
  424c5d:	outs   dx,BYTE PTR ds:[esi]
  424c5e:	mov    al,ds:0x584ead68
  424c63:	(bad)  
  424c64:	jne    0x424c43
  424c66:	sub    ah,BYTE PTR ss:[eax-0x676e0ba]
  424c6d:	enter  0x6c2a,0xd6
  424c71:	xor    bh,BYTE PTR ds:0xbad46fa7
  424c77:	or     BYTE PTR [esi*8+0x16f18c1c],0xd8
  424c7f:	mov    edi,0x86cb96c0
  424c84:	and    BYTE PTR [esi-0x6c],dh
  424c87:	pop    eax
  424c88:	push   0xe9500257
  424c8d:	xchg   esp,eax
  424c8e:	outs   dx,DWORD PTR ds:[esi]
  424c8f:	outs   dx,BYTE PTR ds:[esi]
  424c90:	ficom  DWORD PTR [ecx]
  424c92:	mov    esp,0x88909400
  424c97:	xchg   ebp,eax
  424c98:	inc    esi
  424c99:	fs (bad) 
  424c9b:	mov    edx,0xb1f21752
  424ca0:	ds push ebp
  424ca2:	std    
  424ca3:	mov    edx,0x39e0653a
  424ca8:	xchg   DWORD PTR [esi-0x75d8e0de],edi
  424cae:	mov    dl,0x2b
  424cb0:	jo     0x424c63
  424cb2:	inc    esi
  424cb3:	mov    ebx,0xaed42f7a
  424cb8:	mov    ds:0x558d4328,eax
  424cbd:	dec    ebx
  424cbe:	sub    edi,DWORD PTR [ecx+eax*4+0x6d]
  424cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cc3:	mov    bh,0x71
  424cc5:	outs   dx,BYTE PTR ds:[esi]
  424cc6:	mov    DWORD PTR [edx-0x4b6c9e19],esp
  424ccc:	jb     0x424ccc
  424cce:	pop    ebp
  424ccf:	daa    
  424cd0:	dec    esp
  424cd1:	mov    cl,0x4d
  424cd3:	xchg   esp,eax
  424cd4:	inc    esi
  424cd5:	imul   edx,edi,0x35
  424cd8:	mov    ebp,0xde517e6d
  424cdd:	hlt    
  424cde:	and    dh,0xc2
  424ce1:	outs   dx,BYTE PTR ds:[esi]
  424ce2:	mov    esi,DWORD PTR ds:0x75fd1b16
  424ce8:	mov    ebp,0x643f8219
  424ced:	jg     0x424c7e
  424cef:	shr    edi,0xf8
  424cf2:	aaa    
  424cf3:	cmp    edx,eax
  424cf5:	push   ss
  424cf6:	jmp    0x960430ea
  424cfb:	push   ebp
  424cfc:	adc    al,0xec
  424cfe:	es mov esi,0x5f7c026d
  424d04:	rol    esp,1
  424d06:	repnz outs dx,DWORD PTR ds:[esi]
  424d08:	(bad)  
  424d09:	push   es
  424d0a:	rol    ecx,0xf
  424d0d:	mov    edi,0xe00d7b75
  424d12:	inc    edx
  424d13:	stos   DWORD PTR es:[edi],eax
  424d14:	jle    0x424d56
  424d16:	pop    eax
  424d17:	or     edx,DWORD PTR [eax]
  424d19:	dec    esi
  424d1a:	jge    0x424d89
  424d1c:	ss out dx,eax
  424d1e:	pusha  
  424d1f:	adc    bl,BYTE PTR [edi-0x7e306861]
  424d25:	hlt    
  424d26:	xlat   BYTE PTR ds:[ebx]
  424d27:	pop    ebp
  424d28:	jl     0x424d5d
  424d2a:	aaa    
  424d2b:	cli    
  424d2c:	outs   dx,BYTE PTR ds:[esi]
  424d2d:	jb     0x424dac
  424d2f:	frstor [ebx+ebx*8+0xb7da136]
  424d36:	(bad)  
  424d37:	sbb    eax,0xa80535b8
  424d3c:	fisubr WORD PTR [eax]
  424d3e:	leave  
  424d3f:	jnp    0x424cf7
  424d41:	xchg   edi,eax
  424d42:	pop    ebp
  424d43:	cdq    
  424d44:	aad    0x97
  424d46:	push   edi
  424d47:	pop    eax
  424d48:	sub    ah,BYTE PTR [ebp-0xa]
  424d4b:	stos   BYTE PTR es:[edi],al
  424d4c:	inc    ebp
  424d4d:	sti    
  424d4e:	fdivr  QWORD PTR [ebx]
  424d50:	pop    esp
  424d51:	dec    esp
  424d52:	add    BYTE PTR [eax-0x16],ah
  424d55:	sub    ch,BYTE PTR [ecx-0x63]
  424d58:	js     0x424cef
  424d5a:	sbb    eax,0x88adc1ed
  424d5f:	pop    edi
  424d60:	or     al,0x51
  424d62:	mov    al,0xa8
  424d64:	mov    al,0xa9
  424d66:	inc    ebp
  424d67:	xor    cl,al
  424d69:	cmp    ah,BYTE PTR [edi-0x1a987afb]
  424d6f:	sar    DWORD PTR [edx-0x271d33d2],0xd1
  424d76:	lock inc DWORD PTR [ebp-0x7d]
  424d7a:	push   es
  424d7b:	(bad)  
  424d7c:	sub    al,0x80
  424d7e:	(bad)  
  424d7f:	cmp    DWORD PTR [ecx+ebx*2],esp
  424d82:	jb     0x424d5c
  424d84:	lea    esi,[esi+0xa]
  424d87:	pop    esi
  424d88:	lahf   
  424d89:	(bad)  
  424d8a:	xor    DWORD PTR [esi-0x664b14b2],edx
  424d90:	sub    eax,0xfd0aeb4a
  424d95:	jne    0x424d30
  424d97:	adc    DWORD PTR [ebp-0x67],ecx
  424d9a:	mov    cl,0x33
  424d9c:	aad    0x3
  424d9e:	xor    cl,bh
  424da0:	aad    0xa6
  424da2:	ss push 0xffffffee
  424da5:	xchg   ecx,eax
  424da6:	shr    BYTE PTR fs:[edx],0x99
  424daa:	aad    0xe3
  424dac:	lods   eax,DWORD PTR ds:[esi]
  424dad:	sub    al,0xfe
  424daf:	mul    BYTE PTR [edi+ecx*8-0x3e]
  424db3:	outs   dx,BYTE PTR ds:[esi]
  424db4:	mov    edi,ebx
  424db6:	sbb    ebp,DWORD PTR [edi-0x7975fb23]
  424dbc:	cdq    
  424dbd:	jp     0x424d68
  424dbf:	jo     0x424e2b
  424dc1:	test   BYTE PTR [ebx+0x5a11364c],ch
  424dc7:	jp     0x424db6
  424dc9:	fdiv   QWORD PTR [ebx+0x43]
  424dcc:	xchg   DWORD PTR [edi+eax*1-0xb],ebp
  424dd0:	ss enter 0xa6b8,0x6e
  424dd5:	add    al,0x4a
  424dd7:	(bad)  
  424dd8:	mov    dl,0x9
  424dda:	dec    ebx
  424ddb:	hlt    
  424ddc:	daa    
  424ddd:	mov    ebx,0xd9c3041c
  424de2:	(bad)  
  424de3:	loopne 0x424d83
  424de5:	int3   
  424de6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  424de8:	push   ebx
  424de9:	jmp    0xa79b1bc2
  424dee:	or     BYTE PTR [esi],ah
  424df0:	and    eax,0x607f37d3
  424df5:	pop    esi
  424df6:	bound  ebp,QWORD PTR [edx+0xe]
  424df9:	inc    esp
  424dfa:	js     0x424d8c
  424dfc:	push   esi
  424dfd:	push   edi
  424dfe:	jmp    0xe67d:0x19ec9f61
  424e05:	push   cs
  424e06:	loope  0x424e57
  424e08:	scas   al,BYTE PTR es:[edi]
  424e09:	int    0xf7
  424e0b:	cmp    al,0xf8
  424e0d:	push   0x65
  424e0f:	scas   eax,DWORD PTR es:[edi]
  424e10:	call   0x73c2de09
  424e15:	jg     0x424e92
  424e17:	push   esp
  424e18:	mov    eax,0x1e521467
  424e1d:	(bad)  
  424e1f:	xchg   ebp,eax
  424e20:	xchg   esp,eax
  424e21:	std    
  424e22:	mov    bl,BYTE PTR [esi]
  424e24:	sbb    ecx,DWORD PTR ds:0x3839bf6d
  424e2a:	pop    eax
  424e2b:	pop    esi
  424e2c:	pop    edi
  424e2d:	hlt    
  424e2e:	jnp    0x424db4
  424e30:	lock mov al,ds:0xc2d68606
  424e36:	sbb    BYTE PTR [eax-0x2a741b35],dl
  424e3c:	jle    0x424e3e
  424e3e:	add    BYTE PTR [eax],al
  424e40:	add    BYTE PTR [eax],al
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     edi,ebp
  424e4f:	enter  0xa315,0xfc
  424e53:	mov    BYTE PTR [ecx],0x0
  424e56:	repz add al,0x0
  424e59:	add    BYTE PTR [ebx-0x1d],dl
  424e5c:	push   DWORD PTR [ebp-0x6d584fd7]
  424e62:	jnp    0x424ea6
  424e64:	pop    es
  424e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e66:	dec    ebp
  424e67:	test   al,0xf7
  424e69:	jne    0x424ded
  424e6b:	inc    esi
  424e6c:	push   eax
  424e6d:	scas   eax,DWORD PTR es:[edi]
  424e6e:	add    esp,DWORD PTR [esp+esi*1-0x312af0e7]
  424e75:	inc    ecx
  424e76:	fs mov edx,0x6bcdee54
  424e7c:	or     al,0xb0
  424e7e:	sub    bl,BYTE PTR [ebx-0x10]
  424e81:	add    al,0xf4
  424e83:	scas   al,BYTE PTR es:[edi]
  424e84:	sti    
  424e85:	or     cl,BYTE PTR [edx-0x7a1a039a]
  424e8b:	or     eax,0xf2bc0197
  424e90:	fwait
  424e91:	ss test al,0xbc
  424e94:	mul    ch
  424e96:	jns    0x424e4b
  424e98:	cmp    al,BYTE PTR [ebx-0x280d4bbc]
  424e9e:	das    
  424e9f:	fld    st(1)
  424ea1:	sub    eax,0x9a01eda0
  424ea6:	mov    eax,0xc58395e0
  424eab:	mov    ebp,0xf142f6f4
  424eb0:	out    dx,al
  424eb1:	hlt    
  424eb2:	xor    cl,BYTE PTR [eax]
  424eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424eb5:	xchg   ebx,eax
  424eb6:	mov    dl,0x9
  424eb8:	push   ebx
  424eb9:	iret   
  424eba:	sbb    BYTE PTR [eax-0x6a],ah
  424ebd:	or     al,0x2b
  424ebf:	das    
  424ec0:	stos   BYTE PTR es:[edi],al
  424ec1:	inc    esp
  424ec2:	mov    eax,ds:0x2c5181bd
  424ec7:	or     BYTE PTR [ecx-0x4d],ch
  424eca:	fwait
  424ecb:	add    edx,DWORD PTR [ebx]
  424ecd:	xchg   edi,eax
  424ece:	lahf   
  424ecf:	xlat   BYTE PTR ds:[ebx]
  424ed0:	fcom   DWORD PTR [edx]
  424ed2:	xlat   BYTE PTR ds:[ebx]
  424ed3:	in     al,dx
  424ed4:	pusha  
  424ed5:	and    BYTE PTR [ebx+0x26],cl
  424ed8:	retf   0x7748
  424edb:	in     al,0x6
  424edd:	xor    cl,ch
  424edf:	sub    DWORD PTR [edi+0x6a8f6bbb],0x7c41a974
  424ee9:	add    cl,BYTE PTR [ebp+0x7fc17512]
  424eef:	mov    esp,0x9d38e308
  424ef4:	jle    0x424f08
  424ef6:	bound  edi,QWORD PTR [esi-0x5dc67552]
  424efc:	cmp    eax,ebx
  424efe:	loopne 0x424f16
  424f00:	adc    dh,ah
  424f02:	enter  0xf4f1,0xd8
  424f06:	pop    ebx
  424f07:	xor    eax,0x5b73f3b0
  424f0c:	fcom   st(6)
  424f0e:	jmp    0x795c:0x51b924fe
  424f15:	dec    ebp
  424f16:	push   ds
  424f17:	xlat   BYTE PTR ds:[ebx]
  424f18:	mov    al,cl
  424f1a:	jmp    DWORD PTR [ebp+0x52f301ba]
  424f20:	aaa    
  424f21:	in     al,dx
  424f22:	ret    
  424f23:	jne    0x424ee6
  424f25:	popf   
  424f26:	outs   dx,BYTE PTR ds:[esi]
  424f27:	idiv   DWORD PTR [edx]
  424f29:	push   esi
  424f2a:	jo     0x424f12
  424f2c:	xchg   ebx,eax
  424f2d:	test   BYTE PTR [ebx-0xbd4fc06],ah
  424f33:	setb   BYTE PTR [ecx-0x6fce6ecc]
  424f3a:	test   BYTE PTR [edx+0x5e],bl
  424f3d:	cmp    bh,BYTE PTR [esi-0x10e46c6c]
  424f43:	inc    ecx
  424f44:	push   0xffffffdf
  424f46:	pop    esi
  424f47:	inc    DWORD PTR [ebx]
  424f49:	mov    esp,0x3a28db33
  424f4e:	lods   eax,DWORD PTR ds:[esi]
  424f4f:	popa   
  424f50:	ss xchg esi,eax
  424f52:	fisttp WORD PTR [ebx]
  424f54:	xor    esp,ebp
  424f56:	and    al,0x17
  424f58:	lea    ecx,[esi]
  424f5a:	jp     0x424f2b
  424f5c:	retf   0x9c2c
  424f5f:	jge    0x424f98
  424f61:	lock inc ecx
  424f63:	push   edi
  424f64:	xor    al,0x80
  424f66:	and    esi,DWORD PTR [ebx-0x1]
  424f69:	lahf   
  424f6a:	pop    ecx
  424f6b:	sbb    BYTE PTR [esi],bh
  424f6d:	cmp    al,0xac
  424f6f:	test   al,0x91
  424f71:	inc    edx
  424f72:	fs dec esi
  424f74:	mov    BYTE PTR [ecx+0xf],bh
  424f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f78:	lock sub ebx,0x7006a48e
  424f7f:	idiv   DWORD PTR ds:0x54f0c3c6
  424f85:	pop    eax
  424f86:	sub    al,0x1c
  424f88:	jnp    0x424fe9
  424f8a:	pop    edx
  424f8b:	mov    edx,edx
  424f8d:	repz add al,BYTE PTR ds:0xe214b6b0
  424f94:	xchg   esp,eax
  424f95:	sar    DWORD PTR [ebp+0x4327732],0x59
  424f9c:	fnstenv [edi+0x56]
  424f9f:	dec    eax
  424fa0:	stos   DWORD PTR es:[edi],eax
  424fa1:	sub    eax,0xe6579973
  424fa6:	(bad)  
  424fa8:	sbb    al,0xba
  424faa:	add    BYTE PTR [edi],cl
  424fac:	jns    0x424f7a
  424fae:	loopne 0x424f4e
  424fb0:	and    eax,0xfeb85290
  424fb5:	es into 
  424fb7:	add    BYTE PTR ds:0x71aafa91,al
  424fbd:	sub    DWORD PTR [ebp+ebp*2+0x21073a61],ecx
  424fc4:	lea    ebx,[edx-0x6b9f884e]
  424fca:	mul    DWORD PTR ds:0x4403318b
  424fd0:	jecxz  0x424f56
  424fd2:	push   0x79
  424fd4:	test   edx,edx
  424fd6:	pop    ebp
  424fd7:	lods   eax,DWORD PTR ds:[esi]
  424fd8:	xor    DWORD PTR [ebx+ecx*2+0x46],ebp
  424fdc:	pop    ss
  424fdd:	adc    BYTE PTR [eax],bh
  424fdf:	es pop si
  424fe2:	mov    ecx,esp
  424fe4:	outs   dx,BYTE PTR ds:[esi]
  424fe5:	mov    bh,0x9e
  424fe7:	ret    
  424fe8:	adc    bl,ch
  424fea:	(bad)  
  424feb:	in     eax,0x9a
  424fed:	sahf   
  424fee:	push   ebx
  424fef:	aam    0x2b
  424ff1:	push   ss
  424ff2:	xchg   DWORD PTR ss:0x5236f554,eax
  424ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ffa:	test   eax,0x94c7720
  424fff:	neg    BYTE PTR [eax-0x86fe5a9]
  425005:	lock mov cl,0x4c
  425008:	ins    BYTE PTR es:[edi],dx
  425009:	test   al,0xcc
  42500b:	popf   
  42500c:	dec    edi
  42500d:	cmp    bl,BYTE PTR [ebp-0x4f06c559]
  425013:	pusha  
  425014:	nop
  425015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425016:	in     eax,0x88
  425018:	lahf   
  425019:	pop    ebp
  42501a:	jno    0x425001
  42501c:	test   eax,0x11a01b49
  425021:	mov    ecx,0xc95bc26c
  425026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425027:	mov    ebp,0x83247040
  42502c:	stos   DWORD PTR es:[edi],eax
  42502d:	dec    esp
  42502e:	fwait
  42502f:	inc    edi
  425030:	xchg   edx,eax
  425031:	mov    bh,0x10
  425033:	in     eax,dx
  425034:	scas   eax,DWORD PTR es:[edi]
  425035:	push   eax
  425036:	pop    edx
  425037:	call   0x4eb8cb07
  42503c:	mov    esi,0x92716073
  425041:	push   ebp
  425042:	jg     0x425098
  425044:	mov    esp,0x9193b96f
  425049:	mov    cl,0xcf
  42504b:	sub    al,0xb2
  42504d:	mov    esp,0x719e3cc9
  425052:	(bad)  
  425053:	pop    esp
  425054:	adc    BYTE PTR [ebp+edi*4-0x3b9cdb3a],cl
  42505b:	inc    ecx
  42505c:	cld    
  42505d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42505e:	adc    dl,BYTE PTR [ebx]
  425060:	pop    edi
  425061:	loopne 0x4250b0
  425063:	popf   
  425064:	(bad)  
  425065:	mov    bl,0x7c
  425067:	loop   0x42509f
  425069:	cmp    eax,0x3f9a4e0b
  42506e:	xchg   edi,eax
  42506f:	pop    ebx
  425070:	jno    0x425085
  425072:	pop    ds
  425073:	mov    ebx,0x3fafdbe2
  425078:	fmul   DWORD PTR [eax-0x25]
  42507b:	cld    
  42507c:	scas   al,BYTE PTR es:[edi]
  42507d:	or     eax,0xa9403b50
  425082:	adc    esi,DWORD PTR [esp+edi*4-0x3f]
  425086:	enter  0x4e6d,0x63
  42508a:	rcr    DWORD PTR [edx],0x2d
  42508d:	add    DWORD PTR [edi-0xa58c831],ebx
  425093:	test   al,0x61
  425095:	or     eax,0x64858229
  42509a:	call   0x6207:0xb9146d03
  4250a1:	div    BYTE PTR [ebx]
  4250a3:	(bad)  
  4250a4:	mov    BYTE PTR [edx+0x57],bh
  4250a7:	loopne 0x42510e
  4250a9:	mov    BYTE PTR [edx+0x59],dh
  4250ac:	iret   
  4250ad:	pop    eax
  4250ae:	adc    ecx,esi
  4250b0:	shl    ebp,1
  4250b2:	add    al,0xde
  4250b4:	test   eax,0xd34fc670
  4250b9:	dec    esp
  4250ba:	sub    eax,0xeb7ae5ba
  4250bf:	xor    eax,0x23de26ca
  4250c4:	aaa    
  4250c5:	pop    edi
  4250c6:	and    eax,0x129c57d6
  4250cb:	lea    esp,[ebx-0x2f]
  4250ce:	xor    BYTE PTR [ebx],0xbf
  4250d1:	sub    DWORD PTR ds:0x3cf49099,eax
  4250d7:	icebp  
  4250d8:	adc    DWORD PTR [eax+ebx*4-0x1528e48e],ebp
  4250df:	push   es
  4250e0:	imul   edi,DWORD PTR [ebx+0x11e05a07],0x35f1e45
  4250ea:	cmc    
  4250eb:	loope  0x42512a
  4250ed:	ins    BYTE PTR es:[edi],dx
  4250ee:	and    al,BYTE PTR [ebx]
  4250f0:	jo     0x4250f5
  4250f2:	js     0x4250d5
  4250f4:	aaa    
  4250f5:	lds    edx,FWORD PTR [ebp+ebp*2-0x25]
  4250f9:	(bad)  
  4250fa:	call   0xb5522036
  4250ff:	call   0xc71f:0xb9603135
  425106:	enter  0x46f,0x6b
  42510a:	xchg   esp,eax
  42510b:	sahf   
  42510c:	sbb    BYTE PTR [esi],cl
  42510e:	cli    
  42510f:	cli    
  425110:	add    dl,dh
  425112:	pusha  
  425113:	in     eax,0x98
  425115:	mov    bh,0x46
  425117:	stc    
  425118:	je     0x4250a3
  42511a:	fsubr  st,st(0)
  42511c:	xchg   ebp,eax
  42511d:	(bad)  [edx+0x1e1323a9]
  425123:	out    dx,eax
  425124:	cmp    edx,ebx
  425126:	push   ss
  425127:	xlat   BYTE PTR es:[ebx]
  425129:	in     al,0x44
  42512b:	add    BYTE PTR [esi+eax*8],0xa9
  42512f:	push   cs
  425130:	aaa    
  425131:	mov    eax,0x48f7893
  425136:	mov    bl,0xeb
  425138:	shr    DWORD PTR [ebx-0x27b35dfc],0x2
  42513f:	sbb    al,0x48
  425141:	jno    0x4250f2
  425143:	pop    es
  425144:	ret    0xaf33
  425147:	mov    esi,0x8d351dba
  42514c:	xchg   edx,eax
  42514d:	pop    esp
  42514e:	cmp    ch,dh
  425150:	xlat   BYTE PTR ds:[ebx]
  425151:	pop    ecx
  425152:	adc    DWORD PTR [eax+0xa988421],ebx
  425158:	into   
  425159:	mov    BYTE PTR [ebx+0x3f],bl
  42515c:	retf   0x89f3
  42515f:	es sahf 
  425161:	cmp    al,0x2b
  425163:	hlt    
  425164:	push   ecx
  425165:	ror    BYTE PTR [ebx+edx*2],1
  425168:	out    dx,al
  425169:	cdq    
  42516a:	popf   
  42516b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42516c:	adc    al,0xd7
  42516f:	es push 0x45a351b2
  425175:	popa   
  425176:	and    al,0x69
  425178:	pop    esi
  425179:	sub    al,0x29
  42517b:	loope  0x425197
  42517d:	loopne 0x425104
  42517f:	mov    bh,0x3c
  425181:	sub    dl,BYTE PTR [esi]
  425183:	dec    ebx
  425184:	inc    esp
  425185:	mov    edi,0x26c270ef
  42518a:	ins    DWORD PTR es:[edi],dx
  42518b:	mov    ebp,0x46a868a4
  425190:	adc    al,0x84
  425192:	and    ch,BYTE PTR [edi-0x4379ddd9]
  425198:	retf   0x6c1f
  42519b:	dec    ebp
  42519c:	jp     0x4251a3
  42519e:	out    dx,eax
  42519f:	call   0x705a95d2
  4251a4:	sub    esp,DWORD PTR [ebx*4+0x5fd8f8d8]
  4251ab:	pop    esp
  4251ac:	sbb    dh,al
  4251ae:	out    dx,eax
  4251af:	sti    
  4251b0:	scas   al,BYTE PTR es:[edi]
  4251b1:	rcl    DWORD PTR [edx],0x8
  4251b4:	pop    ds
  4251b5:	pop    ebx
  4251b6:	pop    eax
  4251b7:	std    
  4251b8:	enter  0xac7b,0x50
  4251bc:	jecxz  0x42520d
  4251be:	leave  
  4251bf:	fistp  QWORD PTR [edi]
  4251c1:	inc    eax
  4251c2:	sahf   
  4251c3:	cmp    al,0x60
  4251c5:	test   DWORD PTR [eax+0x72],0x4dc5f8c4
  4251cc:	mov    eax,ds:0x3530a1df
  4251d1:	add    esi,ebp
  4251d3:	dec    ebx
  4251d4:	xlat   BYTE PTR ds:[ebx]
  4251d5:	rol    bl,0x1b
  4251d8:	mov    cl,0x28
  4251da:	call   0x5adc8a30
  4251df:	sbb    BYTE PTR [esi+0x6850bc31],ah
  4251e5:	xchg   esp,eax
  4251e6:	jno    0x425221
  4251e8:	push   esp
  4251e9:	fldenv [ebx]
  4251eb:	lods   eax,DWORD PTR ds:[esi]
  4251ec:	xor    edx,DWORD PTR [eax+ecx*4-0x5bcd1138]
  4251f3:	sub    DWORD PTR [ebp+0x7d],esp
  4251f6:	aam    0xfd
  4251f8:	es sbb bh,al
  4251fb:	sbb    eax,0x6e28cf53
  425200:	inc    edx
  425201:	arpl   WORD PTR [esi+0x61],ax
  425204:	cmp    BYTE PTR ds:0xc2253c29,bl
  42520a:	ins    DWORD PTR es:[edi],dx
  42520b:	sbb    al,0x51
  42520d:	cwde   
  42520e:	inc    esi
  42520f:	xchg   DWORD PTR [edi],edx
  425211:	lea    edi,[esi]
  425213:	sub    eax,0x4f995bfb
  425218:	push   edi
  425219:	sbb    ebp,esp
  42521b:	and    eax,0x770c4e5a
  425220:	repz test eax,0x4c22bc9f
  425226:	adc    edi,DWORD PTR [eax-0x2d]
  425229:	imul   esp,eax,0x2bcb2f56
  42522f:	sbb    DWORD PTR [ebx],esp
  425231:	mov    fs,ebx
  425233:	addr16 addr16 dec edi
  425236:	sbb    al,0x44
  425238:	ret    0x9c2d
  42523b:	ds dec edx
  42523d:	mov    BYTE PTR [esi-0x4ceb47f6],cl
  425243:	int3   
  425244:	push   es
  425245:	push   0xfad8c78
  42524a:	jmp    0x425221
  42524c:	pop    ecx
  42524d:	nop
  42524e:	popa   
  42524f:	jne    0x4251db
  425251:	add    esi,DWORD PTR cs:[eax-0x44]
  425255:	jge    0x425269
  425257:	lea    esi,[eax]
  425259:	daa    
  42525a:	pop    ebp
  42525b:	xchg   ebx,eax
  42525c:	dec    eax
  42525d:	pusha  
  42525e:	mov    dl,0x23
  425260:	and    al,0xac
  425262:	imul   edx,DWORD PTR [ebp-0x33],0xffffffd9
  425266:	add    al,0x89
  425268:	xchg   ecx,eax
  425269:	lods   eax,DWORD PTR ds:[esi]
  42526a:	shl    dh,cl
  42526c:	inc    edi
  42526d:	mov    bh,0x26
  42526f:	leave  
  425270:	cdq    
  425271:	jo     0x4252f0
  425273:	outs   dx,DWORD PTR ds:[esi]
  425274:	retf   
  425275:	pop    eax
  425276:	addr16 in al,0xfd
  425279:	lods   al,BYTE PTR ds:[esi]
  42527a:	lock fxch st(4)
  42527d:	in     al,0xe8
  42527f:	push   ebp
  425280:	xchg   ebx,eax
  425281:	push   esi
  425282:	mov    bl,0xd4
  425284:	mov    cs,ecx
  425286:	std    
  425287:	rol    DWORD PTR [ebp+eiz*1-0xc],1
  42528b:	(bad)  
  42528d:	test   DWORD PTR [ebp+0x13a5a66],esp
  425293:	sti    
  425294:	loopne 0x42521a
  425296:	retf   
  425297:	gs iret 
  425299:	adc    bl,dl
  42529b:	outs   dx,DWORD PTR ds:[esi]
  42529c:	(bad)  
  42529e:	xor    DWORD PTR [esi+eiz*4+0x65687e2],esp
  4252a5:	adc    eax,DWORD PTR [eax+0x459832f4]
  4252ab:	test   BYTE PTR [edx],al
  4252ad:	jb     0x425245
  4252af:	mov    ebp,0x99e121b3
  4252b4:	jno    0x4252e0
  4252b6:	sti    
  4252b7:	sbb    cl,ah
  4252b9:	xchg   DWORD PTR ds:0xc43a4488,edx
  4252bf:	(bad)  
  4252c0:	adc    al,0xd5
  4252c2:	jbe    0x4252c1
  4252c4:	jg     0x425289
  4252c6:	adc    eax,ebx
  4252c8:	or     dh,cl
  4252ca:	xor    ebx,edx
  4252cc:	test   BYTE PTR [ebx-0x30],dh
  4252cf:	dec    esi
  4252d0:	pop    ss
  4252d1:	cs push edx
  4252d3:	mov    ds:0xdb458c8d,al
  4252d8:	fcmovb st,st(2)
  4252da:	mov    esi,0x397bcc8f
  4252df:	imul   esp,DWORD PTR [ecx],0xffffffbd
  4252e2:	adc    ah,ah
  4252e4:	sbb    BYTE PTR [ecx],bl
  4252e6:	dec    ebp
  4252e7:	dec    eax
  4252e8:	jp     0x425283
  4252ea:	les    esi,FWORD PTR [ecx]
  4252ec:	lods   eax,DWORD PTR ds:[esi]
  4252ed:	out    0x8d,al
  4252ef:	mov    dl,0x65
  4252f1:	pop    es
  4252f2:	jle    0x42532e
  4252f4:	leave  
  4252f5:	arpl   WORD PTR [ebx+0x7f7adf95],sp
  4252fb:	jnp    0x425297
  4252fd:	xchg   ecx,eax
  4252fe:	ins    DWORD PTR es:[edi],dx
  4252ff:	xchg   edx,eax
  425300:	inc    edi
  425301:	fistp  DWORD PTR [ecx-0x6e]
  425304:	push   esp
  425305:	hlt    
  425306:	xchg   ebp,eax
  425307:	jg     0x42529c
  425309:	cli    
  42530a:	sbb    al,0x57
  42530c:	retf   
  42530d:	ss (bad) 
  42530f:	jmp    0x3fee:0x754f6981
  425316:	loope  0x425364
  425318:	add    al,0x79
  42531a:	inc    edi
  42531b:	mov    ah,0xdb
  42531d:	add    cl,ah
  42531f:	jmp    0x42533b
  425321:	pushf  
  425322:	in     eax,0x76
  425324:	mov    WORD PTR [edi],gs
  425326:	js     0x425338
  425328:	push   eax
  425329:	imul   esi,ebp,0xa5455167
  42532f:	fucomp st(5)
  425331:	sub    DWORD PTR [esi-0x79],eax
  425334:	pop    edi
  425335:	mov    al,0xe7
  425337:	leave  
  425338:	dec    ebp
  425339:	sub    DWORD PTR [eax],ebx
  42533b:	mov    bl,0x39
  42533d:	adc    BYTE PTR [ecx-0x27],dl
  425340:	sar    BYTE PTR [eax+edx*8+0x39e4e274],0xcf
  425348:	aaa    
  425349:	xchg   BYTE PTR [eax+0x2a],ah
  42534c:	pop    DWORD PTR [eax]
  42534e:	add    BYTE PTR [eax],al
  425350:	add    BYTE PTR [eax],al
  425352:	fwait
  425353:	push   ebp
  425354:	pusha  
  425355:	outs   dx,DWORD PTR ds:[esi]
  425356:	out    dx,al
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	dec    esi
  42535f:	xor    eax,0xcbef2083
  425364:	add    DWORD PTR [eax],eax
  425366:	repz add al,0x0
  425369:	add    BYTE PTR [ebx+0x44],bh
  42536c:	push   0xffffffff
  42536e:	mov    ds:0x5eafb96b,eax
  425373:	imul   ecx,esp,0x2f
  425376:	jb     0x42533c
  425378:	sbb    BYTE PTR [ebx],0x2
  42537b:	mov    ds:0x20b72758,eax
  425380:	mov    cs,WORD PTR [esi-0x27]
  425383:	cmp    dh,BYTE PTR [edi+0x7e]
  425386:	scas   eax,DWORD PTR es:[edi]
  425387:	arpl   sp,sp
  425389:	sub    ebx,esi
  42538b:	(bad)  
  42538c:	cmp    al,0x71
  42538e:	adc    esi,ebp
  425390:	pop    ds
  425391:	leave  
  425392:	mov    ebx,0xddfb6e85
  425397:	adc    eax,0x433e6e18
  42539c:	push   cs
  42539d:	(bad)  
  42539e:	retf   
  42539f:	sub    bl,BYTE PTR [esi-0x2ec198b0]
  4253a5:	test   DWORD PTR [esi],ebx
  4253a7:	push   esi
  4253a8:	xchg   edi,eax
  4253a9:	mov    ebx,ss
  4253ab:	add    DWORD PTR [eax+esi*1],ecx
  4253ae:	mov    BYTE PTR [edx],dh
  4253b0:	push   cs
  4253b1:	and    al,0x37
  4253b3:	push   eax
  4253b4:	dec    edi
  4253b5:	scas   eax,DWORD PTR es:[edi]
  4253b6:	popf   
  4253b7:	push   ebp
  4253b8:	pop    DWORD PTR [ecx+0x7d]
  4253bb:	std    
  4253bc:	mov    eax,0xd51f6c70
  4253c1:	repz push esp
  4253c3:	adc    eax,0xf88ae0b2
  4253c8:	sbb    BYTE PTR [edx],dh
  4253ca:	fbstp  TBYTE PTR ds:0x3b71afac
  4253d0:	in     al,0x39
  4253d2:	lahf   
  4253d3:	out    0xac,eax
  4253d5:	xor    DWORD PTR [esi+edi*2],edx
  4253d8:	mov    eax,ds:0x909835a8
  4253dd:	pop    edx
  4253de:	pusha  
  4253df:	jb     0x425413
  4253e1:	adc    DWORD PTR [edx+0x25e5632a],edi
  4253e7:	mov    ds:0x3a2af247,al
  4253ec:	jb     0x42540d
  4253ee:	xor    edx,eax
  4253f0:	jno    0x425409
  4253f2:	and    BYTE PTR [eax],0xe7
  4253f5:	pop    edi
  4253f6:	out    0x1,al
  4253f8:	push   ecx
  4253f9:	and    BYTE PTR [edi+0x70],dl
  4253fc:	or     bl,cl
  4253fe:	mov    dl,0x20
  425400:	mov    edi,0x7d5d5807
  425405:	and    DWORD PTR [edx+0x7c],edx
  425408:	sub    BYTE PTR [edx-0x34],ah
  42540b:	mov    ss,WORD PTR [edi]
  42540d:	and    DWORD PTR [edx],edi
  42540f:	ds call 0x3a7f:0x6ad532f5
  425417:	pop    edx
  425418:	mov    bl,0x5e
  42541a:	push   esi
  42541b:	(bad)  
  42541c:	cdq    
  42541d:	xlat   BYTE PTR ds:[ebx]
  42541e:	out    dx,al
  42541f:	icebp  
  425420:	popf   
  425421:	xor    esi,DWORD PTR [ebx+0x1757c6f6]
  425427:	ins    BYTE PTR es:[edi],dx
  425428:	faddp  st(0),st
  42542a:	jmp    0xfc2e:0x3bbb5ac3
  425431:	mov    cs,WORD PTR [edx]
  425433:	jne    0x42541b
  425435:	cdq    
  425436:	cdq    
  425437:	cmp    ah,bl
  425439:	pop    es
  42543a:	push   esi
  42543b:	push   esi
  42543c:	ins    DWORD PTR es:[edi],dx
  42543d:	stos   BYTE PTR es:[edi],al
  42543e:	push   es
  42543f:	test   al,0xfd
  425441:	(bad)  
  425443:	pop    ds
  425444:	fsubr  DWORD PTR [edi+esi*4-0x78]
  425448:	xchg   ebp,eax
  425449:	jns    0x4253f2
  42544b:	jg     0x42544c
  42544d:	cmp    al,BYTE PTR [esi]
  42544f:	popf   
  425450:	idiv   BYTE PTR [ebx+0x3e69f080]
  425456:	sub    eax,0xb980a86f
  42545b:	push   esp
  42545c:	pop    ecx
  42545d:	adc    DWORD PTR [esp+esi*8+0x9ff86a5],esp
  425464:	fs push eax
  425466:	es push esp
  425468:	retf   
  425469:	cmp    ebx,esp
  42546b:	popa   
  42546c:	cmp    esp,edx
  42546e:	pop    ds
  42546f:	cmp    ebp,DWORD PTR [ebp-0x5865a212]
  425475:	xchg   ebp,eax
  425476:	sbb    eax,DWORD PTR [esi]
  425478:	mov    esi,0x438888b1
  42547d:	pusha  
  42547e:	sub    ebx,esi
  425480:	psadbw mm7,QWORD PTR [ecx+0x27]
  425484:	stos   BYTE PTR es:[edi],al
  425485:	sub    BYTE PTR [eax],cl
  425487:	arpl   WORD PTR [edx+0x3bf073e2],bx
  42548d:	mov    fs,WORD PTR [ecx]
  42548f:	inc    ebx
  425490:	and    al,0x48
  425492:	mov    ch,BYTE PTR [edi]
  425494:	adc    BYTE PTR [ebx+0x54],0x61
  425498:	inc    ebx
  425499:	push   eax
  42549a:	in     al,0x2e
  42549c:	cmp    ah,dh
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	pop    ds
  4254a0:	out    dx,eax
  4254a1:	iret   
  4254a2:	in     al,0xe7
  4254a4:	xor    esi,edi
  4254a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254a7:	aaa    
  4254a8:	js     0x4254a0
  4254aa:	sub    al,0x74
  4254ac:	je     0x425441
  4254ae:	pop    ebp
  4254af:	dec    ecx
  4254b0:	and    dh,al
  4254b2:	dec    esp
  4254b3:	jbe    0x42550a
  4254b5:	stos   BYTE PTR es:[edi],al
  4254b6:	frstor [eax]
  4254b8:	jg     0x42547f
  4254ba:	inc    ebx
  4254bb:	loopne 0x4254a4
  4254bd:	shl    DWORD PTR [ecx-0x32],1
  4254c0:	inc    eax
  4254c1:	push   edi
  4254c2:	arpl   WORD PTR [ebx+ecx*1-0x64b313ac],bp
  4254c9:	pop    ebp
  4254ca:	sbb    bl,BYTE PTR [esp+edx*1+0x7]
  4254ce:	jmp    0x7b5834eb
  4254d3:	or     DWORD PTR [ebp+0x52],esi
  4254d6:	mov    esi,0x8adb519f
  4254db:	pmuludq mm4,QWORD PTR [edi]
  4254de:	sub    eax,0x2ceb5749
  4254e3:	sbb    al,BYTE PTR [esp+ecx*8-0x2b02b32c]
  4254ea:	mov    bh,0xb6
  4254ec:	and    BYTE PTR [eax],bh
  4254ee:	leave  
  4254ef:	ror    BYTE PTR [esi+0x79],1
  4254f2:	clc    
  4254f3:	adc    al,BYTE PTR [ebp+0xe]
  4254f6:	into   
  4254f7:	and    edx,DWORD PTR [ecx+0x28]
  4254fa:	inc    ebx
  4254fb:	mov    bh,0xa0
  4254fd:	mov    ds:0xe677af89,al
  425502:	neg    BYTE PTR [edx]
  425504:	cmp    edx,edx
  425506:	cld    
  425507:	fcomp  DWORD PTR [edi]
  425509:	add    cl,BYTE PTR [edx-0x52]
  42550c:	pop    esp
  42550d:	bound  esp,QWORD PTR ds:0x597d2a3f
  425513:	xchg   ebp,eax
  425514:	retf   0x64f9
  425517:	push   cs
  425518:	jecxz  0x4254df
  42551a:	retf   
  42551b:	arpl   dx,bp
  42551d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42551e:	cld    
  42551f:	call   0x6425:0xb219731c
  425526:	pusha  
  425527:	popf   
  425528:	fistp  WORD PTR [edi]
  42552a:	mov    ch,0x5
  42552c:	ss enter 0xbe9a,0x59
  425531:	arpl   WORD PTR ds:0x84b274f9,di
  425537:	mov    ch,0x71
  425539:	adc    ebx,DWORD PTR [eax-0x1dea6bb2]
  42553f:	(bad)  
  425540:	add    ah,ch
  425542:	mov    al,0x2a
  425544:	out    0xd,al
  425546:	mov    dl,0x2d
  425548:	lods   al,BYTE PTR ds:[esi]
  425549:	mov    ebx,0x9c39e228
  42554e:	call   0x48b888dc
  425553:	push   ss
  425554:	sub    ah,BYTE PTR [ecx-0x7c]
  425557:	int3   
  425558:	test   ebx,edx
  42555a:	mov    ebx,eax
  42555c:	sub    al,0x46
  42555e:	mov    cl,0xf4
  425560:	hlt    
  425561:	adc    edi,DWORD PTR [edx]
  425563:	clc    
  425564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425565:	inc    eax
  425566:	mov    bl,0xba
  425568:	cmp    dl,BYTE PTR [ebx-0xb]
  42556b:	push   ds
  42556c:	or     ecx,DWORD PTR [esi-0x77]
  42556f:	sub    DWORD PTR [eax+ecx*4+0x17b365a5],edx
  425576:	repnz repz mov WORD PTR [bp+si],ds
  42557b:	jmp    0x4e4c:0x1f997958
  425582:	pop    es
  425583:	push   ebx
  425584:	mov    bh,0x46
  425586:	call   0x6f06:0x97818671
  42558d:	loopne 0x4255d5
  42558f:	and    al,BYTE PTR [edx-0x6c]
  425592:	mov    ds:0x3381f574,eax
  425597:	xor    eax,0xce4c9ca7
  42559c:	(bad)  
  42559d:	bound  esi,QWORD PTR [esi-0x1f123b11]
  4255a3:	in     al,0x74
  4255a5:	jecxz  0x4255ce
  4255a7:	das    
  4255a8:	bound  esp,QWORD PTR [esi+0x6722ab58]
  4255ae:	jg     0x42556f
  4255b0:	ror    BYTE PTR [ecx],cl
  4255b2:	pop    eax
  4255b3:	mov    bh,0xc3
  4255b5:	sub    esi,DWORD PTR [edi-0x6565a600]
  4255bb:	mov    ds:0x61796608,eax
  4255c0:	pop    es
  4255c1:	outs   dx,DWORD PTR ds:[esi]
  4255c2:	hlt    
  4255c3:	push   0x5687086c
  4255c8:	sub    al,0xf
  4255ca:	jb     0x42560d
  4255cc:	dec    edi
  4255cd:	in     al,dx
  4255ce:	shr    DWORD PTR [ebx+eiz*2+0xf],0x61
  4255d3:	int3   
  4255d4:	and    al,0x23
  4255d6:	mov    BYTE PTR ss:[ebx],ch
  4255d9:	ret    0x8187
  4255dc:	push   esp
  4255dd:	mov    eax,0x621dcb27
  4255e2:	xchg   esp,eax
  4255e3:	or     BYTE PTR [eax],ch
  4255e5:	mov    ch,0x75
  4255e7:	sbb    BYTE PTR [edx],bl
  4255e9:	dec    edi
  4255ea:	daa    
  4255eb:	ficomp DWORD PTR [esi]
  4255ed:	cmp    eax,0x8d37a2e7
  4255f2:	pop    esp
  4255f3:	mov    ebx,0xce4879ed
  4255f8:	adc    DWORD PTR [esi-0x66255dcd],edx
  4255fe:	clc    
  4255ff:	or     BYTE PTR [edi-0x78],ah
  425602:	mov    ebp,0x72592f6b
  425607:	cmp    BYTE PTR [ecx+ebp*2-0x79],dl
  42560b:	mov    esi,0xa82b6871
  425610:	cmp    bh,dh
  425612:	shl    DWORD PTR [ecx-0x2c6bc6f4],cl
  425618:	repnz mov bl,0x9f
  42561b:	cmp    bl,bh
  42561d:	adc    DWORD PTR [ebx+0x25],edi
  425620:	add    ecx,edx
  425622:	pop    ds
  425623:	xchg   ecx,eax
  425624:	es xor al,0x6
  425627:	imul   esp,DWORD PTR [edx-0x17],0x63
  42562b:	lods   eax,DWORD PTR ds:[esi]
  42562c:	pop    esi
  42562d:	cmp    al,0xff
  42562f:	(bad)  
  425630:	push   0x29b33996
  425635:	cs out 0x2c,al
  425638:	pop    edx
  425639:	dec    edx
  42563a:	mov    ds:0x6da3daca,al
  42563f:	cmp    eax,0xa9ed2ee0
  425644:	add    al,0xc4
  425646:	mov    DWORD PTR [eax+ebx*1+0x7c],esi
  42564a:	cwde   
  42564b:	lock push esp
  42564d:	xchg   BYTE PTR [edx-0x55],al
  425650:	aam    0x48
  425652:	int3   
  425653:	lahf   
  425654:	and    al,0x54
  425656:	test   DWORD PTR [eax+0x3612a4bf],ebp
  42565c:	sbb    eax,0x90a581c5
  425661:	in     eax,dx
  425662:	loopne 0x425698
  425664:	outs   dx,DWORD PTR ds:[esi]
  425665:	lods   al,BYTE PTR ds:[esi]
  425666:	js     0x4256b1
  425668:	or     eax,edi
  42566a:	xlat   BYTE PTR ds:[ebx]
  42566b:	into   
  42566c:	icebp  
  42566d:	cmp    dl,ah
  42566f:	dec    ebp
  425670:	shl    DWORD PTR [ecx+0x4d],1
  425673:	mov    cs,ebx
  425675:	xchg   esp,eax
  425676:	sti    
  425677:	xor    DWORD PTR [esp+esi*1],ebx
  42567a:	push   ebx
  42567b:	mov    esp,0x899315f8
  425680:	inc    edx
  425681:	stos   BYTE PTR es:[edi],al
  425682:	add    al,0x96
  425684:	cdq    
  425685:	inc    ebp
  425686:	jle    0x42564c
  425688:	pop    ecx
  425689:	and    DWORD PTR [eax-0x37997e2d],edx
  42568f:	pop    ecx
  425690:	adc    eax,0xd14c2257
  425695:	in     al,dx
  425696:	mov    eax,ds:0x32710592
  42569b:	in     al,0xeb
  42569d:	(bad)  
  42569e:	aas    
  42569f:	sbb    al,0x9e
  4256a1:	inc    esp
  4256a2:	xchg   ecx,eax
  4256a3:	xor    ebx,edx
  4256a5:	and    eax,0x53f41522
  4256aa:	enter  0x432d,0x2e
  4256ae:	fstp   QWORD PTR [esi-0x41]
  4256b1:	xor    BYTE PTR [edx+0x1c],ah
  4256b4:	adc    bl,dl
  4256b6:	mov    WORD PTR ds:[edi+0x66755787],cs
  4256bd:	xor    cl,ch
  4256bf:	push   ebx
  4256c0:	lea    ebp,[eax-0x77]
  4256c3:	aaa    
  4256c4:	xchg   ecx,eax
  4256c5:	iret   
  4256c6:	popf   
  4256c7:	aaa    
  4256c8:	loop   0x42571d
  4256ca:	stos   DWORD PTR es:[edi],eax
  4256cb:	call   0xb234:0xffc72056
  4256d2:	fwait
  4256d3:	jle    0x4256e4
  4256d5:	pop    ebp
  4256d6:	or     BYTE PTR [esi+0xf],bh
  4256d9:	or     bl,BYTE PTR [edx+0x2b]
  4256dc:	mov    ecx,DWORD PTR [ecx-0x5d7db878]
  4256e2:	pop    ss
  4256e3:	xchg   edx,eax
  4256e4:	mov    ds:0x10c8974e,al
  4256e9:	cmp    BYTE PTR [edi+0x49c27acc],0xc6
  4256f0:	and    eax,0x15f7100b
  4256f5:	scas   eax,DWORD PTR es:[edi]
  4256f6:	xor    al,0x38
  4256f8:	pop    ecx
  4256f9:	xchg   DWORD PTR [edi-0x375a6e35],esp
  4256ff:	dec    esp
  425700:	xor    BYTE PTR [ebp-0x1d],dl
  425703:	int3   
  425704:	dec    edi
  425705:	jecxz  0x425733
  425707:	outs   dx,DWORD PTR ds:[esi]
  425708:	sbb    eax,edx
  42570a:	mov    WORD PTR [eax-0x45],gs
  42570d:	mov    esp,0x39b6f44d
  425712:	test   DWORD PTR [esi+0x3],ecx
  425715:	mov    bl,0xa5
  425717:	jecxz  0x425763
  425719:	retf   
  42571a:	xchg   BYTE PTR [ecx-0x48],al
  42571d:	jg     0x42570b
  42571f:	jmp    0x817d:0x23bb6514
  425726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425727:	out    0x61,eax
  425729:	mov    eax,DWORD PTR [esi+0x659be140]
  42572f:	xchg   ebx,eax
  425730:	push   edi
  425731:	out    0x6e,eax
  425733:	jmp    0xaee4:0xe494b63d
  42573a:	mov    ah,0xf0
  42573c:	inc    ebx
  42573d:	repnz sbb dh,BYTE PTR [ecx-0x26]
  425741:	neg    BYTE PTR ds:0xc6885db2
  425747:	mov    dh,0xd9
  425749:	test   ebx,eax
  42574b:	addr16 iret 
  42574d:	inc    ebx
  42574e:	lea    esi,[ebx]
  425750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425751:	fistp  WORD PTR [edi-0x578a4240]
  425757:	je     0x4257b4
  425759:	xchg   edx,eax
  42575a:	jno    0x425796
  42575c:	xchg   edx,eax
  42575d:	mov    dh,0x12
  42575f:	or     eax,0x59dc6667
  425764:	fsubr  QWORD PTR [ebx+0x62018781]
  42576a:	inc    edi
  42576b:	add    BYTE PTR ds:0x4c2e08ba,bh
  425771:	jnp    0x425772
  425773:	mov    ecx,0xf282f676
  425778:	or     BYTE PTR [esi+esi*2+0x4],dl
  42577c:	pop    ecx
  42577d:	rol    DWORD PTR [ecx-0x5c],0xe1
  425781:	push   esp
  425782:	sub    bh,cl
  425784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425785:	sub    eax,0x3d9b2d25
  42578a:	add    BYTE PTR [ecx+0x27],cl
  42578d:	nop
  42578e:	add    dl,bl
  425790:	pop    es
  425791:	cwde   
  425792:	into   
  425793:	js     0x42578d
  425795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425796:	scas   eax,DWORD PTR es:[edi]
  425797:	pop    eax
  425798:	jbe    0x42580c
  42579a:	jne    0x4257f4
  42579c:	test   DWORD PTR [eax-0x2cf45bf4],edx
  4257a2:	and    DWORD PTR ds:0xdd7310cb,eax
  4257a8:	and    al,0x5e
  4257aa:	xchg   ebp,eax
  4257ab:	aam    0x3c
  4257ad:	arpl   bp,di
  4257af:	mov    bl,0x99
  4257b1:	inc    eax
  4257b2:	xlat   BYTE PTR ds:[ebx]
  4257b3:	mov    bh,0x2
  4257b5:	aaa    
  4257b6:	es sbb esp,edi
  4257b9:	pop    ebp
  4257ba:	sbb    bl,BYTE PTR [eax-0x56]
  4257bd:	inc    ecx
  4257be:	jnp    0x4257a6
  4257c0:	and    ebp,ebp
  4257c2:	sub    BYTE PTR [ebp+0x12],dh
  4257c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257c6:	int3   
  4257c7:	je     0x42577a
  4257c9:	dec    eax
  4257ca:	pop    ds
  4257cb:	add    esp,DWORD PTR [ebx-0x18e622e5]
  4257d1:	test   eax,0x3bc8f64
  4257d6:	call   0x678bb1cc
  4257db:	jg     0x42579f
  4257dd:	jno    0x425794
  4257df:	shl    DWORD PTR [ebx-0x71],0x77
  4257e3:	fs mov edi,0xde8e5d3
  4257e9:	ss test al,0x13
  4257ec:	fdivr  st,st(6)
  4257ee:	stc    
  4257ef:	cmc    
  4257f0:	call   0x3823:0xc69273ac
  4257f7:	lds    esp,FWORD PTR [edx]
  4257f9:	in     al,0x22
  4257fb:	inc    eax
  4257fc:	sbb    ebx,esi
  4257fe:	dec    ebp
  4257ff:	mov    ebx,0xecc504f6
  425804:	pop    ebx
  425805:	call   0xc2cbdc0
  42580a:	pop    ebx
  42580b:	loop   0x4257ed
  42580d:	cmc    
  42580e:	push   esi
  42580f:	dec    esi
  425810:	ret    0xb5ca
  425813:	aad    0x83
  425815:	sub    dh,ah
  425817:	(bad)  
  425818:	sbb    eax,0xb1ca12c8
  42581d:	scas   eax,DWORD PTR es:[edi]
  42581e:	mov    dh,0xbc
  425820:	mov    es,WORD PTR [ecx+0x2f]
  425823:	fsubr  DWORD PTR [edi]
  425825:	in     eax,dx
  425826:	mov    ch,0xfb
  425828:	js     0x425855
  42582a:	out    0x6c,eax
  42582c:	(bad)  [ebx-0x4d]
  42582f:	pop    edx
  425830:	add    al,0xfb
  425832:	call   DWORD PTR [ecx-0xa]
  425835:	push   cs
  425836:	mov    al,ds:0xd0904253
  42583b:	mov    eax,ds:0x621bfedb
  425840:	pop    eax
  425841:	mov    al,al
  425843:	mov    ds:0x3eeeef6f,al
  425848:	pop    eax
  425849:	mov    eax,0x392b715e
  42584e:	push   ebx
  42584f:	add    BYTE PTR [ecx],cl
  425851:	call   DWORD PTR [eax-0x78]
  425854:	inc    ebp
  425855:	cwde   
  425856:	cmp    DWORD PTR [edx-0x78],0xd30707b7
  42585d:	add    BYTE PTR [eax],al
  42585f:	add    BYTE PTR [eax],al
  425861:	add    BYTE PTR ds:0xaf44af85,al
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx-0x6aa2c908]
  42586f:	rcl    BYTE PTR [eax+0x1d0e23d],1
  425875:	add    bl,dh
  425877:	add    al,0x0
  425879:	add    BYTE PTR [ebx],cl
  42587b:	repz jne 0x4258ef
  42587e:	adc    al,0x42
  425880:	fst    DWORD PTR [ebp-0x60099ff6]
  425886:	add    cl,bh
  425888:	adc    BYTE PTR [esi+edi*2],cl
  42588b:	fsubr  DWORD PTR [eax]
  42588d:	shl    eax,1
  42588f:	mov    edx,0x750c8c03
  425894:	pop    edx
  425895:	jne    0x4258e4
  425897:	xchg   esp,eax
  425898:	mov    al,ds:0xb7a8ecc1
  42589d:	jmp    0x944:0x6aad19a8
  4258a4:	cmp    DWORD PTR [ecx+0x42],esp
  4258a7:	pop    ebp
  4258a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258a9:	sbb    dl,ch
  4258ab:	arpl   ax,bp
  4258ad:	mov    ebx,0x89c372c4
  4258b2:	or     DWORD PTR [edx+0x6687c8d5],0x3b22bb8c
  4258bc:	xchg   edx,eax
  4258bd:	cwde   
  4258be:	or     dh,ch
  4258c0:	in     al,0x4b
  4258c2:	push   edi
  4258c3:	jb     0x425873
  4258c5:	pop    ss
  4258c6:	(bad)  
  4258c7:	out    0x2d,eax
  4258c9:	mov    esp,0x652272a5
  4258ce:	cmp    bl,BYTE PTR [ebp+0x22fd1d4]
  4258d4:	clc    
  4258d5:	lock and eax,0xdcdde77a
  4258db:	scas   al,BYTE PTR es:[edi]
  4258dc:	sbb    ecx,DWORD PTR [ecx-0xb676fca]
  4258e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258e3:	call   0x9150ec15
  4258e8:	int3   
  4258e9:	retf   0x74a1
  4258ec:	and    eax,0xc069fb78
  4258f1:	cmp    eax,0xc349cdeb
  4258f6:	mov    edx,0x59a6d09d
  4258fb:	sub    cl,cl
  4258fd:	push   0x242f2085
  425902:	dec    eax
  425903:	pop    edx
  425904:	(bad)  [ebp+0x1d]
  425907:	xor    DWORD PTR [esi-0x28],ecx
  42590a:	mov    al,ds:0xb0fcc16c
  42590f:	aas    
  425910:	fstp   TBYTE PTR [edx]
  425912:	popa   
  425913:	daa    
  425914:	popa   
  425915:	mov    ds:0x73ebff4f,al
  42591a:	iret   
  42591b:	sub    ebx,edx
  42591d:	inc    ebp
  42591e:	test   al,0xcc
  425920:	ds mov ah,0x8b
  425923:	xor    BYTE PTR [ebp+0x4],dl
  425926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425927:	das    
  425928:	icebp  
  425929:	jae    0x4259a6
  42592b:	mov    ebp,eax
  42592d:	dec    esi
  42592e:	mov    eax,ecx
  425930:	jno    0x425909
  425932:	sbb    ebp,DWORD PTR [ecx]
  425934:	or     al,0xc3
  425936:	mov    al,ds:0x4d412d49
  42593b:	pushf  
  42593c:	xchg   esp,eax
  42593d:	jbe    0x425986
  42593f:	test   BYTE PTR [ecx+0x18],al
  425942:	push   edi
  425943:	dec    ebp
  425944:	jmp    0x244d:0x57591ca0
  42594b:	inc    ebx
  42594c:	or     dl,0x93
  42594f:	out    dx,eax
  425950:	cld    
  425951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425952:	push   eax
  425953:	in     al,dx
  425954:	ret    
  425955:	inc    esp
  425956:	int3   
  425957:	fist   DWORD PTR [edx-0x66]
  42595a:	sbb    al,0x5b
  42595c:	add    dl,dl
  42595e:	jo     0x42593c
  425960:	push   esp
  425961:	mov    dh,0xd7
  425963:	lods   eax,DWORD PTR ds:[esi]
  425964:	jns    0x425924
  425966:	call   0x5b99:0x822c1dd2
  42596d:	mov    esp,ebx
  42596f:	pushf  
  425970:	push   ecx
  425971:	and    DWORD PTR [ecx-0x29],eax
  425974:	xchg   BYTE PTR [eax],bh
  425976:	sub    DWORD PTR [edi],esi
  425978:	add    cl,bl
  42597a:	icebp  
  42597b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42597c:	jl     0x425969
  42597e:	pop    ebp
  42597f:	add    al,0xe0
  425981:	lods   al,BYTE PTR ds:[esi]
  425982:	jb     0x4259c6
  425984:	mov    dl,0x92
  425986:	sub    bl,dh
  425988:	stc    
  425989:	push   ecx
  42598a:	test   BYTE PTR [edx],bh
  42598c:	pushf  
  42598d:	or     cl,ah
  42598f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425991:	lods   al,BYTE PTR ds:[esi]
  425992:	ud1    edx,eax
  425995:	pop    ebp
  425996:	out    0x75,al
  425998:	jge    0x4259af
  42599a:	xlat   BYTE PTR ds:[ebx]
  42599b:	mov    cl,0xd0
  42599d:	sbb    al,0x3
  42599f:	icebp  
  4259a0:	jnp    0x4259a4
  4259a2:	and    eax,DWORD PTR [ecx-0x6e]
  4259a5:	mov    ebp,ebx
  4259a7:	xor    eax,0x3caa8c9c
  4259ac:	in     eax,dx
  4259ad:	pop    ss
  4259ae:	mov    eax,0x799f72f6
  4259b3:	scas   eax,DWORD PTR es:[edi]
  4259b4:	inc    edi
  4259b5:	imul   ebx,DWORD PTR [edx+0x743f5e98],0xffffff91
  4259bc:	push   0xb88767ce
  4259c1:	in     al,dx
  4259c2:	popf   
  4259c3:	and    al,0xaf
  4259c5:	dec    esi
  4259c6:	and    eax,0x52bafd59
  4259cb:	(bad)  
  4259cc:	cli    
  4259cd:	sub    esi,DWORD PTR [ecx-0x38d37f6]
  4259d3:	jne    0x425975
  4259d5:	je     0x425a54
  4259d7:	xchg   DWORD PTR [edi+0x4a],ecx
  4259da:	sbb    DWORD PTR [ebp+0x6c],0x5ec4daf4
  4259e1:	int    0xdd
  4259e3:	call   0xf946:0xcf794333
  4259ea:	pop    ebp
  4259eb:	inc    esi
  4259ec:	in     eax,dx
  4259ed:	arpl   WORD PTR [ecx+edi*8],bx
  4259f0:	cwde   
  4259f1:	test   bh,cl
  4259f3:	(bad)  
  4259f4:	dec    ebp
  4259f5:	test   eax,0x94aa8363
  4259fa:	ins    BYTE PTR es:[edi],dx
  4259fb:	test   eax,0xa6646283
  425a00:	mov    esp,0x9e43c745
  425a05:	in     al,dx
  425a06:	imul   ebx,eax,0xfa174e2a
  425a0c:	mov    DWORD PTR [ebx],0x828ef7a6
  425a12:	sar    DWORD PTR ds:0x22ec842,cl
  425a18:	std    
  425a19:	push   cs
  425a1a:	mov    dl,0xa5
  425a1c:	loope  0x425a21
  425a1e:	in     al,0x99
  425a20:	jmp    0xa9c64cf8
  425a25:	jecxz  0x4259aa
  425a27:	or     eax,eax
  425a29:	mov    eax,0x77e60593
  425a2f:	and    esp,ebp
  425a31:	scas   al,BYTE PTR es:[edi]
  425a32:	sub    bl,BYTE PTR [edx-0x533b562e]
  425a38:	(bad)  
  425a39:	into   
  425a3a:	lock push ss
  425a3c:	cmp    ah,BYTE PTR ds:0x61f2c905
  425a42:	adc    DWORD PTR [ecx+0x24500ab7],esp
  425a48:	outs   dx,BYTE PTR ds:[esi]
  425a49:	test   al,0x2b
  425a4b:	outs   dx,DWORD PTR ds:[esi]
  425a4c:	pushf  
  425a4d:	jne    0x4259d9
  425a4f:	sub    BYTE PTR [edi+0x79],bh
  425a52:	sub    eax,0x9ab1fc98
  425a57:	and    ebx,edx
  425a59:	sti    
  425a5a:	inc    edi
  425a5b:	mov    ah,0xfa
  425a5d:	push   ebp
  425a5e:	push   0x61
  425a60:	xchg   edi,eax
  425a61:	in     al,0xb2
  425a63:	inc    eax
  425a64:	packssdw mm0,mm7
  425a67:	test   DWORD PTR [edi],0xfbe6ec13
  425a6d:	mov    esp,0xd80c8fa7
  425a72:	push   0xffffffdf
  425a74:	(bad)  
  425a75:	mov    ecx,0xd5732186
  425a7a:	add    BYTE PTR [eax],ah
  425a7c:	ret    
  425a7d:	retf   
  425a7e:	adc    al,BYTE PTR ds:0x6b544694
  425a84:	scas   eax,DWORD PTR es:[edi]
  425a85:	iret   
  425a86:	jp     0x425a16
  425a88:	aad    0xde
  425a8a:	jb     0x425a5c
  425a8c:	cwde   
  425a8d:	cmp    eax,0xfcbf7305
  425a92:	mov    ss,WORD PTR [eax]
  425a94:	inc    esi
  425a95:	push   edi
  425a96:	(bad)  
  425a97:	iret   
  425a98:	or     al,0xfc
  425a9a:	dec    ecx
  425a9b:	cmp    al,0xd5
  425a9d:	fwait
  425a9e:	inc    esp
  425a9f:	xchg   edx,eax
  425aa0:	clc    
  425aa1:	xor    ah,BYTE PTR [edx-0x7541d65c]
  425aa7:	ja     0x425a9c
  425aa9:	inc    ebx
  425aaa:	inc    edx
  425aab:	mov    edx,DWORD PTR [esi+0x4933fa9f]
  425ab1:	out    dx,al
  425ab2:	int    0x2d
  425ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ab5:	mov    dl,0x34
  425ab7:	fild   DWORD PTR [eax+0x58]
  425aba:	test   al,0xa0
  425abc:	arpl   bx,si
  425abe:	add    ah,BYTE PTR [esi]
  425ac0:	jg     0x425a59
  425ac2:	dec    edx
  425ac3:	adc    ebp,DWORD PTR es:[eax+0x25]
  425ac7:	mov    ah,0x74
  425ac9:	into   
  425aca:	add    dl,BYTE PTR [esi+0x7da58a6e]
  425ad0:	jp     0x425a88
  425ad2:	adc    bh,BYTE PTR [edx-0x4d]
  425ad5:	into   
  425ad6:	jecxz  0x425a83
  425ad8:	mov    al,0xa7
  425ada:	dec    esp
  425adb:	xchg   edi,eax
  425adc:	(bad)  
  425add:	cmp    al,0xa3
  425adf:	mov    esi,0xd7ac8cb7
  425ae4:	or     DWORD PTR [edx-0x2a372e8b],edi
  425aea:	lock sub cl,BYTE PTR [ecx]
  425aed:	inc    ebx
  425aee:	push   edx
  425aef:	fidiv  WORD PTR [edi]
  425af1:	and    ebx,DWORD PTR [ecx]
  425af3:	sbb    al,0x16
  425af5:	push   ebx
  425af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425af7:	cmp    al,0xd3
  425af9:	ins    DWORD PTR es:[edi],dx
  425afa:	mov    dh,0x85
  425afc:	adc    al,0x51
  425afe:	dec    esi
  425aff:	(bad)  
  425b00:	cmp    DWORD PTR es:[ecx-0x3b],eax
  425b04:	and    esi,ebp
  425b06:	mov    ebx,cs
  425b08:	mov    al,ds:0x475a3559
  425b0d:	mov    DWORD PTR [edx+0x32],0x3ade9c13
  425b14:	xor    dl,BYTE PTR [ebx+0x5714c266]
  425b1a:	inc    eax
  425b1b:	sbb    eax,0xabb6defc
  425b20:	sahf   
  425b21:	out    dx,eax
  425b22:	push   es
  425b23:	pop    esp
  425b24:	and    ebx,ebx
  425b26:	pop    eax
  425b27:	shr    ecx,0x99
  425b2a:	xchg   edx,eax
  425b2b:	pop    ebp
  425b2c:	sbb    al,0xe
  425b2e:	jne    0x425b7a
  425b30:	int    0x88
  425b32:	and    DWORD PTR [ecx],0xe96f4c15
  425b38:	jo     0x425b9e
  425b3a:	jns    0x425ad4
  425b3c:	mov    WORD PTR [esp+esi*1+0x67],ss
  425b40:	enter  0xfed4,0xf4
  425b44:	js     0x425b1a
  425b46:	pop    esi
  425b47:	ficomp WORD PTR [eax-0x4d96af98]
  425b4d:	mov    WORD PTR [ebp+0x49640a70],gs
  425b53:	test   al,0x4d
  425b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b56:	out    dx,al
  425b57:	dec    eax
  425b58:	aaa    
  425b59:	fxch   st(5)
  425b5b:	imul   eax,edx,0x513b319a
  425b61:	call   0x1a38:0xace7e5b7
  425b68:	ret    
  425b69:	and    al,0xb5
  425b6b:	push   edx
  425b6c:	(bad)  
  425b6d:	ins    BYTE PTR es:[edi],dx
  425b6e:	push   cs
  425b6f:	push   esp
  425b70:	inc    edi
  425b71:	cmp    eax,0xb136649b
  425b76:	ja     0x425b5c
  425b78:	push   ss
  425b79:	cmp    al,0x5f
  425b7b:	sub    esp,DWORD PTR [edx+0x35]
  425b7e:	shl    DWORD PTR [edi+ebp*2+0x7],cl
  425b82:	jp     0x425bd2
  425b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b85:	sbb    DWORD PTR [ebx+0x8],edi
  425b88:	adc    esp,DWORD PTR [eax+0x4e3dbf95]
  425b8e:	clc    
  425b8f:	lods   al,BYTE PTR ds:[esi]
  425b90:	and    esp,0x5df1a7ab
  425b96:	mov    cl,0xd0
  425b98:	mov    bh,0x38
  425b9a:	outs   dx,BYTE PTR ds:[esi]
  425b9b:	xor    BYTE PTR [ebx-0x2f],dh
  425b9e:	push   es
  425b9f:	or     DWORD PTR [eax+0x16],ebp
  425ba2:	push   edx
  425ba3:	cmp    BYTE PTR [ebx+0x3dae3841],bl
  425ba9:	(bad)  
  425bab:	adc    al,0xe2
  425bad:	fimul  DWORD PTR [esi-0x4]
  425bb0:	shr    DWORD PTR [ebx+0x8],1
  425bb3:	mov    al,ds:0xf8529594
  425bb8:	daa    
  425bb9:	adc    bl,dl
  425bbb:	add    eax,0xbf92b3de
  425bc0:	or     DWORD PTR [esi+eiz*8],ebx
  425bc3:	xchg   edi,eax
  425bc4:	sub    ebx,ebx
  425bc6:	mov    al,0x83
  425bc8:	cwde   
  425bc9:	sbb    bl,0x2e
  425bcc:	ja     0x425c19
  425bce:	jge    0x425c42
  425bd0:	jmp    0x16beb49e
  425bd5:	push   ebx
  425bd6:	xchg   ebp,eax
  425bd7:	enter  0x1a19,0x8e
  425bdb:	sti    
  425bdc:	or     BYTE PTR [ecx+0x43bc96ba],al
  425be2:	out    0xaf,al
  425be4:	aaa    
  425be5:	imul   esp,DWORD PTR [ebx],0x26
  425be8:	lock mov al,0xfb
  425beb:	and    al,0x25
  425bed:	cli    
  425bee:	dec    DWORD PTR [eax-0x78]
  425bf1:	ret    0xe597
  425bf4:	pop    ecx
  425bf5:	mov    edx,0x3d643b12
  425bfa:	rcl    BYTE PTR [ebp-0x4db71b4f],cl
  425c00:	inc    ebp
  425c01:	dec    ebp
  425c02:	inc    cx
  425c04:	jmp    0x425bbe
  425c06:	out    0xee,eax
  425c08:	pop    es
  425c09:	rol    DWORD PTR [esi],1
  425c0b:	outs   dx,DWORD PTR ds:[esi]
  425c0c:	inc    ebp
  425c0d:	jnp    0x425c43
  425c0f:	xor    edi,DWORD PTR [esi+0x2ac9e0]
  425c15:	ffree  st(3)
  425c17:	fdivr  QWORD PTR [ebx+0x33]
  425c1a:	pop    esi
  425c1b:	(bad)  
  425c1c:	cmc    
  425c1d:	cmp    eax,0xfde58b6e
  425c22:	mov    edi,DWORD PTR [edi]
  425c24:	js     0x425be8
  425c26:	jae    0x425bff
  425c28:	fucom  st(7)
  425c2a:	mov    BYTE PTR [edi],ch
  425c2c:	test   BYTE PTR [ebp+0x2e],ch
  425c2f:	cmp    BYTE PTR [edx-0x13],bh
  425c32:	leave  
  425c33:	jmp    0x425bf5
  425c35:	push   0x20
  425c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c38:	and    al,0x47
  425c3a:	imul   esi,DWORD PTR [ebx+0x53b4ee3d],0x8a9c9387
  425c44:	pop    edx
  425c45:	xor    DWORD PTR [edi-0x68],edi
  425c48:	mov    esp,0xa8a3f0ff
  425c4d:	push   es
  425c4e:	lods   eax,DWORD PTR ds:[esi]
  425c4f:	mov    ebx,DWORD PTR [ebx-0x79]
  425c52:	clc    
  425c53:	test   BYTE PTR [edi],0xf7
  425c56:	leave  
  425c57:	xchg   esi,eax
  425c58:	cmp    eax,0xcfa835e2
  425c5d:	ja     0x425c0a
  425c5f:	and    eax,ebx
  425c61:	xor    BYTE PTR [edi+0x59],ch
  425c64:	sub    DWORD PTR [eax-0x4324c2f0],0x70
  425c6b:	nop
  425c6c:	adc    dh,BYTE PTR [edi+ebx*4-0x64]
  425c70:	bound  ebx,QWORD PTR [ecx+0x56]
  425c73:	retf   
  425c74:	inc    ebp
  425c75:	pop    eax
  425c76:	jg     0x425bff
  425c78:	cdq    
  425c79:	dec    ebp
  425c7a:	jle    0x425c08
  425c7c:	xchg   ebx,eax
  425c7d:	imul   esp,ebp,0xff1b0668
  425c83:	(bad)  
  425c84:	mov    esp,0x46a87f33
  425c89:	inc    ebp
  425c8a:	sbb    al,0xde
  425c8c:	repz push ss
  425c8e:	js     0x425ce5
  425c90:	pushf  
  425c91:	popa   
  425c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c93:	js     0x425c35
  425c95:	sbb    eax,0x14863219
  425c9a:	push   0x33ce8e86
  425c9f:	js     0x425cf7
  425ca1:	or     eax,0x1437a60d
  425ca6:	mov    gs,WORD PTR [esi+0xb]
  425ca9:	push   eax
  425caa:	shr    DWORD PTR [ecx*8+0x1e1b661a],1
  425cb1:	pop    ebx
  425cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cb3:	mov    bh,BYTE PTR [esi-0x269631a0]
  425cb9:	or     ebp,DWORD PTR [edx]
  425cbb:	sub    esp,esp
  425cbd:	jg     0x425d2a
  425cbf:	mov    al,ds:0x4865104c
  425cc4:	inc    eax
  425cc5:	push   esi
  425cc6:	js     0x425cde
  425cc8:	mov    esi,0x7ff2d79f
  425ccd:	repz das 
  425ccf:	scas   eax,DWORD PTR es:[edi]
  425cd0:	in     eax,0x34
  425cd2:	push   eax
  425cd3:	sbb    edi,DWORD PTR [esi-0xb]
  425cd6:	mov    dh,0xa6
  425cd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cd9:	cmp    esp,ebx
  425cdb:	mov    edi,DWORD PTR [edx]
  425cdd:	and    ebp,DWORD PTR [ebp+0x2a069fdf]
  425ce3:	sub    al,0x11
  425ce5:	cmp    eax,0x689301c4
  425cea:	and    al,0x28
  425cec:	sub    dh,bl
  425cee:	mov    ch,BYTE PTR [ebp+0x3a]
  425cf1:	xor    al,0x6c
  425cf3:	jo     0x425d70
  425cf5:	pop    ebp
  425cf6:	add    dh,BYTE PTR [ebx-0x1b]
  425cf9:	mov    ebx,0xc5b9186a
  425cfe:	pushf  
  425cff:	test   al,0x72
  425d01:	sbb    eax,0x364b5a17
  425d06:	das    
  425d07:	mov    bl,0xe5
  425d09:	xor    DWORD PTR [ebx+0x9a19492],esp
  425d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d10:	sti    
  425d11:	dec    ecx
  425d12:	popa   
  425d13:	mov    edx,0xb69c14d8
  425d18:	and    ecx,ebp
  425d1a:	(bad)  
  425d1d:	lock adc esi,DWORD PTR [edx-0x2e6c81a]
  425d24:	push   ebx
  425d25:	mov    eax,ds:0xe2feff4c
  425d2a:	mov    esi,DWORD PTR [ecx]
  425d2c:	gs stos BYTE PTR es:[edi],al
  425d2e:	mov    al,ds:0x1d702149
  425d33:	stos   BYTE PTR es:[edi],al
  425d34:	sbb    DWORD PTR [edx+0x62],ebp
  425d37:	stc    
  425d38:	lock jae 0x425cd2
  425d3b:	pop    edx
  425d3c:	jp     0x425db1
  425d3e:	pop    eax
  425d3f:	dec    edx
  425d40:	retf   0x5251
  425d43:	cmp    eax,0xf4030673
  425d48:	and    ah,BYTE PTR [eax]
  425d4a:	adc    ecx,ecx
  425d4c:	jnp    0x425da4
  425d4e:	fstp   QWORD PTR [esi+0x4909d67c]
  425d54:	sbb    DWORD PTR [ebx],0xc4c84041
  425d5a:	push   edx
  425d5b:	test   dh,0xb4
  425d5e:	jle    0x425d63
  425d60:	outs   dx,DWORD PTR ds:[esi]
  425d61:	jns    0x425d97
  425d63:	inc    esp
  425d64:	mov    ebp,0x31c694f5
  425d69:	inc    esi
  425d6a:	inc    edi
  425d6b:	xor    bl,BYTE PTR [esi+0x0]
  425d6e:	add    BYTE PTR [eax],al
  425d70:	add    BYTE PTR [eax],al
  425d72:	out    dx,al
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [ebx+ebp*8-0x7a]
  425d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d81:	mov    esp,0x1d5d5
  425d86:	repz add al,0x0
  425d89:	add    BYTE PTR [ebx-0xc],al
  425d8c:	in     al,dx
  425d8d:	out    0xe4,al
  425d8f:	pop    edi
  425d90:	repz pop ecx
  425d92:	outs   dx,DWORD PTR ds:[esi]
  425d93:	(bad)  
  425d94:	bound  edi,QWORD PTR [edi]
  425d96:	rcr    edi,1
  425d98:	push   edx
  425d99:	push   ebx
  425d9a:	aad    0x8d
  425d9c:	scas   eax,DWORD PTR es:[edi]
  425d9d:	inc    ebp
  425d9e:	jmp    0x8634:0xabd2b931
  425da5:	js     0x425d2e
  425da7:	dec    eax
  425da8:	push   ss
  425da9:	mov    bh,0xc
  425dab:	sbb    al,0xe7
  425dad:	int    0x21
  425daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425db0:	sbb    ah,bh
  425db2:	out    0xcc,al
  425db4:	jg     0x425d97
  425db6:	mov    eax,0xa4d40d23
  425dbb:	out    dx,eax
  425dbc:	mov    eax,ds:0xfb9960b6
  425dc1:	jmp    0xa58b:0x19f8f96
  425dc8:	clc    
  425dc9:	(bad)  
  425dca:	mov    ds:0x20eacd3a,eax
  425dcf:	fld    DWORD PTR ds:0xc9c88f00
  425dd5:	ins    DWORD PTR es:[edi],dx
  425dd6:	rcr    cl,cl
  425dd8:	mov    edx,0x82f437ca
  425ddd:	dec    edx
  425dde:	pop    eax
  425ddf:	sbb    BYTE PTR [ebx+edi*1],ch
  425de2:	sub    bh,BYTE PTR [ecx+edx*1-0x51]
  425de6:	scas   al,BYTE PTR es:[edi]
  425de7:	sub    eax,0x40be0ed3
  425dec:	nop
  425ded:	retf   
  425dee:	adc    al,bl
  425df0:	mov    ecx,DWORD PTR [esi]
  425df2:	test   eax,0xb3f65bfe
  425df7:	xlat   BYTE PTR ds:[ebx]
  425df8:	out    dx,al
  425df9:	lahf   
  425dfa:	fs ss icebp 
  425dfd:	sbb    BYTE PTR [ecx+edi*8+0x31153a83],0xcc
  425e05:	sbb    BYTE PTR [ecx+0x14e0f13f],dh
  425e0b:	lahf   
  425e0c:	ins    DWORD PTR es:[edi],dx
  425e0d:	test   al,0x49
  425e0f:	pop    esi
  425e10:	adc    esp,esp
  425e12:	cli    
  425e13:	or     DWORD PTR [esi-0x66e7fb72],ebx
  425e19:	jnp    0x425e4e
  425e1b:	mov    edi,0x295be234
  425e20:	test   ah,ah
  425e22:	pop    esi
  425e23:	sti    
  425e24:	mov    al,ds:0x1fc86ecd
  425e29:	mov    bh,0x18
  425e2b:	loope  0x425e11
  425e2d:	lahf   
  425e2e:	rol    BYTE PTR [eax+0x2a],1
  425e31:	les    esi,FWORD PTR [edx]
  425e33:	jne    0x425dc7
  425e35:	adc    bl,BYTE PTR [esi-0x302c7779]
  425e3b:	xor    al,0xf5
  425e3d:	ss nop
  425e3f:	push   cs
  425e40:	sbb    ebx,eax
  425e42:	fistp  WORD PTR [ebp-0x4d]
  425e45:	fst    DWORD PTR [esi+0x13be0ce7]
  425e4b:	into   
  425e4c:	mov    cl,0x15
  425e4e:	ja     0x425e13
  425e50:	adc    al,0x4e
  425e52:	mov    dh,0x9a
  425e54:	xchg   ecx,eax
  425e55:	push   ds
  425e56:	push   DWORD PTR [eax-0x354a5a4c]
  425e5c:	stos   BYTE PTR es:[edi],al
  425e5d:	pop    edi
  425e5e:	push   ebp
  425e5f:	inc    ebx
  425e60:	xchg   DWORD PTR [ebp+0x5f],esp
  425e63:	pop    esi
  425e64:	scas   al,BYTE PTR es:[edi]
  425e65:	dec    edx
  425e66:	add    ebp,DWORD PTR [ebp-0x5f882b3a]
  425e6c:	ret    0x95a5
  425e6f:	dec    edx
  425e70:	sbb    al,0x8b
  425e72:	inc    ecx
  425e73:	dec    BYTE PTR [ebx-0x1028e8a2]
  425e79:	push   esi
  425e7a:	shl    DWORD PTR [eax+0x41c65938],0x45
  425e81:	inc    edi
  425e82:	and    al,0x8f
  425e84:	dec    edi
  425e85:	jnp    0x425e47
  425e87:	outs   dx,DWORD PTR ds:[esi]
  425e88:	ins    BYTE PTR es:[edi],dx
  425e89:	cmp    BYTE PTR [esi],bh
  425e8b:	jmp    DWORD PTR [edi-0x23]
  425e8e:	and    BYTE PTR [ebx+0x6b8a2016],cl
  425e94:	mov    BYTE PTR [ebx],bh
  425e96:	fisubr DWORD PTR [ecx+0x5b]
  425e99:	xchg   BYTE PTR [edx],ch
  425e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e9c:	cmp    DWORD PTR [ecx+0x7185afff],ebp
  425ea2:	je     0x425efa
  425ea4:	xchg   ecx,eax
  425ea5:	pop    esi
  425ea6:	jae    0x425e8f
  425ea8:	cmp    bh,BYTE PTR [edx+0x3db2c7aa]
  425eae:	fst    QWORD PTR [eax]
  425eb0:	scas   eax,DWORD PTR es:[edi]
  425eb1:	fsubr  DWORD PTR [edi]
  425eb3:	cmp    DWORD PTR [ebp+0x48],ecx
  425eb6:	retf   
  425eb7:	rcl    BYTE PTR [eax],0x1
  425eba:	jbe    0x425e87
  425ebc:	jne    0x425e81
  425ebe:	test   BYTE PTR fs:[ebx],al
  425ec1:	add    edi,0x60
  425ec4:	stc    
  425ec5:	or     ecx,DWORD PTR [ebx+0x73]
  425ec8:	rol    BYTE PTR [esi+eiz*4-0x650d6400],1
  425ecf:	(bad)  
  425ed1:	cdq    
  425ed2:	popa   
  425ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ed4:	rcl    DWORD PTR [esi+0x1c],cl
  425ed7:	aam    0x32
  425ed9:	ins    BYTE PTR es:[edi],dx
  425eda:	push   0x67
  425edc:	mov    WORD PTR [edi],?
  425ede:	jb     0x425eaa
  425ee0:	out    0x53,eax
  425ee2:	sub    bl,BYTE PTR [eax+0x69]
  425ee5:	daa    
  425ee6:	xor    DWORD PTR [ebx+0x74ede4ef],0xca280c55
  425ef0:	adc    BYTE PTR [ebx+0x4e730d52],ah
  425ef6:	add    al,0x3c
  425ef8:	neg    BYTE PTR [ecx+0x2be3e4d1]
  425efe:	push   ebp
  425eff:	rcr    BYTE PTR [ebx],cl
  425f01:	mov    ds:0x49077503,eax
  425f06:	lock les eax,FWORD PTR [edi-0x36da00d3]
  425f0d:	stos   DWORD PTR es:[edi],eax
  425f0e:	popf   
  425f0f:	mov    esp,0xb7a0b38b
  425f14:	das    
  425f15:	das    
  425f16:	sub    al,0x94
  425f18:	out    0x37,eax
  425f1a:	inc    edx
  425f1b:	xchg   ebx,eax
  425f1c:	imul   esi,DWORD PTR [esi],0xffffff8c
  425f1f:	popf   
  425f20:	jo     0x425f87
  425f22:	adc    DWORD PTR [ecx+ebp*4],ebx
  425f25:	dec    ebx
  425f26:	adc    eax,0xd4fd9632
  425f2b:	(bad)  
  425f2d:	mov    ch,0x52
  425f2f:	adc    al,0xf8
  425f31:	in     eax,dx
  425f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f33:	or     esp,ebp
  425f35:	and    esp,DWORD PTR [ecx+0x73]
  425f38:	ret    
  425f39:	lods   eax,DWORD PTR ds:[esi]
  425f3a:	test   DWORD PTR [ecx+0x2e103aa8],esp
  425f40:	push   edi
  425f41:	pop    esi
  425f42:	in     eax,dx
  425f43:	icebp  
  425f44:	xor    eax,0x33b37e53
  425f49:	and    ah,BYTE PTR [ebx+0x4c]
  425f4c:	push   0xffffff89
  425f4e:	mov    dl,0x16
  425f50:	mov    ebx,0xbc0097f4
  425f55:	or     bh,BYTE PTR ds:0x8156a81e
  425f5b:	inc    ebp
  425f5c:	dec    esp
  425f5d:	inc    edi
  425f5e:	add    eax,0x5a9f071a
  425f63:	mov    ds:0x5ab46117,eax
  425f68:	daa    
  425f69:	xchg   ebp,eax
  425f6a:	loope  0x425f00
  425f6c:	push   edx
  425f6d:	fs jecxz 0x425f71
  425f70:	mov    bh,0x44
  425f72:	sbb    ebp,DWORD PTR [edx-0x59622722]
  425f78:	lea    esp,[edi+0x69a789ab]
  425f7e:	clc    
  425f7f:	pushf  
  425f80:	mov    al,0xb1
  425f83:	loopne 0x425f99
  425f85:	and    BYTE PTR [edx-0x7a33771f],ch
  425f8b:	jno    0x425f22
  425f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f8e:	sub    dh,BYTE PTR [ebx+0xf]
  425f91:	sbb    BYTE PTR [eax+0x1f],cl
  425f94:	shr    BYTE PTR [edi],0xcb
  425f97:	jg     0x425fb6
  425f99:	aam    0xe8
  425f9b:	mov    ds:0x174ca316,al
  425fa0:	inc    BYTE PTR [ebp+0x2494da2b]
  425fa6:	push   edx
  425fa7:	jae    0x425fc5
  425fa9:	aad    0x3c
  425fab:	fwait
  425fac:	and    eax,0x74439aa3
  425fb1:	adc    eax,DWORD PTR [edi-0x11]
  425fb4:	(bad)  
  425fb5:	fstp   QWORD PTR [edi-0x3e]
  425fb8:	and    edx,DWORD PTR [esi+ebx*2+0x5c]
  425fbc:	(bad)  
  425fbd:	out    0x3a,eax
  425fbf:	(bad)  
  425fc0:	inc    ebx
  425fc1:	js     0x42600e
  425fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fc4:	cmp    al,0x11
  425fc6:	or     al,0x24
  425fc8:	pop    esp
  425fc9:	bound  esi,QWORD PTR [ecx+edx*8-0x7c2a416f]
  425fd0:	push   cs
  425fd1:	or     DWORD PTR [edi],0xfbab163d
  425fd7:	int3   
  425fd8:	pop    eax
  425fd9:	jo     0x425fb4
  425fdb:	xor    BYTE PTR [ebp+0x3116966a],cl
  425fe1:	mov    ebx,DWORD PTR [ebp+0x52]
  425fe4:	in     eax,dx
  425fe5:	test   eax,0x5240f494
  425fea:	pop    ds
  425feb:	test   eax,0x5a64119b
  425ff0:	dec    edx
  425ff1:	or     eax,0x5a18141f
  425ff6:	xchg   esi,eax
  425ff7:	imul   ah
  425ff9:	out    0xb,eax
  425ffb:	lock pop eax
  425ffd:	adc    BYTE PTR [ebx+0x64],ch
  426000:	stc    
  426001:	jmp    0xda1bb9ea
  426006:	push   edx
  426007:	in     eax,dx
  426008:	cli    
  426009:	mov    DWORD PTR [ecx-0x3d8fd184],ebx
  42600f:	add    eax,0x53060843
  426014:	lds    esp,FWORD PTR [eax]
  426016:	mov    WORD PTR ss:[ebx+0x32],ss
  42601a:	shr    BYTE PTR [ecx-0x2ccd915d],1
  426020:	imul   esi,DWORD PTR [esi-0x41],0xf
  426024:	push   eax
  426025:	addr16 cdq 
  426027:	mov    dh,0xc3
  426029:	jl     0x42605d
  42602b:	and    ecx,DWORD PTR ds:0xd4d6c2f1
  426031:	sub    ah,dh
  426033:	outs   dx,DWORD PTR ds:[esi]
  426034:	dec    esi
  426035:	test   BYTE PTR [ebp-0xa9502f8],bh
  42603b:	pop    ebx
  42603c:	jle    0x4260ae
  42603e:	xchg   ecx,eax
  42603f:	and    al,0x5f
  426041:	push   edi
  426042:	hlt    
  426043:	or     dl,BYTE PTR [ebx+0x47]
  426046:	les    di,DWORD PTR [ebx-0x6f]
  42604a:	dec    esp
  42604b:	test   DWORD PTR [esi],eax
  42604d:	repz dec ebp
  42604f:	jo     0x42601e
  426051:	repz xchg esi,eax
  426053:	and    BYTE PTR [eax-0xf],bl
  426056:	mov    BYTE PTR [ebx+esi*1],bh
  426059:	cwde   
  42605a:	sbb    al,0x39
  42605c:	cwde   
  42605d:	jp     0x426028
  42605f:	(bad)  
  426060:	ins    BYTE PTR es:[edi],dx
  426061:	lds    ebx,FWORD PTR [edi-0xb]
  426064:	enter  0x4f69,0x8b
  426068:	add    esp,esi
  42606a:	test   BYTE PTR [ebx+0x24a5b25a],cl
  426070:	mov    ?,WORD PTR ss:[edi-0x3d21ac5a]
  426077:	fdiv   QWORD PTR [ecx+edi*4]
  42607a:	sub    BYTE PTR [ebx+eax*1+0x6172b1c5],ch
  426081:	dec    ebp
  426082:	mov    al,ds:0xa2794e32
  426087:	jecxz  0x4260e5
  426089:	shl    BYTE PTR fs:[ecx+eiz*1-0x3b],0xf8
  42608f:	imul   esi,DWORD PTR [ebp-0x23],0x8488bce2
  426096:	cmp    dl,BYTE PTR [ebp+0x7b]
  426099:	cwde   
  42609a:	stc    
  42609b:	adc    BYTE PTR [ebp+0x5e54740f],0x2c
  4260a2:	iret   
  4260a3:	dec    eax
  4260a4:	push   0xffffffe9
  4260a6:	sbb    DWORD PTR [ecx],ecx
  4260a8:	call   0x24231f2b
  4260ad:	sbb    DWORD PTR [eax],eax
  4260af:	or     al,0xee
  4260b1:	out    0xdb,eax
  4260b3:	add    DWORD PTR [edx-0x3146610e],ecx
  4260b9:	retf   
  4260ba:	dec    esp
  4260bb:	mov    dl,0x29
  4260bd:	push   esp
  4260be:	push   ebp
  4260bf:	loop   0x4260e7
  4260c1:	or     eax,0x1541fddd
  4260c6:	adc    esp,DWORD PTR [ebp-0x2d65a70f]
  4260cc:	call   0x98a45bc0
  4260d1:	fisttp DWORD PTR [esi-0x5d]
  4260d4:	cmp    edx,edx
  4260d6:	and    cl,BYTE PTR [edi+eax*4+0x3d]
  4260da:	js     0x4260f3
  4260dc:	jbe    0x4260bb
  4260de:	out    dx,al
  4260df:	cmp    DWORD PTR [ebp-0x6c],0xd4fd2117
  4260e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260e7:	xchg   BYTE PTR [edi-0x2ed500b3],bl
  4260ed:	and    cl,BYTE PTR [edx-0x62]
  4260f0:	mov    dh,0x23
  4260f2:	iret   
  4260f3:	arpl   WORD PTR [edi+0x7267323b],dx
  4260f9:	xchg   ebx,eax
  4260fa:	xor    eax,0x65c334fc
  4260ff:	push   cs
  426100:	mov    eax,ds:0xea6d8d1c
  426105:	ss je  0x42614d
  426108:	loope  0x4260b5
  42610a:	dec    edx
  42610b:	and    esi,esi
  42610d:	shl    ebp,1
  42610f:	stos   BYTE PTR es:[edi],al
  426110:	adc    DWORD PTR [ecx],edx
  426112:	in     al,0x3e
  426114:	and    BYTE PTR [ebx+0x24],ah
  426117:	scas   eax,DWORD PTR es:[edi]
  426118:	bound  ebp,QWORD PTR [ebx]
  42611a:	mov    bh,0x26
  42611c:	mov    eax,ds:0x944bccca
  426121:	and    eax,esp
  426123:	cmc    
  426124:	bound  ebx,QWORD PTR [edi+0x3b449d0d]
  42612a:	icebp  
  42612b:	loopne 0x42619a
  42612d:	stc    
  42612e:	xchg   DWORD PTR [esi-0x7c],edx
  426131:	scas   eax,DWORD PTR es:[edi]
  426132:	test   al,0x68
  426134:	mov    esi,DWORD PTR [eax]
  426136:	out    0xc8,eax
  426138:	sub    al,0x4a
  42613a:	loop   0x426199
  42613c:	out    0x31,al
  42613e:	mov    ds,ebp
  426140:	mov    bl,0xd3
  426142:	cmp    eax,0x9c52b801
  426147:	xchg   ebx,eax
  426148:	aam    0xb1
  42614a:	mov    ds:0xfeea44d4,eax
  42614f:	outs   dx,BYTE PTR ds:[esi]
  426150:	add    cl,0x41
  426153:	inc    edx
  426154:	jae    0x4261b6
  426156:	add    BYTE PTR [esi-0x42],dh
  426159:	sub    ch,ah
  42615b:	dec    ebp
  42615c:	sub    dl,BYTE PTR [edi]
  42615e:	(bad)  
  42615f:	cmp    DWORD PTR [edx-0x3c],edx
  426162:	add    BYTE PTR [edi+ebp*8+0x4],dl
  426166:	jle    0x42616e
  426168:	push   0x3ad56a71
  42616d:	dec    edx
  42616e:	jp     0x4261cc
  426170:	mov    gs,WORD PTR [edx]
  426172:	test   DWORD PTR [esp+edi*4-0x188c4623],ecx
  426179:	(bad)
  42617c:	out    0xc9,eax
  42617e:	jmp    DWORD PTR [eax]
  426180:	mov    bl,0x7f
  426182:	icebp  
  426183:	push   eax
  426184:	xchg   edi,eax
  426185:	add    al,ah
  426187:	sbb    al,0x5
  426189:	(bad)  
  42618a:	and    BYTE PTR [edx-0x43],dh
  42618d:	clc    
  42618e:	test   edi,edi
  426190:	imul   DWORD PTR [ebx+0x75f36dbb]
  426196:	mov    ds:0x44db072b,eax
  42619b:	sub    DWORD PTR [esi-0x5a51f9aa],ebp
  4261a1:	out    0x56,eax
  4261a3:	(bad)  
  4261a5:	jp     0x4261a6
  4261a7:	mov    esi,0xc99c52f
  4261ac:	rcl    BYTE PTR [esi-0x3],0xfe
  4261b0:	inc    ebx
  4261b1:	and    ah,BYTE PTR [edx+ebx*8]
  4261b4:	sbb    eax,0x8f5920ad
  4261ba:	dec    ebp
  4261bb:	and    DWORD PTR fs:[ecx],0x46
  4261bf:	mov    DWORD PTR [ecx],esp
  4261c1:	inc    eax
  4261c2:	dec    eax
  4261c3:	inc    edx
  4261c4:	cdq    
  4261c5:	mov    ebp,0x6fda4675
  4261ca:	int3   
  4261cb:	cmp    BYTE PTR [ecx+0x76bbfa62],0x9c
  4261d2:	push   esi
  4261d3:	and    al,0x7c
  4261d5:	enter  0x23dd,0x84
  4261d9:	dec    edi
  4261da:	outs   dx,DWORD PTR ds:[esi]
  4261db:	lock mov al,0xc0
  4261de:	imul   edi,DWORD PTR [edx+0x78],0xffffffe1
  4261e2:	sbb    DWORD PTR [edi+ebx*2],edx
  4261e5:	mov    eax,0x1b48718
  4261ea:	ss aam 0x2
  4261ed:	add    esp,ecx
  4261ef:	fidiv  WORD PTR gs:[ebx-0x1f]
  4261f3:	adc    ebx,DWORD PTR [edi+0x12]
  4261f6:	jge    0x42623e
  4261f8:	test   BYTE PTR [edx],dl
  4261fa:	test   al,0x8d
  4261fc:	iret   
  4261fd:	inc    esp
  4261fe:	xchg   ebx,eax
  4261ff:	out    dx,eax
  426200:	retf   
  426201:	inc    ebx
  426202:	(bad)  
  426203:	sahf   
  426204:	pop    es
  426205:	iret   
  426206:	mov    ah,0xab
  426208:	mov    bl,0x6b
  42620a:	mov    bh,0x1
  42620c:	xchg   edi,eax
  42620d:	or     BYTE PTR [eax+0x56bd7350],dl
  426213:	mov    ds:0x7cbc2a39,al
  426218:	pop    edx
  426219:	fsubrp st(3),st
  42621b:	outs   dx,BYTE PTR ds:[esi]
  42621c:	push   ebp
  42621d:	leave  
  42621e:	xchg   dh,al
  426220:	mov    ecx,0xa8127998
  426225:	push   es
  426226:	xchg   DWORD PTR ds:0x3412b2ba,esi
  42622d:	outs   dx,DWORD PTR ds:[esi]
  42622e:	cmovg  edx,DWORD PTR [esi+0x40]
  426232:	inc    esi
  426233:	xchg   bh,bh
  426235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426236:	lds    edi,FWORD PTR [eax+0x7124869]
  42623c:	sbb    al,0xb1
  42623e:	push   edi
  42623f:	test   eax,0xca602368
  426244:	rcl    BYTE PTR [edi+0x88e64a7],cl
  42624a:	rcr    BYTE PTR [ebp-0x6d02235a],0x99
  426251:	push   edi
  426252:	push   ebx
  426253:	jl     0x42622e
  426255:	into   
  426256:	(bad)  
  426257:	shl    DWORD PTR [ebx-0x7a],0xea
  42625b:	dec    eax
  42625c:	stos   DWORD PTR es:[edi],eax
  42625d:	call   0x7f30:0xbaaa9a96
  426264:	add    ah,dh
  426266:	xor    al,0xb4
  426268:	xor    edi,0x24
  42626b:	iret   
  42626c:	mov    BYTE PTR [edi],ah
  42626e:	iret   
  42626f:	or     al,0x37
  426271:	rol    BYTE PTR [eax-0x22426f00],1
  426277:	xor    bh,bl
  426279:	mov    al,ds:0xfa3fa2
  42627e:	add    BYTE PTR [eax],al
  426280:	add    BYTE PTR [eax],al
  426282:	jno    0x426247
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	fs in  eax,0xe3
  426291:	push   esi
  426292:	enter  0x1da,0x0
  426296:	repz add al,0x0
  426299:	add    bl,ah
  42629b:	loop   0x426256
  42629d:	jl     0x4262f3
  42629f:	adc    DWORD PTR [ebx+0x5b042f45],edi
  4262a5:	repnz fbstp TBYTE PTR [ecx+ecx*2]
  4262a9:	xchg   esp,eax
  4262aa:	scas   eax,DWORD PTR es:[edi]
  4262ab:	ror    bl,cl
  4262ad:	loope  0x426322
  4262af:	test   ecx,esi
  4262b1:	mov    ds:0x4dd9a1ec,eax
  4262b6:	scas   al,BYTE PTR es:[edi]
  4262b7:	lahf   
  4262b8:	cmp    ah,BYTE PTR [esi]
  4262ba:	in     eax,dx
  4262bb:	rdmsr  
  4262bd:	xchg   ebx,eax
  4262be:	push   esi
  4262bf:	dec    esp
  4262c0:	push   0xffffff85
  4262c2:	lods   al,BYTE PTR ds:[esi]
  4262c3:	std    
  4262c4:	mov    dl,0x55
  4262c6:	pusha  
  4262c7:	(bad)  
  4262c9:	cwde   
  4262ca:	adc    eax,0x53955b66
  4262cf:	add    DWORD PTR [ecx+0x7ab091db],esi
  4262d5:	inc    eax
  4262d6:	sub    eax,0xddfca6b6
  4262db:	or     ah,BYTE PTR fs:[eax+0x4fb06dde]
  4262e2:	or     ah,BYTE PTR [eax]
  4262e4:	std    
  4262e5:	pusha  
  4262e6:	or     DWORD PTR [eax-0x48],0x6f
  4262ea:	jns    0x4262e9
  4262ec:	imul   BYTE PTR [eax-0x6]
  4262ef:	or     al,0xa8
  4262f1:	(bad)  [ecx]
  4262f3:	push   edi
  4262f4:	stos   DWORD PTR es:[edi],eax
  4262f5:	test   al,0x9
  4262f7:	icebp  
  4262f8:	aaa    
  4262f9:	test   al,0xe5
  4262fb:	es sub al,0xb7
  4262fe:	sub    eax,0x4f5d48ee
  426303:	daa    
  426304:	mov    bl,0xd9
  426306:	adc    eax,0x85612706
  42630b:	pop    edx
  42630c:	imul   esi,DWORD PTR [ebx],0xa5ec5450
  426312:	mov    ch,0x14
  426314:	sahf   
  426315:	dec    ecx
  426316:	xchg   edx,eax
  426317:	inc    esi
  426318:	outs   dx,BYTE PTR ds:[esi]
  426319:	fwait
  42631a:	adc    eax,0x1121138
  42631f:	(bad)
  426322:	jne    0x426381
  426324:	pop    ebp
  426325:	das    
  426326:	adc    DWORD PTR [edx+edi*8+0x5739e821],esp
  42632d:	jno    0x426356
  42632f:	inc    esi
  426330:	mov    esp,0xa4e16bda
  426335:	fsubr  DWORD PTR [eax+0x53b4fb3a]
  42633b:	jbe    0x426361
  42633d:	retf   
  42633e:	pop    ebx
  42633f:	inc    esp
  426340:	jno    0x4262e5
  426342:	mov    ah,0x43
  426344:	mov    al,ds:0x1942c423
  426349:	sub    al,0x85
  42634b:	pop    ds
  42634c:	outs   dx,BYTE PTR ds:[esi]
  42634d:	test   BYTE PTR [esi-0x7e],bl
  426350:	shl    DWORD PTR [eax+eax*4-0x5d8a3bc9],cl
  426357:	jno    0x4262f9
  426359:	jg     0x426304
  42635b:	popf   
  42635c:	or     ebp,DWORD PTR [ebp-0x7a160ad4]
  426362:	push   eax
  426363:	inc    ebp
  426364:	sub    eax,0xc6f9f8ab
  426369:	leave  
  42636a:	iret   
  42636b:	or     DWORD PTR [ebx],ebx
  42636d:	adc    al,0x6
  42636f:	pop    eax
  426370:	push   ebp
  426371:	or     bl,BYTE PTR [esi]
  426373:	cld    
  426374:	push   ebx
  426375:	mov    eax,0x8927ec6a
  42637a:	inc    edi
  42637b:	mov    ss,ecx
  42637d:	adc    eax,0xd26f6d
  426382:	push   ss
  426383:	sbb    DWORD PTR [eax+0x59],ecx
  426386:	jmp    0x3c2645bf
  42638b:	lock (bad) 
  42638d:	dec    ecx
  42638e:	push   edi
  42638f:	add    esp,0x8c40b10a
  426395:	cmp    dl,0x5a
  426398:	sbb    al,0xdf
  42639a:	inc    ebx
  42639b:	jo     0x426330
  42639d:	in     al,dx
  42639e:	nop
  42639f:	ret    0x29f8
  4263a2:	(bad)  
  4263a3:	xor    al,0x9f
  4263a5:	jne    0x42641c
  4263a7:	sbb    DWORD PTR [ebp+edi*2+0x1d],edx
  4263ab:	push   ebx
  4263ac:	xor    DWORD PTR [ebx+0x4],edx
  4263af:	push   ecx
  4263b0:	int    0x16
  4263b2:	jp     0x4263e1
  4263b4:	dec    edi
  4263b5:	test   BYTE PTR [edi+0x33],cl
  4263b8:	jle    0x42633a
  4263ba:	cdq    
  4263bb:	sub    BYTE PTR [ecx+0xc],0x1c
  4263bf:	add    edi,DWORD PTR [ebx-0x73]
  4263c2:	aad    0x45
  4263c4:	shr    BYTE PTR [ecx+0x53],cl
  4263c7:	in     al,dx
  4263c8:	mov    ebx,0xb0a0701f
  4263cd:	lock jmp 0x42642b
  4263d0:	mov    ah,0xff
  4263d2:	mov    al,ds:0xe4041590
  4263d7:	jp     0x42644e
  4263d9:	and    ebp,edx
  4263db:	sbb    cl,cl
  4263dd:	ror    BYTE PTR [esp+ebp*1+0xf],1
  4263e1:	lods   eax,DWORD PTR ds:[esi]
  4263e2:	outs   dx,DWORD PTR ds:[esi]
  4263e3:	int    0x1a
  4263e5:	jne    0x426452
  4263e7:	fcomi  st,st(4)
  4263e9:	rcl    BYTE PTR [esi],1
  4263eb:	shl    DWORD PTR [edx],1
  4263ed:	dec    DWORD PTR [ecx+0x31a88f38]
  4263f3:	ss adc eax,0xc4ec4580
  4263f9:	push   0xc
  4263fb:	shl    DWORD PTR [edx+eiz*2],1
  4263fe:	jg     0x42645c
  426400:	retf   0x7cd6
  426403:	cli    
  426404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426405:	popa   
  426406:	mov    eax,ds:0xf12f509
  42640b:	xchg   ecx,eax
  42640c:	adc    BYTE PTR [esi-0x57],ah
  42640f:	icebp  
  426410:	and    eax,0x42b2e42b
  426415:	sub    al,BYTE PTR [edi+0x1cb49821]
  42641b:	sti    
  42641c:	lock inc ebp
  42641e:	ss ds leave 
  426421:	push   cs
  426422:	sub    edx,DWORD PTR [edx]
  426424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426425:	scas   eax,DWORD PTR es:[edi]
  426426:	add    BYTE PTR [ecx-0x5a],al
  426429:	into   
  42642a:	cmc    
  42642b:	ins    BYTE PTR es:[edi],dx
  42642c:	cmc    
  42642d:	not    DWORD PTR [edi+0x21a02c8c]
  426433:	dec    eax
  426434:	(bad)  
  426435:	outs   dx,DWORD PTR ds:[esi]
  426436:	and    BYTE PTR [ebx+edi*4],0xea
  42643a:	jne    0x42648a
  42643c:	push   edx
  42643d:	imul   esp,DWORD PTR [ebp+0x14eeeb97],0xffffff9a
  426444:	and    cl,dh
  426446:	or     BYTE PTR [ebx+eiz*4],dl
  426449:	int    0xf4
  42644b:	out    0xed,al
  42644d:	scas   al,BYTE PTR es:[edi]
  42644e:	aam    0xe8
  426450:	jp     0x4264b7
  426452:	ds icebp 
  426454:	stc    
  426455:	jb     0x4263f5
  426457:	pop    ss
  426458:	mov    al,ds:0x45e079ed
  42645d:	std    
  42645e:	mov    dh,0xa6
  426460:	dec    ebp
  426461:	ins    BYTE PTR es:[edi],dx
  426462:	sub    edi,edi
  426464:	mov    ecx,0x52431ff3
  426469:	aad    0x8e
  42646b:	jmp    0x9a769729
  426470:	pop    ebp
  426471:	gs iret 
  426473:	aam    0x6a
  426475:	jl     0x4264d4
  426477:	jecxz  0x426448
  426479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42647a:	cmp    eax,0xc426e8fb
  42647f:	and    DWORD PTR [eax-0x55],ebx
  426482:	adc    ebx,DWORD PTR ds:0x8ce95b8f
  426488:	mov    al,0x29
  42648a:	pop    eax
  42648b:	(bad)  
  42648c:	push   ss
  42648d:	jbe    0x4264d1
  42648f:	idiv   BYTE PTR [ebp-0x53]
  426492:	or     al,0xb6
  426494:	mov    esp,0xa128253d
  426499:	or     BYTE PTR [ebx-0x76b205d3],bl
  42649f:	outs   dx,DWORD PTR ds:[esi]
  4264a0:	adc    eax,0xdfdf4e44
  4264a5:	aad    0xb3
  4264a7:	outs   dx,BYTE PTR ds:[esi]
  4264a8:	sahf   
  4264a9:	push   ebx
  4264aa:	xchg   BYTE PTR [esi],al
  4264ac:	or     bh,0xf6
  4264af:	fwait
  4264b0:	add    BYTE PTR [ecx+0x6c],dh
  4264b3:	mov    BYTE PTR [esi],dl
  4264b5:	xor    al,BYTE PTR [esi]
  4264b7:	mov    esp,0x205c042c
  4264bc:	mov    DWORD PTR [ecx+0x79fc28e2],ebx
  4264c2:	or     eax,0x4eb089ac
  4264c7:	inc    edx
  4264c8:	scas   al,BYTE PTR es:[edi]
  4264c9:	xor    eax,0x18e31c22
  4264ce:	loopne 0x4264bc
  4264d0:	in     eax,0x31
  4264d2:	xchg   esp,eax
  4264d3:	bound  ecx,QWORD PTR [edx+ebp*2]
  4264d6:	mov    cl,0x70
  4264d8:	xchg   esp,eax
  4264d9:	jmp    0x426501
  4264db:	xchg   ebp,eax
  4264dc:	pop    ds
  4264dd:	pop    ebx
  4264de:	test   eax,esp
  4264e0:	xchg   BYTE PTR [esi+0x5a4ad58f],al
  4264e6:	sbb    BYTE PTR [ebp-0x5a3202e9],dh
  4264ec:	xor    al,0xd8
  4264ee:	xchg   esp,eax
  4264ef:	sar    BYTE PTR [ebp+0x3b],1
  4264f2:	out    0x5d,eax
  4264f4:	add    edx,ebx
  4264f6:	div    DWORD PTR [ecx-0x2]
  4264f9:	leave  
  4264fa:	cdq    
  4264fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264fc:	test   DWORD PTR [ecx+0x7d949a49],ebx
  426502:	cs icebp 
  426504:	and    al,0xe4
  426506:	retf   0xf244
  426509:	xchg   ebp,eax
  42650a:	pop    esi
  42650b:	pop    es
  42650c:	in     eax,dx
  42650d:	mov    dl,0x41
  42650f:	adc    al,BYTE PTR [esi-0x3f]
  426512:	cmp    eax,0x59e7784d
  426517:	and    eax,0x4e9c4ee7
  42651c:	inc    esp
  42651e:	cld    
  42651f:	adc    esp,DWORD PTR [ebp-0x7278935e]
  426525:	popa   
  426526:	jne    0x426524
  426528:	push   ds
  426529:	popf   
  42652a:	ins    DWORD PTR es:[edi],dx
  42652b:	or     eax,DWORD PTR [esi-0x5d]
  42652e:	jp     0x426531
  426530:	inc    ebx
  426531:	jbe    0x4265a3
  426533:	and    ch,BYTE PTR [esi+edi*8+0x76]
  426537:	das    
  426538:	mov    ds:0x8c94d2bb,al
  42653d:	outs   dx,DWORD PTR ds:[esi]
  42653e:	push   cs
  42653f:	rol    DWORD PTR [eax-0x14],cl
  426542:	fwait
  426543:	mov    ds:0x8c9a80a6,eax
  426548:	pop    esp
  426549:	into   
  42654a:	dec    edx
  42654b:	mov    ds,esp
  42654d:	sbb    ch,BYTE PTR [edx-0x2d]
  426550:	mov    bl,0xad
  426552:	jmp    0x13b3:0x17ba84dd
  426559:	pop    es
  42655a:	or     DWORD PTR [esi+0x70],ebp
  42655d:	sar    DWORD PTR [ebp-0x19],0x76
  426561:	iret   
  426562:	cmp    bl,cl
  426564:	outs   dx,BYTE PTR ds:[esi]
  426565:	push   edx
  426566:	or     BYTE PTR [ebp+0x4817a27a],dl
  42656c:	popa   
  42656d:	push   ebp
  42656e:	popf   
  42656f:	xchg   esp,eax
  426570:	outs   dx,DWORD PTR ds:[esi]
  426571:	pop    ebp
  426572:	jmp    0xbcbf:0xb8083b0c
  426579:	(bad)  [ebp+0x41a0efcf]
  42657f:	sbb    eax,0x5414bd3
  426584:	ins    BYTE PTR es:[edi],dx
  426585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426586:	adc    ebp,DWORD PTR [ecx+ecx*1+0x206524fd]
  42658d:	push   0x50
  42658f:	scas   eax,DWORD PTR es:[edi]
  426590:	out    dx,al
  426591:	sub    eax,0xadcd0b3d
  426596:	mov    esi,0xac77c7bc
  42659b:	cwde   
  42659c:	sub    al,BYTE PTR ds:[ebx+0x0]
  4265a0:	arpl   WORD PTR [edx-0xa97629],ax
  4265a6:	out    0x10,al
  4265a8:	aas    
  4265a9:	lock pop edx
  4265ab:	inc    dx
  4265ad:	xchg   edx,eax
  4265ae:	and    BYTE PTR [esi+0x64],0x72
  4265b2:	shl    cl,cl
  4265b4:	sbb    ch,BYTE PTR [edx]
  4265b6:	and    ebp,esi
  4265b8:	mov    ch,0x85
  4265ba:	in     eax,dx
  4265bb:	(bad)  
  4265bc:	mov    dl,0xa9
  4265be:	add    al,0x45
  4265c0:	rcl    BYTE PTR [esi+0x5be68112],0xca
  4265c7:	xchg   ebx,eax
  4265c8:	into   
  4265c9:	aas    
  4265ca:	push   0x22efff6
  4265cf:	push   ds
  4265d0:	les    eax,FWORD PTR [esi+0x4]
  4265d3:	pop    ebx
  4265d4:	inc    BYTE PTR [eax+0x14]
  4265d7:	pushf  
  4265d8:	add    al,0x5d
  4265da:	jae    0x426570
  4265dc:	ret    0x9a6a
  4265df:	(bad)  
  4265e0:	push   ecx
  4265e1:	sbb    dh,BYTE PTR [edx-0x5e]
  4265e4:	jae    0x426622
  4265e6:	push   edx
  4265e7:	add    edi,DWORD PTR [ecx+0xf]
  4265ea:	add    BYTE PTR [ebp+0x78],al
  4265ed:	dec    ecx
  4265ee:	jo     0x426658
  4265f0:	cmc    
  4265f1:	pop    eax
  4265f2:	imul   DWORD PTR [eax+ebx*2-0x6e]
  4265f6:	mov    dh,BYTE PTR [edi-0x5addc566]
  4265fc:	retf   0x9c88
  4265ff:	aas    
  426600:	bnd jg 0x4265c6
  426603:	push   ebp
  426604:	pop    edx
  426605:	dec    ecx
  426606:	and    dh,bl
  426608:	inc    ecx
  426609:	inc    edx
  42660a:	adc    DWORD PTR [edi+0x1c06d10a],ecx
  426610:	(bad)  
  426611:	in     al,0x1c
  426613:	mov    edx,esi
  426615:	jb     0x426670
  426617:	pop    edi
  426618:	(bad)  
  426619:	adc    al,0xd2
  42661b:	repnz or ah,BYTE PTR [eax-0x59506947]
  426622:	test   dl,0xb8
  426625:	dec    ecx
  426626:	pop    ebx
  426627:	fisubr WORD PTR [edx+0x46]
  42662a:	mov    al,0x45
  42662c:	aas    
  42662d:	add    esi,eax
  42662f:	add    eax,esp
  426631:	xor    ah,al
  426633:	pushf  
  426634:	add    al,0x4e
  426636:	push   cs
  426637:	xor    eax,0x7d7a3b00
  42663c:	xchg   ebp,eax
  42663d:	push   0x31
  42663f:	jns    0x4265cd
  426641:	pop    esp
  426642:	sub    DWORD PTR [eax+edx*2-0x6a],esp
  426646:	nop
  426647:	push   esp
  426648:	adc    al,0x35
  42664a:	aas    
  42664b:	out    0x82,eax
  42664d:	adc    al,0x5d
  42664f:	and    DWORD PTR [esi-0x335a7520],ebx
  426655:	in     eax,dx
  426656:	sbb    eax,0xfb2b4fb5
  42665b:	call   0xc149:0x2c406260
  426662:	cmc    
  426663:	mov    ebx,0xb39be02a
  426668:	shl    BYTE PTR ds:0xb11109d,0x37
  42666f:	aad    0x6d
  426671:	jp     0x4266cd
  426673:	jne    0x426610
  426675:	aam    0xc2
  426677:	(bad)  
  426678:	mov    bh,0xd1
  42667a:	mov    al,ds:0x50ff4f4c
  42667f:	out    dx,al
  426680:	dec    eax
  426681:	popf   
  426682:	mov    DWORD PTR [eax+0x1b311deb],esi
  426688:	add    DWORD PTR [ebp-0x13],edi
  42668b:	(bad)  
  42668c:	mov    ebx,0x90790c7b
  426691:	inc    ebx
  426692:	or     ch,BYTE PTR [edi+0x1d]
  426695:	aas    
  426696:	aas    
  426697:	clc    
  426698:	lahf   
  426699:	jne    0x4266b8
  42669b:	push   cs
  42669c:	pushf  
  42669d:	call   0x70ea:0x49b6cabd
  4266a4:	push   edi
  4266a5:	add    eax,0xe20ef62b
  4266aa:	cmp    bl,dh
  4266ac:	aas    
  4266ad:	(bad)  
  4266ae:	pop    ss
  4266af:	dec    ecx
  4266b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266b1:	sbb    bh,BYTE PTR [esi]
  4266b3:	mov    al,0x6
  4266b5:	push   edi
  4266b6:	loope  0x4266fd
  4266b8:	adc    dl,ch
  4266ba:	sahf   
  4266bb:	sar    bl,cl
  4266bd:	sbb    dl,bl
  4266bf:	xchg   ecx,eax
  4266c0:	push   eax
  4266c1:	ret    0xafb1
  4266c4:	cs iret 
  4266c6:	outs   dx,BYTE PTR ds:[esi]
  4266c7:	mov    ch,0x11
  4266c9:	add    esi,ebp
  4266cb:	ss mov ebx,0x7cfeba66
  4266d1:	mov    bh,bl
  4266d3:	inc    ebp
  4266d4:	cli    
  4266d5:	inc    ebx
  4266d6:	(bad)  
  4266d7:	mov    esp,0xd4aa9a58
  4266dc:	jb     0x4266c2
  4266de:	cld    
  4266df:	pop    ds
  4266e0:	xor    cl,BYTE PTR [ecx-0x17d56c1c]
  4266e6:	and    BYTE PTR [ebp-0x7d0c91ad],dl
  4266ec:	pop    esi
  4266ed:	cmp    DWORD PTR [esi+0x1e5c4c16],eax
  4266f3:	lock cdq 
  4266f5:	push   esp
  4266f6:	in     al,0x9e
  4266f8:	inc    ecx
  4266fa:	push   es
  4266fb:	xor    al,0x9c
  4266fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266fe:	mov    dl,0x7c
  426700:	mov    eax,ds:0x2161b806
  426705:	mov    ds:0xfd99213a,al
  42670a:	add    al,0x26
  42670c:	sahf   
  42670d:	es add al,0x7b
  426710:	scas   eax,DWORD PTR es:[edi]
  426711:	mov    esi,0x7ad67b25
  426716:	mov    esp,0xe510f88a
  42671b:	pop    esi
  42671c:	xchg   ebp,eax
  42671d:	mov    ch,0x6a
  42671f:	scas   al,BYTE PTR es:[edi]
  426720:	in     al,0xd9
  426722:	push   ebx
  426723:	lahf   
  426724:	fmul   QWORD PTR [esi-0x6317810e]
  42672a:	aas    
  42672b:	cmp    BYTE PTR [esi+0x3a],ah
  42672e:	and    DWORD PTR [edx+0x37f72a65],ebx
  426734:	imul   DWORD PTR [ecx+esi*1-0x60bad2ce]
  42673b:	jecxz  0x42674b
  42673d:	iret   
  42673e:	jno    0x4266ea
  426740:	shr    DWORD PTR [ebp-0x72],1
  426743:	mov    ebx,0xc0c8fddd
  426748:	and    bl,ch
  42674a:	sti    
  42674b:	pusha  
  42674c:	addr16 dec ebx
  42674e:	dec    ebx
  42674f:	das    
  426750:	(bad)  
  426751:	mov    ds:0xeacb1dce,eax
  426756:	fldcw  WORD PTR [edi-0x1fa7e88a]
  42675c:	mov    dl,0x51
  42675e:	push   cs
  42675f:	push   cs
  426760:	sbb    ah,0x24
  426763:	popa   
  426764:	or     eax,0xba010def
  426769:	sbb    al,0x6a
  42676b:	push   esi
  42676c:	dec    ebx
  42676d:	imul   edx,DWORD PTR [ebx],0xbfac0b89
  426773:	and    eax,0x40b539bf
  426778:	lahf   
  426779:	in     al,dx
  42677a:	mov    bl,0xad
  42677c:	sub    bl,BYTE PTR [eax-0x72]
  42677f:	mov    tr5,ecx
  426782:	add    eax,0xbc858783
  426787:	jbe    0x42675b
  426789:	test   eax,0xf1b40d
  42678e:	add    BYTE PTR [eax],al
  426790:	add    BYTE PTR [eax],al
  426792:	and    DWORD PTR [ecx+ebp*8],0xfbdfed93
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	stos   DWORD PTR es:[edi],eax
  42679f:	(bad)  
  4267a0:	mov    dh,0x4f
  4267a2:	mov    ebx,0xf30001df
  4267a7:	add    al,0x0
  4267a9:	add    bh,dl
  4267ab:	sbb    al,0x70
  4267ad:	push   esp
  4267ae:	cdq    
  4267af:	jo     0x426744
  4267b1:	call   0x73b151f1
  4267b6:	outs   dx,BYTE PTR ds:[esi]
  4267b7:	lds    edx,FWORD PTR ds:0x31e639c9
  4267bd:	xchg   ebx,eax
  4267be:	daa    
  4267bf:	xchg   esi,eax
  4267c0:	(bad)  
  4267c1:	inc    edi
  4267c2:	inc    ecx
  4267c3:	xor    esp,DWORD PTR [edi]
  4267c5:	test   BYTE PTR [esp+edx*2-0x1ae626a2],0xe4
  4267cd:	mov    eax,ds:0x8aedd1e3
  4267d2:	mov    ebx,0xf96878e
  4267d7:	sahf   
  4267d8:	retf   
  4267d9:	fwait
  4267da:	mov    ebp,DWORD PTR [edi+ecx*4-0x48]
  4267de:	and    edi,DWORD PTR [ebx+0x5476f5ee]
  4267e4:	sub    dl,dh
  4267e6:	and    ebp,DWORD PTR [edx]
  4267e8:	inc    eax
  4267e9:	add    al,BYTE PTR [edx+ebp*2-0x4a]
  4267ed:	cmp    cl,bh
  4267ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267f0:	cmp    eax,0x501378c9
  4267f5:	scas   al,BYTE PTR es:[edi]
  4267f6:	ds scas eax,DWORD PTR es:[edi]
  4267f8:	retf   
  4267f9:	(bad)  
  4267fa:	aaa    
  4267fb:	or     ecx,DWORD PTR fs:[esi]
  4267fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267ff:	(bad)  
  426800:	aas    
  426801:	pop    es
  426802:	or     ebx,0xd0a491ef
  426808:	lock bound edi,QWORD PTR [eax-0x6fc1fc79]
  42680f:	in     eax,dx
  426810:	fld    DWORD PTR [esi+0x67f654db]
  426816:	add    ebx,ecx
  426818:	xchg   BYTE PTR [ecx],ch
  42681a:	and    BYTE PTR [ecx],bl
  42681c:	cmp    eax,0x960b5856
  426821:	push   eax
  426822:	cmp    DWORD PTR [esi+0x19],eax
  426825:	inc    edi
  426826:	(bad)  
  426827:	cmp    eax,0x88ccd2cb
  42682c:	repnz mov dh,0x91
  42682f:	jo     0x4267e1
  426831:	xor    BYTE PTR [edi+0x6caaf489],ah
  426837:	pop    esp
  426838:	(bad)  
  42683a:	push   ss
  42683b:	xchg   ebp,eax
  42683c:	ret    
  42683d:	enter  0x29e4,0x28
  426841:	xchg   BYTE PTR [edx+0x968e7bb],ch
  426847:	gs and eax,0xd0fb861b
  42684d:	mov    dh,0x5a
  42684f:	push   0x4c
  426851:	and    eax,0x38bd2870
  426856:	mov    al,0x54
  426858:	test   DWORD PTR [ebx],edi
  42685a:	popf   
  42685b:	cdq    
  42685c:	pop    esp
  42685d:	(bad)  
  42685e:	call   0x7914bea5
  426863:	cmp    ebp,edx
  426865:	mov    ebp,0xc48ffeed
  42686a:	jno    0x42689b
  42686c:	sbb    ebp,DWORD PTR [ebp+edi*8+0x71]
  426870:	test   al,0xc9
  426872:	dec    esp
  426873:	or     eax,0xbeda09e5
  426878:	add    al,0x79
  42687a:	push   eax
  42687b:	enter  0xae4a,0x40
  42687f:	add    al,0xb8
  426881:	mov    ds:0x6e64cb2a,eax
  426886:	arpl   WORD PTR [edx+0x52],sp
  426889:	js     0x426853
  42688b:	or     al,bh
  42688d:	lds    ecx,FWORD PTR [eax+eax*1-0x2b24cf55]
  426894:	test   eax,0x5ed2ca3
  426899:	pop    ecx
  42689a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42689b:	inc    ecx
  42689c:	dec    ebx
  42689d:	xchg   BYTE PTR [ebx+0x24],dl
  4268a0:	out    0x63,al
  4268a2:	jno    0x4268e2
  4268a4:	scas   eax,DWORD PTR es:[edi]
  4268a5:	pop    eax
  4268a6:	inc    ebx
  4268a7:	adc    al,0xa8
  4268a9:	inc    edx
  4268aa:	aas    
  4268ab:	shr    BYTE PTR [eax+0xb804626],0xea
  4268b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268b3:	test   eax,0xb9c07215
  4268b8:	dec    ebp
  4268b9:	dec    edx
  4268ba:	loopne 0x4268ba
  4268bc:	mov    ds:0xc56be677,al
  4268c1:	bound  esp,QWORD PTR [eax-0x1e]
  4268c4:	sub    dh,BYTE PTR [ebx-0xc]
  4268c7:	push   cs
  4268c8:	into   
  4268c9:	stos   DWORD PTR es:[edi],eax
  4268ca:	xor    esp,DWORD PTR [eax]
  4268cc:	cmp    eax,0x80ff906c
  4268d1:	fmul   DWORD PTR [ecx+0x32]
  4268d4:	out    dx,al
  4268d5:	stc    
  4268d6:	mov    ss,eax
  4268d8:	cwde   
  4268d9:	pop    ecx
  4268da:	loop   0x426887
  4268dc:	mov    eax,0xdd43c26d
  4268e1:	pop    eax
  4268e2:	les    esi,FWORD PTR [edi-0x15]
  4268e5:	js     0x42692c
  4268e7:	pop    edx
  4268e8:	push   esp
  4268e9:	mov    bl,0xae
  4268eb:	bound  ebp,QWORD PTR [ebx-0x7d]
  4268ee:	xchg   bx,ax
  4268f0:	dec    eax
  4268f1:	rol    BYTE PTR [edi+0x64],cl
  4268f4:	push   ss
  4268f5:	call   0xbac5a4e9
  4268fa:	xchg   ecx,eax
  4268fb:	inc    ebp
  4268fc:	mov    esi,0x275bea50
  426901:	lahf   
  426902:	call   0x710b8424
  426907:	imul   edx,DWORD PTR [edx],0x2b8ad968
  42690d:	sub    edx,edx
  42690f:	(bad)  
  426910:	shl    dl,cl
  426912:	repz das 
  426914:	and    al,0x29
  426916:	jae    0x426996
  426918:	sar    DWORD PTR [edx-0x4774bcc2],0xd3
  42691f:	mov    DWORD PTR [esi-0x19ce212],0x1d73d1e4
  426929:	or     ebx,DWORD PTR [ebx+0x3a]
  42692c:	add    eax,0xb2c7560d
  426931:	xor    BYTE PTR [esi-0x3f],al
  426934:	bound  esp,QWORD PTR [eax+0x77]
  426937:	ret    0x1901
  42693a:	outs   dx,BYTE PTR ds:[esi]
  42693b:	jo     0x42694e
  42693d:	mov    eax,ds:0x7f0131f9
  426942:	push   ds
  426943:	push   ecx
  426944:	imul   esp,DWORD PTR [edx],0xffffffb1
  426947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426948:	push   0x9ea60aa4
  42694d:	mov    esp,DWORD PTR [esi-0x71fe7d8a]
  426953:	jg     0x426937
  426955:	(bad)  
  426956:	fdivr  st(2),st
  426958:	xor    eax,0xdf5bc4b5
  42695d:	or     eax,0x55846779
  426962:	and    DWORD PTR [edi+esi*4],ebp
  426965:	inc    ebx
  426966:	or     DWORD PTR [esi+0x334a6690],esp
  42696c:	lea    ecx,[esi-0x3b]
  42696f:	test   al,0x0
  426971:	into   
  426972:	pop    ebx
  426973:	add    al,0xd0
  426975:	test   DWORD PTR [edx-0x6e13a594],0x36c509d0
  42697f:	mov    edi,DWORD PTR [edi]
  426981:	leave  
  426982:	mov    bl,BYTE PTR [ebx+0x7f]
  426985:	xor    DWORD PTR [eax-0x5550f6b3],esi
  42698b:	jne    0x4269d2
  42698d:	mov    DWORD PTR [ebp-0x4e],eax
  426990:	data16 or al,dh
  426993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426994:	jb     0x4269ef
  426996:	leave  
  426997:	sbb    esi,ebx
  426999:	lods   al,BYTE PTR ss:[esi]
  42699b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42699c:	lahf   
  42699d:	inc    ebx
  42699e:	outs   dx,BYTE PTR ds:[esi]
  42699f:	adc    al,0x98
  4269a1:	(bad)  
  4269a2:	popf   
  4269a3:	cmc    
  4269a4:	mov    ecx,0x89c30cee
  4269a9:	bound  edx,QWORD PTR [eax]
  4269ab:	xor    dl,BYTE PTR [esi-0x1433550e]
  4269b1:	pushf  
  4269b2:	shl    DWORD PTR [edx+0x76160972],0x50
  4269b9:	data16 jmp 0x42699c
  4269bc:	aaa    
  4269bd:	push   edi
  4269be:	dec    esi
  4269bf:	pop    esp
  4269c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269c1:	js     0x4269dc
  4269c3:	sbb    al,BYTE PTR [esi+esi*8-0x53]
  4269c7:	push   ebx
  4269c8:	rcr    DWORD PTR [esi+0x405208db],1
  4269ce:	xor    al,0xbb
  4269d0:	(bad)  
  4269d1:	or     edi,DWORD PTR [edx+eax*1]
  4269d4:	out    dx,eax
  4269d5:	mov    dh,0x7f
  4269d7:	cmp    bh,dh
  4269d9:	adc    DWORD PTR [edi],edi
  4269db:	push   ebx
  4269dc:	dec    edi
  4269dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269de:	lock mov ecx,0x3d4b4484
  4269e4:	(bad)  
  4269e5:	out    0x16,eax
  4269e7:	push   ebp
  4269e8:	shl    DWORD PTR [edi],0xa8
  4269eb:	mov    bh,0x1e
  4269ed:	call   0x7af02ff2
  4269f2:	imul   esi,DWORD PTR [edx+0x521ea567],0x2c112c9b
  4269fc:	stos   BYTE PTR es:[edi],al
  4269fd:	gs aas 
  4269ff:	je     0x4269c4
  426a01:	ficom  DWORD PTR [edi]
  426a03:	push   cs
  426a04:	imul   edx,DWORD PTR [ebx+0x4f],0xffffffe7
  426a08:	and    BYTE PTR [edi-0x40],0x3
  426a0c:	ret    0xaa31
  426a0f:	imul   edx,DWORD PTR [edx+0x3e],0x7a094cad
  426a16:	xor    ecx,edx
  426a18:	clc    
  426a19:	jmp    0x426a7c
  426a1b:	add    eax,0x9fd0b047
  426a20:	outs   dx,DWORD PTR ds:[esi]
  426a21:	jae    0x426a06
  426a23:	xchg   esi,eax
  426a24:	vmwrite ebx,DWORD PTR [edi]
  426a27:	push   0xd6acc007
  426a2c:	dec    edi
  426a2d:	xchg   edx,eax
  426a2e:	test   DWORD PTR [ebp+0x19],edi
  426a31:	sub    ecx,DWORD PTR [ebp+0x50]
  426a34:	pop    ds
  426a35:	cli    
  426a36:	inc    ebp
  426a37:	xor    eax,0x3e7fc3ce
  426a3c:	data16 ror BYTE PTR ds:0x65f4,1
  426a42:	aad    0xcc
  426a44:	(bad)  
  426a45:	pop    ecx
  426a46:	mov    BYTE PTR [edi],dl
  426a48:	fcomi  st,st(4)
  426a4a:	aaa    
  426a4b:	fld    QWORD PTR [eax-0x54]
  426a4e:	jp     0x426aa0
  426a50:	imul   eax,edi,0x47
  426a53:	sbb    eax,0x40f9634d
  426a58:	mov    cl,0xe1
  426a5a:	ins    BYTE PTR es:[edi],dx
  426a5b:	ja     0x426a45
  426a5d:	pop    ds
  426a5e:	push   ds
  426a5f:	xchg   BYTE PTR [esi+0x9b59602],cl
  426a65:	jne    0x4269ea
  426a67:	ins    DWORD PTR es:[edi],dx
  426a68:	call   0x6862:0xad2ecb26
  426a6f:	out    dx,al
  426a70:	outs   dx,BYTE PTR ds:[esi]
  426a71:	cs loopne 0x426a49
  426a74:	std    
  426a75:	fadd   QWORD PTR [ebx+esi*1+0x40]
  426a79:	sbb    eax,0xc9400de2
  426a7e:	stos   BYTE PTR es:[edi],al
  426a7f:	xor    esp,DWORD PTR [ebp+eiz*2-0x706ead91]
  426a86:	cwde   
  426a87:	popa   
  426a88:	test   DWORD PTR gs:[edi+0x2b],0x4b8ad6c6
  426a90:	mov    dh,0x8c
  426a92:	sub    al,0x24
  426a94:	dec    edx
  426a95:	adc    BYTE PTR [ecx+0x658bc2a7],al
  426a9b:	nop
  426a9c:	in     al,0xc4
  426a9e:	lock adc DWORD PTR [esi],esp
  426aa1:	in     al,0x1
  426aa3:	inc    esp
  426aa4:	mov    cl,0xa6
  426aa6:	fsub   st,st(1)
  426aa8:	and    DWORD PTR gs:[ebx+edi*4],edx
  426aac:	or     BYTE PTR [eax+0x10e9447c],ch
  426ab2:	mov    bh,0xa6
  426ab4:	in     al,dx
  426ab5:	adc    al,0xb4
  426ab7:	jmp    0x5d566e9b
  426abc:	push   ecx
  426abd:	jmp    0x426a73
  426abf:	arpl   WORD PTR [edi-0x546872dc],bp
  426ac5:	lahf   
  426ac6:	add    BYTE PTR [ebp-0x7c],dh
  426ac9:	xchg   ebx,eax
  426aca:	ss sbb eax,0x6eec5731
  426ad0:	dec    esp
  426ad1:	push   ss
  426ad2:	mov    ah,0x9
  426ad4:	icebp  
  426ad5:	add    bl,bl
  426ad7:	push   esp
  426ad8:	push   ds
  426ad9:	ja     0x426afb
  426adb:	lods   al,BYTE PTR ds:[esi]
  426adc:	fcom   DWORD PTR [eax+0x3e17c50d]
  426ae2:	dec    ecx
  426ae3:	cmp    edi,ecx
  426ae5:	sbb    cl,bh
  426ae7:	push   0x23
  426ae9:	ss and al,0xfd
  426aec:	add    DWORD PTR [esi+edi*1-0x61],0x6ac0aff8
  426af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426af5:	cwde   
  426af6:	or     ecx,DWORD PTR [ecx+0x38]
  426af9:	xchg   esp,eax
  426afa:	xor    BYTE PTR [ecx+0x548bdead],dl
  426b00:	pop    ebx
  426b01:	sub    DWORD PTR [ecx],eax
  426b03:	vcmpsd xmm4,xmm5,QWORD PTR [edx+0x110eaac7],0xa6
  426b0c:	call   0xb473:0x2ca83b17
  426b13:	inc    eax
  426b14:	ss push 0x39293860
  426b1a:	cmp    dl,bl
  426b1c:	nop
  426b1d:	xchg   bh,dh
  426b1f:	fwait
  426b20:	stos   BYTE PTR es:[edi],al
  426b21:	pop    esi
  426b22:	out    0x86,eax
  426b24:	retf   
  426b25:	dec    ebp
  426b26:	xor    eax,0x1fb3c0ea
  426b2b:	lahf   
  426b2c:	mov    eax,0x88cad205
  426b31:	fisubr DWORD PTR [ebx+0x61e7912f]
  426b37:	mov    esp,0x213f9da
  426b3c:	push   ss
  426b3d:	mov    ch,0xdd
  426b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b40:	lods   al,BYTE PTR ds:[esi]
  426b41:	mov    esi,DWORD PTR [ebp-0x3f]
  426b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b45:	pop    ecx
  426b46:	cmp    bh,cl
  426b48:	into   
  426b49:	sub    eax,0x9cc68f64
  426b4e:	test   bh,dh
  426b50:	mov    edi,0x7a30c483
  426b55:	dec    esi
  426b56:	lds    edx,FWORD PTR [esi]
  426b58:	adc    ah,BYTE PTR [eax+ebp*8-0x2b]
  426b5c:	mov    esp,DWORD PTR [eax+ebp*1+0x71]
  426b60:	aaa    
  426b61:	adc    al,0x4
  426b63:	xor    BYTE PTR [esi],ah
  426b65:	(bad)  
  426b66:	jo     0x426b1a
  426b68:	fadd   DWORD PTR [esi-0x5a]
  426b6b:	jno    0x426af4
  426b6d:	ja     0x426b6a
  426b6f:	aaa    
  426b70:	or     eax,0x370e89e1
  426b75:	xor    al,0x39
  426b77:	lods   al,BYTE PTR ds:[esi]
  426b78:	add    edi,ecx
  426b7a:	xor    al,0xf
  426b7c:	mul    BYTE PTR fs:[eax]
  426b7f:	mov    BYTE PTR [eax+ebp*2+0x3dc1e689],al
  426b86:	inc    edi
  426b87:	or     BYTE PTR ds:0x60e18c51,dl
  426b8d:	jbe    0x426ba9
  426b8f:	or     DWORD PTR [eax+ebx*1],ecx
  426b92:	cli    
  426b93:	adc    al,0x4f
  426b95:	sub    al,0xfa
  426b97:	adc    DWORD PTR [ebx+0x48d78b7],0xd488d1e1
  426ba1:	sar    DWORD PTR [ebx+0x33],1
  426ba4:	in     eax,dx
  426ba5:	or     eax,0xb2a918ef
  426baa:	ds retf 
  426bac:	cdq    
  426bad:	jmp    0x5c21:0x702c2abb
  426bb4:	pop    esp
  426bb5:	push   eax
  426bb6:	mov    edi,0xc76ed12c
  426bbb:	jno    0x426be5
  426bbd:	cmp    al,BYTE PTR [edi+0x24]
  426bc0:	fnstsw WORD PTR [edi-0x16318385]
  426bc6:	mov    dh,0x0
  426bc8:	and    BYTE PTR [esi],ah
  426bca:	and    eax,0x6d5379ab
  426bcf:	loop   0x426b8c
  426bd1:	adc    eax,DWORD PTR [edi+0x76]
  426bd4:	or     DWORD PTR [eax+ecx*4+0x2b3d2dc0],esi
  426bdb:	out    0x41,eax
  426bdd:	mov    cr5,ecx
  426be0:	test   BYTE PTR [ebx],ch
  426be2:	fs xchg ebp,eax
  426be4:	outs   dx,DWORD PTR ds:[esi]
  426be5:	adc    eax,0xed28e224
  426bea:	dec    ebp
  426beb:	adc    BYTE PTR [eax],cl
  426bed:	data16 fdiv QWORD PTR [edi-0x37]
  426bf1:	mov    WORD PTR [esp+0x5],cs
  426bf5:	inc    ebp
  426bf6:	or     al,0xc6
  426bf8:	push   ebp
  426bf9:	repz dec ebp
  426bfb:	mov    bl,0x66
  426bfd:	call   0xf1a02450
  426c02:	enter  0xb052,0x5b
  426c06:	xchg   ch,ch
  426c08:	rcr    edx,1
  426c0a:	aam    0xab
  426c0c:	and    eax,0xd9ea2497
  426c11:	lods   eax,DWORD PTR ds:[esi]
  426c12:	inc    esi
  426c13:	fucomp st(4)
  426c15:	push   DWORD PTR [edx+0x70]
  426c18:	mov    eax,0x2a267119
  426c1d:	stos   DWORD PTR es:[edi],eax
  426c1e:	es dec ebx
  426c20:	ret    0x7c5b
  426c23:	inc    ebx
  426c24:	out    0xba,eax
  426c26:	jmp    0x426bcc
  426c28:	lea    edi,[eax-0x30496a5]
  426c2e:	mov    DWORD PTR [eax+0x3be4fd1a],ecx
  426c34:	(bad)  
  426c35:	test   BYTE PTR [ebx+edi*8],0x7d
  426c39:	lahf   
  426c3a:	push   esi
  426c3b:	sbb    DWORD PTR [ecx-0x2b],eax
  426c3e:	mov    ds:0xac6e7655,eax
  426c43:	push   ecx
  426c44:	rcr    DWORD PTR [ecx+0x10d0060f],1
  426c4a:	mov    dl,0xce
  426c4c:	jp     0x426bd1
  426c4e:	dec    ebp
  426c4f:	popa   
  426c50:	pushf  
  426c51:	mov    eax,DWORD PTR [eax-0x14]
  426c54:	lea    esi,[ecx+0x1a]
  426c57:	nop
  426c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c59:	adc    eax,0x97f1062d
  426c5e:	aas    
  426c5f:	bound  ebp,QWORD PTR [ebp-0x7]
  426c62:	push   0xffffffbc
  426c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c65:	mov    eax,cr3
  426c68:	inc    edx
  426c69:	xchg   ebx,eax
  426c6a:	mov    ah,0xbf
  426c6c:	loop   0x426c78
  426c6e:	loop   0x426cbb
  426c70:	inc    ecx
  426c71:	aas    
  426c72:	js     0x426ccd
  426c74:	inc    edx
  426c75:	mov    ah,0xbe
  426c77:	add    al,0x7a
  426c79:	push   edi
  426c7a:	add    ecx,DWORD PTR [edi+0x6b]
  426c7d:	jecxz  0x426bff
  426c7f:	test   eax,0x1b15d9c3
  426c84:	test   DWORD PTR [ebx-0xa13b0f3],ebx
  426c8a:	inc    edi
  426c8b:	sub    ebp,DWORD PTR [esi-0x3dca4221]
  426c91:	(bad)  
  426c92:	fisttp DWORD PTR [edx]
  426c94:	in     eax,0x67
  426c96:	jl     0x426c8f
  426c98:	sub    eax,0x458cdf44
  426c9d:	add    BYTE PTR [eax],al
  426c9f:	add    BYTE PTR [eax],al
  426ca1:	add    BYTE PTR [esi+0x5f451fc0],dl
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx+0x3ee88e10],cl
  426caf:	or     eax,esp
  426cb1:	fsubr  QWORD PTR [esi-0xcfffe1c]
  426cb7:	add    al,0x0
  426cb9:	add    BYTE PTR [ecx-0x4e],bl
  426cbc:	retf   
  426cbd:	nop
  426cbe:	cmp    eax,0x3d27d39b
  426cc3:	pop    esi
  426cc4:	add    DWORD PTR ds:0xe497da52,esp
  426cca:	gs fwait
  426ccc:	pop    esp
  426ccd:	and    eax,ebx
  426ccf:	and    BYTE PTR [edi+0x47],bh
  426cd2:	stc    
  426cd3:	lock cld 
  426cd5:	arpl   WORD PTR [esi],bx
  426cd7:	int    0xff
  426cd9:	sti    
  426cda:	ss je  0x426c60
  426cdd:	add    ah,ah
  426cdf:	test   BYTE PTR [ecx-0x1a],al
  426ce2:	aad    0x25
  426ce4:	push   eax
  426ce5:	xchg   BYTE PTR [edi+0x7ef55a25],ah
  426ceb:	sub    DWORD PTR [ecx-0x29],eax
  426cee:	pop    esi
  426cef:	dec    esp
  426cf0:	fdivr  DWORD PTR [edi+0x63]
  426cf3:	aaa    
  426cf4:	(bad)  
  426cf5:	loopne 0x426cfd
  426cf7:	fld    DWORD PTR [ecx-0x5c993974]
  426cfd:	bound  ebp,QWORD PTR [eax+0x5cd8b6fe]
  426d03:	add    BYTE PTR [ecx+0x69],0x76
  426d07:	fwait
  426d08:	cmp    al,0x1c
  426d0a:	out    0x96,al
  426d0c:	(bad)  
  426d0d:	pop    edx
  426d0e:	enter  0x1bbc,0xb1
  426d12:	inc    esp
  426d13:	mov    ecx,0x71253fb
  426d18:	or     ebp,DWORD PTR [ecx+0x39]
  426d1b:	xor    dl,ah
  426d1d:	and    edi,ebp
  426d1f:	xor    eax,0xe2fcc199
  426d24:	xchg   DWORD PTR [ecx-0x513a8e46],edi
  426d2a:	fnsave [esp+edi*8-0x62]
  426d2e:	sbb    al,0xb
  426d30:	add    dl,al
  426d32:	loope  0x426d17
  426d34:	sub    dl,BYTE PTR [edx+0x7d]
  426d37:	jo     0x426db1
  426d39:	adc    al,0x7f
  426d3b:	adc    BYTE PTR [eax-0x75a2c1b9],cl
  426d41:	sub    bh,bh
  426d43:	not    BYTE PTR [eax]
  426d45:	hlt    
  426d46:	loop   0x426d21
  426d48:	ins    BYTE PTR es:[edi],dx
  426d49:	(bad)
  426d4c:	add    bh,BYTE PTR [ecx-0x2]
  426d4f:	pop    ebx
  426d50:	sbb    dl,BYTE PTR [edx]
  426d52:	sbb    DWORD PTR [ecx+eiz*2+0x68b6f0d7],ebx
  426d59:	scas   al,BYTE PTR es:[edi]
  426d5a:	pop    ds
  426d5b:	inc    ebp
  426d5c:	jle    0x426d9a
  426d5e:	push   es
  426d5f:	sbb    ecx,DWORD PTR [ebx-0x1a]
  426d62:	jle    0x426db1
  426d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d65:	add    DWORD PTR [esp],edx
  426d68:	test   eax,0x130a7149
  426d6d:	into   
  426d6e:	mov    DWORD PTR [ebx+edx*8],ebp
  426d71:	xchg   edi,eax
  426d72:	test   DWORD PTR [edx-0x54ece24],eax
  426d78:	jmp    DWORD PTR [ecx]
  426d7a:	xchg   esp,eax
  426d7b:	mov    ah,BYTE PTR [ebx-0xce2beec]
  426d81:	pop    edx
  426d82:	cmc    
  426d83:	div    BYTE PTR [edx-0x79214f52]
  426d89:	sbb    al,0xf9
  426d8b:	mov    eax,ds:0x46f096c9
  426d90:	popa   
  426d91:	sub    ebp,0xfffffff7
  426d94:	add    al,0x1b
  426d96:	sahf   
  426d97:	popa   
  426d98:	popa   
  426d99:	mov    al,ds:0x91e480e2
  426d9e:	pop    esi
  426d9f:	dec    eax
  426da0:	or     DWORD PTR [edx],ebp
  426da2:	mov    cl,0x53
  426da4:	add    DWORD PTR [edx],edi
  426da6:	fs ja  0x426d5d
  426da9:	ss pop esi
  426dab:	sbb    al,0x27
  426dad:	pop    es
  426dae:	xlat   BYTE PTR ds:[ebx]
  426daf:	lahf   
  426db0:	in     al,0x5f
  426db2:	stos   DWORD PTR es:[edi],eax
  426db3:	ds call 0xb713:0x2a2e7077
  426dbb:	(bad)  [ebx]
  426dbd:	dec    edi
  426dbe:	pop    edx
  426dbf:	mov    eax,0xe1cb72ac
  426dc4:	mov    ebx,0x9f635a2f
  426dc9:	dec    eax
  426dca:	repz mov WORD PTR [ebp-0x2e],gs
  426dce:	pusha  
  426dcf:	and    al,ah
  426dd1:	jno    0x426e4e
  426dd3:	arpl   WORD PTR [esi],bp
  426dd5:	ins    BYTE PTR es:[edi],dx
  426dd6:	sbb    DWORD PTR [eax+0x5b],ecx
  426dd9:	sar    bh,0x98
  426ddc:	and    eax,0x736834e7
  426de1:	cs or  al,0xbc
  426de4:	scas   al,BYTE PTR es:[edi]
  426de5:	cwde   
  426de6:	xchg   esp,eax
  426de7:	push   ss
  426de8:	dec    eax
  426de9:	and    bh,BYTE PTR [ecx]
  426deb:	jnp    0x426dac
  426ded:	add    al,0x58
  426def:	ror    esp,cl
  426df1:	push   cs
  426df2:	dec    edi
  426df3:	dec    edi
  426df4:	test   DWORD PTR [ebp-0x5b],eax
  426df7:	ficomp DWORD PTR [edi]
  426df9:	mov    ah,BYTE PTR [ebp+0x51d87cd0]
  426dff:	push   es
  426e00:	scas   al,BYTE PTR es:[edi]
  426e01:	inc    edx
  426e02:	fmul   DWORD PTR [ebp-0x7b0333e2]
  426e08:	lods   al,BYTE PTR ds:[esi]
  426e09:	cmc    
  426e0a:	div    dl
  426e0c:	inc    esi
  426e0d:	not    BYTE PTR [edi]
  426e0f:	retf   
  426e10:	imul   esp,esi,0x3a5d308c
  426e16:	in     al,dx
  426e17:	mov    eax,0x3dc78665
  426e1c:	push   ss
  426e1d:	pusha  
  426e1e:	jnp    0x426e7f
  426e20:	xlat   BYTE PTR ds:[ebx]
  426e21:	fs mov eax,0x1ed837fe
  426e27:	push   esp
  426e28:	push   ebx
  426e29:	pop    ds
  426e2a:	pusha  
  426e2b:	add    BYTE PTR [edi-0x64],dh
  426e2e:	enter  0xf15a,0xd8
  426e32:	mov    eax,ds:0x6d994357
  426e37:	stos   BYTE PTR es:[edi],al
  426e38:	ins    BYTE PTR es:[edi],dx
  426e39:	loopne 0x426e5a
  426e3b:	sub    DWORD PTR [edx-0x7e84f958],esi
  426e41:	out    0xf6,al
  426e43:	sahf   
  426e44:	pushf  
  426e45:	adc    ebp,DWORD PTR ds:0xd7b3f33e
  426e4b:	pop    ebp
  426e4c:	pop    eax
  426e4d:	jl     0x426e8a
  426e4f:	daa    
  426e50:	add    BYTE PTR [ebp+0x72],0x53
  426e54:	adc    BYTE PTR [edi-0x24],ch
  426e57:	xlat   BYTE PTR fs:[ebx]
  426e59:	xchg   ebx,eax
  426e5a:	cmp    edi,ebx
  426e5c:	adc    ch,BYTE PTR [ecx+ebx*2+0x27309a24]
  426e63:	sub    bh,bl
  426e65:	lods   eax,DWORD PTR ds:[esi]
  426e66:	jns    0x426e57
  426e68:	push   edx
  426e69:	retf   
  426e6a:	shr    BYTE PTR [edi+0x2c2878fc],cl
  426e70:	mov    eax,ds:0x1f3cda0d
  426e75:	aaa    
  426e76:	cmp    edx,DWORD PTR [esi+0x552e9fef]
  426e7c:	push   0x30
  426e7e:	mov    cl,0xf
  426e80:	fistp  DWORD PTR ds:0x8ecb0297
  426e86:	imul   ebp,DWORD PTR [eax],0xffffffc4
  426e89:	(bad)
  426e8d:	cdq    
  426e8e:	sbb    ebp,DWORD PTR [edi+0x68566520]
  426e94:	cld    
  426e95:	icebp  
  426e96:	sti    
  426e97:	fsub   DWORD PTR [ebx]
  426e99:	das    
  426e9a:	push   0x11085596
  426e9f:	dec    esi
  426ea0:	push   ebp
  426ea1:	fistp  WORD PTR [edx-0x3d]
  426ea4:	fcomp  st(5)
  426ea6:	sbb    eax,0xb40d77a9
  426eab:	mov    edi,0x9972eb89
  426eb0:	mov    ebp,0x2bdd7cf9
  426eb5:	cmp    ebp,ebx
  426eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426eb8:	inc    ecx
  426eb9:	out    dx,al
  426eba:	mov    ebx,0xe111203e
  426ebf:	rcr    DWORD PTR [eax-0x58],cl
  426ec2:	stc    
  426ec3:	cli    
  426ec4:	popf   
  426ec5:	xor    ebp,ebx
  426ec7:	mov    dl,ch
  426ec9:	mov    esp,0xedc792e1
  426ece:	sbb    dh,al
  426ed0:	push   0xffffffd7
  426ed2:	aas    
  426ed3:	inc    esi
  426ed4:	(bad)  
  426ed5:	in     eax,dx
  426ed6:	arpl   WORD PTR [ecx+0x531d299a],di
  426edc:	inc    esp
  426edd:	dec    esi
  426ede:	push   ebp
  426edf:	aad    0xa5
  426ee1:	cwde   
  426ee2:	fwait
  426ee3:	push   0x1ab2800b
  426ee8:	push   cs
  426ee9:	xchg   ebx,eax
  426eea:	lea    esi,[edx]
  426eec:	ret    0xeff8
  426eef:	popf   
  426ef0:	adc    bh,al
  426ef2:	pushf  
  426ef3:	push   cs
  426ef4:	into   
  426ef5:	mov    bl,0xdf
  426ef7:	retf   
  426ef8:	add    al,0x32
  426efa:	lock adc DWORD PTR cs:[eax-0x56],esp
  426eff:	call   0xb061:0xb3084167
  426f06:	daa    
  426f07:	scas   al,BYTE PTR es:[edi]
  426f08:	fs cs lahf 
  426f0b:	mov    eax,ds:0xf101c907
  426f10:	mov    edx,DWORD PTR [edi+0xa78ece7]
  426f16:	aad    0xfa
  426f18:	mov    esi,0xcb2c5b92
  426f1d:	mov    bl,0x34
  426f1f:	and    eax,0x15e09c75
  426f24:	push   cs
  426f25:	or     esi,ebp
  426f27:	neg    BYTE PTR ds:0xdeb83ea4
  426f2d:	push   edx
  426f2e:	repnz mov dl,0xd2
  426f31:	out    dx,eax
  426f32:	inc    ecx
  426f33:	sbb    eax,0xa6ec0903
  426f38:	retf   0xbaf
  426f3b:	and    BYTE PTR [edx+eax*2],bl
  426f3e:	ins    DWORD PTR es:[edi],dx
  426f3f:	inc    edi
  426f40:	lea    esi,[ecx+edi*4+0x4920f33b]
  426f47:	or     eax,DWORD PTR [edx]
  426f49:	bnd ret 0xead3
  426f4d:	push   ss
  426f4e:	aaa    
  426f4f:	push   0xffffffc7
  426f51:	mov    bl,ch
  426f53:	jne    0x426f53
  426f55:	mul    al
  426f57:	mov    ds:0x3d33c37c,eax
  426f5c:	stc    
  426f5d:	mov    ebp,0xa16c0b5c
  426f62:	dec    esp
  426f63:	jg     0x426f0f
  426f65:	push   ds
  426f66:	sbb    esp,DWORD PTR [ebp+ebp*8-0x51473f07]
  426f6d:	(bad)  
  426f6e:	fidiv  WORD PTR [edx+0x7bd121a9]
  426f74:	mov    ds:0x27565f01,eax
  426f79:	cmp    eax,0x716064f9
  426f7e:	sbb    bh,BYTE PTR [edi-0x2e]
  426f81:	ret    0xc8a3
  426f84:	inc    eax
  426f85:	(bad)  
  426f86:	loope  0x426fe1
  426f88:	mov    ebp,0xf7c7c6ca
  426f8d:	inc    esi
  426f8e:	and    ebx,DWORD PTR [ebp-0x307769e6]
  426f94:	int    0x2
  426f96:	int3   
  426f97:	pop    esi
  426f98:	push   es
  426f99:	pop    ebp
  426f9a:	rol    DWORD PTR [ebp-0x56],cl
  426f9d:	sub    DWORD PTR [edx+edx*1],ebp
  426fa0:	jae    0x42701e
  426fa2:	(bad)  
  426fa3:	mov    esi,0x7a823712
  426fa8:	imul   esp,DWORD PTR [edx-0x2d],0x8436722c
  426faf:	pusha  
  426fb0:	mov    ?,WORD PTR [esi-0x28]
  426fb3:	jg     0x426f46
  426fb5:	push   es
  426fb6:	sub    DWORD PTR [ebp-0x5d],esp
  426fb9:	mov    ebp,0xfae8e07b
  426fbe:	jne    0x426f59
  426fc0:	mov    ah,0x29
  426fc2:	aam    0xc9
  426fc4:	mov    edi,0x1294c15e
  426fc9:	shr    DWORD PTR [esi],1
  426fcb:	fst    DWORD PTR [eax]
  426fcd:	mov    edx,0x7a694434
  426fd2:	icebp  
  426fd3:	addr16 mov dl,0x3d
  426fd6:	cmp    eax,0x64a0ece6
  426fdb:	dec    esi
  426fdc:	pop    eax
  426fdd:	mov    eax,ds:0x1fa00442
  426fe2:	repnz out dx,al
  426fe4:	ja     0x427024
  426fe6:	out    dx,al
  426fe7:	dec    ebx
  426fe8:	arpl   WORD PTR [ecx],di
  426fea:	icebp  
  426feb:	daa    
  426fec:	mov    ds:0xbc83916f,al
  426ff1:	lahf   
  426ff2:	sbb    al,0xcc
  426ff4:	test   eax,0x1ca038e1
  426ff9:	shl    DWORD PTR [ebx+0x3b],1
  426ffc:	mov    ds:0xb82c8d4d,eax
  427001:	and    BYTE PTR [edi+0x1a],dl
  427004:	xchg   esp,eax
  427005:	xchg   edi,eax
  427006:	fidivr DWORD PTR [ebp-0x44fe1a0f]
  42700c:	push   edi
  42700d:	jl     0x427040
  42700f:	mov    ds:0x56e7c934,al
  427014:	ds stos DWORD PTR es:[edi],eax
  427016:	sub    eax,0x68e1f7c4
  42701b:	sbb    al,0x76
  42701d:	xchg   esp,eax
  42701e:	cwde   
  42701f:	push   es
  427020:	fcompp 
  427022:	push   edx
  427023:	mov    WORD PTR [ecx-0x50432feb],?
  427029:	jb     0x426fce
  42702b:	cmp    al,0xd2
  42702d:	xchg   esp,eax
  42702e:	iret   
  42702f:	in     al,0x6a
  427031:	imul   DWORD PTR [esp+eiz*4+0x57]
  427035:	pusha  
  427036:	ds popf 
  427038:	in     eax,dx
  427039:	mov    bl,0x40
  42703b:	not    DWORD PTR ds:0xdb72e39c
  427041:	mov    bh,BYTE PTR [ecx-0x24939662]
  427047:	rcr    BYTE PTR [ecx+0x1e27adbe],1
  42704d:	imul   eax,DWORD PTR [edx],0x7f6a18f2
  427053:	mov    dl,0x26
  427055:	pop    ebx
  427056:	push   es
  427057:	add    al,0x1b
  427059:	fild   WORD PTR [edx+0x6eb4f299]
  42705f:	test   al,0xff
  427061:	das    
  427062:	shr    edi,1
  427064:	mov    bl,0x64
  427066:	in     al,0x2a
  427068:	outs   dx,BYTE PTR ds:[esi]
  427069:	aam    0x9e
  42706b:	adc    BYTE PTR [ecx-0x65],0x37
  42706f:	push   ss
  427070:	ret    
  427071:	test   eax,0xb1561994
  427076:	pop    edx
  427077:	or     dh,al
  427079:	mov    ebp,0x46e6147a
  42707e:	bound  esi,QWORD PTR [eax+eax*8-0x3d98bd90]
  427085:	or     esi,edi
  427087:	popf   
  427088:	dec    eax
  427089:	sub    dh,BYTE PTR [ecx]
  42708b:	and    esp,ebp
  42708d:	push   eax
  42708e:	jle    0x4270ae
  427090:	out    dx,al
  427091:	sub    ecx,ebp
  427093:	fidiv  WORD PTR [esi]
  427095:	stos   DWORD PTR es:[edi],eax
  427096:	mov    dl,0xff
  427098:	sahf   
  427099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42709a:	jge    0x4270ad
  42709c:	(bad)  
  42709d:	(bad)  
  42709e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42709f:	mov    DWORD PTR [eax+eiz*2-0x2c47b320],0x71260561
  4270aa:	push   ecx
  4270ab:	les    ebx,FWORD PTR [edi]
  4270ad:	sbb    BYTE PTR [edx],al
  4270af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270b0:	xchg   esi,eax
  4270b1:	and    esp,ecx
  4270b3:	sbb    ebp,DWORD PTR [ebp-0x31933fa6]
  4270b9:	push   edi
  4270ba:	fstp   DWORD PTR [esi+0x17]
  4270bd:	clc    
  4270be:	lock test BYTE PTR [ebx+0x40c38ea8],0xef
  4270c6:	in     eax,0x22
  4270c8:	mov    BYTE PTR [esi],al
  4270ca:	fsubr  QWORD PTR [edx]
  4270cc:	jg     0x427130
  4270ce:	cmc    
  4270cf:	ja     0x4270b3
  4270d1:	mov    ah,0x6
  4270d3:	pop    ds
  4270d4:	push   ebx
  4270d5:	repz inc edx
  4270d7:	enter  0x81bd,0xf0
  4270db:	pop    edi
  4270dc:	shl    DWORD PTR [edi+ecx*4-0x26],cl
  4270e0:	and    al,0x90
  4270e2:	jmp    FWORD PTR [esi+eiz*8]
  4270e5:	outs   dx,DWORD PTR ds:[esi]
  4270e6:	sbb    ah,BYTE PTR [edi-0x1817dfd2]
  4270ec:	daa    
  4270ed:	cmc    
  4270ee:	mov    ch,0x80
  4270f0:	loopne 0x427119
  4270f2:	push   edi
  4270f3:	je     0x42713f
  4270f5:	rcl    bl,0x84
  4270f8:	fidivr WORD PTR [edx+0x32fc3c54]
  4270fe:	xor    al,0x92
  427100:	push   ss
  427101:	out    0x7c,al
  427103:	dec    esp
  427104:	sti    
  427105:	xchg   edx,eax
  427106:	push   esp
  427107:	jge    0x4270e9
  427109:	inc    edi
  42710a:	loop   0x4270fd
  42710c:	push   esi
  42710d:	push   ds
  42710e:	or     dl,cl
  427110:	scas   al,BYTE PTR es:[edi]
  427111:	arpl   WORD PTR [ebx+0x47],sp
  427114:	les    edx,FWORD PTR [ebx+ebp*8-0x33]
  427118:	xchg   ebx,eax
  427119:	hlt    
  42711a:	out    dx,al
  42711b:	dec    edx
  42711c:	xchg   BYTE PTR [ecx+0x11],dl
  42711f:	ss jg  0x4270f6
  427122:	loope  0x427160
  427124:	(bad)  
  427125:	ins    BYTE PTR es:[edi],dx
  427126:	adc    edi,DWORD PTR [eax]
  427128:	inc    esp
  427129:	jg     0x427145
  42712b:	(bad)  
  42712c:	mov    al,ds:0xa6298572
  427131:	loopne 0x4271af
  427133:	mov    bh,0x62
  427135:	popa   
  427136:	(bad)  
  427137:	ja     0x427111
  427139:	rcr    DWORD PTR [edx],cl
  42713b:	dec    edx
  42713c:	sbb    BYTE PTR [edi-0x77c08dc5],0xa9
  427143:	mov    BYTE PTR [ecx+0x29b3b1ef],dh
  427149:	cmp    ebp,ebx
  42714b:	push   ebp
  42714c:	sub    DWORD PTR [ebx+0x1201b73b],esp
  427152:	cli    
  427153:	xchg   ecx,eax
  427154:	and    eax,0x901eb31e
  427159:	aaa    
  42715a:	mov    ebx,?
  42715c:	mov    ch,0xf9
  42715e:	xor    BYTE PTR [edi-0x350dce8f],0x54
  427165:	mov    ecx,0x3168e74c
  42716a:	adc    al,0x58
  42716c:	xlat   BYTE PTR ds:[ebx]
  42716d:	jg     0x4270f5
  42716f:	cmp    al,0x0
  427171:	frstor [edx-0x68]
  427174:	je     0x427122
  427176:	pop    esi
  427177:	inc    esp
  427178:	adc    eax,0xd36be96f
  42717d:	ret    
  42717e:	shl    DWORD PTR [eax+edx*1-0x3e864172],0x52
  427186:	xchg   esp,eax
  427187:	js     0x427198
  427189:	mov    eax,ds:0xd79eb10b
  42718e:	retf   0x1992
  427191:	ret    0x1481
  427194:	repz (bad) 
  427197:	jo     0x427208
  427199:	or     ebx,0x71
  42719c:	inc    esi
  42719d:	pushf  
  42719e:	js     0x427145
  4271a0:	bound  ebx,QWORD PTR [ebp+0x22c4d27e]
  4271a6:	mov    ds,WORD PTR [edi-0x5c552380]
  4271ac:	dec    ebx
  4271ad:	add    BYTE PTR [eax],al
  4271af:	add    BYTE PTR [eax],al
  4271b1:	add    BYTE PTR [ebx],ch
  4271b3:	xchg   DWORD PTR [ebp-0x1f],esi
  4271b6:	std    
  4271b7:	repz mov edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	pop    es
  4271bf:	scas   al,BYTE PTR es:[edi]
  4271c0:	adc    ah,bh
  4271c2:	mov    eax,ds:0xf30001e9
  4271c7:	add    al,0x0
  4271c9:	add    BYTE PTR [ebx+0x6e],bl
  4271cc:	mov    ch,0x16
  4271ce:	das    
  4271cf:	hlt    
  4271d0:	xor    DWORD PTR [ecx-0x62500879],ecx
  4271d6:	cs push ebp
  4271d8:	and    eax,0x89b04924
  4271dd:	test   BYTE PTR ds:0x66d249db,dh
  4271e3:	xor    edi,ecx
  4271e5:	out    0x2b,eax
  4271e7:	jg     0x4271a3
  4271e9:	and    esp,edx
  4271eb:	mov    ds,WORD PTR [ecx+0x25]
  4271ee:	sub    BYTE PTR [edx],ah
  4271f0:	repz or esi,ebp
  4271f3:	lahf   
  4271f4:	mov    esp,0xb7ecd7a8
  4271f9:	jbe    0x427268
  4271fb:	rol    BYTE PTR [eax],0xf4
  4271fe:	mov    cl,ah
  427200:	in     eax,0xae
  427202:	dec    ebx
  427203:	push   ebx
  427204:	xor    al,0x62
  427206:	gs in  al,0x78
  427209:	mov    DWORD PTR [ebx],edi
  42720b:	cmp    al,0x39
  42720d:	cdq    
  42720e:	aaa    
  42720f:	shl    DWORD PTR ds:0xb2b227fa,1
  427215:	mov    dh,0xbf
  427217:	ins    BYTE PTR es:[edi],dx
  427218:	div    BYTE PTR [eax]
  42721a:	ins    BYTE PTR es:[edi],dx
  42721b:	mov    DWORD PTR [ecx],0x5f92528e
  427221:	mov    ecx,0xe691943e
  427226:	sbb    ah,dh
  427228:	mov    dl,0x84
  42722a:	fwait
  42722b:	lods   al,BYTE PTR ds:[esi]
  42722c:	add    eax,0x683d1360
  427231:	and    esp,DWORD PTR [ebx-0x30]
  427234:	mov    ch,0xe3
  427236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427237:	push   edi
  427238:	sbb    DWORD PTR [eax],eax
  42723a:	call   0x64d2:0x5f969d62
  427241:	clc    
  427242:	or     ebp,edi
  427244:	mov    es:0x56f549e6,al
  42724a:	lods   eax,DWORD PTR ds:[esi]
  42724b:	xor    cl,BYTE PTR [eax+0x4c]
  42724e:	fldcw  WORD PTR [edi]
  427250:	lea    edi,[edi+0x24]
  427253:	pop    ebx
  427254:	push   ebp
  427255:	pop    esp
  427256:	add    DWORD PTR [eax-0x69532481],ebp
  42725c:	cmp    DWORD PTR [edx-0x416863],ebx
  427262:	mov    cl,0x99
  427264:	daa    
  427265:	cmp    al,0xe9
  427267:	jnp    0x4271fb
  427269:	fisttp WORD PTR [edi+0x9]
  42726c:	jne    0x42727c
  42726e:	cmp    bl,BYTE PTR [ebx+0x72fc123]
  427274:	mov    edi,0x24131966
  427279:	repz jnp 0x4272c0
  42727c:	mov    ds:0x3a4e05e8,al
  427281:	inc    esp
  427282:	mov    al,0xf2
  427284:	inc    eax
  427285:	mov    BYTE PTR ds:0x427d865f,bh
  42728b:	rcr    BYTE PTR [ecx],1
  42728d:	xchg   edx,eax
  42728e:	ret    
  42728f:	mov    bl,0x94
  427291:	aad    0xc0
  427293:	aaa    
  427294:	arpl   WORD PTR [eax-0x21df22b5],si
  42729a:	jnp    0x4272df
  42729c:	inc    edx
  42729d:	bound  edx,QWORD PTR [eax]
  42729f:	icebp  
  4272a0:	push   edx
  4272a1:	test   eax,0x864bf901
  4272a6:	loope  0x4272bb
  4272a8:	daa    
  4272a9:	in     eax,dx
  4272aa:	mov    al,0x6b
  4272ac:	les    ebp,FWORD PTR [ebp+ebp*1-0x2b4b6bb1]
  4272b3:	adc    ecx,esp
  4272b5:	mov    bh,0x81
  4272b7:	xchg   DWORD PTR [ebx+0x1f],ebx
  4272ba:	cmc    
  4272bb:	in     al,dx
  4272bc:	sar    DWORD PTR [edx+0x1e7efe29],0x37
  4272c3:	int3   
  4272c4:	int    0x6a
  4272c6:	mov    dh,0xab
  4272c8:	xchg   esi,eax
  4272c9:	dec    ecx
  4272ca:	fmul   DWORD PTR [ecx-0x3]
  4272cd:	mov    cl,0xd0
  4272cf:	arpl   sp,cx
  4272d1:	jo     0x4272e3
  4272d3:	pop    ss
  4272d4:	mov    edi,0xc9491860
  4272d9:	int    0xac
  4272db:	inc    ebp
  4272dc:	dec    eax
  4272dd:	leave  
  4272de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272df:	(bad)  [edi]
  4272e1:	mov    ebp,0x2c1ef58e
  4272e6:	call   0xf09262f
  4272eb:	jb     0x427331
  4272ed:	fwait
  4272ee:	inc    ebp
  4272ef:	outs   dx,DWORD PTR ds:[esi]
  4272f0:	jae    0x4272ad
  4272f2:	(bad)  
  4272f4:	mov    cl,0x8
  4272f6:	inc    ecx
  4272f7:	popf   
  4272f8:	xor    eax,ebx
  4272fa:	sbb    BYTE PTR ds:0xc168dbcf,dl
  427300:	ins    BYTE PTR es:[edi],dx
  427301:	jnp    0x4272ee
  427303:	arpl   WORD PTR [eax],cx
  427305:	out    0xd6,al
  427307:	sub    dh,bh
  427309:	inc    ecx
  42730a:	mov    ecx,0x59664688
  42730f:	das    
  427310:	hlt    
  427311:	push   ss
  427312:	mov    ecx,0x1e0416b1
  427317:	hlt    
  427318:	add    DWORD PTR [eax],eax
  42731a:	stos   BYTE PTR es:[edi],al
  42731b:	mov    edx,?
  42731d:	adc    BYTE PTR [esi],cl
  42731f:	dec    edi
  427320:	(bad)  [ecx+0x78]
  427323:	enter  0xa673,0xef
  427327:	nop
  427328:	dec    edx
  427329:	sbb    BYTE PTR [eax],0xf2
  42732c:	out    0x63,eax
  42732e:	aad    0x4f
  427330:	inc    DWORD PTR [edx-0x540b542f]
  427336:	shl    BYTE PTR ds:0x3dfee2df,1
  42733c:	mov    ah,0xd6
  42733e:	xchg   ecx,eax
  42733f:	add    ecx,DWORD PTR [eax-0x76]
  427342:	sub    edx,edx
  427344:	mov    ch,0x10
  427346:	adc    al,0x36
  427348:	and    ebx,DWORD PTR [edx-0x208f5661]
  42734e:	inc    edx
  42734f:	push   esi
  427350:	inc    DWORD PTR ds:[eax+esi*1]
  427354:	and    bl,dh
  427356:	pop    edx
  427357:	retf   
  427358:	out    0xf,eax
  42735a:	adc    DWORD PTR [ecx],eax
  42735c:	fiadd  DWORD PTR [eax-0x6ff86dc5]
  427362:	ficomp WORD PTR [edi-0x60]
  427365:	(bad)  
  427368:	pop    esp
  427369:	xchg   esi,eax
  42736a:	pop    ss
  42736b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42736c:	popf   
  42736d:	(bad)  
  42736e:	or     BYTE PTR [edx],bh
  427370:	mov    ss,edi
  427372:	xchg   esi,eax
  427373:	or     BYTE PTR fs:[edx],al
  427376:	jo     0x427379
  427378:	ror    DWORD PTR [ebx-0x65162cd3],cl
  42737e:	imul   ecx,DWORD PTR [ebx+0x50],0xffffffe3
  427382:	call   0xa603:0x492dd289
  427389:	mov    edx,ebx
  42738b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42738c:	jnp    0x4273de
  42738e:	icebp  
  42738f:	dec    eax
  427390:	pop    eax
  427391:	or     eax,0x31e6d874
  427396:	push   eax
  427397:	fimul  DWORD PTR [edx]
  427399:	out    0xd6,eax
  42739b:	mov    fs,eax
  42739d:	fild   WORD PTR [edx-0x17]
  4273a0:	ret    
  4273a1:	ss push 0x63
  4273a4:	shl    DWORD PTR [edi+0x38],1
  4273a7:	pop    esp
  4273a8:	jecxz  0x427383
  4273aa:	out    dx,al
  4273ab:	add    eax,0x8f2b9c19
  4273b0:	jne    0x42734a
  4273b2:	jb     0x4273cb
  4273b4:	cmp    eax,0xb534f2e0
  4273b9:	int    0x1
  4273bb:	pop    ds
  4273bc:	shl    DWORD PTR [edx+0x78f4c636],1
  4273c2:	mov    edi,0x112d7273
  4273c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273c8:	mov    esp,0x9f7926dc
  4273cd:	retf   
  4273ce:	cmove  edx,DWORD PTR [ebp+0x574d22c7]
  4273d5:	xchg   esp,eax
  4273d6:	fwait
  4273d7:	inc    esi
  4273d8:	add    BYTE PTR [edi],al
  4273da:	repnz nop
  4273dc:	inc    ebx
  4273dd:	dec    ecx
  4273de:	es xor al,0xa9
  4273e1:	jbe    0x4273b9
  4273e3:	ins    BYTE PTR es:[edi],dx
  4273e4:	in     eax,dx
  4273e5:	lock mov ch,0x45
  4273e8:	fist   WORD PTR [ebp-0x43]
  4273eb:	mov    cl,0xca
  4273ed:	push   0xe52afbda
  4273f2:	sti    
  4273f3:	aaa    
  4273f4:	lea    edi,[ebx]
  4273f6:	sar    dl,0x8e
  4273f9:	push   ecx
  4273fa:	call   0x6da7:0x273f29c5
  427401:	dec    eax
  427402:	mov    dh,0x81
  427404:	fidivr DWORD PTR [eax-0x5ae246c4]
  42740a:	lahf   
  42740b:	test   eax,0xc1733bfb
  427410:	fst    QWORD PTR [edx+0x4c98bd9f]
  427416:	fcomp  QWORD PTR [edx-0x63]
  427419:	gs add eax,0xf7c0e3a8
  42741f:	xor    al,0xc3
  427421:	mov    ch,0x6b
  427423:	inc    ecx
  427424:	adc    bl,dh
  427426:	icebp  
  427427:	xlat   BYTE PTR ds:[ebx]
  427428:	mov    bh,0xec
  42742a:	inc    esp
  42742b:	test   eax,0x6e673eab
  427430:	mov    BYTE PTR [edx+0x3a],dh
  427433:	dec    eax
  427434:	pandn  mm3,QWORD PTR [ecx+0x15]
  427438:	xor    eax,0x21ad9e4e
  42743d:	xor    ch,BYTE PTR [ebx-0x5567a5f6]
  427443:	ins    BYTE PTR es:[edi],dx
  427444:	inc    esi
  427445:	mov    cl,0x3c
  427447:	xchg   edx,eax
  427448:	adc    esi,ebp
  42744a:	daa    
  42744b:	aad    0xe9
  42744d:	push   esi
  42744e:	push   0x6dd635a9
  427453:	pop    es
  427454:	outs   dx,DWORD PTR ds:[esi]
  427455:	call   FWORD PTR [ecx-0xa]
  427458:	jecxz  0x42743f
  42745a:	xchg   esp,eax
  42745b:	fdivr  QWORD PTR [edx-0x3755b661]
  427461:	xchg   ebp,eax
  427462:	pop    esi
  427463:	bound  ecx,QWORD PTR [edi]
  427465:	mov    ds:0x94d12753,al
  42746a:	data16 (bad) 
  42746c:	(bad)  
  42746d:	xor    DWORD PTR [ebp+0x2967a8af],eax
  427473:	push   0xdb6b40b0
  427478:	hlt    
  427479:	xchg   edi,eax
  42747a:	or     DWORD PTR [esi+0x4ea0993c],ebp
  427480:	cmp    dh,BYTE PTR [eax+edi*1]
  427483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427484:	jno    0x4274a6
  427486:	inc    esp
  427487:	aad    0x44
  427489:	mov    edx,DWORD PTR ds:0xb398227a
  42748f:	sub    ch,0x60
  427492:	jmp    0x42745b
  427494:	std    
  427495:	xchg   esp,eax
  427496:	pop    eax
  427497:	cmp    esp,esi
  427499:	(bad)  
  42749a:	aaa    
  42749b:	jle    0x427495
  42749d:	push   0x20
  42749f:	push   esi
  4274a0:	popf   
  4274a1:	call   0x13b0db27
  4274a6:	retf   0x21fe
  4274a9:	test   BYTE PTR ds:0xbd084d6,bh
  4274af:	cli    
  4274b0:	pop    eax
  4274b1:	pop    es
  4274b2:	bound  ebp,QWORD PTR [esi]
  4274b4:	mov    esi,edi
  4274b6:	or     al,0x43
  4274b8:	inc    esi
  4274b9:	xlat   BYTE PTR ds:[ebx]
  4274ba:	mov    eax,0xb77bb0b5
  4274bf:	mov    BYTE PTR ds:[ebx],cl
  4274c2:	cmp    eax,0x93223046
  4274c7:	mov    ebx,0x57d47ed9
  4274cc:	pop    es
  4274cd:	dec    ebx
  4274ce:	adc    DWORD PTR [ecx-0x25],esp
  4274d1:	pop    eax
  4274d2:	repnz outs dx,BYTE PTR ds:[esi]
  4274d4:	mov    ds:0xe3809e55,eax
  4274d9:	into   
  4274da:	cmc    
  4274db:	sbb    DWORD PTR [ecx-0x3a],edi
  4274de:	and    BYTE PTR [edi+0x2],bh
  4274e1:	mov    dh,0x9d
  4274e3:	and    ah,cl
  4274e5:	push   ebp
  4274e6:	cmp    BYTE PTR [esi+0x58],bl
  4274e9:	and    BYTE PTR [edi-0x6c37cebb],ah
  4274ef:	mov    dl,0x85
  4274f1:	add    DWORD PTR [eax+0x54],eax
  4274f4:	jno    0x4274cc
  4274f6:	iret   
  4274f7:	push   ecx
  4274f8:	push   es
  4274f9:	sbb    edx,DWORD PTR [ebx]
  4274fb:	mov    al,ds:0xa9259abd
  427500:	pop    es
  427501:	bound  edx,QWORD PTR [ebx+0x56]
  427504:	add    bh,0x6a
  427507:	sar    DWORD PTR [eax-0x192a4a27],0x69
  42750e:	cld    
  42750f:	mov    ebp,0x39d4f634
  427514:	sar    dh,1
  427516:	aad    0x42
  427518:	cmp    ah,BYTE PTR [edi+0x50]
  42751b:	arpl   WORD PTR [edi-0x3d0694c8],si
  427521:	and    DWORD PTR [edi],esp
  427523:	outs   dx,BYTE PTR ds:[esi]
  427524:	scas   eax,DWORD PTR es:[edi]
  427525:	and    edx,ebx
  427527:	push   edi
  427528:	sub    DWORD PTR [ecx+0x40],edi
  42752b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42752c:	sbb    ecx,DWORD PTR [edx+0x67]
  42752f:	hlt    
  427530:	fs push ebx
  427532:	sbb    esp,DWORD PTR [edi]
  427534:	and    esi,DWORD PTR [esi-0x50]
  427537:	sbb    al,0x9e
  427539:	or     esp,esp
  42753b:	xchg   esi,eax
  42753c:	scas   eax,DWORD PTR es:[edi]
  42753d:	imul   ebx,DWORD PTR es:[eax-0x7a469cc2],0x3d524fb7
  427548:	dec    eax
  427549:	or     edx,DWORD PTR [ebp+0x24]
  42754c:	push   ss
  42754d:	sbb    BYTE PTR [ebp-0x40],dl
  427550:	xchg   ecx,ebx
  427552:	cmp    DWORD PTR [esi],edx
  427554:	enter  0x6fb,0x69
  427558:	rcr    BYTE PTR [esi],0x62
  42755b:	xor    al,0x89
  42755d:	mov    ah,0xa4
  42755f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427560:	stos   DWORD PTR es:[edi],eax
  427561:	pop    edx
  427562:	mov    bh,0xa2
  427564:	lds    esp,FWORD PTR [esi+0x5a15465d]
  42756a:	sbb    BYTE PTR [esi+0x6a],cl
  42756d:	pop    edi
  42756e:	lahf   
  42756f:	cmp    DWORD PTR [eax-0x256d9dd2],0xffffffbc
  427576:	push   cs
  427577:	ss dec ecx
  427579:	pop    edx
  42757a:	sahf   
  42757b:	mov    eax,ds:0xe883cb60
  427580:	push   esp
  427581:	das    
  427582:	pop    es
  427583:	and    al,0x26
  427585:	and    ebx,DWORD PTR [ecx+0x16]
  427588:	mov    dl,0x71
  42758a:	sub    edx,edx
  42758c:	popf   
  42758d:	sub    al,0x2b
  42758f:	int3   
  427590:	cmp    cl,cl
  427592:	pushf  
  427593:	popf   
  427594:	and    ebx,esi
  427596:	xchg   edi,eax
  427597:	dec    edi
  427598:	xchg   edx,eax
  427599:	out    0x78,al
  42759b:	pop    esi
  42759c:	pop    DWORD PTR [esi-0x7a6d1451]
  4275a2:	cmp    BYTE PTR ds:0xfdd482c3,ch
  4275a8:	(bad)  
  4275a9:	pop    esi
  4275aa:	xchg   edi,eax
  4275ab:	rcr    BYTE PTR [ecx+0x7d],cl
  4275ae:	xchg   esp,eax
  4275af:	and    al,0x9a
  4275b1:	sub    DWORD PTR [ecx-0x6a],esp
  4275b4:	push   edx
  4275b5:	loope  0x427554
  4275b7:	lods   al,BYTE PTR ds:[esi]
  4275b8:	xor    al,0x19
  4275ba:	inc    edx
  4275bb:	cmp    DWORD PTR [eax+0x4],0xd074f9d2
  4275c2:	xor    cl,bl
  4275c4:	mov    dh,0x41
  4275c6:	ret    0x35ba
  4275c9:	mov    ecx,0xab7f327f
  4275ce:	inc    eax
  4275cf:	nop
  4275d0:	mov    al,ds:0x63fa957
  4275d5:	push   0x1e
  4275d7:	fsub   DWORD PTR [bp+di+0x21]
  4275db:	fisttp WORD PTR [ebx]
  4275dd:	inc    edi
  4275de:	mov    dl,0xf4
  4275e0:	mov    eax,0x6b28577a
  4275e5:	retf   0xba9f
  4275e8:	push   esp
  4275e9:	imul   ebx,ebp,0xffffffce
  4275ec:	cdq    
  4275ed:	jne    0x427626
  4275ef:	sbb    eax,0xb17a55e5
  4275f4:	sub    DWORD PTR [edi],ecx
  4275f6:	dec    ecx
  4275f7:	push   cs
  4275f8:	call   0xb8b3:0xeb54c17b
  4275ff:	sub    DWORD PTR [edi],ecx
  427601:	wrmsr  
  427603:	fptan  
  427605:	cmc    
  427606:	add    esp,DWORD PTR [ecx+0x9fb9a6a]
  42760c:	cmp    cl,cl
  42760e:	xchg   BYTE PTR [ebx],bh
  427610:	lods   eax,DWORD PTR ds:[esi]
  427611:	mov    al,0x7e
  427613:	out    dx,al
  427614:	add    cl,BYTE PTR [ebp+0x3f8a8124]
  42761a:	clc    
  42761b:	xor    eax,DWORD PTR [esi+0x15165217]
  427621:	push   es
  427622:	and    edi,eax
  427624:	clc    
  427625:	das    
  427626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427627:	or     al,0xdd
  427629:	cmp    eax,0x206ea273
  42762e:	xor    edi,DWORD PTR [ebx-0x48]
  427631:	jmp    0x4c58:0x413d3b0b
  427638:	int    0x85
  42763a:	loope  0x4275d5
  42763c:	mov    DWORD PTR [eax],eax
  42763e:	jb     0x427679
  427640:	xlat   BYTE PTR ds:[ebx]
  427641:	fsubrp st(3),st
  427643:	lods   al,BYTE PTR ds:[esi]
  427644:	dec    eax
  427645:	mov    cl,0xf9
  427647:	xor    al,dh
  427649:	leave  
  42764a:	ja     0x42764c
  42764c:	push   ds
  42764d:	xchg   esp,eax
  42764e:	clc    
  42764f:	imul   ecx,DWORD PTR [ebp+eax*4-0x45],0x61
  427654:	nop
  427655:	or     edi,DWORD PTR fs:[eax]
  427658:	sub    ah,0x27
  42765b:	inc    ecx
  42765c:	jno    0x42766c
  42765e:	pop    ecx
  42765f:	add    BYTE PTR [ebx+0x2d],ah
  427662:	(bad)  
  427664:	cmovb  ebp,edi
  427667:	jge    0x427688
  427669:	or     al,0xad
  42766b:	inc    esp
  42766c:	push   esp
  42766d:	outs   dx,DWORD PTR ds:[esi]
  42766e:	out    0x41,eax
  427670:	ins    DWORD PTR es:[edi],dx
  427671:	lahf   
  427672:	rdtsc  
  427674:	push   es
  427675:	in     eax,0xbf
  427677:	pop    ss
  427678:	pop    edx
  427679:	add    eax,0x1c3a8437
  42767e:	arpl   bp,si
  427680:	mov    ecx,0x32f5275e
  427685:	dec    esp
  427686:	(bad)  
  427687:	mov    edx,0x1807c12f
  42768c:	jo     0x4276d4
  42768e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42768f:	jo     0x4276cc
  427691:	pop    edx
  427692:	push   esp
  427693:	dec    ecx
  427694:	cmp    eax,eax
  427696:	jns    0x42766c
  427698:	(bad)  ds:0x940ede9a
  42769e:	mov    al,ds:0x378659f9
  4276a3:	enter  0xd87b,0x78
  4276a7:	mov    edi,0x1ad43b36
  4276ac:	(bad)
  4276b0:	or     ah,BYTE PTR [ebp-0x440a8d11]
  4276b6:	sbb    edx,DWORD PTR [eax-0x62544261]
  4276bc:	or     al,0x0
  4276be:	add    BYTE PTR [eax],al
  4276c0:	add    BYTE PTR [eax],al
  4276c2:	or     al,ah
  4276c4:	mov    eax,ds:0x5ef7eff7
  4276c9:	std    
  4276ca:	mov    ebp,0x91f91c3b
  4276cf:	idiv   BYTE PTR [ebx+0x1ee94ee]
  4276d5:	add    bl,dh
  4276d7:	add    al,0x0
  4276d9:	add    dl,cl
  4276db:	loope  0x427717
  4276dd:	cmovl  ebx,DWORD PTR [edx-0x1dde3d51]
  4276e4:	mov    eax,0xf3696985
  4276e9:	ins    BYTE PTR es:[edi],dx
  4276ea:	push   edi
  4276eb:	int3   
  4276ec:	xlat   BYTE PTR fs:[ebx]
  4276ee:	cs movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4276f1:	aad    0xc5
  4276f3:	icebp  
  4276f4:	popf   
  4276f5:	sbb    bh,bl
  4276f7:	pop    es
  4276f8:	rcl    DWORD PTR [esp+esi*8+0x49],0x78
  4276fd:	pop    edi
  4276fe:	out    dx,al
  4276ff:	add    DWORD PTR [ecx-0x75080c4],edi
  427705:	inc    ebx
  427706:	repz jae 0x42775b
  427709:	cmp    BYTE PTR [ecx-0x12ea2818],al
  42770f:	cmp    ah,al
  427711:	outs   dx,DWORD PTR ds:[esi]
  427712:	add    eax,0x4928f755
  427717:	dec    esp
  427718:	inc    esi
  427719:	cmp    DWORD PTR [ebx-0x2c],esi
  42771c:	pusha  
  42771d:	adc    al,0xec
  42771f:	sbb    DWORD PTR [esi-0x7f],ebx
  427722:	dec    esi
  427723:	jae    0x42778b
  427725:	sub    esp,DWORD PTR [ebx-0x6abadb5d]
  42772b:	pop    ebx
  42772c:	std    
  42772d:	mov    bh,0xdc
  42772f:	out    dx,eax
  427730:	fstp   DWORD PTR [edi+edi*4]
  427733:	call   0x6c7bed08
  427738:	mov    edi,0x12ac8183
  42773d:	mov    bl,0x44
  42773f:	hlt    
  427740:	mov    esp,0x482d981d
  427745:	jl     0x427785
  427747:	retf   0xcaa1
  42774a:	pushf  
  42774b:	iret   
  42774c:	mov    DWORD PTR [edi+0x68e11ab6],ecx
  427752:	lods   eax,DWORD PTR ds:[esi]
  427753:	inc    ebx
  427754:	adc    DWORD PTR [edi+ebx*2+0x5990757],ebp
  42775b:	test   BYTE PTR [ebp-0x1f],cl
  42775e:	sub    DWORD PTR [ebx],eax
  427760:	sahf   
  427761:	pop    edi
  427762:	ret    0x95a5
  427765:	outs   dx,BYTE PTR ds:[esi]
  427766:	mov    esp,0xd4f5afa
  42776b:	jl     0x42778d
  42776d:	pushw  ds
  42776f:	dec    ecx
  427770:	adc    al,0x27
  427772:	or     al,0x19
  427774:	push   0xffffffd3
  427776:	(bad)  
  427777:	jns    0x427783
  427779:	out    0x6a,al
  42777b:	hlt    
  42777c:	das    
  42777d:	call   FWORD PTR [edi+0x37]
  427780:	jl     0x427729
  427782:	jle    0x4277a2
  427784:	xor    BYTE PTR [eax-0x1147d81d],ch
  42778a:	test   al,0x1e
  42778c:	rcl    BYTE PTR [ebx-0x3f],1
  42778f:	scas   al,BYTE PTR es:[edi]
  427790:	dec    ebp
  427791:	cmp    BYTE PTR [ebx+ebp*8-0x6f],cl
  427795:	xchg   esp,eax
  427796:	test   DWORD PTR [esi-0xf485aa4],edi
  42779c:	jae    0x4277f1
  42779e:	jmp    0x42781a
  4277a0:	push   edi
  4277a1:	sub    BYTE PTR [eax+0x1f1b4dad],bl
  4277a7:	cs jmp 0x5d55:0x8bcd4196
  4277af:	mov    al,ds:0xf09c089b
  4277b4:	inc    esp
  4277b5:	fcom   DWORD PTR [ecx]
  4277b7:	sub    ebx,DWORD PTR [edx-0x11]
  4277ba:	xor    eax,0x615ba4b2
  4277bf:	pusha  
  4277c0:	mov    esp,0xd3480c7
  4277c5:	push   0xcd9ef865
  4277ca:	xchg   ebp,eax
  4277cb:	mov    dh,0x48
  4277cd:	push   0x2f919ac5
  4277d2:	xchg   BYTE PTR [esi-0x18],bl
  4277d5:	jge    0x42784f
  4277d7:	out    dx,al
  4277d8:	sub    DWORD PTR [ebx-0x12],esi
  4277db:	cli    
  4277dc:	pop    es
  4277dd:	sbb    BYTE PTR [ecx+0x19],bl
  4277e0:	test   eax,eax
  4277e2:	mov    ds:0x9b959e75,al
  4277e7:	jg     0x4277d3
  4277e9:	data16 mov bl,0x2
  4277ec:	pop    esp
  4277ed:	jno    0x427855
  4277ef:	mov    ebx,0x2c3130c2
  4277f4:	jmp    0x250478e9
  4277f9:	xchg   edi,eax
  4277fa:	inc    edi
  4277fb:	sub    BYTE PTR [edx+ebp*4-0x2abea169],ch
  427802:	mov    BYTE PTR [edi-0x49f7432f],cl
  427808:	loopne 0x42778c
  42780a:	arpl   WORD PTR [edx+0x4c],bx
  42780d:	popa   
  42780e:	push   eax
  42780f:	add    bl,bl
  427811:	arpl   WORD PTR ds:0xb71548b6,di
  427817:	cmp    BYTE PTR [ecx],ch
  427819:	cmp    eax,0x82a3d006
  42781e:	and    al,0x7
  427820:	jns    0x4277b4
  427822:	dec    ebx
  427823:	mov    ebp,0x5ffc586c
  427828:	push   ebp
  427829:	and    ch,BYTE PTR [eax-0x494aa29c]
  42782f:	mov    eax,DWORD PTR ds:0x864c488
  427835:	pop    ebx
  427836:	or     dh,BYTE PTR [ebx]
  427838:	and    esi,DWORD PTR [ebp+0x31]
  42783b:	aas    
  42783c:	arpl   WORD PTR [ebp+0x46],bp
  42783f:	stos   BYTE PTR es:[edi],al
  427840:	imul   DWORD PTR [ecx-0x6183919e]
  427846:	aas    
  427847:	sub    BYTE PTR [edx+0x73c5f51c],dh
  42784d:	pop    edx
  42784e:	loop   0x427831
  427850:	imul   DWORD PTR [ebx-0xb]
  427853:	(bad)  
  427854:	sbb    bl,BYTE PTR [edi-0x30]
  427857:	fcomip st,st(3)
  427859:	imul   edi,DWORD PTR [ebx-0x310d68a4],0x7d
  427860:	dec    edx
  427861:	add    eax,0xd9c37482
  427866:	mov    DWORD PTR [ebx+ebx*1+0x3f],eax
  42786a:	lea    esp,[ebx-0x1f]
  42786d:	mov    esi,0xdbb776c0
  427872:	out    0x96,al
  427874:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  427876:	stos   BYTE PTR es:[edi],al
  427877:	add    dl,cl
  427879:	push   ecx
  42787a:	adc    dl,BYTE PTR [ebx]
  42787c:	sbb    DWORD PTR [edx-0x36c68a0c],esi
  427882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427883:	sbb    dh,BYTE PTR [eax-0x5ff2ee4c]
  427889:	sub    BYTE PTR [si],al
  42788c:	pop    eax
  42788d:	jnp    0x42782f
  42788f:	inc    ebx
  427890:	adc    DWORD PTR [esi+0x60a1f7db],ebp
  427896:	enter  0x5a2,0xb1
  42789a:	dec    ebx
  42789b:	xor    al,0xa0
  42789d:	mov    eax,ds:0x83fcacb2
  4278a2:	imul   ecx,DWORD PTR [esi+ebp*1+0x79a7b1ed],0x1a
  4278aa:	push   ds
  4278ab:	push   ss
  4278ac:	jge    0x4278f9
  4278ae:	xchg   ebp,eax
  4278af:	nop
  4278b0:	jae    0x42784d
  4278b2:	sbb    al,0x34
  4278b4:	and    BYTE PTR [ebx+esi*4],0x6e
  4278b8:	mov    ds,WORD PTR [ebx]
  4278ba:	lock xor DWORD PTR [edx],esi
  4278bd:	mov    ds:0xdac8ed21,eax
  4278c2:	gs jns 0x427916
  4278c5:	jne    0x42784b
  4278c7:	xor    dh,bh
  4278c9:	stos   BYTE PTR es:[edi],al
  4278ca:	lock dec esi
  4278cc:	imul   edx,DWORD PTR [ebx-0x20],0xd161e94a
  4278d3:	dec    esp
  4278d4:	or     ah,cl
  4278d6:	(bad)  
  4278d7:	sub    dl,BYTE PTR [esi+0x2e]
  4278da:	outs   dx,DWORD PTR ds:[esi]
  4278db:	iret   
  4278dc:	push   edi
  4278dd:	mov    cs,WORD PTR [esi+0x70]
  4278e0:	retf   
  4278e1:	adc    al,BYTE PTR [ebx]
  4278e3:	lds    ebp,FWORD PTR ds:0x3dd73758
  4278e9:	lock sbb edx,DWORD PTR [edi-0x5a]
  4278ed:	sub    eax,0xa5f343d7
  4278f2:	mov    ch,BYTE PTR [edi+eiz*4+0x7d]
  4278f6:	pop    es
  4278f7:	or     esi,DWORD PTR ds:0x3f221ac8
  4278fd:	(bad)  
  4278fe:	cmp    eax,0x12c799f7
  427903:	mov    DWORD PTR [ebx],ebx
  427905:	ss cmp al,BYTE PTR cs:[edx]
  427909:	dec    esp
  42790a:	js     0x4278d7
  42790c:	pop    ebx
  42790d:	icebp  
  42790e:	mov    dh,0xb4
  427910:	or     bl,ah
  427912:	or     al,0x83
  427914:	sbb    bl,BYTE PTR [esi-0x23be73e5]
  42791a:	stos   DWORD PTR es:[edi],eax
  42791b:	mov    DWORD PTR [eax-0x3],edi
  42791e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42791f:	cli    
  427920:	jae    0x427906
  427922:	xchg   DWORD PTR [edx-0x17],ebp
  427925:	stc    
  427926:	and    BYTE PTR [edx-0x8],bl
  427929:	xchg   edx,eax
  42792a:	pop    ss
  42792b:	pusha  
  42792c:	mov    esp,DWORD PTR [ebp+0x1cb86dd2]
  427932:	jnp    0x427990
  427934:	stos   DWORD PTR es:[edi],eax
  427935:	lahf   
  427936:	inc    esp
  427937:	shl    DWORD PTR [ecx+ebx*2],1
  42793a:	into   
  42793b:	stos   BYTE PTR es:[edi],al
  42793c:	inc    DWORD PTR [esi]
  42793e:	inc    ebp
  42793f:	xor    edi,DWORD PTR [esp+esi*2]
  427942:	pop    esi
  427943:	popw   ds
  427945:	int3   
  427946:	(bad)  
  427947:	pop    edi
  427948:	inc    edi
  427949:	pop    esi
  42794a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42794b:	jns    0x427947
  42794d:	and    ebx,ebx
  42794f:	jmp    0x4278fb
  427951:	sbb    eax,0xe26a50c5
  427956:	test   al,0x57
  427958:	push   ss
  427959:	jbe    0x42797a
  42795b:	or     ebp,DWORD PTR [edi+0x2c]
  42795e:	push   ecx
  42795f:	(bad)  
  427960:	in     eax,dx
  427961:	jle    0x427988
  427963:	dec    ebx
  427964:	adc    ch,BYTE PTR cs:[eax-0xe]
  427968:	sub    BYTE PTR [ebx-0x25ace90f],ah
  42796e:	push   ecx
  42796f:	lods   al,BYTE PTR ds:[esi]
  427970:	mov    DWORD PTR [ebp-0x2a536ca2],eax
  427976:	nop
  427977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427978:	ss add eax,0xc5405ecb
  42797e:	dec    esp
  42797f:	cmp    al,ch
  427981:	es xchg esi,eax
  427983:	out    dx,al
  427984:	aad    0xf8
  427986:	sti    
  427987:	repz adc eax,0xecf702e
  42798d:	fs xor al,0xfc
  427990:	fstp   st(4)
  427992:	mov    dh,0xf7
  427994:	pusha  
  427995:	dec    ecx
  427996:	add    DWORD PTR [edx],esp
  427998:	dec    edx
  427999:	and    al,0x2a
  42799b:	mov    ah,0xb9
  42799d:	popf   
  42799e:	out    0xbc,al
  4279a0:	xor    al,bl
  4279a2:	sub    esi,DWORD PTR [ebx+0x1]
  4279a5:	add    eax,0x2c0a10a4
  4279aa:	mov    ebx,DWORD PTR [edi+0x5c]
  4279ad:	fwait
  4279ae:	jns    0x4279c0
  4279b0:	push   ss
  4279b1:	push   ds
  4279b2:	stos   DWORD PTR es:[edi],eax
  4279b3:	out    dx,eax
  4279b4:	cmp    DWORD PTR [edi+0x26],eax
  4279b7:	jbe    0x4279ed
  4279b9:	inc    eax
  4279ba:	ins    DWORD PTR es:[edi],dx
  4279bb:	or     BYTE PTR [edi],bh
  4279bd:	aas    
  4279be:	loop   0x4279d1
  4279c0:	xchg   ebx,eax
  4279c1:	jp     0x42794a
  4279c3:	dec    eax
  4279c4:	hlt    
  4279c5:	mov    ds:0x82997062,eax
  4279ca:	mov    cl,0xf6
  4279cc:	adc    BYTE PTR [ebx+0x1795fea0],bl
  4279d2:	inc    ebx
  4279d3:	and    eax,0x6116278a
  4279d8:	jmp    0x427a38
  4279da:	xor    DWORD PTR [edi+ebx*4-0x26c80f37],edi
  4279e1:	inc    eax
  4279e2:	call   0x585f:0x5b6ca5f9
  4279e9:	xor    DWORD PTR [ecx],ebp
  4279eb:	xlat   BYTE PTR ds:[ebx]
  4279ec:	and    DWORD PTR [esi+0x500f4905],ebp
  4279f2:	cs jge 0x4279d3
  4279f5:	movnti DWORD PTR [eax],edi
  4279f8:	jg     0x4279e3
  4279fa:	xor    edi,ebp
  4279fc:	cmp    cl,0xe4
  4279ff:	stos   DWORD PTR es:[edi],eax
  427a00:	int    0xaa
  427a02:	sbb    cl,BYTE PTR [ebp+0x18]
  427a05:	nop
  427a06:	xchg   ebp,eax
  427a07:	ret    0x4ac7
  427a0a:	lds    edi,FWORD PTR [eax+0x5e]
  427a0d:	inc    DWORD PTR [ebx+0xe2936aa]
  427a13:	xor    edi,edi
  427a15:	mov    dh,ah
  427a17:	stos   BYTE PTR es:[edi],al
  427a18:	pop    ecx
  427a19:	out    dx,eax
  427a1a:	dec    eax
  427a1b:	loopne 0x4279be
  427a1d:	mov    dl,BYTE PTR [eax+eiz*4]
  427a20:	sub    al,0x93
  427a22:	aas    
  427a23:	mov    edx,0x2b933e6e
  427a28:	xchg   ecx,eax
  427a29:	lock loopne 0x427a03
  427a2c:	pop    edx
  427a2d:	bound  ebp,QWORD PTR [ebx-0x59673877]
  427a33:	fldcw  WORD PTR [edx]
  427a35:	cmp    BYTE PTR [ebx-0x7e5673c0],cl
  427a3b:	stos   DWORD PTR es:[edi],eax
  427a3c:	cmp    esp,DWORD PTR [ebx]
  427a3e:	mov    ah,0xa2
  427a40:	mov    bl,0x89
  427a42:	cmp    DWORD PTR [eax+eiz*4-0x63],esp
  427a46:	inc    eax
  427a47:	outs   dx,DWORD PTR ds:[esi]
  427a48:	add    DWORD PTR [ebx],esp
  427a4a:	add    ebx,DWORD PTR [si-0x69]
  427a4e:	mov    BYTE PTR [edx],0x38
  427a51:	jmp    0x427a9f
  427a53:	push   esp
  427a54:	iret   
  427a55:	push   0x57
  427a57:	xchg   DWORD PTR [esi-0x16],edi
  427a5a:	add    ch,BYTE PTR [ecx-0x7e]
  427a5d:	pop    esp
  427a5e:	retf   
  427a5f:	js     0x427a53
  427a61:	push   edi
  427a62:	pop    edi
  427a63:	outs   dx,BYTE PTR ds:[esi]
  427a64:	vmulsd xmm6,xmm6,QWORD PTR [ebx+0x5f]
  427a69:	icebp  
  427a6a:	add    esi,DWORD PTR [ebp+0x7d]
  427a6d:	lods   eax,DWORD PTR ds:[esi]
  427a6e:	add    edx,DWORD PTR ds:0x38765084
  427a74:	test   al,0x8d
  427a76:	or     al,0x38
  427a78:	std    
  427a79:	(bad)  
  427a7b:	mov    BYTE PTR [edx+0x1e],dh
  427a7e:	nop
  427a7f:	and    DWORD PTR [ebp+0xc61abdc],edx
  427a85:	outs   dx,BYTE PTR ds:[esi]
  427a86:	popa   
  427a87:	mov    ah,0xc1
  427a89:	int3   
  427a8a:	adc    al,0xe1
  427a8c:	dec    esi
  427a8d:	repnz int3 
  427a8f:	push   ds
  427a90:	les    ebx,FWORD PTR [eax+eax*4-0x39]
  427a94:	push   esp
  427a95:	cmp    al,0xe8
  427a97:	jbe    0x427a87
  427a99:	loopne 0x427ab2
  427a9b:	and    eax,0x18e07975
  427aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427aa1:	test   al,0x7f
  427aa3:	mov    esp,0x376d8a17
  427aa8:	scas   eax,DWORD PTR es:[edi]
  427aa9:	push   eax
  427aaa:	outs   dx,DWORD PTR ds:[esi]
  427aab:	call   0xf5405e8b
  427ab0:	cmp    al,0x53
  427ab2:	xchg   edx,eax
  427ab3:	inc    esi
  427ab4:	and    eax,0x7246259d
  427ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427aba:	sub    DWORD PTR [edi],0x55
  427abd:	jae    0x427a83
  427abf:	dec    eax
  427ac0:	in     eax,0xbc
  427ac2:	(bad)  [ebx+0x44]
  427ac5:	pop    ebx
  427ac6:	and    dh,ch
  427ac8:	nop
  427ac9:	and    esi,DWORD PTR [eax-0x39df6b3]
  427acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ad0:	mov    eax,ds:0x9abf7eab
  427ad5:	and    eax,0xfc1782d2
  427ada:	pop    ss
  427adb:	inc    eax
  427adc:	push   edx
  427add:	ins    DWORD PTR es:[edi],dx
  427ade:	(bad)  
  427adf:	stc    
  427ae0:	imul   ebp,edi,0xfffffff2
  427ae3:	dec    esi
  427ae4:	lea    edx,[eax+0x6d]
  427ae7:	mov    ecx,0x69ab8c41
  427aec:	cmp    cl,bl
  427aee:	hlt    
  427aef:	outs   dx,BYTE PTR ds:[esi]
  427af0:	(bad)  
  427af1:	jnp    0x427ae3
  427af3:	xlat   BYTE PTR ds:[ebx]
  427af4:	int    0x3c
  427af6:	aad    0xe5
  427af8:	ror    al,cl
  427afa:	imul   edi,DWORD PTR [ecx],0x30
  427afd:	mov    esp,0xbc146b0d
  427b02:	jp     0x427b05
  427b04:	or     cl,BYTE PTR [ebx+0x318ec5ae]
  427b0a:	push   ss
  427b0b:	(bad)
  427b0e:	sub    al,BYTE PTR [edx]
  427b10:	xchg   edi,eax
  427b11:	sbb    edi,edi
  427b13:	jbe    0x427ab7
  427b15:	lods   eax,DWORD PTR ds:[esi]
  427b16:	add    DWORD PTR [edx],0xed47230f
  427b1c:	mov    edi,0x9fe31bb2
  427b21:	push   cs
  427b22:	dec    edx
  427b23:	xchg   edx,eax
  427b24:	js     0x427ad2
  427b26:	inc    edi
  427b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b28:	sub    DWORD PTR [edi-0x42ce2fab],eax
  427b2e:	stos   DWORD PTR es:[edi],eax
  427b2f:	js     0x427ae2
  427b31:	add    al,dh
  427b33:	jbe    0x427af2
  427b35:	cdq    
  427b36:	mov    ebp,DWORD PTR [eax]
  427b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b39:	div    eax
  427b3b:	rol    BYTE PTR [edx-0x1de9ab3d],0xd4
  427b42:	mov    cl,0xad
  427b44:	or     eax,0x683a894c
  427b49:	jge    0x427add
  427b4b:	add    ebx,DWORD PTR [esi]
  427b4d:	loope  0x427aff
  427b4f:	xchg   edi,eax
  427b50:	pop    esi
  427b51:	inc    esp
  427b52:	xchg   esp,edx
  427b54:	push   ebp
  427b55:	sub    eax,0x9dabfd9
  427b5a:	pop    ebp
  427b5b:	hlt    
  427b5c:	jmp    0xa19b:0xcce53355
  427b63:	int3   
  427b64:	aad    0x1d
  427b66:	jl     0x427bd5
  427b68:	sub    al,0xc3
  427b6a:	mov    ch,BYTE PTR [ecx-0x5beb2cba]
  427b70:	cli    
  427b71:	leave  
  427b72:	xchg   esi,eax
  427b73:	cmc    
  427b74:	addr16 ja 0x427b74
  427b77:	xchg   esi,eax
  427b78:	push   ss
  427b79:	rol    ebp,1
  427b7b:	mov    ?,WORD PTR [eax]
  427b7d:	dec    ebx
  427b7e:	in     eax,dx
  427b7f:	shl    DWORD PTR [edi-0x4e],cl
  427b82:	xchg   DWORD PTR [ebx],edx
  427b84:	test   DWORD PTR [edx+0x1],esi
  427b87:	xchg   BYTE PTR [ebx],bh
  427b89:	arpl   WORD PTR [ecx+0x7],bx
  427b8c:	rcr    BYTE PTR [edi+0x33],0xa
  427b90:	test   edx,0xab440a80
  427b96:	out    0x16,eax
  427b98:	dec    esi
  427b99:	popa   
  427b9a:	pop    ebp
  427b9b:	bound  edx,QWORD PTR [edx]
  427b9d:	cdq    
  427b9e:	outs   dx,BYTE PTR ds:[esi]
  427b9f:	inc    ebp
  427ba0:	jle    0x427bd8
  427ba2:	aaa    
  427ba3:	std    
  427ba4:	sbb    BYTE PTR [ebp+ebp*8-0x4aeaa2cf],bl
  427bab:	and    BYTE PTR [eax-0x68e5535],bl
  427bb1:	cmc    
  427bb2:	shr    BYTE PTR [eax-0x20f35aa1],0x55
  427bb9:	div    ebx
  427bbb:	xchg   DWORD PTR [ecx],ecx
  427bbd:	mov    bl,0x8e
  427bbf:	pop    ebp
  427bc0:	std    
  427bc1:	(bad)  
  427bc2:	call   0x681c:0x5a844ab
  427bc9:	pop    es
  427bca:	mov    esi,0x9078
  427bcf:	add    BYTE PTR [eax],al
  427bd1:	add    BYTE PTR [edi-0xa],dh
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0xeb82e2d0
  427be0:	fisttp WORD PTR [ebx+0x1f387]
  427be6:	repz add al,0x0
  427be9:	add    dh,al
  427beb:	in     al,0xf7
  427bed:	ja     0x427c24
  427bef:	in     eax,0x53
  427bf1:	repz add DWORD PTR [edi+0x78],esp
  427bf5:	enter  0x649f,0x43
  427bf9:	test   DWORD PTR [eax+eax*4-0x73],eax
  427bfd:	(bad)  
  427bfe:	push   edx
  427bff:	xor    DWORD PTR [ebx-0x7ba15686],esp
  427c05:	mov    ebp,0xd291d3e5
  427c0a:	jle    0x427bdd
  427c0c:	mov    ch,0xdc
  427c0e:	sub    BYTE PTR [edi+0x68d683f],dh
  427c14:	jo     0x427c15
  427c16:	push   ss
  427c17:	push   es
  427c18:	pop    edx
  427c19:	push   cs
  427c1a:	dec    edi
  427c1b:	iret   
  427c1c:	fsub   QWORD PTR [edi-0x485914b5]
  427c22:	adc    BYTE PTR [ebx+ebp*1],al
  427c25:	retf   0x4cd6
  427c28:	sub    ebp,DWORD PTR [eax+0x49]
  427c2b:	lds    eax,FWORD PTR [esi]
  427c2d:	call   0x3a7f:0xd9161813
  427c34:	fiadd  DWORD PTR [edx+0x73]
  427c37:	fs inc esp
  427c39:	mov    al,0xf4
  427c3b:	add    DWORD PTR [edi+0x5de3ae3f],ecx
  427c41:	jge    0x427c16
  427c43:	push   ebp
  427c44:	push   ecx
  427c45:	hlt    
  427c46:	test   BYTE PTR [esi-0x75],ch
  427c49:	push   cs
  427c4a:	aam    0x1c
  427c4c:	je     0x427c6b
  427c4e:	xchg   esp,eax
  427c4f:	adc    esi,DWORD PTR [eax+0x29]
  427c52:	sbb    al,dl
  427c54:	pusha  
  427c55:	js     0x427c38
  427c57:	mov    ebx,0xb5678e59
  427c5c:	inc    esi
  427c5d:	jle    0x427c89
  427c5f:	repz (bad) 
  427c63:	pop    edx
  427c64:	ret    
  427c65:	add    ah,0x72
  427c68:	jecxz  0x427cc5
  427c6a:	dec    edx
  427c6b:	or     eax,0xb4610edb
  427c70:	sub    al,0x13
  427c72:	cmp    al,0x2d
  427c74:	jns    0x427c85
  427c76:	push   eax
  427c77:	push   edx
  427c78:	and    bl,BYTE PTR [eax-0x5c]
  427c7b:	addr16 jbe 0x427c16
  427c7e:	aaa    
  427c7f:	jl     0x427cf1
  427c81:	fwait
  427c82:	sub    eax,DWORD PTR [esi+0x34af8b07]
  427c88:	jbe    0x427c3f
  427c8a:	sahf   
  427c8b:	pop    ecx
  427c8c:	dec    ebx
  427c8d:	ins    DWORD PTR es:[edi],dx
  427c8e:	jecxz  0x427cfc
  427c90:	fcom   DWORD PTR ds:0x5b478a1b
  427c96:	sub    eax,0xe483df62
  427c9b:	cld    
  427c9c:	aad    0x5d
  427c9e:	dec    edx
  427c9f:	xchg   edi,eax
  427ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ca1:	ret    0x878b
  427ca4:	xchg   esi,eax
  427ca5:	mov    al,ds:0xafe4b89c
  427caa:	in     eax,dx
  427cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cac:	out    0x9d,al
  427cae:	inc    ebx
  427caf:	jae    0x427c61
  427cb1:	pop    ebp
  427cb2:	pop    esp
  427cb3:	es in  eax,0x39
  427cb6:	pop    edx
  427cb7:	lods   eax,DWORD PTR ds:[esi]
  427cb8:	push   cs
  427cb9:	pushf  
  427cba:	(bad)  
  427cbb:	div    DWORD PTR [ebp+0x3]
  427cbe:	dec    esp
  427cbf:	cmp    BYTE PTR [ecx+0x70],cl
  427cc2:	repz scas al,BYTE PTR es:[edi]
  427cc4:	xor    al,BYTE PTR [ebx+0x78201961]
  427cca:	xor    DWORD PTR [ebx+0x2d],0xffffffb6
  427cce:	and    DWORD PTR [ecx+0x7fdac088],esp
  427cd4:	dec    eax
  427cd5:	mov    al,0xa7
  427cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cd8:	leave  
  427cd9:	in     al,dx
  427cda:	jne    0x427d2f
  427cdc:	jg     0x427cfa
  427cde:	mov    ebx,DWORD PTR [ebx+edx*4+0x266371df]
  427ce5:	pushf  
  427ce6:	mov    esp,0x591e14
  427ceb:	dec    ecx
  427cec:	call   0xfc0c:0xfbe80fa4
  427cf3:	out    0x2c,eax
  427cf5:	fild   WORD PTR [edi]
  427cf7:	xchg   ecx,eax
  427cf8:	loop   0x427cc2
  427cfa:	ret    0xa48b
  427cfd:	ror    DWORD PTR [edi+0x25],1
  427d00:	aam    0x54
  427d02:	mov    edx,cs
  427d04:	ds pop esi
  427d06:	jae    0x427cdf
  427d08:	cmp    dl,BYTE PTR [eax+0x4e]
  427d0b:	cvtps2pd xmm2,QWORD PTR [eax-0x4a]
  427d0f:	and    BYTE PTR [edi],ah
  427d11:	cmp    bl,BYTE PTR [ebx+0x53]
  427d14:	je     0x427d83
  427d16:	pop    eax
  427d17:	xor    DWORD PTR [ebp-0x2a25cc6e],ecx
  427d1d:	xchg   edx,eax
  427d1e:	or     eax,0xa9ef43e8
  427d23:	inc    ebp
  427d24:	lods   eax,DWORD PTR ds:[esi]
  427d25:	fldcw  WORD PTR [edx+0x32]
  427d28:	imul   edi,DWORD PTR [edx-0x6a],0xffffff8b
  427d2c:	(bad)  
  427d2d:	xor    eax,0xca2c2181
  427d32:	fiadd  DWORD PTR [eax]
  427d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d35:	sub    esp,esp
  427d37:	pop    ds
  427d38:	into   
  427d39:	adc    al,0x8c
  427d3b:	and    DWORD PTR [ebp-0x5d691605],0xffffffc2
  427d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d44:	popa   
  427d45:	inc    esp
  427d46:	mov    BYTE PTR [ebp+0x19],0xfd
  427d4a:	xor    eax,DWORD PTR [ebx+eax*8]
  427d4d:	addr16 mov ah,0xd1
  427d50:	mov    cl,0x5
  427d52:	retf   0x31ee
  427d55:	xor    DWORD PTR [ebx],ecx
  427d57:	sub    DWORD PTR [ecx],0xb6b3ec43
  427d5d:	pop    ss
  427d5e:	test   edx,ecx
  427d60:	test   esi,ebx
  427d62:	enter  0xfede,0xa3
  427d66:	(bad)  
  427d67:	jmp    0x5b9c:0xa042b2ea
  427d6e:	and    bl,BYTE PTR [ebp-0x46]
  427d71:	mov    ah,0xc3
  427d73:	jae    0x427df0
  427d75:	xor    eax,0x290e65d2
  427d7a:	jmp    0x427df8
  427d7c:	jge    0x427d8e
  427d7e:	call   0x7f81:0x361285fc
  427d85:	jecxz  0x427d9a
  427d87:	push   cs
  427d88:	lods   eax,DWORD PTR ds:[esi]
  427d89:	or     DWORD PTR [edi+0x64],esi
  427d8c:	pop    es
  427d8d:	sbb    dl,0x90
  427d90:	call   0xd1f6:0x1082e5cc
  427d97:	xchg   ecx,eax
  427d98:	popa   
  427d99:	mov    ebx,0x30b8420a
  427d9e:	xor    ebp,DWORD PTR [ebx-0xb06d354]
  427da4:	test   eax,0xed770a43
  427da9:	iret   
  427daa:	sub    eax,0x47fdc965
  427daf:	xchg   DWORD PTR [ecx+0x8],eax
  427db2:	jne    0x427d6c
  427db4:	or     ah,cl
  427db6:	xor    DWORD PTR [esi-0x6ef9025d],edx
  427dbc:	mov    al,cl
  427dbe:	(bad)  
  427dbf:	and    eax,0x8d1e3e
  427dc4:	dec    esp
  427dc5:	inc    edi
  427dc6:	rcl    ecx,1
  427dc8:	mov    ah,0x33
  427dca:	hlt    
  427dcb:	cmp    al,0xf4
  427dcd:	mov    cs,edx
  427dcf:	test   DWORD PTR [ebp-0x2f8b9c2b],edi
  427dd5:	(bad)  
  427dd6:	nop
  427dd7:	imul   edx,DWORD PTR [edi+0xdb6dffa],0xffffffa8
  427dde:	fs call 0xb8c5:0x24129687
  427de6:	je     0x427e32
  427de8:	ins    BYTE PTR es:[edi],dx
  427de9:	mov    cl,0x35
  427deb:	fstp   DWORD PTR [edi+0x3b]
  427dee:	sbb    DWORD PTR [eax+0x9aae18f],esi
  427df4:	stos   BYTE PTR es:[edi],al
  427df5:	xor    eax,0x3eade354
  427dfa:	enter  0x1b46,0x88
  427dfe:	(bad)  
  427dff:	popa   
  427e00:	lock loope 0x427dc3
  427e03:	ror    esp,1
  427e05:	add    BYTE PTR [edi-0xe],dl
  427e08:	add    bh,BYTE PTR [edx]
  427e0a:	hlt    
  427e0b:	bound  edx,QWORD PTR [edx]
  427e0d:	inc    edx
  427e0e:	or     al,0xb4
  427e10:	sub    ah,bl
  427e12:	xor    DWORD PTR ds:0xc1023017,0x48a207e6
  427e1c:	and    eax,0xa247b639
  427e21:	stc    
  427e22:	mov    DWORD PTR ds:0x7ea5b38b,eax
  427e28:	jp     0x427e70
  427e2a:	stos   BYTE PTR es:[edi],al
  427e2b:	aas    
  427e2c:	sbb    edx,DWORD PTR [edi-0x4e]
  427e2f:	es push eax
  427e31:	or     BYTE PTR [esi],cl
  427e33:	int    0xda
  427e35:	jns    0x427dcb
  427e37:	in     al,0x5e
  427e39:	call   0x767341cc
  427e3e:	sub    edi,ebp
  427e40:	and    BYTE PTR cs:[ebx],cl
  427e43:	and    eax,0x690d9d37
  427e48:	aad    0x6b
  427e4a:	pop    ecx
  427e4b:	dec    esp
  427e4c:	popf   
  427e4d:	lea    esp,[edx-0x76]
  427e50:	pop    ss
  427e51:	inc    ebx
  427e52:	mov    dh,0xa1
  427e54:	mov    bh,0x88
  427e56:	sub    esi,DWORD PTR [ebx]
  427e58:	leave  
  427e59:	arpl   WORD PTR [edx+0x20],di
  427e5c:	fst    QWORD PTR [eax]
  427e5e:	jge    0x427ea6
  427e60:	les    esp,FWORD PTR fs:[edx+0x56bb8a7f]
  427e67:	rcr    ebx,cl
  427e69:	std    
  427e6a:	rcl    BYTE PTR [ebx],1
  427e6c:	or     edx,ecx
  427e6e:	mov    dl,0xeb
  427e70:	dec    ebp
  427e71:	cli    
  427e72:	pop    ds
  427e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e74:	fld    DWORD PTR [edx-0x7fd18e53]
  427e7a:	mov    ebx,0xdb1fd812
  427e7f:	das    
  427e80:	jno    0x427f01
  427e82:	dec    ecx
  427e83:	(bad)  [eax-0x27a5a499]
  427e89:	push   ecx
  427e8a:	or     al,BYTE PTR [edi+ebp*8-0x23f3cb23]
  427e91:	push   ss
  427e92:	into   
  427e93:	cld    
  427e94:	sbb    BYTE PTR [ebx-0x14efe2ef],ch
  427e9a:	fdivp  st(5),st
  427e9c:	ret    0xaac1
  427e9f:	mov    esi,0x7e8a23d
  427ea4:	mov    ah,BYTE PTR [edx]
  427ea6:	(bad)  
  427ea7:	xchg   edx,eax
  427ea9:	scas   al,BYTE PTR es:[edi]
  427eaa:	test   al,0xd7
  427eac:	lods   eax,DWORD PTR ds:[esi]
  427ead:	xchg   ebx,eax
  427eae:	faddp  st(4),st
  427eb0:	test   eax,0xc27c60f1
  427eb5:	clc    
  427eb6:	and    dh,cl
  427eb8:	(bad)  
  427eb9:	out    dx,al
  427eba:	add    eax,0xc5ba1cc
  427ebf:	imul   edi,DWORD PTR [ecx],0xffffff9d
  427ec2:	clc    
  427ec3:	inc    esi
  427ec4:	dec    eax
  427ec5:	cmp    ecx,DWORD PTR [esp+edx*8-0x6d]
  427ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427eca:	aas    
  427ecb:	mov    ecx,0xf7113901
  427ed0:	adc    ah,ch
  427ed2:	push   ds
  427ed3:	dec    edi
  427ed4:	scas   al,BYTE PTR es:[edi]
  427ed5:	and    ecx,DWORD PTR [edx]
  427ed7:	xchg   BYTE PTR ds:0x73fbea25,ah
  427edd:	mov    es,WORD PTR [edx]
  427edf:	ja     0x427f50
  427ee1:	test   BYTE PTR [ebx],cl
  427ee3:	out    dx,al
  427ee4:	imul   edi,DWORD PTR ds:0xf07c8e96,0xfffce9b2
  427eee:	mov    eax,ds:0x53378c96
  427ef3:	ret    
  427ef4:	cs cwde 
  427ef6:	mov    gs,ebp
  427ef8:	popa   
  427ef9:	push   eax
  427efa:	cmp    eax,DWORD PTR [esi-0x2e6ae726]
  427f00:	adc    DWORD PTR [ecx],edi
  427f02:	jle    0x427f23
  427f04:	pop    edi
  427f05:	fs stos BYTE PTR es:[edi],al
  427f07:	dec    ebp
  427f08:	jb     0x427ef1
  427f0a:	shl    edi,0x6f
  427f0d:	pop    esi
  427f0e:	sbb    DWORD PTR [edx+0x17d90ad7],edi
  427f14:	rol    DWORD PTR [eax+0x5f2726f],0xcf
  427f1b:	(bad)  
  427f1c:	in     al,0x9c
  427f1e:	sbb    BYTE PTR [edi],cl
  427f20:	jne    0x427ee4
  427f22:	mov    ebp,0xae90bbc8
  427f27:	in     eax,0x8a
  427f29:	inc    edi
  427f2a:	aad    0x2f
  427f2c:	inc    edi
  427f2d:	mov    esp,0x30a4305
  427f32:	lods   eax,DWORD PTR ds:[esi]
  427f33:	std    
  427f34:	and    bh,dl
  427f36:	ret    
  427f37:	leave  
  427f38:	in     eax,dx
  427f39:	in     al,0x2b
  427f3b:	or     edi,DWORD PTR [esp+edx*1+0x7efaab03]
  427f42:	add    edi,DWORD PTR [ecx-0x16]
  427f45:	inc    eax
  427f46:	jnp    0x427f0c
  427f48:	fs pop ebp
  427f4a:	sar    bh,cl
  427f4c:	stos   DWORD PTR es:[edi],eax
  427f4d:	fwait
  427f4e:	jl     0x427ee0
  427f50:	sti    
  427f51:	cmp    esp,DWORD PTR [eax+0x16]
  427f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f55:	cmp    esp,DWORD PTR [ebp+0x6d]
  427f58:	sub    DWORD PTR [edx+0x74e8cf93],0x62ec7ab1
  427f62:	jl     0x427f60
  427f64:	cmp    eax,0xe4aeafc8
  427f69:	inc    eax
  427f6a:	jnp    0x427f8a
  427f6c:	mov    ss,esi
  427f6e:	imul   edx,DWORD PTR [eax],0x2c
  427f71:	shl    DWORD PTR [eax+edx*4],1
  427f74:	mov    esi,0x855e63e1
  427f79:	cmp    esp,ebp
  427f7b:	fadd   st,st(6)
  427f7d:	ror    DWORD PTR [ecx],1
  427f7f:	sbb    eax,0xa231b368
  427f84:	inc    esi
  427f85:	dec    eax
  427f86:	lahf   
  427f87:	xor    DWORD PTR [esp+ebx*1-0x17],ebp
  427f8b:	and    DWORD PTR [ebx-0x5a],esi
  427f8e:	mov    dh,0x5f
  427f90:	gs or  al,0x75
  427f94:	sahf   
  427f95:	cmp    ecx,DWORD PTR fs:[edx+edi*4-0xe]
  427f9a:	xchg   edx,eax
  427f9b:	or     ah,BYTE PTR [ebx-0x1a4ae8db]
  427fa1:	xor    al,BYTE PTR [edi-0x5c7aaf61]
  427fa7:	mov    ecx,0xd3d69637
  427fac:	data16 mov BYTE PTR [edi+0x1d],dh
  427fb0:	cdq    
  427fb1:	xor    BYTE PTR [ecx*8+0x417c1c13],0x1e
  427fb9:	cld    
  427fba:	or     BYTE PTR [ecx-0x585cbeb],dl
  427fc0:	mov    edx,0x985f9a5b
  427fc5:	fcomp  DWORD PTR [edi]
  427fc7:	fwait
  427fc8:	out    0x38,al
  427fca:	lods   eax,DWORD PTR ds:[esi]
  427fcb:	push   edx
  427fcc:	jecxz  0x427fdb
  427fce:	dec    esi
  427fcf:	int3   
  427fd0:	jl     0x427f7e
  427fd2:	fwait
  427fd3:	scas   al,BYTE PTR es:[edi]
  427fd4:	mov    cl,0xe5
  427fd6:	(bad)  
  427fd7:	lock push esi
  427fd9:	repnz lock cli 
  427fdc:	leave  
  427fdd:	mov    ebx,0xb732f27a
  427fe2:	sbb    edi,ebp
  427fe4:	data16 jmp 0x427fc5
  427fe7:	cmp    eax,0x90be4f55
  427fec:	aad    0xd1
  427fee:	ror    DWORD PTR [edi+edx*1-0x71],1
  427ff2:	sbb    bh,bh
  427ff4:	out    dx,al
  427ff5:	loop   0x42806e
  427ff7:	in     eax,0xe8
  427ff9:	icebp  
  427ffa:	cli    
  427ffb:	cmp    esp,DWORD PTR [ebp-0x5266d3a5]
  428001:	xor    eax,0x6ed9deec
  428006:	lds    ebx,FWORD PTR [edx-0x4bd3947]
  42800c:	fst    QWORD PTR [esp+eiz*2+0x6245d099]
  428013:	fisubr DWORD PTR [edi-0x6b]
  428016:	and    eax,0x7f3fe3fe
  42801b:	jns    0x427fbb
  42801d:	bnd cs je 0x428003
  428021:	add    BYTE PTR [ebp+edx*1+0x1561ef30],ch
  428028:	aas    
  428029:	scas   al,BYTE PTR es:[edi]
  42802a:	fidiv  DWORD PTR [ebx]
  42802c:	stos   DWORD PTR es:[edi],eax
  42802d:	push   edi
  42802e:	sahf   
  42802f:	xor    dh,al
  428031:	ror    BYTE PTR [ebx-0x36fb6327],cl
  428037:	jp     0x42801e
  428039:	and    esp,ecx
  42803b:	xchg   BYTE PTR [esp+edi*8],dh
  42803e:	push   0xebe88291
  428043:	out    0xac,al
  428045:	sbb    DWORD PTR [eax+0x1f602e10],0x94e14f3b
  42804f:	xchg   DWORD PTR [edx+ebp*1+0x56],ecx
  428053:	lods   eax,DWORD PTR ds:[esi]
  428054:	jecxz  0x428008
  428056:	push   DWORD PTR [eax]
  428058:	push   edx
  428059:	ss dec ebx
  42805b:	jmp    0x42804e
  42805d:	ss jbe 0x428080
  428060:	pushf  
  428061:	mov    ch,0xa2
  428063:	imul   ecx,edx,0xfed11933
  428069:	adc    ebp,0xe412f204
  42806f:	shl    DWORD PTR [eax],0x4a
  428072:	mov    dh,0xef
  428074:	add    al,0x9d
  428076:	(bad)  
  428077:	and    eax,0x37ef5c26
  42807c:	add    DWORD PTR [edx+0x4],0x12
  428080:	out    dx,al
  428081:	loop   0x428017
  428083:	ret    0xf415
  428086:	call   0x1def:0xc6710189
  42808d:	mov    ebp,0x1b7253f
  428092:	mov    al,0xf6
  428094:	mov    al,0x15
  428096:	sub    esp,DWORD PTR [edx+0x596130e2]
  42809c:	cmc    
  42809d:	test   BYTE PTR [edi+eax*4+0x68],0x76
  4280a2:	mul    DWORD PTR [ebx]
  4280a4:	fst    st(4)
  4280a6:	push   cs
  4280a7:	inc    ebx
  4280a8:	lods   eax,DWORD PTR ds:[esi]
  4280a9:	xor    edi,DWORD PTR [ebp-0x980316d]
  4280af:	imul   dl
  4280b1:	mov    eax,0xcab4e1bd
  4280b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280b7:	dec    ebp
  4280b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280b9:	jae    0x428047
  4280bb:	pop    edx
  4280bc:	test   DWORD PTR [edx-0x25],ebp
  4280bf:	(bad)  
  4280c0:	add    BYTE PTR [esi+edx*8],ah
  4280c3:	ins    BYTE PTR es:[edi],dx
  4280c4:	or     bl,dl
  4280c6:	out    0x86,al
  4280c8:	repz and ecx,ebx
  4280cb:	test   ch,0xe2
  4280ce:	mov    dh,dl
  4280d0:	in     eax,0x78
  4280d2:	in     al,0x11
  4280d4:	test   eax,0x80b13517
  4280d9:	sub    al,0x98
  4280db:	pop    ebx
  4280dc:	cmp    BYTE PTR [eax],al
  4280de:	add    BYTE PTR [eax],al
  4280e0:	add    BYTE PTR [eax],al
  4280e2:	(bad)  
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x7dd89742]
  4280ef:	test   eax,0xf87a03e4
  4280f4:	add    DWORD PTR [eax],eax
  4280f6:	fld    DWORD PTR [eax+eax*1]
  4280f9:	add    ch,dl
  4280fb:	push   esp
  4280fc:	mov    DWORD PTR [edi-0x69fceaa7],edi
  428102:	sub    DWORD PTR [ecx-0x3f0a6d53],0x69d2f3c3
  42810c:	push   es
  42810d:	ror    ah,cl
  42810f:	(bad)  
  428110:	adc    DWORD PTR [eax+edi*1+0x21],ebp
  428114:	pop    edi
  428115:	leave  
  428116:	inc    edx
  428117:	neg    DWORD PTR [edi-0x2]
  42811a:	inc    edx
  42811b:	push   ss
  42811c:	arpl   WORD PTR [esi],dx
  42811e:	js     0x4280f5
  428120:	(bad)  
  428122:	mov    bl,0xc0
  428124:	loope  0x4280c3
  428126:	mov    esi,0x661cbd79
  42812b:	fisttp DWORD PTR [ebx+ebx*2+0x153bbe5c]
  428132:	adc    esp,DWORD PTR [ebx]
  428134:	ret    0x4b5f
  428137:	das    
  428138:	cld    
  428139:	daa    
  42813a:	ret    0xb19c
  42813d:	retf   
  42813e:	mov    esp,edi
  428140:	push   es
  428141:	and    al,ah
  428143:	push   ecx
  428144:	mov    ebp,0x7a64c478
  428149:	std    
  42814a:	cwde   
  42814b:	sbb    BYTE PTR [edx-0x35],dl
  42814e:	out    dx,eax
  42814f:	mov    ds:0xdfea4304,al
  428154:	mov    ebp,0xd9a7ff09
  428159:	push   esp
  42815a:	add    BYTE PTR [ebx+0x62],0x6e
  42815e:	lods   eax,DWORD PTR ds:[esi]
  42815f:	jp     0x4280f9
  428161:	enter  0x3ae4,0x20
  428165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428166:	nop
  428167:	adc    al,0x74
  428169:	sbb    al,0xd6
  42816b:	dec    edi
  42816c:	and    esi,DWORD PTR [edx+ebp*8+0x3]
  428170:	pop    ebx
  428171:	xchg   ebp,eax
  428172:	imul   eax,esp,0xd
  428175:	adc    eax,0x9cfabbfd
  42817a:	in     al,dx
  42817b:	or     BYTE PTR [ebx],bh
  42817d:	(bad)  
  42817e:	jb     0x4281ea
  428180:	cmp    BYTE PTR [ecx-0x4a],dh
  428183:	fidivr WORD PTR [eax-0x38]
  428186:	jp     0x428130
  428188:	mov    esp,0xcdb2a6e4
  42818d:	in     eax,0x46
  42818f:	mov    ecx,0x7c9e149f
  428194:	inc    edx
  428195:	sub    eax,0x6ac4c329
  42819a:	int    0x95
  42819c:	nop    DWORD PTR [ebx-0x61]
  4281a0:	je     0x428193
  4281a2:	repnz pop esi
  4281a4:	outs   dx,DWORD PTR ds:[esi]
  4281a5:	push   ecx
  4281a6:	sbb    dl,bh
  4281a8:	pop    es
  4281a9:	mov    bh,BYTE PTR [ebp+0x621ec6a9]
  4281af:	(bad)  
  4281b0:	mov    dl,0x1b
  4281b2:	fcmovnu st,st(5)
  4281b4:	jl     0x4281e8
  4281b6:	div    esi
  4281b8:	pop    ds
  4281b9:	push   cs
  4281ba:	ror    BYTE PTR [edx+eax*1+0x5375bc3e],0xb8
  4281c2:	je     0x4281b9
  4281c4:	or     bl,ah
  4281c6:	push   esi
  4281c7:	mov    cl,0x2e
  4281c9:	push   es
  4281ca:	inc    BYTE PTR [esi+0x257ba39f]
  4281d0:	mov    ebp,0x27d6951f
  4281d5:	idiv   ebx
  4281d7:	push   eax
  4281d8:	cmp    esi,DWORD PTR [ebp-0x19]
  4281db:	xlat   BYTE PTR ds:[ebx]
  4281dc:	inc    esi
  4281dd:	jae    0x4281e0
  4281df:	pop    ss
  4281e0:	cdq    
  4281e1:	xchg   esi,eax
  4281e2:	frstor [esi]
  4281e4:	outs   dx,BYTE PTR ds:[esi]
  4281e5:	scas   eax,DWORD PTR es:[edi]
  4281e6:	cmp    eax,0x3c4c9e5e
  4281eb:	add    DWORD PTR [eax],esi
  4281ed:	lds    esp,FWORD PTR [esi]
  4281ef:	xchg   ebp,eax
  4281f1:	das    
  4281f2:	xchg   esp,eax
  4281f3:	pop    ebx
  4281f4:	inc    ecx
  4281f5:	fdivr  DWORD PTR [eax+edi*4-0x5fe4aa]
  4281fc:	and    eax,0x66ea8bf4
  428201:	mov    ecx,0x8a445306
  428206:	mov    ecx,0x1b39f336
  42820b:	ret    0x8a28
  42820e:	mov    ecx,0xf72c2c66
  428213:	inc    edx
  428214:	arpl   WORD PTR [edx-0x24],sp
  428217:	add    BYTE PTR ds:0x2956a6c3,dh
  42821d:	pop    edi
  42821e:	enter  0xf561,0xf
  428222:	mov    al,0xfc
  428224:	jge    0x4281ac
  428226:	sub    al,0x8a
  428228:	mov    ch,0xbc
  42822a:	sub    edi,DWORD PTR [edx]
  42822c:	(bad)  
  42822d:	aam    0xce
  42822f:	mov    gs,WORD PTR [eax+0x2997a821]
  428235:	test   al,0xa1
  428237:	dec    ebx
  428238:	or     dh,BYTE PTR [edx-0x2d]
  42823b:	mov    edx,0x4ecf4483
  428240:	dec    ebp
  428241:	inc    eax
  428242:	popf   
  428243:	iret   
  428244:	das    
  428245:	adc    eax,0xe2781811
  42824a:	pushf  
  42824b:	mov    ss,WORD PTR [edx+ecx*1]
  42824e:	inc    ecx
  42824f:	sar    BYTE PTR ss:[eax-0x2a],cl
  428253:	sar    DWORD PTR [ebx-0x50e9dca6],1
  428259:	cmp    eax,0xa4bdd93a
  42825e:	les    esp,FWORD PTR [edx-0x6a7bbae1]
  428264:	or     BYTE PTR [edi-0x7bdc847a],ah
  42826a:	mov    dh,0x70
  42826c:	jle    0x42824d
  42826e:	mov    esp,0x756cde2e
  428273:	dec    eax
  428274:	cdq    
  428275:	xlat   BYTE PTR ds:[ebx]
  428276:	mov    ebx,0x3a34b525
  42827b:	xchg   ebx,eax
  42827c:	mov    al,0x65
  42827e:	xchg   ebx,eax
  42827f:	test   al,0x72
  428281:	nop
  428282:	cwde   
  428283:	cs scas eax,DWORD PTR es:[edi]
  428285:	push   ss
  428286:	pop    ecx
  428287:	shl    dh,cl
  428289:	rcl    DWORD PTR [edi-0x71],1
  42828c:	cld    
  42828d:	dec    esp
  42828e:	cmp    al,0x8e
  428290:	jbe    0x4282d5
  428292:	repz (bad) 
  428294:	(bad)  
  428296:	pop    eax
  428297:	shl    BYTE PTR [ebp+ebp*4-0x3973438d],1
  42829e:	ins    BYTE PTR es:[edi],dx
  42829f:	(bad)
  4282a4:	leave  
  4282a5:	sub    ebx,DWORD PTR [ecx+0xb]
  4282a8:	sub    eax,DWORD PTR cs:[ecx+0x199c7a5f]
  4282af:	or     DWORD PTR [esi],0x867aa485
  4282b5:	stos   BYTE PTR es:[edi],al
  4282b6:	retf   0x53ca
  4282b9:	pushf  
  4282ba:	cmp    al,0xc4
  4282bc:	pop    ebp
  4282bd:	push   0xffffffac
  4282bf:	ret    
  4282c0:	dec    esi
  4282c1:	shr    DWORD PTR [edx+0x1ecd31ff],cl
  4282c7:	pop    ds
  4282c8:	mov    ds:0xb73b253f,al
  4282cd:	pop    ebp
  4282ce:	js     0x42828e
  4282d0:	out    dx,eax
  4282d1:	enter  0x8d72,0xd0
  4282d5:	rol    ah,1
  4282d7:	sar    DWORD PTR [edx+0x70],cl
  4282da:	sub    esp,0xe86818d3
  4282e0:	xor    DWORD PTR [ebp+0x42],esi
  4282e3:	sbb    ah,al
  4282e5:	jae    0x428343
  4282e7:	out    0x9d,al
  4282e9:	push   ss
  4282ea:	(bad)  
  4282eb:	iret   
  4282ec:	sbb    ah,BYTE PTR [eax-0x60]
  4282ef:	jl     0x428278
  4282f1:	enter  0x772f,0xf5
  4282f5:	test   BYTE PTR [esi-0x23],bh
  4282f8:	pop    ss
  4282f9:	dec    ebx
  4282fa:	rcr    BYTE PTR [edi-0x5fd07a86],0x1
  428301:	or     ah,BYTE PTR [edi]
  428303:	push   ss
  428304:	test   al,0x51
  428306:	js     0x42831f
  428308:	loopne 0x4282fa
  42830a:	stc    
  42830b:	(bad)
  42830f:	add    BYTE PTR [eax+0x30],ah
  428312:	iret   
  428313:	mov    ecx,0xd4129ad0
  428318:	adc    cl,ch
  42831a:	xchg   ebp,eax
  42831b:	nop
  42831c:	xchg   ecx,eax
  42831d:	mov    bl,0x97
  42831f:	adc    eax,0x7c5044a6
  428324:	mov    ebx,ss
  428326:	cmp    al,bl
  428328:	sub    ebp,DWORD PTR [ecx+0x7f]
  42832b:	popa   
  42832c:	jno    0x428385
  42832e:	jns    0x42830b
  428330:	(bad)  [edx+0x94c6385]
  428336:	xchg   ecx,eax
  428337:	adc    al,0xf
  428339:	add    ch,0x3c
  42833c:	add    BYTE PTR [eax-0x15],al
  42833f:	stc    
  428340:	adc    esi,esi
  428342:	sbb    DWORD PTR [ebp-0x78],ecx
  428345:	pop    ebx
  428346:	stos   DWORD PTR es:[edi],eax
  428347:	pop    esp
  428348:	cmp    eax,0xbf9738da
  42834d:	(bad)  
  42834e:	or     ah,cl
  428350:	ret    0xb763
  428353:	fnstcw WORD PTR [ecx]
  428355:	icebp  
  428356:	inc    edx
  428357:	in     al,0x17
  428359:	mov    al,ds:0xcf03e2a0
  42835e:	pop    ebp
  42835f:	fisttp DWORD PTR [eax*4-0x33e1f0d3]
  428366:	mov    cl,0x2b
  428368:	(bad)  
  428369:	mov    esp,0xe9455d76
  42836e:	xor    ch,ch
  428370:	outs   dx,BYTE PTR ds:[esi]
  428371:	ds inc eax
  428373:	jle    0x42833e
  428375:	or     DWORD PTR [esi+0x8],eax
  428378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428379:	sbb    BYTE PTR [edi+eax*2],bl
  42837c:	loopne 0x428300
  42837e:	lahf   
  42837f:	in     al,0x8c
  428381:	adc    BYTE PTR fs:[ebx+0x70831e9e],dh
  428388:	and    BYTE PTR [ecx-0x44f2106],ch
  42838e:	arpl   WORD PTR [ebx-0x35],bp
  428391:	scas   eax,DWORD PTR es:[edi]
  428392:	pop    ebp
  428393:	mov    esp,0x474caec6
  428398:	mov    cl,0xf5
  42839a:	add    BYTE PTR [ebx+0x31],ah
  42839d:	out    0xd2,eax
  42839f:	rcr    DWORD PTR [esi-0x48],1
  4283a2:	shl    DWORD PTR [ecx],0x4e
  4283a5:	mov    cl,0x16
  4283a7:	cs push ds
  4283a9:	test   al,0x1f
  4283ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283ac:	push   ecx
  4283ad:	push   0x60
  4283af:	xor    dh,BYTE PTR [edx+0x38]
  4283b2:	dec    esp
  4283b3:	xor    BYTE PTR [ebx+0x74],dl
  4283b6:	inc    edi
  4283b7:	jno    0x42841c
  4283b9:	inc    eax
  4283ba:	mov    WORD PTR [ecx+0x31],es
  4283bd:	adc    ecx,DWORD PTR [edi-0x64010ac4]
  4283c3:	jp     0x42839b
  4283c5:	sbb    eax,DWORD PTR [ebx+ecx*1-0x617bf2c1]
  4283cc:	add    DWORD PTR [ebx-0x6810c579],edx
  4283d2:	test   eax,0x5f5f44f3
  4283d7:	or     DWORD PTR [ebx-0x35],esi
  4283da:	cmp    dh,BYTE PTR [edx-0x5eacdd7a]
  4283e0:	(bad)  
  4283e1:	adc    al,0x4c
  4283e3:	push   0xfffffff6
  4283e5:	cwde   
  4283e6:	lahf   
  4283e7:	sub    BYTE PTR [ecx-0x53807fb4],bl
  4283ed:	retf   
  4283ee:	mov    ?,WORD PTR [ebp-0x9]
  4283f1:	xor    eax,0xaf977b16
  4283f6:	jo     0x4283b7
  4283f8:	retf   0x8d25
  4283fb:	jne    0x4283e2
  4283fd:	test   BYTE PTR [esi+0x20],0xf9
  428401:	add    BYTE PTR [ebp+0x48],bh
  428404:	into   
  428405:	daa    
  428406:	int    0x6e
  428408:	mov    ds:0x838712aa,eax
  42840d:	xchg   ecx,eax
  42840e:	hlt    
  42840f:	pop    esi
  428410:	mov    ds:0xcbbc8cb0,eax
  428415:	inc    edx
  428416:	icebp  
  428417:	lds    edi,FWORD PTR ds:0x31f77af9
  42841d:	ins    BYTE PTR es:[edi],dx
  42841e:	sar    BYTE PTR [ecx+0x23],cl
  428421:	popf   
  428422:	or     al,0x2d
  428424:	lods   eax,DWORD PTR ds:[esi]
  428425:	jl     0x428477
  428427:	into   
  428428:	mov    WORD PTR [edi+eiz*2],es
  42842b:	pop    ss
  42842c:	es pop ss
  42842e:	fist   DWORD PTR [ebx+0x45]
  428431:	cmp    al,0xde
  428433:	icebp  
  428434:	shr    eax,1
  428436:	shl    BYTE PTR [edi+eiz*8-0x3661120c],cl
  42843d:	pop    edx
  42843e:	cmc    
  42843f:	in     al,0xba
  428441:	inc    edx
  428442:	push   eax
  428443:	cmp    edi,edx
  428445:	jle    0x42848b
  428447:	sbb    eax,0xe0c9f5a9
  42844c:	or     dl,BYTE PTR [esi+0x529eb9d3]
  428452:	retf   0x5534
  428455:	dec    ebx
  428456:	xchg   esi,eax
  428457:	jns    0x428403
  428459:	fidiv  DWORD PTR [edx-0xf690ebf]
  42845f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428460:	sub    BYTE PTR [ebp+0x28],dh
  428463:	sbb    DWORD PTR [edx],esp
  428465:	arpl   WORD PTR [ebx-0x1e7a9274],ax
  42846b:	sub    DWORD PTR [ecx+ebx*1-0x77c360dc],0x72
  428473:	ins    BYTE PTR es:[edi],dx
  428474:	mov    eax,ds:0x70592ad7
  428479:	lea    ebx,[ecx]
  42847b:	push   edi
  42847c:	lahf   
  42847d:	inc    esp
  42847e:	sahf   
  42847f:	jnp    0x4284da
  428481:	adc    edi,DWORD PTR [ecx+0x157854b7]
  428487:	aas    
  428488:	add    BYTE PTR [edx],dl
  42848a:	push   ds
  42848b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42848c:	jne    0x42842d
  42848e:	inc    esi
  42848f:	adc    ah,BYTE PTR [ecx]
  428491:	hlt    
  428492:	push   eax
  428493:	push   eax
  428494:	pop    es
  428495:	or     ah,dl
  428497:	jg     0x428500
  428499:	inc    esp
  42849a:	mov    dl,0x4e
  42849c:	mov    bl,0xf6
  42849e:	mov    eax,ds:0x4dcc8ca0
  4284a3:	enter  0xca25,0xe6
  4284a7:	jne    0x42847b
  4284a9:	lods   al,BYTE PTR ds:[esi]
  4284aa:	icebp  
  4284ab:	test   eax,0x12dbee1a
  4284b0:	fisubr DWORD PTR [edi-0x43ca5bb]
  4284b6:	lea    ebx,[ebx-0x14]
  4284b9:	xor    edi,DWORD PTR [ebx-0x7850a4e5]
  4284bf:	pusha  
  4284c0:	mov    al,ds:0x8a645cc2
  4284c5:	out    0x7d,eax
  4284c7:	imul   BYTE PTR [edi]
  4284c9:	sub    DWORD PTR [ecx],esi
  4284cb:	mov    eax,0xef39f33f
  4284d0:	fmul   QWORD PTR [ecx+esi*2+0x60]
  4284d4:	inc    edi
  4284d5:	fisubr WORD PTR [ebp+0x4f63ee15]
  4284db:	fadd   QWORD PTR [eax]
  4284dd:	(bad)  
  4284de:	jnp    0x42854a
  4284e0:	test   DWORD PTR [edi+0x5b],ebp
  4284e3:	dec    edi
  4284e4:	and    edi,DWORD PTR [ebx-0x51]
  4284e7:	mov    al,ds:0x45aae65
  4284ec:	mov    al,ds:0xfcec65d9
  4284f1:	mov    bh,0xa7
  4284f3:	pushf  
  4284f4:	dec    esp
  4284f5:	outs   dx,DWORD PTR ds:[esi]
  4284f6:	shl    BYTE PTR [ebx],cl
  4284f8:	xchg   edx,eax
  4284f9:	enter  0xf726,0x2f
  4284fd:	mov    ch,0x4d
  4284ff:	push   ds
  428500:	iret   
  428501:	int    0xb0
  428503:	iret   
  428504:	inc    edx
  428505:	fnstenv [ebp-0x21]
  428508:	(bad)  
  428509:	retf   
  42850a:	aaa    
  42850b:	inc    ecx
  42850c:	aam    0xcc
  42850e:	add    eax,0x4af50f72
  428513:	ins    DWORD PTR es:[edi],dx
  428514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428515:	iret   
  428516:	mov    ds:0x39b878fe,eax
  42851b:	mov    ch,BYTE PTR [edx+0x12]
  42851e:	or     ch,ah
  428520:	sbb    DWORD PTR [edi+0x3a],ebp
  428523:	lahf   
  428524:	mov    esp,0x1437162a
  428529:	call   0x5f0d:0xb476328d
  428530:	in     al,dx
  428531:	xchg   ebp,eax
  428532:	in     eax,0xb0
  428534:	call   0x99876a1a
  428539:	fld    st(1)
  42853b:	or     edx,0xc74992cb
  428541:	pop    ss
  428542:	cmp    ah,BYTE PTR [edx+eax*8-0x43]
  428546:	int3   
  428547:	(bad)  
  428548:	and    ebp,DWORD PTR [ebx]
  42854a:	cmp    dl,BYTE PTR ds:0xd36aecc0
  428550:	leave  
  428551:	out    dx,eax
  428552:	and    ebp,DWORD PTR [eax+0x21e22dfd]
  428558:	dec    edx
  428559:	idiv   BYTE PTR [edx+0x55]
  42855c:	fldcw  WORD PTR [edx]
  42855e:	repz in al,dx
  428560:	rcl    BYTE PTR [edi-0x52c8dc19],1
  428566:	int    0x59
  428568:	out    0xb4,eax
  42856a:	clc    
  42856b:	fnstenv [edx-0x3c8a8b6f]
  428571:	daa    
  428572:	fdiv   DWORD PTR [esi-0x68]
  428575:	repnz xchg esi,eax
  428577:	mov    eax,DWORD PTR [edi+0x733a83cd]
  42857d:	xchg   ebp,eax
  42857e:	mov    ecx,ss
  428580:	mov    ebp,edx
  428582:	js     0x4285e3
  428584:	mov    esp,0x29e2a4dd
  428589:	mov    ecx,0xf620fe72
  42858e:	int    0xea
  428590:	fdiv   DWORD PTR [edi]
  428592:	adc    esi,DWORD PTR [edi-0x29]
  428595:	push   esp
  428596:	out    dx,al
  428597:	mov    esi,0xe95e729d
  42859c:	inc    esi
  42859d:	data16 or al,cl
  4285a0:	ror    DWORD PTR [ecx-0x2],0x37
  4285a4:	or     ch,dh
  4285a6:	jl     0x42859d
  4285a8:	sbb    esi,DWORD PTR [eax+0x59]
  4285ab:	xor    ch,BYTE PTR [esi-0x51]
  4285ae:	jae    0x4285de
  4285b0:	lahf   
  4285b1:	ret    
  4285b2:	hlt    
  4285b3:	lock pop edx
  4285b5:	mov    esp,0x9c3e06fe
  4285ba:	dec    esi
  4285bb:	out    dx,al
  4285bc:	in     al,0x32
  4285be:	cdq    
  4285bf:	in     al,0x16
  4285c1:	in     eax,dx
  4285c2:	mul    esp
  4285c4:	cli    
  4285c5:	xchg   edi,eax
  4285c6:	push   edi
  4285c7:	mov    DWORD PTR [ebp+esi*1+0x50416565],edi
  4285ce:	test   eax,0x13ea1765
	...
