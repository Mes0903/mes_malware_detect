
2066924a69a4e8a57affce1be2901ddbc440d7712be1a46f395ddc9e2377b582.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	mov    ds:0x4334411,al
  411005:	or     DWORD PTR [eax],eax
  411007:	push   eax
  411008:	sub    BYTE PTR [esi],cl
  41100a:	dec    eax
  41100b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41100c:	mov    WORD PTR [ebx-0x65],ss
  41100f:	push   edx
  411010:	or     DWORD PTR [esi],eax
  411012:	add    al,0x24
  411014:	sub    ah,BYTE PTR [eax+0xb]
  411017:	inc    eax
  411018:	and    al,dl
  41101a:	push   es
  41101b:	or     al,0x14
  41101d:	adc    al,BYTE PTR [edx+ecx*1]
  411020:	add    al,BYTE PTR [eax+0x60]
  411023:	nop
  411024:	add    BYTE PTR [eax],al
  411026:	and    BYTE PTR [ecx+edx*1+0x47],al
  41102a:	add    BYTE PTR [eax-0x3fddf7f7],dl
  411030:	inc    eax
  411031:	adc    BYTE PTR [eax-0x367ffd5f],0x8
  411038:	adc    al,0x81
  41103a:	or     BYTE PTR [ecx+0x500c18e],cl
  411040:	push   edx
  411041:	add    DWORD PTR [esp+eiz*2],eax
  411044:	and    DWORD PTR [edx+ecx*1],ebp
  411047:	cwde   
  411048:	adc    BYTE PTR [edx],0x20
  41104b:	and    BYTE PTR fs:[eax+0x2c804211],0xa
  411053:	ror    DWORD PTR [ebx],cl
  411055:	pushf  
  411056:	add    DWORD PTR [edi],eax
  411058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411059:	add    BYTE PTR [ecx+0x0],dh
  41105c:	adc    al,BYTE PTR [eax+eax*1]
  41105f:	add    DWORD PTR [ebp-0x27ef71b4],eax
  411065:	add    BYTE PTR [edi],dl
  411067:	or     BYTE PTR [edx+0x30290000],al
  41106d:	xor    BYTE PTR [eax],ch
  41106f:	inc    eax
  411070:	add    cl,BYTE PTR [eax+0x6]
  411073:	add    DWORD PTR [ebx+eiz*8+0x50608820],eax
  41107a:	xor    BYTE PTR [eax+0x0],dl
  41107d:	push   eax
  41107e:	add    al,0x25
  411080:	inc    edx
  411081:	add    BYTE PTR [esi],cl
  411083:	add    BYTE PTR [ebp+0x25108841],ah
  411089:	or     al,0x20
  41108b:	add    BYTE PTR [eax+0xc],0xc
  41108f:	nop
  411090:	and    cl,BYTE PTR [edx+0x40800211]
  411096:	sub    BYTE PTR [eax+0x6800698],ah
  41109c:	rol    DWORD PTR ds:0x44c01903,cl
  4110a2:	pusha  
  4110a3:	and    ah,BYTE PTR [esp+edx*1]
  4110a6:	and    cl,bl
  4110a8:	adc    bl,BYTE PTR [ebx-0x80]
  4110ab:	shl    BYTE PTR [ecx-0x3df0fe99],1
  4110b1:	or     al,0x43
  4110b3:	add    al,0x1
  4110b5:	add    dh,BYTE PTR [edx]
  4110b7:	and    BYTE PTR fs:[esi],0xd1
  4110bb:	or     al,0x0
  4110bd:	or     eax,0x1494
  4110c2:	add    BYTE PTR [eax+0x18],0x1
  4110c6:	sbb    al,BYTE PTR [esp+eax*4+0x70]
  4110ca:	add    DWORD PTR [eax],eax
  4110cc:	or     BYTE PTR [ebp+0x20],ch
  4110cf:	xchg   esp,eax
  4110d0:	add    ebx,DWORD PTR [eax+eiz*1]
  4110d3:	push   ss
  4110d4:	xor    BYTE PTR [ebx+0x0],al
  4110d7:	mov    cl,0x5
  4110d9:	adc    BYTE PTR [ecx+0x2a01813],al
  4110df:	inc    eax
  4110e0:	cmp    BYTE PTR [eax],al
  4110e2:	add    BYTE PTR [eax],0x90
  4110e5:	adc    al,0x41
  4110e7:	add    BYTE PTR [eax],dh
  4110e9:	pusha  
  4110ea:	aaa    
  4110eb:	adc    BYTE PTR [eax],dl
  4110ed:	and    ah,BYTE PTR [esi+eax*1]
  4110f0:	and    DWORD PTR [edx+eax*1],eax
  4110f3:	or     BYTE PTR [eax+0x11],al
  4110f6:	push   es
  4110f7:	push   esp
  4110f8:	add    BYTE PTR [esi],al
  4110fa:	and    BYTE PTR [ebx],al
  4110fc:	and    al,0x9
  4110fe:	cmovs  edx,DWORD PTR es:[edi+0xc]
  411103:	mov    BYTE PTR [ebx],dl
  411105:	push   edx
  411106:	add    dl,BYTE PTR [eax]
  411108:	add    al,0x94
  41110a:	adc    BYTE PTR [eax-0x67f5efa0],al
  411110:	and    dh,BYTE PTR [edx]
  411112:	add    esp,DWORD PTR [eax-0x3ff7dfe7]
  411118:	sub    BYTE PTR [eax+edx*1+0x20850000],0x86
  411120:	mov    ds:0xe2080242,al
  411125:	adc    DWORD PTR [ecx],eax
  411127:	cmp    cl,BYTE PTR [eax]
  411129:	add    BYTE PTR [eax],dh
  41112b:	add    BYTE PTR [edx],al
  41112d:	xchg   edx,eax
  41112e:	add    al,0x13
  411130:	and    ecx,DWORD PTR [esi]
  411132:	inc    edx
  411133:	inc    edx
  411134:	push   0x142e108
  411139:	pop    es
  41113a:	jb     0x41115c
  41113c:	dec    ebx
  41113d:	inc    eax
  41113e:	add    BYTE PTR [eax],0x2
  411141:	inc    ecx
  411142:	or     BYTE PTR [eax+0x16],al
  411145:	adc    BYTE PTR [eax],al
  411147:	adc    BYTE PTR [edx],cl
  411149:	inc    eax
  41114a:	add    eax,0x10099901
  41114f:	xor    BYTE PTR [eax-0x7f],ah
  411152:	and    BYTE PTR [eax+0x20],al
  411155:	inc    edx
  411156:	inc    ebx
  411157:	and    esi,eax
  411159:	inc    ecx
  41115a:	dec    edx
  41115b:	mov    eax,0x10018000
  411160:	push   es
  411161:	add    eax,eax
  411163:	popa   
  411164:	and    BYTE PTR [eax],ah
  411166:	push   eax
  411167:	inc    eax
  411168:	xchg   ecx,eax
  411169:	pop    eax
  41116a:	adc    BYTE PTR [ebp+0x9],dh
  41116d:	inc    ebx
  41116e:	add    BYTE PTR [ecx],ch
  411170:	sbb    eax,0xd080c1a
  411175:	adc    al,BYTE PTR [edi]
  411177:	sbb    BYTE PTR [ecx],cl
  411179:	sbb    eax,0x70002a40
  41117e:	add    BYTE PTR [eax+esi*2+0x10],al
  411182:	call   0x80d919db
  411187:	mov    al,ds:0x28208422
  41118c:	add    DWORD PTR [ebx],eax
  41118e:	add    al,0x8
  411190:	add    al,BYTE PTR [eax+0x2144d]
  411196:	pop    es
  411197:	and    al,0x81
  411199:	add    BYTE PTR [ebp+0x10],al
  41119c:	add    BYTE PTR [eax+eiz*1+0x406544],ch
  4111a3:	xchg   edx,eax
  4111a4:	sbb    ebp,DWORD PTR [ebx]
  4111a6:	inc    eax
  4111a7:	or     DWORD PTR [eax+edx*1],edi
  4111aa:	add    BYTE PTR [esi-0x40],0x28
  4111ae:	jecxz  0x4111b9
  4111b0:	adc    al,0x85
  4111b2:	inc    ebx
  4111b3:	adc    al,0x8
  4111b5:	and    DWORD PTR [eax],0x4e800c06
  4111bb:	test   al,0x80
  4111bd:	add    BYTE PTR [eax-0x1e],ch
  4111c0:	add    BYTE PTR [eax],0x0
  4111c3:	adc    dl,BYTE PTR [ecx+0x1425028]
  4111c9:	add    al,0x1
  4111cb:	cmp    al,0x17
  4111cd:	add    BYTE PTR [eax+0x1],dl
  4111d0:	sub    cl,BYTE PTR [ecx]
  4111d2:	test   DWORD PTR ds:0x57c08028,edi
  4111d8:	sbb    BYTE PTR [eax],0x20
  4111db:	add    al,0x88
  4111dd:	add    ah,al
  4111df:	add    BYTE PTR [eax-0x3f3f6ffc],al
  4111e5:	add    BYTE PTR [edx-0x3a78f3bf],ch
  4111eb:	or     BYTE PTR [ebx+0x0],dh
  4111ee:	inc    ecx
  4111ef:	or     al,0xa0
  4111f1:	inc    esi
  4111f2:	inc    eax
  4111f3:	add    DWORD PTR [eax+edx*4],edi
  4111f6:	push   esp
  4111f7:	xchg   esi,eax
  4111f8:	inc    ecx
  4111f9:	add    BYTE PTR [eax+eiz*1+0x12],al
  4111fd:	xor    BYTE PTR [eax+0x56801125],dl
  411203:	add    BYTE PTR [edx],bl
  411205:	enter  0xd00,0x10
  411209:	rol    BYTE PTR [eax-0x63ffffe8],1
  41120f:	add    BYTE PTR [esi],al
  411211:	test   al,al
  411213:	push   cs
  411214:	adc    BYTE PTR [ecx-0x2a],0x0
  411218:	sub    DWORD PTR [esi],eax
  41121a:	adc    BYTE PTR [eax],dl
  41121c:	nop
  41121d:	add    BYTE PTR [esi+0x14],ah
  411220:	add    eax,ecx
  411222:	ret    0xc100
  411225:	pusha  
  411226:	and    BYTE PTR [eax+0x70],dh
  411229:	jp     0x41122f
  41122b:	adc    BYTE PTR [eax-0x3e],al
  41122e:	add    ah,BYTE PTR [edx+0x23]
  411231:	or     al,cl
  411233:	push   ecx
  411234:	add    DWORD PTR [eax+0x45894343],eax
  41123a:	rol    BYTE PTR [ecx],0x2c
  41123d:	sbb    al,al
  41123f:	test   BYTE PTR [eax],dl
  411241:	add    al,cl
  411243:	add    al,BYTE PTR [eax]
  411245:	adc    al,dl
  411247:	push   eax
  411248:	add    dl,BYTE PTR [eax-0x28]
  41124b:	or     BYTE PTR [ebx],al
  41124d:	in     al,0xc1
  41124f:	mov    dl,0x83
  411251:	add    DWORD PTR [edx+0x8008023],eax
  411257:	and    BYTE PTR [eax],al
  411259:	add    DWORD PTR [esp+edx*8],0x92880e12
  411260:	nop
  411261:	dec    edx
  411262:	add    DWORD PTR [ecx],0x4006c051
  411268:	sbb    al,BYTE PTR [ecx]
  41126a:	xor    cl,BYTE PTR [eax]
  41126c:	nop
  41126d:	sub    al,0x20
  41126f:	add    al,0x10
  411271:	add    BYTE PTR [eax],0x48
  411274:	test   BYTE PTR [esi+eax*2+0x40],dl
  411278:	mov    al,0x24
  41127a:	and    ch,BYTE PTR [ecx-0x7a]
  41127d:	and    al,0x0
  41127f:	add    al,0x21
  411281:	add    BYTE PTR [eax],al
  411283:	add    BYTE PTR [edx],dl
  411285:	imul   ebx,DWORD PTR [eax+0x9],0x120811
  41128c:	inc    esp
  41128d:	inc    eax
  41128e:	mov    eax,ds:0x54144a64
  411293:	rol    DWORD PTR [eax],0x70
  411296:	adc    al,0x2
  411298:	add    DWORD PTR [eax],edx
  41129a:	nop
  41129b:	add    al,0xa
  41129d:	imul   ebx,DWORD PTR [edx+0x0],0x28
  4112a1:	add    al,ah
  4112a3:	dec    edx
  4112a4:	add    eax,DWORD PTR [eax]
  4112a6:	pop    eax
  4112a7:	add    al,BYTE PTR [ecx+eax*1+0x0]
  4112ab:	mov    dh,BYTE PTR [edx]
  4112ad:	dec    eax
  4112ae:	cwde   
  4112af:	ja     0x4112b9
  4112b1:	and    BYTE PTR [edx],al
  4112b3:	add    BYTE PTR [eax],al
  4112b5:	adc    BYTE PTR [edi],al
  4112b7:	pop    edx
  4112b8:	push   es
  4112b9:	(bad)  
  4112ba:	les    eax,FWORD PTR [eax+0x4c942148]
  4112c0:	xor    BYTE PTR [eax-0x5f7fffa0],al
  4112c6:	sbb    BYTE PTR [eax],al
  4112c8:	inc    eax
  4112c9:	sbb    BYTE PTR [esi],ah
  4112cb:	bound  esp,QWORD PTR [esi+0x2108040]
  4112d1:	inc    eax
  4112d2:	sbb    esp,DWORD PTR [eax+ecx*1]
  4112d5:	test   BYTE PTR [ebx],al
  4112d7:	adc    BYTE PTR [ecx+0x48502106],0x48
  4112de:	enter  0x1cc8,0x22
  4112e2:	add    al,0x40
  4112e4:	cs mov dh,0xc0
  4112e7:	adc    BYTE PTR [eax],al
  4112e9:	push   eax
  4112ea:	ror    BYTE PTR [ecx+0xd0280a9],0x29
  4112f1:	(bad)  
  4112f3:	adc    al,BYTE PTR [edi-0x4f5bfcf0]
  4112f9:	adc    eax,0x20913200
  4112fe:	inc    eax
  4112ff:	xchg   BYTE PTR [ecx],dl
  411301:	sbb    DWORD PTR [eax],esp
  411303:	pusha  
  411304:	adc    BYTE PTR [edx],0x2
  411307:	and    eax,0x48
  41130c:	inc    ecx
  41130d:	and    al,0x60
  41130f:	add    BYTE PTR [eax],al
  411311:	add    cl,ah
  411313:	add    BYTE PTR [ebx+ebp*1+0x6b],cl
  411317:	mov    ds:0x614be002,eax
  41131c:	leave  
  41131d:	les    eax,FWORD PTR [eax+0x68]
  411320:	inc    eax
  411321:	push   esp
  411322:	add    BYTE PTR [eax],dh
  411324:	or     BYTE PTR [eax-0x40],0x10
  411328:	add    BYTE PTR [esi],al
  41132a:	add    eax,0x44424906
  41132f:	add    eax,0x50040400
  411334:	inc    eax
  411335:	ds inc eax
  411337:	adc    BYTE PTR [eax],dl
  411339:	or     BYTE PTR [eax],ch
  41133b:	and    al,dl
  41133d:	or     DWORD PTR [ecx],0x248902a0
  411343:	rol    BYTE PTR [eax-0x7dfdbf7e],0x1
  41134a:	or     BYTE PTR [eax+eax*4],ah
  41134d:	adc    al,dh
  41134f:	add    ah,BYTE PTR [ecx+0x40c0008]
  411355:	inc    ebx
  411356:	fld    DWORD PTR [eax]
  411358:	adc    DWORD PTR [eax+0x41240388],esi
  41135e:	xchg   ecx,eax
  41135f:	add    DWORD PTR [eax],eax
  411361:	add    BYTE PTR [eax],al
  411363:	nop
  411364:	add    BYTE PTR [edx],al
  411366:	push   es
  411367:	or     eax,0x2420d020
  41136c:	or     ah,BYTE PTR [ebx]
  41136e:	adc    eax,0x91080310
  411373:	add    BYTE PTR [esi+0x44],al
  411376:	adc    BYTE PTR [eax],0xa4
  411379:	and    eax,0x40a06
  41137e:	inc    ecx
  41137f:	add    BYTE PTR [esp+eax*2],al
  411382:	add    al,BYTE PTR [eax]
  411384:	fmul   QWORD PTR [eax+edx*1]
  411387:	retf   0x2214
  41138a:	push   es
  41138b:	add    ah,BYTE PTR [ecx]
  41138d:	push   0x1c104040
  411392:	or     DWORD PTR [eax+0x0],ecx
  411395:	push   eax
  411396:	adc    ebx,edx
  411398:	mov    al,0x44
  41139a:	mov    esp,DWORD PTR ds:0x10221222
  4113a0:	and    BYTE PTR [ebp-0x3e673d7f],cl
  4113a6:	add    BYTE PTR [eax],0x82
  4113a9:	xor    al,0x21
  4113ab:	call   0x83d34401
  4113b0:	push   es
  4113b1:	inc    esp
  4113b2:	adc    BYTE PTR [edx+0x20],0xca
  4113b6:	add    al,0x52
  4113b8:	test   BYTE PTR [edx],al
  4113ba:	add    bl,BYTE PTR [eax]
  4113bc:	and    dl,BYTE PTR [eax+0x3218f410]
  4113c2:	loopne 0x4113dd
  4113c4:	inc    eax
  4113c5:	add    al,0xc
  4113c7:	or     eax,0x6ac1c421
  4113cc:	pusha  
  4113cd:	adc    cl,BYTE PTR [eax]
  4113cf:	xchg   BYTE PTR ds:0x705115,ah
  4113d5:	xchg   edx,eax
  4113d6:	add    esp,DWORD PTR [ebx+eax*1-0x7e7fbdde]
  4113dd:	adc    eax,0x5040c104
  4113e2:	adc    BYTE PTR [eax+eax*2],0x1
  4113e6:	repnz add BYTE PTR [eax],bl
  4113e9:	push   ecx
  4113ea:	dec    edx
  4113eb:	pop    edx
  4113ec:	inc    eax
  4113ed:	inc    eax
  4113ee:	adc    al,0x0
  4113f0:	push   eax
  4113f1:	inc    ecx
  4113f2:	adc    al,0x17
  4113f4:	add    BYTE PTR [eax-0x6eed9fbf],dh
  4113fa:	ret    0x280
  4113fd:	test   BYTE PTR [ebp+0x50],dl
  411400:	adc    DWORD PTR [eax],eax
  411402:	add    BYTE PTR [eax],bh
  411404:	add    BYTE PTR [edx],dl
  411406:	xor    BYTE PTR [eax-0x787f7f6c],al
  41140c:	mov    ebp,0x80087000
  411411:	or     BYTE PTR [ecx+0x43],cl
  411414:	add    BYTE PTR [ebx+0x3],0x4
  411418:	add    BYTE PTR [ebx],dl
  41141a:	and    eax,0x8490a50a
  41141f:	adc    BYTE PTR [edx-0x7e],al
  411422:	push   ebp
  411423:	adc    BYTE PTR [esp+eax*1],al
  411426:	xchg   esp,eax
  411427:	add    al,0x2
  411429:	add    eax,0x2816181
  41142e:	push   ecx
  41142f:	add    BYTE PTR [eax+0x19],dh
  411432:	inc    ecx
  411433:	dec    edx
  411434:	add    BYTE PTR [eax],cl
  411436:	das    
  411437:	add    DWORD PTR [ecx],edx
  411439:	add    BYTE PTR [edx+0x61],ah
  41143c:	add    DWORD PTR [ecx+eiz*2],ecx
  41143f:	adc    cl,BYTE PTR [eax]
  411441:	add    ah,al
  411443:	les    esi,FWORD PTR [edx+0x0]
  411446:	adc    BYTE PTR [esi+0x0],al
  411449:	or     BYTE PTR [eax],cl
  41144b:	or     al,BYTE PTR [eax+0x45]
  41144e:	add    BYTE PTR [ecx],cl
  411450:	mov    al,ds:0x23004368
  411455:	add    BYTE PTR [ecx],al
  411457:	mov    al,ds:0x61c0444
  41145c:	add    BYTE PTR [esi-0x7fefcc3c],al
  411462:	add    BYTE PTR [esi+0x40],bl
  411465:	inc    eax
  411466:	add    eax,0x20c00c10
  41146b:	nop
  41146c:	cwde   
  41146d:	mov    al,BYTE PTR [edx]
  41146f:	inc    edx
  411470:	or     al,al
  411472:	xchg   edi,eax
  411473:	int3   
  411474:	add    DWORD PTR [eax+eiz*4+0x8100220],ebp
  41147b:	add    DWORD PTR [eax+0x20],esi
  41147e:	add    ecx,DWORD PTR [ecx]
  411480:	add    DWORD PTR [ecx],ebp
  411482:	add    BYTE PTR [ecx+0x5],al
  411485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411486:	add    BYTE PTR [ebp-0x64],cl
  411489:	add    BYTE PTR [eax],al
  41148b:	xor    BYTE PTR [eax],ah
  41148d:	xor    BYTE PTR ds:0xd2818861,dl
  411493:	dec    ecx
  411494:	popa   
  411495:	mov    cs,WORD PTR [eax]
  411497:	and    al,0xa2
  411499:	add    DWORD PTR [edx+0x0],0x2488004
  4114a0:	dec    eax
  4114a1:	add    BYTE PTR [eax],al
  4114a3:	jb     0x4114af
  4114a5:	inc    ebx
  4114a6:	add    BYTE PTR [eax],al
  4114a8:	or     bh,BYTE PTR [eax+0x40]
  4114ab:	and    BYTE PTR [edi],al
  4114ad:	inc    eax
  4114ae:	add    BYTE PTR [ebx],dl
  4114b0:	dec    edx
  4114b1:	add    BYTE PTR [eax+0x4],cl
  4114b4:	add    bl,al
  4114b6:	add    BYTE PTR [ecx],dl
  4114b8:	and    al,BYTE PTR [eax]
  4114ba:	and    al,0x0
  4114bc:	add    BYTE PTR [edx+0x10200500],dl
  4114c2:	loopne 0x411528
  4114c4:	mov    eax,ds:0xc0020000
  4114c9:	inc    esi
  4114ca:	adc    al,0x6c
  4114cc:	push   cs
  4114cd:	add    dl,BYTE PTR [eax]
  4114cf:	and    BYTE PTR [edx],al
  4114d1:	pop    edx
  4114d2:	or     BYTE PTR [eax-0x66],cl
  4114d5:	mov    WORD PTR [edx],es
  4114d7:	add    BYTE PTR [eax+0x14049050],ah
  4114dd:	pop    es
  4114de:	or     al,0x87
  4114e0:	mov    ss:0x10020c14,al
  4114e6:	inc    edx
  4114e7:	les    eax,FWORD PTR ds:0x408c6a81
  4114ed:	rcl    BYTE PTR [eax],0xd7
  4114f0:	push   edx
  4114f1:	or     DWORD PTR [eax+esi*1],ebp
  4114f4:	add    eax,DWORD PTR [esi]
  4114f6:	mov    WORD PTR [esp+ebx*2],es
  4114f9:	movups XMMWORD PTR [edi-0x4feff9e0],xmm0
  411500:	add    BYTE PTR [eax],0x3e
  411503:	inc    esp
  411504:	add    edx,DWORD PTR [eax]
  411506:	add    DWORD PTR [eax],ecx
  411508:	and    al,0x11
  41150a:	add    ch,BYTE PTR [edx+0x9]
  41150d:	or     BYTE PTR [edx+edx*2],al
  411510:	nop
  411511:	mov    BYTE PTR [ecx+eax*1],ch
  411514:	nop
  411515:	adc    BYTE PTR [edx+eiz*4+0x0],al
  411519:	add    eax,0xc548101
  41151e:	or     BYTE PTR [edx],al
  411520:	adc    dl,BYTE PTR [edx]
  411522:	xchg   ecx,eax
  411523:	and    DWORD PTR [eax+0x21],eax
  411526:	inc    edx
  411527:	pusha  
  411528:	and    BYTE PTR [esi+esi*1-0x19ffa900],0x28
  411530:	and    al,BYTE PTR [eax]
  411532:	add    DWORD PTR [eax+0x5819aea0],ecx
  411538:	xchg   edi,eax
  411539:	or     DWORD PTR [ebx+0x0],0x98e10003
  411540:	mov    BYTE PTR [edx+0x42],al
  411543:	or     al,BYTE PTR [eax+0x10]
  411546:	inc    eax
  411547:	rol    DWORD PTR [esi],0xa
  41154a:	and    BYTE PTR [edx],cl
  41154c:	and    BYTE PTR [eax],dl
  41154e:	sbb    ah,al
  411550:	xor    BYTE PTR [esi+ebx*4+0x0],ch
  411554:	and    BYTE PTR [eax],0x9
  411557:	inc    esi
  411558:	inc    eax
  411559:	adc    BYTE PTR [eax+0x40],0x91
  41155d:	add    al,0x80
  41155f:	cwde   
  411560:	adc    BYTE PTR [eax],cl
  411562:	sub    BYTE PTR [ecx+0x3820c012],cl
  411568:	or     BYTE PTR [ecx+0x20],bl
  41156b:	add    BYTE PTR [ecx+eax*1],ah
  41156e:	add    BYTE PTR [eax],ah
  411570:	add    DWORD PTR [edx],esp
  411572:	inc    edx
  411573:	add    BYTE PTR [edx],0x10
  411576:	and    BYTE PTR [ebx+0x24],bl
  411579:	adc    DWORD PTR [eax+eax*1],eax
  41157c:	add    BYTE PTR [edx+0x0],dl
  41157f:	and    al,BYTE PTR [eax+0x30]
  411582:	or     BYTE PTR [edx],ah
  411584:	add    BYTE PTR [edx],ah
  411586:	add    BYTE PTR [ecx+0x241c7882],dl
  41158c:	and    DWORD PTR [eax+0x0],edx
  41158f:	and    ah,BYTE PTR [eax+0x5ac44808]
  411595:	add    BYTE PTR [ebx+0x919000a],al
  41159b:	add    BYTE PTR [edx],ah
  41159d:	add    dl,BYTE PTR [eax+0xb]
  4115a0:	jno    0x4115a2
  4115a2:	add    BYTE PTR [eax],al
  4115a4:	cmp    BYTE PTR [eax],cl
  4115a6:	pusha  
  4115a7:	mov    BYTE PTR [ecx-0x7908f7fc],al
  4115ad:	sbb    BYTE PTR [eax],bl
  4115af:	or     eax,DWORD PTR [edx]
  4115b1:	mov    BYTE PTR [ebp-0x5c],dh
  4115b4:	adc    eax,DWORD PTR [eax]
  4115b6:	mov    eax,ds:0x44810841
  4115bb:	and    DWORD PTR [eax],0xe6108212
  4115c1:	add    DWORD PTR [eax],edx
  4115c3:	inc    eax
  4115c4:	add    DWORD PTR [eax+0x106008c],eax
  4115ca:	inc    eax
  4115cb:	add    DWORD PTR [edx-0x30],edx
  4115ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115cf:	dec    eax
  4115d0:	add    al,BYTE PTR [eax]
  4115d2:	loopne 0x411619
  4115d4:	rol    DWORD PTR [edi+0x2],0x0
  4115d8:	pop    eax
  4115d9:	add    dl,BYTE PTR [eax+0x104080a4]
  4115df:	inc    ecx
  4115e0:	sbb    BYTE PTR [eax+eax*4],dl
  4115e3:	add    BYTE PTR [eax+eax*1+0x20210501],cl
  4115ea:	add    BYTE PTR [eax+0x20284],al
  4115f0:	lea    eax,[eax]
  4115f2:	adc    BYTE PTR [eax+0x10],al
  4115f5:	dec    eax
  4115f6:	mov    al,0x4c
  4115f8:	xor    BYTE PTR [edi+eax*1+0x2b400516],al
  4115ff:	and    DWORD PTR [eax+0x0],ecx
  411602:	inc    ecx
  411603:	jmp    0xc823928
  411608:	adc    DWORD PTR [eax],eax
  41160a:	add    BYTE PTR [esp+eax*2-0x66777f36],bl
  411611:	sub    DWORD PTR [eax-0x7eff22fd],edx
  411617:	and    cl,BYTE PTR [ecx+0x40805000]
  41161d:	add    BYTE PTR [edx],ah
  41161f:	pop    eax
  411620:	and    BYTE PTR [edx+0x6c008920],al
  411626:	add    al,BYTE PTR [ecx+0x6f]
  411629:	test   BYTE PTR [ecx],al
  41162b:	fwait
  41162c:	adc    BYTE PTR [eax+0x0],al
  41162f:	test   DWORD PTR [ecx+0x400018c0],esp
  411635:	(bad)  
  411636:	mov    eax,cs:0x101840a
  41163c:	dec    esp
  41163d:	xor    DWORD PTR [edx-0x3f],0x22a2a005
  411644:	add    BYTE PTR [ecx],al
  411646:	or     al,0x5
  411648:	add    al,BYTE PTR [edx+eax*1+0x20ec7062]
  41164f:	pusha  
  411650:	add    al,0x82
  411652:	cdq    
  411653:	inc    eax
  411654:	or     BYTE PTR [eax],al
  411656:	and    ah,BYTE PTR [eax+esi*1]
  411659:	adc    ah,BYTE PTR [eax+eax*1-0x33]
  41165d:	and    BYTE PTR [eax],0x40
  411660:	push   esp
  411661:	sub    BYTE PTR [ecx-0x78eb7ed8],0x4
  411668:	(bad)  
  411669:	sar    BYTE PTR ds:0x19a8908,1
  41166f:	add    DWORD PTR [edx+0x1c901c0],esp
  411675:	or     DWORD PTR [ebx],0x13c0280
  41167b:	inc    edx
  41167c:	mov    edx,DWORD PTR [eax+0x40a8805]
  411682:	and    eax,0x842c200
  411687:	mov    ds:0x206080,eax
  41168c:	add    al,bl
  41168e:	or     al,0x42
  411690:	dec    ebx
  411691:	arpl   WORD PTR [ecx],dx
  411693:	mov    al,ds:0x107513a4
  411698:	inc    ecx
  411699:	nop
  41169a:	add    al,0xb2
  41169c:	xchg   bl,dl
  41169e:	add    BYTE PTR [eax],0x9
  4116a1:	sub    DWORD PTR [edx],edx
  4116a3:	or     al,cl
  4116a5:	add    DWORD PTR ds:0x5a838001,eax
  4116ab:	mov    eax,ds:0x82eeb418
  4116b0:	nop
  4116b1:	add    BYTE PTR [eax-0x3a],al
  4116b4:	adc    al,0x8b
  4116b6:	adc    DWORD PTR [eax+0x0],edx
  4116b9:	add    DWORD PTR [edx],edx
  4116bb:	sub    BYTE PTR [eax],bh
  4116bd:	add    BYTE PTR [esp+eax*4],al
  4116c0:	add    BYTE PTR [eax+0x1],al
  4116c3:	add    BYTE PTR [edx+0x280184e],cl
  4116c9:	or     DWORD PTR [ebx],ebp
  4116cb:	or     BYTE PTR [eax],al
  4116cd:	and    al,0x4
  4116cf:	pusha  
  4116d0:	adc    dl,ah
  4116d2:	sub    eax,0x900c0206
  4116d7:	call   0x224116ff
  4116dc:	or     BYTE PTR [edx+0x51],al
  4116df:	xchg   esi,eax
  4116e0:	add    BYTE PTR [eax+ecx*1],al
  4116e3:	add    al,0x92
  4116e5:	or     edx,DWORD PTR [eax]
  4116e7:	or     BYTE PTR [eax-0x78bfbf63],al
  4116ed:	mov    eax,ds:0x2200698
  4116f2:	xchg   BYTE PTR [eax],ah
  4116f4:	or     DWORD PTR [eax+0x102601c0],eax
  4116fa:	loope  0x41167c
  4116fc:	add    BYTE PTR [eax+eiz*1],0x3
  411700:	jo     0x411706
  411702:	arpl   WORD PTR [eax],ax
  411704:	or     al,0x0
  411706:	imul   esp,DWORD PTR [eax],0x9a401db2
  41170c:	adc    BYTE PTR [eax+0x404106e0],al
  411712:	and    BYTE PTR [edx+0x54],dl
  411715:	pop    ecx
  411716:	pop    eax
  411717:	dec    esp
  411718:	sbb    eax,DWORD PTR [eax-0x6c]
  41171b:	les    esp,FWORD PTR [eax+0x20]
  41171e:	test   BYTE PTR [edx+ecx*1],ah
  411721:	adc    BYTE PTR [edx],ah
  411723:	sbb    al,0x16
  411725:	add    BYTE PTR [eax+eiz*1+0x1b421c0],dl
  41172c:	and    BYTE PTR [edi+0x125890],dl
  411732:	and    BYTE PTR [eax],ah
  411734:	inc    edx
  411735:	push   0x81048068
  41173a:	adc    ebp,DWORD PTR [esi]
  41173c:	add    al,0x10
  41173e:	add    al,0x41
  411740:	add    BYTE PTR [ebx-0x1fb7b9fc],ah
  411746:	nop
  411747:	sbb    eax,0x2b426061
  41174c:	xor    eax,0x31b3a08
  411751:	add    ah,BYTE PTR [eax+eax*1+0x41008405]
  411758:	shl    BYTE PTR [eax+0x53],1
  41175b:	add    eax,0x100b0824
  411760:	mov    BYTE PTR [eax],dl
  411762:	xor    ch,al
  411764:	or     BYTE PTR [eax],dl
  411766:	rol    BYTE PTR [eax],0x0
  411769:	sub    BYTE PTR [ecx],dl
  41176b:	add    BYTE PTR [ecx],dl
  41176d:	adc    cl,BYTE PTR [eax]
  41176f:	mov    dl,0x42
  411771:	xor    BYTE PTR ds:0xc0a8950c,ah
  411777:	push   0x523c0805
  41177c:	inc    esp
  41177d:	add    BYTE PTR [eax],al
  41177f:	or     BYTE PTR [eax],ah
  411781:	push   eax
  411782:	or     BYTE PTR [eax+0x50],cl
  411785:	pushf  
  411786:	inc    eax
  411787:	dec    eax
  411788:	bound  eax,QWORD PTR [edx]
  41178a:	xchg   BYTE PTR [edx],ch
  41178c:	add    al,0x8
  41178e:	mov    BYTE PTR [eax],cl
  411790:	adc    al,0x99
  411792:	or     BYTE PTR [edx-0x3f],0x40
  411796:	add    dl,BYTE PTR [ebx-0x5c]
  411799:	add    BYTE PTR [eax],al
  41179b:	shl    BYTE PTR [eax+eax*1],0x8
  41179f:	add    al,bh
  4117a1:	or     BYTE PTR [eax],cl
  4117a3:	nop
  4117a4:	mov    al,BYTE PTR [ebx+0x40]
  4117a7:	adc    BYTE PTR [ebx],al
  4117a9:	inc    ebx
  4117aa:	sub    BYTE PTR [eax+eiz*4],ah
  4117ad:	mov    ah,0x69
  4117af:	add    BYTE PTR [eax],bl
  4117b1:	xchg   ecx,eax
  4117b2:	inc    eax
  4117b3:	adc    BYTE PTR [ecx],ch
  4117b5:	adc    al,0x60
  4117b7:	add    BYTE PTR [eax+0x413c301],cl
  4117bd:	jb     0x41176f
  4117bf:	or     BYTE PTR [edx+0x1],0xa0
  4117c3:	add    BYTE PTR [esi],al
  4117c5:	xchg   BYTE PTR [ebx-0x64],cl
  4117c8:	or     al,0x24
  4117cb:	adc    al,0x3
  4117cd:	xchg   BYTE PTR [eax],al
  4117cf:	add    al,0xff
  4117d1:	adc    eax,0x451d30
  4117d6:	enter  0x7e,0x5
  4117da:	cmp    DWORD PTR [eax+0x2422250],eax
  4117e0:	and    DWORD PTR [edx+eax*2],0x20
  4117e4:	cs pop ebp
  4117e6:	add    BYTE PTR [ecx+0x8a108],al
  4117ec:	and    al,0x12
  4117ee:	or     BYTE PTR [edx+0x1a0b8044],bl
  4117f4:	rcr    BYTE PTR [ecx],0x65
  4117f7:	and    BYTE PTR [edx],al
  4117f9:	or     al,BYTE PTR [edx]
  4117fb:	mov    al,0x4a
  4117fd:	sub    BYTE PTR [esi],ch
  4117ff:	test   BYTE PTR [edx],dl
  411801:	and    DWORD PTR [ecx],ebp
  411803:	or     BYTE PTR [edx],al
  411805:	add    al,0x82
  411807:	or     BYTE PTR [eax],al
  411809:	or     DWORD PTR [eax],ecx
  41180b:	nop
  41180c:	push   ecx
  41180d:	add    BYTE PTR [eax+0x11],bh
  411810:	mov    DWORD PTR [eax+edx*1+0x4500000],eax
  411817:	rol    BYTE PTR [ecx+0x819a25a],0x44
  41181e:	add    al,0xa
  411820:	xor    BYTE PTR [ecx-0x71f378a0],al
  411826:	add    BYTE PTR [eax+0x0],ah
  411829:	sbb    cl,dl
  41182b:	add    BYTE PTR ds:0xc4214209,al
  411831:	or     BYTE PTR [esp+eax*4-0x5b1dfb80],0x0
  411839:	add    BYTE PTR [edx],al
  41183b:	inc    eax
  41183c:	sbb    BYTE PTR [eax-0x80],al
  41183f:	pusha  
  411840:	and    dl,BYTE PTR [eax+0x76]
  411843:	xchg   edx,eax
  411844:	and    DWORD PTR ds:0x25420420,ebx
  41184a:	and    BYTE PTR [edx+edx*1],dl
  41184d:	and    BYTE PTR [ecx-0x3c],al
  411850:	push   es
  411851:	add    eax,DWORD PTR [eax+0x9]
  411854:	add    eax,0xc440100
  411859:	add    BYTE PTR [eax],ah
  41185b:	popf   
  41185c:	adc    DWORD PTR [eax+0x224c0088],0x82a3610
  411866:	and    BYTE PTR [esi+0x2],ah
  411869:	inc    esp
  41186a:	add    eax,DWORD PTR [eax+0x9]
  41186d:	add    al,0x48
  41186f:	adc    BYTE PTR [eax],ah
  411871:	nop
  411872:	inc    edi
  411873:	imul   eax,DWORD PTR [eax],0x110c4015
  411879:	adc    al,0x44
  41187b:	call   0x8241:0x60003310
  411882:	sub    al,0x10
  411884:	inc    eax
  411885:	add    bl,BYTE PTR ds:0x40228c12
  41188b:	inc    ebx
  41188c:	add    DWORD PTR [eax+0x48280190],esp
  411892:	push   eax
  411893:	sub    DWORD PTR [edx],esi
  411895:	add    BYTE PTR [ecx-0x66],al
  411898:	sbb    BYTE PTR [eax+0x10],dl
  41189b:	push   eax
  41189c:	nop
  41189d:	push   edx
  41189e:	dec    eax
  41189f:	xor    BYTE PTR [edi+eax*1],cl
  4118a2:	or     dl,BYTE PTR [eax]
  4118a4:	or     BYTE PTR [eax],al
  4118a6:	or     BYTE PTR ds:0x50844044,al
  4118ac:	bound  esi,QWORD PTR [ebp-0x8]
  4118af:	mov    al,ah
  4118b1:	les    edx,FWORD PTR [eax]
  4118b3:	xchg   edx,eax
  4118b4:	adc    BYTE PTR [esi],al
  4118b6:	adc    al,BYTE PTR [ecx+0x20220b23]
  4118bc:	adc    BYTE PTR [eax+eax*2+0x400e8009],al
  4118c3:	and    al,0x25
  4118c5:	sub    BYTE PTR [eax],al
  4118c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118c8:	add    BYTE PTR [eax+0x10c019e0],dl
  4118ce:	sbb    BYTE PTR [eax+ecx*1+0x20],dh
  4118d2:	bound  eax,QWORD PTR [edx]
  4118d4:	and    al,0x5
  4118d6:	push   es
  4118d7:	add    eax,0xd724212
  4118dc:	or     BYTE PTR [edx+0x5864003],dl
  4118e2:	add    BYTE PTR [edx],al
  4118e4:	add    DWORD PTR [edx],eax
  4118e6:	test   BYTE PTR [eax+esi*2+0x68],cl
  4118ea:	adc    DWORD PTR [esp+ebx*2+0x18a1980],esi
  4118f1:	and    BYTE PTR [esi-0x7fcdfffc],al
  4118f7:	adc    BYTE PTR [edx+0xa055480],al
  4118fd:	or     eax,0x291603a4
  411902:	xor    BYTE PTR [eax],al
  411904:	xchg   ebx,eax
  411905:	add    DWORD PTR [eax+eiz*1],0x68064006
  41190c:	and    BYTE PTR [eax],dl
  41190e:	sbb    BYTE PTR [ebx],al
  411910:	xor    ch,BYTE PTR [ecx]
  411912:	sbb    BYTE PTR [ecx],al
  411914:	inc    edx
  411915:	add    eax,DWORD PTR [edx+0x1542304]
  41191b:	or     BYTE PTR [edx+eax*1],ah
  41191e:	nop
  41191f:	add    DWORD PTR ds:0x48416085,eax
  411925:	mov    al,ds:0x52262322
  41192a:	add    ah,BYTE PTR [ecx+0x41]
  41192d:	add    cl,BYTE PTR [eax]
  41192f:	pusha  
  411930:	inc    eax
  411931:	and    BYTE PTR [ecx+eax*4+0x53130020],al
  411938:	xor    esp,DWORD PTR [eax+eiz*4]
  41193b:	test   al,0x83
  41193d:	dec    ecx
  41193e:	add    al,BYTE PTR [edx]
  411940:	xchg   ecx,eax
  411941:	add    dl,BYTE PTR [ecx]
  411943:	add    BYTE PTR [edx+0xc0012d0],al
  411949:	add    BYTE PTR [ecx+0x4021000],0x40
  411950:	test   BYTE PTR [eax],ch
  411952:	xor    DWORD PTR [eax],eax
  411954:	out    0x0,eax
  411956:	sbb    al,0x5
  411958:	and    BYTE PTR [eax],dh
  41195a:	xor    al,0x6e
  41195c:	cmp    dh,BYTE PTR [eax]
  41195e:	lea    ecx,[eax]
  411960:	enter  0x74c0,0x70
  411964:	add    BYTE PTR [eax-0x70],al
  411967:	mov    eax,ds:0xa4400211
  41196c:	dec    eax
  41196d:	add    BYTE PTR [ebx+0x2010442],cl
  411973:	adc    al,dl
  411975:	inc    eax
  411976:	nop
  411977:	test   BYTE PTR [eax],cl
  411979:	adc    cl,BYTE PTR [eax+0x8]
  41197c:	mov    al,ds:0x834a0812
  411981:	and    al,BYTE PTR [eax]
  411983:	inc    esi
  411984:	and    BYTE PTR [eax-0x5e],0x84
  411988:	or     BYTE PTR [ebx+eiz*1],dl
  41198b:	inc    esp
  41198c:	or     BYTE PTR [eax+0x40],0x62
  411990:	push   eax
  411991:	cmp    cl,BYTE PTR [eax]
  411993:	test   al,al
  411995:	and    BYTE PTR [eax+0x2298d8af],0x29
  41199c:	xor    al,0x40
  41199e:	pop    es
  41199f:	mov    cl,0x68
  4119a1:	and    BYTE PTR [eax],bl
  4119a3:	mov    WORD PTR [eax],?
  4119a5:	test   eax,0x20480912
  4119aa:	sub    al,BYTE PTR [eax]
  4119ac:	xchg   BYTE PTR [eax-0x80],al
  4119af:	add    esp,DWORD PTR [ecx+0x34]
  4119b2:	mov    BYTE PTR [eax+0x48],ah
  4119b5:	dec    ecx
  4119b6:	add    DWORD PTR [eax],eax
  4119b8:	add    DWORD PTR [eax],edx
  4119ba:	pop    es
  4119bb:	mov    BYTE PTR [edx+0x9],al
  4119be:	or     ah,BYTE PTR [edi]
  4119c0:	or     al,bl
  4119c2:	daa    
  4119c3:	and    BYTE PTR [eax],al
  4119c5:	mov    ds:0x50134000,eax
  4119ca:	enter  0x133a,0x38
  4119ce:	add    dh,BYTE PTR cs:[eax+0x30060084]
  4119d5:	add    esp,DWORD PTR [ecx+0x0]
  4119db:	and    DWORD PTR [eax],ecx
  4119dd:	or     eax,0x528a0a20
  4119e2:	adc    BYTE PTR [ebx],cl
  4119e4:	mov    al,0x2
  4119e6:	inc    eax
  4119e7:	and    al,dh
  4119e9:	mov    BYTE PTR [esi],ah
  4119eb:	inc    esp
  4119ec:	push   0x30281d2
  4119f1:	add    BYTE PTR [ebx-0x7d],al
  4119f4:	cmp    BYTE PTR [eax-0x6b],dl
  4119f7:	push   eax
  4119f8:	or     BYTE PTR [ecx+0x51],al
  4119fb:	and    BYTE PTR [ebx],ah
  4119fd:	add    al,BYTE PTR [edi]
  4119ff:	pop    ss
  411a00:	rcl    BYTE PTR [eax+0x51],0x2
  411a04:	xchg   ecx,eax
  411a05:	add    BYTE PTR [eax],dl
  411a07:	or     al,0xc8
  411a09:	adc    BYTE PTR [esi],ch
  411a0b:	adc    BYTE PTR [eax+0x30],cl
  411a0e:	add    BYTE PTR [ecx],al
  411a10:	and    BYTE PTR [eax],al
  411a12:	mov    eax,ds:0x28d42c0
  411a17:	aam    0x95
  411a19:	pop    ss
  411a1a:	(bad)  
  411a1b:	and    al,0x69
  411a1d:	add    al,cl
  411a1f:	xchg   ecx,eax
  411a20:	or     cl,cl
  411a22:	pop    eax
  411a23:	sbb    BYTE PTR [edx],ah
  411a25:	add    BYTE PTR [esp+eiz*2+0x28040008],bl
  411a2c:	xor    BYTE PTR [eax+0x31885b42],0x20
  411a33:	add    al,0x8
  411a35:	xor    bl,BYTE PTR [eax+0x2400004]
  411a3b:	add    al,0x39
  411a3d:	cwde   
  411a3e:	xor    dh,BYTE PTR [edx+eax*4]
  411a41:	or     al,0x0
  411a43:	and    BYTE PTR [eax+0x4320a021],al
  411a49:	inc    eax
  411a4a:	adc    al,0x30
  411a4c:	cwde   
  411a4d:	mov    esp,0xa0800340
  411a52:	add    BYTE PTR [eax],al
  411a54:	add    al,0xab
  411a56:	or     BYTE PTR [ebp-0x7c],al
  411a59:	mov    WORD PTR [eax+0x30],fs
  411a5c:	gs mov edx,0x2241192
  411a62:	pop    es
  411a63:	add    dl,BYTE PTR [ecx]
  411a65:	add    eax,DWORD PTR [edx]
  411a67:	add    al,0x70
  411a69:	inc    eax
  411a6a:	mov    al,ds:0x80898100
  411a6f:	adc    al,BYTE PTR [eax]
  411a71:	add    DWORD PTR [eax+ecx*1+0x40980002],ecx
  411a78:	add    eax,edx
  411a7a:	push   cs
  411a7b:	and    BYTE PTR [eax],0x40
  411a7e:	add    BYTE PTR [edx+eax*4],al
  411a81:	dec    esp
  411a82:	mov    al,0x9
  411a84:	or     cl,BYTE PTR [eax]
  411a86:	adc    eax,DWORD PTR [esi+0x883d09a]
  411a8c:	adc    eax,DWORD PTR [ebx+ebx*1]
  411a8f:	or     BYTE PTR [eax],ah
  411a91:	sub    al,0xe8
  411a93:	and    BYTE PTR [edx-0x7fe66af0],0x83
  411a9a:	enter  0x8010,0x9
  411a9e:	push   es
  411a9f:	or     BYTE PTR [eax+0x4],bh
  411aa2:	rol    BYTE PTR [eax],0x8
  411aa5:	xor    cl,BYTE PTR [eax+0x68]
  411aa8:	inc    eax
  411aa9:	xchg   ecx,eax
  411aaa:	add    dh,BYTE PTR [edx-0x7d7756ee]
  411ab0:	or     cl,BYTE PTR [eax]
  411ab2:	add    dl,dl
  411ab4:	or     eax,0x81da414
  411ab9:	add    al,0xa
  411abb:	adc    eax,DWORD PTR [ecx]
  411abd:	or     BYTE PTR [ecx],ch
  411abf:	add    BYTE PTR [eax],dl
  411ac1:	or     BYTE PTR [eax+0x8410641],al
  411ac7:	test   BYTE PTR [ebp+ecx*1-0x70],al
  411acb:	shl    BYTE PTR [esi],0x60
  411ace:	rol    ebx,0xa
  411ad1:	dec    eax
  411ad2:	push   es
  411ad3:	mov    BYTE PTR [eax-0x70],dl
  411ad6:	add    DWORD PTR [ebx],eax
  411ad8:	adc    BYTE PTR [edx+0x60000035],0x1
  411adf:	or     BYTE PTR [eax+edx*1-0x38],0x25
  411ae4:	cmp    DWORD PTR [eax+0x3],ecx
  411ae7:	mov    edx,0x17450020
  411aec:	add    al,0x84
  411aee:	dec    ebp
  411aef:	sub    BYTE PTR [eax+0x31a031a6],dh
  411af5:	add    BYTE PTR [eax],al
  411af7:	pop    eax
  411af8:	add    al,0x21
  411afa:	add    eax,0xc8254000
  411b00:	inc    eax
  411b01:	sub    al,0xa3
  411b03:	sbb    DWORD PTR [ebx+0x63],esp
  411b06:	add    BYTE PTR [esp+esi*1],cl
  411b09:	sbb    BYTE PTR [eax],dl
  411b0b:	sub    DWORD PTR [edx-0x80],ecx
  411b0e:	xor    BYTE PTR [eax+eax*4+0x20000217],al
  411b15:	sub    BYTE PTR [edx+ecx*4],ah
  411b18:	add    eax,DWORD PTR [eax+0x2]
  411b1b:	add    BYTE PTR [edx],cl
  411b1d:	inc    edx
  411b1e:	imul   esp,DWORD PTR [eax],0x18
  411b21:	mov    ah,0x6
  411b24:	mov    al,ds:0x1a100a5
  411b29:	add    BYTE PTR [eax+0x18],dl
  411b2c:	inc    ebx
  411b2d:	mov    al,ds:0x28875280
  411b32:	push   es
  411b33:	sub    BYTE PTR [eax+0x201cc013],dl
  411b39:	sbb    BYTE PTR [esi-0x79f57fe0],0x0
  411b40:	rcl    BYTE PTR [ecx],0x1c
  411b43:	add    BYTE PTR [edx],cl
  411b45:	mov    al,ds:0x98210034
  411b4a:	nop
  411b4b:	add    BYTE PTR [ebx],0x81
  411b4e:	or     BYTE PTR [ecx+0xd],al
  411b51:	inc    edi
  411b52:	cs push cs
  411b54:	add    al,0x88
  411b56:	adc    al,BYTE PTR [ecx]
  411b58:	add    al,0xa
  411b5a:	and    BYTE PTR [edx],cl
  411b5c:	mov    al,ds:0x1040c0
  411b61:	add    al,0x20
  411b63:	adc    BYTE PTR [eax+0x23],al
  411b66:	jns    0x411b68
  411b68:	xor    BYTE PTR [eax+0x0],dl
  411b6b:	imul   edx,edx,0x49a042a3
  411b71:	or     BYTE PTR [ecx],al
  411b73:	sbb    DWORD PTR [eax+0x8],ebx
  411b76:	inc    ebx
  411b77:	push   edx
  411b78:	mov    BYTE PTR [eax+0x860034],bl
  411b7e:	and    dh,BYTE PTR [eax+0x32]
  411b81:	inc    edx
  411b82:	add    DWORD PTR [eax-0xe],eax
  411b85:	add    al,BYTE PTR [eax]
  411b87:	rol    BYTE PTR [eax-0x5f],cl
  411b8a:	or     DWORD PTR [ecx],esp
  411b8c:	add    BYTE PTR [ecx+0x43],0x21
  411b90:	xchg   edx,eax
  411b91:	add    DWORD PTR [ebp+0xc400841],eax
  411b97:	fs add al,0x80
  411b9a:	adc    al,0x35
  411b9c:	add    ch,BYTE PTR [eax-0x80]
  411b9f:	or     BYTE PTR [edx],0x21
  411ba2:	and    BYTE PTR [eax],al
  411ba4:	mov    edx,es
  411ba6:	dec    ecx
  411ba7:	add    BYTE PTR [edi+0x10908],dl
  411bad:	test   BYTE PTR [eax+ecx*2],al
  411bb0:	add    DWORD PTR [eax],eax
  411bb2:	pop    ecx
  411bb3:	pop    es
  411bb4:	add    dl,BYTE PTR [ecx]
  411bb6:	add    dl,BYTE PTR [eax+0x0]
  411bb9:	add    BYTE PTR ds:0xe0a84410,cl
  411bbf:	inc    edx
  411bc0:	push   edx
  411bc1:	add    al,0x4
  411bc3:	adc    DWORD PTR [eax],ebx
  411bc5:	add    al,BYTE PTR [eax]
  411bc7:	add    BYTE PTR ds:0x30c03902,al
  411bcd:	loopne 0x411bf3
  411bcf:	add    BYTE PTR ds:0x4b20028,al
  411bd5:	add    BYTE PTR [ecx+0x56],bl
  411bd8:	adc    BYTE PTR [ebx+0x14],al
  411bdb:	sbb    al,0x89
  411bdd:	or     BYTE PTR [esi-0x7f5afe80],ah
  411be3:	sbb    eax,DWORD PTR [edx]
  411be5:	or     dh,BYTE PTR [ecx+eax*1]
  411be8:	test   BYTE PTR [ecx],al
  411bea:	adc    BYTE PTR [eax],dl
  411bec:	add    al,BYTE PTR [eax]
  411bee:	add    eax,ecx
  411bf0:	lds    eax,FWORD PTR [eax]
  411bf2:	inc    ecx
  411bf3:	pop    esi
  411bf4:	add    eax,0xc0010c80
  411bf9:	ret    0x14a8
  411bfc:	mov    ds:0x83228693,al
  411c01:	fwait
  411c02:	imul   eax,DWORD PTR [eax+0x4],0x32
  411c06:	cmp    al,0x20
  411c08:	and    al,0xa8
  411c0a:	add    dl,BYTE PTR [eax+0x51]
  411c0d:	or     BYTE PTR [eax],al
  411c0f:	sub    BYTE PTR [eax],al
  411c11:	push   cs
  411c12:	xor    BYTE PTR [esi-0x80],ah
  411c15:	pop    eax
  411c16:	inc    eax
  411c17:	adc    BYTE PTR [eax],bl
  411c19:	add    al,BYTE PTR [esi]
  411c1b:	jno    0x411b9d
  411c1d:	cwde   
  411c1e:	add    BYTE PTR [ecx-0x6dd69bf8],ah
  411c24:	xor    edx,DWORD PTR [edx]
  411c26:	push   ebx
  411c27:	inc    eax
  411c28:	sub    cl,dh
  411c2a:	nop
  411c2b:	and    al,0x10
  411c2d:	xor    BYTE PTR [esi],cl
  411c2f:	sbb    BYTE PTR [ecx-0x40],al
  411c32:	inc    esp
  411c33:	inc    eax
  411c34:	or     eax,0x200298
  411c39:	or     al,0x9f
  411c3b:	nop
  411c3c:	add    BYTE PTR [edx],ah
  411c3e:	add    BYTE PTR [edx],0x90
  411c41:	add    al,0x40
  411c43:	mov    es,WORD PTR [edi]
  411c45:	xor    DWORD PTR [eax-0x77d75980],edx
  411c4b:	mov    al,0x81
  411c4d:	add    al,0x60
  411c4f:	mov    edx,0x8120120
  411c54:	add    dl,BYTE PTR [edx]
  411c56:	and    al,BYTE PTR [eax+0x0]
  411c59:	jg     0x411ca5
  411c5b:	or     ecx,DWORD PTR [eax-0x46ffa9e5]
  411c61:	push   es
  411c62:	sbb    BYTE PTR [edx],cl
  411c64:	add    al,BYTE PTR [ebx]
  411c66:	mov    ds:0x9004a600,eax
  411c6b:	add    al,BYTE PTR [eax]
  411c6d:	add    BYTE PTR [ecx],dl
  411c6f:	aad    0x40
  411c71:	add    al,0x90
  411c73:	mov    al,0x28
  411c75:	inc    eax
  411c76:	add    BYTE PTR [edx+0x7f206647],ah
  411c7c:	test   BYTE PTR ds:0x99211214,dh
  411c82:	cmp    DWORD PTR [eax+0x4a],esi
  411c85:	adc    al,0x50
  411c87:	pusha  
  411c88:	shl    DWORD PTR [eax-0x2dbf3e6f],cl
  411c8e:	mov    eax,ds:0xd248420
  411c93:	adc    al,BYTE PTR [eax+0x10]
  411c96:	mov    ds:0x944006c0,eax
  411c9b:	adc    BYTE PTR [ecx],dl
  411c9d:	inc    esp
  411c9e:	test   al,0x0
  411ca0:	pop    esp
  411ca1:	add    dl,ah
  411ca3:	add    DWORD PTR [edx],eax
  411ca5:	inc    edx
  411ca6:	add    BYTE PTR [eax-0x80],al
  411ca9:	and    ch,al
  411cab:	sbb    DWORD PTR [ecx],edx
  411cad:	mov    BYTE PTR [eax],al
  411caf:	add    BYTE PTR [esi+0x12],0x31
  411cb3:	add    DWORD PTR [ecx+0x2888012],edi
  411cb9:	inc    esp
  411cba:	xor    DWORD PTR [edx+0x61c41f2],ecx
  411cc0:	or     BYTE PTR [edx],dh
  411cc2:	dec    eax
  411cc3:	inc    esp
  411cc4:	inc    eax
  411cc5:	adc    dl,BYTE PTR ds:0x402a0083
  411ccb:	or     BYTE PTR [ebp+0x0],0x8
  411ccf:	inc    esp
  411cd0:	inc    eax
  411cd1:	add    BYTE PTR [eax+ecx*4],al
  411cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cd5:	sbb    al,BYTE PTR [edx+0x6]
  411cd8:	add    al,0x60
  411cda:	mov    DWORD PTR [ecx],eax
  411cdc:	and    DWORD PTR [edx+0x53],edx
  411cdf:	add    BYTE PTR [eax],dl
  411ce1:	push   eax
  411ce2:	push   ecx
  411ce3:	adc    BYTE PTR [eax+eax*8],al
  411ce6:	add    BYTE PTR [edx+0x240112],0xf
  411ced:	add    ah,BYTE PTR [esi]
  411cef:	xor    cl,al
  411cf1:	add    BYTE PTR [eax+0x1a980001],al
  411cf7:	or     edx,DWORD PTR [edx]
  411cf9:	push   eax
  411cfa:	and    BYTE PTR [eax],al
  411cfc:	adc    ch,BYTE PTR [ebx+edx*1]
  411cff:	sbb    BYTE PTR [ecx+0x3004510b],al
  411d05:	(bad)  
  411d06:	adc    al,0x12
  411d08:	or     BYTE PTR [ebx+eiz*1],al
  411d0b:	inc    eax
  411d0c:	ret    0x10
  411d0f:	or     BYTE PTR [ecx],al
  411d11:	add    eax,0x80208200
  411d16:	sbb    eax,0x905011a8
  411d1b:	or     eax,DWORD PTR [eax]
  411d1d:	and    BYTE PTR [eax-0x30],al
  411d20:	or     BYTE PTR ds:0x8a0c08c8,al
  411d26:	inc    eax
  411d27:	sbb    dl,BYTE PTR [eax+0x35886007]
  411d2d:	push   ebx
  411d2e:	adc    BYTE PTR [eax],al
  411d30:	adc    BYTE PTR [ecx-0x40],cl
  411d33:	add    al,0x0
  411d35:	sub    DWORD PTR [eax-0x3ebfe8c8],ebp
  411d3b:	mov    eax,ds:0x10052c00
  411d40:	add    BYTE PTR [ecx],al
  411d42:	shl    DWORD PTR [ebx+0x40],0x0
  411d46:	xor    DWORD PTR [esp+edx*2],0xffffff94
  411d4a:	or     al,0x0
  411d4c:	push   es
  411d4d:	sub    al,0xa
  411d4f:	mov    ah,0x8a
  411d51:	adc    BYTE PTR [ecx],dl
  411d53:	inc    eax
  411d54:	push   eax
  411d55:	or     al,0x60
  411d57:	add    al,0x57
  411d59:	add    cl,al
  411d5b:	and    BYTE PTR [eax],bl
  411d5d:	add    BYTE PTR [esp+ecx*1],0x0
  411d61:	add    BYTE PTR [eax-0x4f],0x6b
  411d65:	and    BYTE PTR [ecx+0x2],al
  411d68:	push   edi
  411d69:	mov    BYTE PTR [eax+0xa81c011],cl
  411d6f:	add    al,0x8d
  411d71:	mov    eax,DWORD PTR [ebx+0x220203b]
  411d77:	and    BYTE PTR [edx],ah
  411d79:	add    DWORD PTR [eax+eax*1+0x348456c8],eax
  411d80:	dec    ecx
  411d81:	adc    BYTE PTR [ecx+ecx*1+0x3851528a],al
  411d88:	push   eax
  411d89:	add    BYTE PTR [edx],dl
  411d8b:	and    BYTE PTR [esi],0x11
  411d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d8f:	pusha  
  411d90:	mov    al,ds:0x8501180d
  411d95:	adc    BYTE PTR [ecx+0x11080084],ah
  411d9b:	sbb    al,BYTE PTR [edx]
  411d9d:	and    al,BYTE PTR [eax]
  411d9f:	add    eax,0x48182010
  411da4:	sbb    dl,BYTE PTR [eax+0x202c2640]
  411daa:	or     BYTE PTR [ecx],0x11
  411dad:	or     BYTE PTR [eax],al
  411daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411db0:	adc    eax,0x288182
  411db5:	test   cl,al
  411db7:	adc    DWORD PTR [eax+0x18],eax
  411dba:	mov    ds:0x18014100,al
  411dbf:	and    al,BYTE PTR [ecx]
  411dc1:	or     DWORD PTR [eax+0xa1001],ecx
  411dc7:	pusha  
  411dc8:	adc    al,BYTE PTR [eax]
  411dca:	or     BYTE PTR [eax-0x7c],ch
  411dcd:	or     BYTE PTR [eax+0x0],dl
  411dd0:	in     al,dx
  411dd1:	mov    ds:0xc9943294,eax
  411dd6:	add    eax,0xc00102a0
  411ddb:	adc    al,BYTE PTR [eax+0x6]
  411dde:	pop    eax
  411ddf:	add    BYTE PTR [eax],dl
  411de1:	and    BYTE PTR [edi],al
  411de3:	add    BYTE PTR [edi],al
  411de5:	sbb    BYTE PTR [edx+0xc],dl
  411de8:	add    al,0x5
  411dea:	scas   al,BYTE PTR es:[edi]
  411deb:	inc    edx
  411dec:	adc    BYTE PTR [ecx],0x91
  411def:	and    BYTE PTR [edx],dh
  411df1:	int    0x10
  411df3:	xor    BYTE PTR [eax],0x44
  411df6:	add    BYTE PTR [eax],cl
  411df8:	add    al,0x90
  411dfa:	jne    0x411e06
  411dfc:	cwde   
  411dfd:	and    eax,0x910e03
  411e02:	add    al,0xa0
  411e04:	add    BYTE PTR [eax+0x40],al
  411e07:	add    al,BYTE PTR [esi]
  411e09:	add    al,0x20
  411e0b:	dec    ebx
  411e0c:	add    BYTE PTR [edx],0x48
  411e0f:	add    eax,0x12004f01
  411e14:	xor    al,dl
  411e16:	inc    edx
  411e17:	add    dl,BYTE PTR [ebx]
  411e19:	je     0x411e70
  411e1b:	mov    DWORD PTR [edx],eax
  411e1d:	mov    ds:0x1410118,al
  411e22:	and    BYTE PTR [edx+0x2524a978],ah
  411e28:	adc    BYTE PTR [esi],al
  411e2a:	rcl    BYTE PTR [eax],0xdc
  411e2d:	adc    BYTE PTR [eax+0x12],al
  411e30:	sub    BYTE PTR [eax],dl
  411e32:	mov    eax,0x2002078
  411e37:	and    BYTE PTR [eax],dh
  411e39:	or     cl,al
  411e3b:	xor    BYTE PTR [ecx+0x2a],ch
  411e3e:	mov    ds:0x22510014,al
  411e43:	sub    DWORD PTR [esi+eax*2+0x10008820],esp
  411e4a:	add    BYTE PTR [eax-0x76],ah
  411e4d:	and    BYTE PTR [eax+ebp*4],ch
  411e50:	and    BYTE PTR [edx],cl
  411e52:	and    BYTE PTR [eax+eax*4],cl
  411e55:	jo     0x411e8b
  411e57:	add    BYTE PTR [eax],bl
  411e59:	or     al,0x10
  411e5b:	adc    al,0xd0
  411e5d:	and    BYTE PTR [ecx+0x5090],0x40
  411e64:	sub    BYTE PTR [eax],ah
  411e66:	or     eax,DWORD PTR [ecx]
  411e68:	add    dl,ah
  411e6a:	inc    eax
  411e6b:	push   ebp
  411e6c:	add    BYTE PTR [edx],ch
  411e6e:	or     dh,BYTE PTR [ebx]
  411e70:	add    dh,BYTE PTR [edx]
  411e72:	sbb    al,BYTE PTR [eax+eax*4]
  411e75:	add    dl,BYTE PTR [eax]
  411e77:	cmovb  eax,DWORD PTR [esi-0x3a]
  411e7b:	or     al,BYTE PTR [ebx+0x3b54025]
  411e81:	or     al,0x30
  411e83:	adc    BYTE PTR [eax],al
  411e85:	pusha  
  411e86:	into   
  411e87:	sub    DWORD PTR [eax],esp
  411e89:	add    BYTE PTR [esi+0x56],0x20
  411e8d:	inc    ecx
  411e8e:	add    BYTE PTR [ecx+ecx*2],0x88
  411e92:	adc    DWORD PTR [eax+eax*1+0x58108000],0x3
  411e9a:	adc    al,0x90
  411e9c:	mov    ah,0x1
  411e9e:	add    al,BYTE PTR [ecx+0x42325802]
  411ea4:	or     al,BYTE PTR [ecx]
  411ea6:	clc    
  411ea7:	sbb    al,0x14
  411ea9:	add    al,0x6d
  411eab:	sbb    ch,BYTE PTR [eax]
  411ead:	add    BYTE PTR [eax],0x95
  411eb0:	and    al,BYTE PTR [edx]
  411eb2:	xchg   ecx,eax
  411eb3:	sbb    al,0x82
  411eb5:	push   edx
  411eb6:	adc    ebp,edx
  411eb8:	xor    BYTE PTR [eax+eiz*2],al
  411ebb:	sbb    BYTE PTR [eax+0x10941104],al
  411ec1:	or     dl,BYTE PTR [eax-0x6bcff4fe]
  411ec7:	xchg   BYTE PTR [ebx+ebp*4+0x5],al
  411ecb:	xor    dl,al
  411ecd:	add    esp,0xffffffc8
  411ed0:	inc    eax
  411ed1:	and    ch,BYTE PTR ds:0x8100000a
  411ed7:	aad    0x21
  411ed9:	add    DWORD PTR [edx],ecx
  411edb:	inc    eax
  411edc:	xor    ah,BYTE PTR [esi]
  411ede:	add    BYTE PTR [eax],al
  411ee0:	or     BYTE PTR es:[eax-0x78],ah
  411ee4:	or     bl,al
  411ee6:	sbb    BYTE PTR [eax],al
  411ee8:	rol    DWORD PTR [eax],0x91
  411eeb:	adc    BYTE PTR ds:0x84589110,al
  411ef1:	add    BYTE PTR [eax+eax*2],0xe
  411ef5:	dec    ebp
  411ef6:	or     BYTE PTR [eax+0x300b022a],al
  411efc:	rol    BYTE PTR [ebx+0x3],0x4c
  411f00:	or     BYTE PTR [ecx+0x30602040],bh
  411f06:	add    al,BYTE PTR [eax+ecx*2]
  411f09:	inc    edi
  411f0a:	pop    ebp
  411f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f0c:	or     BYTE PTR [eax+0x626784c],al
  411f12:	and    BYTE PTR [eax],0xe8
  411f15:	push   ds
  411f16:	adc    al,0x8
  411f18:	xchg   ebp,eax
  411f19:	and    al,0x83
  411f1b:	xchg   edx,eax
  411f1c:	add    DWORD PTR ds:0x9ad8101,ecx
  411f22:	and    bh,BYTE PTR [eax]
  411f24:	pusha  
  411f25:	and    BYTE PTR [eax],ah
  411f27:	jb     0x411f4d
  411f29:	or     al,0x23
  411f2b:	rol    BYTE PTR [esi],1
  411f2d:	add    BYTE PTR [edx+eax*1+0x59],al
  411f31:	rol    BYTE PTR [esi],0x1
  411f34:	and    eax,DWORD PTR ds:0x8005139
  411f3a:	inc    esp
  411f3b:	push   edi
  411f3c:	push   eax
  411f3d:	add    BYTE PTR [eax],bl
  411f3f:	add    eax,0x45880702
  411f44:	pusha  
  411f45:	sub    BYTE PTR [eax],0x84
  411f48:	add    DWORD PTR [esp+ecx*1+0x56c28131],edx
  411f4f:	and    BYTE PTR [ecx],al
  411f51:	repnz push cs
  411f53:	inc    ebp
  411f54:	add    DWORD PTR [ecx],eax
  411f56:	add    dl,al
  411f58:	and    bl,BYTE PTR [eax+0x81112d]
  411f5e:	add    BYTE PTR [eax+0x409268f1],cl
  411f64:	and    BYTE PTR [eax+0xa],dl
  411f67:	and    BYTE PTR [eax],dl
  411f69:	gs ins BYTE PTR es:[edi],dx
  411f6b:	nop
  411f6c:	and    DWORD PTR [eax-0x58],eax
  411f6f:	or     BYTE PTR [ebx],al
  411f71:	add    BYTE PTR [ecx+0x10],0x1
  411f75:	adc    esi,DWORD PTR [eax]
  411f77:	sbb    DWORD PTR [edx+0x8],esi
  411f7a:	popa   
  411f7b:	cwde   
  411f7c:	add    DWORD PTR [eax],eax
  411f7e:	adc    BYTE PTR [ecx+0x401a0010],0x82
  411f85:	add    BYTE PTR [edx+eax*8+0x0],ah
  411f89:	add    BYTE PTR es:[eax+0x44f04042],dl
  411f90:	popa   
  411f91:	js     0x411fdb
  411f93:	mov    al,ds:0x86d4162
  411f98:	and    al,0x4c
  411f9a:	add    al,0x10
  411f9c:	sbb    al,0xa0
  411f9e:	les    eax,FWORD PTR [eax+edx*4]
  411fa1:	or     BYTE PTR [ecx],dh
  411fa3:	inc    esi
  411fa4:	add    BYTE PTR [ecx+0x1d6015ff],ah
  411faa:	inc    ebp
  411fab:	add    BYTE PTR [eax],al
  411fad:	inc    ecx
  411fae:	add    eax,DWORD PTR [edx]
  411fb0:	dec    eax
  411fb1:	sub    eax,DWORD PTR [eax]
  411fb3:	inc    eax
  411fb4:	ror    DWORD PTR [esi+0x190814b1],1
  411fba:	mov    al,ds:0x10085ac2
  411fbf:	inc    eax
  411fc0:	fcomp  DWORD PTR [ecx+esi*1+0x54000882]
  411fc7:	xor    BYTE PTR [edx+eax*2],dh
  411fca:	and    al,0x99
  411fcc:	sbb    ah,BYTE PTR [eax]
  411fce:	push   ecx
  411fcf:	inc    ecx
  411fd0:	or     BYTE PTR [edi],0x61
  411fd3:	add    BYTE PTR [ecx+0x70b0400c],ah
  411fd9:	call   0x4044:0x2098f02a
  411fe0:	add    DWORD PTR [ebx+0x2e],ebp
  411fe3:	cwde   
  411fe4:	dec    eax
  411fe5:	add    DWORD PTR [edx],eax
  411fe7:	xchg   edx,eax
  411fe8:	add    bl,BYTE PTR [ebx+eax*4]
  411feb:	inc    eax
  411fec:	add    al,ah
  411fee:	test   BYTE PTR [eax],dl
  411ff0:	inc    eax
  411ff1:	fadd   DWORD PTR [edx]
  411ff3:	add    DWORD PTR [edx],0xc4108200
  411ff9:	add    al,0x0
  411ffb:	add    DWORD PTR [ecx],esi
  411ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ffe:	push   ss
  411fff:	add    DWORD PTR [eax],eax
  412001:	xchg   ecx,eax
  412002:	push   ecx
  412003:	xor    DWORD PTR [eax],0x10008010
  412009:	add    al,0x31
  41200b:	add    BYTE PTR [ecx+edx*2],al
  41200e:	inc    ebp
  41200f:	adc    BYTE PTR [eax],0x81
  412012:	inc    ecx
  412013:	or     BYTE PTR [eax],dl
  412015:	or     al,0x8
  412017:	push   eax
  412018:	test   BYTE PTR [eax+0x32],al
  41201b:	inc    esp
  41201c:	xchg   BYTE PTR [esp+eax*4+0x6a000890],ah
  412023:	sub    DWORD PTR [esi+0x740c00cf],eax
  412029:	loop   0x41204b
  41202b:	add    al,BYTE PTR [eax]
  41202d:	adc    BYTE PTR [eax+0x1],bl
  412030:	mov    gs,WORD PTR [edx+0x10]
  412033:	mov    al,ds:0x23834200
  412038:	add    BYTE PTR [eax],cl
  41203a:	inc    ecx
  41203b:	add    BYTE PTR [edx],ah
  41203d:	or     BYTE PTR [edx-0x3f69edec],al
  412043:	sub    BYTE PTR [eax+0x60],al
  412046:	ret    0x2b88
  412049:	add    al,0x86
  41204b:	add    BYTE PTR [eax],ah
  41204d:	add    DWORD PTR [ecx],ebp
  41204f:	or     eax,0xc0121038
  412054:	sbb    bh,BYTE PTR [edx]
  412056:	adc    dl,BYTE PTR [eax]
  412058:	adc    BYTE PTR [edx+0x74],cl
  41205b:	and    BYTE PTR [eax],ch
  41205d:	adc    al,0x50
  412060:	add    ah,BYTE PTR [edi]
  412062:	and    BYTE PTR [eax+0xa059d03],0x94
  412069:	add    BYTE PTR [eax],dl
  41206b:	sbb    BYTE PTR [ecx-0x76affc7],cl
  412071:	or     DWORD PTR [eax+eiz*4-0x75ccfd78],eax
  412078:	inc    edx
  412079:	adc    DWORD PTR [eax-0x1bbfe9f8],eax
  41207f:	xor    al,0x4
  412081:	sub    ch,BYTE PTR [esi+0x10]
  412084:	add    BYTE PTR [edx+0x4108c821],0x14
  41208b:	and    dl,al
  41208d:	push   0x26528018
  412092:	add    bl,dh
  412094:	add    eax,edx
  412096:	or     BYTE PTR [edx+edx*4],al
  412099:	push   edx
  41209a:	or     BYTE PTR [eax+0x20],al
  41209d:	adc    DWORD PTR [eax+0x4],esp
  4120a0:	inc    eax
  4120a1:	or     BYTE PTR [eax-0x767e0000],al
  4120a7:	dec    eax
  4120a8:	and    DWORD PTR [eax-0x3f],edi
  4120ab:	add    al,BYTE PTR [ecx]
  4120ad:	dec    eax
  4120ae:	pop    ss
  4120af:	sbb    dh,BYTE PTR ds:0x86c0006
  4120b5:	sbb    BYTE PTR [ecx+0x24],al
  4120b8:	add    bl,BYTE PTR [eax]
  4120ba:	adc    BYTE PTR [esi+0x14],al
  4120bd:	shl    BYTE PTR [ecx],0x51
  4120c0:	add    dl,BYTE PTR [ecx]
  4120c2:	push   edx
  4120c3:	in     al,0x8
  4120c5:	add    BYTE PTR [eax],ah
  4120c7:	add    BYTE PTR [ebx],al
  4120c9:	sub    al,0xa5
  4120cb:	xor    eax,0x4d008011
  4120d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120d1:	sbb    al,0xb0
  4120d3:	dec    eax
  4120d4:	and    al,0x2b
  4120d6:	and    BYTE PTR [eax+0x10],cl
  4120d9:	inc    ecx
  4120da:	mov    WORD PTR es:0x70015001,ss
  4120e1:	adc    DWORD PTR [esi],eax
  4120e3:	add    BYTE PTR [ebp-0x2ddf7bbf],ah
  4120e9:	inc    eax
  4120ea:	inc    eax
  4120eb:	or     BYTE PTR [esp+eax*4],al
  4120ee:	popa   
  4120ef:	pusha  
  4120f0:	rcl    BYTE PTR [eax],cl
  4120f2:	pusha  
  4120f3:	or     DWORD PTR [ebx],edx
  4120f5:	pusha  
  4120f6:	and    BYTE PTR [edi+0x16],al
  4120f9:	and    al,0x1
  4120fb:	inc    esp
  4120fc:	xor    al,0xc4
  4120fe:	xor    ch,BYTE PTR [esi]
  412100:	ret    0xd482
  412103:	enter  0x208,0x40
  412107:	mov    cl,BYTE PTR [eax]
  412109:	add    BYTE PTR [eax],al
  41210b:	les    esp,FWORD PTR [eax]
  41210d:	mov    eax,0x370026
  412112:	adc    DWORD PTR [eax],eax
  412114:	add    BYTE PTR [edi],ah
  412116:	popa   
  412117:	rol    DWORD PTR ds:0xaa81,0x24
  41211e:	adc    al,BYTE PTR ds:0xc2020e46
  412124:	and    dh,BYTE PTR [eax+0x0]
  412127:	add    DWORD PTR [eax],eax
  412129:	or     cl,BYTE PTR [eax+0x404160]
  41212f:	adc    BYTE PTR [ecx+0xd9084a],al
  412135:	add    eax,0x14f400c
  41213a:	adc    BYTE PTR [edx],ah
  41213c:	and    BYTE PTR [eax-0x7dfdf7cf],ah
  412142:	add    BYTE PTR [ecx+0x41004d08],al
  412148:	add    DWORD PTR [eax],eax
  41214a:	add    BYTE PTR [eax],dh
  41214c:	sbb    BYTE PTR [ecx],al
  41214e:	push   ss
  41214f:	rol    BYTE PTR [esp+eax*1],0x43
  412153:	adc    BYTE PTR [ecx],al
  412155:	or     al,BYTE PTR [edx]
  412157:	sbb    cl,BYTE PTR [ebp+0x20204000]
  41215d:	adc    BYTE PTR [ecx+eax*2],dl
  412160:	pop    ecx
  412161:	rol    BYTE PTR [eax+0x0],0x6c
  412165:	outs   dx,BYTE PTR ds:[esi]
  412166:	xchg   BYTE PTR [eax],ah
  412168:	push   ds
  412169:	rcl    BYTE PTR ds:0x3e862000,cl
  41216f:	add    al,0xb2
  412171:	add    eax,0x8a20c0a0
  412176:	xchg   edx,eax
  412177:	add    BYTE PTR [eax],al
  412179:	jo     0x41217b
  41217b:	and    BYTE PTR [eax],ch
  41217d:	or     DWORD PTR [eax+0x6],esp
  412180:	add    BYTE PTR [eax],cl
  412182:	inc    ebp
  412183:	mov    es,WORD PTR [eax]
  412185:	mov    BYTE PTR [edx-0x2ffdf6b0],cl
  41218b:	push   cs
  41218c:	adc    dl,cl
  41218e:	add    BYTE PTR [eax],0x22
  412191:	add    al,BYTE PTR [eax]
  412193:	add    eax,DWORD PTR [eax+esi*4-0x78]
  412197:	daa    
  412198:	and    BYTE PTR [eax],ah
  41219a:	mov    BYTE PTR [eax+0xc],ch
  41219d:	push   es
  41219e:	test   al,0x20
  4121a0:	add    DWORD PTR [ecx],eax
  4121a2:	push   ss
  4121a3:	add    DWORD PTR [eax+0x4a],eax
  4121a6:	mov    dl,0x40
  4121a8:	sub    BYTE PTR [eax],al
  4121aa:	add    eax,0xa34dc040
  4121af:	add    BYTE PTR [esi+eax*1+0x41c01638],0xc1
  4121b7:	rol    BYTE PTR [edx-0x7f],0x2
  4121bb:	stos   BYTE PTR es:[edi],al
  4121bc:	pop    esp
  4121bd:	push   edx
  4121be:	adc    BYTE PTR [eax+0x220d380],al
  4121c4:	xor    BYTE PTR [edx-0x30],ah
  4121c7:	inc    eax
  4121c8:	add    BYTE PTR [eax],0x82
  4121cb:	and    BYTE PTR [eax],dl
  4121cd:	je     0x4121d7
  4121cf:	add    BYTE PTR [esi+ecx*1+0x0],al
  4121d3:	inc    eax
  4121d4:	or     dl,BYTE PTR [edx+0x8]
  4121d7:	and    eax,0x80031944
  4121dc:	inc    eax
  4121dd:	inc    edx
  4121de:	cmp    al,0x20
  4121e0:	add    BYTE PTR [eax+eax*1],al
  4121e3:	nop
  4121e4:	push   eax
  4121e5:	adc    BYTE PTR [ecx+eiz*4+0x408010a2],al
  4121ec:	xor    dl,BYTE PTR [eax]
  4121ee:	bound  eax,QWORD PTR [ebx+0x199dcd]
  4121f4:	and    ah,BYTE PTR [eax+0x43a45091]
  4121fa:	popa   
  4121fb:	or     BYTE PTR ds:0x8c860,ch
  412201:	add    BYTE PTR [eax+0x10004a2],cl
  412207:	add    ch,BYTE PTR [eax]
  412209:	adc    al,0x24
  41220b:	cmp    DWORD PTR ds:0x1f184144,esp
  412211:	nop
  412212:	adc    BYTE PTR [edx],al
  412214:	adc    al,BYTE PTR [eax+0xc]
  412217:	iret   
  412218:	add    esp,DWORD PTR [eax+0x4a422018]
  41221e:	xor    eax,0x4024025
  412223:	inc    eax
  412224:	push   eax
  412225:	sub    DWORD PTR [ecx+eax*1+0x41],eax
  412229:	ret    0x2c01
  41222c:	and    BYTE PTR [eax+eax*1],cl
  41222f:	add    DWORD PTR [eax],eax
  412231:	cmp    BYTE PTR [edx-0x5b76b7f0],cl
  412237:	mov    eax,edx
  412239:	push   esp
  41223a:	inc    edx
  41223b:	sbb    BYTE PTR [ecx],cl
  41223d:	inc    eax
  41223e:	sub    BYTE PTR [eax],cl
  412240:	and    DWORD PTR [ecx+0x30],0xa40f0005
  412247:	adc    BYTE PTR [eax],0x83
  41224a:	add    BYTE PTR [edx],0x30
  41224d:	add    BYTE PTR [ebx+0x6],al
  412250:	or     BYTE PTR [esi+0x45482100],bl
  412256:	inc    ebp
  412257:	inc    esp
  412258:	push   0x33
  41225a:	or     BYTE PTR [edx],0x24
  41225d:	and    dl,BYTE PTR [ecx]
  41225f:	popa   
  412260:	mov    BYTE PTR [ecx+ebp*1],ch
  412263:	or     eax,0x10008220
  412268:	or     BYTE PTR [edx],ah
  41226a:	add    DWORD PTR [ebx],edx
  41226c:	or     al,0x64
  41226e:	nop
  41226f:	xor    edx,DWORD PTR [eax+edx*1-0x60]
  412273:	pop    ebp
  412274:	or     BYTE PTR [ecx+eax*2],al
  412277:	add    al,BYTE PTR [ecx]
  412279:	and    BYTE PTR [eax+eax*1],cl
  41227c:	jo     0x4121fe
  41227e:	or     BYTE PTR [eax+0x29],0x89
  412282:	dec    esp
  412283:	push   0x833000
  412288:	add    al,0x22
  41228a:	adc    BYTE PTR [eax+0x38],0x18
  41228e:	and    BYTE PTR [edx+0x1],al
  412291:	and    al,BYTE PTR [eax]
  412293:	mov    ch,0x8
  412295:	inc    ecx
  412296:	add    dl,BYTE PTR [edx]
  412298:	and    al,0x0
  41229a:	pop    eax
  41229b:	inc    eax
  41229c:	add    BYTE PTR [eax+0x4],al
  41229f:	inc    esi
  4122a0:	add    BYTE PTR [ecx],ah
  4122a2:	add    dl,BYTE PTR [esi+edi*1+0x940200]
  4122a9:	add    DWORD PTR [ecx-0x7a],eax
  4122ac:	mov    ah,BYTE PTR [eax]
  4122ae:	sub    BYTE PTR [eax],al
  4122b0:	or     BYTE PTR [eax+0x22000090],dl
  4122b6:	pusha  
  4122b7:	and    BYTE PTR [eax],al
  4122b9:	loopne 0x4122db
  4122bb:	mov    eax,0xc0009202
  4122c0:	and    ch,BYTE PTR [eax-0x40]
  4122c3:	and    al,BYTE PTR [eax+eiz*1+0x40]
  4122c7:	or     DWORD PTR [eax+edx*1+0x1220866],eax
  4122ce:	add    BYTE PTR [ecx+0x60140c66],al
  4122d4:	or     al,BYTE PTR [eax]
  4122d6:	dec    eax
  4122d7:	lea    eax,[edx+ebp*4]
  4122da:	loopne 0x4122dd
  4122dc:	add    BYTE PTR [edx+0x1064403],0x16
  4122e3:	pushf  
  4122e4:	sbb    al,0x0
  4122e6:	and    BYTE PTR [eax],ah
  4122e8:	adc    BYTE PTR [eax],al
  4122ea:	add    BYTE PTR [eax+0x0],al
  4122ed:	pusha  
  4122ee:	dec    edx
  4122ef:	in     al,dx
  4122f0:	and    BYTE PTR [edx+0x1650091],0x0
  4122f7:	add    al,0x3
  4122f9:	fmul   DWORD PTR [edx]
  4122fb:	inc    eax
  4122fc:	inc    eax
  4122fd:	inc    esp
  4122fe:	pusha  
  4122ff:	adc    al,0x0
  412301:	inc    ebx
  412302:	inc    edx
  412303:	cwde   
  412304:	inc    edx
  412305:	jmp    0x522:0x8090004
  41230c:	push   ds
  41230d:	sbb    al,0x5
  41230f:	add    bl,BYTE PTR [eax]
  412311:	call   0x2524c36
  412316:	add    eax,0x20209809
  41231b:	adc    BYTE PTR [edx],ch
  41231d:	adc    ch,al
  41231f:	nop
  412320:	adc    eax,DWORD PTR [eax]
  412322:	inc    edi
  412323:	or     BYTE PTR [esi+0x31122c4],ah
  412329:	and    ecx,DWORD PTR [eax+0x4]
  41232c:	add    al,0x1
  41232e:	push   ecx
  41232f:	adc    BYTE PTR [eax],ah
  412331:	adc    BYTE PTR [eax],al
  412333:	add    DWORD PTR [edx],esp
  412335:	and    al,0x8
  412337:	add    DWORD PTR [ecx+eax*2+0x10c42045],esp
  41233e:	adc    BYTE PTR [edx],dh
  412340:	add    BYTE PTR [ecx+eax*8],0x50
  412344:	enter  0x9422,0x2
  412348:	pop    ebx
  412349:	adc    BYTE PTR [ebx],ah
  41234b:	or     dl,al
  41234d:	add    BYTE PTR [ecx+eax*2+0x48a013e3],dl
  412354:	inc    edx
  412355:	or     al,BYTE PTR [esi]
  412357:	add    BYTE PTR [edx],dl
  412359:	add    BYTE PTR [eax+0x1],bl
  41235c:	mov    WORD PTR [ebx],ds
  41235e:	add    al,BYTE PTR [eax]
  412360:	add    al,0x90
  412363:	and    cl,BYTE PTR [edx+edx*4]
  412366:	and    al,0x0
  412368:	add    BYTE PTR gs:[edi+eiz*4+0x1a026000],al
  412370:	mov    eax,ds:0x2010402
  412375:	xor    BYTE PTR [edx+0x1000281],0x2c
  41237c:	add    DWORD PTR [edx],eax
  41237e:	add    BYTE PTR [eax+0x4000d381],al
  412384:	and    al,BYTE PTR [eax+0x85480af]
  41238a:	test   BYTE PTR [esi-0x2af7cc00],cl
  412390:	sub    al,BYTE PTR [eax]
  412392:	add    DWORD PTR [edx],eax
  412394:	dec    esp
  412395:	add    BYTE PTR [ecx],al
  412397:	nop
  412398:	adc    BYTE PTR [esi-0x4f9dacde],dl
  41239e:	sub    BYTE PTR [eax],0x60
  4123a1:	and    dl,BYTE PTR [eax-0x40]
  4123a4:	add    BYTE PTR [ecx+0x20a64120],0x10
  4123ab:	and    BYTE PTR [ebx+0x14],0x1
  4123af:	and    BYTE PTR [eax],al
  4123b1:	push   es
  4123b2:	and    BYTE PTR [edx+0x402ba004],dl
  4123b8:	xchg   ebp,eax
  4123b9:	add    dl,BYTE PTR [edi]
  4123bb:	mov    BYTE PTR [ecx],dl
  4123bd:	fwait
  4123be:	mov    WORD PTR [esi+0x20],ss
  4123c1:	xchg   BYTE PTR [edi],dl
  4123c3:	or     BYTE PTR [ecx+ecx*1+0x400a041a],ah
  4123ca:	adc    al,BYTE PTR [ebp+0x50]
  4123cd:	leave  
  4123ce:	add    BYTE PTR [eax],0xc0
  4123d1:	adc    al,0x0
  4123d3:	inc    edx
  4123d4:	inc    ecx
  4123d5:	and    esp,DWORD PTR [esi]
  4123d7:	ret    
  4123d8:	dec    ecx
  4123d9:	add    BYTE PTR [edx+0x20],dl
  4123dc:	add    BYTE PTR [eax],ah
  4123de:	enter  0x1206,0x88
  4123e2:	and    ah,cl
  4123e4:	add    al,0x48
  4123e6:	add    BYTE PTR [eax],ch
  4123e8:	add    BYTE PTR [edx+0x1],dl
  4123eb:	push   eax
  4123ec:	or     BYTE PTR [esi+0x51],al
  4123ef:	add    DWORD PTR [eax],eax
  4123f1:	add    al,0x1
  4123f3:	add    BYTE PTR [eax+eax*4+0x1d],al
  4123f7:	add    dl,BYTE PTR [ecx+0x3024821]
  4123fd:	add    BYTE PTR [eax-0x5e],dl
  412400:	mov    ds:0x9c0a0041,al
  412405:	add    BYTE PTR [eax],cl
  412407:	add    BYTE PTR [edi-0x80],ah
  41240a:	enter  0x9321,0x4
  41240e:	add    BYTE PTR [edx+0x4012e422],al
  412414:	mov    WORD PTR [eax],cs
  412416:	add    DWORD PTR ds:0x3d5310,eax
  41241c:	add    BYTE PTR [ecx],al
  41241e:	and    BYTE PTR [eax],al
  412420:	sub    al,ch
  412422:	mov    dl,0x40
  412424:	add    BYTE PTR [edx+0xe],cl
  412427:	push   es
  412428:	add    bl,al
  41242a:	inc    eax
  41242b:	or     ah,BYTE PTR [ecx]
  41242d:	adc    BYTE PTR [eax+0x43],al
  412430:	aam    0x24
  412432:	add    dl,BYTE PTR [ebp+0x2098a10]
  412438:	outs   dx,DWORD PTR ds:[esi]
  412439:	adc    eax,DWORD PTR [eax-0x5f7df800]
  41243f:	or     DWORD PTR [ecx],ecx
  412441:	xor    al,BYTE PTR [edx]
  412443:	lds    ecx,FWORD PTR [eax]
  412445:	and    BYTE PTR [eax],al
  412447:	add    BYTE PTR [eax],ah
  412449:	or     BYTE PTR [edx],0x84
  41244c:	adc    BYTE PTR [eax],ah
  41244e:	sub    DWORD PTR [eax+0x10],esp
  412451:	adc    bl,BYTE PTR [eax]
  412453:	add    BYTE PTR [eax+eax*8],ah
  412456:	add    DWORD PTR [edx-0x6d],edx
  412459:	inc    eax
  41245a:	add    dl,BYTE PTR [eax]
  41245c:	mov    al,ds:0x23b0571a
  412461:	or     cl,BYTE PTR [eax]
  412463:	or     BYTE PTR [esi+0x2485c8],ah
  412469:	inc    edx
  41246a:	shl    dl,0xda
  41246d:	mov    al,ds:0xc217c18a
  412472:	inc    ebx
  412473:	test   BYTE PTR [edi+0x20],ah
  412476:	add    eax,0x10964000
  41247b:	inc    eax
  41247c:	or     BYTE PTR [eax],al
  41247e:	sbb    BYTE PTR [ecx],0x90
  412481:	adc    DWORD PTR [eax],edx
  412483:	add    BYTE PTR ds:0x9319a0b,cl
  412489:	or     al,BYTE PTR [edx]
  41248b:	and    al,0x10
  41248d:	add    DWORD PTR [eax+eax*1-0x38],ecx
  412491:	or     BYTE PTR [edi+0xc],dl
  412494:	add    DWORD PTR [esi],ecx
  412496:	nop
  412497:	add    DWORD PTR [eax],eax
  412499:	mov    ds:0x9000c49b,al
  41249e:	add    al,BYTE PTR [eax]
  4124a0:	adc    DWORD PTR ds:0x21925102,eax
  4124a6:	add    BYTE PTR [edi],al
  4124a8:	add    DWORD PTR [edx],ecx
  4124aa:	add    BYTE PTR [edx],al
  4124ac:	and    BYTE PTR [eax+eax*4+0x1],al
  4124b0:	add    eax,0x22002015
  4124b5:	xchg   al,bh
  4124b7:	push   eax
  4124b8:	sub    BYTE PTR [eax+0x10],ch
  4124bb:	or     al,0x12
  4124bd:	add    BYTE PTR [eax],al
  4124bf:	add    al,BYTE PTR [eax+0x0]
  4124c2:	add    BYTE PTR [edx],al
  4124c4:	push   cs
  4124c5:	enter  0x10,0x42
  4124c9:	push   ebx
  4124ca:	mov    BYTE PTR [eax+eax*1],dl
  4124cd:	or     al,0x15
  4124cf:	and    ah,BYTE PTR [ecx+0x61240026]
  4124d5:	and    BYTE PTR [ecx+0x2c010d21],cl
  4124db:	add    al,0x10
  4124dd:	and    BYTE PTR [edx-0x5fde5ff8],al
  4124e3:	or     cl,BYTE PTR [ecx]
  4124e5:	add    BYTE PTR [ecx+0x100044],dh
  4124eb:	xchg   ebp,eax
  4124ec:	push   es
  4124ed:	xchg   edx,eax
  4124ee:	adc    BYTE PTR [eax],ah
  4124f0:	inc    edx
  4124f1:	and    BYTE PTR [eax],0x0
  4124f4:	rol    DWORD PTR [eax+0x10],0xa1
  4124f8:	add    al,0x12
  4124fa:	inc    ebp
  4124fb:	or     BYTE PTR [ecx+0x10],al
  4124fe:	and    BYTE PTR [ecx*1-0x5fabefd8],al
  412505:	les    eax,FWORD PTR [eax+ebx*2+0x15008800]
  41250c:	loop   0x412510
  41250e:	adc    DWORD PTR [ebp+eax*1+0x8],eax
  412512:	adc    BYTE PTR [eax],dl
  412514:	xchg   edx,eax
  412515:	inc    esp
  412516:	adc    DWORD PTR [ecx+0x0],ecx
  412519:	or     al,0x8
  41251b:	and    BYTE PTR [ebp+ecx*1-0x7d6f7ae7],ah
  412522:	fadd   DWORD PTR [edx]
  412524:	test   BYTE PTR [eax+0x420058],dl
  41252a:	add    BYTE PTR [eax],0x1c
  41252d:	add    BYTE PTR [esi+0x1a],al
  412530:	xchg   DWORD PTR [eax],esi
  412532:	add    BYTE PTR [edx],0x40
  412535:	or     DWORD PTR [ebx],esp
  412537:	xor    al,0x1
  412539:	xor    dl,BYTE PTR [eax-0x80]
  41253c:	popf   
  41253d:	pop    edx
  41253e:	push   eax
  41253f:	(bad)  
  412540:	mov    WORD PTR [eax],ds
  412542:	or     al,0x2
  412544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412545:	adc    BYTE PTR [edi+0x5018285],ah
  41254b:	add    BYTE PTR [eax],al
  41254d:	cdq    
  41254e:	add    BYTE PTR [ebx],ah
  412550:	xchg   DWORD PTR [ebp+0x1052820f],ecx
  412556:	and    BYTE PTR [eax+0x41],al
  412559:	aam    0xa
  41255b:	adc    BYTE PTR ds:0x601a6004,dl
  412561:	shl    BYTE PTR [edx+0x14400001],0x0
  412568:	add    BYTE PTR [ebx+ecx*2+0x33],bl
  41256c:	and    DWORD PTR [ecx],eax
  41256e:	inc    eax
  41256f:	sbb    al,0x0
  412571:	add    BYTE PTR [eax],al
  412573:	adc    cl,BYTE PTR [eax]
  412575:	mov    al,ds:0x70549010
  41257a:	adc    BYTE PTR [eax+edx*1+0x22],cl
  41257e:	add    BYTE PTR [ebx],al
  412580:	ret    0x5541
  412583:	inc    eax
  412584:	pop    eax
  412585:	add    dl,BYTE PTR [edx-0x40]
  412588:	adc    BYTE PTR [eax],0x75
  41258b:	and    al,BYTE PTR [edx-0x6e]
  41258e:	add    BYTE PTR [eax],cl
  412590:	adc    BYTE PTR [edx+0x12],0x10
  412594:	add    DWORD PTR [eax],edi
  412596:	or     al,0x88
  412598:	add    dh,BYTE PTR [eax*1+0x47860bcc]
  41259f:	or     ecx,DWORD PTR [ecx]
  4125a1:	das    
  4125a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125a3:	and    BYTE PTR [ecx],0x35
  4125a6:	inc    eax
  4125a7:	add    al,0x40
  4125a9:	add    eax,0x38021291
  4125ae:	pusha  
  4125af:	add    BYTE PTR [eax+0x8594520],0x0
  4125b6:	add    BYTE PTR ds:0xc1068000,ah
  4125bc:	or     BYTE PTR [ebp-0x1c],al
  4125bf:	add    BYTE PTR [eax+0x50001b0],0x90
  4125c6:	call   0xa508:0x10d2808d
  4125cd:	shl    DWORD PTR [esp+eax*1],1
  4125d0:	and    BYTE PTR [edx+ebx*1],dh
  4125d3:	adc    BYTE PTR [eax-0x3f],ah
  4125d6:	and    BYTE PTR [eax-0x67affff0],cl
  4125dc:	mov    eax,DWORD PTR [ebp+0x7004810b]
  4125e2:	and    BYTE PTR [eax+edx*1+0x21],al
  4125e6:	pusha  
  4125e7:	xchg   edx,eax
  4125e8:	add    BYTE PTR [eax+0x50e2102],al
  4125ee:	and    BYTE PTR [eax],al
  4125f0:	mov    ch,0x9b
  4125f2:	add    al,ah
  4125f4:	add    eax,0x89231680
  4125f9:	xor    BYTE PTR [ecx],al
  4125fb:	mov    BYTE PTR [eax],cl
  4125fd:	rcl    ah,0xa9
  412600:	and    DWORD PTR [esi],ebp
  412602:	add    DWORD PTR [eax],ecx
  412604:	push   eax
  412605:	sbb    BYTE PTR [edx+0x62009440],0x40
  41260c:	adc    al,BYTE PTR [edx+0x1]
  41260f:	cmp    BYTE PTR [edx+0x12004f95],cl
  412615:	add    DWORD PTR [ecx-0x77ddf6ac],ebx
  41261b:	inc    ebx
  41261c:	sbb    DWORD PTR [ebx+0x1],0x2
  412620:	and    BYTE PTR [edx],0x68
  412623:	mov    eax,0x50004001
  412628:	call   0x8849b631
  41262d:	and    eax,DWORD PTR [eax+0x41102081]
  412633:	add    BYTE PTR [ecx+0x202a2510],0x4
  41263a:	mov    ah,BYTE PTR [eax+0x60]
  41263d:	or     BYTE PTR [ebp+0x640d3482],dh
  412643:	inc    edx
  412644:	add    cl,BYTE PTR [eax+0xf0200a0]
  41264a:	adc    ch,0x22
  41264d:	test   BYTE PTR [eax],dl
  41264f:	add    eax,0x3328010
  412654:	and    cl,BYTE PTR [eax-0x7a]
  412657:	add    DWORD PTR [eax],eax
  412659:	add    BYTE PTR [ebx+edx*1],dl
  41265c:	test   BYTE PTR [ecx-0x3e5aeeff],dl
  412662:	add    BYTE PTR [eax-0x6fffb2e8],al
  412668:	adc    BYTE PTR [esi],cl
  41266a:	inc    eax
  41266b:	pop    ds
  41266c:	add    eax,0x8105038
  412671:	add    BYTE PTR [eax],ah
  412673:	add    al,BYTE PTR [eax]
  412675:	rcl    DWORD PTR [edx],1
  412677:	xor    BYTE PTR [eax],0x31
  41267a:	adc    al,BYTE PTR [edx-0x7bfaf75f]
  412680:	invd   
  412682:	pop    ss
  412683:	inc    edx
  412684:	xchg   BYTE PTR [esi+eiz*1+0x6b6600c0],dl
  41268b:	dec    edx
  41268c:	add    BYTE PTR [edx+0x21],cl
  41268f:	cwde   
  412690:	add    DWORD PTR [edx+eax*1],esi
  412693:	xchg   BYTE PTR [eax+eiz*1+0x0],dh
  412697:	inc    ecx
  412698:	adc    DWORD PTR [edx],ecx
  41269a:	push   eax
  41269b:	and    BYTE PTR [esi-0xfb9bf7c],ah
  4126a1:	and    dl,ah
  4126a3:	adc    al,0x57
  4126a5:	add    BYTE PTR [esi+0x8],al
  4126a8:	xchg   esp,eax
  4126a9:	or     eax,DWORD PTR [edx-0x3ffeae7c]
  4126af:	pop    ss
  4126b0:	adc    BYTE PTR [ebp+0x10000000],bl
  4126b6:	add    al,0x8d
  4126b8:	inc    eax
  4126b9:	sbb    BYTE PTR [eax],al
  4126bb:	adc    BYTE PTR [eax],0x1
  4126be:	mov    ebp,0x2000000c
  4126c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126c4:	or     al,0x80
  4126c6:	xor    al,0x3
  4126c8:	inc    ebx
  4126c9:	jo     0x41271b
  4126cb:	xor    dh,BYTE PTR [eax+0xe]
  4126ce:	sub    BYTE PTR [edx+0x43],ah
  4126d1:	xor    BYTE PTR [eax],ah
  4126d3:	inc    edx
  4126d4:	add    BYTE PTR [ebx+0x200c020a],dl
  4126da:	add    al,0x70
  4126dc:	or     BYTE PTR [edx],ah
  4126de:	rol    BYTE PTR [eax+0x4488ed84],1
  4126e4:	pop    eax
  4126e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126e6:	add    edx,DWORD PTR [eax]
  4126e8:	repnz and DWORD PTR [eax+0x109445],ecx
  4126ef:	push   ds
  4126f0:	add    al,0x0
  4126f2:	and    BYTE PTR [eax+edx*4+0x10],al
  4126f6:	mov    eax,ds:0x1481c08
  4126fb:	xor    BYTE PTR ds:0xa0105244,al
  412701:	rol    BYTE PTR [eax],cl
  412703:	or     BYTE PTR [edx+0x47890040],al
  412709:	inc    eax
  41270a:	add    esp,DWORD PTR [eax]
  41270c:	add    BYTE PTR [edx],cl
  41270e:	or     DWORD PTR [eax+0x21140800],0x42
  412715:	push   es
  412716:	inc    esp
  412717:	mov    ah,BYTE PTR [eax]
  412719:	and    edx,DWORD PTR [esi]
  41271b:	push   es
  41271c:	add    al,cl
  41271e:	add    ah,BYTE PTR [edx]
  412720:	mov    al,ds:0x3c828018
  412725:	jl     0x412799
  412727:	add    BYTE PTR [ebx+0x4989104],al
  41272d:	add    BYTE PTR [ebx],al
  41272f:	inc    eax
  412730:	inc    edx
  412731:	mov    bl,0x22
  412733:	adc    BYTE PTR [ebp+0x22],al
  412736:	xor    BYTE PTR [eax+0x1121460],al
  41273c:	inc    esp
  41273d:	adc    eax,0x80670011
  412742:	or     al,0x20
  412744:	add    BYTE PTR [eax],al
  412746:	mov    al,ds:0x8cc50402
  41274b:	add    DWORD PTR [eax+0x20],esi
  41274e:	add    al,0x2
  412750:	and    BYTE PTR [edx],dl
  412752:	or     DWORD PTR [eax+0x24290080],esp
  412758:	and    DWORD PTR [edx+0x404046a4],0x80012a
  412762:	push   es
  412763:	add    BYTE PTR [esi],cl
  412765:	xor    ah,BYTE PTR [eax]
  412767:	or     DWORD PTR [ecx-0x60],eax
  41276a:	inc    eax
  41276b:	add    BYTE PTR [ecx+0x45],al
  41276e:	adc    DWORD PTR [edx+0x40542000],eax
  412774:	and    BYTE PTR [eax],al
  412776:	sbb    eax,0x20c08001
  41277b:	mov    al,ds:0x202c15ff
  412780:	inc    ebp
  412781:	add    BYTE PTR [edx],ah
  412783:	push   esp
  412784:	sub    bh,BYTE PTR [eax]
  412786:	retf   0x4422
  412789:	sbb    BYTE PTR [eax],al
  41278b:	sub    BYTE PTR [edi],dh
  41278d:	mov    BYTE PTR [ecx],al
  41278f:	adc    al,BYTE PTR [edx+0x4]
  412792:	pusha  
  412793:	inc    ebp
  412794:	adc    DWORD PTR [ecx],edx
  412796:	add    BYTE PTR [edx+0x68],cl
  412799:	add    al,BYTE PTR [esp+eax*4+0x66981220]
  4127a0:	add    dh,BYTE PTR [edx]
  4127a2:	adc    al,0x18
  4127a4:	add    BYTE PTR [esi+0x82930e5],al
  4127aa:	ds adc BYTE PTR fs:[eax],0x1
  4127af:	mov    al,BYTE PTR ds:0x804c92
  4127b5:	push   eax
  4127b6:	dec    ecx
  4127b7:	inc    ecx
  4127b8:	rol    BYTE PTR [edx+eax*1+0x5],1
  4127bc:	ret    
  4127bd:	cmp    DWORD PTR [edi],eax
  4127bf:	add    cl,BYTE PTR [eax+0x0]
  4127c2:	mov    BYTE PTR [ecx+0x4],0x44
  4127c6:	adc    BYTE PTR [eax+ebx*1],al
  4127c9:	inc    edx
  4127ca:	inc    esi
  4127cb:	adc    BYTE PTR [eax+eax*1],0x10
  4127cf:	loopne 0x412823
  4127d1:	add    BYTE PTR [edx],0x12
  4127d4:	sbb    al,0x18
  4127d6:	and    BYTE PTR [eax],ah
  4127d8:	inc    eax
  4127d9:	add    BYTE PTR ds:0xc3200410,dl
  4127df:	and    BYTE PTR [ecx],al
  4127e1:	and    BYTE PTR [eax],cl
  4127e3:	or     DWORD PTR [ebx+0x10],esi
  4127e6:	nop
  4127e7:	pop    ebx
  4127e8:	xor    eax,0x80100044
  4127ed:	push   cs
  4127ee:	or     ah,BYTE PTR [ecx+0x4]
  4127f1:	inc    eax
  4127f2:	add    DWORD PTR [eax+eax*1],esi
  4127f5:	add    BYTE PTR [eax],dl
  4127f7:	add    eax,0x9a20a365
  4127fc:	or     edx,eax
  4127fe:	pop    es
  4127ff:	add    cl,BYTE PTR [eax-0x78]
  412802:	add    DWORD PTR ds:0x5092e9c5,eax
  412808:	add    ch,BYTE PTR [ecx+0x10]
  41280b:	add    DWORD PTR [ebx],eax
  41280d:	add    bl,ch
  41280f:	sbb    al,BYTE PTR [eax]
  412811:	add    DWORD PTR [edx+0xa],0x523c0211
  412818:	sub    DWORD PTR [ecx-0x6f6fde97],eax
  41281e:	or     al,BYTE PTR [ecx]
  412820:	inc    eax
  412821:	add    eax,eax
  412823:	enter  0x4300,0x4
  412827:	adc    al,0x20
  412829:	xor    DWORD PTR [ebx],esp
  41282b:	jo     0x412805
  41282d:	add    al,0x30
  41282f:	or     al,0x24
  412831:	xchg   DWORD PTR [edx],ebx
  412833:	pusha  
  412834:	or     dh,BYTE PTR [ebx-0x7b6eafbe]
  41283a:	inc    ecx
  41283b:	add    eax,0x1980a042
  412840:	add    BYTE PTR [ecx+0x106101b],ah
  412846:	add    DWORD PTR [edx],eax
  412848:	adc    ah,dl
  41284a:	mov    BYTE PTR [eax+0x7a],ch
  41284d:	adc    BYTE PTR [esi+0x400e586],ah
  412853:	add    al,BYTE PTR [eax]
  412855:	adc    BYTE PTR [ecx+0x2a142c03],al
  41285b:	sbb    BYTE PTR [ecx],al
  41285d:	retf   0x6048
  412860:	ret    0x4242
  412863:	add    esp,DWORD PTR [eax+eax*1]
  412866:	nop
  412867:	add    DWORD PTR [eax],edx
  412869:	add    BYTE PTR [eax+0x481304],dh
  41286f:	add    al,BYTE PTR [edx]
  412871:	add    DWORD PTR [ebx+0x40604009],eax
  412877:	adc    al,BYTE PTR fs:[eax]
  41287a:	or     DWORD PTR [edx+0x1c],edx
  41287d:	add    al,BYTE PTR [ebx+0x2d]
  412880:	rol    BYTE PTR [eax],0x20
  412883:	adc    eax,0x648a0842
  412888:	adc    al,BYTE PTR [ecx+0x32]
  41288b:	or     esi,DWORD PTR [eax]
  41288d:	add    BYTE PTR [eax],al
  41288f:	inc    esp
  412890:	rol    BYTE PTR [eax],cl
  412892:	adc    BYTE PTR [eax],al
  412894:	or     BYTE PTR [eax+0x479d138c],0x10
  41289b:	cs add al,0x1a
  41289e:	xor    BYTE PTR [ebx],cl
  4128a0:	rol    BYTE PTR [eax+0x32],0x10
  4128a4:	adc    edx,DWORD PTR [edi]
  4128a6:	or     BYTE PTR [eax-0x7ffd3fc0],al
  4128ac:	add    BYTE PTR [eax],al
  4128ae:	and    BYTE PTR [eax+edx*1+0x68],ah
  4128b2:	adc    DWORD PTR [eax],eax
  4128b4:	sbb    DWORD PTR [ecx],esp
  4128b6:	inc    edx
  4128b7:	rol    BYTE PTR [eax+0x24120006],0xc4
  4128be:	add    BYTE PTR [ecx],al
  4128c0:	add    BYTE PTR [eax],dh
  4128c2:	adc    BYTE PTR [eax+0x49306800],ah
  4128c8:	inc    eax
  4128c9:	and    BYTE PTR [eax],0x54
  4128cc:	adc    BYTE PTR [eax],ch
  4128ce:	push   edx
  4128cf:	bound  eax,QWORD PTR [ecx-0x7bdfecb0]
  4128d5:	xchg   esp,eax
  4128d6:	mov    WORD PTR [eax],?
  4128d8:	adc    BYTE PTR [edx-0x3f7fefc0],dl
  4128de:	and    al,0x50
  4128e0:	or     BYTE PTR [ebx],al
  4128e2:	pusha  
  4128e3:	add    DWORD PTR [edx],0x1
  4128e6:	inc    eax
  4128e7:	pop    eax
  4128e8:	add    al,0x62
  4128ea:	sbb    BYTE PTR [ebp+0x70c068],al
  4128f0:	mov    DWORD PTR [eax],ecx
  4128f2:	push   ds
  4128f3:	and    eax,DWORD PTR [ecx]
  4128f5:	or     edx,DWORD PTR [ecx+0x6]
  4128f8:	add    BYTE PTR [edx],dl
  4128fa:	fmul   DWORD PTR [esi-0x58]
  4128fd:	or     BYTE PTR [ecx-0x80],al
  412900:	and    DWORD PTR [edx],eax
  412902:	hlt    
  412903:	sub    DWORD PTR [eax+0x42120500],0x18303880
  41290d:	nop
  41290e:	add    BYTE PTR [ecx],dl
  412910:	or     al,0x89
  412912:	dec    eax
  412913:	adc    dh,BYTE PTR [eax]
  412915:	or     eax,eax
  412917:	ror    BYTE PTR [eax-0x46],cl
  41291a:	add    BYTE PTR [ecx-0x28],al
  41291d:	or     dl,BYTE PTR [eax]
  41291f:	dec    ebp
  412920:	or     BYTE PTR [eax+edx*2],al
  412923:	push   edx
  412924:	and    DWORD PTR [ecx],eax
  412926:	mov    ah,0x15
  412928:	add    BYTE PTR [edx],al
  41292a:	or     BYTE PTR [edx],ah
  41292c:	add    DWORD PTR [eax],ecx
  41292e:	or     BYTE PTR [ecx+0x69],al
  412931:	inc    edx
  412932:	dec    edx
  412933:	out    0x0,eax
  412935:	add    BYTE PTR [eax+0x310e35],0x60
  41293c:	inc    esi
  41293d:	add    bl,BYTE PTR [esi+0xc0300]
  412943:	adc    BYTE PTR [eax],dl
  412945:	adc    al,0x81
  412947:	mov    BYTE PTR [eax+0x445000c0],ah
  41294d:	dec    eax
  41294e:	dec    eax
  41294f:	inc    edx
  412950:	or     DWORD PTR [eax+ecx*2+0x28480101],ebp
  412957:	or     BYTE PTR [eax+0x40],ah
  41295a:	inc    eax
  41295b:	adc    eax,0xc402420a
  412960:	add    BYTE PTR [ebx],ah
  412962:	add    BYTE PTR [ecx-0x4e],0x1c
  412966:	inc    ecx
  412967:	aaa    
  412968:	add    BYTE PTR [eax],0x74
  41296b:	add    BYTE PTR [eax],al
  41296d:	adc    BYTE PTR [esi+0xa0c0180],al
  412973:	rol    BYTE PTR [eax+0x8a3721],0x10
  41297a:	add    DWORD PTR [esi+eax*8],eax
  41297d:	add    bh,BYTE PTR [edx+0x48]
  412980:	add    BYTE PTR [edx],ch
  412982:	ror    DWORD PTR [eax],0x12
  412985:	xor    BYTE PTR [eax],al
  412987:	adc    BYTE PTR [bx+si],cl
  41298a:	add    BYTE PTR [ecx],al
  41298c:	adc    BYTE PTR [eax+0x41],al
  41298f:	mov    al,BYTE PTR [ecx]
  412991:	mov    al,BYTE PTR [eax]
  412993:	mov    eax,ds:0xca8902
  412998:	and    BYTE PTR [edx-0x31],al
  41299b:	and    cl,ah
  41299d:	and    BYTE PTR [eax],al
  41299f:	adc    BYTE PTR [eax],dh
  4129a1:	adc    eax,DWORD PTR [eax]
  4129a3:	adc    DWORD PTR [eax],eax
  4129a5:	mov    eax,0x18069849
  4129aa:	xchg   edx,eax
  4129ab:	call   0x8649aeb0
  4129b0:	add    BYTE PTR [esi+0xb],al
  4129b3:	adc    BYTE PTR [ebx],0x0
  4129b6:	inc    eax
  4129b7:	cmp    BYTE PTR [eax+0xe],cl
  4129ba:	mov    DWORD PTR [ebx],esp
  4129bc:	or     BYTE PTR [eax+0x0],al
  4129bf:	add    DWORD PTR [ecx],0x60
  4129c2:	adc    al,BYTE PTR [ecx]
  4129c4:	mov    cl,BYTE PTR [ecx]
  4129c6:	and    cl,BYTE PTR [edx+0x40103142]
  4129cc:	shl    BYTE PTR [eax+0x20812342],0x0
  4129d3:	nop
  4129d4:	mov    ah,0xc1
  4129d6:	inc    ecx
  4129d7:	sub    DWORD PTR [eax],eax
  4129d9:	add    al,0x88
  4129db:	mov    al,0x9
  4129dd:	push   esp
  4129de:	dec    eax
  4129df:	ret    0x410
  4129e2:	add    al,0x40
  4129e5:	inc    edx
  4129e6:	imul   esi,DWORD PTR [ebx+ecx*2],0x40
  4129ea:	add    BYTE PTR [eax],bh
  4129ec:	add    eax,0x80408016
  4129f1:	push   es
  4129f2:	inc    ecx
  4129f3:	gs pop es
  4129f5:	or     DWORD PTR [eax+eax*1],ecx
  4129f8:	or     al,cl
  4129fa:	sbb    eax,0x4d100410
  4129ff:	add    al,0xd0
  412a01:	push   eax
  412a02:	mov    BYTE PTR [ecx+eax*2+0x1410880],ah
  412a09:	inc    eax
  412a0a:	or     al,BYTE PTR [eax]
  412a0c:	or     al,al
  412a0e:	add    DWORD PTR [eax],0x14a44060
  412a14:	dec    eax
  412a15:	mov    al,ds:0x52850122
  412a1a:	add    al,0x5
  412a1c:	add    BYTE PTR [ecx+0x22],al
  412a1f:	add    BYTE PTR es:[eax+0x22004210],dl
  412a26:	xor    BYTE PTR ds:0x401089c0,al
  412a2c:	or     BYTE PTR [eax+0x12105894],ah
  412a32:	push   eax
  412a33:	and    BYTE PTR [ecx],cl
  412a35:	or     al,BYTE PTR [edx]
  412a37:	adc    DWORD PTR [eax-0x27f77f3e],0x20
  412a3e:	add    BYTE PTR [eax],ah
  412a40:	pop    esp
  412a41:	and    eax,DWORD PTR [edx+0x40ae0285]
  412a47:	add    DWORD PTR [eax+0x6],eax
  412a4a:	push   es
  412a4b:	sub    DWORD PTR [edx+0x2],edx
  412a4e:	mov    ds:0x62a004c2,eax
  412a53:	xor    DWORD PTR [eax],esp
  412a55:	add    al,0x5
  412a57:	add    BYTE PTR [eax],al
  412a59:	dec    ecx
  412a5a:	adc    BYTE PTR [eax+0x1411003],0x33
  412a61:	or     BYTE PTR [ecx],ah
  412a63:	or     BYTE PTR [edx],al
  412a65:	add    BYTE PTR [ebx],dl
  412a67:	push   0x20380d
  412a6c:	adc    BYTE PTR [esi+eax*1+0x4041c82],al
  412a73:	xchg   edx,eax
  412a74:	sbb    al,BYTE PTR [eax]
  412a76:	or     eax,DWORD PTR [eax]
  412a78:	loopne 0x412a8e
  412a7a:	add    BYTE PTR [eax],al
  412a7c:	push   eax
  412a7d:	adc    dl,BYTE PTR [eax+esi*8]
  412a80:	push   es
  412a81:	adc    ch,BYTE PTR [eax+0x162028c2]
  412a87:	xor    DWORD PTR [eax+0x44884440],eax
  412a8d:	add    al,0xd
  412a8f:	mov    al,0x3c
  412a91:	or     BYTE PTR [eax+0x40064488],al
  412a97:	and    BYTE PTR [eax],al
  412a99:	adc    eax,DWORD PTR [edx-0x5fcb7ff3]
  412a9f:	mov    ds:0x64400310,al
  412aa4:	mov    al,ds:0x440a6815
  412aa9:	and    DWORD PTR [eax+ebp*2],0x580c180
  412ab0:	rcl    DWORD PTR [edx+eiz*2+0x10000050],0x2
  412ab8:	sub    al,al
  412aba:	add    BYTE PTR [eax+0x34],al
  412abd:	test   BYTE PTR [eax-0x2b],al
  412ac0:	adc    eax,DWORD PTR [eax-0x70]
  412ac3:	xor    BYTE PTR [eax],al
  412ac5:	or     BYTE PTR [eax+eax*2],cl
  412ac8:	add    BYTE PTR [ecx+0x46],0x24
  412acc:	xor    al,0xe8
  412ace:	add    DWORD PTR [edi],eax
  412ad0:	add    BYTE PTR [esi],0x6c
  412ad3:	inc    eax
  412ad4:	or     ch,BYTE PTR [edx]
  412ad6:	or     eax,0x18204098
  412adb:	xchg   ecx,eax
  412adc:	inc    ecx
  412add:	add    al,0x80
  412adf:	sub    BYTE PTR [eax],ah
  412ae1:	adc    BYTE PTR [eax+esi*1-0x5dee3bdc],al
  412ae8:	or     bh,BYTE PTR [eax]
  412aea:	or     BYTE PTR [edx],ah
  412aec:	cmp    BYTE PTR [esi],ah
  412aee:	inc    esp
  412aef:	sbb    ah,cl
  412af1:	adc    al,0x72
  412af3:	add    BYTE PTR [ebx],ah
  412af5:	add    BYTE PTR [eax],dl
  412af7:	mov    al,ds:0xa958032
  412afc:	add    BYTE PTR [eax+0x18d08ac4],dl
  412b02:	adc    DWORD PTR [edx],eax
  412b04:	add    BYTE PTR [eax-0x80],cl
  412b07:	or     eax,DWORD PTR [ecx+0xa102108]
  412b0d:	add    BYTE PTR [eax+0x48],dl
  412b10:	loopne 0x412b2e
  412b12:	inc    eax
  412b13:	pop    ecx
  412b14:	dec    eax
  412b15:	sub    ah,BYTE PTR [eax+ecx*4]
  412b18:	test   DWORD PTR [esi],ebp
  412b1a:	inc    eax
  412b1b:	push   ecx
  412b1c:	and    BYTE PTR [edx],al
  412b1e:	nop
  412b1f:	add    al,0x10
  412b22:	enter  0x98a1,0xa
  412b26:	xchg   ebp,eax
  412b27:	adc    BYTE PTR [eax+0x15],al
  412b2a:	cwde   
  412b2b:	test   al,0x89
  412b2d:	add    al,BYTE PTR [ecx]
  412b2f:	and    DWORD PTR [edx],eax
  412b31:	or     BYTE PTR [eax+0x3114115],ch
  412b37:	adc    al,BYTE PTR [eax+ecx*1]
  412b3a:	push   esp
  412b3b:	pop    ecx
  412b3c:	mov    al,ds:0x40c9b800
  412b41:	les    ecx,FWORD PTR [eax]
  412b43:	add    BYTE PTR [eax],al
  412b45:	add    eax,0xb202049b
  412b4a:	add    ah,BYTE PTR [eax]
  412b4c:	or     BYTE PTR [ebx],0x14
  412b4f:	add    al,0xe0
  412b51:	add    BYTE PTR [edx],al
  412b53:	and    al,BYTE PTR [edx]
  412b55:	or     al,BYTE PTR [eax]
  412b57:	adc    BYTE PTR [eax+0x1b30100],dl
  412b5d:	pusha  
  412b5e:	add    DWORD PTR [eax*1-0x3feffcc0],edx
  412b65:	add    cl,al
  412b67:	add    BYTE PTR [eax+0x28],0xc
  412b6b:	mov    DWORD PTR [eax],esp
  412b6d:	inc    eax
  412b6e:	pusha  
  412b6f:	cwde   
  412b70:	and    BYTE PTR [eax+0x8],dl
  412b73:	shl    DWORD PTR [eax],0xc0
  412b76:	add    BYTE PTR fs:[eax+0x1c],al
  412b7a:	add    DWORD PTR [ecx],eax
  412b7c:	sub    BYTE PTR [eax+0x6020117],ah
  412b82:	sub    DWORD PTR [edx+0x2e68e100],eax
  412b88:	add    BYTE PTR [eax],al
  412b8a:	aaa    
  412b8b:	nop
  412b8c:	add    DWORD PTR [edx],esi
  412b8e:	or     al,BYTE PTR [edx+0x102030]
  412b94:	adc    BYTE PTR [eax],ch
  412b96:	add    al,0x20
  412b98:	les    esp,FWORD PTR [eax+edx*1]
  412b9b:	or     eax,esp
  412b9d:	and    BYTE PTR [eax],cl
  412b9f:	push   ds
  412ba0:	add    al,0x14
  412ba2:	sbb    al,0x92
  412ba4:	mov    eax,ds:0x18121121
  412ba9:	mov    BYTE PTR [eax+0x63],al
  412bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bad:	sbb    DWORD PTR [edx+0x50680],esp
  412bb3:	add    BYTE PTR [edx],0xc2
  412bb6:	pop    es
  412bb7:	push   esi
  412bb8:	add    BYTE PTR [eax+ebp*4+0x2],al
  412bbc:	mov    al,ds:0x1002274
  412bc1:	xchg   ecx,eax
  412bc2:	add    al,0x52
  412bc4:	es add al,dh
  412bc7:	sbb    BYTE PTR [eax+0x4011034a],al
  412bcd:	add    BYTE PTR [eax],cl
  412bcf:	inc    eax
  412bd0:	or     al,0xa
  412bd2:	add    BYTE PTR [ebx+ecx*4],al
  412bd5:	loope  0x412be1
  412bd7:	inc    esp
  412bd8:	jno    0x412be4
  412bda:	mov    DWORD PTR [eax],0xd2000460
  412be0:	or     DWORD PTR ds:0xa9802090,eax
  412be6:	add    eax,0x4128020
  412beb:	add    BYTE PTR [eax+0x24080],al
  412bf1:	add    BYTE PTR [edx+0x13040003],al
  412bf7:	add    eax,0x1100425
  412bfc:	inc    eax
  412bfd:	add    BYTE PTR [ebx],ah
  412bff:	nop
  412c00:	and    BYTE PTR [eax],bl
  412c02:	xor    eax,0x1206ca08
  412c07:	cmp    al,0x24
  412c09:	add    al,BYTE PTR [eax-0x2f]
  412c0c:	inc    eax
  412c0d:	inc    edx
  412c0e:	or     DWORD PTR [edx+0x48049202],eax
  412c14:	add    BYTE PTR [edx],al
  412c16:	adc    ah,BYTE PTR [eax]
  412c18:	jns    0x412c33
  412c1a:	inc    eax
  412c1b:	push   ss
  412c1c:	add    esp,eax
  412c1e:	and    BYTE PTR [eax],al
  412c20:	mov    ah,0x2
  412c22:	enter  0x8080,0x1a
  412c26:	sbb    al,0x0
  412c28:	inc    esi
  412c29:	popa   
  412c2a:	add    BYTE PTR ds:0x21000,al
  412c30:	or     DWORD PTR [ecx],eax
  412c32:	and    BYTE PTR [ecx-0x6d],dl
  412c35:	adc    BYTE PTR [ecx],al
  412c37:	or     BYTE PTR [ebp+0x49f40490],al
  412c3d:	adc    al,0x2
  412c3f:	xor    BYTE PTR [ecx],0x1a
  412c42:	enter  0x8008,0xa0
  412c46:	or     al,0x22
  412c48:	sbb    al,BYTE PTR [eax]
  412c4a:	sbb    BYTE PTR [eax],cl
  412c4c:	dec    ebx
  412c4d:	xchg   ecx,eax
  412c4e:	add    eax,esp
  412c50:	add    BYTE PTR [eax+0x1],dl
  412c53:	add    al,BYTE PTR [eax]
  412c55:	add    BYTE PTR [eax+eax*1-0x61feffad],0x68
  412c5d:	sbb    BYTE PTR [ecx],ah
  412c5f:	add    BYTE PTR [eax],0xa9
  412c62:	ret    
  412c63:	and    BYTE PTR [eax],cl
  412c65:	xor    edx,DWORD PTR [eax+0x0]
  412c68:	xor    al,0xd
  412c6a:	js     0x412caf
  412c6c:	and    al,0xa6
  412c6e:	dec    edi
  412c6f:	add    BYTE PTR [edx+0x22],dl
  412c72:	add    BYTE PTR [ebx+eax*1],ah
  412c75:	sbb    DWORD PTR [eax],esi
  412c77:	or     BYTE PTR [eax+ecx*4-0x40],al
  412c7b:	mov    al,ds:0xe0d0126
  412c80:	add    ebx,DWORD PTR [edx]
  412c82:	nop
  412c83:	data16 adc BYTE PTR [eax+edx*4+0x4],dl
  412c88:	inc    eax
  412c89:	xchg   DWORD PTR [eax],esp
  412c8b:	adc    BYTE PTR [ecx+edx*8],al
  412c8e:	add    bh,al
  412c90:	xchg   ebp,eax
  412c91:	add    BYTE PTR [ecx],al
  412c93:	mov    al,ds:0x10024810
  412c98:	add    BYTE PTR [ecx],al
  412c9a:	add    DWORD PTR [edx+esi*1],0x60c20250
  412ca1:	or     al,BYTE PTR [eax+0x1da9047]
  412ca7:	add    DWORD PTR [eax],0xc0480224
  412cad:	push   eax
  412cae:	add    ah,ah
  412cb0:	adc    BYTE PTR [eax+eax*4+0x2812620],dl
  412cb7:	or     BYTE PTR [eax],bl
  412cb9:	or     al,0x1
  412cbb:	add    al,0x75
  412cbd:	mov    eax,ds:0x17023001
  412cc2:	add    dl,BYTE PTR [eax]
  412cc4:	or     DWORD PTR [eax-0x5fcfbfe8],edx
  412cca:	and    al,0x20
  412ccc:	inc    ebx
  412ccd:	dec    esp
  412cce:	dec    esp
  412ccf:	or     DWORD PTR [ecx],0x29c40000
  412cd5:	add    BYTE PTR [eax],dh
  412cd7:	test   BYTE PTR [eax+0xd0c088],al
  412cdd:	inc    eax
  412cde:	and    eax,0x34f29654
  412ce3:	or     al,0x78
  412ce5:	inc    esp
  412ce6:	nop
  412ce7:	and    BYTE PTR [eax],ch
  412ce9:	add    DWORD PTR [eax+0x13090],esp
  412cef:	adc    al,0x21
  412cf1:	inc    ecx
  412cf2:	jbe    0x412d0c
  412cf4:	sub    DWORD PTR [ebx],0xd0342228
  412cfa:	test   al,0x82
  412cfc:	adc    al,0x6
  412cfe:	add    al,0x80
  412d00:	mov    al,0x90
  412d02:	and    BYTE PTR [edx+edx*2+0x108c8066],al
  412d09:	inc    edx
  412d0a:	or     al,0x90
  412d0c:	mov    BYTE PTR [ecx],al
  412d0e:	inc    ebp
  412d0f:	add    eax,DWORD PTR [eax+esi*1]
  412d12:	add    BYTE PTR ds:0xac40010,0x32
  412d19:	adc    cl,al
  412d1b:	rcl    BYTE PTR [eax+0x48],cl
  412d1e:	push   ss
  412d1f:	xchg   esp,eax
  412d20:	inc    eax
  412d21:	add    BYTE PTR [eax+0x10],bl
  412d24:	add    al,0x10
  412d26:	add    DWORD PTR [eax-0x79feeee0],esp
  412d2c:	add    DWORD PTR [eax],eax
  412d2e:	add    BYTE PTR [esi+eax*1],0x20
  412d32:	inc    eax
  412d33:	sbb    BYTE PTR [eax],dh
  412d35:	add    BYTE PTR [eax],ah
  412d37:	add    al,BYTE PTR [edi+ecx*2-0x2f0cefee]
  412d3e:	or     eax,0x12048064
  412d43:	or     BYTE PTR [ecx],0x9
  412d46:	add    BYTE PTR [eax],al
  412d48:	retf   
  412d49:	add    DWORD PTR [eax],esi
  412d4b:	test   al,0x90
  412d4d:	xchg   esi,eax
  412d4e:	mov    al,ds:0x84085842
  412d53:	and    al,0x82
  412d55:	cwde   
  412d56:	sbb    BYTE PTR [ebx],0x20
  412d59:	cmp    al,0x2
  412d5b:	rol    DWORD PTR [ebp-0x7ea7ff80],cl
  412d61:	add    al,0x90
  412d63:	mov    dl,BYTE PTR [edx+0x1402f49]
  412d69:	or     BYTE PTR [eax],al
  412d6b:	lock inc edx
  412d6d:	inc    ecx
  412d6e:	sub    al,0x90
  412d70:	sub    al,0x3a
  412d72:	inc    eax
  412d73:	sbb    al,BYTE PTR [ebx]
  412d75:	inc    ecx
  412d76:	sub    BYTE PTR [eax],bl
  412d78:	inc    esp
  412d79:	inc    eax
  412d7a:	adc    BYTE PTR [esi+0x42],cl
  412d7d:	ror    BYTE PTR [eax+0x2],0x41
  412d81:	add    al,BYTE PTR [eax]
  412d83:	add    eax,eax
  412d85:	add    al,0x42
  412d87:	push   eax
  412d88:	dec    ebx
  412d89:	add    al,0x0
  412d8b:	dec    esp
  412d8c:	add    BYTE PTR [esp+eax*4],al
  412d8f:	push   cs
  412d90:	adc    dl,BYTE PTR ds:0x80e40088
  412d96:	add    DWORD PTR [eax],0xa3293083
  412d9c:	or     edx,DWORD PTR [eax]
  412d9e:	and    BYTE PTR [esi],dl
  412da0:	add    al,0x81
  412da2:	and    cl,BYTE PTR [eax+eax*1]
  412da5:	add    DWORD PTR [edx],esp
  412da7:	add    BYTE PTR [edx-0x7a9ffbea],dh
  412dad:	push   es
  412dae:	dec    edx
  412daf:	add    al,0x0
  412db1:	add    bl,BYTE PTR [ecx]
  412db3:	sub    BYTE PTR ds:0x7060482,bl
  412db9:	push   eax
  412dba:	and    DWORD PTR [eax+0xc1043a1],edx
  412dc0:	les    eax,FWORD PTR [ebp-0x79]
  412dc3:	sbb    DWORD PTR [esi-0x5d],eax
  412dc6:	inc    eax
  412dc7:	nop
  412dc8:	test   DWORD PTR [eax],ebx
  412dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dcb:	lea    ecx,ds:0x4170a290
  412dd1:	adc    al,BYTE PTR [ebx+0x68976580]
  412dd7:	and    DWORD PTR [ecx],ecx
  412dd9:	invd   
  412ddb:	and    BYTE PTR [edx+0x29330845],al
  412de1:	and    DWORD PTR [eax+0x12],eax
  412de4:	xchg   BYTE PTR [eax],cl
  412de6:	dec    esp
  412de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412de8:	add    BYTE PTR [esp],ah
  412deb:	add    al,0x40
  412ded:	add    eax,0x52481092
  412df2:	inc    eax
  412df3:	adc    eax,0xa5c41016
  412df8:	test   BYTE PTR [eax+ecx*1],al
  412dfb:	xor    esp,eax
  412dfd:	or     eax,0x48180c98
  412e02:	or     eax,DWORD PTR [eax+ecx*2-0x3f7fff80]
  412e09:	push   es
  412e0a:	and    BYTE PTR [eax+0x8],al
  412e0d:	call   0x613e39
  412e12:	bound  eax,QWORD PTR [ecx+0x1a0800]
  412e18:	xchg   ebx,eax
  412e19:	and    DWORD PTR [edi],eax
  412e1b:	test   BYTE PTR [edx],al
  412e1d:	and    BYTE PTR [eax+0x2048380],dl
  412e23:	dec    ecx
  412e24:	cdq    
  412e25:	or     al,BYTE PTR [ebx+0x8080403]
  412e2b:	add    ah,BYTE PTR [edx-0x39]
  412e2e:	shl    DWORD PTR [ecx+ebp*2],0x9c
  412e32:	or     BYTE PTR [eax+eax*1],0x25
  412e36:	add    al,0x5
  412e38:	adc    al,BYTE PTR [eax+0x824030]
  412e3e:	inc    edx
  412e3f:	add    DWORD PTR ds:0x80001525,ebp
  412e45:	add    bl,BYTE PTR [ecx+0x40]
  412e48:	dec    eax
  412e49:	cmp    BYTE PTR [eax+eax*1],0x2c
  412e4d:	fiadd  DWORD PTR [eax+0x310100f2]
  412e53:	adc    cl,al
  412e55:	add    esi,DWORD PTR [eax]
  412e57:	inc    ebp
  412e58:	add    BYTE PTR [ecx-0x3e],0x1
  412e5c:	leave  
  412e5d:	dec    esp
  412e5e:	or     BYTE PTR [eax],cl
  412e60:	add    DWORD PTR [edx],ecx
  412e62:	and    al,0x8
  412e64:	enter  0x6b0,0x1
  412e68:	sbb    al,0x26
  412e6a:	sbb    eax,0x24905010
  412e6f:	and    DWORD PTR [edx-0x40],eax
  412e72:	adc    BYTE PTR [edx-0x80],al
  412e75:	or     BYTE PTR [eax-0x7ef39fe0],al
  412e7b:	adc    eax,eax
  412e7d:	and    BYTE PTR [edx+0x34100186],dh
  412e83:	add    BYTE PTR [edx+0x64c00408],al
  412e89:	inc    esp
  412e8a:	inc    edx
  412e8b:	or     BYTE PTR [ecx+0x5844a8da],al
  412e91:	bound  eax,QWORD PTR [edx+ebx*2+0x1a]
  412e95:	js     0x412e9f
  412e97:	add    al,0x23
  412e99:	add    ah,BYTE PTR [eax]
  412e9b:	cwde   
  412e9c:	mov    al,ds:0x80703240
  412ea1:	adc    BYTE PTR [ecx+0x20],al
  412ea4:	add    BYTE PTR [edx+eiz*1],dl
  412ea7:	cmp    bl,BYTE PTR [eax]
  412ea9:	add    BYTE PTR [edx],dl
  412eab:	add    BYTE PTR [eax],0x41
  412eae:	out    dx,al
  412eaf:	adc    BYTE PTR [eax+ecx*1],bl
  412eb2:	mov    dl,al
  412eb4:	xchg   edi,eax
  412eb5:	mov    DWORD PTR [ebx],edx
  412eb7:	add    BYTE PTR [eax+0x4002e492],dh
  412ebd:	call   0xcc:0x204700
  412ec4:	add    BYTE PTR [ebx+eax*2-0x28],dl
  412ec8:	adc    al,0x10
  412eca:	bound  edx,QWORD PTR [eax]
  412ecc:	mov    al,ds:0x82040400
  412ed1:	inc    esp
  412ed2:	dec    ebp
  412ed3:	or     BYTE PTR [eax+0x56a54097],ch
  412ed9:	popa   
  412eda:	or     DWORD PTR [ecx+eiz*4-0x75fffffc],0x4843400
  412ee5:	and    BYTE PTR [eax+0x1020],dl
  412eeb:	dec    esi
  412eec:	and    al,0x2
  412eee:	adc    al,0x80
  412ef0:	adc    cl,BYTE PTR [ecx-0x7dcf5ed4]
  412ef6:	sub    al,0x2
  412ef8:	and    DWORD PTR [eax+0x7],eax
  412efb:	add    al,0x10
  412efd:	add    BYTE PTR [eax],al
  412eff:	add    BYTE PTR [ecx],0x8e
  412f02:	and    edi,DWORD PTR [edx]
  412f04:	or     BYTE PTR [edx+eax*1],al
  412f07:	and    BYTE PTR [esi-0x47fdffe5],dl
  412f0d:	add    BYTE PTR [esp+ebp*1],al
  412f10:	add    BYTE PTR [ebp-0x7fbf67de],ah
  412f16:	retf   0x2210
  412f19:	add    al,0xc4
  412f1b:	or     BYTE PTR [eax],ah
  412f1d:	sub    al,BYTE PTR [eax+edi*2]
  412f20:	add    al,BYTE PTR [eax]
  412f22:	and    BYTE PTR [eax+0x40ecc500],al
  412f28:	add    BYTE PTR [ecx+0x21],0x0
  412f2c:	inc    eax
  412f2d:	sub    BYTE PTR [ecx+eax*1],0x8c
  412f31:	adc    ecx,DWORD PTR [edx+0x1]
  412f34:	enter  0x1000,0x2
  412f38:	adc    DWORD PTR [ecx],eax
  412f3a:	add    al,0x45
  412f3c:	or     al,0x20
  412f3e:	mov    ah,0x42
  412f40:	mov    ds:0x72023240,al
  412f45:	sub    eax,DWORD PTR [ecx+0x12]
  412f48:	or     DWORD PTR [eax+0xc],0x89408442
  412f4f:	inc    ecx
  412f50:	adc    BYTE PTR [eax],dl
  412f52:	call   DWORD PTR ds:0x451dac
  412f58:	add    ah,al
  412f5a:	add    BYTE PTR [edx],al
  412f5c:	and    BYTE PTR [eax],ch
  412f5e:	rcl    BYTE PTR [esi+0x2401c64],0xa0
  412f65:	or     ch,BYTE PTR [ecx]
  412f67:	mov    al,ds:0x20c0004e
  412f6c:	or     BYTE PTR [ecx],al
  412f6e:	or     BYTE PTR ss:[eax],0x0
  412f72:	and    BYTE PTR [edx],dh
  412f74:	cmp    BYTE PTR [eax],cl
  412f76:	adc    al,ah
  412f78:	inc    eax
  412f79:	or     DWORD PTR [eax+0x0],eax
  412f7c:	test   al,0x50
  412f7e:	adc    BYTE PTR [eax],cl
  412f80:	inc    ecx
  412f81:	pusha  
  412f82:	inc    ecx
  412f83:	adc    eax,0x3be00004
  412f88:	xor    dl,BYTE PTR [eax+edx*1]
  412f8b:	xchg   ecx,eax
  412f8c:	or     al,0x8
  412f8e:	cmp    al,BYTE PTR [edi+0x60]
  412f91:	pusha  
  412f92:	mov    ss,edx
  412f94:	add    al,0x8
  412f96:	mov    al,ds:0x4a848502
  412f9b:	and    BYTE PTR [ecx],ah
  412f9d:	dec    esp
  412f9e:	add    BYTE PTR [ecx],0x30
  412fa1:	pusha  
  412fa2:	and    DWORD PTR [eax+ecx*8],esp
  412fa5:	push   edx
  412fa6:	shl    BYTE PTR gs:[eax+eax*4],0x21
  412fab:	inc    eax
  412fac:	inc    esp
  412fad:	and    DWORD PTR [ecx],eax
  412faf:	add    BYTE PTR [eiz*4+0xb80820],0x0
  412fb7:	add    BYTE PTR [ebx],al
  412fb9:	add    BYTE PTR [edi-0x38],dl
  412fbc:	or     BYTE PTR [eax],al
  412fbe:	retf   0x9422
  412fc1:	inc    edx
  412fc2:	adc    cl,BYTE PTR [edx]
  412fc4:	and    esi,DWORD PTR [edx]
  412fc6:	or     DWORD PTR [eax+0x50101422],eax
  412fcc:	add    DWORD PTR [ecx+0x2031040],eax
  412fd2:	inc    eax
  412fd3:	mov    al,ds:0x4320030e
  412fd8:	or     BYTE PTR [eax],al
  412fda:	nop
  412fdb:	and    ah,BYTE PTR [esi+0x28]
  412fde:	shl    BYTE PTR [eax],0x0
  412fe1:	or     BYTE PTR [eax],0x8
  412fe4:	push   eax
  412fe5:	mov    al,ds:0x12147bc1
  412fea:	lds    eax,FWORD PTR [eax+0x74]
  412fed:	sbb    al,BYTE PTR [edx]
  412fef:	mov    eax,ds:0x404046
  412ff4:	add    BYTE PTR [eax+0x2100622],ah
  412ffa:	es nop
  412ffc:	add    al,BYTE PTR [esi]
  412ffe:	mov    al,0x52
  413000:	push   es
  413001:	in     eax,0x2
  413003:	mov    al,BYTE PTR [eax+edx*1]
  413006:	and    eax,0x1851128c
  41300b:	inc    ebx
  41300c:	inc    ecx
  41300d:	mov    WORD PTR [ecx],es
  41300f:	add    BYTE PTR [esi+edi*1+0x0],al
  413013:	and    BYTE PTR [eax+0x208081c0],ch
  413019:	adc    BYTE PTR [eax],dh
  41301b:	add    BYTE PTR [esi],0x31
  41301e:	and    BYTE PTR [edx],cl
  413020:	pop    edx
  413021:	add    DWORD PTR [eax],eax
  413023:	sbb    al,0x80
  413025:	mov    eax,DWORD PTR [ecx+0x10111800]
  41302b:	add    BYTE PTR [eax-0x7fbdf280],al
  413031:	mov    dh,0x58
  413033:	add    al,0x80
  413035:	add    DWORD PTR [esi+edx*2+0x9],eax
  413039:	or     BYTE PTR [eax+0x28400062],al
  41303f:	add    BYTE PTR [eax],bl
  413041:	dec    esi
  413042:	adc    DWORD PTR [eax+0xe006916],esp
  413048:	jo     0x412fea
  41304a:	enter  0x102,0xa
  41304e:	add    al,0x20
  413050:	add    DWORD PTR [eax+edx*1+0x2],0x8c121040
  413058:	inc    eax
  413059:	push   edx
  41305a:	add    dl,BYTE PTR [esi+0x11301988]
  413060:	mov    ds:0x1,eax
  413065:	cwde   
  413066:	add    dl,BYTE PTR [eax]
  413068:	push   eax
  413069:	pusha  
  41306a:	inc    ebp
  41306b:	pop    es
  41306c:	and    BYTE PTR [ecx],dl
  41306e:	push   es
  41306f:	adc    BYTE PTR [ecx],cl
  413071:	mov    ecx,DWORD PTR [edx]
  413073:	inc    esp
  413074:	xor    BYTE PTR [ecx+eax*4],al
  413077:	add    DWORD PTR [edx+edx*2],0x10000a19
  41307e:	cmp    BYTE PTR [eax-0x20],cl
  413081:	sub    al,ah
  413083:	and    DWORD PTR [eax],ebp
  413085:	add    al,BYTE PTR [edi]
  413087:	push   eax
  413088:	and    DWORD PTR [ecx],eax
  41308a:	add    BYTE PTR [ecx],al
  41308c:	adc    dl,BYTE PTR [eax+0x0]
  41308f:	stos   DWORD PTR es:[edi],eax
  413090:	push   ss
  413091:	dec    eax
  413092:	add    al,BYTE PTR [ecx]
  413094:	add    BYTE PTR [ecx+0x1],dh
  413097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413098:	add    al,bl
  41309a:	and    BYTE PTR [edx],al
  41309c:	or     BYTE PTR [edx],dl
  41309e:	mov    BYTE PTR [ebx+eax*4],al
  4130a1:	mov    al,0x0
  4130a3:	add    BYTE PTR [esp+eax*2+0x10],cl
  4130a7:	add    eax,0xb02448c2
  4130ac:	sbb    BYTE PTR [eax+eiz*4],cl
  4130af:	inc    ecx
  4130b0:	add    BYTE PTR [ecx+0x5004011c],al
  4130b6:	sbb    DWORD PTR [edi],edx
  4130b8:	adc    al,0xb4
  4130ba:	add    al,al
  4130bc:	pusha  
  4130bd:	add    BYTE PTR [eax+0x2c],al
  4130c0:	add    al,0x40
  4130c2:	add    edx,DWORD PTR [eax+esi*2]
  4130c5:	add    BYTE PTR [ebx],ah
  4130c7:	ror    DWORD PTR [esp+eax*4-0x6eb9b700],1
  4130ce:	push   es
  4130cf:	xchg   BYTE PTR ds:0x81029602,al
  4130d5:	add    al,0x0
  4130d7:	add    eax,0x6014a014
  4130dc:	push   edx
  4130dd:	add    eax,0x38809
  4130e2:	pusha  
  4130e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130e4:	and    BYTE PTR [eax],al
  4130e6:	add    al,BYTE PTR [eax]
  4130e8:	adc    BYTE PTR [eax+eax*1],al
  4130eb:	and    al,BYTE PTR [eax]
  4130ed:	add    al,0x3
  4130ef:	and    eax,DWORD PTR [eax]
  4130f1:	add    BYTE PTR [eax],ch
  4130f3:	or     BYTE PTR [esi],dh
  4130f5:	xchg   BYTE PTR [ecx],al
  4130f7:	dec    ecx
  4130f8:	enter  0x4104,0x8
  4130fc:	aaa    
  4130fd:	or     DWORD PTR [edx],ebx
  4130ff:	pop    es
  413100:	add    BYTE PTR [ebp+0x500408],al
  413106:	xor    BYTE PTR [ebp+0x6004110a],cl
  41310c:	add    BYTE PTR [edx+0x3],0x1
  413110:	or     BYTE PTR [esi],al
  413112:	fs jl  0x413115
  413115:	add    BYTE PTR ds:0x8150a0c8,ah
  41311b:	mov    BYTE PTR [eax+0x4c],cl
  41311e:	mov    eax,DWORD PTR [eax+0x64]
  413121:	add    BYTE PTR [ebx],0x80
  413124:	sub    DWORD PTR [eax],0x2
  413127:	mov    eax,ds:0x129a1880
  41312c:	les    esi,FWORD PTR [eax]
  41312e:	and    eax,DWORD PTR [edx+eiz*1+0x404c50c1]
  413135:	and    al,0x2
  413137:	add    eax,0x20004602
  41313c:	add    al,0xc2
  41313e:	add    DWORD PTR [eax+0x8],eax
  413141:	mov    BYTE PTR [ecx+edx*2],cl
  413144:	push   es
  413145:	and    BYTE PTR [eax],al
  413147:	sub    BYTE PTR [eax],0x28
  41314a:	add    BYTE PTR [eax+0x481e2200],al
  413150:	sub    BYTE PTR [eax+eax*1+0x20],al
  413157:	int3   
  413158:	les    eax,FWORD PTR [eax]
  41315a:	add    BYTE PTR [eax],0x84
  41315d:	inc    edx
  41315e:	or     BYTE PTR [edx],ah
  413160:	cwde   
  413161:	dec    ecx
  413162:	add    BYTE PTR [eax-0x7eefd1e0],al
  413168:	add    BYTE PTR [ecx+0x68c620c],dh
  41316e:	nop
  41316f:	push   0x13
  413171:	add    al,0x8
  413173:	or     BYTE PTR [eax+edx*2],ah
  413176:	bound  edx,QWORD PTR [edx]
  413178:	add    al,0x2
  41317a:	add    DWORD PTR [esi],0xffffffa3
  41317d:	adc    BYTE PTR ds:0x422c0cc2,al
  413183:	popa   
  413184:	popa   
  413185:	add    eax,0x88c31041
  41318a:	inc    ecx
  41318b:	mov    ds:0x8070103d,al
  413190:	push   edx
  413191:	add    BYTE PTR [edx],al
  413193:	mov    al,ds:0x48805400
  413198:	mov    ds:0x180e810,al
  41319d:	mov    al,dh
  41319f:	adc    al,al
  4131a1:	sbb    DWORD PTR [eax+0x20],0x14010800
  4131a8:	inc    ebx
  4131a9:	sub    BYTE PTR [eax],dh
  4131ab:	and    BYTE PTR [eax],bl
  4131ad:	add    ah,BYTE PTR [eiz*1+0x1000010c]
  4131b4:	pop    eax
  4131b5:	jo     0x4131b7
  4131b7:	loopne 0x4131bc
  4131b9:	inc    ebp
  4131ba:	adc    BYTE PTR [eax],al
  4131bc:	xor    BYTE PTR [edx],al
  4131be:	add    al,0x84
  4131c0:	inc    ecx
  4131c1:	push   ebp
  4131c2:	nop
  4131c3:	and    cl,BYTE PTR [eax]
  4131c5:	and    DWORD PTR [esi+eax*1],edx
  4131c8:	jbe    0x41320a
  4131ca:	add    cl,BYTE PTR [edi]
  4131cc:	adc    BYTE PTR [edi-0x19dfbbdc],al
  4131d2:	add    DWORD PTR [edx],ecx
  4131d4:	and    al,BYTE PTR [esi]
  4131d6:	push   0x100f4211
  4131db:	add    DWORD PTR [edx],ebp
  4131dd:	and    BYTE PTR [ecx],bl
  4131df:	add    BYTE PTR [eax+0x2b],al
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	push   es
  4131e5:	inc    eax
  4131e6:	and    BYTE PTR [ecx+0x4701d414],0x40
  4131ed:	add    BYTE PTR [eax+ebp*1],0x82
  4131f1:	inc    edi
  4131f2:	add    al,0x80
  4131f4:	dec    ecx
  4131f5:	adc    BYTE PTR [eax+0x40],ah
  4131f8:	or     BYTE PTR [ecx],0x5
  4131fb:	or     BYTE PTR [eax+esi*2],al
  4131fe:	inc    eax
  4131ff:	push   esp
  413200:	adc    eax,0x20406009
  413205:	add    BYTE PTR [ebx+0x10880201],cl
  41320b:	jecxz  0x413215
  41320d:	sub    eax,DWORD PTR [eax]
  41320f:	or     DWORD PTR [eax],edx
  413211:	and    DWORD PTR [eax],eax
  413213:	mov    cl,0x85
  413215:	add    BYTE PTR [eax],0x60
  413218:	xor    dl,BYTE PTR [edi]
  41321a:	add    BYTE PTR [esi+eax*2],al
  41321d:	dec    eax
  41321e:	or     BYTE PTR [eax+0x6000c40c],al
  413224:	sub    BYTE PTR [eax+0xc],0x35
  413228:	push   eax
  413229:	adc    BYTE PTR [eax],al
  41322b:	inc    esi
  41322c:	push   ecx
  41322d:	inc    esi
  41322e:	or     dh,BYTE PTR [ebx+0x202d2c46]
  413234:	or     eax,DWORD PTR [ebx+0x12]
  413237:	add    DWORD PTR ds:0x84529819,ecx
  41323d:	mov    ecx,0x20cc017b
  413242:	add    DWORD PTR [edx],ebx
  413244:	inc    edx
  413245:	add    eax,0x10300240
  41324a:	dec    esp
  41324b:	adc    DWORD PTR [eax],esi
  41324d:	inc    eax
  41324e:	mov    ds:0x22020342,al
  413253:	inc    esp
  413254:	sub    DWORD PTR [eax-0x7bfcdfe0],ebx
  41325a:	inc    eax
  41325b:	sar    BYTE PTR [eax],0xa
  41325e:	pusha  
  41325f:	add    BYTE PTR [ebx],al
  413261:	inc    eax
  413262:	inc    eax
  413263:	popa   
  413264:	add    DWORD PTR [eax+0x5124119],eax
  41326a:	or     BYTE PTR [eax],dl
  41326c:	add    BYTE PTR [eax],al
  41326e:	adc    al,BYTE PTR [edx]
  413270:	add    BYTE PTR [edx],ah
  413272:	add    BYTE PTR [eax],cl
  413274:	add    BYTE PTR [eax],al
  413276:	sub    BYTE PTR [ecx],ah
  413278:	inc    edx
  413279:	mov    al,ds:0xc706003
  41327e:	test   al,0x8
  413280:	push   eax
  413281:	test   BYTE PTR [eax+eax*4],al
  413284:	adc    BYTE PTR [eax+0x20],0xa
  413288:	and    BYTE PTR [eax+0x8],dl
  41328b:	bound  eax,QWORD PTR [edx+0x30a8910]
  413291:	add    BYTE PTR ds:0x21d09100,al
  413297:	add    BYTE PTR [edi],0x42
  41329a:	dec    eax
  41329b:	or     BYTE PTR [eax],dl
  41329d:	mov    al,0x0
  41329f:	xchg   DWORD PTR [eax],eax
  4132a1:	and    al,dh
  4132a3:	and    al,BYTE PTR [esi]
  4132a5:	adc    DWORD PTR [eax+0x802075],eax
  4132ab:	cmp    BYTE PTR [eax],dh
  4132ad:	les    ecx,FWORD PTR [ecx]
  4132af:	and    BYTE PTR [eax],ah
  4132b1:	adc    BYTE PTR [eax],al
  4132b3:	or     cl,BYTE PTR [esp+eax*8]
  4132b6:	pop    es
  4132b7:	sbb    BYTE PTR [eax+0x3],ah
  4132ba:	rol    BYTE PTR [edx+ecx*4],0x3b
  4132be:	sub    BYTE PTR [eax],0x20
  4132c1:	inc    eax
  4132c2:	or     BYTE PTR [edx-0x70],0xa0
  4132c6:	adc    BYTE PTR [eax+0x0],al
  4132c9:	xchg   ebx,eax
  4132ca:	inc    esp
  4132cb:	adc    ecx,DWORD PTR [esi]
  4132cd:	and    BYTE PTR [edx+0x3e1142],ah
  4132d3:	inc    eax
  4132d4:	add    BYTE PTR [eax],al
  4132d6:	add    eax,0x80140908
  4132db:	sbb    DWORD PTR [eax-0x7d],0x26da028
  4132e2:	es mov ah,0x0
  4132e5:	mov    BYTE PTR [eax],cl
  4132e7:	or     DWORD PTR [eax+0x9],esi
  4132ea:	pusha  
  4132eb:	adc    BYTE PTR [ecx],bl
  4132ed:	dec    eax
  4132ee:	or     DWORD PTR [eax],ebx
  4132f0:	add    DWORD PTR [eax+eax*4+0x49914c04],0xffffffc0
  4132f8:	push   es
  4132f9:	add    eax,DWORD PTR [eax-0x38fbb7e0]
  4132ff:	or     DWORD PTR [ebp+0x8434020],eax
  413305:	pop    es
  413306:	add    BYTE PTR [edx],dh
  413308:	daa    
  413309:	adc    BYTE PTR [eax],ah
  41330b:	and    DWORD PTR [ebx],0x0
  41330e:	inc    ecx
  41330f:	ds push ebx
  413311:	add    BYTE PTR [eax-0x70],cl
  413314:	sub    al,0x86
  413316:	xchg   ecx,eax
  413317:	inc    eax
  413318:	or     al,0x26
  41331a:	repnz or DWORD PTR [eax+0x1684540],esi
  413321:	xor    BYTE PTR [edx+eax*1+0x42],dl
  413325:	or     eax,0x1290f148
  41332a:	les    eax,FWORD PTR [eax]
  41332c:	adc    al,0x26
  41332e:	rol    DWORD PTR [esi],0x10
  413331:	xor    al,BYTE PTR [bx+si]
  413334:	adc    al,0x1
  413336:	add    BYTE PTR [ecx],dh
  413338:	add    BYTE PTR [eax+0x0],ah
  41333b:	adc    BYTE PTR [eax+0x4c801c98],al
  413341:	add    BYTE PTR [eax+edx*1+0x20048401],al
  413348:	rcr    BYTE PTR [eax],1
  41334a:	inc    esp
  41334b:	add    BYTE PTR [eax],0x48
  41334e:	inc    esp
  41334f:	inc    eax
  413350:	xchg   esp,eax
  413351:	pop    ss
  413352:	jo     0x413374
  413354:	inc    eax
  413355:	xchg   esp,eax
  413356:	ret    
  413357:	add    DWORD PTR [ecx+ecx*8+0x0],edi
  41335b:	inc    eax
  41335c:	rol    BYTE PTR [ebx],0xe0
  41335f:	sub    BYTE PTR [esp+ebp*2],al
  413362:	add    BYTE PTR [ebx+edx*1],0x40
  413366:	mov    al,ds:0x132424e2
  41336b:	add    BYTE PTR [ebx],dh
  41336d:	push   cs
  41336e:	add    BYTE PTR [esp+edx*1+0x10],al
  413372:	xor    BYTE PTR [eax],al
  413374:	add    dl,ah
  413376:	test   eax,0xc0530029
  41337b:	push   eax
  41337c:	add    DWORD PTR [eax+0x24400400],eax
  413382:	add    DWORD PTR [eax-0x2d],eax
  413385:	push   cs
  413386:	add    eax,DWORD PTR [eax+0x60]
  413389:	add    al,dl
  41338b:	mov    al,ds:0x80712050
  413390:	add    BYTE PTR [eax+0x6401440c],al
  413396:	adc    BYTE PTR [eax+0x3],dl
  413399:	or     cl,BYTE PTR [eax]
  41339b:	push   edx
  41339c:	add    esp,DWORD PTR [edx+eax*2]
  41339f:	rcl    BYTE PTR [esi],1
  4133a1:	push   cs
  4133a2:	dec    eax
  4133a3:	add    eax,0xeba20
  4133a8:	adc    BYTE PTR [eax+0x10],dl
  4133ab:	pop    edx
  4133ac:	add    BYTE PTR [eax+0x12],al
  4133af:	pusha  
  4133b0:	add    BYTE PTR [eax],0x2
  4133b3:	add    BYTE PTR [eax+0x14],dl
  4133b6:	js     0x4133d0
  4133b8:	adc    bh,BYTE PTR [esi]
  4133ba:	ins    BYTE PTR es:[edi],dx
  4133bb:	test   al,0x5a
  4133bd:	add    al,0xa
  4133bf:	push   ds
  4133c0:	add    BYTE PTR [ebx+ecx*1-0x4aeebf00],0x6e
  4133c8:	add    ah,BYTE PTR [ebx-0x77f77bbe]
  4133ce:	add    eax,0x1800010
  4133d3:	or     BYTE PTR [edi+0x25],al
  4133d6:	repnz add edx,DWORD PTR [esi]
  4133d9:	add    BYTE PTR [eax],0x64
  4133dc:	or     al,0x0
  4133de:	and    DWORD PTR [edx+edx*2],eax
  4133e1:	mov    dh,BYTE PTR [edx]
  4133e3:	or     BYTE PTR [ecx],al
  4133e5:	sbb    BYTE PTR [eax],cl
  4133e7:	add    eax,0x11088882
  4133ec:	add    DWORD PTR [eax],0x100a00
  4133f2:	or     DWORD PTR [eax],eax
  4133f4:	add    DWORD PTR [edx+0x31],edi
  4133f7:	or     BYTE PTR [eax+0x231a6],0x0
  4133fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ff:	ret    
  413400:	sbb    BYTE PTR [eax+eax*4],cl
  413403:	or     eax,DWORD PTR [eax-0x7c]
  413406:	add    DWORD PTR [eax],eax
  413408:	dec    eax
  413409:	add    BYTE PTR [eax],0x12
  41340c:	add    BYTE PTR [eax],0x4
  41340f:	adc    DWORD PTR [edx],0x14002614
  413415:	inc    ecx
  413416:	ret    0x78a1
  413419:	add    al,BYTE PTR [eax+0x9]
  41341c:	adc    al,0x88
  41341e:	jo     0x413420
  413420:	or     dl,BYTE PTR [eax-0x80]
  413423:	dec    esp
  413424:	or     BYTE PTR [eax],al
  413426:	inc    eax
  413427:	adc    cl,BYTE PTR [eax]
  413429:	loopne 0x413436
  41342b:	and    BYTE PTR [edx],al
  41342d:	adc    BYTE PTR [esi],al
  41342f:	xor    BYTE PTR [ecx+eax*1],al
  413432:	and    dl,BYTE PTR [eax+0x10000400]
  413438:	inc    eax
  413439:	add    bh,BYTE PTR [eax]
  41343b:	add    BYTE PTR [edx+0x19],ah
  41343e:	inc    ebp
  41343f:	and    BYTE PTR [edx],ah
  413441:	add    BYTE PTR [eax],cl
  413443:	add    BYTE PTR [eax],dl
  413445:	push   ecx
  413446:	sbb    eax,0x83020040
  41344b:	add    BYTE PTR [eax+esi*1-0x80],ch
  41344f:	add    bl,BYTE PTR [edx]
  413451:	push   esi
  413452:	and    BYTE PTR [ebx],al
  413454:	add    BYTE PTR [edx],al
  413456:	inc    esp
  413457:	add    DWORD PTR ds:0xe70400,eax
  41345d:	and    edx,DWORD PTR [eax]
  41345f:	push   es
  413460:	push   es
  413461:	and    BYTE PTR [eax],dl
  413463:	adc    DWORD PTR [ecx],0x4202705
  413469:	sbb    al,0x80
  41346b:	add    BYTE PTR [eax],ch
  41346d:	xchg   ecx,eax
  41346e:	push   ss
  41346f:	inc    eax
  413470:	inc    edx
  413471:	add    al,0x25
  413473:	and    BYTE PTR [eax],al
  413475:	add    DWORD PTR [eax-0x3d],esp
  413478:	adc    al,0xa0
  41347a:	push   0x10291850
  41347f:	mov    ch,0xe0
  413481:	xor    BYTE PTR [eax+ecx*1+0x100a3400],dl
  413488:	inc    eax
  413489:	adc    al,0x10
  41348b:	add    BYTE PTR [eax+0x25d40010],cl
  413491:	lock add BYTE PTR [ecx],0xa2
  413495:	mov    al,ds:0x20990004
  41349a:	add    BYTE PTR [esi],bh
  41349c:	push   es
  41349d:	inc    eax
  41349e:	xor    al,al
  4134a0:	add    BYTE PTR [edx],dl
  4134a2:	add    BYTE PTR [eax],dl
  4134a4:	sbb    DWORD PTR [edx+0x20430008],eax
  4134aa:	rcr    BYTE PTR [edx+0x40],0x64
  4134ae:	add    BYTE PTR [ecx],bl
  4134b0:	inc    eax
  4134b1:	jb     0x4134bd
  4134b3:	xchg   BYTE PTR [ecx+eiz*1],al
  4134b6:	or     DWORD PTR [ecx],eax
  4134b8:	add    esp,DWORD PTR [eax]
  4134ba:	adc    BYTE PTR [eax],ah
  4134bc:	or     ah,BYTE PTR [ecx]
  4134be:	inc    esp
  4134bf:	rol    DWORD PTR [eax],0x20
  4134c2:	or     DWORD PTR [eax+eax*1],eax
  4134c5:	or     BYTE PTR ds:0x40260800,al
  4134cb:	add    eax,0x23504880
  4134d0:	dec    edx
  4134d1:	pop    esp
  4134d2:	inc    edx
  4134d3:	dec    edx
  4134d4:	add    eax,DWORD PTR [eax]
  4134d6:	and    BYTE PTR [eax],al
  4134d8:	and    BYTE PTR [edx],ah
  4134da:	add    BYTE PTR [ebx+0x8],al
  4134dd:	and    al,0x18
  4134df:	rol    DWORD PTR [edx],1
  4134e1:	inc    eax
  4134e2:	add    BYTE PTR [ecx],cl
  4134e4:	mov    al,0x60
  4134e6:	and    DWORD PTR [ecx+0x2e001208],0x48082110
  4134f0:	and    DWORD PTR [eax+eiz*1],ecx
  4134f3:	adc    DWORD PTR [ecx],edi
  4134f5:	inc    eax
  4134f6:	and    BYTE PTR [eax],dl
  4134f8:	inc    eax
  4134f9:	add    BYTE PTR [eax],ah
  4134fb:	inc    eax
  4134fc:	xor    al,BYTE PTR [eax]
  4134fe:	push   es
  4134ff:	bound  ebp,QWORD PTR [ebx]
  413501:	lods   al,BYTE PTR ds:[esi]
  413502:	rcl    BYTE PTR [eax],0x0
  413505:	xor    BYTE PTR [edx],al
  413507:	add    BYTE PTR [eax+0x9],al
  41350a:	xor    al,0x42
  41350c:	jne    0x413555
  41350e:	add    BYTE PTR [eax],0x8c
  413511:	inc    eax
  413512:	nop
  413513:	add    DWORD PTR [eax],eax
  413515:	add    ch,dl
  413517:	add    BYTE PTR [esp+eax*1],0xa8
  41351b:	rol    BYTE PTR ds:0xce882002,0x90
  413522:	inc    esp
  413523:	add    al,0x0
  413525:	cmp    eax,DWORD PTR [eax+0xc]
  413528:	sbb    BYTE PTR [edx],0x68
  41352b:	adc    DWORD PTR [eax],eax
  41352d:	add    BYTE PTR [edx],0x14
  413530:	or     BYTE PTR [ebp+0xc],dl
  413533:	mov    al,ds:0x29010410
  413538:	adc    BYTE PTR [edx],cl
  41353a:	xor    al,0x70
  41353c:	and    eax,0x24258852
  413541:	xchg   esp,eax
  413542:	add    al,0x5
  413544:	dec    esp
  413545:	nop
  413546:	test   eax,0x82a802bc
  41354b:	sub    BYTE PTR [ecx+eiz*1],0x15
  41354f:	inc    eax
  413550:	dec    eax
  413551:	or     BYTE PTR [edx+eiz*2+0x2],al
  413555:	adc    BYTE PTR fs:[edx+0x4581009],dl
  41355c:	test   eax,0x81207028
  413561:	inc    ecx
  413562:	inc    eax
  413563:	xchg   esi,eax
  413564:	and    BYTE PTR [eax+0x4981d021],ah
  41356a:	add    BYTE PTR [edx],al
  41356c:	add    eax,0x1c00521
  413571:	and    al,ah
  413573:	and    al,0x50
  413575:	add    BYTE PTR [eax],bl
  413577:	add    BYTE PTR [eax],cl
  413579:	xor    DWORD PTR [eax],esp
  41357b:	add    BYTE PTR [eax],ah
  41357d:	inc    eax
  41357e:	call   0x2d01:0x16080801
  413585:	add    al,0x8a
  413587:	or     BYTE PTR [eax+0x2041860],al
  41358d:	dec    ecx
  41358e:	add    DWORD PTR [eax+0x58000800],eax
  413594:	sbb    BYTE PTR [esi+eax*2],al
  413597:	sbb    al,BYTE PTR [ecx]
  413599:	sbb    eax,0x8e00003
  41359e:	ret    0x3405
  4135a1:	add    eax,eax
  4135a3:	cmp    BYTE PTR [ecx+eiz*1],al
  4135a6:	push   eax
  4135a7:	sbb    cl,dl
  4135a9:	and    eax,0x6
  4135ac:	and    al,BYTE PTR [ecx-0x73c7dff0]
  4135b2:	popa   
  4135b3:	adc    DWORD PTR [esi],eax
  4135b5:	fs push eax
  4135b7:	push   es
  4135b8:	add    DWORD PTR [eax],eax
  4135ba:	pop    es
  4135bb:	and    esp,DWORD PTR ds:0xd1067c00
  4135c1:	xor    BYTE PTR [eax+0x3013684],al
  4135c7:	add    DWORD PTR [esp+eiz*2+0x1a],ecx
  4135cb:	add    BYTE PTR [edx],cl
  4135cd:	inc    eax
  4135ce:	mov    al,ds:0x80200244
  4135d3:	mov    al,ds:0x400120b0
  4135d8:	inc    edx
  4135d9:	pusha  
  4135da:	add    al,BYTE PTR [ecx+0x5140010]
  4135e0:	or     DWORD PTR [ecx],eax
  4135e2:	je     0x4135ee
  4135e4:	add    al,BYTE PTR [esi+0x4]
  4135e7:	or     BYTE PTR [edx+ebx*2],0x80
  4135eb:	or     DWORD PTR [eax],ebx
  4135ed:	sub    BYTE PTR [eax],cl
  4135ef:	enter  0x1c00,0x1
  4135f3:	xor    DWORD PTR [edx],0x887000
  4135f9:	test   BYTE PTR [eax],ah
  4135fb:	adc    BYTE PTR [eax],0x50
  4135fe:	pop    ebx
  4135ff:	les    eax,FWORD PTR [eax]
  413601:	shr    BYTE PTR [eax],0x18
  413604:	xor    BYTE PTR [eax+0xf],cl
  413607:	add    BYTE PTR [edx+0x43],dh
  41360a:	add    BYTE PTR [eax+eax*4],dl
  41360d:	and    BYTE PTR [eax],al
  41360f:	mov    dh,0x0
  413611:	loop   0x413593
  413613:	or     BYTE PTR [eax+0x41b0001e],al
  413619:	arpl   WORD PTR [edx],ax
  41361b:	rol    BYTE PTR [ebx+0x46000b10],0x10
  413622:	adc    BYTE PTR [edx],ch
  413624:	inc    esp
  413625:	add    BYTE PTR [eax+0x6],al
  413628:	push   esp
  413629:	and    al,0x54
  41362b:	adc    ah,BYTE PTR [ecx+eax*1]
  41362e:	test   BYTE PTR [ebx+esi*1],dl
  413631:	add    DWORD PTR [eax],0x129838c
  413637:	inc    eax
  413638:	mov    al,0x85
  41363a:	lea    esp,[edx]
  41363c:	or     cl,BYTE PTR [eax]
  41363e:	bound  esp,QWORD PTR [edi]
  413640:	add    DWORD PTR [eax],esi
  413642:	xchg   BYTE PTR [eax+0x8],ah
  413645:	mov    ah,BYTE PTR [eax]
  413647:	push   esp
  413648:	add    ebx,DWORD PTR es:[ebp+0x24]
  41364c:	add    BYTE PTR [ecx+ecx*1],dl
  41364f:	rol    BYTE PTR [eax],0x80
  413652:	add    BYTE PTR [ebp+0x29],dl
  413655:	sbb    DWORD PTR [eax+0x40],0x1802209
  41365c:	ret    0x9008
  41365f:	popa   
  413660:	test   BYTE PTR [ecx-0x6b7fbef0],ah
  413666:	inc    esp
  413667:	pusha  
  413668:	add    al,BYTE PTR [eax]
  41366a:	xchg   edx,eax
  41366b:	and    al,al
  41366d:	adc    eax,0x881060
  413672:	adc    al,BYTE PTR [eax-0x7e]
  413675:	add    eax,edx
  413677:	pusha  
  413678:	add    BYTE PTR [eax],cl
  41367a:	dec    ecx
  41367b:	push   es
  41367c:	les    edx,FWORD PTR [edx]
  41367e:	adc    dl,BYTE PTR [eax]
  413680:	xor    al,BYTE PTR [ecx-0x18]
  413683:	and    BYTE PTR [edx],bl
  413685:	lea    eax,[edx+0x2030ac00]
  41368b:	add    DWORD PTR [ecx],eax
  41368d:	and    ah,BYTE PTR [edx+0x142a4d25]
  413693:	aam    0xe
  413695:	aam    0x24
  413697:	add    BYTE PTR [edx+0x48232e8],cl
  41369d:	adc    BYTE PTR [eax+ecx*4-0x7c],al
  4136a1:	and    BYTE PTR [eax],dl
  4136a3:	add    al,0x20
  4136a5:	add    DWORD PTR [eax],esp
  4136a7:	sub    BYTE PTR [eax+0x225a6360],al
  4136ad:	inc    edx
  4136ae:	inc    ebx
  4136af:	xor    DWORD PTR [eax],eax
  4136b1:	adc    DWORD PTR [edx],0x19a257
  4136b7:	or     BYTE PTR [esp+esi*4],al
  4136ba:	and    DWORD PTR [esi],eax
  4136bc:	add    al,BYTE PTR ds:0x58844423
  4136c2:	inc    esp
  4136c3:	add    al,0x4
  4136c5:	ret    0x611
  4136c8:	popa   
  4136c9:	jo     0x4136cd
  4136cb:	mov    DWORD PTR [ecx],ebp
  4136cd:	pop    eax
  4136ce:	and    eax,0x991080
  4136d3:	add    DWORD PTR [ebx],0x836e0592
  4136d9:	adc    al,cl
  4136db:	or     DWORD PTR [ebx],ecx
  4136dd:	inc    eax
  4136de:	or     cl,BYTE PTR [eax]
  4136e0:	xor    BYTE PTR [ecx],dh
  4136e2:	add    BYTE PTR [esi-0x5ff4ffde],cl
  4136e8:	add    edx,DWORD PTR [edx-0x80]
  4136eb:	add    ah,BYTE PTR [ecx]
  4136ed:	xor    ebp,0x12104022
  4136f3:	add    BYTE PTR [edx-0x27f5f7a7],0xc5
  4136fa:	inc    edx
  4136fb:	shl    BYTE PTR [eax+0x65421848],cl
  413701:	add    BYTE PTR [edi],cl
  413703:	add    BYTE PTR [eax],cl
  413705:	inc    ebx
  413706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413707:	inc    esp
  413708:	inc    eax
  413709:	pop    eax
  41370a:	add    BYTE PTR [esp+eax*2],al
  41370d:	add    al,0x20
  41370f:	add    BYTE PTR [eax-0x5f],dh
  413712:	add    DWORD PTR [edx],eax
  413714:	or     BYTE PTR [eax],al
  413716:	test   BYTE PTR [eax],al
  413718:	add    BYTE PTR [eax-0x7bebbfff],al
  41371e:	and    DWORD PTR [ebx],ebx
  413720:	inc    eax
  413721:	test   DWORD PTR [eax],eax
  413723:	xor    eax,DWORD PTR [eax+0x30]
  413726:	and    BYTE PTR [ecx],al
  413728:	call   DWORD PTR ds:0x451fa8
  41372e:	and    DWORD PTR [edx+0x51400982],0x21112162
  413738:	add    DWORD PTR [edx],esp
  41373a:	inc    ebp
  41373b:	xchg   edx,eax
  41373c:	add    BYTE PTR [eax+0x103080a0],al
  413742:	test   BYTE PTR [eax],ah
  413744:	push   0x11
  413746:	sbb    BYTE PTR [edx],0x42
  413749:	mov    al,ds:0x41d20010
  41374e:	push   eax
  41374f:	enter  0x1234,0x80
  413753:	pushf  
  413754:	inc    eax
  413755:	add    DWORD PTR [ecx],edx
  413757:	xor    BYTE PTR [edx+eax*1],cl
  41375a:	add    ah,BYTE PTR [edx]
  41375c:	add    al,al
  41375e:	inc    edx
  41375f:	mov    al,ds:0x11b60350
  413764:	push   ecx
  413765:	push   edx
  413766:	inc    edx
  413767:	or     al,0x4a
  413769:	add    BYTE PTR [eax],al
  41376b:	cmp    DWORD PTR [eax],eax
  41376d:	adc    al,0xa0
  413770:	push   eax
  413771:	add    BYTE PTR [eax+0x220009e0],ah
  413777:	inc    edx
  413778:	add    BYTE PTR [esi],0x0
  41377b:	add    ah,BYTE PTR [eax+0x2]
  41377e:	add    BYTE PTR [edx-0x75e8f5fc],al
  413784:	push   0x8231004
  413789:	and    esp,ebx
  41378b:	or     DWORD PTR [eax],0x45c00068
  413791:	and    BYTE PTR [ebx+0x4a460012],al
  413797:	add    BYTE PTR [ebx+0x440b0010],cl
  41379d:	adc    DWORD PTR [edx+eax*1+0x5808b0],edx
  4137a4:	stos   BYTE PTR es:[edi],al
  4137a5:	add    BYTE PTR [eax],al
  4137a7:	pop    ebp
  4137a8:	retf   0x88
  4137ab:	sbb    BYTE PTR [eax+0x58e48000],cl
  4137b1:	cmp    BYTE PTR [edx+eax*2],al
  4137b4:	pop    es
  4137b5:	add    dl,BYTE PTR [eax]
  4137b7:	inc    eax
  4137b8:	add    al,0x82
  4137ba:	sbb    BYTE PTR [edx+0x308200a],0x80
  4137c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137c2:	dec    eax
  4137c3:	inc    eax
  4137c4:	inc    ecx
  4137c5:	add    BYTE PTR [edx],ah
  4137c7:	pop    ss
  4137c8:	add    esp,DWORD PTR [eax]
  4137ca:	and    BYTE PTR [eax],dl
  4137cc:	inc    eax
  4137cd:	mov    WORD PTR [eax+0xa],cs
  4137d0:	add    al,0x10
  4137d2:	adc    BYTE PTR [eax],al
  4137d4:	sub    DWORD PTR [eax+0x20],0x2
  4137d8:	nop
  4137d9:	call   0xa426:0xc840001
  4137e0:	and    BYTE PTR [eax-0x5ffeef7c],al
  4137e6:	and    ecx,DWORD PTR [ecx-0x78]
  4137e9:	add    ebp,DWORD PTR [ecx+0x440441c8]
  4137ef:	add    eax,DWORD PTR [eax+0x57843220]
  4137f5:	or     BYTE PTR [eax-0x6f9ef99c],dh
  4137fb:	xor    BYTE PTR [eax-0x78],0x39
  4137ff:	cmp    BYTE PTR [edx],al
  413801:	adc    BYTE PTR [edx+edx*2-0x3fff2fda],bl
  413808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413809:	bound  ecx,QWORD PTR [eax]
  41380b:	adc    cl,BYTE PTR [edx]
  41380d:	add    ecx,DWORD PTR ds:0x14041545
  413813:	and    BYTE PTR [edx],al
  413815:	add    al,0x4a
  413817:	inc    esp
  413818:	xor    al,BYTE PTR [eax+esi*1+0xa]
  41381c:	inc    ecx
  41381d:	adc    BYTE PTR [eax],ah
  41381f:	nop
  413820:	add    al,BYTE PTR [eax]
  413822:	int    0x80
  413824:	add    al,al
  413826:	adc    BYTE PTR [eax],al
  413828:	rol    BYTE PTR [eax],1
  41382a:	xor    eax,0xbc1c01e
  41382f:	and    DWORD PTR [eax+0x60102821],eax
  413835:	add    BYTE PTR [eax],al
  413837:	add    DWORD PTR [ecx],esp
  413839:	add    al,0x48
  41383b:	data16 add BYTE PTR [edx],0x29
  41383f:	or     ch,BYTE PTR [ecx]
  413841:	inc    eax
  413842:	mov    ds:0x82040820,al
  413847:	call   0xa01:0x41957702
  41384e:	inc    eax
  41384f:	xchg   esp,eax
  413850:	add    BYTE PTR [eax+0x2060b12],cl
  413856:	test   eax,0x2c4c830
  41385b:	add    DWORD PTR [ecx],eax
  41385d:	or     DWORD PTR [esi+0x332001],0x27000c03
  413867:	adc    al,0x20
  413869:	and    BYTE PTR ds:0x30c01131,bh
  41386f:	push   eax
  413870:	adc    BYTE PTR [edx+ebp*1],0x8
  413874:	add    eax,DWORD PTR [eax]
  413876:	add    BYTE PTR [ecx+ecx*2+0x4440401],ah
  41387d:	or     BYTE PTR [ebx],al
  41387f:	ret    0x4255
  413882:	add    DWORD PTR [ecx],0x11
  413885:	add    BYTE PTR [eax+edx*1+0x51],al
  413889:	add    BYTE PTR [esi+0x18],0xf2
  41388d:	add    al,BYTE PTR [ecx]
  41388f:	test   BYTE PTR [eax],al
  413891:	add    BYTE PTR [eax],al
  413893:	xor    al,BYTE PTR [eax]
  413895:	mov    al,ds:0xa2a3087
  41389a:	pop    es
  41389b:	inc    edx
  41389c:	adc    dl,BYTE PTR [eax]
  41389e:	and    al,0xa
  4138a0:	loop   0x4138a6
  4138a2:	add    BYTE PTR [eax],0x1
  4138a5:	arpl   WORD PTR [eax+0x2104092],ax
  4138ab:	dec    edx
  4138ac:	inc    eax
  4138ad:	add    ecx,eax
  4138af:	sbb    DWORD PTR [eax+0xa5e0802],ecx
  4138b5:	inc    eax
  4138b6:	add    DWORD PTR [eax+ebx*8-0x5fdf7efd],edx
  4138bd:	push   eax
  4138be:	dec    eax
  4138bf:	add    BYTE PTR [eax],al
  4138c1:	xor    BYTE PTR [eax+0x0],cl
  4138c4:	or     BYTE PTR [ecx+0xa038280],ah
  4138ca:	add    BYTE PTR [eax-0x7f3efa3f],al
  4138d0:	push   ss
  4138d1:	rcr    BYTE PTR [ecx+0x24],cl
  4138d4:	cmp    ah,ah
  4138d6:	js     0x413948
  4138d8:	dec    edx
  4138d9:	mov    al,ds:0x5820200
  4138de:	inc    eax
  4138df:	add    al,BYTE PTR [edi]
  4138e1:	pop    edx
  4138e2:	inc    eax
  4138e3:	or     BYTE PTR [eax],al
  4138e5:	inc    ecx
  4138e6:	inc    edx
  4138e7:	cs test al,bl
  4138ea:	cmp    DWORD PTR [eax],ecx
  4138ec:	xchg   BYTE PTR [eax+edx*4],ah
  4138ef:	or     ah,BYTE PTR [ecx+edx*1+0x8070002]
  4138f6:	xor    ch,BYTE PTR [ecx+0x20]
  4138f9:	adc    al,BYTE PTR [eax-0x3cfdbb00]
  4138ff:	lock rol bl,0x90
  413903:	add    BYTE PTR [eax+ecx*2],cl
  413906:	enter  0x3cd0,0x24
  41390a:	and    BYTE PTR [edx],dl
  41390c:	xor    dl,BYTE PTR [eax+0x3834042]
  413912:	inc    edx
  413913:	push   eax
  413914:	pusha  
  413915:	adc    al,0x3f
  413917:	add    al,al
  413919:	add    al,0x8
  41391b:	add    BYTE PTR [eax],ah
  41391d:	or     DWORD PTR [edx],0x90300025
  413923:	mov    ds:0x58d8b029,al
  413928:	sbb    al,0x0
  41392a:	inc    edx
  41392b:	add    BYTE PTR [eax],al
  41392d:	push   edx
  41392e:	test   DWORD PTR [eax+ebp*2],eax
  413931:	inc    ecx
  413932:	loop   0x4138f4
  413934:	or     DWORD PTR [eax],eax
  413936:	add    al,BYTE PTR [ebx+0x132b8110]
  41393c:	adc    DWORD PTR [ebx],0x6c403018
  413942:	add    al,0x0
  413944:	and    DWORD PTR [ebx],esp
  413946:	add    BYTE PTR [edi-0x70],cl
  413949:	pop    esp
  41394a:	outs   dx,DWORD PTR ds:[esi]
  41394b:	or     al,BYTE PTR [edx]
  41394d:	add    BYTE PTR [ecx],ah
  41394f:	add    BYTE PTR [eax-0x3d5e7feb],ah
  413955:	add    eax,0x10420a01
  41395a:	loopne 0x4139be
  41395c:	inc    esp
  41395d:	or     al,BYTE PTR [edx]
  41395f:	nop
  413960:	or     eax,0x248b8a01
  413965:	mov    ds:0x810c400,eax
  41396a:	xor    BYTE PTR [edx+ebx*1],al
  41396d:	push   ss
  41396e:	cli    
  41396f:	dec    esi
  413970:	mov    BYTE PTR [edx+edx*2],al
  413973:	and    eax,DWORD PTR [edx+0x60d0507]
  413979:	xor    BYTE PTR [ecx],al
  41397b:	add    DWORD PTR [edx+0x32001319],edx
  413981:	adc    BYTE PTR [eax+0x1002340],ch
  413987:	pop    ss
  413988:	add    dl,BYTE PTR ds:0x28a84400
  41398e:	mov    al,ds:0xe8a28054
  413993:	xor    DWORD PTR [edx],esp
  413995:	add    al,0xc8
  413997:	add    BYTE PTR [eax],al
  413999:	adc    al,BYTE PTR [eax+0x5]
  41399c:	adc    BYTE PTR [ecx],0x1a
  41399f:	add    DWORD PTR [edx],ebp
  4139a1:	sbb    BYTE PTR [eax+0x20004828],al
  4139a7:	inc    esi
  4139a8:	adc    BYTE PTR [eax],0x26
  4139ab:	add    al,BYTE PTR [eax-0x3cfffec0]
  4139b1:	and    BYTE PTR [eax],0x31
  4139b4:	push   0x40
  4139b6:	add    al,cl
  4139b8:	add    al,BYTE PTR [eax+eax*1+0x7031a103]
  4139bf:	add    al,dl
  4139c1:	add    BYTE PTR [eax],al
  4139c3:	add    BYTE PTR [ecx+0x461a21c0],al
  4139c9:	xor    BYTE PTR [ecx],al
  4139cb:	inc    eax
  4139cc:	or     BYTE PTR [ecx],dl
  4139ce:	add    eax,DWORD PTR [edx+eax*1]
  4139d1:	add    DWORD PTR [esi+0x24],esp
  4139d4:	mov    al,ds:0xc011c2e3
  4139d9:	xchg   BYTE PTR [eax],al
  4139db:	add    al,0x48
  4139dd:	add    BYTE PTR [eax+0x50420470],al
  4139e3:	mov    BYTE PTR [edx+ebx*1],bl
  4139e6:	add    BYTE PTR [edx],dl
  4139e8:	inc    edx
  4139e9:	mov    ch,al
  4139eb:	add    DWORD PTR [ecx],eax
  4139ed:	xor    ah,cl
  4139ef:	add    dl,BYTE PTR [edx]
  4139f1:	sbb    DWORD PTR [edx+0x40800002],esp
  4139f7:	add    DWORD PTR [ebp+0x68],edx
  4139fa:	adc    BYTE PTR [eax+eax*1],cl
  4139fd:	inc    eax
  4139fe:	xor    BYTE PTR [edx],ah
  413a00:	add    al,0x0
  413a02:	and    al,0x0
  413a04:	rol    DWORD PTR [edi],cl
  413a06:	xor    BYTE PTR [edi],al
  413a08:	push   es
  413a09:	or     BYTE PTR [edx-0x10],al
  413a0c:	add    DWORD PTR [eax+0xc246663],ecx
  413a12:	mov    DWORD PTR [eax+0x44a5c00],edx
  413a18:	add    DWORD PTR [eax],eax
  413a1a:	push   ds
  413a1b:	add    DWORD PTR [ecx+edx*1],eax
  413a1e:	and    DWORD PTR [eax+edi*2+0x65],esp
  413a22:	adc    BYTE PTR [eax],al
  413a24:	add    BYTE PTR [edi+0x1],cl
  413a27:	add    BYTE PTR [eax],ah
  413a29:	inc    ebx
  413a2a:	add    BYTE PTR [eax+0x2],cl
  413a2d:	mov    al,0x42
  413a2f:	add    eax,DWORD PTR [eax+0x0]
  413a32:	inc    eax
  413a33:	xor    BYTE PTR [edx+esi*1+0x1],bl
  413a37:	or     BYTE PTR [ebx],al
  413a39:	inc    eax
  413a3a:	or     BYTE PTR [eax],al
  413a3c:	adc    al,BYTE PTR [edx]
  413a3e:	push   es
  413a3f:	mov    al,ds:0x24a6e
  413a44:	mov    al,0x26
  413a46:	popa   
  413a47:	xchg   BYTE PTR [esi+0x11300253],ah
  413a4d:	adc    dl,BYTE PTR [edx]
  413a4f:	add    BYTE PTR [esi],dl
  413a51:	add    BYTE PTR [ecx],0xc
  413a54:	xor    al,BYTE PTR [ebx+0x5050c630]
  413a5a:	loopne 0x413a5e
  413a5c:	and    cl,al
  413a5e:	or     al,BYTE PTR [ecx]
  413a60:	mov    edx,0x1b25c290
  413a65:	rcl    BYTE PTR [ecx+esi*1],0xe
  413a69:	inc    eax
  413a6a:	or     esp,eax
  413a6c:	add    BYTE PTR [ebx],cl
  413a6e:	inc    esi
  413a6f:	adc    DWORD PTR ds:0x221110,esp
  413a75:	and    BYTE PTR ds:0x14f89390,cl
  413a7b:	or     BYTE PTR [eax],ah
  413a7d:	mov    al,ds:0x60081247
  413a82:	adc    DWORD PTR [edx],esp
  413a84:	add    BYTE PTR [ecx],al
  413a86:	pop    eax
  413a87:	add    BYTE PTR [ecx+0x4],ah
  413a8a:	or     ax,0xbb0
  413a8e:	mov    BYTE PTR [eax+0x22],dl
  413a91:	pop    es
  413a92:	add    DWORD PTR [edx],eax
  413a94:	push   es
  413a95:	add    al,0x80
  413a97:	sub    BYTE PTR [ecx],dl
  413a99:	add    BYTE PTR [esi+0x100454],dl
  413a9f:	and    al,BYTE PTR [eax]
  413aa1:	add    ecx,DWORD PTR [esp+ebp*1]
  413aa4:	xchg   edi,eax
  413aa5:	pop    eax
  413aa6:	adc    esp,eax
  413aa8:	add    al,0x50
  413aaa:	mov    BYTE PTR [eax+0x68220d00],al
  413ab0:	xchg   BYTE PTR [eax+edx*1],bh
  413ab3:	pusha  
  413ab4:	add    al,0x43
  413ab6:	add    BYTE PTR [eax],0x0
  413ab9:	inc    ebp
  413aba:	adc    DWORD PTR [eax],eax
  413abc:	add    al,0x41
  413abe:	and    BYTE PTR ds:0x2400d81,al
  413ac4:	movups xmm2,XMMWORD PTR [ecx]
  413ac7:	sbb    bl,BYTE PTR [ecx]
  413ac9:	push   eax
  413aca:	pusha  
  413acb:	add    BYTE PTR [esi],al
  413acd:	sbb    eax,0x86820300
  413ad2:	adc    esp,DWORD PTR [eax+0x12]
  413ad5:	jno    0x413ad7
  413ad7:	inc    ecx
  413ad8:	or     dl,BYTE PTR [edx]
  413ada:	sbb    al,al
  413adc:	and    DWORD PTR [ebx],eax
  413ade:	add    DWORD PTR ds:0x30500422,0x33021a04
  413ae8:	sbb    BYTE PTR [eax+0x41],0x27
  413aec:	add    al,BYTE PTR [ecx]
  413aee:	fcomp  DWORD PTR [edx+0x0]
  413af1:	add    BYTE PTR [eax-0x10],al
  413af4:	adc    dl,al
  413af6:	xchg   edx,eax
  413af7:	mov    ah,0x20
  413af9:	sbb    al,BYTE PTR fs:[eax]
  413afc:	rol    BYTE PTR [eax+0x48042820],0x1a
  413b03:	add    cl,al
  413b05:	and    BYTE PTR [ebx],al
  413b07:	rol    BYTE PTR [esp+eax*1+0x2b],1
  413b0b:	fcom   DWORD PTR [edx]
  413b0d:	add    BYTE PTR [eax],al
  413b0f:	xor    BYTE PTR [edx+0x1400],al
  413b15:	add    al,BYTE PTR [edx+0x0]
  413b18:	adc    edx,edx
  413b1a:	rcr    al,0x12
  413b1d:	test   BYTE PTR [ebx-0x7dbb7df8],ah
  413b23:	add    al,0x80
  413b25:	leave  
  413b26:	and    ecx,esi
  413b28:	push   esp
  413b29:	add    al,BYTE PTR [eax]
  413b2b:	and    al,BYTE PTR [eax]
  413b2d:	add    BYTE PTR [ecx],al
  413b2f:	cmp    DWORD PTR [esp+eax*4],eax
  413b32:	inc    eax
  413b33:	adc    BYTE PTR [edx],ah
  413b35:	shl    BYTE PTR [eax-0x7ff7dfe0],0x30
  413b3c:	inc    eax
  413b3d:	add    ebx,DWORD PTR [ecx]
  413b3f:	add    BYTE PTR [ebx+ebx*1],ch
  413b42:	add    al,0x2
  413b44:	add    DWORD PTR [edx+eiz*4+0x29],0x8004496a
  413b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b4d:	add    al,0x92
  413b4f:	mov    BYTE PTR [eax-0x40],bl
  413b52:	and    BYTE PTR [eax],ah
  413b54:	sldt   WORD PTR [ecx+0x23]
  413b58:	inc    eax
  413b59:	dec    eax
  413b5a:	inc    eax
  413b5b:	shl    BYTE PTR [eax+0x10],1
  413b5e:	inc    ecx
  413b5f:	adc    al,0x22
  413b61:	sbb    BYTE PTR [eax+0xa1a0960],al
  413b67:	or     DWORD PTR [ecx],esp
  413b69:	add    BYTE PTR [eax],cl
  413b6b:	adc    BYTE PTR [eax],dl
  413b6d:	add    BYTE PTR [ebx+0x18],cl
  413b70:	inc    ecx
  413b71:	add    BYTE PTR [eax-0x80],bl
  413b74:	mov    WORD PTR [eax],es
  413b76:	add    al,0x0
  413b78:	and    dl,cl
  413b7a:	jmp    0x9420:0xd888405
  413b81:	add    BYTE PTR [ecx+0x2206108a],bl
  413b87:	inc    eax
  413b88:	adc    BYTE PTR [ecx],bl
  413b8a:	add    BYTE PTR [ebx+0x2],dl
  413b8d:	xor    BYTE PTR [ebx],cl
  413b8f:	mov    BYTE PTR [edx],dl
  413b91:	push   es
  413b92:	add    al,0x0
  413b94:	add    BYTE PTR [eax-0x7d],dl
  413b97:	and    BYTE PTR [esi],ch
  413b99:	hlt    
  413b9a:	adc    cl,ah
  413b9c:	pusha  
  413b9d:	xor    eax,0x13008003
  413ba2:	push   edx
  413ba3:	ret    0x8201
  413ba6:	add    BYTE PTR [ecx],0x39
  413ba9:	add    BYTE PTR [ebx],bl
  413bab:	or     BYTE PTR [eax],al
  413bad:	adc    ah,ah
  413baf:	mov    DWORD PTR [eax],eax
  413bb1:	add    DWORD PTR [edx+eax*1],ecx
  413bb4:	and    BYTE PTR [edx+0x2268401a],cl
  413bba:	add    ebp,DWORD PTR [eax]
  413bbc:	push   edx
  413bbd:	inc    ecx
  413bbe:	sbb    cl,BYTE PTR [eax+0x44]
  413bc1:	or     DWORD PTR [eax+0x50],eax
  413bc4:	add    DWORD PTR [eax+edx*4],ebx
  413bc7:	clc    
  413bc8:	sbb    BYTE PTR [eax],dl
  413bca:	add    BYTE PTR [eax],cl
  413bcc:	pusha  
  413bcd:	add    BYTE PTR [ebp+0x1088480],cl
  413bd3:	or     BYTE PTR [eax+0x20954752],al
  413bd9:	xor    BYTE PTR [eax+0x20],bh
  413bdc:	mov    BYTE PTR [eax],al
  413bde:	dec    eax
  413bdf:	pop    eax
  413be0:	add    BYTE PTR [ecx],0x88
  413be3:	xor    bl,BYTE PTR [eax]
  413be5:	add    DWORD PTR ds:0xc38482ca,eax
  413beb:	inc    esp
  413bec:	add    al,0xe2
  413bee:	and    BYTE PTR [edi-0xe],0x4a
  413bf2:	add    BYTE PTR [eax],cl
  413bf4:	add    DWORD PTR [eax],esp
  413bf6:	inc    eax
  413bf7:	adc    dl,BYTE PTR [ecx]
  413bf9:	mov    eax,DWORD PTR [ecx+0x4b401520]
  413bff:	shl    BYTE PTR [ebx],0x90
  413c02:	add    al,BYTE PTR [edx]
  413c04:	adc    dl,BYTE PTR [eax]
  413c06:	add    cl,BYTE PTR [ecx+0x1]
  413c09:	add    DWORD PTR [edx],eax
  413c0b:	fisttp DWORD PTR [edx+0x6c]
  413c0e:	add    al,BYTE PTR [eax]
  413c10:	or     cl,BYTE PTR [edx+0x9]
  413c13:	xchg   ebx,eax
  413c14:	add    BYTE PTR [eax+0x232282],dl
  413c1a:	xor    al,BYTE PTR [ecx]
  413c1c:	ror    BYTE PTR [edx+0x101023c8],0x4
  413c23:	inc    eax
  413c24:	ss sub ecx,ecx
  413c27:	mov    DWORD PTR [eax],eax
  413c29:	add    al,BYTE PTR [ecx]
  413c2b:	and    al,0x34
  413c2d:	add    BYTE PTR [eax+0x22802030],al
  413c33:	nop
  413c34:	sub    al,0x20
  413c36:	daa    
  413c37:	sbb    ecx,DWORD PTR [eax+0x9]
  413c3a:	mov    eax,ds:0x722b0380
  413c3f:	adc    ah,BYTE PTR [eax-0x80]
  413c42:	push   es
  413c43:	add    DWORD PTR [eax+0xa012000],ecx
  413c49:	pushf  
  413c4a:	inc    ecx
  413c4b:	add    ah,BYTE PTR [eax+0x92a4110]
  413c51:	nop
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	pop    eax
  413c54:	add    eax,0x52204002
  413c59:	sbb    BYTE PTR [edx+0x3b514404],cl
  413c5f:	and    eax,0x21450493
  413c64:	xchg   BYTE PTR [ecx+0x1],dl
  413c67:	and    DWORD PTR [edx+eax*1],eax
  413c6a:	inc    edx
  413c6b:	or     BYTE PTR [eax],al
  413c6d:	add    al,0x3
  413c6f:	add    ch,BYTE PTR [edx-0x5f326d60]
  413c75:	or     ebp,ebx
  413c77:	add    ch,bl
  413c79:	push   ss
  413c7a:	add    BYTE PTR [edx],dl
  413c7c:	dec    eax
  413c7d:	and    dl,al
  413c7f:	push   ecx
  413c80:	add    al,dl
  413c82:	inc    eax
  413c83:	add    BYTE PTR [edx],dl
  413c85:	add    DWORD PTR [eax+0x10],ebp
  413c88:	out    0x40,al
  413c8a:	popw   es
  413c8c:	push   edx
  413c8d:	add    BYTE PTR [eax+0x58],al
  413c90:	or     BYTE PTR [ecx],0x50
  413c93:	add    DWORD PTR [eax],esp
  413c95:	mov    eax,ds:0x70030020
  413c9a:	es mov al,0x66
  413c9d:	add    eax,0xc310a200
  413ca2:	add    al,BYTE PTR [ebp+0x4001043]
  413ca8:	add    BYTE PTR [eax],0x80
  413cab:	pop    esi
  413cac:	mov    dl,BYTE PTR [edx-0x4ffa57fe]
  413cb2:	or     DWORD PTR [eax],eax
  413cb4:	and    BYTE PTR [eax+ecx*4],al
  413cb7:	or     al,0x83
  413cb9:	adc    BYTE PTR [eax+0x51],al
  413cbc:	add    DWORD PTR [eax],0x51a02066
  413cc2:	inc    eax
  413cc3:	mov    BYTE PTR [eax],al
  413cc5:	or     al,0x8
  413cc7:	addr16 inc esp
  413cc9:	adc    BYTE PTR [ecx],al
  413ccb:	add    BYTE PTR [eax],0x28
  413cce:	push   eax
  413ccf:	add    DWORD PTR [eax],edx
  413cd1:	add    eax,0x84010894
  413cd6:	test   al,0x44
  413cd8:	sbb    dl,ch
  413cda:	add    al,BYTE PTR [eax]
  413cdc:	add    BYTE PTR [edx],dl
  413cde:	adc    dl,BYTE PTR [eax]
  413ce0:	mov    BYTE PTR [ecx],bl
  413ce2:	push   eax
  413ce3:	pusha  
  413ce4:	outs   dx,DWORD PTR ds:[esi]
  413ce5:	or     DWORD PTR [ecx],eax
  413ce7:	adc    esp,DWORD PTR [eax+eiz*1-0x2e]
  413ceb:	and    DWORD PTR [eax],esp
  413ced:	add    al,BYTE PTR [ebp+0x5]
  413cf0:	jo     0x413d1a
  413cf2:	cwde   
  413cf3:	sub    BYTE PTR [eax],0x2
  413cf6:	sbb    eax,DWORD PTR [eax+eax*2]
  413cf9:	push   cs
  413cfa:	cmp    al,0xb0
  413cfc:	adc    BYTE PTR [ecx+0x2c],cl
  413cff:	lds    eax,FWORD PTR [edx]
  413d01:	mov    al,0x84
  413d03:	add    eax,0x60080e00
  413d08:	aas    
  413d09:	and    BYTE PTR [edx],al
  413d0b:	add    DWORD PTR [eax+0x0],edx
  413d0e:	xor    al,BYTE PTR [eax]
  413d10:	inc    eax
  413d11:	inc    ebp
  413d12:	add    edx,ecx
  413d14:	dec    esp
  413d15:	inc    esp
  413d16:	or     BYTE PTR [eax],ch
  413d18:	xchg   edx,eax
  413d19:	add    DWORD PTR [ebp+0x4170180c],esp
  413d1f:	rol    DWORD PTR [ecx],0x5
  413d22:	mov    BYTE PTR [ebx],ah
  413d24:	xor    al,0x44
  413d26:	or     dl,BYTE PTR [eax]
  413d28:	adc    ah,BYTE PTR [eax+0x8421400]
  413d2e:	sbb    al,0x59
  413d30:	adc    al,al
  413d32:	mov    al,ds:0x1024000c
  413d37:	adc    BYTE PTR [eax],al
  413d39:	add    BYTE PTR [edx],al
  413d3b:	mov    ecx,0x52448528
  413d40:	add    BYTE PTR [edx+0x10442961],al
  413d46:	shl    BYTE PTR [eax+eax*1+0x50003260],0x0
  413d4e:	aam    0xa2
  413d50:	add    ch,ah
  413d52:	adc    BYTE PTR [eax+eax*1+0x2],cl
  413d56:	mov    al,ds:0x1d20a00
  413d5b:	sbb    BYTE PTR [ebx],bl
  413d5d:	add    BYTE PTR [eax],dh
  413d5f:	mov    al,dl
  413d61:	loopne 0x413d85
  413d63:	adc    ah,BYTE PTR [eax+0xe]
  413d66:	ret    
  413d67:	adc    BYTE PTR [ebx-0x5e],cl
  413d6a:	call   0x8100:0x90021034
  413d71:	add    DWORD PTR [eax],0x82640000
  413d77:	inc    edx
  413d78:	add    BYTE PTR [eax],dl
  413d7a:	das    
  413d7b:	xor    BYTE PTR fs:[eax+0x46],0x40
  413d80:	adc    BYTE PTR [ebp+0x4],dl
  413d83:	dec    eax
  413d84:	add    BYTE PTR [eax],ah
  413d86:	add    BYTE PTR [eax+0x40],al
  413d89:	add    al,0x5e
  413d8b:	mov    eax,ds:0x2800228
  413d90:	add    DWORD PTR [eax],ebp
  413d92:	and    DWORD PTR [eax+0x78],0x90800880
  413d99:	inc    eax
  413d9a:	push   ss
  413d9b:	add    BYTE PTR [eax],dl
  413d9d:	add    al,BYTE PTR [ebx-0x3f]
  413da0:	add    al,0xb0
  413da2:	adc    cl,BYTE PTR [ecx]
  413da4:	sub    al,al
  413da6:	inc    eax
  413da7:	sub    edx,DWORD PTR [eax]
  413da9:	and    al,0x48
  413dab:	pop    ebx
  413dac:	adc    dl,bl
  413dae:	add    BYTE PTR [ecx+0x1082230],0x0
  413db5:	add    BYTE PTR [eax+eax*1],al
  413db8:	test   BYTE PTR [eax],al
  413dba:	sub    BYTE PTR [edx],dh
  413dbc:	add    BYTE PTR [eax],al
  413dbe:	add    BYTE PTR [edx+0x25200060],ah
  413dc4:	and    BYTE PTR [ecx],0x8
  413dc7:	xor    DWORD PTR [edx],0xffffffc0
  413dca:	imul   eax,DWORD PTR ds:0xd0a05,0x3d000610
  413dd4:	and    al,BYTE PTR [ecx]
  413dd6:	add    al,0x51
  413dd8:	gs inc esi
  413dda:	and    DWORD PTR [eax+0x12],edx
  413ddd:	add    BYTE PTR [ecx+edx*1+0xc00e122],cl
  413de4:	sub    BYTE PTR [eax+edx*4],al
  413de7:	inc    esp
  413de8:	xchg   edx,eax
  413de9:	cwde   
  413dea:	fadd   DWORD PTR [ecx-0x3dfffcfc]
  413df0:	or     al,0x60
  413df2:	adc    al,BYTE PTR [edx+0xc28004]
  413df8:	nop
  413df9:	rol    BYTE PTR [ebx],0x28
  413dfc:	add    DWORD PTR [eax+0x11],eax
  413dff:	mov    ds:0xa540a808,al
  413e04:	mov    cl,0x4
  413e06:	mov    ds:0x208210,eax
  413e0b:	inc    eax
  413e0c:	and    eax,ecx
  413e0e:	xor    BYTE PTR [edi],ah
  413e10:	add    BYTE PTR [ebx-0x39],dh
  413e13:	pusha  
  413e14:	or     BYTE PTR [eax+0xa1b012],al
  413e1a:	inc    eax
  413e1b:	add    al,0x40
  413e1d:	test   al,0x90
  413e1f:	add    bl,BYTE PTR [ecx]
  413e21:	ret    0x4a12
  413e24:	and    al,0x8
  413e26:	add    al,0x38
  413e28:	push   esp
  413e29:	adc    BYTE PTR [edx+0x0],al
  413e2c:	bound  eax,QWORD PTR [ecx-0x74]
  413e2f:	or     dl,al
  413e31:	xor    BYTE PTR [eax-0x7a],bh
  413e34:	sub    al,0x3
  413e36:	pop    eax
  413e37:	adc    BYTE PTR [edx],cl
  413e39:	add    BYTE PTR [eax],0x70
  413e3c:	push   esp
  413e3d:	add    al,0x9
  413e3f:	add    dl,BYTE PTR [ebx]
  413e41:	mov    WORD PTR [ecx],?
  413e43:	cmp    al,0xc9
  413e45:	push   eax
  413e46:	mov    DWORD PTR [eax+0x10],edx
  413e49:	inc    eax
  413e4a:	add    BYTE PTR [eax+eax*4+0x4910b102],dh
  413e51:	or     al,BYTE PTR [ecx]
  413e53:	adc    BYTE PTR [edx+0x42],0x4
  413e57:	dec    esp
  413e58:	jo     0x413e8a
  413e5a:	ror    DWORD PTR [eax*1+0x20000210],1
  413e61:	dec    eax
  413e62:	and    DWORD PTR [eax],eax
  413e64:	mov    al,ds:0x12888264
  413e69:	adc    BYTE PTR [eax],cl
  413e6b:	adc    cl,BYTE PTR [ecx]
  413e6d:	add    BYTE PTR [eax-0x7bb27e80],bl
  413e73:	test   eax,0x402d2120
  413e78:	int    0x41
  413e7a:	mov    al,ds:0x8e466040
  413e7f:	adc    BYTE PTR [eax+0x24],al
  413e82:	xchg   ecx,eax
  413e83:	xor    BYTE PTR [eax+0x168002],bl
  413e89:	or     al,al
  413e8b:	inc    eax
  413e8c:	es or  eax,0x8804a680
  413e92:	sbb    BYTE PTR [ebx],ah
  413e94:	or     DWORD PTR [edx],esi
  413e96:	dec    esp
  413e97:	das    
  413e98:	add    BYTE PTR [eax],dl
  413e9a:	or     BYTE PTR [edx+0x40118b01],bl
  413ea0:	adc    al,0x0
  413ea2:	add    DWORD PTR [edx+0x8001322],ecx
  413ea8:	arpl   WORD PTR [eax+0x7091808],sp
  413eae:	add    BYTE PTR [eax+eax*1],al
  413eb1:	push   ds
  413eb2:	inc    ecx
  413eb3:	mov    dl,0x89
  413eb5:	and    cl,BYTE PTR [eax+eax*4-0x7b]
  413eb9:	xor    dh,BYTE PTR [edx+edx*1+0x30]
  413ebd:	and    eax,0x75158269
  413ec2:	rol    BYTE PTR [edx+eiz*1],cl
  413ec5:	pop    ebx
  413ec6:	inc    eax
  413ec7:	pusha  
  413ec8:	inc    eax
  413ec9:	inc    edi
  413eca:	add    BYTE PTR [ebx],dh
  413ecc:	adc    cl,dl
  413ece:	add    BYTE PTR [esi],0x40
  413ed1:	inc    ebp
  413ed2:	adc    BYTE PTR [edx],dl
  413ed4:	add    BYTE PTR [eax+eax*1],al
  413ed7:	inc    edx
  413ed8:	push   cs
  413ed9:	mov    dl,0xc0
  413edb:	mov    al,ds:0x46804e1a
  413ee0:	pusha  
  413ee1:	add    BYTE PTR [ebx+eax*1+0x4b586020],dl
  413ee8:	ret    0x8851
  413eeb:	or     DWORD PTR [edx],esi
  413eed:	add    dl,BYTE PTR [ecx+0x50]
  413ef0:	add    al,0x8
  413ef2:	cs pop eax
  413ef4:	add    BYTE PTR [eax+0x30],cl
  413ef7:	mov    al,ds:0xe1090010
  413efc:	inc    ebx
  413efd:	inc    esi
  413efe:	call   DWORD PTR ds:0x451ea4
  413f04:	add    dh,BYTE PTR [eax]
  413f06:	stos   DWORD PTR es:[edi],eax
  413f07:	and    BYTE PTR [eax+0x1c],al
  413f0a:	inc    eax
  413f0b:	adc    BYTE PTR ds:0x82e172,al
  413f11:	jb     0x413f3b
  413f13:	cmp    BYTE PTR [eax],0x80
  413f16:	add    DWORD PTR [ecx+0x46c005c0],ebx
  413f1c:	nop
  413f1d:	or     DWORD PTR [eax+0x61],0xb080400
  413f24:	leave  
  413f25:	adc    ah,al
  413f27:	add    dl,BYTE PTR ss:[ecx+0x8202001]
  413f2e:	xchg   ecx,eax
  413f2f:	cdq    
  413f30:	inc    eax
  413f31:	and    DWORD PTR [edx],edx
  413f33:	add    BYTE PTR [edx],dh
  413f35:	add    al,0x81
  413f37:	mov    dl,0xc0
  413f39:	xor    eax,DWORD PTR [eax+eax*1+0xe]
  413f3d:	mov    al,ds:0x480830b0
  413f42:	and    BYTE PTR [edx-0x80],ah
  413f45:	sub    cl,BYTE PTR [eax]
  413f47:	pusha  
  413f48:	inc    eax
  413f49:	inc    ecx
  413f4a:	xor    ecx,DWORD PTR [ebx]
  413f4c:	dec    edx
  413f4d:	and    al,BYTE PTR [eax+0x44141006]
  413f53:	and    BYTE PTR [eax],ah
  413f55:	or     al,0x10
  413f57:	adc    al,cl
  413f59:	inc    eax
  413f5a:	dec    ecx
  413f5b:	xor    eax,ecx
  413f5d:	or     BYTE PTR [esp+eiz*2],al
  413f60:	dec    ecx
  413f61:	ror    BYTE PTR [edx+0x21],0x2
  413f65:	test   DWORD PTR [edx+0x30600231],eax
  413f6b:	add    eax,0x222c0522
  413f70:	add    BYTE PTR [eax],al
  413f72:	inc    eax
  413f73:	add    bh,BYTE PTR [ecx]
  413f75:	add    al,0x3
  413f77:	adc    edi,DWORD PTR [edx]
  413f79:	and    al,0xa0
  413f7b:	cmp    DWORD PTR [esi+0x55],esp
  413f7e:	add    al,BYTE PTR [ebx]
  413f80:	inc    eax
  413f81:	mov    BYTE PTR [edx+0x40d144c0],dl
  413f87:	adc    dl,BYTE PTR [ebx]
  413f89:	add    al,BYTE PTR [ebx]
  413f8b:	mov    al,ds:0x10162200
  413f90:	add    BYTE PTR [edx+0x41],cl
  413f93:	rcr    BYTE PTR [eax+0x30],0x88
  413f97:	sub    DWORD PTR [ebx+edx*1+0x24],eax
  413f9b:	add    ah,BYTE PTR [eax+0x0]
  413f9e:	inc    esi
  413f9f:	sub    al,0x32
  413fa1:	adc    BYTE PTR [edx+0x21148df5],ch
  413fa7:	adc    BYTE PTR fs:[eax],al
  413faa:	and    BYTE PTR [ecx],dl
  413fac:	adc    dl,BYTE PTR [esp+edx*1+0x202c8082]
  413fb3:	adc    BYTE PTR [eax-0x76],dl
  413fb6:	mov    al,ds:0x1c040821
  413fbb:	inc    eax
  413fbc:	and    DWORD PTR [ebx-0x2c99b7fe],esp
  413fc2:	push   cs
  413fc3:	sbb    dl,BYTE PTR [eax]
  413fc5:	add    BYTE PTR [eax],al
  413fc7:	and    bh,dl
  413fc9:	sbb    BYTE PTR [ebp+0x42],al
  413fcc:	or     ecx,esp
  413fce:	push   cs
  413fcf:	push   ecx
  413fd0:	add    al,BYTE PTR [ebx+0x1]
  413fd3:	push   eax
  413fd4:	add    ecx,DWORD PTR [eax]
  413fd6:	lea    eax,[ecx+eiz*4]
  413fd9:	xor    DWORD PTR [eax+0x0],eax
  413fdc:	add    BYTE PTR [edx],cl
  413fde:	inc    edx
  413fdf:	pop    edx
  413fe0:	rol    DWORD PTR [edx+0x41480430],0x9c
  413fe7:	or     BYTE PTR [edx],ah
  413fe9:	mov    bl,0x20
  413feb:	adc    BYTE PTR [ebp+0x40180da3],cl
  413ff1:	inc    eax
  413ff2:	aad    0x7
  413ff4:	and    BYTE PTR [eax-0x2f76e000],ah
  413ffa:	add    cl,BYTE PTR [edx+0x0]
  413ffd:	add    DWORD PTR [ecx+0x101a012],0x8e690119
  414007:	adc    eax,0x22
  41400a:	inc    ecx
  41400b:	mov    db2,edx
  41400e:	adc    BYTE PTR [esi],0xe2
  414011:	jo     0x414084
  414013:	add    DWORD PTR [eax],eax
  414015:	inc    ecx
  414016:	adc    BYTE PTR [ecx],bl
  414018:	or     BYTE PTR [eax],al
  41401a:	retf   0x8500
  41401d:	push   edx
  41401e:	or     BYTE PTR [eax+0x3],dl
  414021:	add    BYTE PTR [edx+eax*4],al
  414024:	inc    ecx
  414025:	sahf   
  414026:	add    al,al
  414028:	adc    BYTE PTR [eax],ah
  41402a:	retf   0x210
  41402d:	adc    esp,DWORD PTR [ecx+eax*4+0x4b60505]
  414034:	test   eax,0x6b804d3
  414039:	push   0x46221010
  41403e:	add    al,0x2
  414040:	add    BYTE PTR [eax+0x11480200],al
  414046:	xor    BYTE PTR [eax+0x1],bl
  414049:	add    DWORD PTR [ebp+0x210c1480],eax
  41404f:	or     BYTE PTR [edi],al
  414051:	add    al,0x1
  414053:	dec    ecx
  414054:	and    DWORD PTR [eax+0x5098000c],ebp
  41405a:	add    al,0x22
  41405c:	add    BYTE PTR [eax],ah
  41405e:	add    ah,ah
  414060:	add    al,0x0
  414062:	xchg   esp,eax
  414063:	call   0x414d98
  414068:	inc    eax
  414069:	mov    BYTE PTR [eax-0x80],al
  41406c:	adc    BYTE PTR [ecx+0x1148a20],0x11
  414073:	adc    DWORD PTR [eax-0x3d16fbfd],edx
  414079:	dec    ax
  41407b:	or     dl,BYTE PTR [eax+0x32]
  41407e:	add    eax,DWORD PTR [ecx]
  414080:	add    BYTE PTR [eax],cl
  414082:	and    al,BYTE PTR [edx]
  414084:	dec    edx
  414085:	mov    al,ds:0x142124c6
  41408a:	mov    BYTE PTR [eax],al
  41408c:	inc    ebp
  41408d:	add    BYTE PTR [edx+0x6],dh
  414090:	add    BYTE PTR [eax],al
  414092:	add    al,0x98
  414094:	and    BYTE PTR [eax],0x1a
  414097:	dec    edx
  414098:	or     DWORD PTR [edx],esi
  41409a:	add    BYTE PTR [edx+0x20],al
  41409d:	add    al,0x1
  41409f:	test   al,0x45
  4140a1:	and    BYTE PTR [edx],dl
  4140a3:	and    DWORD PTR ds:0x24943002,esi
  4140a9:	adc    al,BYTE PTR [eax+0x30074480]
  4140af:	add    DWORD PTR [eax],ebp
  4140b1:	add    BYTE PTR [ebx],dl
  4140b3:	add    BYTE PTR [eax],cl
  4140b5:	inc    esp
  4140b6:	sbb    al,BYTE PTR [eax+ebp*1]
  4140b9:	dec    edx
  4140ba:	add    BYTE PTR [ecx+0x20],dl
  4140bd:	dec    edx
  4140be:	add    al,BYTE PTR [eax+eiz*4+0x1]
  4140c2:	add    DWORD PTR [eax+eax*1+0x8],eax
  4140c6:	add    BYTE PTR [ecx],dl
  4140c8:	mov    WORD PTR [eax-0x5bfeb000],es
  4140ce:	ret    
  4140cf:	or     dl,BYTE PTR [eax]
  4140d1:	adc    BYTE PTR [edx],dh
  4140d3:	adc    bl,0x24
  4140d6:	xchg   esp,eax
  4140d7:	inc    eax
  4140d8:	xor    al,0x90
  4140da:	adc    BYTE PTR [edx],al
  4140dc:	nop
  4140dd:	mov    BYTE PTR [eax-0x63dffbf0],ah
  4140e3:	add    BYTE PTR [ecx+0xa203b80],ah
  4140e9:	and    BYTE PTR [eax+0x38],dh
  4140ec:	add    DWORD PTR [edx+0x9],ecx
  4140ef:	mov    al,ds:0x1005900
  4140f4:	test   al,dl
  4140f6:	and    al,BYTE PTR [eax+0xb]
  4140f9:	push   ecx
  4140fa:	sbb    BYTE PTR [ebx],al
  4140fc:	add    DWORD PTR [eax],eax
  4140fe:	push   es
  4140ff:	adc    BYTE PTR [edx+0x52090020],0x6
  414106:	adc    BYTE PTR [eax],0x0
  414109:	rcl    BYTE PTR [edx-0x1c],0x12
  41410d:	mov    es,WORD PTR [edx+0x211800a0]
  414113:	ret    
  414114:	mov    ds:0xd400c,al
  414119:	add    dl,BYTE PTR [edx+0xa196601]
  41411f:	jo     0x4140b5
  414121:	jb     0x4140aa
  414123:	sbb    DWORD PTR [eax-0x7b777fff],0x10100b80
  41412d:	sub    eax,0x20022309
  414132:	add    BYTE PTR [eax+0x31],bh
  414135:	add    al,BYTE PTR [eax+ecx*2+0x821788]
  41413c:	es or  al,0xa8
  41413f:	add    DWORD PTR [eax],esi
  414141:	inc    edx
  414142:	and    BYTE PTR [edx],bl
  414144:	pop    es
  414145:	and    eax,0x840801a
  41414a:	sbb    eax,0x806000
  41414f:	shl    BYTE PTR [edx+0x14502010],1
  414155:	add    BYTE PTR [eax-0x7f79fbf4],al
  41415b:	add    BYTE PTR [ebx],ah
  41415d:	adc    BYTE PTR [edx+0x53],bl
  414160:	add    DWORD PTR [edi+0x26],esp
  414163:	push   ds
  414164:	test   al,0x2
  414166:	or     DWORD PTR [edx],edx
  414168:	adc    eax,DWORD PTR [edx-0x55efffac]
  41416e:	nop
  41416f:	inc    eax
  414170:	nop
  414171:	pusha  
  414172:	add    BYTE PTR [edx],dl
  414174:	add    eax,edi
  414176:	and    DWORD PTR [eax],eax
  414178:	mov    ds:0x42408c,al
  41417d:	add    BYTE PTR [eax+0x2],al
  414180:	dec    eax
  414181:	daa    
  414182:	inc    eax
  414183:	adc    BYTE PTR [eax],ch
  414185:	sbb    BYTE PTR [eax+0x9841415],0x34
  41418c:	or     al,0x40
  41418e:	pop    eax
  41418f:	and    BYTE PTR [eax+edx*4-0x66],ah
  414193:	add    al,BYTE PTR [ecx]
  414195:	add    BYTE PTR [eax],al
  414197:	inc    eax
  414198:	inc    eax
  414199:	add    edx,DWORD PTR [esp+eax*2]
  41419c:	es xchg ecx,eax
  41419e:	push   eax
  41419f:	add    BYTE PTR [eax+0x19],cl
  4141a2:	add    BYTE PTR [ecx],0x20
  4141a5:	add    al,0x5
  4141a7:	mov    al,BYTE PTR [edi]
  4141a9:	or     al,0x2
  4141ab:	addr16 adc al,0x22
  4141ae:	nop
  4141af:	or     BYTE PTR [edx],ah
  4141b1:	mov    eax,ds:0x20ea008
  4141b6:	add    BYTE PTR [eax],dl
  4141b8:	add    al,0x1
  4141ba:	mov    DWORD PTR [ebp-0x57ff73bf],eax
  4141c0:	or     DWORD PTR [edx-0x7eafff00],eax
  4141c6:	add    DWORD PTR [eax],esp
  4141c8:	push   0x5582006a
  4141cd:	or     al,0x2
  4141cf:	xchg   BYTE PTR [ecx+0x2],al
  4141d2:	mov    es,ecx
  4141d4:	jo     0x4141e6
  4141d6:	xor    BYTE PTR fs:[eax],cl
  4141d9:	or     DWORD PTR [edx],ebp
  4141db:	add    ah,BYTE PTR [eax]
  4141dd:	adc    BYTE PTR [ecx],ch
  4141df:	add    BYTE PTR [eax],cl
  4141e1:	rol    BYTE PTR [ecx],0x80
  4141e4:	and    al,0x19
  4141e6:	push   edx
  4141e7:	sub    DWORD PTR [eax+0x0],edi
  4141ea:	add    BYTE PTR [edx-0x48],ch
  4141ed:	lods   eax,DWORD PTR ds:[esi]
  4141ee:	and    eax,0xd5925386
  4141f3:	or     DWORD PTR [eax+0x42012001],eax
  4141f9:	push   eax
  4141fa:	mov    BYTE PTR [ebx],0x1
  4141fd:	or     BYTE PTR [ebx+eax*2],dl
  414200:	add    al,BYTE PTR [ecx-0x7fff96e0]
  414206:	or     DWORD PTR [eax+0x0],esp
  414209:	and    DWORD PTR [eax],0x11850010
  41420f:	rcl    BYTE PTR [eax+0xc],0x42
  414213:	inc    eax
  414214:	and    BYTE PTR [esi],al
  414216:	loop   0x414218
  414218:	sbb    DWORD PTR [eax+0x2010000],eax
  41421e:	add    BYTE PTR [eax+0xc070a10],al
  414224:	add    BYTE PTR [eax],cl
  414226:	add    DWORD PTR [ecx*2+0xa2c4848],0x521888
  414231:	and    al,0x2a
  414233:	or     BYTE PTR [eax+0x28],dh
  414236:	add    eax,0x920800
  41423b:	data16 or BYTE PTR [esi],al
  41423e:	mov    al,ds:0xb99700
  414243:	pusha  
  414244:	push   eax
  414245:	add    al,0x20
  414247:	push   esp
  414248:	add    edx,DWORD PTR [eax]
  41424a:	add    al,0xb
  41424c:	and    al,0x84
  41424e:	or     bh,BYTE PTR [eax+eiz*4+0x52]
  414252:	add    al,BYTE PTR [ecx-0x5e]
  414255:	inc    esi
  414256:	or     BYTE PTR [eax+0x41400924],al
  41425c:	add    DWORD PTR [edx+0x2b899316],edx
  414262:	pop    ebx
  414263:	out    0x14,al
  414265:	push   0x40805a31
  41426a:	ret    
  41426b:	or     eax,DWORD PTR [edx]
  41426d:	nop
  41426e:	and    al,0x28
  414270:	push   cs
  414271:	add    BYTE PTR [edx],al
  414273:	sbb    BYTE PTR [ecx],0x0
  414276:	inc    eax
  414277:	shl    al,0x40
  41427a:	inc    ecx
  41427b:	and    DWORD PTR [esi],eax
  41427d:	xor    DWORD PTR [edx+0x20],eax
  414280:	xor    al,0x1
  414282:	push   edx
  414283:	add    BYTE PTR [ebp+0x1022e125],al
  414289:	add    al,0x42
  41428b:	ret    0x405e
  41428e:	adc    eax,DWORD PTR [eax+0x2]
  414291:	mov    BYTE PTR [eax+0x69008712],al
  414297:	or     DWORD PTR [edx],ecx
  414299:	add    BYTE PTR [ecx],0x19
  41429c:	or     dh,BYTE PTR [eax]
  41429e:	and    eax,0x3a980010
  4142a3:	add    DWORD PTR [eax],eax
  4142a5:	adc    eax,0x10b50091
  4142aa:	mov    WORD PTR [eax-0x66],es
  4142ad:	and    al,al
  4142af:	rcl    DWORD PTR [edi+edx*8],0xc1
  4142b3:	popa   
  4142b4:	cwde   
  4142b5:	inc    eax
  4142b6:	bound  ecx,QWORD PTR [ebx]
  4142b8:	add    BYTE PTR [edx],al
  4142ba:	mov    eax,es
  4142bc:	rol    BYTE PTR [edx+0x2],0x0
  4142c0:	add    DWORD PTR [ecx],eax
  4142c2:	or     DWORD PTR [edi],esp
  4142c4:	inc    ecx
  4142c5:	mov    BYTE PTR [edx-0x20],ch
  4142c8:	inc    ebx
  4142c9:	nop
  4142ca:	adc    BYTE PTR [esp+0x2],0x10
  4142cf:	test   BYTE PTR [eax+0x24004470],ah
  4142d5:	or     BYTE PTR [ecx],al
  4142d7:	mov    ss,WORD PTR [eax]
  4142d9:	sbb    BYTE PTR gs:[ebx+ecx*1+0x41],dl
  4142de:	pusha  
  4142df:	mov    BYTE PTR [ecx],cl
  4142e1:	ret    0x8100
  4142e4:	add    eax,DWORD PTR [ebp+0x6022108]
  4142ea:	and    BYTE PTR [eax+0x10],ah
  4142ed:	and    eax,DWORD PTR [eax+ecx*4]
  4142f0:	(bad)  
  4142f1:	dec    eax
  4142f2:	add    DWORD PTR [ebx+0x0],ebp
  4142f5:	inc    edx
  4142f6:	xor    BYTE PTR [eax],al
  4142f8:	push   ecx
  4142f9:	adc    DWORD PTR [eax],ebx
  4142fb:	add    BYTE PTR [eax+eax*1+0x0],al
  4142ff:	test   al,0xbf
  414301:	or     BYTE PTR [eax],al
  414303:	scas   al,BYTE PTR es:[edi]
  414304:	and    BYTE PTR [ebx+0x1],ah
  414307:	xor    BYTE PTR [ebx],dl
  414309:	in     eax,dx
  41430a:	sub    cl,BYTE PTR [eax]
  41430c:	adc    BYTE PTR [eax],ch
  41430e:	and    edx,DWORD PTR [ecx]
  414310:	push   cs
  414311:	adc    dl,BYTE PTR [eax]
  414313:	inc    ecx
  414314:	add    eax,0x2200042
  414319:	adc    eax,DWORD PTR [eax]
  41431b:	push   eax
  41431c:	cmp    DWORD PTR [eax],esp
  41431e:	push   es
  41431f:	adc    al,0xe0
  414321:	add    BYTE PTR [edx+ecx*1+0xc],ch
  414325:	add    BYTE PTR [edx],bl
  414327:	add    al,BYTE PTR fs:[eax-0x33]
  41432b:	or     al,0x4a
  41432d:	in     al,0x40
  41432f:	inc    eax
  414330:	adc    ecx,DWORD PTR [edx]
  414332:	inc    eax
  414333:	add    BYTE PTR [eax-0x80],0x20
  414337:	jo     0x414389
  414339:	add    al,0x98
  41433b:	add    ecx,DWORD PTR [eax]
  41433d:	and    DWORD PTR [eax],0xc
  414340:	inc    eax
  414341:	inc    edx
  414342:	add    DWORD PTR [esi],eax
  414344:	inc    eax
  414345:	xor    DWORD PTR [eax+eiz*1],edx
  414348:	mov    al,ds:0x40100dc0
  41434d:	adc    DWORD PTR [eax-0x5f63fc78],eax
  414353:	pop    edx
  414354:	adc    cl,BYTE PTR [eax+edx*2]
  414357:	add    BYTE PTR [ecx-0x7dfbaed8],cl
  41435d:	or     al,0x84
  41435f:	inc    eax
  414360:	add    DWORD PTR [ecx],ebp
  414362:	adc    BYTE PTR [ecx+ecx*2+0x31],ah
  414366:	or     cl,BYTE PTR [edx+0x1c580112]
  41436c:	add    eax,0x7002a08
  414371:	jo     0x414377
  414373:	add    ah,BYTE PTR [eax+eax*4-0x7cf7eff7]
  41437a:	or     edx,DWORD PTR [ecx]
  41437c:	and    eax,eax
  41437e:	add    DWORD PTR [ecx+0x84c4c],esi
  414384:	sub    esp,DWORD PTR [eax]
  414386:	inc    esp
  414387:	add    BYTE PTR [eax-0x67edeb80],cl
  41438d:	add    BYTE PTR [eax],al
  41438f:	sbb    BYTE PTR [eax+0x27001510],ah
  414395:	push   edx
  414396:	and    cl,BYTE PTR [ebx]
  414398:	ins    DWORD PTR es:[edi],dx
  414399:	inc    eax
  41439a:	sub    DWORD PTR [eax+edx*1],edx
  41439d:	inc    esp
  41439e:	add    BYTE PTR [eax],al
  4143a0:	pop    ss
  4143a1:	or     BYTE PTR [edx],bh
  4143a3:	add    BYTE PTR [esi],al
  4143a5:	cmp    DWORD PTR [ecx+ecx*2],esi
  4143a8:	add    BYTE PTR [ebp-0x3e],cl
  4143ab:	add    ah,BYTE PTR [edx+eax*4]
  4143ae:	or     eax,ecx
  4143b0:	or     DWORD PTR [eax],eax
  4143b2:	add    cl,BYTE PTR [esi]
  4143b4:	adc    BYTE PTR ds:0x85a6041c,dh
  4143ba:	inc    edx
  4143bb:	add    al,0x42
  4143bd:	and    BYTE PTR [eax],ah
  4143bf:	add    BYTE PTR ds:0x93012008,bl
  4143c5:	add    DWORD PTR [eax],edx
  4143c7:	add    BYTE PTR [eax],dl
  4143c9:	or     BYTE PTR [eax+ecx*1],al
  4143cc:	inc    eax
  4143cd:	gs cmp eax,edi
  4143d0:	mov    ds:0x12e20002,al
  4143d5:	adc    BYTE PTR [eax],ah
  4143d7:	adc    dl,al
  4143d9:	sub    BYTE PTR [ecx-0x7f758b70],dl
  4143df:	add    BYTE PTR [eax],dl
  4143e1:	and    eax,DWORD PTR [eax-0x74]
  4143e4:	add    BYTE PTR [edx],al
  4143e6:	add    al,0x19
  4143e8:	inc    esp
  4143e9:	add    BYTE PTR [ecx+0x1026a100],dh
  4143ef:	rol    BYTE PTR [eax+0x48],1
  4143f2:	add    al,0x8
  4143f4:	pop    eax
  4143f5:	shl    BYTE PTR [edx-0x579eeabc],cl
  4143fb:	add    DWORD PTR [ecx+eax*1+0x188a0801],eax
  414402:	sbb    al,0x4
  414404:	inc    eax
  414405:	adc    al,0x0
  414407:	and    BYTE PTR [eax],dl
  414409:	inc    esp
  41440a:	add    DWORD PTR [ecx+0xc152040],esi
  414410:	add    ah,BYTE PTR [eax+0x18]
  414413:	add    al,BYTE PTR [eax]
  414415:	sub    BYTE PTR [eax],al
  414417:	add    DWORD PTR [ecx],esi
  414419:	push   ss
  41441a:	push   edx
  41441b:	loopne 0x4143be
  41441d:	mov    cl,0x0
  41441f:	add    al,0x22
  414421:	add    al,0x2c
  414423:	adc    al,BYTE PTR [eax]
  414425:	add    ch,al
  414427:	add    al,0x80
  414429:	adc    BYTE PTR [eax+0x372c0185],al
  41442f:	and    cl,al
  414431:	mov    al,ds:0x20502500
  414436:	adc    dl,BYTE PTR ds:0x30508c0c
  41443c:	adc    DWORD PTR [eax],ebx
  41443e:	inc    edx
  41443f:	or     DWORD PTR [eax-0x60],edx
  414442:	adc    BYTE PTR [eax+ecx*1],dl
  414445:	adc    al,0x5
  414447:	add    al,0x0
  414449:	and    al,0x81
  41444b:	adc    BYTE PTR [esp+ecx*2],al
  41444e:	adc    BYTE PTR [eax+edx*1],al
  414451:	test   al,0x40
  414453:	or     al,BYTE PTR [edx-0x7dceeafc]
  414459:	push   eax
  41445a:	add    BYTE PTR [ecx],al
  41445c:	pop    eax
  41445d:	or     BYTE PTR [edi],dh
  41445f:	dec    ecx
  414460:	and    BYTE PTR [ecx+ecx*2],0x3
  414464:	adc    BYTE PTR [eax],dl
  414466:	add    bl,BYTE PTR [eax+0x1]
  414469:	dec    ecx
  41446a:	test   eax,0x4106820
  41446f:	and    al,0x83
  414471:	rol    BYTE PTR [edx],0x56
  414474:	into   
  414475:	inc    ecx
  414476:	xor    dl,BYTE PTR [eax]
  414478:	and    BYTE PTR [eax],al
  41447a:	add    DWORD PTR [ecx],eax
  41447c:	inc    ecx
  41447d:	push   0x402a5a44
  414482:	inc    esp
  414483:	adc    DWORD PTR [ecx],eax
  414485:	test   BYTE PTR [eax],al
  414487:	add    BYTE PTR [eax],dl
  414489:	call   0x84a750f
  41448e:	inc    edx
  41448f:	adc    DWORD PTR [ecx+0x2],ebp
  414492:	pop    edx
  414493:	and    DWORD PTR [ecx+eax*1],eax
  414496:	inc    eax
  414497:	add    BYTE PTR [esi],ah
  414499:	xor    al,BYTE PTR [eax+eax*1+0x0]
  41449d:	adc    eax,DWORD PTR [edx+0x34]
  4144a0:	add    BYTE PTR ds:0x24cb014,al
  4144a6:	add    dh,BYTE PTR [eax]
  4144a8:	push   eax
  4144a9:	call   0x1004:0x81065110
  4144b0:	add    al,0x80
  4144b2:	mov    WORD PTR [esp+eax*1+0x48],es
  4144b6:	and    eax,0x10120400
  4144bb:	or     BYTE PTR [eax],al
  4144bd:	inc    eax
  4144be:	xor    al,0xa
  4144c0:	mov    al,ds:0x10444238
  4144c5:	add    DWORD PTR [eax],edx
  4144c7:	pusha  
  4144c8:	dec    eax
  4144c9:	and    al,BYTE PTR [eax+0x2234572]
  4144cf:	push   edx
  4144d0:	inc    eax
  4144d1:	adc    al,0x84
  4144d3:	pusha  
  4144d4:	or     al,al
  4144d6:	xchg   BYTE PTR [eax],cl
  4144d8:	inc    eax
  4144d9:	fimul  DWORD PTR [esi-0x3e]
  4144dc:	and    DWORD PTR [eax],ecx
  4144de:	add    BYTE PTR [ecx-0x7c],al
  4144e1:	add    al,0x30
  4144e3:	cmp    BYTE PTR [edx],ah
  4144e5:	inc    esi
  4144e6:	sbb    al,BYTE PTR [eax+0x2]
  4144e9:	mov    al,ds:0x40488268
  4144ee:	dec    esp
  4144ef:	inc    esp
  4144f0:	inc    esp
  4144f1:	pusha  
  4144f2:	add    BYTE PTR [eax],0x20
  4144f5:	mov    al,ds:0xe4aa0842
  4144fa:	adc    BYTE PTR [edx+0x42],ah
  4144fd:	test   BYTE PTR [eax+eax*1],al
  414500:	inc    edx
  414501:	or     al,BYTE PTR fs:[eax+ecx*1-0x4a7fd7d6]
  414509:	enter  0x1008,0x82
  41450d:	adc    BYTE PTR [ecx+0x9496020],al
  414513:	and    BYTE PTR [eax],0x18
  414516:	adc    al,bh
  414518:	and    BYTE PTR [eax+0x448060a6],al
  41451e:	xor    BYTE PTR [ecx],al
  414520:	mov    BYTE PTR [eax+0x30],dl
  414523:	or     DWORD PTR [ecx],edx
  414525:	add    eax,0x12942c0
  41452a:	and    BYTE PTR [ecx],dl
  41452c:	add    BYTE PTR [eax-0x6c],al
  41452f:	adc    BYTE PTR [eax+0x1224810],al
  414535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414536:	pop    esp
  414537:	push   eax
  414538:	adc    al,BYTE PTR ds:0x1a242020
  41453e:	inc    eax
  41453f:	or     al,0x4b
  414541:	adc    BYTE PTR [edx+eiz*2+0x5],al
  414545:	cwde   
  414546:	xchg   edx,eax
  414547:	inc    eax
  414548:	xor    BYTE PTR [eax],dl
  41454a:	add    DWORD PTR [eax],ebx
  41454c:	mov    cl,0x4c
  41454e:	add    al,0x31
  414550:	or     BYTE PTR [eax+0x11],cl
  414553:	push   ecx
  414554:	push   ecx
  414555:	adc    BYTE PTR [eax],dl
  414557:	test   BYTE PTR [eax+0x41080408],al
  41455d:	add    DWORD PTR [ebx],esp
  41455f:	adc    al,dh
  414561:	nop
  414562:	adc    BYTE PTR [edx+eiz*2+0x4],al
  414566:	adc    al,BYTE PTR [eax+eiz*1]
  414569:	inc    esp
  41456a:	add    dl,ah
  41456c:	rol    BYTE PTR ds:0x101c0829,cl
  414572:	add    BYTE PTR [eax],dl
  414574:	test   BYTE PTR ds:0x80064941,cl
  41457a:	adc    BYTE PTR [ecx+0x2],al
  41457d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457e:	and    al,BYTE PTR [eax+0x222c0000]
  414584:	es or  al,al
  414587:	stos   BYTE PTR es:[edi],al
  414588:	xchg   BYTE PTR [esi],al
  41458a:	add    al,0x9
  41458c:	rcl    BYTE PTR [edx],0xe1
  41458f:	add    DWORD PTR [ebx+eax*2],ecx
  414592:	add    cl,al
  414594:	add    BYTE PTR [ecx],dl
  414596:	add    BYTE PTR [eax+eiz*2],al
  414599:	and    BYTE PTR [ebx],al
  41459b:	adc    BYTE PTR [edx+0x10002a00],ah
  4145a1:	and    BYTE PTR [esi+0x41],ah
  4145a4:	xchg   edx,eax
  4145a5:	add    al,0x20
  4145a7:	add    edx,DWORD PTR [edx]
  4145a9:	inc    eax
  4145aa:	xor    BYTE PTR [ecx],dl
  4145ac:	inc    eax
  4145ad:	lea    eax,[ebp+eax*4+0x11]
  4145b1:	adc    al,bl
  4145b3:	xchg   ebp,eax
  4145b4:	test   DWORD PTR [eax-0x5d5eeffc],eax
  4145ba:	inc    edx
  4145bb:	xor    BYTE PTR [ecx-0x7e],al
  4145be:	add    BYTE PTR [edx+0x542008],al
  4145c4:	and    BYTE PTR [eax+0x2400813b],bl
  4145ca:	add    BYTE PTR [eax],0xa
  4145cd:	and    cl,ah
  4145cf:	sub    DWORD PTR [eax+0x41604080],eax
  4145d5:	add    dl,cl
  4145d7:	sbb    eax,0x3c2208
  4145dc:	xchg   BYTE PTR [eax+0x41],al
  4145df:	mov    BYTE PTR es:[ebx+0x5a0859a8],al
  4145e6:	and    DWORD PTR [eax],esi
  4145e8:	jb     0x4145ea
  4145ea:	inc    ecx
  4145eb:	push   eax
  4145ec:	(bad)  
  4145ee:	or     BYTE PTR [esi],0xa9
  4145f1:	add    BYTE PTR [edx+0x3],cl
  4145f4:	and    DWORD PTR [eax+edi*2],0x1880060b
  4145fb:	and    dl,BYTE PTR [eax]
  4145fd:	xor    ah,BYTE PTR [ecx+edx*1]
  414600:	add    al,BYTE PTR [esi+0x9804888]
  414606:	adc    eax,0xa105c400
  41460b:	sbb    dl,BYTE PTR [eax+0x12540108]
  414611:	add    DWORD PTR [esi],0xa0157863
  414617:	and    DWORD PTR [eax],esp
  414619:	pop    ds
  41461a:	or     BYTE PTR [eax+ecx*1],cl
  41461d:	xor    al,0x4e
  41461f:	shl    BYTE PTR [esi-0x7f],0x4c
  414623:	add    BYTE PTR [eax],ah
  414625:	inc    ebp
  414626:	test   BYTE PTR [eax],al
  414628:	xchg   DWORD PTR [ecx],eax
  41462a:	or     al,0x81
  41462c:	mov    al,ds:0x51c9516
  414631:	adc    BYTE PTR [eax],ah
  414633:	inc    eax
  414634:	adc    esp,DWORD PTR [eax]
  414636:	inc    edx
  414637:	loopne 0x41464a
  414639:	cwde   
  41463a:	cs pop es
  41463c:	add    DWORD PTR [eax+0x80007],esp
  414642:	add    DWORD PTR [eax],ecx
  414644:	ror    BYTE PTR [ecx+0x700b5280],0x8a
  41464b:	sub    eax,DWORD PTR ds:0x101e4005
  414651:	or     BYTE PTR [eax],al
  414653:	add    BYTE PTR [edx],al
  414655:	or     DWORD PTR [eax],0x3cc0b801
  41465b:	inc    edx
  41465c:	and    BYTE PTR [eax+0x3c],al
  41465f:	add    DWORD PTR [eax],edx
  414661:	pop    es
  414662:	jg     0x41468c
  414664:	inc    eax
  414665:	adc    BYTE PTR [eax+0x659c082],0x10
  41466c:	dec    ecx
  41466d:	nop
  41466e:	xchg   BYTE PTR [esi],dl
  414670:	shl    BYTE PTR [eax],0xc0
  414673:	xchg   esi,eax
  414674:	add    BYTE PTR ds:0x4104133,ch
  41467a:	add    DWORD PTR [eax],edx
  41467c:	add    BYTE PTR [ebx-0x80],al
  41467f:	xor    DWORD PTR [eax+0x26802442],esp
  414685:	push   es
  414686:	mov    BYTE PTR [eax],0x40
  414689:	or     BYTE PTR [eax],cl
  41468b:	add    BYTE PTR [ecx],ch
  41468d:	mov    eax,ds:0x7304026
  414692:	pop    es
  414693:	pusha  
  414694:	push   ebp
  414695:	dec    eax
  414696:	(bad)  
  414697:	add    al,cl
  414699:	xor    eax,DWORD PTR [eax]
  41469b:	add    BYTE PTR [edx],cl
  41469d:	add    DWORD PTR [ecx],eax
  41469f:	inc    ecx
  4146a0:	adc    BYTE PTR [eax],ch
  4146a2:	and    BYTE PTR [eax+eax*1],al
  4146a5:	inc    ecx
  4146a6:	add    BYTE PTR ds:0x640421,al
  4146ac:	cmp    BYTE PTR [esi],ch
  4146ae:	push   ecx
  4146af:	shl    BYTE PTR [eax],0x40
  4146b2:	inc    eax
  4146b3:	cs add eax,0x923a583
  4146b9:	nop
  4146ba:	pop    eax
  4146bb:	xchg   edx,eax
  4146bc:	and    ch,BYTE PTR [eax+0x90180]
  4146c2:	dec    eax
  4146c3:	or     DWORD PTR ds:0x4081140a,esp
  4146c9:	adc    esi,DWORD PTR [edx]
  4146cb:	adc    DWORD PTR [eax],0x7900200
  4146d1:	adc    BYTE PTR [eax-0x40],al
  4146d4:	call   DWORD PTR ds:0x451d58
  4146da:	xor    BYTE PTR [eax+0x8],0x40
  4146de:	add    BYTE PTR [eax],al
  4146e0:	cmp    al,0x1
  4146e2:	add    eax,DWORD PTR [eax+0x6040001]
  4146e8:	add    ah,0x3
  4146eb:	xchg   ebx,eax
  4146ec:	push   edx
  4146ed:	and    BYTE PTR [eax],al
  4146ef:	or     cl,BYTE PTR [eax+0x1]
  4146f2:	inc    edx
  4146f3:	mov    ds:0x30052bc7,al
  4146f8:	mov    BYTE PTR [eax+eax*1],dl
  4146fb:	and    BYTE PTR [edx],al
  4146fd:	add    dh,BYTE PTR [eax+0x11e40123]
  414703:	or     DWORD PTR [eax],edx
  414705:	add    esp,eax
  414707:	add    DWORD PTR [eax+0x1],esi
  41470a:	nop
  41470b:	and    BYTE PTR [edx*1+0x10800096],0x31
  414713:	xchg   ebx,eax
  414714:	push   es
  414715:	or     BYTE PTR [eax],dl
  414717:	cwde   
  414718:	xor    BYTE PTR [eax],ah
  41471a:	sbb    BYTE PTR [ecx],al
  41471c:	add    dl,0x4a
  41471f:	and    BYTE PTR [eax+0x3404506],al
  414725:	cmp    DWORD PTR [eax],ebx
  414727:	adc    DWORD PTR [eax],0xffffff80
  41472a:	nop
  41472b:	in     al,0x22
  41472d:	inc    eax
  41472e:	pusha  
  41472f:	sbb    al,BYTE PTR [eax]
  414731:	or     BYTE PTR [esp+ebp*1],ah
  414734:	push   es
  414735:	add    BYTE PTR [eax],0xc0
  414738:	inc    eax
  414739:	adc    al,al
  41473b:	adc    DWORD PTR [ecx+eax*2],0x48a01900
  414742:	add    al,BYTE PTR [ecx-0x50]
  414745:	inc    eax
  414746:	mov    al,BYTE PTR [edx]
  414748:	add    BYTE PTR [eax],al
  41474a:	add    al,0x50
  41474c:	push   edi
  41474d:	or     BYTE PTR [ecx],cl
  41474f:	xchg   ebp,eax
  414750:	or     BYTE PTR [eax-0x68],al
  414753:	or     BYTE PTR [eax*1+0x56765002],cl
  41475a:	sbb    dl,BYTE PTR [eax+0xe]
  41475d:	and    BYTE PTR [edi+esi*1],cl
  414760:	inc    eax
  414761:	xchg   BYTE PTR [ebx+eiz*1],al
  414764:	pop    ebp
  414765:	in     al,dx
  414766:	lock rol BYTE PTR [edx],cl
  414769:	mov    ds:0x20f28d80,eax
  41476e:	add    BYTE PTR [ebx],cl
  414770:	or     BYTE PTR [eax+eax*4],al
  414773:	add    BYTE PTR [eax+0x44250142],al
  414779:	inc    eax
  41477a:	and    al,0x1
  41477c:	inc    ecx
  41477d:	enter  0x600,0xc
  414781:	add    BYTE PTR [ebx-0x68],al
  414784:	add    DWORD PTR [edx+eax*8],ebp
  414787:	and    al,0x42
  414789:	and    BYTE PTR [ecx+0x2],dl
  41478c:	push   esp
  41478d:	xchg   edx,eax
  41478e:	es inc ecx
  414790:	fdiv   st,st(3)
  414792:	add    BYTE PTR [ecx],dl
  414794:	adc    al,0x4
  414796:	lea    ecx,[eax+0x2244cc44]
  41479c:	push   es
  41479d:	dec    eax
  41479e:	add    BYTE PTR [eax],cl
  4147a0:	sbb    BYTE PTR [eax-0x7fedb3bf],al
  4147a6:	add    al,0x19
  4147a8:	adc    al,0x5
  4147aa:	add    DWORD PTR [edx],eax
  4147ac:	mov    al,0x5
  4147ae:	xchg   ebx,eax
  4147af:	add    BYTE PTR [eax],cl
  4147b1:	rol    BYTE PTR ds:0xc0d029d2,0x2
  4147b8:	inc    esp
  4147b9:	add    BYTE PTR [ecx],al
  4147bb:	inc    edx
  4147bc:	add    eax,0x20032205
  4147c1:	xor    BYTE PTR [eax],al
  4147c3:	add    BYTE PTR [eax],al
  4147c5:	add    eax,0x68100985
  4147ca:	add    dh,dl
  4147cc:	add    BYTE PTR [eax],0x91
  4147cf:	and    al,0x88
  4147d1:	add    ah,BYTE PTR [eax]
  4147d3:	push   0x4a0f00
  4147d8:	add    BYTE PTR [eax],al
  4147da:	adc    BYTE PTR [eax-0x7fd9bfd0],dh
  4147e0:	inc    ebx
  4147e1:	and    bh,BYTE PTR [esi]
  4147e3:	pushf  
  4147e4:	pop    esp
  4147e5:	inc    eax
  4147e6:	adc    DWORD PTR [eax],eax
  4147e8:	push   eax
  4147e9:	dec    ecx
  4147ea:	and    DWORD PTR [ecx+0x9121],ecx
  4147f0:	test   BYTE PTR [eax+0xc110130],bl
  4147f6:	adc    BYTE PTR [ecx+eax*1],0x88
  4147fa:	mov    al,ds:0x2f8a0026
  4147ff:	sbb    DWORD PTR [ebx],eax
  414801:	adc    al,al
  414803:	arpl   WORD PTR [eax+0x152b4602],ax
  414809:	lods   al,BYTE PTR ds:[esi]
  41480a:	fiadd  DWORD PTR [edx]
  41480c:	and    BYTE PTR [eax+0x428390a8],dl
  414812:	add    bh,BYTE PTR [ecx]
  414814:	and    BYTE PTR [eax],ch
  414816:	add    al,0x21
  414818:	cwde   
  414819:	add    BYTE PTR [ebx+0x9],al
  41481c:	add    BYTE PTR [esi+0x49],dl
  41481f:	inc    ecx
  414820:	pusha  
  414821:	mov    BYTE PTR [eax],bh
  414823:	add    DWORD PTR [eax],esp
  414825:	inc    edx
  414826:	add    BYTE PTR [ecx-0x40],al
  414829:	adc    al,BYTE PTR [eax]
  41482b:	ret    0x3444
  41482e:	add    al,BYTE PTR [eax]
  414830:	xor    BYTE PTR [eax+0x11000b6],0x73
  414837:	inc    ebx
  414838:	add    BYTE PTR [edx],cl
  41483a:	inc    edx
  41483b:	add    BYTE PTR [edx+0x38],al
  41483e:	and    al,BYTE PTR [eax]
  414840:	add    DWORD PTR [edx],0xffffff86
  414843:	sbb    BYTE PTR [eax],dl
  414845:	inc    eax
  414846:	add    BYTE PTR [eax+0x24],bl
  414849:	add    BYTE PTR [eax],al
  41484b:	shl    BYTE PTR [eax],0x2c
  41484e:	mov    al,ds:0x4618890c
  414853:	add    DWORD PTR [ebx+0x6],ebp
  414856:	sub    BYTE PTR [eax],al
  414858:	add    al,BYTE PTR [eax+0x40050225]
  41485e:	mov    ss,WORD PTR [edx+ecx*2+0x40e80100]
  414865:	add    al,BYTE PTR [esi]
  414867:	and    BYTE PTR [eax],ah
  414869:	adc    DWORD PTR [ebx],0xb0a33081
  41486f:	sbb    al,0x44
  414871:	and    BYTE PTR [eax+eiz*4+0x11408819],dl
  414878:	add    cl,BYTE PTR [eax+eax*1+0x46910258]
  41487f:	add    DWORD PTR [eax+0x522e5201],eax
  414885:	add    BYTE PTR [eax+0x45],al
  414888:	stos   DWORD PTR es:[edi],eax
  414889:	or     DWORD PTR [ecx],ecx
  41488b:	xchg   dl,al
  41488d:	xchg   edx,eax
  41488e:	add    ah,BYTE PTR [eax]
  414890:	add    BYTE PTR [eax],dl
  414892:	xchg   esp,eax
  414893:	or     BYTE PTR [ebx],cl
  414895:	mov    al,BYTE PTR [eax+eax*2]
  414898:	add    BYTE PTR [ecx+eax*1+0x14],0x13
  41489d:	and    BYTE PTR [ecx+0x12],al
  4148a0:	add    al,ah
  4148a2:	push   ecx
  4148a3:	adc    al,BYTE PTR [eax-0x5fcfc000]
  4148a9:	add    BYTE PTR [eax+0x8221000],0x20
  4148b0:	add    al,0xbc
  4148b2:	add    BYTE PTR [edx+edx*4],cl
  4148b5:	data16 rol BYTE PTR [eax],cl
  4148b8:	loope  0x41490a
  4148ba:	or     BYTE PTR [ebx+ecx*4],0x53
  4148be:	xchg   esi,eax
  4148bf:	add    BYTE PTR [eax+0x20],0x1
  4148c3:	adc    DWORD PTR [eax+eax*1],0xffffff8c
  4148c7:	add    DWORD PTR [eax+0x29],eax
  4148ca:	dec    edi
  4148cb:	sub    DWORD PTR [ecx],ebp
  4148cd:	mov    al,0x92
  4148cf:	add    ah,BYTE PTR [eax+0x2c00400]
  4148d5:	mov    dl,0x90
  4148d7:	add    BYTE PTR [eax],cl
  4148d9:	mov    eax,ds:0xdc118d27
  4148de:	loop   0x4148f3
  4148e0:	add    eax,DWORD PTR [eax+eax*4]
  4148e3:	inc    esi
  4148e4:	sbb    BYTE PTR [esi],0x62
  4148e7:	inc    eax
  4148e8:	add    al,BYTE PTR ds:0x1420b009
  4148ee:	add    DWORD PTR [edx],0x1841040
  4148f4:	sbb    al,0x23
  4148f6:	pop    eax
  4148f7:	add    BYTE PTR [eax],al
  4148f9:	jo     0x41494b
  4148fb:	inc    eax
  4148fc:	adc    eax,0x2400100
  414901:	add    BYTE PTR [ecx],al
  414903:	aam    0x10
  414905:	add    BYTE PTR [edx],ah
  414907:	dec    eax
  414908:	add    DWORD PTR [edx],ebx
  41490a:	add    al,0x40
  41490c:	or     BYTE PTR [ebx+eiz*2],0x27
  414910:	adc    BYTE PTR [eax],al
  414912:	adc    DWORD PTR [ebx-0x2d5ffd00],0x12204050
  41491c:	test   BYTE PTR [eax+0x2],dl
  41491f:	or     BYTE PTR [ecx],0x44
  414922:	adc    BYTE PTR [edx+0x28c10843],0x46
  414929:	add    al,BYTE PTR [eax]
  41492b:	adc    eax,0xb0020a12
  414930:	adc    BYTE PTR [eax],ah
  414932:	dec    ebx
  414933:	rol    BYTE PTR [eax+0xb0b10],1
  414939:	and    BYTE PTR [ebx],ah
  41493b:	and    al,0x20
  41493d:	add    dl,BYTE PTR [ecx+0x44]
  414940:	and    DWORD PTR [ebx],eax
  414942:	ret    0x229a
  414945:	mov    ecx,0x74812010
  41494a:	jmp    0x2c:0x1d045137
  414951:	or     al,0x4a
  414953:	push   cs
  414954:	and    BYTE PTR [edi],0x55
  414957:	enter  0x4381,0x70
  41495b:	push   esp
  41495c:	adc    BYTE PTR [eax],0x58
  41495f:	xchg   BYTE PTR [esi],dl
  414961:	add    BYTE PTR [ecx],ah
  414963:	ins    BYTE PTR es:[edi],dx
  414964:	dec    eax
  414965:	inc    edx
  414966:	add    esi,DWORD PTR [eax]
  414968:	xor    BYTE PTR [ecx],al
  41496a:	add    BYTE PTR [esi-0x1ebd7fc0],al
  414970:	push   ebp
  414971:	mov    eax,ds:0x820408a5
  414976:	loope  0x4149d9
  414978:	inc    edi
  414979:	inc    esp
  41497a:	or     BYTE PTR [eax],0x0
  41497d:	adc    BYTE PTR [eax+edx*4+0x40100],ah
  414984:	adc    BYTE PTR [edx],cl
  414986:	adc    BYTE PTR [eax],ah
  414988:	adc    al,0x88
  41498a:	and    al,0x80
  41498c:	rol    DWORD PTR [edx+0x40],0x60
  414990:	icebp  
  414991:	xor    al,al
  414993:	or     BYTE PTR [edx],al
  414995:	inc    eax
  414996:	les    ecx,FWORD PTR [ecx]
  414998:	add    al,BYTE PTR [eax]
  41499a:	dec    edx
  41499b:	add    cl,BYTE PTR [ecx+0x47094820]
  4149a1:	sub    BYTE PTR [edx],dh
  4149a3:	or     BYTE PTR [edx+0x0],dl
  4149a6:	or     BYTE PTR [ecx],al
  4149a8:	loopne 0x4149ad
  4149aa:	add    BYTE PTR [ecx],bh
  4149ac:	mov    DWORD PTR ds:0x4100e086,edx
  4149b2:	cmp    BYTE PTR [eax],al
  4149b4:	sub    BYTE PTR [eax+0x70208056],ch
  4149ba:	inc    eax
  4149bb:	add    BYTE PTR [eax],0x93
  4149be:	inc    eax
  4149bf:	push   cs
  4149c0:	rol    DWORD PTR [ecx],0x4
  4149c3:	inc    edx
  4149c4:	add    al,0x8f
  4149c6:	mov    BYTE PTR [ebx],al
  4149c8:	push   eax
  4149c9:	and    BYTE PTR [eax],al
  4149cb:	add    BYTE PTR ss:[esi],ch
  4149ce:	shr    BYTE PTR [eax],0x50
  4149d1:	test   DWORD PTR [eax+0x22324d20],edx
  4149d7:	and    al,BYTE PTR [ecx]
  4149d9:	mov    al,ds:0x10516180
  4149de:	mov    dl,BYTE PTR [ebx]
  4149e0:	add    al,al
  4149e2:	adc    BYTE PTR [eax],al
  4149e4:	add    DWORD PTR [edx],ebp
  4149e6:	adc    bl,BYTE PTR [ecx+eax*1]
  4149e9:	xor    BYTE PTR [eax],bl
  4149eb:	lea    ebp,[esi+0x1429494]
  4149f1:	add    BYTE PTR [ecx],dl
  4149f3:	test   eax,0x8010025
  4149f8:	cmp    BYTE PTR [eax+0x4064008a],dl
  4149fe:	and    BYTE PTR ds:0x1a2490f4,0xd0
  414a05:	xor    BYTE PTR [eax],ah
  414a07:	rcl    BYTE PTR [edi+eax*2+0x0],0x8
  414a0c:	mov    DWORD PTR [eax],eax
  414a0e:	xor    DWORD PTR [eax],ecx
  414a10:	je     0x414994
  414a12:	pusha  
  414a13:	pop    es
  414a14:	or     BYTE PTR [ecx+0x0],bl
  414a17:	adc    cl,al
  414a19:	xor    al,0x1
  414a1b:	adc    DWORD PTR [edx],eax
  414a1d:	add    BYTE PTR [eax],al
  414a1f:	xchg   esp,eax
  414a20:	ret    
  414a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a22:	and    al,BYTE PTR [edx+0x12ea02c0]
  414a28:	pop    esp
  414a29:	lock dec eax
  414a2b:	les    eax,FWORD PTR [edx+0x820605]
  414a31:	dec    ecx
  414a32:	or     BYTE PTR [eax],ah
  414a34:	or     BYTE PTR [eax],dl
  414a36:	push   ecx
  414a37:	or     BYTE PTR [esp+ecx*4-0x74],0x28
  414a3c:	and    eax,0x48500110
  414a41:	push   ebp
  414a42:	sub    DWORD PTR [esi],0x13482000
  414a48:	dec    eax
  414a49:	sbb    DWORD PTR [edx],ebp
  414a4b:	inc    eax
  414a4c:	or     BYTE PTR [edx],al
  414a4e:	bound  ebx,QWORD PTR [edx+0x8]
  414a51:	and    DWORD PTR [eax+0x2],esp
  414a54:	adc    BYTE PTR [edx],al
  414a56:	add    BYTE PTR [esp+eax*4+0x61],al
  414a5a:	daa    
  414a5b:	add    ch,BYTE PTR [ebx-0x1f]
  414a5e:	retf   
  414a5f:	and    BYTE PTR [edx+0x2a812030],dl
  414a65:	xor    DWORD PTR [eax],eax
  414a67:	inc    ecx
  414a68:	mov    BYTE PTR [eax],al
  414a6a:	inc    ebx
  414a6b:	cmp    BYTE PTR [eax],al
  414a6d:	adc    eax,DWORD PTR [eax+ebp*1]
  414a70:	inc    esp
  414a71:	add    ah,BYTE PTR [eax]
  414a73:	dec    eax
  414a74:	push   eax
  414a75:	mov    eax,ds:0x4250ab05
  414a7a:	add    BYTE PTR [edx],ch
  414a7c:	fmul   DWORD PTR [eax+eax*2+0x0]
  414a80:	add    al,0x10
  414a82:	add    BYTE PTR [eax],al
  414a84:	push   es
  414a85:	push   eax
  414a86:	pusha  
  414a87:	add    BYTE PTR [eax],al
  414a89:	inc    eax
  414a8a:	add    dl,BYTE PTR [eax]
  414a8c:	dec    eax
  414a8d:	add    BYTE PTR [eax],al
  414a8f:	push   ecx
  414a90:	lea    eax,[ecx]
  414a92:	add    BYTE PTR [eax],0x25
  414a95:	jo     0x414ac2
  414a97:	and    DWORD PTR [eax],esp
  414a99:	add    BYTE PTR [eax],al
  414a9b:	or     BYTE PTR [eax+0x2380108c],0x35
  414aa2:	or     al,0x0
  414aa4:	xor    dl,BYTE PTR [eax]
  414aa6:	or     BYTE PTR [ecx+eax*2],al
  414aa9:	pusha  
  414aaa:	or     BYTE PTR [ecx-0x3afbfdfc],al
  414ab0:	adc    BYTE PTR [ecx],al
  414ab2:	and    BYTE PTR [eax-0x79ed7bfd],al
  414ab8:	sub    eax,0x1398000
  414abd:	adc    eax,DWORD PTR [eax+0x20]
  414ac0:	inc    eax
  414ac1:	or     BYTE PTR [edx-0x77f4df9c],al
  414ac7:	and    al,al
  414ac9:	and    al,0xb
  414acb:	add    BYTE PTR [eax],dh
  414acd:	cdq    
  414ace:	inc    ecx
  414acf:	and    al,0x44
  414ad1:	add    BYTE PTR [eax],al
  414ad3:	inc    esi
  414ad4:	add    edx,DWORD PTR [eax]
  414ad6:	inc    edx
  414ad7:	rcl    BYTE PTR ds:0x41202a68,0xd2
  414ade:	push   es
  414adf:	out    0x13,eax
  414ae1:	inc    ebp
  414ae2:	cwde   
  414ae3:	push   0x30842835
  414ae8:	add    al,0x20
  414aea:	mov    al,ds:0xf020090
  414aef:	add    dl,al
  414af1:	cmp    al,0x4
  414af3:	pop    eax
  414af4:	inc    eax
  414af5:	add    BYTE PTR [edx+0x14380112],al
  414afb:	xor    BYTE PTR [edx],al
  414afd:	add    dl,BYTE PTR [edx]
  414aff:	pop    ecx
  414b00:	pop    ss
  414b01:	add    bh,BYTE PTR [esp]
  414b04:	or     al,0x45
  414b06:	cmp    BYTE PTR ds:0xe0c01202,ah
  414b0c:	rcl    DWORD PTR [ebx-0x79],1
  414b0f:	rcl    BYTE PTR [ebx+0x18],0x21
  414b13:	cwde   
  414b14:	adc    eax,0xbd910072
  414b19:	inc    eax
  414b1a:	inc    eax
  414b1b:	and    BYTE PTR [eax],dl
  414b1d:	adc    BYTE PTR [eax+eax*1],al
  414b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b21:	inc    eax
  414b22:	sbb    BYTE PTR [eax],al
  414b24:	adc    al,0x10
  414b26:	add    BYTE PTR [eax],al
  414b28:	add    BYTE PTR [esi],al
  414b2a:	pop    es
  414b2b:	arpl   WORD PTR [eax+0x608046],ax
  414b31:	adc    al,0x6
  414b33:	add    BYTE PTR [eax+0x48800260],bl
  414b39:	inc    ebx
  414b3a:	add    eax,0x100a6820
  414b3f:	push   ds
  414b40:	call   0x4118:0x49848d00
  414b47:	or     BYTE PTR [eax],ch
  414b49:	and    DWORD PTR [edi],eax
  414b4b:	inc    esp
  414b4c:	sub    BYTE PTR [eax],bh
  414b4e:	or     BYTE PTR [esi-0x3f9ff9af],ch
  414b54:	and    ah,BYTE PTR [edx]
  414b56:	add    BYTE PTR [ecx],al
  414b58:	inc    esp
  414b59:	add    DWORD PTR [eax],esp
  414b5b:	inc    ecx
  414b5c:	test   al,0x63
  414b5e:	adc    edx,eax
  414b60:	inc    eax
  414b61:	add    DWORD PTR [edx+eiz*1],eax
  414b64:	mov    es:0x41022142,al
  414b6a:	add    BYTE PTR [ecx+0x2009285],dl
  414b70:	or     eax,0x4700c644
  414b75:	add    DWORD PTR [eax-0x7efeafc0],eax
  414b7b:	retf   0x2211
  414b7e:	dec    ecx
  414b7f:	add    BYTE PTR [edx+0x10008104],dl
  414b85:	inc    esp
  414b86:	add    BYTE PTR [eax],0x21
  414b89:	adc    dh,al
  414b8b:	and    DWORD PTR [eax],edx
  414b8d:	xor    BYTE PTR [ebp+0x0],al
  414b90:	and    al,dl
  414b92:	mov    ds:0x1004088,al
  414b97:	inc    eax
  414b98:	push   edx
  414b99:	cmp    al,BYTE PTR [eax]
  414b9b:	push   eax
  414b9c:	dec    eax
  414b9d:	sbb    ah,BYTE PTR [ecx]
  414b9f:	add    al,BYTE PTR [eax]
  414ba1:	inc    eax
  414ba2:	hlt    
  414ba3:	or     al,0xa
  414ba5:	add    BYTE PTR [esi],0x91
  414ba8:	aam    0x30
  414baa:	add    BYTE PTR [eax+eax*4-0x74fffefd],al
  414bb1:	push   eax
  414bb2:	adc    eax,DWORD PTR [eax+0x1089400]
  414bb8:	adc    al,BYTE PTR [eax]
  414bba:	add    BYTE PTR [eax+0x2200088],al
  414bc0:	sbb    BYTE PTR [ecx],0x20
  414bc3:	and    bl,cl
  414bc5:	add    BYTE PTR [ecx+0x40],cl
  414bc8:	inc    eax
  414bc9:	shl    DWORD PTR [ebx],0x43
  414bcc:	nop
  414bcd:	adc    BYTE PTR [eax+0x19180042],al
  414bd3:	or     BYTE PTR [eax+ebp*1],bl
  414bd6:	rol    BYTE PTR [edx],1
  414bd8:	mov    al,ds:0x30230ce0
  414bdd:	push   eax
  414bde:	test   BYTE PTR [eax+0x200a012c],dl
  414be4:	and    BYTE PTR [eax-0x78],ch
  414be7:	sbb    eax,0x81184c89
  414bec:	test   BYTE PTR [ecx],al
  414bee:	add    al,BYTE PTR [eax+0x3]
  414bf1:	inc    eax
  414bf2:	inc    eax
  414bf3:	and    al,0x80
  414bf5:	sub    BYTE PTR [eax+0x48201],al
  414bfb:	push   esp
  414bfc:	jo     0x414b85
  414bfe:	inc    ebx
  414bff:	add    DWORD PTR [eax-0x5b],0xe898a044
  414c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c07:	ror    BYTE PTR [eax+0x0],1
  414c0a:	add    BYTE PTR ds:0x10104004,cl
  414c10:	add    BYTE PTR [eax],al
  414c12:	push   ds
  414c13:	and    DWORD PTR [eax],eax
  414c15:	xchg   ecx,eax
  414c16:	add    BYTE PTR [eax+0x21000509],al
  414c1c:	mov    dl,BYTE PTR [eax]
  414c1e:	sbb    ah,BYTE PTR [edx+0x8]
  414c21:	and    BYTE PTR [ebx],dl
  414c23:	sbb    esp,DWORD PTR [eax+0x0]
  414c26:	push   es
  414c27:	push   edx
  414c28:	or     al,0x19
  414c2a:	adc    BYTE PTR [eax+0x58],dh
  414c2d:	inc    eax
  414c2e:	or     al,0x42
  414c30:	and    eax,0x410a803c
  414c35:	adc    al,BYTE PTR [ecx+eax*1]
  414c38:	sbb    al,BYTE PTR [eax+0x28000008]
  414c3e:	add    al,BYTE PTR [edx+eax*1+0x0]
  414c42:	loopne 0x414c9c
  414c44:	dec    esp
  414c45:	sbb    al,0x81
  414c47:	adc    BYTE PTR [ecx+0x8],0x2c
  414c4b:	mov    eax,cr3
  414c4e:	adc    BYTE PTR [eax],ah
  414c50:	add    BYTE PTR [esi],ah
  414c52:	and    al,0x1
  414c54:	inc    eax
  414c55:	and    al,0x1
  414c57:	adc    al,0x38
  414c59:	mov    ds:0x22080034,al
  414c5e:	add    BYTE PTR [edx],al
  414c60:	mov    ds:0x40642c62,al
  414c65:	inc    eax
  414c66:	add    DWORD PTR [esi+eiz*4],esp
  414c69:	add    BYTE PTR [eax+0x0],0x4
  414c6d:	add    al,0x12
  414c6f:	add    BYTE PTR [eax],0x8
  414c72:	and    bh,BYTE PTR [ecx+0x4024490c]
  414c78:	pusha  
  414c79:	xor    bl,BYTE PTR [ecx-0x4f]
  414c7c:	push   ecx
  414c7d:	xchg   BYTE PTR [edx+0x0],cl
  414c80:	add    BYTE PTR [eax+0x41],dh
  414c83:	and    BYTE PTR [eax],0x70
  414c86:	sub    al,ah
  414c88:	push   ecx
  414c89:	add    al,BYTE PTR [ebx]
  414c8b:	popa   
  414c8c:	adc    DWORD PTR [eax],0x0
  414c8f:	or     al,BYTE PTR [esi]
  414c91:	add    cl,BYTE PTR [edx]
  414c93:	push   ecx
  414c94:	and    BYTE PTR cs:[eax],al
  414c97:	sub    DWORD PTR [eax],ebp
  414c99:	and    BYTE PTR [eax+0x0],ah
  414c9c:	add    BYTE PTR [ecx],al
  414c9e:	or     eax,0x53f78b05
  414ca3:	rol    BYTE PTR [eax+0x23],1
  414ca6:	add    BYTE PTR [edx],cl
  414ca8:	adc    DWORD PTR [ecx+0x6],edx
  414cab:	add    BYTE PTR [eax],0x44
  414cae:	pop    es
  414caf:	int    0x34
  414cb1:	sub    BYTE PTR [ecx+edx*4],dl
  414cb4:	add    BYTE PTR [eax],al
  414cb6:	test   al,0x1d
  414cb8:	dec    esp
  414cb9:	nop
  414cba:	and    al,al
  414cbc:	and    al,0xe0
  414cbe:	sub    edx,DWORD PTR [ebx]
  414cc0:	add    ah,BYTE PTR [eax]
  414cc2:	adc    al,0x42
  414cc4:	add    al,0xc4
  414cc6:	add    eax,0xc1186014
  414ccb:	add    DWORD PTR [eax],eax
  414ccd:	push   esp
  414cce:	sub    dh,BYTE PTR [eax+eax*1+0x2]
  414cd2:	adc    al,0x0
  414cd4:	sbb    BYTE PTR [ebx+0x1aab1b44],0x52
  414cdb:	add    BYTE PTR [eax+0x4a],cl
  414cde:	add    DWORD PTR [edx+0x20000017],eax
  414ce4:	or     BYTE PTR [edx],cl
  414ce6:	inc    ecx
  414ce7:	pusha  
  414ce8:	xchg   ecx,eax
  414ce9:	xchg   ebp,eax
  414cea:	rcl    BYTE PTR [esp],0x14
  414cee:	and    BYTE PTR [ecx],0x1
  414cf1:	add    eax,0x2021e4
  414cf6:	movhps xmm1,QWORD PTR fs:[esi]
  414cfa:	xor    BYTE PTR [eax+0x4],bl
  414cfd:	cwde   
  414cfe:	sbb    bl,BYTE PTR [eax]
  414d00:	mov    al,ds:0x8a020300
  414d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d06:	inc    edx
  414d07:	add    BYTE PTR [eax],bl
  414d09:	mov    esi,0x213240a2
  414d0e:	mov    ds:0xbca00088,al
  414d13:	lock jno 0x414ca8
  414d16:	sbb    al,BYTE PTR [eax]
  414d18:	or     BYTE PTR [eax],al
  414d1a:	shl    DWORD PTR [eax],0xc0
  414d1d:	rol    BYTE PTR [edx],0x8
  414d20:	inc    eax
  414d21:	jno    0x414cbb
  414d23:	push   ebx
  414d24:	add    BYTE PTR [edx],cl
  414d26:	xchg   BYTE PTR [ebx],dh
  414d28:	xor    al,0x29
  414d2a:	data16 add al,0x0
  414d2d:	add    DWORD PTR [ecx+edx*8],eax
  414d30:	sbb    ch,BYTE PTR [eax]
  414d32:	adc    cl,ch
  414d34:	add    DWORD PTR [eax],eax
  414d36:	add    BYTE PTR [eax],ah
  414d38:	or     DWORD PTR [eax],eax
  414d3a:	xchg   ebp,eax
  414d3b:	inc    eax
  414d3c:	adc    al,0x46
  414d3e:	or     BYTE PTR [eax],ah
  414d40:	add    BYTE PTR [eax],bl
  414d42:	aas    
  414d43:	adc    BYTE PTR ds:0x71006842,ah
  414d49:	add    al,0x90
  414d4b:	xor    al,BYTE PTR [ecx]
  414d4d:	inc    eax
  414d4e:	nop
  414d4f:	adc    al,ah
  414d51:	sbb    BYTE PTR [eax+ebx*8],dh
  414d54:	add    eax,DWORD PTR [eax-0x54b7d3e0]
  414d5a:	add    DWORD PTR [eax+esi*1+0x8271201],edx
  414d61:	add    al,dl
  414d63:	daa    
  414d64:	sbb    al,0x26
  414d66:	jp     0x414d70
  414d68:	add    BYTE PTR [eax+0x29],0xc0
  414d6c:	add    BYTE PTR [edi],al
  414d6e:	rol    BYTE PTR [eax],0x40
  414d71:	mov    al,ds:0x52300191
  414d76:	add    BYTE PTR [eax+0x4],al
  414d79:	add    BYTE PTR [ecx],al
  414d7b:	mov    WORD PTR [ecx],es
  414d7d:	add    bl,BYTE PTR [esp+ecx*1]
  414d80:	inc    ebp
  414d81:	inc    eax
  414d82:	add    ah,al
  414d84:	xor    al,0x10
  414d86:	push   ds
  414d87:	add    al,0x20
  414d89:	pusha  
  414d8a:	xchg   DWORD PTR [ebx+0x120b4],edx
  414d90:	nop
  414d91:	sub    al,0x82
  414d93:	inc    ebx
  414d94:	and    BYTE PTR [esi],al
  414d96:	or     DWORD PTR [ecx],0x89020008
  414d9c:	push   eax
  414d9d:	inc    eax
  414d9e:	or     BYTE PTR [edx+0x19],al
  414da1:	xor    al,0x84
  414da3:	inc    esp
  414da4:	add    eax,0x10091010
  414da9:	inc    esp
  414daa:	mov    BYTE PTR [eax+0x446a90c],ah
  414db0:	inc    eax
  414db1:	add    al,0x20
  414db3:	bound  eax,QWORD PTR [eax+0x5]
  414db6:	sub    BYTE PTR [eax+eax*8],al
  414db9:	mov    DWORD PTR [eax],esp
  414dbb:	sub    BYTE PTR [eax],dh
  414dbd:	and    BYTE PTR [ecx+0x1404102],al
  414dc3:	mov    DWORD PTR [ebx],eax
  414dc5:	dec    ecx
  414dc6:	sbb    BYTE PTR [eax],dl
  414dc8:	mov    eax,ds:0x621440
  414dcd:	add    eax,0x16008204
  414dd2:	mov    al,BYTE PTR [ecx]
  414dd4:	sub    edx,DWORD PTR [eax+0x14]
  414dd7:	and    DWORD PTR [esi-0x34],eax
  414dda:	sub    al,BYTE PTR [edx]
  414ddc:	inc    eax
  414ddd:	inc    eax
  414dde:	xor    DWORD PTR [eax+0x63],ebp
  414de1:	inc    eax
  414de2:	popa   
  414de3:	and    al,0x8
  414de5:	popa   
  414de6:	or     BYTE PTR [edx],cl
  414de8:	add    al,0x40
  414dea:	add    BYTE PTR [eax-0x6ffff2e0],al
  414df0:	add    BYTE PTR [edx],ah
  414df2:	push   edx
  414df3:	add    eax,DWORD PTR [esp+ecx*2+0x10084a40]
  414dfa:	inc    esp
  414dfb:	sbb    al,al
  414dfd:	inc    eax
  414dfe:	dec    eax
  414dff:	add    BYTE PTR [eax],dl
  414e01:	and    BYTE PTR [eax],bh
  414e03:	sbb    BYTE PTR [eax+0x52],dl
  414e06:	add    DWORD PTR [eax],esp
  414e08:	adc    BYTE PTR [esi+ecx*1],ch
  414e0b:	sbb    BYTE PTR [eax+0x5],al
  414e0e:	inc    edx
  414e0f:	add    cl,BYTE PTR [eax+eax*1+0xa094202]
  414e16:	nop
  414e17:	dec    eax
  414e18:	iret   
  414e19:	loopne 0x414e6f
  414e1b:	adc    BYTE PTR [eax-0x80],cl
  414e1e:	inc    eax
  414e1f:	mov    cl,0x0
  414e21:	add    al,BYTE PTR [ecx]
  414e23:	add    BYTE PTR [ecx+0x44],ah
  414e26:	push   cs
  414e27:	add    DWORD PTR [edx],eax
  414e29:	add    esi,DWORD PTR [eax]
  414e2b:	inc    eax
  414e2c:	add    BYTE PTR [eax+0x140],ah
  414e32:	and    DWORD PTR [edi],eax
  414e34:	adc    cl,BYTE PTR ds:0xd871804
  414e3a:	add    BYTE PTR [eax],ch
  414e3c:	add    BYTE PTR [eax],ch
  414e3e:	inc    ebx
  414e3f:	inc    ebx
  414e40:	xor    dl,BYTE PTR [eax+0x44]
  414e43:	add    BYTE PTR [ecx],cl
  414e45:	xor    BYTE PTR [eax+0x26272201],cl
  414e4b:	nop
  414e4c:	add    al,0x3
  414e4e:	pop    ds
  414e4f:	or     al,BYTE PTR [eax+ebp*8+0x22a10243]
  414e56:	add    al,BYTE PTR [eax]
  414e58:	add    BYTE PTR [eax+0x61161610],al
  414e5e:	add    BYTE PTR [eax],al
  414e60:	add    bl,BYTE PTR [eax+0x12]
  414e63:	add    BYTE PTR [eax+0x0],al
  414e66:	mov    al,ds:0x15444102
  414e6b:	inc    eax
  414e6c:	add    BYTE PTR [edx],al
  414e6e:	adc    BYTE PTR [eax],0x20
  414e71:	dec    ebp
  414e72:	pusha  
  414e73:	or     DWORD PTR [esi+0x22664140],0x6030002
  414e7d:	add    BYTE PTR [eax],ch
  414e7f:	adc    al,BYTE PTR [eax+0x48]
  414e82:	loope  0x414e84
  414e84:	and    DWORD PTR [ecx],eax
  414e86:	sbb    al,BYTE PTR [edx+0x100a350]
  414e8c:	adc    BYTE PTR [edx-0x7dfff7fc],cl
  414e92:	adc    al,BYTE PTR [eax]
  414e94:	add    DWORD PTR [edx+ecx*1],esi
  414e97:	inc    ebx
  414e98:	inc    eax
  414e99:	rcr    al,0x32
  414e9c:	add    al,0x80
  414e9e:	mov    al,0x94
  414ea0:	mov    al,ds:0x10349
  414ea5:	arpl   WORD PTR [ecx-0x40],cx
  414ea8:	push   eax
  414ea9:	sar    edi,0x15
  414eac:	int3   
  414ead:	pop    ds
  414eae:	inc    ebp
  414eaf:	add    BYTE PTR [ebx+0x42008100],al
  414eb5:	and    BYTE PTR [edx+ecx*2],dl
  414eb8:	add    al,0x8
  414eba:	add    BYTE PTR [ecx],0x1
  414ebd:	inc    edx
  414ebe:	push   eax
  414ebf:	cwde   
  414ec0:	mov    ah,BYTE PTR [eax]
  414ec2:	adc    BYTE PTR [eax+eiz*2],al
  414ec5:	pushf  
  414ec6:	jno    0x414e88
  414ec8:	xchg   esp,eax
  414ec9:	adc    DWORD PTR [eax+0x43],esp
  414ecc:	adc    BYTE PTR [ecx+0x20c82122],al
  414ed2:	inc    eax
  414ed3:	add    BYTE PTR [eax],dl
  414ed5:	sub    BYTE PTR [eax+edx*1],al
  414ed8:	jae    0x414eda
  414eda:	add    dl,BYTE PTR [eax+0x84c0144]
  414ee0:	pop    es
  414ee1:	inc    ebx
  414ee2:	inc    esp
  414ee3:	pop    eax
  414ee4:	sub    eax,0x406027
  414ee9:	rcl    BYTE PTR [bx+si],0x0
  414eed:	rol    BYTE PTR [ecx],1
  414eef:	adc    BYTE PTR ds:0x160244a0,al
  414ef5:	inc    esp
  414ef6:	and    DWORD PTR [esi-0x9bd6ff9],eax
  414efc:	or     BYTE PTR [ecx],0xfc
  414eff:	xchg   esp,eax
  414f00:	mov    ?,WORD PTR [esi+eiz*4+0x308000]
  414f07:	or     DWORD PTR [edi],edx
  414f09:	dec    eax
  414f0a:	add    DWORD PTR [eax],0xe492a98
  414f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f11:	add    al,BYTE PTR [eax+0x6]
  414f14:	pop    eax
  414f15:	add    BYTE PTR [eax+0x285200],dl
  414f1b:	add    DWORD PTR [edi-0x7f73fe00],esp
  414f21:	pusha  
  414f22:	add    dh,ch
  414f24:	or     BYTE PTR [edx+0x8],cl
  414f27:	adc    BYTE PTR [edx],0x82
  414f2a:	pop    ss
  414f2b:	mov    eax,ds:0x2150000d
  414f30:	add    eax,0x50810503
  414f35:	adc    BYTE PTR [ecx+0x40],al
  414f38:	add    BYTE PTR [ecx],ch
  414f3a:	add    BYTE PTR [eax+0x13203c3],al
  414f40:	cmp    BYTE PTR [ebp+0x28300140],al
  414f46:	pop    edx
  414f47:	add    esp,DWORD PTR [eax]
  414f49:	add    BYTE PTR [edx],dl
  414f4b:	and    DWORD PTR [eax+0x11000328],eax
  414f51:	mov    eax,ds:0x48404c18
  414f56:	add    al,BYTE PTR [eax]
  414f58:	popa   
  414f59:	sbb    BYTE PTR [eax],ah
  414f5b:	add    dl,al
  414f5d:	add    al,ah
  414f5f:	add    eax,0x82003405
  414f64:	add    ch,BYTE PTR [ecx+0x1]
  414f67:	(bad)  
  414f68:	adc    al,BYTE PTR [ebx+0x4]
  414f6b:	add    DWORD PTR [esi+0x18],eax
  414f6e:	sbb    BYTE PTR [eax],al
  414f70:	rol    BYTE PTR [esi],0x6b
  414f73:	add    al,BYTE PTR [ecx+eax*4]
  414f76:	and    DWORD PTR [eax],esi
  414f78:	fld    DWORD PTR [eax]
  414f7a:	add    DWORD PTR [ecx],eax
  414f7c:	add    al,0x18
  414f7e:	adc    DWORD PTR [eax+ebp*1-0x33bad6fe],esi
  414f85:	test   DWORD PTR [eax],edi
  414f87:	sbb    al,0x12
  414f89:	and    BYTE PTR [esi],ah
  414f8b:	xchg   ebp,eax
  414f8c:	add    BYTE PTR [ecx-0x3d],ah
  414f8f:	lea    eax,[ebx]
  414f91:	add    BYTE PTR [eax-0x5a],bl
  414f94:	mov    al,ds:0x980401e8
  414f99:	and    ah,BYTE PTR [esi]
  414f9b:	and    DWORD PTR [eax],eax
  414f9d:	adc    al,0x1
  414f9f:	xor    BYTE PTR [edx],dl
  414fa1:	adc    BYTE PTR [ecx],ch
  414fa3:	xor    dl,BYTE PTR [eax]
  414fa5:	add    BYTE PTR [edx],cl
  414fa7:	popa   
  414fa8:	add    dl,al
  414faa:	dec    esp
  414fab:	test   BYTE PTR [eax+edx*1+0x40128007],al
  414fb2:	add    al,0x40
  414fb4:	push   eax
  414fb5:	and    BYTE PTR [eax],al
  414fb7:	add    BYTE PTR [eax],ah
  414fb9:	bound  eax,QWORD PTR ds:0x37580310
  414fbf:	push   es
  414fc0:	inc    ecx
  414fc1:	inc    eax
  414fc2:	adc    ch,BYTE PTR [eax]
  414fc4:	and    cl,bl
  414fc6:	sbb    DWORD PTR [edx],ecx
  414fc8:	add    BYTE PTR [eax],cl
  414fca:	push   eax
  414fcb:	add    BYTE PTR [edx],dl
  414fcd:	and    BYTE PTR [eax],dl
  414fcf:	sbb    al,BYTE PTR fs:[eax+eax*1-0x74]
  414fd4:	sbb    BYTE PTR [eax+0x1c04101],al
  414fda:	inc    eax
  414fdb:	add    BYTE PTR [eax+0x8],dh
  414fde:	inc    eax
  414fdf:	add    ch,al
  414fe1:	or     eax,0x33c14211
  414fe6:	or     al,BYTE PTR [ecx]
  414fe8:	lods   al,BYTE PTR ds:[esi]
  414fe9:	push   esp
  414fea:	sub    BYTE PTR [eax-0x37bb93f0],0x4c
  414ff1:	adc    BYTE PTR [ecx],al
  414ff3:	add    BYTE PTR [edx-0x5d5f7400],cl
  414ff9:	add    al,0x65
  414ffb:	add    al,0xd8
  414ffd:	and    BYTE PTR [eax],dl
  414fff:	shl    BYTE PTR [eax],0x0
  415002:	add    BYTE PTR [eax+0x111d100],al
  415008:	mov    al,0x30
  41500a:	inc    eax
  41500b:	or     al,0x50
  41500d:	inc    eax
  41500e:	push   es
  41500f:	adc    esp,DWORD PTR [edx]
  415011:	add    eax,DWORD PTR [edx]
  415013:	xchg   esp,eax
  415014:	imul   eax,DWORD PTR [eax+0x2],0x0
  415018:	add    al,0x5
  41501a:	add    BYTE PTR [eax+0x4a],al
  41501d:	sub    al,0xb1
  41501f:	inc    ebx
  415020:	add    BYTE PTR [edx+eax*8],cl
  415023:	push   eax
  415024:	mov    bl,BYTE PTR [edx]
  415026:	enter  0x1500,0xc0
  41502a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41502b:	push   cs
  41502c:	push   es
  41502d:	push   eax
  41502e:	rcl    bl,0x6
  415031:	test   BYTE PTR [ecx],ah
  415033:	mov    al,ds:0x8d502b00
  415038:	inc    eax
  415039:	inc    esi
  41503a:	and    DWORD PTR [edx],ecx
  41503c:	xchg   ecx,eax
  41503d:	adc    BYTE PTR [ebp+0x20],0x6
  415041:	cmp    BYTE PTR [eax],0x47
  415044:	mov    al,ds:0x21e00603
  415049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41504a:	sub    BYTE PTR [ebx],cl
  41504c:	adc    al,0x1
  41504e:	add    BYTE PTR [ecx+0x4],dh
  415051:	sbb    bh,BYTE PTR [eax]
  415053:	aad    0x3
  415055:	add    al,BYTE PTR [eax]
  415057:	inc    edx
  415058:	add    DWORD PTR [edx-0x60],eax
  41505b:	inc    eax
  41505c:	and    DWORD PTR [eax+edx*1],ecx
  41505f:	adc    DWORD PTR [eax],eax
  415061:	adc    eax,0xc0810194
  415066:	rol    DWORD PTR [eax+0x2000000],0x25
  41506d:	adc    al,BYTE PTR [eax+eax*1]
  415070:	add    DWORD PTR [edx],0x0
  415073:	add    BYTE PTR [eax],al
  415075:	test   BYTE PTR [eax+eax*1],al
  415078:	adc    DWORD PTR fs:[eax],eax
  41507b:	cmp    BYTE PTR [ebx+0x3020081],al
  415081:	add    eax,DWORD PTR [eax]
  415083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415084:	push   edx
  415085:	add    al,BYTE PTR [eax+0x9e00b00]
  41508b:	xor    ecx,DWORD PTR [eax]
  41508d:	inc    eax
  41508e:	mov    al,ds:0xb100499
  415093:	and    BYTE PTR [edx],0x0
  415096:	into   
  415097:	inc    ebp
  415098:	xor    BYTE PTR [eax+eiz*1],al
  41509b:	sub    BYTE PTR [eax+0x2a],ah
  41509e:	xor    DWORD PTR [ebx+0xa009040],eax
  4150a4:	add    al,cl
  4150a6:	adc    BYTE PTR [ecx],0x52
  4150a9:	rol    DWORD PTR [eax+0x20a78008],0x91
  4150b0:	rol    DWORD PTR [eax+0x8c00961],1
  4150b6:	xchg   esp,eax
  4150b7:	add    dl,al
  4150b9:	mov    bh,al
  4150bb:	cwde   
  4150bc:	add    al,ah
  4150be:	add    BYTE PTR [ecx],0x42
  4150c1:	sbb    DWORD PTR [edx-0x47bdbdbe],eax
  4150c7:	and    BYTE PTR [ecx+0x41],al
  4150ca:	add    ah,BYTE PTR [eax]
  4150cc:	and    BYTE PTR [eax],ah
  4150ce:	add    BYTE PTR [ecx+eiz*1+0x22],al
  4150d2:	retf   
  4150d3:	inc    eax
  4150d4:	sbb    eax,0x2be0ac
  4150d9:	mov    ecx,0x14564200
  4150de:	inc    eax
  4150df:	or     BYTE PTR [eax],al
  4150e1:	inc    ebp
  4150e2:	adc    al,BYTE PTR [eax+edx*1-0x64d6a09f]
  4150e9:	and    al,0x19
  4150eb:	ret    
  4150ec:	add    DWORD PTR ds:0x4917ca0a,ecx
  4150f2:	inc    eax
  4150f3:	data16 add BYTE PTR [edx+0x1e],ah
  4150f7:	add    BYTE PTR [ecx],al
  4150f9:	or     BYTE PTR [eax],cl
  4150fb:	add    DWORD PTR [eax],ecx
  4150fd:	scas   al,BYTE PTR es:[edi]
  4150fe:	push   ss
  4150ff:	dec    ecx
  415100:	inc    edx
  415101:	and    al,0x1c
  415103:	int3   
  415104:	rol    BYTE PTR [eax],0x15
  415107:	xchg   esi,eax
  415108:	add    BYTE PTR [eax+0x40209484],cl
  41510e:	adc    bl,BYTE PTR [eax]
  415110:	and    BYTE PTR [eax+0x61444],cl
  415116:	xor    ch,BYTE PTR [ecx]
  415118:	add    BYTE PTR [ecx],al
  41511a:	inc    ecx
  41511b:	or     al,0xa
  41511d:	and    BYTE PTR [eax-0x1ffc63d8],ah
  415123:	scas   eax,DWORD PTR es:[edi]
  415124:	add    BYTE PTR [eax],0x1
  415127:	add    bh,ah
  415129:	es add eax,0x810b4120
  41512f:	or     BYTE PTR [eax],dl
  415131:	sbb    BYTE PTR [eax],ah
  415133:	add    esi,DWORD PTR [edx]
  415135:	and    BYTE PTR ds:0x43506d56,al
  41513b:	rol    DWORD PTR [ecx+0x400200a0],0x0
  415142:	or     DWORD PTR [esi-0x4d],eax
  415145:	add    BYTE PTR [edx],0x20
  415148:	and    ecx,DWORD PTR [eax]
  41514a:	nop
  41514b:	cmp    eax,0x43214080
  415150:	lods   al,BYTE PTR ds:[esi]
  415151:	add    al,0x88
  415153:	add    BYTE PTR [esi+0x0],0xa
  415157:	and    cl,BYTE PTR [esi+0x6000843]
  41515d:	xor    BYTE PTR [eax],al
  41515f:	add    DWORD PTR [eax+0x22c5310],ecx
  415165:	or     cl,BYTE PTR [eax]
  415167:	add    DWORD PTR [ecx+0x33],edx
  41516a:	add    BYTE PTR [edx],dl
  41516c:	push   es
  41516d:	test   al,0x2
  41516f:	add    BYTE PTR [eax],bl
  415171:	and    BYTE PTR [eax+0x2],0x80
  415175:	mov    al,ds:0x40015018
  41517a:	inc    eax
  41517b:	inc    edi
  41517c:	inc    eax
  41517d:	push   ebp
  41517e:	inc    esi
  41517f:	mov    ah,0x9
  415181:	add    DWORD PTR [eax-0x3d7dfffd],ecx
  415187:	dec    edx
  415188:	xchg   DWORD PTR [eax],ecx
  41518a:	test   BYTE PTR [edx+0x9a608],al
  415190:	or     BYTE PTR [edx-0x6b4cfbe0],al
  415196:	add    dl,BYTE PTR [eax-0x38f6a780]
  41519c:	add    cl,BYTE PTR [ebx]
  41519e:	mov    dl,0x8
  4151a0:	nop
  4151a1:	add    al,0x30
  4151a3:	xor    BYTE PTR [eax+0x28],al
  4151a6:	xor    dl,BYTE PTR [edx]
  4151a8:	jae    0x4151b6
  4151aa:	rol    BYTE PTR [eax+eiz*2],1
  4151ad:	and    BYTE PTR [eax+0x2180021],dl
  4151b3:	mov    WORD PTR [eax+0x10],es
  4151b6:	or     DWORD PTR ds:0x8200020,eax
  4151bc:	adc    al,cl
  4151be:	iret   
  4151bf:	xor    BYTE PTR [eax],cl
  4151c1:	and    DWORD PTR [edx-0x60],esi
  4151c4:	mov    eax,ds:0x880220a
  4151c9:	adc    ebp,ecx
  4151cb:	popa   
  4151cc:	or     BYTE PTR [eax-0x80],cl
  4151cf:	inc    edx
  4151d0:	and    al,al
  4151d2:	adc    cl,BYTE PTR [eiz*2+0x12812810]
  4151d9:	dec    ebp
  4151da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151db:	sbb    dl,BYTE PTR [eax]
  4151dd:	xor    eax,0x80821810
  4151e2:	inc    eax
  4151e3:	inc    esp
  4151e4:	xchg   BYTE PTR [ecx],al
  4151e6:	adc    BYTE PTR [ebp+0x1060a],0x20
  4151ed:	test   eax,0xa0132014
  4151f2:	pop    edx
  4151f3:	dec    ecx
  4151f4:	inc    eax
  4151f5:	push   eax
  4151f6:	add    BYTE PTR [eax],al
  4151f8:	add    al,BYTE PTR [ecx-0x7a]
  4151fb:	and    BYTE PTR [eax],0x14
  4151fe:	add    BYTE PTR [eax],bl
  415200:	add    DWORD PTR [eax],edx
  415202:	or     al,0x2
  415204:	add    al,0xe0
  415206:	and    DWORD PTR [eax+0x1c900805],ebp
  41520c:	sbb    BYTE PTR ds:0x100b02dc,al
  415212:	push   edx
  415213:	rol    BYTE PTR [eax],cl
  415215:	add    BYTE PTR [edx+0x4358200],bl
  41521b:	add    BYTE PTR [eax],al
  41521d:	and    DWORD PTR [edx],ebx
  41521f:	xchg   ecx,eax
  415220:	mov    BYTE PTR [eax+0x490a6098],al
  415226:	or     DWORD PTR [edx],eax
  415228:	mov    al,BYTE PTR [esi]
  41522a:	mov    BYTE PTR [eax+0x2104e00c],bh
  415230:	and    BYTE PTR [eax+eiz*1],ah
  415233:	or     dl,ah
  415235:	inc    ecx
  415236:	and    BYTE PTR [edx+0x2],ah
  415239:	ins    BYTE PTR es:[edi],dx
  41523a:	test   eax,esp
  41523c:	icebp  
  41523d:	adc    dl,BYTE PTR [ecx]
  41523f:	sub    DWORD PTR [ecx],ebp
  415241:	and    BYTE PTR [eax],al
  415243:	sbb    DWORD PTR [edx],edx
  415245:	inc    eax
  415246:	push   eax
  415247:	and    ch,BYTE PTR [eax]
  415249:	je     0x41529f
  41524b:	adc    al,0x8a
  41524d:	adc    al,0x11
  41524f:	xchg   DWORD PTR [ecx],ecx
  415251:	add    eax,0x71110c0
  415256:	push   cs
  415257:	inc    esp
  415258:	or     BYTE PTR [edx],dl
  41525a:	mov    al,ds:0x90090181
  41525f:	add    DWORD PTR [ecx+0x0],ebx
  415262:	add    BYTE PTR [eax+0x45],0x80
  415266:	add    edx,DWORD PTR [edx]
  415268:	pop    ecx
  415269:	outs   dx,DWORD PTR ds:[esi]
  41526a:	or     BYTE PTR [eax],al
  41526c:	add    al,0x9
  41526e:	add    BYTE PTR [eax+0x90210c0],dh
  415274:	adc    BYTE PTR [eax-0x6bb7fee0],al
  41527a:	inc    esp
  41527b:	inc    eax
  41527c:	rol    BYTE PTR [eax+ecx*1],0x32
  415280:	add    DWORD PTR ds:0x1e23c308,esp
  415286:	add    al,BYTE PTR [eax+0x5]
  415289:	or     eax,0x220082
  41528e:	in     al,0x2
  415290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415291:	bound  eax,QWORD PTR [eax+0x3800449]
  415297:	call   0x8c:0x800a4085
  41529e:	or     ah,dl
  4152a0:	add    BYTE PTR [eax+0x115058],bl
  4152a6:	adc    BYTE PTR [ebx],dh
  4152a8:	adc    BYTE PTR ds:0x21002008,0x40
  4152af:	add    DWORD PTR [ebx],eax
  4152b1:	or     BYTE PTR [eax],0x42
  4152b4:	and    dl,BYTE PTR [eax]
  4152b6:	add    dl,BYTE PTR [eax+0x2182140]
  4152bc:	adc    BYTE PTR [eax],al
  4152be:	add    esp,ecx
  4152c0:	or     BYTE PTR [eax],al
  4152c2:	inc    eax
  4152c3:	pusha  
  4152c4:	xor    BYTE PTR [eax+0x74],al
  4152c7:	mov    eax,ds:0x88202d00
  4152cc:	add    ecx,DWORD PTR [eax-0x7c]
  4152cf:	pushf  
  4152d0:	and    BYTE PTR [eax+eax*8-0x55eff998],0x9a
  4152d8:	add    BYTE PTR [eax],ah
  4152da:	add    al,0x46
  4152dc:	and    DWORD PTR [esp+eax*1+0x410c0810],edx
  4152e3:	jns    0x4152ed
  4152e5:	add    eax,DWORD PTR [edx]
  4152e7:	mov    BYTE PTR [edx-0x65],al
  4152ea:	inc    eax
  4152eb:	or     al,0x18
  4152ed:	dec    esp
  4152ee:	pusha  
  4152ef:	add    BYTE PTR [eax],cl
  4152f1:	inc    esp
  4152f2:	rol    BYTE PTR [ecx+0x4a],0xae
  4152f6:	adc    al,BYTE PTR [edx+0x10142081]
  4152fc:	and    BYTE PTR [ecx*2-0x5efebfac],cl
  415303:	xor    DWORD PTR [esi+0x1],eax
  415306:	nop
  415307:	mov    esp,0x80080051
  41530c:	inc    edx
  41530d:	ror    BYTE PTR [ecx+0x3],1
  415310:	in     al,dx
  415311:	or     ch,BYTE PTR [ebp+0x1a129822]
  415317:	inc    eax
  415318:	add    DWORD PTR [eax],esp
  41531a:	lock add al,BYTE PTR [eax-0x76]
  41531e:	rcl    DWORD PTR [esi+0x55],0x6a
  415322:	add    al,al
  415324:	mov    BYTE PTR [ecx+0x4801058b],bl
  41532a:	inc    esp
  41532b:	sub    BYTE PTR [ecx],cl
  41532d:	or     ecx,DWORD PTR [eax+eax*2+0x52861098]
  415334:	dec    eax
  415335:	shl    DWORD PTR [edx],0x26
  415338:	sbb    al,BYTE PTR [edx]
  41533a:	cmp    al,0x13
  41533c:	sub    DWORD PTR [eax+0x3c5bc832],edx
  415342:	and    BYTE PTR [ecx],ch
  415344:	and    ah,0x32
  415347:	inc    eax
  415348:	or     BYTE PTR ds:0x235058,0x24
  41534f:	and    cl,ah
  415351:	inc    eax
  415352:	sub    BYTE PTR [ecx],al
  415354:	add    al,0x4c
  415356:	inc    eax
  415357:	add    al,0x1
  415359:	push   ds
  41535a:	dec    edx
  41535b:	gs add al,0x52
  41535e:	and    BYTE PTR [edx-0x80],al
  415361:	adc    DWORD PTR [ecx+eax*1+0x1004818b],ecx
  415368:	add    BYTE PTR [edx-0x6eb62bf5],dl
  41536e:	or     edx,DWORD PTR [ecx+eax*2-0x76]
  415372:	xor    BYTE PTR [ecx+eax*4-0x7c],ch
  415376:	es es out 0x43,eax
  41537a:	lods   al,BYTE PTR ds:[esi]
  41537b:	or     BYTE PTR [eax+ebp*1],al
  41537e:	and    BYTE PTR [edx],al
  415380:	jne    0x4153c2
  415382:	test   BYTE PTR [eax+0x26],ch
  415385:	rol    cl,0xa1
  415388:	or     BYTE PTR [eax+0x86ca695],al
  41538e:	and    cl,BYTE PTR [ecx]
  415390:	inc    esi
  415391:	and    ecx,DWORD PTR [eax]
  415393:	add    BYTE PTR [eax+0x14800054],al
  415399:	loop   0x4153fe
  41539b:	adc    al,ah
  41539d:	push   eax
  41539e:	or     al,BYTE PTR [esi+0x24]
  4153a1:	sbb    al,0x3
  4153a3:	or     BYTE PTR [ecx],ah
  4153a5:	add    BYTE PTR [esi-0x80],ah
  4153a8:	push   eax
  4153a9:	and    bl,BYTE PTR [eax]
  4153ab:	push   eax
  4153ac:	sbb    BYTE PTR [eax],0x88
  4153af:	and    BYTE PTR [ecx+0xb],ah
  4153b2:	add    BYTE PTR [eax],0x47
  4153b5:	mov    BYTE PTR [eax],dl
  4153b7:	add    esp,eax
  4153b9:	adc    BYTE PTR [ecx],dh
  4153bb:	nop
  4153bc:	push   eax
  4153bd:	rcl    BYTE PTR [ecx],1
  4153bf:	mov    BYTE PTR [eax],al
  4153c1:	mov    WORD PTR [eax],es
  4153c3:	je     0x4153e9
  4153c5:	lock pushf 
  4153c7:	loopne 0x4153d4
  4153c9:	add    ah,al
  4153cb:	add    al,0xc
  4153cd:	add    DWORD PTR [eax],eax
  4153cf:	add    dl,BYTE PTR [ebp+0x281624]
  4153d5:	sub    DWORD PTR [ebx],0x820248a0
  4153db:	les    eax,FWORD PTR [eax+0x70004294]
  4153e1:	sub    BYTE PTR ds:0x48001441,cl
  4153e7:	add    edx,DWORD PTR [edx]
  4153e9:	add    BYTE PTR [ecx],al
  4153eb:	adc    cl,BYTE PTR [eax]
  4153ed:	and    DWORD PTR [edx],esp
  4153ef:	sub    DWORD PTR [eax],eax
  4153f1:	add    BYTE PTR [eax+0x8],cl
  4153f4:	js     0x4153f6
  4153f6:	adc    al,0x80
  4153f8:	rcl    dl,0xe8
  4153fb:	push   edx
  4153fc:	or     eax,0x20003684
  415401:	inc    ebp
  415402:	inc    eax
  415403:	sub    BYTE PTR [eax+0xcc],ah
  415409:	add    DWORD PTR [eax+0x2002185],ebp
  41540f:	nop
  415410:	and    BYTE PTR [eax],cl
  415412:	adc    BYTE PTR [ebx],al
  415414:	stos   DWORD PTR es:[edi],eax
  415415:	add    al,0xa1
  415417:	and    DWORD PTR [eax+eax*1-0x78],eax
  41541b:	cli    
  41541c:	add    edx,DWORD PTR [edx]
  41541e:	inc    eax
  41541f:	add    BYTE PTR [eax],0x10
  415422:	test   eax,0x82240130
  415427:	or     BYTE PTR [ecx+ebp*1-0x50],0x8
  41542c:	and    BYTE PTR [eax+0x10982805],al
  415432:	test   al,0x80
  415434:	mov    DWORD PTR [eax+0x32],edx
  415437:	adc    BYTE PTR [eax],cl
  415439:	lock cmp al,BYTE PTR [edx]
  41543c:	sbb    BYTE PTR [eax+0x12],al
  41543f:	inc    eax
  415440:	jl     0x415432
  415442:	add    BYTE PTR fs:[eax+0x40002041],cl
  415449:	xchg   esi,eax
  41544a:	or     BYTE PTR [edx+0x66],cl
  41544d:	add    BYTE PTR [ebx],bh
  41544f:	rol    al,1
  415451:	inc    edx
  415452:	sub    BYTE PTR [ecx+esi*1],0xb0
  415456:	es add al,cl
  415459:	cwde   
  41545a:	pop    edx
  41545b:	add    eax,edx
  41545d:	or     DWORD PTR [ecx],eax
  41545f:	sub    BYTE PTR [edx+0x2a],0x41
  415463:	adc    BYTE PTR [edx+eax*1],cl
  415466:	and    al,BYTE PTR [eax+0x4]
  415469:	mov    al,ah
  41546b:	add    eax,0x41158840
  415470:	sub    BYTE PTR [edx+0x2f],0x1
  415474:	push   es
  415475:	add    DWORD PTR [ebx+0x40b02202],eax
  41547b:	or     BYTE PTR [edx-0x40],dl
  41547e:	and    ah,dl
  415480:	push   es
  415481:	dec    ecx
  415482:	add    DWORD PTR [eax],esp
  415484:	adc    al,0x6
  415486:	sbb    BYTE PTR [eax],0xe5
  415489:	arpl   WORD PTR [ecx-0x40],bp
  41548c:	das    
  41548d:	and    dl,dl
  41548f:	add    BYTE PTR [ecx],al
  415491:	add    DWORD PTR [eax+eiz*1+0x15a0a02],0x8018016c
  41549c:	add    al,0xa0
  41549e:	add    al,0x4
  4154a0:	xchg   BYTE PTR [esi],dh
  4154a2:	in     al,dx
  4154a3:	or     BYTE PTR ds:0x10014a0e,cl
  4154a9:	add    BYTE PTR [edi],cl
  4154ab:	add    BYTE PTR [ecx+eax*8],dl
  4154ae:	adc    bl,BYTE PTR [eax]
  4154b0:	sub    BYTE PTR [edx+0x5e200a6],dl
  4154b6:	or     al,0x16
  4154b8:	dec    ecx
  4154b9:	inc    eax
  4154ba:	adc    al,0xe4
  4154bc:	sub    dh,BYTE PTR [ecx+0x41041188]
  4154c2:	adc    bh,BYTE PTR [eax+0x2]
  4154c5:	jns    0x20c2a50b
  4154cb:	or     al,0x9
  4154cd:	mov    al,ds:0x28ac2405
  4154d2:	sub    eax,0x48000894
  4154d7:	cmp    eax,0x60180420
  4154dd:	push   ss
  4154de:	sub    BYTE PTR [eax+0x54],dl
  4154e1:	sbb    dl,BYTE PTR [eax]
  4154e3:	and    al,0x82
  4154e5:	add    BYTE PTR [ebx],0x2
  4154e8:	inc    eax
  4154e9:	or     al,0x0
  4154eb:	add    al,0x0
  4154ed:	pushf  
  4154ee:	add    BYTE PTR [eax],al
  4154f0:	add    BYTE PTR [eax-0x63],al
  4154f3:	jno    0x4154f5
  4154f5:	and    BYTE PTR [esp+eax*1+0x10],0x2
  4154fa:	add    BYTE PTR [eax],0xea
  4154fd:	xchg   ecx,eax
  4154fe:	xor    cl,BYTE PTR [ecx]
  415500:	mov    al,ds:0x8f060
  415505:	add    BYTE PTR [eax+0x8b3501d],al
  41550b:	and    al,BYTE PTR [eax]
  41550d:	fild   WORD PTR ds:0x2630202
  415513:	adc    ecx,DWORD PTR [eax-0x3ff9ff3e]
  415519:	adc    DWORD PTR [eax],0x8
  41551c:	sbb    cl,BYTE PTR [eax+0x8a29004]
  415522:	or     cl,BYTE PTR [ecx]
  415524:	add    BYTE PTR [eax],ah
  415526:	adc    eax,0xc1cd81
  41552b:	and    cl,BYTE PTR [eax+0x2]
  41552e:	sbb    al,BYTE PTR [eax]
  415530:	cwde   
  415531:	adc    BYTE PTR [eax],ch
  415533:	mov    BYTE PTR ds:0xf2101a79,al
  415539:	add    al,BYTE PTR [ecx+0x11]
  41553c:	add    BYTE PTR [eax],dl
  41553e:	stos   DWORD PTR es:[edi],eax
  41553f:	adc    edx,DWORD PTR [eax+0xa]
  415542:	inc    esp
  415543:	adc    DWORD PTR [eax+0x58342800],eax
  415549:	mov    al,BYTE PTR [edx+0x0]
  41554c:	xchg   ecx,eax
  41554d:	or     DWORD PTR [eax+0x40],0x60002088
  415554:	add    BYTE PTR [eax+0x10],dh
  415557:	sub    BYTE PTR [edx+eax*2],al
  41555a:	add    BYTE PTR [eax+0x8],0x84
  41555e:	add    al,BYTE PTR [ecx]
  415560:	adc    eax,ecx
  415562:	or     DWORD PTR [edx],ecx
  415564:	add    al,BYTE PTR [ebx]
  415566:	add    BYTE PTR [ecx+edx*1+0x40500120],al
  41556d:	dec    ebx
  41556e:	in     al,0x10
  415570:	add    BYTE PTR [esp+eax*8],ah
  415573:	mov    al,ds:0xc001130
  415578:	add    DWORD PTR [eax],edx
  41557a:	or     al,BYTE PTR [eax]
  41557c:	inc    esi
  41557d:	add    BYTE PTR [eax-0x70],bl
  415580:	inc    eax
  415581:	cmp    eax,0x95e05881
  415586:	push   eax
  415587:	pusha  
  415588:	add    al,BYTE PTR [ebp+0x44]
  41558b:	sbb    eax,0xc1848184
  415590:	sbb    al,0x8
  415592:	add    BYTE PTR [eax+esi*4],dh
  415595:	and    al,0xc0
  415597:	mov    ebx,DWORD PTR [eax+0x8]
  41559a:	add    eax,DWORD PTR [ebx]
  41559c:	and    BYTE PTR [ecx],0x43
  41559f:	xor    eax,0xe0410020
  4155a4:	add    dl,BYTE PTR [eax]
  4155a6:	or     al,0x1
  4155a8:	inc    edx
  4155a9:	adc    eax,DWORD PTR [eax]
  4155ab:	rol    BYTE PTR [eax],0x5
  4155ae:	add    al,0x45
  4155b0:	add    BYTE PTR [eax+eax*2],al
  4155b3:	aam    0x0
  4155b5:	and    DWORD PTR [esi],eax
  4155b7:	and    al,0x1d
  4155b9:	push   ds
  4155ba:	xchg   BYTE PTR [ecx],ch
  4155bc:	test   BYTE PTR [eax],al
  4155be:	add    BYTE PTR [edx],ah
  4155c0:	shl    BYTE PTR [eax],0x6
  4155c3:	lahf   
  4155c4:	loop   0x415606
  4155c6:	adc    DWORD PTR ds:0x900601,eax
  4155cc:	xor    BYTE PTR [edx+edx*4],al
  4155cf:	rol    BYTE PTR [edx+0x50],1
  4155d2:	and    bl,ah
  4155d4:	int3   
  4155d5:	and    BYTE PTR [edx-0x40],bl
  4155d8:	add    dl,BYTE PTR [edx]
  4155da:	add    al,BYTE PTR [eax+0x25]
  4155dd:	dec    eax
  4155de:	xor    DWORD PTR [eax+eax*1-0x3c],ecx
  4155e2:	or     BYTE PTR ds:0x28800cd,ch
  4155e8:	cdq    
  4155e9:	cmp    BYTE PTR [eax],cl
  4155eb:	add    DWORD PTR [ecx],esp
  4155ed:	push   ss
  4155ee:	add    BYTE PTR [ecx+eiz*1],0x28
  4155f2:	pop    es
  4155f3:	add    DWORD PTR [edx],esp
  4155f5:	pop    ebp
  4155f6:	add    al,BYTE PTR [esp+eiz*2+0x3810074]
  4155fd:	add    al,0x22
  4155ff:	adc    al,0x4
  415601:	add    BYTE PTR [edx-0x6fff8b9d],dl
  415607:	and    al,0x0
  415609:	or     esp,DWORD PTR [eax]
  41560b:	add    dh,BYTE PTR [eax+0x10]
  41560e:	and    bl,BYTE PTR [ecx-0x1bbff5fc]
  415614:	pushf  
  415615:	pusha  
  415616:	push   esp
  415617:	add    BYTE PTR [ecx],al
  415619:	sub    eax,0x40880026
  41561e:	or     ecx,DWORD PTR [eax+0x42e840d5]
  415624:	adc    eax,eax
  415626:	fwait
  415627:	add    al,al
  415629:	adc    BYTE PTR [ecx],al
  41562b:	add    al,BYTE PTR [edx]
  41562d:	test   BYTE PTR [eax],cl
  41562f:	dec    eax
  415630:	dec    eax
  415631:	enter  0x10aa,0x43
  415635:	add    al,ah
  415637:	retf   
  415638:	or     BYTE PTR [ecx-0x3ed58c00],al
  41563e:	inc    eax
  41563f:	adc    BYTE PTR [edx+eiz*1+0x11002a11],al
  415646:	xor    BYTE PTR [eax],al
  415648:	inc    ecx
  415649:	and    eax,0x20000100
  41564e:	jge    0x415653
  415650:	add    cl,0x10
  415653:	or     BYTE PTR [ecx+0x0],dl
  415656:	add    BYTE PTR [edx],0x8
  415659:	int3   
  41565a:	adc    bl,cl
  41565c:	adc    al,0x0
  41565e:	and    al,0x0
  415660:	add    DWORD PTR [ecx+esi*1+0x2],edx
  415664:	add    al,0x7
  415666:	and    dh,BYTE PTR [ebp+0x30]
  415669:	and    BYTE PTR [eax],al
  41566b:	and    dl,al
  41566d:	mov    al,ds:0x50001104
  415672:	and    BYTE PTR [eax-0x6f],al
  415675:	nop
  415676:	shl    BYTE PTR [edi],0xe0
  415679:	add    BYTE PTR [esi+eax*4+0x30102680],dh
  415680:	call   DWORD PTR ds:0x451f7c
  415686:	adc    BYTE PTR [eax],dl
  415688:	or     DWORD PTR [eax],edx
  41568a:	adc    BYTE PTR [esi+0x2888005],al
  415690:	inc    esi
  415691:	mov    WORD PTR [eax],es
  415693:	add    al,0x84
  415695:	and    BYTE PTR [edx],al
  415697:	push   eax
  415698:	jb     0x415624
  41569a:	pop    eax
  41569b:	bound  ebx,QWORD PTR [edx-0x7d7ff5d6]
  4156a1:	adc    BYTE PTR [ebx+eax*4],0x50
  4156a5:	inc    esp
  4156a6:	adc    eax,DWORD PTR [esi+0x21]
  4156a9:	jae    0x4156cb
  4156ab:	push   ebx
  4156ac:	sbb    eax,DWORD PTR [eax+0x10018220]
  4156b2:	add    cl,BYTE PTR [eax+0x2]
  4156b5:	add    BYTE PTR [eax],al
  4156b7:	push   edx
  4156b8:	jo     0x4156ba
  4156ba:	mov    ds:0xa0414c18,al
  4156bf:	adc    BYTE PTR [eax+0x440f801],cl
  4156c5:	adc    BYTE PTR [eax+eax*1],al
  4156c8:	push   eax
  4156c9:	dec    eax
  4156ca:	adc    al,0x10
  4156cc:	and    ah,al
  4156ce:	add    BYTE PTR [eax-0x2d7bfec0],al
  4156d4:	and    dl,BYTE PTR [eax]
  4156d6:	add    DWORD PTR [eax-0x68],esp
  4156d9:	sbb    al,ah
  4156db:	add    eax,0x210040
  4156e0:	add    BYTE PTR [edx],al
  4156e2:	add    ecx,DWORD PTR [ecx]
  4156e4:	add    BYTE PTR [eax],ch
  4156e6:	adc    BYTE PTR [edx],al
  4156e8:	adc    BYTE PTR [ecx+0x50],al
  4156eb:	rol    BYTE PTR [ecx+0x8],1
  4156ee:	loope  0x415720
  4156f0:	add    BYTE PTR [eax],ah
  4156f2:	inc    ecx
  4156f3:	cwde   
  4156f4:	add    eax,DWORD PTR [eax-0x3f]
  4156f7:	adc    ah,BYTE PTR [ecx-0x5aadd6ff]
  4156fd:	add    DWORD PTR [eax],0x802406c0
  415703:	add    al,BYTE PTR [esi+0x15]
  415706:	adc    esp,DWORD PTR [ecx]
  415708:	pop    eax
  415709:	retf   
  41570a:	and    BYTE PTR [ecx],al
  41570c:	sbb    BYTE PTR [ecx],ah
  41570e:	push   eax
  41570f:	inc    eax
  415710:	add    BYTE PTR [esi],cl
  415712:	sub    BYTE PTR [esi+0x60],al
  415715:	push   ecx
  415716:	inc    ebp
  415717:	and    al,0x9a
  415719:	adc    al,0x80
  41571b:	sbb    ah,BYTE PTR [eax+0x0]
  41571e:	nop
  41571f:	or     al,BYTE PTR [eax*1-0x5f7b7ffd]
  415726:	add    al,ah
  415728:	xor    DWORD PTR [esp+eax*1],edx
  41572b:	test   al,0x20
  41572d:	adc    BYTE PTR [edx],bl
  41572f:	add    al,0xc8
  415731:	inc    eax
  415732:	adc    cl,cl
  415734:	add    dl,BYTE PTR [edx+0x1]
  415737:	add    eax,DWORD PTR [ecx]
  415739:	inc    edx
  41573a:	inc    edi
  41573b:	shl    al,0xc0
  41573e:	add    BYTE PTR [eax],ah
  415740:	xor    al,0x80
  415742:	and    al,0xa0
  415744:	add    BYTE PTR [eax],ch
  415746:	add    dl,BYTE PTR [eax]
  415748:	sub    BYTE PTR [eax+0x11],al
  41574b:	adc    eax,0x417c0862
  415750:	adc    DWORD PTR [ecx],eax
  415752:	and    DWORD PTR [esi],ecx
  415754:	add    DWORD PTR [eax+0x10],esp
  415757:	pop    edx
  415758:	or     al,0x0
  41575a:	inc    ecx
  41575b:	or     BYTE PTR [ebx+ecx*1+0x10bb4888],al
  415762:	dec    edx
  415763:	push   es
  415764:	add    BYTE PTR cs:[edx+0x4],al
  415768:	and    BYTE PTR [eax],dl
  41576a:	push   eax
  41576b:	add    BYTE PTR [edx],ah
  41576d:	add    al,0x20
  41576f:	adc    al,0x52
  415771:	aaa    
  415772:	xchg   edx,eax
  415773:	add    BYTE PTR [ecx+0x4],0x8
  415777:	add    DWORD PTR [ecx],eax
  415779:	add    al,0x5c
  41577b:	and    BYTE PTR [edx],dl
  41577d:	add    BYTE PTR [eax+0x3],dl
  415780:	jo     0x415783
  415782:	or     BYTE PTR gs:[edx+0x42c54],ah
  415789:	add    dl,BYTE PTR [eax]
  41578b:	adc    BYTE PTR [eax+eax*1],cl
  41578e:	add    al,al
  415790:	add    DWORD PTR [ecx],eax
  415792:	and    BYTE PTR [eax],0x22
  415795:	xchg   ebp,eax
  415796:	xor    al,0x0
  415798:	inc    edx
  415799:	xor    eax,0xf18785
  41579e:	xor    BYTE PTR [eax],al
  4157a0:	add    DWORD PTR [eax+eiz*1],esi
  4157a3:	add    BYTE PTR [edx-0x5bbef7fd],cl
  4157a9:	mov    al,ds:0x2e00022
  4157ae:	sub    BYTE PTR [eax],al
  4157b0:	lods   al,BYTE PTR ds:[esi]
  4157b1:	ins    BYTE PTR es:[edi],dx
  4157b2:	or     BYTE PTR [eax],ch
  4157b4:	and    al,BYTE PTR [ecx]
  4157b6:	mov    dl,BYTE PTR [eax-0x7efbffb7]
  4157bc:	mov    eax,0xe1828000
  4157c1:	test   DWORD PTR [eax+eax*4+0x50003000],eax
  4157c8:	sbb    al,0x0
  4157ca:	and    BYTE PTR [ebx+0x44],al
  4157cd:	xor    al,0x42
  4157cf:	or     BYTE PTR [eax],dl
  4157d1:	(bad)  
  4157d2:	dec    eax
  4157d3:	sub    al,0xb2
  4157d5:	arpl   WORD PTR [eax],si
  4157d7:	cmp    DWORD PTR [eax],0x3028a948
  4157dd:	mov    al,ds:0x9002d012
  4157e2:	add    BYTE PTR [eax],al
  4157e4:	add    dh,BYTE PTR [eax-0x79773ffc]
  4157ea:	sbb    DWORD PTR [eax+0x0],ecx
  4157ed:	or     BYTE PTR [eax],ch
  4157ef:	add    DWORD PTR [eax],0xffffff88
  4157f2:	fdiv   DWORD PTR [ecx+ecx*1+0x60]
  4157f6:	mov    bl,0x2
  4157f8:	inc    ebp
  4157f9:	inc    ebp
  4157fa:	push   eax
  4157fb:	add    DWORD PTR [edx-0x60],esp
  4157fe:	mov    ds:0x1420010,al
  415803:	lock inc eax
  415805:	add    eax,0x10d2902
  41580a:	adc    al,0x21
  41580c:	xchg   esp,eax
  41580d:	add    ah,al
  41580f:	ror    BYTE PTR [eax+0x70002610],0xa5
  415816:	test   DWORD PTR [eax+edx*2],edx
  415819:	add    DWORD PTR [eax],esi
  41581b:	and    BYTE PTR [eax],al
  41581d:	add    cl,al
  41581f:	xchg   ecx,eax
  415820:	xor    BYTE PTR [eax],al
  415822:	add    BYTE PTR [eax-0x7fefefce],cl
  415828:	inc    ebp
  415829:	or     dl,BYTE PTR [ebx]
  41582b:	xor    BYTE PTR [ecx],dl
  41582d:	xor    DWORD PTR [eax+0x51020100],esi
  415833:	xor    BYTE PTR ds:0x4c007001,ch
  415839:	and    al,0x0
  41583b:	inc    edx
  41583c:	push   cs
  41583d:	add    BYTE PTR [eax+ecx*1+0x6120480],al
  415844:	add    bl,BYTE PTR [eax]
  415846:	inc    eax
  415847:	push   ebp
  415848:	add    al,0xb
  41584a:	and    al,BYTE PTR [eax+0x2]
  41584d:	xchg   BYTE PTR [ebp+0x21c06],al
  415853:	test   BYTE PTR [ecx],al
  415855:	jl     0x4158a7
  415857:	pusha  
  415858:	add    BYTE PTR [eax],al
  41585a:	xor    BYTE PTR [eax+0x11020211],bl
  415860:	add    al,BYTE PTR ds:0x20222540
  415866:	push   eax
  415867:	enter  0x340,0x85
  41586b:	stos   BYTE PTR es:[edi],al
  41586c:	or     eax,DWORD PTR [esi]
  41586e:	ss ret 0x2950
  415872:	inc    esp
  415873:	add    al,0x7
  415875:	and    BYTE PTR ds:0xa0033131,dh
  41587b:	inc    eax
  41587c:	add    BYTE PTR [eax+0x40486012],dl
  415882:	nop
  415883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415884:	loop   0x4158d7
  415886:	and    cl,BYTE PTR [ebx+esi*1-0x74]
  41588a:	push   es
  41588b:	and    cl,BYTE PTR [eax]
  41588d:	cdq    
  41588e:	rol    BYTE PTR [eax+0x3192c631],0xa4
  415895:	rol    BYTE PTR [edx+0x10d80040],0x28
  41589c:	push   ss
  41589d:	add    ebp,0xc09a805
  4158a3:	sub    al,al
  4158a5:	adc    al,BYTE PTR [edx]
  4158a7:	inc    ebx
  4158a8:	or     BYTE PTR [ecx],al
  4158aa:	adc    eax,0x8c04021
  4158af:	sub    eax,0x7230003
  4158b4:	adc    dl,BYTE PTR [eax]
  4158b6:	adc    BYTE PTR [eax+0x8027144],bl
  4158bc:	sbb    al,0x24
  4158be:	adc    eax,0xd1081
  4158c3:	push   eax
  4158c4:	dec    edi
  4158c5:	nop
  4158c6:	or     BYTE PTR [eax+0x41000920],bh
  4158cc:	adc    ah,BYTE PTR [eax+0x4a48142c]
  4158d2:	add    DWORD PTR [ecx+eax*2],eax
  4158d5:	mov    BYTE PTR [eax],cl
  4158d7:	bound  esp,QWORD PTR [eax]
  4158d9:	add    al,0x40
  4158db:	add    BYTE PTR [edx+0x22280004],0x81
  4158e2:	cmp    BYTE PTR [edx],al
  4158e4:	adc    al,0x98
  4158e6:	or     BYTE PTR [edx+0x18],al
  4158e9:	(bad)  
  4158ea:	sbb    al,BYTE PTR [eax-0x6f752d9d]
  4158f0:	adc    BYTE PTR [esi],al
  4158f2:	adc    DWORD PTR [esp+edx*1],eax
  4158f5:	add    BYTE PTR [ecx+0x70],ah
  4158f8:	push   ecx
  4158f9:	cdq    
  4158fa:	nop
  4158fb:	mov    ds:0x83200013,al
  415900:	adc    BYTE PTR [edi+0x4b0a8c5],bl
  415906:	call   0x415a13
  41590b:	push   edx
  41590c:	add    BYTE PTR [ecx],dl
  41590e:	pusha  
  41590f:	mov    BYTE PTR [eax+eax*2],ch
  415912:	add    al,0x14
  415914:	and    BYTE PTR [edx-0x65],dh
  415917:	add    BYTE PTR [eax+0x4d0800],dl
  41591d:	add    eax,eax
  41591f:	add    BYTE PTR [eax],0x23
  415922:	add    al,0x24
  415924:	mov    eax,ds:0x5828da04
  415929:	dec    eax
  41592a:	or     DWORD PTR [esi+ebp*1],edx
  41592d:	and    BYTE PTR [eax+0x42201020],cl
  415933:	add    DWORD PTR [ebp+0x61040ca2],esp
  415939:	inc    esp
  41593a:	nop
  41593b:	or     BYTE PTR ds:0xc11442,al
  415941:	dec    ebx
  415942:	or     al,0x87
  415944:	shl    DWORD PTR [eax],0x5
  415947:	adc    BYTE PTR [eax],al
  415949:	inc    edx
  41594a:	add    BYTE PTR [eax+0x1],al
  41594d:	push   es
  41594e:	or     al,BYTE PTR [eax]
  415950:	sbb    BYTE PTR [eax+0x28],al
  415953:	or     BYTE PTR [ecx-0x7cefbfae],cl
  415959:	inc    eax
  41595a:	xor    DWORD PTR [eax],eax
  41595c:	mov    al,ds:0x32002010
  415961:	nop
  415962:	add    BYTE PTR [edx+0x20486cc0],al
  415968:	inc    edx
  415969:	xor    BYTE PTR [esp+ecx*2+0x2083a004],al
  415970:	add    BYTE PTR [eax+eax*1],al
  415973:	retf   
  415974:	add    DWORD PTR [ecx-0x61],0x48781622
  41597b:	add    al,0x6
  41597d:	add    al,0x40
  41597f:	add    BYTE PTR [eax],dl
  415981:	sub    BYTE PTR [ecx],dl
  415983:	or     DWORD PTR ds:0x44021085,0x11842480
  41598d:	add    eax,DWORD PTR [eax+0x48279092]
  415993:	push   edi
  415994:	and    BYTE PTR [edx+0x68820f29],al
  41599a:	or     al,0x10
  41599c:	sbb    BYTE PTR [ebx+0x9],ah
  41599f:	add    BYTE PTR [ebp-0x7fffdf80],al
  4159a5:	enter  0x822,0x14
  4159a9:	push   eax
  4159aa:	push   edx
  4159ab:	add    DWORD PTR [eax],eax
  4159ad:	push   es
  4159ae:	inc    ebp
  4159af:	and    al,0x0
  4159b1:	add    ah,BYTE PTR [eax*2-0x7adbf6fc]
  4159b8:	add    al,0x0
  4159ba:	add    al,dl
  4159bc:	adc    BYTE PTR [eax],al
  4159be:	xchg   esp,eax
  4159bf:	add    al,0x41
  4159c1:	and    dl,BYTE PTR [edx]
  4159c3:	adc    BYTE PTR [eax+0x1189a80a],bl
  4159c9:	or     al,0x40
  4159cb:	inc    eax
  4159cc:	push   ecx
  4159cd:	add    eax,0x302a1c0e
  4159d2:	add    BYTE PTR ds:0x2a0280a,ah
  4159d8:	add    BYTE PTR [ebp-0x6e53fbf0],al
  4159de:	adc    al,0x8
  4159e0:	test   BYTE PTR [eax],dl
  4159e2:	xchg   ecx,eax
  4159e3:	add    DWORD PTR [edx],eax
  4159e5:	xor    BYTE PTR [eax],al
  4159e7:	or     eax,0x34006820
  4159ec:	xor    al,al
  4159ee:	sub    BYTE PTR [eax-0x80],dl
  4159f1:	sbb    BYTE PTR [eax],al
  4159f3:	adc    BYTE PTR [ebx-0x40],0x78
  4159f7:	test   al,0x2
  4159f9:	add    BYTE PTR [eax],al
  4159fb:	mov    ah,dl
  4159fd:	dec    eax
  4159fe:	add    al,al
  415a00:	and    DWORD PTR [eax-0x1eb66de0],0x160711ad
  415a0a:	adc    al,0xc
  415a0c:	or     BYTE PTR [ecx],ah
  415a0e:	add    DWORD PTR [eax+0x14],eax
  415a11:	pop    ss
  415a12:	ret    0x4802
  415a15:	and    BYTE PTR [ecx+0x40170200],al
  415a1b:	add    BYTE PTR [eax-0x60],dl
  415a1e:	dec    eax
  415a1f:	add    BYTE PTR [esi+0x23],al
  415a22:	inc    edx
  415a23:	add    BYTE PTR [edx+0xa40038],bl
  415a29:	inc    eax
  415a2a:	and    cl,BYTE PTR [ecx]
  415a2c:	push   ebp
  415a2d:	add    al,0x68
  415a2f:	push   ebp
  415a30:	sub    al,0xa
  415a32:	scas   al,BYTE PTR es:[edi]
  415a33:	sub    al,cl
  415a35:	add    BYTE PTR [eax],al
  415a37:	ret    
  415a38:	mov    eax,ds:0xc401c700
  415a3d:	dec    esp
  415a3e:	or     al,al
  415a40:	push   es
  415a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a42:	and    BYTE PTR [edx],0x10
  415a45:	and    BYTE PTR [ecx],al
  415a47:	pushf  
  415a48:	and    BYTE PTR [eax+0x28489a08],0x0
  415a4f:	push   es
  415a50:	loopne 0x4159fb
  415a52:	adc    BYTE PTR [eax+eax*1],dl
  415a55:	mov    al,0x2
  415a57:	add    dl,BYTE PTR [eax+edx*2+0x414a8794]
  415a5e:	mov    ds:0xa49128,al
  415a63:	xor    eax,0x441044
  415a68:	add    al,0x18
  415a6a:	dec    eax
  415a6b:	inc    eax
  415a6c:	sub    DWORD PTR [ebx],ecx
  415a6e:	add    al,0x21
  415a70:	or     BYTE PTR [ebx],ch
  415a72:	loopne 0x415aba
  415a74:	adc    BYTE PTR [eax],ch
  415a76:	repnz adc DWORD PTR [ecx+ecx*1],edx
  415a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a7b:	add    eax,ebx
  415a7d:	pop    eax
  415a7e:	fwait
  415a7f:	add    al,0x18
  415a81:	push   es
  415a82:	xchg   esi,eax
  415a83:	add    BYTE PTR [eax+0x884c801],ch
  415a89:	add    BYTE PTR [edx+0x44ba332],al
  415a8f:	or     DWORD PTR [eax],edi
  415a91:	push   eax
  415a92:	push   esp
  415a93:	add    DWORD PTR [eax],eax
  415a95:	add    BYTE PTR [ecx],0xca
  415a98:	and    BYTE PTR [eax],bl
  415a9a:	or     DWORD PTR [eax],eax
  415a9c:	add    ah,BYTE PTR [ebp-0x79]
  415a9f:	and    BYTE PTR [esp+edx*4],dl
  415aa2:	push   0x42228810
  415aa7:	or     DWORD PTR [edx],edx
  415aa9:	add    BYTE PTR [eax+0x0],ch
  415aac:	push   0x4
  415aae:	adc    DWORD PTR [edx-0x76],ecx
  415ab1:	js     0x415a35
  415ab3:	push   eax
  415ab4:	inc    eax
  415ab5:	or     dh,BYTE PTR [eax]
  415ab7:	pusha  
  415ab8:	and    DWORD PTR [eax],eax
  415aba:	xchg   esp,eax
  415abb:	add    BYTE PTR [ebx],al
  415abd:	add    DWORD PTR [ecx],esp
  415abf:	adc    DWORD PTR [eax+0x0],ebx
  415ac2:	nop
  415ac3:	sub    DWORD PTR [ecx],edx
  415ac5:	rol    BYTE PTR [ecx+edx*8+0x46],0x1b
  415aca:	and    DWORD PTR [eax],esp
  415acc:	inc    edx
  415acd:	push   es
  415ace:	rcl    BYTE PTR [eax-0x78],0x50
  415ad2:	shl    BYTE PTR [eax],1
  415ad4:	sub    al,0x20
  415ad6:	add    BYTE PTR [ecx+0x30e08402],0x40
  415add:	push   eax
  415ade:	add    BYTE PTR [edx],al
  415ae0:	and    BYTE PTR [edx+ecx*1],bh
  415ae3:	dec    ecx
  415ae4:	and    al,0xa
  415ae6:	or     BYTE PTR [ecx],dh
  415ae8:	mov    edx,0xa5c40b23
  415aed:	xor    BYTE PTR [eax-0x3c70f4d8],al
  415af3:	xchg   ecx,eax
  415af4:	or     BYTE PTR [edx+0x0],dh
  415af7:	add    BYTE PTR [ecx+0x55],al
  415afa:	mov    al,ds:0x8130c100
  415aff:	adc    BYTE PTR [eax+edx*1+0x4320046],al
  415b06:	push   ebx
  415b07:	inc    eax
  415b08:	inc    esp
  415b09:	add    BYTE PTR [edx+ecx*1],0x0
  415b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b0e:	inc    eax
  415b0f:	mov    eax,ds:0x910e805a
  415b14:	or     al,0x60
  415b16:	or     BYTE PTR gs:[ecx],al
  415b19:	rcl    BYTE PTR [edx],1
  415b1b:	or     al,0x0
  415b1d:	or     BYTE PTR [eax],ch
  415b1f:	add    BYTE PTR [ecx],0x11
  415b22:	out    0x30,eax
  415b24:	add    DWORD PTR [edx+eax*2+0x4474060],0x8
  415b2c:	inc    eax
  415b2d:	and    BYTE PTR [ebx],ah
  415b2f:	mov    eax,ds:0x10204101
  415b34:	inc    eax
  415b35:	xchg   ecx,eax
  415b36:	xchg   BYTE PTR [eax],bh
  415b38:	inc    ebp
  415b39:	ret    
  415b3a:	inc    edx
  415b3b:	mov    dh,BYTE PTR [eax]
  415b3d:	inc    eax
  415b3e:	dec    eax
  415b3f:	push   es
  415b40:	add    DWORD PTR [edx],edx
  415b42:	mov    BYTE PTR [ecx],al
  415b44:	adc    BYTE PTR es:[eax+0x10],dl
  415b48:	sbb    BYTE PTR [eax],dl
  415b4a:	test   BYTE PTR [edx],al
  415b4c:	or     al,0x51
  415b4e:	and    al,0x14
  415b50:	add    DWORD PTR [eax+eiz*1+0x322c4360],ecx
  415b57:	add    BYTE PTR [ecx+0x2406400],al
  415b5d:	inc    edx
  415b5e:	inc    edx
  415b5f:	or     BYTE PTR [eax],0x4
  415b62:	or     BYTE PTR [eax+eax*4-0x39fcd67e],al
  415b69:	inc    eax
  415b6a:	je     0x415afc
  415b6c:	adc    BYTE PTR [eax],dl
  415b6e:	add    BYTE PTR [eax+0xd],bh
  415b71:	enter  0xa0a0,0x2c
  415b75:	adc    al,BYTE PTR [eax]
  415b77:	add    edx,DWORD PTR [ecx+eiz*1]
  415b7a:	and    DWORD PTR [esi+0x7e042010],edx
  415b80:	add    BYTE PTR [eax],dl
  415b82:	sub    al,BYTE PTR [esi]
  415b84:	mov    BYTE PTR [eax+0x28],al
  415b87:	push   eax
  415b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b89:	xchg   esp,eax
  415b8a:	and    eax,ecx
  415b8c:	inc    esp
  415b8d:	push   ss
  415b8e:	dec    eax
  415b8f:	add    eax,DWORD PTR [edx+0x1000a22]
  415b95:	sbb    cl,BYTE PTR [esi]
  415b97:	jno    0x415be1
  415b99:	dec    eax
  415b9a:	rcl    DWORD PTR [eax],0x1
  415b9d:	inc    edx
  415b9e:	or     al,0x42
  415ba0:	lods   al,BYTE PTR ds:[esi]
  415ba1:	adc    BYTE PTR ds:0x44410c88,dl
  415ba7:	sub    dl,BYTE PTR [ecx-0x3bfebe00]
  415bad:	mov    al,ds:0x80428000
  415bb2:	sbb    al,0x80
  415bb4:	or     DWORD PTR [esi+eax*1+0x0],esp
  415bb8:	add    BYTE PTR [eax],al
  415bba:	and    al,BYTE PTR [eax-0x3cffbd7d]
  415bc0:	add    BYTE PTR [ebx],al
  415bc2:	add    BYTE PTR [edx],ch
  415bc4:	mov    BYTE PTR [eax+edx*2],al
  415bc7:	add    eax,0x83428a00
  415bcc:	or     al,0x85
  415bce:	ror    DWORD PTR [eax],0x0
  415bd1:	adc    BYTE PTR [ebx+0x10108520],dl
  415bd7:	xchg   esp,eax
  415bd8:	add    BYTE PTR [eax],al
  415bda:	add    BYTE PTR [eax+0x40],al
  415bdd:	inc    eax
  415bde:	xor    BYTE PTR [edx-0x5a],al
  415be1:	sub    al,BYTE PTR [ebx+0x50]
  415be4:	and    al,0xe4
  415be6:	add    al,0x1c
  415be8:	adc    BYTE PTR [edi],dh
  415bea:	add    BYTE PTR [eax],al
  415bec:	or     BYTE PTR [edi],ah
  415bee:	sbb    DWORD PTR [eax],esp
  415bf0:	mov    eax,DWORD PTR [eax+edx*1]
  415bf3:	add    al,BYTE PTR [eax+eax*4]
  415bf6:	add    al,0x88
  415bf8:	dec    eax
  415bf9:	sub    BYTE PTR [ecx-0x78],0x0
  415bfd:	lods   al,BYTE PTR ds:[esi]
  415bfe:	or     BYTE PTR [ecx],ah
  415c00:	add    BYTE PTR [esi+eax*1],dl
  415c03:	xchg   edx,eax
  415c04:	enter  0x2050,0x0
  415c08:	or     cl,BYTE PTR [eax]
  415c0a:	sub    BYTE PTR [eax],ch
  415c0c:	inc    eax
  415c0d:	and    ah,BYTE PTR [esi+0x5410408]
  415c13:	pusha  
  415c14:	add    eax,0x2e048484
  415c19:	add    BYTE PTR [edx],ah
  415c1b:	inc    eax
  415c1c:	pushf  
  415c1d:	push   es
  415c1e:	aad    0x0
  415c20:	inc    eax
  415c21:	bound  ecx,QWORD PTR [eax+0x24001804]
  415c27:	inc    edx
  415c28:	out    0x0,al
  415c2a:	add    edx,DWORD PTR [eax+0x40]
  415c2d:	mov    ds:0x801120,eax
  415c32:	arpl   WORD PTR [eax],ax
  415c34:	adc    BYTE PTR [ecx+0x60c50010],ah
  415c3a:	add    BYTE PTR [edx],0xa
  415c3d:	and    DWORD PTR [eax+0x20],eax
  415c40:	popa   
  415c41:	and    BYTE PTR [eax+edx*1+0x48020b0],0x1c
  415c49:	sub    BYTE PTR [eax+0x2308ea16],dl
  415c4f:	add    BYTE PTR [ecx+0x14001010],ch
  415c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c56:	sbb    eax,0x983a8010
  415c5b:	xor    BYTE PTR [edx-0x6cf7bfff],ah
  415c61:	inc    edx
  415c62:	mov    WORD PTR [ecx],ss
  415c64:	mov    BYTE PTR [eax+0x8],al
  415c67:	dec    eax
  415c68:	or     al,0x8
  415c6a:	mov    DWORD PTR [ecx+0x41005202],ebx
  415c70:	mov    cl,0x82
  415c72:	adc    edx,DWORD PTR [eax]
  415c74:	or     eax,0x94214001
  415c79:	add    eax,0xc9295c0
  415c7e:	and    bl,BYTE PTR [ecx]
  415c80:	sbb    ah,al
  415c82:	nop
  415c83:	add    al,0x1
  415c85:	add    BYTE PTR [ecx+0x20],cl
  415c88:	push   ecx
  415c89:	push   eax
  415c8a:	fadd   DWORD PTR [ecx]
  415c8c:	and    BYTE PTR [eax+eax*2],al
  415c8f:	adc    BYTE PTR ds:0x266020c,0x4
  415c96:	push   esp
  415c97:	sub    eax,DWORD PTR [ecx]
  415c99:	inc    esi
  415c9a:	push   ecx
  415c9b:	push   eax
  415c9c:	inc    eax
  415c9d:	or     DWORD PTR [ecx+0x8804ac0],eax
  415ca3:	xor    BYTE PTR [ebp+0x24000040],al
  415ca9:	leave  
  415caa:	adc    BYTE PTR [eax],al
  415cac:	add    cl,BYTE PTR [ecx]
  415cae:	adc    al,BYTE PTR [eax]
  415cb0:	push   cs
  415cb1:	add    BYTE PTR [eax+ebp*4+0x10],0x88
  415cb6:	outs   dx,BYTE PTR ds:[esi]
  415cb7:	or     al,BYTE PTR [esi]
  415cb9:	adc    BYTE PTR [eax+0x20],dl
  415cbc:	pop    edx
  415cbd:	add    dl,BYTE PTR [ecx-0x6f]
  415cc0:	das    
  415cc1:	sub    BYTE PTR [eax],al
  415cc3:	add    al,0x40
  415cc5:	imul   ecx,DWORD PTR [eax],0x9a00d920
  415ccb:	adc    BYTE PTR [eax],0x80
  415cce:	test   al,ah
  415cd0:	add    BYTE PTR [esi+esi*1],al
  415cd3:	add    al,0x82
  415cd5:	test   eax,0xe0a094
  415cda:	mov    al,ds:0x88a202ee
  415cdf:	sbb    al,0x88
  415ce1:	inc    edx
  415ce2:	add    BYTE PTR [eax+eax*1],al
  415ce5:	xor    ah,BYTE PTR [ebx+0x10]
  415ce8:	and    ebx,DWORD PTR [eax]
  415cea:	mov    ds:0x804625a9,eax
  415cef:	mov    eax,ds:0x3c9922c9
  415cf4:	add    BYTE PTR [edx+0x4082340],al
  415cfa:	sbb    BYTE PTR [eax+0x3a0],dh
  415d00:	push   esp
  415d01:	fmul   DWORD PTR [edx]
  415d03:	inc    ebp
  415d04:	inc    esp
  415d05:	daa    
  415d06:	and    BYTE PTR [ebx],dl
  415d08:	add    al,0x55
  415d0a:	adc    BYTE PTR [eax],cl
  415d0c:	inc    ebp
  415d0d:	inc    edi
  415d0e:	mov    al,ds:0x12500013
  415d13:	add    al,BYTE PTR [ecx+esi*1+0xa508640]
  415d1a:	mov    BYTE PTR [ecx-0x80],0x28
  415d1e:	push   0x49840046
  415d23:	or     BYTE PTR [eax-0x5bdff9dd],al
  415d29:	add    DWORD PTR [ecx],ecx
  415d2b:	arpl   WORD PTR [eax],dx
  415d2d:	sub    al,0x3
  415d2f:	add    al,0x2
  415d31:	jo     0x415cb7
  415d33:	sbb    ah,BYTE PTR [eax+0x40]
  415d36:	add    DWORD PTR [eax+0x4170a82],ecx
  415d3c:	(bad)  
  415d3d:	call   0x6044e006
  415d42:	add    BYTE PTR [eax+0x2615533],0xc0
  415d49:	and    al,0x30
  415d4b:	add    BYTE PTR [eax],cl
  415d4d:	add    DWORD PTR [eax+0xd13cd40],0x44
  415d54:	adc    BYTE PTR [ecx],bl
  415d56:	in     al,0x39
  415d58:	add    DWORD PTR [eax],0x91849102
  415d5e:	add    dh,BYTE PTR fs:[ebp-0x7f6deff7]
  415d65:	mov    al,0x23
  415d67:	rcl    BYTE PTR [edx],0x40
  415d6a:	ret    0x4804
  415d6d:	add    ah,BYTE PTR [eax-0x7caacb64]
  415d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d74:	add    BYTE PTR [eax+0x712101c],al
  415d7a:	or     BYTE PTR [edx],ah
  415d7c:	and    eax,0xc79c2a4
  415d81:	push   cs
  415d82:	add    al,BYTE PTR [ecx]
  415d84:	sbb    BYTE PTR [eax],0xe8
  415d87:	sub    bh,BYTE PTR [eax+0x2096000]
  415d8d:	mov    ch,0x54
  415d8f:	add    DWORD PTR [eax],edx
  415d91:	add    DWORD PTR [ecx],ebx
  415d93:	sub    BYTE PTR [eax],ah
  415d95:	mov    esp,0x60133222
  415d9a:	add    eax,DWORD PTR [eax+edx*4]
  415d9d:	sbb    BYTE PTR [eax],al
  415d9f:	or     al,BYTE PTR [eax+esi*4]
  415da2:	mov    ebp,DWORD PTR [ebx-0x7767bf4e]
  415da8:	nop
  415da9:	add    BYTE PTR [eax+0x0],cl
  415dac:	push   es
  415dad:	add    BYTE PTR [edx+0x48f0010],dh
  415db3:	sub    DWORD PTR [edx],esi
  415db5:	nop
  415db6:	inc    ecx
  415db7:	add    BYTE PTR [esp+edx*1],bh
  415dba:	mov    DWORD PTR [eax],esp
  415dbc:	and    dl,BYTE PTR [eax]
  415dbe:	mov    ebx,DWORD PTR [eax]
  415dc0:	test   BYTE PTR [ecx],cl
  415dc2:	pop    ss
  415dc3:	nop
  415dc4:	add    DWORD PTR [eax],eax
  415dc6:	push   edi
  415dc7:	add    BYTE PTR [ebx],0xa0
  415dca:	lea    esp,[ecx]
  415dcc:	inc    ebx
  415dcd:	sbb    BYTE PTR [eax+0x5020041],0x86
  415dd4:	mov    BYTE PTR [eax+0x8700844],cl
  415dda:	add    BYTE PTR [edx],cl
  415ddc:	adc    al,0x98
  415dde:	add    DWORD PTR [eax+0x20],ecx
  415de1:	add    cl,dl
  415de3:	mov    dl,0x4a
  415de5:	inc    edx
  415de6:	and    BYTE PTR [eax],al
  415de8:	push   es
  415de9:	adc    BYTE PTR [esi-0x7f75bf20],cl
  415def:	sub    BYTE PTR [eax+0x118182a],dl
  415df5:	xor    ah,ch
  415df7:	test   BYTE PTR [eax],bl
  415df9:	adc    BYTE PTR [eax+0x40021020],al
  415dff:	or     BYTE PTR [eax],dl
  415e01:	ret    0x9e12
  415e04:	mov    BYTE PTR [ecx],al
  415e06:	push   eax
  415e07:	inc    eax
  415e08:	xchg   ebp,eax
  415e09:	test   BYTE PTR [eax+0xe00152],dh
  415e0f:	daa    
  415e10:	fwait
  415e11:	das    
  415e12:	and    BYTE PTR [ebp-0x20],bl
  415e15:	test   BYTE PTR [esi],al
  415e17:	inc    eax
  415e18:	add    BYTE PTR [eax],0x23
  415e1b:	add    dl,bl
  415e1d:	adc    BYTE PTR [eax],al
  415e1f:	and    BYTE PTR ds:0xec039021,dh
  415e25:	add    bl,BYTE PTR [edx+0x61]
  415e28:	or     al,0x31
  415e2a:	inc    edx
  415e2b:	add    BYTE PTR [ecx],al
  415e2d:	sub    eax,0x80019070
  415e32:	adc    edx,DWORD PTR [edx+0xa213000]
  415e38:	add    BYTE PTR [eax],ah
  415e3a:	add    dl,BYTE PTR [eax]
  415e3c:	sub    BYTE PTR [eax+0x0],cl
  415e3f:	add    eax,ebp
  415e41:	dec    edx
  415e42:	push   es
  415e43:	and    DWORD PTR [eax],ebx
  415e45:	mov    al,0x28
  415e47:	add    DWORD PTR [eax],eax
  415e49:	or     BYTE PTR [ecx],cl
  415e4b:	xor    DWORD PTR [eax],eax
  415e4d:	and    esp,DWORD PTR [eax+0xb001e31]
  415e53:	or     BYTE PTR [ecx],0x10
  415e56:	add    BYTE PTR [eax],al
  415e58:	add    BYTE PTR ds:0x9a6105,ah
  415e5e:	xor    BYTE PTR [eax+0x22],al
  415e61:	xchg   esp,eax
  415e62:	test   BYTE PTR [ebp+0x20000900],al
  415e68:	adc    DWORD PTR [eax],eax
  415e6a:	add    BYTE PTR [edx],cl
  415e6c:	add    BYTE PTR [eax],al
  415e6e:	add    BYTE PTR [eax],al
  415e70:	and    al,0x14
  415e72:	adc    al,0xa
  415e74:	mov    bl,0x41
  415e76:	inc    ebx
  415e77:	mov    al,ds:0x891cc9
  415e7c:	or     BYTE PTR [eax+eax*4],dl
  415e7f:	xor    eax,0x291c8100
  415e84:	sub    cl,BYTE PTR [ecx+0x7920c050]
  415e8a:	xchg   BYTE PTR [ebx+0x40],bh
  415e8d:	test   BYTE PTR [eax],al
  415e8f:	and    BYTE PTR [eax+0x2d],dl
  415e92:	adc    al,0x2c
  415e94:	push   ss
  415e95:	add    BYTE PTR [ecx],al
  415e97:	popa   
  415e98:	add    BYTE PTR [edx],cl
  415e9a:	or     BYTE PTR [eax+0x0],dl
  415e9d:	or     al,0x0
  415e9f:	add    cl,BYTE PTR [edx+0x1446c42]
  415ea5:	add    BYTE PTR [eax+0x6],dl
  415ea8:	add    BYTE PTR [eax],ah
  415eaa:	add    DWORD PTR [eax+ecx*1+0x14],eax
  415eae:	adc    BYTE PTR [edx],dl
  415eb0:	xchg   esp,eax
  415eb1:	or     cl,BYTE PTR [eax+0x128018d0]
  415eb7:	adc    BYTE PTR [ecx],cl
  415eb9:	add    BYTE PTR [ecx+0x4420042],0x21
  415ec0:	add    BYTE PTR [eax],dl
  415ec2:	push   edi
  415ec3:	push   es
  415ec4:	mov    esp,0x122004a
  415ec9:	add    BYTE PTR [eax],al
  415ecb:	adc    BYTE PTR [ebx+0x44],dl
  415ece:	inc    eax
  415ecf:	add    BYTE PTR [edi],ah
  415ed1:	or     BYTE PTR [eax],dl
  415ed3:	or     dl,BYTE PTR [eax]
  415ed5:	add    al,al
  415ed7:	pusha  
  415ed8:	add    al,BYTE PTR [ecx]
  415eda:	mov    al,ds:0x88410048
  415edf:	push   esp
  415ee0:	dec    esp
  415ee1:	xchg   ecx,eax
  415ee2:	push   ss
  415ee3:	add    DWORD PTR [eax],ebp
  415ee5:	add    BYTE PTR [eax],cl
  415ee7:	add    BYTE PTR [eax+0x0],al
  415eea:	add    BYTE PTR [ecx],0x14
  415eed:	and    BYTE PTR [eax],cl
  415eef:	pop    ecx
  415ef0:	add    BYTE PTR [edx],al
  415ef2:	add    BYTE PTR [ecx+0x10],0x90
  415ef6:	mov    DWORD PTR [eax-0x7ebcefc0],ebx
  415efc:	or     DWORD PTR [ecx],edx
  415efe:	add    BYTE PTR [eax],al
  415f00:	xor    BYTE PTR [edx],cl
  415f02:	add    BYTE PTR [eax],0x80
  415f05:	add    al,BYTE PTR [eax]
  415f07:	or     BYTE PTR [ecx+0x10],ah
  415f0a:	add    BYTE PTR [ecx+0x41410004],al
  415f10:	push   eax
  415f11:	adc    BYTE PTR [eax],al
  415f13:	or     al,BYTE PTR [eax+0x14402004]
  415f19:	inc    esp
  415f1a:	and    BYTE PTR [ebp*4+0x20225004],cl
  415f21:	add    BYTE PTR [ebx+eax*1+0x92e0000],dl
  415f28:	cmp    BYTE PTR [eax],al
  415f2a:	dec    ebx
  415f2b:	add    eax,DWORD PTR [eax]
  415f2d:	or     DWORD PTR [edx+0xa530005],esi
  415f33:	bound  eax,QWORD PTR [eax+0x0]
  415f36:	and    al,0xeb
  415f38:	add    eax,DWORD PTR [eax]
  415f3a:	mov    al,ds:0x314304c9
  415f3f:	and    DWORD PTR [edx],eax
  415f41:	rol    ecx,0x0
  415f44:	add    DWORD PTR [eax],esp
  415f46:	xor    al,0x48
  415f48:	and    BYTE PTR [edx],cl
  415f4a:	pusha  
  415f4b:	add    DWORD PTR [eax],ecx
  415f4d:	or     BYTE PTR [eax+0x10101080],ah
  415f53:	adc    BYTE PTR [eax],al
  415f55:	or     al,0x80
  415f57:	add    BYTE PTR [eax],dl
  415f59:	add    DWORD PTR [eax],0x21a018
  415f5f:	add    BYTE PTR [eax+0x200a0142],cl
  415f65:	add    DWORD PTR [eax],0x0
  415f68:	mov    al,ds:0x20002441
  415f6d:	add    BYTE PTR [ecx-0x80],dh
  415f70:	adc    BYTE PTR [eax],ch
  415f72:	bound  eax,QWORD PTR [eax+0x0]
  415f75:	add    BYTE PTR [eax+eax*1],dl
  415f78:	test   al,0x20
  415f7a:	add    BYTE PTR [eax],dl
  415f7c:	add    BYTE PTR [eax],ch
  415f7e:	add    BYTE PTR [ebx-0x3d],0xd0
  415f82:	sub    eax,DWORD PTR [edx+0x51]
  415f85:	rol    BYTE PTR [eax+ecx*1+0x10],0xe1
  415f8a:	add    cl,dl
  415f8c:	add    DWORD PTR [ecx+0x1640203],ecx
  415f92:	je     0x415f94
  415f94:	add    al,0x2
  415f96:	xchg   esp,eax
  415f97:	xor    al,BYTE PTR [ebx]
  415f99:	and    BYTE PTR [eax],dh
  415f9b:	or     al,BYTE PTR [eax]
  415f9d:	add    DWORD PTR [eax+eax*1-0x7f],ecx
  415fa1:	add    dl,ah
  415fa3:	add    BYTE PTR [eax],al
  415fa5:	or     DWORD PTR [eax],edx
  415fa7:	adc    eax,0x8000
  415fac:	es push es
  415fae:	add    BYTE PTR [edx],dh
  415fb0:	add    DWORD PTR [eax],esp
  415fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fb3:	adc    BYTE PTR ds:0x60100010,dl
  415fb9:	and    al,0x9
  415fbb:	dec    edx
  415fbc:	inc    edx
  415fbd:	adc    eax,DWORD PTR [ecx+0x24]
  415fc0:	and    BYTE PTR [eax],ah
  415fc2:	add    dl,BYTE PTR [edx+0x2]
  415fc5:	mov    al,0x40
  415fc7:	add    DWORD PTR [eax],eax
  415fc9:	add    ah,BYTE PTR [eax]
  415fcb:	add    BYTE PTR [eax],al
  415fcd:	add    BYTE PTR [edi],dl
  415fcf:	or     dl,BYTE PTR [edx+0x0]
  415fd2:	xor    al,BYTE PTR [edx]
  415fd4:	or     eax,0x45030000
  415fd9:	add    BYTE PTR [eax],al
  415fdb:	xor    BYTE PTR [ebx+eax*4],ah
  415fde:	or     DWORD PTR [eax+0x0],ebp
  415fe1:	arpl   WORD PTR [edx+0x4],ax
  415fe4:	mov    BYTE PTR [eax],al
  415fe6:	bound  eax,QWORD PTR [eax+0x64e00]
  415fec:	pop    ecx
  415fed:	es xchg edx,eax
  415fef:	adc    BYTE PTR [eax],0x0
  415ff2:	add    BYTE PTR [edx+0x6],ah
  415ff5:	push   eax
  415ff6:	or     DWORD PTR [eax],edx
  415ff8:	pusha  
  415ff9:	add    BYTE PTR [ecx+0x1d2008d],ch
  415fff:	add    al,BYTE PTR [eax]
  416001:	add    al,BYTE PTR [eax]
  416003:	or     BYTE PTR [esp+eiz*2],al
  416006:	arpl   WORD PTR [eax+ecx*4],ax
  416009:	add    BYTE PTR [ecx],al
  41600b:	inc    ebp
  41600c:	xlat   BYTE PTR ds:[ebx]
  41600d:	add    DWORD PTR [eax+0x10814871],0xa00005c
  416017:	inc    ecx
  416018:	add    BYTE PTR [eax],ah
  41601a:	xchg   ebp,eax
  41601b:	mov    al,ds:0x410021c0
  416020:	or     al,0x21
  416022:	inc    ebx
  416023:	add    DWORD PTR [edx],eax
  416025:	add    bh,al
  416027:	adc    BYTE PTR [eax],dl
  416029:	add    eax,0x4000080
  41602e:	inc    edx
  41602f:	xor    BYTE PTR [eax],ch
  416031:	add    BYTE PTR [eax],al
  416033:	test   BYTE PTR [ecx-0x7e],ah
  416036:	or     BYTE PTR [eax],cl
  416038:	inc    eax
  416039:	ret    0xc40
  41603c:	add    DWORD PTR [eax+0x2],0x104208
  416043:	and    BYTE PTR [ecx+eax*1],al
  416046:	adc    dh,BYTE PTR [ebx-0x7bef54e8]
  41604c:	add    DWORD PTR [eax],eax
  41604e:	add    BYTE PTR [eax],ah
  416050:	adc    dl,BYTE PTR [edi+eax*1]
  416053:	add    BYTE PTR [eax+0x0],cl
  416056:	or     BYTE PTR [eax+eax*1+0x8100034],al
  41605d:	add    al,0x6
  41605f:	add    BYTE PTR [eax],al
  416061:	push   eax
  416062:	add    BYTE PTR [esi],ah
  416064:	and    eax,0x4041001d
  416069:	dec    ecx
  41606a:	add    BYTE PTR [eax],ah
  41606c:	inc    esi
  41606d:	add    BYTE PTR [eax],al
  41606f:	nop
  416070:	add    cl,ch
  416072:	add    BYTE PTR [eax],al
  416074:	add    BYTE PTR [eax+0x42],al
  416077:	add    BYTE PTR [eax+ecx*2+0x1],al
  41607b:	and    BYTE PTR [eax+0x18],ah
  416081:	or     BYTE PTR [eax+0x2],al
  416084:	push   eax
  416085:	jns    0x41609f
  416087:	xchg   esp,eax
  416088:	mov    al,BYTE PTR [ebx]
  41608a:	nop
  41608b:	add    BYTE PTR [eax],dl
  41608d:	rcr    BYTE PTR [ebp+0x0],0x80
  416091:	adc    BYTE PTR [ecx],al
  416093:	popa   
  416094:	dec    ecx
  416095:	add    BYTE PTR [ecx+eax*2],al
  416098:	inc    ebp
  416099:	enter  0x83,0x80
  41609d:	add    BYTE PTR [eax],dl
  41609f:	xor    DWORD PTR [eax],eax
  4160a1:	inc    eax
  4160a2:	mov    BYTE PTR [eax],al
  4160a4:	and    cl,BYTE PTR [esi]
  4160a6:	imul   eax,DWORD PTR [edx],0x10c800
  4160ac:	inc    ebp
  4160ad:	adc    BYTE PTR [eax],dl
  4160af:	mov    ds:0x40000000,al
  4160b4:	add    BYTE PTR [edx],al
  4160b6:	add    BYTE PTR [edi+0x6ce8410],al
  4160bc:	add    dh,BYTE PTR [ecx]
  4160be:	add    BYTE PTR [eax+0x46d02042],dl
  4160c4:	add    al,BYTE PTR [eax]
  4160c6:	mov    al,ds:0x202084b0
  4160cb:	add    BYTE PTR [eax],cl
  4160cd:	inc    ecx
  4160ce:	fadd   DWORD PTR [edx]
  4160d0:	add    BYTE PTR [eax+0x20],al
  4160d3:	add    BYTE PTR [eax],al
  4160d5:	mov    al,ds:0x2041c102
  4160da:	inc    eax
  4160db:	or     BYTE PTR [ebx+esi*2],al
  4160de:	arpl   WORD PTR [ecx],ax
  4160e0:	and    al,0x0
  4160e2:	and    BYTE PTR [eax],al
  4160e4:	add    al,0x61
  4160e6:	and    BYTE PTR [eax+0x0],ah
  4160e9:	and    BYTE PTR [eax],ah
  4160eb:	push   eax
  4160ec:	mov    al,ds:0x42070008
  4160f1:	add    al,0x5a
  4160f3:	dec    eax
  4160f4:	add    al,BYTE PTR [edx+eax*1]
  4160f7:	inc    eax
  4160f8:	add    BYTE PTR [eax+0x1],dl
  4160fb:	push   es
  4160fc:	dec    ecx
  4160fd:	fild   DWORD PTR [eax]
  4160ff:	add    al,BYTE PTR [esi]
  416101:	mov    WORD PTR [eax+0x40020840],fs
  416107:	add    BYTE PTR [eax],al
  416109:	add    BYTE PTR [eax],dl
  41610b:	add    BYTE PTR [eax],al
  41610d:	xor    al,dh
  41610f:	add    BYTE PTR [ecx],al
  416111:	adc    BYTE PTR [eax-0x7fecebfc],0x10
  416118:	adc    BYTE PTR [edx],al
  41611a:	add    BYTE PTR [ebx+eax*1],al
  41611d:	adc    BYTE PTR [eax+0xc152b5],al
  416123:	and    BYTE PTR [eax],ah
  416125:	adc    DWORD PTR [eax],eax
  416127:	add    BYTE PTR [ecx+0x18024115],al
  41612d:	mov    eax,ds:0xa29c102
  416132:	imul   eax,DWORD PTR ds:0xa0059000,0x50
  416139:	inc    eax
  41613a:	push   eax
  41613b:	add    BYTE PTR [eax+0x2000f220],al
  416141:	or     DWORD PTR [ebx],esp
  416143:	add    BYTE PTR [ecx],ch
  416145:	add    al,0x40
  416147:	or     BYTE PTR [edx],al
  416149:	adc    al,BYTE PTR [eax]
  41614b:	and    BYTE PTR [ecx+0x1],al
  41614e:	add    BYTE PTR [edx+eax*1],al
  416151:	and    BYTE PTR [ecx+edx*1+0x82501],0x80
  416159:	add    BYTE PTR [eax],al
  41615b:	adc    eax,0x0
  416160:	add    al,BYTE PTR [ecx]
  416162:	rcl    BYTE PTR [edi+0x0],0x51
  416166:	sub    al,BYTE PTR [eax]
  416168:	sub    BYTE PTR [ecx],al
  41616a:	add    al,0x1
  41616c:	add    BYTE PTR [ecx+eiz*1],al
  41616f:	add    BYTE PTR [eax-0x78],dl
  416172:	and    al,BYTE PTR [ebx+0x568020]
  416178:	inc    edx
  416179:	add    BYTE PTR [eax],dl
  41617b:	nop
  41617c:	inc    eax
  41617d:	sbb    BYTE PTR [eax],ah
  41617f:	or     al,0x88
  416181:	add    al,BYTE PTR [edx]
  416183:	push   ecx
  416184:	inc    eax
  416185:	add    BYTE PTR [ecx+esi*4],dh
  416188:	or     DWORD PTR [eax],ebp
  41618a:	inc    eax
  41618b:	add    al,BYTE PTR [eax+0x3222093]
  416191:	inc    eax
  416192:	shl    DWORD PTR [ebp+0x80006],0x41
  416199:	add    BYTE PTR [eax+0x70],0x52
  41619d:	and    DWORD PTR [edx+0x5],eax
  4161a0:	inc    eax
  4161a1:	or     al,BYTE PTR [ecx-0x3a]
  4161a4:	add    BYTE PTR [edx],al
  4161a6:	add    BYTE PTR [edx+edx*4],dh
  4161a9:	inc    ecx
  4161aa:	and    BYTE PTR [eax],cl
  4161ac:	and    dh,BYTE PTR [edx+ecx*1+0x49]
  4161b0:	test   BYTE PTR [eax],dl
  4161b2:	sbb    al,BYTE PTR [eax]
  4161b4:	inc    eax
  4161b5:	rcl    BYTE PTR [eax],0x10
  4161b8:	add    dl,BYTE PTR [eax]
  4161ba:	add    al,BYTE PTR [eax]
  4161bc:	fwait
  4161bd:	adc    al,0x48
  4161bf:	add    al,BYTE PTR [ebp-0x60]
  4161c2:	adc    BYTE PTR [eax],cl
  4161c4:	or     ch,cl
  4161c6:	or     BYTE PTR [ebx+0x41100062],0x61
  4161cd:	adc    BYTE PTR [ebx+0x20],dl
  4161d0:	add    DWORD PTR [eax],ecx
  4161d2:	inc    eax
  4161d3:	sbb    BYTE PTR [eax+0x0],al
  4161d6:	sub    BYTE PTR [edx],al
  4161d8:	pusha  
  4161d9:	add    DWORD PTR [eax],0x4000f068
  4161df:	loopne 0x4161f1
  4161e1:	add    BYTE PTR [edx],dh
  4161e3:	adc    BYTE PTR [edx],0x42
  4161e6:	add    esp,DWORD PTR [edx]
  4161e8:	add    al,BYTE PTR [eax]
  4161ea:	repnz dec eax
  4161ec:	add    DWORD PTR [eax+0x2],edx
  4161ef:	add    BYTE PTR [eax],0x8
  4161f2:	jbe    0x41620c
  4161f4:	add    BYTE PTR [ecx],0x0
  4161f7:	bound  esp,QWORD PTR [eax]
  4161f9:	adc    al,0xe
  4161fb:	add    al,0x51
  4161fd:	les    eax,FWORD PTR [eax]
  4161ff:	arpl   WORD PTR [eax+0x18500052],bp
  416205:	dec    ecx
  416206:	or     BYTE PTR [eax+0x10],al
  416209:	add    BYTE PTR [eax+eax*1],al
  41620c:	nop
  41620d:	push   es
  41620e:	or     DWORD PTR [esi+0x0],esp
  416211:	adc    BYTE PTR [eax+0x3088801],cl
  416217:	add    BYTE PTR [edx],al
  416219:	and    BYTE PTR [eax],al
  41621b:	and    al,0x10
  41621d:	adc    BYTE PTR [ebx],dl
  41621f:	or     BYTE PTR [eax],al
  416221:	and    BYTE PTR [eax],al
  416223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416224:	jo     0x416228
  416226:	xor    al,0x0
  416228:	add    DWORD PTR [ecx+eax*1-0x6d],edx
  41622c:	adc    al,0x49
  41622e:	add    BYTE PTR [ecx],al
  416230:	xchg   edx,eax
  416231:	add    BYTE PTR [ebx+0x10],ah
  416234:	and    al,0x81
  416236:	adc    BYTE PTR [esi],al
  416238:	add    BYTE PTR [edx],al
  41623a:	add    BYTE PTR [edx],al
  41623c:	adc    BYTE PTR [eax],al
  41623e:	inc    edi
  41623f:	add    BYTE PTR [eax+0x88202],dl
  416245:	test   al,0x80
  416247:	or     ecx,DWORD PTR [edx]
  416249:	sbb    DWORD PTR [eax+0xd85840],eax
  41624f:	add    al,0x20
  416251:	add    al,BYTE PTR [esi]
  416253:	add    BYTE PTR [edx-0x20],al
  416256:	adc    bh,bl
  416258:	jo     0x41626c
  41625a:	sub    eax,DWORD PTR [eax]
  41625c:	and    al,BYTE PTR [eax]
  41625e:	adc    DWORD PTR [eax],eax
  416260:	add    BYTE PTR [esp+eax*4],cl
  416263:	add    BYTE PTR [eax],al
  416265:	add    BYTE PTR [ebx],ah
  416267:	add    BYTE PTR [edx+0x13],al
  41626a:	sub    BYTE PTR [esp+edx*2],al
  41626d:	inc    eax
  41626e:	add    BYTE PTR [ebx],al
  416270:	lahf   
  416271:	add    dh,cl
  416273:	add    ch,BYTE PTR [ecx-0x80]
  416276:	inc    eax
  416277:	or     BYTE PTR [eax],0xc0
  41627a:	mov    al,ds:0x43520102
  41627f:	add    al,0x30
  416281:	and    BYTE PTR [eax+eax*1],0x43
  416285:	add    BYTE PTR [edx-0x80],ah
  416288:	inc    ebp
  416289:	bound  eax,QWORD PTR [eax]
  41628b:	add    al,0x50
  41628d:	les    eax,FWORD PTR [edx]
  41628f:	adc    BYTE PTR [eax-0x80],dl
  416292:	mov    DWORD PTR [esi],edx
  416294:	add    al,BYTE PTR [esi]
  416296:	add    DWORD PTR [ecx+0x0],eax
  416299:	add    DWORD PTR [eax],eax
  41629b:	add    BYTE PTR [eax],0x4
  41629e:	push   es
  41629f:	adc    BYTE PTR [eax],ah
  4162a1:	add    DWORD PTR [ecx],edx
  4162a3:	push   eax
  4162a4:	or     BYTE PTR [eax],al
  4162a6:	adc    DWORD PTR [eax+0x71b8441],ebx
  4162ac:	inc    eax
  4162ad:	push   ecx
  4162ae:	inc    eax
  4162af:	bound  eax,QWORD PTR [ebx]
  4162b1:	add    BYTE PTR [ebp+0x20],dl
  4162b4:	add    BYTE PTR [eax+eax*8],al
  4162b7:	or     DWORD PTR [eax+eax*1+0x450ce5a4],ecx
  4162be:	add    DWORD PTR ds:0x2001000,0xe0cc
  4162c8:	add    BYTE PTR [eax],al
  4162ca:	nop
  4162cb:	add    BYTE PTR [esi],al
  4162cd:	rol    BYTE PTR [eax],0x20
  4162d0:	and    BYTE PTR [eax+0x6d02003],al
  4162d6:	stos   BYTE PTR es:[edi],al
  4162d7:	and    DWORD PTR [ecx],eax
  4162d9:	add    BYTE PTR [eax+0x2],al
  4162dc:	xor    BYTE PTR [ebx-0x42],al
  4162df:	add    BYTE PTR [eax+eax*1],al
  4162e2:	xchg   ecx,eax
  4162e3:	push   eax
  4162e4:	sbb    BYTE PTR [ecx-0x40],ah
  4162e7:	inc    ecx
  4162e8:	mov    al,ds:0x800ac0c
  4162ed:	push   edx
  4162ee:	add    BYTE PTR [ecx],ah
  4162f0:	add    DWORD PTR [eax],edx
  4162f2:	inc    esp
  4162f3:	inc    ecx
  4162f4:	add    BYTE PTR [eax],cl
  4162f6:	inc    eax
  4162f7:	or     DWORD PTR [eax],edx
  4162f9:	adc    BYTE PTR [ecx+0x1a008200],0x41
  416300:	add    BYTE PTR [eax],0x9
  416303:	push   eax
  416304:	push   eax
  416305:	add    DWORD PTR [eax],eax
  416307:	and    DWORD PTR [edx],eax
  416309:	adc    BYTE PTR [eax],al
  41630b:	add    BYTE PTR [eax],0x90
  41630e:	add    BYTE PTR [ecx+0x4],ah
  416311:	shl    DWORD PTR [edx],0x24
  416314:	inc    eax
  416315:	add    DWORD PTR [eax],eax
  416317:	adc    DWORD PTR [edx],edx
  416319:	inc    ecx
  41631a:	add    BYTE PTR [eax],al
  41631c:	push   ecx
  41631d:	inc    eax
  41631e:	add    BYTE PTR [eax],0x0
  416321:	and    DWORD PTR [ecx+0x2894c284],eax
  416327:	add    BYTE PTR [eax+0x1],dl
  41632a:	add    BYTE PTR [edi],al
  41632c:	add    cl,BYTE PTR [eax]
  41632e:	and    BYTE PTR [eax-0x1b],cl
  416331:	add    BYTE PTR [eax],cl
  416333:	add    eax,DWORD PTR [eax]
  416335:	push   ss
  416336:	inc    ebx
  416337:	add    BYTE PTR [ecx+0x12],dl
  41633a:	add    BYTE PTR [ecx+ebx*1+0x12],dl
  41633e:	add    BYTE PTR [eax+edx*1+0x18],ah
  416342:	mov    ds:0x8008d210,al
  416347:	add    al,0x4
  416349:	inc    eax
  41634a:	popa   
  41634b:	and    ah,al
  41634d:	adc    DWORD PTR [eax],ecx
  41634f:	add    BYTE PTR [eax],dl
  416351:	add    BYTE PTR [esp+edx*1-0x797cff00],al
  416358:	adc    al,0x1a
  41635a:	add    BYTE PTR [eax+0x10893030],al
  416360:	add    al,0x35
  416362:	cmp    BYTE PTR [ebp-0x7dff71f4],bl
  416368:	inc    ecx
  416369:	sub    BYTE PTR [eax],cl
  41636b:	adc    BYTE PTR [edx+0xb094049],dl
  416371:	or     BYTE PTR [eax],al
  416373:	adc    dl,BYTE PTR [esi-0x80]
  416376:	cmp    eax,0xa000c541
  41637b:	and    BYTE PTR [eax],cl
  41637d:	or     BYTE PTR [eax],al
  41637f:	add    BYTE PTR [ecx+0x28],dl
  416382:	adc    al,al
  416384:	add    cl,al
  416386:	fwait
  416387:	add    BYTE PTR [eax],al
  416389:	xor    BYTE PTR [ecx],al
  41638b:	add    al,0xf1
  41638d:	inc    edx
  41638e:	loopne 0x4163c2
  416390:	add    BYTE PTR [ecx+0x4509080],ah
  416396:	inc    eax
  416397:	sub    BYTE PTR [eax],cl
  416399:	add    DWORD PTR [eax-0x7d],ecx
  41639c:	add    BYTE PTR [eax],dl
  41639e:	add    BYTE PTR [eax],al
  4163a0:	inc    eax
  4163a1:	add    eax,0x41011f51
  4163a6:	leave  
  4163a7:	add    al,0x1
  4163a9:	add    BYTE PTR [ecx+0xc],al
  4163ac:	xchg   esi,eax
  4163ad:	or     BYTE PTR [edx+0xa020006],al
  4163b3:	adc    BYTE PTR [esi],al
  4163b5:	or     DWORD PTR [eax+0xa],eax
  4163b8:	add    al,0x8
  4163ba:	inc    esp
  4163bb:	mov    BYTE PTR [ebp+0x0],al
  4163be:	add    al,BYTE PTR [eax+0x60]
  4163c1:	popa   
  4163c2:	adc    BYTE PTR [edx],al
  4163c4:	add    BYTE PTR [eax],cl
  4163c6:	add    BYTE PTR [eax],al
  4163c8:	add    al,0x2
  4163ca:	add    ecx,edx
  4163cc:	add    BYTE PTR [eax-0x7fff9efe],dh
  4163d2:	push   es
  4163d3:	pop    edx
  4163d4:	inc    eax
  4163d5:	and    al,0x0
  4163d7:	add    ah,BYTE PTR [edx+0x3]
  4163da:	ret    
  4163db:	inc    ecx
  4163dc:	lock xor BYTE PTR [edx],al
  4163df:	adc    BYTE PTR [eax+0x200844],0xa0
  4163e6:	add    DWORD PTR [eax+0xa],eax
  4163e9:	add    BYTE PTR [ebx+0x10],al
  4163ec:	add    BYTE PTR [edx+0x810a410],al
  4163f2:	add    al,0x40
  4163f4:	inc    eax
  4163f5:	push   ss
  4163f6:	push   eax
  4163f7:	inc    ecx
  4163f8:	inc    edx
  4163f9:	adc    BYTE PTR [ecx],al
  4163fb:	js     0x416449
  4163fd:	add    BYTE PTR [eax+edx*4],cl
  416400:	add    BYTE PTR [eax],al
  416402:	pop    esp
  416403:	add    DWORD PTR [edx],eax
  416405:	add    DWORD PTR [edx+0x1],edx
  416408:	nop
  416409:	add    dl,BYTE PTR [eax]
  41640b:	and    BYTE PTR [eax+0x8],0x1
  41640f:	adc    cl,al
  416411:	add    BYTE PTR [eax+0x4202300],dl
  416417:	adc    ah,BYTE PTR [eax]
  416419:	add    BYTE PTR [eax],0xa4
  41641c:	mov    BYTE PTR [edx],al
  41641e:	nop
  41641f:	inc    ecx
  416420:	add    BYTE PTR [eax+0x20c90880],ah
  416426:	inc    ecx
  416427:	xchg   edi,eax
  416428:	add    BYTE PTR [eax+0x9],al
  41642b:	add    BYTE PTR [edx],bl
  41642d:	inc    eax
  41642e:	add    dl,BYTE PTR [eax]
  416430:	arpl   WORD PTR ds:0x2002,ax
  416436:	inc    eax
  416437:	add    al,0x58
  416439:	adc    al,BYTE PTR [eax]
  41643b:	mov    DWORD PTR [eax],eax
  41643d:	mov    BYTE PTR [edx],al
  41643f:	cdq    
  416440:	add    BYTE PTR [ecx],al
  416442:	inc    ecx
  416443:	add    BYTE PTR [eax],al
  416445:	add    BYTE PTR [ecx],al
  416447:	enter  0x6,0x80
  41644b:	add    al,0x22
  41644d:	add    BYTE PTR [eax],0x4d
  416450:	and    BYTE PTR ds:0xa0520324,al
  416456:	mov    ds:0x6c230242,al
  41645b:	or     eax,0x28000001
  416460:	add    BYTE PTR [ebp+0x4],al
  416463:	add    BYTE PTR [edx+0x48880802],al
  416469:	dec    esp
  41646a:	add    al,BYTE PTR ds:0x4830
  416470:	sbb    al,BYTE PTR [eax+0x40200001]
  416476:	mov    al,ds:0x25824112
  41647b:	or     DWORD PTR [eax],eax
  41647d:	adc    BYTE PTR [eax],al
  41647f:	inc    eax
  416480:	or     al,BYTE PTR [eax]
  416482:	shl    DWORD PTR [eax],0x4
  416485:	push   ecx
  416486:	add    BYTE PTR [ecx],al
  416488:	adc    BYTE PTR [edx],al
  41648a:	add    BYTE PTR [eax],al
  41648c:	add    BYTE PTR [eax+ecx*2+0x3000004],0x40
  416494:	or     BYTE PTR [eax],ah
  416496:	add    eax,DWORD PTR [eax]
  416498:	add    BYTE PTR [ecx],ah
  41649a:	add    al,BYTE PTR [ecx+0xe800828]
  4164a0:	xchg   BYTE PTR [edx+eax*1],dh
  4164a3:	adc    BYTE PTR [eax],al
  4164a5:	add    BYTE PTR ds:0x41551,0x48
  4164ac:	or     al,BYTE PTR [esi]
  4164ae:	push   ecx
  4164af:	inc    eax
  4164b0:	add    eax,0x2025308
  4164b5:	adc    cl,cl
  4164b7:	and    al,ah
  4164b9:	push   ebx
  4164ba:	nop
  4164bb:	add    BYTE PTR [edx],dl
  4164bd:	nop
  4164be:	add    BYTE PTR [eax],al
  4164c0:	add    BYTE PTR [eax+0x0],ch
  4164c3:	add    BYTE PTR [eax],al
  4164c5:	adc    BYTE PTR [eax+0x8d0240],al
  4164cb:	test   DWORD PTR [edx+eiz*1],eax
  4164ce:	add    BYTE PTR [eax],al
  4164d0:	or     BYTE PTR [eax+0x8406002],al
  4164d6:	add    al,BYTE PTR [eax+0x6]
  4164d9:	ror    DWORD PTR [ebx],0x48
  4164dc:	and    BYTE PTR [edx],al
  4164de:	or     BYTE PTR [ecx-0x60],dh
  4164e1:	adc    BYTE PTR [ecx],cl
  4164e3:	add    BYTE PTR [eax],dh
  4164e5:	inc    eax
  4164e6:	push   es
  4164e7:	pusha  
  4164e8:	add    BYTE PTR [eax],al
  4164ea:	and    al,BYTE PTR [eax]
  4164ec:	inc    eax
  4164ed:	dec    ecx
  4164ee:	add    BYTE PTR [esi],al
  4164f0:	xchg   dl,ah
  4164f2:	rol    DWORD PTR [eax],0x6
  4164f5:	add    al,BYTE PTR [eax]
  4164f7:	add    al,0x80
  4164f9:	pop    es
  4164fa:	add    BYTE PTR ds:0x41056500,al
  416500:	add    DWORD PTR [ebx],esi
  416502:	add    ah,BYTE PTR [edi]
  416504:	add    dl,BYTE PTR ds:0x104c0204
  41650a:	add    BYTE PTR [eax],al
  41650c:	add    BYTE PTR [eax],al
  41650e:	adc    BYTE PTR [eax],cl
  416510:	inc    eax
  416511:	add    BYTE PTR [edx],ah
  416513:	xchg   ecx,eax
  416514:	sub    DWORD PTR [edi+0x40742a00],0x20410004
  41651e:	inc    eax
  41651f:	or     BYTE PTR [ebx+0x5000282c],ah
  416525:	add    BYTE PTR [ecx],dh
  416527:	inc    eax
  416528:	dec    eax
  416529:	ret    0x2480
  41652c:	add    DWORD PTR [ecx],esp
  41652e:	add    al,BYTE PTR [eax]
  416530:	push   eax
  416531:	push   es
  416532:	add    eax,0x58840064
  416537:	add    BYTE PTR [eax+eiz*1],cl
  41653a:	add    BYTE PTR [eax],al
  41653c:	xor    al,0x14
  41653e:	inc    ebp
  41653f:	and    al,BYTE PTR ds:0x4c0000
  416545:	inc    eax
  416546:	test   BYTE PTR [ecx],al
  416548:	add    DWORD PTR [eax-0x2ef6be94],eax
  41654e:	dec    esp
  41654f:	adc    al,BYTE PTR [eax-0x3f1bffff]
  416555:	mov    WORD PTR [eax],es
  416557:	and    DWORD PTR [eax+0x13],eax
  41655a:	push   eax
  41655b:	sbb    dl,al
  41655d:	xchg   DWORD PTR [eax],esp
  41655f:	add    BYTE PTR [eax+eax*1],al
  416562:	add    BYTE PTR [ecx+0x5d],al
  416565:	add    al,BYTE PTR [eax-0x7bf9eff1]
  41656b:	inc    eax
  41656c:	and    BYTE PTR [ecx+0x48],al
  41656f:	ror    BYTE PTR [eax+0x8402e],0x0
  416576:	add    al,BYTE PTR [eax+0x28]
  416579:	popa   
  41657a:	mov    eax,ds:0x140000
  41657f:	add    eax,0x10122004
  416584:	and    BYTE PTR [eax],al
  416586:	add    BYTE PTR [eax],dl
  416588:	ror    BYTE PTR [eax],0x2
  41658b:	add    BYTE PTR [eax+0x400c3041],ah
  416591:	test   BYTE PTR [edi*1+0x20600000],al
  416598:	adc    DWORD PTR [edi+0x306ec91],edx
  41659e:	adc    BYTE PTR [eax],cl
  4165a0:	and    DWORD PTR [ecx+0x0],eax
  4165a3:	and    BYTE PTR [edx-0x15],al
  4165a6:	add    BYTE PTR [eax],dl
  4165a8:	add    BYTE PTR [eax],0x0
  4165ab:	and    bl,BYTE PTR [ecx]
  4165ad:	inc    eax
  4165ae:	add    BYTE PTR [edx],al
  4165b0:	sub    DWORD PTR [ebx+0x102110],ebp
  4165b6:	inc    eax
  4165b7:	add    DWORD PTR [eax],edx
  4165b9:	mov    al,0x0
  4165bb:	jo     0x4165bd
  4165bd:	adc    BYTE PTR [edx],cl
  4165bf:	mov    eax,ds:0xb07ba248
  4165c4:	inc    esi
  4165c5:	rol    DWORD PTR [ecx+0x40],0x87
  4165c9:	and    BYTE PTR [eax],al
  4165cb:	add    BYTE PTR [eax],al
  4165cd:	inc    ecx
  4165ce:	and    dl,BYTE PTR [eax]
  4165d0:	add    BYTE PTR [eax+0x12],al
  4165d3:	and    BYTE PTR [eax],al
  4165d5:	add    BYTE PTR [edx],al
  4165d7:	add    al,BYTE PTR [eax]
  4165d9:	adc    BYTE PTR [ecx],dl
  4165db:	add    BYTE PTR [edx+0x10],dl
  4165de:	mov    cl,0x24
  4165e0:	mov    BYTE PTR [eax],dl
  4165e2:	xchg   ecx,eax
  4165e3:	add    BYTE PTR [eax+0x0],ah
  4165e6:	gs inc ecx
  4165e8:	add    DWORD PTR [eax+0x604920c2],esp
  4165ee:	add    BYTE PTR [eax],al
  4165f0:	push   ebp
  4165f1:	dec    ebx
  4165f2:	inc    esi
  4165f3:	sbb    al,0x0
  4165f5:	add    al,0xc0
  4165f7:	add    al,BYTE PTR [eax-0x7fdeedfc]
  4165fd:	add    al,ch
  4165ff:	add    eax,0x8400a0
  416604:	add    BYTE PTR [eax],dl
  416606:	dec    ecx
  416607:	push   ebp
  416608:	inc    ecx
  416609:	push   eax
  41660a:	add    BYTE PTR [esp+eax*1],ah
  41660d:	and    BYTE PTR [edx],dh
  41660f:	add    BYTE PTR [edx],ah
  416611:	add    BYTE PTR [eax+eax*2-0x5fdbfeb6],al
  416618:	xor    BYTE PTR [eax],dh
  41661a:	add    BYTE PTR [edx],cl
  41661c:	add    BYTE PTR [eax],al
  41661e:	push   esp
  41661f:	inc    ecx
  416620:	add    cl,BYTE PTR [ecx-0x73]
  416623:	nop
  416624:	pusha  
  416625:	push   es
  416626:	add    eax,0x10007061
  41662b:	xchg   DWORD PTR [ecx+eax*1+0x0],edx
  41662f:	add    BYTE PTR [ecx],0x20
  416632:	and    al,0x1
  416634:	mov    BYTE PTR [ebx],al
  416636:	and    dh,BYTE PTR [eax]
  416638:	inc    ebx
  416639:	add    BYTE PTR [eax],ah
  41663b:	add    al,BYTE PTR [edx]
  41663d:	or     DWORD PTR [esp+0x0],ecx
  416641:	adc    al,BYTE PTR [edx+0x30100801]
  416647:	sbb    DWORD PTR [eax],esp
  416649:	add    BYTE PTR [eax],al
  41664b:	adc    BYTE PTR [ecx],al
  41664d:	adc    al,0x61
  41664f:	adc    DWORD PTR ds:0x80102048,0xc0764043
  416659:	add    ah,al
  41665b:	xchg   DWORD PTR [esp+eax*1+0x4],eax
  41665f:	loopne 0x4165e2
  416661:	mov    eax,ds:0x14080620
  416666:	shl    BYTE PTR [eax],0x80
  416669:	or     al,0x40
  41666b:	add    DWORD PTR [esi+0x0],eax
  41666e:	add    BYTE PTR [eax+eax*1+0x60],al
  416672:	add    BYTE PTR [eax+0x0],al
  416675:	mov    BYTE PTR [esp+edx*4+0x0],cl
  416679:	add    ecx,DWORD PTR [eax]
  41667b:	add    cl,BYTE PTR [esp+esi*1]
  41667e:	adc    BYTE PTR [eax+0x48048000],al
  416684:	add    BYTE PTR [ebx+0x20],al
  416687:	add    BYTE PTR [ebx],0x9
  41668a:	or     BYTE PTR [edx],ah
  41668c:	enter  0x6000,0x80
  416690:	test   DWORD PTR [ecx],esi
  416692:	or     al,BYTE PTR [edx]
  416694:	and    DWORD PTR [ecx],ecx
  416696:	or     al,0x52
  416698:	add    al,0x1
  41669a:	adc    BYTE PTR [eax],0x62
  41669d:	add    BYTE PTR [ebx],al
  41669f:	sbb    eax,0x4001203
  4166a4:	add    eax,0x100241
  4166a9:	push   ebp
  4166aa:	mov    dl,0x50
  4166ac:	les    edx,FWORD PTR [edx+0x2000204]
  4166b2:	or     DWORD PTR [eax+eax*1],edx
  4166b5:	sbb    ch,BYTE PTR [ecx]
  4166b7:	add    DWORD PTR [eax],ecx
  4166b9:	add    BYTE PTR [eax+eax*2],0x40
  4166bd:	rcl    BYTE PTR [edx+0x20],1
  4166c0:	and    BYTE PTR [ecx-0x7b],ah
  4166c3:	add    BYTE PTR [ecx-0x7fdffd80],0x10
  4166ca:	add    BYTE PTR [edx],cl
  4166cc:	or     BYTE PTR [edx+0x8],al
  4166cf:	inc    ebx
  4166d0:	test   BYTE PTR [ecx+0x2800081],dl
  4166d6:	add    BYTE PTR [ecx-0x15fbaffd],ch
  4166dc:	inc    ecx
  4166dd:	add    DWORD PTR [edi],ebp
  4166df:	xor    BYTE PTR [eax],al
  4166e1:	add    DWORD PTR [edi+0x1024056],ebx
  4166e7:	add    al,BYTE PTR [ecx]
  4166e9:	adc    BYTE PTR [eax],al
  4166eb:	add    BYTE PTR [ecx+0x0],bl
  4166ee:	add    BYTE PTR [edx],al
  4166f0:	and    BYTE PTR [ecx-0x80],bl
  4166f3:	add    BYTE PTR [eax+0x4],al
  4166f6:	or     DWORD PTR [eax+0x1003810],esp
  4166fc:	rol    DWORD PTR [eax+0x30000],0x40
  416703:	xor    eax,0x401c1812
  416708:	add    edx,DWORD PTR [ecx]
  41670a:	add    al,BYTE PTR [eax+0x3]
  41670d:	add    ecx,eax
  41670f:	add    cl,BYTE PTR ds:0x41001884
  416715:	mov    DWORD PTR [eax],ecx
  416717:	inc    ecx
  416718:	inc    eax
  416719:	add    BYTE PTR [eax+eax*1+0x20202470],al
  416720:	add    BYTE PTR [eax+0x40181123],cl
  416726:	and    dl,BYTE PTR [eax-0x62]
  416729:	add    BYTE PTR [ecx+eax*1-0x37],dh
  41672d:	add    BYTE PTR [eax],dl
  41672f:	pop    ecx
  416730:	add    BYTE PTR [eax+eax*4],cl
  416733:	add    BYTE PTR [ecx+0x410200],ah
  416739:	or     al,0xa1
  41673b:	or     BYTE PTR [ecx+0x3100080],0x0
  416742:	or     al,BYTE PTR [ecx]
  416744:	and    DWORD PTR [esi+0x0],0xc1008800
  41674b:	test   BYTE PTR [esi],dl
  41674d:	lea    ebp,[edx]
  41674f:	ret    0x1002
  416752:	add    BYTE PTR [ecx+0x48020217],al
  416758:	push   es
  416759:	test   DWORD PTR [eax],ebx
  41675b:	sub    BYTE PTR [ebx+eiz*2],0x14
  41675f:	rcl    BYTE PTR [eax],0x41
  416762:	es pop ds
  416764:	or     al,0xc0
  416766:	xchg   ecx,eax
  416767:	sub    BYTE PTR [eax],al
  416769:	inc    eax
  41676a:	inc    esi
  41676b:	and    al,BYTE PTR [edx]
  41676d:	add    DWORD PTR [eax],esi
  41676f:	add    BYTE PTR [eax],al
  416771:	add    BYTE PTR [eax],al
  416773:	add    BYTE PTR [ecx-0x79],dl
  416776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416777:	add    BYTE PTR [edx],cl
  416779:	sbb    DWORD PTR [edx],ebp
  41677b:	inc    edi
  41677c:	or     eax,0x280aa0
  416781:	inc    eax
  416782:	add    BYTE PTR [eax],ah
  416784:	cmp    DWORD PTR [ebp+0x40a81120],ecx
  41678a:	add    cl,BYTE PTR [edx]
  41678c:	or     BYTE PTR [eax],dl
  41678e:	add    BYTE PTR [eax+eax*4],al
  416791:	or     DWORD PTR [eax],edx
  416793:	add    BYTE PTR [edx-0x5effffe0],cl
  416799:	loopne 0x4167bf
  41679b:	inc    ecx
  41679c:	adc    BYTE PTR [eax],dl
  41679e:	or     BYTE PTR [esi+0x14],al
  4167a1:	or     BYTE PTR [ecx+0x12],al
  4167a4:	add    BYTE PTR [eax+0xa245],ah
  4167aa:	loop   0x4167ec
  4167ac:	mov    al,ds:0xe1421401
  4167b1:	add    BYTE PTR [eax-0x7c],al
  4167b4:	push   esp
  4167b5:	and    al,BYTE PTR [edx+ecx*1+0x1111478]
  4167bc:	sbb    BYTE PTR [eax],al
  4167be:	sub    DWORD PTR [edx+0x902001],eax
  4167c4:	add    BYTE PTR [eax],dl
  4167c6:	and    BYTE PTR [eax],0x0
  4167c9:	mov    ds:0x11068408,al
  4167ce:	add    BYTE PTR [eax+0x8a10986],al
  4167d4:	adc    BYTE PTR [esp+esi*1],al
  4167d7:	inc    eax
  4167d8:	inc    ebp
  4167d9:	adc    BYTE PTR [ecx+0x2],dl
  4167dc:	les    eax,FWORD PTR [edx+0x54100120]
  4167e2:	loope  0x4167e4
  4167e4:	mov    al,0x8
  4167e6:	and    BYTE PTR [edx-0x60],al
  4167e9:	add    BYTE PTR [ebx],dl
  4167eb:	add    al,BYTE PTR [ecx]
  4167ed:	add    dl,BYTE PTR [eax]
  4167ef:	add    BYTE PTR [eax],al
  4167f1:	inc    eax
  4167f2:	add    BYTE PTR [ecx],cl
  4167f4:	add    DWORD PTR [edx],esi
  4167f6:	add    BYTE PTR [eax],al
  4167f8:	add    BYTE PTR [edx],al
  4167fa:	add    DWORD PTR [eax+0x10808008],0x20114121
  416804:	add    BYTE PTR [eax+0x20],al
  416807:	add    BYTE PTR ds:0x2aa8a066,al
  41680d:	add    cl,bl
  41680f:	add    BYTE PTR [eax-0x7ffb7500],ah
  416815:	add    BYTE PTR [eax],dl
  416817:	add    BYTE PTR [eax+eax*4],ah
  41681a:	add    BYTE PTR [edx-0x7e],dl
  41681d:	adc    eax,DWORD PTR [eax+0x102b0100]
  416823:	adc    BYTE PTR [eax],dl
  416825:	add    BYTE PTR [eax],dl
  416827:	add    BYTE PTR [edx+0x1c000043],dl
  41682d:	or     DWORD PTR [eax+ecx*1+0x2b],0x4a41510a
  416835:	add    BYTE PTR [ecx+eax*1],al
  416838:	adc    BYTE PTR [ecx-0x2b],al
  41683b:	inc    esp
  41683c:	add    al,BYTE PTR [ebx]
  41683e:	sbb    edx,DWORD PTR [eax+0x46]
  416841:	test   BYTE PTR ss:[eax],al
  416844:	inc    ebp
  416845:	add    BYTE PTR [eax],dh
  416847:	adc    BYTE PTR [eax],al
  416849:	add    BYTE PTR [eax+0x41],al
  41684c:	or     al,BYTE PTR [ecx+ebx*1]
  41684f:	add    DWORD PTR es:[edi],esp
  416852:	add    BYTE PTR [eax],0x70
  416855:	adc    BYTE PTR [edx-0x38],ch
  416858:	add    DWORD PTR [eax],0x41
  41685b:	add    al,BYTE PTR [eax]
  41685d:	add    al,0x5a
  41685f:	add    BYTE PTR [ebp+0xb614400],bl
  416865:	mov    DWORD PTR [ebp+0x40],edx
  416868:	sbb    al,BYTE PTR [ebp+0x4]
  41686b:	add    BYTE PTR [eax],0x10
  41686e:	jne    0x416872
  416870:	inc    esp
  416871:	add    al,BYTE PTR [eax]
  416873:	adc    BYTE PTR [edx],al
  416875:	mov    BYTE PTR [edx],al
  416877:	add    DWORD PTR [ebx],ecx
  416879:	cmp    al,0x0
  41687b:	inc    al
  41687d:	inc    ecx
  41687e:	and    al,ch
  416880:	sbb    BYTE PTR [edx],cl
  416882:	or     eax,0x80100081
  416887:	add    DWORD PTR [eax],eax
  416889:	mov    DWORD PTR [eax+eax*1+0x529010c0],esp
  416890:	and    BYTE PTR [eax+0x61000940],al
  416896:	mov    BYTE PTR ds:0x405008b0,cl
  41689c:	int    0x0
  41689e:	adc    BYTE PTR [ecx+0x42],ch
  4168a1:	sub    al,0x40
  4168a3:	add    BYTE PTR [eax],0x0
  4168a6:	or     BYTE PTR ds:0x42032c,bl
  4168ac:	adc    BYTE PTR [eax],al
  4168ae:	add    cl,al
  4168b0:	add    dl,BYTE PTR [edx+eax*2+0x100020]
  4168b7:	or     ah,0x84
  4168ba:	add    DWORD PTR [eax+0x20],eax
  4168bd:	adc    BYTE PTR [ebx+eax*1],al
  4168c0:	inc    eax
  4168c1:	sbb    eax,0xa0006048
  4168c7:	add    ah,BYTE PTR [eax]
  4168c9:	add    DWORD PTR [eax+0x79],ecx
  4168cc:	add    eax,DWORD PTR [ebp+0x11a12000]
  4168d2:	add    BYTE PTR [ecx],al
  4168d4:	add    BYTE PTR [ecx],al
  4168d6:	cwde   
  4168d7:	bound  ebx,QWORD PTR [ecx+eiz*1]
  4168da:	cmp    BYTE PTR [eax],al
  4168dc:	add    BYTE PTR [ecx+0x23],cl
  4168df:	add    BYTE PTR [eax+0x20],al
  4168e2:	and    BYTE PTR [eax+0x8251a82],dh
  4168e8:	add    DWORD PTR [eax],eax
  4168ea:	sbb    BYTE PTR [ecx+eax*2],ch
  4168ed:	inc    edx
  4168ee:	add    BYTE PTR [ecx],al
  4168f0:	es cwde 
  4168f2:	rol    BYTE PTR [ecx+0x0],0x0
  4168f6:	(bad)
  4168f9:	and    dh,BYTE PTR [ebx+0x0]
  4168fc:	push   ecx
  4168fd:	push   ebx
  4168fe:	and    BYTE PTR [ecx-0x76],ah
  416901:	rol    DWORD PTR [eax],0x0
  416904:	add    BYTE PTR [eax+eax*1],al
  416907:	adc    DWORD PTR [ebx+edx*1],esi
  41690a:	add    BYTE PTR [ebx],al
  41690c:	inc    eax
  41690d:	add    BYTE PTR [eax+0x2],al
  416910:	add    BYTE PTR [edx+eax*2],al
  416913:	inc    eax
  416914:	add    BYTE PTR [edx],cl
  416916:	add    DWORD PTR [eax],eax
  416918:	daa    
  416919:	xor    BYTE PTR [ecx],0x1
  41691c:	or     BYTE PTR [edx],ah
  41691e:	dec    edx
  41691f:	xchg   ecx,eax
  416920:	inc    eax
  416921:	adc    cl,BYTE PTR [eax]
  416923:	and    BYTE PTR [edx+0x0],ah
  416926:	add    BYTE PTR [eax+0x1200200],al
  41692c:	clc    
  41692d:	leave  
  41692e:	add    BYTE PTR [edx],al
  416930:	and    BYTE PTR [eax+0x34],al
  416933:	add    BYTE PTR [eax],ch
  416935:	add    BYTE PTR [eax],al
  416937:	or     BYTE PTR [esp+eax*1+0x6],bl
  41693b:	push   edx
  41693c:	add    DWORD PTR [eax],eax
  41693e:	xor    BYTE PTR [eax],al
  416940:	push   es
  416941:	inc    edi
  416942:	add    DWORD PTR [ecx+0x0],eax
  416945:	sbb    ah,BYTE PTR [eax]
  416947:	add    BYTE PTR [eax+0x1850084],cl
  41694d:	add    al,0x0
  41694f:	add    BYTE PTR [ecx+eax*2-0x3edf6c00],0x81
  416957:	add    DWORD PTR [eax],eax
  416959:	add    BYTE PTR [eax+0x4048081],cl
  41695f:	xor    BYTE PTR [edx],al
  416961:	jno    0x41696b
  416963:	add    DWORD PTR [eax],0x810c4142
  416969:	inc    ebp
  41696a:	and    BYTE PTR [eax+0x69020834],cl
  416970:	inc    eax
  416971:	xor    DWORD PTR [eax+0x11644041],esi
  416977:	inc    ecx
  416978:	shl    BYTE PTR [esi],0x81
  41697b:	add    BYTE PTR [esi],dl
  41697d:	adc    BYTE PTR [ecx],al
  41697f:	add    BYTE PTR [ecx+0x0],al
  416982:	inc    edx
  416983:	add    BYTE PTR ds:0x40c40316,bh
  416989:	or     BYTE PTR [eax],dl
  41698b:	add    cl,BYTE PTR [ecx]
  41698d:	add    BYTE PTR [edx+0x44],dh
  416990:	test   DWORD PTR [eax-0x60],eax
  416993:	mov    eax,0x4306000
  416998:	inc    edx
  416999:	cmp    BYTE PTR [eax],dl
  41699b:	inc    ecx
  41699c:	popa   
  41699d:	pop    eax
  41699e:	adc    BYTE PTR [edx+0x8],cl
  4169a1:	adc    BYTE PTR [eax],ah
  4169a3:	or     al,BYTE PTR [eax]
  4169a5:	add    al,BYTE PTR [eax]
  4169a7:	add    eax,DWORD PTR [eax]
  4169a9:	pop    eax
  4169aa:	add    BYTE PTR [eax],al
  4169ac:	sbb    BYTE PTR [ecx+0xa50ab30],dl
  4169b2:	adc    DWORD PTR [eax],esp
  4169b4:	mov    eax,ds:0x1a0001
  4169b9:	(bad)  
  4169ba:	add    BYTE PTR [ecx],al
  4169bc:	add    edx,DWORD PTR [eax]
  4169be:	and    BYTE PTR [eax-0x7c],ah
  4169c1:	or     BYTE PTR [eax],al
  4169c3:	add    DWORD PTR [ecx+0x2],edx
  4169c6:	and    BYTE PTR [eax+0x0],cl
  4169c9:	adc    al,0x0
  4169cb:	add    BYTE PTR [eax],0x64
  4169ce:	add    BYTE PTR [eax],dl
  4169d0:	add    BYTE PTR [eax],ah
  4169d2:	and    BYTE PTR [eax-0x37ffdffc],cl
  4169d8:	(bad)  
  4169d9:	adc    BYTE PTR [eax],al
  4169db:	sub    BYTE PTR [eax],ah
  4169dd:	adc    BYTE PTR [ecx+0xc],0x12
  4169e1:	push   ecx
  4169e2:	xchg   esp,eax
  4169e3:	adc    BYTE PTR [ecx+eiz*1],al
  4169e6:	add    DWORD PTR [eax+0x0],eax
  4169e9:	dec    esp
  4169ea:	adc    dl,BYTE PTR [eax]
  4169ec:	add    BYTE PTR [eax],al
  4169ee:	popa   
  4169ef:	dec    eax
  4169f0:	test   DWORD PTR [eax],edx
  4169f2:	sbb    DWORD PTR [eax+eax*4],0x4028100
  4169f9:	mov    al,BYTE PTR [edx-0x5bf2f968]
  4169ff:	adc    DWORD PTR [ebx],0x20300009
  416a05:	and    DWORD PTR [eax+0x41814c00],eax
  416a0b:	inc    edx
  416a0c:	inc    esp
  416a0d:	add    BYTE PTR [edx+eax*1+0x4],al
  416a11:	and    BYTE PTR [edx-0x7dfaa977],dl
  416a17:	add    BYTE PTR [edx],al
  416a19:	add    BYTE PTR [ecx+0x1900062],al
  416a1f:	inc    eax
  416a20:	add    DWORD PTR [eax+0x40],esp
  416a23:	inc    ecx
  416a24:	inc    ecx
  416a25:	inc    eax
  416a26:	add    BYTE PTR [eax],0x40
  416a29:	add    DWORD PTR [edx],eax
  416a2b:	pop    es
  416a2c:	add    BYTE PTR [eax+0x42204042],dl
  416a32:	add    dl,BYTE PTR [eax+eax*1]
  416a35:	add    ah,BYTE PTR [ebx+0xd11002]
  416a3b:	inc    edx
  416a3c:	pusha  
  416a3d:	nop
  416a3e:	inc    eax
  416a3f:	sub    eax,0x440040
  416a44:	add    al,BYTE PTR [eax]
  416a46:	and    ebx,ecx
  416a48:	add    DWORD PTR [ebp+0x0],eax
  416a4b:	sub    al,BYTE PTR [ebp-0x7baebd6b]
  416a51:	add    BYTE PTR [ecx],al
  416a53:	or     BYTE PTR [eax],al
  416a55:	add    BYTE PTR [eax],al
  416a57:	add    BYTE PTR [ecx+0x0],ah
  416a5a:	inc    eax
  416a5b:	add    DWORD PTR [eax],eax
  416a5d:	add    BYTE PTR [eax],0x0
  416a60:	test   DWORD PTR [edi+0x1000100],eax
  416a66:	inc    ebx
  416a67:	add    BYTE PTR [eax],al
  416a69:	inc    ebx
  416a6a:	popa   
  416a6b:	and    BYTE PTR [edx],al
  416a6d:	inc    edx
  416a6e:	add    BYTE PTR [edx+0x4],al
  416a71:	inc    eax
  416a72:	add    BYTE PTR [ecx+0x0],al
  416a75:	inc    esp
  416a76:	add    BYTE PTR [ecx+eax*1],0x0
  416a7a:	or     al,0x0
  416a7c:	inc    ebp
  416a7d:	add    al,BYTE PTR [edx]
  416a7f:	(bad)  
  416a80:	or     al,0x4c
  416a82:	mov    eax,ds:0x82008801
  416a87:	or     BYTE PTR [edx],ch
  416a89:	inc    eax
  416a8a:	adc    al,BYTE PTR [ecx]
  416a8c:	add    BYTE PTR [eax],dl
  416a8e:	dec    ecx
  416a8f:	add    BYTE PTR [eax],0x4c
  416a92:	add    al,BYTE PTR [ecx]
  416a94:	sub    ch,al
  416a96:	add    BYTE PTR [edx+0x218600],ch
  416a9c:	xor    BYTE PTR [esp+eax*1],0x4
  416aa0:	add    BYTE PTR [eax+eax*1],al
  416aa3:	add    BYTE PTR [eax+0x2001011],0xc0
  416aaa:	add    BYTE PTR [ecx+eax*1],al
  416aad:	rol    DWORD PTR [eax],0x25
  416ab0:	adc    al,0xa8
  416ab2:	jl     0x416ab4
  416ab4:	sbb    al,0x94
  416ab6:	cwde   
  416ab7:	adc    dl,BYTE PTR [eax]
  416ab9:	pusha  
  416aba:	adc    al,cl
  416abc:	or     al,0x0
  416abe:	inc    esp
  416abf:	rol    BYTE PTR [edx],0x20
  416ac2:	adc    BYTE PTR [eax],cl
  416ac4:	add    BYTE PTR [ecx],al
  416ac6:	adc    BYTE PTR [esi],ah
  416ac8:	outs   dx,BYTE PTR ds:[esi]
  416ac9:	test   BYTE PTR [ecx-0x70],ah
  416acc:	add    BYTE PTR [eax+0x4],al
  416acf:	push   ss
  416ad0:	mov    BYTE PTR [edx+eax*4+0x71],ah
  416ad4:	inc    eax
  416ad5:	add    DWORD PTR [eax],0xda010080
  416adb:	inc    ebx
  416adc:	and    BYTE PTR es:[eax],al
  416adf:	shl    DWORD PTR [eax-0x80],cl
  416ae2:	lods   al,BYTE PTR ds:[esi]
  416ae3:	test   al,0x1
  416ae5:	or     BYTE PTR [edx],al
  416ae7:	add    DWORD PTR [eax-0x7bffff00],ebp
  416aed:	xchg   edx,eax
  416aee:	mov    dl,dl
  416af0:	inc    ecx
  416af1:	inc    esp
  416af2:	add    BYTE PTR [esi],ah
  416af4:	inc    eax
  416af5:	inc    ecx
  416af6:	pushf  
  416af7:	fs mov ah,0x0
  416afa:	add    DWORD PTR [edx+0x46],edx
  416afd:	or     BYTE PTR [edx],al
  416aff:	add    BYTE PTR [ebx+0x70],dl
  416b02:	mov    BYTE PTR [edx],ah
  416b04:	inc    eax
  416b05:	inc    ecx
  416b06:	adc    BYTE PTR [eax+0x41],ah
  416b09:	add    dl,dl
  416b0b:	add    ch,BYTE PTR [ecx+ebx*2+0x80404]
  416b12:	add    BYTE PTR [eax],dl
  416b14:	sub    dl,al
  416b16:	add    BYTE PTR [eax],dl
  416b18:	adc    ebp,DWORD PTR [eax]
  416b1a:	push   0x45814030
  416b1f:	adc    DWORD PTR [eax+0x200a8801],eax
  416b25:	and    BYTE PTR [edx],ch
  416b27:	add    BYTE PTR [edx-0x7f],al
  416b2a:	add    BYTE PTR [eax],0x0
  416b2d:	add    BYTE PTR [eax],0x61
  416b30:	add    BYTE PTR [esp+eax*2+0x0],ah
  416b34:	sub    BYTE PTR [eax],al
  416b36:	sbb    BYTE PTR [edx+ebp*4],ah
  416b39:	add    al,BYTE PTR [eax]
  416b3b:	add    esp,DWORD PTR [edx+0x2040351]
  416b41:	sbb    DWORD PTR [ebx],esp
  416b43:	test   al,0x1
  416b45:	ret    0x4880
  416b48:	cdq    
  416b49:	mov    BYTE PTR [ecx],0x0
  416b4c:	add    BYTE PTR [esi],dl
  416b4e:	push   es
  416b4f:	add    BYTE PTR [eax+eax*1],ah
  416b52:	add    BYTE PTR [eax],al
  416b54:	adc    BYTE PTR ds:0x81540891,ah
  416b5a:	xor    al,BYTE PTR [ebx]
  416b5c:	adc    BYTE PTR [eax-0x7d7df000],bh
  416b62:	inc    eax
  416b63:	adc    BYTE PTR [eax],al
  416b65:	add    BYTE PTR [eax],al
  416b67:	or     DWORD PTR [edx],eax
  416b69:	or     BYTE PTR [edx],cl
  416b6b:	add    BYTE PTR ds:0x4d02,cl
  416b71:	inc    ecx
  416b72:	sbb    BYTE PTR [eax],0x1
  416b75:	and    BYTE PTR [eax],al
  416b77:	add    BYTE PTR [edx+0x3b5600d],cl
  416b7d:	add    BYTE PTR [ebx],ah
  416b7f:	mov    al,BYTE PTR [eax]
  416b81:	add    DWORD PTR [edx],0x120106c0
  416b87:	xor    BYTE PTR [eax],al
  416b89:	adc    BYTE PTR [ebx],dh
  416b8b:	and    al,0x1
  416b8d:	(bad)  
  416b8e:	and    al,0x0
  416b90:	add    BYTE PTR [eax],al
  416b92:	add    BYTE PTR [ecx],bl
  416b94:	add    BYTE PTR [ecx+eax*2],cl
  416b97:	and    BYTE PTR [esi],dl
  416b99:	add    BYTE PTR [ecx-0x8],dl
  416b9c:	add    BYTE PTR [eax],al
  416b9e:	adc    BYTE PTR [eax+0x0],dh
  416ba1:	add    DWORD PTR [edx+0x2],eax
  416ba4:	add    ah,BYTE PTR [eax]
  416ba6:	pop    ebp
  416ba7:	add    BYTE PTR [eax-0x80],al
  416baa:	inc    ecx
  416bab:	add    BYTE PTR [eax],dl
  416bad:	push   cs
  416bae:	add    BYTE PTR [edx+eax*1],al
  416bb1:	adc    BYTE PTR [edx],cl
  416bb3:	dec    eax
  416bb4:	sbb    BYTE PTR [ecx+0x0],al
  416bb7:	test   al,0x43
  416bb9:	add    BYTE PTR [edx+eax*1+0x12],al
  416bbd:	inc    eax
  416bbe:	in     al,0x8
  416bc0:	and    BYTE PTR [ebx-0x7f],0x40
  416bc4:	popa   
  416bc5:	mov    WORD PTR [eax],es
  416bc7:	dec    eax
  416bc8:	dec    eax
  416bc9:	inc    eax
  416bca:	pop    edx
  416bcb:	push   0x82872044
  416bd0:	adc    BYTE PTR [eax],al
  416bd2:	add    DWORD PTR [edx+0x51],eax
  416bd5:	adc    al,0x35
  416bd7:	sub    BYTE PTR [ecx+eax*1],al
  416bda:	add    BYTE PTR [eax],dl
  416bdc:	add    BYTE PTR [eax],ah
  416bde:	and    al,BYTE PTR [ecx]
  416be0:	inc    eax
  416be1:	sub    DWORD PTR [eax+0x71],eax
  416be4:	adc    ah,BYTE PTR [eax+0x10004112]
  416bea:	add    BYTE PTR [ebx+eax*8],al
  416bed:	add    BYTE PTR [eax-0x70],dl
  416bf0:	add    BYTE PTR [edx+0x1a002460],al
  416bf6:	add    BYTE PTR [ebx],cl
  416bf8:	add    BYTE PTR [eax],ah
  416bfa:	rol    BYTE PTR [eax],0x0
  416bfd:	add    DWORD PTR [eax],eax
  416bff:	and    BYTE PTR [eax],cl
  416c01:	add    BYTE PTR [eax+0x9154941],al
  416c07:	and    BYTE PTR [ebx+0x4],ah
  416c0a:	inc    eax
  416c0b:	add    BYTE PTR [eax+0x2],ah
  416c0e:	xor    al,0x0
  416c10:	add    BYTE PTR [ecx],dl
  416c12:	sub    BYTE PTR [ecx+0x4],0x9
  416c16:	dec    esp
  416c17:	add    cl,BYTE PTR [ebx+ebx*1]
  416c1a:	add    BYTE PTR [eax+eax*4-0x80],al
  416c1e:	sub    DWORD PTR [edx],esp
  416c20:	and    BYTE PTR fs:[eax],0x20
  416c24:	add    dl,BYTE PTR [eax+eax*2]
  416c27:	inc    eax
  416c28:	inc    ecx
  416c29:	add    dl,BYTE PTR [ebx]
  416c2b:	mov    al,ds:0x2028410
  416c30:	add    BYTE PTR [eax],al
  416c32:	add    al,BYTE PTR [eax+eax*1]
  416c35:	mov    ds:0x840021c,al
  416c3a:	pop    es
  416c3b:	add    BYTE PTR [eax],al
  416c3d:	add    BYTE PTR [esp+edx*1],al
  416c40:	add    al,0x20
  416c42:	sub    al,0x2
  416c44:	or     BYTE PTR [eax],al
  416c46:	push   eax
  416c47:	jb     0x416c4b
  416c49:	add    BYTE PTR [ecx+0x0],dl
  416c4c:	xchg   ecx,eax
  416c4d:	add    al,0x38
  416c4f:	add    BYTE PTR ds:0x10668429,al
  416c55:	add    BYTE PTR [ecx],ch
  416c57:	pusha  
  416c58:	pusha  
  416c59:	inc    eax
  416c5a:	add    ah,BYTE PTR [eax]
  416c5c:	pop    eax
  416c5d:	inc    eax
  416c5e:	popa   
  416c5f:	inc    edx
  416c60:	add    BYTE PTR [eax],al
  416c62:	add    BYTE PTR [eax+0x7],ah
  416c65:	adc    BYTE PTR [eax],al
  416c67:	and    BYTE PTR [esi],ah
  416c69:	adc    DWORD PTR [eax+0x94040],eax
  416c6f:	popa   
  416c70:	dec    eax
  416c71:	ret    0xc463
  416c74:	xchg   BYTE PTR [ecx],al
  416c76:	add    eax,DWORD PTR [eax]
  416c78:	adc    DWORD PTR [ecx+eax*2],0x12090100
  416c7f:	add    DWORD PTR [ebx],esp
  416c81:	add    al,0x11
  416c83:	and    BYTE PTR [eax],al
  416c85:	add    BYTE PTR [eax],al
  416c87:	mov    es,WORD PTR [edx]
  416c89:	add    BYTE PTR [eax],al
  416c8b:	and    BYTE PTR [ebp+eax*1+0x94fc],cl
  416c92:	inc    eax
  416c93:	push   es
  416c94:	or     al,BYTE PTR [edx]
  416c96:	add    BYTE PTR [eax+0x4],0x0
  416c9a:	push   es
  416c9b:	inc    eax
  416c9c:	add    BYTE PTR [eax],al
  416c9e:	add    BYTE PTR ds:0xe200180,dl
  416ca4:	push   0x0
  416ca6:	add    al,BYTE PTR [eax]
  416ca8:	mov    BYTE PTR [eax+eax*2],al
  416cab:	imul   edx,DWORD PTR [eax+eiz*1],0x10000180
  416cb2:	and    BYTE PTR [eax+eax*2],0x80
  416cb6:	inc    edx
  416cb7:	and    al,0x2b
  416cb9:	and    al,BYTE PTR [edx+0x39224021]
  416cbf:	sub    BYTE PTR [eax],al
  416cc1:	or     eax,DWORD PTR [edx]
  416cc3:	add    BYTE PTR [eax],ah
  416cc5:	add    BYTE PTR [edx],dl
  416cc7:	add    BYTE PTR [eax+0x40800],dl
  416ccd:	and    BYTE PTR [eax],al
  416ccf:	add    BYTE PTR [ecx+0xa],dl
  416cd2:	inc    eax
  416cd3:	or     eax,0x4020020
  416cd8:	nop
  416cd9:	repnz add BYTE PTR [edx],0x1
  416cdd:	adc    BYTE PTR [eax],al
  416cdf:	adc    dl,al
  416ce1:	push   es
  416ce2:	add    BYTE PTR [ecx-0x60],0x49
  416ce6:	add    BYTE PTR [ebx],al
  416ce8:	rol    DWORD PTR [esi+ebp*8+0x61004000],0x8
  416cf0:	mov    DWORD PTR [eax],eax
  416cf2:	inc    eax
  416cf3:	or     BYTE PTR [eax+0x26],dl
  416cf6:	adc    BYTE PTR [eax+0x12],al
  416cf9:	add    al,0x45
  416cfb:	or     al,0x2
  416cfd:	mov    BYTE PTR [esi+edx*1],0x10
  416d01:	and    BYTE PTR [esi+0x300450],al
  416d07:	add    DWORD PTR [eax],eax
  416d09:	xor    BYTE PTR [ecx],dh
  416d0b:	mov    al,ds:0x10050402
  416d10:	add    BYTE PTR [eax],al
  416d12:	inc    ecx
  416d13:	and    BYTE PTR [eax],al
  416d15:	add    BYTE PTR [ecx-0x5dff6400],bl
  416d1b:	add    BYTE PTR [edx],cl
  416d1d:	adc    DWORD PTR [edx],ecx
  416d1f:	add    BYTE PTR [eax],ah
  416d21:	and    BYTE PTR ds:0xa0020103,al
  416d27:	add    eax,0x1410000
  416d2c:	xor    al,0x21
  416d2e:	or     al,0x14
  416d30:	inc    eax
  416d31:	nop
  416d32:	and    BYTE PTR [eax+0x40000000],al
  416d38:	add    BYTE PTR [edx-0x20],ah
  416d3b:	add    BYTE PTR [eax],al
  416d3d:	add    ah,0x4
  416d40:	add    BYTE PTR [eax],0x60
  416d43:	add    BYTE PTR [ebx],al
  416d45:	add    BYTE PTR [eax+0x5040a9],dl
  416d4b:	sbb    BYTE PTR [edx-0x7d],0x1
  416d4f:	add    BYTE PTR [eax+0x1421030],al
  416d55:	push   eax
  416d56:	loopne 0x416d63
  416d58:	pusha  
  416d59:	adc    DWORD PTR [eax+eax*1+0x40004201],ebx
  416d60:	mov    BYTE PTR [eax+0xc0241],0x14
  416d67:	inc    esp
  416d68:	push   es
  416d69:	add    BYTE PTR [eax],al
  416d6b:	or     BYTE PTR [edx],al
  416d6d:	add    DWORD PTR [ecx+0x2c],0x420f60
  416d74:	add    BYTE PTR [edx+0x14180471],ch
  416d7a:	mov    ds:0x52811050,al
  416d7f:	add    BYTE PTR [edx+0x20450041],ah
  416d85:	inc    eax
  416d86:	data16 add BYTE PTR [edx+0x41690a],al
  416d8d:	or     BYTE PTR [eax],al
  416d8f:	inc    ecx
  416d90:	adc    BYTE PTR [edx],al
  416d92:	mov    eax,ds:0x100700a
  416d97:	and    al,BYTE PTR [eax]
  416d99:	and    BYTE PTR [ecx+0x61],al
  416d9c:	or     ebx,DWORD PTR [edx]
  416d9e:	add    BYTE PTR [eax],cl
  416da0:	inc    esp
  416da1:	inc    ebx
  416da2:	ror    DWORD PTR [eax],0x3
  416da5:	inc    eax
  416da6:	jo     0x416dbb
  416da8:	xchg   DWORD PTR [eax],eax
  416daa:	(bad)  
  416dab:	or     BYTE PTR [edx],cl
  416dad:	inc    eax
  416dae:	add    BYTE PTR [eax],dl
  416db0:	adc    BYTE PTR [ecx],al
  416db2:	and    BYTE PTR [eax+0xc50042],al
  416db8:	add    BYTE PTR [edi+0x0],dl
  416dbb:	inc    ebx
  416dbc:	adc    DWORD PTR [eax-0x80],ecx
  416dbf:	in     al,0x40
  416dc1:	add    dl,al
  416dc3:	pusha  
  416dc4:	inc    eax
  416dc5:	add    BYTE PTR [edx],al
  416dc7:	add    cl,dh
  416dc9:	add    BYTE PTR [edi+0x38],al
  416dcc:	sbb    DWORD PTR [eax],ebx
  416dce:	sub    BYTE PTR [edx-0x7f],dh
  416dd1:	(bad)  
  416dd3:	add    BYTE PTR [edx],cl
  416dd5:	add    eax,0x80608120
  416dda:	ret    0x2
  416ddd:	add    BYTE PTR [eax],al
  416ddf:	add    BYTE PTR [eax],al
  416de1:	add    BYTE PTR [ecx+0x20],al
  416de4:	add    BYTE PTR [eax],bl
  416de6:	inc    esp
  416de7:	push   cs
  416de8:	add    BYTE PTR [eax+0x10],al
  416deb:	inc    eax
  416dec:	add    BYTE PTR [edx],al
  416dee:	inc    edx
  416def:	add    BYTE PTR [eax],al
  416df1:	and    bl,BYTE PTR [ecx+0x2100200]
  416df7:	add    al,0x40
  416df9:	inc    eax
  416dfa:	push   esi
  416dfb:	or     BYTE PTR [ebx+0x0],dl
  416dfe:	adc    al,0x0
  416e00:	dec    eax
  416e01:	popa   
  416e02:	add    BYTE PTR [eax],al
  416e04:	adc    eax,0x43000004
  416e09:	adc    DWORD PTR [eax],eax
  416e0b:	inc    eax
  416e0c:	xor    al,BYTE PTR [ecx]
  416e0e:	inc    ecx
  416e0f:	or     al,0x6d
  416e11:	xchg   edx,eax
  416e12:	push   edx
  416e13:	inc    edx
  416e14:	add    BYTE PTR [eax],al
  416e16:	inc    ecx
  416e17:	into   
  416e18:	sub    dl,al
  416e1a:	add    eax,0x32128000
  416e1f:	add    BYTE PTR [eax],al
  416e21:	mov    edx,0x1416121
  416e26:	add    BYTE PTR [ecx],al
  416e28:	sbb    edx,DWORD PTR [ecx]
  416e2a:	add    dl,BYTE PTR [eax+0x400040d2]
  416e30:	sub    al,0x10
  416e32:	add    ah,BYTE PTR [eax+0x10800000]
  416e38:	add    DWORD PTR [eax],0xc1000881
  416e3e:	add    BYTE PTR [eax],dl
  416e40:	add    BYTE PTR [eax],al
  416e42:	enter  0x0,0x0
  416e46:	add    DWORD PTR [eax],esi
  416e48:	inc    esp
  416e49:	pop    ss
  416e4a:	inc    ebx
  416e4b:	add    al,0x56
  416e4d:	push   ss
  416e4e:	int3   
  416e4f:	inc    ecx
  416e50:	add    BYTE PTR [eax],cl
  416e52:	add    al,0x4
  416e54:	add    eax,DWORD PTR [ecx]
  416e56:	add    DWORD PTR [edx+0x244280],eax
  416e5c:	add    al,0x23
  416e5e:	add    BYTE PTR [ecx],0x50
  416e61:	add    BYTE PTR [ecx],dl
  416e63:	xchg   edx,eax
  416e64:	or     BYTE PTR [eax+0x0],al
  416e67:	add    BYTE PTR [eax],dl
  416e69:	adc    BYTE PTR [eax+0x3000442],0x82
  416e70:	add    BYTE PTR [eax],al
  416e72:	add    BYTE PTR [eax],al
  416e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e75:	add    DWORD PTR [ebp-0x53990782],edx
  416e7b:	inc    edx
  416e7c:	dec    edx
  416e7d:	pop    esp
  416e7e:	int    0xc2
  416e80:	fsub   QWORD PTR [esi]
  416e82:	xchg   edx,eax
  416e83:	xchg   esi,eax
  416e84:	xchg   edx,eax
  416e85:	div    DWORD PTR [edi-0x640493b7]
  416e8b:	out    0x71,eax
  416e8d:	(bad)  
  416e8e:	jmp    0x787e491b
  416e93:	xchg   DWORD PTR [eax+0x5b],esi
  416e96:	mov    dl,0xd7
  416e98:	mov    BYTE PTR [edx],ch
  416e9a:	enter  0xf4a4,0xe
  416e9e:	shl    bh,cl
  416ea0:	lds    ecx,FWORD PTR [eax]
  416ea2:	fsub   QWORD PTR [edi-0x5b3dfd0a]
  416ea8:	jmp    0x5f941fc2
  416ead:	arpl   WORD PTR [ecx+0x547eedf4],si
  416eb3:	xlat   BYTE PTR ds:[ebx]
  416eb4:	or     ah,BYTE PTR [ebx-0x4f]
  416eb7:	call   0x6788:0xd77573c1
  416ebe:	mov    cl,0xbc
  416ec0:	jecxz  0x416ed7
  416ec2:	fbstp  TBYTE PTR [edx-0x67cab14]
  416ec8:	in     al,0xb
  416eca:	fst    st(7)
  416ecc:	jmp    0xd549:0xecbbd513
  416ed3:	mov    ebx,0x5ce467ec
  416ed8:	ins    BYTE PTR es:[edi],dx
  416ed9:	pop    es
  416eda:	adc    BYTE PTR [edi],0xd
  416edd:	xor    bh,BYTE PTR [ecx-0x759434a4]
  416ee3:	pop    ds
  416ee4:	rep ins DWORD PTR es:[edi],dx
  416ee6:	cmp    ch,BYTE PTR ds:0x984c122a
  416eec:	or     eax,0x711d9aa8
  416ef1:	mov    bh,0x83
  416ef3:	aad    0xc6
  416ef5:	aam    0xb9
  416ef7:	push   es
  416ef8:	jo     0x416f0e
  416efa:	mov    ah,0xe2
  416efc:	test   al,0xe4
  416efe:	or     DWORD PTR [edx],edi
  416f00:	jp     0x416eae
  416f02:	les    esp,FWORD PTR [esi+eiz*2]
  416f05:	mov    eax,DWORD PTR [esi+0x7]
  416f08:	mov    db2,ebp
  416f0b:	retf   
  416f0c:	out    0xae,eax
  416f0e:	jae    0x416eef
  416f10:	mov    BYTE PTR [edx],dh
  416f12:	cmp    bh,BYTE PTR [ebx]
  416f14:	pop    es
  416f15:	mov    ds:0x98792949,eax
  416f1a:	rcl    DWORD PTR [eax],1
  416f1c:	add    ebx,DWORD PTR [edi+0x6779284f]
  416f22:	mov    cl,0xd7
  416f24:	mov    ah,ah
  416f26:	int3   
  416f27:	fisttp WORD PTR [eax-0x778fca98]
  416f2d:	addr16 mov cl,0x5c
  416f30:	rep outs dx,DWORD PTR ds:[esi]
  416f32:	cmp    al,0x6a
  416f34:	mov    BYTE PTR [eax+0x673f284e],bl
  416f3a:	mov    al,0xd7
  416f3c:	mov    bl,cl
  416f3e:	lea    edx,[esi-0x72729e0a]
  416f44:	icebp  
  416f45:	gs popf 
  416f47:	aaa    
  416f48:	cs ins DWORD PTR es:[edi],dx
  416f4a:	jno    0x416eef
  416f4c:	(bad)  
  416f4d:	cs mov esi,0xb1670653
  416f53:	xlat   BYTE PTR ds:[ebx]
  416f54:	ins    DWORD PTR es:[edi],dx
  416f55:	cmp    BYTE PTR [edx+eiz*2],0x88
  416f59:	cwde   
  416f5a:	dec    esi
  416f5b:	sub    BYTE PTR [ebp-0x78d7cd67],ch
  416f61:	adc    edx,eax
  416f63:	mov    ebp,0xbc593188
  416f68:	jns    0x416f02
  416f6a:	dec    esi
  416f6b:	pop    esi
  416f6c:	add    ebx,DWORD PTR [ebx+0x379284f]
  416f72:	cmp    al,dl
  416f74:	mov    eax,0xdd7b167
  416f79:	xor    eax,0x6bd65cbd
  416f7e:	cmp    cl,BYTE PTR ds:0xc53a616d
  416f84:	mov    ebp,0xd99c5b4
  416f89:	adc    eax,0x673b5a81
  416f8e:	dec    esi
  416f8f:	sub    BYTE PTR [ecx-0x22],bh
  416f92:	mov    cl,0xd6
  416f94:	mov    BYTE PTR [edi-0x46],ah
  416f97:	and    esp,esi
  416f99:	(bad)  
  416f9a:	xlat   BYTE PTR ds:[ebx]
  416f9b:	jp     0x416f59
  416f9d:	es ret 
  416f9f:	sar    DWORD PTR [ebp+edi*1-0x78532a3a],1
  416fa6:	sbb    ebx,ebp
  416fa8:	dec    eax
  416fa9:	adc    esi,DWORD PTR [esi+ebx*4+0x3d5ab3f4]
  416fb0:	or     edx,edx
  416fb2:	mov    cl,0x28
  416fb4:	jns    0x416f4e
  416fb6:	call   0x43a1:0xb0980529
  416fbd:	or     eax,0x767081b1
  416fc2:	dec    esi
  416fc3:	sub    BYTE PTR [ecx+0x5c],bh
  416fc6:	xor    al,0x2b
  416fc8:	jp     0x416f62
  416fca:	dec    esi
  416fcb:	mov    ds:0xcff3ec33,al
  416fd0:	psrad  mm1,QWORD PTR [ecx+0x29]
  416fd4:	jns    0x416f6e
  416fd6:	rcr    BYTE PTR [ebx+eax*1-0x61],1
  416fda:	dec    edi
  416fdb:	sub    BYTE PTR [ecx-0x52],bh
  416fde:	jae    0x416fb3
  416fe0:	mov    BYTE PTR [edx],dh
  416fe2:	cmp    bh,BYTE PTR [ebx]
  416fe4:	mov    ch,0xa7
  416fe6:	shr    esi,1
  416fe8:	ret    
  416fe9:	outs   dx,DWORD PTR ds:[esi]
  416fea:	lds    ebx,FWORD PTR [ebp-0x2b46c5f3]
  416ff0:	fstp   QWORD PTR [ebx+0x3a]
  416ff3:	mov    WORD PTR [eax],es
  416ff5:	gs in  al,dx
  416ff7:	fisttp WORD PTR ds:0xf3d49114
  416ffd:	outs   dx,DWORD PTR ds:[esi]
  416ffe:	add    BYTE PTR ds:0xa4a934bd,0xb7
  417005:	retf   0x92b2
  417008:	nop
  417009:	or     eax,0xa27087b1
  41700e:	dec    edi
  41700f:	sub    BYTE PTR [ecx+0x5e],bh
  417012:	hlt    
  417013:	fcomi  st,st(4)
  417015:	fs repz cmp al,0x61
  417019:	mov    dh,0x53
  41701b:	aam    0xd5
  41701d:	inc    ebx
  41701e:	mov    dl,0x82
  417020:	nop
  417021:	push   0x8747d506
  417026:	mov    bl,0xd4
  417028:	lds    edi,FWORD PTR [ebx-0x4e]
  41702b:	xchg   edx,eax
  41702c:	nop
  41702d:	in     al,dx
  41702e:	mov    cl,0xd4
  417030:	ret    
  417031:	outs   dx,DWORD PTR ds:[esi]
  417032:	cmp    BYTE PTR [ebx+0x1ed07ba4],dl
  417038:	inc    esi
  417039:	outs   dx,DWORD PTR ds:[esi]
  41703a:	mov    cl,0x82
  41703c:	or     eax,0x8ca24e8b
  417041:	cwde   
  417042:	(bad)  
  417043:	fbstp  TBYTE PTR [eax-0x1]
  417046:	dec    esi
  417047:	sub    BYTE PTR [ecx-0x52],bh
  41704a:	shl    DWORD PTR ss:[eax+eiz*8-0x5a6f0c0b],cl
  417052:	mov    ch,0xd7
  417054:	shr    esp,cl
  417056:	pop    ebp
  417057:	push   esp
  417058:	inc    esp
  417059:	mov    edx,ecx
  41705b:	aas    
  41705c:	mov    BYTE PTR [edi-0x4f],ah
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	pop    es
  417061:	dec    ebx
  417062:	xchg   ebp,eax
  417063:	inc    ebp
  417064:	xchg   ebp,eax
  417065:	daa    
  417066:	mov    cl,0x8c
  417068:	or     esp,esp
  41706a:	dec    edi
  41706b:	(bad)  
  41706c:	enter  0xe167,0x3f
  417070:	sbb    ebx,DWORD PTR [ecx+0x220f284e]
  417076:	dec    ebp
  417077:	mov    edi,0xe0151751
  41707c:	jns    0x417090
  41707e:	dec    ebp
  41707f:	aas    
  417080:	fistp  DWORD PTR [eax+0x220f284e]
  417086:	dec    ecx
  417087:	mov    edi,0x2026f6ce
  41708c:	jns    0x4170a0
  41708e:	dec    ebp
  41708f:	aas    
  417090:	retf   
  417091:	cwde   
  417092:	dec    esi
  417093:	sub    BYTE PTR [edi],cl
  417095:	and    al,BYTE PTR [ebp+0x5c]
  417098:	ret    
  417099:	fwait
  41709a:	mov    dl,0x97
  41709c:	mov    esp,0x94870668
  4170a1:	jmp    0xdbe1:0xeca0d5f5
  4170a8:	test   DWORD PTR [edx],esi
  4170aa:	dec    ebp
  4170ab:	pop    esi
  4170ac:	rcl    DWORD PTR [edi-0x1167784e],cl
  4170b2:	in     al,0x3b
  4170b4:	or     eax,0xf35c5d1a
  4170b9:	xchg   edi,eax
  4170ba:	mov    ah,BYTE PTR [eax]
  4170bc:	hlt    
  4170bd:	add    bl,BYTE PTR ds:0x461270eb
  4170c3:	pop    esp
  4170c4:	sub    dl,0xf5
  4170c7:	out    0x84,eax
  4170c9:	pop    esp
  4170ca:	hlt    
  4170cb:	das    
  4170cc:	repz mov ecx,DWORD PTR [eax]
  4170cf:	test   DWORD PTR [eax-0x2da54e99],0x7b1fb9a
  4170d9:	pop    ebp
  4170da:	fcmovnu st,st(6)
  4170dc:	hlt    
  4170dd:	arpl   WORD PTR [ebx+0x21],dx
  4170e0:	ins    DWORD PTR es:[edi],dx
  4170e1:	mov    edi,0x8fbe57fb
  4170e6:	(bad)  
  4170e7:	iret   
  4170e8:	or     eax,0xcc5ab02d
  4170ed:	jbe    0x4170a3
  4170ef:	in     al,dx
  4170f0:	retf   
  4170f1:	xchg   edi,eax
  4170f2:	ret    
  4170f3:	fstp   TBYTE PTR [ebp-0x7e5ba2d6]
  4170f9:	pop    esp
  4170fa:	cld    
  4170fb:	and    esi,esp
  4170fd:	gs pop edx
  4170ff:	ins    DWORD PTR es:[edi],dx
  417100:	pop    es
  417101:	pop    ebp
  417102:	and    DWORD PTR [edi+0x18],eax
  417105:	test   ebp,0x94650dc1
  41710b:	daa    
  41710c:	js     0x4170a5
  41710e:	inc    ecx
  41710f:	jmp    0x61f3:0x87e137d8
  417116:	xor    DWORD PTR [ebp-0x2d3a7386],ebp
  41711c:	ins    DWORD PTR es:[edi],dx
  41711d:	mov    ds:0x98841532,eax
  417122:	arpl   WORD PTR [esi-0x284a5ab1],si
  417128:	shr    esp,cl
  41712a:	pop    ebp
  41712b:	mov    bh,0xd
  41712d:	adc    bh,BYTE PTR [ebp+0x4d6ffb5c]
  417133:	or     BYTE PTR gs:[edx+ebp*2+0x73],dl
  417138:	xor    eax,0x88ba5965
  41713d:	addr16 mov cl,0xa4
  417140:	jb     0x417196
  417142:	js     0x417183
  417144:	in     al,0x67
  417146:	mov    cl,0xd7
  417148:	cmc    
  417149:	jnp    0x4170cd
  41714b:	pop    ss
  41714c:	jo     0x41718a
  41714e:	mov    cl,0xd7
  417150:	mov    BYTE PTR [edx+edx*4],dl
  417153:	xchg   BYTE PTR fs:[esi],ah
  417156:	add    edi,eax
  417158:	jo     0x417182
  41715a:	mov    cl,0xd7
  41715c:	mov    BYTE PTR [ebp+0x71],dh
  41715f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417160:	jno    0x417174
  417162:	mov    ?,WORD PTR [ebp+0x6d]
  417165:	mov    bl,0x59
  417167:	call   0x124d:0xfcb16788
  41716e:	mov    eax,ds:0xb167c63f
  417173:	xlat   BYTE PTR ds:[ebx]
  417174:	ins    DWORD PTR es:[edi],dx
  417175:	dec    edi
  417176:	sbb    eax,0xfc137006
  41717b:	les    ecx,FWORD PTR [edi-0x74]
  41717e:	lods   eax,DWORD PTR ds:[esi]
  41717f:	inc    esi
  417180:	shl    BYTE PTR [esi-0x70d320af],1
  417186:	popf   
  417187:	xlat   BYTE PTR ds:[ebx]
  417188:	mov    BYTE PTR [edi-0x74],ah
  41718b:	xlat   BYTE PTR ds:[ebx]
  41718c:	sti    
  41718d:	addr16 mov cl,0xa4
  417190:	mov    fs,edi
  417192:	dec    ebp
  417193:	shl    ch,cl
  417195:	popa   
  417196:	xor    ch,BYTE PTR [edi]
  417198:	stc    
  417199:	adc    BYTE PTR [ebx+0x3af2c796],dh
  41719f:	adc    dh,BYTE PTR ds:0x715ce766
  4171a5:	dec    esp
  4171a6:	inc    ecx
  4171a7:	and    al,0x24
  4171a9:	cmp    DWORD PTR [edx+0x59],ebx
  4171ac:	xchg   BYTE PTR [ebp+0x710ed2c4],dh
  4171b2:	test   ebp,0x1e82a456
  4171b8:	(bad)  
  4171b9:	(bad)  
  4171ba:	pop    edi
  4171bb:	sub    BYTE PTR [ecx-0x68],bh
  4171be:	mov    ds:0x4e80701e,al
  4171c3:	sub    BYTE PTR [ecx+0x15],bh
  4171c6:	inc    ebx
  4171c7:	adc    al,0xad
  4171c9:	sbb    edx,DWORD PTR [ebp-0x6ae4f001]
  4171cf:	retf   
  4171d0:	out    0xae,eax
  4171d2:	jae    0x4171b3
  4171d4:	mov    BYTE PTR [edx],dh
  4171d6:	cmp    bh,BYTE PTR [ebx]
  4171d8:	add    eax,0xdb741a3
  4171dd:	and    bh,BYTE PTR [ecx+0x4e9788f2]
  4171e3:	sub    dl,ah
  4171e5:	out    0x89,al
  4171e7:	call   0x5bd8:0x5ca212de
  4171ee:	xor    BYTE PTR ds:0xd7b17788,ch
  4171f4:	cmc    
  4171f5:	outs   dx,DWORD PTR ds:[esi]
  4171f6:	xlat   BYTE PTR ds:[ebx]
  4171f7:	push   esi
  4171f8:	mov    esp,0xf492e165
  4171fd:	pusha  
  4171fe:	pushf  
  4171ff:	xlat   BYTE PTR ds:[ebx]
  417200:	cwde   
  417201:	addr16 mov cl,0x3c
  417204:	pop    ecx
  417205:	out    dx,al
  417206:	hlt    
  417207:	fbstp  TBYTE PTR [eax+0x67]
  41720a:	mov    cl,0xd7
  41720c:	mov    dh,ah
  41720e:	popf   
  41720f:	repz mov ecx,0xddd7f172
  417215:	jmp    0x87b1:0x27972632
  41721c:	jo     0x4171b5
  41721e:	dec    ebp
  41721f:	sub    BYTE PTR [ecx-0x12],bh
  417222:	hlt    
  417223:	daa    
  417224:	aas    
  417225:	dec    edi
  417226:	mov    bh,0xd7
  417228:	mov    BYTE PTR [edx+edi*1+0xa],ah
  41722c:	xchg   edi,eax
  41722d:	daa    
  41722e:	mov    cl,0x5e
  417230:	retf   
  417231:	lahf   
  417232:	fist   DWORD PTR [edi-0x287e9810]
  417238:	mov    BYTE PTR [esi],dh
  41723a:	fcmovnbe st,st(7)
  41723c:	lock sub eax,0x988f19bc
  417242:	les    esp,FWORD PTR [edi]
  417244:	jo     0x4171db
  417246:	dec    esp
  417247:	sub    BYTE PTR [ecx-0x12],bh
  41724a:	hlt    
  41724b:	sub    ecx,DWORD PTR [ebx]
  41724d:	aam    0x71
  41724f:	(bad)  
  417250:	enter  0x3a67,0xaa
  417254:	jl     0x417242
  417256:	cld    
  417257:	das    
  417258:	test   DWORD PTR [eax-0x3c8af666],edi
  41725e:	cmp    al,0x54
  417260:	and    BYTE PTR [edx-0xf],dh
  417263:	xlat   BYTE PTR ds:[ebx]
  417264:	jns    0x4171ed
  417266:	cmp    al,0x64
  417268:	jo     0x4172da
  41726a:	icebp  
  41726b:	xlat   BYTE PTR ds:[ebx]
  41726c:	jns    0x417242
  41726e:	ins    BYTE PTR es:[edi],dx
  41726f:	(bad)  
  417270:	enter  0xe767,0x3f
  417274:	ficomp DWORD PTR [ebx-0x1b42d7b2]
  41727a:	push   eax
  41727b:	(bad)  
  41727c:	enter  0xbe67,0x52
  417280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417281:	gs mov cl,0xd7
  417284:	jns    0x41725a
  417286:	push   esp
  417287:	(bad)  
  417288:	enter  0xdb67,0x97
  41728c:	lock push esi
  41728e:	lds    ebp,FWORD PTR [ebx-0x7]
  417291:	cwde   
  417292:	les    esp,FWORD PTR [edi]
  417294:	jo     0x41725b
  417296:	dec    esp
  417297:	sub    BYTE PTR [ecx-0x12],bh
  41729a:	hlt    
  41729b:	and    ecx,DWORD PTR [ebp-0x7aac4159]
  4172a1:	gs mov cl,0xd7
  4172a4:	or     eax,0x7080e79f
  4172a9:	sbb    al,0x4f
  4172ab:	sub    BYTE PTR [ecx+0x5c],bh
  4172ae:	xor    dh,BYTE PTR [edx]
  4172b0:	xchg   edi,eax
  4172b1:	daa    
  4172b2:	mov    cl,0xd8
  4172b4:	add    ecx,DWORD PTR [ecx+0x3788d7b0]
  4172ba:	out    0x3f,al
  4172bc:	xchg   edx,eax
  4172bd:	fwait
  4172be:	dec    esi
  4172bf:	sub    BYTE PTR [ebp-0x3739a71c],bh
  4172c5:	addr16 mov esi,0xb1665d52
  4172cb:	xlat   BYTE PTR ds:[ebx]
  4172cc:	or     eax,0xfb5cb912
  4172d1:	xchg   ebx,eax
  4172d2:	or     bl,ch
  4172d4:	mov    BYTE PTR [edi-0x4f],ah
  4172d7:	out    dx,al
  4172d8:	mov    WORD PTR [esi-0x3d],ds
  4172db:	aad    0x75
  4172dd:	ret    
  4172de:	cmp    ah,BYTE PTR [edx+0x23ccec90]
  4172e4:	test   DWORD PTR [eax],ebx
  4172e6:	(bad)  
  4172e7:	aam    0xf2
  4172e9:	pop    ebx
  4172ea:	xlat   BYTE PTR ds:[ebx]
  4172eb:	pop    esp
  4172ec:	ret    0xd771
  4172ef:	pop    esi
  4172f0:	shl    DWORD PTR [ecx+0x3a],0x9a
  4172f4:	je     0x41735a
  4172f6:	clc    
  4172f7:	jmp    0x4172e7
  4172f9:	addr16 in eax,0xbd
  4172fc:	enter  0xc098,0x87
  417300:	jns    0x417314
  417302:	mov    ecx,0xb708a9bf
  417307:	(bad)  
  417308:	jns    0x41731c
  41730a:	inc    ecx
  41730b:	aas    
  41730c:	lods   eax,DWORD PTR ds:[esi]
  41730d:	call   0xdfcc:0xece0284e
  417314:	or     eax,0x4a5c4512
  417319:	fs (bad) 
  41731b:	jmp    0x41732a
  41731d:	cs in  eax,0x24
  417320:	and    al,0xec
  417322:	in     al,dx
  417323:	fild   WORD PTR [ebp+0x31d88d3c]
  417329:	sub    al,0xb7
  41732b:	fdiv   DWORD PTR [ecx]
  41732d:	adc    al,0xa5
  41732f:	pop    edx
  417330:	hlt    
  417331:	jns    0x4172dc
  417333:	adc    edi,0x85dfccec
  417339:	sbb    DWORD PTR [ebp+0x3a6fca5c],edi
  41733f:	xchg   esp,eax
  417340:	shr    BYTE PTR [edi],0xb2
  417343:	pop    ds
  417344:	jno    0x4172fd
  417346:	xchg   edx,eax
  417347:	pop    ds
  417348:	inc    edi
  417349:	mov    ?,WORD PTR [ebx+0x1a9448e4]
  41734f:	pop    esp
  417350:	retf   0x3a77
  417353:	test   eax,0xc3c7ec8c
  417358:	test   DWORD PTR [edx],edx
  41735a:	inc    ebp
  41735b:	aam    0xfb
  41735d:	outs   dx,DWORD PTR ds:[esi]
  41735e:	inc    edx
  41735f:	jae    0x417340
  417361:	cmp    DWORD PTR [edx],esi
  417363:	adc    DWORD PTR [eax-0xcd7827b],esi
  417369:	xchg   ebx,eax
  41736a:	(bad)  [edx-0x66]
  41736d:	or     al,0xd2
  41736f:	sub    bl,dh
  417371:	xchg   edi,eax
  417372:	pop    ecx
  417373:	adc    edi,DWORD PTR [eax+ebx*4+0x4e]
  417377:	pop    esp
  417378:	or     eax,0x88d7b1e3
  41737d:	test   dl,bl
  41737f:	pop    esp
  417380:	sbb    eax,0x88d7b1e7
  417385:	fs in  al,dx
  417387:	fisttp WORD PTR ds:0x72dcbd14
  41738d:	adc    ebp,edx
  41738f:	aam    0xf3
  417391:	outs   dx,DWORD PTR ds:[esi]
  417392:	out    0x3f,eax
  417394:	call   FWORD PTR [esi+ecx*2-0x3b5872d8]
  41739b:	(bad)
  41739e:	cmp    al,0x6a
  4173a0:	inc    edi
  4173a1:	pop    eax
  4173a2:	dec    esi
  4173a3:	mov    ds:0x2b208f78,al
  4173a8:	jns    0x417342
  4173aa:	mov    edx,0x3a50f417
  4173af:	pop    es
  4173b0:	or     eax,0xb55ca11c
  4173b5:	ins    BYTE PTR es:[edi],dx
  4173b6:	inc    edi
  4173b7:	mov    ds:0xd446ec86,al
  4173bc:	rep outs dx,DWORD PTR ds:[esi]
  4173be:	mov    dl,0xaa
  4173c0:	nop
  4173c1:	retf   0x17ba
  4173c4:	hlt    
  4173c5:	js     0x417385
  4173c7:	ins    DWORD PTR es:[edi],dx
  4173c8:	js     0x417442
  4173ca:	ret    
  4173cb:	rol    BYTE PTR [ebp-0x376846de],cl
  4173d1:	xor    eax,0x98f085e1
  4173d6:	scas   al,BYTE PTR es:[edi]
  4173d7:	stos   DWORD PTR es:[edi],eax
  4173d8:	dec    edi
  4173d9:	cwde   
  4173da:	les    esp,FWORD PTR [edi]
  4173dc:	jo     0x41741b
  4173de:	dec    ebp
  4173df:	sub    BYTE PTR [ecx+0x3d],bh
  4173e2:	sbb    bh,BYTE PTR [esp+ebx*2]
  4173e5:	in     al,0x72
  4173e7:	ret    
  4173e8:	ins    DWORD PTR es:[edi],dx
  4173e9:	stc    
  4173ea:	cmp    al,BYTE PTR [edx-0x20131370]
  4173f0:	test   DWORD PTR [ecx*4-0x3aac2a04],edi
  4173f7:	xchg   edx,esp
  4173f9:	push   0x6792b40b
  4173fe:	ret    
  4173ff:	lahf   
  417400:	add    eax,0x88d715dc
  417405:	addr16 mov cl,0xa3
  417408:	mov    ecx,0x85dfc4ec
  41740d:	aam    0x11
  41740f:	xlat   BYTE PTR ds:[ebx]
  417410:	mov    BYTE PTR [edi+0x3a],ah
  417413:	jmp    0x5cfa8e9d
  417418:	retf   0x3263
  41741b:	ds nop
  41741d:	mov    dh,0x58
  41741f:	xor    al,0xa1
  417421:	retf   0xb11c
  417424:	sub    eax,DWORD PTR [ecx]
  417426:	sbb    bh,dl
  417428:	mov    eax,0x79f2b913
  41742d:	push   0x7387d7b1
  417432:	mov    DWORD PTR ds:0xdff4ec6a,esi
  417438:	test   esp,esp
  41743a:	adc    edi,edx
  41743c:	mov    BYTE PTR [edi-0x4e],ah
  41743f:	push   esp
  417440:	and    al,0x67
  417442:	mov    cl,0xd7
  417444:	mov    ebp,0xd1dc397
  417449:	in     al,dx
  41744a:	jne    0x417423
  41744c:	mov    BYTE PTR [edi+0x52],ah
  41744f:	fistp  QWORD PTR [ecx+0x12]
  417452:	mov    ecx,0x4e9c7c3f
  417457:	sub    ah,ah
  417459:	mov    BYTE PTR [ecx+0x3a6788d7],0x97
  417460:	mov    esp,gs
  417462:	icebp  
  417463:	fisttp DWORD PTR ds:0xd35ca92f
  417469:	outs   dx,DWORD PTR ds:[esi]
  41746a:	mov    BYTE PTR [edi+0x5cb813a0],al
  417470:	mov    BYTE PTR [esi-0x7],bl
  417473:	iret   
  417474:	repz xchg ebx,eax
  417476:	pop    edx
  417477:	clc    
  417478:	or     eax,0xcbd4992c
  41747d:	outs   dx,DWORD PTR ds:[esi]
  41747e:	cmp    BYTE PTR [edi-0x2c031164],bl
  417484:	inc    ecx
  417485:	daa    
  417486:	xchg   ecx,eax
  417487:	(bad)  
  417488:	mov    BYTE PTR [edi-0x4f],ah
  41748b:	mov    cl,0x71
  41748d:	and    al,0xa7
  41748f:	xlat   BYTE PTR ds:[ebx]
  417490:	test   al,0x12
  417492:	mov    dh,0x10
  417494:	ret    
  417495:	ja     0x417448
  417497:	xlat   BYTE PTR ds:[ebx]
  417498:	mov    BYTE PTR [edi+0x76],ah
  41749b:	xchg   ebx,eax
  41749c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41749d:	jnp    0x417450
  41749f:	xlat   BYTE PTR ds:[ebx]
  4174a0:	mov    BYTE PTR [edi-0x30],ah
  4174a3:	push   ds
  4174a4:	inc    esi
  4174a5:	arpl   WORD PTR [ecx+0x7d0f88bd],si
  4174ab:	inc    eax
  4174ac:	cwde   
  4174ad:	inc    edx
  4174ae:	dec    esi
  4174af:	mov    ds:0x2c348f78,al
  4174b4:	jns    0x41744e
  4174b6:	cld    
  4174b7:	out    dx,eax
  4174b8:	fdivrp st(7),st
  4174ba:	mov    esp,edx
  4174bc:	loop   0x417523
  4174be:	mov    ch,0xde
  4174c0:	neg    DWORD PTR [eax-0x9b990d0]
  4174c6:	mov    al,0x97
  4174c8:	inc    esi
  4174c9:	jb     0x417542
  4174cb:	das    
  4174cc:	(bad)  
  4174cd:	jnp    0x41748e
  4174cf:	enter  0x9f3e,0xb1
  4174d3:	arpl   WORD PTR [edi-0x78906f56],cx
  4174d9:	sub    esi,DWORD PTR [ecx-0x23]
  4174dc:	aam    0xf
  4174de:	fsub   DWORD PTR [eax+ebp*4-0x165a3e97]
  4174e5:	add    dh,dl
  4174e7:	mov    dh,0xeb
  4174e9:	loopne 0x4174bd
  4174eb:	nop
  4174ec:	jmp    0xd405:0x61a3fe78
  4174f3:	js     0x41753e
  4174f5:	adc    ch,dh
  4174f7:	dec    edi
  4174f8:	out    dx,eax
  4174f9:	popa   
  4174fa:	cmc    
  4174fb:	cwde   
  4174fc:	cli    
  4174fd:	xor    al,0xb2
  4174ff:	mov    edx,0xf9d403e9
  417504:	mov    ebp,esi
  417506:	mov    ebx,0xb623ccf3
  41750b:	(bad)  
  41750c:	pop    ds
  41750d:	fwait
  41750e:	call   0xbc36f5a7
  417513:	pop    DWORD PTR [edi+edi*1+0x4d8cb28f]
  41751a:	out    dx,al
  41751b:	(bad)  
  41751d:	pop    edi
  41751e:	repnz adc eax,0xbf935eba
  417524:	test   al,0x4b
  417526:	aas    
  417527:	xchg   ebx,eax
  417528:	ret    0x852d
  41752b:	push   edi
  41752c:	xchg   edi,eax
  41752d:	outs   dx,DWORD PTR ds:[esi]
  41752e:	cld    
  41752f:	fild   WORD PTR [edi+0x15e3a25f]
  417535:	xchg   BYTE PTR [ecx+0xe77012e],bl
  41753b:	invd   
  41753d:	mov    ds:0x5ab898fc,al
  417542:	cmp    ebx,edi
  417544:	nop
  417545:	fmul   st(5),st
  417547:	xchg   esp,eax
  417548:	mov    BYTE PTR [esi-0x42],0x55
  41754c:	(bad)  
  41754d:	push   cs
  41754e:	sar    BYTE PTR [edi-0x78f2f8f0],cl
  417554:	fsub   DWORD PTR [edx]
  417556:	xor    DWORD PTR [ebx-0x224ce879],ebx
  41755c:	ins    BYTE PTR es:[edi],dx
  41755d:	test   dh,ch
  41755f:	cwde   
  417560:	xchg   esp,eax
  417561:	mov    ds:0x668e5651,eax
  417566:	mov    edx,0x5d20981c
  41756b:	shl    ebp,cl
  41756d:	xor    dh,BYTE PTR [edi+0x2dda7bc3]
  417573:	fcomp  QWORD PTR [eax-0x382d0abb]
  417579:	ret    
  41757a:	mov    ebp,0xb0698687
  41757f:	pop    es
  417580:	(bad)  
  417581:	outs   dx,DWORD PTR ds:[esi]
  417582:	push   ss
  417583:	aad    0x8
  417585:	ins    BYTE PTR es:[edi],dx
  417586:	not    DWORD PTR [edx-0x2d7f256c]
  41758c:	cdq    
  41758d:	sbb    DWORD PTR [ecx-0x7c],esp
  417590:	shl    BYTE PTR [esi-0x676b247],0x8d
  417597:	in     eax,0x4
  417599:	or     ecx,edx
  41759b:	mov    esi,0xe7d21ec4
  4175a0:	cwde   
  4175a1:	test   al,0x8c
  4175a3:	push   edx
  4175a4:	in     eax,dx
  4175a5:	inc    cx
  4175a7:	stc    
  4175a8:	hlt    
  4175a9:	add    al,dl
  4175ab:	scas   eax,DWORD PTR es:[edi]
  4175ac:	addr16 jbe 0x417540
  4175af:	fsubr  st(0),st
  4175b1:	test   BYTE PTR [ebx-0x1e207b7c],0xc7
  4175b8:	lds    eax,FWORD PTR [ebx-0x7d]
  4175bb:	or     DWORD PTR [esi-0x72b86e7d],0x49
  4175c2:	ret    
  4175c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175c4:	fs add al,0x20
  4175c7:	(bad)  
  4175c8:	and    eax,0xafdf93c3
  4175cd:	pop    ecx
  4175ce:	mov    ch,0x9b
  4175d0:	jo     0x417621
  4175d2:	mov    DWORD PTR [ecx-0x6fff6779],eax
  4175d8:	push   0x57
  4175da:	inc    ecx
  4175db:	clc    
  4175dc:	pop    ds
  4175dd:	ins    DWORD PTR es:[edi],dx
  4175de:	xor    ebp,edi
  4175e0:	es mov ebp,0x6779b1c0
  4175e6:	pushf  
  4175e7:	dec    ecx
  4175e8:	add    DWORD PTR [edi],esi
  4175ea:	pop    esp
  4175eb:	loope  0x41765d
  4175ed:	je     0x41757e
  4175ef:	arpl   WORD PTR [ebx],dx
  4175f1:	sbb    DWORD PTR [edx+0xe7de53],ecx
  4175f7:	pusha  
  4175f8:	xchg   edx,eax
  4175f9:	or     dl,BYTE PTR [ebp+0x5d]
  4175fc:	pop    es
  4175fd:	addr16 ja 0x4175f9
  417600:	out    0xf7,al
  417602:	mov    gs,esi
  417604:	mov    ch,0x28
  417606:	dec    edi
  417607:	sar    al,0x45
  41760a:	mov    cl,0xf0
  41760c:	and    edi,ebp
  41760e:	in     al,0x86
  417610:	jmp    0x4175e0
  417612:	or     eax,0xffffffbb
  417615:	mov    edx,0x77e817a5
  41761a:	jmp    0x27be:0xb18897f1
  417621:	or     edx,DWORD PTR [esi+0x6d]
  417624:	lods   al,BYTE PTR ds:[esi]
  417625:	mov    al,ds:0x99d4d73c
  41762a:	xchg   DWORD PTR [edi+0x77b3fe4b],esp
  417630:	mov    BYTE PTR [esi+0x58ff40b5],ch
  417636:	lods   eax,DWORD PTR ds:[esi]
  417637:	mov    ds:0x7900679b,al
  41763c:	push   ecx
  41763d:	cld    
  41763e:	imul   edx,DWORD PTR [eax-0x61499432],0x5d0b0b8b
  417648:	enter  0x4f2f,0x31
  41764c:	jno    0x417625
  41764e:	sub    eax,0x731e3d7
  417653:	adc    al,0x1a
  417655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417656:	rol    DWORD PTR [ecx],1
  417658:	test   DWORD PTR [edx+esi*8],ebp
  41765b:	xor    esp,DWORD PTR [esi-0x72]
  41765e:	popa   
  41765f:	addr16 add eax,0x28d49abf
  417665:	arpl   WORD PTR [edx+0x5c],bx
  417668:	sbb    ah,BYTE PTR [ebx]
  41766a:	pop    ecx
  41766b:	add    dh,dh
  41766d:	inc    esp
  41766e:	mov    cl,0xd0
  417670:	stos   DWORD PTR es:[edi],eax
  417671:	mov    ah,0x61
  417673:	mul    bl
  417675:	cmp    eax,0x36bad7f9
  41767a:	xor    bl,BYTE PTR [ebx]
  41767c:	lds    esi,FWORD PTR [ebx-0x70772aa6]
  417682:	imul   ebx,DWORD PTR ds:0xf19c3746,0xffffffca
  417689:	popw   es
  41768b:	in     al,dx
  41768c:	sti    
  41768d:	xor    DWORD PTR [edx+0x68],0x3
  417691:	mov    ebp,DWORD PTR [edi]
  417693:	mov    ah,0x88
  417695:	push   ebp
  417696:	call   0x612e:0x4c887166
  41769d:	addr16 inc edx
  41769f:	pop    ecx
  4176a0:	dec    ebp
  4176a1:	cmp    eax,0x63eefad9
  4176a6:	leave  
  4176a7:	sub    eax,0x4f372087
  4176ac:	mov    esi,0x5fde47f9
  4176b1:	into   
  4176b2:	jge    0x4176b6
  4176b4:	dec    edx
  4176b5:	adc    dh,BYTE PTR [bx+si+0x58]
  4176b9:	mov    bl,0xaf
  4176bb:	jb     0x417663
  4176bd:	mov    ebp,0x5b5d0fb1
  4176c2:	test   ebp,esp
  4176c4:	ins    BYTE PTR es:[edi],dx
  4176c5:	add    al,0x1
  4176c7:	xlat   BYTE PTR ds:[ebx]
  4176c8:	jmp    0xfe0bca43
  4176cd:	xor    esp,DWORD PTR [ebp-0x7b]
  4176d0:	mov    dh,dh
  4176d2:	pushf  
  4176d3:	inc    edi
  4176d4:	mov    edi,0x4d5326c7
  4176d9:	mov    ah,0x17
  4176db:	xlat   BYTE PTR ds:[ebx]
  4176dc:	pop    ebp
  4176dd:	and    BYTE PTR [edx+0x3a3158c],bl
  4176e3:	and    eax,0x6b45cff5
  4176e8:	(bad)  
  4176e9:	fs mov cl,0xb4
  4176ec:	aad    0xdc
  4176ee:	mov    bh,0x56
  4176f0:	retf   0x28f8
  4176f3:	daa    
  4176f4:	call   0x1a4c:0x9d7cc1a
  4176fb:	sbb    bl,al
  4176fd:	mov    ebp,0x219ab183
  417702:	(bad)  
  417703:	jo     0x41770d
  417705:	lock mov bh,0x21
  417708:	pop    es
  417709:	mov    al,0x2f
  41770b:	out    dx,eax
  41770c:	scas   al,BYTE PTR es:[edi]
  41770d:	test   BYTE PTR [ebx],0xfb
  417710:	loopne 0x417782
  417712:	(bad)  
  417713:	in     al,dx
  417714:	or     BYTE PTR [eax+0x746a44a6],cl
  41771a:	or     al,0x17
  41771c:	mov    BYTE PTR [ebp+0x4d],ah
  41771f:	and    DWORD PTR [ebx],ebx
  417721:	add    esp,DWORD PTR [edx+0x35]
  417724:	ja     0x4176b5
  417726:	test   al,0xd7
  417728:	aas    
  417729:	mov    cl,BYTE PTR [eax-0x6e]
  41772c:	(bad)  
  41772d:	lahf   
  41772e:	mov    BYTE PTR [edx],dh
  417730:	mov    BYTE PTR [ebp+0x4e],ch
  417733:	sti    
  417734:	repnz push edi
  417736:	les    edi,FWORD PTR ds:0x22e86767
  41773c:	jb     0x4176e2
  41773e:	addr16 ror al,1
  417741:	xor    eax,0x97f07eb1
  417746:	mov    edi,0xf472bcdb
  41774b:	(bad)  [ebx]
  41774d:	mov    BYTE PTR [ebp+0x42],dh
  417750:	addr16 addr16 inc edx
  417753:	sub    bh,dl
  417755:	rol    DWORD PTR [eax+0x69],0x88
  417759:	nop
  41775a:	cwde   
  41775b:	gs inc edi
  41775d:	add    esp,DWORD PTR [edi]
  41775f:	cmp    ah,BYTE PTR ds:0x63d78793
  417765:	xchg   DWORD PTR [ecx],ecx
  417767:	test   DWORD PTR [eax],edx
  417769:	or     BYTE PTR [edx],al
  41776b:	dec    esp
  41776c:	mov    BYTE PTR [ebx+0x6ad965ba],cl
  417772:	sub    eax,0x246977c4
  417777:	dec    eax
  417778:	cmp    eax,0xa8161181
  41777d:	sbb    DWORD PTR [ebp+0x2b3988c8],eax
  417783:	jmp    0x417713
  417785:	add    al,0x9d
  417787:	ss cs push 0x14bbb3fb
  41778e:	adc    BYTE PTR [edx],ch
  417790:	push   ss
  417791:	mov    ebp,0x4efa1ffc
  417796:	mov    cl,0x13
  417798:	(bad)  
  417799:	repz push cs
  41779b:	push   cs
  41779c:	loope  0x41777e
  41779e:	js     0x417777
  4177a0:	js     0x4177a3
  4177a2:	push   es
  4177a3:	cs fwait
  4177a5:	test   BYTE PTR [eax+0x6a],dh
  4177a8:	xchg   al,dh
  4177aa:	stc    
  4177ab:	stos   DWORD PTR es:[edi],eax
  4177ac:	xor    BYTE PTR [ecx+0x34],dl
  4177af:	xchg   esi,eax
  4177b0:	loope  0x417824
  4177b2:	dec    ebp
  4177b3:	(bad)  
  4177b4:	jmp    0x7e69:0x7c80685b
  4177bb:	lods   al,BYTE PTR ds:[esi]
  4177bc:	loope  0x417809
  4177be:	mov    cl,0x22
  4177c0:	pop    ecx
  4177c1:	leave  
  4177c2:	(bad)  
  4177c4:	mov    ch,dl
  4177c6:	inc    edi
  4177c7:	cmp    BYTE PTR [edi-0x42],dh
  4177ca:	xchg   ebx,eax
  4177cb:	imul   edi,eax,0x35231767
  4177d1:	sar    BYTE PTR [edi+0x79],0xa4
  4177d5:	stos   DWORD PTR es:[edi],eax
  4177d6:	mov    cl,0xfc
  4177d8:	or     eax,0x10cd557b
  4177dd:	mov    edx,0x55bbd733
  4177e2:	inc    esi
  4177e3:	sahf   
  4177e4:	and    ebp,DWORD PTR [esi-0x52]
  4177e7:	outs   dx,DWORD PTR ds:[esi]
  4177e8:	mov    BYTE PTR [esi+0x3b73a9af],al
  4177ee:	add    esp,DWORD PTR [ebx]
  4177f0:	adc    BYTE PTR [edi+0x18],ah
  4177f3:	fst    DWORD PTR [eax+eiz*4+0x64808351]
  4177fa:	mov    cl,0xed
  4177fc:	fwait
  4177fd:	ins    BYTE PTR es:[edi],dx
  4177fe:	leave  
  4177ff:	inc    eax
  417800:	jmp    0xcb196d6d
  417805:	add    DWORD PTR [ebx+edi*4-0x206c6ff0],esp
  41780c:	cmp    DWORD PTR [ebx-0xe801b14],0xa79c6b11
  417816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417817:	xlat   BYTE PTR ds:[ebx]
  417818:	mov    ebp,0x6d7f657c
  41781d:	loopne 0x417843
  41781f:	xchg   ecx,eax
  417820:	mov    BYTE PTR [edx],dl
  417822:	fdiv   DWORD PTR [edx+0x45]
  417825:	sti    
  417826:	scas   eax,DWORD PTR es:[edi]
  417827:	cli    
  417828:	jns    0x417891
  41782a:	jle    0x417860
  41782c:	scas   eax,DWORD PTR es:[edi]
  41782d:	mov    eax,0xdcee3810
  417832:	mov    BYTE PTR [esi],al
  417834:	and    BYTE PTR [edi-0x59],0x54
  417838:	lods   al,BYTE PTR fs:[esi]
  41783a:	inc    eax
  41783b:	ja     0x4177da
  41783d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41783f:	mov    ebx,0x9de72efb
  417844:	adc    eax,0xffffffb1
  417847:	ins    DWORD PTR es:[edi],dx
  417848:	jmp    0x41786a
  41784a:	dec    eax
  41784b:	xchg   ecx,eax
  41784c:	fldcw  WORD PTR [eax+0x78]
  41784f:	aam    0x1e
  417851:	popa   
  417852:	mov    al,ds:0x21c3eca8
  417857:	pop    ds
  417858:	push   es
  417859:	cmp    ecx,ebp
  41785b:	jge    0x4177e5
  41785d:	jl     0x417864
  41785f:	xchg   ebx,eax
  417860:	aad    0xd6
  417862:	(bad)  
  417863:	cmp    al,0x5e
  417865:	addr16 (bad) 
  417867:	sbb    dl,BYTE PTR [edx-0x7aae9396]
  41786d:	jmp    0x417820
  41786f:	sub    ch,dl
  417871:	xor    eax,0x1aa7f878
  417876:	mov    eax,ds
  417878:	jecxz  0x417850
  41787a:	push   edx
  41787b:	mov    ds:0x4709b908,al
  417880:	sbb    al,0xf5
  417882:	mov    esi,0x8d6e3b0a
  417887:	xor    al,0x46
  417889:	into   
  41788a:	push   eax
  41788b:	pop    ss
  41788c:	jp     0x41789a
  41788e:	jb     0x417858
  417890:	rcl    DWORD PTR [edx+0x4d1fd7b0],cl
  417896:	mov    DWORD PTR [ecx+0x44be1761],edi
  41789c:	ins    DWORD PTR es:[edi],dx
  41789d:	test   BYTE PTR [ecx+0x5b4a43b7],ah
  4178a3:	lods   al,BYTE PTR ds:[esi]
  4178a4:	jo     0x41790d
  4178a6:	mov    esp,0x280ff14f
  4178ab:	or     DWORD PTR [esp+ecx*2+0x5a1295b1],0xffffff98
  4178b3:	sub    eax,0x2180f27d
  4178b8:	pop    ebx
  4178b9:	pop    esp
  4178ba:	xchg   esp,eax
  4178bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178bc:	mov    BYTE PTR [esi+0x14],dh
  4178bf:	out    dx,al
  4178c0:	inc    edx
  4178c1:	mov    DWORD PTR [ecx-0x4e448f88],ebp
  4178c7:	dec    esi
  4178c8:	or     al,BYTE PTR [ebx+0x7c51534b]
  4178ce:	test   edi,edx
  4178d0:	xchg   esp,eax
  4178d1:	add    al,0x15
  4178d3:	sub    al,0x3a
  4178d5:	retf   
  4178d6:	mov    eax,ds:0x62dc8546
  4178db:	xor    dh,dl
  4178dd:	jle    0x417931
  4178df:	outs   dx,DWORD PTR ds:[esi]
  4178e0:	imul   ebp,DWORD PTR [edx+ebx*4-0x29],0x10
  4178e5:	rol    DWORD PTR [ebp+eiz*1-0x1f],1
  4178e9:	add    eax,0x55ccb75b
  4178ee:	(bad)  
  4178f0:	cmp    al,0x83
  4178f2:	fwait
  4178f3:	sbb    edx,eax
  4178f5:	int3   
  4178f6:	cmp    ch,bl
  4178f8:	mov    eax,ds:0xb923665
  4178fd:	xor    al,0x36
  4178ff:	inc    edi
  417900:	enter  0x137c,0x20
  417904:	xchg   DWORD PTR [eax+0x3e],ebp
  417907:	mov    edx,0x2f129e9c
  41790c:	push   esp
  41790d:	sub    eax,DWORD PTR [esi+ebx*8+0x78]
  417911:	cmp    esp,DWORD PTR [esi+0x1b]
  417914:	add    eax,0x30905fda
  417919:	pop    ebx
  41791a:	fs pushf 
  41791c:	mov    BYTE PTR [ecx+0x20],cl
  41791f:	test   dh,bl
  417921:	jb     0x41790b
  417923:	std    
  417924:	jne    0x41798d
  417926:	adc    DWORD PTR [ebp+edi*8-0x2b],ebx
  41792a:	mov    dh,0xad
  41792c:	sub    cl,dh
  41792e:	scas   al,BYTE PTR es:[edi]
  41792f:	mov    eax,ds:0xd708e802
  417934:	out    dx,al
  417935:	pop    esi
  417936:	mov    esp,0xa1655b56
  41793b:	rcl    BYTE PTR [edx-0x10c8ce55],1
  417941:	xchg   DWORD PTR [edx],edx
  417943:	mov    eax,DWORD PTR [esi]
  417945:	sbb    al,0xb1
  417947:	stc    
  417948:	ror    DWORD PTR [eax-0xf359f68],1
  41794e:	icebp  
  41794f:	rol    BYTE PTR [eax],1
  417951:	fisttp WORD PTR [ebx-0x70]
  417954:	xchg   esp,eax
  417955:	fst    QWORD PTR [si-0x74]
  417959:	xchg   esp,eax
  41795a:	mov    dh,0x7f
  41795c:	cmp    bh,BYTE PTR [ebx]
  41795e:	lahf   
  41795f:	icebp  
  417960:	push   ebp
  417961:	(bad)  
  417962:	cli    
  417963:	inc    edi
  417964:	cmp    al,0x7e
  417966:	inc    edi
  417967:	fsub   DWORD PTR [esi+0x61]
  41796a:	xchg   ecx,eax
  41796b:	jb     0x41793c
  41796d:	xchg   edi,eax
  41796e:	xor    dl,BYTE PTR [ebx-0x709617d0]
  417974:	mov    ds:0xb7c4b180,al
  417979:	dec    ecx
  41797a:	jle    0x4179b1
  41797c:	repz inc edi
  41797e:	jb     0x417957
  417980:	inc    edi
  417981:	xor    al,0x10
  417983:	loopne 0x417924
  417985:	jg     0x4179f1
  417987:	sub    al,0x88
  417989:	lahf   
  41798a:	mov    ds:0xfc324d47,al
  41798f:	leave  
  417990:	adc    DWORD PTR [edi-0x54],esp
  417993:	sbb    BYTE PTR [ecx],al
  417995:	sub    BYTE PTR ds:0xb1bcad39,bh
  41799b:	inc    ebp
  41799c:	addr16 jbe 0x417946
  41799f:	pusha  
  4179a0:	mov    al,0x72
  4179a2:	outs   dx,DWORD PTR ds:[esi]
  4179a3:	xlat   BYTE PTR ds:[ebx]
  4179a4:	fnstcw WORD PTR ds:[edx]
  4179a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179a8:	and    edi,DWORD PTR [edx+0x518896ff]
  4179ae:	test   eax,0xcdd44d55
  4179b3:	xor    ah,BYTE PTR [esi+ebx*2]
  4179b6:	shr    BYTE PTR [edi],1
  4179b8:	xchg   bl,cl
  4179ba:	xchg   ebx,eax
  4179bb:	sahf   
  4179bc:	pop    ebx
  4179bd:	mov    eax,ds:0x425f50f1
  4179c2:	lods   al,BYTE PTR ds:[esi]
  4179c3:	xchg   edi,eax
  4179c4:	ins    DWORD PTR es:[edi],dx
  4179c5:	cmc    
  4179c6:	jno    0x4179df
  4179c8:	xor    bh,BYTE PTR [ecx-0x287d07a5]
  4179ce:	xchg   esp,edx
  4179d0:	out    0x88,al
  4179d2:	loopne 0x417a2b
  4179d4:	xchg   ecx,eax
  4179d5:	imul   ebp,DWORD PTR [ecx],0x89307cb9
  4179db:	fdiv   QWORD PTR [eax+0x67]
  4179de:	push   esp
  4179df:	jb     0x4179ab
  4179e1:	popf   
  4179e2:	adc    esi,0x11fd6752
  4179e8:	popa   
  4179e9:	mov    esi,0x5c7960c4
  4179ee:	mov    cl,0xd5
  4179f0:	fidiv  WORD PTR ds:0x96d9fef8
  4179f6:	mov    edx,0x36c5dfd7
  4179fb:	hlt    
  4179fc:	adc    al,0x77
  4179fe:	xchg   ecx,eax
  4179ff:	sbb    dh,dh
  417a01:	popf   
  417a02:	mov    cl,0x9a
  417a04:	mov    DWORD PTR [edi],esi
  417a06:	sub    DWORD PTR [esi+0x4f],eax
  417a09:	mov    cl,BYTE PTR [edx-0x29]
  417a0c:	je     0x417a43
  417a0e:	inc    esp
  417a0f:	out    dx,eax
  417a10:	sbb    esi,DWORD PTR [edx+edi*2+0x28]
  417a14:	mov    edx,0x2d570547
  417a19:	scas   eax,DWORD PTR es:[edi]
  417a1a:	out    0xc1,eax
  417a1c:	shr    BYTE PTR [edi+0x17],1
  417a1f:	xlat   BYTE PTR ds:[ebx]
  417a20:	retf   0x61cb
  417a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a24:	into   
  417a25:	sub    ecx,DWORD PTR [ebx+ebp*4-0x78]
  417a29:	ds push 0x22
  417a2c:	mov    dh,0x1d
  417a2e:	scas   eax,DWORD PTR es:[edi]
  417a2f:	push   cs
  417a30:	stos   BYTE PTR es:[edi],al
  417a31:	addr16 out 0x3b,eax
  417a34:	xchg   esp,eax
  417a35:	(bad)  
  417a36:	jns    0x4179df
  417a38:	mov    bl,0x84
  417a3a:	mov    cl,0x28
  417a3c:	std    
  417a3d:	cdq    
  417a3e:	(bad)  
  417a3f:	out    dx,al
  417a40:	out    dx,eax
  417a41:	and    bh,ah
  417a43:	test   al,0x38
  417a45:	addr16 push ebp
  417a47:	shl    BYTE PTR [edx+0x7b],0x83
  417a4b:	jae    0x417a66
  417a4d:	(bad)  
  417a4e:	int3   
  417a4f:	jp     0x4179d2
  417a51:	in     al,dx
  417a52:	mov    dh,0xe2
  417a54:	dec    ebx
  417a55:	mov    ecx,0x51897c61
  417a5a:	dec    ebx
  417a5b:	xlat   BYTE PTR ds:[ebx]
  417a5c:	adc    edx,esp
  417a5e:	pop    ss
  417a5f:	adc    BYTE PTR [edi],cl
  417a61:	ins    BYTE PTR es:[edi],dx
  417a62:	and    dh,al
  417a64:	mov    BYTE PTR [edi],dh
  417a66:	in     eax,0xe3
  417a68:	jmp    0x2767:0xda14023
  417a6f:	ds push 0x59
  417a72:	inc    esp
  417a73:	out    0x8c,al
  417a75:	(bad)  [esi-0x2fe54352]
  417a7b:	xor    eax,edi
  417a7d:	in     eax,0xb6
  417a7f:	mov    al,al
  417a81:	addr16 dec ebp
  417a83:	repz jp 0x417aaa
  417a86:	out    dx,al
  417a87:	pop    esi
  417a88:	and    BYTE PTR [ecx+esi*4],al
  417a8b:	mov    ch,0x76
  417a8d:	dec    esp
  417a8e:	stos   BYTE PTR es:[edi],al
  417a8f:	inc    edx
  417a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a92:	sahf   
  417a93:	xlat   BYTE PTR ds:[ebx]
  417a94:	rcr    DWORD PTR [edx],0xd5
  417a97:	repnz sbb ebp,edx
  417a9a:	or     BYTE PTR [ebx],ah
  417a9c:	mov    BYTE PTR ds:0xef81fe7f,bh
  417aa2:	hlt    
  417aa3:	aam    0x38
  417aa5:	idiv   DWORD PTR [edx]
  417aa7:	xlat   BYTE PTR ds:[ebx]
  417aa8:	dec    ebp
  417aa9:	xchg   BYTE PTR [esp+ebp*1+0x71],al
  417aad:	mov    bh,0xba
  417aaf:	push   eax
  417ab0:	mov    al,al
  417ab2:	add    ebp,DWORD PTR [ecx+0x57]
  417ab5:	mov    cl,0xea
  417ab7:	jae    0x417af7
  417ab9:	inc    ecx
  417aba:	inc    edi
  417abb:	enter  0x6713,0x79
  417abf:	mov    eax,ds:0x15a3dc60
  417ac4:	clc    
  417ac5:	gs mov cl,0x8f
  417ac8:	or     cl,ah
  417aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417acb:	jbe    0x417afc
  417acd:	cmp    al,0x9e
  417acf:	xlat   BYTE PTR ds:[ebx]
  417ad0:	jmp    DWORD PTR [eax]
  417ad2:	mov    ?,WORD PTR [ebp-0x63]
  417ad5:	mov    ecx,0x50850adc
  417ada:	jp     0x417adb
  417adc:	cmp    ebx,DWORD PTR [esi*4+0x2e0bb60f]
  417ae3:	xlat   BYTE PTR ds:[ebx]
  417ae4:	xchg   esp,eax
  417ae5:	ja     0x417b23
  417ae7:	pop    edi
  417ae8:	xchg   edx,eax
  417ae9:	lods   eax,DWORD PTR ds:[esi]
  417aea:	lods   al,BYTE PTR ds:[esi]
  417aeb:	push   0xf6b03088
  417af0:	cmp    al,BYTE PTR [edi+0x2f]
  417af3:	je     0x417ab8
  417af5:	addr16 jo 0x417b58
  417af8:	mov    ebp,0x8c48c5eb
  417afd:	cmp    al,0xa3
  417aff:	jmp    0xccf2b700
  417b04:	add    DWORD PTR [esi+edi*8-0x49843ae],esi
  417b0b:	push   0x1405a64c
  417b10:	push   es
  417b11:	jecxz  0x417ae0
  417b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b14:	mov    BYTE PTR [edx+0x2b32d481],al
  417b1a:	lds    ecx,FWORD PTR [ebx-0x2]
  417b1d:	data16 lahf 
  417b1f:	mov    ds:0x9ff1522a,al
  417b24:	call   0xb1a2:0x18fba78b
  417b2b:	and    al,0x98
  417b2d:	(bad)  
  417b2e:	xchg   esi,eax
  417b2f:	addr16 icebp 
  417b31:	in     al,0xa
  417b33:	xlat   BYTE PTR ds:[ebx]
  417b34:	pop    ds
  417b35:	sbb    eax,0xf35d3da6
  417b3a:	jnp    0x417b4b
  417b3c:	xchg   ebp,edi
  417b3e:	ficom  DWORD PTR [edx-0x6d]
  417b41:	test   DWORD PTR [eax+0x3b0580a3],ecx
  417b47:	xlat   BYTE PTR ds:[ebx]
  417b48:	sub    al,0x76
  417b4a:	daa    
  417b4b:	sub    DWORD PTR [edi-0x55],esi
  417b4e:	cli    
  417b4f:	mov    ebx,0x4523281
  417b54:	iret   
  417b55:	in     eax,0xe2
  417b57:	sbb    ch,BYTE PTR [edi]
  417b59:	idiv   DWORD PTR [edi]
  417b5b:	push   eax
  417b5c:	add    esp,DWORD PTR [edi-0x31]
  417b5f:	shr    DWORD PTR [eax-0x24],0xc9
  417b63:	fdivr  st(7),st
  417b65:	sub    eax,0x522560b1
  417b6a:	sub    edx,edx
  417b6c:	mov    dh,0x98
  417b6e:	cmp    edx,edi
  417b70:	loopne 0x417ba5
  417b72:	fisubr DWORD PTR [ebp+0x3d8a6e65]
  417b78:	mov    bh,dh
  417b7a:	adc    al,0xd4
  417b7c:	test   al,0xc6
  417b7e:	call   DWORD PTR [esi+0x30]
  417b81:	pop    eax
  417b82:	cld    
  417b83:	jns    0x417bf7
  417b85:	pop    edi
  417b86:	or     al,0x37
  417b88:	mov    BYTE PTR [eax-0x27],cl
  417b8b:	fld    QWORD PTR [eax+0x4e]
  417b8e:	ss xchg ebp,eax
  417b90:	mov    BYTE PTR [edi-0x6b7dc09],ch
  417b96:	ins    DWORD PTR es:[edi],dx
  417b97:	sbb    eax,0x1e2a67e6
  417b9c:	mov    esi,0xfe7768c3
  417ba1:	sbb    al,0xb1
  417ba3:	add    DWORD PTR [esi-0x38],esp
  417ba6:	ret    0xf004
  417ba9:	sub    BYTE PTR [ecx-0x27],dl
  417bac:	push   ss
  417bad:	mul    DWORD PTR [edi]
  417baf:	icebp  
  417bb0:	pop    ebx
  417bb1:	popf   
  417bb2:	and    esp,DWORD PTR cs:[bx+0x6609]
  417bb8:	mov    dh,0xbf
  417bba:	add    ecx,0xf3fdaf88
  417bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bc1:	sub    DWORD PTR [ebx+0x361d3d52],ebx
  417bc7:	xlat   BYTE PTR ds:[ebx]
  417bc8:	xchg   ebx,eax
  417bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bca:	imul   ebp,DWORD PTR [eax],0x33
  417bcd:	call   0x31cbdfdf
  417bd2:	xchg   ecx,eax
  417bd3:	cmp    esp,DWORD PTR [eax]
  417bd5:	pop    es
  417bd6:	sbb    al,0xd5
  417bd8:	sub    eax,0x609f5363
  417bdd:	xchg   ebx,eax
  417bde:	mov    cl,0xcc
  417be0:	or     eax,0xebf501a2
  417be5:	call   0x24f9:0xc90b1cb1
  417bec:	and    esp,0xe82dd731
  417bf2:	jnp    0x417c4f
  417bf4:	pop    ds
  417bf5:	mov    dh,0x40
  417bf7:	jecxz  0x417b80
  417bf9:	push   eax
  417bfa:	jb     0x417c71
  417bfc:	call   0x74ecf2de
  417c01:	jecxz  0x417ba3
  417c03:	xlat   BYTE PTR ds:[ebx]
  417c04:	lods   al,BYTE PTR ds:[esi]
  417c05:	fwait
  417c06:	or     BYTE PTR [ebp+0x6e],0x55
  417c0a:	out    dx,eax
  417c0b:	data16 mov BYTE PTR [edi+0x39],bh
  417c0f:	lds    edi,FWORD PTR [ebp-0x25]
  417c12:	test   DWORD PTR [ebx+0x311e67fd],ebx
  417c18:	mov    esi,0xa3b9d764
  417c1d:	data16 lods al,BYTE PTR ds:[esi]
  417c1f:	fdiv   DWORD PTR [ecx+0x2f8b1b3]
  417c25:	mov    WORD PTR [edi-0x42],ds
  417c28:	mov    al,ds:0x82373a63
  417c2d:	sbb    esi,0x56
  417c30:	bnd jno 0x417be0
  417c33:	xor    BYTE PTR [ecx],dh
  417c35:	test   al,0x91
  417c37:	jne    0x417c9e
  417c39:	fst    QWORD PTR [edi-0x101b77e8]
  417c3f:	xchg   ebp,eax
  417c40:	xchg   al,ah
  417c42:	xchg   ebx,eax
  417c43:	inc    ebx
  417c44:	pushf  
  417c45:	pop    ebp
  417c46:	les    edi,FWORD PTR [ebp+0x8]
  417c49:	cmc    
  417c4a:	ins    DWORD PTR es:[edi],dx
  417c4b:	mov    al,0x85
  417c4d:	push   edx
  417c4e:	cmp    eax,0x8ed2be6f
  417c53:	rcr    BYTE PTR [edi-0x5538bee9],1
  417c59:	out    0x2d,eax
  417c5b:	adc    al,0xfd
  417c5d:	and    bl,BYTE PTR [eax-0x16a6fa29]
  417c63:	pop    ax
  417c65:	dec    ecx
  417c66:	out    dx,eax
  417c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c68:	mov    BYTE PTR [ebp+0x78],cl
  417c6b:	(bad)  
  417c6c:	sub    al,dl
  417c6e:	sbb    BYTE PTR [eax],0x48
  417c71:	addr16 jb 0x417c0d
  417c74:	inc    eax
  417c75:	adc    DWORD PTR [edx-0x5d],ebp
  417c78:	lods   al,BYTE PTR ds:[esi]
  417c79:	xchg   esp,eax
  417c7a:	jmp    0x90bb3fed
  417c7f:	xchg   edi,eax
  417c80:	or     bh,ah
  417c82:	jg     0x417c81
  417c84:	cs leave 
  417c86:	sbb    dl,bh
  417c88:	pop    ebx
  417c89:	mov    ebp,0x353a4853
  417c8e:	ss push esi
  417c90:	mov    edi,0x99d7b754
  417c95:	lods   al,BYTE PTR ds:[esi]
  417c96:	lods   eax,DWORD PTR ds:[esi]
  417c97:	mov    eax,0x67b219de
  417c9c:	enter  0x4467,0xbb
  417ca0:	stc    
  417ca1:	mov    eax,ds:0x2db2634b
  417ca6:	mov    cl,0x61
  417ca8:	xchg   ebp,eax
  417ca9:	retf   
  417caa:	aad    0x91
  417cac:	test   BYTE PTR [edx],al
  417cae:	inc    esi
  417caf:	adc    BYTE PTR [esi+0x5ed474aa],al
  417cb5:	mov    esp,0x92c49c19
  417cba:	mov    cl,0xcd
  417cbc:	sbb    al,bh
  417cbe:	mov    esp,0xdf79f0f7
  417cc3:	xlat   BYTE PTR ds:[ebx]
  417cc4:	push   ebx
  417cc5:	adc    al,0xcd
  417cc7:	in     al,0x4b
  417cc9:	test   BYTE PTR [ecx],cl
  417ccb:	jp     0x417c57
  417ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cce:	int3   
  417ccf:	lock mul edi
  417cd2:	jle    0x417d42
  417cd4:	dec    ebp
  417cd5:	nop
  417cd6:	loop   0x417caf
  417cd8:	cdq    
  417cd9:	and    DWORD PTR [ecx],0x16ed416b
  417cdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ce0:	mov    BYTE PTR [edx+0x4754cb0e],dl
  417ce6:	mov    ebx,0xb671a98
  417ceb:	mov    dh,0xa7
  417ced:	add    DWORD PTR [eax],esp
  417cef:	cmc    
  417cf0:	stos   BYTE PTR es:[edi],al
  417cf1:	fdiv   QWORD PTR [ecx-0x1acb4570]
  417cf7:	(bad)  
  417cf8:	into   
  417cf9:	push   ss
  417cfa:	mov    bh,0xd6
  417cfc:	ror    BYTE PTR [edx+0x7a],cl
  417cff:	(bad)  
  417d00:	xor    DWORD PTR ds:0x246d1b16,eax
  417d06:	mov    cl,0x93
  417d08:	out    dx,eax
  417d09:	adc    esp,esp
  417d0b:	mov    edi,0xdd957fdc
  417d10:	inc    edi
  417d11:	xor    edi,DWORD PTR [eax-0x10]
  417d14:	inc    esi
  417d15:	adc    di,WORD PTR [edi+0x64]
  417d19:	(bad)  
  417d1a:	shr    BYTE PTR [esi],1
  417d1c:	cmp    al,0x87
  417d1e:	shr    DWORD PTR [esi+0x317ffe88],1
  417d24:	shl    DWORD PTR [ecx+edi*8+0x49],1
  417d28:	repnz outs dx,BYTE PTR ds:[esi]
  417d2a:	and    eax,DWORD PTR [ecx+0x2b31869c]
  417d30:	retf   
  417d31:	push   ss
  417d32:	lahf   
  417d33:	pusha  
  417d34:	mov    bh,0xeb
  417d36:	out    0x7b,al
  417d38:	push   ds
  417d39:	fst    QWORD PTR [ebx-0x49]
  417d3c:	int    0x2f
  417d3e:	xor    edx,ecx
  417d40:	test   al,0x55
  417d42:	add    ebx,DWORD PTR [eax+0x5b]
  417d45:	xor    eax,edx
  417d47:	shr    BYTE PTR [esi*2+0x7704a702],1
  417d4e:	mov    cl,0x74
  417d50:	pop    ecx
  417d51:	xchg   esp,eax
  417d52:	push   esi
  417d53:	mov    ebp,0xd7a5b4a9
  417d58:	cmc    
  417d59:	xor    edi,ecx
  417d5b:	mov    al,0x48
  417d5d:	jno    0x417d38
  417d5f:	cmp    ecx,DWORD PTR [eax+0x714ae096]
  417d65:	cmc    
  417d66:	sahf   
  417d67:	pop    esi
  417d68:	and    al,0x67
  417d6a:	sbb    BYTE PTR [edx+0x68],al
  417d6d:	lock jnp 0x417d46
  417d70:	xchg   ebx,eax
  417d71:	add    dh,BYTE PTR [ecx+0x6508c735]
  417d77:	(bad)  
  417d78:	xchg   esp,eax
  417d79:	dec    edx
  417d7a:	adc    eax,ebx
  417d7c:	cmp    ah,BYTE PTR [ebp-0x17f7ecf2]
  417d82:	sbb    BYTE PTR [esp+ebp*1+0x1a],cl
  417d86:	ror    ecx,1
  417d88:	and    bh,dh
  417d8a:	and    eax,0xc57b24a8
  417d8f:	sub    cl,BYTE PTR [esi]
  417d91:	and    al,0x8
  417d93:	adc    BYTE PTR [ecx-0x17],dh
  417d96:	dec    ecx
  417d97:	cwde   
  417d98:	int    0x9d
  417d9a:	mov    edi,0x389c60e4
  417d9f:	aaa    
  417da0:	and    dl,BYTE PTR [edi]
  417da2:	out    0x42,al
  417da4:	mov    ebx,0xdb284768
  417da9:	fwait
  417daa:	xchg   ecx,eax
  417dab:	mov    bh,0x47
  417dad:	(bad)  
  417dae:	pop    eax
  417daf:	out    dx,al
  417db0:	xchg   DWORD PTR [esi+0x4],ebp
  417db3:	inc    ecx
  417db4:	outs   dx,BYTE PTR ds:[esi]
  417db5:	ret    
  417db6:	int3   
  417db7:	jne    0x417e2d
  417db9:	dec    ebx
  417dba:	test   al,0xcf
  417dbc:	xchg   esp,edx
  417dbe:	pop    edi
  417dbf:	sub    ebx,DWORD PTR [eax+0x3619b5b1]
  417dc5:	or     eax,0x2c488904
  417dca:	xor    BYTE PTR [ebx-0x44],ch
  417dcd:	addr16 mov ds:0xeb0a,al
  417dd1:	mov    eax,0x38846a3a
  417dd6:	mov    cl,0x5b
  417dd8:	adc    al,0xd1
  417dda:	(bad)  
  417ddb:	mov    ds:0xd7313a19,al
  417de0:	and    eax,DWORD PTR [edx-0x7e]
  417de3:	mov    dl,0x93
  417de5:	lods   eax,DWORD PTR ds:[esi]
  417de6:	iret   
  417de7:	mov    bh,0x99
  417de9:	pop    ebx
  417dea:	inc    ebx
  417deb:	sahf   
  417dec:	enter  0xaa0d,0x70
  417df0:	mov    ss,WORD PTR [eax+0x3b]
  417df3:	xlat   BYTE PTR ds:[ebx]
  417df4:	sbb    ebx,edi
  417df6:	mov    ds:0x6ada8413,al
  417dfb:	xchg   DWORD PTR [eax-0x64eb28e0],ecx
  417e01:	pusha  
  417e02:	nop
  417e03:	sbb    eax,0xb58067be
  417e08:	and    BYTE PTR [esp+edx*2],bl
  417e0b:	xchg   edi,eax
  417e0c:	push   ecx
  417e0d:	fdiv   DWORD PTR [ecx+0x7fc1d551]
  417e13:	cwde   
  417e14:	adc    BYTE PTR [edx+0x706ed731],ch
  417e1a:	and    al,0x4c
  417e1c:	(bad)  [ebp+0x29]
  417e1f:	les    eax,FWORD PTR [edi-0x72fb9958]
  417e25:	or     al,BYTE PTR [ebx+0x51d7406]
  417e2b:	xlat   BYTE PTR ds:[ebx]
  417e2c:	outs   dx,BYTE PTR ds:[esi]
  417e2d:	sub    BYTE PTR [edi+0x2b],ch
  417e30:	out    0x84,eax
  417e32:	lds    ebp,FWORD PTR [edx+0x1c5da588]
  417e38:	mov    eax,0x20f83694
  417e3d:	addr16 dec ebx
  417e3f:	dec    esi
  417e40:	dec    ecx
  417e41:	mov    ebx,0x28afb0e8
  417e46:	mov    cl,0x44
  417e48:	rcl    bl,1
  417e4a:	adc    al,0x4b
  417e4c:	xor    BYTE PTR [edx],dh
  417e4e:	mov    ebp,0x1dce6cd7
  417e53:	cmp    eax,0x894396a
  417e58:	mov    BYTE PTR [esi],cl
  417e5a:	scas   eax,DWORD PTR es:[edi]
  417e5b:	lea    esi,[ebp-0x3a]
  417e5e:	jp     0x417e6c
  417e60:	mov    ch,0x5d
  417e62:	int    0x55
  417e64:	mov    edi,esp
  417e66:	in     eax,0x95
  417e68:	enter  0x122,0x81
  417e6c:	inc    esp
  417e6d:	mov    al,ds:0x465fe9b1
  417e72:	xchg   esi,eax
  417e73:	dec    ebx
  417e74:	sub    BYTE PTR [ebx-0x3d],dh
  417e77:	mov    eax,ds:0x4db66746
  417e7c:	cmp    al,0x68
  417e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e7f:	sub    DWORD PTR [ebx-0x7740a837],eax
  417e85:	je     0x417e7e
  417e87:	imul   ebp,edi,0x935788f2
  417e8d:	addr16 enter 0x2d65,0xe2
  417e92:	sar    BYTE PTR [ecx],cl
  417e94:	pop    ds
  417e95:	in     eax,dx
  417e96:	mov    esi,0x17a99458
  417e9b:	test   BYTE PTR [esi+esi*8-0x2f],0x99
  417ea0:	pop    eax
  417ea1:	lahf   
  417ea2:	retf   0xddd7
  417ea5:	mov    ch,0xf9
  417ea7:	xor    al,0xd
  417ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eaa:	sar    eax,cl
  417eac:	mov    ah,ah
  417eae:	jbe    0x417edb
  417eb0:	add    BYTE PTR [ebx-0x56],dh
  417eb3:	mov    esp,0xfc496731
  417eb8:	sti    
  417eb9:	jmp    0x417e7e
  417ebb:	popf   
  417ebc:	pop    ebp
  417ebd:	and    DWORD PTR [edx+0x53fa49cd],esi
  417ec3:	jp     0x417e81
  417ec5:	loopne 0x417f38
  417ec7:	rol    cl,cl
  417ec9:	push   ecx
  417eca:	in     eax,dx
  417ecb:	retf   
  417ecc:	inc    ebp
  417ecd:	xor    DWORD PTR [edx],edi
  417ecf:	push   esi
  417ed0:	mov    edi,0xf1e80cc1
  417ed5:	mov    edx,0xa63f6b
  417eda:	mov    ch,0xed
  417edc:	pop    ds
  417edd:	pusha  
  417ede:	jle    0x417eae
  417ee0:	or     BYTE PTR [ecx+eiz*2+0x64],al
  417ee4:	fcom   QWORD PTR [eax+edx*2]
  417ee7:	xlat   BYTE PTR ds:[ebx]
  417ee8:	or     ebx,ebx
  417eea:	imul   esi,eax,0x4
  417eed:	xchg   edi,eax
  417eee:	in     al,dx
  417eef:	sbb    cl,BYTE PTR [eax+0x5ac0265f]
  417ef5:	in     al,dx
  417ef6:	mov    edx,0x5867f2ed
  417efb:	ret    
  417efc:	ucomiss xmm7,DWORD PTR [edi]
  417eff:	imul   esp,esp,0xffffffa4
  417f02:	jmp    0xeaa8f1d4
  417f07:	or     DWORD PTR [ecx+0x20],esp
  417f0a:	mov    ds:0xdb795297,eax
  417f0f:	pushf  
  417f10:	mov    ah,0x27
  417f12:	mov    bl,0xfe
  417f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f15:	(bad)  
  417f16:	dec    ebx
  417f17:	pop    esi
  417f18:	jp     0x417f1d
  417f1a:	mov    cl,0x31
  417f1c:	add    ch,ah
  417f1e:	lea    edx,[edx]
  417f20:	xor    al,0x79
  417f22:	sti    
  417f23:	xlat   BYTE PTR ds:[ebx]
  417f24:	or     ch,bl
  417f26:	dec    ebp
  417f27:	and    bl,BYTE PTR [eax]
  417f29:	(bad)  
  417f2a:	push   eax
  417f2b:	dec    esi
  417f2c:	mov    ch,ah
  417f2e:	inc    ecx
  417f2f:	loop   0x417f80
  417f31:	sti    
  417f32:	in     al,dx
  417f33:	ficomp WORD PTR [esi]
  417f35:	addr16 pop esp
  417f37:	and    al,0x7a
  417f39:	and    ch,dh
  417f3b:	sub    BYTE PTR [ecx+0x3e],dh
  417f3e:	mov    cl,0x8d
  417f40:	add    bl,al
  417f42:	push   0x59f606a7
  417f47:	xlat   BYTE PTR ds:[ebx]
  417f48:	jbe    0x417f03
  417f4a:	mov    eax,ds:0xf72ac037
  417f4f:	mov    al,0x40
  417f51:	sub    eax,0xd78f45b1
  417f56:	sbb    al,0xd2
  417f58:	outs   dx,DWORD PTR ds:[esi]
  417f59:	out    0xb7,al
  417f5b:	dec    edi
  417f5c:	xchg   edi,eax
  417f5d:	bound  esi,QWORD PTR [ebp-0x489f94a]
  417f63:	adc    BYTE PTR [esi],dh
  417f65:	out    0x19,eax
  417f67:	addr16 jg 0x417f09
  417f6a:	mov    edi,0xa7ab4d40
  417f6f:	jbe    0x417f7f
  417f71:	cmp    DWORD PTR [edx-0x5a9db758],edi
  417f77:	fadd   st,st(3)
  417f79:	and    esp,DWORD PTR [edx]
  417f7b:	(bad)  
  417f7c:	mov    BYTE PTR ds:0x56a2bc4a,al
  417f82:	mov    cl,0x31
  417f84:	and    BYTE PTR [esi+0x65bf9bdd],al
  417f8a:	dec    esi
  417f8b:	xlat   BYTE PTR ds:[ebx]
  417f8c:	cmp    eax,0xab4379d3
  417f91:	popf   
  417f92:	test   al,0x10
  417f94:	mov    BYTE PTR [ebx+edi*1],dh
  417f97:	loope  0x417f55
  417f99:	repnz test eax,0x64ba974
  417f9f:	jno    0x417fe5
  417fa1:	addr16 jo 0x417fa9
  417fa4:	dec    edx
  417fa5:	das    
  417fa6:	mov    edi,gs
  417fa8:	dec    BYTE PTR [eax+0x6983f5ed]
  417fae:	and    dl,bh
  417fb0:	(bad)  
  417fb1:	es adc eax,0xc156855b
  417fb7:	int    0x58
  417fb9:	adc    dh,BYTE PTR ds:0x502f71d7
  417fbf:	sar    DWORD PTR [edi],cl
  417fc1:	push   edx
  417fc2:	and    al,0x50
  417fc4:	mov    BYTE PTR [edi],ah
  417fc6:	or     DWORD PTR [edx-0x3b],edx
  417fc9:	adc    al,0xf5
  417fcb:	imul   edi,esp,0x67
  417fce:	stos   DWORD PTR es:[edi],eax
  417fcf:	lds    ebp,FWORD PTR [ebx-0x1da26de7]
  417fd5:	(bad)  
  417fd6:	mov    esi,0xaf98e09c
  417fdb:	pop    ss
  417fdc:	xlat   BYTE PTR ds:[ebx]
  417fdd:	or     BYTE PTR [edi+ebp*1],ah
  417fe0:	jge    0x418049
  417fe2:	aaa    
  417fe3:	pop    ebx
  417fe4:	add    ch,0xf6
  417fe7:	jmp    0x41800a
  417fe9:	inc    edx
  417fea:	mov    dh,0x50
  417fec:	lods   eax,DWORD PTR ds:[esi]
  417fed:	and    DWORD PTR [ebx-0x6a],ebp
  417ff0:	cwde   
  417ff1:	mov    dl,0xd5
  417ff3:	in     eax,dx
  417ff4:	cwde   
  417ff5:	sub    eax,DWORD PTR [ebx+0x19c68196]
  417ffb:	sub    esp,ebx
  417ffd:	(bad)  
  417ffe:	and    al,0x20
  418000:	push   ds
  418001:	jae    0x417fb4
  418003:	mov    ecx,0xd49d6f6b
  418008:	das    
  418009:	out    dx,eax
  41800a:	xlat   BYTE PTR ds:[ebx]
  41800b:	xlat   BYTE PTR ds:[ebx]
  41800c:	and    DWORD PTR [esi],ecx
  41800e:	pop    edi
  41800f:	adc    edi,DWORD PTR [edx-0x28]
  418012:	shl    DWORD PTR [ebx],cl
  418014:	sub    esp,0x49
  418017:	test   eax,0x7876d51f
  41801c:	push   0xdb6dfdea
  418021:	sbb    BYTE PTR [bx+0x10],al
  418025:	xchg   edi,eax
  418026:	inc    ebp
  418027:	inc    ebp
  418028:	lods   al,BYTE PTR ds:[esi]
  418029:	iret   
  41802a:	mov    cl,0x11
  41802c:	jae    0x417fd2
  41802e:	or     al,0x1c
  418030:	push   esp
  418031:	add    eax,0x512efbbb
  418036:	enter  0x72d7,0x93
  41803a:	and    al,0x8a
  41803c:	outs   dx,BYTE PTR ds:[esi]
  41803e:	inc    ebp
  41803f:	pop    edx
  418040:	fcomp  QWORD PTR [esi-0x307836da]
  418046:	mov    dh,0x53
  418048:	push   ds
  418049:	jnp    0x41801c
  41804b:	adc    BYTE PTR [ebx],bl
  41804d:	sti    
  41804e:	inc    eax
  41804f:	xlat   BYTE PTR ds:[ebx]
  418050:	pop    eax
  418051:	inc    ecx
  418052:	data16 test BYTE PTR [ebx-0x3398328e],bl
  418059:	mov    ds:0x3260d764,eax
  41805e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418060:	fucomip st,st(5)
  418062:	mov    esi,0x44dcfdd6
  418067:	add    eax,0xf7dc38f0
  41806c:	call   0xab81:0xa88cb1c8
  418073:	mov    eax,ds:0xd6694002
  418078:	out    0x5f,al
  41807a:	add    ebp,DWORD PTR [ebx-0x1]
  41807d:	lds    ebp,FWORD PTR [edx-0x4e35c0e5]
  418083:	fbstp  TBYTE PTR [ecx-0x5f1dfe5d]
  418089:	pop    ecx
  41808a:	xchg   esp,eax
  41808b:	repz add dh,0x9f
  41808f:	in     eax,dx
  418090:	or     bh,cl
  418092:	xchg   ebx,eax
  418093:	mov    DWORD PTR [edi+esi*4-0x5077b47f],0x27b4a9a7
  41809e:	out    dx,al
  41809f:	stc    
  4180a0:	outs   dx,BYTE PTR ds:[esi]
  4180a1:	addr16 or eax,0xb6b55e13
  4180a7:	lods   eax,DWORD PTR ds:[esi]
  4180a8:	fisub  WORD PTR ds:0x6786d9ed
  4180ae:	mov    BYTE PTR [esi+esi*1],bh
  4180b1:	mov    BYTE PTR [ecx+ebp*2],ch
  4180b4:	cmp    ebx,DWORD PTR ds:0xf5c7d7d2
  4180ba:	sub    edi,DWORD PTR [edi]
  4180bc:	xchg   DWORD PTR [esi*4+0x4d9f8880],ebp
  4180c3:	mov    ecx,0x610cae6f
  4180c8:	leave  
  4180c9:	arpl   WORD PTR [edx+eiz*8],bp
  4180cc:	mov    ds:0xa15745a9,al
  4180d1:	inc    edi
  4180d2:	cld    
  4180d3:	xchg   BYTE PTR [eax+0x6001edc5],cl
  4180d9:	mov    bl,0x44
  4180db:	push   ebx
  4180dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180dd:	push   0x8249c99a
  4180e2:	jg     0x4180b6
  4180e4:	dec    eax
  4180e5:	popa   
  4180e6:	jg     0x418146
  4180e8:	xchg   BYTE PTR [edx],cl
  4180ea:	mov    cl,0x71
  4180ec:	add    BYTE PTR [esi],bl
  4180ee:	mov    ebx,0x8dc45105
  4180f3:	ror    DWORD PTR [ecx],cl
  4180f5:	cmp    BYTE PTR [ebp-0x6d1821aa],ch
  4180fb:	stos   BYTE PTR es:[edi],al
  4180fc:	sbb    DWORD PTR [ecx-0x74],ebp
  4180ff:	int    0x4c
  418101:	out    0xf0,eax
  418103:	pop    ecx
  418104:	add    edx,edx
  418106:	push   0x9c932b7b
  41810b:	xlat   BYTE PTR ds:[ebx]
  41810c:	sbb    esi,DWORD PTR [eax+0x77ffd855]
  418112:	xor    eax,0xf16e990d
  418117:	mov    BYTE PTR ds:[ebx-0x4c],ch
  41811b:	lock xchg edi,eax
  41811d:	fdivr  DWORD PTR [edi]
  41811f:	cmp    DWORD PTR [edi+eiz*2-0x5f44486c],edx
  418126:	repnz popf 
  418128:	add    DWORD PTR [eax+0x75b6c0b1],ecx
  41812e:	jmp    0x78d0:0x4bd5685b
  418135:	pop    ebp
  418136:	aas    
  418137:	mov    bl,0xfe
  418139:	xlat   BYTE PTR ds:[ebx]
  41813a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41813b:	push   esi
  41813c:	or     DWORD PTR [eax-0x4f],0x63
  418140:	repz push ds
  418142:	(bad)
  418145:	sbb    ecx,0xffffffd7
  418148:	jae    0x418100
  41814a:	mov    esi,0x2a7d2438
  41814f:	add    DWORD PTR [eax-0xcfc77ac],0xd1434167
  418159:	inc    esp
  41815a:	ins    DWORD PTR es:[edi],dx
  41815b:	js     0x4181cb
  41815d:	addr16 adc al,0xc7
  418160:	dec    eax
  418161:	xchg   esp,eax
  418162:	xlat   BYTE PTR ds:[ebx]
  418163:	lods   al,BYTE PTR ds:[esi]
  418164:	(bad)  
  418165:	sti    
  418166:	mov    dl,0xa
  418168:	and    eax,0x148179ac
  41816d:	mov    bl,0x31
  41816f:	xchg   edx,eax
  418170:	pop    ecx
  418171:	mov    ds:0x387edc76,al
  418176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418177:	enter  0x9888,0xe8
  41817b:	(bad)  
  41817d:	fnstenv [ecx+0x7e36c5b7]
  418183:	es push ebp
  418185:	push   edx
  418186:	or     bl,al
  418188:	stc    
  418189:	cmp    BYTE PTR [esi-0x60b1386b],bh
  41818f:	push   edi
  418190:	mov    edx,0x880a1f9b
  418195:	jmp    0xb0e740e5
  41819a:	jecxz  0x4181fe
  41819c:	scas   al,BYTE PTR es:[edi]
  41819d:	addr16 push edx
  41819f:	sbb    ebp,edx
  4181a1:	adc    edx,ecx
  4181a3:	adc    ah,BYTE PTR [ebx-0x7174e1b]
  4181a9:	push   ebx
  4181aa:	dec    edi
  4181ab:	dec    ecx
  4181ac:	call   eax
  4181ae:	adc    edx,edi
  4181b0:	dec    ecx
  4181b1:	pop    ds
  4181b2:	xor    DWORD PTR [esi+0x20a0312d],0x8fcbe288
  4181bc:	or     eax,0x95434278
  4181c1:	cmp    WORD PTR [ebx-0x5017e60a],sp
  4181c8:	ja     0x41815d
  4181ca:	inc    esi
  4181cb:	in     eax,0x87
  4181cd:	pop    esi
  4181ce:	sbb    al,0x23
  4181d0:	sbb    ebx,DWORD PTR [eax-0x77]
  4181d3:	retf   
  4181d4:	je     0x418193
  4181d6:	pop    edx
  4181d7:	xor    edx,ebp
  4181d9:	addr16 cld 
  4181db:	fistp  DWORD PTR [edx]
  4181dd:	mov    esi,0x4c136839
  4181e2:	mov    dl,0x43
  4181e4:	inc    ebx
  4181e5:	es (bad) 
  4181e7:	fwait
  4181e8:	pop    es
  4181e9:	in     al,dx
  4181ea:	pop    edx
  4181eb:	or     eax,0xa9d22665
  4181f0:	je     0x4181cf
  4181f2:	xlat   BYTE PTR fs:[ebx]
  4181f4:	push   esp
  4181f5:	pop    ecx
  4181f6:	or     al,0x38
  4181f8:	cmp    al,0x75
  4181fa:	push   edi
  4181fb:	mov    BYTE PTR [si-0x7075],ch
  418200:	jmp    0x418261
  418202:	add    al,0x7d
  418204:	pop    edx
  418205:	or     dh,BYTE PTR [bx]
  418208:	popf   
  418209:	sbb    al,0x75
  41820b:	mov    al,ds:0x38cac35f
  418210:	mov    BYTE PTR [ecx+ebx*1+0xf],dl
  418214:	adc    al,0x93
  418216:	xor    eax,0x7681978f
  41821b:	(bad)  
  41821c:	xchg   ecx,eax
  41821d:	out    0xda,al
  41821f:	repz sti 
  418221:	sub    DWORD PTR [esi],ebx
  418223:	neg    DWORD PTR [ebp-0x777232b1]
  418229:	and    DWORD PTR [esi],0x9d135045
  41822f:	fucomi st,st(0)
  418231:	add    DWORD PTR [bx],0x70
  418235:	ret    0x227c
  418238:	loop   0x4181dd
  41823a:	mov    cl,0x3c
  41823c:	daa    
  41823d:	cmp    BYTE PTR [edi+ebx*8-0x2858f551],al
  418244:	dec    edi
  418245:	test   BYTE PTR [eax-0x3],al
  418248:	add    ch,BYTE PTR [edx]
  41824a:	cdq    
  41824b:	test   DWORD PTR [eax+0x60beae9f],ecx
  418251:	test   eax,0x67ec10d3
  418256:	or     ebp,edx
  418258:	cs repz add eax,0xb12a213e
  41825f:	cmp    al,0xa7
  418261:	lock ror DWORD PTR [edi+0x27],0x2
  418266:	mov    eax,ebp
  418268:	jo     0x4181fe
  41826a:	mov    al,0xc0
  41826c:	pop    eax
  41826d:	dec    edx
  41826e:	push   es
  41826f:	outs   dx,BYTE PTR ds:[esi]
  418270:	adc    BYTE PTR [edi+0x1388d325],bl
  418276:	pop    es
  418277:	imul   edx,DWORD PTR [ebp-0x398d2f63],0x69
  41827e:	loop   0x41822d
  418280:	mov    ds:0xb83a11bf,eax
  418285:	mov    WORD PTR [ecx-0x6d],fs
  418288:	mov    BYTE PTR [ebx],ch
  41828a:	test   BYTE PTR [edi-0x2090c501],0x2d
  418291:	push   ds
  418292:	mov    WORD PTR [ebx],?
  418294:	pop    ebx
  418295:	fwait
  418296:	in     eax,0xd6
  418298:	test   BYTE PTR [esi-0x1b1eb222],dl
  41829e:	or     BYTE PTR [edi+0x23220c0e],dl
  4182a4:	mov    WORD PTR [esp+eiz*2],es
  4182a7:	inc    edi
  4182a8:	xor    DWORD PTR ds:[eax],esp
  4182ab:	xlat   BYTE PTR ds:[ebx]
  4182ac:	test   DWORD PTR [eax+0x7b],esi
  4182af:	(bad)  
  4182b0:	repnz and ch,BYTE PTR [eax+0x4f81880e]
  4182b7:	jnp    0x41827e
  4182b9:	fcomp  QWORD PTR [eax+0x3f]
  4182bc:	retf   
  4182bd:	addr16 mov dl,0xfb
  4182c0:	adc    eax,0x664380a
  4182c5:	and    eax,0x4aa92bba
  4182ca:	jne    0x418323
  4182cc:	das    
  4182cd:	sbb    ebp,DWORD PTR [edi-0x75]
  4182d0:	aas    
  4182d1:	addr16 das 
  4182d3:	mov    ebx,0x814badd0
  4182d8:	and    ecx,DWORD PTR [edi-0x4a]
  4182db:	add    ah,0x9f
  4182de:	mov    ecx,0xd138511e
  4182e3:	(bad)  
  4182e4:	cmp    eax,0xca863de
  4182e9:	addr16 stc 
  4182eb:	sub    eax,0xf6fb9c55
  4182f0:	imul   DWORD PTR [esi-0x4f]
  4182f3:	enter  0xb28d,0x53
  4182f7:	ja     0x418365
  4182f9:	enter  0xe8a6,0xfd
  4182fd:	dec    eax
  4182fe:	xor    dl,dh
  418300:	sub    eax,0xaa5792c5
  418305:	inc    ebp
  418306:	fisub  DWORD PTR [eax]
  418308:	add    DWORD PTR [edx+0x1148f94f],0x1d36e395
  418312:	push   ds
  418313:	xlat   BYTE PTR ds:[ebx]
  418314:	push   edi
  418315:	fisub  WORD PTR [esi+edx*8-0x8]
  418319:	xchg   ebx,eax
  41831a:	cmp    esi,ecx
  41831c:	mov    BYTE PTR [ebp-0x2a],dh
  41831f:	jge    0x418399
  418321:	retf   
  418322:	fwait
  418323:	mov    ds:0xcdb360ea,eax
  418328:	ja     0x418357
  41832a:	bound  edx,QWORD PTR [edi]
  41832c:	ss jb  0x41834e
  41832f:	inc    eax
  418330:	sbb    DWORD PTR [esi+0x48],0x71ea9b5b
  418337:	dec    eax
  418338:	push   ds
  418339:	stos   BYTE PTR es:[edi],al
  41833a:	mov    ebx,0x6a67f141
  41833f:	imul   ebx,DWORD PTR [eax+0x7e68952c],0x5a
  418346:	mov    cl,0xc1
  418348:	inc    esi
  418349:	in     eax,0x65
  41834b:	int3   
  41834c:	mov    ebp,0x95efd4f7
  418351:	xor    BYTE PTR [ecx-0x2dd6e876],0x6d
  418358:	jno    0x418319
  41835a:	mov    DWORD PTR [edx+0x7d],edx
  41835d:	inc    ecx
  41835e:	jecxz  0x418379
  418360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418361:	jns    0x418314
  418363:	jg     0x4183a9
  418365:	sbb    al,ch
  418367:	mov    WORD PTR [ebp+0x23f7367],?
  41836d:	add    DWORD PTR [edx-0x21],ebp
  418370:	sahf   
  418371:	inc    edx
  418372:	mov    cl,0x3a
  418374:	push   es
  418375:	fnstcw WORD PTR [eax+0x41]
  418378:	xchg   esp,eax
  418379:	fnsave [ecx]
  41837b:	xor    DWORD PTR [ebx-0x5b31a29a],edx
  418381:	in     al,dx
  418382:	mov    ds:0xa097e679,al
  418387:	mov    ecx,DWORD PTR [eax+0x1a64c26]
  41838d:	cld    
  41838e:	ret    0xc51d
  418391:	arpl   WORD PTR [eax-0x15],dx
  418394:	popf   
  418395:	push   es
  418396:	push   ebp
  418397:	push   edi
  418398:	std    
  418399:	int3   
  41839a:	sbb    DWORD PTR [ebp+0x2d716d88],ecx
  4183a0:	jecxz  0x41836a
  4183a2:	das    
  4183a3:	pop    eax
  4183a4:	adc    al,0x63
  4183a6:	xchg   DWORD PTR [edi-0x5a],esp
  4183a9:	jno    0x41837e
  4183ab:	pop    ss
  4183ac:	jae    0x41833d
  4183ae:	xchg   ebp,eax
  4183af:	jae    0x418339
  4183b1:	int    0xe6
  4183b3:	xchg   edi,eax
  4183b4:	cmp    DWORD PTR [ebx+esi*4+0x36],ebp
  4183b8:	xor    DWORD PTR [edi+0x4],esp
  4183bb:	mov    cl,0xe8
  4183bd:	clc    
  4183be:	rcl    BYTE PTR [edx],0xd0
  4183c1:	dec    edx
  4183c2:	mov    cl,0x7b
  4183c4:	xchg   esp,esi
  4183c6:	out    dx,al
  4183c7:	jmp    0xd80846a6
  4183cc:	(bad)  
  4183cd:	(bad)  [edx+0xd]
  4183d0:	or     DWORD PTR [eax+0x69814e24],ecx
  4183d6:	jo     0x4183e4
  4183d8:	inc    ebx
  4183d9:	xor    DWORD PTR [ebx+ebp*1+0x41db2c48],0xffffff8b
  4183e1:	addr16 adc ebx,0x6b
  4183e5:	push   es
  4183e6:	fidiv  WORD PTR [eax+0x3db14e16]
  4183ec:	enter  0x3260,0x86
  4183f0:	sbb    DWORD PTR [edi+esi*1-0x15],ebx
  4183f4:	or     eax,0x7c65b155
  4183f9:	mov    al,ds:0xc05a508c
  4183fe:	mov    al,0xa4
  418400:	aam    0xf9
  418402:	test   esi,ebp
  418404:	pushf  
  418405:	scas   al,BYTE PTR es:[edi]
  418406:	pop    ebp
  418407:	cdq    
  418408:	adc    eax,DWORD PTR [ecx+0x7f]
  41840b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41840c:	mov    cl,0x67
  41840e:	inc    edx
  41840f:	jno    0x4183f5
  418411:	js     0x4183ea
  418413:	mov    ds:0x6da23c88,al
  418418:	rol    DWORD PTR [eax],cl
  41841a:	or     eax,0x64126308
  41841f:	xor    bh,al
  418421:	bound  edx,QWORD PTR [edi-0x45d90929]
  418427:	fsubr  DWORD PTR fs:[edi-0x5f]
  41842b:	cwde   
  41842c:	xchg   ebx,edi
  41842e:	(bad)  
  41842f:	in     eax,dx
  418430:	add    DWORD PTR [esi+0xb44b273],ebp
  418436:	into   
  418437:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  418439:	sar    DWORD PTR [di+0x5ea6],0x3f
  41843f:	rcl    ch,0xde
  418442:	mov    cl,0x51
  418444:	push   ss
  418445:	add    eax,0x48a2b653
  41844a:	mov    esi,0xf52463d7
  41844f:	ret    0xf972
  418452:	scas   eax,DWORD PTR es:[edi]
  418453:	dec    ebp
  418454:	xchg   DWORD PTR [edi],edx
  418456:	lahf   
  418457:	in     eax,dx
  418458:	call   0xc860fb2f
  41845d:	mov    edx,0x37ba7af7
  418462:	add    DWORD PTR ds:0x723b67ee,esp
  418468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418469:	imul   edx,DWORD PTR [ecx+0x12],0xffffffb0
  41846d:	push   edx
  41846e:	mov    cl,0x71
  418470:	push   esi
  418471:	rcl    BYTE PTR ss:[edx+0xc],cl
  418475:	in     al,0xb0
  418477:	xlat   BYTE PTR ds:[ebx]
  418478:	dec    ecx
  418479:	mov    ss,WORD PTR [ebx]
  41847b:	shl    DWORD PTR [edx-0xd],cl
  41847e:	sub    eax,0x6500885c
  418483:	or     al,0xed
  418485:	xchg   ebp,eax
  418486:	jmp    0x418442
  418488:	xor    dh,BYTE PTR [eax-0x7e]
  41848b:	mul    DWORD PTR [eax+0x67]
  41848e:	xor    eax,0x6c6e823a
  418493:	das    
  418494:	cdq    
  418495:	pop    eax
  418496:	int    0xee
  418498:	add    eax,0x95f82ae1
  41849d:	mov    bh,0x9d
  41849f:	loopne 0x418440
  4184a1:	fld    QWORD PTR [bp-0xc]
  4184a5:	mov    ah,0x7e
  4184a7:	rcl    DWORD PTR [ecx],0xbb
  4184aa:	mov    cl,0x7e
  4184ac:	inc    ecx
  4184ad:	jecxz  0x418445
  4184af:	dec    esi
  4184b0:	jno    0x41847f
  4184b2:	cdq    
  4184b3:	retf   0x99a9
  4184b6:	mov    bl,0x97
  4184b8:	mov    eax,es:0xd7b993db
  4184be:	mov    cl,0x33
  4184c0:	imul   ebx,DWORD PTR [edx+ebp*1],0x24
  4184c4:	aam    0x7e
  4184c6:	in     al,0xd7
  4184c8:	ins    DWORD PTR es:[edi],dx
  4184c9:	lock jno 0x418487
  4184cc:	scas   al,BYTE PTR es:[edi]
  4184cd:	imul   esp,DWORD PTR [edi-0x72c569cf],0x1e
  4184d4:	mov    BYTE PTR [ebx-0x11],ch
  4184d7:	ret    0x93b5
  4184da:	data16 out dx,al
  4184dc:	push   es
  4184dd:	or     DWORD PTR [ecx+0x4db5809b],esi
  4184e3:	jecxz  0x418554
  4184e5:	leave  
  4184e6:	mov    edx,0xc94c3064
  4184eb:	push   edi
  4184ec:	ja     0x4184c7
  4184ee:	inc    esp
  4184ef:	inc    ecx
  4184f0:	pop    ss
  4184f1:	call   FWORD PTR [ecx-0x3890d927]
  4184f7:	call   0xe42884
  4184fc:	inc    ecx
  4184fd:	retf   0x7cb0
  418500:	cmp    ebx,DWORD PTR [esi+0x6ea2137]
  418506:	inc    ecx
  418507:	mov    bl,0x7c
  418509:	addr16 lock iret 
  41850c:	push   ds
  41850d:	adc    dh,ah
  41850f:	cmp    DWORD PTR [esp+ebx*2],edi
  418512:	mov    al,BYTE PTR [edx-0x74]
  418515:	fs (bad) 
  418517:	mov    ebp,0x6f553356
  41851c:	stc    
  41851d:	xchg   BYTE PTR [edi-0x2c],al
  418520:	jle    0x418586
  418522:	add    al,0xde
  418524:	jmp    0x45cbbecb
  418529:	lea    esi,[ecx+0x55d1de04]
  41852f:	or     al,0xec
  418531:	adc    DWORD PTR [ebp+0x4f80e6d7],eax
  418537:	pop    ss
  418538:	xchg   ebx,eax
  418539:	inc    esi
  41853a:	(bad)  
  41853b:	mov    esi,0x2cb17c7a
  418540:	enter  0x624b,0xe6
  418544:	push   esp
  418545:	pop    edx
  418546:	xchg   bh,dl
  418548:	mov    esp,0xd42ad501
  41854d:	shl    DWORD PTR [ebx+0x7a9388ae],cl
  418553:	pop    edi
  418554:	idiv   DWORD PTR ds:0x88b6f589
  41855a:	xor    DWORD PTR [eax+0x4d4767f2],0x1140f8b9
  418564:	pop    ss
  418565:	jmp    0xb1b1:0x4609c1ae
  41856c:	ret    0x31be
  41856f:	cmp    BYTE PTR [ebx+0x3f],ch
  418572:	sub    BYTE PTR [eax+ecx*4],ah
  418575:	in     al,0xaa
  418577:	cwde   
  418578:	das    
  418579:	mov    cl,0x56
  41857b:	dec    BYTE PTR [eax-0x680e2092]
  418581:	stos   DWORD PTR es:[edi],eax
  418582:	cmp    ah,BYTE PTR [edx-0x8]
  418585:	jnp    0x418528
  418587:	mov    ebx,DWORD PTR [edx+0x66]
  41858a:	out    dx,al
  41858b:	cwde   
  41858c:	mov    dl,0x94
  41858e:	pop    ebp
  41858f:	pop    ss
  418590:	cmp    al,0x12
  418592:	mov    edi,0xf8e380e7
  418597:	ja     0x41858b
  418599:	repz mov WORD PTR [ebp+0x1a],ss
  41859d:	fs adc al,0xb8
  4185a0:	mov    dh,BYTE PTR [ebx]
  4185a2:	sub    BYTE PTR [esi-0x78],0x2d
  4185a6:	mov    bh,BYTE PTR fs:[ecx-0x3]
  4185aa:	adc    ebx,DWORD PTR [ebp-0x7aca8cd2]
  4185b0:	out    dx,al
  4185b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185b2:	lahf   
  4185b3:	ja     0x418608
  4185b5:	pop    ebx
  4185b6:	xor    DWORD PTR [ecx-0x79],esp
  4185b9:	inc    edx
  4185ba:	push   es
  4185bb:	repz enter 0xb1b6,0x2
  4185c0:	add    eax,0x42364751
  4185c5:	test   dh,dh
  4185c7:	cmp    ebp,DWORD PTR [edi]
  4185c9:	addr16 in eax,0x14
  4185cc:	fwait
  4185cd:	popfw  
  4185cf:	hlt    
  4185d0:	mov    eax,ds:0x7bf6b187
  4185d5:	mov    WORD PTR [ebx+0x5d101341],ds
  4185db:	aam    0x8c
  4185dd:	and    eax,0x85e9b462
  4185e2:	and    DWORD PTR [ebx+0x7d],ecx
  4185e5:	mov    cl,0xb1
  4185e7:	add    BYTE PTR [edi-0x68],dl
  4185ea:	adc    DWORD PTR [ebp+0x6c],esi
  4185ed:	jbe    0x418574
  4185ef:	xlat   BYTE PTR ds:[ebx]
  4185f0:	mov    eax,0x19ebfef1
  4185f5:	ror    BYTE PTR [eax],0x44
  4185f8:	and    DWORD PTR [ebp+0x2ddbded3],0xc1761a31
  418602:	mov    bh,0xd7
  418604:	jae    0x4185b4
  418606:	push   ebp
  418607:	sbb    eax,0xb541280c
  41860c:	mov    esp,0xa8562af8
  418611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418612:	jg     0x4185a5
  418614:	xor    DWORD PTR [ebx-0x3a5d909a],esi
  41861a:	(bad)  
  41861b:	xlat   BYTE PTR ds:[ebx]
  41861c:	data16 jbe 0x4185c1
  41861f:	xor    edi,DWORD PTR [esi-0x7aa836fa]
  418625:	add    bh,al
  418627:	xor    al,0xef
  418629:	ret    0x5f06
  41862c:	test   ebx,ecx
  41862e:	pop    esi
  41862f:	fsub   QWORD PTR [ebp+0xa6538ae]
  418635:	push   esp
  418636:	lods   al,BYTE PTR ds:[esi]
  418637:	push   edi
  418638:	push   eax
  418639:	pop    ss
  41863a:	mov    ch,0x1c
  41863c:	shl    eax,0x88
  41863f:	sbb    ebx,edx
  418641:	xchg   edi,eax
  418642:	enter  0x88d0,0xf0
  418646:	pop    ebp
  418647:	repz leave 
  418649:	jno    0x4186c0
  41864b:	jnp    0x418667
  41864d:	addr16 jmp 0xc0dd:0x925c2893
  418655:	scas   al,BYTE PTR es:[edi]
  418656:	mov    cl,0x6b
  418658:	adc    dh,BYTE PTR [esi+0x4d]
  41865b:	xor    eax,0x3f7dcb0d
  418660:	mov    esi,0xebcb1367
  418665:	mov    ebx,DWORD PTR [ebp-0x4ed20f5d]
  41866b:	cs ds cld 
  41866e:	dec    edx
  41866f:	push   ds
  418670:	jp     0x418648
  418672:	out    dx,eax
  418673:	dec    DWORD PTR [edx-0x62369c90]
  418679:	jp     0x418662
  41867b:	xchg   esi,eax
  41867c:	repz inc ebp
  41867e:	loop   0x418605
  418680:	iret   
  418681:	lahf   
  418682:	mov    dh,0xe
  418684:	add    BYTE PTR [ecx-0x72d5f54f],dl
  41868a:	push   esi
  41868b:	xchg   ecx,eax
  41868c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41868d:	jg     0x4186ac
  41868f:	xlat   BYTE PTR ds:[ebx]
  418690:	daa    
  418691:	xor    ebx,edx
  418693:	xchg   DWORD PTR [ebp-0x4c],esp
  418696:	push   0x6a
  418698:	xchg   DWORD PTR [eax-0x792a00ff],edi
  41869e:	sub    eax,0x566c5849
  4186a3:	cmp    eax,0x691167ad
  4186a8:	add    eax,0xf6fb7544
  4186ad:	retf   0x97b1
  4186b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b1:	rcr    DWORD PTR [ebx+0x3e6da411],1
  4186b7:	lods   al,BYTE PTR ds:[esi]
  4186b8:	jmp    0x2ac5c624
  4186bd:	(bad)  
  4186bf:	sahf   
  4186c0:	adc    al,0xea
  4186c2:	mov    eax,0xb949e64b
  4186c7:	sar    BYTE PTR [ebp+0x43538f7d],1
  4186cd:	js     0x418740
  4186cf:	xchg   ecx,eax
  4186d0:	test   BYTE PTR [ebx-0x24],cl
  4186d3:	stc    
  4186d4:	mov    eax,ds:0xabd72268
  4186d9:	xor    al,0x57
  4186db:	add    esp,DWORD PTR [ecx+esi*1+0x63436b1]
  4186e2:	jns    0x4186c3
  4186e4:	popa   
  4186e5:	test   DWORD PTR [edi+0x427921aa],esi
  4186eb:	ins    BYTE PTR es:[edi],dx
  4186ec:	jg     0x418695
  4186ee:	ins    DWORD PTR es:[edi],dx
  4186ef:	inc    esi
  4186f0:	push   ebp
  4186f1:	loop   0x4186d9
  4186f3:	adc    al,0xb9
  4186f5:	rol    DWORD PTR [ebx-0x52],cl
  4186f8:	mov    ecx,0xdf576421
  4186fd:	xchg   ebx,eax
  4186fe:	jecxz  0x418713
  418700:	stos   DWORD PTR es:[edi],eax
  418701:	pop    eax
  418702:	jnp    0x4186db
  418704:	xlat   BYTE PTR ds:[ebx]
  418705:	dec    ecx
  418706:	sbb    bl,dl
  418708:	xchg   ebp,eax
  418709:	xchg   edi,eax
  41870a:	icebp  
  41870b:	dec    BYTE PTR [eax+0x21229bfd]
  418711:	jg     0x418772
  418713:	xor    eax,0xd931181a
  418718:	cmp    eax,0xe8a6b5ed
  41871d:	dec    eax
  41871e:	hlt    
  41871f:	jae    0x418770
  418721:	lods   al,BYTE PTR ds:[esi]
  418722:	inc    ecx
  418723:	outs   dx,DWORD PTR ds:[esi]
  418724:	mov    BYTE PTR [edx-0x54bd277e],al
  41872a:	fst    DWORD PTR [esp+ebp*4-0x309bbfa0]
  418731:	add    eax,DWORD PTR [ebp-0x3c4f55f9]
  418737:	jnp    0x4186c1
  418739:	cmc    
  41873a:	inc    esi
  41873b:	daa    
  41873c:	test   eax,0xa72101f9
  418741:	addr16 into 
  418743:	xchg   esp,eax
  418744:	add    dh,ch
  418746:	in     eax,dx
  418747:	mov    edx,0xf9b1f198
  41874c:	ja     0x4186e9
  41874e:	cmp    eax,0xc8666cb3
  418753:	xlat   BYTE PTR ds:[ebx]
  418754:	into   
  418755:	add    DWORD PTR [ecx-0x57265060],ebp
  41875b:	(bad)  [eax-0x4d1f5d4a]
  418761:	sbb    esi,DWORD PTR [esi-0x55983975]
  418767:	loop   0x4187ad
  418769:	pop    es
  41876a:	xchg   ebp,eax
  41876b:	and    bl,BYTE PTR [ebx-0x7f]
  41876e:	mov    cl,0xca
  418770:	clc    
  418771:	inc    edx
  418772:	dec    edx
  418773:	cmp    DWORD PTR [edi*8+0x117fd710],eax
  41877a:	xchg   edi,eax
  41877b:	enter  0xa53b,0x15
  41877f:	sbb    DWORD PTR [ebp+0xe2fdb20],eax
  418785:	lods   eax,DWORD PTR ds:[esi]
  418786:	rol    BYTE PTR [edi],0xb7
  418789:	pop    ss
  41878a:	fcom   st(7)
  41878c:	mov    dl,0xdb
  41878e:	pop    ebp
  41878f:	stos   BYTE PTR es:[edi],al
  418790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418791:	inc    esi
  418792:	in     al,0x67
  418794:	mov    BYTE PTR [edx-0x17],bh
  418797:	enter  0x5347,0x91
  41879b:	out    dx,al
  41879c:	and    DWORD PTR [edi+0x7c],0xffffff8d
  4187a0:	jle    0x418741
  4187a2:	pusha  
  4187a3:	mov    DWORD PTR [edi],edx
  4187a5:	loop   0x418758
  4187a7:	cld    
  4187a8:	scas   al,BYTE PTR es:[edi]
  4187a9:	xor    BYTE PTR [ebx-0x7d],dh
  4187ac:	xchg   edx,eax
  4187ad:	enter  0xd769,0x91
  4187b1:	out    0x61,al
  4187b3:	stc    
  4187b4:	jmp    0x532:0x9bf3115b
  4187bb:	pop    ss
  4187bc:	mov    BYTE PTR [eax],bh
  4187be:	outs   dx,BYTE PTR ds:[esi]
  4187bf:	pop    edi
  4187c0:	lods   eax,DWORD PTR ds:[esi]
  4187c1:	sbb    BYTE PTR [ebp-0x40a3bb37],ah
  4187c7:	nop
  4187c8:	aam    0xac
  4187ca:	adc    BYTE PTR [edi+0x5015351f],ah
  4187d0:	mov    BYTE PTR [edx-0x620dd398],dh
  4187d6:	popa   
  4187d7:	(bad)  
  4187d8:	fidiv  DWORD PTR [ecx-0x56]
  4187db:	aas    
  4187dc:	std    
  4187dd:	jno    0x418802
  4187df:	xlat   BYTE PTR ds:[ebx]
  4187e0:	xchg   DWORD PTR [ebx-0x3080a248],ebx
  4187e6:	mov    cl,0xd3
  4187e8:	imul   edx,edx,0x13079f81
  4187ee:	(bad)  
  4187ef:	lods   eax,DWORD PTR ds:[esi]
  4187f0:	retf   0xda79
  4187f3:	sbb    BYTE PTR [edx-0x185da99c],dh
  4187f9:	pop    ss
  4187fa:	cmp    DWORD PTR [eax+eax*4+0x2b],eax
  4187fe:	mov    cl,0x21
  418800:	out    dx,eax
  418801:	mov    esi,0x7af5ac6a
  418806:	or     ecx,0x12
  418809:	jmp    0xdbbddf3a
  41880e:	pop    ss
  41880f:	xor    BYTE PTR [edx+0x5b13b1ca],0x8e
  418816:	jp     0x41882e
  418818:	ins    DWORD PTR es:[edi],dx
  418819:	pop    ss
  41881a:	pop    ebp
  41881b:	xlat   BYTE PTR ds:[ebx]
  41881c:	jb     0x418801
  41881e:	bound  ebx,QWORD PTR [edi+0x7d]
  418821:	das    
  418822:	icebp  
  418823:	push   cs
  418824:	mov    bl,bh
  418826:	std    
  418827:	jge    0x4187b7
  418829:	fcomp  QWORD PTR [edi+0x56]
  41882c:	(bad)  
  41882d:	test   BYTE PTR [bx-0xa],al
  418831:	sbb    eax,0x5a8ae995
  418836:	mov    cl,0x20
  418838:	and    DWORD PTR ds:0xbc574fc1,ebp
  41883e:	out    0xd7,al
  418840:	aaa    
  418841:	push   edx
  418842:	into   
  418843:	push   esi
  418844:	jb     0x4187f3
  418846:	jb     0x418801
  418848:	xchg   dl,al
  41884a:	mov    ah,0x34
  41884c:	xchg   esp,eax
  41884d:	in     al,0x51
  41884f:	push   edi
  418850:	push   ds
  418851:	cmc    
  418852:	xlat   BYTE PTR ds:[ebx]
  418853:	add    ebp,DWORD PTR ds:0x892b8518
  418859:	addr16 or eax,0xd0f05ff7
  41885f:	jg     0x418883
  418861:	mov    bh,BYTE PTR [esi+0x1f236aea]
  418867:	xchg   edi,eax
  418868:	ret    
  418869:	sub    al,BYTE PTR [edi+0x4364befd]
  41886f:	push   esp
  418870:	(bad)  
  418872:	mov    al,0x62
  418874:	sub    dh,ah
  418876:	jp     0x4188a1
  418878:	mov    BYTE PTR [ebp+0x78d66bca],dh
  41887e:	add    esi,DWORD PTR ds:0x7748584e
  418884:	or     BYTE PTR [ecx+0x32],al
  418887:	mov    DWORD PTR [edi],edi
  418889:	ss push 0xbbb8886d
  41888f:	jo     0x418870
  418891:	push   esi
  418892:	mov    ch,0x20
  418894:	das    
  418895:	sbb    edx,ecx
  418897:	lds    ebx,FWORD PTR [ebx+0x9d76072]
  41889d:	xor    esi,edx
  41889f:	push   esp
  4188a0:	aad    0xd9
  4188a2:	inc    ebx
  4188a3:	inc    esp
  4188a4:	mov    BYTE PTR [esi],ah
  4188a6:	cmp    DWORD PTR [esi-0x5e5ee157],0x67cb67ae
  4188b0:	sbb    bh,BYTE PTR [ebp+eiz*4+0xb]
  4188b4:	(bad)  
  4188b5:	shr    BYTE PTR [esi-0x79],1
  4188b8:	jnp    0x4188a1
  4188ba:	or     DWORD PTR [edx+0x24],edi
  4188bd:	rol    BYTE PTR [ebp-0x7e98d8e7],cl
  4188c3:	mov    DWORD PTR [edi+0x3],eax
  4188c6:	lea    esp,ds:0xff91365
  4188cc:	and    eax,0xf2d81e67
  4188d1:	loope  0x418885
  4188d3:	dec    ecx
  4188d4:	and    DWORD PTR [edi-0x10],esp
  4188d7:	dec    esp
  4188d8:	pop    ebx
  4188d9:	ja     0x4188e8
  4188db:	stos   DWORD PTR es:[edi],eax
  4188dc:	and    eax,0xd7dab618
  4188e1:	cmp    dh,bh
  4188e3:	daa    
  4188e4:	in     eax,0xe8
  4188e6:	sub    DWORD PTR [edi+0x34],0xffffffdf
  4188ea:	loop   0x4188b5
  4188ec:	jmp    0x79d5:0xae57dafd
  4188f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f4:	mov    ah,0xf
  4188f6:	mov    ebx,edx
  4188f8:	es out 0xf3,eax
  4188fb:	(bad)  
  4188fc:	cli    
  4188fd:	test   al,ah
  4188ff:	cwde   
  418900:	and    DWORD PTR [edi-0x64],0xffffffbe
  418904:	rcr    DWORD PTR [ebp+0x1489db81],1
  41890a:	mov    esi,0x889e7aeb
  41890f:	clc    
  418910:	or     DWORD PTR [ecx+0x67dcf9c4],eax
  418916:	jne    0x418972
  418918:	sub    esp,ebx
  41891a:	and    DWORD PTR [edx-0x62],ecx
  41891d:	add    BYTE PTR [ecx-0x61f8df2],dh
  418923:	mov    ch,0x65
  418925:	inc    edi
  418926:	sbb    eax,0x7cd08dd0
  41892b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892c:	cmp    al,0x27
  41892e:	dec    eax
  41892f:	jae    0x4188f4
  418931:	sti    
  418932:	mov    cl,0x22
  418934:	jmp    0x4188ca
  418936:	mov    esi,0x1f4aecef
  41893b:	xlat   BYTE PTR ds:[ebx]
  41893c:	xor    bl,BYTE PTR [edx]
  41893e:	nop
  41893f:	sub    BYTE PTR [ebx],dl
  418941:	sbb    dh,ch
  418943:	jg     0x4188cd
  418945:	push   ss
  418946:	not    DWORD PTR [edi-0x32]
  418949:	loope  0x41893a
  41894b:	pop    ds
  41894c:	fisub  WORD PTR [eax+0x1a]
  41894f:	push   es
  418950:	jmp    0x36d8f38a
  418955:	lods   al,BYTE PTR ds:[esi]
  418956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418957:	xchg   DWORD PTR [ecx+0x7b607714],ebx
  41895d:	add    al,0xe7
  41895f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418960:	retf   0x22af
  418963:	scas   eax,DWORD PTR es:[edi]
  418964:	lahf   
  418965:	lea    ecx,[edi+edx*8+0x180ce4de]
  41896c:	dec    edi
  41896d:	lea    ebp,[edi+ecx*1-0x78]
  418971:	sar    DWORD PTR [edx-0x10c01110],0x4c
  418978:	imul   esp,DWORD PTR [esi+0x1c],0x22
  41897c:	int    0x50
  41897e:	stos   DWORD PTR es:[edi],eax
  41897f:	imul   esp,esp,0xffffff9f
  418982:	data16 mov dl,0x88
  418985:	call   0x28b19b31
  41898a:	stc    
  41898b:	lods   eax,DWORD PTR ds:[esi]
  41898c:	and    DWORD PTR [edi-0x28],0x3b
  418990:	and    ebx,ebp
  418992:	cdq    
  418993:	xchg   ecx,eax
  418994:	clc    
  418995:	or     esi,DWORD PTR [ecx-0x1f100380]
  41899b:	dec    edx
  41899c:	aas    
  41899d:	pop    esi
  41899e:	ja     0x418977
  4189a0:	js     0x4189aa
  4189a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189a3:	ret    0xa6ee
  4189a6:	sbb    ah,ah
  4189a8:	stos   BYTE PTR es:[edi],al
  4189a9:	pop    eax
  4189aa:	or     al,0xa4
  4189ac:	adc    DWORD PTR [ecx+esi*1+0x3f6c7832],0x7d67604f
  4189b7:	pop    ds
  4189b8:	mov    ds:0x25896624,al
  4189bd:	out    0xb1,al
  4189bf:	xchg   edi,eax
  4189c0:	retf   
  4189c1:	cmp    dl,BYTE PTR ds:0x945d00ff
  4189c7:	call   0x36cc60fa
  4189cc:	mov    BYTE PTR [ecx+0x78],al
  4189cf:	jbe    0x4189ae
  4189d1:	xchg   ecx,eax
  4189d2:	outs   dx,BYTE PTR ds:[esi]
  4189d3:	hlt    
  4189d4:	mov    edi,0xd4d7b378
  4189d9:	or     eax,0xd38ca0c7
  4189de:	jmp    DWORD PTR ds:0x56b66756
  4189e4:	outs   dx,DWORD PTR ds:[esi]
  4189e5:	lock xor edi,eax
  4189e8:	inc    ebx
  4189e9:	pop    edx
  4189ea:	mov    cl,0x82
  4189ec:	and    BYTE PTR [esi-0x3a11f3cd],0xef
  4189f3:	xlat   BYTE PTR ds:[ebx]
  4189f4:	jp     0x418a22
  4189f6:	push   ecx
  4189f7:	inc    DWORD PTR [ecx+0x0]
  4189fa:	jnp    0x4189d1
  4189fc:	mov    BYTE PTR [eax+0x76bbee6c],bl
  418a02:	push   eax
  418a03:	out    dx,eax
  418a04:	mov    ah,BYTE PTR [edi-0x26]
  418a07:	push   ebx
  418a08:	ror    BYTE PTR [esi],1
  418a0a:	imul   BYTE PTR [edi]
  418a0c:	or     edi,eax
  418a0e:	mov    edi,0x7fb65309
  418a13:	push   edi
  418a14:	mov    al,0xb
  418a16:	popa   
  418a17:	sbb    BYTE PTR [esi+0x3dbec467],bl
  418a1d:	aad    0x6d
  418a1f:	pop    esi
  418a20:	daa    
  418a21:	dec    ebp
  418a22:	ret    0x8834
  418a25:	loope  0x418a45
  418a27:	test   esp,edi
  418a29:	lods   eax,DWORD PTR ds:[esi]
  418a2a:	mov    eax,0x2adfe8c2
  418a2f:	xlat   BYTE PTR ds:[ebx]
  418a30:	pop    edi
  418a31:	sub    al,0x26
  418a33:	mov    ch,BYTE PTR [edx-0x3e]
  418a36:	add    eax,0xfd1438d6
  418a3b:	and    ch,cl
  418a3d:	addr16 jge 0x418a57
  418a40:	outs   dx,DWORD PTR ds:[esi]
  418a41:	int    0x15
  418a43:	mov    cl,0x42
  418a45:	addr16 int 0xc8
  418a48:	dec    ecx
  418a49:	push   edi
  418a4a:	xor    BYTE PTR [ebx],ch
  418a4c:	out    dx,al
  418a4d:	push   cs
  418a4e:	dec    ebx
  418a4f:	mov    esp,0xc56fb088
  418a54:	lahf   
  418a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a56:	pop    DWORD PTR [esi+0x31e35ecb]
  418a5c:	add    edx,DWORD PTR [ebx-0x23]
  418a5f:	push   ss
  418a60:	pushf  
  418a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a62:	jno    0x418a96
  418a64:	jne    0x418aa1
  418a66:	mov    edi,0xee73d0ab
  418a6b:	not    BYTE PTR [ecx+0x29]
  418a6e:	jg     0x418a11
  418a70:	pusha  
  418a71:	fist   WORD PTR [esi-0x29]
  418a74:	stos   BYTE PTR es:[edi],al
  418a75:	jns    0x418ad3
  418a77:	loopne 0x418a68
  418a79:	add    al,0x2
  418a7b:	mov    al,ds:0x78b8be9a
  418a80:	mov    BYTE PTR ds:0x412a2b6c,ah
  418a86:	inc    ebp
  418a87:	xlat   BYTE PTR ds:[ebx]
  418a88:	cs jmp 0x418a63
  418a8b:	fcomp  DWORD PTR [eax+edx*1-0x7877f8f8]
  418a92:	das    
  418a93:	cmp    ebx,DWORD PTR [ebx]
  418a95:	pop    ecx
  418a96:	ins    BYTE PTR es:[edi],dx
  418a97:	imul   esp,DWORD PTR [edi+eiz*2+0x76],0xffffffd5
  418a9c:	push   edx
  418a9d:	jmp    0xee5535c
  418aa2:	mov    cl,0x9
  418aa4:	arpl   sp,bp
  418aa6:	out    dx,al
  418aa7:	cmp    ebp,DWORD PTR ds:0xe5d00dd9
  418aad:	push   ebp
  418aae:	xchg   edi,eax
  418aaf:	fnstenv [edi+edx*1-0x1]
  418ab3:	jno    0x418b2c
  418ab5:	xor    ah,BYTE PTR [edx-0x4eb5d84f]
  418abb:	bound  edi,QWORD PTR [ebp-0x17]
  418abe:	push   es
  418abf:	std    
  418ac0:	fcomp  QWORD PTR ds:[bp+si+0x1e97]
  418ac6:	xor    edi,DWORD PTR [esi]
  418ac8:	sub    BYTE PTR [ebp-0x50],dh
  418acb:	ins    BYTE PTR es:[edi],dx
  418acc:	mov    edi,0xa4366911
  418ad1:	pop    ebx
  418ad2:	ins    DWORD PTR es:[edi],dx
  418ad3:	xor    BYTE PTR [ebp+0x1f],cl
  418ad6:	lahf   
  418ad7:	xlat   BYTE PTR ds:[ebx]
  418ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad9:	xchg   edi,eax
  418ada:	xchg   ecx,eax
  418adb:	add    dh,BYTE PTR [ecx+0x44]
  418ade:	ror    dh,cl
  418ae0:	loopne 0x418aee
  418ae2:	pop    esp
  418ae3:	sar    BYTE PTR [eax],1
  418ae5:	fld    TBYTE PTR [esi+0x75]
  418ae8:	sub    BYTE PTR [ebp+0x2c],cl
  418aeb:	push   ss
  418aec:	fdivr  st,st(7)
  418aee:	push   ds
  418aef:	xlat   BYTE PTR ds:[ebx]
  418af0:	lea    edi,[edi+esi*4+0xbca9e9f]
  418af7:	add    eax,0xd7beb7bb
  418afc:	adc    ah,BYTE PTR [esi+ebx*8-0x5e]
  418b00:	in     eax,dx
  418b01:	cs (bad) 
  418b04:	push   eax
  418b05:	pop    ebp
  418b06:	jle    0x418b09
  418b08:	call   0x8900288c
  418b0d:	inc    ecx
  418b0e:	lea    esi,[eax+0x7051fc57]
  418b14:	fmul   DWORD PTR [ebp-0x50db34c3]
  418b1a:	clc    
  418b1b:	inc    ebx
  418b1c:	adc    edx,ebp
  418b1e:	scas   eax,DWORD PTR es:[edi]
  418b1f:	jecxz  0x418ad6
  418b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b22:	jmp    0x887e:0x59f6be6f
  418b29:	jae    0x418ba5
  418b2b:	rcl    DWORD PTR [edx+eiz*8],1
  418b2e:	arpl   WORD PTR [ebx+0x19],bx
  418b31:	mov    ch,BYTE PTR ds:0xed5a
  418b36:	js     0x418add
  418b38:	pop    esi
  418b39:	shl    DWORD PTR [ecx-0x1020858a],1
  418b3f:	cmp    ch,BYTE PTR [esi]
  418b41:	dec    ebx
  418b42:	jns    0x418ae6
  418b44:	mov    ?,WORD PTR [ecx-0x7f]
  418b47:	jmp    0x418b39
  418b49:	mov    al,ds:0xa7ab94f6
  418b4e:	jl     0x418b59
  418b50:	loope  0x418b07
  418b52:	mov    edi,0x8799112c
  418b57:	or     ecx,DWORD PTR [eax+0x42a29bdd]
  418b5d:	inc    ebp
  418b5e:	test   eax,0xd3673831
  418b63:	cli    
  418b64:	inc    ebx
  418b65:	pop    eax
  418b66:	or     DWORD PTR [edi+0x19],ebx
  418b69:	arpl   WORD PTR [ecx+0x4914c0b2],si
  418b6f:	sbb    BYTE PTR [ebx-0x662887ac],bl
  418b75:	mov    al,0x34
  418b77:	jne    0x418beb
  418b79:	pusha  
  418b7a:	addr16 jp 0x418b3b
  418b7d:	mul    BYTE PTR [edi+edx*8]
  418b80:	lods   al,BYTE PTR ds:[esi]
  418b81:	arpl   WORD PTR [ecx-0x1e],bx
  418b84:	push   esi
  418b85:	and    dl,BYTE PTR [edi+ebp*1]
  418b88:	cmp    esp,DWORD PTR [edi-0x59]
  418b8b:	inc    ebp
  418b8c:	dec    esp
  418b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b8e:	dec    esi
  418b8f:	and    eax,0xc6b1c91c
  418b94:	cwde   
  418b95:	jmp    0xd7bc:0xe755b6dc
  418b9c:	xchg   edx,eax
  418b9d:	and    eax,0xf8fc5825
  418ba2:	in     al,0xde
  418ba4:	std    
  418ba5:	cmp    DWORD PTR [ecx],ebp
  418ba7:	lds    ebx,FWORD PTR [ebx+0x486ea99b]
  418bad:	push   es
  418bae:	ret    0xc2a
  418bb1:	xchg   ebx,eax
  418bb2:	jb     0x418b8d
  418bb4:	inc    eax
  418bb5:	and    bl,bh
  418bb7:	lds    ebp,FWORD PTR [eax-0x74]
  418bba:	popf   
  418bbb:	pop    edi
  418bbc:	iret   
  418bbd:	cli    
  418bbe:	mov    DWORD PTR [ecx+0x13],edx
  418bc1:	jmp    0x418beb
  418bc3:	test   eax,0xc4e8efa1
  418bc8:	fs jno 0x418c0f
  418bcb:	(bad)  
  418bcc:	int3   
  418bcd:	lea    esi,[ecx+eiz*1-0x52f643a8]
  418bd4:	inc    edx
  418bd5:	jns    0x418b8b
  418bd7:	dec    BYTE PTR [ebp+ecx*1-0xb]
  418bdb:	ror    DWORD PTR [eax],0xdd
  418bde:	dec    ebp
  418bdf:	ins    DWORD PTR es:[edi],dx
  418be0:	cwde   
  418be1:	addr16 xchg ecx,edi
  418be4:	icebp  
  418be5:	daa    
  418be6:	add    DWORD PTR [edi],ecx
  418be8:	push   ecx
  418be9:	in     eax,0x97
  418beb:	push   esi
  418bec:	(bad)  
  418bed:	xchg   edi,eax
  418bee:	mov    cl,0xe3
  418bf0:	fnstsw WORD PTR [eax+0x67c93e23]
  418bf6:	nop
  418bf7:	outs   dx,DWORD PTR ds:[esi]
  418bf8:	jecxz  0x418c03
  418bfa:	add    DWORD PTR [esi-0xb3dfe90],ebx
  418c00:	mov    dl,dh
  418c02:	sub    dh,bl
  418c04:	xchg   ebx,eax
  418c05:	mov    al,0xca
  418c07:	cld    
  418c08:	mov    eax,0x8ad07764
  418c0d:	and    dh,BYTE PTR [eax-0xd45bf50]
  418c13:	xor    al,0x6c
  418c15:	add    esi,DWORD PTR [ecx+0x1e7dfa1]
  418c1b:	out    0xba,al
  418c1d:	dec    ebx
  418c1e:	jbe    0x418bf7
  418c20:	(bad)  
  418c21:	cmp    esi,esi
  418c23:	shl    BYTE PTR [edx*1-0x16777db3],cl
  418c2a:	jge    0x418bf0
  418c2c:	loope  0x418bea
  418c2e:	dec    ecx
  418c2f:	xchg   ecx,eax
  418c30:	mov    ah,BYTE PTR [edi+0x62]
  418c33:	or     eax,ebx
  418c35:	pop    ebx
  418c36:	jnp    0x418c52
  418c38:	cli    
  418c39:	xchg   ebx,eax
  418c3a:	lods   al,BYTE PTR ds:[esi]
  418c3b:	mov    ah,bh
  418c3d:	lock icebp 
  418c3f:	inc    esi
  418c40:	mov    edi,0x595087b1
  418c45:	sub    DWORD PTR [bx-0x16],eax
  418c49:	cmp    eax,esi
  418c4b:	jp     0x418c06
  418c4d:	(bad)  [edx-0x4f5d300e]
  418c53:	mov    DWORD PTR [edx+0xb],esi
  418c56:	mov    ebp,0x1ee74a31
  418c5b:	popf   
  418c5c:	jecxz  0x418cbf
  418c5e:	test   al,0xd7
  418c60:	sub    ecx,ebx
  418c62:	sub    esi,DWORD PTR [ebx-0x76]
  418c65:	sub    DWORD PTR [esi-0x50],esp
  418c68:	fwait
  418c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c6a:	dec    edi
  418c6b:	fmul   DWORD PTR [eax]
  418c6d:	hlt    
  418c6e:	and    eax,0x29b3aeec
  418c73:	xlat   BYTE PTR ds:[ebx]
  418c74:	dec    esi
  418c75:	popf   
  418c76:	stc    
  418c77:	sub    esi,DWORD PTR [ebx-0x77072cf0]
  418c7d:	daa    
  418c7e:	or     ecx,edi
  418c80:	shl    DWORD PTR [eax+0x6801af17],cl
  418c86:	push   eax
  418c87:	and    al,0x6b
  418c89:	jmp    0xa7b4d942
  418c8e:	aam    0x52
  418c90:	fidivr DWORD PTR [edx]
  418c92:	mov    cl,0x6c
  418c94:	in     eax,dx
  418c95:	pop    ebx
  418c96:	out    dx,al
  418c97:	push   edi
  418c98:	push   edx
  418c99:	stos   BYTE PTR es:[edi],al
  418c9a:	cmc    
  418c9b:	leave  
  418c9c:	push   cs
  418c9d:	aad    0x50
  418c9f:	xlat   BYTE PTR ds:[ebx]
  418ca0:	cmp    ah,BYTE PTR [esi-0x48403af5]
  418ca6:	mov    cl,0xdd
  418ca8:	pop    ds
  418ca9:	dec    edi
  418caa:	mov    esi,0x59be7db6
  418caf:	xlat   BYTE PTR ds:[ebx]
  418cb0:	inc    ebp
  418cb1:	xor    esi,0x37521308
  418cb7:	std    
  418cb8:	mov    dl,bl
  418cba:	add    eax,0xeac8f573
  418cbf:	(bad)  
  418cc1:	ins    BYTE PTR es:[edi],dx
  418cc2:	mov    dh,0x9
  418cc4:	bts    DWORD PTR [ecx],esi
  418cc7:	add    DWORD PTR [esi-0x77722ae4],ebx
  418ccd:	xlat   BYTE PTR ds:[ebx]
  418cce:	dec    esi
  418ccf:	ins    BYTE PTR es:[edi],dx
  418cd0:	inc    eax
  418cd1:	dec    edx
  418cd2:	or     BYTE PTR [ecx],dh
  418cd4:	lds    esp,FWORD PTR [edi+0x3d]
  418cd7:	ret    0x1243
  418cda:	or     DWORD PTR [ebx+eiz*1],0x1f
  418cde:	mov    cl,0x7f
  418ce0:	test   eax,0xc68e5c6f
  418ce5:	and    ebp,DWORD PTR [ebx]
  418ce7:	xlat   BYTE PTR ds:[ebx]
  418ce8:	adc    al,0xf8
  418cea:	xor    cl,BYTE PTR [esi]
  418cec:	xchg   ebx,eax
  418ced:	fbstp  TBYTE PTR [ecx+ecx*8+0x17994d84]
  418cf4:	mov    esp,0xcc143165
  418cf9:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  418cfb:	xlat   BYTE PTR ds:[ebx]
  418cfc:	xchg   edi,eax
  418cfd:	push   0x41e6f9e1
  418d02:	jge    0x418c89
  418d04:	test   DWORD PTR [esi],esp
  418d06:	and    BYTE PTR [esi+0x57],0xe6
  418d0a:	jno    0x418d8b
  418d0c:	sbb    al,al
  418d0e:	(bad)  
  418d0f:	xlat   BYTE PTR ds:[ebx]
  418d10:	fwait
  418d11:	test   eax,0x3005ffe2
  418d16:	pop    ecx
  418d17:	popf   
  418d18:	neg    BYTE PTR [eax+esi*4]
  418d1b:	jno    0x418d66
  418d1d:	pop    esp
  418d1e:	mov    ebp,0x793ca09b
  418d23:	leave  
  418d24:	ret    0x3e67
  418d27:	cmp    edi,DWORD PTR [ecx-0x7207f87a]
  418d2d:	and    esi,DWORD PTR [esi-0x39e77d48]
  418d33:	pop    esp
  418d34:	pop    ss
  418d35:	xchg   ecx,eax
  418d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d37:	add    al,0xf8
  418d39:	leave  
  418d3a:	pop    ebx
  418d3b:	xlat   BYTE PTR ds:[ebx]
  418d3c:	mov    edx,0x7122acf4
  418d41:	dec    ebp
  418d42:	adc    al,0x27
  418d44:	mov    dl,BYTE PTR [edx]
  418d46:	jp     0x418db4
  418d48:	inc    ecx
  418d49:	and    BYTE PTR [eax-0x19bb07b4],0xda
  418d50:	inc    esp
  418d51:	addr16 add al,0x46
  418d54:	cli    
  418d55:	mov    edx,0x6c4669c6
  418d5a:	mov    cl,0x94
  418d5c:	fiadd  DWORD PTR [ebx+eiz*1+0x4cbb073b]
  418d63:	xlat   BYTE PTR ds:[ebx]
  418d64:	or     ecx,DWORD PTR [edx+0x46]
  418d67:	adc    al,0xca
  418d69:	(bad)  [eax]
  418d6b:	retf   
  418d6c:	mov    BYTE PTR [ebx],dl
  418d6e:	sbb    eax,0x7efc2ea8
  418d73:	(bad)  [ecx+0x4004e862]
  418d79:	jno    0x418df1
  418d7b:	(bad)  
  418d7c:	sub    al,0x66
  418d7e:	mov    ecx,0x7f173640
  418d83:	cmp    al,0x88
  418d85:	(bad)  
  418d86:	dec    ecx
  418d87:	in     al,dx
  418d88:	loopne 0x418d22
  418d8a:	xbegin 0x247af58a
  418d90:	sbb    dl,ah
  418d92:	mov    ds:0xb1a36644,al
  418d97:	or     DWORD PTR [edi+0x52],eax
  418d9a:	sbb    esp,edx
  418d9c:	pop    es
  418d9d:	int    0xf1
  418d9f:	xlat   BYTE PTR ds:[ebx]
  418da0:	sbb    cl,cl
  418da2:	not    BYTE PTR [edi+ebp*4-0x69]
  418da6:	cmp    BYTE PTR [eax-0x5b5a3378],dh
  418dac:	push   edi
  418dad:	scas   eax,DWORD PTR es:[edi]
  418dae:	dec    eax
  418daf:	sbb    cl,BYTE PTR [esi+0x6c]
  418db2:	or     edi,ebx
  418db4:	or     al,0xbc
  418db6:	ds push esi
  418db8:	mov    eax,ds:0x8197cd2c
  418dbd:	ds jmp 0x7a691697
  418dc3:	repz call 0x24945145
  418dc9:	lea    ebx,[eax+eiz*4]
  418dcc:	ret    0xfc67
  418dcf:	inc    edi
  418dd0:	mov    edx,0xc806d3d0
  418dd5:	popa   
  418dd6:	mov    cl,0x28
  418dd8:	push   ecx
  418dd9:	jns    0x418d6b
  418ddb:	and    eax,0xd7b2fc15
  418de0:	mov    ecx,0xf4de8c8e
  418de5:	ds out 0xae,eax
  418de8:	xchg   DWORD PTR [esi],ecx
  418dea:	mov    bh,0x1f
  418dec:	mov    cl,0x8
  418dee:	push   ds
  418def:	out    0x74,al
  418df1:	test   eax,0xcb0fd863
  418df6:	(bad)  
  418df7:	test   al,0x48
  418df9:	mov    ds:0x12fea78b,eax
  418dfe:	lods   eax,DWORD PTR ds:[esi]
  418dff:	add    bl,BYTE PTR [esi-0x1d3e4e17]
  418e05:	pop    es
  418e06:	sub    ebx,DWORD PTR [ecx+ebp*4+0x68]
  418e0a:	add    BYTE PTR [edi-0xe],cl
  418e0d:	push   esp
  418e0e:	adc    BYTE PTR [eax],al
  418e10:	inc    edx
  418e11:	shl    DWORD PTR [edi+esi*1-0x1c],1
  418e15:	pop    esp
  418e16:	mov    cl,0xab
  418e18:	fistp  DWORD PTR ds:0xa59ba324
  418e1e:	jo     0x418df7
  418e20:	jg     0x418e85
  418e22:	sbb    DWORD PTR [ebp+0x48],ebp
  418e25:	jo     0x418e86
  418e27:	popa   
  418e28:	jo     0x418df0
  418e2a:	mov    al,0xe9
  418e2c:	jmp    0x5d4e:0x348c750b
  418e33:	js     0x418e55
  418e35:	test   DWORD PTR [bp+si+0x612b],esp
  418e3a:	mov    ecx,0xb1e19592
  418e3f:	es push es
  418e41:	inc    edi
  418e42:	ret    
  418e43:	xchg   esi,eax
  418e44:	xchg   esi,eax
  418e45:	jp     0x418dc7
  418e47:	fidiv  WORD PTR [ecx]
  418e49:	adc    eax,esi
  418e4b:	cmp    al,BYTE PTR [ecx]
  418e4d:	js     0x418e56
  418e4f:	hlt    
  418e50:	stos   BYTE PTR es:[edi],al
  418e51:	inc    edx
  418e52:	popa   
  418e53:	mov    ebp,0x42b1b1f5
  418e58:	sub    DWORD PTR [edx-0x31],esi
  418e5b:	fisubr DWORD PTR [esi+0x44]
  418e5e:	(bad)  
  418e60:	lods   eax,DWORD PTR ds:[esi]
  418e61:	fbstp  TBYTE PTR ss:[ebx-0x79]
  418e65:	into   
  418e66:	mov    ah,0xb8
  418e68:	sti    
  418e69:	jne    0x418e1c
  418e6b:	mov    edi,0x48f13976
  418e70:	mov    eax,0xa8c95d5c
  418e75:	xor    al,0xa9
  418e77:	xchg   edi,eax
  418e78:	std    
  418e79:	mov    ah,0xf3
  418e7b:	lea    edi,[edi-0x18]
  418e7e:	(bad)  
  418e7f:	xor    cl,BYTE PTR [eax-0xb47c423]
  418e85:	add    BYTE PTR [ebx],dl
  418e87:	add    al,BYTE PTR [eax+0x67]
  418e8a:	adc    bl,bh
  418e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e8d:	adc    al,0xdc
  418e8f:	xor    DWORD PTR [esi+0x3c04add0],edx
  418e95:	loop   0x418ec8
  418e97:	mov    DWORD PTR [edx],edi
  418e99:	inc    ecx
  418e9a:	pop    esp
  418e9b:	in     eax,dx
  418e9c:	lahf   
  418e9d:	addr16 sub dh,bh
  418ea0:	xchg   esp,eax
  418ea1:	xor    al,0xeb
  418ea3:	dec    ebx
  418ea4:	inc    esp
  418ea5:	dec    ebp
  418ea6:	iret   
  418ea7:	(bad)  
  418ea8:	and    BYTE PTR [edi],dh
  418eaa:	push   ecx
  418eab:	sbb    edi,DWORD PTR [esi+0x7e1b8021]
  418eb1:	addr16 iret 
  418eb3:	fst    QWORD PTR [ebp+0x49]
  418eb6:	cmp    eax,0x3560a682
  418ebb:	inc    edx
  418ebc:	shl    BYTE PTR [ebp+eiz*4+0x74279a80],0x26
  418ec4:	mov    esi,0xd83ab1ee
  418ec9:	push   ds
  418eca:	and    BYTE PTR [eax-0x28f1262f],0x8d
  418ed1:	or     esi,DWORD PTR [eax-0x1596d195]
  418ed7:	pop    es
  418ed8:	test   ebx,edx
  418eda:	add    BYTE PTR [edi-0x48],ah
  418edd:	ss dec ebp
  418edf:	das    
  418ee0:	(bad)  
  418ee1:	sub    esi,DWORD PTR [edi+edx*8-0x434f861e]
  418ee8:	stos   DWORD PTR es:[edi],eax
  418ee9:	mov    ecx,0x379adccd
  418eee:	push   eax
  418eef:	test   DWORD PTR [eax],ecx
  418ef1:	and    ch,BYTE PTR [edx+0x3f]
  418ef4:	test   BYTE PTR [eax-0x56],al
  418ef7:	xlat   BYTE PTR ds:[ebx]
  418ef8:	imul   ebx,DWORD PTR [ecx+0x1aaec1a2],0x55fcfb2b
  418f02:	adc    DWORD PTR [edi],0xfa52c790
  418f08:	xchg   ecx,eax
  418f09:	addr16 jge 0x418f8b
  418f0c:	pop    esp
  418f0d:	mov    fs,WORD PTR [edi+ebp*1+0x11b1ea99]
  418f14:	icebp  
  418f15:	pop    es
  418f16:	test   BYTE PTR [ecx],dh
  418f18:	addr16 daa 
  418f1a:	push   edx
  418f1b:	fadd   DWORD PTR [eax]
  418f1d:	loop   0x418f6e
  418f1f:	fs test al,0x6b
  418f22:	mov    esi,0x887260a8
  418f27:	push   edx
  418f28:	popf   
  418f29:	jp     0x418efb
  418f2b:	mov    eax,ecx
  418f2d:	inc    esi
  418f2e:	imul   esi,DWORD PTR ds:0xa3192c2a,0x75
  418f35:	addr16 add al,0x3b
  418f38:	lea    esi,[edi+edx*8]
  418f3b:	test   eax,0x82bec1b6
  418f40:	ss ins DWORD PTR es:[edi],dx
  418f42:	mov    WORD PTR [edi],?
  418f44:	add    ebp,DWORD PTR [esi+edi*1-0x7fe1bdc8]
  418f4b:	xlat   BYTE PTR ds:[ebx]
  418f4c:	in     al,dx
  418f4d:	sbb    eax,DWORD PTR [esi]
  418f4f:	into   
  418f50:	neg    DWORD PTR [ebx+esi*1]
  418f53:	or     DWORD PTR [edi-0x2ea582cc],ecx
  418f59:	xor    BYTE PTR fs:[ecx+ebp*1-0x31],al
  418f5e:	iret   
  418f5f:	lods   eax,DWORD PTR ds:[esi]
  418f60:	or     ah,BYTE PTR [esi+0x4]
  418f63:	mov    ds:0x94e9326c,eax
  418f68:	mov    WORD PTR [edi+0x43],es
  418f6b:	cs (bad) 
  418f6d:	in     al,dx
  418f6e:	pop    edi
  418f6f:	mov    cl,0x76
  418f71:	or     esi,DWORD PTR [ecx-0x63189407]
  418f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f78:	gs dec ebp
  418f7a:	mov    ah,0xd7
  418f7c:	dec    esi
  418f7d:	stc    
  418f7e:	pop    eax
  418f7f:	sub    dh,ah
  418f81:	push   esp
  418f82:	mov    ebx,0x69ee8895
  418f87:	repz repnz push ebx
  418f8a:	jmp    0xe7a6130a
  418f8f:	ins    DWORD PTR es:[edi],dx
  418f90:	daa    
  418f91:	pop    edi
  418f92:	neg    BYTE PTR [ecx+0x7a52f670]
  418f98:	fs mov dh,0x21
  418f9b:	mov    ecx,DWORD PTR [ecx+0x6f641365]
  418fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fa2:	ins    BYTE PTR es:[edi],dx
  418fa3:	enter  0x355e,0xa9
  418fa7:	xlat   BYTE PTR ds:[ebx]
  418fa8:	mov    dl,0x8a
  418faa:	(bad)  
  418fab:	mov    dl,0xe4
  418fad:	inc    edx
  418fae:	sub    BYTE PTR [edi+0x6e8388],bl
  418fb4:	xlat   BYTE PTR ds:[ebx]
  418fb5:	push   es
  418fb6:	cmp    esi,ecx
  418fb8:	pop    ss
  418fb9:	addr16 mov edi,0xb7481c91
  418fbf:	cmc    
  418fc0:	fbld   TBYTE PTR [ecx+esi*4]
  418fc3:	push   ds
  418fc4:	(bad)  
  418fc6:	and    ah,BYTE PTR [edx-0x37fe3b48]
  418fcc:	loope  0x419015
  418fce:	into   
  418fcf:	push   esi
  418fd0:	lods   eax,DWORD PTR ds:[esi]
  418fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd2:	xor    ah,0xd2
  418fd5:	mov    ecx,DWORD PTR [edx-0x2c4b7752]
  418fdb:	pop    es
  418fdc:	sub    cl,dh
  418fde:	ja     0x41905e
  418fe0:	(bad)  
  418fe1:	addr16 repz xchg edi,eax
  418fe4:	rol    BYTE PTR [ebx],1
  418fe6:	ins    DWORD PTR es:[edi],dx
  418fe7:	jbe    0x41903a
  418fe9:	mov    ecx,0x641cd28a
  418fee:	std    
  418fef:	push   ds
  418ff0:	xor    eax,0xc61715e1
  418ff5:	aaa    
  418ff6:	pop    ebp
  418ff7:	xlat   BYTE PTR ds:[ebx]
  418ff8:	xor    DWORD PTR [esi+0xfab2a21],esp
  418ffe:	gs inc esi
  419000:	mov    ah,bh
  419002:	imul   edx,DWORD PTR [edx-0x48206690],0xffffff81
  419009:	add    BYTE PTR gs:[edx-0x44],al
  41900d:	iret   
  41900e:	xchg   ebp,eax
  41900f:	(bad)  
  419010:	call   0x8a82e375
  419015:	xor    dl,BYTE PTR gs:[edx]
  419018:	dec    edi
  419019:	test   dh,dl
  41901b:	dec    esp
  41901c:	pushf  
  41901d:	out    0x6f,eax
  41901f:	dec    eax
  419020:	std    
  419021:	pusha  
  419022:	push   ecx
  419023:	(bad)  
  419024:	sti    
  419025:	mov    edi,0xa141d727
  41902a:	sbb    eax,0x114a8826
  41902f:	jb     0x419007
  419031:	push   0x60062bed
  419036:	cli    
  419037:	hlt    
  419038:	dec    edi
  419039:	xchg   BYTE PTR [esi+0x6d181237],dl
  41903f:	xchg   BYTE PTR [eax+0x4ce4e531],cl
  419045:	adc    eax,DWORD PTR [esi]
  419047:	add    DWORD PTR [esp+eiz*2-0x6cc208f7],edx
  41904e:	popf   
  41904f:	inc    edi
  419050:	push   0x886bf4d7
  419055:	pop    esi
  419056:	jge    0x4190d1
  419058:	aaa    
  419059:	cmp    bl,BYTE PTR [ebx-0x5572045c]
  41905f:	xlat   BYTE PTR ds:[ebx]
  419060:	cmp    ebx,DWORD PTR fs:[edx]
  419063:	push   esp
  419064:	pop    edx
  419065:	or     dh,bh
  419067:	mov    ch,BYTE PTR fs:[esi-0x44]
  41906b:	adc    cl,bh
  41906d:	daa    
  41906e:	mov    ah,0x5a
  419070:	std    
  419071:	sub    al,0xd5
  419073:	xlat   BYTE PTR ds:[ebx]
  419074:	fwait
  419075:	mov    esp,0x5c7638d9
  41907a:	loopne 0x41906a
  41907c:	fsubr  QWORD PTR [eax-0x788b35dd]
  419082:	scas   eax,DWORD PTR es:[edi]
  419083:	sbb    al,dh
  419085:	push   edi
  419086:	ds sbb eax,0xed152729
  41908c:	mov    ds:0xeb908666,eax
  419091:	adc    eax,0xa3033946
  419096:	(bad)  
  419097:	gs sub bl,cl
  41909a:	sbb    dh,BYTE PTR [ecx-0x78]
  41909d:	ror    esi,1
  41909f:	(bad)  
  4190a0:	jl     0x4190c5
  4190a2:	ret    
  4190a3:	sar    BYTE PTR [esi+0x67],0x77
  4190a7:	jmp    0x41905d
  4190a9:	cmc    
  4190aa:	in     al,0xe2
  4190ac:	xchg   esp,eax
  4190ad:	(bad)  
  4190ae:	mov    cl,0xbe
  4190b0:	inc    esi
  4190b1:	mov    ebp,0x1695a0f7
  4190b6:	scas   al,BYTE PTR es:[edi]
  4190b7:	xor    ebx,eax
  4190b9:	addr16 std 
  4190bb:	xchg   ebx,eax
  4190bc:	cmc    
  4190bd:	ret    0xa1b0
  4190c0:	cmp    ebx,eax
  4190c2:	mov    cl,0x27
  4190c4:	pop    esp
  4190c5:	mov    eax,ds:0xaf8c8ea1
  4190ca:	and    edx,edi
  4190cc:	push   ds
  4190cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190ce:	or     al,0x1e
  4190d0:	out    0x23,eax
  4190d2:	or     eax,0xf27881bf
  4190d7:	aam    0xa1
  4190d9:	jecxz  0x4190fc
  4190db:	pop    edx
  4190dc:	dec    ecx
  4190dd:	jns    0x41907f
  4190df:	aad    0x55
  4190e1:	dec    esp
  4190e2:	test   DWORD PTR ds:0xaf71a3d8,ebx
  4190e8:	(bad)  
  4190e9:	and    al,0xb1
  4190eb:	pop    es
  4190ec:	hlt    
  4190ed:	push   ss
  4190ee:	dec    edi
  4190ef:	leave  
  4190f0:	int3   
  4190f1:	je     0x419084
  4190f3:	fldenv [edi+0x59]
  4190f6:	clc    
  4190f7:	sbb    al,0xa8
  4190f9:	ja     0x419113
  4190fb:	sbb    DWORD PTR [esi-0x51],eax
  4190fe:	test   eax,0xf5abfa16
  419103:	jae    0x4190ae
  419105:	bound  ecx,QWORD PTR [edx+0x1]
  419108:	xchg   DWORD PTR [edi-0xc],edx
  41910b:	push   edi
  41910c:	adc    eax,0x8886d2db
  419111:	sub    ah,dl
  419113:	hlt    
  419114:	push   0x4bb54495
  419119:	push   0xed1dae6d
  41911e:	jno    0x419107
  419120:	jge    0x4190c6
  419122:	ins    BYTE PTR es:[edi],dx
  419123:	mov    BYTE PTR cs:[ebp-0x470cce31],ah
  41912a:	test   al,0x19
  41912c:	mul    DWORD PTR [edi-0x6]
  41912f:	pusha  
  419130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419131:	adc    bl,0xef
  419134:	clc    
  419135:	rcr    DWORD PTR [ebp-0x68123049],1
  41913b:	xor    cl,BYTE PTR [eax+0x51c6e049]
  419141:	stos   BYTE PTR es:[edi],al
  419142:	xor    edx,esp
  419144:	cld    
  419145:	vpsubusb xmm6,xmm6,XMMWORD PTR ds:0x29364170
  41914d:	mov    edx,0x2416c7b6
  419152:	sbb    DWORD PTR [ebx+0x66f99f08],0x14067b3
  41915c:	xchg   ebx,eax
  41915d:	out    dx,eax
  41915e:	enter  0x9d48,0xdf
  419162:	mov    dl,0x5
  419164:	mov    esp,0x1302dbbf
  419169:	(bad)  
  41916a:	nop
  41916b:	sahf   
  41916c:	lods   al,BYTE PTR ds:[esi]
  41916d:	jnp    0x4191c0
  41916f:	test   eax,0xe6afdd1d
  419174:	js     0x4191df
  419176:	jmp    0x1d6c9a5b
  41917b:	jo     0x419133
  41917d:	add    BYTE PTR [ecx+0x12a85c92],dh
  419183:	adc    ebx,DWORD PTR [ecx+ebx*1]
  419186:	mov    dh,0xd7
  419188:	stos   BYTE PTR es:[edi],al
  419189:	scas   eax,DWORD PTR es:[edi]
  41918a:	arpl   dx,cx
  41918c:	(bad)  
  41918d:	xor    esi,edx
  41918f:	gs mov edi,0x8259930f
  419195:	mov    ah,0xaf
  419197:	pop    ss
  419198:	cmp    ah,dh
  41919a:	ss dec edi
  41919c:	sub    DWORD PTR [edi+0x78],esp
  41919f:	adc    DWORD PTR [esi+0x22730d54],ebx
  4191a5:	and    esi,DWORD PTR [ecx+0x23891264]
  4191ab:	call   0xd79bf2ae
  4191b0:	iret   
  4191b1:	fs or  esi,esp
  4191b4:	jmp    0x41919a
  4191b6:	fisttp QWORD PTR [eax+0x16397c88]
  4191bc:	loope  0x419194
  4191be:	cmc    
  4191bf:	inc    edx
  4191c0:	dec    ebx
  4191c1:	addr16 ret 
  4191c3:	cmp    ebx,DWORD PTR [edx]
  4191c5:	or     ch,0x13
  4191c8:	jmp    ecx
  4191ca:	mov    cl,0x9f
  4191cc:	sbb    DWORD PTR [esi+0x71],eax
  4191cf:	rcl    DWORD PTR [eax+0xb],cl
  4191d2:	xchg   esi,eax
  4191d3:	xlat   BYTE PTR ds:[ebx]
  4191d4:	es ss retf 
  4191d7:	sbb    ecx,DWORD PTR [edx-0x78f0ba4b]
  4191dd:	ret    0x2d62
  4191e0:	mov    edi,0x603e2600
  4191e5:	cmp    DWORD PTR [ebx+0x79197ad7],eax
  4191eb:	scas   eax,DWORD PTR es:[edi]
  4191ec:	nop
  4191ed:	adc    eax,DWORD PTR [ebx+0x7e]
  4191f0:	loopne 0x4191bd
  4191f2:	ret    
  4191f3:	xlat   BYTE PTR ds:[ebx]
  4191f4:	jl     0x4191d3
  4191f6:	push   esp
  4191f7:	cs (bad) 
  4191f9:	cld    
  4191fa:	pop    ecx
  4191fb:	mov    ds:0x6edf6835,eax
  419200:	mov    ah,0xd2
  419202:	xor    cl,bl
  419204:	push   esi
  419205:	sbb    edx,DWORD PTR [ecx+0x1e]
  419208:	adc    eax,0x4ca4b13e
  41920d:	xor    DWORD PTR [edi],esi
  41920f:	call   0x34528bc0
  419214:	clc    
  419215:	pushf  
  419216:	adc    edi,0x5d25a8e1
  41921c:	push   ecx
  41921d:	inc    esi
  41921e:	test   eax,0x26b9bcdb
  419223:	push   edi
  419224:	rcr    BYTE PTR [esi-0x32fe696f],cl
  41922a:	repnz rol dh,1
  41922d:	jmp    0xe399:0xb7306347
  419234:	dec    esp
  419235:	nop
  419236:	mov    WORD PTR [ebx+0x22b01c92],ss
  41923c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41923d:	fsub   QWORD PTR [edi-0x44]
  419240:	add    ah,BYTE PTR [ecx+ebp*2-0x6f]
  419244:	outs   dx,BYTE PTR ss:[esi]
  419246:	sub    ebx,DWORD PTR [edx]
  419248:	mov    ebx,DWORD PTR [ebx-0x4c]
  41924b:	xor    eax,0x426ce7ee
  419250:	mov    eax,ds:0x85f3b1ec
  419255:	pop    esi
  419256:	pop    esi
  419257:	adc    eax,0xd7f06f43
  41925c:	idiv   BYTE PTR [eax]
  41925e:	inc    edi
  41925f:	ins    BYTE PTR es:[edi],dx
  419260:	sbb    BYTE PTR ds:0x7088058c,bh
  419266:	stos   BYTE PTR es:[edi],al
  419267:	div    BYTE PTR [edi-0x43]
  41926a:	cmp    dl,dl
  41926c:	jmp    0x1040:0x8aaee567
  419273:	sub    ch,0x35
  419276:	mov    dl,0x2d
  419278:	imul   edi
  41927a:	leave  
  41927b:	xchg   esi,eax
  41927c:	pop    ds
  41927d:	(bad)  
  41927e:	mov    ebx,0x84605aec
  419283:	dec    esp
  419284:	(bad)
  419289:	sub    ecx,DWORD PTR [edi]
  41928b:	rol    DWORD PTR [ecx+0x569631f4],1
  419291:	lahf   
  419292:	ror    DWORD PTR [esi],0x12
  419295:	push   cs
  419296:	dec    ebx
  419298:	mov    bl,0x3c
  41929a:	inc    esi
  41929b:	sub    DWORD PTR [edx-0x4898a599],0x88abe221
  4192a5:	stc    
  4192a6:	xchg   edx,eax
  4192a7:	jno    0x41929b
  4192a9:	retf   
  4192aa:	xlat   BYTE PTR ds:[ebx]
  4192ab:	cwde   
  4192ac:	bound  esp,QWORD PTR [edx+eax*4+0x3]
  4192b0:	xchg   ebx,eax
  4192b1:	add    bh,cl
  4192b3:	(bad)  
  4192b4:	adc    dh,bl
  4192b6:	pusha  
  4192b7:	bound  eax,QWORD PTR [esi+0x280117d6]
  4192bd:	lods   eax,DWORD PTR ds:[esi]
  4192be:	rcl    BYTE PTR [esi+0x4491766b],cl
  4192c4:	fwait
  4192c5:	addr16 or al,0xe7
  4192c8:	push   eax
  4192c9:	pop    edi
  4192ca:	inc    BYTE PTR [eax]
  4192cc:	in     al,0xed
  4192ce:	mov    dh,0xbf
  4192d0:	mov    ebx,0xc871af2e
  4192d5:	sbb    al,0x4f
  4192d7:	repz ja 0x419341
  4192da:	sub    al,0x16
  4192dc:	stos   BYTE PTR es:[edi],al
  4192dd:	inc    esp
  4192de:	ins    DWORD PTR es:[edi],dx
  4192df:	pop    eax
  4192e0:	scas   al,BYTE PTR es:[edi]
  4192e1:	xor    al,0xb1
  4192e3:	dec    edi
  4192e4:	bound  ebp,QWORD PTR gs:[eax]
  4192e7:	mov    ebp,0x9ff3ad7e
  4192ec:	ins    DWORD PTR es:[edi],dx
  4192ed:	ins    BYTE PTR es:[edi],dx
  4192ee:	mov    cl,0x5d
  4192f0:	xchg   esp,eax
  4192f1:	ins    BYTE PTR es:[edi],dx
  4192f2:	jle    0x4192b2
  4192f4:	adc    esp,ebp
  4192f6:	mov    cl,0x40
  4192f8:	sbb    al,0xf8
  4192fa:	mov    ds:0x25ac9b17,al
  4192ff:	xlat   BYTE PTR ds:[ebx]
  419300:	mov    ds:0x7b8af65a,eax
  419305:	test   eax,0x91b9deb0
  41930a:	pop    edi
  41930b:	call   0x88c7f71e
  419310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419311:	push   es
  419312:	cld    
  419313:	xor    eax,0xe967279f
  419318:	mov    eax,0xac1c264
  41931d:	xor    BYTE PTR [edx-0x15],ah
  419320:	pusha  
  419321:	repz test BYTE PTR [ebx-0x78],bh
  419325:	dec    ebx
  419326:	mov    ebx,0x1b273535
  41932b:	retf   
  41932c:	sub    BYTE PTR [edx+ebx*8+0x40],dh
  419330:	in     al,dx
  419331:	xlat   BYTE PTR ds:[ebx]
  419332:	in     eax,0x1e
  419334:	adc    DWORD PTR [edx+eiz*8-0x16],0x5c907fe9
  41933c:	sbb    DWORD PTR [ebp+0x71],edx
  41933f:	mov    esi,0x161960f1
  419344:	call   0x593917be
  419349:	jbe    0x419362
  41934b:	sub    cl,BYTE PTR [eax-0x5e17615f]
  419351:	xchg   ecx,eax
  419352:	mov    BYTE PTR [eax+0x48],bl
  419355:	addr16 daa 
  419357:	xor    ah,bl
  419359:	aad    0x74
  41935b:	xor    eax,0xbd8b5f75
  419360:	cmp    ebx,0xe30adaa2
  419366:	retf   0xfbf7
  419369:	sbb    eax,0x7409a902
  41936e:	dec    edi
  41936f:	sub    al,0x94
  419371:	jnp    0x419331
  419373:	xlat   BYTE PTR ds:[ebx]
  419374:	out    0xd5,al
  419376:	bound  ebp,QWORD PTR [ebx-0x2b4edee0]
  41937c:	out    dx,al
  41937d:	dec    esi
  41937e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41937f:	test   BYTE PTR [edi+0x25d60b71],cl
  419385:	ja     0x4193ba
  419387:	cmp    BYTE PTR [eax+0x52],dl
  41938a:	jp     0x4193cb
  41938c:	and    DWORD PTR [ecx+esi*4],esp
  41938f:	pop    ss
  419390:	std    
  419391:	adc    al,0xb4
  419393:	or     al,BYTE PTR [eax]
  419395:	sub    edi,0xffffffd7
  419398:	and    ah,ah
  41939a:	xchg   edx,eax
  41939b:	push   0xe5a26f60
  4193a0:	mov    BYTE PTR [ecx+edx*8+0x4],ch
  4193a4:	or     al,0xf4
  4193a6:	adc    cl,ch
  4193a8:	int3   
  4193a9:	fild   WORD PTR [esi+0x24]
  4193ac:	clc    
  4193ad:	dec    ecx
  4193ae:	call   0xbad7:0x34fd9df3
  4193b5:	xchg   edi,eax
  4193b6:	les    ebx,FWORD PTR [ebp-0x564e379d]
  4193bc:	push   edx
  4193bd:	sahf   
  4193be:	call   0xed298d61
  4193c3:	xlat   BYTE PTR ds:[ebx]
  4193c4:	in     eax,dx
  4193c5:	pop    eax
  4193c6:	loope  0x41935e
  4193c8:	test   DWORD PTR [edx-0x3b77a391],esp
  4193ce:	push   eax
  4193cf:	nop
  4193d0:	int    0xf7
  4193d2:	cwde   
  4193d3:	sbb    al,0x6c
  4193d5:	adc    DWORD PTR [ecx+0x51ffaed7],0x23068b55
  4193df:	adc    esp,DWORD PTR [edx+ecx*8-0x4f]
  4193e3:	xor    DWORD PTR [edx+0x3eaaf8b9],esp
  4193e9:	test   DWORD PTR [edi+edx*8],0x263763d9
  4193f0:	imul   ecx,esp,0xffffffa7
  4193f3:	fwait
  4193f4:	fwait
  4193f5:	(bad)  
  4193f6:	ret    0x3fee
  4193f9:	out    0x8,eax
  4193fb:	push   esi
  4193fc:	rcr    bl,0x33
  4193ff:	dec    ebx
  419400:	sbb    ah,BYTE PTR [edi+0x65]
  419403:	(bad)  
  419404:	cs aam 0xed
  419407:	loopne 0x419419
  419409:	loop   0x4193bc
  41940b:	out    dx,al
  41940c:	push   0xffffffba
  41940e:	mov    ebx,0xd88f23b0
  419413:	dec    edi
  419414:	xor    eax,0xf044f367
  419419:	(bad)  
  41941a:	jnp    0x4193ac
  41941c:	push   0xf720b1d8
  419421:	xor    edx,DWORD PTR [edx-0x250650d7]
  419427:	xlat   BYTE PTR ds:[ebx]
  419428:	clc    
  419429:	lods   al,BYTE PTR ds:[esi]
  41942a:	fnstcw WORD PTR [ecx-0x2f533c59]
  419430:	mov    ecx,0xfdd776bb
  419435:	ffreep st(4)
  419437:	mov    esi,0xd71436bc
  41943c:	push   esp
  41943d:	imul   edi,DWORD PTR [edi+0x567f9ad2],0xffffffb0
  419444:	(bad)  
  419445:	cli    
  419446:	mov    cl,0x90
  419448:	xor    ah,cl
  41944a:	and    DWORD PTR [ebx-0x5d37bb26],0x48ee5d31
  419454:	mov    BYTE PTR [edx+0x6b111539],dh
  41945a:	add    al,ch
  41945c:	mov    BYTE PTR [edi],ah
  41945e:	pop    eax
  41945f:	cs inc ebp
  419461:	inc    edx
  419462:	jns    0x4193f2
  419464:	punpckhbw mm0,QWORD PTR [esi+0x79]
  419468:	(bad)  
  419469:	cdq    
  41946a:	mov    edi,0x3f65a85a
  41946f:	pop    eax
  419470:	lods   eax,DWORD PTR ds:[esi]
  419471:	cmp    dh,BYTE PTR [edx+0x138ee67e]
  419477:	sbb    cl,BYTE PTR [esp+ecx*8]
  41947a:	pop    esi
  41947b:	sub    al,0x89
  41947d:	(bad)  
  41947e:	loopne 0x419492
  419480:	les    esp,FWORD PTR [edi+0xe]
  419483:	aas    
  419484:	mov    esi,0x4a20c499
  419489:	test   BYTE PTR [ecx+0x4c17f128],dh
  41948f:	push   cs
  419490:	loop   0x4194f7
  419492:	push   esi
  419493:	(bad)  
  419494:	cmp    eax,0x55575556
  419499:	lea    edx,ds:[edi]
  41949c:	push   esi
  41949d:	xor    al,0xb1
  41949f:	sub    eax,0x59b6b7e7
  4194a4:	popa   
  4194a5:	dec    edi
  4194a6:	jge    0x41947e
  4194a8:	nop
  4194a9:	stc    
  4194aa:	into   
  4194ab:	cld    
  4194ac:	aam    0xde
  4194ae:	lahf   
  4194af:	mov    edi,0x26b81e72
  4194b4:	test   BYTE PTR [esi-0x34],dl
  4194b7:	xlat   BYTE PTR ds:[ebx]
  4194b8:	sbb    DWORD PTR [edx],esi
  4194ba:	scas   al,BYTE PTR es:[edi]
  4194bb:	popa   
  4194bc:	pop    edi
  4194bd:	dec    ebx
  4194be:	cmp    eax,0x3e675f95
  4194c3:	xor    al,0xa3
  4194c5:	push   ebp
  4194c6:	push   ss
  4194c7:	mov    ecx,0x9bf3f89
  4194cc:	inc    esi
  4194cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194ce:	or     bl,BYTE PTR [ecx+esi*8-0x52]
  4194d2:	ret    0x9dd7
  4194d5:	xchg   BYTE PTR [ebx+ebp*8],ch
  4194d8:	inc    dh
  4194da:	sar    DWORD PTR [ebx-0x66],cl
  4194dd:	cmp    ebp,0x7f5cc8a7
  4194e3:	cmc    
  4194e4:	adc    bh,BYTE PTR [esi]
  4194e6:	mov    edx,esi
  4194e8:	and    esp,DWORD PTR [ecx+0x7007381f]
  4194ee:	pushf  
  4194ef:	cmp    ah,BYTE PTR [ebx-0x7775717d]
  4194f5:	imul   ecx,DWORD PTR [ebp+0xe],0xb45811f1
  4194fc:	aad    0x67
  4194fe:	push   eax
  4194ff:	sub    DWORD PTR [esi],esp
  419501:	out    0x9e,eax
  419503:	mov    ds:0xebb2937d,al
  419508:	sub    BYTE PTR [ecx+0x12],0x90
  41950c:	js     0x419495
  41950e:	push   cs
  41950f:	push   ebx
  419510:	mov    bl,0x67
  419512:	retf   
  419513:	test   DWORD PTR ds:0xf44ca60,eax
  419519:	bound  esi,QWORD PTR [ecx-0x1f06cab0]
  41951f:	xchg   esp,eax
  419520:	daa    
  419521:	ret    0xd9da
  419524:	add    al,0xc3
  419526:	sbb    al,BYTE PTR [eax+0x403a41e8]
  41952c:	xor    BYTE PTR ds:0x15ea18b1,bh
  419532:	xor    DWORD PTR [edi-0x3313dee5],ebx
  419538:	jg     0x419506
  41953a:	and    cl,al
  41953c:	inc    eax
  41953d:	aaa    
  41953e:	sbb    esp,ebp
  419540:	mov    BYTE PTR [ebp+0x43d42aa9],bh
  419546:	or     eax,0x1d745a17
  41954b:	push   ss
  41954c:	inc    edx
  41954d:	addr16 cmp bl,dl
  419550:	sbb    eax,DWORD PTR [esi-0xb]
  419553:	inc    eax
  419554:	xchg   DWORD PTR [edx],edx
  419556:	aaa    
  419557:	cmc    
  419558:	xor    bh,BYTE PTR [ecx]
  41955a:	ds adc al,0x54
  41955d:	ss pop edx
  41955f:	fidivr WORD PTR [ebx-0x76]
  419562:	lods   eax,DWORD PTR ds:[esi]
  419563:	outs   dx,DWORD PTR ds:[esi]
  419564:	mov    BYTE PTR [eax],dl
  419566:	bnd jb 0x419580
  419569:	iret   
  41956a:	mov    al,0x7d
  41956c:	je     0x41954f
  41956e:	aam    0x22
  419570:	stc    
  419571:	loop   0x4195bc
  419573:	ins    BYTE PTR es:[edi],dx
  419574:	xchg   BYTE PTR [eax+eax*2+0x12],ah
  419578:	fwait
  419579:	(bad)  
  41957a:	lock fsub DWORD PTR [eax]
  41957d:	out    0xe0,eax
  41957f:	pusha  
  419580:	mov    BYTE PTR [ebx+edi*1],al
  419583:	iret   
  419584:	std    
  419585:	mov    esi,0x66199830
  41958a:	push   ss
  41958b:	push   esp
  41958c:	mov    ss,WORD PTR [ebp-0x5fa585fe]
  419592:	pop    ecx
  419593:	jge    0x419561
  419595:	adc    ecx,ebp
  419597:	pop    esp
  419598:	mov    ch,dh
  41959a:	push   esi
  41959b:	xchg   edi,eax
  41959c:	mov    WORD PTR ds:0x67ac0ea0,gs
  4195a2:	push   ds
  4195a3:	jmp    0x7e52:0x3cb54bd
  4195aa:	mov    cl,0xe2
  4195ac:	iret   
  4195ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ae:	popa   
  4195af:	stc    
  4195b0:	sahf   
  4195b1:	cmp    al,0x1d
  4195b3:	and    ebx,eax
  4195b5:	fs ins BYTE PTR es:[edi],dx
  4195b7:	arpl   sp,bp
  4195b9:	dec    DWORD PTR [ecx-0x7f]
  4195bc:	daa    
  4195bd:	xchg   ebx,eax
  4195be:	les    edi,FWORD PTR [ebx]
  4195c0:	out    dx,eax
  4195c1:	(bad)  
  4195c2:	scas   eax,DWORD PTR es:[edi]
  4195c3:	lods   eax,DWORD PTR ds:[esi]
  4195c4:	hlt    
  4195c5:	push   ds
  4195c6:	jbe    0x41963c
  4195c8:	xchg   edi,eax
  4195c9:	sar    DWORD PTR ss:[ecx],cl
  4195cc:	push   es
  4195cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195ce:	rcl    BYTE PTR [edx+0x16c9677a],0x1c
  4195d5:	pushf  
  4195d6:	ror    DWORD PTR [edi-0x4e],1
  4195d9:	shl    BYTE PTR [ecx+0x690d5c1],0xe8
  4195e0:	pop    ecx
  4195e1:	and    eax,0xd310d777
  4195e6:	push   0x87ba09dc
  4195eb:	push   es
  4195ec:	mov    ch,BYTE PTR [ebx+eax*4]
  4195ef:	jnp    0x419647
  4195f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195f2:	push   es
  4195f3:	cmp    edx,DWORD PTR [eax+0x20]
  4195f6:	ret    0xabd7
  4195f9:	test   al,0x95
  4195fb:	jmp    0x41959a
  4195fd:	inc    ecx
  4195fe:	and    eax,0x4ece9a8f
  419603:	stos   DWORD PTR es:[edi],eax
  419604:	(bad)  
  419605:	push   cs
  419606:	mov    ebp,0x51d68fd7
  41960b:	push   es
  41960c:	retf   0x6767
  41960f:	mov    edx,0x5f26a41f
  419614:	push   ss
  419615:	mov    bl,0xb1
  419617:	(bad)  
  419618:	jmp    0xf3b5:0xefe1090d
  41961f:	aad    0xfc
  419621:	in     eax,dx
  419622:	out    0xa4,al
  419624:	xchg   edi,eax
  419625:	into   
  419626:	icebp  
  419627:	je     0x419671
  419629:	and    DWORD PTR [edi+edi*4+0x7b6e67a0],ecx
  419630:	js     0x41964a
  419632:	jl     0x4195fe
  419634:	sbb    al,0x66
  419636:	pop    edi
  419637:	xchg   esp,eax
  419638:	pop    ebp
  419639:	or     WORD PTR [esi-0x54],0xffb0
  41963e:	and    DWORD PTR [ebp-0x1d],ecx
  419641:	and    eax,0xf9f59b6
  419646:	leave  
  419647:	or     eax,0xcad1dfc1
  41964c:	mov    ch,BYTE PTR [edx]
  41964e:	out    dx,al
  41964f:	xlat   BYTE PTR ds:[ebx]
  419650:	repnz pop ss
  419652:	dec    ebx
  419653:	cmp    ah,BYTE PTR [edi-0x640b43ed]
  419659:	(bad)  
  41965a:	pop    eax
  41965b:	sbb    eax,0x6c96e7bc
  419660:	pop    edi
  419661:	pop    esp
  419662:	gs pop edi
  419664:	dec    edx
  419665:	xchg   ebx,eax
  419666:	push   ds
  419667:	pop    ss
  419668:	aam    0xf8
  41966a:	and    ebp,DWORD PTR [edi]
  41966c:	mov    ds:0x264fd11f,eax
  419671:	aad    0x33
  419673:	sbb    BYTE PTR [eax+0x67],dl
  419676:	dec    al
  419678:	or     ch,BYTE PTR gs:[ebx+ebx*8+0x21]
  41967d:	es mov dh,0xec
  419680:	jmp    0x8ab3e225
  419685:	xchg   DWORD PTR [eax],edi
  419687:	dec    edx
  419688:	int    0xd4
  41968a:	push   ds
  41968b:	xlat   BYTE PTR ds:[ebx]
  41968c:	inc    ebx
  41968d:	imul   esp,DWORD PTR [ebx-0x6cc2d31a],0x71eb8893
  419697:	inc    BYTE PTR [edx+0x65]
  41969a:	fwait
  41969b:	sub    DWORD PTR [esi],eax
  41969d:	addr16 xor eax,0x5a59ef
  4196a3:	fmul   QWORD PTR [edi]
  4196a5:	pop    eax
  4196a6:	lods   al,BYTE PTR ds:[esi]
  4196a7:	add    eax,esi
  4196a9:	loopne 0x41971c
  4196ab:	ja     0x419710
  4196ad:	(bad)  
  4196ae:	xchg   esi,eax
  4196af:	push   ecx
  4196b0:	adc    esp,DWORD PTR [edi-0x7d]
  4196b3:	addr16 ror al,0x13
  4196b7:	add    eax,DWORD PTR [ebx+0x41bbb141]
  4196bd:	pop    ds
  4196be:	mov    dh,0x55
  4196c0:	outs   dx,BYTE PTR ds:[esi]
  4196c1:	or     eax,0x1c682f60
  4196c6:	or     al,0xd7
  4196c8:	test   DWORD PTR [ecx],edi
  4196ca:	jb     0x41973e
  4196cc:	inc    edi
  4196cd:	inc    edx
  4196ce:	sahf   
  4196cf:	fmul   DWORD PTR [eax+0x36d37c9e]
  4196d5:	in     al,dx
  4196d6:	sub    ebp,DWORD PTR [esi-0x143da602]
  4196dc:	mov    dh,al
  4196de:	jbe    0x41968c
  4196e0:	fldenv [esi+0x28]
  4196e3:	or     DWORD PTR [eax-0x31f7e54d],0x25f7193e
  4196ed:	xchg   ecx,eax
  4196ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196ef:	xlat   BYTE PTR ds:[ebx]
  4196f0:	je     0x4196ee
  4196f2:	bound  ecx,QWORD PTR [edx-0x25]
  4196f5:	cmp    BYTE PTR [ebx-0x53],bl
  4196f8:	fbstp  TBYTE PTR ss:[ecx-0x3d95ead9]
  4196ff:	fadd   QWORD PTR [edx+0x3cd5be88]
  419705:	pusha  
  419706:	cmp    eax,0x3122c9c7
  41970b:	arpl   WORD PTR [eax-0xb],dx
  41970e:	bound  ebp,QWORD PTR [ebp+0x3448ff88]
  419714:	xchg   edi,eax
  419715:	es adc eax,0x8293c4ff
  41971b:	xlat   BYTE PTR ds:[ebx]
  41971c:	fist   DWORD PTR [ecx]
  41971e:	jnp    0x4196df
  419720:	push   ds
  419721:	mov    bl,0x17
  419723:	pop    eax
  419724:	mov    BYTE PTR [ecx-0x3e],ch
  419727:	and    BYTE PTR ds:0xd6db6818,bh
  41972d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41972f:	addr16 call 0xa3424451
  419735:	mov    bl,0x8a
  419737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419738:	xchg   esi,eax
  419739:	out    0xf7,eax
  41973b:	adc    BYTE PTR [edi+0x14],0xdc
  41973f:	push   esi
  419740:	mov    bl,0x69
  419742:	jecxz  0x419724
  419744:	dec    esp
  419745:	aad    0xd1
  419747:	xor    BYTE PTR [eax+0x3b],0xe8
  41974b:	jb     0x4196d3
  41974d:	loopne 0x419772
  41974f:	mov    esi,0x37769286
  419754:	pop    ebx
  419755:	cmp    DWORD PTR [ecx],ebp
  419757:	xlat   BYTE PTR ds:[ebx]
  419758:	cmp    BYTE PTR [edi+0x34],ch
  41975b:	push   esi
  41975c:	jg     0x4196e8
  41975e:	repnz loop 0x4196e9
  419761:	push   esi
  419762:	mov    dl,0x8a
  419764:	sbb    DWORD PTR [edx+0x65ddbefe],eax
  41976a:	call   0xc8db:0x96fb2822
  419771:	ins    BYTE PTR es:[edi],dx
  419772:	push   bx
  419774:	mov    al,bl
  419776:	dec    edx
  419777:	mov    esp,DWORD PTR [edx]
  419779:	xchg   esi,eax
  41977a:	pop    ds
  41977b:	sbb    bl,BYTE PTR [esi-0x7d]
  41977e:	cmp    BYTE PTR [ebx-0x784ec34d],bl
  419784:	pusha  
  419785:	rcr    DWORD PTR [edx-0x7d],cl
  419788:	shl    eax,1
  41978a:	dec    esi
  41978b:	aaa    
  41978c:	add    ah,BYTE PTR [eax+0x664070b1]
  419792:	add    BYTE PTR [esi-0x2848b4e8],ch
  419798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419799:	fwait
  41979a:	cmp    DWORD PTR ds:0xa802bead,0x45338b9a
  4197a4:	adc    DWORD PTR ds:0xf8180b21,0x678442e5
  4197ae:	call   0x3fd0:0x7a707c54
  4197b5:	(bad)  
  4197b6:	mov    cl,0x3a
  4197b8:	dec    bx
  4197ba:	adc    BYTE PTR [edi-0x28f8e31a],bl
  4197c0:	gs jmp 0x8efe:0x1aab3948
  4197c8:	mov    BYTE PTR [ecx-0x6a],ah
  4197cb:	inc    edx
  4197cc:	jmp    0x22eb20e5
  4197d1:	adc    DWORD PTR [si+0x2d],eax
  4197d5:	stc    
  4197d6:	shl    esi,0x8f
  4197d9:	fnsave [ecx+0x4ffd989e]
  4197df:	add    eax,0xd4fcefff
  4197e4:	nop
  4197e5:	pop    ebp
  4197e6:	adc    eax,0x729f4c11
  4197eb:	adc    BYTE PTR [eax],ch
  4197ed:	aam    0x71
  4197ef:	or     esi,edi
  4197f1:	std    
  4197f2:	mov    cl,0xeb
  4197f4:	jo     0x4197da
  4197f6:	(bad)  
  4197f7:	fild   WORD PTR [ebx-0x70]
  4197fa:	adc    eax,0x2eacfad5
  4197ff:	add    eax,0x99d13147
  419804:	adc    eax,0xb27ab008
  419809:	adc    ah,BYTE PTR [edi-0x8]
  41980c:	cmp    BYTE PTR [eax],al
  41980e:	dec    ebp
  41980f:	inc    edx
  419810:	sti    
  419811:	addr16 pop ds
  419813:	jmp    0x94da8d9f
  419818:	xor    BYTE PTR [edi],al
  41981a:	pop    ecx
  41981b:	or     bl,BYTE PTR [edx-0x77bbedfd]
  419821:	xchg   esi,eax
  419822:	dec    edi
  419823:	lea    edi,fs:[edx-0x16]
  419827:	sub    DWORD PTR [eax+0x2b],edi
  41982a:	mov    dl,0x66
  41982c:	mov    BYTE PTR [eax],dl
  41982e:	ficom  DWORD PTR [esi-0x11]
  419831:	xor    ebp,DWORD PTR [esi]
  419833:	(bad)  
  419834:	mov    BYTE PTR ds:0xe4ebd5ee,cl
  41983a:	aam    0x60
  41983c:	add    dh,BYTE PTR [ebp-0x53]
  41983f:	sbb    dl,BYTE PTR [esi+0x69]
  419842:	mov    eax,0x51336a18
  419847:	mov    al,0x37
  419849:	hlt    
  41984a:	adc    DWORD PTR [bx+si-0x369],ecx
  41984f:	and    BYTE PTR [ebp-0x6188d89b],dl
  419855:	bound  ebp,QWORD PTR ds:0x3cc397dc
  41985b:	pop    ss
  41985c:	ins    BYTE PTR es:[edi],dx
  41985d:	push   eax
  41985e:	nop
  41985f:	ror    BYTE PTR [eax+0x17e4857a],1
  419865:	adc    ah,dh
  419867:	sub    al,0xd8
  419869:	adc    bh,dl
  41986b:	retf   
  41986c:	push   0x22
  41986e:	sub    al,0x57
  419870:	call   0x42b32815
  419875:	jp     0x419828
  419877:	lods   eax,DWORD PTR ds:[esi]
  419878:	mov    bl,0xe1
  41987a:	xor    al,0x7c
  41987c:	add    eax,0xc1d753d7
  419881:	icebp  
  419882:	push   ebp
  419883:	pop    eax
  419884:	dec    ecx
  419885:	dec    esp
  419886:	cwde   
  419887:	or     BYTE PTR [ecx+0x41aac080],0xa7
  41988e:	xchg   ecx,eax
  41988f:	and    esi,ecx
  419891:	push   es
  419892:	adc    edx,edi
  419894:	mov    edx,0x370c4f8c
  419899:	int3   
  41989a:	cli    
  41989b:	test   BYTE PTR [eax-0x39190fb5],cl
  4198a1:	add    DWORD PTR [eax+eiz*8+0x2c7a6742],ebx
  4198a8:	or     BYTE PTR [edi-0x3],ch
  4198ab:	test   ch,0x58
  4198ae:	mov    cl,0x5c
  4198b0:	or     DWORD PTR gs:[eax],edi
  4198b3:	mov    al,ds:0xd91f471e
  4198b8:	cs cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  4198bb:	ror    eax,cl
  4198bd:	mov    esp,0x2c668177
  4198c2:	mov    cl,0x12
  4198c4:	or     BYTE PTR [ebx],dh
  4198c6:	clc    
  4198c7:	dec    eax
  4198c8:	and    BYTE PTR [edx+0x40],cl
  4198cb:	xlat   BYTE PTR ds:[ebx]
  4198cc:	es jae 0x419863
  4198cf:	push   0x8ae67e53
  4198d4:	sbb    DWORD PTR [ebp+0x1e0dcae4],0xa75b4983
  4198de:	pop    ecx
  4198df:	fmul   st(1),st
  4198e1:	addr16 shl edx,cl
  4198e4:	xchg   esp,eax
  4198e5:	jne    0x41993b
  4198e7:	dec    esp
  4198e8:	push   esp
  4198e9:	(bad)  
  4198ea:	cdq    
  4198eb:	cmp    DWORD PTR ds:0xa201b1b7,edx
  4198f1:	sbb    ebp,DWORD PTR [edi+0x3c]
  4198f4:	jns    0x419894
  4198f6:	lods   eax,DWORD PTR ds:[esi]
  4198f7:	mov    eax,ds:0xdd2c6049
  4198fc:	inc    esp
  4198fd:	fsubr  st,st(4)
  4198ff:	adc    BYTE PTR [ebx],bh
  419901:	ja     0x419971
  419903:	ret    0xe4ee
  419906:	mov    al,0xd1
  419908:	adc    BYTE PTR [esp+esi*2+0x45],dh
  41990c:	cli    
  41990d:	les    ecx,FWORD PTR [ebp+0x62]
  419910:	cmp    ah,BYTE PTR [edi-0x54]
  419913:	in     eax,dx
  419914:	dec    edi
  419915:	clc    
  419916:	inc    esp
  419917:	cmp    eax,0x63ac693e
  41991c:	adc    bl,bl
  41991e:	jno    0x419959
  419920:	jo     0x41997e
  419922:	int    0x34
  419924:	dec    esp
  419925:	fs ins BYTE PTR es:[edi],dx
  419927:	retf   
  419928:	sahf   
  419929:	push   edx
  41992a:	xor    al,0x66
  41992c:	pusha  
  41992d:	push   0x9b8d2088
  419932:	push   edi
  419933:	xchg   DWORD PTR [edx],ebp
  419935:	in     eax,dx
  419936:	les    ebx,FWORD PTR [edi+0x67a53888]
  41993c:	repnz pop ebx
  41993e:	adc    eax,edx
  419940:	cmp    bh,BYTE PTR [ecx]
  419942:	xchg   edi,eax
  419943:	or     eax,0x9a38c7a6
  419948:	jbe    0x41994b
  41994a:	mov    cl,0xe3
  41994c:	pushf  
  41994d:	jb     0x4198d9
  41994f:	pushf  
  419950:	in     eax,0x1a
  419952:	fwait
  419953:	xlat   BYTE PTR ds:[ebx]
  419954:	(bad)  
  419955:	pop    edi
  419956:	push   es
  419957:	mov    ebp,DWORD PTR [ecx+0x58]
  41995a:	jl     0x4199b2
  41995c:	lods   al,BYTE PTR ds:[esi]
  41995d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41995e:	jg     0x419935
  419960:	mov    BYTE PTR [esi+0x1b],bl
  419963:	sub    BYTE PTR [edi-0x6d28f025],0x8b
  41996a:	xchg   ebp,eax
  41996b:	test   DWORD PTR [edi+0x20],edx
  41996e:	in     al,0x47
  419970:	data16 jae 0x419924
  419973:	cmp    ah,BYTE PTR [ebp-0x17]
  419976:	xlat   BYTE PTR ds:[ebx]
  419977:	mov    dl,0x90
  419979:	inc    al
  41997b:	lds    edi,FWORD PTR [esi+0x2dd756b8]
  419981:	gs xchg ebp,eax
  419983:	das    
  419984:	mov    edi,0x88195d7d
  419989:	mov    edx,0xe4786057
  41998e:	sbb    ch,BYTE PTR [esi]
  419990:	mul    BYTE PTR [edi+0x1]
  419993:	inc    ebx
  419994:	pop    ss
  419995:	ins    BYTE PTR es:[edi],dx
  419996:	xchg   ebp,eax
  419997:	sbb    bl,dh
  419999:	xor    al,0xbe
  41999b:	shr    DWORD PTR [ebp-0x25088a01],1
  4199a1:	jnp    0x419a17
  4199a3:	add    eax,0xd7a98537
  4199a8:	mov    ds:0xdbb31241,eax
  4199ad:	mov    esp,0xf695e2ed
  4199b2:	xor    BYTE PTR ds:0x20990b88,0xb8
  4199b9:	sbb    ch,dh
  4199bb:	fldcw  WORD PTR [edi-0x18]
  4199be:	sub    al,0x7e
  4199c0:	test   al,0x6a
  4199c2:	jecxz  0x419986
  4199c4:	pop    esp
  4199c5:	lods   al,BYTE PTR ds:[esi]
  4199c6:	lds    eax,FWORD PTR [eax+ecx*4-0x519e3ce0]
  4199cd:	call   FWORD PTR [ecx-0x2098c476]
  4199d3:	cmp    eax,0xebbed665
  4199d8:	xlat   BYTE PTR ds:[ebx]
  4199d9:	push   edi
  4199da:	push   ebx
  4199db:	enter  0x720,0x1
  4199df:	stc    
  4199e0:	xor    DWORD PTR [esp+esi*1-0x7e1544cb],0x39c44db5
  4199eb:	xlat   BYTE PTR ds:[ebx]
  4199ec:	pop    es
  4199ed:	pop    es
  4199ee:	(bad)
  4199f1:	push   esi
  4199f2:	aad    0x7a
  4199f4:	mov    BYTE PTR [eax-0x55fb6509],bh
  4199fa:	inc    bl
  4199fc:	push   ds
  4199fd:	addr16 mov ds:0xbcbd,al
  419a01:	add    bh,BYTE PTR [edx-0x40fca7dd]
  419a07:	test   DWORD PTR [ebp+0x49],edi
  419a0a:	mov    ah,0xd7
  419a0c:	in     eax,0xa3
  419a0e:	jp     0x419a4a
  419a10:	push   esp
  419a11:	xchg   ebx,eax
  419a12:	sbb    eax,0x41a611d7
  419a17:	sbb    eax,esp
  419a19:	test   al,0x89
  419a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a1c:	mov    BYTE PTR [ebp-0x503efb7a],al
  419a22:	stc    
  419a23:	sahf   
  419a24:	cs pop ebx
  419a26:	ret    
  419a27:	mov    WORD PTR [ecx],es
  419a29:	xlat   BYTE PTR ds:[ebx]
  419a2a:	and    al,0x17
  419a2c:	out    0x77,eax
  419a2e:	mov    al,ds:0xb12b70a7
  419a33:	sub    al,0x2f
  419a35:	push   edi
  419a36:	sub    DWORD PTR [esp+edi*8+0x68c91e7f],esi
  419a3d:	adc    ch,BYTE PTR [ebp-0x69]
  419a40:	cli    
  419a41:	mov    WORD PTR cs:[ecx-0x794dc019],fs
  419a48:	call   0x71fb:0xa1d2c96d
  419a4f:	fidiv  DWORD PTR [eax+ebx*8+0x45e5d651]
  419a56:	mov    ecx,0x714162a3
  419a5b:	cmp    al,0x80
  419a5d:	mov    ds:0x5488be3d,eax
  419a62:	and    cl,BYTE PTR [edi+0x731ad005]
  419a68:	es pusha 
  419a6a:	cmp    DWORD PTR [esi+0x37],eax
  419a6d:	cmp    edi,DWORD PTR [ecx-0x59]
  419a70:	mov    ebp,0x88c707f7
  419a75:	xor    eax,0x32fa6063
  419a7a:	mov    ds,WORD PTR [ebx]
  419a7c:	in     eax,0x67
  419a7e:	out    0x7b,eax
  419a80:	xor    al,0xd5
  419a82:	cwde   
  419a83:	and    eax,0xf0b17ea6
  419a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a89:	dec    eax
  419a8a:	add    dl,BYTE PTR [eax+ebp*2]
  419a8d:	faddp  st(6),st
  419a8f:	xlat   BYTE PTR ds:[ebx]
  419a90:	cmp    ecx,esp
  419a92:	sub    bl,BYTE PTR ds:0x323f5918
  419a98:	or     DWORD PTR [esi-0x65],0xffffffc2
  419a9c:	mov    eax,ds:0x22d232fd
  419aa1:	out    0xc5,eax
  419aa3:	or     eax,0xbf7667f8
  419aa8:	rol    BYTE PTR [edx+0x6e1cc729],0xb1
  419aaf:	pop    ds
  419ab0:	and    DWORD PTR [edi+0x2f],edx
  419ab3:	ds into 
  419ab5:	call   0xce:0x4c8d5a5
  419abc:	repz mov al,ds:0x76cdccd1
  419ac2:	inc    ebx
  419ac3:	add    al,0xd3
  419ac6:	or     al,0xd7
  419ac8:	popf   
  419ac9:	(bad)  
  419aca:	jp     0x419b1d
  419acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419acd:	add    DWORD PTR [ecx-0x500b3330],ebx
  419ad3:	dec    bl
  419ad5:	addr16 jmp 0x8df61657
  419adb:	std    
  419adc:	pop    ebx
  419add:	js     0x419b3a
  419adf:	mov    esi,0x57bc27c9
  419ae4:	mov    al,0xc0
  419ae6:	jb     0x419b17
  419ae8:	mov    eax,ds:0xf37c9d67
  419aed:	push   esi
  419aee:	mov    ebx,0xb01fb554
  419af3:	jae    0x419b10
  419af5:	pop    es
  419af6:	jg     0x419b1c
  419af8:	fwait
  419af9:	jo     0x419b54
  419afb:	add    esp,0x67
  419afe:	push   esi
  419aff:	mov    ebx,0xea08083b
  419b04:	and    dl,al
  419b06:	mov    cl,0x65
  419b08:	cld    
  419b09:	mov    dl,0xed
  419b0b:	inc    edi
  419b0c:	jecxz  0x419b34
  419b0e:	and    ch,dl
  419b10:	push   ecx
  419b11:	cli    
  419b12:	jns    0x419a94
  419b14:	pop    es
  419b15:	repz jno 0x419a9b
  419b18:	cdq    
  419b19:	ss pop ecx
  419b1b:	mov    BYTE PTR es:[ebx+0x2f],dl
  419b1f:	jns    0x419b33
  419b21:	fild   WORD PTR [edx]
  419b23:	outs   dx,BYTE PTR ds:[esi]
  419b24:	and    DWORD PTR [edi],ebx
  419b26:	enter  0xb3c9,0x4a
  419b2a:	nop
  419b2b:	xlat   BYTE PTR ds:[ebx]
  419b2c:	lods   al,BYTE PTR ds:[esi]
  419b2d:	dec    eax
  419b2e:	add    al,0xd8
  419b30:	out    dx,al
  419b31:	add    esi,DWORD PTR [eax+0x21dee687]
  419b37:	lods   al,BYTE PTR ds:[esi]
  419b38:	mov    ch,0x10
  419b3a:	xchg   ecx,eax
  419b3b:	cmp    eax,0xd7599531
  419b40:	shl    DWORD PTR [ecx+0x31],cl
  419b43:	inc    eax
  419b44:	push   ss
  419b45:	sahf   
  419b46:	jb     0x419b9d
  419b48:	mov    bl,dl
  419b4a:	fwait
  419b4b:	xchg   esp,eax
  419b4c:	add    BYTE PTR [eax+0x12],ch
  419b4f:	rol    DWORD PTR [edi],cl
  419b51:	jge    0x7a21dc22
  419b57:	push   edi
  419b58:	push   edi
  419b59:	mov    eax,0xe56a779a
  419b5e:	mov    dh,0xa0
  419b60:	leave  
  419b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b62:	jp     0x419b31
  419b64:	fld    DWORD PTR [edi]
  419b66:	jle    0x419b98
  419b68:	test   al,0x20
  419b6a:	retf   
  419b6b:	xlat   BYTE PTR ds:[ebx]
  419b6c:	out    dx,eax
  419b6d:	(bad)  
  419b6f:	data16 jno 0x419af7
  419b72:	sub    DWORD PTR [ecx-0x78],ebx
  419b75:	mov    ecx,0x575d6e8f
  419b7a:	jbe    0x419b45
  419b7c:	jl     0x419be5
  419b7e:	jmp    0x42919076
  419b83:	enter  0xec2c,0xb1
  419b87:	sub    bh,al
  419b89:	sar    DWORD PTR [eax],0xd
  419b8c:	xor    BYTE PTR [edi+0x29f9d74d],ch
  419b92:	xor    ch,BYTE PTR [ebx+0x32ecb3c3]
  419b98:	mov    BYTE PTR [esi+esi*1+0x1dea8197],bl
  419b9f:	and    BYTE PTR [edi+eiz*2-0x5148921],bh
  419ba6:	pop    ebx
  419ba7:	and    eax,0x93b2c18d
  419bac:	(bad)  
  419bad:	ds inc ebp
  419baf:	(bad)  
  419bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb1:	mov    esp,0xe7595449
  419bb6:	push   ebx
  419bb7:	ret    
  419bb8:	pop    esi
  419bb9:	idiv   DWORD PTR [edx]
  419bbb:	retf   
  419bbc:	scas   eax,DWORD PTR es:[edi]
  419bbd:	aad    0xae
  419bbf:	push   ss
  419bc0:	jae    0x419b5e
  419bc2:	setbe  BYTE PTR [eax]
  419bc5:	xchg   DWORD PTR [edx+0x56],edx
  419bc8:	mov    BYTE PTR [eax],dh
  419bca:	daa    
  419bcb:	out    0x2e,al
  419bcd:	fidivr DWORD PTR [edi]
  419bcf:	loopne 0x419b53
  419bd1:	addr16 mov ah,0xa1
  419bd4:	push   es
  419bd5:	xlat   BYTE PTR ds:[ebx]
  419bd6:	inc    ebx
  419bd7:	scas   al,BYTE PTR es:[edi]
  419bd8:	(bad)
  419bdc:	js     0x419b66
  419bde:	fld    DWORD PTR [edx-0x9]
  419be1:	pop    ds
  419be2:	cmp    dh,dl
  419be4:	xor    BYTE PTR [edx+eax*2],cl
  419be7:	mov    ah,0x80
  419be9:	mov    ebx,0x9fd71248
  419bee:	cwde   
  419bef:	mov    dl,0x88
  419bf1:	ins    DWORD PTR es:[edi],dx
  419bf2:	ror    esi,1
  419bf4:	bound  ecx,QWORD PTR [ecx-0x2a]
  419bf7:	cmp    al,0x41
  419bf9:	aaa    
  419bfa:	stos   BYTE PTR es:[edi],al
  419bfb:	dec    ecx
  419bfc:	dec    ecx
  419bfd:	addr16 lock mov al,ds:0xf76b
  419c02:	(bad)
  419c05:	mov    esp,0xbe7681b1
  419c0a:	ret    
  419c0b:	clc    
  419c0c:	mov    ebx,0xbed0ba2f
  419c11:	push   0xffffffc7
  419c13:	fs in  eax,0xd7
  419c16:	(bad)  
  419c17:	cld    
  419c18:	fwait
  419c19:	sub    dh,BYTE PTR [esi-0x4a87ecbb]
  419c1f:	xchg   esi,eax
  419c20:	sbb    BYTE PTR ds:0x167340b7,ch
  419c26:	xchg   ebp,eax
  419c27:	jmp    0x68f8:0x8c31faf3
  419c2e:	js     0x419bfc
  419c30:	dec    esi
  419c31:	push   esi
  419c32:	stc    
  419c33:	pop    ebx
  419c34:	mov    esi,0x2bd16b67
  419c39:	pop    ecx
  419c3a:	mov    ah,0x17
  419c3c:	xor    eax,0xc2f05867
  419c41:	xor    al,0x3f
  419c43:	cmp    bl,BYTE PTR [edi+0x66769553]
  419c49:	and    edx,DWORD PTR [ebp+0x312a9a39]
  419c4f:	popf   
  419c50:	sub    bl,BYTE PTR [ecx]
  419c52:	mov    ds:0x55807980,eax
  419c57:	stos   DWORD PTR es:[edi],eax
  419c58:	js     0x419cc1
  419c5a:	fild   WORD PTR [ebx]
  419c5c:	push   ds
  419c5d:	mov    WORD PTR [esi-0x4591b77b],es
  419c63:	rcl    DWORD PTR [ecx-0x60],0x56
  419c67:	push   edi
  419c68:	jge    0x419c53
  419c6a:	add    DWORD PTR [edi+0x7a],0x8552a5d
  419c71:	xor    ebp,ecx
  419c73:	pop    edx
  419c74:	popf   
  419c75:	push   ds
  419c76:	clc    
  419c77:	(bad)  
  419c78:	stc    
  419c79:	and    eax,0x911742be
  419c7e:	lods   eax,DWORD PTR ds:[esi]
  419c7f:	pop    ss
  419c80:	xchg   esi,eax
  419c81:	aaa    
  419c82:	in     al,0x4c
  419c84:	mov    ds:0x37f1cc67,eax
  419c89:	jge    0x419cbc
  419c8b:	or     bh,bl
  419c8d:	int    0xb8
  419c8f:	out    dx,al
  419c90:	test   eax,edx
  419c92:	add    ah,BYTE PTR [edi]
  419c94:	scas   al,BYTE PTR es:[edi]
  419c95:	gs je  0x419c33
  419c98:	rcr    al,1
  419c9a:	mov    cl,BYTE PTR [edx]
  419c9c:	push   0x87d076c5
  419ca1:	clc    
  419ca2:	and    al,dl
  419ca4:	arpl   cx,sp
  419ca6:	in     eax,dx
  419ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ca8:	test   al,0xf2
  419caa:	fadd   DWORD PTR fs:[eax]
  419cad:	dec    esi
  419cae:	mov    DWORD PTR [ebx-0x758e2c56],esp
  419cb4:	test   BYTE PTR [eax+0x6c8a428e],dh
  419cba:	fucomi st,st(1)
  419cbc:	std    
  419cbd:	dec    ecx
  419cbe:	(bad)  
  419cbf:	push   ds
  419cc0:	push   ebx
  419cc1:	shr    DWORD PTR [bx+si-0x676a],cl
  419cc6:	jg     0x419c9e
  419cc8:	sub    ch,0xeb
  419ccb:	jns    0x419c65
  419ccd:	cli    
  419cce:	and    BYTE PTR [edi],0x6e
  419cd1:	xor    DWORD PTR [ecx-0x4e77f80f],ebx
  419cd7:	mov    ds:0x22cf014e,al
  419cdc:	sbb    BYTE PTR [edi+0x5ce0d75e],cl
  419ce2:	xor    al,0xa3
  419ce4:	jne    0x419d35
  419ce6:	or     edx,ebp
  419ce8:	mov    BYTE PTR [edx],dh
  419cea:	fwait
  419ceb:	sub    ebx,ebx
  419ced:	push   esp
  419cee:	sub    al,0x7c
  419cf0:	shr    DWORD PTR [ebx],1
  419cf2:	inc    eax
  419cf3:	pop    ebp
  419cf4:	mov    BYTE PTR [edx+edx*4+0x4e],dh
  419cf8:	dec    ebx
  419cf9:	test   al,0x12
  419cfb:	inc    ebp
  419cfc:	mov    BYTE PTR [ebx-0x7ff406fc],ch
  419d02:	pop    esp
  419d03:	(bad)  
  419d04:	mov    ecx,0xf3aec767
  419d09:	xor    ecx,DWORD PTR [ecx+eax*4]
  419d0c:	push   es
  419d0d:	ins    DWORD PTR es:[edi],dx
  419d0e:	mov    esi,0x6253d5dc
  419d13:	push   ss
  419d14:	push   esi
  419d15:	mov    ch,BYTE PTR [ebp+0x49bbb8a4]
  419d1b:	xlat   BYTE PTR ds:[ebx]
  419d1c:	div    BYTE PTR [ecx+0x520917ab]
  419d22:	pop    esi
  419d23:	push   cs
  419d24:	mov    ah,cl
  419d26:	push   ebp
  419d27:	sub    cl,BYTE PTR [eax]
  419d29:	and    esi,DWORD PTR [edx+0x4e4d0611]
  419d2f:	pop    ss
  419d30:	adc    dh,BYTE PTR [ebp+0x308d8ff6]
  419d36:	mov    cl,0x5b
  419d38:	int3   
  419d39:	in     eax,0x28
  419d3b:	pushf  
  419d3c:	(bad)
  419d40:	sub    eax,0x10ce8cbf
  419d45:	mov    ecx,0x6722470d
  419d4a:	sbb    DWORD PTR [edx-0xb],edi
  419d4d:	fdivr  QWORD PTR [ebp-0x4ec61492]
  419d53:	sub    eax,0x3b2c0b87
  419d58:	mov    esi,0x78eade88
  419d5d:	bswap  esi
  419d5f:	ficom  WORD PTR [eax+0x4c]
  419d62:	dec    ebp
  419d63:	int    0x8
  419d65:	pushf  
  419d66:	or     eax,0x8fe63acb
  419d6b:	mov    dh,0x9b
  419d6d:	out    0xc9,eax
  419d6f:	sbb    DWORD PTR [edx+0x25],esi
  419d72:	sahf   
  419d73:	aam    0x93
  419d75:	addr16 in al,0x9c
  419d78:	iret   
  419d79:	mov    al,0x90
  419d7b:	mov    esi,0xe75079fe
  419d80:	stc    
  419d81:	lods   eax,DWORD PTR ds:[esi]
  419d82:	mov    cl,0xcb
  419d84:	leave  
  419d85:	ins    BYTE PTR es:[edi],dx
  419d86:	dec    esp
  419d87:	mov    dh,0x90
  419d89:	mov    edx,0x5dccd732
  419d8e:	and    DWORD PTR [eax-0x77773e1c],esi
  419d94:	adc    DWORD PTR [ecx],0xecf1f5a0
  419d9a:	mov    cl,0xb9
  419d9c:	cbw    
  419d9e:	xlat   BYTE PTR fs:[ebx]
  419da0:	add    al,BYTE PTR [eax]
  419da2:	and    dh,BYTE PTR [ecx]
  419da4:	jno    0x419e1b
  419da6:	jnp    0x419d7a
  419da8:	xchg   DWORD PTR [edx],edx
  419daa:	dec    edi
  419dab:	aam    0xaf
  419dad:	retf   
  419dae:	outs   dx,DWORD PTR ds:[esi]
  419daf:	or     al,0x48
  419db1:	and    dl,dh
  419db3:	(bad)  
  419db4:	pop    esp
  419db5:	scas   al,BYTE PTR es:[edi]
  419db6:	push   cs
  419db7:	adc    edx,eax
  419db9:	sbb    BYTE PTR [ebx+edi*1],ch
  419dbc:	outs   dx,BYTE PTR ds:[esi]
  419dbd:	cwde   
  419dbe:	mov    cl,0x10
  419dc0:	push   cs
  419dc1:	inc    ebp
  419dc2:	out    0xe5,eax
  419dc4:	pop    es
  419dc5:	lds    ebp,FWORD PTR [ecx-0x5d2aab29]
  419dcb:	mov    edi,0x8b7ea4ff
  419dd0:	mov    ah,dl
  419dd2:	ins    BYTE PTR es:[edi],dx
  419dd3:	loopne 0x419dac
  419dd5:	nop
  419dd6:	packsswb mm0,QWORD PTR [ebp-0x4fc28b99]
  419ddd:	pop    ecx
  419dde:	imul   esp,DWORD PTR [esi-0x184ed623],0xffffffcb
  419de5:	imul   esp,DWORD PTR [edi+0x35],0xd762bc3d
  419dec:	jge    0x419dcd
  419dee:	mov    ebx,0xd77dacc0
  419df3:	nop
  419df4:	mov    BYTE PTR [esi],ah
  419df6:	dec    eax
  419df7:	mov    ds:0xde55d643,eax
  419dfc:	xchg   esp,eax
  419dfd:	sub    edx,DWORD PTR [edi-0x35e177f6]
  419e03:	push   edi
  419e04:	jecxz  0x419db5
  419e06:	into   
  419e07:	xchg   edi,eax
  419e08:	mov    BYTE PTR [eax],bh
  419e0a:	mov    esi,0xa147bf76
  419e0f:	sub    al,0x9f
  419e11:	pop    esp
  419e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e13:	aas    
  419e14:	mov    BYTE PTR [ebp-0x545fb5f7],cl
  419e1a:	or     edi,eax
  419e1c:	(bad)  
  419e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e1e:	pop    es
  419e1f:	imul   ecx,DWORD PTR [edx-0x1c],0x38
  419e23:	hlt    
  419e24:	adc    ch,al
  419e26:	mov    ds:0xda176e17,eax
  419e2b:	rcr    bh,1
  419e2d:	(bad)  
  419e2e:	div    bx
  419e31:	test   BYTE PTR [eax],0xe2
  419e34:	sahf   
  419e35:	inc    edi
  419e36:	sbb    ah,BYTE PTR ds:0x4fd1ed88
  419e3c:	test   BYTE PTR [ecx+0x5c],ah
  419e3f:	out    dx,al
  419e40:	lock addr16 aas 
  419e43:	shl    BYTE PTR [esi-0x5e26a03c],cl
  419e49:	or     al,0xb1
  419e4b:	out    dx,eax
  419e4c:	jmp    0x38cec70d
  419e51:	ficomp DWORD PTR [ecx-0x29]
  419e54:	(bad)  
  419e56:	das    
  419e57:	rol    BYTE PTR [edx],1
  419e59:	into   
  419e5a:	xchg   ebx,eax
  419e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e5c:	shl    bl,1
  419e5e:	mov    ebp,0x8ccda2d7
  419e63:	and    ebp,DWORD PTR [ecx+0x19]
  419e66:	mov    edi,edx
  419e68:	jnp    0x419e0f
  419e6a:	out    dx,eax
  419e6b:	js     0x419e49
  419e6d:	rcr    BYTE PTR ds:0x6048882c,cl
  419e73:	mov    ah,BYTE PTR [ecx+0x1c71e2fc]
  419e79:	js     0x419ed9
  419e7b:	les    ebp,FWORD PTR [edx]
  419e7d:	ins    DWORD PTR es:[edi],dx
  419e7e:	les    ebp,FWORD PTR [ebx]
  419e80:	sbb    eax,0xc3512860
  419e85:	addr16 mov eax,0xb1e61373
  419e8b:	xor    BYTE PTR [ebx+0x5c0e3559],dl
  419e91:	lea    edx,[eax-0x6a407329]
  419e97:	lods   al,BYTE PTR ds:[esi]
  419e98:	jl     0x419e97
  419e9a:	loope  0x419e60
  419e9c:	mov    BYTE PTR [ebx+0x7a381f0a],dl
  419ea2:	fdiv   QWORD PTR [ecx-0x2c8498dd]
  419ea8:	mov    esi,0x5311f1fe
  419ead:	or     eax,0x30888d5d
  419eb2:	push   ebx
  419eb3:	jmp    0xcb588f0e
  419eb8:	clc    
  419eb9:	addr16 cmovae ebp,eax
  419ebd:	push   edx
  419ebe:	sub    ebx,DWORD PTR [ebp+0x49b14472]
  419ec4:	push   0xedf628aa
  419ec9:	mov    bh,0x22
  419ecb:	xlat   BYTE PTR ds:[ebx]
  419ecc:	das    
  419ecd:	pop    eax
  419ece:	add    DWORD PTR [esp+edx*1],eax
  419ed1:	(bad)  
  419ed2:	dec    esi
  419ed3:	test   DWORD PTR [eax+0x78575b0f],ecx
  419ed9:	xor    ebx,DWORD PTR [eax-0x759865f5]
  419edf:	fistp  QWORD PTR [edx+edx*4-0x2a7f3de5]
  419ee6:	mov    cl,0x5e
  419ee8:	(bad)  
  419ee9:	xor    al,0x40
  419eeb:	adc    edi,DWORD PTR [eax+ecx*8-0x12]
  419eef:	cmp    ebp,DWORD PTR [edi]
  419ef1:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  419ef3:	(bad)  
  419ef4:	in     al,0x72
  419ef6:	push   esi
  419ef7:	add    DWORD PTR [ecx],edx
  419ef9:	dec    ebx
  419efa:	mov    cl,0x2f
  419efc:	fisttp WORD PTR [ebp-0x6ff1a5e4]
  419f02:	call   0x4da9:0xf4848bd4
  419f09:	out    dx,eax
  419f0a:	adc    DWORD PTR [esi],ebx
  419f0c:	sbb    bh,BYTE PTR [esi]
  419f0e:	mov    cl,0xae
  419f10:	fsub   DWORD PTR ds:0x93901697
  419f16:	rcl    edi,1
  419f18:	add    ecx,DWORD PTR [ebx+0x9bde8b4]
  419f1e:	mov    ds:0x4417c010,al
  419f23:	aad    0xc9
  419f25:	test   eax,0x86f9a59a
  419f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f2b:	push   es
  419f2c:	pop    esp
  419f2d:	mov    ds:0xd4d2d72c,al
  419f32:	mov    esp,0xec4d97f8
  419f37:	push   cs
  419f38:	fwait
  419f39:	cdq    
  419f3a:	jmp    0xfc1223c4
  419f3f:	mov    ecx,0x92c42908
  419f44:	xor    al,0x67
  419f46:	mov    ds:0x8ef89877,eax
  419f4b:	mov    eax,0x29a38641
  419f50:	and    eax,0x828ad2a
  419f55:	mov    eax,0xd5d290b9
  419f5a:	push   ebp
  419f5b:	retf   
  419f5c:	scas   eax,DWORD PTR es:[edi]
  419f5d:	test   BYTE PTR [eax],bl
  419f5f:	pop    ss
  419f60:	out    0xa1,al
  419f62:	shr    DWORD PTR [eax+ecx*1-0x27],0x89
  419f67:	out    0xce,eax
  419f69:	addr16 or eax,0xf6465cfb
  419f6f:	js     0x419f6b
  419f71:	addr16 mov di,0x8fe0
  419f76:	sub    ebx,DWORD PTR [edx]
  419f78:	xor    eax,0xa4d9891b
  419f7d:	jno    0x419fbd
  419f7f:	retf   0x2888
  419f82:	hlt    
  419f83:	outs   dx,DWORD PTR ds:[esi]
  419f84:	loope  0x419fcd
  419f86:	and    edi,edx
  419f88:	cmp    cl,cl
  419f8a:	dec    ebx
  419f8b:	test   al,0x10
  419f8d:	inc    esp
  419f8e:	ja     0x419f8d
  419f90:	xor    DWORD PTR fs:[esi+0x512e6fcc],0x4c
  419f98:	inc    ecx
  419f99:	mov    dh,0xa8
  419f9b:	push   edi
  419f9c:	loop   0x419ff3
  419f9e:	cmc    
  419f9f:	jno    0x419fc9
  419fa1:	sub    BYTE PTR [di],bl
  419fa4:	test   eax,0x4be39ba5
  419fa9:	and    dh,BYTE PTR [esi+0x44c2ffe8]
  419faf:	test   DWORD PTR ds:0xd9376fe8,0x4180e1b6
  419fb9:	addr16 clc 
  419fbb:	jp     0x419f6f
  419fbd:	sub    al,0x74
  419fbf:	lds    eax,FWORD PTR [esi*8+0x571921b1]
  419fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fc7:	cld    
  419fc8:	(bad)  [edi+0x6390d0c3]
  419fce:	inc    ebx
  419fcf:	mov    ah,0x93
  419fd1:	mov    bh,0x3a
  419fd3:	xchg   ebp,eax
  419fd4:	leave  
  419fd5:	mov    dh,BYTE PTR [ecx-0x493b0669]
  419fdb:	test   ch,bh
  419fdd:	loopne 0x419f73
  419fdf:	xlat   BYTE PTR ds:[ebx]
  419fe0:	sbb    eax,0xbc17003e
  419fe5:	push   edx
  419fe6:	cmp    esi,eax
  419fe8:	test   ecx,esp
  419fea:	loopne 0x419f7b
  419fec:	xchg   ebp,esp
  419fee:	jb     0x41a04f
  419ff0:	dec    esp
  419ff1:	inc    esp
  419ff2:	cmp    eax,0x8f1e12d9
  419ff7:	jg     0x419f7f
  419ff9:	add    bl,BYTE PTR [ecx-0x4c]
  419ffc:	call   0x68b0fc04
  41a001:	shl    DWORD PTR [ebx-0x925f5dd],0x1e
  41a008:	xor    al,0x38
  41a00a:	xor    DWORD PTR [eax],eax
  41a00c:	xchg   ebp,eax
  41a00d:	xchg   edi,eax
  41a00e:	xlat   BYTE PTR ds:[ebx]
  41a00f:	pop    ds
  41a010:	mov    BYTE PTR [edx-0x69c5ac67],bl
  41a016:	inc    ebx
  41a017:	stos   DWORD PTR es:[edi],eax
  41a018:	retf   0xe267
  41a01b:	test   eax,0xf88327d
  41a020:	push   0xffffff92
  41a022:	mov    cl,0x4b
  41a024:	pop    esp
  41a025:	mov    bh,0xb4
  41a027:	daa    
  41a028:	daa    
  41a029:	test   BYTE PTR [edi+edx*8],al
  41a02c:	repz cmp ah,BYTE PTR [edx-0x695a3e7f]
  41a033:	or     BYTE PTR [eax+0x2e4c7a02],cl
  41a039:	cdq    
  41a03a:	mov    edi,0xcb67b678
  41a03f:	(bad)  
  41a041:	lea    ebp,[ebp-0x7d]
  41a044:	cmp    DWORD PTR [ecx-0x4f],esp
  41a047:	sbb    DWORD PTR [ecx-0x5cfe371f],ecx
  41a04d:	(bad)  
  41a04e:	(bad)  
  41a050:	push   0x3e
  41a052:	jo     0x41a02e
  41a054:	ins    DWORD PTR es:[edi],dx
  41a055:	ja     0x41a0c2
  41a057:	std    
  41a058:	pop    esp
  41a059:	push   cs
  41a05a:	mov    al,0x95
  41a05c:	in     al,0xa0
  41a05e:	xchg   DWORD PTR [esi],esi
  41a060:	cld    
  41a061:	sub    dl,BYTE PTR [ecx+0x39653912]
  41a067:	and    cl,BYTE PTR [esi]
  41a069:	fidivr WORD PTR [eax]
  41a06b:	mov    gs,WORD PTR [eax-0x78]
  41a06e:	jns    0x41a021
  41a070:	mov    BYTE PTR [edi],bl
  41a072:	inc    edi
  41a073:	dec    edx
  41a074:	mov    ebp,0xbfb3ca2b
  41a079:	pusha  
  41a07a:	nop
  41a07b:	outs   dx,BYTE PTR ds:[esi]
  41a07c:	dec    esp
  41a07d:	dec    eax
  41a07e:	ficom  DWORD PTR [eax]
  41a080:	fdiv   DWORD PTR [edi+0x5162005]
  41a086:	mov    cl,0x88
  41a088:	fiadd  DWORD PTR [ebp+0x44]
  41a08b:	call   0xd7372116
  41a090:	cs mov al,0xad
  41a093:	retf   0xbde
  41a096:	mov    ebp,0x5da71400
  41a09b:	repnz push ss
  41a09d:	sbb    BYTE PTR [esi-0x2b872fb1],dh
  41a0a3:	int3   
  41a0a4:	or     BYTE PTR [ecx],cl
  41a0a6:	scas   eax,DWORD PTR es:[edi]
  41a0a7:	(bad)  
  41a0a9:	addr16 jbe 0x41a121
  41a0ac:	ja     0x41a0aa
  41a0ae:	test   DWORD PTR [eax],esp
  41a0b0:	stc    
  41a0b1:	dec    esp
  41a0b2:	mov    cl,0xd4
  41a0b4:	xchg   DWORD PTR [ecx],eax
  41a0b6:	inc    edx
  41a0b7:	sbb    eax,0xde80d120
  41a0bc:	adc    BYTE PTR [esi-0xf],dh
  41a0bf:	add    cl,BYTE PTR [eax]
  41a0c1:	fwait
  41a0c2:	imul   esi,edi,0xffffffc5
  41a0c5:	xchg   ecx,ebp
  41a0c7:	cdq    
  41a0c8:	(bad)  
  41a0c9:	neg    DWORD PTR fs:[eax]
  41a0cc:	mov    dl,0xa3
  41a0ce:	fidiv  WORD PTR [eax+edi*8]
  41a0d1:	scas   al,BYTE PTR es:[edi]
  41a0d2:	clc    
  41a0d3:	bound  edi,QWORD PTR [eax-0x53]
  41a0d6:	adc    BYTE PTR [esi+0x7eba69c3],ch
  41a0dc:	push   esp
  41a0dd:	test   al,0x51
  41a0df:	(bad)  
  41a0e0:	and    edi,esp
  41a0e2:	sar    edi,0x88
  41a0e5:	jo     0x41a11f
  41a0e7:	outs   dx,DWORD PTR ds:[esi]
  41a0e8:	mov    dl,0xc1
  41a0ea:	popf   
  41a0eb:	fsubrp st(3),st
  41a0ed:	test   DWORD PTR [esi-0x5a01605],ebx
  41a0f3:	aam    0x38
  41a0f5:	push   0x48
  41a0f7:	dec    eax
  41a0f8:	add    edi,eax
  41a0fa:	inc    ebp
  41a0fb:	ror    eax,cl
  41a0fd:	sbb    ecx,edx
  41a0ff:	mov    ch,0xbd
  41a101:	sbb    eax,0xf948d616
  41a106:	cwde   
  41a107:	pop    ds
  41a108:	fisttp WORD PTR [eax*2-0x7b853160]
  41a10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a110:	mov    ah,0x60
  41a112:	mov    esi,0xdc7be83
  41a117:	cmp    BYTE PTR ds:0x5578b12c,0x38
  41a11e:	inc    DWORD PTR [edx-0x28e24abf]
  41a124:	int3   
  41a125:	fisub  DWORD PTR [eax-0x5d006204]
  41a12b:	xchg   BYTE PTR [edi+0x29b3cf],al
  41a131:	cmp    al,0xf6
  41a133:	inc    ebx
  41a134:	dec    edi
  41a135:	loope  0x41a180
  41a137:	sti    
  41a138:	enter  0x3967,0x4e
  41a13c:	pop    ecx
  41a13d:	dec    edi
  41a13e:	mov    ds:0xb3d7cf27,eax
  41a143:	mov    DWORD PTR [ecx+ebx*4+0x4e],eax
  41a147:	add    dl,bh
  41a149:	xchg   DWORD PTR [ebp+0x20],ecx
  41a14c:	or     ah,BYTE PTR [ebp+ebp*1-0x3f]
  41a150:	pop    ebx
  41a151:	sbb    eax,0xcf783827
  41a156:	mov    dh,0xde
  41a158:	mov    BYTE PTR [edx+0x4],dl
  41a15b:	sub    ch,BYTE PTR [eax-0x46f87f65]
  41a161:	addr16 sub dl,bl
  41a164:	cdq    
  41a165:	pop    ebp
  41a166:	jl     0x41a1ce
  41a168:	mov    dh,0x39
  41a16a:	lahf   
  41a16b:	jo     0x41a1d0
  41a16d:	imul   esi,DWORD PTR [ecx-0x4ac8a22e],0xffffffa8
  41a174:	ins    BYTE PTR es:[edi],dx
  41a175:	data16 fsubr QWORD PTR [ebx+ebx*2-0x57e8fa72]
  41a17d:	mov    edi,0x7a88cc16
  41a182:	xchg   esp,eax
  41a183:	push   ebx
  41a184:	cmp    esi,ebx
  41a186:	cmc    
  41a187:	xchg   esi,eax
  41a188:	or     eax,0x54ef9693
  41a18d:	test   DWORD PTR [edx],esi
  41a18f:	hlt    
  41a190:	sbb    DWORD PTR [edx-0x5d],ecx
  41a193:	push   ecx
  41a194:	push   0xfffffff5
  41a196:	push   edi
  41a197:	fscale 
  41a199:	mov    BYTE PTR [ebp+edx*4-0x7f81be9],cl
  41a1a0:	push   ds
  41a1a1:	sub    DWORD PTR [edi],0x797ddb16
  41a1a7:	pop    edx
  41a1a8:	xchg   ebp,eax
  41a1a9:	pusha  
  41a1aa:	cs push ds
  41a1ac:	scas   eax,DWORD PTR es:[edi]
  41a1ad:	les    esi,FWORD PTR [edi+0x9ee6434]
  41a1b3:	xchg   ecx,eax
  41a1b4:	add    BYTE PTR ds:0x18e44fbe,ah
  41a1ba:	inc    eax
  41a1bb:	xchg   edi,eax
  41a1bc:	or     edx,DWORD PTR [edx]
  41a1be:	cld    
  41a1bf:	fidivr DWORD PTR [eax]
  41a1c1:	pop    eax
  41a1c2:	pop    ebp
  41a1c3:	in     al,0x8
  41a1c5:	mov    edx,0x1e0ffbeb
  41a1ca:	dec    esi
  41a1cb:	clc    
  41a1cc:	mov    BYTE PTR [ebp+0x5b5c7724],ch
  41a1d2:	mov    WORD PTR [edi+eax*1],ss
  41a1d5:	addr16 int3 
  41a1d7:	repz fnstenv [ebx+0x63]
  41a1db:	pop    ss
  41a1dc:	leave  
  41a1dd:	lds    esi,FWORD PTR [ecx-0x743dd2b4]
  41a1e3:	pusha  
  41a1e4:	jge    0x41a1d7
  41a1e6:	add    edi,edx
  41a1e8:	std    
  41a1e9:	(bad)  
  41a1ea:	sbb    ebp,DWORD PTR [eax+0x7971e900]
  41a1f0:	test   DWORD PTR [edi],0xbef227b1
  41a1f6:	adc    al,0x30
  41a1f8:	sub    al,0xc6
  41a1fa:	pushf  
  41a1fb:	mov    al,ds:0xc95f676b
  41a200:	test   DWORD PTR [esi-0x54],esi
  41a203:	jno    0x41a1f5
  41a205:	ja     0x41a1b8
  41a207:	pop    esp
  41a208:	inc    ebp
  41a209:	push   edx
  41a20a:	fsubr  DWORD PTR [eax-0x38]
  41a20d:	add    al,0x78
  41a20f:	xlat   BYTE PTR ds:[ebx]
  41a210:	add    al,BYTE PTR [eax-0x4e46b9f]
  41a216:	ret    0x8805
  41a219:	loop   0x41a1de
  41a21b:	and    edx,DWORD PTR [edx]
  41a21d:	shr    BYTE PTR [ebx-0x639b683d],cl
  41a223:	in     al,0x8e
  41a225:	fldcw  WORD PTR [esi]
  41a227:	rcr    DWORD PTR [ecx],0xc7
  41a22a:	lock dec ebp
  41a22c:	clc    
  41a22d:	mov    cs:0xb18733da,eax
  41a233:	dec    ebp
  41a234:	xlat   BYTE PTR ds:[ebx]
  41a235:	dec    ecx
  41a236:	in     al,dx
  41a237:	mov    bl,0xdc
  41a239:	addr16 dec edi
  41a23b:	hlt    
  41a23c:	gs aas 
  41a23e:	not    ebp
  41a240:	sub    al,0x26
  41a242:	mov    cl,0xcc
  41a244:	dec    eax
  41a245:	pop    esp
  41a246:	or     DWORD PTR [esi],edi
  41a248:	mov    cl,0x37
  41a24a:	mov    al,0xd7
  41a24c:	xchg   edi,eax
  41a24d:	mov    ah,BYTE PTR [edx-0x6b2231eb]
  41a253:	pop    es
  41a254:	test   DWORD PTR [edx-0x35fcf948],eax
  41a25a:	aam    0x7f
  41a25c:	cwde   
  41a25d:	(bad)  
  41a25e:	jns    0x41a230
  41a260:	sub    DWORD PTR [ecx+ecx*4],ebx
  41a263:	popa   
  41a264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a265:	addr16 add al,0xfb
  41a268:	icebp  
  41a269:	add    BYTE PTR [edx-0x7edefd4b],dh
  41a26f:	push   es
  41a270:	ffreep st(7)
  41a272:	jge    0x41a2e5
  41a274:	mov    edx,0x24dc9595
  41a279:	ja     0x41a2cf
  41a27b:	retf   0x4981
  41a27e:	mov    esp,0x9647b4f7
  41a283:	mov    ecx,0x5e1f60b0
  41a288:	add    DWORD PTR [ebx+0x759f94bb],0x71
  41a28f:	ret    0xc212
  41a292:	push   ds
  41a293:	sub    DWORD PTR [ebx+0x65],esp
  41a296:	cs lahf 
  41a298:	pop    ds
  41a299:	add    BYTE PTR [ebx-0x723817c8],dl
  41a29f:	test   BYTE PTR [ebp+0x59b4650b],al
  41a2a5:	xchg   ebp,eax
  41a2a6:	lods   eax,DWORD PTR ds:[esi]
  41a2a7:	pop    es
  41a2a8:	repz pop DWORD PTR [ecx-0x62a5fe2d]
  41a2af:	mov    esp,0x297aa7c7
  41a2b4:	xchg   esi,eax
  41a2b5:	pop    esp
  41a2b6:	mov    dh,0x3a
  41a2b8:	jmp    FWORD PTR [ecx*4+0x77b06870]
  41a2bf:	sbb    BYTE PTR [ecx+ebp*2-0x50d59a51],ah
  41a2c6:	push   ecx
  41a2c7:	test   DWORD PTR [bx+di],esi
  41a2ca:	xor    ch,BYTE PTR [ecx]
  41a2cc:	mov    BYTE PTR [edx-0x60],bh
  41a2cf:	arpl   bx,bp
  41a2d1:	sbb    eax,0x8d5a4b14
  41a2d6:	ins    DWORD PTR es:[edi],dx
  41a2d7:	sub    ecx,DWORD PTR [ebx]
  41a2d9:	addr16 jmp 0xfdb052bb
  41a2df:	sti    
  41a2e0:	fs lahf 
  41a2e2:	mov    cl,0x79
  41a2e4:	push   edx
  41a2e5:	pop    esp
  41a2e6:	push   es
  41a2e7:	ret    0xbc57
  41a2ea:	cmp    edi,edx
  41a2ec:	shr    BYTE PTR [ebp-0x18],1
  41a2ef:	mov    esp,?
  41a2f1:	daa    
  41a2f2:	mov    edx,0x1f1888b8
  41a2f7:	add    ebp,DWORD PTR [ebx-0x25]
  41a2fa:	sub    ebp,edi
  41a2fc:	jl     0x41a365
  41a2fe:	pushf  
  41a2ff:	mov    dl,0xc9
  41a301:	retf   0x3257
  41a304:	mov    ecx,esi
  41a306:	mov    cl,0xbe
  41a308:	(bad)  
  41a309:	push   ebp
  41a30a:	sub    ebp,DWORD PTR [ebp-0x64]
  41a30d:	setb   bh
  41a310:	into   
  41a311:	js     0x41a35e
  41a313:	xlat   BYTE PTR ds:[ebx]
  41a314:	mov    al,ds:0x7b71fe26
  41a319:	jmp    0x43ca11a2
  41a31e:	dec    eax
  41a31f:	sub    ch,al
  41a321:	sbb    DWORD PTR [edi],0xd66730c6
  41a327:	push   edx
  41a328:	stos   BYTE PTR es:[edi],al
  41a329:	mov    ebx,0xc337aaff
  41a32e:	pop    ebp
  41a32f:	jmp    0x41a2b6
  41a331:	jge    0x41a336
  41a333:	fsubp  st(4),st
  41a335:	jb     0x41a39b
  41a337:	outs   dx,DWORD PTR ds:[esi]
  41a338:	retf   
  41a339:	pop    esi
  41a33a:	jo     0x41a313
  41a33c:	jbe    0x41a397
  41a33e:	mov    esp,0x870e9417
  41a343:	cwde   
  41a344:	cmc    
  41a345:	inc    edi
  41a346:	mov    al,0x19
  41a348:	test   bl,al
  41a34a:	in     al,0xdd
  41a34c:	mul    DWORD PTR [ebp-0x7f]
  41a34f:	push   edx
  41a350:	mov    sp,WORD PTR gs:[ecx]
  41a354:	jg     0x41a33f
  41a356:	or     BYTE PTR [ecx],ch
  41a358:	mov    edi,0x8f7d55a3
  41a35d:	imul   esp,ecx,0xcde7db6a
  41a363:	loop   0x41a327
  41a365:	fst    DWORD PTR [eax]
  41a367:	xlat   BYTE PTR ds:[ebx]
  41a368:	inc    esi
  41a369:	cmp    dh,0x2b
  41a36c:	inc    ebp
  41a36d:	push   eax
  41a36e:	outs   dx,DWORD PTR ds:[esi]
  41a36f:	stos   DWORD PTR es:[edi],eax
  41a370:	mov    BYTE PTR [ebp+0x4a],bl
  41a373:	jmp    0x38581f89
  41a378:	and    eax,0x67d7a918
  41a37d:	cmp    al,0x69
  41a37f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a380:	test   al,0xec
  41a382:	add    ecx,DWORD PTR cs:[eax+0x14848ea3]
  41a389:	push   ebp
  41a38a:	sub    BYTE PTR [esi-0x2d8098e8],cl
  41a390:	(bad)  
  41a391:	lods   al,BYTE PTR ds:[esi]
  41a392:	xchg   ebp,eax
  41a393:	pop    esp
  41a394:	xchg   ebx,eax
  41a395:	jmp    0x41a324
  41a397:	imul   ebp,DWORD PTR [ebp-0x53d04919],0xd0b816be
  41a3a1:	pop    esp
  41a3a2:	and    al,0x3c
  41a3a4:	adc    DWORD PTR [ebx-0x1871b43e],0x69
  41a3ab:	pop    edx
  41a3ac:	jb     0x41a342
  41a3ae:	mov    ebp,0x7b494b54
  41a3b3:	outs   dx,DWORD PTR ds:[esi]
  41a3b4:	xchg   ecx,eax
  41a3b5:	addr16 into 
  41a3b7:	jmp    0x61cc:0x45eb1aa0
  41a3be:	mov    cl,0x6a
  41a3c0:	sbb    DWORD PTR fs:[eax],esp
  41a3c3:	jns    0x146ca502
  41a3c9:	addr16 (bad) 
  41a3cb:	sbb    ebx,DWORD PTR [ebx]
  41a3cd:	ret    0x24d3
  41a3d0:	xor    al,dl
  41a3d2:	pop    edx
  41a3d3:	mov    bh,0xe6
  41a3d5:	icebp  
  41a3d6:	mov    dh,0x70
  41a3d8:	dec    edx
  41a3d9:	dec    edi
  41a3da:	add    ch,BYTE PTR [ebp+eiz*8+0x66f043d]
  41a3e1:	repz xor al,0xea
  41a3e4:	sbb    DWORD PTR [ecx-0x4f],0x80dbd58e
  41a3eb:	dec    ebp
  41a3ec:	push   dx
  41a3ee:	mov    edx,0x60c834d6
  41a3f3:	fsubr  DWORD PTR [edx+0x1289ed47]
  41a3f9:	adc    eax,0xaca0d710
  41a3fe:	xor    dl,cl
  41a400:	add    DWORD PTR [ebx],eax
  41a402:	mov    ecx,DWORD PTR [edi-0x7f]
  41a405:	hlt    
  41a406:	aaa    
  41a407:	dec    esi
  41a408:	mov    ds:0xb94cb189,al
  41a40d:	adc    DWORD PTR [ebx-0x3202d92c],edx
  41a413:	cmp    eax,0xff1990c7
  41a418:	out    0x21,eax
  41a41a:	mov    cl,0x5
  41a41c:	inc    eax
  41a41d:	(bad)  
  41a41e:	dec    ebx
  41a41f:	xor    al,0x9a
  41a421:	cmp    ah,bl
  41a423:	rcr    BYTE PTR [ebx],1
  41a425:	aad    0xd7
  41a427:	mov    ebx,gs
  41a429:	mov    WORD PTR [edx+0x114187db],?
  41a42f:	repz inc ecx
  41a431:	cld    
  41a432:	mov    cl,0x1b
  41a434:	cmp    BYTE PTR [eax],dh
  41a436:	or     al,0x69
  41a438:	popf   
  41a439:	ret    0xd764
  41a43c:	push   edi
  41a43d:	es jg  0x41a445
  41a440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a441:	ror    DWORD PTR [ebp+0x46],1
  41a444:	mov    BYTE PTR [eax],bh
  41a446:	cld    
  41a447:	jl     0x41a488
  41a449:	ret    
  41a44a:	add    ebx,DWORD PTR ds:0x6b47677e
  41a450:	or     dl,BYTE PTR [edi-0x3eff4a89]
  41a456:	mov    al,0x9
  41a458:	xchg   DWORD PTR [ebx],edx
  41a45a:	cmp    eax,0x9f850b4f
  41a45f:	pop    ss
  41a460:	mov    edx,0x883147a9
  41a465:	outs   dx,DWORD PTR ds:[esi]
  41a466:	and    esi,eax
  41a468:	repz inc esi
  41a46a:	bound  edx,QWORD PTR [edi+0x6a]
  41a46d:	imul   esi,esi,0xf19822e7
  41a473:	xchg   edi,eax
  41a474:	dec    ecx
  41a475:	dec    ecx
  41a476:	mov    ebx,0x86868837
  41a47b:	ds repz iret 
  41a47e:	scas   al,BYTE PTR es:[edi]
  41a47f:	cld    
  41a480:	jecxz  0x41a4e9
  41a482:	arpl   WORD PTR [ebx+0x79],bx
  41a485:	sbb    DWORD PTR [ebx],ebp
  41a487:	cmp    DWORD PTR [edx+ebx*1],esp
  41a48a:	mov    al,0xdc
  41a48c:	add    bl,BYTE PTR [ecx+0x1ccfb18b]
  41a492:	push   ecx
  41a493:	je     0x41a4e4
  41a495:	addr16 enter 0x2820,0xf9
  41a49a:	dec    ecx
  41a49b:	cmp    dh,0xcb
  41a49e:	lods   al,BYTE PTR ds:[esi]
  41a49f:	scas   eax,DWORD PTR es:[edi]
  41a4a0:	push   0x3c
  41a4a2:	icebp  
  41a4a3:	aaa    
  41a4a4:	xchg   ebp,eax
  41a4a5:	jne    0x41a45c
  41a4a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4a8:	out    dx,eax
  41a4a9:	addr16 dec edi
  41a4ab:	inc    ecx
  41a4ac:	jg     0x41a4b4
  41a4ae:	ss ins BYTE PTR es:[edi],dx
  41a4b0:	or     ecx,DWORD PTR [esi-0x6c299658]
  41a4b6:	out    0x10,eax
  41a4b8:	or     BYTE PTR [edi+0x2a],ch
  41a4bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4bc:	inc    esp
  41a4bd:	call   0xca3e5b5d
  41a4c2:	mov    cl,0x57
  41a4c4:	add    ecx,DWORD PTR [edi+eiz*8]
  41a4c7:	mov    ch,0xea
  41a4c9:	shr    DWORD PTR [ebp-0x29],cl
  41a4cc:	mov    eax,ds:0x4132cc5e
  41a4d1:	test   al,0xe9
  41a4d3:	jl     0x41a45d
  41a4d5:	retf   
  41a4d6:	and    al,0x1d
  41a4d8:	pop    eax
  41a4d9:	mov    dl,al
  41a4db:	out    0x5c,eax
  41a4dd:	lahf   
  41a4de:	add    al,0xd2
  41a4e0:	xor    dh,al
  41a4e2:	xor    BYTE PTR [ecx],0x8b
  41a4e5:	out    0x30,eax
  41a4e7:	mov    al,0x94
  41a4e9:	loop   0x41a49c
  41a4eb:	jmp    0xf0d4:0x9daee54d
  41a4f2:	adc    edx,eax
  41a4f4:	out    dx,al
  41a4f5:	aad    0xd4
  41a4f7:	jle    0x41a536
  41a4f9:	inc    edi
  41a4fa:	lock add DWORD PTR [esi+0xd64b158],esp
  41a501:	imul   ecx,DWORD PTR [eax+0x7c],0x54
  41a505:	xor    DWORD PTR [edi+edx*8+0x2355cb6d],eax
  41a50c:	adc    edi,DWORD PTR [esi-0x257ab448]
  41a512:	into   
  41a513:	add    al,0x7d
  41a515:	lds    eax,FWORD PTR ds:0xb1b7d24e
  41a51b:	sub    ebp,DWORD PTR [edx+edx*8-0x6749744f]
  41a522:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a524:	test   DWORD PTR [eax-0x3a],0xa37cd8d7
  41a52b:	js     0x41a4b0
  41a52d:	dec    esp
  41a52e:	dec    esp
  41a52f:	pop    ss
  41a530:	call   DWORD PTR [edi]
  41a532:	mov    cl,0xd5
  41a534:	test   al,0x3d
  41a536:	jae    0x41a59b
  41a538:	xor    ecx,ebp
  41a53a:	pop    esp
  41a53b:	out    dx,eax
  41a53c:	fisubr DWORD PTR [ebx]
  41a53e:	xchg   ebp,eax
  41a53f:	cmp    al,0x84
  41a541:	jnp    0x41a4e2
  41a543:	push   edi
  41a544:	add    BYTE PTR [bp+di+0x178e],ch
  41a549:	lea    esi,[ecx+0x57df4b05]
  41a54f:	mov    edi,0xa01b4ed0
  41a554:	jecxz  0x41a5b6
  41a556:	int    0x2c
  41a558:	and    eax,0x2ac41791
  41a55d:	jno    0x41a568
  41a55f:	out    dx,al
  41a560:	pop    esi
  41a561:	into   
  41a562:	lds    edi,FWORD PTR [edx+eax*4]
  41a565:	cmp    al,0x82
  41a567:	pop    edx
  41a568:	sub    DWORD PTR [ebp+0x7399d82b],esi
  41a56e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a570:	test   DWORD PTR [ecx+0x5],ebx
  41a573:	scas   al,BYTE PTR es:[edi]
  41a574:	inc    ecx
  41a575:	xchg   edi,eax
  41a576:	mov    dl,0x7c
  41a578:	sbb    DWORD PTR ds:0xfd6843b1,edi
  41a57e:	add    DWORD PTR [edi-0x60],0x7ed79c24
  41a585:	inc    esi
  41a586:	jmp    0x743e31f2
  41a58b:	in     al,dx
  41a58c:	mov    edx,0xb3d75dde
  41a591:	pop    eax
  41a592:	in     al,dx
  41a593:	inc    DWORD PTR [edx-0x28]
  41a596:	push   edx
  41a597:	xlat   BYTE PTR ds:[ebx]
  41a598:	cmp    dh,BYTE PTR [esi+edx*2]
  41a59b:	xor    cl,BYTE PTR [edi-0x33]
  41a59e:	xchg   ebx,eax
  41a59f:	adc    al,BYTE PTR [ebp+0x14b935ab]
  41a5a5:	lods   al,BYTE PTR ds:[esi]
  41a5a6:	sbb    al,0x7f
  41a5a8:	adc    DWORD PTR [esi+0xb8ed7cd],ebx
  41a5ae:	xlat   BYTE PTR ds:[ebx]
  41a5af:	adc    DWORD PTR [edi-0x7787e2cb],0x59c313fa
  41a5b9:	les    edx,FWORD PTR [ecx+0x51]
  41a5bc:	mov    dl,BYTE PTR [ebp+0x6e89c338]
  41a5c2:	imul   eax,DWORD PTR fs:[esi+0x22f49d0a],0x10
  41a5ca:	icebp  
  41a5cb:	scas   al,BYTE PTR es:[edi]
  41a5cc:	test   esp,esp
  41a5ce:	mov    cl,0xf2
  41a5d0:	(bad)  
  41a5d1:	out    dx,al
  41a5d2:	adc    bl,0x51
  41a5d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5d6:	int    0x33
  41a5d8:	faddp  st(7),st
  41a5da:	pop    edx
  41a5db:	ss jle 0x41a645
  41a5de:	call   0xd0577e44
  41a5e3:	jp     0x41a64b
  41a5e5:	push   ebx
  41a5e6:	retf   0x88d6
  41a5e9:	(bad)  
  41a5ea:	sbb    ebp,ebx
  41a5ec:	and    ah,dl
  41a5ee:	daa    
  41a5ef:	mov    eax,0x7c185f02
  41a5f4:	and    al,0xa4
  41a5f6:	in     eax,0xd9
  41a5f8:	repz aaa 
  41a5fa:	mov    cl,0xea
  41a5fc:	aas    
  41a5fd:	shr    esp,0xf4
  41a600:	mov    BYTE PTR [edi+0x13],al
  41a603:	ds mov dl,0x84
  41a606:	fwait
  41a607:	sar    ah,0x67
  41a60a:	and    eax,0x9fb3d15b
  41a60f:	enter  0xc1a7,0xc3
  41a613:	jbe    0x41a59c
  41a615:	push   cs
  41a616:	jmp    0x135c2760
  41a61b:	xchg   ecx,eax
  41a61c:	inc    esp
  41a61d:	sub    BYTE PTR [edi+0x51541ae8],ch
  41a623:	rcr    DWORD PTR [edi+0xc],0x19
  41a627:	push   ebp
  41a628:	xchg   ecx,eax
  41a629:	inc    ebp
  41a62a:	cmp    DWORD PTR [eax],0xffffff88
  41a62d:	or     ebx,DWORD PTR [ecx+0x3b]
  41a630:	inc    edi
  41a631:	cmp    BYTE PTR [esi],dh
  41a633:	sar    BYTE PTR [edi],cl
  41a635:	mov    dh,0x63
  41a637:	ss mov bh,0xa7
  41a63a:	xchg   edx,eax
  41a63b:	pop    edi
  41a63c:	leave  
  41a63d:	movzx  eax,BYTE PTR [edi-0x1a]
  41a641:	fist   DWORD PTR [ebx-0x12]
  41a644:	js     0x41a6a8
  41a646:	xchg   esi,eax
  41a647:	addr16 pusha 
  41a649:	or     ch,BYTE PTR [bx+di-0x34]
  41a64d:	cli    
  41a64e:	sahf   
  41a64f:	or     al,0x8d
  41a651:	inc    esp
  41a652:	mov    dl,0xb3
  41a654:	iret   
  41a655:	ds aam 0xfd
  41a658:	dec    ebp
  41a659:	(bad)  
  41a65a:	(bad)  
  41a65c:	cmp    eax,0xabd7b511
  41a661:	std    
  41a662:	(bad)  
  41a663:	jae    0x41a68f
  41a665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a666:	or     DWORD PTR [ebp-0x59f97e78],0xfffffff4
  41a66d:	mov    ds:0x6529ead0,eax
  41a672:	sub    ah,BYTE PTR [ecx+0x5a874838]
  41a678:	out    0xea,eax
  41a67a:	pop    es
  41a67b:	sbb    esp,DWORD PTR [edx+ecx*4]
  41a67e:	mov    ch,0x2c
  41a680:	(bad)  
  41a681:	repnz and dh,bh
  41a684:	add    DWORD PTR [edi+0x6e28eba6],edi
  41a68a:	aas    
  41a68b:	imul   esi,ebx,0x5c
  41a68e:	test   BYTE PTR [ecx],al
  41a690:	or     BYTE PTR [ebp+eax*2+0x3036357c],dh
  41a697:	clc    
  41a698:	xchg   DWORD PTR [esi+eax*8-0x1a9d93e6],esp
  41a69f:	loope  0x41a6e8
  41a6a1:	dec    esp
  41a6a2:	push   ebp
  41a6a3:	add    bl,bl
  41a6a5:	sbb    ch,BYTE PTR [eax]
  41a6a7:	enter  0x4d6d,0xba
  41a6ab:	cdq    
  41a6ac:	adc    BYTE PTR [edi-0x43a61acf],bl
  41a6b2:	test   BYTE PTR [esi+0x15a73b88],bl
  41a6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6b9:	std    
  41a6ba:	and    BYTE PTR [edi-0x60a79f1e],al
  41a6c0:	jb     0x41a687
  41a6c2:	movzx  ebp,WORD PTR [edi]
  41a6c5:	jae    0x41a746
  41a6c7:	jmp    0x41a72b
  41a6c9:	(bad)  
  41a6ca:	mov    esi,0x3323f16e
  41a6cf:	ja     0x41a6a8
  41a6d1:	mov    dl,BYTE PTR [ebp-0x4198c285]
  41a6d7:	mov    ebx,0x61353302
  41a6dc:	call   FWORD PTR [edx+eiz*4+0x22]
  41a6e0:	xchg   eax,esp
  41a6e2:	mov    al,0x7c
  41a6e4:	enter  0x96cd,0x7e
  41a6e8:	dec    esp
  41a6e9:	sahf   
  41a6ea:	mov    dh,0xd7
  41a6ec:	stc    
  41a6ed:	ror    dl,1
  41a6ef:	sub    dl,dh
  41a6f1:	mov    al,ds:0x888aa751
  41a6f6:	jae    0x41a698
  41a6f8:	xor    ch,cl
  41a6fa:	inc    edx
  41a6fb:	aaa    
  41a6fc:	mov    ds:0x2a06af8f,eax
  41a701:	pop    ds
  41a702:	add    edi,edx
  41a704:	sub    BYTE PTR [edi],al
  41a706:	mov    ebp,0xa28521d6
  41a70b:	push   cs
  41a70c:	outs   dx,BYTE PTR ds:[esi]
  41a70d:	out    0xb1,eax
  41a70f:	jl     0x41a707
  41a711:	xchg   esi,eax
  41a712:	xor    bl,dl
  41a714:	push   ds
  41a715:	push   ds
  41a716:	add    edx,eax
  41a718:	mov    ch,0x25
  41a71a:	and    eax,0xa0673f46
  41a71f:	push   ebp
  41a720:	sub    bh,dl
  41a722:	mov    cl,0x63
  41a724:	sbb    esp,0x79a5bcf4
  41a72a:	mov    bl,dh
  41a72c:	adc    eax,0x882bd2f5
  41a731:	les    edx,FWORD PTR [edi-0x11]
  41a734:	sub    al,0xe5
  41a736:	mov    cl,0x33
  41a738:	mov    eax,ds:0xf3a75c34
  41a73d:	rol    DWORD PTR [ebx],0xd7
  41a740:	xchg   edi,eax
  41a741:	fisub  DWORD PTR ds:0xf190f16f
  41a747:	sahf   
  41a748:	mov    BYTE PTR [ebp+0x1e],cl
  41a74b:	add    BYTE PTR [esi+0x2a],al
  41a74e:	push   eax
  41a74f:	mov    ecx,0xffb06cdd
  41a754:	call   0x95b1:0xafb43191
  41a75b:	jo     0x41a757
  41a75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a75e:	mov    cl,0x35
  41a760:	inc    ebx
  41a761:	outs   dx,BYTE PTR ds:[esi]
  41a762:	ret    
  41a763:	mov    ah,0xf8
  41a765:	jnp    0x41a7b2
  41a767:	fcomp  DWORD PTR [esi-0x58e2ce3d]
  41a76d:	arpl   di,di
  41a76f:	aaa    
  41a770:	inc    esp
  41a771:	lahf   
  41a772:	adc    al,0xf2
  41a774:	(bad)  
  41a775:	sbb    bh,BYTE PTR [ebp+0x34]
  41a778:	ret    
  41a779:	sbb    edi,DWORD PTR [bp+si+0x4a43]
  41a77e:	mov    ds:0x11d22ed7,al
  41a783:	xchg   DWORD PTR [eax-0x77568fbd],esi
  41a789:	test   al,0x7a
  41a78b:	lods   eax,DWORD PTR ds:[esi]
  41a78c:	loope  0x41a785
  41a78e:	in     eax,0x84
  41a790:	test   al,0x67
  41a792:	popf   
  41a793:	adc    BYTE PTR [esi+0x380a6d6],cl
  41a799:	add    al,0xaf
  41a79b:	cmp    cl,BYTE PTR [eax-0x24]
  41a79e:	iret   
  41a79f:	push   esp
  41a7a0:	push   ecx
  41a7a1:	mov    ebx,0xdf6de5a7
  41a7a6:	ds and eax,0xc00567a7
  41a7ac:	adc    al,0x43
  41a7ae:	inc    eax
  41a7af:	add    al,0x4a
  41a7b1:	aas    
  41a7b2:	mov    cl,0x5e
  41a7b4:	into   
  41a7b5:	jbe    0x41a756
  41a7b7:	mov    ebx,0xd7762395
  41a7bc:	adc    ebp,eax
  41a7be:	or     cl,BYTE PTR [ecx+edi*8]
  41a7c1:	jg     0x41a7b0
  41a7c3:	push   0x8d6b4281
  41a7c8:	ss sahf 
  41a7ca:	rcr    DWORD PTR [ebx-0x28331a37],0x17
  41a7d1:	mov    BYTE PTR [ebp-0x201e0743],ah
  41a7d7:	dec    esp
  41a7d8:	mov    BYTE PTR [ecx-0x61],dh
  41a7db:	int    0x8b
  41a7dd:	scas   al,BYTE PTR es:[edi]
  41a7de:	retf   
  41a7df:	inc    DWORD PTR [ebp+ebx*1-0x65]
  41a7e3:	xlat   BYTE PTR ds:[ebx]
  41a7e4:	sbb    al,0xd8
  41a7e6:	dec    ecx
  41a7e7:	rcr    BYTE PTR [edi+0x5f],cl
  41a7ea:	pop    ebp
  41a7eb:	fisttp DWORD PTR [eax-0x2add188a]
  41a7f1:	adc    eax,0x67d85c6d
  41a7f6:	xchg   edx,eax
  41a7f7:	sub    al,0xf2
  41a7f9:	and    edx,edx
  41a7fb:	popa   
  41a7fc:	sbb    edi,ebp
  41a7fe:	mov    cl,0x31
  41a800:	add    BYTE PTR [edx+0x79],0x6a
  41a804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a805:	icebp  
  41a806:	in     eax,0xd4
  41a808:	cld    
  41a809:	in     al,0x6e
  41a80b:	fisttp QWORD PTR fs:[eax+0x4e]
  41a80f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a810:	mov    al,0x22
  41a812:	test   edi,esp
  41a814:	mov    BYTE PTR [ebp+0x47],ah
  41a817:	jge    0x41a81a
  41a819:	fisttp QWORD PTR [ebp-0x3698ceca]
  41a81f:	push   ebp
  41a820:	push   esp
  41a821:	mov    ?,WORD PTR [ebx-0x6416926]
  41a827:	or     DWORD PTR [ebx+edx*1],ebx
  41a82a:	mov    cl,0x3b
  41a82c:	jo     0x41a822
  41a82e:	ss loope 0x41a877
  41a831:	stos   DWORD PTR es:[edi],eax
  41a832:	enter  0x65d7,0xe1
  41a836:	int3   
  41a837:	mov    bh,0xab
  41a839:	xor    cl,BYTE PTR [edi+0x523886e]
  41a83f:	push   ss
  41a840:	and    al,0x79
  41a842:	iret   
  41a843:	inc    esp
  41a844:	and    DWORD PTR [esi+0x46],esp
  41a847:	mov    cl,0x17
  41a849:	sbb    ebp,DWORD PTR [ebp+0x61a0d8e7]
  41a84f:	test   edi,edx
  41a851:	les    esp,FWORD PTR [ecx]
  41a853:	stc    
  41a854:	mov    BYTE PTR [ebp+0x7c],al
  41a857:	rol    DWORD PTR [esp+eax*4+0x72],0xa9
  41a85c:	or     DWORD PTR [ecx-0x4ad13f5a],edx
  41a862:	xchg   ebp,eax
  41a863:	les    eax,FWORD PTR [ebp-0x602f4899]
  41a869:	xchg   ecx,eax
  41a86a:	scas   al,BYTE PTR es:[edi]
  41a86b:	jo     0x41a7f2
  41a86d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a86e:	or     ebx,DWORD PTR [edx+0xff1685b]
  41a874:	popa   
  41a875:	jecxz  0x41a8e1
  41a877:	xlat   BYTE PTR ds:[ebx]
  41a878:	push   ebp
  41a879:	inc    ecx
  41a87a:	or     al,0x18
  41a87c:	add    eax,0x8834f336
  41a881:	jno    0x41a86e
  41a883:	pop    ds
  41a884:	repz dec ebp
  41a886:	dec    ebp
  41a887:	mov    esi,0xb4dd67e6
  41a88c:	mov    ds:0xafd3be5e,al
  41a891:	pop    esp
  41a892:	mov    cl,0xf5
  41a894:	ret    0x2e90
  41a897:	xchg   BYTE PTR [edx+0x13ffa013],ch
  41a89d:	loope  0x41a8f8
  41a89f:	xlat   BYTE PTR ds:[ebx]
  41a8a0:	out    0xa0,al
  41a8a2:	aam    0xc9
  41a8a4:	fdivr  DWORD PTR [edx+0x3e]
  41a8a7:	outs   dx,BYTE PTR ds:[esi]
  41a8a8:	mov    dh,bh
  41a8aa:	add    eax,0x6afa64e5
  41a8af:	stos   BYTE PTR es:[edi],al
  41a8b0:	outs   dx,DWORD PTR ds:[esi]
  41a8b1:	push   0xdd69eda4
  41a8b6:	nop
  41a8b7:	sub    al,0x23
  41a8b9:	sub    ecx,DWORD PTR [esp+ebx*1]
  41a8bc:	inc    eax
  41a8bd:	or     al,0x24
  41a8bf:	mov    al,0xbf
  41a8c1:	fs aam 0xd7
  41a8c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c5:	lods   eax,DWORD PTR ds:[esi]
  41a8c6:	mov    fs,WORD PTR [ebp-0x2192114e]
  41a8cc:	jo     0x41a8be
  41a8ce:	(bad)  
  41a8cf:	clc    
  41a8d0:	add    DWORD PTR [edi-0x4a],edx
  41a8d3:	pop    es
  41a8d4:	shl    BYTE PTR [ebx-0x793fb496],0x5d
  41a8db:	shl    BYTE PTR [ebp+0xb],cl
  41a8de:	mov    BYTE PTR [eax],cl
  41a8e0:	mov    BYTE PTR [ecx+0xd0bf470],bh
  41a8e6:	(bad)  
  41a8e7:	xlat   BYTE PTR ds:[ebx]
  41a8e8:	test   eax,0xfb7b4396
  41a8ed:	out    0xa1,al
  41a8ef:	enter  0xd464,0xb1
  41a8f3:	je     0x41a90a
  41a8f5:	xchg   edx,eax
  41a8f6:	xchg   BYTE PTR [edx-0x2a83a49d],al
  41a8fc:	pusha  
  41a8fd:	loope  0x41a931
  41a8ff:	outs   dx,BYTE PTR ds:[esi]
  41a900:	xchg   ecx,eax
  41a901:	xor    DWORD PTR [ecx+0x77],0xffffffef
  41a905:	shl    DWORD PTR [ecx+0x5b4babbb],1
  41a90b:	and    al,cl
  41a90d:	out    dx,eax
  41a90e:	xor    eax,0xadb9e6f3
  41a913:	xlat   BYTE PTR ds:[ebx]
  41a914:	iret   
  41a915:	mov    ebx,0x111640e2
  41a91a:	pop    edi
  41a91b:	(bad)  
  41a91c:	bound  ecx,QWORD PTR [eax+0x67d663ed]
  41a922:	in     al,0xab
  41a924:	xor    eax,0xf0be4137
  41a929:	je     0x41a939
  41a92b:	out    0x75,eax
  41a92d:	addr16 mov ebx,0xffd29ae1
  41a933:	pop    es
  41a934:	mov    al,cl
  41a936:	mov    dl,0x0
  41a938:	int    0x37
  41a93a:	or     edi,DWORD PTR [eax+ebp*8]
  41a93d:	pusha  
  41a93e:	push   esi
  41a93f:	shl    DWORD PTR [eax-0x32],cl
  41a942:	xchg   ecx,eax
  41a943:	xchg   DWORD PTR [ebx-0x5b],ebx
  41a946:	sub    cl,BYTE PTR [eax+0xb17bff]
  41a94c:	not    DWORD PTR [edi-0x41]
  41a94f:	int    0x8f
  41a951:	mov    esp,0x7c5fd516
  41a956:	pop    eax
  41a957:	scas   eax,DWORD PTR es:[edi]
  41a958:	xor    DWORD PTR [edi],ebp
  41a95a:	push   ecx
  41a95b:	cmp    bl,dh
  41a95d:	pop    esi
  41a95e:	enter  0x8793,0x50
  41a962:	aam    0xe1
  41a964:	dec    ecx
  41a965:	jns    0x41a8fa
  41a967:	aam    0x50
  41a969:	mov    edi,DWORD PTR [edi+edx*8-0x7dbdbc5f]
  41a970:	fild   QWORD PTR [esi+0x1b891cdd]
  41a976:	adc    al,BYTE PTR [ecx-0x539fffeb]
  41a97c:	mov    BYTE PTR [ebp+0x607ec9a7],bh
  41a982:	mov    ecx,0x506d9e3c
  41a987:	xor    BYTE PTR [edi+eax*4-0x70601890],dh
  41a98e:	mov    ebx,esi
  41a990:	pop    ebx
  41a991:	out    0x17,eax
  41a993:	test   BYTE PTR [esp+edx*8+0x2e],0xc3
  41a998:	and    BYTE PTR [edx+ebp*2-0x26],ah
  41a99c:	jb     0x41a9fa
  41a99e:	mov    DWORD PTR [esi+0x50],edi
  41a9a1:	hlt    
  41a9a2:	hlt    
  41a9a3:	add    DWORD PTR [eax+esi*8-0x53],esi
  41a9a7:	shl    bh,1
  41a9a9:	imul   esi,DWORD PTR [ecx+0x3a01b0c7],0x5f67d1c8
  41a9b3:	adc    al,0xe7
  41a9b5:	div    BYTE PTR [eax]
  41a9b7:	dec    esi
  41a9b8:	in     al,0xf1
  41a9ba:	dec    ebp
  41a9bb:	jle    0x41a944
  41a9bd:	cmp    BYTE PTR [ebx],al
  41a9bf:	hlt    
  41a9c0:	xchg   BYTE PTR [edi+0xc64fddd],dl
  41a9c6:	adc    BYTE PTR ds:0x67db63a7,ch
  41a9cc:	sub    DWORD PTR [edi],edx
  41a9ce:	hlt    
  41a9cf:	pop    ss
  41a9d0:	push   esi
  41a9d1:	in     al,dx
  41a9d2:	not    BYTE PTR [ebp-0x54]
  41a9d5:	fcmovne st,st(3)
  41a9d7:	jp     0x41a995
  41a9d9:	out    0x95,eax
  41a9db:	sub    al,0xe
  41a9dd:	std    
  41a9de:	adc    edx,0xffffffbf
  41a9e1:	pop    esp
  41a9e2:	mov    bh,0x3c
  41a9e4:	or     bh,BYTE PTR [edx+0x73]
  41a9e7:	test   eax,0xd676dc28
  41a9ec:	cmp    al,0x34
  41a9ee:	mov    bl,0x85
  41a9f0:	mov    cl,0x4e
  41a9f2:	xchg   DWORD PTR [esi-0x68],ecx
  41a9f5:	daa    
  41a9f6:	retf   
  41a9f7:	push   ds
  41a9f8:	inc    edi
  41a9f9:	addr16 aam 0xa8
  41a9fc:	ins    DWORD PTR es:[edi],dx
  41a9fd:	add    eax,0x8ebc43fb
  41aa02:	mov    cl,0x65
  41aa04:	jmp    0x41a9de
  41aa06:	xchg   ebx,eax
  41aa07:	out    dx,al
  41aa08:	fstp   DWORD PTR [edx-0x1e87285f]
  41aa0e:	jmp    0x9cf2388
  41aa13:	jo     0x41a999
  41aa15:	mov    esp,ebp
  41aa17:	xor    ecx,DWORD PTR [ebp-0x77e9e63d]
  41aa1d:	clc    
  41aa1e:	jmp    0x86ac:0x3d4b3ceb
  41aa25:	xchg   ebp,eax
  41aa26:	push   ss
  41aa27:	mov    bl,0xa1
  41aa29:	ffreep st(1)
  41aa2b:	aaa    
  41aa2c:	aam    0x49
  41aa2e:	ret    
  41aa2f:	(bad)  
  41aa30:	jl     0x41aa31
  41aa32:	jecxz  0x41aa6e
  41aa34:	pop    edx
  41aa35:	inc    esi
  41aa36:	push   ds
  41aa37:	neg    DWORD PTR [esi+ecx*1-0x4b]
  41aa3b:	in     al,dx
  41aa3c:	sti    
  41aa3d:	cld    
  41aa3e:	iret   
  41aa3f:	out    dx,eax
  41aa40:	or     BYTE PTR [esi-0x6ccdce33],dl
  41aa46:	sbb    edi,edx
  41aa48:	mov    cl,0xc7
  41aa4a:	stos   DWORD PTR es:[edi],eax
  41aa4b:	verr   WORD PTR [ebp+0x13]
  41aa4f:	fidivr DWORD PTR [esi-0x2028b2df]
  41aa55:	adc    ebx,ebx
  41aa57:	mov    edx,0xd7802062
  41aa5c:	pop    eax
  41aa5d:	stc    
  41aa5e:	fisubr DWORD PTR [eax-0x63b1da7f]
  41aa64:	rcl    BYTE PTR [ebp-0x4678d398],0xc7
  41aa6b:	pop    ebp
  41aa6c:	xor    DWORD PTR [edi+0x4f],ebp
  41aa6f:	aas    
  41aa70:	or     BYTE PTR [ebp-0x3e132c90],ch
  41aa76:	jbe    0xb1f2b1e4
  41aa7c:	into   
  41aa7d:	int    0xe6
  41aa7f:	(bad)  
  41aa80:	xadd   bl,dh
  41aa83:	xlat   BYTE PTR ds:[ebx]
  41aa84:	cmp    al,0x83
  41aa86:	push   cs
  41aa87:	daa    
  41aa88:	xor    ch,BYTE PTR [ebx+0x7a88fbc5]
  41aa8e:	lea    esi,[eax+0x81ee6b5]
  41aa94:	add    DWORD PTR [edi],edx
  41aa96:	sub    ch,bh
  41aa98:	daa    
  41aa99:	xor    DWORD PTR [ecx+0x694d0871],0x62
  41aaa0:	xor    BYTE PTR [eax],ah
  41aaa2:	int3   
  41aaa3:	in     al,dx
  41aaa4:	test   DWORD PTR [edx],esp
  41aaa6:	cdq    
  41aaa7:	mov    esi,0x27eb9d44
  41aaac:	pop    esi
  41aaad:	pop    ss
  41aaae:	adc    dl,al
  41aab0:	stc    
  41aab1:	sub    al,0xe9
  41aab3:	pusha  
  41aab4:	cmp    al,0xa7
  41aab6:	push   esi
  41aab7:	pop    ebx
  41aab8:	lahf   
  41aab9:	sub    eax,0x2065a740
  41aabe:	mov    eax,0xcde33dad
  41aac3:	xlat   BYTE PTR ds:[ebx]
  41aac4:	mov    BYTE PTR [eax+ebx*4-0x7e],bh
  41aac8:	xor    BYTE PTR [edi-0xd],ah
  41aacb:	and    ebp,0x76d330f8
  41aad1:	retf   0x2c81
  41aad4:	push   ds
  41aad5:	sub    eax,0x75
  41aad8:	and    eax,0x4b36b667
  41aadd:	in     al,0x92
  41aadf:	adc    eax,ecx
  41aae1:	sbb    DWORD PTR [ecx+0x666b7006],esi
  41aae7:	jecxz  0x41ab58
  41aae9:	adc    eax,0x325fd794
  41aaee:	repz ss rcl edx,1
  41aaf2:	aad    0x7d
  41aaf4:	mov    ecx,0x5e578a6f
  41aaf9:	loopne 0x41aaf7
  41aafb:	jmp    0xd8015497
  41ab00:	shl    ah,1
  41ab02:	sub    edi,DWORD PTR [eax+0x60]
  41ab05:	retf   0xd81f
  41ab08:	mov    ebp,0xeb575d9a
  41ab0d:	or     al,0x89
  41ab0f:	mov    bl,0xab
  41ab11:	scas   eax,DWORD PTR es:[edi]
  41ab12:	xchg   esp,eax
  41ab13:	xlat   BYTE PTR ds:[ebx]
  41ab14:	or     DWORD PTR [ebx-0x19bc527d],edi
  41ab1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab1b:	xchg   esp,eax
  41ab1c:	mov    BYTE PTR [edi-0x1e],bh
  41ab1f:	out    dx,al
  41ab20:	pop    ebp
  41ab21:	pop    esp
  41ab22:	and    al,0x41
  41ab25:	addr16 mov edi,0x49a526c
  41ab2b:	jecxz  0x41aadd
  41ab2d:	dec    ecx
  41ab2e:	mov    cl,0xb6
  41ab30:	std    
  41ab31:	leave  
  41ab32:	push   ss
  41ab33:	cmc    
  41ab34:	fldenv [edi]
  41ab36:	jno    0x41ab0f
  41ab38:	in     eax,0x86
  41ab3a:	cmp    ch,BYTE PTR [eax+0x35]
  41ab3d:	test   DWORD PTR [edi],esi
  41ab3f:	jmp    0x41aac9
  41ab41:	push   ebp
  41ab42:	retf   0x7a71
  41ab45:	inc    edi
  41ab46:	shl    DWORD PTR [esi+0x46],0x69
  41ab4a:	push   esi
  41ab4b:	pop    edx
  41ab4c:	out    0x7,eax
  41ab4e:	rol    BYTE PTR ds:0x37b931bb,1
  41ab54:	cmp    BYTE PTR [ecx],bh
  41ab56:	inc    ebp
  41ab57:	enter  0x818a,0x48
  41ab5b:	rcr    DWORD PTR [ecx],1
  41ab5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab5e:	imul   esi,DWORD PTR [ebp-0x2899a20e],0xffffff97
  41ab65:	imul   edx,DWORD PTR [ecx-0x619f49d6],0x847b8802
  41ab6f:	push   edx
  41ab70:	(bad)  
  41ab71:	iret   
  41ab72:	adc    BYTE PTR [esi+eax*2+0x67],al
  41ab76:	cmp    eax,0xaf453430
  41ab7b:	setae  BYTE PTR [ecx]
  41ab7e:	mov    cl,0x86
  41ab80:	xor    DWORD PTR [eax+eax*1],ebp
  41ab83:	nop
  41ab84:	inc    ecx
  41ab85:	mov    ds:0x99e2d7e8,al
  41ab8a:	adc    ah,BYTE PTR ds:0xdcff8c0e
  41ab90:	jl     0x41ab59
  41ab92:	mov    cl,0xe2
  41ab94:	(bad)  
  41ab95:	or     al,0x3f
  41ab97:	xor    BYTE PTR [ebx-0x485418b5],bh
  41ab9d:	addr16 in eax,dx
  41ab9f:	dec    edi
  41aba0:	sbb    DWORD PTR [ebp+0x62d9a2a0],esi
  41aba6:	scas   eax,DWORD PTR es:[edi]
  41aba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aba8:	out    0xab,al
  41abaa:	icebp  
  41abab:	inc    ebp
  41abac:	lock outs dx,DWORD PTR ds:[esi]
  41abae:	ins    BYTE PTR es:[edi],dx
  41abaf:	jns    0x41abe5
  41abb1:	addr16 pop edi
  41abb3:	in     eax,0x18
  41abb5:	inc    ebx
  41abb6:	xor    edi,ecx
  41abb8:	cli    
  41abb9:	and    DWORD PTR [ecx-0x3478c3b6],esi
  41abbf:	mov    bl,0x29
  41abc1:	xor    DWORD PTR [ebx-0x11],esi
  41abc4:	xor    eax,esi
  41abc6:	xor    DWORD PTR [ebx-0x69],esi
  41abc9:	mov    bl,0xfd
  41abcb:	jbe    0x41ac4b
  41abcd:	mov    esp,0xc10cd1b1
  41abd2:	daa    
  41abd3:	pop    edi
  41abd4:	pop    ss
  41abd5:	fstp   st(7)
  41abd7:	xlat   BYTE PTR ds:[ebx]
  41abd8:	jge    0x41ac07
  41abda:	cmp    al,0xc7
  41abdc:	test   edx,esp
  41abde:	shl    ecx,cl
  41abe0:	test   DWORD PTR [ecx],eax
  41abe2:	push   0xffffffb0
  41abe4:	cdq    
  41abe5:	push   0xffffffc5
  41abe7:	jb     0x41abf1
  41abe9:	and    al,0xf8
  41abeb:	les    edi,FWORD PTR [ecx+0x60]
  41abee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abef:	in     al,0x39
  41abf1:	out    dx,eax
  41abf2:	rol    DWORD PTR [edi-0x64],cl
  41abf5:	in     al,dx
  41abf6:	sub    al,0xcf
  41abf8:	mov    BYTE PTR [edx-0x25e312f8],bl
  41abfe:	ficom  WORD PTR ds:0xdcdb67d0
  41ac04:	push   eax
  41ac05:	pop    edx
  41ac06:	mov    ch,0xc6
  41ac08:	sbb    BYTE PTR [ebx-0x74dbd74e],0xcd
  41ac0f:	mov    cl,0xab
  41ac11:	xchg   edi,eax
  41ac12:	mov    dh,0xec
  41ac14:	jbe    0x41ac7d
  41ac16:	jb     0x41ac82
  41ac18:	mov    ds:0xd258d85d,eax
  41ac1d:	fs mov cl,0xb9
  41ac20:	ficomp WORD PTR gs:[edx+0x2a]
  41ac24:	int3   
  41ac25:	into   
  41ac26:	pop    es
  41ac27:	aad    0x5e
  41ac29:	lahf   
  41ac2a:	call   0xee634824
  41ac2f:	push   eax
  41ac30:	pop    eax
  41ac31:	mov    al,0x22
  41ac33:	jecxz  0x41ac4a
  41ac35:	loopne 0x41ac78
  41ac37:	jb     0x41ac72
  41ac39:	pop    ss
  41ac3a:	inc    ebx
  41ac3b:	das    
  41ac3c:	inc    edi
  41ac3d:	jnp    0x41ac76
  41ac3f:	outs   dx,DWORD PTR ds:[esi]
  41ac40:	imul   esp,DWORD PTR [edi-0x6a],0xa9483ef9
  41ac47:	push   ds
  41ac48:	mov    BYTE PTR [esi+0x7f],bh
  41ac4b:	inc    ecx
  41ac4c:	xor    ecx,DWORD PTR [ebx+0x29]
  41ac4f:	inc    edi
  41ac50:	call   0xa4f68fb5
  41ac55:	cmp    DWORD PTR [esi+0x37],edx
  41ac58:	aaa    
  41ac59:	push   ebp
  41ac5a:	imul   edi,DWORD PTR [ebx],0xffffff88
  41ac5d:	inc    bh
  41ac5f:	jmp    0x890af74d
  41ac64:	loopne 0x41acbe
  41ac66:	dec    esp
  41ac67:	aad    0x22
  41ac69:	call   DWORD PTR ds:0x17e252c9
  41ac6f:	jmp    FWORD PTR [ecx]
  41ac71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac72:	pop    ds
  41ac73:	jne    0x41ac9d
  41ac75:	push   0x6883424
  41ac7a:	fist   DWORD PTR [esp+ebp*2]
  41ac7d:	sub    DWORD PTR [edx-0x2b987215],esi
  41ac83:	dec    esi
  41ac84:	aad    0x44
  41ac86:	sub    BYTE PTR [eax],0x7c
  41ac89:	loope  0x41ac3c
  41ac8b:	and    cl,BYTE PTR [eax-0x64]
  41ac8e:	inc    ebp
  41ac8f:	in     eax,0xd6
  41ac91:	and    eax,0xeac7d9a3
  41ac96:	out    0xb,eax
  41ac98:	push   0xf04ea42a
  41ac9d:	cli    
  41ac9e:	mov    edx,0xf5b4ea1b
  41aca3:	not    DWORD PTR [esp+ebp*2+0x67f4e751]
  41acaa:	loopne 0x41ac79
  41acac:	je     0x41ac70
  41acae:	int    0x30
  41acb0:	jae    0x41ac77
  41acb2:	mov    al,0x32
  41acb4:	pop    ebx
  41acb5:	mov    al,ds:0x62a44bca
  41acba:	xor    DWORD PTR [ebp+0x5aa6fc80],eax
  41acc0:	stos   DWORD PTR es:[edi],eax
  41acc1:	jmp    0x41ac74
  41acc3:	jo     0x41ac9e
  41acc5:	loope  0x41ad0e
  41acc7:	pop    ss
  41acc8:	outs   dx,DWORD PTR ds:[esi]
  41acc9:	cmp    edx,0xffffffd8
  41accc:	cdq    
  41accd:	dec    esp
  41acce:	lds    ebp,FWORD PTR [esi+0x48]
  41acd1:	cmp    BYTE PTR [edi+0x76],0x74
  41acd5:	and    esi,DWORD PTR [ecx+0x67379c7c]
  41acdb:	test   DWORD PTR ds:0xbfd74120,edx
  41ace1:	sub    edi,DWORD PTR [eax-0x25705952]
  41ace7:	inc    ecx
  41ace8:	mov    dl,BYTE PTR [edi]
  41acea:	xchg   DWORD PTR [eax-0x42],ebx
  41aced:	inc    edi
  41acee:	sbb    DWORD PTR ds:0xff1c41e7,ebx
  41acf4:	(bad)  
  41acf5:	fisttp WORD PTR [eax-0x28]
  41acf8:	jns    0x41ad0f
  41acfa:	js     0x41ad1d
  41acfc:	sub    BYTE PTR [ebx+edx*4-0x7c],dh
  41ad00:	int3   
  41ad01:	in     al,0x5b
  41ad03:	(bad)  
  41ad04:	mul    BYTE PTR [esi]
  41ad06:	popf   
  41ad07:	mov    esi,0x619746ea
  41ad0c:	mov    al,dl
  41ad0e:	aaa    
  41ad0f:	jmp    0xd8148388
  41ad14:	sar    DWORD PTR [ebx-0x4f607ad8],1
  41ad1a:	div    DWORD PTR [esi+0x6a]
  41ad1d:	mov    al,ds:0x5488464d
  41ad22:	das    
  41ad23:	or     al,0xe4
  41ad25:	bound  edi,QWORD PTR [ecx-0x5d]
  41ad28:	out    0x60,al
  41ad2a:	iret   
  41ad2b:	or     DWORD PTR [esi],eax
  41ad2d:	jge    0x41ad80
  41ad2f:	xchg   edi,eax
  41ad30:	es daa 
  41ad32:	xchg   ebx,eax
  41ad33:	xor    ah,dh
  41ad35:	dec    edi
  41ad36:	int    0x39
  41ad38:	mov    BYTE PTR [ebx+0x1b],cl
  41ad3b:	test   BYTE PTR [ebx+0x71],bl
  41ad3e:	loope  0x41ace2
  41ad40:	(bad)  
  41ad41:	jnp    0x41ad36
  41ad43:	es jmp 0x41ad6d
  41ad46:	cmp    eax,0x2775fccc
  41ad4b:	jmp    0x41ad43
  41ad4d:	lods   al,BYTE PTR ds:[esi]
  41ad4e:	mov    cl,0x5
  41ad50:	lds    edi,FWORD PTR [ebp+0x62]
  41ad53:	ret    0xc119
  41ad56:	pop    ebp
  41ad57:	dec    DWORD PTR [edi+0x4bd71427]
  41ad5d:	push   eax
  41ad5e:	fsubr  DWORD PTR [edi+edx*8+0x6b]
  41ad62:	(bad)  
  41ad63:	xchg   ebx,eax
  41ad64:	xchg   DWORD PTR [esi+esi*1-0x61251711],ebx
  41ad6b:	cmp    edx,DWORD PTR [eax-0x61]
  41ad6e:	sbb    edi,edx
  41ad70:	fsubr  QWORD PTR [esi+0x50]
  41ad73:	imul   ebp,DWORD PTR [edi+edx*2],0x1888a63b
  41ad7a:	xor    eax,DWORD PTR [ecx]
  41ad7c:	jl     0x41ad8f
  41ad7e:	push   edi
  41ad7f:	leave  
  41ad80:	rol    DWORD PTR [ecx-0x2dd628b2],1
  41ad86:	push   esp
  41ad87:	pop    esp
  41ad88:	jle    0x41ad9d
  41ad8a:	xchg   ecx,eax
  41ad8b:	ret    
  41ad8c:	mov    BYTE PTR [eax+0x5fb0d121],dl
  41ad92:	mov    ah,0x15
  41ad94:	jnp    0x41adfd
  41ad96:	das    
  41ad97:	mov    ebp,0x344980c2
  41ad9c:	push   esi
  41ad9d:	stos   DWORD PTR es:[edi],eax
  41ad9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad9f:	xchg   DWORD PTR [edi-0x7b],ebx
  41ada2:	mov    cl,0x13
  41ada4:	in     eax,dx
  41ada5:	test   eax,0x67d5f0fd
  41adaa:	sbb    BYTE PTR [ecx+0x573adeef],ch
  41adb0:	push   esi
  41adb1:	jns    0x41ad64
  41adb3:	pop    ebp
  41adb4:	call   0xfd544674
  41adb9:	loope  0x41ade6
  41adbb:	call   0x556e7763
  41adc0:	and    ebx,DWORD PTR [ecx+esi*4+0x7d81ab29]
  41adc7:	cmp    ch,BYTE PTR [eax]
  41adc9:	add    edx,ecx
  41adcb:	sub    al,BYTE PTR [eax]
  41adcd:	ror    eax,0x1c
  41add0:	sub    eax,0x44d6481e
  41add5:	push   ss
  41add6:	push   ecx
  41add7:	mov    ds:0x3b0fd452,al
  41addc:	or     BYTE PTR [ebp-0x6f457cdf],bl
  41ade2:	push   esi
  41ade3:	push   edi
  41ade4:	mov    bh,0x3f
  41ade6:	sbb    al,0xce
  41ade8:	push   ebx
  41ade9:	or     ecx,DWORD PTR [edx+0x2b320d7]
  41adef:	ins    DWORD PTR es:[edi],dx
  41adf0:	out    0x9c,al
  41adf2:	stos   DWORD PTR es:[edi],eax
  41adf3:	adc    cl,BYTE PTR [eax+0x7ff18719]
  41adf9:	repnz loope 0x41adf4
  41adfc:	cwde   
  41adfd:	fistp  WORD PTR [bx+0x65]
  41ae01:	lahf   
  41ae02:	or     al,0xa6
  41ae04:	xor    cl,BYTE PTR [eax+0x752a0b1]
  41ae0a:	mov    ebp,ds
  41ae0c:	jmp    0xfd18bf8a
  41ae11:	cdq    
  41ae12:	(bad)  
  41ae13:	jg     0x41ad9c
  41ae15:	aas    
  41ae16:	xor    edi,DWORD PTR [ebp-0x343db478]
  41ae1c:	jno    0x41adf5
  41ae1e:	daa    
  41ae1f:	sub    ebx,DWORD PTR [eax-0x26d7279a]
  41ae25:	and    al,0x7e
  41ae27:	push   eax
  41ae28:	jbe    0x41ae71
  41ae2a:	pop    esi
  41ae2b:	popf   
  41ae2c:	mov    BYTE PTR [edi+0xc],dl
  41ae2f:	aad    0x9e
  41ae31:	pop    edi
  41ae32:	mov    dh,0x2a
  41ae34:	les    edx,FWORD PTR [ebp+0x1b7ed7d7]
  41ae3a:	mov    al,BYTE PTR [edi+ebp*8-0x771e1325]
  41ae41:	push   ebp
  41ae42:	in     eax,0x5b
  41ae44:	fmul   DWORD PTR [edi+esi*8-0x5d]
  41ae48:	xor    BYTE PTR [edi+0x7],ah
  41ae4b:	iret   
  41ae4c:	lds    esi,FWORD PTR [esi+0x502dc8e4]
  41ae52:	mov    al,0xc
  41ae54:	xchg   esp,eax
  41ae55:	aas    
  41ae56:	add    bh,ch
  41ae58:	xchg   ebx,eax
  41ae59:	std    
  41ae5a:	dec    ebp
  41ae5b:	mov    ah,0x24
  41ae5d:	addr16 out 0x96,eax
  41ae60:	and    eax,0x440e9f99
  41ae65:	dec    esi
  41ae66:	mov    cl,0x6b
  41ae68:	mov    al,0x2f
  41ae6a:	mov    bh,0x75
  41ae6c:	out    0x27,eax
  41ae6e:	sub    al,0xd7
  41ae70:	jle    0x41ae34
  41ae72:	and    BYTE PTR [edi+ebp*8],dh
  41ae75:	pushf  
  41ae76:	test   al,0xcb
  41ae78:	ror    BYTE PTR [ecx+ebp*8+0x4b],0x8
  41ae7d:	mov    eax,0x772b8ef1
  41ae82:	mov    DWORD PTR [edx+esi*8+0x5dc13e67],ebx
  41ae89:	and    BYTE PTR [edi-0x3c],dh
  41ae8c:	pop    edx
  41ae8d:	cmp    BYTE PTR [edi+ecx*8-0x62ef9829],cl
  41ae94:	jl     0x41aed8
  41ae96:	into   
  41ae97:	imul   ecx,DWORD PTR [ebx],0x67
  41ae9a:	loope  0x41ae5e
  41ae9c:	out    dx,eax
  41ae9d:	push   esi
  41ae9e:	rcl    DWORD PTR [edx],cl
  41aea0:	add    edi,DWORD PTR [ebp-0x48]
  41aea3:	das    
  41aea4:	scas   al,BYTE PTR es:[edi]
  41aea5:	(bad)  
  41aea6:	cwde   
  41aea7:	xlat   BYTE PTR ds:[ebx]
  41aea8:	clc    
  41aea9:	stc    
  41aeaa:	arpl   WORD PTR [edi-0x282b685d],bx
  41aeb0:	sbb    al,0xee
  41aeb2:	push   cs
  41aeb3:	mov    eax,0xe565aa29
  41aeb8:	xor    DWORD PTR [ecx-0x2a],0xa1f6a0e6
  41aebf:	sub    dh,ch
  41aec1:	cmp    ebp,DWORD PTR [eax+0x43acd9d7]
  41aec7:	fimul  WORD PTR es:[edi+ebp*8-0x1ea7e35]
  41aecf:	rol    BYTE PTR [edx],1
  41aed1:	rcl    DWORD PTR [ecx],0x59
  41aed4:	imul   esp,DWORD PTR [edi],0x30bbd772
  41aeda:	sar    al,1
  41aedc:	cli    
  41aedd:	pop    ss
  41aede:	pop    DWORD PTR [edx+edi*2+0x1566b1a7]
  41aee5:	je     0x41aee4
  41aee7:	aas    
  41aee8:	pop    eax
  41aee9:	jg     0x41af21
  41aeeb:	xlat   BYTE PTR ds:[ebx]
  41aeec:	pop    esp
  41aeed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeee:	sar    esi,cl
  41aef0:	cdq    
  41aef1:	rcl    BYTE PTR [edi],1
  41aef3:	sbb    ebx,DWORD PTR [edx+0x190c5592]
  41aef9:	fs aas 
  41aefb:	fld    TBYTE PTR [eax+0x47]
  41aefe:	popf   
  41aeff:	xchg   ecx,eax
  41af00:	jno    0x41ae9e
  41af02:	loopne 0x41aedb
  41af04:	scas   al,BYTE PTR es:[edi]
  41af05:	jnp    0x41af17
  41af07:	dec    esp
  41af08:	dec    edx
  41af09:	mov    eax,ebx
  41af0b:	fisttp WORD PTR [eax-0x49183280]
  41af11:	and    BYTE PTR [ebx+eiz*4+0x5e4b668d],ah
  41af18:	loop   0x41aee0
  41af1a:	mov    ds:0x26be72a2,eax
  41af1f:	sbb    eax,DWORD PTR [ecx+edx*1-0x7470904f]
  41af26:	cmp    ebp,ebp
  41af28:	dec    ecx
  41af29:	inc    edi
  41af2a:	fcmovb st,st(0)
  41af2c:	shl    DWORD PTR [ecx+0x24],cl
  41af2f:	xlat   BYTE PTR ds:[ebx]
  41af30:	out    dx,eax
  41af31:	iret   
  41af32:	sub    esp,DWORD PTR [esi+0x64]
  41af35:	adc    BYTE PTR [ecx+0x51986afe],dh
  41af3b:	rol    BYTE PTR [eax+eiz*1],1
  41af3e:	pusha  
  41af3f:	xlat   BYTE PTR ds:[ebx]
  41af40:	sahf   
  41af41:	mov    ch,0x40
  41af43:	jo     0x41af6d
  41af45:	in     eax,dx
  41af46:	shl    DWORD PTR [eax+ecx*4],0xbe
  41af4a:	adc    ah,BYTE PTR [edx-0x19129bea]
  41af50:	int    0x60
  41af52:	inc    edx
  41af53:	xchg   edi,eax
  41af54:	jge    0x41af5a
  41af56:	sbb    ebp,DWORD PTR [eax+ecx*4-0x78]
  41af5a:	(bad)  
  41af5b:	mov    al,ds:0x1fb03ebe
  41af60:	jmp    0x41af61
  41af62:	cli    
  41af63:	dec    esi
  41af64:	es sahf 
  41af66:	jb     0x41afdf
  41af68:	scas   al,BYTE PTR es:[edi]
  41af69:	mov    dh,BYTE PTR [edx-0x46b88729]
  41af6f:	shl    DWORD PTR ds:[esi],1
  41af72:	inc    esp
  41af73:	add    DWORD PTR [ecx-0x295fdfbd],ecx
  41af79:	inc    esi
  41af7a:	push   ss
  41af7b:	cmp    eax,0x34d1ab4a
  41af80:	lds    esp,FWORD PTR [edi+0x5d]
  41af83:	arpl   WORD PTR [edx+eax*2+0x3d099cd5],si
  41af8a:	mov    cl,0x14
  41af8c:	je     0x41af95
  41af8e:	push   ds
  41af8f:	lahf   
  41af90:	sbb    eax,0xfef99aea
  41af95:	stc    
  41af96:	xchg   ebx,eax
  41af97:	xlat   BYTE PTR ds:[ebx]
  41af98:	mov    eax,edx
  41af9a:	outs   dx,BYTE PTR ds:[esi]
  41af9b:	jno    0x41af6a
  41af9d:	in     al,dx
  41af9e:	mov    cl,0x66
  41afa0:	mov    eax,0x81fb32e0
  41afa5:	jp     0x41af30
  41afa7:	mov    al,ds:0xe64a6410
  41afac:	jp     0x41af50
  41afae:	sub    eax,0xed1008eb
  41afb3:	or     al,0x0
  41afb5:	and    BYTE PTR [ecx-0x1e33064b],dh
  41afbb:	fisubr WORD PTR [esi+eax*8]
  41afbe:	rcl    edi,0xc9
  41afc1:	leave  
  41afc2:	imul   esp,DWORD PTR [eax-0x32],0x70
  41afc6:	rol    ch,1
  41afc8:	pushf  
  41afc9:	and    BYTE PTR [ebx+0x1583c857],dl
  41afcf:	pop    eax
  41afd0:	xlat   BYTE PTR ds:[ebx]
  41afd1:	cmp    edi,esi
  41afd3:	xlat   BYTE PTR ds:[ebx]
  41afd4:	test   eax,0xcbc037e4
  41afd9:	div    DWORD PTR [edi+0x65]
  41afdc:	mov    edi,0x47d8cc86
  41afe1:	dec    edx
  41afe2:	inc    edx
  41afe3:	mov    bh,0x2b
  41afe5:	loopne 0x41af95
  41afe7:	add    BYTE PTR [ebp+0x67],0xa4
  41afeb:	scas   eax,DWORD PTR es:[edi]
  41afec:	sbb    DWORD PTR [ecx-0x32],0xffffffac
  41aff0:	das    
  41aff1:	xchg   edi,eax
  41aff2:	mov    cl,0x39
  41aff4:	nop
  41aff5:	lds    edi,FWORD PTR [esi+0x210de456]
  41affb:	xlat   BYTE PTR ds:[ebx]
  41affc:	mov    WORD PTR [eax-0x53f2ec53],ds
  41b002:	loop   0x41aff7
  41b004:	test   BYTE PTR [ebx-0x47],dl
  41b007:	call   0x52ad:0x5b71a62b
  41b00e:	xor    eax,0x48d0d4d7
  41b013:	and    bh,BYTE PTR [ebp-0x3c]
  41b016:	pop    edx
  41b017:	outs   dx,BYTE PTR ds:[esi]
  41b018:	mov    BYTE PTR [edx+esi*8+0x4a],bl
  41b01c:	jbe    0x41afe7
  41b01e:	ins    DWORD PTR es:[edi],dx
  41b01f:	add    BYTE PTR [ebp-0x7fcd7609],bl
  41b025:	popf   
  41b026:	popa   
  41b027:	pop    ss
  41b028:	nop
  41b029:	push   esi
  41b02a:	jae    0x41afbd
  41b02c:	and    edx,edx
  41b02e:	mov    dh,cl
  41b030:	scas   al,BYTE PTR es:[edi]
  41b031:	lea    esi,[bx+si-0x74ce]
  41b036:	jmp    0x92d9:0xab67b04f
  41b03d:	sub    al,0x9f
  41b03f:	int3   
  41b040:	or     eax,0xfbc9b123
  41b045:	and    BYTE PTR [edi+0x24],ch
  41b048:	fsub   DWORD PTR [ebp+0x2a]
  41b04b:	(bad)  
  41b04c:	mov    al,0x69
  41b04e:	(bad)
  41b052:	fs sub al,0x4
  41b055:	and    dl,BYTE PTR [ecx+0x2b]
  41b058:	test   ebp,ecx
  41b05a:	mov    cl,0x1
  41b05c:	retf   0xef74
  41b05f:	sub    BYTE PTR [edi+edx*2+0x19e7d61d],ch
  41b066:	popa   
  41b067:	in     al,dx
  41b068:	mov    dh,0x46
  41b06a:	jecxz  0x41b07b
  41b06c:	adc    BYTE PTR [esi+0x5d9b9db1],dl
  41b072:	push   ebp
  41b073:	cmp    edx,eax
  41b075:	fst    DWORD PTR [edx]
  41b077:	enter  0xb2e5,0x1c
  41b07b:	push   ss
  41b07c:	and    bh,ch
  41b07e:	xor    esp,DWORD PTR [edx+0xe61a44f]
  41b084:	fisub  WORD PTR [edx-0x4f]
  41b087:	mov    ebx,0x41931b89
  41b08c:	pushw  ds
  41b08e:	ja     0x41b069
  41b090:	sahf   
  41b091:	mov    bh,0x82
  41b093:	cmp    esp,DWORD PTR [edi-0xa]
  41b096:	ret    
  41b097:	xchg   edx,eax
  41b098:	jb     0x41b025
  41b09a:	sbb    BYTE PTR [ecx-0x76],ch
  41b09d:	dec    edi
  41b09e:	pop    ss
  41b09f:	lock mov bh,0x80
  41b0a2:	xchg   esp,eax
  41b0a3:	xor    eax,ebp
  41b0a5:	mov    bh,0xcb
  41b0a7:	dec    ebx
  41b0a8:	adc    ah,BYTE PTR [edi-0x54]
  41b0ab:	pushf  
  41b0ac:	enter  0x9ab4,0x0
  41b0b0:	inc    ebp
  41b0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0b2:	leave  
  41b0b3:	ret    
  41b0b4:	mov    DWORD PTR [esi+0x2a],edi
  41b0b7:	mov    edi,0x867d47d3
  41b0bc:	pop    ebp
  41b0bd:	scas   eax,DWORD PTR es:[edi]
  41b0be:	xchg   ecx,eax
  41b0bf:	daa    
  41b0c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0c1:	addr16 pop ss
  41b0c3:	mov    BYTE PTR [esi-0x29],cl
  41b0c6:	(bad)  
  41b0c7:	shr    bl,1
  41b0c9:	call   0x7722447f
  41b0ce:	mov    al,0x3b
  41b0d0:	test   BYTE PTR [ebx+0x27b9d70f],ch
  41b0d6:	xor    ah,bl
  41b0d8:	pop    ss
  41b0d9:	xor    edx,esi
  41b0db:	repnz mov dh,cl
  41b0de:	cmp    ebx,DWORD PTR [esi-0x3475bf93]
  41b0e4:	lods   al,BYTE PTR ds:[esi]
  41b0e5:	pop    ebp
  41b0e6:	js     0x41b0b4
  41b0e8:	or     cl,ch
  41b0ea:	cmp    eax,0x122b293b
  41b0ef:	pop    ds
  41b0f0:	fwait
  41b0f1:	jle    0x41b0ec
  41b0f3:	arpl   WORD PTR [edi+ecx*4-0x1720364f],sp
  41b0fa:	cs cld 
  41b0fc:	add    eax,0x6a528367
  41b101:	pop    ss
  41b102:	shr    DWORD PTR [ecx+ebx*8-0xc],1
  41b106:	mov    dh,0x83
  41b108:	mov    eax,0xb8ddfa9e
  41b10d:	pop    edi
  41b10e:	mov    al,es:0xe994671c
  41b114:	xchg   esp,eax
  41b115:	sub    DWORD PTR [edi+eax*8-0x43],esp
  41b119:	ins    BYTE PTR es:[edi],dx
  41b11a:	mov    cl,0x5d
  41b11c:	mov    cl,0x9c
  41b11e:	adc    eax,0xdee5c3b4
  41b123:	(bad)  [ebx+0x7850493]
  41b129:	dec    ebx
  41b12a:	jg     0x41b159
  41b12c:	inc    DWORD PTR [edi-0x68090e89]
  41b132:	mov    cl,0x18
  41b134:	cwde   
  41b135:	std    
  41b136:	mov    DWORD PTR [ecx-0x28ee1a46],edx
  41b13c:	mov    bh,0x39
  41b13e:	(bad)  
  41b13f:	imul   edx,ebx,0xffffffea
  41b142:	sub    BYTE PTR [ebp-0x1827d778],dl
  41b148:	inc    edi
  41b149:	(bad)  
  41b14a:	int    0x9a
  41b14c:	fisub  WORD PTR [edi-0x73]
  41b14f:	std    
  41b150:	sub    ecx,DWORD PTR [edi+ebx*4+0x53]
  41b154:	xchg   BYTE PTR [ebp+eax*2-0x10177775],bl
  41b15b:	fwait
  41b15c:	je     0x41b117
  41b15e:	push   cs
  41b15f:	push   0xffffffe8
  41b161:	pop    eax
  41b162:	stc    
  41b163:	push   esi
  41b164:	xchg   DWORD PTR [edx-0x66769409],eax
  41b16a:	in     eax,0x23
  41b16c:	out    0x3b,al
  41b16e:	mov    cl,0x92
  41b170:	jecxz  0x41b1e4
  41b172:	push   cs
  41b173:	mov    al,ds:0xd7074d17
  41b178:	sahf   
  41b179:	int    0x3c
  41b17b:	fwait
  41b17c:	cli    
  41b17d:	mov    eax,0x2d87c879
  41b182:	pop    edx
  41b183:	mov    bl,0x25
  41b185:	dec    ecx
  41b186:	jmp    0x9dd8:0x72d67422
  41b18d:	aaa    
  41b18e:	push   ebx
  41b18f:	leave  
  41b190:	jnp    0x41b1a2
  41b192:	inc    ecx
  41b193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b194:	cmp    eax,0x88f67bff
  41b199:	mov    dh,0x8e
  41b19c:	sub    al,0xa8
  41b19e:	inc    esi
  41b19f:	mov    dh,0x31
  41b1a1:	fs mov gs,ebx
  41b1a4:	jne    0x41b1f8
  41b1a6:	inc    DWORD PTR [edi+0x11]
  41b1a9:	idiv   DWORD PTR [ebx-0x4e64f238]
  41b1af:	dec    ecx
  41b1b0:	xchg   ebx,eax
  41b1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1b2:	jnp    0x41b163
  41b1b4:	jo     0x41b199
  41b1b6:	aas    
  41b1b7:	xlat   BYTE PTR ds:[ebx]
  41b1b8:	jnp    0x9f6254b2
  41b1be:	out    dx,eax
  41b1bf:	sar    ebx,1
  41b1c1:	shl    DWORD PTR [ecx+0x5770aff0],cl
  41b1c7:	pushf  
  41b1c8:	hlt    
  41b1c9:	imul   ecx,DWORD PTR [edi+edx*8+0x52],0xc1dd2741
  41b1d1:	repz rcl DWORD PTR [edx-0x73fb9778],0x2e
  41b1d9:	int3   
  41b1da:	aas    
  41b1db:	imul   ebp,esi,0x85e56c5e
  41b1e1:	stos   BYTE PTR es:[edi],al
  41b1e2:	arpl   WORD PTR [edx+0x28313035],bp
  41b1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1e9:	test   al,0xb0
  41b1eb:	dec    ebp
  41b1ec:	daa    
  41b1ed:	jp     0x41b1b1
  41b1ef:	(bad)  
  41b1f0:	xor    ebp,ebp
  41b1f2:	jge    0x41b19a
  41b1f4:	sbb    esi,DWORD PTR [eax-0x29]
  41b1f7:	rol    esi,0x66
  41b1fa:	cdq    
  41b1fb:	(bad)  
  41b1fc:	xlat   BYTE PTR ds:[ebx]
  41b1fd:	ins    BYTE PTR es:[edi],dx
  41b1fe:	and    edx,DWORD PTR [ebx]
  41b200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b201:	gs mov bl,0x87
  41b204:	and    esp,DWORD PTR [ebp-0x795d26ae]
  41b20a:	ror    BYTE PTR [edi-0x18],1
  41b20d:	(bad)  
  41b20e:	fcom   st(7)
  41b210:	cmp    edi,DWORD PTR [ebp-0x6e8ea45e]
  41b216:	dec    esi
  41b217:	mov    dl,0x88
  41b219:	mov    ds:0xedb28edf,al
  41b21e:	repz imul esi,DWORD PTR [ecx-0x61d53b99],0xffffff96
  41b226:	jns    0x41b1f4
  41b228:	les    edx,FWORD PTR [edi]
  41b22a:	mov    cl,0x84
  41b22c:	push   0xfffffffb
  41b22e:	xchg   esp,ebx
  41b230:	add    al,BYTE PTR ds:[ebx+0x35f684d0]
  41b237:	cmp    al,BYTE PTR [edx-0x13b89f99]
  41b23d:	test   al,0xb1
  41b23f:	xor    ecx,DWORD PTR [edi]
  41b241:	leave  
  41b242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b243:	fisub  WORD PTR [ecx-0x1422b532]
  41b249:	lea    esi,[ebx+0x1167719a]
  41b24f:	inc    edi
  41b250:	shr    dh,cl
  41b252:	adc    DWORD PTR ds:[esp+edx*8+0x645bf359],0x2b
  41b25b:	frstor [esi]
  41b25d:	retf   
  41b25e:	xlat   BYTE PTR ds:[ebx]
  41b25f:	daa    
  41b260:	int3   
  41b261:	rcl    esi,1
  41b263:	xlat   BYTE PTR ds:[ebx]
  41b264:	jg     0x41b208
  41b266:	sub    al,0xdc
  41b268:	out    dx,al
  41b269:	dec    esi
  41b26a:	ss aad 0x88
  41b26d:	inc    esp
  41b26e:	pop    eax
  41b26f:	xchg   ecx,eax
  41b270:	test   BYTE PTR [esi+0x4d],bh
  41b273:	sbb    esp,DWORD PTR [edx-0xfc8da8d]
  41b279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b27a:	mov    cl,0x5
  41b27c:	or     eax,0xa41e5af4
  41b281:	jns    0x41b234
  41b283:	ret    
  41b284:	add    al,0xc1
  41b286:	jae    0x41b287
  41b288:	and    al,0x62
  41b28a:	enter  0x3fd7,0x8b
  41b28e:	ins    BYTE PTR es:[edi],dx
  41b28f:	in     al,0xbd
  41b291:	pop    edi
  41b292:	aad    0x66
  41b294:	inc    ebp
  41b295:	jne    0x41b26b
  41b297:	lock inc ebx
  41b299:	out    0xed,eax
  41b29b:	and    ebp,DWORD PTR [eax-0x47c122b5]
  41b2a1:	addr16 loopne 0x41b290
  41b2a4:	mov    bl,BYTE PTR [esi]
  41b2a6:	not    BYTE PTR [esi]
  41b2a8:	mov    BYTE PTR [edx-0x58],ch
  41b2ab:	mov    dh,BYTE PTR [ecx+0x29d16b80]
  41b2b1:	pop    ebx
  41b2b2:	dec    edi
  41b2b3:	iret   
  41b2b4:	or     BYTE PTR [esi],bh
  41b2b6:	mov    ah,0x85
  41b2b8:	jb     0x41b29a
  41b2ba:	or     BYTE PTR ds:0x281cc688,bh
  41b2c0:	or     al,0x64
  41b2c2:	iret   
  41b2c3:	adc    dh,BYTE PTR [ebp+0x17]
  41b2c6:	jmp    0xca8c51a
  41b2cb:	cmp    DWORD PTR [esp+esi*8-0x2b],esi
  41b2cf:	jecxz  0x41b283
  41b2d1:	clc    
  41b2d2:	mov    dl,0x59
  41b2d4:	mov    esi,0x1ab87f1f
  41b2d9:	lahf   
  41b2da:	dec    ecx
  41b2db:	push   ss
  41b2dc:	addr16 addr16 xor al,0x22
  41b2e0:	pushf  
  41b2e1:	jae    0x41b280
  41b2e3:	or     DWORD PTR [edx-0x73],edi
  41b2e6:	mov    cl,0x3f
  41b2e8:	xchg   DWORD PTR [esi],ebp
  41b2ea:	or     BYTE PTR [edx],al
  41b2ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ed:	inc    ecx
  41b2ee:	ror    DWORD PTR [edi-0x153f765],0xcc
  41b2f5:	jmp    0x78934fe0
  41b2fa:	retf   
  41b2fb:	xlat   BYTE PTR ds:[ebx]
  41b2fc:	and    al,0xba
  41b2fe:	and    BYTE PTR [ebx],dl
  41b300:	adc    al,0x9f
  41b302:	mov    dh,0xbf
  41b304:	dec    eax
  41b305:	stc    
  41b306:	imul   ebp,DWORD PTR [esi],0xffffffc8
  41b309:	test   BYTE PTR ds:0x1267ec7e,bh
  41b30f:	sbb    al,0x54
  41b311:	push   edi
  41b312:	push   0x5d
  41b314:	xor    al,0xf1
  41b316:	mov    cl,0x29
  41b318:	jo     0x41b36f
  41b31a:	lock outs dx,DWORD PTR ds:[esi]
  41b31c:	fcomip st,st(3)
  41b31e:	cmp    dl,bh
  41b320:	xchg   ebx,eax
  41b321:	stos   BYTE PTR es:[edi],al
  41b322:	lods   al,BYTE PTR ds:[esi]
  41b323:	adc    eax,0x4e69466b
  41b328:	sbb    DWORD PTR [ebx],0xae42ceb8
  41b32e:	xchg   ecx,eax
  41b32f:	push   ebp
  41b330:	loope  0x41b336
  41b332:	sub    dl,bh
  41b334:	scas   al,BYTE PTR es:[edi]
  41b335:	pushf  
  41b336:	sbb    eax,0xd8d6846d
  41b33b:	test   DWORD PTR [ecx+0x56f4c0f4],eax
  41b341:	and    BYTE PTR [eax-0xd],0xd2
  41b345:	cs push ecx
  41b347:	adc    BYTE PTR [edi+eiz*2-0x70e062d4],ch
  41b34e:	and    BYTE PTR [ecx+esi*2+0x5896b119],ch
  41b355:	mov    cl,0x1
  41b357:	neg    ebp
  41b359:	or     BYTE PTR [ebx],dh
  41b35b:	xlat   BYTE PTR ds:[ebx]
  41b35c:	and    DWORD PTR [ebx+0x47],ebx
  41b35f:	ret    0xc819
  41b362:	(bad)  
  41b363:	stc    
  41b364:	add    DWORD PTR [ebp+0x55ee32e7],0x52dbb2a1
  41b36e:	cli    
  41b36f:	xlat   BYTE PTR ds:[ebx]
  41b370:	cmc    
  41b371:	or     BYTE PTR [ebp+0x46],dl
  41b374:	jg     0x41b39a
  41b376:	call   0x35333d81
  41b37b:	cmc    
  41b37c:	sub    ah,al
  41b37e:	push   0x581d0843
  41b383:	vpackuswb xmm6,xmm4,XMMWORD PTR [ebx]
  41b387:	call   0xff69:0x4ea14a71
  41b38e:	dec    ebx
  41b38f:	pop    edx
  41b390:	mov    dh,cl
  41b392:	inc    ebx
  41b393:	mov    al,ds:0xde7b52d0
  41b398:	dec    eax
  41b399:	addr16 inc ecx
  41b39b:	clc    
  41b39c:	mov    DWORD PTR [eax],ebp
  41b39e:	xor    DWORD PTR [esi+0x45b003da],edi
  41b3a4:	int3   
  41b3a5:	shl    ch,cl
  41b3a7:	lods   eax,DWORD PTR ds:[esi]
  41b3a8:	data16 lods al,BYTE PTR ds:[esi]
  41b3aa:	jo     0x41b37f
  41b3ac:	pusha  
  41b3ad:	imul   edi,DWORD PTR [ebx-0x29],0xfca2798d
  41b3b4:	push   0xfffffffd
  41b3b6:	sub    DWORD PTR [ecx],ecx
  41b3b8:	mov    BYTE PTR [edx+0x16c733c1],dl
  41b3be:	aam    0xac
  41b3c0:	mov    eax,0xf1939867
  41b3c5:	in     eax,0x94
  41b3c7:	nop
  41b3c8:	adc    eax,0x8cc3b19f
  41b3cd:	icebp  
  41b3ce:	jmp    0x41b3ed
  41b3d0:	mov    eax,ds:0xabd915c6
  41b3d5:	mov    bl,0xa1
  41b3d7:	shr    BYTE PTR [eax+0x2f],1
  41b3da:	int    0xdf
  41b3dc:	sbb    DWORD PTR [ebp-0x3f],ebp
  41b3df:	push   cs
  41b3e0:	mov    ch,bh
  41b3e2:	retf   
  41b3e3:	hlt    
  41b3e4:	sub    DWORD PTR [ebx],edi
  41b3e6:	dec    ebx
  41b3e7:	sub    esi,DWORD PTR [ebp+0x19a7ba4f]
  41b3ed:	addr16 mov eax,ds:0xd004
  41b3f1:	dec    edi
  41b3f2:	scas   ax,WORD PTR es:[edi]
  41b3f4:	nop
  41b3f5:	in     al,dx
  41b3f6:	lods   al,BYTE PTR ds:[esi]
  41b3f7:	rcr    BYTE PTR [ecx],cl
  41b3f9:	mov    dh,0xf1
  41b3fb:	push   0x35
  41b3fd:	imul   edi,DWORD PTR [ebx],0x65
  41b400:	clc    
  41b401:	addr16 ret 0x7dca
  41b405:	ret    0xa25a
  41b408:	xchg   ebp,eax
  41b409:	lds    esi,FWORD PTR [ecx-0x21577e17]
  41b40f:	dec    eax
  41b410:	retf   0x3cd7
  41b413:	xlat   BYTE PTR ds:[ebx]
  41b414:	dec    esp
  41b415:	sar    BYTE PTR [edi+ecx*1+0x13],1
  41b419:	cwde   
  41b41a:	(bad)  
  41b41b:	adc    cl,BYTE PTR [eax-0x1cf47440]
  41b421:	mov    ebp,0x67ef16c2
  41b426:	xor    BYTE PTR [edx],cl
  41b428:	ret    0x2d50
  41b42b:	int    0xff
  41b42d:	or     eax,0x670ab68a
  41b432:	lods   eax,DWORD PTR ds:[esi]
  41b433:	shr    esp,1
  41b435:	xchg   ecx,eax
  41b436:	(bad)  
  41b437:	fcomip st,st(7)
  41b439:	addr16 pop esp
  41b43b:	popa   
  41b43c:	or     DWORD PTR [edi+edx*1+0x567659aa],ecx
  41b443:	xor    al,0x30
  41b445:	cmp    ecx,DWORD PTR [ebp+esi*4-0x78]
  41b449:	mov    edx,0x44a9e788
  41b44e:	or     DWORD PTR [ecx],edi
  41b450:	mul    BYTE PTR [edi-0x1b]
  41b453:	xchg   esp,eax
  41b454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b455:	dec    esp
  41b456:	stc    
  41b457:	pop    es
  41b458:	add    dl,BYTE PTR [ebp-0x6f27ec63]
  41b45e:	mov    cl,0x72
  41b460:	ret    
  41b461:	gs inc ebp
  41b463:	jge    0x41b437
  41b465:	addr16 call 0xf9f38c08
  41b46b:	stos   BYTE PTR es:[edi],al
  41b46c:	sahf   
  41b46d:	clc    
  41b46e:	mov    cl,0x94
  41b470:	fcom   st(4)
  41b472:	dec    ebx
  41b473:	enter  0x7044,0x8
  41b477:	xlat   BYTE PTR ds:[ebx]
  41b478:	mov    bh,0xcd
  41b47a:	pop    ss
  41b47b:	test   al,0x75
  41b47d:	push   ebp
  41b47e:	push   ebx
  41b47f:	cmp    BYTE PTR [ecx-0x54],0x4a
  41b483:	adc    BYTE PTR [eax],cl
  41b485:	cmc    
  41b486:	and    al,BYTE PTR [esi+0x57cb3dba]
  41b48c:	cmp    al,0xef
  41b48e:	cmc    
  41b48f:	push   cs
  41b490:	push   edi
  41b491:	mov    bl,BYTE PTR [edx-0x29]
  41b494:	xor    DWORD PTR ds:0xd86a36f7,0x2888f7b4
  41b49e:	outs   dx,DWORD PTR ds:[esi]
  41b49f:	cmp    eax,0xc8645758
  41b4a4:	push   edi
  41b4a5:	inc    ecx
  41b4a6:	cwde   
  41b4a7:	icebp  
  41b4a8:	and    ah,BYTE PTR [edi-0x1e]
  41b4ab:	mov    ch,0x3f
  41b4ad:	mov    ch,0x1b
  41b4af:	jbe    0x41b43b
  41b4b1:	sub    DWORD PTR [ebx+0x14],edx
  41b4b4:	and    DWORD PTR [eax+0x478f816],0x64a7af2d
  41b4be:	add    al,0x3f
  41b4c0:	xor    BYTE PTR [eax],dl
  41b4c2:	test   BYTE PTR [esi+0x4706a458],al
  41b4c8:	icebp  
  41b4c9:	cwde   
  41b4ca:	mov    dl,0x9a
  41b4cc:	sbb    DWORD PTR [bx+si+0x5a],eax
  41b4d0:	fild   WORD PTR [edi+0x73937f2f]
  41b4d6:	cwde   
  41b4d7:	iret   
  41b4d8:	aam    0x9a
  41b4da:	mov    cl,0x4c
  41b4dc:	lea    ebp,[esi-0x7b]
  41b4df:	bound  ebp,QWORD PTR [ecx]
  41b4e1:	xchg   esp,eax
  41b4e2:	mov    cl,0x23
  41b4e4:	push   eax
  41b4e5:	mov    edi,0x4bcfab9b
  41b4ea:	hlt    
  41b4eb:	enter  0xd45e,0xe
  41b4ef:	test   bh,ah
  41b4f1:	addr16 push ds
  41b4f3:	shl    BYTE PTR [ebp+0x6689547f],cl
  41b4f9:	or     al,0xb1
  41b4fb:	and    dh,dh
  41b4fd:	(bad)  
  41b4fe:	push   ebx
  41b4ff:	fwait
  41b500:	xor    BYTE PTR [esi],dl
  41b502:	or     al,0xd5
  41b504:	icebp  
  41b505:	sub    BYTE PTR [edx+0x519cfc9a],cl
  41b50b:	and    ecx,esi
  41b50d:	repz mov cl,0xac
  41b510:	inc    edi
  41b511:	mov    ds:0xa989ee5d,eax
  41b516:	mov    edi,0x3a9b08d7
  41b51b:	push   0x9
  41b51d:	pop    edi
  41b51e:	(bad)  
  41b51f:	mov    cl,0x81
  41b521:	shl    DWORD PTR [edx],1
  41b523:	mov    eax,0x1c11a00c
  41b528:	ins    DWORD PTR es:[edi],dx
  41b529:	imul   edi,DWORD PTR [esp+edx*8],0x6c
  41b52d:	retf   
  41b52e:	mov    edi,0x59542a8a
  41b533:	sti    
  41b534:	inc    edx
  41b535:	test   DWORD PTR [esp+ecx*4-0x2e6c98c7],ecx
  41b53c:	dec    ecx
  41b53d:	int3   
  41b53e:	xor    eax,0xc7672feb
  41b543:	shl    DWORD PTR [eax],cl
  41b545:	xor    esp,DWORD PTR [ecx+ecx*2+0x7e]
  41b549:	retf   0x31b6
  41b54c:	jp     0x41b525
  41b54e:	pop    eax
  41b54f:	test   DWORD PTR [ebp+0xf6edbe7],ebx
  41b555:	scas   eax,DWORD PTR es:[edi]
  41b556:	popa   
  41b557:	xlat   BYTE PTR ds:[ebx]
  41b558:	push   edi
  41b559:	sub    eax,0x8f902d64
  41b55e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b55f:	mov    ebp,0xb801e999
  41b564:	dec    eax
  41b565:	jno    0x41b543
  41b567:	(bad)  
  41b569:	out    0x9b,eax
  41b56b:	fld    st(5)
  41b56d:	inc    esp
  41b56e:	jne    0x41b55e
  41b570:	test   al,0x58
  41b572:	cmp    bl,0x1a
  41b575:	ficom  WORD PTR [edi-0x51]
  41b578:	shr    BYTE PTR [edx+0x28],0xd0
  41b57c:	dec    edi
  41b57d:	popf   
  41b57e:	out    0xa1,eax
  41b580:	or     BYTE PTR [eax-0x22],dl
  41b583:	fisubr WORD PTR [edi+0x26064867]
  41b589:	les    edx,FWORD PTR ss:[ebx+edi*1]
  41b58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b58e:	mov    cl,0x59
  41b590:	inc    eax
  41b591:	mov    eax,0x60fe2ff6
  41b596:	fucomp st(4)
  41b598:	std    
  41b599:	pop    ebp
  41b59a:	xor    DWORD PTR [eax-0x7e],esi
  41b59d:	jle    0x41b535
  41b59f:	scas   eax,DWORD PTR es:[edi]
  41b5a0:	cmp    al,0xa8
  41b5a2:	lods   al,BYTE PTR ds:[esi]
  41b5a3:	retf   
  41b5a4:	cmp    BYTE PTR [esi],cl
  41b5a6:	icebp  
  41b5a7:	test   BYTE PTR [ebx],dl
  41b5a9:	(bad)  
  41b5aa:	xchg   DWORD PTR [ebx],ecx
  41b5ac:	cmc    
  41b5ad:	dec    ecx
  41b5ae:	jb     0x41b574
  41b5b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5b1:	imul   ebx,DWORD PTR [edx+0x51],0x161115ea
  41b5b8:	pop    ecx
  41b5b9:	jge    0x41b635
  41b5bb:	test   ch,dh
  41b5bd:	push   ss
  41b5be:	mov    cl,0xeb
  41b5c0:	mov    edx,0x13e4e6d6
  41b5c5:	add    eax,0x1ab7f101
  41b5ca:	jno    0x41b5a3
  41b5cc:	push   cs
  41b5cd:	test   BYTE PTR [edi-0x4ebf9fac],0xe3
  41b5d4:	push   0xffffffd2
  41b5d6:	or     DWORD PTR [ecx+0xb],0xffffffd5
  41b5da:	(bad)  
  41b5dc:	pop    esp
  41b5dd:	test   al,0xae
  41b5df:	lahf   
  41b5e0:	cmp    al,0x65
  41b5e2:	jb     0x41b619
  41b5e4:	mov    edx,ecx
  41b5e6:	push   0xffffffce
  41b5e8:	mov    cl,0x67
  41b5ea:	lock inc ebp
  41b5ec:	in     al,dx
  41b5ed:	sbb    bh,BYTE PTR [edx]
  41b5ef:	xlat   BYTE PTR ds:[ebx]
  41b5f0:	rcr    DWORD PTR [ebp-0x326c2de8],0x89
  41b5f7:	retf   
  41b5f8:	test   DWORD PTR [esi+0x9],esp
  41b5fb:	fdiv   DWORD PTR [edi+0x473f31d8]
  41b601:	adc    eax,0xf975c448
  41b606:	loop   0x41b5df
  41b608:	cs jmp 0x47ab27a2
  41b60e:	mov    cl,0xb3
  41b610:	or     al,0x1c
  41b612:	xchg   ebx,eax
  41b613:	mov    edx,0xcadd4073
  41b618:	and    ebx,0xfffffffa
  41b61b:	xchg   ebp,eax
  41b61c:	pop    esp
  41b61d:	pop    ebp
  41b61e:	inc    esi
  41b61f:	push   ebp
  41b620:	enter  0x1a9c,0x8d
  41b624:	mov    BYTE PTR [edi+0x47],al
  41b627:	sbb    eax,0x5d8e729a
  41b62c:	stos   DWORD PTR es:[edi],eax
  41b62d:	shl    BYTE PTR [si+0x58],0x19
  41b632:	pop    ecx
  41b633:	aaa    
  41b634:	aaa    
  41b635:	stc    
  41b636:	mov    cl,0xc8
  41b638:	inc    ecx
  41b639:	jge    0x41b6b9
  41b63b:	push   ecx
  41b63c:	out    dx,al
  41b63d:	mov    cl,0x90
  41b63f:	xlat   BYTE PTR ds:[ebx]
  41b640:	dec    edx
  41b641:	int3   
  41b642:	pop    ds
  41b643:	inc    edx
  41b644:	adc    al,0x77
  41b646:	call   0x93fa:0xc23888a7
  41b64d:	stc    
  41b64e:	lahf   
  41b64f:	rcl    ch,cl
  41b651:	imul   ebx,DWORD PTR [ebx-0xe2c1c44],0x7a3c9e34
  41b65b:	jns    0x41b5e5
  41b65d:	pushf  
  41b65e:	push   esp
  41b65f:	inc    ecx
  41b660:	hlt    
  41b661:	pop    ebx
  41b662:	fistp  WORD PTR [edx-0x14]
  41b665:	push   ss
  41b666:	pop    esp
  41b667:	test   al,0x4f
  41b669:	addr16 mov bh,0x2f
  41b66c:	cdq    
  41b66d:	mov    edx,0x443872a5
  41b672:	mov    cl,0x4a
  41b674:	mov    ch,0xb7
  41b676:	xchg   ebp,eax
  41b677:	in     eax,dx
  41b678:	sbb    BYTE PTR [ecx-0xf],dh
  41b67b:	jmp    0x41b6a2
  41b67d:	jge    0x41b68a
  41b67f:	std    
  41b680:	or     BYTE PTR [ebp+ebp*2-0x40ae6bb1],bh
  41b687:	cmp    edi,esi
  41b689:	push   esi
  41b68a:	mov    dl,0xad
  41b68c:	call   0xaee7:0x8b432a01
  41b693:	xor    esp,ebx
  41b695:	addr16 pop esi
  41b697:	stos   BYTE PTR es:[edi],al
  41b698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b699:	and    BYTE PTR [ebx+0x4],bl
  41b69c:	fwait
  41b69d:	inc    edx
  41b69e:	mov    cl,0x30
  41b6a0:	out    dx,al
  41b6a1:	idiv   BYTE PTR [edi]
  41b6a3:	mov    bh,0xb0
  41b6a5:	leave  
  41b6a6:	cli    
  41b6a7:	xlat   BYTE PTR ds:[ebx]
  41b6a8:	ss adc al,0x3e
  41b6ab:	push   edi
  41b6ac:	cmp    DWORD PTR [edi-0x1165f2f3],0xffffffce
  41b6b3:	popf   
  41b6b4:	enter  0x78a9,0xca
  41b6b8:	js     0x41b69f
  41b6ba:	loop   0x41b68c
  41b6bc:	push   0xbc380e45
  41b6c1:	imul   ebx
  41b6c3:	addr16 sti 
  41b6c5:	aaa    
  41b6c6:	lods   al,BYTE PTR ds:[esi]
  41b6c7:	mov    ecx,0xf672b584
  41b6cc:	add    dl,BYTE PTR [edx+0x49]
  41b6cf:	xor    eax,0xaf71a75c
  41b6d4:	popf   
  41b6d5:	addr16 pop ss
  41b6d7:	icebp  
  41b6d8:	nop
  41b6d9:	call   0x3b8f:0xdfd12df0
  41b6e0:	xchg   DWORD PTR [eax-0x6d],esp
  41b6e3:	mov    edi,0x306eb15d
  41b6e8:	(bad)  
  41b6e9:	rcl    DWORD PTR [eax],1
  41b6eb:	daa    
  41b6ec:	sti    
  41b6ed:	rol    ecx,cl
  41b6ef:	mov    ebp,0xf91467fe
  41b6f4:	imul   BYTE PTR [eax-0x9]
  41b6f7:	fistp  DWORD PTR [edx-0x23]
  41b6fa:	mov    cl,0x9d
  41b6fc:	out    dx,al
  41b6fd:	add    DWORD PTR [edi+0xa],ebx
  41b700:	cmc    
  41b701:	xor    ch,BYTE PTR [ebx+0x47a173c9]
  41b707:	stc    
  41b708:	mov    al,0x66
  41b70a:	xor    al,0x6d
  41b70c:	test   eax,0xecb7d2d7
  41b711:	adc    al,0x89
  41b713:	jb     0x41b733
  41b715:	out    0x20,eax
  41b717:	in     eax,dx
  41b718:	fmul   QWORD PTR [ebp+0x67033f6e]
  41b71e:	fsubr  QWORD PTR [esi-0x38537eff]
  41b724:	inc    eax
  41b725:	inc    edi
  41b726:	mov    esi,0xceeaa7ce
  41b72b:	mov    bh,0xb4
  41b72d:	xchg   esi,eax
  41b72e:	add    eax,0x2d673d32
  41b733:	xor    DWORD PTR [edi-0x6f],edi
  41b736:	mov    DWORD PTR [eax+0x7c],esi
  41b739:	lds    esi,FWORD PTR [ecx+0x1e078d20]
  41b73f:	(bad)  
  41b740:	sub    eax,0xf1d7ef05
  41b745:	jnp    0x41b780
  41b747:	cwde   
  41b748:	aam    0x2
  41b74a:	adc    eax,0xe49881c
  41b74f:	cmp    al,0x36
  41b751:	sti    
  41b752:	push   edx
  41b753:	aaa    
  41b754:	out    0x59,eax
  41b756:	ror    DWORD PTR [ebp-0x70462df8],1
  41b75c:	loop   0x41b7bd
  41b75e:	dec    ebp
  41b75f:	ins    BYTE PTR es:[edi],dx
  41b760:	mov    BYTE PTR [edi],dh
  41b762:	test   BYTE PTR [ebx],dl
  41b764:	daa    
  41b765:	xchg   ebx,eax
  41b766:	shr    BYTE PTR [ebp-0x6d8c9852],1
  41b76c:	loope  0x41b744
  41b76e:	mov    al,0x33
  41b770:	out    dx,eax
  41b771:	dec    ecx
  41b772:	mov    cl,0x20
  41b774:	jne    0x41b782
  41b776:	stos   DWORD PTR es:[edi],eax
  41b777:	sub    BYTE PTR [ebp+0x1ad7f3b6],cl
  41b77d:	pop    edx
  41b77e:	cmp    DWORD PTR [edi],edi
  41b780:	stc    
  41b781:	mov    ecx,0xc488a93d
  41b786:	adc    eax,0x5e74fb48
  41b78b:	dec    BYTE PTR [eax]
  41b78d:	addr16 mov ebp,0x61caea26
  41b793:	mov    bl,0x31
  41b795:	cdq    
  41b796:	mov    cl,0x35
  41b798:	cmp    eax,0x2647a40d
  41b79d:	cmp    bl,dl
  41b79f:	xlat   BYTE PTR ds:[ebx]
  41b7a0:	push   edx
  41b7a1:	bound  ecx,QWORD PTR [ebp-0x35]
  41b7a4:	add    ah,BYTE PTR [ebx+0x3a]
  41b7a7:	adc    eax,0x86b34a72
  41b7ac:	into   
  41b7ad:	ret    0x8172
  41b7b0:	push   ebp
  41b7b1:	xchg   DWORD PTR [ecx+eiz*1-0x45],eax
  41b7b5:	adc    DWORD PTR [ecx],esi
  41b7b7:	xlat   BYTE PTR ds:[ebx]
  41b7b8:	sbb    BYTE PTR [edi+0x70],bl
  41b7bb:	mov    dh,bh
  41b7bd:	or     BYTE PTR [eax],ah
  41b7bf:	adc    bl,ah
  41b7c1:	es pusha 
  41b7c3:	xlat   BYTE PTR ds:[ebx]
  41b7c4:	mov    eax,0x58098607
  41b7c9:	jae    0x41b820
  41b7cb:	xlat   BYTE PTR ds:[ebx]
  41b7cc:	mov    edx,0xaa894542
  41b7d1:	cdq    
  41b7d2:	js     0x41b76b
  41b7d4:	mov    edx,edi
  41b7d6:	jbe    0xfa7adf31
  41b7dc:	ins    BYTE PTR es:[edi],dx
  41b7dd:	xchg   esp,eax
  41b7de:	int3   
  41b7df:	xor    ch,BYTE PTR [eax+0x3f]
  41b7e2:	push   esp
  41b7e3:	cmp    esp,DWORD PTR [eax+0x67]
  41b7e6:	and    DWORD PTR [edx+0x4a0e69f1],esi
  41b7ec:	daa    
  41b7ed:	stos   BYTE PTR es:[edi],al
  41b7ee:	mov    cl,0xbc
  41b7f0:	sbb    al,0x6
  41b7f2:	sbb    DWORD PTR [ecx+edx*2],ebp
  41b7f5:	cmp    eax,0xa4998b00
  41b7fa:	mov    edi,0xf39ffdef
  41b7ff:	mov    BYTE PTR [ebx+edx*1-0x5c2d372f],dl
  41b806:	mov    dl,0xea
  41b808:	imul   edx,DWORD PTR [ebx-0x7aa322],0x1b
  41b80f:	mov    DWORD PTR [ebx-0x7625f7a8],edx
  41b815:	dec    esp
  41b816:	cmc    
  41b817:	pop    edi
  41b818:	push   0xd96d76c1
  41b81d:	and    eax,0xd50215b1
  41b822:	sbb    BYTE PTR [edx-0x28ff2e82],0x7a
  41b829:	adc    BYTE PTR [esi-0x24],0x5b
  41b82d:	(bad)  
  41b82e:	mov    bl,0x9
  41b830:	mov    BYTE PTR ds:0x168f00b7,al
  41b836:	fbld   TBYTE PTR [eax+0x1baf6771]
  41b83c:	rol    DWORD PTR [edx+0x5ee1c80b],0xb1
  41b843:	pushf  
  41b844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b845:	aad    0xcd
  41b847:	test   al,0xa6
  41b849:	mov    eax,0x4ad1d77c
  41b84e:	dec    eax
  41b84f:	add    eax,0xfc5223ae
  41b854:	mov    BYTE PTR [eax+0x37],ah
  41b857:	jb     0x41b84e
  41b859:	mov    cl,BYTE PTR [edx+0x5d69d7e8]
  41b85f:	sbb    cl,dl
  41b861:	add    al,0xd1
  41b863:	pop    ebp
  41b864:	add    eax,0x7ac8e823
  41b869:	lock mov eax,ebx
  41b86c:	and    eax,0xa21245e7
  41b871:	mov    eax,ds:0x295d7de6
  41b876:	(bad)  
  41b877:	aaa    
  41b878:	cmp    DWORD PTR [ecx+esi*4],0x9b8e830
  41b87f:	push   edi
  41b880:	popf   
  41b881:	scas   eax,DWORD PTR es:[edi]
  41b882:	inc    ecx
  41b883:	and    cl,BYTE PTR [eax]
  41b885:	pop    es
  41b886:	pop    edx
  41b887:	in     eax,0xb9
  41b889:	pop    ds
  41b88a:	data16 ror BYTE PTR [eax+0x250a2976],0xd3
  41b892:	out    0xab,al
  41b894:	ins    BYTE PTR es:[edi],dx
  41b895:	addr16 int3 
  41b897:	cld    
  41b898:	or     ebp,DWORD PTR [esi-0x12fa822]
  41b89e:	mov    cl,0xc9
  41b8a0:	mov    edi,0xdc420bbb
  41b8a5:	stos   BYTE PTR es:[edi],al
  41b8a6:	dec    ebx
  41b8a7:	xlat   BYTE PTR ds:[ebx]
  41b8a8:	in     eax,0x6
  41b8aa:	xchg   ebx,eax
  41b8ab:	and    eax,0xba1ae877
  41b8b0:	mov    BYTE PTR [ebx+edx*2-0x4b],bl
  41b8b4:	lahf   
  41b8b5:	or     DWORD PTR [esi-0x7720ca7],0xffffffd7
  41b8bc:	xor    eax,DWORD PTR [ecx-0x63]
  41b8bf:	push   ds
  41b8c0:	ret    
  41b8c1:	xchg   ebx,eax
  41b8c2:	aam    0xfe
  41b8c4:	jb     0x41b8a2
  41b8c6:	(bad)  
  41b8c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8c8:	cwde   
  41b8c9:	addr16 push 0xe44da548
  41b8cf:	jecxz  0x41b92f
  41b8d1:	pusha  
  41b8d2:	inc    edi
  41b8d3:	shl    BYTE PTR [edi+0x30],0x87
  41b8d7:	out    0x9d,eax
  41b8d9:	adc    al,0x22
  41b8db:	sar    BYTE PTR [edx-0x735c1ff],cl
  41b8e1:	pop    ds
  41b8e2:	icebp  
  41b8e3:	sbb    eax,0x59ff0b48
  41b8e8:	les    esp,FWORD PTR [edx-0x2f]
  41b8eb:	adc    al,0x35
  41b8ed:	js     0x41b92c
  41b8ef:	xlat   BYTE PTR ds:[ebx]
  41b8f0:	sub    BYTE PTR [ebx+0x3b],cl
  41b8f3:	jno    0x41b89c
  41b8f5:	arpl   WORD PTR [ecx+0x739d34b8],si
  41b8fb:	dec    ebp
  41b8fc:	cmp    eax,0x42d70b71
  41b901:	jne    0x41b955
  41b903:	pop    edi
  41b904:	loope  0x41b923
  41b906:	sbb    eax,ebx
  41b908:	mov    BYTE PTR ds:0xae5528c2,bh
  41b90e:	sub    cl,bh
  41b910:	lods   al,BYTE PTR ds:[esi]
  41b911:	addr16 cli 
  41b913:	mov    dh,0x62
  41b915:	adc    DWORD PTR [eax-0x4ed04a8c],esi
  41b91b:	outs   dx,DWORD PTR ds:[esi]
  41b91c:	ss stos DWORD PTR es:[edi],eax
  41b91e:	out    dx,al
  41b91f:	(bad)  
  41b920:	xchg   edi,eax
  41b921:	cmp    eax,0x12221823
  41b926:	jbe    0x41b99a
  41b928:	push   ebx
  41b929:	xchg   edi,eax
  41b92a:	loopne 0x41b8ec
  41b92c:	dec    ebp
  41b92d:	push   ebx
  41b92e:	push   edi
  41b92f:	in     eax,dx
  41b930:	lods   al,BYTE PTR ds:[esi]
  41b931:	data16 lods al,BYTE PTR ds:[esi]
  41b933:	push   esi
  41b934:	mov    BYTE PTR [ecx-0x658af2d0],cl
  41b93a:	add    al,0xc9
  41b93c:	push   esp
  41b93d:	fwait
  41b93e:	in     al,dx
  41b93f:	xchg   edi,eax
  41b940:	imul   esi,DWORD PTR [eax],0x67
  41b943:	popa   
  41b944:	push   es
  41b945:	adc    esi,DWORD PTR [eax-0x4c29c9d1]
  41b94b:	adc    eax,esp
  41b94d:	test   DWORD PTR [ecx+0x2b],0x31916793
  41b954:	test   DWORD PTR [ebx*1+0x5b840be3],esp
  41b95b:	mov    WORD PTR [eax+edi*8-0x51],gs
  41b95f:	stos   DWORD PTR es:[edi],eax
  41b960:	push   0xffffffcf
  41b962:	xor    BYTE PTR [ecx-0x77],cl
  41b965:	loopne 0x41b904
  41b967:	das    
  41b968:	fs lock imul edx,edi,0x4f1ba0b1
  41b970:	fwait
  41b971:	int3   
  41b972:	(bad)  
  41b973:	(bad)  [eax-0x1a27db9d]
  41b979:	test   BYTE PTR [edi+0x7c674050],al
  41b97f:	arpl   WORD PTR [edi+0x3],bx
  41b982:	js     0x41b941
  41b984:	popa   
  41b985:	xchg   dl,cl
  41b987:	xchg   ebp,eax
  41b988:	mov    edi,0xd721de
  41b98d:	mov    dl,0xd8
  41b98f:	xor    al,0x99
  41b991:	int    0x64
  41b993:	sar    BYTE PTR [ecx-0x7f],1
  41b996:	out    0x5,eax
  41b998:	out    dx,al
  41b999:	xchg   edi,eax
  41b99a:	and    cl,BYTE PTR [ecx-0x474e7a45]
  41b9a0:	daa    
  41b9a1:	jmp    0x72b7129f
  41b9a6:	jb     0x41b970
  41b9a8:	(bad)
  41b9ac:	call   0xb1d0:0xc019667c
  41b9b3:	adc    BYTE PTR [esi],al
  41b9b5:	inc    edx
  41b9b6:	dec    esp
  41b9b7:	js     0x41b9d2
  41b9b9:	not    BYTE PTR [ebx-0x7c873729]
  41b9bf:	inc    ecx
  41b9c0:	dec    eax
  41b9c1:	dec    eax
  41b9c2:	xchg   DWORD PTR [esi-0x65],edx
  41b9c5:	pop    ds
  41b9c6:	pop    ss
  41b9c7:	ror    DWORD PTR [eax],0x60
  41b9ca:	stc    
  41b9cb:	dec    edx
  41b9cc:	mov    ebx,0xf7d7a136
  41b9d1:	loopne 0x41b995
  41b9d3:	ds sbb al,0x86
  41b9d6:	bnd jle 0x41b95e
  41b9d9:	sbb    DWORD PTR [eax+0x31],edi
  41b9dc:	les    esi,FWORD PTR [ebx+0x33]
  41b9df:	daa    
  41b9e0:	mov    al,ds:0xf9d92671
  41b9e5:	push   esi
  41b9e6:	and    ebp,DWORD PTR [edx-0x4ce8dbd8]
  41b9ec:	retf   0xaf8d
  41b9ef:	dec    esp
  41b9f0:	add    BYTE PTR [edx-0x6ca9c4f],bl
  41b9f6:	cmp    BYTE PTR [ecx+ecx*1-0x2128da79],bl
  41b9fd:	push   0x6c626a01
  41ba02:	outs   dx,DWORD PTR ds:[esi]
  41ba03:	and    DWORD PTR [edi+0x288777a5],eax
  41ba09:	pusha  
  41ba0a:	mov    esi,ds
  41ba0c:	ins    BYTE PTR es:[edi],dx
  41ba0d:	popf   
  41ba0e:	jp     0x41b9c7
  41ba10:	dec    ebx
  41ba11:	scas   eax,DWORD PTR es:[edi]
  41ba12:	pushf  
  41ba13:	outs   dx,DWORD PTR ds:[esi]
  41ba14:	pop    esp
  41ba15:	mov    esi,DWORD PTR [ecx+0x6475b5f0]
  41ba1b:	mov    cs,edx
  41ba1d:	pop    esp
  41ba1e:	cmp    eax,0x73134ad7
  41ba23:	xor    al,0x22
  41ba25:	int    0x22
  41ba27:	call   0xc57f:0xa7dd1f88
  41ba2e:	movlhps xmm4,xmm7
  41ba31:	sbb    eax,0xe554d70b
  41ba36:	xor    ch,BYTE PTR [ecx-0x23484fd0]
  41ba3c:	and    DWORD PTR [edi+eiz*4-0x42],0x42e1d76b
  41ba44:	dec    ebx
  41ba45:	jecxz  0x41b9d9
  41ba47:	ror    BYTE PTR [ebp+0x5],1
  41ba4a:	(bad)  
  41ba4c:	cmp    al,0xf7
  41ba4e:	sub    eax,0xbd1ac88f
  41ba53:	jp     0x41ba5f
  41ba55:	cmp    DWORD PTR [ecx],edi
  41ba57:	sbb    eax,0xbb6c64f4
  41ba5c:	mov    ebx,0x50833d09
  41ba61:	and    eax,0x5488f9c3
  41ba66:	jecxz  0x41b9ec
  41ba68:	cld    
  41ba69:	cmp    dl,bl
  41ba6b:	retf   0x674b
  41ba6e:	push   edi
  41ba6f:	inc    ebx
  41ba70:	je     0x41ba4d
  41ba72:	pop    ss
  41ba73:	mov    esi,0x39b1d912
  41ba78:	lods   al,BYTE PTR ds:[esi]
  41ba79:	jb     0x41ba9f
  41ba7b:	adc    cl,BYTE PTR [ecx]
  41ba7d:	and    eax,0x4f89d755
  41ba82:	fidiv  DWORD PTR [edi+0x6c]
  41ba85:	aad    0x70
  41ba87:	enter  0x9c8a,0x17
  41ba8b:	stos   DWORD PTR es:[edi],eax
  41ba8c:	cwde   
  41ba8d:	daa    
  41ba8e:	push   edi
  41ba8f:	mov    ds:0xd78b5a4d,al
  41ba94:	cmp    ecx,edx
  41ba96:	cld    
  41ba97:	sbb    dl,BYTE PTR [ebx]
  41ba99:	and    eax,0x6f88b8d1
  41ba9e:	fcomp  DWORD PTR [ebx+0x2f08c2d1]
  41baa4:	xchg   ebp,eax
  41baa5:	xchg   BYTE PTR [bx+si+0x58],ch
  41baa9:	sub    al,0xaa
  41baab:	mov    ebx,?
  41baad:	out    dx,eax
  41baae:	mov    cl,0x26
  41bab0:	sbb    BYTE PTR [ecx-0x38],0x78
  41bab4:	and    eax,0x3d475738
  41bab9:	addr16 xor eax,0x36b056ff
  41babf:	mov    cl,0x2b
  41bac1:	pop    es
  41bac2:	mov    cl,0x73
  41bac4:	jmp    0x5c00:0xa9597979
  41bacb:	shl    DWORD PTR [ecx],0xc5
  41bace:	mov    ds:0xbf896dd7,al
  41bad3:	xor    DWORD PTR [ebx-0x665e4e8b],ebp
  41bad9:	mov    bl,0x14
  41badb:	and    dh,BYTE PTR [edi+0x66]
  41bade:	and    DWORD PTR [ebx+0x1d6a6027],esp
  41bae4:	dec    ebx
  41bae5:	add    DWORD PTR [ebx],edx
  41bae7:	out    0x25,eax
  41bae9:	sbb    ah,BYTE PTR [edi+0x26a988a2]
  41baef:	out    dx,al
  41baf0:	adc    ecx,DWORD PTR [ebx]
  41baf2:	pop    ecx
  41baf3:	imul   edi,DWORD PTR [ebx],0x66
  41baf6:	out    dx,eax
  41baf7:	jmp    0xc75a2926
  41bafc:	stc    
  41bafd:	inc    edi
  41bafe:	cli    
  41baff:	aam    0x88
  41bb01:	in     al,dx
  41bb02:	retf   0x44e
  41bb05:	(bad)  
  41bb06:	js     0x41bb37
  41bb08:	ja     0x41bb6f
  41bb0a:	or     eax,0xb94c95da
  41bb0f:	fs loopne 0x41bae3
  41bb12:	xchg   edi,eax
  41bb13:	xchg   ebp,eax
  41bb14:	inc    ebp
  41bb15:	or     DWORD PTR [edi+0x121dc8e2],ebp
  41bb1b:	sub    BYTE PTR [ebx],dl
  41bb1d:	jle    0x41bad7
  41bb1f:	leave  
  41bb20:	fisubr DWORD PTR [ecx]
  41bb22:	xor    DWORD PTR [edi],edx
  41bb24:	cli    
  41bb25:	je     0x41bb4f
  41bb27:	adc    eax,0x3ab177fb
  41bb2c:	fnstsw WORD PTR [ebx-0x33]
  41bb2f:	mov    ecx,0xd7f6030a
  41bb34:	xor    DWORD PTR [eax],eax
  41bb36:	in     al,dx
  41bb37:	jmp    0xba88:0x331525b1
  41bb3e:	xchg   ebx,eax
  41bb3f:	push   ds
  41bb40:	icebp  
  41bb41:	arpl   WORD PTR [eax-0x2ea7d95],cx
  41bb47:	xlat   BYTE PTR ds:[ebx]
  41bb48:	sbb    eax,0x10954bcd
  41bb4d:	jp     0x41bb8c
  41bb4f:	sub    cl,BYTE PTR [eax+0x66f9f235]
  41bb55:	push   DWORD PTR [ebx-0x40]
  41bb58:	inc    DWORD PTR [ebx-0x74d52894]
  41bb5e:	pop    esp
  41bb5f:	js     0x41bb7e
  41bb61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb62:	or     BYTE PTR [edi-0x77],dh
  41bb65:	ja     0x41bba0
  41bb67:	out    dx,al
  41bb68:	xchg   ebp,eax
  41bb69:	pop    es
  41bb6a:	shr    BYTE PTR [ebx],0x8
  41bb6d:	cmp    al,BYTE PTR [eax-0x15739029]
  41bb73:	mov    dh,0xa9
  41bb75:	jl     0x41bbd0
  41bb77:	mov    ah,0x99
  41bb79:	or     al,0x5
  41bb7b:	fmul   DWORD PTR [eax]
  41bb7d:	cwde   
  41bb7e:	ret    
  41bb7f:	ficomp DWORD PTR [esi+0x1a]
  41bb82:	dec    eax
  41bb83:	xlat   BYTE PTR ds:[ebx]
  41bb84:	sbb    dh,bl
  41bb86:	mov    ch,0x1e
  41bb88:	or     DWORD PTR [edx+0x33942507],0x694f41a8
  41bb92:	iret   
  41bb93:	sti    
  41bb94:	jp     0x41bb5d
  41bb96:	and    BYTE PTR [ebx-0x2838194c],ah
  41bb9c:	mov    bl,0xa4
  41bb9e:	js     0x41bbfb
  41bba0:	and    eax,0x88a227b0
  41bba5:	popa   
  41bba6:	sub    DWORD PTR [edx+0x16],esp
  41bba9:	jl     0x41bb99
  41bbab:	push   ecx
  41bbac:	ins    BYTE PTR es:[edi],dx
  41bbad:	addr16 cmp al,0xb0
  41bbb0:	cli    
  41bbb1:	scas   eax,DWORD PTR es:[edi]
  41bbb2:	std    
  41bbb3:	fsub   QWORD PTR [ecx]
  41bbb5:	add    al,0xa5
  41bbb7:	mov    edx,0xd707da51
  41bbbc:	mov    ah,0x5e
  41bbbe:	adc    al,BYTE PTR [ebx]
  41bbc0:	pop    ebp
  41bbc1:	cmc    
  41bbc2:	push   cs
  41bbc3:	xlat   BYTE PTR ds:[ebx]
  41bbc4:	stc    
  41bbc5:	cmp    BYTE PTR [esi+0x28],bl
  41bbc8:	jecxz  0x41bbdb
  41bbca:	loopne 0x41bb88
  41bbcc:	mov    cl,dh
  41bbce:	push   ss
  41bbcf:	in     eax,0x4c
  41bbd1:	mov    ebp,0x5b2df4ca
  41bbd6:	mov    esi,0xb14fdc7a
  41bbdb:	add    al,dh
  41bbdd:	imul   edi,ebx,0xac851c23
  41bbe3:	rol    DWORD PTR [ecx+0x14eab16a],0x1d
  41bbea:	jge    0x41bc3c
  41bbec:	(bad)  
  41bbed:	mov    fs,WORD PTR [ebp+0x55]
  41bbf0:	adc    DWORD PTR [edi+0x6e],esp
  41bbf3:	ja     0x41bc44
  41bbf5:	(bad)  
  41bbf6:	mov    DWORD PTR [ecx+0x21415227],ecx
  41bbfc:	xor    DWORD PTR [edx+0x3a],0x1a3d497
  41bc03:	test   BYTE PTR [ebp+0x78d7000d],0xad
  41bc0a:	mov    edi,0x5654235f
  41bc0f:	pop    edx
  41bc10:	mov    BYTE PTR [esi],ah
  41bc12:	mov    edi,DWORD PTR [esi+ecx*8-0x47]
  41bc16:	cs (bad) 
  41bc18:	push   edi
  41bc19:	pusha  
  41bc1a:	push   es
  41bc1b:	sti    
  41bc1c:	pop    ss
  41bc1d:	inc    eax
  41bc1e:	leave  
  41bc1f:	pop    es
  41bc20:	sub    al,0x1
  41bc22:	fnstsw WORD PTR [edx]
  41bc24:	mov    cl,dh
  41bc26:	and    ah,BYTE PTR [edi]
  41bc28:	dec    DWORD PTR [eax]
  41bc2a:	ret    0xe6c6
  41bc2d:	addr16 es dec esi
  41bc30:	mov    al,0x0
  41bc32:	call   0xbe9f:0xb27c7cca
  41bc39:	pop    esi
  41bc3a:	outs   dx,DWORD PTR ds:[esi]
  41bc3b:	scas   al,BYTE PTR es:[edi]
  41bc3c:	jge    0x41bbc5
  41bc3e:	mov    ch,0xd1
  41bc40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc41:	dec    edi
  41bc42:	mov    ah,0xc5
  41bc44:	dec    eax
  41bc45:	ins    DWORD PTR es:[edi],dx
  41bc46:	adc    ebx,DWORD PTR [ebx]
  41bc48:	jbe    0x41bc23
  41bc4a:	imul   ebx,eax,0x8293527a
  41bc50:	jmp    0xaf68:0x706fd16a
  41bc57:	inc    edi
  41bc58:	fadd   DWORD PTR [ebx]
  41bc5a:	xor    DWORD PTR [eax-0x4e0d26b5],ebx
  41bc60:	nop
  41bc61:	addr16 test al,0xd6
  41bc64:	mov    bl,BYTE PTR [edi+edx*4]
  41bc67:	push   esp
  41bc68:	inc    esi
  41bc69:	out    dx,al
  41bc6a:	mov    eax,0xb458bbf2
  41bc6f:	push   esi
  41bc70:	cmp    al,0xf8
  41bc72:	add    edi,DWORD PTR [ecx-0x18]
  41bc75:	xor    esi,esi
  41bc77:	out    dx,al
  41bc78:	outs   dx,BYTE PTR ds:[esi]
  41bc79:	(bad)  
  41bc7a:	mov    cl,0x55
  41bc7c:	xor    DWORD PTR [edi],edx
  41bc7e:	mov    esp,0xb1d49167
  41bc83:	shr    esp,1
  41bc85:	lods   al,BYTE PTR ds:[esi]
  41bc86:	sbb    al,0xc3
  41bc88:	vshufpd xmm2,xmm5,xmm7,0xd9
  41bc8d:	aad    0xd7
  41bc8f:	test   DWORD PTR [esi-0x77929f77],esp
  41bc95:	or     DWORD PTR [edx+ebp*8],eax
  41bc98:	jecxz  0x41bcf1
  41bc9a:	sbb    esi,DWORD PTR [ecx+ebp*1-0x4258399a]
  41bca1:	adc    ebx,esp
  41bca3:	cmp    BYTE PTR [ebp-0x6d2ed670],al
  41bca9:	or     esi,DWORD PTR [ecx-0x68a901f0]
  41bcaf:	inc    esp
  41bcb0:	int3   
  41bcb1:	(bad)  
  41bcb2:	(bad)  
  41bcb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcb4:	push   ecx
  41bcb5:	addr16 cmp eax,0x1ea7c4e3
  41bcbb:	jno    0x41bd02
  41bcbd:	loop   0x41bc49
  41bcbf:	leave  
  41bcc0:	cwde   
  41bcc1:	push   0x27be8ad4
  41bcc6:	out    0xbc,al
  41bcc8:	hlt    
  41bcc9:	test   DWORD PTR [ebx],0x1dbb67d6
  41bccf:	fsub   DWORD PTR [eax-0x9f8ad85]
  41bcd5:	gs mov ah,0x7
  41bcd8:	sbb    al,cl
  41bcda:	inc    eax
  41bcdb:	lea    ecx,[eax]
  41bcdd:	(bad)  
  41bcde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcdf:	sub    al,0xc3
  41bce1:	inc    ecx
  41bce2:	into   
  41bce3:	enter  0x67e9,0x72
  41bce7:	add    al,0xe9
  41bce9:	lds    esp,FWORD PTR [edi]
  41bceb:	lds    ecx,FWORD PTR [eax+0x6df851bf]
  41bcf1:	sub    al,0x89
  41bcf3:	adc    esi,DWORD PTR [edi-0x4a2cb129]
  41bcf9:	clc    
  41bcfa:	rcr    DWORD PTR [ecx-0x45],cl
  41bcfd:	out    0x9d,eax
  41bcff:	jne    0x41bd24
  41bd01:	jne    0x41bcb4
  41bd03:	push   edx
  41bd04:	xchg   DWORD PTR [eax],ebp
  41bd06:	popf   
  41bd07:	pop    esi
  41bd08:	mov    ch,bl
  41bd0a:	fwait
  41bd0b:	xlat   BYTE PTR ds:[ebx]
  41bd0c:	sbb    DWORD PTR [ecx+esi*2],edx
  41bd0f:	or     ch,BYTE PTR [esi-0x6c]
  41bd12:	jmp    0xc8bf:0x67069c84
  41bd19:	or     BYTE PTR [edx],0x30
  41bd1c:	push   esi
  41bd1d:	dec    ecx
  41bd1e:	adc    al,0xd7
  41bd20:	sub    eax,0x38ce715d
  41bd25:	or     eax,DWORD PTR [edi]
  41bd27:	int    0x88
  41bd29:	test   edx,edi
  41bd2b:	xor    DWORD PTR ds:0x5bf1c183,esp
  41bd31:	popf   
  41bd32:	inc    ecx
  41bd33:	cmp    eax,0x6f451fcc
  41bd38:	jmp    0xfa2a52a4
  41bd3d:	hlt    
  41bd3e:	sar    BYTE PTR [ebx],0xc1
  41bd41:	in     al,dx
  41bd42:	mov    dl,0xfc
  41bd44:	fistp  WORD PTR [ebx]
  41bd46:	inc    esi
  41bd47:	jo     0x41bd61
  41bd49:	cwde   
  41bd4a:	loope  0x41bd82
  41bd4c:	dec    ebx
  41bd4d:	pop    eax
  41bd4e:	jg     0x41bd27
  41bd50:	or     DWORD PTR [eax+eax*2],eax
  41bd53:	jmp    0x41bd24
  41bd55:	cdq    
  41bd56:	in     al,0xdf
  41bd58:	inc    eax
  41bd59:	aam    0xb5
  41bd5b:	sti    
  41bd5c:	sbb    DWORD PTR [esp+ebp*1],0x34
  41bd60:	dec    eax
  41bd61:	lods   eax,DWORD PTR ds:[esi]
  41bd62:	inc    ecx
  41bd63:	clc    
  41bd64:	loopne 0x41bdcd
  41bd66:	lahf   
  41bd67:	mov    edi,0xec1bdfc4
  41bd6c:	push   eax
  41bd6d:	mov    dh,0xc5
  41bd6f:	add    al,0x87
  41bd71:	scas   al,BYTE PTR es:[edi]
  41bd72:	imul   edx,DWORD PTR [ecx],0xb5f72f39
  41bd78:	sbb    cl,0x16
  41bd7b:	jmp    0xa0730cb7
  41bd80:	addr16 and ah,ah
  41bd83:	pop    edi
  41bd84:	and    al,0xec
  41bd86:	mov    cl,0xf0
  41bd88:	ficomp DWORD PTR [edx]
  41bd8a:	imul   edi,DWORD PTR [edx+ebp*1-0x422f629e],0x348c359d
  41bd95:	push   edi
  41bd96:	leave  
  41bd97:	xchg   ebp,eax
  41bd98:	jmp    0xff4:0x1796b155
  41bd9f:	mov    ebp,0xd7bb8a90
  41bda4:	test   BYTE PTR [esp+eiz*2],bh
  41bda7:	sbb    eax,0x6c546a4c
  41bdad:	mov    edx,0x797468f9
  41bdb2:	(bad)  
  41bdb3:	xor    eax,0xff7d5005
  41bdb8:	fcmovb st,st(7)
  41bdba:	cmp    al,0x85
  41bdbc:	mov    esp,DWORD PTR [edi-0x33]
  41bdbf:	lea    esp,[esi]
  41bdc1:	arpl   WORD PTR [ebp-0x75],dx
  41bdc4:	mov    edx,0xe6ab6ae
  41bdc9:	iret   
  41bdca:	push   edi
  41bdcb:	clc    
  41bdcc:	clc    
  41bdcd:	cs dec esp
  41bdcf:	mov    eax,0xcf7c788a
  41bdd4:	mov    cl,0x27
  41bdd6:	imul   DWORD PTR [esi]
  41bdd8:	pop    ds
  41bdd9:	ja     0x41bdcd
  41bddb:	push   eax
  41bddc:	mov    WORD PTR [esi+0x29c31326],fs
  41bde2:	and    eax,0xbbe481d9
  41bde7:	jns    0x41bdd1
  41bde9:	adc    al,BYTE PTR [edx+esi*2]
  41bdec:	je     0x41be26
  41bdee:	mov    cl,0xe8
  41bdf0:	cli    
  41bdf1:	add    ecx,esi
  41bdf3:	in     al,0x83
  41bdf5:	out    dx,eax
  41bdf6:	jnp    0x41bdd1
  41bdf8:	out    dx,al
  41bdf9:	pop    esp
  41bdfa:	lea    esp,[ebx-0x7f]
  41bdfd:	sub    DWORD PTR [eax-0x49],edi
  41be00:	add    eax,0x88e6761f
  41be05:	adc    dl,BYTE PTR [ebx]
  41be07:	addr16 out 0x63,al
  41be0a:	cmp    ecx,DWORD PTR [esi-0x7048960a]
  41be10:	lds    edi,FWORD PTR [ebp+0x11]
  41be13:	int3   
  41be14:	lods   eax,DWORD PTR ds:[esi]
  41be15:	dec    ebx
  41be16:	push   ss
  41be17:	mov    dh,0xfd
  41be19:	loopne 0x41bddd
  41be1b:	ror    BYTE PTR [eax-0x2f1e99b9],cl
  41be21:	fiadd  DWORD PTR [ebx+0x46]
  41be24:	lds    esp,FWORD PTR [edi-0x15]
  41be27:	icebp  
  41be28:	lahf   
  41be29:	aaa    
  41be2a:	add    eax,DWORD PTR [edx-0x1d]
  41be2d:	jg     0x41bde0
  41be2f:	fwait
  41be30:	out    0x87,eax
  41be32:	in     eax,0x4e
  41be34:	bound  edi,QWORD PTR [edx-0x4c]
  41be37:	xlat   BYTE PTR ds:[ebx]
  41be38:	sbb    BYTE PTR [esi],0x7
  41be3b:	fcomp  DWORD PTR [ebp+0x25]
  41be3e:	xor    al,0x50
  41be40:	mov    edx,0x4454aa9f
  41be45:	retf   0x5719
  41be48:	dec    edx
  41be49:	out    dx,eax
  41be4a:	and    eax,0x706490a4
  41be4f:	sub    eax,0x686a7d99
  41be54:	jo     0x41be2a
  41be56:	inc    DWORD PTR [esi-0x35453578]
  41be5c:	sbb    DWORD PTR [ebp-0x23],0x74793cde
  41be63:	sbb    edi,edi
  41be65:	pop    ecx
  41be66:	lods   al,BYTE PTR ds:[esi]
  41be67:	sahf   
  41be68:	jae    0x41be4e
  41be6a:	into   
  41be6b:	inc    esi
  41be6c:	mov    ds:0x36c11fe,eax
  41be71:	mov    al,0xb2
  41be73:	pop    ebp
  41be74:	cdq    
  41be75:	xchg   DWORD PTR [ebx+0x53c791f9],ecx
  41be7b:	out    dx,al
  41be7c:	lds    ebp,FWORD PTR [ecx-0x21]
  41be7f:	inc    eax
  41be80:	xchg   esp,eax
  41be81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be82:	xchg   ecx,eax
  41be83:	dec    ebp
  41be84:	nop
  41be85:	and    bl,BYTE PTR [ebp-0x4b4c0655]
  41be8b:	push   edx
  41be8c:	cmp    al,0xc8
  41be8e:	or     DWORD PTR [esi],eax
  41be90:	dec    eax
  41be91:	mov    al,0xa7
  41be93:	mov    ah,0x42
  41be95:	addr16 mul bh
  41be98:	rcr    BYTE PTR ds:0x95d9b5fe,0xb1
  41be9f:	leave  
  41bea0:	pop    ds
  41bea1:	std    
  41bea2:	(bad)  [ebx-0x3c]
  41bea5:	(bad)  [esi]
  41bea7:	xlat   BYTE PTR ds:[ebx]
  41bea8:	push   ecx
  41bea9:	sbb    esi,0x4c
  41beac:	(bad)  
  41bead:	nop
  41beae:	and    edi,DWORD PTR [esi-0x3796b841]
  41beb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41beb5:	push   0xfffffffa
  41beb7:	jle    0x41bedd
  41beb9:	addr16 inc edx
  41bebb:	inc    esi
  41bebc:	mov    esp,0xcad78a18
  41bec1:	jmp    0xe8db:0x8616fea1
  41bec8:	test   al,ah
  41beca:	sti    
  41becb:	sub    BYTE PTR [esi+0x56f37019],0x6b
  41bed2:	pop    ebp
  41bed3:	cmp    DWORD PTR [esi+0x19114660],esi
  41bed9:	jo     0x41beec
  41bedb:	aaa    
  41bedc:	jmp    0x41bf3e
  41bede:	test   DWORD PTR [edi+0x5745c987],ebx
  41bee4:	fs sti 
  41bee6:	cmp    eax,ebx
  41bee8:	imul   esp,edi,0x67de9771
  41beee:	adc    BYTE PTR [ecx+eax*4+0x3e277050],0x79
  41bef6:	mov    cl,0xe7
  41bef8:	add    eax,0x62fc4c39
  41befd:	jg     0x41bf19
  41beff:	(bad)  
  41bf00:	dec    ebp
  41bf01:	stos   DWORD PTR es:[edi],eax
  41bf02:	sbb    ebx,esp
  41bf04:	sbb    BYTE PTR [ebx],bh
  41bf06:	mov    ds:0xc3a96317,eax
  41bf0b:	adc    eax,0x23f03c88
  41bf10:	rol    DWORD PTR [ebx+0x67750f7d],0xe3
  41bf17:	mov    al,BYTE PTR [ebx]
  41bf19:	mov    esi,0x7dccf5
  41bf1e:	lea    esp,[edi-0x39f6985f]
  41bf24:	mov    bl,0x27
  41bf26:	add    bl,BYTE PTR [edi]
  41bf28:	mov    dl,0x57
  41bf2a:	dec    esp
  41bf2b:	jae    0x41bf59
  41bf2d:	mov    es,ebp
  41bf2f:	aad    0x81
  41bf31:	out    0xa,eax
  41bf33:	adc    DWORD PTR [eax-0x2728ea0],edx
  41bf39:	pop    ds
  41bf3a:	fcmovbe st,st(7)
  41bf3c:	jmp    0xfacb6aba
  41bf41:	rol    BYTE PTR ds:0xcdc68885,0x8
  41bf48:	jecxz  0x41bf85
  41bf4a:	pop    ebx
  41bf4b:	push   ebx
  41bf4c:	sbb    BYTE PTR [edi-0xc],0x44
  41bf50:	test   DWORD PTR [esi+0x7a],ecx
  41bf53:	(bad)  
  41bf54:	std    
  41bf55:	scas   al,BYTE PTR es:[edi]
  41bf56:	pusha  
  41bf57:	aas    
  41bf58:	xchg   ebp,eax
  41bf59:	mov    dl,0x62
  41bf5b:	daa    
  41bf5c:	inc    esi
  41bf5d:	int    0x8f
  41bf5f:	push   edx
  41bf60:	outs   dx,DWORD PTR ds:[esi]
  41bf61:	cmp    ebx,DWORD PTR [eax]
  41bf63:	xlat   BYTE PTR ds:[ebx]
  41bf64:	aas    
  41bf65:	(bad)  
  41bf67:	or     edi,DWORD PTR [esi]
  41bf69:	ret    0xeff7
  41bf6c:	cmp    al,0xa3
  41bf6e:	mov    cl,0x51
  41bf70:	mov    ch,0x6d
  41bf72:	mov    ebp,0xb15c6c59
  41bf77:	mov    ds:0x426e896,al
  41bf7c:	fdivr  st,st(7)
  41bf7e:	nop
  41bf7f:	xlat   BYTE PTR ds:[ebx]
  41bf80:	aad    0x7b
  41bf82:	lea    esi,[ecx]
  41bf84:	fmulp  st(6),st
  41bf86:	mov    al,ds:0x748887c4
  41bf8b:	sbb    eax,DWORD PTR [edi-0x47d62a5a]
  41bf91:	std    
  41bf92:	loope  0x41bf68
  41bf94:	xor    ch,dl
  41bf96:	pop    edi
  41bf97:	mov    ds:0x7a09d2cf,eax
  41bf9c:	sub    BYTE PTR [bx+di+0x5e5],dh
  41bfa1:	lock jg 0x41bfae
  41bfa4:	shl    BYTE PTR [ebp-0x3d],0xd7
  41bfa8:	sahf   
  41bfa9:	adc    ebx,esp
  41bfab:	adc    bh,bl
  41bfad:	xchg   ebx,eax
  41bfae:	add    BYTE PTR ds:0xb4b11e7c,ah
  41bfb4:	sbb    cl,ah
  41bfb6:	push   ds
  41bfb7:	mov    cl,0x7b
  41bfb9:	xchg   ecx,eax
  41bfba:	imul   DWORD PTR [edx-0x3fe98db]
  41bfc0:	clc    
  41bfc1:	sbb    DWORD PTR [esi+0x16],0xffffff81
  41bfc5:	test   eax,0xa3069b2
  41bfca:	sub    cl,BYTE PTR [eax+0x4202f80c]
  41bfd0:	scas   ax,WORD PTR es:[edi]
  41bfd2:	push   esi
  41bfd3:	pop    es
  41bfd4:	add    al,0x64
  41bfd6:	jecxz  0x41bfd0
  41bfd8:	add    ebx,DWORD PTR [esi+0x5b]
  41bfdb:	retf   
  41bfdc:	sub    dl,dl
  41bfde:	setae  BYTE PTR [eax-0x6abf53cf]
  41bfe5:	mov    ch,0x33
  41bfe7:	leave  
  41bfe8:	ss adc dl,cl
  41bfeb:	xlat   BYTE PTR ds:[ebx]
  41bfec:	shl    DWORD PTR [edx-0x5f2503dc],0xdd
  41bff3:	iret   
  41bff4:	mov    BYTE PTR [eax],dh
  41bff6:	jmp    0x41bfdc
  41bff8:	or     dl,BYTE PTR [eax-0x54]
  41bffb:	retf   
  41bffc:	add    BYTE PTR [eax-0x72],ch
  41bfff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c000:	aad    0xc4
  41c002:	jnp    0x41c053
  41c004:	xchg   esp,eax
  41c005:	test   al,0x43
  41c007:	mov    dh,0x88
  41c009:	stos   BYTE PTR es:[edi],al
  41c00a:	cmp    ch,BYTE PTR [eax]
  41c00c:	push   ecx
  41c00d:	and    BYTE PTR [ecx-0x13],bh
  41c010:	jmp    0xb67:0x96cc0bc7
  41c017:	dec    esi
  41c018:	ret    
  41c019:	enter  0x8960,0x68
  41c01d:	lods   eax,DWORD PTR ds:[esi]
  41c01e:	mov    cl,0x2e
  41c020:	cs mov dl,0x7c
  41c023:	adc    ebx,DWORD PTR [edx+ebp*8]
  41c026:	push   esi
  41c027:	ror    BYTE PTR ds:0xffc34532,cl
  41c02d:	fdiv   QWORD PTR [ecx-0x6e1186f0]
  41c033:	repz dec edi
  41c035:	sbb    DWORD PTR [esi-0x6dc4ac2a],edi
  41c03b:	loope  0x41c02b
  41c03d:	in     eax,dx
  41c03e:	fst    QWORD PTR [ebx]
  41c040:	rol    DWORD PTR [eax],0xb1
  41c043:	mov    eax,ebx
  41c045:	sbb    eax,0x4664cbc3
  41c04a:	mov    ecx,0xcf5e0dd6
  41c04f:	retf   0xc342
  41c052:	push   ds
  41c053:	out    0xa3,eax
  41c055:	es mov cl,0x35
  41c058:	add    DWORD PTR [edi-0x48],0xfffffff4
  41c05c:	in     eax,dx
  41c05d:	add    BYTE PTR [edi],0xd7
  41c060:	or     dh,BYTE PTR [edi+0xe]
  41c063:	xor    al,0x78
  41c065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c066:	pusha  
  41c067:	jns    0x41c003
  41c069:	add    BYTE PTR [esi-0x3c],bh
  41c06c:	pop    ecx
  41c06d:	adc    BYTE PTR [ecx+0x3c940d37],dh
  41c073:	sub    bl,BYTE PTR [ebx-0x17f0ee99]
  41c079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c07a:	sub    al,0xd5
  41c07c:	nop
  41c07d:	js     0x41c030
  41c07f:	test   al,0x3f
  41c081:	lods   al,BYTE PTR ds:[esi]
  41c082:	out    dx,al
  41c083:	inc    edx
  41c084:	icebp  
  41c085:	outs   dx,BYTE PTR ds:[esi]
  41c086:	sbb    bh,dl
  41c088:	sub    BYTE PTR [ebx+0x37eb0e2f],ah
  41c08e:	enter  0x8a9d,0xc9
  41c092:	pop    ebx
  41c093:	dec    eax
  41c094:	xchg   edi,eax
  41c095:	pop    es
  41c096:	popf   
  41c097:	loop   0x41c0bd
  41c099:	cmp    BYTE PTR [esi+edx*8-0x35],0xe9
  41c09e:	test   eax,0x8d3ede8a
  41c0a3:	and    ebp,DWORD PTR [ebx-0x77ba3ad7]
  41c0a9:	cld    
  41c0aa:	dec    esp
  41c0ab:	jge    0x41c053
  41c0ad:	or     DWORD PTR [ecx],edx
  41c0af:	in     al,0x66
  41c0b1:	addr16 jmp 0x41c0c5
  41c0b4:	pop    ss
  41c0b5:	dec    ebp
  41c0b6:	pop    esi
  41c0b7:	sbb    BYTE PTR [esi-0x7d],dh
  41c0ba:	mov    dh,0xc1
  41c0bc:	sbb    edx,DWORD PTR [ebp+0x1f]
  41c0bf:	stos   BYTE PTR es:[edi],al
  41c0c0:	shr    DWORD PTR gs:[ecx],0xa
  41c0c4:	dec    eax
  41c0c5:	xlat   BYTE PTR ds:[ebx]
  41c0c6:	lods   al,BYTE PTR ds:[esi]
  41c0c7:	out    0x4d,eax
  41c0c9:	addr16 and eax,0x4d771120
  41c0cf:	mov    edx,0x9012a5b
  41c0d4:	test   DWORD PTR [edx+0x23],esi
  41c0d7:	adc    eax,0x1f43b330
  41c0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0dd:	js     0x41c06f
  41c0df:	xlat   BYTE PTR ds:[ebx]
  41c0e0:	dec    esp
  41c0e1:	pop    ds
  41c0e2:	imul   ebx,DWORD PTR [esi+0xe8f0e0e],0x767cc728
  41c0ec:	lods   al,BYTE PTR ds:[esi]
  41c0ed:	sti    
  41c0ee:	and    DWORD PTR [eax+ecx*4-0x26],0xffffff95
  41c0f3:	dec    esp
  41c0f4:	sar    BYTE PTR [edi-0x688f28c3],cl
  41c0fa:	pop    es
  41c0fb:	jns    0x41c0f6
  41c0fd:	push   edi
  41c0fe:	xlat   BYTE PTR ds:[ebx]
  41c0ff:	jo     0x41c0fa
  41c101:	sbb    al,0xb6
  41c103:	shl    BYTE PTR [esi+0x28241b13],cl
  41c109:	imul   esi
  41c10b:	add    al,BYTE PTR [ebx+0x67]
  41c10e:	(bad)  
  41c10f:	mov    eax,ds:0xe277b8ed
  41c114:	xchg   edi,eax
  41c115:	adc    bh,BYTE PTR [edx-0x20b28518]
  41c11b:	pop    eax
  41c11c:	loop   0x41c0a5
  41c11e:	mov    edi,0x31744ef1
  41c123:	xlat   BYTE PTR ds:[ebx]
  41c124:	ins    BYTE PTR es:[edi],dx
  41c125:	clc    
  41c126:	ret    
  41c127:	jbe    0x41c190
  41c129:	adc    BYTE PTR [edx-0x60f24296],ch
  41c12f:	push   edi
  41c130:	pop    ss
  41c131:	mov    bl,0xcc
  41c133:	pop    edx
  41c134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c135:	mov    esi,0xe5f4d7de
  41c13a:	sbb    esp,DWORD PTR [ebp+0x3cb9871a]
  41c140:	mov    BYTE PTR [edx],ch
  41c142:	enter  0x14e0,0x7d
  41c146:	in     al,0xc5
  41c148:	pop    es
  41c149:	addr16 and al,0x59
  41c14c:	(bad)  
  41c14d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c14e:	test   eax,0xb1d79bd8
  41c153:	rcl    DWORD PTR [ebx+0x17],cl
  41c156:	scas   al,BYTE PTR es:[edi]
  41c157:	jp     0x41c142
  41c159:	or     DWORD PTR [edi-0x11],esi
  41c15c:	push   eax
  41c15d:	cld    
  41c15e:	xor    ebp,ecx
  41c160:	xor    al,0xc6
  41c162:	fwait
  41c163:	sub    eax,0x2cbbc794
  41c168:	sub    cl,BYTE PTR [edx-0x38]
  41c16b:	jne    0x41c0f5
  41c16d:	clc    
  41c16e:	inc    ebp
  41c16f:	mov    ebp,ebx
  41c171:	or     edi,esi
  41c173:	xlat   BYTE PTR ds:[ebx]
  41c174:	or     eax,0x6e54a76f
  41c179:	mov    esi,0x7288adf6
  41c17e:	bnd jb 0x41c1f9
  41c181:	mov    ds:0x67a04eb6,eax
  41c186:	mov    ebx,0x4c4f1825
  41c18b:	sbb    eax,ebp
  41c18d:	dec    eax
  41c18e:	mov    cl,0xca
  41c190:	jmp    0x4c23241c
  41c195:	cmp    bl,cl
  41c197:	jmp    0x41c1be
  41c199:	jle    0x41c1cc
  41c19b:	cdq    
  41c19c:	arpl   bp,bx
  41c19e:	sub    ebp,ebx
  41c1a0:	mov    esp,0x8747b1f6
  41c1a5:	xchg   edi,eax
  41c1a6:	jle    0x41c1e1
  41c1a8:	popf   
  41c1a9:	scas   eax,DWORD PTR es:[edi]
  41c1aa:	push   0xffffffd7
  41c1ac:	jno    0x41c18f
  41c1ae:	in     al,dx
  41c1af:	xor    al,0xa5
  41c1b1:	sub    eax,edx
  41c1b3:	sub    eax,0x572cf7bf
  41c1b8:	out    dx,al
  41c1b9:	fiadd  DWORD PTR [ebx-0x3358643f]
  41c1bf:	(bad)  
  41c1c0:	mov    edi,0xada50d59
  41c1c5:	dec    ebp
  41c1c6:	sbb    BYTE PTR [esi],ah
  41c1c8:	jmp    0x41c1d1
  41c1ca:	div    BYTE PTR [edi+0x4a114e88]
  41c1d0:	loope  0x41c176
  41c1d2:	mov    al,0xd8
  41c1d4:	retf   
  41c1d5:	jnp    0x41c256
  41c1d7:	jp     0x41c191
  41c1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1da:	div    ch
  41c1dc:	add    edx,DWORD PTR [ecx]
  41c1de:	push   edx
  41c1df:	imul   esi,DWORD PTR [eax+0x3d],0xffffffb1
  41c1e3:	ret    
  41c1e4:	jmp    0x5d13:0xc6d53f87
  41c1eb:	in     eax,dx
  41c1ec:	in     al,dx
  41c1ed:	pusha  
  41c1ee:	mov    cl,0x75
  41c1f0:	jbe    0x41c253
  41c1f2:	outs   dx,DWORD PTR ds:[esi]
  41c1f3:	pop    edx
  41c1f4:	dec    eax
  41c1f5:	xor    BYTE PTR [ecx+0x595d6772],0x98
  41c1fc:	mov    ecx,0xf0d79c98
  41c201:	arpl   WORD PTR [ecx],bp
  41c203:	imul   esi,DWORD PTR [ebx-0x77b7e660],0xffffffd4
  41c20a:	inc    ebp
  41c20b:	push   ebp
  41c20c:	in     eax,0x65
  41c20e:	xlat   BYTE PTR ds:[ebx]
  41c20f:	dec    edx
  41c210:	enter  0x8f78,0xd
  41c214:	call   0xb744:0xb97c1527
  41c21b:	pop    esp
  41c21c:	or     cl,0x8b
  41c21f:	stos   DWORD PTR es:[edi],eax
  41c220:	add    eax,0xe0b57560
  41c225:	cdq    
  41c226:	jno    0x41c1ac
  41c228:	in     al,0x71
  41c22a:	in     al,dx
  41c22b:	leave  
  41c22c:	cmovl  eax,ebp
  41c22f:	push   eax
  41c230:	aam    0xda
  41c232:	push   esi
  41c233:	sub    DWORD PTR [eax-0x2e],ebp
  41c236:	and    DWORD PTR [eax-0x3e4e6567],esp
  41c23c:	push   es
  41c23d:	aam    0x96
  41c23f:	push   0xd871194a
  41c244:	xchg   ah,al
  41c246:	jb     0x41c1e1
  41c248:	dec    eax
  41c249:	sar    DWORD PTR [eax+0x46],0x3c
  41c24d:	ja     0x41c200
  41c24f:	(bad)  
  41c251:	cmp    al,0x4d
  41c253:	or     ebx,esp
  41c255:	dec    ecx
  41c256:	in     eax,0xd7
  41c258:	sbb    eax,0x50683303
  41c25d:	xchg   ebp,eax
  41c25e:	jne    0x41c280
  41c260:	mov    BYTE PTR [ecx*1+0x6f2c7515],dh
  41c267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c268:	mov    fs,WORD PTR [edi+0x74]
  41c26b:	cmp    BYTE PTR [edi-0x217bfb5],dh
  41c271:	popa   
  41c272:	mov    cl,0x3d
  41c274:	xchg   esi,eax
  41c275:	cdq    
  41c276:	push   eax
  41c277:	add    al,0xc6
  41c279:	rcr    BYTE PTR [ebx],0xd4
  41c27c:	add    eax,0xeff0e80
  41c281:	sub    DWORD PTR ss:[ebx],eax
  41c284:	popf   
  41c285:	push   ebx
  41c286:	mov    cl,0x58
  41c288:	fs cld 
  41c28a:	cwde   
  41c28b:	fwait
  41c28c:	hlt    
  41c28d:	dec    ecx
  41c28e:	xchg   eax,ecx
  41c290:	icebp  
  41c291:	popf   
  41c292:	and    dl,BYTE PTR [edi+0x62]
  41c295:	mov    cl,0x97
  41c297:	mov    eax,ds:0x52d1e5e1
  41c29c:	mov    dl,BYTE PTR [ecx+0x67206a6e]
  41c2a2:	pushf  
  41c2a3:	add    eax,0x818c1829
  41c2a8:	outs   dx,DWORD PTR ds:[esi]
  41c2a9:	dec    ecx
  41c2aa:	scas   al,BYTE PTR es:[edi]
  41c2ab:	jp     0x41c278
  41c2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2ae:	mov    cl,0xbd
  41c2b0:	cmp    al,0xd8
  41c2b2:	push   edi
  41c2b3:	leave  
  41c2b4:	xchg   BYTE PTR [esi+0x9],bl
  41c2b7:	sub    ebp,DWORD PTR [edx]
  41c2b9:	fnstsw WORD PTR [ecx-0x29]
  41c2bc:	dec    edx
  41c2bd:	mov    ds:0xbac7dd7b,al
  41c2c2:	lods   eax,DWORD PTR ds:[esi]
  41c2c3:	xor    esp,DWORD PTR [ebp+0x48]
  41c2c6:	mov    cl,0x78
  41c2c8:	ins    DWORD PTR es:[edi],dx
  41c2c9:	inc    esi
  41c2ca:	sub    bh,dl
  41c2cc:	packuswb mm4,QWORD PTR [esi-0x41]
  41c2d0:	call   0xb599f5f3
  41c2d5:	jecxz  0x41c288
  41c2d7:	push   esp
  41c2d8:	loop   0x41c293
  41c2da:	stos   DWORD PTR es:[edi],eax
  41c2db:	inc    ebp
  41c2dc:	mov    esp,0xfd78c71
  41c2e1:	loop   0x41c27b
  41c2e3:	fdivr  st(7),st
  41c2e5:	mov    WORD PTR [edx],ds
  41c2e7:	xor    bh,BYTE PTR [eax+edx*2-0xf2928a4]
  41c2ee:	gs mov bl,0xca
  41c2f1:	cwde   
  41c2f2:	arpl   cx,bx
  41c2f4:	and    eax,0x28c3b62c
  41c2f9:	inc    edi
  41c2fa:	out    0x13,eax
  41c2fc:	xchg   esi,eax
  41c2fd:	(bad)  
  41c2fe:	mov    dh,0x48
  41c300:	(bad)  
  41c302:	or     BYTE PTR [esi-0x7b],bl
  41c305:	(bad)  
  41c306:	sbb    BYTE PTR [edi],al
  41c308:	sbb    BYTE PTR [ebx+0x4],ah
  41c30b:	lahf   
  41c30c:	jecxz  0x41c331
  41c30e:	ret    0x28c9
  41c311:	shl    ecx,cl
  41c313:	pop    ss
  41c314:	test   DWORD PTR [ecx],ecx
  41c316:	addr16 clc 
  41c318:	fsubr  DWORD PTR [ebx-0x7e765e4f]
  41c31e:	fld    TBYTE PTR ds:0xd73f8eae
  41c324:	sbb    DWORD PTR [ebx],ebp
  41c326:	xchg   DWORD PTR [eax+0x1b],ebx
  41c329:	and    eax,0xa386547e
  41c32e:	int3   
  41c32f:	xchg   edx,eax
  41c330:	and    bh,BYTE PTR [edx-0x51]
  41c333:	push   edi
  41c334:	add    eax,DWORD PTR [edi+0x1b6b44fc]
  41c33a:	xlat   BYTE PTR ds:[ebx]
  41c33b:	(bad)  
  41c33c:	in     eax,0x23
  41c33e:	jb     0x41c32f
  41c340:	ins    DWORD PTR es:[edi],dx
  41c341:	jne    0x41c3b9
  41c343:	and    edx,ebx
  41c345:	sub    esi,DWORD PTR [ecx-0x3ca444ab]
  41c34b:	je     0x41c310
  41c34d:	dec    ecx
  41c34e:	jp     0x41c327
  41c350:	push   eax
  41c351:	jno    0x41c2da
  41c353:	mov    ds:0x2625c87b,eax
  41c358:	mov    BYTE PTR [eax],bl
  41c35a:	(bad)  
  41c35b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c35d:	std    
  41c35e:	jb     0x41c2e1
  41c360:	fs gs jo 0x41c3d9
  41c364:	pop    ss
  41c365:	mov    ebx,0x3ec82ee2
  41c36a:	imul   esi,DWORD PTR [edi+eax*4+0x1b63a120],0x706afdec
  41c375:	or     bl,al
  41c377:	xlat   BYTE PTR ds:[ebx]
  41c378:	xor    ch,BYTE PTR [ecx+edi*4]
  41c37b:	jae    0x41c35b
  41c37d:	cmc    
  41c37e:	add    cl,BYTE PTR [ebx+edi*4]
  41c381:	(bad)  
  41c382:	xchg   esp,eax
  41c383:	xlat   BYTE PTR ds:[ebx]
  41c384:	shl    BYTE PTR [ecx+0x57e53b53],cl
  41c38a:	sbb    edx,edi
  41c38c:	lods   al,BYTE PTR ds:[esi]
  41c38d:	or     DWORD PTR [ecx],esi
  41c38f:	retf   0x9ad3
  41c392:	(bad)  
  41c393:	cli    
  41c394:	mov    ch,0xb
  41c396:	je     0x41c31d
  41c398:	mov    bh,0xc4
  41c39a:	mov    al,0x17
  41c39c:	push   edi
  41c39d:	in     al,0x3d
  41c39f:	in     eax,dx
  41c3a0:	add    bh,ah
  41c3a2:	xor    DWORD PTR [esi],esi
  41c3a4:	aad    0x13
  41c3a6:	and    BYTE PTR [esi],0xe7
  41c3a9:	ins    BYTE PTR es:[edi],dx
  41c3aa:	mov    esi,0xea6f2bbf
  41c3af:	cwde   
  41c3b0:	xrelease xchg DWORD PTR [esi-0x64],ecx
  41c3b4:	inc    ecx
  41c3b5:	mov    ds:0xaa13c93c,al
  41c3ba:	sub    edx,DWORD PTR [edi+0x203d25fb]
  41c3c0:	inc    ebp
  41c3c1:	mov    al,0xb1
  41c3c3:	fsubr  QWORD PTR [esi+0x616b1759]
  41c3c9:	data16 and dl,al
  41c3cc:	ins    DWORD PTR es:[edi],dx
  41c3cd:	inc    eax
  41c3ce:	not    BYTE PTR [edx+0x7851a954]
  41c3d4:	aam    0xb5
  41c3d6:	mov    es,WORD PTR [ecx]
  41c3d8:	mov    BYTE PTR [ebp-0x7e4d3a24],ch
  41c3de:	dec    edi
  41c3df:	cmp    ecx,edx
  41c3e1:	pusha  
  41c3e2:	sub    DWORD PTR [ebx],ecx
  41c3e4:	push   ebx
  41c3e5:	jmp    0x2e:0x5416d68b
  41c3ec:	sub    BYTE PTR [edx+ecx*1+0x58],ah
  41c3f0:	cmp    DWORD PTR [ebx+ebx*1+0xa],0x13
  41c3f5:	in     al,0x32
  41c3f7:	lds    edi,FWORD PTR [esi+eiz*8-0x649f5efd]
  41c3fe:	cs aam 0xec
  41c401:	retf   
  41c402:	sub    al,0xfb
  41c404:	and    ecx,DWORD PTR [ebp+0x31]
  41c407:	sub    BYTE PTR [eax],dl
  41c409:	cld    
  41c40a:	mov    cl,0x82
  41c40c:	les    edi,FWORD PTR ds:0x589247e3
  41c412:	or     dl,dh
  41c414:	jecxz  0x41c3d6
  41c416:	xor    esp,edi
  41c418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c419:	jle    0x41c459
  41c41b:	test   edx,0x49c0b13a
  41c421:	push   ecx
  41c422:	lods   al,BYTE PTR ds:[esi]
  41c423:	add    bh,bh
  41c425:	pop    es
  41c426:	sbb    eax,ebx
  41c428:	aam    0x18
  41c42a:	adc    cl,BYTE PTR [ecx]
  41c42c:	and    eax,0x6888a7fd
  41c431:	and    dl,BYTE PTR [esi-0x28]
  41c434:	mov    BYTE PTR [ebx],bh
  41c436:	ja     0x41c3c5
  41c438:	test   BYTE PTR [ebp+0x677e5610],0x68
  41c43f:	mov    ch,0x1e
  41c441:	ins    DWORD PTR es:[edi],dx
  41c442:	daa    
  41c443:	or     al,ch
  41c445:	mov    esi,DWORD PTR [eax+0x36d8629d]
  41c44b:	(bad)  
  41c44e:	push   ecx
  41c44f:	sbb    BYTE PTR [ecx-0xc289d21],dh
  41c455:	push   ss
  41c456:	ja     0x41c4b3
  41c458:	in     eax,dx
  41c459:	jns    0x41c3e3
  41c45b:	jb     0x41c3e2
  41c45d:	rcr    DWORD PTR [edi+edx*2+0x7f],0xed
  41c462:	add    dl,BYTE PTR [edx+0x48]
  41c465:	aaa    
  41c466:	lods   al,BYTE PTR ds:[esi]
  41c467:	or     BYTE PTR [edi+0x65],0xae
  41c46b:	mov    eax,ds:0xc7c201b9
  41c470:	push   0xf19d76f4
  41c475:	fwait
  41c476:	lods   eax,DWORD PTR ds:[esi]
  41c477:	ret    0x8927
  41c47a:	mov    dh,0x31
  41c47c:	rcl    BYTE PTR [ecx],1
  41c47e:	jno    0x41c45a
  41c480:	inc    edx
  41c481:	mov    al,ah
  41c483:	rcl    DWORD PTR [edx-0x30],cl
  41c486:	dec    ebp
  41c487:	sub    al,0xda
  41c489:	out    0x6b,eax
  41c48b:	mov    bl,0x11
  41c48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c48e:	mov    cl,0x22
  41c490:	cs (bad) 
  41c492:	mov    ch,0xc0
  41c494:	sbb    ah,dh
  41c496:	push   ds
  41c497:	mov    bh,0x42
  41c499:	adc    esp,ecx
  41c49b:	mov    al,0xd5
  41c49d:	sbb    eax,0x2e0875b1
  41c4a2:	hlt    
  41c4a3:	call   DWORD PTR [esi]
  41c4a5:	into   
  41c4a6:	xlat   BYTE PTR fs:[ebx]
  41c4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4a9:	mov    ds:0xcf01db00,al
  41c4ae:	stc    
  41c4af:	pusha  
  41c4b0:	xchg   BYTE PTR [ecx],dh
  41c4b2:	scas   eax,DWORD PTR es:[edi]
  41c4b3:	repnz mov ds:0x97178bcb,al
  41c4b9:	jmp    0x3edf9c10
  41c4be:	lods   al,BYTE PTR ds:[esi]
  41c4bf:	push   ds
  41c4c0:	jmp    0x41c4d3
  41c4c2:	dec    ebx
  41c4c3:	and    ah,BYTE PTR [eax]
  41c4c5:	mov    esi,0x33bc17b1
  41c4ca:	(bad)  
  41c4cb:	mov    al,ds:0xd7fbd24a
  41c4d0:	push   ss
  41c4d1:	push   edx
  41c4d2:	out    0x14,eax
  41c4d4:	add    bl,BYTE PTR [edi+edi*1-0x3ca27779]
  41c4db:	push   esp
  41c4dc:	xchg   edx,eax
  41c4dd:	daa    
  41c4de:	in     eax,dx
  41c4df:	mov    esp,0xd7108778
  41c4e4:	dec    eax
  41c4e5:	mov    fs,WORD PTR [ebx+0x95361fb]
  41c4eb:	mov    edi,0xb065ef88
  41c4f0:	int3   
  41c4f1:	cmp    BYTE PTR [eax],dh
  41c4f3:	addr16 out 0x78,eax
  41c4f6:	es sbb esp,esp
  41c4f9:	arpl   WORD PTR [ecx],dx
  41c4fb:	aam    0x49
  41c4fd:	out    0x17,eax
  41c4ff:	jne    0x41c4ce
  41c501:	sbb    DWORD PTR [ecx-0x64598382],esi
  41c507:	push   ebx
  41c508:	pop    esp
  41c509:	call   0x5e9:0x6a29d77a
  41c510:	mov    ebx,0xb9a6ddc9
  41c515:	and    dh,BYTE PTR [ebp+0x3f0cb2d6]
  41c51b:	ins    DWORD PTR es:[edi],dx
  41c51c:	mov    bl,0x5
  41c51e:	ins    DWORD PTR es:[edi],dx
  41c51f:	jb     0x41c57a
  41c521:	mov    BYTE PTR [di],al
  41c524:	pushf  
  41c525:	loope  0x41c570
  41c527:	jnp    0x41c526
  41c529:	scas   al,BYTE PTR es:[edi]
  41c52a:	mov    cl,0x67
  41c52c:	js     0x41c4f7
  41c52e:	test   ah,ah
  41c530:	scas   al,BYTE PTR es:[edi]
  41c531:	sub    DWORD PTR ds:0x6ba24dd7,eax
  41c537:	mov    eax,edi
  41c539:	cwde   
  41c53a:	xchg   ecx,eax
  41c53b:	mov    al,ds:0x5e23688
  41c540:	outs   dx,DWORD PTR ds:[esi]
  41c541:	mov    ah,ah
  41c543:	mov    ds:0xcb1b67a4,al
  41c548:	and    eax,0xa84c5083
  41c54d:	loopne 0x41c500
  41c54f:	or     eax,0xbd028ce8
  41c554:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41c556:	test   esi,ebp
  41c558:	mov    ebx,0xc4ab102
  41c55d:	daa    
  41c55e:	push   es
  41c55f:	ret    
  41c560:	aaa    
  41c561:	lods   al,BYTE PTR cs:[esi]
  41c563:	jmp    0x68c0fd55
  41c568:	call   0x7ad80eb4
  41c56d:	adc    eax,DWORD PTR [eax-0x55433728]
  41c573:	inc    esi
  41c574:	inc    ecx
  41c575:	mov    edi,0xfca6a729
  41c57a:	test   DWORD PTR [esi-0x348ffe78],ebp
  41c580:	or     esi,DWORD PTR [edx+0x78]
  41c583:	pop    ebp
  41c584:	imul   BYTE PTR [ecx+0x23]
  41c587:	mov    al,0xeb
  41c589:	leave  
  41c58a:	jno    0x41c5de
  41c58c:	jmp    0x8892ee79
  41c591:	sbb    al,0xc1
  41c593:	bound  esi,QWORD PTR [edi]
  41c595:	xor    al,0x32
  41c597:	mov    ecx,0x3ea378e0
  41c59c:	jb     0x41c5ad
  41c59e:	and    eax,0x4a9662d8
  41c5a3:	ret    0x5c29
  41c5a6:	fisub  WORD PTR [edi]
  41c5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5a9:	xchg   esp,eax
  41c5aa:	or     DWORD PTR [ebx+edx*1-0x65],esi
  41c5ae:	mov    DWORD PTR [eax],ebp
  41c5b0:	mov    BYTE PTR [esi],ch
  41c5b2:	mul    ebx
  41c5b4:	pop    esp
  41c5b5:	sub    dh,ah
  41c5b7:	out    0x8c,al
  41c5b9:	or     ecx,DWORD PTR [bx+di-0x1443]
  41c5be:	jl     0x41c5d9
  41c5c0:	addr16 pop ds
  41c5c2:	mov    cl,0x6
  41c5c4:	stos   BYTE PTR es:[edi],al
  41c5c5:	shr    DWORD PTR [ecx+0x37],cl
  41c5c8:	and    esp,ecx
  41c5ca:	ret    0x12d0
  41c5cd:	add    al,0x65
  41c5cf:	addr16 pop ss
  41c5d1:	aaa    
  41c5d2:	mov    ds:0xb12b943f,al
  41c5d7:	push   ebx
  41c5d8:	or     ch,BYTE PTR [edx]
  41c5da:	push   cs
  41c5db:	mov    al,ds:0xd7125b7f
  41c5e0:	imul   ebx,DWORD PTR ds:0xf95d67ca,0xffffffe8
  41c5e7:	loop   0x41c571
  41c5e9:	in     al,0x21
  41c5eb:	sbb    BYTE PTR [ebx-0x444a74a0],ch
  41c5f1:	sbb    edi,DWORD PTR [edi]
  41c5f3:	jmp    0x41c61c
  41c5f5:	add    DWORD PTR ds:0x4567cf90,ebp
  41c5fb:	lds    eax,FWORD PTR ds:0x884d1f02
  41c601:	cmc    
  41c602:	dec    esi
  41c603:	loop   0x41c5f5
  41c605:	cld    
  41c606:	loope  0x41c59b
  41c608:	xchg   DWORD PTR [edi+0x33],esp
  41c60b:	xor    ebp,DWORD PTR [ecx]
  41c60d:	pop    ss
  41c60e:	mov    ecx,0x53c9d022
  41c613:	jmp    0xd7947d2b
  41c618:	call   0x34f:0xa0bd07e6
  41c61f:	dec    esp
  41c620:	int3   
  41c621:	push   es
  41c622:	and    eax,0xa671fea
  41c627:	jno    0x41c672
  41c629:	test   BYTE PTR [edi+edi*1+0x59ea6818],ch
  41c630:	push   esp
  41c631:	xchg   edi,eax
  41c632:	mov    cl,0x5
  41c634:	sbb    dh,BYTE PTR [eax-0x75]
  41c637:	add    BYTE PTR [edi+0x139a9457],0xa1
  41c63e:	lock xchg BYTE PTR [edi+edi*2-0x80],ah
  41c643:	xlat   BYTE PTR ds:[ebx]
  41c644:	cmp    DWORD PTR [ecx-0x29],edx
  41c647:	dec    ebx
  41c648:	sbb    esp,DWORD PTR [esp+ebx*1+0x8]
  41c64c:	mov    bl,ch
  41c64e:	jbe    0x41c683
  41c650:	lea    bx,[ebx-0x35a5e9d0]
  41c657:	sbb    ebp,DWORD PTR [edx]
  41c659:	jmp    0x31e79de9
  41c65e:	inc    ecx
  41c65f:	lods   eax,DWORD PTR ds:[esi]
  41c660:	mov    ds:0xc27ab6b6,eax
  41c665:	out    0xf4,al
  41c667:	retf   
  41c668:	fsubr  st,st(6)
  41c66a:	ss add ch,al
  41c66d:	sbb    ebx,edi
  41c66f:	addr16 jnp 0x41c6d9
  41c672:	push   ss
  41c673:	push   ebx
  41c674:	fwait
  41c675:	fwait
  41c676:	add    eax,0xb0698455
  41c67b:	and    ch,BYTE PTR [edx]
  41c67d:	das    
  41c67e:	and    eax,0x5d95e802
  41c683:	aaa    
  41c684:	iret   
  41c685:	pop    ds
  41c686:	mov    ds:0xab4aa0d7,eax
  41c68b:	inc    edx
  41c68c:	fadd   DWORD PTR [edx]
  41c68e:	push   ebp
  41c68f:	cmc    
  41c690:	xchg   DWORD PTR [edi-0x522d083],edx
  41c696:	es pop edi
  41c698:	jl     0x41c643
  41c69a:	add    bh,ch
  41c69c:	push   eax
  41c69d:	jbe    0x41c6d0
  41c69f:	push   0x19
  41c6a1:	into   
  41c6a2:	(bad)  
  41c6a3:	sti    
  41c6a4:	cmp    DWORD PTR [ebx-0x4f],0xf18f4049
  41c6ab:	shr    DWORD PTR [esi-0x61],cl
  41c6ae:	inc    edi
  41c6af:	xlat   BYTE PTR ds:[ebx]
  41c6b0:	in     al,dx
  41c6b1:	sahf   
  41c6b2:	jb     0x41c70d
  41c6b4:	lahf   
  41c6b5:	shl    BYTE PTR [esi-0x380d7739],0xef
  41c6bc:	push   ecx
  41c6bd:	icebp  
  41c6be:	push   ebp
  41c6bf:	adc    DWORD PTR [edx],ebp
  41c6c1:	addr16 inc edi
  41c6c3:	(bad)  
  41c6c4:	or     eax,0x3d53686d
  41c6c9:	fmulp  st(6),st
  41c6cb:	fcomp  DWORD PTR cs:[ecx+0x74]
  41c6cf:	cmc    
  41c6d0:	mov    ebx,0x6a5759da
  41c6d5:	pop    esi
  41c6d6:	mov    ds:0x2dd8d866,eax
  41c6db:	xlat   BYTE PTR ds:[ebx]
  41c6dc:	and    BYTE PTR [edi+0x3c5ec460],dl
  41c6e2:	idiv   bh
  41c6e4:	mov    BYTE PTR [edx-0x15830144],al
  41c6ea:	call   0xc4ae:0x266ce36a
  41c6f1:	shl    DWORD PTR [ecx],1
  41c6f3:	loopne 0x41c6e3
  41c6f5:	inc    DWORD PTR [edx-0x17]
  41c6f8:	mov    BYTE PTR [eax],dl
  41c6fa:	(bad)  
  41c6fb:	fimul  DWORD PTR [ebp+0x63813f9]
  41c701:	mov    gs,WORD PTR fs:[esi]
  41c704:	sbb    eax,0x68e087b9
  41c709:	mov    ah,0x94
  41c70b:	pop    edi
  41c70c:	add    DWORD PTR [ebp-0x6c1868ae],0xf0dc54b1
  41c716:	daa    
  41c717:	aam    0x28
  41c719:	sbb    eax,0x4ba10885
  41c71e:	jns    0x41c769
  41c720:	adc    ebx,DWORD PTR [ebp-0x4f]
  41c723:	inc    edi
  41c724:	loop   0x41c76b
  41c726:	pop    eax
  41c727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c728:	jae    0x41c718
  41c72a:	mov    ah,0xd7
  41c72c:	xor    bh,dh
  41c72e:	retf   0x2bc6
  41c731:	sbb    BYTE PTR [ebx+edx*8-0x6a264578],0x6d
  41c739:	push   0x67706d9e
  41c73e:	push   esp
  41c73f:	or     eax,0xe208a14d
  41c744:	pop    es
  41c745:	push   eax
  41c746:	mov    BYTE PTR [ebp+ebx*4+0x68],bh
  41c74a:	cmp    eax,0xff2ce719
  41c74f:	push   eax
  41c750:	mov    ah,0x25
  41c752:	jno    0x41c704
  41c754:	ret    
  41c755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c756:	push   ebp
  41c757:	(bad)  
  41c758:	ss inc esp
  41c75a:	in     eax,dx
  41c75b:	dec    esp
  41c75c:	jmp    0xb2c3:0xc223704a
  41c763:	(bad)  
  41c764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c765:	mov    esp,0xc65bbbce
  41c76a:	dec    ebp
  41c76b:	cwde   
  41c76c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c76d:	sbb    al,BYTE PTR [ebp+0x18]
  41c770:	sbb    esp,DWORD PTR [eax-0x2e]
  41c773:	call   0xa7b73120
  41c778:	mov    al,0x95
  41c77a:	pusha  
  41c77b:	xchg   esi,eax
  41c77c:	xchg   DWORD PTR [ebp+0x77],ebp
  41c77f:	ds stos DWORD PTR es:[edi],eax
  41c781:	and    bl,al
  41c783:	mov    gs,eax
  41c785:	xor    eax,0xa478d774
  41c78a:	bswap  ebp
  41c78c:	add    al,0x69
  41c78e:	mov    eax,ds:0x64e1bc67
  41c793:	push   edi
  41c794:	in     al,0xef
  41c796:	out    dx,al
  41c797:	pusha  
  41c798:	xchg   ebp,eax
  41c799:	sub    bh,ch
  41c79b:	in     al,dx
  41c79c:	add    ch,al
  41c79e:	ss cld 
  41c7a0:	addr16 inc esi
  41c7a2:	dec    eax
  41c7a3:	mov    bh,0xe5
  41c7a5:	into   
  41c7a6:	loop   0x41c7f3
  41c7a8:	mov    BYTE PTR [eax],al
  41c7aa:	pop    ss
  41c7ab:	mov    bh,0x14
  41c7ad:	stos   BYTE PTR es:[edi],al
  41c7ae:	push   ebp
  41c7af:	inc    edx
  41c7b0:	enter  0x3f67,0x47
  41c7b4:	mov    bh,0x8c
  41c7b6:	push   edx
  41c7b7:	adc    ah,0xc3
  41c7ba:	scas   al,BYTE PTR es:[edi]
  41c7bb:	aaa    
  41c7bc:	xlat   BYTE PTR ds:[ebx]
  41c7bd:	ret    0x9f1
  41c7c0:	or     eax,0x7fce612a
  41c7c5:	fild   QWORD PTR [edi-0x4e962065]
  41c7cb:	add    eax,0xe0a97b09
  41c7d0:	lods   al,BYTE PTR ds:[esi]
  41c7d1:	(bad)  
  41c7d2:	mov    cl,0x4f
  41c7d4:	inc    eax
  41c7d5:	xchg   BYTE PTR [edx-0x1a516582],ch
  41c7db:	xlat   BYTE PTR ds:[ebx]
  41c7dc:	hlt    
  41c7dd:	cs inc ebx
  41c7df:	cmp    al,0x90
  41c7e1:	in     al,0x36
  41c7e3:	das    
  41c7e4:	xchg   edx,eax
  41c7e5:	adc    dh,dh
  41c7e7:	lds    ecx,FWORD PTR [eax-0x4e9140ab]
  41c7ed:	jbe    0x41c860
  41c7ef:	xlat   BYTE PTR ds:[ebx]
  41c7f0:	push   eax
  41c7f1:	mov    WORD PTR [ebx-0x4c5a7eb2],gs
  41c7f7:	std    
  41c7f8:	cmp    DWORD PTR [edi-0xb],0x613b7c28
  41c7ff:	mov    edi,0xd62c939d
  41c804:	(bad)  
  41c805:	int    0xbe
  41c807:	pop    ecx
  41c808:	fsubp  st(4),st
  41c80a:	test   eax,0x7bb481d
  41c80f:	mov    esp,0x86fc2788
  41c814:	rcl    DWORD PTR [ecx+ebx*8+0x3d6618f4],0x3
  41c81c:	xchg   ebx,eax
  41c81d:	push   eax
  41c81e:	cdq    
  41c81f:	adc    BYTE PTR [edi],dh
  41c821:	fwait
  41c822:	inc    eax
  41c823:	jb     0x41c88a
  41c825:	push   edi
  41c826:	mov    ebp,0x486e86a3
  41c82b:	out    dx,al
  41c82c:	jae    0x41c854
  41c82e:	cmp    eax,0x25e73e57
  41c833:	dec    esi
  41c834:	inc    ebp
  41c835:	addr16 pop ss
  41c837:	adc    esi,DWORD PTR [edi+0x73]
  41c83a:	test   BYTE PTR [ebx-0x3a],cl
  41c83d:	fdiv   QWORD PTR [ecx+0x50333e]
  41c843:	mov    dh,0x12
  41c845:	mov    ch,0xd6
  41c847:	xlat   BYTE PTR ds:[ebx]
  41c848:	(bad)  
  41c849:	mov    ecx,0xf3e58ca6
  41c84e:	aas    
  41c84f:	dec    edx
  41c850:	mov    BYTE PTR [ecx+0x19],cl
  41c853:	push   ebx
  41c854:	in     al,0x1c
  41c856:	xchg   esi,eax
  41c857:	pop    ebp
  41c858:	(bad)  
  41c859:	data16 mov al,0x4e
  41c85c:	xchg   BYTE PTR [ebx-0x66],ah
  41c85f:	aaa    
  41c860:	pop    ebp
  41c861:	xchg   edi,eax
  41c862:	addr16 mov ds:0x9181,eax
  41c866:	or     bh,BYTE PTR [ebp+0x4b]
  41c869:	and    BYTE PTR [ecx],dl
  41c86b:	fs pushf 
  41c86d:	ds dec ecx
  41c86f:	xlat   BYTE PTR ds:[ebx]
  41c870:	dec    ecx
  41c871:	mov    ah,0x97
  41c873:	sahf   
  41c874:	dec    esp
  41c875:	cwde   
  41c876:	fsub   DWORD PTR [edi+0x6e154e88]
  41c87c:	(bad)  [ebx]
  41c87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c87f:	aam    0xa9
  41c881:	imul   edx,DWORD PTR [esp+eax*8-0x77],0xbeb1d1e3
  41c889:	sbb    al,0x50
  41c88b:	sub    al,0x82
  41c88d:	ror    BYTE PTR [ecx-0x51],cl
  41c890:	sbb    esi,DWORD PTR [ecx+esi*1]
  41c893:	xlat   BYTE PTR ds:[ebx]
  41c894:	jnp    0x41c854
  41c896:	test   eax,0x54f6943b
  41c89b:	ds mov ch,bh
  41c89e:	add    al,0xa6
  41c8a0:	push   0x2a316195
  41c8a5:	pop    esi
  41c8a6:	dec    ebx
  41c8a7:	dec    eax
  41c8a8:	or     eax,0x833966e
  41c8ad:	iret   
  41c8ae:	jb     0x41c91b
  41c8b0:	dec    esp
  41c8b1:	push   esp
  41c8b2:	mov    cl,0xf2
  41c8b4:	sub    esi,DWORD PTR [edx-0x50]
  41c8b7:	or     BYTE PTR gs:[ebx-0x715428bd],bh
  41c8be:	mov    edx,0x3d130717
  41c8c3:	das    
  41c8c4:	pushf  
  41c8c5:	lds    edi,FWORD PTR [ebx+esi*4+0x48]
  41c8c9:	add    al,0xae
  41c8cb:	inc    esi
  41c8cc:	test   DWORD PTR [edi],0x67c0472b
  41c8d2:	loop   0x41c8c6
  41c8d4:	push   esi
  41c8d5:	push   0xe293be15
  41c8da:	mov    bl,0x1b
  41c8dc:	stc    
  41c8dd:	jnp    0x41c893
  41c8df:	shl    DWORD PTR [edi-0x19],1
  41c8e2:	jo     0x41c95f
  41c8e4:	xor    eax,0x54cacf1b
  41c8e9:	ss inc ebx
  41c8eb:	xchg   edi,eax
  41c8ec:	imul   edi,DWORD PTR ds:0xceb7f1a0,0xffffffbe
  41c8f3:	xor    bl,BYTE PTR [eax]
  41c8f5:	xor    al,0x1c
  41c8f7:	push   edi
  41c8f8:	sub    bl,BYTE PTR [edi]
  41c8fa:	dec    esi
  41c8fb:	(bad)  
  41c8fc:	mov    esp,DWORD PTR [esi+0x7f]
  41c8ff:	xor    edi,DWORD PTR [esi+0xc]
  41c902:	daa    
  41c903:	push   esp
  41c904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c905:	pop    es
  41c906:	inc    ebx
  41c907:	xor    BYTE PTR [eax-0x6aefec46],cl
  41c90d:	pop    esp
  41c90e:	test   DWORD PTR [edi+0x4f],esp
  41c911:	addr16 push 0xfffffff3
  41c914:	cmp    ecx,ebx
  41c916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c917:	lods   al,BYTE PTR ds:[esi]
  41c918:	imul   esi,DWORD PTR ss:[ecx+0x19d9deb9],0xffffff89
  41c920:	jbe    0x41c914
  41c922:	push   ecx
  41c923:	xlat   BYTE PTR ds:[ebx]
  41c924:	loop   0x41c959
  41c926:	cwde   
  41c927:	jecxz  0x41c8db
  41c929:	leave  
  41c92a:	fisubr WORD PTR [esi-0x26aad76b]
  41c930:	pushf  
  41c931:	test   ecx,esi
  41c933:	jg     0x41c958
  41c935:	(bad)  
  41c936:	test   DWORD PTR [ecx],0x979867bc
  41c93c:	js     0x41c9ac
  41c93e:	aas    
  41c93f:	ret    
  41c940:	out    dx,al
  41c941:	ins    BYTE PTR es:[edi],dx
  41c942:	mov    cl,0xf4
  41c944:	mov    eax,0x7a3c8f1
  41c949:	je     0x41c8f6
  41c94b:	xlat   BYTE PTR ds:[ebx]
  41c94c:	int    0xb5
  41c94e:	dec    DWORD PTR [ecx]
  41c950:	xchg   BYTE PTR [ebx-0x62fb47b],dl
  41c956:	ret    0xa8de
  41c959:	inc    esp
  41c95a:	stos   BYTE PTR es:[edi],al
  41c95b:	or     BYTE PTR [eax],0xa9
  41c95e:	ret    0x7cd0
  41c961:	jo     0x41c914
  41c963:	call   0x46326e09
  41c968:	xor    bl,BYTE PTR [ebx]
  41c96a:	mov    edi,0xe3732ed7
  41c96f:	in     eax,0x12
  41c971:	sti    
  41c972:	fwait
  41c973:	aam    0x88
  41c975:	les    ebp,FWORD PTR [ebp-0x2110d3e8]
  41c97b:	xor    al,0x60
  41c97d:	shl    BYTE PTR [bx+si+0x27],0xca
  41c982:	dec    ebx
  41c983:	mov    ds:0xea8a5777,eax
  41c988:	mov    ds:0xea9fb11e,eax
  41c98d:	aad    0x46
  41c98f:	sbb    BYTE PTR [ecx+0x2d75645],ch
  41c995:	pusha  
  41c996:	stos   BYTE PTR es:[edi],al
  41c997:	xor    al,0x68
  41c999:	shr    BYTE PTR [ecx],1
  41c99b:	and    eax,0x9a319c88
  41c9a0:	mov    cl,0x2e
  41c9a2:	push   ss
  41c9a3:	inc    edi
  41c9a4:	pusha  
  41c9a5:	and    edi,DWORD PTR [bx-0x3]
  41c9a9:	mov    bl,0xac
  41c9ab:	sti    
  41c9ac:	cld    
  41c9ad:	jae    0x41c960
  41c9af:	and    al,0xce
  41c9b1:	mul    al
  41c9b3:	inc    esp
  41c9b4:	cmp    ecx,DWORD PTR [edi]
  41c9b6:	or     edi,edx
  41c9b8:	fs or  al,0x38
  41c9bb:	pop    ss
  41c9bc:	pop    esi
  41c9bd:	push   edi
  41c9be:	scas   al,BYTE PTR es:[edi]
  41c9bf:	js     0xddee5768
  41c9c5:	mov    dh,0x1a
  41c9c7:	pop    edx
  41c9c8:	sahf   
  41c9c9:	addr16 jnp 0x41c991
  41c9cc:	dec    edi
  41c9cd:	popa   
  41c9ce:	test   eax,0xb17492c2
  41c9d3:	jmp    0x7ec3dbf2
  41c9d8:	pop    ecx
  41c9d9:	push   ecx
  41c9da:	dec    esi
  41c9db:	xlat   BYTE PTR ds:[ebx]
  41c9dc:	daa    
  41c9dd:	pop    ebx
  41c9de:	or     eax,0x9cd2054b
  41c9e3:	sar    DWORD PTR [eax+ecx*2-0x1fca90a7],1
  41c9ea:	xor    DWORD PTR [edx+0x402139ff],edx
  41c9f0:	scas   al,BYTE PTR es:[edi]
  41c9f1:	stc    
  41c9f2:	test   cl,cl
  41c9f4:	pop    ebx
  41c9f5:	or     ch,BYTE PTR ds:0x881b53ff
  41c9fb:	xlat   BYTE PTR ds:[ebx]
  41c9fc:	sbb    eax,0x97b84155
  41ca01:	fwait
  41ca02:	jecxz  0x41ca7b
  41ca04:	lea    esp,[ebp+0x67af9692]
  41ca0a:	aam    0xfc
  41ca0c:	xchg   ebx,eax
  41ca0d:	std    
  41ca0e:	repz xlat BYTE PTR ds:[ebx]
  41ca10:	mov    ecx,0x1e9ec21
  41ca15:	add    al,0x55
  41ca17:	mov    edi,0xa60aa68a
  41ca1c:	jg     0x41ca25
  41ca1e:	cli    
  41ca1f:	sti    
  41ca20:	maxps  xmm1,xmm0
  41ca23:	xlat   BYTE PTR ds:[ebx]
  41ca24:	mov    ds:0xfb39770d,eax
  41ca29:	arpl   WORD PTR [esi],ax
  41ca2b:	out    0x89,al
  41ca2d:	pop    ss
  41ca2e:	xchg   BYTE PTR [ebx+0x21964776],al
  41ca34:	in     eax,0xc3
  41ca36:	pop    edx
  41ca37:	xlat   BYTE PTR ds:[ebx]
  41ca38:	push   esp
  41ca39:	loope  0x41ca4f
  41ca3b:	mov    eax,0x8c59b271
  41ca40:	mov    ebp,0x528f0905
  41ca45:	addr16 in al,0xcb
  41ca48:	xchg   ebp,eax
  41ca49:	mov    bh,0x2a
  41ca4b:	dec    esi
  41ca4c:	mov    ds:0x2fc44ef7,eax
  41ca51:	aas    
  41ca52:	inc    edx
  41ca53:	(bad)  
  41ca54:	ins    DWORD PTR es:[edi],dx
  41ca55:	iret   
  41ca56:	addr16 mov al,0x9f
  41ca59:	push   edi
  41ca5a:	test   BYTE PTR [esi+0x43284388],dl
  41ca60:	shl    edx,0xb
  41ca63:	(bad)  
  41ca64:	fisub  DWORD PTR [edi+0x9]
  41ca67:	push   0x6ef8abf6
  41ca6c:	or     DWORD PTR [esi+0x9c50b1],ebx
  41ca72:	pshufw mm6,mm4,0x12
  41ca76:	pop    eax
  41ca77:	imul   edi,DWORD PTR [ebx],0x69
  41ca7a:	sbb    eax,ecx
  41ca7c:	push   0x890341af
  41ca81:	xor    esi,DWORD PTR [esi-0x2ebe7ae5]
  41ca87:	cwde   
  41ca88:	or     BYTE PTR [eax],dl
  41ca8a:	sub    bl,BYTE PTR [edx]
  41ca8c:	int    0x66
  41ca8e:	fiadd  WORD PTR ds:0xb2745872
  41ca94:	loope  0x41ca39
  41ca96:	xchg   esp,eax
  41ca97:	push   ebx
  41ca98:	mov    BYTE PTR [ebp+0x637fab34],ch
  41ca9e:	dec    esi
  41ca9f:	icebp  
  41caa0:	xor    eax,0xaf65f067
  41caa5:	jbe    0x41ca46
  41caa7:	call   0xbdd8:0xb7b1e54c
  41caae:	xor    al,0xbf
  41cab0:	mov    DWORD PTR [edi+0x308cd7de],ebp
  41cab6:	sub    al,BYTE PTR [esi-0x1a]
  41cab9:	xlat   BYTE PTR ds:[ebx]
  41caba:	push   cs
  41cabb:	retf   0xeed8
  41cabe:	adc    al,0x95
  41cac0:	cdq    
  41cac1:	dec    ebp
  41cac2:	push   es
  41cac3:	rol    BYTE PTR [esi],1
  41cac5:	jbe    0x41cb36
  41cac7:	sbb    DWORD PTR [edx-0x32cd2559],edi
  41cacd:	addr16 xor eax,0xcd48795b
  41cad3:	mov    ds:0xc0b2aea4,eax
  41cad8:	cli    
  41cad9:	shl    DWORD PTR [eax+0x31e0a8db],0x97
  41cae0:	push   ds
  41cae1:	xchg   esi,eax
  41cae2:	outs   dx,BYTE PTR ds:[esi]
  41cae3:	xlat   BYTE PTR ds:[ebx]
  41cae4:	sbb    ch,BYTE PTR [edi-0xa81b768]
  41caea:	sub    ah,cl
  41caec:	mov    BYTE PTR [edx+0x61],dh
  41caef:	add    cl,BYTE PTR [ecx+0x4e59023d]
  41caf5:	addr16 hlt 
  41caf7:	mov    WORD PTR [edi-0x1bce1643],es
  41cafd:	sub    al,dh
  41caff:	cmp    eax,0xd11c7086
  41cb04:	pop    ebp
  41cb05:	and    al,0xa7
  41cb07:	mov    bh,0xc2
  41cb09:	pushf  
  41cb0a:	enter  0xb3a0,0x67
  41cb0e:	fs cs push 0xeeeae108
  41cb15:	js     0x41cad6
  41cb17:	pop    edi
  41cb18:	push   ecx
  41cb19:	(bad)  [ebp+0x2f426d56]
  41cb1f:	retf   0xb450
  41cb22:	and    al,cl
  41cb24:	loopne 0x41cb66
  41cb26:	nop
  41cb27:	push   edi
  41cb28:	push   ds
  41cb29:	into   
  41cb2a:	jle    0x41cb7b
  41cb2c:	daa    
  41cb2d:	push   ss
  41cb2e:	mov    cl,0x5d
  41cb30:	call   0x95ff35dc
  41cb35:	ret    0xa6ea
  41cb38:	add    ah,BYTE PTR [edi-0x4e]
  41cb3b:	shl    BYTE PTR [eax+0x22],1
  41cb3e:	and    ecx,esi
  41cb40:	mov    esp,0x424bfc9
  41cb45:	(bad)
  41cb48:	dec    esi
  41cb49:	ins    BYTE PTR es:[edi],dx
  41cb4a:	xor    BYTE PTR [edi],dh
  41cb4c:	cli    
  41cb4d:	data16 aam 0xd9
  41cb50:	xchg   ecx,eax
  41cb51:	xchg   DWORD PTR [edi+0x79],esp
  41cb54:	cmp    edi,DWORD PTR [edx+0x58]
  41cb57:	sbb    BYTE PTR ds:0xeb673139,bl
  41cb5d:	jb     0x41cb22
  41cb5f:	arpl   WORD PTR [eax+0xd1b14e2],cx
  41cb65:	frstor [ebp-0x7be2382f]
  41cb6b:	xor    ch,BYTE PTR [eax-0x3e286a7e]
  41cb71:	xor    bl,BYTE PTR ds:0x2cf141e5
  41cb77:	jns    0x41cb01
  41cb79:	push   cs
  41cb7a:	outs   dx,DWORD PTR ds:[esi]
  41cb7b:	mov    BYTE PTR [edx],dh
  41cb7d:	mov    esi,0x66388f47
  41cb82:	(bad)  
  41cb83:	fstp   QWORD PTR [ebp+0x2a]
  41cb86:	cmp    al,0x27
  41cb88:	jg     0x41cb19
  41cb8a:	xchg   ebx,eax
  41cb8b:	add    al,0x88
  41cb8d:	aam    0xdb
  41cb8f:	outs   dx,DWORD PTR ds:[esi]
  41cb90:	out    0x54,eax
  41cb92:	push   ebx
  41cb93:	cwde   
  41cb94:	push   ecx
  41cb95:	jnp    0x41cb2d
  41cb97:	jns    0x41cb49
  41cb99:	stos   DWORD PTR es:[edi],eax
  41cb9a:	les    edi,FWORD PTR [esi-0x304ec9f2]
  41cba0:	int3   
  41cba1:	lods   eax,DWORD PTR ds:[esi]
  41cba2:	cmp    cl,0x46
  41cba5:	push   ss
  41cba6:	cmc    
  41cba7:	xlat   BYTE PTR ds:[ebx]
  41cba8:	mov    WORD PTR [edx+0x2e318dfc],?
  41cbae:	adc    BYTE PTR [edi],dh
  41cbb0:	test   DWORD PTR [ebp+0x7bd75f44],eax
  41cbb6:	ja     0x41cc36
  41cbb8:	jp     0x41cbc1
  41cbba:	jns    0x41cbef
  41cbbc:	and    DWORD PTR [edi+0x71],esp
  41cbbf:	dec    edi
  41cbc0:	stc    
  41cbc1:	mov    edx,0x22ad9b62
  41cbc6:	mov    cl,0x3d
  41cbc8:	fadd   st,st(1)
  41cbca:	psubusw mm4,QWORD PTR [ebx-0x3a]
  41cbce:	jmp    0xb1eae2bb
  41cbd3:	jb     0x41cbec
  41cbd5:	js     0x41cb65
  41cbd7:	xchg   BYTE PTR [esi],cl
  41cbd9:	jne    0x41cb8c
  41cbdb:	cmp    eax,0x17f573a9
  41cbe0:	push   ebx
  41cbe1:	pop    esp
  41cbe2:	outs   dx,DWORD PTR ds:[esi]
  41cbe3:	xor    eax,0xd7d69d34
  41cbe8:	inc    eax
  41cbe9:	xor    DWORD PTR [ebx-0x4],eax
  41cbec:	mov    cl,BYTE PTR [esi]
  41cbee:	adc    eax,0x90fe886c
  41cbf3:	loopne 0x41cc0d
  41cbf5:	fwait
  41cbf6:	aad    0xf4
  41cbf8:	and    BYTE PTR [edi-0x5a],0xcc
  41cbfc:	in     eax,0x5f
  41cbfe:	sti    
  41cbff:	xchg   edi,eax
  41cc00:	mov    esi,0x567ab1c4
  41cc05:	iret   
  41cc06:	out    dx,al
  41cc07:	clc    
  41cc08:	pop    edx
  41cc09:	rcr    ah,cl
  41cc0b:	pop    esp
  41cc0d:	in     al,dx
  41cc0e:	mov    dh,0xa7
  41cc10:	pop    ds
  41cc11:	cld    
  41cc12:	aam    0xf7
  41cc14:	push   esp
  41cc15:	prefetcht0 BYTE PTR [edx-0x78]
  41cc19:	and    ecx,edx
  41cc1b:	mov    gs,WORD PTR [ecx]
  41cc1d:	mul    BYTE PTR [ecx]
  41cc1f:	in     al,0x10
  41cc21:	scas   eax,DWORD PTR es:[di]
  41cc23:	sti    
  41cc24:	mov    eax,esi
  41cc26:	dec    edi
  41cc27:	ds cdq 
  41cc29:	dec    ecx
  41cc2a:	mov    dl,0x53
  41cc2c:	fidiv  DWORD PTR [ebp-0x21]
  41cc2f:	add    ch,dh
  41cc31:	out    0xa7,eax
  41cc33:	rol    BYTE PTR [eax+eiz*2+0x11],0x3b
  41cc38:	pop    es
  41cc39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc3a:	fsub   QWORD PTR [edi-0x55e2310f]
  41cc40:	mov    esi,0x12575e13
  41cc45:	fidiv  WORD PTR [ebx+0x6816aea8]
  41cc4b:	lods   eax,DWORD PTR ds:[esi]
  41cc4c:	fldenv [edi-0x46]
  41cc4f:	or     al,0x1e
  41cc51:	cmp    eax,0xc2ec3fd8
  41cc56:	lahf   
  41cc57:	cmp    esp,DWORD PTR [edi+eax*1]
  41cc5a:	mov    cl,0xb7
  41cc5c:	xor    al,0x23
  41cc5e:	ror    DWORD PTR [edx+0x7],0x67
  41cc62:	pop    ss
  41cc63:	shl    DWORD PTR [edi+0x6cf452ac],cl
  41cc69:	xchg   DWORD PTR [ebp+ebx*8+0x79710b9d],ebp
  41cc70:	dec    esp
  41cc71:	jae    0x41cbfd
  41cc73:	xchg   edi,eax
  41cc74:	mov    esp,0x828cb5d
  41cc79:	or     ebx,esp
  41cc7b:	xor    ah,0xf2
  41cc7e:	push   edi
  41cc7f:	aad    0x88
  41cc81:	aam    0x41
  41cc83:	dec    esp
  41cc84:	arpl   WORD PTR [eax+0x67849d86],cx
  41cc8a:	dec    edx
  41cc8b:	sahf   
  41cc8c:	call   0x8f52:0x19a325d9
  41cc93:	dec    edi
  41cc94:	inc    ebx
  41cc95:	out    0xe8,eax
  41cc97:	xchg   DWORD PTR [ebp-0x2e233ebd],edx
  41cc9d:	imul   ebp,DWORD PTR [ebx],0x70a11b91
  41cca3:	out    dx,eax
  41cca4:	dec    ebp
  41cca5:	imul   esi,DWORD PTR [ebx-0x4ea6bf59],0x7bd1f73b
  41ccaf:	cmp    ecx,ebx
  41ccb1:	ja     0x41cc4a
  41ccb3:	lods   al,BYTE PTR ds:[esi]
  41ccb4:	mov    esp,DWORD PTR [edi-0x56]
  41ccb7:	gs pop ebx
  41ccb9:	xchg   ecx,eax
  41ccba:	shr    BYTE PTR [ecx+eiz*2],1
  41ccbd:	mov    al,ds:0x3f8981b2
  41ccc2:	push   0xffffffd2
  41ccc4:	cmp    DWORD PTR [edi+0x5e7e22dd],esp
  41ccca:	mov    edi,0xe5c788cb
  41cccf:	pusha  
  41ccd0:	dec    edi
  41ccd1:	xor    ch,dh
  41ccd3:	sbb    BYTE PTR [esp+edi*2-0x50],ah
  41ccd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccd8:	fist   WORD PTR [ebp+0x5e]
  41ccdb:	inc    esi
  41ccdc:	mov    ebx,0x64a1643c
  41cce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cce2:	gs (bad) 
  41cce4:	scas   al,BYTE PTR es:[edi]
  41cce5:	push   esi
  41cce6:	pusha  
  41cce7:	mov    edi,0xf35fb6a
  41ccec:	shr    DWORD PTR [ecx+esi*4+0x237f0c20],0xce
  41ccf4:	add    ebp,DWORD PTR [ecx]
  41ccf6:	and    al,0xa0
  41ccf8:	xor    al,0x2f
  41ccfa:	mov    edi,0x5acc88b6
  41ccff:	jb     0x41cd66
  41cd01:	add    eax,0xe386a111
  41cd06:	(bad)
  41cd09:	ret    
  41cd0a:	dec    ecx
  41cd0b:	xchg   edi,eax
  41cd0c:	mov    ecx,0x1d79174
  41cd11:	add    DWORD PTR [ebx+edx*1+0xcdf4f0f],edx
  41cd18:	mov    BYTE PTR [ecx-0x786fe2c7],al
  41cd1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd1f:	cmp    DWORD PTR [eax],eax
  41cd21:	push   0x777a879f
  41cd26:	in     eax,dx
  41cd27:	jecxz  0x41cda6
  41cd29:	cli    
  41cd2a:	mov    cl,0xe9
  41cd2c:	push   edi
  41cd2d:	push   edx
  41cd2e:	jmp    0x61d7:0x530012bf
  41cd35:	xor    bl,BYTE PTR [esi]
  41cd37:	lahf   
  41cd38:	mov    ds:0x7c5a9976,al
  41cd3d:	data16 mov cl,0xa2
  41cd40:	addr16 xchg edx,eax
  41cd42:	pop    es
  41cd43:	ror    BYTE PTR [edi],cl
  41cd45:	xor    al,0x7f
  41cd47:	xlat   BYTE PTR ds:[ebx]
  41cd48:	pop    es
  41cd49:	jge    0x41cd07
  41cd4b:	xbegin 0x884b94ef
  41cd51:	push   ecx
  41cd52:	and    dl,BYTE PTR [eax-0x7]
  41cd55:	enter  0x1acc,0x56
  41cd59:	je     0x41cd14
  41cd5b:	jl     0x41cd09
  41cd5d:	addr16 mov ecx,0x707f21d0
  41cd63:	jae    0x41cced
  41cd65:	xlat   BYTE PTR ds:[ebx]
  41cd66:	lock test DWORD PTR [eax-0x23],ecx
  41cd6a:	mov    ebp,0x645f4132
  41cd6f:	in     eax,0xf1
  41cd71:	jnp    0x41cdad
  41cd73:	jno    0x41cd8c
  41cd75:	out    0xc4,eax
  41cd77:	mov    bl,ch
  41cd79:	cmp    al,0x1
  41cd7b:	xor    al,0x89
  41cd7d:	pop    esi
  41cd7e:	lahf   
  41cd7f:	retf   0x20d7
  41cd82:	xor    eax,0x390dd82c
  41cd87:	add    DWORD PTR [esi+0x39b77967],ebp
  41cd8d:	retf   0xe5f4
  41cd90:	gs pop edx
  41cd92:	mov    cl,0xf3
  41cd94:	xchg   esi,eax
  41cd95:	(bad)  
  41cd96:	jbe    0x41cd27
  41cd98:	xchg   edx,eax
  41cd99:	pusha  
  41cd9a:	leave  
  41cd9b:	xlat   BYTE PTR ds:[ebx]
  41cd9c:	pushf  
  41cd9d:	cmp    DWORD PTR [eax],esi
  41cd9f:	xor    edi,ebx
  41cda1:	mov    ds:0xfe8df5db,al
  41cda6:	inc    esi
  41cda7:	pop    ds
  41cda8:	sbb    eax,0xcb771369
  41cdad:	adc    DWORD PTR [eax],edx
  41cdaf:	outs   dx,DWORD PTR ds:[esi]
  41cdb0:	cli    
  41cdb1:	js     0x41ce08
  41cdb3:	shl    BYTE PTR [esi+0x536c2fe7],1
  41cdb9:	clc    
  41cdba:	pop    esp
  41cdbb:	push   0xffffff88
  41cdbd:	test   ebp,ebx
  41cdbf:	sub    al,0x6c
  41cdc1:	test   eax,0x67e1cea5
  41cdc6:	popa   
  41cdc7:	aad    0xa0
  41cdc9:	adc    BYTE PTR ss:[edx+edx*8-0x6f],0xca
  41cdcf:	pop    eax
  41cdd0:	mov    ch,ah
  41cdd2:	fiadd  DWORD PTR [ebx+edx*4-0x46681a0f]
  41cdd9:	addr16 fdivrp st(4),st
  41cddc:	cdq    
  41cddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdde:	es mov ah,0x84
  41cde1:	div    BYTE PTR [ecx-0x75ede7ef]
  41cde7:	xor    BYTE PTR [ebp+ebp*2+0x75fed7d1],ch
  41cdee:	sub    eax,0x22b2dde9
  41cdf3:	imul   ebp,DWORD PTR [edi-0x6d],0x3189969a
  41cdfa:	bound  edi,QWORD PTR [esi]
  41cdfc:	cmc    
  41cdfd:	and    al,0x96
  41cdff:	mov    ds:0x9178ef9b,eax
  41ce04:	sub    al,0x98
  41ce06:	shl    DWORD PTR [esp+ebx*2],1
  41ce09:	addr16 mov eax,eax
  41ce0c:	jecxz  0x41cdae
  41ce0e:	push   0xffffffde
  41ce10:	imul   esi,DWORD PTR [ecx],0x99f176b1
  41ce16:	in     eax,dx
  41ce17:	adc    eax,0xc85af6bf
  41ce1c:	mov    esi,0xf7170123
  41ce21:	popf   
  41ce22:	(bad)  
  41ce23:	cmc    
  41ce24:	mov    DWORD PTR [edi-0x41],ecx
  41ce27:	or     BYTE PTR [esi],cl
  41ce29:	jb     0x41cdde
  41ce2b:	test   DWORD PTR ds:0x13fd1bbe,0xe9833267
  41ce35:	mov    ecx,0xb24badca
  41ce3a:	mov    cl,0x86
  41ce3c:	mov    dl,0xd6
  41ce3e:	rol    BYTE PTR [ecx],0x4f
  41ce41:	test   BYTE PTR [edi-0x29],0xf1
  41ce45:	rol    BYTE PTR [eax+0xa],1
  41ce48:	in     eax,dx
  41ce49:	popf   
  41ce4a:	hlt    
  41ce4b:	add    eax,0xe383f288
  41ce50:	cmc    
  41ce51:	out    dx,eax
  41ce52:	push   ds
  41ce53:	div    dh
  41ce55:	addr16 adc al,0x14
  41ce58:	mov    cl,0x26
  41ce5a:	in     eax,dx
  41ce5b:	sahf   
  41ce5c:	inc    esp
  41ce5d:	cmp    al,0xb1
  41ce5f:	push   edi
  41ce60:	cwde   
  41ce61:	nop
  41ce62:	imul   ebp,DWORD PTR [esi],0x76
  41ce65:	adc    DWORD PTR [ebx],ebp
  41ce67:	xlat   BYTE PTR ds:[ebx]
  41ce68:	andps  xmm3,XMMWORD PTR [edx+0x55]
  41ce6c:	push   0xdcd84a07
  41ce71:	jmp    FWORD PTR [ecx+0x8f48aa6]
  41ce77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce78:	stos   DWORD PTR es:[edi],eax
  41ce79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce7a:	pusha  
  41ce7b:	daa    
  41ce7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce7d:	sub    cl,BYTE PTR [ebp-0x777ff829]
  41ce83:	aaa    
  41ce84:	inc    ecx
  41ce85:	test   BYTE PTR [ebx+ecx*2+0x47b16a7e],0xe7
  41ce8d:	add    bh,ch
  41ce8f:	aad    0xa5
  41ce91:	pop    es
  41ce92:	js     0x41ce68
  41ce94:	dec    edx
  41ce95:	inc    ebp
  41ce96:	adc    ah,BYTE PTR [ebx+0x1c01896d]
  41ce9c:	pop    ecx
  41ce9d:	push   es
  41ce9e:	scas   al,BYTE PTR es:[edi]
  41ce9f:	inc    esp
  41cea0:	dec    eax
  41cea1:	in     eax,0xb1
  41cea3:	mov    eax,ds:0xc2eedc5e
  41cea8:	jmp    0x7d1f:0x984c9667
  41ceaf:	div    BYTE PTR [esp+edx*1]
  41ceb2:	mov    ah,0x26
  41ceb4:	mov    ah,BYTE PTR [edx+0x74]
  41ceb7:	repz or cl,bh
  41ceba:	or     al,ah
  41cebc:	jae    0x41cf25
  41cebe:	sbb    BYTE PTR [ecx-0x7a],ch
  41cec1:	dec    esi
  41cec2:	repnz icebp 
  41cec4:	mov    WORD PTR [edi],fs
  41cec6:	lea    esp,[esi-0x69f29894]
  41cecc:	aaa    
  41cecd:	setg   BYTE PTR [ecx-0x11db985c]
  41ced4:	test   edi,ebx
  41ced6:	adc    al,0xad
  41ced8:	ja     0x41ce69
  41ceda:	mov    cl,0x49
  41cedc:	add    BYTE PTR [ebx+0x29],al
  41cedf:	dec    esi
  41cee0:	inc    edi
  41cee1:	sbb    dl,BYTE PTR [ebx]
  41cee3:	aas    
  41cee4:	mov    DWORD PTR [edi+0x5d],esp
  41cee7:	cmp    eax,0x550c3507
  41ceec:	loop   0x41cf65
  41ceee:	mov    cl,0xb9
  41cef0:	into   
  41cef1:	mov    WORD PTR [edi-0x10],?
  41cef4:	js     0x41cebb
  41cef6:	jne    0x41cecf
  41cef8:	imul   eax,DWORD PTR [eax-0xcd5a427],0x52886b40
  41cf02:	ret    0xe0bb
  41cf05:	or     ah,ch
  41cf07:	xchg   dh,bl
  41cf09:	xchg   BYTE PTR [si],bh
  41cf0c:	mov    ebp,DWORD PTR [eax]
  41cf0e:	loop   0x41cebf
  41cf10:	add    al,0x57
  41cf12:	(bad)  
  41cf13:	or     ebx,ebx
  41cf15:	push   es
  41cf16:	sub    al,0xd7
  41cf18:	popf   
  41cf19:	aaa    
  41cf1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf1b:	pop    eax
  41cf1c:	rcr    bh,cl
  41cf1e:	push   0x47
  41cf20:	and    DWORD PTR [esi-0x5],0x4d
  41cf24:	adc    eax,0xcc4a67d0
  41cf29:	push   edi
  41cf2a:	cmp    BYTE PTR [ecx+eax*4+0x4cd3f617],al
  41cf31:	mov    ds:0x140a1421,al
  41cf36:	inc    edx
  41cf37:	xlat   BYTE PTR ds:[ebx]
  41cf38:	sub    esi,DWORD PTR [edx]
  41cf3a:	push   edx
  41cf3b:	push   cs
  41cf3c:	inc    edx
  41cf3d:	aas    
  41cf3e:	(bad)  
  41cf3f:	jg     0x41cf21
  41cf41:	push   0xffffffa6
  41cf43:	xlat   BYTE PTR ds:[ebx]
  41cf44:	mov    esp,0x9b78d8c5
  41cf49:	ror    bh,cl
  41cf4b:	xlat   BYTE PTR ds:[ebx]
  41cf4c:	xchg   edi,eax
  41cf4d:	in     eax,0xf0
  41cf4f:	dec    ebx
  41cf50:	lods   eax,DWORD PTR ds:[esi]
  41cf51:	jg     0x41cfb6
  41cf53:	inc    ebp
  41cf54:	adc    BYTE PTR [eax-0x46],0x76
  41cf58:	push   edi
  41cf59:	out    0x28,al
  41cf5b:	xlat   BYTE PTR ds:[ebx]
  41cf5c:	test   BYTE PTR [edi+0x77],ch
  41cf5f:	push   ds
  41cf60:	mov    WORD PTR [edi-0x5],fs
  41cf63:	aam    0xff
  41cf65:	sbb    ch,BYTE PTR [ebp-0x9]
  41cf68:	(bad)  
  41cf69:	fidiv  WORD PTR [ecx+0x65d6c42a]
  41cf6f:	adc    al,0x51
  41cf71:	jbe    0x41cf42
  41cf73:	rcl    DWORD PTR [ebp-0xeb2457b],1
  41cf79:	(bad)  
  41cf7a:	scas   al,BYTE PTR es:[edi]
  41cf7b:	ins    DWORD PTR es:[edi],dx
  41cf7c:	pop    ebp
  41cf7d:	div    BYTE PTR [edx-0x1da78f40]
  41cf83:	aas    
  41cf84:	enter  0x4ce7,0xd7
  41cf88:	stc    
  41cf89:	je     0x41cf80
  41cf8b:	test   BYTE PTR [ebx*2-0x4865277a],0xf2
  41cf93:	fisttp QWORD PTR [eax+0x38d5193]
  41cf99:	xchg   edx,eax
  41cf9a:	pop    edx
  41cf9b:	xlat   BYTE PTR ds:[ebx]
  41cf9c:	fsub   QWORD PTR [ebp-0x79]
  41cf9f:	push   esi
  41cfa0:	ror    DWORD PTR [esi-0x8],cl
  41cfa3:	mov    ebx,0x44074288
  41cfa8:	pop    esp
  41cfa9:	mov    ah,0xdb
  41cfab:	cdq    
  41cfac:	pop    ds
  41cfad:	outs   dx,DWORD PTR ds:[si]
  41cfaf:	push   ecx
  41cfb0:	stc    
  41cfb1:	jmp    0x51032259
  41cfb6:	pop    ecx
  41cfb7:	hlt    
  41cfb8:	ins    WORD PTR es:[edi],dx
  41cfba:	lahf   
  41cfbb:	addr16 sub ecx,ebp
  41cfbe:	mov    esi,0x52a77162
  41cfc3:	inc    esi
  41cfc4:	dec    edx
  41cfc5:	inc    edi
  41cfc6:	or     edi,edx
  41cfc8:	xor    eax,0x682fc519
  41cfcd:	sar    BYTE PTR [edi],0x97
  41cfd0:	mov    BYTE PTR [ebx-0x3793f6be],ch
  41cfd6:	adc    BYTE PTR [edx],bl
  41cfd8:	add    eax,0x88ba502b
  41cfdd:	inc    esp
  41cfde:	dec    ebx
  41cfdf:	push   ebp
  41cfe0:	imul   ebx,DWORD PTR [ebx],0x4a882e8a
  41cfe6:	inc    dl
  41cfe8:	sub    al,0xe6
  41cfea:	or     bl,dl
  41cfec:	and    BYTE PTR [edi+0x2],0x5
  41cff0:	(bad)  
  41cff1:	jmp    0x4a28793a
  41cff6:	mov    cl,0xbd
  41cff8:	in     eax,0x54
  41cffa:	mov    ds:0x608bd45f,eax
  41cfff:	sti    
  41d000:	in     al,0xe5
  41d002:	scas   al,BYTE PTR es:[edi]
  41d003:	retf   0x26ef
  41d006:	pop    ds
  41d007:	inc    esp
  41d008:	shr    DWORD PTR [ebx+0x38ed1366],0xb1
  41d00f:	sar    DWORD PTR [edi],cl
  41d011:	les    ecx,FWORD PTR [edi]
  41d013:	(bad)  
  41d014:	mov    eax,0x3d6a769
  41d019:	sti    
  41d01a:	mov    bl,0xf2
  41d01c:	adc    eax,0x45979cb5
  41d021:	pop    edi
  41d022:	push   edx
  41d023:	ficomp WORD PTR [ebx+0x4804351c]
  41d029:	mov    ?,WORD PTR [ebx]
  41d02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d02c:	sbb    eax,DWORD PTR [ebx-0x7f]
  41d02f:	xlat   BYTE PTR ds:[ebx]
  41d030:	(bad)  
  41d031:	mul    bh
  41d033:	mov    dl,0x1a
  41d035:	sbb    ecx,DWORD PTR [esi]
  41d037:	fwait
  41d038:	cmc    
  41d039:	pop    ss
  41d03a:	mov    cl,0xc8
  41d03c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d03d:	rcl    bl,0x23
  41d040:	sub    edx,DWORD PTR [ecx]
  41d042:	and    eax,esp
  41d044:	(bad)  
  41d045:	out    0x49,eax
  41d047:	xlat   BYTE PTR ds:[ebx]
  41d048:	pop    es
  41d049:	mov    eax,ds:0x50b2a8da
  41d04e:	pop    edi
  41d04f:	bound  ebx,QWORD PTR [esp+esi*2-0x66b753b0]
  41d056:	mov    al,BYTE PTR [ebx-0x28b4e269]
  41d05c:	inc    ebp
  41d05d:	sub    eax,0xcc46b093
  41d062:	sbb    DWORD PTR [edi],ebp
  41d064:	mov    cl,al
  41d066:	sbb    BYTE PTR [edx+ecx*4+0x42db79d4],dh
  41d06d:	addr16 (bad) 
  41d06f:	punpckhwd mm2,mm5
  41d072:	mov    esp,0xb16e28af
  41d077:	pop    ecx
  41d078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d079:	cmp    al,0xa4
  41d07b:	lds    ebp,FWORD PTR [ebx+0x14d7e973]
  41d081:	cmp    eax,0xf55a217c
  41d086:	mov    ds:0x9aab9cbf,al
  41d08b:	jnp    0x41d095
  41d08d:	xlat   BYTE PTR ds:[ebx]
  41d08e:	and    al,0x84
  41d090:	push   eax
  41d091:	or     DWORD PTR [ebx+ecx*8+0x1510de18],esi
  41d098:	enter  0xbb4f,0xd9
  41d09c:	enter  0xe9d8,0x26
  41d0a0:	bound  esp,QWORD PTR [esi-0x222d874f]
  41d0a6:	or     DWORD PTR [esi-0x283bf5f9],0x40cf7820
  41d0b0:	xchg   esp,eax
  41d0b1:	adc    esi,DWORD PTR [ecx-0x25]
  41d0b4:	mov    ecx,0x98d72748
  41d0b9:	push   edi
  41d0ba:	mov    dl,0xed
  41d0bc:	ret    0x9da4
  41d0bf:	aam    0x2e
  41d0c1:	jp     0x41d0f4
  41d0c3:	cli    
  41d0c4:	pop    edi
  41d0c5:	jmp    0x2348:0x896b4646
  41d0cc:	adc    ah,BYTE PTR [ecx]
  41d0ce:	mov    cl,0xd4
  41d0d0:	ins    BYTE PTR es:[edi],dx
  41d0d1:	mov    ecx,0x6ab266c6
  41d0d6:	clc    
  41d0d7:	cmp    DWORD PTR [eax],eax
  41d0d9:	push   0x3ff4b2f
  41d0de:	(bad)  
  41d0df:	xor    ebx,DWORD PTR [ecx]
  41d0e1:	jbe    0x41d094
  41d0e3:	into   
  41d0e4:	and    edx,DWORD PTR [esi+0x6c]
  41d0e7:	add    BYTE PTR [eax],dl
  41d0e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0ea:	outs   dx,DWORD PTR ds:[esi]
  41d0eb:	scas   al,BYTE PTR es:[edi]
  41d0ec:	add    eax,0xd9d45167
  41d0f1:	imul   ebx
  41d0f3:	cmp    BYTE PTR [esi+0x25cbec5],0x65
  41d0fa:	lea    ebp,[ebx-0x28a6866c]
  41d100:	hlt    
  41d101:	je     0x41d118
  41d103:	xchg   cl,dl
  41d105:	mov    ch,al
  41d107:	xlat   BYTE PTR ds:[ebx]
  41d108:	out    dx,al
  41d109:	and    ecx,ebx
  41d10b:	rcl    DWORD PTR [eax-0x6e],cl
  41d10e:	in     eax,dx
  41d10f:	sbb    al,0x88
  41d111:	cmp    DWORD PTR [edx+0x7c35c332],0x3867caeb
  41d11b:	fist   DWORD PTR [esi-0x1fd99338]
  41d121:	(bad)  
  41d122:	mov    cl,0xca
  41d124:	stc    
  41d125:	fld    TBYTE PTR [ecx+0x70]
  41d128:	lods   al,BYTE PTR ds:[esi]
  41d129:	xor    dh,bl
  41d12b:	xor    eax,0xd7c21ee5
  41d130:	mov    dl,0xa4
  41d132:	lock add DWORD PTR [ebx],ecx
  41d135:	dec    ebp
  41d136:	push   ds
  41d137:	sahf   
  41d138:	mov    esi,0x48570ff3
  41d13d:	sub    al,0xba
  41d13f:	retf   
  41d140:	outs   dx,BYTE PTR ds:[esi]
  41d141:	ss add ebx,edx
  41d144:	lahf   
  41d145:	push   esi
  41d146:	jmp    0x778d:0xdde7f477
  41d14d:	and    eax,0xe929cab1
  41d152:	mov    bl,BYTE PTR ds:0xd89629d9
  41d158:	daa    
  41d159:	(bad)  
  41d15a:	cmc    
  41d15b:	push   es
  41d15c:	call   0x3067:0xb6294bde
  41d163:	or     al,0xe0
  41d165:	or     al,0xe
  41d167:	or     DWORD PTR [ebx+0x6e],eax
  41d16a:	mov    edi,0x81c3d2cd
  41d16f:	push   ds
  41d170:	sar    BYTE PTR [ebx],0xf5
  41d173:	xlat   BYTE PTR ds:[ebx]
  41d174:	dec    edx
  41d175:	lea    edi,[esi]
  41d177:	inc    edi
  41d178:	dec    edi
  41d179:	push   esp
  41d17a:	mov    cl,0x91
  41d17c:	shr    DWORD PTR fs:[ebp-0x4f],1
  41d180:	adc    BYTE PTR cs:[edi+0x5c652fa1],bl
  41d187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d188:	push   esp
  41d189:	adc    cl,al
  41d18b:	adc    BYTE PTR [eax-0x38],cl
  41d18e:	pop    ecx
  41d18f:	push   edx
  41d190:	test   DWORD PTR [edi],ebx
  41d192:	sub    eax,0xde42b126
  41d197:	dec    esp
  41d198:	popf   
  41d199:	(bad)  
  41d19a:	data16 lahf 
  41d19c:	sti    
  41d19d:	xchg   ebp,eax
  41d19e:	mov    ch,0xd7
  41d1a0:	test   DWORD PTR [ebx],esi
  41d1a2:	js     0x41d21c
  41d1a4:	jnp    0x41d1fd
  41d1a6:	xchg   esi,eax
  41d1a7:	sub    eax,0x6db1fd78
  41d1ac:	pop    esp
  41d1ad:	sbb    DWORD PTR [esi],edi
  41d1af:	pop    ebp
  41d1b0:	sub    eax,0x78d02a2d
  41d1b5:	adc    esp,eax
  41d1b7:	sbb    DWORD PTR [edi-0x27d97449],eax
  41d1bd:	(bad)  [ecx+0x6594177a]
  41d1c3:	mov    ds:0xd70e73e0,eax
  41d1c8:	aas    
  41d1c9:	sahf   
  41d1ca:	neg    al
  41d1cc:	aad    0xf8
  41d1ce:	add    ebp,DWORD PTR [edx]
  41d1d0:	mov    bl,ah
  41d1d2:	mov    ds,WORD PTR [edi+ecx*1]
  41d1d5:	xchg   DWORD PTR [edx-0x58b993fe],ecx
  41d1db:	icebp  
  41d1dc:	int    0x20
  41d1de:	inc    ebp
  41d1df:	fcom   DWORD PTR [esi-0x68]
  41d1e2:	push   ecx
  41d1e3:	popf   
  41d1e4:	in     al,dx
  41d1e5:	fistp  DWORD PTR [ebx]
  41d1e7:	xchg   esi,eax
  41d1e8:	xchg   esp,esp
  41d1ea:	sub    edx,ebx
  41d1ec:	mov    esi,0x54f070b6
  41d1f1:	sahf   
  41d1f2:	dec    esp
  41d1f3:	(bad)  
  41d1f4:	pop    edi
  41d1f5:	xchg   BYTE PTR [edi],al
  41d1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1f8:	xlat   BYTE PTR ds:[ebx]
  41d1f9:	aam    0x15
  41d1fb:	cmovp  edi,DWORD PTR [eax-0x4f]
  41d1ff:	jle    0x41d211
  41d201:	and    al,0xd7
  41d203:	rol    BYTE PTR [eax+0x3d17a27],cl
  41d209:	shrd   DWORD PTR ds:0x1fb16d20,ecx,0x78
  41d211:	sub    eax,0x8ac020ea
  41d216:	adc    edi,0xcb3780f9
  41d21c:	test   al,0x3b
  41d21e:	cli    
  41d21f:	in     al,0xbd
  41d221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d222:	arpl   di,dx
  41d224:	retf   0x96fd
  41d227:	jo     0x41d1ce
  41d229:	mov    al,ds:0x8c24d8ea
  41d22e:	icebp  
  41d22f:	dec    esp
  41d230:	shl    DWORD PTR [ecx-0x6b],0x27
  41d234:	in     eax,dx
  41d235:	mov    cs,WORD PTR [eax-0x41]
  41d238:	jle    0x41d239
  41d23a:	mov    edi,0x80d93cab
  41d23f:	aaa    
  41d240:	enter  0x2a28,0x4b
  41d244:	ins    DWORD PTR es:[edi],dx
  41d245:	inc    ecx
  41d246:	gs fs pusha 
  41d249:	pop    esi
  41d24a:	mov    cl,0x17
  41d24c:	loope  0x41d1f6
  41d24e:	pop    es
  41d24f:	test   eax,0x62b1b5d8
  41d254:	dec    esi
  41d255:	pushf  
  41d256:	or     al,0x92
  41d258:	add    DWORD PTR [eax],edi
  41d25a:	adc    edi,0x1e
  41d25d:	test   BYTE PTR [edi+ecx*1+0x12],cl
  41d261:	or     ch,BYTE PTR [edi*4-0x1ba8d96a]
  41d268:	mov    BYTE PTR [ecx],ah
  41d26a:	call   0xf5900424
  41d26f:	xlat   BYTE PTR ds:[ebx]
  41d270:	repz push ecx
  41d272:	mov    DWORD PTR [edi+0x31277007],ebx
  41d278:	mov    dl,BYTE PTR [esi+0x674a9863]
  41d27e:	sub    eax,0xdbd31acb
  41d283:	xlat   BYTE PTR ds:[ebx]
  41d284:	iret   
  41d285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d286:	ds scas al,BYTE PTR es:[edi]
  41d288:	mov    bh,0x8f
  41d28a:	inc    ebp
  41d28b:	fimul  WORD PTR [eax-0x46cb3b87]
  41d291:	cdq    
  41d292:	(bad)  
  41d293:	neg    al
  41d295:	addr16 push edi
  41d297:	jns    0x41d284
  41d299:	pop    ds
  41d29a:	xchg   esp,esp
  41d29c:	lods   eax,DWORD PTR ds:[esi]
  41d29d:	out    dx,eax
  41d29e:	mov    cl,0x7b
  41d2a0:	push   esp
  41d2a1:	test   eax,0x52b0cf73
  41d2a6:	mov    edx,gs
  41d2a8:	inc    ebx
  41d2a9:	shl    DWORD PTR [ecx],cl
  41d2ab:	das    
  41d2ac:	or     esp,0xffffffee
  41d2af:	sub    eax,ecx
  41d2b1:	aas    
  41d2b2:	mov    cl,0x32
  41d2b4:	les    esp,FWORD PTR [ebp+0x56]
  41d2b7:	shr    edi,0x1a
  41d2ba:	cmp    DWORD PTR ss:[esi-0x4e5f6399],ecx
  41d2c1:	pop    edx
  41d2c2:	inc    eax
  41d2c3:	cmp    al,BYTE PTR [ebp+0x36]
  41d2c6:	mov    cl,0x9
  41d2c8:	push   0xffffff9d
  41d2ca:	jmp    0x41d2c1
  41d2cc:	lds    ebx,FWORD PTR [edx+edi*4]
  41d2cf:	fnstenv [ecx+0x7]
  41d2d2:	xchg   edi,eax
  41d2d3:	dec    esp
  41d2d4:	test   al,0x76
  41d2d6:	lods   eax,DWORD PTR ds:[esi]
  41d2d7:	jns    0x41d2aa
  41d2d9:	test   al,0xb1
  41d2db:	clc    
  41d2dc:	rcr    DWORD PTR [ebx-0xe],cl
  41d2df:	dec    ebp
  41d2e0:	ja     0x41d304
  41d2e2:	not    edi
  41d2e4:	sbb    al,0xb8
  41d2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2e7:	mov    ch,0xbb
  41d2e9:	cmp    ch,al
  41d2eb:	push   edi
  41d2ec:	mov    al,al
  41d2ee:	mov    ecx,esp
  41d2f0:	or     ah,cl
  41d2f2:	jbe    0x41d2d0
  41d2f4:	adc    eax,0x94cba88b
  41d2f9:	dec    eax
  41d2fa:	fist   WORD PTR [edi-0x38535f1]
  41d300:	into   
  41d301:	shl    DWORD PTR [ecx+0x18a68a9e],1
  41d307:	dec    ebp
  41d308:	mov    ah,0x65
  41d30a:	or     eax,DWORD PTR [edi-0x5f6a6bf4]
  41d310:	xor    edx,edi
  41d312:	int    0x3b
  41d314:	inc    esi
  41d315:	setno  BYTE PTR fs:[edi+0x46]
  41d31a:	jl     0x41d355
  41d31c:	cmp    cl,cl
  41d31e:	xor    eax,0x472faaec
  41d323:	(bad)  
  41d324:	mov    BYTE PTR [esi-0x37],bl
  41d327:	and    BYTE PTR [edi],dl
  41d329:	jo     0x41d2f3
  41d32b:	aad    0x9d
  41d32d:	xchg   edx,eax
  41d32e:	pop    ecx
  41d32f:	mov    al,BYTE PTR [ebx-0x50]
  41d332:	jno    0x41d2e1
  41d334:	neg    esi
  41d336:	mov    cl,0xb9
  41d338:	mov    ecx,0xe4c16961
  41d33d:	in     al,dx
  41d33e:	cli    
  41d33f:	aam    0x61
  41d341:	repnz pop ds
  41d343:	dec    ebp
  41d344:	retf   
  41d345:	xor    eax,0xa40b1b71
  41d34a:	mov    cl,0x18
  41d34c:	mov    al,ds:0xa784b620
  41d351:	fwait
  41d352:	xor    edx,edi
  41d354:	repz adc BYTE PTR [ebx+eax*8],0x97
  41d359:	mov    ss,WORD PTR [edi]
  41d35b:	add    DWORD PTR [ecx-0x19e0552a],eax
  41d361:	inc    ecx
  41d362:	push   eax
  41d363:	fwait
  41d364:	iret   
  41d365:	ret    
  41d366:	jns    0x41d3af
  41d368:	stos   DWORD PTR es:[edi],eax
  41d369:	addr16 and eax,0x6a32998
  41d36f:	push   ecx
  41d370:	or     BYTE PTR [ecx],al
  41d372:	mov    dl,0x29
  41d374:	pop    ss
  41d375:	and    BYTE PTR [ebx],0xf5
  41d378:	addr16 xchg edi,eax
  41d37a:	mov    ebp,0xd267deca
  41d37f:	bound  ebx,QWORD PTR [ebx+0x74]
  41d382:	(bad)  
  41d383:	mov    eax,ds:0xf492c6c
  41d388:	mov    BYTE PTR [edi],cl
  41d38a:	loop   0x41d327
  41d38c:	cmp    dl,BYTE PTR [ebx+ebx*2]
  41d38f:	scas   al,BYTE PTR es:[edi]
  41d390:	in     eax,dx
  41d391:	adc    ah,BYTE PTR [bx+si-0x45]
  41d395:	add    ch,BYTE PTR gs:[edx-0x4b]
  41d399:	and    ebp,DWORD PTR [ecx+0x6f800ca7]
  41d39f:	cmp    DWORD PTR [esi+0x60],0x7bf744f0
  41d3a6:	cs aaa 
  41d3a8:	xor    ebp,esi
  41d3aa:	fadd   QWORD PTR ds:0xd5eacdbf
  41d3b0:	fcomip st,st(2)
  41d3b2:	and    BYTE PTR [ebx-0x4f],bl
  41d3b5:	pop    es
  41d3b6:	popf   
  41d3b7:	pop    esi
  41d3b8:	leave  
  41d3b9:	fnstcw WORD PTR [di-0x4535]
  41d3be:	nop
  41d3bf:	js     0x41d3ab
  41d3c1:	loope  0x41d374
  41d3c3:	dec    ecx
  41d3c4:	bound  ecx,QWORD PTR [ecx-0x8]
  41d3c7:	jns    0x41d387
  41d3c9:	push   esp
  41d3ca:	(bad)  
  41d3cb:	aas    
  41d3cc:	inc    edi
  41d3cd:	dec    ecx
  41d3ce:	dec    esp
  41d3cf:	inc    esi
  41d3d0:	loope  0x41d432
  41d3d2:	ins    DWORD PTR es:[edi],dx
  41d3d3:	mov    ebp,0x530bd7d9
  41d3d8:	xchg   ecx,eax
  41d3d9:	inc    eax
  41d3da:	inc    edi
  41d3db:	cmp    bh,bl
  41d3dd:	cdq    
  41d3de:	mov    cl,0x4b
  41d3e0:	inc    edx
  41d3e1:	cwde   
  41d3e2:	xor    cl,cl
  41d3e4:	cmp    eax,0xf1d7cca3
  41d3e9:	int3   
  41d3ea:	add    eax,0xc8a54018
  41d3ef:	add    dh,bh
  41d3f1:	test   DWORD PTR [ebp+0x67509805],esp
  41d3f7:	mov    ds:0xe8ef0f88,al
  41d3fc:	and    dl,BYTE PTR [ebp+0x657e7fcb]
  41d402:	retf   0x11ab
  41d405:	dec    ecx
  41d406:	xchg   edi,eax
  41d407:	mov    bh,0x51
  41d409:	call   0x8fabc86a
  41d40e:	or     BYTE PTR [edi+0x74],cl
  41d411:	les    esp,FWORD PTR [ecx]
  41d413:	in     eax,dx
  41d414:	aaa    
  41d415:	je     0x41d3a5
  41d417:	pop    eax
  41d418:	add    DWORD PTR [ecx],esp
  41d41a:	sahf   
  41d41b:	dec    edi
  41d41c:	mov    cl,0xd7
  41d41e:	(bad)  
  41d41f:	aad    0xbf
  41d421:	fiadd  DWORD PTR [ebp+0x6b]
  41d424:	rcr    BYTE PTR [ecx+0x3ad5d7d4],1
  41d42a:	jae    0x41d3f2
  41d42c:	and    dh,ch
  41d42e:	pop    ss
  41d42f:	aam    0x7e
  41d431:	jl     0x41d3d0
  41d433:	nop
  41d434:	xor    al,0x66
  41d436:	push   ecx
  41d437:	sbb    esi,DWORD PTR [edi-0x80]
  41d43a:	mov    cl,0x65
  41d43c:	xchg   ebx,eax
  41d43d:	idiv   ebx
  41d43f:	push   esi
  41d440:	repnz xchg esp,eax
  41d442:	sub    bh,dl
  41d444:	dec    edx
  41d445:	int    0x2e
  41d447:	dec    esp
  41d448:	mov    esp,0x88f159ed
  41d44d:	mov    al,0xde
  41d44f:	cmp    al,0xdd
  41d451:	inc    eax
  41d452:	dec    ebp
  41d453:	out    dx,al
  41d454:	jns    0x41d4bd
  41d456:	adc    DWORD PTR [eax],ebx
  41d458:	and    eax,0x9afa194d
  41d45d:	mov    ah,0xb1
  41d45f:	icebp  
  41d460:	add    eax,edx
  41d462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d463:	cmp    dh,BYTE PTR [eax+0x6f2b9d0f]
  41d469:	pop    edi
  41d46a:	jmp    0xe0d:0x5fa388b1
  41d471:	sub    eax,ebp
  41d473:	imul   ecx,DWORD PTR [eax-0x7406e46d],0x7b7b6d9b
  41d47d:	push   0xa198f700
  41d482:	mov    cl,0xe0
  41d484:	leave  
  41d485:	and    DWORD PTR [ecx-0x63],0xffffff88
  41d489:	les    edi,FWORD PTR [ebx-0x9a456e2]
  41d48f:	push   0x58d36777
  41d494:	push   ecx
  41d495:	or     DWORD PTR [eax-0x5e],0xca89a635
  41d49c:	sbb    DWORD PTR [esi-0x34],esp
  41d49f:	mov    edx,0x7ea1edc6
  41d4a4:	jl     0x41d4ca
  41d4a6:	inc    esi
  41d4a7:	fstp   DWORD PTR [eax+ecx*2]
  41d4aa:	cmc    
  41d4ab:	test   DWORD PTR [eax-0x7e],ebp
  41d4ae:	retf   0x50b4
  41d4b1:	dec    ebp
  41d4b2:	mov    cl,0x75
  41d4b4:	pusha  
  41d4b5:	leave  
  41d4b6:	inc    ebp
  41d4b7:	cmp    al,0x7f
  41d4b9:	jns    0x41d4f0
  41d4bb:	shl    DWORD PTR [ebx],0x1
  41d4be:	pop    ss
  41d4bf:	xlat   BYTE PTR ds:[ebx]
  41d4c0:	sbb    edx,ecx
  41d4c2:	sbb    BYTE PTR [ebx+0x37],dh
  41d4c5:	push   ebp
  41d4c6:	mov    cl,0xf1
  41d4c8:	(bad)  
  41d4c9:	(bad)  
  41d4cb:	nop
  41d4cc:	mov    edi,0x3847b2fc
  41d4d1:	addr16 dec ecx
  41d4d3:	imul   BYTE PTR [eax-0x65c586ad]
  41d4d9:	add    eax,0xb83671b1
  41d4de:	jle    0x41d4ba
  41d4e0:	(bad)  
  41d4e1:	lods   al,BYTE PTR ds:[esi]
  41d4e2:	out    0xd9,eax
  41d4e4:	sbb    al,0x88
  41d4e6:	in     al,dx
  41d4e7:	jo     0x41d4d0
  41d4e9:	mov    dl,0x98
  41d4eb:	mov    bl,0xdd
  41d4ed:	daa    
  41d4ee:	pop    esi
  41d4ef:	lea    esp,[ebp-0x57]
  41d4f2:	mov    cl,0x87
  41d4f4:	das    
  41d4f5:	push   esp
  41d4f6:	sahf   
  41d4f7:	js     0x41d4c0
  41d4f9:	(bad)  
  41d4fa:	xlat   BYTE PTR es:[ebx]
  41d4fc:	inc    esp
  41d4fd:	out    dx,al
  41d4fe:	lods   eax,DWORD PTR ds:[esi]
  41d4ff:	push   ebx
  41d500:	pop    ecx
  41d501:	shl    DWORD PTR [ebx-0x7c],cl
  41d504:	fwait
  41d505:	jg     0x41d536
  41d507:	ss aas 
  41d509:	call   0xbe1c:0xc3a556b1
  41d510:	sub    ecx,eax
  41d512:	sar    DWORD PTR [ebx],1
  41d514:	dec    ebp
  41d515:	sbb    ah,dl
  41d517:	jmp    0x41d4db
  41d519:	mov    ecx,0x16fafeb0
  41d51e:	aam    0x9a
  41d520:	icebp  
  41d521:	push   esi
  41d522:	cwde   
  41d523:	adc    ebx,DWORD PTR [ebp-0xe]
  41d526:	mov    cl,0x2
  41d528:	xor    al,0x9d
  41d52a:	pop    ebp
  41d52b:	std    
  41d52c:	test   DWORD PTR [eax-0x28c33cae],esp
  41d532:	add    BYTE PTR [ecx-0x79],al
  41d535:	arpl   dx,ax
  41d537:	add    esp,DWORD PTR [esi+0x1d]
  41d53a:	add    eax,0xb1e35a27
  41d53f:	push   ebp
  41d540:	les    ecx,FWORD PTR [edi-0x78]
  41d543:	xchg   ecx,eax
  41d544:	lds    edi,FWORD PTR [edi+0x1c]
  41d547:	(bad)  
  41d548:	fmul   DWORD PTR [ebp+ebp*1-0x2c]
  41d54c:	pop    es
  41d54d:	fld    DWORD PTR [eax-0x9]
  41d550:	retf   
  41d551:	add    DWORD PTR [esi+0x231c48c8],esi
  41d557:	xchg   ebp,eax
  41d558:	mov    BYTE PTR [ecx+0x75c23539],cl
  41d55e:	xor    DWORD PTR [ebx+0x46],0x384f6667
  41d565:	xor    BYTE PTR [esi-0x58af774a],bl
  41d56b:	or     ch,dh
  41d56d:	(bad)  
  41d56e:	mov    edi,0x3e67429a
  41d573:	mov    bl,0x24
  41d575:	ins    DWORD PTR es:[edi],dx
  41d576:	out    dx,al
  41d577:	mov    dh,BYTE PTR [ecx+0x2b]
  41d57a:	mov    al,0xfd
  41d57c:	xor    cl,0xcd
  41d57f:	(bad)  
  41d580:	sbb    al,0xea
  41d582:	rol    DWORD PTR [esp+edx*2],0x67
  41d586:	sbb    eax,0x5f4856ff
  41d58b:	push   eax
  41d58c:	cmp    DWORD PTR [edx-0x621cc44f],0x6970a3f6
  41d596:	dec    ecx
  41d597:	rcl    BYTE PTR [edx],1
  41d599:	cmp    dl,0x48
  41d59c:	push   0x47
  41d59e:	(bad)  
  41d59f:	stos   DWORD PTR es:[edi],eax
  41d5a0:	(bad)  
  41d5a1:	data16 mov cl,0xdc
  41d5a4:	cmp    cl,ah
  41d5a6:	cld    
  41d5a7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41d5a9:	adc    al,al
  41d5ab:	jmp    0xea85b975
  41d5b0:	jnp    0x41d58b
  41d5b2:	mov    cl,0x95
  41d5b4:	pop    ebx
  41d5b5:	adc    DWORD PTR [edi+0x2],ebp
  41d5b8:	cdq    
  41d5b9:	pop    ss
  41d5ba:	mov    cl,0xc0
  41d5bc:	pusha  
  41d5bd:	cs addr16 sbb al,0xe
  41d5c1:	fmul   DWORD PTR [ebx]
  41d5c3:	fcomp  st(1)
  41d5c5:	outs   dx,DWORD PTR ds:[esi]
  41d5c6:	jg     0x41d5b6
  41d5c8:	mov    ch,0x66
  41d5ca:	je     0x41d5c9
  41d5cc:	sub    cl,BYTE PTR [ebx]
  41d5ce:	push   edx
  41d5cf:	jae    0x41d63f
  41d5d1:	sbb    dh,BYTE PTR [ecx+0x25839fab]
  41d5d7:	(bad)  
  41d5d8:	xlat   BYTE PTR ds:[ebx]
  41d5d9:	addr16 pop es
  41d5db:	arpl   WORD PTR [ecx+0x7a18c194],bx
  41d5e1:	dec    edi
  41d5e2:	mov    cl,0xf8
  41d5e4:	retf   
  41d5e5:	xchg   edi,eax
  41d5e6:	jl     0x41d662
  41d5e8:	mov    gs,WORD PTR [ebp+esi*1-0x24]
  41d5ec:	arpl   WORD PTR [ecx],di
  41d5ee:	mov    eax,0x95c78873
  41d5f3:	loope  0x41d5a0
  41d5f5:	in     eax,dx
  41d5f6:	mov    cl,0xaf
  41d5f8:	not    DWORD PTR [ebp+ecx*1+0x230ddc05]
  41d5ff:	ror    BYTE PTR [edx],cl
  41d601:	mov    BYTE PTR [ebp+0x70e71f93],al
  41d607:	inc    ecx
  41d608:	out    0xd4,al
  41d60a:	mov    WORD PTR [eax],?
  41d60c:	enter  0x7e7,0x1f
  41d610:	inc    esp
  41d611:	gs seto ah
  41d615:	push   ss
  41d616:	pushf  
  41d617:	xlat   BYTE PTR ds:[ebx]
  41d618:	push   0xd0883195
  41d61d:	jne    0x41d5a2
  41d61f:	mov    bl,0x87
  41d621:	xor    eax,0x61a32a1c
  41d626:	add    BYTE PTR [ecx+0x59],al
  41d629:	xchg   edi,eax
  41d62a:	cmp    BYTE PTR [ebx+0x7f],cl
  41d62d:	shl    BYTE PTR [bx-0x5e2f],cl
  41d632:	loopne 0x41d60c
  41d634:	aas    
  41d635:	mov    esp,0x2d0dcab1
  41d63a:	and    esi,DWORD PTR [esi]
  41d63c:	repz or esp,DWORD PTR [esi-0x3f521b29]
  41d643:	cwde   
  41d644:	ins    DWORD PTR es:[edi],dx
  41d645:	xor    dl,BYTE PTR [edx]
  41d647:	jecxz  0x41d5d1
  41d649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d64a:	jmp    0x41d69d
  41d64c:	dec    ebp
  41d64d:	cmp    al,0x3c
  41d64f:	sti    
  41d650:	xor    esp,DWORD PTR [edi+0x15]
  41d653:	fsub   DWORD PTR [esi+0x2c]
  41d656:	in     eax,dx
  41d657:	dec    ecx
  41d658:	mov    al,0xee
  41d65a:	mov    cl,0x83
  41d65c:	ficom  DWORD PTR [edi-0x6c7e90e7]
  41d662:	inc    edi
  41d663:	(bad)  
  41d664:	sub    bl,BYTE PTR [ebx+0xc346c7c]
  41d66a:	addr16 out 0xe9,eax
  41d66d:	mov    al,ds:0xe8f0edb0
  41d672:	mov    WORD PTR [eax+eiz*1+0x42b559b8],fs
  41d679:	sbb    ch,BYTE PTR fs:[ebp+edx*4+0x32]
  41d67e:	addr16 mov bl,0x30
  41d681:	jmp    0xa1b1:0x1d007456
  41d688:	add    al,0x52
  41d68a:	cmp    bl,BYTE PTR [ebp+0x5]
  41d68d:	fcom   DWORD PTR [ecx]
  41d68f:	and    eax,0x32a36711
  41d694:	int3   
  41d695:	jno    0x41d627
  41d697:	fs pop ebx
  41d699:	dec    ebx
  41d69a:	mov    cl,0x36
  41d69c:	aaa    
  41d69d:	push   esi
  41d69e:	xor    DWORD PTR [edi-0x1e],esp
  41d6a1:	cmp    ebp,esi
  41d6a3:	stc    
  41d6a4:	and    edi,edi
  41d6a6:	inc    ecx
  41d6a7:	xlat   BYTE PTR ds:[ebx]
  41d6a8:	mov    ah,0xb4
  41d6aa:	in     eax,dx
  41d6ab:	lahf   
  41d6ac:	pop    ebx
  41d6ad:	xor    al,0xb1
  41d6af:	mov    ecx,0xb8f7dafb
  41d6b4:	outs   dx,BYTE PTR ds:[esi]
  41d6b5:	jg     0x41d70f
  41d6b7:	xlat   BYTE PTR ds:[ebx]
  41d6b8:	adc    ah,bl
  41d6ba:	jno    0x41d739
  41d6bc:	in     al,dx
  41d6bd:	scas   al,BYTE PTR es:[edi]
  41d6be:	or     eax,DWORD PTR [esi]
  41d6c0:	mov    DWORD PTR [ecx-0x38b8a504],ecx
  41d6c6:	cmp    eax,0x6a41b432
  41d6cb:	xlat   BYTE PTR ds:[ebx]
  41d6cc:	les    esi,FWORD PTR [edx]
  41d6ce:	mov    dl,0xcb
  41d6d0:	mov    ds:0x92dcd3b9,eax
  41d6d5:	sbb    eax,0x9487c3c9
  41d6da:	push   cs
  41d6db:	cmp    dl,ah
  41d6dd:	hlt    
  41d6de:	push   edx
  41d6df:	dec    edi
  41d6e0:	cld    
  41d6e1:	int    0x70
  41d6e3:	fmul   DWORD PTR [esi+0x8962b72]
  41d6e9:	scas   eax,DWORD PTR es:[edi]
  41d6ea:	ja     0x41d69a
  41d6ec:	cmp    al,0x51
  41d6ee:	mov    cl,0xdb
  41d6f0:	call   0x1e8fbd4
  41d6f5:	mov    ebp,0x9e18e81f
  41d6fa:	mov    cl,0x56
  41d6fc:	imul   ecx
  41d6fe:	cmp    al,0x2f
  41d700:	dec    ebx
  41d701:	imul   esi,DWORD PTR [ecx-0x197358d4],0x9af5e3f0
  41d70b:	mov    eax,ds:0x7b0f67ba
  41d710:	pop    esp
  41d711:	rcr    DWORD PTR [ebp-0x5e],0x31
  41d715:	or     DWORD PTR [ecx-0x2bd09449],esi
  41d71b:	jle    0x41d6aa
  41d71d:	retf   0xd448
  41d720:	test   eax,0x66312acd
  41d725:	add    eax,0x3db2b859
  41d72a:	sub    DWORD PTR [ebp+0x40cc9688],edi
  41d730:	cmp    BYTE PTR [eax],0xa3
  41d733:	and    edx,DWORD PTR [ecx-0x54db6299]
  41d739:	mov    ebx,0xc98ba070
  41d73e:	mov    cl,0x97
  41d740:	and    DWORD PTR [edi+eax*4],0x5262fdc2
  41d747:	xlat   BYTE PTR ds:[ebx]
  41d748:	scas   al,BYTE PTR es:[edi]
  41d749:	adc    ch,BYTE PTR [ebx]
  41d74b:	arpl   WORD PTR [esi+0x6e],si
  41d74e:	js     0x41d75c
  41d750:	mov    BYTE PTR [eax-0x3b],bl
  41d753:	mov    edx,0x6dc7e1e9
  41d758:	mov    ds:0xc78dd767,al
  41d75d:	mov    ebx,0x6b73803
  41d762:	mov    cl,0x32
  41d764:	mov    esp,0x25d27a78
  41d769:	push   ds
  41d76a:	aad    0xd6
  41d76c:	stos   DWORD PTR es:[edi],eax
  41d76d:	sbb    ah,ch
  41d76f:	dec    ecx
  41d770:	jbe    0x41d740
  41d772:	in     al,0xb7
  41d774:	imul   edx,DWORD PTR [ebx+0x5db74ab1],0x902c0c0f
  41d77e:	jl     0x41d779
  41d780:	(bad)  
  41d781:	xchg   esi,eax
  41d782:	sbb    dl,cl
  41d784:	das    
  41d785:	daa    
  41d786:	adc    DWORD PTR ds:0x42c2943d,esi
  41d78c:	xchg   DWORD PTR [edx+0x77],edi
  41d78f:	inc    ecx
  41d790:	pop    ebx
  41d791:	or     DWORD PTR [esi+0x67e656b6],0x12
  41d798:	clc    
  41d799:	int    0xce
  41d79b:	pop    ss
  41d79c:	or     eax,0x406f0a93
  41d7a1:	mov    ebp,0xe0d84f88
  41d7a6:	arpl   bx,dx
  41d7a8:	std    
  41d7a9:	pop    ss
  41d7aa:	and    DWORD PTR [ecx-0x27],esi
  41d7ad:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41d7af:	xlat   BYTE PTR ds:[ebx]
  41d7b0:	test   DWORD PTR [ebx-0x4ec94bb0],0xf7660812
  41d7ba:	ret    
  41d7bb:	push   esp
  41d7bc:	test   DWORD PTR [ebx-0x46],ebx
  41d7bf:	in     eax,dx
  41d7c0:	int3   
  41d7c1:	mov    edx,0x7bbf27b2
  41d7c6:	mov    ah,0xd7
  41d7c8:	in     eax,0xbb
  41d7ca:	fild   QWORD PTR [esi+esi*4-0x7aeb41de]
  41d7d1:	sub    DWORD PTR [edi-0x79],esp
  41d7d4:	jno    0x41d793
  41d7d6:	cmp    BYTE PTR [edi-0x20],dl
  41d7d9:	ins    DWORD PTR es:[edi],dx
  41d7da:	vunpckhps xmm6,xmm5,XMMWORD PTR [ecx-0x2c]
  41d7df:	ins    DWORD PTR es:[edi],dx
  41d7e0:	and    al,0x27
  41d7e2:	xchg   edx,eax
  41d7e3:	jl     0x41d776
  41d7e5:	shr    BYTE PTR [esi+0x71402558],0xfe
  41d7ec:	and    dl,dl
  41d7ee:	inc    edx
  41d7ef:	mov    ecx,ds
  41d7f1:	data16 fmul QWORD PTR [ebp+0x19a2f61c]
  41d7f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7f9:	scas   eax,DWORD PTR es:[edi]
  41d7fa:	dec    ecx
  41d7fb:	leave  
  41d7fc:	xchg   al,ch
  41d7fe:	fistp  DWORD PTR [ecx-0x488eab11]
  41d804:	rcl    DWORD PTR ds:0xde93d068,0x3b
  41d80b:	adc    eax,0xfc0ce728
  41d810:	pop    esi
  41d812:	mov    cl,0xd2
  41d814:	mov    ds:0x23a3d735,eax
  41d819:	mov    al,ds:0xdeacd793
  41d81e:	daa    
  41d81f:	lahf   
  41d820:	sbb    dh,BYTE PTR [edx]
  41d822:	xchg   edi,eax
  41d823:	aas    
  41d824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d825:	jle    0x41d84f
  41d827:	pop    edi
  41d828:	mov    BYTE PTR [esi],ah
  41d82a:	loope  0x41d7e2
  41d82c:	pop    edx
  41d82d:	lahf   
  41d82e:	inc    eax
  41d82f:	cmp    eax,0xa614796d
  41d834:	sbb    bh,ah
  41d836:	cmp    DWORD PTR [edx],eax
  41d838:	inc    edi
  41d839:	and    DWORD PTR [ecx+0x387588ba],esp
  41d83f:	push   ebx
  41d840:	sub    eax,0xd1d2d64e
  41d845:	gs out 0x8e,eax
  41d848:	jp     0x41d81f
  41d84a:	xchg   edi,eax
  41d84b:	sahf   
  41d84c:	call   0x891efdcc
  41d851:	ja     0x41d7f3
  41d853:	xchg   ebp,eax
  41d854:	dec    ecx
  41d855:	mov    esi,0x64421c2f
  41d85a:	stos   BYTE PTR es:[edi],al
  41d85b:	cvtdq2ps xmm3,xmm4
  41d85e:	call   FWORD PTR [esi-0x5dcec9c8]
  41d864:	mov    BYTE PTR [edx],bh
  41d866:	inc    esp
  41d867:	scas   al,BYTE PTR es:[edi]
  41d868:	fwait
  41d869:	pop    edi
  41d86a:	fadd   DWORD PTR [edi]
  41d86c:	and    al,0x67
  41d86e:	out    0x2,al
  41d870:	in     eax,dx
  41d871:	pop    ecx
  41d872:	arpl   WORD PTR [ebx+0x7af9a02d],si
  41d878:	sub    bl,BYTE PTR [esi-0x35]
  41d87b:	push   edi
  41d87c:	stos   BYTE PTR es:[edi],al
  41d87d:	pop    esp
  41d87e:	and    ecx,DWORD PTR [eax-0x5a]
  41d881:	fisttp WORD PTR [edi+ebp*4+0x3dec5dcd]
  41d888:	test   DWORD PTR [eax+ebx*1+0x11af5318],ecx
  41d88f:	sub    al,0xf
  41d891:	test   eax,0x969745b6
  41d896:	cs ins BYTE PTR es:[edi],dx
  41d898:	jmp    edi
  41d89a:	test   DWORD PTR [edx-0x2866f260],eax
  41d8a0:	sti    
  41d8a1:	lea    esi,[ebx-0x3028cdc1]
  41d8a7:	cs xchg ebp,esi
  41d8aa:	dec    edx
  41d8ab:	add    bl,BYTE PTR [edi]
  41d8ad:	out    dx,eax
  41d8ae:	pop    eax
  41d8af:	sbb    esi,DWORD PTR [eax+eax*8-0x6b]
  41d8b3:	xlat   BYTE PTR ds:[ebx]
  41d8b4:	or     BYTE PTR [ebp-0x1d107b06],ah
  41d8ba:	sbb    dl,dh
  41d8bc:	mov    DWORD PTR [esi-0x780d762a],eax
  41d8c2:	into   
  41d8c3:	jnp    0x41d8ec
  41d8c5:	daa    
  41d8c6:	adc    edi,0xffffffe8
  41d8c9:	outs   dx,DWORD PTR ds:[esi]
  41d8ca:	enter  0x79d4,0xc1
  41d8ce:	outs   dx,DWORD PTR ds:[esi]
  41d8cf:	ror    BYTE PTR [eax-0x333c82fa],1
  41d8d5:	and    BYTE PTR [eax+esi*8],bh
  41d8d8:	ins    DWORD PTR es:[edi],dx
  41d8d9:	addr16 es pop esi
  41d8dc:	adc    BYTE PTR [ecx-0x2a63e126],ch
  41d8e2:	mov    dh,0x9e
  41d8e4:	ret    0x4d86
  41d8e7:	adc    ch,BYTE PTR [eax]
  41d8e9:	jl     0x41d892
  41d8eb:	popa   
  41d8ec:	jmp    0x6089:0xdb2b9085
  41d8f3:	xlat   BYTE PTR ds:[ebx]
  41d8f4:	les    eax,FWORD PTR [eax]
  41d8f6:	dec    ebx
  41d8f7:	inc    ecx
  41d8f8:	bound  ebx,QWORD PTR [ebx+0x8]
  41d8fb:	adc    al,0x70
  41d8fd:	or     al,0xca
  41d8ff:	fdivp  st(7),st
  41d901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d902:	mov    cl,0xa5
  41d904:	inc    DWORD PTR [ebp-0x4e]
  41d907:	jns    0x41d90b
  41d909:	sbb    eax,0xd59dc36e
  41d90e:	xlat   BYTE PTR ds:[ebx]
  41d90f:	js     0xc902223b
  41d915:	mov    esi,0xe288b020
  41d91a:	xchg   edx,eax
  41d91b:	lea    esp,[edi]
  41d91d:	pusha  
  41d91e:	arpl   di,di
  41d920:	cmp    esp,DWORD PTR [esi-0x5e]
  41d923:	pop    eax
  41d924:	out    0x34,eax
  41d926:	sti    
  41d927:	pop    edx
  41d928:	test   BYTE PTR [edx+0x5ecc1b6f],cl
  41d92e:	sub    ecx,ebx
  41d930:	mov    BYTE PTR [ecx],ah
  41d932:	xchg   ebp,eax
  41d933:	ror    BYTE PTR [esi],0x19
  41d936:	dec    esp
  41d937:	cwde   
  41d938:	inc    esi
  41d939:	inc    ebx
  41d93a:	push   edx
  41d93b:	mov    dh,0xa6
  41d93d:	addr16 inc esi
  41d93f:	xchg   esp,eax
  41d940:	repz inc ebp
  41d942:	xchg   ecx,eax
  41d943:	ror    DWORD PTR [eax+0x5c9a806e],cl
  41d949:	mov    cl,0x62
  41d94b:	out    dx,eax
  41d94c:	sbb    eax,0xb3786c67
  41d951:	xor    eax,0x41356d14
  41d956:	mov    dh,0x17
  41d958:	ficomp WORD PTR [eax+eiz*8]
  41d95b:	fistp  QWORD PTR [eax-0x32180374]
  41d961:	pusha  
  41d962:	clc    
  41d963:	mov    edx,0xf7f2862e
  41d968:	test   DWORD PTR [ecx+edi*1],esi
  41d96b:	push   0xffffff88
  41d96d:	sbb    DWORD PTR ds:0x2f3284bf,ebp
  41d973:	or     BYTE PTR [ebx-0x59],ah
  41d976:	jecxz  0x41d9f5
  41d978:	adc    bl,BYTE PTR [esi-0x51777ed0]
  41d97e:	jle    0x41d90f
  41d980:	push   ss
  41d981:	shl    BYTE PTR [ecx+eiz*1-0x77ae86ec],cl
  41d988:	mov    ch,0x8b
  41d98a:	popa   
  41d98b:	xlat   BYTE PTR ds:[ebx]
  41d98c:	or     ebp,DWORD PTR [ecx+0x2b77fdeb]
  41d992:	push   ebx
  41d993:	xor    DWORD PTR [ebp+ebp*4-0x3130a83f],edi
  41d99a:	ds (bad) 
  41d99c:	neg    DWORD PTR [ecx-0x418d3631]
  41d9a2:	lods   eax,DWORD PTR ds:[esi]
  41d9a3:	rcr    BYTE PTR [edx-0x60b8d5d6],1
  41d9a9:	imul   esp,edi,0xde8e8585
  41d9af:	adc    DWORD PTR [ebp+0x34],edx
  41d9b2:	xchg   BYTE PTR [edi],cl
  41d9b4:	lods   eax,DWORD PTR ds:[esi]
  41d9b5:	bound  eax,QWORD PTR [edx+0x40e3d9d7]
  41d9bb:	sub    ecx,DWORD PTR [edi-0x77e2b84b]
  41d9c1:	loopne 0x41d9b9
  41d9c3:	call   DWORD PTR [ebp-0x499aac45]
  41d9c9:	sub    edx,DWORD PTR [esi]
  41d9cb:	repz mov edx,0xf791313c
  41d9d1:	push   cs
  41d9d2:	fpatan 
  41d9d4:	out    dx,al
  41d9d5:	push   esp
  41d9d6:	mov    cl,0x71
  41d9d8:	adc    DWORD PTR [ebp+0x494b3748],ebx
  41d9de:	ss aam 0x8e
  41d9e1:	out    0x79,al
  41d9e3:	out    dx,al
  41d9e4:	int    0x79
  41d9e6:	popa   
  41d9e7:	es mov gs:0x81991229,eax
  41d9ee:	or     al,0x79
  41d9f0:	mov    dh,dh
  41d9f2:	push   ds
  41d9f3:	push   ecx
  41d9f5:	or     al,0x25
  41d9f7:	rol    BYTE PTR [edi-0x5f546170],1
  41d9fd:	pop    es
  41d9fe:	mov    bl,0xfa
  41da00:	fs loop 0x41d9b4
  41da03:	test   DWORD PTR [edx+eax*8],ecx
  41da06:	outs   dx,DWORD PTR ds:[esi]
  41da07:	jns    0x41da87
  41da09:	mov    ebp,0xf487d77c
  41da0e:	jne    0x41d9eb
  41da10:	leave  
  41da11:	dec    eax
  41da12:	ror    esp,1
  41da14:	mov    dh,bl
  41da16:	lahf   
  41da17:	aas    
  41da18:	add    dh,BYTE PTR [ecx]
  41da1a:	inc    eax
  41da1b:	or     BYTE PTR [eax],dh
  41da1d:	addr16 push es
  41da1f:	push   esp
  41da20:	sahf   
  41da21:	cld    
  41da22:	and    dl,BYTE PTR [ebx-0xfae5429]
  41da28:	mov    BYTE PTR [edx-0x70],bh
  41da2b:	loope  0x41d9c4
  41da2d:	arpl   WORD PTR [eax-0x8],si
  41da30:	xor    bl,BYTE PTR [ebp-0x11]
  41da33:	ins    DWORD PTR es:[edi],dx
  41da34:	mov    bh,bl
  41da36:	push   edi
  41da37:	cwde   
  41da38:	iret   
  41da39:	jge    0x41dab2
  41da3b:	mov    ah,0xbd
  41da3d:	bound  ebp,QWORD PTR [ebx]
  41da3f:	shl    DWORD PTR [edx-0x1f4e2fce],1
  41da45:	push   0xe497daa3
  41da4a:	xor    DWORD PTR [ecx-0x6e017144],ebx
  41da50:	and    edi,0x85a6fb0f
  41da56:	inc    ecx
  41da57:	cmp    BYTE PTR [ecx+0x7c],0x63
  41da5b:	xlat   BYTE PTR ds:[ebx]
  41da5c:	out    0x94,eax
  41da5e:	loop   0x41dada
  41da60:	test   eax,0x841cccb8
  41da65:	popf   
  41da66:	pop    esi
  41da67:	inc    eax
  41da68:	push   esp
  41da69:	jne    0x41dac5
  41da6b:	xlat   BYTE PTR ds:[ebx]
  41da6c:	mov    ebx,es
  41da6e:	xchg   BYTE PTR [ebx+0x38],dl
  41da71:	dec    edi
  41da72:	mov    edi,0xcee22129
  41da77:	rol    dl,1
  41da79:	push   esp
  41da7a:	mov    eax,ds:0xb331c7bc
  41da7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da80:	push   esp
  41da81:	addr16 inc edx
  41da83:	sub    dh,ah
  41da85:	mul    esi
  41da87:	in     al,dx
  41da88:	sub    cl,bl
  41da8a:	dec    edi
  41da8b:	ror    DWORD PTR [eax+0x11ead023],cl
  41da91:	out    0xda,eax
  41da93:	pop    edi
  41da94:	mov    al,ds:0xf4d7f381
  41da99:	dec    ecx
  41da9a:	das    
  41da9b:	add    BYTE PTR [ebx],ch
  41da9d:	or     dh,bh
  41da9f:	out    dx,eax
  41daa0:	loopne 0x41da85
  41daa2:	xlat   BYTE PTR gs:[ebx]
  41daa4:	test   eax,0x6bb257f6
  41daa9:	(bad)  
  41daaa:	mov    esi,0x5edd8cc9
  41daaf:	sbb    al,0xf1
  41dab1:	pop    edi
  41dab2:	and    cl,BYTE PTR gs:[eax-0x12e8d0b9]
  41dab9:	mov    DWORD PTR [edi+0x21e5fbd7],edi
  41dabf:	ins    DWORD PTR es:[edi],dx
  41dac0:	xchg   edi,eax
  41dac1:	test   DWORD PTR [edi+eax*1-0x78],ecx
  41dac5:	mov    esp,0x23d9c206
  41daca:	cmp    al,0x99
  41dacc:	pop    ds
  41dacd:	addr16 mov eax,ds:0x6005
  41dad1:	div    cl
  41dad3:	outs   dx,BYTE PTR ds:[esi]
  41dad4:	mov    ds,WORD PTR [eax-0x4f]
  41dad7:	mov    esi,0x25e62101
  41dadc:	stc    
  41dadd:	jo     0x41dafb
  41dadf:	xlat   BYTE PTR ds:[ebx]
  41dae0:	push   es
  41dae1:	(bad)  
  41dae2:	fmul   st(2),st
  41dae4:	arpl   bp,ax
  41dae6:	xchg   esi,eax
  41dae7:	retf   
  41dae8:	mov    BYTE PTR [ebp-0x1e],dh
  41daeb:	sub    eax,0xf569df2d
  41daf0:	dec    ecx
  41daf1:	addr16 sbb al,0x52
  41daf4:	jae    0x41da76
  41daf6:	addr16 push esp
  41daf8:	clc    
  41daf9:	sbb    DWORD PTR [edi+0xd3611cf],edi
  41daff:	xchg   edi,eax
  41db00:	es jns 0x41db63
  41db03:	adc    ebx,DWORD PTR [edi]
  41db05:	jnp    0x41dac1
  41db07:	sub    ch,BYTE PTR [ebp-0x59a2679f]
  41db0d:	gs mov dh,0xd1
  41db10:	cmp    edx,eax
  41db12:	pop    ecx
  41db14:	push   0x9bd61e96
  41db19:	addr16 mov ebx,0xd9449839
  41db1f:	add    ah,BYTE PTR [eax+0x78]
  41db22:	jno    0x41dae3
  41db24:	fild   DWORD PTR [edx]
  41db26:	ss call 0x493b:0xbc936714
  41db2e:	push   eax
  41db2f:	jp     0x41db2d
  41db31:	push   0x969c5b01
  41db36:	gs pop ss
  41db38:	enter  0x222e,0x7b
  41db3c:	adc    edx,DWORD PTR [edx+0x6c]
  41db3f:	xlat   BYTE PTR ds:[ebx]
  41db40:	jnp    0x41db61
  41db42:	daa    
  41db43:	fcomp  DWORD PTR [eax+0x25]
  41db46:	mov    ebp,0xf0f39a92
  41db4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db4c:	mov    ah,BYTE PTR [ebp+0x62]
  41db4f:	ja     0x41db15
  41db51:	jns    0x41dbbe
  41db53:	adc    bl,dh
  41db55:	addr16 push ebx
  41db57:	cwde   
  41db58:	xchg   edx,eax
  41db59:	fs ds (bad) 
  41db5c:	xor    eax,0x7f17b0d1
  41db61:	mov    edx,0x74edaa20
  41db66:	pop    ecx
  41db67:	jmp    0x319d6d04
  41db6c:	ss inc ecx
  41db6e:	pop    ecx
  41db6f:	xchg   edi,eax
  41db70:	inc    ecx
  41db71:	addr16 dec esp
  41db73:	in     eax,0x64
  41db75:	scas   al,BYTE PTR es:[edi]
  41db76:	dec    ebp
  41db77:	dec    BYTE PTR [eax-0x3d2f2ec]
  41db7d:	sub    al,al
  41db7f:	or     al,0xf0
  41db81:	pop    edx
  41db82:	popf   
  41db83:	pop    ds
  41db84:	mov    BYTE PTR [ecx+ebp*8+0x59fe08b5],ah
  41db8b:	sbb    cl,BYTE PTR [eax+0x27b9eb00]
  41db91:	push   ecx
  41db92:	iret   
  41db93:	hlt    
  41db94:	fmul   QWORD PTR [ebp+0x4c139b34]
  41db9a:	mov    cl,0xa6
  41db9c:	add    eax,0x983f72e7
  41dba1:	jp     0x41db5b
  41dba3:	jnp    0x41dc14
  41dba5:	jb     0x41db34
  41dba7:	push   edi
  41dba8:	sub    eax,0xe82efbb9
  41dbad:	jns    0x41dc1a
  41dbaf:	inc    esi
  41dbb0:	aam    0x20
  41dbb2:	sub    DWORD PTR [edi+0x4a],esp
  41dbb5:	mov    al,ds:0x57588764
  41dbba:	xchg   esi,eax
  41dbbb:	dec    eax
  41dbbc:	mov    BYTE PTR [ecx-0x33],bl
  41dbbf:	stc    
  41dbc0:	and    edi,eax
  41dbc2:	jecxz  0x41dc2a
  41dbc4:	inc    esi
  41dbc5:	addr16 jbe 0x41dbdf
  41dbc8:	pop    es
  41dbc9:	loop   0x41dc07
  41dbcb:	xor    eax,0xbcc9906d
  41dbd0:	cmc    
  41dbd1:	clc    
  41dbd2:	mov    cl,0x8f
  41dbd4:	dec    ebp
  41dbd5:	mov    al,0x8b
  41dbd7:	retf   0x95ee
  41dbda:	mov    bh,dl
  41dbdc:	sub    dh,BYTE PTR [edx]
  41dbde:	add    ah,ah
  41dbe0:	jecxz  0x41db80
  41dbe2:	cmp    al,0x76
  41dbe4:	mov    BYTE PTR [ebp-0x2a],ah
  41dbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbe8:	mov    dl,0x1d
  41dbea:	jb     0x41dc26
  41dbec:	je     0x41dc55
  41dbee:	xlat   BYTE PTR ds:[ebx]
  41dbef:	shr    edx,0x98
  41dbf2:	out    0xa1,al
  41dbf4:	and    al,0xf6
  41dbf6:	jmp    0x479c9ce0
  41dbfb:	xlat   BYTE PTR ds:[ebx]
  41dbfc:	nop
  41dbfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbfe:	push   eax
  41dbff:	xchg   DWORD PTR [esi-0x11280c0c],ebp
  41dc05:	out    0x6,eax
  41dc07:	stos   DWORD PTR es:[edi],eax
  41dc08:	arpl   sp,dx
  41dc0a:	ds pop ds
  41dc0c:	mov    dh,al
  41dc0e:	in     eax,dx
  41dc0f:	imul   edi,esi,0xffffff8b
  41dc12:	cmc    
  41dc13:	retf   0x67a1
  41dc16:	jae    0x41dc5e
  41dc18:	inc    ebx
  41dc19:	lea    edx,[esi+0x19]
  41dc1c:	int    0xa0
  41dc1e:	int3   
  41dc1f:	xchg   esi,eax
  41dc20:	mov    ah,dl
  41dc22:	out    dx,al
  41dc23:	cld    
  41dc24:	call   0xa567:0x546518a4
  41dc2b:	xchg   ecx,eax
  41dc2c:	or     ebx,0xffffffd0
  41dc2f:	stc    
  41dc30:	jmp    0x41dc5d
  41dc32:	jno    0x41dc1d
  41dc34:	xor    ebx,ecx
  41dc36:	cmp    ch,bh
  41dc38:	pop    ebp
  41dc39:	addr16 test al,0xa8
  41dc3c:	mov    eax,ss
  41dc3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc3f:	dec    ebx
  41dc40:	xchg   edi,eax
  41dc41:	cwde   
  41dc42:	mov    cl,0x94
  41dc44:	test   ebx,eax
  41dc46:	jecxz  0x41dbed
  41dc48:	hlt    
  41dc49:	xchg   edx,eax
  41dc4a:	push   esp
  41dc4b:	xlat   BYTE PTR ds:[ebx]
  41dc4c:	and    ch,bh
  41dc4e:	cs push ds
  41dc50:	dec    edx
  41dc51:	cmp    al,0x75
  41dc53:	out    dx,eax
  41dc54:	std    
  41dc55:	imul   ebx,DWORD PTR [edx+0x17],0x18
  41dc59:	xchg   esi,eax
  41dc5a:	mov    dh,0x5d
  41dc5c:	sbb    al,0x53
  41dc5f:	mov    dl,0xb8
  41dc61:	push   ss
  41dc62:	out    0xf0,eax
  41dc64:	push   edx
  41dc65:	pop    ebp
  41dc66:	sub    dl,BYTE PTR ds:0xb8388688
  41dc6c:	lock mov bl,0xfd
  41dc6f:	ror    BYTE PTR [eax+0x345b0cb4],cl
  41dc75:	sbb    ebp,edi
  41dc77:	mov    esp,0xf5d8757c
  41dc7c:	fbld   TBYTE PTR [edi+0xb]
  41dc7f:	sub    al,0x8a
  41dc81:	in     al,0xd4
  41dc83:	dec    DWORD PTR [eax+0x3b006d36]
  41dc89:	mov    eax,0x66cbbf03
  41dc8e:	(bad)  
  41dc8f:	inc    eax
  41dc90:	fs jo  0x41dc1b
  41dc93:	mov    ah,0x5d
  41dc95:	mov    dh,0xe5
  41dc97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc98:	shl    DWORD PTR [ebx],1
  41dc9a:	mov    cl,0xb5
  41dc9c:	or     DWORD PTR [edx-0x74],eax
  41dc9f:	dec    ebp
  41dca0:	into   
  41dca1:	test   DWORD PTR [edi-0x29],ecx
  41dca4:	loopne 0x41dd0b
  41dca6:	fwait
  41dca7:	scas   eax,DWORD PTR es:[edi]
  41dca8:	push   eax
  41dca9:	cmp    BYTE PTR [edx+0x46],dl
  41dcac:	(bad)  
  41dcad:	cli    
  41dcae:	(bad)  
  41dcaf:	mov    ds:0xd72de8bc,al
  41dcb4:	push   0x78005a05
  41dcb9:	pop    esp
  41dcba:	jl     0x41dcd8
  41dcbc:	and    dh,BYTE PTR ds:[ecx+0x488111e4]
  41dcc3:	enter  0x5166,0xb1
  41dcc7:	push   esi
  41dcc8:	ds inc ebx
  41dcca:	and    ebx,DWORD PTR [ebp-0x2839fe66]
  41dcd0:	jmp    0x41dcec
  41dcd2:	mov    ecx,0xff7355fb
  41dcd7:	xchg   al,al
  41dcd9:	xor    al,0xa6
  41dcdb:	shr    BYTE PTR [esi],cl
  41dcdd:	jbe    0x41dca3
  41dcdf:	stos   DWORD PTR es:[edi],eax
  41dce0:	or     dh,dh
  41dce2:	fisub  DWORD PTR [edx-0x4a]
  41dce5:	pusha  
  41dce6:	js     0x41dc7b
  41dce8:	or     DWORD PTR [ecx+0x73],ebx
  41dceb:	out    0xa0,al
  41dced:	cmp    DWORD PTR [ecx],edx
  41dcef:	add    BYTE PTR [eax-0x7b47fa5f],al
  41dcf5:	je     0x41dc96
  41dcf7:	push   ebp
  41dcf8:	je     0x41dcf8
  41dcfa:	jno    0x41dd24
  41dcfc:	mov    WORD PTR [eax-0x6afa28a4],gs
  41dd02:	mov    ebx,0x3f460de5
  41dd07:	xchg   edi,eax
  41dd08:	mov    ah,dl
  41dd0a:	retf   0x5c09
  41dd0d:	(bad)  
  41dd0f:	dec    ebx
  41dd10:	push   ebx
  41dd11:	addr16 je 0x41dd43
  41dd14:	repz sbb ah,BYTE PTR [esi-0x731457ef]
  41dd1b:	es pop esi
  41dd1d:	out    0x19,eax
  41dd1f:	push   esi
  41dd20:	mov    edx,0x2730abfa
  41dd25:	addr16 pushf 
  41dd27:	aad    0x4d
  41dd29:	push   es
  41dd2a:	xor    DWORD PTR [ebp+0x74],edi
  41dd2d:	lahf   
  41dd2e:	mov    dh,0xda
  41dd30:	sbb    eax,0x4875712a
  41dd35:	jo     0xa4a48540
  41dd3b:	(bad)  
  41dd3c:	dec    ebx
  41dd3d:	scas   eax,DWORD PTR es:[edi]
  41dd3e:	out    dx,eax
  41dd3f:	push   edi
  41dd40:	pop    ebx
  41dd41:	xor    eax,0xfa8802a7
  41dd46:	addr16 mov edx,0x209d3337
  41dd4c:	sbb    ah,BYTE PTR [edi-0x1e]
  41dd4f:	jns    0x41dd57
  41dd51:	mov    dh,0xb
  41dd53:	fst    QWORD PTR ds:0x8354b113
  41dd59:	push   es
  41dd5a:	push   ebx
  41dd5b:	enter  0xe6f,0x2b
  41dd5f:	mov    eax,ds:0x9c5e67a5
  41dd64:	in     eax,0x1b
  41dd66:	xchg   ebp,eax
  41dd67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd68:	xchg   esi,eax
  41dd69:	jae    0x41dd1c
  41dd6b:	sbb    dl,al
  41dd6d:	aas    
  41dd6e:	add    eax,0x4adb9931
  41dd73:	xlat   BYTE PTR ds:[ebx]
  41dd74:	and    dh,0x2b
  41dd77:	call   0x9288:0x255b3165
  41dd7e:	test   eax,0x99da3027
  41dd83:	hlt    
  41dd84:	dec    eax
  41dd85:	data16 sbb BYTE PTR [ebx-0x53],0xb6
  41dd8a:	mov    ds:0x3aa244c1,al
  41dd8f:	cmp    ebx,edi
  41dd91:	fdiv   QWORD PTR [ecx-0x9b99e13]
  41dd97:	enter  0xd764,0x1f
  41dd9b:	(bad)  
  41dd9c:	or     DWORD PTR [ebp+0x65bd292b],edi
  41dda2:	pop    esi
  41dda3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dda4:	mov    al,0xe2
  41dda6:	mov    cl,0x60
  41dda8:	pop    ebx
  41dda9:	dec    ecx
  41ddaa:	imul   edx,DWORD PTR [edi-0x28e2703b],0xdd508b0b
  41ddb4:	inc    eax
  41ddb5:	add    DWORD PTR [ebp+0x5b],esi
  41ddb8:	mov    ebx,0x7e586b11
  41ddbd:	(bad)
  41ddc0:	mov    eax,ds:0x5098f50c
  41ddc5:	jo     0x41dd9f
  41ddc7:	lahf   
  41ddc8:	xchg   edx,eax
  41ddc9:	sub    eax,0xb2043ab1
  41ddce:	mov    bl,0x4a
  41ddd1:	pop    es
  41ddd2:	mov    al,0x66
  41ddd4:	int    0x24
  41ddd6:	pop    ebx
  41ddd7:	push   esp
  41ddd8:	scas   eax,DWORD PTR es:[edi]
  41ddd9:	mov    bl,0x4c
  41dddb:	xchg   esi,eax
  41dddc:	pop    esp
  41dddd:	outs   dx,DWORD PTR ds:[esi]
  41ddde:	and    edi,edx
  41dde0:	gs push 0x1be7a445
  41dde6:	mov    edi,DWORD PTR ds:0x51ba0788
  41ddec:	dec    esi
  41dded:	sahf   
  41ddee:	les    edi,FWORD PTR [ebp-0x72]
  41ddf1:	pop    sp
  41ddf3:	xor    al,BYTE PTR [esi-0x58]
  41ddf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddf7:	cli    
  41ddf8:	xor    BYTE PTR [edi+0x1a88d80d],0xcb
  41ddff:	mov    ch,0x4e
  41de01:	adc    BYTE PTR [edx+0x58],al
  41de04:	addr16 pop bp
  41de07:	(bad)  
  41de08:	xor    esp,DWORD PTR [eax-0x4f803d20]
  41de0e:	mov    cl,0x67
  41de10:	and    al,BYTE PTR [ecx]
  41de12:	jns    0x41de4b
  41de14:	(bad)  
  41de15:	idiv   BYTE PTR [ebp-0x43cb1e2b]
  41de1b:	sbb    esi,esi
  41de1d:	add    dh,bl
  41de1f:	dec    al
  41de21:	retf   
  41de22:	out    dx,al
  41de23:	xchg   ebp,eax
  41de24:	mov    dh,bl
  41de26:	sar    BYTE PTR [ebp+0x0],0xfa
  41de2a:	mov    edi,0xf967761a
  41de2f:	push   ebp
  41de30:	stc    
  41de31:	push   ebx
  41de32:	rcl    DWORD PTR [ecx-0x10394f02],0x89
  41de39:	mov    DWORD PTR [ebp-0x237b4850],edx
  41de3f:	arpl   WORD PTR [ebx-0x39],dx
  41de42:	test   al,0xfa
  41de44:	pop    ebx
  41de45:	addr16 das 
  41de47:	aas    
  41de48:	maskmovq mm6,mm5
  41de4b:	dec    ebp
  41de4c:	mov    ah,0x5d
  41de4e:	scas   eax,DWORD PTR es:[edi]
  41de4f:	int3   
  41de50:	jmp    0x1be9:0x40f77199
  41de57:	inc    edx
  41de58:	(bad)  
  41de59:	mov    al,BYTE PTR [ecx+0x27]
  41de5c:	das    
  41de5d:	call   DWORD PTR [ecx+0x4d9e802e]
  41de63:	retf   
  41de64:	xchg   edi,eax
  41de65:	add    bh,BYTE PTR [edi]
  41de67:	pop    ss
  41de68:	and    al,0xe1
  41de6a:	mov    eax,ds:0xb131055b
  41de6f:	lds    edx,FWORD PTR [edi]
  41de71:	pop    es
  41de72:	dec    edx
  41de73:	jns    0x41deb6
  41de75:	push   0xffffffc1
  41de77:	xlat   BYTE PTR ds:[ebx]
  41de78:	xor    eax,0x65ec015a
  41de7d:	sbb    ebx,edx
  41de7f:	mov    cs,WORD PTR [eax-0x2dd7c45a]
  41de85:	mov    edi,0x64284bf5
  41de8a:	retf   
  41de8b:	add    cl,BYTE PTR [ebp+0x2d]
  41de8e:	pop    ebx
  41de8f:	jmp    0x37db179c
  41de94:	mov    BYTE PTR [eax+0x5],bl
  41de97:	xor    eax,0x7e7e059b
  41de9c:	adc    BYTE PTR [esi+edi*4+0x21],ah
  41dea0:	jnp    0x41ded3
  41dea2:	pop    eax
  41dea3:	mov    esp,0x3206028
  41dea8:	or     DWORD PTR [ecx],0xffffffcf
  41deab:	pop    es
  41deac:	jne    0x41df1e
  41deae:	mov    cl,0x16
  41deb0:	rcl    BYTE PTR [edi+0x644402a9],1
  41deb6:	ret    0x2bd1
  41deb9:	xor    BYTE PTR [esi+0x2952407e],bl
  41debf:	adc    BYTE PTR [eax-0x36a3fa35],cl
  41dec5:	ja     0x41deb4
  41dec7:	sahf   
  41dec8:	aaa    
  41dec9:	xchg   DWORD PTR [ebx-0x2a3b6227],ebp
  41decf:	and    DWORD PTR [eax+0x7f0d1834],ecx
  41ded5:	jmp    0x78d9a299
  41deda:	sub    eax,0xee67cb38
  41dedf:	pop    edx
  41dee0:	enter  0xd1ad,0xd6
  41dee4:	mov    bl,0x90
  41dee6:	push   esi
  41dee7:	jnp    0x41dec4
  41dee9:	jl     0x41def6
  41deeb:	sub    edi,DWORD PTR [edx]
  41deed:	test   DWORD PTR [ebx+eiz*2-0x2dceb6c0],ebp
  41def4:	mov    cl,0x8a
  41def6:	and    ecx,DWORD PTR [ebx]
  41def8:	mov    ah,0x66
  41defa:	out    0x10,eax
  41defc:	fnstsw WORD PTR [eax-0x18]
  41deff:	pusha  
  41df00:	add    eax,DWORD PTR [ebx+0x74f58bd5]
  41df06:	mov    cl,0x87
  41df08:	(bad)  
  41df09:	test   BYTE PTR [edx-0x13d460ab],bh
  41df0f:	xlat   BYTE PTR ds:[ebx]
  41df10:	jo     0x41ded3
  41df12:	and    ebx,DWORD PTR [esp+ebx*1]
  41df15:	js     0x41df1b
  41df17:	cmp    eax,DWORD PTR [edi+0x5a49f09b]
  41df1d:	(bad)  
  41df1f:	fcom   DWORD PTR [eax+0x72]
  41df22:	out    dx,eax
  41df23:	in     al,dx
  41df24:	addr16 mov bl,0x35
  41df27:	add    eax,0x579fc75c
  41df2c:	sub    BYTE PTR [ebx],dl
  41df2e:	jbe    0x41dedd
  41df30:	mov    BYTE PTR ds:0x95ab7d36,ah
  41df36:	in     eax,dx
  41df37:	mov    cl,0xd1
  41df39:	sbb    BYTE PTR [bx+si+0x3cb2],dl
  41df3e:	ret    
  41df3f:	inc    ebx
  41df40:	imul   esp,DWORD PTR [ebx],0xffffffb1
  41df43:	lods   al,BYTE PTR ds:[esi]
  41df44:	div    DWORD PTR [ebx+0x5d]
  41df47:	(bad)  
  41df48:	shl    BYTE PTR ds:0x45a82ada,0xfd
  41df4f:	xlat   BYTE PTR ds:[ebx]
  41df50:	dec    esp
  41df51:	inc    esi
  41df52:	and    edx,0x1104a3f2
  41df58:	mov    BYTE PTR [eax+0x2407fe39],cl
  41df5e:	adc    BYTE PTR [edx+0x6a],al
  41df61:	addr16 loop 0x41df49
  41df64:	mov    ds:0x9baf67c8,al
  41df69:	dec    eax
  41df6a:	shl    DWORD PTR [edx-0x2],0x8a
  41df6e:	mov    al,0x2d
  41df70:	in     al,dx
  41df71:	xchg   ebp,eax
  41df72:	xor    eax,0x7c56a337
  41df77:	adc    bh,BYTE PTR [ecx-0x3c]
  41df7a:	outs   dx,BYTE PTR ds:[esi]
  41df7b:	ja     0x41df42
  41df7d:	out    0x9d,eax
  41df7f:	xlat   BYTE PTR ds:[ebx]
  41df80:	mov    cl,0x2b
  41df82:	or     BYTE PTR [ebp+0x6e],ch
  41df85:	sbb    al,bh
  41df87:	cld    
  41df88:	cmc    
  41df89:	lahf   
  41df8a:	mov    cl,0x8b
  41df8c:	jge    0x41df22
  41df8e:	jbe    0x41df46
  41df90:	adc    eax,0xc1d784c3
  41df95:	mov    WORD PTR [esi-0xcbabf5],fs
  41df9b:	and    eax,0xedb143f1
  41dfa0:	xor    al,0xee
  41dfa2:	fsubr  QWORD PTR [ebp+0x7a]
  41dfa5:	es jnp 0x41df7f
  41dfa8:	xchg   edx,eax
  41dfa9:	ds cmp eax,0xd3b3d3dc
  41dfaf:	les    ecx,FWORD PTR [eax+0x58aade10]
  41dfb5:	(bad)  
  41dfb7:	out    0xe,eax
  41dfb9:	addr16 hlt 
  41dfbb:	jge    0x41df9d
  41dfbd:	jo     0x41df6d
  41dfbf:	into   
  41dfc0:	dec    sp
  41dfc2:	mov    cl,0xd3
  41dfc4:	cmp    DWORD PTR ds:0x69bdf556,esi
  41dfca:	mov    dh,0xd6
  41dfcc:	ret    
  41dfcd:	mov    cl,0x33
  41dfcf:	mov    dh,0x5e
  41dfd1:	push   ss
  41dfd2:	mov    eax,0xb6897f37
  41dfd7:	mov    esi,DWORD PTR [edx+0x85b2645]
  41dfdd:	push   edi
  41dfde:	pushf  
  41dfdf:	(bad)  
  41dfe0:	into   
  41dfe1:	scas   al,BYTE PTR es:[di]
  41dfe3:	dec    edx
  41dfe4:	sbb    BYTE PTR [edi+0x2878520f],ch
  41dfea:	mov    cl,0x2f
  41dfec:	push   esp
  41dfed:	aad    0x28
  41dfef:	inc    esi
  41dff0:	mov    bl,BYTE PTR [esi+0x1aa9d0a6]
  41dff6:	mov    al,0xbf
  41dff8:	add    edi,0xffffffe2
  41dffb:	cmp    eax,0x5fb16ec2
  41e000:	mov    ah,0x95
  41e002:	(bad)  
  41e003:	fadd   QWORD PTR [eax+0x6b]
  41e006:	sub    BYTE PTR [ebp+0x6aa66773],0xb3
  41e00d:	xchg   edi,eax
  41e00e:	js     0x41e026
  41e010:	cmp    BYTE PTR [edi-0x33],ch
  41e013:	stc    
  41e014:	mov    DWORD PTR [eax-0x35],esp
  41e017:	repz test al,0xe6
  41e01a:	xchg   esi,eax
  41e01b:	push   eax
  41e01d:	sahf   
  41e01e:	dec    ebp
  41e01f:	aaa    
  41e020:	je     0x41dfbb
  41e022:	jb     0x41dffb
  41e024:	frstor [edx-0x56]
  41e027:	xchg   ebp,eax
  41e028:	jae    0x41e069
  41e02a:	into   
  41e02b:	rol    DWORD PTR [ebx+0x789b6826],0x39
  41e032:	xor    BYTE PTR [esp+edx*8+0x10bf4910],dl
  41e039:	lds    esi,FWORD PTR fs:[edx]
  41e03c:	pop    ecx
  41e03d:	sbb    eax,0x64388e6b
  41e042:	adc    DWORD PTR [ebp+0x20],0xfffffff1
  41e046:	mov    cl,0x88
  41e048:	dec    ecx
  41e049:	jecxz  0x41e070
  41e04b:	outs   dx,BYTE PTR ds:[esi]
  41e04c:	cmp    DWORD PTR [eax-0x20],0xffffffad
  41e050:	inc    esi
  41e051:	add    BYTE PTR gs:[edi+0x29],dh
  41e055:	cld    
  41e056:	popf   
  41e057:	sbb    al,0xe8
  41e059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e05a:	jmp    0x41e06e
  41e05c:	mov    BYTE PTR [esi-0x3f],bl
  41e05f:	xor    BYTE PTR [edi],bh
  41e061:	shl    bh,cl
  41e063:	cs add al,0x4b
  41e066:	addr16 jb 0x41e00c
  41e069:	addr16 mov esi,0x7f6bafef
  41e06f:	pop    edx
  41e070:	mov    ah,dl
  41e072:	pop    eax
  41e073:	fisubr DWORD PTR [eax-0x24]
  41e076:	data16 cmp BYTE PTR [edi+0x834eb7b],al
  41e07d:	test   eax,0x5ba59575
  41e082:	sub    DWORD PTR [eax+edx*2-0x7797e3fd],0x647e2a8e
  41e08d:	or     al,0x95
  41e08f:	mov    cl,0x9c
  41e091:	js     0x41e0a3
  41e093:	xchg   BYTE PTR [edx],bh
  41e095:	out    0x56,eax
  41e097:	ins    BYTE PTR es:[edi],dx
  41e098:	jnp    0x41e04e
  41e09a:	adc    eax,0x8c998840
  41e09f:	js     0x41e0a7
  41e0a1:	out    dx,al
  41e0a2:	neg    DWORD PTR [ebx+0x58]
  41e0a5:	pop    eax
  41e0a6:	dec    ecx
  41e0a7:	loopne 0x41e0b1
  41e0a9:	and    esp,DWORD PTR [ecx]
  41e0ab:	sbb    BYTE PTR [edx-0x7796d863],ch
  41e0b1:	dec    edi
  41e0b2:	ret    0xb770
  41e0b5:	mov    DWORD PTR [esi],ebx
  41e0b7:	fld    QWORD PTR [edi+eiz*2-0x15b9f6b2]
  41e0be:	arpl   WORD PTR [edi+eax*1],ax
  41e0c1:	mov    BYTE PTR [ecx+0x35962588],dh
  41e0c7:	jno    0x41e119
  41e0c9:	jl     0x41e112
  41e0cb:	xlat   BYTE PTR ds:[ebx]
  41e0cc:	mov    dh,0xe
  41e0ce:	int3   
  41e0cf:	jns    0x41e088
  41e0d1:	jge    0x41e0df
  41e0d3:	loope  0x41e05d
  41e0d5:	dec    ebp
  41e0d6:	call   0x675e:0xa207cef5
  41e0dd:	addr16 aas 
  41e0df:	out    0xe3,eax
  41e0e1:	and    edx,DWORD PTR [esp+edi*4-0x744b95a0]
  41e0e8:	jne    0x41e0e7
  41e0ea:	jle    0x41e10d
  41e0ec:	or     dh,ah
  41e0ee:	outs   dx,BYTE PTR ds:[esi]
  41e0ef:	ret    
  41e0f0:	push   eax
  41e0f1:	addr16 pop ss
  41e0f3:	mov    ?,WORD PTR [edx]
  41e0f5:	xor    ebx,edx
  41e0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f8:	aad    0x10
  41e0fa:	mov    cl,0x1e
  41e0fc:	dec    esp
  41e0fd:	das    
  41e0fe:	pop    esp
  41e0ff:	mov    ds:0xd79996d4,eax
  41e104:	add    BYTE PTR [edi],dl
  41e106:	jmp    0xff7b6a6c
  41e10b:	or     al,0x88
  41e10d:	ret    0x9d6c
  41e110:	aaa    
  41e111:	or     al,0xe0
  41e113:	es mov esi,0x9274fe67
  41e119:	inc    eax
  41e11a:	pop    esi
  41e11b:	mov    ebx,0xc9b1cbfc
  41e120:	sub    eax,0x3105f970
  41e125:	jecxz  0x41e0e5
  41e127:	xlat   BYTE PTR ds:[ebx]
  41e128:	jge    0x41e18d
  41e12a:	das    
  41e12b:	dec    edi
  41e12c:	out    dx,al
  41e12d:	mov    eax,0xbe88c456
  41e132:	les    esp,FWORD PTR [edx]
  41e134:	push   ss
  41e135:	gs mov eax,0xa067d63d
  41e13b:	ja     0x41e0de
  41e13d:	mov    dl,0x41
  41e13f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e140:	add    edi,DWORD PTR [edx]
  41e142:	inc    ecx
  41e143:	cmp    al,BYTE PTR [eax-0x55]
  41e146:	jmp    0xb15f7a0a
  41e14b:	mov    esi,0xd877a4cd
  41e150:	add    al,BYTE PTR [edx-0x25]
  41e153:	xlat   BYTE PTR ds:[ebx]
  41e154:	jge    0x41e1b8
  41e156:	mov    ebx,0x47f85c00
  41e15b:	mov    bl,0x87
  41e15d:	inc    esi
  41e15e:	pop    es
  41e15f:	stos   BYTE PTR es:[edi],al
  41e160:	pushf  
  41e161:	pop    eax
  41e162:	or     ebp,DWORD PTR [esp+ebx*2-0x47280c66]
  41e169:	mov    eax,DWORD PTR [esi]
  41e16b:	inc    edi
  41e16c:	es mov bh,0xcb
  41e16f:	in     al,0x20
  41e171:	aad    0xb1
  41e173:	jmp    0xaf79:0x99f61046
  41e17a:	or     al,0x21
  41e17c:	stos   DWORD PTR es:[edi],eax
  41e17d:	addr16 push esp
  41e17f:	pop    ss
  41e180:	and    al,0xdd
  41e182:	pop    esp
  41e183:	sub    eax,0xeb474bf4
  41e188:	mov    ah,bh
  41e18a:	mov    eax,ds:0x1c3bdae0
  41e18f:	dec    eax
  41e190:	cli    
  41e191:	pusha  
  41e192:	dec    ebp
  41e193:	mov    bl,0x47
  41e195:	xor    BYTE PTR [eax],ch
  41e197:	test   DWORD PTR [ebp-0x775c29b4],0x415d8f8b
  41e1a1:	dec    esi
  41e1a2:	xchg   edx,eax
  41e1a3:	xor    DWORD PTR [ebx],0xb1ebcf7a
  41e1a9:	out    0x2a,eax
  41e1ab:	addr16 pop es
  41e1ad:	mov    esp,0x58850d53
  41e1b2:	mov    ch,0x9c
  41e1b4:	(bad)  [edi-0x23]
  41e1b7:	inc    eax
  41e1b8:	popa   
  41e1b9:	hlt    
  41e1ba:	inc    ecx
  41e1bb:	mov    ebp,0xc819e4bd
  41e1c0:	or     ecx,esp
  41e1c2:	inc    ecx
  41e1c3:	nop
  41e1c4:	loope  0x41e1e7
  41e1c6:	mov    ebx,0x71edd654
  41e1cb:	jge    0x41e202
  41e1cd:	popa   
  41e1ce:	mov    cl,0x70
  41e1d0:	push   0xffffffc6
  41e1d2:	mov    ebp,0x5032e2aa
  41e1d7:	xlat   BYTE PTR ds:[ebx]
  41e1d8:	sub    DWORD PTR [edx],edx
  41e1da:	or     DWORD PTR [eax+edx*4-0x50],ebp
  41e1de:	loopne 0x41e1a1
  41e1e0:	adc    DWORD PTR [ecx],0xab667ec8
  41e1e6:	(bad)  
  41e1e7:	cmp    al,0x6d
  41e1e9:	addr16 push ebx
  41e1eb:	add    DWORD PTR [ecx-0x2b28f459],edx
  41e1f1:	fwait
  41e1f2:	add    al,BYTE PTR [ecx+0x2c]
  41e1f5:	push   ebx
  41e1f6:	cmp    eax,0x5c498427
  41e1fb:	frstor [edx+0xefe3279]
  41e201:	clc    
  41e202:	rcr    DWORD PTR [edx+0x2a],1
  41e205:	in     al,dx
  41e206:	adc    edx,edi
  41e208:	pop    ebp
  41e209:	retf   0x42d7
  41e20c:	cmp    al,0x57
  41e20e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e20f:	adc    al,0x88
  41e211:	into   
  41e212:	shr    BYTE PTR [edx+eax*2+0x7d],0xed
  41e217:	xchg   edi,eax
  41e218:	test   BYTE PTR [ecx-0x26],dh
  41e21b:	or     ah,BYTE PTR [edi+0x67]
  41e21e:	jge    0x41e296
  41e220:	rol    DWORD PTR [eax-0x43],1
  41e223:	push   ecx
  41e224:	mov    BYTE PTR [ebx],dl
  41e226:	mul    DWORD PTR [ecx+0x4506b813]
  41e22c:	retf   
  41e22d:	outs   dx,BYTE PTR ds:[esi]
  41e22e:	jmp    0xb18e8bc1
  41e233:	and    dl,BYTE PTR [esi-0x66d7c7f6]
  41e239:	xchg   ebx,eax
  41e23a:	xor    ch,BYTE PTR [eax+ecx*8-0x1285fc53]
  41e241:	(bad)  ds:0x566759a9
  41e247:	jg     0x41e26d
  41e249:	dec    eax
  41e24a:	call   0x29b6a334
  41e24f:	lea    ecx,[eax-0x4e36ad2c]
  41e255:	mov    ch,0x80
  41e257:	or     eax,0xa4767a8e
  41e25c:	loope  0x41e285
  41e25e:	ds jg  0x41e1ec
  41e261:	xchg   ecx,eax
  41e262:	aam    0xf7
  41e264:	mov    BYTE PTR [ecx-0x58],dh
  41e267:	outs   dx,DWORD PTR ds:[esi]
  41e268:	pop    ecx
  41e269:	cmp    eax,0x5fd0ea4e
  41e26e:	sti    
  41e26f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e270:	mov    BYTE PTR [edx],dh
  41e272:	ja     0x41e2c6
  41e274:	mov    fs,WORD PTR [edx]
  41e276:	out    dx,al
  41e277:	jbe    0x41e201
  41e279:	shr    BYTE PTR ds:0x73721f69,cl
  41e27f:	mov    esi,0x5ef67a9
  41e284:	repnz mov ecx,0x93200792
  41e28a:	mov    dl,0x73
  41e28c:	dec    eax
  41e28d:	or     al,0xc4
  41e28f:	sar    ch,0xbf
  41e292:	ja     0x41e223
  41e294:	shl    BYTE PTR [edi+0x7e],cl
  41e297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e298:	fmul   st,st(7)
  41e29a:	or     eax,0xb140f0cc
  41e29f:	pushf  
  41e2a0:	sub    dh,BYTE PTR [ebx-0x60290568]
  41e2a6:	mov    dl,bh
  41e2a8:	mov    ecx,0xffd4d5a8
  41e2ad:	icebp  
  41e2ae:	mov    edx,0xa3068140
  41e2b3:	imul   edi,DWORD PTR [eax+eax*8-0x5f],0x94ee30db
  41e2bb:	xlat   BYTE PTR ds:[ebx]
  41e2bc:	sbb    edx,esp
  41e2be:	cmp    DWORD PTR [ecx],edx
  41e2c0:	shl    esp,1
  41e2c2:	jae    0x41e248
  41e2c4:	retf   0x59ec
  41e2c7:	dec    eax
  41e2c8:	mov    BYTE PTR [edi],ch
  41e2ca:	cld    
  41e2cb:	fdiv   QWORD PTR [ebx]
  41e2cd:	outs   dx,DWORD PTR ds:[esi]
  41e2ce:	xchg   edx,eax
  41e2cf:	lods   eax,DWORD PTR ds:[esi]
  41e2d0:	mov    BYTE PTR [ecx-0x75],cl
  41e2d3:	in     al,dx
  41e2d4:	dec    eax
  41e2d5:	aas    
  41e2d6:	sar    DWORD PTR [ecx],1
  41e2d8:	mov    cl,0x67
  41e2da:	add    BYTE PTR [ebx-0x3a],0xf1
  41e2de:	pop    ss
  41e2df:	ret    0xcb62
  41e2e2:	mov    cl,0xb2
  41e2e4:	sbb    bh,BYTE PTR [edx]
  41e2e6:	or     ebx,esp
  41e2e8:	or     BYTE PTR [esp+ebx*8+0x2b6730a2],0x26
  41e2f0:	mov    ebp,0x4bc4e2f7
  41e2f5:	test   eax,0x6f70acb1
  41e2fa:	or     ch,dh
  41e2fc:	push   0x9fd4e713
  41e301:	adc    DWORD PTR [edx],ecx
  41e303:	sbb    edx,DWORD PTR [esi+0x55]
  41e306:	imul   ebp,ecx,0x31b2965e
  41e30c:	xor    edi,DWORD PTR [ebx]
  41e30e:	imul   eax,DWORD PTR [edx+0x4feaffab],0x494d6789
  41e318:	imul   BYTE PTR [eax+eiz*4+0x79]
  41e31c:	push   0x4978b125
  41e321:	in     eax,dx
  41e322:	push   cs
  41e323:	shl    BYTE PTR [edi],0xc4
  41e326:	imul   ebx,eax,0xffffffbf
  41e329:	xchg   esi,eax
  41e32a:	or     ebx,eax
  41e32c:	or     ch,BYTE PTR [edx+0x5288d158]
  41e332:	and    al,0xd0
  41e334:	outs   dx,DWORD PTR ds:[esi]
  41e335:	repz mov cl,0x9a
  41e338:	and    DWORD PTR [edi+edi*8],edi
  41e33b:	mov    al,ds:0xc9f11396
  41e340:	fisub  WORD PTR [eax]
  41e342:	xchg   esi,eax
  41e343:	aam    0x15
  41e345:	(bad)  
  41e346:	scas   al,BYTE PTR es:[edi]
  41e347:	jmp    0x9888:0xaab87c38
  41e34e:	sbb    eax,0xf5d04d43
  41e353:	jb     0x41e345
  41e355:	pushfw 
  41e357:	sahf   
  41e358:	add    DWORD PTR [ebp+0x58],ebp
  41e35b:	sub    eax,0xe720a286
  41e360:	push   ebx
  41e361:	sub    edx,eax
  41e363:	dec    esi
  41e364:	sbb    DWORD PTR [esi],0x9f7a783b
  41e36a:	xor    DWORD PTR [edx-0x43],edx
  41e36d:	out    dx,al
  41e36e:	xor    eax,0x92fa4ed7
  41e373:	add    ebp,DWORD PTR [eax]
  41e375:	cmp    DWORD PTR [esi],edi
  41e377:	push   eax
  41e378:	pop    DWORD PTR [edi-0x2]
  41e37b:	sbb    al,bh
  41e37d:	out    0x13,eax
  41e37f:	das    
  41e380:	enter  0x401f,0xd7
  41e384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e385:	mov    cl,0xa
  41e387:	dec    edx
  41e388:	aam    0xa1
  41e38a:	mov    ecx,0xb69c3891
  41e38f:	fimul  DWORD PTR [ebp-0x38f35c56]
  41e395:	push   ebp
  41e396:	aad    0x70
  41e398:	dec    ebx
  41e399:	pop    eax
  41e39a:	xchg   ecx,eax
  41e39b:	mov    bl,0x7f
  41e39d:	xchg   bx,ax
  41e39f:	jns    0x41e36d
  41e3a1:	mov    edi,0x876715c9
  41e3a6:	mov    bl,0x8b
  41e3a8:	mov    BYTE PTR [ebx-0x2faf67c0],cl
  41e3ae:	push   0x15df0899
  41e3b3:	xlat   BYTE PTR ds:[ebx]
  41e3b4:	inc    ecx
  41e3b5:	jmp    0x1bf6:0xecec7e3b
  41e3bc:	xchg   DWORD PTR [esp+edi*2],esi
  41e3bf:	shl    DWORD PTR [ecx+0x7],0x22
  41e3c3:	ss stos BYTE PTR es:[edi],al
  41e3c5:	mov    eax,0xe19d88b5
  41e3cb:	adc    al,0x36
  41e3cd:	xchg   esp,eax
  41e3ce:	mov    esp,0x8a60b7e3
  41e3d3:	out    dx,al
  41e3d4:	dec    ebp
  41e3d5:	loop   0x41e374
  41e3d7:	addr16 rcr eax,1
  41e3da:	xor    BYTE PTR [ebx-0x65],dh
  41e3dd:	sub    cl,dl
  41e3df:	les    ecx,FWORD PTR [eax]
  41e3e1:	into   
  41e3e2:	outs   dx,DWORD PTR ds:[esi]
  41e3e3:	push   ss
  41e3e4:	fwait
  41e3e5:	dec    edx
  41e3e6:	mov    ebx,0x76678047
  41e3eb:	fisubr WORD PTR [edi+ecx*2]
  41e3ee:	or     eax,0xb1fdaa8c
  41e3f3:	xor    esp,DWORD PTR [edi]
  41e3f5:	scas   eax,DWORD PTR es:[edi]
  41e3f6:	mov    ecx,0x27aacab3
  41e3fb:	xlat   BYTE PTR ds:[ebx]
  41e3fc:	in     al,dx
  41e3fd:	scas   al,BYTE PTR es:[edi]
  41e3fe:	xor    bl,0x87
  41e401:	pop    edi
  41e402:	mov    edi,DWORD PTR [edx+0x5b6d7e87]
  41e408:	push   ecx
  41e409:	cmp    eax,0xd5712451
  41e40e:	es mov bh,0x2f
  41e411:	retf   
  41e412:	repz xlat BYTE PTR ds:[ebx]
  41e414:	out    dx,al
  41e415:	fnstenv [edi+ebx*8-0x75]
  41e419:	cmp    bh,cl
  41e41b:	lods   al,BYTE PTR ds:[esi]
  41e41c:	mov    BYTE PTR [edx-0x52],dl
  41e41f:	pushf  
  41e420:	xchg   esp,eax
  41e421:	je     0x41e46c
  41e423:	shl    ebp,1
  41e425:	addr16 or esp,ebx
  41e428:	or     BYTE PTR [eax-0x22],dh
  41e42b:	cs ret 
  41e42d:	jle    0x41e3e5
  41e42f:	and    ebx,DWORD PTR [edx]
  41e431:	rcr    BYTE PTR [esi-0x2fd8a741],1
  41e437:	out    0x2e,eax
  41e439:	adc    eax,0x670a3f3c
  41e43e:	push   ebp
  41e43f:	ret    
  41e440:	and    eax,0x6c066c40
  41e445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e446:	mov    cl,0x13
  41e448:	or     DWORD PTR [edx+0x62],0xffffffd1
  41e44c:	mov    ebp,0xf8d77794
  41e451:	xor    BYTE PTR [esi+0x48b640a0],ch
  41e457:	sub    BYTE PTR [ecx+0x68e2a877],al
  41e45d:	mov    ebx,0xc7a0d9a2
  41e462:	adc    eax,0x7e67ae5e
  41e467:	and    bl,bh
  41e469:	add    BYTE PTR [ebx],dl
  41e46b:	sbb    ecx,DWORD PTR [edx+0x17]
  41e46e:	push   esp
  41e46f:	mov    dh,0xd0
  41e471:	mov    ds:0x9a885bb6,eax
  41e476:	xchg   ebp,eax
  41e477:	inc    edi
  41e478:	mov    ds:0x1f2ceb5a,eax
  41e47d:	test   ebx,esp
  41e47f:	xlat   BYTE PTR ds:[ebx]
  41e480:	aad    0x7e
  41e482:	(bad)  
  41e484:	rcl    ecx,0x64
  41e487:	gs jp  0x41e417
  41e48a:	mov    cl,0xfc
  41e48c:	scas   eax,DWORD PTR es:[edi]
  41e48d:	stos   BYTE PTR es:[edi],al
  41e48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e48f:	in     eax,0x35
  41e491:	pop    esi
  41e492:	je     0x41e46a
  41e494:	push   es
  41e495:	int    0xfc
  41e497:	xor    bl,dl
  41e499:	or     ebx,DWORD PTR [eax+0x34]
  41e49c:	push   eax
  41e49d:	fcom   QWORD PTR [esi+ebp*1+0x583b9b85]
  41e4a4:	xchg   edx,eax
  41e4a5:	sbb    al,0x39
  41e4a7:	daa    
  41e4a8:	(bad)  
  41e4a9:	daa    
  41e4aa:	or     eax,0x266503d7
  41e4af:	hlt    
  41e4b0:	mov    eax,0x92304c4c
  41e4b5:	mov    esi,0x4788097e
  41e4ba:	sahf   
  41e4bb:	in     eax,0x7
  41e4bd:	rcr    eax,1
  41e4bf:	xlat   BYTE PTR ds:[ebx]
  41e4c0:	push   edi
  41e4c1:	(bad)  
  41e4c2:	in     eax,dx
  41e4c3:	(bad)  
  41e4c4:	mov    bl,0x8e
  41e4c6:	push   esi
  41e4c7:	inc    eax
  41e4c8:	mov    BYTE PTR [ecx],cl
  41e4ca:	fst    QWORD PTR [ebp-0x65]
  41e4cd:	xchg   DWORD PTR [esi],ebx
  41e4cf:	lods   eax,DWORD PTR ds:[esi]
  41e4d0:	sub    ah,BYTE PTR [edi+0x9]
  41e4d3:	loope  0x41e497
  41e4d5:	mov    DWORD PTR [ebx],edx
  41e4d7:	ud0    ecx,DWORD PTR [esi+0x80d1cb1]
  41e4de:	xor    BYTE PTR [ebp-0x28135e0b],bl
  41e4e4:	pop    ds
  41e4e5:	ja     0x41e4a8
  41e4e7:	mov    edx,0x521488e
  41e4ec:	test   ebp,esi
  41e4ee:	mov    dh,bh
  41e4f0:	cld    
  41e4f1:	repnz add ecx,DWORD PTR [edi+0x26]
  41e4f5:	int    0xe6
  41e4f7:	(bad)  
  41e4f8:	mov    ebp,0x9b2a8994
  41e4fd:	jnp    0x41e4e4
  41e4ff:	push   0xffffff87
  41e501:	adc    eax,0x3e9a724d
  41e506:	retf   
  41e507:	daa    
  41e508:	add    edi,esp
  41e50a:	scas   eax,DWORD PTR es:[edi]
  41e50b:	xor    al,0xd0
  41e50d:	xchg   edx,eax
  41e50e:	es sub al,0x88
  41e511:	jno    0x41e538
  41e513:	mov    ecx,0xd7cc4a3b
  41e518:	inc    ebx
  41e519:	xchg   ebp,eax
  41e51a:	xor    DWORD PTR [esi],ebp
  41e51c:	imul   ebp,DWORD PTR [ecx-0x59],0xa1b68ea8
  41e523:	les    ebp,FWORD PTR [edi-0x73]
  41e526:	mov    dl,0x76
  41e528:	(bad)  
  41e529:	mov    ebx,0x9f511f35
  41e52e:	or     edx,edi
  41e530:	adc    edx,DWORD PTR [ebx-0x4d]
  41e533:	dec    edx
  41e534:	rol    DWORD PTR [eax],1
  41e536:	clc    
  41e537:	xchg   esp,eax
  41e538:	mov    al,bh
  41e53a:	dec    esp
  41e53b:	mov    bl,ah
  41e53d:	test   DWORD PTR [edx+0x46],edi
  41e540:	jge    0x41e4c9
  41e542:	pop    ebx
  41e543:	xlat   BYTE PTR ds:[ebx]
  41e544:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41e546:	gs (bad) 
  41e548:	(bad)  
  41e549:	cld    
  41e54a:	enter  0x88b2,0xc9
  41e54e:	stos   DWORD PTR es:[edi],eax
  41e54f:	in     al,dx
  41e550:	ficomp WORD PTR [ebx-0x3a]
  41e553:	(bad)  
  41e554:	mov    edi,0xc7d709df
  41e559:	out    dx,eax
  41e55a:	xor    esi,DWORD PTR [edx]
  41e55c:	lock popa 
  41e55e:	and    eax,0x376d88b7
  41e563:	dec    esp
  41e564:	aad    0x1f
  41e566:	lods   eax,DWORD PTR ds:[esi]
  41e567:	xchg   ecx,eax
  41e568:	mov    al,0x67
  41e56a:	scas   eax,DWORD PTR es:[edi]
  41e56b:	data16 loope 0x41e505
  41e56e:	mov    al,0xa6
  41e570:	fsubp  st(5),st
  41e572:	mov    cl,0x97
  41e574:	xchg   esi,eax
  41e575:	ror    BYTE PTR [esi-0x31],0x3c
  41e579:	sub    dl,cl
  41e57b:	xlat   BYTE PTR ds:[ebx]
  41e57c:	imul   ecx,edi,0x39f129be
  41e582:	and    dl,BYTE PTR [edi+edi*4+0x7ed8135c]
  41e589:	add    al,0x99
  41e58b:	xchg   edi,eax
  41e58c:	ds ret 
  41e58e:	adc    al,0xb8
  41e590:	jmp    0x3645:0x90973467
  41e597:	jle    0x41e5be
  41e599:	gs and edi,ebp
  41e59c:	mov    edi,0xb6a21ad
  41e5a1:	out    0xcd,eax
  41e5a3:	jno    0x41e52c
  41e5a5:	push   ds
  41e5a6:	fcmovnb st,st(5)
  41e5a8:	(bad)  
  41e5a9:	pop    ebx
  41e5aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5ab:	aas    
  41e5ac:	mov    cl,ah
  41e5ae:	shr    BYTE PTR [eax],cl
  41e5b0:	push   edx
  41e5b1:	es in  eax,dx
  41e5b3:	mov    cl,0x88
  41e5b5:	adc    eax,0xd06461fd
  41e5ba:	mov    ah,0xeb
  41e5bc:	cmp    ah,BYTE PTR [edi-0x30]
  41e5bf:	aam    0xcf
  41e5c1:	call   0x30da269a
  41e5c6:	mov    cl,0xbe
  41e5c8:	in     eax,0xf5
  41e5ca:	loop   0x41e5c5
  41e5cc:	(bad)  
  41e5cd:	jnp    0x41e647
  41e5cf:	xlat   BYTE PTR ds:[ebx]
  41e5d0:	int    0xb0
  41e5d2:	xor    ebx,ebp
  41e5d4:	stos   DWORD PTR es:[edi],eax
  41e5d5:	mov    dh,0xa9
  41e5d7:	fisttp DWORD PTR [eax-0xf9c1e6f]
  41e5dd:	(bad)  
  41e5df:	mov    BYTE PTR [edx],bl
  41e5e1:	mov    DWORD PTR [ebx+0x2fbb4d4],edx
  41e5e7:	adc    DWORD PTR [edi+ebx*2+0x69],eax
  41e5eb:	jl     0x41e65b
  41e5ed:	and    BYTE PTR [ebx-0x1a176f59],cl
  41e5f3:	div    bl
  41e5f5:	xchg   DWORD PTR [eax],esi
  41e5f7:	lods   eax,DWORD PTR ds:[esi]
  41e5f8:	pop    esp
  41e5f9:	add    al,0x11
  41e5fb:	xlat   BYTE PTR ds:[ebx]
  41e5fc:	cmp    BYTE PTR [edx+0x685d8b71],cl
  41e602:	loope  0x41e5ae
  41e604:	mov    BYTE PTR [edi],al
  41e606:	mov    al,0xec
  41e608:	out    0x32,eax
  41e60a:	jp     0xbfbb4d1e
  41e610:	jle    0x41e648
  41e612:	adc    ebp,DWORD PTR [esi+edi*1-0x5b84e8e]
  41e619:	adc    al,0xf5
  41e61b:	and    ecx,0x30
  41e61e:	mov    esp,ebx
  41e620:	or     eax,0x8884f88
  41e625:	cld    
  41e626:	and    eax,0xb1adccab
  41e62b:	pop    eax
  41e62c:	inc    edx
  41e62d:	mov    ebp,0xced8f093
  41e632:	mov    fs,WORD PTR [edi+0x23]
  41e635:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41e637:	mul    ebp
  41e639:	cmp    dl,BYTE PTR [edi+ebx*4-0x5470d27e]
  41e640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e641:	out    0xeb,eax
  41e643:	jmp    0xb736b98e
  41e648:	push   edx
  41e649:	sbb    di,bp
  41e64c:	sub    dh,BYTE PTR [esp+edi*1+0x315cddde]
  41e653:	pop    ebx
  41e654:	pop    es
  41e655:	xor    ecx,esp
  41e657:	stos   DWORD PTR es:[edi],eax
  41e658:	les    esp,FWORD PTR [esi+0x41]
  41e65b:	or     DWORD PTR [eax+edi*8+0x278b0461],ebp
  41e662:	inc    esi
  41e663:	inc    ebx
  41e664:	gs test al,0x97
  41e667:	ror    DWORD PTR [edi-0x222347cc],1
  41e66d:	addr16 out 0x4a,eax
  41e670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e671:	bound  esi,QWORD PTR [edx-0x29]
  41e674:	adc    eax,DWORD PTR [edx]
  41e676:	jae    0x41e6e2
  41e678:	jb     0x41e62f
  41e67a:	int    0x66
  41e67c:	fsub   QWORD PTR [eax-0x430026bb]
  41e682:	(bad)  
  41e683:	aaa    
  41e684:	mov    eax,0x77f9161
  41e689:	jne    0x41e6fd
  41e68b:	xchg   ebx,eax
  41e68c:	out    dx,al
  41e68d:	fnstenv [eax-0x66cb9297]
  41e693:	ror    DWORD PTR [eax],cl
  41e695:	or     ecx,DWORD PTR [esi+0x6c]
  41e698:	jecxz  0x41e6ee
  41e69a:	pop    edi
  41e69b:	push   edi
  41e69c:	mov    BYTE PTR [ebp+0x2c],ch
  41e69f:	mov    ss,WORD PTR [ebx+0x7dcb3c5]
  41e6a5:	sub    ax,0xab8
  41e6a9:	loop   0x41e711
  41e6ab:	adc    BYTE PTR cs:[edi+0x7c89bc07],bh
  41e6b2:	sbb    BYTE PTR [ebp+0x78],dh
  41e6b5:	daa    
  41e6b6:	imul   ebp,DWORD PTR [ebx-0x286da58f],0x11f1015b
  41e6c0:	leave  
  41e6c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6c2:	out    dx,eax
  41e6c3:	loope  0x41e64a
  41e6c5:	mov    DWORD PTR [esi-0x44825673],esi
  41e6cb:	pop    ss
  41e6cc:	arpl   di,bx
  41e6ce:	sbb    edx,edi
  41e6d0:	push   edx
  41e6d1:	jle    0x41e6db
  41e6d3:	jmp    0x41e6db
  41e6d5:	sub    ah,BYTE PTR [edx]
  41e6d7:	aaa    
  41e6d8:	js     0x41e6b3
  41e6da:	inc    ebx
  41e6db:	mov    esp,0xa273f088
  41e6e0:	mov    bl,0xe7
  41e6e2:	icebp  
  41e6e3:	pop    ds
  41e6e4:	inc    esp
  41e6e5:	addr16 xor al,0xb4
  41e6e8:	pop    eax
  41e6e9:	cmp    DWORD PTR [ebp+ebx*2-0x1c4f5169],edi
  41e6f0:	data16 xor BYTE PTR [edi+0x459efa02],ch
  41e6f7:	jb     0x41e698
  41e6f9:	addr16 pop ecx
  41e6fb:	xchg   ebx,eax
  41e6fc:	imul   esp,DWORD PTR [esi+0x6dd5d50d],0xffffff89
  41e703:	scas   al,BYTE PTR es:[edi]
  41e704:	jb     0x41e6ea
  41e706:	cmp    ch,BYTE PTR [ebp+0x26424928]
  41e70c:	push   ss
  41e70d:	or     BYTE PTR [ecx+0x7d],cl
  41e710:	test   eax,0xb555ad69
  41e715:	mov    esp,0xa2ab9c51
  41e71a:	pop    ebp
  41e71b:	and    dh,BYTE PTR [eax-0x39]
  41e71e:	mov    cl,0x2f
  41e720:	push   esp
  41e721:	repz jno 0x41e74c
  41e724:	inc    esp
  41e725:	jnp    0x41e6fb
  41e727:	xor    DWORD PTR [eax+0x67],edi
  41e72a:	test   BYTE PTR [ebx-0x2ee3bf4f],ch
  41e730:	jne    0x41e724
  41e732:	mov    al,0x23
  41e734:	icebp  
  41e735:	mov    al,ds:0x3b6afd6f
  41e73a:	ins    DWORD PTR es:[edi],dx
  41e73b:	retf   
  41e73c:	sbb    DWORD PTR [edi-0x3b],esp
  41e73f:	xchg   esi,eax
  41e740:	(bad)  
  41e742:	bound  edx,QWORD PTR [ecx+0x7]
  41e745:	scas   eax,DWORD PTR es:[edi]
  41e746:	mov    cl,0x34
  41e748:	mov    ebx,0x22a5e7de
  41e74d:	mov    edi,0xc2b1d74b
  41e752:	push   eax
  41e753:	jae    0x41e7a7
  41e755:	pop    edi
  41e756:	out    dx,al
  41e757:	and    BYTE PTR [eax-0x162d0c4e],cl
  41e75d:	inc    ebp
  41e75e:	scas   al,BYTE PTR es:[edi]
  41e75f:	nop
  41e760:	lock fs (bad) 
  41e763:	(bad)  
  41e764:	mov    ecx,0x8f37a6b
  41e769:	fwait
  41e76a:	popa   
  41e76b:	jae    0x41e6f5
  41e76d:	aad    0xa4
  41e76f:	sbb    ebx,DWORD PTR ds:0x473fc738
  41e775:	push   0xf282339a
  41e77a:	push   ecx
  41e77b:	sti    
  41e77c:	mov    eax,ds:0x88d5576a
  41e781:	mov    al,0x6
  41e783:	dec    edx
  41e784:	adc    al,0x8b
  41e786:	xchg   ecx,eax
  41e787:	push   esp
  41e788:	sub    al,0x67
  41e78a:	mov    al,0x86
  41e78c:	mov    cl,0x2
  41e78e:	call   0x2177224
  41e793:	outs   dx,BYTE PTR ds:[esi]
  41e794:	mov    BYTE PTR [ebx+ecx*1-0x20a35233],dl
  41e79b:	or     al,0xd5
  41e79d:	sbb    BYTE PTR [bx+0x7f],dh
  41e7a1:	cmp    esi,DWORD PTR [ebp+0x3b]
  41e7a4:	mov    ecx,0xe140b10e
  41e7a9:	imul   ebx
  41e7ab:	push   ss
  41e7ac:	rcl    BYTE PTR [eax],1
  41e7ae:	not    bh
  41e7b0:	stos   BYTE PTR es:[edi],al
  41e7b1:	push   esp
  41e7b2:	add    eax,0x20a2b08b
  41e7b7:	outs   dx,DWORD PTR ds:[esi]
  41e7b8:	mov    BYTE PTR [eax],bh
  41e7ba:	in     eax,0xdf
  41e7bc:	push   ebx
  41e7bd:	scas   al,BYTE PTR es:[edi]
  41e7be:	int3   
  41e7bf:	aad    0x6e
  41e7c1:	addr16 pop eax
  41e7c3:	sbb    DWORD PTR [ecx],esp
  41e7c5:	outs   dx,BYTE PTR ds:[esi]
  41e7c6:	pop    ds
  41e7c7:	pop    eax
  41e7c8:	mov    al,0x66
  41e7ca:	mov    cl,0x9f
  41e7cc:	fs inc cl
  41e7cf:	add    BYTE PTR [esi+0x60],cl
  41e7d2:	xchg   esp,eax
  41e7d3:	xlat   BYTE PTR ds:[ebx]
  41e7d4:	cli    
  41e7d5:	dec    edx
  41e7d6:	push   0xfffffff6
  41e7d8:	xor    DWORD PTR [ecx+ebx*8+0x7f],eax
  41e7dc:	mov    BYTE PTR [ecx],al
  41e7de:	or     edx,DWORD PTR [ebx-0x471909]
  41e7e4:	mov    WORD PTR [ebp+0xd],gs
  41e7e7:	or     DWORD PTR [esi+0x24d70708],esp
  41e7ed:	into   
  41e7ee:	jb     0x41e7e6
  41e7f0:	or     al,0xd8
  41e7f2:	mov    dl,0xcd
  41e7f4:	cdq    
  41e7f5:	push   0x6c
  41e7f7:	mov    db4,edi
  41e7fa:	(bad)  [ebx+0x2398117e]
  41e800:	mov    cl,0xef
  41e802:	pop    edi
  41e803:	adc    ecx,DWORD PTR [eax-0x161abe5f]
  41e809:	fcom   QWORD PTR [edi+ecx*4]
  41e80c:	test   BYTE PTR [ebp+eiz*8-0x1f],ah
  41e810:	(bad)  
  41e811:	bound  edi,QWORD PTR [edx]
  41e813:	mov    edx,0xcb8b9558
  41e818:	mov    BYTE PTR [eax-0x3ed84a39],dh
  41e81e:	mov    BYTE PTR [ebx],bl
  41e820:	push   ss
  41e821:	addr16 dec esi
  41e823:	push   ebx
  41e824:	lahf   
  41e825:	repnz and BYTE PTR [ecx+ecx*2-0x16e4f9e],ch
  41e82d:	adc    BYTE PTR [ebx],dh
  41e82f:	add    ch,0xc3
  41e832:	xor    DWORD PTR [eax+0x6e],0xca64be67
  41e839:	xor    edx,esp
  41e83b:	arpl   WORD PTR [ecx+0x1b51b191],ax
  41e841:	arpl   WORD PTR [ecx+0x14],di
  41e844:	add    esi,DWORD PTR [ecx+0x23]
  41e847:	sar    DWORD PTR [edx],cl
  41e849:	cmp    eax,0xe64eb282
  41e84e:	sbb    edi,edx
  41e850:	adc    BYTE PTR [esi],ah
  41e852:	jb     0x41e854
  41e854:	popw   es
  41e856:	enter  0xac3a,0x6
  41e85a:	push   ecx
  41e85b:	xor    eax,DWORD PTR [ebp+0x497fd89d]
  41e861:	(bad)  
  41e862:	and    BYTE PTR [ecx],0x7c
  41e865:	nop
  41e866:	test   eax,0x979c5310
  41e86c:	call   0xb23390dd
  41e871:	pop    esp
  41e872:	or     edi,ecx
  41e874:	mov    BYTE PTR [ecx-0x7fe8873d],cl
  41e87a:	sub    BYTE PTR [ecx-0x2c],cl
  41e87d:	lds    edi,FWORD PTR [bx]
  41e880:	add    al,0xe7
  41e882:	xchg   ecx,eax
  41e883:	fsub   DWORD PTR [edi-0x7a0d5386]
  41e889:	cmp    eax,0x17aaa131
  41e88e:	std    
  41e88f:	xchg   edi,eax
  41e890:	pop    ecx
  41e891:	scas   eax,DWORD PTR es:[di]
  41e893:	ins    DWORD PTR es:[edi],dx
  41e894:	shr    BYTE PTR [ecx+0x1b],cl
  41e897:	mov    ds:0x10b1354b,eax
  41e89c:	(bad)  
  41e89d:	sahf   
  41e89e:	sub    eax,DWORD PTR [ebp-0x7a]
  41e8a1:	mov    cl,0x8b
  41e8a3:	xlat   BYTE PTR ds:[ebx]
  41e8a4:	xchg   esp,eax
  41e8a5:	outs   dx,BYTE PTR ds:[esi]
  41e8a6:	xchg   edi,eax
  41e8a7:	xor    BYTE PTR [ebx],cl
  41e8a9:	(bad)  
  41e8ab:	mov    dl,0x88
  41e8ad:	add    BYTE PTR [edi+edi*4-0x5e3d86b],ch
  41e8b4:	sbb    al,0x68
  41e8b6:	sub    edi,ebx
  41e8b8:	cli    
  41e8b9:	xor    WORD PTR ds:0xb36ae3bc,cx
  41e8c0:	repz gs mov dh,0x1a
  41e8c4:	repnz inc ebp
  41e8c6:	push   ecx
  41e8c7:	rcl    DWORD PTR [ecx],cl
  41e8c9:	pop    ds
  41e8ca:	adc    bl,BYTE PTR [eax+0x6b]
  41e8cd:	aam    0x12
  41e8cf:	aaa    
  41e8d0:	lahf   
  41e8d1:	daa    
  41e8d2:	pop    ebp
  41e8d3:	daa    
  41e8d4:	mul    DWORD PTR [edi-0x6f]
  41e8d7:	add    dh,BYTE PTR [esi+0x6dd2aae5]
  41e8dd:	mov    bh,0xb1
  41e8df:	and    BYTE PTR [ebx],0x66
  41e8e2:	sub    eax,0x4cb3e220
  41e8e7:	xlat   BYTE PTR ds:[ebx]
  41e8e8:	fisubr WORD PTR [ebx+0x19]
  41e8eb:	or     edx,ecx
  41e8ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8ee:	and    edx,DWORD PTR [ecx+0x4c083989]
  41e8f4:	mov    bl,0x7
  41e8f6:	and    DWORD PTR [ebx],ecx
  41e8f8:	mov    DWORD PTR [esi+0x67782579],eax
  41e8fe:	icebp  
  41e8ff:	fwait
  41e900:	popf   
  41e901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e902:	pop    ds
  41e903:	jle    0x41e8a4
  41e905:	pop    ecx
  41e906:	and    ebx,ebx
  41e908:	mov    esp,eax
  41e90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e90b:	js     0x41e902
  41e90d:	pop    es
  41e90e:	adc    eax,0x86655bac
  41e913:	xlat   BYTE PTR ds:[ebx]
  41e914:	dec    edx
  41e915:	xchg   esi,eax
  41e916:	ficom  DWORD PTR [esi+0x4c14d9ba]
  41e91c:	cmp    edi,0xe64db745
  41e922:	inc    ecx
  41e923:	push   ss
  41e924:	jno    0x41e8f1
  41e926:	jmp    0x226f:0x214543d7
  41e92d:	sub    eax,0x9288d1e1
  41e932:	(bad)  
  41e934:	in     eax,dx
  41e935:	test   BYTE PTR [esi],cl
  41e937:	fbld   TBYTE PTR [edx+0x17]
  41e93a:	fwait
  41e93b:	xlat   BYTE PTR ds:[ebx]
  41e93c:	xor    DWORD PTR [eax-0xc],edi
  41e93f:	inc    ecx
  41e940:	(bad)  [ebp+0x2188f85e]
  41e946:	xor    bl,BYTE PTR [edx]
  41e948:	scas   eax,DWORD PTR es:[edi]
  41e949:	fidiv  WORD PTR [eax-0x25]
  41e94c:	ficomp WORD PTR [edx-0x33]
  41e94f:	mov    esi,0xd868c28a
  41e954:	outs   dx,DWORD PTR ds:[esi]
  41e955:	dec    esp
  41e956:	mov    cl,0xbd
  41e958:	push   eax
  41e959:	or     BYTE PTR [ebx],dl
  41e95b:	mov    bl,0x85
  41e95d:	shl    DWORD PTR [ecx],0x1a
  41e960:	pop    ecx
  41e961:	test   eax,0xd2ee67cf
  41e966:	mov    edi,0x507047d7
  41e96b:	rol    DWORD PTR [ecx-0x778acd6b],1
  41e971:	inc    edi
  41e972:	and    eax,0x7ea5a087
  41e977:	fidivr WORD PTR [edx+0x67]
  41e97a:	mov    esi,0x37638c5
  41e97f:	push   edx
  41e980:	je     0x41e998
  41e982:	mov    cl,0x32
  41e984:	call   0x8792:0xe3c423d9
  41e98b:	xlat   BYTE PTR ds:[ebx]
  41e98c:	leave  
  41e98d:	aam    0xd6
  41e98f:	das    
  41e990:	adc    edx,esi
  41e992:	int    0xd
  41e994:	loopne 0x41e9fa
  41e996:	retf   0x7dd7
  41e999:	inc    edx
  41e99a:	fmul   QWORD PTR [eax-0x28b09340]
  41e9a0:	lods   al,BYTE PTR ds:[esi]
  41e9a1:	ss adc dh,ch
  41e9a4:	push   eax
  41e9a5:	pop    edx
  41e9a6:	ja     0x41e951
  41e9a8:	cld    
  41e9a9:	scas   al,BYTE PTR es:[edi]
  41e9aa:	mov    cl,0xca
  41e9ac:	dec    ebx
  41e9ad:	sub    ah,BYTE PTR [edx+edi*4]
  41e9b0:	mov    dl,0xb3
  41e9b2:	adc    bh,0x91
  41e9b5:	xchg   ebp,eax
  41e9b6:	cwde   
  41e9b7:	or     esi,ebx
  41e9b9:	xor    ebp,DWORD PTR [esi-0x65]
  41e9bc:	mov    DWORD PTR [eax],esi
  41e9be:	jae    0x41ea3c
  41e9c0:	mov    esi,0x11c80f27
  41e9c5:	jecxz  0x41ea1b
  41e9c7:	xlat   BYTE PTR ds:[ebx]
  41e9c8:	retf   
  41e9c9:	push   edx
  41e9ca:	push   ss
  41e9cb:	ins    DWORD PTR es:[edi],dx
  41e9cc:	push   0xffffffd1
  41e9ce:	add    al,0x17
  41e9d0:	mov    BYTE PTR [ebx],dl
  41e9d2:	or     BYTE PTR [edi+edi*2-0x1674e551],ah
  41e9d9:	addr16 cdq 
  41e9db:	sub    eax,0x52398298
  41e9e0:	inc    edi
  41e9e1:	test   al,0xb1
  41e9e3:	leave  
  41e9e4:	nop
  41e9e5:	push   edx
  41e9e6:	push   esi
  41e9e7:	mov    cl,0x9d
  41e9e9:	mov    edi,0xb867d78d
  41e9ee:	push   cs
  41e9ef:	or     DWORD PTR [ebp-0x76a77c6b],0xdecff149
  41e9f9:	addr16 ret 
  41e9fb:	or     al,0x7e
  41e9fd:	out    0xf5,al
  41e9ff:	mov    eax,ds:0x7db8603b
  41ea04:	cld    
  41ea05:	test   DWORD PTR [esi+0x59e07836],ebx
  41ea0b:	divps  xmm5,XMMWORD PTR ds:0x3f1736b1
  41ea12:	xor    al,0xf7
  41ea14:	cmp    ebx,DWORD PTR [edi]
  41ea16:	jp     0x41ea04
  41ea18:	cmp    cl,BYTE PTR ss:[ebx-0x44a0786d]
  41ea1f:	adc    DWORD PTR [ebp+0x62b74859],ecx
  41ea25:	sub    esi,ecx
  41ea27:	dec    edx
  41ea28:	mov    BYTE PTR [ebx+0x69],cl
  41ea2b:	push   ds
  41ea2c:	fcmovb st,st(0)
  41ea2e:	in     eax,0xa0
  41ea30:	test   BYTE PTR [eax],dl
  41ea32:	clc    
  41ea33:	mov    edi,DWORD PTR [edx]
  41ea35:	clc    
  41ea36:	retf   0xcbd7
  41ea39:	sub    edx,esp
  41ea3b:	push   ecx
  41ea3c:	jmp    0x88bb15da
  41ea41:	cwde   
  41ea42:	pushf  
  41ea43:	in     al,dx
  41ea44:	add    edx,DWORD PTR [edx]
  41ea46:	cmp    al,0x8a
  41ea48:	push   edi
  41ea49:	addr16 test BYTE PTR [bp+si+0x69],0x93
  41ea4f:	add    ecx,edx
  41ea51:	cld    
  41ea52:	mov    cl,0x63
  41ea54:	mov    ds:0x3dc0f582,eax
  41ea59:	lods   al,BYTE PTR ds:[esi]
  41ea5a:	jae    0x41ea33
  41ea5c:	mov    ch,0x90
  41ea5e:	cwde   
  41ea5f:	sar    DWORD PTR [ecx],0x8d
  41ea62:	in     al,0x2
  41ea64:	mov    al,bh
  41ea66:	mov    esi,0x9a1ae961
  41ea6b:	ficomp DWORD PTR [edi+0x66d26167]
  41ea71:	iret   
  41ea72:	or     DWORD PTR [ecx],ebx
  41ea74:	jns    0x41ea4f
  41ea76:	mov    cl,0xfa
  41ea78:	iret   
  41ea79:	test   BYTE PTR [edx+0x7b],bh
  41ea7c:	clc    
  41ea7d:	daa    
  41ea7e:	pop    eax
  41ea7f:	stos   DWORD PTR es:[edi],eax
  41ea80:	pop    esp
  41ea81:	addr16 retf 
  41ea83:	rcr    DWORD PTR es:[ebp+edx*2-0xb],cl
  41ea88:	sti    
  41ea89:	and    esi,DWORD PTR [ecx+0x6780ed04]
  41ea8f:	add    DWORD PTR [ebp+esi*4-0x2e842fa2],0x97d3ad09
  41ea9a:	aaa    
  41ea9b:	mov    bl,0xe3
  41ea9d:	xor    eax,ebp
  41ea9f:	sub    al,0x9c
  41eaa1:	inc    esi
  41eaa2:	sub    eax,DWORD PTR [ecx]
  41eaa4:	enter  0xc171,0x22
  41eaa8:	xchg   esp,eax
  41eaa9:	xor    bl,BYTE PTR [edi-0x23f67429]
  41eaaf:	fld    TBYTE PTR cs:[edi-0x6206b250]
  41eab6:	lods   eax,DWORD PTR ds:[esi]
  41eab7:	cmp    eax,0xaa31883b
  41eabc:	into   
  41eabd:	xchg   edi,eax
  41eabe:	mov    BYTE PTR [ebx+0x73],al
  41eac1:	addr16 call 0xfc68:0xfd9a215d
  41eac9:	dec    edx
  41eaca:	mov    cl,0x66
  41eacc:	outs   dx,BYTE PTR ds:[esi]
  41eacd:	(bad)  
  41eace:	jmp    0x41eaf4
  41ead0:	cmp    eax,0xb0d8645d
  41ead5:	xchg   ebp,eax
  41ead6:	inc    ecx
  41ead7:	loope  0x41eafa
  41ead9:	add    al,0xa7
  41eadb:	xchg   DWORD PTR [ebx],ecx
  41eadd:	inc    eax
  41eade:	enter  0x88bc,0xa0
  41eae2:	dec    ebp
  41eae3:	sar    BYTE PTR [eax],0x7e
  41eae6:	dec    ecx
  41eae7:	ret    0x67d7
  41eaea:	ret    0x3196
  41eaed:	xor    ebx,0x9f4ab20
  41eaf3:	pop    eax
  41eaf4:	outs   dx,BYTE PTR ds:[esi]
  41eaf5:	(bad)
  41eaf8:	mov    BYTE PTR [edi],dl
  41eafa:	daa    
  41eafb:	pop    es
  41eafc:	in     eax,dx
  41eafd:	jne    0x41eb7a
  41eaff:	pop    ds
  41eb00:	daa    
  41eb01:	mov    WORD PTR [di+0x11],?
  41eb05:	dec    edx
  41eb06:	sti    
  41eb07:	xchg   BYTE PTR [edx-0x5ec84e20],dl
  41eb0d:	in     eax,0xe9
  41eb0f:	(bad)  
  41eb10:	sti    
  41eb11:	(bad)  
  41eb12:	fs aam 0x76
  41eb15:	enter  0x6565,0x80
  41eb19:	sub    al,BYTE PTR ds:[ebp+0x70]
  41eb1d:	fbstp  TBYTE PTR [edx]
  41eb1f:	icebp  
  41eb20:	mov    al,ah
  41eb22:	jae    0x41eb56
  41eb24:	clc    
  41eb25:	xchg   ebp,eax
  41eb26:	pop    esi
  41eb27:	xor    esp,ecx
  41eb29:	addr16 xchg edx,eax
  41eb2b:	std    
  41eb2c:	sahf   
  41eb2d:	xor    esp,DWORD PTR [eax]
  41eb2f:	popa   
  41eb30:	push   esi
  41eb31:	add    esi,DWORD PTR [eax-0x118935cc]
  41eb37:	into   
  41eb38:	or     ebx,ecx
  41eb3a:	jne    0x41ead2
  41eb3c:	or     eax,0xc8d5b218
  41eb41:	dec    ebp
  41eb42:	lods   eax,DWORD PTR ds:[esi]
  41eb43:	push   0x8171c6d1
  41eb48:	rcl    BYTE PTR [edx],cl
  41eb4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb4b:	xchg   ebx,eax
  41eb4c:	mov    esi,0x293ab1d6
  41eb51:	cld    
  41eb52:	inc    esp
  41eb53:	arpl   si,bp
  41eb55:	push   0x80764e4a
  41eb5a:	jno    0x41eb69
  41eb5c:	test   eax,0x878cf402
  41eb61:	(bad)  
  41eb62:	jno    0x41eb28
  41eb64:	(bad)  
  41eb65:	mov    cl,0x42
  41eb67:	pop    esi
  41eb68:	call   0x44193e6d
  41eb6d:	xchg   esi,eax
  41eb6e:	xor    DWORD PTR [eax],0xac0b3796
  41eb74:	xchg   ecx,eax
  41eb75:	pop    edi
  41eb76:	mov    ds:0x71018581,al
  41eb7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb7c:	or     ebp,edi
  41eb7e:	aam    0x78
  41eb80:	stos   DWORD PTR es:[edi],eax
  41eb81:	fistp  QWORD PTR [si]
  41eb84:	(bad)  
  41eb85:	cmp    DWORD PTR [ebp+0x2d],ebp
  41eb88:	fucomi st,st(4)
  41eb8a:	mov    cl,0xfd
  41eb8c:	inc    ebp
  41eb8d:	sbb    ch,BYTE PTR [esi-0x7c]
  41eb90:	repz adc edi,ebp
  41eb93:	xlat   BYTE PTR ds:[ebx]
  41eb94:	adc    bl,BYTE PTR [ecx]
  41eb96:	add    dh,bl
  41eb98:	or     ah,BYTE PTR [ecx-0x59]
  41eb9b:	jb     0x41eb25
  41eb9d:	ds sub dh,dh
  41eba0:	dec    ecx
  41eba1:	popf   
  41eba2:	call   0x5ef4:0xd9673afd
  41eba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebaa:	inc    esp
  41ebab:	mov    dl,0x96
  41ebad:	ret    
  41ebae:	lods   al,BYTE PTR ds:[esi]
  41ebaf:	(bad)  
  41ebb0:	pop    ebx
  41ebb1:	mov    ?,WORD PTR [esi-0x5d847c3]
  41ebb7:	aaa    
  41ebb8:	adc    al,0x14
  41ebba:	mov    bl,0xd8
  41ebbc:	sub    al,0x2b
  41ebbe:	dec    edx
  41ebbf:	sub    ebp,DWORD PTR [eax+0x10]
  41ebc2:	add    BYTE PTR [edi-0x424ff3d6],dh
  41ebc8:	jb     0x41eba2
  41ebca:	les    ebx,FWORD PTR [ecx+edx*8+0x73]
  41ebce:	rol    DWORD PTR [edi+0x499d6748],0xf5
  41ebd5:	push   ds
  41ebd6:	mov    ah,0x9
  41ebd8:	cmp    BYTE PTR ds:0x8bd656b1,ch
  41ebde:	addr16 fcomi st,st(2)
  41ebe1:	or     bh,BYTE PTR [ebx]
  41ebe3:	leave  
  41ebe4:	jae    0x41eb94
  41ebe6:	sub    dl,BYTE PTR [edi+0x27]
  41ebe9:	sub    BYTE PTR [eax],bh
  41ebeb:	stc    
  41ebec:	cmp    al,BYTE PTR [esi-0x4f]
  41ebef:	adc    eax,0x4aa17cb3
  41ebf4:	(bad)  
  41ebf6:	lods   eax,DWORD PTR ds:[esi]
  41ebf7:	das    
  41ebf8:	addr16 mov fs,bx
  41ebfc:	ss nop
  41ebfe:	arpl   WORD PTR [ebx+0x1f],ax
  41ec01:	jne    0x41eb8b
  41ec03:	shr    DWORD PTR [edi+0x67],0xa8
  41ec07:	dec    BYTE PTR [edi-0x46]
  41ec0a:	out    dx,al
  41ec0b:	mov    edi,0xfed23f63
  41ec10:	clc    
  41ec11:	dec    ebx
  41ec12:	mov    esp,0xf26725e3
  41ec17:	push   esp
  41ec18:	xor    bl,BYTE PTR [edx+0x47]
  41ec1b:	mov    ebx,0xd7fb62ba
  41ec20:	add    BYTE PTR [ecx],cl
  41ec22:	mov    ds:0x22dbed4c,eax
  41ec27:	xlat   BYTE PTR ds:[ebx]
  41ec28:	inc    esi
  41ec29:	mov    eax,0xb6bbd99e
  41ec2e:	mov    cl,bh
  41ec30:	mov    BYTE PTR [ebx],bl
  41ec32:	cmp    dl,BYTE PTR [edi-0x21c938a0]
  41ec38:	jge    0x41ec97
  41ec3a:	inc    eax
  41ec3b:	(bad)  
  41ec3c:	mov    BYTE PTR [esi],ah
  41ec3e:	and    eax,0xafba32e
  41ec43:	xchg   esp,ebx
  41ec45:	call   0xc40e:0x61c8d731
  41ec4c:	(bad)  
  41ec4d:	sub    al,0x77
  41ec4f:	xlat   BYTE PTR ds:[ebx]
  41ec50:	imul   ebx
  41ec52:	test   eax,0xbaf3b49b
  41ec57:	daa    
  41ec58:	mov    BYTE PTR [eax+edx*2+0x7],al
  41ec5c:	fcmovnbe st,st(1)
  41ec5e:	call   0x535b51fb
  41ec63:	xlat   BYTE PTR ds:[ebx]
  41ec64:	and    eax,0xaf4f10b6
  41ec69:	call   0x91cad3e9
  41ec6e:	scas   al,BYTE PTR es:[edi]
  41ec6f:	xchg   esi,eax
  41ec70:	mov    WORD PTR [edi-0x4],gs
  41ec73:	cmp    DWORD PTR [edi+eiz*2-0x80],edi
  41ec77:	and    ebx,ebx
  41ec79:	cmp    al,0x70
  41ec7b:	(bad)  
  41ec7c:	test   DWORD PTR [ebx-0x4f],esp
  41ec7f:	cmc    
  41ec80:	jnp    0x41ece4
  41ec82:	add    al,0x1f
  41ec84:	xor    bl,bl
  41ec86:	mov    al,ds:0xa87a8aa9
  41ec8b:	and    ebx,DWORD PTR [ebx+0x5155d1e7]
  41ec91:	in     al,0xc4
  41ec93:	ror    BYTE PTR [eax-0x4f551eaa],1
  41ec99:	rcl    DWORD PTR [ecx+0x5e675be2],0x58
  41eca0:	(bad)  
  41eca2:	jbe    0x41ec9d
  41eca4:	xchg   ebx,eax
  41eca5:	mov    dl,0xb1
  41eca7:	push   eax
  41eca8:	jne    0x41ec5b
  41ecaa:	rol    BYTE PTR [ecx-0x5c1341f9],cl
  41ecb0:	dec    edx
  41ecb1:	imul   edi,DWORD PTR [edx-0x2f9cb7d3],0xcf1dccb2
  41ecbb:	mov    bh,0xf9
  41ecbd:	sahf   
  41ecbe:	mov    cl,0xbe
  41ecc0:	scas   eax,DWORD PTR es:[edi]
  41ecc1:	mov    eax,ds:0x96a6effc
  41ecc6:	rcl    edi,1
  41ecc8:	pop    esp
  41ecc9:	mov    ebp,0x4076e4a9
  41ecce:	popa   
  41eccf:	mov    ebp,0xb61edc87
  41ecd4:	mov    esp,0x607c7d37
  41ecd9:	std    
  41ecda:	push   ebx
  41ecdb:	rcl    DWORD PTR [edi],cl
  41ecdd:	popf   
  41ecde:	xchg   esp,eax
  41ecdf:	cmp    DWORD PTR [eax-0x59],edx
  41ece2:	jae    0x41ed20
  41ece4:	popa   
  41ece5:	stc    
  41ece6:	mov    cl,0x1d
  41ece8:	dec    esp
  41ece9:	dec    edi
  41ecea:	push   edx
  41eceb:	stos   BYTE PTR es:[edi],al
  41ecec:	cmp    BYTE PTR ds:0x7b0bd5f1,al
  41ecf2:	xlat   BYTE PTR ds:[ebx]
  41ecf3:	in     al,dx
  41ecf4:	aaa    
  41ecf5:	cmp    al,0x66
  41ecf7:	push   edi
  41ecf8:	inc    eax
  41ecf9:	mov    BYTE PTR [esi-0x6875517],dh
  41ecff:	and    edi,DWORD PTR [ebx]
  41ed01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed02:	push   ecx
  41ed03:	sahf   
  41ed04:	push   esp
  41ed05:	loope  0x41eca7
  41ed07:	cdq    
  41ed08:	icebp  
  41ed09:	outs   dx,BYTE PTR ds:[esi]
  41ed0a:	mov    cl,0x30
  41ed0c:	or     al,0x8f
  41ed0e:	or     BYTE PTR [ecx+0x4],dh
  41ed11:	enter  0xd70c,0x32
  41ed15:	mov    ecx,0x1ccf6de6
  41ed1a:	push   edi
  41ed1b:	out    dx,eax
  41ed1c:	xor    DWORD PTR ds:0x2f6cd2c1,0xbf499c12
  41ed26:	repnz ffreep st(1)
  41ed29:	addr16 pop edx
  41ed2b:	jb     0x41edac
  41ed2d:	dec    edi
  41ed2e:	add    BYTE PTR ds:0xf1b1d898,al
  41ed34:	jp     0x41ed70
  41ed36:	pop    ds
  41ed37:	mov    ecx,0xc39bae02
  41ed3c:	pop    ss
  41ed3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed3e:	aad    0x4
  41ed40:	mov    BYTE PTR [edx+0x4c38da90],bh
  41ed46:	mov    ebp,DWORD PTR [esi-0x67]
  41ed49:	mov    al,ds:0xedc1126b
  41ed4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed4f:	xchg   edi,eax
  41ed50:	sub    ah,dl
  41ed52:	jmp    0x31a9aa46
  41ed57:	lock ds data16 jnp 0x41ecfc
  41ed5c:	cli    
  41ed5d:	pop    esi
  41ed5e:	mov    ah,0x81
  41ed60:	xchg   ecx,eax
  41ed61:	mov    ?,WORD PTR [esi]
  41ed63:	adc    al,0x48
  41ed65:	sar    edi,1
  41ed67:	fstp   DWORD PTR [edi+0x58]
  41ed6a:	(bad)  
  41ed6b:	outs   dx,BYTE PTR ds:[esi]
  41ed6c:	or     ebp,eax
  41ed6e:	or     cl,ah
  41ed70:	test   al,0xb3
  41ed72:	stos   DWORD PTR es:[edi],eax
  41ed73:	push   ecx
  41ed74:	imul   ebp,DWORD PTR [eax-0x4f],0x7b
  41ed78:	and    edx,0x183b0575
  41ed7e:	push   ebp
  41ed7f:	sti    
  41ed80:	lock inc edx
  41ed82:	add    bh,dl
  41ed84:	fimul  DWORD PTR [esp+esi*8-0x73f265f0]
  41ed8b:	nop
  41ed8c:	out    0xe7,eax
  41ed8e:	cmp    BYTE PTR [ebx+0x16d3a863],bl
  41ed94:	pop    ss
  41ed95:	adc    dl,BYTE PTR [eax-0x29]
  41ed98:	mov    eax,0xc37ea8dc
  41ed9d:	in     eax,dx
  41ed9e:	push   edi
  41ed9f:	add    ebp,esi
  41eda1:	pop    ss
  41eda2:	mov    cl,0x3e
  41eda4:	test   al,0x3f
  41eda6:	xchg   ebp,eax
  41eda7:	inc    esp
  41eda8:	sti    
  41eda9:	ror    DWORD PTR [esi-0x29],1
  41edac:	sbb    ecx,DWORD PTR ds:0xc78e9325
  41edb2:	sub    BYTE PTR [esi-0x76],dl
  41edb5:	sub    DWORD PTR [edi+0x7913f520],edx
  41edbb:	xlat   BYTE PTR ds:[ebx]
  41edbc:	mov    bl,0xd5
  41edbe:	mov    ah,0xcf
  41edc0:	in     eax,0x1c
  41edc2:	push   ebx
  41edc3:	xlat   BYTE PTR ds:[ebx]
  41edc4:	cmp    dl,bl
  41edc6:	xchg   ecx,eax
  41edc7:	out    0x63,eax
  41edc9:	cmp    cl,BYTE PTR [ecx]
  41edcb:	fisttp QWORD PTR [eax-0x5cb5121c]
  41edd1:	sbb    BYTE PTR [eax],bh
  41edd3:	pop    edi
  41edd4:	add    cl,BYTE PTR [ebp+0x76b7d4ea]
  41edda:	outs   dx,DWORD PTR ds:[esi]
  41eddb:	(bad)  
  41eddc:	mov    ds:0x10502a4d,al
  41ede1:	repz aas 
  41ede3:	dec    esp
  41ede4:	mov    al,al
  41ede6:	outs   dx,BYTE PTR ds:[esi]
  41ede7:	jg     0x41ee4a
  41ede9:	cli    
  41edea:	mov    bl,0xbe
  41edec:	and    ah,BYTE PTR [edi+0x5c]
  41edef:	arpl   WORD PTR [ebp-0x1e0a5577],ax
  41edf5:	or     BYTE PTR [edi+ebx*2-0x4d4ec9b8],ch
  41edfc:	call   0xbcabe65a
  41ee01:	addr16 xchg esp,eax
  41ee03:	retf   0xc3a1
  41ee06:	cli    
  41ee07:	inc    edi
  41ee08:	mov    dl,0x34
  41ee0a:	mov    cl,0x11
  41ee0c:	(bad)  
  41ee0d:	adc    BYTE PTR [edi+edx*4],ch
  41ee10:	ja     0x41ee0e
  41ee12:	out    0xd7,eax
  41ee14:	add    eax,0x8386927a
  41ee19:	inc    edi
  41ee1a:	and    cl,BYTE PTR [ecx-0x78]
  41ee1d:	dec    edx
  41ee1e:	cli    
  41ee1f:	mov    dh,0xc9
  41ee21:	mov    ah,0x3d
  41ee23:	and    ebx,eax
  41ee25:	xlat   BYTE PTR ds:[bx]
  41ee27:	sub    BYTE PTR [edi-0x375732a6],dl
  41ee2d:	js     0x41eea0
  41ee2f:	sub    esi,DWORD PTR [ebp-0x6f]
  41ee32:	rcr    DWORD PTR [ebx],0xb2
  41ee35:	repz rcl DWORD PTR [bx+di+0x4966],cl
  41ee3b:	or     eax,esp
  41ee3d:	dec    esp
  41ee3e:	mov    cl,0x0
  41ee40:	mov    dh,0x8b
  41ee42:	fwait
  41ee43:	push   esp
  41ee44:	je     0x41eeba
  41ee46:	shl    DWORD PTR [edi+0x58f36613],0xf5
  41ee4d:	loope  0x41eeb7
  41ee4f:	ins    BYTE PTR es:[edi],dx
  41ee50:	sub    al,0xbf
  41ee52:	jae    0x41eea2
  41ee54:	mov    BYTE PTR [ecx],dh
  41ee56:	push   edi
  41ee57:	cmc    
  41ee58:	fdivr  DWORD PTR [esi]
  41ee5a:	xchg   BYTE PTR [esi+0x11],dh
  41ee5d:	jp     0x41eeda
  41ee5f:	jmp    0x41eed3
  41ee61:	out    0x9b,eax
  41ee63:	in     eax,dx
  41ee64:	out    0xed,al
  41ee66:	inc    ebx
  41ee67:	stc    
  41ee68:	call   0x836c:0x87a74cfd
  41ee6f:	dec    ecx
  41ee70:	lock add esp,DWORD PTR [ebp+0x6b]
  41ee74:	mov    ds:0x98db2269,eax
  41ee79:	cmp    eax,0x6aba06b1
  41ee7e:	push   edx
  41ee7f:	add    cl,BYTE PTR [eax-0xffa3165]
  41ee85:	mov    bl,0x89
  41ee87:	xchg   ah,ah
  41ee89:	push   0xc870fa08
  41ee8e:	jo     0x41eeed
  41ee90:	mov    al,ds:0xd2a74f51
  41ee95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee96:	mov    cl,0x2d
  41ee98:	inc    ebx
  41ee99:	imul   ebx,DWORD PTR [edi-0x1c],0x4d
  41ee9d:	outs   dx,BYTE PTR ds:[esi]
  41ee9e:	sti    
  41ee9f:	xlat   BYTE PTR ds:[ebx]
  41eea0:	out    dx,al
  41eea1:	mov    dh,ch
  41eea3:	jb     0x41eee3
  41eea5:	sbb    DWORD PTR ds:[eax],ebp
  41eea8:	jb     0x41ee73
  41eeaa:	mov    cl,0x67
  41eeac:	jno    0x41eed9
  41eeae:	fiadd  DWORD PTR [edi-0x27]
  41eeb1:	jecxz  0x41ef1b
  41eeb3:	aam    0x6f
  41eeb5:	out    dx,al
  41eeb6:	dec    DWORD PTR [edx]
  41eeb8:	ret    0x794d
  41eebb:	xor    eax,0xf4b1ad10
  41eec0:	ret    
  41eec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec2:	scas   al,BYTE PTR es:[edi]
  41eec3:	jns    0x41ef40
  41eec5:	jmp    0x3342b2ee
  41eeca:	jb     0x41eea3
  41eecc:	jb     0x41ee7f
  41eece:	sbb    DWORD PTR [edx+0x11b18907],ebx
  41eed4:	(bad)  
  41eed5:	ficomp WORD PTR [esi]
  41eed7:	ds jg  0x41ef40
  41eeda:	adc    edx,edi
  41eedc:	imul   edi,DWORD PTR [edx],0x2
  41eedf:	add    eax,0xb48855bb
  41eee4:	js     0x41ef02
  41eee6:	mov    dh,0xd9
  41eee8:	inc    ecx
  41eee9:	aaa    
  41eeea:	or     ch,BYTE PTR [ebp+0x3f]
  41eeed:	jecxz  0x41eef3
  41eeef:	adc    DWORD PTR [ecx],eax
  41eef1:	loope  0x41ee76
  41eef3:	xchg   edi,eax
  41eef4:	adc    BYTE PTR [esi],ah
  41eef6:	mov    eax,ds:0x5e60a829
  41eefb:	fstp   DWORD PTR [ebp+0x24]
  41eefe:	iret   
  41eeff:	or     BYTE PTR [eax+0x41],0xab
  41ef03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef04:	push   ecx
  41ef05:	pop    ds
  41ef06:	mov    cl,0x5a
  41ef08:	into   
  41ef09:	add    eax,0x57fd9a98
  41ef0e:	jg     0x41eee7
  41ef10:	mov    ds,WORD PTR [ecx+edx*8+0x67]
  41ef14:	gs add al,0xf5
  41ef17:	xrelease mov BYTE PTR [ebp-0x11],dl
  41ef1b:	xchg   ebp,ecx
  41ef1d:	iret   
  41ef1e:	sbb    al,0xd5
  41ef20:	xor    al,0x19
  41ef22:	and    dl,bh
  41ef24:	ss sbb al,0x4e
  41ef27:	or     ebp,DWORD PTR [eax-0x774085f6]
  41ef2d:	bnd jmp 0x41ef69
  41ef30:	imul   ecx,eax,0xffffffaf
  41ef33:	pushf  
  41ef34:	cmp    eax,0x7d61fb65
  41ef39:	shl    BYTE PTR [edi],cl
  41ef3b:	jmp    0x547f88a8
  41ef40:	fwait
  41ef41:	add    al,0xa5
  41ef43:	pop    ss
  41ef44:	enter  0x75d0,0x49
  41ef48:	or     ecx,DWORD PTR [esi]
  41ef4a:	or     al,0xef
  41ef4c:	xor    eax,0x5a6bb10c
  41ef51:	pop    edi
  41ef52:	stc    
  41ef53:	mov    ebp,0xd1b1152b
  41ef58:	push   esi
  41ef59:	fnstenv [ecx+0x22]
  41ef5c:	pop    eax
  41ef5d:	loope  0x41eeea
  41ef5f:	shl    ebx,cl
  41ef61:	mov    WORD PTR [edi+0x48e7795f],ds
  41ef67:	ds xchg esi,eax
  41ef69:	dec    eax
  41ef6a:	iret   
  41ef6b:	and    BYTE PTR [eax-0x5a2f5a38],cl
  41ef71:	sub    DWORD PTR [ecx-0x2b],esi
  41ef74:	shl    BYTE PTR [eax+0x6f],0x8e
  41ef78:	dec    ebp
  41ef79:	jnp    0x41ef58
  41ef7b:	mov    bh,0x2c
  41ef7d:	pop    es
  41ef7e:	ins    BYTE PTR es:[edi],dx
  41ef7f:	lock mov ah,dl
  41ef82:	and    BYTE PTR [esi+ebx*2],dl
  41ef85:	or     DWORD PTR [edi],ebx
  41ef87:	jmp    0x41ef82
  41ef89:	data16 popaw 
  41ef8c:	jmp    0x41efab
  41ef8e:	jmp    0x68011efc
  41ef93:	leave  
  41ef94:	or     DWORD PTR [edi],0x5911c613
  41ef9a:	push   ecx
  41ef9b:	fwait
  41ef9c:	sbb    ebp,DWORD PTR [ecx+0x46]
  41ef9f:	xlat   BYTE PTR ds:[ebx]
  41efa0:	test   DWORD PTR [edi+0x72b8a756],ebx
  41efa6:	loope  0x41efa9
  41efa8:	mov    cl,al
  41efaa:	add    al,0xcd
  41efac:	pop    eax
  41efad:	leave  
  41efae:	xchg   ecx,eax
  41efaf:	and    DWORD PTR [ebx],ebx
  41efb1:	xchg   DWORD PTR [ecx],edi
  41efb3:	xlat   BYTE PTR ds:[ebx]
  41efb4:	xor    bl,BYTE PTR [ecx-0x5b73045a]
  41efba:	mov    al,ds:0x20018881
  41efbf:	and    al,0xa5
  41efc1:	cmp    bh,dh
  41efc3:	ja     0x41ef78
  41efc5:	addr16 jo 0x41eff8
  41efc8:	iret   
  41efc9:	pop    eax
  41efca:	pop    ecx
  41efcb:	and    ecx,esp
  41efcd:	jg     0x41ef81
  41efcf:	or     eax,0x6837fd2e
  41efd4:	sub    esp,edi
  41efd6:	add    edx,edi
  41efd8:	sbb    dl,BYTE PTR [ecx]
  41efda:	push   ebp
  41efdb:	fstp   QWORD PTR [ebx-0x7033ebce]
  41efe1:	loopne 0x41efd4
  41efe3:	stos   BYTE PTR es:[edi],al
  41efe4:	popa   
  41efe5:	loopne 0x41f01d
  41efe7:	push   es
  41efe8:	mov    ebp,0xf92746e7
  41efed:	(bad)  
  41efee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efef:	xlat   BYTE PTR ds:[ebx]
  41eff0:	bnd jl 0x41f048
  41eff3:	test   eax,0xfe8c55ff
  41eff8:	shl    BYTE PTR [ecx],1
  41effa:	(bad)  
  41effb:	xlat   BYTE PTR ds:[ebx]
  41effc:	push   esi
  41effd:	sar    esi,cl
  41efff:	sbb    al,BYTE PTR [ecx+esi*1]
  41f002:	ins    DWORD PTR es:[edi],dx
  41f003:	(bad)  
  41f004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f005:	jmp    0x372bde87
  41f00a:	adc    dh,BYTE PTR [edi+0x1cafdcf7]
  41f010:	pop    eax
  41f011:	shl    BYTE PTR [ecx],0x22
  41f014:	add    ch,BYTE PTR [edi+0x67a115bb]
  41f01a:	cmp    DWORD PTR [ebx-0x50],eax
  41f01d:	jo     0x41f001
  41f01f:	bound  esp,QWORD PTR [edi-0x6c]
  41f022:	mov    cl,0xce
  41f024:	daa    
  41f025:	test   DWORD PTR [edx+0x775f9b9d],edx
  41f02b:	xlat   BYTE PTR ds:[ebx]
  41f02c:	gs call 0x4f27a861
  41f032:	sub    al,BYTE PTR [esi-0x79]
  41f035:	push   edx
  41f036:	aas    
  41f037:	jae    0x41f095
  41f039:	shl    ch,1
  41f03b:	add    cl,BYTE PTR [eax+0x71]
  41f03e:	mov    edi,ss
  41f040:	lock push 0x8dbfad6c
  41f046:	push   esi
  41f047:	popf   
  41f048:	pushf  
  41f049:	lds    ebp,FWORD PTR [ebp+0x3c3f85bd]
  41f04f:	fcmovnbe st,st(1)
  41f051:	fild   WORD PTR [edi-0x3c98e889]
  41f057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f058:	(bad)  [esi+ebx*8-0x75]
  41f05c:	leave  
  41f05d:	pop    ecx
  41f05e:	mov    cl,0x4f
  41f060:	repz icebp 
  41f062:	cwde   
  41f063:	psrld  mm4,QWORD PTR [eax+0x6621aae9]
  41f06a:	jle    0x41f05a
  41f06c:	fwait
  41f06d:	in     al,dx
  41f06e:	ds cmp ecx,esp
  41f071:	(bad)  
  41f072:	loopne 0x41f097
  41f074:	mov    BYTE PTR [ebx-0x3f],ah
  41f077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f078:	imul   edx,DWORD PTR [edx],0x5aaae15b
  41f07e:	inc    ebx
  41f07f:	div    DWORD PTR [esi+0x67]
  41f082:	mov    al,ds:0x34a67d95
  41f087:	jb     0x41f0cf
  41f089:	rep lods al,BYTE PTR ds:[esi]
  41f08b:	in     al,dx
  41f08c:	mov    ?,edi
  41f08e:	icebp  
  41f08f:	test   DWORD PTR [edi-0x144acfe8],ebx
  41f095:	fs mov ecx,ebx
  41f098:	jge    0x41f072
  41f09a:	push   ebx
  41f09b:	cmp    cl,BYTE PTR [esi]
  41f09d:	leave  
  41f09e:	push   ecx
  41f09f:	and    BYTE PTR [ecx],0x61
  41f0a2:	mov    cl,0x7c
  41f0a4:	xchg   esi,eax
  41f0a5:	not    DWORD PTR [esi+0x7a]
  41f0a8:	xchg   ecx,eax
  41f0a9:	(bad)  
  41f0aa:	dec    eax
  41f0ab:	out    dx,al
  41f0ac:	jno    0x41f0f7
  41f0ae:	mov    cl,0xfb
  41f0b0:	add    ecx,DWORD PTR [ebp+0x2]
  41f0b3:	fsubr  st,st(5)
  41f0b5:	lea    edi,[edi-0x764b7871]
  41f0bb:	push   edi
  41f0bc:	or     cl,BYTE PTR [esp+edi*4+0x4d6780ba]
  41f0c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0c4:	sbb    bh,bh
  41f0c6:	dec    esi
  41f0c7:	cmp    ah,BYTE PTR [esi]
  41f0c9:	sub    eax,0x962f81b1
  41f0ce:	inc    esp
  41f0cf:	dec    eax
  41f0d0:	sbb    al,0xe4
  41f0d2:	dec    ecx
  41f0d3:	icebp  
  41f0d4:	icebp  
  41f0d5:	mov    ch,0x35
  41f0d7:	(bad)  [edx-0x51]
  41f0da:	xchg   ecx,eax
  41f0db:	std    
  41f0dc:	(bad)  
  41f0dd:	cmp    esp,ebp
  41f0df:	push   edx
  41f0e0:	mov    ah,bh
  41f0e2:	mov    ecx,0x1972bc22
  41f0e7:	ret    
  41f0e8:	sbb    DWORD PTR [edi-0x71],esp
  41f0eb:	ja     0x41f12d
  41f0ed:	jno    0x41f06f
  41f0ef:	cmp    bh,dh
  41f0f1:	cmpxchg DWORD PTR [ebx+edx*1-0x79278c6f],edi
  41f0f9:	cmp    ebp,ebx
  41f0fb:	shl    BYTE PTR [ecx+eiz*8-0x583e6124],cl
  41f102:	mov    ch,0x47
  41f104:	test   BYTE PTR [ebp-0x23874749],cl
  41f10a:	mov    ebp,0x425f2229
  41f10f:	int    0x88
  41f111:	jae    0x41f122
  41f113:	cld    
  41f114:	rol    BYTE PTR [eax+0x1388fe99],cl
  41f11a:	jnp    0x41f106
  41f11c:	mov    edx,0x9a0f78f1
  41f121:	addr16 and eax,esp
  41f124:	popf   
  41f125:	inc    ebx
  41f126:	jmp    0x85f8:0xcf9691d9
  41f12d:	pushf  
  41f12e:	(bad)  
  41f12f:	aam    0x40
  41f131:	and    al,0x8a
  41f133:	pop    edi
  41f134:	xchg   esp,eax
  41f135:	mov    ebp,0x833dd772
  41f13a:	and    DWORD PTR [ebx+0xf],ebp
  41f13d:	push   es
  41f13e:	push   edx
  41f13f:	clc    
  41f140:	mov    BYTE PTR [edx],bl
  41f142:	sbb    DWORD PTR [ebp+edi*2-0x1b5c6f26],esi
  41f149:	sub    DWORD PTR [bx+di],ecx
  41f14c:	popf   
  41f14d:	int    0x4b
  41f14f:	mov    dh,0x60
  41f151:	dec    ebx
  41f152:	mov    edi,0x60cb54ea
  41f157:	xchg   ebp,eax
  41f158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f159:	cld    
  41f15a:	fs mov bh,0x23
  41f15d:	xchg   ebx,edi
  41f15f:	xlat   BYTE PTR ds:[ebx]
  41f160:	mov    ebp,0x1bda99d7
  41f165:	cmp    al,BYTE PTR [edi-0x74fb7ecb]
  41f16b:	shl    DWORD PTR [eax-0x48],0xc1
  41f16f:	adc    al,0x5d
  41f171:	out    dx,eax
  41f172:	inc    eax
  41f173:	xlat   BYTE PTR ds:[ebx]
  41f174:	jb     0x41f111
  41f176:	inc    ecx
  41f177:	push   es
  41f178:	fstp   QWORD PTR [ebx-0x50]
  41f17b:	pop    esp
  41f17c:	mov    dh,dl
  41f17e:	fs jns 0x41f1a7
  41f181:	jg     0x41f1d9
  41f183:	or     DWORD PTR [ebx-0x29],ebx
  41f186:	mov    bl,0xd7
  41f188:	adc    eax,0x7155f83d
  41f18d:	or     DWORD PTR [ecx+edi*8],ebx
  41f190:	mov    BYTE PTR [esi],cl
  41f192:	or     ecx,esi
  41f194:	dec    ebp
  41f195:	add    ch,BYTE PTR [edi-0x10]
  41f198:	pop    es
  41f199:	push   0x1dc924af
  41f19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f19f:	add    BYTE PTR [eax+0x283a60ce],cl
  41f1a5:	call   0x1cc5:0x7c88593e
  41f1ac:	pusha  
  41f1ad:	pop    es
  41f1ae:	adc    eax,0x1e67f289
  41f1b3:	cmp    DWORD PTR [edi-0x69cd8735],ecx
  41f1b9:	cmp    al,0xb1
  41f1bb:	(bad)  
  41f1bc:	sar    BYTE PTR ds:0xb379fc5c,cl
  41f1c2:	cli    
  41f1c3:	xlat   BYTE PTR ds:[ebx]
  41f1c4:	mov    edx,0x6f0dcb7e
  41f1c9:	pop    edx
  41f1ca:	js     0x41f1c0
  41f1cc:	mov    dh,dh
  41f1ce:	jle    0x41f165
  41f1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1d1:	or     dl,BYTE PTR [esi]
  41f1d3:	fild   QWORD PTR [ebx+0x64]
  41f1d6:	cmp    bl,al
  41f1d8:	pop    ebx
  41f1d9:	jmp    0x29b7:0xa744431e
  41f1e0:	mov    al,ds:0x2dadb163
  41f1e5:	rcl    BYTE PTR [ebx+eiz*4-0x35bed43f],cl
  41f1ec:	mov    ebp,0xb6d03a5f
  41f1f1:	push   ebx
  41f1f2:	push   cs
  41f1f3:	mov    bh,0xdf
  41f1f5:	loopne 0x41f249
  41f1f7:	cmp    edx,DWORD PTR [edx+ebp*2+0x67046544]
  41f1fe:	xchg   ebp,eax
  41f1ff:	push   ebx
  41f200:	pusha  
  41f201:	out    0x9e,al
  41f203:	push   esp
  41f204:	test   al,0x67
  41f206:	dec    esp
  41f207:	xor    ebx,DWORD PTR [esi]
  41f209:	pop    edi
  41f20a:	int3   
  41f20b:	xchg   ebp,eax
  41f20c:	call   0xe4e2:0x9fe1b1a4
  41f213:	outs   dx,DWORD PTR ds:[esi]
  41f214:	add    al,0xf2
  41f216:	push   cs
  41f217:	shr    BYTE PTR [esi+0x41f55690],1
  41f21d:	xchg   DWORD PTR ds:0xae39c38b,edx
  41f223:	enter  0xf828,0x30
  41f227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f228:	int3   
  41f229:	xchg   ebx,eax
  41f22a:	out    dx,al
  41f22b:	sbb    BYTE PTR [eax-0x23],dh
  41f22e:	stos   DWORD PTR es:[edi],eax
  41f22f:	xlat   BYTE PTR ds:[ebx]
  41f230:	xchg   ebx,eax
  41f231:	outs   dx,BYTE PTR ds:[esi]
  41f232:	mov    al,ds:0xc752bace
  41f237:	mov    ah,0xbe
  41f239:	mov    dh,0xb4
  41f23b:	jmp    0x4157d94d
  41f240:	enter  0x7a8c,0x83
  41f244:	popa   
  41f245:	data16 int 0xeb
  41f248:	out    dx,al
  41f249:	or     DWORD PTR [esi+0x4d],0x6bcc4759
  41f250:	mov    BYTE PTR [ecx-0xfbb1b6f],ah
  41f256:	aaa    
  41f257:	(bad)  
  41f258:	fldenv [ebx+0x33]
  41f25b:	add    DWORD PTR [esi-0x66],ebx
  41f25e:	sbb    edx,DWORD PTR [edi-0x5a]
  41f261:	popf   
  41f262:	mov    ch,0x28
  41f264:	lea    esp,[edx]
  41f266:	jmp    0x9a96f80
  41f26b:	add    eax,0xd7137fad
  41f270:	dec    BYTE PTR [edx-0x6126daf8]
  41f276:	and    cl,BYTE PTR [ecx-0x2635578]
  41f27c:	jo     0x41f202
  41f27e:	xchg   ebp,eax
  41f27f:	cmp    ch,bl
  41f281:	imul   edx,DWORD PTR [eax+0x48],0xa411efcf
  41f288:	retf   
  41f289:	(bad)  
  41f28a:	aaa    
  41f28b:	outs   dx,BYTE PTR ds:[esi]
  41f28c:	mov    BYTE PTR [edx+edx*4-0x58d72b72],ah
  41f293:	mov    edi,0x9f8667c7
  41f298:	mov    bh,0x97
  41f29a:	jmp    0x41f300
  41f29c:	sbb    BYTE PTR [edi-0x120efd4f],ah
  41f2a2:	add    al,0xc4
  41f2a4:	leave  
  41f2a5:	jbe    0x41f257
  41f2a7:	xlat   BYTE PTR ds:[ebx]
  41f2a8:	lock push ebx
  41f2aa:	aam    0xe0
  41f2ac:	sub    DWORD PTR [eax+0x368875ea],eax
  41f2b2:	jno    0x41f2ee
  41f2b4:	sbb    eax,0xb227fe47
  41f2b9:	addr16 dec ecx
  41f2bb:	cs xor edx,edi
  41f2be:	adc    BYTE PTR [eax+0xf],dl
  41f2c1:	aaa    
  41f2c2:	mov    ?,WORD PTR [eax]
  41f2c4:	and    BYTE PTR [edi-0x5b],ah
  41f2c7:	inc    ecx
  41f2c8:	test   ebx,ebx
  41f2ca:	mov    ?,WORD PTR [ecx]
  41f2cc:	data16 jp 0x41f251
  41f2cf:	leave  
  41f2d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2d1:	daa    
  41f2d2:	pop    edx
  41f2d3:	push   ds
  41f2d4:	xchg   edi,eax
  41f2d5:	cmp    ebp,DWORD PTR [ecx]
  41f2d7:	popf   
  41f2d8:	mov    BYTE PTR [ebx+0x39b456aa],cl
  41f2de:	or     eax,0x925e6082
  41f2e3:	push   esp
  41f2e4:	add    eax,0x206f3fc9
  41f2e9:	dec    ebp
  41f2ea:	sub    dl,ah
  41f2ec:	sub    al,0x5d
  41f2ee:	adc    DWORD PTR [edi],esi
  41f2f0:	jl     0x41f359
  41f2f2:	add    al,dl
  41f2f4:	out    0xdc,al
  41f2f6:	lea    esi,[ecx+0x75]
  41f2f9:	out    dx,eax
  41f2fa:	mov    al,0x37
  41f2fc:	mov    eax,0x2c992ae7
  41f301:	mov    ebp,0x5bad346d
  41f306:	outs   dx,DWORD PTR ds:[esi]
  41f307:	pop    ds
  41f308:	sbb    dh,BYTE PTR [ebx+0x3f7c907d]
  41f30e:	jg     0x41f2d7
  41f310:	ins    BYTE PTR es:[edi],dx
  41f311:	call   0x85a7:0x348837c0
  41f318:	imul   esi,DWORD PTR [edi],0xffffff86
  41f31b:	mov    ecx,0xb7226045
  41f320:	ins    DWORD PTR es:[edi],dx
  41f321:	jmp    0xd957:0xcf7574d
  41f328:	xchg   DWORD PTR ds:0xc8e043c3,esp
  41f32e:	ins    DWORD PTR es:[edi],dx
  41f32f:	scas   al,BYTE PTR es:[edi]
  41f330:	push   ebx
  41f331:	dec    ecx
  41f332:	jge    0x41f35a
  41f334:	in     al,dx
  41f335:	addr16 dec ecx
  41f337:	inc    esp
  41f338:	jae    0x41f339
  41f33a:	idiv   esi
  41f33c:	mov    fs,WORD PTR [ecx+esi*4]
  41f33f:	xchg   DWORD PTR [ebp+0x58],ebx
  41f342:	sbb    al,BYTE PTR [ecx-0x2811969c]
  41f348:	inc    esp
  41f349:	xlat   BYTE PTR ds:[ebx]
  41f34a:	sub    ah,dl
  41f34c:	mov    bh,0x16
  41f34e:	xchg   BYTE PTR [ecx-0x7b29fd78],ch
  41f354:	retf   0x70c3
  41f357:	sub    BYTE PTR [edx+0x67],bl
  41f35a:	jmp    0x999fdb06
  41f35f:	xchg   esi,eax
  41f360:	mov    bl,0xe5
  41f362:	mov    cl,0xf2
  41f364:	inc    ebx
  41f365:	rol    DWORD PTR [ebp+esi*2-0x7],0xaf
  41f36a:	mov    dh,0xd7
  41f36c:	fimul  WORD PTR [esi+eax*2+0x4df26138]
  41f373:	(bad)  
  41f374:	mov    BYTE PTR [ecx-0x1de9c63],dh
  41f37a:	push   ds
  41f37b:	inc    ecx
  41f37c:	(bad)  
  41f37d:	push   ss
  41f37e:	adc    edi,0x68
  41f381:	ins    BYTE PTR es:[edi],dx
  41f382:	xchg   edx,eax
  41f383:	add    BYTE PTR [esp+esi*1-0xa],ah
  41f387:	jne    0x41f311
  41f389:	push   es
  41f38a:	and    bh,BYTE PTR [esi-0x31b89c7a]
  41f390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f391:	inc    ax
  41f393:	cmp    eax,0xe05f03f5
  41f398:	(bad)  
  41f399:	hlt    
  41f39a:	cmp    ecx,eax
  41f39c:	jo     0x41f323
  41f39e:	mov    cl,0x3f
  41f3a0:	and    dh,dl
  41f3a2:	cld    
  41f3a3:	fwait
  41f3a4:	into   
  41f3a5:	div    BYTE PTR [ecx+0x40bce4e7]
  41f3ab:	push   ecx
  41f3ac:	(bad)  
  41f3ad:	(bad)  [ebx-0x29]
  41f3b0:	imul   cx,bp,0x22
  41f3b4:	or     BYTE PTR [esp+eiz*4],bl
  41f3b7:	cli    
  41f3b8:	mov    edx,0xe3576164
  41f3bd:	dec    edi
  41f3be:	and    edi,ebx
  41f3c0:	mov    dl,0x3f
  41f3c2:	imul   ecx
  41f3c4:	push   ss
  41f3c5:	repnz xor DWORD PTR [ecx-0x1ce22c27],ecx
  41f3cc:	popf   
  41f3cd:	sbb    al,0xb1
  41f3cf:	addr16 ret 
  41f3d1:	jae    0x41f363
  41f3d3:	sbb    dh,BYTE PTR ds:0x5fd7aeba
  41f3d9:	rcr    DWORD PTR [ecx-0x6a],1
  41f3dc:	adc    dh,0x83
  41f3df:	pop    esi
  41f3e0:	mov    BYTE PTR [ebp-0x106cbe9],ch
  41f3e6:	add    eax,0xcc675b9b
  41f3eb:	pop    ebp
  41f3ec:	mov    cl,0x2c
  41f3ee:	dec    edi
  41f3ef:	ins    DWORD PTR es:[edi],dx
  41f3f0:	retf   0x8a79
  41f3f3:	lods   eax,DWORD PTR ds:[esi]
  41f3f4:	sbb    bh,ah
  41f3f6:	mov    al,ds:0xb3126ce1
  41f3fb:	mov    ch,0xd1
  41f3fd:	imul   edi,DWORD PTR [eax],0xbfeafd1e
  41f403:	std    
  41f404:	inc    ebp
  41f405:	xlat   BYTE PTR ds:[ebx]
  41f406:	enter  0x6089,0xc7
  41f40a:	jp     0x41f3dc
  41f40c:	xchg   DWORD PTR [ecx+edx*2-0x5c962c9b],esi
  41f413:	xchg   esi,eax
  41f414:	dec    eax
  41f415:	scas   al,BYTE PTR es:[edi]
  41f416:	arpl   WORD PTR [ebp+0x4a2f677c],sp
  41f41c:	pop    ebx
  41f41d:	fmul   QWORD PTR [ebx+esi*1]
  41f420:	out    0x54,al
  41f422:	mov    cl,0xa2
  41f424:	inc    edi
  41f425:	cmp    eax,0x100c90b3
  41f42a:	imul   edx,edi,0x79
  41f42d:	sbb    esp,ebp
  41f42f:	(bad)  
  41f430:	outs   dx,DWORD PTR ds:[esi]
  41f431:	pop    edi
  41f432:	dec    edi
  41f433:	call   0xdcf3f22a
  41f438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f439:	add    DWORD PTR [ecx],esp
  41f43b:	jle    0x41f4ba
  41f43d:	push   eax
  41f43e:	sbb    eax,0xa54a43d7
  41f443:	add    eax,0x1b5fcd
  41f448:	mov    cl,dh
  41f44a:	cld    
  41f44b:	(bad)  
  41f44c:	rol    BYTE PTR [esi],cl
  41f44e:	mov    ah,0x6d
  41f450:	cmp    eax,0xf6a1931c
  41f455:	fild   QWORD PTR [ecx-0x728372a]
  41f45b:	dec    eax
  41f45c:	mov    WORD PTR [edi],?
  41f45e:	bound  edi,QWORD PTR [ebx]
  41f460:	pop    ds
  41f461:	cli    
  41f462:	mov    esi,0x2919211d
  41f467:	mov    bh,0x12
  41f469:	fmul   QWORD PTR [ebp+eax*4-0x5c]
  41f46d:	addr16 aaa 
  41f46f:	cmp    eax,0x87918630
  41f474:	mov    ds,WORD PTR [ebx-0x4f]
  41f477:	out    0xd1,al
  41f479:	sub    bh,BYTE PTR [edx-0x4b5440a9]
  41f47f:	xlat   BYTE PTR ds:[ebx]
  41f480:	call   0xfa1d:0x7a5274fe
  41f487:	cdq    
  41f488:	std    
  41f489:	gs mov cl,0x33
  41f48c:	or     ebx,ebp
  41f48e:	aam    0x17
  41f490:	hlt    
  41f491:	push   ds
  41f492:	xchg   edi,eax
  41f493:	xlat   BYTE PTR ds:[ebx]
  41f494:	arpl   bp,di
  41f496:	js     0x41f4d8
  41f498:	mov    ah,0x6
  41f49a:	mov    esp,0xf52488c6
  41f49f:	inc    esp
  41f4a0:	push   ebx
  41f4a1:	into   
  41f4a2:	(bad)  
  41f4a3:	pop    ecx
  41f4a4:	in     al,0x7b
  41f4a6:	je     0x41f4db
  41f4a8:	int3   
  41f4a9:	loope  0x41f517
  41f4ab:	add    BYTE PTR [ecx+0x29],dh
  41f4ae:	mov    cl,0x30
  41f4b0:	jge    0x41f4af
  41f4b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4b3:	stc    
  41f4b4:	int    0x74
  41f4b6:	jae    0x41f490
  41f4b8:	mov    ah,0x8f
  41f4ba:	fiadd  DWORD PTR [eax+0x6881e448]
  41f4c0:	test   al,0x4b
  41f4c2:	mov    cl,0xc9
  41f4c4:	jl     0x41f496
  41f4c6:	jge    0x41f4de
  41f4c8:	mov    ecx,0xc379443
  41f4cd:	jns    0x41f4ae
  41f4cf:	jl     0x41f480
  41f4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4d2:	das    
  41f4d3:	jp     0x41f505
  41f4d5:	imul   edx,DWORD PTR [eax+0x5],0x579d2dbd
  41f4dc:	outs   dx,BYTE PTR ds:[esi]
  41f4dd:	mul    DWORD PTR [edx-0x744c4614]
  41f4e3:	xlat   BYTE PTR ds:[ebx]
  41f4e4:	test   esp,esp
  41f4e6:	ds cdq 
  41f4e8:	ret    
  41f4e9:	hlt    
  41f4ea:	jp     0x41f514
  41f4ec:	fwait
  41f4ed:	rol    ecx,0x21
  41f4f0:	ficomp DWORD PTR [ecx]
  41f4f2:	mov    cl,0x83
  41f4f4:	mov    ecx,0xb4361fb
  41f4f9:	addr16 xchg ebp,eax
  41f4fb:	jle    0x41f4f8
  41f4fd:	push   esi
  41f4fe:	ja     0x41f56f
  41f500:	and    dh,BYTE PTR es:[ecx+0x4183feb1]
  41f507:	out    0xd,eax
  41f509:	jbe    0x41f4e7
  41f50b:	xlat   BYTE PTR ds:[ebx]
  41f50c:	repz pop ecx
  41f50e:	lods   al,BYTE PTR ds:[esi]
  41f50f:	dec    ecx
  41f510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f511:	(bad)  
  41f512:	adc    DWORD PTR [eax+0x683ed388],ebp
  41f518:	cmc    
  41f519:	xlat   BYTE PTR ds:[ebx]
  41f51a:	fnsave [eax-0x1d]
  41f51d:	addr16 sbb al,0xcf
  41f520:	jbe    0x41f504
  41f522:	xchg   ecx,eax
  41f523:	jnp    0x41f4d4
  41f525:	ret    
  41f526:	xchg   edi,eax
  41f527:	jecxz  0x41f4bc
  41f529:	jmp    0xbbcb:0x758d19b0
  41f530:	pop    eax
  41f531:	in     eax,dx
  41f532:	inc    ebx
  41f533:	aas    
  41f534:	hlt    
  41f535:	addr16 aam 0x7e
  41f538:	test   eax,0x5a5f11fa
  41f53d:	imul   esi,DWORD PTR [ebp-0x7e4a017d],0x46
  41f544:	dec    eax
  41f545:	dec    ebp
  41f546:	call   0xb47f:0x2367b14b
  41f54d:	int3   
  41f54e:	scas   eax,DWORD PTR es:[edi]
  41f54f:	xchg   edi,eax
  41f550:	push   ebx
  41f551:	mov    al,ds:0xd1d52cb1
  41f556:	mov    BYTE PTR [eax],cl
  41f558:	call   FWORD PTR ds:0x4b51d7b5
  41f55e:	sub    edi,edx
  41f560:	ins    DWORD PTR es:[edi],dx
  41f561:	mov    ebp,0x4888010
  41f566:	loope  0x41f58a
  41f568:	popf   
  41f569:	inc    esp
  41f56a:	cld    
  41f56b:	xor    DWORD PTR [ebp-0x1d34f0a0],ebp
  41f571:	mov    bh,0x18
  41f573:	xchg   edi,eax
  41f574:	mov    al,ds:0x865373e0
  41f579:	imul   ecx,DWORD PTR [eax],0x9080131d
  41f57f:	pop    ss
  41f580:	mov    ds:0xbdd79a37,eax
  41f585:	loop   0x41f563
  41f587:	add    dh,BYTE PTR [edi+edi*8+0x5988bbb9]
  41f58e:	xor    BYTE PTR [esi+0x1b],0x33
  41f592:	pop    esp
  41f593:	fldenv [ebx-0x79ae7f99]
  41f599:	mov    ch,0x4e
  41f59b:	jecxz  0x41f5b9
  41f59d:	call   0x78da:0x4cf721b1
  41f5a4:	enter  0x8fb4,0xd7
  41f5a8:	neg    bh
  41f5aa:	pop    ds
  41f5ab:	mov    al,0x30
  41f5ad:	cmp    DWORD PTR [eax-0x6c787799],eax
  41f5b3:	and    bl,BYTE PTR [eax+0x54043838]
  41f5b9:	jp     0x41f5ec
  41f5bb:	in     al,dx
  41f5bc:	jmp    0x99a3a5da
  41f5c1:	(bad)  
  41f5c2:	in     eax,0xd8
  41f5c4:	test   DWORD PTR [ecx+esi*4+0x76],ecx
  41f5c8:	les    esi,FWORD PTR [esi+esi*2-0x46]
  41f5cc:	inc    ebx
  41f5cd:	fild   DWORD PTR [si+0x3802]
  41f5d2:	sub    DWORD PTR [ebx-0x45],edx
  41f5d5:	push   eax
  41f5d6:	mov    ds:0x31689748,al
  41f5db:	in     eax,dx
  41f5dc:	leave  
  41f5dd:	push   ds
  41f5de:	and    ah,BYTE PTR [ecx]
  41f5e0:	sahf   
  41f5e1:	addr16 pop edx
  41f5e3:	mov    WORD PTR [edi*8-0x3e7f8c76],?
  41f5ea:	mov    cl,0xb9
  41f5ec:	mov    esp,0x3b3a2634
  41f5f1:	sbb    eax,0xe7d0d730
  41f5f6:	jmp    0x77ef5331
  41f5fb:	xor    ecx,DWORD PTR [eax-0x4e3a3e05]
  41f601:	shl    DWORD PTR [esi+0x5d],0x6f
  41f605:	imul   edx,DWORD PTR ds:0xb062eb14,0x90474ad9
  41f60f:	mov    bh,0x25
  41f611:	lds    esi,FWORD PTR [esi-0x2294c8e6]
  41f617:	mov    esi,0x1f512ed8
  41f61c:	mov    al,ds:0xaac55867
  41f621:	fisubr WORD PTR [eax+0x54]
  41f624:	mov    ds:0x2936b19f,eax
  41f629:	mov    ds:0xc6d49c31,eax
  41f62e:	mov    ss,edi
  41f630:	rcl    edi,1
  41f632:	iret   
  41f633:	xchg   esp,eax
  41f634:	sahf   
  41f635:	jmp    0x41f5f7
  41f637:	add    cl,BYTE PTR [eax+0x51ad97a6]
  41f63d:	sar    DWORD PTR [edi-0x1986e0b],cl
  41f643:	pop    eax
  41f644:	faddp  st(1),st
  41f646:	or     eax,0xb14a94a1
  41f64b:	jnp    0x41f5ee
  41f64d:	adc    DWORD PTR ds:0xba6ffc82,0xffffffd6
  41f654:	std    
  41f655:	mov    edx,0xf06ebb69
  41f65a:	enter  0xbda7,0xad
  41f65e:	mov    al,0x32
  41f660:	mov    WORD PTR ds:0xe51a9673,ds
  41f666:	inc    ecx
  41f667:	mov    dl,bh
  41f669:	adc    ch,BYTE PTR [bx+di-0x49]
  41f66d:	and    cl,BYTE PTR [eax+edx*8]
  41f670:	xor    eax,DWORD PTR [ecx-0x4d0d224f]
  41f676:	retf   
  41f677:	dec    ebx
  41f678:	cld    
  41f679:	fwait
  41f67a:	sub    ebp,DWORD PTR [ebp+0x15a670f]
  41f680:	inc    ebx
  41f681:	and    ah,bl
  41f683:	popa   
  41f684:	imul   esp,DWORD PTR [ebp-0x9c1ec4f],0xc5f85377
  41f68e:	mov    eax,ds:0x944a02d4
  41f693:	jae    0x41f6d4
  41f695:	fstp   TBYTE PTR [ecx]
  41f697:	lods   eax,DWORD PTR ds:[esi]
  41f698:	sahf   
  41f699:	xchg   ecx,eax
  41f69a:	mov    cl,0x36
  41f69c:	popf   
  41f69d:	stos   BYTE PTR es:[edi],al
  41f69e:	rcl    DWORD PTR [eax+0x4],cl
  41f6a1:	stc    
  41f6a2:	jae    0x41f67b
  41f6a4:	mov    ecx,0x859f0c62
  41f6a9:	push   edi
  41f6aa:	addr16 or al,0x85
  41f6ad:	adc    edi,DWORD PTR [edx+ebp*1+0x1efe6ba7]
  41f6b4:	mov    al,ds:0xb467cb3c
  41f6b9:	pop    ebp
  41f6ba:	scas   eax,DWORD PTR es:[edi]
  41f6bb:	cmp    DWORD PTR [edi-0x693c8993],edi
  41f6c1:	pop    eax
  41f6c2:	and    ecx,DWORD PTR [edx-0x39]
  41f6c5:	pop    es
  41f6c6:	enter  0x90f8,0x79
  41f6ca:	mov    DWORD PTR [eax+0xe],edi
  41f6cd:	addr16 ss pop ds
  41f6d0:	jg     0x41f6a9
  41f6d2:	int    0xc6
  41f6d4:	mov    BYTE PTR [ebp+0x25],dh
  41f6d7:	mov    al,0x86
  41f6d9:	inc    esp
  41f6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6dc:	mov    al,ds:0x55b67a43
  41f6e1:	addr16 in al,0xd
  41f6e4:	and    al,dh
  41f6e6:	call   0xb9fd:0x88a1888e
  41f6ed:	(bad)  
  41f6ee:	cmc    
  41f6ef:	fcmovnbe st,st(1)
  41f6f1:	addr16 jb 0x41f68b
  41f6f4:	loope  0x41f684
  41f6f6:	add    esi,DWORD PTR [esi]
  41f6f8:	leave  
  41f6f9:	mov    al,0xb1
  41f6fb:	bound  edx,QWORD PTR [esi+ebp*8+0x18]
  41f6ff:	(bad)  
  41f700:	mov    DWORD PTR [edi],ebx
  41f702:	inc    ecx
  41f703:	xlat   BYTE PTR ds:[ebx]
  41f704:	shl    ecx,1
  41f706:	xchg   BYTE PTR [ebp-0x26a0d285],dh
  41f70c:	int3   
  41f70d:	mov    WORD PTR [edi+edx*8-0x62],?
  41f711:	and    cl,BYTE PTR [ebp+0x48]
  41f714:	(bad)  
  41f715:	pop    ecx
  41f716:	stc    
  41f717:	xlat   BYTE PTR ds:[ebx]
  41f718:	mov    WORD PTR [ebx+0x1],cs
  41f71b:	inc    ecx
  41f71c:	popf   
  41f71d:	xor    DWORD PTR [ecx+0x2c],edi
  41f720:	push   0xa8f2b15f
  41f725:	daa    
  41f726:	mov    dh,0x37
  41f728:	add    dh,bl
  41f72a:	(bad)  
  41f72b:	xlat   BYTE PTR ds:[ebx]
  41f72c:	pop    ebx
  41f72d:	clc    
  41f72e:	sub    BYTE PTR [edx+0x41d4dc83],0x96
  41f735:	hlt    
  41f736:	cmp    BYTE PTR [edx],dl
  41f738:	mov    BYTE PTR [edx],bl
  41f73a:	push   edx
  41f73b:	jne    0x41f771
  41f73d:	push   edi
  41f73e:	jecxz  0x41f767
  41f740:	sahf   
  41f741:	addr16 push ebp
  41f743:	iret   
  41f744:	mov    ch,0xed
  41f746:	cmp    DWORD PTR [ebp+0x28b1b151],0xffffffbe
  41f74d:	sub    DWORD PTR [eax-0x1659c4b5],eax
  41f753:	xlat   BYTE PTR ds:[ebx]
  41f754:	mov    eax,0x2db49187
  41f759:	(bad)  
  41f75a:	out    0x8d,al
  41f75c:	mov    BYTE PTR [edi-0x64],ch
  41f75f:	iret   
  41f760:	(bad)  
  41f761:	out    0x74,al
  41f763:	popa   
  41f764:	lods   eax,DWORD PTR ds:[esi]
  41f765:	lds    edx,FWORD PTR [si-0x2c]
  41f769:	div    BYTE PTR [edi-0x5350a7d7]
  41f76f:	xchg   ecx,eax
  41f770:	nop
  41f771:	add    eax,0x83aa3571
  41f776:	add    DWORD PTR [eax-0x2820e4f3],ebp
  41f77c:	adc    bh,BYTE PTR [edx+0xd7f71b]
  41f782:	pop    ebx
  41f783:	fnstcw WORD PTR [ecx+0x7a431429]
  41f789:	jmp    0xc148e8c2
  41f78e:	mov    cl,0xf4
  41f790:	xor    esi,DWORD PTR [ebp+0x67cf3723]
  41f796:	mov    ah,0xe1
  41f798:	pop    esi
  41f799:	outs   dx,DWORD PTR ds:[esi]
  41f79a:	es jmp 0x41f76e
  41f79d:	jecxz  0x41f750
  41f79f:	mov    cs,WORD PTR [esp+esi*1-0x6be46474]
  41f7a6:	into   
  41f7a7:	inc    edi
  41f7a8:	mov    WORD PTR [ebp+eiz*1+0x4c],fs
  41f7ac:	cmp    BYTE PTR [ebp-0x3a],dh
  41f7af:	cmp    al,0x18
  41f7b1:	loopne 0x41f766
  41f7b3:	adc    DWORD PTR [esi+0x5c],edi
  41f7b6:	mov    cl,0xce
  41f7b8:	out    0xac,eax
  41f7ba:	sbb    al,0x8d
  41f7bc:	arpl   WORD PTR ds:0x83c69fa7,bx
  41f7c2:	mov    al,0xd4
  41f7c4:	cdq    
  41f7c5:	jo     0x41f7ec
  41f7c7:	rcl    DWORD PTR [eax],cl
  41f7c9:	mov    edi,0x12d0cd16
  41f7ce:	jne    0x41f77b
  41f7d0:	mov    BYTE PTR [edi+0x40],dh
  41f7d3:	ror    DWORD PTR [edx+0x2e],1
  41f7d6:	mov    edi,0x3c64c3e2
  41f7db:	aad    0x35
  41f7dd:	call   0xa8ef:0xba389362
  41f7e4:	clc    
  41f7e5:	pop    ebx
  41f7e6:	mov    edi,0x7104fec1
  41f7eb:	mov    eax,0x23b6c729
  41f7f0:	loopne 0x41f7f3
  41f7f2:	adc    edi,edx
  41f7f4:	ins    BYTE PTR es:[edi],dx
  41f7f5:	aam    0x7e
  41f7f7:	leave  
  41f7f8:	repnz imul edx,DWORD PTR ds:0xf3b188f4,0xc1d9c34f
  41f803:	es dec esp
  41f805:	test   DWORD PTR [di-0x1ecb],eax
  41f80a:	in     eax,0x9f
  41f80c:	sbb    BYTE PTR ds:0x7bac6cb1,0xbf
  41f813:	(bad)  
  41f814:	mov    ebx,0x86d96e31
  41f819:	iret   
  41f81a:	push   ds
  41f81b:	jecxz  0x41f7c5
  41f81d:	xor    al,0x4a
  41f81f:	pcmpeqb mm2,QWORD PTR [ebp+0x1473e5b1]
  41f826:	xchg   edx,eax
  41f827:	imul   edx
  41f829:	lds    eax,FWORD PTR [ecx]
  41f82b:	xlat   BYTE PTR ds:[ebx]
  41f82c:	sti    
  41f82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f82e:	lods   eax,DWORD PTR ds:[esi]
  41f82f:	cld    
  41f830:	jmp    0x41f7dd
  41f832:	inc    ecx
  41f833:	mov    eax,ds:0x21ef2988
  41f838:	jecxz  0x41f891
  41f83a:	(bad)  
  41f83b:	call   0x8e3a:0x98df6782
  41f842:	mov    BYTE PTR [eax+0x39],dh
  41f845:	arpl   WORD PTR [ecx-0x5a1b4444],si
  41f84b:	repnz sub DWORD PTR [edi],ecx
  41f84e:	ret    0xafd7
  41f851:	cli    
  41f852:	(bad)  
  41f853:	int3   
  41f854:	push   esp
  41f855:	mov    ecx,0x3386d664
  41f85a:	push   eax
  41f85b:	popa   
  41f85c:	mov    eax,0x9697712c
  41f861:	(bad)  
  41f862:	jnp    0x41f83b
  41f864:	in     al,dx
  41f865:	call   0xd4d8:0xdea9850c
  41f86c:	rcl    BYTE PTR [ebp+0x44d1deaa],1
  41f872:	dec    ecx
  41f873:	xlat   BYTE PTR ds:[ebx]
  41f874:	push   0x4f9245ad
  41f879:	adc    esp,DWORD PTR [ebp+0x312e31ef]
  41f87f:	sub    eax,0x96375b67
  41f884:	sub    al,0xee
  41f886:	mov    al,0xd6
  41f888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f889:	rcl    cl,0xee
  41f88c:	mov    bl,0x9b
  41f88e:	data16 ja 0x41f8e4
  41f891:	dec    edx
  41f892:	dec    edi
  41f893:	xlat   BYTE PTR ds:[ebx]
  41f894:	loop   0x41f84b
  41f896:	add    BYTE PTR [edi+0x3b],cl
  41f899:	xchg   ebx,eax
  41f89a:	loopne 0x41f8b2
  41f89c:	mov    DWORD PTR [edx],ebp
  41f89e:	call   DWORD PTR [ebx+0x116e4762]
  41f8a4:	neg    BYTE PTR [ebp-0x5a]
  41f8a7:	call   0x6100f2e2
  41f8ac:	add    eax,0x2122ffd2
  41f8b1:	or     eax,0x179867d1
  41f8b6:	push   ebx
  41f8b7:	jns    0x41f841
  41f8b9:	lods   eax,DWORD PTR ds:[esi]
  41f8ba:	pop    edx
  41f8bb:	mov    eax,ds:0x84b591c8
  41f8c0:	xchg   BYTE PTR [eax-0xc],bh
  41f8c3:	xchg   esp,eax
  41f8c4:	jg     0x41f8ad
  41f8c6:	imul   eax,DWORD PTR [edx-0x415a0d0c],0xffffff88
  41f8cd:	sbb    ebx,ebx
  41f8cf:	add    eax,0xee4ef9d6
  41f8d4:	dec    eax
  41f8d5:	pop    ebx
  41f8d6:	repz popa 
  41f8d8:	or     BYTE PTR [edx],dh
  41f8da:	shr    BYTE PTR [ebp+0x54],cl
  41f8dd:	fisttp WORD PTR [ebp+ebx*8-0x78]
  41f8e1:	shl    DWORD PTR [esi-0x4d326ff0],cl
  41f8e7:	out    dx,eax
  41f8e8:	ret    
  41f8e9:	addr16 push ds
  41f8eb:	dec    esi
  41f8ec:	or     BYTE PTR [edi],dl
  41f8ee:	mov    ?,WORD PTR gs:[edx]
  41f8f1:	mov    ebp,0xe53336be
  41f8f6:	xor    bh,dl
  41f8f8:	jnp    0x41f8fa
  41f8fa:	fcmovu st,st(5)
  41f8fc:	jb     0x41f89d
  41f8fe:	std    
  41f8ff:	xlat   BYTE PTR ds:[ebx]
  41f900:	lahf   
  41f901:	jb     0x41f976
  41f903:	cmp    eax,0x179a22a7
  41f908:	jl     0x41f8ec
  41f90a:	mov    cl,0x97
  41f90c:	inc    edi
  41f90d:	mov    bl,0x2e
  41f90f:	and    al,dh
  41f911:	test   al,0xdb
  41f913:	xlat   BYTE PTR ds:[ebx]
  41f914:	push   ebx
  41f915:	in     eax,0x79
  41f917:	dec    ecx
  41f918:	push   esi
  41f919:	pusha  
  41f91a:	dec    ecx
  41f91b:	xchg   edx,eax
  41f91c:	mov    BYTE PTR [ecx-0xd8cab02],dh
  41f922:	jl     0x41f935
  41f924:	out    dx,al
  41f925:	pusha  
  41f926:	push   ebx
  41f927:	bound  ebx,QWORD PTR [ecx-0xd]
  41f92a:	dec    edi
  41f92b:	daa    
  41f92c:	in     eax,dx
  41f92d:	mov    bh,0xb2
  41f92f:	sub    cl,BYTE PTR [eax-0x44de40cf]
  41f935:	add    eax,0x69640ed1
  41f93a:	frstor [edi+0x39]
  41f93d:	add    esi,DWORD PTR [ecx]
  41f93f:	mov    ecx,0x74ad8b7c
  41f944:	xchg   DWORD PTR [eax*1+0x79b9fdc7],eax
  41f94b:	cmp    BYTE PTR [eax+0x76],0x96
  41f94f:	xlat   BYTE PTR ds:[ebx]
  41f950:	pop    esp
  41f951:	or     dl,BYTE PTR [ebx]
  41f953:	xor    BYTE PTR [esi-0x43],ch
  41f956:	cmc    
  41f957:	fdivr  DWORD PTR [edx-0x77]
  41f95a:	mov    cl,0xf4
  41f95c:	pop    ebp
  41f95d:	mov    BYTE PTR [ecx-0x286088ad],ah
  41f963:	aam    0xb0
  41f965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f966:	xchg   esi,eax
  41f967:	jle    0x41f994
  41f969:	loope  0x41f98c
  41f96b:	mov    dl,0x46
  41f96d:	sub    dh,BYTE PTR [ecx-0x2574eda3]
  41f973:	mov    WORD PTR [ecx-0x8291eb6],ds
  41f979:	cdq    
  41f97a:	test   eax,0x98408174
  41f97f:	and    esi,DWORD PTR [edi-0x6eec4e86]
  41f985:	in     eax,0x5e
  41f987:	xor    esi,DWORD PTR [ebx]
  41f989:	aas    
  41f98a:	inc    ebp
  41f98b:	xlat   BYTE PTR ds:[ebx]
  41f98c:	jmp    0x2284:0xc18331d6
  41f993:	test   eax,0xc4b1bd74
  41f998:	push   esi
  41f999:	leave  
  41f99a:	nop
  41f99b:	push   esi
  41f99c:	fs lahf 
  41f99e:	or     eax,ebx
  41f9a0:	or     DWORD PTR [esp+eiz*2-0x17],esp
  41f9a4:	mov    ebx,0x638d6a68
  41f9a9:	and    al,0xbc
  41f9ab:	pop    ss
  41f9ac:	daa    
  41f9ad:	call   DWORD PTR ds:0x1c1a882a
  41f9b3:	xor    DWORD PTR [ecx+edi*8],0x9979a79e
  41f9ba:	aas    
  41f9bb:	xlat   BYTE PTR ds:[ebx]
  41f9bc:	retf   
  41f9bd:	cld    
  41f9be:	cmp    al,0x3f
  41f9c0:	jmp    0x837f:0x88bc866b
  41f9c7:	mov    ecx,DWORD PTR [ecx-0x460f7bbe]
  41f9cd:	addr16 ret 0x322
  41f9d1:	pop    ebp
  41f9d2:	jb     0x41fa39
  41f9d4:	jecxz  0x41fa26
  41f9d6:	mov    cl,0xbe
  41f9d8:	push   es
  41f9d9:	shl    DWORD PTR [eax],0x38
  41f9dc:	xchg   ebx,eax
  41f9dd:	add    eax,0x8b3ad4e2
  41f9e2:	fsub   QWORD PTR [ebx+0x5a]
  41f9e5:	jl     0x41fa01
  41f9e7:	xchg   ebx,eax
  41f9e8:	dec    edi
  41f9e9:	fnsave [ebx+0x13]
  41f9ec:	xchg   edi,eax
  41f9ed:	(bad)  
  41f9ee:	mov    cl,0x3c
  41f9f0:	retf   0xc508
  41f9f3:	and    BYTE PTR [ebp-0x3dc8d876],ah
  41f9f9:	addr16 cwde 
  41f9fb:	xor    dl,dh
  41f9fd:	stos   BYTE PTR es:[edi],al
  41f9fe:	mov    ss,WORD PTR [ebx+0x34]
  41fa01:	xchg   esp,eax
  41fa02:	mov    cl,0xea
  41fa04:	pop    edi
  41fa05:	pop    ebp
  41fa06:	loope  0x41f99b
  41fa08:	sub    eax,0xeef3abd8
  41fa0d:	ret    
  41fa0e:	rcl    bh,cl
  41fa10:	(bad)  
  41fa11:	(bad)  
  41fa12:	(bad)  
  41fa13:	shl    DWORD PTR [edx+0x17318ea6],cl
  41fa19:	je     0x41f9ab
  41fa1b:	mov    esi,0x74312689
  41fa20:	iret   
  41fa21:	mov    al,0xe4
  41fa23:	aaa    
  41fa24:	push   ebp
  41fa25:	or     BYTE PTR [ecx+ebp*8-0x6],ah
  41fa29:	and    eax,0x4f4da94e
  41fa2e:	fadd   QWORD PTR [ebx]
  41fa30:	and    BYTE PTR [edi-0x63],ah
  41fa33:	dec    edx
  41fa34:	mov    edx,0xc94db2ae
  41fa39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa3a:	leave  
  41fa3b:	push   0xffffff88
  41fa3d:	sbb    DWORD PTR [eax+0x29cf26f8],edx
  41fa43:	add    DWORD PTR [ecx-0x57f72b99],ebx
  41fa49:	jmp    0x41fa28
  41fa4b:	loopne 0x41f9f9
  41fa4d:	ror    DWORD PTR [ecx],0x75
  41fa50:	mov    BYTE PTR [esi],bh
  41fa52:	push   ss
  41fa53:	jns    0x41fa2c
  41fa55:	xchg   ebx,eax
  41fa56:	pop    ebp
  41fa57:	inc    eax
  41fa58:	frstor [edi+0x30]
  41fa5b:	fild   WORD PTR [esi]
  41fa5d:	ja     0x41f9f8
  41fa5f:	mov    edi,DWORD PTR [edx+edi*8-0x23786634]
  41fa66:	cmc    
  41fa67:	sbb    esi,DWORD PTR [esi]
  41fa69:	or     al,0xbe
  41fa6b:	imul   DWORD PTR [esi+ebp*2-0x3b]
  41fa6f:	xlat   BYTE PTR ds:[ebx]
  41fa70:	adc    eax,0xea9140e5
  41fa75:	fucomip st,st(1)
  41fa77:	dec    edi
  41fa78:	mov    BYTE PTR [edx],dl
  41fa7a:	jb     0x41fa21
  41fa7c:	in     eax,dx
  41fa7d:	cld    
  41fa7e:	mov    edi,DWORD PTR ds:0xc7b85ec5
  41fa84:	mov    BYTE PTR [edi],bl
  41fa86:	xor    al,0x99
  41fa88:	arpl   cx,bx
  41fa8a:	dec    ebp
  41fa8b:	dec    edi
  41fa8c:	test   DWORD PTR [ebx-0x5d229ade],eax
  41fa92:	std    
  41fa93:	cmp    ecx,DWORD PTR [eax+0x5e]
  41fa96:	out    0xf1,eax
  41fa98:	jns    0x41fb01
  41fa9a:	inc    DWORD PTR [edx-0x47e5356f]
  41faa0:	mov    ds:0xbad3b22a,eax
  41faa5:	(bad)  
  41faa6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41faa8:	fs xchg edi,eax
  41faaa:	pushf  
  41faab:	pop    es
  41faac:	jp     0x41fb12
  41faae:	das    
  41faaf:	fs (bad) 
  41fab1:	popa   
  41fab2:	(bad)  
  41fab3:	loopne 0x41fa35
  41fab5:	inc    ebp
  41fab6:	cmp    DWORD PTR [ecx+0x79],esi
  41fab9:	mov    WORD PTR [ecx],es
  41fabb:	sbb    DWORD PTR [edi-0x7e4cde89],esp
  41fac1:	pop    es
  41fac2:	mov    bh,0x38
  41fac4:	add    eax,0xd8308117
  41fac9:	and    edi,eax
  41facb:	xlat   BYTE PTR ds:[ebx]
  41facc:	test   BYTE PTR [ebp+0x5ed5c241],0xae
  41fad3:	jle    0x41fa5d
  41fad5:	dec    esi
  41fad6:	mov    dh,0x8e
  41fad8:	adc    al,BYTE PTR [ebp+0x651860f1]
  41fade:	stos   DWORD PTR es:[edi],eax
  41fadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae0:	sti    
  41fae1:	aaa    
  41fae2:	mov    ah,0x74
  41fae4:	inc    ebp
  41fae5:	push   esp
  41fae6:	sub    esp,eax
  41fae8:	enter  0x3020,0x66
  41faec:	mov    BYTE PTR [edx+0x5f],dl
  41faef:	enter  0xf89f,0x7c
  41faf3:	add    DWORD PTR [esi+0x79],ebp
  41faf6:	mov    ds:0x4264fa88,al
  41fafb:	addr16 and bh,dh
  41fafe:	jns    0x41fa97
  41fb00:	jmp    0xcd13:0xe383b6dd
  41fb07:	or     BYTE PTR [eax-0x2ce7e96d],0x67
  41fb0e:	mov    al,0xe9
  41fb10:	dec    esp
  41fb11:	mov    esp,0xd0209e47
  41fb16:	mov    ebx,esp
  41fb18:	xchg   ecx,eax
  41fb19:	out    0xf2,eax
  41fb1b:	xor    al,0xda
  41fb1d:	pushf  
  41fb1e:	repz inc ecx
  41fb20:	mov    esp,0x46b677b
  41fb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb26:	cdq    
  41fb27:	inc    ebx
  41fb28:	lods   al,BYTE PTR ds:[esi]
  41fb29:	test   eax,0x46889a22
  41fb2e:	pusha  
  41fb2f:	sbb    eax,ecx
  41fb31:	shr    DWORD PTR ds:[eax],cl
  41fb34:	loopne 0x41fb9d
  41fb36:	ins    DWORD PTR es:[edi],dx
  41fb37:	pop    ebx
  41fb38:	jl     0x41fb1f
  41fb3a:	popf   
  41fb3b:	ins    DWORD PTR es:[edi],dx
  41fb3c:	cmp    BYTE PTR [edi-0x50],0x78
  41fb40:	int3   
  41fb41:	shl    DWORD PTR [edx],cl
  41fb43:	add    al,0x7e
  41fb45:	xchg   edi,eax
  41fb46:	ror    ebp,0x46
  41fb49:	addr16 push eax
  41fb4b:	pop    esp
  41fb4c:	sbb    BYTE PTR [edx-0x29],0x22
  41fb50:	ret    
  41fb51:	push   ds
  41fb52:	mov    cl,0xaa
  41fb54:	pushf  
  41fb55:	sahf   
  41fb56:	mov    ch,0xdc
  41fb58:	xchg   DWORD PTR [edx-0x12],ebp
  41fb5b:	xlat   BYTE PTR ds:[ebx]
  41fb5c:	or     DWORD PTR [eax-0x4e],edx
  41fb5f:	jg     0x41fbc5
  41fb61:	add    eax,0xbe884dd4
  41fb66:	icebp  
  41fb67:	push   0xb631356c
  41fb6c:	sbb    eax,0x4ec82068
  41fb71:	pop    esi
  41fb72:	icebp  
  41fb73:	inc    edx
  41fb74:	cwde   
  41fb75:	jle    0x41fb7e
  41fb77:	fmul   DWORD PTR [eax-0x364a4012]
  41fb7d:	and    DWORD PTR [ecx],edx
  41fb7f:	repnz push ebp
  41fb81:	add    DWORD PTR [esp+edx*8+0x77],0x5660a7de
  41fb89:	mov    ecx,DWORD PTR [ecx]
  41fb8b:	inc    edi
  41fb8c:	loop   0x41fb23
  41fb8e:	mov    eax,0x790a62b8
  41fb93:	push   edi
  41fb94:	enter  0x5034,0xb3
  41fb98:	sti    
  41fb99:	and    esp,DWORD PTR ds:0x365b
  41fb9e:	add    BYTE PTR [ebp-0x114e4f97],dh
  41fba4:	popa   
  41fba5:	stos   DWORD PTR es:[edi],eax
  41fba6:	adc    DWORD PTR [esi-0x27],ebx
  41fba9:	outs   dx,DWORD PTR ds:[esi]
  41fbaa:	int    0xd8
  41fbac:	push   ds
  41fbad:	lock pop ds
  41fbaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbb0:	inc    ecx
  41fbb1:	jns    0x41fb59
  41fbb3:	mov    bh,0xc6
  41fbb5:	and    esp,DWORD PTR [ecx-0x2e]
  41fbb8:	mov    BYTE PTR [edi+0x5a],dh
  41fbbb:	push   edx
  41fbbc:	add    BYTE PTR [esi-0x6c6ae5fe],0x40
  41fbc3:	sti    
  41fbc4:	je     0x41fbed
  41fbc6:	sbb    dl,bh
  41fbc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbca:	std    
  41fbcb:	mov    ch,0xd7
  41fbcd:	jmp    0x3956:0xa23f89b1
  41fbd4:	or     DWORD PTR [esp+eax*2],esp
  41fbd7:	xlat   BYTE PTR ds:[ebx]
  41fbd8:	dec    ecx
  41fbd9:	popf   
  41fbda:	mov    dl,0x9d
  41fbdc:	in     eax,0x66
  41fbde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbdf:	mov    BYTE PTR cs:[eax+0xe9ec990],bh
  41fbe6:	in     al,dx
  41fbe7:	mov    al,ds:0xb518679f
  41fbec:	(bad)  
  41fbed:	mov    ah,0xd2
  41fbef:	fbld   TBYTE PTR [esi-0x56]
  41fbf2:	retf   
  41fbf3:	sbb    ecx,DWORD PTR [eax-0x5dcb61a6]
  41fbf9:	out    dx,al
  41fbfa:	std    
  41fbfb:	mov    ebp,0x51117b1b
  41fc00:	push   es
  41fc01:	lea    esp,[bx+di-0x6]
  41fc05:	lods   eax,DWORD PTR ds:[esi]
  41fc06:	mov    esi,edi
  41fc08:	mov    ecx,0x882f41fe
  41fc0d:	add    al,0xb5
  41fc0f:	inc    eax
  41fc10:	into   
  41fc11:	and    cl,BYTE PTR [ecx+0x6075a1b0]
  41fc17:	dec    esp
  41fc18:	cmp    DWORD PTR [edi+0x4],esp
  41fc1b:	das    
  41fc1c:	bound  ebx,QWORD PTR [ebp+0x428841bf]
  41fc22:	outs   dx,BYTE PTR ds:[esi]
  41fc23:	xchg   BYTE PTR [ecx-0x76],ah
  41fc26:	(bad)  
  41fc27:	retf   
  41fc28:	xchg   DWORD PTR [edi+0x60],esp
  41fc2b:	repz pop edi
  41fc2d:	ret    
  41fc2e:	nop
  41fc2f:	ret    
  41fc30:	xchg   ebp,eax
  41fc31:	in     al,0xb1
  41fc33:	push   esi
  41fc34:	dec    esp
  41fc35:	cli    
  41fc36:	jl     0x41fbd3
  41fc38:	imul   edx,DWORD PTR [edx],0x59
  41fc3b:	fxch   st(3)
  41fc3d:	out    dx,eax
  41fc3e:	or     eax,0x135ba2c8
  41fc44:	jns    0x41fbe7
  41fc46:	mov    cl,0xd5
  41fc48:	adc    al,dh
  41fc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc4b:	data16 test BYTE PTR [ecx],ah
  41fc4e:	fcmovbe st,st(7)
  41fc50:	adc    ebx,DWORD PTR [ebp-0x3595e077]
  41fc56:	cmp    BYTE PTR [ebx+0x2b521888],dl
  41fc5c:	in     al,dx
  41fc5d:	mov    bh,0x23
  41fc5f:	and    BYTE PTR [ecx+0x7a],ah
  41fc62:	fwait
  41fc63:	jae    0x41fbe9
  41fc65:	xor    DWORD PTR [bp+di+0x4fb4],ecx
  41fc6a:	xor    dl,BYTE PTR [ebp-0x79]
  41fc6d:	mov    esp,0x390ab7e7
  41fc72:	mov    eax,0xfa2e746f
  41fc77:	xlat   BYTE PTR ds:[ebx]
  41fc78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc79:	imul   ecx,DWORD PTR [edx],0x141692e
  41fc7f:	ds mov ch,bl
  41fc82:	push   eax
  41fc83:	sbb    ebx,eax
  41fc85:	add    esp,DWORD PTR [esi-0x5a]
  41fc88:	jle    0x41fcf1
  41fc8a:	ss inc edi
  41fc8c:	or     ebp,eax
  41fc8e:	das    
  41fc8f:	rcl    BYTE PTR [eax+eax*2-0x285b904f],0x54
  41fc97:	ss ss sbb bh,dh
  41fc9b:	jmp    0xbff55309
  41fca0:	lds    ebp,FWORD PTR [ecx-0x2ef7ae1a]
  41fca6:	lods   al,BYTE PTR ds:[esi]
  41fca7:	push   esp
  41fca8:	mov    eax,0xbb29b1b1
  41fcad:	jmp    0xd75c:0x5ba7714a
  41fcb4:	nop
  41fcb5:	cmp    DWORD PTR [eax],eax
  41fcb7:	jb     0x41fcfc
  41fcb9:	xchg   dh,ah
  41fcbb:	pop    ebp
  41fcbc:	push   0xa69eb14b
  41fcc1:	push   edx
  41fcc2:	pop    ecx
  41fcc3:	pop    es
  41fcc4:	and    al,0x55
  41fcc6:	lods   al,BYTE PTR ds:[esi]
  41fcc7:	xlat   BYTE PTR ds:[ebx]
  41fcc8:	jbe    0x41fd49
  41fcca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fccb:	lods   al,BYTE PTR ds:[esi]
  41fccc:	sbb    bh,BYTE PTR [edx]
  41fcce:	or     eax,0x2b3b87fe
  41fcd3:	pop    esi
  41fcd4:	xchg   esi,eax
  41fcd5:	jnp    0x41fcbf
  41fcd7:	push   0x54
  41fcd9:	outs   dx,DWORD PTR ds:[esi]
  41fcda:	fcmovnbe st,st(7)
  41fcdc:	lea    edx,[eax+0x8]
  41fcdf:	aad    0x28
  41fce1:	mov    cl,0x8e
  41fce3:	mov    bh,0xa4
  41fce5:	sub    DWORD PTR [edi],ebx
  41fce7:	xchg   esi,eax
  41fce8:	xor    edx,0xd0e8b479
  41fcee:	adc    BYTE PTR [ecx],ch
  41fcf0:	cmp    esp,DWORD PTR [edi+0x41]
  41fcf3:	cmp    dh,BYTE PTR [eax]
  41fcf5:	es jl  0x41fd73
  41fcf8:	dec    esi
  41fcf9:	push   ds
  41fcfa:	mov    cl,0x12
  41fcfc:	shr    BYTE PTR [ecx],0x71
  41fcff:	cmp    eax,0x2d999cbb
  41fd04:	push   edx
  41fd05:	sbb    eax,0x6eb56ff5
  41fd0a:	push   esi
  41fd0b:	push   ebx
  41fd0c:	jne    0xfeca654c
  41fd12:	stc    
  41fd13:	mov    dl,cl
  41fd15:	dec    ebx
  41fd16:	lods   eax,DWORD PTR ds:[esi]
  41fd17:	outs   dx,BYTE PTR ds:[esi]
  41fd18:	jo     0x41fcf6
  41fd1a:	mov    cl,0xc0
  41fd1c:	push   eax
  41fd1d:	cs arpl dx,ax
  41fd20:	mov    DWORD PTR [edx-0xf],edi
  41fd23:	fwait
  41fd24:	arpl   bp,bx
  41fd26:	xor    DWORD PTR [ecx],edi
  41fd28:	xchg   edx,eax
  41fd29:	xchg   dh,dl
  41fd2b:	lods   al,BYTE PTR ds:[esi]
  41fd2c:	add    edx,edi
  41fd2e:	mov    cl,0x11
  41fd30:	or     al,BYTE PTR [ebx-0x14]
  41fd33:	ins    DWORD PTR es:[edi],dx
  41fd34:	pop    ecx
  41fd35:	mov    al,ds:0xd8b0d70f
  41fd3a:	sub    dl,dl
  41fd3c:	fst    QWORD PTR [edx]
  41fd3e:	(bad)  
  41fd3f:	cmp    al,0x88
  41fd41:	jb     0x41fd82
  41fd43:	in     eax,dx
  41fd44:	jmp    0xd067:0x6f41efb3
  41fd4b:	cmp    eax,0xc6f53d30
  41fd50:	or     eax,0x3b9b951c
  41fd55:	push   esp
  41fd56:	mov    cl,0xd
  41fd58:	xor    DWORD PTR [ebx],ebx
  41fd5a:	lock scas al,BYTE PTR es:[edi]
  41fd5c:	popa   
  41fd5d:	ins    BYTE PTR es:[di],dx
  41fd5f:	mov    esi,0x10b9e860
  41fd64:	inc    eax
  41fd65:	adc    al,0xb0
  41fd67:	sbb    BYTE PTR [ecx],bl
  41fd69:	lds    edi,FWORD PTR [edx]
  41fd6b:	popw   es
  41fd6d:	shl    BYTE PTR [ecx],0x91
  41fd70:	xchg   BYTE PTR [esi-0x9],al
  41fd73:	pop    edi
  41fd74:	xor    BYTE PTR [edx+ecx*4+0x64e89927],cl
  41fd7b:	stos   BYTE PTR es:[edi],al
  41fd7c:	(bad)  
  41fd7e:	jno    0x41fd25
  41fd80:	xor    eax,0xd581a8b9
  41fd85:	jo     0x41fdb5
  41fd87:	rcl    ah,cl
  41fd89:	data16 lahf 
  41fd8b:	mov    ecx,0x1b4de691
  41fd90:	fdivr  QWORD PTR [ecx]
  41fd92:	mov    cl,0xf7
  41fd94:	fnstenv [esi-0x16471eed]
  41fd9a:	cli    
  41fd9b:	jmp    0x1df819fa
  41fda0:	adc    al,0xbb
  41fda2:	sub    esp,DWORD PTR [edi+0x6e]
  41fda5:	and    bl,BYTE PTR [ecx+0x52b4883c]
  41fdab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdac:	repnz push 0x67081280
  41fdb2:	jbe    0x41fd77
  41fdb4:	jecxz  0x41fd68
  41fdb6:	mov    ecx,0xb2cbc6e5
  41fdbb:	and    esp,DWORD PTR [eax-0x7bf0ae1a]
  41fdc1:	out    0x27,eax
  41fdc3:	mov    bh,0x54
  41fdc5:	adc    DWORD PTR [edi+edx*8-0xe8aabff],eax
  41fdcc:	adc    esp,eax
  41fdce:	mov    ebp,0x808d88d9
  41fdd3:	push   edi
  41fdd4:	sub    al,0x7f
  41fdd6:	mov    eax,ds:0x65678d73
  41fddb:	pop    esp
  41fddc:	test   al,0xc6
  41fdde:	out    dx,eax
  41fddf:	mov    WORD PTR [eax+0x1213bf97],ss
  41fde5:	xor    DWORD PTR [ebx+0x3eb16c17],esi
  41fdeb:	mov    edx,0xe6077a5b
  41fdf0:	test   al,ah
  41fdf2:	ja     0x41fdbc
  41fdf4:	aam    0x94
  41fdf6:	cmp    al,0x12
  41fdf8:	or     BYTE PTR [ebx+0x7587d299],cl
  41fdfe:	add    edx,ebx
  41fe00:	sub    eax,0x4cf82250
  41fe05:	fisubr DWORD PTR [ebx]
  41fe07:	ror    BYTE PTR [esp+ebx*1-0x6b],1
  41fe0b:	add    DWORD PTR [edx],ebp
  41fe0d:	sbb    dl,0x7
  41fe10:	cvttps2pi mm6,QWORD PTR es:[edx+eiz*4]
  41fe15:	outs   dx,BYTE PTR ds:[esi]
  41fe16:	test   dl,ah
  41fe18:	adc    DWORD PTR [esi],0x4748536e
  41fe1e:	enter  0x499d,0x58
  41fe22:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe24:	mov    BYTE PTR [edx],dh
  41fe26:	dec    eax
  41fe27:	ins    BYTE PTR es:[edi],dx
  41fe28:	xor    ebx,ebx
  41fe2a:	jl     0x41fe1d
  41fe2c:	jo     0x41fe1f
  41fe2e:	mov    cl,0xf8
  41fe30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe31:	shl    ebp,1
  41fe33:	pop    ecx
  41fe34:	ja     0x41fe81
  41fe36:	call   esp
  41fe38:	pop    ebx
  41fe39:	stc    
  41fe3a:	sub    eax,0x798ee98e
  41fe3f:	jmp    0xb4f372ca
  41fe44:	inc    esi
  41fe45:	in     al,0xb5
  41fe47:	(bad)  
  41fe48:	into   
  41fe49:	inc    ecx
  41fe4a:	sbb    ebp,DWORD PTR [ebx-0x30999723]
  41fe50:	loop   0x41feac
  41fe52:	call   FWORD PTR [eax+ecx*2+0x2c3742f2]
  41fe59:	push   eax
  41fe5a:	popf   
  41fe5b:	in     eax,dx
  41fe5c:	icebp  
  41fe5d:	pop    ebx
  41fe5e:	mov    al,0x95
  41fe60:	shl    DWORD PTR [ebx+0x1],0x5
  41fe64:	push   esp
  41fe65:	add    dh,BYTE PTR [eax]
  41fe67:	retf   
  41fe68:	mov    bh,0x9a
  41fe6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe6b:	pop    ss
  41fe6c:	push   eax
  41fe6d:	fstp   TBYTE PTR [edx-0x4e86b8d3]
  41fe73:	inc    edx
  41fe74:	jae    0x41fe84
  41fe76:	mov    ecx,ds
  41fe78:	sub    ebp,DWORD PTR [esi+eiz*2+0x47a361f9]
  41fe7f:	xlat   BYTE PTR ds:[ebx]
  41fe80:	fisubr DWORD PTR ds:0x8a485b5a
  41fe86:	mov    dh,0x4b
  41fe88:	imul   esp,ebx,0xf2a85102
  41fe8e:	cdq    
  41fe8f:	scas   al,BYTE PTR es:[edi]
  41fe90:	sub    al,0x5c
  41fe92:	in     eax,0x37
  41fe94:	fsub   QWORD PTR [edi]
  41fe96:	mov    cl,0x7f
  41fe98:	push   esp
  41fe99:	sbb    BYTE PTR [edx-0x4fe42f8b],al
  41fe9f:	cmp    eax,0x8c63e764
  41fea4:	outs   dx,BYTE PTR ss:[esi]
  41fea6:	inc    ecx
  41fea7:	adc    dl,BYTE PTR [ecx+edi*2+0x27be287d]
  41feae:	adc    DWORD PTR [esi+0x5f],esp
  41feb1:	add    ebx,DWORD PTR [esi+0x45]
  41feb4:	mov    BYTE PTR [edi],ch
  41feb6:	jmp    0xc4a45589
  41febb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41febc:	lock addr16 (bad) 
  41febf:	pusha  
  41fec0:	(bad)  
  41fec2:	xor    al,0xaa
  41fec4:	neg    BYTE PTR [ebp-0x4f]
  41fec7:	xchg   edx,eax
  41fec8:	or     ebp,DWORD PTR [eax-0x5f42b9e6]
  41fece:	jb     0x41feca
  41fed0:	jp     0x41ff1e
  41fed2:	imul   esi,DWORD PTR [eax+ecx*4+0x30],0x7b90e1ca
  41feda:	shr    BYTE PTR es:[edi+0x19cda964],cl
  41fee1:	adc    edx,ecx
  41fee3:	mov    ebx,0xf88d7860
  41fee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fee9:	pop    esi
  41feea:	and    eax,0x23fb8818
  41feef:	and    DWORD PTR ds:0xc4d03fa9,0x2c6b1449
  41fef9:	pop    ss
  41fefa:	(bad)  
  41fefb:	call   0x94f3aa18
  41ff00:	lock jns 0x41ff75
  41ff03:	inc    ebp
  41ff04:	aad    0xc1
  41ff06:	out    0xd7,eax
  41ff08:	fisttp DWORD PTR [edi-0x4a]
  41ff0b:	(bad)  
  41ff0c:	jae    0x41fee7
  41ff0e:	xchg   ebx,eax
  41ff0f:	dec    esp
  41ff10:	xchg   DWORD PTR [esi],edi
  41ff12:	cs pop ebp
  41ff14:	dec    edi
  41ff15:	push   ds
  41ff16:	lds    ebx,FWORD PTR [ebx-0x261989b0]
  41ff1c:	stos   DWORD PTR es:[edi],eax
  41ff1d:	dec    eax
  41ff1e:	ret    0x2859
  41ff21:	div    BYTE PTR [esi-0x4e76d000]
  41ff27:	xor    esp,DWORD PTR [edi+0x51]
  41ff2a:	xor    eax,0x5308a86e
  41ff2f:	xlat   BYTE PTR ds:[ebx]
  41ff30:	pusha  
  41ff31:	sub    eax,0xa6bcacb4
  41ff36:	cmp    esi,DWORD PTR [esi-0x7c]
  41ff39:	add    edx,esp
  41ff3b:	out    dx,al
  41ff3c:	shl    DWORD PTR [ecx+esi*1],cl
  41ff3f:	into   
  41ff40:	add    DWORD PTR [eax],ebp
  41ff42:	inc    ebx
  41ff43:	aad    0x75
  41ff45:	xor    DWORD PTR [esi+eax*8-0x70],edx
  41ff49:	ins    BYTE PTR es:[edi],dx
  41ff4a:	icebp  
  41ff4b:	adc    DWORD PTR [edi+0x10],0xae65beb1
  41ff52:	lods   eax,DWORD PTR ds:[esi]
  41ff53:	dec    ebp
  41ff54:	adc    esp,DWORD PTR [ecx-0x26b328f7]
  41ff5a:	mov    esi,0xfe0607b4
  41ff5f:	stos   DWORD PTR es:[edi],eax
  41ff60:	xchg   edx,eax
  41ff61:	cmp    ch,bl
  41ff63:	ins    DWORD PTR es:[edi],dx
  41ff64:	mov    bh,dl
  41ff66:	xor    esp,esp
  41ff68:	int3   
  41ff69:	mov    ds:0xbd3ad7cb,eax
  41ff6e:	push   esp
  41ff6f:	fs jp  0x41ff2c
  41ff72:	leave  
  41ff73:	inc    edx
  41ff74:	std    
  41ff75:	into   
  41ff76:	mov    cl,0x82
  41ff78:	clc    
  41ff79:	lahf   
  41ff7a:	(bad)  
  41ff7b:	neg    DWORD PTR [eax+0x63]
  41ff7e:	(bad)  
  41ff7f:	leave  
  41ff80:	int3   
  41ff81:	scas   al,BYTE PTR es:[edi]
  41ff82:	adc    edi,edx
  41ff84:	jp     0x41ffa3
  41ff86:	lods   eax,DWORD PTR ds:[esi]
  41ff87:	mov    eax,ds:0xb2ae456f
  41ff8c:	inc    ebp
  41ff8d:	inc    esp
  41ff8e:	jno    0x41ff75
  41ff90:	mov    al,ds:0xb371853a
  41ff95:	addr16 (bad) 
  41ff98:	or     bl,dl
  41ff9a:	das    
  41ff9b:	into   
  41ff9c:	push   esp
  41ff9d:	sahf   
  41ff9e:	lods   al,BYTE PTR ds:[esi]
  41ff9f:	jp     0x41fff2
  41ffa1:	inc    esi
  41ffa2:	mov    cl,0xe5
  41ffa4:	push   cs
  41ffa5:	jbe    0x41ffde
  41ffa7:	pop    eax
  41ffa8:	sub    ah,BYTE PTR ds:[si-0x2b]
  41ffad:	mov    BYTE PTR [eax+ecx*8-0x6a45b0cf],ah
  41ffb4:	jne    0x41fff4
  41ffb6:	xchg   edi,eax
  41ffb7:	xlat   BYTE PTR ds:[ebx]
  41ffb8:	mov    bl,0x22
  41ffba:	pop    ebx
  41ffbb:	inc    edx
  41ffbc:	enter  0x7f67,0x8c
  41ffc0:	pop    ds
  41ffc1:	mov    ds:0x17518523,al
  41ffc6:	mov    cl,0xfe
  41ffc8:	mov    esp,0xae400f20
  41ffcd:	std    
  41ffce:	pop    esp
  41ffcf:	aam    0xb1
  41ffd1:	fisttp DWORD PTR [ecx+0x599c2766]
  41ffd7:	ins    DWORD PTR es:[edi],dx
  41ffd8:	loope  0x41ff95
  41ffda:	mov    cl,0xbb
  41ffdc:	dec    ecx
  41ffdd:	pop    ds
  41ffde:	fidiv  DWORD PTR [ecx]
  41ffe0:	stc    
  41ffe1:	dec    ebx
  41ffe2:	enter  0x24d4,0xc4
  41ffe6:	fbld   TBYTE PTR [ecx]
  41ffe8:	mov    bh,0x9d
  41ffea:	dec    ecx
  41ffeb:	push   es
  41ffec:	lea    ebp,[edx-0x4f]
  41ffef:	outs   dx,BYTE PTR ds:[esi]
  41fff0:	inc    ebp
  41fff1:	frstor [edx+0x67]
  41fff4:	and    edi,DWORD PTR [ebx-0x2c]
  41fff7:	xlat   BYTE PTR ds:[ebx]
  41fff8:	out    0xce,eax
  41fffa:	scas   eax,DWORD PTR es:[edi]
  41fffb:	dec    esi
  41fffc:	inc    esp
  41fffd:	stc    
  41fffe:	mov    ah,0x7f
  420000:	xchg   DWORD PTR [esp+eiz*4-0x4d],ebx
  420004:	pop    es
  420005:	adc    eax,0x3558f56c
  42000a:	int3   
  42000b:	xlat   BYTE PTR ds:[ebx]
  42000c:	push   ebx
  42000d:	mov    dh,BYTE PTR [edi-0x1d]
  420010:	rol    BYTE PTR [ecx-0x2f47a5dd],cl
  420016:	pop    ebp
  420017:	xchg   ebp,eax
  420018:	or     DWORD PTR [edi],ebx
  42001a:	mov    al,ds:0x27c5dd7
  42001f:	adc    ecx,DWORD PTR [ebp+ebx*8-0x127a353a]
  420026:	cmc    
  420027:	cld    
  420028:	pushf  
  420029:	(bad)  
  42002a:	loop   0x420043
  42002c:	test   ebp,esp
  42002e:	in     al,0xd7
  420030:	pop    es
  420031:	sbb    DWORD PTR ds:0xe765ccfe,0x537389b2
  42003b:	test   eax,0x4739673c
  420040:	cld    
  420041:	jno    0x4200ac
  420043:	shr    dl,0xbc
  420046:	jp     0x42001f
  420048:	jp     0x42000e
  42004a:	sub    DWORD PTR [edi],esp
  42004c:	ret    0xb0b9
  42004f:	lock mov WORD PTR [ebp+eax*8-0x2],?
  420054:	repz xlat BYTE PTR ds:[ebx]
  420056:	popw   ds
  420058:	push   ebx
  420059:	out    dx,al
  42005a:	or     edx,ebx
  42005c:	leave  
  42005d:	inc    ecx
  42005e:	clc    
  42005f:	bound  esp,QWORD PTR [ebx-0x19]
  420062:	pop    esi
  420063:	ficomp DWORD PTR [edi+0x55]
  420066:	mov    cl,0xc2
  420068:	into   
  420069:	imul   edx,ecx,0xa7a0d8f
  42006f:	stos   DWORD PTR es:[edi],eax
  420070:	fs pusha 
  420072:	mov    ecx,0x9732425a
  420077:	pop    ss
  420078:	fmul   DWORD PTR [edi+0xab95685]
  42007e:	inc    ebx
  42007f:	shl    BYTE PTR [ebp-0x5e],1
  420082:	jl     0x420026
  420084:	dec    eax
  420085:	sar    DWORD PTR [edx+0x3b],cl
  420088:	pop    esp
  420089:	addr16 lock mov dl,0x4e
  42008d:	data16 outs dx,BYTE PTR ds:[esi]
  42008f:	mov    ecx,0x18b1ded8
  420094:	and    al,0x6f
  420096:	into   
  420097:	push   ss
  420098:	fcmovu st,st(4)
  42009a:	mov    esp,DWORD PTR [ecx-0x79f48511]
  4200a0:	addr16 mov al,ds:0xbba9
  4200a4:	std    
  4200a5:	aaa    
  4200a6:	sar    DWORD PTR [eax-0x7d4e8e7f],0xd4
  4200ad:	mov    bh,ah
  4200af:	add    BYTE PTR [eax],0x9c
  4200b2:	fldcw  WORD PTR [bx-0x56a3]
  4200b7:	outs   dx,BYTE PTR ds:[esi]
  4200b8:	sub    BYTE PTR [edi+0x662f4a5],ch
  4200be:	mov    cl,0xac
  4200c0:	pusha  
  4200c1:	sub    eax,edx
  4200c3:	loope  0x420138
  4200c5:	cmp    esi,esp
  4200c7:	jmp    0x5d6d:0x1db21b10
  4200ce:	mov    BYTE PTR [edx+0x5b72108],bh
  4200d4:	mov    BYTE PTR [edi+ebp*8+0x29b36e9e],al
  4200db:	pop    edi
  4200dc:	sub    al,0x58
  4200de:	pusha  
  4200df:	lahf   
  4200e0:	sbb    bl,ah
  4200e2:	push   cs
  4200e3:	or     BYTE PTR cs:[eax+0x35c0417],al
  4200ea:	sbb    BYTE PTR [ebp-0x78],bl
  4200ed:	test   eax,0x84523e11
  4200f2:	and    al,0xf8
  4200f4:	mov    eax,0x883d275b
  4200f9:	push   ecx
  4200fa:	stc    
  4200fb:	jmp    0x31b3482f
  420100:	mov    ch,cl
  420102:	pop    es
  420103:	sbb    DWORD PTR [ebx-0x11],ebx
  420106:	jp     0x4200d6
  420108:	jg     0x42016e
  42010a:	sub    al,0x97
  42010c:	scas   eax,DWORD PTR es:[edi]
  42010d:	inc    edx
  42010e:	stc    
  42010f:	rol    DWORD PTR [eax+0x40],cl
  420112:	sar    DWORD PTR ds:0xd1bd6a8f,cl
  420118:	sub    al,0x67
  42011a:	imul   edi,DWORD PTR [edx+ecx*1+0x37],0xc3dcd757
  420122:	xchg   ebx,eax
  420123:	test   al,0x7c
  420125:	loop   0x4200db
  420127:	sub    DWORD PTR [eax-0x3cef9391],ecx
  42012d:	mov    esi,0x9fb8806d
  420132:	enter  0x3fd9,0x93
  420136:	ss mov ebx,0x6c232708
  42013c:	jne    0x4200c8
  42013e:	sub    esi,edx
  420140:	mov    BYTE PTR [edi+0x6b53159],ah
  420146:	lea    ecx,[esi+ecx*4]
  420149:	addr16 cmp al,0x7f
  42014c:	and    BYTE PTR [esi+0x3fe29b09],bh
  420152:	dec    ebp
  420153:	xor    al,BYTE PTR [ecx-0x2394bbbd]
  420159:	faddp  st(1),st
  42015b:	mov    ecx,0xd73b8b68
  420160:	cdq    
  420161:	dec    edx
  420162:	pop    esp
  420163:	out    0xbd,al
  420165:	lods   al,BYTE PTR ds:[esi]
  420166:	add    al,0x48
  420168:	mov    BYTE PTR [esi+0x27],bh
  42016b:	retf   0x957b
  42016e:	dec    ebx
  42016f:	fsub   st,st(6)
  420171:	data16 loope 0x420146
  420174:	in     al,0xcf
  420176:	scas   eax,DWORD PTR es:[edi]
  420177:	test   eax,0x97714da7
  42017c:	imul   ebp,DWORD PTR [esi-0x26],0x3caa71d7
  420183:	outs   dx,BYTE PTR ds:[esi]
  420184:	shr    eax,0x79
  420187:	scas   al,BYTE PTR es:[edi]
  420188:	mov    cl,ah
  42018a:	retf   0xb05f
  42018d:	jle    0xa4a99786
  420193:	mov    ebx,0xdb98e211
  420198:	or     ebx,0x57
  42019b:	dec    esi
  42019c:	mov    esp,0x59ed4f7f
  4201a1:	sbb    BYTE PTR [bx+di],bl
  4201a4:	and    ebx,esp
  4201a6:	aam    0x84
  4201a8:	xchg   edi,eax
  4201a9:	pop    ebx
  4201aa:	mov    esi,0x8afea4df
  4201af:	call   0xeb5b6925
  4201b4:	adc    edx,DWORD PTR ds:0x3f0c7eb
  4201ba:	mov    WORD PTR [eax-0x71],ss
  4201bd:	loopne 0x420142
  4201bf:	dec    edi
  4201c0:	dec    eax
  4201c1:	int    0xe6
  4201c3:	jno    0x42022d
  4201c5:	ins    BYTE PTR es:[edi],dx
  4201c6:	cmp    eax,0x85671016
  4201cb:	rcr    BYTE PTR [ecx],cl
  4201cd:	sub    edx,ecx
  4201cf:	mov    al,ds:0x3ecc8ce2
  4201d4:	mov    BYTE PTR [ecx+edi*2+0x99942e7],ch
  4201db:	lods   eax,DWORD PTR ds:[esi]
  4201dc:	sbb    al,0x67
  4201de:	and    edi,edi
  4201e0:	div    BYTE PTR [eax]
  4201e2:	mov    WORD PTR [ecx+0x61bf22a5],?
  4201e8:	inc    ebp
  4201e9:	(bad)  
  4201eb:	push   edi
  4201ec:	retf   0x890d
  4201ef:	adc    eax,0x5028642a
  4201f4:	xchg   ebx,eax
  4201f5:	and    al,0xd2
  4201f7:	dec    ecx
  4201f8:	cmp    dl,dh
  4201fa:	or     eax,0xe01287b5
  4201ff:	mov    BYTE PTR [esi+0x53],ch
  420202:	pusha  
  420203:	in     al,dx
  420204:	inc    esp
  420205:	push   esp
  420206:	push   ebp
  420207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420208:	int3   
  420209:	addr16 fcomp st(1)
  42020c:	mov    al,ds:0x22a8fc74
  420211:	adc    DWORD PTR [ecx-0x3be3ff59],esi
  420217:	dec    ebp
  420218:	cwde   
  420219:	not    BYTE PTR [esi+0x78e58d7]
  42021f:	outs   dx,BYTE PTR ds:[esi]
  420220:	std    
  420221:	jo     0x42025f
  420223:	mov    ch,0x88
  420225:	imul   ecx,DWORD PTR [ebx+0x2235bf15],0xffffff80
  42022c:	test   eax,0x1cca7e5c
  420231:	mov    eax,0xc7f297eb
  420236:	arpl   sp,bp
  420238:	inc    esp
  420239:	sahf   
  42023a:	mov    cl,0x0
  42023c:	sar    BYTE PTR [esi],1
  42023e:	(bad)  
  420240:	(bad)  
  420241:	cmp    bh,BYTE PTR [eax-0x30]
  420244:	dec    esp
  420245:	mov    ah,0xd9
  420247:	jg     0x4201d4
  420249:	aaa    
  42024a:	and    BYTE PTR [eax],bh
  42024c:	loope  0x42022e
  42024e:	mov    cl,0xc0
  420250:	inc    eax
  420251:	enter  0x5f34,0x7b
  420255:	cmp    ecx,esp
  420257:	xchg   DWORD PTR [edx],eax
  420259:	lea    esi,[ebx]
  42025b:	xlat   BYTE PTR ds:[ebx]
  42025c:	out    0x6a,eax
  42025e:	xchg   ecx,eax
  42025f:	or     eax,0x236033c3
  420264:	js     0x42023d
  420266:	mov    eax,0x68ca8cdc
  42026b:	push   edi
  42026c:	xchg   ebx,eax
  42026d:	inc    esp
  42026e:	retf   0x83b4
  420271:	bound  ebp,QWORD PTR [ecx-0x6c]
  420274:	call   0x4e598ed1
  420279:	clc    
  42027a:	(bad)  
  42027b:	out    dx,al
  42027c:	test   eax,esi
  42027e:	neg    bl
  420280:	out    0xac,eax
  420282:	push   es
  420283:	das    
  420284:	xchg   edx,eax
  420285:	loop   0x4202fa
  420287:	xor    ebp,DWORD PTR [edi+eiz*2]
  42028a:	(bad)  
  42028b:	adc    bh,BYTE PTR [edi+0x7a]
  42028e:	xchg   DWORD PTR [ecx],edx
  420290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420292:	dec    ecx
  420293:	mov    BYTE PTR [eax+0x2767ff9b],cl
  420299:	inc    esp
  42029a:	and    DWORD PTR [eax],0x8
  42029d:	addr16 jmp 0x4202d2
  4202a0:	das    
  4202a1:	rcl    BYTE PTR ds:0xcfeefaf3,cl
  4202a7:	cmp    ecx,DWORD PTR [eax+0x5add84de]
  4202ad:	lods   al,BYTE PTR ds:[esi]
  4202ae:	or     BYTE PTR ss:[ecx+0x63],ch
  4202b2:	pusha  
  4202b3:	add    eax,0x57b38224
  4202b8:	mov    ebx,DWORD PTR [edi-0x2c7a0750]
  4202be:	pushf  
  4202bf:	mov    ecx,0x6fac04ef
  4202c4:	bound  esp,QWORD PTR [eax-0x392221af]
  4202ca:	not    eax
  4202cc:	or     dl,bh
  4202ce:	das    
  4202cf:	mov    dl,0x7a
  4202d1:	pop    es
  4202d2:	mov    ds:0xb1d276bf,eax
  4202d7:	les    ecx,FWORD PTR [ecx+0x35]
  4202da:	push   0xffffffbc
  4202dc:	xlat   BYTE PTR ds:[ebx]
  4202dd:	adc    BYTE PTR [si-0x54f2],ch
  4202e2:	mov    eax,0xb1996dd2
  4202e7:	icebp  
  4202e8:	imul   eax,edi,0xffffffcc
  4202eb:	fcomp  DWORD PTR [ecx+0x72d0c344]
  4202f1:	mov    edx,0x473b0b44
  4202f6:	inc    ebx
  4202f7:	or     BYTE PTR [esi+0x2fdb16b],dl
  4202fd:	sub    DWORD PTR [ecx],ecx
  4202ff:	cmp    al,0x0
  420301:	pop    esp
  420302:	push   0xac7dabd6
  420307:	pop    ds
  420308:	lock mov ds:0x9ecab7fe,eax
  42030e:	int3   
  42030f:	adc    DWORD PTR [eax+0x342ad14d],ecx
  420315:	les    edi,FWORD PTR [eax-0x6798a8c1]
  42031b:	(bad)  
  42031c:	cli    
  42031d:	aad    0x91
  42031f:	jo     0x420312
  420321:	cli    
  420322:	mov    bh,BYTE PTR [ecx]
  420324:	(bad)  
  420326:	xchg   ebp,eax
  420327:	inc    ebp
  420328:	push   es
  420329:	push   ecx
  42032a:	inc    ebx
  42032b:	ja     0x420312
  42032d:	lahf   
  42032e:	xor    al,0xd7
  420330:	xor    DWORD PTR [ebx],esi
  420332:	scas   al,BYTE PTR es:[edi]
  420333:	mov    eax,ds:0xb392092
  420338:	icebp  
  420339:	jecxz  0x4202ec
  42033b:	xchg   edi,eax
  42033c:	jnp    0x4202e9
  42033e:	call   0xc6cd5e86
  420343:	xlat   BYTE PTR ds:[ebx]
  420344:	gs (bad) 
  420346:	(bad)  
  420347:	sbb    eax,0x562397fd
  42034c:	mov    BYTE PTR [ebx+eax*4+0x10],bh
  420350:	mov    ebp,0x146e624e
  420355:	sbb    DWORD PTR [bx+si],0x61c5fa6a
  42035c:	inc    edi
  42035d:	inc    ebx
  42035e:	mov    cl,0x46
  420360:	push   0x510aaae
  420365:	ret    
  420366:	sbb    eax,0xf67f62d
  42036b:	push   0xaecf7bc1
  420370:	mov    esi,0xe019a956
  420375:	xor    DWORD PTR [ebp+0x5c67affc],ebp
  42037b:	std    
  42037c:	jge    0x420342
  42037e:	add    esp,ecx
  420380:	dec    esp
  420381:	mov    ch,0xb1
  420383:	xor    bh,BYTE PTR [eax+0x43]
  420386:	adc    BYTE PTR [eax],ch
  420388:	sbb    dh,bl
  42038a:	push   edx
  42038b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42038c:	jbe    0x420323
  42038e:	push   ecx
  42038f:	xlat   BYTE PTR ds:[ebx]
  420390:	in     eax,dx
  420391:	cmp    BYTE PTR [ecx-0x105efd16],bh
  420397:	mov    eax,0xd1c50388
  42039c:	adc    eax,DWORD PTR [ecx-0x3e]
  42039f:	and    DWORD PTR [ecx],esp
  4203a1:	pusha  
  4203a2:	mov    esi,0xb64b878e
  4203a7:	add    eax,0x15f159f7
  4203ac:	shl    ebp,1
  4203ae:	mov    cl,0xe
  4203b0:	mov    eax,ds:0xc4b5f006
  4203b5:	jae    0x4203b9
  4203b7:	xlat   BYTE PTR ds:[ebx]
  4203b8:	scas   eax,DWORD PTR es:[edi]
  4203b9:	sar    DWORD PTR [ebx*2+0x4f6e04d3],cl
  4203c0:	fwait
  4203c1:	mov    esp,DWORD PTR [esi+0x3ef4c131]
  4203c7:	sbb    BYTE PTR gs:[ebx+0x3b2ed174],dl
  4203ce:	jbe    0x42036d
  4203d0:	call   0xb30b:0xf1d461cc
  4203d7:	inc    ecx
  4203d8:	sbb    edi,edx
  4203da:	mov    dh,BYTE PTR gs:[ecx+0x4d]
  4203de:	mov    cl,0xa8
  4203e0:	pusha  
  4203e1:	cmp    DWORD PTR [ecx],eax
  4203e3:	push   ss
  4203e4:	xor    eax,0x95e8d131
  4203e9:	mov    esi,0x623737b1
  4203ee:	xchg   ebx,eax
  4203ef:	push   ds
  4203f0:	mov    ebp,ebx
  4203f2:	mov    al,0x84
  4203f4:	pop    edx
  4203f5:	sbb    DWORD PTR [ebx+edx*8-0x5b],0xffffffe3
  4203fa:	xchg   ecx,eax
  4203fb:	jmp    0x42038c
  4203fd:	pusha  
  4203fe:	or     dh,dl
  420400:	and    al,0x2
  420403:	(bad)  
  420404:	push   0xf903e6c0
  420409:	int    0xb1
  42040b:	xchg   DWORD PTR [ebx+0xe75eb75],ebx
  420411:	mov    eax,ds:0x8334d70f
  420416:	iret   
  420417:	mov    ah,0xff
  420419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42041a:	das    
  42041b:	sbb    DWORD PTR [eax-0x5bbfa06d],ecx
  420421:	xchg   DWORD PTR [edi+0x48],ecx
  420424:	mul    BYTE PTR [edi-0x5d]
  420427:	(bad)  
  420428:	mov    ss,WORD PTR [edi+0x4d5dad1a]
  42042e:	mov    cl,0x91
  420430:	adc    ebx,DWORD PTR [edx-0x32f4c8e8]
  420436:	mov    bl,0xd7
  420438:	xor    BYTE PTR [edi],bl
  42043a:	cmp    edx,DWORD PTR [edx]
  42043c:	rcl    DWORD PTR [edx+ebx*2+0x56ef88bf],cl
  420443:	(bad)  
  420444:	aaa    
  420445:	and    BYTE PTR [eax-0x23],0x7
  420449:	pop    ebp
  42044a:	inc    esp
  42044b:	lahf   
  42044c:	push   es
  42044d:	jg     0x42042e
  42044f:	lock out dx,eax
  420451:	out    0xce,eax
  420453:	push   edi
  420454:	mov    bh,0xa3
  420456:	mov    edi,0xa6771c4
  42045b:	mov    eax,0x500df100
  420460:	into   
  420461:	gs mov cl,0xc9
  420464:	test   al,0xfb
  420466:	sub    esi,ecx
  420468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420469:	outs   dx,BYTE PTR ds:[esi]
  42046a:	(bad)  
  42046b:	xlat   BYTE PTR ds:[ebx]
  42046c:	cwd    
  42046e:	and    ebx,DWORD PTR [eax-0x53ebe2ec]
  420474:	mov    BYTE PTR [ecx-0x25],al
  420477:	sbb    al,0x12
  420479:	div    BYTE PTR ds:0x4b161e4b
  42047f:	xlat   BYTE PTR ds:[ebx]
  420480:	call   0x99ccbc0d
  420485:	jg     0x4204d5
  420487:	sbb    ebx,eax
  420489:	push   edi
  42048a:	pop    es
  42048b:	aaa    
  42048c:	mov    bh,ch
  42048e:	dec    eax
  42048f:	push   eax
  420490:	pop    ds
  420491:	mov    dl,0x46
  420493:	push   esi
  420494:	xchg   esp,eax
  420495:	addr16 and eax,0x43bd667d
  42049b:	jp     0x4204b0
  42049d:	ins    BYTE PTR es:[edi],dx
  42049e:	dec    ecx
  42049f:	inc    eax
  4204a0:	mov    esp,0x7becbce1
  4204a5:	out    0x2,eax
  4204a7:	push   ebp
  4204a8:	dec    ecx
  4204a9:	jecxz  0x420519
  4204ab:	test   al,0xcf
  4204ad:	push   ds
  4204ae:	inc    edx
  4204af:	call   0x88f4a58c
  4204b4:	pop    es
  4204b5:	pop    ds
  4204b6:	call   FWORD PTR [edi+0x20]
  4204b9:	cmp    al,0x51
  4204bb:	std    
  4204bc:	mov    eax,0xc3798768
  4204c1:	mov    fs,WORD PTR [ecx]
  4204c3:	out    dx,al
  4204c4:	mov    ecx,0xf2de36fa
  4204c9:	push   ebp
  4204ca:	and    eax,0x8b12bb7
  4204cf:	cmp    eax,0x98cfcd87
  4204d4:	fistp  QWORD PTR [esi-0x49]
  4204d7:	push   cs
  4204d8:	jmp    0xbe978664
  4204dd:	out    0xf5,eax
  4204df:	push   edi
  4204e0:	jae    0x420559
  4204e2:	sub    edi,DWORD PTR [esi]
  4204e4:	inc    esp
  4204e5:	cld    
  4204e6:	stos   BYTE PTR es:[edi],al
  4204e7:	xlat   BYTE PTR ds:[ebx]
  4204e8:	cmp    esp,esi
  4204ea:	pushf  
  4204eb:	sub    al,0xb8
  4204ed:	lahf   
  4204ee:	sbb    al,0x31
  4204f0:	mov    BYTE PTR [ebx-0x26],dh
  4204f3:	xor    al,0xb6
  4204f5:	jbe    0x420528
  4204f7:	(bad)  
  4204f8:	call   0x3c9aa664
  4204fd:	leave  
  4204fe:	(bad)  
  4204ff:	call   DWORD PTR [esi-0x1f59a8e2]
  420505:	out    dx,al
  420506:	mov    eax,ds:0xc579889c
  42050b:	nop
  42050c:	xchg   BYTE PTR [ebp+0x22],bh
  42050f:	retf   0x5ca5
  420512:	cmp    dl,bh
  420514:	mov    ecx,0x2e956d55
  420519:	fnsave [ecx+0x4e0738d]
  42051f:	fwait
  420520:	inc    esp
  420521:	lahf   
  420522:	cmp    DWORD PTR [esi-0x5683c07d],ebp
  420528:	stc    
  420529:	addr16 xchg ebp,eax
  42052b:	jae    0x420502
  42052d:	jmp    0x420512
  42052f:	cmc    
  420530:	fist   WORD PTR [ebp-0x52]
  420533:	fs xchg edi,eax
  420535:	in     eax,0x71
  420537:	in     al,dx
  420538:	mov    bh,0x44
  42053a:	dec    ecx
  42053b:	and    BYTE PTR [edx+0x67],dh
  42053e:	ins    DWORD PTR es:[edi],dx
  42053f:	ret    
  420540:	jecxz  0x42057d
  420542:	(bad)  
  420543:	mov    bh,0x16
  420545:	lods   al,BYTE PTR ds:[esi]
  420546:	mov    cl,0x64
  420548:	xor    ebp,DWORD PTR es:[ecx+0x69ae0cbf]
  42054f:	xor    eax,DWORD PTR [ecx+0x3a3bd669]
  420555:	dec    edx
  420556:	push   ds
  420557:	or     eax,0xa0a47648
  42055c:	popf   
  42055d:	leave  
  42055e:	mov    cl,0xcf
  420560:	push   esi
  420561:	imul   ebx,DWORD PTR [esi],0x4b
  420564:	dec    eax
  420565:	sar    esp,cl
  420567:	xlat   BYTE PTR ds:[ebx]
  420568:	cmp    ebp,edx
  42056a:	xor    BYTE PTR [ebx+0x29f791bd],bl
  420570:	mov    ch,ah
  420572:	stos   BYTE PTR es:[edi],al
  420573:	inc    ebx
  420574:	pop    esp
  420575:	mov    edi,0x1c45074c
  42057a:	add    bh,dl
  42057c:	clc    
  42057d:	push   es
  42057e:	inc    ebx
  42057f:	(bad)  
  420580:	pop    ebx
  420581:	xchg   dl,ch
  420583:	outs   dx,DWORD PTR ds:[esi]
  420584:	mov    ecx,0x6f6ce6b6
  420589:	out    0x64,eax
  42058b:	(bad)  
  42058c:	cdq    
  42058d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42058e:	mov    WORD PTR [ecx-0x20339ac4],fs
  420594:	ret    0x2d27
  420597:	push   ss
  420598:	call   0xbd655332
  42059d:	ja     0x4205e1
  42059f:	push   eax
  4205a0:	fisttp QWORD PTR [edx+0x79]
  4205a3:	mov    al,0x18
  4205a5:	or     ah,BYTE PTR [edi+0x7a]
  4205a8:	sbb    ah,BYTE PTR [eax-0x50]
  4205ab:	sub    BYTE PTR [ebp+0x2],bl
  4205ae:	or     DWORD PTR [ecx],ecx
  4205b0:	or     BYTE PTR [edi],dh
  4205b2:	jb     0x420602
  4205b4:	cdq    
  4205b5:	in     eax,dx
  4205b6:	mov    cl,0xdb
  4205b8:	dec    esi
  4205b9:	sub    DWORD PTR [ebp+0x388153d4],ebp
  4205bf:	(bad)  
  4205c0:	jo     0x420594
  4205c2:	cwde   
  4205c3:	test   eax,0x27448add
  4205c8:	push   eax
  4205c9:	lock mov cl,0x21
  4205cc:	retf   0x2dcd
  4205cf:	hlt    
  4205d0:	jmp    ebx
  4205d2:	add    edi,ebx
  4205d4:	jmp    0x3f19ccd8
  4205d9:	sar    BYTE PTR [edi-0x4e699342],0x1e
  4205e0:	cwde   
  4205e1:	pop    ds
  4205e2:	stos   DWORD PTR es:[edi],eax
  4205e3:	push   0xd7379711
  4205e8:	pop    ebp
  4205e9:	add    BYTE PTR [esp+edx*1],0xcc
  4205ed:	imul   ecx,esp,0x5e
  4205f0:	mov    dh,bl
  4205f2:	mov    DWORD PTR [ecx],ecx
  4205f4:	or     al,0x99
  4205f6:	jmp    0x42059a
  4205f8:	call   0xef09:0xb3d7688f
  4205ff:	rcr    BYTE PTR [ebx+eiz*4+0x23],cl
  420603:	add    ecx,DWORD PTR [eax+0x63b86ace]
  420609:	pusha  
  42060a:	xchg   edx,eax
  42060b:	popf   
  42060c:	(bad)  [ecx+0x70]
  42060f:	push   cs
  420610:	dec    eax
  420611:	sub    dl,BYTE PTR [ecx-0x58]
  420614:	pop    edx
  420615:	cmp    ch,BYTE PTR [ebp+0x738b473f]
  42061b:	(bad)  
  42061c:	sahf   
  42061d:	xchg   ebx,eax
  42061e:	xchg   ecx,eax
  42061f:	dec    esp
  420620:	in     eax,dx
  420621:	addr16 dec ecx
  420623:	inc    esp
  420624:	push   eax
  420625:	in     eax,dx
  420626:	cdq    
  420627:	sbb    eax,DWORD PTR [eax-0x7e]
  42062a:	mov    cl,0xd4
  42062c:	mov    bh,0xc5
  42062e:	test   BYTE PTR [esi-0x5f],ch
  420631:	and    bh,BYTE PTR [edx-0x29]
  420634:	or     DWORD PTR [edx+0x31],ecx
  420637:	(bad)  
  420638:	daa    
  420639:	mov    cl,BYTE PTR [esp+eax*8-0x78]
  42063d:	stc    
  42063e:	mov    bl,0xc8
  420640:	cmp    edx,DWORD PTR [esp+eiz*8-0x60]
  420644:	jno    0x4206ad
  420646:	test   BYTE PTR ds:0xfe0a0d6,ch
  42064d:	jmp    0x67b1:0xe1d0f1a2
  420654:	jbe    0x420638
  420656:	ror    DWORD PTR [ebx+0x444f608f],0xef
  42065d:	xor    eax,esp
  42065f:	cld    
  420660:	pop    es
  420661:	mov    ds,WORD PTR [ebx+esi*4+0x17]
  420665:	xchg   DWORD PTR [edx-0x4eaa0dcd],esi
  42066b:	add    ebp,DWORD PTR [eax+0x5fad737]
  420671:	jmp    0x395e:0x67d34724
  420678:	je     0x4206bb
  42067a:	outs   dx,DWORD PTR ds:[esi]
  42067b:	cmp    BYTE PTR [eax+0xc],0xbf
  42067f:	xor    BYTE PTR [esi],ah
  420681:	or     eax,0x3abeb7d8
  420686:	and    ebx,DWORD PTR [ebx+0x53]
  420689:	jnp    0x4206f8
  42068b:	retf   
  42068c:	out    0xf2,ax
  42068f:	out    0xad,al
  420691:	adc    al,0xa4
  420693:	mov    bh,0x88
  420695:	out    0x6,eax
  420697:	mov    eax,ds:0x3bdcc7f9
  42069c:	fldenv [edi-0x4b]
  42069f:	(bad)  
  4206a0:	jae    0x4206b4
  4206a2:	cwde   
  4206a3:	xor    ch,BYTE PTR [esp+ebx*4]
  4206a6:	mov    cl,0xcc
  4206a8:	pop    esi
  4206a9:	add    al,0x40
  4206ab:	sbb    esi,DWORD PTR ss:[eax+0xee4d7d4]
  4206b2:	cmp    eax,0xcbcd081
  4206b7:	out    0x81,al
  4206b9:	sbb    eax,DWORD PTR [ebp+0x74]
  4206bc:	retf   
  4206bd:	jle    0x420735
  4206bf:	rcr    eax,cl
  4206c1:	shl    DWORD PTR [ebp+eax*8-0x69],0x67
  4206c6:	lahf   
  4206c7:	inc    esi
  4206c8:	shl    BYTE PTR [ecx+0x1ac29c81],1
  4206ce:	mov    ds:0xb0da36bd,eax
  4206d3:	jecxz  0x42071a
  4206d5:	xchg   BYTE PTR [ebx],ch
  4206d7:	daa    
  4206d8:	std    
  4206d9:	out    0x72,eax
  4206db:	mov    DWORD PTR [eax+esi*8+0x9],edx
  4206df:	inc    ebx
  4206e0:	mov    BYTE PTR [esi+0x6],bh
  4206e3:	outs   dx,BYTE PTR ds:[esi]
  4206e4:	jg     0x42075b
  4206e6:	pop    ebx
  4206e7:	retf   0x64ae
  4206ea:	outs   dx,WORD PTR ds:[esi]
  4206ec:	add    al,0x2f
  4206ee:	mov    DWORD PTR [ebx+0x50],edi
  4206f1:	cmp    eax,0x668817aa
  4206f6:	in     eax,0x65
  4206f8:	ins    DWORD PTR es:[edi],dx
  4206f9:	mov    eax,ds:0x6841b734
  4206fe:	or     bh,bh
  420700:	push   ds
  420701:	call   0x5e87:0x449807f1
  420708:	test   DWORD PTR [ebp+0x57],ebp
  42070b:	pop    ebp
  42070c:	dec    edx
  42070d:	add    DWORD PTR [edi+edx*1],ecx
  420710:	mov    ebp,0x40eae8d3
  420715:	(bad)  
  420717:	push   cs
  420718:	arpl   WORD PTR [eax+0x56],dx
  42071b:	xlat   BYTE PTR ds:[ebx]
  42071c:	ja     0x420742
  42071e:	and    ebx,DWORD PTR [edi-0x78]
  420721:	jb     0x42070f
  420723:	int    0xfe
  420725:	push   ss
  420726:	pop    es
  420727:	push   ebx
  420728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420729:	pop    esi
  42072a:	out    0x88,eax
  42072c:	mov    BYTE PTR [eax+0x6c],ah
  42072f:	mov    eax,0xe2762578
  420734:	mov    bl,bl
  420736:	shl    DWORD PTR [ebx-0x314f05f0],1
  42073c:	or     bl,BYTE PTR [ebx+0x64402521]
  420742:	sti    
  420743:	mov    eax,0xa101fe4d
  420748:	push   eax
  420749:	rcl    BYTE PTR [eax-0x3d2f7716],0x51
  420750:	sar    BYTE PTR [ecx],0xe3
  420753:	ror    BYTE PTR [esi-0x29],cl
  420756:	pop    ebx
  420757:	xlat   BYTE PTR ds:[ebx]
  420758:	cwde   
  420759:	ss leave 
  42075b:	adc    bh,al
  42075d:	cmp    DWORD PTR [esi-0x70cf8185],0x21e7e500
  420767:	adc    al,0x47
  420769:	enter  0x99cb,0xd0
  42076d:	addr16 mov ch,0xcf
  420770:	mov    esi,DWORD PTR [ebp+0x6983b941]
  420776:	mov    cl,0x7
  420778:	and    DWORD PTR [edx-0x7cd6789a],0x6735a064
  420782:	mov    edi,DWORD PTR [eax]
  420784:	xchg   edi,eax
  420785:	mov    DWORD PTR [eax+0x22],ebx
  420788:	push   ebp
  420789:	mov    edi,0x67ad7d89
  42078e:	scas   eax,DWORD PTR es:[edi]
  42078f:	and    eax,0xab411d83
  420794:	push   ecx
  420795:	cmp    WORD PTR [edi+0x1],si
  420799:	and    BYTE PTR [ecx-0x20],bh
  42079c:	add    eax,0xbcd6bb83
  4207a1:	and    al,0x98
  4207a3:	push   edi
  4207a4:	ret    0xb794
  4207a7:	add    DWORD PTR [ebx-0x56],edi
  4207aa:	shr    eax,cl
  4207ac:	or     al,0x98
  4207ae:	xor    DWORD PTR [ebp-0x4f523b43],esp
  4207b4:	shl    ch,0xb2
  4207b7:	(bad)  
  4207b8:	scas   al,BYTE PTR es:[edi]
  4207b9:	ins    DWORD PTR es:[edi],dx
  4207ba:	xor    ecx,DWORD PTR [esi-0x2e]
  4207bd:	lahf   
  4207be:	test   DWORD PTR [edi-0x437598eb],0x7439dc1
  4207c8:	ja     0x42077e
  4207ca:	mov    cl,0xd8
  4207cc:	sti    
  4207cd:	push   ss
  4207ce:	sub    eax,0x2faaf12f
  4207d3:	xlat   BYTE PTR ds:[ebx]
  4207d4:	and    BYTE PTR [ecx],al
  4207d6:	fadd   QWORD PTR [eax+0x4d]
  4207d9:	aas    
  4207da:	test   DWORD PTR [eax-0x78],ebx
  4207dd:	inc    eax
  4207de:	lods   eax,DWORD PTR ds:[esi]
  4207df:	mov    eax,0xc4910cc3
  4207e4:	enter  0x1241,0x4f
  4207e8:	shl    BYTE PTR [edi-0x56],0xff
  4207ec:	leave  
  4207ed:	and    esp,DWORD PTR [ebx-0x78]
  4207f0:	xchg   DWORD PTR [edi+0x3079d1d4],esi
  4207f6:	call   0xa5d7:0x54425023
  4207fd:	jmp    0x9bae:0x9eb02a76
  420804:	mov    BYTE PTR [edx+0x4e],ch
  420807:	outs   dx,DWORD PTR ds:[esi]
  420808:	lds    esp,FWORD PTR [edi+ebp*1+0x7d]
  42080c:	mov    edi,0xc082b47b
  420811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420812:	sub    esi,DWORD PTR ds:0x582c3ad2
  420818:	mov    al,bl
  42081a:	mov    edi,0x2251e438
  42081f:	adc    al,0x5
  420821:	pusha  
  420822:	out    dx,al
  420823:	rcl    cl,1
  420825:	add    eax,0xd7e907f4
  42082a:	mov    eax,0xb76d88c7
  42082f:	scas   al,BYTE PTR es:[edi]
  420830:	xor    al,0xbf
  420832:	loope  0x42084b
  420834:	addr16 addr16 sbb eax,0x2af60ffa
  42083b:	push   cs
  42083c:	sbb    al,0x2f
  42083e:	sar    DWORD PTR [esi-0x53222014],1
  420844:	xchg   BYTE PTR [edi+0x45],ah
  420847:	sar    DWORD PTR [ebp+ebx*1+0x69c40246],cl
  42084e:	mov    cl,0x37
  420850:	cld    
  420851:	adc    al,0x98
  420853:	dec    esp
  420854:	outs   dx,DWORD PTR ds:[esi]
  420855:	mov    al,0x3f
  420857:	sub    eax,0xb0a15cc6
  42085c:	xchg   ecx,esi
  42085e:	mov    bh,BYTE PTR [edi]
  420860:	push   edx
  420861:	data16 aad 0x26
  420864:	fwait
  420865:	fwait
  420866:	push   ss
  420867:	or     al,0x88
  420869:	cmp    al,0xef
  42086b:	inc    ebp
  42086c:	jmp    DWORD PTR [esp+ecx*4-0x32]
  420870:	scas   al,BYTE PTR es:[edi]
  420871:	addr16 and ch,bl
  420874:	xor    BYTE PTR [ecx-0x682ca333],bh
  42087a:	mov    al,0x78
  42087c:	or     BYTE PTR [edx],0x2
  42087f:	xor    DWORD PTR [edi],esi
  420881:	sub    al,0x91
  420883:	mov    bh,0xe
  420885:	pop    edx
  420886:	xchg   ebx,eax
  420887:	xchg   ebx,eax
  420888:	adc    al,0x4b
  42088a:	adc    al,0x6e
  42088c:	mov    fs,WORD PTR [esi]
  42088e:	and    DWORD PTR [edi+0xf],edi
  420891:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  420893:	jns    0x42090d
  420895:	xor    BYTE PTR [edi],dl
  420897:	xchg   DWORD PTR [eax+0x4b5d5890],ecx
  42089d:	test   DWORD PTR [edx],edx
  42089f:	icebp  
  4208a0:	add    DWORD PTR [edi+0x50],esp
  4208a3:	xchg   edx,eax
  4208a4:	inc    ebx
  4208a5:	cli    
  4208a6:	sar    cl,cl
  4208a8:	push   ebp
  4208a9:	out    dx,eax
  4208aa:	inc    ebp
  4208ab:	fimul  WORD PTR [eax+0x621e6b57]
  4208b1:	add    ebx,DWORD PTR [esi]
  4208b3:	inc    ecx
  4208b4:	mul    DWORD PTR ds:[edx-0x29]
  4208b8:	adc    BYTE PTR [ecx-0x7b],0xcc
  4208bc:	lods   al,BYTE PTR ds:[esi]
  4208bd:	(bad)  
  4208c0:	repnz xchg esp,eax
  4208c2:	mov    ch,0xd2
  4208c4:	xor    BYTE PTR [eax+0x3f],dl
  4208c7:	sar    DWORD PTR [esi-0x19],0x1d
  4208cb:	scas   al,BYTE PTR es:[edi]
  4208cc:	mov    ebp,0xfa7b1ea
  4208d1:	sbb    BYTE PTR [eax+0x48caf18c],bh
  4208d7:	jmp    0x6700:0x301d2b0a
  4208de:	cmp    DWORD PTR [edx+eax*8],ebx
  4208e1:	mov    cl,0x5e
  4208e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208e4:	sub    BYTE PTR [edi+0x3988ca47],bl
  4208ea:	mov    bl,0xcf
  4208ec:	cdq    
  4208ed:	cmp    ebx,ebp
  4208ef:	pop    ebx
  4208f0:	leave  
  4208f1:	addr16 pop ds
  4208f3:	(bad)  
  4208f4:	xchg   esi,eax
  4208f5:	stos   BYTE PTR es:[edi],al
  4208f6:	pop    eax
  4208f7:	jb     0x420927
  4208f9:	mov    edi,0x55291bb0
  4208fe:	add    eax,0xd185bf55
  420903:	dec    ebp
  420904:	push   esp
  420905:	sbb    eax,0x2a37d77a
  42090a:	mov    dl,0x43
  42090c:	pushf  
  42090d:	pop    ss
  42090e:	xor    al,0x14
  420910:	mov    ah,ch
  420912:	mov    dh,0xb8
  420914:	es jle 0x420928
  420917:	and    esi,DWORD PTR [edi+0x67]
  42091a:	fistp  WORD PTR [edx]
  42091c:	mov    eax,ds:0x9cb06595
  420921:	jns    0x4208d4
  420923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420924:	mov    eax,0x31e08b0b
  420929:	scas   al,BYTE PTR es:[edi]
  42092a:	outs   dx,BYTE PTR ds:[esi]
  42092b:	xlat   BYTE PTR ds:[ebx]
  42092c:	add    esi,DWORD PTR [edx-0x1]
  42092f:	gs js  0x42097b
  420932:	jns    0x4208f4
  420934:	or     DWORD PTR [ebx-0x7d0b3917],0x657ddb31
  42093e:	lock xlat BYTE PTR ds:[ebx]
  420940:	aam    0x20
  420942:	adc    al,BYTE PTR [edx-0x64]
  420945:	push   esp
  420946:	fld    st(5)
  420948:	mov    BYTE PTR [esi-0x5a],bl
  42094b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42094c:	pop    es
  42094d:	mov    eax,ds:0x679a3fa9
  420952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420953:	xor    ebp,DWORD PTR [edx]
  420955:	xchg   DWORD PTR [esi],ebx
  420957:	imul   ebx,DWORD PTR [edi-0x37385dd1],0xfffffff8
  42095e:	mov    cl,0x41
  420960:	test   BYTE PTR [ecx-0x1e],dl
  420963:	add    eax,DWORD PTR [edx+0x2ea79c67]
  420969:	xchg   dh,dl
  42096b:	das    
  42096c:	fwait
  42096d:	repnz mov cl,0xb5
  420970:	push   esi
  420971:	inc    ebp
  420972:	(bad)  
  420973:	and    DWORD PTR [edx-0x2428d86c],ebp
  420979:	sub    eax,0xdde0277c
  42097e:	sub    ebp,eax
  420980:	test   BYTE PTR [ecx+0x268c5071],cl
  420986:	xor    edx,esp
  420988:	pop    ebx
  420989:	cwde   
  42098a:	pop    esi
  42098b:	retf   0xe2ca
  42098e:	(bad)  
  42098f:	xlat   BYTE PTR ds:[ebx]
  420990:	sbb    al,0x5
  420992:	rol    BYTE PTR [edx+eiz*8],cl
  420995:	push   0xd214ddb6
  42099a:	fidiv  WORD PTR [ebx]
  42099c:	test   al,0x2d
  42099e:	icebp  
  42099f:	jne    0x4209f3
  4209a1:	addr16 inc ebp
  4209a3:	adc    eax,0x9ba7723a
  4209a8:	cmp    eax,0x1cbcb1bf
  4209ad:	repz pop es
  4209af:	xchg   BYTE PTR [edx+esi*8],ah
  4209b2:	loope  0x420984
  4209b4:	xor    ecx,edi
  4209b6:	jae    0x4209a7
  4209b8:	adc    dh,BYTE PTR [edi-0x3a]
  4209bb:	in     eax,0x9c
  4209bd:	mov    ebx,0x79ed90be
  4209c2:	ins    BYTE PTR es:[edi],dx
  4209c3:	sbb    eax,0x5b1a697
  4209c8:	mov    DWORD PTR es:[edx+0x4967f8d1],eax
  4209cf:	fadd   DWORD PTR [esi-0x2a]
  4209d2:	jo     0x420a43
  4209d4:	inc    ebp
  4209d5:	hlt    
  4209d6:	mov    al,0x67
  4209d8:	sbb    al,bh
  4209da:	out    dx,al
  4209db:	(bad)  
  4209dc:	push   ecx
  4209dd:	repnz xchg ecx,eax
  4209df:	cmp    DWORD PTR [esi+0x36a18467],0x1b
  4209e6:	(bad)  
  4209e7:	and    dl,ch
  4209e9:	cmp    DWORD PTR [ecx+0x2b5a4171],esi
  4209ef:	mov    al,ds:0xd495a9db
  4209f4:	out    dx,eax
  4209f5:	ret    0xc246
  4209f8:	jns    0x420a76
  4209fa:	push   ecx
  4209fb:	dec    edx
  4209fc:	add    DWORD PTR ds:0xd858fc97,esp
  420a02:	mov    cl,0xa1
  420a04:	icebp  
  420a05:	out    0xe4,al
  420a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a08:	dec    edi
  420a09:	fcom   DWORD PTR [bp+si]
  420a0c:	pop    ss
  420a0d:	cmp    edi,ecx
  420a0f:	jae    0x420a27
  420a11:	jg     0x42099e
  420a13:	retf   
  420a14:	pop    eax
  420a15:	jp     0x420a3e
  420a17:	or     ebx,DWORD PTR [ecx+eax*1]
  420a1a:	icebp  
  420a1b:	add    edx,edx
  420a1d:	xchg   edi,eax
  420a1e:	in     al,0x2c
  420a20:	mov    esi,0x26670767
  420a25:	rcl    BYTE PTR ds:0xbff884ec,cl
  420a2b:	sbb    BYTE PTR [edx],ah
  420a2d:	jnp    0x420a11
  420a2f:	xlat   BYTE PTR ds:[ebx]
  420a30:	hlt    
  420a31:	jo     0x420a3d
  420a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a34:	push   edi
  420a35:	addr16 cwde 
  420a37:	mov    al,BYTE PTR [edx-0x3c]
  420a3a:	cmp    al,0x50
  420a3c:	out    0x1c,al
  420a3e:	mov    cl,0x46
  420a40:	cmp    cl,BYTE PTR [ecx-0x25]
  420a43:	push   0x62
  420a45:	inc    esp
  420a46:	xor    edi,edx
  420a48:	(bad)  
  420a49:	std    
  420a4a:	out    0x32,eax
  420a4c:	cmp    al,0x9d
  420a4e:	sti    
  420a4f:	or     bl,ah
  420a51:	aam    0xde
  420a53:	xlat   BYTE PTR ds:[ebx]
  420a54:	mov    esp,0x96fb531f
  420a59:	repnz xor al,0xd7
  420a5c:	out    dx,eax
  420a5d:	pop    esi
  420a5e:	jge    0x420a50
  420a60:	adc    BYTE PTR [ecx-0x237ef8c1],bl
  420a66:	retf   
  420a67:	pop    DWORD PTR [esi+0x6d2761c1]
  420a6d:	push   ebp
  420a6e:	pop    edi
  420a6f:	fdivr  DWORD PTR [ebp-0x178fc9ce]
  420a75:	sar    DWORD PTR [edi-0x22],cl
  420a78:	adc    ebp,DWORD PTR [eax+0x5f1857b1]
  420a7e:	and    esp,DWORD PTR es:[ecx-0x30]
  420a82:	in     al,0xd7
  420a84:	fwait
  420a85:	dec    edi
  420a86:	inc    edx
  420a87:	(bad)  
  420a89:	aas    
  420a8a:	cmp    esp,esp
  420a8c:	shr    BYTE PTR [edi-0x181d9298],0x73
  420a93:	fwait
  420a94:	pop    es
  420a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a96:	pop    es
  420a97:	int    0x97
  420a99:	jns    0x420a99
  420a9b:	nop
  420a9c:	mov    bl,0xe7
  420a9e:	cld    
  420a9f:	or     BYTE PTR ds:0x88b277bc,cl
  420aa5:	jne    0x420a80
  420aa7:	xchg   edi,eax
  420aa8:	sub    eax,0xa3b7dd85
  420aad:	addr16 call esi
  420ab0:	daa    
  420ab1:	add    DWORD PTR [edi-0x4ebb03ab],eax
  420ab7:	pusha  
  420ab8:	bound  edi,QWORD PTR ds:0xfd00eaad
  420abe:	cmp    bh,dl
  420ac0:	xchg   ecx,eax
  420ac1:	dec    ebp
  420ac2:	jne    0x420a78
  420ac4:	cmp    eax,0x879aa03a
  420ac9:	inc    eax
  420aca:	in     eax,dx
  420acb:	in     al,0xe3
  420acd:	sub    al,0x57
  420acf:	xchg   DWORD PTR [edx+edi*2+0x71],edx
  420ad3:	xlat   BYTE PTR ds:[ebx]
  420ad4:	stc    
  420ad5:	xchg   edi,eax
  420ad6:	mov    fs,WORD PTR [edi+0x51]
  420ad9:	dec    eax
  420ada:	popa   
  420adb:	pop    ds
  420adc:	mov    BYTE PTR [ecx],dh
  420ade:	fsub   DWORD PTR [ebx+0x1a9d93a7]
  420ae4:	pop    esp
  420ae5:	jg     0x420a80
  420ae7:	sub    bh,BYTE PTR [ebp+0x6a2813a9]
  420aed:	mov    ecx,0x1fe824be
  420af2:	jbe    0x420acb
  420af4:	dec    ebx
  420af5:	jnp    0x420ad2
  420af7:	jge    0x420a7f
  420af9:	pusha  
  420afa:	cmp    al,0x3c
  420afc:	mov    esp,0xa3f70ebe
  420b01:	dec    edi
  420b02:	mov    ah,0x3e
  420b04:	xchg   DWORD PTR [ecx-0x2],ebx
  420b07:	jecxz  0x420b26
  420b09:	test   esp,ecx
  420b0b:	pop    eax
  420b0c:	mov    bh,0x99
  420b0e:	jge    0x420b72
  420b10:	stos   BYTE PTR es:[edi],al
  420b11:	addr16 jmp 0x4f92:0xda669bb
  420b19:	aam    0xb1
  420b1b:	inc    ebp
  420b1c:	bound  edi,QWORD PTR [edi+eax*4+0x2db92ba2]
  420b23:	xlat   BYTE PTR ds:[ebx]
  420b24:	add    dl,dl
  420b26:	push   ds
  420b27:	loopne 0x420b53
  420b29:	push   ebx
  420b2a:	pop    esp
  420b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b2c:	mov    BYTE PTR [ecx-0x2b],ah
  420b2f:	sub    edi,eax
  420b31:	fwait
  420b32:	imul   DWORD PTR [ebp+0x52]
  420b35:	addr16 leave 
  420b37:	jb     0x420ac8
  420b39:	push   es
  420b3a:	(bad)  [ecx]
  420b3c:	push   eax
  420b3d:	jp     0x420aed
  420b3f:	jbe    0x420b05
  420b41:	(bad)  
  420b42:	jno    0x420b17
  420b44:	pop    edi
  420b45:	mov    WORD PTR [edx-0x7f],fs
  420b48:	ds js  0x420b4c
  420b4b:	stos   DWORD PTR es:[edi],eax
  420b4c:	push   ebx
  420b4d:	loopne 0x420b09
  420b4f:	inc    ecx
  420b50:	dec    ecx
  420b51:	div    ecx
  420b53:	jge    0x420b3a
  420b55:	(bad)  [ecx+0x15b19433]
  420b5b:	stc    
  420b5c:	dec    edi
  420b5d:	mov    ecx,ss
  420b5f:	stos   DWORD PTR es:[edi],eax
  420b60:	inc    ebp
  420b61:	lea    edx,[bp+di+0x1b]
  420b65:	ss inc esi
  420b67:	and    DWORD PTR [ebx+0x58],esi
  420b6a:	mov    cl,0xbd
  420b6c:	pop    eax
  420b6d:	inc    edi
  420b6e:	iret   
  420b6f:	adc    eax,0xcae6b6ca
  420b74:	sbb    bl,BYTE PTR [edx+eax*1]
  420b77:	xchg   edi,eax
  420b78:	arpl   dx,sp
  420b7a:	aas    
  420b7b:	and    al,al
  420b7d:	xchg   esi,eax
  420b7e:	dec    ecx
  420b7f:	xor    al,0xf9
  420b81:	and    eax,0x12afa1b1
  420b86:	mov    eax,0x6f92e39a
  420b8b:	leave  
  420b8c:	or     ebx,edx
  420b8e:	push   0x17
  420b90:	lock mov ds:0xb0962b22,eax
  420b96:	mov    cl,0x73
  420b98:	add    esp,DWORD PTR [esi-0x15]
  420b9b:	add    edx,esp
  420b9d:	or     BYTE PTR [eax+edx*8],0xd0
  420ba1:	test   DWORD PTR [ebx-0x13],0xf7837b68
  420ba8:	xchg   esi,eax
  420ba9:	jmp    DWORD PTR [esi-0x78]
  420bac:	mov    BYTE PTR [edx+0x18d41974],dl
  420bb2:	loop   0x420b8b
  420bb4:	enter  0x2bd3,0xfa
  420bb8:	jmp    0x88d73814
  420bbd:	je     0x420c08
  420bbf:	mov    dl,0xa7
  420bc1:	pop    eax
  420bc2:	sub    eax,0x9b787499
  420bc7:	or     ecx,DWORD PTR [ebx+0x67]
  420bca:	push   ebp
  420bcb:	pop    esp
  420bcc:	out    0x11,eax
  420bce:	iret   
  420bcf:	into   
  420bd0:	repnz push ebp
  420bd2:	mov    dl,0x5a
  420bd4:	imul   eax,DWORD PTR [edi],0xffffffbc
  420bd7:	push   eax
  420bd8:	loop   0x420bd1
  420bda:	xor    eax,0xcc67d90c
  420bdf:	add    BYTE PTR [esi-0x5d1c42d8],bh
  420be5:	mov    al,ds:0xdbe0aebf
  420bea:	cli    
  420beb:	mov    ch,0x39
  420bed:	inc    esp
  420bee:	adc    DWORD PTR [edi-0x2876a4c7],edx
  420bf4:	xchg   esp,eax
  420bf5:	test   BYTE PTR es:[esi-0x6f975b29],cl
  420bfc:	mov    esi,0x2ad7aaa0
  420c01:	(bad)  
  420c05:	dec    edx
  420c06:	or     edi,edx
  420c08:	add    BYTE PTR ds:0xe9652c3d,dl
  420c0e:	dec    edi
  420c0f:	xor    DWORD PTR [edx+0x66],edi
  420c12:	mov    cl,0xc
  420c14:	sti    
  420c15:	push   esi
  420c16:	stos   DWORD PTR es:[edi],eax
  420c17:	div    BYTE PTR [edx+0x76d7b602]
  420c1d:	fdivrp st(7),st
  420c1f:	mov    edi,ds
  420c21:	add    edi,DWORD PTR [eax]
  420c23:	xor    al,0x85
  420c25:	shl    ebp,cl
  420c27:	jle    0x420c4e
  420c29:	idiv   BYTE PTR [edi-0x571e6d99]
  420c2f:	fldenv [edx]
  420c31:	hlt    
  420c32:	sbb    DWORD PTR [eax],ecx
  420c34:	call   0x63d10025
  420c39:	popa   
  420c3a:	mov    dh,0xa2
  420c3c:	pop    es
  420c3d:	js     0x420c2b
  420c3f:	jmp    0x67ac:0xb82394e8
  420c46:	mov    ds:0x64ed32a8,al
  420c4b:	ss icebp 
  420c4d:	jle    0x420c00
  420c4f:	fwait
  420c50:	jns    0x420c41
  420c52:	mov    ds,eax
  420c54:	pop    ss
  420c55:	fs arpl bx,cx
  420c58:	fcmovnbe st,st(2)
  420c5a:	mov    eax,0x9eae5d16
  420c5f:	fist   DWORD PTR [ecx+0x57]
  420c62:	jns    0x420c1e
  420c64:	mov    BYTE PTR [eax-0x677eaa93],al
  420c6a:	imul   edx,DWORD PTR [edi+0x10],0x67
  420c6e:	loopne 0x420ca7
  420c70:	pop    eax
  420c71:	jo     0x420c2a
  420c73:	xchg   esp,eax
  420c74:	data16 adc dh,BYTE PTR [ecx+0x4b5e092]
  420c7b:	ret    
  420c7c:	sbb    bl,BYTE PTR [edx+0x7e30d7cc]
  420c82:	sbb    dl,0xab
  420c85:	mov    ah,0xb3
  420c87:	mov    BYTE PTR ss:[edi],al
  420c8a:	(bad)  
  420c8b:	jno    0x420c6c
  420c8d:	loopne 0x420c7b
  420c8f:	mov    BYTE PTR [eax],dl
  420c91:	aaa    
  420c92:	sub    BYTE PTR cs:[edi+eiz*2],ch
  420c96:	ins    BYTE PTR es:[edi],dx
  420c97:	adc    eax,DWORD PTR [edi+edx*2]
  420c9a:	out    0x65,eax
  420c9c:	mov    ebp,0xa4c1c107
  420ca1:	inc    edx
  420ca2:	aad    0xb
  420ca4:	call   0x86b9:0x27c331fc
  420cab:	sbb    DWORD PTR [edi],esi
  420cad:	addr16 xchg ebp,eax
  420caf:	and    BYTE PTR [esi-0x23d6361d],dl
  420cb5:	dec    ebx
  420cb6:	mov    cl,0xb2
  420cb8:	mov    ds:0xff345619,eax
  420cbd:	fabs   
  420cbf:	aad    0x3f
  420cc1:	cmp    al,0x1a
  420cc3:	cs (bad) 
  420cc6:	dec    ecx
  420cc7:	sub    DWORD PTR [eax],0x7d
  420cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ccb:	xacquire xchg BYTE PTR ds:0xda8a84c9,ah
  420cd2:	add    al,0x57
  420cd4:	sbb    DWORD PTR [ecx-0x6],esp
  420cd7:	xor    al,0x48
  420cd9:	addr16 or edi,eax
  420cdc:	pop    es
  420cdd:	jns    0x420cba
  420cdf:	(bad)  
  420ce0:	(bad)  [esi]
  420ce2:	loope  0x420cc6
  420ce4:	jge    0x420cfe
  420ce6:	inc    edi
  420ce7:	adc    DWORD PTR [eax+0x3eecbf58],ecx
  420ced:	xchg   edi,eax
  420cee:	cmp    BYTE PTR [ecx-0x6f],ch
  420cf1:	adc    bh,ch
  420cf3:	aam    0x85
  420cf5:	inc    esi
  420cf6:	stos   BYTE PTR es:[edi],al
  420cf7:	retf   0x9020
  420cfa:	xor    ebx,esi
  420cfc:	or     bl,ah
  420cfe:	mov    cl,0x48
  420d00:	int3   
  420d01:	push   esp
  420d02:	les    eax,FWORD PTR [edi]
  420d04:	gs ret 
  420d06:	sub    dl,bh
  420d08:	shl    DWORD PTR [ebx+ebx*2+0x10],1
  420d0c:	xchg   esi,eax
  420d0d:	(bad)  
  420d0e:	and    al,dl
  420d10:	xchg   DWORD PTR [ecx+0xb89cff2],esi
  420d16:	in     al,0x7d
  420d18:	and    BYTE PTR [eax+0x69],0xd3
  420d1c:	jle    0x420caa
  420d1e:	and    eax,0x65e7bc81
  420d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d24:	adc    esi,DWORD PTR [ebp-0x4bd8da4f]
  420d2a:	pop    eax
  420d2b:	dec    esi
  420d2c:	mov    eax,ds:0x1e2d190d
  420d31:	js     0x420d6e
  420d33:	sbb    eax,0xc9a32766
  420d38:	loop   0x420d17
  420d3a:	mov    edi,0xe32988b3
  420d3f:	inc    ebx
  420d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d41:	test   bh,cl
  420d43:	repz loopne 0x420da6
  420d46:	push   ecx
  420d47:	fs mov edi,0x4c674989
  420d4d:	dec    edi
  420d4e:	cmp    DWORD PTR [esi-0x78],edi
  420d51:	leave  
  420d52:	cs pop ecx
  420d54:	daa    
  420d55:	or     DWORD PTR [ebp+0x706705f0],esi
  420d5b:	shr    ah,1
  420d5d:	inc    ebp
  420d5e:	psraw  mm5,QWORD PTR [eax+0x4263b13c]
  420d65:	sub    ah,ah
  420d67:	stc    
  420d68:	fmul   DWORD PTR [eax+0x72]
  420d6b:	xlat   BYTE PTR ds:[ebx]
  420d6c:	sub    eax,0x72e43553
  420d71:	das    
  420d72:	jge    0x420dc4
  420d74:	test   eax,0xa4a7bd7c
  420d79:	jno    0x420dbb
  420d7b:	cmp    esi,DWORD PTR [eax-0x2dcc2381]
  420d81:	hlt    
  420d82:	mov    dh,0xd6
  420d84:	or     ebp,DWORD PTR [edx-0x78ee8d05]
  420d8a:	loope  0x420e01
  420d8c:	mov    ds:0x29d773e8,eax
  420d91:	xor    DWORD PTR [ebp-0x5e],0x3637c3eb
  420d98:	mov    cl,bl
  420d9a:	stc    
  420d9b:	cmc    
  420d9c:	loope  0x420d67
  420d9e:	mov    ebx,0x2b3d3057
  420da3:	pop    ss
  420da4:	sub    eax,0x8a80e7a7
  420da9:	mov    DWORD PTR [eax+ebx*4-0x5],ecx
  420dad:	loopne 0x420d66
  420daf:	call   0xeed4b53d
  420db4:	stc    
  420db5:	loope  0x420dfd
  420db7:	xlat   BYTE PTR ds:[ebx]
  420db8:	push   cs
  420db9:	shl    BYTE PTR ds:[eax-0x6b625f04],1
  420dc0:	mov    BYTE PTR [ecx+0x3080327f],dh
  420dc6:	mov    ecx,0x5a5d62e1
  420dcb:	icebp  
  420dcc:	jne    0x420e36
  420dce:	fucomp st(3)
  420dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dd1:	xchg   esp,eax
  420dd2:	rol    DWORD PTR [ebp-0x3f],1
  420dd5:	jl     0x420d72
  420dd7:	add    BYTE PTR [edx-0x77fa4fbb],bl
  420ddd:	lahf   
  420dde:	inc    ecx
  420ddf:	dec    esi
  420de0:	mov    ah,0x35
  420de2:	out    0x33,eax
  420de4:	cwde   
  420de5:	data16 test al,0x4d
  420de8:	sbb    edx,DWORD PTR [ebx+edi*2-0x3d54d87e]
  420def:	push   cs
  420df0:	mov    ebx,0x1657a0c7
  420df5:	sbb    esi,DWORD PTR ds:0x6548592d
  420dfb:	xlat   BYTE PTR ds:[ebx]
  420dfc:	data16 (bad) 
  420dfe:	out    0xf1,al
  420e00:	hlt    
  420e01:	inc    ebx
  420e02:	test   al,0x9a
  420e04:	xchg   esp,eax
  420e05:	jge    0x420de0
  420e07:	dec    esp
  420e08:	sbb    esp,DWORD PTR [esi-0x5e]
  420e0b:	jne    0x420de0
  420e0d:	hlt    
  420e0e:	test   eax,0x76927c7e
  420e13:	frstor [edx+0x315ab50b]
  420e19:	addr16 (bad) 
  420e1b:	jl     0x420def
  420e1d:	icebp  
  420e1e:	inc    ebx
  420e1f:	loope  0x420e9b
  420e21:	pushf  
  420e22:	mov    cl,0xe3
  420e24:	cli    
  420e25:	lods   eax,DWORD PTR ds:[esi]
  420e26:	dec    ebp
  420e27:	aas    
  420e28:	push   0x39
  420e2a:	add    dl,bh
  420e2c:	out    dx,eax
  420e2d:	in     al,0x40
  420e2f:	imul   edi,DWORD PTR [edi-0x772afa5b],0x3fdda4a7
  420e39:	sar    dh,0x91
  420e3c:	shl    DWORD PTR [edi+0x5f],0x6
  420e40:	pop    ds
  420e41:	jno    0x420e1b
  420e43:	jg     0x420e77
  420e45:	ret    0x6bb1
  420e48:	and    al,0xf3
  420e4a:	int    0xb5
  420e4c:	pop    edi
  420e4d:	int3   
  420e4e:	rcr    eax,0xc4
  420e51:	jne    0x420de9
  420e53:	stos   BYTE PTR es:[edi],al
  420e54:	sub    BYTE PTR [eax+edi*4+0x43bdf363],dl
  420e5b:	and    eax,0x9aff9688
  420e60:	sub    eax,0x8c35f346
  420e65:	addr16 dec ebp
  420e67:	fimul  DWORD PTR [edi-0x16]
  420e6a:	arpl   WORD PTR [edi-0x4f4e4660],sp
  420e70:	xor    al,BYTE PTR [ecx+0x5a]
  420e73:	mov    BYTE PTR [edi+eax*4-0x4b],al
  420e77:	call   0xb6739337
  420e7c:	neg    DWORD PTR [ebp+0x3]
  420e7f:	sub    BYTE PTR [ebp+0x131fb1f7],0x68
  420e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e87:	outs   dx,WORD PTR ds:[esi]
  420e89:	outs   dx,BYTE PTR ds:[esi]
  420e8a:	(bad)  
  420e8b:	xlat   BYTE PTR ds:[ebx]
  420e8c:	sub    DWORD PTR [eax-0x7e],edi
  420e8f:	dec    ebx
  420e90:	xor    eax,0x888916ec
  420e95:	cmp    edi,DWORD PTR [ebx]
  420e97:	ja     0x420ebb
  420e99:	and    bl,BYTE PTR [edx+0x35]
  420e9c:	push   0x67
  420e9e:	jp     0x420e3a
  420ea0:	jns    0x420e9a
  420ea2:	push   ebp
  420ea3:	push   edx
  420ea4:	enter  0xb0c2,0x4b
  420ea8:	inc    ebp
  420ea9:	mov    ah,0xa8
  420eab:	cmp    bh,0xb1
  420eae:	dec    eax
  420eaf:	idiv   eax
  420eb1:	cmp    edi,DWORD PTR [eax]
  420eb3:	xlat   BYTE PTR ds:[ebx]
  420eb4:	pop    ss
  420eb5:	adc    ebx,DWORD PTR [ebx]
  420eb7:	lea    eax,[edx-0x7747240b]
  420ebd:	dec    eax
  420ebe:	jecxz  0x420e70
  420ec0:	outs   dx,DWORD PTR ds:[esi]
  420ec1:	and    DWORD PTR [esi],ebp
  420ec3:	inc    edx
  420ec4:	cmp    esp,DWORD PTR [edi-0x24]
  420ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ec8:	shl    DWORD PTR [ebx-0x1eda0423],0xb1
  420ecf:	xchg   BYTE PTR [edx-0x5f],bl
  420ed2:	call   0xa5675d16
  420ed7:	rol    BYTE PTR [esi],1
  420ed9:	pop    edx
  420eda:	jge    0x420f3f
  420edc:	imul   edx,edi,0x902c4f
  420ee2:	mov    ?,WORD PTR [edi]
  420ee4:	les    esp,FWORD PTR [edi-0x62]
  420ee7:	mov    dl,0x36
  420ee9:	btc    eax,ebp
  420eec:	packuswb mm3,QWORD PTR [ebp-0x246c2391]
  420ef3:	adc    ah,BYTE PTR [ebp+0x45]
  420ef6:	mov    cl,0x56
  420ef8:	shl    DWORD PTR [esi-0x7dff98b8],0x33
  420eff:	mov    ds:0xe8dc6cda,eax
  420f04:	es pop edi
  420f06:	mov    cl,0x76
  420f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f09:	mov    ch,0x76
  420f0b:	in     al,dx
  420f0c:	xchg   DWORD PTR [ebx],edx
  420f0e:	mov    ch,0x9
  420f10:	pop    ss
  420f11:	rcr    DWORD PTR [edi-0xa568313],0xd7
  420f18:	dec    ebx
  420f19:	in     al,0xc7
  420f1b:	pop    edi
  420f1c:	call   0x876a2c1f
  420f21:	popf   
  420f22:	pop    ds
  420f23:	mov    ecx,0x2b2e1999
  420f28:	pop    esp
  420f29:	loopne 0x420f91
  420f2b:	xlat   BYTE PTR ds:[ebx]
  420f2c:	rcl    DWORD PTR [esi+0x69],0xee
  420f30:	xor    eax,0x8870f7c8
  420f35:	push   cs
  420f36:	daa    
  420f37:	ja     0x420f7a
  420f39:	rcl    BYTE PTR [ecx+0x7d6705f5],1
  420f3f:	jp     0x420ee3
  420f41:	xchg   esi,eax
  420f42:	fisubr WORD PTR [edx]
  420f44:	dec    edi
  420f45:	xor    BYTE PTR [ecx+0xa54c2b0],0x33
  420f4c:	push   0x74
  420f4e:	inc    edi
  420f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f50:	and    eax,0x5e6f0e14
  420f55:	je     0x420fca
  420f57:	repnz push esp
  420f59:	xlat   BYTE PTR ds:[bx]
  420f5b:	sbb    ch,dl
  420f5d:	in     al,dx
  420f5e:	cmp    eax,0xb0eaf5b1
  420f63:	outs   dx,BYTE PTR ds:[esi]
  420f64:	pusha  
  420f65:	stc    
  420f66:	dec    edi
  420f67:	sub    eax,0x3269899a
  420f6c:	mov    esi,0x2fa50e67
  420f71:	jbe    0x420f5b
  420f73:	mov    ebp,0x435f50ce
  420f78:	mov    BYTE PTR [edx],dl
  420f7a:	pop    ds
  420f7b:	sti    
  420f7c:	call   0xce7b:0x7915e295
  420f83:	push   cs
  420f84:	jge    0x420f2d
  420f86:	xor    eax,0xdf747ec6
  420f8b:	mov    al,0x88
  420f8d:	xor    DWORD PTR [esi+0x42],ebx
  420f90:	in     al,0x65
  420f92:	adc    ebx,ebx
  420f94:	ficom  WORD PTR [ecx-0x456c286f]
  420f9a:	cld    
  420f9b:	xor    ch,BYTE PTR [ebx-0x771ed18f]
  420fa1:	ss jne 0x420fcd
  420fa4:	push   edx
  420fa5:	or     ebx,DWORD PTR [ebx]
  420fa7:	sub    BYTE PTR [esi+0x3b],0x89
  420fab:	mov    ecx,?
  420fad:	popf   
  420fae:	xchg   bh,dl
  420fb0:	mov    eax,ds:0x566cc8d4
  420fb5:	mov    dh,0xe
  420fb7:	xor    bh,BYTE PTR [edi+0x16d7c137]
  420fbd:	push   edx
  420fbe:	jle    0x420ff4
  420fc0:	aam    0xf8
  420fc2:	xlat   BYTE PTR ds:[ebx]
  420fc3:	xlat   BYTE PTR ds:[ebx]
  420fc4:	in     al,0x7f
  420fc6:	push   edi
  420fc7:	ss dec ebp
  420fc9:	int3   
  420fca:	dec    esp
  420fcb:	jne    0x420f55
  420fcd:	lods   eax,DWORD PTR ds:[esi]
  420fce:	push   0x834d9050
  420fd3:	xor    al,0x5c
  420fd5:	bound  ecx,QWORD PTR [esi]
  420fd7:	inc    esp
  420fd8:	imul   ebp,edx,0x35c51740
  420fde:	sbb    dh,cl
  420fe0:	mov    edx,0x8d57c237
  420fe5:	lock jbe 0x420f87
  420fe8:	mov    ebx,0xdaa6afe1
  420fed:	fdiv   QWORD PTR [di-0x7632]
  420ff2:	cdq    
  420ff3:	out    0xcc,al
  420ff5:	cmp    BYTE PTR [ecx+0x1e41993a],dh
  420ffb:	sbb    BYTE PTR [edi],al
  420ffd:	xchg   ebx,eax
  420ffe:	out    0xd7,al
  421000:	aaa    
  421001:	push   ebp
  421002:	dec    ebp
  421003:	loop   0x420f90
  421005:	pop    edi
  421006:	sub    ecx,edx
  421008:	mov    dh,ch
  42100a:	pusha  
  42100b:	cdq    
  42100c:	or     eax,esp
  42100e:	iret   
  42100f:	xor    eax,0xacf26822
  421014:	push   ebp
  421015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421016:	shr    eax,1
  421018:	push   eax
  421019:	test   eax,0xe788fba5
  42101e:	and    eax,0x7706f220
  421023:	mov    ebx,0xd706191c
  421028:	adc    DWORD PTR [ecx-0x3],edx
  42102b:	push   ds
  42102c:	div    BYTE PTR [ecx]
  42102e:	pop    DWORD PTR [edx+eiz*2-0x57]
  421032:	mov    cl,0x8c
  421034:	data16 add al,0x18
  421037:	xor    esi,ebp
  421039:	inc    ebx
  42103a:	pop    eax
  42103b:	(bad)  
  42103c:	pop    eax
  42103d:	mov    ebp,0xb8b73739
  421042:	or     edi,DWORD PTR [ebx]
  421044:	out    0x7f,al
  421046:	mov    cl,0xc
  421048:	ins    BYTE PTR es:[edi],dx
  421049:	jnp    0x42109d
  42104b:	ins    BYTE PTR es:[edi],dx
  42104c:	and    bh,BYTE PTR [ebx-0x36f6280b]
  421052:	icebp  
  421053:	loop   0x42100b
  421055:	push   esp
  421056:	jmp    FWORD PTR [ecx-0x7f]
  421059:	push   edi
  42105a:	adc    al,0xce
  42105c:	xchg   esp,eax
  42105d:	xchg   BYTE PTR cs:[edi],dh
  421060:	call   0xe268f142
  421065:	addr16 mov esp,0xab5bc260
  42106b:	adc    dh,0x5
  42106e:	mov    dl,0x44
  421070:	dec    eax
  421071:	add    bh,al
  421073:	dec    edx
  421074:	mov    cs,edi
  421076:	adc    ebp,edx
  421078:	push   ecx
  421079:	pop    ss
  42107a:	adc    BYTE PTR [ecx+0x6f7467ca],ch
  421080:	push   ebx
  421081:	pxor   mm4,QWORD PTR [edx+eiz*2]
  421085:	(bad)  
  421086:	rcr    BYTE PTR [eax+0x76],0x1
  42108a:	mov    cl,0x73
  42108c:	jnp    0x4210f0
  42108e:	test   al,0x7a
  421090:	addr16 add eax,0x1242d714
  421096:	add    DWORD PTR [edx+0xf],ebp
  421099:	sbb    al,0x3d
  42109b:	add    eax,0xd6ed01bc
  4210a0:	adc    al,0xb0
  4210a2:	sti    
  4210a3:	(bad)  
  4210a4:	ror    BYTE PTR [ebp+0x78d0ff41],cl
  4210aa:	dec    eax
  4210ab:	inc    ecx
  4210ac:	retf   0x79e7
  4210af:	(bad)  
  4210b0:	int    0xe8
  4210b2:	addr16 fs (bad) 
  4210b5:	jo     0x421069
  4210b7:	arpl   WORD PTR [ecx-0x17],ax
  4210ba:	and    DWORD PTR [edx],esp
  4210bc:	mov    ch,0x9f
  4210be:	sub    al,0x2f
  4210c0:	out    0x67,eax
  4210c2:	jmp    0x4210cc
  4210c4:	dec    eax
  4210c5:	enter  0x5e68,0xf8
  4210c9:	xchg   ebx,eax
  4210ca:	mov    cl,0xc0
  4210cc:	push   esi
  4210cd:	lock (bad) 
  4210cf:	stos   DWORD PTR es:[edi],eax
  4210d0:	cli    
  4210d1:	in     eax,dx
  4210d2:	neg    al
  4210d4:	pop    es
  4210d5:	push   ebp
  4210d6:	gs push esp
  4210d8:	enter  0xc6a4,0x53
  4210dc:	push   0xfffffff2
  4210de:	mov    cl,0x59
  4210e0:	and    al,0xc9
  4210e2:	dec    ecx
  4210e3:	ret    0x76b3
  4210e6:	(bad)  
  4210e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210e9:	fidivr WORD PTR [ebx+0x50]
  4210ec:	ficomp DWORD PTR ds:0xe8bb4446
  4210f2:	js     0x42114b
  4210f4:	pusha  
  4210f5:	pop    edx
  4210f6:	pop    ebp
  4210f7:	sub    al,0xa8
  4210f9:	shl    BYTE PTR [ebp-0x29],cl
  4210fc:	cmp    bl,dh
  4210fe:	sub    esp,ecx
  421100:	mov    al,BYTE PTR [ecx]
  421102:	fldcw  WORD PTR [ebx-0x76]
  421105:	add    al,0x28
  421107:	add    dh,dh
  421109:	pop    es
  42110a:	xchg   bl,ch
  42110c:	mov    bl,0xb0
  42110e:	fcmovnbe st,st(7)
  421110:	retf   0xc22b
  421113:	cmp    al,0xf0
  421115:	loopne 0x42118a
  421117:	aad    0x88
  421119:	shr    BYTE PTR [ebp+0xc],cl
  42111c:	icebp  
  42111d:	sti    
  42111e:	dec    edi
  42111f:	int    0x74
  421121:	pop    es
  421122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421123:	inc    ebp
  421124:	push   esp
  421125:	mov    cl,0x51
  421127:	jmp    0x4fbd:0x94f47f86
  42112e:	test   DWORD PTR [esi-0x69a202fe],esi
  421134:	stos   DWORD PTR es:[edi],eax
  421135:	addr16 push cs
  421137:	outs   dx,BYTE PTR ds:[esi]
  421138:	mov    cl,BYTE PTR [ecx-0x1d5f8082]
  42113e:	mov    cl,0xa1
  421140:	(bad)  
  421141:	out    dx,al
  421142:	mov    ds:0x1435b155,eax
  421147:	xlat   BYTE PTR ds:[ebx]
  421148:	xchg   edx,eax
  421149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42114a:	out    0x53,eax
  42114c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42114d:	push   0xc988c617
  421152:	imul   ecx,DWORD PTR [ebx],0x4f1a26e5
  421158:	call   0xb13046f
  42115d:	pop    edx
  42115e:	in     al,0x21
  421160:	mov    ah,0x87
  421162:	out    dx,eax
  421163:	sbb    ebx,0x21
  421166:	mov    cl,0x80
  421168:	inc    ecx
  421169:	pop    ecx
  42116a:	push   edi
  42116b:	mov    esp,0xd70a7287
  421170:	and    BYTE PTR [eax+0x3e],dh
  421173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421174:	mov    ds:0x880bd947,eax
  421179:	shl    BYTE PTR [eax-0x27],cl
  42117c:	xor    cl,BYTE PTR [ebp+0x13de3665]
  421182:	sub    ch,ch
  421184:	mov    eax,ds:0x4892319b
  421189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42118a:	add    dh,bh
  42118c:	inc    edi
  42118d:	shl    DWORD PTR [ecx+0x62614d8a],0xe9
  421194:	aam    0xfc
  421196:	xor    al,0xaf
  421198:	pop    esp
  421199:	addr16 jge 0x4211c7
  42119c:	xor    ch,dh
  42119e:	(bad)  
  42119f:	dec    ebx
  4211a0:	test   al,0x4e
  4211a2:	mov    esi,0x20858b7
  4211a7:	aaa    
  4211a8:	es add eax,0x6772622a
  4211ae:	inc    eax
  4211af:	jbe    0x4211f3
  4211b1:	push   es
  4211b2:	adc    eax,0xb1f9eb04
  4211b7:	xor    ah,BYTE PTR [eax-0x7a]
  4211ba:	out    dx,al
  4211bb:	mov    bh,0x26
  4211bd:	gs mov ecx,0xfee19dd7
  4211c3:	in     al,0x8e
  4211c5:	jmp    0x36ca13dc
  4211ca:	enter  0xc030,0x69
  4211ce:	stos   DWORD PTR es:[edi],eax
  4211cf:	pushf  
  4211d0:	shl    DWORD PTR [edi-0x34],cl
  4211d3:	inc    edi
  4211d4:	mov    ebx,fs
  4211d6:	aad    0xc7
  4211d8:	icebp  
  4211d9:	ins    BYTE PTR es:[edi],dx
  4211da:	mov    dh,0x68
  4211dc:	enter  0x4daf,0xc2
  4211e0:	mov    BYTE PTR [esi+0x28],al
  4211e3:	cmp    ebp,eax
  4211e5:	add    BYTE PTR [ecx+0x6f670465],0x9e
  4211ec:	or     ch,BYTE PTR [eax+ebx*1]
  4211ef:	mov    eax,ds:0x31b1cac2
  4211f4:	sbb    eax,DWORD PTR [ecx+0x34]
  4211f7:	push   ss
  4211f8:	mov    dh,0x8d
  4211fa:	xor    edx,edi
  4211fc:	cmp    bp,cx
  4211ff:	out    0xcf,al
  421201:	cmp    BYTE PTR [ebp+0x24308f64],0x7d
  421208:	xor    ebp,esp
  42120a:	int    0xd6
  42120c:	jl     0x421198
  42120e:	adc    eax,0x2f3654f0
  421213:	cmp    DWORD PTR [edi-0x33b31599],ebp
  421219:	retf   0x3f8
  42121c:	scas   al,BYTE PTR es:[edi]
  42121d:	iret   
  42121e:	mov    esi,0x59be6791
  421223:	xlat   BYTE PTR ds:[ebx]
  421224:	aad    0x16
  421226:	mov    bl,0x6d
  421228:	sub    ah,BYTE PTR [edi-0x5d]
  42122b:	scas   al,BYTE PTR es:[edi]
  42122c:	daa    
  42122d:	mov    esp,0x1d08d2eb
  421232:	mov    cl,0xc1
  421234:	pop    esp
  421235:	loope  0x4212ae
  421237:	adc    esi,esi
  421239:	inc    eax
  42123a:	nop
  42123b:	retf   
  42123c:	icebp  
  42123d:	push   esp
  42123e:	ficom  WORD PTR [edi+0x70]
  421241:	or     eax,0x5af3e3f3
  421246:	mov    edi,0x88c805d5
  42124b:	aaa    
  42124c:	xlat   BYTE PTR ds:[ebx]
  42124d:	les    esp,FWORD PTR [edi-0x23982393]
  421253:	fsub   st(4),st
  421255:	fldenv [ecx+0x30]
  421258:	sbb    BYTE PTR [eax-0x257712a9],dl
  42125e:	jle    0x4212b3
  421260:	int    0x5
  421262:	pop    esi
  421263:	fisttp DWORD PTR [eax]
  421265:	pop    esi
  421266:	int3   
  421267:	jp     0x421292
  421269:	rol    DWORD PTR [edi-0x2b],0x88
  42126d:	add    al,0xaf
  42126f:	push   cs
  421270:	dec    ebp
  421271:	dec    eax
  421272:	test   al,0xf9
  421274:	(bad)  
  421275:	jb     0x4212cb
  421277:	xlat   BYTE PTR ds:[ebx]
  421278:	cwde   
  421279:	adc    eax,0x73632a3a
  42127e:	enter  0x8805,0xbc
  421282:	stos   DWORD PTR es:[edi],eax
  421283:	popa   
  421284:	cmp    BYTE PTR [eax],0x57
  421287:	fnstsw WORD PTR [ecx]
  421289:	fistp  WORD PTR [esi-0x29]
  42128c:	pop    edi
  42128d:	ss cdq 
  42128f:	push   esi
  421290:	jmp    0x42129e
  421292:	aam    0x20
  421294:	icebp  
  421295:	fs loope 0x42129c
  421298:	jb     0x4212ed
  42129a:	shr    DWORD PTR [esi+0x48609d81],0xa4
  4212a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212a2:	xor    DWORD PTR ds:0xca4129d6,ecx
  4212a8:	xchg   ecx,eax
  4212a9:	lea    edi,[eax+0x59]
  4212ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212ad:	inc    edi
  4212ae:	mov    al,0x29
  4212b0:	xchg   edx,eax
  4212b1:	sub    eax,0x1cd5f770
  4212b6:	loope  0x4212e4
  4212b8:	sbb    BYTE PTR [eax-0x4f],ch
  4212bb:	lods   eax,DWORD PTR ds:[esi]
  4212bc:	pop    ds
  4212bd:	daa    
  4212be:	jle    0x421264
  4212c0:	push   edi
  4212c1:	neg    DWORD PTR [ebp-0x18e5b027]
  4212c7:	inc    eax
  4212c8:	and    eax,0x7831973d
  4212cd:	xor    cl,BYTE PTR [ebx-0x5caa7735]
  4212d3:	mov    al,0xff
  4212d5:	xchg   ebx,eax
  4212d6:	outs   dx,BYTE PTR ds:[esi]
  4212d7:	(bad)  
  4212d8:	dec    esp
  4212d9:	fcomp  DWORD PTR [bp+0x29]
  4212dd:	aad    0x34
  4212df:	cmp    dh,dl
  4212e1:	les    esi,FWORD PTR [ecx+0x160b8519]
  4212e7:	sub    ch,BYTE PTR [esi-0x5f]
  4212ea:	imul   edx,edi,0x9deaa73f
  4212f0:	shl    BYTE PTR [edx+0x7992c80],0xd7
  4212f7:	xor    al,0xc9
  4212f9:	cmp    al,al
  4212fb:	and    ecx,DWORD PTR ss:[ecx+0x29]
  4212ff:	shr    DWORD PTR [eax+0x72],0xf0
  421303:	aad    0x53
  421305:	mov    DWORD PTR [esi+0x1e],ebp
  421308:	add    al,0xb
  42130a:	push   ecx
  42130b:	sub    bh,BYTE PTR [edi+0x52]
  42130e:	or     DWORD PTR [edx-0x78],edi
  421311:	fs enter 0x1e3a,0xf
  421316:	add    BYTE PTR [ecx],0xc2
  421319:	addr16 jae 0x42129c
  42131c:	xor    esp,eax
  42131e:	add    eax,0xb1d27f6b
  421323:	mov    ebx,DWORD PTR [esi+ecx*1]
  421326:	and    edi,DWORD PTR [esi+0x6c]
  421329:	popa   
  42132a:	test   bh,dl
  42132c:	xchg   ebx,eax
  42132d:	jmp    0x421339
  42132f:	mov    edi,0x621a943f
  421334:	repz lock (bad) 
  421337:	lock mov cl,ch
  42133a:	pop    ebx
  42133b:	jo     0x421300
  42133d:	shl    al,1
  42133f:	shl    DWORD PTR [ebp-0x2f2c07ee],0xcd
  421346:	lods   al,BYTE PTR ds:[esi]
  421347:	ret    0xa709
  42134a:	mov    BYTE PTR [ecx+0x49],ah
  42134d:	(bad)  [ecx-0x4f12c1f0]
  421353:	scas   eax,DWORD PTR es:[edi]
  421354:	call   0xe4f6:0x40d77df7
  42135b:	cld    
  42135c:	mov    dh,0xcb
  42135e:	mov    ?,edi
  421360:	mov    BYTE PTR [edi+0x45],dh
  421363:	xchg   ebp,eax
  421364:	push   ss
  421365:	rcr    BYTE PTR [ecx-0x71],1
  421368:	mov    ah,0x87
  42136a:	cld    
  42136b:	les    esp,FWORD PTR [ebx+0x32d688de]
  421371:	in     al,dx
  421372:	repnz mov dh,0x58
  421375:	(bad)  
  421376:	xchg   edi,eax
  421377:	lods   al,BYTE PTR ds:[esi]
  421378:	inc    eax
  421379:	mov    esi,0xed26f5b1
  42137e:	cmp    ebx,DWORD PTR es:[edi]
  421381:	add    DWORD PTR [ebp-0x4f4bf29],0xc6c4ef1f
  42138b:	shr    BYTE PTR [edx-0x1b],cl
  42138e:	mov    cl,0x24
  421390:	push   0xffffffef
  421392:	nop
  421393:	shr    DWORD PTR ds:0x7bd3255b,0x4
  42139a:	inc    eax
  42139b:	dec    esi
  42139c:	ds out 0x94,eax
  42139f:	push   cs
  4213a0:	fstp   TBYTE PTR [ebx-0x4f]
  4213a3:	lods   al,BYTE PTR ds:[esi]
  4213a4:	ins    BYTE PTR es:[edi],dx
  4213a5:	aam    0xd4
  4213a7:	and    DWORD PTR [esi-0x7e28f9d8],ebp
  4213ad:	or     ch,cl
  4213af:	outs   dx,BYTE PTR ds:[esi]
  4213b0:	aad    0x96
  4213b2:	jns    0x4213de
  4213b4:	ins    BYTE PTR es:[edi],dx
  4213b5:	sbb    BYTE PTR [ecx+0x773d4f45],dh
  4213bb:	ins    BYTE PTR es:[edi],dx
  4213bc:	dec    edx
  4213bd:	test   DWORD PTR [ecx+0x563909d7],ebp
  4213c3:	(bad)  
  4213c5:	ss push ebp
  4213c7:	cmp    ecx,DWORD PTR [edx-0x17adc450]
  4213cd:	addr16 popa 
  4213cf:	lods   eax,DWORD PTR ds:[esi]
  4213d0:	jge    0x42142b
  4213d2:	fwait
  4213d3:	xlat   BYTE PTR ds:[ebx]
  4213d4:	mov    eax,0x3c739065
  4213d9:	ror    BYTE PTR [ecx+ecx*2],1
  4213dc:	sti    
  4213dd:	pop    ebp
  4213de:	pop    ecx
  4213df:	js     0x421369
  4213e1:	add    DWORD PTR [ecx+ebp*4-0x661d65e],ecx
  4213e8:	mov    bh,0x67
  4213ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213eb:	push   edx
  4213ec:	jnp    0x4213e2
  4213ee:	or     bh,BYTE PTR [ebp-0x50aac0cb]
  4213f4:	sbb    DWORD PTR [edx],0x345560bf
  4213fa:	jno    0x421444
  4213fc:	mov    ds:0x9eef28a8,eax
  421401:	cdq    
  421402:	mov    cl,0xdb
  421404:	cdq    
  421405:	retf   
  421406:	add    dl,0x27
  421409:	and    BYTE PTR [ecx+0x32136f9a],dh
  42140f:	imul   ebp,DWORD PTR [ecx+0x70],0x674f2fa0
  421416:	rcr    DWORD PTR [esi-0x14],0x2
  42141a:	push   0xb1a207bc
  42141f:	adc    DWORD PTR ds:0xce8611e4,esi
  421425:	(bad)  
  421426:	xchg   ebx,eax
  421427:	shl    BYTE PTR [edi],1
  421429:	jnp    0x4214a9
  42142b:	cmp    BYTE PTR [ecx+0x10],0xeb
  42142f:	mov    bh,0x3e
  421431:	sbb    bh,bh
  421433:	imul   ecx,DWORD PTR [ecx+0x27896c0],0xffffffe7
  42143a:	or     bl,BYTE PTR [ebx+edx*8-0x39]
  42143e:	xchg   ebp,eax
  42143f:	f2xm1  
  421441:	push   ecx
  421442:	mov    ebp,0x16aa2a86
  421447:	imul   ecx,DWORD PTR [esi],0xa92968a7
  42144d:	and    BYTE PTR [ecx+0x597336ce],dh
  421453:	mov    cl,0x40
  421455:	lods   eax,DWORD PTR ds:[esi]
  421456:	fbld   TBYTE PTR [edi-0x1fe89762]
  42145c:	test   BYTE PTR [ecx+edx*1],bh
  42145f:	rcl    DWORD PTR [ecx],0xef
  421462:	ror    ebx,0x88
  421465:	mov    ds:0xb87200c4,eax
  42146a:	fnstcw WORD PTR [ebp-0x1bf79905]
  421470:	lods   al,BYTE PTR ds:[esi]
  421471:	(bad)  
  421472:	fcmove st,st(4)
  421474:	btr    DWORD PTR [ebx],eax
  421477:	or     cl,BYTE PTR [eax-0x66bafd30]
  42147d:	(bad)  
  42147e:	pop    ds
  42147f:	popf   
  421480:	mov    ah,0x6b
  421482:	fstp   TBYTE PTR [ebx-0x61]
  421485:	push   eax
  421486:	add    esp,DWORD PTR [ebp+0x33377588]
  42148c:	push   ss
  42148d:	jmp    0x3e3:0x67576dbb
  421494:	sub    eax,0x1f9ac528
  421499:	xchg   esi,eax
  42149a:	mov    cl,0x7f
  42149c:	mov    esp,0xded046fa
  4214a1:	push   eax
  4214a2:	xor    al,0xc9
  4214a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214a5:	lock mov al,0x17
  4214a8:	adc    al,bl
  4214aa:	jg     0x42144c
  4214ac:	xchg   ebp,eax
  4214ad:	jg     0x42146e
  4214af:	neg    BYTE PTR [ebx]
  4214b1:	push   ebp
  4214b2:	iret   
  4214b3:	pop    ss
  4214b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214b5:	popa   
  4214b6:	push   ds
  4214b7:	or     ebp,DWORD PTR [edi+eiz*2+0x7ad68fc8]
  4214be:	das    
  4214bf:	mov    ds:0xbdb1eeb0,eax
  4214c4:	pusha  
  4214c5:	sub    esi,esi
  4214c7:	in     eax,dx
  4214c8:	icebp  
  4214c9:	popa   
  4214ca:	iret   
  4214cb:	das    
  4214cc:	add    al,0xa9
  4214ce:	mov    bh,0xab
  4214d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214d1:	retf   0x46b6
  4214d4:	dec    eax
  4214d5:	js     0x4214b0
  4214d7:	nop
  4214d8:	mov    BYTE PTR [ebp+0x425e2f51],dl
  4214de:	inc    esi
  4214df:	out    0x58,eax
  4214e1:	fsubr  DWORD PTR ds:0x50b5
  4214e6:	(bad)  
  4214e7:	popa   
  4214e8:	inc    ebx
  4214e9:	mov    al,0xb1
  4214eb:	(bad)  
  4214ec:	add    DWORD PTR [esi-0x79f47eee],esi
  4214f2:	xchg   esp,eax
  4214f3:	shr    DWORD PTR [edx+ecx*2],1
  4214f6:	fnstenv [ebx-0x59]
  4214f9:	sub    DWORD PTR [ecx-0x3ac22a28],esi
  4214ff:	mov    eax,0xd746a353
  421504:	jne    0x421573
  421506:	daa    
  421507:	test   DWORD PTR [esi-0x77d95ab1],ebx
  42150d:	xor    DWORD PTR [esi-0xc],ecx
  421510:	push   esi
  421511:	(bad)  
  421513:	lds    esi,FWORD PTR [ecx+0x622d7660]
  421519:	xchg   ebx,eax
  42151a:	in     al,dx
  42151b:	out    0x7f,al
  42151d:	xchg   BYTE PTR [eax],dh
  42151f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421520:	xchg   DWORD PTR [edi+0x1ee5b3b0],ebp
  421526:	je     0x42155f
  421528:	lods   eax,DWORD PTR ds:[esi]
  421529:	sbb    BYTE PTR [ecx+0x5b],cl
  42152c:	pop    ebx
  42152d:	xor    DWORD PTR [di-0x5466],0x7bc04e86
  421536:	shl    BYTE PTR [eax-0x78],0x3d
  42153a:	dec    edx
  42153b:	rcl    DWORD PTR [ebx+0x6ce1a983],1
  421541:	sub    DWORD PTR [di+0x36],edx
  421545:	stos   DWORD PTR es:[edi],eax
  421546:	in     eax,0x98
  421548:	jno    0x4214cc
  42154a:	mov    al,0xa5
  42154c:	(bad)  
  42154d:	pop    esp
  42154e:	or     eax,0x46ef0a5c
  421553:	setg   BYTE PTR [edx+0x58]
  421557:	retf   0xe131
  42155a:	push   edi
  42155b:	pop    ss
  42155c:	gs int3 
  42155e:	push   ecx
  42155f:	retf   0x8ba4
  421562:	mov    cl,0xb6
  421564:	aam    0xc7
  421566:	shr    BYTE PTR [eax-0x4c],0x4c
  42156a:	push   eax
  42156b:	xlat   BYTE PTR ds:[ebx]
  42156c:	mov    ebx,0xe1c4fe2c
  421571:	(bad)  
  421572:	jo     0x421527
  421574:	test   edx,eax
  421576:	fs xchg ebx,eax
  421578:	xchg   ebx,eax
  421579:	loopne 0x421578
  42157b:	outs   dx,DWORD PTR ds:[esi]
  42157c:	stos   BYTE PTR es:[edi],al
  42157d:	and    bh,BYTE PTR [edi-0x5e49929]
  421583:	adc    BYTE PTR [ebx+ebx*8-0x78772c51],ah
  42158a:	sbb    al,0x16
  42158c:	ds mov edi,0x8e0e0124
  421592:	pop    ebp
  421593:	mov    esi,0x3d5e6709
  421598:	push   ebx
  421599:	pop    esp
  42159a:	push   ebp
  42159b:	test   al,0xe0
  42159d:	xor    al,0xb6
  42159f:	clc    
  4215a0:	aaa    
  4215a1:	(bad)  
  4215a2:	and    BYTE PTR [eax-0x1cecccb8],ah
  4215a8:	lea    esp,[edi-0x53]
  4215ab:	sub    edi,edi
  4215ad:	ins    DWORD PTR es:[edi],dx
  4215ae:	or     DWORD PTR [ebp-0x664f22a0],esp
  4215b4:	adc    BYTE PTR [ecx],cl
  4215b6:	fdivr  DWORD PTR [ecx]
  4215b8:	or     BYTE PTR [edi+0x67abc655],cl
  4215be:	inc    ecx
  4215bf:	dec    esp
  4215c0:	inc    edx
  4215c1:	and    bh,BYTE PTR [ebx+0x5]
  4215c4:	repnz in eax,dx
  4215c6:	mov    cl,0xf5
  4215c8:	cmp    DWORD PTR [eax],0x36
  4215cb:	mov    dh,0xb5
  4215cd:	jbe    0x4215b4
  4215cf:	mov    al,ds:0x40291618
  4215d4:	enter  0x3c2c,0xac
  4215d8:	mov    ?,edx
  4215da:	jno    0x421659
  4215dc:	mov    esi,0xead3b481
  4215e1:	ja     0x421615
  4215e3:	xor    eax,0xcc0b973d
  4215e8:	and    DWORD PTR [edi+0x3f],0xffffffc6
  4215ec:	jmp    0xce4c2c3a
  4215f1:	push   ebp
  4215f2:	mov    dh,0xe3
  4215f4:	dec    eax
  4215f5:	stc    
  4215f6:	in     eax,dx
  4215f7:	sahf   
  4215f8:	clc    
  4215f9:	mov    ecx,0x66992d2b
  4215fe:	pop    esp
  4215ff:	sub    BYTE PTR [esi+0x68d4aa5d],bl
  421605:	scas   eax,DWORD PTR es:[edi]
  421606:	dec    ebp
  421607:	add    ecx,DWORD PTR [eax-0x5e80190c]
  42160d:	das    
  42160e:	(bad)  
  42160f:	js     0x4215fa
  421611:	jns    0x42167a
  421613:	sub    ah,dl
  421615:	out    0x8f,eax
  421617:	pop    edx
  421618:	pop    ebp
  421619:	dec    eax
  42161a:	xor    esp,edi
  42161c:	(bad)  
  42161d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42161e:	loop   0x421671
  421620:	pusha  
  421621:	outs   dx,BYTE PTR ds:[esi]
  421622:	cmp    DWORD PTR [edi+0x63],edx
  421625:	call   0xdee5:0x5be9672b
  42162c:	jno    0x421695
  42162e:	inc    esp
  42162f:	test   al,0x21
  421631:	cld    
  421632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421633:	cdq    
  421634:	mov    eax,0xe6b2b67a
  421639:	inc    esp
  42163a:	push   es
  42163b:	sub    BYTE PTR [eax],cl
  42163d:	fisubr WORD PTR [edx+0x464989dc]
  421643:	push   ebp
  421644:	aaa    
  421645:	jno    0x4215d5
  421647:	xlat   BYTE PTR ds:[ebx]
  421648:	aam    0xad
  42164a:	mov    eax,0xaea10dad
  42164f:	inc    edx
  421650:	fild   WORD PTR [edx+0x73bb72f6]
  421656:	xchg   ecx,eax
  421657:	mov    ch,0x3a
  421659:	mov    DWORD PTR [eax+edi*8-0x5a],edi
  42165d:	out    0x4d,eax
  42165f:	push   edx
  421660:	mov    BYTE PTR [esi-0x66306e94],ah
  421666:	or     ah,al
  421668:	fmulp  st(7),st
  42166a:	adc    dl,bh
  42166c:	add    eax,DWORD PTR [ebp-0x58a5c273]
  421672:	mov    cl,0xea
  421674:	fistp  DWORD PTR [ecx]
  421676:	push   cs
  421677:	hlt    
  421678:	pop    ds
  421679:	repnz imul edx,esp,0xfffffffc
  42167d:	xchg   esi,eax
  42167e:	das    
  42167f:	out    dx,eax
  421680:	pusha  
  421681:	and    DWORD PTR [eax],eax
  421683:	push   edi
  421684:	mov    WORD PTR ss:[ecx+0x2f],gs
  421688:	xchg   edx,eax
  421689:	xchg   edi,eax
  42168a:	inc    esi
  42168b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42168c:	imul   eax,DWORD PTR ds:0x6a7ea4ae,0x686022b1
  421696:	sti    
  421697:	mov    esp,DWORD PTR [eax-0x7c4ebf9d]
  42169d:	mov    cs,WORD PTR ds:0xf53a057
  4216a3:	mov    edx,0x20572283
  4216a8:	mov    eax,ds:0x8555713f
  4216ad:	xchg   ecx,eax
  4216ae:	xchg   ebp,eax
  4216af:	rol    DWORD PTR [edi],1
  4216b1:	jg     0x42169e
  4216b3:	or     BYTE PTR ds:0x3201b18f,al
  4216b9:	mov    esp,0x851a0297
  4216be:	and    edx,edi
  4216c0:	cmc    
  4216c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216c2:	(bad)  
  4216c3:	cli    
  4216c4:	adc    ah,BYTE PTR [eax-0x4477d9f3]
  4216ca:	mov    edi,0x7a72d876
  4216cf:	imul   ebx,DWORD PTR [eax-0x119a7f99],0xfc254564
  4216d9:	dec    edx
  4216da:	mov    cl,0x35
  4216dc:	fnstsw WORD PTR [eax-0x32f40324]
  4216e2:	in     eax,0xd7
  4216e4:	std    
  4216e5:	pop    edi
  4216e6:	pop    edi
  4216e7:	outs   dx,DWORD PTR fs:[esi]
  4216e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216ea:	xchg   ecx,eax
  4216eb:	(bad)  [eax-0x719784c5]
  4216f1:	stos   DWORD PTR es:[edi],eax
  4216f2:	add    BYTE PTR [eax],bl
  4216f4:	adc    ah,BYTE PTR [edi-0x48]
  4216f7:	ror    DWORD PTR [esp+ebx*1+0x122b8831],1
  4216fe:	mov    dl,0x90
  421700:	xor    BYTE PTR [ecx],cl
  421702:	fisubr WORD PTR [edi+0x63d9c7f2]
  421708:	adc    esp,DWORD PTR [edi+0x65]
  42170b:	dec    edi
  42170c:	mov    DWORD PTR [eax+esi*4-0x4e96842e],0xfdcdf90c
  421717:	loope  0x4216d8
  421719:	adc    esp,DWORD PTR [ecx-0x29]
  42171c:	ror    BYTE PTR [esi],0xe0
  42171f:	lock xor al,0xcb
  421722:	fs stos DWORD PTR es:[edi],eax
  421724:	mov    BYTE PTR [eax-0x51112007],bh
  42172a:	clc    
  42172b:	or     edx,DWORD PTR [edi]
  42172d:	jnp    0x4216e5
  42172f:	ss (bad) 
  421731:	mov    ecx,0xb3a11009
  421736:	leave  
  421737:	lds    esp,FWORD PTR [ecx-0x50]
  42173a:	xor    DWORD PTR [ebp+0x5b],ebx
  42173d:	sti    
  42173e:	push   ds
  42173f:	sub    cl,BYTE PTR [eax+0x149e8d1a]
  421745:	ror    esi,cl
  421747:	cmp    DWORD PTR [edi+esi*8-0x4fa228ae],edx
  42174e:	xor    dl,0xbb
  421751:	cmp    eax,esi
  421753:	data16 mov bl,ch
  421756:	fsub   DWORD PTR [esi+0x32ed87e6]
  42175c:	push   ds
  42175d:	mov    al,ds:0xf6ced71b
  421762:	int3   
  421763:	(bad)  fs:[edi]
  421766:	clc    
  421767:	retf   
  421768:	mov    bl,al
  42176a:	rol    BYTE PTR [ecx-0x6d],1
  42176d:	inc    cl
  42176f:	cdq    
  421770:	and    DWORD PTR [esi+0x14],esp
  421773:	mov    DWORD PTR [eax],ebp
  421775:	rcr    DWORD PTR [edi-0x22543e43],1
  42177b:	jne    0x421717
  42177d:	pop    ebx
  42177e:	pop    esp
  42177f:	add    al,0x48
  421781:	dec    esp
  421782:	je     0x421750
  421784:	out    0xbb,eax
  421786:	push   ss
  421787:	retf   
  421788:	pushf  
  421789:	xor    bh,dh
  42178b:	xlat   BYTE PTR ds:[ebx]
  42178c:	adc    DWORD PTR [ebp-0x18],ebx
  42178f:	out    0xbf,eax
  421791:	icebp  
  421792:	mov    cl,0xb9
  421794:	push   ebp
  421795:	(bad)  
  421796:	(bad)  
  421798:	push   0xffffff97
  42179a:	aad    0xd7
  42179c:	out    0x34,al
  42179e:	aas    
  42179f:	sbb    ebx,DWORD PTR [edi-0x63e95a9b]
  4217a5:	retf   0x9e58
  4217a8:	dec    eax
  4217a9:	jmp    0xd79e:0x591cc6d7
  4217b0:	mov    ebp,0x54ae0230
  4217b5:	push   0x6f
  4217b7:	add    al,0x88
  4217b9:	jb     0x4217af
  4217bb:	pop    ecx
  4217bc:	mov    eax,0x9db96e27
  4217c1:	addr16 mov ecx,0xc0dc2b57
  4217c7:	repnz or DWORD PTR [esi-0x4efa444f],esi
  4217ce:	inc    ecx
  4217cf:	bound  ecx,QWORD PTR [edx+eiz*4-0x665529ff]
  4217d6:	xchg   esi,eax
  4217d7:	mov    ecx,ebp
  4217d9:	mov    ecx,DWORD PTR [esi+0x3]
  4217dc:	xor    BYTE PTR gs:[edx+0x7fd4e21b],dh
  4217e3:	xchg   esi,eax
  4217e4:	shr    edi,cl
  4217e6:	addr16 xchg edi,eax
  4217e8:	clc    
  4217e9:	addr16 inc esp
  4217eb:	nop
  4217ec:	call   0xa3cc:0x31ea1c0
  4217f3:	gs pop es
  4217f5:	dec    esp
  4217f6:	lods   al,BYTE PTR ds:[esi]
  4217f7:	mov    ch,0xdb
  4217f9:	popf   
  4217fa:	xor    esp,esi
  4217fc:	fcom   QWORD PTR [edx+0x58698e26]
  421802:	and    al,0x26
  421804:	test   DWORD PTR [eax-0x4dc65477],ebx
  42180a:	and    DWORD PTR [esi+0x59b170c5],esi
  421810:	inc    edx
  421811:	cmp    al,0xb
  421813:	mov    esp,0xd73ba720
  421818:	stos   BYTE PTR es:[edi],al
  421819:	push   ecx
  42181a:	and    DWORD PTR [edi-0x3ad45fb9],edi
  421820:	xchg   DWORD PTR [edi+0x13],ecx
  421823:	dec    ebx
  421824:	cli    
  421825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421826:	(bad)  
  421827:	lock test al,0x10
  42182a:	jl     0x421803
  42182c:	fadd   QWORD PTR [edx-0xa]
  42182f:	aas    
  421830:	cmp    BYTE PTR [edi-0x38c75ea4],0x89
  421837:	iret   
  421838:	push   ss
  421839:	or     ch,BYTE PTR [bx+di]
  42183c:	test   bh,ah
  42183e:	mov    ah,0x27
  421840:	add    esp,DWORD PTR [eax+0x57]
  421843:	jl     0x4217d3
  421845:	mov    bh,0x39
  421847:	xchg   edi,eax
  421848:	sbb    ebx,ebx
  42184a:	mov    ebp,0x68a8878
  42184f:	pop    ss
  421850:	cld    
  421851:	aas    
  421852:	loopne 0x42180c
  421854:	mov    al,0x7b
  421856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421857:	test   BYTE PTR [edi+eiz*1-0x77d3854c],bl
  42185e:	leave  
  42185f:	push   0xffffff88
  421861:	je     0x421803
  421863:	dec    ebp
  421864:	push   0x6fb49fe
  421869:	addr16 mov ecx,0x9a4d0b99
  42186f:	xchg   edx,eax
  421870:	(bad)  
  421871:	shl    BYTE PTR [ecx-0x4b232f1c],1
  421877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421878:	(bad)  
  421879:	repnz push ss
  42187b:	xlat   BYTE PTR ds:[ebx]
  42187c:	shl    edi,0x6e
  42187f:	pop    esi
  421880:	lods   eax,DWORD PTR ds:[esi]
  421881:	lahf   
  421882:	clc    
  421883:	dec    ebx
  421884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421885:	push   ebp
  421886:	xchg   edx,eax
  421887:	jmp    0x421811
  421889:	loop   0x4218e0
  42188b:	pop    eax
  42188c:	jbe    0x421851
  42188e:	xlat   BYTE PTR cs:[ebx]
  421890:	outs   dx,DWORD PTR ds:[esi]
  421891:	or     BYTE PTR [eax-0x7a],0xb3
  421895:	xor    BYTE PTR [ebx],bh
  421897:	clc    
  421898:	loopne 0x4218d5
  42189a:	push   cs
  42189b:	xlat   BYTE PTR ds:[ebx]
  42189c:	mov    ebx,0xf8efd683
  4218a1:	ror    BYTE PTR [edi+edx*8-0x70],0x79
  4218a6:	repz adc bl,BYTE PTR [edi-0x7ed7bbe2]
  4218ad:	sub    eax,0xfc2c3faa
  4218b2:	inc    ecx
  4218b3:	push   es
  4218b4:	jmp    0xfe82:0x46d367db
  4218bb:	push   ss
  4218bc:	adc    eax,0xbaba3aa7
  4218c1:	imul   edx,DWORD PTR [ebp-0x4e62a1c9],0xce9e93ac
  4218cb:	mov    al,ds:0xcf9d6778
  4218d0:	mov    dh,0x9a
  4218d2:	(bad)  
  4218d3:	mov    eax,0xe3c56cd3
  4218d8:	pushf  
  4218d9:	sar    DWORD PTR [edi-0x2fd5b7ac],cl
  4218df:	mov    BYTE PTR [eax-0x7f],cl
  4218e2:	inc    ecx
  4218e3:	sti    
  4218e4:	fbstp  TBYTE PTR [esi+0x932d07e]
  4218ea:	(bad)  
  4218eb:	pop    ss
  4218ec:	fisub  WORD PTR [esi]
  4218ee:	sub    al,0x5b
  4218f0:	mov    dl,dh
  4218f2:	mov    dh,0x16
  4218f4:	jb     0x421901
  4218f6:	mov    al,ds:0x65649af7
  4218fb:	cwde   
  4218fc:	jnp    0x421928
  4218fe:	arpl   WORD PTR [ebx+0x49],di
  421901:	out    0x1f,eax
  421903:	jne    0x4218d2
  421905:	and    DWORD PTR [ecx-0x28c6f993],esi
  42190b:	js     0x421986
  42190d:	and    al,0xb9
  42190f:	xlat   BYTE PTR ds:[ebx]
  421910:	pop    edi
  421911:	adc    ebp,DWORD PTR [eax+0x8eca35]
  421917:	daa    
  421918:	mov    dh,ah
  42191a:	jne    0x4218ce
  42191c:	stc    
  42191d:	xchg   edx,eax
  42191e:	jno    0x4218c5
  421920:	mov    ds:0xe5c89067,eax
  421925:	loopne 0x4218e7
  421927:	repz int3 
  421929:	imul   ecx,DWORD PTR [ebx-0x2c968750],0x11
  421930:	fs inc edi
  421932:	loopne 0x421964
  421934:	pop    ebx
  421935:	adc    al,0xb7
  421937:	xlat   BYTE PTR ds:[ebx]
  421938:	(bad)  
  421939:	lods   eax,DWORD PTR ds:[esi]
  42193a:	jno    0x421971
  42193c:	xchg   ebp,eax
  42193d:	and    eax,0xcf881ec8
  421942:	and    ah,BYTE PTR [edi-0x1103db47]
  421948:	stos   BYTE PTR es:[edi],al
  421949:	pusha  
  42194a:	pop    ebp
  42194b:	fs retf 0xf80
  42194f:	pop    ss
  421950:	cmc    
  421951:	scas   eax,DWORD PTR es:[edi]
  421952:	enter  0x88c7,0x96
  421956:	mov    al,ds:0xb0367c20
  42195b:	pop    esp
  42195c:	sub    al,0x66
  42195e:	sahf   
  42195f:	ja     0x421933
  421961:	jecxz  0x421995
  421963:	in     eax,0x69
  421965:	lods   al,BYTE PTR ds:[esi]
  421966:	add    edx,eax
  421968:	jbe    0x4219c9
  42196a:	iret   
  42196b:	out    0x81,eax
  42196d:	pop    ss
  42196e:	dec    ebx
  42196f:	fbstp  TBYTE PTR ds:0xddbc21e0
  421975:	sar    edi,cl
  421977:	fldpi  
  421979:	push   esi
  42197a:	imul   ebp,esp,0x21
  42197d:	push   ss
  42197e:	or     BYTE PTR [edi],dl
  421980:	lock lock jecxz 0x42192d
  421984:	mov    BYTE PTR [edx],bl
  421986:	xor    BYTE PTR [edx-0xfa65ca0],0x87
  42198d:	addr16 mov ds:0x73bb,eax
  421991:	outs   dx,BYTE PTR ds:[esi]
  421992:	pop    eax
  421993:	popf   
  421994:	push   eax
  421995:	rol    dl,1
  421997:	(bad)  [ecx-0x55bafbac]
  42199d:	inc    edi
  42199e:	jecxz  0x421961
  4219a0:	lock js 0x4219ab
  4219a3:	(bad)  
  4219a4:	sti    
  4219a5:	hlt    
  4219a6:	gs adc al,0x7
  4219a9:	cmp    al,0xf8
  4219ab:	cmp    edi,DWORD PTR [ecx-0x90f4eba]
  4219b1:	cmc    
  4219b2:	popa   
  4219b3:	push   0x6c
  4219b5:	jnp    0x4219b4
  4219b7:	xlat   BYTE PTR ds:[ebx]
  4219b8:	hlt    
  4219b9:	pop    ss
  4219ba:	stc    
  4219bb:	inc    edi
  4219bc:	js     0x42198b
  4219be:	neg    BYTE PTR ds:0xa0e47d88
  4219c4:	and    eax,0xe462d0a9
  4219c9:	mov    WORD PTR [edi-0x73],di
  4219cd:	loope  0x4219fe
  4219cf:	lock mov eax,0x88946faf
  4219d5:	mov    edi,0xc4660c62
  4219da:	lea    ebp,[edx+0x9]
  4219dd:	pusha  
  4219de:	push   esp
  4219df:	jb     0x4219af
  4219e1:	pop    esp
  4219e2:	into   
  4219e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219e4:	pop    ecx
  4219e5:	xor    al,0x1f
  4219e7:	mov    ecx,DWORD PTR [eax+0x433ff9d1]
  4219ed:	test   edx,ebx
  4219ef:	sahf   
  4219f0:	mov    edx,0xfcd73214
  4219f5:	into   
  4219f6:	sub    esi,DWORD PTR [ebp-0x7bb9294b]
  4219fc:	mov    BYTE PTR [ebp+0x5e],bl
  4219ff:	dec    ebx
  421a00:	inc    ebp
  421a01:	cmp    eax,0x496d098a
  421a06:	hlt    
  421a07:	repz mov edi,0xf3514a66
  421a0d:	xchg   edx,eax
  421a0e:	push   es
  421a0f:	das    
  421a10:	stc    
  421a11:	mov    esi,0xc797f6bf
  421a16:	(bad)  
  421a17:	mov    bh,0xee
  421a19:	pop    esp
  421a1a:	mov    edi,eax
  421a1c:	or     eax,0x67cf6f7c
  421a21:	retf   
  421a22:	sbb    DWORD PTR [ecx],esi
  421a24:	mov    dh,0xd0
  421a26:	add    DWORD PTR [ebx],ebp
  421a28:	mov    DWORD PTR ds:0x477ca18c,eax
  421a2e:	cs es pusha 
  421a31:	jmp    0x421a35
  421a33:	leave  
  421a34:	es fucompp 
  421a37:	pop    ss
  421a38:	das    
  421a39:	inc    edi
  421a3a:	adc    eax,0xb18c5369
  421a3f:	out    dx,eax
  421a40:	xchg   DWORD PTR [eax+0x59],esp
  421a43:	or     eax,0xd783bafd
  421a48:	jbe    0x421a28
  421a4a:	shl    DWORD PTR [ebp+0x58],1
  421a4d:	jge    0x421a2c
  421a4f:	sbb    eax,0x8dd7ff88
  421a54:	push   edi
  421a55:	(bad)  
  421a57:	mov    ds:0x36ec674d,eax
  421a5c:	lods   al,BYTE PTR ds:[esi]
  421a5d:	xchg   ebp,eax
  421a5e:	loop   0x421a83
  421a60:	rcl    bh,cl
  421a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a63:	test   DWORD PTR [edi-0x58],eax
  421a66:	fidivr WORD PTR es:[ebx]
  421a69:	(bad)  
  421a6a:	hlt    
  421a6b:	push   edi
  421a6c:	adc    dh,BYTE PTR [eax-0x3b]
  421a6f:	faddp  st(4),st
  421a71:	pusha  
  421a72:	xchg   DWORD PTR [edi+0x4786ccc0],edx
  421a78:	sub    al,0x50
  421a7b:	into   
  421a7c:	test   DWORD PTR [ebx],ecx
  421a7e:	daa    
  421a7f:	int3   
  421a80:	pusha  
  421a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a82:	sti    
  421a83:	pop    edi
  421a84:	ror    edx,cl
  421a86:	push   0x8c0afbd7
  421a8b:	lods   eax,DWORD PTR ds:[esi]
  421a8c:	jge    0x421a24
  421a8e:	fisub  DWORD PTR [ebp-0x14d70878]
  421a94:	jg     0x421a8c
  421a96:	scas   eax,DWORD PTR es:[edi]
  421a97:	pop    esi
  421a98:	sbb    DWORD PTR [ebx-0x51492104],ecx
  421a9e:	test   eax,0xdaa688e3
  421aa3:	mov    DWORD PTR [ebp-0x1e644f5a],edx
  421aa9:	inc    ebp
  421aaa:	scas   al,BYTE PTR es:[edi]
  421aab:	push   ebx
  421aac:	bound  edi,QWORD PTR ds:[eax-0x2b]
  421ab0:	pop    esp
  421ab1:	xor    al,dl
  421ab3:	xlat   BYTE PTR ds:[ebx]
  421ab4:	pop    ecx
  421ab5:	cmp    DWORD PTR ds:0x7957bff6,ebx
  421abb:	jo     0x421a45
  421abd:	js     0x421b19
  421abf:	mov    ecx,0xf68ebf1
  421ac4:	inc    eax
  421ac5:	data16 (bad) [edi-0x2d]
  421ac9:	cmp    bh,BYTE PTR [edx+0x468b1359]
  421acf:	cs mov dh,bh
  421ad2:	addr16 xchg ecx,eax
  421ad4:	mov    bl,0x89
  421ad6:	pop    ss
  421ad7:	or     edx,DWORD PTR [eax]
  421ad9:	addr16 adc esp,0x23
  421add:	jae    0x421af4
  421adf:	xor    eax,0xa5b187d5
  421ae4:	iret   
  421ae5:	jo     0x421b0d
  421ae7:	sbb    DWORD PTR [edi-0x2c28e365],ebp
  421aed:	mov    DWORD PTR [eax+0x65d74b4],0x1094886c
  421af7:	or     DWORD PTR [esi-0x7b],eax
  421afa:	cmp    al,BYTE PTR [eax+0x59]
  421afd:	addr16 pop esi
  421aff:	mov    esp,0x6c0d5a7
  421b04:	sar    BYTE PTR [edi+0x45],cl
  421b07:	leave  
  421b08:	mov    BYTE PTR [ecx-0x3a37b65d],ah
  421b0e:	lock retf 0x65cb
  421b12:	mov    bh,BYTE PTR [eax+0x73943263]
  421b18:	enter  0xa1b1,0x1d
  421b1c:	test   bl,dl
  421b1e:	loope  0x421ad0
  421b20:	adc    cl,al
  421b22:	xor    DWORD PTR [ebx-0x2f4d9927],esp
  421b28:	jno    0x421b32
  421b2a:	push   cs
  421b2b:	cmp    al,0xd7
  421b2e:	repz inc edi
  421b30:	(bad)  
  421b31:	sub    cl,BYTE PTR [ebx-0x4e6066be]
  421b37:	pushf  
  421b38:	pop    edx
  421b39:	mov    esi,esp
  421b3b:	popa   
  421b3c:	bound  edi,QWORD PTR [esp+eiz*4-0x29]
  421b40:	ret    0x6214
  421b43:	or     dh,BYTE PTR [eax-0x64795e13]
  421b49:	sbb    edi,DWORD PTR [ebp-0x4ef3a5c4]
  421b4f:	dec    eax
  421b50:	inc    eax
  421b51:	(bad)  
  421b52:	out    dx,al
  421b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b54:	nop
  421b55:	les    ebx,FWORD PTR fs:[edi+eax*8]
  421b59:	mov    DWORD PTR [esi],edi
  421b5b:	pop    ecx
  421b5c:	sbb    eax,0x40863ab8
  421b61:	sti    
  421b62:	push   cs
  421b63:	fadd   DWORD PTR [ecx+0x477cba07]
  421b69:	push   eax
  421b6a:	xchg   ecx,eax
  421b6b:	push   esp
  421b6c:	dec    edx
  421b6d:	ins    DWORD PTR es:[edi],dx
  421b6e:	ss addr16 jmp 0x7516:0x29d2de67
  421b77:	jno    0x421b11
  421b79:	push   cs
  421b7a:	test   eax,0x67841a7f
  421b7f:	adc    al,0xc6
  421b81:	addr16 in eax,0x18
  421b84:	icebp  
  421b85:	and    DWORD PTR ds:0x41db2005,esp
  421b8b:	(bad)  
  421b8c:	mov    BYTE PTR [ebx],dl
  421b8e:	fsubp  st(1),st
  421b90:	test   al,0x23
  421b92:	loope  0x421b2c
  421b94:	mov    fs,WORD PTR [edx+eiz*4+0x5a]
  421b98:	and    al,0xb5
  421b9a:	sub    edi,DWORD PTR [eax+0x18]
  421b9d:	icebp  
  421b9e:	lock jo 0x421b22
  421ba1:	out    dx,eax
  421ba2:	mov    DWORD PTR [eax+edi*4-0x5355ae0a],ebx
  421ba9:	ret    0xd75f
  421bac:	out    0x61,eax
  421bae:	sbb    ch,0xa3
  421bb1:	lds    ecx,FWORD PTR [eax]
  421bb3:	mov    cl,BYTE PTR [eax+0x62559f4d]
  421bb9:	adc    edx,DWORD PTR [eax]
  421bbb:	cmp    DWORD PTR [esi],0x6888e063
  421bc1:	leave  
  421bc2:	cs pop ss
  421bc4:	inc    eax
  421bc5:	rcr    dl,cl
  421bc7:	or     al,0x88
  421bc9:	or     bh,BYTE PTR [eax]
  421bcb:	data16 adc BYTE PTR [edi+0x641d1fbb],0x80
  421bd3:	je     0x421bfc
  421bd5:	loop   0x421b5a
  421bd7:	push   edi
  421bd8:	sub    BYTE PTR [edi-0x6377a71a],ah
  421bde:	xchg   DWORD PTR [edi-0x47],esp
  421be1:	or     BYTE PTR [esi+0x3997631],bl
  421be7:	xlat   BYTE PTR ds:[ebx]
  421be8:	and    al,0x17
  421bea:	sbb    ebp,DWORD PTR [eax+0x29]
  421bed:	pop    esi
  421bee:	sub    edi,ebx
  421bf0:	test   DWORD PTR [ebx+0x3e42832f],esi
  421bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bf7:	push   edi
  421bf8:	add    al,BYTE PTR [esi-0x10]
  421bfb:	fsubr  QWORD PTR [edx+0x36d318f]
  421c01:	outs   dx,DWORD PTR ds:[esi]
  421c02:	push   ecx
  421c03:	pop    ss
  421c04:	test   BYTE PTR [eax],cl
  421c06:	mov    ch,BYTE PTR [ebp+0x39dcea88]
  421c0c:	aas    
  421c0d:	sti    
  421c0e:	fcom   DWORD PTR [edx+esi*4+0x67]
  421c12:	jecxz  0x421c0a
  421c14:	shl    BYTE PTR [ebp-0x42],1
  421c17:	sbb    cl,BYTE PTR [edi]
  421c19:	dec    edi
  421c1a:	mov    cl,0xa3
  421c1c:	loope  0x421ba9
  421c1e:	push   ss
  421c1f:	xchg   DWORD PTR [edx],esp
  421c21:	pop    eax
  421c22:	xchg   edi,edx
  421c24:	les    eax,FWORD PTR [esi-0x6e]
  421c27:	test   BYTE PTR [edx-0xf],dh
  421c2a:	leave  
  421c2b:	jg     0x421c1f
  421c2d:	mov    ebp,0x42659db1
  421c32:	cwde   
  421c33:	lahf   
  421c34:	add    eax,0x15a085f2
  421c39:	xchg   eax,eax
  421c3b:	jmp    0x421bd3
  421c3d:	out    dx,eax
  421c3e:	inc    edx
  421c3f:	call   0x7380af33
  421c44:	pop    eax
  421c45:	pop    ebx
  421c46:	repnz repz clc 
  421c49:	and    ah,BYTE PTR [ecx]
  421c4b:	pop    esp
  421c4c:	push   0x540fb1da
  421c51:	sbb    ebx,DWORD PTR [eax+edi*8]
  421c54:	adc    DWORD PTR [ecx+ecx*1+0x356affd7],eax
  421c5b:	mov    ch,0x90
  421c5d:	(bad)  
  421c5e:	jge    0x421c8a
  421c60:	std    
  421c61:	fidiv  DWORD PTR [edx-0x17aa0e0b]
  421c67:	in     eax,dx
  421c68:	call   0x9b26:0xbc4f85f4
  421c6f:	sar    DWORD PTR [ebp+0x5c],cl
  421c72:	lds    esp,FWORD PTR [edx-0x7]
  421c75:	out    0xf5,al
  421c77:	retf   0x57b0
  421c7a:	aaa    
  421c7b:	jnp    0x421c7c
  421c7d:	shl    BYTE PTR [edx-0x3ea5d6fb],1
  421c83:	imul   esp,DWORD PTR [esi-0x51],0x893fd5da
  421c8a:	or     edx,edi
  421c8c:	inc    esp
  421c8d:	shr    DWORD PTR [ebp+eiz*4-0x5c498f2d],cl
  421c94:	mov    BYTE PTR [ebx+0x415b2f80],bl
  421c9a:	(bad)  
  421c9b:	jmp    0x8401:0x30026718
  421ca2:	push   es
  421ca3:	mov    al,ds:0x46b15c21
  421ca8:	je     0x421ca6
  421caa:	int    0xc9
  421cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cad:	pop    ss
  421cae:	test   eax,0xf9f5e0d7
  421cb3:	adc    BYTE PTR [edx+0x65],bl
  421cb6:	cmp    eax,esi
  421cb8:	mov    BYTE PTR [ebx+ecx*1],dl
  421cbb:	pop    ebx
  421cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cbd:	scas   al,BYTE PTR es:[edi]
  421cbe:	mov    ebx,0xba896a55
  421cc3:	xlat   BYTE PTR ds:[ebx]
  421cc4:	scas   al,BYTE PTR es:[edi]
  421cc5:	cmp    cl,0xf
  421cc8:	aam    0x90
  421cca:	cmp    BYTE PTR [ebp+0x27b80586],0xc9
  421cd1:	retf   0x37b9
  421cd4:	imul   ecx,DWORD PTR [ebx-0x27],0x781ca9d0
  421cdb:	cmp    al,0x7b
  421cdd:	not    edi
  421cdf:	mov    ebx,0x2cb61307
  421ce4:	push   esi
  421ce5:	sbb    BYTE PTR ds:0x71880384,0x61
  421cec:	adc    ecx,DWORD PTR [ebx-0x6c506c2]
  421cf2:	aas    
  421cf3:	xlat   BYTE PTR ds:[ebx]
  421cf4:	jp     0x421c7a
  421cf6:	stos   DWORD PTR es:[edi],eax
  421cf7:	das    
  421cf8:	sub    dl,BYTE PTR [edx]
  421cfa:	mov    cl,0xa8
  421cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cfd:	sub    bl,bh
  421cff:	add    BYTE PTR [ebx+0xfd72502],0x73
  421d06:	jno    0x421d4a
  421d08:	xchg   ebp,eax
  421d09:	mov    ebx,0x617496d9
  421d0e:	xchg   ebp,eax
  421d0f:	out    0xb6,eax
  421d11:	jnp    0x421cc4
  421d13:	fadd   st(4),st
  421d15:	xchg   ebx,eax
  421d16:	enter  0xb218,0x67
  421d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d1b:	into   
  421d1c:	sub    eax,DWORD PTR [edx+0x36]
  421d1f:	xor    esi,edi
  421d21:	pop    es
  421d22:	scas   eax,DWORD PTR es:[edi]
  421d23:	shl    DWORD PTR [edi+0x10],cl
  421d26:	mov    cl,0x5b
  421d28:	adc    bl,BYTE PTR [edx-0x24]
  421d2b:	fimul  DWORD PTR [eax]
  421d2d:	addr16 mul ebp
  421d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d31:	imul   eax
  421d33:	jg     0x421d6c
  421d35:	mov    esi,0x639acbb1
  421d3a:	paddsb mm4,QWORD PTR [edi-0x47]
  421d3e:	fwait
  421d3f:	das    
  421d40:	mov    ch,0x67
  421d42:	ror    DWORD PTR [eax],cl
  421d44:	in     eax,0x38
  421d46:	jmp    0xb22db9fd
  421d4b:	outs   dx,DWORD PTR ds:[esi]
  421d4c:	bound  edx,QWORD PTR [ebx+0x4b]
  421d4f:	mov    ebp,0xd744bba6
  421d54:	adc    al,0x69
  421d56:	outs   dx,DWORD PTR ds:[esi]
  421d57:	fbstp  TBYTE PTR [esp+ebx*2-0x15]
  421d5b:	dec    esi
  421d5c:	mov    BYTE PTR [eax],cl
  421d5e:	pushf  
  421d5f:	dec    edi
  421d60:	jl     0x421db4
  421d62:	push   ebx
  421d63:	jmp    0x4cb5:0x1b086716
  421d6a:	sbb    ebx,DWORD PTR [ecx]
  421d6c:	xor    bl,BYTE PTR [esi]
  421d6e:	scas   eax,DWORD PTR es:[edi]
  421d6f:	add    al,0xb1
  421d71:	mov    DWORD PTR [eax+0x4bd6dae7],esi
  421d77:	gs xor bl,0x1d
  421d7b:	rol    BYTE PTR [edx-0x45],cl
  421d7e:	js     0x421d56
  421d80:	enter  0x5e67,0xc7
  421d84:	mov    esi,0xbaae282e
  421d89:	xlat   BYTE PTR ds:[ebx]
  421d8a:	(bad)  
  421d8b:	push   esp
  421d8c:	jge    0x421d9a
  421d8e:	push   cs
  421d8f:	add    al,0x92
  421d91:	sahf   
  421d92:	mov    dh,0xb8
  421d94:	and    BYTE PTR [edx],0x1e
  421d97:	(bad)  
  421d98:	enter  0xc9a9,0x27
  421d9c:	dec    ebx
  421d9d:	fild   QWORD PTR [ecx-0x59]
  421da0:	pop    esp
  421da1:	stc    
  421da2:	mov    ds:0xb602c985,eax
  421da7:	test   esi,ebp
  421da9:	lods   eax,DWORD PTR ds:[esi]
  421daa:	and    DWORD PTR [esi-0x80],edi
  421dad:	adc    eax,0xb3a3d79d
  421db2:	push   edi
  421db3:	dec    ecx
  421db4:	and    bh,BYTE PTR [ebx+edx*1+0x37338ae5]
  421dbb:	or     eax,0xbcf118cb
  421dc0:	mov    dl,0xd2
  421dc2:	push   cs
  421dc3:	shl    esi,cl
  421dc5:	addr16 adc eax,0xebb7b88e
  421dcb:	sahf   
  421dcc:	ins    BYTE PTR es:[edi],dx
  421dcd:	imul   eax,DWORD PTR [ebx+0x27],0xffffff8a
  421dd1:	mov    ah,BYTE PTR [edx]
  421dd3:	clc    
  421dd4:	and    DWORD PTR [edi],esp
  421dd6:	add    BYTE PTR [edx],ch
  421dd8:	sbb    bl,ah
  421dda:	fcmovbe st,st(7)
  421ddc:	pop    edx
  421ddd:	pop    ebx
  421dde:	fsubr  st,st(7)
  421de0:	shl    DWORD PTR [ebp+0x608871af],0x28
  421de7:	sti    
  421de8:	bound  ecx,QWORD PTR [ebp+0x698f7c53]
  421dee:	adc    eax,0x6301fec5
  421df3:	xlat   BYTE PTR ds:[ebx]
  421df4:	test   BYTE PTR ds:0x80348509,bh
  421dfa:	mov    dl,0x7b
  421dfc:	jno    0x421ddf
  421dfe:	xor    ebp,DWORD PTR [edx+0x4c]
  421e01:	xchg   edi,eax
  421e02:	mov    al,0xfc
  421e04:	jl     0x421e6d
  421e06:	pop    es
  421e07:	pop    edi
  421e08:	jmp    0x421e42
  421e0a:	and    ah,dl
  421e0c:	pop    ecx
  421e0d:	arpl   WORD PTR [ecx+0x1425b227],si
  421e13:	add    ebp,edi
  421e15:	mov    dh,0x74
  421e17:	xlat   BYTE PTR ds:[ebx]
  421e18:	cli    
  421e19:	push   ebx
  421e1a:	jg     0x421e0e
  421e1c:	mov    ds:0x7246459f,al
  421e21:	jnp    0x421ddb
  421e23:	cmp    BYTE PTR [edi],bl
  421e25:	xor    DWORD PTR [esi-0x3076d32b],esp
  421e2b:	xchg   edi,eax
  421e2c:	dec    eax
  421e2d:	adc    al,0xc3
  421e2f:	xlat   BYTE PTR ds:[ebx]
  421e30:	add    BYTE PTR [ebx+0x24],dl
  421e33:	xor    al,0x69
  421e35:	out    0xf0,eax
  421e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e38:	xchg   DWORD PTR [ecx+0x27],esi
  421e3b:	dec    eax
  421e3c:	sub    eax,0xb7554733
  421e41:	jns    0x421e9c
  421e43:	mov    ch,0xf
  421e45:	outs   dx,BYTE PTR ds:[esi]
  421e46:	mov    esp,0x3227a79a
  421e4b:	pop    ebp
  421e4c:	xor    eax,0x97a609aa
  421e51:	or     dh,BYTE PTR [ecx+0x68ff1133]
  421e57:	fldcw  WORD PTR [ebx-0x492828f2]
  421e5d:	retf   0xe6cd
  421e60:	int    0x34
  421e62:	mov    eax,0xb52d9c3b
  421e67:	cmc    
  421e68:	mov    BYTE PTR [ecx+0x6c0fb3eb],al
  421e6e:	or     dl,bh
  421e70:	dec    esi
  421e71:	pop    esp
  421e72:	scas   al,BYTE PTR es:[edi]
  421e73:	or     BYTE PTR [edx],ah
  421e75:	push   cs
  421e76:	sbb    DWORD PTR [edx-0x2ebafe78],0xbc6d637f
  421e80:	pusha  
  421e81:	addr16 jmp 0xff62:0xcb4b8312
  421e89:	pop    ecx
  421e8a:	mov    cl,0xa4
  421e8c:	es jg  0x421ea0
  421e8f:	(bad)  
  421e90:	adc    al,0xf5
  421e92:	std    
  421e93:	enter  0x685f,0x42
  421e97:	push   esi
  421e98:	mov    edi,0xdee48cd8
  421e9d:	fwait
  421e9e:	mov    edx,0x2d4d88ac
  421ea3:	mov    dl,0x67
  421ea5:	shl    BYTE PTR ds:[eax],1
  421ea8:	int3   
  421ea9:	and    ax,0x6c75
  421ead:	xor    eax,0x9613c30b
  421eb2:	loop   0x421eef
  421eb4:	and    eax,0xd35bb19d
  421eb9:	es mov al,0xeb
  421ebc:	cld    
  421ebd:	cmp    eax,0xfd5dd71d
  421ec2:	das    
  421ec3:	inc    edx
  421ec4:	push   ebx
  421ec5:	and    ebx,esp
  421ec7:	xchg   DWORD PTR [bp+di+0x1555],esp
  421ecc:	push   cs
  421ecd:	inc    esi
  421ece:	stos   BYTE PTR es:[edi],al
  421ecf:	(bad)  
  421ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ed1:	adc    cl,bl
  421ed3:	into   
  421ed4:	mov    BYTE PTR [esi],ch
  421ed6:	pop    ebx
  421ed7:	std    
  421ed8:	xchg   edx,eax
  421ed9:	test   ah,0x38
  421edc:	cmp    DWORD PTR [edi+0x7016756c],0x52f46b51
  421ee6:	pop    esp
  421ee7:	rol    dh,1
  421ee9:	and    BYTE PTR [ebp+0x61273e7],bl
  421eef:	xlat   BYTE PTR ds:[ebx]
  421ef0:	push   es
  421ef1:	data16 arpl ax,sp
  421ef4:	ret    0xcf6a
  421ef7:	out    0x72,al
  421ef9:	inc    esp
  421efa:	mov    esi,0xc0aa5e59
  421eff:	pop    ss
  421f00:	int    0xa5
  421f02:	(bad)  
  421f03:	sbb    eax,0x9d5a6792
  421f08:	jae    0x421ee8
  421f0a:	push   0x888a700b
  421f0f:	int    0xa6
  421f11:	mul    BYTE PTR [bx-0x62ea]
  421f16:	shl    BYTE PTR [eax],0x8b
  421f19:	jne    0x421f59
  421f1b:	lods   al,BYTE PTR ds:[esi]
  421f1c:	ins    DWORD PTR es:[edi],dx
  421f1d:	jnp    0x421f97
  421f1f:	push   edi
  421f20:	fiadd  DWORD PTR [esi]
  421f22:	xor    cl,BYTE PTR ds:0x92b12786
  421f28:	cdq    
  421f29:	pop    ss
  421f2a:	int    0xf4
  421f2c:	mov    dl,0x8e
  421f2e:	arpl   di,dx
  421f30:	jp     0x421eb9
  421f32:	sti    
  421f33:	jmp    0xfcf3:0xb8bb6a11
  421f3a:	mov    cl,0xf1
  421f3c:	clc    
  421f3d:	gs nop
  421f3f:	shl    BYTE PTR ds:0x2537657d,1
  421f45:	gs pop ebx
  421f47:	retf   0xe91
  421f4a:	adc    BYTE PTR [edi],ch
  421f4c:	call   0x891623c6
  421f51:	das    
  421f52:	pusha  
  421f53:	jo     0x421fd2
  421f55:	jmp    FWORD PTR [ebx+0x22673ae8]
  421f5b:	mov    bh,0xb8
  421f5d:	daa    
  421f5e:	adc    DWORD PTR [ebp-0x465142f8],eax
  421f64:	xchg   ecx,eax
  421f65:	test   BYTE PTR [ecx-0x28fabc4d],dh
  421f6b:	bound  ebp,QWORD PTR [ebx+0x67]
  421f6e:	add    DWORD PTR [ebx],0xffffffe0
  421f71:	or     al,0x61
  421f73:	mov    esp,gs
  421f75:	retf   
  421f76:	mov    cl,0x8
  421f78:	sahf   
  421f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f7a:	pop    edx
  421f7b:	into   
  421f7c:	xchg   ebx,eax
  421f7d:	cs push ebx
  421f7f:	xlat   BYTE PTR ds:[ebx]
  421f80:	aaa    
  421f81:	add    BYTE PTR [edi+0x2],ch
  421f84:	das    
  421f85:	sbb    BYTE PTR [edi+0x61f088d9],dh
  421f8b:	sub    al,0x22
  421f8d:	dec    ebx
  421f8e:	lea    edx,[eax+0x8]
  421f91:	addr16 dec ebx
  421f93:	in     al,dx
  421f94:	xchg   esp,eax
  421f95:	cmp    BYTE PTR [ebx-0x31],dh
  421f98:	jl     0x421fd3
  421f9a:	mov    cl,0xca
  421f9c:	clc    
  421f9d:	ret    
  421f9e:	les    esp,FWORD PTR [ebp-0x70]
  421fa1:	dec    ecx
  421fa2:	ins    BYTE PTR es:[edi],dx
  421fa3:	daa    
  421fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fa5:	addr16 xchg ebp,eax
  421fa7:	in     al,0x59
  421fa9:	in     al,0x31
  421fab:	adc    BYTE PTR [ecx-0x69764e83],cl
  421fb1:	iret   
  421fb2:	inc    ebp
  421fb3:	sbb    eax,DWORD PTR [ebx-0x432bad54]
  421fb9:	lock das 
  421fbb:	stos   BYTE PTR es:[edi],al
  421fbc:	icebp  
  421fbd:	push   cs
  421fbe:	popa   
  421fbf:	je     0x421ff5
  421fc1:	imul   ebp,DWORD PTR [ebp+0x31b6be50],0xcf3a7af4
  421fcb:	push   ss
  421fcc:	inc    eax
  421fcd:	imul   ecx,DWORD PTR [edx+0x2e],0xc3bf15fd
  421fd4:	or     BYTE PTR [ebp-0x764d2442],ch
  421fda:	mov    esi,edx
  421fdc:	mov    edi,0xa4f9b467
  421fe1:	adc    DWORD PTR [esi-0xe],eax
  421fe4:	mov    esp,DWORD PTR [edi-0x6a]
  421fe7:	mov    ah,0x10
  421fe9:	xchg   ecx,eax
  421fea:	aad    0x57
  421fec:	mov    ebx,?
  421fee:	mov    cl,0xc9
  421ff0:	push   es
  421ff1:	lea    ecx,[edi]
  421ff3:	mov    eax,0xd91da54d
  421ff8:	stos   DWORD PTR es:[edi],eax
  421ff9:	rcr    ecx,1
  421ffb:	adc    edi,ebx
  421ffd:	daa    
  421ffe:	sbb    BYTE PTR [edi],ah
  422000:	(bad)  
  422001:	jl     0x421f8e
  422003:	xor    eax,0x12a03e83
  422008:	add    DWORD PTR [ecx],ecx
  42200a:	xor    DWORD PTR [edi-0x80],eax
  42200d:	outs   dx,BYTE PTR ds:[esi]
  42200e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42200f:	(bad)  
  422010:	jbe    0x421ffe
  422012:	aaa    
  422013:	jne    0x422080
  422015:	(bad)  
  422016:	(bad)  
  422017:	sub    edi,DWORD PTR [esi]
  422019:	mov    ecx,0xf81caab1
  42201e:	inc    edx
  42201f:	shl    ebx,cl
  422021:	shl    BYTE PTR [esi],1
  422023:	xlat   BYTE PTR ds:[ebx]
  422024:	ror    esi,1
  422026:	jle    0x422066
  422028:	dec    esi
  422029:	add    DWORD PTR [eax+0x29],esp
  42202c:	test   ebx,edx
  42202e:	sub    esp,ebp
  422030:	jmp    0xd2de:0xd618fdcd
  422037:	xchg   edi,eax
  422038:	jae    0x422057
  42203a:	les    ebp,FWORD PTR [eax+eiz*8-0x6d6a6e99]
  422041:	and    DWORD PTR [esi],esp
  422043:	dec    ebp
  422044:	mov    eax,ebx
  422046:	and    DWORD PTR [esi-0x24bd7d78],esi
  42204c:	add    al,0x13
  42204e:	arpl   WORD PTR [eax],bp
  422050:	mov    al,ds:0x9ed7f989
  422055:	cs aas 
  422057:	imul   ecx,DWORD PTR fs:0x9088293d,0x3738998a
  422062:	mov    esp,0x1a2f6a24
  422067:	cwde   
  422068:	mov    BYTE PTR [edi+0x5e],cl
  42206b:	int    0xff
  42206d:	inc    ebx
  42206e:	repz dec ebp
  422070:	mov    dh,bl
  422072:	add    eax,DWORD PTR [eax]
  422074:	cli    
  422075:	cs scas al,BYTE PTR es:[edi]
  422077:	lea    edi,[eax-0x582809e7]
  42207d:	imul   DWORD PTR [edx]
  42207f:	fild   WORD PTR [ebp+ecx*8-0x63756a76]
  422086:	dec    ebp
  422087:	jnp    0x42207f
  422089:	(bad)  
  42208a:	imul   ebp
  42208c:	sti    
  42208d:	xchg   esp,eax
  42208e:	xadd   esi,esp
  422091:	push   ss
  422092:	push   es
  422093:	xlat   BYTE PTR ds:[ebx]
  422094:	rol    esi,1
  422096:	jns    0x422093
  422098:	seta   BYTE PTR [ecx+0x6da255c2]
  42209f:	push   edi
  4220a0:	xchg   ecx,eax
  4220a1:	neg    DWORD PTR [esi+0x488ee3d4]
  4220a7:	push   ebx
  4220a8:	jge    0x42210a
  4220aa:	dec    ecx
  4220ab:	xchg   ecx,eax
  4220ac:	and    DWORD PTR [ecx+0x2e097bb1],edx
  4220b2:	xchg   edi,eax
  4220b4:	cmp    eax,DWORD PTR [ecx]
  4220b6:	push   ecx
  4220b7:	xor    eax,0x96b64fe
  4220bc:	dec    eax
  4220bd:	stc    
  4220be:	sar    BYTE PTR [ebx-0x57f411db],0xe8
  4220c5:	js     0x4220fb
  4220c7:	mov    dh,0x99
  4220c9:	mov    eax,ds:0x34483cb0
  4220ce:	sbb    al,0xf6
  4220d0:	scas   al,BYTE PTR es:[edi]
  4220d1:	pop    ecx
  4220d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220d3:	xlat   BYTE PTR ds:[ebx]
  4220d4:	pop    es
  4220d5:	push   0xffffff9a
  4220d7:	ja     0x42205c
  4220d9:	xchg   DWORD PTR [edi],ecx
  4220db:	pushf  
  4220dc:	mov    bh,ch
  4220de:	in     al,dx
  4220df:	lahf   
  4220e0:	cmp    DWORD PTR [ecx+0x72],edi
  4220e3:	cmp    ebx,ecx
  4220e5:	addr16 dec ebx
  4220e7:	sbb    DWORD PTR [ecx],esi
  4220e9:	and    BYTE PTR [esi],0x89
  4220ec:	int3   
  4220ed:	pop    ebx
  4220ee:	mov    al,0x62
  4220f0:	xchg   edx,eax
  4220f1:	fwait
  4220f2:	ret    
  4220f3:	in     al,dx
  4220f4:	test   al,0x99
  4220f6:	jbe    0x422117
  4220f8:	mov    al,0x10
  4220fa:	inc    esp
  4220fb:	scas   al,BYTE PTR es:[edi]
  4220fc:	add    al,0x67
  4220fe:	das    
  4220ff:	ror    BYTE PTR [edi+0x674e0f82],cl
  422105:	mov    dl,al
  422107:	jae    0x422109
  422109:	adc    dh,BYTE PTR [edx-0x560da6ab]
  42210f:	sbb    BYTE PTR [edx-0x71],al
  422112:	cmp    esi,ebx
  422114:	cmp    BYTE PTR [edx],bl
  422116:	int3   
  422117:	fdiv   st,st(4)
  422119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42211a:	popa   
  42211b:	ss test al,0x9c
  42211e:	add    esi,ebp
  422120:	dec    ebp
  422121:	(bad)  [ecx-0x2f3c88a3]
  422127:	adc    BYTE PTR [ecx-0x5a],0xba
  42212b:	xlat   BYTE PTR ds:[ebx]
  42212c:	retf   0xd1f0
  42212f:	(bad)  
  422130:	jle    0x422193
  422132:	repz jmp 0x84ee:0xab944588
  42213a:	data16 in al,0xa4
  42213d:	addr16 inc ebp
  42213f:	test   BYTE PTR [ebx+0x4a],dh
  422142:	xor    eax,0xb16ae6ee
  422147:	jno    0x42211c
  422149:	jmp    0x4cea7c53
  42214e:	sahf   
  42214f:	(bad)  
  422150:	adc    al,0x1
  422152:	sub    dl,dl
  422154:	inc    esp
  422155:	les    edx,FWORD PTR [ebx+ebp*1-0x16]
  422159:	xchg   DWORD PTR [ecx-0x322907e2],esi
  42215f:	mov    ds:0xd7c69d6c,eax
  422164:	scas   al,BYTE PTR es:[edi]
  422165:	lods   eax,DWORD PTR ds:[esi]
  422166:	in     eax,0x3c
  422168:	jmp    0xbf3f0d7e
  42216d:	popa   
  42216e:	out    0x57,eax
  422170:	push   edi
  422171:	call   0xd7f8:0x9f1d74f5
  422178:	cwde   
  422179:	push   ss
  42217a:	dec    edi
  42217b:	mov    ecx,0x12d10ca4
  422180:	mov    BYTE PTR [eax],ch
  422182:	adc    eax,0x8e17b39d
  422187:	jno    0x422158
  422189:	data16 mov ds:0x3a9bdc34,al
  42218f:	lahf   
  422190:	mov    esp,0x854195a7
  422195:	jg     0x4221db
  422197:	jae    0x42213a
  422199:	inc    ebp
  42219a:	les    esi,FWORD PTR [ebp-0x74]
  42219d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42219e:	sub    BYTE PTR fs:[edx-0x79b790a0],dh
  4221a5:	enter  0xe49c,0x36
  4221a9:	push   esi
  4221aa:	dec    eax
  4221ab:	std    
  4221ac:	mov    al,0x57
  4221ae:	retf   0x8d19
  4221b1:	(bad)  
  4221b2:	mov    es,ebx
  4221b4:	push   ebp
  4221b5:	out    0xe4,eax
  4221b7:	cmp    eax,0xea08f3f2
  4221bc:	jbe    0x4221fb
  4221be:	popa   
  4221bf:	adc    DWORD PTR [ebx-0x29],ecx
  4221c2:	xlat   BYTE PTR es:[ebx]
  4221c4:	adc    eax,0x7bd0afe0
  4221c9:	fdivr  st,st(2)
  4221cb:	ins    BYTE PTR es:[edi],dx
  4221cc:	mov    BYTE PTR [esi+0x7f],al
  4221cf:	mov    eax,ds:0x71390d61
  4221d4:	ds addr16 jnp 0x4221c3
  4221d8:	sub    al,0x6d
  4221da:	pop    edi
  4221db:	add    bh,bl
  4221dd:	pop    ecx
  4221de:	mov    cl,0xe0
  4221e0:	adc    al,0xcd
  4221e2:	jl     0x422244
  4221e4:	aam    0x38
  4221e6:	fcmovnbe st,st(7)
  4221e8:	outs   dx,DWORD PTR ds:[esi]
  4221e9:	inc    ebp
  4221ea:	rol    DWORD PTR [esi+0x5befc88f],cl
  4221f0:	mov    BYTE PTR [ecx+0x702f854],ah
  4221f6:	jg     0x42225a
  4221f8:	loope  0x42225a
  4221fa:	pop    edi
  4221fb:	jmp    0x4221b5
  4221fd:	dec    esi
  4221fe:	or     eax,0x16810667
  422203:	addr16 (bad) 
  422205:	and    eax,0x6da86ac2
  42220a:	fnsave [edi+0x456fe387]
  422210:	or     eax,0xc835608f
  422215:	mov    dl,0x8e
  422217:	icebp  
  422218:	js     0x422281
  42221a:	test   BYTE PTR [eax+0x53],dl
  42221d:	mov    al,ds:0x20aba317
  422222:	scas   eax,DWORD PTR es:[edi]
  422223:	jae    0x42221a
  422225:	ss mov esi,0x5287c736
  42222b:	or     eax,0xd613b3a6
  422230:	jecxz  0x4221bf
  422232:	std    
  422233:	xchg   ebp,eax
  422234:	mov    edx,0xf10b37be
  422239:	mov    bh,0x8c
  42223b:	fistp  QWORD PTR [eax+0x67]
  42223e:	mov    ?,eax
  422240:	mov    ds:0xe4a9ea57,al
  422245:	addr16 into 
  422247:	mov    ds:0x65048517,al
  42224c:	daa    
  42224d:	scas   al,BYTE PTR es:[edi]
  42224e:	mov    cl,0x3b
  422250:	sbb    al,0xb
  422252:	ror    DWORD PTR [edx],1
  422254:	jp     0x4222d5
  422256:	mov    al,0xd7
  422258:	dec    esi
  422259:	xchg   esp,eax
  42225a:	pop    ecx
  42225b:	scas   eax,DWORD PTR es:[edi]
  42225c:	cmp    eax,0x8a67234a
  422261:	push   esi
  422262:	mov    cs,WORD PTR [ebx+0x45]
  422265:	inc    edi
  422266:	and    ebp,edi
  422268:	out    dx,al
  422269:	pushf  
  42226a:	js     0x422243
  42226c:	or     BYTE PTR [ecx+0x4f],dh
  42226f:	das    
  422270:	inc    eax
  422271:	(bad)  
  422272:	push   edx
  422273:	adc    bl,al
  422275:	cmp    cl,BYTE PTR [edi+0x7d]
  422278:	mov    BYTE PTR [ebx],ah
  42227a:	inc    edi
  42227b:	test   BYTE PTR [eax],dl
  42227d:	call   0x67cd9f6f
  422282:	test   ah,bl
  422284:	lods   eax,DWORD PTR ds:[esi]
  422285:	(bad)  
  422286:	inc    esi
  422287:	pop    ss
  422288:	fidivr WORD PTR [ebp+0x14982ab1]
  42228e:	stos   BYTE PTR es:[edi],al
  42228f:	mov    cl,0xe6
  422291:	jae    0x422220
  422293:	lods   eax,DWORD PTR ds:[esi]
  422294:	jne    0x42230e
  422296:	dec    eax
  422297:	(bad)  
  422298:	or     BYTE PTR [ecx],al
  42229a:	and    esi,edx
  42229c:	xor    dl,BYTE PTR [ebx]
  42229e:	(bad)  
  42229f:	jle    0x422285
  4222a1:	mov    edi,0xd88348a
  4222a6:	or     ah,bl
  4222a8:	dec    ecx
  4222a9:	(bad)  
  4222aa:	jnp    0x4222f0
  4222ac:	cmp    eax,0x79f9f767
  4222b1:	out    dx,eax
  4222b2:	rcl    DWORD PTR [edi-0x16],1
  4222b5:	adc    DWORD PTR [ecx-0x74125268],esi
  4222bb:	xor    esi,DWORD PTR [ecx+0x31]
  4222be:	fwait
  4222bf:	outs   dx,DWORD PTR ds:[esi]
  4222c0:	ret    
  4222c1:	pop    ebx
  4222c2:	(bad)  
  4222c4:	add    eax,0x65152291
  4222c9:	mov    dl,0x21
  4222cb:	inc    ebp
  4222cc:	dec    esp
  4222cd:	ffree  st(7)
  4222cf:	jl     0x422259
  4222d1:	imul   ebx,DWORD PTR [edi+ebx*8-0x7c368733],0x20
  4222d9:	imul   ebp,DWORD PTR ds:0x515cdd92,0x160b4104
  4222e3:	mov    cl,0x88
  4222e5:	jo     0x4222bc
  4222e7:	mov    ecx,0x9a9de59c
  4222ec:	leave  
  4222ed:	push   0xe6c55c40
  4222f2:	adc    DWORD PTR [ecx+0x4c85075c],edx
  4222f8:	hlt    
  4222f9:	push   edi
  4222fa:	pop    edi
  4222fb:	mov    ds:0xe42c3688,eax
  422300:	push   es
  422301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422302:	outs   dx,DWORD PTR ds:[esi]
  422303:	add    al,0x22
  422305:	sbb    eax,0x98dfe82b
  42230a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42230b:	aad    0xd1
  42230d:	jne    0x4222a4
  42230f:	aaa    
  422310:	nop
  422311:	es mov cl,0x21
  422314:	icebp  
  422315:	nop    DWORD PTR [ebp-0x28df45cb]
  42231c:	(bad)  
  42231e:	lods   al,BYTE PTR ds:[esi]
  42231f:	jg     0x42232f
  422321:	jne    0x422394
  422323:	mov    al,0x88
  422325:	pop    edx
  422326:	stos   DWORD PTR es:[edi],eax
  422327:	inc    edx
  422328:	and    DWORD PTR [esi+0x1c],ebp
  42232b:	fnstsw WORD PTR [ecx-0x77de02c1]
  422331:	and    ecx,DWORD PTR [edx]
  422333:	mov    BYTE PTR [esi],0x7e
  422336:	out    dx,eax
  422337:	pop    ss
  422338:	icebp  
  422339:	je     0x4222ec
  42233b:	sbb    al,0xc
  42233d:	test   BYTE PTR [edx],bl
  42233f:	lock xor eax,0x8bd7f42a
  422345:	push   ecx
  422346:	mov    ah,ah
  422348:	xor    al,0x5a
  42234a:	ret    
  42234b:	pop    eax
  42234c:	clc    
  42234d:	and    al,0xb1
  42234f:	dec    edx
  422350:	daa    
  422351:	sub    esp,DWORD PTR [esi+edi*1-0x282d3c54]
  422358:	mov    dl,0xe2
  42235a:	cmp    DWORD PTR [ebx],0xffffffb7
  42235d:	jmp    0x4223af
  42235f:	cli    
  422360:	fwait
  422361:	jnp    0x422306
  422363:	rol    BYTE PTR [edi+0x1ed9eb84],1
  422369:	dec    DWORD PTR [ecx-0x5c]
  42236c:	dec    eax
  42236d:	addr16 or eax,0x939af16a
  422373:	cmp    al,0xe3
  422375:	ins    BYTE PTR es:[edi],dx
  422376:	mov    cl,0xb4
  422378:	out    0x6f,eax
  42237a:	aaa    
  42237b:	icebp  
  42237c:	jge    0x422333
  42237e:	ja     0x422359
  422380:	fbld   TBYTE PTR [edi+0x27070046]
  422386:	pop    es
  422387:	(bad)  
  422388:	pop    ebx
  422389:	push   esi
  42238a:	test   BYTE PTR [ecx+ebx*4+0x7b3c31a1],ch
  422391:	out    0x91,al
  422393:	jg     0x4223ff
  422395:	addr16 sbb eax,0xbe880ec8
  42239b:	sbb    DWORD PTR [ebx],eax
  42239d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42239e:	mov    bl,0x35
  4223a0:	jle    0x422363
  4223a2:	dec    ecx
  4223a3:	jmp    FWORD PTR [edi-0x2a73ebf9]
  4223a9:	jp     0x4223a9
  4223ab:	cmp    BYTE PTR [ebx+0x48f63aa8],al
  4223b1:	aad    0xd3
  4223b3:	dec    edx
  4223b4:	push   esi
  4223b5:	enter  0xb4b2,0x5e
  4223b9:	iret   
  4223ba:	in     eax,0x6d
  4223bc:	sub    al,0xf4
  4223be:	mov    esi,0xc8a08870
  4223c3:	test   eax,0xd7cc1cc3
  4223c8:	xor    al,0x9a
  4223ca:	add    DWORD PTR [esi-0x23],ecx
  4223cd:	outs   dx,BYTE PTR ds:[esi]
  4223ce:	inc    esp
  4223cf:	imul   ecx,DWORD PTR [edi-0x1961d505],0xde37aee9
  4223d9:	jmp    0x4dca:0x7b4f0f00
  4223e0:	gs daa 
  4223e2:	stos   DWORD PTR es:[edi],eax
  4223e3:	xchg   edi,eax
  4223e4:	lea    ecx,[ecx-0x24758abf]
  4223ea:	outs   dx,BYTE PTR ds:[esi]
  4223eb:	xchg   edx,eax
  4223ec:	sbb    eax,edi
  4223ee:	jmp    0x42237e
  4223f0:	jmp    0xc40c:0x11d7c79a
  4223f7:	jge    0x4223d9
  4223f9:	sub    dh,BYTE PTR [esi+0x65]
  4223fc:	mov    ch,BYTE PTR [edi+edi*8]
  4223ff:	mov    ds:0x90d6a7f6,eax
  422404:	xor    ch,bl
  422406:	add    ah,BYTE PTR [edi-0x71]
  422409:	addr16 pop eax
  42240b:	loop   0x422390
  42240d:	ss mov esp,0xb174572b
  422413:	mov    ch,BYTE PTR [esi]
  422415:	pop    eax
  422416:	ror    DWORD PTR [ebp-0x27c0e4a1],cl
  42241c:	and    DWORD PTR [ecx+0x77],edx
  42241f:	push   0x6d9033c8
  422424:	inc    ecx
  422425:	enter  0x42bf,0xf3
  422429:	jnp    0x422411
  42242b:	mov    bh,0xad
  42242d:	and    DWORD PTR [edi],ebp
  42242f:	loopne 0x422466
  422431:	repz cmp DWORD PTR gs:[ebx+0x6805cd2d],edi
  422439:	leave  
  42243a:	stc    
  42243b:	pop    edx
  42243c:	mov    BYTE PTR [edi],al
  42243e:	aaa    
  42243f:	jp     0x42242e
  422441:	xor    eax,0x678fe159
  422446:	in     al,dx
  422447:	jg     0x422471
  422449:	fcomp  DWORD PTR ds:0xac719b22
  42244f:	inc    edx
  422450:	dec    edi
  422451:	lahf   
  422452:	mov    esi,0x1b07b77a
  422457:	xchg   DWORD PTR [eax],ebx
  422459:	stos   BYTE PTR es:[edi],al
  42245a:	arpl   WORD PTR [ecx],sp
  42245c:	and    eax,0x1392a467
  422461:	(bad)  
  422462:	cwde   
  422463:	out    0x53,eax
  422465:	xchg   dh,al
  422467:	xchg   ebx,eax
  422468:	mov    BYTE PTR [ecx],dh
  42246a:	sub    BYTE PTR [eax-0x78f8c9e],0x66
  422471:	and    al,BYTE PTR [di-0x35]
  422475:	stos   BYTE PTR es:[edi],al
  422476:	les    edx,FWORD PTR [ecx-0x24]
  422479:	xor    BYTE PTR [ecx+0x676d6b6f],0x1f
  422480:	mov    bh,0x66
  422482:	cs retf 0x288a
  422486:	sbb    DWORD PTR [edi-0x6d1567d7],edx
  42248c:	jecxz  0x4224ce
  42248e:	mov    ah,0xfc
  422490:	add    edi,DWORD PTR ds:0x7001b328
  422496:	xlat   BYTE PTR ds:[ebx]
  422497:	jo     0x4224ed
  422499:	cmp    edx,DWORD PTR [esi-0x1c]
  42249c:	mov    BYTE PTR [ebx+0x2106be6a],ch
  4224a2:	test   BYTE PTR [edx+0x7e2e98a2],al
  4224a8:	mov    BYTE PTR [ebp+0x4747e3ad],cl
  4224ae:	(bad)  
  4224af:	fld    st(6)
  4224b1:	(bad)
  4224b6:	pushf  
  4224b7:	fidiv  DWORD PTR [ecx]
  4224b9:	push   0x8908db1
  4224be:	jmp    0xcdd7:0xb3091
  4224c5:	pop    ss
  4224c6:	pop    esp
  4224c7:	stc    
  4224c8:	sar    BYTE PTR [edi-0x6c],1
  4224cb:	pop    es
  4224cc:	mov    bl,dl
  4224ce:	jno    0x4224f8
  4224d0:	repz daa 
  4224d2:	sahf   
  4224d3:	dec    ebp
  4224d4:	std    
  4224d5:	addr16 inc edx
  4224d7:	adc    al,ch
  4224d9:	mov    WORD PTR [ebp+0x8],ds
  4224dc:	fiadd  DWORD PTR [ebx]
  4224de:	scas   al,BYTE PTR es:[edi]
  4224df:	adc    eax,DWORD PTR [eax-0x542874d7]
  4224e5:	adc    BYTE PTR ds:0x7a57f553,0x29
  4224ec:	into   
  4224ed:	je     0x4224f4
  4224ef:	les    edx,FWORD PTR [edx+0x68]
  4224f2:	push   eax
  4224f3:	pop    es
  4224f4:	or     al,bh
  4224f6:	mov    ah,al
  4224f8:	cmp    al,0xeb
  4224fa:	mov    dh,0xfd
  4224fc:	popf   
  4224fd:	stos   BYTE PTR es:[edi],al
  4224fe:	and    eax,0xfbae38d9
  422503:	leave  
  422504:	pop    ds
  422505:	ror    BYTE PTR [bx+0x7a],0xbb
  42250a:	inc    esp
  42250b:	mov    cs,WORD PTR [ebx]
  42250d:	cmp    DWORD PTR [ecx+0x45a2d75d],esi
  422513:	cmp    bl,0x4d
  422516:	sbb    eax,0xe15edbd2
  42251b:	mov    ds:0x8465e7cb,al
  422520:	cmp    eax,0xe5a9b02d
  422525:	pop    ss
  422526:	lock imul ebx,edi,0xffffffb7
  42252a:	popa   
  42252b:	jns    0x422564
  42252d:	xchg   ecx,eax
  42252e:	sbb    bh,dl
  422530:	out    dx,al
  422531:	test   BYTE PTR [edx-0x60],0x68
  422535:	loop   0x4224eb
  422537:	mov    ecx,0x1ac43388
  42253c:	push   esp
  42253d:	mov    al,cl
  42253f:	mov    ds:0x2ed96063,eax
  422544:	outs   dx,BYTE PTR ds:[esi]
  422545:	out    0x59,al
  422547:	mov    ah,0x9e
  422549:	sbb    ebx,DWORD PTR [ecx]
  42254b:	xchg   BYTE PTR [eax+0x3b],dl
  42254e:	mov    dh,0x82
  422550:	mov    esi,0xaf6f4bd4
  422555:	addr16 mov edx,0x6b241aa4
  42255b:	iret   
  42255c:	inc    esp
  42255d:	es jp  0x422513
  422560:	sub    esp,DWORD PTR [edi]
  422562:	mov    cl,0x9d
  422564:	dec    esp
  422565:	test   DWORD PTR [esi],esi
  422567:	(bad)  
  422568:	sbb    eax,0xbad8bfb8
  42256d:	mov    ch,0xdb
  42256f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422570:	test   al,0x44
  422572:	ret    0x632e
  422575:	ret    0xb7cc
  422578:	mov    BYTE PTR [edx+0x72],dl
  42257b:	cmc    
  42257c:	cli    
  42257d:	das    
  42257e:	jg     0x422513
  422580:	sbb    eax,0x42002367
  422585:	push   esp
  422586:	cdq    
  422587:	sbb    bl,BYTE PTR [esi+ebp*4+0x42e0c2b6]
  42258e:	int3   
  42258f:	(bad)  
  422590:	test   al,0x9a
  422592:	outs   dx,BYTE PTR ds:[esi]
  422593:	add    DWORD PTR [ecx],ebp
  422595:	addr16 pop edx
  422597:	dec    eax
  422598:	jb     0x422602
  42259a:	push   cs
  42259b:	out    dx,al
  42259c:	or     al,0xec
  42259e:	mov    cl,0xa5
  4225a0:	pop    ebp
  4225a1:	test   eax,0xc9066b6b
  4225a6:	int3   
  4225a7:	xlat   BYTE PTR ds:[ebx]
  4225a8:	jbe    0x4225b9
  4225aa:	in     eax,0x76
  4225ac:	jb     0x422537
  4225ae:	and    eax,0x18e2887f
  4225b3:	ja     0x422621
  4225b5:	ds dec edx
  4225b7:	icebp  
  4225b8:	pop    ss
  4225b9:	addr16 clc 
  4225bb:	mov    edx,0x80fa5c5f
  4225c0:	or     DWORD PTR [edx-0x4f],ebx
  4225c3:	mov    cl,0x95
  4225c5:	(bad)  
  4225c6:	jno    0x422580
  4225c8:	sahf   
  4225c9:	rcl    DWORD PTR [edi-0x12],1
  4225cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225cd:	pop    ds
  4225ce:	mov    bh,BYTE PTR [ebx]
  4225d0:	or     BYTE PTR [esi+0x6eccfce3],bh
  4225d6:	inc    ecx
  4225d7:	mov    BYTE PTR ds:[edi],al
  4225da:	aam    0x11
  4225dc:	clc    
  4225dd:	aas    
  4225de:	push   ss
  4225df:	dec    esp
  4225e0:	mov    DWORD PTR [ebp+0x6fd0d7a7],eax
  4225e6:	sub    al,0x3f
  4225e8:	inc    eax
  4225e9:	and    eax,0x49813645
  4225ee:	fmul   DWORD PTR [ecx]
  4225f0:	mov    eax,ds:0x7963d0e1
  4225f5:	mov    esp,0x7ba4d571
  4225fa:	xchg   ebx,eax
  4225fb:	loop   0x4225f6
  4225fd:	jmp    0xb3ab799a
  422602:	push   ecx
  422603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422604:	shl    BYTE PTR [esi+0x76884bdb],0x53
  42260b:	in     eax,0xfb
  42260d:	pop    edx
  42260e:	dec    esp
  42260f:	fst    QWORD PTR [ebp+0x67]
  422612:	cmp    ah,BYTE PTR [esp+ecx*4]
  422615:	scas   eax,DWORD PTR es:[edi]
  422616:	or     BYTE PTR [esi+0x4eb1c7fd],0x51
  42261d:	add    ebx,eax
  42261f:	lock pop esp
  422621:	je     0x42262e
  422623:	scas   al,BYTE PTR es:[edi]
  422624:	imul   esp,DWORD PTR [edi+0x1d],0x66
  422628:	adc    dh,BYTE PTR [ebx]
  42262a:	ins    BYTE PTR es:[edi],dx
  42262b:	push   edx
  42262c:	or     BYTE PTR [eax-0x4ed5b742],bh
  422632:	mov    ds:0x65078c39,eax
  422637:	push   0xd0152bf8
  42263c:	jmp    0x2007:0xe37a9e7a
  422643:	push   0xfffffff7
  422645:	das    
  422646:	mov    cl,0xd1
  422648:	fisttp DWORD PTR [edi]
  42264a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264b:	call   0xda24db53
  422650:	sahf   
  422651:	jle    0x4225f1
  422653:	pop    es
  422654:	test   al,0x90
  422656:	and    BYTE PTR [ebx+0x8],0xa5
  42265a:	mov    cl,0x73
  42265c:	test   BYTE PTR [eax+0x2d],dl
  42265f:	sub    bh,BYTE PTR [edi-0x62843cf]
  422665:	mov    cl,0x71
  422667:	cmp    BYTE PTR [edi+0x74],cl
  42266a:	jle    0x422692
  42266c:	mov    BYTE PTR [esi-0x1d7f6ee3],dh
  422672:	out    dx,al
  422673:	ins    BYTE PTR es:[edi],dx
  422674:	inc    edx
  422675:	push   edi
  422676:	dec    ebx
  422677:	cli    
  422678:	sub    dl,BYTE PTR [ecx+eax*2-0x49a7053e]
  42267f:	rcl    BYTE PTR [edx+ebx*2-0x52473763],cl
  422686:	(bad)  
  422687:	push   eax
  422688:	jae    0x42269d
  42268a:	jmp    0x422663
  42268c:	loop   0x422692
  42268e:	push   cs
  42268f:	add    ah,BYTE PTR [ecx]
  422691:	cmp    esp,DWORD PTR [ecx+0x24]
  422694:	mov    BYTE PTR [ebp+0x7a],ch
  422697:	ja     0x422670
  422699:	inc    edi
  42269a:	or     esi,ebx
  42269c:	cwde   
  42269d:	addr16 mov ecx,0x9af886ff
  4226a3:	scas   eax,DWORD PTR es:[edi]
  4226a4:	cmp    al,0xd7
  4226a6:	dec    edi
  4226a7:	jl     0x422631
  4226a9:	shl    BYTE PTR [ebx+0x997ffba],1
  4226af:	shl    BYTE PTR [eax+0x67],cl
  4226b2:	xor    al,0xfe
  4226b4:	cmp    ecx,esp
  4226b6:	rcl    BYTE PTR ds:0x9dc43184,1
  4226bc:	mov    BYTE PTR [ecx+ecx*2-0x3e00d177],ah
  4226c3:	pop    es
  4226c4:	adc    eax,0xbb7e1767
  4226c9:	(bad)  
  4226ca:	out    dx,al
  4226cb:	out    0x75,al
  4226cd:	arpl   WORD PTR [ecx+0x5819e020],si
  4226d3:	xchg   ebp,eax
  4226d4:	iret   
  4226d5:	xchg   edx,eax
  4226d6:	pusha  
  4226d7:	xlat   BYTE PTR ds:[ebx]
  4226d8:	je     0x42271e
  4226da:	enter  0xfcdb,0x77
  4226de:	mov    es,WORD PTR [eax+ecx*4+0x7d06d4c]
  4226e5:	nop
  4226e6:	add    DWORD PTR ds:0xfdd962a8,eax
  4226ec:	nop
  4226ed:	sahf   
  4226ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226ef:	fnstenv [edx]
  4226f1:	mov    ?,WORD PTR [ecx-0x7a]
  4226f4:	aam    0x8b
  4226f6:	add    dh,BYTE PTR [eax+ecx*4]
  4226f9:	xlat   BYTE PTR ds:[ebx]
  4226fa:	dec    BYTE PTR [ebp+0x72]
  4226fd:	enter  0x9aa5,0xde
  422701:	dec    ax
  422703:	(bad)  
  422704:	sbb    eax,0xe28c8b7
  422709:	stos   DWORD PTR es:[edi],eax
  42270a:	xchg   edx,eax
  42270b:	or     DWORD PTR [eax+0x27f08705],ecx
  422711:	retf   0x96e9
  422714:	lods   al,BYTE PTR ds:[esi]
  422715:	xlat   BYTE PTR ds:[bx]
  422717:	jl     0x4226b1
  422719:	clc    
  42271a:	loope  0x422776
  42271c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42271d:	push   DWORD PTR [edx-0x84246b6]
  422723:	fld    TBYTE PTR [edi]
  422725:	out    dx,eax
  422726:	lods   al,BYTE PTR ds:[esi]
  422727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422728:	jmp    0x3038:0xc33cc167
  42272f:	xor    DWORD PTR [esp+esi*4-0x50],0x7c
  422734:	stos   BYTE PTR es:[edi],al
  422735:	pop    edi
  422736:	and    al,0xc7
  422738:	(bad)  
  42273a:	pop    ecx
  42273b:	push   cs
  42273c:	cdq    
  42273d:	addr16 inc edi
  42273f:	pop    es
  422740:	jo     0x422701
  422742:	stos   DWORD PTR es:[edi],eax
  422743:	and    al,0x3c
  422745:	ins    DWORD PTR es:[edi],dx
  422746:	mov    cl,0x44
  422748:	xchg   ebx,eax
  422749:	jbe    0x42270b
  42274b:	and    ebx,DWORD PTR [edi]
  42274d:	sahf   
  42274e:	mov    ss,edi
  422750:	inc    ebp
  422751:	mov    ah,BYTE PTR [ebx+0x7bca22de]
  422757:	sub    DWORD PTR [ecx-0x37a650ed],ebx
  42275d:	cmp    esp,DWORD PTR [edx+0x405ae849]
  422763:	xlat   BYTE PTR ds:[ebx]
  422764:	es add al,0x55
  422767:	lods   al,BYTE PTR ds:[esi]
  422768:	ror    ebp,1
  42276a:	pop    esp
  42276b:	fild   WORD PTR [ecx-0x32afabab]
  422771:	inc    esi
  422772:	loope  0x4227c1
  422774:	rol    bh,1
  422776:	jge    0x42274f
  422778:	sub    cl,BYTE PTR [edi-0x7e1b2ada]
  42277e:	dec    eax
  42277f:	ror    BYTE PTR [ecx-0x225e5a84],0x79
  422786:	aas    
  422787:	push   ebp
  422788:	xor    ebp,DWORD PTR [eax]
  42278a:	in     al,dx
  42278b:	pop    ss
  42278c:	loop   0x422719
  42278e:	rep lods eax,DWORD PTR ds:[esi]
  422790:	scas   al,BYTE PTR es:[edi]
  422791:	pusha  
  422792:	push   eax
  422793:	jp     0x42278e
  422795:	cmp    DWORD PTR [edx+0x46],esp
  422798:	sub    ecx,ebp
  42279a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42279b:	and    eax,0x22b28508
  4227a0:	dec    eax
  4227a1:	into   
  4227a2:	mov    cl,0x58
  4227a4:	pop    ebp
  4227a5:	xchg   esi,eax
  4227a6:	jle    0x422778
  4227a8:	and    esp,esp
  4227aa:	sbb    edi,edx
  4227ac:	jl     0x42274c
  4227ae:	add    bh,ch
  4227b0:	repnz retf 
  4227b2:	fsubr  QWORD PTR [eax-0x78]
  4227b5:	dec    edi
  4227b6:	ins    DWORD PTR es:[edi],dx
  4227b7:	xchg   edx,ebx
  4227b9:	jbe    0x422831
  4227bb:	mov    ch,0x1a
  4227bd:	fcomp  DWORD PTR [bp-0x17]
  4227c1:	(bad)  
  4227c2:	mov    edi,0xb1d10729
  4227c7:	clc    
  4227c8:	dec    edx
  4227c9:	pop    esp
  4227ca:	outs   dx,BYTE PTR ds:[esi]
  4227cb:	div    DWORD PTR [eax+0x5b]
  4227ce:	add    edx,edi
  4227d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227d1:	xchg   ebp,eax
  4227d2:	jae    0x42283e
  4227d4:	push   es
  4227d5:	adc    al,0x35
  4227d7:	sbb    cl,BYTE PTR [eax-0x1a299c4]
  4227dd:	xor    edx,edi
  4227df:	mov    al,cl
  4227e1:	push   0x3efb9cd8
  4227e6:	jno    0x4227c0
  4227e8:	mov    ds:0x85bb0703,al
  4227ed:	sub    edi,DWORD PTR [ebp-0x6a]
  4227f0:	stc    
  4227f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227f2:	(bad)  
  4227f3:	pop    ss
  4227f4:	mov    cl,0x87
  4227f6:	jmp    DWORD PTR [esi+0x337767ed]
  4227fc:	sbb    ebx,edi
  4227fe:	dec    ebp
  4227ff:	push   esp
  422800:	fnsave [esi-0x3e]
  422803:	ss clc 
  422805:	fdiv   DWORD PTR [ecx+0xbfd7f05]
  42280b:	cmp    al,0x44
  42280d:	fidivr DWORD PTR [ebx]
  42280f:	xlat   BYTE PTR ds:[ebx]
  422810:	xor    ah,BYTE PTR [esi]
  422812:	retf   0xe4f5
  422815:	cld    
  422816:	sbb    al,0xa3
  422818:	mov    BYTE PTR [ecx],cl
  42281a:	clc    
  42281b:	out    dx,eax
  42281c:	xor    eax,0xe11c7ca6
  422821:	imul   ecx,DWORD PTR [edx+0x11a53efc],0xc1bd3b4e
  42282b:	pop    ebx
  42282c:	mov    edx,0xfdd4e166
  422831:	push   DWORD PTR [eax-0x17]
  422834:	add    edx,edi
  422836:	out    dx,al
  422837:	ror    BYTE PTR [ebx+0x67],0xf0
  42283b:	sbb    DWORD PTR [ebx],edi
  42283d:	inc    ecx
  42283e:	inc    edx
  42283f:	and    ebx,DWORD PTR [ecx]
  422841:	pop    es
  422842:	lods   al,BYTE PTR ds:[esi]
  422843:	mov    ebp,DWORD PTR [edi]
  422845:	and    al,0xb1
  422847:	mov    ebx,0xd132430a
  42284c:	or     DWORD PTR [ecx+0x3ce7d640],ebx
  422852:	in     al,0x25
  422854:	mov    edx,0xcef7015f
  422859:	add    eax,0x5a3076af
  42285e:	xor    DWORD PTR [ecx-0x31],edi
  422861:	inc    esi
  422862:	inc    esi
  422863:	jmp    0x4227f1
  422865:	jnp    0x4227fc
  422867:	xor    BYTE PTR [esi],ch
  422869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42286a:	fistp  WORD PTR [edi-0x4759681b]
  422870:	mov    dl,cl
  422872:	add    dl,al
  422874:	rcl    DWORD PTR [edx-0x54],0xf4
  422878:	or     al,0x67
  42287a:	lds    esi,FWORD PTR [eax-0x66]
  42287d:	pop    ss
  42287e:	mov    gs,WORD PTR [edx+ebx*1-0x6d8371ab]
  422885:	out    0x9f,eax
  422887:	add    eax,0xf479a43e
  42288c:	sbb    eax,0xd2413d78
  422891:	in     al,0xed
  422893:	leave  
  422894:	jmp    0x1e47:0xbfaa4888
  42289b:	sbb    al,0x88
  42289d:	adc    cl,BYTE PTR ds:0xe84cb78
  4228a3:	xor    esp,DWORD PTR [edi]
  4228a5:	addr16 xchg esi,eax
  4228a7:	loopne 0x42287b
  4228a9:	jb     0x422919
  4228ab:	mov    ah,0xef
  4228ad:	mov    cl,dh
  4228af:	adc    DWORD PTR [eax-0x80],eax
  4228b2:	mov    cl,0xd4
  4228b4:	(bad)  
  4228b5:	call   0xaf481827
  4228ba:	cmp    edx,edi
  4228bc:	dec    esp
  4228bd:	push   0x9c48344f
  4228c2:	neg    DWORD PTR es:[ebx]
  4228c5:	mov    edi,0x7c7f347
  4228ca:	or     ch,dl
  4228cc:	mov    ah,0xdb
  4228ce:	jbe    0x4228b8
  4228d0:	enter  0x5836,0x2a
  4228d4:	mov    dl,ah
  4228d6:	(bad)  
  4228d7:	mov    cl,0x1b
  4228d9:	sbb    di,ax
  4228dc:	pop    esi
  4228dd:	fs cmp al,0x23
  4228e0:	mov    eax,ds:0x19a3fa70
  4228e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228e6:	sbb    dl,BYTE PTR [eax-0x22]
  4228e9:	push   ebp
  4228ea:	into   
  4228eb:	xchg   DWORD PTR [eax+0xac4511b],ecx
  4228f1:	push   ds
  4228f2:	jae    0x4228cf
  4228f4:	and    DWORD PTR [edi+0xf],0xffffffa2
  4228f8:	push   ebx
  4228f9:	xor    bl,dl
  4228fb:	mov    eax,ds:0x7de9f900
  422900:	sbb    DWORD PTR [edi+0x53],esp
  422903:	cld    
  422904:	dec    BYTE PTR [eax-0x20]
  422907:	mov    ebx,0xc99c67d9
  42290c:	dec    ecx
  42290d:	icebp  
  42290e:	or     eax,0xb190ca6f
  422913:	mov    esp,0x94c9ac59
  422918:	(bad)  
  422919:	jmp    0x1ed80265
  42291e:	dec    esp
  42291f:	pop    eax
  422920:	test   al,0x3f
  422922:	arpl   WORD PTR [ebx],sp
  422924:	fdivrp st(3),st
  422926:	mov    cl,0xf5
  422928:	xlat   BYTE PTR ds:[ebx]
  422929:	shl    BYTE PTR [ebx],0x1f
  42292c:	sbb    DWORD PTR [edi-0x25ee2823],eax
  422932:	loop   0x4228f8
  422934:	(bad)  
  422935:	mov    ds:0x877d5f4e,eax
  42293a:	stc    
  42293b:	pusha  
  42293c:	mov    bl,dh
  42293e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42293f:	int3   
  422940:	test   al,0xa7
  422942:	pop    ebp
  422943:	pop    ebp
  422944:	ss addr16 (bad) 
  422949:	jmp    0xadc2566d
  42294e:	push   ebx
  42294f:	add    cl,BYTE PTR [eax+0x74b091c]
  422955:	dec    ebp
  422956:	push   ss
  422957:	dec    ecx
  422958:	jg     0x422999
  42295a:	rol    DWORD PTR [ebp-0x78],cl
  42295d:	fs ds xchg eax,esi
  422961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422962:	test   bh,cl
  422964:	mov    BYTE PTR [edi+0x2],al
  422967:	and    al,0x79
  422969:	(bad)  
  42296a:	xlat   BYTE PTR ds:[ebx]
  42296b:	or     edi,DWORD PTR [esi+0x67]
  42296e:	mov    ds:0xaec283b3,eax
  422973:	or     al,0x40
  422976:	ret    0xf8f9
  422979:	push   ds
  42297a:	mov    cl,0xad
  42297c:	mov    dl,0xc3
  42297e:	shr    ch,0x7f
  422981:	imul   esp,DWORD PTR [ebx],0xffffffd0
  422984:	mov    dh,BYTE PTR [edi+eax*2-0x1a28024d]
  42298b:	pop    eax
  42298c:	jp     0x422984
  42298e:	mov    cl,0x81
  422990:	xchg   DWORD PTR [bp+di-0x3b68],esp
  422995:	mov    ebx,0x391fd759
  42299a:	lds    edx,FWORD PTR [esi-0x20]
  42299d:	or     DWORD PTR ds:0x323888a1,eax
  4229a3:	es pop edi
  4229a5:	cmp    al,0xd9
  4229a7:	adc    ah,BYTE PTR [ebx-0x7b399585]
  4229ad:	data16 sub BYTE PTR [eax+0x329fac8],0x92
  4229b5:	add    BYTE PTR [ecx-0x783ab8bd],dh
  4229bb:	inc    esp
  4229bc:	adc    BYTE PTR [esi-0x33],al
  4229bf:	stos   DWORD PTR es:[edi],eax
  4229c0:	mov    WORD PTR [edi+0x4c],fs
  4229c3:	rcl    BYTE PTR [edi-0x2de02498],cl
  4229c9:	in     eax,dx
  4229ca:	lods   al,BYTE PTR ds:[esi]
  4229cb:	scas   eax,DWORD PTR es:[edi]
  4229cc:	fsub   DWORD PTR [ebp-0xf]
  4229cf:	push   0xf5820cef
  4229d4:	pop    edi
  4229d5:	addr16 sub al,0xf4
  4229d8:	push   ebp
  4229d9:	jo     0x4229bb
  4229db:	dec    ebx
  4229dc:	mov    ds:0x5c3ab1c3,al
  4229e1:	ins    DWORD PTR es:[edi],dx
  4229e2:	adc    ah,BYTE PTR ds:0xd7d4deb2
  4229e8:	cwde   
  4229e9:	dec    eax
  4229ea:	mov    al,ds:0x6906bf47
  4229ef:	sub    eax,0xa8eca088
  4229f4:	mov    ch,0x34
  4229f6:	sbb    bh,dh
  4229f8:	xchg   DWORD PTR [esi],ebx
  4229fa:	ret    0x38f3
  4229fd:	lods   eax,DWORD PTR ds:[esi]
  4229fe:	jecxz  0x4229d4
  422a00:	xor    al,dl
  422a02:	sub    DWORD PTR ds:0xda578408,ebp
  422a08:	and    BYTE PTR [ecx-0x41],bl
  422a0b:	xchg   ecx,eax
  422a0c:	xchg   ebp,eax
  422a0d:	mov    bl,0x25
  422a0f:	xchg   edi,eax
  422a10:	push   edi
  422a11:	mov    DWORD PTR [ebx-0x6d8440bc],eax
  422a17:	jno    0x1af1856
  422a1d:	mov    ds:0x2737414b,eax
  422a22:	int    0x82
  422a24:	add    DWORD PTR [esi-0x37],ebp
  422a27:	adc    al,0xb9
  422a29:	and    ebp,edx
  422a2b:	xlat   BYTE PTR ds:[ebx]
  422a2c:	(bad)  
  422a2d:	xchg   esp,eax
  422a2e:	mul    DWORD PTR [edx]
  422a30:	push   edx
  422a31:	sub    dh,ah
  422a33:	sub    DWORD PTR [ebx],ebx
  422a35:	imul   esi,DWORD PTR [esi+0x71863920],0x6e2fe73
  422a3f:	inc    esi
  422a40:	xchg   esi,eax
  422a41:	pop    edi
  422a42:	jnp    0x422aa6
  422a44:	xchg   DWORD PTR [eax],eax
  422a46:	mov    dl,0x61
  422a48:	mov    esp,0x51a34554
  422a4d:	pop    edi
  422a4e:	loope  0x4229e7
  422a50:	push   es
  422a51:	shl    BYTE PTR [eax+eiz*1-0x61],0xe9
  422a56:	gs int 0x87
  422a59:	in     eax,dx
  422a5a:	pop    ss
  422a5b:	loope  0x422a03
  422a5d:	mov    ecx,0x67d9bc51
  422a62:	out    dx,eax
  422a63:	ror    BYTE PTR [ebp-0x5d14db60],1
  422a69:	cmp    al,0xb5
  422a6b:	xor    ch,bh
  422a6d:	xchg   edi,eax
  422a6e:	pop    edi
  422a6f:	or     ebx,DWORD PTR [eax]
  422a71:	xor    eax,0x67ee7cac
  422a76:	imul   edi,DWORD PTR [edx*2-0x5ff13aee],0x2
  422a7e:	mov    cl,0x1d
  422a80:	sub    BYTE PTR [edi],cl
  422a82:	test   DWORD PTR [ebx-0x289226f0],ebp
  422a88:	scas   al,BYTE PTR es:[edi]
  422a89:	jnp    0x422a69
  422a8b:	pop    esi
  422a8c:	in     al,dx
  422a8d:	sub    al,0x4b
  422a8f:	xchg   esp,eax
  422a90:	test   DWORD PTR [esi],edi
  422a92:	jnp    0x422a1e
  422a94:	fisttp QWORD PTR [esi+0x6e065f60]
  422a9a:	xchg   edx,eax
  422a9b:	xlat   BYTE PTR ds:[ebx]
  422a9c:	cmp    DWORD PTR [edi],esi
  422a9e:	mov    eax,es:0xee373895
  422aa4:	shr    BYTE PTR [edi],1
  422aa6:	out    dx,eax
  422aa7:	xlat   BYTE PTR ds:[ebx]
  422aa8:	jae    0x422a56
  422aaa:	inc    edx
  422aab:	cmp    al,0x74
  422aad:	pop    ss
  422aae:	out    dx,eax
  422aaf:	out    dx,al
  422ab0:	pop    es
  422ab1:	test   al,0x31
  422ab3:	repz aam 0x6a
  422ab6:	mov    dh,0xa6
  422ab8:	adc    al,0x4e
  422aba:	mov    cl,0x74
  422abc:	mov    bh,0x2b
  422abe:	or     BYTE PTR [ebp-0x2851cdd1],bh
  422ac4:	sub    al,0xb2
  422ac6:	sub    eax,0x8f9d2280
  422acb:	in     al,0x89
  422acd:	adc    ch,BYTE PTR [edi]
  422acf:	pop    ds
  422ad0:	inc    DWORD PTR [edi+0x50731204]
  422ad6:	xor    ah,dl
  422ad8:	add    ebx,DWORD PTR [edi+0x2b]
  422adb:	(bad)  
  422add:	jmp    0xe24c:0xff6785b1
  422ae4:	adc    eax,0xb6d469d8
  422ae9:	dec    ebp
  422aea:	fs mov cl,0x3c
  422aed:	(bad)  
  422aee:	adc    esi,ecx
  422af0:	inc    ebp
  422af1:	add    eax,0x3b313bb1
  422af6:	shr    BYTE PTR [ecx-0x28b2df8e],1
  422afc:	pushf  
  422afd:	mov    esi,0x594b61f3
  422b02:	mov    BYTE PTR [ebx],0x88
  422b05:	out    dx,eax
  422b06:	inc    ebx
  422b07:	sbb    eax,0x520d39b9
  422b0c:	retf   
  422b0d:	(bad)  
  422b0e:	xchg   edi,eax
  422b0f:	xlat   BYTE PTR ds:[ebx]
  422b10:	xchg   DWORD PTR ds:[ebx-0x2327cb6e],ebp
  422b17:	pusha  
  422b18:	cdq    
  422b19:	pop    es
  422b1a:	int    0xb1
  422b1c:	jg     0x422abb
  422b1e:	mov    cl,0x72
  422b20:	shr    BYTE PTR [ebp-0x10],1
  422b23:	lods   eax,DWORD PTR ds:[esi]
  422b24:	clc    
  422b25:	jg     0x422b6c
  422b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b28:	xchg   edx,eax
  422b29:	sbb    DWORD PTR [edx-0x29],edi
  422b2c:	xchg   ecx,edi
  422b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b2f:	ds call 0xe629:0x879760e7
  422b37:	int    0xd8
  422b39:	fcmovnb st,st(0)
  422b3b:	sar    BYTE PTR [eax-0xa],0x2f
  422b3f:	cmp    eax,0x8dd667ac
  422b44:	xchg   ebp,eax
  422b45:	repz leave 
  422b47:	xor    BYTE PTR [ecx+0x77],bh
  422b4a:	mov    al,0xae
  422b4c:	loop   0x422bc8
  422b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b4f:	cdq    
  422b50:	jnp    0x422b90
  422b52:	popa   
  422b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b54:	shl    DWORD PTR [edi+0x1],1
  422b57:	shl    BYTE PTR [eax-0xfadaf09],1
  422b5d:	push   es
  422b5e:	enter  0x881d,0x15
  422b62:	mov    ds,WORD PTR [eax-0x37]
  422b65:	adc    ebx,DWORD PTR [esi-0x67]
  422b68:	jmp    DWORD PTR [ecx+edi*2-0x1d]
  422b6c:	enter  0xcdde,0xc4
  422b70:	adc    BYTE PTR [edi-0x1e779980],bl
  422b76:	and    eax,0x2d3afb2e
  422b7b:	mov    dh,0xc7
  422b7d:	addr16 inc esi
  422b7f:	jnp    0x422bbc
  422b81:	xchg   esp,eax
  422b82:	rol    DWORD PTR [eax+eiz*1-0x2c],cl
  422b86:	mov    esi,0xb983f2cd
  422b8b:	ja     0x422bf7
  422b8d:	inc    ebp
  422b8e:	shl    dl,1
  422b90:	inc    ebx
  422b91:	addr16 loopne 0x422ba5
  422b94:	mov    eax,0xe0453f19
  422b99:	dec    bl
  422b9b:	(bad)  
  422b9d:	out    0xb1,al
  422b9f:	mov    bl,0xd5
  422ba1:	or     cl,BYTE PTR [edi]
  422ba3:	int3   
  422ba4:	lock out 0x80,eax
  422ba7:	xlat   BYTE PTR ds:[ebx]
  422ba8:	je     0x422c21
  422baa:	or     DWORD PTR [ebx+ebx*8],0x881c9636
  422bb1:	sar    BYTE PTR [eax],0x93
  422bb4:	add    al,0x2
  422bb6:	adc    edx,ebp
  422bb8:	xor    al,0x64
  422bba:	cs out dx,eax
  422bbc:	mov    ?,WORD PTR [ebx+0x470fc7c]
  422bc2:	shl    edi,cl
  422bc4:	mov    esi,0x9ceb7e97
  422bc9:	out    0xc4,eax
  422bcb:	mov    DWORD PTR [ecx],edi
  422bcd:	call   0xd7de:0xfff7dc89
  422bd4:	sub    edi,DWORD PTR [ebp-0x5e98af38]
  422bda:	add    esp,eax
  422bdc:	jo     0x422bcd
  422bde:	mov    al,0x1d
  422be0:	mov    edi,0x951bd803
  422be5:	jg     0x422ba7
  422be7:	cdq    
  422be8:	jo     0x422ba6
  422bea:	mov    esp,0xd9b829d7
  422bef:	out    dx,eax
  422bf0:	mov    cl,0xd5
  422bf2:	mov    ds:0x3216880f,eax
  422bf7:	lods   eax,DWORD PTR ds:[esi]
  422bf8:	outs   dx,DWORD PTR ds:[esi]
  422bf9:	cmp    al,0x3e
  422bfb:	xchg   edx,eax
  422bfc:	into   
  422bfd:	addr16 lahf 
  422bff:	cmp    bl,BYTE PTR es:[esi+0x7351a905]
  422c06:	mov    cl,0x67
  422c08:	jmp    0xe1da:0x320fb6de
  422c0f:	xlat   BYTE PTR ds:[ebx]
  422c10:	test   DWORD PTR [esi+0x4861053],0x9d880d7d
  422c1a:	xor    eax,0x837b7bc2
  422c1f:	dec    edi
  422c20:	das    
  422c21:	addr16 xchg ebx,eax
  422c23:	shr    DWORD PTR [esi+0x6c],cl
  422c26:	ficomp DWORD PTR [ebx-0x674e440a]
  422c2c:	jo     0x422bbc
  422c2e:	stos   BYTE PTR es:[edi],al
  422c2f:	dec    eax
  422c30:	inc    edx
  422c31:	sbb    BYTE PTR [ebp-0x29],ah
  422c34:	sub    eax,0xdb2f7eaf
  422c39:	ja     0x422bf6
  422c3b:	cmp    eax,0x90863788
  422c40:	das    
  422c41:	stos   BYTE PTR es:[edi],al
  422c42:	mov    al,0xe2
  422c44:	test   DWORD PTR [edi-0x55],esp
  422c47:	sti    
  422c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c49:	and    ebp,edx
  422c4b:	mov    ecx,0x42b22fd6
  422c50:	sub    BYTE PTR [edx+0x39],dh
  422c53:	push   esp
  422c54:	mov    ah,0xa7
  422c56:	xchg   ecx,eax
  422c57:	aaa    
  422c58:	gs addr16 fwait
  422c5b:	jmp    0x422c3b
  422c5d:	daa    
  422c5e:	imul   esp,esi,0x43b1e75b
  422c64:	ins    BYTE PTR es:[edi],dx
  422c65:	fs dec ebp
  422c67:	repz mov esi,0xa7d812ed
  422c6d:	and    eax,0x1448d12b
  422c72:	push   ss
  422c73:	int3   
  422c74:	jno    0x422bfb
  422c76:	mov    dh,0x5e
  422c78:	fdivr  QWORD PTR [eax]
  422c7a:	pop    esp
  422c7b:	test   eax,0x7bea8cc8
  422c80:	and    DWORD PTR [edi+0x60],0xffffffe8
  422c84:	push   ss
  422c85:	add    bl,cl
  422c87:	or     al,0x71
  422c89:	xchg   ebp,eax
  422c8a:	retf   0x886d
  422c8d:	lds    esp,FWORD PTR [edx]
  422c8f:	repz shrd DWORD PTR ss:[edx+0x78],esi,cl
  422c95:	fs adc ch,cl
  422c98:	push   0x284fa248
  422c9d:	fild   DWORD PTR [eax+0x56bb88b9]
  422ca3:	sub    al,0xbd
  422ca5:	fidiv  DWORD PTR [edx]
  422ca7:	xor    eax,0x558567f7
  422cac:	adc    BYTE PTR [edi],ch
  422cae:	jp     0x422c67
  422cb0:	cmp    dh,ch
  422cb2:	mov    DWORD PTR [edx-0x80],esi
  422cb5:	out    0x89,eax
  422cb7:	cmp    DWORD PTR [eax+0x47],esi
  422cba:	cmp    cl,ch
  422cbc:	aaa    
  422cbd:	pop    es
  422cbe:	cmc    
  422cbf:	(bad)  
  422cc0:	xlat   BYTE PTR ds:[ebx]
  422cc1:	(bad)  
  422cc2:	push   ebp
  422cc3:	cmp    eax,0xb1fb18
  422cc8:	or     DWORD PTR ss:[edi+0x12],edi
  422ccc:	fmul   DWORD PTR [eax+0x5cfad998]
  422cd2:	test   BYTE PTR [ecx-0x17814bf8],bl
  422cd8:	adc    al,0x66
  422cda:	mov    ah,0x6d
  422cdc:	mov    eax,0x8fd8f9a
  422ce1:	ror    BYTE PTR [ecx-0x40985851],1
  422ce7:	retf   
  422ce8:	daa    
  422ce9:	popa   
  422cea:	iret   
  422ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cec:	jno    0x422c80
  422cee:	jno    0x422d69
  422cf0:	(bad)  
  422cf1:	cli    
  422cf2:	lsl    edi,cx
  422cf5:	popaw  
  422cf7:	(bad)  
  422cf8:	(bad)  
  422cf9:	gs jbe 0x422d2d
  422cfc:	add    al,0x17
  422cfe:	pop    ebp
  422cff:	pop    edx
  422d00:	cld    
  422d01:	adc    esi,DWORD PTR [ecx+0x25d2f68d]
  422d07:	pop    edi
  422d08:	enter  0xba9c,0xd7
  422d0c:	rcl    DWORD PTR [ebp+0x8da983a],0xf7
  422d13:	sbb    DWORD PTR [eax+0x4dd5e55b],ecx
  422d19:	sbb    edi,ebp
  422d1b:	push   ds
  422d1c:	mov    dl,0x67
  422d1e:	pop    ds
  422d1f:	mov    ecx,0xdf21365f
  422d24:	xor    BYTE PTR [eax+0x387f1ca],0x18
  422d2b:	adc    ebx,esp
  422d2d:	cmp    al,0xe2
  422d2f:	std    
  422d30:	pop    esp
  422d31:	xchg   ebp,eax
  422d32:	xchg   edx,eax
  422d33:	fsub   DWORD PTR [ebx+0x55]
  422d36:	xor    DWORD PTR ds:0x2128d668,eax
  422d3c:	push   eax
  422d3d:	(bad)  
  422d3e:	mov    cl,0xbb
  422d40:	mov    al,ds:0x3f85bbbf
  422d45:	mov    ecx,0x67182736
  422d4a:	xchg   BYTE PTR ds:0xc5317452,cl
  422d50:	out    dx,al
  422d51:	add    DWORD PTR [ecx+0x2f3660c7],esi
  422d57:	(bad)  
  422d58:	jecxz  0x422dd0
  422d5a:	xchg   edi,edx
  422d5c:	cmp    edx,DWORD PTR [ecx]
  422d5e:	inc    ebx
  422d5f:	out    0x57,al
  422d61:	popa   
  422d62:	cmp    al,0x1d
  422d64:	mov    BYTE PTR [edx],cl
  422d66:	stos   DWORD PTR es:[edi],eax
  422d67:	fbstp  TBYTE PTR [edi+0x20]
  422d6a:	xor    al,0x45
  422d6c:	or     al,0x7b
  422d6e:	mov    edi,0x5ce71fb1
  422d73:	test   BYTE PTR [ebx-0x77eb0c41],0xd2
  422d7a:	xor    eax,0x150f1784
  422d7f:	push   edi
  422d80:	ficom  DWORD PTR [edx]
  422d82:	hlt    
  422d83:	xlat   BYTE PTR ds:[ebx]
  422d84:	mov    al,0x44
  422d86:	sti    
  422d87:	cmp    dh,BYTE PTR gs:[ebp-0x6]
  422d8b:	or     ecx,DWORD PTR [eax+0x7851a95b]
  422d91:	add    edx,ecx
  422d93:	arpl   WORD PTR [edi+eiz*2-0x4e157eec],ax
  422d9a:	sub    dh,BYTE PTR [eax-0x1a]
  422d9d:	jae    0x422d50
  422d9f:	or     BYTE PTR [ebx+0xc7f7389],bl
  422da5:	outs   dx,DWORD PTR ds:[esi]
  422da6:	xchg   esp,eax
  422da7:	fstp   DWORD PTR [eax+0x27]
  422daa:	push   edi
  422dab:	jns    0x422d35
  422dad:	rcl    eax,cl
  422daf:	div    BYTE PTR [esi+0x35]
  422db2:	mov    cl,0x21
  422db4:	mov    ds:0xaa8752a8,al
  422db9:	and    DWORD PTR [edi+edx*8],edi
  422dbc:	pop    edi
  422dbd:	sub    al,0xac
  422dbf:	jo     0x422e2d
  422dc1:	mov    al,ds:0x2d88cd7b
  422dc6:	scas   al,BYTE PTR es:[edi]
  422dc7:	push   ebp
  422dc8:	dec    ebx
  422dc9:	jl     0x422d5a
  422dcb:	fisubr DWORD PTR [edx-0x1c36429b]
  422dd1:	loopne 0x422e02
  422dd3:	pushf  
  422dd4:	enter  0xdf64,0xea
  422dd8:	mov    BYTE PTR [ebp+0x3d],dh
  422ddb:	sbb    edi,eax
  422ddd:	sub    ah,BYTE PTR [esi]
  422ddf:	ins    DWORD PTR es:[edi],dx
  422de0:	sbb    BYTE PTR [esi],0xf2
  422de3:	xlat   BYTE PTR ds:[ebx]
  422de4:	call   DWORD PTR [edx-0x23f52d09]
  422dea:	xor    dl,BYTE PTR [ebx+0x502a939c]
  422df0:	or     BYTE PTR [ecx-0x58b04a86],al
  422df6:	cwde   
  422df7:	xlat   BYTE PTR ds:[ebx]
  422df8:	inc    ebp
  422df9:	mov    dh,0x30
  422dfb:	jnp    0x422e2c
  422dfd:	repz out 0x59,al
  422e00:	mov    BYTE PTR [edx-0x57],bh
  422e03:	rcl    DWORD PTR [ebx+0x430362c6],1
  422e09:	pop    eax
  422e0a:	mov    edx,0xbe191678
  422e0f:	xlat   BYTE PTR ds:[ebx]
  422e10:	add    eax,0xe0084766
  422e15:	fnstenv [ecx+0x7cb9d951]
  422e1b:	iret   
  422e1c:	xor    BYTE PTR [ecx+ecx*1-0x33ccf129],bh
  422e23:	(bad)  
  422e24:	mov    bl,BYTE PTR [ebx+0x4d]
  422e27:	mov    edx,0x711e2f88
  422e2c:	cdq    
  422e2d:	pop    eax
  422e2e:	fld    DWORD PTR [ecx]
  422e30:	xchg   DWORD PTR [edi+0x65],esp
  422e33:	jmp    0x6da:0xf566c4a
  422e3a:	scas   al,BYTE PTR es:[edi]
  422e3b:	rol    BYTE PTR [edi+ebp*8-0xe9dcd4f],cl
  422e42:	push   es
  422e43:	dec    ebx
  422e44:	inc    ebp
  422e45:	aas    
  422e46:	enter  0x889c,0x26
  422e4a:	lods   al,BYTE PTR ds:[esi]
  422e4b:	mov    edx,0x89e45eca
  422e50:	rcl    bl,0x94
  422e53:	iret   
  422e54:	arpl   bx,bx
  422e56:	pop    ebp
  422e57:	xchg   ebp,eax
  422e58:	sbb    BYTE PTR [eax+edi*4+0x37],bl
  422e5c:	sub    DWORD PTR [esi-0x29b3567e],0x878bbb49
  422e66:	sysexit 
  422e68:	mov    BYTE PTR [edi],cl
  422e6a:	pop    es
  422e6b:	outs   dx,BYTE PTR ds:[esi]
  422e6c:	dec    BYTE PTR [edx]
  422e6e:	not    dl
  422e70:	and    DWORD PTR [esi+0x35],ebp
  422e73:	(bad)  
  422e74:	scas   eax,DWORD PTR es:[edi]
  422e75:	pop    ebp
  422e76:	mov    bh,0x13
  422e78:	jnp    0x422e4d
  422e7a:	mov    dl,0xac
  422e7c:	mov    ebx,0xe679edb6
  422e81:	xchg   edi,eax
  422e82:	pop    ebx
  422e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e84:	jno    0x422ef3
  422e86:	add    ebp,DWORD PTR [esi]
  422e88:	xchg   edi,eax
  422e89:	mov    cl,0x44
  422e8b:	xlat   BYTE PTR ds:[ebx]
  422e8c:	mov    ebp,0xd0d3afcd
  422e91:	pop    es
  422e92:	mov    al,0xb1
  422e94:	test   eax,0xfdc487a0
  422e99:	loope  0x422ee0
  422e9b:	scas   eax,DWORD PTR es:[edi]
  422e9c:	pop    esp
  422e9d:	addr16 mov ecx,?
  422ea0:	inc    ebx
  422ea1:	ret    0xca99
  422ea4:	or     eax,DWORD PTR [ecx+0x11d61fb1]
  422eaa:	popf   
  422eab:	mov    dh,BYTE PTR [ecx]
  422ead:	push   0x7107d713
  422eb2:	inc    ecx
  422eb3:	xchg   bh,bh
  422eb5:	cmp    ebp,DWORD PTR [ebx+eiz*2-0x42]
  422eb9:	sbb    al,0x7f
  422ebb:	xlat   BYTE PTR ds:[ebx]
  422ebc:	pusha  
  422ebd:	xchg   BYTE PTR [ebx+0x5191e0b1],dl
  422ec3:	ror    cl,1
  422ec5:	daa    
  422ec6:	add    edi,DWORD PTR es:[eax-0x69]
  422eca:	into   
  422ecb:	iret   
  422ecc:	and    ah,BYTE PTR [esi+0x510fd2b1]
  422ed2:	bound  edi,QWORD PTR [edx-0x28444901]
  422ed8:	in     al,dx
  422ed9:	inc    ebx
  422eda:	mov    al,BYTE PTR [edx]
  422edc:	push   es
  422edd:	mov    WORD PTR [ebx-0x7bde7784],gs
  422ee3:	sbb    ebx,ecx
  422ee5:	xchg   edx,eax
  422ee6:	sbb    al,0xb5
  422ee8:	xchg   BYTE PTR [eax-0xc],bh
  422eeb:	not    DWORD PTR [esi-0x452d4da0]
  422ef1:	addr16 (bad) 
  422ef3:	gs stc 
  422ef5:	dec    esi
  422ef6:	mov    cl,0x84
  422ef8:	inc    edi
  422ef9:	sub    eax,eax
  422efb:	or     eax,0xd7f55ee2
  422f00:	imul   edi,DWORD PTR [ebx],0x8d0504a2
  422f06:	call   0x2476c9a5
  422f0b:	hlt    
  422f0c:	dec    eax
  422f0d:	push   esp
  422f0e:	dec    ebx
  422f0f:	push   edi
  422f10:	or     eax,0xecd05da5
  422f15:	inc    ebp
  422f16:	cli    
  422f17:	xchg   esi,eax
  422f18:	into   
  422f19:	or     al,0x31
  422f1b:	and    BYTE PTR [ebp+ecx*1-0x3f24eb9c],dh
  422f22:	(bad)  
  422f23:	xlat   BYTE PTR ds:[ebx]
  422f24:	pusha  
  422f25:	test   BYTE PTR [edx],ah
  422f27:	xor    BYTE PTR [ebx-0x7428b3e0],dl
  422f2d:	or     bh,BYTE PTR [eax+eax*2-0x3b]
  422f31:	ret    0xdd34
  422f34:	(bad)  
  422f35:	int3   
  422f36:	mov    al,0xa8
  422f38:	addr16 push si
  422f3b:	add    BYTE PTR ds:0x45a53d4d,ah
  422f41:	addr16 mov ebp,0xba7b42f2
  422f47:	push   ecx
  422f48:	loop   0x422ef9
  422f4a:	lods   al,BYTE PTR ds:[esi]
  422f4b:	loopne 0x422f35
  422f4d:	jl     0x422f00
  422f4f:	mov    ebp,0x4b98556d
  422f54:	sub    esp,DWORD PTR [edi-0x15]
  422f57:	shr    DWORD PTR [eax],0xc5
  422f5a:	jne    0x97f3f0f8
  422f60:	pop    esp
  422f61:	neg    DWORD PTR [ebx-0x19]
  422f64:	push   ebx
  422f65:	in     al,dx
  422f66:	sbb    eax,0xb17a2be9
  422f6b:	retf   
  422f6c:	dec    ebx
  422f6d:	cmp    edi,DWORD PTR [ecx-0x4e58af25]
  422f73:	iret   
  422f74:	ins    DWORD PTR es:[edi],dx
  422f75:	test   bh,0x40
  422f78:	jmp    FWORD PTR [esp+esi*4]
  422f7b:	retf   0x147
  422f7e:	call   0x2f87ae9a
  422f83:	popa   
  422f84:	or     ebp,DWORD PTR [ebp+ecx*2-0x61]
  422f88:	mov    edx,0x1748fb8a
  422f8d:	imul   esi,DWORD PTR [ecx+0x6938eae8],0x7760f214
  422f97:	sub    al,0x93
  422f99:	sbb    DWORD PTR [ecx+0x3f471996],edi
  422f9f:	sub    esi,DWORD PTR [edx]
  422fa1:	jl     0x422ffe
  422fa3:	xor    eax,DWORD PTR [edi-0x2d0b8aa9]
  422fa9:	dec    ebx
  422faa:	shl    DWORD PTR [ecx],cl
  422fac:	cmp    BYTE PTR [eax-0x3fec2824],0x68
  422fb3:	pop    esp
  422fb4:	icebp  
  422fb5:	pop    es
  422fb6:	jns    0x42301d
  422fb8:	mov    ah,bl
  422fba:	loope  0x422f86
  422fbc:	ds out 0xc2,eax
  422fbf:	inc    DWORD PTR [ecx-0x46]
  422fc2:	pop    esi
  422fc3:	xlat   BYTE PTR ds:[ebx]
  422fc4:	test   bh,cl
  422fc6:	out    dx,al
  422fc7:	jl     0x422f7b
  422fc9:	mov    eax,ds:0xf09c916a
  422fce:	jns    0x422f73
  422fd0:	mov    bl,bh
  422fd2:	adc    eax,0x63fa2208
  422fd7:	sub    ebp,DWORD PTR [ecx+0x429e2f7a]
  422fdd:	out    0x6d,eax
  422fdf:	neg    DWORD PTR [ebp+0x71]
  422fe2:	dec    ecx
  422fe3:	test   DWORD PTR [eax+0x5781cbd0],ecx
  422fe9:	mov    BYTE PTR [ecx+0x4a],dl
  422fec:	dec    esi
  422fed:	pop    edx
  422fee:	in     al,0xfb
  422ff0:	fwait
  422ff1:	adc    eax,0xab21d78d
  422ff6:	xchg   edi,eax
  422ff7:	aas    
  422ff8:	cmp    ecx,edi
  422ffa:	iret   
  422ffb:	jle    0x422f7e
  422ffd:	mov    ecx,0x4d16cf4
  423002:	popa   
  423003:	fnsave [edx+0x19d8752d]
  423009:	sahf   
  42300a:	int    0x72
  42300c:	add    DWORD PTR [eax-0x79dbc8f1],ebp
  423012:	jns    0x423061
  423014:	mov    dl,bh
  423016:	add    al,0xea
  423018:	retf   0x31a6
  42301b:	pusha  
  42301c:	leave  
  42301d:	addr16 fdiv st,st(4)
  423020:	sub    eax,0x557d4158
  423025:	data16 mov dl,0x24
  423028:	in     eax,dx
  423029:	jmp    0xb7f0f9b5
  42302e:	cmc    
  42302f:	outs   dx,DWORD PTR ds:[esi]
  423030:	int    0x65
  423032:	and    al,0xfe
  423034:	jb     0x422ff9
  423036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423037:	jb     0x4230a1
  423039:	leave  
  42303a:	pop    ss
  42303b:	xchg   DWORD PTR [eax-0x524dec1a],ecx
  423041:	adc    ebx,esp
  423043:	mov    gs,edi
  423045:	mov    sp,WORD PTR [edx]
  423048:	arpl   WORD PTR [edi-0x60aa5d56],si
  42304e:	dec    edi
  42304f:	add    BYTE PTR [eax+0x1f8d6d48],cl
  423055:	push   ebp
  423056:	dec    esi
  423057:	dec    esp
  423058:	mov    ah,0x67
  42305a:	xchg   ebp,eax
  42305b:	arpl   WORD PTR [ebx],bp
  42305d:	aas    
  42305e:	pop    ss
  42305f:	pop    es
  423060:	pop    es
  423061:	scas   al,BYTE PTR es:[edi]
  423062:	mov    cl,0xbd
  423064:	mov    DWORD PTR [ebp+edx*2-0x5a8df7d6],ecx
  42306b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42306c:	test   DWORD PTR [edi-0x5],esp
  42306f:	je     0x4230e6
  423071:	mov    DWORD PTR [ecx],edx
  423073:	inc    edi
  423074:	test   BYTE PTR [edi+eiz*4-0x7c],0x70
  423079:	cmp    esi,DWORD PTR [ecx-0x4d8f66bc]
  42307f:	mov    eax,ds:0x7dfc5f0a
  423084:	mov    DWORD PTR [ebx],ebx
  423086:	call   0x464c38f1
  42308b:	daa    
  42308c:	loope  0x423078
  42308e:	mov    dh,0xe3
  423090:	in     eax,0x31
  423092:	cwde   
  423093:	in     eax,0xe8
  423095:	icebp  
  423096:	pop    es
  423097:	shl    BYTE PTR [edx+0x1f],cl
  42309a:	clc    
  42309b:	sar    DWORD PTR [ebx-0x7997092a],0xb9
  4230a2:	inc    edx
  4230a3:	mov    al,0x2e
  4230a5:	out    0x53,eax
  4230a7:	in     al,0x31
  4230a9:	sub    cl,BYTE PTR [edi+edx*8-0xe]
  4230ad:	test   esp,0xe69cb183
  4230b3:	mov    al,ds:0x64854487
  4230b8:	ds pop esp
  4230ba:	inc    esp
  4230bb:	mov    eax,0xd7ff8a7c
  4230c0:	(bad)  
  4230c1:	sub    BYTE PTR [edi+0x19b8049],cl
  4230c7:	jbe    0x423051
  4230c9:	retf   0x216c
  4230cc:	inc    esp
  4230cd:	pop    eax
  4230ce:	push   0xc36723dd
  4230d3:	adc    BYTE PTR [edx-0x44afff47],ah
  4230d9:	pop    esp
  4230da:	mov    BYTE PTR [eax-0x4b789840],cl
  4230e0:	cmc    
  4230e1:	enter  0x4450,0xb0
  4230e5:	addr16 and eax,0x31953fcf
  4230eb:	fnsave [ebx+eiz*4]
  4230ee:	mov    cl,0xf7
  4230f0:	pop    edx
  4230f1:	loope  0x42311c
  4230f3:	fcom   DWORD PTR [ebp-0x3]
  4230f6:	adc    edi,0xffffffd5
  4230f9:	sub    al,0xc5
  4230fb:	or     DWORD PTR [edx+edx*8],0xd8700315
  423102:	retf   0xb93a
  423105:	jecxz  0x423089
  423107:	xlat   BYTE PTR ds:[ebx]
  423108:	inc    BYTE PTR [ecx]
  42310a:	and    al,BYTE PTR ds:0x2d209af9
  423110:	xlat   BYTE PTR ds:[ebx]
  423111:	js     0x423164
  423113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423114:	cmp    eax,0x49705020
  423119:	xchg   edi,eax
  42311a:	das    
  42311b:	push   edx
  42311c:	add    eax,0x88d95302
  423121:	push   ecx
  423122:	cmp    bh,BYTE PTR [ebx-0x2f6f9d46]
  423128:	in     eax,0x67
  42312a:	fisub  WORD PTR [ebp+0x7ce0cad3]
  423130:	cmp    cl,al
  423132:	retf   0x88d5
  423135:	jmp    0x423139
  423137:	mov    al,0x26
  423139:	mov    ebx,0x65b01f3c
  42313e:	mov    eax,ds:0x22683bc0
  423143:	dec    esi
  423144:	out    0x67,eax
  423146:	test   DWORD PTR [bx+di],0x934dbe1d
  42314d:	jmp    0x4230da
  42314f:	sub    al,BYTE PTR [ecx-0x479d4f7b]
  423155:	fdivr  st(0),st
  423157:	sub    BYTE PTR [ebp-0x6bca2775],bl
  42315d:	addr16 mov eax,0x9b47ebb6
  423163:	xor    BYTE PTR gs:[eax-0x4f],ch
  423167:	(bad)  
  423169:	stos   BYTE PTR es:[edi],al
  42316a:	and    eax,0xde82c6c4
  42316f:	xlat   BYTE PTR ds:[ebx]
  423170:	sub    DWORD PTR [ecx-0x7d],ebx
  423173:	sbb    eax,0x4d3e882
  423178:	xchg   BYTE PTR [ecx],al
  42317a:	retf   
  42317b:	sub    BYTE PTR [esi+ecx*2-0x1ea4c818],bl
  423182:	(bad)  
  423183:	xlat   BYTE PTR ds:[ebx]
  423184:	popa   
  423185:	sbb    BYTE PTR [esp+edx*1],ah
  423188:	add    al,0x21
  42318b:	sub    cl,BYTE PTR [eax-0x159824bc]
  423191:	and    ch,BYTE PTR [ecx+0x4367d563]
  423197:	int3   
  423198:	pop    ds
  423199:	push   edi
  42319a:	stos   DWORD PTR es:[edi],eax
  42319b:	ss and eax,0xd8ecb287
  4231a1:	shr    DWORD PTR ds:0xf1b0cc2e,1
  4231a7:	cmp    eax,0xd201eace
  4231ac:	jp     0x423145
  4231ae:	test   al,0xd9
  4231b0:	cmp    al,0xe7
  4231b2:	pop    ecx
  4231b3:	test   eax,0x138e6fef
  4231b8:	dec    ecx
  4231b9:	out    0x68,eax
  4231bb:	sti    
  4231bc:	mov    ebp,0x6b512fc
  4231c1:	addr16 push cs
  4231c3:	mov    eax,0xcb01fd3a
  4231c8:	inc    eax
  4231c9:	or     eax,0xc8f7f3b1
  4231ce:	and    al,BYTE PTR [ebp-0x2818b2d1]
  4231d4:	aaa    
  4231d5:	mov    ebp,edi
  4231d7:	and    DWORD PTR [esi-0x5d],esi
  4231da:	retf   
  4231db:	push   ebp
  4231dc:	mov    BYTE PTR [ecx-0x5f048c60],bl
  4231e2:	sar    edi,1
  4231e4:	jnp    0x42324e
  4231e6:	ret    
  4231e7:	inc    esi
  4231e8:	pop    ecx
  4231e9:	loope  0x42319b
  4231eb:	ret    0x4d46
  4231ee:	inc    ebp
  4231ef:	and    edx,DWORD PTR [edx-0x54404e0f]
  4231f5:	fld    TBYTE PTR [ebx+esi*1-0x28a05062]
  4231fc:	dec    ecx
  4231fd:	and    DWORD PTR [edx],edx
  4231ff:	add    BYTE PTR ds:0x889e1c2c,dl
  423205:	xchg   edi,eax
  423206:	not    BYTE PTR [esi-0x5c]
  423209:	sub    ah,BYTE PTR [ecx+0x45]
  42320c:	scas   eax,DWORD PTR es:[edi]
  42320d:	addr16 ffreep st(5)
  423210:	es push cs
  423212:	jae    0x423208
  423214:	in     eax,0x1d
  423216:	mov    cl,0x1d
  423218:	inc    edi
  423219:	mov    dh,0x1f
  42321b:	push   cs
  42321c:	inc    eax
  42321d:	ins    DWORD PTR es:[edi],dx
  42321e:	in     al,0xf9
  423220:	ficom  WORD PTR [esp-0xafc9c29]
  423227:	jg     0x4232a5
  423229:	mov    ?,WORD PTR [eax+0x68417bbf]
  42322f:	inc    edx
  423230:	ret    
  423231:	jmp    0x680d50a3
  423236:	pushf  
  423237:	adc    ah,dh
  423239:	xor    DWORD PTR [eax],ebp
  42323b:	adc    ebx,edi
  42323d:	jecxz  0x4231f0
  42323f:	xor    bl,BYTE PTR [ecx-0x79a9278d]
  423245:	fsub   DWORD PTR [edi-0x3c]
  423248:	rol    DWORD PTR [esi+0x1165d70b],0x4d
  42324f:	test   BYTE PTR [edi],dh
  423251:	daa    
  423252:	lea    ecx,ds:0xdad96762
  423258:	inc    eax
  423259:	xor    eax,0x67a72c59
  42325e:	add    DWORD PTR [edx],esi
  423260:	inc    esi
  423261:	clc    
  423262:	rol    DWORD PTR [esi-0x29],cl
  423265:	and    DWORD PTR [ecx+0x8adcd63],esi
  42326b:	jl     0x42326d
  42326d:	jmp    0x42324b
  42326f:	xlat   BYTE PTR ds:[ebx]
  423270:	inc    edx
  423271:	fucomp st(6)
  423273:	mov    dh,0xe8
  423275:	jg     0x423201
  423277:	mov    DWORD PTR [esi-0x5a],esp
  42327a:	mov    cl,0x52
  42327c:	sbb    ebx,edi
  42327e:	repz mov WORD PTR [edx-0x4617ed15],ds
  423285:	fidivr DWORD PTR [esi]
  423287:	xor    BYTE PTR [edx],0xd3
  42328a:	xor    DWORD PTR [eax],eax
  42328c:	pop    eax
  42328d:	(bad)  
  42328e:	mov    esi,DWORD PTR [edx-0x14282f77]
  423294:	sub    eax,0xee08cc87
  423299:	les    ebp,FWORD PTR [edi-0x1524ca29]
  42329f:	and    esp,esp
  4232a1:	je     0x4232c8
  4232a3:	inc    esi
  4232a4:	mov    BYTE PTR [edi+0x7738a9e9],ah
  4232aa:	in     eax,0xe3
  4232ac:	jle    0x423315
  4232ae:	pop    DWORD PTR [ecx-0xba4c9ca]
  4232b4:	jp     0x4232cc
  4232b6:	mov    al,0x98
  4232b8:	jo     0x42329f
  4232ba:	sbb    BYTE PTR gs:[esi-0x7f57a6c6],dl
  4232c1:	addr16 call 0xf2f1:0xc8893533
  4232c9:	mov    ebx,0x61afbdb1
  4232ce:	cmp    esi,DWORD PTR [ecx-0x28111442]
  4232d4:	outs   dx,DWORD PTR ds:[esi]
  4232d5:	jge    0x42334d
  4232d7:	lock dec ecx
  4232d9:	mov    ebp,DWORD PTR ds:0xa30c7801
  4232df:	mov    ds:0x7daf7e0d,eax
  4232e4:	enter  0x1be,0xa0
  4232e8:	sub    BYTE PTR [eax+0x2500d773],dh
  4232ee:	jle    0x42333d
  4232f0:	pop    ecx
  4232f1:	loopne 0x42333d
  4232f3:	stos   BYTE PTR es:[edi],al
  4232f4:	xchg   DWORD PTR [ecx],edx
  4232f6:	xor    BYTE PTR [ebx],ch
  4232f8:	dec    ebx
  4232f9:	mov    edx,DWORD PTR [edi]
  4232fb:	mov    eax,0xd7af3a60
  423300:	popf   
  423301:	dec    ecx
  423302:	jmp    0x42330e
  423304:	mov    ebx,0x8820b4c5
  423309:	push   esp
  42330a:	hlt    
  42330b:	outs   dx,BYTE PTR ds:[esi]
  42330c:	xchg   DWORD PTR [edx+edi*1-0x65989c91],ecx
  423313:	xor    DWORD PTR ds:0xace748fa,edx
  423319:	inc    esp
  42331a:	mov    cl,0xbc
  42331c:	inc    ebx
  42331d:	mov    edi,0x79d7211b
  423322:	add    cl,ch
  423324:	mov    esp,0x318c26d8
  423329:	pusha  
  42332a:	imul   dl
  42332c:	in     al,dx
  42332d:	daa    
  42332e:	cmp    ecx,DWORD PTR [esi]
  423330:	aas    
  423331:	and    eax,0xf56d23b6
  423336:	sbb    DWORD PTR [eax+ebp*8-0xe],0x61
  42333b:	mov    al,es:0x6b2eab67
  423341:	lahf   
  423342:	mov    eax,ds:0xb1b3fcd3
  423347:	mov    edi,fs
  423349:	inc    eax
  42334a:	push   edx
  42334b:	stos   BYTE PTR es:[edi],al
  42334c:	and    ebx,edx
  42334e:	dec    edi
  42334f:	xlat   BYTE PTR ds:[ebx]
  423350:	add    ebp,DWORD PTR [eax-0x45452f6c]
  423356:	sub    eax,0xd06fd01a
  42335b:	fmulp  st(7),st
  42335d:	pop    ebx
  42335e:	mov    BYTE PTR [edx],al
  423360:	mov    dh,cl
  423362:	jp     0x4233cd
  423364:	outs   dx,BYTE PTR ds:[esi]
  423365:	repnz mov cl,0x39
  423368:	int3   
  423369:	(bad)
  42336c:	nop
  42336d:	push   esi
  42336e:	adc    dl,al
  423370:	mov    edi,0xb0c7ce33
  423375:	xchg   edi,eax
  423376:	mov    ebx,?
  423378:	jge    0x423399
  42337a:	mov    al,ch
  42337c:	sbb    edi,esp
  42337e:	sub    DWORD PTR [edx-0x63bb0f1a],esi
  423384:	test   eax,0x8e64a267
  423389:	adc    dl,dl
  42338b:	add    al,0x66
  42338d:	xor    BYTE PTR [ecx-0x2cab07a],dh
  423393:	xor    BYTE PTR [edi-0xc455b9],bl
  423399:	aas    
  42339a:	jb     0x423345
  42339c:	mov    bl,al
  42339e:	or     edx,DWORD PTR [ecx]
  4233a0:	out    0x7a,al
  4233a2:	jmp    0x470abc5d
  4233a7:	ror    DWORD PTR ds:0xb4c3da93,cl
  4233ad:	lock or si,WORD PTR gs:[edi+0x51]
  4233b3:	imul   eax,DWORD PTR [eax-0x61],0xc818e0a0
  4233ba:	mov    cl,0x79
  4233bc:	and    eax,0x736e41e4
  4233c1:	mov    dl,0xc4
  4233c3:	shl    DWORD PTR [edi],cl
  4233c5:	jg     0x4233b8
  4233c7:	cld    
  4233c8:	xor    esp,edi
  4233ca:	inc    ebp
  4233cb:	push   0x3d
  4233cd:	jecxz  0x423395
  4233cf:	adc    BYTE PTR [ecx-0x37619011],bl
  4233d5:	jns    0x423426
  4233d7:	inc    edx
  4233d8:	inc    esi
  4233d9:	repz lds esp,FWORD PTR [edx+0x4782956b]
  4233e0:	mov    dl,0x67
  4233e2:	repnz push ebp
  4233e4:	icebp  
  4233e5:	ins    BYTE PTR es:[edi],dx
  4233e6:	idiv   BYTE PTR [esi-0x2]
  4233e9:	pop    ecx
  4233ea:	mov    cl,0x74
  4233ec:	pop    ds
  4233ed:	xchg   ecx,eax
  4233ee:	jbe    0x423412
  4233f0:	push   eax
  4233f1:	sub    ecx,DWORD PTR [ecx-0x13a34e36]
  4233f7:	xchg   esi,eax
  4233f8:	retf   
  4233f9:	inc    esp
  4233fa:	stos   DWORD PTR es:[edi],eax
  4233fb:	fisttp QWORD PTR [ebx+eax*4]
  4233fe:	push   ebx
  4233ff:	scas   al,BYTE PTR es:[edi]
  423400:	mov    dh,bl
  423402:	dec    ecx
  423403:	ds push cs
  423405:	ret    
  423406:	sbb    dh,BYTE PTR ss:[esi]
  423409:	addr16 hlt 
  42340b:	sub    eax,0xc29f333e
  423410:	cdq    
  423411:	ss mov cl,0x5
  423414:	lds    ecx,FWORD PTR [edi]
  423416:	adc    eax,DWORD PTR [ebx]
  423418:	pop    esi
  423419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42341a:	inc    eax
  42341b:	xlat   BYTE PTR ds:[ebx]
  42341c:	jae    0x423457
  42341e:	pop    eax
  42341f:	call   0x6288:0xd139ffd0
  423426:	inc    edx
  423427:	mov    bl,0x34
  423429:	scas   al,BYTE PTR es:[edi]
  42342a:	xchg   BYTE PTR [eax],bl
  42342c:	(bad)  
  42342d:	addr16 xchg esi,eax
  42342f:	stc    
  423430:	ffreep st(5)
  423432:	fwait
  423433:	xchg   edi,eax
  423434:	cli    
  423435:	pop    es
  423436:	mov    cl,0x8
  423438:	add    al,0x5e
  42343a:	push   ebx
  42343b:	add    eax,DWORD PTR [ecx-0x522da691]
  423441:	test   al,0x74
  423443:	cmp    esp,DWORD PTR [ebp-0x3538b020]
  423449:	loop   0x4233d4
  42344b:	jmp    0x42341d
  42344d:	(bad)  
  42344e:	je     0x423427
  423450:	inc    edi
  423451:	adc    BYTE PTR [edx+0x3c],al
  423454:	cmp    BYTE PTR [ebx+0x2a],al
  423457:	xlat   BYTE PTR ds:[ebx]
  423458:	mov    dl,0x74
  42345a:	aas    
  42345b:	cdq    
  42345c:	and    bl,bl
  42345e:	sahf   
  42345f:	pop    ebp
  423460:	mov    BYTE PTR [esi-0x69758cd0],dh
  423466:	(bad)  
  423468:	sbb    ah,BYTE PTR [edi-0x14]
  42346b:	or     edi,ebx
  42346d:	push   edi
  42346e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42346f:	je     0x42347d
  423471:	daa    
  423472:	mov    cl,0x63
  423474:	xchg   edx,esp
  423476:	mov    esp,0x721354de
  42347b:	shr    BYTE PTR [ebx-0x687ed364],1
  423481:	out    0xa3,eax
  423483:	and    bh,BYTE PTR [ecx+0x4aa7b1f5]
  423489:	sbb    al,0x7c
  42348b:	aaa    
  42348c:	lahf   
  42348d:	lahf   
  42348e:	repz shl BYTE PTR [esi+0x3556dacb],1
  423495:	xchg   esp,eax
  423496:	add    bl,bl
  423498:	inc    eax
  423499:	sub    al,0xea
  42349b:	outs   dx,DWORD PTR ds:[esi]
  42349c:	pushf  
  42349d:	stos   DWORD PTR es:[edi],eax
  42349e:	int3   
  42349f:	fwait
  4234a0:	test   DWORD PTR [edi],esi
  4234a2:	aad    0x28
  4234a4:	mov    bl,0xe1
  4234a6:	mov    dl,0x39
  4234a8:	movhps QWORD PTR [edi+ebx*2-0x20be584b],xmm2
  4234b0:	mov    BYTE PTR [edi],dh
  4234b2:	hlt    
  4234b3:	xchg   esp,eax
  4234b4:	jmp    0xe5f8f5c3
  4234b9:	pop    edi
  4234ba:	(bad)
  4234bd:	inc    esi
  4234be:	loopne 0x4234d2
  4234c0:	push   0x51
  4234c2:	cmp    al,0xe
  4234c4:	pushf  
  4234c5:	push   eax
  4234c6:	sub    cl,al
  4234c8:	enter  0x1e8,0x8
  4234cc:	pop    ebp
  4234cd:	adc    al,0x79
  4234cf:	fsub   QWORD PTR [ecx+0x22]
  4234d2:	clc    
  4234d3:	or     BYTE PTR [eax],0x24
  4234d6:	into   
  4234d7:	cwde   
  4234d8:	aam    0xc0
  4234da:	mov    cl,0xbb
  4234dc:	adc    dl,ah
  4234de:	leave  
  4234df:	pop    esi
  4234e0:	cld    
  4234e1:	adc    eax,0xfa01d771
  4234e6:	mov    edx,0xf3025cb6
  4234eb:	sub    cl,BYTE PTR [eax+0x7408214d]
  4234f1:	ds xchg dl,dh
  4234f4:	daa    
  4234f5:	adc    BYTE PTR [ecx+0x555addd7],al
  4234fb:	lods   eax,DWORD PTR ds:[esi]
  4234fc:	mov    edi,0xfd9a9a06
  423501:	or     al,0xb1
  423503:	outs   dx,BYTE PTR ds:[esi]
  423504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423505:	jb     0x423531
  423507:	repnz xchg esp,eax
  423509:	cwde   
  42350a:	pop    ecx
  42350b:	xlat   BYTE PTR ds:[ebx]
  42350c:	je     0x42355b
  42350e:	pop    esi
  42350f:	dec    edi
  423510:	out    0xba,eax
  423512:	(bad)  
  423513:	xor    BYTE PTR [eax+0x4ebbf578],cl
  423519:	shl    ah,1
  42351b:	pop    esp
  42351c:	xchg   esi,eax
  42351d:	addr16 cmp eax,0xf07da71f
  423523:	shr    DWORD PTR [ecx-0x79374c47],0xbc
  42352a:	or     al,0x6e
  42352c:	pop    esi
  42352d:	out    0x30,eax
  42352f:	pop    edi
  423530:	loop   0x423545
  423532:	push   edx
  423533:	(bad)  
  423534:	mov    al,ds:0xcc50c3f8
  423539:	retf   0xa7a8
  42353c:	jns    0x423518
  42353e:	mov    cl,0x51
  423540:	sbb    esi,DWORD PTR [ebx-0x4d]
  423543:	les    edi,FWORD PTR [edx-0x3c12e6b7]
  423549:	dec    edx
  42354a:	mov    cl,0x3
  42354c:	cli    
  42354d:	mov    WORD PTR [esi+edx*4-0x43],?
  423551:	shl    DWORD PTR [ecx+0xebc9754],cl
  423557:	dec    ecx
  423558:	jecxz  0x4235a7
  42355a:	js     0x423533
  42355c:	fcomp  DWORD PTR [edx-0x3]
  42355f:	fcomp  QWORD PTR [eax+eax*1]
  423562:	(bad)  [ebx+0x18]
  423565:	inc    edi
  423566:	mov    cl,0x7a
  423568:	mov    ds:0x9d0998a6,eax
  42356d:	mov    DWORD PTR [ebx-0x29],edx
  423570:	inc    eax
  423571:	in     al,dx
  423572:	mov    esp,0xeebe22bd
  423577:	outs   dx,BYTE PTR ds:[esi]
  423578:	mov    ecx,0xf9579352
  42357d:	in     al,0xdf
  42357f:	dec    ebx
  423580:	add    al,0x3d
  423582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423583:	aad    0x6
  423585:	pop    edx
  423586:	fwait
  423587:	add    cl,BYTE PTR [edx-0x34]
  42358a:	icebp  
  42358b:	loop   0x4235bd
  42358d:	sub    al,0xb1
  42358f:	(bad)  
  423590:	jecxz  0x423579
  423592:	and    DWORD PTR ds:0xcfe294c7,ecx
  423598:	mov    ebp,0xc18397d1
  42359d:	adc    DWORD PTR [eax-0x1ee3293e],esi
  4235a3:	push   ecx
  4235a4:	push   ebp
  4235a5:	je     0x4235d8
  4235a7:	test   DWORD PTR [edi+ebp*1],ebp
  4235aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235ab:	add    eax,0xff7195cd
  4235b0:	call   0x5417:0x780dd136
  4235b7:	leave  
  4235b8:	adc    esi,DWORD PTR [esi+0x53fd17c2]
  4235be:	fcomp  DWORD PTR [ebx+0x67]
  4235c1:	inc    esi
  4235c2:	mov    cl,0x6f
  4235c4:	xor    DWORD PTR [edi+0x58],edx
  4235c7:	inc    esi
  4235c8:	sub    ecx,ecx
  4235ca:	sbb    al,0x55
  4235cd:	push   eax
  4235ce:	std    
  4235cf:	pushf  
  4235d0:	out    0xd2,al
  4235d2:	inc    edx
  4235d3:	or     BYTE PTR [eax],cl
  4235d5:	mov    ds:0xf6736bf8,eax
  4235da:	mov    cl,0x3b
  4235dc:	sbb    ah,BYTE PTR [esi-0x4d473e62]
  4235e2:	mov    dh,0xc1
  4235e4:	test   al,0xce
  4235e6:	ds leave 
  4235e8:	mov    al,ds:0x54614fa7
  4235ed:	cmp    BYTE PTR [edx-0x47],bh
  4235f0:	mov    BYTE PTR [ebp+ebx*4-0x682f2585],dh
  4235f7:	lock push ds
  4235f9:	addr16 and ch,dl
  4235fc:	sbb    al,0x10
  4235fe:	pushf  
  4235ff:	cld    
  423600:	fcom   DWORD PTR [ecx+esi*4+0x29bd2504]
  423607:	or     DWORD PTR [edi+eiz*1+0x72],edi
  42360b:	aam    0x8
  42360d:	adc    eax,0x2923a2dd
  423612:	sbb    edi,DWORD PTR [edx-0x154e9f2e]
  423618:	(bad)  
  423619:	xor    DWORD PTR [esi+0x2f],0x8e0167e9
  423620:	test   eax,0x6f3842ae
  423625:	std    
  423626:	mov    cl,0x77
  423628:	ret    0xd97a
  42362b:	adc    edi,DWORD PTR [ebx+0x71]
  42362e:	cmp    dl,bh
  423630:	popf   
  423631:	sbb    al,dh
  423633:	adc    DWORD PTR [esi+ebx*1],ebp
  423636:	pop    edx
  423637:	das    
  423638:	mov    cl,cl
  42363a:	ror    BYTE PTR [esi+0x6c94e3fe],0x7
  423641:	sub    esi,DWORD PTR [bp+di+0xe]
  423645:	icebp  
  423646:	test   ebx,edi
  423648:	push   ss
  423649:	add    al,0xe
  42364b:	daa    
  42364c:	add    eax,0x8d9eaf68
  423651:	jmp    0x423644
  423653:	add    dh,BYTE PTR [eax-0x2f]
  423656:	push   ebx
  423657:	hlt    
  423658:	test   DWORD PTR [esp+ebx*4+0x24c8207b],eax
  42365f:	cmp    eax,0x33be742
  423664:	sar    DWORD PTR [eax+edi*4],cl
  423667:	xlat   BYTE PTR ds:[ebx]
  423668:	jg     0x42364b
  42366a:	xor    eax,0xa77fca18
  42366f:	lods   al,BYTE PTR ds:[esi]
  423670:	call   0xaca:0x15d0b3f
  423677:	shr    BYTE PTR [eax+0x74],0x1d
  42367b:	mov    gs,WORD PTR [esi]
  42367d:	outs   dx,BYTE PTR ds:[esi]
  42367e:	ds pusha 
  423680:	test   BYTE PTR [edx+0x48c3a0b1],ch
  423686:	fst    DWORD PTR [edx]
  423688:	pushf  
  423689:	(bad)  
  42368a:	lods   al,BYTE PTR ds:[esi]
  42368b:	push   ds
  42368c:	or     BYTE PTR [esi],bh
  42368e:	push   edi
  42368f:	cmp    al,0x65
  423691:	pop    ecx
  423692:	mov    edx,edi
  423694:	xchg   DWORD PTR [edx+0x27409462],edi
  42369a:	push   ss
  42369b:	dec    esp
  42369c:	mov    BYTE PTR [eax],dl
  42369e:	sti    
  42369f:	ins    DWORD PTR es:[edi],dx
  4236a0:	jle    0x423719
  4236a2:	mov    ebx,esp
  4236a4:	hlt    
  4236a5:	addr16 ret 
  4236a7:	in     al,0x63
  4236a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236aa:	cmp    eax,0xb1b34889
  4236af:	jge    0x423683
  4236b1:	and    al,0x4
  4236b3:	out    0x53,al
  4236b5:	mov    ecx,0xd504d68a
  4236ba:	out    0x68,al
  4236bc:	std    
  4236bd:	mov    ds:0xc3be2f66,al
  4236c2:	mov    cl,0xd0
  4236c4:	jle    0x4236f9
  4236c6:	push   ecx
  4236c7:	adc    ebp,esp
  4236c9:	xchg   ebp,eax
  4236ca:	lahf   
  4236cb:	xlat   BYTE PTR ds:[ebx]
  4236cc:	ins    DWORD PTR es:[edi],dx
  4236cd:	lea    esp,[ebx]
  4236cf:	fadd   QWORD PTR [ebp+ecx*8-0x48]
  4236d3:	das    
  4236d4:	mov    BYTE PTR [ebp+0xf],dh
  4236d7:	in     al,0x1c
  4236d9:	enter  0xcee7,0x25
  4236dd:	add    ebx,DWORD PTR fs:0xed31dff9
  4236e4:	pusha  
  4236e5:	add    cl,BYTE PTR ds:0x82e081bf
  4236eb:	scas   al,BYTE PTR es:[edi]
  4236ec:	mov    es,WORD PTR [ecx+eiz*4-0x2354e6bb]
  4236f3:	ror    BYTE PTR ds:0x2a69629d,1
  4236f9:	aaa    
  4236fa:	aad    0xc3
  4236fc:	jmp    0x3156e83a
  423701:	sbb    bl,BYTE PTR [eax+ecx*2]
  423704:	test   DWORD PTR [edx],eax
  423706:	je     0x4236df
  423708:	repnz or DWORD PTR [esi+0x65cf2e75],ebx
  42370f:	inc    ecx
  423710:	xchg   esi,eax
  423711:	xor    cl,cl
  423713:	mov    esi,0x21b8e39c
  423718:	je     0x423701
  42371a:	sti    
  42371b:	pusha  
  42371c:	leave  
  42371d:	or     BYTE PTR [eax],bh
  42371f:	xlat   BYTE PTR ds:[ebx]
  423720:	stc    
  423721:	in     eax,dx
  423722:	xchg   ebp,eax
  423723:	mov    ebp,0x3ab23578
  423728:	mov    ecx,0x6e5796b4
  42372d:	hlt    
  42372e:	xor    BYTE PTR [edi+edx*4-0x5a2834fb],cl
  423735:	mov    ebx,0x846c5b0c
  42373a:	int    0x41
  42373c:	mov    BYTE PTR [edi],ch
  42373e:	sub    BYTE PTR [edx+edx*8-0x43a01ccc],bh
  423745:	pusha  
  423746:	imul   esp,DWORD PTR [esi-0x4857fcdc],0x3abb5819
  423750:	mov    BYTE PTR [edx],bl
  423752:	push   esi
  423753:	mov    edi,DWORD PTR [eax]
  423755:	sti    
  423756:	mov    ds:0x9b64870a,eax
  42375b:	out    0xcb,eax
  42375d:	xchg   DWORD PTR [ebx+0x294b85a7],ecx
  423763:	xchg   edi,eax
  423764:	and    eax,0x517f39f1
  423769:	repnz xlat BYTE PTR ds:[ebx]
  42376b:	xlat   BYTE PTR ds:[ebx]
  42376c:	in     eax,0x92
  42376e:	retf   
  42376f:	int3   
  423770:	mov    al,ds:0x88dbe161
  423775:	pop    edi
  423776:	outs   dx,BYTE PTR ds:[esi]
  423777:	rol    DWORD PTR [ebx+edx*2-0x4],cl
  42377b:	or     eax,0x61ed6742
  423780:	js     0x423776
  423782:	cmc    
  423783:	pop    ebp
  423784:	cmp    BYTE PTR [ecx-0x4a],ch
  423787:	mov    WORD PTR [edi-0x36],?
  42378a:	int3   
  42378b:	mov    ds:0xb3b54a68,al
  423790:	mov    BYTE PTR [ebp+0x6fdcd702],0x29
  423797:	sbb    cl,BYTE PTR [edx+ebx*2+0x1e]
  42379b:	mov    DWORD PTR [eax+0x2b121652],ecx
  4237a1:	jb     0x423808
  4237a3:	xchg   ebp,eax
  4237a4:	sti    
  4237a5:	lahf   
  4237a6:	mov    al,ds:0x9b7362f9
  4237ab:	xlat   BYTE PTR ds:[ebx]
  4237ac:	fisttp QWORD PTR [esi+0x7bc26112]
  4237b2:	mov    edi,0x20309d8a
  4237b7:	ja     0x42382b
  4237b9:	stos   DWORD PTR es:[edi],eax
  4237ba:	call   0x24aa3780
  4237bf:	and    eax,0x5f0eb3de
  4237c4:	and    eax,0x7407b186
  4237c9:	mulps  xmm1,XMMWORD PTR [ecx+0x6ffd09ee]
  4237d0:	and    DWORD PTR ds:0xff02,eax
  4237d6:	outs   dx,BYTE PTR ds:[esi]
  4237d7:	fld1   
  4237d9:	pop    edi
  4237da:	mov    cl,0xb1
  4237dc:	stos   BYTE PTR es:[edi],al
  4237dd:	leave  
  4237de:	test   BYTE PTR [esi+0x0],cl
  4237e1:	mov    esp,0x113fd085
  4237e6:	outs   dx,DWORD PTR ds:[esi]
  4237e7:	mov    ds:0xdad877b2,al
  4237ec:	pusha  
  4237ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237ee:	rcr    BYTE PTR [ecx],0x88
  4237f1:	imul   ebp,DWORD PTR [eax+ecx*4],0x4b
  4237f5:	push   ebx
  4237f6:	retf   0x32ff
  4237f9:	fs cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4237fc:	mov    edi,0x1897a8a5
  423801:	jmp    0xaec80e99
  423806:	sub    eax,0x57dcb6f8
  42380b:	test   DWORD PTR [bp+si+0x1a],edx
  42380f:	xlat   BYTE PTR ds:[ebx]
  423810:	test   ch,ch
  423812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423813:	shl    BYTE PTR [ecx+0x62ab29d2],cl
  423819:	and    esi,DWORD PTR [ecx+0x59f7da0c]
  42381f:	push   0x16
  423821:	mov    eax,0x3d90d7e4
  423826:	js     0x42380a
  423828:	lahf   
  423829:	jne    0x42389b
  42382b:	add    DWORD PTR [ecx-0x4e80fc76],ecx
  423831:	daa    
  423832:	(bad)  
  423833:	sub    al,0xea
  423835:	lea    esi,[ebp-0x59]
  423838:	(bad)
  42383b:	push   ecx
  42383c:	fs push 0xcb912acc
  423842:	popa   
  423843:	add    ecx,DWORD PTR [eax+0x178a07b6]
  423849:	jle    0x423869
  42384b:	lods   al,BYTE PTR ds:[esi]
  42384c:	les    ebx,FWORD PTR [ecx-0x80]
  42384f:	or     al,0x8
  423851:	mov    al,0xcd
  423853:	mov    ds:0x1d4d1a33,eax
  423858:	(bad)  
  423859:	(bad)  
  42385b:	mov    cl,0x5b
  42385d:	addr16 sbb ebx,edi
  423860:	jbe    0x4237ec
  423862:	mov    edi,0x8f6395d0
  423867:	push   esi
  423868:	mov    al,ds:0x5cc505b6
  42386d:	xchg   edi,eax
  42386e:	bound  esi,QWORD PTR [edi-0x58995c78]
  423874:	mov    esp,0x3082ef2
  423879:	nop
  42387a:	pop    ecx
  42387b:	push   ebp
  42387c:	mov    eax,0xa9412c67
  423881:	dec    esi
  423882:	es ins BYTE PTR es:[edi],dx
  423884:	cli    
  423885:	push   ds
  423886:	mov    cl,0x43
  423888:	adc    BYTE PTR ds:[ebp+ebp*8-0x3489c6fb],dl
  423890:	adc    dh,dl
  423892:	rcl    dh,cl
  423894:	bound  ebp,QWORD PTR [esp+esi*1-0x3770a5d0]
  42389b:	sub    al,0x88
  42389d:	fiadd  DWORD PTR [ecx+0x727868cc]
  4238a3:	cmp    dh,BYTE PTR [ecx+0x67]
  4238a6:	out    0x5a,al
  4238a8:	sbb    eax,0x3d635e1f
  4238ad:	pop    esi
  4238ae:	mov    cl,0x77
  4238b0:	cmp    DWORD PTR ss:[ebx-0x275d82c],edx
  4238b7:	(bad)  
  4238b8:	fsub   QWORD PTR [eax]
  4238ba:	aad    0xc5
  4238bc:	add    esp,ecx
  4238be:	shl    BYTE PTR [edi+0x5db25c2f],cl
  4238c4:	(bad)  
  4238c5:	jge    0x42387c
  4238c7:	mov    ebx,0x1b49e7b1
  4238cc:	dec    edi
  4238cd:	popf   
  4238ce:	into   
  4238cf:	xlat   BYTE PTR ds:[ebx]
  4238d0:	dec    ecx
  4238d1:	popf   
  4238d2:	int    0xb
  4238d4:	xchg   ecx,eax
  4238d5:	int3   
  4238d6:	stos   BYTE PTR es:[edi],al
  4238d7:	jge    0x423862
  4238d9:	mov    ds:0x2747a02e,eax
  4238de:	imul   esp
  4238e0:	retf   0x5a25
  4238e3:	aaa    
  4238e4:	scas   al,BYTE PTR es:[edi]
  4238e5:	pop    esp
  4238e6:	push   ds
  4238e7:	pop    ss
  4238e8:	cdq    
  4238e9:	sbb    al,0xb8
  4238eb:	add    BYTE PTR ds:0xaf020a67,dh
  4238f1:	aaa    
  4238f2:	scas   eax,DWORD PTR es:[edi]
  4238f3:	adc    edi,DWORD PTR [eax]
  4238f5:	pop    es
  4238f6:	jno    0x42392f
  4238f8:	es aad 0x74
  4238fb:	lahf   
  4238fc:	fldenv [edi-0x22]
  4238ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423900:	sub    edx,DWORD PTR [ecx]
  423902:	call   0xb1797ffe
  423907:	push   es
  423908:	clc    
  423909:	clc    
  42390a:	addr16 cdq 
  42390c:	mov    bl,0xd0
  42390e:	lock xlat BYTE PTR ds:[ebx]
  423910:	xchg   ebp,eax
  423911:	xor    DWORD PTR ds:0xdeccebe4,eax
  423917:	mov    ecx,0xe5506188
  42391c:	cmp    dl,bl
  42391e:	loopne 0x423995
  423920:	sar    BYTE PTR [eax+0x37],1
  423923:	imul   ebp,DWORD PTR gs:[eax+0x7],0x30
  423928:	dec    eax
  423929:	pop    edi
  42392a:	sbb    cl,BYTE PTR [ebp+0x53b13163]
  423930:	ds pusha 
  423932:	(bad)  
  423933:	xor    eax,0xd6d54665
  423938:	inc    esi
  423939:	xlat   BYTE PTR ds:[ebx]
  42393a:	adc    BYTE PTR [edx-0x2a],0x69
  42393e:	xchg   ecx,eax
  42393f:	adc    esi,DWORD PTR [edx-0x1c]
  423942:	mov    cl,0xcd
  423944:	sub    eax,0xe3568eee
  423949:	rcr    al,cl
  42394b:	xlat   BYTE PTR ds:[ebx]
  42394c:	ret    0x20a
  42394f:	sub    esp,DWORD PTR [esi-0x8]
  423952:	xlat   BYTE PTR ds:[ebx]
  423953:	out    dx,al
  423954:	xchg   DWORD PTR [esi-0x527bb537],edx
  42395a:	mov    ds,WORD PTR [edx+0x50]
  42395d:	xor    eax,0xfc2fd061
  423962:	sahf   
  423963:	fld    DWORD PTR [edi-0x79]
  423966:	fmul   QWORD PTR [edi-0x594fc337]
  42396c:	push   es
  42396d:	lock arpl WORD PTR ds:0x81d13838,cx
  423974:	xor    al,0x5c
  423976:	adc    eax,0x9914dc6b
  42397b:	mov    DWORD PTR [esp+ebx*2],edx
  42397e:	das    
  42397f:	mov    ebp,0x30d24501
  423984:	pusha  
  423985:	xchg   DWORD PTR [eax+0x1b],esp
  423988:	cmp    ch,BYTE PTR [edi+0x59a2f049]
  42398e:	mov    ebx,0xce8a8282
  423993:	inc    ebx
  423994:	and    dl,BYTE PTR ds:0x449fd761
  42399a:	in     al,dx
  42399b:	lods   al,BYTE PTR ds:[esi]
  42399c:	dec    esp
  42399d:	ret    
  42399e:	jl     0x4239dc
  4239a0:	mov    BYTE PTR [ecx+0x5c],dl
  4239a3:	jl     0x423958
  4239a5:	es pop edi
  4239a7:	test   DWORD PTR [edi+0x37d7be13],esp
  4239ad:	jbe    0x4239d2
  4239af:	aas    
  4239b0:	jle    0x4239da
  4239b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239b3:	ret    
  4239b4:	xchg   DWORD PTR [edi-0x1],eax
  4239b7:	ins    BYTE PTR es:[edi],dx
  4239b8:	and    esi,DWORD PTR [edx+0x43489d8b]
  4239be:	ret    
  4239bf:	scas   eax,DWORD PTR es:[edi]
  4239c0:	xor    al,0x71
  4239c2:	mov    bh,0xf5
  4239c4:	je     0x423a3f
  4239c6:	xlat   BYTE PTR ds:[ebx]
  4239c7:	xchg   edi,eax
  4239c8:	shl    BYTE PTR [esi+0x53bbb262],cl
  4239ce:	mov    al,0xbb
  4239d0:	mov    WORD PTR [edx-0x75283725],ds
  4239d6:	(bad)  [edi-0x66]
  4239d9:	xchg   ebx,eax
  4239da:	mov    cl,0xe1
  4239dc:	sbb    edi,ebp
  4239de:	xchg   al,al
  4239e0:	div    BYTE PTR ds:0x1a9cd764
  4239e6:	retf   
  4239e7:	xor    esi,DWORD PTR [eax+0x1f]
  4239ea:	mov    ch,0x67
  4239ec:	mov    BYTE PTR [ebp+edi*2+0x22858eff],ah
  4239f3:	mov    esi,0x6fd36c52
  4239f8:	jnp    0x423a4b
  4239fa:	aaa    
  4239fb:	sbb    eax,0x8a97e3ab
  423a00:	mov    esp,0xdf35bf85
  423a05:	daa    
  423a06:	int3   
  423a07:	jae    0x423a80
  423a09:	int3   
  423a0a:	popf   
  423a0b:	fstp   DWORD PTR ds:0x45120e08
  423a11:	pop    edi
  423a12:	pop    esi
  423a13:	mov    edi,DWORD PTR [eax-0x77]
  423a16:	sbb    esp,DWORD PTR [ecx-0x7f]
  423a19:	aam    0x93
  423a1b:	shl    DWORD PTR [eax+0x31],1
  423a1e:	loope  0x4239ac
  423a20:	in     eax,0x52
  423a22:	fld    st(1)
  423a24:	aam    0x40
  423a26:	pop    ebx
  423a27:	push   esp
  423a28:	pop    esi
  423a29:	rcl    BYTE PTR [ecx+0x7a],0xf9
  423a2d:	(bad)  
  423a2e:	mov    cl,0xfb
  423a30:	xchg   edi,eax
  423a31:	scas   al,BYTE PTR es:[edi]
  423a32:	mul    BYTE PTR [esi]
  423a34:	pop    esi
  423a35:	xor    eax,0x11fcd74a
  423a3a:	xor    cl,bl
  423a3c:	add    BYTE PTR [edx+0x35],0x95
  423a40:	mov    BYTE PTR [edi-0x7b],cl
  423a43:	int    0x93
  423a45:	mov    al,ds:0x644a983d
  423a4a:	into   
  423a4b:	and    dh,bl
  423a4d:	(bad)  
  423a4e:	aad    0x3d
  423a50:	adc    dl,ah
  423a52:	test   DWORD PTR [ecx-0x13afb47c],0xdd319e59
  423a5c:	stos   BYTE PTR es:[edi],al
  423a5d:	hlt    
  423a5e:	rcl    edi,0x9b
  423a61:	push   ss
  423a62:	pop    es
  423a63:	push   es
  423a64:	sub    DWORD PTR [ebx],ebp
  423a66:	pop    ss
  423a67:	mov    ah,0xfa
  423a69:	cmc    
  423a6a:	mov    cl,0x5
  423a6c:	inc    ebp
  423a6d:	push   edx
  423a6e:	xchg   esp,eax
  423a6f:	xchg   ebp,eax
  423a70:	fstp   DWORD PTR [esi]
  423a72:	(bad)  
  423a73:	xlat   BYTE PTR ds:[ebx]
  423a74:	rcr    cl,0xa8
  423a77:	aam    0xd8
  423a79:	inc    ebx
  423a7a:	aaa    
  423a7b:	stc    
  423a7c:	xchg   DWORD PTR [esi],edx
  423a7e:	mov    esi,0x5d981b06
  423a83:	sub    BYTE PTR [ebx+ebp*8-0x5f],0xd7
  423a88:	test   al,0x82
  423a8a:	xchg   cl,ah
  423a8c:	sbb    eax,0x888b7bba
  423a91:	and    al,0xcb
  423a93:	aaa    
  423a94:	leave  
  423a95:	mov    esi,0x91406325
  423a9a:	push   ds
  423a9b:	xlat   BYTE PTR ds:[ebx]
  423a9c:	test   eax,0xc7473785
  423aa1:	nop
  423aa2:	pop    ecx
  423aa3:	mov    ds:0x177c9d88,eax
  423aa8:	fcmovu st,st(1)
  423aaa:	jp     0x423a8b
  423aac:	mov    edi,0x4671866
  423ab1:	adc    DWORD PTR [ebx-0x6274c87e],eax
  423ab7:	xor    BYTE PTR [eax-0x7910c0a8],cl
  423abd:	mov    ch,0xd5
  423abf:	inc    esp
  423ac0:	or     al,0x79
  423ac2:	mov    ah,BYTE PTR [edx-0x32]
  423ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ac6:	sub    BYTE PTR [ebp+0xa6d15d0],dl
  423acc:	mov    esp,0xd7d742b7
  423ad1:	mov    ch,0x6f
  423ad3:	push   edx
  423ad4:	xor    BYTE PTR [ecx+0x35f2d7ee],0x11
  423adb:	inc    esp
  423adc:	fld    TBYTE PTR [esi]
  423ade:	outs   dx,BYTE PTR ds:[esi]
  423adf:	jle    0x423a62
  423ae1:	std    
  423ae2:	popf   
  423ae3:	adc    eax,DWORD PTR [ecx+esi*1-0x1fff5f5e]
  423aea:	xor    BYTE PTR [ebp-0x26],0x62
  423aee:	pop    esp
  423aef:	pop    ebp
  423af0:	add    DWORD PTR [ecx-0xf],ecx
  423af3:	push   esp
  423af4:	out    dx,eax
  423af5:	mov    bl,0x31
  423af7:	and    cl,cl
  423af9:	lock inc ecx
  423afb:	xchg   BYTE PTR [eax-0x20f0330b],cl
  423b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b02:	lea    esi,[edi-0x272498ed]
  423b08:	test   cl,ah
  423b0a:	in     al,0xc4
  423b0c:	mov    bl,0x34
  423b0e:	mov    cl,0x7c
  423b10:	xchg   edi,eax
  423b11:	ret    0x372e
  423b14:	adc    edx,ebp
  423b16:	dec    edx
  423b17:	xlat   BYTE PTR ds:[ebx]
  423b18:	mov    ds:0x851a860d,eax
  423b1d:	push   ss
  423b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b1f:	mov    dh,BYTE PTR [eax-0x53]
  423b22:	mov    cl,0x5f
  423b24:	pop    ebx
  423b25:	lea    esi,[ecx]
  423b27:	pop    ds
  423b28:	cdq    
  423b29:	test   DWORD PTR [ebx-0x29],esi
  423b2c:	push   esi
  423b2d:	jnp    0x423ba3
  423b2f:	cwde   
  423b30:	rcl    DWORD PTR [edi-0x6e789073],0x80
  423b37:	mov    esi,0x340fd1fc
  423b3c:	fs lahf 
  423b3e:	aaa    
  423b3f:	xlat   BYTE PTR ds:[ebx]
  423b40:	imul   ebp,DWORD PTR [edx+edi*2+0x37],0xb
  423b45:	push   edi
  423b46:	fcom   QWORD PTR [ebp-0x2141378]
  423b4c:	xchg   ecx,eax
  423b4d:	icebp  
  423b4e:	mov    ebp,0xfd627a42
  423b53:	and    eax,0x1034bb6a
  423b58:	addr16 xchg esi,eax
  423b5a:	test   BYTE PTR [esi+0x7e],dl
  423b5d:	inc    edi
  423b5e:	ins    BYTE PTR es:[edi],dx
  423b5f:	test   DWORD PTR [eax+0x75daf741],ecx
  423b65:	pop    edi
  423b66:	fld    DWORD PTR [ebx]
  423b68:	out    0x66,al
  423b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b6b:	cs or  eax,ebx
  423b6e:	cmc    
  423b6f:	clc    
  423b70:	das    
  423b71:	add    DWORD PTR [ecx],0x32
  423b74:	mov    BYTE PTR [edi+0xdfc0d0f],ah
  423b7a:	push   edi
  423b7b:	mov    ecx,0x6fb7675c
  423b80:	mov    esp,0x1d7ba392
  423b85:	dec    edi
  423b86:	mov    dh,0x9d
  423b88:	ret    0xeb69
  423b8b:	xor    BYTE PTR [ecx+0x8bdd68f],0x41
  423b92:	es push esp
  423b94:	adc    ah,BYTE PTR [eax-0x63]
  423b97:	(bad)  
  423b99:	pop    eax
  423b9a:	and    al,BYTE PTR [edi]
  423b9c:	sub    DWORD PTR [edi+0x70],edx
  423b9f:	popf   
  423ba0:	test   DWORD PTR [ecx+edx*1-0x53c0666b],edi
  423ba7:	and    al,0x54
  423ba9:	mov    edi,0x67372983
  423bae:	icebp  
  423baf:	ror    ebp,cl
  423bb1:	and    al,0xb3
  423bb3:	sub    eax,0x8abe38e9
  423bb8:	and    DWORD PTR [esi-0x65eb881e],edx
  423bbe:	inc    esi
  423bbf:	ret    
  423bc0:	fcomp  DWORD PTR [esi+0x35]
  423bc3:	leave  
  423bc4:	or     al,BYTE PTR [ecx]
  423bc6:	pop    eax
  423bc7:	std    
  423bc8:	shl    esp,0xa6
  423bcb:	daa    
  423bcc:	mov    al,0x55
  423bce:	das    
  423bcf:	clc    
  423bd0:	mov    BYTE PTR [esi+0xf9d1f3],ch
  423bd6:	mov    edi,0x4c67d46c
  423bdb:	mov    esi,0xe831656a
  423be0:	dec    eax
  423be1:	push   ecx
  423be2:	mov    cl,0x84
  423be4:	jecxz  0x423bc8
  423be6:	mov    ds:0xf9c2231,al
  423beb:	(bad)  
  423bec:	shl    DWORD PTR [edi-0x16],0xe7
  423bf0:	and    BYTE PTR [edi],ch
  423bf2:	cmp    DWORD PTR [edi],edi
  423bf4:	rcl    DWORD PTR [ebx],1
  423bf6:	sub    edi,esp
  423bf8:	xchg   edx,eax
  423bf9:	push   ds
  423bfa:	(bad)  
  423bfb:	jge    0x423b85
  423bfd:	push   esp
  423bfe:	das    
  423bff:	ja     0x423b9c
  423c01:	fistp  DWORD PTR [edi]
  423c03:	lock adc ch,BYTE PTR [edx+0x788b349]
  423c0a:	call   0x4af4:0x3c62975f
  423c11:	xor    ebx,DWORD PTR [di-0x5]
  423c15:	push   ebp
  423c16:	loop   0x423c1d
  423c18:	sbb    BYTE PTR [ebx-0x4f],0x34
  423c1c:	or     bl,BYTE PTR [edx+0x2b]
  423c1f:	mov    bl,0xd7
  423c21:	mov    esp,0x889cd7fc
  423c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c27:	mov    BYTE PTR [eax+ebx*1+0x78dc1dc2],al
  423c2e:	or     eax,0xb4c579d7
  423c33:	hlt    
  423c34:	xchg   esp,eax
  423c35:	stc    
  423c36:	(bad)  
  423c38:	mov    ds:0x3cbfb088,eax
  423c3d:	inc    edi
  423c3e:	imul   edx,ecx,0x9683f188
  423c44:	imul   ebx,edx,0x73
  423c47:	jne    0x423cb0
  423c49:	sub    esp,DWORD PTR [di-0x37]
  423c4d:	arpl   WORD PTR ds:0xb17d3176,di
  423c53:	sti    
  423c54:	mov    eax,ds:0x2b8445b2
  423c59:	outs   dx,DWORD PTR ds:[esi]
  423c5a:	fst    st(7)
  423c5c:	aam    0x17
  423c5e:	pop    ss
  423c5f:	test   DWORD PTR [eax-0xdd47629],ebx
  423c65:	shl    BYTE PTR [esi-0x4b07d717],0x46
  423c6c:	enter  0x863b,0x6a
  423c70:	jmp    DWORD PTR [edi+0x17]
  423c73:	xor    bh,cl
  423c75:	retf   0xad04
  423c78:	out    0x97,al
  423c7a:	mov    cl,0xf4
  423c7c:	cwde   
  423c7d:	int    0x32
  423c7f:	gs fs hlt 
  423c82:	mov    ds:0x5c1c13d7,al
  423c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c88:	jns    0x423c34
  423c8a:	daa    
  423c8b:	sbb    DWORD PTR [eax-0x181564f0],ecx
  423c91:	cs add eax,0xa65d60a3
  423c97:	sub    al,0x8
  423c99:	xor    DWORD PTR [ebx],ecx
  423c9b:	or     esi,DWORD PTR [edx]
  423c9d:	int3   
  423c9e:	mov    edi,DWORD PTR ds:0x472a688
  423ca4:	gs xchg ebx,eax
  423ca6:	xor    WORD PTR [esi+eiz*2],di
  423caa:	mov    edi,0x6e3a56be
  423caf:	mov    al,0xed
  423cb1:	pop    es
  423cb2:	out    0x89,al
  423cb4:	gs xchg ebx,eax
  423cb6:	mov    ah,BYTE PTR [ecx-0x6f]
  423cb9:	push   ebp
  423cba:	cli    
  423cbb:	xchg   DWORD PTR [eax-0x79882f46],ecx
  423cc1:	pop    ebp
  423cc2:	enter  0x6ad7,0x5b
  423cc6:	adc    al,0x8b
  423cc8:	or     DWORD PTR [esi],ebp
  423cca:	mov    ebx,0x1d6091f5
  423ccf:	add    DWORD PTR [esi+0x6be689c0],eax
  423cd5:	and    al,0x58
  423cd7:	aaa    
  423cd8:	or     al,0xad
  423cda:	jb     0x423cb3
  423cdc:	sub    eax,0xc44ee10c
  423ce1:	mov    ebp,DWORD PTR [edx-0x616677e8]
  423ce7:	and    BYTE PTR [ebp+0x4f],dh
  423cea:	mov    ebp,0x7066bb41
  423cef:	cmp    BYTE PTR [ecx-0xaceb363],al
  423cf5:	xchg   DWORD PTR [ebx],esp
  423cf7:	rcr    DWORD PTR [ebx-0x7723e148],0xea
  423cfe:	jae    0x423cee
  423d00:	inc    ecx
  423d01:	outs   dx,BYTE PTR ds:[esi]
  423d02:	fwait
  423d03:	xlat   BYTE PTR ds:[ebx]
  423d04:	std    
  423d05:	jl     0x423d31
  423d07:	dec    ecx
  423d08:	das    
  423d09:	or     al,0xb4
  423d0b:	sahf   
  423d0c:	sbb    bh,ch
  423d0e:	(bad)  
  423d0f:	pop    ds
  423d10:	mov    BYTE PTR ds:0xd6ab27ed,cl
  423d16:	cmp    esi,DWORD PTR [esi+0xb]
  423d19:	(bad)  
  423d1a:	loop   0x423cf3
  423d1c:	shl    DWORD PTR [eax-0xb],1
  423d1f:	dec    eax
  423d20:	cdq    
  423d21:	data16 fdivr DWORD PTR [edx-0x78]
  423d25:	mov    cl,0xcd
  423d27:	push   eax
  423d28:	fdivr  DWORD PTR [ebx-0x19]
  423d2b:	xor    DWORD PTR [ebx+0x67],esi
  423d2e:	jmp    0xe0204537
  423d33:	sti    
  423d34:	hlt    
  423d35:	inc    ecx
  423d36:	mov    dh,0x8d
  423d38:	jbe    0x423d5b
  423d3a:	pop    edi
  423d3b:	bound  ecx,QWORD PTR [eax-0x60b6e98e]
  423d41:	adc    al,0xc3
  423d43:	call   0xd67341e0
  423d48:	mov    ah,BYTE PTR ds:0x583d92cb
  423d4e:	mov    cl,0xe1
  423d50:	mov    ecx,eax
  423d52:	adc    dh,BYTE PTR [ecx-0x20]
  423d55:	div    BYTE PTR [esi-0x2c]
  423d58:	ss or  cl,ch
  423d5b:	sub    DWORD PTR [ebx+0x23],ecx
  423d5e:	or     ecx,ebp
  423d60:	dec    edx
  423d61:	das    
  423d62:	inc    ebx
  423d63:	imul   ecx,DWORD PTR [eax+0x47e44df7],0x76
  423d6a:	pop    ecx
  423d6b:	jne    0x423cfe
  423d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d6e:	mov    eax,ds:0x9448ac02
  423d73:	xchg   edi,eax
  423d74:	add    dh,BYTE PTR [ebx]
  423d76:	hlt    
  423d77:	sub    al,BYTE PTR [ebp-0x5d2c5b21]
  423d7d:	push   es
  423d7e:	mov    esi,0xc6f6462f
  423d83:	jmp    0x423d8d
  423d85:	jecxz  0x423d38
  423d87:	dec    ebp
  423d88:	adc    BYTE PTR [edx+0x8],0x25
  423d8c:	mov    al,ds:0x3dceb1c5
  423d91:	add    eax,DWORD PTR [ecx+0x3f4c4202]
  423d97:	stos   DWORD PTR es:[edi],eax
  423d98:	leave  
  423d99:	data16 sub cl,BYTE PTR [edi+0x13]
  423d9d:	rcr    BYTE PTR [edx-0x74],cl
  423da0:	add    DWORD PTR [edi-0x3d434f3a],0xfb9457ba
  423daa:	out    0x9,eax
  423dac:	and    ch,BYTE PTR [esi+0x26]
  423daf:	mov    ds:0xd70f8f4e,al
  423db4:	pop    es
  423db5:	and    edx,DWORD PTR [ebx]
  423db7:	xor    al,0xf0
  423db9:	cmc    
  423dba:	arpl   WORD PTR ds:0x2ed02c88,dx
  423dc0:	popf   
  423dc1:	sbb    bl,BYTE PTR [eax]
  423dc3:	mov    bh,0xea
  423dc5:	outs   dx,BYTE PTR ds:[esi]
  423dc6:	inc    ebp
  423dc7:	pop    es
  423dc8:	mov    eax,ds:0xcb0d3128
  423dcd:	outs   dx,BYTE PTR ds:[esi]
  423dce:	and    edi,DWORD PTR [ebp+eax*4+0x58]
  423dd2:	adc    DWORD PTR [edi+0x4f4f6fb0],0x6f
  423dd9:	inc    edx
  423dda:	mov    dl,bh
  423ddc:	xor    BYTE PTR [esi],0x9
  423ddf:	adc    ecx,edi
  423de1:	adc    DWORD PTR [ebp-0x68],ecx
  423de4:	fwait
  423de5:	cmp    eax,0x7249681c
  423dea:	adc    al,0x57
  423dec:	or     DWORD PTR [esi+0x5a],0xffffffff
  423df0:	fbld   TBYTE PTR [edi-0x42]
  423df3:	dec    edx
  423df4:	jo     0x423dcd
  423df6:	fwait
  423df7:	daa    
  423df8:	or     BYTE PTR [ebp-0x3746f0b8],dh
  423dfe:	mov    dh,0xbf
  423e00:	pop    eax
  423e01:	scas   al,BYTE PTR es:[edi]
  423e02:	cmp    edi,eax
  423e04:	cli    
  423e05:	cmovno ecx,DWORD PTR [di-0x73]
  423e0a:	das    
  423e0b:	jmp    0x423e25
  423e0d:	adc    ebp,DWORD PTR [ebp+0x30]
  423e10:	mov    BYTE PTR [ebx+0x87f2f64],dl
  423e16:	or     BYTE PTR [ebx-0x79],dh
  423e19:	jl     0x423e4d
  423e1b:	jne    0x423e0e
  423e1d:	lods   al,BYTE PTR ds:[esi]
  423e1e:	test   BYTE PTR [eax-0x8],ch
  423e21:	push   0xffffff87
  423e23:	aam    0x8e
  423e25:	les    edx,FWORD PTR [edi-0x4e]
  423e28:	jg     0x423dcb
  423e2a:	jns    0x423e3f
  423e2c:	mov    edx,0x72d9b57e
  423e31:	push   0xa1084dc4
  423e36:	cmp    bh,bh
  423e38:	clc    
  423e39:	xlat   BYTE PTR ds:[bx]
  423e3b:	mov    esp,0xb01c6b02
  423e40:	imul   BYTE PTR [ebx-0x45776c3b]
  423e46:	add    BYTE PTR [ebp-0x2f7f878e],bl
  423e4c:	and    ah,BYTE PTR [edi-0x20]
  423e4f:	jns    0x423dfb
  423e51:	xor    ecx,DWORD PTR [eax+ebx*8]
  423e54:	test   eax,0x36e8b10c
  423e59:	popf   
  423e5a:	or     ch,BYTE PTR [ebp+ebx*8-0x59288e6d]
  423e61:	inc    ecx
  423e62:	in     al,dx
  423e63:	sar    DWORD PTR [ebp-0x7777a67c],0x30
  423e6a:	pop    es
  423e6b:	and    eax,0x10b4b3e9
  423e70:	sub    al,0x7b
  423e72:	in     eax,0x30
  423e74:	int    0x62
  423e76:	jno    0x423e63
  423e78:	push   cs
  423e79:	addr16 or eax,0x6ae57cb
  423e7f:	xor    ecx,DWORD PTR [eax-0x3ff8cee0]
  423e85:	outs   dx,DWORD PTR ds:[esi]
  423e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e87:	inc    esi
  423e88:	dec    esi
  423e89:	fmul   QWORD PTR [di]
  423e8c:	xor    ecx,DWORD PTR [edi+eiz*1]
  423e8f:	cmp    DWORD PTR [ebx-0x7c],ebx
  423e92:	mov    cl,0x72
  423e94:	mov    edi,0x2a70ddfb
  423e99:	out    0x73,eax
  423e9b:	xlat   BYTE PTR ds:[ebx]
  423e9c:	jb     0x423e8d
  423e9e:	fadd   DWORD PTR [eax]
  423ea0:	cmp    dh,ah
  423ea2:	jbe    0x423e4a
  423ea4:	mov    BYTE PTR [edx],ch
  423ea6:	ins    BYTE PTR es:[edi],dx
  423ea7:	mov    esi,DWORD PTR [esi+0x26]
  423eaa:	popa   
  423eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423eac:	push   esi
  423ead:	ins    BYTE PTR es:[edi],dx
  423eae:	mov    ebp,0xb2d4b7d3
  423eb3:	pop    esp
  423eb4:	scas   eax,DWORD PTR es:[edi]
  423eb5:	mov    eax,ds:0x7a697101
  423eba:	mov    cl,0x57
  423ebc:	(bad)  
  423ebe:	jmp    0x67d6:0x3f6d402c
  423ec5:	mov    ds,esi
  423ec7:	jecxz  0x423f1f
  423ec9:	(bad)  [ebp+0x5f25130f]
  423ecf:	leave  
  423ed0:	mov    BYTE PTR [esi+eiz*8-0x2fca327d],dl
  423ed7:	xor    al,0x1
  423ed9:	addr16 hlt 
  423edb:	jb     0x423f56
  423edd:	mov    ah,0x5b
  423edf:	pop    edi
  423ee0:	fdivr  st,st(1)
  423ee2:	pop    ebp
  423ee3:	cwde   
  423ee4:	jo     0x423f1c
  423ee6:	mov    cl,0xd5
  423ee8:	mov    ah,0xd8
  423eea:	sub    al,0x42
  423eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423eed:	out    dx,al
  423eee:	es test eax,0xa03b62a4
  423ef4:	dec    ebx
  423ef5:	jmp    0x423f3e
  423ef7:	push   edi
  423ef8:	rol    DWORD PTR [edi-0x2377ec51],cl
  423efe:	les    ebp,FWORD PTR [esi+0x7f]
  423f01:	fsubr  DWORD PTR [ecx+0x42]
  423f04:	or     DWORD PTR [edi-0x2f],esp
  423f07:	lea    esi,[ebp+0x69]
  423f0a:	dec    edx
  423f0b:	inc    esp
  423f0c:	jle    0x423ea3
  423f0e:	stc    
  423f0f:	jl     0x423ecd
  423f11:	pop    esi
  423f12:	aas    
  423f13:	push   esi
  423f14:	mul    DWORD PTR [esi+0x75]
  423f17:	addr16 or al,bl
  423f1a:	dec    ecx
  423f1b:	adc    al,0x79
  423f1d:	pusha  
  423f1e:	call   0x4377:0x9eb055f9
  423f25:	stos   DWORD PTR es:[edi],eax
  423f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f27:	jle    0x423eb1
  423f29:	test   ah,bh
  423f2b:	jecxz  0x423f4e
  423f2d:	iret   
  423f2e:	scas   al,BYTE PTR es:[edi]
  423f2f:	mov    dh,0xf2
  423f31:	jns    0x423f57
  423f33:	push   esi
  423f34:	ins    BYTE PTR es:[edi],dx
  423f35:	out    0x87,eax
  423f37:	jmp    0x882fff03
  423f3c:	mov    BYTE PTR [eax],bh
  423f3e:	ins    BYTE PTR es:[edi],dx
  423f3f:	imul   eax,DWORD PTR [ecx+0xc],0x67be58ab
  423f46:	dec    esi
  423f47:	call   0x3fe11b33
  423f4c:	ror    BYTE PTR [ecx+edx*2+0x5f24f7da],1
  423f53:	ret    0x8388
  423f56:	push   eax
  423f57:	cwde   
  423f58:	sub    ch,dh
  423f5a:	add    al,0x7a
  423f5c:	dec    ebp
  423f5d:	addr16 cmp al,0x71
  423f60:	adc    BYTE PTR [edi],0xed
  423f63:	dec    eax
  423f64:	inc    ebp
  423f65:	(bad)  [edx-0x7b02212c]
  423f6b:	mov    dh,0x40
  423f6d:	not    BYTE PTR [esi]
  423f6f:	shl    DWORD PTR [ebx+esi*1+0x49],1
  423f73:	cmp    DWORD PTR [ebx],edx
  423f75:	addr16 xor al,0x68
  423f78:	lds    ecx,FWORD PTR [esp+esi*2]
  423f7b:	fistp  DWORD PTR ds:0x38ecbb43
  423f81:	mov    edx,0xfd886675
  423f86:	or     al,0xf7
  423f88:	cmp    dl,BYTE PTR [edi]
  423f8a:	sub    DWORD PTR [ebx+0x53cb6480],esp
  423f90:	dec    ebp
  423f91:	data16 jmp 0x423f64
  423f94:	imul   eax,DWORD PTR [edi],0xf38ff457
  423f9a:	mov    cl,0x40
  423f9c:	push   ss
  423f9d:	inc    ebp
  423f9e:	lock sub DWORD PTR [eax+ebp*2+0x3f],edx
  423fa3:	xlat   BYTE PTR ds:[ebx]
  423fa4:	pop    eax
  423fa5:	in     eax,dx
  423fa6:	sub    eax,0x5c7275b1
  423fab:	enter  0xca88,0xf1
  423faf:	pop    ds
  423fb0:	dec    ebp
  423fb1:	and    al,al
  423fb3:	jnp    0x42400f
  423fb5:	jne    0x423f6e
  423fb7:	shl    DWORD PTR ds:0x1b8ce767,0x10
  423fbe:	int3   
  423fbf:	ins    BYTE PTR es:[edi],dx
  423fc0:	mov    ecx,esp
  423fc2:	les    ecx,FWORD PTR [eax-0x6a]
  423fc5:	(bad)  
  423fc6:	push   ecx
  423fc7:	je     0x423f9b
  423fc9:	ja     0x423fef
  423fcb:	ja     0x424047
  423fcd:	pushf  
  423fce:	data16 xlat BYTE PTR ds:[ebx]
  423fd0:	iret   
  423fd1:	pop    esp
  423fd2:	loopne 0x423f74
  423fd4:	lods   al,BYTE PTR ds:[esi]
  423fd5:	rcr    esi,0xae
  423fd8:	mov    BYTE PTR [edi-0x51],al
  423fdb:	cmp    DWORD PTR [edi-0xc],0x9313eadd
  423fe2:	aaa    
  423fe3:	xlat   BYTE PTR ds:[ebx]
  423fe4:	pop    ds
  423fe5:	push   edi
  423fe6:	ret    
  423fe7:	pop    edx
  423fe8:	xor    esp,DWORD PTR [edi]
  423fea:	jl     0x423ff1
  423fec:	imul   edx,DWORD PTR [edi-0x72],0xef259530
  423ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ff4:	xchg   esp,eax
  423ff5:	sub    al,0x9
  423ff7:	fcom   DWORD PTR ds:0x9a97960a
  423ffd:	sbb    bh,BYTE PTR [esi-0x7d]
  424000:	pop    edx
  424001:	imul   esi,edi,0xac99f4d6
  424007:	push   edi
  424008:	jae    0x424036
  42400a:	or     al,0x7c
  42400c:	sbb    al,BYTE PTR [edx+0xd01d2b1]
  424012:	mov    ch,BYTE PTR [esi+0x3d]
  424015:	mov    bl,0x71
  424017:	aaa    
  424018:	jno    0x423fb1
  42401a:	shl    BYTE PTR es:0x16af3c7b,1
  424021:	addr16 sub eax,0xc4e4651e
  424027:	cmp    BYTE PTR [edi-0x453b1e7e],al
  42402d:	add    DWORD PTR [esi+0x21234c8f],0x7f4bf0d7
  424037:	push   edx
  424038:	test   DWORD PTR [esi-0x2a7e96e1],ebp
  42403e:	dec    eax
  42403f:	ins    DWORD PTR es:[edi],dx
  424040:	xchg   esp,eax
  424041:	xor    esi,DWORD PTR [ecx+0x60cd4532]
  424047:	xlat   BYTE PTR ds:[ebx]
  424048:	(bad)  
  424049:	sub    eax,0x421229d2
  42404e:	mov    dh,0xf7
  424050:	cmc    
  424051:	shl    BYTE PTR [ecx-0x37],0x10
  424055:	push   edx
  424056:	dec    esi
  424057:	loopne 0x42409a
  424059:	addr16 and eax,0xeb7f6a0a
  42405f:	and    DWORD PTR [ebp+eiz*2-0x3],edx
  424063:	sti    
  424064:	mov    DWORD PTR [edi+0x4c],esp
  424067:	xor    ecx,0xffffffa9
  42406a:	div    DWORD PTR [ebp+0xd]
  42406d:	addr16 inc edx
  42406f:	pop    es
  424070:	mul    DWORD PTR [edi+ecx*2-0x4df8a575]
  424077:	(bad)  
  424078:	push   edx
  424079:	xchg   esi,eax
  42407a:	daa    
  42407b:	cmp    al,cl
  42407d:	xlat   BYTE PTR ds:[ebx]
  42407e:	xchg   ecx,eax
  42407f:	jle    0x424011
  424081:	addr16 cs jge 0x4240ff
  424085:	fs adc ebp,esi
  424088:	add    ecx,edx
  42408a:	enter  0x88a8,0xda
  42408e:	hlt    
  42408f:	push   cs
  424090:	dec    edi
  424091:	retf   
  424092:	(bad)  
  424093:	setae  BYTE PTR [ebx-0x56a42b0d]
  42409a:	pop    esi
  42409b:	in     eax,0x96
  42409d:	int    0x19
  42409f:	add    BYTE PTR [ecx],0xb8
  4240a2:	mov    cl,0xf7
  4240a4:	retf   0x39
  4240a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240a8:	sub    al,0x5b
  4240aa:	rcl    ah,cl
  4240ac:	cwde   
  4240ad:	inc    ebp
  4240ae:	outs   dx,DWORD PTR ds:[esi]
  4240af:	adc    eax,0x5d515111
  4240b4:	ds jg  0x424069
  4240b7:	inc    edi
  4240b8:	call   DWORD PTR [esp+edi*8-0x3308f6b7]
  4240bf:	mov    BYTE PTR [ecx+0xace0467],ah
  4240c5:	pusha  
  4240c6:	outs   dx,BYTE PTR ds:[esi]
  4240c7:	test   al,0xb1
  4240c9:	cli    
  4240ca:	loope  0x42407d
  4240cc:	xor    BYTE PTR [ebx],ah
  4240ce:	mov    al,0x5b
  4240d0:	mov    eax,0x7ff2e15a
  4240d5:	icebp  
  4240d6:	pop    ecx
  4240d7:	(bad)  
  4240d8:	call   0x3373b578
  4240dd:	addr16 ja 0x4240bb
  4240e0:	jno    0x42411d
  4240e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240e3:	imul   edx,DWORD PTR [ebp-0xa],0x3e270ab0
  4240ea:	pop    edx
  4240eb:	sbb    eax,0x17578bec
  4240f0:	mov    ds:0x3b317244,eax
  4240f5:	addr16 in al,0x34
  4240f8:	add    bh,BYTE PTR [edx+0x28004988]
  4240fe:	mov    dl,0x15
  424100:	popf   
  424101:	imul   ebp,DWORD PTR [esp+eax*4],0xffffffd6
  424105:	(bad)  
  424106:	js     0x424144
  424108:	jmp    0x4240a9
  42410a:	mov    ebx,0xb96740a2
  42410f:	sbb    cl,al
  424111:	sub    al,0xfc
  424113:	aas    
  424114:	in     eax,0xab
  424116:	mov    dl,0x85
  424118:	push   ecx
  424119:	aam    0x37
  42411b:	jnp    0x4240ff
  42411d:	mov    bh,0x67
  42411f:	cmc    
  424120:	push   ebx
  424121:	pusha  
  424122:	aad    0xd5
  424124:	call   0xf046afc7
  424129:	cmp    BYTE PTR [edx],ah
  42412b:	pop    ds
  42412c:	dec    ebp
  42412d:	fmul   QWORD PTR [ecx-0x66]
  424130:	ret    
  424131:	dec    edx
  424132:	mov    bl,0x4c
  424134:	sbb    ebx,DWORD PTR [ebx]
  424136:	je     0x424151
  424138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42413a:	mov    eax,ds:0x7885af16
  42413f:	xlat   BYTE PTR ds:[ebx]
  424140:	jg     0x424187
  424142:	mov    BYTE PTR [esp+ecx*1],ch
  424145:	test   esi,esp
  424147:	mov    ebx,0xe39eba91
  42414c:	test   DWORD PTR [eax-0x5004f16f],edi
  424152:	or     al,0xe9
  424154:	lods   al,BYTE PTR ds:[esi]
  424155:	push   0xbb31ed32
  42415a:	adc    DWORD PTR ds:0xf34e9d72,esp
  424160:	mov    BYTE PTR [ebx+0x25],bh
  424163:	add    eax,0xefaab3dc
  424168:	ss addr16 ss dec ebp
  42416c:	xchg   ecx,eax
  42416d:	mov    ebp,0x92f96c6f
  424172:	mov    ch,0x96
  424174:	ret    
  424175:	xchg   ebx,eax
  424176:	je     0x42415b
  424178:	dec    eax
  424179:	rcr    DWORD PTR [eax],cl
  42417b:	cld    
  42417c:	mov    DWORD PTR [edi+0x23],esp
  42417f:	cmp    DWORD PTR [ebx-0x47],0x6b22a680
  424186:	mov    dl,0xa5
  424188:	mov    bl,0xdb
  42418a:	(bad)  
  42418b:	retf   
  42418c:	jns    0x424145
  42418e:	pop    ebx
  42418f:	jle    0x42419d
  424191:	xchg   DWORD PTR [bx],ebp
  424194:	lods   eax,DWORD PTR ds:[esi]
  424195:	jmp    0x8ad:0xbcdfb3ac
  42419c:	(bad)  
  42419d:	dec    esi
  42419e:	mov    dl,0xdc
  4241a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241a1:	jbe    0x424187
  4241a3:	outs   dx,BYTE PTR ds:[esi]
  4241a4:	inc    ecx
  4241a5:	pop    esi
  4241a6:	jno    0x424141
  4241a8:	daa    
  4241a9:	data16 jnp 0x42422b
  4241ac:	pop    edx
  4241ad:	sub    bl,ah
  4241af:	lahf   
  4241b0:	and    DWORD PTR [edi-0x54],eax
  4241b3:	push   ecx
  4241b4:	mov    BYTE PTR [ebp+0x44],ch
  4241b7:	sbb    bh,al
  4241b9:	fistp  QWORD PTR [ecx]
  4241bb:	xor    dl,BYTE PTR [edi+0x3b]
  4241be:	popa   
  4241bf:	pop    edx
  4241c0:	mov    BYTE PTR [edx+esi*1],al
  4241c3:	sub    esi,ebx
  4241c5:	call   0xfb81:0x8388d46a
  4241cc:	lods   eax,DWORD PTR ds:[esi]
  4241cd:	and    cl,ch
  4241cf:	sbb    edx,DWORD PTR [edi-0x61]
  4241d2:	adc    edi,edx
  4241d4:	xchg   DWORD PTR [ebp+0x69],eax
  4241d7:	lods   al,BYTE PTR ds:[esi]
  4241d8:	retf   0x3f76
  4241db:	mov    dh,0x88
  4241dd:	jne    0x4241f8
  4241df:	pop    ss
  4241e0:	loopne 0x4241d3
  4241e2:	cli    
  4241e3:	or     eax,0x81605adc
  4241e8:	or     BYTE PTR [ebp+0xd45fd7b],cl
  4241ee:	xor    al,0xd5
  4241f0:	push   0xc4e2b255
  4241f5:	mov    fs,WORD PTR [edx]
  4241f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241f8:	pop    ebx
  4241f9:	lahf   
  4241fa:	jmp    0xcca1:0x36678947
  424201:	inc    ebp
  424202:	xor    dh,BYTE PTR [ebp+0x65b12a8c]
  424208:	enter  0xa81b,0x1d
  42420c:	mov    ecx,0x80d78b82
  424211:	cmp    eax,edi
  424213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424214:	jecxz  0x4241d1
  424216:	pop    ecx
  424217:	jg     0x42420e
  424219:	rol    eax,cl
  42421b:	sub    cl,BYTE PTR [eax+0x6629e004]
  424221:	mov    BYTE PTR [edi-0x1d985c09],al
  424227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424228:	sahf   
  424229:	push   0xffffff95
  42422b:	jno    0x424278
  42422d:	adc    esi,DWORD PTR [ecx-0x5ffcb0c1]
  424233:	inc    esp
  424234:	push   esi
  424235:	int    0x8
  424237:	xlat   BYTE PTR ds:[ebx]
  424238:	neg    dl
  42423a:	in     al,dx
  42423b:	jp     0x42421a
  42423d:	inc    edx
  42423e:	mov    DWORD PTR [edi],ebx
  424240:	push   0xffffff8c
  424242:	enter  0x8847,0xb7
  424246:	add    ebp,DWORD PTR [ecx-0x6b5bc250]
  42424c:	retf   0x4167
  42424f:	call   0x8f766168
  424254:	in     eax,0x84
  424256:	mov    cl,0xf0
  424258:	cmc    
  424259:	inc    ecx
  42425a:	and    BYTE PTR [edi-0x58953d0f],0x24
  424261:	imul   edi,edx,0xd145a53b
  424267:	dec    edi
  424268:	push   ebp
  424269:	adc    eax,0x788203e
  42426e:	shl    DWORD PTR [edx+ebp*8+0x66],cl
  424272:	data16 mov al,0x7d
  424275:	imul   esi,DWORD PTR [edx+0x71704764],0xb95b07d5
  42427f:	add    cl,BYTE PTR [eax-0x4f96438e]
  424285:	rcl    BYTE PTR [edx+ecx*8],1
  424288:	addr16 addr16 ffree st(4)
  42428c:	add    BYTE PTR gs:[edi+0x30],0x5e
  424291:	(bad)  
  424292:	or     DWORD PTR [eax+0x6bb13e80],esi
  424298:	mov    edi,0x1f298003
  42429d:	es (bad) 
  4242a0:	nop
  4242a1:	mov    esi,edi
  4242a3:	jle    0x4242a9
  4242a5:	cmp    BYTE PTR [ebp+0x55],0x87
  4242a9:	mov    cl,BYTE PTR ds:0xd03bb790
  4242af:	jb     0x42431d
  4242b1:	(bad)  
  4242b2:	sub    edx,edi
  4242b4:	add    eax,0x585207b4
  4242b9:	cld    
  4242ba:	jecxz  0x4242de
  4242bc:	mov    BYTE PTR [eax],bl
  4242be:	jb     0x424336
  4242c0:	xchg   DWORD PTR [ebx],esi
  4242c2:	(bad)  
  4242c3:	outs   dx,BYTE PTR ds:[esi]
  4242c4:	jns    0x42432b
  4242c6:	mov    ebp,esp
  4242c8:	retf   0xf024
  4242cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242cc:	call   0x91c94d
  4242d1:	jp     0x424292
  4242d3:	mov    edi,0x37abdcd3
  4242d8:	xor    al,0xde
  4242da:	add    al,0x26
  4242dc:	or     eax,0xbe800f70
  4242e1:	addr16 sub al,0xb4
  4242e4:	sbb    bl,cl
  4242e6:	push   ss
  4242e7:	xchg   ebx,eax
  4242e8:	mov    BYTE PTR [edi],bl
  4242ea:	or     bl,BYTE PTR [edi-0x7d]
  4242ed:	jb     0x424318
  4242ef:	mov    ds:0x9c826784,al
  4242f4:	mov    dh,BYTE PTR [ecx+0x234ec3d8]
  4242fa:	mov    cl,0xb5
  4242fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242fe:	push   edx
  4242ff:	xchg   DWORD PTR [eax+0xdef2609],esi
  424305:	push   0x53ac5db1
  42430a:	mov    BYTE PTR [esi-0x32],al
  42430d:	leave  
  42430e:	mov    cl,0x8e
  424310:	outs   dx,BYTE PTR ds:[esi]
  424311:	adc    BYTE PTR [esi-0x23f2cd5c],ch
  424317:	retf   
  424318:	outs   dx,DWORD PTR ds:[esi]
  424319:	push   ebp
  42431a:	jl     0x4242b0
  42431c:	js     0x424314
  42431e:	adc    DWORD PTR [esi],0x8fc7e120
  424324:	mov    BYTE PTR [ebx+0x7e],ah
  424327:	cmp    eax,0x749f2860
  42432c:	iret   
  42432d:	addr16 sub eax,0x600008c0
  424333:	pusha  
  424334:	xchg   esp,eax
  424335:	repnz inc edx
  424337:	(bad)  
  424339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42433a:	mov    cl,0x93
  42433c:	push   es
  42433d:	xchg   ebp,eax
  42433e:	shr    esi,1
  424340:	inc    eax
  424341:	cmp    DWORD PTR [edi],ecx
  424343:	xlat   BYTE PTR ds:[ebx]
  424344:	jmp    0x65e873c5
  424349:	cmc    
  42434a:	and    al,0xce
  42434c:	mov    edi,0x73d67056
  424351:	mov    ah,0xa2
  424353:	mov    ah,0x45
  424355:	retf   
  424356:	rcr    DWORD PTR [eax],0xc3
  424359:	imul   esp,DWORD PTR [bx+0x1],0xffffffdb
  42435e:	pop    esi
  42435f:	ins    DWORD PTR es:[edi],dx
  424360:	sbb    ecx,eax
  424362:	mov    bl,0x91
  424364:	outs   dx,BYTE PTR ds:[esi]
  424365:	push   0x70
  424367:	mov    ecx,0x5cfba748
  42436c:	sub    al,0x5a
  42436e:	xchg   edx,eax
  42436f:	loope  0x4242f9
  424371:	mov    esp,0xd4b39e0c
  424376:	add    BYTE PTR [ebp+0x4b69fd88],dh
  42437c:	scas   al,BYTE PTR es:[edi]
  42437d:	cmp    eax,0xd85a68b8
  424382:	push   ecx
  424383:	popa   
  424384:	(bad)  
  424385:	out    dx,eax
  424386:	lods   al,BYTE PTR ds:[esi]
  424387:	pop    DWORD PTR [esp+eax*2+0x70]
  42438b:	out    0x89,al
  42438d:	ins    BYTE PTR es:[edi],dx
  42438e:	test   eax,0xc27254d0
  424393:	fdiv   QWORD PTR [ecx+0x79]
  424396:	outs   dx,BYTE PTR ds:[esi]
  424397:	jne    0x424321
  424399:	mov    BYTE PTR [edi-0x774c986d],dl
  42439f:	fwait
  4243a0:	sbb    BYTE PTR ds:[di+0x60],al
  4243a5:	mul    BYTE PTR [ebx+eax*8-0x23]
  4243a9:	addr16 fmul st(2),st
  4243ac:	adc    BYTE PTR [esi+0x3312b02a],bh
  4243b2:	mov    BYTE PTR [esi-0x484718c9],dh
  4243b8:	xchg   edx,eax
  4243b9:	and    al,0x8f
  4243bb:	mov    ch,0x3f
  4243bd:	addr16 int3 
  4243bf:	popa   
  4243c0:	sub    al,BYTE PTR [edi-0x57ae3a06]
  4243c6:	mov    cl,0xa9
  4243c8:	fwait
  4243c9:	push   es
  4243ca:	fs jp  0x424358
  4243cd:	call   0x74a31437
  4243d2:	in     eax,dx
  4243d3:	mov    esi,0x17a47031
  4243d8:	retf   
  4243d9:	rol    BYTE PTR [eax],cl
  4243db:	or     DWORD PTR [eax-0x736ae70b],ecx
  4243e1:	xchg   ebp,eax
  4243e2:	and    DWORD PTR [ecx],edi
  4243e4:	add    BYTE PTR [edx-0x54],ch
  4243e7:	push   ds
  4243e8:	out    0x6e,al
  4243ea:	adc    DWORD PTR [ecx-0x1e],edi
  4243ed:	pop    ebp
  4243ee:	sub    al,0xb2
  4243f0:	mov    BYTE PTR [ebp-0x10],ch
  4243f3:	sbb    DWORD PTR [eax],esp
  4243f5:	add    BYTE PTR [ebx],cl
  4243f7:	mov    dh,0xb6
  4243f9:	pusha  
  4243fa:	repz add eax,0x87822889
  424400:	pop    edx
  424401:	dec    ebp
  424402:	sbb    ebx,DWORD PTR [esp+eiz*4+0x40]
  424406:	pop    edi
  424407:	add    eax,0x49c1e388
  42440c:	pop    ecx
  42440d:	dec    ebx
  42440e:	dec    eax
  42440f:	call   0xac80ebdd
  424414:	jns    0x4243c4
  424416:	xor    cl,dl
  424418:	add    ecx,DWORD PTR [edx+0x79]
  42441b:	push   0x1
  42441d:	ret    0x57b1
  424420:	sub    BYTE PTR [ebp-0x25],bl
  424423:	mov    ds:0xd9d30e96,eax
  424428:	sub    BYTE PTR [esi+esi*2+0x52],0xe8
  42442d:	mov    esi,0x31e1cdf1
  424432:	ret    0x8834
  424435:	mov    edx,0x6e7b052f
  42443a:	sub    dh,bh
  42443c:	push   ecx
  42443d:	push   0x996406bc
  424442:	jno    0x4243f7
  424444:	mov    ds:0x87e9bf45,eax
  424449:	ja     0x42444b
  42444b:	push   ecx
  42444c:	iret   
  42444d:	sbb    esp,ebx
  42444f:	and    BYTE PTR [eax-0x22],bh
  424452:	data16 xlat BYTE PTR ds:[ebx]
  424454:	rol    DWORD PTR [ecx],cl
  424456:	nop
  424457:	pop    ds
  424458:	add    BYTE PTR [edi-0x66],0xb
  42445c:	mov    BYTE PTR [eax+0x40],dl
  42445f:	and    eax,0x6ac57560
  424464:	add    ebx,DWORD PTR [ebp-0x70be28b2]
  42446a:	enter  0x3629,0xa4
  42446e:	xor    DWORD PTR [edx-0x78],ebx
  424471:	sbb    al,BYTE PTR [eax-0x3261ffaa]
  424477:	add    al,0x9b
  424479:	outs   dx,BYTE PTR ds:[si]
  42447b:	nop
  42447c:	test   eax,0x4ee46426
  424481:	cmp    DWORD PTR [edi-0x5b0df4a],0xffffffd6
  424488:	into   
  424489:	outs   dx,BYTE PTR ds:[esi]
  42448a:	mov    al,0xb1
  42448c:	call   0x242b6031
  424491:	enter  0x3f3f,0x1b
  424495:	fdiv   QWORD PTR [ecx+0x541cb065]
  42449b:	pop    ebp
  42449c:	mov    BYTE PTR [esi],ah
  42449e:	js     0x42442b
  4244a0:	(bad)  
  4244a1:	xor    al,BYTE PTR [eax]
  4244a3:	or     eax,0x941a6789
  4244a8:	mov    cl,BYTE PTR [ebx]
  4244aa:	loope  0x4244ff
  4244ac:	cwde   
  4244ad:	cld    
  4244ae:	mov    dh,0xaa
  4244b0:	popa   
  4244b1:	inc    ecx
  4244b2:	jns    0x4244ce
  4244b4:	fcomp  st(0)
  4244b6:	sti    
  4244b7:	jnp    0x4244a8
  4244b9:	addr16 dec ebx
  4244bb:	xchg   ebp,eax
  4244bc:	cmova  edi,DWORD PTR [edx]
  4244bf:	xchg   edi,eax
  4244c0:	push   ds
  4244c1:	jb     0x424474
  4244c3:	jg     0x424471
  4244c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244c6:	leave  
  4244c7:	xor    dl,BYTE PTR [eax+0xb2f7f1c]
  4244cd:	addr16 (bad) 
  4244cf:	adc    eax,0xcc50a641
  4244d4:	jmp    0xb1d8:0x13021190
  4244db:	pusha  
  4244dc:	push   cs
  4244dd:	xchg   ebp,eax
  4244de:	and    eax,0xe7c7e121
  4244e3:	aaa    
  4244e4:	and    BYTE PTR [edi+0x2],0xe
  4244e8:	ds cdq 
  4244ea:	fsubr  st(5),st
  4244ec:	mov    ah,0xce
  4244ee:	mov    cl,0xe9
  4244f0:	adc    eax,0xcff5878e
  4244f5:	pusha  
  4244f6:	cmc    
  4244f7:	xlat   BYTE PTR ds:[ebx]
  4244f8:	mov    esi,0xd81456b8
  4244fd:	arpl   di,si
  4244ff:	and    al,0x88
  424501:	xor    ebx,DWORD PTR [ecx]
  424503:	xchg   BYTE PTR [edx+edi*4-0x70],bl
  424507:	pop    ebp
  424508:	lods   eax,DWORD PTR ds:[esi]
  424509:	js     0x4244cd
  42450b:	mov    al,ds:0x55f0a725
  424510:	rcl    DWORD PTR [edi+0x5985aafd],1
  424516:	outs   dx,BYTE PTR ds:[esi]
  424517:	repz call 0x34a9fde8
  42451d:	test   al,0xab
  42451f:	shl    BYTE PTR [ebx+0x36],1
  424522:	sub    bh,0x23
  424525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424526:	mov    edx,0xb1d46915
  42452b:	mov    edx,0x6ad82a59
  424530:	or     DWORD PTR [ebx],edi
  424532:	push   es
  424533:	les    esp,FWORD PTR [ebx+0x46d758ef]
  424539:	jecxz  0x42455f
  42453b:	adc    dl,BYTE PTR [edi-0x2]
  42453e:	mov    dl,0xec
  424540:	xacquire lock add BYTE PTR [ebp+0x5161d8f5],bh
  424548:	stc    
  424549:	push   ss
  42454a:	inc    ebx
  42454b:	retf   0xcd51
  42454e:	jns    0x424560
  424550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424551:	cld    
  424552:	dec    ebx
  424553:	aaa    
  424554:	mov    eax,0xbb0fe599
  424559:	mov    eax,ds:0xb72d7a1
  42455e:	sbb    ebx,DWORD PTR [edx-0x2860c9e1]
  424564:	fmul   st,st(6)
  424566:	xchg   BYTE PTR [edx+0x5c8cc59],ch
  42456c:	mov    BYTE PTR [esi],ch
  42456e:	sub    esp,0x26
  424571:	adc    BYTE PTR [eax+0x6a1b6390],al
  424577:	xlat   BYTE PTR ds:[ebx]
  424578:	or     bh,0x90
  42457b:	cld    
  42457c:	out    0xa,al
  42457e:	retf   
  42457f:	pop    edx
  424580:	mov    BYTE PTR [eax+0x1],al
  424583:	sbb    al,0x90
  424586:	scas   al,BYTE PTR es:[edi]
  424587:	test   al,0xf
  424589:	addr16 xchg edi,eax
  42458b:	ja     0x42454e
  42458d:	push   edi
  42458e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42458f:	pop    esp
  424590:	push   0x13
  424592:	mov    cl,0x16
  424594:	int3   
  424595:	dec    esp
  424596:	fs jae 0x42456a
  424599:	fwait
  42459a:	pop    ebp
  42459b:	jmp    0x9af3fb5a
  4245a0:	mov    eax,ds:0x8a90407b
  4245a5:	xchg   esp,eax
  4245a6:	mov    cl,0xf7
  4245a8:	add    DWORD PTR [ecx+0x0],eax
  4245ab:	js     0x4245f4
  4245ad:	out    0xf2,al
  4245af:	iret   
  4245b0:	fs test al,bl
  4245b3:	ret    
  4245b4:	xchg   ebx,eax
  4245b5:	dec    ebx
  4245b6:	mov    cl,0xcc
  4245b8:	push   ecx
  4245b9:	mov    ecx,0x40335c8
  4245be:	out    dx,al
  4245bf:	xlat   BYTE PTR ds:[ebx]
  4245c0:	cmp    dh,BYTE PTR [edi+0x19]
  4245c3:	or     esi,edx
  4245c5:	jmp    0x12ca8bf5
  4245ca:	sub    eax,0x1a2f6043
  4245cf:	jle    0x424585
  4245d1:	addr16 es leave 
  4245d4:	xor    ah,BYTE PTR [edx]
  4245d6:	pop    ds
  4245d7:	test   eax,0x4c4d70c8
  4245dc:	jp     0x42458a
  4245de:	mov    cl,0xcc
  4245e0:	sbb    dl,ch
  4245e2:	call   0x7d8a2c13
  4245e7:	retf   0xeb99
  4245ea:	and    edx,DWORD PTR [edi]
  4245ec:	mov    ah,0x51
  4245ee:	dec    esp
  4245ef:	mov    edi,0x1fbfaa8d
  4245f4:	imul   edi,edx,0xe7c2f70d
  4245fa:	call   0xcc7d:0x20627dfb
  424601:	sbb    eax,0xeddd576b
  424606:	fild   WORD PTR [eax+ecx*4-0x56]
  42460a:	lahf   
  42460b:	mov    bh,BYTE PTR [edi]
  42460d:	les    eax,FWORD PTR [edi-0x5e]
  424610:	cmc    
  424611:	(bad)  
  424612:	pop    eax
  424613:	in     al,dx
  424614:	jmp    0x424664
  424616:	mov    cl,0xbc
  424618:	sub    DWORD PTR [ebx+0x1fa23bb2],eax
  42461e:	mov    BYTE PTR [ebp+ebx*8+0x2781ee67],ch
  424625:	jo     0x4245e4
  424627:	jnp    0x9b305478
  42462d:	addr16 (bad) 
  42462f:	retf   0x8e28
  424632:	sub    eax,0x1c473791
  424638:	mov    ah,BYTE PTR [esp+eiz*2]
  42463b:	jnp    0x424602
  42463d:	pop    ecx
  42463e:	mov    bl,0xd6
  424640:	sub    al,0xf0
  424642:	cmp    ebp,ecx
  424644:	in     eax,dx
  424645:	mov    al,es:0xdcbe5796
  42464b:	pop    ss
  42464c:	adc    BYTE PTR [edx-0x4f],bh
  42464f:	xor    eax,0xdd41e72e
  424654:	pop    edx
  424655:	xchg   ebx,eax
  424656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424657:	daa    
  424658:	mov    edi,0x70058d67
  42465d:	xchg   bl,dl
  42465f:	push   0xfffffffb
  424661:	mov    bh,0xb1
  424663:	pop    esi
  424664:	cmp    al,0x1b
  424666:	jle    0x424619
  424668:	fisub  WORD PTR [edi-0x9452895]
  42466e:	cmp    edi,DWORD PTR ds:0x77df122e
  424674:	mov    esi,0x1850900f
  424679:	xor    al,0x9e
  42467b:	sbb    al,0x58
  42467d:	sub    al,0x72
  42467f:	jae    0x4246a8
  424681:	js     0x4246a6
  424683:	mov    ebp,0x4fe1a712
  424688:	rol    DWORD PTR ds:0xcc88f4c0,1
  42468e:	mov    ds:0xa07cf563,eax
  424693:	push   ss
  424694:	add    ah,BYTE PTR [esi+0x6]
  424697:	mov    edi,0x92193a7c
  42469c:	lods   al,BYTE PTR ds:[esi]
  42469d:	mov    bl,0x53
  42469f:	xrelease mov DWORD PTR [edi],edi
  4246a2:	mov    ah,cl
  4246a4:	pop    ds
  4246a5:	out    0x97,eax
  4246a7:	test   BYTE PTR [ebp+0x60],dl
  4246aa:	fsubp  st(1),st
  4246ac:	(bad)
  4246b0:	xlat   BYTE PTR ds:[ebx]
  4246b1:	std    
  4246b2:	sbb    ah,BYTE PTR [esi]
  4246b4:	ret    0x2283
  4246b7:	sbb    ecx,DWORD PTR [eax-0x4fef110a]
  4246bd:	xlat   BYTE PTR ds:[ebx]
  4246be:	stos   BYTE PTR es:[edi],al
  4246bf:	mov    dh,0x61
  4246c1:	adc    DWORD PTR [di],ebx
  4246c4:	and    BYTE PTR [edx+0x33],0xa7
  4246c8:	mov    dh,0x2d
  4246ca:	mov    cl,0xef
  4246cc:	ins    DWORD PTR es:[edi],dx
  4246cd:	jns    0x424699
  4246cf:	mov    edi,0xd7b912df
  4246d4:	mov    ebp,0xd6dc519b
  4246d9:	in     eax,dx
  4246da:	ret    
  4246db:	xor    eax,0xc004f387
  4246e0:	and    eax,esp
  4246e2:	mov    ds:0xfbb9a84a,al
  4246e7:	cmp    ecx,edx
  4246e9:	cmp    eax,0xbe711582
  4246ee:	push   ecx
  4246ef:	push   esi
  4246f0:	retf   0xb8af
  4246f3:	retf   
  4246f4:	scas   eax,DWORD PTR es:[edi]
  4246f5:	aas    
  4246f6:	sub    edx,DWORD PTR [edi-0x58]
  4246f9:	mov    bh,0x63
  4246fb:	mov    bl,0xda
  4246fd:	fistp  WORD PTR ds:0x31002bee
  424703:	pushf  
  424704:	(bad)  
  424705:	push   edi
  424706:	imul   ebx,DWORD PTR [esi+0x63],0x22
  42470a:	scas   al,BYTE PTR es:[edi]
  42470b:	sbb    al,0x52
  42470d:	xlat   BYTE PTR ds:[ebx]
  42470e:	jno    0x424716
  424710:	mov    edx,0x47668529
  424715:	jp     0x4246b6
  424717:	clc    
  424718:	ss out 0xb5,eax
  42471b:	inc    edx
  42471c:	dec    ebx
  42471d:	mov    eax,0x7f875438
  424722:	test   esi,0x40cbf73e
  424728:	jl     0x4246e9
  42472a:	test   BYTE PTR [edi+0x1e512fdb],ch
  424730:	mov    BYTE PTR [edx-0x108230a9],bh
  424736:	js     0x424751
  424738:	lods   al,BYTE PTR ds:[esi]
  424739:	shl    BYTE PTR [edi-0x48],1
  42473c:	mov    BYTE PTR [ebx-0x52225456],ch
  424742:	push   cs
  424743:	sub    bl,BYTE PTR [esp+edi*4-0x7a]
  424747:	and    DWORD PTR [ecx+0x67],ebp
  42474a:	inc    edx
  42474b:	aam    0x5c
  42474d:	or     eax,0xf31f505b
  424752:	mov    al,0xa0
  424754:	pop    es
  424755:	dec    esi
  424756:	test   DWORD PTR es:[ebx-0x29],edx
  42475a:	inc    ebp
  42475b:	mov    bl,0x34
  42475d:	addr16 leave 
  42475f:	xchg   edi,eax
  424760:	or     BYTE PTR [esi+0x14b08062],al
  424766:	mov    cl,0xa9
  424768:	and    bh,al
  42476a:	(bad)  
  42476b:	pop    ds
  42476c:	jge    0x4247c4
  42476e:	dec    eax
  42476f:	stos   DWORD PTR es:[edi],eax
  424770:	loopne 0x424719
  424772:	xchg   edi,eax
  424773:	stos   BYTE PTR es:[edi],al
  424774:	mov    esp,0x8543afa3
  424779:	jle    0x4247f3
  42477b:	push   edx
  42477c:	jle    0x4247b9
  42477e:	ja     0x4247bf
  424780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424781:	pinsrw mm2,edi,0x30
  424785:	xor    eax,0xc316c6cb
  42478a:	mov    bh,BYTE PTR ds:0xda9ae288
  424790:	sti    
  424791:	pop    eax
  424792:	push   es
  424793:	fadd   st,st(1)
  424795:	pusha  
  424796:	push   esi
  424797:	shl    DWORD PTR [ebx-0x2a488143],0xd6
  42479e:	je     0x424743
  4247a0:	xchg   DWORD PTR [ecx-0x55],edx
  4247a3:	aad    0x5a
  4247a5:	pop    eax
  4247a6:	sbb    BYTE PTR [edi+0x48],ah
  4247a9:	hlt    
  4247aa:	scas   eax,DWORD PTR es:[edi]
  4247ab:	fldcw  WORD PTR [ebx+esi*8]
  4247ae:	sysret 
  4247b0:	vprotw ymm13,xmm1,0x28
  4247b5:	xchg   edi,eax
  4247b6:	mov    al,ds:0xb18e383a
  4247bb:	mov    ecx,0x72f84cb1
  4247c0:	push   DWORD PTR ds:0xba77d7e2
  4247c6:	jmp    0x2a3dcf59
  4247cb:	xor    BYTE PTR [eax+0x69],al
  4247ce:	mov    ebp,DWORD PTR [esi+eiz*4-0x5]
  4247d2:	nop
  4247d3:	sbb    BYTE PTR [eax-0x2ba5687e],cl
  4247d9:	push   ebx
  4247da:	pop    ds
  4247db:	out    dx,al
  4247dc:	sbb    al,0x7e
  4247de:	mov    cl,0x62
  4247e0:	fucomp st(7)
  4247e2:	call   0xcac93ff6
  4247e7:	inc    ebp
  4247e8:	mov    BYTE PTR [ebp+0x36be2b3],ch
  4247ee:	ins    BYTE PTR es:[edi],dx
  4247ef:	je     0x424842
  4247f1:	addr16 int3 
  4247f3:	xor    ch,BYTE PTR [eax+eiz*1+0x53]
  4247f7:	gs xchg esp,eax
  4247f9:	hlt    
  4247fa:	mov    cl,0x39
  4247fc:	fcomp  DWORD PTR [ebx+0x233bfc24]
  424802:	jno    0x4247db
  424804:	(bad)  
  424805:	pop    esp
  424806:	xlat   BYTE PTR ds:[ebx]
  424807:	test   al,0x0
  424809:	inc    ebp
  42480a:	and    BYTE PTR [edi+0x135f3388],0x7b
  424811:	mov    bl,0x52
  424813:	test   BYTE PTR [eax+0x41],dh
  424816:	aas    
  424817:	mov    cs,WORD PTR [edx+0x74]
  42481a:	sahf   
  42481b:	rcr    ah,1
  42481d:	fst    QWORD PTR [edi]
  42481f:	or     DWORD PTR [eax],ecx
  424821:	dec    ebx
  424822:	dec    edi
  424823:	ss dec eax
  424825:	icebp  
  424826:	mov    dh,0xf1
  424828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424829:	mov    ecx,0x62084691
  42482e:	outs   dx,BYTE PTR ds:[esi]
  42482f:	mov    ds:0x44446708,al
  424834:	imul   DWORD PTR [ebx+0x41386e8e]
  42483a:	mov    cl,0x90
  42483c:	xchg   esp,eax
  42483d:	ds ins BYTE PTR es:[edi],dx
  42483f:	inc    edi
  424840:	push   edi
  424841:	aas    
  424842:	mov    esi,0x9dfb36d0
  424847:	pop    ecx
  424848:	loop   0x424821
  42484a:	rcl    edx,1
  42484c:	inc    ebx
  42484d:	or     al,0xf9
  42484f:	xchg   ebx,ecx
  424851:	arpl   WORD PTR [bx+si],cx
  424854:	jg     0x4247e5
  424856:	ret    
  424857:	(bad)  
  424858:	xchg   ecx,eax
  424859:	(bad)  
  42485a:	jge    0x4248c5
  42485c:	push   ebx
  42485d:	pop    esp
  42485e:	push   ds
  42485f:	jo     0x424869
  424861:	retf   
  424862:	mov    al,ds:0xa5ed7410
  424867:	add    esp,DWORD PTR [esi+0x74]
  42486a:	mov    cl,0x46
  42486c:	dec    ebx
  42486d:	cmp    DWORD PTR [esi-0x58],edx
  424870:	sahf   
  424871:	push   edx
  424872:	ret    
  424873:	xlat   BYTE PTR ds:[ebx]
  424874:	inc    edi
  424875:	inc    edx
  424876:	sub    DWORD PTR ds:0x412e04b5,ebp
  42487c:	mov    BYTE PTR [ebx+0xf],bh
  42487f:	mov    esi,DWORD PTR [eax-0x2fa854d3]
  424885:	addr16 pushf 
  424887:	lods   al,BYTE PTR ds:[esi]
  424888:	mov    bh,0xe5
  42488a:	outs   dx,DWORD PTR ds:[esi]
  42488b:	mov    WORD PTR [ecx],?
  42488d:	add    edx,eax
  42488f:	and    BYTE PTR [eax-0x3fae5ea3],cl
  424895:	fcomp  DWORD PTR [ecx-0x43]
  424898:	mov    ecx,0xca5d1c67
  42489d:	stc    
  42489e:	mov    ah,0x79
  4248a0:	lahf   
  4248a1:	lods   eax,DWORD PTR ds:[esi]
  4248a2:	rcr    bh,0x89
  4248a5:	wbinvd 
  4248a7:	ret    
  4248a8:	push   0x39966424
  4248ad:	lahf   
  4248ae:	adc    eax,DWORD PTR [eax-0x12427219]
  4248b4:	push   ds
  4248b5:	xchg   esi,eax
  4248b6:	xor    DWORD PTR [ecx-0x5e3f597b],ecx
  4248bc:	mov    esp,DWORD PTR [edx]
  4248be:	mov    cl,0xb7
  4248c0:	ror    DWORD PTR [ebx+0x180cfefe],cl
  4248c6:	(bad)  
  4248c7:	xlat   BYTE PTR ds:[ebx]
  4248c8:	lods   eax,DWORD PTR ds:[esi]
  4248c9:	in     eax,0x6
  4248cb:	push   ds
  4248cc:	mov    ds:0x888f64c0,al
  4248d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248d2:	pop    ds
  4248d3:	sbb    edx,DWORD PTR [esp+edx*8+0x17]
  4248d7:	in     al,dx
  4248d8:	inc    ebp
  4248d9:	fisub  WORD PTR [bp+di]
  4248dc:	scas   eax,DWORD PTR es:[edi]
  4248dd:	stc    
  4248de:	mov    edi,0xb14427f6
  4248e3:	mov    bl,0x83
  4248e5:	enter  0xde60,0xe3
  4248e9:	test   eax,0xfa6ad769
  4248ee:	shr    DWORD PTR ds:[eax],1
  4248f1:	fcom   DWORD PTR [eax]
  4248f3:	add    DWORD PTR [ebx-0x2d2c2104],0x40
  4248fa:	jb     0x424958
  4248fc:	xor    ah,bh
  4248fe:	xor    dl,BYTE PTR [esi]
  424900:	dec    eax
  424901:	pusha  
  424902:	fbld   TBYTE PTR [ebx-0x76]
  424905:	cmp    ch,BYTE PTR [eax-0x79]
  424908:	pop    ecx
  424909:	mov    dh,0x4
  42490b:	xchg   ecx,eax
  42490c:	inc    eax
  42490d:	pop    esp
  42490e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42490f:	retf   
  424910:	and    ebx,DWORD PTR [ecx]
  424912:	mov    al,0xef
  424914:	in     eax,0x34
  424916:	sub    bl,BYTE PTR [eax-0x8]
  424919:	pcmpeqd mm3,mm6
  42491c:	test   BYTE PTR [esi-0x39],ah
  42491f:	test   DWORD PTR [eax+0x2c8a3a06],0x9ea589b2
  424929:	in     al,0x82
  42492b:	inc    edx
  42492c:	fs cwde 
  42492e:	lods   eax,DWORD PTR ds:[esi]
  42492f:	nop    DWORD PTR [esi-0x5a402732]
  424936:	push   ss
  424937:	and    DWORD PTR [eax+0x13766fcf],ebp
  42493d:	jmp    0x73efb4f3
  424942:	and    BYTE PTR [ecx-0x2951c9ea],ch
  424948:	jmp    0x21e1:0x2c01b20b
  42494f:	daa    
  424950:	sub    eax,0x50bab1da
  424955:	cld    
  424956:	rcr    bh,1
  424958:	mov    bl,0x6a
  42495a:	add    bl,ch
  42495c:	stos   DWORD PTR es:[edi],eax
  42495d:	mov    BYTE PTR [ecx-0x428bb4de],dh
  424963:	ss lea esp,fs:[ebx-0x4e8f51d0]
  42496b:	fistp  QWORD PTR ds:0x9a898698
  424971:	pop    edx
  424972:	sar    DWORD PTR [edx],0x88
  424975:	add    ecx,eax
  424977:	jb     0x424958
  424979:	cli    
  42497a:	cvtdq2ps xmm1,XMMWORD PTR [eax+0x62feebcb]
  424981:	call   0x7f42:0x64765c9d
  424988:	int3   
  424989:	mov    ds:0x9c3708bf,al
  42498e:	daa    
  42498f:	and    edx,DWORD PTR [ecx-0x10]
  424992:	pop    ecx
  424993:	push   edi
  424994:	mov    BYTE PTR [ebx-0x3f792708],cl
  42499a:	out    0xd9,eax
  42499c:	mov    ecx,0xfd02889
  4249a1:	xor    eax,0x6c
  4249a4:	cmp    esp,DWORD PTR [edi-0xd]
  4249a7:	mov    ebx,DWORD PTR [eax-0x73b0770d]
  4249ad:	out    0xa6,eax
  4249af:	aas    
  4249b0:	and    bl,BYTE PTR [ebp-0x80]
  4249b3:	add    eax,DWORD PTR [esi+0x67]
  4249b6:	mov    bl,0x21
  4249b8:	icebp  
  4249b9:	out    dx,al
  4249ba:	adc    DWORD PTR [edx+edi*1],ebp
  4249bd:	add    BYTE PTR [ecx+0x760d4ddf],dh
  4249c3:	pusha  
  4249c4:	sahf   
  4249c5:	sbb    bl,BYTE PTR [edi-0x29]
  4249c8:	push   ds
  4249c9:	dec    DWORD PTR [eax+0x710eb6e9]
  4249cf:	inc    edi
  4249d0:	mov    BYTE PTR [esi],ah
  4249d2:	int    0x8b
  4249d4:	add    DWORD PTR [ebp-0x5f],esp
  4249d7:	or     al,0xd
  4249d9:	addr16 (bad) 
  4249dc:	mov    dl,dl
  4249de:	push   ecx
  4249df:	popa   
  4249e0:	jns    0x4249be
  4249e2:	mov    cl,0x9d
  4249e4:	mov    bl,0x79
  4249e6:	jle    0x424a1a
  4249e8:	mov    dl,0xdf
  4249ea:	xchg   ebx,eax
  4249eb:	xlat   BYTE PTR ds:[ebx]
  4249ec:	retf   0xa03e
  4249ef:	mov    ebx,0xe042fb74
  4249f4:	mov    BYTE PTR [eax+0x39],bl
  4249f7:	push   ss
  4249f8:	or     BYTE PTR [ebp+ecx*4-0x6c98ea55],al
  4249ff:	push   0xffffff9c
  424a01:	add    BYTE PTR ds:0x4518fe22,dh
  424a07:	outs   dx,BYTE PTR ds:[esi]
  424a08:	(bad)  
  424a09:	mov    ch,0x3a
  424a0b:	push   cs
  424a0c:	ins    BYTE PTR es:[edi],dx
  424a0d:	out    0xaa,eax
  424a0f:	sub    eax,0xd7a3b33d
  424a14:	cs dec edi
  424a16:	loopne 0x424a92
  424a18:	int    0x7c
  424a1a:	mov    DWORD PTR [ecx+ecx*4-0x39],ecx
  424a1e:	push   0x2347c673
  424a23:	sbb    al,0xcb
  424a25:	les    edi,FWORD PTR [esi+0x3f]
  424a28:	push   edi
  424a29:	xchg   ecx,eax
  424a2a:	sbb    edx,edi
  424a2c:	jnp    0x424a19
  424a2e:	inc    ebp
  424a2f:	pop    eax
  424a30:	in     al,0xf9
  424a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a33:	ficomp DWORD PTR [ebx-0x3749760e]
  424a39:	and    ah,bl
  424a3b:	aad    0xbc
  424a3d:	outs   dx,BYTE PTR ds:[esi]
  424a3e:	js     0x424a17
  424a40:	mov    eax,ds:0xd6569d74
  424a45:	push   ebp
  424a46:	mov    esp,0xb1d0f944
  424a4b:	dec    ebp
  424a4c:	out    0x78,eax
  424a4e:	nop
  424a4f:	(bad)  
  424a50:	fmul   DWORD PTR [ecx]
  424a52:	mov    edi,ss
  424a54:	mov    esp,0xc9333eb4
  424a59:	xchg   ebp,eax
  424a5a:	lods   al,BYTE PTR ds:[esi]
  424a5b:	mov    ah,0xbe
  424a5d:	adc    BYTE PTR [ebx+0x3ff7dd57],ch
  424a63:	mov    eax,ds:0xd7f6dd07
  424a68:	adc    al,0xdc
  424a6a:	fs popf 
  424a6c:	lea    edi,ds:0x4c81533c
  424a72:	dec    ebp
  424a73:	cmp    DWORD PTR ds:[edx],ebp
  424a76:	sar    ebp,0xb8
  424a79:	lock outs dx,BYTE PTR ds:[esi]
  424a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a7c:	mov    dl,0x43
  424a7e:	xchg   ebx,eax
  424a7f:	loop   0x424a91
  424a81:	pop    edx
  424a82:	mov    cl,0x81
  424a84:	mov    ecx,0x480c3d92
  424a89:	lods   al,BYTE PTR ds:[esi]
  424a8a:	mov    dl,bl
  424a8c:	or     BYTE PTR [eax-0x2a],ch
  424a8f:	dec    edx
  424a90:	jl     0x424af9
  424a92:	mov    WORD PTR [ecx-0x1d],?
  424a95:	retf   0xd940
  424a98:	xchg   esp,eax
  424a99:	mov    ebx,0xd019bd8
  424a9e:	xlat   BYTE PTR ds:[ebx]
  424a9f:	pop    ss
  424aa0:	sti    
  424aa1:	icebp  
  424aa2:	mov    DWORD PTR [edx-0x78],esp
  424aa5:	in     eax,0xc8
  424aa7:	jo     0x424af1
  424aa9:	sub    cl,BYTE PTR [esi+0x3b]
  424aac:	sub    esp,DWORD PTR [edi+0x77]
  424aaf:	dec    eax
  424ab0:	jle    0x424aca
  424ab2:	adc    ecx,ebp
  424ab4:	or     BYTE PTR [ebp-0x4f],bl
  424ab7:	jne    0x424a4f
  424ab9:	retf   
  424aba:	(bad)  
  424abb:	(bad)  
  424abc:	aas    
  424abd:	sub    BYTE PTR [edx],0xd7
  424ac0:	in     eax,dx
  424ac1:	xor    DWORD PTR cs:[esi],0xc1a56f86
  424ac8:	mov    BYTE PTR [edx],ch
  424aca:	test   DWORD PTR [edi],ebx
  424acc:	inc    esi
  424acd:	dec    edx
  424ace:	jo     0x424b4c
  424ad0:	cs jp  0x424b0c
  424ad3:	loope  0x424a77
  424ad5:	fdiv   DWORD PTR [ecx]
  424ad7:	add    al,0xb1
  424ad9:	popa   
  424ada:	stc    
  424adb:	and    al,0x2c
  424add:	ja     0x424a90
  424adf:	cwde   
  424ae0:	gs test eax,0x8ff471c8
  424ae6:	in     al,0xd7
  424ae8:	lock push ss
  424aea:	mov    bl,dh
  424aec:	(bad)  
  424aed:	outs   dx,DWORD PTR ds:[esi]
  424aee:	cli    
  424aef:	ret    
  424af0:	xchg   esp,eax
  424af2:	cs xor eax,0xc837eee6
  424af8:	je     0x424b0c
  424afa:	add    al,0xd7
  424afc:	lea    edx,[ebp-0x15]
  424aff:	mov    dh,0x20
  424b01:	inc    ecx
  424b02:	sbb    BYTE PTR [ecx-0x31f3d878],bh
  424b08:	rcr    DWORD PTR [edi+0x73],1
  424b0b:	fnstsw WORD PTR [ebp+0x3929ca67]
  424b11:	sub    esi,edx
  424b13:	mov    esp,0xeda6a860
  424b18:	dec    edx
  424b19:	je     0x424acc
  424b1b:	xchg   ebp,eax
  424b1c:	es inc eax
  424b1e:	dec    esi
  424b1f:	jae    0x424b78
  424b21:	addr16 gs loope 0x424ac9
  424b25:	sbb    al,0xf1
  424b27:	test   dh,dl
  424b29:	xor    BYTE PTR [ecx+0x4137abce],0x44
  424b30:	sbb    bh,BYTE PTR ds:0xb6d9d7f6
  424b36:	inc    edi
  424b37:	dec    edx
  424b38:	sub    DWORD PTR [eax+0x4a],esp
  424b3b:	(bad)  [eax+0x71e349ab]
  424b41:	mov    cl,0x2a
  424b43:	lea    ebp,[edx+0x55b8d867]
  424b49:	mov    ebx,DWORD PTR [esi-0x20]
  424b4c:	sbb    edi,DWORD PTR [ecx+esi*4]
  424b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b50:	sahf   
  424b51:	into   
  424b52:	push   cs
  424b53:	sbb    DWORD PTR [ebp+0x12],ebx
  424b56:	adc    bh,0x77
  424b59:	xor    ebx,esi
  424b5b:	inc    ebx
  424b5c:	pop    ecx
  424b5d:	and    ah,dl
  424b5f:	add    DWORD PTR [eax-0x57465f54],ecx
  424b65:	sbb    al,0x58
  424b67:	ins    BYTE PTR es:[edi],dx
  424b68:	inc    eax
  424b69:	addr16 cwde 
  424b6b:	pop    ecx
  424b6c:	test   eax,0x5962b3a4
  424b71:	cmpxchg DWORD PTR [edx-0x63b9dfe3],ebx
  424b78:	dec    ebp
  424b79:	and    dl,dl
  424b7b:	xlat   BYTE PTR ds:[ebx]
  424b7c:	jle    0x424bc5
  424b7e:	mov    cs,WORD PTR [ebp-0x6d]
  424b81:	push   esp
  424b82:	jmp    0x8792:0x29f5ac29
  424b89:	jg     0x424bc3
  424b8b:	loope  0x424b51
  424b8d:	pop    ebx
  424b8e:	pop    ebp
  424b8f:	addr16 enter 0xda67,0x5b
  424b94:	push   edi
  424b95:	es fwait
  424b97:	loop   0x424bd3
  424b99:	push   0xffffff8f
  424b9b:	jl     0x424b60
  424b9d:	out    0xac,eax
  424b9f:	push   ebx
  424ba0:	aaa    
  424ba1:	sub    BYTE PTR [eax],dl
  424ba3:	or     DWORD PTR [edi+eiz*2],ebx
  424ba6:	loop   0x424bbf
  424ba8:	cld    
  424ba9:	xor    dl,BYTE PTR [ebx+0x2c]
  424bac:	sub    eax,0x8adc098d
  424bb1:	add    esp,DWORD PTR [eax]
  424bb3:	ret    
  424bb4:	mov    al,ds:0x4705cea7
  424bb9:	ss push esp
  424bbb:	enter  0x90bf,0x36
  424bbf:	sbb    BYTE PTR [eax],bl
  424bc1:	fist   WORD PTR [ecx]
  424bc3:	scas   eax,DWORD PTR es:[edi]
  424bc4:	fild   QWORD PTR [edi-0x3e]
  424bc7:	mov    bl,0xc0
  424bc9:	repz addr16 (bad) 
  424bcc:	out    0xe7,al
  424bce:	push   ebp
  424bcf:	sti    
  424bd0:	outs   dx,DWORD PTR ds:[esi]
  424bd1:	mov    ecx,0x6762e549
  424bd6:	inc    edi
  424bd7:	dec    eax
  424bd8:	jecxz  0x424c0d
  424bda:	loopne 0x424bd1
  424bdc:	int    0x24
  424bde:	mov    al,0xc4
  424be0:	push   edx
  424be1:	jmp    0x3b45:0x1cc46cee
  424be8:	jp     0x424c51
  424bea:	imul   edx,DWORD PTR ds:0xa58fe6e9,0x8fb13c5f
  424bf4:	lds    esi,FWORD PTR [esi+esi*1-0x2df1ae72]
  424bfb:	(bad)  
  424bfc:	push   ds
  424bfd:	pop    edx
  424bfe:	(bad)
  424c03:	xor    ebp,esi
  424c05:	jo     0x424bb8
  424c07:	ret    0x804b
  424c0a:	or     al,0x62
  424c0c:	in     eax,dx
  424c0d:	mov    al,ds:0x5c2dd72c
  424c12:	sar    DWORD PTR [ecx+0x70],0x85
  424c16:	inc    ecx
  424c17:	sub    DWORD PTR [esi-0x45],esi
  424c1a:	mov    cl,0x49
  424c1c:	xlat   BYTE PTR ds:[ebx]
  424c1d:	dec    esi
  424c1e:	jns    0x424c0b
  424c20:	xchg   ecx,eax
  424c21:	pop    ecx
  424c22:	je     0x424bfb
  424c24:	or     BYTE PTR [ebp+0x39],dl
  424c27:	test   ecx,0x80df9f2c
  424c2d:	sbb    DWORD PTR [ecx-0x737fac63],esi
  424c33:	imul   edi,edi,0x1f
  424c36:	xor    cl,bl
  424c38:	push   ebp
  424c39:	sbb    ch,bh
  424c3b:	dec    edi
  424c3c:	enter  0x460f,0x8c
  424c40:	cmp    BYTE PTR ds:0x6872a9b1,0x35
  424c47:	stc    
  424c48:	mov    ah,BYTE PTR [esi+0x65]
  424c4b:	aam    0xc0
  424c4d:	xor    dl,BYTE PTR [edx]
  424c4f:	shl    DWORD PTR [ecx+eiz*4+0x3e],0x56
  424c54:	dec    edi
  424c55:	mov    edx,0xf20ba793
  424c5a:	mov    al,0x60
  424c5c:	xor    BYTE PTR [esi+0x582ece38],cl
  424c62:	pop    eax
  424c63:	sub    DWORD PTR [eax-0x6d26c669],0xa8e9729c
  424c6d:	or     ebx,eax
  424c6f:	test   DWORD PTR [ebp+0x188eb1a6],0x2b780644
  424c79:	(bad)  
  424c7a:	mov    edi,edx
  424c7c:	mov    ebp,0xc5e75c0e
  424c81:	mov    dh,0x4f
  424c83:	int    0x88
  424c85:	cs xor al,0x11
  424c88:	push   ss
  424c89:	add    esp,DWORD PTR [ebp+0x63]
  424c8c:	sub    al,0x67
  424c8e:	sbb    DWORD PTR [bx],eax
  424c91:	femms  
  424c93:	and    esi,0xffffff86
  424c96:	mov    cl,0x2
  424c98:	xchg   ebx,eax
  424c99:	cmp    DWORD PTR [ebx+0x5ab4c8c6],eax
  424c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ca0:	ins    BYTE PTR es:[edi],dx
  424ca1:	addr16 (bad) 
  424ca3:	pushf  
  424ca4:	cmp    esp,edx
  424ca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ca7:	push   esi
  424ca8:	in     eax,dx
  424ca9:	mov    bh,0xb1
  424cab:	popf   
  424cac:	pop    esi
  424cad:	jb     0x424c68
  424caf:	sar    DWORD PTR [ecx+0x71d63ec1],0xcd
  424cb6:	mov    edx,0xec4b9957
  424cbb:	out    0xc2,eax
  424cbd:	cmp    al,0xb1
  424cbf:	test   edx,ebp
  424cc1:	jge    0x424cba
  424cc3:	push   DWORD PTR [edx+ebx*8]
  424cc6:	loopne 0x424c9f
  424cc8:	jmp    0x5babb126
  424ccd:	add    eax,0x888870fc
  424cd2:	shr    esi,0xdf
  424cd5:	clc    
  424cd6:	mov    dh,0xf6
  424cd8:	xchg   ebp,eax
  424cd9:	addr16 xchg ecx,eax
  424cdb:	lea    eax,[ebx]
  424cdd:	(bad)  
  424cde:	xor    ch,al
  424ce0:	call   0xfe66febc
  424ce5:	fs mov edi,0x9b63c3ef
  424ceb:	xlat   BYTE PTR ds:[ebx]
  424cec:	aaa    
  424ced:	push   cs
  424cee:	mov    ds:0xa5d2ecd5,eax
  424cf3:	pushf  
  424cf4:	mov    BYTE PTR [edx+edi*1],dl
  424cf7:	fadd   QWORD PTR [esi+0x4e]
  424cfa:	dec    ebx
  424cfb:	pop    edx
  424cfc:	mov    ebp,0x32b8176d
  424d01:	pop    edi
  424d02:	sub    bh,dl
  424d04:	in     al,dx
  424d05:	jl     0x424d46
  424d07:	bound  eax,QWORD PTR ds:0x3f93b131
  424d0d:	mov    esp,0x4cbdf019
  424d12:	ins    DWORD PTR es:[edi],dx
  424d13:	xlat   BYTE PTR ds:[ebx]
  424d14:	jg     0x424d48
  424d16:	bound  esi,QWORD PTR [ecx]
  424d18:	or     DWORD PTR [esi-0x77],edx
  424d1b:	add    ecx,DWORD PTR [eax-0x7c1aa621]
  424d21:	mov    eax,ds:0x66a159fc
  424d26:	mov    BYTE PTR [eax+0x78],ch
  424d29:	into   
  424d2a:	push   esi
  424d2b:	(bad)  
  424d2c:	jmp    0x424d45
  424d2e:	pop    esp
  424d2f:	out    0x8d,eax
  424d31:	ret    
  424d32:	pop    ds
  424d33:	(bad)  
  424d35:	out    0x59,eax
  424d37:	cwde   
  424d38:	pop    ebp
  424d39:	sbb    eax,DWORD PTR [eax-0x1ef26418]
  424d3f:	cmp    eax,0x3cd168ae
  424d44:	js     0x424cd0
  424d46:	push   ecx
  424d47:	fwait
  424d48:	ja     0x424d22
  424d4a:	fcom   QWORD PTR [edx-0x78]
  424d4d:	lods   al,BYTE PTR ds:[esi]
  424d4e:	call   DWORD PTR [ebp+0x2a]
  424d51:	fstp   st(1)
  424d53:	cmp    bl,dh
  424d55:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  424d57:	into   
  424d58:	das    
  424d59:	les    esp,FWORD PTR [edi-0x22]
  424d5c:	jo     0x424ddd
  424d5e:	mov    cl,0x31
  424d60:	adc    BYTE PTR [ebx],dh
  424d62:	pushf  
  424d63:	mov    BYTE PTR [ebx+eiz*4],ch
  424d66:	push   esi
  424d67:	xlat   BYTE PTR ds:[ebx]
  424d68:	test   eax,0xea20f82
  424d6d:	dec    esi
  424d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d6f:	sub    DWORD PTR [edx-0x5ff37a62],ecx
  424d75:	jo     0x424d36
  424d77:	cmp    eax,0x7945c7fc
  424d7c:	les    esp,FWORD PTR [eax-0x1c622b04]
  424d82:	hlt    
  424d83:	jmp    0x17b82bb5
  424d88:	sub    DWORD PTR [ecx+0xc88de42],eax
  424d8e:	scas   eax,DWORD PTR es:[edi]
  424d8f:	dec    edi
  424d90:	stc    
  424d91:	aam    0x6e
  424d93:	jb     0x424db1
  424d95:	addr16 jae 0x424e09
  424d98:	inc    ebp
  424d99:	pop    edi
  424d9a:	bound  esp,QWORD PTR [ebx-0x7e4e8845]
  424da0:	pop    edi
  424da1:	(bad)  
  424da2:	shl    esp,1
  424da4:	xor    ch,0xa7
  424da7:	sti    
  424da8:	inc    esp
  424da9:	and    eax,0x35c8d738
  424dae:	dec    esp
  424daf:	sub    ecx,ecx
  424db1:	or     DWORD PTR [ebx+0x65677dae],0x77
  424db8:	dec    eax
  424db9:	mov    eax,0x68edb7a2
  424dbe:	fadd   st,st(3)
  424dc0:	cmp    BYTE PTR [edx],bh
  424dc2:	ins    BYTE PTR es:[edi],dx
  424dc3:	push   edi
  424dc4:	add    BYTE PTR [eax+0x11fdae1],0x8c
  424dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dcc:	sbb    esp,esp
  424dce:	js     0x424e21
  424dd0:	(bad)  
  424dd2:	jb     0x424e0a
  424dd4:	ja     0x424d72
  424dd6:	retf   
  424dd7:	daa    
  424dd8:	sbb    BYTE PTR [ebp-0x40],0x9b
  424ddc:	je     0x424da2
  424dde:	mov    cl,0x77
  424de0:	int    0x70
  424de2:	je     0x424e08
  424de4:	popf   
  424de5:	retf   
  424de6:	(bad)  
  424de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424de8:	(bad)  
  424de9:	js     0x424dc9
  424deb:	jbe    0x424e2e
  424ded:	addr16 retf 0x5864
  424df1:	call   0xadd9:0x358ab532
  424df8:	nop
  424df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dfa:	stos   BYTE PTR es:[edi],al
  424dfb:	pop    ds
  424dfc:	dec    edx
  424dfd:	aaa    
  424dfe:	mov    ch,0xd6
  424e00:	sbb    dh,BYTE PTR [esi-0x5a]
  424e03:	repz add DWORD PTR ds:0xe3e9a718,0xffffffa2
  424e0b:	(bad)  
  424e0c:	shr    ch,cl
  424e0e:	pop    ds
  424e0f:	fadd   st,st(1)
  424e11:	inc    edx
  424e12:	push   eax
  424e13:	xchg   ebx,eax
  424e14:	test   eax,0x5038079a
  424e19:	push   cs
  424e1a:	int3   
  424e1b:	int3   
  424e1c:	dec    eax
  424e1d:	idiv   DWORD PTR [esi+ebx*2]
  424e20:	xlat   BYTE PTR ds:[ebx]
  424e21:	add    bh,BYTE PTR [esi]
  424e23:	les    esp,FWORD PTR [eax+ecx*4]
  424e26:	push   ds
  424e27:	xlat   BYTE PTR ds:[ebx]
  424e28:	outs   dx,DWORD PTR ds:[esi]
  424e29:	cld    
  424e2a:	pushf  
  424e2b:	cmp    al,0xaf
  424e2d:	shl    DWORD PTR [ecx+0x4baf9f2b],0xe4
  424e34:	xchg   DWORD PTR [ebx-0x35203ec3],ebp
  424e3a:	cmp    edx,esp
  424e3c:	js     0x424e15
  424e3e:	int    0x4d
  424e40:	jo     0x424dcf
  424e42:	in     al,dx
  424e43:	pop    es
  424e44:	push   0xfd52b181
  424e49:	cs in  al,0x79
  424e4c:	repz mov edx,0x7f81c141
  424e52:	mov    ch,BYTE PTR [edi+0x40]
  424e55:	add    edx,DWORD PTR [si+0x2]
  424e59:	int    0x9b
  424e5b:	or     esp,0x67
  424e5e:	adc    esi,ebp
  424e60:	retf   0x2f68
  424e63:	fucom  st(2)
  424e65:	sub    bl,BYTE PTR [edi+0x1a]
  424e68:	mov    BYTE PTR [esi+0x42],bh
  424e6b:	jmp    0xdf2bb45e
  424e70:	jmp    0x9aaf:0x3084e767
  424e77:	sub    BYTE PTR [bx+di-0x4f],dl
  424e7b:	sbb    BYTE PTR [eax+0x5833c753],bl
  424e81:	cmp    al,0xd5
  424e83:	retf   
  424e84:	arpl   bx,cx
  424e86:	cs xchg edi,eax
  424e88:	mov    BYTE PTR cs:[esi+esi*2+0x37],ah
  424e8d:	cmp    esi,DWORD PTR [ecx-0x539b3d78]
  424e93:	sub    BYTE PTR [ebp+0x6fd756e2],dh
  424e99:	retf   0x2dd1
  424e9c:	scas   eax,DWORD PTR es:[edi]
  424e9d:	pop    edx
  424e9e:	mov    edx,0xb1c44020
  424ea3:	int3   
  424ea4:	call   0xd78a:0x655fccd2
  424eab:	xlat   BYTE PTR ds:[ebx]
  424eac:	add    cl,al
  424eae:	ffreep st(7)
  424eb0:	imul   bl
  424eb2:	fwait
  424eb3:	inc    ebp
  424eb4:	mov    al,dl
  424eb6:	fiadd  WORD PTR [edi-0x25a84d4f]
  424ebc:	mov    esi,0x3aba4267
  424ec1:	jb     0x424e65
  424ec3:	iret   
  424ec4:	dec    ebx
  424ec5:	mov    dh,0xb1
  424ec7:	add    al,0xd2
  424ec9:	push   edx
  424eca:	dec    ecx
  424ecb:	stos   BYTE PTR es:[edi],al
  424ecc:	dec    esi
  424ecd:	aaa    
  424ece:	jg     0x424ea7
  424ed0:	ss (bad) 
  424ed2:	sbb    al,0x97
  424ed4:	push   edx
  424ed5:	vmread DWORD PTR [edx],ebp
  424ed8:	mov    edx,0xd26c7239
  424edd:	out    0xf9,eax
  424edf:	pop    ecx
  424ee0:	pop    esi
  424ee1:	shl    DWORD PTR [ecx+0x43],0xa3
  424ee5:	das    
  424ee6:	sub    DWORD PTR [ecx],ecx
  424ee8:	or     DWORD PTR [ebx-0x18edc36d],0x5d52d158
  424ef2:	mov    cl,0x26
  424ef4:	(bad)  
  424ef5:	aas    
  424ef6:	rcr    BYTE PTR [ebx+ebp*1],cl
  424ef9:	jmp    0x424ef1
  424efb:	xlat   BYTE PTR ds:[ebx]
  424efc:	loop   0x424f37
  424efe:	xor    DWORD PTR [ebp-0x3343ad43],edx
  424f04:	jp     0x424f03
  424f06:	mov    cl,0xc3
  424f08:	pusha  
  424f09:	adc    al,0x4f
  424f0b:	adc    BYTE PTR [bx+si],dl
  424f0e:	dec    eax
  424f0f:	(bad)  
  424f10:	pop    edx
  424f11:	ins    DWORD PTR es:[edi],dx
  424f12:	ins    DWORD PTR es:[edi],dx
  424f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f14:	sub    al,0xfc
  424f16:	js     0x424f23
  424f18:	aam    0x86
  424f1a:	mov    BYTE PTR [edi+0x5b08e73a],bh
  424f20:	or     edi,esi
  424f22:	inc    edi
  424f23:	pop    ds
  424f24:	xor    eax,0x2ca61967
  424f29:	sub    eax,0x7f3615e1
  424f2e:	dec    edi
  424f2f:	push   esi
  424f30:	mov    bl,ch
  424f32:	imul   edx,DWORD PTR [esi+0x277e6e7d],0xffffffad
  424f39:	addr16 jmp 0x86318144
  424f3f:	inc    ebx
  424f40:	push   edi
  424f41:	inc    esp
  424f42:	mov    cl,0x49
  424f44:	sbb    al,0xfe
  424f46:	aad    0xdf
  424f48:	popa   
  424f49:	jo     0x424f9e
  424f4b:	xlat   BYTE PTR ds:[ebx]
  424f4c:	adc    al,BYTE PTR [eax]
  424f4e:	popf   
  424f4f:	sar    BYTE PTR [ecx],cl
  424f51:	pop    edi
  424f52:	out    dx,eax
  424f53:	or     eax,0x7df70b88
  424f58:	inc    eax
  424f59:	sar    BYTE PTR [eax],1
  424f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f5c:	(bad)  [edi-0x69]
  424f5f:	rol    edi,cl
  424f61:	sub    BYTE PTR [eiz*2-0x735d84ae],bh
  424f68:	lods   al,BYTE PTR ds:[esi]
  424f69:	lods   eax,DWORD PTR ds:[esi]
  424f6a:	mov    cl,0xaa
  424f6c:	jb     0x424f49
  424f6e:	out    0xbf,al
  424f70:	mov    edx,0x32a387b
  424f75:	addr16 push ebx
  424f77:	dec    edx
  424f78:	push   ds
  424f79:	jle    0x424f8b
  424f7b:	push   ebp
  424f7c:	mov    BYTE PTR [ecx-0x5c],al
  424f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f80:	adc    ah,BYTE PTR ds:0x67f6a06c
  424f86:	cmp    BYTE PTR [eax],ch
  424f88:	ror    BYTE PTR [eax+0x2b5491b8],0xb1
  424f8f:	cmp    eax,ebp
  424f91:	mov    esp,0xb81a7520
  424f96:	ins    BYTE PTR es:[edi],dx
  424f97:	repz loop 0x424f8b
  424f9a:	mov    edi,ss
  424f9c:	jmp    0x424fdf
  424f9e:	(bad)  
  424fa0:	test   ebx,edx
  424fa2:	mov    cl,0x2f
  424fa4:	inc    esp
  424fa5:	rcr    BYTE PTR [ebx-0x4004e8a9],cl
  424fab:	xlat   BYTE PTR ds:[ebx]
  424fac:	xor    BYTE PTR [ebp+0x17],dl
  424faf:	mov    ch,0xfc
  424fb1:	xchg   bl,bl
  424fb3:	xchg   ecx,eax
  424fb4:	xchg   esi,eax
  424fb5:	test   eax,0x3c88e656
  424fba:	xchg   esp,eax
  424fbb:	fld    TBYTE PTR [edx]
  424fbd:	jns    0x424f5b
  424fbf:	fsub   DWORD PTR [ebp+0x4]
  424fc2:	scas   al,BYTE PTR es:[edi]
  424fc3:	cld    
  424fc4:	push   0xb89022fa
  424fc9:	lds    esi,FWORD PTR [ecx+0x7b71e1ff]
  424fcf:	mov    cl,0x60
  424fd1:	fld    TBYTE PTR [eax-0x29]
  424fd4:	fcmove st,st(0)
  424fd6:	sub    ebp,esp
  424fd8:	fild   QWORD PTR [esi+0x76]
  424fdb:	cdq    
  424fdc:	je     0x424fa0
  424fde:	mov    cl,0x87
  424fe0:	aad    0xbd
  424fe2:	int3   
  424fe3:	mov    dh,0x6a
  424fe5:	and    DWORD PTR [edx],0xac33f5d7
  424feb:	fist   WORD PTR [esi+0x6e]
  424fee:	call   0xe416:0xc9508865
  424ff5:	cmp    ecx,DWORD PTR [esi-0x3e]
  424ff8:	adc    BYTE PTR [edi+0x45],ah
  424ffb:	mov    ds,WORD PTR [ebx-0x6b]
  424ffe:	neg    BYTE PTR [ecx+0x77]
  425001:	dec    esi
  425002:	mov    cl,0x6b
  425004:	fs xchg edx,eax
  425006:	scas   al,BYTE PTR es:[edi]
  425007:	mov    al,0xf2
  425009:	int    0x76
  42500b:	(bad)  
  42500c:	pop    ss
  42500d:	scas   eax,DWORD PTR es:[edi]
  42500e:	mov    cl,0x4d
  425010:	mov    ah,0x3d
  425012:	int    0xd8
  425014:	sub    bh,BYTE PTR [edi]
  425016:	mov    cl,0x56
  425018:	mov    esp,cs
  42501a:	inc    ebx
  42501b:	fcmove st,st(4)
  42501d:	in     eax,dx
  42501e:	inc    edx
  42501f:	out    dx,al
  425020:	jl     0x42505d
  425022:	mov    ah,BYTE PTR [edi]
  425024:	mov    BYTE PTR [esi+ecx*8],al
  425027:	cmp    DWORD PTR [ecx+eiz*1-0x5e],esi
  42502b:	dec    ecx
  42502c:	test   BYTE PTR [ebx],0xb1
  42502f:	in     eax,dx
  425030:	data16 lods al,BYTE PTR ds:[esi]
  425032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425033:	or     eax,0xd71c178a
  425038:	call   0x5ad0:0x78ada8b0
  42503f:	inc    DWORD PTR [edi-0x641416a]
  425045:	dec    edx
  425046:	sbb    DWORD PTR [edx-0x2820eba8],edx
  42504c:	xchg   esp,eax
  42504d:	enter  0xcd37,0xb
  425051:	jb     0x425096
  425053:	push   ebp
  425054:	xchg   DWORD PTR [ecx+0x492722be],esp
  42505a:	addr16 mov edx,0xd76d2c80
  425060:	mov    ebx,0xd188265f
  425065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425066:	(bad)  
  425067:	xchg   ebx,eax
  425068:	test   DWORD PTR [eax+eax*8],esi
  42506b:	push   ecx
  42506c:	sub    dh,bl
  42506e:	in     al,dx
  42506f:	js     0x425089
  425071:	lods   eax,DWORD PTR ds:[esi]
  425072:	fcmovu st,st(6)
  425074:	sbb    esp,DWORD PTR [edi+0x1]
  425077:	add    edx,DWORD PTR [ebx-0x5a]
  42507a:	in     eax,dx
  42507b:	adc    DWORD PTR [eax],ebx
  42507d:	xchg   ebp,eax
  42507e:	mov    cl,0x29
  425080:	int    0x5d
  425082:	inc    ecx
  425083:	mov    al,ds:0xd7883dec
  425088:	lahf   
  425089:	shr    BYTE PTR [edx+ecx*8-0x1e],cl
  42508d:	aad    0x8d
  42508f:	mov    ebp,0x66b1c4ff
  425094:	js     0x4250e5
  425096:	push   cs
  425097:	sub    eax,0xd769a079
  42509c:	(bad)  
  42509d:	std    
  42509e:	fimul  DWORD PTR [esi-0x3747b6f6]
  4250a4:	mov    ecx,0x5557c6a6
  4250a9:	(bad)  
  4250aa:	(bad)  
  4250ac:	aaa    
  4250ad:	test   dh,ah
  4250af:	aam    0x31
  4250b1:	mov    dl,0xad
  4250b3:	jb     0x42504b
  4250b5:	test   BYTE PTR [edx],0xdb
  4250b8:	and    edi,eax
  4250ba:	(bad)  
  4250bb:	jmp    0xf4c3:0xc0acfb95
  4250c2:	xor    DWORD PTR [esi+esi*8],ebx
  4250c5:	call   0xd413:0x60d67e49
  4250cc:	ror    ch,1
  4250ce:	push   0x24
  4250d0:	add    al,0x51
  4250d2:	pop    ecx
  4250d3:	dec    esp
  4250d4:	sbb    al,0x61
  4250d6:	mov    cl,0x9
  4250d8:	mov    edx,0xae2d16b6
  4250dd:	test   al,0xf4
  4250df:	xlat   BYTE PTR ds:[ebx]
  4250e0:	(bad)  
  4250e1:	pop    ss
  4250e2:	jge    0x42514b
  4250e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250e5:	xor    DWORD PTR [edi-0x55a57791],edx
  4250eb:	pop    esi
  4250ec:	in     eax,dx
  4250ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250ee:	(bad)  
  4250ef:	in     eax,0x1b
  4250f1:	addr16 out dx,eax
  4250f3:	int    0x49
  4250f5:	add    al,0x1b
  4250f7:	or     bl,dl
  4250f9:	push   esi
  4250fa:	mov    cl,0xde
  4250fc:	mov    dl,0xb9
  4250fe:	test   eax,0x2571c45b
  425103:	out    dx,eax
  425104:	mov    eax,ds:0xd4de4de6
  425109:	mov    ds:0x34882ede,eax
  42510e:	clc    
  42510f:	stos   BYTE PTR es:[edi],al
  425110:	(bad)  
  425111:	ret    0xa7b6
  425114:	sub    DWORD PTR [ebx+0x45753b50],ebx
  42511a:	retf   
  42511b:	daa    
  42511c:	add    BYTE PTR [edi+0x5569d746],bh
  425122:	fild   QWORD PTR [eax]
  425124:	lods   al,BYTE PTR ds:[esi]
  425125:	xchg   edx,eax
  425126:	loop   0x425168
  425128:	mov    dl,al
  42512a:	ret    
  42512b:	je     0x4250d4
  42512d:	les    ecx,FWORD PTR ss:[ebp-0x7a7e9328]
  425134:	jecxz  0x4250f4
  425136:	mov    cl,0x57
  425138:	dec    edx
  425139:	retf   
  42513a:	lods   al,BYTE PTR ds:[esi]
  42513b:	cli    
  42513c:	mov    BYTE PTR [edi],bl
  42513e:	iret   
  42513f:	mov    ds:0x96a1148c,eax
  425144:	dec    ebp
  425145:	pop    eax
  425146:	cmp    edx,DWORD PTR [edx+0x2f90607b]
  42514c:	xchg   esp,eax
  42514d:	inc    edx
  42514e:	and    dh,BYTE PTR [eax+0x4d00731]
  425154:	jb     0x4250f4
  425156:	mov    cl,0xc7
  425158:	cmc    
  425159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42515a:	test   BYTE PTR [eax-0x28],0x4d
  42515e:	in     al,0xd7
  425160:	add    bh,BYTE PTR [esp+esi*1]
  425163:	sub    DWORD PTR [esi-0x77297160],esp
  425169:	cwde   
  42516a:	mov    ebx,DWORD PTR [esi-0x2]
  42516d:	mov    esi,0x7bcff087
  425172:	loop   0x425132
  425174:	sbb    ah,ah
  425176:	loope  0x42511c
  425178:	sti    
  425179:	jbe    0x4251ec
  42517b:	pop    ss
  42517c:	scas   eax,DWORD PTR es:[edi]
  42517d:	jmp    FWORD PTR [eax+edx*8-0x33ccaa58]
  425184:	and    al,0x95
  425186:	jle    0x4251bf
  425188:	and    ch,BYTE PTR [ebx]
  42518a:	cmc    
  42518b:	scas   eax,DWORD PTR es:[edi]
  42518c:	sbb    ebx,DWORD PTR [ecx+ebx*1-0x33]
  425190:	or     al,bl
  425192:	gs ins BYTE PTR es:[edi],dx
  425194:	ror    DWORD PTR [ecx],1
  425196:	xchg   edi,eax
  425197:	adc    BYTE PTR [eax],bl
  425199:	(bad)  
  42519a:	mov    cl,0x96
  42519c:	pushf  
  42519d:	aaa    
  42519e:	cld    
  42519f:	or     al,0xcc
  4251a1:	add    edi,DWORD PTR [ecx-0x29]
  4251a4:	outs   dx,BYTE PTR ds:[esi]
  4251a5:	mov    dh,0xf9
  4251a7:	(bad)  
  4251a8:	call   0xb121:0x6e9c4406
  4251af:	jl     0x4251a3
  4251b1:	(bad)  
  4251b2:	hlt    
  4251b3:	push   DWORD PTR [edx+0x68d73948]
  4251b9:	fnstcw WORD PTR [edi-0x52a32e0f]
  4251bf:	sub    al,0x45
  4251c1:	fnstenv [esi+0x5c]
  4251c4:	iret   
  4251c5:	(bad)  
  4251c6:	dec    esi
  4251c7:	adc    DWORD PTR [edi+eiz*2-0x46654266],esi
  4251ce:	fs in  al,0xa
  4251d1:	in     eax,dx
  4251d2:	mov    bh,0xba
  4251d4:	adc    bh,BYTE PTR [edi+0x645e0775]
  4251da:	ss enter 0x8ea9,0x6b
  4251df:	repz cmp BYTE PTR [esp+ecx*2+0x7a688a0],bh
  4251e7:	xchg   esi,eax
  4251e8:	sub    eax,0xec1d7aa1
  4251ed:	fistp  QWORD PTR [ebp+0xd80a2ca]
  4251f3:	shr    BYTE PTR [edx+0x41777361],1
  4251f9:	enter  0x1798,0x88
  4251fd:	stc    
  4251fe:	add    bh,BYTE PTR [ecx+0x10]
  425201:	push   ss
  425202:	dec    edi
  425203:	push   ecx
  425204:	adc    ah,BYTE PTR [edi-0x5d]
  425207:	pop    ebp
  425208:	jl     0x425226
  42520a:	xor    al,0xd6
  42520c:	in     al,dx
  42520d:	pop    ss
  42520e:	mov    al,0x5a
  425210:	es popw ds
  425213:	push   esp
  425214:	scas   al,BYTE PTR es:[edi]
  425215:	scas   al,BYTE PTR es:[edi]
  425216:	dec    ebp
  425217:	imul   ebp,DWORD PTR [eax+0x69],0x4f98d271
  42521e:	ss lock add edx,edi
  425222:	sbb    ebx,DWORD PTR [ecx-0x37]
  425225:	(bad)  
  425226:	lods   al,BYTE PTR ds:[esi]
  425227:	repz inc ebx
  425229:	pop    edi
  42522a:	xlat   BYTE PTR ds:[ebx]
  42522b:	jb     0x4251dd
  42522d:	xchg   edi,eax
  42522e:	mov    cl,0x5f
  425230:	push   eax
  425231:	sar    DWORD PTR [esi-0x1bfd2146],0xd7
  425238:	in     al,0x6d
  42523a:	pop    ebx
  42523b:	outs   dx,BYTE PTR ds:[esi]
  42523c:	sub    esi,esp
  42523e:	adc    al,BYTE PTR [ebp-0x78]
  425241:	xor    eax,DWORD PTR [esi]
  425243:	sbb    eax,0x4eed548d
  425248:	mov    dh,0x60
  42524a:	rcr    bl,1
  42524c:	push   0xffffffd2
  42524e:	les    edx,FWORD PTR [edi-0x58]
  425251:	and    BYTE PTR [edi+0x2],0x88
  425255:	outs   dx,DWORD PTR ds:[esi]
  425256:	pusha  
  425257:	or     BYTE PTR [edx-0x74],bh
  42525a:	enter  0x6b73,0x78
  42525e:	mov    DWORD PTR ds:0xf423a7f4,esi
  425264:	jmp    0x425200
  425266:	mov    esi,0xc46c888a
  42526b:	sbb    al,0x60
  42526d:	mov    al,0xa2
  42526f:	push   eax
  425270:	mov    bl,0x67
  425272:	cdq    
  425273:	or     esi,DWORD PTR [edx]
  425275:	or     eax,0x23dff51a
  42527a:	mov    cl,0xd1
  42527c:	fcmove st,st(3)
  42527e:	pop    esi
  42527f:	adc    al,0xab
  425281:	push   ecx
  425282:	mov    DWORD PTR [edi],esi
  425284:	cmp    esp,DWORD PTR [edi+0x16]
  425287:	push   ss
  425288:	or     BYTE PTR [esi+edi*8-0x4e7cbdf9],cl
  42528f:	pushf  
  425290:	mov    DWORD PTR [edx-0x5c45e574],esp
  425296:	and    edx,edi
  425298:	jae    0x425250
  42529a:	pop    eax
  42529b:	pop    edi
  42529c:	das    
  42529d:	adc    eax,0x40887686
  4252a2:	repnz gs ins BYTE PTR es:[edi],dx
  4252a5:	cmp    al,0xf9
  4252a7:	or     ch,ch
  4252a9:	sbb    BYTE PTR [ebx-0x38],bh
  4252ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252ad:	fsub   DWORD PTR [eax]
  4252af:	xchg   ebx,eax
  4252b0:	mov    cl,0xbf
  4252b2:	pop    edi
  4252b3:	push   edi
  4252b4:	inc    esp
  4252b5:	ins    DWORD PTR es:[edi],dx
  4252b6:	and    esp,DWORD PTR [edi+0x18]
  4252b9:	ss mov cl,0x25
  4252bc:	xor    ebp,DWORD PTR [ebx]
  4252be:	retf   0xd96a
  4252c1:	xor    ebp,DWORD PTR [ebx-0xf]
  4252c4:	loope  0x425273
  4252c6:	xor    eax,0x53c858d7
  4252cb:	mov    bl,0x7a
  4252cd:	and    eax,0x4a05e0b1
  4252d2:	mov    ds:0x60ef908b,al
  4252d7:	xlat   BYTE PTR ds:[ebx]
  4252d8:	xlat   BYTE PTR ds:[ebx]
  4252d9:	jne    0x4252a9
  4252db:	sbb    eax,0x4f5725a
  4252e0:	mov    BYTE PTR [esi+0x52],dh
  4252e3:	in     al,dx
  4252e4:	cmp    bl,BYTE PTR [edx]
  4252e6:	mov    ebp,edx
  4252e8:	fisub  DWORD PTR [eax-0x44]
  4252eb:	scas   eax,DWORD PTR es:[edi]
  4252ec:	aaa    
  4252ed:	adc    edi,DWORD PTR [ebx-0x19275a89]
  4252f3:	pop    esp
  4252f4:	mov    BYTE PTR [edi-0x41b94ef0],cl
  4252fa:	into   
  4252fb:	jl     0x425363
  4252fd:	and    DWORD PTR [bp+di+0x7e],esi
  425301:	sbb    bl,dl
  425303:	rep outs dx,DWORD PTR ss:[esi]
  425306:	mov    cl,0xd2
  425308:	out    0xb1,eax
  42530a:	jnp    0x42537c
  42530c:	int3   
  42530d:	inc    esi
  42530e:	aam    0xcb
  425310:	test   BYTE PTR [ebx],bl
  425312:	retf   
  425313:	xchg   edi,eax
  425314:	cs push ecx
  425316:	mov    ebx,0xb148a68e
  42531b:	dec    eax
  42531c:	mov    al,0x90
  42531e:	jno    0x425384
  425320:	jecxz  0x4252e4
  425322:	shr    esi,cl
  425324:	sbb    BYTE PTR [ebx],0x31
  425327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425328:	jmp    0x4252f5
  42532a:	inc    esp
  42532b:	and    DWORD PTR ds:0x41e0b193,0x41
  425332:	adc    eax,0xe2b0b8f3
  425337:	xlat   BYTE PTR ds:[ebx]
  425338:	dec    edi
  425339:	adc    eax,0x17e3beb9
  42533e:	fld    QWORD PTR [eax+0x40]
  425341:	mov    BYTE PTR [ecx-0x1e13cb99],dh
  425347:	adc    ecx,DWORD PTR [ecx+eiz*4-0x4374609b]
  42534e:	mov    cl,0x6a
  425350:	mov    ds:0x556c182c,eax
  425355:	mov    esp,0xbf37db1
  42535a:	push   ss
  42535b:	mov    al,ds:0xca2db3bc
  425360:	xor    ecx,DWORD PTR [eax+ebx*8+0x70173959]
  425367:	pop    ebp
  425368:	dec    ebp
  425369:	xchg   edx,eax
  42536a:	xchg   BYTE PTR [edi+0x72],dl
  42536d:	xlat   BYTE PTR ds:[ebx]
  42536e:	jge    0x425367
  425370:	loopne 0x4253d8
  425372:	enter  0xccd7,0xe7
  425376:	or     edi,0x5b
  425379:	jbe    0x42539b
  42537b:	fild   DWORD PTR [eax+0x77]
  42537e:	(bad)  
  42537f:	or     ebx,DWORD PTR [eax-0x16082b20]
  425385:	mov    ss,WORD PTR [ecx+0x2b]
  425388:	push   eax
  425389:	pop    eax
  42538a:	(bad)  
  42538b:	call   0xbe43c70a
  425390:	jl     0x425390
  425392:	add    eax,0xc1a888c
  425397:	adc    BYTE PTR [ebx+0x37ae6264],dh
  42539d:	fs hlt 
  42539f:	inc    eax
  4253a0:	lods   eax,DWORD PTR ds:[esi]
  4253a1:	and    BYTE PTR [ebx-0x5b808f2a],cl
  4253a7:	pop    ss
  4253a8:	mov    BYTE PTR [eax],dh
  4253aa:	test   al,0xd1
  4253ac:	add    eax,DWORD PTR [ecx+0x645cf9ff]
  4253b2:	jg     0x4253a5
  4253b4:	adc    BYTE PTR [ebp-0x58a4fb2e],ah
  4253ba:	(bad)  
  4253bb:	push   eax
  4253bc:	or     BYTE PTR [esi+0x472caeb1],al
  4253c2:	add    ch,BYTE PTR [ebp-0xd]
  4253c5:	push   ebp
  4253c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253c7:	xlat   BYTE PTR ds:[ebx]
  4253c8:	mov    bl,0xd5
  4253ca:	or     DWORD PTR [eax+0x49],0x8817c6ed
  4253d1:	jge    0x425377
  4253d3:	and    dh,bh
  4253d5:	sbb    al,0x91
  4253d7:	(bad)  [edi+eiz*2-0x60eaa6f6]
  4253de:	and    BYTE PTR [ecx],bh
  4253e0:	mov    bh,0x39
  4253e2:	mov    dh,0x24
  4253e4:	sub    al,0x63
  4253e6:	jbe    0x42536c
  4253e8:	enter  0x6986,0x97
  4253ec:	mov    al,ds:0xc45d8967
  4253f1:	sbb    edx,esp
  4253f3:	push   esi
  4253f4:	stc    
  4253f5:	and    dh,BYTE PTR [ecx+0x14c09a9f]
  4253fb:	push   0xd89e32ba
  425400:	pop    ds
  425401:	add    eax,0x24c88856
  425406:	mov    eax,ds:0xb1dc8484
  42540b:	dec    ebx
  42540c:	xchg   ebx,eax
  42540d:	lds    esp,FWORD PTR [esi+0x44]
  425410:	arpl   cx,dx
  425412:	mov    al,0xd7
  425414:	push   ss
  425415:	and    ch,BYTE PTR [esi-0x1ff73bf]
  42541b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42541c:	mov    ds:0x9d071fc3,eax
  425421:	addr16 nop
  425423:	clc    
  425424:	mov    bh,BYTE PTR [esi]
  425426:	cmp    al,0x9b
  425428:	mov    edi,0x88abc02a
  42542d:	dec    ebp
  42542e:	fist   WORD PTR [edi+0x12a8e9aa]
  425434:	in     al,0x67
  425436:	leave  
  425437:	ret    
  425438:	push   0xffffff85
  42543a:	sub    eax,0xb1b412b0
  42543f:	push   es
  425440:	test   al,0x2b
  425442:	loop   0x4253c6
  425444:	das    
  425445:	ja     0x425455
  425447:	xlat   BYTE PTR ds:[ebx]
  425448:	add    eax,0x771b4a0
  42544d:	(bad)  
  42544e:	cdq    
  42544f:	fisttp WORD PTR [eax-0x28d203c7]
  425455:	fld    TBYTE PTR [edx+0x3]
  425458:	sti    
  425459:	addr16 mov edi,0xc20c5730
  42545f:	jmp    0xff86b0f
  425464:	sbb    BYTE PTR [ebp-0x16f7aae7],ah
  42546a:	dec    ebp
  42546b:	loopne 0x4254cf
  42546d:	addr16 adc eax,0x55e07304
  425473:	mov    eax,0x608d392f
  425478:	mov    ds:0xbfdbb47a,eax
  42547d:	out    0x95,eax
  42547f:	adc    BYTE PTR [ebx+0xd],cl
  425482:	mov    bh,0x2f
  425484:	jmp    0x4254ed
  425486:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425488:	adc    al,0x38
  42548a:	ins    BYTE PTR es:[edi],dx
  42548b:	sub    BYTE PTR [eax],bl
  42548d:	pop    ebp
  42548e:	mov    cl,0x45
  425490:	mov    dh,0x2c
  425492:	adc    dh,BYTE PTR [eax-0x1d]
  425495:	popa   
  425496:	out    0xc8,eax
  425498:	push   0x14544d43
  42549d:	jecxz  0x42543e
  42549f:	add    al,0x81
  4254a1:	pop    es
  4254a2:	sub    BYTE PTR [esi],ch
  4254a4:	push   eax
  4254a5:	call   0xd761:0xafebd1
  4254ac:	xchg   ecx,eax
  4254ad:	wbinvd 
  4254af:	ret    0x7b75
  4254b2:	lods   al,BYTE PTR ds:[esi]
  4254b3:	ins    DWORD PTR es:[edi],dx
  4254b4:	mov    BYTE PTR [edi-0x2a4099c3],dl
  4254ba:	sbb    ah,BYTE PTR [edi+0x6713678f]
  4254c0:	sbb    ebx,esi
  4254c2:	loope  0x425505
  4254c4:	jne    0x42545c
  4254c6:	mov    cl,0x61
  4254c8:	jmp    0x42548a
  4254ca:	sbb    DWORD PTR [esi-0x5d09496a],esp
  4254d0:	jecxz  0x425539
  4254d2:	scas   al,BYTE PTR es:[edi]
  4254d3:	sub    bl,bh
  4254d5:	add    ch,0x8f
  4254d8:	gs aam 0xc3
  4254db:	imul   ecx,DWORD PTR [eax-0x583258a9],0xffffff97
  4254e2:	xlat   BYTE PTR ds:[ebx]
  4254e3:	test   al,0xd
  4254e5:	pusha  
  4254e6:	or     esp,DWORD PTR [ecx]
  4254e8:	outs   dx,BYTE PTR ds:[esi]
  4254e9:	scas   eax,DWORD PTR es:[edi]
  4254ea:	lds    esp,FWORD PTR [edi-0x68df2aa9]
  4254f0:	mov    ecx,eax
  4254f2:	cmp    DWORD PTR ds:[ebp-0x21367279],0x43
  4254fa:	xchg   edi,eax
  4254fb:	xlat   BYTE PTR ds:[ebx]
  4254fc:	imul   edx,DWORD PTR [edi-0x12],0x7dce5eca
  425503:	cmp    cl,BYTE PTR [ecx-0x7b6a4ddd]
  425509:	addr16 fwait
  42550b:	cmp    esi,ebp
  42550d:	xchg   BYTE PTR [edi-0x58],bh
  425510:	fisub  WORD PTR [edi+0x38]
  425513:	xchg   esi,eax
  425514:	mov    eax,0x87216fa3
  425519:	lahf   
  42551a:	mov    cl,0x61
  42551c:	mov    al,ds:0xbd6f2307
  425521:	inc    esi
  425522:	xor    edi,edx
  425524:	int    0xec
  425526:	scas   eax,DWORD PTR es:[edi]
  425527:	sub    DWORD PTR [ebp+ebp*4+0x7887fea0],ebp
  42552e:	mov    edi,0xc8ed9ff8
  425533:	(bad)  
  425534:	clc    
  425535:	xchg   ebp,eax
  425536:	inc    ebx
  425537:	fdiv   st,st(3)
  425539:	cmc    
  42553a:	mov    BYTE PTR [edi],bl
  42553c:	or     bh,cl
  42553e:	adc    dh,al
  425540:	in     al,dx
  425541:	adc    esi,DWORD PTR [ecx+0x1afd8bfe]
  425547:	push   edx
  425548:	jg     0x425501
  42554a:	loopne 0x42551c
  42554c:	out    0x4c,eax
  42554e:	loop   0x425553
  425550:	pop    edx
  425551:	ja     0x425537
  425553:	cmp    esi,esp
  425555:	jo     0x425508
  425557:	shr    DWORD PTR [ebx+0x7ec30f3b],1
  42555d:	lods   eax,DWORD PTR ds:[esi]
  42555e:	cli    
  42555f:	xor    cl,BYTE PTR [eax]
  425561:	fwait
  425562:	js     0x4254fd
  425564:	scas   eax,DWORD PTR es:[edi]
  425565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425567:	push   ss
  425568:	xchg   edx,esp
  42556a:	std    
  42556b:	and    BYTE PTR [ecx],0xe0
  42556e:	test   eax,0x4ba3c872
  425573:	or     eax,0x93e6739
  425578:	add    BYTE PTR [ecx-0x40],0x1a
  42557c:	adc    al,0x10
  42557e:	mov    cl,0xc3
  425580:	push   eax
  425581:	pop    es
  425582:	icebp  
  425583:	repnz rcl BYTE PTR [eax+0x38],cl
  425587:	sub    DWORD PTR [ebp+esi*2+0x6424f0d2],ebx
  42558e:	loop   0x4255c7
  425590:	shl    BYTE PTR [ebp+0x51],0x6a
  425594:	dec    edx
  425595:	loop   0x425548
  425597:	mov    esp,0x2f1c4360
  42559c:	xor    BYTE PTR [ebx-0x221a1662],bh
  4255a2:	xor    BYTE PTR [ebx+0x65],bl
  4255a5:	push   eax
  4255a6:	xlat   BYTE PTR ds:[ebx]
  4255a7:	inc    edi
  4255a8:	push   es
  4255a9:	mov    ebx,0x9488adb6
  4255ae:	in     eax,0xd3
  4255b0:	ins    DWORD PTR es:[edi],dx
  4255b1:	in     al,0xa0
  4255b3:	je     0x425596
  4255b5:	sbb    DWORD PTR [esi],0x769d9bd7
  4255bb:	mov    edi,0x866f8b32
  4255c0:	mov    BYTE PTR [edx-0x4a],dl
  4255c3:	(bad)  
  4255c5:	imul   esi,DWORD PTR [eax+0x4c9d5219],0xffffffd7
  4255cc:	int3   
  4255cd:	or     al,0x43
  4255cf:	add    ch,BYTE PTR [ecx+0x5e]
  4255d2:	xor    BYTE PTR [ebx-0x78],dh
  4255d5:	push   eax
  4255d6:	test   BYTE PTR ds:0xdbaa4f83,al
  4255dc:	scas   eax,DWORD PTR es:[edi]
  4255dd:	mov    esi,ecx
  4255df:	xlat   BYTE PTR ds:[ebx]
  4255e0:	add    eax,0x319179cd
  4255e5:	jmp    0xa4ca9a02
  4255ea:	call   0xadd919e5
  4255ef:	add    BYTE PTR [edx+0x67],dl
  4255f2:	div    BYTE PTR [eax-0x770ad732]
  4255f8:	mov    ds:0x9a8f4fae,al
  4255fd:	(bad)  
  4255fe:	push   ecx
  4255ff:	pop    edx
  425600:	or     cl,BYTE PTR [ebx+0x52]
  425603:	div    eax
  425605:	aam    0xcc
  425607:	leave  
  425608:	popf   
  425609:	pop    ss
  42560a:	sub    al,0xcb
  42560c:	mov    bl,0x7
  42560e:	xor    ecx,0x9
  425611:	addr16 xor eax,0xae333e14
  425617:	fiadd  DWORD PTR [ebp-0x1b8af202]
  42561d:	sub    ecx,0x85d7f904
  425623:	gs push ebx
  425625:	pop    eax
  425626:	jle    0x42567e
  425628:	mov    BYTE PTR [ebx-0x12],ch
  42562b:	add    edi,DWORD PTR [edx-0x77b682f0]
  425631:	mov    ecx,0xe573051b
  425636:	mov    ch,0x87
  425638:	loopne 0x42569e
  42563a:	push   esp
  42563b:	shl    DWORD PTR [edi+edi*8-0x4ea79950],0xcb
  425643:	icebp  
  425644:	fs push ecx
  425646:	mov    cl,0x43
  425648:	mov    ds:0xbe2292a5,eax
  42564d:	mov    dl,0x4b
  42564f:	xlat   BYTE PTR ds:[ebx]
  425650:	call   0xd61e:0x6aec5478
  425657:	jae    0x4255e1
  425659:	test   eax,0x2fd41878
  42565e:	call   0xf13:0x7c679f3a
  425665:	add    bl,bh
  425667:	int    0xec
  425669:	xor    eax,0xa4e100ac
  42566e:	jno    0x425633
  425670:	xlat   BYTE PTR ds:[ebx]
  425671:	stos   DWORD PTR es:[edi],eax
  425672:	and    eax,0x1c673663
  425677:	jns    0x42569a
  425679:	and    eax,0xcfd6bf96
  42567e:	mov    edi,0xf4c1e305
  425683:	ja     0x425639
  425685:	dec    edx
  425686:	push   eax
  425687:	int3   
  425688:	int    0x18
  42568a:	mov    dl,0xd7
  42568c:	xor    ah,BYTE PTR [eax-0x12]
  42568f:	ins    DWORD PTR es:[edi],dx
  425690:	or     DWORD PTR [eax-0x5c7783cd],edi
  425696:	push   cs
  425697:	adc    BYTE PTR fs:[edx+eiz*1-0x1798252d],0xfa
  4256a0:	pop    esi
  4256a1:	fidivr DWORD PTR [esi+0x51c7c2f6]
  4256a7:	mov    BYTE PTR ss:[ecx-0x13],al
  4256ab:	mov    edx,0x7b609901
  4256b0:	mul    BYTE PTR [edi-0x4b]
  4256b3:	mov    ss,WORD PTR [edx-0x1c]
  4256b6:	pop    esp
  4256b7:	popa   
  4256b8:	jl     0x4256bc
  4256ba:	mov    cl,0xbb
  4256bc:	lds    edi,FWORD PTR [ecx-0x536e207f]
  4256c2:	std    
  4256c3:	xlat   BYTE PTR ds:[ebx]
  4256c4:	xor    DWORD PTR [edi],ecx
  4256c6:	xchg   dh,bh
  4256c8:	inc    edx
  4256c9:	jb     0x425714
  4256cb:	mov    cl,BYTE PTR [eax-0x1bd31cfb]
  4256d1:	sub    eax,0x5d47e86e
  4256d6:	fs mov dh,0x85
  4256d9:	xor    bh,al
  4256db:	int    0x7f
  4256dd:	adc    DWORD PTR [ecx],edx
  4256df:	out    0x44,al
  4256e1:	push   ebx
  4256e2:	mov    cl,0x1a
  4256e4:	loop   0x4256ff
  4256e6:	push   ecx
  4256e7:	jns    0x4256a9
  4256e9:	adc    al,0xf0
  4256eb:	xlat   BYTE PTR ds:[ebx]
  4256ec:	xchg   esi,eax
  4256ed:	cli    
  4256ee:	push   ebx
  4256ef:	sbb    ebp,edx
  4256f1:	popa   
  4256f2:	jmp    0x19f0dfe9
  4256f7:	cmp    BYTE PTR [ebx-0x7121243e],bh
  4256fd:	adc    BYTE PTR [bp+di-0x3b],dl
  425701:	or     al,0xa7
  425703:	outs   dx,DWORD PTR ds:[esi]
  425704:	cs out 0xb1,al
  425707:	jno    0x425780
  425709:	loopne 0x4256e1
  42570b:	xor    dh,ah
  42570d:	repnz repz xlat BYTE PTR ds:[ebx]
  425710:	sbb    al,0x66
  425712:	sbb    al,0x39
  425714:	js     0x4256f9
  425716:	or     BYTE PTR [edi-0x78],dh
  425719:	outs   dx,BYTE PTR ds:[esi]
  42571a:	pop    eax
  42571b:	fcmovnbe st,st(6)
  42571d:	jbe    0x42573a
  42571f:	push   ecx
  425720:	into   
  425721:	addr16 inc ebx
  425723:	xor    bl,BYTE PTR [ebp+0x56]
  425726:	push   edi
  425727:	jg     0x42576a
  425729:	and    esi,DWORD PTR [ecx-0x2d918d8b]
  42572f:	cmc    
  425730:	ins    DWORD PTR es:[edi],dx
  425731:	or     bl,BYTE PTR [ebx-0x4ad7f029]
  425737:	das    
  425738:	popf   
  425739:	repz pop eax
  42573b:	ja     0x4256c5
  42573d:	xor    eax,0xfd04aa01
  425742:	(bad)  
  425743:	jns    0x425773
  425745:	addr16 dec eax
  425747:	adc    DWORD PTR [edx+0x54c05176],esp
  42574d:	test   eax,0xe7debfb6
  425752:	aas    
  425753:	test   eax,0x8f4f9758
  425758:	call   0xef1d:0xf4f2e516
  42575f:	arpl   WORD PTR [edi+0x248efd01],ax
  425765:	enter  0x8055,0xc9
  425769:	addr16 repnz sbb al,0x82
  42576d:	and    esp,ebp
  42576f:	fcos   
  425771:	mov    WORD PTR [esi-0x5632d8eb],?
  425777:	mov    WORD PTR [eax+0x8],?
  42577a:	xor    ebx,esi
  42577c:	call   0x691:0xc457b567
  425783:	pop    esi
  425784:	adc    DWORD PTR [ecx-0x6ab5b44f],esp
  42578a:	jge    0x4257d9
  42578c:	jo     0x42572d
  42578e:	xor    eax,0x7ad924d3
  425793:	sahf   
  425794:	add    esp,edi
  425796:	(bad)  
  425797:	stc    
  425798:	mov    ds:0x91ebb620,eax
  42579d:	inc    ebp
  42579e:	adc    ebp,DWORD PTR [esi+0x58]
  4257a1:	pop    ebp
  4257a2:	fmul   DWORD PTR [ebx+edi*4]
  4257a5:	addr16 cmp al,0x30
  4257a8:	ds gs lahf 
  4257ab:	mov    ecx,0x70b1d8f7
  4257b0:	rol    DWORD PTR [ecx+0x55],0x1d
  4257b4:	or     ah,BYTE PTR [eax-0x583b2be2]
  4257ba:	mov    edi,0x191cd8ab
  4257bf:	add    eax,0x76b1e8c9
  4257c4:	mov    bh,0x54
  4257c6:	sbb    eax,0x936552e9
  4257cb:	xlat   BYTE PTR ds:[ebx]
  4257cc:	stc    
  4257cd:	imul   ebp,ebx,0xffffff89
  4257d0:	(bad)  
  4257d1:	inc    edx
  4257d2:	sub    ecx,DWORD PTR [esi-0x6ea2a76f]
  4257d8:	mov    BYTE PTR ds:0x2f6ffcf1,al
  4257de:	add    eax,0xe0c61fd7
  4257e3:	sub    bh,BYTE PTR [esi-0x7798169c]
  4257e9:	or     ebp,DWORD PTR [esi-0x74]
  4257ec:	aas    
  4257ed:	dec    esp
  4257ee:	or     dl,BYTE PTR [edx+0x5b]
  4257f1:	fs dec ebx
  4257f3:	fsubr  DWORD PTR ds:0x7057e540
  4257f9:	xchg   ecx,eax
  4257fa:	imul   esi,DWORD PTR [ecx-0x2],0x38
  4257fe:	mov    cl,0xaa
  425800:	mov    ds:0x9c6bbd85,eax
  425805:	or     dl,0xd7
  425808:	imul   ebx,DWORD PTR [ecx],0x3
  42580b:	jmp    0x1296653e
  425810:	shr    BYTE PTR [ebp-0x66],0xd7
  425814:	loopne 0x42579f
  425816:	jecxz  0x42585c
  425818:	jp     0x425814
  42581a:	loopne 0x4257f3
  42581c:	add    BYTE PTR [esi],0xf3
  42581f:	fidivr DWORD PTR [edi-0x7875d428]
  425825:	jno    0x4257d3
  425827:	jmp    0x4257f3
  425829:	test   eax,0xd5f8fbe7
  42582e:	and    eax,0xbb85b7d7
  425833:	leave  
  425834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425835:	aaa    
  425836:	sub    DWORD PTR [esi],0x9d31b29a
  42583c:	dec    eax
  42583d:	pmaxsw mm4,QWORD PTR [eax]
  425840:	push   ds
  425841:	(bad)  
  425842:	in     al,dx
  425843:	pop    ss
  425844:	stos   BYTE PTR es:[edi],al
  425845:	retf   
  425846:	sbb    eax,DWORD PTR [esi-0x70]
  425849:	mov    DWORD PTR [ecx-0x1015eed7],esi
  42584f:	push   ebp
  425850:	popf   
  425851:	sub    esi,DWORD PTR [eax]
  425853:	out    dx,al
  425854:	push   eax
  425855:	cli    
  425856:	mov    cl,0x5f
  425858:	pop    ebx
  425859:	(bad)  
  42585b:	lock sti 
  42585d:	xchg   edi,eax
  42585e:	mov    cl,0x2c
  425860:	mov    esp,0xf4742db
  425865:	lea    ebp,[esi+0x1cc5d0d7]
  42586b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42586c:	(bad)  
  42586e:	in     al,dx
  42586f:	inc    ebp
  425870:	mov    DWORD PTR [esi*2-0x7d1cfb52],edx
  425877:	mov    ds:0x191ecd08,al
  42587c:	mov    eax,ds:0xacd2ce67
  425881:	scas   eax,DWORD PTR es:[edi]
  425882:	sbb    eax,0xb12c3aca
  425887:	xor    eax,0xe8ed66f0
  42588d:	es xor eax,0xdf480cd4
  425893:	mov    ah,0x7f
  425895:	mov    ebp,0xef3bd529
  42589a:	iret   
  42589b:	mov    cl,0x88
  42589d:	fstp   DWORD PTR [esi+ebx*2-0x34]
  4258a1:	cmc    
  4258a2:	sbb    DWORD PTR [ebp+ecx*1+0x651d6a7f],esp
  4258a9:	sbb    ebx,DWORD PTR [edi]
  4258ab:	test   DWORD PTR [eax+0x2f04d103],0x2956e2ae
  4258b5:	lods   eax,DWORD PTR ds:[si]
  4258b7:	xchg   DWORD PTR [eax+0x41],esi
  4258ba:	and    eax,0xb1beeb47
  4258bf:	daa    
  4258c0:	mov    al,0x10
  4258c2:	dec    esp
  4258c3:	cmp    BYTE PTR [ebx+0x61],ch
  4258c6:	add    al,0xd0
  4258c8:	add    eax,0x7a9f66ac
  4258cd:	pop    ss
  4258ce:	sbb    esi,ecx
  4258d0:	rol    BYTE PTR [ebx-0x726d3b4f],0xe0
  4258d7:	ret    
  4258d8:	adc    BYTE PTR [ecx-0x29843580],ah
  4258de:	inc    ebp
  4258df:	push   esp
  4258e0:	out    dx,eax
  4258e1:	lods   al,BYTE PTR ds:[esi]
  4258e2:	and    BYTE PTR [eax+0x18],ch
  4258e5:	sbb    ah,cl
  4258e7:	sub    al,0x85
  4258e9:	jne    0x425945
  4258eb:	fldcw  WORD PTR [edi+0x66273d1e]
  4258f1:	or     eax,0xe64cd782
  4258f6:	call   0xd2ad4c8
  4258fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258fc:	mov    BYTE PTR [ebx-0x7a],al
  4258ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425900:	cmp    BYTE PTR [esi-0x6e],bh
  425903:	xchg   BYTE PTR [ebx+0x67],ah
  425906:	push   ebx
  425907:	add    eax,DWORD PTR [eax+0x12439b84]
  42590d:	shl    DWORD PTR [ecx+0x717d4c1e],cl
  425913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425914:	pusha  
  425915:	mov    al,0x4c
  425917:	in     eax,dx
  425918:	cs nop
  42591a:	mov    cl,0xe4
  42591c:	stos   BYTE PTR es:[edi],al
  42591d:	sub    al,0x3b
  42591f:	push   0xffffffa5
  425921:	ror    BYTE PTR [ebp-0x4b04a84c],0xdf
  425928:	enter  0xd0fb,0xf7
  42592c:	pop    esi
  42592d:	jmp    0xc1bc2ead
  425932:	xchg   DWORD PTR [esi+0x40],eax
  425935:	test   eax,0xa82d1d1
  42593a:	mov    cl,0x78
  42593c:	pmulhuw mm7,QWORD PTR [ecx+0x50]
  425940:	retf   0x170
  425943:	xlat   BYTE PTR ds:[ebx]
  425944:	sahf   
  425945:	xchg   edx,eax
  425946:	aaa    
  425947:	cwde   
  425948:	test   eax,0x888de114
  42594d:	ret    
  42594e:	inc    ebx
  42594f:	cmp    ecx,DWORD PTR [edx+0x17e24de6]
  425955:	addr16 cmc 
  425957:	int3   
  425958:	ret    0xdea6
  42595b:	mov    edi,0xefb1fb6e
  425960:	sbb    DWORD PTR [edi+0x31600e81],ebx
  425966:	enter  0xc5d7,0x33
  42596a:	test   cl,0x42
  42596d:	xchg   ebp,eax
  42596e:	mov    al,ds:0x6ab58865
  425973:	ret    0x1b11
  425976:	js     0x4259bf
  425978:	aas    
  425979:	aas    
  42597a:	nop
  42597b:	iret   
  42597c:	mov    BYTE PTR [ecx-0x5cea7c0f],bl
  425982:	call   0x1303:0xb372889b
  425989:	in     eax,dx
  42598a:	jl     0x425991
  42598c:	not    BYTE PTR [edi+0x1cc0d65d]
  425992:	retf   
  425993:	cmp    al,BYTE PTR [ecx]
  425995:	dec    edx
  425996:	fidiv  WORD PTR [esi]
  425998:	sub    bh,ah
  42599a:	pop    ss
  42599b:	fdivr  QWORD PTR [esp+eax*1+0x78]
  42599f:	cld    
  4259a0:	hlt    
  4259a1:	addr16 rcr ecx,1
  4259a4:	xchg   DWORD PTR [edx+0x75f2e5b8],eax
  4259aa:	mov    ds:0xb0a8dc7c,al
  4259af:	push   ds
  4259b0:	or     bh,BYTE PTR [eax]
  4259b2:	mov    BYTE PTR [esi-0x11c493b8],ch
  4259b8:	retf   
  4259b9:	mov    BYTE PTR [ecx-0x2ee5ed8],dh
  4259bf:	cli    
  4259c0:	dec    edi
  4259c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259c2:	mov    dh,0x6b
  4259c4:	idiv   BYTE PTR [ebx]
  4259c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259c7:	(bad)  
  4259c8:	enter  0xc213,0x7f
  4259cc:	mov    al,0x67
  4259ce:	adc    al,0x82
  4259d0:	mov    cl,0x8f
  4259d2:	add    ebx,DWORD PTR [edi+0x22b1b06a]
  4259d8:	mov    ds:0x666cc46f,eax
  4259dd:	jmp    0x425991
  4259df:	xlat   BYTE PTR ds:[ebx]
  4259e0:	xor    DWORD PTR [di+0x1b53],edi
  4259e5:	mov    al,ds:0x409b12c6
  4259ea:	popa   
  4259eb:	xchg   esp,eax
  4259ec:	mov    ch,cl
  4259ee:	fisttp QWORD PTR [esi-0x2850e47d]
  4259f4:	and    al,0xa4
  4259f6:	shr    ch,cl
  4259f8:	pop    esp
  4259f9:	mov    eax,ds:0x9f0000cb
  4259fe:	mov    cl,0x4c
  425a00:	mov    ebp,0x86d46ceb
  425a05:	pop    esi
  425a06:	call   edi
  425a08:	in     al,0xbd
  425a0a:	shr    DWORD PTR [edi+esi*1],0x68
  425a0e:	jle    0x425a89
  425a10:	hlt    
  425a11:	ror    DWORD PTR [ecx-0x2119958f],1
  425a17:	xor    BYTE PTR [edx-0x48],ah
  425a1a:	out    dx,eax
  425a1b:	add    eax,0xd7435db8
  425a20:	jns    0x425a7b
  425a22:	mov    bh,BYTE PTR [esi-0x243e2c67]
  425a28:	mov    BYTE PTR [ecx+0x720c2d5f],ch
  425a2e:	lea    edx,[edi+esi*2+0x5ce0969]
  425a35:	push   edi
  425a36:	jno    0x425a04
  425a38:	mov    bl,0xb4
  425a3a:	stc    
  425a3b:	repnz mov dh,bl
  425a3e:	int3   
  425a3f:	stos   DWORD PTR es:[edi],eax
  425a40:	mov    ebx,0xa5afbbc7
  425a45:	add    eax,DWORD PTR fs:[eax-0x10]
  425a49:	mov    ch,0x8f
  425a4b:	inc    ebp
  425a4c:	and    eax,0x84e54184
  425a51:	xchg   BYTE PTR [ebx-0x66b547da],dh
  425a57:	loop   0x425a67
  425a59:	fwait
  425a5a:	lods   eax,DWORD PTR ds:[esi]
  425a5b:	xlat   BYTE PTR ds:[ebx]
  425a5c:	das    
  425a5d:	pop    es
  425a5e:	push   0x7b
  425a60:	jo     0x4259f6
  425a62:	mov    dh,0x8f
  425a64:	mov    eax,ds:0x26a4dc5b
  425a69:	dec    edi
  425a6a:	adc    DWORD PTR [edi-0x2fb60fbd],0xffffffa0
  425a71:	pusha  
  425a72:	push   0x4f
  425a74:	out    dx,eax
  425a75:	xchg   DWORD PTR [ebp-0x2f],edx
  425a78:	js     0x425a2e
  425a7a:	mov    cl,0xb0
  425a7c:	pop    eax
  425a7d:	inc    edi
  425a7e:	leave  
  425a7f:	pop    edi
  425a80:	in     al,dx
  425a81:	push   eax
  425a82:	jbe    0x425a5a
  425a84:	and    eax,0x31646925
  425a89:	mov    esp,0x39bb2bbe
  425a8e:	mov    cl,0xe5
  425a90:	sahf   
  425a91:	scas   al,BYTE PTR es:[edi]
  425a92:	adc    ebp,DWORD PTR [edi-0x23018f6b]
  425a98:	mov    ah,0x50
  425a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a9b:	(bad)  
  425a9c:	mov    dl,dl
  425a9e:	jnp    0x425aff
  425aa0:	cdq    
  425aa1:	jnp    0x425a59
  425aa3:	lock push ebx
  425aa5:	sti    
  425aa6:	int    0x17
  425aa8:	mov    eax,0xd62fac8c
  425aad:	cvtpi2ps xmm6,QWORD PTR [si+0x7e]
  425ab2:	rol    BYTE PTR [edi],0x76
  425ab5:	push   0xf597ccb1
  425aba:	xor    al,BYTE PTR ds:0xc1d64fd5
  425ac0:	xchg   ebx,eax
  425ac1:	(bad)  
  425ac2:	pop    es
  425ac3:	xlat   BYTE PTR ds:[ebx]
  425ac4:	nop
  425ac5:	add    DWORD PTR ds:0xb17d12ca,0xffffffe2
  425acc:	(bad)  
  425acd:	stc    
  425ace:	cmp    BYTE PTR ds:0x239b5169,cl
  425ad4:	inc    edi
  425ad5:	pop    eax
  425ad6:	add    DWORD PTR [ecx-0x2c360447],ebp
  425adc:	les    ecx,FWORD PTR [edi-0x19da486b]
  425ae2:	rcr    al,cl
  425ae4:	xor    eax,0x85f94d9b
  425ae9:	repz in eax,0xce
  425aec:	sbb    eax,0x8f576c95
  425af1:	or     al,0xcc
  425af3:	xlat   BYTE PTR ds:[ebx]
  425af4:	sbb    ah,BYTE PTR [edi-0x5fb18f6c]
  425afa:	mov    edx,0x72f68dfe
  425aff:	dec    edi
  425b00:	inc    esp
  425b01:	loopne 0x425a88
  425b03:	and    DWORD PTR [ecx],esi
  425b05:	test   eax,0xe9483db5
  425b0a:	shr    BYTE PTR [esi+0x23],0x66
  425b0e:	jae    0x425b7b
  425b10:	ds jecxz 0x425aa2
  425b13:	adc    ecx,DWORD PTR [edi+eax*4+0x41]
  425b17:	xchg   BYTE PTR [ebp-0x3edc5ffa],al
  425b1d:	lds    esp,FWORD PTR [esi]
  425b1f:	das    
  425b20:	sti    
  425b21:	shl    BYTE PTR [esi-0x2a],0x84
  425b25:	mov    ds:0xb9654649,eax
  425b2a:	jns    0x425b81
  425b2c:	mov    ah,0x3f
  425b2e:	xor    eax,0x3387351d
  425b33:	jno    0x425b4d
  425b35:	ins    BYTE PTR es:[edi],dx
  425b36:	imul   esi,DWORD PTR [edx+0x38],0x2b
  425b3a:	mov    cl,0xde
  425b3c:	jne    0x425bb5
  425b3e:	hlt    
  425b3f:	kandnb k1,k0,k5
  425b43:	cli    
  425b44:	mov    BYTE PTR [esp+eax*8+0x2468b037],al
  425b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b4c:	add    al,0x7a
  425b4e:	mov    ebx,0x47a7eede
  425b53:	popf   
  425b54:	push   edi
  425b55:	jbe    0x425adf
  425b57:	les    ecx,FWORD PTR [eax-0x3593e86e]
  425b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b5e:	lods   al,BYTE PTR ds:[esi]
  425b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b60:	mul    DWORD PTR [edi+0x6d]
  425b63:	aas    
  425b64:	leave  
  425b65:	jmp    0x3bbd:0x571badb6
  425b6c:	cmp    DWORD PTR [ebp-0x3d],ecx
  425b6f:	fisttp DWORD PTR [edi+0x67]
  425b72:	add    al,0x95
  425b74:	xor    dl,BYTE PTR [eax]
  425b76:	repnz ins BYTE PTR es:[edi],dx
  425b78:	ret    0xb10b
  425b7b:	pop    ds
  425b7c:	jmp    0x3170:0x2442e7ef
  425b83:	fsub   DWORD PTR [ecx]
  425b85:	mov    bl,0x54
  425b87:	xor    BYTE PTR [eax],cl
  425b89:	fucom  st(4)
  425b8b:	out    dx,al
  425b8c:	ss jno 0x425b40
  425b8f:	cmp    esp,esi
  425b91:	mov    ebx,0x7fca5fc3
  425b96:	mov    edi,ss
  425b98:	iret   
  425b99:	push   esp
  425b9a:	mov    eax,0x8861327d
  425b9f:	xchg   ebx,eax
  425ba0:	mov    BYTE PTR [edi+eiz*8-0x3b],ch
  425ba4:	mov    ebp,0x5b7f09ea
  425ba9:	imul   ebp,DWORD PTR ds:0x721e18eb,0x21f8db73
  425bb3:	mov    WORD PTR [eax-0x77d6b2ed],gs
  425bb9:	push   edx
  425bba:	lods   al,BYTE PTR ds:[esi]
  425bbb:	push   ebx
  425bbc:	mov    ebx,0xc56078d8
  425bc1:	fs and eax,0x7d06258d
  425bc7:	push   edx
  425bc8:	inc    eax
  425bc9:	mov    ebx,0x808809c0
  425bce:	jb     0x425bef
  425bd0:	adc    esp,DWORD PTR [edx]
  425bd2:	xor    DWORD PTR [ebx+0xd],edx
  425bd5:	pop    edx
  425bd6:	pop    es
  425bd7:	les    ecx,FWORD PTR [eax+0x63e86a6c]
  425bdd:	push   ss
  425bde:	adc    ebp,ebp
  425be0:	cmc    
  425be1:	rep lods eax,DWORD PTR ds:[esi]
  425be3:	imul   eax,DWORD PTR [edx-0x166ace07],0x26
  425bea:	jnp    0x425bb6
  425bec:	leave  
  425bed:	fs scas eax,DWORD PTR es:[edi]
  425bef:	mov    bh,0x57
  425bf1:	bound  ebp,QWORD PTR [ecx-0x256280e0]
  425bf7:	pop    es
  425bf8:	outs   dx,BYTE PTR ds:[esi]
  425bf9:	pop    esi
  425bfa:	mov    cl,0xb8
  425bfc:	jnp    0x425b8a
  425bfe:	adc    cl,bh
  425c00:	and    DWORD PTR [ecx+ecx*8],esi
  425c03:	aad    0x61
  425c05:	and    cl,BYTE PTR [ebx+ebp*4]
  425c08:	mov    al,ds:0xc225517e
  425c0d:	js     0x425bc0
  425c0f:	dec    ecx
  425c10:	repz aas 
  425c12:	xor    cl,0xc8
  425c15:	pop    ebx
  425c16:	jmp    0x49ea:0xab67beae
  425c1d:	push   ecx
  425c1e:	adc    BYTE PTR [esp+eiz*2-0x79daae6d],ch
  425c25:	xor    edi,DWORD PTR [eax]
  425c27:	repz cli 
  425c29:	pop    ds
  425c2a:	pop    ebp
  425c2b:	ja     0x425c72
  425c2d:	push   esp
  425c2e:	and    BYTE PTR [ecx+0x87b6439],al
  425c34:	sbb    DWORD PTR ds:0xc52d1f0a,esp
  425c3a:	dec    ecx
  425c3b:	mov    ds,WORD PTR [eax-0x55]
  425c3e:	xchg   edi,eax
  425c3f:	dec    esi
  425c40:	pop    es
  425c41:	jne    0x425c01
  425c43:	sar    bl,0xe7
  425c46:	inc    esi
  425c47:	add    ebx,DWORD PTR [edx+0x66]
  425c4a:	jns    0x425c23
  425c4c:	xor    BYTE PTR [edx+0x7e],0x35
  425c50:	mov    ds:0xf64b62c8,eax
  425c55:	dec    ecx
  425c56:	mov    cl,0xb
  425c58:	lea    edx,[eax+0xa]
  425c5b:	or     ah,BYTE PTR [ebp+edx*2-0x20]
  425c5f:	xlat   BYTE PTR ds:[ebx]
  425c60:	sbb    dl,0x76
  425c63:	sbb    eax,0x2b27f754
  425c68:	mov    BYTE PTR [esi+0x6e05cd0e],ch
  425c6e:	adc    BYTE PTR [esi+eax*1],al
  425c71:	rcl    BYTE PTR [bx+si-0x24ec],1
  425c76:	sbb    al,0x8c
  425c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c79:	xor    dh,BYTE PTR [ecx-0x3b17c728]
  425c7f:	test   eax,0xd75eb770
  425c84:	push   ecx
  425c85:	mov    bl,0x9a
  425c87:	rcl    ah,0x3
  425c8a:	inc    esi
  425c8b:	data16 mov BYTE PTR ds:0x370f7555,cl
  425c92:	mov    WORD PTR [edi],cs
  425c94:	dec    ebp
  425c95:	pop    edx
  425c96:	call   DWORD PTR [eax]
  425c98:	pop    es
  425c99:	push   esp
  425c9a:	dec    eax
  425c9b:	sar    BYTE PTR [esi],0x7b
  425c9e:	jmp    0x6e5c:0xb11d5327
  425ca5:	sub    eax,0xbc245d11
  425caa:	jbe    0x425c85
  425cac:	mov    ds:0x28b02e9e,eax
  425cb1:	pop    edi
  425cb2:	push   ds
  425cb3:	hlt    
  425cb4:	shr    BYTE PTR [esi],cl
  425cb6:	mov    cl,0xfc
  425cb8:	adc    dl,dl
  425cba:	pop    eax
  425cbb:	ins    DWORD PTR es:[edi],dx
  425cbc:	and    cl,BYTE PTR [ecx]
  425cbe:	aam    0xd7
  425cc0:	outs   dx,BYTE PTR ds:[esi]
  425cc1:	das    
  425cc2:	mov    ds:0x7026d847,eax
  425cc7:	les    ecx,FWORD PTR [eax-0x65b16b91]
  425ccd:	gs dec eax
  425ccf:	loopne 0x425c6c
  425cd1:	addr16 sbb dh,al
  425cd4:	ret    
  425cd5:	in     al,dx
  425cd6:	dec    ebx
  425cd7:	rcl    BYTE PTR [ebx-0x4c],cl
  425cda:	mov    cl,0x5b
  425cdc:	jb     0x425c71
  425cde:	aam    0x8d
  425ce0:	jp     0x425cf3
  425ce2:	pop    esp
  425ce3:	xlat   BYTE PTR ds:[ebx]
  425ce4:	push   0x7
  425ce6:	repnz ds dec ebx
  425ce9:	push   0x36219f9
  425cee:	dec    ecx
  425cef:	push   ss
  425cf0:	push   0xed69b16b
  425cf5:	mov    esi,DWORD PTR [edx+0x48a1f80e]
  425cfb:	xlat   BYTE PTR ds:[ebx]
  425cfc:	pop    esp
  425cfd:	fdivrp st(0),st
  425cff:	xchg   edi,eax
  425d00:	and    BYTE PTR [edx-0x7f779dc6],cl
  425d06:	fisttp WORD PTR [edx-0x52]
  425d09:	and    ch,ch
  425d0b:	rol    BYTE PTR [ebp+0x67],cl
  425d0e:	jp     0x425d58
  425d10:	rcr    DWORD PTR [edi-0x8],1
  425d13:	pop    ebx
  425d14:	dec    ecx
  425d15:	jle    0x425cc3
  425d17:	mov    WORD PTR [eax],cs
  425d19:	adc    dh,BYTE PTR [edx+0x28]
  425d1c:	(bad)  
  425d1d:	sbb    DWORD PTR [esi+0x67],edx
  425d20:	xchg   ebp,eax
  425d21:	inc    ebx
  425d22:	jp     0x425cfb
  425d24:	xor    ch,BYTE PTR ds:0x7da1af79
  425d2a:	mov    esp,0x2451aaa3
  425d2f:	push   ds
  425d30:	mov    ebp,0x95d71a5b
  425d35:	xor    eax,0x9c512232
  425d3a:	(bad)  
  425d3b:	stos   BYTE PTR es:[edi],al
  425d3c:	pop    ebx
  425d3d:	arpl   WORD PTR ds:0xfe78,ax
  425d42:	mov    ebx,0x8f0cdaf3
  425d47:	sbb    esi,ebp
  425d49:	out    0x86,eax
  425d4b:	out    0xdb,al
  425d4d:	sub    dh,dl
  425d4f:	fld    DWORD PTR [esi]
  425d51:	addr16 adc eax,0x4cc21e66
  425d57:	int    0xc
  425d59:	dec    ecx
  425d5a:	mov    ch,0x83
  425d5c:	shl    BYTE PTR [esi-0x12b7f6dd],cl
  425d62:	xchg   DWORD PTR [ebp+0x6],ebp
  425d65:	addr16 retf 
  425d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d68:	push   0x93f19a95
  425d6d:	xor    DWORD PTR [esi-0x3610fbae],esi
  425d73:	shl    BYTE PTR [ebx],1
  425d75:	test   eax,0x183d3eb1
  425d7a:	ret    
  425d7b:	push   0xa310d7be
  425d80:	sbb    al,0x5a
  425d82:	fist   WORD PTR [ebp+0x8]
  425d85:	(bad)  
  425d87:	bound  ebp,QWORD PTR [ecx]
  425d89:	add    eax,0xb288854a
  425d8e:	mov    esp,0x6513d0de
  425d93:	outs   dx,BYTE PTR ds:[esi]
  425d94:	or     BYTE PTR [edi+0x6b],ah
  425d97:	cld    
  425d98:	inc    edx
  425d99:	mov    al,0xd9
  425d9b:	jg     0x425d94
  425d9d:	adc    DWORD PTR [ecx+0x1878b041],esi
  425da3:	data16 jo 0x425e11
  425da6:	fcom   st(7)
  425da8:	push   edi
  425da9:	cmp    eax,0xc99cb09c
  425dae:	sbb    DWORD PTR [eax-0x78],ebp
  425db1:	push   esp
  425db2:	das    
  425db3:	xchg   ecx,eax
  425db4:	adc    bh,BYTE PTR [edi+0x2c]
  425db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425db8:	ins    DWORD PTR es:[edi],dx
  425db9:	inc    ecx
  425dba:	(bad)  
  425dbb:	fsubr  DWORD PTR [ebp+0x78]
  425dbe:	or     BYTE PTR [ebx],dh
  425dc0:	sti    
  425dc1:	addr16 dec edi
  425dc3:	gs and al,dh
  425dc6:	std    
  425dc7:	xchg   DWORD PTR [esi-0x3ddff618],eax
  425dcd:	repnz aas 
  425dcf:	pop    ss
  425dd0:	mov    ebx,0x7cd774a1
  425dd5:	pop    ebp
  425dd6:	fiadd  DWORD PTR [ecx]
  425dd8:	mov    bl,0xbb
  425dda:	cmp    dl,ah
  425ddc:	outs   dx,BYTE PTR ds:[esi]
  425ddd:	lods   al,BYTE PTR ds:[esi]
  425dde:	(bad)  
  425ddf:	jmp    0x99953165
  425de4:	test   BYTE PTR [ebx-0x5f],cl
  425de7:	ss test al,0x28
  425dea:	mov    edi,0x73c9bbc4
  425def:	fst    QWORD PTR [esi+0x17d77ddb]
  425df5:	inc    BYTE PTR [esi+ebx*2]
  425df8:	mov    cl,0x1
  425dfa:	mov    cl,0xba
  425dfc:	(bad)  
  425dfd:	and    eax,0x9b1aa35e
  425e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e03:	xlat   BYTE PTR ds:[ebx]
  425e04:	mov    dh,0x5a
  425e06:	xor    al,0x36
  425e08:	jae    0x425d97
  425e0a:	and    eax,0x377a887e
  425e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e10:	mov    ah,0xe8
  425e12:	pop    ebp
  425e13:	jae    0x425e94
  425e15:	dec    ebx
  425e16:	pushf  
  425e17:	adc    eax,0x1d2b73d9
  425e1c:	mov    ah,bl
  425e1e:	inc    esi
  425e1f:	pop    ebx
  425e20:	aad    0x8c
  425e22:	jns    0x425daa
  425e24:	sti    
  425e25:	lock mov cl,0x0
  425e28:	arpl   ax,sp
  425e2a:	or     DWORD PTR [ebx+ebp*8+0x1b2dedec],esp
  425e31:	pop    ecx
  425e32:	pusha  
  425e33:	adc    ch,BYTE PTR [eax+edx*4+0x602cc13a]
  425e3a:	add    DWORD PTR [edi+0x37],0x9714d736
  425e41:	inc    edi
  425e42:	or     al,0x15
  425e44:	mov    dl,cl
  425e46:	daa    
  425e47:	jno    0x425de9
  425e49:	out    0xea,al
  425e4b:	jns    0x425e8f
  425e4d:	shl    BYTE PTR fs:[edi+eiz*4],1
  425e51:	and    DWORD PTR [eax+eax*1+0x4a097b5f],esp
  425e58:	call   0x74d6:0xda067194
  425e5f:	imul   esi,DWORD PTR [edi-0x444ca699],0xffffff9b
  425e66:	sub    DWORD PTR [eax-0x29],ecx
  425e69:	loop   0x425e1c
  425e6b:	test   eax,0xf1473aea
  425e70:	sbb    al,0x65
  425e72:	cmp    eax,0xc5dcc4d5
  425e77:	and    eax,0x71d1b698
  425e7c:	addr16 mov esi,0x14883f5b
  425e82:	clc    
  425e83:	shr    BYTE PTR [eax+0x74],1
  425e86:	outs   dx,DWORD PTR ds:[esi]
  425e87:	xor    DWORD PTR [eax],ebx
  425e89:	mov    DWORD PTR [ebp-0x70d37430],ebx
  425e8f:	sub    al,0x3d
  425e91:	add    BYTE PTR [ebx-0x113ee299],dl
  425e97:	imul   esi,DWORD PTR [edx-0x7a],0xffffffb1
  425e9b:	adc    cl,BYTE PTR [ebp-0xf6e61ce]
  425ea1:	ds mov esi,0x35057cd7
  425ea7:	sbb    BYTE PTR [ecx+ebx*8+0x5a880909],0x4c
  425eaf:	or     esi,DWORD PTR [ecx]
  425eb1:	mov    al,ds:0x67d7d36c
  425eb6:	mov    esp,0xc126ebb5
  425ebb:	out    dx,al
  425ebc:	jmp    0x23b8:0x27f2b1ea
  425ec3:	and    BYTE PTR [ecx+edx*2],bh
  425ec6:	pop    eax
  425ec7:	call   0x28d85df0
  425ecc:	sahf   
  425ecd:	jae    0x425ed4
  425ecf:	adc    ecx,DWORD PTR [eax-0x3dd4fdd7]
  425ed5:	xlat   BYTE PTR ds:[ebx]
  425ed6:	xor    al,0x54
  425ed8:	mov    BYTE PTR [esi-0x5c245313],bh
  425ede:	dec    esp
  425edf:	xchg   esp,eax
  425ee0:	jns    0x425f49
  425ee2:	sbb    ah,BYTE PTR [edx-0x79cca6d0]
  425ee8:	out    0x99,al
  425eea:	mov    cl,0x66
  425eec:	fild   QWORD PTR [ecx-0x6799333]
  425ef2:	jmp    0x425ecb
  425ef4:	or     al,0x5f
  425ef6:	imul   edi,DWORD PTR [edx+eax*1],0x88b941aa
  425efd:	sbb    eax,ebp
  425eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f00:	cs mov esp,0x67def377
  425f06:	cmp    esi,DWORD PTR [ebp-0x63ce95de]
  425f0c:	jecxz  0x425f57
  425f0e:	mov    bh,cl
  425f10:	inc    ecx
  425f11:	out    0xb6,eax
  425f13:	ds pop esp
  425f15:	es js  0x425eaa
  425f18:	or     ah,BYTE PTR [edi+0x37]
  425f1b:	sub    eax,ecx
  425f1d:	pop    edi
  425f1e:	mov    ch,0x9e
  425f20:	xor    DWORD PTR [edi-0x4a],edx
  425f23:	adc    cl,BYTE PTR [ebx+0x23]
  425f26:	adc    eax,0x4abcd5df
  425f2b:	pop    ds
  425f2c:	outs   dx,DWORD PTR ds:[esi]
  425f2d:	or     BYTE PTR [edx+0x600250d7],bl
  425f33:	inc    eax
  425f34:	inc    eax
  425f35:	xor    BYTE PTR [ebx-0x49cc6eb5],bl
  425f3b:	test   DWORD PTR [ecx-0x27bd3144],0x62276e98
  425f45:	addr16 cwde 
  425f47:	enter  0x9cb9,0x1a
  425f4b:	je     0x425ed7
  425f4d:	aas    
  425f4e:	mov    ah,BYTE PTR [esi+0x71e760]
  425f54:	mov    al,0x20
  425f56:	xchg   ecx,eax
  425f57:	jg     0x425fbe
  425f59:	jl     0x425fa0
  425f5b:	ret    
  425f5c:	ret    
  425f5d:	iret   
  425f5e:	jno    0x425f7e
  425f60:	pop    ebx
  425f61:	inc    edx
  425f62:	mov    al,0x93
  425f64:	loop   0x425fc1
  425f66:	pop    edi
  425f67:	push   edi
  425f68:	scas   eax,DWORD PTR es:[edi]
  425f69:	scas   eax,DWORD PTR es:[edi]
  425f6a:	dec    ecx
  425f6b:	inc    esp
  425f6c:	popf   
  425f6d:	or     cl,BYTE PTR [si-0x698c]
  425f72:	dec    esp
  425f73:	mov    eax,DWORD PTR [edx-0x77a2fe57]
  425f79:	xor    DWORD PTR [esi+ebp*2+0x50172448],edi
  425f80:	loope  0x425fe9
  425f82:	fwait
  425f83:	jne    0x425f81
  425f85:	icebp  
  425f86:	sbb    eax,0xcce604f2
  425f8b:	xor    DWORD PTR [eax+0x77c8652c],ecx
  425f91:	jmp    0xd79e:0xffa7154a
  425f98:	mov    ah,0x85
  425f9a:	shl    BYTE PTR [ebp-0x209b603],cl
  425fa0:	mov    BYTE PTR [ebx+0x56754263],ch
  425fa6:	push   edx
  425fa7:	jg     0x425f85
  425fa9:	addr16 add al,0x1a
  425fac:	jbe    0x42602a
  425fae:	jmp    0x9641:0x8eee9f2e
  425fb5:	mov    BYTE PTR [bp+0x2481],al
  425fba:	adc    eax,edi
  425fbc:	cmp    BYTE PTR [edi-0x35],ah
  425fbf:	icebp  
  425fc0:	ror    DWORD PTR [ebx-0x114c9e94],1
  425fc6:	lods   al,BYTE PTR ds:[esi]
  425fc7:	xor    al,0xcb
  425fc9:	sub    al,0xb1
  425fcb:	jge    0x425f58
  425fcd:	clc    
  425fce:	or     al,0x8a
  425fd0:	(bad)  
  425fd1:	pusha  
  425fd2:	lds    esp,FWORD PTR [ebx+0x3a]
  425fd5:	in     al,0xa1
  425fd7:	mov    bh,0x71
  425fd9:	dec    edi
  425fda:	je     0x425fc3
  425fdc:	mov    BYTE PTR [edx+0x57],bh
  425fdf:	and    bl,bh
  425fe1:	out    0xd2,eax
  425fe3:	retf   
  425fe4:	ret    
  425fe5:	data16 loope 0x426045
  425fe8:	xchg   BYTE PTR [ecx+0x4d],cl
  425feb:	call   FWORD PTR [ebx]
  425fed:	fwait
  425fee:	shl    BYTE PTR [ebp-0xc7ea764],1
  425ff4:	dec    eax
  425ff5:	das    
  425ff6:	xor    eax,0x8294cb07
  425ffb:	rol    BYTE PTR [esi-0x1a30356b],1
  426001:	pop    es
  426002:	or     al,0x9c
  426004:	adc    al,0x11
  426006:	mov    cl,0xfe
  426008:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42600a:	test   al,0x90
  42600c:	cmc    
  42600d:	out    0xe9,eax
  42600f:	xlat   BYTE PTR ds:[ebx]
  426010:	sbb    BYTE PTR [ecx+edx*1+0x738b428],ch
  426017:	add    BYTE PTR [edi-0x2fd42df0],al
  42601d:	out    dx,eax
  42601e:	rcr    DWORD PTR [eax+eiz*2+0x76],0x69
  426023:	xlat   BYTE PTR ds:[ebx]
  426024:	fdiv   st(3),st
  426026:	ds dec edi
  426028:	mov    ebx,0x886d8b97
  42602d:	inc    esp
  42602e:	xor    BYTE PTR [edi*4-0x5b771876],ah
  426035:	pop    edx
  426036:	cs mov ebp,0xd444788
  42603c:	idiv   BYTE PTR [ebx+eiz*2]
  42603f:	dec    ebp
  426040:	mov    BYTE PTR [ebx+ebp*4-0x36673d82],bl
  426047:	sbb    eax,DWORD PTR [ebp+eiz*2+0x1c]
  42604b:	repnz fmul DWORD PTR [eax+edi*4]
  42604f:	test   al,0xf1
  426051:	pop    es
  426052:	sub    ecx,esi
  426054:	pusha  
  426055:	adc    ecx,DWORD PTR [ecx-0x11]
  426058:	aad    0xa9
  42605a:	ss and eax,0xe7daf814
  426060:	or     al,0x82
  426062:	adc    al,0xe2
  426064:	mov    BYTE PTR [ebp-0x22960f65],al
  42606a:	cmp    BYTE PTR [eax],dl
  42606c:	jns    0x4260d2
  42606e:	adc    eax,0x7be1a8ba
  426073:	inc    esp
  426074:	cmp    dh,bl
  426076:	out    0x3e,eax
  426078:	mov    esp,ebp
  42607a:	scas   al,BYTE PTR es:[edi]
  42607b:	jne    0x426036
  42607d:	(bad)  
  42607e:	mov    WORD PTR [ebx-0x28f92055],cs
  426084:	mov    ah,0x6e
  426086:	sbb    eax,0x8d9c7398
  42608b:	sub    eax,0x6307b7aa
  426090:	mov    BYTE PTR [ecx],dl
  426092:	jns    0x426113
  426094:	adc    DWORD PTR [ebp-0x9f560d1],ebp
  42609a:	mov    cl,0xe4
  42609c:	cmp    DWORD PTR [ebp+0x6e],0xb6ac9129
  4260a3:	pusha  
  4260a4:	jmp    0x48d11f2f
  4260a9:	pop    ecx
  4260aa:	cli    
  4260ab:	clc    
  4260ac:	add    DWORD PTR [edx-0x3e],edi
  4260af:	cmp    BYTE PTR [edi+eiz*4],0xa0
  4260b3:	jp     0x42610f
  4260b5:	jle    0x4260e3
  4260b7:	mov    ds:0xec62d299,eax
  4260bc:	dec    eax
  4260bd:	mov    ch,0xa7
  4260bf:	push   edi
  4260c0:	pop    esp
  4260c1:	mov    ds:0x68c0d03c,eax
  4260c6:	jg     0x426063
  4260c8:	jle    0x426141
  4260ca:	sti    
  4260cb:	jno    0x426080
  4260cd:	add    BYTE PTR [ecx+0x4ab3d9bc],dh
  4260d3:	int3   
  4260d4:	adc    DWORD PTR [esi],eax
  4260d6:	inc    ebx
  4260d7:	aad    0xf1
  4260d9:	ja     0x4260d7
  4260db:	into   
  4260dc:	into   
  4260dd:	dec    ebx
  4260de:	dec    edi
  4260df:	pop    ecx
  4260e0:	mov    dh,ch
  4260e2:	add    BYTE PTR gs:[ecx+eiz*4-0x5b5b2897],dh
  4260ea:	adc    eax,0x57427c9a
  4260ef:	pop    edx
  4260f0:	mov    BYTE PTR [esi-0x2c],ah
  4260f3:	aas    
  4260f4:	sbb    DWORD PTR [eax],ebx
  4260f6:	or     ch,dl
  4260f8:	cld    
  4260f9:	addr16 rcr esp,1
  4260fc:	dec    edi
  4260fd:	frstor [eax+0x47]
  426100:	fisubr WORD PTR [ebx-0x10b42b4f]
  426106:	pop    esi
  426107:	ror    BYTE PTR [esi-0x5f],0x6a
  42610b:	xlat   BYTE PTR ds:[ebx]
  42610c:	inc    ebx
  42610d:	mov    esp,cs
  42610f:	(bad)  
  426110:	xlat   BYTE PTR ds:[ebx]
  426111:	lea    ebp,[ebx-0x6a]
  426114:	fwait
  426115:	inc    edi
  426116:	xor    dh,BYTE PTR [ecx-0x78]
  426119:	mov    bh,0x6
  42611b:	mov    edi,0xd272ca6b
  426120:	cs sbb ebp,0xffffffa1
  426124:	xchg   BYTE PTR [esi-0x50c14a7b],ah
  42612a:	pusha  
  42612b:	lock fmul QWORD PTR [eax]
  42612e:	sub    al,0xb7
  426130:	xor    BYTE PTR [edi+ebp*4-0x6e983b95],cl
  426137:	mov    BYTE PTR [ebx],ah
  426139:	xlat   BYTE PTR ds:[ebx]
  42613a:	pop    edi
  42613b:	je     0x42615e
  42613d:	call   0x44ee8d6b
  426142:	std    
  426143:	aad    0xa0
  426145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426146:	jge    0x4260dd
  426148:	adc    DWORD PTR [edi-0x4e],esp
  42614b:	push   ds
  42614c:	ss jne 0x4260ff
  42614f:	pop    ecx
  426150:	std    
  426151:	cmp    bl,al
  426153:	ins    DWORD PTR es:[edi],dx
  426154:	mov    dh,bl
  426156:	xchg   edx,eax
  426157:	jmp    0x42613b
  426159:	xchg   cl,bl
  42615b:	add    BYTE PTR [edi+eiz*2-0x1a387de0],ch
  426162:	xchg   ecx,eax
  426163:	out    0x66,eax
  426165:	fs pop ebp
  426167:	or     BYTE PTR [eax-0x263ebd0c],cl
  42616d:	(bad)  
  42616e:	call   DWORD PTR [esp+ebp*1]
  426171:	pop    eax
  426172:	pop    edx
  426173:	push   cs
  426174:	mov    cl,dh
  426176:	xchg   esp,eax
  426177:	jns    0x426181
  426179:	cmp    BYTE PTR [ecx+0x4d3ca4cb],0x6d
  426180:	int3   
  426181:	js     0x4261a6
  426183:	fnstcw WORD PTR [ecx+0x3a57a745]
  426189:	cmp    ecx,DWORD PTR [esi-0x2a]
  42618c:	mov    ds,WORD PTR [esi+0x66602159]
  426192:	dec    ebx
  426193:	call   0xbba3:0xb7679f95
  42619a:	push   ebp
  42619b:	cmp    al,0xba
  42619e:	enter  0x7c0d,0xe5
  4261a2:	mov    cl,0x29
  4261a4:	ins    BYTE PTR es:[edi],dx
  4261a5:	dec    ebx
  4261a6:	mov    bh,0xaf
  4261a8:	mov    DWORD PTR [ebp-0x9],esp
  4261ab:	xlat   BYTE PTR ds:[ebx]
  4261ac:	data16 mov dh,0x51
  4261af:	cmp    al,0x27
  4261b1:	and    al,0x52
  4261b3:	push   ebx
  4261b4:	mov    ah,al
  4261b6:	push   0xbc4a94ce
  4261bb:	or     BYTE PTR [edi+edx*8+0x68a7d625],bh
  4261c2:	sub    DWORD PTR [ebx+0x3b997997],esi
  4261c8:	lods   eax,DWORD PTR ds:[esi]
  4261c9:	fdiv   DWORD PTR [ecx-0x75569071]
  4261cf:	and    ecx,ebx
  4261d1:	int3   
  4261d2:	ja     0x42619e
  4261d4:	les    esi,FWORD PTR [ebx]
  4261d6:	call   DWORD PTR [edi-0x58519686]
  4261dc:	repz dec ebp
  4261de:	mov    cl,0x43
  4261e0:	nop
  4261e1:	push   ds
  4261e2:	push   ecx
  4261e3:	shl    BYTE PTR [edx+0x17d9c69e],cl
  4261e9:	int3   
  4261ea:	cld    
  4261eb:	xchg   esp,eax
  4261ec:	lods   eax,DWORD PTR ds:[esi]
  4261ed:	cmp    BYTE PTR [ecx],dh
  4261ef:	xor    DWORD PTR [ebx+0x8],ecx
  4261f2:	test   dl,bh
  4261f4:	lea    edi,[ecx+0x67a3db63]
  4261fa:	in     al,0xb
  4261fc:	adc    edx,ebx
  4261fe:	js     0x4261d7
  426200:	push   ebp
  426201:	xchg   esp,eax
  426202:	push   ss
  426203:	les    esi,FWORD PTR [eax-0x775303e9]
  426209:	cwde   
  42620a:	adc    BYTE PTR [eax-0xac1a54b],ch
  426210:	fsub   DWORD PTR [edi+0x1f]
  426213:	mov    eax,ds:0x130f6265
  426218:	mov    eax,es
  42621a:	mov    edi,0x4c25cd10
  42621f:	push   edi
  426220:	hlt    
  426221:	not    al
  426223:	push   edx
  426224:	out    dx,al
  426225:	jnp    0x42623b
  426227:	lods   eax,DWORD PTR ds:[esi]
  426228:	xor    ah,BYTE PTR [edi+0x17]
  42622b:	sub    eax,0xc7ff64f8
  426230:	mov    BYTE PTR [edi],bh
  426232:	into   
  426233:	xchg   edx,eax
  426234:	sbb    eax,0x63cb7e04
  426239:	pop    dx
  42623b:	(bad)  
  42623c:	xchg   edx,eax
  42623d:	push   ss
  42623e:	mov    DWORD PTR [ebx],esi
  426240:	mov    edi,0x8ea7dbab
  426245:	and    BYTE PTR [edi],ah
  426247:	dec    esi
  426248:	inc    edx
  426249:	aad    0xbe
  42624b:	(bad)  [edi-0x19]
  42624e:	aam    0x7d
  426250:	ss add BYTE PTR es:[edx+eiz*1-0x5430bb99],ch
  426259:	sub    eax,0x21663cce
  42625e:	mov    dl,0x63
  426260:	icebp  
  426261:	fdiv   QWORD PTR [edx]
  426263:	pushf  
  426264:	cmp    edi,DWORD PTR [esi+0x555c4451]
  42626a:	nop
  42626b:	xlat   BYTE PTR ds:[ebx]
  42626c:	or     ah,cl
  42626e:	ret    0x2068
  426271:	sar    DWORD PTR [esi-0x343c786b],cl
  426277:	jmp    0x14f8:0x267f2d70
  42627e:	mov    dh,0xd7
  426280:	xchg   esp,eax
  426281:	or     DWORD PTR [ebp+0x22ba98aa],ecx
  426287:	fimul  DWORD PTR [edx+0x541a29eb]
  42628d:	pop    es
  42628e:	push   ebx
  42628f:	and    cl,ah
  426291:	ret    0xd7ec
  426294:	push   0x1b
  426296:	int3   
  426297:	cwde   
  426298:	into   
  426299:	dec    esi
  42629a:	aaa    
  42629b:	inc    edx
  42629c:	mov    BYTE PTR [eax-0x478eaa26],cl
  4262a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262a3:	xor    ebp,DWORD PTR [eax-0x3f818899]
  4262a9:	stc    
  4262aa:	bound  esi,QWORD PTR [edx+0x3c]
  4262ad:	jns    0x426261
  4262af:	outs   dx,DWORD PTR ds:[esi]
  4262b0:	or     DWORD PTR [ebx-0x6840f9bf],ebp
  4262b6:	push   esi
  4262b7:	pop    ds
  4262b8:	sti    
  4262b9:	addr16 sub esp,esp
  4262bc:	jne    0x42630a
  4262be:	adc    eax,0xb0e2833f
  4262c3:	popw   ds
  4262c5:	xchg   ebx,eax
  4262c6:	test   eax,0x7eae32b3
  4262cb:	seta   BYTE PTR [edi+0x43]
  4262cf:	xlat   BYTE PTR ds:[ebx]
  4262d0:	(bad)  
  4262d4:	scas   eax,DWORD PTR es:[edi]
  4262d5:	in     eax,0x6d
  4262d7:	outs   dx,DWORD PTR ds:[esi]
  4262d8:	mov    ebp,0xd1d73a43
  4262dd:	scas   al,BYTE PTR es:[edi]
  4262de:	mov    ah,0xb7
  4262e0:	sbb    edx,esp
  4262e2:	push   ss
  4262e3:	retf   0xe3a1
  4262e6:	or     edx,edi
  4262e8:	sbb    ch,BYTE PTR [ebx]
  4262ea:	adc    al,BYTE PTR [eax+0x9]
  4262ed:	dec    esi
  4262ee:	mov    cl,0xbf
  4262f0:	popf   
  4262f1:	adc    BYTE PTR [ecx+0x44],cl
  4262f4:	jp     0x426285
  4262f6:	jo     0x4262cf
  4262f8:	mov    esi,0x3589cab4
  4262fd:	jnp    0x426377
  4262ff:	mov    al,BYTE PTR [esi+0x786db5bb]
  426305:	lahf   
  426306:	lea    edx,[edi]
  426308:	mov    DWORD PTR [edx+0x1b],ebp
  42630b:	shl    BYTE PTR [edx],1
  42630d:	add    eax,0x423ba390
  426312:	mov    dl,0x17
  426314:	fbld   TBYTE PTR [ecx-0x3e77fde4]
  42631a:	scas   al,BYTE PTR es:[edi]
  42631b:	lods   al,BYTE PTR ds:[esi]
  42631c:	pop    esp
  42631d:	pop    esp
  42631e:	jp     0x4262ed
  426320:	aas    
  426321:	addr16 pop edx
  426323:	arpl   WORD PTR [edi+0x5d4d31c6],bx
  426329:	les    esi,FWORD PTR [ecx+0x730ce8e9]
  42632f:	gs ds push 0x7a
  426333:	retf   
  426334:	mov    DWORD PTR [edx],ecx
  426336:	fst    QWORD PTR [edi-0x977fbb8]
  42633c:	push   ecx
  42633d:	retf   0x6baf
  426340:	push   ss
  426341:	sbb    eax,0xa89116b1
  426346:	out    dx,eax
  426347:	retf   0x66b0
  42634a:	jmp    0x4262e3
  42634c:	loopne 0x4262fb
  42634e:	sub    ah,BYTE PTR [eax+ebp*4]
  426351:	lea    esi,[ecx+0x5e]
  426354:	dec    edx
  426355:	arpl   WORD PTR [edx-0x691847f6],ax
  42635b:	das    
  42635c:	xor    BYTE PTR gs:[ebx],bl
  42635f:	icebp  
  426360:	add    esp,DWORD PTR [ecx+0x54]
  426363:	aad    0xf5
  426365:	xor    al,0xd5
  426367:	and    DWORD PTR [eax+0x23],ecx
  42636a:	arpl   sp,di
  42636c:	test   esi,edx
  42636e:	pusha  
  42636f:	es cld 
  426371:	jne    0x426390
  426373:	xlat   BYTE PTR ds:[ebx]
  426374:	sahf   
  426375:	es pop es
  426377:	jmp    0x426328
  426379:	pop    ebp
  42637a:	cmp    al,0xe5
  42637c:	mov    dh,BYTE PTR [edx]
  42637e:	mov    dl,BYTE PTR es:[ebp-0x79]
  426382:	addr16 movlhps xmm1,xmm7
  426386:	das    
  426387:	xlat   BYTE PTR ds:[ebx]
  426388:	or     BYTE PTR [eax],0x81
  42638b:	fnstsw WORD PTR [edi-0x2b]
  42638e:	fild   WORD PTR [edx-0x47]
  426391:	or     eax,0x4df7542c
  426396:	pop    esp
  426397:	jae    0x426366
  426399:	mov    edi,0x139fefc5
  42639e:	jp     0x426377
  4263a0:	das    
  4263a1:	add    ah,dl
  4263a3:	cdq    
  4263a4:	and    edx,DWORD PTR [edx-0x2277a86a]
  4263aa:	push   ebx
  4263ab:	push   esp
  4263ac:	xor    eax,0x714727d6
  4263b1:	addr16 mov esp,0xca6115a3
  4263b7:	imul   ecx,DWORD PTR [edi+0x32],0xffffffac
  4263bb:	sub    DWORD PTR ds:0xeeab3226,edi
  4263c1:	ss jl  0x4263e0
  4263c4:	aad    0xb7
  4263c6:	push   edi
  4263c7:	call   0x68f6be22
  4263cc:	xchg   BYTE PTR [esi],ch
  4263ce:	and    BYTE PTR [esi],0xb2
  4263d1:	(bad)  
  4263d2:	icebp  
  4263d3:	or     al,ch
  4263d5:	xlat   BYTE PTR ds:[ebx]
  4263d6:	std    
  4263d7:	add    DWORD PTR [edx+0x67],esi
  4263da:	sub    DWORD PTR [eax+0xd],esp
  4263dd:	push   edx
  4263de:	or     ebx,DWORD PTR [edi-0xf]
  4263e1:	lods   al,BYTE PTR ds:[si]
  4263e3:	mov    ah,BYTE PTR [ecx+0x20]
  4263e6:	sub    eax,0xb1765bce
  4263eb:	xor    eax,0xc2630da3
  4263f0:	loop   0x42637b
  4263f2:	sbb    edx,edi
  4263f4:	or     cl,BYTE PTR [esi-0x4a]
  4263f7:	cmp    bl,BYTE PTR [esi-0x2d]
  4263fa:	inc    esi
  4263fb:	push   edi
  4263fc:	sbb    bh,dl
  4263fe:	sub    ebp,esp
  426400:	mov    BYTE PTR [ecx+0x3e],bh
  426403:	jns    0x4263a2
  426405:	sbb    esp,ebp
  426407:	imul   esi,DWORD PTR [ebp+0x45ac467],0x8e29718b
  426411:	lds    esi,FWORD PTR [ecx+0x21f862b7]
  426417:	mov    edx,0x47799e4e
  42641c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42641d:	addr16 mov ds:0x6630,eax
  426421:	fnstenvw [ebx+esi*2+0x45]
  426426:	popf   
  426427:	sub    ebp,ecx
  426429:	(bad)  [ecx-0x40b4df55]
  42642f:	out    0xfb,al
  426431:	fs push ebx
  426433:	shl    DWORD PTR [edx+eiz*2],1
  426436:	cmp    al,0xda
  426438:	sub    DWORD PTR [edi+0xe3d56f1],edx
  42643e:	mov    cl,0x5e
  426440:	jmp    0x4263fc
  426442:	mov    fs:0xd753716d,eax
  426448:	ins    BYTE PTR es:[edi],dx
  426449:	lods   eax,DWORD PTR ds:[esi]
  42644a:	jmp    0x8755:0x2e47a62c
  426451:	outs   dx,BYTE PTR ds:[esi]
  426452:	aad    0x1c
  426454:	xor    BYTE PTR [eax-0x57],ch
  426457:	jae    0x4264d5
  426459:	jecxz  0x42643b
  42645b:	xlat   BYTE PTR ds:[ebx]
  42645c:	add    BYTE PTR ds:[ecx],cl
  42645f:	sub    eax,0x1862d5f5
  426464:	jbe    0x42640d
  426466:	mov    dh,0xc6
  426468:	stc    
  426469:	cmp    dl,BYTE PTR [ebx]
  42646b:	sbb    BYTE PTR [eax-0xbcb4a2a],0x67
  426472:	xchg   DWORD PTR [edx+0x98feb25],esp
  426478:	sub    DWORD PTR [ebx+0x15ea10b1],eax
  42647e:	jecxz  0x42647a
  426480:	out    dx,eax
  426481:	jo     0x4264e3
  426483:	xlat   BYTE PTR ds:[ebx]
  426484:	push   esi
  426485:	jl     0x4264a9
  426487:	mov    edi,fs
  426489:	sbb    al,BYTE PTR [eax]
  42648b:	(bad)  
  42648c:	hlt    
  42648d:	movzx  eax,BYTE PTR [edx]
  426490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426491:	dec    ecx
  426492:	or     esp,DWORD PTR [ecx-0x3f]
  426495:	int    0x61
  426497:	sub    eax,0xd63c5209
  42649c:	fisttp DWORD PTR [edx+0x79aff11e]
  4264a2:	xchg   esp,eax
  4264a3:	or     DWORD PTR [edi],eax
  4264a5:	hlt    
  4264a6:	pmulhw mm3,QWORD PTR [ebx-0x778ea249]
  4264ad:	mov    eax,0xa33eb1f2
  4264b2:	fs xchg ecx,eax
  4264b4:	adc    BYTE PTR [esi+ecx*4],0xd7
  4264b8:	or     eax,0xaab3657b
  4264bd:	(bad)  
  4264bf:	loopne 0x426449
  4264c1:	ins    BYTE PTR es:[edi],dx
  4264c2:	popa   
  4264c3:	jbe    0x4264a6
  4264c5:	add    eax,0x68a47aaf
  4264ca:	loopne 0x42648d
  4264cc:	add    ecx,DWORD PTR [ebp-0x169a8e02]
  4264d2:	pop    edx
  4264d3:	test   eax,0x62ccab80
  4264d8:	mov    al,bh
  4264da:	jo     0x426495
  4264dc:	cdq    
  4264dd:	imul   ebx,DWORD PTR [edx+ebx*1+0x47319b91],0xffffffb5
  4264e5:	addr16 daa 
  4264e7:	mov    edi,0xb13a2a61
  4264ec:	lods   al,BYTE PTR ds:[esi]
  4264ed:	jp     0x42649f
  4264ef:	sbb    ebx,DWORD PTR [ecx]
  4264f1:	sar    cl,1
  4264f3:	mov    ah,0x4b
  4264f5:	mov    ah,0x65
  4264f7:	mov    ebp,0x11e5660c
  4264fc:	pop    esp
  4264fd:	pop    es
  4264fe:	imul   ebx,DWORD PTR [esi-0x37cb6841],0x68ebea89
  426508:	add    BYTE PTR [eax-0x5d],cl
  42650b:	jno    0x42651f
  42650d:	or     dl,BYTE PTR [edx+0x77]
  426510:	push   esp
  426511:	xor    cl,bh
  426513:	xlat   BYTE PTR ds:[ebx]
  426514:	mov    esp,0xcbf4ca82
  426519:	adc    eax,0xf088a6a4
  42651e:	pop    ds
  42651f:	data16 mov WORD PTR [edi+0x67924ed5],?
  426526:	jmp    DWORD PTR [eax]
  426528:	mov    dh,0x3a
  42652a:	jp     0x4264c4
  42652c:	sub    al,0xe8
  42652e:	mov    cl,0x83
  426530:	sbb    eax,0x31c21b24
  426535:	cmp    ebp,DWORD PTR [eax+edx*8+0x21]
  426539:	mov    esi,0x344b460a
  42653e:	xchg   edi,esi
  426540:	js     0x426526
  426542:	sub    eax,0x540a894d
  426547:	repz adc eax,0x743f1726
  42654d:	outs   dx,BYTE PTR ds:[esi]
  42654e:	dec    edx
  42654f:	or     al,0x1b
  426551:	jmp    DWORD PTR [edx+edx*1+0x55ba674e]
  426558:	adc    ebx,esi
  42655a:	or     BYTE PTR [edx+0x49b0f6c7],dh
  426560:	int    0x1a
  426562:	add    DWORD PTR [eax+0x75],ecx
  426565:	int    0x75
  426567:	jecxz  0x426559
  426569:	addr16 hlt 
  42656b:	sub    al,0xeb
  42656d:	jno    0x4265d1
  42656f:	leave  
  426570:	and    eax,0x845d4f1d
  426575:	stos   DWORD PTR es:[edi],eax
  426576:	push   eax
  426577:	xchg   esp,eax
  426578:	push   ecx
  426579:	pop    ecx
  42657a:	dec    edi
  42657b:	pop    ss
  42657c:	adc    al,0x11
  42657e:	rcl    DWORD PTR [esi-0x78],cl
  426581:	(bad)  
  426582:	mov    dh,0x15
  426584:	jg     0x426599
  426586:	ds call 0x1788:0x4c41d28a
  42658e:	and    al,0xbf
  426590:	and    al,0x8d
  426592:	popf   
  426593:	xor    DWORD PTR [ebp-0x65],ebp
  426596:	(bad)  
  426597:	xlat   BYTE PTR ds:[ebx]
  426598:	xchg   esp,eax
  426599:	shr    cl,cl
  42659b:	xchg   edx,eax
  42659c:	and    BYTE PTR [edx+0x3d],0xec
  4265a0:	test   DWORD PTR [edx-0x23dcd195],ebx
  4265a6:	outs   dx,BYTE PTR ds:[esi]
  4265a7:	ja     0x426622
  4265a9:	and    eax,DWORD PTR [edi+0x742b46d9]
  4265af:	in     eax,0x28
  4265b1:	jmp    0x4511d549
  4265b6:	dec    ebx
  4265b7:	repnz mov BYTE PTR [edx-0x38],ch
  4265bb:	call   esi
  4265bd:	xchg   edx,eax
  4265be:	iret   
  4265bf:	loop   0x426572
  4265c1:	push   0xd81b2a1c
  4265c6:	xor    DWORD PTR ds:0x23ce8b0a,esi
  4265cc:	mov    BYTE PTR [esi-0x57],dl
  4265cf:	not    bl
  4265d1:	dec    ecx
  4265d2:	cmc    
  4265d3:	sbb    al,0xa3
  4265d5:	sbb    esi,DWORD PTR [edx-0x29]
  4265d8:	fisub  DWORD PTR [ecx-0x16]
  4265db:	mov    edx,0xd62e577e
  4265e0:	test   DWORD PTR [edi],0x2f5b8b1
  4265e6:	cmp    ah,BYTE PTR [eax-0x260703dc]
  4265ec:	push   ecx
  4265ed:	push   esp
  4265ee:	(bad)  
  4265ef:	dec    eax
  4265f1:	xchg   DWORD PTR [eax-0x1d],esi
  4265f4:	fild   WORD PTR [ebp-0x4d]
  4265f7:	pushf  
  4265f8:	sub    BYTE PTR [esp+edi*1],al
  4265fb:	mov    al,ds:0xbba687f8
  426600:	xlat   BYTE PTR ds:[ebx]
  426601:	arpl   dx,cx
  426603:	ss xchg ebx,eax
  426605:	cmovb  edx,DWORD PTR [edi-0x67]
  426609:	or     DWORD PTR [edx-0x1b332318],0x2db260d4
  426613:	and    BYTE PTR [eax],bh
  426615:	xlat   BYTE PTR ds:[ebx]
  426616:	stos   BYTE PTR es:[edi],al
  426617:	lds    ecx,FWORD PTR [esi-0x5ffb8a9b]
  42661d:	xor    ah,BYTE PTR [edx]
  42661f:	jmp    0x426629
  426621:	loopne 0x426643
  426623:	sahf   
  426624:	jnp    0x426661
  426626:	mov    cl,0x10
  426628:	and    DWORD PTR [edi-0x20],ebp
  42662b:	int3   
  42662c:	mov    ecx,ecx
  42662e:	ins    BYTE PTR es:[edi],dx
  42662f:	xlat   BYTE PTR ds:[ebx]
  426630:	fdivr  DWORD PTR [esi-0x73]
  426633:	fidivr WORD PTR [esi]
  426635:	(bad)  
  426636:	jp     0x42662b
  426638:	xor    DWORD PTR [ebx-0x38],0x38
  42663c:	cmovs  esi,DWORD PTR [ecx+0x5933a272]
  426643:	test   edx,ebp
  426645:	pop    ebp
  426646:	loop   0x4266af
  426648:	mov    BYTE PTR [esp+eiz*8],cl
  42664b:	mov    DWORD PTR [esi+ecx*1+0x179ac7f2],esp
  426652:	daa    
  426653:	add    BYTE PTR [edi+0x3fe8c603],0x8a
  42665a:	pop    ecx
  42665b:	shl    BYTE PTR ds:0xa6e77566,cl
  426661:	inc    esi
  426662:	cdq    
  426663:	nop
  426664:	xor    BYTE PTR [edi],al
  426666:	mov    ds:0xaeeb8815,al
  42666b:	(bad)  
  42666c:	cmp    eax,0xadc56a2a
  426671:	fs mov ah,ch
  426674:	inc    ebx
  426675:	mov    ecx,0xaa68a8ef
  42667a:	fwait
  42667b:	stc    
  42667c:	mov    BYTE PTR [edx],bl
  42667e:	cmc    
  42667f:	mov    al,ds:0x3ecb833f
  426684:	bound  ebp,QWORD PTR cs:[eax]
  426687:	sbb    eax,0xd7ca98bc
  42668c:	sbb    DWORD PTR [edx+0x3cfa6ff7],edx
  426692:	mov    esi,0xb4225760
  426697:	pop    ss
  426698:	jne    0x670b9f09
  42669e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42669f:	daa    
  4266a0:	or     eax,0x2450f16c
  4266a5:	xchg   DWORD PTR [edx],eax
  4266a7:	ret    
  4266a8:	mov    BYTE PTR [eax],bl
  4266aa:	repnz bound esp,QWORD PTR [eax]
  4266ad:	sub    eax,0x6714d434
  4266b2:	mov    dh,dl
  4266b4:	fs cmp eax,0x270cb115
  4266ba:	mov    edi,0x512cb498
  4266bf:	pop    ecx
  4266c0:	je     0x426669
  4266c2:	xor    dl,BYTE PTR [ecx-0x14]
  4266c5:	(bad)  
  4266c6:	jmp    0x5842:0x34e3add7
  4266cd:	mov    ebp,0xde885ea3
  4266d2:	popf   
  4266d3:	shl    DWORD PTR [eax],cl
  4266d5:	jmp    0x426728
  4266d7:	mov    dh,0x38
  4266d9:	addr16 xchg ebp,eax
  4266db:	jbe    0x4266f8
  4266dd:	push   0xd14b7bc7
  4266e2:	mov    edi,0x8aa2ae99
  4266e7:	xlat   BYTE PTR ds:[ebx]
  4266e8:	pop    ecx
  4266e9:	(bad)  
  4266ea:	mov    esp,ss
  4266ec:	pop    esi
  4266ed:	xor    BYTE PTR [bx],dh
  4266f0:	sbb    BYTE PTR [eax-0x6e],bl
  4266f3:	xchg   esi,eax
  4266f4:	jecxz  0x4266a6
  4266f6:	lods   eax,DWORD PTR ds:[esi]
  4266f7:	jb     0x4266ab
  4266f9:	sbb    ch,BYTE PTR [edx+esi*8+0x48]
  4266fd:	test   BYTE PTR [esi-0x24348e07],0xd7
  426704:	dec    ch
  426706:	mov    BYTE PTR [esi+ebp*4],al
  426709:	pop    ds
  42670a:	push   ecx
  42670b:	mov    esi,0xcaba2cfe
  426710:	dec    ecx
  426711:	jecxz  0x4266fe
  426713:	add    BYTE PTR [eax],cl
  426715:	push   ebp
  426716:	mov    ebx,0xb18c0b7a
  42671b:	mov    cl,0x34
  42671d:	data16 xchg BYTE PTR [esi],dl
  426720:	(bad)  
  426721:	cmp    ch,BYTE PTR [esi-0x383c629]
  426727:	or     bl,BYTE PTR [ebx]
  426729:	idiv   BYTE PTR [edx+0x5a]
  42672c:	mov    BYTE PTR [edi-0x40b7f7a9],bl
  426732:	xor    al,0xab
  426734:	dec    edx
  426735:	arpl   WORD PTR [edi],bx
  426737:	js     0x4266f8
  426739:	push   ebp
  42673a:	adc    BYTE PTR [edi+0x58],dl
  42673d:	fiadd  WORD PTR [edi]
  42673f:	sbb    ebx,DWORD PTR [edi+esi*4-0xe77a5ae]
  426746:	in     al,0xdd
  426748:	sbb    al,BYTE PTR [esi]
  42674a:	cmc    
  42674b:	xlat   BYTE PTR ds:[ebx]
  42674c:	add    dh,ch
  42674e:	addr16 in al,0x5b
  426751:	jl     0x426783
  426753:	jne    0x4266dd
  426755:	sbb    eax,0xa51decce
  42675a:	and    BYTE PTR [ecx-0x284b72fc],dh
  426760:	aam    0x4
  426762:	psubq  mm2,QWORD PTR cs:[ebp-0x73]
  426767:	cmp    cl,BYTE PTR [eax-0x3d9ed9c4]
  42676d:	mov    edi,DWORD PTR [ebx]
  42676f:	test   eax,0xf2f567de
  426774:	xor    BYTE PTR [edx-0x3d],dl
  426777:	cli    
  426778:	out    dx,al
  426779:	jnp    0x426739
  42677b:	(bad)  
  42677c:	mov    dh,0x1b
  42677e:	adc    edx,edi
  426780:	aas    
  426781:	not    BYTE PTR [eax]
  426783:	jmp    0xe6d5:0xb61f677a
  42678a:	dec    ecx
  42678b:	test   BYTE PTR [ecx-0x59ed4ec6],0xd4
  426792:	fstp   QWORD PTR [edx-0x282c2962]
  426798:	dec    ebp
  426799:	ss fucomi st,st(1)
  42679c:	and    DWORD PTR [edi+eiz*8],eax
  42679f:	and    eax,0xd7ae87cc
  4267a4:	or     al,0xb
  4267a6:	cmp    BYTE PTR [ebx-0x43],dh
  4267a9:	mov    ebp,0x762ed418
  4267ae:	mov    edx,0x717b1949
  4267b3:	lods   eax,DWORD PTR ds:[esi]
  4267b4:	(bad)  
  4267b5:	mov    bh,0xb6
  4267b7:	aad    0xd1
  4267b9:	scas   eax,DWORD PTR es:[edi]
  4267ba:	ins    DWORD PTR es:[edi],dx
  4267bb:	(bad)
  4267bf:	push   edx
  4267c0:	jo     0x426829
  4267c2:	lods   al,BYTE PTR ds:[esi]
  4267c3:	stos   DWORD PTR es:[edi],eax
  4267c4:	pop    ecx
  4267c5:	adc    eax,0xb71a9f5b
  4267ca:	dec    ebp
  4267cb:	xor    eax,DWORD PTR [ecx+0x77e1a60c]
  4267d1:	sbb    eax,0xfc0e575a
  4267d6:	add    ah,BYTE PTR [eax]
  4267d8:	addr16 addr16 icebp 
  4267db:	sti    
  4267dc:	(bad)  
  4267dd:	test   BYTE PTR [ecx-0x4fa5e8e6],bh
  4267e3:	jle    0x426800
  4267e5:	lods   al,BYTE PTR ds:[esi]
  4267e6:	and    DWORD PTR [ebx+0x57],ebp
  4267e9:	pushf  
  4267ea:	ror    DWORD PTR [eax+0x72a278e0],0xa0
  4267f1:	test   eax,0x685b5cac
  4267f6:	icebp  
  4267f7:	mov    ds:0x44e37688,al
  4267fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267fd:	inc    eax
  4267fe:	scas   eax,DWORD PTR es:[edi]
  4267ff:	js     0x4267f0
  426801:	shl    BYTE PTR [ecx-0x6a],cl
  426804:	push   es
  426805:	stc    
  426806:	stc    
  426807:	adc    cl,0xdf
  42680a:	xor    edx,edi
  42680c:	mov    edi,0x79c848d9
  426811:	outs   dx,BYTE PTR ds:[esi]
  426812:	aaa    
  426813:	out    0x88,al
  426815:	add    al,0x87
  426817:	adc    DWORD PTR [ebp+0x1f],eax
  42681a:	les    edi,FWORD PTR ds:[esi+0x67]
  42681e:	and    al,0x79
  426820:	jp     0x426812
  426822:	adc    DWORD PTR [eax+0x3bac1d06],eax
  426828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426829:	div    BYTE PTR [ecx+0x75039ae1]
  42682f:	xor    ch,BYTE PTR [edx+0x69]
  426832:	jmp    0x426821
  426834:	or     BYTE PTR ds:0x3169a991,dl
  42683a:	in     eax,dx
  42683b:	dec    edx
  42683c:	jle    0x426898
  42683e:	stos   DWORD PTR es:[edi],eax
  42683f:	js     0x426834
  426841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426842:	add    DWORD PTR [edi],edx
  426844:	cdq    
  426845:	fwait
  426846:	rcl    bh,cl
  426848:	icebp  
  426849:	scas   eax,DWORD PTR es:[edi]
  42684a:	cmp    edi,ebp
  42684c:	nop
  42684d:	mov    ecx,0x4b88f946
  426852:	out    0x6e,al
  426854:	mov    ebx,0x41475cd7
  426859:	test   DWORD PTR [ecx-0x4e397a61],edx
  42685f:	sbb    bl,BYTE PTR [ebp-0x4d51134d]
  426865:	pushf  
  426866:	mov    cl,0xa0
  426868:	out    0x1f,eax
  42686a:	lea    edx,[ebx-0x37041859]
  426870:	outs   dx,DWORD PTR ds:[esi]
  426871:	imul   eax,DWORD PTR [edi],0xffffff90
  426874:	loop   0x42684b
  426876:	adc    al,0x37
  426878:	data16 xlat BYTE PTR ds:[ebx]
  42687a:	mov    bl,0x5d
  42687c:	mov    ah,ch
  42687e:	xor    ecx,DWORD PTR [edi]
  426880:	mov    edx,0xe374e9e3
  426885:	pop    ebx
  426886:	std    
  426887:	hlt    
  426888:	add    DWORD PTR [esi+0x7f],esi
  42688b:	mov    edx,cs
  42688d:	ja     0x426906
  42688f:	jb     0x4268e1
  426891:	sti    
  426892:	push   edi
  426893:	add    ecx,DWORD PTR [eax-0x4cfbfdbf]
  426899:	(bad)  
  42689a:	jecxz  0x426878
  42689c:	sub    DWORD PTR cs:[bp+0x5e],ebp
  4268a1:	aas    
  4268a2:	aad    0x32
  4268a4:	fiadd  WORD PTR [edi-0x5177b23b]
  4268aa:	adc    al,BYTE PTR [bp-0x6640]
  4268af:	mov    al,0x7a
  4268b1:	inc    ecx
  4268b2:	ficom  DWORD PTR [esi]
  4268b4:	or     BYTE PTR [edi+0x5],ah
  4268b7:	jnp    0x42685c
  4268b9:	sar    BYTE PTR [eax-0x5c],cl
  4268bc:	mov    BYTE PTR [ecx],bl
  4268be:	xchg   edi,eax
  4268bf:	leave  
  4268c0:	jbe    0x4268a8
  4268c2:	sub    esp,DWORD PTR [ecx]
  4268c4:	sbb    BYTE PTR [ebx],bl
  4268c6:	mov    al,0xd7
  4268c8:	cwde   
  4268c9:	mov    al,ds:0xcb81bc7e
  4268ce:	add    BYTE PTR [ebp-0xb6ca278],0x52
  4268d5:	pop    eax
  4268d6:	and    esi,DWORD PTR [ebp+0x3a]
  4268d9:	addr16 sbb ax,0x8049
  4268de:	(bad)  
  4268df:	in     al,dx
  4268e0:	xor    DWORD PTR [ecx-0x37],eax
  4268e3:	addr16 stc 
  4268e5:	xor    BYTE PTR [ecx+0x114ea5c7],0x3a
  4268ec:	sahf   
  4268ed:	mov    gs,esp
  4268ef:	xlat   BYTE PTR ds:[ebx]
  4268f0:	(bad)  
  4268f1:	sbb    esp,DWORD PTR [ecx+0x17]
  4268f4:	push   ecx
  4268f5:	jmp    0x426911
  4268f7:	in     eax,dx
  4268f8:	mov    BYTE PTR [eax],ah
  4268fa:	sahf   
  4268fb:	push   edx
  4268fc:	adc    ch,bh
  4268fe:	and    al,0xcd
  426900:	push   ss
  426901:	addr16 aad 0x11
  426904:	xor    al,0xf3
  426906:	scas   al,BYTE PTR es:[edi]
  426907:	stos   DWORD PTR es:[edi],eax
  426908:	sub    ecx,DWORD PTR [esi-0x54]
  42690b:	pop    ds
  42690c:	shr    BYTE PTR [esp+esi*8],1
  42690f:	jne    0x4268ad
  426911:	arpl   WORD PTR [esi+0x78],si
  426914:	sub    BYTE PTR [ecx-0x6e],al
  426917:	sbb    BYTE PTR [edx-0x1678f698],ch
  42691d:	(bad)  [esi+0x387c94c]
  426923:	js     0x4268f1
  426925:	out    dx,al
  426926:	mov    esi,0xad3cb4af
  42692b:	mov    bh,0x57
  42692d:	adc    eax,0x5eef34d9
  426932:	pushf  
  426933:	add    BYTE PTR [eax-0x58c49d16],cl
  426939:	or     BYTE PTR [edi],0xa2
  42693c:	jbe    0x42699c
  42693e:	dec    ebp
  42693f:	loop   0x4268ff
  426941:	les    edi,FWORD PTR [edi-0x29]
  426944:	(bad)  
  426945:	aas    
  426946:	pop    ds
  426947:	in     al,dx
  426948:	les    ebp,FWORD PTR [ebx+0x1f00d7b3]
  42694e:	pop    ebp
  42694f:	sar    ch,1
  426951:	scas   eax,DWORD PTR es:[edi]
  426952:	fld    QWORD PTR [eax+ecx*4]
  426955:	fcmove st,st(7)
  426957:	dec    esp
  426958:	mov    ch,BYTE PTR [ecx]
  42695a:	xchg   BYTE PTR [edi-0x5f],dh
  42695d:	pop    ebx
  42695e:	xchg   edx,eax
  42695f:	lahf   
  426960:	or     BYTE PTR [ebx+0x5f],bh
  426963:	sbb    ch,BYTE PTR [ebp-0x77f7c660]
  426969:	fnsetpm(287 only) 
  42696b:	and    DWORD PTR [edx-0x45],edi
  42696e:	xchg   edi,eax
  42696f:	jns    0x426915
  426971:	mov    ebp,ebx
  426973:	xlat   BYTE PTR ds:[ebx]
  426974:	aaa    
  426975:	icebp  
  426976:	mov    cs,WORD PTR [ebp+eiz*2+0x4]
  42697a:	jle    0x4269fa
  42697c:	xchg   DWORD PTR [ecx],ebx
  42697e:	pop    es
  42697f:	ins    DWORD PTR es:[edi],dx
  426980:	mov    gs,WORD PTR [ebx]
  426982:	lea    edx,[ecx-0x7]
  426985:	xlat   BYTE PTR ds:[ebx]
  426986:	cmp    DWORD PTR [ecx-0x79],esi
  426989:	xor    eax,0xb34b5ec9
  42698e:	adc    ah,bl
  426990:	cli    
  426991:	xchg   edi,eax
  426992:	push   edi
  426993:	or     BYTE PTR [eax+0x7e5cb26],0x45
  42699a:	mov    ch,0x81
  42699c:	in     eax,0x64
  42699e:	jnp    0x4269e2
  4269a0:	(bad)  
  4269a2:	sbb    ebx,eax
  4269a4:	push   eax
  4269a5:	nop
  4269a6:	popw   es
  4269a8:	stc    
  4269a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269aa:	mov    cl,0x56
  4269ac:	jg     0x426a2d
  4269ae:	imul   esi,esi,0x13
  4269b1:	(bad)  
  4269b2:	jp     0x42698a
  4269b4:	cmc    
  4269b5:	fild   WORD PTR ss:[edi+0x135876f8]
  4269bc:	(bad)  
  4269bd:	push   ss
  4269be:	mov    dh,0x7b
  4269c0:	out    0xf4,al
  4269c2:	stc    
  4269c3:	jae    0x426a3d
  4269c5:	div    BYTE PTR [edx+esi*8-0x4f]
  4269c9:	jo     0x426a12
  4269cb:	ret    
  4269cc:	data16 addr16 xor al,0xc5
  4269d0:	clc    
  4269d1:	inc    esp
  4269d2:	pop    esi
  4269d3:	jl     0x42698f
  4269d5:	sahf   
  4269d6:	mov    esp,0xd2021ad7
  4269db:	mov    esp,0xd7cd7efe
  4269e0:	lods   al,BYTE PTR ds:[esi]
  4269e1:	rcl    DWORD PTR [edx-0x69],cl
  4269e4:	das    
  4269e5:	nop
  4269e6:	ret    0x8861
  4269e9:	clc    
  4269ea:	stos   DWORD PTR es:[edi],eax
  4269eb:	inc    esi
  4269ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269ed:	cli    
  4269ee:	dec    edi
  4269ef:	test   bh,dh
  4269f1:	scas   al,BYTE PTR es:[di]
  4269f3:	add    BYTE PTR ds:0x2be1eef4,bl
  4269f9:	push   cs
  4269fa:	mov    edi,0xe973ee7e
  4269ff:	sahf   
  426a00:	pusha  
  426a01:	addr16 inc eax
  426a03:	sub    BYTE PTR [edi],cl
  426a05:	aaa    
  426a06:	or     eax,0xa762ad7
  426a0b:	gs mov ecx,0x852a33e4
  426a11:	push   eax
  426a12:	mov    WORD PTR [edx+0x37b4258f],ss
  426a18:	ds retf 0xf3b2
  426a1c:	and    esp,DWORD PTR [ecx+0x673bf39d]
  426a22:	dec    ebp
  426a23:	mov    ds:0x582dd64a,eax
  426a28:	xchg   edx,eax
  426a29:	jg     0x426a39
  426a2b:	in     al,dx
  426a2c:	mov    BYTE PTR [esi-0x112dec02],bl
  426a32:	mov    eax,ds:0x76e0b3d7
  426a37:	mov    BYTE PTR [ecx-0x77fdc227],dh
  426a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a3e:	xor    edi,DWORD PTR [esi+0x401cb410]
  426a44:	xor    ebp,DWORD PTR [eax+0x2d]
  426a47:	arpl   WORD PTR [esi-0x2d774e49],ax
  426a4d:	nop
  426a4e:	jle    0x426a44
  426a50:	mov    BYTE PTR [ecx+0x33],cl
  426a53:	sar    DWORD PTR ds:0x251bc1d7,1
  426a59:	push   0x94fc26b9
  426a5e:	adc    DWORD PTR [esi+0x37],edi
  426a61:	xor    al,0xe8
  426a63:	nop
  426a64:	mov    BYTE PTR [edx-0x7c],ch
  426a67:	mov    esp,0x6877f2b2
  426a6c:	ds adc al,0x3d
  426a6f:	xlat   BYTE PTR ds:[ebx]
  426a70:	ins    DWORD PTR es:[edi],dx
  426a71:	dec    ebx
  426a72:	clc    
  426a73:	jne    0x426a75
  426a75:	fwait
  426a76:	lock test eax,0x90288
  426a7c:	sar    DWORD PTR [edx+0x67da487c],0x7a
  426a83:	cld    
  426a84:	pop    esp
  426a85:	sysenter 
  426a87:	xor    BYTE PTR [esi+edx*2+0x4ec5b6b1],bl
  426a8e:	lea    eax,[eax]
  426a90:	cwde   
  426a91:	cmp    eax,0x37bbc926
  426a96:	lahf   
  426a97:	mov    cl,BYTE PTR ds:0xa9db0e0
  426a9d:	xchg   edi,eax
  426a9e:	mov    esi,0xb1fad420
  426aa3:	cld    
  426aa4:	push   ss
  426aa5:	mov    bl,0xd4
  426aa7:	arpl   ax,si
  426aa9:	(bad)  
  426aaa:	mov    ecx,0x16e896c4
  426aaf:	xlat   BYTE PTR ds:[ebx]
  426ab0:	out    0xce,al
  426ab2:	mov    edx,0xbf15a3dd
  426ab7:	pop    ss
  426ab8:	call   0x75c6:0x49777de3
  426abf:	jo     0x426a9a
  426ac1:	addr16 cld 
  426ac3:	add    al,0xf1
  426ac5:	xchg   ebx,eax
  426ac6:	retf   
  426ac7:	mov    esi,0x22b18f7a
  426acc:	pop    esi
  426acd:	loope  0x426a64
  426acf:	addr16 sub BYTE PTR [si],0xd7
  426ad4:	int3   
  426ad5:	xchg   edi,ebp
  426ad7:	das    
  426ad8:	call   DWORD PTR [ebp-0x17]
  426adb:	mov    cl,0x88
  426add:	adc    DWORD PTR [esi],ebp
  426adf:	jb     0x426ada
  426ae1:	xlat   BYTE PTR ds:[ebx]
  426ae2:	mov    ah,0x21
  426ae4:	adc    esp,DWORD PTR [edi+0x16]
  426ae7:	ss dec edi
  426ae9:	outs   dx,BYTE PTR ds:[esi]
  426aea:	stos   DWORD PTR es:[edi],eax
  426aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426aec:	mov    ds:0xc56fb39d,eax
  426af1:	mov    dh,0xf7
  426af3:	sbb    DWORD PTR [esi-0x19],esp
  426af6:	bound  esi,QWORD PTR [esp+ebx*1-0x16]
  426afa:	sbb    dl,bh
  426afc:	sub    cl,al
  426afe:	cmp    BYTE PTR [edi-0x3fb7ce93],0x88
  426b05:	pushf  
  426b06:	js     0x426b50
  426b08:	bound  edx,QWORD PTR [ebx+0x70]
  426b0b:	cmp    eax,0xb57d6754
  426b10:	mov    ch,BYTE PTR ds:0x3f3a15dd
  426b16:	mov    cl,0x11
  426b18:	mov    DWORD PTR [ebx-0x1f],ebx
  426b1b:	pop    ebp
  426b1c:	jmp    0x426b9c
  426b1e:	xchg   bh,dl
  426b20:	test   al,0x3d
  426b22:	stos   DWORD PTR es:[edi],eax
  426b23:	jmp    0x6288:0xdcb60894
  426b2a:	loop   0x426ad3
  426b2c:	jae    0x426b0f
  426b2e:	sub    al,0x5e
  426b30:	fiadd  DWORD PTR [edi+0x3365d70c]
  426b36:	aam    0xc7
  426b38:	stos   DWORD PTR es:[edi],eax
  426b39:	fwait
  426b3a:	or     DWORD PTR [ecx+ebx*4-0x77eb8b5d],esp
  426b41:	in     eax,0x58
  426b43:	add    edi,DWORD PTR [ebp-0x35]
  426b46:	xor    dl,bh
  426b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b49:	dec    eax
  426b4a:	mov    esp,0x97a5ac
  426b4f:	test   eax,0x68a88285
  426b54:	shl    cl,cl
  426b56:	jno    0x426b41
  426b58:	push   0x22d13eca
  426b5d:	sbb    eax,0xdb36311
  426b62:	push   0xb1e4f53a
  426b67:	inc    ecx
  426b68:	and    edx,DWORD PTR [ebx+ebp*8+0x66b83dd4]
  426b6f:	xlat   BYTE PTR ds:[ebx]
  426b70:	pop    esi
  426b71:	jb     0x426b6d
  426b73:	xor    ebp,DWORD PTR [ebp-0x6691ae1f]
  426b79:	test   DWORD PTR [ebp+0x79],esp
  426b7c:	dec    eax
  426b7d:	sar    BYTE PTR [ebp-0x1b],cl
  426b80:	or     DWORD PTR [esi+0x1679d71c],esp
  426b86:	jmp    0x944a1c19
  426b8b:	and    DWORD PTR [eax+0x461751c2],ecx
  426b91:	xor    eax,ebx
  426b93:	push   0x7c4a6702
  426b98:	xchg   edi,eax
  426b99:	stc    
  426b9a:	into   
  426b9b:	mov    bh,ah
  426b9d:	jecxz  0x426be6
  426b9f:	cmp    cl,BYTE PTR [eax-0x743cdbd1]
  426ba5:	mov    es,WORD PTR [eax+0x56]
  426ba8:	std    
  426ba9:	imul   edx,DWORD PTR [esi+0x49],0x580ebbac
  426bb0:	and    eax,0xd02c7105
  426bb5:	adc    DWORD PTR [ebp-0x7e],eax
  426bb8:	and    DWORD PTR [edi+0x65c71ae5],0xdfb19252
  426bc2:	out    0xdb,eax
  426bc4:	test   DWORD PTR [edi+0x6],esp
  426bc7:	dec    BYTE PTR [ebp-0x6d140a70]
  426bcd:	lea    esi,[ecx+0x28fc1831]
  426bd3:	dec    ecx
  426bd4:	loope  0x426b6b
  426bd6:	xor    esi,ebp
  426bd8:	fld    QWORD PTR ds:0xce6a43b1
  426bde:	mov    ds:0x81df13e4,al
  426be3:	mov    cl,0x12
  426be5:	dec    ebp
  426be6:	lds    edi,FWORD PTR [edx+0x4aa56850]
  426bec:	xor    eax,0xc7861177
  426bf1:	je     0x426bf2
  426bf3:	popf   
  426bf4:	mov    BYTE PTR [edx+esi*4-0x1],bl
  426bf8:	in     al,0xf1
  426bfa:	push   ebx
  426bfb:	push   es
  426bfc:	dec    ebx
  426bfd:	addr16 jp 0x426bd3
  426c00:	out    dx,eax
  426c01:	lds    esp,FWORD PTR ds:0xb041584c
  426c07:	push   ecx
  426c08:	aad    0x78
  426c0a:	stos   DWORD PTR es:[edi],eax
  426c0b:	dec    ebp
  426c0c:	scas   eax,DWORD PTR es:[edi]
  426c0d:	cmc    
  426c0e:	push   ecx
  426c0f:	and    bh,BYTE PTR [ebp+0x140c0d67]
  426c15:	pop    ebx
  426c16:	retf   
  426c17:	jae    0x426bed
  426c19:	jl     0x426c68
  426c1b:	push   edx
  426c1c:	mov    BYTE PTR [eax],dl
  426c1e:	aaa    
  426c1f:	push   eax
  426c20:	lea    edx,gs:[edx+0x2b6ff3]
  426c27:	add    DWORD PTR [eax+0x9dba2bb],ecx
  426c2d:	sbb    ebp,DWORD PTR [ecx]
  426c2f:	xchg   ebp,eax
  426c30:	mov    BYTE PTR [ecx-0x7c],ch
  426c33:	mov    cl,0x42
  426c35:	out    dx,eax
  426c36:	dec    esi
  426c37:	popa   
  426c38:	sbb    al,0x67
  426c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c3b:	adc    ah,BYTE PTR [edi]
  426c3d:	push   ecx
  426c3e:	popa   
  426c3f:	jne    0x426c36
  426c41:	pop    esi
  426c42:	mov    cl,0xc5
  426c44:	add    edi,ecx
  426c46:	mov    bl,0x60
  426c48:	mov    esi,0x97d7d372
  426c4d:	(bad)  
  426c4f:	das    
  426c50:	fisttp QWORD PTR [ecx+0x6e]
  426c53:	push   0xbd9bfd88
  426c58:	je     0x426cd6
  426c5a:	dec    esp
  426c5b:	jmp    0x9357d3a7
  426c60:	arpl   WORD PTR [ebp+0x710ee7d9],bp
  426c66:	mov    cl,0xc4
  426c68:	and    DWORD PTR [ecx-0x22b9aadf],0x59bdd7f1
  426c72:	loop   0x426c53
  426c74:	or     al,0x4b
  426c76:	hlt    
  426c77:	xor    ecx,DWORD PTR [eax-0x3649e43c]
  426c7d:	(bad)  
  426c7e:	cwde   
  426c7f:	add    DWORD PTR [ebx+ebx*4],edi
  426c82:	mov    eax,0x6ee562d7
  426c87:	lods   al,BYTE PTR ds:[esi]
  426c88:	mov    edi,0x88fa1d99
  426c8d:	loop   0x426c7e
  426c8f:	push   0x44
  426c91:	fnstcw WORD PTR [edx+eax*4+0x52]
  426c95:	push   0x8c7fb73e
  426c9a:	xor    DWORD PTR [ebx],eax
  426c9c:	lea    edi,[edi]
  426c9e:	stos   DWORD PTR es:[edi],eax
  426c9f:	int3   
  426ca0:	xchg   DWORD PTR [ebp-0x80],ebx
  426ca3:	add    DWORD PTR [edx+0x54f8e171],0xd3d74ba1
  426cad:	and    BYTE PTR [eax-0x294b5eeb],bh
  426cb3:	add    ecx,DWORD PTR [eax-0x328e1186]
  426cb9:	xchg   ecx,eax
  426cba:	add    DWORD PTR [eax],ebx
  426cbc:	inc    edx
  426cbd:	outs   dx,BYTE PTR ds:[esi]
  426cbe:	mov    ds:0xb19c1182,eax
  426cc3:	or     eax,0x26d92191
  426cc8:	mov    BYTE PTR ds:0xc18c0798,cl
  426cce:	les    ebp,FWORD PTR [eax-0x1c]
  426cd1:	(bad)  
  426cd2:	cdq    
  426cd3:	retf   0xccac
  426cd6:	sahf   
  426cd7:	or     ah,dl
  426cd9:	out    0x32,eax
  426cdb:	adc    edx,esp
  426cdd:	popa   
  426cde:	dec    edi
  426cdf:	sbb    eax,DWORD PTR [eax+0x1c]
  426ce2:	mov    cl,0x25
  426ce4:	pop    DWORD PTR [esi]
  426ce6:	mov    cs,WORD PTR [edi]
  426ce8:	loopne 0x426cf2
  426cea:	or     dl,bh
  426cec:	dec    ebx
  426ced:	sbb    cl,BYTE PTR [edx-0x2f]
  426cf0:	or     al,0xed
  426cf2:	stos   BYTE PTR es:[edi],al
  426cf3:	lock mov dl,BYTE PTR [edx]
  426cf6:	ins    DWORD PTR es:[edi],dx
  426cf7:	aam    0x71
  426cf9:	inc    edi
  426cfa:	bound  edi,QWORD PTR ds:0xd7f8cc04
  426d00:	adc    esi,DWORD PTR [eax-0x41c97187]
  426d06:	mov    ecx,0x2af181a8
  426d0b:	push   ds
  426d0c:	in     al,dx
  426d0d:	add    eax,ecx
  426d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d10:	jge    0x426d6e
  426d12:	sub    DWORD PTR [eax+ecx*8-0x18745de6],0x888c8ebc
  426d1d:	and    al,0x84
  426d1f:	mov    al,ds:0xafad9fef
  426d24:	test   DWORD PTR [edx+0x31],esp
  426d27:	pop    ebp
  426d28:	(bad)  
  426d29:	outs   dx,DWORD PTR gs:[esi]
  426d2b:	push   ds
  426d2c:	mov    cs,WORD PTR [esi+0x66f5b571]
  426d32:	add    DWORD PTR [esi],ebx
  426d34:	div    BYTE PTR [edx]
  426d36:	pushf  
  426d37:	aam    0x6e
  426d39:	lahf   
  426d3a:	add    al,0x68
  426d3c:	mov    BYTE PTR [eax+0x349af6c],dh
  426d42:	fcom   DWORD PTR ds:0xa3b4649d
  426d48:	imul   eax,DWORD PTR [edi+0x60],0x24
  426d4c:	pusha  
  426d4d:	mov    eax,0xbd88e631
  426d52:	fwait
  426d53:	pop    ss
  426d54:	xchg   ecx,eax
  426d55:	(bad)  
  426d57:	lds    ebx,FWORD PTR [edi]
  426d59:	addr16 add al,0x0
  426d5c:	add    DWORD PTR [edx+0x49],ebx
  426d5f:	mov    ds:0x8cb12962,eax
  426d64:	dec    edx
  426d65:	rol    BYTE PTR [ebx],0xb9
  426d68:	in     eax,dx
  426d69:	or     eax,0xbb15d7bb
  426d6e:	jnp    0x426d63
  426d70:	jno    0x426d30
  426d72:	xchg   esp,eax
  426d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d74:	shr    BYTE PTR ds:0xbc45d48b,0x2a
  426d7b:	mov    ah,BYTE PTR ds:0x531780c7
  426d81:	adc    eax,0xf6b3d73b
  426d86:	jecxz  0x426d1f
  426d88:	mov    ecx,0x887e4cbe
  426d8d:	fsub   DWORD PTR [ebp+0x36a007bb]
  426d93:	hlt    
  426d94:	fwait
  426d95:	addr16 popa 
  426d97:	fs call 0xb1f0:0x734727f3
  426d9f:	(bad)  
  426da0:	iretw  
  426da2:	fs ret 
  426da4:	xchg   ah,dh
  426da6:	sub    bh,dl
  426da8:	jg     0x426e07
  426daa:	je     0x426e21
  426dac:	mov    ecx,0x99235451
  426db1:	jge    0x426d7e
  426db3:	mov    edx,0x4d7b1ec8
  426db8:	or     esp,ebp
  426dba:	mov    edi,edx
  426dbc:	imul   edi,DWORD PTR [ebx-0x29],0x1c
  426dc0:	and    BYTE PTR [ecx-0x2d772228],0x82
  426dc7:	vxorps ymm4,ymm7,ymm7
  426dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dcc:	hlt    
  426dcd:	(bad)  
  426dce:	mul    DWORD PTR [ebx]
  426dd0:	lahf   
  426dd1:	push   0x5801e62f
  426dd6:	xor    ecx,esp
  426dd8:	xchg   ebx,eax
  426dd9:	sbb    BYTE PTR [edi+0x6b],ch
  426ddc:	test   DWORD PTR [edi-0x64],ecx
  426ddf:	inc    ebp
  426de0:	push   eax
  426de1:	cmp    ah,ch
  426de3:	dec    edi
  426de4:	and    eax,0x68d40ed3
  426de9:	or     BYTE PTR [esi+0x4e],ah
  426dec:	jae    0x426da2
  426dee:	pop    ecx
  426def:	cmp    BYTE PTR [ecx],bl
  426df1:	in     al,dx
  426df2:	mov    cl,0x64
  426df4:	ss jge 0x426e16
  426df7:	lock and BYTE PTR [esi],0xf5
  426dfb:	iret   
  426dfc:	ror    BYTE PTR [eax],1
  426dfe:	pop    ecx
  426dff:	mov    bh,0x5e
  426e01:	pop    edx
  426e02:	mov    cl,0x49
  426e04:	jnp    0x426d90
  426e06:	out    0x24,al
  426e08:	adc    ch,BYTE PTR [esi]
  426e0a:	lahf   
  426e0b:	in     al,dx
  426e0c:	mov    ecx,DWORD PTR [esi]
  426e0e:	mov    cl,0xdc
  426e10:	jecxz  0x426df5
  426e12:	inc    edi
  426e13:	pop    ebx
  426e14:	push   ecx
  426e15:	fnsave [ecx-0x69161415]
  426e1b:	mov    ds:0xd7cdf6a7,eax
  426e20:	rcl    bh,1
  426e22:	sbb    DWORD PTR [edx+0x69],eax
  426e25:	push   es
  426e26:	test   al,0x24
  426e28:	mov    BYTE PTR [edi],dh
  426e2a:	jbe    0x426e2c
  426e2c:	test   al,0x5b
  426e2e:	push   cs
  426e2f:	cmc    
  426e30:	(bad)  
  426e31:	adc    BYTE PTR [ecx-0x13],dl
  426e34:	add    ch,BYTE PTR [eax+0x31]
  426e37:	mov    bl,0x66
  426e39:	int3   
  426e3a:	pcmpeqd mm7,QWORD PTR [ebp-0x3e004f0c]
  426e41:	enter  0x5f8f,0xd
  426e45:	jmp    0x729:0x7a244fd1
  426e4c:	mov    ah,0xa7
  426e4e:	dec    edx
  426e4f:	mov    WORD PTR [edi],fs
  426e51:	adc    ebx,0x308acc8f
  426e57:	aam    0x10
  426e59:	cmp    sp,sp
  426e5c:	sub    eax,eax
  426e5e:	sub    dl,BYTE PTR [esi+edi*8-0xb]
  426e62:	je     0x426e83
  426e64:	push   ecx
  426e65:	mov    dh,0x59
  426e67:	jmp    0x82b6:0xfb31e0a1
  426e6e:	mul    cl
  426e70:	cs popa 
  426e72:	mov    cl,0x2a
  426e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e75:	int3   
  426e76:	in     al,dx
  426e77:	or     dh,bl
  426e79:	sub    DWORD PTR [edx+0x2f35a9d7],ecx
  426e7f:	cmp    eax,0x5c8cf5ed
  426e84:	mov    BYTE PTR [ebp-0x69df5bc9],ch
  426e8a:	mov    dl,0x6
  426e8c:	out    dx,al
  426e8d:	addr16 mov bh,cl
  426e90:	add    eax,0xf4f31655
  426e95:	mov    dl,0xb1
  426e97:	test   eax,0xcf843423
  426e9c:	stc    
  426e9d:	fs adc bl,al
  426ea0:	ds pop ss
  426ea2:	mov    ecx,0x9581e84c
  426ea7:	xor    dh,BYTE PTR [ecx-0x71654ed8]
  426ead:	jae    0x426ecb
  426eaf:	jno    0x426e49
  426eb1:	xchg   BYTE PTR [esi],dh
  426eb3:	fdivr  DWORD PTR [ebp-0x60]
  426eb6:	mov    ah,0x77
  426eb8:	sub    BYTE PTR [esi+0x7c],bh
  426ebb:	inc    esp
  426ebc:	add    al,0x69
  426ebe:	mov    cl,0x7b
  426ec0:	ret    
  426ec1:	enter  0x73fc,0x19
  426ec5:	or     dl,cl
  426ec7:	xlat   BYTE PTR ds:[ebx]
  426ec8:	cmp    eax,0x4b330f8e
  426ecd:	inc    eax
  426ece:	and    ebx,DWORD PTR [ebp+edi*4-0x51]
  426ed2:	dec    ecx
  426ed3:	aam    0xb0
  426ed5:	ins    DWORD PTR es:[edi],dx
  426ed6:	test   DWORD PTR [esi],0x97298f8d
  426edc:	sbb    al,0x67
  426ede:	adc    al,0x70
  426ee0:	add    dl,BYTE PTR [eax+edi*8-0x4963c24c]
  426ee7:	aas    
  426ee8:	sbb    esp,DWORD PTR [ebp*2+0x7b83a88d]
  426eef:	inc    ecx
  426ef0:	je     0x426f59
  426ef2:	js     0x426ef7
  426ef4:	xor    al,0xe8
  426ef6:	pop    es
  426ef7:	sub    dh,ch
  426ef9:	inc    edi
  426efa:	mov    cl,0xe6
  426efc:	pop    edi
  426efd:	int3   
  426efe:	mov    eax,ds:0xd89b28f6
  426f03:	jmp    0x426f3f
  426f05:	inc    ecx
  426f06:	xor    eax,edi
  426f08:	cs out 0x50,eax
  426f0b:	sub    al,BYTE PTR [esi-0x48924d2a]
  426f11:	nop
  426f12:	(bad)  [ecx+0x509997d1]
  426f18:	and    BYTE PTR [edi-0x44],ah
  426f1b:	lock xchg ebx,eax
  426f1d:	das    
  426f1e:	cli    
  426f1f:	dec    esi
  426f20:	or     DWORD PTR [esi+ecx*8+0x24],eax
  426f24:	mov    BYTE PTR [ecx-0x2e],ch
  426f27:	int    0x6a
  426f29:	mov    fs,eax
  426f2b:	pop    edi
  426f2c:	inc    ebx
  426f2d:	addr16 aas 
  426f2f:	std    
  426f30:	xchg   edi,eax
  426f31:	pop    edx
  426f32:	test   BYTE PTR [ebx-0x2b4e5fb2],bl
  426f38:	pusha  
  426f39:	cmp    BYTE PTR [edx],cl
  426f3b:	push   0x2b3bc248
  426f40:	and    BYTE PTR [edi+0x1e],0x4e
  426f44:	iret   
  426f45:	(bad)  
  426f47:	sbb    al,0x6
  426f49:	scas   al,BYTE PTR es:[edi]
  426f4a:	mov    cl,0xf5
  426f4c:	imul   ecx,DWORD PTR [ebx-0x6ab6949c],0x253bd701
  426f56:	push   cs
  426f57:	ror    DWORD PTR [eax+esi*8-0x37],0x75
  426f5c:	jmp    DWORD PTR [eax-0x50a8914f]
  426f62:	push   esi
  426f63:	xor    ecx,ebx
  426f65:	shl    BYTE PTR [edi-0x30],1
  426f68:	pop    ss
  426f69:	pop    ss
  426f6a:	inc    ebx
  426f6b:	out    dx,eax
  426f6c:	test   edi,esp
  426f6e:	loop   0x426f6f
  426f70:	sub    ah,al
  426f72:	rcr    edx,0x9c
  426f75:	mov    ds:0xd74afb68,al
  426f7a:	or     DWORD PTR [eax+ecx*4],eax
  426f7d:	out    dx,eax
  426f7e:	sub    ecx,DWORD PTR [ebx+edi*8+0x25d74475]
  426f85:	mov    cl,0x42
  426f87:	lahf   
  426f88:	icebp  
  426f89:	xchg   edi,eax
  426f8a:	push   esi
  426f8b:	pop    esi
  426f8c:	stc    
  426f8d:	sahf   
  426f8e:	retf   0xd014
  426f91:	mov    bl,0x33
  426f93:	aad    0x80
  426f95:	mov    dh,0x2f
  426f97:	inc    ecx
  426f98:	xchg   ebx,eax
  426f99:	daa    
  426f9a:	dec    edi
  426f9b:	add    edi,ebx
  426f9d:	dec    ebx
  426f9e:	mov    dh,0x96
  426fa0:	push   ss
  426fa1:	addr16 and al,0x6d
  426fa4:	mov    eax,ds:0x88dc17c9
  426fa9:	ret    
  426faa:	hlt    
  426fab:	(bad)  
  426fac:	push   DWORD PTR [edx]
  426fae:	sbb    DWORD PTR [ecx-0x5],ebp
  426fb1:	addr16 mov eax,0x605eec44
  426fb7:	xor    ebp,DWORD PTR [esi-0xa]
  426fba:	dec    ebx
  426fbb:	add    ecx,DWORD PTR [eax+0x4a50d5c1]
  426fc1:	scas   al,BYTE PTR es:[edi]
  426fc2:	shr    DWORD PTR [edi],1
  426fc4:	lods   al,BYTE PTR ds:[esi]
  426fc5:	add    dl,BYTE PTR [bx+0xf37]
  426fca:	mov    al,ds:0xb12fa339
  426fcf:	outs   dx,DWORD PTR ds:[esi]
  426fd0:	(bad)  
  426fd1:	jmp    0x426f7e
  426fd3:	fdiv   QWORD PTR [ecx]
  426fd5:	sti    
  426fd6:	sub    BYTE PTR [edi-0x6d4cb16d],cl
  426fdc:	loope  0x426fec
  426fde:	std    
  426fdf:	arpl   ax,bp
  426fe1:	and    BYTE PTR [eax],cl
  426fe3:	(bad)  [eax+0x460d1a02]
  426fe9:	les    edx,FWORD PTR [esi]
  426feb:	inc    edi
  426fec:	data16 mov BYTE PTR [bx-0x274c],dh
  426ff2:	inc    eax
  426ff3:	mov    ecx,0xf8b13391
  426ff8:	stos   BYTE PTR es:[edi],al
  426ff9:	test   al,dl
  426ffb:	cld    
  426ffc:	cld    
  426ffd:	mov    al,ds:0x97abd7eb
  427002:	mov    edx,0x904bd14c
  427007:	mov    DWORD PTR [eax+0x19041f76],ecx
  42700d:	retf   
  42700e:	inc    edx
  42700f:	imul   edx,eax,0xedd70497
  427015:	dec    esi
  427016:	call   0x1b683eb3
  42701b:	mov    bl,0x88
  42701d:	or     BYTE PTR [eax-0x48127200],dl
  427023:	int    0xde
  427025:	outs   dx,BYTE PTR ds:[esi]
  427026:	lods   eax,DWORD PTR ds:[esi]
  427027:	dec    eax
  427028:	push   es
  427029:	jns    0x42708f
  42702b:	push   edi
  42702c:	in     al,dx
  42702d:	xor    eax,0x789936b3
  427032:	jo     0x42701e
  427034:	mov    DWORD PTR [edi-0x4a0f8533],esp
  42703a:	shl    ebx,cl
  42703c:	mov    BYTE PTR [eax],dh
  42703e:	jmp    0x8cec:0x7fe65a1a
  427045:	addr16 icebp 
  427047:	mov    ah,0x7d
  427049:	jl     0x42709a
  42704b:	and    edx,DWORD PTR [eax+0x5226bad5]
  427051:	in     eax,0xd0
  427053:	push   edi
  427054:	jnp    0x4270c8
  427056:	mov    ?,WORD PTR [ebx]
  427058:	(bad)  
  427059:	data16 adc BYTE PTR [bx+si-0x14],dh
  42705e:	ror    DWORD PTR [edi+0x7eb1a130],0x1d
  427065:	jg     0x427093
  427067:	sar    BYTE PTR [esi-0x62173b65],0x3
  42706e:	mov    cl,0x7d
  427070:	sub    DWORD PTR [eax],edi
  427072:	aaa    
  427073:	or     ebp,esi
  427075:	stc    
  427076:	mov    cl,0x9c
  427078:	test   eax,0x3f4bca96
  42707d:	in     al,0x90
  42707f:	xlat   BYTE PTR ds:[ebx]
  427080:	cli    
  427081:	push   ss
  427082:	mov    ss,WORD PTR [edi]
  427084:	and    edi,ecx
  427086:	jmp    0x21bef96b
  42708b:	pop    esi
  42708c:	repz mov edi,0x602024c8
  427092:	add    al,0xd8
  427094:	loope  0x4270ca
  427096:	jp     0x42704f
  427098:	test   BYTE PTR [ebx+edi*1],bl
  42709b:	aad    0x18
  42709d:	sbb    dh,BYTE PTR [edx+0x244a8ac6]
  4270a3:	mov    dh,0x69
  4270a5:	(bad)  
  4270a6:	outs   dx,DWORD PTR ds:[esi]
  4270a7:	push   0xf57067e5
  4270ac:	pusha  
  4270ad:	frstor [ebx-0x4e912590]
  4270b3:	scas   al,BYTE PTR es:[edi]
  4270b4:	mov    edi,0xec0bfebe
  4270b9:	retf   
  4270ba:	out    0xd6,eax
  4270bc:	mov    esi,0x58a005a8
  4270c1:	(bad)  
  4270c2:	scas   al,BYTE PTR es:[edi]
  4270c3:	sub    edx,DWORD PTR [esi+esi*1]
  4270c6:	mov    cl,0x8c
  4270c8:	inc    esp
  4270c9:	icebp  
  4270ca:	push   eax
  4270cb:	pop    ecx
  4270cc:	int    0x2b
  4270ce:	call   0x880e:0x6649b3dc
  4270d5:	mov    ds:0x53c0b64c,eax
  4270da:	mov    cl,0xeb
  4270dc:	test   DWORD PTR [eax],ebp
  4270de:	(bad)  
  4270e0:	push   esp
  4270e1:	sub    ch,BYTE PTR [esi-0x29]
  4270e4:	ret    0xf973
  4270e7:	(bad)  
  4270e8:	mov    eax,ds:0x88692e20
  4270ed:	ins    DWORD PTR es:[edi],dx
  4270ee:	sbb    DWORD PTR [ecx+0x58],ebx
  4270f1:	mov    cl,0xa9
  4270f3:	test   DWORD PTR ds:0xd3368078,ebp
  4270f9:	addr16 push esp
  4270fb:	lahf   
  4270fc:	xor    eax,0xf281b5e4
  427101:	jmp    0x923a87b7
  427106:	mov    edi,0x531a3f2d
  42710b:	xlat   BYTE PTR ds:[ebx]
  42710c:	(bad)  
  42710d:	lock in al,dx
  42710f:	call   0x6859ffb9
  427114:	mov    BYTE PTR [esi+0x201e00e2],ch
  42711a:	ins    BYTE PTR es:[edi],dx
  42711b:	xchg   BYTE PTR [edi],ah
  42711d:	outs   dx,DWORD PTR ds:[si]
  42711f:	xchg   ecx,eax
  427120:	xor    BYTE PTR [eax+ebp*1-0x4ecaf946],ah
  427127:	pushf  
  427128:	ret    
  427129:	push   esi
  42712a:	mov    edi,0x2057edcb
  42712f:	sub    DWORD PTR [edx+0x223bbc67],esp
  427135:	mov    ah,0x61
  427137:	xchg   edi,eax
  427138:	fdiv   QWORD PTR [bx+di+0x2070]
  42713d:	push   eax
  42713e:	(bad)  [edx]
  427140:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427142:	cmp    BYTE PTR [ebp-0x54f4c49d],ch
  427148:	mov    BYTE PTR [esi+0x71537873],bh
  42714e:	pop    esp
  42714f:	xchg   ebx,eax
  427150:	mov    BYTE PTR [edi-0x35],ch
  427153:	inc    edx
  427154:	add    eax,0x7149f6bf
  427159:	xchg   ecx,eax
  42715a:	xchg   esi,eax
  42715b:	jmp    0x427109
  42715d:	jp     0x427190
  42715f:	mov    ebp,0x940614e
  427164:	cli    
  427165:	retf   0x7cae
  427168:	mov    esi,0x7b9f71f5
  42716d:	push   ebp
  42716e:	sub    DWORD PTR [edi-0x72],edi
  427171:	neg    BYTE PTR gs:[edi+0x58]
  427175:	mov    ah,0xb0
  427177:	inc    di
  427179:	out    dx,al
  42717a:	mov    eax,DWORD PTR [ebx]
  42717c:	mov    ecx,0x77c08988
  427181:	out    0x1e,eax
  427183:	jb     0x427179
  427185:	es jmp 0x4271ea
  427188:	mov    dl,0x93
  42718a:	pop    eax
  42718b:	retf   0x4c50
  42718e:	popa   
  42718f:	pop    ss
  427190:	iret   
  427191:	or     eax,0x18f6f08f
  427196:	retf   
  427197:	jge    0x42712d
  427199:	xor    al,BYTE PTR [ecx]
  42719b:	xchg   ebx,eax
  42719c:	bound  esp,QWORD PTR [eax+ebp*1-0x5f]
  4271a0:	push   ebp
  4271a1:	fist   DWORD PTR [ebx]
  4271a3:	pop    ds
  4271a4:	jbe    0x427162
  4271a6:	xor    cl,bl
  4271a8:	sub    eax,0xc15012f4
  4271ad:	stos   DWORD PTR es:[edi],eax
  4271ae:	in     al,0x24
  4271b0:	cmp    ebx,DWORD PTR [ebp+0x456deb21]
  4271b6:	mov    cl,0x48
  4271b8:	std    
  4271b9:	cdq    
  4271ba:	ja     0x42722d
  4271bc:	pop    ds
  4271bd:	lods   al,BYTE PTR ds:[esi]
  4271be:	cld    
  4271bf:	(bad)  
  4271c0:	push   edi
  4271c1:	out    dx,al
  4271c2:	mov    dh,al
  4271c4:	add    eax,0x5eefb50c
  4271c9:	mov    ah,0x39
  4271cb:	test   BYTE PTR [eax-0x653f4ea7],0x21
  4271d2:	ficomp WORD PTR [esi+edx*2]
  4271d5:	sub    DWORD PTR [edx],ebp
  4271d7:	xlat   BYTE PTR ds:[ebx]
  4271d8:	outs   dx,DWORD PTR ds:[esi]
  4271d9:	cwde   
  4271da:	push   ebp
  4271db:	daa    
  4271dc:	jl     0x427200
  4271de:	add    eax,0x1fed8860
  4271e3:	pop    esi
  4271e4:	sahf   
  4271e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271e6:	pinsrw mm6,WORD PTR [edx],0x83
  4271ea:	push   ds
  4271eb:	xlat   BYTE PTR ds:[ebx]
  4271ec:	lods   eax,DWORD PTR ds:[esi]
  4271ed:	nop
  4271ee:	push   0xffffffff
  4271f0:	jo     0x42721c
  4271f2:	cmp    al,0xbb
  4271f4:	test   edx,ecx
  4271f6:	or     cl,BYTE PTR [eax+0x1b]
  4271f9:	push   edi
  4271fa:	pop    es
  4271fb:	outs   dx,BYTE PTR ds:[esi]
  4271fc:	mov    ebx,0x1c9f61e5
  427201:	pop    esp
  427202:	in     eax,dx
  427203:	sub    ecx,DWORD PTR [eax]
  427205:	xor    al,0xb4
  427207:	leave  
  427208:	lahf   
  427209:	out    dx,al
  42720a:	dec    ebx
  42720b:	icebp  
  42720c:	add    ebp,0xca5cf74c
  427212:	add    DWORD PTR [esi],esi
  427214:	push   esi
  427215:	mov    al,ds:0x9483eb8
  42721a:	fsubr  st,st(2)
  42721c:	call   0xc0a1a896
  427221:	cmp    cl,BYTE PTR [ebx-0x29]
  427224:	pop    esi
  427225:	pop    ebp
  427226:	pop    esp
  427227:	push   esi
  427228:	test   DWORD PTR [edx+ebx*8],edx
  42722b:	pop    ss
  42722c:	or     BYTE PTR [edx],0xca
  42722f:	daa    
  427230:	jo     0x42725f
  427232:	test   al,al
  427234:	sbb    BYTE PTR ds:0xbd0fd772,cl
  42723a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42723b:	lds    edx,FWORD PTR [ecx-0x778efedc]
  427241:	sahf   
  427242:	shl    DWORD PTR [eax-0x30],1
  427245:	mov    ds:0x675a2207,al
  42724a:	dec    ebp
  42724b:	push   ebp
  42724c:	test   BYTE PTR [ebx-0x22],al
  42724f:	sbb    eax,0x74b1300a
  427254:	ret    
  427255:	add    ebx,DWORD PTR [ebx]
  427257:	idiv   esp
  427259:	cli    
  42725a:	mov    ss,edi
  42725c:	mov    esp,ebx
  42725e:	dec    ebx
  42725f:	mov    BYTE PTR [ebp+0xb],bl
  427262:	sub    eax,DWORD PTR [ebp-0x78]
  427265:	inc    esp
  427266:	fisub  DWORD PTR [ebx-0x26d26c0e]
  42726c:	shl    DWORD PTR [edi+0x25],0xf
  427270:	inc    edx
  427271:	push   eax
  427272:	inc    esp
  427273:	test   BYTE PTR [ebx-0x2],0xb2
  427277:	jmp    0x4272b6
  427279:	mov    edx,0xdfbb636d
  42727e:	pop    esp
  42727f:	loop   0x427242
  427281:	addr16 xor al,0xf9
  427284:	les    ebp,FWORD PTR [edi-0x2ee1fdc]
  42728a:	mov    ds:0xb16019cc,eax
  42728f:	(bad)  
  427290:	pop    eax
  427291:	jno    0x4272fb
  427293:	pop    eax
  427294:	or     ah,BYTE PTR [edi+0x1f]
  427297:	inc    esi
  427298:	imul   BYTE PTR [edi+0x10f385b9]
  42729e:	mov    cl,0xba
  4272a0:	add    eax,0xf2842460
  4272a5:	fnsave [eax-0x1a89a329]
  4272ab:	sti    
  4272ac:	jp     0x4272ad
  4272ae:	xor    ebp,eax
  4272b0:	mov    BYTE PTR [eax],bl
  4272b2:	call   0xe34d:0xcc1ff36f
  4272b9:	jne    0x4272ba
  4272bb:	mov    esp,0x274a77a0
  4272c0:	mov    BYTE PTR [ebx+0x2b621944],cl
  4272c6:	adc    BYTE PTR [ecx-0x4d066c78],0xa4
  4272cd:	and    eax,0x625ddfef
  4272d2:	test   BYTE PTR [edi+0x17fc4bf1],ah
  4272d8:	scas   eax,DWORD PTR es:[edi]
  4272d9:	pop    esi
  4272da:	repnz push edi
  4272dc:	jl     0x4272ca
  4272de:	lods   al,BYTE PTR ds:[esi]
  4272df:	mov    ecx,0xc8f649a5
  4272e4:	test   eax,0x9fda179
  4272e9:	sbb    BYTE PTR [edi+0x266ad21],bh
  4272ef:	ss xchg esi,eax
  4272f1:	idiv   DWORD PTR ds:0x2a8b216d
  4272f7:	xrelease mov BYTE PTR [ebx],cl
  4272fa:	dec    ebp
  4272fb:	ror    BYTE PTR [ebx],1
  4272fd:	(bad)  
  4272fe:	cmp    BYTE PTR [ecx-0x1e8d9617],ah
  427304:	adc    al,0xda
  427306:	mov    esi,0x7ccfa852
  42730b:	daa    
  42730c:	rcr    bh,cl
  42730e:	mov    cl,0x6c
  427310:	ss dec edi
  427312:	adc    DWORD PTR [edx-0x288b8939],esi
  427318:	dec    edi
  427319:	(bad)  
  42731a:	rcr    BYTE PTR [esi+0x23],cl
  42731d:	cs pop edi
  42731f:	(bad)  [eax-0x3fe4ed6a]
  427325:	mov    ah,0x7d
  427327:	xlat   BYTE PTR ds:[ebx]
  427328:	rol    eax,1
  42732a:	(bad)  
  42732b:	pop    eax
  42732c:	cmp    ch,BYTE PTR [esi-0xabe2834]
  427332:	pop    ss
  427333:	and    ch,BYTE PTR [edx-0x33]
  427336:	hlt    
  427337:	icebp  
  427338:	mov    BYTE PTR [edx*1-0x1d3a0063],bl
  42733f:	inc    edi
  427340:	mov    eax,ds:0x94f7be78
  427345:	lods   eax,DWORD PTR ds:[si]
  427347:	push   eax
  427348:	add    BYTE PTR [edi],cl
  42734a:	aas    
  42734b:	and    cl,BYTE PTR [eax-0x11c3e675]
  427351:	mov    bl,0xeb
  427353:	mov    ebx,0x605367c9
  427358:	rcr    cl,0x7e
  42735b:	xchg   ebx,eax
  42735c:	xchg   esp,eax
  42735d:	test   bh,0xb6
  427360:	pop    DWORD PTR [esp+ebp*2+0x5d]
  427364:	jae    0x42734d
  427366:	cwde   
  427367:	sub    eax,0xdc56b369
  42736c:	ficomp WORD PTR [edi+0x5588a1e6]
  427372:	mov    al,0x61
  427374:	jecxz  0x42732c
  427376:	mov    dh,0xad
  427378:	call   0xf1b8:0xb193b737
  42737f:	pusha  
  427380:	(bad)  
  427381:	lods   al,BYTE PTR ds:[esi]
  427382:	aas    
  427383:	and    eax,0xcbce6791
  427388:	int3   
  427389:	(bad)  
  42738b:	jmp    0xd525:0x8ab174bc
  427392:	jmp    0x4273b0
  427394:	add    DWORD PTR [ecx],0xaa41d741
  42739a:	test   ebx,eax
  42739c:	adc    BYTE PTR [ebx-0x69775c18],dh
  4273a2:	lods   al,BYTE PTR ds:[esi]
  4273a3:	mov    esp,es
  4273a5:	mov    cs,WORD PTR [ebx]
  4273a7:	mov    DWORD PTR [ebp+0x66],ebp
  4273aa:	popf   
  4273ab:	addr16 mov dl,0xb2
  4273ae:	and    BYTE PTR [esp+edi*4-0x6d],0xb7
  4273b3:	jp     0x42734f
  4273b5:	cmp    bh,BYTE PTR [edx+0x20]
  4273b8:	enter  0x37e0,0xe9
  4273bc:	cwde   
  4273bd:	repz push ds
  4273bf:	xlat   BYTE PTR ds:[ebx]
  4273c0:	fwait
  4273c1:	mov    ah,0x9c
  4273c3:	pop    ebp
  4273c4:	push   0x880b0039
  4273c9:	mov    bl,0x60
  4273cb:	pop    eax
  4273cc:	fld    QWORD PTR [esi+0x60e80f11]
  4273d2:	cmp    ch,dh
  4273d4:	jmp    0xf1a4:0xc126579c
  4273db:	neg    DWORD PTR [ebp+0x7a]
  4273de:	mov    cl,0xa
  4273e0:	(bad)  
  4273e1:	jmp    0xd063:0xc81076a9
  4273e8:	ja     0x42736f
  4273ea:	sbb    eax,DWORD PTR [edi+eax*4+0x52]
  4273ee:	in     al,0x17
  4273f0:	repz jmp FWORD PTR gs:[edx+eax*4+0x58]
  4273f6:	mov    ebp,0xb52dc1ed
  4273fb:	xlat   BYTE PTR ds:[ebx]
  4273fc:	dec    ebp
  4273fd:	cmp    eax,0x3131c6d7
  427402:	add    cl,BYTE PTR [edx+0x304be188]
  427408:	pop    esi
  427409:	bound  ecx,QWORD PTR [ecx-0x2d]
  42740c:	push   edx
  42740d:	addr16 clc 
  42740f:	adc    bh,al
  427411:	inc    esi
  427412:	add    DWORD PTR [edi-0x7a581542],esp
  427418:	jnp    0x427468
  42741a:	mov    edi,0x9d4742fb
  42741f:	mov    edx,0xd7cac3c4
  427424:	enter  0x87aa,0x30
  427428:	pop    eax
  427429:	dec    ebp
  42742a:	rcr    BYTE PTR [edi-0x78],cl
  42742d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42742e:	mov    ah,BYTE PTR [ebx-0x63]
  427431:	or     eax,0x9b565df5
  427436:	stc    
  427437:	leave  
  427438:	ds push cs
  42743a:	mov    eax,ds:0x1a173fd5
  42743f:	inc    eax
  427440:	enter  0xed9b,0x34
  427444:	mov    edi,0xfbed2c25
  427449:	out    0xc9,eax
  42744b:	mov    dl,0xe2
  42744d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42744e:	mov    WORD PTR [edx],ds
  427450:	in     al,dx
  427451:	fs fwait
  427453:	nop
  427454:	xchg   ebp,eax
  427455:	and    al,0x5f
  427457:	loope  0x427489
  427459:	cwde   
  42745a:	rol    DWORD PTR [eax-0x52779176],1
  427460:	jno    0x427487
  427462:	fnstsw WORD PTR ds:[edx]
  427465:	in     al,0x4e
  427467:	out    0x94,eax
  427469:	out    dx,eax
  42746a:	cli    
  42746b:	mov    WORD PTR ds:0x856cf23f,cs
  427471:	mov    WORD PTR [ebp+0x2937e993],?
  427477:	call   0xb34d:0x5be6506
  42747e:	sub    BYTE PTR [esi],dh
  427480:	cmp    al,al
  427482:	sub    esp,DWORD PTR [esi-0x7faed1b5]
  427488:	push   cs
  427489:	addr16 fs ret 0x8b62
  42748e:	daa    
  42748f:	nop
  427490:	repz out 0xb1,al
  427493:	xchg   esi,eax
  427494:	mov    ch,0xa1
  427496:	shl    BYTE PTR [ebp-0x74],1
  427499:	or     al,0x90
  42749b:	(bad)  
  42749c:	outs   dx,BYTE PTR ds:[esi]
  42749d:	adc    eax,0xf437c995
  4274a2:	call   0xb18546d6
  4274a7:	or     eax,0xcc37442e
  4274ac:	push   ss
  4274ad:	lock shl cl,1
  4274b0:	cmp    edx,0x6cd5d76c
  4274b6:	and    DWORD PTR [esi],edi
  4274b8:	xchg   edi,eax
  4274b9:	cmp    dh,BYTE PTR [ecx-0x4cc69937]
  4274bf:	imul   ebp,DWORD PTR [ebx-0x39],0xffffff85
  4274c3:	xlat   BYTE PTR ds:[ebx]
  4274c4:	into   
  4274c5:	cs mov ah,0x8d
  4274c8:	adc    DWORD PTR [edx+ecx*2-0x7b],edi
  4274cc:	mov    BYTE PTR [esi],dl
  4274ce:	fs loope 0x427498
  4274d1:	jmp    0x4179:0x5c083b55
  4274d8:	cmp    al,0xc1
  4274da:	xor    DWORD PTR [esp+edx*8],ecx
  4274dd:	into   
  4274de:	es dec esp
  4274e0:	imul   ebx,DWORD PTR [ebx-0x4f],0x6d171af2
  4274e7:	in     eax,0xc5
  4274e9:	xor    dh,cl
  4274eb:	aam    0xd2
  4274ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274ee:	mov    ds:0x396b3326,eax
  4274f3:	repnz cmp DWORD PTR [bx+di-0x616f],esi
  4274f9:	push   esi
  4274fa:	cmp    ecx,DWORD PTR [edx+0x41]
  4274fd:	jmp    0x427536
  4274ff:	fdivr  DWORD PTR [esi]
  427501:	pop    ds
  427502:	and    al,0xb
  427504:	push   0x326c1b43
  427509:	jecxz  0x4274b8
  42750b:	aas    
  42750c:	aaa    
  42750d:	lock jbe 0x42752a
  427510:	in     eax,0x66
  427512:	sbb    eax,0xd99dff9d
  427518:	int3   
  427519:	jae    0x4274b6
  42751b:	jle    0x427525
  42751d:	pop    ebp
  42751e:	enter  0x28b8,0xc8
  427522:	mov    dl,0x60
  427524:	(bad)  
  427525:	jns    0x4274c3
  427527:	mov    ds:0x687fb752,al
  42752c:	adc    ah,BYTE PTR [edi+0x62]
  42752f:	xchg   edx,eax
  427530:	clc    
  427531:	cmp    DWORD PTR [ebx-0x761e06d1],edx
  427537:	cmp    cl,BYTE PTR [esi+0x7b1550d7]
  42753d:	div    BYTE PTR [edi+0x428319d6]
  427543:	inc    edi
  427544:	fmul   QWORD PTR [eax+0x33]
  427547:	sub    ebx,DWORD PTR [edx-0x76304ecf]
  42754d:	pop    edi
  42754e:	(bad)  
  42754f:	add    ebx,DWORD PTR [eax-0x702831d8]
  427555:	aas    
  427556:	rcl    DWORD PTR [ebx-0x46],cl
  427559:	repz xchg edi,eax
  42755b:	sar    ebp,cl
  42755d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42755e:	mov    cl,0x38
  427560:	mov    ebp,0xdde31afd
  427565:	shr    BYTE PTR [ebx-0x2a858b28],1
  42756b:	sub    ebp,eax
  42756d:	push   es
  42756e:	or     al,BYTE PTR [edi+0x3fbec5bf]
  427574:	fld    DWORD PTR [eax-0x5cdc88a3]
  42757a:	outs   dx,DWORD PTR ds:[esi]
  42757b:	mov    edx,ebp
  42757d:	xchg   edi,eax
  42757e:	adc    eax,0x612f8dd7
  427583:	adc    BYTE PTR [ebx-0x7f],ah
  427586:	xor    dl,BYTE PTR [esi-0x43]
  427589:	mov    dl,0xc0
  42758b:	push   edi
  42758c:	adc    BYTE PTR [eax+0x775e972b],dl
  427592:	fcmovbe st,st(7)
  427594:	cmc    
  427595:	or     eax,0x19ae0fed
  42759a:	mov    al,0x47
  42759c:	mov    BYTE PTR [ebp+0x13],dl
  42759f:	(bad)
  4275a3:	push   ds
  4275a4:	loope  0x427585
  4275a6:	mov    ds:0x7cc0a3d7,al
  4275ab:	in     al,dx
  4275ac:	jecxz  0x427559
  4275ae:	add    eax,0x136a88b9
  4275b3:	ret    0x24e8
  4275b6:	sbb    bh,BYTE PTR [edi+0x478c7a7b]
  4275bc:	add    DWORD PTR [edi-0x45],esp
  4275bf:	loope  0x42763e
  4275c1:	sbb    BYTE PTR [eax],ch
  4275c3:	cwde   
  4275c4:	(bad)  
  4275c5:	fnstenv [ecx-0x47fef88a]
  4275cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275cc:	xchg   ecx,eax
  4275cd:	daa    
  4275ce:	sub    al,0xd7
  4275d0:	xlat   BYTE PTR ds:[ebx]
  4275d1:	inc    ecx
  4275d2:	mov    ds:0xfce0f2da,al
  4275d7:	sar    DWORD PTR [ebp+0x79d71eab],cl
  4275dd:	in     eax,0x2e
  4275df:	or     BYTE PTR [esi-0x41],dl
  4275e2:	push   esp
  4275e3:	fwait
  4275e4:	jmp    0x756435d7
  4275e9:	jle    0x4275bc
  4275eb:	sub    al,0x4a
  4275ed:	fwait
  4275ee:	aas    
  4275ef:	or     cl,BYTE PTR [ebp-0x3e209779]
  4275f5:	out    0x33,eax
  4275f7:	mov    cl,BYTE PTR [edi+0x44d72860]
  4275fd:	shl    BYTE PTR [esi+0x72],1
  427600:	loopne 0x427608
  427602:	cmp    al,ah
  427604:	cmc    
  427605:	jge    0x427595
  427607:	xchg   esi,eax
  427608:	daa    
  427609:	leave  
  42760a:	push   0x52
  42760c:	mov    BYTE PTR [eax+0x45],ah
  42760f:	push   0xd7fffc9b
  427614:	xchg   BYTE PTR [edx+0x699deb4c],dl
  42761a:	shr    BYTE PTR [edi+eax*4-0x41],cl
  42761e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42761f:	mov    al,0xba
  427621:	icebp  
  427622:	jno    0x42769d
  427624:	clc    
  427625:	inc    ecx
  427626:	adc    cl,al
  427628:	(bad)  
  42762a:	stos   DWORD PTR es:[edi],eax
  42762b:	adc    al,0xb6
  42762d:	lods   eax,DWORD PTR ds:[esi]
  42762e:	ins    BYTE PTR es:[edi],dx
  42762f:	loopne 0x427649
  427631:	pop    esi
  427632:	add    BYTE PTR [edx-0x79],dh
  427635:	push   ss
  427636:	jp     0x427682
  427638:	div    BYTE PTR ds:0x664b55a
  42763e:	in     al,0xc8
  427640:	xor    BYTE PTR [ebx+eiz*1],0xd7
  427644:	add    dh,cl
  427646:	cmp    eax,0xb2dba217
  42764b:	adc    eax,0x2a17d5c8
  427650:	add    eax,edi
  427652:	push   ds
  427653:	out    0x61,al
  427655:	addr16 pop ds
  427657:	xor    eax,DWORD PTR [ecx]
  427659:	jmp    0x4276ae
  42765b:	(bad)  
  42765c:	push   eax
  42765d:	imul   ebp,DWORD PTR [ebx+ecx*1-0x70c006d9],0x998ba7f2
  427668:	outs   dx,BYTE PTR ds:[esi]
  427669:	mov    dh,dh
  42766b:	xlat   BYTE PTR ds:[ebx]
  42766c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42766d:	fist   DWORD PTR [ecx+0x47]
  427670:	add    al,0x9f
  427672:	test   DWORD PTR [ebx-0x18],ebx
  427675:	jl     0x4276b8
  427677:	inc    esp
  427678:	push   edi
  427679:	jo     0x4276ea
  42767b:	xlat   BYTE PTR ds:[ebx]
  42767c:	daa    
  42767d:	ins    DWORD PTR es:[edi],dx
  42767e:	dec    esp
  42767f:	loopne 0x42766f
  427681:	loopne 0x42765c
  427683:	dec    edi
  427684:	mov    BYTE PTR [esi],ch
  427686:	sub    al,BYTE PTR ds:0xb4540e8d
  42768c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42768d:	push   0xbee2f93b
  427692:	cli    
  427693:	data16 mov BYTE PTR [ebx-0x31a8b9b0],bl
  42769a:	mov    cl,0x9a
  42769c:	jne    0x4276ae
  42769e:	pop    ds
  42769f:	ins    BYTE PTR es:[edi],dx
  4276a0:	mov    edx,0x28d7cfed
  4276a5:	fisub  WORD PTR [ebx-0x36ec965b]
  4276ab:	cmp    cl,BYTE PTR [eax+0x26d81df]
  4276b1:	jle    0x4276cb
  4276b3:	stos   BYTE PTR es:[edi],al
  4276b4:	data16 (bad) [bp+si+0x1634]
  4276ba:	clc    
  4276bb:	mov    ah,0xaa
  4276bd:	stos   DWORD PTR es:[edi],eax
  4276be:	les    esp,FWORD PTR [edi]
  4276c0:	mov    dh,ch
  4276c2:	sti    
  4276c3:	imul   ebp,DWORD PTR [ebx+0x1cbb5d45],0x75d72687
  4276cd:	clc    
  4276ce:	shr    BYTE PTR [eax+eiz*2],cl
  4276d1:	xchg   ecx,eax
  4276d2:	mov    esi,0xae8a8827
  4276d7:	xchg   esi,eax
  4276d8:	es aaa 
  4276da:	push   ecx
  4276db:	inc    esi
  4276dc:	cmp    DWORD PTR [eax-0x46],ebp
  4276df:	int    0x1e
  4276e1:	clc    
  4276e2:	shl    DWORD PTR [eax],1
  4276e4:	add    esp,DWORD PTR [ebx-0x6e]
  4276e7:	fstp   DWORD PTR [ecx]
  4276e9:	pop    es
  4276ea:	outs   dx,BYTE PTR ds:[esi]
  4276eb:	sbb    DWORD PTR [ebx+0x67],ebp
  4276ee:	sbb    esp,DWORD PTR [eax]
  4276f0:	fisttp WORD PTR [esi-0x5c13bb93]
  4276f6:	retf   0x8854
  4276f9:	lahf   
  4276fa:	adc    eax,0x6560f2c3
  4276ff:	sbb    esi,DWORD PTR [edi]
  427701:	addr16 push cs
  427703:	pop    ebp
  427704:	sub    BYTE PTR ds:0xf2bd7dec,cl
  42770a:	mov    cl,0x35
  42770c:	arpl   si,cx
  42770e:	mov    ds:0x512e6fbf,al
  427713:	fnstcw WORD PTR [esi]
  427715:	mov    BYTE PTR [esi+0x351908ff],bl
  42771b:	jbe    0x427759
  42771d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42771e:	(bad)  
  42771f:	into   
  427720:	leave  
  427721:	loopne 0x427729
  427723:	fdiv   QWORD PTR [esi+0x174261ea]
  427729:	je     0x427743
  42772b:	icebp  
  42772c:	aad    0xc9
  42772e:	scas   eax,DWORD PTR es:[edi]
  42772f:	call   0xc70f483b
  427734:	mov    ebp,0xd3076e35
  427739:	stos   DWORD PTR es:[edi],eax
  42773a:	mov    ch,0xf
  42773c:	call   0x4ffb:0x57aee01
  427743:	inc    esi
  427744:	or     dh,BYTE PTR [edx+0x67204165]
  42774a:	xchg   ecx,eax
  42774b:	clc    
  42774c:	xor    eax,0x807da327
  427751:	dec    esp
  427752:	push   edi
  427753:	inc    edi
  427754:	xchg   ecx,eax
  427755:	jb     0x4277c4
  427757:	adc    eax,0x3e084c86
  42775c:	fwait
  42775d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42775e:	pop    esi
  42775f:	hlt    
  427760:	push   es
  427761:	fs mov esp,0x3cd25110
  427767:	sti    
  427768:	or     ch,bl
  42776a:	call   0xccd5:0xc2928865
  427771:	int3   
  427772:	jne    0x42770b
  427774:	pop    ds
  427775:	addr16 add bl,cl
  427778:	arpl   WORD PTR [eax+0x50],bx
  42777b:	aas    
  42777c:	lods   al,BYTE PTR ds:[esi]
  42777d:	aas    
  42777e:	mov    cl,0x66
  427780:	test   BYTE PTR [edi-0x5e],bh
  427783:	push   0xd777231b
  427788:	call   0xde73c2b7
  42778d:	sbb    edi,DWORD PTR [ebp+0x1376d0c5]
  427793:	xlat   BYTE PTR ds:[ebx]
  427794:	mov    DWORD PTR [ecx-0x6e],eax
  427797:	lods   al,BYTE PTR ds:[esi]
  427798:	cmp    edx,DWORD PTR [ebp+0x7e]
  42779b:	aaa    
  42779c:	dec    esi
  42779d:	ins    BYTE PTR es:[edi],dx
  42779e:	xor    ecx,DWORD PTR [eax-0x1f4efe43]
  4277a4:	push   ecx
  4277a5:	xor    BYTE PTR [esi],ah
  4277a7:	sub    ch,dh
  4277a9:	xchg   esi,eax
  4277aa:	mov    cl,0x92
  4277ac:	hlt    
  4277ad:	fstp   TBYTE PTR [ebp-0x3e2ee347]
  4277b3:	xlat   BYTE PTR ds:[ebx]
  4277b4:	sahf   
  4277b5:	das    
  4277b6:	sub    bh,BYTE PTR [eax-0x39]
  4277b9:	inc    ebp
  4277ba:	and    eax,0xee28879
  4277bf:	sub    eax,0x67befd83
  4277c4:	cmp    al,0x1f
  4277c6:	inc    eax
  4277c7:	xlat   BYTE PTR ds:[ebx]
  4277c8:	out    dx,al
  4277c9:	mov    esi,0xa8cd767d
  4277ce:	pop    ebx
  4277cf:	stc    
  4277d0:	icebp  
  4277d1:	pop    es
  4277d2:	mov    dh,0x38
  4277d4:	inc    ebp
  4277d5:	retf   0x9515
  4277d8:	dec    eax
  4277d9:	push   ss
  4277da:	mov    fs,esp
  4277dc:	imul   BYTE PTR [ecx-0x41]
  4277df:	(bad)  
  4277e0:	in     al,0xc7
  4277e2:	icebp  
  4277e3:	cmp    DWORD PTR [ebx-0x7767c648],edi
  4277e9:	aad    0xf5
  4277eb:	int3   
  4277ec:	addr16 (bad) 
  4277ee:	enter  0xd566,0x67
  4277f2:	mov    ah,0xe1
  4277f4:	hlt    
  4277f5:	mul    BYTE PTR cs:[ecx+0x51b1b1f8]
  4277fc:	je     0x4277a1
  4277fe:	dec    eax
  4277ff:	jle    0x4277f2
  427801:	icebp  
  427802:	or     eax,0xc85210d7
  427807:	int3   
  427808:	add    edi,DWORD PTR [ecx+ebp*2]
  42780b:	pop    es
  42780c:	(bad)  
  42780d:	int    0x13
  42780f:	pop    ebx
  427810:	stos   DWORD PTR es:[edi],eax
  427811:	popa   
  427812:	int3   
  427813:	jo     0x4277e1
  427815:	mov    WORD PTR [ecx+0x30],ax
  427819:	pop    es
  42781a:	nop
  42781b:	push   ds
  42781c:	(bad)  
  42781d:	mov    ebx,0x4387ad10
  427822:	seto   bh
  427825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427826:	pop    edx
  427827:	jmp    0xd309de98
  42782c:	fwait
  42782d:	inc    eax
  42782e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42782f:	mov    cl,dl
  427831:	mov    DWORD PTR [ecx-0x35ad8842],esi
  427837:	dec    ebx
  427838:	cmp    eax,0xaf570467
  42783d:	lahf   
  42783e:	outs   dx,BYTE PTR ds:[esi]
  42783f:	pop    ss
  427840:	add    ecx,DWORD PTR [ebx-0x3a]
  427843:	sahf   
  427844:	mov    BYTE PTR [ebx-0x23],ch
  427847:	xchg   DWORD PTR [edx-0x39],esp
  42784a:	les    ecx,FWORD PTR [eax-0x68]
  42784d:	or     DWORD PTR ds:0x239123d5,0x4a
  427854:	add    bl,cl
  427856:	shl    DWORD PTR [edx+0x8],1
  427859:	mov    bh,0xb1
  42785b:	mov    ecx,0x50ac250b
  427860:	lods   al,BYTE PTR ds:[esi]
  427861:	xchg   esi,eax
  427862:	mov    edi,ss
  427864:	push   edi
  427865:	lock jo 0x42783a
  427868:	sbb    cl,0x8e
  42786b:	mov    ds:0x4cb178f4,eax
  427870:	and    DWORD PTR [eax-0x28894df8],esp
  427876:	or     cl,cl
  427878:	cmc    
  427879:	xchg   esi,eax
  42787a:	retf   0x7c17
  42787d:	call   FWORD PTR ds:0xb117afe3
  427883:	dec    edx
  427884:	jo     0x42783f
  427886:	lods   al,BYTE PTR ds:[esi]
  427887:	push   edx
  427888:	imul   edi,DWORD PTR [esi],0xffffff89
  42788b:	xlat   BYTE PTR ds:[ebx]
  42788c:	enter  0x3f1,0x9e
  427890:	hlt    
  427891:	lock iret 
  427893:	or     BYTE PTR [eax-0xd2bb4fc],cl
  427899:	scas   al,BYTE PTR es:[edi]
  42789a:	scas   al,BYTE PTR es:[edi]
  42789b:	popf   
  42789c:	mov    ebp,0xc44f6967
  4278a1:	and    bl,BYTE PTR [edi-0x77]
  4278a4:	pop    ebx
  4278a5:	add    DWORD PTR [ebp-0x47],ebx
  4278a8:	mov    esi,0x65498d5
  4278ad:	in     al,0x4d
  4278af:	mov    WORD PTR [ebx],gs
  4278b1:	(bad)  
  4278b2:	cdq    
  4278b3:	xor    al,0x57
  4278b5:	inc    ebp
  4278b6:	dec    ebp
  4278b7:	and    al,0xb6
  4278b9:	js     0x4278e4
  4278bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278bc:	and    eax,0x508e4ae7
  4278c1:	sub    ch,ch
  4278c3:	xchg   esi,eax
  4278c4:	mov    BYTE PTR [edi-0x43],bl
  4278c7:	aad    0x8
  4278c9:	and    al,0x20
  4278cb:	pop    ss
  4278cc:	sbb    bh,BYTE PTR [ebx+0x68]
  4278cf:	rcr    DWORD PTR [esi+0x77ea6ce7],0x11
  4278d6:	cld    
  4278d7:	retf   0x8488
  4278da:	fwait
  4278db:	adc    BYTE PTR [esp+ebx*2],al
  4278de:	mov    edi,0x4f6795cc
  4278e3:	sbb    eax,ebx
  4278e5:	xor    esp,DWORD PTR [eax]
  4278e7:	dec    edi
  4278e8:	jb     0x427902
  4278ea:	mov    cl,0xc
  4278ec:	mov    al,ds:0xde91d079
  4278f1:	aaa    
  4278f2:	mov    ds:0x9cba36d7,al
  4278f7:	div    DWORD PTR [esi-0x2e]
  4278fa:	das    
  4278fb:	mov    ds:0xea712388,eax
  427900:	jno    0x4278de
  427902:	lods   eax,DWORD PTR ds:[esi]
  427903:	mov    edx,0x86fe6767
  427908:	(bad)  
  427909:	pop    ds
  42790a:	mov    ds:0x49572d4e,eax
  42790f:	inc    edi
  427910:	test   DWORD PTR [ebx],eax
  427912:	icebp  
  427913:	xchg   DWORD PTR [esi+esi*8],ecx
  427916:	test   eax,0x421d667f
  42791b:	xlat   BYTE PTR ds:[ebx]
  42791c:	pop    eax
  42791d:	cmp    BYTE PTR ds:0xc9935d12,bl
  427923:	jns    0x4278a6
  427925:	imul   esp,ebp,0x9dd0a709
  42792b:	mov    ebx,0xbe4b6692
  427930:	sub    BYTE PTR [ebp+ebp*1+0x6abf96cc],0xdc
  427938:	add    eax,0x6b781547
  42793e:	push   ecx
  42793f:	outs   dx,DWORD PTR ds:[esi]
  427940:	cmp    bh,BYTE PTR [esi-0xb7d10db]
  427946:	push   cs
  427947:	call   0xc36a:0x6b9b8189
  42794e:	adc    ch,BYTE PTR [eax-0x59]
  427951:	cwde   
  427952:	or     DWORD PTR [ebp+0x46b17d16],ecx
  427958:	retf   0x53ab
  42795b:	push   ebx
  42795c:	sub    DWORD PTR [edx+esi*4],0xffffffd7
  427960:	imul   ecx,DWORD PTR [ecx+0x45],0x39b433b
  427967:	dec    edx
  427968:	mov    dh,cl
  42796a:	fdivp  st(7),st
  42796c:	and    al,0xba
  42796e:	inc    edi
  42796f:	js     0x4279ba
  427971:	addr16 (bad) 
  427974:	sub    BYTE PTR [ecx],0x17
  427977:	add    bh,BYTE PTR [ebx-0x226f4e2e]
  42797d:	xchg   edi,eax
  42797e:	cwde   
  42797f:	mov    esp,0x2b0ca99c
  427984:	jb     0x427919
  427986:	sbb    ah,al
  427988:	mov    esp,0x40d710d4
  42798d:	sub    eax,0x71f65ec7
  427992:	jno    0x427937
  427994:	leave  
  427995:	push   edi
  427996:	jns    0x4279c2
  427998:	aaa    
  427999:	pusha  
  42799a:	jl     0x42792d
  42799c:	jns    0x4279c8
  42799e:	mov    BYTE PTR [ebx-0x64],0xe7
  4279a2:	add    BYTE PTR [ecx-0x3c],cl
  4279a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279a6:	ret    
  4279a7:	dec    ebx
  4279a8:	xchg   DWORD PTR [eax-0x62],esp
  4279ab:	add    al,bl
  4279ad:	push   ebx
  4279ae:	adc    ch,ch
  4279b0:	mov    eax,0xd9d70dfa
  4279b5:	hlt    
  4279b6:	push   edi
  4279b7:	jne    0x42795d
  4279b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279ba:	mov    DWORD PTR [ecx-0x461e1379],eax
  4279c0:	dec    esp
  4279c1:	xchg   edx,eax
  4279c2:	nop
  4279c3:	int3   
  4279c4:	ins    DWORD PTR es:[edi],dx
  4279c5:	iret   
  4279c6:	jne    0x427a09
  4279c8:	repnz cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4279cb:	rcr    BYTE PTR [esi+0x45d32fc1],cl
  4279d1:	addr16 popa 
  4279d3:	mov    ecx,0x65b103c8
  4279d8:	icebp  
  4279d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279db:	dec    eax
  4279dc:	push   edi
  4279dd:	mov    eax,ds:0x1bcae858
  4279e2:	xor    DWORD PTR [esp+eiz*4-0x22c4bca8],ebx
  4279e9:	xchg   DWORD PTR [edx+0x6c3aed39],esi
  4279ef:	lods   al,BYTE PTR es:[esi]
  4279f1:	xlat   BYTE PTR ds:[ebx]
  4279f2:	adc    BYTE PTR [ebx-0x27efe3c6],0xd8
  4279f9:	or     ebx,DWORD PTR [ecx+0x54]
  4279fc:	fimul  DWORD PTR [ecx]
  4279fe:	adc    edx,ebp
  427a00:	dec    esp
  427a01:	mov    esi,0x99c8aebe
  427a06:	mov    al,ds:0xfd1a871c
  427a0b:	pop    ecx
  427a0c:	fdivr  QWORD PTR [esp+eiz*2-0x65ba9fa1]
  427a13:	xlat   BYTE PTR ds:[ebx]
  427a14:	lds    esp,FWORD PTR [ebx-0x414f1e7a]
  427a1a:	shl    BYTE PTR [bp+si+0xf],cl
  427a1e:	mov    al,0x7b
  427a20:	ret    0xaaa6
  427a23:	scas   eax,DWORD PTR es:[edi]
  427a24:	xor    eax,0x16e559ca
  427a29:	xchg   ebp,eax
  427a2a:	push   edx
  427a2b:	xlat   BYTE PTR ds:[ebx]
  427a2c:	aad    0xaf
  427a2e:	cmp    ebx,DWORD PTR [edx]
  427a30:	icebp  
  427a31:	jno    0x427a01
  427a33:	push   ebx
  427a34:	mov    DWORD PTR [ebx-0x37],ecx
  427a37:	mov    ah,0x54
  427a39:	xchg   edi,eax
  427a3b:	mov    cl,0xfd
  427a3d:	in     eax,0xe7
  427a3f:	xlat   BYTE PTR ds:[ebx]
  427a40:	pusha  
  427a41:	cmp    al,0xc3
  427a43:	or     al,0x69
  427a45:	jnp    0x427a79
  427a47:	or     BYTE PTR [edx+esi*8-0x4f],ch
  427a4b:	mov    edi,0xe0529e17
  427a50:	cwde   
  427a51:	dec    esi
  427a52:	and    dl,bh
  427a54:	repz and dh,BYTE PTR [edx-0x59a22d6b]
  427a5b:	adc    eax,DWORD PTR [ebp-0x364e158b]
  427a61:	clc    
  427a62:	jp     0x427ad0
  427a64:	mov    WORD PTR [edi+0x67ad198f],?
  427a6a:	cmp    al,dh
  427a6c:	ret    0x8169
  427a6f:	addr16 fcmovne st,st(7)
  427a72:	mov    cl,0x95
  427a74:	jg     0x427a2b
  427a76:	sbb    bh,BYTE PTR [ebp-0x28016a77]
  427a7c:	mov    ds:0x5486bbb6,eax
  427a81:	push   esp
  427a82:	int    0x2d
  427a84:	mov    BYTE PTR [edi],bl
  427a86:	std    
  427a87:	test   ebx,edx
  427a89:	sub    dl,0xed
  427a8c:	dec    edx
  427a8d:	shr    DWORD PTR [bp+0xc70],cl
  427a92:	xchg   ecx,eax
  427a93:	mov    ebp,0x4b8f6ed1
  427a98:	shl    dh,cl
  427a9a:	loopne 0x427a80
  427a9c:	inc    esp
  427a9d:	stos   BYTE PTR es:[edi],al
  427a9e:	cmp    eax,ebx
  427aa0:	inc    ebx
  427aa1:	and    BYTE PTR [ecx-0x66],al
  427aa4:	in     eax,0x99
  427aa6:	addr16 iret 
  427aa8:	inc    esi
  427aa9:	fld    st(5)
  427aab:	add    eax,0x6ab1afa2
  427ab0:	push   esi
  427ab1:	xchg   edx,eax
  427ab2:	ins    DWORD PTR es:[edi],dx
  427ab3:	jecxz  0x427aa6
  427ab5:	pmullw mm2,mm7
  427ab8:	add    al,0x5a
  427aba:	mov    BYTE PTR ds:0x34b939e9,bl
  427ac0:	xchg   ebp,ebp
  427ac2:	xchg   ebx,eax
  427ac3:	(bad)  
  427ac4:	pop    edi
  427ac5:	dec    esi
  427ac6:	js     0x427b24
  427ac8:	or     BYTE PTR [ebp+0xc],bh
  427acb:	iret   
  427acc:	cmp    al,0x9e
  427ace:	fcmovu st,st(6)
  427ad0:	mov    ah,cl
  427ad2:	push   cs
  427ad3:	ins    DWORD PTR es:[edi],dx
  427ad4:	stos   DWORD PTR es:[edi],eax
  427ad5:	pop    edi
  427ad6:	and    DWORD PTR [edx+0x234167ef],ebp
  427adc:	mov    es,WORD PTR [esi]
  427ade:	push   ecx
  427adf:	or     eax,0xc1bfd377
  427ae4:	imul   ebx,DWORD PTR [ebx],0x59
  427ae7:	aaa    
  427ae8:	cmp    ah,BYTE PTR [esi]
  427aea:	repnz add eax,0x3c7967f9
  427af0:	repnz xchg esp,eax
  427af2:	jmp    0x427aef
  427af4:	dec    esp
  427af5:	cmp    esi,DWORD PTR [ecx-0x593c00a6]
  427afb:	outs   dx,DWORD PTR ds:[esi]
  427afc:	fstp   QWORD PTR [esi+0x63ced7a1]
  427b02:	daa    
  427b03:	daa    
  427b04:	sbb    bl,BYTE PTR ds:0xe7802819
  427b0a:	mov    cl,0x4f
  427b0c:	mov    ss,WORD PTR [eax+0x65855d8e]
  427b12:	adc    edi,0xfffffff6
  427b15:	jecxz  0x427b24
  427b17:	cld    
  427b18:	cmc    
  427b19:	out    dx,eax
  427b1a:	call   esi
  427b1c:	loopne 0x427b2a
  427b1e:	and    eax,0x9ded02d7
  427b23:	xor    ch,BYTE PTR [edi+edx*8+0x5b]
  427b27:	xlat   BYTE PTR ds:[ebx]
  427b28:	gs xchg edx,eax
  427b2a:	jnp    0x427b4f
  427b2c:	stc    
  427b2d:	daa    
  427b2e:	lods   eax,DWORD PTR ds:[esi]
  427b2f:	test   BYTE PTR [ecx-0x6be32931],0x99
  427b36:	lds    ecx,FWORD PTR [eax+ecx*2-0x273fcb67]
  427b3d:	pop    esp
  427b3e:	add    edi,eax
  427b40:	or     BYTE PTR [esi-0x1f95b891],bh
  427b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b47:	mov    cl,0x88
  427b49:	push   esi
  427b4a:	call   0xb313:0x8f397778
  427b51:	pop    ds
  427b52:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b54:	retf   0x7e6c
  427b57:	pusha  
  427b58:	push   esp
  427b59:	push   ebp
  427b5a:	(bad)  
  427b5b:	fmul   DWORD PTR [edi+eax*8+0x72]
  427b5f:	cmp    DWORD PTR [eax-0x132804ac],0x12a58889
  427b69:	(bad)  
  427b6a:	jmp    0x427b2b
  427b6c:	mov    BYTE PTR [ebp+0x797d4e9d],bh
  427b72:	lahf   
  427b73:	push   eax
  427b74:	adc    DWORD PTR [edi-0x25],esp
  427b77:	and    BYTE PTR [edx+0x400ef0e],al
  427b7d:	adc    ebp,DWORD PTR [esi+0xbca5011]
  427b83:	jns    0x427b41
  427b85:	and    al,0xb1
  427b87:	jnp    0x427baf
  427b89:	sbb    ecx,DWORD PTR [esi+0x29]
  427b8c:	sbb    DWORD PTR cs:[edi],esp
  427b8f:	xlat   BYTE PTR ds:[ebx]
  427b90:	jecxz  0x427b84
  427b92:	imul   edx,DWORD PTR [edx],0xda827796
  427b98:	mov    BYTE PTR [ebp-0x47],dl
  427b9b:	es jno 0x427b39
  427b9e:	xor    DWORD PTR [ecx+edi*2-0x21282c77],ebp
  427ba5:	jb     0x427bcc
  427ba7:	popf   
  427ba8:	dec    ebp
  427ba9:	into   
  427baa:	pop    esp
  427bab:	xchg   edx,eax
  427bac:	xchg   BYTE PTR [edx-0x610e2297],bh
  427bb2:	jbe    0x427b6b
  427bb4:	sahf   
  427bb5:	push   ecx
  427bb6:	xchg   ecx,eax
  427bb7:	xlat   BYTE PTR ds:[ebx]
  427bb8:	dec    esp
  427bb9:	mul    ah
  427bbb:	cmp    eax,0xedc8efd
  427bc0:	mov    bl,BYTE PTR [ebp-0x78921057]
  427bc6:	sub    eax,0x6df449f
  427bcb:	shl    BYTE PTR [esi-0x8f922e1],1
  427bd1:	aaa    
  427bd2:	xchg   edi,eax
  427bd3:	lods   al,BYTE PTR ds:[esi]
  427bd4:	in     al,0xf
  427bd6:	mov    cl,0x9d
  427bd8:	pop    ds
  427bd9:	ins    BYTE PTR es:[edi],dx
  427bda:	jb     0x427c0a
  427bdc:	fnsave [ecx+edx*2-0x52]
  427be0:	mov    al,ds:0xacb60a67
  427be5:	mov    esi,0xc333eedc
  427bea:	mov    cl,0xf
  427bec:	std    
  427bed:	lock test DWORD PTR [eax],esp
  427bf0:	push   ds
  427bf1:	(bad)  
  427bf3:	xlat   BYTE PTR ds:[ebx]
  427bf4:	sub    BYTE PTR [ecx],ah
  427bf6:	ss nop
  427bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bf9:	push   edi
  427bfa:	inc    ebp
  427bfb:	in     eax,dx
  427bfc:	mov    al,bl
  427bfe:	jne    0x427beb
  427c00:	push   esi
  427c01:	push   esp
  427c02:	nop
  427c03:	ret    0x9d97
  427c06:	inc    edx
  427c07:	mov    al,ds:0x498767e5
  427c0c:	daa    
  427c0d:	imul   ebx,DWORD PTR [ecx],0xffffffa5
  427c10:	push   edx
  427c11:	jno    0x427b9d
  427c13:	mov    edx,0xa07fe70d
  427c18:	test   al,0x35
  427c1a:	xor    al,0xd5
  427c1c:	mov    al,0x67
  427c1e:	je     0x427bb9
  427c20:	and    eax,0xbc0f1c40
  427c25:	or     ecx,edi
  427c27:	ds jns 0x427c91
  427c2a:	popf   
  427c2b:	push   es
  427c2c:	aam    0x34
  427c2e:	and    eax,0x5b858aaf
  427c33:	xlat   BYTE PTR ds:[ebx]
  427c34:	popa   
  427c35:	data16 sbb bh,ah
  427c38:	xchg   ebx,eax
  427c39:	and    BYTE PTR [esi],0x87
  427c3c:	imul   dl
  427c3e:	mov    cl,0x2c
  427c40:	and    dl,BYTE PTR ds:0xe7dd6c84
  427c46:	loop   0x427c26
  427c48:	push   0xffffffcb
  427c4a:	shl    BYTE PTR [edx],cl
  427c4c:	or     BYTE PTR [ecx+edi*8],ch
  427c4f:	sar    DWORD PTR [edx-0x12],0xb1
  427c53:	cli    
  427c54:	loop   0x427c50
  427c56:	mov    edx,es
  427c58:	xchg   esi,eax
  427c59:	pop    ds
  427c5a:	mov    dl,0xd7
  427c5c:	push   cs
  427c5d:	lock cli 
  427c5f:	pop    eax
  427c60:	gs xchg edi,eax
  427c62:	mov    ebx,edx
  427c64:	test   DWORD PTR [esi-0x78],edx
  427c67:	sti    
  427c68:	shr    DWORD PTR [eax+0x58],0x5f
  427c6c:	jne    0x427c24
  427c6e:	jl     0x427c47
  427c70:	stc    
  427c71:	mov    eax,ds:0xd026b8b0
  427c76:	xchg   ebp,eax
  427c77:	add    ecx,DWORD PTR [ecx-0x48cd363a]
  427c7d:	add    al,0xb8
  427c7f:	aad    0x6a
  427c81:	out    dx,eax
  427c82:	scas   al,BYTE PTR es:[edi]
  427c83:	inc    ebx
  427c84:	imul   esp,DWORD PTR [edi-0x53],0x79
  427c88:	ss push ebx
  427c8a:	mov    edx,0xe94e0b6a
  427c8f:	lods   al,BYTE PTR ds:[esi]
  427c90:	pop    eax
  427c91:	addr16 dec ebx
  427c93:	mov    BYTE PTR [ebx+0x49debc4c],ah
  427c99:	addr16 das 
  427c9b:	mov    bl,0x9e
  427c9d:	(bad)  
  427c9e:	nop
  427c9f:	jnp    0x427c72
  427ca1:	mov    edx,0xc26848b1
  427ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ca7:	cdq    
  427ca8:	sbb    eax,0x95ca5b3a
  427cad:	push   edx
  427cae:	not    DWORD PTR [edi]
  427cb0:	dec    edi
  427cb1:	scas   eax,DWORD PTR es:[edi]
  427cb2:	into   
  427cb3:	mov    ebp,0x5aea7c9
  427cb8:	out    dx,eax
  427cb9:	mov    ecx,0xa488f1a3
  427cbe:	fisubr WORD PTR [edi]
  427cc0:	jg     0x427c68
  427cc2:	enter  0x3ad7,0x57
  427cc6:	scas   al,BYTE PTR es:[edi]
  427cc7:	lock xchg dh,bh
  427cca:	imul   esi,DWORD PTR [ebx],0x13a1db88
  427cd0:	sar    bh,cl
  427cd2:	or     ch,ah
  427cd4:	adc    edx,edi
  427cd6:	or     BYTE PTR [ebx+0x18c6ac0],0x2c
  427cdd:	int3   
  427cde:	sbb    eax,ecx
  427ce0:	or     DWORD PTR [edi],esp
  427ce2:	stos   BYTE PTR es:[edi],al
  427ce3:	out    0x7f,eax
  427ce5:	sub    eax,0x48fc624a
  427cea:	dec    ebx
  427ceb:	mov    ds:0x14365f88,eax
  427cf0:	bndstx [edx+0x71],(bad)
  427cf4:	les    esi,FWORD PTR [ecx+eiz*1-0x7a]
  427cf8:	or     esp,DWORD PTR [edi-0x2c]
  427cfb:	mov    bh,0xda
  427cfd:	jp     0x427d23
  427cff:	jb     0x427cbe
  427d01:	pop    ebx
  427d02:	push   cs
  427d03:	sub    eax,0xf9c09d85
  427d08:	cmp    al,0xcc
  427d0a:	xchg   edx,eax
  427d0b:	pcmpgtb mm6,QWORD PTR [edi-0x59]
  427d0f:	xlat   BYTE PTR ds:[ebx]
  427d10:	jnp    0x427cca
  427d12:	cmp    dh,dl
  427d14:	rcr    BYTE PTR [edi],cl
  427d16:	cs clc 
  427d18:	mov    BYTE PTR [ebx],ch
  427d1a:	je     0x427cc9
  427d1c:	mov    dh,0xfb
  427d1e:	pop    edi
  427d1f:	push   esi
  427d20:	xchg   ebp,eax
  427d21:	xchg   DWORD PTR [di],eax
  427d24:	or     ah,bl
  427d26:	cmp    bl,0x3d
  427d29:	and    al,0xb1
  427d2b:	test   ebp,edx
  427d2d:	imul   ebx,DWORD PTR [esi+edi*2-0xd],0x1c
  427d32:	mov    edi,edx
  427d34:	inc    esp
  427d35:	pop    ds
  427d36:	xlat   BYTE PTR ds:[ebx]
  427d37:	mov    ecx,0xee5147e0
  427d3c:	mov    ah,cl
  427d3e:	ror    DWORD PTR [ecx+0x6b],1
  427d41:	sti    
  427d42:	push   ebx
  427d43:	inc    dh
  427d45:	addr16 xor cl,BYTE PTR [si-0x4112]
  427d4b:	xor    DWORD PTR [edx],ecx
  427d4d:	imul   esi,DWORD PTR [ecx+0x637a903c],0xa924838b
  427d57:	aam    0x5e
  427d59:	adc    DWORD PTR [esi+eax*1],esp
  427d5c:	mov    ecx,0x502f3a4a
  427d61:	rcr    BYTE PTR [ecx],1
  427d63:	mov    ah,0xa0
  427d65:	inc    ecx
  427d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d67:	in     eax,dx
  427d68:	cmp    BYTE PTR [ebp-0x18],dh
  427d6b:	pop    DWORD PTR [edx]
  427d6d:	dec    eax
  427d6e:	(bad)  
  427d6f:	imul   ecx,DWORD PTR [eax+0x4bff3042],0x6
  427d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d77:	mov    bh,0xc0
  427d79:	fdivr  QWORD PTR [ecx]
  427d7b:	and    eax,DWORD PTR [edx-0x5db01b62]
  427d81:	(bad)  
  427d82:	jmp    0x6db3995e
  427d87:	jo     0x427d21
  427d89:	mov    bh,0x73
  427d8b:	push   ds
  427d8c:	pushf  
  427d8d:	jmp    0xb4aa:0x2f48d82b
  427d94:	mov    cl,BYTE PTR [ecx]
  427d96:	adc    edi,edx
  427d98:	push   ss
  427d99:	aaa    
  427d9a:	and    eax,0x70e84252
  427d9f:	mov    edi,ebx
  427da1:	in     al,dx
  427da2:	lods   al,BYTE PTR ds:[esi]
  427da3:	ror    DWORD PTR [edi+0x34b5f055],0x33
  427daa:	loope  0x427d46
  427dac:	add    DWORD PTR [ecx+0x6e],edx
  427daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427db0:	sbb    esp,DWORD PTR [edi-0x7e]
  427db3:	pop    es
  427db4:	mov    edx,0xdac1b1d2
  427db9:	es fwait
  427dbb:	scas   al,BYTE PTR es:[edi]
  427dbc:	int3   
  427dbd:	jae    0x427d59
  427dbf:	(bad)  
  427dc0:	or     eax,0xe210a6f
  427dc5:	xchg   ebp,eax
  427dc6:	and    BYTE PTR [ebx],dl
  427dc8:	(bad)  
  427dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dcb:	add    al,0xba
  427dcd:	adc    al,0xb2
  427dcf:	retf   0x9287
  427dd2:	cli    
  427dd3:	push   edi
  427dd4:	push   edx
  427dd5:	inc    edi
  427dd6:	mov    dl,bh
  427dd8:	data16 repnz sahf 
  427ddb:	or     eax,0x8bc349a6
  427de0:	mov    BYTE PTR [esi+0x5a],bl
  427de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427de4:	sbb    ebp,DWORD PTR [edx+0x6742016a]
  427dea:	push   eax
  427deb:	loopne 0x427e1a
  427ded:	mov    dl,BYTE PTR [ebx]
  427def:	out    0x96,eax
  427df1:	ret    
  427df2:	mov    cl,0x97
  427df4:	pop    esi
  427df5:	push   ds
  427df6:	out    0x4d,al
  427df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427df9:	sub    ch,dl
  427dfb:	aam    0x80
  427dfd:	inc    eax
  427dfe:	loopne 0x427e06
  427e00:	mov    esp,0x5d9d5819
  427e05:	xchg   edi,eax
  427e06:	pop    eax
  427e07:	mov    cl,0x88
  427e09:	stos   DWORD PTR es:[edi],eax
  427e0a:	jo     0x427da4
  427e0c:	fstp   st(2)
  427e0e:	test   DWORD PTR [esp],edx
  427e11:	addr16 fwait
  427e13:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e15:	test   DWORD PTR [ebx-0x4ea76359],esi
  427e1b:	fdivrp st(2),st
  427e1d:	and    bh,BYTE PTR [ebx]
  427e1f:	adc    dh,BYTE PTR [esi-0x41]
  427e22:	or     bh,dl
  427e24:	cs in  al,dx
  427e26:	imul   ecx,DWORD PTR [esp+edi*2+0x66220012],0x9
  427e2e:	mov    cl,0xf9
  427e30:	or     al,0x7a
  427e32:	pop    es
  427e33:	mov    bh,0xc2
  427e35:	pusha  
  427e36:	inc    edi
  427e37:	xlat   BYTE PTR ds:[ebx]
  427e38:	push   ds
  427e39:	test   DWORD PTR es:[eax-0x6a],ebx
  427e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e3e:	dec    edx
  427e3f:	iret   
  427e40:	sbb    DWORD PTR [ebx+0x54a99d40],0xffffffad
  427e47:	adc    eax,0xac5c9848
  427e4c:	in     eax,0x83
  427e4e:	loope  0x427e27
  427e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e51:	mov    esp,0x88c3e3a6
  427e56:	fsub   QWORD PTR [ecx-0x78]
  427e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e5a:	lods   al,BYTE PTR ds:[esi]
  427e5b:	hlt    
  427e5c:	xchg   ebx,eax
  427e5d:	ret    
  427e5e:	sub    BYTE PTR [edx-0x45],bl
  427e61:	addr16 test ah,ah
  427e64:	xchg   BYTE PTR [esi],dh
  427e66:	popa   
  427e67:	cmp    al,0x8f
  427e69:	xor    DWORD PTR [ecx+0x7b0baf4f],0xf3a2322b
  427e73:	xlat   BYTE PTR ds:[ebx]
  427e74:	mov    eax,esi
  427e76:	dec    esp
  427e77:	loopne 0x427e2d
  427e79:	jecxz  0x427e54
  427e7b:	(bad)  
  427e7c:	mov    esi,0xf2d7f13c
  427e81:	jle    0x427e18
  427e83:	pop    eax
  427e84:	aam    0x46
  427e86:	in     eax,dx
  427e87:	xlat   BYTE PTR ds:[ebx]
  427e88:	jp     0x427efa
  427e8a:	ror    DWORD PTR [eax+0x1939ac38],0x86
  427e91:	stc    
  427e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e93:	adc    DWORD PTR [edi-0x5a68a13e],0x46a71126
  427e9d:	scas   eax,DWORD PTR es:[di]
  427e9f:	(bad)  
  427ea0:	shr    BYTE PTR [edx],1
  427ea2:	pop    ecx
  427ea3:	xchg   esp,eax
  427ea4:	mov    esp,0x88795ba2
  427ea9:	dec    ebp
  427eaa:	or     ch,bl
  427eac:	mov    edi,esi
  427eae:	push   ebp
  427eaf:	push   esp
  427eb0:	push   esi
  427eb1:	addr16 mov dh,dh
  427eb4:	enter  0xe5f0,0xa9
  427eb8:	ret    0xb07a
  427ebb:	rcl    BYTE PTR [ebp-0x3399e24c],1
  427ec1:	in     eax,0x81
  427ec3:	test   DWORD PTR [ebx+0xd0f4667],esi
  427ec9:	imul   DWORD PTR [edx+0x7]
  427ecc:	(bad)  
  427ecd:	daa    
  427ece:	mov    cl,0xf0
  427ed0:	and    eax,0xd70b9c16
  427ed5:	loopne 0x427e83
  427ed7:	in     al,dx
  427ed8:	fcmovne st,st(0)
  427eda:	xor    DWORD PTR [edi-0x5d],ebx
  427edd:	test   al,0x2e
  427edf:	xchg   ebp,eax
  427ee0:	push   edi
  427ee1:	shl    BYTE PTR [ecx+0x6561dcaa],cl
  427ee7:	sbb    al,0x8
  427ee9:	xor    dh,ah
  427eeb:	xlat   BYTE PTR ds:[ebx]
  427eec:	out    0xec,eax
  427eee:	lds    esp,FWORD PTR [edx-0x151e2129]
  427ef4:	mov    BYTE PTR [esi+0x4d7e0753],bl
  427efa:	in     eax,dx
  427efb:	sbb    eax,0x39d52cb2
  427f00:	mov    BYTE PTR [edi-0x7f],ch
  427f03:	mov    ebp,0xe9aff6fa
  427f08:	xor    cl,BYTE PTR [eax]
  427f0a:	xor    DWORD PTR [edi-0x80],ecx
  427f0d:	jae    0x427ed4
  427f0f:	dec    ch
  427f11:	shl    DWORD PTR [ecx+0x288a0f85],0x12
  427f18:	push   ds
  427f19:	repz (bad) 
  427f1c:	repnz dec ebx
  427f1e:	mov    eax,ds:0xb7b5283b
  427f23:	icebp  
  427f24:	mov    bh,ch
  427f26:	sub    DWORD PTR [edx+0xb22474d],ecx
  427f2c:	pop    ecx
  427f2d:	jns    0x427f89
  427f2f:	hlt    
  427f30:	push   es
  427f31:	cmc    
  427f32:	dec    ebx
  427f33:	xlat   BYTE PTR ds:[ebx]
  427f34:	add    DWORD PTR [edi+edx*2],ebx
  427f37:	or     DWORD PTR [edi+ebp*4-0x4f],0x3aa2427
  427f3f:	or     edi,DWORD PTR [edi+0x74d77195]
  427f45:	and    BYTE PTR [eax*4+0x5f5a7a40],dh
  427f4c:	xchg   DWORD PTR [edi+0x7],ebx
  427f4f:	out    0x71,eax
  427f51:	jo     0x427f55
  427f53:	retf   
  427f54:	call   0xc9168322
  427f59:	cmp    dl,bh
  427f5b:	int    0x23
  427f5d:	jae    0x427f99
  427f5f:	cmp    ebp,DWORD PTR [eax]
  427f61:	sbb    al,0xf6
  427f63:	(bad)
  427f67:	dec    ebx
  427f68:	stos   DWORD PTR es:[edi],eax
  427f69:	shl    DWORD PTR [edx],1
  427f6b:	dec    edx
  427f6c:	into   
  427f6d:	pop    ss
  427f6e:	push   ebp
  427f6f:	xlat   BYTE PTR ds:[ebx]
  427f70:	ret    0x39c6
  427f73:	mov    dh,0xa4
  427f75:	ficom  DWORD PTR ds:0xd17677f
  427f7b:	sub    eax,0x50794289
  427f80:	in     eax,0x47
  427f82:	icebp  
  427f83:	ins    BYTE PTR es:[edi],dx
  427f84:	mov    edx,0x3fd78dee
  427f89:	dec    ebx
  427f8a:	push   edi
  427f8b:	push   edx
  427f8c:	sbb    BYTE PTR [esi-0x34],ah
  427f8f:	mov    ss:0x8810d383,al
  427f95:	push   ds
  427f96:	add    ebp,DWORD PTR [ebx+0x16]
  427f99:	(bad)  
  427f9b:	xlat   BYTE PTR ds:[ebx]
  427f9c:	pushf  
  427f9d:	add    BYTE PTR [eax],ch
  427f9f:	jle    0x427f6f
  427fa1:	xor    eax,0xeb28f107
  427fa6:	data16 add al,0x88
  427fa9:	in     eax,dx
  427faa:	retf   0x6133
  427fad:	cmp    DWORD PTR [edx+0x3c],edi
  427fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fb1:	fs clc 
  427fb3:	cmp    DWORD PTR [ebx],edx
  427fb5:	arpl   WORD PTR [eax+eiz*1+0x19],dx
  427fb9:	div    DWORD PTR [esi-0x53]
  427fbc:	fisub  WORD PTR [esi]
  427fbe:	mov    cl,0xd1
  427fc0:	gs inc esp
  427fc2:	in     al,0x85
  427fc4:	add    eax,0x5fd7bd4c
  427fc9:	shr    BYTE PTR [ebx],cl
  427fcb:	add    eax,0x2027faaf
  427fd0:	mov    DWORD PTR [ecx-0x660eb929],eax
  427fd6:	xor    BYTE PTR [edx],dh
  427fd8:	in     al,dx
  427fd9:	repz pop ebx
  427fdb:	mov    ds:0xd738c168,eax
  427fe0:	and    BYTE PTR [ecx-0x5dbb7d99],bh
  427fe6:	scas   eax,DWORD PTR es:[edi]
  427fe7:	and    BYTE PTR [eax+0x110f3dad],cl
  427fed:	xor    al,0xd4
  427fef:	fnstcw WORD PTR [eax+0x67]
  427ff2:	xrelease mov DWORD PTR ds:[eax+eiz*2+0x6a],esi
  427ff8:	inc    esi
  427ff9:	retf   0x79b1
  427ffc:	mov    ?,WORD PTR [eax+0x385c8d61]
  428002:	jg     0x427fdb
  428004:	xor    BYTE PTR [esi+0x5aef746e],bl
  42800a:	call   0xfcf8:0xc1027476
  428011:	jb     0x427fe0
  428013:	adc    eax,0x37b7ec88
  428018:	fdiv   st,st(1)
  42801a:	mov    ebp,0x8c67b7a9
  42801f:	js     0x42809e
  428021:	cmp    bl,dl
  428023:	lahf   
  428024:	inc    eax
  428025:	pop    ecx
  428026:	int    0x34
  428028:	mov    BYTE PTR [ecx-0x70],ch
  42802b:	dec    ebp
  42802c:	cwde   
  42802d:	ror    BYTE PTR ds:[eax+edx*1+0x7a],0x69
  428033:	pop    ss
  428034:	mov    eax,0xc787e2e0
  428039:	mov    bh,0x40
  42803b:	mov    edi,0xc0bfd7ec
  428040:	xchg   edi,eax
  428041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428042:	push   esp
  428043:	ja     0x428017
  428045:	imul   ebp,DWORD PTR [esi],0xffffffaa
  428048:	je     0x427fd7
  42804a:	pop    esp
  42804b:	mov    eax,ds:0xbd056754
  428050:	fdivr  DWORD PTR [ebp+0x7b]
  428053:	out    dx,eax
  428054:	mov    ebp,0x157fb1bb
  428059:	ja     0x428025
  42805b:	jmp    0x7efa:0xd0cd44b9
  428062:	push   0xffffff8f
  428064:	sbb    BYTE PTR [edi],dl
  428066:	sbb    al,cl
  428068:	jge    0x42802e
  42806a:	mov    cl,0xd2
  42806c:	sahf   
  42806d:	mov    ebx,esi
  42806f:	adc    DWORD PTR [ebx],ebx
  428071:	in     eax,dx
  428072:	ret    
  428073:	xlat   BYTE PTR ds:[ebx]
  428074:	xchg   esi,eax
  428075:	or     DWORD PTR [edx],esi
  428077:	fidiv  WORD PTR [edi]
  428079:	imul   eax,DWORD PTR [edi-0x13],0xffffff88
  42807d:	jo     0x4280c7
  42807f:	imul   BYTE PTR [eax+0x41cacbe1]
  428085:	les    ebx,FWORD PTR ds:0xc34d
  42808a:	ins    BYTE PTR es:[edi],dx
  42808b:	daa    
  42808c:	xchg   edx,eax
  42808d:	xor    dh,BYTE PTR [ecx-0x162cc0f9]
  428093:	inc    edx
  428094:	rcr    DWORD PTR [ebp-0x285917e2],1
  42809a:	mov    dl,0x89
  42809c:	mov    al,0xa4
  42809e:	(bad)  
  42809f:	jne    0x428021
  4280a1:	mov    cl,0x12
  4280a3:	xchg   ebp,eax
  4280a4:	mov    BYTE PTR [ebp+0x6c06050],al
  4280aa:	fwait
  4280ab:	enter  0x58bc,0x7b
  4280af:	push   0xd2367fd
  4280b4:	mov    DWORD PTR [ebx-0x9],esi
  4280b7:	nop
  4280b8:	jg     0x4280d4
  4280ba:	mov    cl,0xcd
  4280bc:	sbb    eax,0xd79c6114
  4280c1:	js     0x428141
  4280c3:	(bad)  
  4280c4:	or     eax,0xbb02bcad
  4280c9:	mov    eax,ds:0x2e5db755
  4280ce:	mov    dl,0xa6
  4280d0:	jmp    0xffd146a2
  4280d5:	xlat   BYTE PTR ds:[ebx]
  4280d6:	and    BYTE PTR [edi+0x203467cd],0x80
  4280dd:	stc    
  4280de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280df:	clc    
  4280e0:	repnz mov cl,0xb1
  4280e3:	inc    esp
  4280e4:	inc    edx
  4280e5:	or     al,BYTE PTR [edx+0x4b]
  4280e8:	push   esp
  4280e9:	mov    al,0xa3
  4280eb:	xlat   BYTE PTR ds:[ebx]
  4280ec:	mov    dl,0xc9
  4280ef:	pop    ebx
  4280f0:	jns    0x4280f1
  4280f2:	xchg   ebx,eax
  4280f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280f4:	push   ebp
  4280f5:	mov    ebp,esp
  4280f7:	sub    esp,0x48
  4280fa:	mov    edx,0x36
  4280ff:	add    edx,edx
  428101:	mov    ecx,edx
  428103:	add    ecx,ecx
  428105:	mov    DWORD PTR [ebp-0x18],ecx
  428108:	push   ebx
  428109:	sub    DWORD PTR [ebp-0x18],ecx
  42810c:	push   esi
  42810d:	add    DWORD PTR [ebp-0x18],ecx
  428110:	push   edi
  428111:	add    DWORD PTR [ebp-0x18],ecx
  428114:	sub    DWORD PTR [ebp-0x18],ecx
  428117:	sub    edx,ecx
  428119:	mov    ecx,DWORD PTR [ebp-0x18]
  42811c:	mov    esi,0xb30d
  428121:	sub    edx,esi
  428123:	sub    ecx,esi
  428125:	sub    ecx,esi
  428127:	sub    ecx,edx
  428129:	and    ecx,edx
  42812b:	sub    DWORD PTR [ebp-0x18],ecx
  42812e:	and    edx,ecx
  428130:	mov    esi,edx
  428132:	mov    ecx,DWORD PTR [ebp-0x18]
  428135:	sub    esi,edx
  428137:	cmp    ecx,edx
  428139:	je     0x428366
  42813f:	add    esi,ecx
  428141:	cmp    esi,0x4dbe
  428147:	je     0x428366
  42814d:	xor    eax,eax
  42814f:	sub    eax,esi
  428151:	add    eax,esi
  428153:	add    eax,esi
  428155:	cmp    eax,ecx
  428157:	jne    0x428366
  42815d:	mov    esi,DWORD PTR [ebp-0x18]
  428160:	mov    ebx,DWORD PTR [ebp-0x18]
  428163:	xor    DWORD PTR [ebp-0x18],ebx
  428166:	or     DWORD PTR [ebp-0x18],esi
  428169:	add    eax,edx
  42816b:	or     eax,ebx
  42816d:	or     eax,ecx
  42816f:	cmp    eax,0xbba3
  428174:	jne    0x428366
  42817a:	cmp    eax,0xc20050d0
  42817f:	je     0x428366
  428185:	cmp    eax,DWORD PTR [ebp-0x4]
  428188:	jne    0x428366
  42818e:	mov    edx,ecx
  428190:	mov    ecx,DWORD PTR [ebp-0x18]
  428193:	sub    DWORD PTR [ebp-0x18],edx
  428196:	test   eax,0x47
  42819b:	je     0x428366
  4281a1:	mov    ebx,DWORD PTR [ebp-0x18]
  4281a4:	mov    edi,DWORD PTR [ebp-0x18]
  4281a7:	add    DWORD PTR [ebp-0x18],ecx
  4281aa:	xor    DWORD PTR [ebp-0x18],edi
  4281ad:	cmp    esi,edi
  4281af:	jne    0x428366
  4281b5:	add    ebx,ecx
  4281b7:	add    DWORD PTR [ebp-0x18],ebx
  4281ba:	cmp    eax,0x19b6
  4281bf:	jne    0x428366
  4281c5:	sub    eax,ecx
  4281c7:	xor    ecx,ecx
  4281c9:	cmp    eax,DWORD PTR [ebp-0x48]
  4281cc:	je     0x428366
  4281d2:	mov    ebx,DWORD PTR [ebp-0x18]
  4281d5:	add    ebx,esi
  4281d7:	cmp    ebx,0xffffffb9
  4281da:	jne    0x428366
  4281e0:	mov    esi,DWORD PTR [ebp-0x18]
  4281e3:	cmp    ebx,0xffffff9d
  4281e6:	jne    0x428366
  4281ec:	mov    edx,ebx
  4281ee:	cmp    ebx,edi
  4281f0:	je     0x428366
  4281f6:	xor    ebx,ebx
  4281f8:	cmp    esi,DWORD PTR [ebp-0x4]
  4281fb:	je     0x428366
  428201:	cmp    edx,DWORD PTR [ebp-0x8]
  428204:	jne    0x428366
  42820a:	sub    DWORD PTR [ebp-0x18],edx
  42820d:	add    DWORD PTR [ebp-0x18],ebx
  428210:	cmp    esi,DWORD PTR [ebp-0xc]
  428213:	jne    0x428366
  428219:	cmp    edi,0xb728
  42821f:	jne    0x428366
  428225:	mov    edx,DWORD PTR [ebp-0x18]
  428228:	mov    DWORD PTR [ebp-0x18],edx
  42822b:	and    eax,ecx
  42822d:	test   esi,0x90
  428233:	je     0x428366
  428239:	mov    edx,0xf8
  42823e:	test   edi,0x6607
  428244:	jne    0x428366
  42824a:	mov    ebx,DWORD PTR [ebp-0x18]
  42824d:	cmp    eax,0xcde1
  428252:	je     0x428366
  428258:	and    edx,ecx
  42825a:	mov    edi,DWORD PTR [ebp-0x18]
  42825d:	sub    esi,ebx
  42825f:	mov    DWORD PTR [ebp-0x18],eax
  428262:	mov    eax,DWORD PTR [ebp-0x18]
  428265:	cmp    esi,0x1c
  428268:	je     0x428366
  42826e:	cmp    esi,edi
  428270:	je     0x428366
  428276:	cmp    edi,0x870c
  42827c:	jne    0x428366
  428282:	mov    ecx,0x43
  428287:	and    ecx,edi
  428289:	mov    edi,0x97
  42828e:	add    edi,edi
  428290:	add    DWORD PTR [ebp-0x18],edx
  428293:	sub    DWORD PTR [ebp-0x18],ecx
  428296:	mov    DWORD PTR [ebp-0x18],eax
  428299:	sub    edi,eax
  42829b:	sub    DWORD PTR [ebp-0x18],edi
  42829e:	cmp    esi,edx
  4282a0:	jne    0x428366
  4282a6:	mov    ebx,DWORD PTR [ebp-0x18]
  4282a9:	sub    DWORD PTR [ebp-0x18],ebx
  4282ac:	mov    edi,DWORD PTR [ebp-0x18]
  4282af:	test   ecx,0x10
  4282b5:	je     0x428366
  4282bb:	xor    DWORD PTR [ebp-0x18],ebx
  4282be:	cmp    esi,0xffffffff
  4282c1:	je     0x428366
  4282c7:	mov    eax,ecx
  4282c9:	add    DWORD PTR [ebp-0x18],ebx
  4282cc:	mov    ebx,edi
  4282ce:	add    eax,edx
  4282d0:	cmp    esi,0xffffff8a
  4282d3:	jne    0x428366
  4282d9:	add    DWORD PTR [ebp-0x18],ecx
  4282dc:	mov    ecx,0x4f
  4282e1:	xor    DWORD PTR [ebp-0x18],ecx
  4282e4:	mov    ecx,DWORD PTR [ebp-0x18]
  4282e7:	add    DWORD PTR [ebp-0x18],eax
  4282ea:	add    DWORD PTR [ebp-0x18],edi
  4282ed:	add    ebx,edx
  4282ef:	add    ecx,edi
  4282f1:	sub    ecx,eax
  4282f3:	sub    DWORD PTR [ebp-0x18],ecx
  4282f6:	and    esi,eax
  4282f8:	add    DWORD PTR [ebp-0x18],ecx
  4282fb:	cmp    eax,0xffffff94
  4282fe:	je     0x428366
  428300:	mov    edx,DWORD PTR [ebp-0x18]
  428303:	add    ebx,edx
  428305:	mov    eax,0xd945
  42830a:	or     DWORD PTR [ebp-0x18],esi
  42830d:	sub    DWORD PTR [ebp-0x18],ebx
  428310:	sub    ecx,ebx
  428312:	or     DWORD PTR [ebp-0x18],eax
  428315:	and    ecx,edx
  428317:	and    DWORD PTR [ebp-0x18],edi
  42831a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42831d:	jne    0x428366
  42831f:	mov    eax,0x72
  428324:	cmp    ecx,0x720a
  42832a:	je     0x428366
  42832c:	cmp    ecx,0x6f
  42832f:	jne    0x428366
  428331:	mov    edx,0x4f7b
  428336:	sub    edx,edi
  428338:	cmp    edx,0x1
  42833b:	je     0x428366
  42833d:	mov    edi,DWORD PTR [ebp-0x18]
  428340:	sub    edi,eax
  428342:	xor    esi,esi
  428344:	sub    ecx,edx
  428346:	add    DWORD PTR [ebp-0x18],edi
  428349:	add    DWORD PTR [ebp-0x18],edi
  42834c:	or     ecx,eax
  42834e:	add    DWORD PTR [ebp-0x18],ecx
  428351:	mov    DWORD PTR [ebp-0x34],ebx
  428354:	add    esi,eax
  428356:	sub    eax,esi
  428358:	add    eax,esi
  42835a:	xor    DWORD PTR [ebp-0x34],edi
  42835d:	or     eax,edi
  42835f:	or     eax,esi
  428361:	add    eax,ecx
  428363:	sub    DWORD PTR [ebp-0x34],eax
  428366:	mov    eax,DWORD PTR [ebp-0x18]
  428369:	mov    edx,DWORD PTR [ebp-0x18]
  42836c:	add    DWORD PTR [ebp-0x18],esi
  42836f:	cmp    eax,0xffffffd8
  428372:	je     0x428463
  428378:	cmp    eax,ecx
  42837a:	je     0x428463
  428380:	mov    ebx,DWORD PTR [ebp-0x18]
  428383:	cmp    edx,ecx
  428385:	jne    0x428463
  42838b:	sub    eax,esi
  42838d:	mov    edi,DWORD PTR [ebp-0x18]
  428390:	cmp    edi,0xe216
  428396:	jne    0x428463
  42839c:	mov    esi,DWORD PTR [ebp-0x18]
  42839f:	mov    ecx,0xe0
  4283a4:	add    eax,eax
  4283a6:	test   edx,0x7f
  4283ac:	jne    0x428463
  4283b2:	sub    DWORD PTR [ebp-0x18],eax
  4283b5:	mov    ecx,DWORD PTR [ebp-0x18]
  4283b8:	cmp    esi,0xffffffab
  4283bb:	jne    0x428463
  4283c1:	mov    eax,esi
  4283c3:	mov    esi,DWORD PTR [ebp-0x18]
  4283c6:	sub    ecx,edi
  4283c8:	or     ebx,eax
  4283ca:	cmp    esi,0x5
  4283cd:	je     0x428463
  4283d3:	sub    DWORD PTR [ebp-0x18],ecx
  4283d6:	cmp    eax,0xffffffd0
  4283d9:	jne    0x428463
  4283df:	mov    edi,DWORD PTR [ebp-0x18]
  4283e2:	cmp    edi,0x58
  4283e5:	jne    0x428463
  4283e7:	xor    eax,eax
  4283e9:	cmp    edx,0xffffffd1
  4283ec:	je     0x428463
  4283ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4283f1:	add    edx,esi
  4283f3:	sub    DWORD PTR [ebp-0x18],edx
  4283f6:	add    DWORD PTR [ebp-0x18],ecx
  4283f9:	cmp    edi,0xfffffff7
  4283fc:	jne    0x428463
  4283fe:	mov    esi,DWORD PTR [ebp-0x18]
  428401:	mov    edx,DWORD PTR [ebp-0x18]
  428404:	test   edx,0xce79
  42840a:	je     0x428463
  42840c:	mov    ecx,0xec
  428411:	mov    DWORD PTR [ebp-0x18],ebx
  428414:	add    esi,esi
  428416:	add    DWORD PTR [ebp-0x18],eax
  428419:	and    ecx,eax
  42841b:	cmp    edx,DWORD PTR [ebp-0x1c]
  42841e:	jne    0x428463
  428420:	mov    ebx,DWORD PTR [ebp-0x18]
  428423:	add    DWORD PTR [ebp-0x18],edx
  428426:	mov    eax,edi
  428428:	cmp    eax,0x24314184
  42842d:	je     0x428463
  42842f:	cmp    esi,0xba66
  428435:	jne    0x428463
  428437:	cmp    ebx,0xffffff8c
  42843a:	je     0x428463
  42843c:	add    eax,eax
  42843e:	mov    edi,0x50
  428443:	add    DWORD PTR [ebp-0x18],edx
  428446:	or     DWORD PTR [ebp-0x18],edi
  428449:	mov    edx,DWORD PTR [ebp-0x18]
  42844c:	cmp    eax,0x7a
  42844f:	jne    0x428463
  428451:	sub    DWORD PTR [ebp-0x18],edx
  428454:	xor    edi,edi
  428456:	mov    ecx,ebx
  428458:	mov    DWORD PTR [ebp-0x24],eax
  42845b:	and    DWORD PTR [ebp-0x24],ecx
  42845e:	sub    esi,edi
  428460:	add    DWORD PTR [ebp-0x24],esi
  428463:	mov    ecx,ebx
  428465:	mov    eax,0x16
  42846a:	sub    DWORD PTR [ebp-0x18],ecx
  42846d:	and    DWORD PTR [ebp-0x18],eax
  428470:	mov    esi,DWORD PTR [ebp-0x18]
  428473:	cmp    esi,edx
  428475:	jne    0x42857e
  42847b:	cmp    esi,0x61
  42847e:	je     0x42857e
  428484:	cmp    esi,eax
  428486:	je     0x42857e
  42848c:	cmp    esi,0xffffffb0
  42848f:	jne    0x42857e
  428495:	add    esi,edi
  428497:	mov    edi,DWORD PTR [ebp-0x18]
  42849a:	or     DWORD PTR [ebp-0x18],edi
  42849d:	or     DWORD PTR [ebp-0x18],ebx
  4284a0:	mov    eax,DWORD PTR [ebp-0x18]
  4284a3:	cmp    esi,edi
  4284a5:	je     0x42857e
  4284ab:	cmp    edi,0xffffffea
  4284ae:	je     0x42857e
  4284b4:	sub    esi,ecx
  4284b6:	add    DWORD PTR [ebp-0x18],edx
  4284b9:	mov    ebx,DWORD PTR [ebp-0x18]
  4284bc:	mov    edi,0xe514
  4284c1:	cmp    esi,DWORD PTR [ebp-0xc]
  4284c4:	jne    0x42857e
  4284ca:	cmp    ebx,DWORD PTR [ebp-0x38]
  4284cd:	je     0x42857e
  4284d3:	mov    ecx,0x34d2
  4284d8:	test   ebx,0x71
  4284de:	je     0x4284f5
  4284e0:	sub    eax,esi
  4284e2:	cmp    ebx,DWORD PTR [ebp-0x48]
  4284e5:	je     0x4284f5
  4284e7:	mov    edx,0x11bd
  4284ec:	sub    DWORD PTR [ebp-0x18],ebx
  4284ef:	add    DWORD PTR [ebp-0x18],edx
  4284f2:	mov    DWORD PTR [ebp-0x18],eax
  4284f5:	mov    edx,DWORD PTR [ebp-0x18]
  4284f8:	add    DWORD PTR [ebp-0x18],edx
  4284fb:	mov    DWORD PTR [ebp-0x18],eax
  4284fe:	sub    edi,ebx
  428500:	and    edi,eax
  428502:	test   edi,0x65
  428508:	jne    0x42857e
  42850a:	xor    esi,esi
  42850c:	xor    eax,eax
  42850e:	and    DWORD PTR [ebp-0x18],eax
  428511:	or     DWORD PTR [ebp-0x18],ebx
  428514:	sub    DWORD PTR [ebp-0x18],edx
  428517:	sub    DWORD PTR [ebp-0x18],eax
  42851a:	add    DWORD PTR [ebp-0x18],ecx
  42851d:	cmp    edi,eax
  42851f:	je     0x42857e
  428521:	xor    edx,edx
  428523:	sub    DWORD PTR [ebp-0x18],edi
  428526:	add    esi,edi
  428528:	mov    edi,DWORD PTR [ebp-0x18]
  42852b:	add    edi,esi
  42852d:	cmp    edi,0xffffffc6
  428530:	je     0x42857e
  428532:	mov    ecx,ebx
  428534:	mov    eax,DWORD PTR [ebp-0x18]
  428537:	sub    edx,esi
  428539:	and    DWORD PTR [ebp-0x18],ecx
  42853c:	xor    DWORD PTR [ebp-0x18],edi
  42853f:	cmp    edx,ecx
  428541:	je     0x42857e
  428543:	cmp    eax,0xffffff87
  428546:	jne    0x42857e
  428548:	mov    edi,0x5f02
  42854d:	sub    edi,edx
  42854f:	mov    ecx,DWORD PTR [ebp-0x18]
  428552:	sub    DWORD PTR [ebp-0x18],eax
  428555:	cmp    edi,edx
  428557:	je     0x42857e
  428559:	mov    eax,DWORD PTR [ebp-0x18]
  42855c:	mov    edx,DWORD PTR [ebp-0x18]
  42855f:	sub    eax,edx
  428561:	add    edi,ecx
  428563:	sub    eax,ecx
  428565:	add    eax,esi
  428567:	sub    DWORD PTR [ebp-0x18],eax
  42856a:	cmp    edi,esi
  42856c:	je     0x42857e
  42856e:	mov    esi,DWORD PTR [ebp-0x18]
  428571:	xor    edx,edx
  428573:	add    edi,edx
  428575:	sub    DWORD PTR [ebp-0x18],edi
  428578:	mov    DWORD PTR [ebp-0x18],edi
  42857b:	sub    DWORD PTR [ebp-0x18],esi
  42857e:	mov    edx,DWORD PTR [ebp-0x18]
  428581:	mov    DWORD PTR [ebp-0x18],edx
  428584:	sub    DWORD PTR [ebp-0x18],esi
  428587:	mov    esi,ecx
  428589:	sub    esi,eax
  42858b:	test   esi,0x77
  428591:	je     0x428672
  428597:	and    esi,edx
  428599:	mov    edi,DWORD PTR [ebp-0x18]
  42859c:	and    edi,edx
  42859e:	cmp    edi,DWORD PTR [ebp-0x18]
  4285a1:	jne    0x428672
  4285a7:	mov    ecx,0x6e
  4285ac:	cmp    esi,DWORD PTR [ebp-0x18]
  4285af:	jne    0x428672
  4285b5:	mov    ebx,0x22
  4285ba:	sub    DWORD PTR [ebp-0x18],edi
  4285bd:	mov    ebx,DWORD PTR [ebp-0x18]
  4285c0:	add    DWORD PTR [ebp-0x18],ebx
  4285c3:	sub    ecx,eax
  4285c5:	sub    DWORD PTR [ebp-0x18],esi
  4285c8:	cmp    ecx,DWORD PTR [ebp-0xc]
  4285cb:	je     0x428672
  4285d1:	mov    edi,DWORD PTR [ebp-0x18]
  4285d4:	and    edi,esi
  4285d6:	mov    ebx,DWORD PTR [ebp-0x18]
  4285d9:	sub    ebx,ecx
  4285db:	cmp    edx,DWORD PTR [ebp-0x34]
  4285de:	jne    0x428672
  4285e4:	and    ebx,edx
  4285e6:	mov    eax,DWORD PTR [ebp-0x18]
  4285e9:	sub    eax,ebx
  4285eb:	add    eax,eax
  4285ed:	test   edi,0xe7
  4285f3:	je     0x428672
  4285f5:	sub    edi,edx
  4285f7:	mov    ebx,DWORD PTR [ebp-0x18]
  4285fa:	mov    edx,DWORD PTR [ebp-0x18]
  4285fd:	cmp    ebx,0xffffff9b
  428600:	je     0x428672
  428602:	add    eax,edx
  428604:	mov    ecx,0x56
  428609:	mov    edx,DWORD PTR [ebp-0x18]
  42860c:	sub    DWORD PTR [ebp-0x18],ebx
  42860f:	add    ecx,ebx
  428611:	test   edi,0x28a1a19
  428617:	je     0x428672
  428619:	or     DWORD PTR [ebp-0x18],ecx
  42861c:	sub    DWORD PTR [ebp-0x18],eax
  42861f:	cmp    edi,0xa650
  428625:	je     0x428672
  428627:	test   ebx,0x4c
  42862d:	je     0x428672
  42862f:	mov    ebx,0x85
  428634:	sub    DWORD PTR [ebp-0x18],edx
  428637:	mov    eax,DWORD PTR [ebp-0x18]
  42863a:	add    ebx,ecx
  42863c:	sub    DWORD PTR [ebp-0x18],ebx
  42863f:	cmp    edx,0x51
  428642:	je     0x428672
  428644:	mov    ebx,DWORD PTR [ebp-0x18]
  428647:	or     eax,edi
  428649:	mov    esi,0xdd
  42864e:	cmp    ebx,DWORD PTR [ebp-0x40]
  428651:	jne    0x428672
  428653:	cmp    ebx,DWORD PTR [ebp-0x4]
  428656:	je     0x428672
  428658:	mov    edi,0x69e9103
  42865d:	mov    esi,ebx
  42865f:	add    esi,esi
  428661:	sub    DWORD PTR [ebp-0x18],eax
  428664:	cmp    esi,0xa1ed
  42866a:	jne    0x428672
  42866c:	add    DWORD PTR [ebp-0x18],edi
  42866f:	mov    DWORD PTR [ebp-0x18],esi
  428672:	mov    ebx,DWORD PTR [ebp-0x18]
  428675:	add    ebx,ecx
  428677:	mov    eax,esi
  428679:	cmp    esi,edi
  42867b:	jne    0x4286af
  42867d:	cmp    esi,0xffffffc2
  428680:	je     0x4286af
  428682:	mov    esi,ecx
  428684:	xor    ecx,ecx
  428686:	sub    DWORD PTR [ebp-0x18],esi
  428689:	cmp    ebx,edi
  42868b:	jne    0x4286af
  42868d:	xor    edi,edi
  42868f:	cmp    eax,0xffffffc1
  428692:	jne    0x4286af
  428694:	and    DWORD PTR [ebp-0x18],ecx
  428697:	add    DWORD PTR [ebp-0x18],edi
  42869a:	add    DWORD PTR [ebp-0x18],ebx
  42869d:	cmp    eax,DWORD PTR [ebp-0x44]
  4286a0:	jne    0x4286af
  4286a2:	cmp    eax,ebx
  4286a4:	jne    0x4286af
  4286a6:	mov    edi,DWORD PTR [ebp-0x18]
  4286a9:	sub    DWORD PTR [ebp-0x18],eax
  4286ac:	sub    DWORD PTR [ebp-0x18],edi
  4286af:	sub    DWORD PTR [ebp-0x18],eax
  4286b2:	mov    edi,DWORD PTR [ebp-0x18]
  4286b5:	xor    DWORD PTR [ebp-0x18],edi
  4286b8:	mov    esi,DWORD PTR [ebp-0x18]
  4286bb:	add    esi,esi
  4286bd:	xor    ebx,ebx
  4286bf:	add    DWORD PTR [ebp-0x18],ebx
  4286c2:	add    esi,ecx
  4286c4:	add    esi,edx
  4286c6:	cmp    edx,0x15
  4286c9:	je     0x4286ce
  4286cb:	sub    DWORD PTR [ebp-0x18],esi
  4286ce:	xor    esi,esi
  4286d0:	cmp    eax,0x5a
  4286d3:	je     0x4286e2
  4286d5:	mov    edx,DWORD PTR [ebp-0x18]
  4286d8:	sub    edx,edi
  4286da:	or     DWORD PTR [ebp-0x18],edx
  4286dd:	and    esi,ebx
  4286df:	sub    DWORD PTR [ebp-0x18],esi
  4286e2:	add    ebx,edi
  4286e4:	xor    edi,edi
  4286e6:	mov    edx,DWORD PTR [ebp-0x18]
  4286e9:	sub    ebx,esi
  4286eb:	cmp    edx,DWORD PTR [ebp-0x48]
  4286ee:	je     0x42878a
  4286f4:	sub    DWORD PTR [ebp-0x18],edx
  4286f7:	cmp    ebx,edi
  4286f9:	jne    0x42878a
  4286ff:	sub    ebx,edi
  428701:	mov    edi,DWORD PTR [ebp-0x18]
  428704:	add    edi,esi
  428706:	xor    esi,esi
  428708:	and    ebx,ecx
  42870a:	cmp    ebx,0xffffff8b
  42870d:	jne    0x42878a
  42870f:	mov    ecx,DWORD PTR [ebp-0x18]
  428712:	mov    eax,DWORD PTR ds:0x453088
  428718:	and    DWORD PTR [ebp-0x18],ebx
  42871b:	sub    DWORD PTR [ebp-0x18],eax
  42871e:	or     ecx,ebx
  428720:	cmp    edi,DWORD PTR ds:0x453088
  428726:	je     0x42878a
  428728:	cmp    ecx,DWORD PTR [ebp-0x4]
  42872b:	jne    0x42878a
  42872d:	add    DWORD PTR [ebp-0x18],edi
  428730:	add    ecx,edi
  428732:	mov    edx,DWORD PTR ds:0x453088
  428738:	mov    eax,DWORD PTR [ebp-0x18]
  42873b:	cmp    eax,DWORD PTR [ebp-0x34]
  42873e:	jne    0x42878a
  428740:	xor    DWORD PTR [ebp-0x18],edx
  428743:	mov    edx,DWORD PTR [ebp-0x18]
  428746:	mov    ebx,0xc610800a
  42874b:	cmp    edx,DWORD PTR [ebp-0xc]
  42874e:	jne    0x42878a
  428750:	add    esi,edx
  428752:	and    ebx,edx
  428754:	mov    edi,DWORD PTR [ebp-0x18]
  428757:	cmp    eax,0xc71b
  42875c:	je     0x42878a
  42875e:	cmp    eax,0x29
  428761:	je     0x42878a
  428763:	mov    DWORD PTR [ebp-0x18],ebx
  428766:	mov    edx,0xa557
  42876b:	add    esi,edx
  42876d:	mov    ebx,DWORD PTR [ebp-0x18]
  428770:	add    edi,edi
  428772:	sub    DWORD PTR [ebp-0x18],edi
  428775:	sub    DWORD PTR [ebp-0x18],ebx
  428778:	add    DWORD PTR [ebp-0x18],ebx
  42877b:	cmp    eax,0x161d
  428780:	jne    0x42878a
  428782:	add    esi,ecx
  428784:	add    DWORD PTR [ebp-0x18],eax
  428787:	or     DWORD PTR [ebp-0x18],esi
  42878a:	sub    DWORD PTR [ebp-0x18],edi
  42878d:	mov    ecx,DWORD PTR [ebp-0x18]
  428790:	mov    esi,DWORD PTR [ebp-0x18]
  428793:	add    DWORD PTR [ebp-0x18],ecx
  428796:	and    DWORD PTR [ebp-0x18],ebx
  428799:	test   esi,0x3d
  42879f:	je     0x428826
  4287a5:	mov    edi,DWORD PTR [ebp-0x18]
  4287a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4287ab:	add    DWORD PTR [ebp-0x18],ecx
  4287ae:	cmp    esi,0x5c0e0c03
  4287b4:	jne    0x428826
  4287b6:	add    edi,edi
  4287b8:	mov    edx,DWORD PTR [ebp-0x18]
  4287bb:	add    edx,ebx
  4287bd:	cmp    edx,DWORD PTR ds:0x453088
  4287c3:	jne    0x428826
  4287c5:	and    esi,edx
  4287c7:	test   edi,0x5
  4287cd:	jne    0x428826
  4287cf:	mov    eax,DWORD PTR ds:0x453058
  4287d5:	cmp    edi,ebx
  4287d7:	je     0x428826
  4287d9:	mov    DWORD PTR [ebp-0x18],edi
  4287dc:	cmp    esi,0xffffffc1
  4287df:	jne    0x428826
  4287e1:	add    DWORD PTR [ebp-0x18],eax
  4287e4:	add    esi,ebx
  4287e6:	add    esi,ecx
  4287e8:	cmp    esi,DWORD PTR [ebp-0x44]
  4287eb:	je     0x428826
  4287ed:	mov    ecx,DWORD PTR [ebp-0x18]
  4287f0:	sub    esi,eax
  4287f2:	cmp    ecx,DWORD PTR [ebp-0x8]
  4287f5:	jne    0x428826
  4287f7:	sub    esi,ecx
  4287f9:	mov    edi,DWORD PTR [ebp-0x18]
  4287fc:	mov    edx,DWORD PTR ds:0x453068
  428802:	and    esi,eax
  428804:	add    DWORD PTR [ebp-0x18],edi
  428807:	sub    edx,ebx
  428809:	sub    DWORD PTR [ebp-0x18],esi
  42880c:	sub    edx,eax
  42880e:	add    edx,eax
  428810:	or     edx,esi
  428812:	sub    edx,eax
  428814:	add    edx,ecx
  428816:	add    edx,ecx
  428818:	add    edx,edi
  42881a:	sub    edx,ecx
  42881c:	cmp    edx,0x3f
  42881f:	je     0x428826
  428821:	and    edx,ebx
  428823:	sub    DWORD PTR [ebp-0x18],edx
  428826:	cmp    ecx,esi
  428828:	jne    0x428854
  42882a:	mov    ebx,DWORD PTR [ebp-0x18]
  42882d:	mov    edx,DWORD PTR ds:0x453088
  428833:	add    edx,esi
  428835:	and    DWORD PTR [ebp-0x18],ebx
  428838:	cmp    edx,0xfffffff0
  42883b:	je     0x428854
  42883d:	mov    eax,DWORD PTR [ebp-0x18]
  428840:	sub    DWORD PTR [ebp-0x18],eax
  428843:	mov    esi,DWORD PTR [ebp-0x18]
  428846:	add    DWORD PTR [ebp-0x18],edx
  428849:	test   esi,0xe5
  42884f:	je     0x428854
  428851:	sub    DWORD PTR [ebp-0x18],esi
  428854:	and    edx,edi
  428856:	and    edx,ecx
  428858:	mov    DWORD PTR [ebp-0x2c],edx
  42885b:	sub    eax,esi
  42885d:	mov    ecx,DWORD PTR [ebp-0x18]
  428860:	add    DWORD PTR [ebp-0x18],ecx
  428863:	sub    eax,ebx
  428865:	add    DWORD PTR [ebp-0x18],eax
  428868:	cmp    edx,DWORD PTR ds:0x453088
  42886e:	jne    0x428981
  428874:	mov    eax,DWORD PTR ds:0x453070
  42887a:	sub    eax,ecx
  42887c:	mov    edx,DWORD PTR [ebp-0x18]
  42887f:	sub    DWORD PTR [ebp-0x2c],eax
  428882:	cmp    edx,0x26
  428885:	jne    0x428981
  42888b:	mov    edi,0xef
  428890:	mov    esi,DWORD PTR [ebp-0x2c]
  428893:	add    DWORD PTR [ebp-0x2c],edi
  428896:	xor    DWORD PTR [ebp-0x2c],eax
  428899:	cmp    edx,0xae534e85
  42889f:	je     0x428981
  4288a5:	and    DWORD PTR [ebp-0x18],esi
  4288a8:	and    edx,esi
  4288aa:	mov    eax,DWORD PTR [ebp-0x18]
  4288ad:	mov    ebx,DWORD PTR ds:0x453088
  4288b3:	cmp    eax,ebx
  4288b5:	je     0x428981
  4288bb:	cmp    esi,DWORD PTR [ebp-0x24]
  4288be:	je     0x428981
  4288c4:	and    edx,esi
  4288c6:	sub    edx,ecx
  4288c8:	mov    edi,DWORD PTR ds:0x45306c
  4288ce:	add    DWORD PTR [ebp-0x18],esi
  4288d1:	mov    esi,ebx
  4288d3:	cmp    eax,0x59
  4288d6:	je     0x428981
  4288dc:	add    edi,esi
  4288de:	mov    ecx,DWORD PTR ds:0x45306c
  4288e4:	cmp    edx,DWORD PTR ds:0x453088
  4288ea:	je     0x428981
  4288f0:	add    ecx,ebx
  4288f2:	add    DWORD PTR [ebp-0x2c],edx
  4288f5:	mov    edx,0x46
  4288fa:	add    eax,edx
  4288fc:	mov    ebx,DWORD PTR [ebp-0x18]
  4288ff:	sub    DWORD PTR [ebp-0x18],eax
  428902:	cmp    ebx,DWORD PTR ds:0x453058
  428908:	je     0x428981
  42890a:	mov    esi,DWORD PTR [ebp-0x18]
  42890d:	sub    edi,edx
  42890f:	or     DWORD PTR [ebp-0x18],edx
  428912:	mov    eax,DWORD PTR [ebp-0x2c]
  428915:	sub    DWORD PTR [ebp-0x18],ebx
  428918:	cmp    eax,DWORD PTR ds:0x45306c
  42891e:	jne    0x428981
  428920:	mov    ebx,DWORD PTR [ebp-0x2c]
  428923:	mov    edx,DWORD PTR [ebp-0x2c]
  428926:	add    esi,edi
  428928:	test   edx,0xcf09
  42892e:	jne    0x428981
  428930:	xor    DWORD PTR [ebp-0x18],ecx
  428933:	mov    edi,DWORD PTR [ebp-0x18]
  428936:	mov    ecx,DWORD PTR [ebp-0x18]
  428939:	sub    ebx,edx
  42893b:	cmp    edi,DWORD PTR [ebp-0x8]
  42893e:	jne    0x428981
  428940:	mov    edx,0x361ae480
  428945:	sub    eax,ebx
  428947:	sub    DWORD PTR [ebp-0x18],edx
  42894a:	sub    ecx,eax
  42894c:	sub    ecx,esi
  42894e:	test   ecx,0x6f
  428954:	jne    0x428981
  428956:	xor    ebx,ebx
  428958:	xor    esi,esi
  42895a:	add    DWORD PTR [ebp-0x2c],ebx
  42895d:	sub    DWORD PTR [ebp-0x18],edi
  428960:	sub    DWORD PTR [ebp-0x18],edi
  428963:	add    DWORD PTR [ebp-0x18],esi
  428966:	cmp    ecx,DWORD PTR ds:0x453088
  42896c:	je     0x428981
  42896e:	mov    edx,DWORD PTR ds:0x453088
  428974:	sub    DWORD PTR [ebp-0x2c],ecx
  428977:	mov    eax,ebx
  428979:	sub    edx,ebx
  42897b:	add    DWORD PTR [ebp-0x2c],edx
  42897e:	or     DWORD PTR [ebp-0x18],eax
  428981:	push   0x4e
  428983:	push   0x0
  428985:	call   DWORD PTR ds:0x451f20
  42898b:	mov    ecx,0x82cb
  428990:	and    ecx,ebx
  428992:	mov    edx,edi
  428994:	add    edx,edi
  428996:	add    DWORD PTR [ebp-0x2c],edx
  428999:	sub    DWORD PTR [ebp-0x18],ecx
  42899c:	mov    DWORD PTR [ebp-0x38],eax
  42899f:	or     DWORD PTR [ebp-0x2c],edi
  4289a2:	call   DWORD PTR ds:0x451f08
  4289a8:	cmp    eax,edi
  4289aa:	je     0x4289af
  4289ac:	add    DWORD PTR [ebp-0x18],eax
  4289af:	mov    DWORD PTR [ebp-0x44],eax
  4289b2:	and    edi,ebx
  4289b4:	mov    DWORD PTR [ebp-0x2c],edi
  4289b7:	push   0x4e4e714f
  4289bc:	call   DWORD PTR ds:0x451f4c
  4289c2:	and    edi,esi
  4289c4:	add    edi,ebx
  4289c6:	mov    DWORD PTR [ebp-0x2c],edi
  4289c9:	call   DWORD PTR ds:0x451eec
  4289cf:	sub    DWORD PTR [ebp-0x2c],eax
  4289d2:	cmp    eax,DWORD PTR [ebp-0x44]
  4289d5:	je     0x428cc0
  4289db:	mov    ecx,DWORD PTR ds:0x45306c
  4289e1:	mov    edx,DWORD PTR [ebp-0x2c]
  4289e4:	add    ecx,eax
  4289e6:	mov    DWORD PTR [ebp-0x2c],edx
  4289e9:	add    DWORD PTR [ebp-0x18],ecx
  4289ec:	mov    edx,0xc3e1
  4289f1:	add    DWORD PTR [ebp-0x2c],edi
  4289f4:	sub    eax,ebx
  4289f6:	and    eax,ebx
  4289f8:	sub    DWORD PTR [ebp-0x18],edx
  4289fb:	sub    eax,esi
  4289fd:	test   eax,0x61
  428a02:	jne    0x428a97
  428a08:	test   eax,0x2d
  428a0d:	jne    0x428a97
  428a13:	mov    edi,DWORD PTR [ebp-0x18]
  428a16:	mov    ebx,DWORD PTR [ebp-0x2c]
  428a19:	sub    DWORD PTR [ebp-0x18],eax
  428a1c:	cmp    edi,0x1d0f
  428a22:	je     0x428a97
  428a24:	cmp    ebx,edx
  428a26:	je     0x428a97
  428a28:	mov    ecx,DWORD PTR [ebp-0x2c]
  428a2b:	mov    eax,DWORD PTR [ebp-0x18]
  428a2e:	add    DWORD PTR [ebp-0x2c],ecx
  428a31:	cmp    ebx,DWORD PTR ds:0x45306c
  428a37:	je     0x428a97
  428a39:	test   ebx,0x80
  428a3f:	je     0x428a97
  428a41:	cmp    edi,0x63
  428a44:	jne    0x428a97
  428a46:	sub    DWORD PTR [ebp-0x2c],ecx
  428a49:	xor    esi,esi
  428a4b:	mov    ecx,DWORD PTR [ebp-0x2c]
  428a4e:	sub    DWORD PTR [ebp-0x2c],esi
  428a51:	add    DWORD PTR [ebp-0x2c],edi
  428a54:	cmp    edi,edx
  428a56:	je     0x428a97
  428a58:	mov    edi,0x5d
  428a5d:	add    ecx,ebx
  428a5f:	add    DWORD PTR [ebp-0x18],edi
  428a62:	mov    esi,DWORD PTR [ebp-0x18]
  428a65:	sub    esi,ecx
  428a67:	add    esi,edx
  428a69:	cmp    eax,ebx
  428a6b:	jne    0x428a97
  428a6d:	and    DWORD PTR [ebp-0x18],edx
  428a70:	mov    edi,DWORD PTR [ebp-0x18]
  428a73:	mov    ebx,esi
  428a75:	cmp    eax,0x4a
  428a78:	jne    0x428a97
  428a7a:	cmp    eax,DWORD PTR [ebp-0x1c]
  428a7d:	jne    0x428a97
  428a7f:	add    DWORD PTR [ebp-0x2c],ebx
  428a82:	add    eax,ebx
  428a84:	mov    ebx,0xff
  428a89:	mov    esi,DWORD PTR [ebp-0x2c]
  428a8c:	or     DWORD PTR [ebp-0x18],ebx
  428a8f:	xor    DWORD PTR [ebp-0x2c],eax
  428a92:	add    edi,esi
  428a94:	add    DWORD PTR [ebp-0x2c],edi
  428a97:	mov    eax,0xc3
  428a9c:	or     ecx,eax
  428a9e:	cmp    ecx,0xffffff94
  428aa1:	je     0x428bc0
  428aa7:	mov    esi,DWORD PTR [ebp-0x18]
  428aaa:	cmp    esi,eax
  428aac:	jne    0x428bc0
  428ab2:	test   edi,0xe4
  428ab8:	jne    0x428bc0
  428abe:	cmp    ecx,edx
  428ac0:	jne    0x428bc0
  428ac6:	add    esi,eax
  428ac8:	xor    ebx,ebx
  428aca:	add    esi,esi
  428acc:	mov    edi,0xbc22
  428ad1:	sub    esi,ecx
  428ad3:	cmp    esi,DWORD PTR [ebp-0x2c]
  428ad6:	jne    0x428bc0
  428adc:	mov    ecx,DWORD PTR [ebp-0x18]
  428adf:	sub    ebx,esi
  428ae1:	mov    esi,0xd8b9
  428ae6:	sub    DWORD PTR [ebp-0x2c],ebx
  428ae9:	sub    ecx,ebx
  428aeb:	sub    DWORD PTR [ebp-0x18],esi
  428aee:	sub    edi,edx
  428af0:	add    ecx,eax
  428af2:	cmp    ecx,esi
  428af4:	je     0x428bc0
  428afa:	cmp    ebx,0xac00
  428b00:	je     0x428bc0
  428b06:	mov    ebx,0xef
  428b0b:	sub    DWORD PTR [ebp-0x2c],edi
  428b0e:	mov    edi,eax
  428b10:	add    DWORD PTR [ebp-0x18],edi
  428b13:	and    ebx,ecx
  428b15:	cmp    ebx,0x5d36
  428b1b:	jne    0x428bc0
  428b21:	or     ebx,eax
  428b23:	xor    ecx,ecx
  428b25:	xor    esi,esi
  428b27:	add    DWORD PTR [ebp-0x18],edx
  428b2a:	sub    DWORD PTR [ebp-0x2c],esi
  428b2d:	or     DWORD PTR [ebp-0x18],ebx
  428b30:	sub    ecx,ebx
  428b32:	sub    ecx,esi
  428b34:	sub    ecx,ebx
  428b36:	sub    ecx,edi
  428b38:	cmp    ecx,edx
  428b3a:	jne    0x428bc0
  428b40:	mov    edi,DWORD PTR [ebp-0x2c]
  428b43:	test   edi,0x99c5
  428b49:	je     0x428bc0
  428b4b:	mov    ebx,ecx
  428b4d:	cmp    edi,0xffffffeb
  428b50:	jne    0x428bc0
  428b52:	add    edi,ecx
  428b54:	cmp    edi,eax
  428b56:	jne    0x428bc0
  428b58:	mov    ecx,edx
  428b5a:	cmp    edi,edx
  428b5c:	je     0x428bc0
  428b5e:	cmp    edi,DWORD PTR [ebp-0x24]
  428b61:	je     0x428bc0
  428b63:	cmp    edi,DWORD PTR ds:0x453058
  428b69:	je     0x428bc0
  428b6b:	cmp    ebx,0x31
  428b6e:	jne    0x428bc0
  428b70:	mov    esi,DWORD PTR [ebp-0x18]
  428b73:	or     ebx,edx
  428b75:	test   edi,0x9c
  428b7b:	jne    0x428bc0
  428b7d:	cmp    ebx,DWORD PTR ds:0x45306c
  428b83:	jne    0x428bc0
  428b85:	and    DWORD PTR [ebp-0x18],edx
  428b88:	cmp    edi,eax
  428b8a:	je     0x428bc0
  428b8c:	or     DWORD PTR [ebp-0x18],ebx
  428b8f:	add    ecx,ebx
  428b91:	mov    ebx,ecx
  428b93:	cmp    esi,eax
  428b95:	je     0x428bc0
  428b97:	mov    ecx,DWORD PTR [ebp-0x2c]
  428b9a:	and    esi,ebx
  428b9c:	or     esi,eax
  428b9e:	cmp    ebx,0xfffffff8
  428ba1:	je     0x428bc0
  428ba3:	add    edi,edi
  428ba5:	mov    ebx,DWORD PTR [ebp-0x2c]
  428ba8:	or     ebx,eax
  428baa:	add    DWORD PTR [ebp-0x2c],edi
  428bad:	sub    DWORD PTR [ebp-0x18],ecx
  428bb0:	or     DWORD PTR [ebp-0x18],esi
  428bb3:	add    ebx,eax
  428bb5:	test   ebx,0xefbf
  428bbb:	jne    0x428bc0
  428bbd:	add    DWORD PTR [ebp-0x2c],ebx
  428bc0:	add    DWORD PTR [ebp-0x2c],esi
  428bc3:	and    eax,edx
  428bc5:	mov    ecx,DWORD PTR [ebp-0x18]
  428bc8:	mov    edi,0x1f
  428bcd:	sub    DWORD PTR [ebp-0x2c],ecx
  428bd0:	sub    DWORD PTR [ebp-0x2c],eax
  428bd3:	and    edi,esi
  428bd5:	cmp    edi,0xfee
  428bdb:	je     0x428c70
  428be1:	test   edi,0x9c
  428be7:	jne    0x428c70
  428bed:	sub    DWORD PTR [ebp-0x2c],edx
  428bf0:	mov    ecx,DWORD PTR [ebp-0x18]
  428bf3:	cmp    ecx,0xfa90c288
  428bf9:	jne    0x428c70
  428bfb:	add    edi,ebx
  428bfd:	sub    DWORD PTR [ebp-0x18],edi
  428c00:	cmp    ecx,0x4272
  428c06:	jne    0x428c70
  428c08:	cmp    ecx,edx
  428c0a:	jne    0x428c70
  428c0c:	cmp    ecx,0x13
  428c0f:	je     0x428c70
  428c11:	mov    esi,0xe7
  428c16:	test   ecx,0x14
  428c1c:	je     0x428c70
  428c1e:	sub    ecx,ebx
  428c20:	cmp    ecx,DWORD PTR ds:0x453068
  428c26:	je     0x428c70
  428c28:	and    DWORD PTR [ebp-0x2c],edi
  428c2b:	add    DWORD PTR [ebp-0x2c],esi
  428c2e:	sub    DWORD PTR [ebp-0x2c],edi
  428c31:	mov    edi,DWORD PTR [ebp-0x18]
  428c34:	cmp    ecx,0xffffff99
  428c37:	je     0x428c70
  428c39:	xor    esi,esi
  428c3b:	mov    ebx,ecx
  428c3d:	sub    esi,eax
  428c3f:	and    edi,esi
  428c41:	cmp    ebx,DWORD PTR [ebp-0x2c]
  428c44:	je     0x428c70
  428c46:	add    edi,edx
  428c48:	sub    DWORD PTR [ebp-0x2c],edi
  428c4b:	mov    ecx,DWORD PTR [ebp-0x18]
  428c4e:	mov    edi,DWORD PTR [ebp-0x18]
  428c51:	and    ecx,ebx
  428c53:	cmp    ecx,eax
  428c55:	jne    0x428c70
  428c57:	cmp    ecx,0x55c
  428c5d:	je     0x428c70
  428c5f:	add    DWORD PTR [ebp-0x18],edi
  428c62:	test   ecx,0x4d
  428c68:	jne    0x428c70
  428c6a:	add    DWORD PTR [ebp-0x2c],ebx
  428c6d:	add    DWORD PTR [ebp-0x2c],ecx
  428c70:	mov    edi,0xb
  428c75:	add    DWORD PTR [ebp-0x2c],edi
  428c78:	or     eax,edx
  428c7a:	sub    DWORD PTR [ebp-0x18],eax
  428c7d:	mov    ecx,DWORD PTR [ebp-0x18]
  428c80:	cmp    ecx,0x2b
  428c83:	je     0x428c98
  428c85:	cmp    ecx,0x5
  428c88:	jne    0x428c98
  428c8a:	test   ecx,0x5
  428c90:	jne    0x428c98
  428c92:	sub    DWORD PTR [ebp-0x18],edx
  428c95:	and    DWORD PTR [ebp-0x2c],ecx
  428c98:	mov    DWORD PTR [ebp-0x48],edx
  428c9b:	sub    DWORD PTR [ebp-0x18],edx
  428c9e:	sub    DWORD PTR [ebp-0x2c],esi
  428ca1:	and    DWORD PTR [ebp-0x48],eax
  428ca4:	mov    edx,0x27
  428ca9:	mov    ebx,0x368380e0
  428cae:	sub    edx,ebx
  428cb0:	sub    edx,ecx
  428cb2:	cmp    edx,DWORD PTR [ebp-0x8]
  428cb5:	jne    0x428cc0
  428cb7:	mov    edi,DWORD PTR [ebp-0x18]
  428cba:	sub    DWORD PTR [ebp-0x2c],edx
  428cbd:	add    DWORD PTR [ebp-0x2c],edi
  428cc0:	sub    DWORD PTR [ebp-0x2c],eax
  428cc3:	add    edx,esi
  428cc5:	mov    ebx,edx
  428cc7:	mov    edi,0x62544688
  428ccc:	and    DWORD PTR [ebp-0x18],edi
  428ccf:	xor    DWORD PTR [ebp-0x18],ebx
  428cd2:	mov    edi,DWORD PTR [ebp-0x2c]
  428cd5:	mov    eax,DWORD PTR [ebp-0x18]
  428cd8:	add    DWORD PTR [ebp-0x18],eax
  428cdb:	add    edi,esi
  428cdd:	cmp    eax,DWORD PTR ds:0x453070
  428ce3:	je     0x428d37
  428ce5:	and    edi,edx
  428ce7:	cmp    edi,DWORD PTR ds:0x453068
  428ced:	je     0x428d37
  428cef:	sub    edi,ecx
  428cf1:	or     edi,ecx
  428cf3:	mov    ebx,DWORD PTR [ebp-0x2c]
  428cf6:	cmp    edi,0xffffffbb
  428cf9:	je     0x428d37
  428cfb:	sub    DWORD PTR [ebp-0x18],ebx
  428cfe:	cmp    eax,0x6a0d
  428d03:	je     0x428d37
  428d05:	mov    eax,ebx
  428d07:	mov    ebx,DWORD PTR [ebp-0x2c]
  428d0a:	add    edi,edx
  428d0c:	sub    edi,eax
  428d0e:	add    ebx,ebx
  428d10:	sub    DWORD PTR [ebp-0x18],edi
  428d13:	cmp    ebx,0x3b
  428d16:	jne    0x428d37
  428d18:	xor    esi,esi
  428d1a:	add    DWORD PTR [ebp-0x2c],ecx
  428d1d:	mov    eax,DWORD PTR ds:0x45306c
  428d23:	or     ebx,eax
  428d25:	add    ebx,eax
  428d27:	add    DWORD PTR [ebp-0x18],ebx
  428d2a:	and    esi,edx
  428d2c:	cmp    esi,0x55be
  428d32:	jne    0x428d37
  428d34:	sub    DWORD PTR [ebp-0x2c],esi
  428d37:	mov    esi,DWORD PTR [ebp-0x18]
  428d3a:	mov    ebx,DWORD PTR [ebp-0x2c]
  428d3d:	or     ebx,ecx
  428d3f:	add    ebx,ecx
  428d41:	and    ebx,edi
  428d43:	add    ebx,edi
  428d45:	cmp    edx,eax
  428d47:	je     0x428e26
  428d4d:	add    ebx,edi
  428d4f:	sub    esi,edx
  428d51:	and    ebx,esi
  428d53:	add    ebx,esi
  428d55:	mov    esi,0x76
  428d5a:	mov    edx,DWORD PTR [ebp-0x2c]
  428d5d:	and    DWORD PTR [ebp-0x2c],edx
  428d60:	add    DWORD PTR [ebp-0x2c],ecx
  428d63:	cmp    ebx,edx
  428d65:	je     0x428e26
  428d6b:	mov    ecx,DWORD PTR [ebp-0x18]
  428d6e:	sub    DWORD PTR [ebp-0x2c],ecx
  428d71:	cmp    ebx,0xffffffc8
  428d74:	jne    0x428e26
  428d7a:	mov    eax,DWORD PTR [ebp-0x2c]
  428d7d:	cmp    eax,0x54ea
  428d82:	je     0x428e26
  428d88:	mov    edx,0xa7
  428d8d:	sub    edx,ecx
  428d8f:	and    DWORD PTR [ebp-0x18],edx
  428d92:	sub    ebx,ecx
  428d94:	add    DWORD PTR [ebp-0x2c],ebx
  428d97:	test   eax,0x93
  428d9c:	je     0x428e26
  428da2:	mov    ebx,DWORD PTR [ebp-0x18]
  428da5:	mov    edi,DWORD PTR [ebp-0x18]
  428da8:	cmp    eax,esi
  428daa:	jne    0x428e26
  428dac:	mov    ecx,DWORD PTR [ebp-0x18]
  428daf:	add    edi,esi
  428db1:	mov    esi,DWORD PTR ds:0x45306c
  428db7:	add    esi,edi
  428db9:	cmp    ecx,DWORD PTR ds:0x453070
  428dbf:	jne    0x428e26
  428dc1:	mov    edi,DWORD PTR [ebp-0x18]
  428dc4:	add    eax,ebx
  428dc6:	mov    edx,DWORD PTR [ebp-0x18]
  428dc9:	sub    DWORD PTR [ebp-0x2c],eax
  428dcc:	sub    edi,eax
  428dce:	sub    DWORD PTR [ebp-0x2c],edi
  428dd1:	and    DWORD PTR [ebp-0x2c],eax
  428dd4:	or     DWORD PTR [ebp-0x2c],ecx
  428dd7:	cmp    eax,edx
  428dd9:	jne    0x428e26
  428ddb:	mov    eax,0x9b
  428de0:	cmp    edx,eax
  428de2:	jne    0x428e26
  428de4:	mov    ebx,DWORD PTR [ebp-0x18]
  428de7:	sub    edx,edi
  428de9:	add    edx,edi
  428deb:	sub    esi,eax
  428ded:	add    edx,esi
  428def:	xor    esi,esi
  428df1:	cmp    ebx,0xffffffdb
  428df4:	je     0x428e26
  428df6:	mov    edi,DWORD PTR ds:0x453068
  428dfc:	mov    ecx,DWORD PTR [ebp-0x2c]
  428dff:	sub    DWORD PTR [ebp-0x2c],ecx
  428e02:	add    ebx,ecx
  428e04:	test   ebx,0xe4aa
  428e0a:	jne    0x428e26
  428e0c:	mov    ecx,edi
  428e0e:	xor    edi,edi
  428e10:	cmp    ebx,DWORD PTR [ebp-0x40]
  428e13:	je     0x428e26
  428e15:	mov    eax,ebx
  428e17:	add    eax,ebx
  428e19:	mov    esi,edi
  428e1b:	sub    eax,esi
  428e1d:	sub    DWORD PTR [ebp-0x2c],ecx
  428e20:	mov    DWORD PTR [ebp-0x2c],edx
  428e23:	add    DWORD PTR [ebp-0x18],eax
  428e26:	cmp    ebx,0xaa32
  428e2c:	jne    0x428e53
  428e2e:	cmp    edx,0xf
  428e31:	jne    0x428e53
  428e33:	and    edi,edx
  428e35:	mov    DWORD PTR [ebp-0x2c],eax
  428e38:	and    edi,ebx
  428e3a:	cmp    edi,ebx
  428e3c:	jne    0x428e53
  428e3e:	mov    ecx,DWORD PTR [ebp-0x18]
  428e41:	cmp    ecx,DWORD PTR ds:0x453070
  428e47:	je     0x428e53
  428e49:	cmp    edi,ebx
  428e4b:	jne    0x428e53
  428e4d:	sub    DWORD PTR [ebp-0x2c],edi
  428e50:	mov    DWORD PTR [ebp-0x18],ecx
  428e53:	sub    ebx,eax
  428e55:	add    ebx,edi
  428e57:	add    DWORD PTR [ebp-0x2c],ebx
  428e5a:	add    DWORD PTR [ebp-0x18],esi
  428e5d:	sub    DWORD PTR [ebp-0x18],esi
  428e60:	mov    eax,DWORD PTR [ebp-0x2c]
  428e63:	cmp    eax,ebx
  428e65:	jne    0x428eef
  428e6b:	mov    edx,DWORD PTR [ebp-0x2c]
  428e6e:	test   ecx,0x7c63
  428e74:	je     0x428eef
  428e76:	mov    ebx,DWORD PTR ds:0x453068
  428e7c:	xor    edi,edi
  428e7e:	sub    DWORD PTR [ebp-0x18],eax
  428e81:	mov    DWORD PTR [ebp-0x18],edi
  428e84:	sub    DWORD PTR [ebp-0x18],eax
  428e87:	or     DWORD PTR [ebp-0x18],ebx
  428e8a:	cmp    edx,0x51
  428e8d:	je     0x428eef
  428e8f:	mov    edi,0xed
  428e94:	add    edi,edx
  428e96:	mov    esi,DWORD PTR [ebp-0x2c]
  428e99:	and    edi,eax
  428e9b:	sub    esi,ecx
  428e9d:	test   esi,0xd3
  428ea3:	je     0x428eef
  428ea5:	mov    ecx,DWORD PTR ds:0x453088
  428eab:	test   esi,0x9539
  428eb1:	je     0x428eef
  428eb3:	sub    ecx,edx
  428eb5:	sub    DWORD PTR [ebp-0x2c],edi
  428eb8:	mov    eax,DWORD PTR ds:0x453088
  428ebe:	xor    edi,edi
  428ec0:	sub    esi,eax
  428ec2:	add    edi,ebx
  428ec4:	add    DWORD PTR [ebp-0x2c],esi
  428ec7:	add    ecx,eax
  428ec9:	sub    DWORD PTR [ebp-0x2c],edi
  428ecc:	and    ecx,eax
  428ece:	sub    ecx,ebx
  428ed0:	cmp    ecx,DWORD PTR ds:0x45306c
  428ed6:	jne    0x428eef
  428ed8:	sub    ecx,ebx
  428eda:	mov    edi,DWORD PTR ds:0x453068
  428ee0:	mov    edi,0xad
  428ee5:	or     ecx,eax
  428ee7:	sub    DWORD PTR [ebp-0x2c],edi
  428eea:	sub    ecx,esi
  428eec:	add    DWORD PTR [ebp-0x18],ecx
  428eef:	mov    edi,DWORD PTR [ebp-0x18]
  428ef2:	and    edi,esi
  428ef4:	mov    ecx,DWORD PTR [ebp-0x2c]
  428ef7:	cmp    ecx,0x10
  428efa:	je     0x429006
  428f00:	sub    DWORD PTR [ebp-0x2c],ecx
  428f03:	add    edi,ebx
  428f05:	mov    eax,DWORD PTR [ebp-0x18]
  428f08:	mov    esi,DWORD PTR ds:0x453068
  428f0e:	cmp    eax,0x1e
  428f11:	jne    0x429006
  428f17:	cmp    eax,0x7f
  428f1a:	jne    0x429006
  428f20:	add    eax,esi
  428f22:	cmp    edi,0xfffffff7
  428f25:	jne    0x429006
  428f2b:	mov    ebx,DWORD PTR ds:0x45306c
  428f31:	mov    ecx,edx
  428f33:	cmp    ecx,DWORD PTR [ebp-0x34]
  428f36:	je     0x429006
  428f3c:	mov    esi,DWORD PTR [ebp-0x18]
  428f3f:	add    ecx,ecx
  428f41:	mov    edx,DWORD PTR [ebp-0x18]
  428f44:	and    edx,edi
  428f46:	mov    DWORD PTR [ebp-0x18],edx
  428f49:	add    esi,edx
  428f4b:	cmp    ecx,DWORD PTR ds:0x453070
  428f51:	je     0x429006
  428f57:	sub    ecx,edx
  428f59:	cmp    eax,DWORD PTR [ebp-0x2c]
  428f5c:	je     0x429006
  428f62:	mov    edi,DWORD PTR [ebp-0x2c]
  428f65:	mov    edx,edi
  428f67:	sub    ecx,eax
  428f69:	cmp    edx,DWORD PTR ds:0x453068
  428f6f:	je     0x429006
  428f75:	mov    edi,ecx
  428f77:	sub    esi,edx
  428f79:	mov    edx,DWORD PTR [ebp-0x18]
  428f7c:	xor    DWORD PTR [ebp-0x18],edx
  428f7f:	sub    ebx,ecx
  428f81:	mov    DWORD PTR [ebp-0x18],eax
  428f84:	add    ebx,ecx
  428f86:	cmp    ebx,0xffffff97
  428f89:	jne    0x429006
  428f8b:	xor    ecx,ecx
  428f8d:	sub    DWORD PTR [ebp-0x2c],eax
  428f90:	mov    eax,0x40
  428f95:	add    DWORD PTR [ebp-0x2c],ecx
  428f98:	add    DWORD PTR [ebp-0x18],eax
  428f9b:	sub    DWORD PTR [ebp-0x18],edi
  428f9e:	cmp    ebx,DWORD PTR [ebp-0x48]
  428fa1:	jne    0x429006
  428fa3:	and    DWORD PTR [ebp-0x2c],ecx
  428fa6:	mov    edx,DWORD PTR [ebp-0x2c]
  428fa9:	mov    eax,DWORD PTR [ebp-0x18]
  428fac:	sub    eax,ecx
  428fae:	and    eax,ebx
  428fb0:	or     eax,ecx
  428fb2:	sub    DWORD PTR [ebp-0x2c],esi
  428fb5:	cmp    eax,DWORD PTR [ebp-0x44]
  428fb8:	je     0x429006
  428fba:	mov    ebx,DWORD PTR [ebp-0x2c]
  428fbd:	cmp    ebx,0x64
  428fc0:	jne    0x429006
  428fc2:	xor    esi,esi
  428fc4:	mov    edi,DWORD PTR [ebp-0x2c]
  428fc7:	cmp    edi,0xffffff94
  428fca:	je     0x429006
  428fcc:	add    ebx,edi
  428fce:	cmp    edx,0xffffffb0
  428fd1:	je     0x429006
  428fd3:	sub    edx,ebx
  428fd5:	cmp    eax,edx
  428fd7:	jne    0x429006
  428fd9:	sub    DWORD PTR [ebp-0x18],eax
  428fdc:	xor    eax,eax
  428fde:	mov    edi,0x9a
  428fe3:	add    edx,ebx
  428fe5:	add    esi,esi
  428fe7:	add    edx,ecx
  428fe9:	and    edx,eax
  428feb:	and    edi,eax
  428fed:	add    edi,edi
  428fef:	sub    DWORD PTR [ebp-0x18],esi
  428ff2:	add    DWORD PTR [ebp-0x2c],edx
  428ff5:	add    edi,ecx
  428ff7:	add    edi,edx
  428ff9:	sub    edi,ebx
  428ffb:	test   edi,0x99f6
  429001:	jne    0x429006
  429003:	add    DWORD PTR [ebp-0x2c],edi
  429006:	sub    edi,ecx
  429008:	test   edx,0x94
  42900e:	jne    0x42909e
  429014:	mov    ecx,DWORD PTR [ebp-0x2c]
  429017:	add    edi,edi
  429019:	sub    ecx,edi
  42901b:	sub    ecx,edx
  42901d:	sub    ecx,eax
  42901f:	cmp    ecx,DWORD PTR [ebp-0x48]
  429022:	jne    0x42909e
  429024:	mov    eax,DWORD PTR [ebp-0x2c]
  429027:	sub    DWORD PTR [ebp-0x2c],eax
  42902a:	mov    edi,0x78
  42902f:	and    edi,ebx
  429031:	mov    DWORD PTR [ebp-0x2c],edi
  429034:	add    ecx,eax
  429036:	cmp    ecx,DWORD PTR ds:0x45306c
  42903c:	je     0x42909e
  42903e:	mov    ebx,eax
  429040:	mov    edx,0x85
  429045:	sub    ebx,esi
  429047:	sub    ebx,edx
  429049:	cmp    ecx,eax
  42904b:	je     0x42909e
  42904d:	mov    esi,DWORD PTR ds:0x45308c
  429053:	mov    edi,0x9d7f
  429058:	add    DWORD PTR [ebp-0x18],ecx
  42905b:	test   ecx,0xe1
  429061:	jne    0x42909e
  429063:	cmp    ecx,ebx
  429065:	jne    0x42909e
  429067:	mov    ecx,DWORD PTR ds:0x45306c
  42906d:	and    DWORD PTR [ebp-0x18],eax
  429070:	mov    edx,DWORD PTR [ebp-0x2c]
  429073:	add    ecx,ecx
  429075:	add    DWORD PTR [ebp-0x2c],eax
  429078:	add    DWORD PTR [ebp-0x18],esi
  42907b:	sub    DWORD PTR [ebp-0x18],edi
  42907e:	sub    edx,edi
  429080:	cmp    edx,0x59
  429083:	jne    0x42909e
  429085:	cmp    ebx,0x53da
  42908b:	je     0x42909e
  42908d:	mov    edi,0x4ff1
  429092:	and    ecx,edx
  429094:	or     DWORD PTR [ebp-0x18],edi
  429097:	mov    esi,ecx
  429099:	sub    ebx,esi
  42909b:	add    DWORD PTR [ebp-0x18],ebx
  42909e:	xor    ecx,ecx
  4290a0:	and    ecx,eax
  4290a2:	mov    ebx,DWORD PTR [ebp-0x18]
  4290a5:	and    ecx,ebx
  4290a7:	or     ecx,edx
  4290a9:	test   ecx,0x9e85
  4290af:	je     0x4290c6
  4290b1:	mov    esi,DWORD PTR [ebp-0x18]
  4290b4:	add    DWORD PTR [ebp-0x18],ecx
  4290b7:	mov    eax,0xf3
  4290bc:	sub    eax,edx
  4290be:	mov    DWORD PTR [ebp-0x2c],esi
  4290c1:	sub    eax,edx
  4290c3:	xor    DWORD PTR [ebp-0x2c],eax
  4290c6:	add    eax,eax
  4290c8:	add    DWORD PTR [ebp-0x18],eax
  4290cb:	mov    ebx,DWORD PTR ds:0x4530b4
  4290d1:	mov    esi,DWORD PTR [ebp-0x18]
  4290d4:	add    DWORD PTR [ebp-0x18],ebx
  4290d7:	test   esi,0x40
  4290dd:	je     0x429256
  4290e3:	mov    eax,ebx
  4290e5:	sub    eax,edi
  4290e7:	mov    edi,DWORD PTR [ebp-0x18]
  4290ea:	cmp    esi,0x2da1
  4290f0:	jne    0x429256
  4290f6:	and    edi,eax
  4290f8:	add    DWORD PTR [ebp-0x18],ebx
  4290fb:	sub    edi,edx
  4290fd:	mov    ebx,DWORD PTR ds:0x453058
  429103:	mov    ecx,0x5d
  429108:	sub    DWORD PTR [ebp-0x2c],eax
  42910b:	sub    edi,edx
  42910d:	test   edi,0xab
  429113:	jne    0x429256
  429119:	mov    ecx,0x3
  42911e:	cmp    edi,eax
  429120:	jne    0x429256
  429126:	sub    DWORD PTR [ebp-0x2c],ebx
  429129:	mov    eax,ecx
  42912b:	test   esi,0x92
  429131:	je     0x429256
  429137:	xor    ebx,ebx
  429139:	add    edi,edx
  42913b:	cmp    edi,0xffffffe1
  42913e:	je     0x429256
  429144:	cmp    edx,DWORD PTR ds:0x453058
  42914a:	jne    0x429256
  429150:	sub    esi,edx
  429152:	mov    ecx,esi
  429154:	xor    esi,esi
  429156:	cmp    edi,ebx
  429158:	je     0x429256
  42915e:	and    ecx,eax
  429160:	cmp    edi,edx
  429162:	je     0x429256
  429168:	mov    eax,DWORD PTR [ebp-0x18]
  42916b:	mov    edx,DWORD PTR [ebp-0x2c]
  42916e:	sub    ebx,ecx
  429170:	mov    DWORD PTR [ebp-0x10],edi
  429173:	cmp    ebx,0x65
  429176:	jne    0x429256
  42917c:	test   ebx,0xae604300
  429182:	je     0x429256
  429188:	test   edi,0x32
  42918e:	je     0x429256
  429194:	xor    esi,esi
  429196:	sub    eax,edi
  429198:	mov    edi,DWORD PTR [ebp-0x2c]
  42919b:	add    DWORD PTR [ebp-0x2c],eax
  42919e:	sub    esi,ecx
  4291a0:	cmp    ebx,DWORD PTR [ebp-0x34]
  4291a3:	jne    0x429256
  4291a9:	cmp    edi,DWORD PTR ds:0x45308c
  4291af:	je     0x429256
  4291b5:	mov    eax,DWORD PTR [ebp-0x18]
  4291b8:	cmp    ebx,DWORD PTR [ebp-0x8]
  4291bb:	je     0x429256
  4291c1:	mov    ecx,DWORD PTR [ebp-0x10]
  4291c4:	mov    DWORD PTR [ebp-0x28],ebx
  4291c7:	or     DWORD PTR [ebp-0x28],ebx
  4291ca:	cmp    edi,DWORD PTR ds:0x453070
  4291d0:	jne    0x429256
  4291d6:	mov    ebx,0x39
  4291db:	cmp    edi,0x10
  4291de:	je     0x429256
  4291e0:	mov    DWORD PTR [ebp-0x18],eax
  4291e3:	cmp    ecx,0x47
  4291e6:	je     0x429256
  4291e8:	xor    eax,eax
  4291ea:	and    ebx,esi
  4291ec:	test   edi,0xe5
  4291f2:	je     0x429256
  4291f4:	sub    DWORD PTR [ebp-0x28],eax
  4291f7:	mov    eax,0x7d15
  4291fc:	mov    esi,DWORD PTR [ebp-0x28]
  4291ff:	add    eax,eax
  429201:	cmp    edx,0xc32a
  429207:	je     0x429256
  429209:	add    DWORD PTR [ebp-0x18],eax
  42920c:	mov    eax,DWORD PTR [ebp-0x28]
  42920f:	test   edx,0xadd9
  429215:	jne    0x429256
  429217:	cmp    edx,0xffffff95
  42921a:	jne    0x429256
  42921c:	cmp    edx,DWORD PTR ds:0x453068
  429222:	je     0x429256
  429224:	add    edx,edi
  429226:	mov    edi,ebx
  429228:	cmp    edi,DWORD PTR [ebp-0x10]
  42922b:	jne    0x429256
  42922d:	mov    ebx,0x77
  429232:	or     edi,ecx
  429234:	mov    ecx,0xc497
  429239:	sub    ecx,ebx
  42923b:	or     DWORD PTR [ebp-0x28],ecx
  42923e:	sub    DWORD PTR [ebp-0x28],eax
  429241:	cmp    edi,0x39
  429244:	je     0x429256
  429246:	mov    DWORD PTR [ebp-0x10],esi
  429249:	sub    DWORD PTR [ebp-0x2c],edi
  42924c:	cmp    edx,DWORD PTR [ebp-0x40]
  42924f:	jne    0x429256
  429251:	and    edx,ebx
  429253:	sub    DWORD PTR [ebp-0x28],edx
  429256:	mov    edx,DWORD PTR [ebp-0x18]
  429259:	mov    ecx,DWORD PTR [ebp-0x2c]
  42925c:	add    DWORD PTR [ebp-0x18],esi
  42925f:	test   edx,0x7be0
  429265:	je     0x429291
  429267:	xor    edi,edi
  429269:	add    DWORD PTR [ebp-0x2c],edx
  42926c:	xor    eax,eax
  42926e:	mov    DWORD PTR [ebp-0x2c],edi
  429271:	test   ecx,0xe8
  429277:	je     0x429291
  429279:	mov    ebx,0x2c
  42927e:	add    DWORD PTR [ebp-0x2c],ecx
  429281:	mov    esi,DWORD PTR [ebp-0x18]
  429284:	sub    DWORD PTR [ebp-0x2c],esi
  429287:	sub    DWORD PTR [ebp-0x18],ebx
  42928a:	and    eax,esi
  42928c:	sub    eax,ecx
  42928e:	add    DWORD PTR [ebp-0x18],eax
  429291:	mov    DWORD PTR [ebp-0x18],esi
  429294:	add    DWORD PTR [ebp-0x18],edx
  429297:	sub    ecx,esi
  429299:	sub    DWORD PTR [ebp-0x18],ecx
  42929c:	mov    esi,DWORD PTR [ebp-0x2c]
  42929f:	mov    ecx,0x112e
  4292a4:	test   esi,0xbda6
  4292aa:	je     0x42933a
  4292b0:	mov    edi,DWORD PTR [ebp-0x2c]
  4292b3:	mov    eax,DWORD PTR [ebp-0x18]
  4292b6:	and    DWORD PTR [ebp-0x18],eax
  4292b9:	cmp    esi,DWORD PTR [ebp-0x2c]
  4292bc:	jne    0x42933a
  4292be:	mov    ecx,0x73e2
  4292c3:	sub    ecx,ebx
  4292c5:	mov    ebx,DWORD PTR ds:0x453078
  4292cb:	cmp    edi,ebx
  4292cd:	je     0x42933a
  4292cf:	mov    edx,esi
  4292d1:	sub    DWORD PTR [ebp-0x18],edi
  4292d4:	mov    eax,0xb2
  4292d9:	sub    DWORD PTR [ebp-0x18],edi
  4292dc:	sub    DWORD PTR [ebp-0x18],esi
  4292df:	sub    eax,edx
  4292e1:	and    eax,edx
  4292e3:	cmp    eax,0x84a0
  4292e8:	jne    0x42933a
  4292ea:	add    eax,ecx
  4292ec:	xor    edx,edx
  4292ee:	and    DWORD PTR [ebp-0x18],eax
  4292f1:	xor    ecx,ecx
  4292f3:	sub    DWORD PTR [ebp-0x18],ecx
  4292f6:	or     DWORD PTR [ebp-0x18],edi
  4292f9:	add    edx,ecx
  4292fb:	cmp    eax,0xffffff8e
  4292fe:	je     0x42933a
  429300:	sub    ecx,edi
  429302:	mov    ebx,edi
  429304:	mov    esi,0x5f
  429309:	add    DWORD PTR [ebp-0x2c],ecx
  42930c:	cmp    ebx,DWORD PTR [ebp-0x44]
  42930f:	je     0x42933a
  429311:	and    ebx,eax
  429313:	and    esi,eax
  429315:	mov    eax,0x49
  42931a:	xor    DWORD PTR [ebp-0x18],edi
  42931d:	mov    edi,DWORD PTR [ebp-0x2c]
  429320:	add    edi,esi
  429322:	sub    edi,edx
  429324:	sub    ebx,edx
  429326:	sub    eax,ebx
  429328:	add    DWORD PTR [ebp-0x18],eax
  42932b:	cmp    edi,edx
  42932d:	je     0x42933a
  42932f:	mov    ecx,0x9c
  429334:	add    DWORD PTR [ebp-0x2c],ecx
  429337:	add    DWORD PTR [ebp-0x2c],edi
  42933a:	sub    eax,esi
  42933c:	sub    DWORD PTR [ebp-0x2c],eax
  42933f:	add    DWORD PTR [ebp-0x18],eax
  429342:	add    esi,ebx
  429344:	add    DWORD PTR [ebp-0x2c],esi
  429347:	lea    ecx,[ebp-0x3c]
  42934a:	cmp    ecx,0x4
  42934d:	je     0x4293ec
  429353:	mov    esi,DWORD PTR [ebp-0x2c]
  429356:	mov    eax,0xe5
  42935b:	add    DWORD PTR [ebp-0x2c],ecx
  42935e:	test   esi,0x8e09
  429364:	je     0x4293ec
  42936a:	mov    eax,DWORD PTR [ebp-0x18]
  42936d:	mov    edx,DWORD PTR [ebp-0x18]
  429370:	cmp    eax,DWORD PTR ds:0x453078
  429376:	jne    0x4293ec
  429378:	test   eax,0xca
  42937d:	je     0x4293ec
  42937f:	cmp    edx,DWORD PTR ds:0x453088
  429385:	jne    0x4293ec
  429387:	cmp    esi,0x297c
  42938d:	jne    0x4293ec
  42938f:	mov    edi,0xa3
  429394:	mov    ebx,DWORD PTR [ebp-0x2c]
  429397:	test   esi,0x20061502
  42939d:	jne    0x4293ec
  42939f:	cmp    edx,DWORD PTR [ebp-0x4]
  4293a2:	je     0x4293ec
  4293a4:	mov    edi,DWORD PTR [ebp-0x2c]
  4293a7:	test   edx,0xf7
  4293ad:	jne    0x4293ec
  4293af:	and    esi,ebx
  4293b1:	or     DWORD PTR [ebp-0x18],eax
  4293b4:	mov    ebx,0x560304c0
  4293b9:	xor    eax,eax
  4293bb:	add    DWORD PTR [ebp-0x2c],eax
  4293be:	sub    DWORD PTR [ebp-0x2c],ebx
  4293c1:	cmp    esi,ecx
  4293c3:	je     0x4293ec
  4293c5:	test   edx,0xe8
  4293cb:	jne    0x4293ec
  4293cd:	mov    ebx,DWORD PTR ds:0x453084
  4293d3:	add    edx,ebx
  4293d5:	add    edx,esi
  4293d7:	mov    ebx,0xd8
  4293dc:	add    DWORD PTR [ebp-0x18],ebx
  4293df:	or     edx,ebx
  4293e1:	and    edi,ecx
  4293e3:	add    DWORD PTR [ebp-0x2c],esi
  4293e6:	add    DWORD PTR [ebp-0x18],edx
  4293e9:	sub    DWORD PTR [ebp-0x18],edi
  4293ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4293ef:	sub    eax,ecx
  4293f1:	mov    edx,DWORD PTR [ebp-0x2c]
  4293f4:	cmp    edx,0x25
  4293f7:	jne    0x429491
  4293fd:	sub    eax,ebx
  4293ff:	mov    edi,DWORD PTR ds:0x453084
  429405:	mov    ebx,DWORD PTR ds:0x453094
  42940b:	sub    DWORD PTR [ebp-0x2c],edi
  42940e:	cmp    edx,esi
  429410:	je     0x429491
  429412:	sub    edx,ebx
  429414:	mov    esi,ecx
  429416:	cmp    eax,DWORD PTR ds:0x4530b4
  42941c:	jne    0x429491
  42941e:	cmp    esi,0x1
  429421:	je     0x429491
  429423:	cmp    edx,0xffffffd0
  429426:	jne    0x429491
  429428:	cmp    esi,0x35
  42942b:	je     0x429491
  42942d:	mov    ebx,DWORD PTR [ebp-0x18]
  429430:	mov    edi,ecx
  429432:	sub    DWORD PTR [ebp-0x2c],edx
  429435:	cmp    esi,0xfffffff7
  429438:	je     0x429491
  42943a:	mov    edx,DWORD PTR ds:0x453064
  429440:	add    eax,edx
  429442:	sub    eax,ecx
  429444:	cmp    esi,ecx
  429446:	je     0x429491
  429448:	sub    esi,eax
  42944a:	mov    eax,DWORD PTR [ebp-0x2c]
  42944d:	mov    edx,DWORD PTR ds:0x453094
  429453:	and    edi,esi
  429455:	cmp    ebx,DWORD PTR ds:0x45306c
  42945b:	jne    0x429491
  42945d:	cmp    eax,esi
  42945f:	je     0x429491
  429461:	sub    DWORD PTR [ebp-0x18],edi
  429464:	mov    edi,DWORD PTR ds:0x453078
  42946a:	mov    esi,edi
  42946c:	cmp    ebx,DWORD PTR ds:0x453088
  429472:	je     0x429491
  429474:	add    DWORD PTR [ebp-0x18],ebx
  429477:	sub    eax,esi
  429479:	mov    edx,0x5a
  42947e:	xor    ebx,ebx
  429480:	and    edx,ecx
  429482:	add    DWORD PTR [ebp-0x18],edx
  429485:	add    ebx,edx
  429487:	sub    ebx,ecx
  429489:	sub    DWORD PTR [ebp-0x2c],eax
  42948c:	add    ebx,ebx
  42948e:	or     DWORD PTR [ebp-0x18],ebx
  429491:	push   ecx
  429492:	add    ebx,eax
  429494:	mov    edx,0xbd
  429499:	mov    edi,DWORD PTR [ebp-0x2c]
  42949c:	add    DWORD PTR [ebp-0x2c],edi
  42949f:	xor    DWORD PTR [ebp-0x2c],ebx
  4294a2:	sub    DWORD PTR [ebp-0x2c],edx
  4294a5:	push   0x76cc11e1
  4294aa:	and    edi,edx
  4294ac:	add    DWORD PTR [ebp-0x18],edi
  4294af:	mov    eax,0x6d
  4294b4:	mov    ecx,DWORD PTR [ebp-0x18]
  4294b7:	sub    DWORD PTR [ebp-0x2c],edi
  4294ba:	and    DWORD PTR [ebp-0x18],ecx
  4294bd:	add    esi,edx
  4294bf:	and    eax,ecx
  4294c1:	cmp    eax,ecx
  4294c3:	jne    0x4294c8
  4294c5:	add    DWORD PTR [ebp-0x18],eax
  4294c8:	add    esi,ecx
  4294ca:	and    esi,edi
  4294cc:	cmp    esi,DWORD PTR [ebp-0x38]
  4294cf:	je     0x4297d2
  4294d5:	mov    ecx,DWORD PTR [ebp-0x18]
  4294d8:	cmp    ecx,0x41
  4294db:	je     0x4297d2
  4294e1:	cmp    edi,0xffffff84
  4294e4:	jne    0x4297d2
  4294ea:	add    DWORD PTR [ebp-0x18],ecx
  4294ed:	mov    ecx,ebx
  4294ef:	mov    ebx,DWORD PTR [ebp-0x18]
  4294f2:	and    ebx,eax
  4294f4:	or     DWORD PTR [ebp-0x2c],ebx
  4294f7:	cmp    ecx,0xffffffe7
  4294fa:	jne    0x4297d2
  429500:	mov    edi,0x9a
  429505:	or     esi,edx
  429507:	xor    eax,eax
  429509:	add    ecx,edi
  42950b:	test   ecx,0xb2
  429511:	je     0x4297d2
  429517:	mov    edi,DWORD PTR [ebp-0x18]
  42951a:	or     DWORD PTR [ebp-0x18],eax
  42951d:	mov    ebx,0x8d
  429522:	sub    DWORD PTR [ebp-0x18],ebx
  429525:	cmp    ecx,0x40
  429528:	jne    0x4297d2
  42952e:	and    edi,eax
  429530:	add    DWORD PTR [ebp-0x2c],esi
  429533:	mov    edx,DWORD PTR [ebp-0x2c]
  429536:	mov    ebx,DWORD PTR [ebp-0x18]
  429539:	cmp    edi,0x4c9a
  42953f:	jne    0x4297d2
  429545:	cmp    edx,ebx
  429547:	je     0x4297d2
  42954d:	xor    eax,eax
  42954f:	cmp    ebx,0xffffffcc
  429552:	jne    0x4297d2
  429558:	add    edx,edi
  42955a:	xor    DWORD PTR [ebp-0x18],ebx
  42955d:	cmp    ecx,eax
  42955f:	je     0x4297d2
  429565:	cmp    edx,DWORD PTR [ebp-0x34]
  429568:	jne    0x4297d2
  42956e:	cmp    edi,DWORD PTR [ebp-0xc]
  429571:	jne    0x4297d2
  429577:	mov    edi,edx
  429579:	cmp    edi,ecx
  42957b:	jne    0x4297d2
  429581:	mov    esi,DWORD PTR [ebp-0x18]
  429584:	xor    ebx,ebx
  429586:	add    eax,ebx
  429588:	sub    edi,eax
  42958a:	add    DWORD PTR [ebp-0x2c],edi
  42958d:	sub    ecx,edi
  42958f:	cmp    ecx,0x1e
  429592:	je     0x4297d2
  429598:	xor    edx,edx
  42959a:	cmp    edi,0xb
  42959d:	jne    0x4297d2
  4295a3:	add    DWORD PTR [ebp-0x18],edx
  4295a6:	mov    ebx,0xff
  4295ab:	cmp    esi,DWORD PTR [ebp-0x44]
  4295ae:	jne    0x4297d2
  4295b4:	mov    edx,DWORD PTR [ebp-0x2c]
  4295b7:	cmp    esi,DWORD PTR ds:0x453094
  4295bd:	jne    0x4297d2
  4295c3:	sub    DWORD PTR [ebp-0x2c],ebx
  4295c6:	sub    ecx,eax
  4295c8:	and    DWORD PTR [ebp-0x2c],ebx
  4295cb:	mov    ebx,DWORD PTR [ebp-0x18]
  4295ce:	mov    eax,DWORD PTR [ebp-0x2c]
  4295d1:	and    edx,esi
  4295d3:	cmp    edx,DWORD PTR ds:0x453058
  4295d9:	jne    0x4297d2
  4295df:	sub    DWORD PTR [ebp-0x2c],edx
  4295e2:	cmp    ebx,eax
  4295e4:	je     0x4297d2
  4295ea:	mov    edi,ecx
  4295ec:	cmp    edi,0x5d
  4295ef:	je     0x4297d2
  4295f5:	cmp    edi,0xffffffa3
  4295f8:	jne    0x4297d2
  4295fe:	and    eax,ecx
  429600:	add    eax,edx
  429602:	and    edi,ecx
  429604:	cmp    eax,DWORD PTR ds:0x453064
  42960a:	jne    0x4297d2
  429610:	cmp    ebx,DWORD PTR [ebp-0x4]
  429613:	jne    0x4297d2
  429619:	mov    ecx,DWORD PTR [ebp-0x18]
  42961c:	cmp    eax,esi
  42961e:	jne    0x4297d2
  429624:	xor    edx,edx
  429626:	cmp    ecx,DWORD PTR ds:0x45308c
  42962c:	jne    0x4297d2
  429632:	and    edi,ecx
  429634:	mov    ecx,0xbc
  429639:	sub    DWORD PTR [ebp-0x2c],edx
  42963c:	mov    edx,DWORD PTR [ebp-0x18]
  42963f:	cmp    eax,0x55
  429642:	je     0x4297d2
  429648:	mov    esi,0x1c
  42964d:	and    ecx,ebx
  42964f:	xor    DWORD PTR [ebp-0x18],edi
  429652:	or     edx,ecx
  429654:	mov    ecx,DWORD PTR [ebp-0x18]
  429657:	and    DWORD PTR [ebp-0x18],eax
  42965a:	and    DWORD PTR [ebp-0x2c],edx
  42965d:	sub    DWORD PTR [ebp-0x2c],edi
  429660:	test   ecx,0xe0
  429666:	jne    0x4297d2
  42966c:	mov    ebx,DWORD PTR ds:0x45308c
  429672:	mov    edx,0x8c15040a
  429677:	cmp    ecx,DWORD PTR ds:0x453088
  42967d:	jne    0x4297d2
  429683:	sub    ebx,eax
  429685:	cmp    edi,0xffffffa2
  429688:	je     0x4297d2
  42968e:	or     ecx,edx
  429690:	mov    edi,DWORD PTR [ebp-0x2c]
  429693:	sub    ecx,edx
  429695:	mov    eax,DWORD PTR [ebp-0x2c]
  429698:	cmp    eax,DWORD PTR ds:0x45306c
  42969e:	jne    0x4297d2
  4296a4:	sub    ebx,edx
  4296a6:	add    DWORD PTR [ebp-0x2c],eax
  4296a9:	and    edi,ebx
  4296ab:	sub    edi,ebx
  4296ad:	mov    edx,DWORD PTR [ebp-0x18]
  4296b0:	cmp    edi,DWORD PTR ds:0x453064
  4296b6:	je     0x4297d2
  4296bc:	mov    ebx,DWORD PTR ds:0x453058
  4296c2:	add    edx,eax
  4296c4:	test   edi,0xd
  4296ca:	je     0x4297d2
  4296d0:	mov    esi,DWORD PTR [ebp-0x18]
  4296d3:	sub    esi,ebx
  4296d5:	mov    eax,DWORD PTR [ebp-0x2c]
  4296d8:	and    DWORD PTR [ebp-0x18],eax
  4296db:	cmp    edi,ecx
  4296dd:	jne    0x4297d2
  4296e3:	cmp    ecx,0x36
  4296e6:	je     0x4297d2
  4296ec:	cmp    edx,DWORD PTR [ebp-0x44]
  4296ef:	jne    0x4297d2
  4296f5:	mov    ebx,DWORD PTR [ebp-0x18]
  4296f8:	add    DWORD PTR [ebp-0x18],ecx
  4296fb:	mov    eax,0x8f
  429700:	mov    DWORD PTR [ebp-0x18],edi
  429703:	or     DWORD PTR [ebp-0x2c],ebx
  429706:	add    DWORD PTR [ebp-0x18],eax
  429709:	and    DWORD PTR [ebp-0x18],edi
  42970c:	and    esi,edi
  42970e:	add    esi,edx
  429710:	and    esi,ecx
  429712:	cmp    esi,0x6fa0
  429718:	jne    0x4297d2
  42971e:	mov    edi,DWORD PTR [ebp-0x2c]
  429721:	mov    edx,0x37
  429726:	cmp    esi,0xffffff97
  429729:	je     0x4297d2
  42972f:	add    edx,edx
  429731:	mov    eax,DWORD PTR [ebp-0x18]
  429734:	add    edi,edx
  429736:	mov    ebx,DWORD PTR [ebp-0x18]
  429739:	add    DWORD PTR [ebp-0x18],eax
  42973c:	cmp    ebx,0xffffff96
  42973f:	jne    0x4297d2
  429745:	sub    DWORD PTR [ebp-0x2c],edi
  429748:	cmp    esi,0xffffffce
  42974b:	jne    0x4297d2
  429751:	mov    edx,DWORD PTR [ebp-0x18]
  429754:	test   ebx,0x9b03
  42975a:	je     0x4297d2
  42975c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42975f:	cmp    ebx,DWORD PTR ds:0x453058
  429765:	je     0x4297d2
  429767:	mov    edi,DWORD PTR ds:0x4530a8
  42976d:	mov    eax,DWORD PTR [ebp-0x18]
  429770:	add    ecx,edi
  429772:	sub    edx,edi
  429774:	and    DWORD PTR [ebp-0x18],ebx
  429777:	cmp    ecx,0xb
  42977a:	je     0x4297d2
  42977c:	mov    edi,0x1c
  429781:	cmp    eax,DWORD PTR ds:0x453078
  429787:	jne    0x4297d2
  429789:	mov    ebx,ecx
  42978b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42978e:	and    edi,esi
  429790:	cmp    eax,edx
  429792:	jne    0x4297d2
  429794:	cmp    ecx,0x3f00
  42979a:	je     0x4297d2
  42979c:	add    DWORD PTR [ebp-0x18],edx
  42979f:	sub    DWORD PTR [ebp-0x18],ecx
  4297a2:	xor    edx,edx
  4297a4:	mov    esi,DWORD PTR [ebp-0x18]
  4297a7:	sub    eax,ebx
  4297a9:	cmp    eax,DWORD PTR ds:0x453058
  4297af:	jne    0x4297cd
  4297b1:	mov    ebx,DWORD PTR [ebp-0x18]
  4297b4:	mov    ecx,DWORD PTR ds:0x45304c
  4297ba:	or     edi,eax
  4297bc:	or     DWORD PTR [ebp-0x2c],esi
  4297bf:	sub    edi,eax
  4297c1:	and    ebx,ecx
  4297c3:	and    ebx,edi
  4297c5:	cmp    ebx,0x29
  4297c8:	je     0x4297cd
  4297ca:	add    DWORD PTR [ebp-0x18],ebx
  4297cd:	sub    edx,ebx
  4297cf:	sub    DWORD PTR [ebp-0x2c],edx
  4297d2:	call   0x429bb4
  4297d7:	mov    ebx,0xb2
  4297dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4297df:	sub    DWORD PTR [ebp-0x2c],ecx
  4297e2:	cmp    ecx,0xfffffff6
  4297e5:	jne    0x42983d
  4297e7:	cmp    esi,DWORD PTR ds:0x45306c
  4297ed:	jne    0x42983d
  4297ef:	cmp    eax,DWORD PTR ds:0x453088
  4297f5:	je     0x42983d
  4297f7:	test   edi,0x4
  4297fd:	je     0x42983d
  4297ff:	cmp    eax,0x8153
  429804:	jne    0x42983d
  429806:	add    esi,eax
  429808:	or     esi,edi
  42980a:	add    esi,ebx
  42980c:	xor    eax,eax
  42980e:	mov    ecx,DWORD PTR [ebp-0x2c]
  429811:	sub    esi,eax
  429813:	cmp    ecx,0xffffffd5
  429816:	je     0x42983d
  429818:	and    DWORD PTR [ebp-0x2c],edi
  42981b:	mov    edx,0xf1
  429820:	or     DWORD PTR [ebp-0x2c],edi
  429823:	mov    eax,DWORD PTR [ebp-0x18]
  429826:	add    edx,eax
  429828:	add    DWORD PTR [ebp-0x2c],ebx
  42982b:	add    esi,ecx
  42982d:	sub    DWORD PTR [ebp-0x18],esi
  429830:	add    edx,esi
  429832:	sub    edx,eax
  429834:	cmp    edx,eax
  429836:	je     0x42983d
  429838:	sub    edx,esi
  42983a:	mov    DWORD PTR [ebp-0x30],edx
  42983d:	mov    ecx,DWORD PTR [ebp-0x3c]
  429840:	mov    edx,DWORD PTR [ebp-0x18]
  429843:	mov    edi,DWORD PTR [ebp-0x2c]
  429846:	sub    edi,ecx
  429848:	sub    DWORD PTR [ebp-0x2c],edx
  42984b:	add    DWORD PTR [ebp-0x18],edi
  42984e:	shr    ecx,0x10
  429851:	add    edx,edi
  429853:	mov    eax,0x13
  429858:	mov    edi,DWORD PTR ds:0x4530b4
  42985e:	sub    DWORD PTR [ebp-0x2c],ecx
  429861:	or     DWORD PTR [ebp-0x2c],eax
  429864:	sub    DWORD PTR [ebp-0x2c],edx
  429867:	sub    DWORD PTR [ebp-0x2c],edi
  42986a:	cmp    ecx,0x284e
  429870:	jne    0x429b22
  429876:	sub    ecx,edx
  429878:	add    DWORD PTR [ebp-0x18],edi
  42987b:	and    ecx,ebx
  42987d:	add    DWORD PTR [ebp-0x18],ecx
  429880:	mov    edx,0x2891465b
  429885:	mov    edi,DWORD PTR [ebp-0x18]
  429888:	sub    DWORD PTR [ebp-0x18],edx
  42988b:	add    edi,edi
  42988d:	and    DWORD PTR [ebp-0x18],edi
  429890:	sub    edx,DWORD PTR [ebp-0x3c]
  429893:	mov    edi,esi
  429895:	add    edi,edi
  429897:	test   edx,0x1d
  42989d:	je     0x4298d3
  42989f:	sub    edi,esi
  4298a1:	add    DWORD PTR [ebp-0x18],edx
  4298a4:	cmp    edi,0xffffff8e
  4298a7:	jne    0x4298d3
  4298a9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4298ac:	mov    eax,0x32
  4298b1:	add    DWORD PTR [ebp-0x18],eax
  4298b4:	sub    ecx,ebx
  4298b6:	cmp    edi,eax
  4298b8:	je     0x4298d3
  4298ba:	sub    edi,edx
  4298bc:	mov    esi,DWORD PTR ds:0x453070
  4298c2:	mov    ebx,DWORD PTR [ebp-0x18]
  4298c5:	or     DWORD PTR [ebp-0x18],edi
  4298c8:	mov    DWORD PTR [ebp-0x2c],ecx
  4298cb:	add    esi,ecx
  4298cd:	xor    DWORD PTR [ebp-0x18],ebx
  4298d0:	sub    DWORD PTR [ebp-0x18],esi
  4298d3:	call   edx
  4298d5:	mov    ebx,DWORD PTR [ebp-0x18]
  4298d8:	mov    ecx,0x62
  4298dd:	sub    ecx,eax
  4298df:	sub    ecx,ebx
  4298e1:	sub    DWORD PTR [ebp-0x2c],edi
  4298e4:	cmp    ecx,DWORD PTR [ebp-0x30]
  4298e7:	jne    0x42993b
  4298e9:	cmp    ecx,DWORD PTR [ebp-0x2c]
  4298ec:	je     0x42993b
  4298ee:	cmp    ecx,0xbbc7
  4298f4:	je     0x42993b
  4298f6:	add    ecx,edi
  4298f8:	cmp    ecx,0x66
  4298fb:	je     0x42993b
  4298fd:	cmp    ecx,DWORD PTR [ebp-0x28]
  429900:	jne    0x42993b
  429902:	mov    DWORD PTR [ebp-0x2c],edi
  429905:	sub    DWORD PTR [ebp-0x2c],edi
  429908:	mov    edx,DWORD PTR [ebp-0x2c]
  42990b:	mov    edi,DWORD PTR [ebp-0x2c]
  42990e:	sub    DWORD PTR [ebp-0x2c],edx
  429911:	cmp    ecx,DWORD PTR [ebp-0x44]
  429914:	je     0x42993b
  429916:	test   edi,0xfb
  42991c:	jne    0x42993b
  42991e:	sub    DWORD PTR [ebp-0x2c],edi
  429921:	or     ecx,ebx
  429923:	add    ecx,edi
  429925:	mov    edi,0xb63a
  42992a:	mov    edx,0xfd
  42992f:	sub    edx,eax
  429931:	add    edx,edi
  429933:	add    DWORD PTR [ebp-0x2c],ecx
  429936:	add    edx,ecx
  429938:	and    DWORD PTR [ebp-0x2c],edx
  42993b:	mov    DWORD PTR [ebp-0x14],eax
  42993e:	cmp    ebx,DWORD PTR ds:0x4530b4
  429944:	je     0x42994b
  429946:	sub    ecx,edx
  429948:	xor    DWORD PTR [ebp-0x18],ecx
  42994b:	mov    edi,0x42a7aa
  429950:	xor    edx,edx
  429952:	mov    ecx,DWORD PTR [ebp-0x18]
  429955:	and    ecx,ebx
  429957:	add    edx,esi
  429959:	sub    edx,ebx
  42995b:	add    edx,ecx
  42995d:	cmp    edx,0xbad0
  429963:	jne    0x4299de
  429965:	sub    edx,edi
  429967:	mov    ecx,DWORD PTR ds:0x453064
  42996d:	cmp    edx,esi
  42996f:	je     0x4299de
  429971:	mov    eax,0x9810
  429976:	sub    DWORD PTR [ebp-0x18],edx
  429979:	add    eax,edi
  42997b:	mov    esi,DWORD PTR ds:0x453084
  429981:	or     eax,esi
  429983:	add    ecx,esi
  429985:	and    eax,edi
  429987:	and    ecx,eax
  429989:	sub    edx,edi
  42998b:	cmp    edx,esi
  42998d:	jne    0x4299de
  42998f:	add    DWORD PTR [ebp-0x18],edx
  429992:	mov    ebx,DWORD PTR [ebp-0x2c]
  429995:	sub    ebx,eax
  429997:	cmp    ebx,0x73
  42999a:	jne    0x4299de
  42999c:	xor    edx,edx
  42999e:	or     DWORD PTR [ebp-0x18],ebx
  4299a1:	mov    eax,DWORD PTR [ebp-0x2c]
  4299a4:	cmp    eax,DWORD PTR ds:0x453094
  4299aa:	jne    0x4299de
  4299ac:	cmp    eax,DWORD PTR ds:0x453078
  4299b2:	je     0x4299de
  4299b4:	sub    eax,edx
  4299b6:	sub    eax,edx
  4299b8:	cmp    eax,DWORD PTR [ebp-0x34]
  4299bb:	jne    0x4299de
  4299bd:	mov    edx,DWORD PTR [ebp-0x2c]
  4299c0:	mov    ebx,DWORD PTR [ebp-0x2c]
  4299c3:	add    ecx,edi
  4299c5:	or     DWORD PTR [ebp-0x18],ecx
  4299c8:	and    DWORD PTR [ebp-0x2c],eax
  4299cb:	add    DWORD PTR [ebp-0x18],eax
  4299ce:	and    ebx,ecx
  4299d0:	sub    DWORD PTR [ebp-0x18],edx
  4299d3:	cmp    ebx,DWORD PTR ds:0x453094
  4299d9:	je     0x4299de
  4299db:	or     DWORD PTR [ebp-0x18],ebx
  4299de:	push   DWORD PTR [ebp-0x3c]
  4299e1:	push   0x284fd069
  4299e6:	push   DWORD PTR [ebp-0x14]
  4299e9:	call   edi
  4299eb:	mov    ebx,0xbc
  4299f0:	sub    ebx,eax
  4299f2:	mov    edi,DWORD PTR [ebp-0x2c]
  4299f5:	sub    DWORD PTR [ebp-0x2c],ebx
  4299f8:	add    edi,ebx
  4299fa:	add    DWORD PTR [ebp-0x2c],edi
  4299fd:	add    DWORD PTR [ebp-0x14],0x1a
  429a04:	cmp    eax,esi
  429a06:	je     0x429a0b
  429a08:	add    DWORD PTR [ebp-0x18],ebx
  429a0b:	mov    eax,DWORD PTR [ebp-0x14]
  429a0e:	mov    esi,DWORD PTR [ebp-0x2c]
  429a11:	sub    esi,edi
  429a13:	mov    edx,DWORD PTR [ebp-0x18]
  429a16:	sub    edx,esi
  429a18:	add    edx,edx
  429a1a:	test   edx,0x53
  429a20:	je     0x429b0e
  429a26:	add    edx,eax
  429a28:	mov    ebx,DWORD PTR [ebp-0x18]
  429a2b:	add    ebx,esi
  429a2d:	mov    ecx,DWORD PTR [ebp-0x18]
  429a30:	add    ecx,edi
  429a32:	sub    ebx,esi
  429a34:	sub    DWORD PTR [ebp-0x18],edx
  429a37:	and    DWORD PTR [ebp-0x18],ebx
  429a3a:	cmp    ecx,DWORD PTR ds:0x4530b4
  429a40:	jne    0x429b0e
  429a46:	mov    ebx,DWORD PTR [ebp-0x18]
  429a49:	sub    DWORD PTR [ebp-0x2c],ebx
  429a4c:	cmp    ecx,0x6c6e
  429a52:	jne    0x429b0e
  429a58:	mov    edx,DWORD PTR [ebp-0x2c]
  429a5b:	mov    edi,DWORD PTR [ebp-0x2c]
  429a5e:	sub    ecx,edx
  429a60:	cmp    edi,DWORD PTR ds:0x45308c
  429a66:	je     0x429b0e
  429a6c:	add    edi,edi
  429a6e:	add    edi,eax
  429a70:	mov    esi,ebx
  429a72:	and    DWORD PTR [ebp-0x18],ecx
  429a75:	or     edi,ebx
  429a77:	mov    ecx,0x48
  429a7c:	test   edi,0x32bd
  429a82:	je     0x429b0e
  429a88:	cmp    esi,DWORD PTR ds:0x4530a8
  429a8e:	je     0x429b0e
  429a90:	mov    ebx,DWORD PTR [ebp-0x2c]
  429a93:	cmp    ebx,DWORD PTR ds:0x453094
  429a99:	jne    0x429b0e
  429a9b:	mov    edx,DWORD PTR [ebp-0x2c]
  429a9e:	add    DWORD PTR [ebp-0x2c],ecx
  429aa1:	mov    ecx,DWORD PTR [ebp-0x18]
  429aa4:	add    DWORD PTR [ebp-0x2c],esi
  429aa7:	cmp    ecx,edi
  429aa9:	je     0x429b0e
  429aab:	mov    esi,0x2f61
  429ab0:	add    edx,eax
  429ab2:	cmp    edx,ebx
  429ab4:	jne    0x429b0e
  429ab6:	mov    DWORD PTR [ebp-0x18],edi
  429ab9:	add    ebx,ecx
  429abb:	mov    edi,DWORD PTR ds:0x453084
  429ac1:	and    edi,eax
  429ac3:	and    ebx,eax
  429ac5:	add    esi,eax
  429ac7:	sub    DWORD PTR [ebp-0x18],esi
  429aca:	and    edi,edx
  429acc:	cmp    ebx,edx
  429ace:	je     0x429b0e
  429ad0:	sub    ebx,edx
  429ad2:	mov    esi,DWORD PTR [ebp-0x2c]
  429ad5:	cmp    edi,DWORD PTR ds:0x4530a8
  429adb:	je     0x429b0e
  429add:	mov    ecx,DWORD PTR [ebp-0x18]
  429ae0:	mov    edx,DWORD PTR [ebp-0x2c]
  429ae3:	sub    ecx,edx
  429ae5:	or     DWORD PTR [ebp-0x2c],esi
  429ae8:	add    edi,ebx
  429aea:	add    DWORD PTR [ebp-0x18],ecx
  429aed:	sub    DWORD PTR [ebp-0x18],esi
  429af0:	cmp    edi,DWORD PTR [ebp-0x24]
  429af3:	je     0x429b0e
  429af5:	cmp    edi,DWORD PTR [ebp-0x48]
  429af8:	je     0x429b0e
  429afa:	mov    ecx,DWORD PTR [ebp-0x18]
  429afd:	or     ecx,esi
  429aff:	mov    esi,DWORD PTR [ebp-0x2c]
  429b02:	add    DWORD PTR [ebp-0x2c],ecx
  429b05:	sub    DWORD PTR [ebp-0x2c],edx
  429b08:	add    DWORD PTR [ebp-0x18],esi
  429b0b:	sub    DWORD PTR [ebp-0x18],edi
  429b0e:	call   eax
  429b10:	mov    edx,DWORD PTR [ebp-0x2c]
  429b13:	and    edx,ebx
  429b15:	add    edx,ebx
  429b17:	sub    DWORD PTR [ebp-0x18],edx
  429b1a:	sub    DWORD PTR [ebp-0x18],edx
  429b1d:	sub    edx,ebx
  429b1f:	add    DWORD PTR [ebp-0x2c],edx
  429b22:	and    edx,ebx
  429b24:	mov    ecx,DWORD PTR [ebp-0x2c]
  429b27:	and    DWORD PTR [ebp-0x2c],edx
  429b2a:	sub    DWORD PTR [ebp-0x18],ecx
  429b2d:	mov    eax,0xa0
  429b32:	add    DWORD PTR [ebp-0x2c],eax
  429b35:	mov    eax,esi
  429b37:	test   eax,0x66
  429b3c:	je     0x429b7b
  429b3e:	mov    edx,DWORD PTR [ebp-0x2c]
  429b41:	cmp    eax,ecx
  429b43:	jne    0x429b7b
  429b45:	mov    ebx,esi
  429b47:	add    edx,edi
  429b49:	mov    ecx,DWORD PTR [ebp-0x2c]
  429b4c:	cmp    edi,DWORD PTR ds:0x4530a8
  429b52:	je     0x429b7b
  429b54:	add    edx,esi
  429b56:	and    ebx,edx
  429b58:	mov    esi,0xf
  429b5d:	mov    edx,0x81
  429b62:	sub    DWORD PTR [ebp-0x18],ebx
  429b65:	and    DWORD PTR [ebp-0x18],eax
  429b68:	or     DWORD PTR [ebp-0x18],ecx
  429b6b:	sub    edx,ebx
  429b6d:	cmp    eax,DWORD PTR ds:0x453094
  429b73:	je     0x429b7b
  429b75:	mov    DWORD PTR [ebp-0x18],edx
  429b78:	and    DWORD PTR [ebp-0x2c],esi
  429b7b:	pop    edi
  429b7c:	cmp    edi,ecx
  429b7e:	jne    0x429b83
  429b80:	mov    DWORD PTR [ebp-0x20],edi
  429b83:	pop    esi
  429b84:	cmp    esi,0xc9e
  429b8a:	jne    0x429b98
  429b8c:	mov    eax,0x64
  429b91:	sub    eax,esi
  429b93:	or     eax,ecx
  429b95:	add    DWORD PTR [ebp-0x2c],eax
  429b98:	pop    ebx
  429b99:	add    ecx,esi
  429b9b:	mov    eax,DWORD PTR [ebp-0x18]
  429b9e:	and    DWORD PTR [ebp-0x18],eax
  429ba1:	mov    eax,DWORD PTR ds:0x453068
  429ba7:	add    DWORD PTR [ebp-0x2c],eax
  429baa:	sub    DWORD PTR [ebp-0x18],ecx
  429bad:	leave  
  429bae:	ret    
  429baf:	int3   
  429bb0:	int3   
  429bb1:	int3   
  429bb2:	int3   
  429bb3:	int3   
  429bb4:	push   ebp
  429bb5:	mov    ebp,esp
  429bb7:	sub    esp,0x48
  429bba:	xor    ecx,ecx
  429bbc:	mov    edx,DWORD PTR ds:0x453098
  429bc2:	and    ecx,edx
  429bc4:	add    ecx,edx
  429bc6:	mov    DWORD PTR [ebp-0x38],ecx
  429bc9:	push   ebx
  429bca:	mov    ecx,DWORD PTR ds:0x453098
  429bd0:	xor    eax,eax
  429bd2:	sub    DWORD PTR [ebp-0x38],eax
  429bd5:	add    eax,edx
  429bd7:	add    ecx,edx
  429bd9:	add    ecx,edx
  429bdb:	add    DWORD PTR [ebp-0x38],ecx
  429bde:	add    eax,edx
  429be0:	add    DWORD PTR [ebp-0x38],eax
  429be3:	push   esi
  429be4:	mov    ecx,0x8174
  429be9:	mov    ebx,DWORD PTR [ebp-0x38]
  429bec:	sub    ecx,eax
  429bee:	cmp    ebx,eax
  429bf0:	je     0x429c39
  429bf2:	sub    DWORD PTR [ebp-0x38],ebx
  429bf5:	mov    esi,DWORD PTR [ebp-0x38]
  429bf8:	mov    ebx,DWORD PTR [ebp-0x38]
  429bfb:	sub    ebx,edx
  429bfd:	cmp    ebx,0xffffffa7
  429c00:	je     0x429c39
  429c02:	cmp    esi,DWORD PTR [ebp-0x28]
  429c05:	je     0x429c39
  429c07:	add    DWORD PTR [ebp-0x38],ecx
  429c0a:	mov    eax,DWORD PTR [ebp-0x38]
  429c0d:	and    ebx,edx
  429c0f:	cmp    eax,DWORD PTR ds:0x453098
  429c15:	je     0x429c39
  429c17:	or     DWORD PTR [ebp-0x38],ecx
  429c1a:	sub    DWORD PTR [ebp-0x38],ebx
  429c1d:	mov    edx,DWORD PTR ds:0x453098
  429c23:	add    eax,ebx
  429c25:	add    eax,ecx
  429c27:	mov    ebx,0x7b
  429c2c:	add    DWORD PTR [ebp-0x38],esi
  429c2f:	sub    edx,eax
  429c31:	sub    edx,esi
  429c33:	add    DWORD PTR [ebp-0x38],ebx
  429c36:	add    DWORD PTR [ebp-0x38],edx
  429c39:	push   edi
  429c3a:	and    ebx,ecx
  429c3c:	add    DWORD PTR [ebp-0x38],eax
  429c3f:	add    ebx,ecx
  429c41:	sub    edx,ecx
  429c43:	mov    ecx,DWORD PTR [ebp-0x38]
  429c46:	mov    eax,DWORD PTR [ebp-0x38]
  429c49:	add    DWORD PTR [ebp-0x38],ecx
  429c4c:	add    DWORD PTR [ebp-0x38],ebx
  429c4f:	sub    DWORD PTR [ebp-0x38],ebx
  429c52:	sub    DWORD PTR [ebp-0x38],edx
  429c55:	add    DWORD PTR [ebp-0x38],ecx
  429c58:	cmp    eax,DWORD PTR ds:0x453098
  429c5e:	jne    0x429c72
  429c60:	test   eax,0x82d2
  429c65:	je     0x429c72
  429c67:	add    eax,edx
  429c69:	mov    esi,DWORD PTR [ebp-0x38]
  429c6c:	sub    DWORD PTR [ebp-0x38],eax
  429c6f:	sub    DWORD PTR [ebp-0x38],esi
  429c72:	add    DWORD PTR [ebp-0x38],esi
  429c75:	mov    DWORD PTR [ebp-0x20],0x5ec41af3
  429c7c:	mov    edi,DWORD PTR [ebp-0x38]
  429c7f:	mov    eax,DWORD PTR [ebp-0x38]
  429c82:	test   edi,0x70
  429c88:	jne    0x429c95
  429c8a:	add    DWORD PTR [ebp-0x38],eax
  429c8d:	cmp    edi,DWORD PTR [ebp-0x30]
  429c90:	je     0x429c95
  429c92:	add    DWORD PTR [ebp-0x38],edi
  429c95:	call   0x42a653
  429c9a:	mov    ecx,esi
  429c9c:	or     DWORD PTR [ebp-0x38],ecx
  429c9f:	mov    DWORD PTR [ebp-0xc],eax
  429ca2:	cmp    edi,DWORD PTR ds:0x453098
  429ca8:	je     0x429cf3
  429caa:	cmp    ecx,0x5
  429cad:	je     0x429cf3
  429caf:	mov    esi,ebx
  429cb1:	mov    ebx,DWORD PTR [ebp-0x38]
  429cb4:	cmp    ebx,0xffffff9c
  429cb7:	jne    0x429cf3
  429cb9:	mov    edx,0xdc
  429cbe:	or     esi,edx
  429cc0:	test   ebx,0x7429
  429cc6:	je     0x429cf3
  429cc8:	and    DWORD PTR [ebp-0x38],eax
  429ccb:	add    DWORD PTR [ebp-0x38],eax
  429cce:	add    ebx,ebx
  429cd0:	mov    ecx,DWORD PTR [ebp-0x38]
  429cd3:	add    DWORD PTR [ebp-0x38],ebx
  429cd6:	cmp    ecx,0xcc86
  429cdc:	jne    0x429cf3
  429cde:	sub    esi,edx
  429ce0:	mov    eax,DWORD PTR [ebp-0x38]
  429ce3:	sub    DWORD PTR [ebp-0x38],esi
  429ce6:	add    DWORD PTR [ebp-0x38],ecx
  429ce9:	cmp    eax,0x7460
  429cee:	jne    0x429cf3
  429cf0:	add    DWORD PTR [ebp-0x38],eax
  429cf3:	call   0x42a653
  429cf8:	mov    esi,DWORD PTR [ebp-0x38]
  429cfb:	mov    edi,DWORD PTR ds:0x453098
  429d01:	sub    DWORD PTR [ebp-0x38],esi
  429d04:	and    ebx,edi
  429d06:	add    ebx,esi
  429d08:	cmp    ebx,edi
  429d0a:	jne    0x429d46
  429d0c:	mov    edi,0x2b
  429d11:	and    ebx,eax
  429d13:	mov    esi,DWORD PTR [ebp-0x38]
  429d16:	cmp    eax,DWORD PTR ds:0x453098
  429d1c:	jne    0x429d46
  429d1e:	cmp    esi,ebx
  429d20:	je     0x429d41
  429d22:	add    DWORD PTR [ebp-0x38],ebx
  429d25:	mov    ebx,DWORD PTR [ebp-0x38]
  429d28:	mov    ecx,DWORD PTR [ebp-0x38]
  429d2b:	sub    DWORD PTR [ebp-0x38],ebx
  429d2e:	add    DWORD PTR [ebp-0x38],esi
  429d31:	or     ecx,ebx
  429d33:	cmp    ecx,ebx
  429d35:	jne    0x429d41
  429d37:	mov    ebx,ecx
  429d39:	xor    esi,esi
  429d3b:	or     DWORD PTR [ebp-0x38],esi
  429d3e:	sub    DWORD PTR [ebp-0x38],ebx
  429d41:	sub    edi,esi
  429d43:	sub    DWORD PTR [ebp-0x38],edi
  429d46:	mov    DWORD PTR [ebp-0x14],eax
  429d49:	mov    ecx,DWORD PTR [ebp-0x38]
  429d4c:	sub    DWORD PTR [ebp-0x38],ecx
  429d4f:	call   0x42a653
  429d54:	xor    esi,esi
  429d56:	mov    ecx,DWORD PTR [ebp-0x38]
  429d59:	add    DWORD PTR [ebp-0x38],ecx
  429d5c:	add    esi,edi
  429d5e:	xor    DWORD PTR [ebp-0x38],esi
  429d61:	mov    DWORD PTR [ebp-0x40],eax
  429d64:	sub    ebx,ecx
  429d66:	mov    edi,0x6e
  429d6b:	add    DWORD PTR [ebp-0x38],esi
  429d6e:	mov    eax,0xb
  429d73:	add    ebx,ecx
  429d75:	mov    DWORD PTR [ebp-0x38],edi
  429d78:	or     DWORD PTR [ebp-0x38],ebx
  429d7b:	test   ebx,0xe8
  429d81:	je     0x429d93
  429d83:	xor    ecx,ecx
  429d85:	mov    edi,0xe850
  429d8a:	sub    DWORD PTR [ebp-0x38],edi
  429d8d:	and    DWORD PTR [ebp-0x38],esi
  429d90:	add    DWORD PTR [ebp-0x38],ecx
  429d93:	add    DWORD PTR [ebp-0x38],eax
  429d96:	mov    ecx,DWORD PTR [ebp-0x14]
  429d99:	cmp    ecx,0xffffff93
  429d9c:	jne    0x429dfe
  429d9e:	xor    eax,eax
  429da0:	sub    esi,eax
  429da2:	mov    ebx,DWORD PTR [ebp-0x38]
  429da5:	cmp    ebx,0xd13e
  429dab:	jne    0x429dfe
  429dad:	add    DWORD PTR [ebp-0x38],edi
  429db0:	cmp    ecx,0xffffffe0
  429db3:	jne    0x429dfe
  429db5:	add    DWORD PTR [ebp-0x38],esi
  429db8:	mov    eax,DWORD PTR [ebp-0x38]
  429dbb:	sub    eax,ebx
  429dbd:	sub    eax,esi
  429dbf:	cmp    ecx,0xffffffac
  429dc2:	jne    0x429dfe
  429dc4:	mov    edx,0xfb
  429dc9:	cmp    ecx,DWORD PTR ds:0x453098
  429dcf:	jne    0x429dfe
  429dd1:	mov    ebx,DWORD PTR [ebp-0x38]
  429dd4:	mov    esi,DWORD PTR [ebp-0x38]
  429dd7:	or     eax,esi
  429dd9:	or     DWORD PTR [ebp-0x38],edx
  429ddc:	cmp    eax,DWORD PTR [ebp-0x34]
  429ddf:	jne    0x429dfe
  429de1:	sub    DWORD PTR [ebp-0x38],ebx
  429de4:	cmp    esi,0x121
  429dea:	je     0x429dfe
  429dec:	add    eax,ebx
  429dee:	test   ecx,0xe7
  429df4:	jne    0x429dfe
  429df6:	or     eax,esi
  429df8:	or     DWORD PTR [ebp-0x38],ecx
  429dfb:	xor    DWORD PTR [ebp-0x38],eax
  429dfe:	sub    ecx,DWORD PTR [ebp-0xc]
  429e01:	mov    edx,0x85
  429e06:	mov    esi,0xc4
  429e0b:	add    esi,edx
  429e0d:	add    DWORD PTR [ebp-0x38],ecx
  429e10:	test   ecx,0xe408
  429e16:	jne    0x429eee
  429e1c:	mov    edi,0x7b
  429e21:	mov    eax,DWORD PTR [ebp-0x38]
  429e24:	add    esi,esi
  429e26:	add    edi,ecx
  429e28:	sub    eax,ecx
  429e2a:	cmp    ebx,DWORD PTR [ebp-0x18]
  429e2d:	jne    0x429eee
  429e33:	mov    edx,DWORD PTR [ebp-0x38]
  429e36:	mov    ebx,0x58
  429e3b:	cmp    edi,0xffffff83
  429e3e:	je     0x429eee
  429e44:	sub    DWORD PTR [ebp-0x38],ebx
  429e47:	or     esi,eax
  429e49:	or     edx,ebx
  429e4b:	mov    ebx,DWORD PTR [ebp-0x38]
  429e4e:	mov    eax,DWORD PTR [ebp-0x38]
  429e51:	add    edi,esi
  429e53:	add    edx,edi
  429e55:	test   eax,0x24
  429e5a:	je     0x429eee
  429e60:	mov    edi,DWORD PTR [ebp-0x38]
  429e63:	sub    ebx,eax
  429e65:	mov    eax,DWORD PTR [ebp-0x38]
  429e68:	add    DWORD PTR [ebp-0x38],eax
  429e6b:	test   ebx,0xce
  429e71:	je     0x429eee
  429e73:	sub    edx,ecx
  429e75:	mov    esi,DWORD PTR [ebp-0x38]
  429e78:	sub    DWORD PTR [ebp-0x38],ebx
  429e7b:	cmp    esi,ecx
  429e7d:	je     0x429eee
  429e7f:	sub    edi,ebx
  429e81:	cmp    esi,0x10
  429e84:	jne    0x429eee
  429e86:	mov    eax,0x32
  429e8b:	mov    ebx,0x4
  429e90:	or     ebx,edx
  429e92:	add    edi,ebx
  429e94:	add    DWORD PTR [ebp-0x38],edi
  429e97:	mov    DWORD PTR [ebp-0x38],eax
  429e9a:	add    esi,edx
  429e9c:	sub    esi,edi
  429e9e:	mov    DWORD PTR [ebp-0x38],eax
  429ea1:	test   esi,0x11
  429ea7:	je     0x429eee
  429ea9:	mov    ebx,0xf1
  429eae:	sub    DWORD PTR [ebp-0x38],esi
  429eb1:	mov    esi,0xb05a
  429eb6:	add    DWORD PTR [ebp-0x38],ebx
  429eb9:	sub    esi,edx
  429ebb:	cmp    esi,0xf2da
  429ec1:	je     0x429eee
  429ec3:	test   esi,0x6e
  429ec9:	je     0x429eee
  429ecb:	sub    esi,edi
  429ecd:	cmp    edi,0x4126c0
  429ed3:	jne    0x429eee
  429ed5:	mov    edi,ecx
  429ed7:	add    edi,esi
  429ed9:	cmp    edi,esi
  429edb:	jne    0x429eee
  429edd:	sub    edi,ebx
  429edf:	and    edi,ecx
  429ee1:	mov    ebx,0xc0
  429ee6:	or     DWORD PTR [ebp-0x38],ebx
  429ee9:	sub    edi,esi
  429eeb:	add    DWORD PTR [ebp-0x38],edi
  429eee:	xor    ecx,0xf6b034fa
  429ef4:	sub    ebx,edi
  429ef6:	mov    esi,DWORD PTR [ebp-0x38]
  429ef9:	cmp    ebx,0x73
  429efc:	jne    0x429f72
  429efe:	mov    edx,esi
  429f00:	mov    eax,DWORD PTR [ebp-0x38]
  429f03:	add    ebx,edi
  429f05:	sub    DWORD PTR [ebp-0x38],ecx
  429f08:	and    edx,edi
  429f0a:	cmp    eax,DWORD PTR ds:0x453098
  429f10:	je     0x429f72
  429f12:	mov    edi,DWORD PTR [ebp-0x38]
  429f15:	sub    DWORD PTR [ebp-0x38],edi
  429f18:	mov    esi,0x3b95
  429f1d:	or     DWORD PTR [ebp-0x38],esi
  429f20:	add    DWORD PTR [ebp-0x38],edi
  429f23:	add    DWORD PTR [ebp-0x38],edx
  429f26:	cmp    ebx,0x7
  429f29:	je     0x429f72
  429f2b:	xor    edx,edx
  429f2d:	mov    edi,0x14c
  429f32:	sub    DWORD PTR [ebp-0x38],edx
  429f35:	cmp    eax,DWORD PTR [ebp-0x34]
  429f38:	jne    0x429f72
  429f3a:	mov    esi,DWORD PTR ds:0x453098
  429f40:	mov    edx,DWORD PTR [ebp-0x38]
  429f43:	and    edi,ebx
  429f45:	sub    esi,ecx
  429f47:	sub    DWORD PTR [ebp-0x38],edx
  429f4a:	sub    DWORD PTR [ebp-0x38],edi
  429f4d:	test   esi,0xf8
  429f53:	jne    0x429f72
  429f55:	test   eax,0x84
  429f5a:	je     0x429f72
  429f5c:	sub    DWORD PTR [ebp-0x38],edx
  429f5f:	add    DWORD PTR [ebp-0x38],eax
  429f62:	mov    eax,DWORD PTR [ebp-0x38]
  429f65:	xor    edi,edi
  429f67:	and    DWORD PTR [ebp-0x38],edi
  429f6a:	add    DWORD PTR [ebp-0x38],esi
  429f6d:	sub    eax,edi
  429f6f:	sub    DWORD PTR [ebp-0x38],eax
  429f72:	mov    ebx,DWORD PTR [ebp-0x40]
  429f75:	mov    edx,DWORD PTR ds:0x453098
  429f7b:	cmp    ebx,DWORD PTR [ebp-0x34]
  429f7e:	je     0x429f90
  429f80:	add    edi,edi
  429f82:	mov    eax,DWORD PTR [ebp-0x38]
  429f85:	sub    DWORD PTR [ebp-0x38],edx
  429f88:	mov    edi,DWORD PTR [ebp-0x38]
  429f8b:	and    eax,edi
  429f8d:	add    DWORD PTR [ebp-0x38],eax
  429f90:	sub    ebx,DWORD PTR [ebp-0x14]
  429f93:	sub    eax,ebx
  429f95:	mov    esi,DWORD PTR ds:0x45305c
  429f9b:	mov    edi,0x17
  429fa0:	sub    DWORD PTR [ebp-0x38],edi
  429fa3:	add    DWORD PTR [ebp-0x38],esi
  429fa6:	mov    DWORD PTR [ebp-0x38],ecx
  429fa9:	add    eax,ebx
  429fab:	add    eax,esi
  429fad:	cmp    eax,0xffffffbd
  429fb0:	je     0x42a0e3
  429fb6:	mov    edi,DWORD PTR [ebp-0x38]
  429fb9:	test   edi,0xf0b2
  429fbf:	jne    0x42a0e3
  429fc5:	mov    esi,ecx
  429fc7:	cmp    eax,0x6b
  429fca:	jne    0x42a0e3
  429fd0:	xor    edx,edx
  429fd2:	add    esi,ecx
  429fd4:	add    DWORD PTR [ebp-0x38],ecx
  429fd7:	mov    DWORD PTR [ebp-0x38],edx
  429fda:	cmp    eax,DWORD PTR ds:0x45305c
  429fe0:	je     0x42a0e3
  429fe6:	mov    edx,0xf5
  429feb:	sub    DWORD PTR [ebp-0x38],edx
  429fee:	cmp    eax,DWORD PTR [ebp-0x44]
  429ff1:	je     0x42a0e3
  429ff7:	sub    eax,edi
  429ff9:	mov    edx,0xd1
  429ffe:	sub    eax,edi
  42a000:	cmp    eax,0xffffff86
  42a003:	je     0x42a0e3
  42a009:	or     eax,ebx
  42a00b:	add    edx,esi
  42a00d:	and    edx,esi
  42a00f:	test   eax,0xc0318002
  42a014:	jne    0x42a0e3
  42a01a:	cmp    eax,0xffffff92
  42a01d:	je     0x42a0e3
  42a023:	mov    edi,DWORD PTR [ebp-0x38]
  42a026:	mov    esi,0xa3
  42a02b:	test   edx,0xd56c
  42a031:	jne    0x42a0e3
  42a037:	sub    eax,ebx
  42a039:	add    DWORD PTR [ebp-0x38],ecx
  42a03c:	mov    DWORD PTR [ebp-0x38],edx
  42a03f:	mov    edx,0x6a1b
  42a044:	or     edi,eax
  42a046:	sub    DWORD PTR [ebp-0x38],edx
  42a049:	add    DWORD PTR [ebp-0x38],edi
  42a04c:	xor    edi,edi
  42a04e:	add    DWORD PTR [ebp-0x38],edi
  42a051:	or     DWORD PTR [ebp-0x38],edi
  42a054:	sub    esi,edi
  42a056:	sub    DWORD PTR [ebp-0x38],edi
  42a059:	or     DWORD PTR [ebp-0x38],edi
  42a05c:	add    esi,ecx
  42a05e:	add    DWORD PTR [ebp-0x38],edi
  42a061:	sub    esi,ebx
  42a063:	or     esi,edi
  42a065:	cmp    esi,edx
  42a067:	je     0x42a0e3
  42a069:	test   esi,0x22d6
  42a06f:	jne    0x42a0e3
  42a071:	xor    edx,edx
  42a073:	sub    DWORD PTR [ebp-0x38],esi
  42a076:	mov    edi,0xde
  42a07b:	cmp    eax,0x1a
  42a07e:	je     0x42a0e3
  42a080:	add    edi,edi
  42a082:	mov    esi,ecx
  42a084:	add    edi,ebx
  42a086:	sub    DWORD PTR [ebp-0x38],edi
  42a089:	mov    edi,DWORD PTR ds:0x45305c
  42a08f:	add    esi,eax
  42a091:	cmp    ebx,DWORD PTR ds:0x453098
  42a097:	jne    0x42a0e3
  42a099:	mov    eax,DWORD PTR [ebp-0x38]
  42a09c:	add    edi,esi
  42a09e:	mov    esi,DWORD PTR [ebp-0x38]
  42a0a1:	or     DWORD PTR [ebp-0x38],esi
  42a0a4:	cmp    ebx,DWORD PTR [ebp-0x24]
  42a0a7:	je     0x42a0e3
  42a0a9:	cmp    ecx,DWORD PTR [ebp-0x4]
  42a0ac:	jne    0x42a0e3
  42a0ae:	sub    DWORD PTR [ebp-0x38],edi
  42a0b1:	sub    DWORD PTR [ebp-0x38],eax
  42a0b4:	xor    esi,esi
  42a0b6:	mov    edi,0x7a
  42a0bb:	and    esi,eax
  42a0bd:	sub    DWORD PTR [ebp-0x38],edx
  42a0c0:	add    DWORD PTR [ebp-0x38],esi
  42a0c3:	and    edi,edx
  42a0c5:	sub    edi,esi
  42a0c7:	cmp    ebx,DWORD PTR ds:0x453098
  42a0cd:	je     0x42a0e3
  42a0cf:	xor    esi,esi
  42a0d1:	add    DWORD PTR [ebp-0x38],esi
  42a0d4:	mov    edx,DWORD PTR [ebp-0x38]
  42a0d7:	cmp    edx,DWORD PTR [ebp-0x38]
  42a0da:	je     0x42a0e3
  42a0dc:	sub    edx,edi
  42a0de:	sub    edx,esi
  42a0e0:	sub    DWORD PTR [ebp-0x38],edx
  42a0e3:	xor    ebx,0xf6b034ff
  42a0e9:	cmp    ebx,0xffffffce
  42a0ec:	jne    0x42a10f
  42a0ee:	mov    esi,DWORD PTR ds:0x4530b0
  42a0f4:	test   ebx,0xc8
  42a0fa:	je     0x42a10f
  42a0fc:	sub    DWORD PTR [ebp-0x38],ebx
  42a0ff:	sub    DWORD PTR [ebp-0x38],ebx
  42a102:	add    esi,edx
  42a104:	cmp    ebx,DWORD PTR ds:0x453098
  42a10a:	jne    0x42a10f
  42a10c:	add    DWORD PTR [ebp-0x38],esi
  42a10f:	cmp    ecx,ebx
  42a111:	je     0x42a4a0
  42a117:	add    esi,eax
  42a119:	sub    esi,ebx
  42a11b:	or     esi,ecx
  42a11d:	add    DWORD PTR [ebp-0x38],edx
  42a120:	and    esi,eax
  42a122:	add    esi,eax
  42a124:	sub    esi,edi
  42a126:	cmp    ecx,0xf3be
  42a12c:	jne    0x42a17d
  42a12e:	mov    ecx,DWORD PTR [ebp-0x38]
  42a131:	cmp    esi,DWORD PTR ds:0x453098
  42a137:	jne    0x42a17d
  42a139:	mov    edx,0xfc
  42a13e:	mov    DWORD PTR [ebp-0x38],esi
  42a141:	add    DWORD PTR [ebp-0x38],ecx
  42a144:	cmp    esi,DWORD PTR [ebp-0x8]
  42a147:	jne    0x42a17d
  42a149:	sub    edx,ecx
  42a14b:	cmp    eax,0x5d
  42a14e:	je     0x42a17d
  42a150:	and    edx,edi
  42a152:	add    edx,ebx
  42a154:	mov    esi,DWORD PTR [ebp-0x38]
  42a157:	mov    ecx,DWORD PTR [ebp-0x38]
  42a15a:	cmp    ecx,DWORD PTR [ebp-0x4]
  42a15d:	jne    0x42a17d
  42a15f:	cmp    ecx,eax
  42a161:	jne    0x42a17d
  42a163:	mov    ebx,DWORD PTR [ebp-0x38]
  42a166:	sub    DWORD PTR [ebp-0x38],esi
  42a169:	add    DWORD PTR [ebp-0x38],ecx
  42a16c:	sub    ebx,esi
  42a16e:	mov    edi,DWORD PTR [ebp-0x38]
  42a171:	sub    edi,eax
  42a173:	mov    DWORD PTR [ebp-0x38],ebx
  42a176:	or     edx,eax
  42a178:	sub    edi,edx
  42a17a:	add    DWORD PTR [ebp-0x38],edi
  42a17d:	mov    edx,0x2c5e2c25
  42a182:	xor    ecx,ecx
  42a184:	sub    DWORD PTR [ebp-0x38],ebx
  42a187:	xor    ebx,ebx
  42a189:	and    DWORD PTR [ebp-0x38],edx
  42a18c:	add    ecx,ebx
  42a18e:	sub    DWORD PTR [ebp-0x38],ecx
  42a191:	add    edx,0xd3e70473
  42a197:	mov    eax,DWORD PTR [ebp-0x38]
  42a19a:	mov    edi,DWORD PTR ds:0x453074
  42a1a0:	cmp    eax,0x4a28
  42a1a5:	je     0x42a1bf
  42a1a7:	mov    esi,0x20
  42a1ac:	mov    ebx,DWORD PTR ds:0x453098
  42a1b2:	sub    ebx,esi
  42a1b4:	add    DWORD PTR [ebp-0x38],eax
  42a1b7:	sub    edi,ecx
  42a1b9:	sub    DWORD PTR [ebp-0x38],ebx
  42a1bc:	sub    DWORD PTR [ebp-0x38],edi
  42a1bf:	push   edx
  42a1c0:	call   DWORD PTR ds:0x451f3c
  42a1c6:	mov    ebx,DWORD PTR [ebp-0x38]
  42a1c9:	mov    edx,0xc46c
  42a1ce:	sub    ebx,esi
  42a1d0:	cmp    ebx,DWORD PTR ds:0x4530b0
  42a1d6:	je     0x42a23a
  42a1d8:	mov    ecx,DWORD PTR [ebp-0x38]
  42a1db:	mov    esi,DWORD PTR [ebp-0x38]
  42a1de:	cmp    ebx,0xffffffc7
  42a1e1:	jne    0x42a23a
  42a1e3:	mov    edi,DWORD PTR [ebp-0x38]
  42a1e6:	and    esi,eax
  42a1e8:	cmp    ebx,DWORD PTR ds:0x4530b0
  42a1ee:	jne    0x42a23a
  42a1f0:	add    edx,edi
  42a1f2:	sub    DWORD PTR [ebp-0x38],edx
  42a1f5:	test   edi,0x80
  42a1fb:	je     0x42a23a
  42a1fd:	xor    edi,edi
  42a1ff:	add    ebx,edx
  42a201:	mov    edx,0xcd34
  42a206:	cmp    ebx,0x904060a0
  42a20c:	je     0x42a23a
  42a20e:	add    esi,edi
  42a210:	cmp    esi,0x52
  42a213:	je     0x42a23a
  42a215:	mov    edx,ebx
  42a217:	sub    DWORD PTR [ebp-0x38],esi
  42a21a:	or     DWORD PTR [ebp-0x38],ecx
  42a21d:	mov    ebx,DWORD PTR [ebp-0x38]
  42a220:	cmp    edx,0x66
  42a223:	je     0x42a23a
  42a225:	xor    ecx,ecx
  42a227:	mov    esi,0x1f
  42a22c:	sub    DWORD PTR [ebp-0x38],ebx
  42a22f:	and    DWORD PTR [ebp-0x38],ecx
  42a232:	sub    edx,edi
  42a234:	sub    DWORD PTR [ebp-0x38],esi
  42a237:	mov    DWORD PTR [ebp-0x38],edx
  42a23a:	or     eax,eax
  42a23c:	je     0x42a4a0
  42a242:	add    DWORD PTR [ebp-0x38],ebx
  42a245:	add    DWORD PTR [ebp-0x20],0x2ef5e0ea
  42a24c:	sub    DWORD PTR [ebp-0x38],ebx
  42a24f:	lea    esi,[eax+0x790]
  42a255:	mov    ecx,DWORD PTR ds:0x453074
  42a25b:	sub    ecx,eax
  42a25d:	cmp    ecx,0xffffffc6
  42a260:	jne    0x42a285
  42a262:	xor    eax,eax
  42a264:	mov    edx,eax
  42a266:	add    DWORD PTR [ebp-0x38],esi
  42a269:	add    ecx,esi
  42a26b:	test   ecx,0xed82
  42a271:	je     0x42a285
  42a273:	sub    DWORD PTR [ebp-0x38],edi
  42a276:	mov    eax,DWORD PTR [ebp-0x38]
  42a279:	xor    DWORD PTR [ebp-0x38],edi
  42a27c:	mov    DWORD PTR [ebp-0x38],ecx
  42a27f:	sub    DWORD PTR [ebp-0x38],eax
  42a282:	add    DWORD PTR [ebp-0x38],edx
  42a285:	inc    esi
  42a286:	mov    ecx,DWORD PTR ds:0x453074
  42a28c:	cmp    esi,DWORD PTR ds:0x45305c
  42a292:	je     0x42a334
  42a298:	add    ecx,ecx
  42a29a:	and    DWORD PTR [ebp-0x38],edi
  42a29d:	mov    ebx,DWORD PTR [ebp-0x38]
  42a2a0:	add    ebx,edx
  42a2a2:	mov    edx,edi
  42a2a4:	and    ebx,ecx
  42a2a6:	cmp    ebx,esi
  42a2a8:	je     0x42a334
  42a2ae:	mov    ecx,DWORD PTR [ebp-0x38]
  42a2b1:	xor    edx,edx
  42a2b3:	cmp    esi,0xfffffff4
  42a2b6:	jne    0x42a334
  42a2b8:	test   esi,0xdc
  42a2be:	jne    0x42a334
  42a2c0:	mov    edx,DWORD PTR [ebp-0x38]
  42a2c3:	sub    edx,esi
  42a2c5:	cmp    ebx,DWORD PTR [ebp-0x30]
  42a2c8:	jne    0x42a334
  42a2ca:	cmp    edx,DWORD PTR ds:0x453074
  42a2d0:	jne    0x42a334
  42a2d2:	add    DWORD PTR [ebp-0x38],ebx
  42a2d5:	cmp    edx,DWORD PTR [ebp-0x10]
  42a2d8:	je     0x42a334
  42a2da:	mov    ebx,0xf7
  42a2df:	sub    edx,eax
  42a2e1:	add    edx,ebx
  42a2e3:	cmp    ecx,ebx
  42a2e5:	jne    0x42a334
  42a2e7:	cmp    ecx,0xffffffdf
  42a2ea:	jne    0x42a334
  42a2ec:	or     DWORD PTR [ebp-0x38],edx
  42a2ef:	mov    ebx,DWORD PTR [ebp-0x38]
  42a2f2:	mov    edx,DWORD PTR ds:0x453098
  42a2f8:	add    DWORD PTR [ebp-0x38],ecx
  42a2fb:	cmp    ebx,0xffffffbc
  42a2fe:	jne    0x42a334
  42a300:	mov    ecx,DWORD PTR ds:0x45305c
  42a306:	mov    edx,DWORD PTR [ebp-0x38]
  42a309:	sub    edx,ebx
  42a30b:	sub    ecx,ebx
  42a30d:	add    DWORD PTR [ebp-0x38],edx
  42a310:	add    DWORD PTR [ebp-0x38],edi
  42a313:	cmp    ecx,DWORD PTR [ebp-0x10]
  42a316:	je     0x42a334
  42a318:	mov    edx,0xbe
  42a31d:	add    edx,esi
  42a31f:	cmp    ecx,eax
  42a321:	jne    0x42a334
  42a323:	mov    ebx,ecx
  42a325:	add    DWORD PTR [ebp-0x38],ebx
  42a328:	sub    edx,edi
  42a32a:	cmp    ecx,0x3d
  42a32d:	jne    0x42a334
  42a32f:	mov    ecx,edx
  42a331:	sub    DWORD PTR [ebp-0x38],ecx
  42a334:	mov    edx,DWORD PTR [esi]
  42a336:	and    DWORD PTR [ebp-0x38],edx
  42a339:	sub    edx,0x42d86173
  42a33f:	cmp    edx,0x5a47
  42a345:	jne    0x42a356
  42a347:	mov    ebx,DWORD PTR [ebp-0x38]
  42a34a:	mov    ecx,DWORD PTR [ebp-0x38]
  42a34d:	sub    DWORD PTR [ebp-0x38],edx
  42a350:	sub    DWORD PTR [ebp-0x38],ebx
  42a353:	sub    DWORD PTR [ebp-0x38],ecx
  42a356:	cmp    edx,0x256b0cfc
  42a35c:	jne    0x42a255
  42a362:	mov    ecx,DWORD PTR [ebp-0x38]
  42a365:	cmp    ecx,0xffffff9a
  42a368:	jne    0x42a376
  42a36a:	cmp    eax,0xadb9
  42a36f:	jne    0x42a376
  42a371:	add    ecx,ebx
  42a373:	add    DWORD PTR [ebp-0x38],ecx
  42a376:	mov    edx,DWORD PTR [esi+0x4]
  42a379:	mov    esi,DWORD PTR [ebp-0x38]
  42a37c:	mov    ebx,DWORD PTR [ebp-0x38]
  42a37f:	cmp    edx,0x8e85
  42a385:	je     0x42a49d
  42a38b:	mov    ecx,DWORD PTR [ebp-0x38]
  42a38e:	cmp    ecx,0xffffffef
  42a391:	jne    0x42a49d
  42a397:	xor    DWORD PTR [ebp-0x38],edx
  42a39a:	add    DWORD PTR [ebp-0x38],esi
  42a39d:	sub    DWORD PTR [ebp-0x38],ecx
  42a3a0:	xor    ecx,ecx
  42a3a2:	cmp    eax,ebx
  42a3a4:	je     0x42a49d
  42a3aa:	mov    eax,DWORD PTR [ebp-0x38]
  42a3ad:	mov    esi,DWORD PTR [ebp-0x38]
  42a3b0:	sub    ebx,edx
  42a3b2:	sub    DWORD PTR [ebp-0x38],ecx
  42a3b5:	sub    DWORD PTR [ebp-0x38],eax
  42a3b8:	add    ebx,eax
  42a3ba:	add    DWORD PTR [ebp-0x38],eax
  42a3bd:	cmp    esi,DWORD PTR [ebp-0x28]
  42a3c0:	je     0x42a49d
  42a3c6:	test   ebx,0x43e5
  42a3cc:	je     0x42a49d
  42a3d2:	mov    eax,DWORD PTR [ebp-0x38]
  42a3d5:	test   ebx,0x67
  42a3db:	jne    0x42a49d
  42a3e1:	mov    ecx,DWORD PTR [ebp-0x38]
  42a3e4:	sub    DWORD PTR [ebp-0x38],esi
  42a3e7:	add    ecx,esi
  42a3e9:	add    eax,edx
  42a3eb:	sub    DWORD PTR [ebp-0x38],ebx
  42a3ee:	cmp    eax,edi
  42a3f0:	je     0x42a49d
  42a3f6:	cmp    eax,edx
  42a3f8:	je     0x42a49d
  42a3fe:	add    DWORD PTR [ebp-0x38],eax
  42a401:	mov    edi,0xcd
  42a406:	cmp    ecx,ebx
  42a408:	jne    0x42a49d
  42a40e:	mov    esi,DWORD PTR [ebp-0x38]
  42a411:	xor    ebx,ebx
  42a413:	and    DWORD PTR [ebp-0x38],ecx
  42a416:	sub    esi,edi
  42a418:	and    ebx,edx
  42a41a:	add    DWORD PTR [ebp-0x38],ebx
  42a41d:	test   esi,0x19
  42a423:	jne    0x42a49d
  42a425:	cmp    esi,0x31
  42a428:	jne    0x42a49d
  42a42a:	cmp    esi,0x47
  42a42d:	jne    0x42a49d
  42a42f:	mov    edi,DWORD PTR [ebp-0x38]
  42a432:	mov    eax,DWORD PTR ds:0x45305c
  42a438:	and    edi,esi
  42a43a:	add    edi,edi
  42a43c:	add    eax,esi
  42a43e:	or     DWORD PTR [ebp-0x38],edx
  42a441:	test   edi,0xee
  42a447:	je     0x42a49d
  42a449:	cmp    eax,DWORD PTR ds:0x45305c
  42a44f:	jne    0x42a49d
  42a451:	cmp    edi,DWORD PTR [ebp-0x2c]
  42a454:	jne    0x42a49d
  42a456:	sub    eax,esi
  42a458:	mov    DWORD PTR [ebp-0x38],esi
  42a45b:	mov    esi,0xe0760002
  42a460:	cmp    ecx,edi
  42a462:	je     0x42a49d
  42a464:	and    edi,eax
  42a466:	and    edi,ecx
  42a468:	cmp    edi,0x6a
  42a46b:	je     0x42a49d
  42a46d:	mov    eax,DWORD PTR [ebp-0x38]
  42a470:	mov    ebx,DWORD PTR ds:0x45305c
  42a476:	add    edi,ebx
  42a478:	sub    DWORD PTR [ebp-0x38],esi
  42a47b:	cmp    eax,edi
  42a47d:	jne    0x42a49d
  42a47f:	sub    DWORD PTR [ebp-0x38],esi
  42a482:	add    eax,ecx
  42a484:	mov    DWORD PTR [ebp-0x38],eax
  42a487:	mov    eax,DWORD PTR [ebp-0x38]
  42a48a:	and    DWORD PTR [ebp-0x38],ecx
  42a48d:	mov    esi,0x790a
  42a492:	and    DWORD PTR [ebp-0x38],eax
  42a495:	or     edi,eax
  42a497:	sub    DWORD PTR [ebp-0x38],esi
  42a49a:	sub    DWORD PTR [ebp-0x38],edi
  42a49d:	sub    DWORD PTR [ebp-0x20],edx
  42a4a0:	add    edi,eax
  42a4a2:	mov    edx,DWORD PTR [ebp-0x38]
  42a4a5:	mov    eax,DWORD PTR [ebp-0x38]
  42a4a8:	test   edi,0x7e
  42a4ae:	je     0x42a4d4
  42a4b0:	mov    ecx,0xdb
  42a4b5:	mov    ebx,DWORD PTR ds:0x453040
  42a4bb:	add    edi,edi
  42a4bd:	add    edx,ebx
  42a4bf:	sub    DWORD PTR [ebp-0x38],edx
  42a4c2:	and    eax,ebx
  42a4c4:	sub    DWORD PTR [ebp-0x38],ebx
  42a4c7:	or     DWORD PTR [ebp-0x38],eax
  42a4ca:	add    edi,eax
  42a4cc:	mov    DWORD PTR [ebp-0x38],ecx
  42a4cf:	add    edi,ebx
  42a4d1:	add    DWORD PTR [ebp-0x38],edi
  42a4d4:	cmp    eax,DWORD PTR ds:0x453040
  42a4da:	je     0x42a579
  42a4e0:	cmp    eax,0x74
  42a4e3:	jne    0x42a579
  42a4e9:	add    ebx,edi
  42a4eb:	sub    DWORD PTR [ebp-0x38],eax
  42a4ee:	xor    esi,esi
  42a4f0:	sub    ebx,ecx
  42a4f2:	mov    eax,0x95
  42a4f7:	cmp    ebx,DWORD PTR ds:0x453098
  42a4fd:	jne    0x42a579
  42a4ff:	sub    DWORD PTR [ebp-0x38],esi
  42a502:	add    DWORD PTR [ebp-0x38],ebx
  42a505:	mov    edx,DWORD PTR [ebp-0x38]
  42a508:	sub    DWORD PTR [ebp-0x38],edx
  42a50b:	cmp    edx,edi
  42a50d:	je     0x42a512
  42a50f:	add    DWORD PTR [ebp-0x38],edx
  42a512:	cmp    ebx,DWORD PTR ds:0x453040
  42a518:	je     0x42a579
  42a51a:	add    esi,eax
  42a51c:	add    DWORD PTR [ebp-0x38],eax
  42a51f:	add    esi,edx
  42a521:	mov    edx,DWORD PTR [ebp-0x38]
  42a524:	sub    edx,edi
  42a526:	mov    eax,DWORD PTR ds:0x453074
  42a52c:	add    edx,edi
  42a52e:	add    DWORD PTR [ebp-0x38],edx
  42a531:	cmp    edx,DWORD PTR ds:0x453098
  42a537:	je     0x42a579
  42a539:	mov    ecx,DWORD PTR [ebp-0x38]
  42a53c:	xor    ebx,ebx
  42a53e:	sub    DWORD PTR [ebp-0x38],eax
  42a541:	sub    DWORD PTR [ebp-0x38],edx
  42a544:	cmp    ecx,DWORD PTR ds:0x453098
  42a54a:	je     0x42a579
  42a54c:	cmp    esi,0xffffffc2
  42a54f:	jne    0x42a579
  42a551:	cmp    edi,0xffffffac
  42a554:	jne    0x42a579
  42a556:	cmp    esi,ecx
  42a558:	je     0x42a579
  42a55a:	or     esi,edi
  42a55c:	sub    DWORD PTR [ebp-0x38],ebx
  42a55f:	mov    edi,0x5a
  42a564:	or     DWORD PTR [ebp-0x38],ecx
  42a567:	and    esi,ecx
  42a569:	add    esi,ecx
  42a56b:	mov    eax,0x56
  42a570:	add    esi,edi
  42a572:	or     eax,esi
  42a574:	sub    eax,edi
  42a576:	mov    DWORD PTR [ebp-0x38],eax
  42a579:	mov    ebx,DWORD PTR [ebp+0xc]
  42a57c:	mov    esi,eax
  42a57e:	add    esi,eax
  42a580:	cmp    ebx,DWORD PTR [ebp-0x44]
  42a583:	jne    0x42a5a4
  42a585:	mov    ecx,DWORD PTR [ebp-0x38]
  42a588:	mov    edi,0x58ae
  42a58d:	sub    ecx,edi
  42a58f:	cmp    ecx,0x4b
  42a592:	je     0x42a5a4
  42a594:	and    ecx,esi
  42a596:	mov    edx,DWORD PTR [ebp-0x38]
  42a599:	add    DWORD PTR [ebp-0x38],ebx
  42a59c:	mov    esi,edx
  42a59e:	add    DWORD PTR [ebp-0x38],ecx
  42a5a1:	sub    DWORD PTR [ebp-0x38],esi
  42a5a4:	mov    edx,DWORD PTR [ebp-0x20]
  42a5a7:	sub    DWORD PTR [ebp-0x38],edx
  42a5aa:	mov    DWORD PTR [ebx+0x0],edx
  42a5ad:	sub    eax,ecx
  42a5af:	mov    ebx,edx
  42a5b1:	mov    ecx,DWORD PTR [ebp-0x38]
  42a5b4:	sub    DWORD PTR [ebp-0x38],ecx
  42a5b7:	cmp    eax,edx
  42a5b9:	je     0x42a5e4
  42a5bb:	cmp    ebx,0x0
  42a5be:	jne    0x42a5e4
  42a5c0:	sub    ebx,edi
  42a5c2:	mov    esi,0x3e
  42a5c7:	mov    edi,DWORD PTR [ebp-0x38]
  42a5ca:	or     esi,edx
  42a5cc:	and    DWORD PTR [ebp-0x38],esi
  42a5cf:	add    eax,eax
  42a5d1:	add    ebx,edi
  42a5d3:	sub    DWORD PTR [ebp-0x38],ebx
  42a5d6:	and    eax,esi
  42a5d8:	cmp    eax,ebx
  42a5da:	je     0x42a5e4
  42a5dc:	xor    edi,edi
  42a5de:	or     DWORD PTR [ebp-0x38],eax
  42a5e1:	and    DWORD PTR [ebp-0x38],edi
  42a5e4:	test   edx,0xe3
  42a5ea:	jne    0x42a604
  42a5ec:	mov    edx,0x5787
  42a5f1:	xor    esi,esi
  42a5f3:	add    edx,ebx
  42a5f5:	add    DWORD PTR [ebp-0x38],edx
  42a5f8:	xor    DWORD PTR [ebp-0x38],edx
  42a5fb:	sub    esi,ecx
  42a5fd:	or     esi,ebx
  42a5ff:	add    esi,ebx
  42a601:	sub    DWORD PTR [ebp-0x38],esi
  42a604:	pop    edi
  42a605:	sub    DWORD PTR [ebp-0x38],edi
  42a608:	pop    esi
  42a609:	add    DWORD PTR [ebp-0x38],esi
  42a60c:	pop    ebx
  42a60d:	xor    ecx,ecx
  42a60f:	mov    eax,edx
  42a611:	add    ecx,esi
  42a613:	add    DWORD PTR [ebp-0x38],ecx
  42a616:	add    eax,esi
  42a618:	sub    DWORD PTR [ebp-0x38],ebx
  42a61b:	cmp    eax,ecx
  42a61d:	jne    0x42a64a
  42a61f:	mov    ecx,ebx
  42a621:	add    eax,eax
  42a623:	cmp    eax,0x43
  42a626:	je     0x42a64a
  42a628:	mov    edx,0x75
  42a62d:	sub    DWORD PTR [ebp-0x38],ecx
  42a630:	mov    ecx,0x6f
  42a635:	cmp    eax,DWORD PTR ds:0x453074
  42a63b:	je     0x42a64a
  42a63d:	add    edx,edi
  42a63f:	sub    DWORD PTR [ebp-0x38],eax
  42a642:	and    ecx,eax
  42a644:	add    DWORD PTR [ebp-0x38],edx
  42a647:	add    DWORD PTR [ebp-0x38],ecx
  42a64a:	leave  
  42a64b:	ret    0x8
  42a64e:	int3   
  42a64f:	int3   
  42a650:	int3   
  42a651:	int3   
  42a652:	int3   
  42a653:	push   ebp
  42a654:	mov    ebp,esp
  42a656:	sub    esp,0x30
  42a659:	mov    edx,0x9110
  42a65e:	mov    ecx,0xdb
  42a663:	mov    DWORD PTR [ebp-0x4],ecx
  42a666:	sub    edx,ecx
  42a668:	add    DWORD PTR [ebp-0x4],edx
  42a66b:	push   ebx
  42a66c:	mov    edx,DWORD PTR [ebp-0x4]
  42a66f:	sub    DWORD PTR [ebp-0x4],edx
  42a672:	push   esi
  42a673:	or     DWORD PTR [ebp-0x4],edx
  42a676:	push   edi
  42a677:	mov    esi,DWORD PTR [ebp-0x4]
  42a67a:	mov    ecx,0x49
  42a67f:	add    DWORD PTR [ebp-0x4],ecx
  42a682:	test   esi,0xf2f4
  42a688:	je     0x42a697
  42a68a:	cmp    esi,0xffffffd3
  42a68d:	jne    0x42a697
  42a68f:	cmp    esi,DWORD PTR [ebp-0x1c]
  42a692:	je     0x42a697
  42a694:	sub    DWORD PTR [ebp-0x4],esi
  42a697:	sub    esi,edx
  42a699:	xor    edx,edx
  42a69b:	test   esi,0xadcc
  42a6a1:	jne    0x42a6c5
  42a6a3:	sub    esi,edx
  42a6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  42a6a8:	mov    edi,DWORD PTR [ebp-0x4]
  42a6ab:	cmp    edi,0xb
  42a6ae:	jne    0x42a6c5
  42a6b0:	mov    ebx,0xc6
  42a6b5:	add    esi,ebx
  42a6b7:	mov    eax,DWORD PTR [ebp-0x4]
  42a6ba:	add    esi,ecx
  42a6bc:	sub    esi,eax
  42a6be:	sub    esi,edi
  42a6c0:	sub    esi,edx
  42a6c2:	add    DWORD PTR [ebp-0x4],esi
  42a6c5:	sub    DWORD PTR [ebp-0x4],ecx
  42a6c8:	rdtsc  
  42a6ca:	add    edx,ebx
  42a6cc:	sub    edx,eax
  42a6ce:	mov    ecx,DWORD PTR [ebp-0x4]
  42a6d1:	sub    ecx,edi
  42a6d3:	add    DWORD PTR [ebp-0x4],edx
  42a6d6:	mov    edi,esi
  42a6d8:	mov    DWORD PTR [ebp-0x4],ecx
  42a6db:	sub    edi,edx
  42a6dd:	sub    DWORD PTR [ebp-0x4],edi
  42a6e0:	add    DWORD PTR [ebp-0x4],esi
  42a6e3:	mov    esi,0xd1
  42a6e8:	add    esi,edi
  42a6ea:	add    esi,ebx
  42a6ec:	mov    ebx,DWORD PTR [ebp-0x4]
  42a6ef:	cmp    ebx,0xffffff9a
  42a6f2:	je     0x42a6f9
  42a6f4:	add    ebx,esi
  42a6f6:	add    DWORD PTR [ebp-0x4],ebx
  42a6f9:	pop    edi
  42a6fa:	cmp    edi,0x6e
  42a6fd:	je     0x42a72d
  42a6ff:	and    ecx,ebx
  42a701:	cmp    ecx,0x2c
  42a704:	je     0x42a72d
  42a706:	mov    edx,DWORD PTR [ebp-0x4]
  42a709:	add    DWORD PTR [ebp-0x4],edx
  42a70c:	add    DWORD PTR [ebp-0x4],edi
  42a70f:	mov    esi,DWORD PTR [ebp-0x4]
  42a712:	add    DWORD PTR [ebp-0x4],edi
  42a715:	sub    DWORD PTR [ebp-0x4],esi
  42a718:	test   ecx,0x81
  42a71e:	je     0x42a72d
  42a720:	mov    esi,0x7d
  42a725:	add    esi,eax
  42a727:	xor    DWORD PTR [ebp-0x4],ecx
  42a72a:	sub    DWORD PTR [ebp-0x4],esi
  42a72d:	pop    esi
  42a72e:	mov    edx,0xf833
  42a733:	cmp    esi,0xfffffff7
  42a736:	jne    0x42a79f
  42a738:	sub    edx,eax
  42a73a:	mov    ebx,0x31b4
  42a73f:	sub    edx,esi
  42a741:	mov    ecx,DWORD PTR ds:0x453090
  42a747:	add    DWORD PTR [ebp-0x4],ecx
  42a74a:	test   edx,0xbf
  42a750:	jne    0x42a79f
  42a752:	xor    ecx,ecx
  42a754:	cmp    edx,0x28132100
  42a75a:	jne    0x42a79f
  42a75c:	sub    ecx,ebx
  42a75e:	mov    ebx,DWORD PTR [ebp-0x4]
  42a761:	cmp    edx,DWORD PTR [ebp-0x20]
  42a764:	jne    0x42a79f
  42a766:	cmp    edx,0xd36f
  42a76c:	jne    0x42a79f
  42a76e:	add    ecx,esi
  42a770:	sub    DWORD PTR [ebp-0x4],ecx
  42a773:	add    ebx,esi
  42a775:	add    DWORD PTR [ebp-0x4],ebx
  42a778:	cmp    edx,0xffffffad
  42a77b:	je     0x42a79f
  42a77d:	cmp    ebx,0xffffff81
  42a780:	jne    0x42a79f
  42a782:	add    DWORD PTR [ebp-0x4],esi
  42a785:	mov    ecx,esi
  42a787:	or     edx,esi
  42a789:	mov    ebx,DWORD PTR ds:0x453050
  42a78f:	add    DWORD PTR [ebp-0x4],edx
  42a792:	add    DWORD PTR [ebp-0x4],ecx
  42a795:	sub    ebx,ecx
  42a797:	cmp    ebx,0x2a
  42a79a:	je     0x42a79f
  42a79c:	add    DWORD PTR [ebp-0x4],ebx
  42a79f:	pop    ebx
  42a7a0:	sub    DWORD PTR [ebp-0x4],ebx
  42a7a3:	leave  
  42a7a4:	ret    
  42a7a5:	int3   
  42a7a6:	int3   
  42a7a7:	int3   
  42a7a8:	int3   
  42a7a9:	int3   
  42a7aa:	push   ebp
  42a7ab:	mov    ebp,esp
  42a7ad:	sub    esp,0x1c
  42a7b0:	mov    eax,0x47
  42a7b5:	mov    edx,eax
  42a7b7:	mov    DWORD PTR [ebp-0x4],edx
  42a7ba:	push   ebx
  42a7bb:	and    edx,eax
  42a7bd:	sub    edx,eax
  42a7bf:	add    edx,edx
  42a7c1:	add    DWORD PTR [ebp-0x4],eax
  42a7c4:	or     DWORD PTR [ebp-0x4],eax
  42a7c7:	mov    eax,0x6e
  42a7cc:	add    DWORD PTR [ebp-0x4],eax
  42a7cf:	mov    eax,DWORD PTR [ebp-0x4]
  42a7d2:	cmp    eax,0x3b1b
  42a7d7:	jne    0x42a82d
  42a7d9:	mov    ecx,DWORD PTR [ebp-0x4]
  42a7dc:	or     eax,edx
  42a7de:	mov    edx,DWORD PTR [ebp-0x4]
  42a7e1:	add    ecx,edx
  42a7e3:	cmp    ecx,edx
  42a7e5:	je     0x42a82d
  42a7e7:	mov    ebx,0x70
  42a7ec:	add    ebx,ecx
  42a7ee:	mov    edx,DWORD PTR [ebp-0x4]
  42a7f1:	sub    edx,ebx
  42a7f3:	add    eax,ebx
  42a7f5:	add    DWORD PTR [ebp-0x4],edx
  42a7f8:	cmp    eax,edx
  42a7fa:	je     0x42a82d
  42a7fc:	mov    ebx,DWORD PTR [ebp-0x4]
  42a7ff:	cmp    eax,0xffffffc3
  42a802:	je     0x42a82d
  42a804:	mov    ecx,0x75
  42a809:	mov    edx,DWORD PTR [ebp-0x4]
  42a80c:	or     ecx,eax
  42a80e:	cmp    ecx,eax
  42a810:	je     0x42a82d
  42a812:	sub    DWORD PTR [ebp-0x4],edx
  42a815:	mov    eax,0x55
  42a81a:	cmp    ecx,edx
  42a81c:	je     0x42a82d
  42a81e:	mov    edx,0x19
  42a823:	add    ecx,eax
  42a825:	sub    ebx,ecx
  42a827:	add    DWORD PTR [ebp-0x4],edx
  42a82a:	sub    DWORD PTR [ebp-0x4],ebx
  42a82d:	push   esi
  42a82e:	xor    edx,edx
  42a830:	sub    edx,ecx
  42a832:	or     edx,ebx
  42a834:	cmp    edx,DWORD PTR [ebp-0x18]
  42a837:	je     0x42a88f
  42a839:	mov    esi,DWORD PTR ds:0x453048
  42a83f:	mov    eax,0x32
  42a844:	add    esi,ecx
  42a846:	sub    eax,esi
  42a848:	cmp    eax,DWORD PTR [ebp-0x4]
  42a84b:	jne    0x42a88f
  42a84d:	mov    esi,ecx
  42a84f:	mov    ecx,0xbd
  42a854:	sub    edx,ebx
  42a856:	sub    ecx,eax
  42a858:	test   eax,0x3c64
  42a85d:	je     0x42a88f
  42a85f:	test   edx,0xd2
  42a865:	je     0x42a88f
  42a867:	cmp    edx,DWORD PTR [ebp-0x18]
  42a86a:	jne    0x42a88f
  42a86c:	cmp    edx,DWORD PTR [ebp-0xc]
  42a86f:	je     0x42a88f
  42a871:	add    DWORD PTR [ebp-0x4],edx
  42a874:	mov    ebx,0x8831
  42a879:	sub    DWORD PTR [ebp-0x4],ecx
  42a87c:	xor    edx,edx
  42a87e:	add    ebx,edx
  42a880:	and    ebx,edx
  42a882:	add    DWORD PTR [ebp-0x4],esi
  42a885:	sub    ebx,edx
  42a887:	add    DWORD PTR [ebp-0x4],ecx
  42a88a:	sub    ebx,edx
  42a88c:	sub    DWORD PTR [ebp-0x4],ebx
  42a88f:	push   edi
  42a890:	cmp    eax,0x2d77
  42a895:	jne    0x42a8a8
  42a897:	mov    ebx,DWORD PTR [ebp-0x4]
  42a89a:	add    ebx,ebx
  42a89c:	sub    DWORD PTR [ebp-0x4],edx
  42a89f:	mov    edi,DWORD PTR [ebp-0x4]
  42a8a2:	xor    DWORD PTR [ebp-0x4],edi
  42a8a5:	sub    DWORD PTR [ebp-0x4],ebx
  42a8a8:	mov    DWORD PTR [ebp-0x4],esi
  42a8ab:	mov    ecx,DWORD PTR [ebp+0x10]
  42a8ae:	mov    eax,DWORD PTR [ebp-0x4]
  42a8b1:	mov    ebx,DWORD PTR [ebp-0x4]
  42a8b4:	add    DWORD PTR [ebp-0x4],edx
  42a8b7:	add    DWORD PTR [ebp-0x4],ebx
  42a8ba:	test   ecx,0xac
  42a8c0:	je     0x42a9a5
  42a8c6:	mov    ebx,DWORD PTR [ebp-0x4]
  42a8c9:	mov    edx,DWORD PTR ds:0x453048
  42a8cf:	and    DWORD PTR [ebp-0x4],ebx
  42a8d2:	add    eax,eax
  42a8d4:	mov    DWORD PTR [ebp-0x4],edx
  42a8d7:	cmp    esi,DWORD PTR ds:0x453048
  42a8dd:	je     0x42a9a5
  42a8e3:	test   ecx,0xce
  42a8e9:	je     0x42a9a5
  42a8ef:	cmp    ecx,DWORD PTR ds:0x453048
  42a8f5:	jne    0x42a9a5
  42a8fb:	mov    esi,0x76
  42a900:	test   ecx,0x6974
  42a906:	je     0x42a9a5
  42a90c:	mov    edx,DWORD PTR [ebp-0x4]
  42a90f:	add    eax,ebx
  42a911:	sub    DWORD PTR [ebp-0x4],esi
  42a914:	sub    edx,edi
  42a916:	add    eax,ebx
  42a918:	add    edx,ebx
  42a91a:	and    eax,esi
  42a91c:	sub    DWORD PTR [ebp-0x4],edx
  42a91f:	add    eax,eax
  42a921:	test   ecx,0xf7ed
  42a927:	je     0x42a9a5
  42a929:	xor    edx,edx
  42a92b:	mov    ebx,esi
  42a92d:	cmp    ecx,DWORD PTR [ebp-0x10]
  42a930:	je     0x42a9a5
  42a932:	cmp    ecx,0x5e
  42a935:	jne    0x42a9a5
  42a937:	mov    esi,edi
  42a939:	mov    edi,edx
  42a93b:	cmp    esi,0xffffff90
  42a93e:	jne    0x42a9a5
  42a940:	and    edi,ecx
  42a942:	mov    edx,ebx
  42a944:	add    DWORD PTR [ebp-0x4],eax
  42a947:	mov    ebx,DWORD PTR [ebp-0x4]
  42a94a:	or     edi,esi
  42a94c:	xor    DWORD PTR [ebp-0x4],edi
  42a94f:	and    DWORD PTR [ebp-0x4],edx
  42a952:	cmp    ebx,0xffffff91
  42a955:	jne    0x42a9a5
  42a957:	mov    edi,DWORD PTR [ebp-0x4]
  42a95a:	and    ebx,eax
  42a95c:	cmp    ebx,DWORD PTR [ebp-0x14]
  42a95f:	jne    0x42a9a5
  42a961:	mov    eax,0x8b
  42a966:	sub    DWORD PTR [ebp-0x4],eax
  42a969:	add    DWORD PTR [ebp-0x4],eax
  42a96c:	add    DWORD PTR [ebp-0x4],esi
  42a96f:	mov    eax,DWORD PTR [ebp-0x4]
  42a972:	cmp    ecx,DWORD PTR [ebp-0x18]
  42a975:	je     0x42a9a5
  42a977:	mov    edx,DWORD PTR [ebp-0x4]
  42a97a:	mov    esi,DWORD PTR [ebp-0x4]
  42a97d:	cmp    eax,0xffffffec
  42a980:	jne    0x42a9a5
  42a982:	and    ebx,esi
  42a984:	xor    DWORD PTR [ebp-0x4],edi
  42a987:	xor    edi,edi
  42a989:	mov    esi,0xae
  42a98e:	cmp    ebx,DWORD PTR [ebp-0x14]
  42a991:	je     0x42a9a5
  42a993:	add    DWORD PTR [ebp-0x4],edi
  42a996:	sub    eax,edi
  42a998:	and    DWORD PTR [ebp-0x4],eax
  42a99b:	sub    edx,ebx
  42a99d:	mov    DWORD PTR [ebp-0x4],esi
  42a9a0:	sub    edx,ebx
  42a9a2:	add    DWORD PTR [ebp-0x4],edx
  42a9a5:	mov    eax,DWORD PTR [ebp+0x8]
  42a9a8:	mov    edx,DWORD PTR ds:0x453048
  42a9ae:	sub    edx,ebx
  42a9b0:	xor    DWORD PTR [ebp-0x4],edx
  42a9b3:	cmp    DWORD PTR [ebp+0xc],ecx
  42a9b6:	je     0x42aa1b
  42a9b8:	sub    edx,edi
  42a9ba:	add    DWORD PTR [ebp-0x4],edi
  42a9bd:	and    edx,eax
  42a9bf:	mov    esi,DWORD PTR [ebp-0x4]
  42a9c2:	sub    esi,ecx
  42a9c4:	sub    DWORD PTR [ebp-0x4],esi
  42a9c7:	mov    esi,DWORD PTR [ebp-0x4]
  42a9ca:	sub    edx,edi
  42a9cc:	add    DWORD PTR [ebp-0x4],esi
  42a9cf:	sub    edx,ecx
  42a9d1:	sub    DWORD PTR [ebp-0x4],edx
  42a9d4:	dec    DWORD PTR [ebp+0xc]
  42a9d7:	mov    edx,DWORD PTR [ebp-0x4]
  42a9da:	mov    esi,DWORD PTR [ebp-0x4]
  42a9dd:	sub    DWORD PTR [ebp-0x4],esi
  42a9e0:	sub    DWORD PTR [ebp-0x4],edx
  42a9e3:	neg    DWORD PTR [eax]
  42a9e5:	sub    DWORD PTR [ebp-0x4],edi
  42a9e8:	xor    DWORD PTR [eax],ecx
  42a9ea:	mov    esi,DWORD PTR [ebp-0x4]
  42a9ed:	cmp    esi,eax
  42a9ef:	jne    0x42a9f4
  42a9f1:	sub    DWORD PTR [ebp-0x4],esi
  42a9f4:	add    eax,0x4
  42a9f7:	mov    esi,0xd4
  42a9fc:	xor    edx,edx
  42a9fe:	cmp    eax,0xe368
  42aa03:	jne    0x42aa19
  42aa05:	cmp    eax,DWORD PTR [ebp-0xc]
  42aa08:	je     0x42aa19
  42aa0a:	sub    edx,eax
  42aa0c:	cmp    ecx,0x2
  42aa0f:	je     0x42aa19
  42aa11:	and    esi,eax
  42aa13:	add    DWORD PTR [ebp-0x4],esi
  42aa16:	mov    DWORD PTR [ebp-0x4],edx
  42aa19:	jmp    0x42a9a8
  42aa1b:	mov    ebx,DWORD PTR ds:0x453048
  42aa21:	sub    eax,edi
  42aa23:	mov    ecx,0x249d
  42aa28:	cmp    eax,0x2d
  42aa2b:	je     0x42aa39
  42aa2d:	sub    DWORD PTR [ebp-0x4],eax
  42aa30:	mov    edx,DWORD PTR [ebp-0x4]
  42aa33:	add    DWORD PTR [ebp-0x4],ecx
  42aa36:	sub    DWORD PTR [ebp-0x4],edx
  42aa39:	sub    edx,edi
  42aa3b:	sub    ebx,ecx
  42aa3d:	cmp    edx,0x44
  42aa40:	jne    0x42ab44
  42aa46:	mov    eax,0x52
  42aa4b:	mov    esi,0x60
  42aa50:	add    DWORD PTR [ebp-0x4],ebx
  42aa53:	cmp    edx,DWORD PTR [ebp-0x8]
  42aa56:	jne    0x42ab44
  42aa5c:	mov    edi,DWORD PTR ds:0x453048
  42aa62:	and    edx,esi
  42aa64:	mov    ebx,DWORD PTR [ebp-0x4]
  42aa67:	cmp    edx,eax
  42aa69:	je     0x42ab44
  42aa6f:	sub    DWORD PTR [ebp-0x4],eax
  42aa72:	sub    edx,esi
  42aa74:	mov    eax,DWORD PTR [ebp-0x4]
  42aa77:	mov    ecx,DWORD PTR [ebp-0x4]
  42aa7a:	xor    DWORD PTR [ebp-0x4],ecx
  42aa7d:	add    edx,edx
  42aa7f:	cmp    ebx,ecx
  42aa81:	je     0x42ab44
  42aa87:	or     eax,edx
  42aa89:	add    DWORD PTR [ebp-0x4],ebx
  42aa8c:	xor    ebx,ebx
  42aa8e:	sub    edi,esi
  42aa90:	mov    ecx,DWORD PTR ds:0x453048
  42aa96:	or     eax,ecx
  42aa98:	sub    ebx,eax
  42aa9a:	add    ebx,esi
  42aa9c:	add    ebx,ebx
  42aa9e:	test   ebx,0x7302
  42aaa4:	je     0x42ab44
  42aaaa:	sub    ebx,edx
  42aaac:	sub    DWORD PTR [ebp-0x4],ebx
  42aaaf:	add    edi,eax
  42aab1:	xor    eax,eax
  42aab3:	xor    esi,esi
  42aab5:	or     DWORD PTR [ebp-0x4],eax
  42aab8:	cmp    edi,DWORD PTR ds:0x453048
  42aabe:	jne    0x42ab44
  42aac4:	mov    ebx,DWORD PTR [ebp-0x4]
  42aac7:	sub    edi,ecx
  42aac9:	mov    eax,0xe3
  42aace:	and    edi,edx
  42aad0:	test   edi,0xa
  42aad6:	jne    0x42ab44
  42aad8:	sub    edi,eax
  42aada:	mov    ecx,DWORD PTR [ebp-0x4]
  42aadd:	sub    ecx,edx
  42aadf:	sub    DWORD PTR [ebp-0x4],edi
  42aae2:	mov    edx,0x25
  42aae7:	cmp    ebx,0xbd4e
  42aaed:	je     0x42ab44
  42aaef:	add    DWORD PTR [ebp-0x4],eax
  42aaf2:	sub    DWORD PTR [ebp-0x4],ecx
  42aaf5:	mov    edi,DWORD PTR [ebp-0x4]
  42aaf8:	mov    eax,DWORD PTR [ebp-0x4]
  42aafb:	sub    eax,ebx
  42aafd:	cmp    ebx,0x834c
  42ab03:	je     0x42ab44
  42ab05:	mov    esi,0x310f
  42ab0a:	mov    ecx,DWORD PTR [ebp-0x4]
  42ab0d:	and    eax,esi
  42ab0f:	cmp    eax,ecx
  42ab11:	je     0x42ab44
  42ab13:	mov    esi,DWORD PTR [ebp-0x4]
  42ab16:	cmp    esi,0x61
  42ab19:	je     0x42ab44
  42ab1b:	xor    ebx,ebx
  42ab1d:	or     DWORD PTR [ebp-0x4],esi
  42ab20:	and    edi,esi
  42ab22:	and    edi,eax
  42ab24:	mov    esi,DWORD PTR [ebp-0x4]
  42ab27:	sub    edi,esi
  42ab29:	sub    DWORD PTR [ebp-0x4],ebx
  42ab2c:	add    DWORD PTR [ebp-0x4],ecx
  42ab2f:	and    edi,eax
  42ab31:	and    DWORD PTR [ebp-0x4],edi
  42ab34:	sub    DWORD PTR [ebp-0x4],eax
  42ab37:	add    eax,edi
  42ab39:	sub    DWORD PTR [ebp-0x4],eax
  42ab3c:	or     DWORD PTR [ebp-0x4],ebx
  42ab3f:	add    edx,eax
  42ab41:	sub    DWORD PTR [ebp-0x4],edx
  42ab44:	mov    ebx,DWORD PTR [ebp-0x4]
  42ab47:	xor    eax,eax
  42ab49:	test   ebx,0x25
  42ab4f:	je     0x42ad3e
  42ab55:	mov    esi,DWORD PTR ds:0x453044
  42ab5b:	sub    ebx,edi
  42ab5d:	add    ebx,ecx
  42ab5f:	mov    ecx,DWORD PTR ds:0x453054
  42ab65:	sub    esi,edi
  42ab67:	cmp    ebx,0x598b
  42ab6d:	je     0x42ad3e
  42ab73:	cmp    ebx,DWORD PTR ds:0x453048
  42ab79:	je     0x42ad3e
  42ab7f:	sub    DWORD PTR [ebp-0x4],ebx
  42ab82:	sub    ecx,esi
  42ab84:	cmp    ecx,DWORD PTR [ebp-0x14]
  42ab87:	jne    0x42ad3e
  42ab8d:	mov    esi,DWORD PTR [ebp-0x4]
  42ab90:	mov    eax,edi
  42ab92:	cmp    eax,DWORD PTR ds:0x453044
  42ab98:	je     0x42ad3e
  42ab9e:	mov    ebx,DWORD PTR ds:0x453044
  42aba4:	cmp    esi,ebx
  42aba6:	je     0x42ad3e
  42abac:	add    DWORD PTR [ebp-0x4],ebx
  42abaf:	mov    ebx,edi
  42abb1:	cmp    esi,DWORD PTR ds:0x453048
  42abb7:	jne    0x42ad3e
  42abbd:	mov    edi,DWORD PTR [ebp-0x4]
  42abc0:	mov    edx,DWORD PTR [ebp-0x4]
  42abc3:	and    edi,eax
  42abc5:	add    DWORD PTR [ebp-0x4],edi
  42abc8:	or     DWORD PTR [ebp-0x4],ecx
  42abcb:	sub    DWORD PTR [ebp-0x4],ecx
  42abce:	cmp    edx,esi
  42abd0:	je     0x42ad3e
  42abd6:	test   edx,0x25
  42abdc:	je     0x42ad3e
  42abe2:	sub    DWORD PTR [ebp-0x4],ebx
  42abe5:	cmp    edx,DWORD PTR [ebp-0x1c]
  42abe8:	je     0x42ad3e
  42abee:	cmp    edx,DWORD PTR [ebp-0xc]
  42abf1:	je     0x42ad3e
  42abf7:	add    DWORD PTR [ebp-0x4],esi
  42abfa:	mov    ecx,DWORD PTR [ebp-0x4]
  42abfd:	mov    ebx,0x700d
  42ac02:	add    DWORD PTR [ebp-0x4],ebx
  42ac05:	add    DWORD PTR [ebp-0x4],edx
  42ac08:	sub    ecx,edi
  42ac0a:	add    ecx,edi
  42ac0c:	cmp    ecx,0x6e
  42ac0f:	je     0x42ad3e
  42ac15:	mov    esi,DWORD PTR [ebp-0x4]
  42ac18:	sub    DWORD PTR [ebp-0x4],eax
  42ac1b:	cmp    ecx,0x7c
  42ac1e:	jne    0x42ad3e
  42ac24:	sub    DWORD PTR [ebp-0x4],ebx
  42ac27:	cmp    edx,DWORD PTR ds:0x453048
  42ac2d:	jne    0x42ad3e
  42ac33:	mov    DWORD PTR [ebp-0x4],ecx
  42ac36:	mov    ebx,DWORD PTR [ebp-0x4]
  42ac39:	mov    DWORD PTR [ebp-0x4],ebx
  42ac3c:	mov    edi,DWORD PTR [ebp-0x4]
  42ac3f:	cmp    edi,0x15
  42ac42:	je     0x42ad3e
  42ac48:	add    esi,ebx
  42ac4a:	add    DWORD PTR [ebp-0x4],ebx
  42ac4d:	test   eax,0x39
  42ac52:	je     0x42ad3e
  42ac58:	add    DWORD PTR [ebp-0x4],edi
  42ac5b:	cmp    esi,DWORD PTR [ebp-0xc]
  42ac5e:	je     0x42ad3e
  42ac64:	mov    eax,0x89
  42ac69:	mov    DWORD PTR [ebp-0x4],ecx
  42ac6c:	mov    ebx,edx
  42ac6e:	cmp    edx,DWORD PTR ds:0x453048
  42ac74:	jne    0x42ad3e
  42ac7a:	and    ebx,edi
  42ac7c:	sub    esi,edi
  42ac7e:	cmp    esi,0xffffffe9
  42ac81:	jne    0x42ad3e
  42ac87:	mov    edx,0xb8
  42ac8c:	sub    DWORD PTR [ebp-0x4],esi
  42ac8f:	mov    esi,DWORD PTR [ebp-0x4]
  42ac92:	cmp    ebx,0x10050749
  42ac98:	jne    0x42ad3e
  42ac9e:	sub    DWORD PTR [ebp-0x4],esi
  42aca1:	mov    edi,0x12
  42aca6:	add    edi,eax
  42aca8:	or     edx,ecx
  42acaa:	mov    eax,DWORD PTR [ebp-0x4]
  42acad:	add    edx,ebx
  42acaf:	add    DWORD PTR [ebp-0x4],edi
  42acb2:	cmp    eax,DWORD PTR ds:0x453048
  42acb8:	jne    0x42ad3e
  42acbe:	mov    ebx,edx
  42acc0:	cmp    ebx,0xfffffff6
  42acc3:	je     0x42ad3e
  42acc5:	xor    ecx,ecx
  42acc7:	mov    edi,0x5a
  42accc:	and    edi,edx
  42acce:	sub    DWORD PTR [ebp-0x4],eax
  42acd1:	add    DWORD PTR [ebp-0x4],edi
  42acd4:	or     ebx,esi
  42acd6:	add    DWORD PTR [ebp-0x4],ecx
  42acd9:	cmp    ebx,0x17
  42acdc:	je     0x42ad3e
  42acde:	mov    edx,DWORD PTR ds:0x453054
  42ace4:	mov    ecx,DWORD PTR [ebp-0x4]
  42ace7:	and    edx,ebx
  42ace9:	cmp    edx,DWORD PTR [ebp-0x10]
  42acec:	je     0x42ad3e
  42acee:	mov    esi,ecx
  42acf0:	mov    ebx,DWORD PTR [ebp-0x4]
  42acf3:	cmp    edi,DWORD PTR [ebp-0x1c]
  42acf6:	je     0x42ad3e
  42acf8:	add    DWORD PTR [ebp-0x4],edx
  42acfb:	test   esi,0xa6
  42ad01:	je     0x42ad3e
  42ad03:	add    DWORD PTR [ebp-0x4],esi
  42ad06:	mov    DWORD PTR [ebp-0x4],edx
  42ad09:	and    ebx,eax
  42ad0b:	sub    ebx,edx
  42ad0d:	mov    edx,edi
  42ad0f:	sub    DWORD PTR [ebp-0x4],ebx
  42ad12:	mov    edi,DWORD PTR [ebp-0x4]
  42ad15:	sub    DWORD PTR [ebp-0x4],edi
  42ad18:	cmp    edx,esi
  42ad1a:	jne    0x42ad3e
  42ad1c:	and    edx,eax
  42ad1e:	xor    esi,esi
  42ad20:	cmp    ebx,DWORD PTR ds:0x453054
  42ad26:	je     0x42ad3e
  42ad28:	mov    ecx,DWORD PTR [ebp-0x4]
  42ad2b:	sub    DWORD PTR [ebp-0x4],edi
  42ad2e:	and    ecx,edx
  42ad30:	add    DWORD PTR [ebp-0x4],eax
  42ad33:	mov    eax,DWORD PTR [ebp-0x4]
  42ad36:	sub    DWORD PTR [ebp-0x4],ecx
  42ad39:	or     esi,eax
  42ad3b:	add    DWORD PTR [ebp-0x4],esi
  42ad3e:	test   edx,0x58
  42ad44:	jne    0x42ad73
  42ad46:	mov    edi,eax
  42ad48:	xor    ecx,ecx
  42ad4a:	add    edi,edi
  42ad4c:	cmp    edx,0xb47c
  42ad52:	jne    0x42ad73
  42ad54:	and    DWORD PTR [ebp-0x4],ecx
  42ad57:	add    edi,eax
  42ad59:	cmp    edi,ecx
  42ad5b:	jne    0x42ad73
  42ad5d:	sub    edi,esi
  42ad5f:	mov    esi,DWORD PTR ds:0x453044
  42ad65:	cmp    edx,0x7d
  42ad68:	je     0x42ad73
  42ad6a:	add    DWORD PTR [ebp-0x4],edi
  42ad6d:	add    DWORD PTR [ebp-0x4],edx
  42ad70:	xor    DWORD PTR [ebp-0x4],esi
  42ad73:	pop    edi
  42ad74:	test   edi,0xf5cf
  42ad7a:	je     0x42ad7f
  42ad7c:	add    DWORD PTR [ebp-0x4],edi
  42ad7f:	pop    esi
  42ad80:	test   esi,0x6d
  42ad86:	je     0x42ad8b
  42ad88:	and    DWORD PTR [ebp-0x4],esi
  42ad8b:	pop    ebx
  42ad8c:	mov    eax,DWORD PTR [ebp-0x4]
  42ad8f:	mov    edx,0xc
  42ad94:	add    DWORD PTR [ebp-0x4],ebx
  42ad97:	sub    DWORD PTR [ebp-0x4],edx
  42ad9a:	sub    eax,esi
  42ad9c:	cmp    eax,0xffffff84
  42ad9f:	je     0x42adda
  42ada1:	mov    ecx,DWORD PTR ds:0x453048
  42ada7:	mov    edx,0x33
  42adac:	cmp    eax,ebx
  42adae:	je     0x42adda
  42adb0:	mov    DWORD PTR [ebp-0x4],edx
  42adb3:	add    DWORD PTR [ebp-0x4],ecx
  42adb6:	and    eax,esi
  42adb8:	add    eax,edx
  42adba:	add    eax,ecx
  42adbc:	cmp    eax,DWORD PTR [ebp-0x1c]
  42adbf:	je     0x42adda
  42adc1:	cmp    eax,DWORD PTR [ebp-0xc]
  42adc4:	jne    0x42adda
  42adc6:	mov    ecx,0x51
  42adcb:	add    ecx,ecx
  42adcd:	mov    edx,DWORD PTR [ebp-0x4]
  42add0:	sub    edx,eax
  42add2:	or     edx,edi
  42add4:	sub    DWORD PTR [ebp-0x4],ecx
  42add7:	add    DWORD PTR [ebp-0x4],edx
  42adda:	leave  
  42addb:	ret    0xc
  42adde:	int3   
  42addf:	int3   
  42ade0:	int3   
  42ade1:	int3   
  42ade2:	int3   
  42ade3:	push   ebp
  42ade4:	mov    ebp,esp
  42ade6:	sub    esp,0x38
  42ade9:	mov    eax,0x5b
  42adee:	mov    ecx,0x2f
  42adf3:	sub    ecx,eax
  42adf5:	mov    DWORD PTR [ebp-0x1c],eax
  42adf8:	mov    DWORD PTR [ebp-0x1c],ecx
  42adfb:	push   ebx
  42adfc:	mov    eax,DWORD PTR [ebp-0x1c]
  42adff:	xor    edx,edx
  42ae01:	cmp    eax,0x5ff3
  42ae06:	jne    0x42ae34
  42ae08:	sub    DWORD PTR [ebp-0x1c],eax
  42ae0b:	mov    ebx,DWORD PTR [ebp-0x1c]
  42ae0e:	mov    eax,DWORD PTR [ebp-0x1c]
  42ae11:	sub    edx,eax
  42ae13:	cmp    ebx,eax
  42ae15:	je     0x42ae34
  42ae17:	mov    eax,DWORD PTR [ebp-0x1c]
  42ae1a:	or     edx,eax
  42ae1c:	test   edx,0x88
  42ae22:	jne    0x42ae34
  42ae24:	xor    ecx,ecx
  42ae26:	mov    eax,DWORD PTR [ebp-0x1c]
  42ae29:	mov    DWORD PTR [ebp-0x1c],eax
  42ae2c:	add    ebx,ecx
  42ae2e:	xor    DWORD PTR [ebp-0x1c],edx
  42ae31:	sub    DWORD PTR [ebp-0x1c],ebx
  42ae34:	push   esi
  42ae35:	cmp    ebx,edx
  42ae37:	jne    0x42ae57
  42ae39:	test   edx,0xf4
  42ae3f:	jne    0x42ae57
  42ae41:	mov    eax,0x8f1
  42ae46:	mov    esi,DWORD PTR [ebp-0x1c]
  42ae49:	and    esi,edx
  42ae4b:	add    esi,ecx
  42ae4d:	sub    DWORD PTR [ebp-0x1c],esi
  42ae50:	sub    eax,ecx
  42ae52:	sub    eax,edx
  42ae54:	sub    DWORD PTR [ebp-0x1c],eax
  42ae57:	push   edi
  42ae58:	sub    DWORD PTR [ebp-0x1c],eax
  42ae5b:	mov    DWORD PTR [ebp-0x1c],esi
  42ae5e:	mov    edx,0xf6305575
  42ae63:	sub    ebx,esi
  42ae65:	add    DWORD PTR [ebp-0x1c],ebx
  42ae68:	sub    edx,0xf6305535
  42ae6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  42ae71:	mov    ebx,DWORD PTR [ebp-0x1c]
  42ae74:	sub    DWORD PTR [ebp-0x1c],ebx
  42ae77:	and    DWORD PTR [ebp-0x1c],edx
  42ae7a:	sub    ecx,eax
  42ae7c:	or     ecx,ebx
  42ae7e:	cmp    ecx,DWORD PTR [ebp-0x28]
  42ae81:	je     0x42aed1
  42ae83:	cmp    ecx,DWORD PTR [ebp-0x28]
  42ae86:	jne    0x42aed1
  42ae88:	mov    eax,DWORD PTR [ebp-0x1c]
  42ae8b:	add    DWORD PTR [ebp-0x1c],ebx
  42ae8e:	test   ecx,0x2f
  42ae94:	jne    0x42aed1
  42ae96:	sub    eax,ecx
  42ae98:	mov    edi,DWORD PTR [ebp-0x1c]
  42ae9b:	cmp    eax,0xffffffd3
  42ae9e:	jne    0x42aed1
  42aea0:	mov    ebx,DWORD PTR [ebp-0x1c]
  42aea3:	cmp    eax,0x21ef
  42aea8:	jne    0x42aed1
  42aeaa:	xor    DWORD PTR [ebp-0x1c],eax
  42aead:	mov    ecx,0xcc
  42aeb2:	mov    esi,0x9
  42aeb7:	sub    esi,edx
  42aeb9:	sub    DWORD PTR [ebp-0x1c],esi
  42aebc:	cmp    ebx,0xffffffef
  42aebf:	je     0x42aed1
  42aec1:	sub    ecx,edi
  42aec3:	add    DWORD PTR [ebp-0x1c],ecx
  42aec6:	sub    ebx,edx
  42aec8:	cmp    ebx,edi
  42aeca:	jne    0x42aed1
  42aecc:	sub    ebx,edi
  42aece:	or     DWORD PTR [ebp-0x1c],ebx
  42aed1:	push   edx
  42aed2:	xor    ecx,ecx
  42aed4:	sub    DWORD PTR [ebp-0x1c],edx
  42aed7:	sub    DWORD PTR [ebp-0x1c],ecx
  42aeda:	mov    eax,0x7ec332c0
  42aedf:	sub    DWORD PTR [ebp-0x1c],eax
  42aee2:	add    eax,0x813cfd40
  42aee7:	sub    DWORD PTR [ebp-0x1c],eax
  42aeea:	push   eax
  42aeeb:	mov    ecx,0x8d
  42aef0:	cmp    edi,DWORD PTR [ebp-0x18]
  42aef3:	je     0x42aef8
  42aef5:	sub    DWORD PTR [ebp-0x1c],ecx
  42aef8:	push   0x5c9e1
  42aefd:	add    esi,ebx
  42aeff:	mov    eax,0x4f
  42af04:	add    DWORD PTR [ebp-0x1c],ebx
  42af07:	mov    edi,0x8c
  42af0c:	sub    esi,edi
  42af0e:	sub    eax,edx
  42af10:	cmp    ebx,0x75
  42af13:	je     0x42af39
  42af15:	mov    edx,DWORD PTR [ebp-0x1c]
  42af18:	mov    ebx,eax
  42af1a:	sub    edx,eax
  42af1c:	sub    DWORD PTR [ebp-0x1c],esi
  42af1f:	test   edx,0x9e2d
  42af25:	jne    0x42af39
  42af27:	mov    edi,DWORD PTR [ebp-0x1c]
  42af2a:	mov    eax,DWORD PTR [ebp-0x1c]
  42af2d:	or     eax,edx
  42af2f:	or     ebx,edi
  42af31:	and    ebx,edi
  42af33:	sub    DWORD PTR [ebp-0x1c],ebx
  42af36:	sub    DWORD PTR [ebp-0x1c],eax
  42af39:	push   0x0
  42af3b:	add    DWORD PTR [ebp-0x1c],edi
  42af3e:	mov    edi,0xb653a5ab
  42af43:	mov    eax,0x3885a025
  42af48:	add    DWORD PTR [ebp-0x1c],edi
  42af4b:	mov    ebx,0x63
  42af50:	xor    DWORD PTR [ebp-0x1c],ebx
  42af53:	sub    DWORD PTR [ebp-0x1c],edi
  42af56:	add    eax,edi
  42af58:	mov    DWORD PTR [ebp-0x1c],edi
  42af5b:	add    DWORD PTR [ebp-0x1c],eax
  42af5e:	sub    edi,0xb60e86c3
  42af64:	test   edx,0x3f
  42af6a:	je     0x42af7c
  42af6c:	mov    esi,DWORD PTR [ebp-0x1c]
  42af6f:	mov    edx,DWORD PTR [ebp-0x1c]
  42af72:	sub    DWORD PTR [ebp-0x1c],esi
  42af75:	sub    edx,eax
  42af77:	sub    edx,edi
  42af79:	add    DWORD PTR [ebp-0x1c],edx
  42af7c:	call   DWORD PTR [edi]
  42af7e:	mov    edx,DWORD PTR [ebp-0x1c]
  42af81:	cmp    edx,0xebf7
  42af87:	jne    0x42b008
  42af89:	sub    edx,ebx
  42af8b:	and    edx,edi
  42af8d:	add    edx,edi
  42af8f:	cmp    edx,0x43
  42af92:	je     0x42b008
  42af94:	cmp    edx,DWORD PTR [ebp-0x24]
  42af97:	je     0x42b008
  42af99:	cmp    edx,0xffffffc3
  42af9c:	jne    0x42b008
  42af9e:	xor    edi,edi
  42afa0:	mov    esi,DWORD PTR [ebp-0x1c]
  42afa3:	sub    edx,ebx
  42afa5:	and    DWORD PTR [ebp-0x1c],edi
  42afa8:	add    edx,edx
  42afaa:	sub    DWORD PTR [ebp-0x1c],esi
  42afad:	and    edx,ebx
  42afaf:	cmp    edx,eax
  42afb1:	je     0x42b008
  42afb3:	add    DWORD PTR [ebp-0x1c],ebx
  42afb6:	mov    ebx,0x87aa
  42afbb:	mov    ecx,0x8d
  42afc0:	sub    edx,eax
  42afc2:	add    DWORD PTR [ebp-0x1c],edx
  42afc5:	mov    DWORD PTR [ebp-0x2c],ecx
  42afc8:	test   eax,0xb4
  42afcd:	je     0x42afd2
  42afcf:	mov    DWORD PTR [ebp-0x1c],ecx
  42afd2:	add    ebx,esi
  42afd4:	and    ebx,ecx
  42afd6:	add    DWORD PTR [ebp-0x2c],ecx
  42afd9:	cmp    ebx,0xffffff84
  42afdc:	je     0x42b008
  42afde:	mov    ecx,DWORD PTR [ebp-0x2c]
  42afe1:	cmp    ecx,0xffffff94
  42afe4:	je     0x42b008
  42afe6:	and    ebx,edi
  42afe8:	mov    edx,0x9d5a
  42afed:	xor    esi,esi
  42afef:	sub    DWORD PTR [ebp-0x2c],esi
  42aff2:	cmp    ebx,DWORD PTR [ebp-0x30]
  42aff5:	je     0x42b008
  42aff7:	or     DWORD PTR [ebp-0x2c],edx
  42affa:	xor    edi,edi
  42affc:	and    DWORD PTR [ebp-0x1c],ebx
  42afff:	add    DWORD PTR [ebp-0x1c],ecx
  42b002:	add    DWORD PTR [ebp-0x1c],ecx
  42b005:	or     DWORD PTR [ebp-0x2c],edi
  42b008:	mov    DWORD PTR [ebp-0x14],eax
  42b00b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42b00e:	cmp    ecx,0xffffffc9
  42b011:	je     0x42b024
  42b013:	and    ecx,eax
  42b015:	mov    esi,0xda
  42b01a:	and    esi,ebx
  42b01c:	mov    edx,ecx
  42b01e:	sub    DWORD PTR [ebp-0x1c],esi
  42b021:	sub    DWORD PTR [ebp-0x1c],edx
  42b024:	mov    ecx,0x3655b268
  42b029:	mov    ebx,DWORD PTR [ebp-0x1c]
  42b02c:	sub    ebx,ecx
  42b02e:	xor    edx,edx
  42b030:	sub    edx,esi
  42b032:	test   edx,0xd7
  42b038:	jne    0x42b147
  42b03e:	mov    edi,DWORD PTR [ebp-0x1c]
  42b041:	and    ebx,eax
  42b043:	mov    esi,DWORD PTR [ebp-0x1c]
  42b046:	cmp    ebx,DWORD PTR [ebp-0x28]
  42b049:	je     0x42b147
  42b04f:	and    DWORD PTR [ebp-0x1c],ebx
  42b052:	mov    eax,DWORD PTR ds:0x45307c
  42b058:	or     DWORD PTR [ebp-0x1c],ebx
  42b05b:	cmp    esi,DWORD PTR [ebp-0x8]
  42b05e:	jne    0x42b147
  42b064:	mov    ebx,DWORD PTR [ebp-0x1c]
  42b067:	add    esi,eax
  42b069:	cmp    ebx,DWORD PTR [ebp-0x28]
  42b06c:	jne    0x42b147
  42b072:	add    esi,esi
  42b074:	mov    eax,DWORD PTR [ebp-0x1c]
  42b077:	cmp    ebx,0x77
  42b07a:	jne    0x42b147
  42b080:	cmp    ebx,0xc
  42b083:	je     0x42b147
  42b089:	add    eax,ebx
  42b08b:	mov    ebx,DWORD PTR [ebp-0x1c]
  42b08e:	mov    DWORD PTR [ebp-0x1c],esi
  42b091:	sub    DWORD PTR [ebp-0x1c],ebx
  42b094:	mov    ebx,esi
  42b096:	cmp    eax,DWORD PTR ds:0x45307c
  42b09c:	jne    0x42b147
  42b0a2:	xor    esi,esi
  42b0a4:	sub    edx,ecx
  42b0a6:	and    esi,edi
  42b0a8:	mov    edi,DWORD PTR [ebp-0x1c]
  42b0ab:	sub    ebx,edx
  42b0ad:	or     DWORD PTR [ebp-0x1c],esi
  42b0b0:	test   edi,0x2c
  42b0b6:	je     0x42b147
  42b0bc:	add    edi,ecx
  42b0be:	or     DWORD PTR [ebp-0x1c],edx
  42b0c1:	mov    esi,DWORD PTR [ebp-0x1c]
  42b0c4:	cmp    ebx,0xfffffffc
  42b0c7:	jne    0x42b147
  42b0c9:	and    edi,eax
  42b0cb:	mov    edx,0x1e
  42b0d0:	cmp    edi,edx
  42b0d2:	jne    0x42b147
  42b0d4:	sub    ebx,esi
  42b0d6:	mov    esi,0x6b
  42b0db:	cmp    eax,DWORD PTR ds:0x45307c
  42b0e1:	je     0x42b147
  42b0e3:	cmp    ebx,DWORD PTR ds:0x45307c
  42b0e9:	jne    0x42b147
  42b0eb:	cmp    edi,0x19
  42b0ee:	je     0x42b147
  42b0f0:	cmp    ebx,DWORD PTR ds:0x45307c
  42b0f6:	jne    0x42b147
  42b0f8:	mov    eax,DWORD PTR ds:0x4530ac
  42b0fe:	xor    esi,esi
  42b100:	sub    edi,esi
  42b102:	and    edi,edx
  42b104:	xor    DWORD PTR [ebp-0x1c],ebx
  42b107:	add    edi,ebx
  42b109:	add    edi,edi
  42b10b:	sub    edi,edx
  42b10d:	sub    edi,ebx
  42b10f:	cmp    edi,DWORD PTR [ebp-0x24]
  42b112:	jne    0x42b147
  42b114:	sub    DWORD PTR [ebp-0x1c],edi
  42b117:	cmp    edi,0x68e9
  42b11d:	je     0x42b147
  42b11f:	mov    edi,DWORD PTR [ebp-0x1c]
  42b122:	add    DWORD PTR [ebp-0x1c],eax
  42b125:	sub    edi,ebx
  42b127:	mov    esi,DWORD PTR [ebp-0x1c]
  42b12a:	xor    DWORD PTR [ebp-0x1c],esi
  42b12d:	add    edi,ebx
  42b12f:	and    edi,ebx
  42b131:	test   edi,0xdc
  42b137:	jne    0x42b147
  42b139:	xor    edx,edx
  42b13b:	sub    DWORD PTR [ebp-0x1c],edi
  42b13e:	mov    ebx,DWORD PTR [ebp-0x1c]
  42b141:	add    DWORD PTR [ebp-0x1c],ebx
  42b144:	or     DWORD PTR [ebp-0x1c],edx
  42b147:	add    ecx,0xc9ef7d98
  42b14d:	and    edi,edx
  42b14f:	mov    eax,DWORD PTR [ebp-0x1c]
  42b152:	add    DWORD PTR [ebp-0x1c],eax
  42b155:	mov    esi,0xba94
  42b15a:	sub    edi,edx
  42b15c:	sub    esi,edi
  42b15e:	cmp    esi,0xc0009008
  42b164:	je     0x42b1fd
  42b16a:	cmp    esi,DWORD PTR ds:0x45307c
  42b170:	je     0x42b1fd
  42b176:	mov    eax,DWORD PTR [ebp-0x1c]
  42b179:	mov    ebx,0x4102
  42b17e:	cmp    eax,0xffffffb1
  42b181:	jne    0x42b1fd
  42b183:	mov    edi,0x40981088
  42b188:	add    eax,edx
  42b18a:	test   eax,0x9d
  42b18f:	je     0x42b1fd
  42b191:	mov    edx,DWORD PTR [ebp-0x1c]
  42b194:	sub    esi,edi
  42b196:	xor    DWORD PTR [ebp-0x1c],edx
  42b199:	mov    edx,DWORD PTR [ebp-0x1c]
  42b19c:	cmp    eax,DWORD PTR [ebp-0x4]
  42b19f:	je     0x42b1fd
  42b1a1:	and    eax,ebx
  42b1a3:	and    esi,ebx
  42b1a5:	xor    ebx,ebx
  42b1a7:	mov    edi,DWORD PTR [ebp-0x1c]
  42b1aa:	sub    DWORD PTR [ebp-0x1c],edx
  42b1ad:	add    ebx,esi
  42b1af:	cmp    edi,0xffffffc8
  42b1b2:	je     0x42b1fd
  42b1b4:	mov    edx,DWORD PTR [ebp-0x1c]
  42b1b7:	test   esi,0xc4
  42b1bd:	je     0x42b1fd
  42b1bf:	mov    DWORD PTR [ebp-0x1c],edx
  42b1c2:	add    eax,ecx
  42b1c4:	add    DWORD PTR [ebp-0x1c],edx
  42b1c7:	sub    eax,edx
  42b1c9:	add    DWORD PTR [ebp-0x1c],eax
  42b1cc:	mov    esi,DWORD PTR [ebp-0x1c]
  42b1cf:	mov    edx,0xfa
  42b1d4:	xor    DWORD PTR [ebp-0x1c],edi
  42b1d7:	sub    esi,edx
  42b1d9:	cmp    esi,DWORD PTR [ebp-0x8]
  42b1dc:	jne    0x42b1fd
  42b1de:	sub    ebx,ecx
  42b1e0:	or     ebx,edx
  42b1e2:	xor    edx,edx
  42b1e4:	and    esi,eax
  42b1e6:	xor    edi,edi
  42b1e8:	add    edi,edx
  42b1ea:	or     DWORD PTR [ebp-0x1c],ebx
  42b1ed:	cmp    esi,0x601c000c
  42b1f3:	jne    0x42b1fd
  42b1f5:	add    edi,eax
  42b1f7:	sub    DWORD PTR [ebp-0x1c],edi
  42b1fa:	add    DWORD PTR [ebp-0x1c],esi
  42b1fd:	mov    DWORD PTR [ebp-0x10],ecx
  42b200:	test   esi,0x47
  42b206:	jne    0x42b246
  42b208:	xor    esi,esi
  42b20a:	sub    esi,ebx
  42b20c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42b20f:	add    esi,ebx
  42b211:	add    DWORD PTR [ebp-0x1c],ecx
  42b214:	test   esi,0xf2
  42b21a:	jne    0x42b246
  42b21c:	test   ebx,0x5d
  42b222:	jne    0x42b246
  42b224:	sub    esi,ebx
  42b226:	mov    ecx,DWORD PTR ds:0x453060
  42b22c:	mov    edx,DWORD PTR [ebp-0x1c]
  42b22f:	mov    DWORD PTR [ebp-0x1c],edx
  42b232:	cmp    edx,ecx
  42b234:	jne    0x42b246
  42b236:	sub    ecx,eax
  42b238:	mov    ebx,DWORD PTR [ebp-0x1c]
  42b23b:	sub    ecx,edx
  42b23d:	sub    DWORD PTR [ebp-0x1c],ecx
  42b240:	sub    DWORD PTR [ebp-0x1c],esi
  42b243:	add    DWORD PTR [ebp-0x1c],ebx
  42b246:	mov    edi,DWORD PTR [ebp-0x14]
  42b249:	xor    ebx,ebx
  42b24b:	sub    ebx,esi
  42b24d:	sub    ebx,edx
  42b24f:	xor    DWORD PTR [ebp-0x1c],edi
  42b252:	cmp    ebx,0xffffffd4
  42b255:	je     0x42b27e
  42b257:	cmp    ebx,DWORD PTR [ebp-0x38]
  42b25a:	je     0x42b27e
  42b25c:	mov    edx,DWORD PTR [ebp-0x1c]
  42b25f:	and    DWORD PTR [ebp-0x1c],edx
  42b262:	cmp    ebx,DWORD PTR ds:0x453060
  42b268:	jne    0x42b27e
  42b26a:	mov    ecx,0x13d3
  42b26f:	sub    DWORD PTR [ebp-0x1c],ebx
  42b272:	xor    ecx,ecx
  42b274:	and    edx,eax
  42b276:	sub    DWORD PTR [ebp-0x1c],edx
  42b279:	add    ecx,esi
  42b27b:	xor    DWORD PTR [ebp-0x1c],ecx
  42b27e:	or     esi,edx
  42b280:	cmp    esi,DWORD PTR [ebp-0x18]
  42b283:	jne    0x42b2ab
  42b285:	mov    ecx,0x23
  42b28a:	mov    ebx,DWORD PTR [ebp-0x1c]
  42b28d:	or     ecx,ebx
  42b28f:	test   esi,0x17
  42b295:	jne    0x42b2ab
  42b297:	xor    ebx,ebx
  42b299:	add    ecx,ecx
  42b29b:	sub    ecx,ebx
  42b29d:	cmp    esi,0xffffffea
  42b2a0:	jne    0x42b2ab
  42b2a2:	or     DWORD PTR [ebp-0x1c],ebx
  42b2a5:	mov    DWORD PTR [ebp-0x1c],ecx
  42b2a8:	add    DWORD PTR [ebp-0x1c],esi
  42b2ab:	mov    ebx,DWORD PTR [ebp-0x10]
  42b2ae:	cmp    ebx,DWORD PTR [ebp-0x18]
  42b2b1:	je     0x42b2cd
  42b2b3:	xor    esi,esi
  42b2b5:	cmp    ebx,0xb50a
  42b2bb:	je     0x42b2cd
  42b2bd:	mov    ecx,eax
  42b2bf:	sub    DWORD PTR [ebp-0x1c],ebx
  42b2c2:	sub    DWORD PTR [ebp-0x1c],edi
  42b2c5:	mov    DWORD PTR [ebp-0x20],ecx
  42b2c8:	add    esi,ebx
  42b2ca:	sub    DWORD PTR [ebp-0x20],esi
  42b2cd:	mov    esi,DWORD PTR [ebx]
  42b2cf:	add    ecx,edx
  42b2d1:	cmp    ecx,DWORD PTR ds:0x45307c
  42b2d7:	je     0x42b2f2
  42b2d9:	add    ecx,edx
  42b2db:	sub    DWORD PTR [ebp-0x1c],esi
  42b2de:	add    ecx,ecx
  42b2e0:	cmp    ecx,0xcf39
  42b2e6:	jne    0x42b2f2
  42b2e8:	and    ecx,eax
  42b2ea:	cmp    ecx,DWORD PTR [ebp-0x1c]
  42b2ed:	je     0x42b2f2
  42b2ef:	add    DWORD PTR [ebp-0x1c],ecx
  42b2f2:	mov    ecx,DWORD PTR [ebx+0x4]
  42b2f5:	xor    ebx,ebx
  42b2f7:	cmp    ecx,DWORD PTR [ebp-0x1c]
  42b2fa:	je     0x42b31f
  42b2fc:	and    ebx,eax
  42b2fe:	cmp    ebx,0xea07
  42b304:	je     0x42b31f
  42b306:	sub    DWORD PTR [ebp-0x1c],eax
  42b309:	cmp    ebx,DWORD PTR [ebp-0x30]
  42b30c:	je     0x42b31f
  42b30e:	sub    ebx,edx
  42b310:	sub    ebx,ecx
  42b312:	cmp    ebx,DWORD PTR ds:0x453060
  42b318:	je     0x42b31f
  42b31a:	add    ebx,esi
  42b31c:	add    DWORD PTR [ebp-0x1c],ebx
  42b31f:	or     esi,esi
  42b321:	je     0x42b33f
  42b323:	mov    ebx,0x30
  42b328:	and    DWORD PTR [ebp-0x1c],ebx
  42b32b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b32d:	mov    DWORD PTR [ebp-0x1c],ecx
  42b330:	add    DWORD PTR [ebp-0x10],0x8
  42b334:	mov    ebx,DWORD PTR [ebp-0x1c]
  42b337:	add    DWORD PTR [ebp-0x1c],ebx
  42b33a:	jmp    0x42b249
  42b33f:	cmp    ebx,0x1
  42b342:	jne    0x42b36d
  42b344:	mov    edx,DWORD PTR [ebp-0x1c]
  42b347:	and    edx,edi
  42b349:	mov    ecx,DWORD PTR [ebp-0x1c]
  42b34c:	sub    DWORD PTR [ebp-0x1c],ecx
  42b34f:	cmp    edx,ecx
  42b351:	je     0x42b36d
  42b353:	mov    edi,DWORD PTR [ebp-0x1c]
  42b356:	sub    edi,ebx
  42b358:	mov    eax,0x41
  42b35d:	and    edx,eax
  42b35f:	cmp    edi,DWORD PTR ds:0x453060
  42b365:	jne    0x42b36d
  42b367:	xor    DWORD PTR [ebp-0x1c],edi
  42b36a:	add    DWORD PTR [ebp-0x1c],edx
  42b36d:	cmp    edx,eax
  42b36f:	jne    0x42b376
  42b371:	xor    edi,edi
  42b373:	sub    DWORD PTR [ebp-0x1c],edi
  42b376:	mov    eax,DWORD PTR [ebp-0x14]
  42b379:	mov    edi,edx
  42b37b:	xor    DWORD PTR [ebp-0x1c],eax
  42b37e:	mov    ecx,0x3fb3
  42b383:	add    DWORD PTR [ebp-0x1c],edi
  42b386:	sub    ecx,eax
  42b388:	sub    ecx,eax
  42b38a:	cmp    ecx,0x9047
  42b390:	jne    0x42b3b3
  42b392:	mov    edi,0x41
  42b397:	sub    DWORD PTR [ebp-0x1c],edi
  42b39a:	sub    DWORD PTR [ebp-0x1c],edi
  42b39d:	or     ecx,edx
  42b39f:	add    DWORD PTR [ebp-0x1c],edx
  42b3a2:	mov    ebx,0x7d
  42b3a7:	sub    ebx,edx
  42b3a9:	sub    ebx,eax
  42b3ab:	add    DWORD PTR [ebp-0x1c],ebx
  42b3ae:	and    ecx,edi
  42b3b0:	add    DWORD PTR [ebp-0x1c],ecx
  42b3b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  42b3b6:	xor    edx,edx
  42b3b8:	cmp    ecx,0x89d5
  42b3be:	je     0x42b3cd
  42b3c0:	mov    ebx,edi
  42b3c2:	or     DWORD PTR [ebp-0x1c],ebx
  42b3c5:	sub    edx,edi
  42b3c7:	or     DWORD PTR [ebp-0x1c],edx
  42b3ca:	add    DWORD PTR [ebp-0x1c],ecx
  42b3cd:	pop    edi
  42b3ce:	mov    ebx,DWORD PTR [ebp-0x1c]
  42b3d1:	cmp    ebx,DWORD PTR ds:0x453060
  42b3d7:	je     0x42b3f9
  42b3d9:	sub    ebx,eax
  42b3db:	mov    edx,0x95
  42b3e0:	mov    esi,0x5e
  42b3e5:	or     DWORD PTR [ebp-0x1c],edi
  42b3e8:	add    ebx,ebx
  42b3ea:	and    edx,ebx
  42b3ec:	cmp    edi,edx
  42b3ee:	jne    0x42b3f9
  42b3f0:	sub    DWORD PTR [ebp-0x1c],esi
  42b3f3:	sub    DWORD PTR [ebp-0x1c],esi
  42b3f6:	sub    DWORD PTR [ebp-0x1c],edx
  42b3f9:	pop    esi
  42b3fa:	and    edx,edi
  42b3fc:	test   esi,0xe3
  42b402:	jne    0x42b420
  42b404:	cmp    ecx,0xffffffe3
  42b407:	jne    0x42b420
  42b409:	cmp    eax,DWORD PTR ds:0x4530ac
  42b40f:	je     0x42b420
  42b411:	add    edx,edi
  42b413:	mov    ecx,DWORD PTR [ebp-0x1c]
  42b416:	sub    edx,ecx
  42b418:	cmp    edx,0xffffff9b
  42b41b:	je     0x42b420
  42b41d:	sub    DWORD PTR [ebp-0x1c],edx
  42b420:	pop    ebx
  42b421:	mov    edx,DWORD PTR ds:0x453080
  42b427:	sub    DWORD PTR [ebp-0x1c],edx
  42b42a:	leave  
  42b42b:	ret    
	...
